mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop or adc ds repz sbb jo mov pop push dec bound arpl pop sbb mov shl jae insl add pcmpgtd mov jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp idivl popa adc xor int3 inc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp fcoms adc scas dec jo loope jmp shrd daa daa test mov daa pushf rcrb nop mov daa cmpb daa daa daa jo insb push fs int3 daa daa daa daa pusha pop in daa daa daa daa fcompl push clc lock daa dec push add mov (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) dec inc inc cmp jb jb xor sub out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub inc mov loop ret mov pop pop xchg dec pop xchg test shlb xchg sbb add in lds pop and gs inc je addr16 add xor adc jmp mov sbb xchg sahf sbb fistpl push cmp popa jne add adc ljmp insb cmp jg adc test jns add jne loopne sar test mov adc hlt mov add sbbb cmp mov dec fadd jb add or or cmp (bad) (bad) call adc xchg lea cmp jl movl pop repnz jb sahf es divb lret or mov and add out not sub test cld dec adc adc popf fist je insb or push or push sar mov xchg or ret decb fistpl (bad) xor adc call fisubl (bad) sub inc aas jg sti outsl enter je mov sub cmp xor popf popa cmp (bad) or cmp xor add fcmovnbe outsl out mov clc add and repz bound mov decb xlat cmc adc add dec xor dec (bad) mov jo add or sub cld jg stos jg test sub sub cmp jge mov xchg adc out insb jmp daa xlat or inc add mov in mov aad test fldcw (bad) lds stos clc add sti jae lea (bad) xor jnp or xchg (bad) cmc push sub mov add sub pop cmp aaa adc ds enter push sbb sbb cmp inc cmp inc adc push pop add sub cmp in cmp push test adc add pop (bad) sub mov sbb adc or mov push movb daa or adc sub or mov sbb call add mov inc mov mov loopne mov sbb push mov cmp pusha cld cltd adc xchg lods sub add adc repz xor sub sbb jl les adc add aaa out subl add or mov cld adc adc loopne pop mov pop mov sbb fadds pusha pop pop adc pop int3 (bad) rcl sbb pop ret pusha or xor pop mov sar cmp stos jg adc jne mov push xor ljmp xor mov sbb test in (bad) cmpsl lock pop mov pop ds pop jmp sub sbb push jne sbb mov mov jle fistpll jne movsb sub cmpl bound dec sbb hlt inc add xor dec (bad) loope sub je shrb xor mov pop inc and ljmp repnz jne xlat roll xor cmp adc test add mov loopne mov int3 sti clc stos jle jg jg inc cld jbe addr16 push push mov add or sti mov push mov add jg sbb pop or mov add pop inc scas (bad) jne push lock pop or xor mov cmp mov fcoml cmpsb push add or sbb jbe jmp loopne push lahf cmp sarl sub mov add arpl sbb das pop jmp inc (bad) arpl and ret pop pop push push sbb cmc sub or dec out sub jo xor or insb negb mov test jne test ja (bad) or movnti add push add loope push or mul mov add (bad) jge mov adc cmp icebp andl push int3 xchg mov cmp stos rolb pop in andl cmp fisttp mov testb sahf lock sbb cli scas ljmp inc (bad) or orl jmp mov cmpl jo in adc push adc or adc pusha (bad) sbb and pop or pop mov jg add pop jg add repnz fsub (bad) mov loop push (bad) jge loope add cmp cmp lock adc xchg adc sbbl notb clc xor mov jnp jge lea cmp add negl add sbb shll sbb sbb mov cmp imul (bad) sub fnsave cmpl iret adc in pop (bad) hlt xor dec daa add inc lahf add add dec or icebp mov pop pop test add cmp ret add orl pop mov rorb mov or lock lret pop sbb je add pop mov add ret add mov nop xchg in inc rolb sbb cmpsb push push ret hlt lret or mov movhps mov sbb jne,pt (bad) ss adc xchg ret (bad) mov push mov (bad) add mov ss adc mov add sub mov mov ret test call jge cmp or xor mov dec jae cmp je je mov loopne mov test je sbb enter dec jnp pop or add push jmp out xor add outsl jo xlat (bad) repz push mov loopne cmpl pop mov push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov hlt jle mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor jnp mov ds inc mov fldcw movnti pop push sub fist fwait pop pop xor push mov push test aad das mov shl cs (bad) mov add sub sub mov (bad) mov stos jmp fsubr sbb jmp mov sti jge je cmp and mov xchg adc inc (bad) or pop pushl mov cmp mov ja and idivb jb push sbb lock adc imul sti dec dec std movsl data16 call das mov cmp mov lret mov inc inc and xchg pop xchg push xor mov mov inc inc dec ja add push shr je mov cmpsb pop and cmp jne dec mov sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp jne cltd push icebp or jmp add jl (bad) push mov shr or int3 in dec pop cmp shl mov inc pop and mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivl int loopne data16 stos pop aaa in popa adc pop daa push js jge fisttpl sub mov push inc pusha and add dec jae or je or je and je push imul xor dec and clc (bad) fsubp je jmp or or cmp ja lea mov add push es int or jge jmp inc jle mov jle dec pop sub jmp inc inc jmp mov jbe push je (bad) popa jb xchg and jbe push adc or pop add aad cwtl pop xor mov xorl (bad) mov mov push cmp cmp push inc mov dec xchg jecxz loop repz decb inc into into pop repz mov fist sbb fs je adc fbstp mov adc lea fldt jbe (bad) fisub add je das sbb cmp je push and jmp movsb xor mov xor xchg push cmpsb stc sbb jmp fstp fldt loope call (bad) xchg arpl (bad) sub adc dec push repnz add add pop stc in or ret mov adc jl and mov out sbb das (bad) in xchg xchg and inc mov mov lock jle fistpl es test out sub pop iret scas cld lret add leave sbb mov iret (bad) cld jbe imul cmp mov (bad) mov bound aaa jmp fild xlat fadds outsb xor xchg push or (bad) mov test into sbb rorl mov push pop test enter ljmp outsl movsl push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl or mov addr16 leave repnz bound and cld gs sahf mov (bad) pushl test lds iret decl js inc mov stos mov cmp (bad) (bad) (bad) jmp xchg test stos pop out sub imul (bad) divl jl xor cmp (bad) ljmp (bad) call mov sti jmp stos push inc mov push sbb sarb (bad) jmp int3 repnz test nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov (bad) (bad) (bad) jmp fs aam imul loope jp iret inc bound ds push cmpsb scas (bad) (bad) (bad) jmp pop or addl cmp xor in cmp (bad) out cli lcall mov mov popa movsb mov and addr16 repz mov mov outsb fwait xchg and and outsb bound xor jmp or pop adc clc add jne push pop and add xor mov jg cmp movzwl mov (bad) lea push push inc or cmc or xor push push cld (bad) mov mov movl out ds cmpsb data16 add mov mov test (bad) mov mov jmp push clc pop aas outsw xor or leave mov adc inc push (bad) (bad) (bad) call push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa jae push sahf jo loope insb jne fninit fwait sub (bad) mov loopne decl mov inc ret or clc jg ljmp or dec cld jne dec mov xor mov fbstp lcall jo insl inc fcompl fcmovu fisttp and sbb pop aaa push (bad) and or fsubrs rorb decb and push jp cmp (bad) repnz pop and mov jbe xor pop mov incl push cld fimul dec fdivs rclb mov push clc add stos pop (bad) mov or push mov cmp mov jmp cmp je pop mov add (bad) es sbb movb jnp mov push sbb pop test cmp outsl lods (bad) mov mov dec xorl fdivrs cld push inc jmp stc cmpsb jae lgdtl push std (bad) jb shufps and loope (bad) aad mov add add pop jo lahf inc (bad) push or mov or mov dec frstor adc fimul fcom and xor add mov (bad) mov add push mov push add pop (bad) ret in pop push sbb and out cmp push (bad) dec setne lahf pop mov in dec popf lock xor push push mov aaa rcrl jne jb cmp mov push or jne or ret cwtl push inc inc fcoml mov das and add adc call pusha sbb rclb rorl mov leave jne loope loop mov ret nop push xchg jmp lret xchg fwait mov push add repnz je pop in jno incl sbb pop add sub mov pop cs neg jno xchg add mov out mov sbb pushf sbb cmp mov mov jp les lods mov xchg xor cld pop inc mov (bad) rclb lods pop pop clc push mov icebp pop mov popa lock pop dec out dec add decl bound je movb dec push cmp sbb add dec jne icebp cmpsb jmp sbb add sbb jecxz sub cmp scas lahf push popf enter cmp push sbb imul call in push pop add mov jl call add hlt xor (bad) adc mov mov movl or or ficompl push movsb sub sub or cmpsl cmpsl pop adc mov push (bad) pop test push jo adc push clc pop sbb fwait inc jg jg mov xchg cmpb icebp pop rolb pushf (bad) in push call mov pop pop push pusha push push lcall or add jns,pn add or imul data16 xlat pop push push and mov mov cmpb je or jne movsbl inc insb pusha push inc jmp add (bad) xor shll jecxz popw add add (bad) popa addl cmp (bad) clc dec aaa insl jecxz pop (bad) mov add test faddl push ss ljmp cli and jmp orb icebp pop lods test (bad) sub cmpl je dec je aaa lock ja inc jbe add add arpl mov enter adc jne push jne push lea or jo cli push jns je orl movsl rolb cli push sbb pop sbb cmp sub movsb or mov imul outsl or jl dec movl pop (bad) jmp jle das hlt cmpsl lahf mov mov or aam or cmp xchg push add lret push mov cwtl or pop push or je add lds mov out fbld mov addb cmp jne inc pop test mov xchg in (bad) or mov jg pushw jno mov push (bad) xor out loop outsl inc jmp sbb sbb imul sub adcl shll mov add xchg aaa pop adc inc loope or dec or jo inc icebp mov arpl popf pop popa xor add cmp push (bad) test mov and std iret cs push push push push push mov push jns and pop es mov sahf sub or pusha add (bad) or sbb dec fistp (bad) ss aaa mov pop mov mov cmc lea jae mov hlt mov pop and xor push loope xor loop mov xchg ret das mov add sub sub pop cmp push sub fbld xchg jmp add sub jb je jmp cmp xchg push adc sub adc jmp sub std sbb es mov jmp mov jmp mov jmp mov jmp loopne (bad) jg sbb into jmp mov jmp mov jmp mov jmp mov aam or xchg push or dec inc mov pop ss mov jecxz lea (bad) je lods push insl jb outsl jp idivb mov test mov or inc sbb cli pop out in rorb sti and sbb mov sub xor push daa je xor pop xchg (bad) inc or cmpl cmp mov sub sbb cmp jbe push xor (bad) aaa repnz cmp jne and (bad) mov mov mov mov and incb loopne and mov inc fiadd adc dec (bad) call and mov adc pop add mov shll les dec mov mov xor in fnop cmp jle add (bad) sbb sbb in mov mov adc add out add jp cmp lcall mov mov push test xor pop xchg repnz subb jp cmp sbb xchg add add in pop ss jne pop pop pop inc pop sbb cmp add out icebp popa sar add mov xchg or mov icebp nop mov lods jg cmp mov add add rcr cmp mov es jne mov sbb add sarb mov mov push push ss ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push data16 adc cmpw clc adc cmp mov mov xor stos jmp push push add pop adc add cmp xor jbe xor jecxz adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or jne pop ret mov hlt lock sub icebp xor add jecxz rorl out fsub or cmp fldl es insl inc popa insb jne mov push add mov push jo inc (bad) adc lock testb ffree pop push sub push fwait out insl sbb popl je hlt pushf mov pop jp std push mov adc decl push lea aaa nop adc daa push out (bad) mov popa xchg inc jle sbb add or into mov fcmovu dec and sti pop jbe inc jg cmp cmp mov pop push jmp std dec dec sbb insb xchg adc test mov push je testl rcr (bad) push sub pop movw add xchg pop mov sub insl rorl and iret mov das roll loopne ds cmp and mov das or cmp mov (bad) xchg push push mov push push adc push cmp sarb rol lret mov (bad) cmp addr16 (bad) cld leave clc fdivrs bound jmp lea cmp push jnp addps into mov ds jne out jbe cld jmp fldl fistpl xor fmuls negb sbb add cmp test push mov mov sahf mov nop xor ret cmp je lcall add mov loopne call pop sub jmp pop cmpsl pop sub and mov pop or or addr16 in inc jnp,pt add push or mov add cli repnz pusha rcrl rcrl xlat pop stos clc mov push and in mov push cmp jl aam inc mov pop add (bad) xchg aas pop add jle add mov loope or jns push cld add cmp imul add and mov adc xchg cmp das sub jne out popa cmpl je cmp subl pusha sub mov scas rorl add (bad) fisttp dec mov cli lds push mov mov sbb dec clc cmpb lret or mov jle xor mov fmuls mov dec jmp aaa ret mulb sub add cmp fs dec jne add or pop out ja jge ljmp add dec jmp and inc pushf sbb loopne ret mov ss add pop dec jne dec pop lds mov or add jo pop or xchg jmp xchg hlt push rolb push pop jo imull (bad) imul pop enter dec and (bad) je cmp cmp xchg push and or pop and jmp aam mov mov movsl repnz push clc inc das lods out add add lahf cmp lds push (bad) cmc mov mov sti pop adc dec inc daa add mov pop mov out fdivr sbb xor cmpsb sub (bad) aaa pop es jl cmp jge sub scas sbb jg push fnsave add shr in jmp and jecxz mov int3 xor mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov dec jmp jmp xor mov push insb dec js mov inc or insl jb adc adc roll (bad) xor pop faddl mov mov (bad) out inc nop pusha xlat push add clc jg dec out and sbb mov loopne clc pop sub xor adc lods jmp out stos pop in insl (bad) arpl cli pop cmp fisubrl test icebp pop and ret push push test jb fildl push sub das in rorb scas loopne mov mov movsl cmpsl cmpsl in push and call inc shrb shrb in jno jle add xor jmp js jae pop dec jle fcoms ffree aaa xor loopne sbb push lock dec push lock push das int3 mov add orb and ret add add add dec pusha ss outsl add add push inc sbb add jb adc jl push push inc adc orb in fcmove cmpsb add pushaw and push cvtps2pd or sar sbb loope push sarb jge (bad) lock dec cmp nop pushf lcall sub cmp push lods add add or sub xor lcall adc stos add in jne add xchg mov fmull or add je mov adc inc pop sbb mov aaa aaa test dec cmc sbb mov mov xor mov std (bad) (bad) cmp je cmp je cmp je cmp je cmp je cmp into cmp je mov stos fwait dec mov clc jmp adc or out mov jmp xchg aad push or pop jo,pn cs adc cmp pop jmp cmpsb cmp repnz push pop in inc xchg mov (bad) or pop call adc mov xchg push xchg cmc ret out sahf out and push pop (bad) push mov sti dec xor bound push je and lret cmp addb xor push and sbb jmp in jl mov inc cmp pushf subb test test dec mov cmp stos vpmulhw sbb jmp ljmp adc mov lea fldl add clc push push add sarl inc push mov add loope lods loope lds pop push mov cmp xor sbb pop dec or sbb rorl jo pusha add adc and jo sbb mov in add popa pop or jmp and in lea cmpb push js add inc dec (bad) fimul cmp pop jmp aas add rcrl cwtl xor xlat inc adc les ds cmp scas in jne add mov add mov clc sub imull mov in mov push popa jge xor push pushf clc in imul mov cmp imulb test in std adc les mov add es ja sti add jno popf fiaddl aaa inc ljmp out js inc add add je cmp push rorb dec ror or and int3 lock adc in pop mov nop mov xlat rcr pop imul rcrl sbb lahf adc adc pop pop ret sbbl mov xchg cmp dec (bad) jne cmp lock mov hlt add inc push mul push mov repnz mov sbb mov test jg cs mov mov ss lods in cmp inc push lock inc scas push push fiaddl add (bad) cld push xor call add push je test mov imull dec in in cmp inc popa fdivs adc cmp jne mov cmp jge pop sbb mov xchg add mov loope loopne sub add lea mov mov pop jmp decl stos scas mov rcl adc in xchg jge or push in test jnp mov dec in push pushf adc into stos inc int inc in dec push dec (bad) mov mov xrelease mov mov fbstp adc cmpl jle adc mov xchg dec jo and bsr paddq cmp mov inc push dec jne enter mov cmp mov push adcl and inc xor decl jne inc cwtl data16 push in xchg bound sahf adc pop dec adcl cmp scas adc dec lock pop loopne push push lock out pop pop mov and add in sbb cltd jecxz loope enter lcall mov jp dec (bad) ds add js inc jnp jne push clc daa and mov mov andl or pop inc adc jbe pop sbb mov push push xor aad or or popf (bad) jmp ret adc jecxz jmp sbb push jge cli pop jne ds mov js shr clc popa xchg ficomp cmp pop push push dec lock and or pop test je mov rcll lods cltd add sub ja fildl sbb js pop fwait scas jecxz and jl pop add mov mov out xor shlb insb jnp jge add inc add xor jno (bad) sub add inc notb mov cmp inc push push gs (bad) xor imul int or and je ja daa (bad) xor (bad) cwtl lea ret fwait mov fstpt push movb ret dec push push mov inc mov mov push repnz (bad) aas shrl jae imul gs xor cs insb jo incl inc gs outsl outsb addr16 popa je dec popa insl gs daa pop mov mov sbb neg pop ret fnstsw movb int3 push sbb add xchg mov and addb jl out jne cmp push mov call push out inc stc cmpsl (bad) popf int aas iret faddl mov repnz jl inc xchg sti and popf std xlat xor repz js push xor cmpb test nop jge call xlat or push sarl and cmpsb pop xchg sbb add cmp stos pop cmp mov lock inc xor mov adc rcrb (bad) rorb push sub mov push je das outsl repz bound push xor cmc add mov mov (bad) outsl data16 popa jb int and outsl mov jae aaa (bad) in pop pop cmpsl inc and add cltd inc in ja or addb (bad) mov shrb add xor dec pop mov push mov sbb mov adc lds (bad) push mov mov add mov fdivrs (bad) dec sub mov mov dec or lods push (bad) fnstcw push fsubrp (bad) cli mov and xor sub pushf ret inc dec add cmp inc cltd or les xchg (bad) push mov dec popa mov (bad) int3 loop jno cmp insb cmp aas and mov jne in jmp ret mov adc push cld jne sbb cmpsb cmpsb ljmp pushl and sbb mov push sub or mov insl fwait test sahf je sbb cwtl mov xchg push push mov lahf add pop mov dec pop sbb fimul pop pop ret sbb or xor sbb loope mov push test fidiv mov mov xor mov ss add insb mov (bad) mov mov dec js inc (bad) or sub loope adc addr16 xlat movsb mov pop sub addr16 imul sbb add dec inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or jg mul mov adc sbb and lret sarb and and (bad) dec jnp pusha rolb mov or cmp jb or dec movb loopne adc mov dec rcrl add cmp lea test roll mov hlt mov mov mov pop (bad) push mov hlt inc dec adc inc das clc das fdivrs push hlt cli mov inc test je or jae adc je cmp adc repz add cmp jne std cmpps loope or mov std ja mov dec dec cld mov or push and push adc inc lcall ds jo adc or xlat pop fdivrl inc inc inc mov sub and mov ss cli xorb sbb test xchg inc sbb inc mov mov scas mov loope pop pop cs das cmp dec xchg adc mov loop aas (bad) jbe and pop xor inc push and cmc xchg dec xor pop pop add mov dec xor fldenv jmp adc or stc push add rcl push popf pusha mov and or sbb add ss and pop repnz mov inc xor dec inc inc xor outsb sbbl in sbb xor or mov cmp add (bad) cmp insb lahf or sbb test inc bound cmpl clc jge push add shrb mov divps icebp or add jo cmpl sbb lock pop push js std pop lea push push mov mov push mov or sbb es je push fdivrl add jae popa loop out xchg add fs pushl and mov bnd adc inc or mov (bad) subl push sbb movb fldt xlat xor inc add dec pop sbb lods mov data16 xlat out mov inc call cmp mov jl add in sub stos iret cmp jbe mov dec jmp jge and ds mov adc mov clc inc loope in hlt (bad) in push push cmc rolb dec or loope mov inc cmpl or clc loop mov and jmp push mov out call or sti test leave jne mov jns push sbb add mov fmull movsb inc xchg enter cmp arpl in fsubl test cmp sahf imul push das (bad) dec repnz pop xor adc cmp cmp xor mov and (bad) mov or out rolb enter jb mov dec push or test xorb fwait clc add xor cs (bad) ljmp push gs into gs (bad) adc inc imul inc push pop imul outsl arpl inc gs jne je dec outsl je out jbe dec imul mov gs outsl inc arpl xor adc ret or jb (bad) mov pop xor (bad) outsl insl bound outsl js imul ljmp outsl ja nop jo cmp andps outsb dec inc xor xor js push je dec add or mov stc (bad) add or add dec clc (bad) jb jb lock call in fnop aas dec push in aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb xchg inc dec dec adc push daa and unpcklps or outsb daa daa add dec clc pmuludq call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and dec inc sahf nop push mov dec je insb jl dec dec dec mov dec pusha pop pop push dec dec dec dec push dec dec inc dec dec dec dec inc cmp xor dec dec dec xor and dec dec dec and adc dec dec dec adc add and add push clc hlt daa daa daa daa lock call daa loopne fcom dec outsb daa daa ror mov dec dec sarb mov test dec dec dec dec mov dec dec dec nop mov dec cmpb dec dec dec jo push dec pusha pop pop push leave leave in inc push cmovl enter inc cmp pushf pushf pushf pushf xor sub pushf pushf pushf pushf and sbb pushf pushf pushf pushf adc or inc sahf pushf pushf add cld push clc dec dec dec dec hlt lock call in fnop dec dec dec dec aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb (bad) pop movzwl shl or ret inc dec inc mov inc popf cmp or push and push cmp dec (bad) or xor es fbstp and scas push mov movswl add inc and dec pop data16 frstor mov pop and dec push (bad) push xor scas pop jg xchg into pop or cmovle push cld aam pop add jle mov rorl adc repz adc sbb and mov push pop push xor jmp xchg outsb daa hlt mov xchg pop ret jo fiaddl nop scas cmpsl add push and out stc imul or inc mov xorl push arpl mov push cs push mov jmp (bad) push gs adcl fs (bad) in inc pop or pop call push add add gs push mov dec push push dec inc inc dec add outsl inc pop jle sti (bad) and dec push inc push dec pop and mov dec push push pop sub push inc dec pop dec and (bad) (bad) dec dec inc push das mov imul and dec movsb pop sub xchg xchg xchg dec xor icebp repnz xchg xchg xchg hlt cmc div xchg xchg xchg xchg clc stc cli sti xchg xchg xchg xchg cld std (bad) call loope jecxz xchg xchg xchg in out xchg xchg xchg xchg call xchg xchg xchg in in out out xchg xchg xchg xchg rcl rcl xchg xchg xchg xchg aam (bad) xlat xchg xchg xchg xchg fcomp fcmovu xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg rol ret xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg enter xchg xchg xchg xchg int3 int iret xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg movsb movsl cmpsb cmpsl xchg xchg xchg xchg test stos stos shll outsb aas jl xchg sub sahf aas jl sub add daa and xorb push xor push (bad) aas (bad) hlt sbb xchg or arpl je outsl outsb sub jmp fldl jg adc dec sub js mov popa jo pop mov mov mov jg or dec jne dec dec gs outsl jb stos in mov sti std outsb add or outsb mov push int insl cmp scas ds push pusha cmp push mov scas xchg scas push leave xchg mov xchg xlat hlt mov hlt or sbb fs outsb dec outsl idivb xchg jl test or imul lods inc ficoml mov push jle popa outsb addr16 scas cld add pop orl jecxz cmp out jo movsb mov dec inc sti inc and scas inc add leave mov jo xchg push imul ds movsb pusha scas (bad) insl inc fidivl scas pusha dec popa jo (bad) rcll mov mov nop adc xchg or (bad) movsbl xchg subb outsl imul sub div inc cmpsb or popa jae fmulp mov sub inc xchg sbb orl and shrb sub xchg adc sub pop clc jae push adc sbbl add push jb insb add fsubrl mov imul xchg dec jbe cmp mov ret adc fbstp inc inc popa mov (bad) nop scas ds dec push popa sbb push and insl in mov js push sub mov popa sub mov dec jne push aam sarl dec add push shlb test data16 bnd mov jbe sub adc inc push stos subl ds sub (bad) popa data16 fist (bad) je adc cs xor push add or push inc insb jae cwtl inc cmp das and pop mov inc or jbe xchg xchg enter push push icebp pop adc xchg jne int3 add mov mov bsf mov jbe add adc out jge inc sbb int3 inc decb pop and sub mov test std (bad) jnp sbb push loopne sbb mov push cmpb push push xchg adc outsb and dec (bad) imul and mov fdivs lods outsb arpl cmp inc push inc fdivs lods ret or div push mov add hlt scas and mov mov mov dec pop ret sub cmp cmpsl cmp aas lock mov rcll jno add xor jae scas or pop mov xlat adc adc or mov mov mov enter in ja pop push mov adc scas imul mov mov add mov cwtl js cli sti popa test or aaa lock adc adc sar or push cmp ja sub mov inc inc dec shr cmp mov jg inc pop cmp inc rolb popa sub push mov cmp jbe (bad) aaa inc cmp leave repz je movzbl push push (bad) jmp decl inc loop add repz jne inc imul loop add ds mov sub or outsb mov (bad) (bad) out or cmp je loopne add in out dec imull lcall mov cmp push add sub xor sub jle push or push aam sub outsb push xor arpl mov fcoms mov movsl outsl and dec movsb cmpsb cs or jo add adc inc cld mov cwtl rclb scas fnstcw push adc adc ljmp lock inc in (bad) cmp jl cmpb jbe adc sbb jecxz imul clc push sub inc pop addl cmpsl lock (bad) mov mov add sub jb sub std pusha (bad) cmp jl inc mov ljmp ljmp adc or sbb aas mov inc dec jne fidivl icebp mov sarb jl (bad) mov inc dec xchg jle cmp ret mov (bad) div dec dec out mov jle cli cmp pop mov idiv call ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd mov addr16 or (bad) dec inc sub xor clc jg pushl pushl mov negl cmpl inc aaa xor pop (bad) xchg sub int mov and mov orw fldcw mov dec add jno jge mov daa andl xchg (bad) fildll fistp ret add add sub fwait mov mov insb rorl (bad) fdivr mov cmp adc lods push sub rcrl ja in jae fldcw dec ffree ffree ffree ffree pop and or aad aam jns add mov arpl insb sub pop jg cli mov mov dec aaa pop or push xlat fcmovu mov push lock cvtdq2ps popa sbb fs lret mov icebp popf or inc lock jnp rcrb insl imul sahf sbb push cwtl pop outsl mov dec ret pushf roll cmp insl mov jbe fbld (bad) cmp xor and and mov xchg mov inc das ffree add and lsl pop notb jge jo mov inc call and add add std lcall add push adc sub jecxz push sti pop add lea sbbb adc dec data16 das sbb fldt fcomps setne jmp xchg adc ss mov pop outsb dec mov addr16 inc mov dec ret test iret add xchg insl sbb bound stos and adc adc mov rcl and xchg daa orl std add enter add push fdivl jo loop (bad) (bad) inc ja or add dec push push in mov mov mov jmp insb sbb jae mov iret enter orb mov mov les jmp cwtl ds push dec sub (bad) scas negl bound in mov mov push adc fistp or arpl inc sbb shrl jge (bad) jae das add cld xchg push cmp lret aaa mov xor pop lock adc je add dec testb xor call fbld mov call lcall jo push sbb mov mov dec cmp stos orb pop cli pushf sarl mov push mov sbb mov push aas pop cmp les rcll movsb push push into sti dec cmp enter enter ss xchg out call sahf jbe (bad) notb hlt clc cld add lock insl clc leave or push and adc or mov push les aad lock and movsl or (bad) movsl pushl cmp mov mov ret das lea adc ret in add cld in dec mov (bad) jle rorl clc jecxz add movsl xchg xor dec cmp add lret pop lret ret push pop lret (bad) pop pusha lcall (bad) (bad) xor mov fistp (bad) pop adc pop outsl mov push ds cmp (bad) pmaxsw (bad) aas xor xor pusha jbe cld repz mov mov les pop cmp insb lahf inc pop cli ljmp lcall or pusha mov xchg mov or add inc push (bad) jne scas cld pusha sbb inc inc pop jb in outsl jo inc dec je mov mov pop sub jbe (bad) aas lods fcomps mov mov push add push dec sbb mov cmpsl mov jmp jb pop jne jo sub mov movsl sbb pushf inc dec cmp pop mov cmp xorb prefetcht2 cwtl cwtl xchg fmuls mov mov (bad) fcmovu pop jge cmp jne les movb les and and and ret je pusha and lcall mov add sbb (bad) mov ljmp xchg or sub push push call into (bad) out add das push adc mov (bad) or and insl pusha (bad) jne insb sub js sub mov lret test mov mov cmp (bad) fidivrl sub fsubrl jne cs and lods jmp iret mov test mov inc mov sub mov fnstenv pop scas call jae fildl pop outsl xchg or lret ror movsb xchg pop push lock mov rep sbb cmpl lcall je pop pop mov sub jb push decb cmp ja imul mov add and (bad) aad in dec cli cmp fwait or bnd pusha std add je xchg ret and mov jg imul pop jne lea mov cmp push add and adc pop fucomip jge (bad) pop xchg ja out idivb mov jo jge cmp xchg mov test inc dec fsubrs rcrl (bad) cmpsb mov fsubrl je inc sbb test push mov lahf shr mov push pop outsb adc mov hlt out push mov repnz jne xor cmpl jbe mov mov nop or jmp xor inc inc add and jmp mov out dec sahf add jne aas and mov js mov fst bnd push push in cmp ja or jmp jecxz mov mov cwtl pop ds leave push push mov jmp (bad) mov pushf mov outsb mov or je mov or mov adc cmpsl mov je dec jl mov mov lock ret mov mov adc fdivrl pop (bad) clc adc jp pop loopne mov inc iret dec jns mov xchg ret xor and pop cwtl int3 lahf ds or sbb pop daa and ret mov push push push jl mov jbe je lock mov lea push test dec call ror mov jg fistp mov ss data16 add fsubs loopne insl cmp push testb clc dec cld lea or ss jmp dec fisttp cmp jl jmp add sahf jge rol negl adc lea add dec mov lea loope xchg pop aas push xor sbb or jp pop cmc mov mov neg jmp or enter xchg push inc push lods rorb fs decl mov dec mov jmp cmp jne pop pop xor les pop aam mov mov mov mov cs mov repnz cmc rcll push aam adc sbb inc add (bad) jae sbb add pop mov adc jb (bad) mov inc (bad) movsb mov movzwl sub fidivl mov jp push cmp iret lea mov dec out sub adc mov outsl add ja movswl mov add lea jl fstpl sbb call dec imul jmp cmp (bad) cmp dec dec inc dec inc dec lods or dec fstpt (bad) in sub dec aam cld stos or adc jg cmp jl pop sbb stos cmpsb je mov stos neg sbb (bad) std jp stos jmp inc inc mov loop movlps sti inc stos pop pop inc clc dec test jne ss mov (bad) mov sbb adc dec sbb sub (bad) hlt (bad) aas inc add leave mov mov mov fwait sub mov insl cmp cli adc mov mov sub push fcomip pop scas je mov dec mov repz inc test dec je dec jne sbb test stos xor ficompl shr repnz sti add fidivr dec je inc jne pop mov ret xchg je lock repnz or repnz sub mov adc or lea mov (bad) push or inc je push push cmp (bad) fmuls sbb daa inc mov sub or jno pop inc loop inc roll push mov test (bad) lret sub sub and adc in outsb iret sub sub sub xor jnp mov sbb and sub scas sub or pop out repz sub xor fldenv loopne pop dec adc add aam repz (bad) adc mov ret movsb cmp testl ficoml add cmpl add movb jge fldt add ficom aas imul dec and dec push out incl ja fabs push adc pop frndint rcr cmc outsl call scas push fnstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub nop jnp jecxz shr and add push cmp xor stos mov sbb jle add jns lcall imul pushl jae cmpb jb movb js decb jo lock cmp jmp data16 pusha xor jmp mov cmp inc xor push or mov push shr mov add xchg out cli sbb or fs adc and mov cs or rorl test neg adcl test sub or (bad) fisttp das js adc jl mov cmpsl subl mov or sbb inc loopne push in mov fcmovu insl or jne or loopne cmp mov jecxz setnp jne mov scas das (bad) jne pushf and jne dec sub cmp and inc or ljmp dec adc sub movb cmpb (bad) or or jbe pop jmp mov js push sbb iret inc pop and push pop das sbb sbb jbe jns fwait mov pop add js fldz cmpsb dec mov mov cmp lods or testb jg hlt cmp or out (bad) in or dec and fistpll sub add jp cwtl jne mov sahf mov les add pop jmp mov xor add aas jmp fstpt dec test add dec mov add sbb test insl and push int and mov cmp jae fimull inc jmp mov mov negb add clc dec es push inc imul push cmp (bad) out jb aaa add stos rcrb inc rorb xchg push push cmp fmull push push adc sbb push cwtl fistp mov sub fwait hlt fwait inc addr16 mov shrb sbb aam int3 lods lcall fldt fstpl fwait push push cmp leave (bad) cmp fiaddl popa mov fcmovnb fldl inc jl test sbb mov sahf insl (bad) leave adc mov xor push adc add pop (bad) rcrb cmp out movsb xor fistpl or cmp inc stc inc es sahf jae das fisub add shlb data16 adc sarl adc (bad) or xchg sub pop jg or sbb mov lret movsb dec fistp ret mov xor sbbl cmc mov sub cmp ja hlt push jmp ljmp (bad) jg iret lcall inc jnp adc jge mov pusha push cmp daa xor out adc (bad) and jbe jp out mov roll test adc and mov mov add lods dec rcl mov add (bad) sti pop loop ffreep add std add movsb jg add in aas push lock incb jb jnp adc (bad) ja and jb or jp (bad) mov push sti insb cli (bad) cmp ja adc pop mov add inc dec jne ljmp mov aas cltd idiv imul pop sbb test repnz mov fildl add pusha ret or js jne inc std std xor sbb fnop mov adc (bad) pusha (bad) aaa add rolb lods pop sbb test dec xchg and daa jmp test jg mov insb push insl cmp clc hlt or movsl xor add test inc pusha xor cmp jl jbe or addl add push cmp repnz in (bad) cmpxchg add decw cmpl fisubl cmp fcoms ljmp add add int int3 adc inc inc xchg adc push test fidivrl adc pop enter insb pusha loop adc imul sub stos test fistpll sbb dec xor into hlt and hlt mov outsl addl add decb sbbl scas data16 mov clc (bad) mov enter rorl xchg lods dec sub push or fldt ficomp pop and sbb stos dec movsl sbb adc mov adc push add xlat fstpl lret (bad) mov push xchg and idivl je add push xchg sub rcrl fcmove jge sub sbb cmp cmc (bad) xchg adc in out cwtl xor pop ss pop (bad) xchg ret push or (bad) adc add push jb pusha in int test xor add test nop fldl adc sbb mov pop enter add js mov push cmp test in dec sti je rolb pop imulb hlt out push cmpb jne mov mov push lea or div cltd jp pop test jb inc lcall push in mov ljmp jecxz outsl call mov test cld notb sub inc xor int3 xchg call aas add (bad) repnz push push or inc or stos mov fs dec aas pop and mov lea dec sti lods jmp inc scas je or jne cmpsb add enter imul cmpl sub mov stos call add adc fdivp xor sbb adc fwait xor sbb ja movsl (bad) cs sbb imul in pcmpeqd push iret or xchg in ret out cwtl fldenv adc pop and cmp or clc or jne inc cmpb jne push and ret popa or adc add (bad) add add add sbb pusha fadds jp cltd mov test in loopne incb fsubrl pop incl mov adc jecxz movsb nop sbb push bt or jae pop mov jnp jmp mov mov jnp pause jns mov lahf popf or and mov or cmp jne mov xor data16 ja xchg fisub push mov psubd xchg xor stos cmp push or or pop mov sahf add or cmp iret or je ret push fnstcw lock sub pop mov icebp fs add dec ret jbe mov sti jb add sub jo mov or mov loop mov cltd test les das popf dec sahf into add push lea and pop xchg fmuls enter fcomps loopne mov lock fcoml in inc sub inc jnp xor leave (bad) mov mov add jmp shlb push lahf sbb js (bad) les mov shll dec and mov mov pop mov lds fs lods loope (bad) push cmp cmpsl or push pop jbe push jbe jl push add pop jl jg je mov add push jmp in outsl mov or je or je jmp cmpb dec mov aam and pop call add inc sub adc mov cmp xor mov xor gs pop push call ret jl or dec push data16 or inc adc movsb je call or dec out xor dec fcomip fcoms lea call mov xchg mov sahf and add add in adc xlat adc mov pushf mov jae push and inc xlat push jns add push xchg add jns stc push roll jmp and add outsl cmc xchg jb push cltd (bad) les add inc lret add dec or out ret push (bad) adc jmp adc sahf out call jge mov js enter jbe fidivr push pop mov ja xchg push stos pop daa jmp sbb push test fucomi add mov pop push subb mov loop jb (bad) mov push mov adc dec inc aad cli aam mov dec mov push xor (bad) cmc ja cmovno push dec adc in in popf or adc and adc cs xchg pushf cmp (bad) iret rolb add ret jne or mov and call (bad) mov andb mov ljmp jo aaa adc pop inc out and jg push jmp je push jp in mov or aad push (bad) dec movb push call cmp sub cmp xor jmp mov add das push jbe jo pop inc ljmp mov sarb add sub jae clc ret sti jb outsb sbb cmpxchg ret add vmwrite lcall and mov shlb mov orl pop xor into push sub lret movsb jle popf enter push mov and iret and adc and (bad) jge popa out (bad) stos ret jo fwait pop jl pop in lea add jne incl in mov mov sub jmp sub je dec je sub dec fs jg or push jmp mov jmp push push push es xchg les push inc mov jle fadd scas pop xchg add push std mov scas and divb or pop mov pop call ficomp bound outsl jl loope dec sub aam jb or or jl mov or jne xchg jno movsb inc dec test mov jne cmp jg mov pop or ret sahf incl push (bad) imul add cmpl jle cmp adc pop and out cld gs mov mov fmuls fadds pop lea loopne push jmp cmpsl or sarl and inc out and and push test adc pusha xchg popf xchg mov inc idivb push mov ds and xor xchg fcmovb push fsubl mov dec sub mov adc push mov xlat xchg dec fistp adc sti mov pop test xchg cmp es lods xchg pop stos test jo lahf add sub and pop ljmp in pop jmp adc add (bad) (bad) mov ret push mov and in call mov mov fcmovnu jmp aaa repnz sbb movsb jns jmp pop mov fisub or mov jmp cmpb ja fbstp je stos fsubrs (bad) push test mov pop data16 jnp mov lock add (bad) cmp jle and fs jne cmp add or adc ret ja aas or daa or cmpb rol mov cmp adc fwait pop mov and mov out loop insl in xor cmpb sarl stos push xor (bad) fistpl scas stos add fsubrl fiadd (bad) mov sub fcomps das xor loopne push out dec ret orl and enter aaa gs push push notb add push push cli ljmp iret mov sub lock (bad) mov inc and (bad) jmp js inc rclb xor enter push xchg jle push (bad) and imul inc add xor or and dec cmpsb xchg lret add not iret je orl inc push fadds add or orl push test inc push dec adc aad ret xchg mov jne,pt add add xchg or cmp push add push or pop adcb sahf mov mov div ret fcomip add xor xor xchg cmp sub jl xchg test inc pop out call int3 mov jno data16 lret cltd aam clc aaa jns (bad) mov adc xchg test popa jne dec cltd xor in dec cld bound fst fcomps or sbb fwait jmp sbb pop xchg jle les mov fstp push repz dec push push adc movsl xchg add in add mov sub jb or xchg cmp pop inc xorl cltd pop and mov lea xor orl or xor jg (bad) das fwait push or jns push addl or adc pusha loopne lods xor movsl lcall jle add cmp or leave pop dec push add lods xlat dec pop sbb shr test inc clc cmp push sub ss dec lea dec lret mov xor dec (bad) mov pusha inc lock cmp movl jb sti or shr cmp inc and pop add pusha dec xchg push in or add xor in ss out dec call (bad) jmp sbb or cmc add outsb xor je mov add lock mov inc idiv push jl je xchg cmp pop daa add add or mov fwait js pop jb and bound cmpsl push mov insl orb in lea (bad) imul in pop lods add (bad) rolb es xor cmp ss xorl xchg cmp add fildll (bad) pop pop in paddq pop sbb adc hlt push push push xchg sbb add push inc mov mov xchg jnp fs scas pop jns adc sub or add es test (bad) inc add sub cmpsb sar add mov jmp mov sarl sbb je scas ret add (bad) shrl hlt lcall jo negb rorl rcll cmpsl lea fnsave lods add jg test mov mov fildl mov mov xchg or jmp mov jl mov addl test cwtl xor pop je jne xor and cmp jmp in in pop cmp js mov dec scas in dec cs xor out sbb (bad) xlat add sub and pusha lea icebp xchg jns out sti xor outsb test cld and fcomp aas mov cmpl xor dec lods rcrb aaa ret mov pushf cltd inc out inc pop jmp sub push pop test rolb repz inc (bad) adc in mov jo and or adc clc push push sub pusha fsubs aaa icebp dec adc (bad) lcall subl sarb adc mov and sbbl mov out lods mov xchg and sbb lods jp out loopne add and mov mov push mov sarb jne jl mov stc push imul mov es data16 psubsb push or cmp test or push add enter lock jl and daa call mov dec mov cmp sarb clc inc clc rorl xor test or jge xor push jo adc movsb sub pop mov pop outsl lea adc lods mov xor lods fsts fcmovnbe dec mov or jno push xchg mov dec pop add dec or add dec les test pop adc pop loope fidiv add jnp mov shll test cmc mov jle adc js jmp and or add and dec inc mov push scas push mov sti push jg cmp frstor sbb sbb push push pop or cmpsb sbb ss and mov ja or lock pop pop mov movsb out sbb ljmp sar lret adc ljmp adc sub ljmp xchg cwtl and add inc or shrl jmp mov mov jnp aam mov add sbb subb scas pop or add aam push pop add cmp in int mov in or jge clc push in inc fimul push loopne push cmp repnz xor subl inc dec pop adcl int3 xchg loopne xchg stos insl add push les movsb test movsl xor into xor and das xchg xchg mov cmp lret leave pslld push xor inc xor sub jmp and add mov cmpsb imul cmpsb imul inc push daa movsl je mov or rcrb lods xor pop lret mov mov cld cmpl movaps test jae jecxz jg bound or arpl mov inc js dec sub sub dec mov scas sti loopne or pop mov add fild jnp jae xchg dec jnp or enter loopne fbstp cmp loope sub pop push cmp xchg jb pop sub cwtl mov mov cs add movsb aaa nop daa and jbe ror jb sub adc dec xor cmp pop aad xchg mov xchg mov adc std sub mov stos mov jae cmp cmpsb dec adc mov sbb hlt add mov nop xor sahf dec outsb xchg ret adc push sbb add jp sahf mov lea mov scas adc scas xchg and aaa xchg add les add pop or adc xor test sub gs sahf lahf ret das clc mov adc jge mov mov mov or gs aas in fidivr movb adc push add cmp cmpsb sbb cwtl adc pop inc sub ja jge hlt and adc stos sbb and adc push insb and and ret adcb addr16 lods rorb les adc enter adc andl das add push mov mov cs push adc adc sbbb (bad) cmp cltd jl pcmpeqw cmp loope mov ret or and lock cmp adc and sbb push dec movsb sbb (bad) and add mov or pushf mov and pop dec xor sub sub add xlat add or xchg fdivs fldt mov js pop loop pop call data16 and nop adc add dec or mov and dec jmp dec sbb mov and imulb jb mov sub and ret (bad) jns dec or inc cs add mov jle cmp push lock out and dec add je std in cmpsl jle shrb fstps xorb daa xor ja mov (bad) inc lock adc or or jl pushl jbe in cmp inc sub push inc in lock and roll and inc inc inc jge or lods hlt lret (bad) pusha or (bad) (bad) or sub add xchg sbb hlt jge jl mov and test in dec push lcall adc mov dec mov pop xchg sarb fildll push dec cli test inc mov push test lods jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push les ret sub daa push daa pop das sub (bad) fcomps jb popf add jo add dec sbb or cs push xor ret push ja push loope out pop inc adc inc push jmp inc mov rorl sbb addr16 adc outsb inc inc scas fldl je mov mov xchg dec mov sub call mov mov sub inc mov call ljmp je inc rol (bad) (bad) js jge jb test adc mov add cmp and rolb add adc clc mov daa aaa inc inc inc add cmp dec ret sub cld dec or sarb cli jbe dec sbb das das sarl movsb outsb xor lock adc mov daa mov xchg js bound jg jae adc test inc cwtl jbe xor add nop adc mov inc (bad) jne xchg iret adc jo cmp stc dec push jp sub xor pop out loope mov and mov hlt pop dec js test in push mov ret adc aaa push mov sub jb xchg stos (bad) sbb inc decl sbb lret jne sbb dec or push pop jne ret or pop ja inc or setb or pop fildll movl inc add add sbb dec data16 enter mov push sbb mov mov mov sub mov or cmc add test hlt mov in adc add fisttpll dec mov mov push cmp js je mov sbb fbstp push mov popa mov push lea inc cmp pop jne lea pop daa pushf bound scas movsl out add cmp xchg rorl dec sub dec jne fwait aad jmp add xchg shlb add arpl mov or add out cld sarl mov jne push rcl mov xor in fstpl cmp pushf (bad) lcall xor mov and lods cmp mov popf xorb mov sbb sub jb inc call pop mov (bad) mov cs xchg in in nop add mov mov mov aaa cmove fmull popf je mov and pop jo ds fcomp mov push mov xchg sarb sub in sarb inc xchg adc nop sub mov ljmp or enter fs lds jl and enter aas ret adc (bad) cmp pop hlt mov mov push cld push add popa hlt mov and mov cmp movsb sub dec add inc (bad) adc iret inc call jg or das fs mov fs sti test popa insl pop jp fwait dec jo push and pop fwait and cmp (bad) mov ds push cmp push and add pusha jne adc add push out subl xorl xlat adc daa sub js pop sub shrb push test pushl push mov test pusha cmp adcb push leave dec in dec mov ret cs cs pop dec add daa push out fcom (bad) xor sti test and or add cs push inc inc popa cmpb in push dec lods ret pop mov xor scas aaa mov (bad) cld add cltd lcall cld jp testl or and cmpsb sub cmp pusha jae mov ret test adc jg xlat rorb mov and out mov sbb fcmovnb jmp orb mov xor mov pop jns dec into adc pop jmp push add jmp push inc or aaa not mov xor test pop or push dec and (bad) divl mov gs jo inc js jp call jecxz lock inc sub call dec ret xchg xlat sbb mov xchg lock insb mov push int3 and mov mov sbb inc cmp jne (bad) inc in cli and and test jle adc mov scas mov sbb mov add inc jmp mov xchg mov mov mov scas outsb fdivrl add ljmp jnp cmp orb mov mov xor mov inc or mov mov mov inc mov scas sub cmp (bad) mov add mov rolb xor pop add sub lret cmpl sbbl test sub xor sbb outsb das popl (bad) stos aaa (bad) adc movsb movl sar add lods inc mov adc pop adc sbb fnstenv jne outsb add sub lods sub xchg push push sub inc gs rorb les in test aam std jle (bad) (bad) mov dec xor dec insb fcoms push aaa test cld mov jb out clc mov popa jnp push jnp ja je push mov inc mov mov mov ret mov lea sub sbb mov dec sbb call data16 cmp in aam orb mov clc pop lcall sete incl ret jb popa movsl fnstenv (bad) mov decl cmpl mov (bad) pop pop shr mov xchg mov inc dec inc mov inc or jle adc (bad) cmp or xor inc (bad) add xchg (bad) xor sbb inc dec mov das pusha jle emms aad and lock or dec out lock sbb mov stc rorl nop sub adc inc sub bound mov pop xor in nop jmp lcall add xor addl dec das int and add enter aas dec call cmp push jne cmp out and or sub lret mov dec inc je rol aaa ret (bad) and pop or movsb jae pop out stos xor push je fucomp repz roll and in ret int3 push orl lret pushf data16 cld and push ss repz push fs adc jae mov es xor das dec sub jnp les xchg mov iret cmp add out jns out xchg mov test and mov inc je loopne mov jle push pushf pop mov and inc jle cmp out jns pop push xor sbb mov repz sbb js fnop xlat add push insb xor cs popf cmp or lock mov mov add dec jae and rcrb cs or pop dec fmulp mov call repnz loopne fdiv mov fadds aam ss fmulp xor insb int3 cs enter repnz sub cs mov pushf mov cmp mov mov lods cmpsb jns fmulp or and leave cmp insb cmp cwtl xchg push or mov daa mov jbe cwtl cmp out xlat ss pusha sub nop jae (bad) sbb nop clc dec pop aas fiaddl push mov push cltd cmp mov es adc sub cmp dec in mov cmp les fs adc xor negb repnz jo inc cmpsl jge xor es or mov or cmp inc dec and nop inc push cwtl nop mov and cmp adc sti xor mov aaa or and decl sub adc sub into adc cmpb mov push cmp nop out add in jo add js imul push mov cmp mov rcr add in adc jg movsb xchg faddp mov dec cmpsb lods icebp dec rclb nop or in jb inc pop inc pop enter les mov or cltd jb test (bad) repz sar pop roll and sbbb xchg mov dec aam dec push test adc mov shll sub push jb mov insb test clc and adc jecxz sub stc clc lea outsb test sbb xchg pop mov je mov std test mov and xchg insb lock sbb adc adc xor sbb fcomp call jb (bad) sbb jecxz (bad) pop lods sub nop pop and push inc adc (bad) popa adc pop data16 in xchg mov subl adc push adc call stos nop (bad) lods and daa daa test mov in (bad) mov cld jmp push xchg push adc shlb es mov push cmp mov and dec sub andb cltd fs movsb js add dec es in lods mov cltd fs mov mov cltd fs dec mov dec es mov dec es les fs enter cltd rcrb rcl jb movsb jb loopne lock movsb lock fimull sbb enter dec repnz mov mov and inc dec push mov hlt ds jo sbb sbb cmc and jns or cld fisub dec add outsl je fs jne loopne add fisttpll sbb dec adc outsl fs cld cmp jb pop outsl jb inc insl jo jl (bad) xor jb insl push je pop push or enter rorb mov (bad) jns lcall jae pop dec add mov outsl repnz ja aas test clc inc jp inc dec mov clc mov (bad) xor sbb mov add and pop icebp aam icebp mov (bad) scas push mov pusha mov cmp or (bad) xlat sbb and js cmpsl std add out in add lock jl out sahf mov int3 js (bad) ds out bnd push sbb inc loopne les es push adc dec dec inc shrl cmp addr16 dec mov jae add movsb dec or jmp dec add fdivl inc je add mov mov insb (bad) push lock insb adc inc add es add and shlb (bad) xor pop xor inc and lret cwtl (bad) cwtl xchg out jmp inc popa fidivrl cld inc scas inc cs adc xchg fs pusha fmulp adc adc (bad) sbb adc outsl out and repnz enter ror enter adc popa add iret xor add (bad) sarb adc sbb or insl jo (bad) xchg sbb or xchg addr16 mov sbb and cld (bad) jae push icebp push outsb divb int jno icebp pusha loopne loopne roll movsl (bad) pop arpl jg dec cmp aam sbb jge jbe fsub rorl adc loopne mov (bad) in xor add in repnz lret cmp mov pusha or call inc mov mov dec push in xor loope inc ds (bad) in add sbb xchg mov fstpt leave dec loop aaa test pushf inc push loop loop daa fs xor ficom loop or sub mov in xor js or jg dec adc inc xor jle sbb clc sub pop cmp sub dec je mov or push lcall es dec mov loopne jbe add je inc ss cmp leave testl clc xor fidivl lret clc pop stos scas in in mov fnop mov inc cmp adc in mov sub in in sub sbb js dec call imul call jmp fisubrl pop repnz push mov dec fild mov or lcall adc fcompl jg call xor lods xor in shrb add in mov mov mov repnz aam jmp adc or (bad) ret enter sarl lret iret mov and in adc loopne xor xchg in mov inc jl sub pop decb call add mov add icebp mov xchg cmp je and jecxz jle mov push push repnz mov mov loop sub ja pushf (bad) xchg jne pushf xchg sbb xor test (bad) insl push dec imul imul cld loope add jne inc add (bad) loopne cs add push aam sub adc mov or test int3 xchg pop les push adc je dec cmp out aaa sbb jmp and mov lock jne popf or shrl (bad) push call imul inc (bad) xor test aaa adc imul pop pop adcl (bad) lret inc inc pop sahf jmp inc sbb xchg orl mov dec dec loopne fcomi push dec jnp movsb pop fcompl cwtl mov test sbb (bad) aaa cmp jne add ret push add (bad) xor dec sti xchg xchg (bad) adc or or (bad) pop dec add imul inc inc sub xchg lock inc or adc (bad) sbb xor div and xor and mov xchg jp repnz in arpl push mov or pop jb mov jbe sbb add lods je ret aas leave test fdivs dec hlt (bad) lea sarl nop mov out mov mov aaa jmp sbb adc loopne xchg sub inc in in adc xchg dec call add and movl sub adc pop or adc cmp xchg mov sbb cmp push cld push outsl inc ret outsl cmp xchg pop sub data16 jmp js mov out dec push adc push cwtl xchg inc push add dec fwait cmpsb sub decl push adc lcall hlt jmp sbb push and add dec jmp adc cmp bnd xor inc (bad) adc mov fcom jmp inc add enter sbb inc sub sbb sub pop xor pop dec lock in lock je pop jne push xchg mov mov add or or lahf (bad) (bad) int3 pop fisubl inc add xor enter xchg mov pop outsl test mov imul fisubl fildll cmp insb enter mov in popf cmp mov push mov mov or and add jmp cli adc (bad) iret int3 sar imul es xor out lock push adc inc repnz in lock push imul mov jp mov (bad) xchg mov inc mov and cmp (bad) mov pop (bad) (bad) hlt jae push test jg push jp add call inc xchg pop jo mov xor xchg cmp loopne add and cltd xor fdivrs dec iret xor ds repnz or jl xchg pusha imul es fistl pop add enter cmpb adc jbe add jno push push nop out jg lret pop daa mov sbb mov sub and push (bad) add cmp mov xchg clc aas or movzwl cmp ja test mov sbb pop jbe mov jns fcomi hlt and lock jae pop pop cmp or and es sbb or enter je and sbb dec pusha lods rorl scas movswl insb or es xor and push mov sub fistl mov leave rolb lock flds pushl add clc fistl call and xchg je cs jo or fadds in push fsubl and fcmovu add fnop movsbl pop adc mov es shlb pop inc sarb dec pusha and hlt call push enter sti lea cltd fmull pop cmp push in test sub incl dec je jmp sbb shrb sarb test add and inc push mov test sub iret jnp repz mov std and lret fwait imulb pop repnz outsl push sbb repz imul jecxz mov sbb or aaa cmp flds mov inc fnsave mov xlat xchg pushf je lods lods cmp sbb mov jo pop shlb xor movsb and pusha inc out popf movsb mov test pushf cmp pushf cwtl mov cmp sbb xor stos xchg jno dec rcll aaa nop je cmp dec mov fsubrl sub rcrb insb jl jl push mov mov mov mov cmpsl inc mov cmp dec imul pushfw xor mov mov add mov push jmp scas xchg hlt or ret in dec aaa test iret pop hlt jne test xor enter (bad) (bad) hlt in call hlt loopne xor inc rcl cwtl cmc sbb dec inc in push jne inc dec jb cmc out rclb mov popa ret cmc cmp sbb loopne dec loope daa pop nop dec push push pop cmpsb in push cli cli xor mulb test shl sbb notl pop mov mov push ds pop pop push je cmp repz nop stos leave xchg adc push ljmp push cmp or push xor insb xor es and push inc push stos or add es cmp in in ret jno aaa dec xor mov jnp aaa imul xor fstp aaa insb lcall aam xor dec or rcl mov test jno loopne pop adcb add insb enter xor cmp rolb aaa sti xor inc cli pop mov imul inc out cltd mov mov cmp test push loop dec clc cmp sbb shrb xor xchg mov mov aaa aaa mov mov int3 xorl xchg jne (bad) es cmp aaa mov popa test test pusha ret movsb aaa movsb pop rorb mov jno cmp nop dec pop jno cmp mov aaa cwtl jno lods or aaa outsl movsb jecxz icebp aaa dec mov lock cmp lret cltd aaa in mov test sti mov inc jmp rol test sbb and int3 loopne xchg jb mov sarb pop push (bad) xor or ret lock or inc xor mov jmp movw or push mov pop push xor jne xchg add inc mov and pop outsl and or adcl outsb adc pop into jb xlat scas sub pop or data16 pop push add js in shrb mov cmp mov push outsl dec xchg add stc call cld cmpl jb lods dec add mov sub mov insl jo jns or aas dec rcr pop (bad) and popa adc and fisubl xor dec stc jb inc push ds add (bad) decl inc outsl jne xchg jb outsb arpl pop or and dec pusha xchg and adc xchg rcl pop xchg jg sbbl or jl arpl (bad) xor iret push sbbl inc aaa or cmp xchg daa adc ss push clc sub dec add adc (bad) sti and dec xchg test lds test xlat es sub xchg lahf inc sti pop push jbe and mov aam lds (bad) das jmp lea iret mov cmp jl cld stc and xchg dec pop jne jg mov cmp or sbb pop sub or sbb xchg mov test in or nop xchg outsl and cmp sbb test pop xchg pop xlat scas in mov xchg repnz outsb jns and jmp push gs push ljmp hlt add mov jle sahf out sub sbb sahf push pushl xor push mov jne push addr16 outsl mov or int3 dec aad int ret aas fmuls ja mov hlt cwtl cmp jle inc aam pushl fsubrl xchg dec xchg out loopne ljmp and push fisttpl aam lds or jmp jecxz adc icebp xchg pop ja push loop test cmp je outsb (bad) mov loop adc repnz xchg ret jg sbb mov pop repz adc div (bad) imul inc hlt out pop (bad) call ret mov (bad) addl mov and sub push or adc ret movsb or xchg dec fmull sbb pusha loop inc cs dec add xchg and inc decl adc popa mov sbb test repz mov scas das jmp xchg jle push (bad) les push push xchg jo fist xlat rorl inc jg add jo (bad) mov cltd add pmullw push mov adc test incl pop sbb (bad) out push test aas xchg dec or cmp or jbe sub push adc push xchg cld rcrb fmul add jns xchg sti outsb outsl dec sub mov lahf jno add mov mov fnstenv sbb (bad) and movl xchg daa lock sbb js lock cmpsb add pop and daa mov fsubl jl inc xor inc sbb push enter cmp push jp js ficompl add jo cmpl subl loop loopne push faddl jne xchg nop add sbb and sbb and mov das add sbb jne pop jo arpl or les jecxz push incl lret xor xchg arpl cld lea cli fldcw insl xchg (bad) les fldenv pop jns sub out inc (bad) or mov loope and js mov cltd pop imul hlt ss out gs cld sbb push jmp mov xchg lret sub cmp jo lds push loopne and cmpsl xlat lods xchg xchg xchg fldt xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg cwtl cltd xchg xchg xchg xchg lcall xchg sahf lahf addb addl xchg ja icebp add xor xor mov (bad) popl add add add notb lea push push dec dec (bad) push hlt xlat xor dec add adc xchg mov mov push (bad) adc sbb test pop insb jecxz jne sub push cs dec xor push or cmp jle sub ret dec ja push (bad) mov pop imulb js cmp xor test cmp aaa sub lods add dec dec mov idivb fmuls or or mov and cmpsb fisttpl pop outsb sbb mov dec jl or cmpb mov mov cmp je mov and sbb inc add and jmp jle in rcll outsb je jmp cmp sbb test (bad) fistp jp dec jne notl cmp aas pop je in or lar pop mov push adc ja and jmp call jmp jle mov cmp (bad) fcoml cld push add add adc and or movsbl push pop push jle xchg pop mov push aaa mov in ds pop in push push adc setle mov mov cmpb ja jb add add decl (bad) out mov mov loope add or mov rorl sahf push lea adc ret mov call dec lcall cmp inc pop mov or lods cmp lcall and add les pop loope test loopne sub or push sub aaa mov jle mov xor test mov xlat lcall mov pop pop cltd sbb push jle dec sbb xchg or adc or repz or (bad) stc add sbb js push hlt dec xchg mov sbb push or movl mov push lret test push jp mov jge or stc pop jmp inc clc lds jne pusha enter jecxz lea dec cmp (bad) xchg add push lret add mov cld add mov adc or adc lods test add daa mov movb adc test faddl jnp cmp push aaa sbb inc or xchg jge mov ljmp insl or sbb fstl hlt dec dec call add fsubs adc or cmp or inc cwtl (bad) and pop lret add ss pop pop jge cmpsb fildl mov scas cmp add or insl jecxz repz cwtl lods (bad) loopne push inc (bad) fsts nop outsl lret push out sub fstpl in dec push fistpll pop (bad) sarb xor sub jmp std xadd push xor and popl jmp adc or jmp or inc loopne sbb inc fstpt adcl pop (bad) aaa loopne fidivr js jno pushl pop add add call js dec sbb mov pop or insl add sbb and pop mov enter adc dec or dec add fildll lret (bad) jg jbe fnstcw sti fxch inc cmpl mov fs xor mov inc fwait or sub sbb xchg pop popa xchg cmpsl fimull inc pop mov inc cmp outsl pop push push ja jb inc and (bad) adc xchg or inc sbb inc sub sbb jg add push inc insb imul lret clc sbb mull into dec gs popa lods mov jns sbb push lcall inc insb popa (bad) leave negl nop je gs xchg add mov pushf dec or inc imul fs out lods push outsl sbbl sbb adc in roll sub push sbb insb jns jns mov inc xchg (bad) pop jmp pop ss push mov je or jb or ss std mulb fs adc dec sub and pusha test or jae xlat add push dec decl and gs add imul jns xchg wbinvd aaa out sbb or dec gs sbb jae je cltd sbb cmpsl outsb lds je mov (bad) or insl mov adc or push fsubs and xor rcr out adc add xlat shrb sub shrb leave inc mov or mov inc inc and xor int3 push repnz ds jmp mov mov dec push pop mov lods outsb mov scas ds xchg fbld or and push bnd and fimull enter pop pop js adc idivb repz scas rcl sub ficom in and inc sbb nop sub mov adc mov pop in arpl mov push into dec imul dec and or adc add push pop push mov or subl mov cwtl rdpmc xchg add push mov push mov mov fisttpl arpl push adc xchg ds adc inc adc es pop inc mov rclb cld dec mov mov dec mov push cmp add push add adc aas adc scas pop and loopne or push in insl pop mov scas ds inc dec dec push cmp mov push shr scas xchg xorl ficoml lock push or add mov (bad) mov push add lods mov test ret or or fbld fidivrl xor sub int3 adc aad popf xlat jbe push sub outsl sub fnsave inc adc inc push in pop (bad) shl rclb je sarb arpl add inc mov adc adc jecxz out sbb pop xor lock dec push adc dec pushl push leave jae fs jo lds xor pushf jae push rclb sahf cmpsb xor and sti into pushf mov push subl add addl daa js inc xlat cmp stos int3 jle mov push inc dec mov add dec pop sub iret jno pop push jbe ss out in xor aam push enter inc dec imul fs xchg push call adc xchg test sbb sbb inc mov and dec ds test inc jmp push or (bad) inc rcrb bound xchg aas je pop fs adc xchg pop push sbb inc push push js adcb xchg int hlt push push push and pusha push aam outsl xchg push clc jbe push pop mov push xchg xor push sbb push pop jnp mov push jl int3 jle mov scas xor pushf push add adc and cmp por add xlat jl addb and jo loop dec (bad) mov sub push pop push cs idivb or pop sbb aaa cmp add xchg or cwtl sbb push pop push jl sub cmp test push or xchg pop lods arpl xor push leave sub mov out negb fs sub sahf mov xor js pushl sbb (bad) add loopne sbb dec sbb js out nop cmpsl divl pop inc movsb pop xlat repz divl and lods pop daa mov in jnp scas xchg pusha (bad) out add cmp (bad) dec inc mov int jb pop in push sbb maxps fisttpl andps and in or enter or adc enter sbb sbbb and rcl mov add xchg inc xchg in in stos and repz pushf adc repz repz or iret jae push orl cs (bad) pop mov ficom cmp add push pop shlb jl mov movsb (bad) out sahf mov movsl inc icebp dec pop sbbb mov shll aas or pop cmp push das xchg and xchg adc push fs bound push scas jle repz scas (bad) loopne bnd or inc push mov cmp pushf push rolb lahf (bad) mov in shrb push loopne mov inc (bad) ja push and jo sub gs dec and ret push ds pop and sti mov push data16 xchg inc jns push ljmp decl call rcll stos mov xchg sbb xchg movsb rorl out fsub lea or inc aam mov insb int3 movsl or push mov in inc add pop sbb inc (bad) int dec (bad) inc push in ljmp sar sub mov and push inc push inc and outsl sbb out bound pushf inc inc xchg inc mov das das clc cwtl rcrb fdivr fidivr jle call xchg or mov adc jmp cmp (bad) sti lcall idiv idiv cmc push push dec jnp (bad) repnz push incl cmp lods mov (bad) (bad) mov push mov push sbbb lds push or gs shlb mov jl nop xor inc (bad) jge push (bad) flds add cmp or scas jle (bad) pop add lock imul lcall adc mov sub inc pop xlat xchg pop push arpl je cmp jo fidivr mov xchg pop and mov mov mov ds push and into repz sub inc and mov push aaa sub sbb and imul sub dec dec orl or in push inc mov mov add dec inc loopne data16 push push insl dec push push cmp push loop fldt gs xchg (bad) dec orl sub cmp jne add je test cltd mov hlt and xor negb loopne add jb jne (bad) dec es pavgb sub or or and scas jg (bad) punpcklbw xor push mov dec (bad) xor sarb xlat bound je jb push ss dec je decb inc and jmp adc lds sub rorb je add push mov add or movsb divb push sub sub fcmovnu push xchg sbb and jmp pop push popa jae outsb jmp mov pop mov pop fild mov movsl inc nop cmp popf movsb add movsl sub fs pop sbbl inc add inc mov xorl inc jmp nop sbb loope dec lcall mov dec or mov add addr16 mov jge xchg inc rorb bound call push jnp scas imul and pop sbb pop push fimul pop mov xchg les cwtl jne (bad) push inc or (bad) (bad) (bad) fsubs jne inc or push xchg jb and and sub and cmp hlt xchg add jo add in mov push sub xchg lock inc mov sbb pop cmp dec repnz inc sbb add inc pop adc ljmp add sub nop fistpll arpl inc js add fadd das or outsl inc cmp push xchg (bad) and clc jecxz adc push repnz sub mov fstp pusha add addl lds imul fsubrs dec imul inc and je (bad) fsubrp jo adc imul xchg sbb icebp cmp pop icebp sbb adc mov es add push (bad) or pop dec lcall mov das fisub pusha fcmovbe cmp sub loope adc lds push lea dec dec mov jmp or jl inc push cli cmpsl push inc dec jne (bad) mov adc xchg mov inc js repnz push (bad) mov push rolb nop or xchg jbe sahf jmp adc dec outsb imul popf inc add xchg xor mov aas sub cmpsl dec pop add pop outsl dec (bad) mov and inc insl jb sub fldl xchg fucomip adc rorb xor loopne jl xor push inc notl mov mov jns xor cmp jl outsl mov inc push call leave arpl je or cmpb mov imul icebp cmp fidivl ficoml call fistpll jecxz (bad) (bad) dec call pusha shrb pop int3 movd mul mov adc push add sbbl int sbb out test adc xor es into (bad) hlt jnp sbb in int rclb lock (bad) mov mov pop mov xor push push jp mov ja xchg push lret mov mov mov sbb xchg pushf or mov lahf cli ss pop inc add pop das inc inc popa or jae (bad) or and xor xor pop leave enter pop mov ja sbb rolb xchg push rolb jb andb jmp jno subl jae cmp mov outsb pop cwtl in test mov mov mov and push aas loope (bad) sbb imul xchg das push sub or fwait pop add das sub and cmpsl or xor mov xor addl add pop sti js movsb xlat xchg xor jp add ja roll jg dec loope sbb mov push xor jno jo test popf cld out dec sbb xchg add adcb enter dec push repnz xor sbb jmp push je mov mov xor shll xor fildll fcom cltd mov cmp idivb das ss and fisubl into mov imul enter mov cmpsb in mov adc test test cmp ds xor xchg pop cmp push jg cmp jo mov addr16 add xor inc or or or push ljmp jecxz out mov xor adc hlt pop xchg fdivl adc loopne leave (bad) xor jp inc pop popa and cmp add or cmpsb mov cmp fstpl imul js sub xlat mov test add lea aam jecxz add xchg cld mov jmp ret rolb and loope in test push sub inc xchg call add sbb sbb inc movl out add jl pop nop lcall rcr mov sub pusha mov mov ja xor sub les cmp lahf pop mov or or call fildl jecxz add cmp dec dec adc xor and cli xchg adc dec pusha jl (bad) sahf push mov mov sub das jnp pop xchg dec push xor cwtl sbb popf push je pushf xor pop sbb mov (bad) mov xchg aam sub add mov nop daa dec and test fimul add outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor dec icebp pop loope pop and mov push movsl cs or cmpl dec outsb or mov mov ds cld add aaa xor cli (bad) cld aam xor cmp je test adc mov xchg cmp into pop sub push hlt cmc cld pop add or in lock les dec addr16 pop jns lods mov sti pop rclb and in mov adc mov (bad) xchg and nop loopne inc push std sbb adc mov push add mov ror into das xor aas add sbb push (bad) dec idivl add cs sbb mov pop (bad) cmp sub jae loop inc adc ljmp int3 or leave mov fs fldl xchg or and testb adc sub das xchg inc lods inc mov inc sub std sub decl and or push idivl shl loop adc or notl cmc mov icebp mov or push inc test out rol push mov jl adc aaa addr16 jns inc outsb xchg and repnz dec cmp mov into test enter cmp xchg aam or popa jo dec int sbb fmuls or and cmp adc push fcom test jmp lock aas add mov aad pop sub add dec or add adc jne mov jne leave rcll std or xchg pop jle add jno sbb inc or pop jg add push hlt jecxz ljmp mov cmpsl test test mov cmp divb call mov add rolb mov add rcll rcll scas pop cmpl (bad) shl das push add and push fsubs in jns ss sbb lock or pop (bad) inc dec mov add test (bad) adc sub jg dec and daa xor dec dec inc add test cmp mov popl cs inc mov shlb dec pop clc pop (bad) call roll adc inc push emms or inc pusha icebp push sub push inc (bad) jmp pop add and adc lds cmp or cli inc jne sub jne lds adc or inc fist dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds pop adc fild pop movsb add shr inc pusha or xchg mov mov rcr movsl sub outsb mov fisttp add xor mov nop ret cmp dec int3 ljmp add dec sbb call out je adc ss rcrl sbb cmp mov push nop push mov mov mov push mov cmp adc fsubs or and (bad) pop push cmp jae dec or je stos adc jp in ret btr push add mov jbe jp and push inc adc jmp lea dec jno rorb inc dec (bad) int3 pop add push fsubrp in mov xor or shrb jg pop ja and bt jb ja sbb ret pushl jmp inc cmp jne inc decl jne les and dec and pop dec push fadds jl xchg xor ret imul aaa in push aas ds add lock ds inc mov test mov add mov ljmp inc inc insl in aas add test out imul les and inc cmp sbb mov mov or xor or push (bad) adc or cmp pushl js inc xor jne inc adc xchg aaa pop loopne daa sub repnz adc push and sbb pop sbb pop (bad) jg mov jp leave add xchg xchg add inc xor or mov cmp or aam or fdivrl cmpsb fbstp jne cmp sbb mov repnz or imull pop or mov lret stc pop jns push sub and out pop shrl add in je jbe scas popa adc scas xchg sbb mov fcomps loope (bad) dec and sbb inc xchg pop enter inc add in xchg out xor sub clc icebp lock xor jb adc sub call sub sbb fiadd enter cmp in mov pushf mov xchg or and jno dec mov mov dec mov cmpb inc mov mov dec jae aaa push mov adc pop push push pop pop lcall inc and sub mov mov or inc and inc ja dec or sub ja divl daa daa (bad) dec clc rcll repz adc jecxz dec cltd push mov sub sub inc les push jecxz push aad push adc pop fidivr outsl sub mov les push mov (bad) jae push dec (bad) mov loopne cmp (bad) sub (bad) xor xor or fdivrs enter push pop in xchg ds push in sbb sbb inc rcll popa (bad) mov out xor ret xor sub mov jns out xor inc and les xor iret lds push inc lret inc cmpsl mov lock mov inc xchg xor or shlb hlt adc mov sbb fstpt (bad) sbb clc test inc and xchg inc xchg lock gs fistl xchg mov xchg mov push out test adc sub push add dec (bad) repnz mov sbb mov fstpt inc dec mov pop dec xor lea sbb xchg jp mov adc (bad) push push inc lret dec insl test push mov fucomp cmp fwait pop call mov call popf rol and cmp xchg or out cmc adc in cs loopne add or (bad) xchg inc push inc insl mov push mov mov cmp pop push cs aam ss mov push test sbb jne inc mov pop and lret hlt mov adc push cmpsb add clc lret jne inc hlt inc clc sub rolb xor or cmp fcoml sbb dec push push cld pop and ja sbb cmp and dec mov addr16 and mov inc mov insb or das call or cmp jo into and xchg fwait and sbb sete or movsb xchg es jae movsb clc les fildll lods dec in sbb dec and push pop cmp push out or pop mov mov push or shr loope pop xor push lret sbb cmpsb pop das or mov or test dec inc jb dec pop pop in pusha in clc clc sbb scas push and incl sub lea push push add loopne jg pop sub pop and dec jo cli pop enter (bad) pusha jno pop xor cmpb enter bound scas add fs movsb in repnz dec cmp push inc lret aaa popa fild jmp loope adc dec sahf sbb adc les les push push nop xlat mov movsl adc and js in and dec push inc faddp add mov scas daa dec testl xor ja js dec inc mov adc adc add mov dec test jb push fmuls pop (bad) (bad) mov outsb xchg adc xchg imul jecxz (bad) aas daa sbb pop pop dec sbb cmp bound cwtl push add (bad) std test push mov decl fs jmp push pop mov fdiv mov inc scas mov inc or je or lret xchg cmc mov sub or and movsl fldcw jne or add and push dec and mov sub daa cwtl movsb shll enter sub inc inc add and movsb adc notl (bad) hlt pushl cld loop mov lods and or lods xchg aaa iret sbb xor das dec push mov mov sbb xor push push mov in call pop push push je add pop push jl out aas testb cmp pop mov cmp jne testb orb or or pop and movaps ficoml test inc dec insb dec lahf push adc or std iret cmp xchg sub mov sub dec adc loope sahf into cs xchg mov add push dec push es push dec cmc sbb ss cmp xor mov mov ret xlat sbb fisubl data16 fcmovnu add (bad) xchg (bad) enter aaa sub sub adc int faddl xchg test and adc pusha int push add sub xchg jmp pusha mull pop lea cmp stos mov sbb adc or or mov pop pop ficoml jge dec leave iret push sub jo insb movsb mov push or dec inc dec rorb mov mov (bad) test pop pop pop pop add add inc mov mov dec jnp and adc cmp je jg mov xchg jnp (bad) jmp mov mov movl add sbb cmp xlat dec je add repz rorl or push loopne dec (bad) out push pop jp ss jmp mov xor aam add jle (bad) push sbb repnz in repnz adc add (bad) mov xor (bad) or es fidiv scas cmp mov test sbb push mov adc add gs pop and add test mov sbb sub popf iret cmpsl add ljmp xor orb nop jmp shll and (bad) xor (bad) dec push fisubr fnstcw in loope (bad) jl repz push aad adc dec nop pop xor subl andl jne add shr mov or insb inc sub lea push dec (bad) (bad) inc daa cmpl pushl cmp jne mov or or sbb dec inc jge sbb jle dec pushf pop push int pop inc mov adc jl mov add add lcall adc jbe nop add and rorl inc push pop or shll mov lret or enter js js sbb mov inc push jge or jle xor nop and dec out inc addb adc jo mov push mov inc mov pusha invd pushf jle pop (bad) xor arpl decb pop add rclb pop (bad) xlat and repz aaa insl ret jno dec sub fnsetpm(287 add mov fidivl cmpsl loope insb (bad) out push clc sub sub cmpl xorb add add jbe and pop push sahf movsl pop outsl mov mov add pop dec mov add lock arpl pop testl push mov dec jecxz xchg rcrb outsl lret cli add pusha testl cmp mov jg add pop pop mov bound xor push out enter cmpsl clc jecxz and lret lods je add inc push or sub mov adc pop leave sub rolb adc pop in imul adc xorl xchg ss jg pop pop or repz pop xor int inc or sbb ds push sbb packsswb icebp or push jl add add or out pusha mov negl add fbld mov pop cmp xchg inc popa sahf add rcrb xor add js das lds mov stc dec sbb into cld mov push dec xchg pop push mov cmp mov mov in shlb mov xchg mov add insb and push xor rorb push shrb in or test xlat pop clc adc fbld sub sti mov dec dec jno lea (bad) and clc pushl cmp jns sbb jo add and nop and xchg pop in inc in push push sub (bad) jg jl push dec test (bad) je mov xor cmp loope,pn imul or mov push faddl in and push cli cmc movsb xchg xor mov (bad) pop and test dec faddl mov jno cmp inc dec add in xor mov add addb enter nop testb insb jge enter es (bad) or xor and je adc movsb fsubrl inc jb into or add (bad) jo cmova or or aam inc sub mov push jo mov jae sub ficom cmp and test rclb inc into aas jae xchg jp jne iret data16 cld or dec or adc in out add sbb mov adc push and pop dec dec scas and dec out or lock clc xlat ss movsl inc sub cmp test out pop ljmp or (bad) pop popa adc and add sar cmp jge data16 sbb popa mov add or adc add test test inc sub xchg icebp ficom jne push fdivrs inc push adc adc lods cmp daa adc or imul add push adc rorb mov shll adc or cmp xor sbb (bad) in cmp jle or fldl sub test adc add popf xor mov and mov jnp jns add rcpps cwtl (bad) pop pop or xchg div xor (bad) jecxz and mov cmpsl cwtl pop ja or icebp inc (bad) popa mov clc fidivl jno adc cli jae inc stos add and (bad) and pop mov adc or call cmp pop (bad) jp jge dec sbb or or xor lods and adc dec xor inc gs mov negl test add int aam push orps (bad) enter popa push enter in test fdivrl or jb xchg arpl cwtl pop dec xorl push xor xchg and pop into pop add out xor adc cmp and ret pop add add mov pop adc push test pop add ss ret mov (bad) pop or stos mov movl xchg pop mov outsb sahf pushf or adc (bad) mov js ret hlt (bad) out clc pop inc xor mov and mov movsb add adc pop lahf (bad) jg or outsl jo imul mov push imul test sbb test xor mov xchg ret nop mov add adc pop mov lea test adc and daa pusha add ss ja fisubr push loopne fs sbb call sub mov mov jb push inc sbb imul insb mov push lret clc inc fiadd (bad) (bad) int3 ret cmpsb fbld dec and cs add add sub rolb mov (bad) and or add xor daa std sbb add dec leave fwait add dec pop gs sbb mov jmp mov sbb add addr16 into adc inc mov push cmp cmp dec pop movsb sbb add stc jp sub sub popa gs sbb adc les push ljmp shr push and fcmovu js jl inc sub outsw adc mov cltd mov add mov pop fwait adcb (bad) xchg outsb mov clc xor (bad) call add mov adc adc les xchg test ret sbb shrl jbe loope pop (bad) jecxz xor sub pop ss sub inc push push rclb cmp sub call pop fwait cli sbb popa jg jmp aaa mov inc cmp jl or and in inc cwtl mov loop sbb ficoml fs andl dec mov addr16 jae lea jge fs pushf movsl adc add aaa mov push inc mov push or sub (bad) orb cmp mov fstl pop cmp add xchg mov xchg inc push scas dec je inc pop jb inc (bad) sub sub add xlat dec (bad) or into testl xor mov aaa pop pop shlb pop mov or mov repnz push (bad) add pop add mov xchg outsl orl pushw jo leave ret test add loope lea out js cmp inc mov adc jns ret xlat les jle cmc push jo pop sub jo ficom add adc pop aad call jo jnp mov icebp cmpsl mov push jb dec mov pusha adcb jnp adc ds test lods inc mov stos cmpl js adc xchg sbb xchg push add xchg pop adc pop cmp push je hlt aaa stos addl test js cmp push (bad) mov pop or insl aas loop test arpl pop jmp push or push inc lret rcrb jp call sarb pop addr16 add fwait cmp cmp lock jecxz shr mov inc addr16 cltd push (bad) cmpsb sbb orb ret iret add sbb inc fldcw inc cs jne push mov jne add out push enter sarl push out inc xchg adc inc xchg shrl push mov sub (bad) call jo xchg sbb fdivrs or mov test sbb cmpl inc inc in inc loope xor movsl (bad) xor pop xor leave xor test xlat movsl inc jmp outsl cmp dec push mov insb cmp in outsl pop aam movsb pop mov and adc push push rorb add sub push xlat es js out cmp push ja nop ret add sub sbb call or lods test inc xor mov add push mov add int fbld cmp xor loopne nop pusha cmp push mov mov je ds and popa mov sbbb imul mov and movsl push sbb or bound sub ret jmp lcall add mov push mov cwtl dec pop stos pop (bad) jbe ja mov test fnstenv push sub push or dec mov mov cld std add clc or jne pop mov or adc loopne rcrb xor fistpll aaa adc outsb push cmp dec jle adc mov fildl outsl and scas (bad) mov int outsl sarl test popf jne or xor test arpl jae imul and jmp imul dec fwait cmp and imul mov or mov xchg icebp daa push push or repnz and and or sbb das mov dec pop shll je mov inc push adc mov (bad) pop cmp push add les out cmpsl xchg clc dec ljmp es pop push pop add jge decl dec add cwtl mov or pushf fs xor divl fucomi shlb sub int3 ret pop sbb mov jne cltd lock inc sub cmpsb add cmp cmp clc pop dec pop jmp push or aas pushf pusha lock test in imul jp sbb jae sub movsl sbb push adc sub scas add adc cmp inc ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha or in out pop iret push pop mov dec sbb adc addl imul or or and push mov xor pop das movsl mov push and in iret cmp jl popa adc or pop cld adc call xchg pop dec add pop in xor (bad) lret or je in pusha repz or jne in mov pop lahf jae jns test sub adc leave add fdivs mov adc mov sbb sub inc sub pusha sub xchg daa fsubs push lock jmp adc inc testl push mov jne in sub fcoml sbb fcomps mov lods dec (bad) (bad) jge push mulb or arpl pop jmp popa jo ss add aad cmp mov shll adc pop push mov in in out mov pop popf jne bound cmp add iret dec add jbe sbb inc sbb fwait add jbe jae inc mov adc pusha rcr lcall fisttp dec loope cmp fnsave in inc adc xor (bad) mov cltd pop aam aaa cmpsb adc test xor jp jne and or pop (bad) hlt nop aaa or cmp rcr sub fdivs (bad) out and dec lock cld adc fisttpll rorb add pop push push dec xlat test dec lea xchg xor add addr16 data16 pop rclb xor insl and xlat adc jmp cmp adc mov inc test iret sub dec lcall sub jns push ss cld imul js and jge popa sub and arpl pop sbb mov clc adc sub xchg in push add mov dec sbb loope mov cmp outsb jp mov or fildll push or adc js nop xchg gs hlt (bad) add frndint cmp add sbb add pop jb lock and and push mov fist call sub cmp adc mov push add or mov out or sahf mov add or or and mov mov or sbb lods sub push out and or incb ret add inc loopne sbb pop shrb inc cmp xor iret and das sbb dec cli mov iret adc pop aad loopne inc aas inc ret lahf shlb jnp jle test mov and ss push or and aas xorl mov int push adc mov pushf sbb cmp ret mov insl sqrtps sti out ja insl mov fisttpl loopne lahf mov mov and cmp sbb push mov mov popf mov fcompl jp popf fcoms jnp dec lods (bad) sbb dec fadd leave adc dec add adc and jl and shr in arpl (bad) lea sbb mov add in mov cmc xor dec dec inc push fsubrl pushf cmp stos pop jnp dec cmpsl xor aad test cmp mov cmp mov into or dec jge push push add inc das lea xor jl jmp mov push add das or and sti orl cmpb jne xor cli nop xlat sub mov cmp sarl out hlt adc call out push xchg std (bad) sahf pop pop cmpb mov jo inc jp dec sub clc or inc jmp sbb rcrl push adc lock outsb cld jmp mov cld pusha rcl lock mov add popa adc lds xor push cmovs dec push dec xor adc mov out js and jnp inc enter push jge inc test std fadds add push or popf (bad) call rorb lods jb push and stos daa mov add sbb test lock in pop mov repnz fstl mov fldenv lahf push pop jg mov arpl sbb orl fdivrs mov add nop repnz or and out xchg adcb (bad) repz sbb sbb jge pop pop xor dec clc out and jno dec push stc jle adc adc call push jo mov sbb or nop add xor inc inc daa add sub pusha mov clc jnp je cmp inc call std orl mov test aam jns (bad) push sbb mov out jnp rolb inc daa cwtl push movsb fsubs jmp mull push ret jns cmc sbb push jno xor enterw rolb loope lods lcall sbb cmp mov dec mov subb in mov cmp fsubl movsb cmp fmull arpl in cli sub add pushf and cmp push adc xchg push xor shrb pop add push sbb cmp and mov xchg loopne pop xchg mulb cld test gs adc lcall addr16 xchg mov aaa inc jnp push fnstsw pop insl inc cmp fistl aas loope pop xor jmp adc and fcoml scas dec enter sbb adc push out jmp jmp inc push jge sub sub jne jno loop (bad) imul mov push and ds mov xchg inc xor jae and push (bad) mov add fcomp scas arpl imul movsl lock dec and sbb in xchg push test out lret rorb dec cmp jp sub js add push fstl lods add cmp aad jmp mov fdivl jne sbb daa jmp sub lar rorb mov add les loopne sbbl mov pop push and je jge jbe movl je std pop je cmp xor adc mov sbb cmpsl jmp (bad) dec xlat jecxz adc sub enter pop lds add xor das xchg ret aam test testb in cmp push mov or mov fwait aam lock arpl push fistp dec je sbb in jecxz fsubs xchg dec jmp adc jb testl mov pop sub dec or push mov das nop hlt push cs mov inc mov movsb addr16 (bad) push inc or lea dec adc add or clc or mov mov jg loopne stos ret jmp lds add dec push mov and aad cmp and ss pop ret mov fwait sbb rolb (bad) or movsl negb notl add jo sub mov adc jmp aas and push je push adc mov dec push test sbb jb mov xchg sub in jg inc jb jae mov push pop or movsl int3 cmpsl sbb pop jmp jae rcrl jmp push xor or xor add dec or mov cmp xchg mov (bad) ret cmp adc mov out call mov call ja add ja mov xchg lock dec add outsl sub jg xchg push popl out adc add je lahf fisttpl and scas xor push scas cmp leave push bnd das pusha repz jo or mov test out mov push sub xchg mov dec lock cld push push and xor fsts insb cmp repz jp adcl repz push jecxz pop lret nop dec jp pop adc jb inc xor add xchg mov pop mov and xchg jmp das jle out pop push adc push (bad) mov rcrb pusha adc stos dec leave and mov loop in das cmp xchg cld xor adc ja hlt mov inc imulb test dec dec sub call and pop ds jo lock mov out jmp rclb test inc lea mov inc sub pop lock lods xchg out sbb mov aad dec inc xchg jo sbb or aad es inc inc dec xchg sbbb out jnp inc push call cmp jge insl or gs mov xor jg mov loopne push (bad) push (bad) iret rclb aaa add mov shlb push or inc ret pop add inc call push xor mov add add int cltd lea mov sbb push inc sbb jns sbb (bad) enter test pusha adc aam xor sarl mov loopne enter leave pop jno sar das je jle pop and cmp pop push sub mov or adc ss jg js (bad) dec cmpsl push in dec (bad) mov adc or inc sub pop and test and cli inc bound out mov add sahf enter mov aam add and sbb call push lods enter clc sbb pop cwtl dec lock fldt int3 lret loopne dec movsb jae mov popa daa loope jg jl jo inc cmp pop push clc inc and mov orb clc stc dec or and call or insb or ljmp aas mov sub aas sbb xor add mov sbb (bad) dec sti fidivr and xor cmp mov pop cld pop out jns (bad) addr16 movsb push iret pop dec inc adc cs repz cmpl rorb mov jmp push sbb rclb es xchg test pusha sbb mov lods and inc clc xor jmp std (bad) sbb cld jmp clc in cmpsl nop daa pop sub push dec test mov jb pop lea cld shlb shl cmp or pop loop cmp mov loopne mov in je xor dec or dec adc ret sub lods inc or inc dec int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 dec jmp fs ret mov (bad) adc das jle jl xor jg sbb adc add insb or ds mov jl adc insl dec xor sbb mov jbe dec cmpsb mov imul (bad) cmpsl nop rclb das rcrb lahf jge mov xchg call dec fisttp or add add mov (bad) aaa or pop insb and (bad) mov daa dec xchg or xchg xchg ret icebp out js sbb (bad) push lock fcompl rcrl push mov push negl xor and cmp les fistl dec (bad) mov pop test imul pop out dec rorb cmp je sbb xchg sub test and xchg shr add movsl daa xor mov outsb xchg push push push cmp dec lea (bad) imul xor mov cmpsb mov movsl daa loopne pop dec and popa xchg sub add sbb ljmp or cmp in mov mov mov movsl loopne and nop rolb imul dec jno push xchg lahf jne mov and jle mov mov and shrb cmp xchg xor les jne inc mov shr sub mov sub or mov inc sbb xor mov cmp adc (bad) xlat iret add xchg movsb popa mov loope mov sbbl adc ret fdivl pop mov or fcompl jg cmp je sub dec pop xchg and or dec insl pop or sbb inc dec lock sti xchg dec sbb xchg cmc rolb mov jp iret rcrb daa sbb mov sbb fnsetpm(287 scas push sbb ja add adc pop add mov rcrb or pop adc dec push lds adc test sbb adc lahf jnp push testb (bad) and mov pop mov scas hlt dec data16 adc sbb push orb lock push (bad) jbe sti clc aam add mov int data16 jo sarb mov mov mov mov adc sub aam shrb movsb cltd cmp orl inc push cltd clc push adc mov or inc xchg adc sbb pop test pop stos adc cmp roll test and mov cmpsl (bad) lcall xlat and pusha fcoml dec and cmp jl test jge incl cwtl and imul push push fisttp ret jo push setne mov mov push (bad) inc mov out incb adc icebp dec and lahf insb add push outsl jo ja out and pop fisttp or sub arpl imul mov inc notl arpl mov push decb data16 push inc xchg lret scas bts pushl jbe sti dec jne cmp pop call daa call movsl pop xchg test call dec mov or push push lret or or push lea lcall data16 add inc pop dec fist sbb jg or dec mov sbb (bad) mov jo and sbb pop push inc dec jne inc ss rcrb mov or fnop outsl clc stc insb add dec push pop and sar mov ljmp (bad) stos sahf xchg jnp or dec mov pusha fisttp scas das (bad) adc add iret add pusha xor cmpsl xchg outsl add fs mov subb leave aas adc xor push fs push or test mov push push dec cmp (bad) xlat sub gs pop jp dec ret lock xlat clc add pop add aam dec in data16 andb jmp roll sbb jl inc push loopne ja and lea (bad) ljmp or add mov mov divl mov nop sub add cmp das dec and fcmovbe cmpxchg mov push or pushf jg subb xchg cmp and (bad) daa icebp and and fcmovnbe (bad) mull jg mov imul jne es jne scas mov and adc adcb inc and enter jle inc and lcall mov xchg and aas or dec nop sub or or test push pop out inc aam nop or nop adc mov ljmp inc nop dec push mov out xchg cmp lock insb sub (bad) repz sub cmpsl (bad) cld mov pop pop inc sub or or add (bad) in frstor clc pop pop outsl pop and add inc sub xlat insl jmp or cli iret sub ja pop inc lret out inc push pop movl jle mov cwtl sub or ja stos inc mov sub push sub arpl mov repnz pop dec sbb aaa or dec cmp cltd or not or inc je dec push out or pop xchg jge sub adc out add jmp popa sub xor push loop adc int3 or push push sbb dec add es fmulp call call scas in pop adc dec push xor add mov mov push shlb add sub and in adc cs inc jle inc addl adc and cmpsb inc mov xchg xchg btc add xorb dec mov lea xor pop or imul test in test sbb dec lock add iret inc sub out xor push xor jle inc inc or xor or es xor adc fs inc add mov xchg pop scas and xchg test xchg in loope mov push adc dec xor add lret int3 lds mov inc cli push pop iret movl popf movsb movl mov mov in ret movsb orl adc and xchg sbb outsb inc lret add clc jne sub xchg or mov dec cmp pop mov sbb jle aaa ja jle mov cld push ds jb jo or fwait or sti pop je pop scas adcl adc and and jl push loopne pop or sub push add sub pop ljmp push and pop push scas out sub adcl (bad) mov sbb push (bad) mov popf (bad) cld ja dec int cs insb cld and push sbb add test call cmp (bad) adc in rcll lds lds ret movsb lea pop pop ret xlat jmp mov ficompl mov in push aam daa aam sub sub cmc xchg je movl mov xor or sbb or xor fs mov (bad) arpl fildl mov xchg dec (bad) clc das leave pop pop push push add add call movsl and pop mov fs xor add stos add adc inc or add adc cmp cmp push test insb push xor lock inc arpl clc mov and in pmuludq push mov ffreep xor pop or add sti ja add pop or lea jge mov add cmp fcmovnbe out and mov push cmp or mov push or in xor xchg jge adc xor inc ret push pop jp cmc sbb addr16 add jle mov and gs cmp and push jl mov jbe pop jle mov pop inc pop inc insb push mov push xor push cmpsl pop cmpsb pop add mov or mov push cmp test add adc xchg push outsb imul push cld push xchg xchg mov jge iret cld push lret stc jo sbb push inc cmp addl enter test jge bound (bad) movb arpl fildll orl xor ja mov in push jmp mov call and push test enter pop loope sub add cltd push test adc mov mov pusha cmp push ja add sub pusha mov ret mov aad xchg ret sub daa daa daa popf jnp daa daa daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor cmp jns mov subb xor add xchg insb outsl adc or popf roll push (bad) add ret dec dec add push mov adc dec lods mov mov push xor dec add lods test inc sbb std xchg out push xor insb add dec cmp data16 dec imul fwait jae mov fild lret or outsb nop rcrb or orl je jbe and (bad) push je insb clc cmp adc jae lret push insb enterw je arpl adc fsub or adc gs arpl adc imul jae mov insb or shrb bound push outsb int in mov pop jo outsl sbb in mov jae add sbb or add add inc jl or imul dec aaa add jmp sbb sbb inc insb mov push push push je into insl dec outsl jo mov push push inc jns sbb mov aam addr16 and mov imul adc xor sbb xor aas add loopne xor loope or adc scas add jb fimull fs fiaddl add dec lods push jno jl jp or push jne fisubl inc inc xor mov inc outsl jb jae and or sub mov push pop cmp inc push sbb (bad) mov pop mov std (bad) cmp jle dec and aad mov mov cmpb fdivs pop subb aas addr16 ret sub and inc arpl mov cmpsl inc xchg insl mulb add pop leave and push es loopne mov xchg adc (bad) loopne shrb jl mov lret je add mov sbb mov and enter (bad) lock or (bad) int3 lds push add adcl ss aas out cmp dec fisubrl mov and xchg push add int3 cmp jmp push ss push add imul sub daa in addb lds mov mov xchg pop xchg push or push ficom add mov xchg in rol add sbbl lret lret bound js add xor cmc xchg add inc (bad) xor cmp adc aas mov les add push inc je push shll pop xchg push add xor insl fstpl push push cmp js in (bad) add add mov or xlat movsl lods into les add jp xchg pop pop pop daa ds test cwtl int3 aad test scas inc popa sbb das mov pop sbb call sbb mov imul daa and pop aas (bad) xlat push int3 push or push jbe dec or add pop xor adc in imul les in scas mov and sbb push movsb inc sbb fdivrl iret imul stos sub mov mov iret lret mov es into rorb dec or mov inc cs les sahf imul xor sub fs fcmovnb inc push dec jmp ljmp jmp in push in jae addr16 fs bswap int3 pop fadd (bad) fisub pop js sarb pop sbb enter clc xchg xchg lods mov add inc push mov enter hlt sbb or push xchg gs insl popa addr16 or mov outsl mov push pusha mov push loopne (bad) icebp loop mov mov jo insb js push sub out pop fdivrl cmp cmp mov jg cmp inc incl add test fnclex mov push call xor push sub mull dec aam sub push dec cld mov cmp adc push mov xchg call push pop sbb add pop xor (bad) nop adc (bad) hlt xlat out rolb push dec arpl mov mov and rcrl inc pop push xlat inc aas out or cld sub inc xlat jns inc ja push xlat rcrb enter jo faddl pop inc xchg sti mov cs sbb push xor or dec pop sbb cmp adc pop nop pushf mov (bad) ds push xor add mov and dec popa outsb nop add clc decl rorl rol xor dec jne push or loopne mov adcl loopne cwtl inc popa dec pop aaa test nopl out (bad) aaa dec jne mov lea jl shrb and add add adc dec ret je adc test popl xchg orb jp lds imul inc and sub add push adc add adc loopne xchg push inc cmp push dec or inc pop mov sbb pop xor or fmuls in mov jecxz imul xor xor mov lds mov mov jo loope dec sete popa (bad) sub cmp jo hlt dec cmp mov imull fisttp loopne sub shld test jmp push mov push push and cmp cmp pusha pusha and (bad) je (bad) loopne in std xlat cmp fisubl pop xor movsb mov add pop inc sbb inc push dec cmpsb or pop or stos movl (bad) adc cmp repz lock adc or cmpsl and jnp frstor add jns mov or in aas add mov push xlat insl pushf add xchg or lds in (bad) in jg mov ret mov loopne adc fistl (bad) push cmpsl or inc add or push call pop daa mov pop add or jb mov xorb pop sti or pop dec insb sbb push xchg dec decb jbe add jo add push gs insb pop xchg sarl cwtl ss imul ja cmpsb xchg add dec imul lret in rcrl or cld inc incb arpl imul inc js,pt pop pop or or add push imul and insl inc dec data16 add aaa inc dec mov das pfnacc (bad) inc popa fistp jo or push imul das jo icebp loop push addr16 (bad) sti inc das inc je inc push xchg dec notb or adc or add jg mov je or sub push sti adc mov fs lahf sbb jae jge dec inc pop or push sbb mulps push or jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl rorb cmp and das test mov or sahf jge andb or push pop cld cmc xor and pop xor lahf or add mov mov loope lods jns pop pop addr16 inc dec push dec pop inc dec inc push push inc push add inc arpl inc inc inc inc push dec push xor inc dec rcrl mov arpl inc inc push sub dec dec inc push dec dec push mov and inc inc push xchg inc dec dec and es pop out inc inc xor xor adc or jbe mov xor xchg inc push inc inc dec notl mov sub dec mov imul push (bad) das sbb mov xor push push push jae adc test mov aas inc inc dec pop adc push push push dec jg push ret push inc scas dec inc dec push mov insl sbb inc pop (bad) mov mov inc add lock jl mov push into push jl push add sbb std data16 enter add dec or sbbb add add push inc or pop mov lea cmpl mov lods popf sbb inc or dec sbb insb lret or jle and inc data16 add add or jle mov dec pushl shlb fmuls mov daa and pop cmp shr mov sbb lcall adcb bound and mov mov and ds inc add loope add pop push loop pop or push mov push dec nop popa xchg arpl popa ret das cs or add xchg stos inc adc xorl jne dec fsts push stc mov push inc in clc pop mov repnz scas das sbb andb das cmp mov loopne jo cli das cwtl add movsl ss scas pusha xchg sub int3 das mov arpl enter or rclb or inc ret mov jg mov jbe cmpsb add mov add push (bad) inc adc or adc cmpsb xor and jbe xor dec out movsl adc xchg dec push pop repnz enter mov testb movl fnstcw xor inc lret enter inc aam add or outsl pop sbb mov adc lea incb ret mov mov cmp mov movaps leave jb jmp jo in xorl add fcoms sub flds jecxz push mov jg or or fisttpl jp cmp push push or adc orl sub dec pop out out andl mov adc loope repz movsl dec or ss mov adc js lock push mov push inc pusha (bad) popa movsb mul pop (bad) adc or pushl aam inc lea (bad) mov lock pop sub (bad) jbe sub (bad) pushf mov mov push push xor mov test fdivrs int mov das fdivp ficoml inc sbb mov mov ja sub ret pop (bad) xchg push cmp and push movb outsb inc sbb cmp xchg pop fisubrl adc sub loopne push mov (bad) pop shlb sbb add fdivr mov mov das lret cmp add mov fwait or inc lret andb add leave test rclb das jns lock je jo iret in push mov add jne fistpll lretw jne int3 mov sbb mov inc adcb mov inc sbb xor das ror pop jmp insl lret faddl xor or and fsubr push cmp and xor das sbb mov lods pusha jb or pop sbb sbb pop jb movsl or movsb loopne loopne pusha pop xorl int3 lret int3 vpmacssww sub test jno int3 lcall movsb mov nop cmp push pop aas popa int sbb add push xor mov mov mov sbb les inc mov fsubrs mov add or mov ja lock adc inc call cltd into fistpll test pop fldenv or data16 insb das movsb add adc fs mov mull adc mov sub jmp je cmp add push adc out ficomp gs repnz int3 mov mov aas mov enter popa inc stos fimul in add xchg je (bad) nop pop enter mov js (bad) hlt mov add or push cmp mov push adc inc inc sub movl js test ret int3 push test mov (bad) (bad) sbb (bad) pushf mov cmc push adc cmp mov pushf mov nop pop jge and lock adc ljmp test sbb and push or push adc mov pop or or mov push push or push push gs xchg add push jl sbb sub inc lea aas in (bad) xor and popa in jo aas mov roll (bad) mov shrl inc popf dec insb test fs and lods sub sbb cld imul dec jae pop sbb adc (bad) inc lahf pop je mov in enter push int3 test and imulb jge push xchg xchg (bad) ret insl push les or bound sar push sbb lea int3 fiaddl inc (bad) mov shrb mov add pop je push xchg dec roll pop push mov ja or iret sti out adcb cmove testb je push std dec iret mov pop add jge cmp pusha leave scas fwait xlat cs arpl push jle jle test ret lods inc add addr16 xor push jne mov arpl xlat pop inc outsl cmpsb mov adc or clc lods sbb add (bad) jbe mov fcmovnb lds xor pop pop test icebp push add cmp mov inc cmp insl sub cmpl xchg push add sub int xchg aas aam popa cmp decl xlat leave dec mov loopne (bad) out mov and sbb adc and sahf aas push mov mov adc cs and pop adc adc cmc push adc inc sub es lea xchg mov jb jge dec lds cmp jge mov ja jae (bad) std or mov and mov cmp je mov dec xchg sbb pushf pop aad mov mov add add sbb inc push add push or es test add test add arpl (bad) mov adc lea push mov clc mov not and mov je fcmovnb mov je inc xor movsb jne sub xor nop (bad) jo fistl push add in xchg callw sbb mov fs mov add push xor inc push mov out fdivrl push adc push in adc sbb pop push sbb lods lea test jnp mov sub add ror add rclb mov outsb je xor sti (bad) in ror ds jno mov negl lods inc add movsb stos in test pushf xor jb or inc add orl inc mov adc mov inc push ret shlb push xorl dec call adc mov cld das lea pop xorl inc add aaa scas rcll ljmp dec popa nop and add int3 es fisubl (bad) fsts imul lods inc in lcall sub loope cmovnp jo jmp add test mov pop mov cmc fwait or pusha loop jo aam pop cld fcompl mov bound push push cmp mov xchg cmpsl pop hlt sub fcomps in sahf ss lock jle das data16 push out pop push jl or mov arpl adc fldt mov ss aaa add notb mov fwait add lea add cmpsb mov pop inc pop pop in loopne dec idiv outsl adc xor not and lahf pop sar pop dec jle out mov mov mov add cmp imul sub add jae out add cmp sub xchg adc stc mov mov xor push push or imul sub lcall packuswb rcrl sbb subb pop inc pop xor cmpsb fdivrl or fstl jge xlat inc xchg lock mov xchg (bad) ficom cmpsl sbb and fsubr fsubrs push sub dec jmp clc js fstpt pop push in dec sub adc add cmp push das push jo mov in (bad) push dec fs push push ret bound pop mov add jns rcll loopne xchg movsb mov call add bsr pop cmpl test add inc push sbb or mov sti xchg lea add mov mov or dec pop sarl mov mov add dec (bad) sbb inc add lea fnstcw cmp adc dec out es push cmp sahf lcall mov pusha lcall add jne insl andb cmp jge jbe (bad) adc adc adc sbb insl mov push sub (bad) cmp sbb add jp test dec js and outsl push push and insb mov enter mov dec mulb jmp add (bad) mov sub shl mov mov jmp xor sldt adc int3 xchg cld push mov (bad) mov sbb in outsl jns push jno lock jl jnp jnp or pushf cmpl int aaa out push ds sub inc daa movsb imul movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild ja (bad) icebp push add aas insb cmp cmp (bad) jo push xchg adc sbb add add (bad) orl push pop cs mov fldl inc rcr frstor mov lods xor loopne pop mov sbb test dec pop cmp int3 mov add pop push push dec clc xchg adc inc or or shll sar ss and adc dec mov pop push adc pushf scas lret mov pop imul fldl iret jae jo dec push xchg mov daa or in into and gs xchg or pop push push imul or ss push push stc sub and cmp cmc sahf test inc push adc dec stos bnd sbb (bad) xchg cmpsl dec les shlb rcll les mov add fmulp enter mov xchg add das test sbbl xor cmp shl dec fsubl shrb pop mov daa insb in addl add (bad) cld mov jb in hlt lock and xchg pop fnstsw mov add imul sub out xor js xor mov test pop pushf stos shrl movl mov xor int3 and add pop insb pop cld push push and mov add and dec add loop push sub add pop mov cwtl sub mov sbb or mov insb ret mull mov pop add or pop or mov sbb in pop cmp mov decl and mov (bad) cmp jg test jle mov int3 cmc cmp jl mov enter (bad) jg test pop clc jle movsb xchg pop test or adc xchg push enter pop push pusha push add dec shrb loopne sbb (bad) push ss mov pop mov pusha and repz push stos pusha pop jno nop out fsubs mov andb sbb scas mov test jbe in leave sbb inc vucomisd insb sub test bound xchg lods mov rclb sbb (bad) jne test sub xchg push fs ret xchg jg or jl push cmp cltd mov dec jo call test mov inc dec fs fnstenv cmp add mull xor adc xchg sbb (bad) js ss repnz add push inc and test pop mov add dec mov push mov sbb mov inc cs jbe nop pop cwtl (bad) mov mov insl mov push mov imul mov add xchg lret and xor xor popa pop je sarb add push push mov (bad) mov ret mov and outsl xor mov stos or and rorb aaa repnz pushf arpl pop pop or xchg arpl ljmp lods roll aaa lods int3 lret prefetcht1 push rcrb and aas ljmp out sub sub lret mov pop push out dec xchg loopne push movl push mov fiaddl cmovs push jle lock clc jb jmp xchg push mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl (bad) add imul push push sub adc data16 icebp mov into adc push xchg leave jne aas cmc mov (bad) xorb or mov add and add sub adc aaa mov rcrl mov mov cmpsb push cwtl (bad) aad fldl xlat xlat hlt and leave adc add adcl aad jnp push push popf sbb insb sar inc ret scas push addr16 mov push sub adc inc jmp (bad) and jnp lods test add mov (bad) jg fwait pop orl inc mov pop cmp enter push sbb adc (bad) push inc jg add sbb sti loope push mov pop push push in hlt movsl jmp xor inc call cmp imul cmp call outsl sbb dec loopne fdivrl add mov faddl loopne dec adc fcmovb inc push xor add lock pop repnz sub mov outsl pop add dec jb iret or xor mov out in mov mov or lods data16 sbb insb mov lods and jp push outsb jle mov mov js add insl mov test mov lcall test loopne stos dec lcall mul xorb int3 sbbl dec es movsb pop aas test movb data16 and negl jmp cmpsl sbb pop push jns loop pop and push inc call or aam sti adc adc xor nop sti add es mov push adc push sub lock jmp inc lret addr16 dec aad popa xchg cmp lock adc sbb add lcall xor xor sbb and je sub insl jne jl shlb int3 iret add push iret in aas clc push cltd fsubs mov push and pop hlt rorb sbb add xchg lret pop jne cmp cmp push cmp push jo mov inc or add mov outsl (bad) cmp mov ja inc and cmpsl inc xchg inc xor push cmp inc enter sbb mov adc push adc xchg or cmp cmpsl pop rcll ret xchg push pop ret pushl rorb imul out pop xor cmp mov dec and add mov mov and mov (bad) push es or jmp movl adc mov add pushf (bad) shlb mov or cmpsl push cmpsl mov add xor ja pusha int3 xor out xor mov add mov mov sbb movsb pushl dec sub cwtl lea xchg in movsb mov imul mov sub outsb cld inc jb push sub cwtl add mov inc push cmpsl sbb push pushf xchg das add test es push out aaa add dec not pop test iret inc lahf shr lock inc loopne dec and adc (bad) xor and loope push pop pop mov inc sub lret and add inc add dec sahf pop sar pop (bad) or xor int3 adc idivb aaa hlt int3 xchg jo and repnz dec pusha loopne jmp and dec jo (bad) pop int3 push and jecxz andl pop pusha push loope nop andl jp push incl pop adcb (bad) icebp or dec add jne sbb in mov adc pop adc push jecxz adc cld dec rolb outsl dec pushf lea and mov aaa or push mov mov pop lcall ret adc test gs lods popa sub push mov jns mov xor or xchg shlb inc lahf shlb pop mov sub mov and lds push test jae sbb sbb test mov lods and push cld rcl xlat (bad) not add adc cmp es fisttp adc movl pop or loopne dec pop add sub mov adc popa pushf cmpsb or out bound loopne mov int (bad) les ret jl sbb adc and and sbb sub pop insb clc push or cmc add gs js dec mov int inc lds lcall fidivl ljmp stc pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or pop cwtl adc (bad) out iret aas adc ss aam mov nop sbb faddl int3 imul inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret sbb lea mov test in adc popw and insl inc fisttpl lods ss fistpl int3 test cmpsl push or lcall add or xor decb dec mov cmpsl hlt add pusha stos aad fiadd nop add je xor cmp fs cmp and or out sbb inc mov sub adc adc sub push fsubl jecxz imul loopne sbb inc mov adc leave stos in jne cwtl arpl daa mov cmp outsb cmp cmp jne mov xor test insb lods or xchg add lds jecxz in pop or mov jae sbb mov dec inc sub sbb outsl jg xor push xor or (bad) sbb mov inc xor push mov dec mov lret add adc or gs mov sub adc mov inc jae jnp (bad) lock or pusha add jmp arpl and popf mov xor jmp pop loopne pop jp fisttpll dec gs cmpsb adc push ja xor loopne aaa xor xor dec lcall adc and mov push jno (bad) arpl push inc xchg fwait inc mov dec out cmp loop sbb sub jmp (bad) lods xor mov icebp popa fs or lcall or pop loope and add jo pusha jo mov rorl xor push push das mov mov inc sbb sbb adc jo hlt roll js enter push jecxz and add sbb or sbbb mov addb xor pop out adc sbb (bad) mov adc sub test add pop adc js mov loopne lock dec aas ds pop in cmpsb pop fdivs aaa jno inc jnp jp repnz hlt mov sub sub inc out add adc mov mov lea add push xor adc in sub shlb inc in (bad) mov pop cmpsb lock imul inc cli and mov cmpb out xchg nop lret idiv hlt js sub xchg in popa popa or or lea aaa fsubs push arpl add cmp fisubl fistp mulps (bad) mov sub loope cmpb mov pop sti sub je (bad) repz inc push sbb and push movsb mov pop test shrl adc mov and pop cmp ret mov pushf add sub inc and and cmp jo sub and test es and sbb sub stos std test popa popa and or jns (bad) lods and jmp icebp inc sub push cmpsl movsb or xchg push mov sbb adc test mov imul cmp inc xor mov loopne aam add call or subb cmpsl jo ss in push test mov cld cld or dec call mov (bad) hlt clc add add fsubrs xchg (bad) aas lods push sbb adc cwtl pop and adc mov or fdivl pop and shll xor push nop or push test sbb in call sub inc ret lea js ret pop inc in adc movsb adc and sbb sub and xor sbb mov (bad) movzwl push insl or dec sub scas sar jle loop sarl and lds push paddsb loope cmp push dec push cmp dec push jmp sbb enter add and jl es add sub pop leave insb insb or int3 jne add inc outsb cwtl andb call nop adc dec inc xchg call sbb pop dec inc or inc imul inc sbb pop and push pop mov push fcoml addl dec add (bad) sbb mov ret adc das adc mov popf arpl subl sbb jo out loopne fs xchg addr16 subl rolb pop fadds jnp xorb push clc inc mov cmp fmuls and imul cltd sub (bad) (bad) das xchg sub xor or add adc add clc sbb daa call cli pop fildll pop lcall xor cltd adc inc xor insl pop rorl fldz cwtl inc add jl or adc pop (bad) ficom sbb incl test shr loopne lcall aaa push in sub das (bad) xor or sbb cmp xchg imul out add or ss rorl xor sub ja push loope and cli pop (bad) xor sbb pop sub mov cpuid sbb pop fiadd push jb cmp fist inc sbb int and test rolb pop movl cmpsb or mov into data16 fs adc push cmpb ja jae repnz inc inc icebp jmp mov xchg add cmpsl or mov (bad) aaa iret jne jl mov insb add add xchg or inc mov hlt mov int3 in ja ss dec fcompl pop pop sub add test pop lods (bad) ret jmp inc pop cwtl clc dec mov inc imul xor fcmovb (bad) test lock mov divb adc cmp inc xor push fist (bad) xor xchg sub adc cli mov mov adc mov in dec dec aam call and or loop xor ss mov xor pushf sub cli sub jne push push leave adc sub movsl shlb push sub ljmp push mov add movsb and fistpll sbb adc adc movb or popf stos adc add or jo int3 adc mov arpl rcrl sub scas roll movb icebp das cmpl inc imul jne sti mov out dec jmp enter bnd mov loope lea xchg and or rolb sub jecxz jp (bad) mov (bad) xor dec sub fcoml clc dec test lret adc insb xchg xor dec clc push test inc sub mov pop mov adc cwtl lea loop in mov mov insl pusha add movsl (bad) lock daa lods jne loopne out push ja jp push (bad) pop cmpsl loopne push pusha loopne (bad) pop add ljmp int ffreep fild jp ja (bad) loopne loopne or add sub mov inc mov or inc mov dec pop pop sub or mov mov push sbb cmp or jo rcrl or push shrb dec clc loopne cmp adc shlb push xchg cmp loopne pop and xchg enter push sbb clc lock enter inc dec mov adc enter sbb ja lret mov cmp out pop add (bad) js pusha inc divl dec lods sub ficompl loope mov loopne or call into or je loopne pop sbb sub (bad) pop popf push ljmp out vmovss adc mov adc mov clc sbb sub jp or rorl pushf dec and mov cmp aam adc pop fdivs or xchg xor dec popa xchg push sub (bad) lock inc pcmpeqd call test int imul in ret or bound cmp rorb sbb xor test or lods outsb sub aam addr16 xchg in sub cmp or jbe mov es jne inc sbb mov pop mov mov or mov mov add xchg movb adc or pop adc movsb and push int3 in pop ret rcl xchg mov stos stc dec mov loope fsubs (bad) xor cmp pusha inc in popa mov and xchg or cmp xchg (bad) in mov in out or mov jbe adc adc mov adc fs movsl add push and xchg adc sub movsl cwtl and or enter add jl push andb out in jb add inc xchg ss adc pushf mov fs rorb xlat push aam lds js jg mov push or pop mov movb xchg mov add sbb sub jle sub mov stc int test and push jle fildl sbb inc adc js jo mov cmp xor or cld arpl or imul pushf xor push jae cmp mov scas adc pop bnd fmuls test mov and pusha mov fcomps jmp (bad) push je jp jo mov popa mov cmp test (bad) fadds faddl dec xchg loop push fldl adc sub movups pop decl push jo xchg int sub ja xchg mov lea sahf mulb out dec adc into or adc je nop lea push sbb sbb mov lock test adc add pushf xor and mov sbb aas fiaddl pop lds cmp fimul orl mov push and dec cmp fadd movsl push adc cmp dec sub and rorl cmp cmp inc shl pop add pop loopne and pop movsl rorb adc inc mov lcall insb js lret (bad) jns (bad) jbe pop pop and shll aad sbb and das jp inc mov lret xchg xchg adc test pop iret push nop cmp orb std (bad) or sbb (bad) push leave inc xor nop dec sbb xchg cmp add cmpsb cmpl cmpsb mov and xchg mov cmpsl and out fbstp es lds clc rorb loopne jmp dec pop insb fbstp add jmp sub fwait jge outsb sub or dec (bad) dec sbb push mov or or and or and movsb ja,pt stos ss mov lahf mov add lcall jg adc or in dec sub and xchg iret (bad) (bad) sub xchg dec pop sub fs jbe or push sbb cmp cmp arpl cmp orl mov lods sub sub pop inc and into jo or adc or shll sbb adc sbb lahf test jae movsb jl xor je push in dec cwtl jbe and mov in jge dec jbe mov push add lret lock or lock push loope jle in adc test pop (bad) mov in jmp inc push xor xorl ss jns or mov mov cwtl ret test push push pop xchg (bad) inc sbb cmp mov and and rcr adc ljmp and stos push dec mov jmp jl mov fwait add lods inc addb mov adc cmp movsl sbb push add mov in je inc addr16 mov push aas rol loopne cmpsl push xor lock out pop movb add or cmc iret mov xor mov or in mov mov (bad) mov sti mov popf test ss push pushf jmp dec popf movsb (bad) jl add xor sbb test cmp add adc lahf call inc dec jns fistp stos xor ja punpckhdq dec push inc adc mov (bad) mov push inc nop or mov mov inc pop xor aam mov out add cmp mov jmp mov add mov jl mov mov adc sarl xor mov gs test (bad) or xchg inc or orl inc cmpsl push pop outsl fildl jle sbb adc movb jo xor xchg pop fmul rorb cld lea add lods adc jns cmp sbb add jecxz (bad) pop sub cmovnp pop mov jnp sbb rol stos pop lret cmp mov hlt mov or cmp pop and notl outsl je jo sub add ret fs cltd sbb adc (bad) subl sbb mov jns mov xor inc dec (bad) xor hlt push add add andl or mov (bad) mov daa fisttpll add push pop cmp je push push add jo inc mov nop pop fwait mov mov enter add out dec bound mov jecxz jle adc mov add pop and jnp daa cmpsb scas sahf cmp jo dec or dec mov xor js mov into or sub jne mov mov cmp inc mov mov lcall jb (bad) outsl adcl bound inc pop push or pinsrw add xor push movsb adc iret sub or sub test jo xchg sbb imul in lahf test and int cmp jne push mov sub adcb pop push add xor pop sub loopne and out out es adc and push adc test cmp fwait sbb or aaa mov push test xchg mov mov jo push mov jmp lds xchg mov pushl flds sarl idiv mov fwait dec or inc hlt iret xchg xchg sahf sbb inc cmp cmp popf jmp add lds jo jne loopne dec insl xchg ret enter or add xchg push pop pop leave add pop sbb hlt jecxz inc mov in sbb clc ret aad lret cld sub jl cmp je popa dec mov xadd pop add mov popa stc rcl pop mov icebp or imul int3 es mov andb xor pop fcoms faddl or xchg aam add add les fwait (bad) push gs and mov adc sub sbb pusha js out push push test in (bad) mov roll dec cld adc mov aam pop xchg mov pushf or inc sub les int3 mov (bad) mov add mov xor adc loop mov or (bad) mov and leave mov dec in sahf and mov ret or xor cmp and es mov lods push cmp jg dec insl pusha jmp pop inc push js ja mov ret shrb add ds cmp or pop jno or inc inc sub flds cmp iret inc sarl mov jnp rcr push or adc fs leave inc imul or push sbb push lahf movsb adc cmp mov das popa and lock arpl loopne xchg sbb cmpsl test jne adc add fldt test in ss adcb aas push test push add jne xor dec (bad) and lock cmpsb icebp dec or test xchg rcrb adc inc xsaveopt add sub nop aas outsl sub and and inc push xchg lock push xchg xchg xchg pop movups adc xchg xchg add push clc mov adc aaa cld push clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter mov hlt gs cmp cmp lds gs adc cmpb dec pushf jbe cmp sub mov test (bad) sub mov or add (bad) stos add sub pop aas rolb dec arpl fwait xchg mov or jo test in imul or out movb add sbb add ja pop or inc imul pop or mov mov push jmp jmp xchg inc adc dec pop mov ljmp insb lods scas (bad) dec adc adc jmp jo nop push nop or sbb jle push arpl and (bad) (bad) pop adc dec adc ret addl jge sbb ja push test and js adcl cmp dec insb add rcrb jle and or in dec jo push popa cmp jle push pop cmp mov sbbb pop pop rol sahf in pop sahf (bad) cmpsl aam pop and and das cld dec add dec call push std daa jmp push sbb shr sub jg ljmp jmp mov sbb push adc inc cmpsb pusha (bad) daa adc scas loope orl push dec dec es add icebp push dec call xor push inc xor sub es sbb lods and lock out pop sarl (bad) aad xchg mov and adc xor nop (bad) lock rcll daa std mov sub cmp push incb shrb jb mov cmp dec jne adcl pop clc cmp lea lea fcomps inc and clc loopne (bad) ds jb push sub mov jge xor dec push lret leave push lock dec inc pop cmpsl and xchg or or add xor stos iret cmpsl es push jns sub push adc cltd and aam scas or movsb push stc in daa cs aaa xor xchg lods add fcoms sbb nop fcomps or test jg inc inc jne mov adc imul clc call adc fdivrs mov cmp ret mov add test ss sub in call jmp ds shrl mov adc push adc cli push adc adc outsb jne ret cwtl (bad) insb popa jns jae mov sbb inc or clc andl repnz mov xlat or es in stc xor adc sub mov push push inc push cmp dec inc into add popf sub dec mov or movsb sub or (bad) das add jle fldl and push loope jle prefetchw bndstx mov lcall jecxz xchg cld mov pop rcll mov pop pop jns cmp inc dec pop fisubr sub sub outsb or jl inc imul xchg movsl frstor adc xor and gs fbld loope add adc xor push and fs xor aam popa test pop dec lret or sbb jnp add sub xor insl add add push (bad) outsb add sbb rorl jo inc jnp cld mov outsl cmp test and add dec inc or sti add movsb push mov sbb adc xor xchg mov aam je mov pushf pusha loopne enter cld jns daa cmp push dec out sahf out sub xchg fwait push pop outsl ja (bad) aam jg ja xor mov jns mov sbb and sbb xchg lea loopne decl imul jo fwait cltd out or fsts sahf aaa cmp cmp mov jp ret das sub pop loopne cmp and scas mov ja enter mov dec mov or bound push dec ret or shrb sub testb lock add movsb lahf mov outsb leave insb fs xchg orl orl testl sbb lahf sbb inc sbb inc mov pop scas inc daa inc xor iret jmp and es mov sbb xchg push out fs sub pop mov test inc jmp flds (bad) adc aam stc mov dec xor (bad) adc hlt xchg dec and sbb pop sub push test dec add push repz sub push jno lahf xchg adc inc cli mov cmp mov idivb pop and prefetcht1 clc or add sbb xchg sub add lahf lock push jl jns pop bound jbe outsb (bad) addl xor (bad) je pop sbb fcoms xor and add in js aam faddl xchg mov or lock pop imul (bad) mov jo je (bad) xor sbb nop rorb cmp hlt jne out in mov adc rolb pop or inc xor sbb push sbb (bad) daa xchg aam dec sbb sub adc loop lods ds mov cltd mov xor push and je (bad) push xor (bad) mov and adc or inc sbb jle dec jne push ljmp rorl dec das or fwait cmp xchg inc xchg je xor pop xchg sbb inc push enter cmp mov inc lea adc cwtl outsb sti cmp pop (bad) das sbb bound rcl arpl mov jo flds adc ret jge pop dec lock sub adc and (bad) xor mov ja mov es nopl add add mov sub xor mov xchg push or inc mov cwtl push jmp scas push mov lcall add in pop inc sub adc add push and mov or jo das fdiv movsl and call scas sbb in sbb fdivrl cmp hlt shll dec lds lea jbe ljmp dec mov loopne pop push jle outsl inc fnop jmp dec in (bad) pushf mov or jno sti test shl fcmove vprotb call or push sbb mov aaa and idiv adc pop inc adc jne jno ljmp inc inc cmpsb jmp xchg lock mov push adc mov sbb test pop rolb call lcall pop (bad) je xchg push cwtl lock fisttpll add and mov fldcw cmpl sbb shll xor orb pop (bad) jne mov xlat push test xchg xchg cmp leave test lock addl xor push stos xor inc pop pop inc push xor pop push orb jmp repz mov sub inc jo aas test nop (bad) fildll add pop aas or inc push cmpsb jecxz cmp cld inc (bad) add sti dec je or icebp pop xor sbb and adc pushf jmp push orl insb ret mov pushf mov nop xchg cmp rol sub pop and lret push dec mov xchg adcl cmp jne sbb mov cmp sbb (bad) and cs out cmpl add lock push pop aam dec ljmp xchg iret xlat cmp jne rcrb jbe in pop cmp sub mov sub into and fs pop repnz cmp lret and sbb leave xchg enter cmp in aam pop push inc push idiv adc fcomps rcrb insb push dec insb push pop sbb (bad) push leave xchg imul dec push jo imul dec jo fs dec push je mov inc cmp sub mov out pop inc cmp mov dec fsubs lret push aam enter xchg dec in push rclb add push cmp push adc add sub cmp pop lock arpl arpl inc cltd xor movsb subl shrb push sub pop inc push adc jae repnz das push and loope outsb cld fcmovu mov ja mov dec das pop add outsl jae lods xchg or daa jg push sub enter pusha jo pusha xorl sarb add jo mov ds lock adc push aas push push push push push popl xchg lock (bad) cmp sbb out andl dec enter sbb adc imul or adc add mov pop outsl dec les cltd movsb mov add shll pop pop inc es push adc or inc xchg enter dec pop das fmul fild lcall push decl lods sub sbb pop mov sbb dec jl test nop xchg mov movsb mov mov mov mov aam mov mov hlt pop mov add mov mov and mov jg sbb push in xor pop (bad) daa mov adc fwait inc adc add loop pop arpl xor add xchg inc ret mov or xchg add enter push movsb xor sbb orb sub test pop movsb xor xchg pushf je mov adcb test push sbb dec gs sub mov sub inc mov inc shrb and dec push push movsb xor pop shrb lret jl inc sub push mov pushf test mov les and dec push push movsb in lock movsb xor xchg hlt adc and xchg push push cld xor adcb dec add push sbb je inc sub adc mov and xchg dec push push and dec sub push movsb xor sub xor xchg inc pushl inc inc fsubrs lds jne sub js push mov pushf add push sbb insb outsl jae mov mov sub and inc push xor pop test fcmovbe aas push popa jb cmp lods xor (bad) daa test je movsl mov dec jne insl mov mov dec imul or fs pop or clc popf dec arpl jae mov push fs mov jno lea or jns jp jae sub inc outsl imul pop pop xorb xor mov push ret pop xchg or or or adc push mov int pop mov or push (bad) loop mov pop iret ds daa fmuls or xor outsb mov sub add cmp (bad) outsb adc mov pop pusha push (bad) in inc (bad) ficom mov (bad) in pop xchg sbb pop pop xchg das jns dec or ja and rcll jns in icebp and xchg jne insl outsb jo mov das pop fs fcomps jo inc imul icebp mov mov inc outsl arpl and xor mov push xchg pop mov add sbb adc adc gs insl add dec fcomip mov outsb les xchg push add and jg jno mov jbe ja adc subl cmpsb add xchg push mov out test cmp mov outsl dec xchg add xchg dec dec jns dec push in orb push mov mov push jmp inc lock in dec jb dec pop sub fs xchg pop or xchg add pop jb push pop and cltd pusha sbbb mov fcmovbe outsl fdivs call mull jo nop push pop jg ss inc nop push mov dec aas dec ja loope icebp test addr16 (bad) adc (bad) jp (bad) js cmpsl jne es push test push push movsb or xchg insl add xchg add sub fiaddl xor jmp or call mov sbb in stos je je pop cmp cmp fs adc or loopne dec dec cmpb test inc push push notb inc inc push dec inc test shll lahf or dec jp or (bad) fcmovnb fs xchg adc test and sub (bad) dec xor cs jl and out out (bad) fiadd adc out xchg jae shrl jo ss testl jbe cld push pushf nop adc mov lods loopne dec dec jbe push xorl mov or inc pop enter ret mov adc pusha adc cmpsb ficoml pop push faddp out pop xor int3 pop xor loop or mov cmpsb lahf push inc or fcmovnbe mov inc and std fs cmp sbb ja fs or and pop adc hlt aaa mov scas add in xchg push adc clc adc sub dec mov xor dec push clc push inc mov xor sar aas ret loop add push or enter push jo loop cltd or adcl or sub cmp out or jb dec adc rolb push push inc mov and and movl loop add movb dec or xor dec adc sbb xor inc cmp test adc iret test ret nop xor cmp jg sbb loope lock rcll cmp cmp out or movsb es mov cs and scas adcl adc test es cmp leave jo (bad) or jge mov pop inc lds cmp test mov aaa or rcrb and pop push out xchg (bad) mov pop pop (bad) cmp adc cltd and clc or inc into adc add (bad) rolb push (bad) in insb call jg pop addb add push dec push rorb push dec (bad) mov (bad) mov cwtl add (bad) push add push sub pop xchg adc fwait cmpsl push adc aaa hlt pop fisttp xchg pushf mov mov sbb cmp dec push push push fbstp test add adc inc outsb iret pusha pusha dec pusha je (bad) mov nop push (bad) sub leave push mov pop mov sbb mov mov dec js fnstcw jecxz dec xchg mov lock xor push stos xchg xor ds cmc mov jne pop mov es and daa jcxz dec sbb (bad) out cs mov adc sbb cmp push jl add hlt push xchg mov movsl adc cld pop add dec sbb mov mov fstps pop or roll test or pop mov jl test testl or push inc cwtl or add stos add (bad) pop movsb lret test lods mov dec lret mov pop add enter test pop jae mov or inc mov mov cwtl loopne aam jo lcall loopne bound push xchg inc xor sbb add test xor fildl pop mov adc xchg nop ret ret add xor enter pop push pop add add dec and xchg push or (bad) call mov sub xor outsb inc xlat popa das popf dec jle pop push outsl pop adc enter and pop pusha mov shrb push mov xor push inc mov push mov (bad) cmp xor sub sub or add push and mov daa or sbb mov xlat pop cmp std insl fs addr16 push (bad) jo fsts mov adc add and arpl mov add mov mov aaa pushf cs iret leave xor inc jl xchg dec nop sar dec sahf xchg mov mov lock test push sbb sbb (bad) and dec mov mov jns inc push lods cmp jo inc dec lea rolb nop add sub push mov push daa outsb add mov or daa icebp (bad) dec jno mov push inc sub xchg xor adc push pushf adc mov mov push lods pop cwtl push push aad fisub push pop les inc loop push out imul testl adc add lock dec es add loopne cmp pop mov jns pop jl xor push xor mov cwtl jo je dec cld inc aaa outsb fs add jl outsl fimull pop dec push je jle jo and inc lahf insl cmp inc fs lods repnz add push sub fistpl rorb inc add pop nop mov mov and fsubrl in push and popa push shrl xchg (bad) mov sarl jl mov mov xchg inc dec insl cmpsb shrb in outsl push subb inc xchg and data16 out rcr fmul ds push jae in pushf insl mov int3 mov movsb movsl push and sarl sub test repnz jne shrb jno ja ret adc inc jge neg (bad) mov ljmp lock sbb or (bad) dec jae lock or icebp push mov into adc push jmp pop sub pop ss push rorl ret inc clc pop (bad) bswap les pop pop les divb cmpsb inc aam jp sub pop xchg imul test inc xorl pusha sbb mov add dec and cld and mov add test mov xchg mov faddl inc test hlt inc mov xchg adc decb adc jne xchg mov das jo rol pusha rolb movsl or cmp and loop dec adc in inc push sbb adc cwtl mov add adc movups fmuls jo push ds adc mov pop and test sbb jae cmp fild mov test xor imul and in insl sbb popa cwtl push mov adc gs cmpsb sbb mov and push push cmpsl xor sub mov inc iret adcb adc rorl xchg (bad) movsl fs into push xlat fisubl aas cmpsl sbb push adcb jae imul gs push test shll ds bound dec je pop inc hlt sbb inc pop ds inc cmpsl sub insb in dec fwait ret jae (bad) sbb dec pop enter pop inc pop cmp mov jno inc adc ss xchg push and cs sbb jo popa pop cmp dec push sub jb mov and cmpl jmp out push dec lret pusha push insb enter jge sbb or in ja int3 out push pop lcall xor (bad) lock pop mov shll pop or xor test bound dec mov sti xchg sbb es roll pusha daa mov in mov jle movsb insl sub push outsl jo jo jns and cwtl cltd cmp cwtl mov lea dec lods jecxz (bad) mov mov dec push mov and mov movsb and sub inc (bad) fiaddl push or mov sub imul push sub sub inc push stos add jae aad jp and push mov pop cs imul stos or das lock lea lahf adc xor push pop xor mov pop fsubl mov jb lds or es dec inc and popa or enter dec sub or mov and fadds dec xor fstl cs dec lock fldl or int3 or dec cli fs inc sbb aaa mov insl rolb bnd je inc fiaddl enter pop cmp inc js mov int3 test inc pop rolb cmp or xchg xor and pop bnd adc cmp daa and push jns and fdivrs stos adc or xchg loopne dec xor mov push jo clc cmp cs clc jo,pt out push jbe addl incl fnstcw xchg mov and adc inc in into movl frstor (bad) test inc push dec adc fnsave aaa cmpb daa rclb xor insb push daa insb orb daa cmp jb into nop into aam ja adc daa mov add inc push mov std pushl daa lcall jns in leave stos and push cwtl outsl inc push xor jg xor add les mov dec insb bound ret test arpl push jns xorl sub bound add loopne stc or nop or or cmp adc fistpl (bad) jne,pt outsb xor xor popf push jb pop adc mov inc leave adc xchg jb push push fisttpl or adcb adc jae adc test mov jae aad nop pop sbb (bad) rclb push sbb rorl jecxz add cs scas pop and and xchg inc nop and mov stos in sub sub or fs sub imul add inc dec dec mov into movsl movsl add inc std add or rolb lods and xchg cmc push ficompl in dec call in not (bad) jnp addr16 add cmp jae dec enter pop faddp in faddl lcall hlt andb mov mov mov aaa popf mov daa loopne dec push jle dec dec rorb pop pop sub mov mov xor push inc inc or out xchg cwtl rolb mov push les cmc enter cmp jle or or push in inc aas or xor inc or insl int nop loope pop xor and or and add jae jge xor aaa outsb (bad) out add push push outsb xor mov jae add sbb gs sbb inc push xchg mov pop xor add push ja enter lods loop push inc or or fwait mov wrmsr push mov pop movsl mov pusha and or cmp xchg or jmp sub dec mov jle or sti and jle mov or bound or shlb rorb sti mov xchg outsl push movsb mov xchg loop or mov mov cmp pop clc ss adc pop pop mov pop pop enter or popa fisttpll inc or add jo aam je xorl test or mov pop xor cmpb sbb data16 in or orl cld jmp int add dec inc or jle mov pop arpl or mov ss dec lret inc or xlat (bad) push shr test jo sbb addr16 pop call push or jmp pop imul adc mov sbb cmpb xchg dec dec inc jo cmp lret sbb je movsl cmp (bad) cmp pop push stos lock into xlat (bad) xchg out popf insb push adc lock (bad) aaa sbbb stos or sti cwtl popa adc stos dec in mov adc in mov das clc adc cmp int3 inc rorb add out shrb stos xor sbb unpcklps or add add mov (bad) jne and dec cld sbb sub (bad) lock jo xchg sbb jbe rcl xor das or mov xlat add movsb push add xchg xchg cmpl into daa mov les mov pop ret aam in sub rcll cli fcmovbe push push out fs inc hlt shrl sub xchg iret inc add mov jb adc push je lret loop mov cmp test jb pop adc nop cmp jecxz mov aas inc mov test xchg adc scas shr cmp xchg lret (bad) sbbb notl push jp and lods fucomip cltd neg mov nop xor les xor push test add pop mov and cmpb add jle mov movb (bad) mov je and mov lea lea (bad) repz pop fisubl jne movsb push iret or jp fwait inc dec in and hlt mov lock add jnp pop (bad) jb xor rorl inc sbb stc scas lods (bad) repz test dec arpl xor inc xchg hlt in enter data16 test js in jns push push xchg sub inc xchg js jmp das add sbb imul in out popa mov fistpll add iret inc (bad) xor sbb jecxz fiadd dec jne shlb inc push mov jmp sbb pop mov cmp daa lahf shrb push in pop out cwtl inc add ffree jnp jl sbb fdivrs add ja insb add jns sub inc cli inc nop xchg pop jns xchg inc pop add add xor (bad) mov add add add mov (bad) hlt pop cli mov push add adc je xor xchg jbe pop sub sbb push xor mov sub icebp push lock jno,pt out or sub sti aam xlat fs std gs pop pop mov or jp sub test inc push push add or mov push jge adc mov pop call mov dec and jae mov adc add adc sub mov push xchg lret movsl pop push add pop sbb int3 adc mov orb adc add sub jne movb bound daa es pop lock mov adc inc nop mov pop (bad) jne jecxz shrl mov mov loope xor push xorl push add cmc negl inc and (bad) leave rclb cmpb repz mov aam jg gs clc sub add jb clc and add and daa (bad) fadds cltd cmp or (bad) xor xchg sbb or jne mov cmp test inc push loop jno pop or into loope and fistp push dec loop movl and test or stos testb std mov sub and dec fidivrl adc insl inc adc mov jae aad shrl insb cltd cmp popa jmp cmp mov rcll push jo pop xor adc (bad) xchg das sub hlt enter xchg subl adc pop fisub scas mov push mov and or dec push insb lods jb stos add and sub xor outsl pop movsb sarb sub pop je stos mov (bad) adc leave or sub dec pop mov sub mov pop lods mov jnp js dec lea insb nop pop jle sub cmp imul test (bad) and sbb jmp mov dec (bad) test (bad) cmp sub and faddp movsl xchg xchg cli add xor jge mov adc mov lcall (bad) inc pop sub cmpsl (bad) push push mov pop in (bad) jge xchg stos shrl inc nop sub dec aam fistpl cmp je ljmp sub ljmp mov fnclex sbb pop in xchg inc dec inc outsb inc outsl push pop jp sahf in sbb lahf clc lds in xchg jp fmulp imul xor mov jecxz insl pop dec fistl je push pop sbb adc roll call pop imul decl ficom aam lock adc xchg ss pop push inc dec aaa nop ja mov (bad) and in ret or (bad) jb jns jbe cmp cmp ds and jb jb and and jb jb es sub jb jb sub sub jb jb cs adc jb jb adc adc jb jb push pop sbb jb jb sbb sbb jb jb push pop add jb jb add add jae jb push pop or subl xor insb jg sahf out decb dec and out sahf out adc or iret sarl and sub lock repz or add jns cmpsl stc clc jle lock sahf out loopne fdivs shrb jns out mov out sahf out mov out sahf nop push jns out js jo push inc pusha cmp sahf out sahf push sub inc sbb out cmp xor sub sahf out and mov sahf out sahf lock or add repz clc jge lock repz xchg mov dec mov das pop sbb je and pop jg (bad) dec pop xchg jne xchg es sbb mov jno sub xor mov orb test movl daa push es push cmp mov pop jle test xchg push fwait movb imul pop xchg cmp inc das cmp sbb mov add mov mov cmp and and or loop push (bad) cmp pop push sarb xchg xor pop push fs fwait cltd out pop je jbe cmp mov inc cmpsb insb aaa es enter cmp adcb mov jb pop sbb mov mov mov ret and pop je pusha sbb mov addr16 enter sahf jle shlb repz add cmp sbb inc les test (bad) enter dec inc push dec scas dec xchg add test mov je xchg mov pop xor mov mov ja mov add aam enter fadd rorb (bad) jbe (bad) pusha xchg test scas pop mov cmp xchg inc test add cmp jns (bad) mov and or mov mov push adc inc push cmpsl or popa je aas test scas xor jb out add imul mov adc xchg stos dec mov imul xlat roll int mov adc sub fmull loopne imul push sbb fsubrl push cmp js ret dec inc inc (bad) fcompl xchg jo,pt lahf out dec pusha mov push adc push shlb dec lods cmp cmp pushf push push mov sub jmp icebp and and xor xor push dec mulb dec imul add rorl movb add arpl mov push push or adc outsl pop mov aas bound pop es aam negl push jb popa or mov bound shrb mov scas gs mov pop addr16 jb divl mov mov arpl mov daa push jg out (bad) jge je outsb insb das je call sbb and outsb cmp daa mov (bad) pop je jo jb arpl testl out lods loope das add or xor cmp push adc sbb and xlat and lock outsb xor mov jne cmp not push add inc push lahf movsb lods movsb pop pop jns mov cs xchg pop das or int3 je movsb cmpl ret aam and and inc add pop std orl dec mov add xchg dec mov js or js push or cmpl mov push inc xchg pusha push insb push ret mov into mov mov mov sub fsubr push jne scas add or dec movsb sbb out icebp sub andnps roll pop push mov xchg nop das adc adc aas nop xchg xor push pop xchg stc add test cmpb dec sbb mov fcmovbe pop mov sub adc mov inc push aaa and fcoms data16 in imul lods cltd adc mov jecxz enter dec and cmp mov add adc lods aam (bad) mov sbb or jmp sbb inc mov and mov es sahf mov push xchg lret pop xor mov push test add sbb push add rolb sbb push rol scas adc pop dec adc sbb add or pop push insb or push mov inc out add (bad) xor roll add jg pop or or or or or or iret repz adc adc repz repz pop sbb sbb aas iret sbb and and fmuls jns cmpsl push (bad) mov sarl cmc push mov sub cmp repz pop insb jge repz repz mov shl cmp jnp hlt add cmp cmp repz push repz mov popa pop or jg fwait in lret and or movsb jb or pop push adc adc dec sub xchg lret or or jb in push or mov sub adc lret dec adc jb in cmp adc inc push inc pop xchg push cs and sbb xchg lret sbb xchg push jmp ja push popa cmpsl push jns imul sub and sub sbb and push add sub es insl sbb les rcll xchg inc add sub fdivl fsubs adc add std push lea bound add pop mov (bad) fiadd test and cmovl add push adc movsb int3 in fsubrs add pop testb mov shl jge jmp inc int3 mov push ja pop iret sbbb mov movsb cmp fdivrs cmpsl lock dec push sub dec int3 sub rcrb jno call mov push js out out jnp adc adc dec mov pop sahf inc and xchg in adc jge and fistpll sbb or cmpsb cmp pop fdivs repnz jno or rolb add push daa push hlt xchg add push dec popa xor lock cmpxchg mov js addr16 sub mov push je add xchg or popa jns test cmp sbb xor add adc fdivs nop mov mov push push jl mov xor sbb jo push clc mov push cmp daa push test fdivrs jg fnstenv test push sub push stos adc jg lret add inc xlat inc test jae cmc imul aad jg leave clc movb adc notb mov mov inc sarl call insb push test flds call rorl fadds push pop pop sub xor xor jno xor push sti mov jo xchg pop clts push stc nop scas pop sbb mov xor daa inc sbb adc in mov and jb add mov adc xchg adc and pop lea adc adc sub dec adc sbb mov push (bad) or gs add inc add sub sbb xor sub nop stos in mov sbb cwtl nop or jp sub ret ret jb fs iret sbb mov movsb dec jmp mov repnz push outsb loopne xor adc and and test and (bad) leave push jo mov mov leave add and outsl or pop xor sub test sub mov inc test js sbb das dec gs jbe orb xor inc push jbe dec fwait cs rcr xchg movsb (bad) mov dec or dec pop insb or jp adcl push dec lods pop add lods inc lods (bad) fnstcw mov scas pop push sarb or pop mov jp add std or fsubrl adc add xchg cmp fild pop imul daa movsb mov pop push fimul pushf adc imul and jbe lea lods add popf pop sub adc xchg pop fcompl and mov loopne pusha insb sahf test outsb or pop sarb js call dec pop or les fcompl push xor mov pop cmpsl pop cmp (bad) adc (bad) mov subl or cmp push fs ds push outsb dec cmp add jns out push push adc push js adc inc in dec fistpl push adc ss fiadd shrb cmp jnp mov pop call pop fist sahf ss cmp lahf or aaa fildl cmp pop and dec or fdiv adc or xchg mov mov mov sti mov dec push lods push shlb lahf out orb out inc mov or jbe xor push pop sub bound dec add and nop push shr sbbb jae inc pop jnp or imul test or adc ss fstps jne push ja mov sahf imul jl cmp xor scas js scas add adc and cmpsb xchg idivb pop cmpb in inc je jmp pop push xchg (bad) scas push mov mov ss push add mov mov decl sub add sldt fisubrl jl push test imul mov adc push pop sub xor (bad) mov jg mov inc add or jmp sbb movl mov mov dec lea xor jl pop jbe into push popa (bad) or pop scas aaa sub dec add jbe dec nop nop or adc and test bound mov pop femms out adc pushf jae dec arpl ljmp leave repz jp adc push aam and dec sbb jbe inc (bad) sub xchg adc adc out adc je and xor add xchg or test sbb dec scas sbb jmp adc inc add and imul test pusha cs test mov inc pop dec insl gs lcall jl pop sub outsl and cld popa cmp add or dec cmp jno int3 xchg jmp mov or pop inc or ficomp (bad) dec ljmp or js outsb addr16 dec and in pop and and add sub test adc inc dec rorl pop push push push gs nop pop jo sub lea movsb sub push push cmp push in mov inc dec out sub xor addb cmp pop imul cs aas or dec mov pop mov xchg jle push dec aaa test pop sti xor cwtl movsb push lret cmp cvtpi2ps test mov lcall test pop adc or mov inc loopne cmpsl ds and xchg call push call xor scas add jle pop dec xchg into jne inc fwait mov inc push test movsl das or adc inc inc pop add test cmp or inc rol dec pop nop shrb lods fiadd push adc ja lahf mov pushf js xchg sub mov push inc push cld out cltd lock lahf cmp rolb addr16 pop push jl jnp sub inc push sbb push cmp push js push mov lods out cmp mov pop or dec sub ficomp lods pop insb push xchg or nop insb mov push xor add or (bad) jmp adc xor orb addr16 loopne or sbb push add cmp add or dec insl js push xchg stos sbb jmp (bad) outsl pop sub mov scas fcompl scas in push push adc push and cmp push sbb pusha push out push or push inc or and adc mov pushl mov std push (bad) push pop incb xor pop roll pop icebp sahf xchg loop inc pop pop sbb jbe aam add data16 out popa cltd sub adc dec push xor jb jmp bound shlb subl mov test adc push jbe rorb mov ja (bad) sub cmp insb sub (bad) shrb jae jne test pop sbb add sub test pop aam and xor inc pop and xchg adcl mov and sbb mov in mov aad stos and leave push daa sub xchg pop sub or enter nop add inc xchg subl xor movq rclb into insb cltd inc or ja cmp arpl out sub push inc adc test push add cmp push enter mov mov push roll test xlat or cmovo pop js xchg decl adc push inc mov (bad) es cmp mov movsb (bad) mov lahf rcrb adc loope mov and (bad) popl sub lds inc icebp nop or mov mov pop add dec movsb sbb mov adc in aaa pop and js jne push and lods lock adc push inc (bad) mov mov or iret loope inc push sbb aad adc xchg or adc add ljmp dec or dec popa aad popf pop stc jns xor (bad) add adc insl pop jne adc mov xchg sbb mov sbb (bad) add sbb pop or fs enter and xchg or and inc movsb pusha mov orl sub cmpsb xchg stos in sub sub cmpsb xchg mov das add xor test xor jg fcmovb or mov outsl hlt ss mov movsb pop add jae adc lret add push insb add mov or push scas je fistl jl popa stos add and sub in or xchg movups or adc dec scas xchg adc push adc adcb std aad add push sbb push inc leave push xor and mov and add adc add add cs nop fwait sub cs add push inc cmpsb xchg xor xor sarb nop sub out cmpl lock ljmp movb add adc loope mulb push jo adc adc xchg and pop adc arpl cmpsl jno imul or test int3 add add pop ja lret or nop (bad) and add cmp push or hlt inc sbb dec pusha mov push pop clc and dec (bad) dec dec (bad) dec loopne inc adc cmp cmp push addr16 push sahf aas add in push add mov adc outsl sub ds adc rolb cmp rorb mov or imul scas lods or push push inc add add mov stos and adc cmp adc cld aaa adc mov inc in add and cmp cmp (bad) imul cli adc adc xchg adc xor or pushf (bad) jmp into outsb bound movsb or pop cmp cmp inc sahf sbb xchg (bad) fnstenv push test sbb sbb or add inc cs sti push adc push int3 lea pusha xor or xchg push int and pop inc inc add or and adc sub sub and es sub push xor and push or sub jo pop lds call nop mov xchg and or rorb xorb mov mov enter cwtl int pusha pushf inc in nop inc fildl add add dec adc push xchg xor pop (bad) lahf pop xor ret lret push mov xor enter inc imul test cld movl dec (bad) out sbb pop mov test push mov xchg xor pop fisttpll and cwtl pop lahf adc in popf insl andl ss mov in adc inc rorb sbb movl out test or push mov mov addb and rcll jnp xor sub inc test test test mov mov je sub or sub pusha pusha fnstenv push cmp fisttpll inc inc jmp sbb imul inc fistl adc xor fcomps xor xchg ret and xchg inc pop (bad) fistp out out test push push push fcmovnbe in push (bad) shll sub loope mov jmp or aam incl push repz pushf aam mov outsl cmp cmp loope das add push movsb movsb add pushf sub mov lods mov popf pusha mov cmp (bad) mov sub dec xchg aam dec mov jo clc inc sbb add in cmp inc add mov fild dec jecxz (bad) je imulb cmp jmp mov add or push mov cs ljmp into ds aas das mov test mov lods and pop sub rcrb push lea lea pop add mov clc dec push jmp adcb sub sub ret push nop xchg sbb inc je cs add push lea jo cmpb mov mov and (bad) dec add enter cli gs add cmp cwtl cld cld mov mov mov pop sub jno dec movl lea mov add add xor add pop daa sbb (bad) stos aam sbb rorb mov inc jbe leave je adc add add xchg jo jb xchg sbb popf and (bad) in pusha or add mov sbb xchg daa icebp jecxz add and test test add dec push sbb jo adc iret cmp jne pcmpeqb jno inc push cmp or jne or add and test and rclb rol ror push inc outsl (bad) xor cmp test jecxz rcrb and inc enter mov xor lods ja or addb pop pop shlb sub xchg add rcll fdivrs pushf outsl mov js inc add es inc daa insb adc sub clc sub scas dec (bad) outsb pop fsubrl stos adc movsb (bad) mov mov or movb pop pop pop and nop addl shlb mov fsubrs out inc and xchg dec sub jo xlat shrl adc (bad) cmpsl sbb xchg lods in push sbb cmp mov adc and in xor or xor xor mov mov mov sub jno mov fdivs enter pop inc js addl jmp dec cwtl add enter in nop inc dec loopne add or sbb or dec push and cmp enter xchg cmpsl je mov cmp inc push cmp lds rclb testb js pop and add mov xor pop pop scas jo add jo mov add and sbb sub jae mov in inc mov aas dec lods cmp mov sub dec mov out lret loopne add adc mov movl xchg xor sbb subl nop ret add fnstenv mov dec jnp add inc mov mov adcb inc les cmp fldenv mul push lock data16 adc cmpsl xchg sbb (bad) push inc and jl cmp push movb call outsb inc xchg sub push movsb mov jne add mov je xor fisttpl fldpi xchg xor (bad) notb push dec sbbl outsl add es add lods mov adcl xchg push popa je stc or fmull dec (bad) loopne loop insl cmpsb pop dec pop fsubl testl cmpsl lods sbb xchg jecxz ja testb and xchg ljmp dec stos xor lods shrb rclb inc dec jbe add pop fsubrl rcr fistl rolb push and mov stos or inc xor stos push adc jo mov pop fmull fbstp dec cmpsb add cmp rolb fcoml testl jnp outsl add or or (bad) cmp pop mov adc jb enter movsb aam test hlt push jo push dec add inc cmp (bad) movl loopne jbe add orl loope loope popf push push sbb mov mov adc adc push pop mov in push pop jo inc lods lea add or mov or mov adc sub dec add aas dec sbbl inc out add cmove aas push inc adc cltd pop or push data16 and sub divl cmp pop movb jns jp ljmp xor jnp cmc jecxz mov es movsl inc inc dec lahf mov and pop or xchg push adc adc jmp ss push mov mov mov push pop jnp sbb dec scas dec pusha add jl push ret cmpl loopne dec cmp ret push adc cmp mov xchg std fcmovnbe into and orl fbld (bad) push inc push test add xchg ret divl gs or jns jne pop or pop outsl mov mov pop sahf andl je inc adc xchg (bad) (bad) mov mov sub jle and mov outsl push mov inc pop jecxz arpl adc mov mov scas inc hlt xor sub je sub inc add jnp add push insb (bad) test and dec sbb mov or les or cmpsl mov sbb call fs pop sub (bad) push roll pop and daa mov push mov test cmp or je hlt push repnz out jecxz cmp mov dec je add and xchg scas lock pop mov dec push mov jl test ret lods sub add imul (bad) mov sub notl adc add fldl mov test mov mov fisubrl pop push call cli ss data16 pop push and push imul mov xchg push in shrl mov cmp push (bad) imul mov cmp je or push popf or jnp pop sub shll stos push lret add cmp inc sbb loope dec inc xchg imul dec out or hlt or bound dec jmp add mov loope cmp or pop xchg mov xor cltd or xlat dec jb cmp cmp mov and jns mov or cmp add mov fwait push xorb ret jmp xor push mov jne ds shlb std or lds rolb gs ja push gs and rolb and inc push cli or ret inc push cs mov aad dec jg mov add dec pusha add push jb outsb add pop add jge pop push ret inc push jge addl outsb inc xor sub pop pop cwtl enter mov jne cmpsb jle in push cwtl adc or or js dec fwait cld adc (bad) mov (bad) dec push and mov cwtl clc add and jnp loopne call je ds popf ja dec data16 xchg push xor xor (bad) popw mov enter xchg and xchg lock aaa dec inc mov test mov pop cmp or pop test or jne int3 (bad) rolb pop mov out sbb mov mov repnz jmp sbb sub fildl popa add and adc shl flds adc pop hlt or xor sbb sbb xchg sbb jmp in in pop leave cmp in or bound jo mov sbb or pop out test sar sub and adc xor sub and inc or mov xlat in outsb dec push jae and push ret cmp shll mov (bad) mov mov inc xor (bad) sub cmp adc mov pushf push lcall fs mov dec sub insb lods sbb ret xor xchg sub add inc outsb divl xor xchg xchg lret mov and cs adc push mov push mov xor dec (bad) xchg cs mov js jo lods fcomps adcl sbb outsl sbb push jnp movsb mov push add test mov dec pop mov add adc lock mov in sbb faddl jns jmp das push imul or loopne mov push mov lods das push roll scas xor jg jge sbb je sbb push jbe sbb gs push fdivr push cmp rol pop dec ss enter jmp shr pop lods dec clts sub mov das (bad) adc orl push adcl js cmp or add int3 fs clc out inc imul pop adc movb out insb add add inc popf adc dec xchg xchg lar pop cmp daa aaa jne cmp fldt cli mov mov jns push mov mov pop pop mov imul or aaa test lock pop mov mov sbb out and decl in in add or inc sbb cmp push shlb jg aad pop add xor pop mov xor cmp hlt pop adc cmpl jbe push jg jge and sub xlat outsb js mov sub jle add mov or imul xchg cld push fldl2t (bad) (bad) cmp push sub insl lcall add imul dec inc aaa fsubp (bad) movsl push andl pop test xor les in test mov jp mov (bad) cmpsl jno adc mov inc or push pushf inc xor push dec lcall lock and movl mov bound push push push or seta adc sub iret sbb outsb call lods mov je clc (bad) popf inc adc xor rclb xchg outsl mov ret xor in and hlt and jno sub push jo test out mov fs cmp fs xchg cmpsl or ret (bad) leave sub jle sub dec push pop mov out mov popa jge orb add push jne push js dec jno sub sarb or sub add call sub jne pusha rclb add vcvttps2dq sahf add sbb iret xchg mov or adc sub call xor pop mov jnp enter xchg clc and daa or (bad) (bad) jo push push sbb nop imul sub sub daa cs loope xchg mov popa inc jmp push adc les movsl les decb adc lahf inc imul mov popa data16 rolb sahf insl cmp test push pushf push movb jno test mov push inc sub jne lret cmp mov (bad) fwait cmp adc cmp test mov pop push jmp je mov cs jge inc adc mov cmp dec push insl ret inc movsl xchg (bad) xchg cli imul cmpl shrb sub test lods loopne mov loop fldl push cltd and adc mov scas push add pop mov lock ret mov xchg pop enter orl mov outsl cmpsl es (bad) int hlt mov lahf jne xchg or dec ss cmp ja push add in cmc dec cld or loop int setne xchg add inc loope lahf movsl leave cmp testl sub or inc sub jl dec addl mov sub dec inc popf mulb ret test icebp insb jge shll sbb push lea cmp popf jbe lds adc ret in mov xchg mov ret or pop mov mov lea sub repnz inc cmpsb mov push pop shrb test call iret add and adc stos mov and fdivrs dec fidivrl push push push sub lret (bad) mov sub in gs lods add adc or movsb dec fmuls (bad) or test dec sbb pop add jle adc pushf push sbb ljmp xchg inc sbb add push push sbb movsl pop push lock out mov xchg shlb mov add cmp call add jecxz aad dec add ss sub adcl adc add int js je pusha pop sub cmpl cwtl int3 je gs and sbb pop push add push pusha movsl push jae xchg adc icebp loop push (bad) fldl aam adcb clc xor ret mov xchg bound daa xchg add or cmpsl js gs adc cmpsl ret cmp inc js les push test xor in sbb sti and ret xor sbb add jle lods push xlat (bad) and pop mov push js nop mov dec mov andl sub pop push cwtl xchg lret add in cmp jo arpl push add cmpsl int3 dec int3 cmp scas scas enter cmp jbe inc scas xor fdivrp push movsl fcoml out mov fmull sub push xor lock ljmp push gs sub sub dec mov or lods aaa cmpsl sbb xor int addr16 xor dec lods clc orl pop (bad) loopne adc xor push lock mov stos repz xor enter and inc pop cmp movsb scas insb pusha mov pop xor gs inc add orb or sarl adc sbb arpl jmp mov adcl jg test inc jne movb pop push mov cmpsb shll rorb adc mov and (bad) je,pt int push inc push pop insb adc inc outsb inc jge inc pusha push pop jg test push push call or jmp lea in fidivl pop fwait pop pop jmp je dec fs push das jne add stc xor dec loope sbb stos aad or mov push cmp lcall inc cmp (bad) mov xchg push or xor test inc or pop xorb scas outsl test jns orl mov das inc dec bound or jle jg je int3 sti (bad) dec mov ret add (bad) add test and xor cmp scas cmpsb (bad) (bad) inc push and lock hlt loop adc (bad) mov lds fisttpll (bad) cmp fidivrl jecxz push push xchg ret (bad) adc push push jge sbb mov inc mov gs mov mov jg aam popl jmp mov addl push cld pop iret inc push push push dec dec xlat jae xor pop dec mov inc and or mov pop inc mov outsl popa movb add mov jne pop sbb jo test sti xor lret mov mov and movsb out sub mov push idiv and or (bad) (bad) std mov sarl int3 mov or sbb pop jmp jnp xchg repnz xor or out je push stos imul aad ja push ss push clc and mov add test out add xlat dec jg push pop in pop (bad) mov inc adc scas lret or cltd or ss (bad) jmp adc ret test xchg or fild test add cmp mov mov adc movsl cmp cwtl stos divl wbinvd sbb pop mov adc mov inc stos (bad) mov inc or or lret test jo arpl sbb mov addr16 add xor pop orl ret pop loope adc mov mov dec add lds cmc inc dec dec (bad) xor incl or dec adc ret xchg (bad) movsb jno enter (bad) lea outsl mov add jg and inc adc inc jns hlt js hlt xor add les mov xor int cmp faddl xlat cwtl nop cli fdivrs sub and cmp imul push sub xchg lods gs fldl inc or push dec jne scas les cwtl fstpl push and mov cmp sub aas and cmp insl test dec pushf in daa nop repnz movsl push fsts pop xor jns dec dec inc fnstsw add add inc (bad) jb add xchg pop add test in xor fs jp or mov lock or sub xchg pop ret xor xchg jmp fldl rcrb rorb fdivl push add fs cmp movl xchg into xchg sub lods outsb inc xchg shr pop lds out inc jno xchg mov jmp push orl jmp or xor add (bad) (bad) push enter cmpsb sbbb out inc inc push inc sbb jns sbb xchg xlat arpl test mov loope cmp mov add and les adc les shr pop faddl sub sbb mov xor sub loopne loop add fs inc cmp insl cmp xlat hlt mov sub paddd mov push dec dec adc imul test or xor or mov cmovbe daa or add and or jge cwtl cmp scas pop les add dec sar cmp jge mov add adc jp (bad) fwait adc fmull (bad) fnstenv nop js (bad) sub shl xor cmp pop rcrl push or pcmpeqw push ret inc loope jb or push les sbb (bad) mov add lods repz inc faddl decl cmp mov cmp cmpsb and push xchg push cs jmp sbb fstps fldt cs sti push dec popa pusha sub or imul scas lret iret loopne popa inc movsb pop bound xchg cmp xor push insl jle sahf xchg out mov pusha stos sub inc sub jns fmuls (bad) stc jmp outsl dec and mov and pop push lahf xorl pop dec cmpsb lahf push jge les sbb add add hlt mov je (bad) mov jecxz ja lock push jle adc mov xchg inc ret iret dec or clc xor and stc adc fmuls (bad) sub daa or mov test les cmpl xchg or nop cwtl or cwtl xor sbb lock inc pushf mov inc (bad) pop jno ret in xor pop and ds inc decl add movsl cs or xchg mov pusha das push xor push enter or cmp mov sbb aaa pop and sub sub cmp cmp fmuls add lea xchg loop aas mov aad daa iret stc adc xchg or loopne and push and addr16 loopne add mov dec punpckhbw jl dec mov lods sar dec data16 daa fsub jg add (bad) sar loopne xchg adc jns ja jle popl cltd cmp out push pop gs sahf out sahf jne sbb add jns add movsb cs aaa fs (bad) in adc inc push pop xchg mov and les push sub inc daa das mov sub push push imul adc fldt inc add cmp inc inc or int3 adc or mov push insb add sub mov decb adc pop and and movsb xchg or push sbb je xor les mov aam addr16 loopne or sub or adc mov aaa icebp add xor pushf add fcmovnb xchg mov cmp sub add xchg mov loop xlat adc shrl xchg cmpsl ret xchg je stos lock les rclb push jns scas cmp les jecxz lock jl outsb xchg add add (bad) mov cmp inc dec or push dec (bad) or pop adc push clc add movb pop inc hlt xchg pop mov push sub inc dec cmp arpl aaa test data16 sub aaa aas sbb adc adc push mov or arpl jne or dec inc in and jle dec mov mov inc lock pop fs mov mov mov or mov xchg (bad) sub or clc or call or mov pushl dec inc sub sub and sub push pop sbb cmp test xor and dec dec xor (bad) ja sub ret movb mov sbb add in adc notl sbb xcrypt-ctr cmpsl sbb mov add enter (bad) es adc inc or je pop nop test push repnz mov arpl cs adc das sarl mov push mov mov sub sub leave or repz (bad) stc inc les test dec xor dec jne jo inc call mov xchg pop xor xchg das or adc mov or adc ret jmp pop push pop je sbb push aaa pop outsb pop add imul and pusha ljmp cmpsb cmp and push out shrl movsb outsl jge cmp rorb outsl adc loopne vmwrite test xor sbb and add or dec push push xor jecxz pop fwait rcrb repz hlt xchg mov xchg inc add rcr jp lock fisub ficom add repz or mov es and sbb jb in push or xchg pop subl xchg and jb mov push out test add mov xor mov push pop push dec dec dec inc dec push add cmpb xor int3 jg lods insl mov add xor aaa aaa (bad) jmp dec mov push add inc push (bad) test mov mov adc and pop lret push out sub xor adc pop mov cmp jne sub push addr16 ss mov insl imul jmp lcall dec leave rcll mov fnstsw lea mov pop add ret dec pop inc icebp lahf lock mov inc les sbb ljmp cmp aam xor or (bad) push sbb (bad) leave clc mov (bad) xchg mov lock adc cs clc jnp ljmp cmp pop jbe shll (bad) xor cmc or inc pop or (bad) pop dec adc pop mov icebp shlb out and or enter jb fbld daa rolb (bad) sbb jne js dec mov or clc test adc fcoml movsb cmp int cmp pop or out and subl jae sahf inc pop pop loopne or sbb adc aaa cmp dec or mov sub aaa add xorl pop add ret sbb aaa add inc negb lar xor cs ja jbe sarb adc (bad) clts popa repz pop add add sub insb ss jb outsb adc call mov (bad) cmpsb push or inc lds fisub and cmp inc push enter es adc jp push push cmp dec sti push mov push jo fstpt xchg lock shll neg cmp pop and rorl and inc incl inc fdivrs inc push adc inc ret jb inc cmp call jl add cmp orb outsl cmp cmp test es bswap jo pushf ds fstps cwtl inc mov pushf in or jns xor sbb nop xchg sbb sbb inc push xor adc ja (bad) js xchg fiadd enter stos xchg fs inc mov and add cmp cmp dec mov enter in cmp fsubr pop sub push xor pop lock mov push sbb sbb xchg xchg xchg lock adc push xor (bad) ss lret test push pop add push inc outsl rcrb fist in cs push sbb nop movl pusha push jno adc mov mov or dec mov int3 sub sbb mov mov inc lock fcoml push pop leave mov inc insb and addl ret add push insl bound xchg and adc sbb or imul or jne sbb insl popa in cmp mov ja adc cwtl xor addb pop jbe add adc or stc sbb in push fs push dec or and xchg out (bad) pusha sbb ja mov push xor inc push ss and mov repz inc and add inc mov or outsb and pop or mov pop xchg sub add into fwait cmp or divl movsl add sbb mov cmpl pop inc sbb or and jge adc dec movl xor call loopne adc and inc sbb push stc inc or push or lea cmpsb fnstcw mov adc adc dec decl or pop hlt loopne jbe and cld push lea subl dec push insb or test lret add aas lods sbb sub dec pop pop push push xchg (bad) testl pop push add add inc mov fmull add add jno stos or pop add and inc adc and jnp andps lds movb push scas add or pop popf adc pop xchg push adcb loopne push repz adc jp clc cmp rdmsr rcll dec (bad) loop insl inc lret lea sbb and cmpsl dec dec dec mov das or inc pop arpl mov or sub push pop adc add ret and and mov mov leave scas roll and iret out sbb pop notl xchg pusha stos neg pop (bad) (bad) mov push cmp mov js gs jne enter add fndisi(8087 xor xor outsb sbb paddusb lds lods add nop xchg adc mov or sub bound inc adc cmc cwtl or or push test add js sbb fadds addr16 or inc in ret add push or or and push in mov (bad) fist push rolb mov lods lods scas out and and imul dec and push pusha adc addr16 and push push add or add lret pop xchg mov (bad) lds or sub dec movsb movhps loopne xchg loope les sbb out jbe clc and add mov xor mov adc jns pop bound pop add cmpb lret movb mov pop inc inc mov or inc (bad) jbe divps fist mov add push add ljmp sbb add add add or ds mov mov mov mov xchg mov mov mov mov mov push lcall in (bad) jmp ljmp jmp jmp jmp loope jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubl fdivr xlat call call call call call call call dec add jg or dec dec dec (bad) sbb mov jbe sbb push push in or sahf lock pop push mov xchg adc out cmp push push lods in pushf mov push jns (bad) int3 aam push add fdivrl sti cmp push xchg push sub push dec fidivr out pusha ss mov xor ss in jnp les push xorl push sarb push movsb xchg fidivr dec sbb inc fs sub je jge call or call in jns add (bad) loopne pusha data16 data16 mov sahf int3 test mov cs popa outsb bound nop fdivl sbb ds gs test (bad) jb popa shrb leave nop pop fiaddl fwait (bad) aad jecxz or or adc fstpl mov sbb roll and inc sahf dec test pop bnd add dec int3 add inc inc sbb js clc ja mov push add aas incl mov mov pop nop add ret pop and jbe lret or imul push ret or inc je pop dec push movsb add and clc dec js jg jg,pn push xchg push jne pop in jg sub pop jo xor pop and addr16 fs add mov fwait clc sub imul push adc push push or xor or push inc cmp cmovle jno dec jb push dec popa je andl push insl fdivs les adc hlt jg,pn ss sub hlt jo xchg mov (bad) adc outsl stos jbe fldcw jge sbb bound (bad) push in or dec adc adc pushf adc xor rolb (bad) xchg test pop jmp jae in xchg fs or xchg in and or dec jmp es lods push or push loopne jle mov in cmp rorb push imul dec jnp dec nop daa or mov fnsave imul and pop inc jno std sbb fmuls mov outsb mov add xor xor (bad) cli (bad) xorb cmpsb jo adc add xchg mov mov mov ret xor adc and xor add and lldt add push clc inc pop adc adc es push ss jne pop add pop and adc das dec mov xchg add add add cmp push add aaa mov mov lock mov test mov nopl sbb sarb es mov mov mov add push mov sub xor cmp sbb repnz incl in decl ret inc inc inc fild std (bad) mov push ret sbb pusha sbb stc ret mov mov out cmp mov jl scas mov lahf out sahf jo mov clc sbb lahf out xor enter or mov push test dec les push push (bad) mov (bad) int3 in and jbe mov cmp je push and jle push xor mov mov sahf dec pop int3 out lret push jo sbb lret push jnp iret repz les idivb mov test adc push jge repz mov test mov frstor es add movsb stos (bad) xor in jnp jnp data16 ret push push mov loopne (bad) clc rcrb pop ds imul push cwtl or sub add sarb cmp (bad) mov (bad) mov es ds ss shll aad mov inc out fxch into inc push xorl sub push jl fidiv or adc mov loopne or jg pusha pusha push enter mov and xor icebp movl sub aas pushf xor test pop push jo inc dec roll adcb add push repnz in inc idiv repnz adc adc fsubrl push jne mov lahf aas pop xchg mov xchg bound jno xlat clc ss sub jb cmp aaa repnz sbb jmp mov (bad) mov fildl sbb inc in add push inc jmp mov jnp cmp mov add xor lods sub inc mov add and leave xorb (bad) sub jo ret jl adcl aaa popa inc xor pushf and add mov add or or and xor adc push and and jns hlt fiaddl jo mov cld cmpsb push cmp adc jns jnp push mov xchg cltd cmpsb lahf out sahf mov int out cmp loop in inc sbb and xchg push push push add aad mov lods sti xchg jecxz fdivrp push std push mov cs insb mov push jo je js sub add lock inc out push adc or add inc cmp lahf pusha push scas push mulb cmp cmp mov js xchg adcb mulb jo cmpsb paddsw (bad) out add xor das or aad mov and jecxz pop (bad) pushf (bad) outsl dec sub cld mov nop jmp jmp lcall or lock lods dec push push and mov mov sbb aaa adc add int3 add push sbb sti mov stc add inc movl mov pop sahf or icebp hlt sbb inc adc jne or add std mov pop mov aaa mull rcrl fisttpll ds and roll daa int3 cmp icebp pop lock andl xchg sub or dec jmp mov sbb ljmp xchg leave nop cmpsl jb mov addl ja pop xor inc sarb lods sbb fmulp int3 push xchg sbb or push dec dec push pop dec push leave push inc push inc daa push push cs jo daa or xchg or adc popa clts (bad) and mov xchg dec and insl xchg daa dec push jo imul mov mov popa push xchg or ffree add mov stos add inc lods das jo pop repz xchg xor subl jo mov fsubrs and xchg and nop push inc lret andl jg nop imul nop lea mulb adc adc in dec jle addl sub ficom adc xchg push adc out into push mov sub jp (bad) bound je out je mov mov scas dec inc (bad) cs out pop ds cmp xchg inc and or add fimul mov jmp adc test or push inc (bad) mov sub push or test sub (bad) push movsb fsubr or dec and fs lock or mov jne sub cwtl pop ja (bad) xchg jbe adc and or popf add push adcl add sbb and and dec arpl retw sub push or loopne sar dec jne ja mov jmp add sarb cmpsl add and popa pop and mov nop push or pop add lods sbb xor jne cli test mov or adc adc xor rcll sbb and xor and sub sub pop and pop scas pusha inc inc jl cmp sub sub add mov mov loope addb mov fidivrl test add aam mov dec push inc sub out sbb add xor sub dec je ja and cwtl xor push clc (bad) mov in ljmp cwtl adc jmp mov clc inc pop and adc mov xchg mov (bad) adc andl add les or pop mov xchg aas mov add (bad) rcl cmpsb mov lea mov cmp hlt (bad) jmp or push fstl dec imul inc adc or push lret and pop or lods lretw cmp test or xor movsb and cmp inc or movsl jl mov mov push xor sbb pushf xchg and rcll call and iret push sub push inc push push jp xorl sahf lretw sbb cmp in (bad) push daa add jmp in jle jne jae mov inc loopne mov mov shlb cmpsl push sbb leave inc pop adc cwtl fs or aaa sbb push mov mov ficoml push insb insb push into jnp sarb sbb lock sahf inc inc (bad) lds push mov add popa in sub add enter iret imul sbb orb mov or cld insb dec inc add or adc insl and mov aam adc xchg outsl inc add or adc mov and rcrb mul rol (bad) ficom or pop push mov ljmp xchg pop cmpsl aam xchg cmp std inc jecxz xlat fisttpl sbb push test jge mov add push rcr pop lsl add jb mov lcall movb jmp cmp jne cld adcl and adc movsl (bad) ficoml cmpsl jmp ljmp sti mov or adc cmp lcall xchg lahf sub inc add (bad) imull add inc dec mov nop fdivrl cmp inc test push xchg lock add and in sub pop (bad) test popa lea or dec loope les inc sti inc inc jmp sti or fsubrl inc jae shll xor and outsl ret mov scas fprem inc cmp les sarb std cmc es sub add pop das in and mov cmp je mov cmp movsl lds adc in lock loopne in lea (bad) xlat js ret jne jge pop lock or ss adc cmpl push fadds add nop iret xor cmp adc outsl dec scas mov mov dec aaa sub rcll mov pop sti push cmpb xor pop dec jp mulb push cmpsb jno (bad) push cmp xchg pop shll lahf xor sbb inc inc jo mov sub and adcb push imul fmuls dec in mov test sub sbb jno pop rol popa cmp push jno sti popa lock mov sbb mov (bad) mov ja je add es loope push (bad) cmp pop (bad) sti lcall fadds inc push cmp shlb inc inc lods add cmp fcmovnbe add xor jle jo in sbb cmp mov inc or data16 push cmpsb pop lods adc push push inc sbb lock shrb pop inc shlb test cmp in and push ret xchg add jmp or cltd cmp push lret lcallw mov fadds inc cmp jge xchg call xchg sbb cmp leave sub lods mov inc cli jbe adc mov cmp idivl sub cmp lods mov in or (bad) imul test jb inc xor sbb push xchg push xchg imul mov popa aaa adc jo fistpll add cmpb js push adc pop adc dec jne xchg lcall or je out ds jne test or mov (bad) rclb and cli popa adc repz lahf mov clc ret shrb out dec test (bad) dec jge mov push fiaddl sub add or imul lret jo cmpsl sbbl sbb out mov mov lea lea add adc jmp xchg (bad) aas cwtl popf add xor sti cmp je ja mov in out cmp lock mov sub pop jb jae pushf lods or insl mov inc pop js lea shll imul scas lds sbb jo cs adc in sbb mov mov movups inc loopne push or mov push push testb jecxz (bad) push ljmp xchg cmp mov int3 ret inc jmp mov xchg hlt ret loope,pt jmp pop loop movswl in aad mov pushf sub test push (bad) orl push cmp (bad) out pop outsb xor (bad) movsb cltd pop push push (bad) negl pop (bad) ficom pop or inc xchg fdivs mov jmp lods cmp and ret dec cld jbe dec out xor add mov fwait or xlat or pop loopne stos xor xor ret fdivrl das movsl and call push inc ja addl scas jns pop ja or aam adc aaa or inc push ja insb imul out push and sahf mov lea js or stc sbb scas mov mov push sbb (bad) cmp fistpl es (bad) sahf add stc fstpl fwait jmp sub add out and add push movsb jle (bad) ss sub imul mov imul pushf add jmp pop dec adc or cmp in jmp sub mov push adc sub lret jo dec shlb addb lods loopne loopne dec pop push push xor push inc dec rcl out sbb fiaddl inc stos mov movsb ret repz mov push add inc repz aam xor mov lock and jmp (bad) xchg jecxz sbb add xor jo mov dec jo mov pop and inc inc insb popf jne sub mov cmpsb lds pop mov jecxz lret inc test sub xchg loopne and mov es in cltd nop mov add in mov (bad) out mov sbb dec sub add mov add pop jno je popa push dec push sbb add pop and dec push push stc mov aas push adc mov (bad) in add adc rol inc es int3 dec movl push jne mov ret add jne jecxz and (bad) aas push cwtl push mov clc mov (bad) ds adc ret inc incb or mov add xor push fwait inc push cmp nop fbld inc xor adc and cltd xor cwtl xor and xor ret jo sbb ds inc insb cmc sub lret adc sub sub insb (bad) or cli jmp and or loop sub and push ljmp xchg or mov stc (bad) arpl cs push pop outsl je test pop out add jne and leave add mov push or pop leave jmp icebp or or and add out movl pop push movnti or add jne mov sub inc sub lahf pop fs push adc rclb adc adc add jb and dec jmp mov dec cli cmp rcr (bad) push and dec or cmc adc (bad) arpl push mov inc jb sub jge cs imul mov addb dec jne je ret jecxz fwait popl repz dec pop add imul lds imul add negl and mov add es adc enter jmp sahf aam mov ret dec lods sbb push cmp insb clc add nop pop pop add mov xor mov mov push std xchg lea mov (bad) push xor jnp je inc (bad) aad sbb (bad) adcl add insb or add adc xchg push xchg fldl aas jnp push push mov nop das jmp add out sub call insb test mov andl adc add nop lret ja sub rcrb rol stos mov imul xchg pop or or fwait sub mov scas pop loopne out popf dec (bad) enter sub addl lahf pop jge xchg jnp add inc push or and pop lea pop out mov pushf jae or pop adc jge pop lock pop add test test adcb add mov inc mov add or sbb sbb clc or pop (bad) jge mov dec adc cmpsb mull dec push orb push outsb sbb jg pop pop out shlb mov imul and jl and push adc lcall mov cmp adc test add rcll add jmp or dec or or adc cltd cltd (bad) or cmp push pop xchg lret adc pop je sti xchg or or cmp cmp or sbb insl sbb dec or test dec sbb popf mov pop sbb faddl lahf in in push or sbb xchg stc dec jbe sub lret test pop clc add fs push jl lods fisttp ljmp add sti cltd push xor push in dec insl (bad) mov cmpb aad jecxz and ret xor adcl stos ret nop in push push add sub lds in sub sbb cld adc adc push icebp or je push sbb sbb cmp les xor mov add and and jl sbbb outsl push sbb add jecxz cmp mov add mov add pushf inc mov stos cmpsb cmp lock mov pop cwtl and test mov vmaskmovdqu loope dec fldt aas jg (bad) xchg add rclb inc rorb loope adc (bad) xor or and xchg adc sbb xchg jne push sub lds push js add rcll cmp push popa xchg push jno sub xor out mov addr16 or in fimull loope inc mov push dec enter or mov mov daa jae mov outsb push rolb add popa push jmp add dec je sbb (bad) cmpsl std dec les js inc push add pop cmp push lcall push pop add jp jmp rorb or add pop test lods pop aaa loope psubb inc push das les aas sub dec sbb push adc sar cmp cld add adc aam dec int3 movsl push sbb pushf (bad) or push inc insb mov flds adc je push fs imul das add push negl jae je or (bad) xor and arpl mov or dec push pop mov xchg and mov cmp lock mov mov clc movmskps in xchg sbbb mov pushl aam or adc add mov xor mov push xchg cli or and xor sbb fwait lock andl cmc mov push subl push jge ds fldcw pusha push cmp (bad) add inc or (bad) repnz mov sarl out mov dec or pop into pop or inc add int3 ds pop jbe enter lret test dec sbb (bad) in divl xchg cld ss add xchg clc or mov inc das dec dec push (bad) xor sub aaa xlat adc addr16 mov fcoml (bad) into xchg repnz js or in pop or and nop or push pop cmpsl push lret rorb and jae clc cmp jne push pop mov out cmp clc jne sub xchg add loopne and pop inc loop test pop aas cmp nop jno push cmp sbb push fbstp or insb cmpl rcr adc (bad) push je pushf or insl ss dec mov std pop inc outsb adc cmp jne mov pop and pop add inc dec push push dec fist sub (bad) dec loope (bad) push xchg cs or mov mov (bad) insb je or jne (bad) je jb inc jbe jnp jne push shr sub push or outsl xchg sub bound ficompl inc inc mov or add add repnz add mov or cmpb and or push add mov popa mov cmp dec add nop sete sub xor push dec adc push mov dec mov push adc adc test sub jns dec push dec mov dec jo mov out imul push cmp incb or and (bad) xchg jg sbb addb jmp shlb xor push pop push sbb ret insl inc dec das pop dec xor and das les in loop inc loopne mov roll push or inc inc lret fistpl mov dec add push xchg (bad) or xchg push inc test xchg int dec xchg insb in push inc lods imul cwtl mov pop popf mov push and ljmp sbb and in ds test fcoms jmp xor (bad) cld mov in cmp cli clc out fidiv dec and mov push bound sti lds mov inc (bad) cli cmp jo xchg cmpb inc jg pusha push (bad) sti sub sub imul pop or push or add mov sarb test imul or cmpsb imull lcall test add xchg subl pop mov stos cmp jle lods call or add add pushf push adc cli imul push in pop pop ljmp adc and xor cmp push pop sub inc xchg push mov jne shlb add inc pop mov test mov test aam pop mov xchg push in (bad) (bad) mov hlt hlt pop add push mov out add pop iret loopne lret sub hlt je adc xor fiadd jno inc mov or add arpl repnz mov fdivr push add push xchg fsubs add push pop inc dec sub dec and cmp pop ret insb and jne lcall rcll sbb xchg mov imul and sbb dec mov sub imul ret pusha (bad) mov rolb dec cmp mov nop ret mov cmp xor pop ja (bad) test stos je jg push mov and js mov fcoms adcb movsb roll fildl inc xor fisttpll xchg inc pusha jmp sbb test cmp sbb sbb push mov stc sbb sub push mov adc popf out ja mov nop add pop ret rolb in or push xchg add pop rcl adc adc add mov fwait add (bad) jecxz xchg add sbbl pop movsb bound es adc in xchg (bad) rcrb pop jge mov dec sub jle ss movsb adc or inc (bad) lcall inc jg insb testb je dec sahf inc inc mov mov or ja jno add out xchg lock mov ret sub jno inc sub insb jg jo and push or inc xor cli add mov adc xor test sub pop cmp movups in mov pop aaa or icebp adc xchg mov sbb pop aaa cmp je pushf int push les jp mov sbb je mov xor or or pop push add shr inc pop sbb jle imul addl jl ret jo add test mov push mov push add mov imul or adc and mov stos call cmp js inc stc fs mov push dec in lea and and lock les js ret fistpl inc outsb pop je mov movb ja imul mov push add test xor popa popf bound mov and cmpsl sub iret push add push sarb xor aas mov xor rorb cs je mov ss je and or inc loope cmp addr16 mov dec and sbb ja and and jo mov push pop or cs pop pop dec dec jb or shll cmp js enter data16 movaps lock push das nop cmp sbb sahf adc (bad) insl cli cmp inc push xlat sbb jnp rclb pusha push out sbb mov sub incl cmpsb sbb stc insb mov add push pop pushf xor mov in nop xor mov das popa mov aaa out and mov je sti mov xchg stos shll leave je push cld std xor mov push pop bound loop rclb ret pop and and rdtsc loope loop dec jp add insb xor push adc and adc jno cmp dec test push mov pop pop sbb mov cmp cmpsl cltd adc adc dec mov jnp dec mov inc dec xor fidivrl and (bad) fmull xchg dec xor daa jno pop push les xor sbb repnz push dec mov ja mov lods adc nop jle xorl inc (bad) lods dec mov (bad) std add jge push pop aas mov or add cltd and popf adc jmp dec mov push pop ja add outsb xchg or mov add pop inc (bad) sbb adcl inc cmp frstor out push sar add inc or test bound or or dec add pop enter jne test mov (bad) sbb and pop psrld mov xor dec ret or test mov and (bad) xchg lods or xchg cld add push popa inc mov les push mov sbb clc fisubr ja mov xchg fcoml mov xor xchg adc addr16 mov jp add movsb daa mov das stos add add pop roll xor adc dec mov add imul (bad) mov idivb xchg (bad) sub cltd or (bad) lods and pushl dec pushf push js add ret pop push sti loopne jle mov rcrb jne into lods inc cmp pop and iret add sbb stos jne push add repnz sbb mov cmpl jle and lock ret mov ljmp aam ja call sahf lods jne push adc adc adc mov es xchg sbb mov dec sbb xchg push pusha or xlat sub cmpb test (bad) mov shll js decl fwait rcr mov inc or loope sti and mov and adc lea fucomp mov and in adc add mov add mov lea and gs dec sub inc xor sub add and jg mov push insb push mov mov pop and fldcw and xlat shll ss jno xchg xchg xor add add dec enter add add add add or push (bad) into push ss popa int3 rol push mov pop sbb notb mov lods roll push (bad) jne add mov shrb loopne sub mov ds or ficomp lea xchg sbb cltd rol fs adc loopne mov fs jmp xchg mov outsl ret inc push push cwtl add sub or ja jl and push or leave sbb (bad) inc inc adc add xchg dec cs enter dec jp shrb add push inc add nop mov shl loopne jmp sbb sahf inc ret mov and xchg imul mov jns push (bad) xor jne push hlt add loopne (bad) sub cmp push out ss mov push faddl sub mov push (bad) aaa call inc jne idivb push addl add pusha push push cmc fs test ret fildll icebp test or inc es xorb pop mov addl push add nop sbb mov jle jne aaa and xchg jo shlb je push sub jb je sbb sbbb mov ds sahf fs loopne repnz add or push mov inc adc fidiv loope lret mov jb xchg sbb es fiaddl pop inc data16 int3 pusha mov xchg scas sbb (bad) pop cmp sbb or inc or add addr16 push fcoms in jmp push outsb je sub or inc loope xchg adc loope lahf sbb stos adc daa aas fwait js shrb xor push pop mov in hlt out ds push sub stos fistpll insb loopne sti jmp loopne call jno adc pop sub (bad) js cmp cld and dec (bad) in hlt (bad) xor xchg iret jl or mov push push mov movsl inc pop pop js or push push jle push fistp js fmull stos jne,pn pop push imul ja lds es aam mov lret and icebp (bad) jl rolb inc mov addb clc mov popa xor pushf or fs cltd push pop xor clc xor sbb xlat ss (bad) jns imul into insb rcl nop push pop dec pop sbb add arpl rclb mov les les adc pusha jo cmpsl shll lock and pop add pop push xchg inc iret adc dec inc inc out cli push fmuls pop movsb inc or dec add data16 push fadds mov cwtl loope push (bad) jae xor mov cltd addl pop xchg pop xor cltd xor mov fisttpl push outsb loopne (bad) daa lods aas ja out (bad) daa xor or cltd int3 mov xchg sbb push jne mov adc push lcall pop add aas lods mov test add adc or add xchg adc mov (bad) jbe insb xor or adc jb (bad) out jmp sub sub ret in jb or test adc inc mov add adc popl jmp orl mov mov add out mov test jmp sub adc mov push or nop xchg pop rorl outsb cmpsb adc push movsl adc fsubs pop mov inc scas scas push xor das dec mov xchg sahf ljmp xchg push test mov inc jae addr16 jmp fisub pop fimul inc add inc or mov dec inc shrb dec push inc sub dec or jne push sub dec jmp pop out scas add jmp adc mov inc cld (bad) inc adc pushf xchg insl (bad) sbb sub aas jbe sub adc inc aaa xor mov xchg jle pop mov jle add add jb adc mov push xorb and or or es movsb sub jno (bad) xchg or sbb cmp xchg mov stos sub (bad) jne in sub push dec push add jle push or jecxz jmp xchg sub popa les cmp jne add add sub sbb push pusha inc and add pop add div mov js adc and test push pusha mov stos inc loope sbb mov in das adc nop les add cmpsb mulb jge clc jbe sahf or mov (bad) mov in insl fwait jb xor push mov mov pushl mov xchg and or addr16 push sbb test iret pop cwtl mov xor pop mov adc je and adc rolb pop push and inc push sub or mov pop js add outsb hlt or dec push or jo dec xor fisubrl xchg stos and pop mov and movsb jo push cmp adc dec sub ss cmp lds push movsb aaa mov arpl jbe lret mov sub push dec jp adc add std jge jecxz rcl shl movsb adc mov xor jg jg,pn adc pop rorb das push outsb addb or data16 inc mov out sbb or fcom aad inc push dec and dec or test inc jl scas iret (bad) jno or push mov add xchg add jle or or mov mov mov cld aaa je imul xor loop inc mov test xlat dec jno jle inc addb addr16 xchg pop jbe adc sbb add aam ret (bad) aam call dec inc or jne insl mov adc inc loope push js or fwait jne test add inc movnti jge popa dec xchg xchg jno scas fs inc pop leave in dec pop lahf add dec lahf outsl and sub cli fiaddl enter fnop jne adc push iret dec sbb in fs cmpl inc icebp bound sub pop or ret pop aam in and pop push rcrb dec or xlat in stc mov dec in mov imul shr call pop push dec or js lcall out icebp adcl daa or adc push push or cmp lahf ja mov mov inc aas xor add and test mov ret sub inc add push sbb and push lods mov cmp nop cwtl pusha addr16 and add adc adc repz ret mov lock mov xchg mov cwtl mov cmp adc lock push cmpsl cmp adc adc shrb lahf or adc or xchg cmpsb dec or dec outsb les (bad) divl pop stos and sub add sbb inc sbb xor rolb ficom dec add aam pop push jne dec shrb mov aas xchg je int3 pop push inc lock jae leave mov adc adc pop jl and and mov jb pop mov or lret sbb sbb data16 and or mov daa xor (bad) mov mov mov push mov mov xchg adc subb add aad jo sahf icebp inc mov add sub or rcrb cmpsl mov add orb xor mov cmp pop fsubrl popa mov pop push in fsubrl std dec push fmuls popa pop pop push jle xchg outsl (bad) insb ret nop in arpl loopew out pop fcmovnb das mov cmp adc mov test sub xor fdivrs (bad) iret jl adc fs and sbb and or push (bad) loopnew jo dec lret cld xchg push loop push inc or cmc into xchg adc push xor lods dec sub push je dec (bad) data16 lock rorb inc mov loop nop loopne hlt or dec int3 pop sub fdivl mov sub shld push add cli movsb loopne test push fwait adc pop sub js cli adc call loope ss xor cmpsb mov sub xchg jl fiaddl out (bad) dec bound (bad) lea push sbb dec pop push mov ret mov push cld mov push clc fstl aam lods ret fs incb xchg add hlt xorl inc fs cmpl mov jl loopne xlat xor cmpb or jnp ds or add loopne and or adc or int call cmp mov (bad) xchg sbbb dec pop mov mov cmp inc aas sub xchg mov cmp inc adc mov xor int3 sti push shrb add jb inc inc bound push aaa sbb jecxz (bad) aaa arpl and (bad) sbb inc roll cli xchg popf sbb pop mov daa and and sub popa push or add (bad) or ret aas fwait (bad) xchg in xchg fildll jecxz mov xchg icebp rcr add fcompl clc popa xchg mov adc inc and cmc sbb inc inc aad icebp xorb addb dec out adc mov add addl dec add add insl cmp push xchg gs ss mov fwait dec loopne popf imulb sub nop iret jae mov jl xor and and fwait outsb repz jg sub or je add jmp bnd jnp jmp in aam int3 push cmp fwait mov addr16 sbb mov fldl rol cmp adcb inc loop loope push dec push push dec adc pop xor push divl inc dec (bad) out xchg rorb ficoml ss add jecxz jmp mov add add and fwait mov adc mov mov push push mov push (bad) pop mov or out sbbb cmp js or push je jae test pop aam and jne fisubl pavgw fcmovb or adc (bad) xchg outsb cmp movsl lret les pushf nop adc cmp sub test cmp or pop movb adc mov jge (bad) jo push jne rcrb (bad) xor jnp sbb ss mov sbb sbb sub mov xchg inc push dec add js test inc movl sub xor sub push and roll sbb adc add call arpl inc je sbb adc mov pop shrb ja push inc dec test inc adc sub lea xchg fadds jecxz sbb test inc lea jnp lods push (bad) mov adc mov test movsb and add mov adc orl sub dec pop xchg inc es xorb cmp movsb cmp arpl lret jno outsb push jb dec pop xchg bound mov test test sbbb movb xor xchg lea inc aad js and lods cli dec cmp mov ret imul rclb sbb mov adc cld popa inc fisubl jne (bad) jo pop loop gs mov jne and outsl and pushf sub icebp dec mov pop or xchg lret hlt rclb sbbl dec dec into mov clc sub jbe xor seto out mov jbe (bad) pop jge enter mov sub shrl dec push data16 hlt mov sti sub out loopne and xlat xchg iret and lcall dec enter xchg inc push and in jbe aas cmp lahf pop jp push loop or adc loopne mov aam pushf fsubl pop mov out pop push mov mov ja,pn jmp repz mov daa iret mov push inc cmp setg jmp inc add lcall dec cmp setle cmp xor rcll dec inc dec mov mov sub cld (bad) pusha dec sbb xchg xchg rcl adc xor insb orb cmp pop mov or xor mov rdpmc je adc pop xchg out in dec stos fs push inc std sbb shlb mov push int3 in stos test pop xor xor push je imul add inc adc (bad) jp xor xchg sub (bad) adc sub imul push aaa sub sbb adc and mov lcall pushf or or xchg mov push cs aaa lock xchg xchg popa std add mov popf movb dec add js sbb fs pop lret push add loope mov adcb or dec sub aaa jl push cmpsl mov addl xchg pop or add jnp xchg mov dec pop add pop add lret ret (bad) lock scas scas push sbb mov ficompl fmul in jns ret jmp push sbb sbb sub lods or fs add sbb xchg xchg mov adc cmp push mov pop push adc mov test sub or in mov xchg push and lcall (bad) and inc lea movsb cs das int cmp cli add jns jge push fwait push mov lret push fucomip adc push sub jno add bound inc push daa insb mov dec or adc add pop test test adcl or dec or jbe and lods and pop sbb sub pop and sbb cmp jne in xchg call imul adc xor dec fs mov cmpb mov dec inc and cmp mov cmp je xchg dec or dec push pop fcomps cmp fisubr push flds inc out jge adc cmp enter outsb xchg les xchg sarl iret adc pop lret clc roll jnp xor cs inc hlt fisttp or int into incb mov cmpsl jne inc jns inc das add push adc rolb test (bad) pop insb test fcomps imul mov fcompl idivb push popa jne push pop mov test movsl pop popa adc xchg inc ljmp mov call adc push cli push push les sub pop xchg aas xor push ljmp popf movsb fstl and adc nop inc push sbb add adc arpl inc mov or repnz xchg cmpsb or test in nop scas adc and jbe pop mov gs pusha bswap jmp sti sbb stos push jnp sahf (bad) aaa scas mov push lods sbb fistp pusha push out lods call lahf incw std mov or jne and jb and mov bound xchg lahf xchg (bad) insb sub adc mov mov xchg (bad) hlt enter cmp and pop mov mov xor sub sub pushf mov pop (bad) dec movsl inc pop (bad) imul dec xor xchg cmp mov push in sbbb cmpsl pop adc cmp inc (bad) sbb mov arpl aad outsl mov insl in cs cli rcrl aas adc mov inc dec jne mov insb (bad) mov rorl loopne shrb push dec sarb cmp popf fs push fucomi ficom inc pop xor mov pop sbb mov into add add (bad) push dec mov rolb jne push dec movsl sarb outsl pusha cld lret clc or mov cmp xchg dec xchg movsb jge inc fcompl xchg jmp sbb push xchg sahf mov (bad) (bad) mov (bad) pop jne test sbbb xchg pop pop popf xchg scas xor (bad) aaa mov sub rcll clc stos jne push fist cmpsl jne inc adc or adc push in xchg icebp imul sub test push dec addr16 iret imul adc aas (bad) jmp loope rorb mov (bad) fildll movsb fstl test sub push sbb sub adc or pop cmp jle imul rcrl cmp or je add sbb or xchg pushf ret cmp mov insl daa xchg sub cmp push xchg sahf or ss mov popf sbb mov add imull push xchg scas lahf insb jecxz lea iret mov or dec sub or loop push pop and lods sub dec push outsb imulb pusha sti and pop fs and enter or pop pop mov andl sbb inc jge add sub sbb ret cmpsb cmp cmp ret ss mov mov xlat inc sti sbb mov add movl lea xchg or stos jne sub je orl sub sub cmp stos pop imul inc or inc adc cmpsb dec adc adc adc add xor rclb or sbb xchg loopne add inc sbb inc stos ss les cmp inc xor push xor push aad lds push dec (bad) jb mov nop mov dec push xchg and daa enter inc call adc insl and jnp addr16 cwtl xchg nop aam testb rolb add dec test stos cwtl js add cmp inc push test or movsb (bad) out add lea or mov jge dec xchg mov repz test out pop mov mov push inc je and mov (bad) aas push add imul shrb xchg dec add pushf or mov loopne xchg xchg popf fisttpl in and sub mov adc push lret enter scas ffree test xor iret sub movsl xor push inc adc xchg insb xor or aas popf in mov sbb cmp repz or adc dec mov fidivl inc push and adc (bad) dec sbb nopl or xchg (bad) mov in and inc and jb dec cmp std out cmp insl pop cmp xchg mov mov sbb inc pusha cmp mov or les push stos or push inc push pop and sbb faddl mov adc ret add push mov inc imul sub cmp js mov add mov dec xchg loopne lea or jle and jmp ja mov in jnp adc adcl jno push add repnz add sub and adc aaa or (bad) mov xor adc mov ja pop lcall clc dec jae enter fwait adc imul fsubrl push add test repnz and shrb pop andb inc shl ret sub xor std dec mov mov xchg or fidivr ret es sbb adc add in negl and push xor lahf addr16 mov andl sub xchg jnp push in pop fadds cmpsl push lcall test ret ret dec jns push gs inc and and mov ja lock mov lahf jne sbb (bad) out and sbb inc scas mov xor mov (bad) xor jg mov adc sbb mov xchg movsb pop mov arpl sbb or push or shll dec xor and hlt daa lds sbb or shll loopne push jmp dec mov movsl outsb je sbb mov and mov inc or mov jo movsl data16 xor mov add adc fsubrp or nop sub pop mov or mov incb das aas pop data16 outsb inc movsl xlat and je mull push aad arpl inc mov mov pop rcll les mov ss pop xor push inc mov mov mov daa add sub mov cltd sub ja cmp stos leave add cld jne jne out xor icebp xor or mov ds fwait dec loope iret push add push inc std xchg inc mov xor outsl push lods push pushl add lea hlt or fisub push adc inc push xor push adc dec add lods add xlat sbb xor enter add sbb push sbb leave or (bad) xor pop iret mov push notl cmpl pop pop aad or ret push shll dec test movsl pop sahf sbb add shl loop sub shll cwtl ret sbb xchg sub add sbb mov aad pop xlat test (bad) pop xor dec (bad) jmp rcrb sub pop adc ret sahf aam mov lods sbb mov test adc inc pop pop dec popl push roll and jge push push cmp call sub je push pop mov pop mov xor jb or inc pop insb testb sbb jmp pop adc outsb and test jno mov addb sbb in (bad) mov push inc shrb add test add pop and in jae adc rol mov jmp inc mov cmp inc sbb inc and mov mov incl add cmp jne mov add js jg nop xchg mov test push rcll outsb insb mov enter add jmp and xchg (bad) dec mov in fldenv jl nop push jb or ja fdivl sub jge cmp pop fwait sti jae pop and xor out pop or xor mov jne push hlt or icebp popf inc lret sbb mov inc sbb xor add inc (bad) shr addr16 arpl or pop adc inc dec xchg mov ss mov sbb mov sbb dec cmpl cmp dec mov add dec shlb popf adc cld mov or popf cmp push inc xchg fnstsw mov insl xor js mov inc push jmp out inc adc inc xor or ret push sub sub scas adc and sbb rclb pop (bad) repnz or adc mov push lods mov (bad) cwtl (bad) sbb movsl jno ret das loopne sbb jl rcll or sub push test mov call inc sbb xor pop (bad) fild cmp lods fistp adc call (bad) mov and add add add (bad) adc nop inc dec mov and sub push lcall (bad) stc push data16 sub cli dec jbe and jp add jno sarb (bad) cmpsl fsub sbb mov dec or mov pushf clc add ret and fidiv add jns (bad) dec shll loopne fldenv mov sbb adc sbb or xchg dec sbb dec lfs fcompl and adc fadds inc test popl int3 dec sbb les pop xlat fwait enterw push xchg (bad) push inc (bad) jmp cmp add nop sub mov push and jp jne bound rcrb fidivrl push negb in push inc pop rclb pop loopne pop roll loopne dec (bad) sbb mov add jno and xor rclb repz inc sbb mov and lock mov xor loopne cmpsl xchg sub sub pop xor roll dec or (bad) and adc mov pushf sbb fsubl add inc pushf push push sbb nop push sar push push bound lahf pop stc test into mov rorb sar pop mov jns cmp push push das cmpsl js sbb pop aaa push jnp add mov add rcl enter cld imul outsl sbb cmp xor push push stos es pop in mov mov inc rclb lods sbb and sub xchg mov mov adc jmp daa pop daa fsubs add stos nop rorb inc scas fs inc jg je or dec jg add adc push and and rclb fisubr jmp repz mov inc or add lea xor adc pop pop pop les je sbb jl ror pop fs add xor cmp push push movsb xchg inc enter inc add sbb and mov or jo or stos sbb fimul sbb push add mov gs pop mov mov adc pop pop sbb adc push mulb adcb push orl mov or mov pusha outsl ret adc nop fstps (bad) mov add pop aas cmp push push mov (bad) mov sbb jbe (bad) and cmp repnz sbb inc inc mov stos push dec mov sbb test call test (bad) js rclb sub je movswl and mov inc adc jle add add add pusha jecxz push cmpsl xchg xor loopne icebp insl lea int3 push xor sbb daa push jns das lods insb pop daa scas pop movb scas xor popa and loope xor xchg loope (bad) add xchg jo out ret shrd cmp adc ss (bad) aad dec cltd jo lea fsubs xchg test jbe adc adc push sub pop aad mov xchg xchg lret or adc jne mov xlat shl push roll jle je ret push push add adc popf inc cmp and orl mov bound in cwtl mov shlb push pushl and xchg cmp lret or adc adc icebp popa mov mov inc popa jl mov or or mov jge xlat js mov les mov loopne pop xchg adc stos dec nop mov sbb ret pop sbbl cmpsl (bad) fnop pop mov adc xlat loopne push hlt jmp pop sub push sarb sbb xorb nop enter push mov test nop ret cmp adc jg dec mov lock cmpb gs push adc clc mov mov xchg sub or out lock pop add push pop (bad) mov push mov inc adcl pop mov sub dec arpl pop shll jl xor push sti and daa adc loope add inc push (bad) mov test jne add ds sbb andl add pop adc fldl fbstp cmp cmpps and jne jle mov ljmp cmpsl inc push pop xchg push mov mov (bad) dec outsb or xor and cmpsb jno mov ret lods in dec scas rcl xor aad pop inc mov cmp inc cmp add imul ret jne (bad) mov add cmp add add insl xchg xor push pop push mov push or cmp or movsl sub inc lahf inc add dec ret iret inc clc push adc dec mov push push or xchg mov sti pop cmc push ds adc enter cmp test or shll xchg push inc xlat mov loop dec and mov nop mov int3 pinsrw inc ja out imul lods lods and sub jg push fdivs (bad) les inc data16 lods shrl mov cmp push mov add jne imul sub inc pop inc xchg adc mov push jp mov inc enter mov xchg push jg add in xlat xor mov addr16 nop lret xchg pop iret ljmp mov mov xchg or imul cmp call sub dec cmp aam loope sbb aaa pop adc dec push mov in (bad) shll push pop dec sbbl cmp das ret rolb add mov push rolb and loopne dec (bad) dec adc mov mov or outsl adcl imul mov aam adcl aaa dec and inc std icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb jbe add ret add cmpsl xor and and push pop cmp sbb inc shlb ret xchg js lds xor xchg shrb jle jle fwait jno in xor push repnz in jne mov mov sbb out xor and sbb jne std js jne push pop inc or inc pushl (bad) adc adc inc sub rorl aas movsl add pusha les inc mov push std xchg xchg js outsl jp or dec lods iret fiadd roll push ss lahf pop push sub sarl add lds out xchg push aam and cmp mov xchg pop cmp ret dec adc fidivr es inc sbb pop add add loop and int3 jge jg test popf rcpps push mov fdivrs push cs (bad) cmp loop xchg xor inc sbb sbb add into xor pop add push fstpt push sbb push pushf mov shrb xchg outsb xor inc dec dec enter (bad) ret jae movsb and mov outsl dec and aas imul mov push inc pushf jo daa imul pop push mull push xor mov add inc jmp jl pop je dec and xchg adc xor push das in or jae pop adc dec jmp xor sbb or xor (bad) lock pop into jnp add add cmp pop xchg push jg jge pop imul mov sbb mov add jo stos jne lods roll out inc sbb jnp cmp pop ljmp int3 je inc cs xor sub shr mov inc push (bad) pop inc inc adc adc xchg jo icebp sarl mov stos dec sbb add add push subl out add mov addl jae sub mov add mov adc lods dec add jae,pn mov pushl inc lods dec shrl ficompl pusha cs imul push je pop pop jmp mov mull add adc fmul in sub mov loop subl push or xor mov adc xor sahf lock add gs popa add enter xchg or xchg nop pop (bad) dec push sbb por add push stos adc iret adc cmpsl movsl cmp mov (bad) mov mov add iret mov xor jne sti lock xor (bad) and and sbb sbb dec mov lret enter sbb les jecxz test jp jne push jg les jo js pop mov (bad) cmp inc aam jmp test les mov add xchg inc je js jnp cmp insl sbb add repz mov pusha icebp and inc movsb in lds or or and in ror das shrb arpl inc mov xorb push push cmp test pushf movsl cltd sbb cmpsl mov cmpsl popf rcrl imul out jl daa dec jo mov imul daa add out je xchg cmc rorb mov cltd xor mov mov xlat push mov mov mov inc jmp lret jne cmp out lods inc (bad) out add mov movsl push inc and jmp and xchg addb les fist inc mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb cltd pushf rclb popa jmp dec test xor cmp mov xor adc fisttpl pop popf jmp sub and daa stc sub jge pusha pop push sub loopne xor outsb pop cmp push jo mov add pop cmc lret add add add nop xchg mov nop mov inc add mov jle adc dec dec and (bad) lcall dec add test arpl imul loope push (bad) jg pop pusha dec xor roll dec and sbb mov enter pop mov sub mov sbb mov and (bad) sbb ljmp xchg fistpll imul aaa shlb push add rclb fnstsw inc jp xor rolb mov add inc sbb xor daa push adc call cmp inc sbb not jle or xor inc sbb pop push les mov (bad) dec or int fwait aaa lds mov push and add pop push push insl mov clc adc sub repnz mov sub in adc adc sub sarb mov mov mov adc push lret push add mov pop imulb or dec jnp es es jbe cmp cmpsl sbb lock jge in add or sarl push pop sub sbb cmpb mov movsb nop leave adc shufps andb add shufps dec adc push add push (bad) push push push inc notl jbe lret xor sub mov adc add test sub pop adc jnp mov stos arpl mov adc divl into cmp pop add daa xchg adc inc xor push jo xlat scas fadds jl lret add inc add lcall (bad) ja ret test cmp fistl sub cmp lret and add sbb push cmp out rcrl or outsl clc jge repnz fcoms (bad) cmp push insl mov inc ds sub mov or inc sbb test adc ja or pop sti xor push xor pop shrb andl clc sub clc adc insb xchg es fstl dec ret or sub dec sub int3 sub add adc dec push sub (bad) incl lea and inc (bad) cmp fwait les sbb je cld inc push xchg cmp cmpsl test adc jecxz in mov or adc pusha push (bad) mov xchg mov sbb adc mov popf test or loope ret mov xor dec push out or ja mov pusha or push mov cmp loopne xchg adc cmp (bad) (bad) and or js adc into inc xor mov adc adc (bad) cmpsl add adc cwtl nop in hlt jg add sub sbb repnz pop insb sub cmp mov or mull in insb test jnp and xor jg fimull lods aaa sbb imul mov dec fimull push mov sbb fs test (bad) pop mov sbbl jns push xchg mov pusha pop adc sbb push insl test or push jbe push xchg test add movsb mov pop adc mov adc dec rorl adc cmc inc hlt or sbb or cmp sbb cmpsb outsb rcrb adc lds xchg xor shrb mov push lcall jb adc call mov insl inc add push dec push jp jg push rorb sub sub cmp les and sub sub push dec sub dec clc clc lock dec jae imul cwtl cld mov movsl sbb rorb fmul push push sub popf push xor and jl sub in in dec sub mov jmp jnp pop cmp cmpsb nop mov ficoml and push std pop inc or or push movb xlat pusha notb add cmp add pop push mov mov jle xor xchg out je lcall sub add cs jmp jno sahf loop add or rcll add (bad) xchg mov push push dec mov dec mov inc jl jns jl,pn mov mov (bad) repnz push dec or pop push mov mov sub imul jmp loop sbbl pop inc mov je jge adc or in inc jae loopne adc das cs xor push mov and jle adc or sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec push sbb jl fmuls mov cmp jle sbb (bad) xor pop cmp and mov int3 or dec sarl fdivrs enter jmp or dec xchg mov lcall or nop or or mov mov dec add xchg insb mov (bad) outsb push das mov in fistpll cmp pop xor (bad) add scas push mov mov mov inc xchg mov cmpsl dec pop enter inc jns js popa out sub hlt mov sbb pop adc mov fadds mov inc sbb jns sbb mov mov rolb mov push shrl push or les jge xor or or lock incb cmp dec sbb xlat xor jbe in loop sbb xchg push push movsl xor xor push ret xor adc sbb push test es inc dec or inc mov mov add inc xchg fwait inc jmp clc xchg sub test xchg cmpsb cmp inc gs sub hlt mov or mov add loop mov test cmp adc push ss lods jmp pop push test push push mov aam jmp inc mov fwait push fwait scas aam xor xchg sbbb out xor movsb js add fistl sbb mov mov or fdivrl dec mov add xor mov idivl rcrl sbb pop fdivl daa jnp insl mov lea outsl (bad) dec test and jne ret lea icebp push (bad) mov fwait jne lea pop add push pop inc push insl (bad) dec rorl pusha cmp aam ret sti sbb adc ffree inc sub add add popf sbb mov cs lret jg aam add nop stc or pop fdiv (bad) jae rclb add inc xchg dec or adc cs push iret and adc test ftst adc cwtl sub jb or jp orl or ret xor mov arpl push mov movsb inc es pop or xlat add out xor mov mov push aas adc (bad) hlt sbb adc sbb and push add add daa nop nop cmp add push adc scas or js hlt or xchg xchg cmpl inc lahf pusha add or or xor shr add adc cmp add inc mov sbb daa adc cmpl lock sub cmp insb gs inc out jmp movsb mov ret dec movsl push add enter xchg ja mov pusha xchg movsl insb jmp xchg lcall push pop push dec daa dec repnz ss pusha add sbb addr16 sub cmpsb je (bad) orl rorb or ret insl pop test push inc decl xor cmp test popa loop (bad) out das cmp imul cmp pop push dec popa jo push shr int sbb adc push rolb and inc jmp add daa add xchg inc inc mov movsb scas mov ljmp dec jbe loope int3 adc ljmp addr16 or stos adcl fiaddl push push shll sbb addl xor add mov pop or sbbb inc test mov out dec std test xor or (bad) jmp ja sbb hlt add bound orl insl cmpl cmp xchg inc push outsl adc xor scas cmp icebp and xchg mov inc add imul popa fdivl rorb add cmpl and pop dec sub aaa movsl jge rorb mov add mov addb lea xorb mov push add (bad) mov inc add xchg and cltd imul enter push loope in pop add and sub faddl sub pop and je inc jbe sbb add xchg mov mov xor cmp in or push jo daa mov ss loopne dec jae movsb call (bad) mov enter or sub mov (bad) mov jns sub mov dec pop pop mov js cli out sbb insb pop dec sahf push clc cmp jge out jno movaps push jne push cmc push aam sarb int inc rolb sbb sub ficomp push lcall cmpsb push jle sub insl and test jl stos dec adc sub call and xor popf sbb add sub cmp loop and adc in iret lock dec aaa push adc shrb aas dec aam adc iret sbb sbb mov orl imul add (bad) in dec or add dec mov xchg shrb mov add mov lret popf or jl push ds add es and ret adc and inc loope rclb add movsl xor orl mov call sbb push (bad) push in xor or pop hlt mov loopne shrb and add movsb push test out or push inc adc cmovo setb sub push jo add mov mov or add cmpsl arpl xor and inc xchg ucomiss adc jo out out scas je nop cmp sbb xchg push push mov cmp push cwtl mov and test ret scas dec popa iret mov jle loopne fwait inc jb pushf aam js aaa inc ret fsubp dec or push pusha loope jae adc and pop inc fimul ret lods ret aaa xor cmp ja push jg mov mov (bad) cmc aam pop test ret lret cmp mov ret mov or mov pop test pop sti push popa lods mov (bad) jbe cmp or xor fstl or mov adc (bad) adc les add inc stos lahf das or pop insb cltd pushf rorl movb dec inc pop idivl push jo (bad) pop mov sub or and or add xor sub jge (bad) (bad) pop iret xorb in stc sbbl mov cmp and and nop cs (bad) cmp les dec popf mov pop popf outsb (bad) bound test int3 pop or (bad) cmp mov add cmp cmpsl std dec iret iret cmpb push sbb inc fs js dec pop push sub add inc imul mov fildl clc in ficom xor or or imul push fdivrp add and jl cld dec in jbe sub dec cmp push pushf outsb mov cmp call fs lret test dec add fstpl jmp xor pusha leave es mov in xchg inc loope or sub in xor sbb and jne popf movsl xchg xchg adc mov loope cmpsl lock push jno arpl xor or xor sbb and insb daa (bad) into flds cwtl pop fs push mov xor je inc lahf inc outsl and xor out dec jne into inc inc out push pop add dec jmp xchg inc sbb ficom xchg mov fwait or push stos jo xchg sub jmp aam xlat pusha fsqrt ljmp lcall ret ss mov pop and jnp jo cmp xor push clc (bad) mov xchg sbb sarl and in push fldl push adc pop xchg adc pop add rorb daa pop or aad mov jp dec adc daa or sahf add outsl les mov es add popf sub adc sub inc (bad) out int sti or pusha xchg outsl lods sar test push cli (bad) prefetch or mov je adc je cmp jns push imull mov inc imul add dec or xor cwtl pop negl adc arpl lock cmp loopne dec sahf xchg rolb aad jno (bad) idivl stos test pop mov push add adc in popf jno sbb jp push test (bad) push in push adc push push fdivl fdivrs lock cmp out and ljmp mov fcompp nop adc jne push (bad) dec jno repz and xlat je add inc adc enter push push es pop jbe loope fs dec push or add dec push into mov and sbb push jmp add sbbl scas mov cltd mov scas lods push mov or mov mov or sbb ret mov lock jne (bad) mov or and addr16 js push xor or mov jne mov fmuls pop dec dec and adc fistl (bad) mov sbb testl in call fldcw rol xchg test pop sbb bound leave sbb push or fs fild pop pop and test add adc adc lahf mov cltd and mov mov mov jecxz adc jl dec ret fldlg2 adc push sti lds or add inc mov adc lock shl fs loope,pn inc movsl push xchg mov mov xchg xor cmp xor test (bad) pusha sbb cltd or mov insb or scas cmp mov push mov mov xchg or add inc mov xor cld adc (bad) scas and or addl nop mov or inc insb push dec insb pop jg cmp or add xchg add add mov inc fdivr mov pop clc add test sbb in push xchg in sub or mov cwtl mov inc (bad) (bad) xor leave icebp clc fs add mov xlat inc insb adc movsl xor insl (bad) push aam dec dec and mov and test out add adc xchg icebp add jp xchg pusha mov nop add ja daa in (bad) cmp xchg arpl push popa mov add je push mov push pusha lock cwtl cmp inc clc or loopne sbbl mov cs inc adc inc jge sub sti stos add add dec add inc popa inc loope dec pop and or out add add add sub (bad) push and dec je push (bad) rol pop mov lret xor inc xor cmp push (bad) xlat cmpsb sub jne sbb fdivr repz mov sbb lods pop sub or mov fild add cmp push jnp xor pop cmp inc or hlt sub lcall insb mov sti inc mov jmp push add rcll mov or jle jmp into push inc pusha jnp and add sbb xchg mov mov pop or sbb notl mov xchg imul es fcoms movsb and loope mov test enter cmp xchg inc scas pop xlat adc or inc dec and inc movl xor or pop add jo or add insb mov cwtl or push mov push pop icebp dec jmp xor and and testb inc dec inc mov (bad) add ret push inc dec stc or aas push lds (bad) xor loop or sbb dec (bad) mov pop or or sbb inc adc aas mov lock adc push mov sarl sbb or jmp mov daa sbb pop adc or sub adcb daa (bad) push pop add and dec mov adc adc adc sbb shll pop cmp push dec inc mov jmp pop mov cwtl sub xchg add cmp sbb inc fs (bad) and sbb mov pop or jno dec enter xor icebp dec (bad) flds and sub xor or pop movl dec sub cltd add mov testb loopne adc cmp shrb xchg cmp in jae jns out xchg xor pop mov jg lahf sbb add cmp xor push cmp js sbb pop add aaa or or mov or sub aas adc ja lret xor jo add add pop sub (bad) jg pop push jnp js dec cmp ss sbb fdivr (bad) loop add pusha pop push add push sti jmp cmc clc cwtl mov jne mov push push sbb jb pop dec xor jecxz xorb or clc hlt (bad) fdivs shrb or sbb jl addb pop cmp push dec push add and push add clc (bad) cmp sbb add mov pop les iret sbb loopne sbb or subl push xchg rclb lock jns push and sbb push daa jne add dec cltd lahf mov setno in jle xor popa ds adc orl out jmp out loopne sbb inc pop inc and les xchg scas add inc ss ret in inc mov mov data16 jge (bad) push iret xor and push jns cld repnz inc outsl jae pop mov pop inc sbb ljmp clc fisttp inc sbb cld jne sub mov fist imul or cmp mov cmpsl icebp inc add lea sbb xchg push and insl pop pop dec and jp or cmp mov cmpl jne ret imul sbb inc sub sbb lods add push xor inc sbb push in and (bad) negl inc inc pop sub push jecxz repz mulb movsl sub sbb aam out movsl cmp mov jecxz shrb xchg movsb jbe push mov faddp jmp add sub add lods inc cmp adc adc aaa cmp std pushf or xorb and lods ret xlat (bad) mov or inc pop bound adcb (bad) adc dec and inc and outsb movsb push mov test add (bad) dec pop sbb es faddl push sub sbb and inc (bad) xor dec movsb or jmp push jae or sbb mov inc pop pusha mov imul sbb add in dec or jo add add cmp imul xchg push adc cs fdivr in inc inc loope,pn dec mov fisubrl insb roll sbb fsubrl xor add or data16 cmp jne push push (bad) pusha mov and in or add sub adc inc lea (bad) call inc mov sub pop in push push (bad) in add arpl or add add adc pinsrw ficomp or inc sub loope lea arpl cwtl sbb cmp cmpsb and inc pusha int3 sbb and sub adcb mov bound test nop jno rclb and les fwait and ljmp sbb or clc mov mov es das add inc ljmp push lods jne inc add jae sbb stos dec dec push test xchg or (bad) jns test loopne adc inc frstor je or and push jne add or mov hlt add sub out insb mov icebp pop push das pop xor sub addr16 je outsl dec sti loopne psubusb es cmp stos xor je cmp pop xor leave inc mov mov test testb xchg or inc cmp sbb lea and xchg push jge aaa jp imul sbb add cmp add leave loopne test mov xchg xor mov add or aaa (bad) push nop inc (bad) lock or mov popa ljmp aam or mull movsl es sub adc mov sbb or push jne clc fistpl hlt mov sub js flds xchg fisttpl and (bad) adc push mov out mov das xchg pop or adc adc mov cli mov adc cmpsb adc testl out and and and enter xchg push mov sbb lcall pushf (bad) jmp addr16 sbb pushf cmp push or cmp pop pop sbb sbb sub or sub outsb shrl or sub cmp sub xchg mov dec (bad) and popa add iret cwtl stos sbb jle xlat ret arpl in push sub and adc jne sub sbb push xor ja cmp sub xchg pop mov adc jne sahf push push sbb std pop (bad) dec out xor pop rclb faddl jle sub xchg mov sub test (bad) fcoml or push fldt xor inc add inc dec (bad) mov add dec inc or or cld inc cmc sub aad adc lret mov xor add push mov jp jle icebp aaa jo ret mov push popf and out imul inc nop adc adc and mov pop (bad) aam add adc inc popa push repnz pop jl mov (bad) insb daa ja push aaa push adc lret pop xchg movsb in in mov xorb sbb adc rcrb pusha or push or push sbb add push adc pusha adc cmp lret pop je (bad) push imul in out or inc push mov xor and repnz sti addr16 xchg inc inc aaa mov sub adc sahf inc int3 movsb into mov mov push pop data16 adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb jle pop mov and rclb cmpsl out add mov push sub fistpl addb lret mov test mov cmpsl cmpsb push xchg and push pop adc add xor icebp xchg push pusha shll xor sbb mov pop push or flds sti add rcll inc or pop daa add mov xchg cmp xchg test pop imul pop or add scas lods adc andl mov xchg and push mov and dec jp pusha out add jmp je minps push push sub adc dec jne ret fwait inc das xchg pusha (bad) daa push insb jbe mov push and inc inc or fcomps xor dec mov mov movsl (bad) mov rcll push jo movsl ds repz in mov xchg rcr xor push adc test shrl leave lret or push dec push fcoml stos inc mov cmp mov iret pop popa inc xor pop xor jecxz inc jae inc das loope arpl aad cmc xor lret mov push nop pop xchg inc (bad) jo xor mov and clc pusha sub or add shlb mov sbb sbb push std pop aaa inc insb mov xchg scas jle push pusha addb push or mov in inc bound or rcrl push xor lock jnp dec loopne ss ss es dec lods mov push lahf and in xor xchg mov and test cmp nop (bad) enter shrl adc push cmp insl iret pop unpckhps mov pop lcall cs repz and push sbb pop adc cmp cs sub sub jmp adc mov jbe add or ds cmp dec popa mov sub pop xchg and mov jecxz fwait mov and push aas cltd pop jmp sbb lods inc xorl lods inc jge fstps pop das fadds sbb or jb insl push js (bad) (bad) pushl jle inc xor pop lret and (bad) push push pop jmp adc dec mov aaa mov (bad) cmc xchg push dec loope lock es or push les xor push aaa fcomps add jg pop nop or add pusha pop ss sbb or cwtl pop cmp int in push jl or dec push pop mov sub repnz into xor jmp push push and and jg mov and fidivr mov fiaddl and dec and add sub jo dec or or sub mov add and movsb inc cmpsb xor pop (bad) sbb dec in js pop jp int3 jns cmp jp pusha outsb pop aas xor sahf dec fidivl push or xchg insl mov push dec or test adc cmp popa mov mov adc popf test inc inc dec push flds into xchg or popf hlt xchg sbb fld popf outsl mov jne int3 xchg pop fwait das adc mov or lcall movsl aad roll xchg add (bad) (bad) adc loope xchg lods cld adc mov push add add lock jno loope out jo adc out mov subl xchg pop outsb js dec sbb sbb mov push daa lret test adc sahf and mov inc add mov mov sbb mov imul pushf divl mov adc test cmp ljmp xchg lock and inc xor push xor adc sbb lret inc xchg mov mov call cmp jnp cltd pop mov xor jg sub sar loopne sub repz repz das test in pop addr16 pop int3 (bad) mov inc dec xchg mov or add js push daa mov data16 mov std or and call push enter mov aaa add mov (bad) sbb or jge ret inc cmp daa jg adc lock or inc or mov test sbb and (bad) or (bad) scas jmp es call test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl mov lea pop dec mov inc pop dec cs push sub (bad) mov pop inc jne mov adc call push sub push hlt fnstenv addr16 jmp popa movsb cmpb mov pop jo lock adc cs sub mov xchg inc jmp test or xchg xor (bad) je pop in imul sbb and or popa sbb sbb stos add and jmp outsb cmpsl jbe dec enter out add cmp fdivrs aaa lcall mov sub inc sub insb fs test xchg movsb jb xchg js jl lret cs adc nop hlt mov sub cltd adc fistl sbb xor dec dec push add xchg pop dec dec inc add insl lret fadds inc gs (bad) pop push gs and inc out test das popf or add push insl jo pop adc pop das insl lea out fadds outsl mov jae pop cmp jno das mov jo cmc sbb push enter mov not adc adc out adc rclb lods adc mov sbb popa iret jno mov test pop mov or (bad) leave ret sub push mov jmp sub fdivrs jmp push adc dec movsb mov hlt dec and (bad) mov or (bad) dec mov inc and inc push add mov je loopne or push sbb inc sbb pop sub sub jge mov add mov and or and or jb xor push cmovne (bad) mov inc leave sbb xor mov pusha insb pusha pop cmp push or repz mov dec ss icebp inc mov mov cs and loopne mov add jg rcrb les iret pusha js std out movsb sub cmp or fcmovne inc xor flds out pop lea inc push mov aas xor das dec outsl sti pop push mov cld or or pop insb xlat mov push push or cwtl sub cs inc stos out lock push andl icebp popa add jnp movsl popf (bad) sub das leave cmc mov outsb pop mov dec sub xchg add or mov dec mov loop sbb mov inc or adc mov dec (bad) cmp mov movsl push ja in inc jp iret subl int mov add sbb mov addr16 cmp cld pop test cmp leave or sbb out adcb push pop daa xchg icebp cmp pop sub setb sub mov inc mov mov cmpb das clc (bad) out jnp sbb jnp sahf or fdivrp push adc imul xchg xor cmp push jle emms pop sub add decl push xor rcll xchg sub lea xchg leave sbb fnsave loopne lock jo jb adc mov or ja lds pop adc jae stc adc or fidiv hlt pop les ficom xchg icebp push push bswap xor inc mov dec or xor push inc sbb mov out mov jb push push mov in pop sub mov mov sub mov mov push xor mov or incl and mov sub or sbb xor push icebp popf push sbb add (bad) fist out mull bound pop push mov test sbb test aaa jnp add lea jnp mov pusha inc or push inc dec movsl pop (bad) out fstl fs sahf hlt sub pop (bad) cltd fsubrs pop mov and dec sbbb cmp sbb or adc movl sub scas mov fs test xchg push aam xchg test add dec add inc xchg fcmovne pop xchg add scas insl shrb cmp pusha sbb lahf pop sub add and orl stos out nop sbb dec fs mov enter pop pop add mov jns push push push je out jl test pop xchg push mov cs outsl pop lsl push std add lods aas add and push push xor add mov aaa int3 notl lods (bad) mov xor arpl lcall iret push push mov mov mov mov xchg aas add xor xor push add imul push lea push (bad) mov add jnp and sub lret fstps xor jo inc out mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc inc adc cmp xchg add xor icebp jle ja add inc (bad) push adc sub inc aas add lea scas enter lock jo lret aas (bad) les inc xchg outsl xorb xor jp or cmp test xchg add bound iret inc xor adc sub (bad) ja arpl sub xor and addr16 inc mov lahf repnz andl loopne add or lret aas fsubl scas adc mov aad and leave cmp pop je dec (bad) out rorl cmpsl cmp jo fidivrl test mov adc sbb ret hlt and sub add lea sub jle mov and adc lock arpl sub js push lret sarl sub loopne pop pushf dec cmp push jmp xchg mov inc loope mov call les ret das adc mov (bad) mov inc inc (bad) out inc adc push (bad) in xchg pusha xchg or or xor popa add lcall (bad) sbb call sub cmp ljmp sub loope aam or cmp mov jmp lea insb and and test xor push dec (bad) aas push push push scas sub and jge inc gs push jbe push adc aad xor inc mov and je add cmp inc aad ficoml rcl cmp mov and add push adc (bad) dec sbb sbb std data16 inc mov add outsb cmc inc adc inc arpl jnp push daa inc and xchg xchg xchg push push (bad) mov test dec sub add mov incl inc dec adc rcrb inc out add (bad) or xchg cmp cwtl out int3 les andl in xor (bad) sbb loope sub adc push je mov ror adc rcrb sub inc mov or inc add xchg addl lcall dec dec cmp dec pop mov and daa or or (bad) in push xchg or daa push out or adc outsb jo dec pop push dec out fmull scas scas sub pop xchg or js jecxz and scas out push inc into inc aaa sub pop imul fstl sub jnp inc call sbb mov adc pushf jns cwtl dec jne test sti add out insb jnp (bad) mov pop dec and clc movsl inc pop aas insl popa inc jnp call aam andb pop and insb mov popa rol rcll xor xchg add lods push cmpsl and pop sti cmpsb cmc xchg mov or sub add add adc add mov rcr and loopne xor js lods xor icebp sub pop mov out adc aad sub into js int inc or pop (bad) cmp (bad) jb (bad) je test (bad) fsubp je aas enter jl jl cmp push outsl or inc pop nop orl insb jns push (bad) mov mov lea mov sub mov mov vmovdqu pop pop cmp sbb repz je (bad) repnz rorl sldt xor cmp imul xchg test or out pop push or (bad) je sbb daa add mov orl pusha or and pop jno mov imull ljmp mov imul adc or mov inc (bad) out or pop add mov jne jns adc add jo loopne fbld push jge and clc mov xor inc (bad) adc xlat mov mov sbb mov daa inc ds pop sbb sbb xchg es xchg sbb pop jmp das adc movsl cmp fsubrl add mov stc push sub popa fisttpll js add cmp push jmp jo imul jle and dec pop outsl fimull cmp negb mov jne (bad) int dec dec inc inc daa lcall inc push sub dec push aam push sbb jg pop push adc push jb imul aaa pop xor and scas pop cmpsl adc pop sahf push and je dec rorb mov mov push inc or push aas and dec push aas cld movl and xor inc and sub stos dec and sub dec inc sub pop rcll push das xor jge mov push mov call aad cs test (bad) adc clc jl cmp stos push push xor jnp xchg (bad) pop xor hlt js inc cmp inc add jo and xor daa jbe jne dec or les xor stos and fnstsw mov push add mov call cmpsl dec jecxz mov aas mov mov xor dec aam test mov or and xchg ret (bad) and jge xor push sub out or dec jns lock dec and icebp pop xor or pop dec out xor push call sbb (bad) add pop push pop in adc mov lods push mov iret test sub mov rol jae inc xchg sahf adc push in ja pop mov jns cmp (bad) dec push das movsl js or sahf inc inc fs icebp or dec mov movsl xor cmp push mov mov adc je aas inc int3 loop mov xor call jno cmp pop dec mov call mov mov fisttp ja jecxz cmp dec sub js xor fmull sub mov xchg xor in hlt inc hlt mov inc cmp jecxz leave inc adc push stos or xor push dec mov rcl inc cmp xor adc inc adc and push decb or test jno xor dec push adc pop (bad) mov and push dec jle jo push mov adc test inc cmp xlat ret xor dec jae sub popa pusha inc inc pop test sbb add or adc jg rcr aam dec fsubs loop aad imul js repz insl gs inc xor add fcomps imul push sbb push xor adc adc cli xchg pop jg add jl (bad) mov xor (bad) jo inc add insl add mov insb rorl push pop or add push pop adc lcall adc mov rcr mov mov inc push adc pusha push in cmp in ud2 popf fs sub inc pop loop outsl push xchg stc push xchg out sbb fwait adc jae cltd xchg inc pop dec sbb cmpsl adc cmp inc push inc mov inc add mov add xlat cs and shlb inc es (bad) adc popf aam or or imul and mov xor sbb bound dec push es mov sbbl mov inc and movsl mov stos ja sub lock clc adc xchg add fbstp int3 negl in mov fadds add lcall mov adc ret or and and xor xor icebp ljmp inc cmp jno pop xchg and sbb pop mov das jbe mov sti xor subb mov cmp add clc andb ljmp inc or mov cmc push nop or inc inc ret cmp or jmp sub insb push xor pop inc mov ror dec loope sub inc imul les arpl inc mov or push or arpl mov mov sub dec xor sbb insb jl pop sub sbb shrl jo roll scas push je mov ret cmp adc ja lret add test fildll mov xor out pop xchg aam pushf jg push and sbb lea shlb aas mov mov sub mov (bad) cs and xor dec inc xchg and or pop stos dec ljmp inc rorb popa roll test cmpsb cmp pop pop cmp or xor xchg push cmpsl mov mov out scas movl les cwtl cmp cs sarl adc xchg add and stos adc dec mov dec hlt mov adc push das test xchg decl push dec sub les and test or add xchg inc xchg add lahf rclb pop popf iret add fsubl inc sbb mov in adc xchg movsl (bad) ds scas sarb jne mov add test cmc sbb fwait jo cmpsl sub inc xor sbb push xchg add inc or mov jge lock adc mov in cmp mov sbb test xchg (bad) ss rclb xor or dec xor mov movsb mov call push fidivr push cltd imul mov push movsl mov rolb xlat lock ret cmc inc fadds and lret stos sub add mov or fs dec in inc xor imul push jmp inc mov das cmp mov loopne pop lock xchg pushf pusha xchg ja xchg aam sbb pop in push fsubr pop xchg and lods add mov clc push xor sub ret sbb das in mov dec and push das test push loop sarl push push scas mov fcompp xchg icebp adc dec cmp pop test test (bad) lock fcmovnb cmp incb jne jmp es cmp es push mov out xchg out dec cmp or or push shlb lock dec mov push jecxz cmp les and out push arpl xor int inc jmp sub mov mov and mov jbe jecxz pop lahf in xchg (bad) xor cmp jne out add adc dec dec int test in add and lea cmpsb sub in inc mov xlat and sub fmuls jb push mov push adc add mov popa orl cmc fxch push call add dec sbb cmp push sub adc cmp dec test push mov xchg fdivl imul aad inc aam xor or mov xor inc pop ret or inc jle decl cmpb xchg add pop movb imul les add outsb xchg jo mov add lods push mov xchg sbb mov cmp jno add push out push mov adc or inc pop push (bad) dec ss sbb add data16 and push aaa int3 inc imul mov push push scas pop or lcall jb add sub (bad) jle adc cmpl add push bound insb fs aaa sbb dec inc push into push sbb mov adc add mov add and adc sarl or icebp push mov les mov out aaa pop and push inc fs arpl or push and or and subl add movsb mov add subl mov fcmovnbe pop mov (bad) adc mov push or addr16 sub cmp or faddl adc lds (bad) ftst pusha dec or or imul add cmp inc mov inc inc scas fcoml adc inc loop mov clc xor pusha hlt nop push dec rorb fs cwtl hlt inc loop jl push push push jns cmp je nop push mov aam adc pop out shrb cmp rcrl pop cmp pop push sbb cmpsb mov jno sbb cmp aas cmpsb jo xchg mov ja pop inc pop nop xchg je inc mov adc mov out mov xor dec push lahf pop scas fistl xchg stos in pop in jmp mov in push push inc pop mov pop sbb in sbb fs mov inc movsb pop inc test bound (bad) adc or daa rol or mov push adc cmpsl jnp dec sub gs dec cmp sub lock add cld ss sub nop push or sub sbb sbb jnp inc mov add xchg push sub pop mov cmp pop and jns mov insb lea paddsb pop push jne cmpsl inc xchg shl xchg cmp lahf cs xlat cmp mov or cmp nop or inc aas nop sbb sbb or add push test es inc or sbb dec ljmp ret push jae enter clc insb and test cmp hlt lock mov int arpl nop mov mov lea hlt mov and sbb inc pop sub test jo bound das mov push dec cwtl adcb dec fdivrl in and mov add pop cmpsb jmp push (bad) pop daa clc sbb dec sti push sub or push push pop cmc inc dec jne hlt sahf sbb jl or inc mov ds lahf mov cmpsl mov jp pop es push push cmp lods rcll adc jl add xor out popf cmp xchg test mov movl adc mov out add mov lods mov and or (bad) cmpsl and jle sub stos dec mov adc call inc add movsl aad rolb xor icebp cmp nop orl cmpsb pop movsb inc leave add in (bad) lds pop adc fmul jg iret or inc inc mov lods loopne mov enter cmp sbb fwait pop out andps jle xchg dec inc cmp jo mov or jo and jg pop and pop xchg push iret or fldcw xor jg (bad) out loope jb fstp jae mov push sahf add sub popa imul rcpps sbb jo loope imulb sbb and push sbb int xor push push add (bad) xchg ss mov xchg mov js,pt cmp aad dec mov fdivs xorb imul nop call inc pop daa (bad) fsts or adc and and popa pop or and loopne dec xchg mov pushf mov mov inc xchg push push popa and imul jecxz or sub or push jo roll push imul add add in xchg out or mov dec fimull les iret movsb jno push push lods out into inc sti xchg nop movsb xlat mov adc push push push and cmp inc cmp pop (bad) (bad) mov xor xor xor inc sub ja mov dec dec dec dec dec dec dec addb push push push pop pop pop push lcall push cvtpi2ps xchg (bad) popf and xchg fcompl adc aam shrb sbb sub xor inc test mov rcl or and testb data16 and cs in add add xlat mov jns adc pusha test insb cmp push mov pop push pop dec adc incb iret loope pop jb mov mov and sbb jge add in fcmovnb adc jnp push dec mov add push (bad) iret mov jge dec jnp imul or sarb adc pop cli push sbb sbb call movsb das inc push xchg mov adc rcr orl jmp loope add out mov jmp inc inc std jo mov dec pusha sub fs and sbb loope aam or jb leave xor cmp cmp sub mov add add and dec mov dec sbb adc pop xchg xor lock hlt mov inc adc push push cvtps2pd cmp hlt pop lahf mov push ljmp fcmovnb add imul aas xchg mov mov pcmpgtd push sbb inc idivb dec rcl adc sbb into sbb out mov rorb out inc jmp popa inc xor dec sub pop xchg add lcall adc incb or jmp inc (bad) sti push add dec adc add or pop lods iret inc add or dec shl and and mov out and loope (bad) xor nop mov mov mov adc inc pushl sbb mov lock jmp add pop incl or mov popf or cmp jg mov ret mov add rorb imul adc (bad) insl clc mov dec outsl add pop sbb add adc push call add es sub or in outsl sub (bad) rcll cmp ja jo fdivl push dec pop xor jmp ss xor in xchg sub xor fildl leave pop nop pushl aaa in or adc in inc sbb (bad) cmp and inc iret in popf (bad) in dec cld leave add mov dec out enter xchg (bad) test cmpsb mov xor daa and inc sbb cmpsl add xchg add mull inc imul mov xchg push xchg add cmp xor add push push mov pop fisubl xor mov xchg clc cmpb fnop mov or sbb movzbl cmp fisttp or test inc daa xchg ss push mov push inc mull movsl aad leave or cmp sbb dec js dec dec cmp in add and xchg mov ja dec lea adc mov imul push aaa mov and sbb cmp inc push jo mov aas or jl das setbe push fwait mov ret jns dec sbb adc ds inc add cmp add aas sub add sbb int3 mov push inc mov test sub (bad) jp not mov and sbb aad sarb jmp rolb in (bad) mov jle (bad) adc sbb das cmp lcall sbbb rclb mov and loop dec pop add xchg pusha and test or add jl sbb fdivrp or sahf cmpb dec das leave adc pushl add push dec xchg or popa shrb or fucomi dec pop pusha sub mov adc pop push adc fs fs add sub mov pop mov push dec rolb repz and inc sti (bad) push sub (bad) push adc aas jno lock push aam cmpb and or sbb dec in jo sbb push xorb lock mov add adc mov push cmp cbtw pop leave mov or imul in sbb addb xor pop cmp sub xor inc into pop xlat or fistp sub jecxz jmp and xor or (bad) push ss and push pop push pop or test pop (bad) jae pusha sti cmp pop dec sub sbb std in adc pop mov into adc pusha or inc push adcl and lds and inc test pop sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl xchg mov xchg loopne adc mov jmp and or mov es sub movsl (bad) loopne xor mov mov outsl ds push dec pop lods testb or jb stos fildl cld fnstcw dec repnz mov mov sbb mov shrb dec daa mov dec mov xor ficompl push push adc sub jnp mov es call test adc je mov mov out pop je adc and lcall loopne clc or push popa decb inc pushf test pop negb xor sub jg push mov jo add push and pop ds daa xor lret fadds or lds sbb add flds les dec cltd shrl out inc cmp adc fldl ljmp mov mov and dec out xorl or mov ss push loopne mov or into xor rcrl pop or rol or or hlt jge sti cmp mov inc mov mov pushl push add test sbb ljmp add dec sbb xchg xchg hlt jae movb xchg adc call dec loope mov mov xor jecxz insl sbb ret push and pop cmp aaa add orl je jae subb div jb or sub sbb xor and enter rcrb addl push xor shrl in lock adc arpl call jle hlt adc iret mov mov pop scas or inc cmp clc add jne addl sbb xchg nop icebp adc orl pop and mov (bad) mov and and in and out cmp push addr16 jae sbb add or and dec push dec add movsl xchg inc mov or mov push push (bad) or fistpll jge lea sbb mov adc arpl pop fsubs insb stos mov lods sarl sbb mov pop xor xlat or xchg cmc adc xchg lahf xchg movb mov pop adc flds mov iret dec pop das loopne enter lock hlt fcoms frstor jge das std xchg jo add xchg mov inc mov cmp inc cltd pop inc cltd clc outsb mov jle sbb rclb sub les push sbb ss hlt loope mov mov or dec out popa inc dec push inc xchg ret hlt mov es or lock inc xor jl add sub xor pop and inc es dec sbb cld jno sbb pop mov push dec and cmp decl push fmuls jns imul addr16 fsubrs dec push mov dec xchg loopne mov xchg xchg test lock inc cwtl pop cmp lds dec jge mov popw push push inc adc pop (bad) std mov push fsubrs adc imul add mov pushf sub pop dec jge inc insb arpl xor mov cltd add add mov fwait pop push or loope dec or sub add push add inc push sub adc add lock roll rcrb or ret enter mov add lea or imul cmc sub rol dec mov cmp add sbb mov insl (bad) mov xor iret es lret hlt cmp hlt xor into hlt sub inc add je add rep or imul test (bad) jo xor or mov leave lock rcll add lret jp ds pop inc inc negb fildll push nop xchg cmp dec insb loopne sti fsubrs adc xchg lea ja add clc loopne mov test and outsl ja ss jge aaa fistp dec push je sub sub test sbb add daa call mov in das ja or pop mov dec jg jl iret push inc mov imul mov sbb add or jp pusha dec loopne and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor bound mov sub jmp and lea ret sub repnz push add pusha mov cmp test or pusha data16 or call fsubs ret or dec inc out imul push in sbb stos adc and popl adc jo mov leave adc push jns call in mov sub sub xchg cmp je clc xor add lods lods nop xchg lret clc sub inc ds xor inc enter dec lock dec clc jb mov or xchg dec fcom test fnop arpl loop pop sub push pop xchg subb pop cs sub pop clc lock dec call test inc mov movsb leave test iret mov pushf sbb and or or mov cmp daa jnp loopne mov push dec adcw jl imul sbb sbb incb add adc fs mov imul and adc insb cmp mov mov fwait jae inc sbb nop jl jge add push nop push in push sbb pop adc cmc cmpsb lcall lea and int (bad) mov fsubrs push pop sbb js inc push fidivl inc push sbbl and adc xchg lea outsl fs insl fs test or bswap push fs xor fs jl hlt lock mov pop jl or sub fidiv push dec je mov test push or pop mov sub or xchg out nop sbb dec loope pop inc das pop fmull sub outsl push (bad) adc xor mov mov lock sbb xchg (bad) mov mov hlt mov test popf imul mov adc (bad) incl mov ret je decl inc add (bad) push push iret xchg inc dec arpl dec sub xchg jmp dec sub push or addr16 pop mov push or stc icebp mov or ds out inc repz adc add pop cld mov push (bad) pusha and test loopne add in ja or dec sbb (bad) and jae fdivl jge or movsb push adc cs dec inc push and add cmp push add xchg and sub jb aas aad or sbb in inc pop incb add sub imul mov movsb fstl lods sub xor ret adc dec sbb cmc or push ret insl pop xor adc sub lock pop mov dec js cmp clc imul mov lods test leave adc adc pop jp aas fildll in fsubs pop (bad) xor cmp xchg or je inc push adc add imul mov pop push xchg jo or cmpb jl or je and ret pop xor inc nop dec and (bad) cmp add dec add push mov and mov inc out aas je popl pop push aaa je mov push divb adc pop movsb inc mov test inc int xor mov or repnz push ds dec pusha push fmull pop mov outsb fidivr shrb push inc inc adc dec je push (bad) lock mov mov push ret push arpl add jnp sbb test fwait mov mov jno cmp clc imul xor lcall outsl pop in je lahf cwtl (bad) pop cmp cmp pop lcall gs and leave pushf (bad) or sbb fsubs fimul pop lods xchg es adc mov push push mov push xorps push cmp icebp push add dec pop mov and popl adc shrb je inc rcr aas mov aas jbe and repz dec aas popa loope subb pop popa bound hlt adc and and push push test push add adc dec insl mov xor cmpb sub xchg or insb imul sub cmp sahf gs or rcll jecxz inc and push add ret rolb push in test lahf and rcrb or cmp rorl xor scas cmpsb inc inc inc adc push arpl sbbb jo adc jmp sub (bad) lret insb sub mov add dec repnz xor push sbb and push jo pusha xchg pop mov jnp ss js sub dec xchg jmp pop xor mov push adc loopne pop and sub jmp xlat stos lock jno xlat or js les test jno inc dec fs lods ret rcrb mov insb adc dec mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja mov mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg cmp adc or cmp loopne dec popf cmp pop mov mov xlat jle stos movsb pop inc lret push cmp hlt or cmp jnp sub js pop add adc or xchg and pop mov lods mov jb shlb mov rolb xor sti rcl arpl ja mov mov inc (bad) push pop pop mov inc sbb movsl pop emms adc xor jge inc pushl jle dec (bad) xchg jne jl and or jle push push data16 mov mov je mov xchg adc push sub dec jne pop xlat mov dec pop and dec scas and mov and cs xor xchg mov and push adc je inc and pop or mov and inc in inc imul add movsb push jnp bound cs out xor or dec jge mov xor mov jmp push sub jl pop push mov add xor ja add imul adc mov into sbb xorl xchg aam lods ja mov inc nop mov jmp jmp incl add add mov jecxz and xchg inc or add cmpsb pop xchg dec ret xor sub or pushf xor movsl fwait insl (bad) sar call cmp int3 mov loopne out jge dec jle push outsb xchg ljmp inc add repz mov mov push inc jmp loope or out ret dec mov (bad) push jne fadds fildl inc sbb repnz inc test nop cmp sub push mov mov push or cld push pushf jns push inc pop push sbb aaa pushl dec inc add adc xchg icebp pop mov mov outsb and aaa cs xor sbb or xchg xor cmpsb add rol loopne mov call adc inc out out imul testl in ss mov repnz mov or pop adc inc es loopne test cmpsb jbe rolb enter lret out add pusha jmp jle fs ss (bad) bound dec lds mov adc mov or adc aam pushf jbe and jne dec push pop dec xor outsb je cwtl loopne fs sbb outsl push aam je push sbb clc jne repz xor ret cltd shrb test lret xlat ret sub enter lea movsl adc dec fwait jl data16 int3 push stos push imul lds inc push gs mov push (bad) xor pop cmp add test and popa jl dec add js loope jnp sbb dec mov add xor and push xchg (bad) xor add dec push ss mov sbb mov inc mov add xor sbb inc insl cmp bound inc fcmovnb jl movsb loope add sub sbb jle test adc adc dec pop fstp and cmp adc push xor or loopne pop iret and test inc add adc imul ret clc pop sbb shll addr16 add (bad) rcl jne in push sub add call or sbb add push sub jno and aaa cmp aad mov sbb bound mov pop bnd mov mov jmp movsb imul out xchg test pop into mov add in pop cmp pop cmp mov mov cmp add pop mov cli sbb outsl nop js lcall adc mov dec pop xor jmp pushl sti jl inc test cmp mov and addr16 movb dec add mov imulb pop inc sbbl in testl or inc test inc mov dec daa add adc xchg popa pop jne outsb loope add aad mov fs jle,pn aaa dec and dec inc jne mov pop push imul mov fs adc pop cmpl lea cs aaa (bad) push ret add add xor push cmp push and or inc lock adc xchg xor sbb aaa aam idivb mov clc jb xor inc mov sbb mov lds adc cld fdivrs inc cmp sbb rcrb dec add xor inc xchg xchg sub jae xchg fs repz xor xor outsl xsha1 cmpsb or and movl into pop push xchg clc bound xchg push push lahf pop pop xor daa pop ret inc or push cwtl ret cmp mov or nop daa fs or mov push pusha xchg push je das hlt xchg mov adc sbb mov movsb sub sbb (bad) (bad) xchg rolb hlt lret sahf push add mov jecxz (bad) and loope push pushl ret add data16 pushf pop rol push or call out mov pusha shl scas aam sbb int3 sbb addr16 js int3 js sub lret fldl push dec (bad) mov call jbe inc loope divl rcl jno cmp cmp dec pop sbb lock fwait ret push adc push out xchg sbb or add nop dec xor les cmp cmp in add push loope or and dec sub sbb loopne push ret cmpsb rcrb pop (bad) and adc push push inc xchg insl ljmp ss sub rcll or mov adc popf or add push add mov movsl es push add xchg jbe mov clc mov and sarb lea fcoml pop sub cld in mov lods mov insb rorl ror xchg sub inc je (bad) jecxz leave push pop add aas xor add test (bad) add sbb cmp jp add into or daa aad add lret xor or push call cld push pop mov pop and push rol cltd and jmp jo inc inc mov mov inc loop push cli pop or or add push jge mov mov inc sub push and inc or je sbbb in mov add cmp cmp mov fiaddl dec push push cmp push dec sbb push or repz inc addr16 lret (bad) repnz mov and add inc push sbb roll pop clc mov xor pop andb bound inc jmp cmpsl fwait mov add or jo iret add xor push sub lcall pop cwtl shrb pop jge lock bound inc je sbb inc cmp mov xor and (bad) cwtl dec pushf mov ret ret mov cmpsb lea pop push xchg movsl adc pop pop push cli ss lea hlt adc dec lea xor jmp cs jno test mov dec and into daa imul sub inc mov cmp push lahf pushf test pop movb inc push add je inc add or jg dec push inc cmp pop clc jb pop mov int mov jl mov das (bad) sbbb sbb pop bswap adc imull iret cmp sbb fisub or shrb xor add or outsl or push (bad) testl aaa aaa imul mov jbe jmp pop sbb cmpsb adc inc js push cltd inc pop aaa pop test out push xor out das mov adc bound (bad) mov mov cld mov cmp jle jmp xchg pop insb cld ss outsl pop lds or xchg xchg push sbb insb adc cmp xchg pop xor out cmp aas enter pop nop iret dec inc aaa sbb xor dec jno xchg loope iret pop adc mov nop or test addr16 sahf or adc sbb mov test add xor adc push sub xchg cmp cmp xor insb ret xchg add jg push subl (bad) jmp xor out push (bad) mov (bad) in xchg push daa jo fnstsw jecxz and mov clc mov jns or loope jmp hlt pop pop adc pop cli imul lock xor lds push mov xlat push and call daa (bad) aam or mov sub in fimul xor into ja mov jb mov insl test mov or cli xchg clc inc adc movsb push or push sarb (bad) hlt jmp hlt xchg jne sbb out int3 or adc subb mov or jl adc sbb sbb decw mov lcall or imulb (bad) mov fwait jmp and jge dec or or icebp add xor add push int3 push icebp std push push in aaa in jge sub push or xchg inc je pusha pop sbb push ss leave push clc pushf lods push jp addr16 lahf add dec push rol test adc add xchg add dec or cmp test ss test movsb cmpsl cmp jp sbb xor rcl lahf push mov pop addr16 inc push loopne cmp push aaa sbb in push mov pop push pop fcoml mov push xor pop mov jmp xchg mov je pop mov push xor int3 lcall dec test leave mov adc sub or add inc mov fild (bad) sub (bad) cmp cmp add ss rolb lret orl mov push xor fmuls mov pop aam lock xchg push inc adc arpl jg dec push or idivl aam xchg ret movsb jno aaa push pop add mov setle repnz dec ucomiss push and outsl mov xorl cmp call sub test insb dec or push scas scas sub sub je sub je or pusha sti inc pop add sub adc xchg es push and push pop movsl dec (bad) (bad) into nop mov leave rorb add loope pop movsb jb imul std mov testb add add jl jl add les movzwl or adc fisttpll add xchg and mov sti leave hlt ljmp daa int3 adc or das dec mov mov xor popa cmp imul ja shrb leave sub jge aam loopne adc enter inc add xor xchg xchg inc or dec jge cwtl ret insb imul push dec rorb mov cmp testb and pop enter add lock dec cmp mov and xor (bad) test pushf sub fmull mov cmp mov mov lea push add cmpsb test call xchg rclb int3 idivl ss cmp ljmp lea jno sbb movsl mov arpl mov pop cmp (bad) push cld push adc dec (bad) pop insl (bad) push leave xorl and add cli and push or lea jmp mov fcmovu aad aam jb dec sub dec cmp dec pop mov or push andb inc push xchg jns mov cmp bound inc (bad) fdivs push test xchg push dec mov insl or aad pop dec in pinsrw xorb dec add mov cmpsb sbb lds xor int3 adc mov or mov or add das push push adc add push lods inc jecxz jnp or adc mov (bad) mov cmp or jg add add push movl xor lcall xor cmp inc push jg add inc cmp inc popa add mov xor cmpsl fisttp fnstsw lock divb fbstp push push je mov adc add add (bad) or xchg aaa pushl jo addr16 push in cli rclb cmp std jmp jge xor ret sbbb or sahf cmp push xchg or mov xor or push pop lcall ret test dec cmp mov push xlat pop cld jle clc loop std pop std mov dec pop cmp inc xor xor xchg test xchg sub gs sub xchg std sbb pusha lcall sub jl jae sub mov pop imul ja inc and push dec push stos lds and push dec stc popf and xor and push adc and sub (bad) adc loopne das sbbb call xor xor or test dec stc or fwait mov testb scas xor add cld inc lods sbb or dec mov add mov xorb dec es aaa pop adc push mov ss or bound inc add mov jo sbb mov orl cmp nop je (bad) jne icebp lea or ret daa insb cwtl inc scas enter sbb (bad) mov adc push add jmp fdivrs pop inc jg mov sbb pop out daa sbb push shl sti jl mov and adc and and ljmp test (bad) insl test inc js ret mov pop adc dec rolb cmpsb test sbb movsl test repnz aaa mov jae xor cld xchg test jge out dec inc mov cmp jns push ds xor ss cmp sub sub aam sahf idivl test inc sbb sahf jnp cmp adc push adc mov fdivrl in out push roll xlat (bad) insb nop lods mov movsb test xchg adc outsl scas shl mov jae mov js jge lar cmpsl dec push ret jo xor hlt repnz aas and pusha inc or cmp pop popa add dec mov or js add sbb xchg cmp sbb push jae pop push xchg repnz insb or jae inc jle or dec outsb arpl (bad) inc xchg out dec pop mov test push stc xor lods mov jne ss adc ficoml je lock in ror push adc xlat inc les loope loope fsubrl jmp and arpl out mov xor jo push call test push cmp and mov add nop xor jns mov dec cld pop sub arpl iret lods or je out push pop shlb aas or or fisubr sbb stos add sbb in lahf or enter pop inc xchg (bad) vpmacsdd or aaa cmp or cmpsl sbb testb int in push ret push push and lds pop mov push insl outsl mov jns push out mov movsb lods (bad) cmp jmp out fildl or push fadds sbb inc jl add mov pop cwtl (bad) mov xlat pop dec lcall adc mov imul subl mov cwtl mov push sbb repnz movsl xlat inc call cmp out cld out mov sbb (bad) orb cmpsl jo (bad) imul jmp aam inc ja jo or fistpll (bad) fsubs mov fadds insb out mov bound push adc adc jp ret xor nop xchg pop xor ljmp add mov xor mov je xchg dec or cwtl or or out loop dec adc inc mov mov dec mov cmp bound or notl sub adc loop add es outsl or push outsl mov call jl (bad) out sub movsb sbb mov adc imul std mov dec movsl sbb out mov jnp das mov popa ja insl adc or cmpsb sub ror ja sub imul rorl out in in rcll and adc mov cld (bad) or mov outsb fstl sbb or test addl xor mov outsb jne sbb adc lret push adc mov test push or add loopne iret inc (bad) lret pop adc mov pop adc in adc (bad) in rolb cwtl into inc and push gs cld push or lea mov cs xor (bad) test inc imul mov pop dec lds pop push (bad) mov cmp fs mov push jb clc and xchg jns adc out jns cmpsl mov scas push js test lods xor int3 insb pusha and sub test xlat sbb inc or pop ds rol and outsl clc (bad) imull movl xchg mov or imul or iret inc rcrl (bad) andl rcr lret add xchg push jne jns pop test pop sub sbb xchg add mov dec adcl dec jae push push push dec rorl inc add sub js ret (bad) lock outsl add pop lahf inc loopne fcomps adcl inc popa lea sbb jae dec pop xchg mov sbb test mov jbe add mov cs jl mov out mov push cmp inc inc test inc jg js movsb repz pop fs add lahf add push lods testb and and inc les outsb cld out faddl cld inc clc push mov and in (bad) es fs cmpsb andps xchg mov int3 adc sub push call jl add push inc fidivr pusha xchg push inc dec and hlt ss fsts add aaa (bad) icebp push push xor sbb add fstps jns jge cmp mov mov push adc push fstp aaa add add add add ljmp add add ret or (bad) sub add xchg add mov push imul push mov lea mov pop sub fimul add or rolb pusha loopne push bound add lods lret adc or (bad) stos cmp roll pop dec xchg and xor mov and and ds jl dec push test push mov and pushf xor push push mov negl aaa sub cmp out fidivl je push pop addb push into idivb cld sbb sub xchg xor mov repz mov adc push fdivs aaa fstpt cli inc push in push aas sahf xlat je sti les in or cmp fdivrl push popw mov and cmp faddp jnp or inc or pop adc add (bad) lahf pop and lret pop add outsb inc out lods (bad) pop mov xor pop ret push pop xchg outsl pop sbb cmp pop lret push andb add std js or insb or pusha cmp cld out inc orl pop xor lret loopne pop adc mov cmp aas add cmp push push dec loope mov xchg dec outsl jb dec adc add insb dec jo pop add ret inc xor les jo (bad) adc call movsb push rcll xchg jl xchg pop lcall repz dec shrb dec add pop les add das fisubr inc add xor fwait sbb xchg push lcall es adc cld cmp sbb xchg and (bad) sub std pop ret sbb dec fnsave mov repnz sbb pop mov xchg in push dec jo xchg das push add xchg daa pop test mov aam shll push (bad) pop mov test mov push and pop push adc icebp and mov es or inc dec pop enter xor das int3 mov or jmp adcl (bad) add pop push mov adc inc addr16 and jmp (bad) imul addb sub lcall shrl adc test divl enter ja pop enter aaa fwait (bad) dec sub shlb divb dec (bad) popa call dec jecxz test push mov or push popa daa add scas inc mov mov xchg fmuls lock xor js jae pop aaa inc or mov push sub add inc mov jb and xor jo push dec (bad) xor jl add and (bad) pop cmpl dec (bad) xor mov pop roll cltd or pop xor jo aaa jae repz mov in lods dec dec cmp gs sbb fildl faddl inc int3 orb jb imul mov test or jo jbe jle (bad) push scas cmp aad pop fs or cmp mov out rcrb cmp shll or xor cmp decl repnz pop cmp nop fcoms aas jecxz push in inc cwtl cwtl stos xor pop insl inc insl sbb mov repnz outsb dec jnp cli sarb aaa push call or inc inc shrl fdivs pop pop enter dec pop push bnd clc jns mov add popa cmc dec cmp inc add inc or pop loope and dec dec and push add dec inc sub dec push jbe inc or mov and out pusha ja push test push xchg dec inc adc scas add dec cmc inc or pop inc push and dec push ret subl push sub pusha or or scas sbb (bad) or mov cmp mov mov pop repnz push rorb sahf cmp dec imul das mov mov push fcomps mov lcall ja in orl and orl add es mov rorl aam inc push js aas unpcklps add ds inc pushf cmp cs test cmpl inc or adc mov push inc aas imul inc test out push ss cmp or out pop sub jb mov rorb or or nop and (bad) ds mov or inc pop (bad) scas loope in pop lods push int3 iret mov push or loopne inc or adc xchg mov inc sub add push mov dec inc test adc in and (bad) das testb (bad) (bad) jne loopne test rcl scas push adc rcrb push cmp sti (bad) clc push sub inc pop pop push movlps jb data16 pusha ret jo mov xor sbb pop or mov dec xor fmuls out mov in or inc add loopne sub mov or je and or push inc push cld mov dec xchg mov mov inc dec movb loopne sub shrb int3 mov arpl dec sub les scas mov lock test dec jge pushf pop outsb repnz sub rorb dec or push pushf or mov pop into and lods es ret push hlt mov lock xchg sbb lret jb xlat inc cltd mov addl sub ret adc aaa push repz mov xor ret std (bad) leave fdivrl or fisubr push into or adc mov sbb fwait jo outsl ret or inc dec outsl ja mov or dec xor ss push sbb jle sbb or sub or sbb mov mov push adc pop hlt or stc xor fcomps ret mov dec inc sbb call cmp outsb adc scas cld sarl mov enter fwait rorb adc test ret mov dec fldl cmp sbb sbb adc call xor sub sbb dec iret and sbb inc sbb xchg cmpsl mov jae mov and mov add cmp loopne lret inc xlat lds mov (bad) xchg imull int3 add add in cmp or adc ret sub adc cltd xchg xor sbb sub cmpsl in add loopne mov cltd dec adc aad das ja imul sbbb jae adc add insl xchg out add add xchg and outsb loope dec mov cmp xchg xor insb pop pop addr16 and pop pop xchg fstpt add dec xchg or fstps lcall test push mov cmp push jo imul inc pop mov mov xchg ret das fdivs inc jl out js lahf sbb push mov sbb mov or push inc or pusha sbb sbb mov or add or insb insb fistl ds push inc add hlt inc aaa pop mov out vmwrite mov mov aad push sarb or adc add push adc les jno lock dec rcrb push sbb cmpsb andl ficom rcl ss aas fwait push lea dec xor sub mov fucomi inc sub add (bad) fldl inc popa mov lcall mov inc add jne fistpl mov xor push movsl ret hlt mov cltd ss je xlat dec jbe mov leave out sub xor inc shlb dec dec test call popa mov movsb test add pusha push ret test icebp inc outsl mov push ret xlat jge rol aas cmpb push add xchg cmp mov int sub fsubrl dec outsl (bad) testb mov int3 add adc aad pop popa dec push inc fadds sub and cmp add test mov xchg mov ficom mov sbb outsl fadds and cmpsb rclb pusha adc push xchg rorb sbb (bad) iret adc pushf movsb adc addr16 divb neg jmp arpl je gs (bad) push dec psubd push push test adc mov cmp xlat repnz and lods int pop stos insl jne ss pop xor fisubl in sbb adc cmp test add sbbb push sbb adc movsb ds or aad ret mov push movsb enter in mov adc mov daa (bad) jnp shrl pop pop cmpsb adc outsl inc mov orl xor or jmp fs lods sub xchg inc inc out loopne xchg stos (bad) and dec icebp jmp inc inc or hlt out insl out cmp adc dec or dec loop xchg lret popa das push and negb (bad) mov add push push ret rclb pop sub icebp sti and jge test out aad or jmp (bad) xor push jmp fnstenv and rcll pop mov dec (bad) decl dec mov xchg lret ss scas shrl vmovntps jo mov test pop add xchg loop mov int repz repz sub mov icebp daa xchg std and and inc out test cmp movsb das jbe mov add das mov jle push inc sarb xor out fs push push and push sbb jno mov and (bad) xor push movsl adc and pop inc inc fdivrs push and jecxz cld mov jne adc jmp sub sbb push (bad) adc jle add fisubl insl push sub and inc fisttpll movb dec inc adc add das sub add sahf sub test jo or shlb ds fs xor jmp jae mov and rclb lcall fisubr mov pop das fadds (bad) std shll leave (bad) mov insb pop mov jb loop adc cmp lods or (bad) push cmpl sbb (bad) jb loopne popa add xlat cmp stos and xor test jb inc push pop inc ret ds or es loopne lods mov das mov cmp (bad) stos cmp test xor xor xor push add cmp dec or fld and ret xor lahf test ds adc inc sahf pop xchg (bad) and pop fstpl pusha push cmpl sub xchg popa adc or nop inc cmp nop add xor sbb rcrb or xlat pop and and lret ljmp adc loopne sarb push rcll and push jp sub push mov clc sbb sub push enter loop shl sahf nop inc push xchg notb aam xor ljmp fwait pop out sbb and aas or notb insl mov test adc add mov or jo test adc or add stos add cmp xor or xchg dec adc je xchg outsl xchg adc or repnz push adcl xorl xor in push movaps aad gs or push or popl push movsb inc add pop and xchg pop inc mov xchg sbb jge cmpl and lods jno jno call mov push adc inc fs mov xchg (bad) lock sbb sbb pop nop inc mov lea push test ret dec or sub pop in push xchg andl cmpsb adc add ss pop lods sbb xor and inc xor push icebp je roll mov imul data16 fidivr mov jns xor mov cmp sub (bad) or stos outsl adc sbb sbb pop or mov outsb add gs out sbb cltd fucomi lret push sbb xchg sub fisttpll xor rcrb sbb or arpl sbb (bad) mov mov pop jb inc fisttpl or xor pop and dec (bad) or (bad) icebp lcall aaa out (bad) mov adc sbb sub pop cmp cld jbe mov rcll insb ljmp sbb nop or sbb mov sbb push ret sbb adc in into mov adc push push lea push mov push xchg clc inc push and (bad) out xchg addb fstl jge sbb out sbb pop mov jno push jle mov into dec ja mov inc (bad) or sbb pop mov mov add dec mov mov pop shll push outsl adc outsl test ss adc push sub push mov inc fiaddl sbb fcompl shrb and lds and in or add pop xchg dec mulps or hlt inc adc es sub out mov stos aam add push sbb sbbl dec stos mov cld add xchg mov rorb pop dec ja stos mov dec mov xchg xlat pop sub add out fisttpl cmpsb cmp popa fstpl jg mov mov push mov ds mov pop insb ret inc or dec push mov mov pop xchg mov dec push adc sub mov ss int cmp rcll fisubrl or push mov pop or mov inc cmp js push mov pop int adcl xchg or or cmp fs aam sub and xorl adc add or pusha popf adc xchg push (bad) push mov icebp adc je mov and jbe xor add insl popf sbb jecxz push push jno add scas sarl test arpl or adc daa xor jbe loopne imul mov das addb mov xor psllw nop xchg sbb mov xchg mov add outsb outsl in inc movsl xchg (bad) sub cmc bound dec adc xor mov cmpl popf dec inc andb ljmp js das cmp fsub add int3 pusha adc add lock mov cmpl xor cmp mov int xor orl sub sbb adc inc and adc js cmp sub push or adc out sbb add add push push mov mov es into or out in ret out cmp test mov les or mov or roll xchg dec mov (bad) stos iret fmulp and sbb cs jl out and xor lods dec imul cmp fsubrl fadds and fcoms inc scas outsb xchg sbbb or cmp xchg xchg fwait insb pop fist dec inc arpl nop xor lods (bad) scas fdivrs mov inc or sbb addr16 inc pop jne sub push es test mov movsl gs pop (bad) ja inc lret xchg mov lods xchg movsl inc mov xchg outsl add add fs mov fiaddl cmc lret sbbb pop inc bound and stos jmp xchg pop andb sbb sbb push or lds movsl daa test addr16 and add sub fsubrs out fwait pop jl mov cmpl pop sub out jnp inc mov insb dec jp jle jne pop (bad) mov frstor cld add mov ljmp inc pop push cs sub and mov pop rcrb jbe and fsubs movsl add mov iret push cmovb xlat xchg inc mov cmpsl inc mov stc cmpsl mov rcl push mov and (bad) cmp and fcom das xchg test xchg stc jbe sarb adc adc and dec adc sbb mov das daa push pop sub ss mov xchg mov ret sbb movsb adc xchg daa mov or ljmp (bad) ds test ja fnstsw jo shrb je jnp push adc sbb aad pop or cltd nop sub dec test and lcall adc mov repz lea sub js ficoml cwtl fdivl xlat or mov sbb and (bad) jmp or xlat leave das xor mov push pop xor mov test in sbb stc pushf les fwait mov add mov and inc aas jae sub jno daa xchg and inc nop adc dec adc mov xlat scas aam inc jg add or xor jge xor cmp push xchg aam cli je push sub pop mov lahf inc ljmp xor inc xlat pop stc add sbb pop dec in fdivrl cmpsb cmpsb and or imul dec xchg add push test xor inc js fnstsw cmpb test push cmp adc pop push mov arpl add loopne jmp cwtl xchg cmpb sbb xor jle orl loope inc (bad) ja popf mov mov add adcl cmpsb xchg add or cmpsl scas mov lods pop mov add jb fdivrs int3 enter mov frstor cmp sarb aam push cmpl sahf add cmp dec jge addb sbb dec xor and (bad) mov scas (bad) mov mov arpl insl sub fisubr int lods mov clc cmp and sub xchg icebp jl or aad dec add (bad) xchg jl ss adc ret ret xor call or pusha jae popf test push fs add subl ret js cmovl imul ljmp addr16 (bad) dec mov mov shlb movsb idiv push rcl sub adc adc push sbb pop movb mov mov or mov (bad) ljmp ret cmp rcrb or adc aas mov adc call andb out lock imul inc dec punpcklwd (bad) pushf xchg lods popf xor mov or sbb xor mov mov movsb push movsl out adc sarb and xor mov push leave mov mov add mov imul nop rorb pop add and jg mov rol xchg jb or and mov push or dec test lret xrelease lcall dec je daa cmpb xchg add cmp jne aaa dec mov sbb aad js test jne inc clc mov sub imul adc or and fs xchg leave adc stos push movsb xrelease xor fs gs out inc push movsb or and push (bad) (bad) xchg add or and rcll mov pop jecxz add adc fmul (bad) push dec sbb inc sub or lods aam inc push lea sub test dec or push bound mov dec jnp loopne pand or shll dec push stc mov in (bad) (bad) inc mov hlt aaa pop dec sub dec hlt sarl and in mov dec (bad) xchg dec adc andw sbb sbb ds test nop add test lock and push mov (bad) xor in lock (bad) xor lock push dec or pop sbb adc pop bound daa jmp or ljmp mov inc repnz and and xor or adcb fwait mov lea fcompl adc adc jnp pop jbe sbb mov and out popf or inc inc mov mov or dec mov add mov or jbe call cmovs in dec push loope xor inc loope push inc shlb repz pop mov mov ljmp push xchg nop xor stc sqrtps sub ja inc push sbbb lcall xchg sbb add movsb xchg sbb xchg mov add dec mov jo dec (bad) inc cmp pop shl shrb call (bad) ret push jo or sub xor lods addl testb mov push sbb movsb leave out mov xor inc or fldcw fsts mov xor sbb xor push lock sti in mov daa (bad) jo xor xchg aas add lret sti sub jle sub push adc cmp jp dec push push push daa sub or shll popa or insb cmc daa push insb xor mov or lea cmp mov mov inc jbe add sbb imul and stc jge mov jmp or std cld (bad) (bad) mov xchg add in jne push pop (bad) xchg rolb js mov mov pop dec clc out jo xchg (bad) mov sbb sbb cwtl mov jmp shr movsb cmpsl xor sub or dec and pop sahf test lods dec (bad) cli pop mov pop mov mov out (bad) loop dec testb pop (bad) lock xchg xor jnp pop rcrb fisttp cmpsl test inc fdiv and xor sub xor cmp inc add and bound mov add push add xchg pop push clc cmpsl cmpsb jp push movsl and nop dec add sub jo push mov jo xlat aas aaa cmp imul inc adc mov and or mov cmp movl xorb and or iret fs or adc jmp popf sbb cmp cmp mov out inc xchg add js xchg pop imul nop into daa xor push adc test fldt and dec sbb shrb or fucomi sub adc or pusha or ja in sbbl and out add movsl (bad) scas femms add jno add xchg pop inc cmovle xchg lahf fcmovne insb push mov movl je lock hlt ljmp (bad) sbb push jnp mov add sbb cltd jbe push arpl loope mov out iret icebp inc jecxz fild mov pop adc xchg fnsave and adc mov mov lds push push xchg pushw test push lcall fimull adc test cmp adc jnp pop inc cmp test mov ret cmp lock dec daa movsl jmp cld cmp lods pop imul cmp fistl jno cmp dec or xor lock push push and mov xchg enter sbb or adc lret xchg enter push cmp shll adc push iret lods test mov sub push dec je add mov jno ret scas or push clc je cmp mov push in sbb jmp int push pop lahf iret popa add and push jmp aaa (bad) cs loopne pop lahf popf data16 sub mov sub inc fiaddl sar inc add cmpsl push push lock adc andl jg cmp mov shll (bad) and adc roll cmpsl pop cmp sbb xlat (bad) cmp sbb xchg test enter add and das and adc lods lods inc subl ja add jg mov mov jo daa fmull and jnp pop adc pop mov fisubr pop push pusha or jmp sbb add sub mov cltd xchg jmp pop and sbb inc lods stos xchg xor or movsb push push (bad) divl or and pop inc dec adc mov dec mov cs mov movsb inc ja add outsb mov jo cs push mov push cmp add xor gs mov xor movsl mov adc jae push leave cmp pop cmp pop and or sbb and mov fneni(8087 in adc test and mov add jp push add mov xchg daa push and sub lret cmpsb (bad) sarb pop add push cmp mov mov adc cmc add into pop push in in or jmp push sti rol and imul pop int3 jae sub push push shl cmp and ss xor sub in out je mov xchg cs push or inc mov stos or adc or sub divb movd inc popa jno adc push xor jne push cmpsl mov adc add add pop push fdivrs pop add add sbb and push ja mov sbb cld mov mov (bad) push mov add cmp lds rorl insb lea adc pusha xchg xor push add xor fsubrs leave add clc adc add xchg stc jnp inc add fild adc psadbw mov rcrb sbb jne jo mulb add or and jne adc jmp mov aas mov js sbb or lods lea xchg and dec adc push jbe loope inc adc mov fadds add aaa sub mov out push add xchg in ret push imul add enter pop push negl push add movb add mov cmp insb ret and adc adc repnz xchg add xchg ja push or add sbb mov jmp or sub pusha rolb add mov dec pusha cmp arpl in or mov test (bad) mov repz jecxz lret outsb push adc adc mov popf daa ds jae rcrb dec nop xor or bound and push mov and lock adcl loope sub dec xchg in inc ss push xor mov add ret add lcall orl decb in dec inc dec push aas loope mov push push ret xchg pop out pop test push or or sbb test cmpl mov dec mov and (bad) in sbb rcr loopne,pn xor xor xor or adc xor sbb push or imul (bad) and sti jb mov pop mov add aaa orb cmp push cli mov pop (bad) clc rorl add decl xor icebp xor xor es cld aad dec xchg in jle addl (bad) adc xor add dec pop pop sub push pop inc cmpl jne adc inc add fmuls in fdiv cmp cmp add lods inc fsub push pushf mov stos cmp aad pop sbb cmp je lock or xor add out dec and je mov mov iret or rorb push lahf mov inc xlat adc les xchg and stos inc jns and xchg xor sahf test out sarl dec sahf cs cs inc xchg dec ror pop hlt mov incl nop insl jne int3 xorl xchg (bad) jno mov jb adc dec mov into (bad) je pop pop sbb pop inc push cmp jno dec test nop or and insl dec test decl cwtl leave notl add lods dec ret sbb mov ss js push ljmp js (bad) insb sahf mov leave pop lds insw out shrl add dec push setl lds adc mov inc jmp and movsb mov adc sbb loopne,pt mov mov mov ss ss lret cmp ficoml push inc add sbb jne pop punpckhwd imul fdivs and aad dec add pop sti lea dec xchg sahf pusha cmpsb xor pop mov cmpsl add adc xor shlb push push pop mov or push mov mov sbb enter and dec push mov pop outsb inc movsb lock aas push pop mov and mov xchg xor sub aaa cmpl fistpl cmc sbb gs mov add or xchg mov cmc addl dec push and dec sarl sbb sbb dec (bad) push adc popf or push adc or mov shlb pop pop aas sti decb dec iret je cmp je jg sbb mov loopne push cmp mov sbb aad push mov xchg inc pusha mov dec cmc cmpsb cwtl (bad) cmpsl rcrb adc mov inc sub lahf mov ds cmp or in adc adc mov xchg push mov insb movsb xor jbe lea gs mov dec cmp mov or xor es hlt dec cs xchg arpl cmp testb cmp jno sub cmp sub lods dec xor movsl xlat dec push adc lods rcl sub and add insb jl scas or xchg inc mull gs adc sarb dec rolb das xchg fdivp test or xchg inc stc je cmp in (bad) and sti inc mov push cmp mov push sub shlb mov xor inc icebp xor sub js sbb jmp push mov lock cmp insb inc push lods loopne hlt push insb or std pcmpeqw mov add xor test adc add nop adc or pop mov inc arpl push inc or pop sub (bad) xchg push mov dec pop cmc xchg scas xor push inc lcall test and push dec jl pop push hlt mov les inc xchg xor es and and fistl dec insb inc mov xor push sbb or xor arpl (bad) aaa add mov mov xchg daa popf ret mov cld mov loope adc adc mov jne fwait add xchg fistl pop popf adc mov arpl and (bad) sub dec stos cwtl ret dec fs and adc rorb dec push sub adc add sbb mov pop aaa or inc xor mov adc mov mov mov in sbb nop jmp inc cli add test int3 dec and pop roll jae imul mov int leave adcl ja ds and insb dec xor add jp (bad) call mov sub adc adc push (bad) and adc jns test mov inc add mov cmp inc popa cmp xor lods data16 aad and push add adc sub pop dec rclb scas inc pop clc (bad) push push mov lret mov add xchg (bad) nop or add xchg sub dec push inc sub mov rcl mov and or pop test push xchg call pop aam mov push insb dec or mov and movsl mov push push add outsb dec lea sub or lock dec adc lret inc fcoml mov add jno and imul pop adc in inc adc or fcoml aad es jmp pop into movb fldenv xor nop adc jmp cmp fidiv adc scas lea add push cmp xchg add mov stc cmp xor iret inc sbb push and push adc (bad) dec add (bad) adc pop and movsb ret es add les pop push leave neg lds dec xlat fildll inc out add add sub (bad) jo jbe test xor cmpsb (bad) outsb xor push pop push push lods push add cvtps2pd popa imul or push or lcall test outsl movb jne outsb adc jp sbb xor jne ret push sarl adc mov or adc pop cwtl mov dec dec sub fiaddl lahf pop xor mov add cmc out idivl dec sbb mov fcompl xchg sub sbb push add jmp clc sub outsb fwait cli pop mov jb mov or cltd mov test xchg adc cmpsb jne in mov and dec and mov jo clc and aad adc add lock movsb mov pop add and mov dec cmp push out dec xchg and mov leave movsb or les (bad) mov lods insb sbb adc mov sub or fiaddl push push and sbb add lcall push cmp pop pcmpeqw add sub ss mov add popa (bad) int3 jge sub mov sub arpl scas fcoml cmpb inc adc inc jns sbbb jne cmp ficoml push push and stos std fsts sbb aas or imul gs and loope and lods lock adc mov mov and mov adc cmc (bad) hlt test jl xchg mov push and movsb lret in jbe xor jcxz pop (bad) lret jl sub setge mov push cltd sarl int sbb movsb push cli daa mov lock adcl xchg imul bound sbb xchg jge mov mov push enter cmp or std add imul mov xor addb popa leave xorl add sub push movsb mov sbb xchg xor pop push push add inc adc sub pusha pop jne pop add add pop dec sar xchg lods xlat ss roll aaa pop xor enter ss loope mov xor sub xchg bound shrb dec enter outsb daa jmp icebp adcb lods jbe push inc das imul or loopne add jo jmp jne xchg sahf test push sub mov (bad) add add xor (bad) aaa pop pop jb or leave mov sub inc popf and cwtl pop sbb (bad) adc xchg lret ss sbb and icebp nop (bad) addl adc (bad) pop inc mov ja imul or cltd js inc mov or test pop out dec in add nop lods aaa jo scas mov insb in or stos xchg or mov dec loope pop push jmp sub jmp pop repz cmpsl icebp push in dec sub jo sub mov (bad) (bad) (bad) test adc (bad) jo dec rolb mov call inc fadds add inc jmp icebp inc jge jmp mov addl xchg lret ss pop or mov jle loop or push and sub into subl ja out repnz xlat jns add push sub jmp cmc insl pop and cmp sbb or or aad inc insl jb rolb ja mov xchg jp jmp or out aam mov mov int add adc sub daa mov inc jmp sbb jne cmp clc mov or (bad) into cmp cs add sbb mov and pushf push xor lcall and cwtl popf enter xchg stc and imul lock test iret and adc fisttpl test cmp jmp cwtl or je inc lret mov jb ror jg sbb ret and test addr16 add push data16 xor inc iret loope ljmp and and test outsl mov jbe andb insl add xchg (bad) aas je or or dec bound leave and loopne mov loopne jne add je mov sbb or mov call inc rol aad cli add rcrl xor push out xor popl cmp pusha mov pop rorb lea add std sub in xor lds dec push xor adc aad sbb mov mov adc sbb cmp add pop daa dec leave testl fcoms adc mov jge sub mov dec push cmc fs cmp notb sbb into mov popa pop jl push lret shrl push iret or inc pop or jecxz call (bad) jno in lock jecxz dec or jno loopne lcall cmpsb (bad) pop or and xchg inc jno pop xchg add sbb and mov adc fistpll pop clc fsubl pop insb rcrb adc fsubl fwait lcall es adc xor lret adc imul mov inc shl fistpl pop sbb cmp and push mov cmp jne xchg adc or cmp rorb repz (bad) cmp or add xchg adc lock mov xchg adc and mov loop xor negl and stos ds imul test or insl dec inc enter lock push xor sub orb sub add addb lock xor lret in outsl cmp inc imul add dec dec sub (bad) ss adc mov jb shl rorl jbe xchg shrb cwtl add xlat loop push stos addw andnps mov das addr16 push mov loopne or jp and lea xchg xor sbb movsb andb inc xchg xor mov je cmpsl sub (bad) int3 pop cli insb test (bad) jp ffree mov clc add add mov movsl ret mov add into mov xchg lods xchg je testl orps js add data16 sub (bad) call cmc push mov call and and and test push lea sub fdivp sarb movsb xor loope nop in in ficompl push dec call xor and inc lcall push lea adc and add mov in lret mov adc (bad) jmp les clc lea dec jg or add mov mov inc mov stc divl pop push insb aaa pop add test daa rorl dec push sub cmp or clc dec xor into (bad) fiadd and cld ds scas lock cld rorb xorl pusha and add xlat xor lds xchg jo out add es add das mov mov or or pop (bad) in mov daa (bad) aaa mov push test pusha push lea push mov jb or (bad) movsb outsb pop fnstcw mov pop mov cwtl add inc and aam add push push add or mov sub outsb adc and aad popa std add jnp cmp and fstl add inc inc negb mov mov rolb pop inc in test push imul cmp push sub mov sbb outsb sbb xchg cmp cld cld xor je push cld cld push cld or mov scas add xor lea mov pusha xor mov xchg adc (bad) jno add pop dec jmp mov add xchg rcll cmp pop push das or lahf push jnp dec xlat fcmovb and aad mov bound jmp jle pop adc mov sbb lcall sub and ds sbb pop xor (bad) cltd pop mov sub test jl push and push dec adc inc int inc or inc sub jbe imul lahf sti rol sti add movl xor mov mov dec add dec fisubl in in inc push (bad) dec xor in xor pop add mov sbb mov pop int3 sub popa and lds test push cs mov or repnz (bad) popa mov out push fcmovnb (bad) mov dec dec dec call popl pop pop mov jne push push xor xchg addr16 pop xor dec dec ss (bad) jb inc inc push sbb mov sbb inc fs dec repnz jo sub pop iret sub add mov dec imul jo mov sbb dec ss or sbb loope lret adc mov add mov xor das pop xchg iret call pop inc pusha mov cld mov out jl or jle xor test fiadd cmc xchg lock mov loop and jne out push pop cmp imul clc or add push jmp adc sub loop mov mov fs sub inc hlt adc pop jg shrl xchg jle jo or fstps mov ja adc inc mov js sub sbb (bad) (bad) fld1 jne and xchg pop sbb xchg test xor in inc cmp add aas das mov pusha sarl pop aam std mov cmp popa pop sbb sbb adc inc (bad) xchg mov jb push pop pop inc sbb lock cmp sbb in popf sbb loopne xchg mov loope jmp leave fwait (bad) adc or xor (bad) cmp push out pushf add ficompl aaa rorb pop push xorb hlt in push pop negb mov inc sbb popa inc mov xor sbb push into (bad) cmp push fsubrs dec xor pop out or je adc and cmc xchg dec xor inc or jle outsb insb sbb adc xor test inc imul (bad) sti add pusha pushf cmp cmp int3 (bad) std mov lea pop xchg dec jp lahf cmpsl push push xor cmpsl cmc leave cmp call clc mov jbe lods and sub test dec adc add xor jae cmpsb data16 pop rorb or adc orb mov call fwait call andl push loope or fldcw jp and lock incl aaa add mov iret insb xor jge sub rorb gs mov sbb cs test pop ret or push pop sub xchg xchg cmp pop inc sbb (bad) and sbb jmp mov lret dec mov movl es add popf sbbb mov and xchg movsl nop dec mov outsb arpl dec inc pop adc mov pop push mov icebp or cli repz xor ja jmp into and push mov or (bad) (bad) aas call inc add mov and addb xor dec testb and jmp and insl add das jecxz xorl fildl xchg adc mov jmp push movb jbe mov xor out popf es sub test test cltd inc clc (bad) out jl dec rolb push sub and es lods cmovb sub movsl xchg lret clc hlt push outsb inc adc rolb aas mov imul popa mov push lock or adc outsl je jmp sbb xor mov sub push into push int3 xchg in mov pusha or push or push (bad) sub sub and lock or ds cmp je scas pop imul je test iret stos loop push pushf lods mov into xlat mov inc lock push or xor lock sub pop add sbb lods sbb add add imul hlt roll test sub push cmp dec fdivs mov adc push rcll lock aad ds inc stc inc mov inc cmp out mov mov rcll not add iret and je clc sbb adc cmp shr xlat cmp lahf sub (bad) adc subl mov dec shll sub inc pop insl fild lahf mov rcll dec imul sysret test pop dec mov pop lea gs sub lods dec movsl imul adc in adc adc lcall (bad) mov bnd push dec inc add add enter add jmp jle scas inc sub mov xor cmc or jmp sbb rcrb shlb rclb or mull mov in push inc les inc or pop push inc inc and repz adc bound sbb xchg push xchg jg xchg sbbl add adc pop cmp inc push push ret (bad) sub add imul mov movsb out adc mov adc sub cli (bad) cmp push pop loop nop sbb cmp sub pusha add aam mov les cmp adc adc test jmp mov into adc dec jbe je adcb or cmpsl push aas push fcompp xchg adc push jae push das jbe rolb add push aam cmp inc les loop cmp xchg mov push xchg mov jp fs mov callw mov leave je insl dec add push stos mov xorl sub outsb in out int3 push fcomps sbb test jl ret fmuls ret push or leave or rcl push lods in jno adc es cmpsl hlt xor adc jp mov dec dec inc add ljmp inc les add jb cmc and and adc ret pop xor or jne pop int out mov xor xor imul xor and shll (bad) mov movzwl and inc pop sbb fistpl fwait (bad) js mov ja inc pushf fwait and les dec or inc add add mov (bad) xor sub push out push mov stos jnp mov add jo jnp xor or jmp pop daa and mov pop mov mov push add insb inc cmp cmp sub sbb or inc sti pushf (bad) jmp and stc das subb mov inc shll test inc pop enter into sahf adc push mov or arpl decl dec dec dec inc inc push inc inc outsb inc xor (bad) mov ss pop cltd enter jp mov or ret jb leave inc sbbl out sbb sbb cmp and and out or lret pop (bad) std push (bad) jo cltd push push andl add mov mov pop outsb popa sub xor adcl addl adc icebp jecxz pop adc sarl dec das (bad) or cld sub adc dec xchg nop bound sbb hlt sbb inc add xor pushf es sub dec loopne int inc fsubrl or or dec (bad) xor popf aam je xor ret inc test and sbb mov lret loopne pop sub nop enter into or add test sub mov sbb inc jl add push cmp and nop push enter rcrb repnz inc xor out add rorl (bad) aam mov rolb ja pop push fistpl sbb push je test sbb sbb int add sbb insb inc js inc cmpsl or rcrl daa add mov into inc adc mov fadds aaa lea js cs mov dec jmp mov dec cli outsb jge dec mov jg adc push cmpsl fcoms stos dec xor xchg mov fwait repz mov loopne cmp lock pop cs add test xchg mov and lret jno mov cmp sub outsl pop les add and jbe mov mov aad add out or or push loop movsb dec mov add pop jb xor sarl mov inc lock cld bsf xor pop and adc imul aas jne test and mov js lret sbbl jno or or sbb push or pusha fimull fdivl sub dec (bad) mov test adc daa aas lret stos or pop pop adc and and es push push (bad) jo pop xor arpl les addb push xlat loopne,pt and pop inc add dec pop jnp mov dec popa push mov in and shlb push push lods inc popa push or pop aad das mov scas popa clc cmp or mov ss sub daa mov xor pop add adc xor cmp nop add sbb ljmp push push jg adc test push cwtl pop mov popa push popf pop lahf popa dec cmpsb pop out daa push (bad) pop imul jo and call sbb rcrl cwtl jle cltd sbb stos adc sub test cmp loopne dec push imul sub out or lods (bad) or and insl inc pushf insb js add mov adc pop mov imull sbb add jbe inc xor lret test lods je sahf pop stos sub adc lods sbb push cvtps2pi rorb pop xor mov call in aaa dec lret or movsb pop jg movl adc sub mov dec xor mov adc pop and xchg add or inc stos outsl mov xchg and mov dec inc mov xor lods cltd adc pop inc ret daa inc sub add sub scas add bound or jbe insl mov add mov xchg popf inc xor add lsl pop fdivs subb inc push fidivr add push pusha ficomp lahf adc dec and and pop mov dec out push dec pop xchg inc mov mov push sti xor mov (bad) mov clc imul and pop push inc outsl push jg loope cmp xchg push mov cmc mov cmp movsl and int out dec xor adc sti and ljmp pushf sub movsb shrb adc jmp push add and int jnp insb add pop push cmp jb add cmpsl in and fwait rcrb add xchg xchg imul dec or cmpsb xor ret faddl pop pop sbb push add sti ja sub sbb cmpsl xchg and xchg push push add and test sbb push rcrb (bad) mov push sub push pushf push imul in mov jmp xor mov mov ss in cld imul out bound sbb and ret push sbb jp jmp test sbb pop push rcll mov or jbe insb je push xchg cmp push repnz lods mov sbbl pop aas rorl lods pop stc xlat inc pop cmp cwtl pop mov mov xor test and inc inc ret mov dec adc je push sbb test (bad) testl dec xchg (bad) sbb jmp std cltd or xchg fcompl mov xor sbb mov test push cmp fs andl pop icebp rcrb sub or push and loope dec iret adc xchg orps js out cmp adc pop jo or loopne pusha shrl mov out pop dec mov punpckhbw or movsl inc add dec sbb xchg lods popf pop and xor xor mov enter inc loope pop xlat shr jne mov test dec in mov inc das sbb cltd cmp loopne jae jne subl sub das arpl xchg push imul add mov jb xchg popf fucom push imul mov sbb test fildl ss push adc mov push (bad) out popf add pusha jmp and cmpsl add mov pop imul push pop push adc adc push mov ret add inc pop cli fisubr test adc faddl add arpl ljmp mov in pop int3 mov cwtl fistl or inc pop (bad) iret adc nop outsb ret loop or (bad) pop push fistp add shll push daa mov or mov jle ja xchg fcomps aad inc xchg and mov and rcll or inc imul mov outsb pop (bad) mov mov push adc sbb xor cli rolb shld inc lea movsl adc sbb jle scas loope sub rorl jmp rolb jb sub or add push add popf out sbb xor (bad) jne cmp sbb test hlt xor mov mov mov mov stos inc call nop je cli jmp enter dec add mov jecxz xor add push adc call jle xchg ret inc add mov xchg sti mov les mov aas jo inc cld ds test imul out cmpl or fadds in cmp add jecxz fs or push add aam inc adc lret lods jne mov mov or rorb xor sahf mov add cmp adc sub dec or fsubs aad xchg sbb gs lcall sub fstpl sbb push dec mov sbb popa dec (bad) mov hlt push hlt in adc std sub iret add mov inc mov fisubrl and addb pop ljmp sbb pusha (bad) les lret add and (bad) mov or mov add add sbb inc rclb in mov lret and sbb imul test dec rorb add mov test mov dec or push pop push hlt xchg xchg pushf in (bad) and add push sub movsb clc adc mov imul loope test mov test adc xchg ds jle sbb jbe xor push mov stc push mov push dec xchg xor pop mov shlb incb dec or clc add inc push push add insb sub adc js adc or stos ds arpl and push cmp xchg movb dec in cmp dec mov ja adc xchg dec mov sub add aas out movl fdivrl inc not inc sti push cmp loop cmpsb xorl scas add jae or lods mov mov cmp pop (bad) dec loopne xchg ss dec dec das inc adc push mov xchg sbb jg pop jnp cmp bound cmpsl les dec movsl sub or push inc adc xor pop xor aam arpl fcmovne xchg dec cmpb sbb push xchg push cwtl add push (bad) enter cmp mov push enter (bad) cmpsb xchg sbb out cmp inc add and aas loope leave sbb mov loopne push push ficompl mov int3 add jmp push adc inc shlb sbb test jo cmp (bad) pop xchg jno and test or and mov mov adc fwait inc stc push dec xchg lock scas clc adc inc fldcw cmp je orl xor sub push push cmp jne sbb dec pop inc dec xchg add mov (bad) dec lret imul rcll jno popa movsl mov jns test ljmp (bad) aam mov nop hlt adc sub push or push aas jnp mov add lcall shr add jbe pop hlt xchg add nop push xchg adc cmp push (bad) insl sub pusha xor dec and arpl sbb (bad) adc push dec adc xchg dec jp mov (bad) and sbb and pop das push jp fist pop cmp add cmpsb lods rorl leave adc add movsb or sti xchg mov adc (bad) and sti int3 jno and movsl pop cmpsl adc push ja incb cmp cmp es inc movsl aaa jo hlt clc jl xlat fisubrl aad aam pop pusha xchg mov or insb loope add xchg push jno xor and mov daa push inc je imul push xchg pop push adc or xor jmp roll ret in sub nop pop xor les iret dec or arpl push les mov loopne mov xor dec (bad) rol cmpsl (bad) push xor lock fstpl aad push push mov (bad) sub dec popa stc popa or loopne add cltd sbb or inc stos pop testb mov mov mov stc or sti outsl and pop pusha jne xchg shl mov movsb ds push fnstcw inc pop mov mov idivl pop rolb aam push cltd cmpb add mov sub pop daa orl sub mov sub lock sbb movsl dec mov loope fsubl pop lock push out or and xchg mov mov pop sbbl jecxz fldt inc dec and adc int pop push cmp xchg movsl mov scas xlat cmc add jp daa dec dec pop addl lods (bad) or adcb xlat lahf (bad) imul or jg add jo push jbe sub daa ds push mov enter imul or rolb pop clc inc jne dec iret dec xor dec and add inc pop test (bad) mov push add and cltd add pop addl mov in sub jge,pn mov sub cmp sar push pop jbe inc sbb aam rolb mov stos insl sub add std insb cltd idivl sub sub push push aam jge lahf sbb inc call jmp sbb ret push or pop sub (bad) mov inc ja push stos fdivs pop jbe negl sub sub mov das jo mov push pop jne jbe jg rcrl and aas mov ret jne xor mov mov lock or cwtl nop scas (bad) lret sub stc cld js adc add mov xchg add lods jle,pt mov mov or (bad) mov adc inc add nop xor and popf hlt aas fldenv arpl js pop (bad) aam jnp idivb add fcoms or add jecxz adc push fstpt leave pushf into add xchg jo cmp int3 xor adc (bad) inc or gs je aam push ja mov pop and andb or xchg push adc in sub enter daa xor aas je ret das jo,pn fstpl fwait adc xchg xchg sbb scas leave fisubl loop movsb push lea into int neg rorb repnz movsl adc push fsubl mov xor shrl lret inc inc stos mov (bad) mov icebp cs and mov add nop js pop jecxz jge mov mov das sbb jecxz (bad) arpl xor stc xchg xchg xor push add sbb inc pop xchg rep scas and adc push clc push pusha pop repz pop hlt imul sbb or stc ret sub inc pop dec repnz add imul ss pop cld sub or xchg or mov mov adc rolb jmp rcrb in (bad) imul jle popa les push jnp xor or sub push pop dec push aam sbb stos popf les std imul andl inc xor mov btc (bad) push popa ljmp pop rep xchg mov jl jp insb sub dec add xchg inc rolb imul je test aaa lds add sub pop inc pop pop sbb adc imul scas sub dec adc jmp or sbb pop nop lret int3 enter inc add rolb adc sub mov cmp (bad) nop and or jg inc je bound int sbb dec (bad) jmp call movl sti test mov jecxz dec popf or sub push adc mov mov lcall popa es cmpb sahf add push jge dec pushf loopne xchg add mov sbb sarb push jo sub (bad) pop fsts ljmp prefetch push add cwtl sub ds mov mov fs hlt mov xchg popf pop hlt dec push mov sysexit jg inc dec and movsb push scas dec mov insb pop pop jle pop icebp fiadd insb push push into push cwtl mov loopne xchg scas inc mov adc cld imul xchg or (bad) out xchg mov xor dec addr16 sbb leave leave leave or in in icebp repnz in in cmc div clc in in stc cli sti cld in in std (bad) jmp in in loope jecxz in in in out in in jmp in in out out shl in in rcl aam in in (bad) xlat fsub in in fcmovu fsub in in (bad) shl out rol roll aam adc mov mov daa movsl add scas aas cmp adc ficoml xor or je (bad) movl adc and and dec cld addl jmp mov cs dec cs setns mov adc push jae dec test ljmp add movsb in jge test xorl or es into or add nop iret testb (bad) cwtl jg jmp xchg inc add add cs add in or cs or or cs or in adc cs adc adc cs adc in sbb cs sbb sbb cs sbb in and cs and and cs and in sub cs sub sub cs sub in xor cs xor xor cs xor in cmp cs cmp cmp cs cmp in inc inc cs cs inc inc inc cs inc inc in cs dec dec cs cs dec dec inc cs dec dec in cs push push cs cs push push inc cs push push in cs pop pop cs cs pop pop inc cs pop pop in cs pusha popa cs bound inc cs gs cs push cs insb inc cs insl outsb mov daa in push push inc inc mov jne sub arpl bound out pop aaa addr16 gs push outsl outsb outsb mov mov or sbb insb daa addr16 jo int3 mov gs sub jl fisttpl jo (bad) mov fucomip mov pop popa fs outsb xor pusha inc je insb loop sbb call maxps jbe pcmpgtd pop jae fiadd subps or xlat out jae jne pushf mov mov (bad) pop das push incl imul xchg xchg pop jnp xor pop push jo ljmp gs daa mov mov jae pop sarb pop inc dec jae enter or add outsl fsubrs daa dec push add pop es sub rclb jae arpl push inc jns das push xlat adc scas das push ja shrl das iret aaa fcoml pop dec pop (bad) das inc (bad) mov cmp jno stos clc pop xor notl pop pop and mov insb pusha es and lea frstor mov pop cmpsl cmp pop inc testb jne gs inc daa mov inc jp push ja popa push scas sbb in out xchg stos xor daa push xor jo jg add pop push insb popa jo fs adc push pop das push jp sbb mov push dec sub test jae pop dec outsl lods dec lods popw sbb mov dec sub lret cmp aaa xchg jae inc gs cmp insl jae push jne outsl daa insl js mov outsl pop imul daa pop pop cmpsb pop push xor fld inc outsl outsl ret int xor and lods jbe in unpckhps inc daa out (bad) hlt dec dec clc mov inc dec xor es outsb push das push pusha orl bound inc dec and fldt xor add push xlat insl xchg add mov add div sub das aaa pop mov xchg inc cmp inc add dec hlt aaa push iret test int3 loope lock jp push cmp in push inc pop cmpsb mov push imul inc lods add (bad) and popl inc js xor or (bad) mov jne pop cld cmp adcl dec pop call add push jle insl mov insl pop mov adc or jle sub mov leave mov dec call addb jno mov mov dec arpl xor outsb or clc jmp (bad) out rcr nop cmpl fisubrl mov dec push push loop inc inc roll mov nop mov loopne or adc push rorl xor stos (bad) jo or pop fldt push je fsts mov adc add adc js scas mov test xchg pop add leave clc pop fistpl daa jg sbb sarb dec jecxz cwtl in jne jb out and movntps (bad) dec pcmpeqb inc into test mov popf jne cmp xchg cmp ss mov add (bad) jg or pop or imul out xchg es and add jnp inc iret jl push insb mov mov adc push cmpsl pop lcall pushf mov xor call orl xchg addr16 xchg add sub mov (bad) or mov mov jp gs adc inc enter jl adc sarb inc inc jne inc adc mov inc jmp push lret mov sbb and cmp mov lods xchg jge mov and jge mov jno mov cwtl aaa outsb mov push in and inc add outsb push add and das call cld add nop adc xchg lods push xchg jbe cld orl add ja in stos fsubr fcoms daa and or mov aas sub jns out push pusha jno xchg movsb out sahf out (bad) xlat call int cwtl sbb repz adcl fsubrp cli les out cltd push and ret pop mov mov and jbe cs cmp jb hlt sub insl dec xchg cmp leave lds inc xor in push dec cs sub fdivs cwtl and cmp cmp inc (bad) xor aam cmpsl and cmp ja xchg shlb jmp les ja mov outsb pop sbb pusha std out nop addr16 aaa push push adc iret and and test sub and and int3 or je mov xor loope and or or xchg push popf mov imul cltd xchg pop dec and inc or daa push adc adc sbb subl and lcall aas push lcall lcall cs imul xlat mov add stos push mov subl fwait movsl movsl cmp ds mov das lcall out cmpsb int jge clc mov in sahf pop insb fdivrp cmp pop lahf mov fidivr roll push dec push cmp mov xchg insb push fsubrs loopne mov inc call sbb xchg test loope cmpsl mov push movntps sbb (bad) and adc mov adc push push jl popa popf icebp (bad) mov xor sbb inc xor test inc and inc add mov mov orb mov add lds pop int3 ljmp dec adc lods xchg push mov insl xchg pop mov popf sub xchg (bad) xor inc dec fidivl es add clc clc jns dec lcall push xor mov or aas push push mov push shlb and add iret in rcrl cmc in push pop out gs mov jo or pushf mov mov xchg cmp or fcmovnu mov ljmp push or aas ficoml sub add add nop mov lret loopne cmp cmp xor sub mov mov out mov or or pop mov push test mov insl daa pop cwtl and cmp sbb sbb rcrl in hlt repnz mov and mov push push add mov lahf xor sub adc test lods mov inc add add xor add leave pop addr16 mov fistl jg and mov mov or jle adc iret nop cwtl popf in nop add mov test dec pusha popa jl dec xchg ret mov add in add sbb add mov xchg mov mov sub xlat iret xor enter inc jbe add out test cltd or mov adc mov mov orb sub sbb fcmovnu sub sbb icebp sub fisub mov xor jle enter hlt mov xchg lods aam push mov cltd inc fisttpll pop mov xchg shlb stos cld add pop xor imul add pop or pop fiaddl test add std and pop outsb bound xchg imul dec fisubl (bad) push sbb xorl jbe push mov (bad) and cld push lahf js adc mov shlb sbb adc (bad) and xor xor add mov leave sub xor xchg into outsl outsl sbb or pop mov (bad) sub test inc std and xor adc push mov mov clc andb inc sub inc jns push inc mov mov cmpsl xchg xchg sub movsb or imul loopne shll shr in sub insl inc fisubr inc cmpl cmp pusha aaa test inc hlt mov movsb rcrl add cli fwait daa cmp adc cs loopne inc mov push dec nop mov test pop fstl xor pop sub xor ss repnz push pop and inc rcl mov jg roll mov scas or movsb fldt push lock push mov add leave push pop mov les pop movsl nop cltd mov frstor push add pop mov inc jg sbbb sbb popa call dec sbb mov movq jmp lea adc js xchg jecxz xor hlt fidivl mov sub add lea mov or (bad) xchg or loopne sbb xchg dec hlt cli xchg push push push sbb cwtl or pop mov push (bad) jle nop dec inc pop inc sub pop (bad) or inc test fsub je daa frstor xor js mov pxor nop cmpsl rclb mov dec loope pop rcrl mov sub lods pop icebp negb cmp push hlt inc add lock dec in lock in cli into adc add pop or push call xor iret sbb imul cmp (bad) lahf aas push mov push inc and (bad) call test out push repnz test call dec aas and test test mov aaa in hlt mov insb scas test lcall xchg pop cld scas lret ficoml cmp inc addr16 inc nop pop outsb jg push stos dec jb add dec mov insb pop nop or jecxz popa and jae sarb jo dec leave add adc or roll push (bad) pop add adc loopne inc sub jl adc stos or sbb sub lea ret push pop jmp jmp jns cmp lds inc add xchg lods adc push mov lods std fisttp mov outsb and jae mov (bad) dec xchg or jbe add (bad) xchg cmpsb insb fbstp mov movsb mov mov lea sbb push jne add dec outsl push jne das sti and stc push gs add popa je popa inc bound popa jb inc jo jns dec imul pop push insb pop jne sahf in rcl gs dec arpl jbe xchg dec dec jg cwtl lods test lods pop mov std fst (bad) jg fs insb outsl bound mov xor bound inc pop aam add add add jmp sbb mov mov ret add inc push cmp push xchg or pop (bad) mov and fmul movsl dec sbb add cmp jno pushf negl popf test lock pop mov insb sbb push lahf add xchg and fistp inc sbb addr16 cmp sub or loopne adc push cmpsl sub add push jl push aam cmp clc jmp sbb cwtl mov push test mov movb inc xlat jmp xchg add test (bad) scas sahf cmp jmp pusha adc aas push jo stc iret xchg mov stos sub (bad) mov rorb jne (bad) mov fchs pop dec pop les repnz sbb adc mov pop xchg dec cs push and jmp mov inc ss mov outsl mov sub add daa and sar sub cld aaa notl (bad) repnz xor fs mov movl or je (bad) push and imul test add xchg inc test dec xchg add push xchg xchg cli das push push sbb inc inc xor sahf mov cmp xor stos das out nop adc push adc ret daa mov sarl add dec pop in xor cmp dec js rorb mov scas jb das lods mov mov add movsb into or adc sbb pop in xor inc jl and mov pop add sub cmp mov add pop (bad) jbe aam test sbb add mov cmp ds mov inc daa mov inc repz fadds in cld ret mov mov push addb push lods roll leave prefetch or mov mov add inc add add inc mov cld dec adc stos mov add aam or mov bound add lret jecxz xor and dec mov lods insb cmp jne mov pop daa push pop int3 adc icebp add in inc add cmp pop sarb pop cwtl nop into inc xor cmp xchg inc or push imul inc mov pop xchg shrb fisttp cmp cwtl adc fnstenv jo and sbb in pop inc push aas dec das xor mov dec daa xor stos xchg dec inc dec mov insl sbb outsl and jb adc jb or mov mov add xor iret xor jl pop push lea shl push cmpsl xchg xchg push dec (bad) scas sbb cmp iret and adc inc add and loope push xchg push inc inc xchg fidivl fadd rcr cmp fisttp and fcoml cmp dec mov ret pop push pop repnz js add sbb mov push pop cmp (bad) test adc aam ds jg cs mov jg dec outsl cmpsb nop pop pop and push pusha mov sbb add mov nop push mov aam jno (bad) cmp add and pop add add push cmpsl add aas or das push or inc push dec inc nop fildll mov test in pop frstor lea ficompl xor dec add bound (bad) and add add clc rorl mov inc xor xchg decl or aas flds bnd or sahf mov push popa movsl mov ficom dec jl rcr aam outsl arpl push dec mov push fsubrs pop adc test sbb cmp dec in leave jns bound cmc into jmp jge adc push cld xlat in mov (bad) xor push repnz arpl in insb cmp and in (bad) call aas fsubl loopne mov and mov movsl cmp push dec fisub lcall push fisttp mov and add jl mov insb mov adc arpl push adc adc ss gs mov mov or es sub mov test xchg orl mov loope loopne mov loopne mov mov test (bad) mov dec mov jp jb xlat or sbb xchg (bad) ds sub in add or add stos or das adc mov jle xchg test adc ljmp enter insb add push (bad) mov jb in pop adc mov mov enter push and inc rorb pusha lds pop cmp or test xor dec mov cld ret insb test push or xor push or xor add or subl jnp sbb or add movsb fbstp adc push repnz icebp mov pop jp jnp cmpsb bound sbb sbb cmp push and mov and hlt xchg mov mov xor add arpl mov fnstenv push test push hlt jnp cmp pop insl addr16 or addr16 adc push ret mov fiaddl lock rolb nop cmp fwait xchg pop imul mull nop mov mov sub pop add add adc pop mov nop pop andl pop xchg ss push sbbl push loope dec inc sub add ja sbb gs push sti jg mov mov xchg pop fcmovu pop cli push dec push push or or aas jg lcall push push jbe icebp inc repz xchg pop dec imul and push or dec dec idiv ja iret sub int3 mov dec xchg std (bad) dec not sub xchg push loop daa adc cmovl pop ljmp pop pop add jns fisttpl notb dec inc negb mov idiv push gs and jg lcall xchg bound xor push add jle mov mov xchg arpl xchg out out xor sub mov push je xchg fwait jp add cmp fbstp dec and scas push aas divl push jg in inc xchg xchg xchg jecxz (bad) or xor inc cmp ficoml fwait ret pop nop neg imull rorl or movsb out cmpl xchg pop push notb and mov inc xchg pop push pop out lret outsb sub xlat fstpl divl paddsb and jecxz loope ret mov (bad) push pushf gs xlat lock push in std pop cwtl jno je imull sbb adc mov and mov in dec xchg repnz divb lret inc nop adc or fcompl adc or xlat add and aas mov push idivl ror popf fcoms pop xchg inc or das push adc popf arpl sbb insb jmp daa inc enter pop cmp and sub mov sbb daa pop pop negl call xor (bad) push imulb enter clc adc push adc dec add mov push and in adc xor and and sub mov iret std add imull sahf xor cwtl mov push pushf lahf lcall adc idiv (bad) cmp mov mov aam and sbb scas loop dec cmpsl jp,pn pop cmpsb adc xchg xchg xchg add mov mov jecxz sub mov pop sti jl sbb adc pop jns lcall dec adc aam rcrb xchg mov loop int3 psadbw sbb pop je pop or sahf fisub or jbe sahf negl jg mov push dec testl sbb pop cld xor ds je inc imull adc sub xor fisttpl xchg shl mov xchg (bad) or test imul pushf mov push adc addr16 mov insl push fldt cmpsb popa push and mov cmc out sbb sub imul push outsl pop pushf mulb mov sbb loopne mov mov stos clc std dec sub jp or je out es jns push mov add xchg or sbb es mov mov mov dec add push cld cld xor fwait dec popf gs test pavgb out add loope fidivl ja negb out dec test jge push push dec cmpsl pop hlt cmc adc or sahf add pushf pop (bad) clc xchg sub imulb mov hlt lret fldcw sub ljmp negb fcoms push out xor cltd notl cmpsb jo sbb add inc lahf je xor cli enter push adc arpl decb pop push nop das sbb fsts movhps notl inc mov pusha bound clc test mov cmp ss out les push sbb dec mul adc fldcw xchg xchg dec mov stos add decl das xchg push adc pop cs fnsave pop std jle xor add or mov pop fwait int3 divl add mov cltd sub sbbl in pop sub pop xor jo push sub inc inc lock xor testl cmpsb sub and pop js test pop pop xor push push jg outsl dec (bad) or dec je mov js push loope push es (bad) or push mov jb adc lds out leave stos hlt ljmp push loope cmp dec xor sub sbb nop adc xchg fwait mov lds or jge outsb divl sub std or je push lock adc jg hlt or repnz push jl pop lock (bad) les div fildl mov das ret push clc cmp repnz jmp roll pop push push test (bad) mov inc push scas and jmp in jle popf mov int3 push cmp fistp inc test sub imull dec mov sub pop mov mov aad or (bad) out dec dec xchg imull pop pusha pop pop negl (bad) loopne les cmp add das mov ljmp bound test repnz js jmp in mov fsqrt out popf jp xor add cmpb add mull clc mov jge inc repnz popf xor fwait decl pop scas xor sti icebp push rol jp pop mov jbe cs shlb (bad) and shlb fidivl inc dec flds imul js out sub je adc or clc push ret sbb sub and in js add adc mul xor ret cmpsl push lret ret mov lock xor mov adc repnz es lock enter mov or jle test pusha jno sbb sbb pop aas sbb adc inc imul iret out cmpsl jbe cmpsb addb and jno fisubrl xchg fdiv int3 pop jl jbe xchg push cwtl fs cmp mov sub add fsubr jg dec divl and jbe cmp cmp ljmp or push repnz dec or in rorl add dec fdiv shlb frstor das sbb inc pop dec (bad) repz sub ss test idiv out cmp test (bad) xor loope push ret rorl repnz mov imull adc popf add mov fimul mov xor pop lods xor les add pop add cmp out notl (bad) pop lods daa xor xchg cmpsb stos push out scas adc (bad) out inc jb xchg rorl je inc or notl scas lock sti outsl loop pop cmp ret cwtl ja mov cmpsl xlat mul add mov cmp das and xor (bad) xchg mov sub mov dec xchg negl js mov and xchg mov leave ss icebp add and sbb out add ss addr16 pop orl mov outsl dec testl imul ljmp xchg push fsts (bad) or push push adc push adc das cmp cmp divb aas lea sbb scas adc inc daa testl popf je sub mov les or fldt in mov inc ret add lock neg jecxz outsb lods xlat mov test add pop or sbb sbb and clc lds xchg xchg push cmp xor fisttp add xor or bound fiaddl push mov dec jl ret popf fbstp dec adc bound loope dec and jg mov jecxz push xchg (bad) notl test add insb icebp in outsl mov add mov loop sub jae push les outsb cmp lock negl lcall (bad) xchg cmp xor js sub inc adc hlt in xor fsubs ret or and pop pop negb pop xor pop mov inc push add mov inc adc xchg pop mov cmp jmp loopne loopne divb xchg push (bad) negl add cmp into and cmpsb int3 cmp cmp shrl inc adc jmp subl les inc pop mov int3 or (bad) dec ja ret add adc maskmovq negl push adc xor add movsb adc int pop aam pop and sbb cs mov sbb or mov divl jge pop jo loop call stos mov hlt jnp insb idivl pop dec sub mov cmp lea cmpb es out add fs imulb xchg (bad) dec jmp push (bad) xor lahf (bad) xchg jb xchg lahf xacquire dec je js mov pop repz jl mov divl mov inc or divl (bad) jno inc sub sub push add ret divl shrl xlat daa dec scas cmpsb or xchg arpl mov push mov mov xchg pop sub mov js out xchg xor push jp mulb sbb push addb sbb push push outsl or (bad) lret loopne and sub mov test sti dec push adc sub inc xchg fist xlat xrelease outsb adc xor out sub imull pop sub cmpb call jo js into test and xor pop neg (bad) jbe in dec jmp stos in fucomp aaa push pop jbe sub and idivb cmp addr16 xor xchg sahf fcomps sbb and loop xor and icebp ret cs xor cld jl clc rorl cli inc divl lods div mov (bad) not jmp negb pop inc sub cli icebp add jae dec not xchg sub cmp xor jb xor je,pn bound daa pop call aad sub push outsb lret mov dec sarb rol test cmp cmp and negb xor je lret mov push fcomps pop data16 test shlb mov pop scas lock push shl pop or inc in inc test fwait hlt cmp out (bad) sbb orl adc stc je mov xorb jne cltd inc sbbb cmpsl call jmp push (bad) dec or xchg or inc adc push dec outsl push lock js repnz bound ret cmp xchg (bad) testb iret xlat shl jbe pushf fmuls fsubrp dec push sbb scas shlb in jns sub nopl sub aaa push je add jo mov lock test int xchg fimull popf mov pop add xor or in jge les in repnz jl jnp in mov jl jp jb loop dec jmpw fiadd jo dec sbb mov xchg pop push pusha push dec mov push inc cmp inc imull loop ret add and adc nop xor out hlt ret out mov shl mul pop cmpsb (bad) xor les ret rorb lea cmp movsb (bad) fisttpl adc fimull test dec dec divl lds fcomps sub imull and push inc mov das xor in ds daa adc loope pop xor shrd je js jne out push cmpsb in mov sbb in (bad) push mov inc idivl shl leave inc xlat ja push push dec (bad) jp sbb xor xchg lds notl ret inc or aas iret jb iret rcrl push fsubs rol add (bad) leave xor popf (bad) movsb mov jno dec fstl add sub bnd or dec adc or sbb das je xchg in xchg loope inc cmpl push dec fdivrl nop out fadds and insb mov loopne mov push (bad) ret lock sarb and xchg and mov or (bad) xor and xchg in mov pop jp inc jmp in pop xchg push push xor popf loope adc jl dec mov add (bad) mull lret sbb sbb popf sub scas div (bad) jno cmpsl push je pushw bound add pop push push cwtl insl pop mov gs cmp sbb cli push push cmp roll mov ljmp inc and xor into xchg jl divb inc idiv mov add mov inc dec add outsb push movsl and sub sub jmp and push fnclex inc or neg mull loop imul add push enter loopne hlt pop stos negl adc pop sub cmp mov mov push xchg inc or mov ret fiaddl inc cmp inc test test add add lods (bad) mov or xchg xchg cmp adc scas xor or (bad) mov jb sub jbe outsb into insb push test rolb xchg adc punpcklbw fist push scas (bad) (bad) cmp push repz push pop sti mov pop push jge and push (bad) add pop sub inc dec jno into inc pop repnz mov jge jno jno (bad) push push push loop div cmp or cmp mov sbb or sub loop loopne jmp push ljmp imul addb push out sbb movb repnz or push add xchg imulb xor cmc iret mov out mov mov sbb or js pop add into mov je inc rol dec adc (bad) cli scas mov cmp dec xchg push cmp dec dec inc add push sbb arpl pop jp cs inc mov ret fbld ljmp inc sti xchg testl dec (bad) or bound add mov push shll mov dec arpl es push cwtl aad cmp jb xor rorb pop inc jb add inc in mov add dec sahf and jle out popf mov cmpb sub inc dec dec sub mov (bad) xchg stos into loopne idiv mov push loop mov std push repnz mov (bad) outsl jo ds insb xor idivb out sbb mov cmp adc ret push or (bad) idiv sbb cltd std cmc add dec dec je jb jo ds mov pop arpl je,pn pop add in cmp cmc scas std div ds daa arpl not daa xchg adc aaa daa daa and mov mov fsubs jno or divb mov dec push xor push out clc aad ds movsl aam push cmp pop hlt sarl sub idivb (bad) shl adc jne outsb testl xchg imul xor je popa cs idivl bound push jl xor push add insb div xor aam je or pop jns mov jecxz inc arpl xchg fnstcw test push inc mov loop sbb stos mov mov lret negl inc pop pop xchg adc (bad) imulb adc xor ret scas sbb (bad) ljmp xchg or clc dec inc sub sub lret pusha pop cmp cmp jbe xchg xchg xchg pushf data16 jne sub shlb es gs aaa dec and popa inc mov adc fcmovbe inc stc inc mov (bad) lret roll popa add (bad) jae and das xchg arpl idivb add jle jo lcall push add not lret push or sti mov jb mulb xor (bad) neg cmpxchg jp sub div dec mov dec sub sub xor ds mov test or js ja roll out pop call jle out in sbb call and inc fnop jmp rcrb (bad) imull insb cmp (bad) outsb call lds scas andb sub sub shrb cmp data16 add xchg sbb out pusha shr inc ret mov ljmp insl icebp dec or int fiaddl sub push xchg pop scas mov mov pop push sbb and cmp pop inc insl fisubr loopne out js gs and sbb adc dec lods inc mov and lock out mov insb sti iret mov dec imulb lock and jae dec out notl add enter sbb out and cmpl mov mov or out divb (bad) aaa aaa test mull mov cld call fdivrs cli pop (bad) movsl push dec cmp sti xor aas in xchg outsb and popf repz add inc jo out stos dec rclb repnz lock daa pop data16 dec (bad) or scas enter push and mov cmp movsb or and push sbb cld xor inc popf add daa dec decl cwtl ja repnz xchg mov test notb or insl scas add outsb xchg sti imul daa std push mov out or adc (bad) mov rcrl cmp jbe sti fs cmp xor sbb daa mov divl aas push add add idiv add add int xchg lahf ja rorl sbb ds mov pop out imulb mov cltd mov sub pop sub or adcl cmpsb fwait push je inc inc hlt nop mov and and dec pop arpl hlt mov mull mov orl fisub push inc testl or rcrb mov stos sbb outsb dec cmpsb insb mov in pop adc adcl lods push mov cmp or movsl dec xor mov adc (bad) dec or push jmp ret mov xchg dec (bad) adc (bad) sbb or add add sbb push ljmp push sub mov add subl inc cmpsb repz jns and movsb (bad) (bad) movnti xchg lcall mov repnz cwtl jmp outsl ret addr16 cli and inc jae loope,pt sub je dec sub outsb fld pand inc div add mov adc pop push imull inc daa push adc add lock movsb dec jbe push xchg testb hlt and repnz je or pop repz xor jp into inc shrl add mov loope aam and mov mov not jo mov adc sub mov or cmp inc test sbb fsub lock scas negl test sbb jnp add sub push daa adc add out sbb mov jo lea stc shll dec sbb out ret outsl mov ret data16 sub inc into xchg inc sbb dec push out sbb and popa mov sahf iret (bad) adc cmp push cmpsb adc in (bad) (bad) mov sbb inc mov xchg inc ds outsb sbb testl in jecxz pop (bad) int3 push fucomi enter mov mov fstl testb lret jp dec add imul or gs enter test jo cli and dec sub int subl add fs addb xchg rcrl push in loope outsb lea out fwait call jl inc xchg push mov jge xchg arpl cmp daa adc subl cltd xor pop jns lahf fsubp lods mov leave add push xor jo out divb dec add adc xchg push push inc fdivl sub lock dec dec jns sbb mov call ret dec mov dec xchg sbb test push inc push xor cwtl in data16 enter vmwrite jne xchg clc mov testl jl in add pop mov push outsl mov pop scas mov adc cli mov arpl ret imul insb jnp jp sbb or cs aam mov enter sbb sub mov (bad) sbb xchg inc sbb ficomp negl imul negl sbb push cs pusha or jo dec jb xchg arpl loop dec adc sbb sub and adc fadds pop pop test ljmp negb into cld xchg inc inc lahf test push or jmp mov je (bad) or dec imul pop int3 aas mov jg outsb ja sub mov imull (bad) xor stc adc or adc push push or inc test jl add push jl inc push pop sahf out mov (bad) dec icebp pop or push adc push bound or pop call add in (bad) out jae cmp enter cwtl je or into ret add inc and movsl xor adc dec inc idivl adc adc imul mov test dec sbb call dec stos fadds (bad) sub fsubr test loopne cwtl out std mov or dec inc and add add sbb cmp jno inc push les imull add push lret mov push sbb ja xchg shrl jmp sahf stos in push hlt xchg mov jbe mov mov mov insb sbb and je mov dec push pop ret or mov mov into cli xor sbb lds jle (bad) or adcb cmp les pop adc out mov push xchg int push jle mov or jle repz divb sbb loop divl cmp lock and fldl xor inc sahf sbb lods cmpsl les jl imull imul pop jl imull in add or divl daa jo lock insb bound or inc clc push mov jo jo adc pop out popf negb inc fadds mov xor pop jnp daa (bad) lods adc lcall dec xor sub mov aas dec lock mov ret add inc xchg add cs push inc mov mov (bad) (bad) lock mov (bad) mov sub push dec outsl loopne mov out pop sbb jo cmp mov lods and push jecxz testb adc push ret adc jg jnp push (bad) sbb ss aas das push call and xlat sub xor push stos inc xchg sti add mov pop jo pushf mov loop in adc cmp cmp cmpsl push add orl int3 pop mov xchg popa (bad) sbb xlat inc ljmp push push testl cmp lcall clc dec and in jmp sbb fcomps inc push aaa dec adc divl adc scas mov aas mov sbb jbe jno cmc pop add dec call add ffree daa inc (bad) es jbe cld aas lcall or sub push hlt mov aad or imul sahf pushf mov fcompl imul jle mul lahf pop lea mov jge add adc fsubr jae negl ja (bad) inc inc cmp ds sub xchg movb inc mov shrb xchg maskmovq notl test pop and push loopne ds repz or stos add pop stos mov data16 vpavgb jle sbb je add divl jecxz sahf popf rcl ret push mov hlt addl and cmp scas pop fimull push jns je add add xor or mov xor mov mov movsb jns dec xlat pusha jl sub mov lret test push or movsb je mov aaa mov dec es mov sub mov cs push stos lret dec jecxz and xchg push lret push sub push mov loopne (bad) (bad) shll out xor mov add pop ljmp rolb movsb push jg insb and ds (bad) paddw (bad) jo xchg mov out testl xor add dec jmp inc je ljmp aas enter pop scas jge inc mov jb mov jl xchg (bad) imul push sbb outsl push outsb cmp and loopne mov dec or (bad) dec out jne xor (bad) pop adc or inc imul cmp (bad) pop test pop cmp mov ret push dec pop call jge testb lods icebp loop out mov push lahf mov dec cwtl adc cmp pop adc cmp cmpsb cmpsl jo loop add sbb js sbb into lods shrl mov sub sub aaa inc cmpl mov adc adc enter icebp add xor push aas push negl jo push lock push adc aas adc test stc push daa enter inc inc cmp (bad) xor pusha orl out out lret add cmp push mov jmp outsb cmpsl jns push ret out sub add mov imul dec push into or sbb add mov sub pop mov aaa adc js repnz lahf int fmuls mov inc imul push notb mov cwtl in imul push cmpl into mulb rol inc icebp mov sbb mov stc orb pop scas add imul adcl shrb xor sbb push jno int3 and in xor je notl sub adc mov addb xchg idiv dec sbb test cltd jecxz ret and cltd jbe test fwait adc mull js pop rclb wrmsr pop and mov pusha xchg and sbb xchg sbb jp xchg stos notb fwait xchg mov pop add push sbb jg dec dec push add pushf cwtl sbb push add jno and mov jle orl (bad) mov push mov pop add mov jb and and out shl adc scas mov xor negl je faddl pop sbb xlat xor push lods add sub sbb orb push jge xor xchg div mov test sub sbb dec xchg xchg scas lock or sub or lcall lret shrb ret repnz adc lahf cwtl xchg dec adc sbb (bad) fs inc or stos ret scas out pop sub jns sbb jo popa mov xchg in in test pop pop dec lods mov std mov lock add test je sub xlat jnp sbb fisubr das lock repz ficomp xor mov inc inc test loop push mov jo pop mov push cmpsb xor orb cmc sbb test push jbe sub dec repnz sahf fstpl lea xchg and rclb popf fldt cli add ss (bad) mov mov mov jp pop pop movsl mov mov jle inc dec sbb add dec push sahf and or mov js bound sbb dec or repz mov ss stos cli jmp scas push ds int jnp sbb test inc mov xchg lcall ds cltd jmp (bad) sti es mov adcl cld pop popf out test mov cmp arpl addb roll inc push ds pushf sbb negl adc scas aad rcrb mov push loopne mov jno testl fdivl adc (bad) pusha sub push (bad) das scas inc fstpl sub loopne and push adc cmc loope jno notl sbb in inc pop ja push ljmp mov jae (bad) stos xchg cmp je,pn push cwtl icebp or xor aam leave sbb adc loope test shrb imul divl push fisub jle es fld pop test test adc (bad) idivl std notb test mov xor loope jbe,pn adc mov mov mov push mov je and mov rcll fistl imull test mov and rolb call adc enter mov inc jne sbb scas loopne cmp jns xchg sbb orl cwtl xchg inc into popf in imull (bad) imul in add jp lcall and inc or (bad) aam dec inc int3 std adc pop ds aam xlat testl sarb dec jns add into mov (bad) adc int3 data16 je pop rcl xor ja lods je dec imul lock or inc sub mov loopne (bad) mov addr16 pop div lret ljmp dec repnz fldcw rclb cmp testl call xor cmc hlt es notl daa arpl jno mov stos aam inc imul xchg lahf and cmp rcr dec xor icebp aam pop call pop mov mov fadds scas test xlat inc cwtl sbb lcall test mov ret ljmp testl rcrb dec dec divl (bad) hlt adc sub jp or pushf jb mov insb add ret xchg push jle insl (bad) lea idivl push div or mov jo inc (bad) mov inc les fs bound cs rolb sahf xor adc shrb mov push (bad) push cmp (bad) dec xor fist jo sarb mov push popf adc push jb add mov inc dec js pop jne cmpsb mov push leave mov ret xchg lret stos mul cmpl mov fcompl xor push inc and inc stos in daa lret fdivrs dec jge out cld in and sbb je dec (bad) push sub out pusha inc sbb (bad) insb dec xchg or cmovne inc pusha jnp add or xor mov hlt je repnz (bad) pop mov xor out lds clc jmp imull inc imull inc gs xchg xor mov cmpsb push inc cmpsb daa shll sbb xor sbb aaa outsl sub xchg data16 pop cld mov add cmp ficomp sbb adc mov loope notl mov dec aas mov inc ss sbb or jnp aad mov and cli out shrb mov pop or subl jno test adc dec sbb fadds pushf in mov push xchg mov imull mov cmp inc dec mov popa out adc pinsrw adc inc lret (bad) jbe (bad) mov negl loop rcl push inc lock jp xchg xchg shr movsl mov insb mov scas xor or cmp lret test ljmp movsb scas inc fstpt rcr lcall mul pminsw inc js sbb cmp dec sti and jne das push in adc push xchg inc js push xchg icebp or or cmp mov movl mov rorb sbb jnp add jo push (bad) idivl popa pushf cs jp dec or push popa pop and xor das loop dec jb js mov inc jge cmp pop loop (bad) (bad) or jnp cmp pop cmp loopne cld dec insl cmp mov jne arpl xchg out mov mov push dec mov jae mov clc loop shld sbb adc negl dec popl mull pop push push notl and loope pop ret mov loopne out out mov inc xchg out (bad) enter fucom adcl fsubrl test roll jle mov xchg inc adc add push inc add cmp dec add xor sub cmpsb dec lcall lods push mov or adc lret jecxz sahf divl xchg push adc clc add lods xchg in or arpl mov xchg outsb xchg mov sbb mov fisttpll daa or sub dec mov outsb (bad) or xor and or cs pop or cmp sbb ret and cmp aad lock div aas push int mov mov imul xor lods aam cmc icebp ficom fcmovnb mov pop inc int insb stos sbb stos mov sbb pop clc add and sub mov subb gs je mov pop in fcomip scas mov jmp mov nop cli imul loope and loope mov mov mov add out lcall sarb shrb imul add adc cld push dec clc jg mov fist pop sahf dec test enter push les cli lock or mov add test inc into out orb sub pusha xchg imul out inc sbb rorl xchg int3 jle aad std mov arpl divl into lret (bad) jle out mov repz mov lock dec divb pop pop mov add loop add xchg (bad) mov sub lock inc (bad) js jb mov or je xchg adc outsl cmp sub cmp pop sbb xchg push lret push push push cmp xchg xchg popf dec add stos cmpsl pop mov ret push inc imull dec lahf ret popf mov add fsubl pop and daa in rolb jae pusha repnz imul sub stos push jp push mov idiv aad aad cmc nop stos gs cmp inc mov pusha sub xchg (bad) repz inc sbb sbb sub jle push and enter push mov in or pushf je cmp cmp push insl push cld dec inc call push push pusha mov sbb sbb call cli or into xchg mov fs lods into lcall int xlat xor cmpl push mov shr xchg jecxz jge stos jmp mov dec popa addl (bad) out dec negb lea out sub loopne das mov test loope inc cmp int3 arpl pop popf push and push inc push sbb mov or (bad) testb pop ljmp out test rol cwtl pop inc mov mov mov std mov notl xchg scas or pusha jge iret add add xor hlt mov dec movsb adc xlat pusha pop mov xchg mul (bad) lods leave mov jbe loope sbb gs cmc mov mov cmc pop mull dec mov cmp mull mov add lcall mov dec fwait push mov fdivrs pop and and hlt imull inc xchg mov xchg or inc xchg out sbb je xchg (bad) dec aaa (bad) pop iret jmp push sar imul lcall rclb test mov xor dec cmp mov cmp cmp pusha lea scas sbb sub repnz jns sbb orl in or push sbb out cwtl and data16 sub and js jecxz cmp loope sbb fcmovb lods fadds xchg aam sbb in ljmp dec mov ret lods xchg jle mov pop rcrb pop push xor dec sub (bad) pop inc icebp adc dec inc mov fs sub sbb sub cs loope mov (bad) cli cmpsb adc push cmp or iret ljmp imul popf or dec push mov sbb sarl jnp lds fistpl scas fistpl pop push xor sbb inc out xchg fstps or imul adc cmp outsl aam sub jno add and in imull sub sbb lret sbb int3 fidivrl mov daa dec pushf adc inc dec xor jl andb ret fcmovbe sub xchg testl sbb mov xor in enter ficom fisubrl pop push enter sbb test (bad) es xchg or jns insl adc shlb cwtl jg jmp outsl (bad) shrb notl sahf test mov cmc enter (bad) push lods call add xor adc mov adc mov sub mov out dec mov aam pushf fwait push fwait pop les aam psadbw call mov movsl and mov adc xchg inc lea or pusha push xor addr16 in mov (bad) dec loop je (bad) cmpsl js pop xor mov cs loopne pop test jno (bad) jecxz nop negl dec cmpsb fisttp push (bad) xor lock mov fisubr (bad) and jns divb arpl imul jmp inc xor xor dec mov scas and notb jne loopne xchg jo insb (bad) loope stc test cmpsb push les psubsb dec call push xchg add rolb scas xlat stos push mov sbbl cmc mov test or lret mov cmc mov in loopne test pop add bound loop test mov push push add or mov xchg or clc test divl and sbb jecxz lcall test lock (bad) je nop adc and pop notb push mov add cmpsb out dec js sarb dec fidivl lods sub adc sbb xchg fdivrs mov lods in scas adc add leave cmc movsl dec std fildl push ds mov fstl (bad) mov dec imulb or dec add aam pop pop rorl ror icebp sub sub cli cltd clc push shrb (bad) in adc bound jg test mull or scas or cld add cmp pusha mov cltd loop adc pop repnz fstps or or or or out mov mov sub mov and data16 xor sbb out test aam aas maskmovq (bad) dec jmp and or bound cli adc sbb cmp adc push push dec jmp mov arpl inc cwtl dec cmpsl cwtl stos sub and into inc hlt adc add jns stos dec pop lock outsb inc je decb clc inc negl std pop int3 out (bad) call lret add pop xor cmp xchg or popf cld adc and push pop push sub inc lds cmp mov es aas in pushf push fmuls ss dec push push pop mov iret ficompl ds test adc je bound je jp iret sub out sbb pop push mov pushf into mov cltd jb outsb sbb imulb adc mov pop sbb es sub jns pop out hlt addl je ds in (bad) lock mov push xchg repz lock push out imul dec add mov testb mov push jmp fcomps popf and xchg movsl xor inc testl xchg notl sub add push fsubrl or or jle movsb push movsl dec arpl ja,pt xor (bad) jne xchg fstp (bad) negl in xorl popf lcall mull pop ljmp test fstps adc rclb rol inc movsl (bad) cld call pop push mov popa add mull or loopne dec cld shr xor dec cmpsl aad fsubr xlat ds lahf and fldl cld jae xor or sbb cmpsl lcall daa jge ret pop cmpsb loop cltd jge icebp sub mov loop push mov adc ljmp movsb movd inc mov (bad) mov mov xbegin lahf adc sahf cltd push ret mov push mov subl push xor mov scas notb lds xor inc mov shrl dec ds mul xlat daa adc and insl sub mov jbe sbb (bad) ret sub pop mov mov sub repnz cmp xchg push les push test repz xor mov mov arpl xchg xor or ja shrl icebp insb cmp mov sbb pop cmp or popa stos das insb fwait pop and jb cmp adc inc cmp cmp push (bad) or mov jge daa push notl xor shlb insb mov mov and idivl or mov (bad) jno push inc (bad) sbb sbb mov test pop add sahf pop cli test ds sbb loop int enter mov cmp pop cld push jg cmp xor (bad) sbb sbb adc inc test out cmc lods mov mov mov insb or sub jbe sti mov jno int adc adc lahf push add or jle and out xor into (bad) idiv testb fdivrl push imul and xchg xchg sbb cmp out sbb mov int3 xor js push or arpl sub lret lock push jg sub cmp push nop jle and test sbb xor dec nop pop in or add mov push or xlat in out xchg inc mov mov mov mov in and pop jl mov sub adc add fidivl decl push ja jne inc ss add adc xor fcomps pusha ret imul repz mov inc jmp xchg ss inc int3 cltd mov rcrb jbe mov andps and imul mov mov mov popl add sarb in (bad) mov neg movsb jo repnz or inc pusha cmpsb jnp frstor nop sti lcall (bad) call test and add mov xor cmp daa bndstx flds outsb jbe sub lret mov daa add jne insb bound add inc (bad) xchg adc sbb outsl invlpg test sbb jns mov aad inc and dec jo xor (bad) push fild push inc push ja bound push ss popa outsb ss outsb xor pop outsb insl imul loope push xor fiadd sahf mov add push pop and ja ja movl stc adc mov test xor sti sahf mov pop push mov push sbb call sahf push and sbb cli or push jo push inc push and movsb rclb cmpsl pusha cmp rolb cld add fsubp push xchg push pop test cmpsl jl jl iret inc stos push xor add cmp out mov and clc push mov push push inc push push insb sbb jnp inc add call mov mov push and lock es dec repz mov dec hlt les test xor inc test (bad) iret jle or push sbb push call (bad) push and movsb inc je fmull lods push jnp in roll sbbb aam dec sbb int3 cmpsl jge adc out loopne push cwtl dec test sti into fadds js push imul ficomp push sarb add out or mov jge imul push mov les push push mov imul cmp push popf adc loopne ds push or mov push in mov sbbb test xor out js xchg les or mov sub or pushf mov ds loopne mov adcb ja out pop sub loopne addr16 push in mov push rclb push fnsave mov sbb aad pop mov bound frstor test popa adc popf (bad) das rolb push sub sub mov scas add xor mov fidiv ds dec call and js clc and xlat iret enter fcomp flds jno dec (bad) (bad) loopne jecxz in adc mov mov and and popa je xor leave rcrb xchg addl cmp push push aam insb pusha adc sub jbe adc push jg test adcb aaa sbb xchg dec add push push inc aam sbbb aas scas incb or push es adc repz sub cmp repz dec push pop pusha repz repz iret repz nop cwtl mov iret repz enter out iret repz sahf out sahf or sbb sub jb loopne cmp cmpsl add add add jb fs sbb movsb and pushf cld mov or enter mov in leave in leave test je fcoml leave inc in adc aaa stc add push pop and xchg insb call dec add popa or adc iret imul mov adc fs ss test test enter sahf out cld adc and inc out sahf out pusha insb adcb mov add cmp sub sahf push sub aas (bad) leave sub cmp jmp pop jbe add push and push add or popaw frstor mov jns xlat adc pop push or xorb sub xor push dec fdivrl mov pop push call aas jnp cmp push nop jg movsb aas add mov pop mov push enter jg lahf neg dec call mov mov mov push add jns out push out sahf cwtl adc adc adc popf out fmuls in add add push jns jnp sbb push sbb push adc sahf out jo test sahf out sahf pushf or int jns sbb rclb repz repz push inc sbb push pop insb rcr orb sahf out and mov add out sbb roll add repz dec rolb xor out sahf out mov mov sahf mov pushf jns out mov cld js out out cld (bad) mov imul add jbe (bad) cmp mov xor push punpckldq fldcw pop ret add jle jmp rolb or mov ret or test push mov fcomps push scas daa cmpsl jno stos add sub jns cmpsl les push test (bad) sarl aam hlt add cmp jnp and data16 inc dec pop out iret rep je jl sub rep add adc add std add mov lds jmp pushl jge dec (bad) jle out sti jmp out out add cmp cmp unpcklps cmp cmp adc xor ss prefetchw daa daa daa daa or adc es daa daa pop add jb or xlat jo jb push or iret repz push fmul aam pop iret repz hlt in add mov xchg push lock xor negb push faddl mov movl out pushf mov fsub repz out add adc iret repz dec pop pusha je xchg cmp repz mov ds add adc sub adc add inc mov or pop (bad) cltd lods outsl adc jge push pop int cmp (bad) push add or int3 out lsl insb jns out push std jl mov out sahf out stc mov les fdiv in cmc add cmp repz adc and repz repz dec lock iret repz out je mov cwtl cmp repz lods jmp ljmp add add inc xchg adc adc ret iret call (bad) roll outsb mov add or bound rolb push xchg adc iret mov inc adc nop pop lcall or add nop dec inc or or insl insl sbb mov mov adc pop add das (bad) inc ja add push arpl adc push loopne xlat ja fnsave inc mov pop pop jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add mov pop loop pop push inc pop cs repz inc push mov fmul repz pop jo fs iret repz nop call iret repz xorb iret (bad) hlt cwtl sar movsb ds repz cld mov add shrl push add iret repz adc int3 and cmp repz adc inc adc cmp repz out cmp sbb jo add sahf out sahf andb sub sahf out mov out sahf out (bad) xor rcrb cmp cmp lock jns pop xor inc iret repz push dec cmp repz xor inc repz repz lods push pop mov pusha pop int3 jo fdivrl repz fs nop push or out sahf out cmp je sahf out sahf sarb loopne test out lock test iret repz fdivl nop in repz repz xchg clc push cwtl out sahf out mov adc sahf out sahf mov nop jns out lods dec mov sahf out mov sarb rcrb mov enter cmp adc int3 rclb rcr cmp repz aam xor data16 repz inc fmull push sahf out sahf push loopne pusha in jns out jo sub out nop lock mov hlt dec mov pusha (bad) xor out cld insb rolb dec js cmp repz test or jns iret nop add out sahf adc and xor out and inc sub repz out sub mov iret repz sub cmp cmp repz nop inc jo repz repz mov cmp rclb sarb repz pusha call jnp jle (bad) push insb and iret repz jo push and xor repz js test push cmp sbb pusha push mov mov adcb aas nop mov and mov push out (bad) ja cmp rclb (bad) rclb pop inc or add jg cs leave je (bad) dec adc cmp repz mov repz xor aaa jp cmp mov out sahf rcr call iret roll or and cmp repz dec push pusha insb js sahf (bad) int nop lods scas clc push add push adc sahf out sub dec pop out sahf out jo mov lods mov add mov add push cmp nop push nop imul mov aam nopl cmp push inc inc daa xor cmpl add push push negl push push sub mov adc inc cmpsl inc es xorl or mov pop mov push dec dec mov in push ja fidiv cmpsb hlt jle push cmpl push (bad) or or into out mov push dec push sbb and fdivl movsb jne cmc ds aam scas addr16 mov sbb xor cmpsb sub fistpll scas outsb je jo mov popf ja add push mov mov test sbb out mov sbb into or js cmp sbb cs test add scas jne es es jmp xor out cs adc mov dec (bad) or sub loopne jle sahf or pop inc add fidivr push hlt es mov sub mov lret and roll mov outsl jge rcrl test js adc or fildll inc sbb enter cs cmp outsb xor push push in test add mov push (bad) lods cs test add push fcomps sti push fiadd xchg in in add stos jnp sbb cmpsl push pushf inc je sti push add push xchg push icebp loopne xchg cmpsb jl dec (bad) ret cmp (bad) cld mov cmp xor push (bad) test cmc jecxz addr16 pop add iret call push add inc ja add icebp fidivr dec inc adc cs fimul movsb inc data16 out inc xor push mov jecxz jle inc scas iret dec lock (bad) push push iret ja insb fbld dec cs negl dec div mov es push pushf and cmp cwtl dec sbbb pop insb ds pop add out push sub push xchg dec int3 and inc add push testl stos pop shr mov scas ss xchg jbe rcrl push jbe pop inc mov lock out out dec pop lahf jp xchg jbe fs mov lock jbe mov mov cmp hlt lahf ds das jae loop scas lods mov dec xor vorps push out addr16 add push push mov pop cs or push mov jno pop movb add push imul xor (bad) mov mov push pop dec fbld jmp mov data16 dec aam je rclb icebp mov movsb out xor es mov push in outsb loopne add push push out enter aas data16 sahf pushf cmpsl push fidiv jp lods ljmp fsubs or insb sti pushf jb mov and xor popf inc xchg xchg stos and inc test inc add enter xchg push add andb out adc push pushf and nop in test mov and push adc add mov add fs mov inc xor push dec add add pop dec add pop inc sbb inc and sti mov push and pop dec aaa push pop mov add sub sbb push dec xchg push loop imul imul mov mov push xchg neg std fimul ret inc push push push cs and inc push cs and sahf negl xor dec cmp testb push out imul push jbe dec or std inc jmp push fiadd add adc sub add mov lods in xchg cmp adc imul add iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsl mov pusha shll jnp mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 push sub xchg mov xor push pop std lock add sahf ss insb jl (bad) push data16 mov into repz sbbb arpl pusha cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add ret cmc jns (bad) cmp (bad) decl cs cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub add sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pushf out and xor inc add add mov addb rolb dec jnp push and add out push add mov jge aas cmp subl mov jnp iret mov repz and daa and mov es xor cmp orl push adc cmp dec push dec push mov neg xor push daa lret xor ficom push (bad) sbb out insl xchg lahf dec daa dec addl daa mov (bad) jnp jae ja push daa clc push (bad) cmc push ja mov ret jb mov adc jo nop daa cmp imul mov xor and daa inc scas mov daa dec sub leave fistpll aas push xor mov xor sub pop aas jns scas cmp push pop push es and int3 push and and out jo (bad) cmp jmp int3 je (bad) pop push (bad) cmp cmp xlat push lret fcomip cmpsl daa push and push mov adc (bad) push data16 xsavec jb ficom clc repz push addr16 or push xchg adc into (bad) cs inc inc inc or jmp std test ljmp or lret (bad) daa inc aad push push jle mov dec dec pop daa mov out in push test incb aaa and dec nop divb add daa fisttp mov daa or arpl dec pushf es adc mov or fild ss arpl daa leave ret (bad) cmc ds shll xor arpl or mov inc nop xor (bad) lahf and repz out fs subb daa push cltd add add daa mov xchg aas daa dec lret ljmp inc inc es mov jnp daa dec add jle xor lock out in repz adcl push test dec inc add adc fbstp xor adc xor push jo sbbl movsb sub push repz iret xchg mov arpl cmpl lcall arpl aas das es (bad) lret iret push out inc in push inc sub ret ret xor inc sub call fs enter pop outsb data16 inc push fwait gs cltd (bad) je push inc mov sti push jle and inc aas call or fsubrs lock cmp jmp dec sbb pop xor dec xchg leave and mov stos mov adc or mov jmp pop mov gs jne adc cmove or sub sar daa jle adc cltd xchg cmpsl (bad) cld test xchg sbb mov inc subl pushf rorl fstpt clc or sbb xchg es gs sub push (bad) daa dec xor mov outsb jnp xor dec daa dec daa jae fsub dec daa clc dec je dec cmp dec jl pop dec pop or rorl jo jl daa (bad) mov mov xor cltd mov call cltd cltd and imul aas mull adc xchg aaa fs popa or sbb movb jb push mov adc inc mov sub ja inc daa int jb shlb push stos sub cmpb adc xchg dec scas inc pusha and cmp pop popa and cmp shrb jmp je loop add pushf loopne xchg daa fcmovnbe ret and lret (bad) aaa into aaa push data16 outsb daa and sub pushf add cwtl stos sub aam cmp ja push insl mov push push pop add push and loop pushf es and stc es mov fnsave push and sub xchg pop dec lcall popa lock daa xchg add stos push into add push adcl aas test into adc aad and add ja scas mov mov and cltd xor mov rcrb js xor mov pop stc pop mov lock in dec jns out xchg orl pop or repz push adc or adc push push enter add aas in in or pop add push add pop outsb add and or push and push or sahf jnp ja pop push sub adc add add add fmull add push stc pop pop pop out add fwait lods lds adc sahf negl daa mov push push and sbb jbe sahf pop adc nopl sbb or pop pop add or jno das mov out push add add iret vandps add cmpsl stc mov and push sub sbb int sbb dec push push push push negl dec dec inc push inc outsb lahf out mov sub and icebp jecxz adc push out sub or aaa jmp pop pop push xlat add mov adc das in movsb lret out (bad) and push in sarl or push sbb sbb sub jnp sbb inc push push pop push push stc dec repz jge sbb add sahf mov push adcl repz push push inc cmp rcl cs sbb adc fdivs push or sbb pop jmp das add adc add fisttp (bad) (bad) inc add add add pop iret shrl push or xor repz sbb push addr16 adc push xchg adc add movsl adc xchg scas xchg push mov push mov add adc mov out jge testb pop stos outsb movsl es cmpsb xchg mov iret repz (bad) jnp push insb pop dec cmp sbb and sbb push adc clc push sub or or cmp test out cmpsb ret cmpsb out daa add fldcw push bndstx and or push popa fidiv ljmp movsbl adc pop cmp (bad) (bad) jmp (bad) imul jnp cmp adcl test icebp jg cmp jns cmp je xor jno jl (bad) ljmp ljmp sbb inc pop adc sub or sbb add push mov (bad) jge stos scas mov decb stc push addr16 inc xor jmp sub sbb sub jne ss pop inc adc cmovg adcl jo mov push imul sbb lcall jge (bad) fistp xchg push lret add lods inc push adc lods jp hlt stos (bad) imul test push jmp jae call dec decl pop inc (bad) (bad) (bad) (bad) jnp cmp jne pushl xor insl inc das push inc ljmp ljmp notl aas (bad) lcall jecxz adc enter mov (bad) fwait sbb fwait pop push mov jnp push push inc shll sub push nop xchg xchg push push sub or push adc call push mov je xlat pop add xchg or out and pop adc int jge sub inc sbb pop jp xchg (bad) (bad) decl adc mov pop inc fidivrl xchg jle mov xchg xorl xchg push mov mov test jnp push jb (bad) (bad) aaa adc xchg push popa dec incl dec cmp (bad) outsl sub inc push ss pop xor lcall push popa cmp jmp (bad) push sub push (bad) repnz sahf scas adc mov (bad) lcall push push inc xor dec xlat (bad) and sbb adc xchg cs push push jmp ret xchg negl aaa scas pop popf xor mov or out stc cmp inc and fidiv cld cmpsl mov mov ljmp xchg call lods mov push cltd call stos push iret test dec movsb xchg inc mov push ret movsb push pushl shlb mov xchg pushl fcomip ljmp jge cltd jp mov (bad) jl inc (bad) fbstp xor cmp sbb push sub adc (bad) pushl sbb gs and bound and xor mov sbb xchg sbb and jl dec cmp sbb pop enter add or out ljmp jle jge pop dec adc out sbb sbb cmp stos push test ja xchg pop adc out fldt (bad) fnsave lods jmp mov fstpt jecxz mov push iret lret into fxch (bad) call (bad) fyl2x mov int mov leave mov ss mov inc mov outsl fildll pop enter cmpsb push lods mov mov cmp jp (bad) cwtl ja (bad) jge inc out (bad) adc jg out push cs pusha ss inc and icebp sub pop shrl cmc push scas push mov mov es push inc jns jp xor sbb adc movl or push xchg inc or push loopne sahf or adc fisubr sbb cmp xor js cmp shrl loop loop jle lret int3 mov mov mov aad push fnop push loope jmp (bad) jmp fcom lds leave out les in (bad) decl mov mov lcall scas xchg mov xchg stos jmp mov push xchg push mov push mov out sbb fwait dec mov (bad) mov (bad) mov mov mov push cmp pop xor pop xor (bad) scas call jmp ljmp sub sbb adc data16 lods sbb popf pop mov jne dec xlat out dec xor xlat lds daa stos pop (bad) push push scas and mov lahf fwait adc aad add push out push packssdw sub inc popa adc call adc push pushf mov push fidivl out (bad) lret push (bad) push mov lods std loope (bad) out out es jmp (bad) (bad) (bad) ss call fadds mov mov fwait xchg ljmp pop cmc jmp jb xchg ja call push pushf jl mov pushl mov test lods mov mov adcl lea sbb mov xchg mov call jbe mov jle pop inc (bad) imul incl dec sub insl inc sub sbb add jle lcall es (bad) xor push push (bad) xor dec (bad) add push pop loopne cs mov push movsl mov dec mov loop aas push mull add jle push push stos ret fwait cmp mov mov hlt fst push out push in in (bad) jmp adc in out (bad) aad out les stos adc mov mov inc mov xorl mov xchg pop dec pushl dec outsb push dec push pop push daa (bad) (bad) (bad) incl push popa lcall jge ljmp mov nop jg mov movsb jle mov and fisttpll mov sar mov jge das incl dec xor sub push into iret repz (bad) mov subb inc pop mov xchg cmp sub pop or mov mov xor (bad) lea add dec adc sbbl pop cmpl and mov push lods fsubrs loopne out imul out out clc mov (bad) out loope,pn lret (bad) mov adc cmpsb inc movsb fwait out mov movsl test mov push loopne pop push ljmp fdivrp stos push cld movsb mov ret lods xchg mov push lcall xor ljmp jl dec mov (bad) jbe mov xchg imul js jle jmp lods fstl lods test mov xchg (bad) mov mov popf cli cmp inc decl aaa incl xlat xchg mov push scas and repnz mov sub sub sbb incb pop adc (bad) and jb mov push inc adc (bad) adc adc mov push mov xchg pop mov scas pop icebp push mov mov mul (bad) in jmp out icebp mov fwait push out fsubp (bad) shll into (bad) (bad) fld mov decl mov pushl insl lds outsb mov insb dec inc pushl dec jbe lods jle mov mov jmp push fisubrl stos scas clc lcall xchg sub bound inc dec aas (bad) pop cli outsb push dec incl call je pop scas mov push push mov jg lds jmp mov push test (bad) clc cli mov jbe inc incl adc push mov push mov test push push ss sub and mov cmp movsb loopne jbe mov push test and mov inc jle dec outsl stos mov and sbb icebp mov (bad) leave mul fcomip out stos xchg fdivrs ljmp test lds mov lods push adc stos push push mov cmp stos clc push sub xor incl (bad) out mov jmp jmp (bad) clc jmp xchg push leave mov std shlb (bad) imul push xor jbe clc sbb (bad) jge sahf xchg mov insl repz xchg insl pop jmp mov js mov shll (bad) push loope jecxz std scas lahf mov mov jbe sbb (bad) repz push mov scas and iret arpl sub btc andl xlat inc fdivl xchg aaa jg (bad) stos (bad) dec sahf push inc mov push or adc test divb inc adc sub fildll sbb (bad) mov rol imul loop lock ret lock lock fcmovbe insl stos (bad) lock ror (bad) leave (bad) mov ljmp (bad) sahf pushl test xchg jno js push jmp sti push fwait inc lahf mov in (bad) out in jle call jle in hlt sub push fcmove push sub pop lahf xchg fwait jge int data16 inc pushl (bad) (bad) cmp sbb dec sub lcall ljmp aaa pushl inc incl cld (bad) test push jle (bad) jl pushl mov int3 mov in lods (bad) insl push fildl mov movsb jb test (bad) sbb pop enter push cmpsb mov push jnp cmp daa push pop sub inc ss push pop nop nop sub push and mov add idiv sub xchg pop (bad) or iret pop push (bad) outsl (bad) dec (bad) jle or jbe in loopne imul lock mov (bad) (bad) into (bad) fcmovnb ret (bad) cli pop mov aam mov scas stos push mov mov mov stos scas push imul dec jbe mov mov mov jle jmp out call xlat icebp xchg (bad) inc cltd jp lcall pushf jl xlat popf movsb outsl push incl (bad) cmp sbb push xor jmp xor cmp ljmp cmp jp test mov outsb pop mov js lods subl (bad) jns popf mov imul shrl jmp mov mov je test adc add cmpsb mov movsb out js (bad) nop out sub pop inc mov mov aaa pop mov xchg aaa sahf pop push and call subb push out xor sub (bad) (bad) mov repz mov push out out (bad) jmp fdivr out aad loopne jg jmp call mov test sahf lcall idivb inc gs jmp inc (bad) jle pop inc lret repz jns mov into out jle out out jecxz mov sar lds outsb rcrl push push les aad push mov cmp pushl fdivr cli sbb dec sub xor xchg sub bound xchg imul jne push push push lods outsb notb mov imul xor loop add sbb lods and icebp mov inc aaa inc shrb lds pop push sub movsl inc add sub andl icebp aaa loope sbb sbb or push push in fcmovbe (bad) outsb icebp in jmp out in push jmp fisubrl int ret adc mov (bad) stos cmpsl (bad) mov mov out mov lock es inc lcall outsb ljmp in in out out stos mov shr push loope lds push jne imulb cwtl ja sahf iret push rclb jp cmp xor adc inc and sub xor jb push out add cmp push inc jle call jne lock jmp ficom sub stos xchg dec mov ss rol ljmp pop inc lcall or (bad) (bad) mov mov ss idivb push arpl pushf cmp inc xor push mov (bad) mov pushl pop into pop popf test sub scas divb push push std stos je jbe push aaa fcmovu mov push inc or fcmovnbe lods clc cmpsb adc ror call mov cmpsb or push dec cmpsb (bad) mov xchg (bad) xorl je push ficomp mov call popa jl in jmp in in pop popa out push (bad) out repz hlt jbe push (bad) (bad) fwait mov jb xchg jae jmp sub xchg jbe xchg push cmp or xchg popa cld and (bad) cmp push (bad) and mov push outsb xchg adc (bad) aas incl push lcall mov mov xchg jle stos xchg clc ja lret ss xlat into mov inc sub adc stos or push stos cmp imul cmp or cmc and mov jp stos add outsl add movsb xchg push xchg (bad) fisttp xchg stos daa bound out sbb cmp and pop xchg mov out jmp js fisttpll iret lds loop mov mov mov fcmovbe push cld push ljmp dec push pusha pop ds cs in fsubs mov out in pop incb cmp pop (bad) in in repz stos lods loope rcrb xchg jo fstpt sub xchg jae xchg rcpps xlat xor xlat push mov (bad) in cmp sbb push and pop cmp out add out push inc dec scas scas sbb jmp cmpsb jl mov mov ljmp adc (bad) pop push scas xchg jge cmp fisttpl addr16 push inc cmp or adc seto pop imul or push fcomip adc sahf lcall test dec (bad) jno ds lret sahf out in ljmp (bad) not int fadd ret scas push cmpsb mov mov (bad) lcall dec or inc inc call movlhps fsubp ljmp jecxz out push sbb (bad) pop jnp insl jmp xchg outsb jbe push mov mov rcrl jae decl dec aaa push sbb sbb ljmp xor jbe cmp xorl lcall decl insb push jbe subl fwait adc xchg jae addr16 test ss sahf mov test sbb (bad) mov push jae popa jns out dec inc xor xchg out adc aaa mov mov iret pop and les idiv test jo push out pop push and sub decl push adc test into mov inc xlat shrl loop lret mov into mov leave lods dec or pushf fwait ljmp lds pop ljmp dec push lahf lcall ljmp out pop inc jmp div mov push stos xlat dec ss mov xor push insl xchg mov cmp xchg xchg ret jp (bad) pushl out cmp pop (bad) aas and call es adc mov dec cmp adcl cs (bad) push push je mov push jle sbb or scas jle push aaa (bad) sbb pop icebp or mov mov sbb pop rdtsc inc sahf mov adc in pop add jo mov add rcll negb mulb inc or movsb mov jmp ror push sub mov cmpsl inc cltd xchg pop ljmp (bad) jmp jo jo push (bad) jns pop call mov nop mov out out pop test jmp push (bad) jecxz (bad) icebp xchg jcxz div push in mov ds imul xor mov mov mov jo xchg jb je out clc or push mov call and cmp sbb bound ss aas push pop insl orl inc mov cmpsb les das cli cltd test into mov pushl mov (bad) lock sub ja mov cmp cs and adc mov pop pop or cs (bad) push push and push js push inc divb xor ret lret lods lcall (bad) fmull sbb mov out movsl mov (bad) mov mov ljmp dec decl aam fs push in out jecxz loop shrb loop loop mov clc jle cmp cmpsb mov push jno ds nop mov push outsl xchg jno ret xchg inc xlat cs outsb int dec insb fild sbb and pop cmp ljmp jl cmp mov xor mov jo sar mov ljmp sbb adc push xchg push andb (bad) je jns popa push push inc xor sub ja adc inc das ljmp loop mov stos push iret sub pop jg sbb lock sbb and xor adc xchg js cmp sarb push mov lods test lahf fwait ljmp cmp jge sub xchg push dec ljmp jecxz jmp mov movsb sbb (bad) fucomip mov jns (bad) jmp call clc ffree cmp ds push mov pushw addr16 addr16 cmpsl jecxz jbe mov imul xlat mov rclb hlt icebp retw outsb int3 dec fcoms xchg pop pop lock inc es pop xor loopne mov pop pop inc call mov lea neg cmp jg mov pop mov cs sti jns push push dec push pop imul pop aas pop or and add out imull xor jle push mov xor push pop pop pop icebp aas push adcl out scas push ret pop mov test push cltd xchg jmp out shrb loope push push mov add hlt ljmp sub push out fiadd pop adc out in push decl loop out cmp push mov fs gs int3 repz mov pop inc pop mov inc (bad) ss int nop push rcll xchg inc jg mov fldcw scas jae decl pop test mov xor jmp pushl aaa out sbb xchg cmpsb jnp mov jmp push mov xor mov jmp push pop cs xchg dec lcall loope xchg pop add and das or cs sub cs cmp jae sbb cs insb fldt ficomp add cltd out mov add cli (bad) lcall imul xchg call or push fsubp scas aam nop loopne ljmp push cwtl in fstp loopne jecxz (bad) ljmp cli mov (bad) pushl ds mov push mov jle sub mov mov je mov rcll ret xchg les aad sar fbstp leave xchg aas pushl sbb decl push jmp sub cmpsl jp dec ss xchg dec lods jle xchg pop mov out adc mov sbb stos and je outsb xor pop push cs and dec (bad) aaa sub adc xlat adc or pop sub divl push subl iret push sub and adc jg incl xchg test jns jl pop jmp inc mov movsb (bad) cwtl mov movsb out (bad) (bad) out mov fucomip out cmc pop scas movsb pushl das ret icebp call int out repnz pop mov pop mov cmc repz mov jo (bad) pusha in fcoms test push mov push mov adc aad dec scas xchg jge std clc cli jb es mov mov nop inc aaa jle jno jbe rclb (bad) decl pop adc dec sub pusha cmp pushl sbbl mov clc (bad) lcall (bad) out sbb int and cs jbe je push or inc xor adc and aas aas pop stos push mov div stos ds insl add add jns out sbb and ret xchg jle or mov jg sbb loope dec (bad) jo inc outsb push dec mov stos push sub push inc call xchg ss push ffreep mov loopne (bad) dec sahf xchg pop lods lock das push jmp pop call rcl out call push (bad) cli sti call jmp mov pop push mov lods test mov push test sbb lea les mov cmp push push pop dec rcl in mov push push mov push ret arpl sahf out nop (bad) fistl push stos outsl push decl pop incl sbb sub add xchg xchg arpl daa syscall lret out ds lahf push xchg daa mov outsl bound jns out cmp es sbb mov pop add push add xchg andl roll sbb sub fldcw insl sbb loope xchg jo test out (bad) jge push fmull add call ds push fistpll in (bad) sar jg clc aaa sbb xor jmp push call lahf xchg add cmc ljmp scas sbbb push mov out fdivrs test and pop xor ljmp out dec jbe arpl sub mov mov mov push lds movl test sub sbbl ds cmc add pop ret or js std push lods and cltd push mov sbbl add push pop pop push push cmp dec and pop or push jo maskmovq idivl mov pop testl pop loopne out pop and sahf cmp push addl push xchg (bad) scas jns dec adcl cmp (bad) (bad) in in in inc fsubrp jecxz in pop loop push fcmovnu in faddp clc or (bad) mov push and mov lcall adc sar cmp lcall test jbe,pn jg jmp push push addl pop pop imul jg out xchg pop cs je xor mov xchg aaa jp mov push xchg out je imul cmpsb push jbe jmp mov jg aas (bad) cmp pushl inc pop pop cld cmp sub pop iret (bad) mov sbb es mov mov gs pushf jne dec rorl aas xor rorb in add push sub dec xchg cs push notl xor js sub inc negb push std sbb mov mov push inc push mov or repnz imul out cwtl loop push out (bad) (bad) mov (bad) lahf mov pop dec push mov jl inc jmp hlt mov dec push mov out mov pop pop xchg mov pop incb mov cmp xchg lea cmpsl pop push ds mov dec push push rol les add cs cld fbld lahf push and push xor jp mov ss ret xor lcall xorl pusha adc inc aaa push jne movsb adc sbb add pop mov notl idivl movsl or or je out negb sub and testb cwtl out lods sbb adc sarb adc jecxz loopne fsubrl push xlat out jecxz in push jl sbb lcall mov sbb call out fmul dec lcall mov lods jl ljmp push mov minps out stos jmp decl xchg enter cwtl jp mov dec xchg push rolb lds lret add push mov sub aam out (bad) lock idivb (bad) aaa mov adc out jb pop cs dec (bad) xor inc ss sbb (bad) jmp es and das add out xor jno,pn sahf aaa add rol stos xlat jle xor push rol roll into xchg clc mov test sub shr (bad) sti jmp pop pop movsb lods (bad) loop pop imul jecxz sub cld pop fcompp fstp loop in out push mov lods mov jae loope (bad) fnstsw pop mov or mov stos jp ljmp pop jle mov pop push pop (bad) inc push pushl fmuls int3 mov rorl ret push lds add outsl push lret xchg pop pusha loop pop dec iret mov dec and xchg loope push dec (bad) push pop xchg cmp les jns popl sahf xchg mov jo,pt outsb fs dec push ds inc mov inc mov jmp inc mov div or out cmp and clc mov ljmp add jmp lcall mov loop out fnop adc xchg fdivrp pushf jno mov test push pop fistp jno call (bad) (bad) fsubp jno push xor std (bad) (bad) jmp aam mov test pop jge les pop push pop (bad) (bad) mov pop mulb sbb mov xchg scas xlat jecxz pop rclb ret push les ds lret push into pop call ss xor mov fldl push lds mov out sbb movnti into inc push jbe popa mov sub das ljmp fildll or into test imul xchg aas (bad) push pop testb jmp adc pop mov out cs fiadd loopne (bad) fistp inc sub out imul in cmc stos rcr call push jl fimul rorb mov addr16 ds loopne jns cmp push ret jge js ljmp imul (bad) adc (bad) popa cld pop xchg out push lcall ret leave (bad) lret je iret repz rolb or in or lds repz push mov test mov push pop sub cmpsb push das sbb adc sarb sbb loop push neg push sbb dec push sub mov fwait int push out sbb adc sub and in add push mov push movb movsl outsb mov (bad) fiadd out (bad) loopne add stos sahf sahf cmp test lcall push push push das push dec repnz cld (bad) cmc in call pop mov push scas jp mov rcll daa outsl lds (bad) mov mov mov retw jne pop push push movl push lret into xchg je popf ret ss push mov incl or push mov scas sbb iret repz popf xchg xchg lock outsl xchg gs scas dec sub shr aas push adc adc cmp push sub mov push jo dec dec or fbstp sub sub cmp sahf mov jnp (bad) imul call fcom fimul mov (bad) (bad) fldl fdivl (bad) loopne out (bad) cwtl jge mov pop inc pop sub cmpsb adc bound pop pop repnz inc jns inc (bad) fstp out mov out scas test push cmc clc loope js push mov mulps pop push call pop aaa and lahf lcall cwtl push jb mov jecxz addl loope cmpsl push iret rcll cld pop xlat push fcoms and aam adc adc jle mov je cltd mov xlat sti divps push pop and cs in push add div scas hlt adc inc sbb cmp (bad) jg mov js add lea xlat fdivr xlat fnop lods jge xlat pop (bad) push fldl fdivr adc (bad) lret (bad) (bad) jp cmp adc out arpl sbb pop sbb and call fstps jmp ljmp scas jns dec mov (bad) insl inc pop mull pop rsm push cld jne pop push andl xchg (bad) popf sub pushf cmp mov jle es hlt jo sbb lret push pop rcrb stos or sar aad cltd push xchg jae jbe outsl (bad) gs in add mov stos pop xchg jns xchg mov lret or pop (bad) xor cmp test es xchg es or xor loopne ljmp xor dec push (bad) js sbb xchg scas fldt (bad) fcmovnb mov fild aad pop add mov pop fcmovnu aam cmpsl out lock lds cmpsl pop fbstp in (bad) cmp daa and (bad) adc jmp imul push ja das push sub and pop incl inc sbb push imul cltd test jbe icebp call test (bad) cli and into xchg jae push aam call mov ficompl int pop hlt and icebp cmp add scas pop xlat pushf push (bad) xchg xchg fwait cs and and sub pop lods cs pop (bad) sbb repnz push aaa add loop xor push cli call push es and xor xor dec data16 and dec movsl call (bad) (bad) aad (bad) aam pop cmpsb popf adc faddl out sarl call frstor pop (bad) out cmp cmpsl push mov pop (bad) xor dec inc sahf aas rcr fistp mov jmpw lock pop push push scas push scas push lds mov negl pop pop shrd std push push mov mov jbe push mov push insl pop int jno je mov clc pop aam fcomps pop pushf push fwait push xchg outsl (bad) pop xor enter test xchg push decb sarl (bad) pop outsb popa dec mov stos imul pop or ror adc add push push stos pop inc dec add data16 pop pop adc into push inc mov push add push xchg add xchg nop lret out (bad) out xlat int sbb pop (bad) fcmovu rclb inc test (bad) push jmp inc iret mov pop rorb fimul sub mov inc lds ljmp push mov fdivrp (bad) push dec sub (bad) call and je jne scas in xchg mov ja pop adc (bad) sbb (bad) adc pop xor mov stos xchg ret pop rolb sarl fstpl flds add test lahf mov push push pop mov fwait and ss mov mov sbb pop pop shrb add add insb fistp sbb pop (bad) lcall dec pop sbb sbb mov mov fsub mov (bad) flds ficompl add lahf jmp out ss jmp adc mov imul addr16 mov pop call cmp lahf pop imul pusha push push out ljmp movsl jno ljmp sub xchg scas push incb pusha sbb pop aaa jb jne inc pop mov addb lods xchg (bad) jno push int3 xchg add out fwait jecxz lods pop popf push (bad) lcall or test lcall dec jge es pop or cmp add pop adc push dec (bad) cmp xor add scas inc dec jmp pop pop dec dec enter mov rcl cld loopne mov out sarb push shl fadds out aaa add mov push push pop data16 adc div push stos or test stos loop sar (bad) (bad) pop out push in div in (bad) push xchg mov push scas push xlat stos sub outsb call pop sbbl push sbb aam mov aas call pop jno push push pop es ja (bad) mov (bad) (bad) sub cltd jge clts jp jp testb jg jbe pop popf push loopne pushf fcoms sbb lods fadds incb lcall sub push and cmp sub pop cmp repz outsl pop sub imul add and cmp add push out add lea (bad) mov shr mul rolb jo push js fcom ljmp push call iret pop mov out imull mov mov pop pop (bad) out cs nop mov push jmp inc cld pushl cmp push stos jb scas push ljmp jne,pt inc dec pop xchg jo mov push sbb sbb push push push pop outsb jb or nopl aaa scas add adc loop lds dec pop ds clts jbe fstpt cmp fildl fiadd loope fistpl dec xchg push cmp lea (bad) clc cmp andw fs inc cs cmc jmp pop in push aaa aaa pop std pop les lcall cmpsl push or sub sbb mov jecxz xor mov adc xlat push (bad) iret xlat scas xchg pop mov jmp daa xor aas add mov inc mov imull and (bad) cmp fs pop xor (bad) jns cmp push cwtl sub dec push jae iret fsubp mov jo and (bad) push or fistp cmp mov es push pop loope js daa das aas dec cmp pop pop (bad) pop pusha ret insl pop push gs inc mov fild pop (bad) cltd jbe ds ja (bad) lahf jecxz mov mov ficomp es push mov test es sub pop gs (bad) dec cs ds sbb outsl adc popa push add daa popl add ljmp pop push inc jecxz lret repnz fsub inc pop fdivrl fildl neg pop aad push out pop in ljmp adc fbstp scas inc lds pop sbbl (bad) push push cmp loop bound adc and test xchg and outsl stos adc stos push (bad) push pop jmp or je xor pop sbb jmp scas mov cs push out jne and pop and pop push pop push (bad) repz sbb pop push mov mov incb outsb (bad) cld shlb push pcmpeqd loopne jbe push ja jg into pop in push popf je mov dec and mov decb pop aad add xor decl (bad) lcall andb adc imul fldz rcr rclb (bad) xlat into (bad) fildll jo out (bad) (bad) mov mov sub push mov incl sub jmp out imul stos adc push out and imul out movsb lds (bad) cld addr16 xor pop out push ljmp pop cld adc ss out call loopne cs sahf xorl div and cmp jecxz and push and sbb dec push pop dec rolb add pop (bad) pop fstp jo mov xchg dec test cld test (bad) (bad) push fstps cmp (bad) loope push in out or (bad) lahf inc mov push into into imul dec sub mov and pop adc mov inc push test cmpsl daa push add xchg scas (bad) push inc cmp in iret in out rolb fprem push imul (bad) loop push mov mov sbb cs stos mov sbb scas push (bad) sbb call mov inc outsl dec sub incl fstpl cld pusha sub pop (bad) (bad) decb repz scas push outsl cli decl mov xchg mov inc mov pushl (bad) into fbstp sub and notl inc pop and and mov ds pop push push sbb add push icebp and cmpsb fs pop jno fisubr pushf push cltd jns lcall (bad) and push loop mov sbb or loop decl ljmp das adc in (bad) incl aad inc fiadd (bad) add aam hlt das das mov out not fcom or sub into lret incl adcl push add in sbb mov outsb mov test ja ss mov sub (bad) (bad) pop inc cmp out repz outsb scas out mov dec push scas scas push add inc cmpsb pop pop in xchg cmpsb sbb lds decl lock pop mov ds and mov push ds push sbb push movzwl jecxz clts xlat pop (bad) arpl pop not mov push cmpsb jae push fstpl loopne jecxz fistl or mov push push dec out inc incb mov pop and inc (bad) pop cs mov test mov add (bad) pop out aad push iret xlat and int out out movsb adc push mov push push out (bad) mov mov insb push (bad) ljmp push (bad) pop int3 mov cwtl jl pop xchg mov inc cmp dec (bad) stc hlt push mov lds or lods push scas (bad) lods scas in cs jb and imulb sub in lea ljmp addl (bad) push dec xchg pop (bad) addr16 and and andl cmp add xlat pop push pop dec jmp cmpsb xchg xchg xlat scas xchg push cltd je fiadd loope jmp fcompl adc shrl ss sbb sbb scas pop das cli fisttpll push (bad) out add ror sub push pusha pop mov loop push pop inc cs fist subb adcl div (bad) scas shlb mov adc movsb mov lods pop aaa cld icebp out jmp fwait jg jae das pop fildl outsl dec mov jb push lods push call loopne jae movsl call jne mov pop dec decb jge roll jno pop jle pop inc addb out pushl sub test andl push add jg mov nop call imul mov xor (bad) pop dec push pop mov popa lock cmp pop push push pop cmp mov pop out das bound mov fidiv jne outsb sub inc sub jl ret push push pop jmp ss pop mov stos test loop adc out enter (bad) out into movsl (bad) mov inc mov aas cmpsl bound push sahf outsl pop lds popa xor jo pusha inc push nop jle bound aam (bad) bound or pushl sub xchg jbe ljmp daa inc cs (bad) popa pop xchg out dec push scas push adc jo mov mov push (bad) sahf mov cltd pop lock je mov xor inc out inc (bad) lret jmp dec das fs or jecxz push insb inc mov push xor mov add add jne jg jbe add (bad) push lahf jnp xor inc (bad) loope jbe jge and (bad) push ljmp psubb inc pop decl ret mov mov out pusha rcrl dec outsb rolb xchg jg test cs mov clc pop scas mov je repnz in (bad) mov cmp xchg xchg (bad) jmp loop (bad) incb dec (bad) mov or or fistp rcl cmpsl sbb mov scas imul insb sahf stos outsb push lods push scas scas push add jl jno incl jp outsl mov jp adc inc mov push xor pop xchg jb and mov lahf (bad) js xor cmpsb insl mov inc cmp push sbb pushf cmp sbb push sti sbb pusha push (bad) bound out shl jmp pushf jle pop lcall dec sub and cs sub cmpsb ljmp lcall push arpl push xor das loop jmp (bad) imul mov out push out mov mov fisub popl push xor out mov mov mov mov ljmp mov iret mov sub mov lods push lea adc mov jmp loope mov leave loop hlt repnz mov (bad) (bad) jb fisttp sbbl cld (bad) mov xchg jne iret sahf subl out (bad) push xor mov dec das add mov jecxz sbb push and and push sbb pop pop inc movsb dec sub fisubr outsb ret xchg push (bad) fcompl mov pop cmp xchg lahf aas (bad) xor pop pop inc xchg pop loop pusha add lock cwtl fnop shr div int3 aam fisttpll mov or or mulw pop test pop (bad) pop xor testl scas mov jo mulb xchg mov jne sahf outsl (bad) pushf push mov lds cmc out in inc push mov push mov jae mov jg out mov mov scas sbb roll mov sti ds push das mov inc jo es inc xchg sahf push push and sbb sbb pop sbb test pop xchg push xor lea cs (bad) ds ficomp or inc mov (bad) push dec cmp xor sbb sbb add fmul aam shrl mov lods scas pop sbb sbbb (bad) jg push mov pop inc cmpsl test ror incl fs pop jl cs out add out rcrb mov push mov imul push sub out lods push scas push xchg or adc push orl iret das imul in out ds mov add (bad) mov sbb xlat in jmp pop push sbb outsb jo ds test insb sub mov mov shrl movsb dec incb repnz pop sub sbb and aad incl clc aam enter xlat lret rolb ss (bad) stos movsb cmpsb (bad) xor adc xchg lret and sbb outsb inc mov jg jl push popf data16 (bad) out es add adc mov (bad) mov idiv out sahf add inc pop adc push je stos fsubrs and and add push stc div decl adc (bad) cmc jno lock into sbb mov mov push pop pop (bad) mov push jmp push cmpsb jg (bad) xchg inc lods out (bad) (bad) (bad) (bad) pop lods lock jle aad push idiv cmp push or incl push jl decl sub (bad) jmp into loope int3 (bad) lret sar aam sbb popf pushf das adc ret and ss push inc jbe inc ljmp push int3 mov mov pop (bad) mov lcall mov mov push pushl sub test (bad) inc jno lods push rcl (bad) jecxz sarl push andl imulb iret xlat scas push scas jae decl xchg mov mov (bad) fmul ret aas sub ret mov call add popf xor psubb fnop pop pop (bad) push das shll jns (bad) fcomps loope dec test dec inc dec scas mov pop pop add (bad) jmp stc (bad) repnz rcl (bad) mov push lret loopne dec push sub add or jle dec push mov fcmovbe (bad) (bad) les lret sub mov mov lock add cmpsb lea das pop adc mov idiv cmp test movsb (bad) (bad) jecxz cmp inc je pop adc push scas push xchg mov lcall jo pop mov push jb mov mov sbb (bad) fst lret jmp ja cs mov xchg out push adc subl inc and lods (bad) pop jmp das dec xchg je incb xlat shll in (bad) mov (bad) dec and pop jb inc sub add daa jmp jg in xlat roll call out fwait and call xchg mov mov (bad) mov rolb data16 lret ds adc mov cltd outsb push jge cmp cmp rcll jle pop out stos pop or div sub aad call (bad) (bad) push mov test inc ljmp imul bound faddp adc outsb imul pop jg movsl xchg incl jg jmp jne call adc jecxz ss mov cmp cs xchg outsl pop (bad) fsubl or outsb xchg push lds hlt cld daa or es pushl jb and sbb or aad push pop out std incl loopne pop leave iret (bad) fdivrp mov jle mov stos or decl mov xchg jns lahf das add aad rol mov cmp insb mov lods (bad) mov xor pop push call (bad) fucomi jecxz push stos test pushl xchg addr16 (bad) push and push lods push mov jbe adc push mov frstor insl pushw lcall sub leave mov rorb mov jne rol mov adc inc xchg aaa call (bad) mov movsb (bad) aad push out jnp lcall imul adc xchg sub push or add push in (bad) iret push testb jle addr16 push pop sub mov jle mov loopne out jne xor rclb xchg jle cmp lahf out add mul (bad) add call xlat cs hlt pusha mov (bad) (bad) (bad) jmp pop sub pop imulb mov pop outsl add xchg clc idiv enter lds ret (bad) mov pop or bound jns das dec dec out mov cs jno jb sahf jb jns mov sbb push inc cmp outsl loope out push adc adc rorb dec jno sbb rcl idiv mov xchg push push (bad) jae pop push pusha or aad ret (bad) push jecxz jmp outsb pop add jno jge cmp push data16 xchg sub leave test ljmp and rolb (bad) jmp repz stc testl stos xlat mov incl or jge (bad) outsb pop cmpsb sub dec pusha inc incl shl clts dec mov outsl faddp adc jbe je,pn jbe lahf pushl pusha cmp fwait aam insb push sbb out lret (bad) aaa das sub insl sub and pop sub jno scas inc lock add pop (bad) iret (bad) out pop dec test sbb inc adc jo or lret pushf adc xchg mov jo loop out pop decb push xchg notl mov inc ljmp sub sarb out hlt jl mov andb push inc dec adc ljmp iret mov scas mov cmp lcall jl aaa hlt jne mov xor out outsb push pop mov push aad (bad) aad xlat fwait jno imul cmp mov or pop cld pop and icebp int push loopne iret mov lret popa dec aas and cmp pop mov push (bad) jmp push fs xchg jle cmpsl lea adc mov enter sub push stos js push cs add rclb in cmp ljmp (bad) loop iret dec in in clc jg arpl test pop lods imul and dec mov pop outsb enter (bad) (bad) into add scas movsbl or and out incl inc xor iret lcall outsl push push fcos orb cwtl orb push cmp test imull (bad) sub dec sub adc repnz int jno into int add mov int3 pop and pop xor push xchg shrb popf subl mov push push pop sbb pop jo xchg scas negb push xlat (bad) addr16 push or out call das addps or fndisi(8087 out das cld xchg dec jmp movsb bound pop clc pop clc jno inc shrd jle sub pop xor mov pop dec test pop xor test push iret js shrl jg push mov out pop cmp sbb insl inc sub cld or push cltd or jo insb outsb pop cmp cs idivl add push (bad) (bad) out iret ret int (bad) dec mov lret sahf lds mov inc sub out test rol mov mov pop push arpl lahf subl mov push (bad) xchg or (bad) or mov iret add stos dec out pop sub push pop mov mov testl adc idiv mov pop incl pusha cmp cmpsb fs gs addr16 loope (bad) push orb inc add pop xlat pop and and mov jo jge ss jp sahf loop call mov mov adc xchg push cmp mov (bad) lcall hlt sub jmp negl adc sub push icebp pop inc sub movsb fmul int add int3 shrb mov dec cmp idiv insb inc daa xchg mov cmpsb lcall sub xor aam adc cld js,pn xor (bad) (bad) mov pop push imull out popa jge das (bad) into fs mov in notb xchg mul lock sub jp jmp ljmp stc clc or mov bound loopne push pop scas push cltd pop cmp sub les mov decl xchg cmc jno loope repz ds ret popf call jp add sahf (bad) incb (bad) aaa and and mov jno outsb cs xchg jmp outsb push insb outsb dec stos dec and xor push cld sub imul int (bad) fcmovne idiv push cli pop fcmovne fidivl dec int pop pushl (bad) aad mov notb ds stos out mov xor into and adc div idiv das lods xlat pop mov dec (bad) fidivrl fist (bad) ljmp idivl xchg mov arpl xor cmpsb pop lods cmp lock mov iret push pop or outsl daa or sbb cs ss je,pn das out inc mov iret (bad) js jnp cmp out or pop mov outsl (bad) xchg out jne jmp xlat cltd insl (bad) imul jno lds sub divb call popa pop movsl out or mov into (bad) aad lret lret mov mov loope pop loopne xor pushl ret mov out (bad) enter stos (bad) aam imul and inc push pusha (bad) mov lea ss xchg push pop mov mov in (bad) (bad) push xchg mov or out in repz outsb mov push cmp dec mov cmp ds sub stos push scas push jp notb mov es daa inc inc (bad) ss loope mov mov (bad) ss add lods xchg test mov pop mov ds test dec mov insb (bad) lcall fldcw mull loopne push aam pop pop lods mov shrb lret in jmp (bad) notb aaa (bad) mov andl pop sbb idivl pop pop dec push out adc pop push out neg test rolb pop into into lds cmc xchg jl (bad) xlat mov and loopne in (bad) testb cli cld cld sti mov out loop cs mov lahf dec (bad) pop aaa push popa mov inc scas cmp and push lods addr16 push add rclb les daa inc mov test loopne push pop out pop jbe jl inc push out fst int mov push push xor adc imul shl push js dec sbbl xchg movsb test aam test imul pushf loop push out leave add iret enter not movl xchg push call jnp scas addl sbb mov lea fcomip sub and push lods clc adc mov fsubp out pop cs jmp fcomip fildll mov mov mov cli inc out idiv out rsm add std cld sti xchg mov lcall push mov (bad) xor xchg out push inc es orl hlt xor push bound decl mov loope out (bad) (bad) push (bad) popf in cmp es xchg push aad and and mov dec dec xchg push push sub sub (bad) dec icebp mov enter leave sti (bad) (bad) outsb mov push fisttpll xchg mov lahf xor push incb inc aas and adc push dec mov xlat fistp add or fsub cmpsl fst mov loopne push push pop lods dec loopne imul repnz fmuls incl mov jbe add out xchg movsb nop out inc pop jbe,pt push push mov jae inc inc (bad) push cmpsl stos subl lcall in pop push pop xor or lret outsb adc jno das ds push mov xchg outsb pop notb (bad) fistl push lret lea xor pop sub movsl out and pop or sub sub inc icebp mov sahf fdiv (bad) movl (bad) sub add sub (bad) stos pop xor ljmp ds lods js (bad) fucomp push out fucomip loope jno xor fucomip (bad) idiv inc or mov mov (bad) mov jmp loope (bad) push fidivr (bad) cmc (bad) pop pop push inc sahf dec add push stos imul (bad) daa aas pop push mov sbb (bad) jl push mov inc adc push cmpsb push call xchg imul rorb push push clc inc sbb cmpsb push push (bad) or add adc iret lds loop leave jge lcall jnp shrb notl outsl dec mov sub pop mov mov pushf (bad) fcmovnu in out fcmovnu in xor out out (bad) fisttpll jecxz repnz fildll stos out pop das icebp pop add fnstcw pop mov jmp sub push cmpsb jbe clc pop ja scas insb dec pop gs (bad) jns sub aam scas xchg popw clc add xchg push push xchg movsb mov dec divb push (bad) ror push push aam push (bad) jge int3 push pop xor cmp or and lcall mov int3 mov dec push pushf dec pop fcmovne (bad) jo pop inc mov out test pop mov cmpsl xchg je mov cmpsb fsubrp into fsub push push (bad) neg fucomip (bad) loopne pop push stos imul push cli sti cld out dec pop test out faddl xlat pop repz (bad) mov push out push bound por push incb cmpsl test fwait jo jbe dec pop dec xchg icebp movsl subl addr16 bound stos fwait sar push mov push inc fisubr mov add loop into mov pushl sub and ljmp add mov lcall fldcw xchg out push imul push mov adc out mov push outsl out push mov and jle push fcmovnbe repnz fcmovu (bad) fnsetpm(287 push fdiv fsub movb inc mov idiv xlat push jb adc mov cmp out rclb pop js negb mov inc push test les jle cmpsb dec incl dec das daa push daa inc (bad) in pop lahf and or fs enter bound fs ljmp xchg pushw sbb out das pop test push xor cld mov pop fmulp into push adc movsb incl (bad) addr16 dec jne push add es and xor inc scas jg data16 mov mov fstp (bad) (bad) ficom pop (bad) in ljmp (bad) fildll out pop std std (bad) out inc lds iret pop sti pop adc cli cmpb mov sahf pop cmp cmp sbb aas pop test stos jge cmp insl dec push jo lcall mov adc aam pop out mov xor push mov iret (bad) pushw mov xchg push cmp push loopne and or push xchg mov pop in push (bad) jbe leave unpckhps enter inc into hlt xchg sbb pusha push mov dec ljmp inc mov lret mov neg loope push mov fcmovu (bad) out icebp (bad) clc sub mov adc fcoms push sti sti clc mov popf mov add js mov test fidivr xor pop lods outsb pop xchg jecxz push scas outsl push mov inc daa push mov inc adcb add sahf pop mov pop xchg scas or xchg mov stos es lahf pop cmp or jb (bad) or outsl repz jmp leave mov lret push ret outsb int3 inc dec aaa imulb adc push push jg lods sahf cwtl (bad) inc xchg dec push fidiv mulb fcoml (bad) inc pop sub (bad) neg fsubp dec pop imul scas cmp push sbbl add or stos in rol mov ret pop (bad) icebp pop sbb sti psrad (bad) (bad) or loopne push popa data16 repz inc pop test mov cmpsb mov dec sub or push mov aam mov add cmp mov ret test mov out int3 push fs test push and push notl call enter ss fcmovb lret pop inc jbe,pn add iret lahf pop ljmp push into xchg cmc xchg pop rcl loope outsb pop push or mul fcomp imul mov std mov popl out mov ror sbb ss push out and roll js nop (bad) pop clc pop ljmp hlt mov jle mov (bad) icebp and pop outsb mov push insb scas mov scas es pop jle,pt or outsb mov push push jl and pop inc push lret mov push lret push mov push adc ffreep (bad) in out push jmp sbb pmulhuw mov fsubl rcrl inc mov add loope into js mov clc sub (bad) int push aad scas mov fcomp neg out in in call push call std out (bad) inc js out hlt icebp in push arpl xor push or scas das mov pushw lods xchg (bad) scas out out inc pop mov testl in negl add mov rcll cmpsb ret sahf sbb inc dec push iret movsb xlat pop imul mov xor xor push outsl add or push aaa and adcb addl push push loop jbe jo iret and (bad) add or sbbb leave mov ret cmpsb jo rcr push mov adc push jle incb cwtl mov call into jne stos mov rol out fnstcw mov out fnop neg fcom fsubp inc mov jmp mov stos push sub mov xchg or cmpsb pop dec hlt sub dec lahf add pop pop into jne insl aaa dec test sahf jbe repz hlt jno inc popw std cld (bad) andps addl rcrb movsb scas xchg mov push movsl popa ds fs subl cmp inc lods mov jns jg (bad) jmp add jno (bad) mov fisubr addl (bad) mov mov pop sub jmp xor icebp fcmovu ret (bad) or cmpsl stos dec inc sub add jg add imul je push out data16 (bad) xchg lret jbe (bad) fnop add mov (bad) cs lock dec pop push outsb cld fisttp (bad) fcmovbe lds push xlat pop inc std inc mov aas mov das jmp imul lock adcb in out push lret mov repnz xlat mov cltd cld repnz rolb xor scas rolb call fildl rorb mov push inc push push movsb cmp imul inc cmp div push mov dec (bad) icebp ret mov pop insb cmp mov pop push test stos sbb repnz testl loop adc add mov (bad) (bad) sbb (bad) push sub test xchg mov int3 js xchg mov (bad) int pop das mov mov in mov loop clc fcomip fldln2 sub ljmp std add ja pusha daa (bad) push sub lock xor test pop jl push nop jae daa out or pushf mov jmp and pop iret out pop sti cli lock fs push rcll call cmpsl addr16 push push test inc clc stos jecxz jb mov jne push xchg addr16 insb out fisubrl jge mov bound call pop (bad) das adc push imull loope or enter sub out (bad) mov stos scas xchg notb adc lds mov call jl add fmul aad fcmovne sub (bad) repz push testl push repnz inc aad out aaa or fwait jp hlt lock insb inc daa jne pusha mov push pop popa (bad) mov test sahf sbbb jmp loopne xchg aas push mov test lock fldcw push cld in sti in cli cmp push inc aad xor loopne mov push movsl (bad) mov shld imul push stos notb inc adc pop aas (bad) aaa clc cmp cmp sahf mov mov jl inc sub mov or push sub adc or fild (bad) call repnz ffreep (bad) (bad) lea (bad) (bad) sub ds jns into mov test push int subl (bad) (bad) test sub sub lret (bad) jnp cmp mov xchg out and mov stos xchg test ret xchg and and ds xor jg and (bad) mov push cmp leave mov test out ljmp imul incb jmp icebp cs das ja jle mov cltd shld cmpsl xor cmp inc push mov out push inc insl jle xor mov test xchg notb push jge mov xlat mov jg cmp push add ljmp and push out push xchg push push fistp jns mov jmp (bad) push sub out jg je or test test out mov dec mov (bad) notl out inc es xlat (bad) pop xchg mov pop ss enter scas cmc cmc out std std testl ficomp sub fimul (bad) test out push xchg ret (bad) cmp test mov pop cli stc clc data16 outsl imul scas dec loop scas pop fwait sbb repnz insb adc aas iret mov mov (bad) into ss push std jmp xchg lret out clc call jo push sti hlt outsl in fidivr mov js movsb push cmpsb push cmpsb imul outsb dec push jae jecxz xor jbe inc and aas (bad) je inc (bad) mov push jl xchg icebp push push idiv jnp das xor push (bad) mov jg mov inc ffree mov ret insl popa (bad) mov aaa xchg pop ss pop ds jecxz,pn fsubrl out leave roll lret sarb mov (bad) not aad addps out dec sti imull pop lar mov jmp (bad) jg lea nop ja jae xor cmpsl mov aas bound dec rol imul rol xchg mov out les sahf test pop (bad) lock pop outsb push mov inc mov sarb inc mov mul imul or not mov pushl call push cmpsb push (bad) xlat movsl rolb insl inc stos push stos ljmp cmp mov push jno idivb pushl mov push mov xor or add mov cmpsl lds add call ljmp in sbb fcmovnb mov (bad) daa sub inc cwtl nop mov push cmp enter push int sarb (bad) shrb fnop push xlat (bad) cld push movl mov pop push jg scas mov addr16 mov push repz (bad) loopne rcrl dec add outsb pop push xchg pop or jnp pusha jl insl outsl testl arpl imul cs add inc mov mov pop or dec (bad) mul push (bad) (bad) in in sbb out out es mov xchg out dec mov mov push push movsl (bad) movsl lods outsb int3 push (bad) dec movd clc outsl mov popf push xchg imul mov icebp clc mov pop push mov mov mull sub cmpsl (bad) mov (bad) mov fadd ret ljmp (bad) faddp int push aas cs iret daa fdivp xchg dec test not fistl sahf je in loope repnz out std jmp outsb and das das lock xchg adc nop out stos (bad) pop xor jge sbb call dec pop jno or mov adc jno xchg lock sub mov inc rcll rcrb (bad) adc adc xor iretw mov je mov jecxz jp pushf repz push lock (bad) ja mov ret push dec orl jecxz jbe jne push je scas ja jbe bound scas push push push mov xchg add or sbb sub mov fidivr push cs mov incb jno mov ret icebp push lret shlb (bad) into shlb movsl mov (bad) fcomp xchg lods bound in or push out aas aaa loop jle and out push test je test enter dec sub out insb inc cmpsl pop mov pop push or idivl pop add push lods xchg xchg std sbb sbb test test addr16 lock test ss xchg jo and sub enter repnz loope hlt xchg jns stc stc mov dec push sarl push and scas mov push ljmp pop sbb jbe mov and sbb jge pop stos mov inc out inc icebp push add les adc push inc leave ljmp shrb loop sti div out cli dec jb sub cld pop sti xchg push add fisub push and cmp xlat (bad) xor sbb mov mov aas add mov cmp pop out ljmp (bad) add cmpsb mov into pop sub push sarl push add das repnz bound inc movhps cmpsl push jns jno,pt in das pop icebp push lock cmp hlt (bad) inc and out cmc dec push cmpsb or push push dec out pop dec push dec cmpsb (bad) test jae stc shrl js jnp cmpsl bound mov ret (bad) mov mov cmpsl mov lret or pop mul (bad) jg stos or nop out idiv out and cmpsb cld pop cli (bad) cli sub add xor xor (bad) adc dec push test sub inc aad inc (bad) pusha push roll xchg (bad) and pop daa lock pop dec rcrb add pop pop sbb push aas push jo push (bad) jb pop add pop daa inc lgs scas (bad) (bad) mov lock sti ss std out fiadd cli adc push cmc jmp pop dec and push in (bad) sub mov jb insb (bad) mov sub cmpsb cmpsl push test stos ret xlat jne push (bad) mov mov pop add dec mov bound jmp ret mov push mov inc mov leave push leave lret lret out mov loop out in out push fdivrp or (bad) pop stc jl sbb cmpsb xchg xchg pop jp cmp pop xchg js lret dec inc inc in out sub xor imull pop (bad) in jge cs outsl push cld std lahf loop cmpsl jne cmpsl negb mov popf inc es repz add (bad) mov cmp and das sahf xchg data16 test ljmp xchg fistl std in fldl fdivr fcmovnbe or out xor push out mov lods jl mov push movsb outsl dec push cmpsb push test (bad) test pop push sub push push jle jnp scas outsb dec pop add out mov out fld mov mov (bad) enter ljmp cmpsb iret imul insb jne stc out dec addb fwait subb add addr16 (bad) popa dec add and mov movsl push and (bad) xor or push rcrb in xor call popf scas outsl inc daa push dec pop das xlat push addr16 or mov mov ja (bad) mov shrb or cmp push outsl fwait mov insb ret jp inc aad pop push pushl fildl (bad) jmp fmuls out ds mov mov icebp push les sub out mov popa addl and add data16 jmp inc xchg cld inc push (bad) faddp mov fadd mov or notb in mov push pop out jmp out cld clc (bad) or mov out cli clc adc repz mov mov push mov cmpsb lret popa add pop mov pop es movsb cmpsb ret add xchg mov out sub adc jb sub pop call push rcr pop aas cs (bad) xchg push push cmp jno jg add add (bad) aam js xor add jle xor nop outsb mov sbb or pop push mov pop pop mov iret push (bad) ljmp repnz fcom (bad) cs hlt xor push jecxz jbe sub sbb (bad) mov mov push mov lds pop ja sti scas and mov pop mov (bad) fdivrs jg (bad) leave into test jno sahf clc hlt (bad) into clc lods xchg out push out pop idiv incb push push jns cmp lahf (bad) lods sub test mov popw add subps sub push popf subl pop xchg mov movzbl xchg add (bad) jae sub push push or pop das mov cli jp mull ja shr mov xlat rorl iret outsl aad sbb out jae lods jno loope (bad) ficomp cmpsb dec fildll out jns jmp dec scas lret scas xchg out fldenv push call push aam cmp mov rcl pop out scas pop jo add in shrb xor aad push push movsl push test xchg cmp push mov or inc fwait je fildl xlat mov pop push out clc lock add notl fcompl fcomip pop clc cmc das xchg subb pop (bad) enter js push pop das call mov push push (bad) ficom ds jne cmp or push or mov push dec mov pop lock nop scas mov das push sub into movl lock out xchg (bad) xchg mov ds das cld cmp (bad) out cmpsl mov lods and jmp adc push (bad) sahf test lock popf jg ror dec ja jno out popw mov mov faddp lods pop add cld in push jns sbb iret rcr mov into int (bad) dec mov mov adc out iret (bad) inc cwtl xorb or jbe mov xchg jo in jbe rorl mov stos (bad) negb and out stos push add loop lcall adc shrb imul mov dec movsb mov lods rclb icebp (bad) dec (bad) fisubr aaa cmc out (bad) ror addr16 ret mov sahf scas nopl iret mov mov push pop jge sub sub decl lea xchg outsl adcb lock jo or sahf push sbb xchg (bad) das int3 mov add cmp jle sahf cmp out jg andb ljmp out push in push shlb pop xor mul loop push loop and lret ds jle dec adc movsl pushl jecxz adc push and cmc fcmovb idiv lock xchg aam (bad) sti iret cmc jle push negl std div imulb sbb jmp dec sub out jp cmp ss repz push mov pop insb inc sub fldl mov pop pop ds push roll mov cmpsl scas xchg jp ja enter pop fildll movsl outsb aas push cmp jnp cmpsl add push aad in pushf mov ja mov scas pop mov add jp cmp and mov jmp or jb xor fist cmpsl cltd mov rcrb outsb insl inc mov push sbb fld out inc dec jae imul lret loopne pop push mov mov ret push loope data16 loope fldl jecxz push fsubrl shlb nop push mov clc in sahf cli push sti cmp cmc icebp ss test pop scas dec pop add inc inc popa add popa push jl xchg int3 mov push dec ss push and shlb lock inc into rol push add dec inc or jbe add rcr daa (bad) cmpsb test jp add push outsb inc xchg cmpsb jg lret push add (bad) push and in pop pop mov mov dec cmp ja mov cwtl add test pop xlat push sub data16 movsb mov pop mov sahf jecxz iret into int loopne sahf mov (bad) enter fstp (bad) mov mov push fisttpl clc (bad) push call mov add (bad) in pop xor int3 test aad std icebp in repz fwait in hlt lock sti cmc hlt cld jmp test es mov jne popa dec orl sub pop pusha push dec ljmp xchg (bad) repnz cs pushl sub dec pop es (bad) dec push pop rol mov loopne movsb xchg not scas pop dec sbb test jnp dec xor fdivp add xchg sbb nop ds add or sub push gs (bad) mov push incl roll movsl xchg push icebp add (bad) scas es inc cmpsl sti (bad) test popa cmp mov into mov scas mov neg lret push fmulp loopne pop icebp (bad) out ffree ret insl cld cmp out flds hlt aad aam xlat cmpsb adc xor out dec (bad) ficoml sar lock (bad) cli repnz push repz lret pop out cld gs jo push mov inc nop (bad) jb stos call pop (bad) mov push sub pop ljmp pop ds xchg mov stos pushf outsb cmp push xchg (bad) sub pop push inc adcl not fidivr fimul into sti stc (bad) (bad) ret movsl clc jg lods lahf das lods cmc push mov (bad) and pusha inc dec pushf add leave rolb add inc psadbw incl rorl inc (bad) fild je fidivr adc aaa loope inc out out popa jg add jle (bad) fld mov mov mov into mull cltd data16 push fmulp (bad) ja xchg push clc fmull neg lds cmc fcmovb sub (bad) mov adc fcomps in fldenv jmp cli icebp in push repnz sti push push bound pop cld repnz inc je leave xor fsubrl icebp mov inc ds sub or adcl sub xchg hlt repnz aad xchg outsl enter pop ret inc pop daa push mov push mov es mov mov (bad) xor dec sub pop dec test in add sub ss add pop data16 mov xchg cmp pop fidivr xchg jbe pop or pop jo clc dec xchg xchg (bad) test andl mov cmc adc loop stos add sub in fistl (bad) into and idiv (bad) cli data16 jo push clc push (bad) testl adc fcomp push out fcomip std dec cli lock push jmp or aas aam psubsb popf push ret movsb fwait mov dec sub mov pop cmpsb jo loopne push addr16 movsl xchg inc and jmp jns sahf dec lahf add mov push mov sbb pop lock out outsl data16 aaa add lock push push xchg scas shll packuswb (bad) jbe inc sub or mov jbe inc dec movsb sub xlat nop out fisubl (bad) fistp test push mov or (bad) movd push mov lret xchg pop mov into cli loope pop mul fimul es es pop (bad) cmp (bad) out getsec adc jle rcr std jo aad out ss es or mov (bad) stos test mov xchg mov loop cmpsb xchg cs ss inc cmova sub fs fwait dec loopne inc and fs push sbb push pop into jg xchg repnz mov adc jge mov xchg xchg push (bad) pop push mov negb in out cmpsl loopne hlt (bad) dec into push es pop outsl into pop sbb dec mov xchg ret inc pop or mov mov dec add data16 xchg sub imulb pop (bad) (bad) stc ret cmp es dec inc outsl sbb push fsubl scas cld out (bad) mov pop out jmp cmp xlat push data16 es icebp popf clc aas add es (bad) jp pusha push sbb xchg sahf popa (bad) push adc inc cmpsl (bad) jno adc call fadds inc je je pop sarl jmp pop push mov clc cli outsb jb das jle mov xchg dec xlat inc cltd mov fmul les add mov push inc and movsl popf ret scas mov scas mov mov mov (bad) ss mov push push jmp out pop into push arpl loope out shrl add add daa (bad) push in ficoml ficom notb inc mov pop std mov xor lock imull push je aaa cld ror ret ja push and pop xorps sbb dec (bad) sbbl sahf rcl test sbb clc inc js cmp ds mov out push mov (bad) das add mov inc jne (bad) es daa pop mov mov in popa add loope ret pop jecxz imul adc (bad) notb (bad) lret jmp out (bad) and push sahf in cmpsb pop mov and out push int fsubp roll sub sar clc loopne jb rorb cmp pop pop push pop es xchg data16 call mov push into hlt in scas leave call pop fwait testb sub push mov adc movsl data16 stc xchg add clc div add add addl inc mov hlt xchg push outsb pop cmpsb mov xchg sti push pop mov push ss bound (bad) mov fisub push je cmpsl ljmp out out pop int stos sub (bad) int3 push loop (bad) in mov push out add jmp or fildl fnstenv adc js iret (bad) in fisttp push push popa imul aad sub mov sahf xchg mov dec cmp dec sub femms pusha xorl add mov push mov testb add je pop pop out je ficomp adc inc lods mov clc (bad) lods cwtl xchg es pop push out jb push pop and lods xchg andl jmp (bad) int push outsb in int3 jecxz fdivrp in inc push push jge xor divb pop (bad) jmp leave mov push loope in in fiadd in push outsb out arpl stos stos (bad) scas mov push cs mov dec loop fiadd xchg cmp scas or add push or mov mov cmpsb ss xchg pop nop iret iret jbe adc pop xchg jmp xchg mull out jns mov push lock lock out stc fdivrp out sti in cld fucomi xor in lret in push sar push push push mov rorl (bad) push or jnp int jge cmc push fnstsw loop pop mov push in pop jecxz inc jmp and ljmp mov push es ss aaa addr16 add popf test push add mov lods scas mov daa test mov cmp push (bad) lret and lods sbb pusha mov loop pop subl es in out out fstpt out out int3 push xchg jo adc lret (bad) rolb and mov out pusha cld or stc call add ljmp outsb jmp loop jbe cltd pop in outsb jmp pop mov xchg push int mov cmp push je xchg cmp test pop pop scas shll push popa (bad) lret sbb xlat (bad) outsb mov xorb mov jg dec mov sub adc outsl push sarb cmpsb mov (bad) mov movsl mov int3 mov cmp sbb mov mulb (bad) push mov es push in loopne pop ljmp pop fmul rolb push into test fdivrl dec pop push push sub push xor mov loopne out push ss xor mov xlat rcr scas out loopne ljmp insl push lods inc or std cmpsl out push lret add pop nop pop pop call and mov pop add clts jp xlat neg cmpsb cltd pop cwtl out push ljmp fdivr out es aam test in mov sahf arpl adc xchg daa iret mov or cmpsl lods cs add add pop mov popa jecxz aas sub movsl (bad) push ret int inc add notl scas into jbe pxor pop mov (bad) call ja fcmovbe fcoml fsubrs fildl test call push sub push es mov or pop dec ds push ret dec addr16 pop popf push iret pop out jo js (bad) es pop (bad) out add pop xchg lret lret mov fmulp faddl rorb out mov adc clts loope lcall std push mov flds push fadds sti out jecxz mov add in les mov push xor pop cmp xlat jg mov (bad) jge es inc test neg (bad) sub sub out out ret mov es mov inc sub push adc push rcrb js xor inc lea sti cs fmull cld out adc ss aad push xchg dec push std pop es mov gs cmp push add sub dec inc add mov test dec pop sub lret es push dec les test mov or popa push in sub jle pop fsubrl es mov les or push ljmp rcll add ss inc mov out jg stos and xlat dec jl add push aam (bad) pusha je ja rcll ds (bad) ljmp inc test push loopne jl fisttp fmulp push cmp adc fidivr push test pop push and push scas cltd jle push (bad) out out fcoml lret imul push iret testb cwtl out or lret (bad) mov lahf inc adc stos inc sbb orl mov adc pop idiv decb cwtl push xchg out stc (bad) sub dec adc mov into add stos pop push (bad) into incb pushl jecxz inc mov pop test std loopne pop cld dec dec repz scas neg ret mov ffreep inc (bad) jg add fisttpll leave add rclw sbbb enter cmp rorb in add divl pop jnp flds mov in pop add pop pop xor (bad) xor add jbe pop jg aas and pop cld cpuid fs xchg pop inc xchg sub add dec xchg inc xchg cltd add push jb leave add leave xchg test add add nopl in push pop aas jg pop repnz push add pop jb pop je aas es mov or or in or push adcl test and popa inc mov inc pop rcll loopne popf (bad) add fildl fninit mov mov fninit fninit (bad) fninit fninit mov fcmovnbe fninit fninit fldt mov fninit fninit in lods mov jecxz je add (bad) mov mov mov fnstcw cli sub das daa push add mov and and ja sahf (bad) movups adc adc cs dec aaa adc outsb arpl iret xor iret movsb add jo and pop add cmp push jp add sbb push data16 adcl negl xor cs sub adc xchg pop sarb and inc mov cwtl inc dec xchg lods push sub mov fucomip push lahf or movlps jg lcall sbb sbb repz xchg dec push jg adcb jns jb pop iret lds pop xchg aas push xor and xchg scas and insb inc lds push sub testl sbb out imul imul xchg dec push mov add test push mov mov jg and or and invd mov pop mov mov add push stos push mov cmpsl notl pop inc and int scas and es push push adc mov inc push cmpsl or add dec ret sub out adc ficomp aaa ret data16 outsb push dec js into (bad) decl xchg push mov das sbb mov loope addr16 lock mov push cld xchg insb push decb incl push pop cld (bad) (bad) cmp jne xor push es pop sub or sbb add dec sti mov (bad) data16 dec push jp dec mov rcll push or shlb lods (bad) inc push xchg sub hlt sub test inc (bad) sbb repz dec sbb or push add sahf xor hlt mov jecxz jnp,pt mov jbe jo stos mov sahf je fidiv pop jge push inc xor mov into arpl jg outsb popa cmp push sbb cmp or repz or movsb sbb bound xor dec xchg and push push lods and xchg add dec or or inc psadbw hlt xor and out ds hlt ljmp mov push cmpsb nop push xlat into movsl mov shrl xor stos lret sbb lds insl push mov xchg pushl pop (bad) nop test call adc push inc sub (bad) sbb adc pop xor lds sti dec and (bad) push add lcall pop and adc adc lahf movsl and push and call sbb adc jp dec ss add lcall (bad) scas divb decl cmp into jmp aam (bad) jg aaa es call enter mov inc stos mov (bad) mov xchg (bad) fwait inc test aaa enter push push ret xchg cmp push pop mov xor pop dec loopne mov pop and inc sbb ror adc dec or out dec aaa movsb and dec lahf daa mov ret inc aas pop ss nop push prefetcht2 dec pusha sti lcall out pop or lahf rcll push ror push fcmovnbe call fidivr jecxz xchg loope sar fsubr iret mov or mov pop fiadd adc push and movsl inc push insb js mov xchg test add data16 movsl call mov mov cmp gs outsb inc es ljmp mov es sahf out push ss or aad jbe test inc aaa xor jmp fisttp fwait test aas and outsl ret jb cs mov test std in xor sub cmc loopne push jmp push imul (bad) mov lret mov cmp mov insb (bad) jnp push xchg aam out into arpl js dec ljmp inc (bad) jns dec push pop jmp xchg jo mov jno scas push test and mov mov data16 mov pop inc jecxz add mov sub jo icebp push push adc push xor push sbb movsb push mov adc push xlat rclb movsb inc daa sbb sub inc or outsb pop cmp mov mov push fstpt dec nop sbb pop ljmp (bad) fcmovne sar mov scas jle mov (bad) jmp popa mov dec fadd jae dec into mov mov pop jle mov andl insb pushf (bad) nop imul mov test xchg pop int pop andb stos mov lods imul sub or and cmp adc cmpsb push sub sbb mov bound outsb sbb add mov dec (bad) std xlat daa sub adc xlat cmp sbb je sahf xchg (bad) in push lock call mov mov call mov inc jle mov xchg outsl out push dec pushl push es repz pop les (bad) out mov movsl test imul movsb and adc iret ja pop dec inc mov mov jge mov lds lods scas mov outsb shll jmp pop cmp sbb cmc icebp cmpsb mov pushf dec ja push pop cs addr16 sbb je or add xchg cmp push xchg movsb sub add movsl adc mov cmc xchg xor or leave cmpsl xchg (bad) hlt in xchg lock jp ljmp hlt frstor mov sarb ljmp (bad) insb imul inc outsb jae adc mov hlt adc pop (bad) jbe into mov pop outsb mov inc push es cmp pop sub or sahf inc xchg sbb nop (bad) dec push pop add out pop xchg or lcall nop mov (bad) xchg clc adc add sbb xchg sub jecxz jno shlb sbb mov push or sbb or push add sub aaa fwait clc dec sgdtl jl lock loopne (bad) or je jmp loopne jge enter mov lcall sbb sbb inc mov inc jmp ljmp jmp jmp mov inc aaa inc ljmp aad imul movsb sub (bad) xor cmp imul push outsb xor push sahf ss sub cmpsb xchg (bad) fnsave aam into jns and imul sub push xchg sbb adc xlat dec nop push jo pop cmpsl jmp movsl fimul jg movsb ss popa outsl inc es mov adc add (bad) sarb xchg sahf jl popf push push and mov mov mov out fs repnz jmp rcrl ficoml push xchg je ret add out mov inc cld inc cs sub (bad) and or inc ss inc decl or into lea pop sub mov incl insb dec xor or imul mov push jl pop and inc xor sub sub xor push add decl or pop mov mov decl inc sbb xchg jl icebp out mov into jecxz xor fcmovnb les mov pop insl push nop into xchg je ljmp dec xchg dec loop ss jmp popa mov sahf out out sti fcmovnb (bad) out clc repz xchg insl outsl inc inc xchg jb mov mov adc push insl jmp sub aaa sbb xor mov fidivr decl sub movsb jbe mov out add outsb enter mov popa push jg xor push mov call lea and outsb scas push aas das fbstp xchg xor es sub pop add (bad) xchg mov dec lahf xchg push sbb cli xlat mov cmp (bad) mov jmp js push into scas add add mov inc loopne fdiv insl dec mulb jecxz ret mov out decb out test xlat xchg mov xlat (bad) mov push setne or mov (bad) cmpb rclb dec xor lock js push xchg test mov mov movsl mov (bad) fcomip (bad) fnstenv (bad) cmp or cs push inc pop inc cmpsb cmpsb jg push xchg mov push push adc adcl pop lcall mov pop inc push adc and lea jge imul (bad) jle loope adc out int3 mov jbe jo or movsl test pop ficomp push mov mov xchg sub fsubrp push cbtw or jmp cmc clc lret addr16 sub push mov and aam test pop stos (bad) jp push push incl mov lcall and dec test gs jmp bound nop insw cmp les rolb mov insb test push mov inc cmpsb imul xchg adc or sbb adc call inc loopne ljmp pop xchg dec sub xchg outsb xlat sar dec xor mov cwtl xchg incl jbe,pt push outsb jle xchg ljmp mov shl and (bad) jecxz stc aam bound rcl push rol xchg outsb iret jae add fadd (bad) ret xchg (bad) or imull dec jg pop xor call test dec mov push lea arpl cli (bad) push add mov inc xchg push push dec and and adc inc test dec adc imull arpl mov test decb sbb mov neg ret cmpsl mov divb dec push aaa inc outsl push dec out test loope sub out rol shlb loop or in lret out loop add jmp or push addr16 mov inc aas (bad) (bad) (bad) imul mov xchg call mov jp cmp fs xchg (bad) jg cmp cmp mov cmpsl jnp ljmp sysret leave push rol roll sahf mov xorl je mov add mov mov add cs or lock in add stos out jo cmp int lret scas mov and mov add jne out mov shrl push push sbb loopne ss (bad) xor loope in loop xchg rol clc sti dec (bad) or lret mov sub mov fwait out push popa mov xchg jo push (bad) xchg inc mov sahf push push ficomp daa idivb fidivrl fwait jle insl xchg adc outsb mov push movsb es (bad) xchg outsl repz sbb sub adc sbb push xchg imull (bad) scas xchg out pop sbb and loopne sub dec push jp add sbb jmp outsb mov jle jne subl faddp push out es ret push int daa jecxz in fidivr les adc loopne call lock loop stc cld (bad) call push popa xchg movsb pop in push mov mov mulb (bad) mov test cmpl (bad) mov push aam jnp jg or mov adc adc xchg stos or fwait jle xor es dec lahf (bad) pushf push lea push fcomps xor sbb (bad) scas push dec cs xlat and cs data16 sbb sbb es pop or xchg mov push adcl sbb out sub mov out neg inc mov in jne pushl imul fsubs xchg scas addl xchg jo push aaa adc cmp sahf pushf xor mov movswl lds sahf rclb dec cmp and loop mov aaa jbe cwtl push and push data16 (bad) mov movsb dec xchg test das popa aaa xchg cmpsb dec sarb sbb dec and adc push and mov in leave add sub add and or jle notb orl push dec push cwtl or and out lea add or into mov dec push and cs out aam xchg inc (bad) call (bad) out cmpsb (bad) scas sbbb push mov mov (bad) jnp xor push inc xchg inc push cwtl jg dec dec subb fimull sarb or lret xchg shrl dec jbe rol jg sahf daa jle pushl es (bad) mov lahf cmpsl xchg xchg rcl mov push cli movsb xchg xchg xchg sbb pop or adc popl cmpsl mov lcall inc pop clc aaa inc cli jle ss gs xor jns push mov mov aad (bad) fisttpl adc pop (bad) jmp jmp mov xor popa ss inc jmp push mov lret stc lret push pop les mov call data16 cmc sub scas pop stos push push shr dec lds mov mov ret (bad) xchg nop inc (bad) cmpsb xlat dec dec pop inc mov dec push rcrl and pop out movd mov mov arpl push rcrl push aas popa dec and bound or xor or fistp sub ss dec push outsb jae jg mov adc in rcr test mov xchg out fucomip mov in (bad) call lods fs mov ret add fwait sahf xor idiv out incb test or test data16 mov ljmp or iret pop rorb (bad) mov and out rorb mov lea insl lret lcall or sbb out outsb cmp push mov and iret jae jle pop push dec sbb xchg out and push outsl xchg cwtl add cs pop push adc popa xor shrb push emms sbb push clc cmpsb jbe stos mov jmp out inc les imul mov into push ja xchg popa push sub imul lcall inc es (bad) stos cmp (bad) mov lret push jl xor jg rolb mov popf xchg es push fidivr sub push cmp rcll fldenv push test xor inc enter stos xchg mov (bad) mov or es jne addr16 lds sub adc and cmp or sbb inc cmc jno rcll out sub cmp push jg mov cmpsb (bad) mov or out loopne into loopne and notl cmp incl ljmp ret or pop incl fild and (bad) xor out js and xlat (bad) mov fimull pop or data16 inc adc ret pop loope js movl mov jbe outsb dec jmp push add pusha outsb inc or cmp repz mov xchg out icebp push pop xor movsb pop xlat mov inc xchg rcrb inc pop push inc xsaveopt and mov adc sub sbb jecxz or pop mov push xor in xchg mov xchg jbe aaa xor or pop push (bad) xchg jl inc out out jle (bad) jmp out int cmpsl pop mov outsb pop (bad) jnp mov pop lcall stos add pop fiaddl movsb mov cltd loop add push les mov (bad) jle sahf xchg xor or mov mov push pushf mov jge push imul sub popa arpl imul je sub das xor scas and adc stos into ss outsl test gs dec mov rolb pop loopne add pop jecxz (bad) rcr iret jne fisub incl mov out into jmp data16 js scas mov aad pop push jl xor pop pop pop adc pop lahf movsb push dec xchg mov push cmpsb xor mov lahf pop aaa or push mov clc insl ss roll push mov mov xchg xchg sahf mov push mov imul mov pop push xchg scas out ret xchg dec pop (bad) xor ficom hlt aas int pop push mov xchg xlat jecxz mov pop pmaxub mov pop (bad) clc mov test imul xor jmp (bad) (bad) imul xchg mov cmpsb jne clc ss sub jbe jbe jne jbe call pop inc xchg and cmpsb xchg es add lds cmpsl push xchg andl rolb xlat xchg xchg scas cmpsl bound (bad) fs in add mov sahf xor outsl push pusha adc lea cs adc or pop jg sbb or fwait dec xlat imull fisubr dec adc mov adc fcmovb mov inc out popa add out push jecxz jmp fmulp cli mov mov pop add popa dec sub (bad) pop inc orb jmp cli movsl or pop sbb mov mov mov xchg call lds mov mov popf add mov aas add cli stos cmc xchg (bad) ficompl daa sysret mov outsb cmpsl pop cwtl or xor sbb rcll inc xor sbb or wbinvd add xor (bad) mov push out sub dec fs out ret decl lahf in sar fst (bad) faddl cli or pushf daa data16 lods imul sarb xchg mov add push out enter (bad) (bad) pop inc (bad) out orb out sahf adc inc adc add push sbb jp pop lds mov ja (bad) dec adc push rcrb and xchg sbb call xchg insl mov sbb sbb mov add push and dec sub and push pop pusha test aam cmpxchg lods pop mov cs push push xchg add popl out push or fldenv add out xchg xorl push ja mov xor jge inc idiv fsub fucomp lds das test push nop xor dec lods (bad) jns dec mov test inc sbbb test stos pop sbb popf add push push add js cltd es pop cmp into mov fwait push add sub and and xor pop and insl mov push add into or and cmp mov (bad) xor daa shr add (bad) ss ror sarl out (bad) frstor xchg fidivr sub in sbb adc jmp scas sar incb lods push scas mov jg pop das dec xchg and sbb sbb pop push test cmpsb jbe mov pop (bad) cmpsl arpl ja fcomip lock push (bad) int3 sbbl addl sub jle dec or add jbe sub (bad) push adc sub pop sbb ret fstl add (bad) xchg sub inc (bad) inc decl imul int ffree das (bad) jbe,pn out iret xlat pop rcrb rol ret mov inc and mov or aaa sbb mov (bad) lock mov jo leave fndisi(8087 cmpsb mov test push mov jl sbb (bad) pop xchg push pop dec push lods cwtl mov sahf mov cmp bound sbb push xchg pop outsb addb shrb mov pushf ljmp dec aaa mov fsts call mov jae cli add dec sub dec scas pop xchg (bad) rcl (bad) (bad) adc xchg repnz fcomi (bad) into (bad) icebp pop add mov add loop xchg push pop sub pop or imul jno push sub sbb sbb dec idiv fdivrp insb push sbb (bad) jno jne add mov ss je out jo sub enter pop daa mov push mov push dec xor mov ds test push push je (bad) scas add xchg test dec inc jg fbstp jmp scas mov lods ds sub ja sub nop sbb lcall std scas add pop dec inc adc lret enter push add inc fldcw xlat xchg shrb je jbe pop inc jg mov dec cmp pop into daa sbb aas cs je divl sub (bad) push jle jle dec mov sub out clc (bad) jo decb das call prefetcht1 nop je das je das out add xchg pop jno sub pop out adc xchg and mov mov push push aaa pop cmpsl push sbb fistpl incb pop sbb jle add add fistp loop push (bad) adc insb mov mov ja adc loop push pop jg push les fiadd fcmovb mov scas sbb aam aaa fmul fisttp pop push push in mov pushf inc das or outsb adc es loope adc push cmp mov mov adc testl decb (bad) (bad) push or dec in (bad) cmpsl jp add out test clc pop je outsb cmp (bad) mov (bad) mov adc setbe hlt outsb and sbb adc scas and out lahf xchg mov dec outsb mov jno cmpsl mov push jne push add xchg pop loopne add clc sub push push jmp daa inc scas test out (bad) add pop push add into rorb jecxz loop mov (bad) (bad) (bad) popf xchg and dec pop paddb lods sub pop arpl xchg js cmpb pop (bad) pusha inc xchg call mov jmp aam or (bad) xchg jae add or adc aas lcall insl decl insl inc sub test daa mov add xchg sbb fsubrl pop sahf pop addb aaa dec xor incb or push addps jo cs sarb lret mov and (bad) jp push mov or pop jno pop daa sbb sbb xchg fwait inc das or call hlt dec loopne pop pop jmp mov leave sbbl (bad) fst insl cwtl inc sub fidivr sub ljmp ja (bad) jg dec (bad) push xor jnp lods lahf pop popa inc subps jp cmpsl (bad) xor and sbb adcb es pop test les push data16 push lret mov bound pop xchg sbb lea push push inc mov and xor sub adc cmpsl pop mov lret mov fcom scas or mov adc mov daa jle mov out test addl xchg jb iret pop ret pop xchg (bad) fiadd xchg jo daa andb cs fdivrp repnz cmp out insl dec dec dec cs xor xchg pop push jbe mov outsl add call jae gs add and xchg or pusha dec pop cmp sbb fadds push sub or (bad) mov push decl pop push dec cmp fadd roll into ret iret aaa shll fcomip test and add inc scas out push cwtl jnp xor test pop inc dec xor cmpsb (bad) lcall xor outsl dec cwtl pop das adc lods push mov push inc mov dec pop adc mov out jb push mov pushf and (bad) pop push (bad) push sbb xchg xchg jge push mov test lahf jg dec cs and pop sub push (bad) call adc mov add ljmp decl add cmpsl sbb inc push jo js (bad) lock sub or out cmp push pusha out jmp sbb xchg out loop (bad) insb inc loope cmp (bad) jle js or (bad) xor call cwtl jl lcall pushf cmp mov sbb cmpsl (bad) in ret inc mov das inc pop (bad) ja incb jle pop cmp insb jbe sub es mov lock ret xchg rol fcmovne rcrb xchg mov adc xorl test nop xchg cmp pop xchg mov insb or es (bad) (bad) call cwtl xchg inc push mov (bad) sub ret dec xlat cmp pop out jo push push fidivrl mov arpl fistl xchg outsl push data16 jle (bad) std lods inc stos and push push (bad) pop and lahf push fnop pop out rol popf fxch aaa mov lea dec mull and arpl add (bad) (bad) lea add data16 aam cmovae ret push daa gs idiv in cmp or (bad) imul dec sbb cmp dec sub mov mov js pop ret push incl data16 (bad) hlt scas mov and inc pop mov jg je push frstor (bad) imul sbb mov jmp test lret sar incb push popf dec cmpsl lahf pushf roll out push adc push add jnp (bad) fdivs lods jmp (bad) out decl (bad) lods dec fnop cs mov cmp fimul adc outsl inc es add adc xor jnp ss jle cmp insl mov mov adc jb xchg (bad) faddl xchg add push rcrl incb sub mov mov add cs sub iret enter loopne jo idivb pop incl or inc loopne stos xchg adcl inc (bad) dec into subl ret call out ljmp pop (bad) out test aas xlat mov test pusha push lods mov aaa push (bad) xchg (bad) mov inc and add sub ss test repnz pop adc sbb cmpsb pop mov push data16 enter sbbl movsl inc mov cmp clc inc call push rcrb aaa icebp add or ljmp xor or sahf scas hlt and sahf lea dec sbb or pushl bound test call shlb xchg xor mov stos xchg pop or push mov cs push test pop pop xchg rol mov inc addr16 and jl jbe adc add pop dec jo ds popf or enter dec mov dec add or push ret stos lahf (bad) in xlat rolb out add ror clc push and outsb ss inc daa mov out (bad) jle (bad) loopne xchg (bad) outsl pop xchg test jns add jb dec icebp add xor test mov jo out js jno (bad) test inc fild scas push test ljmp push test iret pushl and shll pop dec pop imul dec xor popa cmpsb icebp call fwait js rcll bswap rorb out cs xor (bad) incl (bad) jmp iret add lds lea or lock ss xchg dec jg rolb xchg pop push push call (bad) ficomp (bad) repz mov decl cmpsl fsts xchg clc out cmpsl data16 push insl push dec sub mov and mov jae mov cmpsl out inc gs add add jle pop cmp xor call outsl (bad) pushf xchg push push sub push add push or xor mov push fs lock mov ss xor enter xchg out movd cmpsb lea stos push outsb sub push insb mov jg outsb add inc xor aas push push daa add call (bad) mov (bad) cld xlat out inc jecxz inc gs push (bad) nop push xor popa sub pop xchg dec xchg adc push push cmpsb test dec das out (bad) mov xlat cwtl outsl push push shrb sbb sub pusha sub jno cmp adc mov fbstp lock sbb into aaa fcmovb mov mov pusha test jecxz mov lcall cs aaa lea mov push aaa out pop adc inc (bad) imul and adc idivl mov in out mov cs and bound push fldt pop out imul test mov adc push (bad) pop inc pop pop (bad) mov pop inc std ret xchg xchg (bad) outsb fdivl js push push xor mov sub jg push add dec xchg outsl mov push mov pop adc pop icebp xchg (bad) mov fmulp aas fistl test push mov or pop dec mov xchg cs or loope xchg imul imul out or mov in clc fsubrp xchg lea out fcom dec jecxz aad cmp pop cmp fild push inc push and add dec rclb jbe sub das scas cmpsl mov fmuls or push push jo sub xchg push insl pop jecxz out (bad) decb or imull idiv or cmpsl lock (bad) (bad) int sbb fdivl mov (bad) lret sarb shrl fisub notl inc pop mov outsl or movsb sahf (bad) and aaa (bad) call movsl cwtl out jmp ds in call mov popf push (bad) pusha shlb xor ds push scas ss outsb adc pop das xchg pop and aaa aas outsb push cwtl mov sbb adc pop daa jg inc pop adc push iret out cmpsb scas andl insl jg out mov jle push xor pop dec sub andb push out enter lret pop inc and ret idivb scas cltd mov lods inc pop or out inc mov out out loopne aad ffreep nop pop (bad) jbe rcr out hlt pop lea sbb out jecxz inc popa mul (bad) in adc cld dec test fst lock mov xchg inc nop mov fisub adc sub add aaa inc pop adcl dec push clc inc ret lcall fisttp adc jbe lcall rorb movsl push mulb xchg or gs pop out leave mov aas arpl lahf xor lahf xchg xchg call adc outsb jecxz ret test arpl into ret test inc push out repnz pop inc push xor xchg xor out xchg invd loop adc faddp mov outsb pop ficomp mov push sub aas cmpsl lods push mov fmull jl sub cmpsl mov and push xor lcall xchg notb fwait sub (bad) fildl xchg inc xchg in leave mov jecxz leave lret push mov hlt xchg mov cmc inc adc adc or iret mov mov test cmpsb fmuls loop lret idiv jle ss testl mulb into jmp lcall and lea out sahf pop imul sbb ficom xchg pop cmp aas or dec iret adc lods subl jecxz loope aaa push nop push rcll pop (bad) push xchg push scas inc scas and cmp mov adc cmp push xor fxch leave dec test mov mull mov xchg fild inc aaa mov ret sti jo or push fdivr ljmp jmp call lea fdivl mov (bad) sahf out pop cmp xorb pop jbe push xor pop adc pop or xor jg xchg (bad) (bad) iret mov mov push mov dec rorb xchg scas negb push mov add (bad) call (bad) (bad) xlat imul testl pop stc rolb xor (bad) paddusw inc xor ljmp out icebp repz pop inc push xor cld es mov pusha sti fcmovb mov jns es outsb sbb xor movsb mov stos es and mov push sbb je aaa push xor lods adc pushw mov cmc lahf jg jae ror movsb push dec adc inc sbb out mov jnp (bad) leave out jp pop sub jno notb lods push mov xchg push xorl ror rorl (bad) push xor push xlat loope push pop sarb sub (bad) out jmp repz or push xchg out movsl mov iret add fildll mov sahf int insl add lods lcall dec sbb push mov or scas (bad) pop cmp push lahf fs ja das ljmp pop ret mov pop jbe mov lea or pop sub add repnz add loop (bad) neg cmp imul pop push cmpxchg lret xchg scas push push mul ss mov xchg mov pmulhuw fucom or out push stc out mov mov out int3 mov mov cld cli out outsl xor loope sbb dec es adc cwtl gs es mov mov test mov cmpsb push jl sub xor and jg mov adc xchg icebp and pusha jg sbbl xor sbb xchg lret rolb leave ret sti lock aaa incb insb push inc inc sub mov inc ja fimul ja (bad) loopne neg sbb neg cs push mov lahf roll adc (bad) outsl pop cs pushw jg push loop rclb enter std insb loopne sub fsubrs rcr stos jno jmp scas test xchg call pusha inc jle dec test sbb pop jl outsb push (bad) inc add pop xchg pusha std inc and sbb cltd daa mov pop inc sub or (bad) xor aam int dec cmp pop test jbe mov xchg push loop outsb and les fmull fcomp loope jecxz xor jmp loope mov not add in fs (bad) mov inc cmc cmpsl movsb aaa cmpsb pop push mov inc adc mov scas push dec sbb cs cmpsl xchg outsb xor movsb inc jle push push subb mov inc push cs sbb push mov adc cmpsl aas sub cli dec pop pop inc sbbl roll into popa xor sub and jg daa inc call enter dec (bad) fisubrl rol push popa inc xor inc lahf xor ja sub lods scas sahf cltd dec ficomp xor xchg fiadd test xlat (bad) pop loop xchg div div pushl and pop clc lcallw xlat (bad) (bad) mov push orb aaa insl rol jbe (bad) mov out lods xor fwait pop repz repnz hlt mov sub jl fst (bad) mov sbb test stos xchg icebp inc sahf inc jae es fmuls jmp mov rolb pop ret jle movnti clc int jo and jg adc (bad) in (bad) mov ffree ret dec sbb fdivr lret mov push pop inc sub inc or incl call jbe xchg loope fistpl test fildl (bad) fnsave fsubrp out icebp notl leave mov inc aaa cmpsb rolb imul movb (bad) lea push outsl jg inc jbe sbb fadd mov sahf mov scas data16 adc fdivrs hlt rolb das rolb cltd lahf imul add mov lea cmpsb daa lods movsl adc sub jne,pt push orl rcl jg sub push sbb sub mov adc fcompl adc jmp cmpsb mov pop cmp ret xlat sarb mov jecxz and into fdiv aad adc out cs jmp fadds cmp jecxz jle jl mov push sub lods inc adc mov sub out push dec mov cmpsb mov pop and cmp cmpsl pop sti jmp stc push add sbb (bad) xor mov mov cmp icebp imul adc jl sub add aaa pop and jl ficom leave push mov push sub pop push adc or stos mov in (bad) loop pusha in fcmovnb (bad) (bad) mov lahf xor mulb fcmovu loope (bad) testb aam (bad) fisubrl xor test loope push pop lcall push test mov pusha bound rcrl mov pop clc add ss xchg jmp lahf jp cmp add dec jle not les arpl sub int push outsb (bad) mov fcmovb push sti jmp xchg call rorb jmp pop fidiv out sbb pop mov test jo jg bound ss lock push mov fidiv (bad) mov notb or add adc data16 out pop mov mov ss mov sbb loopne sub lods call out test (bad) mov sahf into lret rcrb (bad) ss ds fdivl in in sbb cmp movsl lidtl (bad) jbe mov iret mov test xchg xor cmp (bad) scas sarb jmp jbe rcrb push xchg es js scas fxch enter lock aaa or cs sbb mov stos pusha sbb scas notb xchg dec adc cld push (bad) mov (bad) mov movd jne loop (bad) out test inc pop in pushw lcall adc mov mov pop cmp test mov add lds sbb mov mov dec cmp inc mov push lcall push loop push xor leave shrb or mov outsb stos enter ds (bad) (bad) cmpsb std pop add into scas mov mov add add cmpb lahf scas lock test jle add push out push push and or sbb loop dec dec (bad) mov cmp pop xlat dec test fisttpl es lahf adc or clc xor out mov cld sti call cmpsb jecxz hlt inc out mov out movsb sahf mov xchg aam movsl push xchg arpl (bad) test pop je pushf imul mov push jg jg jbe jo cmpsb inc cltd xor add cs lock dec add ret mov ret faddp int3 sbb push inc fmulp into aaa add inc sbb push fmul roll sbb sub fstpl (bad) cld pxor inc jp loop push sub sbb sete xchg push imul mov mov or mov dec xchg pop add jg inc and pop inc inc mov js fsts cmpsl rcr es repz jo push xchg repnz cmpsl out add mov mov and push pop (bad) cmpsl outsl mov fldcw (bad) scas jbe add sahf adc insb clc stos popa inc mov incb xor jb pop insb mov movb push ffree cmpsl movsl lds aaa (bad) push es xchg push call push insb loop aaa das cmp les push mov mov inc or xchg or (bad) xchg rol mov cmpsl push mov (bad) (bad) pop (bad) lods cmpb test rolb movl jae add es jg push aaa les mov ja mov pop mov fcomps icebp loopne mov hlt call mov bound stos (bad) (bad) push mov fmul fsubrs pushl and lea push jg jle and lods gs leave je xor (bad) dec fmull test es lds enter fdivp fdivs mov repz pop fidivl das pop mov push out mov imul ljmp jmp or pop dec adc es push jp adcl xor dec incb jmp adc mov test sbb ja push jl add push sarb add (bad) out push (bad) movd adc inc adc mov scas jo push pop xchg xchg mov mov inc imul andl icebp data16 fadd mov aas (bad) push push shll hlt data16 clc mov aaa add test (bad) inc ret mov push mov pop loop ss cmp addr16 cmpsl into scas jle movsb es xor sub lods xchg test cmp fstps cmp pop pop sbb mov mov nop jg inc les push out arpl sarb scas dec pop std sbb push mov (bad) scas mov push sbb pop xchg je mov jbe rolb mov mov dec movsb jle xchg inc push push mov push in ja aam imul daa nop mov lcall out inc loop inc adc cmpsb cli daa mov pop push xchg pop jle out out sbb js (bad) cmp adc push es arpl negl (bad) inc xchg mov daa or insb sahf (bad) mov rcrl scas out into inc and (bad) jo xlat add push pop xchg out fadd adc cmpsb add xor aaa rolb inc lahf jle xor sbb add repz sub fcomps aad inc jne push in call add out mov sahf push stos inc es push cli inc movsb lret fcmovnb mov xlat mov inc and inc mov mov in xor cli test out push pop sbb push (bad) shrb or cmpsb movsb lahf mov ja jne xor loope bound mov dec js mov callw inc ds sub and mov or jmp mov je sub xchg pop dec aas (bad) xor orl jno push inc insl xchg jno pop push popa and ficomp add mov mov lea add test (bad) popf pop movsl idiv rcll rcrl out scas adc loopne enter js cwtl pop xor push mov je (bad) (bad) fadd mov out repnz cli out in ret (bad) fidivr std pop call and lret and dec mov les mov mov cmp add andl aaa daa out adc psraw xchg das mov jecxz out cmpsl cltd es pop mov fistp mov or lahf push mov ror push ds clc add out div repnz js pop inc push mov push daa pop outsb inc aaa mov mov fcmovbe leave ja lds inc dec jmp fs out jg cmp int cwtl push fmuls adc adc xchg sar pop jbe cmpsl and push out mov inc loopne mov push adc mov es fxch hlt cld repz out aaa pushf gs adc (bad) leave das sbb or mov push test cs xor add xchg in dec mov dec addl shrl imulb scas sbbl add fisubl xchg push xchg jp aas sarb stos movsl add jo das into call aam push xchg cs lds inc mov xor clc dec (bad) fdivrl loope pushf dec insb ss ffreep sahf sub push ds rol cs mov add (bad) js mov xchg hlt fimul ss pop cld and movsb je mov es cmp fimull ss fimull inc scas lahf add push clc or push sub push sbbl inc jbe sub scas aaa jle or xchg lock (bad) mov aas sbb cmp xor roll stos add xchg dec cli push daa push inc xchg aaa out push jecxz add push push daa adc into repz rol fcmovnb (bad) iret jle lds lcall popl out cmpsb lods push aam jg mov fwait std lock sti repnz hlt sti push cld mov stc icebp in scas cs or inc pop inc sub and lock add fiadd test pusha imul xor jno inc jbe mov inc mov ja lea xor scas xchg mov mov mov xor add das scas mov loope xchg jmp inc jne inc jb,pn mov clc xchg les cs adc mov xchg mov cmp mov int and mov mul shlb out xchg jbe dec xchg stc fcmovnb mov mov data16 mov push popa (bad) (bad) add (bad) pop imul sti dec pushf aaa popf aaa sti push cld imul cmp cmp mov arpl push sub test fs inc lds arpl cmpsb out jo cmc scas mov stos popf aaa mov dec out into mov xchg pop xchg scas add lea outsl jecxz or aaa fdivrs dec fisubl jg pop sub push test inc idivl hlt (bad) push bound movl xor push mov (bad) daa mov pop pop sub (bad) int3 mov adc (bad) (bad) pop xchg js (bad) (bad) adc xlat jle sub push cmpsl xor pop adc flds cmpsb ds adc cmp icebp push cs test cmp lock stos mov pop loope sahf push sub pop das or pop (bad) (bad) jbe and push cmpsb js cmp push xor pop sub add adc sub das fimul imul aad add xchg orb (bad) xor mov inc insb xchg mov xchg push push (bad) xchg xchg mov (bad) cmpsb mov and insl popa rol pop (bad) in ficomp push clc fmulp scas push sub or shrl ljmp sbb and push ljmp in push hlt jmp mov or mov inc push push sbb es cmp scas es mov daa jle packuswb test cmpsl push ds xchg les outsb mov mov mov jbe mov mull push dec jl loopne dec mov and inc jl jp mov test dec iret push es loop inc into inc pusha mov push into pop mov nop jmp dec je hlt ss call push jmp or xchg cmpsb xchg rorb mov push (bad) js push cwtl mov add ja pop jo or jae mov icebp in into sahf mov sub mov lods mov or jg mov loopne xchg je (bad) or rolb fistpll mov jo mov inc out fnstenv js inc lahf clc inc mov out fmulp push mov movsb jo cmpsl pop push xchg inc add inc (bad) jmp jnp clc (bad) std in loop push call and imul mov decl insl hlt fisubl sub movq shrl ror push les dec call sub push xor mov push and mov xor ja rolb xor scas add (bad) mov sarb les lods and (bad) repnz lds add cmpsl lea add cmp sbb je cwtl (bad) mov and pop sub inc test xlat xchg inc pop mov xor cmp xchg xlat sahf mov inc scas xchg push pop ss mov aaa (bad) (bad) cltd add mov ljmp pop mov xlat clc daa movsl dec cmpsb bound inc fcmovnb mov (bad) shr add push add iret mov mov xchg add loop jmp adc (bad) nop es (bad) repnz fimul (bad) push adc in (bad) mov inc les push inc mov fwait mov cmp out jo add pop daa push dec bound outsb xchg mov loopne ss or add mov into xchg (bad) sub jns xchg mov sbb out sub fmuls out stc inc repz mov or orl adc (bad) ljmp pop shl jmp push cs pop push mov pop data16 dec mov xchg jecxz sbb (bad) out push cli push popa add outsl cmpsl xchg jg cs xchg aaa jbe mov sub out lcall jno out lock sbb scas pop adc sbb out loopne fsub roll add adc and rclb es das daa fistp add push jg mov mov xchg sahf ret sahf scas fisub out adc outsb out (bad) xchg mov pop ja inc mov mov mov out out adc scas push out neg leave mov mov pop out mov push aam push aad stc adc adc push jmp out push rol mov xchg orb mov es sub adc popa ret push xchg pop fwait mov fwait xchg loop into fadds adc push xlat inc sar xchg jecxz cli neg movl inc mov xor push xlat or and pop (bad) enter pop mov (bad) movsb xchg (bad) (bad) dec xor cmpps sarb mov es ret outsb outsl ret shr ss xlat in push loop pusha fdivr lret lock pop into push out daa mov adc mov add xor push out mov fnsave test push cmp test fcmovb mov push ds out jmp leave test loopne pop loope loopne inc add or mov shlb out (bad) push cmpsw testb cmp ljmp ja decb mov and push add and jle cmpl xlat shlb fisttpll into xlat test fcomp pop dec lret clc es mov or push sbb pop fiadd insl cmova int3 jmp int3 out dec and jg incl into add loope dec cmc fld mov fadd mov fiadd or (bad) dec out fisttp push push sub rclb add jnp shl xchg push mov xchg imul add pop pop add push in jg pop mov jg dec dec and mov setb fs lock add clc leave shrb sub mov cmpsl aaa mov popa and ja or add pop loopne and jg pop xor incl add add xor out cmp leave add dec xorl push push dec movl clc stos pop pop stos aas mov lock divb stos mov add dec push mov shlb fistpll push and push and push adc fdivrl adc push ss ds (bad) xor sub aas adc jo pop or pop push inc add cmpsb outsl push add jl xorl dec mov sbb or mov mov cmovns cmp cmpsb and sahf push shlb adc sub xor fisttp dec add mov sbb mov out pop or repz sbb pop pop insb mov clts xchg push mov push sahf lcall adc stos insl popf adc xchg outsb mov out mov data16 adc dec mov mov es stos rolb add inc adc pop scas add cmp xchg or sub mov jno xor push inc (bad) (bad) inc sub jge sub pop insl aas sub xor (bad) jmp adc cmp or and add push sahf lahf xchg add and ret cmp and repnz scas outsl pop add push push outsl inc mov cmp imul adc inc adc jb (bad) jg cwtl xchg cmp lgs mov mov add out mov mov lods (bad) push mov imul cmp out das outsb and xor pop xor repnz and fcomps add pop push jo xchg push rorb sub mov pushf movsl or or stos out movl mov ficomp xor mov xor and mov test clc mov not mov (bad) mov call ss or es mov inc scas movsl xchg sub mov (bad) fcmovnbe sub push fsubs mov pusha cmp inc or (bad) lock xor adc mov xchg (bad) inc imulb dec rcr and sbb add add jne cmp cmpsb sbb aaa or mov jae jecxz lods (bad) ljmp fcom movsl jne or loopne rorb aaa mov mov ret mov popa add xchg push nop (bad) mov add movsb pop mov lretw push mov (bad) adcb addb push ret movsl add adc (bad) sbb cwtl and xor dec (bad) xor pop adc pop add add dec adc addl fidivr push sbb cmp sbb add cli out rol push outsb bnd mov in out (bad) (bad) je mov push mov mov outsl mov outsb pusha push incl mov cli inc cs ljmp jne xchg lahf lea xchg xlat mov mov and into data16 and scas push insb cmp lock pop add xchg xorl or jns and out cmp xchg push inc adc rolb sahf data16 jbe adc push cmp lock adc push fidivrl (bad) jo mov xchg add iret or mov dec add push movsb clc lock push out pop push decl mov (bad) (bad) push ss inc inc push xchg gs xor inc jge jb jmp dec sub mov (bad) fistpll push js fs loopne ret das clc push or les xlat cmp aas or sub add stos stos inc pop and adc adc out and push shll xor lods call testl push (bad) jmp adc xchg (bad) push xchg outsl lea ds mov mov loopne push out (bad) jl inc (bad) gs ss ret sub push push insl and or jl push mov ljmp stos mov out jle mov stc pop push mov push test lods decb mov and adc rcll ret add hlt incl sbb adc sub add dec aaa sbb xchg (bad) mov or xor or fcmovbe xchg jne and je pop in pop mov xchg je and xchg lcall ljmp enter cwtl xor lcall fiadd pop jbe and mov pop inc cmp pop mov lahf je xchg shlb push lds add mov fnsave mov dec xor adc cmpsl ret add into mov push mov and add inc xchg orl call mov (bad) cmp jbe nop jne hlt xor sub loop sbb (bad) mov add mov push es mov inc sub push icebp out adc mov call adc lret mov ret data16 mov bound or adc dec arpl xor aas (bad) clc push dec lcall jne jne xchg jge mov xchg xor js xor jns ds inc jno,pn xchg inc aaa mov and add pop push aas shr js jg (bad) or out or shl into hlt out out fwait inc mov pop in fcmovnb push adc inc pop inc imul push into jp push and mov scas repz repz push test or jle into mov push ror (bad) jno or (bad) cmp push dec sub les into push test pop push push loope sahf arpl data16 sub mov mov pushf outsb mov sbb push or out into arpl cmpsb movsb imul adc inc insb dec jg loop inc shr sbb aaa adc add cwtl jge icebp add jmp fcompl jecxz inc dec inc xchg lret scas lods add push subb xchg jo call mov cltd push jmp push sahf jl mov jle in mov hlt cltd ret xchg push add mov pop push (bad) cltd push (bad) mov aas and outsb and incl js mov not mov (bad) mov pop data16 and out xor mov ja push sub dec rcrl addl aaa jg mov dec dec and fadd (bad) inc inc xorb add (bad) stos test scas (bad) (bad) stos sub sahf fs pop lock push mov dec add mov jmp fcomp nop pop jg stc push lret mov add sub xchg dec add fisttp or pop jle adc je test out notb add mov cmp xchg imul push add push mov dec out push dec and and or bound sub or push sbb inc loopne neg xchg cmpb push mov (bad) popa or into pop xor outsb or dec in ljmp lahf jle xor lahf iret jecxz out cli sahf mov outsl mov jecxz mov enter xchg mov pusha mov jbe and cmp dec rcrb test add das shrl add cmp or sahf dec or aaa jbe jnp stos add pusha inc pop adc outsl or push sub or repz sbb incl ss mov les es outsb faddl ficompl pop push xchg add mov in into push and xchg fwait ret (bad) sub pop jg sti push lret mov push (bad) out loopne and push jl cmp mov stos and push push leave xchg sahf mov push testb xor cmpsl lea push outsl mov js xor adc jle dec pop jo addb inc and push dec popa rorl cmp or adc or adc add sub clc data16 mov mov jp add add adcl xor (bad) or lcall fldt jle (bad) pop push arpl ds push mov movsb lcall movsb jo push lds aad or dec sub push sahf jb adc inc in inc mov into orb cs cmpsb sub pop push push cmp sbb and adc pop cmp insb rolb add push adc pop cmpsb jg xorl jge mov subb jo,pn fxch lret rorb adc addl (bad) mov xchg jg int push stc dec popa add scas ficom fs jo push jb mov jne mov xlat adc rcl lea dec ret xchg lds inc icebp add push aas stc int3 adc or adc inc rorb movsl cmpsb dec cmpsb cltd ret or or test push xlat dec adc mov out es push inc push or jb adc test outsb pusha push dec lcall push jmp outsl jb mov out pop stos pop mov push mov xchg xor add out idivb mov outsl inc adc inc test adc es jbe add aaa dec ret jg int3 incb push call aas into xchg sahf nop je cmpl sub inc xor mov mov dec and add dec outsl ja push and pop test in pop outsb ja pop xor inc btsl or scas pop sub (bad) adc add movb out pop ljmp fiadd call inc aad andl xchg mov cwtl lock popa push pop (bad) lock adc jle jnp and mov push xchg xchg (bad) xor iret mov push ret mov adc (bad) mov addb (bad) inc push push adc mov push push xor xor cli inc shl dec push mov test adc test out dec (bad) lcall fstps add pop out or pop mov sbb sub cmpsb push std push adc jbe popf xor sbb rolb out out out pop cmp addr16 add lods mov add out mov movsl rcl in fs nop xor mov mov incb cmp aaa (bad) popw (bad) push pop (bad) scas lea adc insb push pop test xor sahf xlat faddl cmp cmp cli rol pop add aas scas and iret xchg (bad) outsb sub dec (bad) adc lahf outsl inc popa or aaa jb or iret out incl sbb xchg dec cmp out loopne sbb insb ret mov (bad) push ret ds in sahf pushf test int push pop xlat jg pop jmp pushf dec ss fisub scas push mov fmull xchg jg aam pop adc add (bad) push add add or mov sahf lret or int outsl outsb adc loop aad rclb pop lods sub loopne push mov (bad) adc push inc inc stos add xor jg push into fs xchg push dec outsl ja add or into incb ljmp aam (bad) jb add xchg cltd jle shl fcmovu xor loop jmp es lret or fistpll pusha xor pop (bad) jg popa or cmpsb push jmp roll xchg or (bad) lock push sahf inc jbe cmp mov mov add xchg js js add push mov test imul sub mov inc dec add pop out xor pop push divb mov push adc xchg enter and stos call into or or dec inc add movsl imul push mov add ss mov or lea (bad) dec cwtl xor pop call sbb lods jns mov pop pop cmp (bad) bound das ja scas sahf int les (bad) adc add xchg not xchg push (bad) jne out sbb add inc push push js mov and and jo imul test subb addl (bad) dec dec add fwait outsw inc xor stc fbld sub scas loop pop pop cmp push fwait (bad) jo rcr push ds pop dec mov cmovb jg mov movsb jno xchg push mov and imul rorb ds sahf test sub bswap mov adc rol inc decl adc nop scas sbb sahf mov push ret gs sub or dec movl ss sub fs lea jecxz adc add fist movsb mov ror les mov jg (bad) das ja and jg loope lret or jo xchg pop test inc popa (bad) mov mov push cmovge pop inc sahf fwait into leavew xchg out add or adc movsb aas (bad) shrl ljmp push dec add pop xor and (bad) xor jbe lcall adc jl lret scas cmpsl (bad) fcmovnbe cmp pop inc (bad) iret (bad) sub iret mov cwtl mov pop (bad) (bad) dec push xchg fidivl dec mov aad jle arpl mov outsb mov pop jle cmp push sbb xchg or scas mov sahf mov or cvtps2pd or jbe outsl jns pushf xor jb jecxz pop add sbb sub cmp push movsl add iret dec lods or stos jle and pop push push mov ja sahf aas cmp scas repz aas ror es in push xchg jp and cmp pop dec aam add mov ret (bad) icebp jg int ret add mov pop jg ret data16 das aad push pop xchg mov imul jno xchg je iret mov loopne add (bad) mov fnop scas pushf or cmp push movsl or jge test push sub or lods data16 movsb sub jno sub and fisttp test loop xchg shlb adc outsl fdivs movsb test adc mov sub out pop arpl ds mov pushf nop xchg jle movsb outsb cmp mov negl cmpsb iret xchg jge xchg xchg outsb or and push or mov (bad) aad into data16 jg xchg jb jbe cmp out loop push push outsl or (bad) jl sub add ss xchg movsb pop and adc add mov cs adc fcmovbe aas xor add dec out dec pop add lods cltd mov das xlat jl loopne xchg (bad) push sub push fs fnstsw scas add out push add or push aaa call jle sub outsl dec sub inc es xchg add push push iret pop loopne push add mov push call movsl mov mov test in or sub pop aas mov add or adc xchg jg ss inc out inc ss add add push and (bad) xlat xchg adc pop pop pop add mov scas sub add ret (bad) or (bad) ja add loopne call (bad) push mov ss cmpsb nop jle sub out mov je xor test xchg push dec dec xchg xchg adc xchg inc shll out pushf jp cltd data16 add sub sbb mov push data16 xchg or inc xor or xor stos jle jmp dec icebp lock push pop push jecxz rcr adc ret out dec aaa test ret xor jno outsb out mov out ror out xchg xor jg ja jg sub into rol dec mov dec push mov push fidiv push xchg xchg addr16 push pop dec and sbb dec mov and dec test xchg movsb add aad subl je lahf adc out cwtl jno xor add adc jbe (bad) push pop clc add fcom push push push push dec (bad) (bad) fxch ja frstor sbbl push lds loope andl and lcall or fild dec push jns (bad) loop mov xchg mov in pushw enter xchg xor insl jle cmpsb push push add inc and pop and pop add inc mov xchg add ljmp jae dec sbb outsb xchg ret sbb (bad) xor xchg clc inc lea (bad) or addr16 xchg dec or push xchg movsb hlt adc nop xor je (bad) jo jg sub push (bad) or push jecxz fistpl (bad) stc idivb loope sbb jle pop ret push sbb jg pop inc xchg xchg subl ret idiv cmpsb mov xchg xor and ret in jbe (bad) movsb xor adc inc or cmp mov bound pop jg adc mov mov inc ror push push ret cmpl add ja ja cmpsl add add shrb ds dec dec jle in cmp cmpsb jg jnp shrb mov dec incl push cmpb mov loopne addr16 or inc aad pop inc cmpsb push mov shrb mov xor inc daa mov jg inc subl push jg inc jle andb stos push pusha cmpsl hlt int3 mov add adc xchg adcb sub xor push jp aaa daa jmp and xchg (bad) or jo jg pop and sub rcl pop ret idivb iret sar mov xchg mov jg push out xchg je stos pop dec pop xchg lahf inc or imul sbb les inc push js fs fisttpll (bad) jle mov mov (bad) cmp inc mov dec add icebp int jb jle push shrb (bad) mov jb push addr16 out fidivl ljmp testl xchg and in loop aaa test mov xor mov pop or push (bad) jo mov inc jg sbb adcb das mov pop pusha cs repz jle push fiadd dec pushf ss add dec dec and lock int3 mov inc fs push (bad) mov inc pop inc cs jb adc imul aam dec cmpsl movd dec adc jg adc or out inc add push es and mov call push add jno divb pop dec sbb outsb pop lock js jbe sbb movsb pop (bad) pop aas dec js push mov scas popa cmp inc ds inc sub xlat add and out lret mov sbbl add (bad) ja ret cmp out inc cmp inc data16 xchg xchg lock addr16 ret ss mov push mov mov push xchg push push pop dec push jge cmp mov lods adc mov push lret jne insl inc rcrb fildll imul and lret pop flds mov adc pop jg or pop add pop cmp and outsl dec or and out sti cmp mov shr insb inc or cmp xor cwtl cwtl and js daa lahf test sbb xchg cmpsb cmp jl (bad) jne rcll loope dec int cmp pop or pop or pop adc ljmp add fldl mov pop adc adc jo loope jbe mov test cmp mov jg jg imul gs scas imul (bad) mov push lahf imul loopne add (bad) mov xchg cs mov popf jne jle mov push adc push fidiv cmp rcll out push push stc out enter cltd mov jbe (bad) jo pop movsl mov jmp cmovle dec js cmp imul pop andnps push and cmp into movsb popa (bad) mov lods cmp lods push lea push add pop push jb scas pop push andl dec mov outsb push mull inc pop iretw mov inc push jo ss pop adc push adc pop jmp into add int clc (bad) pop dec aam jg cmpl out scas test dec mov ja sbb test jbe das adc lret pop movsb leave movq ljmp call xchg add jle push xchg stos loopne (bad) jg sbb mov mov fwait les scas push rcll cwtl mov das out push rcrl jg outsl or mov lret loope lret std inc inc inc add mov xlat (bad) dec push es dec xor and cltd or (bad) ret out xor xor das or imulb jmp adc mov rclb or inc ret pop clc ja push (bad) test pop cmp outsb inc and pop inc xlat xchg cvttps2pi ja (bad) jmp inc xlat ret scas addr16 fist cmp test sahf je cld mov out xchg push cmp outsl movsl in xchg incb add adc int test incb jg push out xchg xchg dec sbb js incb xchg scas mov xchg mov call iret aam sarl dec xchg (bad) xor ja xchg sbb loope out sahf xchg push push aam shrb mov (bad) add mov (bad) fsubs push jle movq inc sbb push incb adc xor mov shlb inc or sbb mov repnz pop xchg les mov xlat inc flds arpl nop stos (bad) add test loopne out sbb clc fcoms ja jo sub push push mov test inc mov in push in icebp decb ret loopne in mov ret push (bad) jmp (bad) lahf sbbb sub push pop aas add sub adcb scas test ds jb ss push js inc out call sub cmp mulb sbbb test icebp lds mov test push jno dec cmpsl bound xchg (bad) mov or scas add add (bad) popa push lcall push jecxz xor adc (bad) xchg mov out idiv cli or enter or adc xchg sub and xrelease push adc jg cmp aaa pop dec xor xor mov xchg push and cmpsb inc pushf sahf ja pop incl mov fcmovne leave xchg leave inc add push push in movb cmp testl sbb pop sbb inc jo rorl ss sarl pop (bad) jmp push daa and clc push out icebp push incb nop movsl sub add (bad) mov es cmpsb pop sbb inc push push cmpsl test leave iret lods push inc mov sbb jle sub popa imul loop ja sub pop lahf addr16 cs pop fsubp rclb sub cwtl loop sbb pop xor out (bad) jno push fnstenv lret rol inc das (bad) xor jne pusha xor jmp mov cmpsl (bad) jmp insb push fucom fisub popa xor sti lahf jge dec dec mov mov push jbe mov mov test insl push and and mov jbe enter das cli xchg or dec ds (bad) mov enter xchg add sbb or dec in lds outsb fidivrl adc fldcw pop ja mov aas mov lahf test pop inc push lret rol aad mov xlat loop fnstcw sarl aaa jle hlt (bad) cmp pop (bad) inc cmpsl pop sti xchg loopne mov push popf add fist stos push mov (bad) xorl mov xor xchg stos xchg hlt inc outsl mov ja or add add add jmp mov fld mov cmpsl test pop cmp xlat xor cmpsb (bad) prefetcht0 adc (bad) ds cmpsb mov mov push loop movl loop lock loope dec cmp cmpsl nop jge aam adc jp out fcom add adc xchg iret mov jle jge jo lods (bad) mov mov test mov pop jle push sub out push and pop (bad) xor pusha test shrb xchg outsl push xor jo loope mov inc ffree add push jbe ds xor dec pop xor pop xor aas push xchg cmpsb fidiv rcr fcomp lcall in push adc lcall lar (bad) push push xchg scas lahf les stos inc cmpsb mul add sbb fst inc inc rorl push es inc imull scas lods xchg or dec adc ret jg mov push lds mov inc sarb adc sbb les push (bad) mov scas push xor pusha sbb pop pop dec pop jle lret add aaa jle mov inc adc add out ss xlat aad push fsubrs loopne push call aaa xlat int3 rcrl push mov data16 sub fsubs addr16 jge (bad) dec (bad) lret lcall or mov fnop mov (bad) pop mov arpl add and imul add jle idivb add popa jg mov imul data16 dec push xor ds je fdivp jg stos jne loopne mov test mov rcrb push push imul xor xchg imul or inc jmp rorl in cwtl jge mov xor (bad) out xchg mov dec xchg in mov xchg jp data16 and adc hlt pop jge loopne cld cmc cmpsl jbe test pusha cmpsl mov sub sub decb jo fisub push mov (bad) outsb fbld xor cmpsl jle push xchg fs shrb stos out test ja out adc lret mov idiv mov add lds jg mov daa push dec mov mov loop fnstenv cmp jle xlat out ja (bad) fsubl or push dec fdivp ja inc push pop call leave roll xchg subl inc and rol push cmp jle mov xchg je dec push xchg data16 adc (bad) cmpsb push cli jmp adc in fnop cmp mov cmp lods and jle xor add push xor cmp pop mov mov mov mov rcrb adc movsb shl jg aad or jle mov cmpl dec je aaa (bad) mov loope,pt loopne fsubr mov add mov push ficom sahf add out (bad) jno pop sbb cs enter aaa outsl rolb (bad) ss or inc scas repnz mov cmp movl jle subb mulb xor jmp inc (bad) mov cmpsb mov push add mulb fsubrp nop mov insl inc outsb or outsb inc mov testl or pop std aaa adc adc cmpsl dec std and xlat (bad) leave mov scas mov loope xchg out les imul jmp rol add fsubp push cwtl lret (bad) jmp inc dec xchg addr16 dec mov ret out xchg lahf cmpsb daa test add jmp mov sbb ds xchg mov test lock mov test push aaa (bad) mov divl lock cmc in or outsl div lret movsl xchg sub push push mov push push xchg sub dec dec mulb faddl adc mov into movsb sub ficom pushf xchg insb adc cli orl fsubl sbb mov dec cmpsb sahf xchg add into lretw sarl subl mov out xchg jecxz iret mov outsl or adc xchg push (bad) decb lea xchg aas pop imul push inc outsb inc push inc dec push inc sbb sbb stos aas jo aaa pop push mov test jle dec vmread pop in repnz add xor mov mov fisubr data16 xor adc mov xor sub add sbb xchg cli icebp (bad) mov fisttpl sbb push (bad) into fmulp ss mov lret incb ljmp cmpsl cmpsl mov fidivr imul xchg dec scas jo push push push mov dec inc jo out out movsl mov (bad) mov loop movw ljmp jp jbe aad mov jo out jg out in xchg or adcl mov xor sti jmp ja repnz std mov dec stos js and outsb jo inc test inc mov jne and lock fsubrp les inc stos mov inc fmul push movl cli push mov daa jbe aaa pushf inc cmp addr16 mov imul lock out mov sbbl inc fs aam pop out jp loopne push out inc cltd jl inc xor sbb push aas mov mov mov inc ficomp out pop sarb pop scas mov mov cltd (bad) (bad) xchg sar cs mov pop (bad) out cmpsb jo jne out je push outsl sarb out inc sub push or out enter add iret push (bad) inc xchg mov aad imul in pusha mov adc pushl jecxz lock xlat mov icebp mov sahf outsl add lock (bad) xlat mov dec or adc adcb xchg mov incb pop les xor push mov sub cmp dec sbb unpckhpd fnstcw mov nop outsb push jle add add xchg sbb cmpb jle mov cmp sbb stos sarb outsl lcall push sbb (bad) jne dec mov mov push fmulp leave sbb jecxz insb imulb xchg push cmp push aaa inc mov lea push cmova add dec dec pop pop ja mov pop inc (bad) and and das add mov jo mov jg outsl fs ss dec es loope push addb imul or mov inc cmp mov cmpsl sub jbe scas repnz lahf ss imul mov (bad) and dec sbb push (bad) mov jbe mov inc push ja cmpsb push cmp xchg mov mov fnstcw add push mov mov xor sti mov add jo push cs (bad) pusha pusha dec push dec sbb pop mov add sahf pop xor cmc (bad) into xchg sahf dec sbb mov add add add ja shrb and jno ret rcll dec out inc popf mov test mov xorb and dec fsubl stos xchg (bad) xchg and mov and sub rorb mov pop adc xchg pop jle cwtl outsb movsl ficomp mov mov add mov cld clc cmc pop add shrl decb sti inc or mov dec sub imulb test sub cmc adc push (bad) out movsb push push dec pop mov (bad) add mov ret (bad) (bad) and and (bad) popa xor xor pop out lods xchg or pop push data16 adc dec or pop push dec xchg test or add pusha mov shr stos lea out jg into scas rolb mov int loopne mov (bad) push (bad) (bad) loop mov pop xchg insb push jns clc aam pop push loop rol push mov rorb mov cmp jo push inc dec and jbe shlb dec addr16 in jecxz (bad) jbe and xchg packsswb (bad) sub mov (bad) cmp ret out inc add add ljmp pop in xor les out pop mov (bad) pop sub mov xchg xchg (bad) call (bad) mov push ds test sbb push outsb ljmp test inc outsl leave push ffree out jmp mov fdivr fld std test dec push mov and stos pop (bad) mov icebp out repnz ja pop push xchg sahf pushf (bad) subps pop push gs jle daa jmp push loope pusha inc xchg (bad) xchg incl mov cmp dec notl sbb add or sub xchg (bad) mov xchg xor dec divb xchg ss fcompl mov xchg pop or mov xchg inc pop jecxz negb xchg dec push xchg xchg jb aad stos ljmp xor jbe enter ret adcb sti in iret mov pop push or fadds mov sti aam or out out movb pop out (bad) lods mov rorb and lock xchg clc (bad) and cmpsl xchg ja inc pop and ret mov es adc inc js jle add pop (bad) mov dec into es cmpsb sub or sub (bad) push das dec and xchg mov adc xor and mov cmp add dec sub outsl sahf (bad) imul outsl add add neg (bad) loopne lock leave mov pushw add mov sub dec (bad) push inc aaa (bad) push mov mov mov push loopne loop cmpsl push and xor push jne out lahf test test inc dec push adc inc xchg jno scas mov pop mov cmpsb push les xchg push psadbw loopne fmulp cmp mov divb pop insl push notb add es cmp out pop jns jne mov hlt fldcw xchg (bad) into xor mov push adc adc in push push (bad) mov jmp cmp ss subl movl add insl rolb dec sbb scas sahf ds aam push out jnp sub dec sahf test es ds xor out jbe xchg xchg icebp mov jg sahf outsl or xorb ja xchg add dec and pop movsb pop push mov fdivrp out fisttpl test inc push into lock out aad mov ljmp aam adc mov dec cs pop mov xchg jg outsb stos stos sbb jbe daa pop mov outsl xchg andl hlt add pop xor insl ds adc and push pop dec push and insl push loope (bad) sub gs sahf sub loope (bad) (bad) outsb adc pop sbb notb fadds rcrb pop outsb add or jbe aam outsb push (bad) jne add adc movsl outsb add out outsb cmpsb out ret sbbl or (bad) or popl sub into clc ret cwtl xchg jne ds xchg dec pop (bad) mov ret fs popf mov sahf mov mull mov aas jno add lock sarl sbb iret daa cmp fiaddl (bad) pop inc sub add in adc clc in dec mov aad aaa jecxz adc insb mov call mov (bad) ljmp cmp mov mov jo inc rolb pop cmp ss mov scas cld or push xchg inc xchg push addr16 push push arpl sbb xchg (bad) cs in push in fldl testl data16 xlat les mov rolb (bad) call sbb xor orl hlt in mov rol mov push ds jle mov push push push mov test aam aaa cmc daa jmp push dec jmp xor int3 std in sarl mov push insl adc pop ds push fsubr or xlat add fcoml movsb dec stc call test sbb test mov pop pop jo incb sbb es pop (bad) xor mov test pushf or lds aas adc jle aas stc loopne or leave ljmp adc cmp pusha sti movsb cmpsb scas cmp aam movsb fmuls (bad) jg cli xchg xlat ret mov nop jns jmp and push movsl push mov push scas xchg pop mov mov fs jg fimul and ja ljmp enter mov push jo lock shlb sub scas test les shrb adc xchg in xlat add cmc xor lret (bad) std mov jbe cmpsl push cmp dec outsb mov dec (bad) push rcrb mov fisttpl dec lret idiv loopne inc add mov lcall jmp push bound jmp (bad) into outsl in pusha and lret dec pop lcall add dec mov int3 dec cmc fcmovb enter add std loopne inc xchg rol imul daa pop pop lock xchg dec xor rolb add mov imul add jnp fidivl pop push add mov push and pop pop sub inc leave mov add xchg dec pop add inc fsts inc and pop inc mov rcr pop imul pop shlb inc push jg add in dec or scas mov lahf jg mov (bad) in pop push lock (bad) jb stc cmpsl pop jmp stos pop pop clc mov out mov lock pop cld or incl dec rcrb dec nop pusha push sub mov cltd cwtl pop mov jo mov adc mov mov or sub (bad) or xchg push mov (bad) and add cmp adc and lea pop xchg fidivr ds push cmp pop rolb or and add xchg adc adc push push and or sbb adc sbb (bad) outsl inc (bad) cmpsb xchg cltd push push cmpsb pop and add inc notb shrb sbb scas pop push aaa adc test push dec and pop adc out sub adc scas adc xor mov pop sbb xor pop (bad) (bad) call addb sub ret aaa fsubl jo stc xchg imul pop jg and inc (bad) jg cmp data16 push negb in mov lcall dec pop push xlat sub add push push push xchg out xor pop xchg cmp add sub dec xor xchg pop ss dec inc addr16 sbb es jg adc sub mov sahf xchg (bad) es lds push mov jmp xchg test jge movsl xorl call mov and imul mov xor sbb stos and jbe ficomp adc xor xchg pop pop xchg nop push xor push xor xchg sbbb pop xor xchg lahf ja fcmovu mov add mov (bad) mov xchg imulb leave out mov xchg notb xchg test push cmpsl fwait (bad) mov (bad) jle xchg jo insb or shrl (bad) sbb inc sbb int inc test cmp push out push iret add or add sbb cmp sahf sbb (bad) das xchg and cwtl imul rcll repz outsb add out in adc fmuls (bad) les out push lcall outsb outsb lcallw lods xchg add xchg xor int pushf sub or or push movb ljmp xor adc add testl push ret mov dec sbb mov test aaa outsl mov and inc adc add das mov data16 fdivr cmc and into out push out fcomp add shlb push jnp jle push movb dec add js roll cmp dec call fisubr (bad) out fdivs fistpll arpl mov sub sbb add fidivr jnp pop sub sbb add pop aam das outsb add inc loopne or adc sub pop pop cmp lods faddp mov clc in jmp mov fcmovnb mov fucomip mov jb pushl cmpsb leave ljmp jo jo ds jo or dec xor sahf jg dec push push sahf arpl sub sbb les stos popf fistpll pop and popf decl rcrl pop outsb dec inc test popa stos nop adc add stos mov xlat inc sub pop aas xchg cmc lret sbb xlat and sbb jle cmp setbe outsb (bad) stc dec dec nop mov repz roll stos add cs sahf mov movb inc jb es icebp cmc mov dec fadds clc (bad) lret mov ds or stos js xchg and out (bad) dec xchg imul mov fiadd or pop mov icebp mov mov stos loope iret inc inc pop es ljmp pop out pop inc pop (bad) mov push adc ret mov inc in call outsb loope into add out insl pop les stos imul outsl xchg aam or nop inc cmc fistpl mov das ljmp mov test mov in and inc and xor sub xchg fs jmp inc sbb into jecxz sub lock fidivr fmul scas and xchg push xchg movsl sub pop subl aaa adc pop daa ja dec jb inc orb int push inc mov (bad) lret push mov adc push sahf jp js adc mov sbb insb addb inc mov push jmp lds push xchg ja fwait jnp rcl xchg dec push adcl mov cmpsb sub insl xor mov fwait jno mov cs push stos ret fnsave push std mov mov js ss xchg mov aas adc mov insb add adc adc pop das mov jmp mov outsb call sahf es or cltd call mov scas data16 icebp out rclb cmp out pop aas cmc repnz push pusha addr16 aaa ret sarb mov push jo inc jg dec aaa (bad) adc out lcall (bad) cmpsl nop sbb insb sub fwait andb fcmovne (bad) lock sub dec xor add pop push mov enter repnz xchg or mov cmp or fadd push out inc popf (bad) fcmovbe out shll call xchg (bad) arpl dec push (bad) sahf fsubr nop dec inc dec in repnz mov lods push ja inc loopne adc mov push test pop inc out mov sub sbb xor insl test into mov (bad) pusha inc stc outsb mov or and mov sbb adc push or inc rclb adc add jmp inc and push push sub push xlat xlat xlat mov xlat pop adc add mov adc inc mov cmp loop,pt out cmc inc stos and scas out gs add sub mov mov (bad) xchg xchg lret stos push out push jle aas inc add loop inc es xchg stos add ficom cld sbb xchg or xchg data16 push xchg cmpsb adc pop ss xchg ja push mov jg call push sbb decl je das imul lods and lcall mov cmpsl or and push into rorb cmovbe call mov out out (bad) mov mov sbb jo popa fisub sbb or push frstor inc inc aad loopne out sarl mov xor pop rclb cmp cwtl imul jge cs rcrb (bad) stos lcall imul pop inc xor cmp push and cmc mov popf jae repnz into test jmp inc adc sub pop shrl jmp and stos lcall ds scas mov pop mov lods and push lea xchg outsl jbe mov ja (bad) scas push test mov jl mov pop xor push xor push sub rolb and fdiv mov mov out into jne push dec stos popa leave xor cwtl dec pop jg test push inc dec push loopne xor push jle pop adc sub mov dec mulb xchg xchg fisttpl loop,pt js sbb jmp lods into lahf xchg les mul in clc ja in add scas nop jb sbbb into outsl xchg fs push xor (bad) mov cs cmp mov fwait jbe inc jns dec sub pop es lock adc loopne and out outsl imul dec fs addr16 add pop inc mov pop sub aas iret adc push push mov jb add nop push imul (bad) mov in in out fsubl in pop les push fucom call shlb xchg jl dec aas push inc add out scas dec mov nop adc pop ds and xchg es outsb out rcrl (bad) mov aas adc clc xchg lret (bad) (bad) dec cltd dec add es cmp pandn mov rorb js bound or les pusha xor lock jbe mov push push mov loopne xchg out in out fisubrl dec (bad) mov nop sahf xchg mov push cmp pop adc das pop xchg xchg pop repz divl mov mov push mov mov les out imul jge or add mov dec xchg push (bad) out mov mov cmp addr16 pop xchg ds inc xchg add inc inc mov es mov cmp sbb idiv outsb sub out adc ds mov (bad) adc stc out ljmp les mov popf xchg push (bad) mov pop jg jl loope aas in out cli clc mov xor jbe jns dec (bad) pop pusha pop mov aas out add fs test call cmpsl jg hlt imul adcb clc inc push push iret push add insb mov jge sub shlb pop adc adc scas pusha les jo,pn and xchg (bad) cli fbld ficomp mulb lret push mov popa (bad) pop call (bad) in in or je sahf shr cmp aas xchg jle dec push inc cmp ds xchg push insb mov jg ds cmp xor push push push call xorl lret int3 aad fwait xor out inc fisubl mov push or adc sub dec divb pop rolb adc hlt mov and cmp cmp pop andb pop xchg mov loope aaa inc add push out cmp pop pop int3 ret aas lods dec imul xor outsb aas out mov test mov test pop mov aas dec les rorb mov (bad) jle inc jns pop sub pop xor fsubrl push fimul rorb add add or pop pop test push daa sub add lahf das rcll mov push sbb or xchg xchg push hlt fisubr mov aad mov arpl outsb jmp lods cwtl mov xor pop inc outsl aas jecxz jecxz push out mov push test xor (bad) and jecxz and das or push cmpsb andl cmovb scas leave lea xchg cli jg sub xchg mov cmp je or mov lcall add or dec push xor andb jecxz (bad) stos add das fildll and push sub sahf pop mov sub pinsrw es aas and sbb mov cmpsl or gs cmp sub mov nop xorb sbb add jle,pt inc rcrl ret outsl inc sub lds inc hlt test test insl sub inc fisubr adc xchg sbb push sub mov xchg lret add push mov xchg lds sbb call pusha inc pop lahf or adc ja cli jle in add cmpsb outsl dec out mov cmp push rorb add nop mov sbb cmp mov mov jo adc dec pop xlat (bad) pushf add inc fcoms add xchg xchg jp lds pop popa xchg dec xor andb adc fistl add push mov push push call (bad) pop fucompp jno mov jle push fsqrt mov adc inc test mov adcb pop xchg jle ds sub cmp out cmpsl mov mov mov pop call mov into es add cmp arpl push jle mov aam xchg movsl push inc je jne pop call xchg aaa push or inc maxps (bad) push jle inc sub or xor adc mov in inc xchg inc add ds (bad) iret rol push add xchg add or imul inc js pop push movsb (bad) icebp dec jbe jle out insb mov mov imul or cmp and in out outsl pop pop loopne mov cmp push push xchg mov mov push fwait jnp test loopne jmp and ljmp and xchg add sub iret sub call es mov (bad) fdivr outsl shl loopne cs xchg out mov subl add push push aaa rcrb ret sahf ds pop sti inc ss xorl adc lds inc cmp rolb mov outsl dec sub or movsl xorb xchg scas dec call pop mov mov orl add xchg (bad) das (bad) lahf jne cmpsl pop cmp sub decl sar add jmp roll sarb fidivl leave ja (bad) fiadd fstps hlt test mov adcb call push jno outsl popa (bad) xchg xchg push jg iret (bad) in push jecxz (bad) cld add shrb (bad) mov leave clc popa scas push ss loope aaa inc sub (bad) xlat lret ret arpl fisubr sbb add or sar mov jle test or (bad) fbld mov push out or inc add pop mov xchg push pop sub aam mov adc mov xchg push out sbb mov ja icebp push or and call fidivr fsubl nop scas push push xchg xorl aas xchg jno pop dec popf dec into cmp add imul icebp out mov cmpsl add or adc movsl add iret ja mov scas (bad) xchg (bad) fdivrp lahf (bad) push jle ret jae (bad) sbb sbb add ds adc add in fcom add (bad) rol add cli into jl push scas add add ficompl fidivrl outsb mov inc sbb jo add jg mov xchg mov push hlt ret push (bad) xchg and mov loopne call gs and outsb fsubrp insb or lea (bad) jle popf pusha loopne and jg aas js push fimul out xor jb sub and mov inc out adc mov pop or jge lret jp aam push cmp dec pop push push xchg notl or test in ret xlat inc add xchg mov adcl dec cld test adc jl push daa mov sub pop xchg xor aas out loope mov add scas mov jo sbb mov lods cmpsl push mov jp adc xor mov pop mov sarl bound es push aaa fild pusha lahf pop divb aas hlt and roll jmp imul or lods lods add into int3 jmp jo adc push aam jno aas jmp and xchg imul nop dec cltd (bad) scas aas movsb sarb ds ja cmp jne push shrb mov notl cmp and data16 enter enter and dec aas xchg insl dec (bad) aam dec inc js (bad) lea jle xor cwtl xlat and sub xor imul jecxz into (bad) into lock nop dec (bad) dec xor mov aaa cmpsb push cmp dec loopne pop pop lcall loop stos (bad) mov pop aas jg mov mov cltd bnd add out loop in sbb out test cwtl ds pop ds xor push scas fwait dec add inc cmp add aas inc xor jg dec and sub movsb cwtl jbe fisub xchg cli dec adc hlt cs sbb movsb out sub loopne push lea and fdivrs and mov in ss sub fld adc mulb lock mov pushf mov xchg jae pinsrw push pop jae das ret push xor jg cmpl cld jg cmp data16 out (bad) mov out jecxz adc pop mov orl out aad out dec jmp xchg ja dec mov pop jg inc push lret sarb jp je (bad) push push adc xor call cmc xadd aas std enter into (bad) mov rorl fadd into aas xchg push out comiss scas mov add adc pop aas xchg jmp jmp std incb push or scas xor nop sahf scas add xor into rolb dec mov cs lds ss sub js aas xchg push adc (bad) lcall jno sbb sub dec ja xchg push mov ds into fidivrl inc mov pop pop dec ja loope push iret out pop adc leave mov xchg jle das imul pusha (bad) push stc lock jle jecxz cmpb scas imul sub inc xor sub sbb jmp mov inc jp jle (bad) aam pushw mov movl pop sbb sbb ja sub cwtl inc or ss sub (bad) mov fcmovne into popl lods lods lcall push (bad) xor push ss xor outsl push dec xchg orl aas mov (bad) loope push mov lidtl aas ljmp push hlt or push ss bound aas inc sbb rol cmova pop sbb (bad) testb add mov push (bad) xor movsb pop cmpsb mov ds nop dec sub jg mov or cmp clc das hlt les iret lods mov cmpsb sub inc xchg jb xor cs add add fisub popf add mov mov scas mov aas imul stos ret mov aas cld or push out pop idivb ret mov add cltd mov jl clc cmp outsl outsb mov mov adc cld mov jnp fwait jno push js (bad) xchg dec sub fdivl or add push icebp ret mov fxch int3 adc adc movsb push push sub test xchg mov add add sahf into addr16 data16 out (bad) push cli add aaa in repnz mov mov daa aas xchg in and push mov iret sbb ret rol cltd scas scas aas add ss push sahf mov dec pop sarb mov push xor xchg push mov sbb shrb fisub aas ds jge out incb cmovno push pop fidivl or jge cmpsb mov cmpsb push repz hlt dec push fdiv aas mov sub popa push push cld daa (bad) pop mov push data16 xchg sahf pop xor xchg cmpsl adc gs jb push aaa mov fwait sbb lock std pop jl ds subl aas stos pop xor cmpsl xchg mov jg or in les pop sub nop shlb mov incb add cmpsl jmp inc xor xchg jge aam push xorb out push pop adc jnp icebp hlt outsl lar imul (bad) add (bad) ds dec loopne andb das inc inc decl or pop (bad) adc sbb loopne ljmp xchg insl (bad) lock inc jg arpl sbb pop leave and pop outsl adc xchg mov pop mov mov subl inc outsl pop xchg add or jg loopne mov lahf sahf and or add icebp call mov cmp adc add cmpsl das add inc cmpsb jl sub xchg movsb sysret adc aas xorl xchg push mov sub or mov inc pop call les inc push fimull cld push jg pop inc ja and sub dec rcrb daa xlat xchg mov sbbl call fsubp (bad) out inc or mov (bad) push insl and jecxz add mov nop or popa cmp mov (bad) imul adcb pop dec jns sbb pop decb fiadd (bad) jno aad sbb jg or or or dec jg loope mov pusha push inc pop test outsl (bad) call xchg test addl push add fnstcw fsub push in out hlt or pop add and imul mov cmpsl add add lahf pop cmp arpl insl dec push insb push adcl stos sbb or add mov (bad) mov lcall inc fs jns in dec inc xchg subl mov lahf ljmp out and outsl push inc insl (bad) mulb xchg mov les aaa jb jle lahf mov jle rolb push (bad) jbe sbb add aaa in out ss das popa sub mov popf cmp cs lahf mov fmuls xchg add mov out in rclb pop mov rol add sahf dec je or call add mov inc jl les sub test out loope push les out ss adc scas pop or jecxz std aam or mov ret push push and cmp fisttp push xchg jle scas sarl pop rol push (bad) std and (bad) xlat sahf loop push hlt notb pop and (bad) fnop lds dec xlat daa add pop andl cmpsb roll jbe aas testl mov mov out arpl and mov scas scas lods imulb mov pop cmp (bad) or pusha pop addr16 pop cmc and pop lds or sub dec cmp or ja cli stos cs (bad) iret mov fnsave fstpt into mov pop pusha xor call pop inc sub push loop adc (bad) aad fsubrl cltd mov into push jecxz flds jmp popf subl add ss push and or adc dec jle push in loopne insl fdivl scas std mov sahf iret stos cwtl mov movsb pop cmp stos imul dec mov mov jne cmpsl pop (bad) and add sarb pop shrl pop jle push and and scas sub dec add xchg or (bad) int sub xchg fistpl into ds ljmp mov flds or mov mov mov add ja push and addr16 (bad) (bad) mov sarl cmp insb jg lods xchg subl ds xchg out push cli (bad) cmc sub out jecxz mov bound fildll imulb (bad) or pop cmp popf inc inc inc roll das inc sub add sub push push inc push dec pop ss push hlt enter ret ret or cs push xor mov pop ss pusha ret int mov loope rorl mov icebp repnz add xchg andb add add (bad) add js idivl data16 mov ss push mov adc xor xchg pop ja js lret (bad) leave mov movsb out xchg xlat sbb pop ljmp inc scas ja (bad) mov add xchg cmpsb pop stos outsl dec push outsb or sbb pop xor mov dec xchg inc mov push cmp add das push pop add loope lock lret jne push mov stos (bad) ss xchg (bad) mov push loope xlat sub mov (bad) xor sub fcos test rcrl (bad) divb pusha insb sub popa mov nop addl test push push inc sbb mov out fildl (bad) insl push sahf sarb mov jmp adc inc xchg clc out int3 cmpsb xchg xchg xchg daa lcall dec jb mov insb inc pushf imul jl inc or jg inc xchg push cmp xor sub pop sbbb xlat in ret mov inc or rorb add push mov in lret shr inc add (bad) es or incb mov pop add fisubl clc movl mov jbe icebp add seta jo rclb scas lret pusha or mov es dec xchg mov (bad) negb iret cmpsl or sub cmp mov xchg mov add sbb jle mov sub scas fwait pop cmp xchg sub (bad) in dec jecxz jmp mov dec ret les or pop into clc and loope xlat mov dec sub jl (bad) jle pop leave pop pop outsb push cmp add add rol movb xor sahf inc hlt shlb insb inc and (bad) xor aas mov scas xchg icebp mov adcb je addb mov cmpsb add jmp pop loop cmp cmpsb fcmovnb jbe xchg add clc popa sub ja ljmp mov xor push jo scas jmp shrl xchg ret mov xor mov mov xor cs cmpsl jne pop pusha sarl lret pop inc (bad) sahf lods mov (bad) ss jle push pusha mov sbb inc push movb (bad) rol sbb jle fmuls aas negb or enter add pop es loopne dec xchg subb pop cmc in pop push and cmc add inc clc into (bad) mov lea add push mov movsl pop inc xchg sbb ret divl out scas mov sub push mov dec add insb mov add lea push ss pop add out rcr sbb cmpsb sahf aas mov and data16 xor pop negl fadds and das into adc test pop cli nop push imul sbb aad rclb mov cmpsl lea push push adc inc mov xor loop adc mov and mov das into stos jns jbe cmpsb fistpll adc scas mov ds (bad) lock inc add push inc das repz scas test jg ss ret xchg adc pop mov in call add cmp js imulb gs mov push lock cmp mov into pop add es loopne xor outsl push rcrb outsb gs push aas inc (bad) jle or das jl mov out dec cmpsb mov ss (bad) fisttp mov push add sub pop jmp add fisubr loop mov mov xlat or scas in mov out cli push and or push and push outsb rclb inc ss dec xor add repz cmc les push push add xchg lods scas into push push add es add sahf js xor loop leave outsb adc (bad) jl cmp or mov or inc out movsl pop pop cmpsl inc xchg ds movsb xchg mov mov and data16 xchg xorl add fucomip (bad) push push dec sbb int3 scas rol (bad) inc mov repnz cmpsb test or mov pop scas aas cld (bad) mov xor arpl jbe pop outsb (bad) movsl jo es push cmp adc aaa or mov xchg loopne xor out dec pop add cmp popf insl ds mov rorb jp xchg dec add add jecxz mov (bad) scas shlb dec pop outsl pushl ret push fimul sbb pushf out outsb add add icebp lock into call fildl or pop pop push loop or (bad) mov sahf dec addb mov (bad) (bad) in fcmovbe sti repz xchg jle insl xchg jno in xchg xchg inc sub or ss orb fiadd push lods icebp pop sahf into stos and mov mov test sbb mov lret add push add out xchg push outsb pop aam mov inc and sub or cltd pop outsb loop dec jecxz data16 (bad) jge or push lods add imul (bad) cmc fmul ss xor inc inc rolb mov push mov push dec sbb pusha xchg mov add cmovno pinsrw push sub and add clc mov sub out or hlt sub mov jle mov push ficom push jo cmpsb mov xchg subb add jae mov sbb outsb outsl (bad) fisubrl mov add dec push add mov fadd es or cmpsb fmulp pop push clc (bad) clc fmul imul int jne fadd iret xchg data16 das inc jno loope sti out call pop aas imulb cmp pop dec jecxz dec add dec sbb push fst into insb add pushf dec xchg arpl data16 mov (bad) or add scas or mov push scas jo icebp xchg data16 xchg xor add and add (bad) fiadd add fistp fnstsw mov shlb or xor outsl add enter andl call inc pop sbbb popa add (bad) outsl in mov enter pop jbe dec xchg push dec dec into mov dec xchg jo add rorb aas push xlat ficompl add mov outsl mov and outsl xchg push xor outsb xchg jg jmp das data16 mov sub mov dec in adc out fisttpl lret mov int lock rorl sub mov jmp adc dec (bad) scas push inc and add ret sub (bad) pop rcrb outsb dec and push add sub mov sbb push mov cltd (bad) outsb outsb jno add sub cmp jbe loope cmp movsb aas push inc lds es sub lret ds sahf cmp sbb push pop push push (bad) cmp into std repz xchg iret mov test adc shlb add clc out xor xchg sub jne lea ds and loop sbb push mov xchg out adc addb jecxz push pushf or mov mov sub add ss mov dec daa pop iret mov mov in pop add jbe rcrb inc xor mov xor clc out xor pop xor cmpsb out cmp out fimul fsubl stos scas imul subb mov xchg push mov mov scas push jo inc (bad) or inc (bad) dec add mov mov and and fmul (bad) add stc and pusha jle rclb and sub (bad) jecxz cmpsb (bad) ljmp push scas xchg jo pusha dec xchg xsha1 cmpsb or roll mov jo cli es (bad) insl xlat das imul jb mov shl fiadd aam add jg cmpsl in out sarb outsl add add dec pcmpeqw sub into cli push add iret sti jmp mov inc test xchg sbbb xchg lea insb out lods xchg jge fs inc ret scas fimull daa pop mov pop or iret inc add inc inc clc outsb stos inc push add shl push inc cmp cmpsb push xlat add fdivl pop fdivrs das lock rorb adc mov psrad out sahf xchg add lods push add add xchg into xor iret int push rcrl push sub ds pop mulb mov into fs sub daa out shll or push and fs jp pop push scas mov outsb pop and ja push pop aas push sub int sti mov les (bad) faddp mov lahf adc inc add stc sbb nop xchg jle lock data16 pop cmp pop lock mov lods dec call mov pop pop xor nop imul das dec pop aas sahf or add (bad) xchg xchg out pop loopne add scas add pop mov add mov pop add dec cs nop or xchg jg add pop lock fbld xchg inc sub clc aas (bad) sarl ljmp pop stos fcoml and frstor aas and inc xor sbb inc outsl jmp (bad) mulb not repz mov adc sbb push out mov imul adc ret sahf add push aad inc mov scas or pusha imul dec sub xchg adc lret adc insw cmpsb jo cmpsl aad inc insl push sbb dec shrl dec scas aaa and mov test lgdtl movsb and popa push xchg fstpt dec mov mov push outsl push sub mov or jg test sub iret dec and rolb adc adc rorb ret mov push test (bad) cmpsl mov pop cmp dec xor or mov mov sbb sbb iret sbb add cltd imul push out xchg scas test movsb jnp outsb fnstsw js cmp dec imul ret div jg (bad) dec and fisubr push add inc mov roll pop and mov popf push xchg pusha in and mov jg je and add stos xchg cli xlat mov stos xchg rclb les (bad) imul push out scas stos add stos inc cltd push dec push sbb sub pop cmc clc stos test out push in xor push mov movsb mov (bad) cmpsl and ret push das pop adc adc cmpsl loopne (bad) or sbb mov push movsl aam xchg cmc in into roll out fildl into enter cli sbb movsb mov imul xchg mov rclb test dec push scas pop aas push out push add pop daa adc inc shll xor popa ret adcl ret shlb (bad) (bad) pop mov adc adc aaa lock pop push xor negb mov in mov mov push test xchg mov push outsb push inc push outsb pop ds push sbb call mov cmpsb sbb jecxz (bad) fnstcw cltd jle and mov repnz add js test lcall xchg push packssdw pushf mov cmp or inc movb lahf mov push inc cs in mov iret mov adc (bad) inc mov adc inc out pushf xchg test sbb jbe pop push push scas cmpsl mov push adc (bad) pop push and inc pop pop (bad) xchg imul js outsb pop dec adc xlat mov mov fst cmpsb mov push add (bad) popf ljmp pop jnp add pop imul mov xchg fadd mov xor aad fisttpll mov enter adc test test xchg ret testb icebp stc stos bound push divb mov pop dec or adc push pop push test test add cmpsb (bad) mov inc mov out pop mov or pop adc xchg push mov pop decl mov sub push xchg jl xlat mov adc sub stos popf (bad) inc sbb xchg or push bound push in cmc mov sub (bad) mov push inc pop mov push js cmp arpl inc cs stos fnstenv outsl xor popa js movsb into je pop and mov (bad) cmpsl push jg dec roll xor adc adcl sbb sbb mov inc push inc jo sbb and in mov pop fistp in mov inc jmp test testb idivl test push nop/reserved mov nop test xchg mov inc daa sbb jp and shrl jg dec (bad) push (bad) sbb mov xchg imul rcrb mov and adcb out and mov mov insl out in jecxz mov mov enter scas shrb mov dec stos mov in sbb cmp ficomp orl xchg pop lcall jbe icebp add lea daa gs pop lcall js and shrl sbb rcrl xchg pop adc adc daa push pop add mov mov add pop clc ljmp or mov mov std loopne dec push adc cs xchg xchg into arpl push inc add icebp das xchg outsb jl dec popa mov ljmp cltd jp (bad) sbb dec aaa mov xor (bad) insl rorb (bad) outsl sub movsl pop jge xor jecxz cmpsl jmp and ss lcall enter push push dec push inc sub adc scas mov sbb mov leave lods xchg mov pop ret pushf cltd push ljmp cmpsl out (bad) stos mov out in xchg loopne loope cmc cs fs (bad) data16 lret push push mov lahf sbb xchg ds pop dec sbb popf ds pop push fdivl jge es inc clc push dec mov pop sahf lahf incb dec push xor xchg xor dec addr16 leave adc sub add xor mov push pop imul daa ret mov mov out addr16 mov adc mov scas mov push mov std call mov fs jg pop (bad) dec push mov mov pop pop mov (bad) insl out ljmp mov and pop xor or sbb add dec rcll pop add out or loop iret lcall adc or mov je cmp (bad) fs or xchg xchg jne jle out mov xchg jmp or mov xchg xchg int add (bad) icebp idiv lods sub pop out mov imul mov das scas (bad) ss push xor xchg xchg jns (bad) outsb cmp mov es or lcall mov xchg cwtl ds pop lret pusha add mov xchg imul ljmp stos (bad) into loope mov add scas dec fsubs dec (bad) outsb xchg xchg data16 notb sahf cmpsl pusha out (bad) fcomip aad test aad stos jp (bad) popa movb and inc arpl sahf jno or jns lods xorl mov rcrw dec pop insb ss (bad) inc xchg gs jp cltd inc (bad) dec cmpsl pop push sbb lcall push pop movzwl pop pop test sahf jge add test jmp jb ss out call lcall inc outsb mov ja inc xor mov decb in jg fldl cmpsb test lea or dec add push lock jle jle dec push mov imul and (bad) (bad) ss jae xchg add sahf jge cmpsb and lahf push mov and pusha dec sub sbb maskmovq testl sbb add jns mov es and test mov into in mov mov test dec push into pop dec cmpsb repnz jmp fdivrp rorl mov pop (bad) mov ds cmpsb cmc adc push mov test and mov js cmp inc idivb pop or sub lret (bad) push cwtl shlb sub dec lods adc (bad) stos or lock cmp push cmpsb sub out into jns push dec mov add (bad) push pop jg decb cmpsb nop (bad) xchg fsubrs cmp xchg inc sahf jns inc jmp (bad) into scas (bad) out push test test and xchg lret test inc xor push enter mov rolb mov sbb push mov repz pop push xchg jns push fs bound das das push or out das mov outsl adc ficom mov int sbb add ja xchg mov loopne inc rorl (bad) add mov (bad) (bad) aam ror sbb (bad) pop movntps sahf adcl out (bad) out rolb es xchg xor das andl dec sbb push test jle lods sub rolb js test popa cmp adc mov popf and xor outsl insl xchg adc aam sbb pusha dec pop outsl xor sbb or xchg (bad) and cmp sbb jge mov fisub mov das sub cmpsl loop xor sub nop and fstl dec push jle outsb mov pop (bad) pop dec test xchg xchg rcl mov out cltd xor scas rclb push sti add lret fistpl sbb pop lock push mov xchg and mov lods jecxz pop iret sub add clc jg xchg ficomp inc dec inc xchg loope sar into (bad) xor xchg mov xchg push pop dec and cmp adc mov loop inc and dec popf lods inc xchg (bad) pop (bad) pop cmp dec mov add push cmpsl sbb add fs das or push shrb inc xor iret mov mov pop out pop mov (bad) (bad) fstl sbb icebp popa or push and xchg leave repz adc ja or push pop call pop add movsl mov aas add dec inc ror movl pop adc loope (bad) aad inc mov lcall or call mov orl mov push xor jg jno xor xchg mov push pop inc xor addr16 push fcom adc (bad) fwait addl mov push movsb pop cmp ss xchg icebp (bad) push pop (bad) push sub addr16 lods jmp (bad) or aas out mov cmpsb mov lahf jo mov dec inc and pop aas push sub cmp incl loop cmc cli (bad) adc jbe push cli (bad) bound (bad) call xchg jo xor and xchg mov popa xor inc xchg fs neg mov sarb xlat es inc ret xchg mov incb daa (bad) aad bound icebp mov mov rol ret xlat ds xor (bad) (bad) fildl pop and sub div xchg xorl jle pusha outsb xor jl out fwait int sti mov push addl and (bad) movsb rol xchg xlat and cmpsb sahf (bad) in popf jns xlat movsb xchg icebp jmp jne lret fnstcw adc addr16 dec sub pop push or movsb cmp daa fxch int mov (bad) lret clc mov dec aas xchg pusha lods and maskmovq testl xor mov add jecxz out jmp sbb mov (bad) mov push dec mov dec ljmp dec push outsb sub mov xchg mov jle push cmp bound jne cmpsl sbb addb fbld cmc and out pop push xchg add xor xchg xchg pop (bad) (bad) mov inc loop lods cmp rcl cld fidiv push xor sbb xor add xlat popa and dec xor xchg hlt xor insb inc and jo andl sahf jg pushf mov in not je or inc outsb call push xchg outsb nop outsb jg inc outsb mov inc cmpsb or lahf sub mov cli mov lods xor mov and jp ficompl cli cmc jno and cmpsl and decl pop inc pop repnz mov jnp pop cmpsl cmp cld push pop cmp scas sbb inc add dec xchg or push lahf xchg or jle popf mov out cld inc add es or sahf mov es outsb mov inc xchg xchg sbbl push ss push aas fisttp aam adc mov sub dec (bad) movsb jge adc addl int and xor or pop hlt lret (bad) fdivrp adc add mov mov (bad) pop cld dec sub mov scas out imul loopne mov push scas inc mov jg out fdivrs push scas mov dec out mov cmpsb lret pop (bad) pop cwtl jl dec mov (bad) es loope sahf (bad) popa out into mov les jl xchg mov arpl push xor movsl sub sbb dec loop (bad) repz and outsb jle push movsl jne pop iret (bad) mov (bad) pushf xchg scas xchg test lds lret movl cwtl and and sahf mov mov xor push xor add fisttp (bad) lret mov push push mov xchg js sti add (bad) jl,pt sahf mov jp cmpsb pop cmp push cmp das sbb adc ds flds sub push je dec jle push add ljmp jno sub cmp (bad) incl idiv std fdivs (bad) insl inc xor loope xor aaa xchg (bad) push push adc or mov xor pop (bad) (bad) fiadd jmp cmpsb push jno into jle (bad) std add jae xor (bad) and scas arpl push pop push decb icebp mov dec push dec into insl push cmp xchg or adc fst lret cs lret rcl lea dec xchg mov ja shrl notl stos mov popa cmp sbb xor pop xchg mov sbb (bad) mov inc xchg mov out push out test jbe scas mov push ss inc cs adc add leave mov push pop push (bad) xchg jo imul movsb mov shrl pop (bad) push xlat and xlat (bad) xor and push dec rcll icebp std incl test mov or xor push xor pop xchg mov mov pop pop mov ss fidivr mov inc sub cli sbb jae (bad) jne int push adc pop mov ljmp dec (bad) mov cmpsb pop clc ficompl push data16 aaa mov out (bad) imul test inc inc cs add dec std or pop es test into and movsl movsl (bad) xor int lcall inc sub das cld fcoms daa jle inc iret and and pop out fisubl mov xchg insb jge mov push jnp fsin das sub pop (bad) aam xchg push dec pop push pmaxsw out add mov shl (bad) into je inc mov lea rolb jp mov add pop mov lds xlat scas cmpsb (bad) adc int3 out jmp xchg mov daa adc ds aam mov pop ds sysret scas orb push ret test imulb cld andl dec adc push andb lods dec mov pop rcll lret adcb call or inc sarl xorb decb ret lret (bad) push mov adc (bad) ficomp adc (bad) mov push ss push inc roll imul push dec mov lcall pop mov in cmc das out loop dec mov imul cmp and dec lods pop test (bad) mov mov jb test xor push push xor mov inc fidivl test inc sbb xor or xchg cli pcmpeqb (bad) (bad) cld adc pop push mov test dec xchg daa not test sub add cs sbb cmp push aad fistl lods das (bad) push fild nop sub data16 cmpsb testb sbb les (bad) (bad) pop aaa pop test ds push xor addr16 popa xchg sub mov pop dec scas (bad) stos add outsb fcoms pop and add iret or incl xor lret out pop test ret push adc test cwtl cmp lahf fist push mov ds mov cmpsl sub fnstsw test adc in out daa les mov fs cmpsb mov ss and push and mov loop inc daa out mov arpl mov pop xchg xchg imul add and cmpsl idiv sub or les push or push mov mov (bad) cmp ljmp mov xchg out fcoml adc in and push daa cmpsb xlat movsl in sbb cld cmove mov jmp jmp mov or cmpsb push incb rcrb push outsb xchg push clc mov clc cmpl fcmovb (bad) or and adc pop bnd stos pop (bad) enter lcall cs aam push jo pop push jo (bad) jg mov mov sub shrb movsb cld out mov push daa inc outsl add sub rcrb lahf push mov inc pop push cmpsb inc mov mov pop (bad) cld aaa and bound lret stc mov xchg notb cld inc out (bad) mov ficoml test xchg cmpb inc aaa sbb (bad) xlat outsb movsb mov cwtl fild xlat push xchg test idivl (bad) test mov xchg push mov ljmp jo inc mov aas lods push push aad (bad) aas fwait (bad) into jo inc sbb incl in push lret jmp dec das jnp or les out cmpsb jg pop cld push in (bad) mov fld (bad) jbe das sub push iret mov mov cs iret aas push in (bad) xor (bad) inc fcmovu out in out icebp scas mov jmp out jmp jecxz outsb outsb inc mov fwait add out addr16 fs mov nop nop lahf out sbb movsb cmp push mov and scas insl push sub aas (bad) mov inc sbb lock jge cmp pop or push xor adc or push adc scas jge les and divb test add dec pop mov movsb push ss ljmp test loopne xlat push in clc stc mov lcall je mov imul (bad) mov outsl dec dec scas out jp and dec or sahf mov jmp icebp adc scas inc (bad) std cmc lret mov or adc sahf xchg test jle dec sub aas jne fidivr add ret test pop cmp add cld stos push test xchg mov mov es jbe dec iret add add fisub addb loope iret pop jne pop xchg cs xchg rol (bad) pop inc sbb mov outsb es call out icebp xchg ret xchg cli xchg iret push es pop mov mov and sbb xchg ljmp into mov pop pop dec adc pop cmp add and inc push mov loopne jbe pop cmp xchg aad mov add jle shrb loope jle dec cmp mov mov aad clc pop addr16 push jmp jmp or sub aam dec adc pop inc mov jle push and dec fild push stos outsb outsl insb pusha sub test shrd mov (bad) rorb cmpsb (bad) cmpsb mov mov es ljmp mov mov inc jne ja,pt jo movsb stos insl fwait add jle xchg scas mov (bad) in data16 inc ret addb xor push (bad) out pop inc add adc push fld (bad) out test call clc pop test inc in loop inc inc pop (bad) fbstp xchg mov inc loopne lods push push data16 jp adc inc std inc mov add outsb push dec lsl stos daa je xchg negb movsb mov in aaa cmpsl lock ds loop out jecxz pop push push xchg sub fiadd lret xor adc adc (bad) mov dec jbe inc push stos mov inc int or add xchg xor sub pop push xlat jecxz mov xchg imul push (bad) aad (bad) lret xlat scas sbb inc dec mov mov (bad) and out (bad) xchg (bad) nop mov into lds (bad) xchg ja daa fs add rcr push faddp sbb jmp cmpsl imul pop and loop repnz out aam xchg movsl dec faddp mov add push sahf inc stos jae mov scas mov dec fbld dec add or loopne mov (bad) int3 jbe icebp push enter out mov movl push scas push mov push (bad) dec xor add dec fimul sbb xor push dec cmpsl roll pop call xchg scas xchg je (bad) outsb popa dec push mov pop mov lea mov inc into jg aam cmpsl add push lods pop call addr16 fisubr sub lret test arpl fildll nop and out push sub mov adc (bad) inc clc sbb fcmovnbe ret mov xchg adc flds out xor data16 shlb pop daa daa sbb add add jp rolb push jp add outsb setle sbb cmovae mov cmp dec xchg jb (bad) iret mov pop ljmp mov ret dec outsb maskmovq in xlat (bad) mov dec adc (bad) mov pop clc outsl mov cld mov mov jecxz lcall sbb xor stos (bad) repz (bad) (bad) jl mov test cld bound and (bad) movsb mov and icebp add pop in and pushw ficom lock adc int bound and iret xor pop rclb (bad) cmp sbb jmp mov mov fildll cmc or pop lock add test lods (bad) mov bound inc add inc sub leave sar sti and cmp add decb sub mov shrb fidivr pop pop (bad) fbld (bad) push dec pusha andb mov ja cmpsb cwtl pop aam (bad) mov jle mov dec inc mov lock les add mov push cmpsb push push add stos xchg mov ds inc adc mov cs mov sbb dec mov hlt xor mov xchg jle push add sti fdivrp add xor or add add push push push es pop imul ret (bad) lret arpl fcoms insl mov rcl push mov rcr lock inc das sub jg cmp ss ljmp pop dec test inc dec inc (bad) jecxz dec imul outsb loop cmpsb lea jnp inc decl in cmp jmp nop in mov lods imul inc je or inc in nop jg mov icebp and mov xchg mov addr16 addr16 setg mov jne stos mov movsl mov iret cmpsb je,pt mov xchg add pop adc test (bad) aam ds daa cmp daa mov mov mov mov lret adc repnz movsb lock pop mov xchg inc into sbb dec mov in sti out decb push js push hlt inc mov pop dec sbb cmp push push into jnp pop push add push mov push inc scas sub push decb pop bound dec adc incb out lods push pop push xchg sti ret (bad) ja scas mov pop push test test mov xor pop xlat mov jg jbe (bad) repz sarl adc and xor incl rolb out jno in loopne and mov es cli hlt outsb add push jg mov adc push sbb sub das mov lock add mov push stos pop cmpsb xlat jbe shlb pop (bad) sub lds push in (bad) fisub add and add aad (bad) fdivrp push fwait sar cmc fld loopne sarb mov dec add inc es std sub out rcrb jl imulb xlat jle jl js xchg add call xchg jp cmp aam cmpsb mov rdmsr sahf push jne orl cmp fidivr mov push out call and call inc or pop sbb call dec and sub stos cmp jnp inc daa add sub xorps jp arpl sub mov (bad) mov xchg idivb push push push sahf shlb repz mov outsb sarb cli sub sarl push and inc push (bad) out test mov paddq mov lds jbe cwtl (bad) insl dec sbb add dec mov and dec or les adc push es mov es sti ljmp push aad xor neg (bad) in ljmp sahf aas add aad out shlb push jne pop xchg (bad) hlt out xlat or add push xchg ficomp pop sbb pushw cmp scas cwtl ljmp mov (bad) xchg rolb addr16 cmc fadd into out movsb inc pop inc push xchg xchg sbb cmpsl inc mov dec lock dec mov mov add adc inc cmpsb pop mov in mov fucomip rol pop (bad) mov aad sub jge push jle clc ljmp inc jmp mov mov lahf adc daa add add lret xchg loope adc movsl addl scas addr16 mov (bad) enter sub leave out push or adc xchg inc neg ret fadd or mov pop push scas pop inc out insl nop xor outsl sbb cmp add or pop (bad) or (bad) (bad) pop loopne fs dec add add add cltd and leave adc fisttp add pop aas and incl xor and stos pop pop pusha inc xor xorl or push dec loope (bad) int push sarb ret or pusha shlb or or adc inc nop cmpsb sbb or les addb cmp sub subb (bad) imulb mov (bad) negb cmpsb sbb jge ss pop mulb sbb mov and lods sti xchg adc sub incb xor (bad) sub xor lahf xchg sarb jmp ja stc lahf jb cld (bad) lcall nop gs cld xchg cld insl inc sub dec and jecxz adc enter es push outsl out inc push sbb add and dec and xchg cmpsb leave cmpsl or sarb xor or test outsl fadd ja mov mov (bad) dec into mov add mov mov jns xchg ja (bad) decb ret xor or xchg lock cmpsb push arpl fldl xchg sbb xor dec imul (bad) in mov repz pop loope rcrb mov stos nop xchg xor xchg jno sub push xorl cltd mov jp popa aaa jle xchg jl scas popa sub in lock jbe xchg push pop (bad) leave sbb add and and push dec stos divl xchg inc jne ds fmul (bad) out or scas test ret pusha movsb pushf mov insb data16 test and (bad) jbe dec ds nop push mov fiaddl subb (bad) mov inc es or jp sbb adc (bad) or xchg ds ficom add and stos dec dec es jbe push sbb into call dec push mov add out jmp outsb ss rorb je push xor push adc fdiv push xchg insb fiadd fisubl fwait jne,pn jp pop fistp mov or and stos out jmp loopne adc adc mov xchg stos mov push add arpl lods lock add stc idiv dec lahf adc push int fsubl push das and dec dec push push ss cmpsw jge push mov jbe xchg jbe repz sbb (bad) xor ljmp add sbb mov push push or (bad) sub out add (bad) mov or push sahf aad add insl push in jmp out pop ret xchg aam add mov push outsl or lret push push push punpckhwd out cmp mov fimull mov in xor rol test jns dec daa (bad) rol push das pop push xorl (bad) fs aad ror mov jo jbe push push jbe in into pop sbb ret in dec jne xchg add and test lea add rclb (bad) ss dec push jle cs push imul lods jbe and add imul cmpsb xchg (bad) pop add mov adcb xchg mov push jle imul push push inc pop mov (bad) mov nop mov movsl out or loop xchg push mov push jg jge les cmpsl pusha mov and ret mov or sahf mov mov mov insl pop std cmp push (bad) push push int sbb xor sbb add and mov das or or iret pop movb pop or xchg out mov cmpsl rorl idivb mov into mov shrb cs mov mov (bad) movsb cmpsl into sub or scas mov push push or pusha inc xlat roll outsb jle mov arpl xchg push inc push or xchg outsb mov divl lds cmp pop ja loope and or or and and add clc js sti loopne (bad) call push xchg mov rolb ja cmp jg sti jecxz mov pop lcall cmpsl push mov push cmpsb mov mov jo sub enter inc ss push mov andb xchg out (bad) and or mov mov xor ja clc test pop push cmpsb mov sbb dec dec loop call mov xchg mov and stos pushf xchg lahf add push sbb les cmp sub pop inc (bad) push cmp push popa outsb movsb and les ljmp or adc cmp xchg jne xor arpl std mov inc add and or mov and stos call pop pusha arpl fbstp popa pop and sub push pop pop fidivrl jg in lret test push pushf lahf pop push pop mov jle xor inc mov jo pop push sarb and add or pop sub sbb iret das add mov out cld push jmp sbb das xchg loopne into clc jno jno scas in lret mov mov (bad) xor jecxz pop add add leave test daa or inc pop ja xor adc ds popa imul inc push xchg flds std add push and rorb fwait xor test and add adc in es pop mov push lock cmp mov aam pop jg inc inc jbe stos xchg mov and out cmpsb mov lahf das mov lahf out jg pop lock jg adc out mov je mov jl sarb ds (bad) fcompl leave sbb mov dec sub fistp (bad) iret and and js hlt mov data16 sub push shr insb push rorb aaa subl jg lock jg xchg mov jle push fs jg (bad) xor adc sbb xchg lcall js lcall mov (bad) inc push es dec or mov jg xchg mov into mov shrb ss push je mov call pusha scas loope mov lcall jg cbtw arpl popa lock xchg out test mov mov into lock (bad) pop je nop add nop cs pushf inc popf clc or jb iret pop int3 les xlat xchg out leave pop (bad) mov pop mov xor inc fsubl mov orl jle cmp mov imul bound and add das adc adc lods adc push pop clc and or mov rorb push dec adcl cmp sub and idivb fistp jmp test testl mov jg mov jecxz dec push lcall jg outsl inc mov inc repz daa and adc push adc test out jb jno sbb and ljmp cmc mov (bad) sub arpl mov add inc dec shrb and jle xchg loopne scas and lcall ret jbe sbb jle,pn inc daa cmpsl sub dec mov movsl lock into pop inc enter push and dec test or or adc lods pusha push xchg jno mov pop daa adc lahf and adc push das jg stc mov into stos outsb dec pop cmp cmpl popl imul stos outsb popf les push xor (bad) arpl or inc sub pop and scas outsb fisub fwait mov push xsaves out outsl lea test (bad) out sar mov addps rcrl popa xor pop cmp lods insl cmp negl cmpsl outsb xchg (bad) xor pop out test pop jg sub sub es leave fadds jmp jg ret icebp (bad) mov mov mov mul xlat pop pop mov jo mull push jg jmp dec push jg popa xchg (bad) jne xchg pop notl xchg out push add push cmpsb pop ss jle,pn and jns sub push or int or cwtl test and push xchg inc test addr16 popl or aaa jmp outsb daa popf pusha cmp push add xchg pop xchg mov lods scas xchg mov xchg data16 scas cmp add daa das jle push popl push out ret mov xchg mov out lods mov (bad) mov sbb xchg rcr arpl or inc lods add faddp ret (bad) xchg (bad) jg inc fidivl pop aaa outsb dec sbb push aas outsl test incl pop mov clc pop ret inc mov xchg jmp fistpll stc fildll pop icebp ret jmp mov test add fimul lahf (bad) ja mov push xchg xor mov cmpsl test dec push inc jmp cwtl mov in ret xor sahf dec xchg or (bad) dec sub pop or jmp (bad) inc ficompl data16 lret sbb push sbb lds lds test (bad) leave fiaddl fimul pop or jg and jo push shrb ffree pop or lock push shlb enter (bad) mov push pushf imul lods daa xchg aaa js (bad) ja push jne fadds or or rclb ret cmpsb xor xchg ret push (bad) jbe inc xchg pop adc mov das out pop pop rol lcall lea ja and add cmpsb test lock xchg cmpsl arpl ficom xlat adc push movsl adc sub (bad) mov fs xchg int insl cld outsl into (bad) jl loop cmp cmp or (bad) scas add dec lock loope mov lea movl cli push jle shrl mov in fucom call and pusha imul mov out aad stos cmc (bad) shlb dec pop scas (bad) or add xchg lock ds xlat ss pop les mov popf (bad) leave jg jmp inc sub pushl add mov shrb ret push cmp mov scas push sub stos xchg nop mov sar lcall dec adcl cmp cmp movb pop sbb decb sbb (bad) mov in jmp inc mov xchg pop ds sub fistp mov or pop incb sub sbb or cld (bad) repz iret mov add scas aas outsl pop dec mov mov loopne hlt div les sbb adc xchg aas push sbb jp mov (bad) mov int3 sub pop daa ja rclb aad mov mov (bad) stos cmpsw push xchg rclb je push xor push cmp pop add mov mov pop std lods push xor add pusha popa cld pop out ret fmulp enter xor jg out mov movl in into std fs mov or xchg fdivs pop pop mov sub (bad) mov je push das loop xor push (bad) out mov push dec (bad) scas lea lods stos out movsb movb es jle and dec idivb std mov cmp adc out and out shrb rcrb (bad) (bad) into (bad) xchg insb or add sub push xchg jcxz adc push adc push punpckhwd jnp xsha1 cmpsb mov jmp scas xor dec cmpsl jmp cltd test gs imul cs push cmp pop (bad) mov lahf mov or lock and sahf (bad) fcoml and add fimul loop fsts lock pop inc rclb addb adc inc jmp mov or mov inc fcoml (bad) and out call mov lahf push or pop sahf dec xor or lods jne mov pop dec fcoml mov leave pop (bad) dec fistpll mov in cmpsl adc dec jmp dec test inc dec pop getsec lahf shrb popa out sbb adc insb fldt decl xchg pusha inc cmpsb shrb repnz stc in out stos rcll push or mov adc (bad) in mov push (bad) cs pop cld scas call dec pop dec out xor inc test aaa or loop out inc xchg jbe (bad) xchg mov jmp add dec fdivrp xchg lock ret cmpb lock dec sti (bad) je js out ret stos mov or push insl loopne xchg jg cmp cld ds icebp pop sub jp push aaa and jno xlat pop test jbe out jg pop and adc adc imulb dec sbb clc fwait (bad) out mov loop jp outsl jg test pop cmc (bad) mov roll add fs sub adc xchg or and movl sbb aam push mov push sbb mov xchg outsl sti fsubp ret clc dec ds xchg icebp int inc mov std in (bad) ja xor mov lods mov mov inc imul test movl xchg jbe out shrl out xchg lock out in lret out sahf xor mov mov (bad) icebp call add daa enter inc aaa andl push push push test dec test insb lea pop (bad) mov adc mov subb mov stos mov or orl out dec push sbb scas outsb jnp inc xchg mov pop test or outsl lods or outsb add cmpsb mov jmp sar and fcmovnb ljmp mov inc sub mov pop test shlb hlt mov fcoml add inc daa push mov sbb lahf adc outsb mov int3 clc ja mov sarl or mov (bad) and out stos out add into ljmp sub push xchg call push (bad) lods cwtl ret shrb sub test mov lods fwait adc or data16 push out ss xor movsl xchg cwtl clc sub jbe pop aam cmpsb or mov dec shrl in aam stc pusha and stos (bad) mov push icebp push inc sub add loopne data16 pop lock dec ljmp faddl out ffree pop std loop std push adc scas inc cld faddp lret cld ffreep lret stos bound jbe enter popa jl sahf aas scas test xor fsubl mov paddusb ss lock pop lsl and rol add add dec es cs add pop in in nopl adc pop test xchg jg sarb (bad) or add lret (bad) aas movd pop rcrb and xchg mov add adc adc inc mov and cmp pop iret adcb push add xchg cmp iret add adc pop sbb inc sub xchg dec sub fbstp es adc mov inc inc pop dec push sbb push je push rclb loop sahf es pop int or cmp cltd dec pop lea sarb mov (bad) push inc mov push cmp ds or sbb and scas jbe adc or xchg dec sahf or or and pop push mov jle inc pop mov aad stos out pop stos inc push mov test dec dec push jle fwait mov incl push cwtl iret ret mov scas addr16 push or mov and mov sbb or jmp (bad) xor mov push xchg jne inc mov (bad) push mov inc pop lds sub loope int mov les push xchg sub push xor leave les pop mov outsl push testb cmp fcmovu add xchg sahf (bad) xchg test into aad xlat (bad) aaa lcall pushl push dec mov cmp xchg outsb sub xlat rorb push and push mov and popf mov cmp enter mov mov rcr stos ds in dec mov mov les lret xchg je lds scas pusha es imul je les (bad) dec jmp adc xchg lcall mov ss xchg sahf dec jmp mov cld inc mov xchg xchg push int ss add inc push pop and dec lcall sbb xchg pop (bad) pop push clc in sbb xor mov hlt adc daa adc test movsl out push cmpsl mov mov (bad) ja jb daa nop mov rolb sbb inc add mov es cwtl pop (bad) je adc ficoml pop pop out push js ss pop push mov fsubp std call sbb xlat mov (bad) mov xchg (bad) lahf xchg es faddl pop jnp mov xchg call std jl sbb or pop adc cld fistl iret push sbb mov push push mov mov insl (bad) shlb mov sbb scas lcall sbb ss inc xchg outsb dec dec push cmpsb fisub pusha cmp add decl and xor or pop cmc and inc pop xlat mov es lcall mov cmp pop add fisubl aas pop push inc xchg orb xchg pop inc test cmp push mov mov popa dec sub lahf popf add and lcall mov enter lods sbb ds call lahf or rcll addb push xor iret in dec mov sub insl sub scas lahf add ljmp ret les jl bound idiv mov xor mov push inc clc pusha add mov movsl pop inc sahf sub cmpsl mov rolb lahf outsb and (bad) mov fwait pop cmp outsl inc sub mov inc stos sub aas push or loop mov (bad) fcmovb int (bad) mov dec add pop xor mov xchg sub push add bswap or sarl outsb daa js mov rcll loopne mov mov dec mov and (bad) push lock mov pop mov mov xlat fchs jmp mov xor jl daa int3 xchg insb ja jb outsb dec lds das or fnop jo arpl cmc add mov mov adc mov mov dec adc test jne mov movsl push push xchg cs dec jg mov and (bad) outsb dec iret push rcl in or adc adc xor mov mov mov sub jns shll ljmp cmc outsl inc jg nop iret leave movsb xchg lods hlt push and das cs mov (bad) pop push sub or push fildll mov mov js fldl scas (bad) fimul in out push push sbb jl dec loope aam pop jmp xlat add into cmpsl popa popfw xor mov inc je pushl mov dec fisubr ud2 or or inc fdivrl pushw test inc sbb ss icebp repz fisubr xchg js xchg fisubr hlt jecxz aaa (bad) fcmovnb mov push lea dec push push aas js lods inc xchg dec call mov dec out or out or out jg idiv div or mov arpl lret mov call sahf out pop pop pop dec pop imull mov sahf out call fisubr test cs adc mov (bad) popf and dec jge stos jb (bad) mov dec jmp or xchg scas add ljmp fdivrp clc testl mov fldl cli mov into pop inc insl pop adc push scas xchg subb jb inc mov outsl jg dec jo (bad) std mov repnz xor fidivrl int3 (bad) jecxz call ror aaa subb mov inc xchg test int sub push out add (bad) mov (bad) lods js cld mov jl inc cli push repz xchg lahf out into leave jmp push push scas xchg pusha adc das adc jne dec test loopne fidivl out mov jnp rep test sub cmc sub sbb jo aas push scas push xchg bound pop test hlt cmp hlt xlat mov ror stos xchg jne or inc js shlb xchg jo pop (bad) jbe adc adc push mov (bad) loopne (bad) xchg ror mov dec cltd adc lock mov cs pop push cmp enter pop (bad) (bad) fadd mov scas cmp inc sbb ret push add sarb sbb iret sbb push xchg es mov ds xchg (bad) addr16 and fdivr dec sbb cmp fdivl (bad) in aam fcmovnb jno mov adc add out popa and in xlat lds popf pop cmc (bad) clc shr out add adc mov push mov fmuls movsb mov (bad) cmp dec out cmp mov rolb or in and add rcrb cmpsb mov pop mov pop addb lcall mov lods sub pop fst and mov lcall test fldl (bad) dec and push scas inc pusha push mov inc lods lret (bad) (bad) push push adc and mov xchg ja lods subl jae stc xchg addr16 lds xor add adc ret pop xchg push (bad) popa call sbb push lods icebp loope (bad) fldenv add imulb add pop out mov clc inc pop pop jge sub sbb xor sahf sbb mov scas pop ss imul int3 data16 mov loopne pusha mov mov lahf jg pop aad arpl or inc xchg ret and je ret adc test adc jmp test ficompl aas push push setne lds popf sahf inc dec sub pop pushf invd sbb push (bad) in in scas lret rclb push push (bad) aam flds in xchg xchg dec and mov add ds or mov sub cmp sbb xchg iret rol in data16 popf xchg out into and pop (bad) movsb jne pop fldl pop rcrb or add sahf aas adc xchg xor xchg pop pop sahf and aam inc pusha mov pushf jmp out aam cli sbb nop jne (bad) pop adc (bad) mov mov mov dec jle xchg push push insb cld jae imul outsb test outsl sub adc es mov ret xchg jo int xor pop les add push out sbb addr16 dec fstpl dec shll push and clc push and lea sahf and fwait mov or cmp popa aas aaa bound js outsb loopne (bad) mov mov andl inc xchg mov mov enter push adc les jp push xor push xorl pop mov leave enter sub lea (bad) and mov or mov push pop int sarb push outsl xor pop mov push ret add pop cmp mov rorb push mov cli inc lods mov sbb sub int3 incl mov shlb call xchg out hlt push mov lds mov mov adc fldl dec out test test jmp dec sub stos add insl ds xchg xchg scas outsl inc pop pop jg and and add scas popf xorl cmpsb pop js ljmp jg xor test out into and fnstcw sub jno mov add adc jno into in loop mov and mov das pop sbb lret (bad) test clc out mov sti fsubp mov inc and xlat ret shll pop in inc fstpt pop push scas pop hlt xchg lcall dec fist mov int3 fdivr stos (bad) ficom mov rol insl aam dec jbe scas (bad) outsl popa loope pop fcmovnb mov lock or out rolb stc ljmp jp out repz mov jne xor sahf iret aas mov (bad) shlb (bad) adc mov jo aas ja sub (bad) out fsubrl or lcall dec daa das adc test xchg in mov rcl stos sub mov gs push dec es scas jecxz mov adc mov and mov (bad) icebp (bad) mov addr16 out xor push stc loope lods clc ffree in add jo rolb ja add ss imul rclb pop sti mov jb aas push pop push or lret movaps pushf inc daa rcl cld enter and and imull xchg mov and push adc je iret rcl test add cli stos inc sbb mov mov pop test outsb xchg outsl pop (bad) ja and mov xchg rclb ja adc ja fs xchg xchg sahf xor push xchg mov jbe xor ret and and push xchg jp ljmp push cmp lret mov mov jp cmpsl cmpsb jno or in sbb pop mov and aad and in mov insl inc sub mov mov idivl std arpl jbe xor add adc sub inc insb pop cmp clc ret jge adc pop or test pop das adc xchg mov clc loopne (bad) jmp setp push or sub pop loopne iret jnp loop (bad) sahf pop jg lea sti out add testl xor push and jb insl outsl inc or and rcl lods xorb add popf sub jg inc sti xchg mulb jg inc jnp xchg ds mov out fistpll shrl out push lods xor fadds jg es lock imul lock cwtl and jbe add add cwtl pop cmp push jg ds mov fadds das ja lock dec testl xor mov cmpsb xlat ficom jg ds mov (bad) push push add bound push fldl lock loopne outsb mov jecxz lea or (bad) mov jae push insl inc push scas ja popa das bound xchg jno lret sbb cmpsb (bad) mov stc in movsl jl (bad) fwait aad adc call lcall cli mov movsl out mov dec aas xchg ljmp rolb cs loopne test fprem fld pop xchg and lock cmpsb test xchg rolb add xchg xchg sub pop rorb clc (bad) (bad) (bad) jg lret lods hlt pop dec mov xchg ja mov mov out stos mov jmp cmp pusha fisubl ss push xchg mov lods lcall (bad) (bad) out xor inc mov pop and daa jb cmp mov jg jecxz jle adc cmp out (bad) (bad) (bad) lcall sub (bad) mov mov sbb daa rep les je sbb fdivrs dec (bad) jb aad (bad) ljmp xchg iret repnz pop adc mov pop adc in lret dec xchg (bad) (bad) decl add sub rcrl add xchg pop xor and inc stos lret (bad) (bad) ljmp movsb out pop mov cltd and jns inc dec fadd inc push sar mov jecxz sti pop and or in aas mov out std out cld mov (bad) cmp cs imul jmp mov (bad) push mov ja or int arpl sbb imul xor imul out iret loope popa mull mov inc cwtl fildll fldcw scas mov push or or stc inc andl pusha mov lods roll jp pop out (bad) (bad) (bad) (bad) mov (bad) mov popf cmp gs xchg mov arpl insl cmp add xor in (bad) (bad) decl xor and stc (bad) dec cmpsl xchg aas mov mov lock and push (bad) (bad) cmp inc or sub cmp push pop mov lcall sbb pop pop lahf xchg pop pop push lcall dec cmp cmp cltd fwait imul rclb test imull rcrb cmp fdivs ss cs mov sbb (bad) (bad) jmp jge sub cmpsb push icebp xchg in adc dec sub adc in jg out test mov inc push and insb add fistpl ljmp xchg or or ss pushf mov push movsb loopne mov jmp loopne (bad) (bad) (bad) jmp lret bound pop mov sub pop (bad) pop aaa or push gs cli cs cwtl jp imul inc jecxz daa and xchg jb mov (bad) repnz inc adc lds aaa std pop icebp (bad) (bad) fnop add popa leave sub inc pop mov call in stos xor in in xor jl in push inc mov pop loopne out insl iret sub pop cmc adc mov cli mov decl insb sub fidiv lea rol mov pop (bad) sbb push insb (bad) repnz (bad) jge sbb mov gs test cltd mov pop dec fcmovb dec add icebp out (bad) (bad) (bad) (bad) fadds pop add push test xor mov insl jmp (bad) (bad) (bad) decl enter fdivrl repz mov or cmp add dec daa push add mov xlat lea out aaa jmp xchg sub icebp aas mov push and (bad) lock (bad) (bad) incl inc in jmp mov pop add jge pop and out jns push push sar (bad) (bad) call mov dec fmull test test clc inc push test inc pop movsl lahf aad (bad) (bad) (bad) inc (bad) pop movsl and cmp xchg outsb xchg daa rcll inc aas std mov cs adc (bad) (bad) lcall popa add lods das ficomp ret mov imul (bad) ss (bad) (bad) (bad) call je mov fbstp xchg out mov mov or arpl inc jo ja and (bad) (bad) inc xor les add mul mov mov (bad) mov add ror (bad) (bad) (bad) lcall mov sbb mov cmp jns push sub int pop xchg insl test inc jecxz pop pop std (bad) (bad) incl (bad) mov stos mov movsl cli into dec nop jg xchg xor adc sub jge (bad) (bad) call fcomps int3 or push pop in adc or mov mov (bad) (bad) (bad) inc ja popf dec sbb xor push push and xor xor push xor repnz or aas jl lods inc fsubl jns sub cwtl push lcall or (bad) (bad) (bad) call mov add cmp int ficom arpl idivb incl mov pop out jg negb inc rcrl pop js pop mov das (bad) loop ret mov xchg repnz fcmovnb (bad) mov (bad) (bad) (bad) js jmp popf pop (bad) pop mov xchg and adc adc mov lods xor (bad) push addr16 lods (bad) (bad) (bad) jmp aaa repz push push fistp add repz in cmp mov (bad) (bad) (bad) (bad) cli or push je xchg js mov mov scas push pop cld pop inc mov fwait out stos mov jecxz (bad) (bad) (bad) lcall push push pop nop pop ja dec jb decb xlat (bad) je inc add jg imul (bad) (bad) pushl loope adc mov dec lret clc sub push or call pop add (bad) (bad) (bad) jmp pop ja pushf sbb jno cltd cwtl mov cmp inc cmp (bad) (bad) (bad) jmp push push inc adc cltd pusha adc add adc xor subl decl in pop mov jb xor xchg rorl mov nop xchg (bad) (bad) jg (bad) cmp imul mov outsb daa dec xlat jp mov (bad) mov push (bad) incl cmp sbb mov loope cmp into in adc (bad) incl mov repnz mov sub sbb arpl (bad) (bad) (bad) jnp jne and aaa cs sbb inc and adc sub pop and (bad) lcall (bad) aaa test inc in push dec mov and das out or call pop jl mov (bad) jg (bad) icebp aad xor push push xor shrb pop mov (bad) (bad) (bad) cs adc popf push xchg (bad) jg fsubrl decb xchg in mov addl xor (bad) (bad) push mov int in fs jb stos rclb adc clc stos loope xor icebp (bad) incl js xchg xchg hlt or xchg inc mov (bad) jg mov mov sti add jb into xor dec mov (bad) (bad) (bad) ljmp sub ljmp adcl xchg inc add mov dec (bad) data16 (bad) xchg fsubp dec adc pop test dec in mov icebp jmp dec outsb (bad) (bad) (bad) call mov int3 mov xchg popl dec test fwait add pop popf adc xchg fisttp cmpsl ret js mov (bad) (bad) (bad) decl dec mov pop push dec mov mov mov sbb cmc cmp decl movsb push movsl ss xchg mov test shrl outsl and stc scas jnp test (bad) (bad) (bad) (bad) (bad) jmp jno aam mov cli movsb push (bad) mov cmp ljmp (bad) (bad) (bad) inc jge xchg jg xchg jmp rol mov xchg xchg dec popa cmp (bad) pushf mov and (bad) (bad) call lods (bad) push test adcb mov int3 stc (bad) (bad) jl push icebp movsb pop js addr16 pop icebp dec (bad) mov (bad) push mov push (bad) insl pop cmp data16 cld popw (bad) (bad) (bad) pushl icebp lods cmp pop popf fs (bad) mov popf xor dec adc (bad) (bad) decl xor xor or push addr16 stos adc xor loope sbb pop bound mov jge rclb add nop movsl fimull xorl sar incl (bad) in sbb pop push xchg lock xor jb jb push jmp data16 and mov sbb fwait fwait ror ret jmp (bad) (bad) (bad) mov std testl rorl sahf jno cmc ja fcmovne lods push cmp (bad) decl mov and jle or xor inc sub dec inc dec pop es clc mov xor popf jb divb and loop stos mov mov ljmp and mov call je (bad) icebp aam cmp jae push outsl repz push cmc and lret ljmp lcall (bad) jnp pop jne jg iret and iret fsubrp enter jns pop or cmc (bad) (bad) pushl pop and fdivrp xchg pop (bad) jne or hlt xchg dec sbb push jl cmp incl pop out cwtl hlt loop and mov incl clc cmp or (bad) js mov lock dec cmp mov or pop in outsl clc call aas push push sti mov push adcl shll mov das cmpsl test dec jp pusha inc test aam and (bad) (bad) lcall jno cli loop fistpl lahf clc pop inc outsl iret or cltd sbb add outsb mov ljmp nop or mov loop (bad) (bad) sub and cld push sbb mov js jecxz (bad) (bad) ljmp or push add lods daa out lea (bad) (bad) mov rcrl push add push cmp and adc repz ljmp jmp leave xor lods add sbb mov scas xor lcall (bad) pushl jmp sbb pop inc xor jo arpl movb push or mov test (bad) (bad) std xlat cmp sub push repz mov daa xchg jge (bad) jnp mov clc (bad) (bad) lcall incb pop mov push outsl sahf fstpt xchg adc and adc (bad) incl loopne inc out ss jae sbb rol (bad) adc (bad) (bad) sti xor aas jp sbb sub add lea bound clc lcall (bad) xlat inc dec mov inc jp lret lock pop jb inc test cmp mov adc jl lds adc or jmp test push pop pop mov lahf sub leave sbb movsl (bad) (bad) pushl hlt jno pop sub fisttp ss repnz rorl mov lods mov and (bad) (bad) push add cltd (bad) xchg es ss testl dec inc add mov mov push (bad) (bad) (bad) incl xsha256 cmpsb shl pushf stos add inc or xchg sbb lahf xchg out sbb insb ret out or std pop and incl fcmovnb mov mov jp sub mov idivb sbb incl pop in sarb dec fsubs and data16 incl pusha lcall inc lret cmpsl stos and sbb xor sbb pop icebp fcoml and cmp or mov std (bad) (bad) call xor and sbb mov mov mov xchg pop adc mov push push fisttp stos inc popa mov addr16 fnstsw popa (bad) (bad) (bad) lcall imul (bad) jl lock push mov cli adc dec push pop adc (bad) decl add pop fcoml push es and imul iret pop cli mov decl xor movsl mov aam inc push popf leave into inc dec mov imulb int3 cmpsl repz mov cwtl int3 inc dec jecxz jne push movlps (bad) (bad) cmp inc cld and mov (bad) fcoms cmp rorb and add std and jmp jae mov adc mov pusha addr16 jne call jae mov mov ljmp pop fisub ret jae and subl rol (bad) (bad) call repz pushf nop sbb push sub cs aad and mov jmp xchg jmp sub and or (bad) fisttp pop clc (bad) cmp mov into mov and arpl (bad) (bad) lcall cmp mov movsb push fnstsw (bad) sub jae (bad) xlat aas mov ljmp cli or pop imul je movsb outsb cmp cmp add iret cmp lods test aas sbb in out (bad) (bad) (bad) jg dec call add push scas adc jae adc jae push cli inc jl (bad) call push call mov fs add rcrb mov (bad) (bad) mov repnz lret scas mov inc out mov mov nop test (bad) (bad) (bad) decl gs dec out push pop lret rcr stc lods outsb enter js cld jb push sbb or movsb imulb fstl repnz adc gs (bad) (bad) (bad) ljmp sbb add cmp xor fs call ret aad push gs in (bad) xor mov std call lods push pop je cmp adc push sbb (bad) (bad) jg (bad) or sbb nop pop inc rcr push adc outsb popf jl mov incl call fistl push push pop outsb jae cwtl mov inc imul loopne das sub inc mov les in mov fmul mov out jbe sub rcr sti jnp (bad) (bad) (bad) jmp or jp jns (bad) jns dec fistl sbb push loope mov cmp ret daa (bad) or fsubp mov and arpl (bad) (bad) (bad) jmp add sbb int3 (bad) adc pop ja test adc jbe xchg mov (bad) ljmp inc stc inc into loop lods inc mov mov mov pop sbb push (bad) mov inc add ss (bad) (bad) (bad) fstpt out adc mov loop xchg test fisttp (bad) push int3 lock mov push jno imul xor sbb dec jno (bad) (bad) (bad) jmp jns sahf inc test lea jns aas dec xlat leave inc pop and sub and std (bad) call xchg push enter and push and push adc shrb clc push lods dec test mov push jge shrl mov lea rclb (bad) incl xor or pushf les lods and pushf out and lods lret cmp decl push out adc fidiv cmp adc (bad) xchg xorl out push cmp cmp cmpsl shr xor xor (bad) mov adc dec and adc dec fdivr loop add mov cmp push test inc pop sbb loop pusha (bad) (bad) clc nop sub fldcw (bad) decl jle pusha (bad) ja neg pusha out lret mov popf popa sbb sbbl (bad) incl sub xor ret adc sub jo lret (bad) cmp je and (bad) (bad) ljmp (bad) jp jge jle xor adc out push pop aam xchg jecxz jmp cmc xchg (bad) ljmp add cmp inc xchg mov jg andl out cli mov out (bad) (bad) (bad) (bad) mov sub cmp sbb inc mov ss and (bad) (bad) (bad) (bad) jmp jle sbb lea mov mov jnp dec repz nop pop scas mov xlat aam pop mov (bad) cmp xlat (bad) cs in mov jns int3 rcl pop and iret xor pop adc jo mov decl xchg movl mov pop hlt call mov cmp mov pop icebp (bad) (bad) lcall pop sbb and mov mov shrl test jno (bad) (bad) out add mov lret call fwait (bad) sbb hlt test jmp push rclb or lods addr16 out repz movntq dec (bad) (bad) (bad) pushl mov popa (bad) pop (bad) in adc adc cmp inc fsubrl test adc (bad) (bad) incl mov jle mov ljmp or lcall call mov fsubl xchg jge sbb in jecxz fwait pop std (bad) pushl mov das int3 fdivrs icebp loopne hlt and dec clc mov push repz stos pop pop (bad) (bad) (bad) lcall (bad) idivl pop aad orl bound add aaa in insl sbbb into in mov (bad) (bad) (bad) ljmp inc out fild clc mul popa push popf adc (bad) cltd andb xchg lret lock (bad) mov jge sub cmp push push jl dec sub (bad) (bad) (bad) decl and cmp mov clc cmp out or xor xor int3 rcr data16 mov (bad) fmuls (bad) (bad) (bad) incl cltd xchg pushf or or jl mov dec mov mov lret sub ret xlat lods push xchg aam sbb jmp (bad) decl pushf and inc sub xchg push jne ret push or mov inc (bad) jg in jl out mov repnz leave out adc ja mov (bad) jmp fs repnz mov loop mov popa (bad) in xchg xorl scas cli push or jo mov push inc mov push cmp (bad) lcall fstpl inc sub out addl ret fidiv xchg (bad) cld mov (bad) pushl push sbb sbb push sbbb and mov (bad) (bad) decl decb and loope or ret cs push loopne xor add loopne push jbe and sub mov enter lcall rcr aaa aad jmp sub cmp pop inc out jg mov ljmp les pop lahf push push and xor jnp pop popf xor (bad) cmp mov pop push aaa sbbl sub pop (bad) (bad) (bad) ljmp aaa fwait sarl adc fstl mov add sbb lock (bad) decl add sbb push or jne dec cmpsb or ja pop mov gs test imul (bad) fbld jmp add in xor mov xchg test adc add (bad) mov mov xor push mov jge ljmp cmpb cwtl stc out lock push call mov and inc shrb movsb and mov and xchg xchg pop addr16 xor in push inc mov (bad) (bad) lcall lods inc inc stc fdivrl (bad) repz inc outsb lcall jl mov fwait out inc (bad) (bad) (bad) call out dec incb jp stc sub out cmpsb sarl ja or (bad) (bad) pushl (bad) aad push stos hlt fwait inc fisttpll test (bad) scas (bad) xor add test ret (bad) (bad) cmp test inc inc mov jae xor (bad) (bad) (bad) out (bad) test cmp aad mov test in mov or xchg jl adc mov repz mov cmc mov dec xchg rolb or xor add in (bad) (bad) jmp popa xor jle test sub (bad) cmc push testb (bad) (bad) (bad) jmp mov sub xchg iret lcall out das push adc lahf aaa jb imul (bad) dec mov stos cwtl mov loopne lods repz jne xchg cltd inc jl test (bad) cld sti (bad) (bad) (bad) (bad) fistl mov push sub or mov push mov xlat stc fisttpl incl cmc arpl jbe xchg out mov sub (bad) icebp mov nop (bad) (bad) (bad) (bad) ljmp push in or dec adc cld dec scas jns fwait insb nop mov repnz adc xor rcll rcrl jg (bad) incl imul pushf imul ficompl movsb inc adc mov (bad) (bad) (bad) (bad) fucomi or or outsl or adcl fwait out aas mov imul lods (bad) inc aas stos (bad) fcomip lock mov repz jecxz xor (bad) (bad) (bad) fnstenv popa loop ja dec pop jne nop adc fistpll add test enter ss mov (bad) lcall pop aam or push or loopne add sti pop xor ja jmp addr16 pushl (bad) mov out int subb mov sti data16 xchg inc jecxz sti ds imulb mov (bad) (bad) decl cld and push fcmovb test adc clc jle fisttp (bad) cmp cld in mov jmp pop sub sbb ss hlt fdivs add (bad) (bad) call sub mov (bad) insl fstps lods xor (bad) icebp mov adc push incl scas add jbe ret pusha cltd xor jl test jae mov shrl add (bad) stc xor jmp ss push pusha std test rorl adc (bad) (bad) jmp or test xor adc ss dec pop push xchg and push lds out or insl int repz adc mov (bad) (bad) incl xlat adc sbb push jmp lret adc xor fsub or sub (bad) (bad) cld leave stos mov cltd jo adc jnp push sub (bad) decl lock lods test test mov jb and outsl idiv mov (bad) stc ficom imul push xorl pop mov pop dec fwait mov test (bad) (bad) (bad) (bad) cmp gs ljmp (bad) dec icebp ret lret sbb test push or leave fs (bad) (bad) jmp pusha adc (bad) mov sbbl (bad) jl repz push jno mov (bad) (bad) lcall fwait repz push push pop fiadd out das pop sub (bad) clc (bad) call aad inc cmp jmp mov test adc js (bad) (bad) (bad) ljmp in mov scas mov inc js sub cld ret jo outsb lods (bad) (bad) (bad) lcall add (bad) repz lods cmp cwtl mov xchg mul mov push push lret (bad) movsl jmp and clc xchg fdiv jo stos clc and in xchg dec iret dec fimull (bad) (bad) mov jns inc push test adc es inc xchg inc test das inc jl jae or (bad) (bad) (bad) jmp lock pop sbb out movsb insl push jle inc test (bad) out mov (bad) xchg fucomp stc dec dec add fcmovnb mov fsubs push repz dec lahf int3 js add stos lret aam jo fdiv mov sub mov rcr push cli fcmovbe xchg add notb push push dec rcl sub loopne (bad) xor dec push in (bad) (bad) jmp daa add lds push mov fnop stc ss idivl notl stos pop inc xchg (bad) incl insb inc xchg xor jecxz add imul mov (bad) (bad) pushl incb ss adc pop jno mov xchg jne jge add (bad) incl lcall stc fidivrl push hlt mov dec xor mov mov (bad) pushl adc push mov mov jo lahf cwtl repz (bad) (bad) jg ljmp imul fisttp pushf loopne xor test incl mov pushf imul ret (bad) mov or cld fbstp xor pushf nop dec insl pop stos sbb lcall (bad) decl or pop cmp mov mov jno mov xchg dec (bad) (bad) pushl divl sbb bound cltd pushf mov addr16 loop or loop ja add dec sbb stc in cmp lret ljmp mov (bad) mov je stos loopne mov in add daa and lret mull cmpsl daa (bad) (bad) call lcall inc lret cwtl movsl adc or shlb pop cs (bad) (bad) (bad) (bad) (bad) jg pop mov lock outsl incl fmulp stc or adc jmp cs pusha xchg ja outsl pushl ret sub mov cmp sbb shr fcomip (bad) (bad) cmp test jbe pop fistpl xchg cmpsl jl sub stos out jge (bad) (bad) (bad) rcr stos sub cmp push mov mov push (bad) (bad) jbe arpl (bad) (bad) (bad) jmp (bad) mov repnz jbe pop nop aas loopne push xchg (bad) jmp inc mov sbb mov pop pop cli dec in xor (bad) (bad) lcall or jns lods int3 push lds jecxz scas push cld cmpsb xchg mov or jp (bad) (bad) (bad) lcall or mov loop shlb insb mov mov push cld (bad) lcall fbld fisubl pop pushf test decl test fdivrs pushl loopne es dec adc cmpsb les movsl dec outsb aaa out (bad) (bad) jmp xchg out jbe rcll and push and push ss mov ljmp cmp inc repnz leave adc add arpl sahf jne mov rorb mov popa xor sbb mov movl (bad) push add lods mov xlat xor aas or out outsb or test (bad) pushl sahf or or test les pushf mov loope ljmp cmpb loop push (bad) int3 jno jl sub cs sar lcall xchg jecxz mov arpl (bad) (bad) mov popf sub inc hlt sub mulb lret and xor aad (bad) (bad) (bad) (bad) sti je call ret xchg aad nop js and fimul mov sub sbb (bad) (bad) (bad) mov pusha mov out xor add (bad) adc xor lret sbb (bad) (bad) cmp lods je mov daa ljmp in test push push (bad) (bad) (bad) incl cmp pushf cmc xchg in mov adc fidivr pop (bad) jg push (bad) sbb stos (bad) (bad) (bad) (bad) cli jbe pop dec mov lret cmc in push fnstcw mov push or mov jge lds inc decl lock cli or (bad) jo xchg stos xlat lret jne shrb pop fcomip fldcw out imul dec pop add pop subps scas lods pop jle test sub movsb push scas clc mov mov in enter pop pop (bad) (bad) lcall fcoms jne int push lods pop std xor or pop xchg sbbl pop insb xchg ss jbe std sbb mov jo dec pop mov pop sbb mov mov ljmp jb pusha stos out dec push cltd cmpsb in inc inc push lret enter (bad) (bad) (bad) lcall adc pop mov dec cmp pop inc insl sbb outsl frstor incb sub (bad) (bad) (bad) (bad) cmp jnp push jg nop push sbb sub (bad) pop or adc jg lcall mov mov ja jbe (bad) int3 gs sub sbb or out (bad) (bad) (bad) call or mov cmpl aad mov inc dec cmpsb in (bad) (bad) in jmp (bad) jmp sbb pushf or lret mov inc cmp lret mov clc (bad) fistpll push cmpsb add add sbb es jae mov call and push cwtl jmpw and lds pop cmp testl xchg xor cwtl sbb dec out mov jns add (bad) (bad) cmp xor movsb or sbb movsb mov push and push push mov (bad) (bad) (bad) pushl mov xlat cmpl (bad) push addb mov pop pop imul (bad) cmp icebp das fsubs aaa mov push xor adc xchg mov xor into (bad) inc (bad) (bad) (bad) decl in repnz sahf aam push sub add mov inc adc cld data16 popf (bad) (bad) (bad) decl pop mov adc push dec mov jo inc sub add mov out clc insl jle sub sarb stc (bad) xchg inc xchg sti (bad) pop jl add mov (bad) pushl loopne dec call popl sub lahf xor in (bad) jg lcall xor fdivr (bad) mov andb mov imul (bad) (bad) (bad) jmp ljmp push inc imul (bad) dec jns bound inc cld sahf cmp cmc lea (bad) incl int3 dec lock dec mov jg mov mov cs (bad) (bad) (bad) jg popf adc fwait and pop ret lcall sub add lcall or or icebp xchg std inc jno in (bad) (bad) jmp std rorl outsl mov leave adc adc cmovl out mov xchg mov add test addr16 xor out mov incl cmp jb fistp adc push sub or (bad) fisubrl outsl (bad) (bad) lcall push pop (bad) mov scas gs mov adc adc cmpsb pop loopne adc stc adc push sti xor mov out (bad) (bad) (bad) jmp fnstcw jg cmp mov adc lahf sub cltd in mov (bad) (bad) (bad) in hlt xchg jo xor pop out mov movsb stos loope loope push mov mov push clc fs (bad) (bad) lcall fidiv mov shll jbe call mov mov adc and adc jmp mov out outsl push push (bad) (bad) (bad) jmp sub in jp pop inc xchg movsb out cmp inc repz test and push scas ds or in mov cmc jnp mov (bad) (bad) push mov (bad) iret pushf xchg les scas jns gs enter (bad) (bad) call mov std mov pop (bad) cwtl xorb sub (bad) (bad) (bad) decl jo sbb cmp mov andl push add repz scas pop je jno (bad) lcall inc cmc xchg xor jecxz cmpsl repz fdivl fwait (bad) mov xor xchg int (bad) idiv (bad) mov bound fsubs fwait fwait xchg dec mov push enter (bad) ljmp decb and jb test push cmpsb cmp mov (bad) (bad) lcall in mov xlat sbb push mov nop sub fbld sbbb lahf cmp (bad) (bad) (bad) jmp or sbb test int3 xchg mov sub out (bad) lahf fwait (bad) (bad) (bad) (bad) std dec sarb pop fstpl push inc dec jl cmp iret jmp dec rclb fldenv les sub mov (bad) (bad) ljmp es movsl dec pop loop inc int fildll je push or pop and test (bad) fcomip incl std pop or xchg pop in out add ljmp cmp or (bad) lcall cmc push adc and jne dec cmp (bad) cli mov divb xor inc sbb xchg decl xchg lock mov mov xor (bad) (bad) lcall cmp sahf and sub and icebp jbe data16 fsincos cmpsb and mov (bad) (bad) (bad) inc outsb mov jle fwait jae jp outsb cmpsb in pop clc ret stos xor ret pop jg (bad) jmp in xor or cmp push push sar ficoml mov (bad) (bad) jmp dec sub cmp mov jno or pop int mov add lcall (bad) jmp je rclb jmp dec cmpsl sub add test cli in imul (bad) (bad) (bad) decl xchg outsb add xor out aas xchg sub inc (bad) nop fildll loopne inc stos test aad mov bound int fwait shrb hlt push adc scas repz incl adc push mov je mov stos xor adc xor sub inc icebp (bad) in add sbb (bad) ljmp add xchg push sbb xchg ja fwait test mov ljmp dec xchg test push mov dec pushf das push into hlt iret (bad) (bad) and xchg lock lcall push xchg scas ret pop cs pop lret push bnd and popf mov mov xor xchg xchg popaw pop push aas cmpsl xor (bad) (bad) incl adc test inc push jno xchg enter xchg mov mov sub sbb lods call pushl std test inc sbb push ss jne fsubr outsl jl,pt cmp (bad) pushl dec insl lock test lea xor xor jno loop insb cmpsl add fs (bad) (bad) (bad) lcall mov xchg mov mov icebp dec mov cs dec test dec sbb shrl icebp push xchg cli inc sub dec sub mov lds test out mov mulps dec and pop imul fcoml fcmovne inc sub inc xlat jecxz mov sahf (bad) (bad) (bad) (bad) fdivl adc push mov jne dec pusha push push add adcl and (bad) (bad) decl scas push push lcall leave mov sub push jp and push mov (bad) (bad) (bad) incl shlb adc lret in xor mov outsb outsl (bad) pusha aad ljmp ret pop dec cmp dec outsl dec rcrl sbb cmpsb sub loopne mov ljmp jl aam mov sti push ljmp (bad) (bad) call (bad) mov out push ror mov jmp xlat jge pop mov (bad) (bad) call int3 (bad) test shr push fdivrs xlat gs rcrl inc jb (bad) (bad) lcall movsb push mov out pop jmp mov (bad) out or xor sub adc sbb xor daa lret fdivs es mov leave pusha fsubs test xchg loopne mov (bad) decl add xlat lea and (bad) call mov xchg enter popa mov and adc lcall es (bad) js fdivl insb insl cmp lret (bad) (bad) jmp pop sbb cmpl pop mov push fsub imul and loopne (bad) (bad) push sub push pop and in sbbl pusha sub pop test jle xchg add add (bad) pushl std es sub sub sub push cmpsl fisubrl enter (bad) out push lds dec andb pushf push into cmpsl les xlat jp (bad) testb xchg call pop lcall insl ja push lods mov fs add fbstp cmp js lods popa test in jle push adc adc cmpsl leave xchg pop (bad) mov (bad) (bad) jmp int pop arpl clc iret cwtl add adc cmp and push xlat ret fcos (bad) (bad) (bad) jp or fmull dec int test inc fldcw dec das (bad) repz mov or (bad) (bad) (bad) lcall sub adc sbb pop ret add test lods popf cwtl xor jne cmp mov mov insl sub jmp and aad les lahf jg ss (bad) decl sub push outsb pop (bad) fxch scas leave sub dec mov adc (bad) call xor (bad) insl mov sbb in nop out jb jb ds aaa (bad) (bad) (bad) incl out cld cmpsb pop adc pusha xor or clc les sahf (bad) (bad) (bad) jmp pop mov aad outsb sti in cli push sub cmp aam cli (bad) jg or nop pop sbb (bad) (bad) (bad) pushl lods xchg mov add (bad) jns lret and daa pop fsubrl insb movsl (bad) (bad) (bad) (bad) ds dec rolb cmp stos stc jg mov sub pop jo push shrl inc mov xchg mov inc push je mov lods cwtl xor imul sbb adc out mov cmp rcll mov (bad) (bad) jmp cmp jecxz (bad) adc pushf loopne popa mov out jl icebp push jp data16 push (bad) (bad) (bad) pushl rolb movsl push iret insl jae xor cmp fdivrs xchg test cwtl pop sbb adc inc jp pop and mov movsl cltd pop lea fsts mov lods leave or pop xchg aas fwait (bad) (bad) fild scas mov push aad mov cmp (bad) out cmp aas ret push fs lcall popf add lret mov ja jecxz pushl push jecxz out xorl mov mov daa push sub (bad) call lods mov xchg out jo mov and inc push xchg push pop imul aas jmp aam jb sub dec call inc or pushf sub nop jns xchg iret (bad) (bad) (bad) pushl movsl jle xor mov dec rorb jnp addr16 dec (bad) sbb stos (bad) (bad) ljmp sbb add mov mov ds mov jl sti leave pop (bad) js (bad) (bad) (bad) stc xor or insb xchg mov dec cmpsl flds inc pusha cmp pushl adc js,pn aaa std pushl mov xor push (bad) mov das into sub cli cmpsl in adc (bad) incl cli sub loope jne push popa dec shr lcall (bad) mov xor sub mov cmp (bad) std daa xor pop mov mov insl add std xchg or jp mov fcoml xor idiv decl adcl js xchg je popf sbb fnop sub (bad) fiadd (bad) jmp imul stc sub fidiv fs aaa push and aad jno (bad) (bad) call adc roll leave xor sbb jmp aas int3 lds pop cmp insl push dec (bad) (bad) (bad) pushl movsb outsl pop xor inc jb int sbb xchg jae jno arpl (bad) mov decl call pop orl pushf cmp std pop hlt nop (bad) (bad) (bad) lcall xchg push ds cld les loop int mov lods stc movsb and sti (bad) (bad) (bad) call aad jmp sbb inc cmpsl fsubl push pushf push aad and ljmp (bad) ljmp mov in hlt aad add mov sub jle sub (bad) (bad) lcall or add mov push inc out xchg cmp ficompl push gs gs (bad) (bad) (bad) lcall lea sbb cli (bad) xchg jle sbb ja xor ss xor push cmp (bad) (bad) (bad) mov mov add subl bound notl fldl2t inc jns nop popf lret jo incl mov dec iret jnp repz popf inc inc fstpl jmp (bad) orb popa (bad) (bad) (bad) decl jg cmpsl lcall adc push mov mov cmp outsb (bad) fcomip lcall mov sbb rclb jecxz pop sbb (bad) in sbb sbb xchg insl (bad) frstor mov popa inc push std bnd loope inc (bad) (bad) (bad) ljmp cmp push pop cmp sbb xchg imul sub (bad) (bad) incl iret mov and mov jne roll push pop add sbb sarb mov add mov fbstp ljmp ds and rclb mov test fadds pop lods (bad) call subb ficompl mov movsb pushf pop push sub rcrl (bad) sti insl pop mov (bad) (bad) call repz test jle or xor insl mov inc jb (bad) (bad) (bad) incl and dec insl jge mov sbb sbb cmpl mov (bad) (bad) call stos sbb xor push adc aas sbb adc xchg test sbb insl sub ja cld inc dec add push rolb les xor mov jns jnp (bad) (bad) (bad) (bad) out daa repnz testl sub outsl rorl pushf push xchg jge add (bad) jmp mov mov jecxz icebp (bad) je (bad) out cli das les inc int scas jnp cmp cmp add mov (bad) (bad) (bad) fildl cld jno adc or fdivr inc xlat (bad) sub xor fs add (bad) (bad) (bad) (bad) jnp repz push aam (bad) and dec rorl out xor push xor movsb xchg push (bad) (bad) (bad) decl mov (bad) cmp jnp inc xlat outsb outsl or out push (bad) hlt lahf clc adc call daa stos jge push fwait cltd std loop mov ss div pusha ss incl inc ret cld ror test sub adc shl sub mov (bad) (bad) (bad) (bad) jle stos mov iret std lods mov pop mov insl das push iret or mov push cld rcrb mov jle imul (bad) dec imul pop std jmp xchg mov pop cmp mov push jmp add (bad) (bad) lcall add xchg jmp pop mov fst xchg mov xchg les ret (bad) (bad) (bad) pushl fcomps stc movsl cmp cld cmp movsl pusha fiadd mov into imul mov (bad) jmp (bad) ljmp push sub dec mov push repnz mov sbb xchg sub (bad) push call gs in ret jle fsubrs mov mov ds xchg cmp incl add cmp lret jecxz pop dec addr16 inc adc notb dec sbbb mov (bad) int3 mov and dec stos cmp mov dec pop push sub lss mov (bad) (bad) (bad) call and push pushf shr push fstps and sub popf ljmp xchg adc insl lret xchg add jo scas subl sbb pushf pusha cmp repz xchg mov and pop push (bad) and or iret sub add push lods dec sbb mov popa cmpsl ss mov (bad) fist out xchg into sahf (bad) std add repz test imul dec add (bad) (bad) pushl aaa and je add push cmp ror lret xchg mov jl adc (bad) (bad) decl xchg pop mov inc cwtl mov cmp test sub mov stos popf es (bad) (bad) (bad) ljmp add jno adc and mov lret mov dec in jne xlat idivl (bad) (bad) decl lahf adc adc js xchg (bad) mov jle mov gs push push loope popf add pop icebp jle dec sar mov in (bad) (bad) (bad) mov add leave repnz ja js pop mov push je fcmovnbe cmp sbb lods mov xchg icebp out ja sar (bad) (bad) jg lods or fwait enter xchg stc lcall cs (bad) mov xor arpl cmp xor fwait add (bad) (bad) ds xor mov add push mov stc les xor (bad) (bad) (bad) call jae cmc rcl mov push std sbb cli iret xchg mov and shlb lcall pop mov les (bad) out scas dec andb or push sub sbb aaa aaa rdpmc xor loop cmp neg popa mov fs dec xchg (bad) repz (bad) add (bad) jne xor (bad) (bad) push push shrl mov test pop adc divb dec xchg sub xor add (bad) dec adc ret imul or fstps cmpsl xor fldl fsub aad inc sti fsubs mov mov jo loop out cli cmc add cmp add rclb aad outsl movsb mov inc hlt out scas test push test mov (bad) push movsl hlt les mov hlt push cmp push mov (bad) sub imul fmuls (bad) (bad) (bad) call inc sti inc nop cmc mov sbb push jmp stos out pop adcl out pop add stc fcmovu (bad) in sbb faddl xor dec or lock xor sub inc out xor xchg cmc push (bad) ljmp mov lods xchg jmp add inc push (bad) (bad) (bad) jmp lods sub pop lods add imul dec add inc xchg xchg lea lods movsl cmpsb (bad) icebp push (bad) (bad) ljmp cld mov mov jno adc in lret sti insl out jp (bad) (bad) inc sahf adc (bad) or fstps daa (bad) or ret push sahf inc ljmp sar cltd out aas ret mov pop lret scas push sahf xor outsl mov jge xchg mov (bad) (bad) pushl mov fsubs mov pop into cltd loope loopne push into pop lods or movsb push xchg and lcall fldenv imul lock adc (bad) jmp mov pop cmpsb sub add mov cwtl jnp in jp iret and xlat idiv (bad) (bad) incl andb jmp leave out mov lds mov adc ljmp popa jle jg (bad) cmp inc push (bad) and rclb in pushl aaa cmp add pop lcall add mov in add adc mov lcall ss aas add or scas inc shrl adc pop fwait xchg cmp jl (bad) fcomip lea loope das fstl inc xor mov (bad) call sbb clc cmpsl (bad) js mov test push fidiv das popf clc es je enter ljmp add and xchg in cs hlt sub and lahf mov imul popa (bad) addr16 stos (bad) (bad) (bad) push test push xchg adc hlt ss jbe cmp mov or cld or rcll ja outsl clc decl mov cmp cmp mov push xor cmp (bad) jg subl inc mov or lret call ljmp sti cmpb add mov movsb cwtl inc pop pusha jl clc adc xchg fistpll or xchg ss bound mov mov jbe add ja sbb (bad) (bad) jg cmp cmp xor sub jecxz fild loopne scas and in pop add or insl and aas jge push ss in xor pop mov adc jge mov mov imul xchg sbb pop bnd xor testl aam sub jns xor mov mov and mov jne test pop jo add mov or push lahf inc lds (bad) (bad) jmp dec mov xchg mov jp pop dec out das cwtl into or pushl mov sar call jg stc sbb cmp call mov (bad) leave sbb jg xchg mov jecxz rcrb test cltd mov jmp decl (bad) (bad) fnop in xor push movsl ds out cs ror push jb xor inc (bad) incl pop js xchg lock (bad) dec or fwait out sti pop pop sbb pop movsl pop xor jecxz jne push (bad) roll cmc jb push jo (bad) (bad) jg or cmpsl movsb repz cmp xchg incl mov sub cmp or decl jne mull divb aas or out add loope testb sbb inc add mov push or popf nop bound adc repz (bad) (bad) call mov xchg inc add jp int pop jle xor mov (bad) pushl daa mov cltd icebp insb call jl movsb and (bad) cmp lcall fstp sbb add lea fsubl mov loopne push mov ljmp mov idivb adcl sub mov or jmp mov aaa (bad) adc jmp cmp inc movsb add pop fs add adc xlat cmpsl dec (bad) (bad) jg sarb pop imul mov jg push inc pop xchg dec cmp pop (bad) incl adc js push sbb fwait jl cmp fsin xor jecxz sti pop jle stos (bad) (bad) (bad) decl lea mov xchg sub cmp popf jp cmp insl jmp (bad) decl (bad) js je scas or mov jecxz subb push stos (bad) ja (bad) call cmpsb daa pop xchg (bad) in ret xchg mov sub stos ret xlat imul in (bad) (bad) dec lods bnd adc mov push hlt es js lock ficom (bad) (bad) (bad) push shlb movsl cmp adc add mov sti mov mov aaa cmp push (bad) loope sbb or mov cmpsl hlt push adc inc fcmovbe push outsl (bad) (bad) (bad) cli inc lahf adc sbb repz (bad) lea movsb xchg out lret out je,pn (bad) (bad) ljmp mov lock push mov lods or xor bound scas push xchg dec in pop std (bad) cmp addr16 adc (bad) cmp pop or movsb (bad) repnz cmovp pop sahf aas (bad) (bad) (bad) pushl lret inc dec cwtl roll mov cmpl iret int (bad) (bad) jmp fdivrp adc xchg cmpsl pushf nop es aam imulb (bad) sbb addr16 jae add add (bad) (bad) lcall dec cli xor aam clc fcomip add inc ja inc (bad) bnd rorl call xchg roll pop stos mov push (bad) (bad) pushl and mov sub aaa jnp ret push add lods pop popa mov outsl inc add bound cltd idivb push mov mov (bad) mov sar (bad) pushl push xchg pop inc sbb dec jg sbb fs ret jg decl add pop and fptan lock xlat stos cmp xchg out (bad) fcomip (bad) fbstp cs cmp dec lret sub fidivl fidivr dec fs (bad) (bad) lcall cli mov jl daa push out aaa xchg notb scas subb cmp push cltd cmp (bad) jmp cld dec or xchg pusha bound out lcall mull das pop cmp ret (bad) (bad) call dec int int inc adc mov js ja (bad) (bad) (bad) jg movsl mov cli fs outsb adc and dec sub inc push push in sbbl js daa cwtl sub mov or stc in clc scas inc push call add (bad) (bad) (bad) dec jge (bad) fadds es fsubrp (bad) xchg xlat aad pop or xor jecxz pop xchg and (bad) incl lret sahf jno xor in dec xchg xchg push std or sub pop fucomp and mov xchg inc push push fdivr aam je lret mov dec into pop rcrl mov (bad) (bad) mov push mov mov addr16 icebp jge ffreep push sbb (bad) (bad) pushl dec pop (bad) bound fstl ret dec push or inc negb and dec pop jmp mov xor or rcrb or pop cmpsb inc hlt dec fstps cmc (bad) (bad) jmp jb and jno iret jecxz mov nop jne mov hlt lds cli das mov (bad) lcall aaa dec sbb std fstpt dec testb clc loope pop es add or (bad) pushl stc dec out jmp mov cwtl and bound std or add pushl (bad) dec mov push push cmp notl sbb jne push mov cmp (bad) (bad) (bad) lcall lret in xchg dec cmc cmp jg shr jo jl sub (bad) (bad) (bad) decl insl (bad) cld push ds imul or aaa xchg test (bad) ljmp (bad) ljmp and stos mov out sub or jnp sbb cltd dec imul test push sbb (bad) (bad) ljmp stc (bad) mov jecxz das add jg push sbb int3 jae pop je scas clc sub xor es pop scas rorb add cwtl cmpsl adc add das add loop (bad) (bad) jmp fs pop mov (bad) mov dec push mov mov rcrl (bad) insb cmp jg fs xchg or dec movsl and in in mov add lock lcall add in jge xor sbb push movsl push in and (bad) ljmp mov jmp sub data16 add (bad) jecxz inc xor push (bad) (bad) (bad) jg adc sbb push test xchg clc scas mov inc push push and xchg loop loope (bad) lret jg (bad) (bad) (bad) pushl mov repz xchg iret std shrb dec pusha add adcb fisttpl add (bad) (bad) decl push mov bound ja insl or push mov or xor cmc (bad) (bad) jmp aaa inc movsl lcall aaa into (bad) cs push or add (bad) (bad) (bad) lcall lcall (bad) je outsb les ljmp fidiv out cmp repnz pop faddl (bad) (bad) (bad) ljmp inc (bad) call mov cmp (bad) sti xor pop (bad) (bad) decl xor jp fnsave xchg loope push rcrb cs jg hlt mov lcall adc cmc mov (bad) scas push cmp lds jno inc test sub cmpsb lahf daa inc push lock add mov (bad) call adc pop ja jg jo pop and pop lret xchg (bad) sub ja add dec push inc lcall pop sbb iret (bad) (bad) (bad) (bad) pushl imul es push mov xchg jp,pt jae addr16 aas jge dec icebp pushf aad pop pushl jnp inc leave mov xor movsl imul roll mov (bad) in (bad) push sub xchg push test xchg outsb dec sbb xchg icebp ja jae (bad) (bad) (bad) sti sahf xor xchg dec popf ficom lds (bad) pop cmp push je sub mov jp (bad) (bad) (bad) call adc scas jnp movlps cmp jne mov repz (bad) (bad) cmp xor outsl mov jge insb cmp xor mov pop (bad) (bad) (bad) decl add mov cmp imul dec test dec push mov inc cmp lock and call xor cmp imul lcall dec clc mov arpl sbb or ret fsubl (bad) mov xlat or loopne ljmp scas faddl scas cli (bad) push sbb push idivb in out xchg add jnp xor je cli (bad) ljmp adcl mov js push inc daa push pusha inc inc lret dec jg call jb sahf mov aas pushf jnp fwait sti inc adc inc incb (bad) (bad) jg mov sbb aam insb fxtract insb xlat xchg and pop xchg scas pop shrl aaa leave pop (bad) lods mov (bad) (bad) jmp std mov adc rol stc mov scas jo add jle cmp fisubrl cwtl adc sahf fimull and mov popa inc (bad) xchg xchg lods (bad) (bad) mov xchg loop mov andb ljmp adc iret mov dec (bad) push (bad) (bad) (bad) ljmp dec (bad) call out cmc imul mov cli jae adc (bad) shr (bad) (bad) jmp ss pop bound test dec popa mov dec ja add (bad) (bad) mov mov insl mov or shr pop pusha sbb pop out popa sub mov (bad) jmp inc daa push jmp pop fistp je pushf enter (bad) (bad) (bad) call mov mov scas or xchg fucomp jne imul inc lahf jg jmp (bad) jmp adc iret call sub nop xchg divl imul stos test call sub push mov outsl aas pop loopne (bad) sub xchg xchg mov ret (bad) lcall pop mov (bad) rolb dec pop add mov clc jl and (bad) (bad) (bad) jmp sub push sbb int3 fnsave movsb insl inc adc xor adc add (bad) (bad) (bad) push pop sahf lret xor in adc out (bad) pop pop imul cltd bound cwtl (bad) cmc decl mov (bad) (bad) (bad) call add sbb push lock outsl mov dec jbe imul mov rcrl push ret (bad) (bad) mov cmp cmp inc cld stos mov loopne out jnp sub (bad) (bad) pushl dec dec daa adc cmp or push pop jle jbe loop cmp aam (bad) (bad) (bad) (bad) mov into push stos in fsubrl pop movsb dec je outsl adc mov xchg pop in (bad) (bad) lcall xchg test xchg gs std in add stos pop mov jle pop sar (bad) (bad) cmp and mov ret add mov sbb scas out loope jbe js stc out std (bad) (bad) out push out xor lea add nop jnp in jl lcall leave mov lahf (bad) mov sub insb test sub or push xchg cld (bad) (bad) jmp lea cwtl aad push outsl popa lret cmp xor jns shrb fwait add sahf aad call je jp fmul (bad) (bad) (bad) (bad) aas test rcl and jnp test fcomps lret andl int aaa add (bad) (bad) ljmp mov cmc sub add loopne mov mov add imul cmp xor jg das jmp xor dec test mov in xor fidiv out out fcomps cmp mov in xchg xchg addr16 (bad) (bad) mov push scas pushf bound add dec xlat xchg movsb dec mov xchg mov bound xorl ret inc or mov pushl sub lahf cs inc divb (bad) and xor sub iret pop cmp mov cmp push aad (bad) (bad) (bad) lcall stos stc shrb out inc adc sbb mov sub push (bad) decl sub es inc test data16 add popa ja pop stc adc cmp (bad) (bad) (bad) dec or ljmp int jp jno jg mov scas pop cmp andl push aam inc data16 mov int3 dec xchg in call aas mov test cmp (bad) (bad) mov (bad) xor mov shrw popf insb jns data16 sub mov pop (bad) pushl std test xchg test mov dec and xchg inc (bad) xchg gs jmp loop (bad) jmp adc mov outsb adc sub bswap and pusha push jg (bad) mov mov dec mov aaa mov loop sbb (bad) pushl xchg fisubr jno in loope ret cld and mov pop imul (bad) (bad) push adc bound jge lock nop int3 int shll xchg scas sti adc pop jl (bad) (bad) jmp mov (bad) stc cld dec mov pop add stos enter rclb add incl xlat jmp xchg fs xor dec xchg push enter add aad mov (bad) (bad) (bad) ljmp sub pop jbe sub les (bad) movsl (bad) mov and mov sub (bad) (bad) decl sub shlb out push or dec pop and jle ret inc (bad) (bad) (bad) call inc sbb push lcall mov jne fild jo adc push sub (bad) (bad) (bad) ljmp push and jge mov repnz aam sahf jmp mov jo clc (bad) mov jae mov leave pop lods xchg jg sub cmp pushf sbb cmpsl (bad) or inc inc inc loopne mov jnp inc rclb adc cwtl mov pushf movsb stos (bad) (bad) (bad) (bad) out xchg sbb push cmp mov xchg lcall mov fbstp icebp jo in cwtl popa fldcw imul fsts repnz adc hlt jne ja aam xchg call cld push bound or sahf (bad) xchg rcll xor xchg incl shrl inc inc stos or mov add lds (bad) (bad) mov dec bound iret sahf mov leave aad jns fcoml (bad) (bad) jg sbb sub mov jo mov adc nop cmp push jle push push mov xor (bad) (bad) (bad) call xor sbbl pop mov fisttpl dec in pop out bnd push inc xchg (bad) (bad) (bad) inc nop in mov or push fsub dec jecxz jae fnstenv mov mov stos push (bad) (bad) (bad) ljmp outsl cmc adc mov repnz pop jl sbb jle push aas inc inc fwait sbb (bad) decl xchg movsb add and mov shlb aas jge add (bad) (bad) call xchg dec pop mov and scas es and xor test add aas into lea cmc (bad) popa adc push jge cmc sbb sub das sub push inc out jmp in push and (bad) incl test clc insb mov pop cmp push fisub sub bound (bad) (bad) (bad) lcall or cli pop adc push and cmp fimul (bad) (bad) mov pushf scas not mov cmpsl fsubs popf push cmp mov sbb mov std (bad) call loopne lods xor jbe xchg push cmp dec xor sub (bad) ljmp mov lea icebp outsl rcrb pop movsl sbb cmc push aad (bad) (bad) (bad) jmp (bad) cwtl iret out cmc lods scas and or mov stos sbb (bad) (bad) pushl aam mov outsl lock cmp lret inc jl xor cmc out xchg loopne,pt std lcall js (bad) mov xor stc je mov push inc mov mov jg inc push insl mov out push sub xor and jo fcomip add jp mov or roll out jp xchg push loope push jge push lock lret jmp add push jg jmp pop idivl data16 in pushl jg (bad) mov loopne dec jp xacquire jecxz cs ds into cltd inc adc (bad) (bad) jnp iret cltd popf xlat or mov (bad) or cld outsb mov sbb (bad) (bad) (bad) dec sbb xor popf or dec dec dec test lds enter fwait or (bad) (bad) (bad) (bad) mov sbb mov pop pop jno adc jl aas and (bad) (bad) lcall cli mov xor mov dec dec insl sub cmp xor mov or adc (bad) lods mov lcall bound adc jle push xor adc push fcomip decl (bad) loopne jle mov dec xorb fbld and mov cmp mov push cld repnz adc (bad) mov lock inc scas mov cltd call test xor call loopne (bad) stos cltd sbb jb leave xchg push test out cmpsl mov imul arpl (bad) hlt cmp jg jl lret arpl jg (bad) andb (bad) pushl cli int3 fcmovbe jno fwait adc xorl in mov jmp rclb (bad) fcomip add pop and addb fiaddl cmpsl xor or (bad) (bad) (bad) jmp icebp lahf mov mov pop repz gs and out add (bad) (bad) (bad) clc push addr16 pop mov mov adc fisubl add or aam inc (bad) (bad) (bad) jmp xchg push push sbbl dec jmp inc ret jle outsb mov sub push movsl ret (bad) (bad) (bad) fistl cli (bad) push inc out outsl ja xchg or and sbb inc shrl cld (bad) mov xchg in and fidivl adc popf int3 pop push (bad) (bad) jg ds pop and pop cmp mov lea xchg insl out xchg (bad) (bad) (bad) fmuls stc mov cmp (bad) cmc enter gs push fwait (bad) jne jmp fcomps lahf (bad) (bad) (bad) call or outsl sub stos mov sbb add popa loope add testl cwtl stos and ja mov ss (bad) mov mov mov adc call nop sub xor aad jle inc int or mov into or pop aad pusha xchg clc je fbld inc cmc cmpsl aam inc pop (bad) (bad) (bad) lcall daa gs scas adc mov add out inc jge leave or pusha xchg (bad) push xchg call loope cmp push lods add or cld jnp out addl sarl sbb push loopne (bad) pushl adc cld pushf xchg mov pop inc pop retw add (bad) call mov jge out mov sbb mov fnstcw jge std call and mov sarb adcl mov inc bound leave int ljmp (bad) decl ficoml sub mov jmp add stc pop fsts gs (bad) pushl dec adc xlat pop cmp mov orb (bad) incl insb sti ja dec aas push add fdivl and scas negb ret pushl (bad) (bad) mov (bad) xor int aad lret fcomps inc inc icebp (bad) decl bound in pop fwait lds jg aas test fstl decl sbb cs jl inc sbb cmpsb sbb rcl mov idiv (bad) (bad) lcall cmp ds into push xchg leave fsubs shll dec cmp shrb (bad) (bad) (bad) incl lcall mov and lods pop iret addr16 pop in mov subl lcall movsb push subl or mov inc mov xor xchg (bad) jl mov mov std shlb ds lock lahf sub push sub xor test (bad) mov pop leave stos mov jl pusha mov or jecxz cmp (bad) fcoml (bad) incl or adc aam aas lahf in int (bad) mov dec add (bad) (bad) (bad) call sub push std jmp cmpsb lret pusha or mov xor jg push sub sbb dec xchg push mov add in jl pop daa ds jb sub das xchg lock imul fucomp cwtl add (bad) xor pop jbe and push cmp dec and push pop repnz sub (bad) (bad) (bad) cmp scas hlt push and inc xor adc adc jno shr cmp sarb (bad) (bad) ljmp jns leave loopne dec test ss je fimul dec aaa test (bad) (bad) (bad) out inc sub not push inc std push fs sub loop enter stos sub jle aam insb aam (bad) (bad) pushl cmp adc sub xor sub outsl aad cmp mov and mov addr16 ljmp xor shrl cmc sbb clc (bad) jb inc mov adc (bad) (bad) (bad) decl fsubs out cmp popl mov sub fidivl jno push add pop pop (bad) (bad) (bad) pushl cmp movsl mov or jmp movsl sarb ja push push lea xor lret (bad) lcall call fwait dec add mov jmp ja sqrtps jge cmc mov (bad) lcall mov xchg mov inc mov cwtl sahf mov scas sar jg nop jl sarl test sti xchg cmpsl inc cwtl or pop (bad) pop and pop gs push aas mov inc jbe adc pop jmp (bad) (bad) ljmp int3 or incb pop mov in sti mov movsl inc mov or or sahf push lret rcr add fisub (bad) (bad) (bad) mov push mov in ficoml xor adc mov fcoml push (bad) (bad) (bad) lcall imul das enter je sub sbb (bad) xor lods add (bad) dec arpl (bad) gs xchg out or xchg (bad) (bad) ljmp sub mov lods in addb cwtl push addr16 sub cmp lea (bad) (bad) (bad) lcall loopne push test cmc mov mov in movlps negb and (bad) fisubr add cmp or lock xchg sub mov mov imul lcall inc dec enter mov inc push ja fsubr repnz mov mov xchg (bad) (bad) (bad) lcall push mov aam jmp vpunpckhbw dec cmc sbb inc inc out dec pushf cmp (bad) lcall cmp push outsl xchg vcvtsi2sdl fs into (bad) (bad) (bad) call dec arpl decb lock sub or daa add adc lods add ds add (bad) (bad) clc lock jp lods das aaa daa xor jecxz pop mov adc inc pushf lds loop and (bad) (bad) call in mov (bad) push inc xor pop jge in jg push xor divb and js out clc decl out cmp push stos outsb sbb (bad) in xchg add xor lcall jmp (bad) loop lret push adc cmp sar loop rorl add (bad) pop lahf adc aad cmp mov add stos jge dec sub (bad) (bad) call loop mov cli imul push andl adcl inc or lds (bad) (bad) (bad) mov sbb jae in mov out aas in xchg add xlat aas in mov (bad) (bad) (bad) pushl in loope insl push fwait sar shrb and mov int cs (bad) (bad) jmp cmp pop pop sbb xor (bad) add gs popa adc into adc in jb hlt (bad) (bad) (bad) jmp dec inc inc adcl jo adc aam loop or (bad) popa push pop and jmp pop mov push push xchg out rcr push es imul jb mov push (bad) fcomip decl lahf nop inc sbb sbb jnp push inc jge inc test pop (bad) (bad) ljmp cmp lret movsb rcrl cmp nop xchg jp pop inc (bad) subb xor pop insl (bad) stc xor inc dec pop or pop mov fcoms enter je,pt int3 hlt dec adc (bad) call jne ret sbb das xchg sbb (bad) movsl mov lcall aam (bad) inc ds push stos sahf pusha ss addr16 mov mov imulb (bad) and in and out add scas cmp (bad) (bad) (bad) pushl mov insb inc jl aam pop push std dec into jae xchg out nop add les sbb (bad) pushf (bad) rcrb out jae or (bad) (bad) (bad) (bad) decb or fisttpll sub int3 mov push cld lds lcall ja scas notb repz add loop into psllq (bad) decl cmpsb push or scas push daa xchg add stos (bad) lret repnz xchg jno dec daa inc scas sbb mov in (bad) mov pop js mov in inc sbb jmp cmp mov push xchg arpl add cmp clc cmp imul mov (bad) (bad) (bad) jp sub fistpl loop cs ljmp shrb inc sub mov (bad) incl sub je dec adc inc out xchg test (bad) (bad) (bad) lcall andl pusha sbb and inc cltd cs adc adc dec add sub (bad) cmp dec leave mov call cmp add (bad) fildll arpl int3 (bad) out pop loop outsl sub inc fstps mov incl into pushf jecxz insl or adc loop xchg jb dec pop jmp jg (bad) ljmp jo in int xacquire mov aaa dec (bad) jp push mov adc push outsb (bad) dec xorl ljmp adc mov adc popa xlat push pop xor sub jge imul add in frstor push mov enter (bad) (bad) decl xor add cltd or mov psrld mov sub push (bad) aas imul pop pop adc mov pushl call lahf cld mov mov and idivb mov ss fwait dec jg add (bad) (bad) (bad) in jns stos out loope int3 divl or outsl and mov xor adc popl or (bad) (bad) inc pop ret jge (bad) or jo mov adc sub mov (bad) in sarb and dec and jo and push fdivrl stos mov cmc bound push rorb aaa inc out sarb (bad) (bad) mov push push sarl xor popf mov andl sub hlt (bad) (bad) (bad) in fist sub aaa jns xchg mov jae stos out scas pop lahf pushf dec mov pop bound (bad) ljmp les jg cmpsb cmp ljmp popa jecxz adc add clc (bad) lcall mov xchg dec inc push and (bad) xlat and and lcall mov mov shrb or stos sub leave mov cwtl aam (bad) (bad) jg cli nop xor mov mov dec xlat lret fwait aam xchg mov (bad) (bad) call imul in cmp cmp mov mov add or pop or (bad) (bad) decl fstl jg mov cmp dec jle test jb pop pop bound xchg lahf cli (bad) (bad) (bad) push popf int add dec inc cmpsb xor xchg inc push mov jecxz pop mov mov mov loopne incl adc sub fwait add iret call xchg int3 pop adc call sbb cli jg pop cmpsl cmc push icebp faddl mov xor fstp xlat outsb mov das jnp (bad) (bad) (bad) fcomip jmp mov xlat mov je stos frstor or (bad) cld or mov (bad) pop cmpsb popf add and flds push cmp pop push inc int pop mov sar dec pop fisubr div jae aad adc (bad) cli (bad) (bad) push lods mov jae and mov mov out mov arpl mov mov (bad) ljmp mov inc js out rcrl sbb test jge inc xchg mov (bad) (bad) (bad) ljmp add push lcall jecxz add jno sbb jae push (bad) aad daa lahf mov push cmp std ss push add (bad) (bad) dec popf xchg cmp mov lcall xor test mov and cltd das dec xchg pop mov pop mov xor (bad) (bad) (bad) jg ja add jmp loope or les pop sub and adc and cmp pushl jnp xchg lret jp daa push mov (bad) rcl fcmovnbe push test clc cmp mov dec (bad) (bad) ljmp mov cmp sbb push (bad) jae scas imul (bad) call jno add enter pop xchg push xor mov bound and xchg (bad) incl mov dec xchg push cs andl (bad) (bad) (bad) push mov add adc xlat andl imul iret pushf in (bad) (bad) (bad) inc adc mov xor push cmp jle sub movsb cmc addr16 xchg cmp clc dec jmp add jb cmp fildll cwtl and cli (bad) jg call xor cmpsl mov pop movsb jno stos sbb js jo imul jp jno xlat lret out push pop jo xchg pop xchg fistl lcall (bad) (bad) (bad) (bad) jns xor sub movsb xchg js add sub hlt imul das lock ljmp xchg add push fistpl dec (bad) (bad) (bad) dec into mov sbb rol icebp popa xor mov movsb sub xor rolb jg jae (bad) (bad) call daa xor (bad) je (bad) ss arpl sarb in xchg lds ljmp dec lahf xor mov mov mul mov (bad) (bad) lcall fcoms mov imul xchg in sub add lret push cmp test (bad) pushl push dec gs (bad) jne fdivrl icebp pop xchg jecxz mov push cld (bad) decl sahf mov (bad) nop movsb push incb (bad) sbb hlt sub jno (bad) mov xor data16 int into popa sbb add repnz out cli (bad) fidivrl stos leave scas ljmp movsl push jbe aaa ret sbb imul sbb insl push mov gs xchg shl clc and popa je dec ljmp clc call inc add lea int3 push inc mov cmpsb negl jmp test sar les mov loop pop arpl dec loopne mov js mov (bad) (bad) incl (bad) or mov jmp jo mov stos stos push in addl stos cld lret std (bad) call mov iret dec sub test imul pop fwait cwtl (bad) (bad) (bad) (bad) call int fsub or std bound fnop sbb andl je sbb jg (bad) fstps mov idivb inc ja sub rcll out (bad) (bad) (bad) fistp nop jno mov jb jb lret or scas aam cmc ret or ljmp (bad) jmp cmpsl dec jl ret push mov push outsb mov pop sbb jns repz or add dec aas cmpsb add fidivr bound mov call adc sbb (bad) mov add mov cmp pop add sub daa and mov xchg (bad) (bad) (bad) decl notl push movsl shrl mov pushf sub test or inc fsubrl inc nop jg fcomip pop enter aaa mov push mov cmp (bad) (bad) (bad) (bad) call sbb aaa jne in (bad) add ffreep sbb cmp add inc sub incl movsb lahf dec popf adc xor popf (bad) (bad) push lcall pop imul adc js pop sbb and imul es (bad) (bad) in adc add dec mov mov inc adc pop in (bad) (bad) ljmp test sbb (bad) fstpl add js jp out push sbb mov mov into sbb subl pop into dec mov test jg or sub cmp fidiv fwait xor fnop scas mov xchg dec out or push mov (bad) (bad) ficoml xlat popa rorl mov push mov xchg jne rcrl mov xchg test push pop xlat or testb jnp fmul xor divb (bad) jb fcomip jmp cmp xchg push mov mov test lret ret fwait push push mov iret popf mov subb (bad) (bad) (bad) ljmp bound and and gs cmp xor ds (bad) (bad) (bad) jmp sub data16 stos dec sbbb pop arpl ficoml in into cmp stos (bad) notb loop (bad) (bad) call pop or mov sub ret pop (bad) (bad) ljmp loop ds sbb xchg je adc aaa xchg inc stos or (bad) decl ret jns adc mov into jl push mov cwtl lock (bad) inc (bad) icebp mov out fcoml aaa mov xor out push in (bad) movsb rcr sub (bad) (bad) fbstp cmp xchg ljmp pop xchg fcoms or jno or (bad) (bad) call pop push adc fcoml cmp inc and lahf cmpsl (bad) je (bad) testl icebp (bad) (bad) out push sbb push sarb and mov jl clc (bad) (bad) (bad) (bad) ljmp cmpsb fistl nop pusha stc inc (bad) adc pop pop lods aam or (bad) (bad) (bad) ljmp sbb insb fsts fcoms dec cmp inc pop xchg enter (bad) jle fbstp (bad) fwait push push dec sub adc push shlb (bad) (bad) mov or stos sub sbb (bad) lcall push aas mov aaa ja xor cmpsl jb lret popf xlat lret clc mov adc jno (bad) (bad) (bad) jge aaa (bad) pushf cmp outsl push xchg imul imul into and ret and cli mov (bad) (bad) mov mov xchg roll in and sub push sub incl (bad) lret dec adc jg mov pop add xchg (bad) nop loope mov (bad) push scas push cld dec add mov mov insl add jb push jno (bad) (bad) (bad) (bad) cld jb sbb sahf test xorl aaa mov sti pop pop xor xchg int3 nop pop jae (bad) (bad) (bad) mov xchg in cmp jne mov add cmc js stc jb mov or xor (bad) push add mov int3 push cs call mov adc pushl addb test mov icebp jmp orl js movsb inc (bad) (bad) mov push lret xor pop (bad) mov xchg pushl push in and xchg les dec or cmp cmpsl je (bad) (bad) pushl pop outsl push call inc sar adc sbb imul dec (bad) decl popa jg mov into and imul xor mov (bad) (bad) (bad) decl repz jecxz les arpl or jns jmp out dec mov add (bad) (bad) (bad) out pop mov lahf cwtl dec (bad) dec loopne sahf stos cmp push fs inc cwtl sahf mov out aam add pop cmpsb cltd out dec dec xor mov push mov leave pop dec (bad) mov (bad) (bad) call les add push (bad) lea pop mov insb or popa xchg int clc andl adc (bad) (bad) decl sbb jo popa sti sub fsubrs or adc adc call cmp (bad) mov daa xor ret pop out push adc cmpsl rolb (bad) (bad) decl jecxz inc adc adc mov mov dec inc dec loope sti jecxz (bad) mov (bad) inc sahf sbb not lret pushf jl jg push jge mov enter adc in push in btc adc divb into fwait cmp test ljmp sbb jmp imul ja movsb (bad) mov xchg test sbb sbb jb add (bad) (bad) js mov mov inc xorb ret inc inc and jbe (bad) (bad) (bad) jg das mov sub mov adc and divb sahf outsl jne inc mov repz adc xchg hlt ljmp add pusha add or mov popa inc ljmp lret (bad) (bad) push out add (bad) pop and push or and stc outsl sbb arpl inc adc jmp push xor inc jbe push pop leave loope push push cmp stc out add push dec fmulp cmp sbb (bad) (bad) (bad) (bad) jmp movsl inc (bad) jae ret inc hlt mov xor fisttp inc pop es (bad) (bad) cmp addr16 pushf inc pop push insb push enter jno gs dec fisubrl sar (bad) decl lock imul mov test cwtl push out xor out sahf out lds inc mov mov pmulhw (bad) dec std dec adc (bad) (bad) (bad) (bad) incb sub sub stos jne push mov push leave lcall inc push lret rcrb and call enter mov mov arpl sbb mov jp (bad) enter (bad) lcall stos mov add cmpsb pushf fdivrs fcmovnb mov aam push (bad) (bad) (bad) ljmp movsb jb ss jbe sub imulb cld jmp (bad) sbb push cmp mov dec nop push xor push inc cmpb sbb (bad) incl jmp sbb cmp pusha stos mov jmp pop sub (bad) incb inc push mov mov lea cwtl xlat push mov repnz sub scas dec xcrypt-cbc cmpsl adc jmp cltd mov push cwtl rorl ds mov rcll or (bad) (bad) fsincos inc cwtl mov out adc pop add mov (bad) (bad) incl xchg mov inc xchg shrl cmpl hlt bound (bad) lcall mov insl adc (bad) inc jne mov (bad) xchg cwtl mov jmp add pop pop xlat jge into add push mov call cmp arpl insl jp lahf mov add leave (bad) (bad) (bad) (bad) cltd std lea insb jl or xchg into (bad) outsl lcall mov insb pushf mov push and ja ja pop repnz mov (bad) call xchg and cmp push mov sahf les aas popf out test adc std stos popa sub lea ret sbb adc jl pusha xchg mov jp adc call (bad) call inc bound jb pop cli cltd nop mov popf mov in fcom jo (bad) fdivrs (bad) (bad) (bad) jmp ret daa in cmp movsl push cwtl xchg or mov cmpsb cmp (bad) mov std (bad) decl (bad) dec jno pop or pop out adc adcl adc ss jle (bad) mov push insb xor cmp sbb ret (bad) (bad) jg pop sub or xchg sbb adc (bad) (bad) inc add cmp cmp (bad) fisttpl push (bad) lock stc mov mov push (bad) cmpsb (bad) incl insl cmp push int3 ja mov or (bad) movsl (bad) je ja dec cmp (bad) jg adc outsb outsb movsb push cwtl dec inc pop xchg mov fisttpl push movsb inc (bad) (bad) (bad) (bad) fcompl repz xor pop in bound wbinvd jle sbbl outsl adc jae cwtl (bad) (bad) (bad) call test sbb xchg out pop sub jne mov inc push xchg jno iret cmp hlt adc outsb mov (bad) add and mov (bad) out lods add stc push push and jno bound lahf enter push notl cmp int3 cwtl or fiadd push iret sbb (bad) (bad) incl add inc dec out aam add pusha pusha mov cltd or jo sub iret (bad) (bad) (bad) (bad) mov sarb pop push ss xor push fistp pop jae aaa loope (bad) pop out mov xor dec or cmp add cld sbb (bad) (bad) (bad) lcall in insl mov pop push mov dec and jle xor aas dec mov jae or push mov push loop pop cmpsb sbb lahf sub (bad) scas sub cwtl dec mov inc add (bad) (bad) jge call adc andl roll ja pop mov push cmp push in bound xlat aas fiaddl movsl xor lcall pushl push lods cmc ror adc aas js (bad) mov dec sbb cmpsl idiv (bad) (bad) (bad) (bad) jno (bad) mov xor into inc into aam jl cmp in pop divb (bad) (bad) call sub and test push hlt loope sti adc stc bound inc insl pushf ljmp pushf lods dec ss gs push push bound out jg insb dec mov lcall call xor mov dec mov cltd hlt nop data16 hlt leave dec scas lcall (bad) cld and fwait sub mov and jne ja adc (bad) call pop dec jo cmp or cmpb dec sti jae adc pop (bad) (bad) (bad) ljmp adc shlb lods scas ljmp sub add mov or (bad) fcomip pushl out mov fildll (bad) pop cmpsl jp fnstcw (bad) jg sub mov xchg mov inc adc lods add repnz mov dec imul sub cmp xor lcall mov pop cmp test xchg mov sub mov stc out test repnz push inc ret and fistpll out in inc jle imul push adc in xchg sbb (bad) mov inc jecxz mov lock movsl cwtl out and popa xor xchg ljmp (bad) cld jmp movsb insb inc push xorl push ret mov (bad) iret jo (bad) call inc inc jecxz xor dec iret mov jl mov adc or xchg jbe xchg mov clc psadbw cmpsl push lods mov call (bad) cmp dec sub pop mov ret fsubrs lahf std dec sbb or dec fsts in rclb bound sbb (bad) push enter inc ds fnop mov or aas (bad) mov inc cmpsb mov aaa mov jmp test dec insb jbe (bad) cmp (bad) (bad) (bad) dec sbb pushf call lods or sub iret push mov mov sbb aaa cld lcall jbe cmp mov ja arpl mov and (bad) mov ss addl dec gs je mov lret (bad) (bad) (bad) (bad) (bad) stc and es xor mov dec stc mov imul mov jecxz mov inc sbb fistpll push (bad) xor das sar call pushl mov gs xor aaa test push (bad) (bad) (bad) (bad) mov stos push adc scas add pop and sbb cmp mov loopne shll and dec shl inc (bad) icebp sub mov push xchg sub incl adc pop sbb and in mov icebp or push cwtl cli mov repnz push daa and (bad) (bad) ljmp push mulb (bad) cmp push xchg out loopne (bad) fidivr icebp jecxz (bad) (bad) (bad) ljmp xor add roll arpl adc mov in pop push mov or mov sbb mov inc xor ret and adc push test fidivrl inc (bad) (bad) (bad) pushl adc mov test dec or pushf and push sub (bad) (bad) (bad) jmp add cmc or out lds sbb ja xlat ljmp or (bad) (bad) (bad) decl imul imul into (bad) push add dec mov sub sbb (bad) (bad) ljmp (bad) xor (bad) sbb mov addl pop (bad) (bad) (bad) pushl mov fnstsw stos iret movsb (bad) sub int3 insl stos inc jne rcll ljmp cmp rolb mov aad xchg inc mov lret lret (bad) (bad) (bad) ljmp pop pop ljmp mov lcall xchg (bad) rorb fidivl and dec push sub pop aad push adc (bad) lock (bad) (bad) (bad) jg cmc leave cli (bad) int outsb lret add xor mov (bad) ret cmpsb xor dec (bad) (bad) (bad) decl mov loope xor leave sbb je ljmp push mov (bad) (bad) ljmp or dec push pop std jp xchg lcall popa jb adc jae scas pop or or sbb imul lds dec push cmp std (bad) (bad) decl inc sbb mov xlat stos cmp jo push repz (bad) (bad) call fmulp adc mov adc leave pop jmp mov fwait mov (bad) (bad) lcall cltd push jne pop pop push jle (bad) mov mov popa sarl int dec xchg (bad) (bad) (bad) (bad) jle fiadd mov les call sub adc mov jo xor (bad) (bad) jmp mov pop cmpl mov pop mov cmp fdivrs cmp (bad) sub dec push inc sbb push push add and (bad) (bad) (bad) (bad) jno mov pop mov inc arpl mov cmp add aam pop pushf inc (bad) mov push dec sub rcrl xor pushf pop (bad) decl sarb push sbb mov pop fneni(8087 adc jmp outsb cmpsl stos add out adc mov mov dec cwtl xlat jp jo xchg lods (bad) (bad) (bad) jmp add jb lret pop jmp jnp and enter (bad) out aaa push (bad) loope mov jecxz and sbb (bad) cmpsl outsb cmc ja data16 stc cmp lock (bad) (bad) (bad) in les sub jne dec imul or in bound nop bound fldl mov (bad) fcomip push xchg (bad) mov stos xchg inc in xor lcall lock mov call outsb test das sbb and test (bad) (bad) (bad) (bad) mov mov fcoms vshufps inc aaa popa aaa fs (bad) and ljmp add lods pop dec sub and loope mov out scas arpl mov add sbb clc xor test and push cli jmp push and js repz jbe mov pop xor in clc in (bad) cmp arpl push jge roll test pop xor (bad) decl in ja lock shll dec dec sbb push sbbl mov dec inc (bad) mov mov jp pop rcrb mov lds or adc js add decl sbbb inc dec (bad) addr16 inc ss bound fidivrl loop and (bad) (bad) (bad) (bad) and out rcrb aas dec sub std (bad) xchg mov fsubrl es lcall fdivs jo stos rclb fildll (bad) mov jno call sbb daa int lea jnp jb xchg xchg push fcomip (bad) pushl test pop inc pop dec incb mov ljmp (bad) (bad) call pop fisubrl jns lahf (bad) xchg mov iret mov push lahf sbb scas mov lock (bad) (bad) ljmp push imul callw pop or insl int3 in std out pop int ret inc mov loopne pushl push xor adc repz jae hlt popa add xchg out fistl cmp movsb mull fiadd and mov (bad) (bad) (bad) (bad) jmp int inc pop mov push sub add cmpl out fnstcw es insb popa adc aaa cld outsl xlat xor jle add loopne idivb jno pop orl (bad) pushl (bad) push mov test xchg mov repz les push movsb nop (bad) insb cmpsb int3 pop dec mov mov push nop js xor dec pop inc (bad) (bad) (bad) (bad) inc popa roll add dec pop lahf jae mov xor movl repnz (bad) (bad) (bad) mov cmp xor cmp sbb es mov cmpsb rcll test (bad) (bad) incl ja jg (bad) mov stc sub fimul movsl loop (bad) (bad) stc dec jge lahf and cmc (bad) (bad) (bad) out push (bad) jnp fnstenv sub add adc repnz sub jne cmp pop jle sub jge dec mov fcoms repnz out sti (bad) or (bad) (bad) (bad) ljmp pop movsb movsb mov ja notl test pop rcrb pop aaa push mov aad inc addb sub push in cltd gs jns scas out cli lea pop and pop scas (bad) aaa roll imul pop or inc mov fdivrl xchg lahf jle lcall mov (bad) mov (bad) aaa jmp add (bad) lcall add add sub (bad) rcll xchg push push insb pop test mov (bad) (bad) jg mov fsubrl call mov add cltd lds repnz ljmp inc repnz ficom mov fidiv xor pop push sub out inc fcom fidiv cltd sub inc test mov push fwait mov add cltd loopne out cld (bad) lcall xchg es rorb cmp mov call push jnp nop mov and js or mov mov (bad) ss ret (bad) pushl std mov nop sub pushf repnz rol lcall (bad) (bad) call out or fwait cmp or insl sti pop pop es mov fild (bad) lcall push cld pop sbb xchg dec (bad) jg dec cmp mov pop mov incl cld (bad) mov jp lock or jns cwtl enter push mov (bad) push push mov xchg mov fdivrs femms cmp cmp xchg jg (bad) in movsl mov dec fsubs push pop xlat cmp divb jnp gs (bad) (bad) jmp icebp sub mov push inc add rcrb sub imul jge mov add or push add (bad) outsl stos mov call cmp std les shll mov adc (bad) (bad) (bad) (bad) jl mov insb (bad) cld and imul mov push incl ss jl xchg test (bad) decl or cld shrd ja ds pop fstpl scas aas or dec and (bad) mov jnp or xor xchg daa imul mov sbb (bad) (bad) (bad) call add ret sbb add cmp or xchg ret (bad) (bad) (bad) (bad) decl leave (bad) sahf (bad) mov jb pop aam jo mov pop jmp mov mov das clc pushl lcall mov dec (bad) push xchg or sbb (bad) (bad) (bad) mov xor test jecxz enter push mov adc sub rcll cli (bad) (bad) (bad) fcoms test or js lret jns xor cmp ljmp dec js and lock jge or sbb cmp mov lcall pop jo jb cld pushf jb mov mov (bad) aam shrb mov mov xchg adc pop add cmpl push sbb ja hlt rol mov pop inc jmp stc mov xchg stos jecxz inc mov pop lret push imul pushl xchg lret jo ss fcmovu jecxz insb push lds or sar (bad) (bad) ljmp mov and xor dec int popa jae scas or dec add clc or in pop aad in (bad) mov xchg sub (bad) (bad) (bad) ljmp xchg pop xchg sbb lahf das inc and scas mov addr16 jo insl jb fnstenv subl shrl sbb in call imul (bad) cmp push pop or cltd cltd jae (bad) enter daa movb (bad) (bad) jmp test and xor lahf push es xchg gs mov js dec fildll mov and (bad) (bad) (bad) (bad) std call add xor adc jb mov stos xchg jg inc icebp and (bad) lcall jge lret arpl pop cmp fidivr in add fwait sti aas aaa xor sbb jmp in dec pop sarb aad je mov sbb and dec mov hlt xchg (bad) (bad) (bad) (bad) cld pop add popa inc lcall xor mov cmp out (bad) (bad) (bad) call pop (bad) sub (bad) int add fs ret ret lret add mov das (bad) push fnstsw (bad) (bad) (bad) call push icebp sbbl mov xor xor ret pop push es shlb and and pop repz loop push mov sbb push lret test call mov and ja (bad) (bad) (bad) (bad) fcmovu aaa icebp mov in xchg int jg and incb inc les (bad) (bad) (bad) (bad) pushl ret test (bad) mov test icebp mov inc sub fcompl fwait (bad) (bad) (bad) call aaa in and das pushf fwait jle xchg fcmove jae subl std mov cmp mov jmp sarb push lods sub loop lahf pop out lods mov (bad) hlt mov incl mov xchg in fist sbb pop push sahf (bad) (bad) (bad) jg scas mov rcrl push call divl test (bad) inc and (bad) (bad) (bad) call inc adc mov xor call or push int3 cld add sub pop jle (bad) (bad) (bad) jns sub mov mov dec sarl dec rcrb vmread leave lea incl stc mov repz in mov dec sti cmp rcl fwait pop xchg and sbb (bad) (bad) push decb push xor fcoml dec jge mov add xchg jmp (bad) (bad) jmp mov fs shr outsl lahf inc addr16 jno,pn cmc int3 ljmp add cmp inc push pusha cmp add dec jl xor (bad) pushl mov arpl adc test push cs sub aaa pop pop daa ret cmp js xchg sub jns dec jnp test or stos mov fisubr adc jle icebp sub xchg js pop (bad) (bad) jg (bad) icebp sub dec pop mov loopne (bad) cwtl lret movsb outsl hlt movsl add pushl push xchg mov (bad) and std add jb subb loop mov jno ficompl xor dec mov add jle jbe (bad) fcompl lea inc je (bad) (bad) call mov sti xor or jo lret sbb popf or (bad) (bad) (bad) (bad) jns xchg sbb aam jl or inc add or loopne pop or ja push adc aad lods jecxz push cmc xchg mov int jbe movsb (bad) pop imul sti (bad) cmc cmc (bad) incl stos inc test add das cmp lea and xchg rorl enter cmc (bad) (bad) ljmp mov ds cs fbld popf jmp and stos int (bad) add in arpl cmp (bad) jg xor dec sub push loopne push xchg inc lcall inc loopne lds fcomip mov call add sbb (bad) (bad) call rcr pop fmull mov push jb (bad) and imul xlat sub loopne pop jle (bad) (bad) pushl push adc mov (bad) repz pop dec (bad) mov cs and decl lock pop loop mov test dec xchg rolb sysenter push es sarb lods call mov or or test call push mov lret movb daa dec ljmp call pop mov cmpsl inc das and pop sahf bound xor add les mov jl inc cmp aaa enter jmp sahf dec or fstps xor add add cld jno xchg stos pushl add push loop lock fsub loopne push add hlt lahf lcall (bad) (bad) stc leave adcb (bad) sbb jle pop sub aam dec lods fwait pushf pop xor sub int3 decl adc xor xor mov scas mov (bad) mov ficom mov inc sub daa and jno rcrb std iret sbb jae lret loope add decl outsb jne sub rcl call mov jp ss jl (bad) frstor push push nop aas lahf in or or addl cmpsb fmul jns xor mov inc pop dec arpl (bad) (bad) (bad) call pop or subb cmp fbld pop sub rep ljmp icebp or insl lret xlat data16 ret and push cmp ret mov jmp xor push andl faddl xlat stos mov (bad) ljmp jecxz xchg nop inc xchg jp (bad) shlb repz pop lock ljmp jne xchg cmp or mov push add sar adc lret mov pop repnz mov (bad) (bad) (bad) jmp sbb (bad) addr16 ljmp cltd cltd popa mov int3 dec (bad) lahf and (bad) (bad) incl sub (bad) lods cmp dec in dec xchg dec pusha (bad) jle mov add dec and (bad) jmp stos sahf rorb scas out xlat gs add icebp or mov (bad) fstps loopne pop lock dec es stos mov pop cmp xchg push and popf xor movsb popa std (bad) (bad) dec mov sarl inc dec inc xor mov fcompl psrlq in (bad) cmp mov vpcmpeqw rcrb lds sub xor xchg xchg push adc ljmp lods inc cs push pop out mov (bad) sti adc and pop xor (bad) fbld jae gs andb or mov push (bad) (bad) incl jno xchg mov sub in inc jne push mov (bad) cmp mov mov pop mov add and scas in push jp pop pop ds mov (bad) (bad) (bad) jl mov loop out xor jecxz test lahf sbb sbb cli (bad) ljmp fdivrs ss test jl ficoml (bad) (bad) (bad) lcall xor fistl call pop sbb adcl xchg or (bad) (bad) (bad) call imul dec jns loopne add sbb out lcall pop lock cmpsb imul daa jle fmull xchg dec int3 jg mov (bad) (bad) (bad) jmp outsb mov pop rclb xor dec xchg (bad) ror pop stos ja clc jl cmp data16 (bad) (bad) decl stos icebp mov hlt mov ljmp jne lret sub sar (bad) (bad) (bad) ljmp adc xchg ret ss pop and cmpsl (bad) jno cmp fcompl incl sub jbe lahf cwtl test inc clc ljmp mov call inc data16 fucomip sbb (bad) dec mul mov ficompl and (bad) (bad) incl test stc repz sti mov xchg ds (bad) fisubl jp lcall stos ds xor pop loope pop out cmpsb dec sub ds ret ljmp xchg cmp mov (bad) repnz lahf ds jmp (bad) (bad) (bad) (bad) jmp inc repnz fisttpl lahf addr16 mov dec les (bad) (bad) pushl pop std add lcall arpl pop pop push and (bad) (bad) (bad) (bad) lcall test fs rorb jp mov dec int3 shlb mov pop (bad) (bad) (bad) (bad) call and pusha sbb pop jnp lea mov push push outsb dec out jbe ja inc mov jmp mov outsb lods mov ljmp decl or xchg mov xor cmp push sbb into jg movsb pushfw (bad) (bad) (bad) (bad) mov inc mov daa pusha aas hlt push adcl and adc loop out xlat mov (bad) fnstcw (bad) add mov decl jg mov add notl add stos mov std and pop dec xchg lea pushf and (bad) fmulp (bad) (bad) (bad) ljmp adc push and js pop in in dec inc fwait enter fstl loop add icebp std pushl std call out sub inc or addr16 test es mov pushf inc xchg mov fsubrs and mov mov popf dec (bad) aad in (bad) aas std mov inc inc sub pop push pop test jb (bad) ja sub scas out stc (bad) (bad) (bad) ljmp leave jb cli dec or ror cmp jno popf mov or es mov (bad) (bad) call xor cmp es or cmp and lea shrl fdivr scas dec (bad) and incl cld ljmp (bad) mov fildl cmpsb bound or adc int xchg and inc push xchg jmp (bad) cli outsl adc or inc or jg add leave arpl (bad) call mov out sbb cld aaa inc xchg and (bad) (bad) (bad) jl test aas sbb jae jbe sarb jecxz dec inc (bad) xlat out inc sbb (bad) (bad) (bad) (bad) jmp (bad) rcl sbb sub dec lahf sub mov negb sub ja (bad) decl xor cmpsb dec xor scas repz push ficompl outsb jns xchg add loope decl (bad) pop mov xor or stc hlt ljmp lcall aaa mov outsb mov lcall jmp jge xchg in xor (bad) (bad) (bad) lcall lret jl,pn mov addr16 sub into ror sub (bad) push outsl xchg (bad) (bad) (bad) decl dec inc sahf lahf cmp je (bad) inc pmovmskb adc or xchg or scas and (bad) out clc inc pop pop or xchg inc inc shll jns int pop jl and xchg jb (bad) call std sysenter pop sbb cli mov movsb add rorl add dec loop (bad) lret mov (bad) jmp pop or pop iret add movsl dec sub clc das mov jnp (bad) (bad) incl cmp aas push in out mov int3 mov fild mov (bad) (bad) ljmp push cli es pop outsb dec lea lods mov insb popa in dec mov fs ljmp daa (bad) mov jg lods sbb sti mov adc xchg mov (bad) (bad) lcall ljmp outsl (bad) popf sub push ret inc jns jo dec sbb mov aas inc addr16 (bad) (bad) (bad) mov lcall pop call mov inc dec je xor ljmp insb cmp adc and (bad) incl les xor aad sbb xor nop pop pop sub cmp incl divl xchg push test into inc stc mov push or mov (bad) ljmp sub rorl mov decb adc (bad) (bad) (bad) pushl sub mov pop cmpsl cmpl mov mov imul movsl sub (bad) (bad) (bad) lcall jmp outsl pop cmpsb push xchg and mov push xor push pop push loop cmpsb shlb sub (bad) (bad) (bad) jle adc cmp mov pushf xchg jo mov (bad) xor pushf xchg xor imul add dec in cmpsb sbb mov (bad) jnp jl xor add icebp (bad) mov push jmp adcb (bad) fdivrs (bad) (bad) mov out sub test add vcmpord_spd lods clc lea lret inc push repz fsts jo mov clc lret imul leave push pop stos push xchg dec rcrb add (bad) (bad) pushl test dec adc jnp inc mov clc and pop add and and mov (bad) (bad) incl les xchg ja xchg xor mov add call lcall mov fisttpl repnz popa xchg add shl mov hlt jge cwtl (bad) (bad) ljmp xchg jecxz jae int xor pop pusha pop int pop mov push (bad) push mov mov call xchg push pop fwait xchg cmp pop add iret jecxz ja add mov ret dec add iret lods aad jp mov inc or aas sub push js loop mov mov (bad) fcomip jae sti pop mov repnz or andl (bad) (bad) in ror add imul out out frstor test mov repnz insl mov sbb into or xchg pusha mov imul cmp jle incl and test clc push popf daa jmp hlt js les xchg (bad) ljmp cmp xchg scas sbb xchg mov and jmp xchg adc push mov lret mov (bad) (bad) ljmp ret cmp das xor xor loop sbb mov (bad) dec pop add incl imul add jg ds out pop (bad) (bad) lcall leave nop movsl sbb int mov jecxz,pt cld push lds nop popa push dec (bad) pushl inc add push sti ret loop jne and jg incl (bad) dec fwait xchg std and sbb sbb into lret (bad) dec and fimull mov jo pop xchg test or xor push ljmp mov outsl mov cmp or lret jg add fisubl fmuls in (bad) (bad) (bad) lcall mov popf pop scas cmc (bad) out cmc pusha fnstenv mov dec jecxz (bad) (bad) (bad) (bad) (bad) cs out es sub (bad) loop adcl add pop inc (bad) (bad) (bad) (bad) mov fisttpll sbb negb (bad) (bad) jge popa adc pushf in jo (bad) (bad) (bad) (bad) mov xchg sbb xor mov or (bad) dec mov sub adc divb xor and mov (bad) fildll into inc xchg test mov jge sub push loope arpl cltd inc stos xor fild call cmp int3 and push xchg insl jge jmp (bad) and daa test inc ljmp (bad) push jb push push fs push mov xor frstor das cld daa pop cmp xchg jl fstpl or jmp inc mov test call stos (bad) xor adc cmp push rcrl inc fcompl (bad) mov (bad) pushl aas fcoml adc xor jecxz (bad) xchg mov jnp push adc jns mov (bad) or in lret (bad) (bad) (bad) (bad) aas adc pop out and icebp mov sub adc (bad) (bad) (bad) pushl and daa (bad) repz xchg cmp mov leave mov test xor (bad) (bad) lcall xchg mov out mov fisttpl decl in sub lds lret hlt shr sub ljmp add clc or cwtl pop fisubr sbb imul outsl (bad) (bad) incl mov lcall push stos jbe sub pop or rcrb (bad) jmp cli movsb div inc fdivl fimull repz pop add das push ss sub incl xchg popa xor mov inc ja nop stos sub push and jg ljmp jg lods pop cmc test add flds cltd lods out cmpsl xor (bad) (bad) call mov lds ja mov adc add xlat out das decb add lcall mov icebp mov push test inc cs int3 cmc loopne (bad) fiadd shlb (bad) (bad) incl mov inc cltd fst dec rcrl lret jbe add xor test dec or jo repz mov xor mov orl (bad) (bad) (bad) call jg movsl or sbb inc mov push fucom push xor int3 lods push pop (bad) (bad) pushl lods std add jae pushf mov fisttpll mov in push lock (bad) dec aam xchg aaa arpl xchg in jp sar and lock cmpsb mov cmp sub lods test iret inc fincstp (bad) (bad) jmp cli mov mov mov cld lock ljmp dec mov mov xadd je push stc mov push enter dec pop lea ljmp sub outsl sub (bad) (bad) dec xchg mov sub mov adc cli arpl in mov dec xchg or (bad) (bad) (bad) lcall adc test sub jg mov jne pop clc arpl (bad) fcomip jmp push aas or add sarl pop out int3 adc pmulhuw (bad) (bad) call jne inc xor popa inc lock jno les in pushf out xchg fxch pop push (bad) int3 (bad) (bad) mov xor fsubp fistpll ljmp sbb lcall jmp cmpl cmp out xchg adc push je sub mov jl add (bad) (bad) (bad) incl mov dec daa mov insb dec clc inc in or mov lcall inc dec xchg add (bad) decl mov (bad) lock (bad) cmp rcl movsb (bad) (bad) (bad) jg mov imul pusha jnp inc and es fistpl adc or test je mov jge ret dec add lds jp out mov out jp popf push (bad) (bad) (bad) ljmp test pop xchg (bad) out or lret clc hlt es les fsubs icebp (bad) (bad) (bad) jmp mov xlat xchg stc std (bad) imul (bad) bound imul and negb movsb and out xor mov inc addr16 loop mov cli aaa gs outsb (bad) jg (bad) (bad) ljmp jno xchg dec sbb mov mov clc dec push jno aad adc (bad) (bad) mov je or stos mov mov cld les push or popf scas shrb xor xor nop addr16 mov pop popf imul into cmc sahf jl stc cmpsl (bad) (bad) (bad) lcall es inc das sub addr16 imul pop loopne xchg popa repnz jmp or (bad) (bad) (bad) (bad) fidivr fs pushf add add adc xor out inc mov lods (bad) (bad) (bad) incl and add cmc xchg inc daa movsl clc pop jbe pushf stos and fucomp jnp ret call decl sub scas lret into xor cmp sub and popf mov (bad) jmp out dec xor mov sti lahf lahf mov ja rcl ret sub (bad) (bad) (bad) (bad) cmp andl subl lods or xchg andl (bad) (bad) lcall test push je inc into adc addr16 xchg cltd dec inc (bad) mov add gs inc cmp (bad) (bad) pushl (bad) call push inc test mov xor cwtl nop ret inc sbb (bad) (bad) ljmp ret (bad) roll mov jbe jmp xor mov rcll imul (bad) pushl sub mov pop jmp into insb in into mov leave cld sbb cmp cmp (bad) cmp js scas int3 jne mov lcall jmp push cmc pusha inc bound out mov enter add mov decl jb mov dec push into jg mov xchg lret push fist pop ss cmpsb xor clc int sbb jbe data16 mov xchg sbb or add incl scas inc mov jmp mov adc es sub pop movsl and pushl clc jns jmp enter inc pop addr16 cwtl hlt (bad) (bad) decl in xor call sub push ret xor ljmp and stc jne ret push lock aam add loop mov and popa cmpsb jg in add push outsb loope xor fdivr (bad) (bad) call (bad) enter icebp cmp daa (bad) xor xchg mov inc push out negb fs sub pushl push rcrl xor pcmpgtb sti dec jl and mov pop sub mov lret cmp add div and setnp adc loopne dec (bad) (bad) (bad) jg divl push pop pop (bad) jnp mov or and or loopne and (bad) (bad) (bad) (bad) inc cmpsl fistp cli cmp shrl pop mov or les (bad) (bad) (bad) ljmp push (bad) pop xchg ja sbb adc and loopne jmp xchg and inc xor cmc (bad) pushl jae in repz xchg sbbb pop in push mov dec loopne push (bad) pushl pop test and jns jg les (bad) (bad) mov jbe bound inc pop fdivs sub hlt mov fistpll cld (bad) (bad) mov out stos fdivr int3 daa aas outsl mov cmpsl push in ljmp (bad) inc xchg add ficom into or cwtl in xor not jl stos jg (bad) (bad) jmp mov sub inc in addr16 enter fidiv call jo (bad) (bad) incl pop dec dec gs jge jbe imull (bad) or notl in bound xor lods aam ja or (bad) incl orl jne leave lret loop mov mov cs ljmp jmp daa jmp cmc fdivr sarl aam push in push lds cmp movsb lcall hlt or push arpl push xchg clc mov (bad) (bad) jnp lret inc test (bad) imulb inc fidiv pop fs pop and daa pushf (bad) cs loope incl out push cli out rcrb fucom inc jo inc jmp aas sbb cli (bad) sub lds and push mov (bad) (bad) (bad) mov mov out hlt cmp stos inc jg sub pop and pop push jp adc (bad) call dec jmp push xor pushf xor cli sbb dec sbb inc (bad) orl fbld dec push mov (bad) lea hlt pop dec mov outsl jg scas mov xchg lock xchg negl ds stc dec (bad) (bad) (bad) lcall pop notl jle,pt jecxz (bad) fdivl jne fadds and push sub out mov (bad) (bad) lcall imul int aad fadds popf mov ja sbb cmpsl aam ljmp test or pop sbb jge pop gs jb xchg cmpsl stos inc inc lcall jmp push adcb or data16 outsb mov push pop adc frstor cmc in fmul jl adc adc pop mov jg pop sahf push xchg stos fidivr cmc dec fninit push pop bound cli xor es icebp cmp (bad) incl jecxz fdivl fcmovbe xchg or pop dec (bad) and decl mov mov push mov out lret dec adc cmp dec cmp (bad) (bad) (bad) (bad) aas fildll aam in les dec (bad) fimull push outsl in aad lcall (bad) (bad) decl mov push adc jmp std pop pop movb ljmp jg mov lods popf push (bad) sbb mov jl mov inc adc incl cld (bad) jns jo out pop aaa mov addr16 stos andl (bad) (bad) (bad) (bad) cmp (bad) lock mov outsb icebp loop and test sarl fisubrl mov in pop call and add (bad) decl (bad) mov mov mov push mov fcomi inc loope push jecxz imulb sub xchg ret test mov insb clc jmp mov lock sbb cmpsb mov aas shlb (bad) leave pop pop (bad) (bad) (bad) (bad) mov pusha xchg or js test iret add jbe es adc test xchg sbb and test leave xchg cli mov cmpl (bad) mov jl pop scas imul out (bad) dec push jecxz or (bad) (bad) dec mov sub stos scas cmp int3 aas repnz pop inc sbb add lahf dec lock (bad) (bad) (bad) cmp or inc and outsb cwtl aaa mov xor clc ret lock (bad) outsb sbb cmp decl (bad) incl stos fs stos push add lahf sarb mov (bad) mov ljmp (bad) call mov mov int loope mov jp out jbe mov movsb cmp cld push es and faddp ss out das cmpl mov pop fisttpll movsb mov mov mov or mov in adc lcall push loop sarl inc fwait int3 mov (bad) (bad) (bad) (bad) (bad) fldt mov (bad) mov or adc stos sub lods je jp fstl jno pop std (bad) (bad) inc mov sbb (bad) mov sub int3 aaa xchg rcl push imul and (bad) pushl movsb ror dec fidiv and stos and movsl pop sub (bad) push and inc push push imul nop inc movsb xchg (bad) mov gs incl jmp in and or mov or test test lcall ljmp rcl lods mov mov push mov lock sbb (bad) (bad) (bad) jmp dec mov pop sbb (bad) mov and mov jl pop pop fwait or incl test mov scas or ss push xlat xchg jbe shr (bad) (bad) incl xor adc dec cmp fisttp in (bad) (bad) jg xchg jno push movntq pop ret (bad) jnp sahf push dec dec repnz jno adc (bad) mov cmp aaa arpl xchg push test cltd pop or flds pushf (bad) ljmp negb add sub or xlat les imul inc pop inc or fcmovne outsl nop test cmpsl inc daa sti add sub lcall inc adc mov sbb iret fwait jg sahf xchg mov mov pop push (bad) mov and xor adc cli bound or adc cmp xchg movsb jo,pn (bad) jg inc inc xor mov test mov cmc jg int (bad) (bad) call dec lods call sbb scas push pop aad divb mov repnz cli pop dec std loopne std sub pushf mov (bad) xchg adc or mov outsl pop adc add ljmp cs xor out push cmp inc scas test dec (bad) jg ss push lods insb int3 jg (bad) mov mov and mov push pop dec push out pusha (bad) (bad) lcall stos mov push cmp arpl jle fabs adc mov (bad) lcall xchg inc pop scas (bad) insb sub sub cwtl mov jmp pop hlt pop std mov mov push lret les stc test mov test fdivrp (bad) (bad) jne shrl xor (bad) xor xlat (bad) mov mov in xchg (bad) (bad) (bad) (bad) cmp loope push mov popf jne movsb ljmp idivl mov iret mov lret call ljmp jno add mov pop mov mov push jl and mov decl mov insl jns test mov test loope sub jbe add (bad) out cmpsb mov and sbb adc dec mov (bad) (bad) (bad) jmp movsb push into add test push push adc or frstor mov jmp and outsb mov (bad) aaa xchg dec jae cmp popf or clc stc fwait jno add (bad) call insb andl insl ficompl loopne decl je pop (bad) dec sbb xor cmpb and sub outsl or (bad) call push mov jbe sahf lcall inc (bad) out pop mov test test lahf jl mov in adc (bad) (bad) (bad) dec cmp loopne lret stos and imul push (bad) mov cmc test push sbb out cmc cmpsl lock mov stos (bad) or mov fisub sbb shlb leave aaa loopne (bad) (bad) (bad) jns dec sbb mov es sti ret inc sti and xchg outsb mov and pop fwait jge (bad) (bad) mov mov lret pop xchg pushf test mov push push add call and xor stc lods mov adc add (bad) (bad) (bad) lcall dec hlt dec adc xchg and pop jae insb sti mov ret lea pop or (bad) (bad) decl mov mov ljmp mov jmp push xchg cmp (bad) jg push ret shlb xor xor pop adc jecxz idiv test pushl enter aam mov push pop mov leave mov in movsl lret aam or jecxz (bad) (bad) (bad) (bad) call sti sub (bad) repz orb pop faddl cmpsb push sub jns (bad) (bad) call scas movsb add pop daa dec mov int int3 sub mov mov (bad) (bad) inc mov add jmp lock rolb mov push cmp sub (bad) aad xchg mov inc mov cmpsb scas mov out test mov mov roll fimull imul sub fwait lahf lods and jne dec xchg popf sbb push xor xchg adc dec cld pop (bad) (bad) (bad) pushl lea outsl loope (bad) testl test es addr16 std and mov dec adc sub jae mov dec (bad) (bad) call idivb add jp inc jg in or mov hlt inc (bad) (bad) (bad) pushl cmp dec mov test dec xchg xor das js sarb (bad) lcall les das lods test jne ljmp stos mov hlt ret daa nop mov or sub and cwtl test (bad) (bad) ljmp je pop enter mov push sti or sub aas and dec cld jle xchg pusha fadd (bad) (bad) (bad) ljmp or mov jge push call cli push pop stos js pusha mov (bad) lcall mov jb mov inc sti adc (bad) jne das outsb lahf das inc push bnd pop decl cmp sub cwtl insb daa je lds (bad) pushl aaa and sub mov popf mov ja into mov push jmp out decb or (bad) imul scas clc leave (bad) push sub aaa lcall stc jb lods pop ljmp or (bad) and mov in sub xchg and dec (bad) iret sub cmp lock adc (bad) out cmp cmp nop push mov jmp mov icebp repz outsl push rol lcall cmpsl mov pop mov out (bad) mov push movsl sbb cld pusha jle pop repz mov lods arpl add add add fcoms scas (bad) (bad) mov insl dec lock cmp mov rorl stos int lods test incl arpl movsl push dec lcall push jo adc subl (bad) mov lret std xchg scas mov loopne dec push fadd pop mov cmp pop or mov sbb pusha xchg pop test insb xchg mov sbb insb mov leave mov (bad) (bad) (bad) ljmp jl out loop adc fbstp jb xchg inc movsb xor and xor sti mov aad cmpsl (bad) sub cmp cmp fistp call std (bad) ljmp sarl xchg fsubs push pop xor outsb (bad) lcall clc pop xchg insl cld jmp lahf dec dec mov lock xlat pop andb (bad) (bad) lcall pop lret (bad) std adc push adc push add sbb and cmp (bad) lcall cmp (bad) cltd cmpl nop das dec xchg (bad) ljmp in movsl repz push adc cwtl inc pusha (bad) repz and jmp test (bad) (bad) lcall push push les and sub das aas add xchg (bad) (bad) (bad) (bad) cmpsb jb cmp jne inc imul in pop (bad) pop sub in insl cmpsl dec (bad) (bad) fnsave adc ret decb lcall sbb (bad) (bad) (bad) decl lret dec cmp push cmp lods mov mov pop scas jge dec sub call ljmp pop push pop (bad) out xor jb rcrl test (bad) (bad) jne (bad) (bad) (bad) out adc stc sbb jb lods sahf cmc ficompl xchg or orl icebp arpl fbld push in or iret stos pop ss adc outsb nop call or repnz fdivr enter lret stos jmp (bad) mov in (bad) (bad) mov add mov add lea pushf adc jmp mov iret sub (bad) pop mov add data16 (bad) (bad) (bad) cmp ja,pn add mov cmpsl xchg or jecxz xchg out xchg jge jg jecxz (bad) icebp call loop inc mov pushf push add (bad) (bad) ljmp insl test mov and popa and dec add pop ljmp idiv sub movsl mov stc mov mov sbb cmp cld (bad) ljmp jle call jne add or into cmp pop ret aaa std pushl loopne jae jecxz lret mov test jg inc jp or scas cs popa push jl lock push jbe and bound (bad) (bad) mov pushf cli cltd mov rolb mov (bad) jnp incl ds (bad) (bad) pushl ret adcl addr16 or daa dec and dec cwtl dec fbld mov and lods or popf sub adc ljmp aas jns clc out push push or jg (bad) mov xor mov pushf inc push int3 adc (bad) (bad) (bad) call sbb push in aaa mov xor mov notb subl (bad) (bad) decl inc andl data16 lret les and scas (bad) call (bad) jp ds xor xchg stos cwtl aas and sbb decl nop mov xchg mov add scas cli inc mov push sub push in cmp cmc (bad) (bad) jg jp ljmp fbstp push sar sbb dec lock sbb (bad) lcall inc mov add pop or fisttp divb adc (bad) (bad) (bad) dec or cltd es roll pusha lahf pop pop cwtl loope mov mov xchg dec inc aas sub negb pop ljmp mov pop pusha mov xor (bad) (bad) (bad) call cmp xor insl mov pop lods es pushf imul fistpll (bad) (bad) call enter dec mov inc push xchg insb cmp iret imul faddl sbbl (bad) js inc clc push xchg sub sub int3 dec (bad) data16 icebp rorl shrl inc repz fisubrl (bad) (bad) (bad) call jge push out mov sub pop into inc mov int or ret add inc scas clc (bad) jmp sub push not cmp push sbb inc ja orb lret (bad) incl jp mov test jmp mov pop (bad) scas or sub (bad) (bad) (bad) mov jle xor add ret jns cmpl pusha (bad) (bad) (bad) decl and into loope test dec clc mov xor in call aas ss stos sbb ljmp (bad) jo rcll jl inc insb js xchg push mov mov (bad) mov test jecxz cltd cmp imul jl sbb cmpsl mov (bad) sbb push cmpsb inc sub movsb fdivr add push hlt mov ds mov cwtl fisubl cmc mov (bad) (bad) cld sbb jno adc fisttpl ljmp jne xchg jecxz cmp sar (bad) (bad) fldenv mov fmull mov xchg addr16 movsb scas (bad) (bad) (bad) jg aas bound mov (bad) push cmp push pop push in not or enter sbb (bad) (bad) (bad) incl inc mov jae icebp out mov push (bad) lret sti out sbb iret ds jns pop sbb ljmp xchg push cmp stos hlt jbe and add fs mov ljmp outsb shl lahf je mov sbb stc ljmp push (bad) (bad) (bad) incl mov xchg popa ret cmc mov and push clc adc loop adc pop mov dec lret ds in pop and pushf cwtl dec sbb push ja cmp movsl sbb and negl add mov mov stos sbb cmp pop fwait adc out idiv (bad) fistpl mov inc ss loopne dec push add sbb mull nop sub inc sub scas inc xchg cmpsl lock sbb loopne xor (bad) (bad) (bad) decl popf int3 sbb xlat jo push sub stos scas or into das inc push push cld lcall enter fisubrl out cli and jl push add xchg (bad) or xlat aas cmp jnp cmpsl sbb (bad) (bad) (bad) cmp mov fucom leave lcall mov adc cmpsl (bad) (bad) (bad) decl gs in popa and lcall add xor jmp lret fcompl mov dec mov cmp cwtl fnop (bad) lahf (bad) jg add rol ss lods and lcall lcall aad sarl mov adc or or inc pushf mov (bad) (bad) (bad) dec dec sti or fs and and mov or ret (bad) ljmp orl leave mov cli pop add out movsl (bad) xlat pop pop mov (bad) decl mov sub sarb aad dec cmp mov lret sbb mov (bad) mov out add imul arpl ja cmp mov js mov into test shrb pop xchg dec ret jne jle jae das addr16 (bad) (bad) lcall gs lret movsl loope cli and adc stos xor and (bad) scas (bad) (bad) (bad) call dec aaa les mov mov jmp sub sbb mov icebp insb jne dec mov sar xchg mov sub mov mov (bad) (bad) jg or test ss imul or lahf or bound movsb stc or sbb das enter cwtl (bad) fstpt daa nop mov sbb adc mov or arpl mov sub sub loopne mov or xor decb leave dec (bad) (bad) (bad) ljmp inc xor icebp inc sub (bad) add inc int3 push div cmpsl add jg (bad) call test push cmp and xor mov cmpsl fst int pop push (bad) (bad) (bad) inc pop in lcall aaa or xchg stos sub out xchg sub inc lret cs mov icebp incl cld dec aad sbb dec es pusha hlt or inc sbb (bad) ljmp in imul repnz cltd jge in inc (bad) (bad) (bad) call jge xchg sti push push lods push mov and xor add fadd stc adc (bad) push xchg test pop adc iret movsb sub js push stos jbe cld jbe repz (bad) (bad) call inc pop inc pusha push jge add call std sub adc inc cmp (bad) jg add mov xlat lret out jo dec xor xor mov add rclb outsl mov inc xor add in cmpxchg (bad) decl (bad) jecxz xor xchg scas pop mov ret out push pop ss fldl in add in xchg push (bad) call cld cmp dec mov cld loopne mov pop lcall loop add shrb into push cld (bad) test dec sbb xchg (bad) stos mov (bad) ljmp test sub pusha adc inc jns mov insl test aas xor fnstsw mov adcl fadds xor adc push enter push cmp mov in cltd js pop pusha shl test jge pop xchg mov loop xchg clc (bad) (bad) lcall or pop mov sbb fidivl sbb and lds push pop sti movsl sbb xchg xor jge aam mov insl insb or mov (bad) (bad) (bad) pushl pusha lcall jecxz cmp enter sahf test rclb push jns add lock (bad) (bad) ljmp mov std add popf sbb sahf faddl imul out push pusha add jns inc popa cmp cmp jo xor cmp mov subl stc mov dec push popa out dec mov adc ret inc sbb push loop imul inc cmp or jl aad mov inc ret and cmp aaa lods sbb dec jo add lret test iret (bad) cli pop xchg dec jae stos stos (bad) push subl jg xchg loop push insb fcmove sahf fstl int negl mov sub call fucomip pop jo fwait adc test cwtl add cld cmpsl ss cmpl inc (bad) das or (bad) (bad) jmp add mov mov (bad) push mov mov loop fld pop adc (bad) (bad) decl inc mov scas jp push sbb pop les or push sti inc fbld scas testl xchg push sbb test cld add iret flds hlt and push xchg enter push outsb (bad) (bad) (bad) jmp (bad) cmp ss jmp and flds lahf fmul cmp aas cmp pop inc pop xor dec outsl mov cwtl pop mov cltd dec xor add and adc icebp add push leave leave sbb (bad) lcall mov in fcomp ljmp and in xchg das push mov rcll (bad) (bad) mov ret push movsb stos push and xor and sbb sub (bad) (bad) jmp inc incb cmp imul sub dec jecxz dec jp test in out xchg std fcomip (bad) push addr16 cmp add lret out (bad) jne scas lret (bad) dec cmp pop (bad) (bad) (bad) lcall int sub in jmp xchg out or jge,pn daa inc dec push je inc enter (bad) sti lock mov mov out mov pop mov push sbb mov mov (bad) (bad) call cli repnz fdivrs imul rcrl pop mov nop das sti (bad) (bad) decl xchg ss sub and xchg cwtl push or adc (bad) (bad) jg and outsl xor sub hlt les pop push fiadd pop jp flds popf mov jge call dec mov scas jno (bad) ljmp clc fldenv xchg mov sti scas pop ss mov jmp (bad) (bad) call mov jae les or pop fst leave aam test pop rcl xchg sar (bad) ljmp jno mov jp je dec retw clc mov xchg les ljmp test lods push push loope addr16 lds cld iret mov mov pusha push (bad) or sahf (bad) (bad) in pushl inc insb lcall divb dec test jne or mov xor pushl lods bound adc packuswb inc adc jg mov mov mov cmc and pop (bad) (bad) cmp out mov gs or sub (bad) sub sub call fisttpl mov fsubl cld xor jno push fnstcw jl cmp push adc (bad) (bad) lcall inc inc add aaa inc pop pop mov cwtl jnp icebp cli dec incb (bad) call sbb shrl lahf mov cmp push jb fs mov jge (bad) (bad) decl clc xchg rcrl aaa sub cld pop sub cld sbb push stc dec add jg imul mov mov fisttp xchg jnp incb cmp mov insl ss (bad) xor cld (bad) (bad) ljmp jae pushf sbb jns xchg xchg dec mov mov fimul jp (bad) ljmp int3 cmp repnz enter sub rcrb pusha adc movsl clc aaa ljmp stos cmp rcrl (bad) (bad) lcall call call add push jno inc push pop jae leave adc int3 sahf aad cmpsb push pop loopne pushl pop ss xor adc idivb mov insl testb incl ja pop add int3 sub bound loopne cli xchg gs mov lock mov out subb lahf outsb push cmp dec mov repnz (bad) (bad) (bad) cmp inc (bad) in sub in or dec cmpsl mov push add pavgw lock inc inc std (bad) (bad) (bad) jns repz dec mov xchg rcrl imul in sahf push push (bad) (bad) pushl push cld inc (bad) pushf mov mov push in jno inc cmp xor cmpsl cmp cwtl sbb jo pushl dec fmuls scas das add xor (bad) (bad) pushl mov cmp cmc lret icebp aad cmc int cmpsb aas clc jae mov add (bad) (bad) fcomip adc inc add add leave mov (bad) ljmp pusha xchg pop nop jle (bad) imul cmp dec or (bad) (bad) (bad) ljmp pop sarb xchg cmovne push imul rcrl das jecxz (bad) (bad) call into das add les adc or (bad) addr16 sbb jp int insb add dec dec cmp mov mov dec or cwtl cmp adc inc ficompl and loope mov mov js clc dec or scas mov (bad) lock pop xchg test ljmp out sti popa cmp xor cli pop sbb ss fcoml pusha aad mov (bad) (bad) inc inc (bad) pop xchg jno push sub popf int xor lock adc (bad) (bad) (bad) pushl push xchg inc ret test je stos jb push iret (bad) icebp xlat xor repz lcall (bad) mov push cmpsb pop or pop mov mov js out jle mov fdivr aaa cmc mov stc lret inc dec push cmpsb and sub push lret dec (bad) (bad) (bad) (bad) jge std enter add xor sti pop ljmp out repz push cmc fcoml std mov sbb add mov inc cs fs push jp push xchg imul (bad) ss jne divl fisubl mov stos icebp lods cld div and add push mov cmpsl cmpsl jecxz fs mov add lahf lcall sub cld sbb imul (bad) (bad) cmp in (bad) ja push cltd push mov inc sbb movl (bad) (bad) decl mov dec push lock icebp xchg int aad daa mov rep loopne bound loopne ljmp cld adc pop jp push xchg aam mov fucom jmp ret and rcl das es iret gs icebp cwtl add ret das (bad) out xor sti sbb push (bad) dec inc aad gs (bad) (bad) jmp inc inc jecxz sub jl xor pusha pop mov rorb and cmpsb icebp (bad) (bad) inc lret dec int lods cmp loop xor cmp sahf and or ret (bad) lcall (bad) mov pushf add xchg ljmp or aas icebp sub cmpsb lahf push sar mov mov imul add sar (bad) (bad) (bad) jge add sbb xchg cmp add divb pop and cli das loopne inc sbb push enter jg pop cmc cld (bad) push inc mov test dec cwtl les dec cltd inc test (bad) pushl xchg (bad) outsl sarl pop mov sbb sub lds (bad) and outsl adc outsl xchg xor and adc bound test (bad) (bad) call fwait aam negb sub cltd xchg (bad) jne fisttpl and ja (bad) (bad) (bad) pushl push mov mov fistp iret xchg sbb jge inc insl add (bad) call (bad) mov (bad) insl xchg js add sti mov xor push add (bad) (bad) (bad) (bad) js inc loope and rcr (bad) fadds push rcrb ljmp mov (bad) (bad) ljmp mov mov rorl (bad) xor adcl mov testb or sub (bad) (bad) (bad) call cs adc sahf gs sub adc jns mov in jg (bad) jns jg pop xchg inc pop xor fs pop stc int int sbbl (bad) (bad) (bad) dec ljmp stos ss lret punpckhdq hlt in xor fidivl (bad) pushl pushf pusha or add (bad) mov dec daa xlat scas data16 mov (bad) (bad) (bad) (bad) jnp push test in stos mov ret mov (bad) inc mov mov push (bad) (bad) (bad) ljmp loopne xor (bad) sbb clc aam xchg sub call jb (bad) (bad) (bad) dec push loopne stos hlt jmp mov inc lea rolb and adc (bad) (bad) lcall pushf mov scas ds and addr16 adc jne fstl sub scas or mov repz lret lds sub rcll std xchg movsl jne mov mov and std mov jg fistl mov xorl sbb incl lods lret sbb jecxz mov sahf jnp and pop mov pop xchg xchg aaa push add push std lcall repz in insb mov xchg imulb jnp push dec aad (bad) xor pop cld das pop imulb (bad) xchg pop data16 (bad) (bad) fildll pop pusha mov addr16 cwtl adc jns int3 push or lds out js repnz (bad) (bad) (bad) (bad) cmp dec aas cmpsb fist or gs aas jo mov mov pop add (bad) (bad) (bad) (bad) clc adc cmpsl stc push jnp push push mov jl and sarb lret mov xor ja or ljmp rorl fimul fcoml arpl jg (bad) (bad) incl insb imul jg cmc mov nop sub test (bad) (bad) (bad) decl stc jmp add dec cmp int (bad) lods xor mov stos pop push mov cwtl pop aaa cmpsl pushf out cmp inc or inc jnp (bad) jmp mov (bad) xor mov popa das mov shl mov (bad) incl or iret lds pop std or inc push (bad) (bad) (bad) inc (bad) icebp cmp inc aam scas adc mov cmp ret sbb aam (bad) (bad) jmp js jecxz int3 pop mov lret push cwtl cld xchg gs add addr16 (bad) (bad) (bad) (bad) mov (bad) (bad) ja push jge lods cmp inc jmp (bad) arpl jle add subb (bad) jmp insb pop nop adc (bad) enter inc addr16 fild data16 mov (bad) (bad) (bad) jmp bound dec out mov lret pop mov (bad) xor cwtl sarl and fcomip dec sbb adc inc xchg into xchg adc iret bound ja and call shlb jne (bad) cs loop fstps lret aad psubb dec clc mov popa adc popa stos mov stos mov mov sti inc jp pop test push dec push pop cmp cld pushl scas test movsb lods sub lods sub bound xor (bad) (bad) lcall sbb test in mov mov jns pop sub (bad) iret cmp jo arpl jg (bad) (bad) sti inc xchg pop push add in xchg loope mov repnz dec stos icebp (bad) (bad) (bad) (bad) fcoml mulb add mov sbb inc imul inc jecxz gs mov mov pop mov addr16 cwtl cmp cmpsl lcall cmc adc or iret mov (bad) mov popf cld pusha loopne sub (bad) dec fisubrl push stos jl mov add pushl dec aaa ret into or add (bad) (bad) ljmp cmp add adc push or jecxz sub lret xorb insl out fwait xor (bad) (bad) (bad) (bad) jl lea les js dec mov movsb mov cmp inc xchg lods (bad) (bad) (bad) push jle lds pop adc inc mov ss inc (bad) mov and ss sti sahf andl lret je (bad) jmp cs int jbe adc pop push sub (bad) (bad) (bad) pushl sub jmp mov mov push std fbld mov jno mov fidivrl dec push inc addl dec ja xchg xchg cmp (bad) mov rcl cmp pop add adc test xchg inc xlat pop add gs les shrl (bad) inc inc in xor in xor push lret push std dec shrl xchg cli cmp pop (bad) (bad) (bad) mov jns sub mov jle movsb in pop loop testl cwtl pusha (bad) (bad) (bad) dec loop dec jbe add insl add ficompl aas pop mov fimull jg pop (bad) (bad) (bad) lcall pop jge loop pop mov mov xor or icebp int3 or or push pushf nop std leave pop (bad) (bad) (bad) jmp add cmp dec imul mov in and sbb mov xor jo mov (bad) (bad) (bad) out add fisub aas xchg sbb jge into repz dec jae movsl xor pop inc pcmpeqb (bad) decl mov arpl push pop sub mov loop dec (bad) (bad) (bad) (bad) jge xchg mov in push leave mov fmull movsb lret push lods cli jl push (bad) and push (bad) (bad) (bad) push push push leave (bad) push movsb pop pop dec cmp sahf push nop imul mov shll sar push mov js mov jmp mov xchg stc mov fdivr (bad) (bad) inc aas fucom push xlat xor popf mov es mov add fstl stos pop jecxz (bad) cmp (bad) fsubrp adc in aam out dec dec mov mov xchg (bad) (bad) (bad) (bad) fisttpll imul loopne inc xor cs jo mov dec add scas andl in mov ret imul fs or adc data16 (bad) (bad) lcall loop pushf int3 jo mov insb pop shrb lcall cld mov (bad) (bad) push cltd fisttpll xchg stc and (bad) aaa or (bad) push hlt in xchg push fwait sbb std xlat sbb pop mov push rep div fcoms popa jnp lock movsb test and jns ret mov aas arpl push adc les (bad) incl add and out ljmp popa insb and mov mov int3 das mov jns xor jp (bad) fs mov adc (bad) (bad) jmp jns popa in nop push repz stos lahf mov sbb and jne cmpsl inc cltd xchg (bad) (bad) (bad) incl jp stc rcl fwait jnp dec mov fdivs fcomp lret data16 inc sub decl sbb mov cmpsb in add jg ljmp jp xor mov and mov mov cmp jb loopne data16 (bad) daa dec (bad) (bad) mov xchg fnop lahf push imul (bad) inc xlat lea sub pop cld lcall fs syscall bound cmp or incl dec mov push subl (bad) dec js pop mov jmp out inc cmp lods lret mov dec add xchg adc dec loop cmp xor les (bad) (bad) (bad) (bad) stc leave jge cmp test inc or jl and pop cs (bad) sarb movsb bound or ljmp (bad) sbb mov mov roll outsl push lcall lock dec xor pop (bad) movsl and pop xor sbb (bad) (bad) (bad) ljmp add and pop data16 jnp sbb repnz fcompl in inc jne push imul sar cmc into (bad) (bad) (bad) push sbb (bad) or cmp adc rep mov xchg leave mov shlb (bad) (bad) decl test or ret inc xchg add or movsl data16 jecxz cmp movsb (bad) (bad) lcall jle fmulp adc ljmp xchg loop out push gs xor jno inc add or mov test (bad) decl rclb les test pop in addr16 clc imul (bad) (bad) pushl pop jns or mov out dec adc push pop fisttp lret jp (bad) iret mov pop movsl jmp push rcrb dec cli int3 scas (bad) (bad) pushl xor ffreep mov bound int sub (bad) pushl mov js fbstp mov mov sub sub jecxz xor (bad) (bad) out cli push cmpb outsb ss ja lret lods in lret repnz nop clc xchg stos dec mov scas (bad) (bad) (bad) orl sahf std int3 iret in mov add cli icebp (bad) mov pop stos ret add rcl pop int3 mov imul pop lock (bad) (bad) (bad) (bad) out das mov and repz out clc pop loopne lock push mov sbb enter xchg lock std (bad) (bad) decl or push inc and addr16 push scas sub inc call lods xlat movsb mov mov les pop fnstcw inc xchg xchg add adc repz test or mov pushf cmpsl cld dec push aaa notl (bad) xchg jg push xor push push push or addr16 ss (bad) (bad) in pop jecxz cli mov inc sub inc stc lds (bad) (bad) mov shrb mov dec or mov mov (bad) (bad) (bad) jmp pushf adc xor repnz push mov xor jo dec aam sarb (bad) (bad) (bad) cmp ja lret push mov js jmp fcmovu fs mov outsl (bad) (bad) dec mov lods inc xchg into inc arpl pop adc dec mov add mov call dec gs pcmpeqd repz cld repnz in mov push ljmp jno xor ljmp or popf push daa mov loopne mov outsb pop in faddl iret (bad) mov jno mov add sbb movsb repnz ret fdivl (bad) (bad) lcall ljmp pushf (bad) insl jmp sub and cmp and (bad) (bad) (bad) clc dec cmp movsb std out xor shl dec sahf movsb mov gs fsubs push jb testb imul push rcll mov push add ss (bad) mov adc cltd xor cld push in jge and xchg js sbb xor call or cmp adc dec (bad) jmp xchg push (bad) inc cld jbe leave and pusha ret mov mov mov sbb push dec (bad) mov imul or push jp andb xchg (bad) lcall hlt sti aas (bad) lds jno popa hlt fildll pop sub in inc xchg sub addr16 (bad) (bad) (bad) fbstp rcrl cwtl mov and jg lock adc jb hlt xchg xor ljmp rcrb int sbbl and xchg push sahf lahf jp adc mov (bad) ljmp cli pushf and and aaa out or jecxz fs jp (bad) fcomip jmp addl xor std mov fiadd mov mov pop test sbb pop out ja jno dec dec adc mov jle lcall cld lcall lea sahf (bad) icebp sub jb test (bad) ljmp pop sbb adc (bad) (bad) sbbl add (bad) mov sub push sub ljmp xchg adc or (bad) call loopne xor mov or repnz insb xor (bad) cmp jo xchg and push jle xchg outsl cmp sbbl in daa inc (bad) (bad) (bad) ljmp mov sub dec mov push int3 cmp pushl xor and mov cmpsl push jo (bad) pop ficomp jg gs (bad) call in mov jp cli nop int3 mov lods dec sbb xchg inc add cmp (bad) (bad) incl scas adc mov push push jp daa jbe lahf fnstenv paddq inc (bad) (bad) (bad) pushl or popf pop stos push enter inc fsubl pop fsubs shlb (bad) ljmp shlb mov fdivrl xor lcall sbb push cwtl das xchg mov pop sbb cld sti cmpsl push and (bad) (bad) lcall jne xchg jns sub jnp lods fdivp xor das inc xchg jle fistl sub mull adc (bad) (bad) call xchg jnp inc into mov divl insl test fidiv out mov (bad) ljmp cli dec inc pop pop adc mov add pop push sub iret adc (bad) lcall sub dec and mov mov mov ds mov (bad) (bad) mov int3 loope cmc ds pushf dec xor aam mov mov (bad) (bad) inc or mov mov xchg add lahf ja repnz mov (bad) (bad) call into jmp out and (bad) imulb scas std fistpll mov scas mov (bad) (bad) imul mov mov jbe shll mov outsl cli popa pop cmpsb int3 daa mov or mov (bad) incl test subl sti mov inc jge cmpb dec decl lock nop or sbb cltd fbstp sti mov (bad) (bad) (bad) cli inc lahf push xchg shlb ret mov mov jl ja cmpsl adc (bad) (bad) jmp addr16 push aas cmp sub push cmp (bad) mov das add mov addr16 (bad) (bad) (bad) call clc pop fimul cmp dec xor fcmove mov and sarl (bad) (bad) ljmp cmp in and sub xor mov iret les lea mov mov jo out dec ret pop xorb add loopne (bad) jl cmc fs popf repnz sub out (bad) ljmp pop sbb fldl lods xor popa scas fsin decl ja je add push repz adc into sub mov (bad) (bad) (bad) ffreep scas fdivrs je xchg mov dec mov aaa in mov add add lcall (bad) call arpl push mov repnz or mov cs stos jp out (bad) (bad) decl sub stos cmp cmpsl or dec push frstor or dec mov stc lds (bad) fsts push jl ret fwait test test and push sub (bad) fdivrs stos (bad) (bad) jmp xchg jae mov xchg andl in dec lea add scas popf fcomip (bad) incl sub (bad) or lods and insl xchg (bad) in pop mov int3 mov (bad) push arpl mov out push sahf jb pop dec outsl add sbb pop lock sub subb pop cld cmpl push mov inc inc repnz or decb mov push push inc xor mov inc xchg ret mov jmp repnz dec fsubrl inc loop in (bad) (bad) lcall mov and divb or adc fimul insl js adc xchg (bad) (bad) (bad) dec mov cmpsb mov mov imul repz aas pop notb jle pop call jmp adc aam enter push cmpsl negl mov pop (bad) (bad) (bad) dec sbb roll test pop mov jg inc lods pop add (bad) (bad) pushl in icebp out xor sti inc rolb ljmp mov lret jle (bad) (bad) (bad) pushl enter adc or push sti mov dec push pusha mov movsl pop aad sub incl or add mov (bad) (bad) (bad) (bad) mov adc or cwtl mov imul je cmp cmp sbbb (bad) (bad) decl in adc dec mov jnp sahf ret lret clc xchg xchg xchg xor push mov ret pushl jp cltd pop arpl (bad) inc lcall mov imul in add xor fcomip mov xchg lock mov xlat shlb fdivr sbb stos inc rcr lcall mov cmp std std inc xchg jbe mov cmp lret cwtl add std jo dec lcall mul sarb dec jle arpl (bad) jne (bad) (bad) (bad) in fnsave dec or dec fnstsw sbb outsl repnz and stos (bad) (bad) (bad) ljmp cltd repnz lea jp dec mov push in fptan pop movl les dec sbbl subps sub aaa cld (bad) call xchg push fsts and mov movsb clc in jnp mov (bad) (bad) js xchg sbb out xchg mov or sahf sahf and fdivrl daa jno movsb jge imul cli xlat xor and push xchg mov and mov hlt dec sbb or or add popf sti (bad) (bad) (bad) incl call cmp cmpb in aam cmpsb ss cmp fwait (bad) xor (bad) (bad) ljmp popf clc shrl adc adc inc pop pop jno or nop sbb mov scas cli (bad) (bad) call jmp daa inc fidivrl out push aas mov sub jl xchg nop add (bad) ljmp (bad) mov ja xchg lret add sub sub mov (bad) (bad) (bad) (bad) aas in xchg cld fistpl dec into cld in fwait inc stos add mov pusha lea push (bad) (bad) ljmp and inc ret mov cld lahf rcrl hlt pop xlat inc cmpsl clc sub clc rcr pop andb and repz jne xlat push xlat adc lret (bad) lcall push and inc (bad) fwait rorl movsl pop rorl (bad) (bad) jg sbb mov (bad) hlt mov test stc (bad) idivb mov xor fs (bad) (bad) call cwtl jno and jae clc sbb dec pop mov lahf sbb cmp and (bad) (bad) jmp mov cmp adc in pop dec xchg sub add lods dec decl xchg pop imul test aad fs popf aam aad (bad) out adc out sbb pop sub dec jle fwait add (bad) (bad) (bad) jmp cld mov xchg inc dec adc (bad) mov push push stc add or and (bad) (bad) ljmp and xchg cmpsl (bad) shrl pop pushf push cmp aaa (bad) (bad) (bad) dec mov arpl (bad) fisttp push xor xchg pop mov cmp (bad) decl fdivp mov jns leave or mov inc les mov (bad) pushl int3 and insb sbb and xor ret jbe mov jb int xor dec (bad) (bad) ficoml daa sub roll aaa cmp cmp jae fbstp mov clc push in xor push ds inc xchg push (bad) (bad) jp fwait daa mov lcall inc (bad) fdivrl stos jp xor (bad) (bad) (bad) ljmp lret mov fs (bad) mov pop (bad) xchg sub or push or pushf dec loop jmp push scas dec lock xchg lods push jbe or in lock pop mov xchg popf mov test push (bad) (bad) (bad) out cld dec int3 mov or push sbb jne mov sbbl pop add (bad) dec insb pop ja call js push movsb (bad) shr bound fcoms (bad) (bad) (bad) decl rol enter fsubrs add loop shll hlt in stos stos fs in (bad) mov jle (bad) pushl jmp sub bnd out push sub push (bad) (bad) decl int3 cmpl mov fcompl int pop mov xchg (bad) ret ja (bad) (bad) jg sbb test and aaa add inc std je hlt dec stos inc test (bad) fcomip push (bad) push lcall fisubl xor orl xor movsb fistl xchg cmpsb (bad) jnp jle rorl out sbb sar decl lahf adc mov idiv xor lods lds pop rclb ss or out bound sbb (bad) xor (bad) (bad) call aad lahf std pop cmpl dec pop cmp loope stc test and daa xor mov cmp sbb push push cwtl dec cld sub lods pop add (bad) sar outsb add pop aad or xor addr16 inc xchg jecxz pop jmp pop mov cmpsb (bad) (bad) (bad) aas jne roll movsb mov mov xchg mov mov (bad) (bad) (bad) jmp xchg pop push xor dec mov jne fsubrl addr16 mov pop jae jb (bad) (bad) decl fldl fldcw scas (bad) or mov insl sbb sti inc inc or (bad) incl and push sub je or popf incl fldt in cmp adc pop in push lret aas sti insl pop cmp (bad) (bad) (bad) (bad) jns adc cmp in jbe mov notl (bad) or push cld (bad) fsubr loopne adc stos sahf xor push test push xor fidivl mov adc in inc or out ds xor imul cld (bad) (bad) pushl push sahf fildl xchg xor sbb and call pushl adc int3 pop (bad) (bad) push int3 inc pop aam icebp ds pop pop pop mov (bad) jmp adcl jle inc push and mov adc dec fdivrp (bad) (bad) jmp adc dec adc cmc xchg mov sbb cmp stc shrl lret and (bad) (bad) (bad) jmp jle icebp adc sub mov enter adc jae (bad) nop (bad) lret inc (bad) (bad) ljmp ficoml or mov ds aas jmp inc and (bad) (bad) jmp inc je out stc or sub insb mov sbb (bad) mov cltd stos xchg stc arpl dec loope lods jmp jbe movsb mov incl popf pop push mov mov push ficomp mov fsubs (bad) lcall cmp or sbb ja movsl xor sbb popf loopne jl,pn cmpsb (bad) call dec xor aad add mov (bad) es add imul ljmp (bad) repz xlat inc ret push jge fnstcw lcall inc mov and mov scas mov or sbb sbb (bad) push mov dec clc repnz mov cld sub in addr16 (bad) inc inc adc into test inc mov mov daa sub cli cmp (bad) lcall jnp fisubr add mov lahf jecxz dec loope inc cmpsl imull push shrb test sbb lret (bad) (bad) (bad) call push xchg lret inc and dec push dec pop test inc dec jg lret sbb push (bad) (bad) (bad) (bad) pushl imul ss in loopne lods dec add stos stos sub xor mov inc aam sarb sahf (bad) (bad) mov int3 mov cmc jge inc cltd pusha inc mov (bad) xor sub stos (bad) cmp and cmpsb xor jmp cmpsl int adc stc arpl xchg jmp (bad) (bad) jmp out xor xchg jl add xlat xor or mov adc (bad) dec push (bad) (bad) jmp jge inc cmp jmp mov (bad) addr16 lret inc clc (bad) mov scas call movsb lret or jo lcall inc movsl and outsb (bad) (bad) jbe cmp push mov add nop lcall rcrb es (bad) jg mov rorb movsb test stos xchg mov lret fs (bad) sbb lret sahf cmpsl jne subl lcall (bad) movsb and mov mov jo cmpsb addr16 daa lcall mov (bad) decl sbb aam ret aam lcall fist dec (bad) (bad) (bad) (bad) ds lods sub or inc test not adc iret push (bad) dec dec ficoml (bad) stc dec adc inc repnz push lock pop ja xchg movsl rol dec mov sbb (bad) clc les mov adc sub push xchg jecxz cmp cwtl test push xor (bad) (bad) inc pusha bound jns mov shlb jno jmp xchg adc mov (bad) (bad) (bad) jmp popf xlat sub fnstsw (bad) xor jge cld mov cwtl out dec xchg inc arpl (bad) (bad) (bad) jmp test pop inc gs (bad) mov mov add test idiv int dec (bad) (bad) (bad) incl inc mov xchg in (bad) or sub rcrl xor insb xchg (bad) (bad) (bad) decl jmp xor push daa xchg dec faddl sub scas pop je not (bad) fcomip decl out addr16 adc mov sub xor and push fdivr xor test push (bad) (bad) (bad) lcall (bad) lea or cld pop xchg xor ja fstpl test int (bad) (bad) lcall mov dec adc insl xchg daa xor iret popf hlt pop mov xchg dec adc fisubr mov mov and xor (bad) (bad) ljmp test movsb push sbb xor out lret (bad) pushf pop lea push jne jg repz (bad) mov push push int xor and loope hlt sbb stos xlat add das cli mov pop adc push mov add jp cmp (bad) aam (bad) (bad) mov loope push sub test js xor mov pop es push popl sti inc xor cli mov mov jmp (bad) lcall jle jge gs dec cmp jnp ljmp rcr (bad) rolb je (bad) (bad) inc in in subl out sar and mov cmpl lret mov (bad) (bad) (bad) lcall mov in inc lret push inc add xchg (bad) rclb cltd inc cmp sub (bad) (bad) out ja xchg lock inc clc xchg pop and cmp outsb hlt andl add (bad) (bad) (bad) (bad) fsubs adc dec mov dec and mulb ret loope or cs (bad) (bad) incl or fidivrl notl cwtl mov cwtl dec movsb jb pop push sub mov lret (bad) (bad) lcall mov push out outsl push outsb jbe lds adc aaa pop sbb loopne (bad) dec or mov push lock jo das mov fmull adc (bad) (bad) call (bad) cld jno xor jae or in ds fldenv inc test popa out daa mov or (bad) (bad) (bad) cmp and lods sti (bad) mov repz xchg cmp cmpl inc (bad) (bad) call jne lahf mov (bad) (bad) jo cmp sbb outsb inc cmp sub (bad) (bad) (bad) cmp xchg rcrb lock aaa push mov jo add xor (bad) dec pop (bad) (bad) jg cmp xor cmp les mov loopne mov out sub (bad) (bad) (bad) mov and aam sbb push fdivp and inc sub in cld jns (bad) (bad) jmp lahf push xchg shrb inc xor (bad) cmc icebp aas mov fcom (bad) lret (bad) (bad) decl adcl mov cli loop out (bad) or imul push jno (bad) (bad) dec loop push repz lea add and jne loopne push dec ss mov ljmp das jecxz jo push mov dec out sti imul jne imul sub adc mov ds pop add add mov pusha xor mov ljmp sub mov sbb orl shlb leave (bad) (bad) (bad) incl test repz adc out xchg cltd sbb add sarl lahf sar jmp sub ljmp loop hlt mov imul (bad) (bad) mov leave jg aas sub adc lret lods (bad) mov call (bad) or cltd jbe fisub dec mov and push loop das pop mov (bad) xor push std (bad) lcall (bad) ljmp pop cmp and fsubs lret mov call mov xor cmp mov and arpl nop jge xor nop movsl jge (bad) (bad) (bad) lcall lods daa jp pop insb xlat push dec add or xchg mov pop mov add jp (bad) (bad) (bad) (bad) mov (bad) call sub mov mov mov fnstenv dec jo (bad) push (bad) (bad) (bad) decl je repnz dec cwtl inc nop in xchg sbb in sub repnz jbe jns bound xchg js leave inc std call cli add loopne fisttp aam (bad) (bad) (bad) mov (bad) lret xchg push outsl sub inc imull (bad) fild imul xchg bound mov jo out mov pop pop insl std xor imul call mov popf int jne push pop mov fcompl (bad) (bad) (bad) jmp daa cmp enter push cld xchg in je pusha outsl psubq incb ljmp xchg out pop fs jmp mov fs push lret aaa cli dec insb cmc and mov (bad) (bad) (bad) jmp out imul lret sub cmp repz sbb lret cmc xor pushl sub (bad) cld (bad) jae shrl and insl test pop dec sub ja testb inc push adc lcall loop popa mov movsl (bad) (bad) mov dec call dec ds repz nop repz xchg and dec sar (bad) movsl lret lret inc jmp hlt dec adc xorl or (bad) (bad) (bad) (bad) jge incb dec out jne lods loope mov aad jmpw cltd pop (bad) push mov mov decl mov pop add sbb mov (bad) mov insl add mov lea bound fist sub fildl fstpl jne pop lea inc mov (bad) or (bad) (bad) (bad) lcall jl ja in or scas imul inc push rcrb mov dec pop mov lea (bad) (bad) (bad) incl mov daa push scas sbb adc in cltd jmp insl out mov xlat fcompl cs incl xchg aam dec int xor dec ret pop into insb lcall (bad) ljmp push inc test call ret jbe dec test mov (bad) push mov ss mov jle push ljmp stos shlb std xlat pop iret (bad) lcall ljmp dec mov stos outsb mov (bad) xor into es test (bad) (bad) incl cmp (bad) repz inc cmpsl mov adc adc es sbb (bad) (bad) incl push movsl dec push les stos push insb lret sub mov repnz jge (bad) (bad) (bad) mov incl push sbb cltd test sub push (bad) mov daa (bad) (bad) (bad) dec test cmp (bad) mov cmpsl push movsl mov xchg outsl add jg (bad) push std fs roll push addr16 sti aaa sbb fdiv aam xchg std sub cmp loop popf xor in sbb mov lcall add (bad) (bad) aad enter mov das cli (bad) decl cmp fwait (bad) mov jle mov jmp sbb (bad) (bad) (bad) pushl ja jp loope mov add cmp adc in mov cmpsb cli mov (bad) mov inc fldenv adc adc ljmp push pop and jg decl inc adc loop xor rclb mov jne outsb add pushl jo hlt cwtl repnz and ja (bad) (bad) mov pop call inc jle test stos rorb jecxz mov lock mov incl (bad) mov xchg bound nop pop mov ror push sbb (bad) decl arpl mov call lret arpl or negl mov (bad) jmp sub sub cmp fstpl fbstp jbe ret mov pop cld add mov scas adc or sbb ficom (bad) call fnstsw ret int3 leave dec adc xor (bad) (bad) ljmp xor shll pusha mov xchg outsl (bad) (bad) push leave (bad) fldl ljmp (bad) (bad) call xor xchg (bad) jmp cmpsb ja dec sub fldenv int (bad) lar cmp and inc lcall push inc mul inc and aad push popa jge repnz sar (bad) decl mov and aas adc ja mov (bad) and sbb mov mov cmp loopne (bad) (bad) jmp add adc nop outsb imul popf dec orl fs sub jg mov ds ret adc sbb cld (bad) pushl sbbl mov inc xor pop sbb (bad) ljmp xchg in pop add cmpsb fisubrl mov js (bad) (bad) (bad) ljmp pop fild test dec hlt mov fsts mov int3 add mov jne mov (bad) mov sbb insl jnp cltd jg push mov lret ds add adc jmp call add lahf dec lcall lods mov push imul enter shl cmpsl in cs inc les mov inc add xchg rclb mov ds scas outsb pop push in mov fimull jp (bad) mov dec and lds pop popa sbb icebp mov mov pmullw repz (bad) (bad) incl adc loope or sbb cs fs inc mul (bad) (bad) cmp sbb inc or gs xorl jmp lcall add mov sbb ljmp (bad) (bad) pushl out push out ficoml lods insb into js cmp fwait xor cs cli pop loopne call or adc inc mov sbb out sbb test lock (bad) imulb dec cmpsl mov mov call out (bad) (bad) (bad) push sbb pop popf inc lret cmpsb jl xchg mov outsb mov push js inc (bad) or das (bad) fsts pop movsb and aas (bad) mov and push (bad) (bad) ljmp adc ficoml pop xor ja,pt dec push xor cmp nop mov (bad) mov xchg xor lods stos mov repz inc push test add in push bound or mov dec lret in push and clc sbb pop aad pop fiaddl sub sbb adc jo mov inc xchg out and scas cmp jl clc (bad) (bad) (bad) cmp add sub mov fdivrs fcomi mov push sub decl lock cmp test xchg and negb jbe ret (bad) lcall jns sbb (bad) dec jg fwait jle scas adc cmc fdecstp insb xchg push mov loope call jb mov aad (bad) inc adc jbe in pop sub push jo cld cld pop push adc (bad) icebp dec ja or clc xor psubb dec mov aas xchg or pop (bad) cmp mov xchg enter sbb jb push xor inc pushl (bad) jle sub rol push push mov jecxz jo or cmp mov call loop cmp (bad) pop test icebp dec aas inc clc adc mov das mov daa jo and pushf lret lea inc ds daa les dec lock ss mov rcr stos (bad) (bad) jb cmp push lcall fnstsw mov push jnp sub addr16 ja (bad) (bad) fldl xor fsubrl jecxz imul and push (bad) cmc mov lahf xorb or psubw cs push pushf je das sbb push ljmp xor jne mov or sbb push fimul pop or out nop cmpl idivl lcall add cli push div test inc adc cmp bound cmp fcomip dec les sbb jnp dec lock mov cmp (bad) pushl mov lahf jo (bad) inc xchg push ret shlb addl dec aam xor pop cltd (bad) (bad) (bad) push mov and mov enter fistpl bound ret (bad) mov inc repz incl mov inc xor lret insb sahf pop cld (bad) call xchg and mov stc xor jno sahf (bad) (bad) arpl mov (bad) (bad) (bad) ljmp es mov jl popa (bad) push xor stc jl lock pushf cli outsl clc decl xchg xor dec lret mov mov shrl outsl dec out jo arpl inc push iret fldl xor fnstenv fadd pop push sti fildl movsl add (bad) jmp fs imul test repz cmp mov (bad) (bad) out cli jmp pusha gs sbb jp in aam push rcl call leave (bad) push (bad) (bad) (bad) call pop gs pushf fdivrs or aam and add fldenv (bad) (bad) mov lods push xchg fidivrl xor cli shll xlat in cmp mov notl jp (bad) fdivr (bad) call cmp add sahf or push mov mov lods push gs mov (bad) jg push mov dec jg imulb push icebp popa jnp aad cli or sbb mov popf pop stc inc out das pop push in popf (bad) cmp mov xor jmp cmpsb shr cmp outsl test (bad) (bad) (bad) jmp jbe mov dec xchg test xor mov mov cmp out or aaa (bad) (bad) (bad) call mov xchg fsubs cmp add pop outsl push dec int jp pop adc xor (bad) dec or mov jb pop subl and (bad) ss imul or call incl loop test aad sub ret dec test mov or inc scas incl (bad) (bad) (bad) decl lock add xchg mov inc std sti dec jno push dec fs push jg dec jmp cmp (bad) jne insl mov xor rolb (bad) in lods cmc jno mov (bad) (bad) (bad) decl push mov mov fldcw cmp xchg push xchg ret mov (bad) pushl cmp movsl (bad) divl aam xchg jl inc incl xor lds ret addr16 or fs (bad) (bad) ljmp not jle or lods adc sub fildl jg sbb cmp sbb sbb (bad) (bad) (bad) lcall movl push nop mov sub xchg sub enter lds arpl mov shll ljmp (bad) (bad) call aam (bad) pusha push lods xor cmp push inc stc andl enter xchg dec out pushf (bad) (bad) (bad) lcall (bad) sti and and mov (bad) negl clc inc stos enter and stos (bad) (bad) (bad) pushl sbb mov sub sbb adc movaps (bad) jnp mov dec mov and mov jb fldl2e gs and (bad) mov pushl xor clc pop out sub or push cmp mov push repz sub mov inc call (bad) mov adc sub push mov dec stos mov rorl inc pop pop sub pop stos xchg in sbb movsl sbb lock (bad) (bad) lcall dec add jno gs and (bad) mov xchg lea lock pop mov push cli xor push icebp addr16 mov xchg (bad) (bad) (bad) pushl lods (bad) cmpsl jge cli xchg add push pop mov repnz adc (bad) mov (bad) pushl jnp adc jo loope inc cld sti test leave dec call and pop fxam jp dec dec xchg mov or ss rolb push sub (bad) (bad) (bad) ljmp cmc shl gs loope aas fdivrs aas pop xchg jne jbe cmp cmp mov jno mov or mov pop (bad) cltd mov cmp pop int3 icebp hlt (bad) (bad) (bad) inc inc test imul lahf and arpl (bad) lock cmp adc movb sbb inc sbb das xchg clc bound xor ljmp out (bad) incl inc in sub hlt cmp mov jb mov jo js (bad) bound sarb mov push dec and mov (bad) jmp mov and jae lods cmp in and pop xor add imul mov ljmp xchg pop mov push test test mov dec (bad) (bad) (bad) jmp nop out ja adc pusha imul mov add adc insb outsl mov (bad) (bad) (bad) pushl sti iret adc popa pop nop out mov lock push rcr lahf js je fwait dec cld (bad) (bad) call (bad) jmp pop mov jecxz push jle leave mov leave fs (bad) incl bound lock mov mov and jo,pn int3 (bad) mov add (bad) (bad) dec dec (bad) dec xchg outsl pop imull stc (bad) xchg adc mov push fcompl xchg jmp and fwait jmp js or decl popf imul xchg pop imul imul mov (bad) fildll mov loopne add and cwtl loopew (bad) jmp fbstp dec ljmp push out lods ljmp sub cmp jmp andl sub (bad) (bad) (bad) incl mov ucomiss xchg ja sbb adc (bad) in xchg pusha and cmp nop sar jo xchg mov lods add jge adc sar decl jno push test in (bad) inc cmpsl sub pop lcall mov pop pop push loope xchg mov fwait xchg mov jbe jp (bad) (bad) ljmp data16 pop cli pop pop je dec fs sbb mov mov mov idivl fdivrs add (bad) imul hlt pop adc pop dec cld ss (bad) (bad) jg (bad) lahf fidivr (bad) fldlg2 cmp jae mov in sub movsb test (bad) (bad) call dec or movb mov pop mov (bad) sub xlat cmpb call imul xor sub push mov or loopne pop clc (bad) call (bad) xor sbbb pop cmp add add push decl jb mov xor jae das movsl mov dec (bad) (bad) mov pop jno xchg mov outsl pop cmp pop mov repnz xor and xor (bad) (bad) call inc imul mov hlt jmp ljmp (bad) (bad) ljmp inc cmp repz push rorb addr16 xor movsb in xchg (bad) (bad) (bad) lcall popa sbb cmp into or pushf or xor push loopne ljmp ljmp xchg test daa pop incb jp shl pop push sub std (bad) lcall jnp xor jle (bad) shr push scas scas mov push std ljmp into sbb data16 xor (bad) (bad) call sbb xchg stos and add test (bad) decl js scas mov sbb push inc insb movsb jecxz jp lret mov jb push xlat sar (bad) lcall ja lret (bad) push xor adc inc or push dec aas cwtl xor (bad) (bad) mov jl aas cs mov cmp sub dec (bad) out loope adc hlt (bad) pushl push mov (bad) shrl les pop fcmovnu fisttpl cmp les mov arpl (bad) idiv add dec (bad) (bad) (bad) (bad) fildl pop movb inc cmc xchg mov imul adc scas inc lods fs push pusha int inc (bad) (bad) (bad) jmp lea stc stc pop lods mov jno mov ret outsl jno pop push (bad) fld mov es (bad) out sub mov neg jp xor insl mov (bad) (bad) (bad) (bad) ficomp jl cli test subl add jmp jns xor mov cmp (bad) call (bad) lcall add sarb or lds mov mov xchg rcl (bad) (bad) fbld int3 pop aaa stos push int fmuls jecxz (bad) (bad) (bad) mov mov push and repnz out mov or sti dec xor (bad) stos and call sbb sub daa aaa pop lock decl jae scas int out into ss insl dec sub sbb mulb xlat hlt xchg (bad) sub push fnsave cmpsb ljmp xchg mov dec jge mov push mov cmp les (bad) xchg cmp pop std das lea movsl push inc shl sub adc sti pop rcr in int jle push popa das push imulb inc push and cmp (bad) aad decl and aad fucomip pop cmpsb inc push adc jnp (bad) jmp sbb fs arpl stos dec inc inc sbb test loop (bad) (bad) incl pushf (bad) pushf fs push push mov popl test std fwait push arpl jg repnz cmpsb sbb movsb and (bad) int3 or add inc or ds adc mov jo popl jo test add jne (bad) mov (bad) (bad) (bad) jmp subb (bad) xlat mov ljmp popa scas lods mov xchg sub incl jg xchg scas test les movsb mov xor das mov or sbb daa incl xlat mov fldcw push in jnp jg leave push dec (bad) (bad) (bad) ljmp (bad) pop aas add insl fldl inc and jge lcall fwait mov cld mov call loopne mov js jbe setl aad lods xchg pushf pop push jp (bad) (bad) pushl jl fimul sbb imul jg (bad) xlat rcrb pop dec jo jmp sarl icebp aad les aam bswap test sbb mov jne mov add push cli pop cwtl cmp ljmp nop push insb gs outsb dec cwtl jnp,pn mov sbb (bad) aaa std decl adc xchg mov insl and push mov je (bad) (bad) (bad) jns and loopne stos cs and je pop cmp dec jl pop push pop stos add (bad) mov repnz in and in mov sbb dec js adc push int3 lahf das push lahf add pushl insl mov in xchg sub mov sbb dec sbb outsb (bad) (bad) (bad) mov loope bound pusha pop out enter ret outsb scas adc jbe adc inc add (bad) dec (bad) (bad) xchg xchg jl ret pop inc mov fisubrl or push int3 jecxz cld cld xchg mov fsubrs jo and mov lcall xchg (bad) (bad) incl jns cmp sub adc add out mov or cld jge sub movsb pop xchg and push (bad) (bad) (bad) (bad) ds vandnps cmp inc jge mov ljmp xchg or (bad) (bad) cmp and fidivl rcrl mov (bad) dec mov imul mov dec das aaa sbb and cwtl outsl and cmpsl decl jmp mov loope push int sahf xor lock mov test and clc (bad) (bad) mov scas xchg fnstsw jp rcll lods loope int scas loopne mov (bad) jp (bad) lods pop cmp movsl lds inc xchg push mov hlt lods insb stos loop add sbb mov hlt (bad) sbbb in mov (bad) (bad) decl ljmp xchg dec dec or xchg lods mov cmp psadbw stc or push sbbl jp int3 fwait cltd xchg lods insl test cwtl jno mov icebp test mov jae mov int sar (bad) (bad) decl xor sti adc mov mov pop push dec dec dec out loope sahf fcmovne (bad) (bad) incl inc inc and lret push sbb cs adc (bad) (bad) (bad) (bad) jp clc repz sbbl mov pop js push mov stc xor aam pop add (bad) out cli jmp push lahf xchg inc ret mov ss scas mov aam jle mov push mov ja sub add mov push push scas add stc rolb or (bad) jg cmpsl sub sbb roll add lds mov popa mov (bad) (bad) ds mov sub movsl cli push push sarb test cmp in mov (bad) lcall xchg lahf mov mov pop jg imul inc sti cmpsb or shll (bad) (bad) (bad) decl ja ds roll lds mov mov pop and (bad) (bad) mov cmpsl and xor jg ret mov sahf pop add addr16 out (bad) ljmp jle push cmp inc mov adc jg jb aad es or decl ss xlat fcomps in adc sub aad outsl pop mov mov (bad) decl mov jns arpl rclb call add or adc adc fdivs inc lea (bad) call cld mov hlt jp fwait clc adc aaa mov adc orl (bad) (bad) inc add imul loopne inc mov sbb xchg (bad) out jl sahf or (bad) lcall and pop imul dec dec jge enter iret jns sub (bad) (bad) (bad) ljmp dec (bad) out adc xchg stos push add int and push cmp incl or faddl pop pop je enter xchg lods sub xorb ljmp xor push movsb inc je inc test mov std dec stc mov push dec (bad) jbe (bad) pop (bad) (bad) (bad) incl inc aad add pop lods aam xchg insb arpl sbb js lret dec sbb jae cli (bad) (bad) decl clc rcll lret outsb adc fwait stos fstl pop push mov jecxz inc mov xor jmp jl scas cmp jg in adc dec (bad) (bad) (bad) jg movsb loope cltd ss and add fsubrp pushl push dec das lds cwtl cli enter (bad) (bad) js repz or sti rolb jno pop les aad call (bad) (bad) (bad) call stos in daa and movsb and jo sub xchg arpl add mov xor (bad) pushl outsl jle aam adc insb jle int push cmpsb insl out data16 cmp dec rcrb (bad) (bad) (bad) incl xor fistpl push jl mov xchg mov push scas mov mov pop (bad) (bad) (bad) ljmp stos cmp jne xor xor stos mov and (bad) (bad) lcall and or (bad) xor mov cmp inc mov leave int3 mov (bad) (bad) pushl ficom add jns mov je jmp into xlat xchg leave adc call push scas (bad) into add jle push aad negb pop sub or in xor (bad) (bad) (bad) push xor dec inc mov pop cmp pop push out push mov (bad) icebp dec jge aas (bad) (bad) (bad) push or test into inc pop dec pushf mov rorb dec push jp pop inc mov (bad) (bad) (bad) mov sub add cmp cmp mov push (bad) mov fnstenv (bad) jg (bad) mov jnp dec fisubr fadd loop sbb out (bad) mov add incl mov add jmp fidivr in push and pop jl (bad) (bad) incl xor dec push xor xor aam mov insl lahf xchg (bad) (bad) lcall jecxz dec mov je lock push out jnp outsb mov pop rcr jnp (bad) (bad) (bad) lcall push pop push loope pop xor sub cs xchg push add push inc mov clc call jns dec xor mov jp xchg jge adc sub lcall mov (bad) adc jecxz cmp ret cltd popa loopne call (bad) (bad) fdivr test lea and pusha sbb cmpsl lods mov lods and (bad) (bad) (bad) (bad) mov shrl sbb ljmp xchg (bad) aaa (bad) push movsl test outsl mov inc or pusha and pop shl jmp in das xor or dec fldl mov pop dec cli inc incl push decl cld sbb fisubl push je out mov fcompl (bad) in outsb lret mov sbb push std (bad) (bad) jge dec mov jmp leave mov cmp pop xchg push mov (bad) ljmp fwait mov sarb dec cmp push push lret adc es (bad) (bad) ljmp adc sub xchg mov pop mov mov xor mov call scas fwait mov std jno xchg iret push insl das mov mov mov icebp adc out cwtl les mov mov (bad) cmp (bad) icebp mov leave cli dec daa aam jo cmp mov lret hlt xor int3 leave push loop push xchg mov cmpsl push daa cwtl test cmp pop pushf jae (bad) (bad) (bad) jp dec mov mov jmp sub mov pushf and lds add decl out push xchg mov jmp xchg loope (bad) mov jg fucom lods movsl loop je dec xor (bad) add cmp xchg aas add stos popf cmp mov or lock aas pop outsb jnp movl mov (bad) (bad) (bad) (bad) fildl push in pop and fisub sub mov xchg inc sarb or (bad) (bad) (bad) decl imul fldenv pop div outsl fcoml or addr16 pop xorl jns cmp mov adc jne ret mov cmp nop daa mov jg or adc inc or movsl jg mov lcall or in pop stos add and or adc (bad) (bad) dec sbb les inc (bad) (bad) mov or (bad) insl jne shlb pop clc outsl gs sar cmc or mov jo jl cmpb mov (bad) jmp or xchg jg sub pushf or add dec sbb adc in mov test cld (bad) (bad) jp in xchg popa in in adc push ljmp mov (bad) inc ror addl pop icebp aas xor inc mov inc popa cmp mov mov ljmp add jnp sarl mov popf movsl aas push mov sarl xchg pop (bad) decl scas sahf xlat xchg push or in rclb (bad) (bad) cli test jnp xor scas xor dec (bad) aad insl jae pop cmc ds xor xchg fldl (bad) (bad) jmp cmp and xchg andl xchg daa jae (bad) lcall pop or mov mov cld bound sbb outsl clc jg jle les gs xor mov (bad) jle cwtl rcrb cmp in sub (bad) imul push dec gs xchg lea lret (bad) lcall jp idiv jnp cli jne in mov mov ljmp pop (bad) cmp mov aam (bad) mov cmc mov (bad) (bad) (bad) fsub xor inc lret adc or cmpsb in dec jbe imul out (bad) in (bad) (bad) jge loopne (bad) adc push push ret add shrb jb xor push sbb cmp loopne and push es mov add and (bad) (bad) jmp xchg cwtl fwait out nop iret aad call push rcrl roll push les (bad) (bad) call les cld xor pop std movsl dec repnz push cld xor mov out adc repnz out ds call dec aaa (bad) outsl (bad) (bad) pushl fisttpll dec jl hlt cld or cmp dec pop inc sub nop adc mov cli incl stos mov or arpl (bad) adc (bad) (bad) ljmp rorl pop lcall int3 mov jne lea subl out addr16 adc (bad) cmp fcomps cmp lods leave cwtl fidivl push sbb jp cmp (bad) pushl outsb push add ss sub xlat and push out rcr insl sahf stos adc cld (bad) lcall (bad) jae mov popl aaa xchg sbb rolb in sbb stos add (bad) (bad) ljmp pop xor xchg mov jl mov xchg cld push add cmp sbb outsb cli mov hlt mov das ja jo pop mov mov cld (bad) (bad) cmp in push sahf sbb scas sub les stc and (bad) incl out daa or pop movsb imul dec jns sub or fimull mov mov scas inc sub (bad) (bad) (bad) lcall xor or xchg or lahf xor loope int test lods or (bad) incl push cmp push and lret lock xor lods fidivl jb xchg xchg pop mov inc das sar add shll movsl aam out scas sbb (bad) dec push fidivrl mov std (bad) (bad) (bad) jmp popa (bad) pop or insb les (bad) daa popf fyl2xp1 setns add iret into inc mov (bad) (bad) (bad) clc jb,pt mov xchg sbb xchg sbb cltd pop lods in aam adc cmp popa (bad) mov jp adc xor pop push sbb arpl mov mov enter lcall push loope je push sbb fs push adc jae clc (bad) (bad) pushl lds clc mov add (bad) or push in mov dec dec (bad) mul fs stc (bad) (bad) pushl jmp popa sbb insb pop sub (bad) jnp jne pushl das inc mov and cmpsb pop aas mov popa fidivl iret (bad) (bad) (bad) decl in pop fcompl mov pushf sbb lret push shr push mov jb (bad) (bad) pushl clc xor push and adc cmp or inc hlt (bad) (bad) (bad) mov mov inc cmp mov push push pop mov addr16 sub ljmp clc mov push sbb lds imul mov jo xchg (bad) jmp push cmp shrb (bad) fdivrl add xor xchg mov test (bad) (bad) inc push xchg test mov xor jno mov fimull adc (bad) (bad) (bad) jmp cli insb aas or mov movsl dec aam insb jp mov test pop mov (bad) (bad) (bad) incl jp mov lock inc cmc repz enter push mov push mov aaa std pop push cmp add in mov push fndisi(8087 mov (bad) sti sti loope push mov cmp jmp iret xor popl nop add xchg in (bad) adc sub aam xlat hlt mov mov sub pop pusha xor ljmp std std aas movsl (bad) mov fnsave xchg add rorl xor push loopne mov and pop and (bad) (bad) (bad) pushl sbb adc pop push xor fsubrs mov mov jl (bad) (bad) lcall inc jae lock xor cli jg movsl jne jns enterw std (bad) decl mov aas stos (bad) dec sbb add cmp xchg pop insb mov lcall (bad) (bad) (bad) pushl test std test xchg pop cmp push out test mov (bad) (bad) (bad) call divw int mov xchg (bad) lret hlt or jbe dec ljmp push data16 icebp (bad) pushl arpl inc push ret js and jecxz mov (bad) (bad) lcall test jg imul pop ja inc push push (bad) mov shll sbb jp xor jg xchg aaa scas cli (bad) jmp dec fwait pop push das or cmpsb insl xchg fimull mov (bad) jmp outsb div xor fnop adc push jmp fwait add pop daa into fs jbe cld int mov pop pushf xchg pushl decl pop add loopne inc notb cmp sbb push or out dec jmp jle add scas mov insl push mov jmp xlat in cmp lea inc jmp bound and xor fcomip dec cmp xchg dec aas imul loop out jo imul std jb adc xchg cli sarl (bad) fsubr mov pusha sbb arpl sub repz test (bad) (bad) call std (bad) dec out repnz repz dec popf imul and xor (bad) (bad) (bad) pushl cld popa push xchg dec lahf push mov loope add fwait nop out test mov in (bad) decl xchg cmpsl jp pushf xchg repz cmc pop scas adc int3 or sbb das sar jmp aam (bad) out mov mov jno (bad) (bad) (bad) call in and adc jg mov jmp movsl lret (bad) (bad) jmp dec cmp fsts in jle xchg push repnz stos xor pop pop sub or xchg hlt (bad) (bad) jmp test dec (bad) xor mov pop sahf cmc cltd les adc (bad) (bad) fbld sahf add jo sti cwtl subl mov call mov dec lea aaa lods lahf rcrl push jae jbe (bad) (bad) incl dec jl dec aad sahf enter adc das rorb icebp enter jge ficom (bad) (bad) (bad) jg pop shll jo scas sbb mov mov movsb enter xchg imul pushl jmp push sub push jbe jmp mov push data16 (bad) incl dec nop sub pusha xchg push les fldenv stos mov decl and add mov scas sub fsubl cmpsl out ljmp inc jo (bad) cmp call outsl dec xor cmp test (bad) (bad) (bad) mov (bad) cmpl adc inc dec testb cmp jp (bad) (bad) (bad) lcall inc or fisttpll mov sbb lret and das aas adc lods xor fdivrl cli (bad) (bad) fsubl mov fisttpll popf sbb cmp and xor out cmp (bad) pushl js sub mov sbb je mov imul or (bad) (bad) (bad) call jmp lret nop sbb cmpsb xchg fwait pop pop adc pop cmpsl lahf mov mov mov (bad) (bad) jmp rcpps outsl xor out cmp sub xchg lret cmp jmp imul std leave jmp das dec les add data16 (bad) mov clc ja loop (bad) (bad) (bad) mov add out jb inc (bad) jo (bad) fisttpll out sub sbb push je (bad) (bad) inc jne mov (bad) push insb lds pushf imul iret (bad) enter bound sarl push adc jns jnp mov cld in (bad) (bad) (bad) pushl insb dec imul add movsb rcll inc jae fldt (bad) fsts (bad) (bad) (bad) incl jae lcall cmp mov orb dec (bad) ficom (bad) (bad) lcall and (bad) (bad) iret ss inc stos xchg repnz ljmp and or mov nop pop xor sti jbe push lods cmp cmp jp sub jg insl jle aas fcoms shll jg cmpb mov aad jb hlt cli add push xor (bad) lcall adc jnp scas insl pop dec leave or xchg push adc cmpsl (bad) (bad) mov xlat out lds mov lahf pop jmp out insb test cwtl in popa push rorb je add (bad) (bad) ljmp jmp lcall mov or jns (bad) (bad) (bad) lcall je mov hlt adc cli test les cltd push stc ja pop jp push decl xchg inc push mov dec or rcrl in rcll xor mov dec in (bad) (bad) lcall mov pop ret lds adc inc push test aad repz stc out shll (bad) (bad) (bad) (bad) call pop cmpsb mov or pop jl and add fmuls popf (bad) ljmp cli push fidivl mov in movl push xchg add iret clc (bad) lcall fbstp push (bad) out mov pop scas pop fnsave sub pop adc (bad) loopne ljmp cli push jmp repz pop mov adc outsb loopne movsl push pushf push mov (bad) (bad) jge mov aad jbe test push fs xor (bad) (bad) (bad) mov in jo xchg std dec hlt cmpsb pop lds sbb pop pop dec push fildl xor adc aam scas fs inc fistp mul aas jne hlt push xchg pushf inc jle (bad) (bad) (bad) incl adc push fimul iret mov popa xlat pop popf stos pop mov leave es (bad) (bad) (bad) pushl xor fcmove lahf pusha rclb into mov lock in nop lea (bad) jg (bad) mov mov mov insb cld sub jmp adc cmp cld pushl icebp cmpsl loopne decl (bad) mov (bad) (bad) jg and int3 pushf cmpsb xchg push js inc imul cltd jo scas (bad) (bad) (bad) call mov or and nop movsb orl stc inc cs inc fldcw pop jge (bad) (bad) call loope int3 orl ja in adc dec clc aam fmull fcom icebp (bad) (bad) fcomip and test pushf adc dec mov sbb icebp rorb xchg cs loopne adc (bad) incl cld push dec xor xchg call xor sbb mov inc (bad) (bad) (bad) (bad) incl inc sub sub cld cmp out ds pop cwtl sub mov xor (bad) (bad) jmp hlt in leave cltd loop std mov testl mov jg in pusha mov inc push imul jle addl pop repnz jae popf mov stc (bad) call adc lahf adc jo mov pop std sbb gs (bad) jg mov mov cmpsb mov pop sbb dec lea rorl jno out (bad) (bad) (bad) (bad) cli bound aad repz (bad) sbb mov xor mov sbb (bad) leave sahf jge std (bad) cmp enter xchg jmp lahf daa imul (bad) (bad) pushl mov outsb adc or cld adc repz (bad) jg lcall les xor or inc into fwait mov jp fwait and (bad) mov push test inc sub push adc sub gs or cmp pushl stos mov ret dec ret fstps push mov rorb xchg or (bad) (bad) (bad) decl icebp fsubrs popl mov int and xchg mov or mov cmpsl into xchg (bad) sbb movsl add mov lcall (bad) (bad) dec push jmp cmp mov sti fldln2 fwait cld push adc adc mov enter call (bad) fildl inc mov push adc out add mov lcall insl stc fdivl cmc lea (bad) incl test xor shr sbb add sub clc pop (bad) out xchg ss mov cmp mov stos clc fcos (bad) (bad) decl lret adc jecxz xchg fcmovu xor mov arpl mov data16 mov call clc push dec sti cli or xchg jl add shlb cmp push mov (bad) (bad) decl and push mov (bad) pusha loop jmp xchg (bad) sub push add inc push (bad) lcall aaa dec into adcb mov aas inc cwtl sub popa sbb or idivb lock fstps scas or imul lds xlat xor jb popa dec ljmp pop mov xor jp jp mov imul out push jmp or push pop (bad) rol xor cmp testb repnz adc call lds jne jbe hlt cld int fadds add cmp leave or add fldl subl sub repz cmpsb sub cmpsl mov js mov (bad) jmp pop lcall lock jnp or inc hlt fs mov fildll cs (bad) (bad) (bad) (bad) jno jb xor ror push cmp and push stc pop pop sti imull incl mov (bad) lods inc sbb movsb mov aaa sbb dec mov fs pop push fldl xchg or fwait jge lea mov xchg lods add int je jge (bad) (bad) (bad) cmp push fwait jbe cmp xor xchg in dec imul (bad) (bad) (bad) call mov ret mov loopne aam test (bad) mov dec dec or loop mov ljmp dec (bad) leave pop clc xchg or test cmp push (bad) call mov je (bad) out mov test push or fcomip (bad) decl (bad) push mov pop lret cmpsl mov mov (bad) jno lea cmp jb das nop lods lret pushf xlat (bad) out repnz jo sbb sbb (bad) incl in push dec adc cld dec add xchg stos mov dec iret cltd mov (bad) (bad) (bad) (bad) mov (bad) aad inc pop rcrb sbb insb fidivr mov lock cmpsl cmc in xchg outsl and push rcrb (bad) outsb pop mov cmp adc xchg fadds dec jle or outsb bound (bad) (bad) jmp out xor mov push xchg lods sarl out lahf jae mov pop lea stos dec dec popl sbb cs lcall adcl xor sahf (bad) and (bad) (bad) jmp jns xchg mov or push mov loopne sarb je add in mov pushl stos xor sub popa outsb mov sbb js mov pushl jmp aaa push aas imul adc xor cwtl fisubl mov dec addr16 mov lcall add sub xor or popa test jae push add daa hlt loopne aam leave decl (bad) (bad) decl ret (bad) or adc mov xchg xor xchg arpl (bad) fcomip jmp in mov (bad) outsl lock push xor sahf jmp jle (bad) (bad) (bad) inc rol pop sbb stos cmp mov dec imul xchg mov dec decl out out dec aaa jbe je xor add lcall inc bound stos sbb aaa popf bound stos imul (bad) incl pop pop mov cmp bound inc aas xor (bad) (bad) (bad) dec jns arpl xor mov add mov aam test inc inc (bad) (bad) (bad) (bad) cmp adc cld mov inc movl mov imul aas xchg (bad) pop imul mov or int (bad) or xor inc xchg (bad) idiv lcall (bad) sub mov mov cmpsb and or mov xor lcall in in fidivr adcl mov xchg xchg adc test (bad) mov xor sbb lret jge lods icebp jne mov enter mov (bad) (bad) decl add fs cld cwtl or ss sub mov jmp inc repnz imul orl (bad) (bad) jg jecxz fs push dec and ret dec push (bad) test sbb jne xchg cmp (bad) (bad) dec (bad) shld imul out push pop outsl std push (bad) or (bad) (bad) decl jg fwait push roll addr16 add test (bad) scas cmp or cmp gs and int push pop fldt push (bad) or (bad) incl adc push rcrl mov pushf jb (bad) sahf icebp jo (bad) xor inc loop incl cmp cli xor mov insb (bad) (bad) decl xor mov ds leave insl sbb mov movsl jg cmp (bad) (bad) jmp gs sub stos and push es sbb xor stos mov (bad) (bad) jmp push push test leave inc shll lret mov mov scas les (bad) (bad) incl dec (bad) insl in mov jno insl inc pop mov lret mov imul (bad) (bad) (bad) (bad) (bad) cmp dec mov jo adc or insl mov out out adc cmp (bad) (bad) (bad) outsb cmc lock mov nop aas sbb pop sub jl enter (bad) (bad) (bad) (bad) mov and lcall bound and aaa rolb pusha lods std sbb (bad) (bad) jmp add in pop jno ds cli lcall gs mov (bad) adc (bad) lcall xchg push pop ret jno loope cmpsl jmp aas outsl adc addr16 mov push add (bad) (bad) jmp sbbl push cwtl subb std out cmp arpl mov (bad) cmc jns jle cmp sub pop sbb and pushf adc sbb (bad) (bad) (bad) jnp and (bad) lcall xchg mov mov adc (bad) or mov dec (bad) (bad) (bad) ljmp imul jg mov in sbb lods mov fdivrp push mov xor aad arpl lcall daa mov sbb loopne popa in (bad) (bad) (bad) (bad) cmp or pop cmp xor jno xchg pop test mov (bad) lcall sbb iret pop in into rcr sbb inc aas push test (bad) (bad) (bad) ljmp shrl pushf mov outsb sar popf or adc test mov (bad) (bad) call lahf jg xchg and xor imul shr scas out stos xlat lea leave push or (bad) lcall fcomi or repnz popf (bad) lock or cmpsl stc sub (bad) pushf xchg (bad) (bad) jmp mov cmc gs cmp dec sbb and mov mov or mov (bad) xlat (bad) call push mov test out stos jmp fisttpl mov sub push cs in mov daa jb js (bad) (bad) pushl mov dec or aas push push add adc shlb and (bad) inc sbb fistpll adc or int (bad) imul cwtl mov mov mov adc jp cmp incl repnz mov xchg sub xchg sub imull push clc test (bad) (bad) (bad) (bad) fadds inc stos fisubr stos jmp punpckldq mov addr16 fsubp inc int out mov out xlat push rcll in (bad) pop jle call xor in imul out dec jns es lods pusha (bad) (bad) (bad) (bad) ljmp mov test or cltd mov push push int cmp sub cli decl xchg outsb insb adc in inc mov push fs in test lret iret mov pop lods push and aam dec insb sti fbld decl cmovae test loopne,pt fildl (bad) lcall xchg dec lods push sar mov ss movsb push inc and incl arpl fidivl insb fldenv dec or rcl pop inc fwait or lock pop (bad) push icebp push ljmp sbb ds lods mov pop push mov xchg std adc (bad) cmc inc inc mov mov mov jle outsl decl lock fmuls or sbb incl pavgw imul inc pop pop sbb fiadd ja push sahf push std (bad) call mov inc sub mov jno je movsl mov jg imul (bad) pushl jle sbb sbb dec xchg (bad) pop int jmp mov fsts jmp repnz adc scas cmp outsl popa ja inc stos xchg or jg (bad) mov push fsubrl sbb adc ret or pop enter cmp pop repz ljmp (bad) (bad) pusha jmp pop pop (bad) enter and push fild sbb cmpsl mov (bad) lret insb sub mov mov out movsl inc mov dec into insb mov push jne or sarb movsl iret rorb jge (bad) (bad) decl pop push insb mov adc push roll fst pop pusha mov dec in jb (bad) (bad) (bad) lcall int mov aam dec xor pop insl das inc push sbb xorps (bad) call loope out and inc inc scas negb mov test cmp sbb mov mov mov out sti insb in cmp scas shrl inc add sar stos jl incl cmpsl mov xor popf leave xchg pop jge adc push incb repnz cmpsl icebp scas adc in pushw int roll or adc mov rclb sbb xchg jle scas sub (bad) (bad) decl call xchg in lds js mov ds jbe or jmp xor (bad) lcall ret enter mov jle and ljmp fwait sbb cmp stos stos repnz mov ljmp inc nop xchg adc mov push jnp cli sub aad or sub xlat aaa (bad) in jno test push jo (bad) (bad) dec fld push xchg inc pop and pop (bad) pop mov movsb push ss (bad) lcall jmp pop mov push jmp ljmp mov fdivrp sbb jg xor pushf adc movsl adc push mov jge mov fstpt mov (bad) (bad) ljmp jne scas mov inc insb sub pop mov popa scas push or lret or sbb ss decl gs and dec icebp movsb adc add aaa xchg in jle (bad) fldenv (bad) (bad) jnp adc test sub pushf out pop out ds sub cmc inc or (bad) (bad) (bad) decl sahf dec out lcall rorb es mov pop mov sub (bad) (bad) (bad) mov insl fisttpl xchg sarl and call bnd mov fdivr jmp mov or call loopne (bad) dec and stc out pop cwtl (bad) jp lcall sub scas adc lahf sbb insl pusha out ds sub cmpsb jae (bad) (bad) push xor push cmpsb cmp and sbb hlt sar mov sub std andl sti xchg add (bad) (bad) (bad) call cld jge push into mov cmp bound cmpsl mov test pop cltd jno mov push or iret inc movsl sub (bad) fistp repnz jle (bad) ljmp adc lock xchg xchg das dec daa mov cmpsl cmpsl (bad) fcomip incl jne orl imul sbb mov enter jge dec pop pop (bad) (bad) (bad) pushl xlat aas das push mov outsl daa ret xchg imul hlt mov inc cmp fs mov dec cld (bad) (bad) (bad) dec movsl inc (bad) std xchg xchg add push popf mov adc push sub sahf mov sar adc mov inc test std dec jmp repz sub cmp dec add push mov ljmp (bad) mov cmp and cmp cmpsl jo lea jecxz sbb mov pop loopne mov in xor xlat pop jb outsl les dec xchg and mov and add inc xlat (bad) out pop pop int3 and fs lret xchg mov (bad) (bad) lcall inc je dec mov decb (bad) push lock pop sti std (bad) (bad) (bad) aas pop idivl imul cmc mov movsb pop outsl jnp xchg sub add add sbb mov or enter mov (bad) pushl pop push (bad) in inc in sarl (bad) ja into arpl sar (bad) jmp pop xor leave mov lahf jb pushf out sbb add or dec (bad) mov (bad) (bad) decl mov dec jge sarl sbb fnstsw fsubrl outsb bound mov or test jecxz xchg dec xor sahf es shrb (bad) (bad) (bad) pushl adc adc fwait xor scas (bad) mov xor inc dec lea leave lret (bad) (bad) (bad) (bad) inc sbb aad jb sbb fistpl jle scas jge cmc push arpl fidivr jo loopne (bad) (bad) jmp push stos pop popf add out rcll mov mov mov stos mov dec push dec (bad) (bad) (bad) jg dec rcrb loop push stos and cwtl jae clc shlb leave jl jecxz dec or mov out or pop sbb mov push idivl sub stos (bad) sub (bad) jg (bad) fimul sub scas ja sub mov mov and and and (bad) (bad) (bad) jmp ret ret rcrb outsl movsl pop roll pop lcall jbe sbb pop insl loop xchg push ds inc insl ja mov repnz xchg clc (bad) (bad) call fsubrl rcrb xor ror rorl (bad) clc into cmp pop mov stos mov xor adc inc fdivrs (bad) (bad) mov les movsl pop lret repz inc mov or jo (bad) (bad) pushl addr16 push pop loope jecxz or and add mov jg pop call ja out dec mov loope (bad) enter (bad) (bad) push cmpsl xor mov pop push arpl xor xchg jne xchg mov inc adc inc rclb (bad) and lahf and push dec xor jmp mov sbb sbb (bad) (bad) (bad) call divb fucomip out js iret sarl ret test loopne icebp dec dec mov enter idivb in fbstp pop data16 jge cmp (bad) (bad) incl mov mov xlat cmpsb aaa ss jns pusha cltd xor jnp int3 gs mov mov ffree inc gs mov xchg movsl sub shl rcrl mov (bad) aas cli (bad) (bad) (bad) decl or add (bad) in and push xchg push int arpl js sub mov (bad) (bad) (bad) mov inc pop dec mov jecxz pusha dec enter les jge mov (bad) mov adc cmp and scas or cmpl hlt lcall icebp pop stos js,pt stos cmp cltd stos or outsl scas cmpsl dec cmpsb out jns adc fnsave push lock xor sub (bad) pop ficoml (bad) icebp notl inc hlt add adc cmp insl add scas mov (bad) jmp mov xor cmp cmp jge out xchg aad int3 cs dec cli (bad) (bad) decl xor sub xor dec pop imul fmull sub push xor in ljmp pop loope mov jbe aas (bad) push lds in les (bad) jle scas jo and push push cmp and aaa push jns loopne (bad) (bad) (bad) (bad) jnp xchg or cmpsb pop movsb cmp mov (bad) out lahf mov out push sub xor (bad) fyl2x fnsave fisttp push aad or outsb stos or cmp test hlt arpl pop pop sbb idiv dec dec cli (bad) imul xchg push pop call jg (bad) push add outsb mov cwtl or or lret into jge push (bad) (bad) (bad) (bad) mov xor mov popa push sub mov cmp (bad) mov (bad) cmp push sbb inc inc cmpsl add mov (bad) lods mov or mov (bad) (bad) (bad) (bad) mov aaa xchg int add sbb scas lds cmp mov (bad) (bad) (bad) jmp sub ret iret xor nop cld cmp adc fistpll sbb cwtl jnp (bad) (bad) (bad) jmp and xchg mov pushf insb push xchg mov and lahf in jae jne (bad) (bad) (bad) lcall dec shll aas fcmovne pusha bound adc pop aas cmpsb arpl xchg xchg sub in (bad) (bad) mov bound inc lahf mov sub inc and sbb (bad) decl (bad) jae sbb push and mov shrl fwait (bad) and shlb or in lcall mov xchg inc or (bad) (bad) jmp adc inc and xchg mov xchg inc push je in fsubrs push push sbb (bad) (bad) incl push push push or lea fistp repnz pop pop sub pop pop pusha roll pop push sarb or pusha push (bad) lock inc add int3 (bad) stc jb aas mov jae xor movsl fsubrs sbb mov lahf test ret or mov fwait push (bad) (bad) (bad) lcall sub jb,pt mov push flds lods cmpsl movsl int inc inc fisubr push ja into add lods pop jbe (bad) (bad) (bad) ljmp ja adc cmp fcmovu cld mov fcom scas daa dec push cmp fdivrl pushl insb clc sub sub mov into insl lret or sbb outsl (bad) (bad) call ror cmpsl bound lods xor sbb pop outsl (bad) jecxz mov cmp fwait push sahf jnp or (bad) (bad) jmp cmp xor dec mov xchg mov push int lret mov (bad) or stos add xchg cmp (bad) (bad) incl cmp dec fmull sub hlt mov cmp or out (bad) (bad) incl arpl add icebp insl and (bad) push in ja cltd insl pop subl mov pop stos clc (bad) mov and sti cwtl push ret imul mov test idiv jmp adc daa test inc adc movsl sub xchg test test (bad) (bad) (bad) cld cltd arpl sbb in scas shlb mov bound scas mov jne lock adc sub fistl enter (bad) (bad) out cli fisttp adc xor xchg pop mov dec cld fldl adc sbb imul lock cs hlt and pop xor (bad) mov outsb cmp scas or add pop push cmp (bad) mov mov gs popa xchg out sti cmc mov mov movsb mov mov clc sbb repnz ds sbb xchg mov mov xchg (bad) (bad) (bad) decl (bad) loopne stc and lcall leave scas sahf and add xchg daa (bad) (bad) (bad) jmp loope js cmpsl in lock mov les push (bad) rorb pop imul (bad) call push xor pop push sub push jb sbb daa out mov repz push dec fisttpll jmp pop das scas cmpsb add out rcll sub inc insb (bad) mov cld fnstcw or (bad) loopne (bad) (bad) (bad) mov add (bad) outsb xlat cmpl or repnz lea (bad) test push inc push or incl cld (bad) xor cwtl sub call add fisubrl arpl outsb mov xor dec ss faddl (bad) lcall ds (bad) jne idivb jp xchg sub int3 mov in jmp adc (bad) (bad) (bad) jp cli out les jp (bad) xchg arpl mov out mov mov (bad) (bad) out lcall mov xor ret popl push mov stos (bad) (bad) (bad) jmp inc xchg sti push je je jle loop sub cmp dec call mov loop (bad) (bad) (bad) pushl mov gs adc or pop arpl sbb jecxz jg add pop (bad) pusha insb imul or inc (bad) jg sbb jbe cmpsl std (bad) cli in test mov push mov (bad) (bad) lcall mov sbb push ljmp add sbb pandn push mov (bad) jmp aas addr16 mov mov dec add cltd sub (bad) (bad) lcall icebp pop mov push jae lods pop add scas xchg repz mov arpl mov (bad) (bad) (bad) lcall cltd (bad) int xchg inc fstl or rcr sbb jmp jo (bad) (bad) (bad) jmp jecxz ret sbb gs popa into and lret fistp jae ret mov mov (bad) (bad) jg insb xchg test mov (bad) mov fs sbb repnz (bad) incl xor mov adc ficoml push aad mov aaa std (bad) jge inc ret pop inc and add rclb and stos rorl push lods insl lahf loop mov (bad) mov (bad) ljmp cld movsl fisubl dec iret lods mov into inc mov cmp (bad) (bad) (bad) (bad) stc inc out push push fnstenv (bad) mov sbb fsts and arpl ret (bad) (bad) jmp push sub pop out mov add cmp repnz aam mov (bad) (bad) jg pop int shr jp outsl stos mov test dec dec negl inc (bad) (bad) (bad) lcall and xor push pop out (bad) xchg push or pop sub xor jb bound sub xor in jmp idivb cmpsb xor dec fstps dec dec adc push xchg ja push cmp pop ds (bad) (bad) (bad) (bad) jg and pop xchg loopne dec pop adc and rclb aam insb jbe mov (bad) (bad) lcall sbb sub fidiv push ds rcll cs stos or dec pop test ds push lock (bad) out mov insb loopne cltd adc jae dec jnp adc dec insl shl adc (bad) (bad) fistpll scas fcoml out sarl or cmp mov imul (bad) (bad) jmp aaa sarb in sub addr16 mov jnp je stos loope add sub (bad) (bad) jmp adc sbb and xor xor or push js (bad) cmp lret incl leave enter cmpsb and loope jle outsl stos xor (bad) (bad) jmp sbb jecxz add jecxz je xchg pusha mov int cltd mov and (bad) (bad) ljmp adc pop mov lcall ss iretw dec sub sbb cmc stos insb stos fdivl push mov jecxz jle aad aaa inc lea (bad) (bad) (bad) jmp fildll enter out cmpsl imul inc inc cmpsb push fdivr inc subl in and (bad) (bad) lcall ficomp call (bad) (bad) decb test aas ret ds int inc (bad) (bad) (bad) inc test and out repnz cmc ss ja fs mov fcompl mov (bad) (bad) (bad) (bad) (bad) in andl or xchg jns sbb stos xor popa cld xlat cmc jnp inc pop mov fst jg (bad) (bad) (bad) lcall js lods aas mov in and sub lock sar (bad) (bad) jmp jmp push inc jbe xor insb pushf and push cwtl jnp push jp sub lds (bad) (bad) mov xor cld jmp cmp rclb pop popa mov sbbl adc push stc idivl aad ds lods push or cli mov (bad) push push pop icebp (bad) inc jecxz or sub arpl jb cmp mov insb or dec xlat (bad) (bad) lcall mov ja mov add fchs jmp scas loop cmpsb (bad) (bad) (bad) jg in add dec outsb rcrb loope test shlb data16 daa jnp sub scas dec xor push adc or int (bad) stc add push mov fdivr (bad) (bad) dec jnp andl lods or pop pop mov std pop cmp inc jmp mov (bad) (bad) (bad) fldl fcomps sbb (bad) (bad) lret mov hlt or (bad) (bad) (bad) jns addr16 pop mov fldl ret iret movsb mov cwtl mov dec ljmp xor enter in leave inc fbld daa dec sbb (bad) (bad) call jnp sbb hlt lret pop inc mov xchg fimull out je movq inc cmpsb pop les sbb ret mov call dec (bad) incl fadd xor arpl call adc xor ljmp decb push pushf jns addr16 sahf fsubs pop (bad) (bad) (bad) (bad) jns ja xchg hlt stos sub pop dec push mov cmp or ss inc ret fwait cs (bad) (bad) (bad) push mov sub das cmc xchg push loopne mov mov idivb add (bad) (bad) (bad) (bad) pushl cli sub (bad) sub xchg lods cs or out enter in lcall sub insl std icebp cmp (bad) pop insb push insl and push sub cmp add roll clc repnz gs in adc or (bad) (bad) (bad) incl jp pop and fadd mov xlat lea push push xchg cld insb xorl cld dec push iret pop mov add decl cmp fdivr adc pop add movsb stos inc cli (bad) lcall sbb xchg out loop in mov imul (bad) (bad) mov lods push xchg mov out mov cmp lcall cs xor pop (bad) (bad) decl ljmp inc (bad) out jne das fmuls aad sahf add (bad) (bad) (bad) jmp fcompl mov sbb and add sbb xchg xchg mov cld or mov cmp cmp mov mov (bad) call push ljmp icebp sbb test test mov add inc movsl or mov mov stc jge iret xchg jmp (bad) (bad) incl push loop aam stos dec xlat push push jmp adcl fsubs cmp movsl xor mov call loopne mov out mov xchg insl xor adc pusha dec push xor mov jg fdivrs mov (bad) mov repz dec dec or hlt push clc jg fcomip dec jnp dec test ja es (bad) mov ljmp ja outsl push add mov scas (bad) jp lock mov add sti (bad) (bad) (bad) lcall fcoms test jnp lcall inc pop ljmp cmpsb and ret loopne add or push shrb jecxz mov xor (bad) (bad) mov cmc xorl aaa sbb mov adc movsl fnstsw (bad) (bad) (bad) inc lcall cmpsb push adc das test cmp xchg pop add test lret add push push mov test mov xor jb jo or sbb mov (bad) stc sbb push leave rcl aas pop jmp sbb add addr16 jae or lds (bad) (bad) call test xlat push test cmp cmp jl aaa movsb bts lock das cli (bad) aas addr16 pop sar (bad) or lahf pop xchg in cmc in mov pusha (bad) (bad) (bad) lcall lods xchg mov sub cmp mov inc out xchg sbb call push or push and movsb push dec int3 test dec (bad) in (bad) (bad) (bad) pushl adc or (bad) mov mov mov stos fcoml test test sbb jne sbb mov negb notb sbb mov adc fwait loope or out push cld pop outsl mov mov (bad) stc shlb aad or pop or pop ret out mul mull jle sbb (bad) (bad) (bad) dec sub add jl adc cmp fildll sbb jno and out jno jne (bad) (bad) lcall hlt mov or mov mov dec notl xor add lcall pop seto int3 or xchg negb (bad) (bad) (bad) mov mov scas mov push mov cmp mov test jmp mov dec scas into sub enter and rcrl jno (bad) (bad) (bad) jg daa roll std enter lods dec or sbb fucom push ds or pushl shlb xchg pop dec (bad) movsb dec push inc xchg mov les or das pop in pusha push lea out (bad) (bad) (bad) lcall lea pop adc xchg insb push cltd lret push aam lock mov int data16 dec sub pop mov inc gs repz les sub out clc ljmp sbb insb shlb cmp outsb cmpsl mov push sahf lret (bad) lcall fidivrl add jmp and adc aas inc sub (bad) jg mov inc repz in mov jo cmp aas dec mov data16 (bad) (bad) push pusha test mov xor mov cs mov stos pop je (bad) (bad) ljmp fmulp addr16 jbe mov icebp add rolb push iret test push xor add mov les or js hlt lret cld or in jecxz incl hlt mov mov xchg fbstp jecxz aas push or fcoms imul sti (bad) ljmp inc mov jmp mov pop fidivl cld (bad) pushl mov outsb out ret inc insl in xor movsl mov mov xchg cmp cmp (bad) (bad) dec iret nop or mov out (bad) ss ret or test into je insl (bad) mov in inc jl or (bad) jbe jno pop mov sub scas pop jle xor cld ljmp lret mov push dec aaa adcl mov inc es fwait out lods mov lds push mov or mov sub (bad) ljmp push insb icebp data16 pop add xor out inc inc jno loope lods xor (bad) (bad) (bad) cld mov pop ds inc jbe ficoml lret mov xor add jg adc cmp popf xor insl cmp jmp inc arpl arpl sub (bad) (bad) call imul and int3 cmp dec mov add sub cmpsl xor incl push lock (bad) enter push add xor sti add adc (bad) jmp lea popa ss movsl add jbe (bad) (bad) (bad) decl adc imul jge inc sahf popa fimul (bad) (bad) mov aad push pop inc aad jns jle jp add cmp pop leave stos flds in decl sub test add imul xor and pop inc idivb in lea rorl (bad) (bad) (bad) jg jl scas inc mov dec roll nop int3 ffreep jns loop sbb ljmp mov in icebp out push and (bad) fnstsw sbb cmp (bad) fdivl (bad) cmp ljmp faddp iret xor hlt cmp notb jo add (bad) lcall push push mov and xchg addr16 (bad) mov popa mov and lock and (bad) (bad) ljmp loopne (bad) pusha (bad) nop adc test hlt mov xchg pop inc gs xchg xor xchg adc xchg mov fbstp add popa sbb js xorb mov ljmp aas sbb and inc mov mov (bad) ljmp iret push adc xlat mov mov leave cmp scas fcos scas (bad) (bad) fidiv and jns jge jl ds insb loope (bad) lcall imul xor xchg jl bound push insb idivb sub (bad) (bad) in jbe inc mov sahf sub cmp xchg cld mov push push sub xlat (bad) and jae cli int movsb imul (bad) jmp lea mov cmp or dec frndint jae out frstor xor int3 dec out fdivr mov (bad) (bad) jmp add fbstp inc adc cmc jl das fst stos in arpl (bad) jg and divl fs inc fiadd fsqrt pop fldcw or rorb mov popa (bad) (bad) ljmp pop popa enter arpl movsb jnp outsl mov imul jne or decl xchg sub adc push in cltd movsl jb into out dec push jge movsb adc call movsb popf mov xchg or jmp pop add es (bad) ljmp xchg pushf mov mov in mov lods dec push gs loopne (bad) (bad) (bad) cmp mov dec movsb jno mov push jns mov aas addr16 add lds push jnp (bad) (bad) ljmp movsb adc popf lret and mov aam sub in rorl leave push sbb decl gs lahf and fcmovb adc jecxz in in or inc out (bad) (bad) decl les dec popf les mov jp fidivr icebp cmp cwtl (bad) (bad) (bad) jmp jnp call adc pop sbb add add mov pop mov sahf es fistl inc repnz nop fwait xchg test adc mov pop push aad icebp decl lcall jle std (bad) (bad) jmp les data16 inc shr xchg xor adc lock mov aas adc (bad) aad scas cli (bad) mov hlt fwait lds jp int3 mov mov inc fs int mov (bad) inc cmp stos fwait adc loopne and mov (bad) lcall mov jne inc inc pop fcoml (bad) jne js test mov xchg and lcall dec push jge aaa jl and jecxz xor imul push dec lret (bad) (bad) (bad) ljmp aad sub movsb cltd ljmp insb sti inc out pop (bad) in mov stos dec and ljmp lret push sub inc arpl (bad) jo cmp xchg fist incl in fistp adc repnz lahf xlat jne int mov cmp out mov jmp clc and mov pop fbld icebp (bad) nop push popf lods mov sti cli cs les (bad) ljmp mul mov sub sub xchg xchg mov ret (bad) (bad) jmp es adc mov add iret jge mov sbbl mov jge mov les push in daa fimull (bad) rcr xchg lea mov add shrb or les fwait sbb mov pop fsubl sub fildl mov xor lret (bad) (bad) (bad) decl ret xchg push jle inc les adc daa mov int pop pop insb fmuls cmpsl sbb lcall inc mov jns and mov pop (bad) jecxz push cmc push mov push (bad) (bad) (bad) lcall adc out xor sub (bad) xor fstl mov pcmpgtw (bad) lcall pop and (bad) dec and sbb shl cmp (bad) (bad) (bad) call scas jp inc push repnz jae sahf arpl xor add in adc add or (bad) cmp pop pop xchg arpl fdiv jle lcall push (bad) pop aas (bad) (bad) (bad) jmp lds andb sahf jmp adc cmp mov daa add pop (bad) (bad) (bad) (bad) fstp fimul addr16 inc js stos sbb mov fcomip sahf xchg lret or mov pop iret rcrl mov jns (bad) mov adc sbb pop jo sbb cmp js pop (bad) (bad) (bad) pushl je mov lds mov push loope popa mov xor (bad) mov movsl lea add adc mov sub and pusha pop int3 cmp jne jae xchg es fstpt push mov push push (bad) repz ds mov mov cld push inc scas jo pop repnz loopne faddp sti shll arpl rcrl incl pop (bad) je push lret popf enter inc or sub fcom pop push (bad) (bad) jg ds aad pop sub xchg outsb sbb push cs jl dec loop (bad) (bad) lcall add test cs loop aaa inc loop jo or (bad) (bad) dec or jge xchg sti sbb inc dec sbb push mov adc iret sbb test pop mov add aad adc xchg scas or push icebp mov aaa adc add aas pusha mov (bad) (bad) (bad) lcall pop inc pop ds mov add add rcr mov pop jge pop pushl dec popa xchg adc aas lret push pusha mov push add pop lods shrl inc mov (bad) (bad) (bad) ljmp fcmovb les aas (bad) fiadd outsl sahf sti sbb in sbb push aam jl add mov (bad) decl jo xchg mov mov and imul in mov aaa adc incl cld sti rcrl aad xor scas mov add inc (bad) pushl aad roll popf daa je add out push data16 xor movsb test cld dec fdivr (bad) (bad) lcall cmp ret dec inc sbb dec push aam pop mov adc aaa or inc loope (bad) push mov bound xchg and mov sub xchg lcall mov loope (bad) sub or xor pop es sub (bad) (bad) (bad) (bad) jmp (bad) outsl lret fs adc push (bad) fwait ret mov xchg bound jle and (bad) (bad) incl in dec dec loopne pop out dec push and in xor and stos icebp or (bad) decl cmp aam add jno push mov sub dec push insb sub sbb or (bad) (bad) ljmp outsl jne jle sahf pop inc inc cmpsb and mov fwait mov (bad) fmuls cwtl mov (bad) (bad) call push idivl loope ss ret out xchg xchg pop adc mov inc cmpsl dec push (bad) jg incl pop dec adc insl inc rclb js xor inc pop (bad) in sbb (bad) (bad) (bad) ljmp or sbb loope shrb jle in mov jmp ret xchg add nop mov (bad) (bad) call (bad) mov ret mov out sbb jo test clc xchg hlt fcomip push mov decl scas and (bad) stc jmp incl push clc inc test pop ds sbb or and hlt (bad) (bad) decl pop fldl out mov movsl leave sub outsb xchg sub sub lods push mov lcall lods push mov pop sub (bad) cmp fistp mov (bad) (bad) (bad) push cs ficoml add popf fwait popa add xor sarb out addr16 jg jmp dec ficompl mov cli insl pop sbb fs and (bad) (bad) incl sbb imul aad aam mov push jmp sbb and adc (bad) cmp or jmp int cmpsl push push dec xchg js mov pop ret inc inc add (bad) mov ja aaa mov ja or leave mov into cli insb arpl xor (bad) (bad) jmp inc or inc mov cmpsl xor lock lea gs mulb (bad) (bad) fsubrl xchg div lret mov mull adc nop (bad) ficoml sbb sbb pushl or fist jmp xor js or daa repz sbb fs lcall xchg push mov jge mov adc (bad) mov or aaa xor adc test (bad) mov lods ljmp andl mov enter push out jmp shrl jns imul test aam (bad) (bad) lcall push push aad test pop call (bad) stc pop outsb jmp xchg popa pop dec adc mov cmpsl pop fwait jbe out (bad) fwait repz sub loope lahf es int3 aas (bad) (bad) ljmp jge inc out and (bad) out in decl cmp cmp mov inc daa xor mov shrb (bad) (bad) (bad) jg cli dec add mov and lcall in xchg jle inc push xor mov clc (bad) (bad) (bad) jge aas ss out scas cmpsb mov lods arpl cmp jo arpl cmpsl call and inc adc inc (bad) (bad) (bad) call lret das insl and jne arpl adc scas pop lds es or aas sbb jl (bad) (bad) pushl mov push cmpsb push xchg dec je push adc int arpl jecxz (bad) sub (bad) (bad) incl jg jle rcl sbb xor jnp push xchg cwtl ljmp fidivr cmp xchg sbb add xor (bad) incl loope mov outsb and jb insl insl imulb (bad) (bad) jecxz aas pop mov imul (bad) cmp addr16 mov rorb scas lds pushl jnp dec inc test sub adc pusha xor iret shr movsl mov pop jns movsl xchg (bad) (bad) (bad) incl adc (bad) outsb in int lock inc out inc mov mov lahf roll sbb ja clc cmp mov sub test (bad) (bad) (bad) (bad) decl (bad) cmc jge (bad) xor jbe shr repnz imul cmc push adc leave add mov sbb (bad) (bad) decl mov outsl out fcmovbe lock mov or mov call pop fwait or sub jmp popa loopne pop dec rorb dec cli leave icebp sub mov std (bad) (bad) (bad) cmp outsl or xchg aas (bad) mov mov jmp push repz sti adc jl xor (bad) (bad) pushl ret sbb je jnp lock jge mov cmp bnd and decl mov xlat cmp lds fs addr16 sahf jp sar (bad) ljmp or adc pop sbb xchg jo cld repz into loope out insl data16 push jp or lock cwtl sarb fcomip pushl and xchg addr16 jnp inc jp nop xchg adc sbb ljmp leave cmp or ficompl ret xor (bad) mov stos (bad) push (bad) popf (bad) (bad) (bad) pushl iret mov cmp xchg xchg mov clc xchg mov test push scas push sahf (bad) (bad) (bad) jmp jns scas or add lahf popa sbb inc nop out mov cmc cld (bad) out clc aam adc jecxz fs hlt push mov add adc and add int3 dec rolb pop cltd sub add (bad) (bad) (bad) incl idiv jg dec dec jmp fs inc imul lahf test ljmp mov out stos cwtl xor xchg sahf mov xor inc jns xor lcall pop cli ret into sub push fdivs dec lods shlb aad (bad) (bad) (bad) fiadd xchg ret sub stos mov jge sarb arpl js and cmp xor (bad) call ja sahf (bad) pop cmpsl out xchg pop dec jp xor icebp lret inc lret repnz fsubl (bad) cld inc lods pusha outsb add out pop or push popl cld dec push sbb cmp out repnz cmp ret test adc ljmp out jne test (bad) (bad) jmp out adc dec aad inc or cmp call movsb pop out insb pop call insb xchg or inc test sahf sub xchg adc (bad) add mov stc (bad) (bad) (bad) mov push mov ficomp sbb lods mov popf xor push pushf cltd lret (bad) ljmp mov loop mov add push and mov gs inc lock test mov int aad sbb mov (bad) (bad) inc cmp (bad) push arpl lds leave or call inc in cmpsl dec daa mov inc (bad) fcomip mov jns adc inc and ljmp mov (bad) inc nop pop pop imul aam mov (bad) sub lcall or jmp mov jno mov push in enter pop pop test mov sar mov ljmp add ret ret cltd (bad) mov pushl adc mov jle,pt mov scas jmp scas iret int jecxz sub jecxz fcomip jmp jns and dec iret xchg sbb or or sub xor out (bad) (bad) (bad) call (bad) ja sahf dec xor add scas stos lahf inc dec sbb mov add xchg xchg (bad) (bad) (bad) call in jecxz mov cmp add add insl cs call int (bad) (bad) (bad) cmp (bad) xchg outsl rol leave (bad) mov loop movsl fisttpll mov loopne (bad) (bad) (bad) inc imul jnp insl mov lret fidivr mov sarb rolb (bad) mov mov sarb mov loopne nop (bad) ljmp clc jmp mov les jbe (bad) cmpsl sbb int3 cmpsb pop (bad) (bad) (bad) jmp (bad) (bad) hlt sub inc pop repz push enter add aaa jbe icebp xor loop js pop jle pushl cld call fmulp mov arpl dec lock ja mov push lret mov cmp outsl lret mov addr16 dec ret push cmpsl xor je mulb call loopne outsl and adc mov aad adc mov imul sti fwait movsl mov push mov notb int xchg mov jmp das pushf inc imul adc (bad) (bad) push mov mov sbb notl (bad) (bad) (bad) ljmp sub sbb mov (bad) or mov lcall jle scas sahf and lahf repz cli out test xchg jb xor pushf add push das shlb sahf xor or pop les sahf imul les (bad) (bad) (bad) ljmp cmp mov push xchg shll sahf mov inc mov mov (bad) jmp or (bad) pop inc enter mov rcll stos call decl pop push (bad) gs movsb jecxz pop and or (bad) decl push push dec push jle fnstenv jp lods int3 push js clc add mov (bad) ljmp imul js fdivrl bound cmp in sbb push movsb mov ljmp adc sbb xchg xor jmp add jno (bad) (bad) pop dec std stos mov (bad) mov push (bad) mov iret and push repnz ss lret cmp ret (bad) (bad) (bad) decl push dec arpl jae inc dec (bad) jmp in jl (bad) mov jg cmp ficomp repnz cmpb or flds cwtl (bad) (bad) lcall adc jo mov sbb or addr16 dec sub rcr lret (bad) (bad) (bad) (bad) mov loopne cmp dec (bad) pushf jle dec arpl idivl push dec adc andl (bad) (bad) (bad) call lods jnp jb xchg mov bound fwait push push insb or cmpsl pop sti or (bad) ljmp (bad) xor (bad) out ret mov call (bad) (bad) (bad) (bad) call or sub push mov mov push xor cmpl push cmp mov loopne repz mov ljmp aad adc lcall mov fwait mov mov les clc jmp jg lods mov outsl sub jecxz push pop insb inc mov push mov stc cmp pop (bad) in mov cli repnz xor jno xchg sar rcl jmp xor mov pop jbe lret jne mov (bad) ljmp fidivrl sbb out int je jae out cmp sbbb rcrl sub nop (bad) (bad) call mov ret xor adc fisubr xchg lcall mov arpl add (bad) (bad) (bad) (bad) mov dec cmp mov pop or or mov push stc inc adc (bad) (bad) call adc push push aas jbe add pusha jbe in xor dec xchg lret pop mov call xchg adc pop scas sub push add lret leave or (bad) std add and (bad) call jo push ds popf or and test pop adc mov push xlat (bad) (bad) (bad) dec cld mov pop mov frstor pop out push push arpl mov (bad) (bad) (bad) incl mov push pop fcoms sbb ja mov xor sbb push ja (bad) jg add jl adc jmp mov cltd popa push adc lods (bad) xor (bad) jmp sbb pop mov imul fbstp imul add mov (bad) (bad) inc xchg (bad) pop push xor and data16 xor pushf and mov imul arpl (bad) (bad) (bad) push add mov inc mov testb prefetchnta idivb cs inc mov (bad) push xor mov xchg mov in sbb xchg and arpl sbb (bad) (bad) lcall dec dec leave fwait push add js adc xorl dec stc in pop hlt (bad) jmp insb mov (bad) (bad) int3 jae pushf xchg xchg cmp hlt dec (bad) (bad) (bad) (bad) out sbb call mov test popf cmp sub mov jl sbb fcomip call in ja xor inc aaa sub cmp jge and pop pop es int3 xor inc es (bad) jmp pusha lea sub mov aad clc mov in in ljmp pop aas mov and adc jno int clc aam test (bad) xchg jl sbb xchg jl xor mov (bad) call lcall daa xor aam xchg mov scas or (bad) (bad) (bad) call ds push xlat cli into pinsrw in enter pusha jmp test xchg (bad) pushl std sbb clc decl sub lock fdivrs (bad) (bad) (bad) (bad) cmp push fs jae jo xor add in sub pop jge inc push mov fdivrl mov sbb jmp (bad) (bad) (bad) call inc fldl fwait iret test or addr16 add test pop mov ret (bad) (bad) (bad) push arpl cmp cli data16 or ja shll sti cli addr16 xor ror mov pop test movl fstpl push popa jg data16 sub loope addr16 repnz fmull mov add push fmull mov shrl sub jg (bad) (bad) (bad) jg cmp inc (bad) lret jmp cmpsb stc dec loop and test add lcall add (bad) ds je jecxz xor sti inc pop lds pop f2xm1 jb (bad) (bad) incl (bad) aad fs xor test js (bad) xchg and div icebp cwtl push std (bad) (bad) (bad) lcall push loop daa ss lea dec call sub sub leave mov ljmp movaps stc jbe adc sbb lret sub inc pusha and and ret rcr push sahf xorl inc lret pop inc outsl add (bad) mov cmp dec in addr16 jg incl adc cmp int mov (bad) mov sbb xchg icebp int3 xchg dec mov sub dec test (bad) xchg and repnz dec xchg clc hlt pop (bad) insl cmp roll cmp (bad) inc lea mov loope (bad) xor inc lods repz imul mov pop imul insb jle test outsb int3 repz xchg cld pop sub dec xchg fwait cltd cmpsb (bad) mov (bad) pushl jmp repnz add jmp sub vpaddd mov dec sbb (bad) (bad) (bad) dec movsb lret adc in sbb (bad) xchg dec in xchg cmp inc jle sbb sub inc (bad) fcomip pushl pop stc mul sbb int cld jb mov fmul pushw imul orl test test xor cmp push xchg xchg jae sub xchg out xchg xor (bad) (bad) ljmp jo mov xchg jns push lods pop out inc cmp dec xchg (bad) jmp int ret daa inc outsb gs fsubrl mov out fidiv pop loope pop add cmp (bad) (bad) (bad) (bad) cmp push sub int3 (bad) mov scas fiaddl mov jecxz pop (bad) idivl (bad) (bad) jg sbb lods mov fldcw sub loop outsb scas mov test imul test or mov (bad) (bad) (bad) call into pop aaa mov dec (bad) xchg imul aaa dec mov add stos out jo (bad) (bad) ljmp iret insb (bad) (bad) lcall xor (bad) adc bound ljmp les subb cmpsb in (bad) fild or enter (bad) (bad) (bad) fnop xchg adc jae inc mov lret mov or (bad) jmp add jg jmp das aad pop add mov fmuls inc pusha or pushf pop cmp stos out dec push push push sub xchg or pop mov cmp lahf inc cwtl (bad) sbb (bad) jmp jns in jle xchg mov es mov daa adc in je scas mov push push (bad) (bad) sti sub jp das fwait les lods stos xor pop or sub mov (bad) call outsb (bad) jnp and imul cmp mov inc (bad) ljmp out mov or push (bad) imul inc rolb pop pop mov sar inc cld out push xchg jne shrl mov into mov mov cmpsb (bad) lcall jnp add stc insl jp mov dec pushf std adc cmp daa in fbstp (bad) (bad) (bad) in xchg inc jae (bad) ja pop pusha or frstor add pusha data16 xlat dec push or incl call call pop sahf mov in test dec pop test (bad) call xor mov js mov stc fsts or jbe stos pop jp jae (bad) (bad) ljmp shrb jl (bad) bound imul xchg shl les (bad) fild inc jo mov xadd divps jne push std (bad) lcall pop aam inc mov dec hlt mov sbb addr16 (bad) decl cmp add mov sub cmp cmp ja (bad) ljmp jno cmpl or sbb lret sbb mov stos pusha jmp jge negl fidivl lock (bad) (bad) call cmp int pop dec mov in sbb aad mov hlt xchg stc call (bad) (bad) (bad) incl dec hlt dec xchg sub aam xchg addr16 push cli pushf push ja insb dec mov ja incl ret data16 enter pop mov loop,pn push (bad) aad dec loopne pop cld pop loopne out rolb outsb jge pusha insl pop push enter (bad) (bad) jmp out data16 call xchg add sbb xchg loop mov cmp mov aaa dec iret jp je adc gs nop jmp jge (bad) (bad) call stc out repz push cmp cmp popf and fdivrl jns call std sub xchg xor shlb push push fidivr xor (bad) cmpsb adc mov push sub in xor rcr pop add sbb (bad) (bad) mov pop pop mov push xrelease pop les pushf aad rolb scas (bad) and dec data16 imul jp push lcall add data16 sbb (bad) dec adc sbb xchg add sti (bad) (bad) cld mov sti add into mov xchg ds add push mov movb sbb and stos les push jb lods clc (bad) (bad) push cmp add test mov push cmp inc fadds add rcl mov loopne dec arpl rclb (bad) (bad) fcomip cs or xchg sub scas (bad) inc lock jmp inc stos adc adc aas cmp call dec lahf jmp (bad) ljmp sub mov sbbb lea cmc leave push dec cmpb mov ret (bad) (bad) mov outsl mov pop pusha pop push icebp mov dec adc mov pop (bad) push out icebp test (bad) (bad) ljmp dec jnp cmpsl (bad) int es clc lods and js jg adc mov pop (bad) ljmp jo dec adc fidivrl push cwtl jne outsl mov (bad) (bad) (bad) pushl add jbe add jae pop out jo iret mov fisubrl jb mov mov jmp adc inc push jns mov pop fisub into push dec push and jb rcl mov (bad) jle out dec sub adc dec sbb aas daa pop ret pop jmp pop dec pop sub inc push fildll or incl push xchg das cwtl (bad) (bad) ljmp mov and subb xchg add out mov fsub add sar xchg inc enter int3 les or pop mov adc (bad) jg pop push cli xchg cmpl loopne and (bad) fcomip inc lock insb or popf inc test popf aas ljmp jg lcall and (bad) popa xor jl jg (bad) jg jg leave bound sub add mov std dec push or lea dec arpl jle xor (bad) mov push inc dec mov mov jno push ret push and jg pushl loope xor lcall mov pop fildll call enter outsl notw iret and add popa sbb orl repnz jg sbbb in pop pop add cmp lods test (bad) jmp cmc pop xorb sti add daa ret jmp pop and je adc pop subb test dec inc popa shlb push push xchg jge addr16 sub (bad) call and repnz jge lea aas sub fs pop dec (bad) (bad) (bad) jmp ja adc scas lret cli xchg cmp mov test or call in pop push jae and cld (bad) pushl mov dec mov jle lret jl cmp dec pop fldcw sub and outsb orb (bad) (bad) (bad) (bad) jmp insb sbb in mov in (bad) lret dec idivl arpl shll cmp mov xchg lret inc psllq push pop sti adc pop mov mov inc sar rclb gs outsl imul js xlat and sub les in mov fsubrp mov dec sub inc jmp (bad) (bad) (bad) jmp cmp mov jmp dec ds (bad) icebp fcomps hlt (bad) (bad) lcall and dec sbb in ror adc sub jae sahf jno push stc mov insb enter (bad) xchg (bad) jb cs add mov in mov or int3 je cltd jo ss sbb shrb sub mov sahf repz mov pop mov leave out aaa std mov xchg daa mov addl lcall rcll (bad) (bad) incl stos cmp neg mov or pop and mov lcall in pcmpgtd mov lds dec push aam negb addr16 lock inc push (bad) (bad) (bad) fbld in (bad) cmp outsb mov das outsl add xchg lcall mov andl push push dec lock and stos xlat fsub jge repnz imul aam test jge and ret imul inc int iret sbb sbb sub daa (bad) (bad) (bad) decl inc leave sahf les daa (bad) test inc push jns jae clc push mov mov (bad) (bad) decl mov dec add inc xor cmpsb (bad) fldl pop mov dec mov (bad) (bad) (bad) (bad) cld mov mov paddusw ds adc inc jle sti jbe (bad) fcomp adc cmp (bad) fisubl test lret sbb push cmp xchg test (bad) (bad) decl fwait xlat push mov push mov jmp icebp or adc (bad) sub inc cli cmp inc pushl lcall das jno addr16 lahf xor subb xor pop int cmc (bad) (bad) cmp xor fistp and inc push nop and mov (bad) (bad) ljmp pop cs mov mov mov pop sar mov or orb cltd hlt push mov pop mov outsb lahf mov (bad) (bad) fdivs add cmpsl fldenv xchg ja rcrb mov lods mov xchg into or (bad) ljmp sub inc aas bound jl mov jge icebp lahf dec mov (bad) (bad) (bad) call push dec mov enter ja or and inc fnstsw or popf cmp scas fadd fisttpll pushf mov lret dec cmc pop xor ljmp adc adc mov jnp mov aas (bad) (bad) (bad) (bad) fstl add lods mov sub outsb sbb loope int sahf dec cmp jbe jp xchg lods or jmp popa cmp mov loope lock std mov inc push pop and dec add adc lock push (bad) (bad) (bad) dec call mov repnz mov test leave pop stc mov push out iret jg (bad) decl jp ljmp iret mov xor dec and mov leave sbb and mov push xor mov sti and xchg (bad) add adc push mov incl jmp xchg adc ret fsts pop bound sub icebp std ret (bad) (bad) decl lock ret sub lock xor pop outsl repnz and jnp sbb cld ljmp jbe jno or mov outsl push (bad) (bad) (bad) jg incl nop ret mov sbb loope mov push cmp mov out (bad) (bad) decl pop jg xchg aas mov cmp mov jns pop aad fdivs xchg jae mov dec push dec aaa pop lock cltd cmpsl pop gs and add scas mov arpl pop popf cmpsl pop dec mov (bad) (bad) (bad) inc loopne sbb loopne adc or call xchg adc jl enter (bad) (bad) incl ret mov rorb pop test add imul aaa xchg fsubs pushf into push (bad) incl xchg jnp out pushf scas jmp adc xchg and movl loop add xor mov jnp dec inc xor addl out out mov and out nop dec gs sub pop mov fisttp (bad) push dec and lods addr16 bound (bad) sub fcoms rorb xchg pushl ret inc cmpsb mov dec push cltd jmp sahf cltd in (bad) (bad) (bad) (bad) ljmp xlat push or pop iret adc pop outsl cltd fs xchg outsb pop fs sbb movsb (bad) decl sbb jecxz mov push xor (bad) (bad) (bad) jg xchg (bad) cmc lds fs faddp inc sbb imul (bad) decl rcrb leave mov sbb jbe test in jb aam jmp inc mov cld fwait outsb jmp or mov push into add cld incl jo mov sub hlt ret (bad) decb push jecxz inc adc pusha fdivp xor lret mov inc test ljmp mov pop jnp call add dec push stc scas in fcmovnb (bad) (bad) (bad) jmp push sbb jp sub add scas or mov js or leave fwait and (bad) ljmp dec jl xchg cltd push mov test adc (bad) (bad) cli test aaa and bnd fs call sarb icebp pushl push mov xor pop jns outsl divl les call cmp pop dec leave or and and jo lock sbb adc (bad) (bad) (bad) cld pop cmp test fisttpll or out daa xor inc push mull dec neg idiv (bad) pushl sbb adc nop xchg cli pop movb loopne fldenv mov sar fnop mov adc out xchg jns out cmp and xor stos stos inc cs mov subl rcrb ljmp (bad) dec jo cltd xor scas popf adc cmpsl inc test (bad) (bad) jg inc sub test decl aaa pop repz adc ljmp (bad) jg dec cs dec ljmp jle xor (bad) nop sub and dec les or mov (bad) (bad) mov mov push addr16 or inc sbb fiaddl adc sahf jo inc cmp (bad) call dec (bad) mov (bad) repz fadds (bad) (bad) jnp mov pushf dec jmp push (bad) push fldl xchg (bad) rcrl or (bad) (bad) inc shrb cmpsl xor xchg or inc iret xor cmp stos outsl jbe sub mov mov cmp jg into (bad) mov stos mov lods xchg movsl shr jo loope (bad) (bad) (bad) lcall insb rol cmp cmp jle dec inc pop push adc outsb ja xchg push icebp sbb stos inc push jnp (bad) (bad) (bad) ljmp cltd aam movsl mov pop mov add xchg sub mov xlat jmp inc aas in jns push xorl ja jp jae ss in int3 movsb mov (bad) (bad) (bad) cmp data16 inc cmp in fneni(8087 ret mov (bad) negl std mov call scas iret fldcw (bad) mov and scas dec mov movsl cmpsb inc pop mov into jmp adc sahf sub je ret push push dec pop push mov lea mov arpl or jg mov hlt lea mov (bad) (bad) (bad) mov push dec mov ficoml notl push add scas or sbb inc adc and jns cmpsb or add xchg (bad) in cwtl das in repnz in (bad) (bad) (bad) inc loop fs ret mov add shlb mov mov addr16 inc (bad) (bad) (bad) push iret into mov dec iret inc addr16 adcl in sub out in dec xor push jle (bad) (bad) jmp in out aaa xchg dec imul mov insb push mov lret xor or sub jae xor (bad) (bad) (bad) jg jno insb sbb fsubrp xchg fwait dec lret enter lods xor leave (bad) (bad) pushl std push mov pop ret sbb test sub in lret jl lcall mov cmp pop cmp jl push and cmp loop testl pushl mov fwait gs jmp (bad) jo cmp clc (bad) ljmp ljmp cwtl pop xchg pushf mov pop pusha arpl call fstp dec sar (bad) ljmp ret or fadds adc outsb mov mov arpl push repz (bad) in (bad) (bad) (bad) fdivs push ljmp loop push inc push mov cmp repnz sbb lahf add push enter lds decl mov jno lods int ret (bad) jg psubw mov jmp lea pop push push jmp pop hlt mov sbb dec cmpsb mov outsw cmp (bad) (bad) (bad) call jae test pop lret mov dec push jg jp lods scas dec clc adc add daa cli mov (bad) lcall leave inc stos das aad push sub dec dec xchg mov jne cmpsl int3 xor mov out xor ss test (bad) (bad) push (bad) in mov dec aam ret incb es hlt ror and (bad) (bad) (bad) inc mov imul (bad) std (bad) dec std dec ret out adc int shrl aam (bad) ljmp shlb push (bad) xor fsubp fcoms cli lcall mov mov pop fs cmp xchg jb jns jae (bad) ljmp sahf mov popf mov sub test js,pt and add test sbb lcall push and inc mov sub add je lock negb incb cld fisttpl ljmp xchg push and (bad) (bad) incl push add shl js fnsave (bad) or mov ss and and and mov in cmc jg lcall mov cmpsb jl sub jne mov add pop cld das adc out int lea cmp dec mov (bad) stc decl mov sub test jno push sbb mov pop addb push and sbb add inc (bad) shrl or (bad) lcall arpl xor mov cld mov fcmovu mov (bad) (bad) xor (bad) mov fisttp orl mov int3 rcll push lret ja xchg pushl std decl jle (bad) mov add cmpl popa pop push mov jecxz pop (bad) stos (bad) (bad) (bad) pushl add lods cmp push inc std jns and divl outsl pop fisubr movsb ds (bad) (bad) (bad) pushl xchg aaa movsb inc cmc scas test es (bad) pop cli mov loop insb out fnstenv nop sub xor mov (bad) (bad) incl sahf mov push mov pop sbb repz fiadd (bad) test jg mov push popa xchg fnsave mov das pop push jmp or lret adc shlb out or arpl int3 nop popf sbb (bad) incl pop cwtl lea bound or jno xchg push add aam and aas icebp (bad) (bad) (bad) (bad) mov ret icebp enter adc invd lret lods (bad) shr or into (bad) push mov (bad) fcomip push sub jbe test cmc xchg mov pushf push pushf push lcall cmpsb (bad) (bad) cmp adc rorl lods icebp mov leave pop mov (bad) (bad) (bad) out and mov or fcmovne mov loope nop xchg dec sub xchg movsl (bad) pushl mov dec sbb fistl jg inc inc outsl cli cmpsl sub and sahf mov fnstenv (bad) jg incl je repz and loop or dec dec out cltd lods cmp (bad) (bad) (bad) in scas adc nop jg stos sarl lods shrl loope push call xorl (bad) ljmp mov adc add mov push pop jl (bad) (bad) fstpt lret js jmp dec cmp push or frstor lcall push xchg xchg mov pop in sub sub mov mov ret enter (bad) in nop mov or dec cmpsb ja and (bad) (bad) (bad) stc das lret out mov add sbb push mov cmp enter es (bad) ss insl imul pushf jbe fisubrl ss aam and cmp and clc xor (bad) (bad) (bad) (bad) cmp pusha fcmovne add xchg or push jp rorb test movsl dec outsl (bad) (bad) (bad) jmp movsl inc cmp mov jnp je int (bad) out adc cmp test scas push call xchg movsl mov adc adc jb pop xor daa sar (bad) (bad) incl inc push (bad) pop pop flds divl fmull inc sub or (bad) cmp fs mov jne mov cmp rcr fdivrs dec subb scas bound (bad) cmp call mov imul test mov cmpb cmp sub sbb hlt loop rcl mov js and movsb mov xchg jns sub je push mov gs incl ljmp leave push jne jns stc loop lcall sub imul jo (bad) cli cmpl xor jo (bad) out out sti push std (bad) jg or clc mov inc ja (bad) or jmp push sbb iret outsl clc call outsb push and stc xchg xor fmuls sbb jae (bad) (bad) (bad) decl xor ret and fprem bound (bad) jns xchg pop sub (bad) (bad) (bad) mov push call pushf ret sbb jnp mov cmp jg mov in mov lds into jnp or icebp inc add or repz enter mov incl cld lcall in push cltd test pop pop sarl (bad) incl out pop jb lcall mov arpl jno lret pop (bad) (bad) (bad) ljmp lret mov add fisttp dec mov adc pop aas lock mov pop (bad) (bad) (bad) pushl out cmp popf scas cltd hlt inc and es push push je mov jl test in jle (bad) (bad) incl add ret and mov (bad) add mov inc jb xor test cli (bad) (bad) (bad) mov pop pop test mov xor cmc pop arpl test (bad) (bad) (bad) incl clc rclb cltd nop xor mov mov call mov push int3 xor (bad) (bad) (bad) jmp dec xor mov (bad) pushf nop (bad) sahf cltd dec scas shl (bad) lods shlb cmp cmpsb mov lods lret sbb rolb cmovs inc jns push mov dec fcomps (bad) (bad) call adc dec in aam sub rclb inc or and stc xchg jle rcrb adc imull push cltd push fwait test mov (bad) lcall and mov jle mov popa in aad lds fcomip call lock dec jmp sti cltd test fdivrl adc addr16 (bad) (bad) jmp insb push sahf pusha xor cs aad daa ret (bad) sbb push scas jl sbb fnop gs dec jp idiv ljmp scas sbb movsb aas mov sub orl (bad) pushl inc jnp mov jo add out sahf sbb sbb (bad) decl ds lds xchg or or cmp cmp cmc sbb pop in jmp pop sti mov je (bad) dec xlat (bad) (bad) (bad) movsb fistpll or rep xor push cmp jne lret ljmp jg fwait xorb push loopne sub add in subb dec add loop (bad) mov shlb decb cmp ljmp in cwtl int lock inc ret inc inc sub mov (bad) jl stc ret or (bad) fistl xchg adc or nop js jbe xchg mov fild mov mov pop out (bad) jns mov or aad popa pusha mov movsl and (bad) mov jmp and fmulp fsubrs ljmp cmc (bad) jae rcrl xabort (bad) incl fmull add int ss lods push repnz test ljmp enter fdivrs (bad) jecxz or imul ljmp push loop mov mov jle repnz adc call xlat stos pop jne dec xor (bad) (bad) decl imul sbbl pushf push jle cld nop or test lcall and mov (bad) push clc fdivl (bad) (bad) (bad) decl jns int cli sbb addl repnz aad or dec lock leave cli (bad) jg addr16 push cmp push adc out adc (bad) incl stos cmp in hlt enter xchg jg aaa dec (bad) arpl lods or ret xor mov mov lcall sbb cmpsb in fwait addl (bad) (bad) push add push push xchg (bad) mov movl bound cs daa out movsl dec cmp (bad) (bad) call sub fs sub les cmpsb push push call ret inc sbb mov (bad) call mov cmove and imul test (bad) jg (bad) mov add push test mov jb das (bad) mov call iret dec mov push popa mov rcr cmp sbb xor nop (bad) jg dec jle dec (bad) cli lock xchg cmpsl cmp sar les xchg fstps decl sti mov clc ljmp inc jbe gs (bad) (bad) (bad) mov repz mov mov inc out push sub movsb mov (bad) (bad) decl push adc cltd mov lock push pop imul loope pop loopne std loop dec (bad) (bad) jg dec std sub jns sub lods cs push cmp pop lock clc mov xchg mov inc fwait dec sub aam sbb repz (bad) (bad) stc pusha and fstl add cwtl xchg pushf mov push inc mov outsl or (bad) (bad) jmp add in (bad) adc add inc jbe jae lock ret (bad) (bad) (bad) ljmp sarl and cli sbb lret scas pop pop repz jbe (bad) (bad) (bad) call add mov test add pop xor fisttpll rcl cmp insl mov xchg lock (bad) jmp in push jbe inc add sub and xor mov (bad) call xchg inc imul popa fstpt call movsb mov pop std (bad) jmp hlt dec mov xchg mov sbb mov lods inc push mov (bad) (bad) mov (bad) stos sbb ljmp xchg pop jno sar (bad) (bad) inc daa cmp jl hlt out insb fwait dec or add lret mov and mov lcall (bad) (bad) (bad) (bad) stc xchg int3 xor adc sub icebp ds xchg repz pusha push cmp lods (bad) (bad) (bad) inc mov inc clc adc push aam data16 imul sahf js leave int (bad) (bad) (bad) jmp push (bad) lcall jno aas pop mov jl (bad) aad sarb mov and xchg cs pop add pop outsl xor stc or pusha nop (bad) (bad) (bad) (bad) (bad) (bad) cmp dec out inc inc sub inc ret stos fisttpl out loopne mov icebp rcll (bad) (bad) ljmp sbb loopne xor out (bad) leave add xchg imul push movl lret testb jmp (bad) jmp lret out addr16 lahf or xor sub stc in lea hlt adc or mov xchg push jp sub xchg pop imul nop (bad) (bad) jmp dec dec repnz insb mov and push lods push imul pop call inc (bad) (bad) jg inc lret test dec sbb std repz xor mov lcall (bad) (bad) (bad) (bad) push add mov insl sbb pop inc in jmp pop ret jne icebp ss pushf mov call imul adc fstpt popa (bad) (bad) lcall inc inc xchg ljmp push dec or stc rcll fmul outsb js (bad) cmp scas cmp xchg shrb and mov push (bad) cli adc lret jp or cli xor ljmp push stos mov cmpxchg fidivrl pop sub loope mov scas pushf xchg pop push (bad) (bad) (bad) jmp aas and out loope adc jle in cmpsl push lods scas imul xchg sub lds sbb fldcw (bad) (bad) (bad) (bad) aas inc mov call inc mov sub (bad) int lods inc test stos (bad) (bad) (bad) ljmp or add stos jo sub pop in mov xchg insl dec addr16 (bad) (bad) (bad) jmp inc int3 jnp add add insb lods pop imul cmp xchg jmp adc jb lods stc incl into mov add je xor push xor cwtl jp (bad) pushl push xlat sbb pusha sub push aaa aam outsb rorl or das rclb jmp rorb scas fdivr pop mov incl das test hlt dec push xchg or out adc mov (bad) (bad) (bad) (bad) fmuls add outsb add xlat sub test hlt mov fdivl scas in jmp decl cli call and loop scas in arpl mov mov jbe push fisttpll sbb fs gs adc mov lods xchg dec adc pop or lods mov decl bound fmul push jle xchg mov imull xchg push popa jb pop (bad) (bad) (bad) (bad) out popf mov in xor sbb jb push cmp hlt sahf in mov jno (bad) (bad) lcall rolb (bad) mov and outsl enter push (bad) (bad) (bad) jmp iret addr16 xor jmp xor rcrb sbb imul (bad) (bad) (bad) jle cmp sub pushf xchg negl add pushf or push push cmpl adc incl pop in sbb std push cmp pusha dec pop out sbb in out in out push in call mov fbld cmc (bad) pusha mov xor xchg ss (bad) (bad) jmp pminub or fildll mov outsl je add lret mov je or and and (bad) (bad) decl ret rolb sti sub jge,pn push jg sub cwtl (bad) stos mov push out (bad) (bad) pushl sbb jge adc jno dec xchg fchs leave les add (bad) (bad) (bad) cld rolb mov cmpsl pop inc or cwtl fidivl enter add mov out lahf aad in stc (bad) (bad) (bad) (bad) sti cmp popf pusha xchg imul lcall add pop daa push insl (bad) (bad) (bad) (bad) mov das cmp cmp fs (bad) fs or pop adcl (bad) incl add push cld jmp aas and fwait popf xchg xor test or jne (bad) cmp mov pop sub int3 out mov jbe cmpsl cltd cmc clc xchg std jp (bad) (bad) lcall pop aam (bad) cmp inc stos dec les test xchg push (bad) icebp jae incl fcomip cs rorl xchg mov and fild dec mov or cli add and jno (bad) mov es in push (bad) (bad) (bad) dec movsl inc clc push lcall cmp or in dec cld decl negb mov adc enter loope cwtl adc mov mov sti gs lcall inc pushl cltd pop stos and divl ret lods ljmp imul fisub sub (bad) ljmp insb inc xor jmp add repnz out in in pop inc roll (bad) (bad) ljmp xor mov inc add mov ret sub jae notb cmp (bad) (bad) mov and mov (bad) xchg and xchg xor push mov and (bad) (bad) call sbb ljmp dec in movsb push repz rcll add sbb (bad) mov aam cmp adc jo jle dec outsl fwait cmp jnp mov out mov ss outsb mov jbe pop and sub mov (bad) (bad) (bad) (bad) fldcw (bad) push shr xchg xchg sti and subl and mov in (bad) (bad) (bad) (bad) decl mov mov aam mov roll lret mov aam iret std repz repz (bad) (bad) mov pushl insl cwtl es (bad) sub inc push shr pop adc (bad) (bad) fisttpl adc and push in jl mov std xor test pop (bad) out (bad) (bad) (bad) (bad) fmull sbb pop xor jno and out mov adc ret fiadd adc (bad) (bad) call mov sbb mov lret inc arpl insb ljmp ljmp sbb mov std adc add cmp lahf xchg or inc lods mov clc (bad) inc mov (bad) push dec das push sarl dec (bad) decl xor mov inc adc (bad) (bad) (bad) (bad) (bad) incl ret mov push (bad) int add movsb aad xchg shlb aaa push rorl (bad) (bad) ljmp lock fcomp mov into fisub xor scas jecxz sbb xchg data16 loop sub sar sbb (bad) adc arpl iret into jge dec push sbb ss (bad) jnp (bad) (bad) (bad) mov insl and test dec fwait jmp out lret push mov jno (bad) ljmp es sbb shll push pop les xor mov (bad) jmp add inc pop movsl mov dec imul stos (bad) das cli push and or and test cmp sub bound mov cld dec fcmovnu in cld mov (bad) jmp jb sbb push leave jmp pop pop inc jns loop push out js arpl push inc push push mov cmp jg (bad) sti sbb add mov inc lret jo mov pop mov (bad) pushl icebp cmp xchg inc test jp inc test decl pop jg test pop out xchg dec mov lcall (bad) sbb jl out daa and fsubrs push lcall mov or lock pop sub bound lcall (bad) dec sbb and aad je cmovle aas (bad) pop xor xchg fs cld hlt (bad) (bad) (bad) js mov mov inc push xchg mov inc arpl inc mov jle and (bad) fcomip fcomip adc adc cmp (bad) into rcrb push dec cmpl (bad) (bad) lcall aam jmp jae mul aam jns push stos add ds xor mov (bad) es divb ljmp mov out jne sti bound dec loopne fbld push sbb cltd mov or xchg mov es jmp jne xchg (bad) les test mov jb adc daa sbbl xor fbstp js xor out add insl ja sbb orl outsl adc (bad) out mov sarl movsb bound dec jnp mov incl stos js pop push sahf popa (bad) push add mov mov and xchg mov insb cwtl push xchg (bad) jmp dec (bad) or out mov lret es (bad) das ja mov jl xchg sbb fs das mov and loope push ret icebp les (bad) (bad) (bad) incl add xorl mov imul out stos mov in dec jg mov (bad) jmp imul mov repz decl add xchg push sbb push es lret push push stos sbb jno lret cld (bad) (bad) inc mov js pop dec lea pop out pushf insl add mov xchg add jne sub dec (bad) (bad) call push addr16 add xchg inc cli rcrb cltd enter aam add test (bad) jmp mov lds test scas cli scas jne inc and imul pop jle pop loop fistpll je push lcall lcall adcl fsubl mov popa lock mov add (bad) (bad) ljmp sub (bad) jo rcrl jge or mov jnp or (bad) (bad) (bad) incl mov fstps jno lret push push mov sub fldl addr16 in push aad (bad) jmp popa (bad) rcll inc enter add mov out mov (bad) (bad) jg cmpsb add xchg push mov ficomp or fnstcw sub sub mov inc in std mov jecxz sub jle cmc or fnstcw sub jb mov mov push mov sub push xchg mov iret jmp xchg in add fldl adc add fucomi push jnp push add mov out sub fnstsw ret (bad) (bad) inc cltd adc adc push sub out pop mov out idivb and lods push cmp (bad) jg je insl fimul cmp pop pop sti jge cmp ds (bad) (bad) lcall lds or in mov xor dec or (bad) (bad) (bad) (bad) dec xor dec lahf loop andb idiv sub jle jo mov xchg pop xchg and cld pop (bad) (bad) (bad) jmp adc ret sti leave sub mov enter in nop xor fnstcw xchg jle (bad) (bad) incl xchg sar (bad) scas ficoml inc dec int xchg fldt jl adc fistl out jp dec test enter dec aad push xor fildll nop mov loope bnd lfs mov repz shlb jb (bad) (bad) (bad) fcomip rol and sbb adc xchg aas lods fmulp lods orb imul (bad) (bad) (bad) jp (bad) fs or sub lea push imull mov jp mov (bad) (bad) jmp outsl rorl test outsl andb jmp aaa fisttpll fistl arpl mov (bad) (bad) (bad) call outsl decl pop mov xor shlb in push into mov cli decl inc div pop push out mov ja mov mov push popf lret rcl test sub (bad) lcall and mov lods sbb sbb cli sub sub mov fbstp orl mov aam mov lret (bad) (bad) (bad) ljmp xchg ss mov dec lock fisubr sbb out (bad) (bad) incl (bad) and fmull cmp arpl je das mov jbe scas cmp lods orl loop (bad) (bad) (bad) inc push daa sbb nop mov loopne stos dec or add sub sbb fildll es sbb std (bad) mov (bad) mov daa mov sub dec mov pop test dec inc inc push push sub (bad) ljmp xchg cs mov xchg sub and (bad) and call push mov lahf jae xchg cmpsl sub addr16 mov jae js pusha (bad) (bad) (bad) (bad) jmp movsl mov incl jg mov jne mov or fincstp cmp push lock mov pop loop pop push push (bad) mov add xchg inc (bad) lock push or jmp negb addb fisttp out dec out cmp push (bad) (bad) (bad) out (bad) add fidivr or add mov and push sub mov aad cmp pop xchg sbb (bad) lcall test pcmpgtb ljmp inc nop xchg mov sahf xchg mov xchg xchg ljmp lahf lods cmp imul mov fs push (bad) cmc or jo jae je cmp mov mov jecxz (bad) jne out cs aam addr16 mov pusha data16 pop pusha mov les enter jae (bad) (bad) (bad) push jge (bad) pushf dec mov pop aaa movb xchg adc leave inc sub pop sub (bad) decl sbb cld divps ret adc jo push and sub test mov (bad) (bad) jg int insb jecxz mov in adc repz ja,pt jmp adc pushf mov decb inc inc inc push xor xchg lods test stc cmp test jne cmc mov (bad) jg decl rcrl das int3 push lret movsb and add xchg and xor add sub mov sarb cmpsl ficompl cmc mov stos (bad) jmp xchg inc call or dec xor jg dec sbb add js insl push hlt stos adc pop mov into (bad) push jg fstpl dec sub jb push js inc test or (bad) (bad) (bad) (bad) call push out iret les pop mov dec outsb repz sbb xchg mov stos call adc out (bad) rcrb pop lahf xchg ja ret adc mov (bad) jg (bad) mov daa add push xchg call mov cld pushl repz stc mov mov xorb (bad) decl push xchg addr16 jle ja ds (bad) xchg or jbe pop hlt (bad) ljmp cmp inc jle je je adc jecxz dec in jle cs jno xlat mov int dec scas in das jp popa push (bad) (bad) (bad) push test lods push cmp or or (bad) lods pop and lods xlat mov (bad) pushl dec pop mov or ds outsl push cwtl sub jp and (bad) (bad) (bad) incl pop sbb (bad) scas imul repnz int3 pop popa in jp je and insl push jmp pushl pop popf xchg adc dec dec lea (bad) (bad) (bad) push (bad) mov (bad) mov inc (bad) fisttpl push mov int lds xor sub (bad) (bad) (bad) jl mov pop (bad) leave stc popa jne in cs pushf push imul clc int3 clc out dec pop (bad) incl (bad) sbb fadds call test ja lea daa js (bad) ljmp lcall pop cmp mov icebp dec out sahf cmpsl jnp loopne (bad) lcall ljmp and xchg rol adc js test xchg icebp int3 jmp (bad) lcall into push ret xchg inc jle cld jecxz cmp xchg ljmp cli mov rdtsc js ret (bad) (bad) mov nop test rolb cmp test or and loop test inc insl popf (bad) mov lock in roll push dec outsl sbb incl ja cld popf fnstcw (bad) jno mov (bad) incl xchg dec sbb mov addr16 mulb into cmp xlat and test jmp fiaddl jmp fistp je mov xchg (bad) fcoms (bad) (bad) (bad) jnp sbb lock (bad) dec adc repz cli pop (bad) (bad) (bad) ljmp cwtl cmp rorb (bad) inc stos lcall add lock dec ja (bad) pushl stos adc dec fsub fdivs adc sub jecxz (bad) (bad) (bad) stc push cvtps2pd out mov rcrb jp cwtl in shl sub sub fmulp rol enter (bad) lcall mov out loope adc test data16 mov inc dec icebp cwtl sub xchg incl call sahf mul lods dec jb adc pop push repnz or lock (bad) push push pop insl mov jle and popf fdivrl push xchg xchg sbb xor loopne (bad) jle je test or sbb mov pushf mov scas push dec jmp mov leave inc scas adc inc and inc mov (bad) (bad) (bad) call leave pop outsl sbbl and pop ljmp add cwtl scas jb pop rorb push ja cmp (bad) pushl dec popa gs js idivl scas rcrb jmp sbb (bad) (bad) jg (bad) mov lret cmpb cmpsl mov push (bad) sub ljmp aad (bad) (bad) out pop rcrl push movsb cltd mov cmpsb pushf insb nop push cltd xorb inc ljmp xchg inc pop movsl aad cmp dec push push dec mov jl addr16 call loop xchg idivl and xor hlt inc fnstcw (bad) (bad) decl bound pop add ret (bad) jb fucomp xor push (bad) xchg adc (bad) mov hlt fwait mov xchg int sbb cld in std jecxz orb addr16 dec (bad) (bad) (bad) (bad) fisttpll mov mov js fsubl scas addb xlat arpl (bad) adc rcr pushf and inc and outsl (bad) out (bad) (bad) mov test mov mov sbb mov ficoml aam cld lods aas push cmpsb (bad) (bad) in ljmp jl pop adc xor ljmp push xchg pop stc push mov arpl mov jo (bad) (bad) jmp js mov out loop inc in das rolb pop aad sbb push (bad) (bad) (bad) cmp dec jne jae dec xchg pop leave pop outsl cmc mov pop addl push enter sub (bad) (bad) (bad) incl xor sub scas lock test stos mov fcoms push pushf and mov aaa pop lret mov call sbb dec jbe sbb dec inc mov (bad) cmp call xor mov and cmp push fistpl aad adc adc cmp (bad) call sbb and push sub sbb ljmp fildll hlt inc rcrb push or jae sub sbb xor jb push (bad) (bad) (bad) inc adc inc jno xchg scas xor pop movsb scas adcl sub cltd arpl cld mov popa movsb adc outsb (bad) (bad) (bad) dec add mov xor loopne dec mov mov mov movsl out add lcall ror sarl and xchg icebp arpl add add lock mov xchg rcl fildl imul xor lret push cli dec ficompl mov movb pop inc push lret xchg and (bad) pushl fldz arpl daa movsb mov adc adc mov mov pcmpeqb (bad) (bad) (bad) ljmp sahf lock sbb adc cmp not pop dec jge mov sarb cmpsl inc sarb (bad) (bad) (bad) decl mov test add inc inc cmp daa dec jb (bad) (bad) (bad) (bad) (bad) sbb das enter adc hlt aaa leave mov aaa lret out mov js mov (bad) pushl mov pop mov inc je mov jno out incb mov xchg push or (bad) decl dec loope xchg push mov jne cmovnp fcmove adc inc push pop nop dec mov cwtl jg and icebp jns aad cmpsl call push mov ljmp stos pop scas jno push outsl outsl mov cmp mov mov or mov daa aad stos scas sbb cmp mov adc mov (bad) sub mov mov adc cli xchg mov cltd movsb (bad) (bad) or (bad) (bad) (bad) stc mov push loopne out sbb xor pop sbb (bad) xor dec data16 decl lock dec mov or mov stc daa pop mov (bad) fist dec push or sbb jp (bad) pushl cmpsb out (bad) jnp cmc push add inc lock lcall cwtl sbb roll inc sbb out mov je (bad) xor decl or mov pushl sub xchg out mov sub add imul pushf es xor outsb sbb popf inc clc fisubl lahf pop bound (bad) (bad) (bad) fdivrl ret mov call jno add pop loope inc add adc (bad) fisttp add mov xchg push jb (bad) (bad) (bad) inc add mov (bad) push xor aas ljmp push btr sbb mov xchg mov or std sbb mov in jge gs mov sbb pop (bad) (bad) (bad) pushl movsb call popf sbb lds lds (bad) jle fdivrl cmp (bad) (bad) jmp xchg cmc push jbe test pop and iret and pop jbe mov mov fwait xchg dec fsts or adc (bad) (bad) ljmp inc xchg (bad) je rorb pop icebp decl data16 push and fcomi insb hlt loope mov (bad) (bad) (bad) jmp addb pusha lahf sub and repz les lea and cli jae inc call push or test xor push loopne (bad) push inc xchg push (bad) dec aad (bad) (bad) (bad) call jne pop popf iret lcall xor jbe int mov (bad) sub enter (bad) (bad) pushl jmp or pop aaa movl xchg pusha fildll ljmp repz push cmp mov cltd (bad) or popf (bad) xlat jns mov push sar (bad) mov test inc or jle ljmp subl push add or jnp addr16 sbb pop lea xchg xchg mov push cld (bad) (bad) cmp push enter pop fstpt cmpl (bad) (bad) ds stos stos loope lret xor xchg jl pop inc mov and dec test (bad) (bad) pushl (bad) outsb (bad) jns negl insl pop push sub jno call xchg gs cmp fsts in jecxz jno jg sbb pop repz (bad) (bad) (bad) mov arpl sarb adc push xchg mov adc and or mov (bad) jge ljmp adc mov mov mov sub pop aas popa ljmp adc test (bad) rolb sub repz inc xchg stc mov mov insb and (bad) and add and pushf lret push mov jg and movsb icebp jo fcoms sbb push cmp xchg push adc dec and repz sbb lods xor fiadd pusha cmp cld int3 lahf mov sarb pushl lret mov hlt xchg fsubrl sbb mov shl adc in jecxz (bad) call (bad) outsb xchg jo repz inc mov add cli or mov (bad) (bad) (bad) (bad) mov lods and pop and cmpsb and and shlb addr16 fwait sub (bad) (bad) (bad) incl mov and stc test fstpt sub scas clc (bad) pushl orl js (bad) push pop out cld adc dec fldl add (bad) (bad) ljmp jmp fsubrl (bad) sbb in jne ljmp cmp ss mov (bad) (bad) (bad) (bad) lcall outsl call xchg movsl loop sub cmpxchg mov lock (bad) fsubrs (bad) xor ret in and pop idivb sarl adc (bad) (bad) incl push mov mov or inc xchg adc icebp add (bad) (bad) decl cmp faddp leave (bad) lahf sub dec or push icebp cmp nop cld push mov jmp cmc loope ss xchg lret in cmp pmaddwd lret push ret inc shlb bound sti (bad) (bad) jg subl rorl cmp push push aaa sub jge cs (bad) (bad) call dec inc xor ja dec mov stos mov or sahf adc sti (bad) (bad) mov insb pop jmp lcall add insl fistl daa gs (bad) (bad) decl xchg adc fdivrl test sbb ja or fildll pop test (bad) pop fldt sar scas mov mov sub mov push movsb outsl (bad) (bad) (bad) incl dec mov push (bad) repnz mov dec cmp jge pop iret mov (bad) (bad) pushl rcr ret adc aad mov add add inc (bad) (bad) (bad) jg ds out jo andps or dec sub repz mov frstor (bad) call sbb mov push xor insl mov in sub and mov cmp aas xchg stos adc adc (bad) xchg xchg (bad) (bad) (bad) incl xor stc add cmp in xchg sahf ljmp xchg enter int outsb push mov cld call cld stc fbld test sub popa ljmp inc mov (bad) mov mov fist mov cmp dec pop mov (bad) (bad) pushl pusha cmpsl sahf or mov add iret dec jae and cli (bad) dec sarb inc jmp push xchg cmp ret (bad) push out or xor mov and xchg add fiaddl mov mov inc pop data16 (bad) (bad) ljmp leave and xchg cmp andb out pop cmpl and jno mov mov (bad) inc inc cmpsl (bad) les js sub fs les mov ja or fs (bad) adc (bad) (bad) lcall xchg pop pop mov jb pop xor fbld and bound (bad) jp xchg imulb lcall in add mov cld add into test jecxz mov test outsb jae or adc inc (bad) (bad) (bad) jmp add inc lock subl jle sti ds pop push mov pop push mov call add stos mov xor xlat jo jmp fwait lods sarl xchg cmp mov inc out add outsl pop xchg inc mov pop fistp dec push stc insl in inc pop sahf outsb (bad) adc (bad) fwait stc mov (bad) mov (bad) into adc add in idiv jg std add lds pop popf push pusha xchg or mov fcmovnb popa std (bad) jmp cmp iret addr16 xchg xor mov leave dec out incl ds add pop sub icebp mov lcall ss lcall mov lds add ljmp add aas out and push imul cmp (bad) (bad) (bad) lcall sahf push jp sbb arpl xchg sbb adc dec cmp mull (bad) (bad) pushl cmpsl sub movsl insb (bad) mov jmp and sbb jne in jecxz (bad) (bad) (bad) call lea inc push ja or inc sub or push mulb (bad) ret push mov mov aaa dec loop fs sub (bad) das inc cld xchg int sbb ss (bad) (bad) ljmp inc pusha mov stc jl mov mov mov lods ret sub fdivl xlat out mov mov xlat xchg out das dec adc cmc pop add out insb sbb adc sub mov (bad) idiv jb ss push movsb fmuls mov imul (bad) (bad) jp push pop mov addb mov jle or jne jbe into rorl (bad) (bad) lcall mov push rclb sub jmp adc int3 cli adc xchg xchg xchg mov incl xor leave mov fwait push mov lcall fdivl (bad) (bad) (bad) jmp push jmp pop adc mov das xchg fdivs aad adc mov (bad) mov rcrb stc out or sbb lds (bad) (bad) inc jmp push popa cmc or pusha cmp pusha mov dec in jl push movsb adc (bad) (bad) (bad) pushl sbb jbe je xchg loope popf sub add and ds mov (bad) (bad) (bad) ljmp sub jno lock scas add insl mov inc loop out iret mov push pop lds cmc mov jb push inc mov notl imul jbe mov (bad) jg jo sbb push jo jnp jnp dec inc jo pop inc inc imul inc mov (bad) cmc dec pop (bad) addr16 jecxz mov sub call movsb loop mov lret xor push pop negb cmp lret lahf push lock (bad) lcall push hlt jno fisttp adc ret sub aam cmpsl push enter cmp (bad) (bad) lcall or inc ja ja add movsl jecxz jo cwtl xor fnstsw loope mov mov ds nop (bad) (bad) (bad) push lcall jb pop das add movsb jle adc shll cmpsb mov je das add incl xchg jnp fwait inc sub mov or (bad) (bad) mov sahf xchg sub lods jle ja mov es mov test pop addb lock loope loop and movsb pusha (bad) extrq inc aam (bad) jg outsb sub hlt pop movsb (bad) sbb xor int3 cmp movsl les pop (bad) call cwtl mov cmpsl xchg aas sbb sub (bad) (bad) fcomip add ds dec scas xor subl dec push pop jbe (bad) (bad) (bad) jmp xor push mov (bad) or sbb aad mov out out push mov rcl (bad) (bad) (bad) cmp adc sbb xor pop mov fcmovbe mov (bad) mov test mov (bad) fs inc mov ret les sbb mov and (bad) (bad) ljmp fidivr cli icebp cmpsl movsl jae js xlat mov shl dec movsb mov dec int mov pop cmc (bad) out push push sbb sub xlat rcll (bad) adc fild jecxz mov mov xor inc pop (bad) rcrl (bad) incl repnz es cmp mov leave adc addr16 xchg (bad) ljmp or or xchg mov ss cmp adc fucomip (bad) (bad) (bad) (bad) ljmp mov mov sbb je xlat outsb mov dec repz ret (bad) call jbe sti push pop sbb out sub hlt imul icebp xchg sub daa push cld adc (bad) (bad) (bad) (bad) out push leave pop pop ret out maskmovq das cmp jne xchg inc add cmp addr16 ret (bad) pushl mov sub adc inc jecxz test (bad) and (bad) (bad) (bad) decl jp (bad) mov repnz xor popa shr popf adc daa dec adc (bad) (bad) (bad) lcall test cmp add xor es aad cld (bad) cmp (bad) (bad) (bad) incl inc loop int3 stos cs xor and cmp push andb push pushf add lods (bad) lcall call mov frstor adc lods xchg sbb loope stos mov sarl (bad) (bad) jmp cmp call add rcll popf scas daa out push sahf rcrb (bad) (bad) pushl add int cmp mov loope xchg lahf out fnstcw mov stos sbb sar (bad) incl popa arpl add add insb fsubp outsb out dec lock jmp ljmp je mov push outsl push aaa les jns insb out call iret fisubr xchg (bad) jmp cmpsl jmp or push sbb or in push (bad) mul xchg cltd aaa std (bad) dec aas mov pop pushf pop adc xchg leave add cmp in clc das adc jmp jg cltd jp loopne cmp adc cmp dec aaa (bad) (bad) (bad) mov (bad) fnsave lret lds outsl sar out pop outsb outsl cld pop xor ret sahf (bad) (bad) (bad) (bad) jns ja dec jg xor call or popf imul inc sbb into cmp lock (bad) cli rcrb out mov adc dec mov cmpsb pop jnp lds lock inc test aas sarb jl imul push push xchg (bad) (bad) lcall loopne and shrb and mov cmc or mov fsts mov mov mov and jp push cli xchg ja fs (bad) (bad) push dec dec inc into lea scas push testb test (bad) xor repnz adc mov lcall jae mov dec cmp cs push cs in test std mov cmp in sbb ljmp cwtl jp fnstenv loopne rcrl and add js mov adc (bad) call push cmp inc cli popf sbb mov test (bad) ljmp sbb adc mov sub call push adc dec mov loope out push mov sub roll int jecxz adc ror sarb fsub xchg sub cmp cmp pushf pop pop cmp xchg (bad) call or insl mov clc test sub in lods leave or (bad) (bad) mov adc jae jmp push repnz fs or scas xor (bad) (bad) (bad) out push stc insl daa and add xchg xor in cmp ss jne mov mov shrl sbb in (bad) decl ret jnp cmpsb adc xchg scas jmp (bad) add movb stc ja mov jns test push imul mov jl xlat popa (bad) int3 std cld aaa adc push fcoms jg xchg test lods pop add (bad) (bad) lcall cld lcall jecxz out fs xchg adc fstp cmpsl fld add leave addr16 in pusha add test xchg add mov jb pop dec xor mov (bad) pushl cld (bad) mov (bad) fisubl adc (bad) stc push fisttp or (bad) incl loope popaw lea (bad) jnp int3 repz popa push aad jl jmp arpl jb lcall sub jbe jne,pt (bad) (bad) mov ret (bad) (bad) jmp or stc and lds mov test add sbb or pop mov outsb sbb repnz jl mov inc inc cmp dec lods xor cli lcall cs decl sub lret or loopne xor (bad) or popf (bad) xlat (bad) mov hlt enter cmp ds xor (bad) (bad) incl fistp inc negl jno mov pop jno in lods icebp ret fimul fdivrs test xchg mov sbb xor mov fiadd ljmp enter (bad) jg xor out sub imul fcoml imul pop or (bad) in push call mov scas clc (bad) mov push jno mov popa icebp movsl jp xchg je jecxz (bad) fsubrl shr (bad) (bad) (bad) incl shlb loopne mov inc pop xor dec pop insb sbb mov sub hlt es (bad) (bad) jmp loopne xor aam and rcll mov data16 lret stc test pop and push cs mov cli xor mov xchg add sub jp cmp scas (bad) (bad) (bad) pushl and daa ja mov ss and sar adc rcrl outsl cmpsl pop aam (bad) (bad) call enter (bad) push mov sub sbb scas dec repz mov jecxz mov mov roll sbb ss mov xchg (bad) (bad) (bad) decl lcall sbb fidivr lods xor sbb jge sar (bad) decl jle pop xchg sbb or fucomip sbb mov ja xchg aaa xchg mov (bad) (bad) ljmp jge push or test dec xchg jb dec mov cld jmp rolb in pusha cmp icebp jg or xchg dec jne loope nop push insl jmp (bad) (bad) (bad) ljmp cmpsl add sub test add pop es mov mov ds (bad) (bad) call push jnp dec das xor cmpsl popf ljmp out lods stc ss (bad) pushl push push xor sbb fisttpl xchg fs neg push sbb mov sbb addl test (bad) (bad) (bad) jmp into push sub jl mov add icebp (bad) xor dec (bad) pusha xor (bad) ljmp mov out dec subl hlt (bad) mov fcoms xchg jmp ljmp pop (bad) jl or lds test add xor testl pop inc insb jbe jl and cmc (bad) jl scas jae (bad) or ja xchg fwait dec popf imul outsl adc loope in jbe inc cmp loopne jecxz mov (bad) cmp dec pop adc stos adcl (bad) (bad) (bad) lcall test scas xchg cs iret mov cltd and das mov imul pop xchg (bad) (bad) (bad) inc or pop push xor aas je pop mov cmp cmp dec pop adc pop sbb stc pop (bad) ljmp incb insb cmc fsubrs popl out outsl mov (bad) (bad) jmp in jle loop rcrb dec aaa xchg clc dec clc jno inc and movsb pop lock (bad) decl outsl pop cmp fwait push mov mov leave push inc ds popf fcomi adc (bad) (bad) arpl sub inc (bad) inc mov inc push mov fwait mov xor sbb hlt and (bad) (bad) (bad) inc scas loope sbb and push ja mov into divl leave rolb mov (bad) (bad) (bad) incl rolb add adcl rcrb stos push sub push sar and (bad) (bad) (bad) (bad) (bad) stc incb aaa insb ret dec lret (bad) mov in dec mov cld pop (bad) cli shlb adc xchg add outsl fsubl sbb leave mov pop cmp (bad) (bad) (bad) cmp xor mov cltd fcompl add mov aam dec lret (bad) (bad) (bad) call cwtl aaa mov push push sahf cmp imul push dec jmp push jnp (bad) (bad) mov pop and dec lret jl mov adc cwtl cld inc xor mov pop cmp pop (bad) or mov ret mov movsb inc add mov or (bad) (bad) (bad) call fbld jmp mov or push test leave aam imul ret push bound ret or (bad) (bad) (bad) ljmp insl in aam mov xchg mov xchg mov jbe push daa aam cmp imul clc or lock push into jge test (bad) (bad) in lcall jle mov sbb (bad) out cli call int add sub mov push inc sti mov loope xchg dec push scas mov shrb aam xlat mov mov jnp mov ljmp add mov iret or int cltd mov lret mov fisttp imul dec (bad) (bad) fcomip sbb xchg xchg icebp mul jecxz lods pusha lds adc das (bad) repnz (bad) jmp incl sbb mov test pop or dec movsb mov fwait jg xchg (bad) (bad) jmp mov mov sti negb ror dec sahf test jb mov scas mov sbb jmp add (bad) (bad) mov imul push sbb les stos mov sti pop fdivs mov clc fbld stc mov mov inc inc scas insb mov out push jmp ds adcb icebp cmp sbb aaa (bad) cmp incl mov jne pop jl insl cs mov (bad) (bad) (bad) push xchg cmp iret pusha xchg inc xorl nop fildll adc in daa mov mov sahf stos jmp aam pop scas popf add jnp fbld xor fwait xor icebp mov mov xor ss jmp std push xor in fisttp jg arpl xlat (bad) (bad) push rcr and and stos clc pop out jge stos lds xor (bad) (bad) (bad) jg sub out stos mov cld sbb pushf lcall sub sti push lcall dec dec (bad) rcr xorb daa push lcall mov inc lcall pushf (bad) (bad) out clc mov fidivrl sbb fcompp lcall out and (bad) (bad) (bad) lcall aas mov fdivrl shll add (bad) sub lock jle adc cmpsb xchg addr16 pop lahf enter sbb (bad) (bad) lcall pushf push sbb hlt repnz mov cmp (bad) std call loopne mov xor add push xchg xor cmp ret dec or (bad) (bad) incl and add popa pop stc in push pop mov cs jp jne jl cmc pop std (bad) (bad) (bad) decl fwait popf (bad) hlt (bad) jge or push lods push pop sbb sbb cltd das mov stos sbb hlt ljmp jp movsb movsb lcall xlat in dec adc (bad) lcall (bad) adc (bad) xor jo rolb xchg into aaa jmp or (bad) (bad) (bad) ds out loop or xchg dec outsb mov mov inc out inc mov ljmp (bad) (bad) (bad) fcoml sbb flds sbb pop inc inc mov adc (bad) (bad) ljmp inc aaa jmp lcall push xchg mov inc fwait cmp (bad) (bad) (bad) call sbb push and stos cmpsl les dec lret pcmpgtd (bad) (bad) pushl and es add pusha mov dec xchg xor repz mov and jg lock repnz inc lods fdivrp mov ds mov push pop push mov decl ds jp pop ja (bad) loop adc out push (bad) (bad) (bad) decl jp (bad) push retw cmp leave mov push and les out push repnz fstpt (bad) (bad) (bad) cmp test mov adc sbb in das mov cmp dec (bad) (bad) (bad) dec push pop mov sbb out or popf lods xor lock (bad) jmp mov bound and les pushf fcomp pusha sbb (bad) (bad) incl (bad) pushf or (bad) mov jae inc pop into loop mov (bad) (bad) (bad) decl lret sub inc aaa push mov ljmp add pop das and (bad) call out mov call dec xchg jne sahf xchg stos add push pop inc movsb dec xchg out je (bad) (bad) call pushf inc sub outsb xchg push cmp mov test sbbl lcall out or lods icebp js inc data16 sub and out sbb sbb negl pushf scas rolb (bad) clc inc pop mov mov int3 clc sub lock xor test shrl je dec out mov ljmp test sahf sar stos int cmp dec stos iret cmp cmp (bad) (bad) pushl inc daa lods pop (bad) cltd mov cmpsb mov adc xchg dec jb cld (bad) jg and scas inc enter push in orl (bad) (bad) (bad) jmp push sub adc scas js mov lock mov mov and inc xchg bound aaa dec js xor mov ficom addr16 ljmp xchg (bad) out dec mov push cmp mov ret mov cli pushl movsb inc dec out in add fdivrs (bad) (bad) (bad) call sub pop scas pop pop lock in xchg pop insb mov push pushl (bad) pop outsl jp lock ljmp cmp (bad) (bad) (bad) jmp adc fnstsw jbe jp inc jl fwait xor daa cmp push aad mov jp frstor push sbb and adc ja dec xor (bad) (bad) mov (bad) fldcw jg inc mov in lea pop cltd mov decl pop jno push xchg push and scas lock inc jbe jo jo mov dec inc (bad) (bad) (bad) (bad) mov jecxz jne jbe add mov push mov imul push jg sbb mov (bad) mov idivl ds cli pop cld aas cmp cs test cs out cmpsl dec out mov (bad) dec xchg adc dec cmp mov outsl dec or (bad) (bad) incl mov dec inc xchg dec mov int3 inc in je repnz imul (bad) (bad) call cltd ds mov es cwtl xchg test (bad) enter scas mov lcall mov jne call ret mov fs (bad) jmp outsb adc xor pop fcompl push cmp int3 mov outsb push sar call jb cli adc push in or jecxz push (bad) (bad) (bad) mov int3 mov pop icebp push sbb int cmpsl jle into notl hlt in mov jle dec (bad) (bad) (bad) incl inc xor mov mov xchg jmp xchg cli or add (bad) call push int jnp inc stos out nop fiadd sbb (bad) (bad) (bad) pushl out dec pop pop dec cld out push enter sbb push sbb jnp lcall stos and mov mov cmp mov out (bad) or incl jl xchg pop add push mov dec inc and (bad) lcall mov pop lea pop int xorl test mov scas lds movsl pop in sarl dec cmpsl (bad) call cld mov loop and and or jmp addr16 cmpsb mov lcall sbb mov jb cs cmp mov call pop pop es dec sub movsl or xor movsb (bad) insl pop rcl add (bad) (bad) (bad) (bad) in ret ja inc sub fistl mov je mov jbe adc jnp decl incl jns mov dec (bad) mov pop push dec (bad) int3 movsb repnz (bad) jg dec xchg mov mov push pop cmp clc out mov jecxz pop lock jns insl inc adc push jb cmp sbb sub xchg dec or test dec adc push aad inc stc mov iret mov xor (bad) stos (bad) incl add mov (bad) icebp cmp mov inc (bad) (bad) (bad) (bad) call icebp adc (bad) or mov (bad) movsb adc dec in pop xchg adc ljmp inc pop push loop pop es addl aad push xchg mov daa mov add call adc mov fdivrl mov jecxz push xchg in xor mov push enter (bad) (bad) inc insl out in mov or xchg jb (bad) mov fnstsw xchg xchg mov lea (bad) jmp faddl aad jl push ret fs sub aam mov adc lret jg,pn repz push scas mov ljmp add (bad) (bad) (bad) (bad) cmp aad test push mov pushf pop fcomps es (bad) cli inc (bad) (bad) (bad) (bad) mov dec repnz adc pusha mov mov std in and (bad) (bad) call adc push cmp fdivl cmp add inc jmp (bad) cmc (bad) call push lods mov in xchg or push mov dec (bad) testb or (bad) (bad) (bad) jmp repnz clc or pop jmp in jmp shl cld pushw mov sub (bad) (bad) ljmp insb push mov test and cmp decb lahf xchg or sbb scas insl in sub (bad) (bad) lcall dec test shlb inc add inc insb popa (bad) mov xchg add cmp dec mov xchg scas sub lods bound dec pop or xchg dec sub out aaa adc cmpsb (bad) incl mov pop adc pop cmc fstps (bad) out les cmc movsb jmp mov (bad) (bad) (bad) (bad) pushl add cmp xor jg fistpl and je jne hlt ljmp cmp jno add shl dec in (bad) (bad) (bad) inc mov dec test pop sbb push pop adc fdivl lea xchg (bad) (bad) (bad) push rcll mov ljmp iret mov pusha imul cmpsb cmp (bad) (bad) (bad) lcall sahf lahf popa jns pop jnp jl insb mov adcl mov xor jle fidivrl pop das dec mov hlt mov popa or xlat xchg mov (bad) (bad) call dec lods ds mov cmpsb cmp pop mov sahf mov mov xchg (bad) call std jne out clc ret ficompl repz sub hlt sbb aas insb in (bad) (bad) (bad) jmp or dec pop aas mov test adc sbb add xor or xor out and je pop fstpl fwait push iret (bad) fistp movsb lea cli pop loopne (bad) push lock mov ret repnz and enter fiaddl or add push dec xchg cmp mov es aam xor cmp inc inc xor jb jb push mov mov insb mov mov push (bad) xchg mov sub pop dec push aaa lea mov and jnp outsb xorl dec cmpsb push cs adc inc addr16 loope jbe mov (bad) lock stc dec push and inc test sti (bad) (bad) (bad) ljmp orb test cli fwait mov fisubr xchg rolb fdivr (bad) (bad) decl add insb int inc dec push in lock int and hlt mov (bad) (bad) (bad) decl xchg pop mov cmpsb movsb jl jno pop push (bad) dec push cmpsb pop jg mov inc jmp mov mov sbb xor push mov sbb stos jno cwtl (bad) (bad) (bad) jg into cmp lods sub xchg jno lahf dec ja test push test inc (bad) (bad) (bad) pushl jns mov pop (bad) sbb rorb adc inc mov xor cmc das cli push cmp int3 xchg lahf (bad) dec dec lock call or sub call (bad) (bad) (bad) ffreep mov adc sub jmp pop fimul cmpsb dec add (bad) incl inc push hlt cmc add stc cmc pop pshufw gs lcall mov shll mov adc (bad) (bad) pushl enter fadds js or mov xchg add (bad) (bad) (bad) pushl lret test and add push arpl dec aaa fistl mov xor jb ficoml decl xchg xchg mov or jnp mov add shrb adc inc hlt push mov push sub hlt jae (bad) mov xchg mov push inc xchg cmp xchg lret dec cmpsb loope mov scas xor andl bound (bad) jg mov lods loope test mov add (bad) call outsb push outsl call outsl xor les xor fiadd cmp adc xchg (bad) into mov xlat jg dec das clc (bad) lcall cltd sti inc push loopne js push jmp lahf lret scas inc (bad) fnsave fild loope sbb (bad) sub addr16 adc mov jg jbe inc pop push mov fucomi (bad) (bad) (bad) (bad) mov pop cmp (bad) fisttpll pushf xchg shll mov mov hlt call fwait (bad) (bad) call loop push push push (bad) bound ret push lds outsl mov decl mov adc rcll sub (bad) fcmovnu ret xor sbb js andl inc std aaa mov inc dec out (bad) jg jmp dec std imull jmp fstpl (bad) cmpsl adc lret dec pop ljmp pop jecxz mov repnz shlb movsb xor inc mul xor pushl mov dec cmp lahf lods add cld xchg (bad) sbb xchg pop (bad) (bad) (bad) call das sbb aam clc push pop sub add and repz jo (bad) jg call mov sbb mov inc push dec mov (bad) scas xor (bad) push clc mov push sbb or mov dec mov scas xorl jns loope leave in stos sub pop cwtl neg (bad) stc cmp jmp pop (bad) push jno jmp (bad) sbb (bad) (bad) (bad) fsubrl cld or mov (bad) push outsb les add push clc pushf add ret (bad) call popf aas pushf test test and aas jne jno aas jl (bad) pushl rcll test outsb xchg movsl std fildll add dec mov (bad) incl pop mov fstl dec or xor or and add mov mov leave in (bad) (bad) (bad) jmp stos (bad) push mov push out add xchg inc mov lahf add flds shrb xor jmp push jno fist dec mov mov push push scas push dec or jnp nop sarb repnz mov xchg test int lock sbb add (bad) inc out outsb imul and mov call mov pop insl lcall (bad) (bad) inc add popa loope dec sarb out jo push cmc daa mov sbb (bad) (bad) (bad) push and mov jmp mov lret push jne add jns fstpt (bad) (bad) (bad) jg mov lcall aad sub je add movsl rcll ljmp inc out mov push cmp mov xor xchg imul pusha mov xor sbb shl cmp fmuls roll mov mov mov push add push xor xchg scas daa mov add add (bad) jmp cmp sub adc or jo test jle stos mulb (bad) pushl js xchg pop mov sti jno insb or adc loopne lahf sub (bad) (bad) ljmp lahf jbe sub nop sub aad aas rclb das sub sub into gs (bad) sbb testb lret mov inc ss leave repnz les repz call fadd or cld push mov (bad) mov jg (bad) lcall jbe inc cmpsl pop push add mov push ljmp mov adc push dec lcall ds mov mov incl push insl fs jo cmp cwtl fisub rorb mov cmp lret mov xor or ret (bad) decl dec jno fdivl cld ret cmp pop xor lret (bad) dec insl inc adc inc xor imul or fcmovnb out jmp add (bad) mov sbb mov jge dec fs xchg stc or sub (bad) (bad) (bad) cli cmp shll jg push mov icebp lahf and aam (bad) pop xchg outsb sub adc add dec (bad) (bad) (bad) call int mov mov push adc cli sub stos (bad) jl fcomps sub dec std (bad) call mov imul lods int3 orl cltd cld cmp ljmp mov cmp dec xchg fld sub ds xor fcomip incl pop xchg pop in repnz cmp hlt loopne (bad) jge lods icebp ljmp push std test cmp add fwait stc dec divl dec (bad) (bad) lcall int3 fbstp test test dec sti mov stc icebp cmc adc mov (bad) (bad) (bad) (bad) jle jb lods cli and dec in addr16 in into lret bound and xchg jmp fwait (bad) loopne lret jl loop sbb or xor lods (bad) (bad) (bad) mov mov js adc ret insl fwait and xchg in sbb push call ljmp or mov loope cmp push loopne pop aas cmp jae dec idiv (bad) jmp ss xor xor adc inc es pop popl mov mov (bad) (bad) incl lret push jl cmp mov into and push pop push and (bad) lcall cld (bad) daa xchg pop loope cmpsb iret xchg mov mov ret sub pop pop inc out inc loop dec mov jb pop xlat scas adc cmpsb jp subb out dec arpl xchg ljmp pop pop add and imul fmull and xor sbb scas out arpl xchg fidivr aaa std iret sarl mov (bad) iret inc xchg add add stos (bad) ljmp fldt arpl mov lea loope adc mov (bad) ljmp or push lock insl push push repz pushf adc std icebp (bad) and decl mov sub repnz daa rcll or movb mov (bad) jmp fwait dec sub (bad) lock xchg dec xchg test mov and mov int call sbb cli xchg mov adc (bad) (bad) jmp call add movsl sub popa cmp in testl (bad) lahf jnp xlat xchg xor rclb fistl sub push (bad) ljmp stos jo push insb push sbb add inc jle ja hlt cmp dec sbb (bad) decl add (bad) push incl pcmpgtd add imul pushl adc lea mov mov push (bad) (bad) (bad) decl (bad) rol mov test mov popa call fabs pop push mov ljmp mov stos or or imul inc push imul fs jmp mov aam sub inc or mov adc lcall xorb (bad) ljmp (bad) push dec xor sub icebp fstp mov mov mov push (bad) (bad) out clc adc ss flds and adc add jle out (bad) jmp sbb adc js fwait push shll test int jo repz dec (bad) (bad) decl or jae sarl subl mov inc ret pop pop jns pop (bad) (bad) (bad) jmp les dec mov and pop (bad) div adc inc pop (bad) (bad) (bad) incl fild sbb fsubrs arpl inc addr16 and push aam aas (bad) (bad) (bad) (bad) (bad) cmc es pop fmul mov dec pop leave lods mov sbb xor jle (bad) int add push sub dec mov in pushf popf cs lds mov ds sub (bad) aas add mov call aam mov (bad) (bad) push or sti ds call xchg or add or addr16 (bad) je (bad) (bad) jmp or dec pop jecxz std or and (bad) out cmp pop hlt pop add or (bad) (bad) mov dec and addr16 fstpt test cmp mov decl jmp shrd sbb jmp ljmp ss cli (bad) (bad) jmp pusha xchg pop mov dec cwtl ret ds jns pand mov icebp (bad) ljmp lods inc incl inc loope mov pop inc adc or or push (bad) (bad) mov sahf inc in (bad) not mov add pop dec in sarb mov (bad) (bad) (bad) lcall sub (bad) imul test xchg and insl (bad) out pushf ret mov fsubrl dec add cli (bad) decl or sub aam sar (bad) (bad) mov (bad) repz xchg imul mov or (bad) xchg dec imul (bad) (bad) call adc aaa call inc inc imul cmc ss mov and push movsl (bad) (bad) (bad) call mov pushf imul add push fs test incl and push jne popf test ret stc mov sti cmp (bad) jp outsb sbb sub (bad) jb cmp or (bad) lcall sbb hlt xor xlat popf stc push mov mov push movq out cli mov add add fdivs mov hlt and mov (bad) (bad) (bad) pushl cld mov cmpsb out stos mov fsubr push mov (bad) mov (bad) xlat leave push dec push (bad) (bad) decl loope or js and fcmove gs push push call out mov or punpckhwd or pop je lcall push js cmc sbb jmp sub jns (bad) mov or imul xor dec cmpsb dec (bad) (bad) (bad) push and inc frstor or mov fiaddl iret rcll push and xchg pop cmp leave add incl in ret (bad) fisubl sub add lods (bad) (bad) (bad) mov mov push dec test push nop and sahf adc ss pop push pop addr16 out dec aad (bad) (bad) call sahf outsb clc pop addr16 loopne jnp add fadds adc (bad) (bad) jmp (bad) (bad) fmul inc inc iret xchg cmp roll (bad) or (bad) (bad) (bad) (bad) fucom fsubrp arpl aam inc mov sub mov int scas cld jnp add push jb (bad) (bad) (bad) (bad) jns xor xchg sbb cmc sti xchg lods loope pop adc int lahf outsb add jmp (bad) (bad) (bad) decl mov mov pusha pop or out fs mov shll loopne,pn (bad) (bad) (bad) push mov lcall mov lock mov jbe mov out cli xchg jns (bad) incl push inc mov sbb mov sub jl dec call mov or sbb adc ja mov jmp mov nop test xor push lret movsb mov pop outsb daa jo (bad) (bad) jmp pop das push in and mov pop sbb pushf adcl mov mov inc icebp xor sahf mov call mov mov (bad) lcall cld adc fwait xchg (bad) bound lcall push and mov push enter out fwait (bad) (bad) cli jbe popf mov cmp sub mov out sarb jg jmp sti pop xor ficom inc mov xchg ja div lahf fsubr sbb (bad) incl and imul mov out test cmp (bad) jg add cmp iret bound fstpt jo or pop (bad) incl icebp loopne imul jl mov leave repz sti lods and push (bad) jmp (bad) neg or dec jnp outsb fistpll add jo (bad) pop cmp or mov push jmp inc cmp bound jl mov (bad) mov mov jg push mov bound jecxz subl ljmp lret ljmp stc dec mov xchg xchg jae neg hlt push lret xchg lods rcrl sbb (bad) jmp arpl outsb pop lock mov imul loopne flds inc pop sub cmp bound aas xchg stc into inc cmc aad fidivr pop je call lods add fimul subps or (bad) (bad) lock (bad) dec sub add cld mov mov orl iret rcrl push dec (bad) (bad) (bad) call xchg mov out dec loope push imul fwait mov inc xor lcall lcall add mov jl cmc call inc shlb out mov incl cli mov push (bad) shl jecxz scas mov mov fs je sub mov xor rclb sarl (bad) lcall push lret shrl pop xchg pop jmp xchg mov xchg dec loop cmp dec sub gs subl ja jge int3 ds pop hlt out cli (bad) cli cmp and pop fisub or add (bad) (bad) (bad) (bad) jl les or add out push int3 ret leave and les or lods fs lock cli inc and scas ja cmp push cltd cmp ret and clc push (bad) (bad) mov ret cmpsl add ss mov fwait enter test (bad) cli push mov lea sbb dec lods add sbb sysexit nop or mov gs mov ret push call decl idivl std pusha add clc in cld pop dec cs mov xlat decl pop lcall leave mov ret mov out daa mov (bad) (bad) (bad) jmp inc jp popf rorb sbb js inc inc lods add pushf adc clc fistpl sti outsl (bad) (bad) sbb jmp or inc gs sbb fs repz arpl pop push shll rorb lcall (bad) shl (bad) call dec loope jle xor jecxz imul add les push mov fwait (bad) dec xlat sub sub fsub add inc fisub enter (bad) fcomip pushl cmp pop mov and lret lods xchg adc gs push jl (bad) (bad) pushl test cmp jb (bad) fist adc das fsubp or pop xchg test cmc out inc icebp mov sti push dec inc in roll sub mov inc cmp sahf jmp popa (bad) test in mov lahf jmp (bad) (bad) std mov xor add idiv adc rcll std in jmp sar (bad) lcall jnp jo adc mov (bad) shrl mov jbe in (bad) scas jae in jmp mov adc (bad) (bad) (bad) call js cmp adc adc jns mov pop cmp or std lcall sub cmpsb lea std adc aad in sbb out pop cmp ds lcall push push cwtl sbb into sub test movsl imul clc pop xor jo or mov push andl int3 sti pop sbb and xor inc add lds or fistpl lods xor dec and jne (bad) (bad) (bad) inc cmp and dec mov and mov push iret fldl add hlt repz jmp jae or jecxz out and pop or fst xchg mov push push mov (bad) (bad) pushl (bad) lcall cmp int3 das dec adc outsb add cs clc (bad) (bad) (bad) (bad) repz or push pop out mov std mov lcall cmp fstpl mov es mov decl push and mov sub rorl mov push mov sbb adc and dec stc ret fistl (bad) jo lret jmp mov cmp imul dec add pushl incl popa mov cltd add in addb and jg (bad) ljmp leave rcrb addl (bad) jb imull dec (bad) lcall sbb int popf or xchg push mov pop pop mov adc cmpsb outsb shlb popa out ret mov (bad) cli mov enter (bad) cmp mov out popf jne cwtl sub mov inc and repz jne xchg sub push int lock ss repnz jbe jle (bad) call inc jg pop faddp lock adc std or loop sbb insl cmp push mov (bad) (bad) call les add cltd mov enter js mov cltd inc sti inc loop fs (bad) (bad) fsubr push xchg push sbb test lret ds mov dec adc (bad) (bad) (bad) jmp in mov adc loope cmpsl push outsb cmp cltd clc mov int3 in (bad) inc xlat (bad) mov (bad) or jne pop outsb inc push fs ds addr16 mov cmp jg cmc rclb test jb sbb cmp call or push xor jge push icebp mov xchg mov xor sub (bad) pushl adc pop mull mov push pushf mov test (bad) jg (bad) in es mov jl inc jge jae int3 insl outsb jno jge dec inc xor pop dec jmp pop jo stos sub mov jl (bad) (bad) (bad) (bad) fsubrl sbb xchg call sub fcoml das add adc sbb (bad) (bad) mov (bad) in mov out mov es (bad) push cmp cli push sbb fidiv call mov sahf pop mov movsb (bad) (bad) (bad) jg and jp mov jne gs ds icebp rorl xchg call out lock jbe pop inc in add pop fist mov and ret daa and push ror aad mov or inc (bad) (bad) (bad) pushl in and (bad) call movsl cmp inc or mov or and (bad) decl cltd adc dec jns fwait (bad) xor enter imul arpl (bad) (bad) (bad) (bad) xor ss mov cmp faddl (bad) and mov (bad) dec es adc mov ljmp pushf test and and and dec sti dec and xchg mov icebp (bad) (bad) (bad) (bad) loopne inc inc lret adc jp out mov (bad) adc or or jg (bad) fbstp lcall mov ss dec pop or adc test xor sub mov add (bad) into out pop addr16 (bad) (bad) (bad) call pusha inc dec push push cmp gs sub mov call fadd cld pop cmp xchg dec xchg popa dec in mov rorl mov inc jmp xchg rorl cmp inc adc jg or dec xchg jle nop and cmp or (bad) (bad) incl loope xchg daa sub ljmp mov in daa xor scas pop or (bad) (bad) incl adc leave pop sub sub int3 sbb push (bad) (bad) add cld push cld (bad) jnp bound add loopne movsl lret cld cmp and jne dec hlt mov jg or int cs fcmovne cs xor (bad) (bad) (bad) (bad) cmp mov sub shr add push pop mov ja xor and lock ljmp pop pop in adc and add in cltd nop (bad) or or mov or mov mov gs jae outsb imul sub (bad) (bad) dec dec or lahf jo push leave je stc andl inc xchg notb jl lods (bad) dec mov mov inc mov jnp push sarb lods stc mov cs mov sub and push and clc (bad) (bad) pushl outsl mov and mov stos fisubl ficom jae scas cwtl (bad) (bad) incl add mov insl (bad) dec test mov push xchg xor insb dec insb xchg test sub (bad) jecxz xor cmc shr add cli jg inc dec inc add mov pop hlt (bad) ds dec clc (bad) (bad) decl push push xchg jno cld pop jb or in stos push push cmp nop ficompl mov ret sbb fadd in or jno jecxz push dec jbe add loopne jg add les test sub (bad) (bad) call in movsl lds add sub js repnz ret ja xchg jmp mov xchg stc pop outsl outsl hlt inc outsl nop jno daa leave dec mov js lcall cwtl mov orb inc lea aad cmc jnp in adc outsb cmpsb xor icebp (bad) (bad) decl adc test scas jl cld add (bad) mov testl mov fidivrl insb lahf scas pop out rorb mov sub sbb sbb xchg data16 jmp pop jno xchg (bad) (bad) (bad) (bad) std pop pop inc jno jmp les repz mov loopne ret dec ljmp cmp mov cs jb dec fimull das inc xchg mov mov into lock push sub loope jbe aad sbb jge cmpsl dec and mov jg (bad) sbb mov or push cmp xchg outsl (bad) rep ljmp xor adc or in inc rcr cmp cmp push outsl mov or ljmp inc pop loop aad aaa adcl mov push repnz adc (bad) (bad) call mov stos cs clc mov inc push mov pop push sbb sub (bad) (bad) fistp out mov (bad) je aaa inc xor adc mov loopne cld and cmp sbb sbb and sub imulb cs incl out sub imul sahf push (bad) (bad) (bad) jmp mov mov (bad) popf sbbl repz rorl gs sub push std pushl (bad) xchg xchg aad mov pop insl pop sbb adc (bad) addr16 mov imul adc xchg pop cmp inc pusha aaa sbb add frstor in mov jmp cmpsl sub xor xchg inc or fdivrl cli and gs sti (bad) (bad) (bad) incl adc sbb sub lods add jo jo xor pop mov out cmp xchg clc jecxz (bad) (bad) (bad) mov mov xchg outsl mov std or add lahf adc (bad) call sub sbb push stos cmp ss mov (bad) ja jl (bad) (bad) lcall movsl cwtl add enter cmpsl dec sub scas incb icebp pop push xchg fiaddl lea hlt cld dec popa xchg dec and scas outsb (bad) adc sub mov (bad) (bad) (bad) decl in test iret jle sysenter xchg std pop jmp rorl push sbb push mov in or fs push mov jmp cld mov ds or dec (bad) icebp mov test (bad) (bad) (bad) dec xchg iret pop xor scas (bad) iret xchg and dec jle inc loop xchg cmpsb dec mov fs jg (bad) (bad) decl mov cwtl notl dec fsubrp loop mov imul inc adc mov jmp dec inc xor or fld (bad) mov xor mov pop shr lock (bad) (bad) (bad) fstpl sahf dec aam dec sub in loop inc dec test icebp imul jb popf loope (bad) (bad) (bad) std and mov int jg adc mov out out loopne cltd push inc adc (bad) (bad) decl and sub mov out push lods out xchg int3 pop ljmp mov adc daa fisttpl ret pop jg push or mov jbe mov mov lock (bad) (bad) lcall stos and inc ss negb inc and mov sti daa cld out jg (bad) ljmp mov cmp mov pop dec fist sahf mov xchg fdivp (bad) sbb fcomip aad adc loopne mov mov cld inc int3 scas ljmp sub jp (bad) push push jbe test lods pop loope aam sub fistl push lock fxch jns scas ret gs dec inc cltd adc (bad) jg nop dec test cmp es movsl ror lcall mov or adc movsl pop cmpsb mov inc repnz ficompl fidivrl cltd nop and inc stc scas clc (bad) ljmp cmp sahf jmp xor lods aaa jae push and loope mov (bad) (bad) in aas push movsl je jnp pop xor les or cmpsb aaa xor xchg xchg add call pushw scas sub add cmc in push mov divl jno add (bad) pushl mov ficompl sub sub stc stos jns out repnz (bad) (bad) jmp sti not jg or (bad) jmp xchg les fidivr cmp adc add pushl push sahf loopne xchg mov aas lock jle lods xchg mov popa or (bad) (bad) (bad) (bad) std add jg jp push in inc pushf arpl pop iret ficoml cmp xchg roll ret mov mov lret mov fadd lcall cmpsl (bad) (bad) (bad) ljmp cmc mov jnp xchg les insb cs cmpsl xor icebp lea jecxz fsts aaa lret test ljmp dec fbld mov xchg pusha mov orl loope in jmp fucomi add (bad) (bad) incl orl pop das lods test es iret jnp in xchg fcomi es jo lcall sbb cmp outsl les insb mov int pop cmp mov jmp jmp (bad) (bad) ljmp xlat pop fstl xchg and mov ja pusha stc addps lcall into jg mov sbb scas sub cli out mov int3 (bad) addr16 es lcall sarb push add mov fwait add xchg adcl sbb fwait in cmp adc sub cld cmp or jns dec push sub cmp add rclb movsb in dec mov jne xchg sbb xor sub cmc cmc pop push push and ss ja insb dec mov fbld decl mov int (bad) (bad) (bad) pushl cmpsb mov popl lcall cli jge ljmp into adc call and lahf mov into fnsave or (bad) (bad) ljmp pushf loop or gs adc lods leave mov add into imul (bad) (bad) (bad) (bad) aas inc hlt pop mov inc push mov stos dec daa or (bad) cmc mov sbb mov jne (bad) (bad) call int3 mov xchg cmp sbb data16 xor mov lcall call inc pop sub fcoms into stos push (bad) lock adc jg fdivrp (bad) (bad) jmp lds add std cmp and in jne insb push xchg dec push out mov inc push dec push mov loope repz addr16 (bad) (bad) incl jbe pop push sbb push int jnp rorb (bad) lcall mov sub daa mov ljmp (bad) inc or loope das in sbb jle sbb mov pop (bad) (bad) (bad) (bad) fidivr aaa insl sbb sub roll inc mov test (bad) mov add add inc inc jecxz mov popf jae and icebp dec xchg cmc inc (bad) push add (bad) or loopne (bad) fcomip decl mov int3 repz jp loop adc xchg int fcoml (bad) (bad) (bad) pushl adc subl sub dec imul decl ret fdivrp (bad) (bad) (bad) jg and lret pop fiaddl jp xchg jb inc stos and aaa (bad) dec adc (bad) (bad) incl jecxz out xor mov and mov ficompl addl ja (bad) jg ss popa add dec sbb sti push and jecxz xchg jne and xchg (bad) (bad) (bad) (bad) jge fstpt xor loopne mov mov loop aas jecxz jmp aaa (bad) sar (bad) (bad) incl sub cmp push sti and xchg mov push aad popf call push (bad) (bad) (bad) (bad) std mov mov cs pop fcomi cmp negb dec mov pop sub cmp add (bad) (bad) (bad) (bad) cmp push add or mulb xlat add adc jg mov das clc incl insb scas neg adc inc xchg shlb stos jo,pt in punpcklbw je cmp incl loop je cmpsb ljmp or outsl test nop cwtl or xchg pop cwtl nop pop mov add imull nop pop sahf and (bad) (bad) (bad) call add sub hlt mull scas lret jae stc pop pushf mov dec or jge (bad) (bad) (bad) jmp sub adc jae cltd pop fwait inc dec mov test sbb dec lods inc mov (bad) (bad) incl jl (bad) sub out mov in cmp mov cmp (bad) addr16 and push call ds push addr16 sbb ljmp xor dec mov pusha xchg pusha repz add (bad) (bad) (bad) jmp push out loopne xor sub pop pop xor loopne sbb jle (bad) mov xor sub sbb ljmp loopne ret push push sub (bad) (bad) (bad) jg daa sbb and das add jae add and in (bad) (bad) (bad) call loopne outsb stos pop pop sbb push mov lar sahf iret mov rolb iret sahf popf dec and xchg aas mov push scas xor cs (bad) pushl (bad) in (bad) ja mov lock shrl sbb sahf out mov mov mov out and data16 mov dec push mov test fcmove das xchg cld test push cltd cld mov mov mov jb out cmp sbb (bad) lret (bad) (bad) (bad) (bad) cmp mov imul cmpsb mov ret mov xchg sahf adcl (bad) (bad) decl push push jge pushf mov add popl adc jp ret mov int3 jg (bad) out dec aam mov outsb mov rorb movsl pop repz inc repz (bad) (bad) incl clc dec mov and fistp fsub lock fldt movsb xor adc jb (bad) (bad) (bad) ljmp dec int3 and xchg inc std loope ret sbb jge clc jno loopne aas mov adc (bad) (bad) (bad) ljmp fisttpl int3 inc jno jns pop mov (bad) cmp push mov jb mov enter (bad) mov jecxz adc xor push adc xchg cmp (bad) (bad) (bad) (bad) in imul add mov (bad) fsubrp xlat inc dec dec and push cltd scas pop cmpsb (bad) decl cli data16 or add jo pop loopne jne,pn (bad) roll aad sbb or ljmp cmp fcomip adc scas pop or adc dec or hlt mov pushl xor push repz sub inc scas sbb clc mov ja pusha ret (bad) sahf and dec (bad) (bad) (bad) jg xor xchg or lock fbstp inc jae jg (bad) call mov dec loop loop sti mov notb rcrb (bad) (bad) (bad) ljmp xor xchg aad adc pop mov push or xchg mov xchg adc (bad) (bad) ljmp sbb (bad) lock pop hlt dec pusha mov xchg repz stos test push das stos scas xor mov stc and loop arpl inc and xlat and cli fwait pop (bad) (bad) mov shrl ffreep xchg aad mov cmp (bad) jmp and jmp cmp stos inc push les lods enter mov push pop ljmp (bad) mov mov dec mov mov daa aaa ljmp cs cli xchg sahf pop fs (bad) (bad) (bad) mov into daa gs movsl add mov scas repnz pop (bad) inc insl iret jnp pop mov xchg push (bad) jg jns lcall push mov xchg fs gs test (bad) fstps (bad) mov fist out ljmp jns stc mov dec cmc (bad) xchg pop add popa adc fisub dec fisttpll xor lock daa lret xor or popa xchg add cwtl rol gs shrl or (bad) ljmp in jmp movsl test js add and ds (bad) (bad) incl or or pop dec fs push xchg pop xor in cs cmp (bad) xchg into mov (bad) (bad) (bad) call aam js lahf (bad) mov jg ds insl dec xchg pop xchg pop pop or jb (bad) (bad) jmp lods testl dec lcall lcall mov dec iret les rorb jmp jmp lods inc cmp or out daa (bad) (bad) (bad) (bad) mov push notb push xchg in push inc pop arpl (bad) movsb pop cmpsl adc (bad) (bad) (bad) fnstenv pop inc adc out imul insl or scas pop adc push dec cwtl sahf (bad) (bad) (bad) call fiadd jb lret fwait loop test adc fiaddl xor add cmpsl add xor inc or jl mov push dec sbb faddl inc or mov ret and adc push imul and adc sar (bad) jg adc es mov dec lds and cmp rcr les (bad) call pop inc dec mov pop (bad) (bad) mov into jo ficom movsl dec pop test (bad) (bad) pushl xor cmpsb jle lock mov fnsave bound xor insl inc jnp hlt sub (bad) mov dec or adc mov (bad) push push xor sub or cli pop mov cmp iret rcrb ja imul insl lret insb mov (bad) jae ret sub test mov js xchg and mov call ljmp add fistpll testl sbb loope outsl push std cs je mov adc cli xorb mov loop xchg dec into adc hlt (bad) jle fsubr pop std ljmp add cli inc cli ret fdivrs and (bad) mov pop and jns rclb jp and les cmc repnz scas (bad) (bad) (bad) push scas push ja cmp enter stos jae gs cmp add jb fucomip pop pop adc loopne lcall mov sbb movsl dec jae mov dec jo lea ret lock jmp ljmp (bad) or popa call out jg push fmul jp and clc aad push ljmp pop ja addr16 push pop inc (bad) loop sarb cmp jp or stc add aad inc enter movsl hlt (bad) (bad) dec ret jg aad addl scas (bad) loop jns cmp cwtl ja pop jne (bad) lcall ficomp pop pushf lods aaa sar jae dec inc jmp icebp xchg cmpsl insl idivb decl lods mov call adcl lods scas sub (bad) call dec pop push mov insb and jb daa pop outsb xchg mov add decl ret sbb out cltd test pop xchg push (bad) mov cwtl ds sbb std out pop les repnz into pop scas mov inc cmp stos (bad) (bad) push dec inc insb sub xor dec cmc mov dec mov popa lahf jns (bad) aaa or loop push (bad) (bad) (bad) inc add push (bad) lds repnz and mov mov je mov xchg (bad) (bad) push adc inc mov ror jno xor fsubs xlat hlt sbbl rolb sti fistl out jle bound add dec and pop sub inc je mov (bad) (bad) (bad) incl jns or mov in mov jne outsb cld mov stos xchg (bad) (bad) (bad) jmp pop jae adc ja mov fdivr insb out jb in (bad) std movsb cld jnp divl incl lcall (bad) adc dec rorb das fnstcw fimul (bad) inc (bad) call cltd cmp pop add sbb loope stc jge (bad) sti xchg (bad) (bad) ljmp ret fwait sbb sub and and into aaa nop (bad) (bad) (bad) (bad) mov jnp xor mov xchg xchg xchg adc mov out fldl lahf gs (bad) (bad) call sub push mov in jo insb push lods jno dec rcr xor xor mov (bad) cmp pop sbb sub sub mov ja xlat scas jmp dec clc (bad) mov lock test mov fs call adc (bad) (bad) ljmp out and adc add loop nop out and loopne es push ret jg out (bad) (bad) (bad) (bad) cld roll enter cmp ds xchg test sbb icebp fadds dec cmp push xchg add repz inc lods jne xchg clflush dec sub adc cmp (bad) (bad) incl push sub add scas ficomp push dec stc mov (bad) cli int3 mov popf syscall repnz and xor xchg cmp push dec into jnp outsb sti push jo mov mov (bad) (bad) ljmp mov push jmp ret iret aaa push mov jb xchg in push clc repnz shrl and test mov daa loop (bad) (bad) lcall sarb hlt cmp stc inc lds push aam inc andl call dec cmpsl mov mov pop fstl insb xchg aas xchg mov (bad) call mov or icebp jns mov loope mov repz jbe mov stc aas (bad) (bad) (bad) call and mov pop pop jb fwait les in test xchg xor test (bad) (bad) pushl repz sbb mov dec scas inc stos movsb xor push repnz (bad) (bad) (bad) call cmc out fwait and int3 push leave cmc mov jge scas push jb lcall (bad) (bad) (bad) jmp sbb test push sbbl cmp sti scas jae pushf pop in mov (bad) (bad) sti (bad) pop dec outsl test pop pushf mov jbe jl xor mov and (bad) ljmp pop std fcompl pushf movq lds je incl mov xlat and aad out (bad) ljmp add cmp xor clc aam das xchg pushf and fildl (bad) incl and stc xor pusha rcrl icebp xor inc push mov (bad) (bad) (bad) ljmp in dec rorl mov (bad) xor (bad) test or jle xchg clc out ljmp int3 sbb shlb fsubrs sbb idiv (bad) (bad) fiadd xor pop push subb (bad) loope test ficoml std jge jge or (bad) out call (bad) jg repz pop ficompl jecxz mov test dec lods (bad) fist lock les push push mov sbb ljmp adc in ja mulb cmpsl out or test (bad) (bad) (bad) (bad) call pop pop and and cmp enter mov inc mov xchg cmpl (bad) call addb xchg push push dec neg or lret imul xchg xchg lock lret ljmp or les leave xchg xchg retw jae (bad) pushl inc mov adc ficompl or pop (bad) (bad) lcall outsl mov xchg rclb cmpsb rcrb (bad) jg (bad) enter or cld sub enter std dec cmp out pop xorb pop (bad) ljmp stc or fisttp push xlat outsb sub (bad) ljmp les add test push pop lods icebp dec cmc cmp gs push xchg (bad) mov outsl ds pop jns pusha je pushl xchg pop xchg test mov test (bad) incl sub pop (bad) ja nop lods nop call push xchg xchg sub (bad) call std mov push stos inc mov mov push or push mov adc (bad) call (bad) hlt mov iret int in insl xorl (bad) (bad) jmp sbb xchg stos jmp inc dec jo in dec mov imul xor dec fbstp lods (bad) jns js mov adc cmpxchg add xor and lahf das (bad) mov xor ljmp js imul mov mov (bad) (bad) decl push in out add xor sahf stc rcll xor fdiv add rolb (bad) (bad) (bad) lcall popa sbb xlat dec pop (bad) jbe push dec sbb pop mov loope call xchg (bad) mov gs push iret repnz xchg into es xchg cld (bad) (bad) mov sub add sbb shrl divl cld push or sbb (bad) (bad) incl mov sub cmp pop les push loop dec (bad) (bad) (bad) call ret inc iret and push mov fdivs std (bad) imul and pop push cmp orl pop inc cld adc fcmove sbb or lret pop fsts cmp xor (bad) (bad) push out add in lock das adc mov popf add sub xor add aaa std decl pop inc jno (bad) ds jecxz sub cli mov js jmp in sbb pop into xor (bad) lret sbb and scas add incl or cmp push jg jmp push arpl jno insb sar (bad) decl push cltd fucomp mov mov dec in leave pop std ja sub (bad) call imul mov push inc xchg (bad) mov push jns cmp push (bad) (bad) push lcall ret loop cmp adc mov jno or (bad) add je sbb add aaa lds rorb mov and rolb sub pop xchg xchg repnz fwait repnz int mov jg (bad) (bad) jmp xchg pop inc push movsl pop je jl into aas mov mov frstor xchg push (bad) jecxz aaa or das int3 daa je ds cmpsl push and in test lar (bad) (bad) mov inc std (bad) xor hlt aad fldl (bad) lock (bad) (bad) dec adc inc in mov ja cmp lds daa sahf inc cmp mov popa (bad) (bad) (bad) (bad) fild sub mov (bad) dec mov cltd pop sbb adc mov or mov (bad) (bad) (bad) (bad) jmp inc jne cmp cmp outsb test xchg fnstsw fnstenv aam jle (bad) (bad) (bad) ljmp add jg (bad) and cs mov int push xlat out mov mov ljmp adc pop pop xor jne and (bad) (bad) lcall sbb sub pop jne mov pop nop lahf sbb ja lds fnstsw ljmp faddp mov adc push mov cmp mov or movsl mov icebp push jmp cltd cs inc std inc ds mov (bad) incl pop pop (bad) inc adc ljmp jb and dec test add fmuls push mov add js adc je (bad) (bad) decl lods aaa sub in sub test adc push sub lcall (bad) (bad) (bad) (bad) mov aas popl out popa int3 or sbb loopne sub outsl adc xchg push push (bad) (bad) (bad) pushl test sub ja cmpsl cmpsb mov lcall pusha xor in push add (bad) ljmp push popa imul mov add call (bad) pushl je cli push daa jecxz cwtl sub push jne mov aaa (bad) ljmp cmp adc (bad) enter ja shl mov sbb jo dec fwait sahf jb loop sub sbb scas dec inc push cld push (bad) rorl push leave cmpsl pop jno lret cmp (bad) push scas cs mov das mov xchg in xlat xchg nop ljmp cli ljmp sbb jg mov xchg daa (bad) les hlt mov mov (bad) (bad) cmp pop icebp dec mov sub ret xor lcall push cltd cmp or inc (bad) (bad) (bad) inc (bad) xor jne push cmc xchg sti in flds mov or test out dec fstpl pop rorb (bad) (bad) pushl movsl and mov ja inc rolb mov lahf and test (bad) call loope mov pop pop or cwtl scas cs add std cs sarb dec je sub loopne (bad) (bad) (bad) jmp sub aas loopne or jb xchg mov fldl sub (bad) (bad) incl cli jns gs jns dec inc jo aam out std movsb scas cmp inc (bad) (bad) pushl fisub (bad) je or jmp test and (bad) call insb mov sbb jecxz ds add mov (bad) addr16 cmp push mov (bad) (bad) (bad) lcall and mov xchg lods cmove xchg pushf push adc aad jno iret pop insb (bad) xor mov (bad) call idivl roll adc adc (bad) cltd jne idivl xorl (bad) (bad) mov cmc push jl or out or (bad) (bad) call xchg (bad) je lock stos adc mov or cmp mov lods (bad) (bad) mov mov xchg mov in sahf cmp (bad) movsb in stc dec (bad) (bad) (bad) call js fnop jo (bad) and sub dec push inc (bad) mov data16 sahf pop (bad) call into repz test pop push loop das fdiv push and mov das dec loopne fdivrs incl mov out js lock (bad) div xchg and mov enter lcall mov mov leave (bad) mov sbb pop jle inc (bad) (bad) (bad) pushl add mov iret jns mov adc daa xchg ds adc sub adc sbb loopne push movl sub (bad) (bad) (bad) mov cmp inc jae sbb add jns movsb push mov fwait es (bad) (bad) decl fwait jl fistl lds mov out fsubp mov nop out (bad) sub or mov push mov dec mov rolb sbb ret adc (bad) (bad) ljmp mov jg hlt ret pusha rorb das jo imul call ja (bad) pushl cs mov mov test add outsl (bad) (bad) (bad) incl cltd (bad) mov arpl push pop movsl and adc sub dec outsl or (bad) (bad) lcall pusha inc std pop jae movsl inc dec mov and movsl stc dec sbb add pop jecxz clc jge add push (bad) popa (bad) (bad) jg fs sbb lret (bad) cwtd insl fwait aas cmp inc aad notl inc fs push xor hlt (bad) aaa mov adc (bad) incl call xchg cmpsb cmp push mov addl jb xchg fisubr (bad) (bad) call lods or test aad dec push movsl in inc test sub adc (bad) (bad) (bad) push xchg mov mov add dec mov ret add in (bad) cmp out (bad) icebp or mov (bad) (bad) incl in fs leave xchg dec into jbe mov xor orl std (bad) (bad) in out and jmp mov test xlat adc xor lahf add ljmp cli sbb xor pop enter out imul sbb pop push pop mov gs (bad) (bad) (bad) decl js cmpsl add test jbe or xor int3 out adc xchg inc inc or pop (bad) jg das clc outsb xor fsubr adc (bad) sti rcrb mov das sar enter into out fs cmp pop inc (bad) jo pop push lret cmp (bad) decl and inc cli lcall xor mov (bad) fiaddl (bad) (bad) lcall add and jmp stos fwait jge mov xor (bad) adc pop (bad) jae sub (bad) incl mov sub push ljmp popa jns lret push pop push ret decl or scas jmp cmp (bad) dec sbb loop test mov lods ja scas cli mov nop dec inc out xchg inc push cli out dec sahf push pop cmp (bad) incl xor cmp (bad) divl bound lds or shlb mov push mov cmp dec pop loope (bad) (bad) lcall cmp mov je push push ss mov pushw imul sahf cmp es scas mov rolb lret add sbb add mov sbb (bad) icebp (bad) (bad) (bad) (bad) call hlt es push xor sahf cwtl cltd cmp add mov mov push cmc pop shll jmp push xchg (bad) fild cmpsl sub mov mov lret loopne inc pusha stos mov push cmc mov jge xor push sar (bad) cmp fdivrl stos je xchg insb mov lds (bad) (bad) (bad) call stos (bad) int or jns nop sub fucomip xor jg or fimull pop cs decb lret jg movsb movsbl nop jecxz (bad) and fidivrl pop (bad) (bad) (bad) mov push (bad) imul xor xlat jbe in nop es xchg xchg inc push pushf mov (bad) lcall mov push addr16 shlb fbstp test jle and add fwait (bad) (bad) pushl movb jp push mov adcl xchg sbb jbe pop xor (bad) (bad) push cmp mov mov cmpb lds add mov (bad) (bad) (bad) decl add inc rclb cmpsb (bad) call add jno jmp xchg bound repz mov xchg lahf (bad) (bad) (bad) (bad) aas repz inc hlt sbb xchg loopne insl loop mov push push push inc sub clc (bad) (bad) (bad) fdivl xor or mov mov xchg lcall incl jo jb (bad) mov outsl cwtl stos jge test mov decl xlat push dec push or scas mov cmpsl jecxz jne xor (bad) ljmp mov iret jo pop insl or fnstsw icebp xchg lcall das (bad) xchg clc std jecxz xor jmp mov and inc ss aaa std mov sbb in adc dec sub mov jne hlt pop inc test pop pop (bad) inc jb fs xor (bad) (bad) ljmp xor jo pop (bad) aas push jns rolb sub push ret cmp mull scas addr16 and clc fisubl sub sub fcomip test cs incl jg push jmp aas ret cmp mov into fwait (bad) (bad) (bad) (bad) fsubs xchg aam jno pop sti in aaa out cmp cmp (bad) dec (bad) or mov (bad) decl sub mov and pop sub xlat push sbb lcall mov pop call mov andb pop xor (bad) jbe jns pop mov (bad) ljmp lahf push rolb pusha inc shll mov loope fwait mov jge hlt jecxz decb (bad) (bad) (bad) (bad) (bad) je ss test shr xor sarl mov xchg add icebp ja fcomip (bad) lcall inc fstpt (bad) mov (bad) mov lock cmc outsl pop imul add jnp mov add ja ret in fadds popf adc (bad) (bad) (bad) mov addl jae mov int3 jl aad push cmp test (bad) gs mov cltd adc hlt cmp jne and out (bad) (bad) (bad) lcall in mov xor fisttp xchg loopne mov aaa pushf scas in and add scas mov (bad) (bad) call fidivr test sti fdivs daa pop and arpl xchg out (bad) sbb ljmp mov fadds sbb dec scas pop hlt leave adc loopne in aad push mov incl cmp insl in imull int sti mov enter cli (bad) (bad) lcall repnz dec sbb push sbb push mov (bad) sbb push (bad) (bad) in lcall jbe and mov movsb pop mov xor adc dec or (bad) cld jge push jo add mov (bad) incl es jno in pusha maxps xchg test lret add call in scas rcrl lcall adc xor cmp (bad) (bad) (bad) mov je jle add imul add and cmp (bad) call jo rcrl push sub inc int3 sar add sahf test ja scas pop dec (bad) xor inc push movsb push (bad) ljmp inc mov pop fmul xchg pop into jle xor dec sub cmp insl enter cmpl aad (bad) (bad) lcall sbb sub hlt int3 cld xor and out sbb pop mov (bad) (bad) (bad) jmp push inc arpl push testb pop mov das sbb (bad) (bad) (bad) call mov mov fimull in add adc sbb mov push xchg sub (bad) (bad) (bad) pushl push fmul (bad) aad adc popf or (bad) mov jae or sbb decl dec dec aas mov lcall insb lock test movb dec push or fwait iret cltd mov sbb (bad) (bad) mov pop testb or enter icebp and repz (bad) (bad) (bad) jmp xchg sub int3 xor pop call aam stc inc mov fcoms arpl (bad) call loopne mov mov add mov aam (bad) adc pushl push aam loop call lods fwait pusha push fild push (bad) mov mov imul mov (bad) fcomip call ja mov add sbb sub dec cmp mov out pop repz cmp xor scas into int3 out mov lods stc xchg lods push mov (bad) (bad) ljmp aas mov out arpl lods mov js and push xor or ds push cmp ds jge mov cmp and mov lret into inc mov or fildll popf mov ss sbb (bad) (bad) (bad) ljmp pop jmp mov xchg pop loopne pushf jecxz mov inc je addb int3 or pusha fnstsw (bad) decl enter jge inc fistpl lods mov ja sbb jbe mov or or (bad) incl and jle mov dec in rorl subl or rcll clc fsubr imul (bad) decl dec imul xchg test jp push ja inc insl inc mull call test loope aaa inc movsl mov mov sub leave adc (bad) (bad) (bad) (bad) (bad) mov mov push and sbb xor in std xchg and adc ja (bad) (bad) (bad) (bad) decl nop mov ljmp outsl in jecxz cmpsb inc sbb sbb (bad) lcall call fwait movsb jnp,pt std or or mov jne icebp fwait jp or (bad) (bad) (bad) (bad) call sti es aas outsb sbb mov cmp bound and pop and jle out lret das rorb cmp xchg (bad) icebp (bad) (bad) out ds push in cmp mov fxch insl pop jno mov xchg inc xchg cltd add stos (bad) (bad) jp iret dec jmp pop mov je lret jl stc and jmp arpl add sahf add flds pusha jg (bad) (bad) ljmp push dec cmp out aad adc mov fstp sbb pop or icebp in and xor and mov jne xchg and aam dec stos jg js (bad) (bad) decl add dec loope mov sbb addb in inc xchg pushl stos adc sarl and jo inc ficom jo addr16 and xor (bad) (bad) (bad) dec fdivr stc cmp shl movb xlat nop movsb popf inc push and dec adc (bad) ljmp aas pop test sarl push stos insb push lcall pop add jo cmp nop sub inc lret in sarl xor cmpsl cmpsl jge orl mov test aaa (bad) cwtl sti dec lods ja push inc cltd and xchg aas jg nop scas shll xlat adc pop jo mov call jmp xchg cs cmc fmul xchg or in push bound lods ret cmpsl mov es (bad) (bad) fisubr pop aaa dec xor addl cld dec xchg ret pusha or fcmovb mov imul xor fdivrl mov pop push ds and (bad) (bad) (bad) push add (bad) int xchg (bad) insl fidiv nop sub enter pop pop xor inc pop popa ror (bad) (bad) (bad) jmp xchg or dec addr16 and or inc jae inc cmp xor hlt scas (bad) (bad) (bad) lcall and cmp xchg outsl inc ret push xlat lock cmp loope (bad) jg and shlb mov nop xlat bound mov mov xchg mov std and push cmp jge fs aam fildll jb rclb test (bad) (bad) call jne int3 cmp fdivs xlat lods std (bad) rorl in sbb pop repnz dec sub (bad) (bad) ljmp cs sub jne lcall inc fmull arpl xchg mov mov push cmpsb fbld repnz (bad) (bad) push test dec cmp hlt push inc mov leave sbb jge hlt imul aam stc test (bad) (bad) call sbb ja and adc fwait push sbb les insl jbe adc bound sub (bad) (bad) ljmp repz or push mov notb mov ds xchg mov orl clc call inc (bad) (bad) (bad) ljmp xchg test inc loop notl jp rolb cmp and or dec std movsb mov repz stos fwait lret xor inc mov (bad) or imul outsb out into aaa pop jnp and jecxz leave out insl cmp pop clc (bad) out add fimul (bad) (bad) (bad) call hlt cmc mov push mov sub adc lds xlat sbb aaa (bad) mov rcll imul (bad) jmp (bad) aad dec mov ja mov es lret jge (bad) jg jmp stos in test hlt mull push push mov xchg jp int adc and inc enter cmp hlt jl xlat mov outsl fadd lcall mov lcall sbb lea arpl rcr stc pop mov jo jb dec fimul repnz or xor (bad) (bad) call sub xor push loopne ss or and xor or cmp stos push jo shrl pushf push outsl push jge xor adc mov js in out jo sbb enter test pop std decl jne push mov ss xchg ljmp or fs decl jnp cmpsl in into mov pop push movsl xor or sbb cltd aam mov repz (bad) ja xchg cmpsl or xor aas sti ret addr16 pushf int pop loopne into jle and ret add xor outsl fnstsw pusha cmpsl push (bad) (bad) (bad) inc dec popf mov and xchg xchg jae adc xor lea xor es or inc add test mov xchg adc push inc add int3 out (bad) (bad) decl and mov jge dec outsl test pop jbe xor arpl cmp (bad) (bad) call in xchg xchg inc das test shl ret or loopne cli fdivrl push cmovl clc inc cmc and jge fnop (bad) aaa xor mov jbe sbb rolb pushf pop cmp movsl lods dec dec das adc or lea add push and mov sub mov push inc inc adc cmc (bad) xchg scas sbb or cmp pusha divb pop arpl (bad) incl ljmp xor not push pop cwtl or pop jg jmp les and scas ret mov and cmp xchg enter jge (bad) lock imul dec arpl pop loopne insb jmp imul jo pop es xchg jb hlt fildl pushl scas pushf dec int3 rorl mov sub mov mov (bad) ljmp dec leave mov jg lock lcall xchg js adc jnp dec inc xchg lret ljmp dec fmuls mov dec xor nop ds jmp and (bad) call repnz (bad) mov in popf (bad) mov add push push mov bound xchg sahf cmp in pop mov inc gs dec dec std xchg mov push popa (bad) (bad) (bad) incl incb push mull mov ljmp sub rcrb clc (bad) (bad) cmp shll les hlt dec xchg es (bad) (bad) incl dec test insb sbb cmpsb arpl std cmc or push mov cltd cld (bad) (bad) pushl js arpl cmp jl sbb shrb mov notb pop hlt mov pop mov stos ja mov cli xchg xchg repnz dec dec decl enter les jbe and adc (bad) ljmp ret adc jo movsb outsl int3 sub push jp (bad) (bad) call adc adc inc (bad) lods test cmp fs (bad) (bad) decl xor subb pop jo xchg cmp and mov mov (bad) (bad) pushl fiaddl adc fnstsw inc dec je (bad) in pop add xchg cmp (bad) (bad) (bad) pushl es mov jb (bad) int jge (bad) in fcmovnu mov (bad) jae cmpl fcompl mov movsl int jl sub ret pop xchg nop xor (bad) (bad) pushl leave add inc aad repz lea lahf jmp sub dec rclb out into jge ljmp cmp xor stc js gs mov sbb sub jle (bad) lcall nop sahf jbe sub test cmpl mov push js (bad) (bad) (bad) lcall mov insl xchg mov (bad) push adc sbb outsl mov int sub mov and push aas push adc cmp jbe sbb (bad) rcll out js (bad) in push call (bad) sti mov xchg lds push adc push scas cld (bad) shrl (bad) (bad) pushl cmp add int3 sub jmp lea pushl adc test jg jecxz sub decl fisub mov clc mov jg (bad) (bad) decl into dec xor adc push lea xchg cmpsb add mov incl inc call loope arpl push cmpsl mov (bad) hlt imul (bad) mov mov mov fs cmp cltd inc call out mov sub loopne sbb pop pop out in dec test addr16 hlt pop rcll aam inc (bad) lcall pusha icebp adc imul cli sub cld jns pop jo mov mov mov and and dec cmp enter mov daa dec xor cltd sbb inc pop ss mov bound (bad) decl inc aad (bad) pop jmp cmp pop or jne adc jae sub xor pop cmc (bad) ljmp testl xchg xor cmpsl popf addr16 sahf jl int3 xchg jb add jne mov js push loop shr call push push dec sahf push stos movsl push (bad) (bad) (bad) pushl arpl and mov aad je sub push dec sarl jne (bad) (bad) (bad) (bad) jns cmp into xor pop fcomp rorl ss scas addr16 std fs cld stos ja pusha dec (bad) (bad) (bad) pushl repnz (bad) mov lcall push idiv ja movsb inc loopne and dec sbb (bad) (bad) incl orl sbb icebp sarl fisttp test in jno mulb call rorb (bad) int daa mov hlt in imul nop pop subl add outsl cld dec shl mov ljmp cmp test pushl dec scas push add loope rcl jae inc push nop xor loope adc or (bad) (bad) decl cwtl std orl negb jmp out call pop sahf fstpl (bad) (bad) (bad) incl scas xlat movsb pop (bad) sub cli bswap popa ss pop adc add inc xchg adc add (bad) ljmp dec loopne pusha lret or jp sti test in (bad) (bad) jg ds xchg arpl xor iret inc and push mov pushf fidivr (bad) call ljmp lea cmp fisubl (bad) (bad) (bad) (bad) incl aas leave std cltd paddb mov and repnz mov xchg notl cmpsl enter (bad) (bad) mov lock xchg and push sti imul push jo dec (bad) (bad) (bad) decl pop cwtl gs cs adc inc lods loopne test enter push repz clc pop inc cmc cltd mov mov outsb xchg push cmp ss pushf (bad) cltd xchg jmp fdivrl inc push (bad) cmp test jne jo (bad) (bad) (bad) ljmp icebp cld inc into icebp xchg cli xchg dec lret jmp add xchg lahf jno mov sub dec rcrb insb xor data16 stc fistl lret (bad) (bad) (bad) (bad) call sbb bound lcall adc xchg cmpsb fild lods es (bad) (bad) pushl push push in mov movsb (bad) push aas dec adc or jae cmp inc stos (bad) cmp cld or pop std xorb hlt push cmpsl adc incl add pop les negl inc mov in (bad) (bad) (bad) ljmp xchg dec iret (bad) (bad) xor inc sub adc inc lcall out pushl xchg insb notb cmp shlb scas dec and sbb cmp pop push mov jle cld xor inc mov sub push xchg dec pusha and fcmovb (bad) (bad) (bad) lcall mov sbb dec adc insl add les or jno push ret (bad) mov xchg push mov rorb adc int3 sbb stos adc pop call pushf cld in mov (bad) (bad) call icebp pop jne int3 push lcall int adc test scas out or push (bad) inc fistpll dec sub add ljmp sub ficom adc lcall inc mov (bad) jg dec adc gs cmpsl lea add fwait xorb call (bad) (bad) (bad) ljmp lea jmp gs outsw push or mov (bad) adc (bad) (bad) (bad) push jns movsl push cmpb cwtl lods (bad) push pop popa push (bad) mov xchg jno mov das xchg mov (bad) (bad) (bad) incl pop into sti jge xchg xchg inc and (bad) and cli xlat test cmp ret (bad) incl lret addr16 shll push inc stc out imull xchg xor jb insb xchg (bad) mov cli daa lock in (bad) mov mov out inc ja test (bad) (bad) incl stos cmp jns add adc jnp test inc cmp cs js,pt ret mov pop fwait jp clc inc xchg push mov cmpsb xchg push ljmp mov cmp shlb sub jecxz stc je jecxz clc push fisubrl (bad) (bad) (bad) call out adc ret pop mov cmc mov mov into push pop and mov leave (bad) jg incl cmp mov dec or (bad) cmpsb aaa adc cs lods popf (bad) (bad) (bad) (bad) incl mov test ret cmp aad and cltd and leave adc pminsw jmp lock loopne stos jle jo repz fs add (bad) divl icebp ret imul adc mov icebp out xlat std sbb int3 les and loope out (bad) (bad) (bad) (bad) fisub out mov jb orl adc xchg out and lcall call push incb xlat lret popf mov aam bound (bad) jg jmp jmp sub dec in cmp mov push mov cmp (bad) call ss lret enter loopne xchg jae fldt cmp mov adc outsl jge add fcomi adc xchg push stc mov jecxz rclb sbb cmpsb fdivrs lret push imul add mov (bad) jge add cmp push xchg fldl imul pop dec jecxz lds (bad) (bad) (bad) lcall mov in outsb mov ja cmc fisub fidivr xor jecxz (bad) insl xchg (bad) (bad) (bad) pushl mov xor mov (bad) dec pop jnp int xor leave psubb scas (bad) (bad) dec mov imul fcoml xor xor mov or (bad) (bad) push push in icebp push cmp in pop out pusha sub aaa roll lock mov ljmp mov cmp test push cld adc or scas mov test outsl aaa xor mov (bad) (bad) incl add nop mov push adc inc outsb push lahf xor xlat push mov fs (bad) lcall xchg ds lock push mov add fcmovnu or cmpsl sub fstps mov (bad) push shr insl jae xor bound sbb (bad) out cli jecxz mov repnz jb sti das in cwtl pop xchg xchg mov aaa jle (bad) (bad) (bad) decl mov pop mov les or shll mov addr16 and test xorl mov push hlt xor fs mov (bad) ljmp ret add (bad) mov insb mov mov xchg ret jno jmp sbb ss and mov sub dec ljmp lea mov pusha xchg popa loope add cmp adc mov popf add shrb and pushf hlt xor cli ljmp dec cmpsl repz push pop lods xchg addr16 out cmp jnp lock (bad) jle jo aas iret in imul jl mov out aam test fwait (bad) sub mov stc and mov push stos inc add push loope stos mov je out daa inc (bad) jo lahf push adc pop nop (bad) lcall add mov addl inc xor jne loop mov jmp inc cmpsl push test push inc outsb (bad) je test shll xchg nop loop inc (bad) icebp mov ds xor call push insl outsl leave pop sbb movsb (bad) mov lock int3 (bad) (bad) (bad) ljmp add in lret sub cs hlt cmp pusha mov sbb mov jnp (bad) (bad) (bad) incl push push test xor pop dec dec loopne sub lret pop cmp push jae insb pop popf (bad) ljmp cli xchg enter (bad) psubusb pop mov add or hlt ret (bad) (bad) cmp jae cmpsb das or sbb sub mov jmp pop stc aas jo cmp push (bad) mov int3 sti pop push cmp jmp clc jmp aam outsb cs pop aas sub adc ret xor xchg decl jle xchg and in sub int3 push jae push mov test out add sub pop dec icebp cld jl jge (bad) mov or imul std (bad) jg mov arpl mov test scas loope in fcomip pushl inc clc jg cltd and xor add add inc iret lcall lds mov push aam dec and scas inc xor es (bad) (bad) decl stc lahf lods cmp shrb adc cmp push cmpsb add int sar mov lcall jns out mov mov and (bad) push (bad) (bad) (bad) jmp (bad) pop sti aaa xor jecxz fdivrs and xchg xor je stos (bad) sbb jg sub cmpsb sub test jg pop aaa inc ja aaa das xor mov (bad) (bad) (bad) pushl in arpl and repz fbld xchg enter mov xchg (bad) (bad) (bad) dec das jl dec mov mov hlt ja repz out imul jo or (bad) incl inc movsl push daa out or push push leave jecxz,pt aaa push xchg aas mov sbb pop (bad) (bad) fcomip call popf (bad) clc dec mov fcoms xor out jns or add or push lds mov push pop jne mov int3 xchg jmp jbe cmpsb push or dec out (bad) jg (bad) insb outsl ficomp inc int3 xor add mov or or (bad) (bad) lcall aad sub nop sbb add lds push xlat popa lahf lds dec (bad) (bad) (bad) lcall adc loopne les ljmp icebp adc mov dec es mov clc (bad) out cli push ds and pop repnz inc mov sub pop cmp add mov out enter (bad) jmp mov pushl mov (bad) in sbb loop (bad) (bad) (bad) incl push jmp push int3 mov test sub lock outsb mov out cmpsb mov pushf cmp rcll add and jne in sysret ljmp addr16 iret xor loop push and dec add rolb lret jp mov aaa mov (bad) ljmp loope daa adc in mov cmp add lods lds xchg (bad) (bad) (bad) pushl fistpl repnz sub push je mov enter cli (bad) (bad) (bad) (bad) pushl sub ss push sarl sbb nop insl fadds or repz push mov icebp (bad) pushl scas cmp and xor dec dec push cmc lret movl pop cmp mov leave pop or fnstsw pop je loope in push jbe (bad) (bad) (bad) incl cli xor pop dec cmpsb mov adc ja add stc outsb mov add clc (bad) jmp and mov call xorb (bad) adc (bad) (bad) ljmp adc leave test movsb lods ficomp into lods loope aad jne fdiv xor das js mov (bad) (bad) lcall test pop sahf outsb xchg inc mov pusha jne cwtl push xorb and aad loope fildll rorl ror in bound mov dec xchg mov mov pushf xchg scas push add int3 pop (bad) (bad) (bad) ljmp pop popa popl jp pop in inc cmpsl sub xchg lods outsb push jle or mov cmp (bad) (bad) jmp dec xchg int3 or lds aam xchg and adc adc aas mov mov and movsb xchg (bad) ljmp repnz int3 das sub xlat scas or (bad) (bad) (bad) fnstsw out push popf lahf cltd popf out xor cmp lock push sahf (bad) (bad) (bad) jmp push lcall movsl stos and cwtl sub inc push dec enter xchg mov dec mov aad or fsubrl jge js in dec lret lock js pushf inc sbb test sbb (bad) (bad) push adc push cs jge cmpsl lock mov jge lahf inc sti fnsave mov dec or ret dec enter (bad) (bad) push push push addr16 scas push inc jg mov and xor shlb mov cmp ret loop mov mov pop loope std int dec shrb xor or icebp push hlt (bad) (bad) inc subb add or loope xor mov jg cli out jo incl lods lods (bad) call fcmovu fidivrl mov xor (bad) (bad) (bad) jle ficompl xor rclb cs insl cmp into mov fist add cld push ss add (bad) (bad) (bad) std mov mov xchg outsl cmpsl call sbb adc es jbe xchg inc add (bad) (bad) (bad) lcall ds ljmp rclb xchg sub sub pop cmp leave (bad) mov pop or popa lods imul mov jg (bad) lcall mov push push sbb popa xchg jae push iret fldcw out xor jge (bad) (bad) decl lds data16 movsb push out jns push xor pop pop out mov sbb xor dec stos jmp fiadd lret repnz and (bad) (bad) (bad) (bad) ljmp out jmp cmp ljmp inc stos cmpsl cmpsb rcrl mov (bad) (bad) (bad) (bad) jle sub aam scas mov mov lds fisttpl lods cmp (bad) (bad) (bad) jmp xor xor push fwait lea dec pop mov xchg (bad) lret xchg sahf (bad) push es pusha addr16 add sub cmpsb (bad) (bad) (bad) lcall or lahf inc xchg or mov stc (bad) jbe xchg sbbl pop and mov mov and test ljmp rorl loop test jae cmp call (bad) std shrl xor pop (bad) (bad) (bad) inc jb adc sbb push sbb lods dec cmp fwait test cli (bad) dec jge push in ljmp (bad) lcall pop fist pop xor aas pop call cmpsl jns mov jnp mov and pushf push sub fs push (bad) (bad) (bad) inc jno dec jns mov dec insl nop mov ja ret in jo jg loope pushf (bad) (bad) (bad) call cmp call xchg pop addr16 aam dec dec jge lea clc cmp mov sar fcomip pushl adc data16 jo xchg enter cmc mov (bad) and mov (bad) mov je adc sbb dec sbb repz (bad) (bad) ljmp incb loopne or test stos lcall popa jl jo and add sbb aad (bad) pusha mov inc bound adc test (bad) (bad) pushl sub in lahf (bad) in data16 pusha push clc xor sbb mov (bad) (bad) lcall xor in sub jp pop sub fcoml fistl xor sbb jne (bad) (bad) (bad) decl jnp ja test mov gs test adc and xchg dec xchg and sti stc add popa test es dec cmpsl adc (bad) lcall push bnd nop sbb sbb pop jns jbe sub and mov fist sub mov push xchg (bad) (bad) mov push cli jg out andl cwtl cld dec es xchg xchg mov (bad) (bad) (bad) (bad) (bad) fldcw inc dec sti sti arpl pop jle or pop std cmpsb sub push (bad) (bad) (bad) (bad) out ret push pop sbb arpl xchg sub adc int dec dec adc (bad) mov jl push sub and daa into add push push add lret (bad) ljmp enter leave imul das pop adc dec push mov loop or (bad) lcall cmpsb sub outsb scas outsl pop add fisubr pop dec js call add mov jg push mov mov pop push pop and decl xlat in leave mov lods xor test (bad) (bad) (bad) call inc pop hlt and dec cmp sub ss adc mov cmp mov (bad) ljmp adc lahf xchg aad push cmc jecxz sbb and jae ss jg xor (bad) (bad) call pop add ds push jecxz dec add lods adc out sbb or sar (bad) (bad) jp jp lea (bad) sub cmp xchg jp addr16 stos call out cmp (bad) cmp out mov jns and mov repz cltd test icebp add mov push ss cmp daa xlat jecxz,pn (bad) cltd sub mov jmp (bad) mov add ss pop xchg cli sbb (bad) cmp faddl (bad) (bad) lcall ds mov addr16 cmp inc repz mov push push popa insb lock (bad) (bad) ficoml push ja mov gs xlat mov js adc js xor (bad) (bad) decl ret icebp jns sub mov bound in mov aas and popf sbb xlat imul mov xchg and push out push scas icebp outsl xchg (bad) (bad) call push lret std push outsl gs xchg setne xor push dec je (bad) (bad) (bad) mov sub adc push jge mov mov sbb gs xchg or outsl (bad) (bad) inc imul data16 adc xchg divb push mov aam push stos (bad) (bad) mov jle pop lods enter mov xor xchg mov mov (bad) (bad) lcall popa jecxz xor sbb pop (bad) sahf mov sub mov mov lahf inc or (bad) (bad) cld xchg mov ds fdiv mov xor (bad) lret test (bad) (bad) (bad) mov and xor xor jbe fsubr or sbb dec lds sahf mov rorb (bad) (bad) ljmp pop rorb dec push add in aam adcl sbb (bad) (bad) (bad) mov rolb test add push lods in cmpl call push push fist ljmp mov sbb push je push sbb mov pop sub and rorl es add lcall (bad) ljmp movsb lds dec or mov fbld sbb sub mov inc dec fwait hlt mov sbbl pop mov adc mov ret int dec fwait cmp (bad) inc arpl mov in push idivb in cmc jo xchg jmp ljmp and (bad) call ficom test mov popf xchg out scas inc (bad) pop popa dec mov shr (bad) (bad) dec inc in xor sbb inc sbb dec fucompp xor push stc in aas cmc cmp inc setg add mov lods jmp sbb (bad) (bad) (bad) cmp lods ret mov cmp add pop sub into fcomi loopne add call out xchg sub sub or pop (bad) mov push add addr16 adc and adc lock inc adc cmp xor xchg xchg (bad) (bad) (bad) cmp mov lret mov sbb incb push dec int3 dec and aaa inc leave (bad) (bad) (bad) (bad) decl fsubl push sbb and jmp les scas lret (bad) jmp gs sub js dec fldl jns out in test xchg clc into push sbb pop scas mov add fisubr fs and add lcall insl and mov cs inc pop or (bad) (bad) mov cmp cli sarb mov xchg cmpsb enter and xchg mov gs cmp pop lock into xchg jl push push movsl loopne fmul sbb mov cld (bad) (bad) jmp mov lds mov lret fsubrl arpl rolb xor sub fstl sahf (bad) (bad) incl jle int jnp jle push xchg xor jns clc cmpsb xor lds sbb dec push (bad) pop aad imul scas ss (bad) lret (bad) (bad) (bad) lcall or js adcl pop xchg stos push lret outsb insl mov mov pop lcall (bad) jg push add pop xchg test daa insl ljmp pushl fidiv jns imul inc adc (bad) rolb sbb (bad) (bad) mov pop movsb or pop iret mov scas dec dec stos jno data16 cmp ss bound or fmuls mov (bad) loop call mov or add (bad) icebp lods jle dec cmp in outsb popf sub jae das sarb sbb outsb xchg (bad) int3 mov xchg push fildl cld xor icebp lcall frstor je jp sub sar call imul stc jmp or inc int ret push gs (bad) (bad) out cli xchg add xor testb xchg jnp push cld dec dec cltd dec push (bad) push cld xor jo cli or dec mov int3 movsl jo mov jns dec cwtl out dec (bad) cmp decl jae xchg daa sbb fildll lock insb js dec sbb jbe inc adc and cmp call xor lds mov jnp and adc push mov (bad) (bad) (bad) incl stc xchg jb inc jle lret push xor jl push dec js out aam push inc push clc (bad) lcall and mov les shrb into popl in xchg in lods bnd fsubrs or and imul imul xchg or inc orl mov sub das (bad) (bad) (bad) ljmp sub clc sbb sti clc nop mov scas cli fist push enter (bad) (bad) (bad) (bad) cmp push add out insl add cmp pop add mov xor sub (bad) (bad) (bad) (bad) stc repz insl outsl and lret movl xlat mov xchg or aam (bad) (bad) (bad) decl dec cmp add mov pop push mov mov jle int inc daa lret cld lcall cmc imul jecxz fs inc fsubr and jnp adc cmpsb stc ljmp clc (bad) sbb rcl add arpl xchg add jne add lcall xor enter add cmpsb leave jno in sub (bad) aas es sub popa fnstsw icebp inc inc xor iret sahf ficompl cltd (bad) xor into mov aam inc sbb (bad) lcall mov pop leave out jle arpl mov sub add mov lret (bad) incl jbe ja cmpsl or inc or jl (bad) (bad) lcall xchg mov and ret jb cmpsb lock cmp popa xchg enter push mov lcall xor mov repnz test mov rorl sbb das cwtl (bad) (bad) (bad) incl push mov cmp rorb aam push jo rclb ja popf jns lock ljmp fcoms add jbe adc test call push std mov mov ret outsl (bad) lods mov inc out (bad) (bad) call fnstenv inc cs outsl ret pop cltd jnp,pt repnz jge sti enter dec ds data16 pop je stos psrlq iret push fdivrl (bad) xchg in aad out clc out test movsl xchg mov and mov repz (bad) jmp mov fsubr add not sub fstps mov jge fs (bad) (bad) incl andl jbe mov std (bad) cld shll or shr sub mov (bad) jmp jle stos fwait pusha addl std mov (bad) ljmp pop adc mov test mov insb sub es (bad) (bad) fildll mov imulb in push mov jge adc lea mov decl inc fstps fnsave scas mov jl (bad) cmp sub add add mov push inc add fsubr jns mov mov es (bad) call imul lods repz enter cmp das ret mov clc (bad) (bad) (bad) (bad) incl scas fidivl pop lahf pusha shll jnp cmc push adc into fdivrl push hlt outsl push orl sub or (bad) (bad) (bad) call push jne dec (bad) mov fmuls in mov xchg ss push fist mov add adcb (bad) (bad) (bad) cmp sub fs stos dec aas pop test lcall aam sub (bad) lcall mov cmp in loope pop mov fadd rol insb (bad) (bad) (bad) (bad) clc fdivrp fidivrl and xchg jecxz mov outsl pop aad call push cmp pusha jne or (bad) (bad) incl xor movsl pop adc decl jns or loopne arpl push pop sub (bad) (bad) (bad) (bad) jnp imul and adc and (bad) xbegin repz pusha mov (bad) (bad) fidiv jg cwtl (bad) xor lahf aaa or ficoml cmp shll inc mov pusha movsb dec cmp jne cmpsb xor (bad) (bad) (bad) sti loope test xchg adc xor pop adc insl psubb lods jmp (bad) (bad) call daa popf outsb rcl sub xchg rorl inc vshufps mov sarl or sbb cld fildl lock lcall cmp xchg cmpsl mov aam pop cli jmp repnz xchg rol (bad) sti mov inc pop (bad) call xchg mov ds (bad) decl or cmc outsb test dec lret lcall add cmp xchg sub jg ror jo cmpsl inc iret insb call aas cli push dec inc (bad) push mov data16 (bad) (bad) inc pusha push push push and sbb mov loopne or sub sarb out movl (bad) ljmp push sbb lods pop orl fistpl fistl adc (bad) fcomip jne cmpsb es test imul movsl sahf jne lock nop rcrl scas outsb mov je test lret cs sahf das inc (bad) (bad) (bad) ljmp insb int xor or push sbb xor stos mov inc adc (bad) (bad) incl ss pushf lahf lds mov test loop js push mov mov pusha sbb push xchg ja cs and sub sub icebp sbb (bad) incl lods gs jae divb test push (bad) lcall into dec pop loopne loope inc movsb mov test pop xchg add fcomip decl cltd fistp mov pop ficompl sti insb into ss pop mov jecxz (bad) (bad) (bad) incl mov lea jae fildl mov nop outsl mov pop (bad) (bad) (bad) decl (bad) stc dec scas xor or inc movsl push push aas popf mov imul fwait mov or inc (bad) lcall ret mov mov mov das add inc loop (bad) (bad) (bad) lcall push rcrb bound xchg (bad) mov dec mov dec xchg cmp inc (bad) mov and (bad) incl cwtl mov lret jne sbb testb jmp ja pushf and lods pushf pop jp into das repnz or dec jo (bad) popf in xor mov repz and mov and (bad) (bad) (bad) (bad) xor and ret movsb xchg cmp cwtl adc add inc hlt xlat pushf jo ficompl imul (bad) (bad) (bad) jmp jg mov adc add aad stos cli xchg mov dec xchg mov lret cld or lret sub imul mov cli je mov insb test add and neg pop mov out test (bad) (bad) (bad) (bad) fidiv adc mov add outsl push loop and stc cmc lcall adc gs pushf subl sar dec pushf int3 icebp fcmovb sti sahf pop fistpll cmp dec out jecxz mov je and cmp (bad) clc stos fs cwtl repz loope cltd (bad) (bad) jg outsb fcomps inc xor subb outsl sti shlb jmp mov subl xor ficoml insl cmp lods sbb mov adc pop xor out jno (bad) scas cli (bad) call pop mov pop pop cmp out adc rcll jno add sarl jb (bad) (bad) inc in sbb pusha lock (bad) push lret pushf cld mov shrb (bad) and or stos pop pop inc sub (bad) (bad) (bad) (bad) jo,pt jae push or ret pop mov fcomip aas cmpsl xlat addb cwtl jno mov jp (bad) (bad) (bad) lcall lea jno popf push inc fwait mov push sub jbe hlt mov inc cmc roll jmp jne js movsl cs loop dec lock jno lcall mov (bad) cmp pop ficomp outsb scas pop dec or (bad) (bad) incl cmp pop inc leave mov stc jno sbb pop and leave daa (bad) (bad) (bad) lcall (bad) sbb push out xchg push mov add mov (bad) (bad) (bad) ds mov adc inc and loope ficom bound and repnz icebp stos outsb ljmp sub sub subb mov add sub (bad) (bad) (bad) ljmp pop popf ljmp fistpll loop or mov out std and push movsl add decl stos cmp mov or in xor lds loope xorb sbb push (bad) ljmp xlat scas sahf mov jbe hlt aaa xchg pop inc mull sar (bad) fisttp mov or and jl int cmp stos sbb (bad) (bad) (bad) push sbb pop aas (bad) sbb popf enter clc dec push jno sti insl aam fisubl mov icebp (bad) decl rorb jg add into lret mov lods mov (bad) (bad) incl stc outsb bound pop (bad) pop and xor mov lods cmp stos (bad) jmp push popa sbb negl push ss mov int xchg jb (bad) (bad) lcall mov inc lret je nop ds cmp in cli cmpl (bad) lcall fdivl enter mov (bad) sub scas (bad) scas xor (bad) (bad) incl mov push xchg mov ret faddl out xor jo push pop (bad) cmp incl jp (bad) dec jl fwait leave jecxz movsb in cmc popa add sbb jne (bad) (bad) (bad) jmp out xor gs xor adc push loop enter leave loope outsb fisttpll (bad) mov or add fdivrs rcrb push mov (bad) sub (bad) pushl and js pop ficompl cmp or sarb lds (bad) (bad) (bad) pushl jbe shl int aam lcall push push push xor fstps (bad) pushl std and push push stc xchg push lods shll lcall (bad) ljmp out inc cwtl ljmp mov dec dec sub dec jecxz dec gs (bad) (bad) (bad) (bad) mov cli movsb inc cmp movsl fnstenv and daa es fs mov (bad) call inc in cmp mov (bad) sub cmp adc push pop push cwtl add jb sbb (bad) (bad) in dec push inc mov les (bad) xor sbb jb jbe jge pop push adc pushl push outsb add push fcmovnu fnstsw gs jge sub sbb mov and (bad) nop dec mov shrl loop aas mull loop or xorl dec cmp pop jmp aas in add or lods ds outsb xchg or icebp js mov mov lcall cwtl pop in jno jg dec xlat mov jp cmp aam cltd push loop and (bad) (bad) lcall jle cltd icebp add lds xchg xor dec jnp sbb ss mov mov cmp xlat ds mov sbb test shlb (bad) (bad) mov stos mov sbb jns sti icebp (bad) ljmp xchg loop mov xchg add pop stos inc mov push stos outsb ljmp pop call push ljmp (bad) (bad) jmp mov outsb mov add stos jo iret decb xor es mov or push jg (bad) (bad) mov into and ret je imul xchg repz (bad) mov out jne mov je dec and bound (bad) (bad) jmp push inc jne das xor sub mov mov repnz sub imul cltd cmp sub imul add popa iret movl push hlt (bad) (bad) (bad) call jb stos jmp inc jbe popf cmp daa mov xchg jmp mov fsin (bad) (bad) incl repz ljmp orl sub into xor pop jg aaa adc fldt lcall pop out sub insl or mov sbb pop cld push and dec cmp xchg (bad) mov out loop ret lretw (bad) inc push pusha jbe loop cmp add in xchg aam xor xchg push mov dec repz mov cmc mov outsl arpl (bad) (bad) call sbb jb subl ficomp popf jno sbb inc sbb lods sub sbb out adc bswap mov inc (bad) (bad) (bad) mov rolb je out fadd je xlat call (bad) decl push jns aam or push push insl (bad) std sti ror mov cltd mov xchg (bad) (bad) jmp xor mov xchg mov sub (bad) (bad) (bad) (bad) fscale call push pop dec ja mov xchg sbb mov in mov mov add sbb mov out out inc lods (bad) (bad) jmp mov cmpsl mov dec sbb movsb xchg and mov (bad) (bad) (bad) decl xchg and stc push (bad) (bad) xor mov cwtl mov pop push mov mov or mov mov nop aaa outsl outsl (bad) (bad) call mov mov lds iret or mov mov or jl popf call ret xchg push (bad) jb sub fisubrl nop gs (bad) lcall ds outsl test cmp (bad) sub xchg rorb js sti (bad) (bad) mov rclb xor int3 xchg jo out xchg pop loopne sub add xchg xor fsubl popa push dec lret xchg (bad) xchg mov mov inc daa (bad) (bad) (bad) ljmp xlat scas pusha rcrl cmp sub inc shrb (bad) and frstor into mov (bad) decl nop sarl cmpl scas roll push dec push or lcall sub or ds lea push fs and push sbb sbb mov stos scas fldenv lds or in arpl mov push push fsubrs outsl cltd mov pushf mov (bad) (bad) inc scas adc xchg cwtl sub mov adc add (bad) xor sti (bad) call test dec pop (bad) jmp ljmp dec jno pop push int clc fild sbb dec call pop xchg cmp sbb jmp nop outsb push test rorl lock rorb sbb dec addr16 dec iret sbb push dec nop icebp lods xchg xor aam adc fisubl je imul ror xchg (bad) decl pop mov xchg (bad) ja out fwait imull pusha aas pop push sub jmp push cltd imul pop adc sub (bad) (bad) (bad) pushl push loop incb sub sbb mov mov dec mov cmp jecxz jg add mov adc cli dec and (bad) out xor push out cmc or jp push xor insb inc jecxz cmp (bad) (bad) (bad) call push ljmp xchg repz pop push test pop stc cmp push fiadd loope sbb add xchg stos mov cli in test (bad) (bad) (bad) dec jp xchg inc (bad) inc sub lods in incb xor sub mov mov push sti push fucomp jae add ljmp js cmp icebp xchg cmpsb jae (bad) idivl std (bad) mov mov jo sbb dec push in (bad) push xchg sub or lea (bad) (bad) (bad) incl ss jmp jp pop cld (bad) ljmp push pop xchg loopne dec or aad (bad) (bad) (bad) dec nop mov mov (bad) (bad) std icebp lea sub aas test (bad) mov push mov or sbb mov push mov push sub inc (bad) (bad) (bad) (bad) out xor adc cmp add das or scas mov lods adc icebp dec nop mov leave (bad) (bad) (bad) jmp mov push enter xchg inc sti (bad) add movsl mov mov push sahf mov xor adc (bad) (bad) dec nop scas xchg stos int insl out mov cwtl xchg ja leave add jo aas pop arpl enter (bad) lcall test sbbl jge dec ljmp ljmp (bad) mov mov bound mov mov movsl pop mov (bad) lcall es rcrb pop imul loopne (bad) (bad) (bad) pushl fistl negb xchg std adc in cmp push loope xlat jne (bad) (bad) (bad) jmp jp sub rorb dec and ljmp jp fldl pusha pop mov insl push rorb fistl ds ret pop in or sub call xor jbe cmc add cs jecxz push repz je decl (bad) cli aas push dec lock push or and cld xchg mov nop (bad) (bad) (bad) lcall repz push add adc mov push jl mov cmp jecxz add adc outsl (bad) mov mov jb and inc (bad) (bad) (bad) call jmp loopne scas xchg mov push lahf cltd cmpsl jnp mov inc pop (bad) (bad) (bad) (bad) mov addr16 movsb push dec sub mov gs add xor dec stos lods or (bad) (bad) (bad) (bad) jmp pop mov aam cwtl jmp pop pop imul mov out or (bad) (bad) (bad) decl push xchg push sbb lods and push stos xchg fnstenv sbb mov test mov cmp ds (bad) (bad) incl xchg ljmp popa push lods cmp dec push imul sbb xchg dec aam adc and jp (bad) (bad) (bad) incl cwtl sbb das iret xchg jnp,pt insl push mov push (bad) not into xlat ret movsb xchg pop lock ljmp mov and fisttpll jnp (bad) adc cmpsb (bad) jmp xchg negl data16 fdivs sar lock in jg cmp (bad) (bad) lcall adc cmp lods clc pop mov cmp add or repnz cmp decl int loope sub pop sbb pop dec pusha jns push xchg push or outsb mov test out add sbb push jne xor mov sub (bad) mov lsl adc data16 (bad) pop pop fnstenv dec add (bad) (bad) decl shll or outsb int dec (bad) cs or adc pop jb fdivp ret das sti (bad) (bad) mov ds iret imul icebp xchg jo mov lret test es (bad) call aaa push cmpsl sub xor dec lret push xchg cmp (bad) (bad) ljmp mov lahf adc xor xchg test adc jnp test inc lret call lcall xchg jns cs mov test (bad) (bad) (bad) pushl clc leave or lods push das cmp mov sub fstl sub mov cmp ja (bad) (bad) jmp dec xor pop call into enter data16 fcom fnsave sahf pop sti push in xchg rorl (bad) (bad) (bad) ljmp or jnp jns (bad) xchg and arpl popa cmc shrl xchg mov lcall stos ficoml sbb lock xor (bad) or mov pop mov push mov xchg int daa inc fcmove cmp jae out pop dec gs aad stc clc cmp (bad) (bad) (bad) out ror mull popa cli cs int scas lret in sbb fs mov jg add call hlt xor jne pop es ds sub jp inc xor (bad) ljmp ja movsb jg push cmp xchg xlat mov (bad) mov (bad) pushl data16 xchg aaa dec cmp push mov jge outsl cli jmp lods lahf jno fstpl push sub jbe movsb lret (bad) fcos (bad) (bad) lcall imull inc xor out in lods das mov sbb (bad) xor cld (bad) incl mov xchg mov xor stc repnz pushl imulb (bad) pop cmp rcrb bound nop outsl adc or in aaa add dec icebp lcall aaa inc pop pop lds inc std adc pop lock jmp or addr16 aad mov and ljmp aaa js inc lods xchg jmp into idiv (bad) jg mov and pop and outsb scas and or lods test (bad) (bad) (bad) jmp jg mov cmpsl adc ljmp (bad) popf (bad) loop sbb inc jns lcall jno sbb and (bad) mov int3 sbb cmpsb aas bound cwtl test cmpl sub pop imul jl mov jp mov (bad) (bad) (bad) out repnz ficomp fnstenv orb hlt pusha lock sub dec (bad) and xchg inc hlt test sbb call shrb (bad) (bad) int inc cmp dec sbb pusha or (bad) mov add out mov dec add inc (bad) (bad) (bad) jg iret lret cmp pop ljmp mov sahf xor push ds xchg outsl jle and es push ret lahf sbb ja cmp and (bad) (bad) incl mov jbe stos and pop (bad) jo cmp mull mov lret lret xor jmp lods out push cmp iret pop bt test test inc nop cmp (bad) (bad) (bad) (bad) clc xchg pop add push mov sbb int scas icebp xlat add nop mov push loop (bad) (bad) call ja add xchg es mov test mov cli and and (bad) (bad) (bad) (bad) mov movsb (bad) push dec dec jno insb nop aam cmp lcall xchg test (bad) (bad) (bad) pushl mov adc pusha fsubs push mov repz cmp or aas loopne (bad) inc orl xor fsubl add cmp add outsb (bad) (bad) in mov jl add notb loope or addr16 inc pop (bad) (bad) (bad) (bad) cmp insb xchg pop ffree and (bad) mov sti lods sbb or push scas dec cmpsb sub ljmp popf repz into push and sub dec push decl (bad) mov jne mov xor (bad) jo mov xor ja ljmp mov inc rcrb add movsl mov (bad) fisttp popa sub jne popf adc mov loope sub xchg mov (bad) lcall in out (bad) fstl jno xchg in jb mov (bad) ljmp cmpsl outsb je outsb and mov or std js xor lods push (bad) (bad) fistp insb jo fwait cwtl and xchg leave xor xchg pop jbe stos and out popf adc in ret cmp outsb add (bad) (bad) call int3 sbb hlt clc cmc xlat shlb cmp pop pop cltd movsb loope insl dec mov stos sub jg sub sti jl mov dec nop mov mov (bad) (bad) pushl icebp rcrl aaa sbb sub jae and repnz mov lock lcall xchg push push mov lea mov dec test xchg mov (bad) (bad) (bad) jge inc xor lods outsb out jno decb fsub cmp adc cmpsb push sarl adc incl jl pop scas fs test xchg xchg lds cmc mov (bad) cmc jnp into fcomip jg dec mov inc in insl or and js jg in (bad) jg (bad) fsubr test ret cltd push xor loopne inc pop std (bad) repnz inc push fistpll and std pop imul mov or jo out push ss (bad) (bad) pushl in testb ss faddl pop inc xor outsl psllw or dec cld pop int3 inc inc aad pop mov mov (bad) incl rcrb movb xchg aam lcall jmp cmpps (bad) ljmp adc mov iret xchg loope aas aad xchg mov xchg (bad) sahf mov lcall std jae sbb data16 daa loopne dec fucom fiaddl (bad) jns movsl (bad) (bad) (bad) (bad) cmp addr16 inc rcrb dec mulb out mov int3 out (bad) mov fnsave in cmc add mov (bad) jl push inc in or rclb jmp andl (bad) (bad) mov je mov gs lret lahf mov ljmp cli (bad) incl cmpsl ljmp mov (bad) repz ja mulb or (bad) lcall xchg mov popa jnp call mov cmp push (bad) incl sbb movsb sbb add std lahf fadds (bad) (bad) (bad) (bad) jl push sub add out sub les adc cmpsl pop or push lret and sbb nop mov add ficoml (bad) (bad) push sub (bad) (bad) (bad) jmp push push call gs xor enter cwtl arpl mov push outsb mov mov stos xor iret or mov sub addr16 add mov ljmp and xchg bsf push ficomp cmc stos xchg and cwtl (bad) (bad) (bad) call (bad) jmp stos jge pop addr16 movsl jecxz or sahf push jbe std pop stos movsb xchg ljmp (bad) pushl std aam sbb pusha pop mov push ds mov lcall sbb das add call les pop movsb mov (bad) (bad) (bad) lcall call or mov adc fisttp jnp addr16 sbb fisub xchg xlat push xor ljmp fld dec dec and clc (bad) (bad) call mov mov js pusha inc ret xor dec fcompl ljmp dec dec cwtl adc push inc or (bad) xor call fs (bad) daa (bad) push push sbb mov into xor xlat ljmp fildl sub xor je xor sub (bad) (bad) (bad) fistpll cmp xchg or or test push mov js cmp movsl pushl call add mov inc sub ror inc rclb je adc jns es (bad) (bad) call pop outsb jno jmp push pop lds or shlb mov lds hlt stc roll (bad) (bad) (bad) push test cmp xchg pop add inc loopne mov jbe push mov mov (bad) (bad) (bad) call (bad) or cmpb int3 loop ret les in popf adc das add (bad) (bad) fistl inc jae lods pop dec dec mov inc push inc call sub in pop lock std in cmp ljmp loop pusha sub (bad) dec sbb fisubl jns repz adc sarl push dec pop pop dec pop jg sahf mov push mov call mov bound push mov push cmpl call mov jne aas jne adc sbb mov insb aaa or aaa stos (bad) (bad) mov in loope pop xchg xor andl int jl sahf (bad) inc mov (bad) (bad) incl popa pop iret mov ljmp int3 inc jo sar cmp sti mov daa cwtl fiaddl (bad) pushl lods or inc xchg mov mov in sti sarb rorl add jae (bad) (bad) decl inc sub mov mov sub (bad) repnz rorl out out std stos addl lcall pop or (bad) mov out jp add lret adc xor jmp mov (bad) jbe roll lea push inc add pop adc hlt adc repnz arpl aad incl sbb gs mov scas xor (bad) (bad) (bad) jg or pop mov jecxz dec or cmp xchg dec sub (bad) (bad) ljmp bound loopne mov adc dec test cmp (bad) (bad) ljmp in or mov ds adc sti mov sub dec jns add or (bad) pushl xor repz cwtl adc shrl push sar clc cmpsb push mov xchg (bad) mov outsb dec fimul jmp (bad) ljmp mov add or ret subl add mov jo or push fwait (bad) (bad) (bad) std inc aam push jne cmp mov daa xlat mov iret add cmpsb adc mov sbb repz push (bad) hlt mov jl imul (bad) (bad) (bad) jmp sbb mov jmp xor sahf adc mov adc mov mov sub shrb daa dec jp fnstcw mov aaa pop push outsl cltd cltd adc dec cmpsl incl stos mov stos push xor aas out rcll mov mov add ljmp mov push xlat sbb cmp xchg jge jnp (bad) ja xor lock incl rcrb sub fiaddl jmp iret jecxz (bad) iret pop cmp stos call pop std mov cld mov push dec xchg inc cli sub push (bad) (bad) (bad) decl jnp loopne sbb lock lods and or lcall scas andl jge jns mov pop add iret jns lea jno movsl jno (bad) ljmp xchg fidivrl mov insb movsl cld lahf stos fbstp cli lcall lea ror xor cld sahf data16 (bad) (bad) dec in and inc ljmp les adc icebp es adc (bad) (bad) (bad) (bad) jns cmp jmp daa mov pop dec mov sub push mov (bad) (bad) ljmp adc push pop jl aas pop mov iret icebp iret fadds enter fsts jbe (bad) (bad) (bad) incl fisubl test pop cli push xor neg xchg jmp movsl push mov cmp pop xchg (bad) (bad) pushl sub iret or scas insl ss fdivrs out lods or sarl sub idivb js (bad) icebp cmp pop int je jle push mov addr16 lcall jg ret test jge mov popf (bad) jno sbbl das jo jp ret dec ss or enter out push mov sar outsb mov mov xchg dec xor js push inc pushl rcl inc fucomip lcall es or jl cmp mov sbb fldcw inc rcr xor pop ret repz or push jecxz mov mov stc arpl jnp (bad) add mov xor outsl mov mov mov das push inc cmp adc push sbb inc sti (bad) in nop (bad) (bad) lcall cmp add sarw cmp mov xor (bad) (bad) ljmp mov rol ljmp xchg (bad) movsl and call mov pop (bad) (bad) lcall fidivrl popa into iret and or jae mov adc dec xchg das inc add or push cld (bad) (bad) cmp aam xor xor sub das rcr ds test and dec js sbb (bad) lcall (bad) mov movl call add or sbb dec mov sub mov shr in stos mov daa mov (bad) cli cmp push dec xlat data16 push pop xchg mov xchg fstpl das mov es (bad) cmp popf adc cli loope xchg jo inc xchg pop xchg pushf dec or dec or (bad) jmp inc inc out loopne xchg out sub cmpsl clc pop je mov mov xlat sub push inc adc add dec addr16 adc cmpsb cli (bad) ljmp addb add push insb mov pop (bad) test test push lods xor mov mov push rcrb frstor mov sbb inc sub (bad) (bad) lcall aas test fmull fisubl mov in sete inc jmp xchg fcomp or dec dec fdivl mov shrl aas xor js push jle iret ficom out ljmp and jmp xchg or mov and das pusha loop scas pop mov mov add (bad) call (bad) fisttpl jge or pop xchg xchg loopne roll arpl jge mov mov shr (bad) decl jns sbb sub fildl and xchg cmpsl iret scas (bad) lcall adc cltd cmpsb push mov sbb sahf into mov xchg cmp mov call imull xchg mov (bad) (bad) jmp (bad) xor push cmpsl push fstps pop mov sarl pop adc xchg popa (bad) (bad) (bad) lcall cmc inc pushf mov and data16 jae jb push sub push loopne add sti sub (bad) (bad) lcall loop add or insl rclb std outsl jmp cwtl popa or ljmp mov sub incl sbb repz outsb test repz xor or mov cli adc fwait mov cld xchg push or dec xchg inc jno sahf mov (bad) (bad) jmp or (bad) jo jmp fs je iret ffree push fwait int3 cmp loop cmp sar pop mov scas and jne and adc popa decl dec adc pop cmp movsb cmp (bad) (bad) (bad) (bad) fmul imul lods repnz gs xor and mov rolb (bad) fcomip jge lahf ror xchg mov fwait jle call push fwait (bad) ljmp inc cli cmp sbb cs into inc pop mov mov adc loop pushl lret xchg or enter pop (bad) cld fbld clc (bad) push test (bad) jmp and push loopne add lcall fsubl xchg jp loopne (bad) jmp imul push sub lods mov cld loopnew pop hlt mov sbb fsubs mov xchg mov inc fsub lahf int (bad) decl leave (bad) or cmp outsb jmp (bad) (bad) pushl add sarb das leave xchg loope xlat cwtl xlat push push pop inc je xlat bts (bad) (bad) (bad) pushl jle cmp push loop es jle add mov movsb loopne (bad) (bad) pushl jle clc js pop clc (bad) ljmp in sbb dec fstpl mov popa jecxz sbb mov mov mov mov pop xchg mov and dec mov add xchg insl and (bad) (bad) mov mov adcl xor push and test (bad) enter adc rol dec push fs add les out (bad) (bad) (bad) ljmp or ret or aam in scas dec cmp add dec jo std lret scas push add (bad) (bad) (bad) (bad) jmp xor cmp jp (bad) jp xor sbb xlat roll cwtl test pop sub or test (bad) std xchg nop dec adc cmp es data16 test ror xor or insb fmull (bad) (bad) lcall std adc xchg adc push les mov lock sahf sbb loopne lcall xchg fildll data16 jmp lds test ss sbb (bad) incl jns push stos jae loope pop sbb test mov fdivl decl sbb fcomps jb adc pop ds or mov xor hlt aas dec ds and push leave fs mov xchg push aad (bad) (bad) (bad) jmp or repz inc mov andl push stc insb movsb stc repnz shll xor (bad) incl cmp sahf adc pushf push inc hlt push cli xor (bad) (bad) (bad) incl mov push insl lahf negb push dec sbb dec add pop imul push .byte mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop or adc ds repz sbb jo mov pop push dec bound arpl pop sbb mov shl jae insl add pcmpgtd mov jb popa arpl add lcall pushf int3 pop inc add inc and clc jmp idivl popa adc xor int3 inc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp fcoms adc scas dec jo loope jmp shrd daa daa test mov daa pushf rcrb nop mov daa cmpb daa daa daa jo insb push fs int3 daa daa daa daa pusha pop in daa daa daa daa fcompl push clc lock daa dec push add mov (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) dec inc inc cmp jb jb xor sub out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub inc mov loop ret mov pop pop xchg dec pop xchg test shlb xchg sbb add in lds pop and gs inc je addr16 add xor adc jmp mov sbb xchg sahf sbb fistpl push cmp popa jne add adc ljmp insb cmp jg adc test jns add jne loopne sar test mov adc hlt mov add sbbb cmp mov dec fadd jb add or or cmp (bad) (bad) call adc xchg lea cmp jl movl pop repnz jb sahf es divb lret or mov and add out not sub test cld dec adc adc popf fist je insb or push or push sar mov xchg or ret decb fistpl (bad) xor adc call fisubl (bad) sub inc aas jg sti outsl enter je mov sub cmp xor popf popa cmp (bad) or cmp xor add fcmovnbe outsl out mov clc add and repz bound mov decb xlat cmc adc add dec xor dec (bad) mov jo add or sub cld jg stos jg test sub sub cmp jge mov xchg adc out insb jmp daa xlat or inc add mov in mov aad test fldcw (bad) lds stos clc add sti jae lea (bad) xor jnp or xchg (bad) cmc push sub mov add sub pop cmp aaa adc ds enter push sbb sbb cmp inc cmp inc adc push pop add sub cmp in cmp push test adc add pop (bad) sub mov sbb adc or mov push movb daa or adc sub or mov sbb call add mov inc mov mov loopne mov sbb push mov cmp pusha cld cltd adc xchg lods sub add adc repz xor sub sbb jl les adc add aaa out subl add or mov cld adc adc loopne pop mov pop mov sbb fadds pusha pop pop adc pop int3 (bad) rcl sbb pop ret pusha or xor pop mov sar cmp stos jg adc jne mov push xor ljmp xor mov sbb test in (bad) cmpsl lock pop mov pop ds pop jmp sub sbb push jne sbb mov mov jle fistpll jne movsb sub cmpl bound dec sbb hlt inc add xor dec (bad) loope sub je shrb xor mov pop inc and ljmp repnz jne xlat roll xor cmp adc test add mov loopne mov int3 sti clc stos jle jg jg inc cld jbe addr16 push push mov add or sti mov push mov add jg sbb pop or mov add pop inc scas (bad) jne push lock pop or xor mov cmp mov fcoml cmpsb push add or sbb jbe jmp loopne push lahf cmp sarl sub mov add arpl sbb das pop jmp inc (bad) arpl and ret pop pop push push sbb cmc sub or dec out sub jo xor or insb negb mov test jne test ja (bad) or movnti add push add loope push or mul mov add (bad) jge mov adc cmp icebp andl push int3 xchg mov cmp stos rolb pop in andl cmp fisttp mov testb sahf lock sbb cli scas ljmp inc (bad) or orl jmp mov cmpl jo in adc push adc or adc pusha (bad) sbb and pop or pop mov jg add pop jg add repnz fsub (bad) mov loop push (bad) jge loope add cmp cmp lock adc xchg adc sbbl notb clc xor mov jnp jge lea cmp add negl add sbb shll sbb sbb mov cmp imul (bad) sub fnsave cmpl iret adc in pop (bad) hlt xor dec daa add inc lahf add add dec or icebp mov pop pop test add cmp ret add orl pop mov rorb mov or lock lret pop sbb je add pop mov add ret add mov nop xchg in inc rolb sbb cmpsb push push ret hlt lret or mov movhps mov sbb jne,pt (bad) ss adc xchg ret (bad) mov push mov (bad) add mov ss adc mov add sub mov mov ret test call jge cmp or xor mov dec jae cmp je je mov loopne mov test je sbb enter dec jnp pop or add push jmp out xor add outsl jo xlat (bad) repz push mov loopne cmpl pop mov push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov hlt jle mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor jnp mov ds inc mov fldcw movnti pop push sub fist fwait pop pop xor push mov push test aad das mov shl cs (bad) mov add sub sub mov (bad) mov stos jmp fsubr sbb jmp mov sti jge je cmp and mov xchg adc inc (bad) or pop pushl mov cmp mov ja and idivb jb push sbb lock adc imul sti dec dec std movsl data16 call das mov cmp mov lret mov inc inc and xchg pop xchg push xor mov mov inc inc dec ja add push shr je mov cmpsb pop and cmp jne dec mov sbb aaa in aaa or jne jmp adc add adc (bad) loop je mov cmp jne push adc add adc outsl pop loopne add jne add cmp jne cltd push icebp or jmp add jl (bad) push mov shr or int3 in dec pop cmp shl mov inc pop and mov cmp jne dec dec inc sarl dec and pushf mov cmpb fcomp fdivl int loopne data16 stos pop aaa in popa adc pop daa push js jge fisttpl sub mov push inc pusha and add dec jae or je or je and je push imul xor dec and clc (bad) fsubp je jmp or or cmp ja lea mov add push es int or jge jmp inc jle mov jle dec pop sub jmp inc inc jmp mov jbe push je (bad) popa jb xchg and jbe push adc or pop add aad cwtl pop xor mov xorl (bad) mov mov push cmp cmp push inc mov dec xchg jecxz loop repz decb inc into into pop repz mov fist sbb fs je adc fbstp mov adc lea fldt jbe (bad) fisub add je das sbb cmp je push and jmp movsb xor mov xor xchg push cmpsb stc sbb jmp fstp fldt loope call (bad) xchg arpl (bad) sub adc dec push repnz add add pop stc in or ret mov adc jl and mov out sbb das (bad) in xchg xchg and inc mov mov lock jle fistpl es test out sub pop iret scas cld lret add leave sbb mov iret (bad) cld jbe imul cmp mov (bad) mov bound aaa jmp fild xlat fadds outsb xor xchg push or (bad) mov test into sbb rorl mov push pop test enter ljmp outsl movsl push inc push and daa (bad) lret into pop inc test xchg clc js aas sbbl or mov addr16 leave repnz bound and cld gs sahf mov (bad) pushl test lds iret decl js inc mov stos mov cmp (bad) (bad) (bad) jmp xchg test stos pop out sub imul (bad) divl jl xor cmp (bad) ljmp (bad) call mov sti jmp stos push inc mov push sbb sarb (bad) jmp int3 repnz test nop fildl daa movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov (bad) (bad) (bad) jmp fs aam imul loope jp iret inc bound ds push cmpsb scas (bad) (bad) (bad) jmp pop or addl cmp xor in cmp (bad) out cli lcall mov mov popa movsb mov and addr16 repz mov mov outsb fwait xchg and and outsb bound xor jmp or pop adc clc add jne push pop and add xor mov jg cmp movzwl mov (bad) lea push push inc or cmc or xor push push cld (bad) mov mov movl out ds cmpsb data16 add mov mov test (bad) mov mov jmp push clc pop aas outsw xor or leave mov adc inc push (bad) (bad) (bad) call push inc pop inc outsl jb popa outsb fs inc gs jo imul push dec popa jae push sahf jo loope insb jne fninit fwait sub (bad) mov loopne decl mov inc ret or clc jg ljmp or dec cld jne dec mov xor mov fbstp lcall jo insl inc fcompl fcmovu fisttp and sbb pop aaa push (bad) and or fsubrs rorb decb and push jp cmp (bad) repnz pop and mov jbe xor pop mov incl push cld fimul dec fdivs rclb mov push clc add stos pop (bad) mov or push mov cmp mov jmp cmp je pop mov add (bad) es sbb movb jnp mov push sbb pop test cmp outsl lods (bad) mov mov dec xorl fdivrs cld push inc jmp stc cmpsb jae lgdtl push std (bad) jb shufps and loope (bad) aad mov add add pop jo lahf inc (bad) push or mov or mov dec frstor adc fimul fcom and xor add mov (bad) mov add push mov push add pop (bad) ret in pop push sbb and out cmp push (bad) dec setne lahf pop mov in dec popf lock xor push push mov aaa rcrl jne jb cmp mov push or jne or ret cwtl push inc inc fcoml mov das and add adc call pusha sbb rclb rorl mov leave jne loope loop mov ret nop push xchg jmp lret xchg fwait mov push add repnz je pop in jno incl sbb pop add sub mov pop cs neg jno xchg add mov out mov sbb pushf sbb cmp mov mov jp les lods mov xchg xor cld pop inc mov (bad) rclb lods pop pop clc push mov icebp pop mov popa lock pop dec out dec add decl bound je movb dec push cmp sbb add dec jne icebp cmpsb jmp sbb add sbb jecxz sub cmp scas lahf push popf enter cmp push sbb imul call in push pop add mov jl call add hlt xor (bad) adc mov mov movl or or ficompl push movsb sub sub or cmpsl cmpsl pop adc mov push (bad) pop test push jo adc push clc pop sbb fwait inc jg jg mov xchg cmpb icebp pop rolb pushf (bad) in push call mov pop pop push pusha push push lcall or add jns,pn add or imul data16 xlat pop push push and mov mov cmpb je or jne movsbl inc insb pusha push inc jmp add (bad) xor shll jecxz popw add add (bad) popa addl cmp (bad) clc dec aaa insl jecxz pop (bad) mov add test faddl push ss ljmp cli and jmp orb icebp pop lods test (bad) sub cmpl je dec je aaa lock ja inc jbe add add arpl mov enter adc jne push jne push lea or jo cli push jns je orl movsl rolb cli push sbb pop sbb cmp sub movsb or mov imul outsl or jl dec movl pop (bad) jmp jle das hlt cmpsl lahf mov mov or aam or cmp xchg push add lret push mov cwtl or pop push or je add lds mov out fbld mov addb cmp jne inc pop test mov xchg in (bad) or mov jg pushw jno mov push (bad) xor out loop outsl inc jmp sbb sbb imul sub adcl shll mov add xchg aaa pop adc inc loope or dec or jo inc icebp mov arpl popf pop popa xor add cmp push (bad) test mov and std iret cs push push push push push mov push jns and pop es mov sahf sub or pusha add (bad) or sbb dec fistp (bad) ss aaa mov pop mov mov cmc lea jae mov hlt mov pop and xor push loope xor loop mov xchg ret das mov add sub sub pop cmp push sub fbld xchg jmp add sub jb je jmp cmp xchg push adc sub adc jmp sub std sbb es mov jmp mov jmp mov jmp mov jmp loopne (bad) jg sbb into jmp mov jmp mov jmp mov jmp mov aam or xchg push or dec inc mov pop ss mov jecxz lea (bad) je lods push insl jb outsl jp idivb mov test mov or inc sbb cli pop out in rorb sti and sbb mov sub xor push daa je xor pop xchg (bad) inc or cmpl cmp mov sub sbb cmp jbe push xor (bad) aaa repnz cmp jne and (bad) mov mov mov mov and incb loopne and mov inc fiadd adc dec (bad) call and mov adc pop add mov shll les dec mov mov xor in fnop cmp jle add (bad) sbb sbb in mov mov adc add out add jp cmp lcall mov mov push test xor pop xchg repnz subb jp cmp sbb xchg add add in pop ss jne pop pop pop inc pop sbb cmp add out icebp popa sar add mov xchg or mov icebp nop mov lods jg cmp mov add add rcr cmp mov es jne mov sbb add sarb mov mov push push ss ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push data16 adc cmpw clc adc cmp mov mov xor stos jmp push push add pop adc add cmp xor jbe xor jecxz adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or jne pop ret mov hlt lock sub icebp xor add jecxz rorl out fsub or cmp fldl es insl inc popa insb jne mov push add mov push jo inc (bad) adc lock testb ffree pop push sub push fwait out insl sbb popl je hlt pushf mov pop jp std push mov adc decl push lea aaa nop adc daa push out (bad) mov popa xchg inc jle sbb add or into mov fcmovu dec and sti pop jbe inc jg cmp cmp mov pop push jmp std dec dec sbb insb xchg adc test mov push je testl rcr (bad) push sub pop movw add xchg pop mov sub insl rorl and iret mov das roll loopne ds cmp and mov das or cmp mov (bad) xchg push push mov push push adc push cmp sarb rol lret mov (bad) cmp addr16 (bad) cld leave clc fdivrs bound jmp lea cmp push jnp addps into mov ds jne out jbe cld jmp fldl fistpl xor fmuls negb sbb add cmp test push mov mov sahf mov nop xor ret cmp je lcall add mov loopne call pop sub jmp pop cmpsl pop sub and mov pop or or addr16 in inc jnp,pt add push or mov add cli repnz pusha rcrl rcrl xlat pop stos clc mov push and in mov push cmp jl aam inc mov pop add (bad) xchg aas pop add jle add mov loope or jns push cld add cmp imul add and mov adc xchg cmp das sub jne out popa cmpl je cmp subl pusha sub mov scas rorl add (bad) fisttp dec mov cli lds push mov mov sbb dec clc cmpb lret or mov jle xor mov fmuls mov dec jmp aaa ret mulb sub add cmp fs dec jne add or pop out ja jge ljmp add dec jmp and inc pushf sbb loopne ret mov ss add pop dec jne dec pop lds mov or add jo pop or xchg jmp xchg hlt push rolb push pop jo imull (bad) imul pop enter dec and (bad) je cmp cmp xchg push and or pop and jmp aam mov mov movsl repnz push clc inc das lods out add add lahf cmp lds push (bad) cmc mov mov sti pop adc dec inc daa add mov pop mov out fdivr sbb xor cmpsb sub (bad) aaa pop es jl cmp jge sub scas sbb jg push fnsave add shr in jmp and jecxz mov int3 xor mov out xor sub jge mov in loopne sub stc add lea inc dec or sbb movsb push push cli mov push or lahf cltd mov push mov (bad) jle inc dec jge cmp adc imul add sbb or fsubs push mov lea lock add mov dec jmp jmp xor mov push insb dec js mov inc or insl jb adc adc roll (bad) xor pop faddl mov mov (bad) out inc nop pusha xlat push add clc jg dec out and sbb mov loopne clc pop sub xor adc lods jmp out stos pop in insl (bad) arpl cli pop cmp fisubrl test icebp pop and ret push push test jb fildl push sub das in rorb scas loopne mov mov movsl cmpsl cmpsl in push and call inc shrb shrb in jno jle add xor jmp js jae pop dec jle fcoms ffree aaa xor loopne sbb push lock dec push lock push das int3 mov add orb and ret add add add dec pusha ss outsl add add push inc sbb add jb adc jl push push inc adc orb in fcmove cmpsb add pushaw and push cvtps2pd or sar sbb loope push sarb jge (bad) lock dec cmp nop pushf lcall sub cmp push lods add add or sub xor lcall adc stos add in jne add xchg mov fmull or add je mov adc inc pop sbb mov aaa aaa test dec cmc sbb mov mov xor mov std (bad) (bad) cmp je cmp je cmp je cmp je cmp je cmp into cmp je mov stos fwait dec mov clc jmp adc or out mov jmp xchg aad push or pop jo,pn cs adc cmp pop jmp cmpsb cmp repnz push pop in inc xchg mov (bad) or pop call adc mov xchg push xchg cmc ret out sahf out and push pop (bad) push mov sti dec xor bound push je and lret cmp addb xor push and sbb jmp in jl mov inc cmp pushf subb test test dec mov cmp stos vpmulhw sbb jmp ljmp adc mov lea fldl add clc push push add sarl inc push mov add loope lods loope lds pop push mov cmp xor sbb pop dec or sbb rorl jo pusha add adc and jo sbb mov in add popa pop or jmp and in lea cmpb push js add inc dec (bad) fimul cmp pop jmp aas add rcrl cwtl xor xlat inc adc les ds cmp scas in jne add mov add mov clc sub imull mov in mov push popa jge xor push pushf clc in imul mov cmp imulb test in std adc les mov add es ja sti add jno popf fiaddl aaa inc ljmp out js inc add add je cmp push rorb dec ror or and int3 lock adc in pop mov nop mov xlat rcr pop imul rcrl sbb lahf adc adc pop pop ret sbbl mov xchg cmp dec (bad) jne cmp lock mov hlt add inc push mul push mov repnz mov sbb mov test jg cs mov mov ss lods in cmp inc push lock inc scas push push fiaddl add (bad) cld push xor call add push je test mov imull dec in in cmp inc popa fdivs adc cmp jne mov cmp jge pop sbb mov xchg add mov loope loopne sub add lea mov mov pop jmp decl stos scas mov rcl adc in xchg jge or push in test jnp mov dec in push pushf adc into stos inc int inc in dec push dec (bad) mov mov xrelease mov mov fbstp adc cmpl jle adc mov xchg dec jo and bsr paddq cmp mov inc push dec jne enter mov cmp mov push adcl and inc xor decl jne inc cwtl data16 push in xchg bound sahf adc pop dec adcl cmp scas adc dec lock pop loopne push push lock out pop pop mov and add in sbb cltd jecxz loope enter lcall mov jp dec (bad) ds add js inc jnp jne push clc daa and mov mov andl or pop inc adc jbe pop sbb mov push push xor aad or or popf (bad) jmp ret adc jecxz jmp sbb push jge cli pop jne ds mov js shr clc popa xchg ficomp cmp pop push push dec lock and or pop test je mov rcll lods cltd add sub ja fildl sbb js pop fwait scas jecxz and jl pop add mov mov out xor shlb insb jnp jge add inc add xor jno (bad) sub add inc notb mov cmp inc push push gs (bad) xor imul int or and je ja daa (bad) xor (bad) cwtl lea ret fwait mov fstpt push movb ret dec push push mov inc mov mov push repnz (bad) aas shrl jae imul gs xor cs insb jo incl inc gs outsl outsb addr16 popa je dec popa insl gs daa pop mov mov sbb neg pop ret fnstsw movb int3 push sbb add xchg mov and addb jl out jne cmp push mov call push out inc stc cmpsl (bad) popf int aas iret faddl mov repnz jl inc xchg sti and popf std xlat xor repz js push xor cmpb test nop jge call xlat or push sarl and cmpsb pop xchg sbb add cmp stos pop cmp mov lock inc xor mov adc rcrb (bad) rorb push sub mov push je das outsl repz bound push xor cmc add mov mov (bad) outsl data16 popa jb int and outsl mov jae aaa (bad) in pop pop cmpsl inc and add cltd inc in ja or addb (bad) mov shrb add xor dec pop mov push mov sbb mov adc lds (bad) push mov mov add mov fdivrs (bad) dec sub mov mov dec or lods push (bad) fnstcw push fsubrp (bad) cli mov and xor sub pushf ret inc dec add cmp inc cltd or les xchg (bad) push mov dec popa mov (bad) int3 loop jno cmp insb cmp aas and mov jne in jmp ret mov adc push cld jne sbb cmpsb cmpsb ljmp pushl and sbb mov push sub or mov insl fwait test sahf je sbb cwtl mov xchg push push mov lahf add pop mov dec pop sbb fimul pop pop ret sbb or xor sbb loope mov push test fidiv mov mov xor mov ss add insb mov (bad) mov mov dec js inc (bad) or sub loope adc addr16 xlat movsb mov pop sub addr16 imul sbb add dec inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or jg mul mov adc sbb and lret sarb and and (bad) dec jnp pusha rolb mov or cmp jb or dec movb loopne adc mov dec rcrl add cmp lea test roll mov hlt mov mov mov pop (bad) push mov hlt inc dec adc inc das clc das fdivrs push hlt cli mov inc test je or jae adc je cmp adc repz add cmp jne std cmpps loope or mov std ja mov dec dec cld mov or push and push adc inc lcall ds jo adc or xlat pop fdivrl inc inc inc mov sub and mov ss cli xorb sbb test xchg inc sbb inc mov mov scas mov loope pop pop cs das cmp dec xchg adc mov loop aas (bad) jbe and pop xor inc push and cmc xchg dec xor pop pop add mov dec xor fldenv jmp adc or stc push add rcl push popf pusha mov and or sbb add ss and pop repnz mov inc xor dec inc inc xor outsb sbbl in sbb xor or mov cmp add (bad) cmp insb lahf or sbb test inc bound cmpl clc jge push add shrb mov divps icebp or add jo cmpl sbb lock pop push js std pop lea push push mov mov push mov or sbb es je push fdivrl add jae popa loop out xchg add fs pushl and mov bnd adc inc or mov (bad) subl push sbb movb fldt xlat xor inc add dec pop sbb lods mov data16 xlat out mov inc call cmp mov jl add in sub stos iret cmp jbe mov dec jmp jge and ds mov adc mov clc inc loope in hlt (bad) in push push cmc rolb dec or loope mov inc cmpl or clc loop mov and jmp push mov out call or sti test leave jne mov jns push sbb add mov fmull movsb inc xchg enter cmp arpl in fsubl test cmp sahf imul push das (bad) dec repnz pop xor adc cmp cmp xor mov and (bad) mov or out rolb enter jb mov dec push or test xorb fwait clc add xor cs (bad) ljmp push gs into gs (bad) adc inc imul inc push pop imul outsl arpl inc gs jne je dec outsl je out jbe dec imul mov gs outsl inc arpl xor adc ret or jb (bad) mov pop xor (bad) outsl insl bound outsl js imul ljmp outsl ja nop jo cmp andps outsb dec inc xor xor js push je dec add or mov stc (bad) add or add dec clc (bad) jb jb lock call in fnop aas dec push in aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb xchg inc dec dec adc push daa and unpcklps or outsb daa daa add dec clc pmuludq call pushf loopne fcom pushf pushf pushf pushf ror enter pushf pushf sarb mov test pushf pushf pushf pushf mov pushf pushf pushf nop mov pushf cmpb pushf pushf pushf jo push pushf pusha pop pop push pushf pushf pushf pushf push dec dec inc pushf pushf pushf pushf inc cmp xor pushf pushf pushf xor and dec inc sahf nop push mov dec je insb jl dec dec dec mov dec pusha pop pop push dec dec dec dec push dec dec inc dec dec dec dec inc cmp xor dec dec dec xor and dec dec dec and adc dec dec dec adc add and add push clc hlt daa daa daa daa lock call daa loopne fcom dec outsb daa daa ror mov dec dec sarb mov test dec dec dec dec mov dec dec dec nop mov dec cmpb dec dec dec jo push dec pusha pop pop push leave leave in inc push cmovl enter inc cmp pushf pushf pushf pushf xor sub pushf pushf pushf pushf and sbb pushf pushf pushf pushf adc or inc sahf pushf pushf add cld push clc dec dec dec dec hlt lock call in fnop dec dec dec dec aam int3 enter dec (bad) sarb mov test dec dec dec movsb mov dec dec xchg nop mov test dec dec je insb push fs pop pop dec dec dec dec push push dec dec dec dec dec dec inc inc cmp dec dec dec dec xor sub dec dec dec dec and sbb (bad) pop movzwl shl or ret inc dec inc mov inc popf cmp or push and push cmp dec (bad) or xor es fbstp and scas push mov movswl add inc and dec pop data16 frstor mov pop and dec push (bad) push xor scas pop jg xchg into pop or cmovle push cld aam pop add jle mov rorl adc repz adc sbb and mov push pop push xor jmp xchg outsb daa hlt mov xchg pop ret jo fiaddl nop scas cmpsl add push and out stc imul or inc mov xorl push arpl mov push cs push mov jmp (bad) push gs adcl fs (bad) in inc pop or pop call push add add gs push mov dec push push dec inc inc dec add outsl inc pop jle sti (bad) and dec push inc push dec pop and mov dec push push pop sub push inc dec pop dec and (bad) (bad) dec dec inc push das mov imul and dec movsb pop sub xchg xchg xchg dec xor icebp repnz xchg xchg xchg hlt cmc div xchg xchg xchg xchg clc stc cli sti xchg xchg xchg xchg cld std (bad) call loope jecxz xchg xchg xchg in out xchg xchg xchg xchg call xchg xchg xchg in in out out xchg xchg xchg xchg rcl rcl xchg xchg xchg xchg aam (bad) xlat xchg xchg xchg xchg fcomp fcmovu xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg rol ret xchg xchg xchg xchg (bad) (bad) xchg xchg xchg xchg enter xchg xchg xchg xchg int3 int iret xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg movsb movsl cmpsb cmpsl xchg xchg xchg xchg test stos stos shll outsb aas jl xchg sub sahf aas jl sub add daa and xorb push xor push (bad) aas (bad) hlt sbb xchg or arpl je outsl outsb sub jmp fldl jg adc dec sub js mov popa jo pop mov mov mov jg or dec jne dec dec gs outsl jb stos in mov sti std outsb add or outsb mov push int insl cmp scas ds push pusha cmp push mov scas xchg scas push leave xchg mov xchg xlat hlt mov hlt or sbb fs outsb dec outsl idivb xchg jl test or imul lods inc ficoml mov push jle popa outsb addr16 scas cld add pop orl jecxz cmp out jo movsb mov dec inc sti inc and scas inc add leave mov jo xchg push imul ds movsb pusha scas (bad) insl inc fidivl scas pusha dec popa jo (bad) rcll mov mov nop adc xchg or (bad) movsbl xchg subb outsl imul sub div inc cmpsb or popa jae fmulp mov sub inc xchg sbb orl and shrb sub xchg adc sub pop clc jae push adc sbbl add push jb insb add fsubrl mov imul xchg dec jbe cmp mov ret adc fbstp inc inc popa mov (bad) nop scas ds dec push popa sbb push and insl in mov js push sub mov popa sub mov dec jne push aam sarl dec add push shlb test data16 bnd mov jbe sub adc inc push stos subl ds sub (bad) popa data16 fist (bad) je adc cs xor push add or push inc insb jae cwtl inc cmp das and pop mov inc or jbe xchg xchg enter push push icebp pop adc xchg jne int3 add mov mov bsf mov jbe add adc out jge inc sbb int3 inc decb pop and sub mov test std (bad) jnp sbb push loopne sbb mov push cmpb push push xchg adc outsb and dec (bad) imul and mov fdivs lods outsb arpl cmp inc push inc fdivs lods ret or div push mov add hlt scas and mov mov mov dec pop ret sub cmp cmpsl cmp aas lock mov rcll jno add xor jae scas or pop mov xlat adc adc or mov mov mov enter in ja pop push mov adc scas imul mov mov add mov cwtl js cli sti popa test or aaa lock adc adc sar or push cmp ja sub mov inc inc dec shr cmp mov jg inc pop cmp inc rolb popa sub push mov cmp jbe (bad) aaa inc cmp leave repz je movzbl push push (bad) jmp decl inc loop add repz jne inc imul loop add ds mov sub or outsb mov (bad) (bad) out or cmp je loopne add in out dec imull lcall mov cmp push add sub xor sub jle push or push aam sub outsb push xor arpl mov fcoms mov movsl outsl and dec movsb cmpsb cs or jo add adc inc cld mov cwtl rclb scas fnstcw push adc adc ljmp lock inc in (bad) cmp jl cmpb jbe adc sbb jecxz imul clc push sub inc pop addl cmpsl lock (bad) mov mov add sub jb sub std pusha (bad) cmp jl inc mov ljmp ljmp adc or sbb aas mov inc dec jne fidivl icebp mov sarb jl (bad) mov inc dec xchg jle cmp ret mov (bad) div dec dec out mov jle cli cmp pop mov idiv call ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd mov addr16 or (bad) dec inc sub xor clc jg pushl pushl mov negl cmpl inc aaa xor pop (bad) xchg sub int mov and mov orw fldcw mov dec add jno jge mov daa andl xchg (bad) fildll fistp ret add add sub fwait mov mov insb rorl (bad) fdivr mov cmp adc lods push sub rcrl ja in jae fldcw dec ffree ffree ffree ffree pop and or aad aam jns add mov arpl insb sub pop jg cli mov mov dec aaa pop or push xlat fcmovu mov push lock cvtdq2ps popa sbb fs lret mov icebp popf or inc lock jnp rcrb insl imul sahf sbb push cwtl pop outsl mov dec ret pushf roll cmp insl mov jbe fbld (bad) cmp xor and and mov xchg mov inc das ffree add and lsl pop notb jge jo mov inc call and add add std lcall add push adc sub jecxz push sti pop add lea sbbb adc dec data16 das sbb fldt fcomps setne jmp xchg adc ss mov pop outsb dec mov addr16 inc mov dec ret test iret add xchg insl sbb bound stos and adc adc mov rcl and xchg daa orl std add enter add push fdivl jo loop (bad) (bad) inc ja or add dec push push in mov mov mov jmp insb sbb jae mov iret enter orb mov mov les jmp cwtl ds push dec sub (bad) scas negl bound in mov mov push adc fistp or arpl inc sbb shrl jge (bad) jae das add cld xchg push cmp lret aaa mov xor pop lock adc je add dec testb xor call fbld mov call lcall jo push sbb mov mov dec cmp stos orb pop cli pushf sarl mov push mov sbb mov push aas pop cmp les rcll movsb push push into sti dec cmp enter enter ss xchg out call sahf jbe (bad) notb hlt clc cld add lock insl clc leave or push and adc or mov push les aad lock and movsl or (bad) movsl pushl cmp mov mov ret das lea adc ret in add cld in dec mov (bad) jle rorl clc jecxz add movsl xchg xor dec cmp add lret pop lret ret push pop lret (bad) pop pusha lcall (bad) (bad) xor mov fistp (bad) pop adc pop outsl mov push ds cmp (bad) pmaxsw (bad) aas xor xor pusha jbe cld repz mov mov les pop cmp insb lahf inc pop cli ljmp lcall or pusha mov xchg mov or add inc push (bad) jne scas cld pusha sbb inc inc pop jb in outsl jo inc dec je mov mov pop sub jbe (bad) aas lods fcomps mov mov push add push dec sbb mov cmpsl mov jmp jb pop jne jo sub mov movsl sbb pushf inc dec cmp pop mov cmp xorb prefetcht2 cwtl cwtl xchg fmuls mov mov (bad) fcmovu pop jge cmp jne les movb les and and and ret je pusha and lcall mov add sbb (bad) mov ljmp xchg or sub push push call into (bad) out add das push adc mov (bad) or and insl pusha (bad) jne insb sub js sub mov lret test mov mov cmp (bad) fidivrl sub fsubrl jne cs and lods jmp iret mov test mov inc mov sub mov fnstenv pop scas call jae fildl pop outsl xchg or lret ror movsb xchg pop push lock mov rep sbb cmpl lcall je pop pop mov sub jb push decb cmp ja imul mov add and (bad) aad in dec cli cmp fwait or bnd pusha std add je xchg ret and mov jg imul pop jne lea mov cmp push add and adc pop fucomip jge (bad) pop xchg ja out idivb mov jo jge cmp xchg mov test inc dec fsubrs rcrl (bad) cmpsb mov fsubrl je inc sbb test push mov lahf shr mov push pop outsb adc mov hlt out push mov repnz jne xor cmpl jbe mov mov nop or jmp xor inc inc add and jmp mov out dec sahf add jne aas and mov js mov fst bnd push push in cmp ja or jmp jecxz mov mov cwtl pop ds leave push push mov jmp (bad) mov pushf mov outsb mov or je mov or mov adc cmpsl mov je dec jl mov mov lock ret mov mov adc fdivrl pop (bad) clc adc jp pop loopne mov inc iret dec jns mov xchg ret xor and pop cwtl int3 lahf ds or sbb pop daa and ret mov push push push jl mov jbe je lock mov lea push test dec call ror mov jg fistp mov ss data16 add fsubs loopne insl cmp push testb clc dec cld lea or ss jmp dec fisttp cmp jl jmp add sahf jge rol negl adc lea add dec mov lea loope xchg pop aas push xor sbb or jp pop cmc mov mov neg jmp or enter xchg push inc push lods rorb fs decl mov dec mov jmp cmp jne pop pop xor les pop aam mov mov mov mov cs mov repnz cmc rcll push aam adc sbb inc add (bad) jae sbb add pop mov adc jb (bad) mov inc (bad) movsb mov movzwl sub fidivl mov jp push cmp iret lea mov dec out sub adc mov outsl add ja movswl mov add lea jl fstpl sbb call dec imul jmp cmp (bad) cmp dec dec inc dec inc dec lods or dec fstpt (bad) in sub dec aam cld stos or adc jg cmp jl pop sbb stos cmpsb je mov stos neg sbb (bad) std jp stos jmp inc inc mov loop movlps sti inc stos pop pop inc clc dec test jne ss mov (bad) mov sbb adc dec sbb sub (bad) hlt (bad) aas inc add leave mov mov mov fwait sub mov insl cmp cli adc mov mov sub push fcomip pop scas je mov dec mov repz inc test dec je dec jne sbb test stos xor ficompl shr repnz sti add fidivr dec je inc jne pop mov ret xchg je lock repnz or repnz sub mov adc or lea mov (bad) push or inc je push push cmp (bad) fmuls sbb daa inc mov sub or jno pop inc loop inc roll push mov test (bad) lret sub sub and adc in outsb iret sub sub sub xor jnp mov sbb and sub scas sub or pop out repz sub xor fldenv loopne pop dec adc add aam repz (bad) adc mov ret movsb cmp testl ficoml add cmpl add movb jge fldt add ficom aas imul dec and dec push out incl ja fabs push adc pop frndint rcr cmc outsl call scas push fnstsw fwait mov testb je fidivl xor pop fbstp lea mov inc sub nop jnp jecxz shr and add push cmp xor stos mov sbb jle add jns lcall imul pushl jae cmpb jb movb js decb jo lock cmp jmp data16 pusha xor jmp mov cmp inc xor push or mov push shr mov add xchg out cli sbb or fs adc and mov cs or rorl test neg adcl test sub or (bad) fisttp das js adc jl mov cmpsl subl mov or sbb inc loopne push in mov fcmovu insl or jne or loopne cmp mov jecxz setnp jne mov scas das (bad) jne pushf and jne dec sub cmp and inc or ljmp dec adc sub movb cmpb (bad) or or jbe pop jmp mov js push sbb iret inc pop and push pop das sbb sbb jbe jns fwait mov pop add js fldz cmpsb dec mov mov cmp lods or testb jg hlt cmp or out (bad) in or dec and fistpll sub add jp cwtl jne mov sahf mov les add pop jmp mov xor add aas jmp fstpt dec test add dec mov add sbb test insl and push int and mov cmp jae fimull inc jmp mov mov negb add clc dec es push inc imul push cmp (bad) out jb aaa add stos rcrb inc rorb xchg push push cmp fmull push push adc sbb push cwtl fistp mov sub fwait hlt fwait inc addr16 mov shrb sbb aam int3 lods lcall fldt fstpl fwait push push cmp leave (bad) cmp fiaddl popa mov fcmovnb fldl inc jl test sbb mov sahf insl (bad) leave adc mov xor push adc add pop (bad) rcrb cmp out movsb xor fistpl or cmp inc stc inc es sahf jae das fisub add shlb data16 adc sarl adc (bad) or xchg sub pop jg or sbb mov lret movsb dec fistp ret mov xor sbbl cmc mov sub cmp ja hlt push jmp ljmp (bad) jg iret lcall inc jnp adc jge mov pusha push cmp daa xor out adc (bad) and jbe jp out mov roll test adc and mov mov add lods dec rcl mov add (bad) sti pop loop ffreep add std add movsb jg add in aas push lock incb jb jnp adc (bad) ja and jb or jp (bad) mov push sti insb cli (bad) cmp ja adc pop mov add inc dec jne ljmp mov aas cltd idiv imul pop sbb test repnz mov fildl add pusha ret or js jne inc std std xor sbb fnop mov adc (bad) pusha (bad) aaa add rolb lods pop sbb test dec xchg and daa jmp test jg mov insb push insl cmp clc hlt or movsl xor add test inc pusha xor cmp jl jbe or addl add push cmp repnz in (bad) cmpxchg add decw cmpl fisubl cmp fcoms ljmp add add int int3 adc inc inc xchg adc push test fidivrl adc pop enter insb pusha loop adc imul sub stos test fistpll sbb dec xor into hlt and hlt mov outsl addl add decb sbbl scas data16 mov clc (bad) mov enter rorl xchg lods dec sub push or fldt ficomp pop and sbb stos dec movsl sbb adc mov adc push add xlat fstpl lret (bad) mov push xchg and idivl je add push xchg sub rcrl fcmove jge sub sbb cmp cmc (bad) xchg adc in out cwtl xor pop ss pop (bad) xchg ret push or (bad) adc add push jb pusha in int test xor add test nop fldl adc sbb mov pop enter add js mov push cmp test in dec sti je rolb pop imulb hlt out push cmpb jne mov mov push lea or div cltd jp pop test jb inc lcall push in mov ljmp jecxz outsl call mov test cld notb sub inc xor int3 xchg call aas add (bad) repnz push push or inc or stos mov fs dec aas pop and mov lea dec sti lods jmp inc scas je or jne cmpsb add enter imul cmpl sub mov stos call add adc fdivp xor sbb adc fwait xor sbb ja movsl (bad) cs sbb imul in pcmpeqd push iret or xchg in ret out cwtl fldenv adc pop and cmp or clc or jne inc cmpb jne push and ret popa or adc add (bad) add add add sbb pusha fadds jp cltd mov test in loopne incb fsubrl pop incl mov adc jecxz movsb nop sbb push bt or jae pop mov jnp jmp mov mov jnp pause jns mov lahf popf or and mov or cmp jne mov xor data16 ja xchg fisub push mov psubd xchg xor stos cmp push or or pop mov sahf add or cmp iret or je ret push fnstcw lock sub pop mov icebp fs add dec ret jbe mov sti jb add sub jo mov or mov loop mov cltd test les das popf dec sahf into add push lea and pop xchg fmuls enter fcomps loopne mov lock fcoml in inc sub inc jnp xor leave (bad) mov mov add jmp shlb push lahf sbb js (bad) les mov shll dec and mov mov pop mov lds fs lods loope (bad) push cmp cmpsl or push pop jbe push jbe jl push add pop jl jg je mov add push jmp in outsl mov or je or je jmp cmpb dec mov aam and pop call add inc sub adc mov cmp xor mov xor gs pop push call ret jl or dec push data16 or inc adc movsb je call or dec out xor dec fcomip fcoms lea call mov xchg mov sahf and add add in adc xlat adc mov pushf mov jae push and inc xlat push jns add push xchg add jns stc push roll jmp and add outsl cmc xchg jb push cltd (bad) les add inc lret add dec or out ret push (bad) adc jmp adc sahf out call jge mov js enter jbe fidivr push pop mov ja xchg push stos pop daa jmp sbb push test fucomi add mov pop push subb mov loop jb (bad) mov push mov adc dec inc aad cli aam mov dec mov push xor (bad) cmc ja cmovno push dec adc in in popf or adc and adc cs xchg pushf cmp (bad) iret rolb add ret jne or mov and call (bad) mov andb mov ljmp jo aaa adc pop inc out and jg push jmp je push jp in mov or aad push (bad) dec movb push call cmp sub cmp xor jmp mov add das push jbe jo pop inc ljmp mov sarb add sub jae clc ret sti jb outsb sbb cmpxchg ret add vmwrite lcall and mov shlb mov orl pop xor into push sub lret movsb jle popf enter push mov and iret and adc and (bad) jge popa out (bad) stos ret jo fwait pop jl pop in lea add jne incl in mov mov sub jmp sub je dec je sub dec fs jg or push jmp mov jmp push push push es xchg les push inc mov jle fadd scas pop xchg add push std mov scas and divb or pop mov pop call ficomp bound outsl jl loope dec sub aam jb or or jl mov or jne xchg jno movsb inc dec test mov jne cmp jg mov pop or ret sahf incl push (bad) imul add cmpl jle cmp adc pop and out cld gs mov mov fmuls fadds pop lea loopne push jmp cmpsl or sarl and inc out and and push test adc pusha xchg popf xchg mov inc idivb push mov ds and xor xchg fcmovb push fsubl mov dec sub mov adc push mov xlat xchg dec fistp adc sti mov pop test xchg cmp es lods xchg pop stos test jo lahf add sub and pop ljmp in pop jmp adc add (bad) (bad) mov ret push mov and in call mov mov fcmovnu jmp aaa repnz sbb movsb jns jmp pop mov fisub or mov jmp cmpb ja fbstp je stos fsubrs (bad) push test mov pop data16 jnp mov lock add (bad) cmp jle and fs jne cmp add or adc ret ja aas or daa or cmpb rol mov cmp adc fwait pop mov and mov out loop insl in xor cmpb sarl stos push xor (bad) fistpl scas stos add fsubrl fiadd (bad) mov sub fcomps das xor loopne push out dec ret orl and enter aaa gs push push notb add push push cli ljmp iret mov sub lock (bad) mov inc and (bad) jmp js inc rclb xor enter push xchg jle push (bad) and imul inc add xor or and dec cmpsb xchg lret add not iret je orl inc push fadds add or orl push test inc push dec adc aad ret xchg mov jne,pt add add xchg or cmp push add push or pop adcb sahf mov mov div ret fcomip add xor xor xchg cmp sub jl xchg test inc pop out call int3 mov jno data16 lret cltd aam clc aaa jns (bad) mov adc xchg test popa jne dec cltd xor in dec cld bound fst fcomps or sbb fwait jmp sbb pop xchg jle les mov fstp push repz dec push push adc movsl xchg add in add mov sub jb or xchg cmp pop inc xorl cltd pop and mov lea xor orl or xor jg (bad) das fwait push or jns push addl or adc pusha loopne lods xor movsl lcall jle add cmp or leave pop dec push add lods xlat dec pop sbb shr test inc clc cmp push sub ss dec lea dec lret mov xor dec (bad) mov pusha inc lock cmp movl jb sti or shr cmp inc and pop add pusha dec xchg push in or add xor in ss out dec call (bad) jmp sbb or cmc add outsb xor je mov add lock mov inc idiv push jl je xchg cmp pop daa add add or mov fwait js pop jb and bound cmpsl push mov insl orb in lea (bad) imul in pop lods add (bad) rolb es xor cmp ss xorl xchg cmp add fildll (bad) pop pop in paddq pop sbb adc hlt push push push xchg sbb add push inc mov mov xchg jnp fs scas pop jns adc sub or add es test (bad) inc add sub cmpsb sar add mov jmp mov sarl sbb je scas ret add (bad) shrl hlt lcall jo negb rorl rcll cmpsl lea fnsave lods add jg test mov mov fildl mov mov xchg or jmp mov jl mov addl test cwtl xor pop je jne xor and cmp jmp in in pop cmp js mov dec scas in dec cs xor out sbb (bad) xlat add sub and pusha lea icebp xchg jns out sti xor outsb test cld and fcomp aas mov cmpl xor dec lods rcrb aaa ret mov pushf cltd inc out inc pop jmp sub push pop test rolb repz inc (bad) adc in mov jo and or adc clc push push sub pusha fsubs aaa icebp dec adc (bad) lcall subl sarb adc mov and sbbl mov out lods mov xchg and sbb lods jp out loopne add and mov mov push mov sarb jne jl mov stc push imul mov es data16 psubsb push or cmp test or push add enter lock jl and daa call mov dec mov cmp sarb clc inc clc rorl xor test or jge xor push jo adc movsb sub pop mov pop outsl lea adc lods mov xor lods fsts fcmovnbe dec mov or jno push xchg mov dec pop add dec or add dec les test pop adc pop loope fidiv add jnp mov shll test cmc mov jle adc js jmp and or add and dec inc mov push scas push mov sti push jg cmp frstor sbb sbb push push pop or cmpsb sbb ss and mov ja or lock pop pop mov movsb out sbb ljmp sar lret adc ljmp adc sub ljmp xchg cwtl and add inc or shrl jmp mov mov jnp aam mov add sbb subb scas pop or add aam push pop add cmp in int mov in or jge clc push in inc fimul push loopne push cmp repnz xor subl inc dec pop adcl int3 xchg loopne xchg stos insl add push les movsb test movsl xor into xor and das xchg xchg mov cmp lret leave pslld push xor inc xor sub jmp and add mov cmpsb imul cmpsb imul inc push daa movsl je mov or rcrb lods xor pop lret mov mov cld cmpl movaps test jae jecxz jg bound or arpl mov inc js dec sub sub dec mov scas sti loopne or pop mov add fild jnp jae xchg dec jnp or enter loopne fbstp cmp loope sub pop push cmp xchg jb pop sub cwtl mov mov cs add movsb aaa nop daa and jbe ror jb sub adc dec xor cmp pop aad xchg mov xchg mov adc std sub mov stos mov jae cmp cmpsb dec adc mov sbb hlt add mov nop xor sahf dec outsb xchg ret adc push sbb add jp sahf mov lea mov scas adc scas xchg and aaa xchg add les add pop or adc xor test sub gs sahf lahf ret das clc mov adc jge mov mov mov or gs aas in fidivr movb adc push add cmp cmpsb sbb cwtl adc pop inc sub ja jge hlt and adc stos sbb and adc push insb and and ret adcb addr16 lods rorb les adc enter adc andl das add push mov mov cs push adc adc sbbb (bad) cmp cltd jl pcmpeqw cmp loope mov ret or and lock cmp adc and sbb push dec movsb sbb (bad) and add mov or pushf mov and pop dec xor sub sub add xlat add or xchg fdivs fldt mov js pop loop pop call data16 and nop adc add dec or mov and dec jmp dec sbb mov and imulb jb mov sub and ret (bad) jns dec or inc cs add mov jle cmp push lock out and dec add je std in cmpsl jle shrb fstps xorb daa xor ja mov (bad) inc lock adc or or jl pushl jbe in cmp inc sub push inc in lock and roll and inc inc inc jge or lods hlt lret (bad) pusha or (bad) (bad) or sub add xchg sbb hlt jge jl mov and test in dec push lcall adc mov dec mov pop xchg sarb fildll push dec cli test inc mov push test lods jg dec jg xchg or or or and fwait (bad) nop push inc mov mov xchg mov jge pop mov std inc push push les ret sub daa push daa pop das sub (bad) fcomps jb popf add jo add dec sbb or cs push xor ret push ja push loope out pop inc adc inc push jmp inc mov rorl sbb addr16 adc outsb inc inc scas fldl je mov mov xchg dec mov sub call mov mov sub inc mov call ljmp je inc rol (bad) (bad) js jge jb test adc mov add cmp and rolb add adc clc mov daa aaa inc inc inc add cmp dec ret sub cld dec or sarb cli jbe dec sbb das das sarl movsb outsb xor lock adc mov daa mov xchg js bound jg jae adc test inc cwtl jbe xor add nop adc mov inc (bad) jne xchg iret adc jo cmp stc dec push jp sub xor pop out loope mov and mov hlt pop dec js test in push mov ret adc aaa push mov sub jb xchg stos (bad) sbb inc decl sbb lret jne sbb dec or push pop jne ret or pop ja inc or setb or pop fildll movl inc add add sbb dec data16 enter mov push sbb mov mov mov sub mov or cmc add test hlt mov in adc add fisttpll dec mov mov push cmp js je mov sbb fbstp push mov popa mov push lea inc cmp pop jne lea pop daa pushf bound scas movsl out add cmp xchg rorl dec sub dec jne fwait aad jmp add xchg shlb add arpl mov or add out cld sarl mov jne push rcl mov xor in fstpl cmp pushf (bad) lcall xor mov and lods cmp mov popf xorb mov sbb sub jb inc call pop mov (bad) mov cs xchg in in nop add mov mov mov aaa cmove fmull popf je mov and pop jo ds fcomp mov push mov xchg sarb sub in sarb inc xchg adc nop sub mov ljmp or enter fs lds jl and enter aas ret adc (bad) cmp pop hlt mov mov push cld push add popa hlt mov and mov cmp movsb sub dec add inc (bad) adc iret inc call jg or das fs mov fs sti test popa insl pop jp fwait dec jo push and pop fwait and cmp (bad) mov ds push cmp push and add pusha jne adc add push out subl xorl xlat adc daa sub js pop sub shrb push test pushl push mov test pusha cmp adcb push leave dec in dec mov ret cs cs pop dec add daa push out fcom (bad) xor sti test and or add cs push inc inc popa cmpb in push dec lods ret pop mov xor scas aaa mov (bad) cld add cltd lcall cld jp testl or and cmpsb sub cmp pusha jae mov ret test adc jg xlat rorb mov and out mov sbb fcmovnb jmp orb mov xor mov pop jns dec into adc pop jmp push add jmp push inc or aaa not mov xor test pop or push dec and (bad) divl mov gs jo inc js jp call jecxz lock inc sub call dec ret xchg xlat sbb mov xchg lock insb mov push int3 and mov mov sbb inc cmp jne (bad) inc in cli and and test jle adc mov scas mov sbb mov add inc jmp mov xchg mov mov mov scas outsb fdivrl add ljmp jnp cmp orb mov mov xor mov inc or mov mov mov inc mov scas sub cmp (bad) mov add mov rolb xor pop add sub lret cmpl sbbl test sub xor sbb outsb das popl (bad) stos aaa (bad) adc movsb movl sar add lods inc mov adc pop adc sbb fnstenv jne outsb add sub lods sub xchg push push sub inc gs rorb les in test aam std jle (bad) (bad) mov dec xor dec insb fcoms push aaa test cld mov jb out clc mov popa jnp push jnp ja je push mov inc mov mov mov ret mov lea sub sbb mov dec sbb call data16 cmp in aam orb mov clc pop lcall sete incl ret jb popa movsl fnstenv (bad) mov decl cmpl mov (bad) pop pop shr mov xchg mov inc dec inc mov inc or jle adc (bad) cmp or xor inc (bad) add xchg (bad) xor sbb inc dec mov das pusha jle emms aad and lock or dec out lock sbb mov stc rorl nop sub adc inc sub bound mov pop xor in nop jmp lcall add xor addl dec das int and add enter aas dec call cmp push jne cmp out and or sub lret mov dec inc je rol aaa ret (bad) and pop or movsb jae pop out stos xor push je fucomp repz roll and in ret int3 push orl lret pushf data16 cld and push ss repz push fs adc jae mov es xor das dec sub jnp les xchg mov iret cmp add out jns out xchg mov test and mov inc je loopne mov jle push pushf pop mov and inc jle cmp out jns pop push xor sbb mov repz sbb js fnop xlat add push insb xor cs popf cmp or lock mov mov add dec jae and rcrb cs or pop dec fmulp mov call repnz loopne fdiv mov fadds aam ss fmulp xor insb int3 cs enter repnz sub cs mov pushf mov cmp mov mov lods cmpsb jns fmulp or and leave cmp insb cmp cwtl xchg push or mov daa mov jbe cwtl cmp out xlat ss pusha sub nop jae (bad) sbb nop clc dec pop aas fiaddl push mov push cltd cmp mov es adc sub cmp dec in mov cmp les fs adc xor negb repnz jo inc cmpsl jge xor es or mov or cmp inc dec and nop inc push cwtl nop mov and cmp adc sti xor mov aaa or and decl sub adc sub into adc cmpb mov push cmp nop out add in jo add js imul push mov cmp mov rcr add in adc jg movsb xchg faddp mov dec cmpsb lods icebp dec rclb nop or in jb inc pop inc pop enter les mov or cltd jb test (bad) repz sar pop roll and sbbb xchg mov dec aam dec push test adc mov shll sub push jb mov insb test clc and adc jecxz sub stc clc lea outsb test sbb xchg pop mov je mov std test mov and xchg insb lock sbb adc adc xor sbb fcomp call jb (bad) sbb jecxz (bad) pop lods sub nop pop and push inc adc (bad) popa adc pop data16 in xchg mov subl adc push adc call stos nop (bad) lods and daa daa test mov in (bad) mov cld jmp push xchg push adc shlb es mov push cmp mov and dec sub andb cltd fs movsb js add dec es in lods mov cltd fs mov mov cltd fs dec mov dec es mov dec es les fs enter cltd rcrb rcl jb movsb jb loopne lock movsb lock fimull sbb enter dec repnz mov mov and inc dec push mov hlt ds jo sbb sbb cmc and jns or cld fisub dec add outsl je fs jne loopne add fisttpll sbb dec adc outsl fs cld cmp jb pop outsl jb inc insl jo jl (bad) xor jb insl push je pop push or enter rorb mov (bad) jns lcall jae pop dec add mov outsl repnz ja aas test clc inc jp inc dec mov clc mov (bad) xor sbb mov add and pop icebp aam icebp mov (bad) scas push mov pusha mov cmp or (bad) xlat sbb and js cmpsl std add out in add lock jl out sahf mov int3 js (bad) ds out bnd push sbb inc loopne les es push adc dec dec inc shrl cmp addr16 dec mov jae add movsb dec or jmp dec add fdivl inc je add mov mov insb (bad) push lock insb adc inc add es add and shlb (bad) xor pop xor inc and lret cwtl (bad) cwtl xchg out jmp inc popa fidivrl cld inc scas inc cs adc xchg fs pusha fmulp adc adc (bad) sbb adc outsl out and repnz enter ror enter adc popa add iret xor add (bad) sarb adc sbb or insl jo (bad) xchg sbb or xchg addr16 mov sbb and cld (bad) jae push icebp push outsb divb int jno icebp pusha loopne loopne roll movsl (bad) pop arpl jg dec cmp aam sbb jge jbe fsub rorl adc loopne mov (bad) in xor add in repnz lret cmp mov pusha or call inc mov mov dec push in xor loope inc ds (bad) in add sbb xchg mov fstpt leave dec loop aaa test pushf inc push loop loop daa fs xor ficom loop or sub mov in xor js or jg dec adc inc xor jle sbb clc sub pop cmp sub dec je mov or push lcall es dec mov loopne jbe add je inc ss cmp leave testl clc xor fidivl lret clc pop stos scas in in mov fnop mov inc cmp adc in mov sub in in sub sbb js dec call imul call jmp fisubrl pop repnz push mov dec fild mov or lcall adc fcompl jg call xor lods xor in shrb add in mov mov mov repnz aam jmp adc or (bad) ret enter sarl lret iret mov and in adc loopne xor xchg in mov inc jl sub pop decb call add mov add icebp mov xchg cmp je and jecxz jle mov push push repnz mov mov loop sub ja pushf (bad) xchg jne pushf xchg sbb xor test (bad) insl push dec imul imul cld loope add jne inc add (bad) loopne cs add push aam sub adc mov or test int3 xchg pop les push adc je dec cmp out aaa sbb jmp and mov lock jne popf or shrl (bad) push call imul inc (bad) xor test aaa adc imul pop pop adcl (bad) lret inc inc pop sahf jmp inc sbb xchg orl mov dec dec loopne fcomi push dec jnp movsb pop fcompl cwtl mov test sbb (bad) aaa cmp jne add ret push add (bad) xor dec sti xchg xchg (bad) adc or or (bad) pop dec add imul inc inc sub xchg lock inc or adc (bad) sbb xor div and xor and mov xchg jp repnz in arpl push mov or pop jb mov jbe sbb add lods je ret aas leave test fdivs dec hlt (bad) lea sarl nop mov out mov mov aaa jmp sbb adc loopne xchg sub inc in in adc xchg dec call add and movl sub adc pop or adc cmp xchg mov sbb cmp push cld push outsl inc ret outsl cmp xchg pop sub data16 jmp js mov out dec push adc push cwtl xchg inc push add dec fwait cmpsb sub decl push adc lcall hlt jmp sbb push and add dec jmp adc cmp bnd xor inc (bad) adc mov fcom jmp inc add enter sbb inc sub sbb sub pop xor pop dec lock in lock je pop jne push xchg mov mov add or or lahf (bad) (bad) int3 pop fisubl inc add xor enter xchg mov pop outsl test mov imul fisubl fildll cmp insb enter mov in popf cmp mov push mov mov or and add jmp cli adc (bad) iret int3 sar imul es xor out lock push adc inc repnz in lock push imul mov jp mov (bad) xchg mov inc mov and cmp (bad) mov pop (bad) (bad) hlt jae push test jg push jp add call inc xchg pop jo mov xor xchg cmp loopne add and cltd xor fdivrs dec iret xor ds repnz or jl xchg pusha imul es fistl pop add enter cmpb adc jbe add jno push push nop out jg lret pop daa mov sbb mov sub and push (bad) add cmp mov xchg clc aas or movzwl cmp ja test mov sbb pop jbe mov jns fcomi hlt and lock jae pop pop cmp or and es sbb or enter je and sbb dec pusha lods rorl scas movswl insb or es xor and push mov sub fistl mov leave rolb lock flds pushl add clc fistl call and xchg je cs jo or fadds in push fsubl and fcmovu add fnop movsbl pop adc mov es shlb pop inc sarb dec pusha and hlt call push enter sti lea cltd fmull pop cmp push in test sub incl dec je jmp sbb shrb sarb test add and inc push mov test sub iret jnp repz mov std and lret fwait imulb pop repnz outsl push sbb repz imul jecxz mov sbb or aaa cmp flds mov inc fnsave mov xlat xchg pushf je lods lods cmp sbb mov jo pop shlb xor movsb and pusha inc out popf movsb mov test pushf cmp pushf cwtl mov cmp sbb xor stos xchg jno dec rcll aaa nop je cmp dec mov fsubrl sub rcrb insb jl jl push mov mov mov mov cmpsl inc mov cmp dec imul pushfw xor mov mov add mov push jmp scas xchg hlt or ret in dec aaa test iret pop hlt jne test xor enter (bad) (bad) hlt in call hlt loopne xor inc rcl cwtl cmc sbb dec inc in push jne inc dec jb cmc out rclb mov popa ret cmc cmp sbb loopne dec loope daa pop nop dec push push pop cmpsb in push cli cli xor mulb test shl sbb notl pop mov mov push ds pop pop push je cmp repz nop stos leave xchg adc push ljmp push cmp or push xor insb xor es and push inc push stos or add es cmp in in ret jno aaa dec xor mov jnp aaa imul xor fstp aaa insb lcall aam xor dec or rcl mov test jno loopne pop adcb add insb enter xor cmp rolb aaa sti xor inc cli pop mov imul inc out cltd mov mov cmp test push loop dec clc cmp sbb shrb xor xchg mov mov aaa aaa mov mov int3 xorl xchg jne (bad) es cmp aaa mov popa test test pusha ret movsb aaa movsb pop rorb mov jno cmp nop dec pop jno cmp mov aaa cwtl jno lods or aaa outsl movsb jecxz icebp aaa dec mov lock cmp lret cltd aaa in mov test sti mov inc jmp rol test sbb and int3 loopne xchg jb mov sarb pop push (bad) xor or ret lock or inc xor mov jmp movw or push mov pop push xor jne xchg add inc mov and pop outsl and or adcl outsb adc pop into jb xlat scas sub pop or data16 pop push add js in shrb mov cmp mov push outsl dec xchg add stc call cld cmpl jb lods dec add mov sub mov insl jo jns or aas dec rcr pop (bad) and popa adc and fisubl xor dec stc jb inc push ds add (bad) decl inc outsl jne xchg jb outsb arpl pop or and dec pusha xchg and adc xchg rcl pop xchg jg sbbl or jl arpl (bad) xor iret push sbbl inc aaa or cmp xchg daa adc ss push clc sub dec add adc (bad) sti and dec xchg test lds test xlat es sub xchg lahf inc sti pop push jbe and mov aam lds (bad) das jmp lea iret mov cmp jl cld stc and xchg dec pop jne jg mov cmp or sbb pop sub or sbb xchg mov test in or nop xchg outsl and cmp sbb test pop xchg pop xlat scas in mov xchg repnz outsb jns and jmp push gs push ljmp hlt add mov jle sahf out sub sbb sahf push pushl xor push mov jne push addr16 outsl mov or int3 dec aad int ret aas fmuls ja mov hlt cwtl cmp jle inc aam pushl fsubrl xchg dec xchg out loopne ljmp and push fisttpl aam lds or jmp jecxz adc icebp xchg pop ja push loop test cmp je outsb (bad) mov loop adc repnz xchg ret jg sbb mov pop repz adc div (bad) imul inc hlt out pop (bad) call ret mov (bad) addl mov and sub push or adc ret movsb or xchg dec fmull sbb pusha loop inc cs dec add xchg and inc decl adc popa mov sbb test repz mov scas das jmp xchg jle push (bad) les push push xchg jo fist xlat rorl inc jg add jo (bad) mov cltd add pmullw push mov adc test incl pop sbb (bad) out push test aas xchg dec or cmp or jbe sub push adc push xchg cld rcrb fmul add jns xchg sti outsb outsl dec sub mov lahf jno add mov mov fnstenv sbb (bad) and movl xchg daa lock sbb js lock cmpsb add pop and daa mov fsubl jl inc xor inc sbb push enter cmp push jp js ficompl add jo cmpl subl loop loopne push faddl jne xchg nop add sbb and sbb and mov das add sbb jne pop jo arpl or les jecxz push incl lret xor xchg arpl cld lea cli fldcw insl xchg (bad) les fldenv pop jns sub out inc (bad) or mov loope and js mov cltd pop imul hlt ss out gs cld sbb push jmp mov xchg lret sub cmp jo lds push loopne and cmpsl xlat lods xchg xchg xchg fldt xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg cwtl cltd xchg xchg xchg xchg lcall xchg sahf lahf addb addl xchg ja icebp add xor xor mov (bad) popl add add add notb lea push push dec dec (bad) push hlt xlat xor dec add adc xchg mov mov push (bad) adc sbb test pop insb jecxz jne sub push cs dec xor push or cmp jle sub ret dec ja push (bad) mov pop imulb js cmp xor test cmp aaa sub lods add dec dec mov idivb fmuls or or mov and cmpsb fisttpl pop outsb sbb mov dec jl or cmpb mov mov cmp je mov and sbb inc add and jmp jle in rcll outsb je jmp cmp sbb test (bad) fistp jp dec jne notl cmp aas pop je in or lar pop mov push adc ja and jmp call jmp jle mov cmp (bad) fcoml cld push add add adc and or movsbl push pop push jle xchg pop mov push aaa mov in ds pop in push push adc setle mov mov cmpb ja jb add add decl (bad) out mov mov loope add or mov rorl sahf push lea adc ret mov call dec lcall cmp inc pop mov or lods cmp lcall and add les pop loope test loopne sub or push sub aaa mov jle mov xor test mov xlat lcall mov pop pop cltd sbb push jle dec sbb xchg or adc or repz or (bad) stc add sbb js push hlt dec xchg mov sbb push or movl mov push lret test push jp mov jge or stc pop jmp inc clc lds jne pusha enter jecxz lea dec cmp (bad) xchg add push lret add mov cld add mov adc or adc lods test add daa mov movb adc test faddl jnp cmp push aaa sbb inc or xchg jge mov ljmp insl or sbb fstl hlt dec dec call add fsubs adc or cmp or inc cwtl (bad) and pop lret add ss pop pop jge cmpsb fildl mov scas cmp add or insl jecxz repz cwtl lods (bad) loopne push inc (bad) fsts nop outsl lret push out sub fstpl in dec push fistpll pop (bad) sarb xor sub jmp std xadd push xor and popl jmp adc or jmp or inc loopne sbb inc fstpt adcl pop (bad) aaa loopne fidivr js jno pushl pop add add call js dec sbb mov pop or insl add sbb and pop mov enter adc dec or dec add fildll lret (bad) jg jbe fnstcw sti fxch inc cmpl mov fs xor mov inc fwait or sub sbb xchg pop popa xchg cmpsl fimull inc pop mov inc cmp outsl pop push push ja jb inc and (bad) adc xchg or inc sbb inc sub sbb jg add push inc insb imul lret clc sbb mull into dec gs popa lods mov jns sbb push lcall inc insb popa (bad) leave negl nop je gs xchg add mov pushf dec or inc imul fs out lods push outsl sbbl sbb adc in roll sub push sbb insb jns jns mov inc xchg (bad) pop jmp pop ss push mov je or jb or ss std mulb fs adc dec sub and pusha test or jae xlat add push dec decl and gs add imul jns xchg wbinvd aaa out sbb or dec gs sbb jae je cltd sbb cmpsl outsb lds je mov (bad) or insl mov adc or push fsubs and xor rcr out adc add xlat shrb sub shrb leave inc mov or mov inc inc and xor int3 push repnz ds jmp mov mov dec push pop mov lods outsb mov scas ds xchg fbld or and push bnd and fimull enter pop pop js adc idivb repz scas rcl sub ficom in and inc sbb nop sub mov adc mov pop in arpl mov push into dec imul dec and or adc add push pop push mov or subl mov cwtl rdpmc xchg add push mov push mov mov fisttpl arpl push adc xchg ds adc inc adc es pop inc mov rclb cld dec mov mov dec mov push cmp add push add adc aas adc scas pop and loopne or push in insl pop mov scas ds inc dec dec push cmp mov push shr scas xchg xorl ficoml lock push or add mov (bad) mov push add lods mov test ret or or fbld fidivrl xor sub int3 adc aad popf xlat jbe push sub outsl sub fnsave inc adc inc push in pop (bad) shl rclb je sarb arpl add inc mov adc adc jecxz out sbb pop xor lock dec push adc dec pushl push leave jae fs jo lds xor pushf jae push rclb sahf cmpsb xor and sti into pushf mov push subl add addl daa js inc xlat cmp stos int3 jle mov push inc dec mov add dec pop sub iret jno pop push jbe ss out in xor aam push enter inc dec imul fs xchg push call adc xchg test sbb sbb inc mov and dec ds test inc jmp push or (bad) inc rcrb bound xchg aas je pop fs adc xchg pop push sbb inc push push js adcb xchg int hlt push push push and pusha push aam outsl xchg push clc jbe push pop mov push xchg xor push sbb push pop jnp mov push jl int3 jle mov scas xor pushf push add adc and cmp por add xlat jl addb and jo loop dec (bad) mov sub push pop push cs idivb or pop sbb aaa cmp add xchg or cwtl sbb push pop push jl sub cmp test push or xchg pop lods arpl xor push leave sub mov out negb fs sub sahf mov xor js pushl sbb (bad) add loopne sbb dec sbb js out nop cmpsl divl pop inc movsb pop xlat repz divl and lods pop daa mov in jnp scas xchg pusha (bad) out add cmp (bad) dec inc mov int jb pop in push sbb maxps fisttpl andps and in or enter or adc enter sbb sbbb and rcl mov add xchg inc xchg in in stos and repz pushf adc repz repz or iret jae push orl cs (bad) pop mov ficom cmp add push pop shlb jl mov movsb (bad) out sahf mov movsl inc icebp dec pop sbbb mov shll aas or pop cmp push das xchg and xchg adc push fs bound push scas jle repz scas (bad) loopne bnd or inc push mov cmp pushf push rolb lahf (bad) mov in shrb push loopne mov inc (bad) ja push and jo sub gs dec and ret push ds pop and sti mov push data16 xchg inc jns push ljmp decl call rcll stos mov xchg sbb xchg movsb rorl out fsub lea or inc aam mov insb int3 movsl or push mov in inc add pop sbb inc (bad) int dec (bad) inc push in ljmp sar sub mov and push inc push inc and outsl sbb out bound pushf inc inc xchg inc mov das das clc cwtl rcrb fdivr fidivr jle call xchg or mov adc jmp cmp (bad) sti lcall idiv idiv cmc push push dec jnp (bad) repnz push incl cmp lods mov (bad) (bad) mov push mov push sbbb lds push or gs shlb mov jl nop xor inc (bad) jge push (bad) flds add cmp or scas jle (bad) pop add lock imul lcall adc mov sub inc pop xlat xchg pop push arpl je cmp jo fidivr mov xchg pop and mov mov mov ds push and into repz sub inc and mov push aaa sub sbb and imul sub dec dec orl or in push inc mov mov add dec inc loopne data16 push push insl dec push push cmp push loop fldt gs xchg (bad) dec orl sub cmp jne add je test cltd mov hlt and xor negb loopne add jb jne (bad) dec es pavgb sub or or and scas jg (bad) punpcklbw xor push mov dec (bad) xor sarb xlat bound je jb push ss dec je decb inc and jmp adc lds sub rorb je add push mov add or movsb divb push sub sub fcmovnu push xchg sbb and jmp pop push popa jae outsb jmp mov pop mov pop fild mov movsl inc nop cmp popf movsb add movsl sub fs pop sbbl inc add inc mov xorl inc jmp nop sbb loope dec lcall mov dec or mov add addr16 mov jge xchg inc rorb bound call push jnp scas imul and pop sbb pop push fimul pop mov xchg les cwtl jne (bad) push inc or (bad) (bad) (bad) fsubs jne inc or push xchg jb and and sub and cmp hlt xchg add jo add in mov push sub xchg lock inc mov sbb pop cmp dec repnz inc sbb add inc pop adc ljmp add sub nop fistpll arpl inc js add fadd das or outsl inc cmp push xchg (bad) and clc jecxz adc push repnz sub mov fstp pusha add addl lds imul fsubrs dec imul inc and je (bad) fsubrp jo adc imul xchg sbb icebp cmp pop icebp sbb adc mov es add push (bad) or pop dec lcall mov das fisub pusha fcmovbe cmp sub loope adc lds push lea dec dec mov jmp or jl inc push cli cmpsl push inc dec jne (bad) mov adc xchg mov inc js repnz push (bad) mov push rolb nop or xchg jbe sahf jmp adc dec outsb imul popf inc add xchg xor mov aas sub cmpsl dec pop add pop outsl dec (bad) mov and inc insl jb sub fldl xchg fucomip adc rorb xor loopne jl xor push inc notl mov mov jns xor cmp jl outsl mov inc push call leave arpl je or cmpb mov imul icebp cmp fidivl ficoml call fistpll jecxz (bad) (bad) dec call pusha shrb pop int3 movd mul mov adc push add sbbl int sbb out test adc xor es into (bad) hlt jnp sbb in int rclb lock (bad) mov mov pop mov xor push push jp mov ja xchg push lret mov mov mov sbb xchg pushf or mov lahf cli ss pop inc add pop das inc inc popa or jae (bad) or and xor xor pop leave enter pop mov ja sbb rolb xchg push rolb jb andb jmp jno subl jae cmp mov outsb pop cwtl in test mov mov mov and push aas loope (bad) sbb imul xchg das push sub or fwait pop add das sub and cmpsl or xor mov xor addl add pop sti js movsb xlat xchg xor jp add ja roll jg dec loope sbb mov push xor jno jo test popf cld out dec sbb xchg add adcb enter dec push repnz xor sbb jmp push je mov mov xor shll xor fildll fcom cltd mov cmp idivb das ss and fisubl into mov imul enter mov cmpsb in mov adc test test cmp ds xor xchg pop cmp push jg cmp jo mov addr16 add xor inc or or or push ljmp jecxz out mov xor adc hlt pop xchg fdivl adc loopne leave (bad) xor jp inc pop popa and cmp add or cmpsb mov cmp fstpl imul js sub xlat mov test add lea aam jecxz add xchg cld mov jmp ret rolb and loope in test push sub inc xchg call add sbb sbb inc movl out add jl pop nop lcall rcr mov sub pusha mov mov ja xor sub les cmp lahf pop mov or or call fildl jecxz add cmp dec dec adc xor and cli xchg adc dec pusha jl (bad) sahf push mov mov sub das jnp pop xchg dec push xor cwtl sbb popf push je pushf xor pop sbb mov (bad) mov xchg aam sub add mov nop daa dec and test fimul add outsb rorb jl aas shlb xlat arpl hlt mov jl insb mov out roll push xor dec icebp pop loope pop and mov push movsl cs or cmpl dec outsb or mov mov ds cld add aaa xor cli (bad) cld aam xor cmp je test adc mov xchg cmp into pop sub push hlt cmc cld pop add or in lock les dec addr16 pop jns lods mov sti pop rclb and in mov adc mov (bad) xchg and nop loopne inc push std sbb adc mov push add mov ror into das xor aas add sbb push (bad) dec idivl add cs sbb mov pop (bad) cmp sub jae loop inc adc ljmp int3 or leave mov fs fldl xchg or and testb adc sub das xchg inc lods inc mov inc sub std sub decl and or push idivl shl loop adc or notl cmc mov icebp mov or push inc test out rol push mov jl adc aaa addr16 jns inc outsb xchg and repnz dec cmp mov into test enter cmp xchg aam or popa jo dec int sbb fmuls or and cmp adc push fcom test jmp lock aas add mov aad pop sub add dec or add adc jne mov jne leave rcll std or xchg pop jle add jno sbb inc or pop jg add push hlt jecxz ljmp mov cmpsl test test mov cmp divb call mov add rolb mov add rcll rcll scas pop cmpl (bad) shl das push add and push fsubs in jns ss sbb lock or pop (bad) inc dec mov add test (bad) adc sub jg dec and daa xor dec dec inc add test cmp mov popl cs inc mov shlb dec pop clc pop (bad) call roll adc inc push emms or inc pusha icebp push sub push inc (bad) jmp pop add and adc lds cmp or cli inc jne sub jne lds adc or inc fist dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds pop adc fild pop movsb add shr inc pusha or xchg mov mov rcr movsl sub outsb mov fisttp add xor mov nop ret cmp dec int3 ljmp add dec sbb call out je adc ss rcrl sbb cmp mov push nop push mov mov mov push mov cmp adc fsubs or and (bad) pop push cmp jae dec or je stos adc jp in ret btr push add mov jbe jp and push inc adc jmp lea dec jno rorb inc dec (bad) int3 pop add push fsubrp in mov xor or shrb jg pop ja and bt jb ja sbb ret pushl jmp inc cmp jne inc decl jne les and dec and pop dec push fadds jl xchg xor ret imul aaa in push aas ds add lock ds inc mov test mov add mov ljmp inc inc insl in aas add test out imul les and inc cmp sbb mov mov or xor or push (bad) adc or cmp pushl js inc xor jne inc adc xchg aaa pop loopne daa sub repnz adc push and sbb pop sbb pop (bad) jg mov jp leave add xchg xchg add inc xor or mov cmp or aam or fdivrl cmpsb fbstp jne cmp sbb mov repnz or imull pop or mov lret stc pop jns push sub and out pop shrl add in je jbe scas popa adc scas xchg sbb mov fcomps loope (bad) dec and sbb inc xchg pop enter inc add in xchg out xor sub clc icebp lock xor jb adc sub call sub sbb fiadd enter cmp in mov pushf mov xchg or and jno dec mov mov dec mov cmpb inc mov mov dec jae aaa push mov adc pop push push pop pop lcall inc and sub mov mov or inc and inc ja dec or sub ja divl daa daa (bad) dec clc rcll repz adc jecxz dec cltd push mov sub sub inc les push jecxz push aad push adc pop fidivr outsl sub mov les push mov (bad) jae push dec (bad) mov loopne cmp (bad) sub (bad) xor xor or fdivrs enter push pop in xchg ds push in sbb sbb inc rcll popa (bad) mov out xor ret xor sub mov jns out xor inc and les xor iret lds push inc lret inc cmpsl mov lock mov inc xchg xor or shlb hlt adc mov sbb fstpt (bad) sbb clc test inc and xchg inc xchg lock gs fistl xchg mov xchg mov push out test adc sub push add dec (bad) repnz mov sbb mov fstpt inc dec mov pop dec xor lea sbb xchg jp mov adc (bad) push push inc lret dec insl test push mov fucomp cmp fwait pop call mov call popf rol and cmp xchg or out cmc adc in cs loopne add or (bad) xchg inc push inc insl mov push mov mov cmp pop push cs aam ss mov push test sbb jne inc mov pop and lret hlt mov adc push cmpsb add clc lret jne inc hlt inc clc sub rolb xor or cmp fcoml sbb dec push push cld pop and ja sbb cmp and dec mov addr16 and mov inc mov insb or das call or cmp jo into and xchg fwait and sbb sete or movsb xchg es jae movsb clc les fildll lods dec in sbb dec and push pop cmp push out or pop mov mov push or shr loope pop xor push lret sbb cmpsb pop das or mov or test dec inc jb dec pop pop in pusha in clc clc sbb scas push and incl sub lea push push add loopne jg pop sub pop and dec jo cli pop enter (bad) pusha jno pop xor cmpb enter bound scas add fs movsb in repnz dec cmp push inc lret aaa popa fild jmp loope adc dec sahf sbb adc les les push push nop xlat mov movsl adc and js in and dec push inc faddp add mov scas daa dec testl xor ja js dec inc mov adc adc add mov dec test jb push fmuls pop (bad) (bad) mov outsb xchg adc xchg imul jecxz (bad) aas daa sbb pop pop dec sbb cmp bound cwtl push add (bad) std test push mov decl fs jmp push pop mov fdiv mov inc scas mov inc or je or lret xchg cmc mov sub or and movsl fldcw jne or add and push dec and mov sub daa cwtl movsb shll enter sub inc inc add and movsb adc notl (bad) hlt pushl cld loop mov lods and or lods xchg aaa iret sbb xor das dec push mov mov sbb xor push push mov in call pop push push je add pop push jl out aas testb cmp pop mov cmp jne testb orb or or pop and movaps ficoml test inc dec insb dec lahf push adc or std iret cmp xchg sub mov sub dec adc loope sahf into cs xchg mov add push dec push es push dec cmc sbb ss cmp xor mov mov ret xlat sbb fisubl data16 fcmovnu add (bad) xchg (bad) enter aaa sub sub adc int faddl xchg test and adc pusha int push add sub xchg jmp pusha mull pop lea cmp stos mov sbb adc or or mov pop pop ficoml jge dec leave iret push sub jo insb movsb mov push or dec inc dec rorb mov mov (bad) test pop pop pop pop add add inc mov mov dec jnp and adc cmp je jg mov xchg jnp (bad) jmp mov mov movl add sbb cmp xlat dec je add repz rorl or push loopne dec (bad) out push pop jp ss jmp mov xor aam add jle (bad) push sbb repnz in repnz adc add (bad) mov xor (bad) or es fidiv scas cmp mov test sbb push mov adc add gs pop and add test mov sbb sub popf iret cmpsl add ljmp xor orb nop jmp shll and (bad) xor (bad) dec push fisubr fnstcw in loope (bad) jl repz push aad adc dec nop pop xor subl andl jne add shr mov or insb inc sub lea push dec (bad) (bad) inc daa cmpl pushl cmp jne mov or or sbb dec inc jge sbb jle dec pushf pop push int pop inc mov adc jl mov add add lcall adc jbe nop add and rorl inc push pop or shll mov lret or enter js js sbb mov inc push jge or jle xor nop and dec out inc addb adc jo mov push mov inc mov pusha invd pushf jle pop (bad) xor arpl decb pop add rclb pop (bad) xlat and repz aaa insl ret jno dec sub fnsetpm(287 add mov fidivl cmpsl loope insb (bad) out push clc sub sub cmpl xorb add add jbe and pop push sahf movsl pop outsl mov mov add pop dec mov add lock arpl pop testl push mov dec jecxz xchg rcrb outsl lret cli add pusha testl cmp mov jg add pop pop mov bound xor push out enter cmpsl clc jecxz and lret lods je add inc push or sub mov adc pop leave sub rolb adc pop in imul adc xorl xchg ss jg pop pop or repz pop xor int inc or sbb ds push sbb packsswb icebp or push jl add add or out pusha mov negl add fbld mov pop cmp xchg inc popa sahf add rcrb xor add js das lds mov stc dec sbb into cld mov push dec xchg pop push mov cmp mov mov in shlb mov xchg mov add insb and push xor rorb push shrb in or test xlat pop clc adc fbld sub sti mov dec dec jno lea (bad) and clc pushl cmp jns sbb jo add and nop and xchg pop in inc in push push sub (bad) jg jl push dec test (bad) je mov xor cmp loope,pn imul or mov push faddl in and push cli cmc movsb xchg xor mov (bad) pop and test dec faddl mov jno cmp inc dec add in xor mov add addb enter nop testb insb jge enter es (bad) or xor and je adc movsb fsubrl inc jb into or add (bad) jo cmova or or aam inc sub mov push jo mov jae sub ficom cmp and test rclb inc into aas jae xchg jp jne iret data16 cld or dec or adc in out add sbb mov adc push and pop dec dec scas and dec out or lock clc xlat ss movsl inc sub cmp test out pop ljmp or (bad) pop popa adc and add sar cmp jge data16 sbb popa mov add or adc add test test inc sub xchg icebp ficom jne push fdivrs inc push adc adc lods cmp daa adc or imul add push adc rorb mov shll adc or cmp xor sbb (bad) in cmp jle or fldl sub test adc add popf xor mov and mov jnp jns add rcpps cwtl (bad) pop pop or xchg div xor (bad) jecxz and mov cmpsl cwtl pop ja or icebp inc (bad) popa mov clc fidivl jno adc cli jae inc stos add and (bad) and pop mov adc or call cmp pop (bad) jp jge dec sbb or or xor lods and adc dec xor inc gs mov negl test add int aam push orps (bad) enter popa push enter in test fdivrl or jb xchg arpl cwtl pop dec xorl push xor xchg and pop into pop add out xor adc cmp and ret pop add add mov pop adc push test pop add ss ret mov (bad) pop or stos mov movl xchg pop mov outsb sahf pushf or adc (bad) mov js ret hlt (bad) out clc pop inc xor mov and mov movsb add adc pop lahf (bad) jg or outsl jo imul mov push imul test sbb test xor mov xchg ret nop mov add adc pop mov lea test adc and daa pusha add ss ja fisubr push loopne fs sbb call sub mov mov jb push inc sbb imul insb mov push lret clc inc fiadd (bad) (bad) int3 ret cmpsb fbld dec and cs add add sub rolb mov (bad) and or add xor daa std sbb add dec leave fwait add dec pop gs sbb mov jmp mov sbb add addr16 into adc inc mov push cmp cmp dec pop movsb sbb add stc jp sub sub popa gs sbb adc les push ljmp shr push and fcmovu js jl inc sub outsw adc mov cltd mov add mov pop fwait adcb (bad) xchg outsb mov clc xor (bad) call add mov adc adc les xchg test ret sbb shrl jbe loope pop (bad) jecxz xor sub pop ss sub inc push push rclb cmp sub call pop fwait cli sbb popa jg jmp aaa mov inc cmp jl or and in inc cwtl mov loop sbb ficoml fs andl dec mov addr16 jae lea jge fs pushf movsl adc add aaa mov push inc mov push or sub (bad) orb cmp mov fstl pop cmp add xchg mov xchg inc push scas dec je inc pop jb inc (bad) sub sub add xlat dec (bad) or into testl xor mov aaa pop pop shlb pop mov or mov repnz push (bad) add pop add mov xchg outsl orl pushw jo leave ret test add loope lea out js cmp inc mov adc jns ret xlat les jle cmc push jo pop sub jo ficom add adc pop aad call jo jnp mov icebp cmpsl mov push jb dec mov pusha adcb jnp adc ds test lods inc mov stos cmpl js adc xchg sbb xchg push add xchg pop adc pop cmp push je hlt aaa stos addl test js cmp push (bad) mov pop or insl aas loop test arpl pop jmp push or push inc lret rcrb jp call sarb pop addr16 add fwait cmp cmp lock jecxz shr mov inc addr16 cltd push (bad) cmpsb sbb orb ret iret add sbb inc fldcw inc cs jne push mov jne add out push enter sarl push out inc xchg adc inc xchg shrl push mov sub (bad) call jo xchg sbb fdivrs or mov test sbb cmpl inc inc in inc loope xor movsl (bad) xor pop xor leave xor test xlat movsl inc jmp outsl cmp dec push mov insb cmp in outsl pop aam movsb pop mov and adc push push rorb add sub push xlat es js out cmp push ja nop ret add sub sbb call or lods test inc xor mov add push mov add int fbld cmp xor loopne nop pusha cmp push mov mov je ds and popa mov sbbb imul mov and movsl push sbb or bound sub ret jmp lcall add mov push mov cwtl dec pop stos pop (bad) jbe ja mov test fnstenv push sub push or dec mov mov cld std add clc or jne pop mov or adc loopne rcrb xor fistpll aaa adc outsb push cmp dec jle adc mov fildl outsl and scas (bad) mov int outsl sarl test popf jne or xor test arpl jae imul and jmp imul dec fwait cmp and imul mov or mov xchg icebp daa push push or repnz and and or sbb das mov dec pop shll je mov inc push adc mov (bad) pop cmp push add les out cmpsl xchg clc dec ljmp es pop push pop add jge decl dec add cwtl mov or pushf fs xor divl fucomi shlb sub int3 ret pop sbb mov jne cltd lock inc sub cmpsb add cmp cmp clc pop dec pop jmp push or aas pushf pusha lock test in imul jp sbb jae sub movsl sbb push adc sub scas add adc cmp inc ret and mov sub lock int fsincos loope xchg jo imul push xor push into pusha or in out pop iret push pop mov dec sbb adc addl imul or or and push mov xor pop das movsl mov push and in iret cmp jl popa adc or pop cld adc call xchg pop dec add pop in xor (bad) lret or je in pusha repz or jne in mov pop lahf jae jns test sub adc leave add fdivs mov adc mov sbb sub inc sub pusha sub xchg daa fsubs push lock jmp adc inc testl push mov jne in sub fcoml sbb fcomps mov lods dec (bad) (bad) jge push mulb or arpl pop jmp popa jo ss add aad cmp mov shll adc pop push mov in in out mov pop popf jne bound cmp add iret dec add jbe sbb inc sbb fwait add jbe jae inc mov adc pusha rcr lcall fisttp dec loope cmp fnsave in inc adc xor (bad) mov cltd pop aam aaa cmpsb adc test xor jp jne and or pop (bad) hlt nop aaa or cmp rcr sub fdivs (bad) out and dec lock cld adc fisttpll rorb add pop push push dec xlat test dec lea xchg xor add addr16 data16 pop rclb xor insl and xlat adc jmp cmp adc mov inc test iret sub dec lcall sub jns push ss cld imul js and jge popa sub and arpl pop sbb mov clc adc sub xchg in push add mov dec sbb loope mov cmp outsb jp mov or fildll push or adc js nop xchg gs hlt (bad) add frndint cmp add sbb add pop jb lock and and push mov fist call sub cmp adc mov push add or mov out or sahf mov add or or and mov mov or sbb lods sub push out and or incb ret add inc loopne sbb pop shrb inc cmp xor iret and das sbb dec cli mov iret adc pop aad loopne inc aas inc ret lahf shlb jnp jle test mov and ss push or and aas xorl mov int push adc mov pushf sbb cmp ret mov insl sqrtps sti out ja insl mov fisttpl loopne lahf mov mov and cmp sbb push mov mov popf mov fcompl jp popf fcoms jnp dec lods (bad) sbb dec fadd leave adc dec add adc and jl and shr in arpl (bad) lea sbb mov add in mov cmc xor dec dec inc push fsubrl pushf cmp stos pop jnp dec cmpsl xor aad test cmp mov cmp mov into or dec jge push push add inc das lea xor jl jmp mov push add das or and sti orl cmpb jne xor cli nop xlat sub mov cmp sarl out hlt adc call out push xchg std (bad) sahf pop pop cmpb mov jo inc jp dec sub clc or inc jmp sbb rcrl push adc lock outsb cld jmp mov cld pusha rcl lock mov add popa adc lds xor push cmovs dec push dec xor adc mov out js and jnp inc enter push jge inc test std fadds add push or popf (bad) call rorb lods jb push and stos daa mov add sbb test lock in pop mov repnz fstl mov fldenv lahf push pop jg mov arpl sbb orl fdivrs mov add nop repnz or and out xchg adcb (bad) repz sbb sbb jge pop pop xor dec clc out and jno dec push stc jle adc adc call push jo mov sbb or nop add xor inc inc daa add sub pusha mov clc jnp je cmp inc call std orl mov test aam jns (bad) push sbb mov out jnp rolb inc daa cwtl push movsb fsubs jmp mull push ret jns cmc sbb push jno xor enterw rolb loope lods lcall sbb cmp mov dec mov subb in mov cmp fsubl movsb cmp fmull arpl in cli sub add pushf and cmp push adc xchg push xor shrb pop add push sbb cmp and mov xchg loopne pop xchg mulb cld test gs adc lcall addr16 xchg mov aaa inc jnp push fnstsw pop insl inc cmp fistl aas loope pop xor jmp adc and fcoml scas dec enter sbb adc push out jmp jmp inc push jge sub sub jne jno loop (bad) imul mov push and ds mov xchg inc xor jae and push (bad) mov add fcomp scas arpl imul movsl lock dec and sbb in xchg push test out lret rorb dec cmp jp sub js add push fstl lods add cmp aad jmp mov fdivl jne sbb daa jmp sub lar rorb mov add les loopne sbbl mov pop push and je jge jbe movl je std pop je cmp xor adc mov sbb cmpsl jmp (bad) dec xlat jecxz adc sub enter pop lds add xor das xchg ret aam test testb in cmp push mov or mov fwait aam lock arpl push fistp dec je sbb in jecxz fsubs xchg dec jmp adc jb testl mov pop sub dec or push mov das nop hlt push cs mov inc mov movsb addr16 (bad) push inc or lea dec adc add or clc or mov mov jg loopne stos ret jmp lds add dec push mov and aad cmp and ss pop ret mov fwait sbb rolb (bad) or movsl negb notl add jo sub mov adc jmp aas and push je push adc mov dec push test sbb jb mov xchg sub in jg inc jb jae mov push pop or movsl int3 cmpsl sbb pop jmp jae rcrl jmp push xor or xor add dec or mov cmp xchg mov (bad) ret cmp adc mov out call mov call ja add ja mov xchg lock dec add outsl sub jg xchg push popl out adc add je lahf fisttpl and scas xor push scas cmp leave push bnd das pusha repz jo or mov test out mov push sub xchg mov dec lock cld push push and xor fsts insb cmp repz jp adcl repz push jecxz pop lret nop dec jp pop adc jb inc xor add xchg mov pop mov and xchg jmp das jle out pop push adc push (bad) mov rcrb pusha adc stos dec leave and mov loop in das cmp xchg cld xor adc ja hlt mov inc imulb test dec dec sub call and pop ds jo lock mov out jmp rclb test inc lea mov inc sub pop lock lods xchg out sbb mov aad dec inc xchg jo sbb or aad es inc inc dec xchg sbbb out jnp inc push call cmp jge insl or gs mov xor jg mov loopne push (bad) push (bad) iret rclb aaa add mov shlb push or inc ret pop add inc call push xor mov add add int cltd lea mov sbb push inc sbb jns sbb (bad) enter test pusha adc aam xor sarl mov loopne enter leave pop jno sar das je jle pop and cmp pop push sub mov or adc ss jg js (bad) dec cmpsl push in dec (bad) mov adc or inc sub pop and test and cli inc bound out mov add sahf enter mov aam add and sbb call push lods enter clc sbb pop cwtl dec lock fldt int3 lret loopne dec movsb jae mov popa daa loope jg jl jo inc cmp pop push clc inc and mov orb clc stc dec or and call or insb or ljmp aas mov sub aas sbb xor add mov sbb (bad) dec sti fidivr and xor cmp mov pop cld pop out jns (bad) addr16 movsb push iret pop dec inc adc cs repz cmpl rorb mov jmp push sbb rclb es xchg test pusha sbb mov lods and inc clc xor jmp std (bad) sbb cld jmp clc in cmpsl nop daa pop sub push dec test mov jb pop lea cld shlb shl cmp or pop loop cmp mov loopne mov in je xor dec or dec adc ret sub lods inc or inc dec int3 (bad) fsts add dec mov push pushw xchg mov loope push mov data16 dec jmp fs ret mov (bad) adc das jle jl xor jg sbb adc add insb or ds mov jl adc insl dec xor sbb mov jbe dec cmpsb mov imul (bad) cmpsl nop rclb das rcrb lahf jge mov xchg call dec fisttp or add add mov (bad) aaa or pop insb and (bad) mov daa dec xchg or xchg xchg ret icebp out js sbb (bad) push lock fcompl rcrl push mov push negl xor and cmp les fistl dec (bad) mov pop test imul pop out dec rorb cmp je sbb xchg sub test and xchg shr add movsl daa xor mov outsb xchg push push push cmp dec lea (bad) imul xor mov cmpsb mov movsl daa loopne pop dec and popa xchg sub add sbb ljmp or cmp in mov mov mov movsl loopne and nop rolb imul dec jno push xchg lahf jne mov and jle mov mov and shrb cmp xchg xor les jne inc mov shr sub mov sub or mov inc sbb xor mov cmp adc (bad) xlat iret add xchg movsb popa mov loope mov sbbl adc ret fdivl pop mov or fcompl jg cmp je sub dec pop xchg and or dec insl pop or sbb inc dec lock sti xchg dec sbb xchg cmc rolb mov jp iret rcrb daa sbb mov sbb fnsetpm(287 scas push sbb ja add adc pop add mov rcrb or pop adc dec push lds adc test sbb adc lahf jnp push testb (bad) and mov pop mov scas hlt dec data16 adc sbb push orb lock push (bad) jbe sti clc aam add mov int data16 jo sarb mov mov mov mov adc sub aam shrb movsb cltd cmp orl inc push cltd clc push adc mov or inc xchg adc sbb pop test pop stos adc cmp roll test and mov cmpsl (bad) lcall xlat and pusha fcoml dec and cmp jl test jge incl cwtl and imul push push fisttp ret jo push setne mov mov push (bad) inc mov out incb adc icebp dec and lahf insb add push outsl jo ja out and pop fisttp or sub arpl imul mov inc notl arpl mov push decb data16 push inc xchg lret scas bts pushl jbe sti dec jne cmp pop call daa call movsl pop xchg test call dec mov or push push lret or or push lea lcall data16 add inc pop dec fist sbb jg or dec mov sbb (bad) mov jo and sbb pop push inc dec jne inc ss rcrb mov or fnop outsl clc stc insb add dec push pop and sar mov ljmp (bad) stos sahf xchg jnp or dec mov pusha fisttp scas das (bad) adc add iret add pusha xor cmpsl xchg outsl add fs mov subb leave aas adc xor push fs push or test mov push push dec cmp (bad) xlat sub gs pop jp dec ret lock xlat clc add pop add aam dec in data16 andb jmp roll sbb jl inc push loopne ja and lea (bad) ljmp or add mov mov divl mov nop sub add cmp das dec and fcmovbe cmpxchg mov push or pushf jg subb xchg cmp and (bad) daa icebp and and fcmovnbe (bad) mull jg mov imul jne es jne scas mov and adc adcb inc and enter jle inc and lcall mov xchg and aas or dec nop sub or or test push pop out inc aam nop or nop adc mov ljmp inc nop dec push mov out xchg cmp lock insb sub (bad) repz sub cmpsl (bad) cld mov pop pop inc sub or or add (bad) in frstor clc pop pop outsl pop and add inc sub xlat insl jmp or cli iret sub ja pop inc lret out inc push pop movl jle mov cwtl sub or ja stos inc mov sub push sub arpl mov repnz pop dec sbb aaa or dec cmp cltd or not or inc je dec push out or pop xchg jge sub adc out add jmp popa sub xor push loop adc int3 or push push sbb dec add es fmulp call call scas in pop adc dec push xor add mov mov push shlb add sub and in adc cs inc jle inc addl adc and cmpsb inc mov xchg xchg btc add xorb dec mov lea xor pop or imul test in test sbb dec lock add iret inc sub out xor push xor jle inc inc or xor or es xor adc fs inc add mov xchg pop scas and xchg test xchg in loope mov push adc dec xor add lret int3 lds mov inc cli push pop iret movl popf movsb movl mov mov in ret movsb orl adc and xchg sbb outsb inc lret add clc jne sub xchg or mov dec cmp pop mov sbb jle aaa ja jle mov cld push ds jb jo or fwait or sti pop je pop scas adcl adc and and jl push loopne pop or sub push add sub pop ljmp push and pop push scas out sub adcl (bad) mov sbb push (bad) mov popf (bad) cld ja dec int cs insb cld and push sbb add test call cmp (bad) adc in rcll lds lds ret movsb lea pop pop ret xlat jmp mov ficompl mov in push aam daa aam sub sub cmc xchg je movl mov xor or sbb or xor fs mov (bad) arpl fildl mov xchg dec (bad) clc das leave pop pop push push add add call movsl and pop mov fs xor add stos add adc inc or add adc cmp cmp push test insb push xor lock inc arpl clc mov and in pmuludq push mov ffreep xor pop or add sti ja add pop or lea jge mov add cmp fcmovnbe out and mov push cmp or mov push or in xor xchg jge adc xor inc ret push pop jp cmc sbb addr16 add jle mov and gs cmp and push jl mov jbe pop jle mov pop inc pop inc insb push mov push xor push cmpsl pop cmpsb pop add mov or mov push cmp test add adc xchg push outsb imul push cld push xchg xchg mov jge iret cld push lret stc jo sbb push inc cmp addl enter test jge bound (bad) movb arpl fildll orl xor ja mov in push jmp mov call and push test enter pop loope sub add cltd push test adc mov mov pusha cmp push ja add sub pusha mov ret mov aad xchg ret sub daa daa daa popf jnp daa daa daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor cmp jns mov subb xor add xchg insb outsl adc or popf roll push (bad) add ret dec dec add push mov adc dec lods mov mov push xor dec add lods test inc sbb std xchg out push xor insb add dec cmp data16 dec imul fwait jae mov fild lret or outsb nop rcrb or orl je jbe and (bad) push je insb clc cmp adc jae lret push insb enterw je arpl adc fsub or adc gs arpl adc imul jae mov insb or shrb bound push outsb int in mov pop jo outsl sbb in mov jae add sbb or add add inc jl or imul dec aaa add jmp sbb sbb inc insb mov push push push je into insl dec outsl jo mov push push inc jns sbb mov aam addr16 and mov imul adc xor sbb xor aas add loopne xor loope or adc scas add jb fimull fs fiaddl add dec lods push jno jl jp or push jne fisubl inc inc xor mov inc outsl jb jae and or sub mov push pop cmp inc push sbb (bad) mov pop mov std (bad) cmp jle dec and aad mov mov cmpb fdivs pop subb aas addr16 ret sub and inc arpl mov cmpsl inc xchg insl mulb add pop leave and push es loopne mov xchg adc (bad) loopne shrb jl mov lret je add mov sbb mov and enter (bad) lock or (bad) int3 lds push add adcl ss aas out cmp dec fisubrl mov and xchg push add int3 cmp jmp push ss push add imul sub daa in addb lds mov mov xchg pop xchg push or push ficom add mov xchg in rol add sbbl lret lret bound js add xor cmc xchg add inc (bad) xor cmp adc aas mov les add push inc je push shll pop xchg push add xor insl fstpl push push cmp js in (bad) add add mov or xlat movsl lods into les add jp xchg pop pop pop daa ds test cwtl int3 aad test scas inc popa sbb das mov pop sbb call sbb mov imul daa and pop aas (bad) xlat push int3 push or push jbe dec or add pop xor adc in imul les in scas mov and sbb push movsb inc sbb fdivrl iret imul stos sub mov mov iret lret mov es into rorb dec or mov inc cs les sahf imul xor sub fs fcmovnb inc push dec jmp ljmp jmp in push in jae addr16 fs bswap int3 pop fadd (bad) fisub pop js sarb pop sbb enter clc xchg xchg lods mov add inc push mov enter hlt sbb or push xchg gs insl popa addr16 or mov outsl mov push pusha mov push loopne (bad) icebp loop mov mov jo insb js push sub out pop fdivrl cmp cmp mov jg cmp inc incl add test fnclex mov push call xor push sub mull dec aam sub push dec cld mov cmp adc push mov xchg call push pop sbb add pop xor (bad) nop adc (bad) hlt xlat out rolb push dec arpl mov mov and rcrl inc pop push xlat inc aas out or cld sub inc xlat jns inc ja push xlat rcrb enter jo faddl pop inc xchg sti mov cs sbb push xor or dec pop sbb cmp adc pop nop pushf mov (bad) ds push xor add mov and dec popa outsb nop add clc decl rorl rol xor dec jne push or loopne mov adcl loopne cwtl inc popa dec pop aaa test nopl out (bad) aaa dec jne mov lea jl shrb and add add adc dec ret je adc test popl xchg orb jp lds imul inc and sub add push adc add adc loopne xchg push inc cmp push dec or inc pop mov sbb pop xor or fmuls in mov jecxz imul xor xor mov lds mov mov jo loope dec sete popa (bad) sub cmp jo hlt dec cmp mov imull fisttp loopne sub shld test jmp push mov push push and cmp cmp pusha pusha and (bad) je (bad) loopne in std xlat cmp fisubl pop xor movsb mov add pop inc sbb inc push dec cmpsb or pop or stos movl (bad) adc cmp repz lock adc or cmpsl and jnp frstor add jns mov or in aas add mov push xlat insl pushf add xchg or lds in (bad) in jg mov ret mov loopne adc fistl (bad) push cmpsl or inc add or push call pop daa mov pop add or jb mov xorb pop sti or pop dec insb sbb push xchg dec decb jbe add jo add push gs insb pop xchg sarl cwtl ss imul ja cmpsb xchg add dec imul lret in rcrl or cld inc incb arpl imul inc js,pt pop pop or or add push imul and insl inc dec data16 add aaa inc dec mov das pfnacc (bad) inc popa fistp jo or push imul das jo icebp loop push addr16 (bad) sti inc das inc je inc push xchg dec notb or adc or add jg mov je or sub push sti adc mov fs lahf sbb jae jge dec inc pop or push sbb mulps push or jg gs mov repz adc mov (bad) pop adc imul aas outsw inc push (bad) and pop outsb jne adc or insb and repnz bswap or pusha sbb aas jne leave jno arpl add clc xor shrl rorb cmp and das test mov or sahf jge andb or push pop cld cmc xor and pop xor lahf or add mov mov loope lods jns pop pop addr16 inc dec push dec pop inc dec inc push push inc push add inc arpl inc inc inc inc push dec push xor inc dec rcrl mov arpl inc inc push sub dec dec inc push dec dec push mov and inc inc push xchg inc dec dec and es pop out inc inc xor xor adc or jbe mov xor xchg inc push inc inc dec notl mov sub dec mov imul push (bad) das sbb mov xor push push push jae adc test mov aas inc inc dec pop adc push push push dec jg push ret push inc scas dec inc dec push mov insl sbb inc pop (bad) mov mov inc add lock jl mov push into push jl push add sbb std data16 enter add dec or sbbb add add push inc or pop mov lea cmpl mov lods popf sbb inc or dec sbb insb lret or jle and inc data16 add add or jle mov dec pushl shlb fmuls mov daa and pop cmp shr mov sbb lcall adcb bound and mov mov and ds inc add loope add pop push loop pop or push mov push dec nop popa xchg arpl popa ret das cs or add xchg stos inc adc xorl jne dec fsts push stc mov push inc in clc pop mov repnz scas das sbb andb das cmp mov loopne jo cli das cwtl add movsl ss scas pusha xchg sub int3 das mov arpl enter or rclb or inc ret mov jg mov jbe cmpsb add mov add push (bad) inc adc or adc cmpsb xor and jbe xor dec out movsl adc xchg dec push pop repnz enter mov testb movl fnstcw xor inc lret enter inc aam add or outsl pop sbb mov adc lea incb ret mov mov cmp mov movaps leave jb jmp jo in xorl add fcoms sub flds jecxz push mov jg or or fisttpl jp cmp push push or adc orl sub dec pop out out andl mov adc loope repz movsl dec or ss mov adc js lock push mov push inc pusha (bad) popa movsb mul pop (bad) adc or pushl aam inc lea (bad) mov lock pop sub (bad) jbe sub (bad) pushf mov mov push push xor mov test fdivrs int mov das fdivp ficoml inc sbb mov mov ja sub ret pop (bad) xchg push cmp and push movb outsb inc sbb cmp xchg pop fisubrl adc sub loopne push mov (bad) pop shlb sbb add fdivr mov mov das lret cmp add mov fwait or inc lret andb add leave test rclb das jns lock je jo iret in push mov add jne fistpll lretw jne int3 mov sbb mov inc adcb mov inc sbb xor das ror pop jmp insl lret faddl xor or and fsubr push cmp and xor das sbb mov lods pusha jb or pop sbb sbb pop jb movsl or movsb loopne loopne pusha pop xorl int3 lret int3 vpmacssww sub test jno int3 lcall movsb mov nop cmp push pop aas popa int sbb add push xor mov mov mov sbb les inc mov fsubrs mov add or mov ja lock adc inc call cltd into fistpll test pop fldenv or data16 insb das movsb add adc fs mov mull adc mov sub jmp je cmp add push adc out ficomp gs repnz int3 mov mov aas mov enter popa inc stos fimul in add xchg je (bad) nop pop enter mov js (bad) hlt mov add or push cmp mov push adc inc inc sub movl js test ret int3 push test mov (bad) (bad) sbb (bad) pushf mov cmc push adc cmp mov pushf mov nop pop jge and lock adc ljmp test sbb and push or push adc mov pop or or mov push push or push push gs xchg add push jl sbb sub inc lea aas in (bad) xor and popa in jo aas mov roll (bad) mov shrl inc popf dec insb test fs and lods sub sbb cld imul dec jae pop sbb adc (bad) inc lahf pop je mov in enter push int3 test and imulb jge push xchg xchg (bad) ret insl push les or bound sar push sbb lea int3 fiaddl inc (bad) mov shrb mov add pop je push xchg dec roll pop push mov ja or iret sti out adcb cmove testb je push std dec iret mov pop add jge cmp pusha leave scas fwait xlat cs arpl push jle jle test ret lods inc add addr16 xor push jne mov arpl xlat pop inc outsl cmpsb mov adc or clc lods sbb add (bad) jbe mov fcmovnb lds xor pop pop test icebp push add cmp mov inc cmp insl sub cmpl xchg push add sub int xchg aas aam popa cmp decl xlat leave dec mov loopne (bad) out mov and sbb adc and sahf aas push mov mov adc cs and pop adc adc cmc push adc inc sub es lea xchg mov jb jge dec lds cmp jge mov ja jae (bad) std or mov and mov cmp je mov dec xchg sbb pushf pop aad mov mov add add sbb inc push add push or es test add test add arpl (bad) mov adc lea push mov clc mov not and mov je fcmovnb mov je inc xor movsb jne sub xor nop (bad) jo fistl push add in xchg callw sbb mov fs mov add push xor inc push mov out fdivrl push adc push in adc sbb pop push sbb lods lea test jnp mov sub add ror add rclb mov outsb je xor sti (bad) in ror ds jno mov negl lods inc add movsb stos in test pushf xor jb or inc add orl inc mov adc mov inc push ret shlb push xorl dec call adc mov cld das lea pop xorl inc add aaa scas rcll ljmp dec popa nop and add int3 es fisubl (bad) fsts imul lods inc in lcall sub loope cmovnp jo jmp add test mov pop mov cmc fwait or pusha loop jo aam pop cld fcompl mov bound push push cmp mov xchg cmpsl pop hlt sub fcomps in sahf ss lock jle das data16 push out pop push jl or mov arpl adc fldt mov ss aaa add notb mov fwait add lea add cmpsb mov pop inc pop pop in loopne dec idiv outsl adc xor not and lahf pop sar pop dec jle out mov mov mov add cmp imul sub add jae out add cmp sub xchg adc stc mov mov xor push push or imul sub lcall packuswb rcrl sbb subb pop inc pop xor cmpsb fdivrl or fstl jge xlat inc xchg lock mov xchg (bad) ficom cmpsl sbb and fsubr fsubrs push sub dec jmp clc js fstpt pop push in dec sub adc add cmp push das push jo mov in (bad) push dec fs push push ret bound pop mov add jns rcll loopne xchg movsb mov call add bsr pop cmpl test add inc push sbb or mov sti xchg lea add mov mov or dec pop sarl mov mov add dec (bad) sbb inc add lea fnstcw cmp adc dec out es push cmp sahf lcall mov pusha lcall add jne insl andb cmp jge jbe (bad) adc adc adc sbb insl mov push sub (bad) cmp sbb add jp test dec js and outsl push push and insb mov enter mov dec mulb jmp add (bad) mov sub shl mov mov jmp xor sldt adc int3 xchg cld push mov (bad) mov sbb in outsl jns push jno lock jl jnp jnp or pushf cmpl int aaa out push ds sub inc daa movsb imul movzwl lea and pop push cmp cs xchg xchg dec jnp push addr16 data16 iret popa inc fild ja (bad) icebp push add aas insb cmp cmp (bad) jo push xchg adc sbb add add (bad) orl push pop cs mov fldl inc rcr frstor mov lods xor loopne pop mov sbb test dec pop cmp int3 mov add pop push push dec clc xchg adc inc or or shll sar ss and adc dec mov pop push adc pushf scas lret mov pop imul fldl iret jae jo dec push xchg mov daa or in into and gs xchg or pop push push imul or ss push push stc sub and cmp cmc sahf test inc push adc dec stos bnd sbb (bad) xchg cmpsl dec les shlb rcll les mov add fmulp enter mov xchg add das test sbbl xor cmp shl dec fsubl shrb pop mov daa insb in addl add (bad) cld mov jb in hlt lock and xchg pop fnstsw mov add imul sub out xor js xor mov test pop pushf stos shrl movl mov xor int3 and add pop insb pop cld push push and mov add and dec add loop push sub add pop mov cwtl sub mov sbb or mov insb ret mull mov pop add or pop or mov sbb in pop cmp mov decl and mov (bad) cmp jg test jle mov int3 cmc cmp jl mov enter (bad) jg test pop clc jle movsb xchg pop test or adc xchg push enter pop push pusha push add dec shrb loopne sbb (bad) push ss mov pop mov pusha and repz push stos pusha pop jno nop out fsubs mov andb sbb scas mov test jbe in leave sbb inc vucomisd insb sub test bound xchg lods mov rclb sbb (bad) jne test sub xchg push fs ret xchg jg or jl push cmp cltd mov dec jo call test mov inc dec fs fnstenv cmp add mull xor adc xchg sbb (bad) js ss repnz add push inc and test pop mov add dec mov push mov sbb mov inc cs jbe nop pop cwtl (bad) mov mov insl mov push mov imul mov add xchg lret and xor xor popa pop je sarb add push push mov (bad) mov ret mov and outsl xor mov stos or and rorb aaa repnz pushf arpl pop pop or xchg arpl ljmp lods roll aaa lods int3 lret prefetcht1 push rcrb and aas ljmp out sub sub lret mov pop push out dec xchg loopne push movl push mov fiaddl cmovs push jle lock clc jb jmp xchg push mov out mov push mov jmp adc mov adc insb mov (bad) push xor inc and movsl (bad) add imul push push sub adc data16 icebp mov into adc push xchg leave jne aas cmc mov (bad) xorb or mov add and add sub adc aaa mov rcrl mov mov cmpsb push cwtl (bad) aad fldl xlat xlat hlt and leave adc add adcl aad jnp push push popf sbb insb sar inc ret scas push addr16 mov push sub adc inc jmp (bad) and jnp lods test add mov (bad) jg fwait pop orl inc mov pop cmp enter push sbb adc (bad) push inc jg add sbb sti loope push mov pop push push in hlt movsl jmp xor inc call cmp imul cmp call outsl sbb dec loopne fdivrl add mov faddl loopne dec adc fcmovb inc push xor add lock pop repnz sub mov outsl pop add dec jb iret or xor mov out in mov mov or lods data16 sbb insb mov lods and jp push outsb jle mov mov js add insl mov test mov lcall test loopne stos dec lcall mul xorb int3 sbbl dec es movsb pop aas test movb data16 and negl jmp cmpsl sbb pop push jns loop pop and push inc call or aam sti adc adc xor nop sti add es mov push adc push sub lock jmp inc lret addr16 dec aad popa xchg cmp lock adc sbb add lcall xor xor sbb and je sub insl jne jl shlb int3 iret add push iret in aas clc push cltd fsubs mov push and pop hlt rorb sbb add xchg lret pop jne cmp cmp push cmp push jo mov inc or add mov outsl (bad) cmp mov ja inc and cmpsl inc xchg inc xor push cmp inc enter sbb mov adc push adc xchg or cmp cmpsl pop rcll ret xchg push pop ret pushl rorb imul out pop xor cmp mov dec and add mov mov and mov (bad) push es or jmp movl adc mov add pushf (bad) shlb mov or cmpsl push cmpsl mov add xor ja pusha int3 xor out xor mov add mov mov sbb movsb pushl dec sub cwtl lea xchg in movsb mov imul mov sub outsb cld inc jb push sub cwtl add mov inc push cmpsl sbb push pushf xchg das add test es push out aaa add dec not pop test iret inc lahf shr lock inc loopne dec and adc (bad) xor and loope push pop pop mov inc sub lret and add inc add dec sahf pop sar pop (bad) or xor int3 adc idivb aaa hlt int3 xchg jo and repnz dec pusha loopne jmp and dec jo (bad) pop int3 push and jecxz andl pop pusha push loope nop andl jp push incl pop adcb (bad) icebp or dec add jne sbb in mov adc pop adc push jecxz adc cld dec rolb outsl dec pushf lea and mov aaa or push mov mov pop lcall ret adc test gs lods popa sub push mov jns mov xor or xchg shlb inc lahf shlb pop mov sub mov and lds push test jae sbb sbb test mov lods and push cld rcl xlat (bad) not add adc cmp es fisttp adc movl pop or loopne dec pop add sub mov adc popa pushf cmpsb or out bound loopne mov int (bad) les ret jl sbb adc and and sbb sub pop insb clc push or cmc add gs js dec mov int inc lds lcall fidivl ljmp stc pushf adc fdivr sub mov (bad) loopne fisttpll inc adc add aad or out or pop cwtl adc (bad) out iret aas adc ss aam mov nop sbb faddl int3 imul inc pusha pop cwtl add push pop mov add sub and xchg pop call mov jns ret sbb lea mov test in adc popw and insl inc fisttpl lods ss fistpl int3 test cmpsl push or lcall add or xor decb dec mov cmpsl hlt add pusha stos aad fiadd nop add je xor cmp fs cmp and or out sbb inc mov sub adc adc sub push fsubl jecxz imul loopne sbb inc mov adc leave stos in jne cwtl arpl daa mov cmp outsb cmp cmp jne mov xor test insb lods or xchg add lds jecxz in pop or mov jae sbb mov dec inc sub sbb outsl jg xor push xor or (bad) sbb mov inc xor push mov dec mov lret add adc or gs mov sub adc mov inc jae jnp (bad) lock or pusha add jmp arpl and popf mov xor jmp pop loopne pop jp fisttpll dec gs cmpsb adc push ja xor loopne aaa xor xor dec lcall adc and mov push jno (bad) arpl push inc xchg fwait inc mov dec out cmp loop sbb sub jmp (bad) lods xor mov icebp popa fs or lcall or pop loope and add jo pusha jo mov rorl xor push push das mov mov inc sbb sbb adc jo hlt roll js enter push jecxz and add sbb or sbbb mov addb xor pop out adc sbb (bad) mov adc sub test add pop adc js mov loopne lock dec aas ds pop in cmpsb pop fdivs aaa jno inc jnp jp repnz hlt mov sub sub inc out add adc mov mov lea add push xor adc in sub shlb inc in (bad) mov pop cmpsb lock imul inc cli and mov cmpb out xchg nop lret idiv hlt js sub xchg in popa popa or or lea aaa fsubs push arpl add cmp fisubl fistp mulps (bad) mov sub loope cmpb mov pop sti sub je (bad) repz inc push sbb and push movsb mov pop test shrl adc mov and pop cmp ret mov pushf add sub inc and and cmp jo sub and test es and sbb sub stos std test popa popa and or jns (bad) lods and jmp icebp inc sub push cmpsl movsb or xchg push mov sbb adc test mov imul cmp inc xor mov loopne aam add call or subb cmpsl jo ss in push test mov cld cld or dec call mov (bad) hlt clc add add fsubrs xchg (bad) aas lods push sbb adc cwtl pop and adc mov or fdivl pop and shll xor push nop or push test sbb in call sub inc ret lea js ret pop inc in adc movsb adc and sbb sub and xor sbb mov (bad) movzwl push insl or dec sub scas sar jle loop sarl and lds push paddsb loope cmp push dec push cmp dec push jmp sbb enter add and jl es add sub pop leave insb insb or int3 jne add inc outsb cwtl andb call nop adc dec inc xchg call sbb pop dec inc or inc imul inc sbb pop and push pop mov push fcoml addl dec add (bad) sbb mov ret adc das adc mov popf arpl subl sbb jo out loopne fs xchg addr16 subl rolb pop fadds jnp xorb push clc inc mov cmp fmuls and imul cltd sub (bad) (bad) das xchg sub xor or add adc add clc sbb daa call cli pop fildll pop lcall xor cltd adc inc xor insl pop rorl fldz cwtl inc add jl or adc pop (bad) ficom sbb incl test shr loopne lcall aaa push in sub das (bad) xor or sbb cmp xchg imul out add or ss rorl xor sub ja push loope and cli pop (bad) xor sbb pop sub mov cpuid sbb pop fiadd push jb cmp fist inc sbb int and test rolb pop movl cmpsb or mov into data16 fs adc push cmpb ja jae repnz inc inc icebp jmp mov xchg add cmpsl or mov (bad) aaa iret jne jl mov insb add add xchg or inc mov hlt mov int3 in ja ss dec fcompl pop pop sub add test pop lods (bad) ret jmp inc pop cwtl clc dec mov inc imul xor fcmovb (bad) test lock mov divb adc cmp inc xor push fist (bad) xor xchg sub adc cli mov mov adc mov in dec dec aam call and or loop xor ss mov xor pushf sub cli sub jne push push leave adc sub movsl shlb push sub ljmp push mov add movsb and fistpll sbb adc adc movb or popf stos adc add or jo int3 adc mov arpl rcrl sub scas roll movb icebp das cmpl inc imul jne sti mov out dec jmp enter bnd mov loope lea xchg and or rolb sub jecxz jp (bad) mov (bad) xor dec sub fcoml clc dec test lret adc insb xchg xor dec clc push test inc sub mov pop mov adc cwtl lea loop in mov mov insl pusha add movsl (bad) lock daa lods jne loopne out push ja jp push (bad) pop cmpsl loopne push pusha loopne (bad) pop add ljmp int ffreep fild jp ja (bad) loopne loopne or add sub mov inc mov or inc mov dec pop pop sub or mov mov push sbb cmp or jo rcrl or push shrb dec clc loopne cmp adc shlb push xchg cmp loopne pop and xchg enter push sbb clc lock enter inc dec mov adc enter sbb ja lret mov cmp out pop add (bad) js pusha inc divl dec lods sub ficompl loope mov loopne or call into or je loopne pop sbb sub (bad) pop popf push ljmp out vmovss adc mov adc mov clc sbb sub jp or rorl pushf dec and mov cmp aam adc pop fdivs or xchg xor dec popa xchg push sub (bad) lock inc pcmpeqd call test int imul in ret or bound cmp rorb sbb xor test or lods outsb sub aam addr16 xchg in sub cmp or jbe mov es jne inc sbb mov pop mov mov or mov mov add xchg movb adc or pop adc movsb and push int3 in pop ret rcl xchg mov stos stc dec mov loope fsubs (bad) xor cmp pusha inc in popa mov and xchg or cmp xchg (bad) in mov in out or mov jbe adc adc mov adc fs movsl add push and xchg adc sub movsl cwtl and or enter add jl push andb out in jb add inc xchg ss adc pushf mov fs rorb xlat push aam lds js jg mov push or pop mov movb xchg mov add sbb sub jle sub mov stc int test and push jle fildl sbb inc adc js jo mov cmp xor or cld arpl or imul pushf xor push jae cmp mov scas adc pop bnd fmuls test mov and pusha mov fcomps jmp (bad) push je jp jo mov popa mov cmp test (bad) fadds faddl dec xchg loop push fldl adc sub movups pop decl push jo xchg int sub ja xchg mov lea sahf mulb out dec adc into or adc je nop lea push sbb sbb mov lock test adc add pushf xor and mov sbb aas fiaddl pop lds cmp fimul orl mov push and dec cmp fadd movsl push adc cmp dec sub and rorl cmp cmp inc shl pop add pop loopne and pop movsl rorb adc inc mov lcall insb js lret (bad) jns (bad) jbe pop pop and shll aad sbb and das jp inc mov lret xchg xchg adc test pop iret push nop cmp orb std (bad) or sbb (bad) push leave inc xor nop dec sbb xchg cmp add cmpsb cmpl cmpsb mov and xchg mov cmpsl and out fbstp es lds clc rorb loopne jmp dec pop insb fbstp add jmp sub fwait jge outsb sub or dec (bad) dec sbb push mov or or and or and movsb ja,pt stos ss mov lahf mov add lcall jg adc or in dec sub and xchg iret (bad) (bad) sub xchg dec pop sub fs jbe or push sbb cmp cmp arpl cmp orl mov lods sub sub pop inc and into jo or adc or shll sbb adc sbb lahf test jae movsb jl xor je push in dec cwtl jbe and mov in jge dec jbe mov push add lret lock or lock push loope jle in adc test pop (bad) mov in jmp inc push xor xorl ss jns or mov mov cwtl ret test push push pop xchg (bad) inc sbb cmp mov and and rcr adc ljmp and stos push dec mov jmp jl mov fwait add lods inc addb mov adc cmp movsl sbb push add mov in je inc addr16 mov push aas rol loopne cmpsl push xor lock out pop movb add or cmc iret mov xor mov or in mov mov (bad) mov sti mov popf test ss push pushf jmp dec popf movsb (bad) jl add xor sbb test cmp add adc lahf call inc dec jns fistp stos xor ja punpckhdq dec push inc adc mov (bad) mov push inc nop or mov mov inc pop xor aam mov out add cmp mov jmp mov add mov jl mov mov adc sarl xor mov gs test (bad) or xchg inc or orl inc cmpsl push pop outsl fildl jle sbb adc movb jo xor xchg pop fmul rorb cld lea add lods adc jns cmp sbb add jecxz (bad) pop sub cmovnp pop mov jnp sbb rol stos pop lret cmp mov hlt mov or cmp pop and notl outsl je jo sub add ret fs cltd sbb adc (bad) subl sbb mov jns mov xor inc dec (bad) xor hlt push add add andl or mov (bad) mov daa fisttpll add push pop cmp je push push add jo inc mov nop pop fwait mov mov enter add out dec bound mov jecxz jle adc mov add pop and jnp daa cmpsb scas sahf cmp jo dec or dec mov xor js mov into or sub jne mov mov cmp inc mov mov lcall jb (bad) outsl adcl bound inc pop push or pinsrw add xor push movsb adc iret sub or sub test jo xchg sbb imul in lahf test and int cmp jne push mov sub adcb pop push add xor pop sub loopne and out out es adc and push adc test cmp fwait sbb or aaa mov push test xchg mov mov jo push mov jmp lds xchg mov pushl flds sarl idiv mov fwait dec or inc hlt iret xchg xchg sahf sbb inc cmp cmp popf jmp add lds jo jne loopne dec insl xchg ret enter or add xchg push pop pop leave add pop sbb hlt jecxz inc mov in sbb clc ret aad lret cld sub jl cmp je popa dec mov xadd pop add mov popa stc rcl pop mov icebp or imul int3 es mov andb xor pop fcoms faddl or xchg aam add add les fwait (bad) push gs and mov adc sub sbb pusha js out push push test in (bad) mov roll dec cld adc mov aam pop xchg mov pushf or inc sub les int3 mov (bad) mov add mov xor adc loop mov or (bad) mov and leave mov dec in sahf and mov ret or xor cmp and es mov lods push cmp jg dec insl pusha jmp pop inc push js ja mov ret shrb add ds cmp or pop jno or inc inc sub flds cmp iret inc sarl mov jnp rcr push or adc fs leave inc imul or push sbb push lahf movsb adc cmp mov das popa and lock arpl loopne xchg sbb cmpsl test jne adc add fldt test in ss adcb aas push test push add jne xor dec (bad) and lock cmpsb icebp dec or test xchg rcrb adc inc xsaveopt add sub nop aas outsl sub and and inc push xchg lock push xchg xchg xchg pop movups adc xchg xchg add push clc mov adc aaa cld push clc pmuludq cmp cmp in call cmp fnop aam cmp cmp int3 enter mov hlt gs cmp cmp lds gs adc cmpb dec pushf jbe cmp sub mov test (bad) sub mov or add (bad) stos add sub pop aas rolb dec arpl fwait xchg mov or jo test in imul or out movb add sbb add ja pop or inc imul pop or mov mov push jmp jmp xchg inc adc dec pop mov ljmp insb lods scas (bad) dec adc adc jmp jo nop push nop or sbb jle push arpl and (bad) (bad) pop adc dec adc ret addl jge sbb ja push test and js adcl cmp dec insb add rcrb jle and or in dec jo push popa cmp jle push pop cmp mov sbbb pop pop rol sahf in pop sahf (bad) cmpsl aam pop and and das cld dec add dec call push std daa jmp push sbb shr sub jg ljmp jmp mov sbb push adc inc cmpsb pusha (bad) daa adc scas loope orl push dec dec es add icebp push dec call xor push inc xor sub es sbb lods and lock out pop sarl (bad) aad xchg mov and adc xor nop (bad) lock rcll daa std mov sub cmp push incb shrb jb mov cmp dec jne adcl pop clc cmp lea lea fcomps inc and clc loopne (bad) ds jb push sub mov jge xor dec push lret leave push lock dec inc pop cmpsl and xchg or or add xor stos iret cmpsl es push jns sub push adc cltd and aam scas or movsb push stc in daa cs aaa xor xchg lods add fcoms sbb nop fcomps or test jg inc inc jne mov adc imul clc call adc fdivrs mov cmp ret mov add test ss sub in call jmp ds shrl mov adc push adc cli push adc adc outsb jne ret cwtl (bad) insb popa jns jae mov sbb inc or clc andl repnz mov xlat or es in stc xor adc sub mov push push inc push cmp dec inc into add popf sub dec mov or movsb sub or (bad) das add jle fldl and push loope jle prefetchw bndstx mov lcall jecxz xchg cld mov pop rcll mov pop pop jns cmp inc dec pop fisubr sub sub outsb or jl inc imul xchg movsl frstor adc xor and gs fbld loope add adc xor push and fs xor aam popa test pop dec lret or sbb jnp add sub xor insl add add push (bad) outsb add sbb rorl jo inc jnp cld mov outsl cmp test and add dec inc or sti add movsb push mov sbb adc xor xchg mov aam je mov pushf pusha loopne enter cld jns daa cmp push dec out sahf out sub xchg fwait push pop outsl ja (bad) aam jg ja xor mov jns mov sbb and sbb xchg lea loopne decl imul jo fwait cltd out or fsts sahf aaa cmp cmp mov jp ret das sub pop loopne cmp and scas mov ja enter mov dec mov or bound push dec ret or shrb sub testb lock add movsb lahf mov outsb leave insb fs xchg orl orl testl sbb lahf sbb inc sbb inc mov pop scas inc daa inc xor iret jmp and es mov sbb xchg push out fs sub pop mov test inc jmp flds (bad) adc aam stc mov dec xor (bad) adc hlt xchg dec and sbb pop sub push test dec add push repz sub push jno lahf xchg adc inc cli mov cmp mov idivb pop and prefetcht1 clc or add sbb xchg sub add lahf lock push jl jns pop bound jbe outsb (bad) addl xor (bad) je pop sbb fcoms xor and add in js aam faddl xchg mov or lock pop imul (bad) mov jo je (bad) xor sbb nop rorb cmp hlt jne out in mov adc rolb pop or inc xor sbb push sbb (bad) daa xchg aam dec sbb sub adc loop lods ds mov cltd mov xor push and je (bad) push xor (bad) mov and adc or inc sbb jle dec jne push ljmp rorl dec das or fwait cmp xchg inc xchg je xor pop xchg sbb inc push enter cmp mov inc lea adc cwtl outsb sti cmp pop (bad) das sbb bound rcl arpl mov jo flds adc ret jge pop dec lock sub adc and (bad) xor mov ja mov es nopl add add mov sub xor mov xchg push or inc mov cwtl push jmp scas push mov lcall add in pop inc sub adc add push and mov or jo das fdiv movsl and call scas sbb in sbb fdivrl cmp hlt shll dec lds lea jbe ljmp dec mov loopne pop push jle outsl inc fnop jmp dec in (bad) pushf mov or jno sti test shl fcmove vprotb call or push sbb mov aaa and idiv adc pop inc adc jne jno ljmp inc inc cmpsb jmp xchg lock mov push adc mov sbb test pop rolb call lcall pop (bad) je xchg push cwtl lock fisttpll add and mov fldcw cmpl sbb shll xor orb pop (bad) jne mov xlat push test xchg xchg cmp leave test lock addl xor push stos xor inc pop pop inc push xor pop push orb jmp repz mov sub inc jo aas test nop (bad) fildll add pop aas or inc push cmpsb jecxz cmp cld inc (bad) add sti dec je or icebp pop xor sbb and adc pushf jmp push orl insb ret mov pushf mov nop xchg cmp rol sub pop and lret push dec mov xchg adcl cmp jne sbb mov cmp sbb (bad) and cs out cmpl add lock push pop aam dec ljmp xchg iret xlat cmp jne rcrb jbe in pop cmp sub mov sub into and fs pop repnz cmp lret and sbb leave xchg enter cmp in aam pop push inc push idiv adc fcomps rcrb insb push dec insb push pop sbb (bad) push leave xchg imul dec push jo imul dec jo fs dec push je mov inc cmp sub mov out pop inc cmp mov dec fsubs lret push aam enter xchg dec in push rclb add push cmp push adc add sub cmp pop lock arpl arpl inc cltd xor movsb subl shrb push sub pop inc push adc jae repnz das push and loope outsb cld fcmovu mov ja mov dec das pop add outsl jae lods xchg or daa jg push sub enter pusha jo pusha xorl sarb add jo mov ds lock adc push aas push push push push push popl xchg lock (bad) cmp sbb out andl dec enter sbb adc imul or adc add mov pop outsl dec les cltd movsb mov add shll pop pop inc es push adc or inc xchg enter dec pop das fmul fild lcall push decl lods sub sbb pop mov sbb dec jl test nop xchg mov movsb mov mov mov mov aam mov mov hlt pop mov add mov mov and mov jg sbb push in xor pop (bad) daa mov adc fwait inc adc add loop pop arpl xor add xchg inc ret mov or xchg add enter push movsb xor sbb orb sub test pop movsb xor xchg pushf je mov adcb test push sbb dec gs sub mov sub inc mov inc shrb and dec push push movsb xor pop shrb lret jl inc sub push mov pushf test mov les and dec push push movsb in lock movsb xor xchg hlt adc and xchg push push cld xor adcb dec add push sbb je inc sub adc mov and xchg dec push push and dec sub push movsb xor sub xor xchg inc pushl inc inc fsubrs lds jne sub js push mov pushf add push sbb insb outsl jae mov mov sub and inc push xor pop test fcmovbe aas push popa jb cmp lods xor (bad) daa test je movsl mov dec jne insl mov mov dec imul or fs pop or clc popf dec arpl jae mov push fs mov jno lea or jns jp jae sub inc outsl imul pop pop xorb xor mov push ret pop xchg or or or adc push mov int pop mov or push (bad) loop mov pop iret ds daa fmuls or xor outsb mov sub add cmp (bad) outsb adc mov pop pusha push (bad) in inc (bad) ficom mov (bad) in pop xchg sbb pop pop xchg das jns dec or ja and rcll jns in icebp and xchg jne insl outsb jo mov das pop fs fcomps jo inc imul icebp mov mov inc outsl arpl and xor mov push xchg pop mov add sbb adc adc gs insl add dec fcomip mov outsb les xchg push add and jg jno mov jbe ja adc subl cmpsb add xchg push mov out test cmp mov outsl dec xchg add xchg dec dec jns dec push in orb push mov mov push jmp inc lock in dec jb dec pop sub fs xchg pop or xchg add pop jb push pop and cltd pusha sbbb mov fcmovbe outsl fdivs call mull jo nop push pop jg ss inc nop push mov dec aas dec ja loope icebp test addr16 (bad) adc (bad) jp (bad) js cmpsl jne es push test push push movsb or xchg insl add xchg add sub fiaddl xor jmp or call mov sbb in stos je je pop cmp cmp fs adc or loopne dec dec cmpb test inc push push notb inc inc push dec inc test shll lahf or dec jp or (bad) fcmovnb fs xchg adc test and sub (bad) dec xor cs jl and out out (bad) fiadd adc out xchg jae shrl jo ss testl jbe cld push pushf nop adc mov lods loopne dec dec jbe push xorl mov or inc pop enter ret mov adc pusha adc cmpsb ficoml pop push faddp out pop xor int3 pop xor loop or mov cmpsb lahf push inc or fcmovnbe mov inc and std fs cmp sbb ja fs or and pop adc hlt aaa mov scas add in xchg push adc clc adc sub dec mov xor dec push clc push inc mov xor sar aas ret loop add push or enter push jo loop cltd or adcl or sub cmp out or jb dec adc rolb push push inc mov and and movl loop add movb dec or xor dec adc sbb xor inc cmp test adc iret test ret nop xor cmp jg sbb loope lock rcll cmp cmp out or movsb es mov cs and scas adcl adc test es cmp leave jo (bad) or jge mov pop inc lds cmp test mov aaa or rcrb and pop push out xchg (bad) mov pop pop (bad) cmp adc cltd and clc or inc into adc add (bad) rolb push (bad) in insb call jg pop addb add push dec push rorb push dec (bad) mov (bad) mov cwtl add (bad) push add push sub pop xchg adc fwait cmpsl push adc aaa hlt pop fisttp xchg pushf mov mov sbb cmp dec push push push fbstp test add adc inc outsb iret pusha pusha dec pusha je (bad) mov nop push (bad) sub leave push mov pop mov sbb mov mov dec js fnstcw jecxz dec xchg mov lock xor push stos xchg xor ds cmc mov jne pop mov es and daa jcxz dec sbb (bad) out cs mov adc sbb cmp push jl add hlt push xchg mov movsl adc cld pop add dec sbb mov mov fstps pop or roll test or pop mov jl test testl or push inc cwtl or add stos add (bad) pop movsb lret test lods mov dec lret mov pop add enter test pop jae mov or inc mov mov cwtl loopne aam jo lcall loopne bound push xchg inc xor sbb add test xor fildl pop mov adc xchg nop ret ret add xor enter pop push pop add add dec and xchg push or (bad) call mov sub xor outsb inc xlat popa das popf dec jle pop push outsl pop adc enter and pop pusha mov shrb push mov xor push inc mov push mov (bad) cmp xor sub sub or add push and mov daa or sbb mov xlat pop cmp std insl fs addr16 push (bad) jo fsts mov adc add and arpl mov add mov mov aaa pushf cs iret leave xor inc jl xchg dec nop sar dec sahf xchg mov mov lock test push sbb sbb (bad) and dec mov mov jns inc push lods cmp jo inc dec lea rolb nop add sub push mov push daa outsb add mov or daa icebp (bad) dec jno mov push inc sub xchg xor adc push pushf adc mov mov push lods pop cwtl push push aad fisub push pop les inc loop push out imul testl adc add lock dec es add loopne cmp pop mov jns pop jl xor push xor mov cwtl jo je dec cld inc aaa outsb fs add jl outsl fimull pop dec push je jle jo and inc lahf insl cmp inc fs lods repnz add push sub fistpl rorb inc add pop nop mov mov and fsubrl in push and popa push shrl xchg (bad) mov sarl jl mov mov xchg inc dec insl cmpsb shrb in outsl push subb inc xchg and data16 out rcr fmul ds push jae in pushf insl mov int3 mov movsb movsl push and sarl sub test repnz jne shrb jno ja ret adc inc jge neg (bad) mov ljmp lock sbb or (bad) dec jae lock or icebp push mov into adc push jmp pop sub pop ss push rorl ret inc clc pop (bad) bswap les pop pop les divb cmpsb inc aam jp sub pop xchg imul test inc xorl pusha sbb mov add dec and cld and mov add test mov xchg mov faddl inc test hlt inc mov xchg adc decb adc jne xchg mov das jo rol pusha rolb movsl or cmp and loop dec adc in inc push sbb adc cwtl mov add adc movups fmuls jo push ds adc mov pop and test sbb jae cmp fild mov test xor imul and in insl sbb popa cwtl push mov adc gs cmpsb sbb mov and push push cmpsl xor sub mov inc iret adcb adc rorl xchg (bad) movsl fs into push xlat fisubl aas cmpsl sbb push adcb jae imul gs push test shll ds bound dec je pop inc hlt sbb inc pop ds inc cmpsl sub insb in dec fwait ret jae (bad) sbb dec pop enter pop inc pop cmp mov jno inc adc ss xchg push and cs sbb jo popa pop cmp dec push sub jb mov and cmpl jmp out push dec lret pusha push insb enter jge sbb or in ja int3 out push pop lcall xor (bad) lock pop mov shll pop or xor test bound dec mov sti xchg sbb es roll pusha daa mov in mov jle movsb insl sub push outsl jo jo jns and cwtl cltd cmp cwtl mov lea dec lods jecxz (bad) mov mov dec push mov and mov movsb and sub inc (bad) fiaddl push or mov sub imul push sub sub inc push stos add jae aad jp and push mov pop cs imul stos or das lock lea lahf adc xor push pop xor mov pop fsubl mov jb lds or es dec inc and popa or enter dec sub or mov and fadds dec xor fstl cs dec lock fldl or int3 or dec cli fs inc sbb aaa mov insl rolb bnd je inc fiaddl enter pop cmp inc js mov int3 test inc pop rolb cmp or xchg xor and pop bnd adc cmp daa and push jns and fdivrs stos adc or xchg loopne dec xor mov push jo clc cmp cs clc jo,pt out push jbe addl incl fnstcw xchg mov and adc inc in into movl frstor (bad) test inc push dec adc fnsave aaa cmpb daa rclb xor insb push daa insb orb daa cmp jb into nop into aam ja adc daa mov add inc push mov std pushl daa lcall jns in leave stos and push cwtl outsl inc push xor jg xor add les mov dec insb bound ret test arpl push jns xorl sub bound add loopne stc or nop or or cmp adc fistpl (bad) jne,pt outsb xor xor popf push jb pop adc mov inc leave adc xchg jb push push fisttpl or adcb adc jae adc test mov jae aad nop pop sbb (bad) rclb push sbb rorl jecxz add cs scas pop and and xchg inc nop and mov stos in sub sub or fs sub imul add inc dec dec mov into movsl movsl add inc std add or rolb lods and xchg cmc push ficompl in dec call in not (bad) jnp addr16 add cmp jae dec enter pop faddp in faddl lcall hlt andb mov mov mov aaa popf mov daa loopne dec push jle dec dec rorb pop pop sub mov mov xor push inc inc or out xchg cwtl rolb mov push les cmc enter cmp jle or or push in inc aas or xor inc or insl int nop loope pop xor and or and add jae jge xor aaa outsb (bad) out add push push outsb xor mov jae add sbb gs sbb inc push xchg mov pop xor add push ja enter lods loop push inc or or fwait mov wrmsr push mov pop movsl mov pusha and or cmp xchg or jmp sub dec mov jle or sti and jle mov or bound or shlb rorb sti mov xchg outsl push movsb mov xchg loop or mov mov cmp pop clc ss adc pop pop mov pop pop enter or popa fisttpll inc or add jo aam je xorl test or mov pop xor cmpb sbb data16 in or orl cld jmp int add dec inc or jle mov pop arpl or mov ss dec lret inc or xlat (bad) push shr test jo sbb addr16 pop call push or jmp pop imul adc mov sbb cmpb xchg dec dec inc jo cmp lret sbb je movsl cmp (bad) cmp pop push stos lock into xlat (bad) xchg out popf insb push adc lock (bad) aaa sbbb stos or sti cwtl popa adc stos dec in mov adc in mov das clc adc cmp int3 inc rorb add out shrb stos xor sbb unpcklps or add add mov (bad) jne and dec cld sbb sub (bad) lock jo xchg sbb jbe rcl xor das or mov xlat add movsb push add xchg xchg cmpl into daa mov les mov pop ret aam in sub rcll cli fcmovbe push push out fs inc hlt shrl sub xchg iret inc add mov jb adc push je lret loop mov cmp test jb pop adc nop cmp jecxz mov aas inc mov test xchg adc scas shr cmp xchg lret (bad) sbbb notl push jp and lods fucomip cltd neg mov nop xor les xor push test add pop mov and cmpb add jle mov movb (bad) mov je and mov lea lea (bad) repz pop fisubl jne movsb push iret or jp fwait inc dec in and hlt mov lock add jnp pop (bad) jb xor rorl inc sbb stc scas lods (bad) repz test dec arpl xor inc xchg hlt in enter data16 test js in jns push push xchg sub inc xchg js jmp das add sbb imul in out popa mov fistpll add iret inc (bad) xor sbb jecxz fiadd dec jne shlb inc push mov jmp sbb pop mov cmp daa lahf shrb push in pop out cwtl inc add ffree jnp jl sbb fdivrs add ja insb add jns sub inc cli inc nop xchg pop jns xchg inc pop add add xor (bad) mov add add add mov (bad) hlt pop cli mov push add adc je xor xchg jbe pop sub sbb push xor mov sub icebp push lock jno,pt out or sub sti aam xlat fs std gs pop pop mov or jp sub test inc push push add or mov push jge adc mov pop call mov dec and jae mov adc add adc sub mov push xchg lret movsl pop push add pop sbb int3 adc mov orb adc add sub jne movb bound daa es pop lock mov adc inc nop mov pop (bad) jne jecxz shrl mov mov loope xor push xorl push add cmc negl inc and (bad) leave rclb cmpb repz mov aam jg gs clc sub add jb clc and add and daa (bad) fadds cltd cmp or (bad) xor xchg sbb or jne mov cmp test inc push loop jno pop or into loope and fistp push dec loop movl and test or stos testb std mov sub and dec fidivrl adc insl inc adc mov jae aad shrl insb cltd cmp popa jmp cmp mov rcll push jo pop xor adc (bad) xchg das sub hlt enter xchg subl adc pop fisub scas mov push mov and or dec push insb lods jb stos add and sub xor outsl pop movsb sarb sub pop je stos mov (bad) adc leave or sub dec pop mov sub mov pop lods mov jnp js dec lea insb nop pop jle sub cmp imul test (bad) and sbb jmp mov dec (bad) test (bad) cmp sub and faddp movsl xchg xchg cli add xor jge mov adc mov lcall (bad) inc pop sub cmpsl (bad) push push mov pop in (bad) jge xchg stos shrl inc nop sub dec aam fistpl cmp je ljmp sub ljmp mov fnclex sbb pop in xchg inc dec inc outsb inc outsl push pop jp sahf in sbb lahf clc lds in xchg jp fmulp imul xor mov jecxz insl pop dec fistl je push pop sbb adc roll call pop imul decl ficom aam lock adc xchg ss pop push inc dec aaa nop ja mov (bad) and in ret or (bad) jb jns jbe cmp cmp ds and jb jb and and jb jb es sub jb jb sub sub jb jb cs adc jb jb adc adc jb jb push pop sbb jb jb sbb sbb jb jb push pop add jb jb add add jae jb push pop or subl xor insb jg sahf out decb dec and out sahf out adc or iret sarl and sub lock repz or add jns cmpsl stc clc jle lock sahf out loopne fdivs shrb jns out mov out sahf out mov out sahf nop push jns out js jo push inc pusha cmp sahf out sahf push sub inc sbb out cmp xor sub sahf out and mov sahf out sahf lock or add repz clc jge lock repz xchg mov dec mov das pop sbb je and pop jg (bad) dec pop xchg jne xchg es sbb mov jno sub xor mov orb test movl daa push es push cmp mov pop jle test xchg push fwait movb imul pop xchg cmp inc das cmp sbb mov add mov mov cmp and and or loop push (bad) cmp pop push sarb xchg xor pop push fs fwait cltd out pop je jbe cmp mov inc cmpsb insb aaa es enter cmp adcb mov jb pop sbb mov mov mov ret and pop je pusha sbb mov addr16 enter sahf jle shlb repz add cmp sbb inc les test (bad) enter dec inc push dec scas dec xchg add test mov je xchg mov pop xor mov mov ja mov add aam enter fadd rorb (bad) jbe (bad) pusha xchg test scas pop mov cmp xchg inc test add cmp jns (bad) mov and or mov mov push adc inc push cmpsl or popa je aas test scas xor jb out add imul mov adc xchg stos dec mov imul xlat roll int mov adc sub fmull loopne imul push sbb fsubrl push cmp js ret dec inc inc (bad) fcompl xchg jo,pt lahf out dec pusha mov push adc push shlb dec lods cmp cmp pushf push push mov sub jmp icebp and and xor xor push dec mulb dec imul add rorl movb add arpl mov push push or adc outsl pop mov aas bound pop es aam negl push jb popa or mov bound shrb mov scas gs mov pop addr16 jb divl mov mov arpl mov daa push jg out (bad) jge je outsb insb das je call sbb and outsb cmp daa mov (bad) pop je jo jb arpl testl out lods loope das add or xor cmp push adc sbb and xlat and lock outsb xor mov jne cmp not push add inc push lahf movsb lods movsb pop pop jns mov cs xchg pop das or int3 je movsb cmpl ret aam and and inc add pop std orl dec mov add xchg dec mov js or js push or cmpl mov push inc xchg pusha push insb push ret mov into mov mov mov sub fsubr push jne scas add or dec movsb sbb out icebp sub andnps roll pop push mov xchg nop das adc adc aas nop xchg xor push pop xchg stc add test cmpb dec sbb mov fcmovbe pop mov sub adc mov inc push aaa and fcoms data16 in imul lods cltd adc mov jecxz enter dec and cmp mov add adc lods aam (bad) mov sbb or jmp sbb inc mov and mov es sahf mov push xchg lret pop xor mov push test add sbb push add rolb sbb push rol scas adc pop dec adc sbb add or pop push insb or push mov inc out add (bad) xor roll add jg pop or or or or or or iret repz adc adc repz repz pop sbb sbb aas iret sbb and and fmuls jns cmpsl push (bad) mov sarl cmc push mov sub cmp repz pop insb jge repz repz mov shl cmp jnp hlt add cmp cmp repz push repz mov popa pop or jg fwait in lret and or movsb jb or pop push adc adc dec sub xchg lret or or jb in push or mov sub adc lret dec adc jb in cmp adc inc push inc pop xchg push cs and sbb xchg lret sbb xchg push jmp ja push popa cmpsl push jns imul sub and sub sbb and push add sub es insl sbb les rcll xchg inc add sub fdivl fsubs adc add std push lea bound add pop mov (bad) fiadd test and cmovl add push adc movsb int3 in fsubrs add pop testb mov shl jge jmp inc int3 mov push ja pop iret sbbb mov movsb cmp fdivrs cmpsl lock dec push sub dec int3 sub rcrb jno call mov push js out out jnp adc adc dec mov pop sahf inc and xchg in adc jge and fistpll sbb or cmpsb cmp pop fdivs repnz jno or rolb add push daa push hlt xchg add push dec popa xor lock cmpxchg mov js addr16 sub mov push je add xchg or popa jns test cmp sbb xor add adc fdivs nop mov mov push push jl mov xor sbb jo push clc mov push cmp daa push test fdivrs jg fnstenv test push sub push stos adc jg lret add inc xlat inc test jae cmc imul aad jg leave clc movb adc notb mov mov inc sarl call insb push test flds call rorl fadds push pop pop sub xor xor jno xor push sti mov jo xchg pop clts push stc nop scas pop sbb mov xor daa inc sbb adc in mov and jb add mov adc xchg adc and pop lea adc adc sub dec adc sbb mov push (bad) or gs add inc add sub sbb xor sub nop stos in mov sbb cwtl nop or jp sub ret ret jb fs iret sbb mov movsb dec jmp mov repnz push outsb loopne xor adc and and test and (bad) leave push jo mov mov leave add and outsl or pop xor sub test sub mov inc test js sbb das dec gs jbe orb xor inc push jbe dec fwait cs rcr xchg movsb (bad) mov dec or dec pop insb or jp adcl push dec lods pop add lods inc lods (bad) fnstcw mov scas pop push sarb or pop mov jp add std or fsubrl adc add xchg cmp fild pop imul daa movsb mov pop push fimul pushf adc imul and jbe lea lods add popf pop sub adc xchg pop fcompl and mov loopne pusha insb sahf test outsb or pop sarb js call dec pop or les fcompl push xor mov pop cmpsl pop cmp (bad) adc (bad) mov subl or cmp push fs ds push outsb dec cmp add jns out push push adc push js adc inc in dec fistpl push adc ss fiadd shrb cmp jnp mov pop call pop fist sahf ss cmp lahf or aaa fildl cmp pop and dec or fdiv adc or xchg mov mov mov sti mov dec push lods push shlb lahf out orb out inc mov or jbe xor push pop sub bound dec add and nop push shr sbbb jae inc pop jnp or imul test or adc ss fstps jne push ja mov sahf imul jl cmp xor scas js scas add adc and cmpsb xchg idivb pop cmpb in inc je jmp pop push xchg (bad) scas push mov mov ss push add mov mov decl sub add sldt fisubrl jl push test imul mov adc push pop sub xor (bad) mov jg mov inc add or jmp sbb movl mov mov dec lea xor jl pop jbe into push popa (bad) or pop scas aaa sub dec add jbe dec nop nop or adc and test bound mov pop femms out adc pushf jae dec arpl ljmp leave repz jp adc push aam and dec sbb jbe inc (bad) sub xchg adc adc out adc je and xor add xchg or test sbb dec scas sbb jmp adc inc add and imul test pusha cs test mov inc pop dec insl gs lcall jl pop sub outsl and cld popa cmp add or dec cmp jno int3 xchg jmp mov or pop inc or ficomp (bad) dec ljmp or js outsb addr16 dec and in pop and and add sub test adc inc dec rorl pop push push push gs nop pop jo sub lea movsb sub push push cmp push in mov inc dec out sub xor addb cmp pop imul cs aas or dec mov pop mov xchg jle push dec aaa test pop sti xor cwtl movsb push lret cmp cvtpi2ps test mov lcall test pop adc or mov inc loopne cmpsl ds and xchg call push call xor scas add jle pop dec xchg into jne inc fwait mov inc push test movsl das or adc inc inc pop add test cmp or inc rol dec pop nop shrb lods fiadd push adc ja lahf mov pushf js xchg sub mov push inc push cld out cltd lock lahf cmp rolb addr16 pop push jl jnp sub inc push sbb push cmp push js push mov lods out cmp mov pop or dec sub ficomp lods pop insb push xchg or nop insb mov push xor add or (bad) jmp adc xor orb addr16 loopne or sbb push add cmp add or dec insl js push xchg stos sbb jmp (bad) outsl pop sub mov scas fcompl scas in push push adc push and cmp push sbb pusha push out push or push inc or and adc mov pushl mov std push (bad) push pop incb xor pop roll pop icebp sahf xchg loop inc pop pop sbb jbe aam add data16 out popa cltd sub adc dec push xor jb jmp bound shlb subl mov test adc push jbe rorb mov ja (bad) sub cmp insb sub (bad) shrb jae jne test pop sbb add sub test pop aam and xor inc pop and xchg adcl mov and sbb mov in mov aad stos and leave push daa sub xchg pop sub or enter nop add inc xchg subl xor movq rclb into insb cltd inc or ja cmp arpl out sub push inc adc test push add cmp push enter mov mov push roll test xlat or cmovo pop js xchg decl adc push inc mov (bad) es cmp mov movsb (bad) mov lahf rcrb adc loope mov and (bad) popl sub lds inc icebp nop or mov mov pop add dec movsb sbb mov adc in aaa pop and js jne push and lods lock adc push inc (bad) mov mov or iret loope inc push sbb aad adc xchg or adc add ljmp dec or dec popa aad popf pop stc jns xor (bad) add adc insl pop jne adc mov xchg sbb mov sbb (bad) add sbb pop or fs enter and xchg or and inc movsb pusha mov orl sub cmpsb xchg stos in sub sub cmpsb xchg mov das add xor test xor jg fcmovb or mov outsl hlt ss mov movsb pop add jae adc lret add push insb add mov or push scas je fistl jl popa stos add and sub in or xchg movups or adc dec scas xchg adc push adc adcb std aad add push sbb push inc leave push xor and mov and add adc add add cs nop fwait sub cs add push inc cmpsb xchg xor xor sarb nop sub out cmpl lock ljmp movb add adc loope mulb push jo adc adc xchg and pop adc arpl cmpsl jno imul or test int3 add add pop ja lret or nop (bad) and add cmp push or hlt inc sbb dec pusha mov push pop clc and dec (bad) dec dec (bad) dec loopne inc adc cmp cmp push addr16 push sahf aas add in push add mov adc outsl sub ds adc rolb cmp rorb mov or imul scas lods or push push inc add add mov stos and adc cmp adc cld aaa adc mov inc in add and cmp cmp (bad) imul cli adc adc xchg adc xor or pushf (bad) jmp into outsb bound movsb or pop cmp cmp inc sahf sbb xchg (bad) fnstenv push test sbb sbb or add inc cs sti push adc push int3 lea pusha xor or xchg push int and pop inc inc add or and adc sub sub and es sub push xor and push or sub jo pop lds call nop mov xchg and or rorb xorb mov mov enter cwtl int pusha pushf inc in nop inc fildl add add dec adc push xchg xor pop (bad) lahf pop xor ret lret push mov xor enter inc imul test cld movl dec (bad) out sbb pop mov test push mov xchg xor pop fisttpll and cwtl pop lahf adc in popf insl andl ss mov in adc inc rorb sbb movl out test or push mov mov addb and rcll jnp xor sub inc test test test mov mov je sub or sub pusha pusha fnstenv push cmp fisttpll inc inc jmp sbb imul inc fistl adc xor fcomps xor xchg ret and xchg inc pop (bad) fistp out out test push push push fcmovnbe in push (bad) shll sub loope mov jmp or aam incl push repz pushf aam mov outsl cmp cmp loope das add push movsb movsb add pushf sub mov lods mov popf pusha mov cmp (bad) mov sub dec xchg aam dec mov jo clc inc sbb add in cmp inc add mov fild dec jecxz (bad) je imulb cmp jmp mov add or push mov cs ljmp into ds aas das mov test mov lods and pop sub rcrb push lea lea pop add mov clc dec push jmp adcb sub sub ret push nop xchg sbb inc je cs add push lea jo cmpb mov mov and (bad) dec add enter cli gs add cmp cwtl cld cld mov mov mov pop sub jno dec movl lea mov add add xor add pop daa sbb (bad) stos aam sbb rorb mov inc jbe leave je adc add add xchg jo jb xchg sbb popf and (bad) in pusha or add mov sbb xchg daa icebp jecxz add and test test add dec push sbb jo adc iret cmp jne pcmpeqb jno inc push cmp or jne or add and test and rclb rol ror push inc outsl (bad) xor cmp test jecxz rcrb and inc enter mov xor lods ja or addb pop pop shlb sub xchg add rcll fdivrs pushf outsl mov js inc add es inc daa insb adc sub clc sub scas dec (bad) outsb pop fsubrl stos adc movsb (bad) mov mov or movb pop pop pop and nop addl shlb mov fsubrs out inc and xchg dec sub jo xlat shrl adc (bad) cmpsl sbb xchg lods in push sbb cmp mov adc and in xor or xor xor mov mov mov sub jno mov fdivs enter pop inc js addl jmp dec cwtl add enter in nop inc dec loopne add or sbb or dec push and cmp enter xchg cmpsl je mov cmp inc push cmp lds rclb testb js pop and add mov xor pop pop scas jo add jo mov add and sbb sub jae mov in inc mov aas dec lods cmp mov sub dec mov out lret loopne add adc mov movl xchg xor sbb subl nop ret add fnstenv mov dec jnp add inc mov mov adcb inc les cmp fldenv mul push lock data16 adc cmpsl xchg sbb (bad) push inc and jl cmp push movb call outsb inc xchg sub push movsb mov jne add mov je xor fisttpl fldpi xchg xor (bad) notb push dec sbbl outsl add es add lods mov adcl xchg push popa je stc or fmull dec (bad) loopne loop insl cmpsb pop dec pop fsubl testl cmpsl lods sbb xchg jecxz ja testb and xchg ljmp dec stos xor lods shrb rclb inc dec jbe add pop fsubrl rcr fistl rolb push and mov stos or inc xor stos push adc jo mov pop fmull fbstp dec cmpsb add cmp rolb fcoml testl jnp outsl add or or (bad) cmp pop mov adc jb enter movsb aam test hlt push jo push dec add inc cmp (bad) movl loopne jbe add orl loope loope popf push push sbb mov mov adc adc push pop mov in push pop jo inc lods lea add or mov or mov adc sub dec add aas dec sbbl inc out add cmove aas push inc adc cltd pop or push data16 and sub divl cmp pop movb jns jp ljmp xor jnp cmc jecxz mov es movsl inc inc dec lahf mov and pop or xchg push adc adc jmp ss push mov mov mov push pop jnp sbb dec scas dec pusha add jl push ret cmpl loopne dec cmp ret push adc cmp mov xchg std fcmovnbe into and orl fbld (bad) push inc push test add xchg ret divl gs or jns jne pop or pop outsl mov mov pop sahf andl je inc adc xchg (bad) (bad) mov mov sub jle and mov outsl push mov inc pop jecxz arpl adc mov mov scas inc hlt xor sub je sub inc add jnp add push insb (bad) test and dec sbb mov or les or cmpsl mov sbb call fs pop sub (bad) push roll pop and daa mov push mov test cmp or je hlt push repnz out jecxz cmp mov dec je add and xchg scas lock pop mov dec push mov jl test ret lods sub add imul (bad) mov sub notl adc add fldl mov test mov mov fisubrl pop push call cli ss data16 pop push and push imul mov xchg push in shrl mov cmp push (bad) imul mov cmp je or push popf or jnp pop sub shll stos push lret add cmp inc sbb loope dec inc xchg imul dec out or hlt or bound dec jmp add mov loope cmp or pop xchg mov xor cltd or xlat dec jb cmp cmp mov and jns mov or cmp add mov fwait push xorb ret jmp xor push mov jne ds shlb std or lds rolb gs ja push gs and rolb and inc push cli or ret inc push cs mov aad dec jg mov add dec pusha add push jb outsb add pop add jge pop push ret inc push jge addl outsb inc xor sub pop pop cwtl enter mov jne cmpsb jle in push cwtl adc or or js dec fwait cld adc (bad) mov (bad) dec push and mov cwtl clc add and jnp loopne call je ds popf ja dec data16 xchg push xor xor (bad) popw mov enter xchg and xchg lock aaa dec inc mov test mov pop cmp or pop test or jne int3 (bad) rolb pop mov out sbb mov mov repnz jmp sbb sub fildl popa add and adc shl flds adc pop hlt or xor sbb sbb xchg sbb jmp in in pop leave cmp in or bound jo mov sbb or pop out test sar sub and adc xor sub and inc or mov xlat in outsb dec push jae and push ret cmp shll mov (bad) mov mov inc xor (bad) sub cmp adc mov pushf push lcall fs mov dec sub insb lods sbb ret xor xchg sub add inc outsb divl xor xchg xchg lret mov and cs adc push mov push mov xor dec (bad) xchg cs mov js jo lods fcomps adcl sbb outsl sbb push jnp movsb mov push add test mov dec pop mov add adc lock mov in sbb faddl jns jmp das push imul or loopne mov push mov lods das push roll scas xor jg jge sbb je sbb push jbe sbb gs push fdivr push cmp rol pop dec ss enter jmp shr pop lods dec clts sub mov das (bad) adc orl push adcl js cmp or add int3 fs clc out inc imul pop adc movb out insb add add inc popf adc dec xchg xchg lar pop cmp daa aaa jne cmp fldt cli mov mov jns push mov mov pop pop mov imul or aaa test lock pop mov mov sbb out and decl in in add or inc sbb cmp push shlb jg aad pop add xor pop mov xor cmp hlt pop adc cmpl jbe push jg jge and sub xlat outsb js mov sub jle add mov or imul xchg cld push fldl2t (bad) (bad) cmp push sub insl lcall add imul dec inc aaa fsubp (bad) movsl push andl pop test xor les in test mov jp mov (bad) cmpsl jno adc mov inc or push pushf inc xor push dec lcall lock and movl mov bound push push push or seta adc sub iret sbb outsb call lods mov je clc (bad) popf inc adc xor rclb xchg outsl mov ret xor in and hlt and jno sub push jo test out mov fs cmp fs xchg cmpsl or ret (bad) leave sub jle sub dec push pop mov out mov popa jge orb add push jne push js dec jno sub sarb or sub add call sub jne pusha rclb add vcvttps2dq sahf add sbb iret xchg mov or adc sub call xor pop mov jnp enter xchg clc and daa or (bad) (bad) jo push push sbb nop imul sub sub daa cs loope xchg mov popa inc jmp push adc les movsl les decb adc lahf inc imul mov popa data16 rolb sahf insl cmp test push pushf push movb jno test mov push inc sub jne lret cmp mov (bad) fwait cmp adc cmp test mov pop push jmp je mov cs jge inc adc mov cmp dec push insl ret inc movsl xchg (bad) xchg cli imul cmpl shrb sub test lods loopne mov loop fldl push cltd and adc mov scas push add pop mov lock ret mov xchg pop enter orl mov outsl cmpsl es (bad) int hlt mov lahf jne xchg or dec ss cmp ja push add in cmc dec cld or loop int setne xchg add inc loope lahf movsl leave cmp testl sub or inc sub jl dec addl mov sub dec inc popf mulb ret test icebp insb jge shll sbb push lea cmp popf jbe lds adc ret in mov xchg mov ret or pop mov mov lea sub repnz inc cmpsb mov push pop shrb test call iret add and adc stos mov and fdivrs dec fidivrl push push push sub lret (bad) mov sub in gs lods add adc or movsb dec fmuls (bad) or test dec sbb pop add jle adc pushf push sbb ljmp xchg inc sbb add push push sbb movsl pop push lock out mov xchg shlb mov add cmp call add jecxz aad dec add ss sub adcl adc add int js je pusha pop sub cmpl cwtl int3 je gs and sbb pop push add push pusha movsl push jae xchg adc icebp loop push (bad) fldl aam adcb clc xor ret mov xchg bound daa xchg add or cmpsl js gs adc cmpsl ret cmp inc js les push test xor in sbb sti and ret xor sbb add jle lods push xlat (bad) and pop mov push js nop mov dec mov andl sub pop push cwtl xchg lret add in cmp jo arpl push add cmpsl int3 dec int3 cmp scas scas enter cmp jbe inc scas xor fdivrp push movsl fcoml out mov fmull sub push xor lock ljmp push gs sub sub dec mov or lods aaa cmpsl sbb xor int addr16 xor dec lods clc orl pop (bad) loopne adc xor push lock mov stos repz xor enter and inc pop cmp movsb scas insb pusha mov pop xor gs inc add orb or sarl adc sbb arpl jmp mov adcl jg test inc jne movb pop push mov cmpsb shll rorb adc mov and (bad) je,pt int push inc push pop insb adc inc outsb inc jge inc pusha push pop jg test push push call or jmp lea in fidivl pop fwait pop pop jmp je dec fs push das jne add stc xor dec loope sbb stos aad or mov push cmp lcall inc cmp (bad) mov xchg push or xor test inc or pop xorb scas outsl test jns orl mov das inc dec bound or jle jg je int3 sti (bad) dec mov ret add (bad) add test and xor cmp scas cmpsb (bad) (bad) inc push and lock hlt loop adc (bad) mov lds fisttpll (bad) cmp fidivrl jecxz push push xchg ret (bad) adc push push jge sbb mov inc mov gs mov mov jg aam popl jmp mov addl push cld pop iret inc push push push dec dec xlat jae xor pop dec mov inc and or mov pop inc mov outsl popa movb add mov jne pop sbb jo test sti xor lret mov mov and movsb out sub mov push idiv and or (bad) (bad) std mov sarl int3 mov or sbb pop jmp jnp xchg repnz xor or out je push stos imul aad ja push ss push clc and mov add test out add xlat dec jg push pop in pop (bad) mov inc adc scas lret or cltd or ss (bad) jmp adc ret test xchg or fild test add cmp mov mov adc movsl cmp cwtl stos divl wbinvd sbb pop mov adc mov inc stos (bad) mov inc or or lret test jo arpl sbb mov addr16 add xor pop orl ret pop loope adc mov mov dec add lds cmc inc dec dec (bad) xor incl or dec adc ret xchg (bad) movsb jno enter (bad) lea outsl mov add jg and inc adc inc jns hlt js hlt xor add les mov xor int cmp faddl xlat cwtl nop cli fdivrs sub and cmp imul push sub xchg lods gs fldl inc or push dec jne scas les cwtl fstpl push and mov cmp sub aas and cmp insl test dec pushf in daa nop repnz movsl push fsts pop xor jns dec dec inc fnstsw add add inc (bad) jb add xchg pop add test in xor fs jp or mov lock or sub xchg pop ret xor xchg jmp fldl rcrb rorb fdivl push add fs cmp movl xchg into xchg sub lods outsb inc xchg shr pop lds out inc jno xchg mov jmp push orl jmp or xor add (bad) (bad) push enter cmpsb sbbb out inc inc push inc sbb jns sbb xchg xlat arpl test mov loope cmp mov add and les adc les shr pop faddl sub sbb mov xor sub loopne loop add fs inc cmp insl cmp xlat hlt mov sub paddd mov push dec dec adc imul test or xor or mov cmovbe daa or add and or jge cwtl cmp scas pop les add dec sar cmp jge mov add adc jp (bad) fwait adc fmull (bad) fnstenv nop js (bad) sub shl xor cmp pop rcrl push or pcmpeqw push ret inc loope jb or push les sbb (bad) mov add lods repz inc faddl decl cmp mov cmp cmpsb and push xchg push cs jmp sbb fstps fldt cs sti push dec popa pusha sub or imul scas lret iret loopne popa inc movsb pop bound xchg cmp xor push insl jle sahf xchg out mov pusha stos sub inc sub jns fmuls (bad) stc jmp outsl dec and mov and pop push lahf xorl pop dec cmpsb lahf push jge les sbb add add hlt mov je (bad) mov jecxz ja lock push jle adc mov xchg inc ret iret dec or clc xor and stc adc fmuls (bad) sub daa or mov test les cmpl xchg or nop cwtl or cwtl xor sbb lock inc pushf mov inc (bad) pop jno ret in xor pop and ds inc decl add movsl cs or xchg mov pusha das push xor push enter or cmp mov sbb aaa pop and sub sub cmp cmp fmuls add lea xchg loop aas mov aad daa iret stc adc xchg or loopne and push and addr16 loopne add mov dec punpckhbw jl dec mov lods sar dec data16 daa fsub jg add (bad) sar loopne xchg adc jns ja jle popl cltd cmp out push pop gs sahf out sahf jne sbb add jns add movsb cs aaa fs (bad) in adc inc push pop xchg mov and les push sub inc daa das mov sub push push imul adc fldt inc add cmp inc inc or int3 adc or mov push insb add sub mov decb adc pop and and movsb xchg or push sbb je xor les mov aam addr16 loopne or sub or adc mov aaa icebp add xor pushf add fcmovnb xchg mov cmp sub add xchg mov loop xlat adc shrl xchg cmpsl ret xchg je stos lock les rclb push jns scas cmp les jecxz lock jl outsb xchg add add (bad) mov cmp inc dec or push dec (bad) or pop adc push clc add movb pop inc hlt xchg pop mov push sub inc dec cmp arpl aaa test data16 sub aaa aas sbb adc adc push mov or arpl jne or dec inc in and jle dec mov mov inc lock pop fs mov mov mov or mov xchg (bad) sub or clc or call or mov pushl dec inc sub sub and sub push pop sbb cmp test xor and dec dec xor (bad) ja sub ret movb mov sbb add in adc notl sbb xcrypt-ctr cmpsl sbb mov add enter (bad) es adc inc or je pop nop test push repnz mov arpl cs adc das sarl mov push mov mov sub sub leave or repz (bad) stc inc les test dec xor dec jne jo inc call mov xchg pop xor xchg das or adc mov or adc ret jmp pop push pop je sbb push aaa pop outsb pop add imul and pusha ljmp cmpsb cmp and push out shrl movsb outsl jge cmp rorb outsl adc loopne vmwrite test xor sbb and add or dec push push xor jecxz pop fwait rcrb repz hlt xchg mov xchg inc add rcr jp lock fisub ficom add repz or mov es and sbb jb in push or xchg pop subl xchg and jb mov push out test add mov xor mov push pop push dec dec dec inc dec push add cmpb xor int3 jg lods insl mov add xor aaa aaa (bad) jmp dec mov push add inc push (bad) test mov mov adc and pop lret push out sub xor adc pop mov cmp jne sub push addr16 ss mov insl imul jmp lcall dec leave rcll mov fnstsw lea mov pop add ret dec pop inc icebp lahf lock mov inc les sbb ljmp cmp aam xor or (bad) push sbb (bad) leave clc mov (bad) xchg mov lock adc cs clc jnp ljmp cmp pop jbe shll (bad) xor cmc or inc pop or (bad) pop dec adc pop mov icebp shlb out and or enter jb fbld daa rolb (bad) sbb jne js dec mov or clc test adc fcoml movsb cmp int cmp pop or out and subl jae sahf inc pop pop loopne or sbb adc aaa cmp dec or mov sub aaa add xorl pop add ret sbb aaa add inc negb lar xor cs ja jbe sarb adc (bad) clts popa repz pop add add sub insb ss jb outsb adc call mov (bad) cmpsb push or inc lds fisub and cmp inc push enter es adc jp push push cmp dec sti push mov push jo fstpt xchg lock shll neg cmp pop and rorl and inc incl inc fdivrs inc push adc inc ret jb inc cmp call jl add cmp orb outsl cmp cmp test es bswap jo pushf ds fstps cwtl inc mov pushf in or jns xor sbb nop xchg sbb sbb inc push xor adc ja (bad) js xchg fiadd enter stos xchg fs inc mov and add cmp cmp dec mov enter in cmp fsubr pop sub push xor pop lock mov push sbb sbb xchg xchg xchg lock adc push xor (bad) ss lret test push pop add push inc outsl rcrb fist in cs push sbb nop movl pusha push jno adc mov mov or dec mov int3 sub sbb mov mov inc lock fcoml push pop leave mov inc insb and addl ret add push insl bound xchg and adc sbb or imul or jne sbb insl popa in cmp mov ja adc cwtl xor addb pop jbe add adc or stc sbb in push fs push dec or and xchg out (bad) pusha sbb ja mov push xor inc push ss and mov repz inc and add inc mov or outsb and pop or mov pop xchg sub add into fwait cmp or divl movsl add sbb mov cmpl pop inc sbb or and jge adc dec movl xor call loopne adc and inc sbb push stc inc or push or lea cmpsb fnstcw mov adc adc dec decl or pop hlt loopne jbe and cld push lea subl dec push insb or test lret add aas lods sbb sub dec pop pop push push xchg (bad) testl pop push add add inc mov fmull add add jno stos or pop add and inc adc and jnp andps lds movb push scas add or pop popf adc pop xchg push adcb loopne push repz adc jp clc cmp rdmsr rcll dec (bad) loop insl inc lret lea sbb and cmpsl dec dec dec mov das or inc pop arpl mov or sub push pop adc add ret and and mov mov leave scas roll and iret out sbb pop notl xchg pusha stos neg pop (bad) (bad) mov push cmp mov js gs jne enter add fndisi(8087 xor xor outsb sbb paddusb lds lods add nop xchg adc mov or sub bound inc adc cmc cwtl or or push test add js sbb fadds addr16 or inc in ret add push or or and push in mov (bad) fist push rolb mov lods lods scas out and and imul dec and push pusha adc addr16 and push push add or add lret pop xchg mov (bad) lds or sub dec movsb movhps loopne xchg loope les sbb out jbe clc and add mov xor mov adc jns pop bound pop add cmpb lret movb mov pop inc inc mov or inc (bad) jbe divps fist mov add push add ljmp sbb add add add or ds mov mov mov mov xchg mov mov mov mov mov push lcall in (bad) jmp ljmp jmp jmp jmp loope jmp jmp jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) fisubl fdivr xlat call call call call call call call dec add jg or dec dec dec (bad) sbb mov jbe sbb push push in or sahf lock pop push mov xchg adc out cmp push push lods in pushf mov push jns (bad) int3 aam push add fdivrl sti cmp push xchg push sub push dec fidivr out pusha ss mov xor ss in jnp les push xorl push sarb push movsb xchg fidivr dec sbb inc fs sub je jge call or call in jns add (bad) loopne pusha data16 data16 mov sahf int3 test mov cs popa outsb bound nop fdivl sbb ds gs test (bad) jb popa shrb leave nop pop fiaddl fwait (bad) aad jecxz or or adc fstpl mov sbb roll and inc sahf dec test pop bnd add dec int3 add inc inc sbb js clc ja mov push add aas incl mov mov pop nop add ret pop and jbe lret or imul push ret or inc je pop dec push movsb add and clc dec js jg jg,pn push xchg push jne pop in jg sub pop jo xor pop and addr16 fs add mov fwait clc sub imul push adc push push or xor or push inc cmp cmovle jno dec jb push dec popa je andl push insl fdivs les adc hlt jg,pn ss sub hlt jo xchg mov (bad) adc outsl stos jbe fldcw jge sbb bound (bad) push in or dec adc adc pushf adc xor rolb (bad) xchg test pop jmp jae in xchg fs or xchg in and or dec jmp es lods push or push loopne jle mov in cmp rorb push imul dec jnp dec nop daa or mov fnsave imul and pop inc jno std sbb fmuls mov outsb mov add xor xor (bad) cli (bad) xorb cmpsb jo adc add xchg mov mov mov ret xor adc and xor add and lldt add push clc inc pop adc adc es push ss jne pop add pop and adc das dec mov xchg add add add cmp push add aaa mov mov lock mov test mov nopl sbb sarb es mov mov mov add push mov sub xor cmp sbb repnz incl in decl ret inc inc inc fild std (bad) mov push ret sbb pusha sbb stc ret mov mov out cmp mov jl scas mov lahf out sahf jo mov clc sbb lahf out xor enter or mov push test dec les push push (bad) mov (bad) int3 in and jbe mov cmp je push and jle push xor mov mov sahf dec pop int3 out lret push jo sbb lret push jnp iret repz les idivb mov test adc push jge repz mov test mov frstor es add movsb stos (bad) xor in jnp jnp data16 ret push push mov loopne (bad) clc rcrb pop ds imul push cwtl or sub add sarb cmp (bad) mov (bad) mov es ds ss shll aad mov inc out fxch into inc push xorl sub push jl fidiv or adc mov loopne or jg pusha pusha push enter mov and xor icebp movl sub aas pushf xor test pop push jo inc dec roll adcb add push repnz in inc idiv repnz adc adc fsubrl push jne mov lahf aas pop xchg mov xchg bound jno xlat clc ss sub jb cmp aaa repnz sbb jmp mov (bad) mov fildl sbb inc in add push inc jmp mov jnp cmp mov add xor lods sub inc mov add and leave xorb (bad) sub jo ret jl adcl aaa popa inc xor pushf and add mov add or or and xor adc push and and jns hlt fiaddl jo mov cld cmpsb push cmp adc jns jnp push mov xchg cltd cmpsb lahf out sahf mov int out cmp loop in inc sbb and xchg push push push add aad mov lods sti xchg jecxz fdivrp push std push mov cs insb mov push jo je js sub add lock inc out push adc or add inc cmp lahf pusha push scas push mulb cmp cmp mov js xchg adcb mulb jo cmpsb paddsw (bad) out add xor das or aad mov and jecxz pop (bad) pushf (bad) outsl dec sub cld mov nop jmp jmp lcall or lock lods dec push push and mov mov sbb aaa adc add int3 add push sbb sti mov stc add inc movl mov pop sahf or icebp hlt sbb inc adc jne or add std mov pop mov aaa mull rcrl fisttpll ds and roll daa int3 cmp icebp pop lock andl xchg sub or dec jmp mov sbb ljmp xchg leave nop cmpsl jb mov addl ja pop xor inc sarb lods sbb fmulp int3 push xchg sbb or push dec dec push pop dec push leave push inc push inc daa push push cs jo daa or xchg or adc popa clts (bad) and mov xchg dec and insl xchg daa dec push jo imul mov mov popa push xchg or ffree add mov stos add inc lods das jo pop repz xchg xor subl jo mov fsubrs and xchg and nop push inc lret andl jg nop imul nop lea mulb adc adc in dec jle addl sub ficom adc xchg push adc out into push mov sub jp (bad) bound je out je mov mov scas dec inc (bad) cs out pop ds cmp xchg inc and or add fimul mov jmp adc test or push inc (bad) mov sub push or test sub (bad) push movsb fsubr or dec and fs lock or mov jne sub cwtl pop ja (bad) xchg jbe adc and or popf add push adcl add sbb and and dec arpl retw sub push or loopne sar dec jne ja mov jmp add sarb cmpsl add and popa pop and mov nop push or pop add lods sbb xor jne cli test mov or adc adc xor rcll sbb and xor and sub sub pop and pop scas pusha inc inc jl cmp sub sub add mov mov loope addb mov fidivrl test add aam mov dec push inc sub out sbb add xor sub dec je ja and cwtl xor push clc (bad) mov in ljmp cwtl adc jmp mov clc inc pop and adc mov xchg mov (bad) adc andl add les or pop mov xchg aas mov add (bad) rcl cmpsb mov lea mov cmp hlt (bad) jmp or push fstl dec imul inc adc or push lret and pop or lods lretw cmp test or xor movsb and cmp inc or movsl jl mov mov push xor sbb pushf xchg and rcll call and iret push sub push inc push push jp xorl sahf lretw sbb cmp in (bad) push daa add jmp in jle jne jae mov inc loopne mov mov shlb cmpsl push sbb leave inc pop adc cwtl fs or aaa sbb push mov mov ficoml push insb insb push into jnp sarb sbb lock sahf inc inc (bad) lds push mov add popa in sub add enter iret imul sbb orb mov or cld insb dec inc add or adc insl and mov aam adc xchg outsl inc add or adc mov and rcrb mul rol (bad) ficom or pop push mov ljmp xchg pop cmpsl aam xchg cmp std inc jecxz xlat fisttpl sbb push test jge mov add push rcr pop lsl add jb mov lcall movb jmp cmp jne cld adcl and adc movsl (bad) ficoml cmpsl jmp ljmp sti mov or adc cmp lcall xchg lahf sub inc add (bad) imull add inc dec mov nop fdivrl cmp inc test push xchg lock add and in sub pop (bad) test popa lea or dec loope les inc sti inc inc jmp sti or fsubrl inc jae shll xor and outsl ret mov scas fprem inc cmp les sarb std cmc es sub add pop das in and mov cmp je mov cmp movsl lds adc in lock loopne in lea (bad) xlat js ret jne jge pop lock or ss adc cmpl push fadds add nop iret xor cmp adc outsl dec scas mov mov dec aaa sub rcll mov pop sti push cmpb xor pop dec jp mulb push cmpsb jno (bad) push cmp xchg pop shll lahf xor sbb inc inc jo mov sub and adcb push imul fmuls dec in mov test sub sbb jno pop rol popa cmp push jno sti popa lock mov sbb mov (bad) mov ja je add es loope push (bad) cmp pop (bad) sti lcall fadds inc push cmp shlb inc inc lods add cmp fcmovnbe add xor jle jo in sbb cmp mov inc or data16 push cmpsb pop lods adc push push inc sbb lock shrb pop inc shlb test cmp in and push ret xchg add jmp or cltd cmp push lret lcallw mov fadds inc cmp jge xchg call xchg sbb cmp leave sub lods mov inc cli jbe adc mov cmp idivl sub cmp lods mov in or (bad) imul test jb inc xor sbb push xchg push xchg imul mov popa aaa adc jo fistpll add cmpb js push adc pop adc dec jne xchg lcall or je out ds jne test or mov (bad) rclb and cli popa adc repz lahf mov clc ret shrb out dec test (bad) dec jge mov push fiaddl sub add or imul lret jo cmpsl sbbl sbb out mov mov lea lea add adc jmp xchg (bad) aas cwtl popf add xor sti cmp je ja mov in out cmp lock mov sub pop jb jae pushf lods or insl mov inc pop js lea shll imul scas lds sbb jo cs adc in sbb mov mov movups inc loopne push or mov push push testb jecxz (bad) push ljmp xchg cmp mov int3 ret inc jmp mov xchg hlt ret loope,pt jmp pop loop movswl in aad mov pushf sub test push (bad) orl push cmp (bad) out pop outsb xor (bad) movsb cltd pop push push (bad) negl pop (bad) ficom pop or inc xchg fdivs mov jmp lods cmp and ret dec cld jbe dec out xor add mov fwait or xlat or pop loopne stos xor xor ret fdivrl das movsl and call push inc ja addl scas jns pop ja or aam adc aaa or inc push ja insb imul out push and sahf mov lea js or stc sbb scas mov mov push sbb (bad) cmp fistpl es (bad) sahf add stc fstpl fwait jmp sub add out and add push movsb jle (bad) ss sub imul mov imul pushf add jmp pop dec adc or cmp in jmp sub mov push adc sub lret jo dec shlb addb lods loopne loopne dec pop push push xor push inc dec rcl out sbb fiaddl inc stos mov movsb ret repz mov push add inc repz aam xor mov lock and jmp (bad) xchg jecxz sbb add xor jo mov dec jo mov pop and inc inc insb popf jne sub mov cmpsb lds pop mov jecxz lret inc test sub xchg loopne and mov es in cltd nop mov add in mov (bad) out mov sbb dec sub add mov add pop jno je popa push dec push sbb add pop and dec push push stc mov aas push adc mov (bad) in add adc rol inc es int3 dec movl push jne mov ret add jne jecxz and (bad) aas push cwtl push mov clc mov (bad) ds adc ret inc incb or mov add xor push fwait inc push cmp nop fbld inc xor adc and cltd xor cwtl xor and xor ret jo sbb ds inc insb cmc sub lret adc sub sub insb (bad) or cli jmp and or loop sub and push ljmp xchg or mov stc (bad) arpl cs push pop outsl je test pop out add jne and leave add mov push or pop leave jmp icebp or or and add out movl pop push movnti or add jne mov sub inc sub lahf pop fs push adc rclb adc adc add jb and dec jmp mov dec cli cmp rcr (bad) push and dec or cmc adc (bad) arpl push mov inc jb sub jge cs imul mov addb dec jne je ret jecxz fwait popl repz dec pop add imul lds imul add negl and mov add es adc enter jmp sahf aam mov ret dec lods sbb push cmp insb clc add nop pop pop add mov xor mov mov push std xchg lea mov (bad) push xor jnp je inc (bad) aad sbb (bad) adcl add insb or add adc xchg push xchg fldl aas jnp push push mov nop das jmp add out sub call insb test mov andl adc add nop lret ja sub rcrb rol stos mov imul xchg pop or or fwait sub mov scas pop loopne out popf dec (bad) enter sub addl lahf pop jge xchg jnp add inc push or and pop lea pop out mov pushf jae or pop adc jge pop lock pop add test test adcb add mov inc mov add or sbb sbb clc or pop (bad) jge mov dec adc cmpsb mull dec push orb push outsb sbb jg pop pop out shlb mov imul and jl and push adc lcall mov cmp adc test add rcll add jmp or dec or or adc cltd cltd (bad) or cmp push pop xchg lret adc pop je sti xchg or or cmp cmp or sbb insl sbb dec or test dec sbb popf mov pop sbb faddl lahf in in push or sbb xchg stc dec jbe sub lret test pop clc add fs push jl lods fisttp ljmp add sti cltd push xor push in dec insl (bad) mov cmpb aad jecxz and ret xor adcl stos ret nop in push push add sub lds in sub sbb cld adc adc push icebp or je push sbb sbb cmp les xor mov add and and jl sbbb outsl push sbb add jecxz cmp mov add mov add pushf inc mov stos cmpsb cmp lock mov pop cwtl and test mov vmaskmovdqu loope dec fldt aas jg (bad) xchg add rclb inc rorb loope adc (bad) xor or and xchg adc sbb xchg jne push sub lds push js add rcll cmp push popa xchg push jno sub xor out mov addr16 or in fimull loope inc mov push dec enter or mov mov daa jae mov outsb push rolb add popa push jmp add dec je sbb (bad) cmpsl std dec les js inc push add pop cmp push lcall push pop add jp jmp rorb or add pop test lods pop aaa loope psubb inc push das les aas sub dec sbb push adc sar cmp cld add adc aam dec int3 movsl push sbb pushf (bad) or push inc insb mov flds adc je push fs imul das add push negl jae je or (bad) xor and arpl mov or dec push pop mov xchg and mov cmp lock mov mov clc movmskps in xchg sbbb mov pushl aam or adc add mov xor mov push xchg cli or and xor sbb fwait lock andl cmc mov push subl push jge ds fldcw pusha push cmp (bad) add inc or (bad) repnz mov sarl out mov dec or pop into pop or inc add int3 ds pop jbe enter lret test dec sbb (bad) in divl xchg cld ss add xchg clc or mov inc das dec dec push (bad) xor sub aaa xlat adc addr16 mov fcoml (bad) into xchg repnz js or in pop or and nop or push pop cmpsl push lret rorb and jae clc cmp jne push pop mov out cmp clc jne sub xchg add loopne and pop inc loop test pop aas cmp nop jno push cmp sbb push fbstp or insb cmpl rcr adc (bad) push je pushf or insl ss dec mov std pop inc outsb adc cmp jne mov pop and pop add inc dec push push dec fist sub (bad) dec loope (bad) push xchg cs or mov mov (bad) insb je or jne (bad) je jb inc jbe jnp jne push shr sub push or outsl xchg sub bound ficompl inc inc mov or add add repnz add mov or cmpb and or push add mov popa mov cmp dec add nop sete sub xor push dec adc push mov dec mov push adc adc test sub jns dec push dec mov dec jo mov out imul push cmp incb or and (bad) xchg jg sbb addb jmp shlb xor push pop push sbb ret insl inc dec das pop dec xor and das les in loop inc loopne mov roll push or inc inc lret fistpl mov dec add push xchg (bad) or xchg push inc test xchg int dec xchg insb in push inc lods imul cwtl mov pop popf mov push and ljmp sbb and in ds test fcoms jmp xor (bad) cld mov in cmp cli clc out fidiv dec and mov push bound sti lds mov inc (bad) cli cmp jo xchg cmpb inc jg pusha push (bad) sti sub sub imul pop or push or add mov sarb test imul or cmpsb imull lcall test add xchg subl pop mov stos cmp jle lods call or add add pushf push adc cli imul push in pop pop ljmp adc and xor cmp push pop sub inc xchg push mov jne shlb add inc pop mov test mov test aam pop mov xchg push in (bad) (bad) mov hlt hlt pop add push mov out add pop iret loopne lret sub hlt je adc xor fiadd jno inc mov or add arpl repnz mov fdivr push add push xchg fsubs add push pop inc dec sub dec and cmp pop ret insb and jne lcall rcll sbb xchg mov imul and sbb dec mov sub imul ret pusha (bad) mov rolb dec cmp mov nop ret mov cmp xor pop ja (bad) test stos je jg push mov and js mov fcoms adcb movsb roll fildl inc xor fisttpll xchg inc pusha jmp sbb test cmp sbb sbb push mov stc sbb sub push mov adc popf out ja mov nop add pop ret rolb in or push xchg add pop rcl adc adc add mov fwait add (bad) jecxz xchg add sbbl pop movsb bound es adc in xchg (bad) rcrb pop jge mov dec sub jle ss movsb adc or inc (bad) lcall inc jg insb testb je dec sahf inc inc mov mov or ja jno add out xchg lock mov ret sub jno inc sub insb jg jo and push or inc xor cli add mov adc xor test sub pop cmp movups in mov pop aaa or icebp adc xchg mov sbb pop aaa cmp je pushf int push les jp mov sbb je mov xor or or pop push add shr inc pop sbb jle imul addl jl ret jo add test mov push mov push add mov imul or adc and mov stos call cmp js inc stc fs mov push dec in lea and and lock les js ret fistpl inc outsb pop je mov movb ja imul mov push add test xor popa popf bound mov and cmpsl sub iret push add push sarb xor aas mov xor rorb cs je mov ss je and or inc loope cmp addr16 mov dec and sbb ja and and jo mov push pop or cs pop pop dec dec jb or shll cmp js enter data16 movaps lock push das nop cmp sbb sahf adc (bad) insl cli cmp inc push xlat sbb jnp rclb pusha push out sbb mov sub incl cmpsb sbb stc insb mov add push pop pushf xor mov in nop xor mov das popa mov aaa out and mov je sti mov xchg stos shll leave je push cld std xor mov push pop bound loop rclb ret pop and and rdtsc loope loop dec jp add insb xor push adc and adc jno cmp dec test push mov pop pop sbb mov cmp cmpsl cltd adc adc dec mov jnp dec mov inc dec xor fidivrl and (bad) fmull xchg dec xor daa jno pop push les xor sbb repnz push dec mov ja mov lods adc nop jle xorl inc (bad) lods dec mov (bad) std add jge push pop aas mov or add cltd and popf adc jmp dec mov push pop ja add outsb xchg or mov add pop inc (bad) sbb adcl inc cmp frstor out push sar add inc or test bound or or dec add pop enter jne test mov (bad) sbb and pop psrld mov xor dec ret or test mov and (bad) xchg lods or xchg cld add push popa inc mov les push mov sbb clc fisubr ja mov xchg fcoml mov xor xchg adc addr16 mov jp add movsb daa mov das stos add add pop roll xor adc dec mov add imul (bad) mov idivb xchg (bad) sub cltd or (bad) lods and pushl dec pushf push js add ret pop push sti loopne jle mov rcrb jne into lods inc cmp pop and iret add sbb stos jne push add repnz sbb mov cmpl jle and lock ret mov ljmp aam ja call sahf lods jne push adc adc adc mov es xchg sbb mov dec sbb xchg push pusha or xlat sub cmpb test (bad) mov shll js decl fwait rcr mov inc or loope sti and mov and adc lea fucomp mov and in adc add mov add mov lea and gs dec sub inc xor sub add and jg mov push insb push mov mov pop and fldcw and xlat shll ss jno xchg xchg xor add add dec enter add add add add or push (bad) into push ss popa int3 rol push mov pop sbb notb mov lods roll push (bad) jne add mov shrb loopne sub mov ds or ficomp lea xchg sbb cltd rol fs adc loopne mov fs jmp xchg mov outsl ret inc push push cwtl add sub or ja jl and push or leave sbb (bad) inc inc adc add xchg dec cs enter dec jp shrb add push inc add nop mov shl loopne jmp sbb sahf inc ret mov and xchg imul mov jns push (bad) xor jne push hlt add loopne (bad) sub cmp push out ss mov push faddl sub mov push (bad) aaa call inc jne idivb push addl add pusha push push cmc fs test ret fildll icebp test or inc es xorb pop mov addl push add nop sbb mov jle jne aaa and xchg jo shlb je push sub jb je sbb sbbb mov ds sahf fs loopne repnz add or push mov inc adc fidiv loope lret mov jb xchg sbb es fiaddl pop inc data16 int3 pusha mov xchg scas sbb (bad) pop cmp sbb or inc or add addr16 push fcoms in jmp push outsb je sub or inc loope xchg adc loope lahf sbb stos adc daa aas fwait js shrb xor push pop mov in hlt out ds push sub stos fistpll insb loopne sti jmp loopne call jno adc pop sub (bad) js cmp cld and dec (bad) in hlt (bad) xor xchg iret jl or mov push push mov movsl inc pop pop js or push push jle push fistp js fmull stos jne,pn pop push imul ja lds es aam mov lret and icebp (bad) jl rolb inc mov addb clc mov popa xor pushf or fs cltd push pop xor clc xor sbb xlat ss (bad) jns imul into insb rcl nop push pop dec pop sbb add arpl rclb mov les les adc pusha jo cmpsl shll lock and pop add pop push xchg inc iret adc dec inc inc out cli push fmuls pop movsb inc or dec add data16 push fadds mov cwtl loope push (bad) jae xor mov cltd addl pop xchg pop xor cltd xor mov fisttpl push outsb loopne (bad) daa lods aas ja out (bad) daa xor or cltd int3 mov xchg sbb push jne mov adc push lcall pop add aas lods mov test add adc or add xchg adc mov (bad) jbe insb xor or adc jb (bad) out jmp sub sub ret in jb or test adc inc mov add adc popl jmp orl mov mov add out mov test jmp sub adc mov push or nop xchg pop rorl outsb cmpsb adc push movsl adc fsubs pop mov inc scas scas push xor das dec mov xchg sahf ljmp xchg push test mov inc jae addr16 jmp fisub pop fimul inc add inc or mov dec inc shrb dec push inc sub dec or jne push sub dec jmp pop out scas add jmp adc mov inc cld (bad) inc adc pushf xchg insl (bad) sbb sub aas jbe sub adc inc aaa xor mov xchg jle pop mov jle add add jb adc mov push xorb and or or es movsb sub jno (bad) xchg or sbb cmp xchg mov stos sub (bad) jne in sub push dec push add jle push or jecxz jmp xchg sub popa les cmp jne add add sub sbb push pusha inc and add pop add div mov js adc and test push pusha mov stos inc loope sbb mov in das adc nop les add cmpsb mulb jge clc jbe sahf or mov (bad) mov in insl fwait jb xor push mov mov pushl mov xchg and or addr16 push sbb test iret pop cwtl mov xor pop mov adc je and adc rolb pop push and inc push sub or mov pop js add outsb hlt or dec push or jo dec xor fisubrl xchg stos and pop mov and movsb jo push cmp adc dec sub ss cmp lds push movsb aaa mov arpl jbe lret mov sub push dec jp adc add std jge jecxz rcl shl movsb adc mov xor jg jg,pn adc pop rorb das push outsb addb or data16 inc mov out sbb or fcom aad inc push dec and dec or test inc jl scas iret (bad) jno or push mov add xchg add jle or or mov mov mov cld aaa je imul xor loop inc mov test xlat dec jno jle inc addb addr16 xchg pop jbe adc sbb add aam ret (bad) aam call dec inc or jne insl mov adc inc loope push js or fwait jne test add inc movnti jge popa dec xchg xchg jno scas fs inc pop leave in dec pop lahf add dec lahf outsl and sub cli fiaddl enter fnop jne adc push iret dec sbb in fs cmpl inc icebp bound sub pop or ret pop aam in and pop push rcrb dec or xlat in stc mov dec in mov imul shr call pop push dec or js lcall out icebp adcl daa or adc push push or cmp lahf ja mov mov inc aas xor add and test mov ret sub inc add push sbb and push lods mov cmp nop cwtl pusha addr16 and add adc adc repz ret mov lock mov xchg mov cwtl mov cmp adc lock push cmpsl cmp adc adc shrb lahf or adc or xchg cmpsb dec or dec outsb les (bad) divl pop stos and sub add sbb inc sbb xor rolb ficom dec add aam pop push jne dec shrb mov aas xchg je int3 pop push inc lock jae leave mov adc adc pop jl and and mov jb pop mov or lret sbb sbb data16 and or mov daa xor (bad) mov mov mov push mov mov xchg adc subb add aad jo sahf icebp inc mov add sub or rcrb cmpsl mov add orb xor mov cmp pop fsubrl popa mov pop push in fsubrl std dec push fmuls popa pop pop push jle xchg outsl (bad) insb ret nop in arpl loopew out pop fcmovnb das mov cmp adc mov test sub xor fdivrs (bad) iret jl adc fs and sbb and or push (bad) loopnew jo dec lret cld xchg push loop push inc or cmc into xchg adc push xor lods dec sub push je dec (bad) data16 lock rorb inc mov loop nop loopne hlt or dec int3 pop sub fdivl mov sub shld push add cli movsb loopne test push fwait adc pop sub js cli adc call loope ss xor cmpsb mov sub xchg jl fiaddl out (bad) dec bound (bad) lea push sbb dec pop push mov ret mov push cld mov push clc fstl aam lods ret fs incb xchg add hlt xorl inc fs cmpl mov jl loopne xlat xor cmpb or jnp ds or add loopne and or adc or int call cmp mov (bad) xchg sbbb dec pop mov mov cmp inc aas sub xchg mov cmp inc adc mov xor int3 sti push shrb add jb inc inc bound push aaa sbb jecxz (bad) aaa arpl and (bad) sbb inc roll cli xchg popf sbb pop mov daa and and sub popa push or add (bad) or ret aas fwait (bad) xchg in xchg fildll jecxz mov xchg icebp rcr add fcompl clc popa xchg mov adc inc and cmc sbb inc inc aad icebp xorb addb dec out adc mov add addl dec add add insl cmp push xchg gs ss mov fwait dec loopne popf imulb sub nop iret jae mov jl xor and and fwait outsb repz jg sub or je add jmp bnd jnp jmp in aam int3 push cmp fwait mov addr16 sbb mov fldl rol cmp adcb inc loop loope push dec push push dec adc pop xor push divl inc dec (bad) out xchg rorb ficoml ss add jecxz jmp mov add add and fwait mov adc mov mov push push mov push (bad) pop mov or out sbbb cmp js or push je jae test pop aam and jne fisubl pavgw fcmovb or adc (bad) xchg outsb cmp movsl lret les pushf nop adc cmp sub test cmp or pop movb adc mov jge (bad) jo push jne rcrb (bad) xor jnp sbb ss mov sbb sbb sub mov xchg inc push dec add js test inc movl sub xor sub push and roll sbb adc add call arpl inc je sbb adc mov pop shrb ja push inc dec test inc adc sub lea xchg fadds jecxz sbb test inc lea jnp lods push (bad) mov adc mov test movsb and add mov adc orl sub dec pop xchg inc es xorb cmp movsb cmp arpl lret jno outsb push jb dec pop xchg bound mov test test sbbb movb xor xchg lea inc aad js and lods cli dec cmp mov ret imul rclb sbb mov adc cld popa inc fisubl jne (bad) jo pop loop gs mov jne and outsl and pushf sub icebp dec mov pop or xchg lret hlt rclb sbbl dec dec into mov clc sub jbe xor seto out mov jbe (bad) pop jge enter mov sub shrl dec push data16 hlt mov sti sub out loopne and xlat xchg iret and lcall dec enter xchg inc push and in jbe aas cmp lahf pop jp push loop or adc loopne mov aam pushf fsubl pop mov out pop push mov mov ja,pn jmp repz mov daa iret mov push inc cmp setg jmp inc add lcall dec cmp setle cmp xor rcll dec inc dec mov mov sub cld (bad) pusha dec sbb xchg xchg rcl adc xor insb orb cmp pop mov or xor mov rdpmc je adc pop xchg out in dec stos fs push inc std sbb shlb mov push int3 in stos test pop xor xor push je imul add inc adc (bad) jp xor xchg sub (bad) adc sub imul push aaa sub sbb adc and mov lcall pushf or or xchg mov push cs aaa lock xchg xchg popa std add mov popf movb dec add js sbb fs pop lret push add loope mov adcb or dec sub aaa jl push cmpsl mov addl xchg pop or add jnp xchg mov dec pop add pop add lret ret (bad) lock scas scas push sbb mov ficompl fmul in jns ret jmp push sbb sbb sub lods or fs add sbb xchg xchg mov adc cmp push mov pop push adc mov test sub or in mov xchg push and lcall (bad) and inc lea movsb cs das int cmp cli add jns jge push fwait push mov lret push fucomip adc push sub jno add bound inc push daa insb mov dec or adc add pop test test adcl or dec or jbe and lods and pop sbb sub pop and sbb cmp jne in xchg call imul adc xor dec fs mov cmpb mov dec inc and cmp mov cmp je xchg dec or dec push pop fcomps cmp fisubr push flds inc out jge adc cmp enter outsb xchg les xchg sarl iret adc pop lret clc roll jnp xor cs inc hlt fisttp or int into incb mov cmpsl jne inc jns inc das add push adc rolb test (bad) pop insb test fcomps imul mov fcompl idivb push popa jne push pop mov test movsl pop popa adc xchg inc ljmp mov call adc push cli push push les sub pop xchg aas xor push ljmp popf movsb fstl and adc nop inc push sbb add adc arpl inc mov or repnz xchg cmpsb or test in nop scas adc and jbe pop mov gs pusha bswap jmp sti sbb stos push jnp sahf (bad) aaa scas mov push lods sbb fistp pusha push out lods call lahf incw std mov or jne and jb and mov bound xchg lahf xchg (bad) insb sub adc mov mov xchg (bad) hlt enter cmp and pop mov mov xor sub sub pushf mov pop (bad) dec movsl inc pop (bad) imul dec xor xchg cmp mov push in sbbb cmpsl pop adc cmp inc (bad) sbb mov arpl aad outsl mov insl in cs cli rcrl aas adc mov inc dec jne mov insb (bad) mov rorl loopne shrb push dec sarb cmp popf fs push fucomi ficom inc pop xor mov pop sbb mov into add add (bad) push dec mov rolb jne push dec movsl sarb outsl pusha cld lret clc or mov cmp xchg dec xchg movsb jge inc fcompl xchg jmp sbb push xchg sahf mov (bad) (bad) mov (bad) pop jne test sbbb xchg pop pop popf xchg scas xor (bad) aaa mov sub rcll clc stos jne push fist cmpsl jne inc adc or adc push in xchg icebp imul sub test push dec addr16 iret imul adc aas (bad) jmp loope rorb mov (bad) fildll movsb fstl test sub push sbb sub adc or pop cmp jle imul rcrl cmp or je add sbb or xchg pushf ret cmp mov insl daa xchg sub cmp push xchg sahf or ss mov popf sbb mov add imull push xchg scas lahf insb jecxz lea iret mov or dec sub or loop push pop and lods sub dec push outsb imulb pusha sti and pop fs and enter or pop pop mov andl sbb inc jge add sub sbb ret cmpsb cmp cmp ret ss mov mov xlat inc sti sbb mov add movl lea xchg or stos jne sub je orl sub sub cmp stos pop imul inc or inc adc cmpsb dec adc adc adc add xor rclb or sbb xchg loopne add inc sbb inc stos ss les cmp inc xor push xor push aad lds push dec (bad) jb mov nop mov dec push xchg and daa enter inc call adc insl and jnp addr16 cwtl xchg nop aam testb rolb add dec test stos cwtl js add cmp inc push test or movsb (bad) out add lea or mov jge dec xchg mov repz test out pop mov mov push inc je and mov (bad) aas push add imul shrb xchg dec add pushf or mov loopne xchg xchg popf fisttpl in and sub mov adc push lret enter scas ffree test xor iret sub movsl xor push inc adc xchg insb xor or aas popf in mov sbb cmp repz or adc dec mov fidivl inc push and adc (bad) dec sbb nopl or xchg (bad) mov in and inc and jb dec cmp std out cmp insl pop cmp xchg mov mov sbb inc pusha cmp mov or les push stos or push inc push pop and sbb faddl mov adc ret add push mov inc imul sub cmp js mov add mov dec xchg loopne lea or jle and jmp ja mov in jnp adc adcl jno push add repnz add sub and adc aaa or (bad) mov xor adc mov ja pop lcall clc dec jae enter fwait adc imul fsubrl push add test repnz and shrb pop andb inc shl ret sub xor std dec mov mov xchg or fidivr ret es sbb adc add in negl and push xor lahf addr16 mov andl sub xchg jnp push in pop fadds cmpsl push lcall test ret ret dec jns push gs inc and and mov ja lock mov lahf jne sbb (bad) out and sbb inc scas mov xor mov (bad) xor jg mov adc sbb mov xchg movsb pop mov arpl sbb or push or shll dec xor and hlt daa lds sbb or shll loopne push jmp dec mov movsl outsb je sbb mov and mov inc or mov jo movsl data16 xor mov add adc fsubrp or nop sub pop mov or mov incb das aas pop data16 outsb inc movsl xlat and je mull push aad arpl inc mov mov pop rcll les mov ss pop xor push inc mov mov mov daa add sub mov cltd sub ja cmp stos leave add cld jne jne out xor icebp xor or mov ds fwait dec loope iret push add push inc std xchg inc mov xor outsl push lods push pushl add lea hlt or fisub push adc inc push xor push adc dec add lods add xlat sbb xor enter add sbb push sbb leave or (bad) xor pop iret mov push notl cmpl pop pop aad or ret push shll dec test movsl pop sahf sbb add shl loop sub shll cwtl ret sbb xchg sub add sbb mov aad pop xlat test (bad) pop xor dec (bad) jmp rcrb sub pop adc ret sahf aam mov lods sbb mov test adc inc pop pop dec popl push roll and jge push push cmp call sub je push pop mov pop mov xor jb or inc pop insb testb sbb jmp pop adc outsb and test jno mov addb sbb in (bad) mov push inc shrb add test add pop and in jae adc rol mov jmp inc mov cmp inc sbb inc and mov mov incl add cmp jne mov add js jg nop xchg mov test push rcll outsb insb mov enter add jmp and xchg (bad) dec mov in fldenv jl nop push jb or ja fdivl sub jge cmp pop fwait sti jae pop and xor out pop or xor mov jne push hlt or icebp popf inc lret sbb mov inc sbb xor add inc (bad) shr addr16 arpl or pop adc inc dec xchg mov ss mov sbb mov sbb dec cmpl cmp dec mov add dec shlb popf adc cld mov or popf cmp push inc xchg fnstsw mov insl xor js mov inc push jmp out inc adc inc xor or ret push sub sub scas adc and sbb rclb pop (bad) repnz or adc mov push lods mov (bad) cwtl (bad) sbb movsl jno ret das loopne sbb jl rcll or sub push test mov call inc sbb xor pop (bad) fild cmp lods fistp adc call (bad) mov and add add add (bad) adc nop inc dec mov and sub push lcall (bad) stc push data16 sub cli dec jbe and jp add jno sarb (bad) cmpsl fsub sbb mov dec or mov pushf clc add ret and fidiv add jns (bad) dec shll loopne fldenv mov sbb adc sbb or xchg dec sbb dec lfs fcompl and adc fadds inc test popl int3 dec sbb les pop xlat fwait enterw push xchg (bad) push inc (bad) jmp cmp add nop sub mov push and jp jne bound rcrb fidivrl push negb in push inc pop rclb pop loopne pop roll loopne dec (bad) sbb mov add jno and xor rclb repz inc sbb mov and lock mov xor loopne cmpsl xchg sub sub pop xor roll dec or (bad) and adc mov pushf sbb fsubl add inc pushf push push sbb nop push sar push push bound lahf pop stc test into mov rorb sar pop mov jns cmp push push das cmpsl js sbb pop aaa push jnp add mov add rcl enter cld imul outsl sbb cmp xor push push stos es pop in mov mov inc rclb lods sbb and sub xchg mov mov adc jmp daa pop daa fsubs add stos nop rorb inc scas fs inc jg je or dec jg add adc push and and rclb fisubr jmp repz mov inc or add lea xor adc pop pop pop les je sbb jl ror pop fs add xor cmp push push movsb xchg inc enter inc add sbb and mov or jo or stos sbb fimul sbb push add mov gs pop mov mov adc pop pop sbb adc push mulb adcb push orl mov or mov pusha outsl ret adc nop fstps (bad) mov add pop aas cmp push push mov (bad) mov sbb jbe (bad) and cmp repnz sbb inc inc mov stos push dec mov sbb test call test (bad) js rclb sub je movswl and mov inc adc jle add add add pusha jecxz push cmpsl xchg xor loopne icebp insl lea int3 push xor sbb daa push jns das lods insb pop daa scas pop movb scas xor popa and loope xor xchg loope (bad) add xchg jo out ret shrd cmp adc ss (bad) aad dec cltd jo lea fsubs xchg test jbe adc adc push sub pop aad mov xchg xchg lret or adc jne mov xlat shl push roll jle je ret push push add adc popf inc cmp and orl mov bound in cwtl mov shlb push pushl and xchg cmp lret or adc adc icebp popa mov mov inc popa jl mov or or mov jge xlat js mov les mov loopne pop xchg adc stos dec nop mov sbb ret pop sbbl cmpsl (bad) fnop pop mov adc xlat loopne push hlt jmp pop sub push sarb sbb xorb nop enter push mov test nop ret cmp adc jg dec mov lock cmpb gs push adc clc mov mov xchg sub or out lock pop add push pop (bad) mov push mov inc adcl pop mov sub dec arpl pop shll jl xor push sti and daa adc loope add inc push (bad) mov test jne add ds sbb andl add pop adc fldl fbstp cmp cmpps and jne jle mov ljmp cmpsl inc push pop xchg push mov mov (bad) dec outsb or xor and cmpsb jno mov ret lods in dec scas rcl xor aad pop inc mov cmp inc cmp add imul ret jne (bad) mov add cmp add add insl xchg xor push pop push mov push or cmp or movsl sub inc lahf inc add dec ret iret inc clc push adc dec mov push push or xchg mov sti pop cmc push ds adc enter cmp test or shll xchg push inc xlat mov loop dec and mov nop mov int3 pinsrw inc ja out imul lods lods and sub jg push fdivs (bad) les inc data16 lods shrl mov cmp push mov add jne imul sub inc pop inc xchg adc mov push jp mov inc enter mov xchg push jg add in xlat xor mov addr16 nop lret xchg pop iret ljmp mov mov xchg or imul cmp call sub dec cmp aam loope sbb aaa pop adc dec push mov in (bad) shll push pop dec sbbl cmp das ret rolb add mov push rolb and loopne dec (bad) dec adc mov mov or outsl adcl imul mov aam adcl aaa dec and inc std icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb jbe add ret add cmpsl xor and and push pop cmp sbb inc shlb ret xchg js lds xor xchg shrb jle jle fwait jno in xor push repnz in jne mov mov sbb out xor and sbb jne std js jne push pop inc or inc pushl (bad) adc adc inc sub rorl aas movsl add pusha les inc mov push std xchg xchg js outsl jp or dec lods iret fiadd roll push ss lahf pop push sub sarl add lds out xchg push aam and cmp mov xchg pop cmp ret dec adc fidivr es inc sbb pop add add loop and int3 jge jg test popf rcpps push mov fdivrs push cs (bad) cmp loop xchg xor inc sbb sbb add into xor pop add push fstpt push sbb push pushf mov shrb xchg outsb xor inc dec dec enter (bad) ret jae movsb and mov outsl dec and aas imul mov push inc pushf jo daa imul pop push mull push xor mov add inc jmp jl pop je dec and xchg adc xor push das in or jae pop adc dec jmp xor sbb or xor (bad) lock pop into jnp add add cmp pop xchg push jg jge pop imul mov sbb mov add jo stos jne lods roll out inc sbb jnp cmp pop ljmp int3 je inc cs xor sub shr mov inc push (bad) pop inc inc adc adc xchg jo icebp sarl mov stos dec sbb add add push subl out add mov addl jae sub mov add mov adc lods dec add jae,pn mov pushl inc lods dec shrl ficompl pusha cs imul push je pop pop jmp mov mull add adc fmul in sub mov loop subl push or xor mov adc xor sahf lock add gs popa add enter xchg or xchg nop pop (bad) dec push sbb por add push stos adc iret adc cmpsl movsl cmp mov (bad) mov mov add iret mov xor jne sti lock xor (bad) and and sbb sbb dec mov lret enter sbb les jecxz test jp jne push jg les jo js pop mov (bad) cmp inc aam jmp test les mov add xchg inc je js jnp cmp insl sbb add repz mov pusha icebp and inc movsb in lds or or and in ror das shrb arpl inc mov xorb push push cmp test pushf movsl cltd sbb cmpsl mov cmpsl popf rcrl imul out jl daa dec jo mov imul daa add out je xchg cmc rorb mov cltd xor mov mov xlat push mov mov mov inc jmp lret jne cmp out lods inc (bad) out add mov movsl push inc and jmp and xchg addb les fist inc mov test jb jbe sarb loopne add (bad) jg add lock dec ret xchg sbb cltd pushf rclb popa jmp dec test xor cmp mov xor adc fisttpl pop popf jmp sub and daa stc sub jge pusha pop push sub loopne xor outsb pop cmp push jo mov add pop cmc lret add add add nop xchg mov nop mov inc add mov jle adc dec dec and (bad) lcall dec add test arpl imul loope push (bad) jg pop pusha dec xor roll dec and sbb mov enter pop mov sub mov sbb mov and (bad) sbb ljmp xchg fistpll imul aaa shlb push add rclb fnstsw inc jp xor rolb mov add inc sbb xor daa push adc call cmp inc sbb not jle or xor inc sbb pop push les mov (bad) dec or int fwait aaa lds mov push and add pop push push insl mov clc adc sub repnz mov sub in adc adc sub sarb mov mov mov adc push lret push add mov pop imulb or dec jnp es es jbe cmp cmpsl sbb lock jge in add or sarl push pop sub sbb cmpb mov movsb nop leave adc shufps andb add shufps dec adc push add push (bad) push push push inc notl jbe lret xor sub mov adc add test sub pop adc jnp mov stos arpl mov adc divl into cmp pop add daa xchg adc inc xor push jo xlat scas fadds jl lret add inc add lcall (bad) ja ret test cmp fistl sub cmp lret and add sbb push cmp out rcrl or outsl clc jge repnz fcoms (bad) cmp push insl mov inc ds sub mov or inc sbb test adc ja or pop sti xor push xor pop shrb andl clc sub clc adc insb xchg es fstl dec ret or sub dec sub int3 sub add adc dec push sub (bad) incl lea and inc (bad) cmp fwait les sbb je cld inc push xchg cmp cmpsl test adc jecxz in mov or adc pusha push (bad) mov xchg mov sbb adc mov popf test or loope ret mov xor dec push out or ja mov pusha or push mov cmp loopne xchg adc cmp (bad) (bad) and or js adc into inc xor mov adc adc (bad) cmpsl add adc cwtl nop in hlt jg add sub sbb repnz pop insb sub cmp mov or mull in insb test jnp and xor jg fimull lods aaa sbb imul mov dec fimull push mov sbb fs test (bad) pop mov sbbl jns push xchg mov pusha pop adc sbb push insl test or push jbe push xchg test add movsb mov pop adc mov adc dec rorl adc cmc inc hlt or sbb or cmp sbb cmpsb outsb rcrb adc lds xchg xor shrb mov push lcall jb adc call mov insl inc add push dec push jp jg push rorb sub sub cmp les and sub sub push dec sub dec clc clc lock dec jae imul cwtl cld mov movsl sbb rorb fmul push push sub popf push xor and jl sub in in dec sub mov jmp jnp pop cmp cmpsb nop mov ficoml and push std pop inc or or push movb xlat pusha notb add cmp add pop push mov mov jle xor xchg out je lcall sub add cs jmp jno sahf loop add or rcll add (bad) xchg mov push push dec mov dec mov inc jl jns jl,pn mov mov (bad) repnz push dec or pop push mov mov sub imul jmp loop sbbl pop inc mov je jge adc or in inc jae loopne adc das cs xor push mov and jle adc or sub dec add add dec sub dec ja and push out outsb pop push adc fmul adc ja or mov into adc into adc dec add add (bad) mov dec push sbb jl fmuls mov cmp jle sbb (bad) xor pop cmp and mov int3 or dec sarl fdivrs enter jmp or dec xchg mov lcall or nop or or mov mov dec add xchg insb mov (bad) outsb push das mov in fistpll cmp pop xor (bad) add scas push mov mov mov inc xchg mov cmpsl dec pop enter inc jns js popa out sub hlt mov sbb pop adc mov fadds mov inc sbb jns sbb mov mov rolb mov push shrl push or les jge xor or or lock incb cmp dec sbb xlat xor jbe in loop sbb xchg push push movsl xor xor push ret xor adc sbb push test es inc dec or inc mov mov add inc xchg fwait inc jmp clc xchg sub test xchg cmpsb cmp inc gs sub hlt mov or mov add loop mov test cmp adc push ss lods jmp pop push test push push mov aam jmp inc mov fwait push fwait scas aam xor xchg sbbb out xor movsb js add fistl sbb mov mov or fdivrl dec mov add xor mov idivl rcrl sbb pop fdivl daa jnp insl mov lea outsl (bad) dec test and jne ret lea icebp push (bad) mov fwait jne lea pop add push pop inc push insl (bad) dec rorl pusha cmp aam ret sti sbb adc ffree inc sub add add popf sbb mov cs lret jg aam add nop stc or pop fdiv (bad) jae rclb add inc xchg dec or adc cs push iret and adc test ftst adc cwtl sub jb or jp orl or ret xor mov arpl push mov movsb inc es pop or xlat add out xor mov mov push aas adc (bad) hlt sbb adc sbb and push add add daa nop nop cmp add push adc scas or js hlt or xchg xchg cmpl inc lahf pusha add or or xor shr add adc cmp add inc mov sbb daa adc cmpl lock sub cmp insb gs inc out jmp movsb mov ret dec movsl push add enter xchg ja mov pusha xchg movsl insb jmp xchg lcall push pop push dec daa dec repnz ss pusha add sbb addr16 sub cmpsb je (bad) orl rorb or ret insl pop test push inc decl xor cmp test popa loop (bad) out das cmp imul cmp pop push dec popa jo push shr int sbb adc push rolb and inc jmp add daa add xchg inc inc mov movsb scas mov ljmp dec jbe loope int3 adc ljmp addr16 or stos adcl fiaddl push push shll sbb addl xor add mov pop or sbbb inc test mov out dec std test xor or (bad) jmp ja sbb hlt add bound orl insl cmpl cmp xchg inc push outsl adc xor scas cmp icebp and xchg mov inc add imul popa fdivl rorb add cmpl and pop dec sub aaa movsl jge rorb mov add mov addb lea xorb mov push add (bad) mov inc add xchg and cltd imul enter push loope in pop add and sub faddl sub pop and je inc jbe sbb add xchg mov mov xor cmp in or push jo daa mov ss loopne dec jae movsb call (bad) mov enter or sub mov (bad) mov jns sub mov dec pop pop mov js cli out sbb insb pop dec sahf push clc cmp jge out jno movaps push jne push cmc push aam sarb int inc rolb sbb sub ficomp push lcall cmpsb push jle sub insl and test jl stos dec adc sub call and xor popf sbb add sub cmp loop and adc in iret lock dec aaa push adc shrb aas dec aam adc iret sbb sbb mov orl imul add (bad) in dec or add dec mov xchg shrb mov add mov lret popf or jl push ds add es and ret adc and inc loope rclb add movsl xor orl mov call sbb push (bad) push in xor or pop hlt mov loopne shrb and add movsb push test out or push inc adc cmovo setb sub push jo add mov mov or add cmpsl arpl xor and inc xchg ucomiss adc jo out out scas je nop cmp sbb xchg push push mov cmp push cwtl mov and test ret scas dec popa iret mov jle loopne fwait inc jb pushf aam js aaa inc ret fsubp dec or push pusha loope jae adc and pop inc fimul ret lods ret aaa xor cmp ja push jg mov mov (bad) cmc aam pop test ret lret cmp mov ret mov or mov pop test pop sti push popa lods mov (bad) jbe cmp or xor fstl or mov adc (bad) adc les add inc stos lahf das or pop insb cltd pushf rorl movb dec inc pop idivl push jo (bad) pop mov sub or and or add xor sub jge (bad) (bad) pop iret xorb in stc sbbl mov cmp and and nop cs (bad) cmp les dec popf mov pop popf outsb (bad) bound test int3 pop or (bad) cmp mov add cmp cmpsl std dec iret iret cmpb push sbb inc fs js dec pop push sub add inc imul mov fildl clc in ficom xor or or imul push fdivrp add and jl cld dec in jbe sub dec cmp push pushf outsb mov cmp call fs lret test dec add fstpl jmp xor pusha leave es mov in xchg inc loope or sub in xor sbb and jne popf movsl xchg xchg adc mov loope cmpsl lock push jno arpl xor or xor sbb and insb daa (bad) into flds cwtl pop fs push mov xor je inc lahf inc outsl and xor out dec jne into inc inc out push pop add dec jmp xchg inc sbb ficom xchg mov fwait or push stos jo xchg sub jmp aam xlat pusha fsqrt ljmp lcall ret ss mov pop and jnp jo cmp xor push clc (bad) mov xchg sbb sarl and in push fldl push adc pop xchg adc pop add rorb daa pop or aad mov jp dec adc daa or sahf add outsl les mov es add popf sub adc sub inc (bad) out int sti or pusha xchg outsl lods sar test push cli (bad) prefetch or mov je adc je cmp jns push imull mov inc imul add dec or xor cwtl pop negl adc arpl lock cmp loopne dec sahf xchg rolb aad jno (bad) idivl stos test pop mov push add adc in popf jno sbb jp push test (bad) push in push adc push push fdivl fdivrs lock cmp out and ljmp mov fcompp nop adc jne push (bad) dec jno repz and xlat je add inc adc enter push push es pop jbe loope fs dec push or add dec push into mov and sbb push jmp add sbbl scas mov cltd mov scas lods push mov or mov mov or sbb ret mov lock jne (bad) mov or and addr16 js push xor or mov jne mov fmuls pop dec dec and adc fistl (bad) mov sbb testl in call fldcw rol xchg test pop sbb bound leave sbb push or fs fild pop pop and test add adc adc lahf mov cltd and mov mov mov jecxz adc jl dec ret fldlg2 adc push sti lds or add inc mov adc lock shl fs loope,pn inc movsl push xchg mov mov xchg xor cmp xor test (bad) pusha sbb cltd or mov insb or scas cmp mov push mov mov xchg or add inc mov xor cld adc (bad) scas and or addl nop mov or inc insb push dec insb pop jg cmp or add xchg add add mov inc fdivr mov pop clc add test sbb in push xchg in sub or mov cwtl mov inc (bad) (bad) xor leave icebp clc fs add mov xlat inc insb adc movsl xor insl (bad) push aam dec dec and mov and test out add adc xchg icebp add jp xchg pusha mov nop add ja daa in (bad) cmp xchg arpl push popa mov add je push mov push pusha lock cwtl cmp inc clc or loopne sbbl mov cs inc adc inc jge sub sti stos add add dec add inc popa inc loope dec pop and or out add add add sub (bad) push and dec je push (bad) rol pop mov lret xor inc xor cmp push (bad) xlat cmpsb sub jne sbb fdivr repz mov sbb lods pop sub or mov fild add cmp push jnp xor pop cmp inc or hlt sub lcall insb mov sti inc mov jmp push add rcll mov or jle jmp into push inc pusha jnp and add sbb xchg mov mov pop or sbb notl mov xchg imul es fcoms movsb and loope mov test enter cmp xchg inc scas pop xlat adc or inc dec and inc movl xor or pop add jo or add insb mov cwtl or push mov push pop icebp dec jmp xor and and testb inc dec inc mov (bad) add ret push inc dec stc or aas push lds (bad) xor loop or sbb dec (bad) mov pop or or sbb inc adc aas mov lock adc push mov sarl sbb or jmp mov daa sbb pop adc or sub adcb daa (bad) push pop add and dec mov adc adc adc sbb shll pop cmp push dec inc mov jmp pop mov cwtl sub xchg add cmp sbb inc fs (bad) and sbb mov pop or jno dec enter xor icebp dec (bad) flds and sub xor or pop movl dec sub cltd add mov testb loopne adc cmp shrb xchg cmp in jae jns out xchg xor pop mov jg lahf sbb add cmp xor push cmp js sbb pop add aaa or or mov or sub aas adc ja lret xor jo add add pop sub (bad) jg pop push jnp js dec cmp ss sbb fdivr (bad) loop add pusha pop push add push sti jmp cmc clc cwtl mov jne mov push push sbb jb pop dec xor jecxz xorb or clc hlt (bad) fdivs shrb or sbb jl addb pop cmp push dec push add and push add clc (bad) cmp sbb add mov pop les iret sbb loopne sbb or subl push xchg rclb lock jns push and sbb push daa jne add dec cltd lahf mov setno in jle xor popa ds adc orl out jmp out loopne sbb inc pop inc and les xchg scas add inc ss ret in inc mov mov data16 jge (bad) push iret xor and push jns cld repnz inc outsl jae pop mov pop inc sbb ljmp clc fisttp inc sbb cld jne sub mov fist imul or cmp mov cmpsl icebp inc add lea sbb xchg push and insl pop pop dec and jp or cmp mov cmpl jne ret imul sbb inc sub sbb lods add push xor inc sbb push in and (bad) negl inc inc pop sub push jecxz repz mulb movsl sub sbb aam out movsl cmp mov jecxz shrb xchg movsb jbe push mov faddp jmp add sub add lods inc cmp adc adc aaa cmp std pushf or xorb and lods ret xlat (bad) mov or inc pop bound adcb (bad) adc dec and inc and outsb movsb push mov test add (bad) dec pop sbb es faddl push sub sbb and inc (bad) xor dec movsb or jmp push jae or sbb mov inc pop pusha mov imul sbb add in dec or jo add add cmp imul xchg push adc cs fdivr in inc inc loope,pn dec mov fisubrl insb roll sbb fsubrl xor add or data16 cmp jne push push (bad) pusha mov and in or add sub adc inc lea (bad) call inc mov sub pop in push push (bad) in add arpl or add add adc pinsrw ficomp or inc sub loope lea arpl cwtl sbb cmp cmpsb and inc pusha int3 sbb and sub adcb mov bound test nop jno rclb and les fwait and ljmp sbb or clc mov mov es das add inc ljmp push lods jne inc add jae sbb stos dec dec push test xchg or (bad) jns test loopne adc inc frstor je or and push jne add or mov hlt add sub out insb mov icebp pop push das pop xor sub addr16 je outsl dec sti loopne psubusb es cmp stos xor je cmp pop xor leave inc mov mov test testb xchg or inc cmp sbb lea and xchg push jge aaa jp imul sbb add cmp add leave loopne test mov xchg xor mov add or aaa (bad) push nop inc (bad) lock or mov popa ljmp aam or mull movsl es sub adc mov sbb or push jne clc fistpl hlt mov sub js flds xchg fisttpl and (bad) adc push mov out mov das xchg pop or adc adc mov cli mov adc cmpsb adc testl out and and and enter xchg push mov sbb lcall pushf (bad) jmp addr16 sbb pushf cmp push or cmp pop pop sbb sbb sub or sub outsb shrl or sub cmp sub xchg mov dec (bad) and popa add iret cwtl stos sbb jle xlat ret arpl in push sub and adc jne sub sbb push xor ja cmp sub xchg pop mov adc jne sahf push push sbb std pop (bad) dec out xor pop rclb faddl jle sub xchg mov sub test (bad) fcoml or push fldt xor inc add inc dec (bad) mov add dec inc or or cld inc cmc sub aad adc lret mov xor add push mov jp jle icebp aaa jo ret mov push popf and out imul inc nop adc adc and mov pop (bad) aam add adc inc popa push repnz pop jl mov (bad) insb daa ja push aaa push adc lret pop xchg movsb in in mov xorb sbb adc rcrb pusha or push or push sbb add push adc pusha adc cmp lret pop je (bad) push imul in out or inc push mov xor and repnz sti addr16 xchg inc inc aaa mov sub adc sahf inc int3 movsb into mov mov push pop data16 adc dec pop jne mov mov and (bad) movsl dec jae cmp jne pop cmpsl sahf jo loope sbb jle pop mov and rclb cmpsl out add mov push sub fistpl addb lret mov test mov cmpsl cmpsb push xchg and push pop adc add xor icebp xchg push pusha shll xor sbb mov pop push or flds sti add rcll inc or pop daa add mov xchg cmp xchg test pop imul pop or add scas lods adc andl mov xchg and push mov and dec jp pusha out add jmp je minps push push sub adc dec jne ret fwait inc das xchg pusha (bad) daa push insb jbe mov push and inc inc or fcomps xor dec mov mov movsl (bad) mov rcll push jo movsl ds repz in mov xchg rcr xor push adc test shrl leave lret or push dec push fcoml stos inc mov cmp mov iret pop popa inc xor pop xor jecxz inc jae inc das loope arpl aad cmc xor lret mov push nop pop xchg inc (bad) jo xor mov and clc pusha sub or add shlb mov sbb sbb push std pop aaa inc insb mov xchg scas jle push pusha addb push or mov in inc bound or rcrl push xor lock jnp dec loopne ss ss es dec lods mov push lahf and in xor xchg mov and test cmp nop (bad) enter shrl adc push cmp insl iret pop unpckhps mov pop lcall cs repz and push sbb pop adc cmp cs sub sub jmp adc mov jbe add or ds cmp dec popa mov sub pop xchg and mov jecxz fwait mov and push aas cltd pop jmp sbb lods inc xorl lods inc jge fstps pop das fadds sbb or jb insl push js (bad) (bad) pushl jle inc xor pop lret and (bad) push push pop jmp adc dec mov aaa mov (bad) cmc xchg push dec loope lock es or push les xor push aaa fcomps add jg pop nop or add pusha pop ss sbb or cwtl pop cmp int in push jl or dec push pop mov sub repnz into xor jmp push push and and jg mov and fidivr mov fiaddl and dec and add sub jo dec or or sub mov add and movsb inc cmpsb xor pop (bad) sbb dec in js pop jp int3 jns cmp jp pusha outsb pop aas xor sahf dec fidivl push or xchg insl mov push dec or test adc cmp popa mov mov adc popf test inc inc dec push flds into xchg or popf hlt xchg sbb fld popf outsl mov jne int3 xchg pop fwait das adc mov or lcall movsl aad roll xchg add (bad) (bad) adc loope xchg lods cld adc mov push add add lock jno loope out jo adc out mov subl xchg pop outsb js dec sbb sbb mov push daa lret test adc sahf and mov inc add mov mov sbb mov imul pushf divl mov adc test cmp ljmp xchg lock and inc xor push xor adc sbb lret inc xchg mov mov call cmp jnp cltd pop mov xor jg sub sar loopne sub repz repz das test in pop addr16 pop int3 (bad) mov inc dec xchg mov or add js push daa mov data16 mov std or and call push enter mov aaa add mov (bad) sbb or jge ret inc cmp daa jg adc lock or inc or mov test sbb and (bad) or (bad) scas jmp es call test clc lea fsubs push cmp inc mov push sbb adc push (bad) cmpsl mov lea pop dec mov inc pop dec cs push sub (bad) mov pop inc jne mov adc call push sub push hlt fnstenv addr16 jmp popa movsb cmpb mov pop jo lock adc cs sub mov xchg inc jmp test or xchg xor (bad) je pop in imul sbb and or popa sbb sbb stos add and jmp outsb cmpsl jbe dec enter out add cmp fdivrs aaa lcall mov sub inc sub insb fs test xchg movsb jb xchg js jl lret cs adc nop hlt mov sub cltd adc fistl sbb xor dec dec push add xchg pop dec dec inc add insl lret fadds inc gs (bad) pop push gs and inc out test das popf or add push insl jo pop adc pop das insl lea out fadds outsl mov jae pop cmp jno das mov jo cmc sbb push enter mov not adc adc out adc rclb lods adc mov sbb popa iret jno mov test pop mov or (bad) leave ret sub push mov jmp sub fdivrs jmp push adc dec movsb mov hlt dec and (bad) mov or (bad) dec mov inc and inc push add mov je loopne or push sbb inc sbb pop sub sub jge mov add mov and or and or jb xor push cmovne (bad) mov inc leave sbb xor mov pusha insb pusha pop cmp push or repz mov dec ss icebp inc mov mov cs and loopne mov add jg rcrb les iret pusha js std out movsb sub cmp or fcmovne inc xor flds out pop lea inc push mov aas xor das dec outsl sti pop push mov cld or or pop insb xlat mov push push or cwtl sub cs inc stos out lock push andl icebp popa add jnp movsl popf (bad) sub das leave cmc mov outsb pop mov dec sub xchg add or mov dec mov loop sbb mov inc or adc mov dec (bad) cmp mov movsl push ja in inc jp iret subl int mov add sbb mov addr16 cmp cld pop test cmp leave or sbb out adcb push pop daa xchg icebp cmp pop sub setb sub mov inc mov mov cmpb das clc (bad) out jnp sbb jnp sahf or fdivrp push adc imul xchg xor cmp push jle emms pop sub add decl push xor rcll xchg sub lea xchg leave sbb fnsave loopne lock jo jb adc mov or ja lds pop adc jae stc adc or fidiv hlt pop les ficom xchg icebp push push bswap xor inc mov dec or xor push inc sbb mov out mov jb push push mov in pop sub mov mov sub mov mov push xor mov or incl and mov sub or sbb xor push icebp popf push sbb add (bad) fist out mull bound pop push mov test sbb test aaa jnp add lea jnp mov pusha inc or push inc dec movsl pop (bad) out fstl fs sahf hlt sub pop (bad) cltd fsubrs pop mov and dec sbbb cmp sbb or adc movl sub scas mov fs test xchg push aam xchg test add dec add inc xchg fcmovne pop xchg add scas insl shrb cmp pusha sbb lahf pop sub add and orl stos out nop sbb dec fs mov enter pop pop add mov jns push push push je out jl test pop xchg push mov cs outsl pop lsl push std add lods aas add and push push xor add mov aaa int3 notl lods (bad) mov xor arpl lcall iret push push mov mov mov mov xchg aas add xor xor push add imul push lea push (bad) mov add jnp and sub lret fstps xor jo inc out mov mov (bad) leave (bad) (bad) movsb jnp push xchg adc inc adc cmp xchg add xor icebp jle ja add inc (bad) push adc sub inc aas add lea scas enter lock jo lret aas (bad) les inc xchg outsl xorb xor jp or cmp test xchg add bound iret inc xor adc sub (bad) ja arpl sub xor and addr16 inc mov lahf repnz andl loopne add or lret aas fsubl scas adc mov aad and leave cmp pop je dec (bad) out rorl cmpsl cmp jo fidivrl test mov adc sbb ret hlt and sub add lea sub jle mov and adc lock arpl sub js push lret sarl sub loopne pop pushf dec cmp push jmp xchg mov inc loope mov call les ret das adc mov (bad) mov inc inc (bad) out inc adc push (bad) in xchg pusha xchg or or xor popa add lcall (bad) sbb call sub cmp ljmp sub loope aam or cmp mov jmp lea insb and and test xor push dec (bad) aas push push push scas sub and jge inc gs push jbe push adc aad xor inc mov and je add cmp inc aad ficoml rcl cmp mov and add push adc (bad) dec sbb sbb std data16 inc mov add outsb cmc inc adc inc arpl jnp push daa inc and xchg xchg xchg push push (bad) mov test dec sub add mov incl inc dec adc rcrb inc out add (bad) or xchg cmp cwtl out int3 les andl in xor (bad) sbb loope sub adc push je mov ror adc rcrb sub inc mov or inc add xchg addl lcall dec dec cmp dec pop mov and daa or or (bad) in push xchg or daa push out or adc outsb jo dec pop push dec out fmull scas scas sub pop xchg or js jecxz and scas out push inc into inc aaa sub pop imul fstl sub jnp inc call sbb mov adc pushf jns cwtl dec jne test sti add out insb jnp (bad) mov pop dec and clc movsl inc pop aas insl popa inc jnp call aam andb pop and insb mov popa rol rcll xor xchg add lods push cmpsl and pop sti cmpsb cmc xchg mov or sub add add adc add mov rcr and loopne xor js lods xor icebp sub pop mov out adc aad sub into js int inc or pop (bad) cmp (bad) jb (bad) je test (bad) fsubp je aas enter jl jl cmp push outsl or inc pop nop orl insb jns push (bad) mov mov lea mov sub mov mov vmovdqu pop pop cmp sbb repz je (bad) repnz rorl sldt xor cmp imul xchg test or out pop push or (bad) je sbb daa add mov orl pusha or and pop jno mov imull ljmp mov imul adc or mov inc (bad) out or pop add mov jne jns adc add jo loopne fbld push jge and clc mov xor inc (bad) adc xlat mov mov sbb mov daa inc ds pop sbb sbb xchg es xchg sbb pop jmp das adc movsl cmp fsubrl add mov stc push sub popa fisttpll js add cmp push jmp jo imul jle and dec pop outsl fimull cmp negb mov jne (bad) int dec dec inc inc daa lcall inc push sub dec push aam push sbb jg pop push adc push jb imul aaa pop xor and scas pop cmpsl adc pop sahf push and je dec rorb mov mov push inc or push aas and dec push aas cld movl and xor inc and sub stos dec and sub dec inc sub pop rcll push das xor jge mov push mov call aad cs test (bad) adc clc jl cmp stos push push xor jnp xchg (bad) pop xor hlt js inc cmp inc add jo and xor daa jbe jne dec or les xor stos and fnstsw mov push add mov call cmpsl dec jecxz mov aas mov mov xor dec aam test mov or and xchg ret (bad) and jge xor push sub out or dec jns lock dec and icebp pop xor or pop dec out xor push call sbb (bad) add pop push pop in adc mov lods push mov iret test sub mov rol jae inc xchg sahf adc push in ja pop mov jns cmp (bad) dec push das movsl js or sahf inc inc fs icebp or dec mov movsl xor cmp push mov mov adc je aas inc int3 loop mov xor call jno cmp pop dec mov call mov mov fisttp ja jecxz cmp dec sub js xor fmull sub mov xchg xor in hlt inc hlt mov inc cmp jecxz leave inc adc push stos or xor push dec mov rcl inc cmp xor adc inc adc and push decb or test jno xor dec push adc pop (bad) mov and push dec jle jo push mov adc test inc cmp xlat ret xor dec jae sub popa pusha inc inc pop test sbb add or adc jg rcr aam dec fsubs loop aad imul js repz insl gs inc xor add fcomps imul push sbb push xor adc adc cli xchg pop jg add jl (bad) mov xor (bad) jo inc add insl add mov insb rorl push pop or add push pop adc lcall adc mov rcr mov mov inc push adc pusha push in cmp in ud2 popf fs sub inc pop loop outsl push xchg stc push xchg out sbb fwait adc jae cltd xchg inc pop dec sbb cmpsl adc cmp inc push inc mov inc add mov add xlat cs and shlb inc es (bad) adc popf aam or or imul and mov xor sbb bound dec push es mov sbbl mov inc and movsl mov stos ja sub lock clc adc xchg add fbstp int3 negl in mov fadds add lcall mov adc ret or and and xor xor icebp ljmp inc cmp jno pop xchg and sbb pop mov das jbe mov sti xor subb mov cmp add clc andb ljmp inc or mov cmc push nop or inc inc ret cmp or jmp sub insb push xor pop inc mov ror dec loope sub inc imul les arpl inc mov or push or arpl mov mov sub dec xor sbb insb jl pop sub sbb shrl jo roll scas push je mov ret cmp adc ja lret add test fildll mov xor out pop xchg aam pushf jg push and sbb lea shlb aas mov mov sub mov (bad) cs and xor dec inc xchg and or pop stos dec ljmp inc rorb popa roll test cmpsb cmp pop pop cmp or xor xchg push cmpsl mov mov out scas movl les cwtl cmp cs sarl adc xchg add and stos adc dec mov dec hlt mov adc push das test xchg decl push dec sub les and test or add xchg inc xchg add lahf rclb pop popf iret add fsubl inc sbb mov in adc xchg movsl (bad) ds scas sarb jne mov add test cmc sbb fwait jo cmpsl sub inc xor sbb push xchg add inc or mov jge lock adc mov in cmp mov sbb test xchg (bad) ss rclb xor or dec xor mov movsb mov call push fidivr push cltd imul mov push movsl mov rolb xlat lock ret cmc inc fadds and lret stos sub add mov or fs dec in inc xor imul push jmp inc mov das cmp mov loopne pop lock xchg pushf pusha xchg ja xchg aam sbb pop in push fsubr pop xchg and lods add mov clc push xor sub ret sbb das in mov dec and push das test push loop sarl push push scas mov fcompp xchg icebp adc dec cmp pop test test (bad) lock fcmovnb cmp incb jne jmp es cmp es push mov out xchg out dec cmp or or push shlb lock dec mov push jecxz cmp les and out push arpl xor int inc jmp sub mov mov and mov jbe jecxz pop lahf in xchg (bad) xor cmp jne out add adc dec dec int test in add and lea cmpsb sub in inc mov xlat and sub fmuls jb push mov push adc add mov popa orl cmc fxch push call add dec sbb cmp push sub adc cmp dec test push mov xchg fdivl imul aad inc aam xor or mov xor inc pop ret or inc jle decl cmpb xchg add pop movb imul les add outsb xchg jo mov add lods push mov xchg sbb mov cmp jno add push out push mov adc or inc pop push (bad) dec ss sbb add data16 and push aaa int3 inc imul mov push push scas pop or lcall jb add sub (bad) jle adc cmpl add push bound insb fs aaa sbb dec inc push into push sbb mov adc add mov add and adc sarl or icebp push mov les mov out aaa pop and push inc fs arpl or push and or and subl add movsb mov add subl mov fcmovnbe pop mov (bad) adc mov push or addr16 sub cmp or faddl adc lds (bad) ftst pusha dec or or imul add cmp inc mov inc inc scas fcoml adc inc loop mov clc xor pusha hlt nop push dec rorb fs cwtl hlt inc loop jl push push push jns cmp je nop push mov aam adc pop out shrb cmp rcrl pop cmp pop push sbb cmpsb mov jno sbb cmp aas cmpsb jo xchg mov ja pop inc pop nop xchg je inc mov adc mov out mov xor dec push lahf pop scas fistl xchg stos in pop in jmp mov in push push inc pop mov pop sbb in sbb fs mov inc movsb pop inc test bound (bad) adc or daa rol or mov push adc cmpsl jnp dec sub gs dec cmp sub lock add cld ss sub nop push or sub sbb sbb jnp inc mov add xchg push sub pop mov cmp pop and jns mov insb lea paddsb pop push jne cmpsl inc xchg shl xchg cmp lahf cs xlat cmp mov or cmp nop or inc aas nop sbb sbb or add push test es inc or sbb dec ljmp ret push jae enter clc insb and test cmp hlt lock mov int arpl nop mov mov lea hlt mov and sbb inc pop sub test jo bound das mov push dec cwtl adcb dec fdivrl in and mov add pop cmpsb jmp push (bad) pop daa clc sbb dec sti push sub or push push pop cmc inc dec jne hlt sahf sbb jl or inc mov ds lahf mov cmpsl mov jp pop es push push cmp lods rcll adc jl add xor out popf cmp xchg test mov movl adc mov out add mov lods mov and or (bad) cmpsl and jle sub stos dec mov adc call inc add movsl aad rolb xor icebp cmp nop orl cmpsb pop movsb inc leave add in (bad) lds pop adc fmul jg iret or inc inc mov lods loopne mov enter cmp sbb fwait pop out andps jle xchg dec inc cmp jo mov or jo and jg pop and pop xchg push iret or fldcw xor jg (bad) out loope jb fstp jae mov push sahf add sub popa imul rcpps sbb jo loope imulb sbb and push sbb int xor push push add (bad) xchg ss mov xchg mov js,pt cmp aad dec mov fdivs xorb imul nop call inc pop daa (bad) fsts or adc and and popa pop or and loopne dec xchg mov pushf mov mov inc xchg push push popa and imul jecxz or sub or push jo roll push imul add add in xchg out or mov dec fimull les iret movsb jno push push lods out into inc sti xchg nop movsb xlat mov adc push push push and cmp inc cmp pop (bad) (bad) mov xor xor xor inc sub ja mov dec dec dec dec dec dec dec addb push push push pop pop pop push lcall push cvtpi2ps xchg (bad) popf and xchg fcompl adc aam shrb sbb sub xor inc test mov rcl or and testb data16 and cs in add add xlat mov jns adc pusha test insb cmp push mov pop push pop dec adc incb iret loope pop jb mov mov and sbb jge add in fcmovnb adc jnp push dec mov add push (bad) iret mov jge dec jnp imul or sarb adc pop cli push sbb sbb call movsb das inc push xchg mov adc rcr orl jmp loope add out mov jmp inc inc std jo mov dec pusha sub fs and sbb loope aam or jb leave xor cmp cmp sub mov add add and dec mov dec sbb adc pop xchg xor lock hlt mov inc adc push push cvtps2pd cmp hlt pop lahf mov push ljmp fcmovnb add imul aas xchg mov mov pcmpgtd push sbb inc idivb dec rcl adc sbb into sbb out mov rorb out inc jmp popa inc xor dec sub pop xchg add lcall adc incb or jmp inc (bad) sti push add dec adc add or pop lods iret inc add or dec shl and and mov out and loope (bad) xor nop mov mov mov adc inc pushl sbb mov lock jmp add pop incl or mov popf or cmp jg mov ret mov add rorb imul adc (bad) insl clc mov dec outsl add pop sbb add adc push call add es sub or in outsl sub (bad) rcll cmp ja jo fdivl push dec pop xor jmp ss xor in xchg sub xor fildl leave pop nop pushl aaa in or adc in inc sbb (bad) cmp and inc iret in popf (bad) in dec cld leave add mov dec out enter xchg (bad) test cmpsb mov xor daa and inc sbb cmpsl add xchg add mull inc imul mov xchg push xchg add cmp xor add push push mov pop fisubl xor mov xchg clc cmpb fnop mov or sbb movzbl cmp fisttp or test inc daa xchg ss push mov push inc mull movsl aad leave or cmp sbb dec js dec dec cmp in add and xchg mov ja dec lea adc mov imul push aaa mov and sbb cmp inc push jo mov aas or jl das setbe push fwait mov ret jns dec sbb adc ds inc add cmp add aas sub add sbb int3 mov push inc mov test sub (bad) jp not mov and sbb aad sarb jmp rolb in (bad) mov jle (bad) adc sbb das cmp lcall sbbb rclb mov and loop dec pop add xchg pusha and test or add jl sbb fdivrp or sahf cmpb dec das leave adc pushl add push dec xchg or popa shrb or fucomi dec pop pusha sub mov adc pop push adc fs fs add sub mov pop mov push dec rolb repz and inc sti (bad) push sub (bad) push adc aas jno lock push aam cmpb and or sbb dec in jo sbb push xorb lock mov add adc mov push cmp cbtw pop leave mov or imul in sbb addb xor pop cmp sub xor inc into pop xlat or fistp sub jecxz jmp and xor or (bad) push ss and push pop push pop or test pop (bad) jae pusha sti cmp pop dec sub sbb std in adc pop mov into adc pusha or inc push adcl and lds and inc test pop sub dec dec dec sti push fwait nop mov mov aas or ds jne inc push cltd je jle push fdivl xchg mov xchg loopne adc mov jmp and or mov es sub movsl (bad) loopne xor mov mov outsl ds push dec pop lods testb or jb stos fildl cld fnstcw dec repnz mov mov sbb mov shrb dec daa mov dec mov xor ficompl push push adc sub jnp mov es call test adc je mov mov out pop je adc and lcall loopne clc or push popa decb inc pushf test pop negb xor sub jg push mov jo add push and pop ds daa xor lret fadds or lds sbb add flds les dec cltd shrl out inc cmp adc fldl ljmp mov mov and dec out xorl or mov ss push loopne mov or into xor rcrl pop or rol or or hlt jge sti cmp mov inc mov mov pushl push add test sbb ljmp add dec sbb xchg xchg hlt jae movb xchg adc call dec loope mov mov xor jecxz insl sbb ret push and pop cmp aaa add orl je jae subb div jb or sub sbb xor and enter rcrb addl push xor shrl in lock adc arpl call jle hlt adc iret mov mov pop scas or inc cmp clc add jne addl sbb xchg nop icebp adc orl pop and mov (bad) mov and and in and out cmp push addr16 jae sbb add or and dec push dec add movsl xchg inc mov or mov push push (bad) or fistpll jge lea sbb mov adc arpl pop fsubs insb stos mov lods sarl sbb mov pop xor xlat or xchg cmc adc xchg lahf xchg movb mov pop adc flds mov iret dec pop das loopne enter lock hlt fcoms frstor jge das std xchg jo add xchg mov inc mov cmp inc cltd pop inc cltd clc outsb mov jle sbb rclb sub les push sbb ss hlt loope mov mov or dec out popa inc dec push inc xchg ret hlt mov es or lock inc xor jl add sub xor pop and inc es dec sbb cld jno sbb pop mov push dec and cmp decl push fmuls jns imul addr16 fsubrs dec push mov dec xchg loopne mov xchg xchg test lock inc cwtl pop cmp lds dec jge mov popw push push inc adc pop (bad) std mov push fsubrs adc imul add mov pushf sub pop dec jge inc insb arpl xor mov cltd add add mov fwait pop push or loope dec or sub add push add inc push sub adc add lock roll rcrb or ret enter mov add lea or imul cmc sub rol dec mov cmp add sbb mov insl (bad) mov xor iret es lret hlt cmp hlt xor into hlt sub inc add je add rep or imul test (bad) jo xor or mov leave lock rcll add lret jp ds pop inc inc negb fildll push nop xchg cmp dec insb loopne sti fsubrs adc xchg lea ja add clc loopne mov test and outsl ja ss jge aaa fistp dec push je sub sub test sbb add daa call mov in das ja or pop mov dec jg jl iret push inc mov imul mov sbb add or jp pusha dec loopne and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor bound mov sub jmp and lea ret sub repnz push add pusha mov cmp test or pusha data16 or call fsubs ret or dec inc out imul push in sbb stos adc and popl adc jo mov leave adc push jns call in mov sub sub xchg cmp je clc xor add lods lods nop xchg lret clc sub inc ds xor inc enter dec lock dec clc jb mov or xchg dec fcom test fnop arpl loop pop sub push pop xchg subb pop cs sub pop clc lock dec call test inc mov movsb leave test iret mov pushf sbb and or or mov cmp daa jnp loopne mov push dec adcw jl imul sbb sbb incb add adc fs mov imul and adc insb cmp mov mov fwait jae inc sbb nop jl jge add push nop push in push sbb pop adc cmc cmpsb lcall lea and int (bad) mov fsubrs push pop sbb js inc push fidivl inc push sbbl and adc xchg lea outsl fs insl fs test or bswap push fs xor fs jl hlt lock mov pop jl or sub fidiv push dec je mov test push or pop mov sub or xchg out nop sbb dec loope pop inc das pop fmull sub outsl push (bad) adc xor mov mov lock sbb xchg (bad) mov mov hlt mov test popf imul mov adc (bad) incl mov ret je decl inc add (bad) push push iret xchg inc dec arpl dec sub xchg jmp dec sub push or addr16 pop mov push or stc icebp mov or ds out inc repz adc add pop cld mov push (bad) pusha and test loopne add in ja or dec sbb (bad) and jae fdivl jge or movsb push adc cs dec inc push and add cmp push add xchg and sub jb aas aad or sbb in inc pop incb add sub imul mov movsb fstl lods sub xor ret adc dec sbb cmc or push ret insl pop xor adc sub lock pop mov dec js cmp clc imul mov lods test leave adc adc pop jp aas fildll in fsubs pop (bad) xor cmp xchg or je inc push adc add imul mov pop push xchg jo or cmpb jl or je and ret pop xor inc nop dec and (bad) cmp add dec add push mov and mov inc out aas je popl pop push aaa je mov push divb adc pop movsb inc mov test inc int xor mov or repnz push ds dec pusha push fmull pop mov outsb fidivr shrb push inc inc adc dec je push (bad) lock mov mov push ret push arpl add jnp sbb test fwait mov mov jno cmp clc imul xor lcall outsl pop in je lahf cwtl (bad) pop cmp cmp pop lcall gs and leave pushf (bad) or sbb fsubs fimul pop lods xchg es adc mov push push mov push xorps push cmp icebp push add dec pop mov and popl adc shrb je inc rcr aas mov aas jbe and repz dec aas popa loope subb pop popa bound hlt adc and and push push test push add adc dec insl mov xor cmpb sub xchg or insb imul sub cmp sahf gs or rcll jecxz inc and push add ret rolb push in test lahf and rcrb or cmp rorl xor scas cmpsb inc inc inc adc push arpl sbbb jo adc jmp sub (bad) lret insb sub mov add dec repnz xor push sbb and push jo pusha xchg pop mov jnp ss js sub dec xchg jmp pop xor mov push adc loopne pop and sub jmp xlat stos lock jno xlat or js les test jno inc dec fs lods ret rcrb mov insb adc dec mov out lret enter inc inc or mov cmpsl addr16 adc ljmp ja mov mov mov cld and lods out scas out cmpl add jo iret int jge xor xchg cmp adc or cmp loopne dec popf cmp pop mov mov xlat jle stos movsb pop inc lret push cmp hlt or cmp jnp sub js pop add adc or xchg and pop mov lods mov jb shlb mov rolb xor sti rcl arpl ja mov mov inc (bad) push pop pop mov inc sbb movsl pop emms adc xor jge inc pushl jle dec (bad) xchg jne jl and or jle push push data16 mov mov je mov xchg adc push sub dec jne pop xlat mov dec pop and dec scas and mov and cs xor xchg mov and push adc je inc and pop or mov and inc in inc imul add movsb push jnp bound cs out xor or dec jge mov xor mov jmp push sub jl pop push mov add xor ja add imul adc mov into sbb xorl xchg aam lods ja mov inc nop mov jmp jmp incl add add mov jecxz and xchg inc or add cmpsb pop xchg dec ret xor sub or pushf xor movsl fwait insl (bad) sar call cmp int3 mov loopne out jge dec jle push outsb xchg ljmp inc add repz mov mov push inc jmp loope or out ret dec mov (bad) push jne fadds fildl inc sbb repnz inc test nop cmp sub push mov mov push or cld push pushf jns push inc pop push sbb aaa pushl dec inc add adc xchg icebp pop mov mov outsb and aaa cs xor sbb or xchg xor cmpsb add rol loopne mov call adc inc out out imul testl in ss mov repnz mov or pop adc inc es loopne test cmpsb jbe rolb enter lret out add pusha jmp jle fs ss (bad) bound dec lds mov adc mov or adc aam pushf jbe and jne dec push pop dec xor outsb je cwtl loopne fs sbb outsl push aam je push sbb clc jne repz xor ret cltd shrb test lret xlat ret sub enter lea movsl adc dec fwait jl data16 int3 push stos push imul lds inc push gs mov push (bad) xor pop cmp add test and popa jl dec add js loope jnp sbb dec mov add xor and push xchg (bad) xor add dec push ss mov sbb mov inc mov add xor sbb inc insl cmp bound inc fcmovnb jl movsb loope add sub sbb jle test adc adc dec pop fstp and cmp adc push xor or loopne pop iret and test inc add adc imul ret clc pop sbb shll addr16 add (bad) rcl jne in push sub add call or sbb add push sub jno and aaa cmp aad mov sbb bound mov pop bnd mov mov jmp movsb imul out xchg test pop into mov add in pop cmp pop cmp mov mov cmp add pop mov cli sbb outsl nop js lcall adc mov dec pop xor jmp pushl sti jl inc test cmp mov and addr16 movb dec add mov imulb pop inc sbbl in testl or inc test inc mov dec daa add adc xchg popa pop jne outsb loope add aad mov fs jle,pn aaa dec and dec inc jne mov pop push imul mov fs adc pop cmpl lea cs aaa (bad) push ret add add xor push cmp push and or inc lock adc xchg xor sbb aaa aam idivb mov clc jb xor inc mov sbb mov lds adc cld fdivrs inc cmp sbb rcrb dec add xor inc xchg xchg sub jae xchg fs repz xor xor outsl xsha1 cmpsb or and movl into pop push xchg clc bound xchg push push lahf pop pop xor daa pop ret inc or push cwtl ret cmp mov or nop daa fs or mov push pusha xchg push je das hlt xchg mov adc sbb mov movsb sub sbb (bad) (bad) xchg rolb hlt lret sahf push add mov jecxz (bad) and loope push pushl ret add data16 pushf pop rol push or call out mov pusha shl scas aam sbb int3 sbb addr16 js int3 js sub lret fldl push dec (bad) mov call jbe inc loope divl rcl jno cmp cmp dec pop sbb lock fwait ret push adc push out xchg sbb or add nop dec xor les cmp cmp in add push loope or and dec sub sbb loopne push ret cmpsb rcrb pop (bad) and adc push push inc xchg insl ljmp ss sub rcll or mov adc popf or add push add mov movsl es push add xchg jbe mov clc mov and sarb lea fcoml pop sub cld in mov lods mov insb rorl ror xchg sub inc je (bad) jecxz leave push pop add aas xor add test (bad) add sbb cmp jp add into or daa aad add lret xor or push call cld push pop mov pop and push rol cltd and jmp jo inc inc mov mov inc loop push cli pop or or add push jge mov mov inc sub push and inc or je sbbb in mov add cmp cmp mov fiaddl dec push push cmp push dec sbb push or repz inc addr16 lret (bad) repnz mov and add inc push sbb roll pop clc mov xor pop andb bound inc jmp cmpsl fwait mov add or jo iret add xor push sub lcall pop cwtl shrb pop jge lock bound inc je sbb inc cmp mov xor and (bad) cwtl dec pushf mov ret ret mov cmpsb lea pop push xchg movsl adc pop pop push cli ss lea hlt adc dec lea xor jmp cs jno test mov dec and into daa imul sub inc mov cmp push lahf pushf test pop movb inc push add je inc add or jg dec push inc cmp pop clc jb pop mov int mov jl mov das (bad) sbbb sbb pop bswap adc imull iret cmp sbb fisub or shrb xor add or outsl or push (bad) testl aaa aaa imul mov jbe jmp pop sbb cmpsb adc inc js push cltd inc pop aaa pop test out push xor out das mov adc bound (bad) mov mov cld mov cmp jle jmp xchg pop insb cld ss outsl pop lds or xchg xchg push sbb insb adc cmp xchg pop xor out cmp aas enter pop nop iret dec inc aaa sbb xor dec jno xchg loope iret pop adc mov nop or test addr16 sahf or adc sbb mov test add xor adc push sub xchg cmp cmp xor insb ret xchg add jg push subl (bad) jmp xor out push (bad) mov (bad) in xchg push daa jo fnstsw jecxz and mov clc mov jns or loope jmp hlt pop pop adc pop cli imul lock xor lds push mov xlat push and call daa (bad) aam or mov sub in fimul xor into ja mov jb mov insl test mov or cli xchg clc inc adc movsb push or push sarb (bad) hlt jmp hlt xchg jne sbb out int3 or adc subb mov or jl adc sbb sbb decw mov lcall or imulb (bad) mov fwait jmp and jge dec or or icebp add xor add push int3 push icebp std push push in aaa in jge sub push or xchg inc je pusha pop sbb push ss leave push clc pushf lods push jp addr16 lahf add dec push rol test adc add xchg add dec or cmp test ss test movsb cmpsl cmp jp sbb xor rcl lahf push mov pop addr16 inc push loopne cmp push aaa sbb in push mov pop push pop fcoml mov push xor pop mov jmp xchg mov je pop mov push xor int3 lcall dec test leave mov adc sub or add inc mov fild (bad) sub (bad) cmp cmp add ss rolb lret orl mov push xor fmuls mov pop aam lock xchg push inc adc arpl jg dec push or idivl aam xchg ret movsb jno aaa push pop add mov setle repnz dec ucomiss push and outsl mov xorl cmp call sub test insb dec or push scas scas sub sub je sub je or pusha sti inc pop add sub adc xchg es push and push pop movsl dec (bad) (bad) into nop mov leave rorb add loope pop movsb jb imul std mov testb add add jl jl add les movzwl or adc fisttpll add xchg and mov sti leave hlt ljmp daa int3 adc or das dec mov mov xor popa cmp imul ja shrb leave sub jge aam loopne adc enter inc add xor xchg xchg inc or dec jge cwtl ret insb imul push dec rorb mov cmp testb and pop enter add lock dec cmp mov and xor (bad) test pushf sub fmull mov cmp mov mov lea push add cmpsb test call xchg rclb int3 idivl ss cmp ljmp lea jno sbb movsl mov arpl mov pop cmp (bad) push cld push adc dec (bad) pop insl (bad) push leave xorl and add cli and push or lea jmp mov fcmovu aad aam jb dec sub dec cmp dec pop mov or push andb inc push xchg jns mov cmp bound inc (bad) fdivs push test xchg push dec mov insl or aad pop dec in pinsrw xorb dec add mov cmpsb sbb lds xor int3 adc mov or mov or add das push push adc add push lods inc jecxz jnp or adc mov (bad) mov cmp or jg add add push movl xor lcall xor cmp inc push jg add inc cmp inc popa add mov xor cmpsl fisttp fnstsw lock divb fbstp push push je mov adc add add (bad) or xchg aaa pushl jo addr16 push in cli rclb cmp std jmp jge xor ret sbbb or sahf cmp push xchg or mov xor or push pop lcall ret test dec cmp mov push xlat pop cld jle clc loop std pop std mov dec pop cmp inc xor xor xchg test xchg sub gs sub xchg std sbb pusha lcall sub jl jae sub mov pop imul ja inc and push dec push stos lds and push dec stc popf and xor and push adc and sub (bad) adc loopne das sbbb call xor xor or test dec stc or fwait mov testb scas xor add cld inc lods sbb or dec mov add mov xorb dec es aaa pop adc push mov ss or bound inc add mov jo sbb mov orl cmp nop je (bad) jne icebp lea or ret daa insb cwtl inc scas enter sbb (bad) mov adc push add jmp fdivrs pop inc jg mov sbb pop out daa sbb push shl sti jl mov and adc and and ljmp test (bad) insl test inc js ret mov pop adc dec rolb cmpsb test sbb movsl test repnz aaa mov jae xor cld xchg test jge out dec inc mov cmp jns push ds xor ss cmp sub sub aam sahf idivl test inc sbb sahf jnp cmp adc push adc mov fdivrl in out push roll xlat (bad) insb nop lods mov movsb test xchg adc outsl scas shl mov jae mov js jge lar cmpsl dec push ret jo xor hlt repnz aas and pusha inc or cmp pop popa add dec mov or js add sbb xchg cmp sbb push jae pop push xchg repnz insb or jae inc jle or dec outsb arpl (bad) inc xchg out dec pop mov test push stc xor lods mov jne ss adc ficoml je lock in ror push adc xlat inc les loope loope fsubrl jmp and arpl out mov xor jo push call test push cmp and mov add nop xor jns mov dec cld pop sub arpl iret lods or je out push pop shlb aas or or fisubr sbb stos add sbb in lahf or enter pop inc xchg (bad) vpmacsdd or aaa cmp or cmpsl sbb testb int in push ret push push and lds pop mov push insl outsl mov jns push out mov movsb lods (bad) cmp jmp out fildl or push fadds sbb inc jl add mov pop cwtl (bad) mov xlat pop dec lcall adc mov imul subl mov cwtl mov push sbb repnz movsl xlat inc call cmp out cld out mov sbb (bad) orb cmpsl jo (bad) imul jmp aam inc ja jo or fistpll (bad) fsubs mov fadds insb out mov bound push adc adc jp ret xor nop xchg pop xor ljmp add mov xor mov je xchg dec or cwtl or or out loop dec adc inc mov mov dec mov cmp bound or notl sub adc loop add es outsl or push outsl mov call jl (bad) out sub movsb sbb mov adc imul std mov dec movsl sbb out mov jnp das mov popa ja insl adc or cmpsb sub ror ja sub imul rorl out in in rcll and adc mov cld (bad) or mov outsb fstl sbb or test addl xor mov outsb jne sbb adc lret push adc mov test push or add loopne iret inc (bad) lret pop adc mov pop adc in adc (bad) in rolb cwtl into inc and push gs cld push or lea mov cs xor (bad) test inc imul mov pop dec lds pop push (bad) mov cmp fs mov push jb clc and xchg jns adc out jns cmpsl mov scas push js test lods xor int3 insb pusha and sub test xlat sbb inc or pop ds rol and outsl clc (bad) imull movl xchg mov or imul or iret inc rcrl (bad) andl rcr lret add xchg push jne jns pop test pop sub sbb xchg add mov dec adcl dec jae push push push dec rorl inc add sub js ret (bad) lock outsl add pop lahf inc loopne fcomps adcl inc popa lea sbb jae dec pop xchg mov sbb test mov jbe add mov cs jl mov out mov push cmp inc inc test inc jg js movsb repz pop fs add lahf add push lods testb and and inc les outsb cld out faddl cld inc clc push mov and in (bad) es fs cmpsb andps xchg mov int3 adc sub push call jl add push inc fidivr pusha xchg push inc dec and hlt ss fsts add aaa (bad) icebp push push xor sbb add fstps jns jge cmp mov mov push adc push fstp aaa add add add add ljmp add add ret or (bad) sub add xchg add mov push imul push mov lea mov pop sub fimul add or rolb pusha loopne push bound add lods lret adc or (bad) stos cmp roll pop dec xchg and xor mov and and ds jl dec push test push mov and pushf xor push push mov negl aaa sub cmp out fidivl je push pop addb push into idivb cld sbb sub xchg xor mov repz mov adc push fdivs aaa fstpt cli inc push in push aas sahf xlat je sti les in or cmp fdivrl push popw mov and cmp faddp jnp or inc or pop adc add (bad) lahf pop and lret pop add outsb inc out lods (bad) pop mov xor pop ret push pop xchg outsl pop sbb cmp pop lret push andb add std js or insb or pusha cmp cld out inc orl pop xor lret loopne pop adc mov cmp aas add cmp push push dec loope mov xchg dec outsl jb dec adc add insb dec jo pop add ret inc xor les jo (bad) adc call movsb push rcll xchg jl xchg pop lcall repz dec shrb dec add pop les add das fisubr inc add xor fwait sbb xchg push lcall es adc cld cmp sbb xchg and (bad) sub std pop ret sbb dec fnsave mov repnz sbb pop mov xchg in push dec jo xchg das push add xchg daa pop test mov aam shll push (bad) pop mov test mov push and pop push adc icebp and mov es or inc dec pop enter xor das int3 mov or jmp adcl (bad) add pop push mov adc inc addr16 and jmp (bad) imul addb sub lcall shrl adc test divl enter ja pop enter aaa fwait (bad) dec sub shlb divb dec (bad) popa call dec jecxz test push mov or push popa daa add scas inc mov mov xchg fmuls lock xor js jae pop aaa inc or mov push sub add inc mov jb and xor jo push dec (bad) xor jl add and (bad) pop cmpl dec (bad) xor mov pop roll cltd or pop xor jo aaa jae repz mov in lods dec dec cmp gs sbb fildl faddl inc int3 orb jb imul mov test or jo jbe jle (bad) push scas cmp aad pop fs or cmp mov out rcrb cmp shll or xor cmp decl repnz pop cmp nop fcoms aas jecxz push in inc cwtl cwtl stos xor pop insl inc insl sbb mov repnz outsb dec jnp cli sarb aaa push call or inc inc shrl fdivs pop pop enter dec pop push bnd clc jns mov add popa cmc dec cmp inc add inc or pop loope and dec dec and push add dec inc sub dec push jbe inc or mov and out pusha ja push test push xchg dec inc adc scas add dec cmc inc or pop inc push and dec push ret subl push sub pusha or or scas sbb (bad) or mov cmp mov mov pop repnz push rorb sahf cmp dec imul das mov mov push fcomps mov lcall ja in orl and orl add es mov rorl aam inc push js aas unpcklps add ds inc pushf cmp cs test cmpl inc or adc mov push inc aas imul inc test out push ss cmp or out pop sub jb mov rorb or or nop and (bad) ds mov or inc pop (bad) scas loope in pop lods push int3 iret mov push or loopne inc or adc xchg mov inc sub add push mov dec inc test adc in and (bad) das testb (bad) (bad) jne loopne test rcl scas push adc rcrb push cmp sti (bad) clc push sub inc pop pop push movlps jb data16 pusha ret jo mov xor sbb pop or mov dec xor fmuls out mov in or inc add loopne sub mov or je and or push inc push cld mov dec xchg mov mov inc dec movb loopne sub shrb int3 mov arpl dec sub les scas mov lock test dec jge pushf pop outsb repnz sub rorb dec or push pushf or mov pop into and lods es ret push hlt mov lock xchg sbb lret jb xlat inc cltd mov addl sub ret adc aaa push repz mov xor ret std (bad) leave fdivrl or fisubr push into or adc mov sbb fwait jo outsl ret or inc dec outsl ja mov or dec xor ss push sbb jle sbb or sub or sbb mov mov push adc pop hlt or stc xor fcomps ret mov dec inc sbb call cmp outsb adc scas cld sarl mov enter fwait rorb adc test ret mov dec fldl cmp sbb sbb adc call xor sub sbb dec iret and sbb inc sbb xchg cmpsl mov jae mov and mov add cmp loopne lret inc xlat lds mov (bad) xchg imull int3 add add in cmp or adc ret sub adc cltd xchg xor sbb sub cmpsl in add loopne mov cltd dec adc aad das ja imul sbbb jae adc add insl xchg out add add xchg and outsb loope dec mov cmp xchg xor insb pop pop addr16 and pop pop xchg fstpt add dec xchg or fstps lcall test push mov cmp push jo imul inc pop mov mov xchg ret das fdivs inc jl out js lahf sbb push mov sbb mov or push inc or pusha sbb sbb mov or add or insb insb fistl ds push inc add hlt inc aaa pop mov out vmwrite mov mov aad push sarb or adc add push adc les jno lock dec rcrb push sbb cmpsb andl ficom rcl ss aas fwait push lea dec xor sub mov fucomi inc sub add (bad) fldl inc popa mov lcall mov inc add jne fistpl mov xor push movsl ret hlt mov cltd ss je xlat dec jbe mov leave out sub xor inc shlb dec dec test call popa mov movsb test add pusha push ret test icebp inc outsl mov push ret xlat jge rol aas cmpb push add xchg cmp mov int sub fsubrl dec outsl (bad) testb mov int3 add adc aad pop popa dec push inc fadds sub and cmp add test mov xchg mov ficom mov sbb outsl fadds and cmpsb rclb pusha adc push xchg rorb sbb (bad) iret adc pushf movsb adc addr16 divb neg jmp arpl je gs (bad) push dec psubd push push test adc mov cmp xlat repnz and lods int pop stos insl jne ss pop xor fisubl in sbb adc cmp test add sbbb push sbb adc movsb ds or aad ret mov push movsb enter in mov adc mov daa (bad) jnp shrl pop pop cmpsb adc outsl inc mov orl xor or jmp fs lods sub xchg inc inc out loopne xchg stos (bad) and dec icebp jmp inc inc or hlt out insl out cmp adc dec or dec loop xchg lret popa das push and negb (bad) mov add push push ret rclb pop sub icebp sti and jge test out aad or jmp (bad) xor push jmp fnstenv and rcll pop mov dec (bad) decl dec mov xchg lret ss scas shrl vmovntps jo mov test pop add xchg loop mov int repz repz sub mov icebp daa xchg std and and inc out test cmp movsb das jbe mov add das mov jle push inc sarb xor out fs push push and push sbb jno mov and (bad) xor push movsl adc and pop inc inc fdivrs push and jecxz cld mov jne adc jmp sub sbb push (bad) adc jle add fisubl insl push sub and inc fisttpll movb dec inc adc add das sub add sahf sub test jo or shlb ds fs xor jmp jae mov and rclb lcall fisubr mov pop das fadds (bad) std shll leave (bad) mov insb pop mov jb loop adc cmp lods or (bad) push cmpl sbb (bad) jb loopne popa add xlat cmp stos and xor test jb inc push pop inc ret ds or es loopne lods mov das mov cmp (bad) stos cmp test xor xor xor push add cmp dec or fld and ret xor lahf test ds adc inc sahf pop xchg (bad) and pop fstpl pusha push cmpl sub xchg popa adc or nop inc cmp nop add xor sbb rcrb or xlat pop and and lret ljmp adc loopne sarb push rcll and push jp sub push mov clc sbb sub push enter loop shl sahf nop inc push xchg notb aam xor ljmp fwait pop out sbb and aas or notb insl mov test adc add mov or jo test adc or add stos add cmp xor or xchg dec adc je xchg outsl xchg adc or repnz push adcl xorl xor in push movaps aad gs or push or popl push movsb inc add pop and xchg pop inc mov xchg sbb jge cmpl and lods jno jno call mov push adc inc fs mov xchg (bad) lock sbb sbb pop nop inc mov lea push test ret dec or sub pop in push xchg andl cmpsb adc add ss pop lods sbb xor and inc xor push icebp je roll mov imul data16 fidivr mov jns xor mov cmp sub (bad) or stos outsl adc sbb sbb pop or mov outsb add gs out sbb cltd fucomi lret push sbb xchg sub fisttpll xor rcrb sbb or arpl sbb (bad) mov mov pop jb inc fisttpl or xor pop and dec (bad) or (bad) icebp lcall aaa out (bad) mov adc sbb sub pop cmp cld jbe mov rcll insb ljmp sbb nop or sbb mov sbb push ret sbb adc in into mov adc push push lea push mov push xchg clc inc push and (bad) out xchg addb fstl jge sbb out sbb pop mov jno push jle mov into dec ja mov inc (bad) or sbb pop mov mov add dec mov mov pop shll push outsl adc outsl test ss adc push sub push mov inc fiaddl sbb fcompl shrb and lds and in or add pop xchg dec mulps or hlt inc adc es sub out mov stos aam add push sbb sbbl dec stos mov cld add xchg mov rorb pop dec ja stos mov dec mov xchg xlat pop sub add out fisttpl cmpsb cmp popa fstpl jg mov mov push mov ds mov pop insb ret inc or dec push mov mov pop xchg mov dec push adc sub mov ss int cmp rcll fisubrl or push mov pop or mov inc cmp js push mov pop int adcl xchg or or cmp fs aam sub and xorl adc add or pusha popf adc xchg push (bad) push mov icebp adc je mov and jbe xor add insl popf sbb jecxz push push jno add scas sarl test arpl or adc daa xor jbe loopne imul mov das addb mov xor psllw nop xchg sbb mov xchg mov add outsb outsl in inc movsl xchg (bad) sub cmc bound dec adc xor mov cmpl popf dec inc andb ljmp js das cmp fsub add int3 pusha adc add lock mov cmpl xor cmp mov int xor orl sub sbb adc inc and adc js cmp sub push or adc out sbb add add push push mov mov es into or out in ret out cmp test mov les or mov or roll xchg dec mov (bad) stos iret fmulp and sbb cs jl out and xor lods dec imul cmp fsubrl fadds and fcoms inc scas outsb xchg sbbb or cmp xchg xchg fwait insb pop fist dec inc arpl nop xor lods (bad) scas fdivrs mov inc or sbb addr16 inc pop jne sub push es test mov movsl gs pop (bad) ja inc lret xchg mov lods xchg movsl inc mov xchg outsl add add fs mov fiaddl cmc lret sbbb pop inc bound and stos jmp xchg pop andb sbb sbb push or lds movsl daa test addr16 and add sub fsubrs out fwait pop jl mov cmpl pop sub out jnp inc mov insb dec jp jle jne pop (bad) mov frstor cld add mov ljmp inc pop push cs sub and mov pop rcrb jbe and fsubs movsl add mov iret push cmovb xlat xchg inc mov cmpsl inc mov stc cmpsl mov rcl push mov and (bad) cmp and fcom das xchg test xchg stc jbe sarb adc adc and dec adc sbb mov das daa push pop sub ss mov xchg mov ret sbb movsb adc xchg daa mov or ljmp (bad) ds test ja fnstsw jo shrb je jnp push adc sbb aad pop or cltd nop sub dec test and lcall adc mov repz lea sub js ficoml cwtl fdivl xlat or mov sbb and (bad) jmp or xlat leave das xor mov push pop xor mov test in sbb stc pushf les fwait mov add mov and inc aas jae sub jno daa xchg and inc nop adc dec adc mov xlat scas aam inc jg add or xor jge xor cmp push xchg aam cli je push sub pop mov lahf inc ljmp xor inc xlat pop stc add sbb pop dec in fdivrl cmpsb cmpsb and or imul dec xchg add push test xor inc js fnstsw cmpb test push cmp adc pop push mov arpl add loopne jmp cwtl xchg cmpb sbb xor jle orl loope inc (bad) ja popf mov mov add adcl cmpsb xchg add or cmpsl scas mov lods pop mov add jb fdivrs int3 enter mov frstor cmp sarb aam push cmpl sahf add cmp dec jge addb sbb dec xor and (bad) mov scas (bad) mov mov arpl insl sub fisubr int lods mov clc cmp and sub xchg icebp jl or aad dec add (bad) xchg jl ss adc ret ret xor call or pusha jae popf test push fs add subl ret js cmovl imul ljmp addr16 (bad) dec mov mov shlb movsb idiv push rcl sub adc adc push sbb pop movb mov mov or mov (bad) ljmp ret cmp rcrb or adc aas mov adc call andb out lock imul inc dec punpcklwd (bad) pushf xchg lods popf xor mov or sbb xor mov mov movsb push movsl out adc sarb and xor mov push leave mov mov add mov imul nop rorb pop add and jg mov rol xchg jb or and mov push or dec test lret xrelease lcall dec je daa cmpb xchg add cmp jne aaa dec mov sbb aad js test jne inc clc mov sub imul adc or and fs xchg leave adc stos push movsb xrelease xor fs gs out inc push movsb or and push (bad) (bad) xchg add or and rcll mov pop jecxz add adc fmul (bad) push dec sbb inc sub or lods aam inc push lea sub test dec or push bound mov dec jnp loopne pand or shll dec push stc mov in (bad) (bad) inc mov hlt aaa pop dec sub dec hlt sarl and in mov dec (bad) xchg dec adc andw sbb sbb ds test nop add test lock and push mov (bad) xor in lock (bad) xor lock push dec or pop sbb adc pop bound daa jmp or ljmp mov inc repnz and and xor or adcb fwait mov lea fcompl adc adc jnp pop jbe sbb mov and out popf or inc inc mov mov or dec mov add mov or jbe call cmovs in dec push loope xor inc loope push inc shlb repz pop mov mov ljmp push xchg nop xor stc sqrtps sub ja inc push sbbb lcall xchg sbb add movsb xchg sbb xchg mov add dec mov jo dec (bad) inc cmp pop shl shrb call (bad) ret push jo or sub xor lods addl testb mov push sbb movsb leave out mov xor inc or fldcw fsts mov xor sbb xor push lock sti in mov daa (bad) jo xor xchg aas add lret sti sub jle sub push adc cmp jp dec push push push daa sub or shll popa or insb cmc daa push insb xor mov or lea cmp mov mov inc jbe add sbb imul and stc jge mov jmp or std cld (bad) (bad) mov xchg add in jne push pop (bad) xchg rolb js mov mov pop dec clc out jo xchg (bad) mov sbb sbb cwtl mov jmp shr movsb cmpsl xor sub or dec and pop sahf test lods dec (bad) cli pop mov pop mov mov out (bad) loop dec testb pop (bad) lock xchg xor jnp pop rcrb fisttp cmpsl test inc fdiv and xor sub xor cmp inc add and bound mov add push add xchg pop push clc cmpsl cmpsb jp push movsl and nop dec add sub jo push mov jo xlat aas aaa cmp imul inc adc mov and or mov cmp movl xorb and or iret fs or adc jmp popf sbb cmp cmp mov out inc xchg add js xchg pop imul nop into daa xor push adc test fldt and dec sbb shrb or fucomi sub adc or pusha or ja in sbbl and out add movsl (bad) scas femms add jno add xchg pop inc cmovle xchg lahf fcmovne insb push mov movl je lock hlt ljmp (bad) sbb push jnp mov add sbb cltd jbe push arpl loope mov out iret icebp inc jecxz fild mov pop adc xchg fnsave and adc mov mov lds push push xchg pushw test push lcall fimull adc test cmp adc jnp pop inc cmp test mov ret cmp lock dec daa movsl jmp cld cmp lods pop imul cmp fistl jno cmp dec or xor lock push push and mov xchg enter sbb or adc lret xchg enter push cmp shll adc push iret lods test mov sub push dec je add mov jno ret scas or push clc je cmp mov push in sbb jmp int push pop lahf iret popa add and push jmp aaa (bad) cs loopne pop lahf popf data16 sub mov sub inc fiaddl sar inc add cmpsl push push lock adc andl jg cmp mov shll (bad) and adc roll cmpsl pop cmp sbb xlat (bad) cmp sbb xchg test enter add and das and adc lods lods inc subl ja add jg mov mov jo daa fmull and jnp pop adc pop mov fisubr pop push pusha or jmp sbb add sub mov cltd xchg jmp pop and sbb inc lods stos xchg xor or movsb push push (bad) divl or and pop inc dec adc mov dec mov cs mov movsb inc ja add outsb mov jo cs push mov push cmp add xor gs mov xor movsl mov adc jae push leave cmp pop cmp pop and or sbb and mov fneni(8087 in adc test and mov add jp push add mov xchg daa push and sub lret cmpsb (bad) sarb pop add push cmp mov mov adc cmc add into pop push in in or jmp push sti rol and imul pop int3 jae sub push push shl cmp and ss xor sub in out je mov xchg cs push or inc mov stos or adc or sub divb movd inc popa jno adc push xor jne push cmpsl mov adc add add pop push fdivrs pop add add sbb and push ja mov sbb cld mov mov (bad) push mov add cmp lds rorl insb lea adc pusha xchg xor push add xor fsubrs leave add clc adc add xchg stc jnp inc add fild adc psadbw mov rcrb sbb jne jo mulb add or and jne adc jmp mov aas mov js sbb or lods lea xchg and dec adc push jbe loope inc adc mov fadds add aaa sub mov out push add xchg in ret push imul add enter pop push negl push add movb add mov cmp insb ret and adc adc repnz xchg add xchg ja push or add sbb mov jmp or sub pusha rolb add mov dec pusha cmp arpl in or mov test (bad) mov repz jecxz lret outsb push adc adc mov popf daa ds jae rcrb dec nop xor or bound and push mov and lock adcl loope sub dec xchg in inc ss push xor mov add ret add lcall orl decb in dec inc dec push aas loope mov push push ret xchg pop out pop test push or or sbb test cmpl mov dec mov and (bad) in sbb rcr loopne,pn xor xor xor or adc xor sbb push or imul (bad) and sti jb mov pop mov add aaa orb cmp push cli mov pop (bad) clc rorl add decl xor icebp xor xor es cld aad dec xchg in jle addl (bad) adc xor add dec pop pop sub push pop inc cmpl jne adc inc add fmuls in fdiv cmp cmp add lods inc fsub push pushf mov stos cmp aad pop sbb cmp je lock or xor add out dec and je mov mov iret or rorb push lahf mov inc xlat adc les xchg and stos inc jns and xchg xor sahf test out sarl dec sahf cs cs inc xchg dec ror pop hlt mov incl nop insl jne int3 xorl xchg (bad) jno mov jb adc dec mov into (bad) je pop pop sbb pop inc push cmp jno dec test nop or and insl dec test decl cwtl leave notl add lods dec ret sbb mov ss js push ljmp js (bad) insb sahf mov leave pop lds insw out shrl add dec push setl lds adc mov inc jmp and movsb mov adc sbb loopne,pt mov mov mov ss ss lret cmp ficoml push inc add sbb jne pop punpckhwd imul fdivs and aad dec add pop sti lea dec xchg sahf pusha cmpsb xor pop mov cmpsl add adc xor shlb push push pop mov or push mov mov sbb enter and dec push mov pop outsb inc movsb lock aas push pop mov and mov xchg xor sub aaa cmpl fistpl cmc sbb gs mov add or xchg mov cmc addl dec push and dec sarl sbb sbb dec (bad) push adc popf or push adc or mov shlb pop pop aas sti decb dec iret je cmp je jg sbb mov loopne push cmp mov sbb aad push mov xchg inc pusha mov dec cmc cmpsb cwtl (bad) cmpsl rcrb adc mov inc sub lahf mov ds cmp or in adc adc mov xchg push mov insb movsb xor jbe lea gs mov dec cmp mov or xor es hlt dec cs xchg arpl cmp testb cmp jno sub cmp sub lods dec xor movsl xlat dec push adc lods rcl sub and add insb jl scas or xchg inc mull gs adc sarb dec rolb das xchg fdivp test or xchg inc stc je cmp in (bad) and sti inc mov push cmp mov push sub shlb mov xor inc icebp xor sub js sbb jmp push mov lock cmp insb inc push lods loopne hlt push insb or std pcmpeqw mov add xor test adc add nop adc or pop mov inc arpl push inc or pop sub (bad) xchg push mov dec pop cmc xchg scas xor push inc lcall test and push dec jl pop push hlt mov les inc xchg xor es and and fistl dec insb inc mov xor push sbb or xor arpl (bad) aaa add mov mov xchg daa popf ret mov cld mov loope adc adc mov jne fwait add xchg fistl pop popf adc mov arpl and (bad) sub dec stos cwtl ret dec fs and adc rorb dec push sub adc add sbb mov pop aaa or inc xor mov adc mov mov mov in sbb nop jmp inc cli add test int3 dec and pop roll jae imul mov int leave adcl ja ds and insb dec xor add jp (bad) call mov sub adc adc push (bad) and adc jns test mov inc add mov cmp inc popa cmp xor lods data16 aad and push add adc sub pop dec rclb scas inc pop clc (bad) push push mov lret mov add xchg (bad) nop or add xchg sub dec push inc sub mov rcl mov and or pop test push xchg call pop aam mov push insb dec or mov and movsl mov push push add outsb dec lea sub or lock dec adc lret inc fcoml mov add jno and imul pop adc in inc adc or fcoml aad es jmp pop into movb fldenv xor nop adc jmp cmp fidiv adc scas lea add push cmp xchg add mov stc cmp xor iret inc sbb push and push adc (bad) dec add (bad) adc pop and movsb ret es add les pop push leave neg lds dec xlat fildll inc out add add sub (bad) jo jbe test xor cmpsb (bad) outsb xor push pop push push lods push add cvtps2pd popa imul or push or lcall test outsl movb jne outsb adc jp sbb xor jne ret push sarl adc mov or adc pop cwtl mov dec dec sub fiaddl lahf pop xor mov add cmc out idivl dec sbb mov fcompl xchg sub sbb push add jmp clc sub outsb fwait cli pop mov jb mov or cltd mov test xchg adc cmpsb jne in mov and dec and mov jo clc and aad adc add lock movsb mov pop add and mov dec cmp push out dec xchg and mov leave movsb or les (bad) mov lods insb sbb adc mov sub or fiaddl push push and sbb add lcall push cmp pop pcmpeqw add sub ss mov add popa (bad) int3 jge sub mov sub arpl scas fcoml cmpb inc adc inc jns sbbb jne cmp ficoml push push and stos std fsts sbb aas or imul gs and loope and lods lock adc mov mov and mov adc cmc (bad) hlt test jl xchg mov push and movsb lret in jbe xor jcxz pop (bad) lret jl sub setge mov push cltd sarl int sbb movsb push cli daa mov lock adcl xchg imul bound sbb xchg jge mov mov push enter cmp or std add imul mov xor addb popa leave xorl add sub push movsb mov sbb xchg xor pop push push add inc adc sub pusha pop jne pop add add pop dec sar xchg lods xlat ss roll aaa pop xor enter ss loope mov xor sub xchg bound shrb dec enter outsb daa jmp icebp adcb lods jbe push inc das imul or loopne add jo jmp jne xchg sahf test push sub mov (bad) add add xor (bad) aaa pop pop jb or leave mov sub inc popf and cwtl pop sbb (bad) adc xchg lret ss sbb and icebp nop (bad) addl adc (bad) pop inc mov ja imul or cltd js inc mov or test pop out dec in add nop lods aaa jo scas mov insb in or stos xchg or mov dec loope pop push jmp sub jmp pop repz cmpsl icebp push in dec sub jo sub mov (bad) (bad) (bad) test adc (bad) jo dec rolb mov call inc fadds add inc jmp icebp inc jge jmp mov addl xchg lret ss pop or mov jle loop or push and sub into subl ja out repnz xlat jns add push sub jmp cmc insl pop and cmp sbb or or aad inc insl jb rolb ja mov xchg jp jmp or out aam mov mov int add adc sub daa mov inc jmp sbb jne cmp clc mov or (bad) into cmp cs add sbb mov and pushf push xor lcall and cwtl popf enter xchg stc and imul lock test iret and adc fisttpl test cmp jmp cwtl or je inc lret mov jb ror jg sbb ret and test addr16 add push data16 xor inc iret loope ljmp and and test outsl mov jbe andb insl add xchg (bad) aas je or or dec bound leave and loopne mov loopne jne add je mov sbb or mov call inc rol aad cli add rcrl xor push out xor popl cmp pusha mov pop rorb lea add std sub in xor lds dec push xor adc aad sbb mov mov adc sbb cmp add pop daa dec leave testl fcoms adc mov jge sub mov dec push cmc fs cmp notb sbb into mov popa pop jl push lret shrl push iret or inc pop or jecxz call (bad) jno in lock jecxz dec or jno loopne lcall cmpsb (bad) pop or and xchg inc jno pop xchg add sbb and mov adc fistpll pop clc fsubl pop insb rcrb adc fsubl fwait lcall es adc xor lret adc imul mov inc shl fistpl pop sbb cmp and push mov cmp jne xchg adc or cmp rorb repz (bad) cmp or add xchg adc lock mov xchg adc and mov loop xor negl and stos ds imul test or insl dec inc enter lock push xor sub orb sub add addb lock xor lret in outsl cmp inc imul add dec dec sub (bad) ss adc mov jb shl rorl jbe xchg shrb cwtl add xlat loop push stos addw andnps mov das addr16 push mov loopne or jp and lea xchg xor sbb movsb andb inc xchg xor mov je cmpsl sub (bad) int3 pop cli insb test (bad) jp ffree mov clc add add mov movsl ret mov add into mov xchg lods xchg je testl orps js add data16 sub (bad) call cmc push mov call and and and test push lea sub fdivp sarb movsb xor loope nop in in ficompl push dec call xor and inc lcall push lea adc and add mov in lret mov adc (bad) jmp les clc lea dec jg or add mov mov inc mov stc divl pop push insb aaa pop add test daa rorl dec push sub cmp or clc dec xor into (bad) fiadd and cld ds scas lock cld rorb xorl pusha and add xlat xor lds xchg jo out add es add das mov mov or or pop (bad) in mov daa (bad) aaa mov push test pusha push lea push mov jb or (bad) movsb outsb pop fnstcw mov pop mov cwtl add inc and aam add push push add or mov sub outsb adc and aad popa std add jnp cmp and fstl add inc inc negb mov mov rolb pop inc in test push imul cmp push sub mov sbb outsb sbb xchg cmp cld cld xor je push cld cld push cld or mov scas add xor lea mov pusha xor mov xchg adc (bad) jno add pop dec jmp mov add xchg rcll cmp pop push das or lahf push jnp dec xlat fcmovb and aad mov bound jmp jle pop adc mov sbb lcall sub and ds sbb pop xor (bad) cltd pop mov sub test jl push and push dec adc inc int inc or inc sub jbe imul lahf sti rol sti add movl xor mov mov dec add dec fisubl in in inc push (bad) dec xor in xor pop add mov sbb mov pop int3 sub popa and lds test push cs mov or repnz (bad) popa mov out push fcmovnb (bad) mov dec dec dec call popl pop pop mov jne push push xor xchg addr16 pop xor dec dec ss (bad) jb inc inc push sbb mov sbb inc fs dec repnz jo sub pop iret sub add mov dec imul jo mov sbb dec ss or sbb loope lret adc mov add mov xor das pop xchg iret call pop inc pusha mov cld mov out jl or jle xor test fiadd cmc xchg lock mov loop and jne out push pop cmp imul clc or add push jmp adc sub loop mov mov fs sub inc hlt adc pop jg shrl xchg jle jo or fstps mov ja adc inc mov js sub sbb (bad) (bad) fld1 jne and xchg pop sbb xchg test xor in inc cmp add aas das mov pusha sarl pop aam std mov cmp popa pop sbb sbb adc inc (bad) xchg mov jb push pop pop inc sbb lock cmp sbb in popf sbb loopne xchg mov loope jmp leave fwait (bad) adc or xor (bad) cmp push out pushf add ficompl aaa rorb pop push xorb hlt in push pop negb mov inc sbb popa inc mov xor sbb push into (bad) cmp push fsubrs dec xor pop out or je adc and cmc xchg dec xor inc or jle outsb insb sbb adc xor test inc imul (bad) sti add pusha pushf cmp cmp int3 (bad) std mov lea pop xchg dec jp lahf cmpsl push push xor cmpsl cmc leave cmp call clc mov jbe lods and sub test dec adc add xor jae cmpsb data16 pop rorb or adc orb mov call fwait call andl push loope or fldcw jp and lock incl aaa add mov iret insb xor jge sub rorb gs mov sbb cs test pop ret or push pop sub xchg xchg cmp pop inc sbb (bad) and sbb jmp mov lret dec mov movl es add popf sbbb mov and xchg movsl nop dec mov outsb arpl dec inc pop adc mov pop push mov icebp or cli repz xor ja jmp into and push mov or (bad) (bad) aas call inc add mov and addb xor dec testb and jmp and insl add das jecxz xorl fildl xchg adc mov jmp push movb jbe mov xor out popf es sub test test cltd inc clc (bad) out jl dec rolb push sub and es lods cmovb sub movsl xchg lret clc hlt push outsb inc adc rolb aas mov imul popa mov push lock or adc outsl je jmp sbb xor mov sub push into push int3 xchg in mov pusha or push or push (bad) sub sub and lock or ds cmp je scas pop imul je test iret stos loop push pushf lods mov into xlat mov inc lock push or xor lock sub pop add sbb lods sbb add add imul hlt roll test sub push cmp dec fdivs mov adc push rcll lock aad ds inc stc inc mov inc cmp out mov mov rcll not add iret and je clc sbb adc cmp shr xlat cmp lahf sub (bad) adc subl mov dec shll sub inc pop insl fild lahf mov rcll dec imul sysret test pop dec mov pop lea gs sub lods dec movsl imul adc in adc adc lcall (bad) mov bnd push dec inc add add enter add jmp jle scas inc sub mov xor cmc or jmp sbb rcrb shlb rclb or mull mov in push inc les inc or pop push inc inc and repz adc bound sbb xchg push xchg jg xchg sbbl add adc pop cmp inc push push ret (bad) sub add imul mov movsb out adc mov adc sub cli (bad) cmp push pop loop nop sbb cmp sub pusha add aam mov les cmp adc adc test jmp mov into adc dec jbe je adcb or cmpsl push aas push fcompp xchg adc push jae push das jbe rolb add push aam cmp inc les loop cmp xchg mov push xchg mov jp fs mov callw mov leave je insl dec add push stos mov xorl sub outsb in out int3 push fcomps sbb test jl ret fmuls ret push or leave or rcl push lods in jno adc es cmpsl hlt xor adc jp mov dec dec inc add ljmp inc les add jb cmc and and adc ret pop xor or jne pop int out mov xor xor imul xor and shll (bad) mov movzwl and inc pop sbb fistpl fwait (bad) js mov ja inc pushf fwait and les dec or inc add add mov (bad) xor sub push out push mov stos jnp mov add jo jnp xor or jmp pop daa and mov pop mov mov push add insb inc cmp cmp sub sbb or inc sti pushf (bad) jmp and stc das subb mov inc shll test inc pop enter into sahf adc push mov or arpl decl dec dec dec inc inc push inc inc outsb inc xor (bad) mov ss pop cltd enter jp mov or ret jb leave inc sbbl out sbb sbb cmp and and out or lret pop (bad) std push (bad) jo cltd push push andl add mov mov pop outsb popa sub xor adcl addl adc icebp jecxz pop adc sarl dec das (bad) or cld sub adc dec xchg nop bound sbb hlt sbb inc add xor pushf es sub dec loopne int inc fsubrl or or dec (bad) xor popf aam je xor ret inc test and sbb mov lret loopne pop sub nop enter into or add test sub mov sbb inc jl add push cmp and nop push enter rcrb repnz inc xor out add rorl (bad) aam mov rolb ja pop push fistpl sbb push je test sbb sbb int add sbb insb inc js inc cmpsl or rcrl daa add mov into inc adc mov fadds aaa lea js cs mov dec jmp mov dec cli outsb jge dec mov jg adc push cmpsl fcoms stos dec xor xchg mov fwait repz mov loopne cmp lock pop cs add test xchg mov and lret jno mov cmp sub outsl pop les add and jbe mov mov aad add out or or push loop movsb dec mov add pop jb xor sarl mov inc lock cld bsf xor pop and adc imul aas jne test and mov js lret sbbl jno or or sbb push or pusha fimull fdivl sub dec (bad) mov test adc daa aas lret stos or pop pop adc and and es push push (bad) jo pop xor arpl les addb push xlat loopne,pt and pop inc add dec pop jnp mov dec popa push mov in and shlb push push lods inc popa push or pop aad das mov scas popa clc cmp or mov ss sub daa mov xor pop add adc xor cmp nop add sbb ljmp push push jg adc test push cwtl pop mov popa push popf pop lahf popa dec cmpsb pop out daa push (bad) pop imul jo and call sbb rcrl cwtl jle cltd sbb stos adc sub test cmp loopne dec push imul sub out or lods (bad) or and insl inc pushf insb js add mov adc pop mov imull sbb add jbe inc xor lret test lods je sahf pop stos sub adc lods sbb push cvtps2pi rorb pop xor mov call in aaa dec lret or movsb pop jg movl adc sub mov dec xor mov adc pop and xchg add or inc stos outsl mov xchg and mov dec inc mov xor lods cltd adc pop inc ret daa inc sub add sub scas add bound or jbe insl mov add mov xchg popf inc xor add lsl pop fdivs subb inc push fidivr add push pusha ficomp lahf adc dec and and pop mov dec out push dec pop xchg inc mov mov push sti xor mov (bad) mov clc imul and pop push inc outsl push jg loope cmp xchg push mov cmc mov cmp movsl and int out dec xor adc sti and ljmp pushf sub movsb shrb adc jmp push add and int jnp insb add pop push cmp jb add cmpsl in and fwait rcrb add xchg xchg imul dec or cmpsb xor ret faddl pop pop sbb push add sti ja sub sbb cmpsl xchg and xchg push push add and test sbb push rcrb (bad) mov push sub push pushf push imul in mov jmp xor mov mov ss in cld imul out bound sbb and ret push sbb jp jmp test sbb pop push rcll mov or jbe insb je push xchg cmp push repnz lods mov sbbl pop aas rorl lods pop stc xlat inc pop cmp cwtl pop mov mov xor test and inc inc ret mov dec adc je push sbb test (bad) testl dec xchg (bad) sbb jmp std cltd or xchg fcompl mov xor sbb mov test push cmp fs andl pop icebp rcrb sub or push and loope dec iret adc xchg orps js out cmp adc pop jo or loopne pusha shrl mov out pop dec mov punpckhbw or movsl inc add dec sbb xchg lods popf pop and xor xor mov enter inc loope pop xlat shr jne mov test dec in mov inc das sbb cltd cmp loopne jae jne subl sub das arpl xchg push imul add mov jb xchg popf fucom push imul mov sbb test fildl ss push adc mov push (bad) out popf add pusha jmp and cmpsl add mov pop imul push pop push adc adc push mov ret add inc pop cli fisubr test adc faddl add arpl ljmp mov in pop int3 mov cwtl fistl or inc pop (bad) iret adc nop outsb ret loop or (bad) pop push fistp add shll push daa mov or mov jle ja xchg fcomps aad inc xchg and mov and rcll or inc imul mov outsb pop (bad) mov mov push adc sbb xor cli rolb shld inc lea movsl adc sbb jle scas loope sub rorl jmp rolb jb sub or add push add popf out sbb xor (bad) jne cmp sbb test hlt xor mov mov mov mov stos inc call nop je cli jmp enter dec add mov jecxz xor add push adc call jle xchg ret inc add mov xchg sti mov les mov aas jo inc cld ds test imul out cmpl or fadds in cmp add jecxz fs or push add aam inc adc lret lods jne mov mov or rorb xor sahf mov add cmp adc sub dec or fsubs aad xchg sbb gs lcall sub fstpl sbb push dec mov sbb popa dec (bad) mov hlt push hlt in adc std sub iret add mov inc mov fisubrl and addb pop ljmp sbb pusha (bad) les lret add and (bad) mov or mov add add sbb inc rclb in mov lret and sbb imul test dec rorb add mov test mov dec or push pop push hlt xchg xchg pushf in (bad) and add push sub movsb clc adc mov imul loope test mov test adc xchg ds jle sbb jbe xor push mov stc push mov push dec xchg xor pop mov shlb incb dec or clc add inc push push add insb sub adc js adc or stos ds arpl and push cmp xchg movb dec in cmp dec mov ja adc xchg dec mov sub add aas out movl fdivrl inc not inc sti push cmp loop cmpsb xorl scas add jae or lods mov mov cmp pop (bad) dec loopne xchg ss dec dec das inc adc push mov xchg sbb jg pop jnp cmp bound cmpsl les dec movsl sub or push inc adc xor pop xor aam arpl fcmovne xchg dec cmpb sbb push xchg push cwtl add push (bad) enter cmp mov push enter (bad) cmpsb xchg sbb out cmp inc add and aas loope leave sbb mov loopne push push ficompl mov int3 add jmp push adc inc shlb sbb test jo cmp (bad) pop xchg jno and test or and mov mov adc fwait inc stc push dec xchg lock scas clc adc inc fldcw cmp je orl xor sub push push cmp jne sbb dec pop inc dec xchg add mov (bad) dec lret imul rcll jno popa movsl mov jns test ljmp (bad) aam mov nop hlt adc sub push or push aas jnp mov add lcall shr add jbe pop hlt xchg add nop push xchg adc cmp push (bad) insl sub pusha xor dec and arpl sbb (bad) adc push dec adc xchg dec jp mov (bad) and sbb and pop das push jp fist pop cmp add cmpsb lods rorl leave adc add movsb or sti xchg mov adc (bad) and sti int3 jno and movsl pop cmpsl adc push ja incb cmp cmp es inc movsl aaa jo hlt clc jl xlat fisubrl aad aam pop pusha xchg mov or insb loope add xchg push jno xor and mov daa push inc je imul push xchg pop push adc or xor jmp roll ret in sub nop pop xor les iret dec or arpl push les mov loopne mov xor dec (bad) rol cmpsl (bad) push xor lock fstpl aad push push mov (bad) sub dec popa stc popa or loopne add cltd sbb or inc stos pop testb mov mov mov stc or sti outsl and pop pusha jne xchg shl mov movsb ds push fnstcw inc pop mov mov idivl pop rolb aam push cltd cmpb add mov sub pop daa orl sub mov sub lock sbb movsl dec mov loope fsubl pop lock push out or and xchg mov mov pop sbbl jecxz fldt inc dec and adc int pop push cmp xchg movsl mov scas xlat cmc add jp daa dec dec pop addl lods (bad) or adcb xlat lahf (bad) imul or jg add jo push jbe sub daa ds push mov enter imul or rolb pop clc inc jne dec iret dec xor dec and add inc pop test (bad) mov push add and cltd add pop addl mov in sub jge,pn mov sub cmp sar push pop jbe inc sbb aam rolb mov stos insl sub add std insb cltd idivl sub sub push push aam jge lahf sbb inc call jmp sbb ret push or pop sub (bad) mov inc ja push stos fdivs pop jbe negl sub sub mov das jo mov push pop jne jbe jg rcrl and aas mov ret jne xor mov mov lock or cwtl nop scas (bad) lret sub stc cld js adc add mov xchg add lods jle,pt mov mov or (bad) mov adc inc add nop xor and popf hlt aas fldenv arpl js pop (bad) aam jnp idivb add fcoms or add jecxz adc push fstpt leave pushf into add xchg jo cmp int3 xor adc (bad) inc or gs je aam push ja mov pop and andb or xchg push adc in sub enter daa xor aas je ret das jo,pn fstpl fwait adc xchg xchg sbb scas leave fisubl loop movsb push lea into int neg rorb repnz movsl adc push fsubl mov xor shrl lret inc inc stos mov (bad) mov icebp cs and mov add nop js pop jecxz jge mov mov das sbb jecxz (bad) arpl xor stc xchg xchg xor push add sbb inc pop xchg rep scas and adc push clc push pusha pop repz pop hlt imul sbb or stc ret sub inc pop dec repnz add imul ss pop cld sub or xchg or mov mov adc rolb jmp rcrb in (bad) imul jle popa les push jnp xor or sub push pop dec push aam sbb stos popf les std imul andl inc xor mov btc (bad) push popa ljmp pop rep xchg mov jl jp insb sub dec add xchg inc rolb imul je test aaa lds add sub pop inc pop pop sbb adc imul scas sub dec adc jmp or sbb pop nop lret int3 enter inc add rolb adc sub mov cmp (bad) nop and or jg inc je bound int sbb dec (bad) jmp call movl sti test mov jecxz dec popf or sub push adc mov mov lcall popa es cmpb sahf add push jge dec pushf loopne xchg add mov sbb sarb push jo sub (bad) pop fsts ljmp prefetch push add cwtl sub ds mov mov fs hlt mov xchg popf pop hlt dec push mov sysexit jg inc dec and movsb push scas dec mov insb pop pop jle pop icebp fiadd insb push push into push cwtl mov loopne xchg scas inc mov adc cld imul xchg or (bad) out xchg mov xor dec addr16 sbb leave leave leave or in in icebp repnz in in cmc div clc in in stc cli sti cld in in std (bad) jmp in in loope jecxz in in in out in in jmp in in out out shl in in rcl aam in in (bad) xlat fsub in in fcmovu fsub in in (bad) shl out rol roll aam adc mov mov daa movsl add scas aas cmp adc ficoml xor or je (bad) movl adc and and dec cld addl jmp mov cs dec cs setns mov adc push jae dec test ljmp add movsb in jge test xorl or es into or add nop iret testb (bad) cwtl jg jmp xchg inc add add cs add in or cs or or cs or in adc cs adc adc cs adc in sbb cs sbb sbb cs sbb in and cs and and cs and in sub cs sub sub cs sub in xor cs xor xor cs xor in cmp cs cmp cmp cs cmp in inc inc cs cs inc inc inc cs inc inc in cs dec dec cs cs dec dec inc cs dec dec in cs push push cs cs push push inc cs push push in cs pop pop cs cs pop pop inc cs pop pop in cs pusha popa cs bound inc cs gs cs push cs insb inc cs insl outsb mov daa in push push inc inc mov jne sub arpl bound out pop aaa addr16 gs push outsl outsb outsb mov mov or sbb insb daa addr16 jo int3 mov gs sub jl fisttpl jo (bad) mov fucomip mov pop popa fs outsb xor pusha inc je insb loop sbb call maxps jbe pcmpgtd pop jae fiadd subps or xlat out jae jne pushf mov mov (bad) pop das push incl imul xchg xchg pop jnp xor pop push jo ljmp gs daa mov mov jae pop sarb pop inc dec jae enter or add outsl fsubrs daa dec push add pop es sub rclb jae arpl push inc jns das push xlat adc scas das push ja shrl das iret aaa fcoml pop dec pop (bad) das inc (bad) mov cmp jno stos clc pop xor notl pop pop and mov insb pusha es and lea frstor mov pop cmpsl cmp pop inc testb jne gs inc daa mov inc jp push ja popa push scas sbb in out xchg stos xor daa push xor jo jg add pop push insb popa jo fs adc push pop das push jp sbb mov push dec sub test jae pop dec outsl lods dec lods popw sbb mov dec sub lret cmp aaa xchg jae inc gs cmp insl jae push jne outsl daa insl js mov outsl pop imul daa pop pop cmpsb pop push xor fld inc outsl outsl ret int xor and lods jbe in unpckhps inc daa out (bad) hlt dec dec clc mov inc dec xor es outsb push das push pusha orl bound inc dec and fldt xor add push xlat insl xchg add mov add div sub das aaa pop mov xchg inc cmp inc add dec hlt aaa push iret test int3 loope lock jp push cmp in push inc pop cmpsb mov push imul inc lods add (bad) and popl inc js xor or (bad) mov jne pop cld cmp adcl dec pop call add push jle insl mov insl pop mov adc or jle sub mov leave mov dec call addb jno mov mov dec arpl xor outsb or clc jmp (bad) out rcr nop cmpl fisubrl mov dec push push loop inc inc roll mov nop mov loopne or adc push rorl xor stos (bad) jo or pop fldt push je fsts mov adc add adc js scas mov test xchg pop add leave clc pop fistpl daa jg sbb sarb dec jecxz cwtl in jne jb out and movntps (bad) dec pcmpeqb inc into test mov popf jne cmp xchg cmp ss mov add (bad) jg or pop or imul out xchg es and add jnp inc iret jl push insb mov mov adc push cmpsl pop lcall pushf mov xor call orl xchg addr16 xchg add sub mov (bad) or mov mov jp gs adc inc enter jl adc sarb inc inc jne inc adc mov inc jmp push lret mov sbb and cmp mov lods xchg jge mov and jge mov jno mov cwtl aaa outsb mov push in and inc add outsb push add and das call cld add nop adc xchg lods push xchg jbe cld orl add ja in stos fsubr fcoms daa and or mov aas sub jns out push pusha jno xchg movsb out sahf out (bad) xlat call int cwtl sbb repz adcl fsubrp cli les out cltd push and ret pop mov mov and jbe cs cmp jb hlt sub insl dec xchg cmp leave lds inc xor in push dec cs sub fdivs cwtl and cmp cmp inc (bad) xor aam cmpsl and cmp ja xchg shlb jmp les ja mov outsb pop sbb pusha std out nop addr16 aaa push push adc iret and and test sub and and int3 or je mov xor loope and or or xchg push popf mov imul cltd xchg pop dec and inc or daa push adc adc sbb subl and lcall aas push lcall lcall cs imul xlat mov add stos push mov subl fwait movsl movsl cmp ds mov das lcall out cmpsb int jge clc mov in sahf pop insb fdivrp cmp pop lahf mov fidivr roll push dec push cmp mov xchg insb push fsubrs loopne mov inc call sbb xchg test loope cmpsl mov push movntps sbb (bad) and adc mov adc push push jl popa popf icebp (bad) mov xor sbb inc xor test inc and inc add mov mov orb mov add lds pop int3 ljmp dec adc lods xchg push mov insl xchg pop mov popf sub xchg (bad) xor inc dec fidivl es add clc clc jns dec lcall push xor mov or aas push push mov push shlb and add iret in rcrl cmc in push pop out gs mov jo or pushf mov mov xchg cmp or fcmovnu mov ljmp push or aas ficoml sub add add nop mov lret loopne cmp cmp xor sub mov mov out mov or or pop mov push test mov insl daa pop cwtl and cmp sbb sbb rcrl in hlt repnz mov and mov push push add mov lahf xor sub adc test lods mov inc add add xor add leave pop addr16 mov fistl jg and mov mov or jle adc iret nop cwtl popf in nop add mov test dec pusha popa jl dec xchg ret mov add in add sbb add mov xchg mov mov sub xlat iret xor enter inc jbe add out test cltd or mov adc mov mov orb sub sbb fcmovnu sub sbb icebp sub fisub mov xor jle enter hlt mov xchg lods aam push mov cltd inc fisttpll pop mov xchg shlb stos cld add pop xor imul add pop or pop fiaddl test add std and pop outsb bound xchg imul dec fisubl (bad) push sbb xorl jbe push mov (bad) and cld push lahf js adc mov shlb sbb adc (bad) and xor xor add mov leave sub xor xchg into outsl outsl sbb or pop mov (bad) sub test inc std and xor adc push mov mov clc andb inc sub inc jns push inc mov mov cmpsl xchg xchg sub movsb or imul loopne shll shr in sub insl inc fisubr inc cmpl cmp pusha aaa test inc hlt mov movsb rcrl add cli fwait daa cmp adc cs loopne inc mov push dec nop mov test pop fstl xor pop sub xor ss repnz push pop and inc rcl mov jg roll mov scas or movsb fldt push lock push mov add leave push pop mov les pop movsl nop cltd mov frstor push add pop mov inc jg sbbb sbb popa call dec sbb mov movq jmp lea adc js xchg jecxz xor hlt fidivl mov sub add lea mov or (bad) xchg or loopne sbb xchg dec hlt cli xchg push push push sbb cwtl or pop mov push (bad) jle nop dec inc pop inc sub pop (bad) or inc test fsub je daa frstor xor js mov pxor nop cmpsl rclb mov dec loope pop rcrl mov sub lods pop icebp negb cmp push hlt inc add lock dec in lock in cli into adc add pop or push call xor iret sbb imul cmp (bad) lahf aas push mov push inc and (bad) call test out push repnz test call dec aas and test test mov aaa in hlt mov insb scas test lcall xchg pop cld scas lret ficoml cmp inc addr16 inc nop pop outsb jg push stos dec jb add dec mov insb pop nop or jecxz popa and jae sarb jo dec leave add adc or roll push (bad) pop add adc loopne inc sub jl adc stos or sbb sub lea ret push pop jmp jmp jns cmp lds inc add xchg lods adc push mov lods std fisttp mov outsb and jae mov (bad) dec xchg or jbe add (bad) xchg cmpsb insb fbstp mov movsb mov mov lea sbb push jne add dec outsl push jne das sti and stc push gs add popa je popa inc bound popa jb inc jo jns dec imul pop push insb pop jne sahf in rcl gs dec arpl jbe xchg dec dec jg cwtl lods test lods pop mov std fst (bad) jg fs insb outsl bound mov xor bound inc pop aam add add add jmp sbb mov mov ret add inc push cmp push xchg or pop (bad) mov and fmul movsl dec sbb add cmp jno pushf negl popf test lock pop mov insb sbb push lahf add xchg and fistp inc sbb addr16 cmp sub or loopne adc push cmpsl sub add push jl push aam cmp clc jmp sbb cwtl mov push test mov movb inc xlat jmp xchg add test (bad) scas sahf cmp jmp pusha adc aas push jo stc iret xchg mov stos sub (bad) mov rorb jne (bad) mov fchs pop dec pop les repnz sbb adc mov pop xchg dec cs push and jmp mov inc ss mov outsl mov sub add daa and sar sub cld aaa notl (bad) repnz xor fs mov movl or je (bad) push and imul test add xchg inc test dec xchg add push xchg xchg cli das push push sbb inc inc xor sahf mov cmp xor stos das out nop adc push adc ret daa mov sarl add dec pop in xor cmp dec js rorb mov scas jb das lods mov mov add movsb into or adc sbb pop in xor inc jl and mov pop add sub cmp mov add pop (bad) jbe aam test sbb add mov cmp ds mov inc daa mov inc repz fadds in cld ret mov mov push addb push lods roll leave prefetch or mov mov add inc add add inc mov cld dec adc stos mov add aam or mov bound add lret jecxz xor and dec mov lods insb cmp jne mov pop daa push pop int3 adc icebp add in inc add cmp pop sarb pop cwtl nop into inc xor cmp xchg inc or push imul inc mov pop xchg shrb fisttp cmp cwtl adc fnstenv jo and sbb in pop inc push aas dec das xor mov dec daa xor stos xchg dec inc dec mov insl sbb outsl and jb adc jb or mov mov add xor iret xor jl pop push lea shl push cmpsl xchg xchg push dec (bad) scas sbb cmp iret and adc inc add and loope push xchg push inc inc xchg fidivl fadd rcr cmp fisttp and fcoml cmp dec mov ret pop push pop repnz js add sbb mov push pop cmp (bad) test adc aam ds jg cs mov jg dec outsl cmpsb nop pop pop and push pusha mov sbb add mov nop push mov aam jno (bad) cmp add and pop add add push cmpsl add aas or das push or inc push dec inc nop fildll mov test in pop frstor lea ficompl xor dec add bound (bad) and add add clc rorl mov inc xor xchg decl or aas flds bnd or sahf mov push popa movsl mov ficom dec jl rcr aam outsl arpl push dec mov push fsubrs pop adc test sbb cmp dec in leave jns bound cmc into jmp jge adc push cld xlat in mov (bad) xor push repnz arpl in insb cmp and in (bad) call aas fsubl loopne mov and mov movsl cmp push dec fisub lcall push fisttp mov and add jl mov insb mov adc arpl push adc adc ss gs mov mov or es sub mov test xchg orl mov loope loopne mov loopne mov mov test (bad) mov dec mov jp jb xlat or sbb xchg (bad) ds sub in add or add stos or das adc mov jle xchg test adc ljmp enter insb add push (bad) mov jb in pop adc mov mov enter push and inc rorb pusha lds pop cmp or test xor dec mov cld ret insb test push or xor push or xor add or subl jnp sbb or add movsb fbstp adc push repnz icebp mov pop jp jnp cmpsb bound sbb sbb cmp push and mov and hlt xchg mov mov xor add arpl mov fnstenv push test push hlt jnp cmp pop insl addr16 or addr16 adc push ret mov fiaddl lock rolb nop cmp fwait xchg pop imul mull nop mov mov sub pop add add adc pop mov nop pop andl pop xchg ss push sbbl push loope dec inc sub add ja sbb gs push sti jg mov mov xchg pop fcmovu pop cli push dec push push or or aas jg lcall push push jbe icebp inc repz xchg pop dec imul and push or dec dec idiv ja iret sub int3 mov dec xchg std (bad) dec not sub xchg push loop daa adc cmovl pop ljmp pop pop add jns fisttpl notb dec inc negb mov idiv push gs and jg lcall xchg bound xor push add jle mov mov xchg arpl xchg out out xor sub mov push je xchg fwait jp add cmp fbstp dec and scas push aas divl push jg in inc xchg xchg xchg jecxz (bad) or xor inc cmp ficoml fwait ret pop nop neg imull rorl or movsb out cmpl xchg pop push notb and mov inc xchg pop push pop out lret outsb sub xlat fstpl divl paddsb and jecxz loope ret mov (bad) push pushf gs xlat lock push in std pop cwtl jno je imull sbb adc mov and mov in dec xchg repnz divb lret inc nop adc or fcompl adc or xlat add and aas mov push idivl ror popf fcoms pop xchg inc or das push adc popf arpl sbb insb jmp daa inc enter pop cmp and sub mov sbb daa pop pop negl call xor (bad) push imulb enter clc adc push adc dec add mov push and in adc xor and and sub mov iret std add imull sahf xor cwtl mov push pushf lahf lcall adc idiv (bad) cmp mov mov aam and sbb scas loop dec cmpsl jp,pn pop cmpsb adc xchg xchg xchg add mov mov jecxz sub mov pop sti jl sbb adc pop jns lcall dec adc aam rcrb xchg mov loop int3 psadbw sbb pop je pop or sahf fisub or jbe sahf negl jg mov push dec testl sbb pop cld xor ds je inc imull adc sub xor fisttpl xchg shl mov xchg (bad) or test imul pushf mov push adc addr16 mov insl push fldt cmpsb popa push and mov cmc out sbb sub imul push outsl pop pushf mulb mov sbb loopne mov mov stos clc std dec sub jp or je out es jns push mov add xchg or sbb es mov mov mov dec add push cld cld xor fwait dec popf gs test pavgb out add loope fidivl ja negb out dec test jge push push dec cmpsl pop hlt cmc adc or sahf add pushf pop (bad) clc xchg sub imulb mov hlt lret fldcw sub ljmp negb fcoms push out xor cltd notl cmpsb jo sbb add inc lahf je xor cli enter push adc arpl decb pop push nop das sbb fsts movhps notl inc mov pusha bound clc test mov cmp ss out les push sbb dec mul adc fldcw xchg xchg dec mov stos add decl das xchg push adc pop cs fnsave pop std jle xor add or mov pop fwait int3 divl add mov cltd sub sbbl in pop sub pop xor jo push sub inc inc lock xor testl cmpsb sub and pop js test pop pop xor push push jg outsl dec (bad) or dec je mov js push loope push es (bad) or push mov jb adc lds out leave stos hlt ljmp push loope cmp dec xor sub sbb nop adc xchg fwait mov lds or jge outsb divl sub std or je push lock adc jg hlt or repnz push jl pop lock (bad) les div fildl mov das ret push clc cmp repnz jmp roll pop push push test (bad) mov inc push scas and jmp in jle popf mov int3 push cmp fistp inc test sub imull dec mov sub pop mov mov aad or (bad) out dec dec xchg imull pop pusha pop pop negl (bad) loopne les cmp add das mov ljmp bound test repnz js jmp in mov fsqrt out popf jp xor add cmpb add mull clc mov jge inc repnz popf xor fwait decl pop scas xor sti icebp push rol jp pop mov jbe cs shlb (bad) and shlb fidivl inc dec flds imul js out sub je adc or clc push ret sbb sub and in js add adc mul xor ret cmpsl push lret ret mov lock xor mov adc repnz es lock enter mov or jle test pusha jno sbb sbb pop aas sbb adc inc imul iret out cmpsl jbe cmpsb addb and jno fisubrl xchg fdiv int3 pop jl jbe xchg push cwtl fs cmp mov sub add fsubr jg dec divl and jbe cmp cmp ljmp or push repnz dec or in rorl add dec fdiv shlb frstor das sbb inc pop dec (bad) repz sub ss test idiv out cmp test (bad) xor loope push ret rorl repnz mov imull adc popf add mov fimul mov xor pop lods xor les add pop add cmp out notl (bad) pop lods daa xor xchg cmpsb stos push out scas adc (bad) out inc jb xchg rorl je inc or notl scas lock sti outsl loop pop cmp ret cwtl ja mov cmpsl xlat mul add mov cmp das and xor (bad) xchg mov sub mov dec xchg negl js mov and xchg mov leave ss icebp add and sbb out add ss addr16 pop orl mov outsl dec testl imul ljmp xchg push fsts (bad) or push push adc push adc das cmp cmp divb aas lea sbb scas adc inc daa testl popf je sub mov les or fldt in mov inc ret add lock neg jecxz outsb lods xlat mov test add pop or sbb sbb and clc lds xchg xchg push cmp xor fisttp add xor or bound fiaddl push mov dec jl ret popf fbstp dec adc bound loope dec and jg mov jecxz push xchg (bad) notl test add insb icebp in outsl mov add mov loop sub jae push les outsb cmp lock negl lcall (bad) xchg cmp xor js sub inc adc hlt in xor fsubs ret or and pop pop negb pop xor pop mov inc push add mov inc adc xchg pop mov cmp jmp loopne loopne divb xchg push (bad) negl add cmp into and cmpsb int3 cmp cmp shrl inc adc jmp subl les inc pop mov int3 or (bad) dec ja ret add adc maskmovq negl push adc xor add movsb adc int pop aam pop and sbb cs mov sbb or mov divl jge pop jo loop call stos mov hlt jnp insb idivl pop dec sub mov cmp lea cmpb es out add fs imulb xchg (bad) dec jmp push (bad) xor lahf (bad) xchg jb xchg lahf xacquire dec je js mov pop repz jl mov divl mov inc or divl (bad) jno inc sub sub push add ret divl shrl xlat daa dec scas cmpsb or xchg arpl mov push mov mov xchg pop sub mov js out xchg xor push jp mulb sbb push addb sbb push push outsl or (bad) lret loopne and sub mov test sti dec push adc sub inc xchg fist xlat xrelease outsb adc xor out sub imull pop sub cmpb call jo js into test and xor pop neg (bad) jbe in dec jmp stos in fucomp aaa push pop jbe sub and idivb cmp addr16 xor xchg sahf fcomps sbb and loop xor and icebp ret cs xor cld jl clc rorl cli inc divl lods div mov (bad) not jmp negb pop inc sub cli icebp add jae dec not xchg sub cmp xor jb xor je,pn bound daa pop call aad sub push outsb lret mov dec sarb rol test cmp cmp and negb xor je lret mov push fcomps pop data16 test shlb mov pop scas lock push shl pop or inc in inc test fwait hlt cmp out (bad) sbb orl adc stc je mov xorb jne cltd inc sbbb cmpsl call jmp push (bad) dec or xchg or inc adc push dec outsl push lock js repnz bound ret cmp xchg (bad) testb iret xlat shl jbe pushf fmuls fsubrp dec push sbb scas shlb in jns sub nopl sub aaa push je add jo mov lock test int xchg fimull popf mov pop add xor or in jge les in repnz jl jnp in mov jl jp jb loop dec jmpw fiadd jo dec sbb mov xchg pop push pusha push dec mov push inc cmp inc imull loop ret add and adc nop xor out hlt ret out mov shl mul pop cmpsb (bad) xor les ret rorb lea cmp movsb (bad) fisttpl adc fimull test dec dec divl lds fcomps sub imull and push inc mov das xor in ds daa adc loope pop xor shrd je js jne out push cmpsb in mov sbb in (bad) push mov inc idivl shl leave inc xlat ja push push dec (bad) jp sbb xor xchg lds notl ret inc or aas iret jb iret rcrl push fsubs rol add (bad) leave xor popf (bad) movsb mov jno dec fstl add sub bnd or dec adc or sbb das je xchg in xchg loope inc cmpl push dec fdivrl nop out fadds and insb mov loopne mov push (bad) ret lock sarb and xchg and mov or (bad) xor and xchg in mov pop jp inc jmp in pop xchg push push xor popf loope adc jl dec mov add (bad) mull lret sbb sbb popf sub scas div (bad) jno cmpsl push je pushw bound add pop push push cwtl insl pop mov gs cmp sbb cli push push cmp roll mov ljmp inc and xor into xchg jl divb inc idiv mov add mov inc dec add outsb push movsl and sub sub jmp and push fnclex inc or neg mull loop imul add push enter loopne hlt pop stos negl adc pop sub cmp mov mov push xchg inc or mov ret fiaddl inc cmp inc test test add add lods (bad) mov or xchg xchg cmp adc scas xor or (bad) mov jb sub jbe outsb into insb push test rolb xchg adc punpcklbw fist push scas (bad) (bad) cmp push repz push pop sti mov pop push jge and push (bad) add pop sub inc dec jno into inc pop repnz mov jge jno jno (bad) push push push loop div cmp or cmp mov sbb or sub loop loopne jmp push ljmp imul addb push out sbb movb repnz or push add xchg imulb xor cmc iret mov out mov mov sbb or js pop add into mov je inc rol dec adc (bad) cli scas mov cmp dec xchg push cmp dec dec inc add push sbb arpl pop jp cs inc mov ret fbld ljmp inc sti xchg testl dec (bad) or bound add mov push shll mov dec arpl es push cwtl aad cmp jb xor rorb pop inc jb add inc in mov add dec sahf and jle out popf mov cmpb sub inc dec dec sub mov (bad) xchg stos into loopne idiv mov push loop mov std push repnz mov (bad) outsl jo ds insb xor idivb out sbb mov cmp adc ret push or (bad) idiv sbb cltd std cmc add dec dec je jb jo ds mov pop arpl je,pn pop add in cmp cmc scas std div ds daa arpl not daa xchg adc aaa daa daa and mov mov fsubs jno or divb mov dec push xor push out clc aad ds movsl aam push cmp pop hlt sarl sub idivb (bad) shl adc jne outsb testl xchg imul xor je popa cs idivl bound push jl xor push add insb div xor aam je or pop jns mov jecxz inc arpl xchg fnstcw test push inc mov loop sbb stos mov mov lret negl inc pop pop xchg adc (bad) imulb adc xor ret scas sbb (bad) ljmp xchg or clc dec inc sub sub lret pusha pop cmp cmp jbe xchg xchg xchg pushf data16 jne sub shlb es gs aaa dec and popa inc mov adc fcmovbe inc stc inc mov (bad) lret roll popa add (bad) jae and das xchg arpl idivb add jle jo lcall push add not lret push or sti mov jb mulb xor (bad) neg cmpxchg jp sub div dec mov dec sub sub xor ds mov test or js ja roll out pop call jle out in sbb call and inc fnop jmp rcrb (bad) imull insb cmp (bad) outsb call lds scas andb sub sub shrb cmp data16 add xchg sbb out pusha shr inc ret mov ljmp insl icebp dec or int fiaddl sub push xchg pop scas mov mov pop push sbb and cmp pop inc insl fisubr loopne out js gs and sbb adc dec lods inc mov and lock out mov insb sti iret mov dec imulb lock and jae dec out notl add enter sbb out and cmpl mov mov or out divb (bad) aaa aaa test mull mov cld call fdivrs cli pop (bad) movsl push dec cmp sti xor aas in xchg outsb and popf repz add inc jo out stos dec rclb repnz lock daa pop data16 dec (bad) or scas enter push and mov cmp movsb or and push sbb cld xor inc popf add daa dec decl cwtl ja repnz xchg mov test notb or insl scas add outsb xchg sti imul daa std push mov out or adc (bad) mov rcrl cmp jbe sti fs cmp xor sbb daa mov divl aas push add add idiv add add int xchg lahf ja rorl sbb ds mov pop out imulb mov cltd mov sub pop sub or adcl cmpsb fwait push je inc inc hlt nop mov and and dec pop arpl hlt mov mull mov orl fisub push inc testl or rcrb mov stos sbb outsb dec cmpsb insb mov in pop adc adcl lods push mov cmp or movsl dec xor mov adc (bad) dec or push jmp ret mov xchg dec (bad) adc (bad) sbb or add add sbb push ljmp push sub mov add subl inc cmpsb repz jns and movsb (bad) (bad) movnti xchg lcall mov repnz cwtl jmp outsl ret addr16 cli and inc jae loope,pt sub je dec sub outsb fld pand inc div add mov adc pop push imull inc daa push adc add lock movsb dec jbe push xchg testb hlt and repnz je or pop repz xor jp into inc shrl add mov loope aam and mov mov not jo mov adc sub mov or cmp inc test sbb fsub lock scas negl test sbb jnp add sub push daa adc add out sbb mov jo lea stc shll dec sbb out ret outsl mov ret data16 sub inc into xchg inc sbb dec push out sbb and popa mov sahf iret (bad) adc cmp push cmpsb adc in (bad) (bad) mov sbb inc mov xchg inc ds outsb sbb testl in jecxz pop (bad) int3 push fucomi enter mov mov fstl testb lret jp dec add imul or gs enter test jo cli and dec sub int subl add fs addb xchg rcrl push in loope outsb lea out fwait call jl inc xchg push mov jge xchg arpl cmp daa adc subl cltd xor pop jns lahf fsubp lods mov leave add push xor jo out divb dec add adc xchg push push inc fdivl sub lock dec dec jns sbb mov call ret dec mov dec xchg sbb test push inc push xor cwtl in data16 enter vmwrite jne xchg clc mov testl jl in add pop mov push outsl mov pop scas mov adc cli mov arpl ret imul insb jnp jp sbb or cs aam mov enter sbb sub mov (bad) sbb xchg inc sbb ficomp negl imul negl sbb push cs pusha or jo dec jb xchg arpl loop dec adc sbb sub and adc fadds pop pop test ljmp negb into cld xchg inc inc lahf test push or jmp mov je (bad) or dec imul pop int3 aas mov jg outsb ja sub mov imull (bad) xor stc adc or adc push push or inc test jl add push jl inc push pop sahf out mov (bad) dec icebp pop or push adc push bound or pop call add in (bad) out jae cmp enter cwtl je or into ret add inc and movsl xor adc dec inc idivl adc adc imul mov test dec sbb call dec stos fadds (bad) sub fsubr test loopne cwtl out std mov or dec inc and add add sbb cmp jno inc push les imull add push lret mov push sbb ja xchg shrl jmp sahf stos in push hlt xchg mov jbe mov mov mov insb sbb and je mov dec push pop ret or mov mov into cli xor sbb lds jle (bad) or adcb cmp les pop adc out mov push xchg int push jle mov or jle repz divb sbb loop divl cmp lock and fldl xor inc sahf sbb lods cmpsl les jl imull imul pop jl imull in add or divl daa jo lock insb bound or inc clc push mov jo jo adc pop out popf negb inc fadds mov xor pop jnp daa (bad) lods adc lcall dec xor sub mov aas dec lock mov ret add inc xchg add cs push inc mov mov (bad) (bad) lock mov (bad) mov sub push dec outsl loopne mov out pop sbb jo cmp mov lods and push jecxz testb adc push ret adc jg jnp push (bad) sbb ss aas das push call and xlat sub xor push stos inc xchg sti add mov pop jo pushf mov loop in adc cmp cmp cmpsl push add orl int3 pop mov xchg popa (bad) sbb xlat inc ljmp push push testl cmp lcall clc dec and in jmp sbb fcomps inc push aaa dec adc divl adc scas mov aas mov sbb jbe jno cmc pop add dec call add ffree daa inc (bad) es jbe cld aas lcall or sub push hlt mov aad or imul sahf pushf mov fcompl imul jle mul lahf pop lea mov jge add adc fsubr jae negl ja (bad) inc inc cmp ds sub xchg movb inc mov shrb xchg maskmovq notl test pop and push loopne ds repz or stos add pop stos mov data16 vpavgb jle sbb je add divl jecxz sahf popf rcl ret push mov hlt addl and cmp scas pop fimull push jns je add add xor or mov xor mov mov movsb jns dec xlat pusha jl sub mov lret test push or movsb je mov aaa mov dec es mov sub mov cs push stos lret dec jecxz and xchg push lret push sub push mov loopne (bad) (bad) shll out xor mov add pop ljmp rolb movsb push jg insb and ds (bad) paddw (bad) jo xchg mov out testl xor add dec jmp inc je ljmp aas enter pop scas jge inc mov jb mov jl xchg (bad) imul push sbb outsl push outsb cmp and loopne mov dec or (bad) dec out jne xor (bad) pop adc or inc imul cmp (bad) pop test pop cmp mov ret push dec pop call jge testb lods icebp loop out mov push lahf mov dec cwtl adc cmp pop adc cmp cmpsb cmpsl jo loop add sbb js sbb into lods shrl mov sub sub aaa inc cmpl mov adc adc enter icebp add xor push aas push negl jo push lock push adc aas adc test stc push daa enter inc inc cmp (bad) xor pusha orl out out lret add cmp push mov jmp outsb cmpsl jns push ret out sub add mov imul dec push into or sbb add mov sub pop mov aaa adc js repnz lahf int fmuls mov inc imul push notb mov cwtl in imul push cmpl into mulb rol inc icebp mov sbb mov stc orb pop scas add imul adcl shrb xor sbb push jno int3 and in xor je notl sub adc mov addb xchg idiv dec sbb test cltd jecxz ret and cltd jbe test fwait adc mull js pop rclb wrmsr pop and mov pusha xchg and sbb xchg sbb jp xchg stos notb fwait xchg mov pop add push sbb jg dec dec push add pushf cwtl sbb push add jno and mov jle orl (bad) mov push mov pop add mov jb and and out shl adc scas mov xor negl je faddl pop sbb xlat xor push lods add sub sbb orb push jge xor xchg div mov test sub sbb dec xchg xchg scas lock or sub or lcall lret shrb ret repnz adc lahf cwtl xchg dec adc sbb (bad) fs inc or stos ret scas out pop sub jns sbb jo popa mov xchg in in test pop pop dec lods mov std mov lock add test je sub xlat jnp sbb fisubr das lock repz ficomp xor mov inc inc test loop push mov jo pop mov push cmpsb xor orb cmc sbb test push jbe sub dec repnz sahf fstpl lea xchg and rclb popf fldt cli add ss (bad) mov mov mov jp pop pop movsl mov mov jle inc dec sbb add dec push sahf and or mov js bound sbb dec or repz mov ss stos cli jmp scas push ds int jnp sbb test inc mov xchg lcall ds cltd jmp (bad) sti es mov adcl cld pop popf out test mov cmp arpl addb roll inc push ds pushf sbb negl adc scas aad rcrb mov push loopne mov jno testl fdivl adc (bad) pusha sub push (bad) das scas inc fstpl sub loopne and push adc cmc loope jno notl sbb in inc pop ja push ljmp mov jae (bad) stos xchg cmp je,pn push cwtl icebp or xor aam leave sbb adc loope test shrb imul divl push fisub jle es fld pop test test adc (bad) idivl std notb test mov xor loope jbe,pn adc mov mov mov push mov je and mov rcll fistl imull test mov and rolb call adc enter mov inc jne sbb scas loopne cmp jns xchg sbb orl cwtl xchg inc into popf in imull (bad) imul in add jp lcall and inc or (bad) aam dec inc int3 std adc pop ds aam xlat testl sarb dec jns add into mov (bad) adc int3 data16 je pop rcl xor ja lods je dec imul lock or inc sub mov loopne (bad) mov addr16 pop div lret ljmp dec repnz fldcw rclb cmp testl call xor cmc hlt es notl daa arpl jno mov stos aam inc imul xchg lahf and cmp rcr dec xor icebp aam pop call pop mov mov fadds scas test xlat inc cwtl sbb lcall test mov ret ljmp testl rcrb dec dec divl (bad) hlt adc sub jp or pushf jb mov insb add ret xchg push jle insl (bad) lea idivl push div or mov jo inc (bad) mov inc les fs bound cs rolb sahf xor adc shrb mov push (bad) push cmp (bad) dec xor fist jo sarb mov push popf adc push jb add mov inc dec js pop jne cmpsb mov push leave mov ret xchg lret stos mul cmpl mov fcompl xor push inc and inc stos in daa lret fdivrs dec jge out cld in and sbb je dec (bad) push sub out pusha inc sbb (bad) insb dec xchg or cmovne inc pusha jnp add or xor mov hlt je repnz (bad) pop mov xor out lds clc jmp imull inc imull inc gs xchg xor mov cmpsb push inc cmpsb daa shll sbb xor sbb aaa outsl sub xchg data16 pop cld mov add cmp ficomp sbb adc mov loope notl mov dec aas mov inc ss sbb or jnp aad mov and cli out shrb mov pop or subl jno test adc dec sbb fadds pushf in mov push xchg mov imull mov cmp inc dec mov popa out adc pinsrw adc inc lret (bad) jbe (bad) mov negl loop rcl push inc lock jp xchg xchg shr movsl mov insb mov scas xor or cmp lret test ljmp movsb scas inc fstpt rcr lcall mul pminsw inc js sbb cmp dec sti and jne das push in adc push xchg inc js push xchg icebp or or cmp mov movl mov rorb sbb jnp add jo push (bad) idivl popa pushf cs jp dec or push popa pop and xor das loop dec jb js mov inc jge cmp pop loop (bad) (bad) or jnp cmp pop cmp loopne cld dec insl cmp mov jne arpl xchg out mov mov push dec mov jae mov clc loop shld sbb adc negl dec popl mull pop push push notl and loope pop ret mov loopne out out mov inc xchg out (bad) enter fucom adcl fsubrl test roll jle mov xchg inc adc add push inc add cmp dec add xor sub cmpsb dec lcall lods push mov or adc lret jecxz sahf divl xchg push adc clc add lods xchg in or arpl mov xchg outsb xchg mov sbb mov fisttpll daa or sub dec mov outsb (bad) or xor and or cs pop or cmp sbb ret and cmp aad lock div aas push int mov mov imul xor lods aam cmc icebp ficom fcmovnb mov pop inc int insb stos sbb stos mov sbb pop clc add and sub mov subb gs je mov pop in fcomip scas mov jmp mov nop cli imul loope and loope mov mov mov add out lcall sarb shrb imul add adc cld push dec clc jg mov fist pop sahf dec test enter push les cli lock or mov add test inc into out orb sub pusha xchg imul out inc sbb rorl xchg int3 jle aad std mov arpl divl into lret (bad) jle out mov repz mov lock dec divb pop pop mov add loop add xchg (bad) mov sub lock inc (bad) js jb mov or je xchg adc outsl cmp sub cmp pop sbb xchg push lret push push push cmp xchg xchg popf dec add stos cmpsl pop mov ret push inc imull dec lahf ret popf mov add fsubl pop and daa in rolb jae pusha repnz imul sub stos push jp push mov idiv aad aad cmc nop stos gs cmp inc mov pusha sub xchg (bad) repz inc sbb sbb sub jle push and enter push mov in or pushf je cmp cmp push insl push cld dec inc call push push pusha mov sbb sbb call cli or into xchg mov fs lods into lcall int xlat xor cmpl push mov shr xchg jecxz jge stos jmp mov dec popa addl (bad) out dec negb lea out sub loopne das mov test loope inc cmp int3 arpl pop popf push and push inc push sbb mov or (bad) testb pop ljmp out test rol cwtl pop inc mov mov mov std mov notl xchg scas or pusha jge iret add add xor hlt mov dec movsb adc xlat pusha pop mov xchg mul (bad) lods leave mov jbe loope sbb gs cmc mov mov cmc pop mull dec mov cmp mull mov add lcall mov dec fwait push mov fdivrs pop and and hlt imull inc xchg mov xchg or inc xchg out sbb je xchg (bad) dec aaa (bad) pop iret jmp push sar imul lcall rclb test mov xor dec cmp mov cmp cmp pusha lea scas sbb sub repnz jns sbb orl in or push sbb out cwtl and data16 sub and js jecxz cmp loope sbb fcmovb lods fadds xchg aam sbb in ljmp dec mov ret lods xchg jle mov pop rcrb pop push xor dec sub (bad) pop inc icebp adc dec inc mov fs sub sbb sub cs loope mov (bad) cli cmpsb adc push cmp or iret ljmp imul popf or dec push mov sbb sarl jnp lds fistpl scas fistpl pop push xor sbb inc out xchg fstps or imul adc cmp outsl aam sub jno add and in imull sub sbb lret sbb int3 fidivrl mov daa dec pushf adc inc dec xor jl andb ret fcmovbe sub xchg testl sbb mov xor in enter ficom fisubrl pop push enter sbb test (bad) es xchg or jns insl adc shlb cwtl jg jmp outsl (bad) shrb notl sahf test mov cmc enter (bad) push lods call add xor adc mov adc mov sub mov out dec mov aam pushf fwait push fwait pop les aam psadbw call mov movsl and mov adc xchg inc lea or pusha push xor addr16 in mov (bad) dec loop je (bad) cmpsl js pop xor mov cs loopne pop test jno (bad) jecxz nop negl dec cmpsb fisttp push (bad) xor lock mov fisubr (bad) and jns divb arpl imul jmp inc xor xor dec mov scas and notb jne loopne xchg jo insb (bad) loope stc test cmpsb push les psubsb dec call push xchg add rolb scas xlat stos push mov sbbl cmc mov test or lret mov cmc mov in loopne test pop add bound loop test mov push push add or mov xchg or clc test divl and sbb jecxz lcall test lock (bad) je nop adc and pop notb push mov add cmpsb out dec js sarb dec fidivl lods sub adc sbb xchg fdivrs mov lods in scas adc add leave cmc movsl dec std fildl push ds mov fstl (bad) mov dec imulb or dec add aam pop pop rorl ror icebp sub sub cli cltd clc push shrb (bad) in adc bound jg test mull or scas or cld add cmp pusha mov cltd loop adc pop repnz fstps or or or or out mov mov sub mov and data16 xor sbb out test aam aas maskmovq (bad) dec jmp and or bound cli adc sbb cmp adc push push dec jmp mov arpl inc cwtl dec cmpsl cwtl stos sub and into inc hlt adc add jns stos dec pop lock outsb inc je decb clc inc negl std pop int3 out (bad) call lret add pop xor cmp xchg or popf cld adc and push pop push sub inc lds cmp mov es aas in pushf push fmuls ss dec push push pop mov iret ficompl ds test adc je bound je jp iret sub out sbb pop push mov pushf into mov cltd jb outsb sbb imulb adc mov pop sbb es sub jns pop out hlt addl je ds in (bad) lock mov push xchg repz lock push out imul dec add mov testb mov push jmp fcomps popf and xchg movsl xor inc testl xchg notl sub add push fsubrl or or jle movsb push movsl dec arpl ja,pt xor (bad) jne xchg fstp (bad) negl in xorl popf lcall mull pop ljmp test fstps adc rclb rol inc movsl (bad) cld call pop push mov popa add mull or loopne dec cld shr xor dec cmpsl aad fsubr xlat ds lahf and fldl cld jae xor or sbb cmpsl lcall daa jge ret pop cmpsb loop cltd jge icebp sub mov loop push mov adc ljmp movsb movd inc mov (bad) mov mov xbegin lahf adc sahf cltd push ret mov push mov subl push xor mov scas notb lds xor inc mov shrl dec ds mul xlat daa adc and insl sub mov jbe sbb (bad) ret sub pop mov mov sub repnz cmp xchg push les push test repz xor mov mov arpl xchg xor or ja shrl icebp insb cmp mov sbb pop cmp or popa stos das insb fwait pop and jb cmp adc inc cmp cmp push (bad) or mov jge daa push notl xor shlb insb mov mov and idivl or mov (bad) jno push inc (bad) sbb sbb mov test pop add sahf pop cli test ds sbb loop int enter mov cmp pop cld push jg cmp xor (bad) sbb sbb adc inc test out cmc lods mov mov mov insb or sub jbe sti mov jno int adc adc lahf push add or jle and out xor into (bad) idiv testb fdivrl push imul and xchg xchg sbb cmp out sbb mov int3 xor js push or arpl sub lret lock push jg sub cmp push nop jle and test sbb xor dec nop pop in or add mov push or xlat in out xchg inc mov mov mov mov in and pop jl mov sub adc add fidivl decl push ja jne inc ss add adc xor fcomps pusha ret imul repz mov inc jmp xchg ss inc int3 cltd mov rcrb jbe mov andps and imul mov mov mov popl add sarb in (bad) mov neg movsb jo repnz or inc pusha cmpsb jnp frstor nop sti lcall (bad) call test and add mov xor cmp daa bndstx flds outsb jbe sub lret mov daa add jne insb bound add inc (bad) xchg adc sbb outsl invlpg test sbb jns mov aad inc and dec jo xor (bad) push fild push inc push ja bound push ss popa outsb ss outsb xor pop outsb insl imul loope push xor fiadd sahf mov add push pop and ja ja movl stc adc mov test xor sti sahf mov pop push mov push sbb call sahf push and sbb cli or push jo push inc push and movsb rclb cmpsl pusha cmp rolb cld add fsubp push xchg push pop test cmpsl jl jl iret inc stos push xor add cmp out mov and clc push mov push push inc push push insb sbb jnp inc add call mov mov push and lock es dec repz mov dec hlt les test xor inc test (bad) iret jle or push sbb push call (bad) push and movsb inc je fmull lods push jnp in roll sbbb aam dec sbb int3 cmpsl jge adc out loopne push cwtl dec test sti into fadds js push imul ficomp push sarb add out or mov jge imul push mov les push push mov imul cmp push popf adc loopne ds push or mov push in mov sbbb test xor out js xchg les or mov sub or pushf mov ds loopne mov adcb ja out pop sub loopne addr16 push in mov push rclb push fnsave mov sbb aad pop mov bound frstor test popa adc popf (bad) das rolb push sub sub mov scas add xor mov fidiv ds dec call and js clc and xlat iret enter fcomp flds jno dec (bad) (bad) loopne jecxz in adc mov mov and and popa je xor leave rcrb xchg addl cmp push push aam insb pusha adc sub jbe adc push jg test adcb aaa sbb xchg dec add push push inc aam sbbb aas scas incb or push es adc repz sub cmp repz dec push pop pusha repz repz iret repz nop cwtl mov iret repz enter out iret repz sahf out sahf or sbb sub jb loopne cmp cmpsl add add add jb fs sbb movsb and pushf cld mov or enter mov in leave in leave test je fcoml leave inc in adc aaa stc add push pop and xchg insb call dec add popa or adc iret imul mov adc fs ss test test enter sahf out cld adc and inc out sahf out pusha insb adcb mov add cmp sub sahf push sub aas (bad) leave sub cmp jmp pop jbe add push and push add or popaw frstor mov jns xlat adc pop push or xorb sub xor push dec fdivrl mov pop push call aas jnp cmp push nop jg movsb aas add mov pop mov push enter jg lahf neg dec call mov mov mov push add jns out push out sahf cwtl adc adc adc popf out fmuls in add add push jns jnp sbb push sbb push adc sahf out jo test sahf out sahf pushf or int jns sbb rclb repz repz push inc sbb push pop insb rcr orb sahf out and mov add out sbb roll add repz dec rolb xor out sahf out mov mov sahf mov pushf jns out mov cld js out out cld (bad) mov imul add jbe (bad) cmp mov xor push punpckldq fldcw pop ret add jle jmp rolb or mov ret or test push mov fcomps push scas daa cmpsl jno stos add sub jns cmpsl les push test (bad) sarl aam hlt add cmp jnp and data16 inc dec pop out iret rep je jl sub rep add adc add std add mov lds jmp pushl jge dec (bad) jle out sti jmp out out add cmp cmp unpcklps cmp cmp adc xor ss prefetchw daa daa daa daa or adc es daa daa pop add jb or xlat jo jb push or iret repz push fmul aam pop iret repz hlt in add mov xchg push lock xor negb push faddl mov movl out pushf mov fsub repz out add adc iret repz dec pop pusha je xchg cmp repz mov ds add adc sub adc add inc mov or pop (bad) cltd lods outsl adc jge push pop int cmp (bad) push add or int3 out lsl insb jns out push std jl mov out sahf out stc mov les fdiv in cmc add cmp repz adc and repz repz dec lock iret repz out je mov cwtl cmp repz lods jmp ljmp add add inc xchg adc adc ret iret call (bad) roll outsb mov add or bound rolb push xchg adc iret mov inc adc nop pop lcall or add nop dec inc or or insl insl sbb mov mov adc pop add das (bad) inc ja add push arpl adc push loopne xlat ja fnsave inc mov pop pop jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add mov pop loop pop push inc pop cs repz inc push mov fmul repz pop jo fs iret repz nop call iret repz xorb iret (bad) hlt cwtl sar movsb ds repz cld mov add shrl push add iret repz adc int3 and cmp repz adc inc adc cmp repz out cmp sbb jo add sahf out sahf andb sub sahf out mov out sahf out (bad) xor rcrb cmp cmp lock jns pop xor inc iret repz push dec cmp repz xor inc repz repz lods push pop mov pusha pop int3 jo fdivrl repz fs nop push or out sahf out cmp je sahf out sahf sarb loopne test out lock test iret repz fdivl nop in repz repz xchg clc push cwtl out sahf out mov adc sahf out sahf mov nop jns out lods dec mov sahf out mov sarb rcrb mov enter cmp adc int3 rclb rcr cmp repz aam xor data16 repz inc fmull push sahf out sahf push loopne pusha in jns out jo sub out nop lock mov hlt dec mov pusha (bad) xor out cld insb rolb dec js cmp repz test or jns iret nop add out sahf adc and xor out and inc sub repz out sub mov iret repz sub cmp cmp repz nop inc jo repz repz mov cmp rclb sarb repz pusha call jnp jle (bad) push insb and iret repz jo push and xor repz js test push cmp sbb pusha push mov mov adcb aas nop mov and mov push out (bad) ja cmp rclb (bad) rclb pop inc or add jg cs leave je (bad) dec adc cmp repz mov repz xor aaa jp cmp mov out sahf rcr call iret roll or and cmp repz dec push pusha insb js sahf (bad) int nop lods scas clc push add push adc sahf out sub dec pop out sahf out jo mov lods mov add mov add push cmp nop push nop imul mov aam nopl cmp push inc inc daa xor cmpl add push push negl push push sub mov adc inc cmpsl inc es xorl or mov pop mov push dec dec mov in push ja fidiv cmpsb hlt jle push cmpl push (bad) or or into out mov push dec push sbb and fdivl movsb jne cmc ds aam scas addr16 mov sbb xor cmpsb sub fistpll scas outsb je jo mov popf ja add push mov mov test sbb out mov sbb into or js cmp sbb cs test add scas jne es es jmp xor out cs adc mov dec (bad) or sub loopne jle sahf or pop inc add fidivr push hlt es mov sub mov lret and roll mov outsl jge rcrl test js adc or fildll inc sbb enter cs cmp outsb xor push push in test add mov push (bad) lods cs test add push fcomps sti push fiadd xchg in in add stos jnp sbb cmpsl push pushf inc je sti push add push xchg push icebp loopne xchg cmpsb jl dec (bad) ret cmp (bad) cld mov cmp xor push (bad) test cmc jecxz addr16 pop add iret call push add inc ja add icebp fidivr dec inc adc cs fimul movsb inc data16 out inc xor push mov jecxz jle inc scas iret dec lock (bad) push push iret ja insb fbld dec cs negl dec div mov es push pushf and cmp cwtl dec sbbb pop insb ds pop add out push sub push xchg dec int3 and inc add push testl stos pop shr mov scas ss xchg jbe rcrl push jbe pop inc mov lock out out dec pop lahf jp xchg jbe fs mov lock jbe mov mov cmp hlt lahf ds das jae loop scas lods mov dec xor vorps push out addr16 add push push mov pop cs or push mov jno pop movb add push imul xor (bad) mov mov push pop dec fbld jmp mov data16 dec aam je rclb icebp mov movsb out xor es mov push in outsb loopne add push push out enter aas data16 sahf pushf cmpsl push fidiv jp lods ljmp fsubs or insb sti pushf jb mov and xor popf inc xchg xchg stos and inc test inc add enter xchg push add andb out adc push pushf and nop in test mov and push adc add mov add fs mov inc xor push dec add add pop dec add pop inc sbb inc and sti mov push and pop dec aaa push pop mov add sub sbb push dec xchg push loop imul imul mov mov push xchg neg std fimul ret inc push push push cs and inc push cs and sahf negl xor dec cmp testb push out imul push jbe dec or std inc jmp push fiadd add adc sub add mov lods in xchg cmp adc imul add iret mov sub rolb jnp ss sbb push mov xchg or enter pop es faddl cld jg clc daa iret xchg das aas push pop jmp rol cmpsl lods cmp add pop or push aas xor xchg (bad) jg add dec ds inc addr16 insb addr16 or push mov movsl mov pusha shll jnp mov psubb jnp loop add push out lock int fwait neg out (bad) cmp mov mov add pop pop xchg lods rcrb clc pop push (bad) aas pop mov imul aas pop xchg addr16 push sub xchg mov xor push pop std lock add sahf ss insb jl (bad) push data16 mov into repz sbbb arpl pusha cltd cmp mov rolb mov lock xor ds push xor out (bad) or push cltd pop (bad) cmp jg add ret cmc jns (bad) cmp (bad) decl cs cmpsb mov add add fwait int inc and cmp mov comiss dec pop sub (bad) aaa fnstcw pop std clc lock aas inc imul add insl jmp notb pop outsl clc popl shrb arpl sub add sub iret xor nopl xchg add cwtl shrl xlat pop in pop and adc jae pop cs add addr16 xor ja pop cld push cmp stos push fs fsubrl aaa adc das xchg pop lock or push sbb loop inc fldcw jge cmp sbb push sub sahf int mov add inc addl fsts xor sbb push push sbb dec rolb fldt loopne jne ret roll lock cmp xor fcompl jl sbb (bad) fstps sbb or test or push insb push shl xchg pushf out and xor inc add add mov addb rolb dec jnp push and add out push add mov jge aas cmp subl mov jnp iret mov repz and daa and mov es xor cmp orl push adc cmp dec push dec push mov neg xor push daa lret xor ficom push (bad) sbb out insl xchg lahf dec daa dec addl daa mov (bad) jnp jae ja push daa clc push (bad) cmc push ja mov ret jb mov adc jo nop daa cmp imul mov xor and daa inc scas mov daa dec sub leave fistpll aas push xor mov xor sub pop aas jns scas cmp push pop push es and int3 push and and out jo (bad) cmp jmp int3 je (bad) pop push (bad) cmp cmp xlat push lret fcomip cmpsl daa push and push mov adc (bad) push data16 xsavec jb ficom clc repz push addr16 or push xchg adc into (bad) cs inc inc inc or jmp std test ljmp or lret (bad) daa inc aad push push jle mov dec dec pop daa mov out in push test incb aaa and dec nop divb add daa fisttp mov daa or arpl dec pushf es adc mov or fild ss arpl daa leave ret (bad) cmc ds shll xor arpl or mov inc nop xor (bad) lahf and repz out fs subb daa push cltd add add daa mov xchg aas daa dec lret ljmp inc inc es mov jnp daa dec add jle xor lock out in repz adcl push test dec inc add adc fbstp xor adc xor push jo sbbl movsb sub push repz iret xchg mov arpl cmpl lcall arpl aas das es (bad) lret iret push out inc in push inc sub ret ret xor inc sub call fs enter pop outsb data16 inc push fwait gs cltd (bad) je push inc mov sti push jle and inc aas call or fsubrs lock cmp jmp dec sbb pop xor dec xchg leave and mov stos mov adc or mov jmp pop mov gs jne adc cmove or sub sar daa jle adc cltd xchg cmpsl (bad) cld test xchg sbb mov inc subl pushf rorl fstpt clc or sbb xchg es gs sub push (bad) daa dec xor mov outsb jnp xor dec daa dec daa jae fsub dec daa clc dec je dec cmp dec jl pop dec pop or rorl jo jl daa (bad) mov mov xor cltd mov call cltd cltd and imul aas mull adc xchg aaa fs popa or sbb movb jb push mov adc inc mov sub ja inc daa int jb shlb push stos sub cmpb adc xchg dec scas inc pusha and cmp pop popa and cmp shrb jmp je loop add pushf loopne xchg daa fcmovnbe ret and lret (bad) aaa into aaa push data16 outsb daa and sub pushf add cwtl stos sub aam cmp ja push insl mov push push pop add push and loop pushf es and stc es mov fnsave push and sub xchg pop dec lcall popa lock daa xchg add stos push into add push adcl aas test into adc aad and add ja scas mov mov and cltd xor mov rcrb js xor mov pop stc pop mov lock in dec jns out xchg orl pop or repz push adc or adc push push enter add aas in in or pop add push add pop outsb add and or push and push or sahf jnp ja pop push sub adc add add add fmull add push stc pop pop pop out add fwait lods lds adc sahf negl daa mov push push and sbb jbe sahf pop adc nopl sbb or pop pop add or jno das mov out push add add iret vandps add cmpsl stc mov and push sub sbb int sbb dec push push push push negl dec dec inc push inc outsb lahf out mov sub and icebp jecxz adc push out sub or aaa jmp pop pop push xlat add mov adc das in movsb lret out (bad) and push in sarl or push sbb sbb sub jnp sbb inc push push pop push push stc dec repz jge sbb add sahf mov push adcl repz push push inc cmp rcl cs sbb adc fdivs push or sbb pop jmp das add adc add fisttp (bad) (bad) inc add add add pop iret shrl push or xor repz sbb push addr16 adc push xchg adc add movsl adc xchg scas xchg push mov push mov add adc mov out jge testb pop stos outsb movsl es cmpsb xchg mov iret repz (bad) jnp push insb pop dec cmp sbb and sbb push adc clc push sub or or cmp test out cmpsb ret cmpsb out daa add fldcw push bndstx and or push popa fidiv ljmp movsbl adc pop cmp (bad) (bad) jmp (bad) imul jnp cmp adcl test icebp jg cmp jns cmp je xor jno jl (bad) ljmp ljmp sbb inc pop adc sub or sbb add push mov (bad) jge stos scas mov decb stc push addr16 inc xor jmp sub sbb sub jne ss pop inc adc cmovg adcl jo mov push imul sbb lcall jge (bad) fistp xchg push lret add lods inc push adc lods jp hlt stos (bad) imul test push jmp jae call dec decl pop inc (bad) (bad) (bad) (bad) jnp cmp jne pushl xor insl inc das push inc ljmp ljmp notl aas (bad) lcall jecxz adc enter mov (bad) fwait sbb fwait pop push mov jnp push push inc shll sub push nop xchg xchg push push sub or push adc call push mov je xlat pop add xchg or out and pop adc int jge sub inc sbb pop jp xchg (bad) (bad) decl adc mov pop inc fidivrl xchg jle mov xchg xorl xchg push mov mov test jnp push jb (bad) (bad) aaa adc xchg push popa dec incl dec cmp (bad) outsl sub inc push ss pop xor lcall push popa cmp jmp (bad) push sub push (bad) repnz sahf scas adc mov (bad) lcall push push inc xor dec xlat (bad) and sbb adc xchg cs push push jmp ret xchg negl aaa scas pop popf xor mov or out stc cmp inc and fidiv cld cmpsl mov mov ljmp xchg call lods mov push cltd call stos push iret test dec movsb xchg inc mov push ret movsb push pushl shlb mov xchg pushl fcomip ljmp jge cltd jp mov (bad) jl inc (bad) fbstp xor cmp sbb push sub adc (bad) pushl sbb gs and bound and xor mov sbb xchg sbb and jl dec cmp sbb pop enter add or out ljmp jle jge pop dec adc out sbb sbb cmp stos push test ja xchg pop adc out fldt (bad) fnsave lods jmp mov fstpt jecxz mov push iret lret into fxch (bad) call (bad) fyl2x mov int mov leave mov ss mov inc mov outsl fildll pop enter cmpsb push lods mov mov cmp jp (bad) cwtl ja (bad) jge inc out (bad) adc jg out push cs pusha ss inc and icebp sub pop shrl cmc push scas push mov mov es push inc jns jp xor sbb adc movl or push xchg inc or push loopne sahf or adc fisubr sbb cmp xor js cmp shrl loop loop jle lret int3 mov mov mov aad push fnop push loope jmp (bad) jmp fcom lds leave out les in (bad) decl mov mov lcall scas xchg mov xchg stos jmp mov push xchg push mov push mov out sbb fwait dec mov (bad) mov (bad) mov mov mov push cmp pop xor pop xor (bad) scas call jmp ljmp sub sbb adc data16 lods sbb popf pop mov jne dec xlat out dec xor xlat lds daa stos pop (bad) push push scas and mov lahf fwait adc aad add push out push packssdw sub inc popa adc call adc push pushf mov push fidivl out (bad) lret push (bad) push mov lods std loope (bad) out out es jmp (bad) (bad) (bad) ss call fadds mov mov fwait xchg ljmp pop cmc jmp jb xchg ja call push pushf jl mov pushl mov test lods mov mov adcl lea sbb mov xchg mov call jbe mov jle pop inc (bad) imul incl dec sub insl inc sub sbb add jle lcall es (bad) xor push push (bad) xor dec (bad) add push pop loopne cs mov push movsl mov dec mov loop aas push mull add jle push push stos ret fwait cmp mov mov hlt fst push out push in in (bad) jmp adc in out (bad) aad out les stos adc mov mov inc mov xorl mov xchg pop dec pushl dec outsb push dec push pop push daa (bad) (bad) (bad) incl push popa lcall jge ljmp mov nop jg mov movsb jle mov and fisttpll mov sar mov jge das incl dec xor sub push into iret repz (bad) mov subb inc pop mov xchg cmp sub pop or mov mov xor (bad) lea add dec adc sbbl pop cmpl and mov push lods fsubrs loopne out imul out out clc mov (bad) out loope,pn lret (bad) mov adc cmpsb inc movsb fwait out mov movsl test mov push loopne pop push ljmp fdivrp stos push cld movsb mov ret lods xchg mov push lcall xor ljmp jl dec mov (bad) jbe mov xchg imul js jle jmp lods fstl lods test mov xchg (bad) mov mov popf cli cmp inc decl aaa incl xlat xchg mov push scas and repnz mov sub sub sbb incb pop adc (bad) and jb mov push inc adc (bad) adc adc mov push mov xchg pop mov scas pop icebp push mov mov mul (bad) in jmp out icebp mov fwait push out fsubp (bad) shll into (bad) (bad) fld mov decl mov pushl insl lds outsb mov insb dec inc pushl dec jbe lods jle mov mov jmp push fisubrl stos scas clc lcall xchg sub bound inc dec aas (bad) pop cli outsb push dec incl call je pop scas mov push push mov jg lds jmp mov push test (bad) clc cli mov jbe inc incl adc push mov push mov test push push ss sub and mov cmp movsb loopne jbe mov push test and mov inc jle dec outsl stos mov and sbb icebp mov (bad) leave mul fcomip out stos xchg fdivrs ljmp test lds mov lods push adc stos push push mov cmp stos clc push sub xor incl (bad) out mov jmp jmp (bad) clc jmp xchg push leave mov std shlb (bad) imul push xor jbe clc sbb (bad) jge sahf xchg mov insl repz xchg insl pop jmp mov js mov shll (bad) push loope jecxz std scas lahf mov mov jbe sbb (bad) repz push mov scas and iret arpl sub btc andl xlat inc fdivl xchg aaa jg (bad) stos (bad) dec sahf push inc mov push or adc test divb inc adc sub fildll sbb (bad) mov rol imul loop lock ret lock lock fcmovbe insl stos (bad) lock ror (bad) leave (bad) mov ljmp (bad) sahf pushl test xchg jno js push jmp sti push fwait inc lahf mov in (bad) out in jle call jle in hlt sub push fcmove push sub pop lahf xchg fwait jge int data16 inc pushl (bad) (bad) cmp sbb dec sub lcall ljmp aaa pushl inc incl cld (bad) test push jle (bad) jl pushl mov int3 mov in lods (bad) insl push fildl mov movsb jb test (bad) sbb pop enter push cmpsb mov push jnp cmp daa push pop sub inc ss push pop nop nop sub push and mov add idiv sub xchg pop (bad) or iret pop push (bad) outsl (bad) dec (bad) jle or jbe in loopne imul lock mov (bad) (bad) into (bad) fcmovnb ret (bad) cli pop mov aam mov scas stos push mov mov mov stos scas push imul dec jbe mov mov mov jle jmp out call xlat icebp xchg (bad) inc cltd jp lcall pushf jl xlat popf movsb outsl push incl (bad) cmp sbb push xor jmp xor cmp ljmp cmp jp test mov outsb pop mov js lods subl (bad) jns popf mov imul shrl jmp mov mov je test adc add cmpsb mov movsb out js (bad) nop out sub pop inc mov mov aaa pop mov xchg aaa sahf pop push and call subb push out xor sub (bad) (bad) mov repz mov push out out (bad) jmp fdivr out aad loopne jg jmp call mov test sahf lcall idivb inc gs jmp inc (bad) jle pop inc lret repz jns mov into out jle out out jecxz mov sar lds outsb rcrl push push les aad push mov cmp pushl fdivr cli sbb dec sub xor xchg sub bound xchg imul jne push push push lods outsb notb mov imul xor loop add sbb lods and icebp mov inc aaa inc shrb lds pop push sub movsl inc add sub andl icebp aaa loope sbb sbb or push push in fcmovbe (bad) outsb icebp in jmp out in push jmp fisubrl int ret adc mov (bad) stos cmpsl (bad) mov mov out mov lock es inc lcall outsb ljmp in in out out stos mov shr push loope lds push jne imulb cwtl ja sahf iret push rclb jp cmp xor adc inc and sub xor jb push out add cmp push inc jle call jne lock jmp ficom sub stos xchg dec mov ss rol ljmp pop inc lcall or (bad) (bad) mov mov ss idivb push arpl pushf cmp inc xor push mov (bad) mov pushl pop into pop popf test sub scas divb push push std stos je jbe push aaa fcmovu mov push inc or fcmovnbe lods clc cmpsb adc ror call mov cmpsb or push dec cmpsb (bad) mov xchg (bad) xorl je push ficomp mov call popa jl in jmp in in pop popa out push (bad) out repz hlt jbe push (bad) (bad) fwait mov jb xchg jae jmp sub xchg jbe xchg push cmp or xchg popa cld and (bad) cmp push (bad) and mov push outsb xchg adc (bad) aas incl push lcall mov mov xchg jle stos xchg clc ja lret ss xlat into mov inc sub adc stos or push stos cmp imul cmp or cmc and mov jp stos add outsl add movsb xchg push xchg (bad) fisttp xchg stos daa bound out sbb cmp and pop xchg mov out jmp js fisttpll iret lds loop mov mov mov fcmovbe push cld push ljmp dec push pusha pop ds cs in fsubs mov out in pop incb cmp pop (bad) in in repz stos lods loope rcrb xchg jo fstpt sub xchg jae xchg rcpps xlat xor xlat push mov (bad) in cmp sbb push and pop cmp out add out push inc dec scas scas sbb jmp cmpsb jl mov mov ljmp adc (bad) pop push scas xchg jge cmp fisttpl addr16 push inc cmp or adc seto pop imul or push fcomip adc sahf lcall test dec (bad) jno ds lret sahf out in ljmp (bad) not int fadd ret scas push cmpsb mov mov (bad) lcall dec or inc inc call movlhps fsubp ljmp jecxz out push sbb (bad) pop jnp insl jmp xchg outsb jbe push mov mov rcrl jae decl dec aaa push sbb sbb ljmp xor jbe cmp xorl lcall decl insb push jbe subl fwait adc xchg jae addr16 test ss sahf mov test sbb (bad) mov push jae popa jns out dec inc xor xchg out adc aaa mov mov iret pop and les idiv test jo push out pop push and sub decl push adc test into mov inc xlat shrl loop lret mov into mov leave lods dec or pushf fwait ljmp lds pop ljmp dec push lahf lcall ljmp out pop inc jmp div mov push stos xlat dec ss mov xor push insl xchg mov cmp xchg xchg ret jp (bad) pushl out cmp pop (bad) aas and call es adc mov dec cmp adcl cs (bad) push push je mov push jle sbb or scas jle push aaa (bad) sbb pop icebp or mov mov sbb pop rdtsc inc sahf mov adc in pop add jo mov add rcll negb mulb inc or movsb mov jmp ror push sub mov cmpsl inc cltd xchg pop ljmp (bad) jmp jo jo push (bad) jns pop call mov nop mov out out pop test jmp push (bad) jecxz (bad) icebp xchg jcxz div push in mov ds imul xor mov mov mov jo xchg jb je out clc or push mov call and cmp sbb bound ss aas push pop insl orl inc mov cmpsb les das cli cltd test into mov pushl mov (bad) lock sub ja mov cmp cs and adc mov pop pop or cs (bad) push push and push js push inc divb xor ret lret lods lcall (bad) fmull sbb mov out movsl mov (bad) mov mov ljmp dec decl aam fs push in out jecxz loop shrb loop loop mov clc jle cmp cmpsb mov push jno ds nop mov push outsl xchg jno ret xchg inc xlat cs outsb int dec insb fild sbb and pop cmp ljmp jl cmp mov xor mov jo sar mov ljmp sbb adc push xchg push andb (bad) je jns popa push push inc xor sub ja adc inc das ljmp loop mov stos push iret sub pop jg sbb lock sbb and xor adc xchg js cmp sarb push mov lods test lahf fwait ljmp cmp jge sub xchg push dec ljmp jecxz jmp mov movsb sbb (bad) fucomip mov jns (bad) jmp call clc ffree cmp ds push mov pushw addr16 addr16 cmpsl jecxz jbe mov imul xlat mov rclb hlt icebp retw outsb int3 dec fcoms xchg pop pop lock inc es pop xor loopne mov pop pop inc call mov lea neg cmp jg mov pop mov cs sti jns push push dec push pop imul pop aas pop or and add out imull xor jle push mov xor push pop pop pop icebp aas push adcl out scas push ret pop mov test push cltd xchg jmp out shrb loope push push mov add hlt ljmp sub push out fiadd pop adc out in push decl loop out cmp push mov fs gs int3 repz mov pop inc pop mov inc (bad) ss int nop push rcll xchg inc jg mov fldcw scas jae decl pop test mov xor jmp pushl aaa out sbb xchg cmpsb jnp mov jmp push mov xor mov jmp push pop cs xchg dec lcall loope xchg pop add and das or cs sub cs cmp jae sbb cs insb fldt ficomp add cltd out mov add cli (bad) lcall imul xchg call or push fsubp scas aam nop loopne ljmp push cwtl in fstp loopne jecxz (bad) ljmp cli mov (bad) pushl ds mov push mov jle sub mov mov je mov rcll ret xchg les aad sar fbstp leave xchg aas pushl sbb decl push jmp sub cmpsl jp dec ss xchg dec lods jle xchg pop mov out adc mov sbb stos and je outsb xor pop push cs and dec (bad) aaa sub adc xlat adc or pop sub divl push subl iret push sub and adc jg incl xchg test jns jl pop jmp inc mov movsb (bad) cwtl mov movsb out (bad) (bad) out mov fucomip out cmc pop scas movsb pushl das ret icebp call int out repnz pop mov pop mov cmc repz mov jo (bad) pusha in fcoms test push mov push mov adc aad dec scas xchg jge std clc cli jb es mov mov nop inc aaa jle jno jbe rclb (bad) decl pop adc dec sub pusha cmp pushl sbbl mov clc (bad) lcall (bad) out sbb int and cs jbe je push or inc xor adc and aas aas pop stos push mov div stos ds insl add add jns out sbb and ret xchg jle or mov jg sbb loope dec (bad) jo inc outsb push dec mov stos push sub push inc call xchg ss push ffreep mov loopne (bad) dec sahf xchg pop lods lock das push jmp pop call rcl out call push (bad) cli sti call jmp mov pop push mov lods test mov push test sbb lea les mov cmp push push pop dec rcl in mov push push mov push ret arpl sahf out nop (bad) fistl push stos outsl push decl pop incl sbb sub add xchg xchg arpl daa syscall lret out ds lahf push xchg daa mov outsl bound jns out cmp es sbb mov pop add push add xchg andl roll sbb sub fldcw insl sbb loope xchg jo test out (bad) jge push fmull add call ds push fistpll in (bad) sar jg clc aaa sbb xor jmp push call lahf xchg add cmc ljmp scas sbbb push mov out fdivrs test and pop xor ljmp out dec jbe arpl sub mov mov mov push lds movl test sub sbbl ds cmc add pop ret or js std push lods and cltd push mov sbbl add push pop pop push push cmp dec and pop or push jo maskmovq idivl mov pop testl pop loopne out pop and sahf cmp push addl push xchg (bad) scas jns dec adcl cmp (bad) (bad) in in in inc fsubrp jecxz in pop loop push fcmovnu in faddp clc or (bad) mov push and mov lcall adc sar cmp lcall test jbe,pn jg jmp push push addl pop pop imul jg out xchg pop cs je xor mov xchg aaa jp mov push xchg out je imul cmpsb push jbe jmp mov jg aas (bad) cmp pushl inc pop pop cld cmp sub pop iret (bad) mov sbb es mov mov gs pushf jne dec rorl aas xor rorb in add push sub dec xchg cs push notl xor js sub inc negb push std sbb mov mov push inc push mov or repnz imul out cwtl loop push out (bad) (bad) mov (bad) lahf mov pop dec push mov jl inc jmp hlt mov dec push mov out mov pop pop xchg mov pop incb mov cmp xchg lea cmpsl pop push ds mov dec push push rol les add cs cld fbld lahf push and push xor jp mov ss ret xor lcall xorl pusha adc inc aaa push jne movsb adc sbb add pop mov notl idivl movsl or or je out negb sub and testb cwtl out lods sbb adc sarb adc jecxz loopne fsubrl push xlat out jecxz in push jl sbb lcall mov sbb call out fmul dec lcall mov lods jl ljmp push mov minps out stos jmp decl xchg enter cwtl jp mov dec xchg push rolb lds lret add push mov sub aam out (bad) lock idivb (bad) aaa mov adc out jb pop cs dec (bad) xor inc ss sbb (bad) jmp es and das add out xor jno,pn sahf aaa add rol stos xlat jle xor push rol roll into xchg clc mov test sub shr (bad) sti jmp pop pop movsb lods (bad) loop pop imul jecxz sub cld pop fcompp fstp loop in out push mov lods mov jae loope (bad) fnstsw pop mov or mov stos jp ljmp pop jle mov pop push pop (bad) inc push pushl fmuls int3 mov rorl ret push lds add outsl push lret xchg pop pusha loop pop dec iret mov dec and xchg loope push dec (bad) push pop xchg cmp les jns popl sahf xchg mov jo,pt outsb fs dec push ds inc mov inc mov jmp inc mov div or out cmp and clc mov ljmp add jmp lcall mov loop out fnop adc xchg fdivrp pushf jno mov test push pop fistp jno call (bad) (bad) fsubp jno push xor std (bad) (bad) jmp aam mov test pop jge les pop push pop (bad) (bad) mov pop mulb sbb mov xchg scas xlat jecxz pop rclb ret push les ds lret push into pop call ss xor mov fldl push lds mov out sbb movnti into inc push jbe popa mov sub das ljmp fildll or into test imul xchg aas (bad) push pop testb jmp adc pop mov out cs fiadd loopne (bad) fistp inc sub out imul in cmc stos rcr call push jl fimul rorb mov addr16 ds loopne jns cmp push ret jge js ljmp imul (bad) adc (bad) popa cld pop xchg out push lcall ret leave (bad) lret je iret repz rolb or in or lds repz push mov test mov push pop sub cmpsb push das sbb adc sarb sbb loop push neg push sbb dec push sub mov fwait int push out sbb adc sub and in add push mov push movb movsl outsb mov (bad) fiadd out (bad) loopne add stos sahf sahf cmp test lcall push push push das push dec repnz cld (bad) cmc in call pop mov push scas jp mov rcll daa outsl lds (bad) mov mov mov retw jne pop push push movl push lret into xchg je popf ret ss push mov incl or push mov scas sbb iret repz popf xchg xchg lock outsl xchg gs scas dec sub shr aas push adc adc cmp push sub mov push jo dec dec or fbstp sub sub cmp sahf mov jnp (bad) imul call fcom fimul mov (bad) (bad) fldl fdivl (bad) loopne out (bad) cwtl jge mov pop inc pop sub cmpsb adc bound pop pop repnz inc jns inc (bad) fstp out mov out scas test push cmc clc loope js push mov mulps pop push call pop aaa and lahf lcall cwtl push jb mov jecxz addl loope cmpsl push iret rcll cld pop xlat push fcoms and aam adc adc jle mov je cltd mov xlat sti divps push pop and cs in push add div scas hlt adc inc sbb cmp (bad) jg mov js add lea xlat fdivr xlat fnop lods jge xlat pop (bad) push fldl fdivr adc (bad) lret (bad) (bad) jp cmp adc out arpl sbb pop sbb and call fstps jmp ljmp scas jns dec mov (bad) insl inc pop mull pop rsm push cld jne pop push andl xchg (bad) popf sub pushf cmp mov jle es hlt jo sbb lret push pop rcrb stos or sar aad cltd push xchg jae jbe outsl (bad) gs in add mov stos pop xchg jns xchg mov lret or pop (bad) xor cmp test es xchg es or xor loopne ljmp xor dec push (bad) js sbb xchg scas fldt (bad) fcmovnb mov fild aad pop add mov pop fcmovnu aam cmpsl out lock lds cmpsl pop fbstp in (bad) cmp daa and (bad) adc jmp imul push ja das push sub and pop incl inc sbb push imul cltd test jbe icebp call test (bad) cli and into xchg jae push aam call mov ficompl int pop hlt and icebp cmp add scas pop xlat pushf push (bad) xchg xchg fwait cs and and sub pop lods cs pop (bad) sbb repnz push aaa add loop xor push cli call push es and xor xor dec data16 and dec movsl call (bad) (bad) aad (bad) aam pop cmpsb popf adc faddl out sarl call frstor pop (bad) out cmp cmpsl push mov pop (bad) xor dec inc sahf aas rcr fistp mov jmpw lock pop push push scas push scas push lds mov negl pop pop shrd std push push mov mov jbe push mov push insl pop int jno je mov clc pop aam fcomps pop pushf push fwait push xchg outsl (bad) pop xor enter test xchg push decb sarl (bad) pop outsb popa dec mov stos imul pop or ror adc add push push stos pop inc dec add data16 pop pop adc into push inc mov push add push xchg add xchg nop lret out (bad) out xlat int sbb pop (bad) fcmovu rclb inc test (bad) push jmp inc iret mov pop rorb fimul sub mov inc lds ljmp push mov fdivrp (bad) push dec sub (bad) call and je jne scas in xchg mov ja pop adc (bad) sbb (bad) adc pop xor mov stos xchg ret pop rolb sarl fstpl flds add test lahf mov push push pop mov fwait and ss mov mov sbb pop pop shrb add add insb fistp sbb pop (bad) lcall dec pop sbb sbb mov mov fsub mov (bad) flds ficompl add lahf jmp out ss jmp adc mov imul addr16 mov pop call cmp lahf pop imul pusha push push out ljmp movsl jno ljmp sub xchg scas push incb pusha sbb pop aaa jb jne inc pop mov addb lods xchg (bad) jno push int3 xchg add out fwait jecxz lods pop popf push (bad) lcall or test lcall dec jge es pop or cmp add pop adc push dec (bad) cmp xor add scas inc dec jmp pop pop dec dec enter mov rcl cld loopne mov out sarb push shl fadds out aaa add mov push push pop data16 adc div push stos or test stos loop sar (bad) (bad) pop out push in div in (bad) push xchg mov push scas push xlat stos sub outsb call pop sbbl push sbb aam mov aas call pop jno push push pop es ja (bad) mov (bad) (bad) sub cltd jge clts jp jp testb jg jbe pop popf push loopne pushf fcoms sbb lods fadds incb lcall sub push and cmp sub pop cmp repz outsl pop sub imul add and cmp add push out add lea (bad) mov shr mul rolb jo push js fcom ljmp push call iret pop mov out imull mov mov pop pop (bad) out cs nop mov push jmp inc cld pushl cmp push stos jb scas push ljmp jne,pt inc dec pop xchg jo mov push sbb sbb push push push pop outsb jb or nopl aaa scas add adc loop lds dec pop ds clts jbe fstpt cmp fildl fiadd loope fistpl dec xchg push cmp lea (bad) clc cmp andw fs inc cs cmc jmp pop in push aaa aaa pop std pop les lcall cmpsl push or sub sbb mov jecxz xor mov adc xlat push (bad) iret xlat scas xchg pop mov jmp daa xor aas add mov inc mov imull and (bad) cmp fs pop xor (bad) jns cmp push cwtl sub dec push jae iret fsubp mov jo and (bad) push or fistp cmp mov es push pop loope js daa das aas dec cmp pop pop (bad) pop pusha ret insl pop push gs inc mov fild pop (bad) cltd jbe ds ja (bad) lahf jecxz mov mov ficomp es push mov test es sub pop gs (bad) dec cs ds sbb outsl adc popa push add daa popl add ljmp pop push inc jecxz lret repnz fsub inc pop fdivrl fildl neg pop aad push out pop in ljmp adc fbstp scas inc lds pop sbbl (bad) push push cmp loop bound adc and test xchg and outsl stos adc stos push (bad) push pop jmp or je xor pop sbb jmp scas mov cs push out jne and pop and pop push pop push (bad) repz sbb pop push mov mov incb outsb (bad) cld shlb push pcmpeqd loopne jbe push ja jg into pop in push popf je mov dec and mov decb pop aad add xor decl (bad) lcall andb adc imul fldz rcr rclb (bad) xlat into (bad) fildll jo out (bad) (bad) mov mov sub push mov incl sub jmp out imul stos adc push out and imul out movsb lds (bad) cld addr16 xor pop out push ljmp pop cld adc ss out call loopne cs sahf xorl div and cmp jecxz and push and sbb dec push pop dec rolb add pop (bad) pop fstp jo mov xchg dec test cld test (bad) (bad) push fstps cmp (bad) loope push in out or (bad) lahf inc mov push into into imul dec sub mov and pop adc mov inc push test cmpsl daa push add xchg scas (bad) push inc cmp in iret in out rolb fprem push imul (bad) loop push mov mov sbb cs stos mov sbb scas push (bad) sbb call mov inc outsl dec sub incl fstpl cld pusha sub pop (bad) (bad) decb repz scas push outsl cli decl mov xchg mov inc mov pushl (bad) into fbstp sub and notl inc pop and and mov ds pop push push sbb add push icebp and cmpsb fs pop jno fisubr pushf push cltd jns lcall (bad) and push loop mov sbb or loop decl ljmp das adc in (bad) incl aad inc fiadd (bad) add aam hlt das das mov out not fcom or sub into lret incl adcl push add in sbb mov outsb mov test ja ss mov sub (bad) (bad) pop inc cmp out repz outsb scas out mov dec push scas scas push add inc cmpsb pop pop in xchg cmpsb sbb lds decl lock pop mov ds and mov push ds push sbb push movzwl jecxz clts xlat pop (bad) arpl pop not mov push cmpsb jae push fstpl loopne jecxz fistl or mov push push dec out inc incb mov pop and inc (bad) pop cs mov test mov add (bad) pop out aad push iret xlat and int out out movsb adc push mov push push out (bad) mov mov insb push (bad) ljmp push (bad) pop int3 mov cwtl jl pop xchg mov inc cmp dec (bad) stc hlt push mov lds or lods push scas (bad) lods scas in cs jb and imulb sub in lea ljmp addl (bad) push dec xchg pop (bad) addr16 and and andl cmp add xlat pop push pop dec jmp cmpsb xchg xchg xlat scas xchg push cltd je fiadd loope jmp fcompl adc shrl ss sbb sbb scas pop das cli fisttpll push (bad) out add ror sub push pusha pop mov loop push pop inc cs fist subb adcl div (bad) scas shlb mov adc movsb mov lods pop aaa cld icebp out jmp fwait jg jae das pop fildl outsl dec mov jb push lods push call loopne jae movsl call jne mov pop dec decb jge roll jno pop jle pop inc addb out pushl sub test andl push add jg mov nop call imul mov xor (bad) pop dec push pop mov popa lock cmp pop push push pop cmp mov pop out das bound mov fidiv jne outsb sub inc sub jl ret push push pop jmp ss pop mov stos test loop adc out enter (bad) out into movsl (bad) mov inc mov aas cmpsl bound push sahf outsl pop lds popa xor jo pusha inc push nop jle bound aam (bad) bound or pushl sub xchg jbe ljmp daa inc cs (bad) popa pop xchg out dec push scas push adc jo mov mov push (bad) sahf mov cltd pop lock je mov xor inc out inc (bad) lret jmp dec das fs or jecxz push insb inc mov push xor mov add add jne jg jbe add (bad) push lahf jnp xor inc (bad) loope jbe jge and (bad) push ljmp psubb inc pop decl ret mov mov out pusha rcrl dec outsb rolb xchg jg test cs mov clc pop scas mov je repnz in (bad) mov cmp xchg xchg (bad) jmp loop (bad) incb dec (bad) mov or or fistp rcl cmpsl sbb mov scas imul insb sahf stos outsb push lods push scas scas push add jl jno incl jp outsl mov jp adc inc mov push xor pop xchg jb and mov lahf (bad) js xor cmpsb insl mov inc cmp push sbb pushf cmp sbb push sti sbb pusha push (bad) bound out shl jmp pushf jle pop lcall dec sub and cs sub cmpsb ljmp lcall push arpl push xor das loop jmp (bad) imul mov out push out mov mov fisub popl push xor out mov mov mov mov ljmp mov iret mov sub mov lods push lea adc mov jmp loope mov leave loop hlt repnz mov (bad) (bad) jb fisttp sbbl cld (bad) mov xchg jne iret sahf subl out (bad) push xor mov dec das add mov jecxz sbb push and and push sbb pop pop inc movsb dec sub fisubr outsb ret xchg push (bad) fcompl mov pop cmp xchg lahf aas (bad) xor pop pop inc xchg pop loop pusha add lock cwtl fnop shr div int3 aam fisttpll mov or or mulw pop test pop (bad) pop xor testl scas mov jo mulb xchg mov jne sahf outsl (bad) pushf push mov lds cmc out in inc push mov push mov jae mov jg out mov mov scas sbb roll mov sti ds push das mov inc jo es inc xchg sahf push push and sbb sbb pop sbb test pop xchg push xor lea cs (bad) ds ficomp or inc mov (bad) push dec cmp xor sbb sbb add fmul aam shrl mov lods scas pop sbb sbbb (bad) jg push mov pop inc cmpsl test ror incl fs pop jl cs out add out rcrb mov push mov imul push sub out lods push scas push xchg or adc push orl iret das imul in out ds mov add (bad) mov sbb xlat in jmp pop push sbb outsb jo ds test insb sub mov mov shrl movsb dec incb repnz pop sub sbb and aad incl clc aam enter xlat lret rolb ss (bad) stos movsb cmpsb (bad) xor adc xchg lret and sbb outsb inc mov jg jl push popf data16 (bad) out es add adc mov (bad) mov idiv out sahf add inc pop adc push je stos fsubrs and and add push stc div decl adc (bad) cmc jno lock into sbb mov mov push pop pop (bad) mov push jmp push cmpsb jg (bad) xchg inc lods out (bad) (bad) (bad) (bad) pop lods lock jle aad push idiv cmp push or incl push jl decl sub (bad) jmp into loope int3 (bad) lret sar aam sbb popf pushf das adc ret and ss push inc jbe inc ljmp push int3 mov mov pop (bad) mov lcall mov mov push pushl sub test (bad) inc jno lods push rcl (bad) jecxz sarl push andl imulb iret xlat scas push scas jae decl xchg mov mov (bad) fmul ret aas sub ret mov call add popf xor psubb fnop pop pop (bad) push das shll jns (bad) fcomps loope dec test dec inc dec scas mov pop pop add (bad) jmp stc (bad) repnz rcl (bad) mov push lret loopne dec push sub add or jle dec push mov fcmovbe (bad) (bad) les lret sub mov mov lock add cmpsb lea das pop adc mov idiv cmp test movsb (bad) (bad) jecxz cmp inc je pop adc push scas push xchg mov lcall jo pop mov push jb mov mov sbb (bad) fst lret jmp ja cs mov xchg out push adc subl inc and lods (bad) pop jmp das dec xchg je incb xlat shll in (bad) mov (bad) dec and pop jb inc sub add daa jmp jg in xlat roll call out fwait and call xchg mov mov (bad) mov rolb data16 lret ds adc mov cltd outsb push jge cmp cmp rcll jle pop out stos pop or div sub aad call (bad) (bad) push mov test inc ljmp imul bound faddp adc outsb imul pop jg movsl xchg incl jg jmp jne call adc jecxz ss mov cmp cs xchg outsl pop (bad) fsubl or outsb xchg push lds hlt cld daa or es pushl jb and sbb or aad push pop out std incl loopne pop leave iret (bad) fdivrp mov jle mov stos or decl mov xchg jns lahf das add aad rol mov cmp insb mov lods (bad) mov xor pop push call (bad) fucomi jecxz push stos test pushl xchg addr16 (bad) push and push lods push mov jbe adc push mov frstor insl pushw lcall sub leave mov rorb mov jne rol mov adc inc xchg aaa call (bad) mov movsb (bad) aad push out jnp lcall imul adc xchg sub push or add push in (bad) iret push testb jle addr16 push pop sub mov jle mov loopne out jne xor rclb xchg jle cmp lahf out add mul (bad) add call xlat cs hlt pusha mov (bad) (bad) (bad) jmp pop sub pop imulb mov pop outsl add xchg clc idiv enter lds ret (bad) mov pop or bound jns das dec dec out mov cs jno jb sahf jb jns mov sbb push inc cmp outsl loope out push adc adc rorb dec jno sbb rcl idiv mov xchg push push (bad) jae pop push pusha or aad ret (bad) push jecxz jmp outsb pop add jno jge cmp push data16 xchg sub leave test ljmp and rolb (bad) jmp repz stc testl stos xlat mov incl or jge (bad) outsb pop cmpsb sub dec pusha inc incl shl clts dec mov outsl faddp adc jbe je,pn jbe lahf pushl pusha cmp fwait aam insb push sbb out lret (bad) aaa das sub insl sub and pop sub jno scas inc lock add pop (bad) iret (bad) out pop dec test sbb inc adc jo or lret pushf adc xchg mov jo loop out pop decb push xchg notl mov inc ljmp sub sarb out hlt jl mov andb push inc dec adc ljmp iret mov scas mov cmp lcall jl aaa hlt jne mov xor out outsb push pop mov push aad (bad) aad xlat fwait jno imul cmp mov or pop cld pop and icebp int push loopne iret mov lret popa dec aas and cmp pop mov push (bad) jmp push fs xchg jle cmpsl lea adc mov enter sub push stos js push cs add rclb in cmp ljmp (bad) loop iret dec in in clc jg arpl test pop lods imul and dec mov pop outsb enter (bad) (bad) into add scas movsbl or and out incl inc xor iret lcall outsl push push fcos orb cwtl orb push cmp test imull (bad) sub dec sub adc repnz int jno into int add mov int3 pop and pop xor push xchg shrb popf subl mov push push pop sbb pop jo xchg scas negb push xlat (bad) addr16 push or out call das addps or fndisi(8087 out das cld xchg dec jmp movsb bound pop clc pop clc jno inc shrd jle sub pop xor mov pop dec test pop xor test push iret js shrl jg push mov out pop cmp sbb insl inc sub cld or push cltd or jo insb outsb pop cmp cs idivl add push (bad) (bad) out iret ret int (bad) dec mov lret sahf lds mov inc sub out test rol mov mov pop push arpl lahf subl mov push (bad) xchg or (bad) or mov iret add stos dec out pop sub push pop mov mov testl adc idiv mov pop incl pusha cmp cmpsb fs gs addr16 loope (bad) push orb inc add pop xlat pop and and mov jo jge ss jp sahf loop call mov mov adc xchg push cmp mov (bad) lcall hlt sub jmp negl adc sub push icebp pop inc sub movsb fmul int add int3 shrb mov dec cmp idiv insb inc daa xchg mov cmpsb lcall sub xor aam adc cld js,pn xor (bad) (bad) mov pop push imull out popa jge das (bad) into fs mov in notb xchg mul lock sub jp jmp ljmp stc clc or mov bound loopne push pop scas push cltd pop cmp sub les mov decl xchg cmc jno loope repz ds ret popf call jp add sahf (bad) incb (bad) aaa and and mov jno outsb cs xchg jmp outsb push insb outsb dec stos dec and xor push cld sub imul int (bad) fcmovne idiv push cli pop fcmovne fidivl dec int pop pushl (bad) aad mov notb ds stos out mov xor into and adc div idiv das lods xlat pop mov dec (bad) fidivrl fist (bad) ljmp idivl xchg mov arpl xor cmpsb pop lods cmp lock mov iret push pop or outsl daa or sbb cs ss je,pn das out inc mov iret (bad) js jnp cmp out or pop mov outsl (bad) xchg out jne jmp xlat cltd insl (bad) imul jno lds sub divb call popa pop movsl out or mov into (bad) aad lret lret mov mov loope pop loopne xor pushl ret mov out (bad) enter stos (bad) aam imul and inc push pusha (bad) mov lea ss xchg push pop mov mov in (bad) (bad) push xchg mov or out in repz outsb mov push cmp dec mov cmp ds sub stos push scas push jp notb mov es daa inc inc (bad) ss loope mov mov (bad) ss add lods xchg test mov pop mov ds test dec mov insb (bad) lcall fldcw mull loopne push aam pop pop lods mov shrb lret in jmp (bad) notb aaa (bad) mov andl pop sbb idivl pop pop dec push out adc pop push out neg test rolb pop into into lds cmc xchg jl (bad) xlat mov and loopne in (bad) testb cli cld cld sti mov out loop cs mov lahf dec (bad) pop aaa push popa mov inc scas cmp and push lods addr16 push add rclb les daa inc mov test loopne push pop out pop jbe jl inc push out fst int mov push push xor adc imul shl push js dec sbbl xchg movsb test aam test imul pushf loop push out leave add iret enter not movl xchg push call jnp scas addl sbb mov lea fcomip sub and push lods clc adc mov fsubp out pop cs jmp fcomip fildll mov mov mov cli inc out idiv out rsm add std cld sti xchg mov lcall push mov (bad) xor xchg out push inc es orl hlt xor push bound decl mov loope out (bad) (bad) push (bad) popf in cmp es xchg push aad and and mov dec dec xchg push push sub sub (bad) dec icebp mov enter leave sti (bad) (bad) outsb mov push fisttpll xchg mov lahf xor push incb inc aas and adc push dec mov xlat fistp add or fsub cmpsl fst mov loopne push push pop lods dec loopne imul repnz fmuls incl mov jbe add out xchg movsb nop out inc pop jbe,pt push push mov jae inc inc (bad) push cmpsl stos subl lcall in pop push pop xor or lret outsb adc jno das ds push mov xchg outsb pop notb (bad) fistl push lret lea xor pop sub movsl out and pop or sub sub inc icebp mov sahf fdiv (bad) movl (bad) sub add sub (bad) stos pop xor ljmp ds lods js (bad) fucomp push out fucomip loope jno xor fucomip (bad) idiv inc or mov mov (bad) mov jmp loope (bad) push fidivr (bad) cmc (bad) pop pop push inc sahf dec add push stos imul (bad) daa aas pop push mov sbb (bad) jl push mov inc adc push cmpsb push call xchg imul rorb push push clc inc sbb cmpsb push push (bad) or add adc iret lds loop leave jge lcall jnp shrb notl outsl dec mov sub pop mov mov pushf (bad) fcmovnu in out fcmovnu in xor out out (bad) fisttpll jecxz repnz fildll stos out pop das icebp pop add fnstcw pop mov jmp sub push cmpsb jbe clc pop ja scas insb dec pop gs (bad) jns sub aam scas xchg popw clc add xchg push push xchg movsb mov dec divb push (bad) ror push push aam push (bad) jge int3 push pop xor cmp or and lcall mov int3 mov dec push pushf dec pop fcmovne (bad) jo pop inc mov out test pop mov cmpsl xchg je mov cmpsb fsubrp into fsub push push (bad) neg fucomip (bad) loopne pop push stos imul push cli sti cld out dec pop test out faddl xlat pop repz (bad) mov push out push bound por push incb cmpsl test fwait jo jbe dec pop dec xchg icebp movsl subl addr16 bound stos fwait sar push mov push inc fisubr mov add loop into mov pushl sub and ljmp add mov lcall fldcw xchg out push imul push mov adc out mov push outsl out push mov and jle push fcmovnbe repnz fcmovu (bad) fnsetpm(287 push fdiv fsub movb inc mov idiv xlat push jb adc mov cmp out rclb pop js negb mov inc push test les jle cmpsb dec incl dec das daa push daa inc (bad) in pop lahf and or fs enter bound fs ljmp xchg pushw sbb out das pop test push xor cld mov pop fmulp into push adc movsb incl (bad) addr16 dec jne push add es and xor inc scas jg data16 mov mov fstp (bad) (bad) ficom pop (bad) in ljmp (bad) fildll out pop std std (bad) out inc lds iret pop sti pop adc cli cmpb mov sahf pop cmp cmp sbb aas pop test stos jge cmp insl dec push jo lcall mov adc aam pop out mov xor push mov iret (bad) pushw mov xchg push cmp push loopne and or push xchg mov pop in push (bad) jbe leave unpckhps enter inc into hlt xchg sbb pusha push mov dec ljmp inc mov lret mov neg loope push mov fcmovu (bad) out icebp (bad) clc sub mov adc fcoms push sti sti clc mov popf mov add js mov test fidivr xor pop lods outsb pop xchg jecxz push scas outsl push mov inc daa push mov inc adcb add sahf pop mov pop xchg scas or xchg mov stos es lahf pop cmp or jb (bad) or outsl repz jmp leave mov lret push ret outsb int3 inc dec aaa imulb adc push push jg lods sahf cwtl (bad) inc xchg dec push fidiv mulb fcoml (bad) inc pop sub (bad) neg fsubp dec pop imul scas cmp push sbbl add or stos in rol mov ret pop (bad) icebp pop sbb sti psrad (bad) (bad) or loopne push popa data16 repz inc pop test mov cmpsb mov dec sub or push mov aam mov add cmp mov ret test mov out int3 push fs test push and push notl call enter ss fcmovb lret pop inc jbe,pn add iret lahf pop ljmp push into xchg cmc xchg pop rcl loope outsb pop push or mul fcomp imul mov std mov popl out mov ror sbb ss push out and roll js nop (bad) pop clc pop ljmp hlt mov jle mov (bad) icebp and pop outsb mov push insb scas mov scas es pop jle,pt or outsb mov push push jl and pop inc push lret mov push lret push mov push adc ffreep (bad) in out push jmp sbb pmulhuw mov fsubl rcrl inc mov add loope into js mov clc sub (bad) int push aad scas mov fcomp neg out in in call push call std out (bad) inc js out hlt icebp in push arpl xor push or scas das mov pushw lods xchg (bad) scas out out inc pop mov testl in negl add mov rcll cmpsb ret sahf sbb inc dec push iret movsb xlat pop imul mov xor xor push outsl add or push aaa and adcb addl push push loop jbe jo iret and (bad) add or sbbb leave mov ret cmpsb jo rcr push mov adc push jle incb cwtl mov call into jne stos mov rol out fnstcw mov out fnop neg fcom fsubp inc mov jmp mov stos push sub mov xchg or cmpsb pop dec hlt sub dec lahf add pop pop into jne insl aaa dec test sahf jbe repz hlt jno inc popw std cld (bad) andps addl rcrb movsb scas xchg mov push movsl popa ds fs subl cmp inc lods mov jns jg (bad) jmp add jno (bad) mov fisubr addl (bad) mov mov pop sub jmp xor icebp fcmovu ret (bad) or cmpsl stos dec inc sub add jg add imul je push out data16 (bad) xchg lret jbe (bad) fnop add mov (bad) cs lock dec pop push outsb cld fisttp (bad) fcmovbe lds push xlat pop inc std inc mov aas mov das jmp imul lock adcb in out push lret mov repnz xlat mov cltd cld repnz rolb xor scas rolb call fildl rorb mov push inc push push movsb cmp imul inc cmp div push mov dec (bad) icebp ret mov pop insb cmp mov pop push test stos sbb repnz testl loop adc add mov (bad) (bad) sbb (bad) push sub test xchg mov int3 js xchg mov (bad) int pop das mov mov in mov loop clc fcomip fldln2 sub ljmp std add ja pusha daa (bad) push sub lock xor test pop jl push nop jae daa out or pushf mov jmp and pop iret out pop sti cli lock fs push rcll call cmpsl addr16 push push test inc clc stos jecxz jb mov jne push xchg addr16 insb out fisubrl jge mov bound call pop (bad) das adc push imull loope or enter sub out (bad) mov stos scas xchg notb adc lds mov call jl add fmul aad fcmovne sub (bad) repz push testl push repnz inc aad out aaa or fwait jp hlt lock insb inc daa jne pusha mov push pop popa (bad) mov test sahf sbbb jmp loopne xchg aas push mov test lock fldcw push cld in sti in cli cmp push inc aad xor loopne mov push movsl (bad) mov shld imul push stos notb inc adc pop aas (bad) aaa clc cmp cmp sahf mov mov jl inc sub mov or push sub adc or fild (bad) call repnz ffreep (bad) (bad) lea (bad) (bad) sub ds jns into mov test push int subl (bad) (bad) test sub sub lret (bad) jnp cmp mov xchg out and mov stos xchg test ret xchg and and ds xor jg and (bad) mov push cmp leave mov test out ljmp imul incb jmp icebp cs das ja jle mov cltd shld cmpsl xor cmp inc push mov out push inc insl jle xor mov test xchg notb push jge mov xlat mov jg cmp push add ljmp and push out push xchg push push fistp jns mov jmp (bad) push sub out jg je or test test out mov dec mov (bad) notl out inc es xlat (bad) pop xchg mov pop ss enter scas cmc cmc out std std testl ficomp sub fimul (bad) test out push xchg ret (bad) cmp test mov pop cli stc clc data16 outsl imul scas dec loop scas pop fwait sbb repnz insb adc aas iret mov mov (bad) into ss push std jmp xchg lret out clc call jo push sti hlt outsl in fidivr mov js movsb push cmpsb push cmpsb imul outsb dec push jae jecxz xor jbe inc and aas (bad) je inc (bad) mov push jl xchg icebp push push idiv jnp das xor push (bad) mov jg mov inc ffree mov ret insl popa (bad) mov aaa xchg pop ss pop ds jecxz,pn fsubrl out leave roll lret sarb mov (bad) not aad addps out dec sti imull pop lar mov jmp (bad) jg lea nop ja jae xor cmpsl mov aas bound dec rol imul rol xchg mov out les sahf test pop (bad) lock pop outsb push mov inc mov sarb inc mov mul imul or not mov pushl call push cmpsb push (bad) xlat movsl rolb insl inc stos push stos ljmp cmp mov push jno idivb pushl mov push mov xor or add mov cmpsl lds add call ljmp in sbb fcmovnb mov (bad) daa sub inc cwtl nop mov push cmp enter push int sarb (bad) shrb fnop push xlat (bad) cld push movl mov pop push jg scas mov addr16 mov push repz (bad) loopne rcrl dec add outsb pop push xchg pop or jnp pusha jl insl outsl testl arpl imul cs add inc mov mov pop or dec (bad) mul push (bad) (bad) in in sbb out out es mov xchg out dec mov mov push push movsl (bad) movsl lods outsb int3 push (bad) dec movd clc outsl mov popf push xchg imul mov icebp clc mov pop push mov mov mull sub cmpsl (bad) mov (bad) mov fadd ret ljmp (bad) faddp int push aas cs iret daa fdivp xchg dec test not fistl sahf je in loope repnz out std jmp outsb and das das lock xchg adc nop out stos (bad) pop xor jge sbb call dec pop jno or mov adc jno xchg lock sub mov inc rcll rcrb (bad) adc adc xor iretw mov je mov jecxz jp pushf repz push lock (bad) ja mov ret push dec orl jecxz jbe jne push je scas ja jbe bound scas push push push mov xchg add or sbb sub mov fidivr push cs mov incb jno mov ret icebp push lret shlb (bad) into shlb movsl mov (bad) fcomp xchg lods bound in or push out aas aaa loop jle and out push test je test enter dec sub out insb inc cmpsl pop mov pop push or idivl pop add push lods xchg xchg std sbb sbb test test addr16 lock test ss xchg jo and sub enter repnz loope hlt xchg jns stc stc mov dec push sarl push and scas mov push ljmp pop sbb jbe mov and sbb jge pop stos mov inc out inc icebp push add les adc push inc leave ljmp shrb loop sti div out cli dec jb sub cld pop sti xchg push add fisub push and cmp xlat (bad) xor sbb mov mov aas add mov cmp pop out ljmp (bad) add cmpsb mov into pop sub push sarl push add das repnz bound inc movhps cmpsl push jns jno,pt in das pop icebp push lock cmp hlt (bad) inc and out cmc dec push cmpsb or push push dec out pop dec push dec cmpsb (bad) test jae stc shrl js jnp cmpsl bound mov ret (bad) mov mov cmpsl mov lret or pop mul (bad) jg stos or nop out idiv out and cmpsb cld pop cli (bad) cli sub add xor xor (bad) adc dec push test sub inc aad inc (bad) pusha push roll xchg (bad) and pop daa lock pop dec rcrb add pop pop sbb push aas push jo push (bad) jb pop add pop daa inc lgs scas (bad) (bad) mov lock sti ss std out fiadd cli adc push cmc jmp pop dec and push in (bad) sub mov jb insb (bad) mov sub cmpsb cmpsl push test stos ret xlat jne push (bad) mov mov pop add dec mov bound jmp ret mov push mov inc mov leave push leave lret lret out mov loop out in out push fdivrp or (bad) pop stc jl sbb cmpsb xchg xchg pop jp cmp pop xchg js lret dec inc inc in out sub xor imull pop (bad) in jge cs outsl push cld std lahf loop cmpsl jne cmpsl negb mov popf inc es repz add (bad) mov cmp and das sahf xchg data16 test ljmp xchg fistl std in fldl fdivr fcmovnbe or out xor push out mov lods jl mov push movsb outsl dec push cmpsb push test (bad) test pop push sub push push jle jnp scas outsb dec pop add out mov out fld mov mov (bad) enter ljmp cmpsb iret imul insb jne stc out dec addb fwait subb add addr16 (bad) popa dec add and mov movsl push and (bad) xor or push rcrb in xor call popf scas outsl inc daa push dec pop das xlat push addr16 or mov mov ja (bad) mov shrb or cmp push outsl fwait mov insb ret jp inc aad pop push pushl fildl (bad) jmp fmuls out ds mov mov icebp push les sub out mov popa addl and add data16 jmp inc xchg cld inc push (bad) faddp mov fadd mov or notb in mov push pop out jmp out cld clc (bad) or mov out cli clc adc repz mov mov push mov cmpsb lret popa add pop mov pop es movsb cmpsb ret add xchg mov out sub adc jb sub pop call push rcr pop aas cs (bad) xchg push push cmp jno jg add add (bad) aam js xor add jle xor nop outsb mov sbb or pop push mov pop pop mov iret push (bad) ljmp repnz fcom (bad) cs hlt xor push jecxz jbe sub sbb (bad) mov mov push mov lds pop ja sti scas and mov pop mov (bad) fdivrs jg (bad) leave into test jno sahf clc hlt (bad) into clc lods xchg out push out pop idiv incb push push jns cmp lahf (bad) lods sub test mov popw add subps sub push popf subl pop xchg mov movzbl xchg add (bad) jae sub push push or pop das mov cli jp mull ja shr mov xlat rorl iret outsl aad sbb out jae lods jno loope (bad) ficomp cmpsb dec fildll out jns jmp dec scas lret scas xchg out fldenv push call push aam cmp mov rcl pop out scas pop jo add in shrb xor aad push push movsl push test xchg cmp push mov or inc fwait je fildl xlat mov pop push out clc lock add notl fcompl fcomip pop clc cmc das xchg subb pop (bad) enter js push pop das call mov push push (bad) ficom ds jne cmp or push or mov push dec mov pop lock nop scas mov das push sub into movl lock out xchg (bad) xchg mov ds das cld cmp (bad) out cmpsl mov lods and jmp adc push (bad) sahf test lock popf jg ror dec ja jno out popw mov mov faddp lods pop add cld in push jns sbb iret rcr mov into int (bad) dec mov mov adc out iret (bad) inc cwtl xorb or jbe mov xchg jo in jbe rorl mov stos (bad) negb and out stos push add loop lcall adc shrb imul mov dec movsb mov lods rclb icebp (bad) dec (bad) fisubr aaa cmc out (bad) ror addr16 ret mov sahf scas nopl iret mov mov push pop jge sub sub decl lea xchg outsl adcb lock jo or sahf push sbb xchg (bad) das int3 mov add cmp jle sahf cmp out jg andb ljmp out push in push shlb pop xor mul loop push loop and lret ds jle dec adc movsl pushl jecxz adc push and cmc fcmovb idiv lock xchg aam (bad) sti iret cmc jle push negl std div imulb sbb jmp dec sub out jp cmp ss repz push mov pop insb inc sub fldl mov pop pop ds push roll mov cmpsl scas xchg jp ja enter pop fildll movsl outsb aas push cmp jnp cmpsl add push aad in pushf mov ja mov scas pop mov add jp cmp and mov jmp or jb xor fist cmpsl cltd mov rcrb outsb insl inc mov push sbb fld out inc dec jae imul lret loopne pop push mov mov ret push loope data16 loope fldl jecxz push fsubrl shlb nop push mov clc in sahf cli push sti cmp cmc icebp ss test pop scas dec pop add inc inc popa add popa push jl xchg int3 mov push dec ss push and shlb lock inc into rol push add dec inc or jbe add rcr daa (bad) cmpsb test jp add push outsb inc xchg cmpsb jg lret push add (bad) push and in pop pop mov mov dec cmp ja mov cwtl add test pop xlat push sub data16 movsb mov pop mov sahf jecxz iret into int loopne sahf mov (bad) enter fstp (bad) mov mov push fisttpl clc (bad) push call mov add (bad) in pop xor int3 test aad std icebp in repz fwait in hlt lock sti cmc hlt cld jmp test es mov jne popa dec orl sub pop pusha push dec ljmp xchg (bad) repnz cs pushl sub dec pop es (bad) dec push pop rol mov loopne movsb xchg not scas pop dec sbb test jnp dec xor fdivp add xchg sbb nop ds add or sub push gs (bad) mov push incl roll movsl xchg push icebp add (bad) scas es inc cmpsl sti (bad) test popa cmp mov into mov scas mov neg lret push fmulp loopne pop icebp (bad) out ffree ret insl cld cmp out flds hlt aad aam xlat cmpsb adc xor out dec (bad) ficoml sar lock (bad) cli repnz push repz lret pop out cld gs jo push mov inc nop (bad) jb stos call pop (bad) mov push sub pop ljmp pop ds xchg mov stos pushf outsb cmp push xchg (bad) sub pop push inc adcl not fidivr fimul into sti stc (bad) (bad) ret movsl clc jg lods lahf das lods cmc push mov (bad) and pusha inc dec pushf add leave rolb add inc psadbw incl rorl inc (bad) fild je fidivr adc aaa loope inc out out popa jg add jle (bad) fld mov mov mov into mull cltd data16 push fmulp (bad) ja xchg push clc fmull neg lds cmc fcmovb sub (bad) mov adc fcomps in fldenv jmp cli icebp in push repnz sti push push bound pop cld repnz inc je leave xor fsubrl icebp mov inc ds sub or adcl sub xchg hlt repnz aad xchg outsl enter pop ret inc pop daa push mov push mov es mov mov (bad) xor dec sub pop dec test in add sub ss add pop data16 mov xchg cmp pop fidivr xchg jbe pop or pop jo clc dec xchg xchg (bad) test andl mov cmc adc loop stos add sub in fistl (bad) into and idiv (bad) cli data16 jo push clc push (bad) testl adc fcomp push out fcomip std dec cli lock push jmp or aas aam psubsb popf push ret movsb fwait mov dec sub mov pop cmpsb jo loopne push addr16 movsl xchg inc and jmp jns sahf dec lahf add mov push mov sbb pop lock out outsl data16 aaa add lock push push xchg scas shll packuswb (bad) jbe inc sub or mov jbe inc dec movsb sub xlat nop out fisubl (bad) fistp test push mov or (bad) movd push mov lret xchg pop mov into cli loope pop mul fimul es es pop (bad) cmp (bad) out getsec adc jle rcr std jo aad out ss es or mov (bad) stos test mov xchg mov loop cmpsb xchg cs ss inc cmova sub fs fwait dec loopne inc and fs push sbb push pop into jg xchg repnz mov adc jge mov xchg xchg push (bad) pop push mov negb in out cmpsl loopne hlt (bad) dec into push es pop outsl into pop sbb dec mov xchg ret inc pop or mov mov dec add data16 xchg sub imulb pop (bad) (bad) stc ret cmp es dec inc outsl sbb push fsubl scas cld out (bad) mov pop out jmp cmp xlat push data16 es icebp popf clc aas add es (bad) jp pusha push sbb xchg sahf popa (bad) push adc inc cmpsl (bad) jno adc call fadds inc je je pop sarl jmp pop push mov clc cli outsb jb das jle mov xchg dec xlat inc cltd mov fmul les add mov push inc and movsl popf ret scas mov scas mov mov mov (bad) ss mov push push jmp out pop into push arpl loope out shrl add add daa (bad) push in ficoml ficom notb inc mov pop std mov xor lock imull push je aaa cld ror ret ja push and pop xorps sbb dec (bad) sbbl sahf rcl test sbb clc inc js cmp ds mov out push mov (bad) das add mov inc jne (bad) es daa pop mov mov in popa add loope ret pop jecxz imul adc (bad) notb (bad) lret jmp out (bad) and push sahf in cmpsb pop mov and out push int fsubp roll sub sar clc loopne jb rorb cmp pop pop push pop es xchg data16 call mov push into hlt in scas leave call pop fwait testb sub push mov adc movsl data16 stc xchg add clc div add add addl inc mov hlt xchg push outsb pop cmpsb mov xchg sti push pop mov push ss bound (bad) mov fisub push je cmpsl ljmp out out pop int stos sub (bad) int3 push loop (bad) in mov push out add jmp or fildl fnstenv adc js iret (bad) in fisttp push push popa imul aad sub mov sahf xchg mov dec cmp dec sub femms pusha xorl add mov push mov testb add je pop pop out je ficomp adc inc lods mov clc (bad) lods cwtl xchg es pop push out jb push pop and lods xchg andl jmp (bad) int push outsb in int3 jecxz fdivrp in inc push push jge xor divb pop (bad) jmp leave mov push loope in in fiadd in push outsb out arpl stos stos (bad) scas mov push cs mov dec loop fiadd xchg cmp scas or add push or mov mov cmpsb ss xchg pop nop iret iret jbe adc pop xchg jmp xchg mull out jns mov push lock lock out stc fdivrp out sti in cld fucomi xor in lret in push sar push push push mov rorl (bad) push or jnp int jge cmc push fnstsw loop pop mov push in pop jecxz inc jmp and ljmp mov push es ss aaa addr16 add popf test push add mov lods scas mov daa test mov cmp push (bad) lret and lods sbb pusha mov loop pop subl es in out out fstpt out out int3 push xchg jo adc lret (bad) rolb and mov out pusha cld or stc call add ljmp outsb jmp loop jbe cltd pop in outsb jmp pop mov xchg push int mov cmp push je xchg cmp test pop pop scas shll push popa (bad) lret sbb xlat (bad) outsb mov xorb mov jg dec mov sub adc outsl push sarb cmpsb mov (bad) mov movsl mov int3 mov cmp sbb mov mulb (bad) push mov es push in loopne pop ljmp pop fmul rolb push into test fdivrl dec pop push push sub push xor mov loopne out push ss xor mov xlat rcr scas out loopne ljmp insl push lods inc or std cmpsl out push lret add pop nop pop pop call and mov pop add clts jp xlat neg cmpsb cltd pop cwtl out push ljmp fdivr out es aam test in mov sahf arpl adc xchg daa iret mov or cmpsl lods cs add add pop mov popa jecxz aas sub movsl (bad) push ret int inc add notl scas into jbe pxor pop mov (bad) call ja fcmovbe fcoml fsubrs fildl test call push sub push es mov or pop dec ds push ret dec addr16 pop popf push iret pop out jo js (bad) es pop (bad) out add pop xchg lret lret mov fmulp faddl rorb out mov adc clts loope lcall std push mov flds push fadds sti out jecxz mov add in les mov push xor pop cmp xlat jg mov (bad) jge es inc test neg (bad) sub sub out out ret mov es mov inc sub push adc push rcrb js xor inc lea sti cs fmull cld out adc ss aad push xchg dec push std pop es mov gs cmp push add sub dec inc add mov test dec pop sub lret es push dec les test mov or popa push in sub jle pop fsubrl es mov les or push ljmp rcll add ss inc mov out jg stos and xlat dec jl add push aam (bad) pusha je ja rcll ds (bad) ljmp inc test push loopne jl fisttp fmulp push cmp adc fidivr push test pop push and push scas cltd jle push (bad) out out fcoml lret imul push iret testb cwtl out or lret (bad) mov lahf inc adc stos inc sbb orl mov adc pop idiv decb cwtl push xchg out stc (bad) sub dec adc mov into add stos pop push (bad) into incb pushl jecxz inc mov pop test std loopne pop cld dec dec repz scas neg ret mov ffreep inc (bad) jg add fisttpll leave add rclw sbbb enter cmp rorb in add divl pop jnp flds mov in pop add pop pop xor (bad) xor add jbe pop jg aas and pop cld cpuid fs xchg pop inc xchg sub add dec xchg inc xchg cltd add push jb leave add leave xchg test add add nopl in push pop aas jg pop repnz push add pop jb pop je aas es mov or or in or push adcl test and popa inc mov inc pop rcll loopne popf (bad) add fildl fninit mov mov fninit fninit (bad) fninit fninit mov fcmovnbe fninit fninit fldt mov fninit fninit in lods mov jecxz je add (bad) mov mov mov fnstcw cli sub das daa push add mov and and ja sahf (bad) movups adc adc cs dec aaa adc outsb arpl iret xor iret movsb add jo and pop add cmp push jp add sbb push data16 adcl negl xor cs sub adc xchg pop sarb and inc mov cwtl inc dec xchg lods push sub mov fucomip push lahf or movlps jg lcall sbb sbb repz xchg dec push jg adcb jns jb pop iret lds pop xchg aas push xor and xchg scas and insb inc lds push sub testl sbb out imul imul xchg dec push mov add test push mov mov jg and or and invd mov pop mov mov add push stos push mov cmpsl notl pop inc and int scas and es push push adc mov inc push cmpsl or add dec ret sub out adc ficomp aaa ret data16 outsb push dec js into (bad) decl xchg push mov das sbb mov loope addr16 lock mov push cld xchg insb push decb incl push pop cld (bad) (bad) cmp jne xor push es pop sub or sbb add dec sti mov (bad) data16 dec push jp dec mov rcll push or shlb lods (bad) inc push xchg sub hlt sub test inc (bad) sbb repz dec sbb or push add sahf xor hlt mov jecxz jnp,pt mov jbe jo stos mov sahf je fidiv pop jge push inc xor mov into arpl jg outsb popa cmp push sbb cmp or repz or movsb sbb bound xor dec xchg and push push lods and xchg add dec or or inc psadbw hlt xor and out ds hlt ljmp mov push cmpsb nop push xlat into movsl mov shrl xor stos lret sbb lds insl push mov xchg pushl pop (bad) nop test call adc push inc sub (bad) sbb adc pop xor lds sti dec and (bad) push add lcall pop and adc adc lahf movsl and push and call sbb adc jp dec ss add lcall (bad) scas divb decl cmp into jmp aam (bad) jg aaa es call enter mov inc stos mov (bad) mov xchg (bad) fwait inc test aaa enter push push ret xchg cmp push pop mov xor pop dec loopne mov pop and inc sbb ror adc dec or out dec aaa movsb and dec lahf daa mov ret inc aas pop ss nop push prefetcht2 dec pusha sti lcall out pop or lahf rcll push ror push fcmovnbe call fidivr jecxz xchg loope sar fsubr iret mov or mov pop fiadd adc push and movsl inc push insb js mov xchg test add data16 movsl call mov mov cmp gs outsb inc es ljmp mov es sahf out push ss or aad jbe test inc aaa xor jmp fisttp fwait test aas and outsl ret jb cs mov test std in xor sub cmc loopne push jmp push imul (bad) mov lret mov cmp mov insb (bad) jnp push xchg aam out into arpl js dec ljmp inc (bad) jns dec push pop jmp xchg jo mov jno scas push test and mov mov data16 mov pop inc jecxz add mov sub jo icebp push push adc push xor push sbb movsb push mov adc push xlat rclb movsb inc daa sbb sub inc or outsb pop cmp mov mov push fstpt dec nop sbb pop ljmp (bad) fcmovne sar mov scas jle mov (bad) jmp popa mov dec fadd jae dec into mov mov pop jle mov andl insb pushf (bad) nop imul mov test xchg pop int pop andb stos mov lods imul sub or and cmp adc cmpsb push sub sbb mov bound outsb sbb add mov dec (bad) std xlat daa sub adc xlat cmp sbb je sahf xchg (bad) in push lock call mov mov call mov inc jle mov xchg outsl out push dec pushl push es repz pop les (bad) out mov movsl test imul movsb and adc iret ja pop dec inc mov mov jge mov lds lods scas mov outsb shll jmp pop cmp sbb cmc icebp cmpsb mov pushf dec ja push pop cs addr16 sbb je or add xchg cmp push xchg movsb sub add movsl adc mov cmc xchg xor or leave cmpsl xchg (bad) hlt in xchg lock jp ljmp hlt frstor mov sarb ljmp (bad) insb imul inc outsb jae adc mov hlt adc pop (bad) jbe into mov pop outsb mov inc push es cmp pop sub or sahf inc xchg sbb nop (bad) dec push pop add out pop xchg or lcall nop mov (bad) xchg clc adc add sbb xchg sub jecxz jno shlb sbb mov push or sbb or push add sub aaa fwait clc dec sgdtl jl lock loopne (bad) or je jmp loopne jge enter mov lcall sbb sbb inc mov inc jmp ljmp jmp jmp mov inc aaa inc ljmp aad imul movsb sub (bad) xor cmp imul push outsb xor push sahf ss sub cmpsb xchg (bad) fnsave aam into jns and imul sub push xchg sbb adc xlat dec nop push jo pop cmpsl jmp movsl fimul jg movsb ss popa outsl inc es mov adc add (bad) sarb xchg sahf jl popf push push and mov mov mov out fs repnz jmp rcrl ficoml push xchg je ret add out mov inc cld inc cs sub (bad) and or inc ss inc decl or into lea pop sub mov incl insb dec xor or imul mov push jl pop and inc xor sub sub xor push add decl or pop mov mov decl inc sbb xchg jl icebp out mov into jecxz xor fcmovnb les mov pop insl push nop into xchg je ljmp dec xchg dec loop ss jmp popa mov sahf out out sti fcmovnb (bad) out clc repz xchg insl outsl inc inc xchg jb mov mov adc push insl jmp sub aaa sbb xor mov fidivr decl sub movsb jbe mov out add outsb enter mov popa push jg xor push mov call lea and outsb scas push aas das fbstp xchg xor es sub pop add (bad) xchg mov dec lahf xchg push sbb cli xlat mov cmp (bad) mov jmp js push into scas add add mov inc loopne fdiv insl dec mulb jecxz ret mov out decb out test xlat xchg mov xlat (bad) mov push setne or mov (bad) cmpb rclb dec xor lock js push xchg test mov mov movsl mov (bad) fcomip (bad) fnstenv (bad) cmp or cs push inc pop inc cmpsb cmpsb jg push xchg mov push push adc adcl pop lcall mov pop inc push adc and lea jge imul (bad) jle loope adc out int3 mov jbe jo or movsl test pop ficomp push mov mov xchg sub fsubrp push cbtw or jmp cmc clc lret addr16 sub push mov and aam test pop stos (bad) jp push push incl mov lcall and dec test gs jmp bound nop insw cmp les rolb mov insb test push mov inc cmpsb imul xchg adc or sbb adc call inc loopne ljmp pop xchg dec sub xchg outsb xlat sar dec xor mov cwtl xchg incl jbe,pt push outsb jle xchg ljmp mov shl and (bad) jecxz stc aam bound rcl push rol xchg outsb iret jae add fadd (bad) ret xchg (bad) or imull dec jg pop xor call test dec mov push lea arpl cli (bad) push add mov inc xchg push push dec and and adc inc test dec adc imull arpl mov test decb sbb mov neg ret cmpsl mov divb dec push aaa inc outsl push dec out test loope sub out rol shlb loop or in lret out loop add jmp or push addr16 mov inc aas (bad) (bad) (bad) imul mov xchg call mov jp cmp fs xchg (bad) jg cmp cmp mov cmpsl jnp ljmp sysret leave push rol roll sahf mov xorl je mov add mov mov add cs or lock in add stos out jo cmp int lret scas mov and mov add jne out mov shrl push push sbb loopne ss (bad) xor loope in loop xchg rol clc sti dec (bad) or lret mov sub mov fwait out push popa mov xchg jo push (bad) xchg inc mov sahf push push ficomp daa idivb fidivrl fwait jle insl xchg adc outsb mov push movsb es (bad) xchg outsl repz sbb sub adc sbb push xchg imull (bad) scas xchg out pop sbb and loopne sub dec push jp add sbb jmp outsb mov jle jne subl faddp push out es ret push int daa jecxz in fidivr les adc loopne call lock loop stc cld (bad) call push popa xchg movsb pop in push mov mov mulb (bad) mov test cmpl (bad) mov push aam jnp jg or mov adc adc xchg stos or fwait jle xor es dec lahf (bad) pushf push lea push fcomps xor sbb (bad) scas push dec cs xlat and cs data16 sbb sbb es pop or xchg mov push adcl sbb out sub mov out neg inc mov in jne pushl imul fsubs xchg scas addl xchg jo push aaa adc cmp sahf pushf xor mov movswl lds sahf rclb dec cmp and loop mov aaa jbe cwtl push and push data16 (bad) mov movsb dec xchg test das popa aaa xchg cmpsb dec sarb sbb dec and adc push and mov in leave add sub add and or jle notb orl push dec push cwtl or and out lea add or into mov dec push and cs out aam xchg inc (bad) call (bad) out cmpsb (bad) scas sbbb push mov mov (bad) jnp xor push inc xchg inc push cwtl jg dec dec subb fimull sarb or lret xchg shrl dec jbe rol jg sahf daa jle pushl es (bad) mov lahf cmpsl xchg xchg rcl mov push cli movsb xchg xchg xchg sbb pop or adc popl cmpsl mov lcall inc pop clc aaa inc cli jle ss gs xor jns push mov mov aad (bad) fisttpl adc pop (bad) jmp jmp mov xor popa ss inc jmp push mov lret stc lret push pop les mov call data16 cmc sub scas pop stos push push shr dec lds mov mov ret (bad) xchg nop inc (bad) cmpsb xlat dec dec pop inc mov dec push rcrl and pop out movd mov mov arpl push rcrl push aas popa dec and bound or xor or fistp sub ss dec push outsb jae jg mov adc in rcr test mov xchg out fucomip mov in (bad) call lods fs mov ret add fwait sahf xor idiv out incb test or test data16 mov ljmp or iret pop rorb (bad) mov and out rorb mov lea insl lret lcall or sbb out outsb cmp push mov and iret jae jle pop push dec sbb xchg out and push outsl xchg cwtl add cs pop push adc popa xor shrb push emms sbb push clc cmpsb jbe stos mov jmp out inc les imul mov into push ja xchg popa push sub imul lcall inc es (bad) stos cmp (bad) mov lret push jl xor jg rolb mov popf xchg es push fidivr sub push cmp rcll fldenv push test xor inc enter stos xchg mov (bad) mov or es jne addr16 lds sub adc and cmp or sbb inc cmc jno rcll out sub cmp push jg mov cmpsb (bad) mov or out loopne into loopne and notl cmp incl ljmp ret or pop incl fild and (bad) xor out js and xlat (bad) mov fimull pop or data16 inc adc ret pop loope js movl mov jbe outsb dec jmp push add pusha outsb inc or cmp repz mov xchg out icebp push pop xor movsb pop xlat mov inc xchg rcrb inc pop push inc xsaveopt and mov adc sub sbb jecxz or pop mov push xor in xchg mov xchg jbe aaa xor or pop push (bad) xchg jl inc out out jle (bad) jmp out int cmpsl pop mov outsb pop (bad) jnp mov pop lcall stos add pop fiaddl movsb mov cltd loop add push les mov (bad) jle sahf xchg xor or mov mov push pushf mov jge push imul sub popa arpl imul je sub das xor scas and adc stos into ss outsl test gs dec mov rolb pop loopne add pop jecxz (bad) rcr iret jne fisub incl mov out into jmp data16 js scas mov aad pop push jl xor pop pop pop adc pop lahf movsb push dec xchg mov push cmpsb xor mov lahf pop aaa or push mov clc insl ss roll push mov mov xchg xchg sahf mov push mov imul mov pop push xchg scas out ret xchg dec pop (bad) xor ficom hlt aas int pop push mov xchg xlat jecxz mov pop pmaxub mov pop (bad) clc mov test imul xor jmp (bad) (bad) imul xchg mov cmpsb jne clc ss sub jbe jbe jne jbe call pop inc xchg and cmpsb xchg es add lds cmpsl push xchg andl rolb xlat xchg xchg scas cmpsl bound (bad) fs in add mov sahf xor outsl push pusha adc lea cs adc or pop jg sbb or fwait dec xlat imull fisubr dec adc mov adc fcmovb mov inc out popa add out push jecxz jmp fmulp cli mov mov pop add popa dec sub (bad) pop inc orb jmp cli movsl or pop sbb mov mov mov xchg call lds mov mov popf add mov aas add cli stos cmc xchg (bad) ficompl daa sysret mov outsb cmpsl pop cwtl or xor sbb rcll inc xor sbb or wbinvd add xor (bad) mov push out sub dec fs out ret decl lahf in sar fst (bad) faddl cli or pushf daa data16 lods imul sarb xchg mov add push out enter (bad) (bad) pop inc (bad) out orb out sahf adc inc adc add push sbb jp pop lds mov ja (bad) dec adc push rcrb and xchg sbb call xchg insl mov sbb sbb mov add push and dec sub and push pop pusha test aam cmpxchg lods pop mov cs push push xchg add popl out push or fldenv add out xchg xorl push ja mov xor jge inc idiv fsub fucomp lds das test push nop xor dec lods (bad) jns dec mov test inc sbbb test stos pop sbb popf add push push add js cltd es pop cmp into mov fwait push add sub and and xor pop and insl mov push add into or and cmp mov (bad) xor daa shr add (bad) ss ror sarl out (bad) frstor xchg fidivr sub in sbb adc jmp scas sar incb lods push scas mov jg pop das dec xchg and sbb sbb pop push test cmpsb jbe mov pop (bad) cmpsl arpl ja fcomip lock push (bad) int3 sbbl addl sub jle dec or add jbe sub (bad) push adc sub pop sbb ret fstl add (bad) xchg sub inc (bad) inc decl imul int ffree das (bad) jbe,pn out iret xlat pop rcrb rol ret mov inc and mov or aaa sbb mov (bad) lock mov jo leave fndisi(8087 cmpsb mov test push mov jl sbb (bad) pop xchg push pop dec push lods cwtl mov sahf mov cmp bound sbb push xchg pop outsb addb shrb mov pushf ljmp dec aaa mov fsts call mov jae cli add dec sub dec scas pop xchg (bad) rcl (bad) (bad) adc xchg repnz fcomi (bad) into (bad) icebp pop add mov add loop xchg push pop sub pop or imul jno push sub sbb sbb dec idiv fdivrp insb push sbb (bad) jno jne add mov ss je out jo sub enter pop daa mov push mov push dec xor mov ds test push push je (bad) scas add xchg test dec inc jg fbstp jmp scas mov lods ds sub ja sub nop sbb lcall std scas add pop dec inc adc lret enter push add inc fldcw xlat xchg shrb je jbe pop inc jg mov dec cmp pop into daa sbb aas cs je divl sub (bad) push jle jle dec mov sub out clc (bad) jo decb das call prefetcht1 nop je das je das out add xchg pop jno sub pop out adc xchg and mov mov push push aaa pop cmpsl push sbb fistpl incb pop sbb jle add add fistp loop push (bad) adc insb mov mov ja adc loop push pop jg push les fiadd fcmovb mov scas sbb aam aaa fmul fisttp pop push push in mov pushf inc das or outsb adc es loope adc push cmp mov mov adc testl decb (bad) (bad) push or dec in (bad) cmpsl jp add out test clc pop je outsb cmp (bad) mov (bad) mov adc setbe hlt outsb and sbb adc scas and out lahf xchg mov dec outsb mov jno cmpsl mov push jne push add xchg pop loopne add clc sub push push jmp daa inc scas test out (bad) add pop push add into rorb jecxz loop mov (bad) (bad) (bad) popf xchg and dec pop paddb lods sub pop arpl xchg js cmpb pop (bad) pusha inc xchg call mov jmp aam or (bad) xchg jae add or adc aas lcall insl decl insl inc sub test daa mov add xchg sbb fsubrl pop sahf pop addb aaa dec xor incb or push addps jo cs sarb lret mov and (bad) jp push mov or pop jno pop daa sbb sbb xchg fwait inc das or call hlt dec loopne pop pop jmp mov leave sbbl (bad) fst insl cwtl inc sub fidivr sub ljmp ja (bad) jg dec (bad) push xor jnp lods lahf pop popa inc subps jp cmpsl (bad) xor and sbb adcb es pop test les push data16 push lret mov bound pop xchg sbb lea push push inc mov and xor sub adc cmpsl pop mov lret mov fcom scas or mov adc mov daa jle mov out test addl xchg jb iret pop ret pop xchg (bad) fiadd xchg jo daa andb cs fdivrp repnz cmp out insl dec dec dec cs xor xchg pop push jbe mov outsl add call jae gs add and xchg or pusha dec pop cmp sbb fadds push sub or (bad) mov push decl pop push dec cmp fadd roll into ret iret aaa shll fcomip test and add inc scas out push cwtl jnp xor test pop inc dec xor cmpsb (bad) lcall xor outsl dec cwtl pop das adc lods push mov push inc mov dec pop adc mov out jb push mov pushf and (bad) pop push (bad) push sbb xchg xchg jge push mov test lahf jg dec cs and pop sub push (bad) call adc mov add ljmp decl add cmpsl sbb inc push jo js (bad) lock sub or out cmp push pusha out jmp sbb xchg out loop (bad) insb inc loope cmp (bad) jle js or (bad) xor call cwtl jl lcall pushf cmp mov sbb cmpsl (bad) in ret inc mov das inc pop (bad) ja incb jle pop cmp insb jbe sub es mov lock ret xchg rol fcmovne rcrb xchg mov adc xorl test nop xchg cmp pop xchg mov insb or es (bad) (bad) call cwtl xchg inc push mov (bad) sub ret dec xlat cmp pop out jo push push fidivrl mov arpl fistl xchg outsl push data16 jle (bad) std lods inc stos and push push (bad) pop and lahf push fnop pop out rol popf fxch aaa mov lea dec mull and arpl add (bad) (bad) lea add data16 aam cmovae ret push daa gs idiv in cmp or (bad) imul dec sbb cmp dec sub mov mov js pop ret push incl data16 (bad) hlt scas mov and inc pop mov jg je push frstor (bad) imul sbb mov jmp test lret sar incb push popf dec cmpsl lahf pushf roll out push adc push add jnp (bad) fdivs lods jmp (bad) out decl (bad) lods dec fnop cs mov cmp fimul adc outsl inc es add adc xor jnp ss jle cmp insl mov mov adc jb xchg (bad) faddl xchg add push rcrl incb sub mov mov add cs sub iret enter loopne jo idivb pop incl or inc loopne stos xchg adcl inc (bad) dec into subl ret call out ljmp pop (bad) out test aas xlat mov test pusha push lods mov aaa push (bad) xchg (bad) mov inc and add sub ss test repnz pop adc sbb cmpsb pop mov push data16 enter sbbl movsl inc mov cmp clc inc call push rcrb aaa icebp add or ljmp xor or sahf scas hlt and sahf lea dec sbb or pushl bound test call shlb xchg xor mov stos xchg pop or push mov cs push test pop pop xchg rol mov inc addr16 and jl jbe adc add pop dec jo ds popf or enter dec mov dec add or push ret stos lahf (bad) in xlat rolb out add ror clc push and outsb ss inc daa mov out (bad) jle (bad) loopne xchg (bad) outsl pop xchg test jns add jb dec icebp add xor test mov jo out js jno (bad) test inc fild scas push test ljmp push test iret pushl and shll pop dec pop imul dec xor popa cmpsb icebp call fwait js rcll bswap rorb out cs xor (bad) incl (bad) jmp iret add lds lea or lock ss xchg dec jg rolb xchg pop push push call (bad) ficomp (bad) repz mov decl cmpsl fsts xchg clc out cmpsl data16 push insl push dec sub mov and mov jae mov cmpsl out inc gs add add jle pop cmp xor call outsl (bad) pushf xchg push push sub push add push or xor mov push fs lock mov ss xor enter xchg out movd cmpsb lea stos push outsb sub push insb mov jg outsb add inc xor aas push push daa add call (bad) mov (bad) cld xlat out inc jecxz inc gs push (bad) nop push xor popa sub pop xchg dec xchg adc push push cmpsb test dec das out (bad) mov xlat cwtl outsl push push shrb sbb sub pusha sub jno cmp adc mov fbstp lock sbb into aaa fcmovb mov mov pusha test jecxz mov lcall cs aaa lea mov push aaa out pop adc inc (bad) imul and adc idivl mov in out mov cs and bound push fldt pop out imul test mov adc push (bad) pop inc pop pop (bad) mov pop inc std ret xchg xchg (bad) outsb fdivl js push push xor mov sub jg push add dec xchg outsl mov push mov pop adc pop icebp xchg (bad) mov fmulp aas fistl test push mov or pop dec mov xchg cs or loope xchg imul imul out or mov in clc fsubrp xchg lea out fcom dec jecxz aad cmp pop cmp fild push inc push and add dec rclb jbe sub das scas cmpsl mov fmuls or push push jo sub xchg push insl pop jecxz out (bad) decb or imull idiv or cmpsl lock (bad) (bad) int sbb fdivl mov (bad) lret sarb shrl fisub notl inc pop mov outsl or movsb sahf (bad) and aaa (bad) call movsl cwtl out jmp ds in call mov popf push (bad) pusha shlb xor ds push scas ss outsb adc pop das xchg pop and aaa aas outsb push cwtl mov sbb adc pop daa jg inc pop adc push iret out cmpsb scas andl insl jg out mov jle push xor pop dec sub andb push out enter lret pop inc and ret idivb scas cltd mov lods inc pop or out inc mov out out loopne aad ffreep nop pop (bad) jbe rcr out hlt pop lea sbb out jecxz inc popa mul (bad) in adc cld dec test fst lock mov xchg inc nop mov fisub adc sub add aaa inc pop adcl dec push clc inc ret lcall fisttp adc jbe lcall rorb movsl push mulb xchg or gs pop out leave mov aas arpl lahf xor lahf xchg xchg call adc outsb jecxz ret test arpl into ret test inc push out repnz pop inc push xor xchg xor out xchg invd loop adc faddp mov outsb pop ficomp mov push sub aas cmpsl lods push mov fmull jl sub cmpsl mov and push xor lcall xchg notb fwait sub (bad) fildl xchg inc xchg in leave mov jecxz leave lret push mov hlt xchg mov cmc inc adc adc or iret mov mov test cmpsb fmuls loop lret idiv jle ss testl mulb into jmp lcall and lea out sahf pop imul sbb ficom xchg pop cmp aas or dec iret adc lods subl jecxz loope aaa push nop push rcll pop (bad) push xchg push scas inc scas and cmp mov adc cmp push xor fxch leave dec test mov mull mov xchg fild inc aaa mov ret sti jo or push fdivr ljmp jmp call lea fdivl mov (bad) sahf out pop cmp xorb pop jbe push xor pop adc pop or xor jg xchg (bad) (bad) iret mov mov push mov dec rorb xchg scas negb push mov add (bad) call (bad) (bad) xlat imul testl pop stc rolb xor (bad) paddusw inc xor ljmp out icebp repz pop inc push xor cld es mov pusha sti fcmovb mov jns es outsb sbb xor movsb mov stos es and mov push sbb je aaa push xor lods adc pushw mov cmc lahf jg jae ror movsb push dec adc inc sbb out mov jnp (bad) leave out jp pop sub jno notb lods push mov xchg push xorl ror rorl (bad) push xor push xlat loope push pop sarb sub (bad) out jmp repz or push xchg out movsl mov iret add fildll mov sahf int insl add lods lcall dec sbb push mov or scas (bad) pop cmp push lahf fs ja das ljmp pop ret mov pop jbe mov lea or pop sub add repnz add loop (bad) neg cmp imul pop push cmpxchg lret xchg scas push push mul ss mov xchg mov pmulhuw fucom or out push stc out mov mov out int3 mov mov cld cli out outsl xor loope sbb dec es adc cwtl gs es mov mov test mov cmpsb push jl sub xor and jg mov adc xchg icebp and pusha jg sbbl xor sbb xchg lret rolb leave ret sti lock aaa incb insb push inc inc sub mov inc ja fimul ja (bad) loopne neg sbb neg cs push mov lahf roll adc (bad) outsl pop cs pushw jg push loop rclb enter std insb loopne sub fsubrs rcr stos jno jmp scas test xchg call pusha inc jle dec test sbb pop jl outsb push (bad) inc add pop xchg pusha std inc and sbb cltd daa mov pop inc sub or (bad) xor aam int dec cmp pop test jbe mov xchg push loop outsb and les fmull fcomp loope jecxz xor jmp loope mov not add in fs (bad) mov inc cmc cmpsl movsb aaa cmpsb pop push mov inc adc mov scas push dec sbb cs cmpsl xchg outsb xor movsb inc jle push push subb mov inc push cs sbb push mov adc cmpsl aas sub cli dec pop pop inc sbbl roll into popa xor sub and jg daa inc call enter dec (bad) fisubrl rol push popa inc xor inc lahf xor ja sub lods scas sahf cltd dec ficomp xor xchg fiadd test xlat (bad) pop loop xchg div div pushl and pop clc lcallw xlat (bad) (bad) mov push orb aaa insl rol jbe (bad) mov out lods xor fwait pop repz repnz hlt mov sub jl fst (bad) mov sbb test stos xchg icebp inc sahf inc jae es fmuls jmp mov rolb pop ret jle movnti clc int jo and jg adc (bad) in (bad) mov ffree ret dec sbb fdivr lret mov push pop inc sub inc or incl call jbe xchg loope fistpl test fildl (bad) fnsave fsubrp out icebp notl leave mov inc aaa cmpsb rolb imul movb (bad) lea push outsl jg inc jbe sbb fadd mov sahf mov scas data16 adc fdivrs hlt rolb das rolb cltd lahf imul add mov lea cmpsb daa lods movsl adc sub jne,pt push orl rcl jg sub push sbb sub mov adc fcompl adc jmp cmpsb mov pop cmp ret xlat sarb mov jecxz and into fdiv aad adc out cs jmp fadds cmp jecxz jle jl mov push sub lods inc adc mov sub out push dec mov cmpsb mov pop and cmp cmpsl pop sti jmp stc push add sbb (bad) xor mov mov cmp icebp imul adc jl sub add aaa pop and jl ficom leave push mov push sub pop push adc or stos mov in (bad) loop pusha in fcmovnb (bad) (bad) mov lahf xor mulb fcmovu loope (bad) testb aam (bad) fisubrl xor test loope push pop lcall push test mov pusha bound rcrl mov pop clc add ss xchg jmp lahf jp cmp add dec jle not les arpl sub int push outsb (bad) mov fcmovb push sti jmp xchg call rorb jmp pop fidiv out sbb pop mov test jo jg bound ss lock push mov fidiv (bad) mov notb or add adc data16 out pop mov mov ss mov sbb loopne sub lods call out test (bad) mov sahf into lret rcrb (bad) ss ds fdivl in in sbb cmp movsl lidtl (bad) jbe mov iret mov test xchg xor cmp (bad) scas sarb jmp jbe rcrb push xchg es js scas fxch enter lock aaa or cs sbb mov stos pusha sbb scas notb xchg dec adc cld push (bad) mov (bad) mov movd jne loop (bad) out test inc pop in pushw lcall adc mov mov pop cmp test mov add lds sbb mov mov dec cmp inc mov push lcall push loop push xor leave shrb or mov outsb stos enter ds (bad) (bad) cmpsb std pop add into scas mov mov add add cmpb lahf scas lock test jle add push out push push and or sbb loop dec dec (bad) mov cmp pop xlat dec test fisttpl es lahf adc or clc xor out mov cld sti call cmpsb jecxz hlt inc out mov out movsb sahf mov xchg aam movsl push xchg arpl (bad) test pop je pushf imul mov push jg jg jbe jo cmpsb inc cltd xor add cs lock dec add ret mov ret faddp int3 sbb push inc fmulp into aaa add inc sbb push fmul roll sbb sub fstpl (bad) cld pxor inc jp loop push sub sbb sete xchg push imul mov mov or mov dec xchg pop add jg inc and pop inc inc mov js fsts cmpsl rcr es repz jo push xchg repnz cmpsl out add mov mov and push pop (bad) cmpsl outsl mov fldcw (bad) scas jbe add sahf adc insb clc stos popa inc mov incb xor jb pop insb mov movb push ffree cmpsl movsl lds aaa (bad) push es xchg push call push insb loop aaa das cmp les push mov mov inc or xchg or (bad) xchg rol mov cmpsl push mov (bad) (bad) pop (bad) lods cmpb test rolb movl jae add es jg push aaa les mov ja mov pop mov fcomps icebp loopne mov hlt call mov bound stos (bad) (bad) push mov fmul fsubrs pushl and lea push jg jle and lods gs leave je xor (bad) dec fmull test es lds enter fdivp fdivs mov repz pop fidivl das pop mov push out mov imul ljmp jmp or pop dec adc es push jp adcl xor dec incb jmp adc mov test sbb ja push jl add push sarb add (bad) out push (bad) movd adc inc adc mov scas jo push pop xchg xchg mov mov inc imul andl icebp data16 fadd mov aas (bad) push push shll hlt data16 clc mov aaa add test (bad) inc ret mov push mov pop loop ss cmp addr16 cmpsl into scas jle movsb es xor sub lods xchg test cmp fstps cmp pop pop sbb mov mov nop jg inc les push out arpl sarb scas dec pop std sbb push mov (bad) scas mov push sbb pop xchg je mov jbe rolb mov mov dec movsb jle xchg inc push push mov push in ja aam imul daa nop mov lcall out inc loop inc adc cmpsb cli daa mov pop push xchg pop jle out out sbb js (bad) cmp adc push es arpl negl (bad) inc xchg mov daa or insb sahf (bad) mov rcrl scas out into inc and (bad) jo xlat add push pop xchg out fadd adc cmpsb add xor aaa rolb inc lahf jle xor sbb add repz sub fcomps aad inc jne push in call add out mov sahf push stos inc es push cli inc movsb lret fcmovnb mov xlat mov inc and inc mov mov in xor cli test out push pop sbb push (bad) shrb or cmpsb movsb lahf mov ja jne xor loope bound mov dec js mov callw inc ds sub and mov or jmp mov je sub xchg pop dec aas (bad) xor orl jno push inc insl xchg jno pop push popa and ficomp add mov mov lea add test (bad) popf pop movsl idiv rcll rcrl out scas adc loopne enter js cwtl pop xor push mov je (bad) (bad) fadd mov out repnz cli out in ret (bad) fidivr std pop call and lret and dec mov les mov mov cmp add andl aaa daa out adc psraw xchg das mov jecxz out cmpsl cltd es pop mov fistp mov or lahf push mov ror push ds clc add out div repnz js pop inc push mov push daa pop outsb inc aaa mov mov fcmovbe leave ja lds inc dec jmp fs out jg cmp int cwtl push fmuls adc adc xchg sar pop jbe cmpsl and push out mov inc loopne mov push adc mov es fxch hlt cld repz out aaa pushf gs adc (bad) leave das sbb or mov push test cs xor add xchg in dec mov dec addl shrl imulb scas sbbl add fisubl xchg push xchg jp aas sarb stos movsl add jo das into call aam push xchg cs lds inc mov xor clc dec (bad) fdivrl loope pushf dec insb ss ffreep sahf sub push ds rol cs mov add (bad) js mov xchg hlt fimul ss pop cld and movsb je mov es cmp fimull ss fimull inc scas lahf add push clc or push sub push sbbl inc jbe sub scas aaa jle or xchg lock (bad) mov aas sbb cmp xor roll stos add xchg dec cli push daa push inc xchg aaa out push jecxz add push push daa adc into repz rol fcmovnb (bad) iret jle lds lcall popl out cmpsb lods push aam jg mov fwait std lock sti repnz hlt sti push cld mov stc icebp in scas cs or inc pop inc sub and lock add fiadd test pusha imul xor jno inc jbe mov inc mov ja lea xor scas xchg mov mov mov xor add das scas mov loope xchg jmp inc jne inc jb,pn mov clc xchg les cs adc mov xchg mov cmp mov int and mov mul shlb out xchg jbe dec xchg stc fcmovnb mov mov data16 mov push popa (bad) (bad) add (bad) pop imul sti dec pushf aaa popf aaa sti push cld imul cmp cmp mov arpl push sub test fs inc lds arpl cmpsb out jo cmc scas mov stos popf aaa mov dec out into mov xchg pop xchg scas add lea outsl jecxz or aaa fdivrs dec fisubl jg pop sub push test inc idivl hlt (bad) push bound movl xor push mov (bad) daa mov pop pop sub (bad) int3 mov adc (bad) (bad) pop xchg js (bad) (bad) adc xlat jle sub push cmpsl xor pop adc flds cmpsb ds adc cmp icebp push cs test cmp lock stos mov pop loope sahf push sub pop das or pop (bad) (bad) jbe and push cmpsb js cmp push xor pop sub add adc sub das fimul imul aad add xchg orb (bad) xor mov inc insb xchg mov xchg push push (bad) xchg xchg mov (bad) cmpsb mov and insl popa rol pop (bad) in ficomp push clc fmulp scas push sub or shrl ljmp sbb and push ljmp in push hlt jmp mov or mov inc push push sbb es cmp scas es mov daa jle packuswb test cmpsl push ds xchg les outsb mov mov mov jbe mov mull push dec jl loopne dec mov and inc jl jp mov test dec iret push es loop inc into inc pusha mov push into pop mov nop jmp dec je hlt ss call push jmp or xchg cmpsb xchg rorb mov push (bad) js push cwtl mov add ja pop jo or jae mov icebp in into sahf mov sub mov lods mov or jg mov loopne xchg je (bad) or rolb fistpll mov jo mov inc out fnstenv js inc lahf clc inc mov out fmulp push mov movsb jo cmpsl pop push xchg inc add inc (bad) jmp jnp clc (bad) std in loop push call and imul mov decl insl hlt fisubl sub movq shrl ror push les dec call sub push xor mov push and mov xor ja rolb xor scas add (bad) mov sarb les lods and (bad) repnz lds add cmpsl lea add cmp sbb je cwtl (bad) mov and pop sub inc test xlat xchg inc pop mov xor cmp xchg xlat sahf mov inc scas xchg push pop ss mov aaa (bad) (bad) cltd add mov ljmp pop mov xlat clc daa movsl dec cmpsb bound inc fcmovnb mov (bad) shr add push add iret mov mov xchg add loop jmp adc (bad) nop es (bad) repnz fimul (bad) push adc in (bad) mov inc les push inc mov fwait mov cmp out jo add pop daa push dec bound outsb xchg mov loopne ss or add mov into xchg (bad) sub jns xchg mov sbb out sub fmuls out stc inc repz mov or orl adc (bad) ljmp pop shl jmp push cs pop push mov pop data16 dec mov xchg jecxz sbb (bad) out push cli push popa add outsl cmpsl xchg jg cs xchg aaa jbe mov sub out lcall jno out lock sbb scas pop adc sbb out loopne fsub roll add adc and rclb es das daa fistp add push jg mov mov xchg sahf ret sahf scas fisub out adc outsb out (bad) xchg mov pop ja inc mov mov mov out out adc scas push out neg leave mov mov pop out mov push aam push aad stc adc adc push jmp out push rol mov xchg orb mov es sub adc popa ret push xchg pop fwait mov fwait xchg loop into fadds adc push xlat inc sar xchg jecxz cli neg movl inc mov xor push xlat or and pop (bad) enter pop mov (bad) movsb xchg (bad) (bad) dec xor cmpps sarb mov es ret outsb outsl ret shr ss xlat in push loop pusha fdivr lret lock pop into push out daa mov adc mov add xor push out mov fnsave test push cmp test fcmovb mov push ds out jmp leave test loopne pop loope loopne inc add or mov shlb out (bad) push cmpsw testb cmp ljmp ja decb mov and push add and jle cmpl xlat shlb fisttpll into xlat test fcomp pop dec lret clc es mov or push sbb pop fiadd insl cmova int3 jmp int3 out dec and jg incl into add loope dec cmc fld mov fadd mov fiadd or (bad) dec out fisttp push push sub rclb add jnp shl xchg push mov xchg imul add pop pop add push in jg pop mov jg dec dec and mov setb fs lock add clc leave shrb sub mov cmpsl aaa mov popa and ja or add pop loopne and jg pop xor incl add add xor out cmp leave add dec xorl push push dec movl clc stos pop pop stos aas mov lock divb stos mov add dec push mov shlb fistpll push and push and push adc fdivrl adc push ss ds (bad) xor sub aas adc jo pop or pop push inc add cmpsb outsl push add jl xorl dec mov sbb or mov mov cmovns cmp cmpsb and sahf push shlb adc sub xor fisttp dec add mov sbb mov out pop or repz sbb pop pop insb mov clts xchg push mov push sahf lcall adc stos insl popf adc xchg outsb mov out mov data16 adc dec mov mov es stos rolb add inc adc pop scas add cmp xchg or sub mov jno xor push inc (bad) (bad) inc sub jge sub pop insl aas sub xor (bad) jmp adc cmp or and add push sahf lahf xchg add and ret cmp and repnz scas outsl pop add push push outsl inc mov cmp imul adc inc adc jb (bad) jg cwtl xchg cmp lgs mov mov add out mov mov lods (bad) push mov imul cmp out das outsb and xor pop xor repnz and fcomps add pop push jo xchg push rorb sub mov pushf movsl or or stos out movl mov ficomp xor mov xor and mov test clc mov not mov (bad) mov call ss or es mov inc scas movsl xchg sub mov (bad) fcmovnbe sub push fsubs mov pusha cmp inc or (bad) lock xor adc mov xchg (bad) inc imulb dec rcr and sbb add add jne cmp cmpsb sbb aaa or mov jae jecxz lods (bad) ljmp fcom movsl jne or loopne rorb aaa mov mov ret mov popa add xchg push nop (bad) mov add movsb pop mov lretw push mov (bad) adcb addb push ret movsl add adc (bad) sbb cwtl and xor dec (bad) xor pop adc pop add add dec adc addl fidivr push sbb cmp sbb add cli out rol push outsb bnd mov in out (bad) (bad) je mov push mov mov outsl mov outsb pusha push incl mov cli inc cs ljmp jne xchg lahf lea xchg xlat mov mov and into data16 and scas push insb cmp lock pop add xchg xorl or jns and out cmp xchg push inc adc rolb sahf data16 jbe adc push cmp lock adc push fidivrl (bad) jo mov xchg add iret or mov dec add push movsb clc lock push out pop push decl mov (bad) (bad) push ss inc inc push xchg gs xor inc jge jb jmp dec sub mov (bad) fistpll push js fs loopne ret das clc push or les xlat cmp aas or sub add stos stos inc pop and adc adc out and push shll xor lods call testl push (bad) jmp adc xchg (bad) push xchg outsl lea ds mov mov loopne push out (bad) jl inc (bad) gs ss ret sub push push insl and or jl push mov ljmp stos mov out jle mov stc pop push mov push test lods decb mov and adc rcll ret add hlt incl sbb adc sub add dec aaa sbb xchg (bad) mov or xor or fcmovbe xchg jne and je pop in pop mov xchg je and xchg lcall ljmp enter cwtl xor lcall fiadd pop jbe and mov pop inc cmp pop mov lahf je xchg shlb push lds add mov fnsave mov dec xor adc cmpsl ret add into mov push mov and add inc xchg orl call mov (bad) cmp jbe nop jne hlt xor sub loop sbb (bad) mov add mov push es mov inc sub push icebp out adc mov call adc lret mov ret data16 mov bound or adc dec arpl xor aas (bad) clc push dec lcall jne jne xchg jge mov xchg xor js xor jns ds inc jno,pn xchg inc aaa mov and add pop push aas shr js jg (bad) or out or shl into hlt out out fwait inc mov pop in fcmovnb push adc inc pop inc imul push into jp push and mov scas repz repz push test or jle into mov push ror (bad) jno or (bad) cmp push dec sub les into push test pop push push loope sahf arpl data16 sub mov mov pushf outsb mov sbb push or out into arpl cmpsb movsb imul adc inc insb dec jg loop inc shr sbb aaa adc add cwtl jge icebp add jmp fcompl jecxz inc dec inc xchg lret scas lods add push subb xchg jo call mov cltd push jmp push sahf jl mov jle in mov hlt cltd ret xchg push add mov pop push (bad) cltd push (bad) mov aas and outsb and incl js mov not mov (bad) mov pop data16 and out xor mov ja push sub dec rcrl addl aaa jg mov dec dec and fadd (bad) inc inc xorb add (bad) stos test scas (bad) (bad) stos sub sahf fs pop lock push mov dec add mov jmp fcomp nop pop jg stc push lret mov add sub xchg dec add fisttp or pop jle adc je test out notb add mov cmp xchg imul push add push mov dec out push dec and and or bound sub or push sbb inc loopne neg xchg cmpb push mov (bad) popa or into pop xor outsb or dec in ljmp lahf jle xor lahf iret jecxz out cli sahf mov outsl mov jecxz mov enter xchg mov pusha mov jbe and cmp dec rcrb test add das shrl add cmp or sahf dec or aaa jbe jnp stos add pusha inc pop adc outsl or push sub or repz sbb incl ss mov les es outsb faddl ficompl pop push xchg add mov in into push and xchg fwait ret (bad) sub pop jg sti push lret mov push (bad) out loopne and push jl cmp mov stos and push push leave xchg sahf mov push testb xor cmpsl lea push outsl mov js xor adc jle dec pop jo addb inc and push dec popa rorl cmp or adc or adc add sub clc data16 mov mov jp add add adcl xor (bad) or lcall fldt jle (bad) pop push arpl ds push mov movsb lcall movsb jo push lds aad or dec sub push sahf jb adc inc in inc mov into orb cs cmpsb sub pop push push cmp sbb and adc pop cmp insb rolb add push adc pop cmpsb jg xorl jge mov subb jo,pn fxch lret rorb adc addl (bad) mov xchg jg int push stc dec popa add scas ficom fs jo push jb mov jne mov xlat adc rcl lea dec ret xchg lds inc icebp add push aas stc int3 adc or adc inc rorb movsl cmpsb dec cmpsb cltd ret or or test push xlat dec adc mov out es push inc push or jb adc test outsb pusha push dec lcall push jmp outsl jb mov out pop stos pop mov push mov xchg xor add out idivb mov outsl inc adc inc test adc es jbe add aaa dec ret jg int3 incb push call aas into xchg sahf nop je cmpl sub inc xor mov mov dec and add dec outsl ja push and pop test in pop outsb ja pop xor inc btsl or scas pop sub (bad) adc add movb out pop ljmp fiadd call inc aad andl xchg mov cwtl lock popa push pop (bad) lock adc jle jnp and mov push xchg xchg (bad) xor iret mov push ret mov adc (bad) mov addb (bad) inc push push adc mov push push xor xor cli inc shl dec push mov test adc test out dec (bad) lcall fstps add pop out or pop mov sbb sub cmpsb push std push adc jbe popf xor sbb rolb out out out pop cmp addr16 add lods mov add out mov movsl rcl in fs nop xor mov mov incb cmp aaa (bad) popw (bad) push pop (bad) scas lea adc insb push pop test xor sahf xlat faddl cmp cmp cli rol pop add aas scas and iret xchg (bad) outsb sub dec (bad) adc lahf outsl inc popa or aaa jb or iret out incl sbb xchg dec cmp out loopne sbb insb ret mov (bad) push ret ds in sahf pushf test int push pop xlat jg pop jmp pushf dec ss fisub scas push mov fmull xchg jg aam pop adc add (bad) push add add or mov sahf lret or int outsl outsb adc loop aad rclb pop lods sub loopne push mov (bad) adc push inc inc stos add xor jg push into fs xchg push dec outsl ja add or into incb ljmp aam (bad) jb add xchg cltd jle shl fcmovu xor loop jmp es lret or fistpll pusha xor pop (bad) jg popa or cmpsb push jmp roll xchg or (bad) lock push sahf inc jbe cmp mov mov add xchg js js add push mov test imul sub mov inc dec add pop out xor pop push divb mov push adc xchg enter and stos call into or or dec inc add movsl imul push mov add ss mov or lea (bad) dec cwtl xor pop call sbb lods jns mov pop pop cmp (bad) bound das ja scas sahf int les (bad) adc add xchg not xchg push (bad) jne out sbb add inc push push js mov and and jo imul test subb addl (bad) dec dec add fwait outsw inc xor stc fbld sub scas loop pop pop cmp push fwait (bad) jo rcr push ds pop dec mov cmovb jg mov movsb jno xchg push mov and imul rorb ds sahf test sub bswap mov adc rol inc decl adc nop scas sbb sahf mov push ret gs sub or dec movl ss sub fs lea jecxz adc add fist movsb mov ror les mov jg (bad) das ja and jg loope lret or jo xchg pop test inc popa (bad) mov mov push cmovge pop inc sahf fwait into leavew xchg out add or adc movsb aas (bad) shrl ljmp push dec add pop xor and (bad) xor jbe lcall adc jl lret scas cmpsl (bad) fcmovnbe cmp pop inc (bad) iret (bad) sub iret mov cwtl mov pop (bad) (bad) dec push xchg fidivl dec mov aad jle arpl mov outsb mov pop jle cmp push sbb xchg or scas mov sahf mov or cvtps2pd or jbe outsl jns pushf xor jb jecxz pop add sbb sub cmp push movsl add iret dec lods or stos jle and pop push push mov ja sahf aas cmp scas repz aas ror es in push xchg jp and cmp pop dec aam add mov ret (bad) icebp jg int ret add mov pop jg ret data16 das aad push pop xchg mov imul jno xchg je iret mov loopne add (bad) mov fnop scas pushf or cmp push movsl or jge test push sub or lods data16 movsb sub jno sub and fisttp test loop xchg shlb adc outsl fdivs movsb test adc mov sub out pop arpl ds mov pushf nop xchg jle movsb outsb cmp mov negl cmpsb iret xchg jge xchg xchg outsb or and push or mov (bad) aad into data16 jg xchg jb jbe cmp out loop push push outsl or (bad) jl sub add ss xchg movsb pop and adc add mov cs adc fcmovbe aas xor add dec out dec pop add lods cltd mov das xlat jl loopne xchg (bad) push sub push fs fnstsw scas add out push add or push aaa call jle sub outsl dec sub inc es xchg add push push iret pop loopne push add mov push call movsl mov mov test in or sub pop aas mov add or adc xchg jg ss inc out inc ss add add push and (bad) xlat xchg adc pop pop pop add mov scas sub add ret (bad) or (bad) ja add loopne call (bad) push mov ss cmpsb nop jle sub out mov je xor test xchg push dec dec xchg xchg adc xchg inc shll out pushf jp cltd data16 add sub sbb mov push data16 xchg or inc xor or xor stos jle jmp dec icebp lock push pop push jecxz rcr adc ret out dec aaa test ret xor jno outsb out mov out ror out xchg xor jg ja jg sub into rol dec mov dec push mov push fidiv push xchg xchg addr16 push pop dec and sbb dec mov and dec test xchg movsb add aad subl je lahf adc out cwtl jno xor add adc jbe (bad) push pop clc add fcom push push push push dec (bad) (bad) fxch ja frstor sbbl push lds loope andl and lcall or fild dec push jns (bad) loop mov xchg mov in pushw enter xchg xor insl jle cmpsb push push add inc and pop and pop add inc mov xchg add ljmp jae dec sbb outsb xchg ret sbb (bad) xor xchg clc inc lea (bad) or addr16 xchg dec or push xchg movsb hlt adc nop xor je (bad) jo jg sub push (bad) or push jecxz fistpl (bad) stc idivb loope sbb jle pop ret push sbb jg pop inc xchg xchg subl ret idiv cmpsb mov xchg xor and ret in jbe (bad) movsb xor adc inc or cmp mov bound pop jg adc mov mov inc ror push push ret cmpl add ja ja cmpsl add add shrb ds dec dec jle in cmp cmpsb jg jnp shrb mov dec incl push cmpb mov loopne addr16 or inc aad pop inc cmpsb push mov shrb mov xor inc daa mov jg inc subl push jg inc jle andb stos push pusha cmpsl hlt int3 mov add adc xchg adcb sub xor push jp aaa daa jmp and xchg (bad) or jo jg pop and sub rcl pop ret idivb iret sar mov xchg mov jg push out xchg je stos pop dec pop xchg lahf inc or imul sbb les inc push js fs fisttpll (bad) jle mov mov (bad) cmp inc mov dec add icebp int jb jle push shrb (bad) mov jb push addr16 out fidivl ljmp testl xchg and in loop aaa test mov xor mov pop or push (bad) jo mov inc jg sbb adcb das mov pop pusha cs repz jle push fiadd dec pushf ss add dec dec and lock int3 mov inc fs push (bad) mov inc pop inc cs jb adc imul aam dec cmpsl movd dec adc jg adc or out inc add push es and mov call push add jno divb pop dec sbb outsb pop lock js jbe sbb movsb pop (bad) pop aas dec js push mov scas popa cmp inc ds inc sub xlat add and out lret mov sbbl add (bad) ja ret cmp out inc cmp inc data16 xchg xchg lock addr16 ret ss mov push mov mov push xchg push push pop dec push jge cmp mov lods adc mov push lret jne insl inc rcrb fildll imul and lret pop flds mov adc pop jg or pop add pop cmp and outsl dec or and out sti cmp mov shr insb inc or cmp xor cwtl cwtl and js daa lahf test sbb xchg cmpsb cmp jl (bad) jne rcll loope dec int cmp pop or pop or pop adc ljmp add fldl mov pop adc adc jo loope jbe mov test cmp mov jg jg imul gs scas imul (bad) mov push lahf imul loopne add (bad) mov xchg cs mov popf jne jle mov push adc push fidiv cmp rcll out push push stc out enter cltd mov jbe (bad) jo pop movsl mov jmp cmovle dec js cmp imul pop andnps push and cmp into movsb popa (bad) mov lods cmp lods push lea push add pop push jb scas pop push andl dec mov outsb push mull inc pop iretw mov inc push jo ss pop adc push adc pop jmp into add int clc (bad) pop dec aam jg cmpl out scas test dec mov ja sbb test jbe das adc lret pop movsb leave movq ljmp call xchg add jle push xchg stos loopne (bad) jg sbb mov mov fwait les scas push rcll cwtl mov das out push rcrl jg outsl or mov lret loope lret std inc inc inc add mov xlat (bad) dec push es dec xor and cltd or (bad) ret out xor xor das or imulb jmp adc mov rclb or inc ret pop clc ja push (bad) test pop cmp outsb inc and pop inc xlat xchg cvttps2pi ja (bad) jmp inc xlat ret scas addr16 fist cmp test sahf je cld mov out xchg push cmp outsl movsl in xchg incb add adc int test incb jg push out xchg xchg dec sbb js incb xchg scas mov xchg mov call iret aam sarl dec xchg (bad) xor ja xchg sbb loope out sahf xchg push push aam shrb mov (bad) add mov (bad) fsubs push jle movq inc sbb push incb adc xor mov shlb inc or sbb mov repnz pop xchg les mov xlat inc flds arpl nop stos (bad) add test loopne out sbb clc fcoms ja jo sub push push mov test inc mov in push in icebp decb ret loopne in mov ret push (bad) jmp (bad) lahf sbbb sub push pop aas add sub adcb scas test ds jb ss push js inc out call sub cmp mulb sbbb test icebp lds mov test push jno dec cmpsl bound xchg (bad) mov or scas add add (bad) popa push lcall push jecxz xor adc (bad) xchg mov out idiv cli or enter or adc xchg sub and xrelease push adc jg cmp aaa pop dec xor xor mov xchg push and cmpsb inc pushf sahf ja pop incl mov fcmovne leave xchg leave inc add push push in movb cmp testl sbb pop sbb inc jo rorl ss sarl pop (bad) jmp push daa and clc push out icebp push incb nop movsl sub add (bad) mov es cmpsb pop sbb inc push push cmpsl test leave iret lods push inc mov sbb jle sub popa imul loop ja sub pop lahf addr16 cs pop fsubp rclb sub cwtl loop sbb pop xor out (bad) jno push fnstenv lret rol inc das (bad) xor jne pusha xor jmp mov cmpsl (bad) jmp insb push fucom fisub popa xor sti lahf jge dec dec mov mov push jbe mov mov test insl push and and mov jbe enter das cli xchg or dec ds (bad) mov enter xchg add sbb or dec in lds outsb fidivrl adc fldcw pop ja mov aas mov lahf test pop inc push lret rol aad mov xlat loop fnstcw sarl aaa jle hlt (bad) cmp pop (bad) inc cmpsl pop sti xchg loopne mov push popf add fist stos push mov (bad) xorl mov xor xchg stos xchg hlt inc outsl mov ja or add add add jmp mov fld mov cmpsl test pop cmp xlat xor cmpsb (bad) prefetcht0 adc (bad) ds cmpsb mov mov push loop movl loop lock loope dec cmp cmpsl nop jge aam adc jp out fcom add adc xchg iret mov jle jge jo lods (bad) mov mov test mov pop jle push sub out push and pop (bad) xor pusha test shrb xchg outsl push xor jo loope mov inc ffree add push jbe ds xor dec pop xor pop xor aas push xchg cmpsb fidiv rcr fcomp lcall in push adc lcall lar (bad) push push xchg scas lahf les stos inc cmpsb mul add sbb fst inc inc rorl push es inc imull scas lods xchg or dec adc ret jg mov push lds mov inc sarb adc sbb les push (bad) mov scas push xor pusha sbb pop pop dec pop jle lret add aaa jle mov inc adc add out ss xlat aad push fsubrs loopne push call aaa xlat int3 rcrl push mov data16 sub fsubs addr16 jge (bad) dec (bad) lret lcall or mov fnop mov (bad) pop mov arpl add and imul add jle idivb add popa jg mov imul data16 dec push xor ds je fdivp jg stos jne loopne mov test mov rcrb push push imul xor xchg imul or inc jmp rorl in cwtl jge mov xor (bad) out xchg mov dec xchg in mov xchg jp data16 and adc hlt pop jge loopne cld cmc cmpsl jbe test pusha cmpsl mov sub sub decb jo fisub push mov (bad) outsb fbld xor cmpsl jle push xchg fs shrb stos out test ja out adc lret mov idiv mov add lds jg mov daa push dec mov mov loop fnstenv cmp jle xlat out ja (bad) fsubl or push dec fdivp ja inc push pop call leave roll xchg subl inc and rol push cmp jle mov xchg je dec push xchg data16 adc (bad) cmpsb push cli jmp adc in fnop cmp mov cmp lods and jle xor add push xor cmp pop mov mov mov mov rcrb adc movsb shl jg aad or jle mov cmpl dec je aaa (bad) mov loope,pt loopne fsubr mov add mov push ficom sahf add out (bad) jno pop sbb cs enter aaa outsl rolb (bad) ss or inc scas repnz mov cmp movl jle subb mulb xor jmp inc (bad) mov cmpsb mov push add mulb fsubrp nop mov insl inc outsb or outsb inc mov testl or pop std aaa adc adc cmpsl dec std and xlat (bad) leave mov scas mov loope xchg out les imul jmp rol add fsubp push cwtl lret (bad) jmp inc dec xchg addr16 dec mov ret out xchg lahf cmpsb daa test add jmp mov sbb ds xchg mov test lock mov test push aaa (bad) mov divl lock cmc in or outsl div lret movsl xchg sub push push mov push push xchg sub dec dec mulb faddl adc mov into movsb sub ficom pushf xchg insb adc cli orl fsubl sbb mov dec cmpsb sahf xchg add into lretw sarl subl mov out xchg jecxz iret mov outsl or adc xchg push (bad) decb lea xchg aas pop imul push inc outsb inc push inc dec push inc sbb sbb stos aas jo aaa pop push mov test jle dec vmread pop in repnz add xor mov mov fisubr data16 xor adc mov xor sub add sbb xchg cli icebp (bad) mov fisttpl sbb push (bad) into fmulp ss mov lret incb ljmp cmpsl cmpsl mov fidivr imul xchg dec scas jo push push push mov dec inc jo out out movsl mov (bad) mov loop movw ljmp jp jbe aad mov jo out jg out in xchg or adcl mov xor sti jmp ja repnz std mov dec stos js and outsb jo inc test inc mov jne and lock fsubrp les inc stos mov inc fmul push movl cli push mov daa jbe aaa pushf inc cmp addr16 mov imul lock out mov sbbl inc fs aam pop out jp loopne push out inc cltd jl inc xor sbb push aas mov mov mov inc ficomp out pop sarb pop scas mov mov cltd (bad) (bad) xchg sar cs mov pop (bad) out cmpsb jo jne out je push outsl sarb out inc sub push or out enter add iret push (bad) inc xchg mov aad imul in pusha mov adc pushl jecxz lock xlat mov icebp mov sahf outsl add lock (bad) xlat mov dec or adc adcb xchg mov incb pop les xor push mov sub cmp dec sbb unpckhpd fnstcw mov nop outsb push jle add add xchg sbb cmpb jle mov cmp sbb stos sarb outsl lcall push sbb (bad) jne dec mov mov push fmulp leave sbb jecxz insb imulb xchg push cmp push aaa inc mov lea push cmova add dec dec pop pop ja mov pop inc (bad) and and das add mov jo mov jg outsl fs ss dec es loope push addb imul or mov inc cmp mov cmpsl sub jbe scas repnz lahf ss imul mov (bad) and dec sbb push (bad) mov jbe mov inc push ja cmpsb push cmp xchg mov mov fnstcw add push mov mov xor sti mov add jo push cs (bad) pusha pusha dec push dec sbb pop mov add sahf pop xor cmc (bad) into xchg sahf dec sbb mov add add add ja shrb and jno ret rcll dec out inc popf mov test mov xorb and dec fsubl stos xchg (bad) xchg and mov and sub rorb mov pop adc xchg pop jle cwtl outsb movsl ficomp mov mov add mov cld clc cmc pop add shrl decb sti inc or mov dec sub imulb test sub cmc adc push (bad) out movsb push push dec pop mov (bad) add mov ret (bad) (bad) and and (bad) popa xor xor pop out lods xchg or pop push data16 adc dec or pop push dec xchg test or add pusha mov shr stos lea out jg into scas rolb mov int loopne mov (bad) push (bad) (bad) loop mov pop xchg insb push jns clc aam pop push loop rol push mov rorb mov cmp jo push inc dec and jbe shlb dec addr16 in jecxz (bad) jbe and xchg packsswb (bad) sub mov (bad) cmp ret out inc add add ljmp pop in xor les out pop mov (bad) pop sub mov xchg xchg (bad) call (bad) mov push ds test sbb push outsb ljmp test inc outsl leave push ffree out jmp mov fdivr fld std test dec push mov and stos pop (bad) mov icebp out repnz ja pop push xchg sahf pushf (bad) subps pop push gs jle daa jmp push loope pusha inc xchg (bad) xchg incl mov cmp dec notl sbb add or sub xchg (bad) mov xchg xor dec divb xchg ss fcompl mov xchg pop or mov xchg inc pop jecxz negb xchg dec push xchg xchg jb aad stos ljmp xor jbe enter ret adcb sti in iret mov pop push or fadds mov sti aam or out out movb pop out (bad) lods mov rorb and lock xchg clc (bad) and cmpsl xchg ja inc pop and ret mov es adc inc js jle add pop (bad) mov dec into es cmpsb sub or sub (bad) push das dec and xchg mov adc xor and mov cmp add dec sub outsl sahf (bad) imul outsl add add neg (bad) loopne lock leave mov pushw add mov sub dec (bad) push inc aaa (bad) push mov mov mov push loopne loop cmpsl push and xor push jne out lahf test test inc dec push adc inc xchg jno scas mov pop mov cmpsb push les xchg push psadbw loopne fmulp cmp mov divb pop insl push notb add es cmp out pop jns jne mov hlt fldcw xchg (bad) into xor mov push adc adc in push push (bad) mov jmp cmp ss subl movl add insl rolb dec sbb scas sahf ds aam push out jnp sub dec sahf test es ds xor out jbe xchg xchg icebp mov jg sahf outsl or xorb ja xchg add dec and pop movsb pop push mov fdivrp out fisttpl test inc push into lock out aad mov ljmp aam adc mov dec cs pop mov xchg jg outsb stos stos sbb jbe daa pop mov outsl xchg andl hlt add pop xor insl ds adc and push pop dec push and insl push loope (bad) sub gs sahf sub loope (bad) (bad) outsb adc pop sbb notb fadds rcrb pop outsb add or jbe aam outsb push (bad) jne add adc movsl outsb add out outsb cmpsb out ret sbbl or (bad) or popl sub into clc ret cwtl xchg jne ds xchg dec pop (bad) mov ret fs popf mov sahf mov mull mov aas jno add lock sarl sbb iret daa cmp fiaddl (bad) pop inc sub add in adc clc in dec mov aad aaa jecxz adc insb mov call mov (bad) ljmp cmp mov mov jo inc rolb pop cmp ss mov scas cld or push xchg inc xchg push addr16 push push arpl sbb xchg (bad) cs in push in fldl testl data16 xlat les mov rolb (bad) call sbb xor orl hlt in mov rol mov push ds jle mov push push push mov test aam aaa cmc daa jmp push dec jmp xor int3 std in sarl mov push insl adc pop ds push fsubr or xlat add fcoml movsb dec stc call test sbb test mov pop pop jo incb sbb es pop (bad) xor mov test pushf or lds aas adc jle aas stc loopne or leave ljmp adc cmp pusha sti movsb cmpsb scas cmp aam movsb fmuls (bad) jg cli xchg xlat ret mov nop jns jmp and push movsl push mov push scas xchg pop mov mov fs jg fimul and ja ljmp enter mov push jo lock shlb sub scas test les shrb adc xchg in xlat add cmc xor lret (bad) std mov jbe cmpsl push cmp dec outsb mov dec (bad) push rcrb mov fisttpl dec lret idiv loopne inc add mov lcall jmp push bound jmp (bad) into outsl in pusha and lret dec pop lcall add dec mov int3 dec cmc fcmovb enter add std loopne inc xchg rol imul daa pop pop lock xchg dec xor rolb add mov imul add jnp fidivl pop push add mov push and pop pop sub inc leave mov add xchg dec pop add inc fsts inc and pop inc mov rcr pop imul pop shlb inc push jg add in dec or scas mov lahf jg mov (bad) in pop push lock (bad) jb stc cmpsl pop jmp stos pop pop clc mov out mov lock pop cld or incl dec rcrb dec nop pusha push sub mov cltd cwtl pop mov jo mov adc mov mov or sub (bad) or xchg push mov (bad) and add cmp adc and lea pop xchg fidivr ds push cmp pop rolb or and add xchg adc adc push push and or sbb adc sbb (bad) outsl inc (bad) cmpsb xchg cltd push push cmpsb pop and add inc notb shrb sbb scas pop push aaa adc test push dec and pop adc out sub adc scas adc xor mov pop sbb xor pop (bad) (bad) call addb sub ret aaa fsubl jo stc xchg imul pop jg and inc (bad) jg cmp data16 push negb in mov lcall dec pop push xlat sub add push push push xchg out xor pop xchg cmp add sub dec xor xchg pop ss dec inc addr16 sbb es jg adc sub mov sahf xchg (bad) es lds push mov jmp xchg test jge movsl xorl call mov and imul mov xor sbb stos and jbe ficomp adc xor xchg pop pop xchg nop push xor push xor xchg sbbb pop xor xchg lahf ja fcmovu mov add mov (bad) mov xchg imulb leave out mov xchg notb xchg test push cmpsl fwait (bad) mov (bad) jle xchg jo insb or shrl (bad) sbb inc sbb int inc test cmp push out push iret add or add sbb cmp sahf sbb (bad) das xchg and cwtl imul rcll repz outsb add out in adc fmuls (bad) les out push lcall outsb outsb lcallw lods xchg add xchg xor int pushf sub or or push movb ljmp xor adc add testl push ret mov dec sbb mov test aaa outsl mov and inc adc add das mov data16 fdivr cmc and into out push out fcomp add shlb push jnp jle push movb dec add js roll cmp dec call fisubr (bad) out fdivs fistpll arpl mov sub sbb add fidivr jnp pop sub sbb add pop aam das outsb add inc loopne or adc sub pop pop cmp lods faddp mov clc in jmp mov fcmovnb mov fucomip mov jb pushl cmpsb leave ljmp jo jo ds jo or dec xor sahf jg dec push push sahf arpl sub sbb les stos popf fistpll pop and popf decl rcrl pop outsb dec inc test popa stos nop adc add stos mov xlat inc sub pop aas xchg cmc lret sbb xlat and sbb jle cmp setbe outsb (bad) stc dec dec nop mov repz roll stos add cs sahf mov movb inc jb es icebp cmc mov dec fadds clc (bad) lret mov ds or stos js xchg and out (bad) dec xchg imul mov fiadd or pop mov icebp mov mov stos loope iret inc inc pop es ljmp pop out pop inc pop (bad) mov push adc ret mov inc in call outsb loope into add out insl pop les stos imul outsl xchg aam or nop inc cmc fistpl mov das ljmp mov test mov in and inc and xor sub xchg fs jmp inc sbb into jecxz sub lock fidivr fmul scas and xchg push xchg movsl sub pop subl aaa adc pop daa ja dec jb inc orb int push inc mov (bad) lret push mov adc push sahf jp js adc mov sbb insb addb inc mov push jmp lds push xchg ja fwait jnp rcl xchg dec push adcl mov cmpsb sub insl xor mov fwait jno mov cs push stos ret fnsave push std mov mov js ss xchg mov aas adc mov insb add adc adc pop das mov jmp mov outsb call sahf es or cltd call mov scas data16 icebp out rclb cmp out pop aas cmc repnz push pusha addr16 aaa ret sarb mov push jo inc jg dec aaa (bad) adc out lcall (bad) cmpsl nop sbb insb sub fwait andb fcmovne (bad) lock sub dec xor add pop push mov enter repnz xchg or mov cmp or fadd push out inc popf (bad) fcmovbe out shll call xchg (bad) arpl dec push (bad) sahf fsubr nop dec inc dec in repnz mov lods push ja inc loopne adc mov push test pop inc out mov sub sbb xor insl test into mov (bad) pusha inc stc outsb mov or and mov sbb adc push or inc rclb adc add jmp inc and push push sub push xlat xlat xlat mov xlat pop adc add mov adc inc mov cmp loop,pt out cmc inc stos and scas out gs add sub mov mov (bad) xchg xchg lret stos push out push jle aas inc add loop inc es xchg stos add ficom cld sbb xchg or xchg data16 push xchg cmpsb adc pop ss xchg ja push mov jg call push sbb decl je das imul lods and lcall mov cmpsl or and push into rorb cmovbe call mov out out (bad) mov mov sbb jo popa fisub sbb or push frstor inc inc aad loopne out sarl mov xor pop rclb cmp cwtl imul jge cs rcrb (bad) stos lcall imul pop inc xor cmp push and cmc mov popf jae repnz into test jmp inc adc sub pop shrl jmp and stos lcall ds scas mov pop mov lods and push lea xchg outsl jbe mov ja (bad) scas push test mov jl mov pop xor push xor push sub rolb and fdiv mov mov out into jne push dec stos popa leave xor cwtl dec pop jg test push inc dec push loopne xor push jle pop adc sub mov dec mulb xchg xchg fisttpl loop,pt js sbb jmp lods into lahf xchg les mul in clc ja in add scas nop jb sbbb into outsl xchg fs push xor (bad) mov cs cmp mov fwait jbe inc jns dec sub pop es lock adc loopne and out outsl imul dec fs addr16 add pop inc mov pop sub aas iret adc push push mov jb add nop push imul (bad) mov in in out fsubl in pop les push fucom call shlb xchg jl dec aas push inc add out scas dec mov nop adc pop ds and xchg es outsb out rcrl (bad) mov aas adc clc xchg lret (bad) (bad) dec cltd dec add es cmp pandn mov rorb js bound or les pusha xor lock jbe mov push push mov loopne xchg out in out fisubrl dec (bad) mov nop sahf xchg mov push cmp pop adc das pop xchg xchg pop repz divl mov mov push mov mov les out imul jge or add mov dec xchg push (bad) out mov mov cmp addr16 pop xchg ds inc xchg add inc inc mov es mov cmp sbb idiv outsb sub out adc ds mov (bad) adc stc out ljmp les mov popf xchg push (bad) mov pop jg jl loope aas in out cli clc mov xor jbe jns dec (bad) pop pusha pop mov aas out add fs test call cmpsl jg hlt imul adcb clc inc push push iret push add insb mov jge sub shlb pop adc adc scas pusha les jo,pn and xchg (bad) cli fbld ficomp mulb lret push mov popa (bad) pop call (bad) in in or je sahf shr cmp aas xchg jle dec push inc cmp ds xchg push insb mov jg ds cmp xor push push push call xorl lret int3 aad fwait xor out inc fisubl mov push or adc sub dec divb pop rolb adc hlt mov and cmp cmp pop andb pop xchg mov loope aaa inc add push out cmp pop pop int3 ret aas lods dec imul xor outsb aas out mov test mov test pop mov aas dec les rorb mov (bad) jle inc jns pop sub pop xor fsubrl push fimul rorb add add or pop pop test push daa sub add lahf das rcll mov push sbb or xchg xchg push hlt fisubr mov aad mov arpl outsb jmp lods cwtl mov xor pop inc outsl aas jecxz jecxz push out mov push test xor (bad) and jecxz and das or push cmpsb andl cmovb scas leave lea xchg cli jg sub xchg mov cmp je or mov lcall add or dec push xor andb jecxz (bad) stos add das fildll and push sub sahf pop mov sub pinsrw es aas and sbb mov cmpsl or gs cmp sub mov nop xorb sbb add jle,pt inc rcrl ret outsl inc sub lds inc hlt test test insl sub inc fisubr adc xchg sbb push sub mov xchg lret add push mov xchg lds sbb call pusha inc pop lahf or adc ja cli jle in add cmpsb outsl dec out mov cmp push rorb add nop mov sbb cmp mov mov jo adc dec pop xlat (bad) pushf add inc fcoms add xchg xchg jp lds pop popa xchg dec xor andb adc fistl add push mov push push call (bad) pop fucompp jno mov jle push fsqrt mov adc inc test mov adcb pop xchg jle ds sub cmp out cmpsl mov mov mov pop call mov into es add cmp arpl push jle mov aam xchg movsl push inc je jne pop call xchg aaa push or inc maxps (bad) push jle inc sub or xor adc mov in inc xchg inc add ds (bad) iret rol push add xchg add or imul inc js pop push movsb (bad) icebp dec jbe jle out insb mov mov imul or cmp and in out outsl pop pop loopne mov cmp push push xchg mov mov push fwait jnp test loopne jmp and ljmp and xchg add sub iret sub call es mov (bad) fdivr outsl shl loopne cs xchg out mov subl add push push aaa rcrb ret sahf ds pop sti inc ss xorl adc lds inc cmp rolb mov outsl dec sub or movsl xorb xchg scas dec call pop mov mov orl add xchg (bad) das (bad) lahf jne cmpsl pop cmp sub decl sar add jmp roll sarb fidivl leave ja (bad) fiadd fstps hlt test mov adcb call push jno outsl popa (bad) xchg xchg push jg iret (bad) in push jecxz (bad) cld add shrb (bad) mov leave clc popa scas push ss loope aaa inc sub (bad) xlat lret ret arpl fisubr sbb add or sar mov jle test or (bad) fbld mov push out or inc add pop mov xchg push pop sub aam mov adc mov xchg push out sbb mov ja icebp push or and call fidivr fsubl nop scas push push xchg xorl aas xchg jno pop dec popf dec into cmp add imul icebp out mov cmpsl add or adc movsl add iret ja mov scas (bad) xchg (bad) fdivrp lahf (bad) push jle ret jae (bad) sbb sbb add ds adc add in fcom add (bad) rol add cli into jl push scas add add ficompl fidivrl outsb mov inc sbb jo add jg mov xchg mov push hlt ret push (bad) xchg and mov loopne call gs and outsb fsubrp insb or lea (bad) jle popf pusha loopne and jg aas js push fimul out xor jb sub and mov inc out adc mov pop or jge lret jp aam push cmp dec pop push push xchg notl or test in ret xlat inc add xchg mov adcl dec cld test adc jl push daa mov sub pop xchg xor aas out loope mov add scas mov jo sbb mov lods cmpsl push mov jp adc xor mov pop mov sarl bound es push aaa fild pusha lahf pop divb aas hlt and roll jmp imul or lods lods add into int3 jmp jo adc push aam jno aas jmp and xchg imul nop dec cltd (bad) scas aas movsb sarb ds ja cmp jne push shrb mov notl cmp and data16 enter enter and dec aas xchg insl dec (bad) aam dec inc js (bad) lea jle xor cwtl xlat and sub xor imul jecxz into (bad) into lock nop dec (bad) dec xor mov aaa cmpsb push cmp dec loopne pop pop lcall loop stos (bad) mov pop aas jg mov mov cltd bnd add out loop in sbb out test cwtl ds pop ds xor push scas fwait dec add inc cmp add aas inc xor jg dec and sub movsb cwtl jbe fisub xchg cli dec adc hlt cs sbb movsb out sub loopne push lea and fdivrs and mov in ss sub fld adc mulb lock mov pushf mov xchg jae pinsrw push pop jae das ret push xor jg cmpl cld jg cmp data16 out (bad) mov out jecxz adc pop mov orl out aad out dec jmp xchg ja dec mov pop jg inc push lret sarb jp je (bad) push push adc xor call cmc xadd aas std enter into (bad) mov rorl fadd into aas xchg push out comiss scas mov add adc pop aas xchg jmp jmp std incb push or scas xor nop sahf scas add xor into rolb dec mov cs lds ss sub js aas xchg push adc (bad) lcall jno sbb sub dec ja xchg push mov ds into fidivrl inc mov pop pop dec ja loope push iret out pop adc leave mov xchg jle das imul pusha (bad) push stc lock jle jecxz cmpb scas imul sub inc xor sub sbb jmp mov inc jp jle (bad) aam pushw mov movl pop sbb sbb ja sub cwtl inc or ss sub (bad) mov fcmovne into popl lods lods lcall push (bad) xor push ss xor outsl push dec xchg orl aas mov (bad) loope push mov lidtl aas ljmp push hlt or push ss bound aas inc sbb rol cmova pop sbb (bad) testb add mov push (bad) xor movsb pop cmpsb mov ds nop dec sub jg mov or cmp clc das hlt les iret lods mov cmpsb sub inc xchg jb xor cs add add fisub popf add mov mov scas mov aas imul stos ret mov aas cld or push out pop idivb ret mov add cltd mov jl clc cmp outsl outsb mov mov adc cld mov jnp fwait jno push js (bad) xchg dec sub fdivl or add push icebp ret mov fxch int3 adc adc movsb push push sub test xchg mov add add sahf into addr16 data16 out (bad) push cli add aaa in repnz mov mov daa aas xchg in and push mov iret sbb ret rol cltd scas scas aas add ss push sahf mov dec pop sarb mov push xor xchg push mov sbb shrb fisub aas ds jge out incb cmovno push pop fidivl or jge cmpsb mov cmpsb push repz hlt dec push fdiv aas mov sub popa push push cld daa (bad) pop mov push data16 xchg sahf pop xor xchg cmpsl adc gs jb push aaa mov fwait sbb lock std pop jl ds subl aas stos pop xor cmpsl xchg mov jg or in les pop sub nop shlb mov incb add cmpsl jmp inc xor xchg jge aam push xorb out push pop adc jnp icebp hlt outsl lar imul (bad) add (bad) ds dec loopne andb das inc inc decl or pop (bad) adc sbb loopne ljmp xchg insl (bad) lock inc jg arpl sbb pop leave and pop outsl adc xchg mov pop mov mov subl inc outsl pop xchg add or jg loopne mov lahf sahf and or add icebp call mov cmp adc add cmpsl das add inc cmpsb jl sub xchg movsb sysret adc aas xorl xchg push mov sub or mov inc pop call les inc push fimull cld push jg pop inc ja and sub dec rcrb daa xlat xchg mov sbbl call fsubp (bad) out inc or mov (bad) push insl and jecxz add mov nop or popa cmp mov (bad) imul adcb pop dec jns sbb pop decb fiadd (bad) jno aad sbb jg or or or dec jg loope mov pusha push inc pop test outsl (bad) call xchg test addl push add fnstcw fsub push in out hlt or pop add and imul mov cmpsl add add lahf pop cmp arpl insl dec push insb push adcl stos sbb or add mov (bad) mov lcall inc fs jns in dec inc xchg subl mov lahf ljmp out and outsl push inc insl (bad) mulb xchg mov les aaa jb jle lahf mov jle rolb push (bad) jbe sbb add aaa in out ss das popa sub mov popf cmp cs lahf mov fmuls xchg add mov out in rclb pop mov rol add sahf dec je or call add mov inc jl les sub test out loope push les out ss adc scas pop or jecxz std aam or mov ret push push and cmp fisttp push xchg jle scas sarl pop rol push (bad) std and (bad) xlat sahf loop push hlt notb pop and (bad) fnop lds dec xlat daa add pop andl cmpsb roll jbe aas testl mov mov out arpl and mov scas scas lods imulb mov pop cmp (bad) or pusha pop addr16 pop cmc and pop lds or sub dec cmp or ja cli stos cs (bad) iret mov fnsave fstpt into mov pop pusha xor call pop inc sub push loop adc (bad) aad fsubrl cltd mov into push jecxz flds jmp popf subl add ss push and or adc dec jle push in loopne insl fdivl scas std mov sahf iret stos cwtl mov movsb pop cmp stos imul dec mov mov jne cmpsl pop (bad) and add sarb pop shrl pop jle push and and scas sub dec add xchg or (bad) int sub xchg fistpl into ds ljmp mov flds or mov mov mov add ja push and addr16 (bad) (bad) mov sarl cmp insb jg lods xchg subl ds xchg out push cli (bad) cmc sub out jecxz mov bound fildll imulb (bad) or pop cmp popf inc inc inc roll das inc sub add sub push push inc push dec pop ss push hlt enter ret ret or cs push xor mov pop ss pusha ret int mov loope rorl mov icebp repnz add xchg andb add add (bad) add js idivl data16 mov ss push mov adc xor xchg pop ja js lret (bad) leave mov movsb out xchg xlat sbb pop ljmp inc scas ja (bad) mov add xchg cmpsb pop stos outsl dec push outsb or sbb pop xor mov dec xchg inc mov push cmp add das push pop add loope lock lret jne push mov stos (bad) ss xchg (bad) mov push loope xlat sub mov (bad) xor sub fcos test rcrl (bad) divb pusha insb sub popa mov nop addl test push push inc sbb mov out fildl (bad) insl push sahf sarb mov jmp adc inc xchg clc out int3 cmpsb xchg xchg xchg daa lcall dec jb mov insb inc pushf imul jl inc or jg inc xchg push cmp xor sub pop sbbb xlat in ret mov inc or rorb add push mov in lret shr inc add (bad) es or incb mov pop add fisubl clc movl mov jbe icebp add seta jo rclb scas lret pusha or mov es dec xchg mov (bad) negb iret cmpsl or sub cmp mov xchg mov add sbb jle mov sub scas fwait pop cmp xchg sub (bad) in dec jecxz jmp mov dec ret les or pop into clc and loope xlat mov dec sub jl (bad) jle pop leave pop pop outsb push cmp add add rol movb xor sahf inc hlt shlb insb inc and (bad) xor aas mov scas xchg icebp mov adcb je addb mov cmpsb add jmp pop loop cmp cmpsb fcmovnb jbe xchg add clc popa sub ja ljmp mov xor push jo scas jmp shrl xchg ret mov xor mov mov xor cs cmpsl jne pop pusha sarl lret pop inc (bad) sahf lods mov (bad) ss jle push pusha mov sbb inc push movb (bad) rol sbb jle fmuls aas negb or enter add pop es loopne dec xchg subb pop cmc in pop push and cmc add inc clc into (bad) mov lea add push mov movsl pop inc xchg sbb ret divl out scas mov sub push mov dec add insb mov add lea push ss pop add out rcr sbb cmpsb sahf aas mov and data16 xor pop negl fadds and das into adc test pop cli nop push imul sbb aad rclb mov cmpsl lea push push adc inc mov xor loop adc mov and mov das into stos jns jbe cmpsb fistpll adc scas mov ds (bad) lock inc add push inc das repz scas test jg ss ret xchg adc pop mov in call add cmp js imulb gs mov push lock cmp mov into pop add es loopne xor outsl push rcrb outsb gs push aas inc (bad) jle or das jl mov out dec cmpsb mov ss (bad) fisttp mov push add sub pop jmp add fisubr loop mov mov xlat or scas in mov out cli push and or push and push outsb rclb inc ss dec xor add repz cmc les push push add xchg lods scas into push push add es add sahf js xor loop leave outsb adc (bad) jl cmp or mov or inc out movsl pop pop cmpsl inc xchg ds movsb xchg mov mov and data16 xchg xorl add fucomip (bad) push push dec sbb int3 scas rol (bad) inc mov repnz cmpsb test or mov pop scas aas cld (bad) mov xor arpl jbe pop outsb (bad) movsl jo es push cmp adc aaa or mov xchg loopne xor out dec pop add cmp popf insl ds mov rorb jp xchg dec add add jecxz mov (bad) scas shlb dec pop outsl pushl ret push fimul sbb pushf out outsb add add icebp lock into call fildl or pop pop push loop or (bad) mov sahf dec addb mov (bad) (bad) in fcmovbe sti repz xchg jle insl xchg jno in xchg xchg inc sub or ss orb fiadd push lods icebp pop sahf into stos and mov mov test sbb mov lret add push add out xchg push outsb pop aam mov inc and sub or cltd pop outsb loop dec jecxz data16 (bad) jge or push lods add imul (bad) cmc fmul ss xor inc inc rolb mov push mov push dec sbb pusha xchg mov add cmovno pinsrw push sub and add clc mov sub out or hlt sub mov jle mov push ficom push jo cmpsb mov xchg subb add jae mov sbb outsb outsl (bad) fisubrl mov add dec push add mov fadd es or cmpsb fmulp pop push clc (bad) clc fmul imul int jne fadd iret xchg data16 das inc jno loope sti out call pop aas imulb cmp pop dec jecxz dec add dec sbb push fst into insb add pushf dec xchg arpl data16 mov (bad) or add scas or mov push scas jo icebp xchg data16 xchg xor add and add (bad) fiadd add fistp fnstsw mov shlb or xor outsl add enter andl call inc pop sbbb popa add (bad) outsl in mov enter pop jbe dec xchg push dec dec into mov dec xchg jo add rorb aas push xlat ficompl add mov outsl mov and outsl xchg push xor outsb xchg jg jmp das data16 mov sub mov dec in adc out fisttpl lret mov int lock rorl sub mov jmp adc dec (bad) scas push inc and add ret sub (bad) pop rcrb outsb dec and push add sub mov sbb push mov cltd (bad) outsb outsb jno add sub cmp jbe loope cmp movsb aas push inc lds es sub lret ds sahf cmp sbb push pop push push (bad) cmp into std repz xchg iret mov test adc shlb add clc out xor xchg sub jne lea ds and loop sbb push mov xchg out adc addb jecxz push pushf or mov mov sub add ss mov dec daa pop iret mov mov in pop add jbe rcrb inc xor mov xor clc out xor pop xor cmpsb out cmp out fimul fsubl stos scas imul subb mov xchg push mov mov scas push jo inc (bad) or inc (bad) dec add mov mov and and fmul (bad) add stc and pusha jle rclb and sub (bad) jecxz cmpsb (bad) ljmp push scas xchg jo pusha dec xchg xsha1 cmpsb or roll mov jo cli es (bad) insl xlat das imul jb mov shl fiadd aam add jg cmpsl in out sarb outsl add add dec pcmpeqw sub into cli push add iret sti jmp mov inc test xchg sbbb xchg lea insb out lods xchg jge fs inc ret scas fimull daa pop mov pop or iret inc add inc inc clc outsb stos inc push add shl push inc cmp cmpsb push xlat add fdivl pop fdivrs das lock rorb adc mov psrad out sahf xchg add lods push add add xchg into xor iret int push rcrl push sub ds pop mulb mov into fs sub daa out shll or push and fs jp pop push scas mov outsb pop and ja push pop aas push sub int sti mov les (bad) faddp mov lahf adc inc add stc sbb nop xchg jle lock data16 pop cmp pop lock mov lods dec call mov pop pop xor nop imul das dec pop aas sahf or add (bad) xchg xchg out pop loopne add scas add pop mov add mov pop add dec cs nop or xchg jg add pop lock fbld xchg inc sub clc aas (bad) sarl ljmp pop stos fcoml and frstor aas and inc xor sbb inc outsl jmp (bad) mulb not repz mov adc sbb push out mov imul adc ret sahf add push aad inc mov scas or pusha imul dec sub xchg adc lret adc insw cmpsb jo cmpsl aad inc insl push sbb dec shrl dec scas aaa and mov test lgdtl movsb and popa push xchg fstpt dec mov mov push outsl push sub mov or jg test sub iret dec and rolb adc adc rorb ret mov push test (bad) cmpsl mov pop cmp dec xor or mov mov sbb sbb iret sbb add cltd imul push out xchg scas test movsb jnp outsb fnstsw js cmp dec imul ret div jg (bad) dec and fisubr push add inc mov roll pop and mov popf push xchg pusha in and mov jg je and add stos xchg cli xlat mov stos xchg rclb les (bad) imul push out scas stos add stos inc cltd push dec push sbb sub pop cmc clc stos test out push in xor push mov movsb mov (bad) cmpsl and ret push das pop adc adc cmpsl loopne (bad) or sbb mov push movsl aam xchg cmc in into roll out fildl into enter cli sbb movsb mov imul xchg mov rclb test dec push scas pop aas push out push add pop daa adc inc shll xor popa ret adcl ret shlb (bad) (bad) pop mov adc adc aaa lock pop push xor negb mov in mov mov push test xchg mov push outsb push inc push outsb pop ds push sbb call mov cmpsb sbb jecxz (bad) fnstcw cltd jle and mov repnz add js test lcall xchg push packssdw pushf mov cmp or inc movb lahf mov push inc cs in mov iret mov adc (bad) inc mov adc inc out pushf xchg test sbb jbe pop push push scas cmpsl mov push adc (bad) pop push and inc pop pop (bad) xchg imul js outsb pop dec adc xlat mov mov fst cmpsb mov push add (bad) popf ljmp pop jnp add pop imul mov xchg fadd mov xor aad fisttpll mov enter adc test test xchg ret testb icebp stc stos bound push divb mov pop dec or adc push pop push test test add cmpsb (bad) mov inc mov out pop mov or pop adc xchg push mov pop decl mov sub push xchg jl xlat mov adc sub stos popf (bad) inc sbb xchg or push bound push in cmc mov sub (bad) mov push inc pop mov push js cmp arpl inc cs stos fnstenv outsl xor popa js movsb into je pop and mov (bad) cmpsl push jg dec roll xor adc adcl sbb sbb mov inc push inc jo sbb and in mov pop fistp in mov inc jmp test testb idivl test push nop/reserved mov nop test xchg mov inc daa sbb jp and shrl jg dec (bad) push (bad) sbb mov xchg imul rcrb mov and adcb out and mov mov insl out in jecxz mov mov enter scas shrb mov dec stos mov in sbb cmp ficomp orl xchg pop lcall jbe icebp add lea daa gs pop lcall js and shrl sbb rcrl xchg pop adc adc daa push pop add mov mov add pop clc ljmp or mov mov std loopne dec push adc cs xchg xchg into arpl push inc add icebp das xchg outsb jl dec popa mov ljmp cltd jp (bad) sbb dec aaa mov xor (bad) insl rorb (bad) outsl sub movsl pop jge xor jecxz cmpsl jmp and ss lcall enter push push dec push inc sub adc scas mov sbb mov leave lods xchg mov pop ret pushf cltd push ljmp cmpsl out (bad) stos mov out in xchg loopne loope cmc cs fs (bad) data16 lret push push mov lahf sbb xchg ds pop dec sbb popf ds pop push fdivl jge es inc clc push dec mov pop sahf lahf incb dec push xor xchg xor dec addr16 leave adc sub add xor mov push pop imul daa ret mov mov out addr16 mov adc mov scas mov push mov std call mov fs jg pop (bad) dec push mov mov pop pop mov (bad) insl out ljmp mov and pop xor or sbb add dec rcll pop add out or loop iret lcall adc or mov je cmp (bad) fs or xchg xchg jne jle out mov xchg jmp or mov xchg xchg int add (bad) icebp idiv lods sub pop out mov imul mov das scas (bad) ss push xor xchg xchg jns (bad) outsb cmp mov es or lcall mov xchg cwtl ds pop lret pusha add mov xchg imul ljmp stos (bad) into loope mov add scas dec fsubs dec (bad) outsb xchg xchg data16 notb sahf cmpsl pusha out (bad) fcomip aad test aad stos jp (bad) popa movb and inc arpl sahf jno or jns lods xorl mov rcrw dec pop insb ss (bad) inc xchg gs jp cltd inc (bad) dec cmpsl pop push sbb lcall push pop movzwl pop pop test sahf jge add test jmp jb ss out call lcall inc outsb mov ja inc xor mov decb in jg fldl cmpsb test lea or dec add push lock jle jle dec push mov imul and (bad) (bad) ss jae xchg add sahf jge cmpsb and lahf push mov and pusha dec sub sbb maskmovq testl sbb add jns mov es and test mov into in mov mov test dec push into pop dec cmpsb repnz jmp fdivrp rorl mov pop (bad) mov ds cmpsb cmc adc push mov test and mov js cmp inc idivb pop or sub lret (bad) push cwtl shlb sub dec lods adc (bad) stos or lock cmp push cmpsb sub out into jns push dec mov add (bad) push pop jg decb cmpsb nop (bad) xchg fsubrs cmp xchg inc sahf jns inc jmp (bad) into scas (bad) out push test test and xchg lret test inc xor push enter mov rolb mov sbb push mov repz pop push xchg jns push fs bound das das push or out das mov outsl adc ficom mov int sbb add ja xchg mov loopne inc rorl (bad) add mov (bad) (bad) aam ror sbb (bad) pop movntps sahf adcl out (bad) out rolb es xchg xor das andl dec sbb push test jle lods sub rolb js test popa cmp adc mov popf and xor outsl insl xchg adc aam sbb pusha dec pop outsl xor sbb or xchg (bad) and cmp sbb jge mov fisub mov das sub cmpsl loop xor sub nop and fstl dec push jle outsb mov pop (bad) pop dec test xchg xchg rcl mov out cltd xor scas rclb push sti add lret fistpl sbb pop lock push mov xchg and mov lods jecxz pop iret sub add clc jg xchg ficomp inc dec inc xchg loope sar into (bad) xor xchg mov xchg push pop dec and cmp adc mov loop inc and dec popf lods inc xchg (bad) pop (bad) pop cmp dec mov add push cmpsl sbb add fs das or push shrb inc xor iret mov mov pop out pop mov (bad) (bad) fstl sbb icebp popa or push and xchg leave repz adc ja or push pop call pop add movsl mov aas add dec inc ror movl pop adc loope (bad) aad inc mov lcall or call mov orl mov push xor jg jno xor xchg mov push pop inc xor addr16 push fcom adc (bad) fwait addl mov push movsb pop cmp ss xchg icebp (bad) push pop (bad) push sub addr16 lods jmp (bad) or aas out mov cmpsb mov lahf jo mov dec inc and pop aas push sub cmp incl loop cmc cli (bad) adc jbe push cli (bad) bound (bad) call xchg jo xor and xchg mov popa xor inc xchg fs neg mov sarb xlat es inc ret xchg mov incb daa (bad) aad bound icebp mov mov rol ret xlat ds xor (bad) (bad) fildl pop and sub div xchg xorl jle pusha outsb xor jl out fwait int sti mov push addl and (bad) movsb rol xchg xlat and cmpsb sahf (bad) in popf jns xlat movsb xchg icebp jmp jne lret fnstcw adc addr16 dec sub pop push or movsb cmp daa fxch int mov (bad) lret clc mov dec aas xchg pusha lods and maskmovq testl xor mov add jecxz out jmp sbb mov (bad) mov push dec mov dec ljmp dec push outsb sub mov xchg mov jle push cmp bound jne cmpsl sbb addb fbld cmc and out pop push xchg add xor xchg xchg pop (bad) (bad) mov inc loop lods cmp rcl cld fidiv push xor sbb xor add xlat popa and dec xor xchg hlt xor insb inc and jo andl sahf jg pushf mov in not je or inc outsb call push xchg outsb nop outsb jg inc outsb mov inc cmpsb or lahf sub mov cli mov lods xor mov and jp ficompl cli cmc jno and cmpsl and decl pop inc pop repnz mov jnp pop cmpsl cmp cld push pop cmp scas sbb inc add dec xchg or push lahf xchg or jle popf mov out cld inc add es or sahf mov es outsb mov inc xchg xchg sbbl push ss push aas fisttp aam adc mov sub dec (bad) movsb jge adc addl int and xor or pop hlt lret (bad) fdivrp adc add mov mov (bad) pop cld dec sub mov scas out imul loopne mov push scas inc mov jg out fdivrs push scas mov dec out mov cmpsb lret pop (bad) pop cwtl jl dec mov (bad) es loope sahf (bad) popa out into mov les jl xchg mov arpl push xor movsl sub sbb dec loop (bad) repz and outsb jle push movsl jne pop iret (bad) mov (bad) pushf xchg scas xchg test lds lret movl cwtl and and sahf mov mov xor push xor add fisttp (bad) lret mov push push mov xchg js sti add (bad) jl,pt sahf mov jp cmpsb pop cmp push cmp das sbb adc ds flds sub push je dec jle push add ljmp jno sub cmp (bad) incl idiv std fdivs (bad) insl inc xor loope xor aaa xchg (bad) push push adc or mov xor pop (bad) (bad) fiadd jmp cmpsb push jno into jle (bad) std add jae xor (bad) and scas arpl push pop push decb icebp mov dec push dec into insl push cmp xchg or adc fst lret cs lret rcl lea dec xchg mov ja shrl notl stos mov popa cmp sbb xor pop xchg mov sbb (bad) mov inc xchg mov out push out test jbe scas mov push ss inc cs adc add leave mov push pop push (bad) xchg jo imul movsb mov shrl pop (bad) push xlat and xlat (bad) xor and push dec rcll icebp std incl test mov or xor push xor pop xchg mov mov pop pop mov ss fidivr mov inc sub cli sbb jae (bad) jne int push adc pop mov ljmp dec (bad) mov cmpsb pop clc ficompl push data16 aaa mov out (bad) imul test inc inc cs add dec std or pop es test into and movsl movsl (bad) xor int lcall inc sub das cld fcoms daa jle inc iret and and pop out fisubl mov xchg insb jge mov push jnp fsin das sub pop (bad) aam xchg push dec pop push pmaxsw out add mov shl (bad) into je inc mov lea rolb jp mov add pop mov lds xlat scas cmpsb (bad) adc int3 out jmp xchg mov daa adc ds aam mov pop ds sysret scas orb push ret test imulb cld andl dec adc push andb lods dec mov pop rcll lret adcb call or inc sarl xorb decb ret lret (bad) push mov adc (bad) ficomp adc (bad) mov push ss push inc roll imul push dec mov lcall pop mov in cmc das out loop dec mov imul cmp and dec lods pop test (bad) mov mov jb test xor push push xor mov inc fidivl test inc sbb xor or xchg cli pcmpeqb (bad) (bad) cld adc pop push mov test dec xchg daa not test sub add cs sbb cmp push aad fistl lods das (bad) push fild nop sub data16 cmpsb testb sbb les (bad) (bad) pop aaa pop test ds push xor addr16 popa xchg sub mov pop dec scas (bad) stos add outsb fcoms pop and add iret or incl xor lret out pop test ret push adc test cwtl cmp lahf fist push mov ds mov cmpsl sub fnstsw test adc in out daa les mov fs cmpsb mov ss and push and mov loop inc daa out mov arpl mov pop xchg xchg imul add and cmpsl idiv sub or les push or push mov mov (bad) cmp ljmp mov xchg out fcoml adc in and push daa cmpsb xlat movsl in sbb cld cmove mov jmp jmp mov or cmpsb push incb rcrb push outsb xchg push clc mov clc cmpl fcmovb (bad) or and adc pop bnd stos pop (bad) enter lcall cs aam push jo pop push jo (bad) jg mov mov sub shrb movsb cld out mov push daa inc outsl add sub rcrb lahf push mov inc pop push cmpsb inc mov mov pop (bad) cld aaa and bound lret stc mov xchg notb cld inc out (bad) mov ficoml test xchg cmpb inc aaa sbb (bad) xlat outsb movsb mov cwtl fild xlat push xchg test idivl (bad) test mov xchg push mov ljmp jo inc mov aas lods push push aad (bad) aas fwait (bad) into jo inc sbb incl in push lret jmp dec das jnp or les out cmpsb jg pop cld push in (bad) mov fld (bad) jbe das sub push iret mov mov cs iret aas push in (bad) xor (bad) inc fcmovu out in out icebp scas mov jmp out jmp jecxz outsb outsb inc mov fwait add out addr16 fs mov nop nop lahf out sbb movsb cmp push mov and scas insl push sub aas (bad) mov inc sbb lock jge cmp pop or push xor adc or push adc scas jge les and divb test add dec pop mov movsb push ss ljmp test loopne xlat push in clc stc mov lcall je mov imul (bad) mov outsl dec dec scas out jp and dec or sahf mov jmp icebp adc scas inc (bad) std cmc lret mov or adc sahf xchg test jle dec sub aas jne fidivr add ret test pop cmp add cld stos push test xchg mov mov es jbe dec iret add add fisub addb loope iret pop jne pop xchg cs xchg rol (bad) pop inc sbb mov outsb es call out icebp xchg ret xchg cli xchg iret push es pop mov mov and sbb xchg ljmp into mov pop pop dec adc pop cmp add and inc push mov loopne jbe pop cmp xchg aad mov add jle shrb loope jle dec cmp mov mov aad clc pop addr16 push jmp jmp or sub aam dec adc pop inc mov jle push and dec fild push stos outsb outsl insb pusha sub test shrd mov (bad) rorb cmpsb (bad) cmpsb mov mov es ljmp mov mov inc jne ja,pt jo movsb stos insl fwait add jle xchg scas mov (bad) in data16 inc ret addb xor push (bad) out pop inc add adc push fld (bad) out test call clc pop test inc in loop inc inc pop (bad) fbstp xchg mov inc loopne lods push push data16 jp adc inc std inc mov add outsb push dec lsl stos daa je xchg negb movsb mov in aaa cmpsl lock ds loop out jecxz pop push push xchg sub fiadd lret xor adc adc (bad) mov dec jbe inc push stos mov inc int or add xchg xor sub pop push xlat jecxz mov xchg imul push (bad) aad (bad) lret xlat scas sbb inc dec mov mov (bad) and out (bad) xchg (bad) nop mov into lds (bad) xchg ja daa fs add rcr push faddp sbb jmp cmpsl imul pop and loop repnz out aam xchg movsl dec faddp mov add push sahf inc stos jae mov scas mov dec fbld dec add or loopne mov (bad) int3 jbe icebp push enter out mov movl push scas push mov push (bad) dec xor add dec fimul sbb xor push dec cmpsl roll pop call xchg scas xchg je (bad) outsb popa dec push mov pop mov lea mov inc into jg aam cmpsl add push lods pop call addr16 fisubr sub lret test arpl fildll nop and out push sub mov adc (bad) inc clc sbb fcmovnbe ret mov xchg adc flds out xor data16 shlb pop daa daa sbb add add jp rolb push jp add outsb setle sbb cmovae mov cmp dec xchg jb (bad) iret mov pop ljmp mov ret dec outsb maskmovq in xlat (bad) mov dec adc (bad) mov pop clc outsl mov cld mov mov jecxz lcall sbb xor stos (bad) repz (bad) (bad) jl mov test cld bound and (bad) movsb mov and icebp add pop in and pushw ficom lock adc int bound and iret xor pop rclb (bad) cmp sbb jmp mov mov fildll cmc or pop lock add test lods (bad) mov bound inc add inc sub leave sar sti and cmp add decb sub mov shrb fidivr pop pop (bad) fbld (bad) push dec pusha andb mov ja cmpsb cwtl pop aam (bad) mov jle mov dec inc mov lock les add mov push cmpsb push push add stos xchg mov ds inc adc mov cs mov sbb dec mov hlt xor mov xchg jle push add sti fdivrp add xor or add add push push push es pop imul ret (bad) lret arpl fcoms insl mov rcl push mov rcr lock inc das sub jg cmp ss ljmp pop dec test inc dec inc (bad) jecxz dec imul outsb loop cmpsb lea jnp inc decl in cmp jmp nop in mov lods imul inc je or inc in nop jg mov icebp and mov xchg mov addr16 addr16 setg mov jne stos mov movsl mov iret cmpsb je,pt mov xchg add pop adc test (bad) aam ds daa cmp daa mov mov mov mov lret adc repnz movsb lock pop mov xchg inc into sbb dec mov in sti out decb push js push hlt inc mov pop dec sbb cmp push push into jnp pop push add push mov push inc scas sub push decb pop bound dec adc incb out lods push pop push xchg sti ret (bad) ja scas mov pop push test test mov xor pop xlat mov jg jbe (bad) repz sarl adc and xor incl rolb out jno in loopne and mov es cli hlt outsb add push jg mov adc push sbb sub das mov lock add mov push stos pop cmpsb xlat jbe shlb pop (bad) sub lds push in (bad) fisub add and add aad (bad) fdivrp push fwait sar cmc fld loopne sarb mov dec add inc es std sub out rcrb jl imulb xlat jle jl js xchg add call xchg jp cmp aam cmpsb mov rdmsr sahf push jne orl cmp fidivr mov push out call and call inc or pop sbb call dec and sub stos cmp jnp inc daa add sub xorps jp arpl sub mov (bad) mov xchg idivb push push push sahf shlb repz mov outsb sarb cli sub sarl push and inc push (bad) out test mov paddq mov lds jbe cwtl (bad) insl dec sbb add dec mov and dec or les adc push es mov es sti ljmp push aad xor neg (bad) in ljmp sahf aas add aad out shlb push jne pop xchg (bad) hlt out xlat or add push xchg ficomp pop sbb pushw cmp scas cwtl ljmp mov (bad) xchg rolb addr16 cmc fadd into out movsb inc pop inc push xchg xchg sbb cmpsl inc mov dec lock dec mov mov add adc inc cmpsb pop mov in mov fucomip rol pop (bad) mov aad sub jge push jle clc ljmp inc jmp mov mov lahf adc daa add add lret xchg loope adc movsl addl scas addr16 mov (bad) enter sub leave out push or adc xchg inc neg ret fadd or mov pop push scas pop inc out insl nop xor outsl sbb cmp add or pop (bad) or (bad) (bad) pop loopne fs dec add add add cltd and leave adc fisttp add pop aas and incl xor and stos pop pop pusha inc xor xorl or push dec loope (bad) int push sarb ret or pusha shlb or or adc inc nop cmpsb sbb or les addb cmp sub subb (bad) imulb mov (bad) negb cmpsb sbb jge ss pop mulb sbb mov and lods sti xchg adc sub incb xor (bad) sub xor lahf xchg sarb jmp ja stc lahf jb cld (bad) lcall nop gs cld xchg cld insl inc sub dec and jecxz adc enter es push outsl out inc push sbb add and dec and xchg cmpsb leave cmpsl or sarb xor or test outsl fadd ja mov mov (bad) dec into mov add mov mov jns xchg ja (bad) decb ret xor or xchg lock cmpsb push arpl fldl xchg sbb xor dec imul (bad) in mov repz pop loope rcrb mov stos nop xchg xor xchg jno sub push xorl cltd mov jp popa aaa jle xchg jl scas popa sub in lock jbe xchg push pop (bad) leave sbb add and and push dec stos divl xchg inc jne ds fmul (bad) out or scas test ret pusha movsb pushf mov insb data16 test and (bad) jbe dec ds nop push mov fiaddl subb (bad) mov inc es or jp sbb adc (bad) or xchg ds ficom add and stos dec dec es jbe push sbb into call dec push mov add out jmp outsb ss rorb je push xor push adc fdiv push xchg insb fiadd fisubl fwait jne,pn jp pop fistp mov or and stos out jmp loopne adc adc mov xchg stos mov push add arpl lods lock add stc idiv dec lahf adc push int fsubl push das and dec dec push push ss cmpsw jge push mov jbe xchg jbe repz sbb (bad) xor ljmp add sbb mov push push or (bad) sub out add (bad) mov or push sahf aad add insl push in jmp out pop ret xchg aam add mov push outsl or lret push push push punpckhwd out cmp mov fimull mov in xor rol test jns dec daa (bad) rol push das pop push xorl (bad) fs aad ror mov jo jbe push push jbe in into pop sbb ret in dec jne xchg add and test lea add rclb (bad) ss dec push jle cs push imul lods jbe and add imul cmpsb xchg (bad) pop add mov adcb xchg mov push jle imul push push inc pop mov (bad) mov nop mov movsl out or loop xchg push mov push jg jge les cmpsl pusha mov and ret mov or sahf mov mov mov insl pop std cmp push (bad) push push int sbb xor sbb add and mov das or or iret pop movb pop or xchg out mov cmpsl rorl idivb mov into mov shrb cs mov mov (bad) movsb cmpsl into sub or scas mov push push or pusha inc xlat roll outsb jle mov arpl xchg push inc push or xchg outsb mov divl lds cmp pop ja loope and or or and and add clc js sti loopne (bad) call push xchg mov rolb ja cmp jg sti jecxz mov pop lcall cmpsl push mov push cmpsb mov mov jo sub enter inc ss push mov andb xchg out (bad) and or mov mov xor ja clc test pop push cmpsb mov sbb dec dec loop call mov xchg mov and stos pushf xchg lahf add push sbb les cmp sub pop inc (bad) push cmp push popa outsb movsb and les ljmp or adc cmp xchg jne xor arpl std mov inc add and or mov and stos call pop pusha arpl fbstp popa pop and sub push pop pop fidivrl jg in lret test push pushf lahf pop push pop mov jle xor inc mov jo pop push sarb and add or pop sub sbb iret das add mov out cld push jmp sbb das xchg loopne into clc jno jno scas in lret mov mov (bad) xor jecxz pop add add leave test daa or inc pop ja xor adc ds popa imul inc push xchg flds std add push and rorb fwait xor test and add adc in es pop mov push lock cmp mov aam pop jg inc inc jbe stos xchg mov and out cmpsb mov lahf das mov lahf out jg pop lock jg adc out mov je mov jl sarb ds (bad) fcompl leave sbb mov dec sub fistp (bad) iret and and js hlt mov data16 sub push shr insb push rorb aaa subl jg lock jg xchg mov jle push fs jg (bad) xor adc sbb xchg lcall js lcall mov (bad) inc push es dec or mov jg xchg mov into mov shrb ss push je mov call pusha scas loope mov lcall jg cbtw arpl popa lock xchg out test mov mov into lock (bad) pop je nop add nop cs pushf inc popf clc or jb iret pop int3 les xlat xchg out leave pop (bad) mov pop mov xor inc fsubl mov orl jle cmp mov imul bound and add das adc adc lods adc push pop clc and or mov rorb push dec adcl cmp sub and idivb fistp jmp test testl mov jg mov jecxz dec push lcall jg outsl inc mov inc repz daa and adc push adc test out jb jno sbb and ljmp cmc mov (bad) sub arpl mov add inc dec shrb and jle xchg loopne scas and lcall ret jbe sbb jle,pn inc daa cmpsl sub dec mov movsl lock into pop inc enter push and dec test or or adc lods pusha push xchg jno mov pop daa adc lahf and adc push das jg stc mov into stos outsb dec pop cmp cmpl popl imul stos outsb popf les push xor (bad) arpl or inc sub pop and scas outsb fisub fwait mov push xsaves out outsl lea test (bad) out sar mov addps rcrl popa xor pop cmp lods insl cmp negl cmpsl outsb xchg (bad) xor pop out test pop jg sub sub es leave fadds jmp jg ret icebp (bad) mov mov mov mul xlat pop pop mov jo mull push jg jmp dec push jg popa xchg (bad) jne xchg pop notl xchg out push add push cmpsb pop ss jle,pn and jns sub push or int or cwtl test and push xchg inc test addr16 popl or aaa jmp outsb daa popf pusha cmp push add xchg pop xchg mov lods scas xchg mov xchg data16 scas cmp add daa das jle push popl push out ret mov xchg mov out lods mov (bad) mov sbb xchg rcr arpl or inc lods add faddp ret (bad) xchg (bad) jg inc fidivl pop aaa outsb dec sbb push aas outsl test incl pop mov clc pop ret inc mov xchg jmp fistpll stc fildll pop icebp ret jmp mov test add fimul lahf (bad) ja mov push xchg xor mov cmpsl test dec push inc jmp cwtl mov in ret xor sahf dec xchg or (bad) dec sub pop or jmp (bad) inc ficompl data16 lret sbb push sbb lds lds test (bad) leave fiaddl fimul pop or jg and jo push shrb ffree pop or lock push shlb enter (bad) mov push pushf imul lods daa xchg aaa js (bad) ja push jne fadds or or rclb ret cmpsb xor xchg ret push (bad) jbe inc xchg pop adc mov das out pop pop rol lcall lea ja and add cmpsb test lock xchg cmpsl arpl ficom xlat adc push movsl adc sub (bad) mov fs xchg int insl cld outsl into (bad) jl loop cmp cmp or (bad) scas add dec lock loope mov lea movl cli push jle shrl mov in fucom call and pusha imul mov out aad stos cmc (bad) shlb dec pop scas (bad) or add xchg lock ds xlat ss pop les mov popf (bad) leave jg jmp inc sub pushl add mov shrb ret push cmp mov scas push sub stos xchg nop mov sar lcall dec adcl cmp cmp movb pop sbb decb sbb (bad) mov in jmp inc mov xchg pop ds sub fistp mov or pop incb sub sbb or cld (bad) repz iret mov add scas aas outsl pop dec mov mov loopne hlt div les sbb adc xchg aas push sbb jp mov (bad) mov int3 sub pop daa ja rclb aad mov mov (bad) stos cmpsw push xchg rclb je push xor push cmp pop add mov mov pop std lods push xor add pusha popa cld pop out ret fmulp enter xor jg out mov movl in into std fs mov or xchg fdivs pop pop mov sub (bad) mov je push das loop xor push (bad) out mov push dec (bad) scas lea lods stos out movsb movb es jle and dec idivb std mov cmp adc out and out shrb rcrb (bad) (bad) into (bad) xchg insb or add sub push xchg jcxz adc push adc push punpckhwd jnp xsha1 cmpsb mov jmp scas xor dec cmpsl jmp cltd test gs imul cs push cmp pop (bad) mov lahf mov or lock and sahf (bad) fcoml and add fimul loop fsts lock pop inc rclb addb adc inc jmp mov or mov inc fcoml (bad) and out call mov lahf push or pop sahf dec xor or lods jne mov pop dec fcoml mov leave pop (bad) dec fistpll mov in cmpsl adc dec jmp dec test inc dec pop getsec lahf shrb popa out sbb adc insb fldt decl xchg pusha inc cmpsb shrb repnz stc in out stos rcll push or mov adc (bad) in mov push (bad) cs pop cld scas call dec pop dec out xor inc test aaa or loop out inc xchg jbe (bad) xchg mov jmp add dec fdivrp xchg lock ret cmpb lock dec sti (bad) je js out ret stos mov or push insl loopne xchg jg cmp cld ds icebp pop sub jp push aaa and jno xlat pop test jbe out jg pop and adc adc imulb dec sbb clc fwait (bad) out mov loop jp outsl jg test pop cmc (bad) mov roll add fs sub adc xchg or and movl sbb aam push mov push sbb mov xchg outsl sti fsubp ret clc dec ds xchg icebp int inc mov std in (bad) ja xor mov lods mov mov inc imul test movl xchg jbe out shrl out xchg lock out in lret out sahf xor mov mov (bad) icebp call add daa enter inc aaa andl push push push test dec test insb lea pop (bad) mov adc mov subb mov stos mov or orl out dec push sbb scas outsb jnp inc xchg mov pop test or outsl lods or outsb add cmpsb mov jmp sar and fcmovnb ljmp mov inc sub mov pop test shlb hlt mov fcoml add inc daa push mov sbb lahf adc outsb mov int3 clc ja mov sarl or mov (bad) and out stos out add into ljmp sub push xchg call push (bad) lods cwtl ret shrb sub test mov lods fwait adc or data16 push out ss xor movsl xchg cwtl clc sub jbe pop aam cmpsb or mov dec shrl in aam stc pusha and stos (bad) mov push icebp push inc sub add loopne data16 pop lock dec ljmp faddl out ffree pop std loop std push adc scas inc cld faddp lret cld ffreep lret stos bound jbe enter popa jl sahf aas scas test xor fsubl mov paddusb ss lock pop lsl and rol add add dec es cs add pop in in nopl adc pop test xchg jg sarb (bad) or add lret (bad) aas movd pop rcrb and xchg mov add adc adc inc mov and cmp pop iret adcb push add xchg cmp iret add adc pop sbb inc sub xchg dec sub fbstp es adc mov inc inc pop dec push sbb push je push rclb loop sahf es pop int or cmp cltd dec pop lea sarb mov (bad) push inc mov push cmp ds or sbb and scas jbe adc or xchg dec sahf or or and pop push mov jle inc pop mov aad stos out pop stos inc push mov test dec dec push jle fwait mov incl push cwtl iret ret mov scas addr16 push or mov and mov sbb or jmp (bad) xor mov push xchg jne inc mov (bad) push mov inc pop lds sub loope int mov les push xchg sub push xor leave les pop mov outsl push testb cmp fcmovu add xchg sahf (bad) xchg test into aad xlat (bad) aaa lcall pushl push dec mov cmp xchg outsb sub xlat rorb push and push mov and popf mov cmp enter mov mov rcr stos ds in dec mov mov les lret xchg je lds scas pusha es imul je les (bad) dec jmp adc xchg lcall mov ss xchg sahf dec jmp mov cld inc mov xchg xchg push int ss add inc push pop and dec lcall sbb xchg pop (bad) pop push clc in sbb xor mov hlt adc daa adc test movsl out push cmpsl mov mov (bad) ja jb daa nop mov rolb sbb inc add mov es cwtl pop (bad) je adc ficoml pop pop out push js ss pop push mov fsubp std call sbb xlat mov (bad) mov xchg (bad) lahf xchg es faddl pop jnp mov xchg call std jl sbb or pop adc cld fistl iret push sbb mov push push mov mov insl (bad) shlb mov sbb scas lcall sbb ss inc xchg outsb dec dec push cmpsb fisub pusha cmp add decl and xor or pop cmc and inc pop xlat mov es lcall mov cmp pop add fisubl aas pop push inc xchg orb xchg pop inc test cmp push mov mov popa dec sub lahf popf add and lcall mov enter lods sbb ds call lahf or rcll addb push xor iret in dec mov sub insl sub scas lahf add ljmp ret les jl bound idiv mov xor mov push inc clc pusha add mov movsl pop inc sahf sub cmpsl mov rolb lahf outsb and (bad) mov fwait pop cmp outsl inc sub mov inc stos sub aas push or loop mov (bad) fcmovb int (bad) mov dec add pop xor mov xchg sub push add bswap or sarl outsb daa js mov rcll loopne mov mov dec mov and (bad) push lock mov pop mov mov xlat fchs jmp mov xor jl daa int3 xchg insb ja jb outsb dec lds das or fnop jo arpl cmc add mov mov adc mov mov dec adc test jne mov movsl push push xchg cs dec jg mov and (bad) outsb dec iret push rcl in or adc adc xor mov mov mov sub jns shll ljmp cmc outsl inc jg nop iret leave movsb xchg lods hlt push and das cs mov (bad) pop push sub or push fildll mov mov js fldl scas (bad) fimul in out push push sbb jl dec loope aam pop jmp xlat add into cmpsl popa popfw xor mov inc je pushl mov dec fisubr ud2 or or inc fdivrl pushw test inc sbb ss icebp repz fisubr xchg js xchg fisubr hlt jecxz aaa (bad) fcmovnb mov push lea dec push push aas js lods inc xchg dec call mov dec out or out or out jg idiv div or mov arpl lret mov call sahf out pop pop pop dec pop imull mov sahf out call fisubr test cs adc mov (bad) popf and dec jge stos jb (bad) mov dec jmp or xchg scas add ljmp fdivrp clc testl mov fldl cli mov into pop inc insl pop adc push scas xchg subb jb inc mov outsl jg dec jo (bad) std mov repnz xor fidivrl int3 (bad) jecxz call ror aaa subb mov inc xchg test int sub push out add (bad) mov (bad) lods js cld mov jl inc cli push repz xchg lahf out into leave jmp push push scas xchg pusha adc das adc jne dec test loopne fidivl out mov jnp rep test sub cmc sub sbb jo aas push scas push xchg bound pop test hlt cmp hlt xlat mov ror stos xchg jne or inc js shlb xchg jo pop (bad) jbe adc adc push mov (bad) loopne (bad) xchg ror mov dec cltd adc lock mov cs pop push cmp enter pop (bad) (bad) fadd mov scas cmp inc sbb ret push add sarb sbb iret sbb push xchg es mov ds xchg (bad) addr16 and fdivr dec sbb cmp fdivl (bad) in aam fcmovnb jno mov adc add out popa and in xlat lds popf pop cmc (bad) clc shr out add adc mov push mov fmuls movsb mov (bad) cmp dec out cmp mov rolb or in and add rcrb cmpsb mov pop mov pop addb lcall mov lods sub pop fst and mov lcall test fldl (bad) dec and push scas inc pusha push mov inc lods lret (bad) (bad) push push adc and mov xchg ja lods subl jae stc xchg addr16 lds xor add adc ret pop xchg push (bad) popa call sbb push lods icebp loope (bad) fldenv add imulb add pop out mov clc inc pop pop jge sub sbb xor sahf sbb mov scas pop ss imul int3 data16 mov loopne pusha mov mov lahf jg pop aad arpl or inc xchg ret and je ret adc test adc jmp test ficompl aas push push setne lds popf sahf inc dec sub pop pushf invd sbb push (bad) in in scas lret rclb push push (bad) aam flds in xchg xchg dec and mov add ds or mov sub cmp sbb xchg iret rol in data16 popf xchg out into and pop (bad) movsb jne pop fldl pop rcrb or add sahf aas adc xchg xor xchg pop pop sahf and aam inc pusha mov pushf jmp out aam cli sbb nop jne (bad) pop adc (bad) mov mov mov dec jle xchg push push insb cld jae imul outsb test outsl sub adc es mov ret xchg jo int xor pop les add push out sbb addr16 dec fstpl dec shll push and clc push and lea sahf and fwait mov or cmp popa aas aaa bound js outsb loopne (bad) mov mov andl inc xchg mov mov enter push adc les jp push xor push xorl pop mov leave enter sub lea (bad) and mov or mov push pop int sarb push outsl xor pop mov push ret add pop cmp mov rorb push mov cli inc lods mov sbb sub int3 incl mov shlb call xchg out hlt push mov lds mov mov adc fldl dec out test test jmp dec sub stos add insl ds xchg xchg scas outsl inc pop pop jg and and add scas popf xorl cmpsb pop js ljmp jg xor test out into and fnstcw sub jno mov add adc jno into in loop mov and mov das pop sbb lret (bad) test clc out mov sti fsubp mov inc and xlat ret shll pop in inc fstpt pop push scas pop hlt xchg lcall dec fist mov int3 fdivr stos (bad) ficom mov rol insl aam dec jbe scas (bad) outsl popa loope pop fcmovnb mov lock or out rolb stc ljmp jp out repz mov jne xor sahf iret aas mov (bad) shlb (bad) adc mov jo aas ja sub (bad) out fsubrl or lcall dec daa das adc test xchg in mov rcl stos sub mov gs push dec es scas jecxz mov adc mov and mov (bad) icebp (bad) mov addr16 out xor push stc loope lods clc ffree in add jo rolb ja add ss imul rclb pop sti mov jb aas push pop push or lret movaps pushf inc daa rcl cld enter and and imull xchg mov and push adc je iret rcl test add cli stos inc sbb mov mov pop test outsb xchg outsl pop (bad) ja and mov xchg rclb ja adc ja fs xchg xchg sahf xor push xchg mov jbe xor ret and and push xchg jp ljmp push cmp lret mov mov jp cmpsl cmpsb jno or in sbb pop mov and aad and in mov insl inc sub mov mov idivl std arpl jbe xor add adc sub inc insb pop cmp clc ret jge adc pop or test pop das adc xchg mov clc loopne (bad) jmp setp push or sub pop loopne iret jnp loop (bad) sahf pop jg lea sti out add testl xor push and jb insl outsl inc or and rcl lods xorb add popf sub jg inc sti xchg mulb jg inc jnp xchg ds mov out fistpll shrl out push lods xor fadds jg es lock imul lock cwtl and jbe add add cwtl pop cmp push jg ds mov fadds das ja lock dec testl xor mov cmpsb xlat ficom jg ds mov (bad) push push add bound push fldl lock loopne outsb mov jecxz lea or (bad) mov jae push insl inc push scas ja popa das bound xchg jno lret sbb cmpsb (bad) mov stc in movsl jl (bad) fwait aad adc call lcall cli mov movsl out mov dec aas xchg ljmp rolb cs loopne test fprem fld pop xchg and lock cmpsb test xchg rolb add xchg xchg sub pop rorb clc (bad) (bad) (bad) jg lret lods hlt pop dec mov xchg ja mov mov out stos mov jmp cmp pusha fisubl ss push xchg mov lods lcall (bad) (bad) out xor inc mov pop and daa jb cmp mov jg jecxz jle adc cmp out (bad) (bad) (bad) lcall sub (bad) mov mov sbb daa rep les je sbb fdivrs dec (bad) jb aad (bad) ljmp xchg iret repnz pop adc mov pop adc in lret dec xchg (bad) (bad) decl add sub rcrl add xchg pop xor and inc stos lret (bad) (bad) ljmp movsb out pop mov cltd and jns inc dec fadd inc push sar mov jecxz sti pop and or in aas mov out std out cld mov (bad) cmp cs imul jmp mov (bad) push mov ja or int arpl sbb imul xor imul out iret loope popa mull mov inc cwtl fildll fldcw scas mov push or or stc inc andl pusha mov lods roll jp pop out (bad) (bad) (bad) (bad) mov (bad) mov popf cmp gs xchg mov arpl insl cmp add xor in (bad) (bad) decl xor and stc (bad) dec cmpsl xchg aas mov mov lock and push (bad) (bad) cmp inc or sub cmp push pop mov lcall sbb pop pop lahf xchg pop pop push lcall dec cmp cmp cltd fwait imul rclb test imull rcrb cmp fdivs ss cs mov sbb (bad) (bad) jmp jge sub cmpsb push icebp xchg in adc dec sub adc in jg out test mov inc push and insb add fistpl ljmp xchg or or ss pushf mov push movsb loopne mov jmp loopne (bad) (bad) (bad) jmp lret bound pop mov sub pop (bad) pop aaa or push gs cli cs cwtl jp imul inc jecxz daa and xchg jb mov (bad) repnz inc adc lds aaa std pop icebp (bad) (bad) fnop add popa leave sub inc pop mov call in stos xor in in xor jl in push inc mov pop loopne out insl iret sub pop cmc adc mov cli mov decl insb sub fidiv lea rol mov pop (bad) sbb push insb (bad) repnz (bad) jge sbb mov gs test cltd mov pop dec fcmovb dec add icebp out (bad) (bad) (bad) (bad) fadds pop add push test xor mov insl jmp (bad) (bad) (bad) decl enter fdivrl repz mov or cmp add dec daa push add mov xlat lea out aaa jmp xchg sub icebp aas mov push and (bad) lock (bad) (bad) incl inc in jmp mov pop add jge pop and out jns push push sar (bad) (bad) call mov dec fmull test test clc inc push test inc pop movsl lahf aad (bad) (bad) (bad) inc (bad) pop movsl and cmp xchg outsb xchg daa rcll inc aas std mov cs adc (bad) (bad) lcall popa add lods das ficomp ret mov imul (bad) ss (bad) (bad) (bad) call je mov fbstp xchg out mov mov or arpl inc jo ja and (bad) (bad) inc xor les add mul mov mov (bad) mov add ror (bad) (bad) (bad) lcall mov sbb mov cmp jns push sub int pop xchg insl test inc jecxz pop pop std (bad) (bad) incl (bad) mov stos mov movsl cli into dec nop jg xchg xor adc sub jge (bad) (bad) call fcomps int3 or push pop in adc or mov mov (bad) (bad) (bad) inc ja popf dec sbb xor push push and xor xor push xor repnz or aas jl lods inc fsubl jns sub cwtl push lcall or (bad) (bad) (bad) call mov add cmp int ficom arpl idivb incl mov pop out jg negb inc rcrl pop js pop mov das (bad) loop ret mov xchg repnz fcmovnb (bad) mov (bad) (bad) (bad) js jmp popf pop (bad) pop mov xchg and adc adc mov lods xor (bad) push addr16 lods (bad) (bad) (bad) jmp aaa repz push push fistp add repz in cmp mov (bad) (bad) (bad) (bad) cli or push je xchg js mov mov scas push pop cld pop inc mov fwait out stos mov jecxz (bad) (bad) (bad) lcall push push pop nop pop ja dec jb decb xlat (bad) je inc add jg imul (bad) (bad) pushl loope adc mov dec lret clc sub push or call pop add (bad) (bad) (bad) jmp pop ja pushf sbb jno cltd cwtl mov cmp inc cmp (bad) (bad) (bad) jmp push push inc adc cltd pusha adc add adc xor subl decl in pop mov jb xor xchg rorl mov nop xchg (bad) (bad) jg (bad) cmp imul mov outsb daa dec xlat jp mov (bad) mov push (bad) incl cmp sbb mov loope cmp into in adc (bad) incl mov repnz mov sub sbb arpl (bad) (bad) (bad) jnp jne and aaa cs sbb inc and adc sub pop and (bad) lcall (bad) aaa test inc in push dec mov and das out or call pop jl mov (bad) jg (bad) icebp aad xor push push xor shrb pop mov (bad) (bad) (bad) cs adc popf push xchg (bad) jg fsubrl decb xchg in mov addl xor (bad) (bad) push mov int in fs jb stos rclb adc clc stos loope xor icebp (bad) incl js xchg xchg hlt or xchg inc mov (bad) jg mov mov sti add jb into xor dec mov (bad) (bad) (bad) ljmp sub ljmp adcl xchg inc add mov dec (bad) data16 (bad) xchg fsubp dec adc pop test dec in mov icebp jmp dec outsb (bad) (bad) (bad) call mov int3 mov xchg popl dec test fwait add pop popf adc xchg fisttp cmpsl ret js mov (bad) (bad) (bad) decl dec mov pop push dec mov mov mov sbb cmc cmp decl movsb push movsl ss xchg mov test shrl outsl and stc scas jnp test (bad) (bad) (bad) (bad) (bad) jmp jno aam mov cli movsb push (bad) mov cmp ljmp (bad) (bad) (bad) inc jge xchg jg xchg jmp rol mov xchg xchg dec popa cmp (bad) pushf mov and (bad) (bad) call lods (bad) push test adcb mov int3 stc (bad) (bad) jl push icebp movsb pop js addr16 pop icebp dec (bad) mov (bad) push mov push (bad) insl pop cmp data16 cld popw (bad) (bad) (bad) pushl icebp lods cmp pop popf fs (bad) mov popf xor dec adc (bad) (bad) decl xor xor or push addr16 stos adc xor loope sbb pop bound mov jge rclb add nop movsl fimull xorl sar incl (bad) in sbb pop push xchg lock xor jb jb push jmp data16 and mov sbb fwait fwait ror ret jmp (bad) (bad) (bad) mov std testl rorl sahf jno cmc ja fcmovne lods push cmp (bad) decl mov and jle or xor inc sub dec inc dec pop es clc mov xor popf jb divb and loop stos mov mov ljmp and mov call je (bad) icebp aam cmp jae push outsl repz push cmc and lret ljmp lcall (bad) jnp pop jne jg iret and iret fsubrp enter jns pop or cmc (bad) (bad) pushl pop and fdivrp xchg pop (bad) jne or hlt xchg dec sbb push jl cmp incl pop out cwtl hlt loop and mov incl clc cmp or (bad) js mov lock dec cmp mov or pop in outsl clc call aas push push sti mov push adcl shll mov das cmpsl test dec jp pusha inc test aam and (bad) (bad) lcall jno cli loop fistpl lahf clc pop inc outsl iret or cltd sbb add outsb mov ljmp nop or mov loop (bad) (bad) sub and cld push sbb mov js jecxz (bad) (bad) ljmp or push add lods daa out lea (bad) (bad) mov rcrl push add push cmp and adc repz ljmp jmp leave xor lods add sbb mov scas xor lcall (bad) pushl jmp sbb pop inc xor jo arpl movb push or mov test (bad) (bad) std xlat cmp sub push repz mov daa xchg jge (bad) jnp mov clc (bad) (bad) lcall incb pop mov push outsl sahf fstpt xchg adc and adc (bad) incl loopne inc out ss jae sbb rol (bad) adc (bad) (bad) sti xor aas jp sbb sub add lea bound clc lcall (bad) xlat inc dec mov inc jp lret lock pop jb inc test cmp mov adc jl lds adc or jmp test push pop pop mov lahf sub leave sbb movsl (bad) (bad) pushl hlt jno pop sub fisttp ss repnz rorl mov lods mov and (bad) (bad) push add cltd (bad) xchg es ss testl dec inc add mov mov push (bad) (bad) (bad) incl xsha256 cmpsb shl pushf stos add inc or xchg sbb lahf xchg out sbb insb ret out or std pop and incl fcmovnb mov mov jp sub mov idivb sbb incl pop in sarb dec fsubs and data16 incl pusha lcall inc lret cmpsl stos and sbb xor sbb pop icebp fcoml and cmp or mov std (bad) (bad) call xor and sbb mov mov mov xchg pop adc mov push push fisttp stos inc popa mov addr16 fnstsw popa (bad) (bad) (bad) lcall imul (bad) jl lock push mov cli adc dec push pop adc (bad) decl add pop fcoml push es and imul iret pop cli mov decl xor movsl mov aam inc push popf leave into inc dec mov imulb int3 cmpsl repz mov cwtl int3 inc dec jecxz jne push movlps (bad) (bad) cmp inc cld and mov (bad) fcoms cmp rorb and add std and jmp jae mov adc mov pusha addr16 jne call jae mov mov ljmp pop fisub ret jae and subl rol (bad) (bad) call repz pushf nop sbb push sub cs aad and mov jmp xchg jmp sub and or (bad) fisttp pop clc (bad) cmp mov into mov and arpl (bad) (bad) lcall cmp mov movsb push fnstsw (bad) sub jae (bad) xlat aas mov ljmp cli or pop imul je movsb outsb cmp cmp add iret cmp lods test aas sbb in out (bad) (bad) (bad) jg dec call add push scas adc jae adc jae push cli inc jl (bad) call push call mov fs add rcrb mov (bad) (bad) mov repnz lret scas mov inc out mov mov nop test (bad) (bad) (bad) decl gs dec out push pop lret rcr stc lods outsb enter js cld jb push sbb or movsb imulb fstl repnz adc gs (bad) (bad) (bad) ljmp sbb add cmp xor fs call ret aad push gs in (bad) xor mov std call lods push pop je cmp adc push sbb (bad) (bad) jg (bad) or sbb nop pop inc rcr push adc outsb popf jl mov incl call fistl push push pop outsb jae cwtl mov inc imul loopne das sub inc mov les in mov fmul mov out jbe sub rcr sti jnp (bad) (bad) (bad) jmp or jp jns (bad) jns dec fistl sbb push loope mov cmp ret daa (bad) or fsubp mov and arpl (bad) (bad) (bad) jmp add sbb int3 (bad) adc pop ja test adc jbe xchg mov (bad) ljmp inc stc inc into loop lods inc mov mov mov pop sbb push (bad) mov inc add ss (bad) (bad) (bad) fstpt out adc mov loop xchg test fisttp (bad) push int3 lock mov push jno imul xor sbb dec jno (bad) (bad) (bad) jmp jns sahf inc test lea jns aas dec xlat leave inc pop and sub and std (bad) call xchg push enter and push and push adc shrb clc push lods dec test mov push jge shrl mov lea rclb (bad) incl xor or pushf les lods and pushf out and lods lret cmp decl push out adc fidiv cmp adc (bad) xchg xorl out push cmp cmp cmpsl shr xor xor (bad) mov adc dec and adc dec fdivr loop add mov cmp push test inc pop sbb loop pusha (bad) (bad) clc nop sub fldcw (bad) decl jle pusha (bad) ja neg pusha out lret mov popf popa sbb sbbl (bad) incl sub xor ret adc sub jo lret (bad) cmp je and (bad) (bad) ljmp (bad) jp jge jle xor adc out push pop aam xchg jecxz jmp cmc xchg (bad) ljmp add cmp inc xchg mov jg andl out cli mov out (bad) (bad) (bad) (bad) mov sub cmp sbb inc mov ss and (bad) (bad) (bad) (bad) jmp jle sbb lea mov mov jnp dec repz nop pop scas mov xlat aam pop mov (bad) cmp xlat (bad) cs in mov jns int3 rcl pop and iret xor pop adc jo mov decl xchg movl mov pop hlt call mov cmp mov pop icebp (bad) (bad) lcall pop sbb and mov mov shrl test jno (bad) (bad) out add mov lret call fwait (bad) sbb hlt test jmp push rclb or lods addr16 out repz movntq dec (bad) (bad) (bad) pushl mov popa (bad) pop (bad) in adc adc cmp inc fsubrl test adc (bad) (bad) incl mov jle mov ljmp or lcall call mov fsubl xchg jge sbb in jecxz fwait pop std (bad) pushl mov das int3 fdivrs icebp loopne hlt and dec clc mov push repz stos pop pop (bad) (bad) (bad) lcall (bad) idivl pop aad orl bound add aaa in insl sbbb into in mov (bad) (bad) (bad) ljmp inc out fild clc mul popa push popf adc (bad) cltd andb xchg lret lock (bad) mov jge sub cmp push push jl dec sub (bad) (bad) (bad) decl and cmp mov clc cmp out or xor xor int3 rcr data16 mov (bad) fmuls (bad) (bad) (bad) incl cltd xchg pushf or or jl mov dec mov mov lret sub ret xlat lods push xchg aam sbb jmp (bad) decl pushf and inc sub xchg push jne ret push or mov inc (bad) jg in jl out mov repnz leave out adc ja mov (bad) jmp fs repnz mov loop mov popa (bad) in xchg xorl scas cli push or jo mov push inc mov push cmp (bad) lcall fstpl inc sub out addl ret fidiv xchg (bad) cld mov (bad) pushl push sbb sbb push sbbb and mov (bad) (bad) decl decb and loope or ret cs push loopne xor add loopne push jbe and sub mov enter lcall rcr aaa aad jmp sub cmp pop inc out jg mov ljmp les pop lahf push push and xor jnp pop popf xor (bad) cmp mov pop push aaa sbbl sub pop (bad) (bad) (bad) ljmp aaa fwait sarl adc fstl mov add sbb lock (bad) decl add sbb push or jne dec cmpsb or ja pop mov gs test imul (bad) fbld jmp add in xor mov xchg test adc add (bad) mov mov xor push mov jge ljmp cmpb cwtl stc out lock push call mov and inc shrb movsb and mov and xchg xchg pop addr16 xor in push inc mov (bad) (bad) lcall lods inc inc stc fdivrl (bad) repz inc outsb lcall jl mov fwait out inc (bad) (bad) (bad) call out dec incb jp stc sub out cmpsb sarl ja or (bad) (bad) pushl (bad) aad push stos hlt fwait inc fisttpll test (bad) scas (bad) xor add test ret (bad) (bad) cmp test inc inc mov jae xor (bad) (bad) (bad) out (bad) test cmp aad mov test in mov or xchg jl adc mov repz mov cmc mov dec xchg rolb or xor add in (bad) (bad) jmp popa xor jle test sub (bad) cmc push testb (bad) (bad) (bad) jmp mov sub xchg iret lcall out das push adc lahf aaa jb imul (bad) dec mov stos cwtl mov loopne lods repz jne xchg cltd inc jl test (bad) cld sti (bad) (bad) (bad) (bad) fistl mov push sub or mov push mov xlat stc fisttpl incl cmc arpl jbe xchg out mov sub (bad) icebp mov nop (bad) (bad) (bad) (bad) ljmp push in or dec adc cld dec scas jns fwait insb nop mov repnz adc xor rcll rcrl jg (bad) incl imul pushf imul ficompl movsb inc adc mov (bad) (bad) (bad) (bad) fucomi or or outsl or adcl fwait out aas mov imul lods (bad) inc aas stos (bad) fcomip lock mov repz jecxz xor (bad) (bad) (bad) fnstenv popa loop ja dec pop jne nop adc fistpll add test enter ss mov (bad) lcall pop aam or push or loopne add sti pop xor ja jmp addr16 pushl (bad) mov out int subb mov sti data16 xchg inc jecxz sti ds imulb mov (bad) (bad) decl cld and push fcmovb test adc clc jle fisttp (bad) cmp cld in mov jmp pop sub sbb ss hlt fdivs add (bad) (bad) call sub mov (bad) insl fstps lods xor (bad) icebp mov adc push incl scas add jbe ret pusha cltd xor jl test jae mov shrl add (bad) stc xor jmp ss push pusha std test rorl adc (bad) (bad) jmp or test xor adc ss dec pop push xchg and push lds out or insl int repz adc mov (bad) (bad) incl xlat adc sbb push jmp lret adc xor fsub or sub (bad) (bad) cld leave stos mov cltd jo adc jnp push sub (bad) decl lock lods test test mov jb and outsl idiv mov (bad) stc ficom imul push xorl pop mov pop dec fwait mov test (bad) (bad) (bad) (bad) cmp gs ljmp (bad) dec icebp ret lret sbb test push or leave fs (bad) (bad) jmp pusha adc (bad) mov sbbl (bad) jl repz push jno mov (bad) (bad) lcall fwait repz push push pop fiadd out das pop sub (bad) clc (bad) call aad inc cmp jmp mov test adc js (bad) (bad) (bad) ljmp in mov scas mov inc js sub cld ret jo outsb lods (bad) (bad) (bad) lcall add (bad) repz lods cmp cwtl mov xchg mul mov push push lret (bad) movsl jmp and clc xchg fdiv jo stos clc and in xchg dec iret dec fimull (bad) (bad) mov jns inc push test adc es inc xchg inc test das inc jl jae or (bad) (bad) (bad) jmp lock pop sbb out movsb insl push jle inc test (bad) out mov (bad) xchg fucomp stc dec dec add fcmovnb mov fsubs push repz dec lahf int3 js add stos lret aam jo fdiv mov sub mov rcr push cli fcmovbe xchg add notb push push dec rcl sub loopne (bad) xor dec push in (bad) (bad) jmp daa add lds push mov fnop stc ss idivl notl stos pop inc xchg (bad) incl insb inc xchg xor jecxz add imul mov (bad) (bad) pushl incb ss adc pop jno mov xchg jne jge add (bad) incl lcall stc fidivrl push hlt mov dec xor mov mov (bad) pushl adc push mov mov jo lahf cwtl repz (bad) (bad) jg ljmp imul fisttp pushf loopne xor test incl mov pushf imul ret (bad) mov or cld fbstp xor pushf nop dec insl pop stos sbb lcall (bad) decl or pop cmp mov mov jno mov xchg dec (bad) (bad) pushl divl sbb bound cltd pushf mov addr16 loop or loop ja add dec sbb stc in cmp lret ljmp mov (bad) mov je stos loopne mov in add daa and lret mull cmpsl daa (bad) (bad) call lcall inc lret cwtl movsl adc or shlb pop cs (bad) (bad) (bad) (bad) (bad) jg pop mov lock outsl incl fmulp stc or adc jmp cs pusha xchg ja outsl pushl ret sub mov cmp sbb shr fcomip (bad) (bad) cmp test jbe pop fistpl xchg cmpsl jl sub stos out jge (bad) (bad) (bad) rcr stos sub cmp push mov mov push (bad) (bad) jbe arpl (bad) (bad) (bad) jmp (bad) mov repnz jbe pop nop aas loopne push xchg (bad) jmp inc mov sbb mov pop pop cli dec in xor (bad) (bad) lcall or jns lods int3 push lds jecxz scas push cld cmpsb xchg mov or jp (bad) (bad) (bad) lcall or mov loop shlb insb mov mov push cld (bad) lcall fbld fisubl pop pushf test decl test fdivrs pushl loopne es dec adc cmpsb les movsl dec outsb aaa out (bad) (bad) jmp xchg out jbe rcll and push and push ss mov ljmp cmp inc repnz leave adc add arpl sahf jne mov rorb mov popa xor sbb mov movl (bad) push add lods mov xlat xor aas or out outsb or test (bad) pushl sahf or or test les pushf mov loope ljmp cmpb loop push (bad) int3 jno jl sub cs sar lcall xchg jecxz mov arpl (bad) (bad) mov popf sub inc hlt sub mulb lret and xor aad (bad) (bad) (bad) (bad) sti je call ret xchg aad nop js and fimul mov sub sbb (bad) (bad) (bad) mov pusha mov out xor add (bad) adc xor lret sbb (bad) (bad) cmp lods je mov daa ljmp in test push push (bad) (bad) (bad) incl cmp pushf cmc xchg in mov adc fidivr pop (bad) jg push (bad) sbb stos (bad) (bad) (bad) (bad) cli jbe pop dec mov lret cmc in push fnstcw mov push or mov jge lds inc decl lock cli or (bad) jo xchg stos xlat lret jne shrb pop fcomip fldcw out imul dec pop add pop subps scas lods pop jle test sub movsb push scas clc mov mov in enter pop pop (bad) (bad) lcall fcoms jne int push lods pop std xor or pop xchg sbbl pop insb xchg ss jbe std sbb mov jo dec pop mov pop sbb mov mov ljmp jb pusha stos out dec push cltd cmpsb in inc inc push lret enter (bad) (bad) (bad) lcall adc pop mov dec cmp pop inc insl sbb outsl frstor incb sub (bad) (bad) (bad) (bad) cmp jnp push jg nop push sbb sub (bad) pop or adc jg lcall mov mov ja jbe (bad) int3 gs sub sbb or out (bad) (bad) (bad) call or mov cmpl aad mov inc dec cmpsb in (bad) (bad) in jmp (bad) jmp sbb pushf or lret mov inc cmp lret mov clc (bad) fistpll push cmpsb add add sbb es jae mov call and push cwtl jmpw and lds pop cmp testl xchg xor cwtl sbb dec out mov jns add (bad) (bad) cmp xor movsb or sbb movsb mov push and push push mov (bad) (bad) (bad) pushl mov xlat cmpl (bad) push addb mov pop pop imul (bad) cmp icebp das fsubs aaa mov push xor adc xchg mov xor into (bad) inc (bad) (bad) (bad) decl in repnz sahf aam push sub add mov inc adc cld data16 popf (bad) (bad) (bad) decl pop mov adc push dec mov jo inc sub add mov out clc insl jle sub sarb stc (bad) xchg inc xchg sti (bad) pop jl add mov (bad) pushl loopne dec call popl sub lahf xor in (bad) jg lcall xor fdivr (bad) mov andb mov imul (bad) (bad) (bad) jmp ljmp push inc imul (bad) dec jns bound inc cld sahf cmp cmc lea (bad) incl int3 dec lock dec mov jg mov mov cs (bad) (bad) (bad) jg popf adc fwait and pop ret lcall sub add lcall or or icebp xchg std inc jno in (bad) (bad) jmp std rorl outsl mov leave adc adc cmovl out mov xchg mov add test addr16 xor out mov incl cmp jb fistp adc push sub or (bad) fisubrl outsl (bad) (bad) lcall push pop (bad) mov scas gs mov adc adc cmpsb pop loopne adc stc adc push sti xor mov out (bad) (bad) (bad) jmp fnstcw jg cmp mov adc lahf sub cltd in mov (bad) (bad) (bad) in hlt xchg jo xor pop out mov movsb stos loope loope push mov mov push clc fs (bad) (bad) lcall fidiv mov shll jbe call mov mov adc and adc jmp mov out outsl push push (bad) (bad) (bad) jmp sub in jp pop inc xchg movsb out cmp inc repz test and push scas ds or in mov cmc jnp mov (bad) (bad) push mov (bad) iret pushf xchg les scas jns gs enter (bad) (bad) call mov std mov pop (bad) cwtl xorb sub (bad) (bad) (bad) decl jo sbb cmp mov andl push add repz scas pop je jno (bad) lcall inc cmc xchg xor jecxz cmpsl repz fdivl fwait (bad) mov xor xchg int (bad) idiv (bad) mov bound fsubs fwait fwait xchg dec mov push enter (bad) ljmp decb and jb test push cmpsb cmp mov (bad) (bad) lcall in mov xlat sbb push mov nop sub fbld sbbb lahf cmp (bad) (bad) (bad) jmp or sbb test int3 xchg mov sub out (bad) lahf fwait (bad) (bad) (bad) (bad) std dec sarb pop fstpl push inc dec jl cmp iret jmp dec rclb fldenv les sub mov (bad) (bad) ljmp es movsl dec pop loop inc int fildll je push or pop and test (bad) fcomip incl std pop or xchg pop in out add ljmp cmp or (bad) lcall cmc push adc and jne dec cmp (bad) cli mov divb xor inc sbb xchg decl xchg lock mov mov xor (bad) (bad) lcall cmp sahf and sub and icebp jbe data16 fsincos cmpsb and mov (bad) (bad) (bad) inc outsb mov jle fwait jae jp outsb cmpsb in pop clc ret stos xor ret pop jg (bad) jmp in xor or cmp push push sar ficoml mov (bad) (bad) jmp dec sub cmp mov jno or pop int mov add lcall (bad) jmp je rclb jmp dec cmpsl sub add test cli in imul (bad) (bad) (bad) decl xchg outsb add xor out aas xchg sub inc (bad) nop fildll loopne inc stos test aad mov bound int fwait shrb hlt push adc scas repz incl adc push mov je mov stos xor adc xor sub inc icebp (bad) in add sbb (bad) ljmp add xchg push sbb xchg ja fwait test mov ljmp dec xchg test push mov dec pushf das push into hlt iret (bad) (bad) and xchg lock lcall push xchg scas ret pop cs pop lret push bnd and popf mov mov xor xchg xchg popaw pop push aas cmpsl xor (bad) (bad) incl adc test inc push jno xchg enter xchg mov mov sub sbb lods call pushl std test inc sbb push ss jne fsubr outsl jl,pt cmp (bad) pushl dec insl lock test lea xor xor jno loop insb cmpsl add fs (bad) (bad) (bad) lcall mov xchg mov mov icebp dec mov cs dec test dec sbb shrl icebp push xchg cli inc sub dec sub mov lds test out mov mulps dec and pop imul fcoml fcmovne inc sub inc xlat jecxz mov sahf (bad) (bad) (bad) (bad) fdivl adc push mov jne dec pusha push push add adcl and (bad) (bad) decl scas push push lcall leave mov sub push jp and push mov (bad) (bad) (bad) incl shlb adc lret in xor mov outsb outsl (bad) pusha aad ljmp ret pop dec cmp dec outsl dec rcrl sbb cmpsb sub loopne mov ljmp jl aam mov sti push ljmp (bad) (bad) call (bad) mov out push ror mov jmp xlat jge pop mov (bad) (bad) call int3 (bad) test shr push fdivrs xlat gs rcrl inc jb (bad) (bad) lcall movsb push mov out pop jmp mov (bad) out or xor sub adc sbb xor daa lret fdivs es mov leave pusha fsubs test xchg loopne mov (bad) decl add xlat lea and (bad) call mov xchg enter popa mov and adc lcall es (bad) js fdivl insb insl cmp lret (bad) (bad) jmp pop sbb cmpl pop mov push fsub imul and loopne (bad) (bad) push sub push pop and in sbbl pusha sub pop test jle xchg add add (bad) pushl std es sub sub sub push cmpsl fisubrl enter (bad) out push lds dec andb pushf push into cmpsl les xlat jp (bad) testb xchg call pop lcall insl ja push lods mov fs add fbstp cmp js lods popa test in jle push adc adc cmpsl leave xchg pop (bad) mov (bad) (bad) jmp int pop arpl clc iret cwtl add adc cmp and push xlat ret fcos (bad) (bad) (bad) jp or fmull dec int test inc fldcw dec das (bad) repz mov or (bad) (bad) (bad) lcall sub adc sbb pop ret add test lods popf cwtl xor jne cmp mov mov insl sub jmp and aad les lahf jg ss (bad) decl sub push outsb pop (bad) fxch scas leave sub dec mov adc (bad) call xor (bad) insl mov sbb in nop out jb jb ds aaa (bad) (bad) (bad) incl out cld cmpsb pop adc pusha xor or clc les sahf (bad) (bad) (bad) jmp pop mov aad outsb sti in cli push sub cmp aam cli (bad) jg or nop pop sbb (bad) (bad) (bad) pushl lods xchg mov add (bad) jns lret and daa pop fsubrl insb movsl (bad) (bad) (bad) (bad) ds dec rolb cmp stos stc jg mov sub pop jo push shrl inc mov xchg mov inc push je mov lods cwtl xor imul sbb adc out mov cmp rcll mov (bad) (bad) jmp cmp jecxz (bad) adc pushf loopne popa mov out jl icebp push jp data16 push (bad) (bad) (bad) pushl rolb movsl push iret insl jae xor cmp fdivrs xchg test cwtl pop sbb adc inc jp pop and mov movsl cltd pop lea fsts mov lods leave or pop xchg aas fwait (bad) (bad) fild scas mov push aad mov cmp (bad) out cmp aas ret push fs lcall popf add lret mov ja jecxz pushl push jecxz out xorl mov mov daa push sub (bad) call lods mov xchg out jo mov and inc push xchg push pop imul aas jmp aam jb sub dec call inc or pushf sub nop jns xchg iret (bad) (bad) (bad) pushl movsl jle xor mov dec rorb jnp addr16 dec (bad) sbb stos (bad) (bad) ljmp sbb add mov mov ds mov jl sti leave pop (bad) js (bad) (bad) (bad) stc xor or insb xchg mov dec cmpsl flds inc pusha cmp pushl adc js,pn aaa std pushl mov xor push (bad) mov das into sub cli cmpsl in adc (bad) incl cli sub loope jne push popa dec shr lcall (bad) mov xor sub mov cmp (bad) std daa xor pop mov mov insl add std xchg or jp mov fcoml xor idiv decl adcl js xchg je popf sbb fnop sub (bad) fiadd (bad) jmp imul stc sub fidiv fs aaa push and aad jno (bad) (bad) call adc roll leave xor sbb jmp aas int3 lds pop cmp insl push dec (bad) (bad) (bad) pushl movsb outsl pop xor inc jb int sbb xchg jae jno arpl (bad) mov decl call pop orl pushf cmp std pop hlt nop (bad) (bad) (bad) lcall xchg push ds cld les loop int mov lods stc movsb and sti (bad) (bad) (bad) call aad jmp sbb inc cmpsl fsubl push pushf push aad and ljmp (bad) ljmp mov in hlt aad add mov sub jle sub (bad) (bad) lcall or add mov push inc out xchg cmp ficompl push gs gs (bad) (bad) (bad) lcall lea sbb cli (bad) xchg jle sbb ja xor ss xor push cmp (bad) (bad) (bad) mov mov add subl bound notl fldl2t inc jns nop popf lret jo incl mov dec iret jnp repz popf inc inc fstpl jmp (bad) orb popa (bad) (bad) (bad) decl jg cmpsl lcall adc push mov mov cmp outsb (bad) fcomip lcall mov sbb rclb jecxz pop sbb (bad) in sbb sbb xchg insl (bad) frstor mov popa inc push std bnd loope inc (bad) (bad) (bad) ljmp cmp push pop cmp sbb xchg imul sub (bad) (bad) incl iret mov and mov jne roll push pop add sbb sarb mov add mov fbstp ljmp ds and rclb mov test fadds pop lods (bad) call subb ficompl mov movsb pushf pop push sub rcrl (bad) sti insl pop mov (bad) (bad) call repz test jle or xor insl mov inc jb (bad) (bad) (bad) incl and dec insl jge mov sbb sbb cmpl mov (bad) (bad) call stos sbb xor push adc aas sbb adc xchg test sbb insl sub ja cld inc dec add push rolb les xor mov jns jnp (bad) (bad) (bad) (bad) out daa repnz testl sub outsl rorl pushf push xchg jge add (bad) jmp mov mov jecxz icebp (bad) je (bad) out cli das les inc int scas jnp cmp cmp add mov (bad) (bad) (bad) fildl cld jno adc or fdivr inc xlat (bad) sub xor fs add (bad) (bad) (bad) (bad) jnp repz push aam (bad) and dec rorl out xor push xor movsb xchg push (bad) (bad) (bad) decl mov (bad) cmp jnp inc xlat outsb outsl or out push (bad) hlt lahf clc adc call daa stos jge push fwait cltd std loop mov ss div pusha ss incl inc ret cld ror test sub adc shl sub mov (bad) (bad) (bad) (bad) jle stos mov iret std lods mov pop mov insl das push iret or mov push cld rcrb mov jle imul (bad) dec imul pop std jmp xchg mov pop cmp mov push jmp add (bad) (bad) lcall add xchg jmp pop mov fst xchg mov xchg les ret (bad) (bad) (bad) pushl fcomps stc movsl cmp cld cmp movsl pusha fiadd mov into imul mov (bad) jmp (bad) ljmp push sub dec mov push repnz mov sbb xchg sub (bad) push call gs in ret jle fsubrs mov mov ds xchg cmp incl add cmp lret jecxz pop dec addr16 inc adc notb dec sbbb mov (bad) int3 mov and dec stos cmp mov dec pop push sub lss mov (bad) (bad) (bad) call and push pushf shr push fstps and sub popf ljmp xchg adc insl lret xchg add jo scas subl sbb pushf pusha cmp repz xchg mov and pop push (bad) and or iret sub add push lods dec sbb mov popa cmpsl ss mov (bad) fist out xchg into sahf (bad) std add repz test imul dec add (bad) (bad) pushl aaa and je add push cmp ror lret xchg mov jl adc (bad) (bad) decl xchg pop mov inc cwtl mov cmp test sub mov stos popf es (bad) (bad) (bad) ljmp add jno adc and mov lret mov dec in jne xlat idivl (bad) (bad) decl lahf adc adc js xchg (bad) mov jle mov gs push push loope popf add pop icebp jle dec sar mov in (bad) (bad) (bad) mov add leave repnz ja js pop mov push je fcmovnbe cmp sbb lods mov xchg icebp out ja sar (bad) (bad) jg lods or fwait enter xchg stc lcall cs (bad) mov xor arpl cmp xor fwait add (bad) (bad) ds xor mov add push mov stc les xor (bad) (bad) (bad) call jae cmc rcl mov push std sbb cli iret xchg mov and shlb lcall pop mov les (bad) out scas dec andb or push sub sbb aaa aaa rdpmc xor loop cmp neg popa mov fs dec xchg (bad) repz (bad) add (bad) jne xor (bad) (bad) push push shrl mov test pop adc divb dec xchg sub xor add (bad) dec adc ret imul or fstps cmpsl xor fldl fsub aad inc sti fsubs mov mov jo loop out cli cmc add cmp add rclb aad outsl movsb mov inc hlt out scas test push test mov (bad) push movsl hlt les mov hlt push cmp push mov (bad) sub imul fmuls (bad) (bad) (bad) call inc sti inc nop cmc mov sbb push jmp stos out pop adcl out pop add stc fcmovu (bad) in sbb faddl xor dec or lock xor sub inc out xor xchg cmc push (bad) ljmp mov lods xchg jmp add inc push (bad) (bad) (bad) jmp lods sub pop lods add imul dec add inc xchg xchg lea lods movsl cmpsb (bad) icebp push (bad) (bad) ljmp cld mov mov jno adc in lret sti insl out jp (bad) (bad) inc sahf adc (bad) or fstps daa (bad) or ret push sahf inc ljmp sar cltd out aas ret mov pop lret scas push sahf xor outsl mov jge xchg mov (bad) (bad) pushl mov fsubs mov pop into cltd loope loopne push into pop lods or movsb push xchg and lcall fldenv imul lock adc (bad) jmp mov pop cmpsb sub add mov cwtl jnp in jp iret and xlat idiv (bad) (bad) incl andb jmp leave out mov lds mov adc ljmp popa jle jg (bad) cmp inc push (bad) and rclb in pushl aaa cmp add pop lcall add mov in add adc mov lcall ss aas add or scas inc shrl adc pop fwait xchg cmp jl (bad) fcomip lea loope das fstl inc xor mov (bad) call sbb clc cmpsl (bad) js mov test push fidiv das popf clc es je enter ljmp add and xchg in cs hlt sub and lahf mov imul popa (bad) addr16 stos (bad) (bad) (bad) push test push xchg adc hlt ss jbe cmp mov or cld or rcll ja outsl clc decl mov cmp cmp mov push xor cmp (bad) jg subl inc mov or lret call ljmp sti cmpb add mov movsb cwtl inc pop pusha jl clc adc xchg fistpll or xchg ss bound mov mov jbe add ja sbb (bad) (bad) jg cmp cmp xor sub jecxz fild loopne scas and in pop add or insl and aas jge push ss in xor pop mov adc jge mov mov imul xchg sbb pop bnd xor testl aam sub jns xor mov mov and mov jne test pop jo add mov or push lahf inc lds (bad) (bad) jmp dec mov xchg mov jp pop dec out das cwtl into or pushl mov sar call jg stc sbb cmp call mov (bad) leave sbb jg xchg mov jecxz rcrb test cltd mov jmp decl (bad) (bad) fnop in xor push movsl ds out cs ror push jb xor inc (bad) incl pop js xchg lock (bad) dec or fwait out sti pop pop sbb pop movsl pop xor jecxz jne push (bad) roll cmc jb push jo (bad) (bad) jg or cmpsl movsb repz cmp xchg incl mov sub cmp or decl jne mull divb aas or out add loope testb sbb inc add mov push or popf nop bound adc repz (bad) (bad) call mov xchg inc add jp int pop jle xor mov (bad) pushl daa mov cltd icebp insb call jl movsb and (bad) cmp lcall fstp sbb add lea fsubl mov loopne push mov ljmp mov idivb adcl sub mov or jmp mov aaa (bad) adc jmp cmp inc movsb add pop fs add adc xlat cmpsl dec (bad) (bad) jg sarb pop imul mov jg push inc pop xchg dec cmp pop (bad) incl adc js push sbb fwait jl cmp fsin xor jecxz sti pop jle stos (bad) (bad) (bad) decl lea mov xchg sub cmp popf jp cmp insl jmp (bad) decl (bad) js je scas or mov jecxz subb push stos (bad) ja (bad) call cmpsb daa pop xchg (bad) in ret xchg mov sub stos ret xlat imul in (bad) (bad) dec lods bnd adc mov push hlt es js lock ficom (bad) (bad) (bad) push shlb movsl cmp adc add mov sti mov mov aaa cmp push (bad) loope sbb or mov cmpsl hlt push adc inc fcmovbe push outsl (bad) (bad) (bad) cli inc lahf adc sbb repz (bad) lea movsb xchg out lret out je,pn (bad) (bad) ljmp mov lock push mov lods or xor bound scas push xchg dec in pop std (bad) cmp addr16 adc (bad) cmp pop or movsb (bad) repnz cmovp pop sahf aas (bad) (bad) (bad) pushl lret inc dec cwtl roll mov cmpl iret int (bad) (bad) jmp fdivrp adc xchg cmpsl pushf nop es aam imulb (bad) sbb addr16 jae add add (bad) (bad) lcall dec cli xor aam clc fcomip add inc ja inc (bad) bnd rorl call xchg roll pop stos mov push (bad) (bad) pushl and mov sub aaa jnp ret push add lods pop popa mov outsl inc add bound cltd idivb push mov mov (bad) mov sar (bad) pushl push xchg pop inc sbb dec jg sbb fs ret jg decl add pop and fptan lock xlat stos cmp xchg out (bad) fcomip (bad) fbstp cs cmp dec lret sub fidivl fidivr dec fs (bad) (bad) lcall cli mov jl daa push out aaa xchg notb scas subb cmp push cltd cmp (bad) jmp cld dec or xchg pusha bound out lcall mull das pop cmp ret (bad) (bad) call dec int int inc adc mov js ja (bad) (bad) (bad) jg movsl mov cli fs outsb adc and dec sub inc push push in sbbl js daa cwtl sub mov or stc in clc scas inc push call add (bad) (bad) (bad) dec jge (bad) fadds es fsubrp (bad) xchg xlat aad pop or xor jecxz pop xchg and (bad) incl lret sahf jno xor in dec xchg xchg push std or sub pop fucomp and mov xchg inc push push fdivr aam je lret mov dec into pop rcrl mov (bad) (bad) mov push mov mov addr16 icebp jge ffreep push sbb (bad) (bad) pushl dec pop (bad) bound fstl ret dec push or inc negb and dec pop jmp mov xor or rcrb or pop cmpsb inc hlt dec fstps cmc (bad) (bad) jmp jb and jno iret jecxz mov nop jne mov hlt lds cli das mov (bad) lcall aaa dec sbb std fstpt dec testb clc loope pop es add or (bad) pushl stc dec out jmp mov cwtl and bound std or add pushl (bad) dec mov push push cmp notl sbb jne push mov cmp (bad) (bad) (bad) lcall lret in xchg dec cmc cmp jg shr jo jl sub (bad) (bad) (bad) decl insl (bad) cld push ds imul or aaa xchg test (bad) ljmp (bad) ljmp and stos mov out sub or jnp sbb cltd dec imul test push sbb (bad) (bad) ljmp stc (bad) mov jecxz das add jg push sbb int3 jae pop je scas clc sub xor es pop scas rorb add cwtl cmpsl adc add das add loop (bad) (bad) jmp fs pop mov (bad) mov dec push mov mov rcrl (bad) insb cmp jg fs xchg or dec movsl and in in mov add lock lcall add in jge xor sbb push movsl push in and (bad) ljmp mov jmp sub data16 add (bad) jecxz inc xor push (bad) (bad) (bad) jg adc sbb push test xchg clc scas mov inc push push and xchg loop loope (bad) lret jg (bad) (bad) (bad) pushl mov repz xchg iret std shrb dec pusha add adcb fisttpl add (bad) (bad) decl push mov bound ja insl or push mov or xor cmc (bad) (bad) jmp aaa inc movsl lcall aaa into (bad) cs push or add (bad) (bad) (bad) lcall lcall (bad) je outsb les ljmp fidiv out cmp repnz pop faddl (bad) (bad) (bad) ljmp inc (bad) call mov cmp (bad) sti xor pop (bad) (bad) decl xor jp fnsave xchg loope push rcrb cs jg hlt mov lcall adc cmc mov (bad) scas push cmp lds jno inc test sub cmpsb lahf daa inc push lock add mov (bad) call adc pop ja jg jo pop and pop lret xchg (bad) sub ja add dec push inc lcall pop sbb iret (bad) (bad) (bad) (bad) pushl imul es push mov xchg jp,pt jae addr16 aas jge dec icebp pushf aad pop pushl jnp inc leave mov xor movsl imul roll mov (bad) in (bad) push sub xchg push test xchg outsb dec sbb xchg icebp ja jae (bad) (bad) (bad) sti sahf xor xchg dec popf ficom lds (bad) pop cmp push je sub mov jp (bad) (bad) (bad) call adc scas jnp movlps cmp jne mov repz (bad) (bad) cmp xor outsl mov jge insb cmp xor mov pop (bad) (bad) (bad) decl add mov cmp imul dec test dec push mov inc cmp lock and call xor cmp imul lcall dec clc mov arpl sbb or ret fsubl (bad) mov xlat or loopne ljmp scas faddl scas cli (bad) push sbb push idivb in out xchg add jnp xor je cli (bad) ljmp adcl mov js push inc daa push pusha inc inc lret dec jg call jb sahf mov aas pushf jnp fwait sti inc adc inc incb (bad) (bad) jg mov sbb aam insb fxtract insb xlat xchg and pop xchg scas pop shrl aaa leave pop (bad) lods mov (bad) (bad) jmp std mov adc rol stc mov scas jo add jle cmp fisubrl cwtl adc sahf fimull and mov popa inc (bad) xchg xchg lods (bad) (bad) mov xchg loop mov andb ljmp adc iret mov dec (bad) push (bad) (bad) (bad) ljmp dec (bad) call out cmc imul mov cli jae adc (bad) shr (bad) (bad) jmp ss pop bound test dec popa mov dec ja add (bad) (bad) mov mov insl mov or shr pop pusha sbb pop out popa sub mov (bad) jmp inc daa push jmp pop fistp je pushf enter (bad) (bad) (bad) call mov mov scas or xchg fucomp jne imul inc lahf jg jmp (bad) jmp adc iret call sub nop xchg divl imul stos test call sub push mov outsl aas pop loopne (bad) sub xchg xchg mov ret (bad) lcall pop mov (bad) rolb dec pop add mov clc jl and (bad) (bad) (bad) jmp sub push sbb int3 fnsave movsb insl inc adc xor adc add (bad) (bad) (bad) push pop sahf lret xor in adc out (bad) pop pop imul cltd bound cwtl (bad) cmc decl mov (bad) (bad) (bad) call add sbb push lock outsl mov dec jbe imul mov rcrl push ret (bad) (bad) mov cmp cmp inc cld stos mov loopne out jnp sub (bad) (bad) pushl dec dec daa adc cmp or push pop jle jbe loop cmp aam (bad) (bad) (bad) (bad) mov into push stos in fsubrl pop movsb dec je outsl adc mov xchg pop in (bad) (bad) lcall xchg test xchg gs std in add stos pop mov jle pop sar (bad) (bad) cmp and mov ret add mov sbb scas out loope jbe js stc out std (bad) (bad) out push out xor lea add nop jnp in jl lcall leave mov lahf (bad) mov sub insb test sub or push xchg cld (bad) (bad) jmp lea cwtl aad push outsl popa lret cmp xor jns shrb fwait add sahf aad call je jp fmul (bad) (bad) (bad) (bad) aas test rcl and jnp test fcomps lret andl int aaa add (bad) (bad) ljmp mov cmc sub add loopne mov mov add imul cmp xor jg das jmp xor dec test mov in xor fidiv out out fcomps cmp mov in xchg xchg addr16 (bad) (bad) mov push scas pushf bound add dec xlat xchg movsb dec mov xchg mov bound xorl ret inc or mov pushl sub lahf cs inc divb (bad) and xor sub iret pop cmp mov cmp push aad (bad) (bad) (bad) lcall stos stc shrb out inc adc sbb mov sub push (bad) decl sub es inc test data16 add popa ja pop stc adc cmp (bad) (bad) (bad) dec or ljmp int jp jno jg mov scas pop cmp andl push aam inc data16 mov int3 dec xchg in call aas mov test cmp (bad) (bad) mov (bad) xor mov shrw popf insb jns data16 sub mov pop (bad) pushl std test xchg test mov dec and xchg inc (bad) xchg gs jmp loop (bad) jmp adc mov outsb adc sub bswap and pusha push jg (bad) mov mov dec mov aaa mov loop sbb (bad) pushl xchg fisubr jno in loope ret cld and mov pop imul (bad) (bad) push adc bound jge lock nop int3 int shll xchg scas sti adc pop jl (bad) (bad) jmp mov (bad) stc cld dec mov pop add stos enter rclb add incl xlat jmp xchg fs xor dec xchg push enter add aad mov (bad) (bad) (bad) ljmp sub pop jbe sub les (bad) movsl (bad) mov and mov sub (bad) (bad) decl sub shlb out push or dec pop and jle ret inc (bad) (bad) (bad) call inc sbb push lcall mov jne fild jo adc push sub (bad) (bad) (bad) ljmp push and jge mov repnz aam sahf jmp mov jo clc (bad) mov jae mov leave pop lods xchg jg sub cmp pushf sbb cmpsl (bad) or inc inc inc loopne mov jnp inc rclb adc cwtl mov pushf movsb stos (bad) (bad) (bad) (bad) out xchg sbb push cmp mov xchg lcall mov fbstp icebp jo in cwtl popa fldcw imul fsts repnz adc hlt jne ja aam xchg call cld push bound or sahf (bad) xchg rcll xor xchg incl shrl inc inc stos or mov add lds (bad) (bad) mov dec bound iret sahf mov leave aad jns fcoml (bad) (bad) jg sbb sub mov jo mov adc nop cmp push jle push push mov xor (bad) (bad) (bad) call xor sbbl pop mov fisttpl dec in pop out bnd push inc xchg (bad) (bad) (bad) inc nop in mov or push fsub dec jecxz jae fnstenv mov mov stos push (bad) (bad) (bad) ljmp outsl cmc adc mov repnz pop jl sbb jle push aas inc inc fwait sbb (bad) decl xchg movsb add and mov shlb aas jge add (bad) (bad) call xchg dec pop mov and scas es and xor test add aas into lea cmc (bad) popa adc push jge cmc sbb sub das sub push inc out jmp in push and (bad) incl test clc insb mov pop cmp push fisub sub bound (bad) (bad) (bad) lcall or cli pop adc push and cmp fimul (bad) (bad) mov pushf scas not mov cmpsl fsubs popf push cmp mov sbb mov std (bad) call loopne lods xor jbe xchg push cmp dec xor sub (bad) ljmp mov lea icebp outsl rcrb pop movsl sbb cmc push aad (bad) (bad) (bad) jmp (bad) cwtl iret out cmc lods scas and or mov stos sbb (bad) (bad) pushl aam mov outsl lock cmp lret inc jl xor cmc out xchg loopne,pt std lcall js (bad) mov xor stc je mov push inc mov mov jg inc push insl mov out push sub xor and jo fcomip add jp mov or roll out jp xchg push loope push jge push lock lret jmp add push jg jmp pop idivl data16 in pushl jg (bad) mov loopne dec jp xacquire jecxz cs ds into cltd inc adc (bad) (bad) jnp iret cltd popf xlat or mov (bad) or cld outsb mov sbb (bad) (bad) (bad) dec sbb xor popf or dec dec dec test lds enter fwait or (bad) (bad) (bad) (bad) mov sbb mov pop pop jno adc jl aas and (bad) (bad) lcall cli mov xor mov dec dec insl sub cmp xor mov or adc (bad) lods mov lcall bound adc jle push xor adc push fcomip decl (bad) loopne jle mov dec xorb fbld and mov cmp mov push cld repnz adc (bad) mov lock inc scas mov cltd call test xor call loopne (bad) stos cltd sbb jb leave xchg push test out cmpsl mov imul arpl (bad) hlt cmp jg jl lret arpl jg (bad) andb (bad) pushl cli int3 fcmovbe jno fwait adc xorl in mov jmp rclb (bad) fcomip add pop and addb fiaddl cmpsl xor or (bad) (bad) (bad) jmp icebp lahf mov mov pop repz gs and out add (bad) (bad) (bad) clc push addr16 pop mov mov adc fisubl add or aam inc (bad) (bad) (bad) jmp xchg push push sbbl dec jmp inc ret jle outsb mov sub push movsl ret (bad) (bad) (bad) fistl cli (bad) push inc out outsl ja xchg or and sbb inc shrl cld (bad) mov xchg in and fidivl adc popf int3 pop push (bad) (bad) jg ds pop and pop cmp mov lea xchg insl out xchg (bad) (bad) (bad) fmuls stc mov cmp (bad) cmc enter gs push fwait (bad) jne jmp fcomps lahf (bad) (bad) (bad) call or outsl sub stos mov sbb add popa loope add testl cwtl stos and ja mov ss (bad) mov mov mov adc call nop sub xor aad jle inc int or mov into or pop aad pusha xchg clc je fbld inc cmc cmpsl aam inc pop (bad) (bad) (bad) lcall daa gs scas adc mov add out inc jge leave or pusha xchg (bad) push xchg call loope cmp push lods add or cld jnp out addl sarl sbb push loopne (bad) pushl adc cld pushf xchg mov pop inc pop retw add (bad) call mov jge out mov sbb mov fnstcw jge std call and mov sarb adcl mov inc bound leave int ljmp (bad) decl ficoml sub mov jmp add stc pop fsts gs (bad) pushl dec adc xlat pop cmp mov orb (bad) incl insb sti ja dec aas push add fdivl and scas negb ret pushl (bad) (bad) mov (bad) xor int aad lret fcomps inc inc icebp (bad) decl bound in pop fwait lds jg aas test fstl decl sbb cs jl inc sbb cmpsb sbb rcl mov idiv (bad) (bad) lcall cmp ds into push xchg leave fsubs shll dec cmp shrb (bad) (bad) (bad) incl lcall mov and lods pop iret addr16 pop in mov subl lcall movsb push subl or mov inc mov xor xchg (bad) jl mov mov std shlb ds lock lahf sub push sub xor test (bad) mov pop leave stos mov jl pusha mov or jecxz cmp (bad) fcoml (bad) incl or adc aam aas lahf in int (bad) mov dec add (bad) (bad) (bad) call sub push std jmp cmpsb lret pusha or mov xor jg push sub sbb dec xchg push mov add in jl pop daa ds jb sub das xchg lock imul fucomp cwtl add (bad) xor pop jbe and push cmp dec and push pop repnz sub (bad) (bad) (bad) cmp scas hlt push and inc xor adc adc jno shr cmp sarb (bad) (bad) ljmp jns leave loopne dec test ss je fimul dec aaa test (bad) (bad) (bad) out inc sub not push inc std push fs sub loop enter stos sub jle aam insb aam (bad) (bad) pushl cmp adc sub xor sub outsl aad cmp mov and mov addr16 ljmp xor shrl cmc sbb clc (bad) jb inc mov adc (bad) (bad) (bad) decl fsubs out cmp popl mov sub fidivl jno push add pop pop (bad) (bad) (bad) pushl cmp movsl mov or jmp movsl sarb ja push push lea xor lret (bad) lcall call fwait dec add mov jmp ja sqrtps jge cmc mov (bad) lcall mov xchg mov inc mov cwtl sahf mov scas sar jg nop jl sarl test sti xchg cmpsl inc cwtl or pop (bad) pop and pop gs push aas mov inc jbe adc pop jmp (bad) (bad) ljmp int3 or incb pop mov in sti mov movsl inc mov or or sahf push lret rcr add fisub (bad) (bad) (bad) mov push mov in ficoml xor adc mov fcoml push (bad) (bad) (bad) lcall imul das enter je sub sbb (bad) xor lods add (bad) dec arpl (bad) gs xchg out or xchg (bad) (bad) ljmp sub mov lods in addb cwtl push addr16 sub cmp lea (bad) (bad) (bad) lcall loopne push test cmc mov mov in movlps negb and (bad) fisubr add cmp or lock xchg sub mov mov imul lcall inc dec enter mov inc push ja fsubr repnz mov mov xchg (bad) (bad) (bad) lcall push mov aam jmp vpunpckhbw dec cmc sbb inc inc out dec pushf cmp (bad) lcall cmp push outsl xchg vcvtsi2sdl fs into (bad) (bad) (bad) call dec arpl decb lock sub or daa add adc lods add ds add (bad) (bad) clc lock jp lods das aaa daa xor jecxz pop mov adc inc pushf lds loop and (bad) (bad) call in mov (bad) push inc xor pop jge in jg push xor divb and js out clc decl out cmp push stos outsb sbb (bad) in xchg add xor lcall jmp (bad) loop lret push adc cmp sar loop rorl add (bad) pop lahf adc aad cmp mov add stos jge dec sub (bad) (bad) call loop mov cli imul push andl adcl inc or lds (bad) (bad) (bad) mov sbb jae in mov out aas in xchg add xlat aas in mov (bad) (bad) (bad) pushl in loope insl push fwait sar shrb and mov int cs (bad) (bad) jmp cmp pop pop sbb xor (bad) add gs popa adc into adc in jb hlt (bad) (bad) (bad) jmp dec inc inc adcl jo adc aam loop or (bad) popa push pop and jmp pop mov push push xchg out rcr push es imul jb mov push (bad) fcomip decl lahf nop inc sbb sbb jnp push inc jge inc test pop (bad) (bad) ljmp cmp lret movsb rcrl cmp nop xchg jp pop inc (bad) subb xor pop insl (bad) stc xor inc dec pop or pop mov fcoms enter je,pt int3 hlt dec adc (bad) call jne ret sbb das xchg sbb (bad) movsl mov lcall aam (bad) inc ds push stos sahf pusha ss addr16 mov mov imulb (bad) and in and out add scas cmp (bad) (bad) (bad) pushl mov insb inc jl aam pop push std dec into jae xchg out nop add les sbb (bad) pushf (bad) rcrb out jae or (bad) (bad) (bad) (bad) decb or fisttpll sub int3 mov push cld lds lcall ja scas notb repz add loop into psllq (bad) decl cmpsb push or scas push daa xchg add stos (bad) lret repnz xchg jno dec daa inc scas sbb mov in (bad) mov pop js mov in inc sbb jmp cmp mov push xchg arpl add cmp clc cmp imul mov (bad) (bad) (bad) jp sub fistpl loop cs ljmp shrb inc sub mov (bad) incl sub je dec adc inc out xchg test (bad) (bad) (bad) lcall andl pusha sbb and inc cltd cs adc adc dec add sub (bad) cmp dec leave mov call cmp add (bad) fildll arpl int3 (bad) out pop loop outsl sub inc fstps mov incl into pushf jecxz insl or adc loop xchg jb dec pop jmp jg (bad) ljmp jo in int xacquire mov aaa dec (bad) jp push mov adc push outsb (bad) dec xorl ljmp adc mov adc popa xlat push pop xor sub jge imul add in frstor push mov enter (bad) (bad) decl xor add cltd or mov psrld mov sub push (bad) aas imul pop pop adc mov pushl call lahf cld mov mov and idivb mov ss fwait dec jg add (bad) (bad) (bad) in jns stos out loope int3 divl or outsl and mov xor adc popl or (bad) (bad) inc pop ret jge (bad) or jo mov adc sub mov (bad) in sarb and dec and jo and push fdivrl stos mov cmc bound push rorb aaa inc out sarb (bad) (bad) mov push push sarl xor popf mov andl sub hlt (bad) (bad) (bad) in fist sub aaa jns xchg mov jae stos out scas pop lahf pushf dec mov pop bound (bad) ljmp les jg cmpsb cmp ljmp popa jecxz adc add clc (bad) lcall mov xchg dec inc push and (bad) xlat and and lcall mov mov shrb or stos sub leave mov cwtl aam (bad) (bad) jg cli nop xor mov mov dec xlat lret fwait aam xchg mov (bad) (bad) call imul in cmp cmp mov mov add or pop or (bad) (bad) decl fstl jg mov cmp dec jle test jb pop pop bound xchg lahf cli (bad) (bad) (bad) push popf int add dec inc cmpsb xor xchg inc push mov jecxz pop mov mov mov loopne incl adc sub fwait add iret call xchg int3 pop adc call sbb cli jg pop cmpsl cmc push icebp faddl mov xor fstp xlat outsb mov das jnp (bad) (bad) (bad) fcomip jmp mov xlat mov je stos frstor or (bad) cld or mov (bad) pop cmpsb popf add and flds push cmp pop push inc int pop mov sar dec pop fisubr div jae aad adc (bad) cli (bad) (bad) push lods mov jae and mov mov out mov arpl mov mov (bad) ljmp mov inc js out rcrl sbb test jge inc xchg mov (bad) (bad) (bad) ljmp add push lcall jecxz add jno sbb jae push (bad) aad daa lahf mov push cmp std ss push add (bad) (bad) dec popf xchg cmp mov lcall xor test mov and cltd das dec xchg pop mov pop mov xor (bad) (bad) (bad) jg ja add jmp loope or les pop sub and adc and cmp pushl jnp xchg lret jp daa push mov (bad) rcl fcmovnbe push test clc cmp mov dec (bad) (bad) ljmp mov cmp sbb push (bad) jae scas imul (bad) call jno add enter pop xchg push xor mov bound and xchg (bad) incl mov dec xchg push cs andl (bad) (bad) (bad) push mov add adc xlat andl imul iret pushf in (bad) (bad) (bad) inc adc mov xor push cmp jle sub movsb cmc addr16 xchg cmp clc dec jmp add jb cmp fildll cwtl and cli (bad) jg call xor cmpsl mov pop movsb jno stos sbb js jo imul jp jno xlat lret out push pop jo xchg pop xchg fistl lcall (bad) (bad) (bad) (bad) jns xor sub movsb xchg js add sub hlt imul das lock ljmp xchg add push fistpl dec (bad) (bad) (bad) dec into mov sbb rol icebp popa xor mov movsb sub xor rolb jg jae (bad) (bad) call daa xor (bad) je (bad) ss arpl sarb in xchg lds ljmp dec lahf xor mov mov mul mov (bad) (bad) lcall fcoms mov imul xchg in sub add lret push cmp test (bad) pushl push dec gs (bad) jne fdivrl icebp pop xchg jecxz mov push cld (bad) decl sahf mov (bad) nop movsb push incb (bad) sbb hlt sub jno (bad) mov xor data16 int into popa sbb add repnz out cli (bad) fidivrl stos leave scas ljmp movsl push jbe aaa ret sbb imul sbb insl push mov gs xchg shl clc and popa je dec ljmp clc call inc add lea int3 push inc mov cmpsb negl jmp test sar les mov loop pop arpl dec loopne mov js mov (bad) (bad) incl (bad) or mov jmp jo mov stos stos push in addl stos cld lret std (bad) call mov iret dec sub test imul pop fwait cwtl (bad) (bad) (bad) (bad) call int fsub or std bound fnop sbb andl je sbb jg (bad) fstps mov idivb inc ja sub rcll out (bad) (bad) (bad) fistp nop jno mov jb jb lret or scas aam cmc ret or ljmp (bad) jmp cmpsl dec jl ret push mov push outsb mov pop sbb jns repz or add dec aas cmpsb add fidivr bound mov call adc sbb (bad) mov add mov cmp pop add sub daa and mov xchg (bad) (bad) (bad) decl notl push movsl shrl mov pushf sub test or inc fsubrl inc nop jg fcomip pop enter aaa mov push mov cmp (bad) (bad) (bad) (bad) call sbb aaa jne in (bad) add ffreep sbb cmp add inc sub incl movsb lahf dec popf adc xor popf (bad) (bad) push lcall pop imul adc js pop sbb and imul es (bad) (bad) in adc add dec mov mov inc adc pop in (bad) (bad) ljmp test sbb (bad) fstpl add js jp out push sbb mov mov into sbb subl pop into dec mov test jg or sub cmp fidiv fwait xor fnop scas mov xchg dec out or push mov (bad) (bad) ficoml xlat popa rorl mov push mov xchg jne rcrl mov xchg test push pop xlat or testb jnp fmul xor divb (bad) jb fcomip jmp cmp xchg push mov mov test lret ret fwait push push mov iret popf mov subb (bad) (bad) (bad) ljmp bound and and gs cmp xor ds (bad) (bad) (bad) jmp sub data16 stos dec sbbb pop arpl ficoml in into cmp stos (bad) notb loop (bad) (bad) call pop or mov sub ret pop (bad) (bad) ljmp loop ds sbb xchg je adc aaa xchg inc stos or (bad) decl ret jns adc mov into jl push mov cwtl lock (bad) inc (bad) icebp mov out fcoml aaa mov xor out push in (bad) movsb rcr sub (bad) (bad) fbstp cmp xchg ljmp pop xchg fcoms or jno or (bad) (bad) call pop push adc fcoml cmp inc and lahf cmpsl (bad) je (bad) testl icebp (bad) (bad) out push sbb push sarb and mov jl clc (bad) (bad) (bad) (bad) ljmp cmpsb fistl nop pusha stc inc (bad) adc pop pop lods aam or (bad) (bad) (bad) ljmp sbb insb fsts fcoms dec cmp inc pop xchg enter (bad) jle fbstp (bad) fwait push push dec sub adc push shlb (bad) (bad) mov or stos sub sbb (bad) lcall push aas mov aaa ja xor cmpsl jb lret popf xlat lret clc mov adc jno (bad) (bad) (bad) jge aaa (bad) pushf cmp outsl push xchg imul imul into and ret and cli mov (bad) (bad) mov mov xchg roll in and sub push sub incl (bad) lret dec adc jg mov pop add xchg (bad) nop loope mov (bad) push scas push cld dec add mov mov insl add jb push jno (bad) (bad) (bad) (bad) cld jb sbb sahf test xorl aaa mov sti pop pop xor xchg int3 nop pop jae (bad) (bad) (bad) mov xchg in cmp jne mov add cmc js stc jb mov or xor (bad) push add mov int3 push cs call mov adc pushl addb test mov icebp jmp orl js movsb inc (bad) (bad) mov push lret xor pop (bad) mov xchg pushl push in and xchg les dec or cmp cmpsl je (bad) (bad) pushl pop outsl push call inc sar adc sbb imul dec (bad) decl popa jg mov into and imul xor mov (bad) (bad) (bad) decl repz jecxz les arpl or jns jmp out dec mov add (bad) (bad) (bad) out pop mov lahf cwtl dec (bad) dec loopne sahf stos cmp push fs inc cwtl sahf mov out aam add pop cmpsb cltd out dec dec xor mov push mov leave pop dec (bad) mov (bad) (bad) call les add push (bad) lea pop mov insb or popa xchg int clc andl adc (bad) (bad) decl sbb jo popa sti sub fsubrs or adc adc call cmp (bad) mov daa xor ret pop out push adc cmpsl rolb (bad) (bad) decl jecxz inc adc adc mov mov dec inc dec loope sti jecxz (bad) mov (bad) inc sahf sbb not lret pushf jl jg push jge mov enter adc in push in btc adc divb into fwait cmp test ljmp sbb jmp imul ja movsb (bad) mov xchg test sbb sbb jb add (bad) (bad) js mov mov inc xorb ret inc inc and jbe (bad) (bad) (bad) jg das mov sub mov adc and divb sahf outsl jne inc mov repz adc xchg hlt ljmp add pusha add or mov popa inc ljmp lret (bad) (bad) push out add (bad) pop and push or and stc outsl sbb arpl inc adc jmp push xor inc jbe push pop leave loope push push cmp stc out add push dec fmulp cmp sbb (bad) (bad) (bad) (bad) jmp movsl inc (bad) jae ret inc hlt mov xor fisttp inc pop es (bad) (bad) cmp addr16 pushf inc pop push insb push enter jno gs dec fisubrl sar (bad) decl lock imul mov test cwtl push out xor out sahf out lds inc mov mov pmulhw (bad) dec std dec adc (bad) (bad) (bad) (bad) incb sub sub stos jne push mov push leave lcall inc push lret rcrb and call enter mov mov arpl sbb mov jp (bad) enter (bad) lcall stos mov add cmpsb pushf fdivrs fcmovnb mov aam push (bad) (bad) (bad) ljmp movsb jb ss jbe sub imulb cld jmp (bad) sbb push cmp mov dec nop push xor push inc cmpb sbb (bad) incl jmp sbb cmp pusha stos mov jmp pop sub (bad) incb inc push mov mov lea cwtl xlat push mov repnz sub scas dec xcrypt-cbc cmpsl adc jmp cltd mov push cwtl rorl ds mov rcll or (bad) (bad) fsincos inc cwtl mov out adc pop add mov (bad) (bad) incl xchg mov inc xchg shrl cmpl hlt bound (bad) lcall mov insl adc (bad) inc jne mov (bad) xchg cwtl mov jmp add pop pop xlat jge into add push mov call cmp arpl insl jp lahf mov add leave (bad) (bad) (bad) (bad) cltd std lea insb jl or xchg into (bad) outsl lcall mov insb pushf mov push and ja ja pop repnz mov (bad) call xchg and cmp push mov sahf les aas popf out test adc std stos popa sub lea ret sbb adc jl pusha xchg mov jp adc call (bad) call inc bound jb pop cli cltd nop mov popf mov in fcom jo (bad) fdivrs (bad) (bad) (bad) jmp ret daa in cmp movsl push cwtl xchg or mov cmpsb cmp (bad) mov std (bad) decl (bad) dec jno pop or pop out adc adcl adc ss jle (bad) mov push insb xor cmp sbb ret (bad) (bad) jg pop sub or xchg sbb adc (bad) (bad) inc add cmp cmp (bad) fisttpl push (bad) lock stc mov mov push (bad) cmpsb (bad) incl insl cmp push int3 ja mov or (bad) movsl (bad) je ja dec cmp (bad) jg adc outsb outsb movsb push cwtl dec inc pop xchg mov fisttpl push movsb inc (bad) (bad) (bad) (bad) fcompl repz xor pop in bound wbinvd jle sbbl outsl adc jae cwtl (bad) (bad) (bad) call test sbb xchg out pop sub jne mov inc push xchg jno iret cmp hlt adc outsb mov (bad) add and mov (bad) out lods add stc push push and jno bound lahf enter push notl cmp int3 cwtl or fiadd push iret sbb (bad) (bad) incl add inc dec out aam add pusha pusha mov cltd or jo sub iret (bad) (bad) (bad) (bad) mov sarb pop push ss xor push fistp pop jae aaa loope (bad) pop out mov xor dec or cmp add cld sbb (bad) (bad) (bad) lcall in insl mov pop push mov dec and jle xor aas dec mov jae or push mov push loop pop cmpsb sbb lahf sub (bad) scas sub cwtl dec mov inc add (bad) (bad) jge call adc andl roll ja pop mov push cmp push in bound xlat aas fiaddl movsl xor lcall pushl push lods cmc ror adc aas js (bad) mov dec sbb cmpsl idiv (bad) (bad) (bad) (bad) jno (bad) mov xor into inc into aam jl cmp in pop divb (bad) (bad) call sub and test push hlt loope sti adc stc bound inc insl pushf ljmp pushf lods dec ss gs push push bound out jg insb dec mov lcall call xor mov dec mov cltd hlt nop data16 hlt leave dec scas lcall (bad) cld and fwait sub mov and jne ja adc (bad) call pop dec jo cmp or cmpb dec sti jae adc pop (bad) (bad) (bad) ljmp adc shlb lods scas ljmp sub add mov or (bad) fcomip pushl out mov fildll (bad) pop cmpsl jp fnstcw (bad) jg sub mov xchg mov inc adc lods add repnz mov dec imul sub cmp xor lcall mov pop cmp test xchg mov sub mov stc out test repnz push inc ret and fistpll out in inc jle imul push adc in xchg sbb (bad) mov inc jecxz mov lock movsl cwtl out and popa xor xchg ljmp (bad) cld jmp movsb insb inc push xorl push ret mov (bad) iret jo (bad) call inc inc jecxz xor dec iret mov jl mov adc or xchg jbe xchg mov clc psadbw cmpsl push lods mov call (bad) cmp dec sub pop mov ret fsubrs lahf std dec sbb or dec fsts in rclb bound sbb (bad) push enter inc ds fnop mov or aas (bad) mov inc cmpsb mov aaa mov jmp test dec insb jbe (bad) cmp (bad) (bad) (bad) dec sbb pushf call lods or sub iret push mov mov sbb aaa cld lcall jbe cmp mov ja arpl mov and (bad) mov ss addl dec gs je mov lret (bad) (bad) (bad) (bad) (bad) stc and es xor mov dec stc mov imul mov jecxz mov inc sbb fistpll push (bad) xor das sar call pushl mov gs xor aaa test push (bad) (bad) (bad) (bad) mov stos push adc scas add pop and sbb cmp mov loopne shll and dec shl inc (bad) icebp sub mov push xchg sub incl adc pop sbb and in mov icebp or push cwtl cli mov repnz push daa and (bad) (bad) ljmp push mulb (bad) cmp push xchg out loopne (bad) fidivr icebp jecxz (bad) (bad) (bad) ljmp xor add roll arpl adc mov in pop push mov or mov sbb mov inc xor ret and adc push test fidivrl inc (bad) (bad) (bad) pushl adc mov test dec or pushf and push sub (bad) (bad) (bad) jmp add cmc or out lds sbb ja xlat ljmp or (bad) (bad) (bad) decl imul imul into (bad) push add dec mov sub sbb (bad) (bad) ljmp (bad) xor (bad) sbb mov addl pop (bad) (bad) (bad) pushl mov fnstsw stos iret movsb (bad) sub int3 insl stos inc jne rcll ljmp cmp rolb mov aad xchg inc mov lret lret (bad) (bad) (bad) ljmp pop pop ljmp mov lcall xchg (bad) rorb fidivl and dec push sub pop aad push adc (bad) lock (bad) (bad) (bad) jg cmc leave cli (bad) int outsb lret add xor mov (bad) ret cmpsb xor dec (bad) (bad) (bad) decl mov loope xor leave sbb je ljmp push mov (bad) (bad) ljmp or dec push pop std jp xchg lcall popa jb adc jae scas pop or or sbb imul lds dec push cmp std (bad) (bad) decl inc sbb mov xlat stos cmp jo push repz (bad) (bad) call fmulp adc mov adc leave pop jmp mov fwait mov (bad) (bad) lcall cltd push jne pop pop push jle (bad) mov mov popa sarl int dec xchg (bad) (bad) (bad) (bad) jle fiadd mov les call sub adc mov jo xor (bad) (bad) jmp mov pop cmpl mov pop mov cmp fdivrs cmp (bad) sub dec push inc sbb push push add and (bad) (bad) (bad) (bad) jno mov pop mov inc arpl mov cmp add aam pop pushf inc (bad) mov push dec sub rcrl xor pushf pop (bad) decl sarb push sbb mov pop fneni(8087 adc jmp outsb cmpsl stos add out adc mov mov dec cwtl xlat jp jo xchg lods (bad) (bad) (bad) jmp add jb lret pop jmp jnp and enter (bad) out aaa push (bad) loope mov jecxz and sbb (bad) cmpsl outsb cmc ja data16 stc cmp lock (bad) (bad) (bad) in les sub jne dec imul or in bound nop bound fldl mov (bad) fcomip push xchg (bad) mov stos xchg inc in xor lcall lock mov call outsb test das sbb and test (bad) (bad) (bad) (bad) mov mov fcoms vshufps inc aaa popa aaa fs (bad) and ljmp add lods pop dec sub and loope mov out scas arpl mov add sbb clc xor test and push cli jmp push and js repz jbe mov pop xor in clc in (bad) cmp arpl push jge roll test pop xor (bad) decl in ja lock shll dec dec sbb push sbbl mov dec inc (bad) mov mov jp pop rcrb mov lds or adc js add decl sbbb inc dec (bad) addr16 inc ss bound fidivrl loop and (bad) (bad) (bad) (bad) and out rcrb aas dec sub std (bad) xchg mov fsubrl es lcall fdivs jo stos rclb fildll (bad) mov jno call sbb daa int lea jnp jb xchg xchg push fcomip (bad) pushl test pop inc pop dec incb mov ljmp (bad) (bad) call pop fisubrl jns lahf (bad) xchg mov iret mov push lahf sbb scas mov lock (bad) (bad) ljmp push imul callw pop or insl int3 in std out pop int ret inc mov loopne pushl push xor adc repz jae hlt popa add xchg out fistl cmp movsb mull fiadd and mov (bad) (bad) (bad) (bad) jmp int inc pop mov push sub add cmpl out fnstcw es insb popa adc aaa cld outsl xlat xor jle add loopne idivb jno pop orl (bad) pushl (bad) push mov test xchg mov repz les push movsb nop (bad) insb cmpsb int3 pop dec mov mov push nop js xor dec pop inc (bad) (bad) (bad) (bad) inc popa roll add dec pop lahf jae mov xor movl repnz (bad) (bad) (bad) mov cmp xor cmp sbb es mov cmpsb rcll test (bad) (bad) incl ja jg (bad) mov stc sub fimul movsl loop (bad) (bad) stc dec jge lahf and cmc (bad) (bad) (bad) out push (bad) jnp fnstenv sub add adc repnz sub jne cmp pop jle sub jge dec mov fcoms repnz out sti (bad) or (bad) (bad) (bad) ljmp pop movsb movsb mov ja notl test pop rcrb pop aaa push mov aad inc addb sub push in cltd gs jns scas out cli lea pop and pop scas (bad) aaa roll imul pop or inc mov fdivrl xchg lahf jle lcall mov (bad) mov (bad) aaa jmp add (bad) lcall add add sub (bad) rcll xchg push push insb pop test mov (bad) (bad) jg mov fsubrl call mov add cltd lds repnz ljmp inc repnz ficom mov fidiv xor pop push sub out inc fcom fidiv cltd sub inc test mov push fwait mov add cltd loopne out cld (bad) lcall xchg es rorb cmp mov call push jnp nop mov and js or mov mov (bad) ss ret (bad) pushl std mov nop sub pushf repnz rol lcall (bad) (bad) call out or fwait cmp or insl sti pop pop es mov fild (bad) lcall push cld pop sbb xchg dec (bad) jg dec cmp mov pop mov incl cld (bad) mov jp lock or jns cwtl enter push mov (bad) push push mov xchg mov fdivrs femms cmp cmp xchg jg (bad) in movsl mov dec fsubs push pop xlat cmp divb jnp gs (bad) (bad) jmp icebp sub mov push inc add rcrb sub imul jge mov add or push add (bad) outsl stos mov call cmp std les shll mov adc (bad) (bad) (bad) (bad) jl mov insb (bad) cld and imul mov push incl ss jl xchg test (bad) decl or cld shrd ja ds pop fstpl scas aas or dec and (bad) mov jnp or xor xchg daa imul mov sbb (bad) (bad) (bad) call add ret sbb add cmp or xchg ret (bad) (bad) (bad) (bad) decl leave (bad) sahf (bad) mov jb pop aam jo mov pop jmp mov mov das clc pushl lcall mov dec (bad) push xchg or sbb (bad) (bad) (bad) mov xor test jecxz enter push mov adc sub rcll cli (bad) (bad) (bad) fcoms test or js lret jns xor cmp ljmp dec js and lock jge or sbb cmp mov lcall pop jo jb cld pushf jb mov mov (bad) aam shrb mov mov xchg adc pop add cmpl push sbb ja hlt rol mov pop inc jmp stc mov xchg stos jecxz inc mov pop lret push imul pushl xchg lret jo ss fcmovu jecxz insb push lds or sar (bad) (bad) ljmp mov and xor dec int popa jae scas or dec add clc or in pop aad in (bad) mov xchg sub (bad) (bad) (bad) ljmp xchg pop xchg sbb lahf das inc and scas mov addr16 jo insl jb fnstenv subl shrl sbb in call imul (bad) cmp push pop or cltd cltd jae (bad) enter daa movb (bad) (bad) jmp test and xor lahf push es xchg gs mov js dec fildll mov and (bad) (bad) (bad) (bad) std call add xor adc jb mov stos xchg jg inc icebp and (bad) lcall jge lret arpl pop cmp fidivr in add fwait sti aas aaa xor sbb jmp in dec pop sarb aad je mov sbb and dec mov hlt xchg (bad) (bad) (bad) (bad) cld pop add popa inc lcall xor mov cmp out (bad) (bad) (bad) call pop (bad) sub (bad) int add fs ret ret lret add mov das (bad) push fnstsw (bad) (bad) (bad) call push icebp sbbl mov xor xor ret pop push es shlb and and pop repz loop push mov sbb push lret test call mov and ja (bad) (bad) (bad) (bad) fcmovu aaa icebp mov in xchg int jg and incb inc les (bad) (bad) (bad) (bad) pushl ret test (bad) mov test icebp mov inc sub fcompl fwait (bad) (bad) (bad) call aaa in and das pushf fwait jle xchg fcmove jae subl std mov cmp mov jmp sarb push lods sub loop lahf pop out lods mov (bad) hlt mov incl mov xchg in fist sbb pop push sahf (bad) (bad) (bad) jg scas mov rcrl push call divl test (bad) inc and (bad) (bad) (bad) call inc adc mov xor call or push int3 cld add sub pop jle (bad) (bad) (bad) jns sub mov mov dec sarl dec rcrb vmread leave lea incl stc mov repz in mov dec sti cmp rcl fwait pop xchg and sbb (bad) (bad) push decb push xor fcoml dec jge mov add xchg jmp (bad) (bad) jmp mov fs shr outsl lahf inc addr16 jno,pn cmc int3 ljmp add cmp inc push pusha cmp add dec jl xor (bad) pushl mov arpl adc test push cs sub aaa pop pop daa ret cmp js xchg sub jns dec jnp test or stos mov fisubr adc jle icebp sub xchg js pop (bad) (bad) jg (bad) icebp sub dec pop mov loopne (bad) cwtl lret movsb outsl hlt movsl add pushl push xchg mov (bad) and std add jb subb loop mov jno ficompl xor dec mov add jle jbe (bad) fcompl lea inc je (bad) (bad) call mov sti xor or jo lret sbb popf or (bad) (bad) (bad) (bad) jns xchg sbb aam jl or inc add or loopne pop or ja push adc aad lods jecxz push cmc xchg mov int jbe movsb (bad) pop imul sti (bad) cmc cmc (bad) incl stos inc test add das cmp lea and xchg rorl enter cmc (bad) (bad) ljmp mov ds cs fbld popf jmp and stos int (bad) add in arpl cmp (bad) jg xor dec sub push loopne push xchg inc lcall inc loopne lds fcomip mov call add sbb (bad) (bad) call rcr pop fmull mov push jb (bad) and imul xlat sub loopne pop jle (bad) (bad) pushl push adc mov (bad) repz pop dec (bad) mov cs and decl lock pop loop mov test dec xchg rolb sysenter push es sarb lods call mov or or test call push mov lret movb daa dec ljmp call pop mov cmpsl inc das and pop sahf bound xor add les mov jl inc cmp aaa enter jmp sahf dec or fstps xor add add cld jno xchg stos pushl add push loop lock fsub loopne push add hlt lahf lcall (bad) (bad) stc leave adcb (bad) sbb jle pop sub aam dec lods fwait pushf pop xor sub int3 decl adc xor xor mov scas mov (bad) mov ficom mov inc sub daa and jno rcrb std iret sbb jae lret loope add decl outsb jne sub rcl call mov jp ss jl (bad) frstor push push nop aas lahf in or or addl cmpsb fmul jns xor mov inc pop dec arpl (bad) (bad) (bad) call pop or subb cmp fbld pop sub rep ljmp icebp or insl lret xlat data16 ret and push cmp ret mov jmp xor push andl faddl xlat stos mov (bad) ljmp jecxz xchg nop inc xchg jp (bad) shlb repz pop lock ljmp jne xchg cmp or mov push add sar adc lret mov pop repnz mov (bad) (bad) (bad) jmp sbb (bad) addr16 ljmp cltd cltd popa mov int3 dec (bad) lahf and (bad) (bad) incl sub (bad) lods cmp dec in dec xchg dec pusha (bad) jle mov add dec and (bad) jmp stos sahf rorb scas out xlat gs add icebp or mov (bad) fstps loopne pop lock dec es stos mov pop cmp xchg push and popf xor movsb popa std (bad) (bad) dec mov sarl inc dec inc xor mov fcompl psrlq in (bad) cmp mov vpcmpeqw rcrb lds sub xor xchg xchg push adc ljmp lods inc cs push pop out mov (bad) sti adc and pop xor (bad) fbld jae gs andb or mov push (bad) (bad) incl jno xchg mov sub in inc jne push mov (bad) cmp mov mov pop mov add and scas in push jp pop pop ds mov (bad) (bad) (bad) jl mov loop out xor jecxz test lahf sbb sbb cli (bad) ljmp fdivrs ss test jl ficoml (bad) (bad) (bad) lcall xor fistl call pop sbb adcl xchg or (bad) (bad) (bad) call imul dec jns loopne add sbb out lcall pop lock cmpsb imul daa jle fmull xchg dec int3 jg mov (bad) (bad) (bad) jmp outsb mov pop rclb xor dec xchg (bad) ror pop stos ja clc jl cmp data16 (bad) (bad) decl stos icebp mov hlt mov ljmp jne lret sub sar (bad) (bad) (bad) ljmp adc xchg ret ss pop and cmpsl (bad) jno cmp fcompl incl sub jbe lahf cwtl test inc clc ljmp mov call inc data16 fucomip sbb (bad) dec mul mov ficompl and (bad) (bad) incl test stc repz sti mov xchg ds (bad) fisubl jp lcall stos ds xor pop loope pop out cmpsb dec sub ds ret ljmp xchg cmp mov (bad) repnz lahf ds jmp (bad) (bad) (bad) (bad) jmp inc repnz fisttpl lahf addr16 mov dec les (bad) (bad) pushl pop std add lcall arpl pop pop push and (bad) (bad) (bad) (bad) lcall test fs rorb jp mov dec int3 shlb mov pop (bad) (bad) (bad) (bad) call and pusha sbb pop jnp lea mov push push outsb dec out jbe ja inc mov jmp mov outsb lods mov ljmp decl or xchg mov xor cmp push sbb into jg movsb pushfw (bad) (bad) (bad) (bad) mov inc mov daa pusha aas hlt push adcl and adc loop out xlat mov (bad) fnstcw (bad) add mov decl jg mov add notl add stos mov std and pop dec xchg lea pushf and (bad) fmulp (bad) (bad) (bad) ljmp adc push and js pop in in dec inc fwait enter fstl loop add icebp std pushl std call out sub inc or addr16 test es mov pushf inc xchg mov fsubrs and mov mov popf dec (bad) aad in (bad) aas std mov inc inc sub pop push pop test jb (bad) ja sub scas out stc (bad) (bad) (bad) ljmp leave jb cli dec or ror cmp jno popf mov or es mov (bad) (bad) call xor cmp es or cmp and lea shrl fdivr scas dec (bad) and incl cld ljmp (bad) mov fildl cmpsb bound or adc int xchg and inc push xchg jmp (bad) cli outsl adc or inc or jg add leave arpl (bad) call mov out sbb cld aaa inc xchg and (bad) (bad) (bad) jl test aas sbb jae jbe sarb jecxz dec inc (bad) xlat out inc sbb (bad) (bad) (bad) (bad) jmp (bad) rcl sbb sub dec lahf sub mov negb sub ja (bad) decl xor cmpsb dec xor scas repz push ficompl outsb jns xchg add loope decl (bad) pop mov xor or stc hlt ljmp lcall aaa mov outsb mov lcall jmp jge xchg in xor (bad) (bad) (bad) lcall lret jl,pn mov addr16 sub into ror sub (bad) push outsl xchg (bad) (bad) (bad) decl dec inc sahf lahf cmp je (bad) inc pmovmskb adc or xchg or scas and (bad) out clc inc pop pop or xchg inc inc shll jns int pop jl and xchg jb (bad) call std sysenter pop sbb cli mov movsb add rorl add dec loop (bad) lret mov (bad) jmp pop or pop iret add movsl dec sub clc das mov jnp (bad) (bad) incl cmp aas push in out mov int3 mov fild mov (bad) (bad) ljmp push cli es pop outsb dec lea lods mov insb popa in dec mov fs ljmp daa (bad) mov jg lods sbb sti mov adc xchg mov (bad) (bad) lcall ljmp outsl (bad) popf sub push ret inc jns jo dec sbb mov aas inc addr16 (bad) (bad) (bad) mov lcall pop call mov inc dec je xor ljmp insb cmp adc and (bad) incl les xor aad sbb xor nop pop pop sub cmp incl divl xchg push test into inc stc mov push or mov (bad) ljmp sub rorl mov decb adc (bad) (bad) (bad) pushl sub mov pop cmpsl cmpl mov mov imul movsl sub (bad) (bad) (bad) lcall jmp outsl pop cmpsb push xchg and mov push xor push pop push loop cmpsb shlb sub (bad) (bad) (bad) jle adc cmp mov pushf xchg jo mov (bad) xor pushf xchg xor imul add dec in cmpsb sbb mov (bad) jnp jl xor add icebp (bad) mov push jmp adcb (bad) fdivrs (bad) (bad) mov out sub test add vcmpord_spd lods clc lea lret inc push repz fsts jo mov clc lret imul leave push pop stos push xchg dec rcrb add (bad) (bad) pushl test dec adc jnp inc mov clc and pop add and and mov (bad) (bad) incl les xchg ja xchg xor mov add call lcall mov fisttpl repnz popa xchg add shl mov hlt jge cwtl (bad) (bad) ljmp xchg jecxz jae int xor pop pusha pop int pop mov push (bad) push mov mov call xchg push pop fwait xchg cmp pop add iret jecxz ja add mov ret dec add iret lods aad jp mov inc or aas sub push js loop mov mov (bad) fcomip jae sti pop mov repnz or andl (bad) (bad) in ror add imul out out frstor test mov repnz insl mov sbb into or xchg pusha mov imul cmp jle incl and test clc push popf daa jmp hlt js les xchg (bad) ljmp cmp xchg scas sbb xchg mov and jmp xchg adc push mov lret mov (bad) (bad) ljmp ret cmp das xor xor loop sbb mov (bad) dec pop add incl imul add jg ds out pop (bad) (bad) lcall leave nop movsl sbb int mov jecxz,pt cld push lds nop popa push dec (bad) pushl inc add push sti ret loop jne and jg incl (bad) dec fwait xchg std and sbb sbb into lret (bad) dec and fimull mov jo pop xchg test or xor push ljmp mov outsl mov cmp or lret jg add fisubl fmuls in (bad) (bad) (bad) lcall mov popf pop scas cmc (bad) out cmc pusha fnstenv mov dec jecxz (bad) (bad) (bad) (bad) (bad) cs out es sub (bad) loop adcl add pop inc (bad) (bad) (bad) (bad) mov fisttpll sbb negb (bad) (bad) jge popa adc pushf in jo (bad) (bad) (bad) (bad) mov xchg sbb xor mov or (bad) dec mov sub adc divb xor and mov (bad) fildll into inc xchg test mov jge sub push loope arpl cltd inc stos xor fild call cmp int3 and push xchg insl jge jmp (bad) and daa test inc ljmp (bad) push jb push push fs push mov xor frstor das cld daa pop cmp xchg jl fstpl or jmp inc mov test call stos (bad) xor adc cmp push rcrl inc fcompl (bad) mov (bad) pushl aas fcoml adc xor jecxz (bad) xchg mov jnp push adc jns mov (bad) or in lret (bad) (bad) (bad) (bad) aas adc pop out and icebp mov sub adc (bad) (bad) (bad) pushl and daa (bad) repz xchg cmp mov leave mov test xor (bad) (bad) lcall xchg mov out mov fisttpl decl in sub lds lret hlt shr sub ljmp add clc or cwtl pop fisubr sbb imul outsl (bad) (bad) incl mov lcall push stos jbe sub pop or rcrb (bad) jmp cli movsb div inc fdivl fimull repz pop add das push ss sub incl xchg popa xor mov inc ja nop stos sub push and jg ljmp jg lods pop cmc test add flds cltd lods out cmpsl xor (bad) (bad) call mov lds ja mov adc add xlat out das decb add lcall mov icebp mov push test inc cs int3 cmc loopne (bad) fiadd shlb (bad) (bad) incl mov inc cltd fst dec rcrl lret jbe add xor test dec or jo repz mov xor mov orl (bad) (bad) (bad) call jg movsl or sbb inc mov push fucom push xor int3 lods push pop (bad) (bad) pushl lods std add jae pushf mov fisttpll mov in push lock (bad) dec aam xchg aaa arpl xchg in jp sar and lock cmpsb mov cmp sub lods test iret inc fincstp (bad) (bad) jmp cli mov mov mov cld lock ljmp dec mov mov xadd je push stc mov push enter dec pop lea ljmp sub outsl sub (bad) (bad) dec xchg mov sub mov adc cli arpl in mov dec xchg or (bad) (bad) (bad) lcall adc test sub jg mov jne pop clc arpl (bad) fcomip jmp push aas or add sarl pop out int3 adc pmulhuw (bad) (bad) call jne inc xor popa inc lock jno les in pushf out xchg fxch pop push (bad) int3 (bad) (bad) mov xor fsubp fistpll ljmp sbb lcall jmp cmpl cmp out xchg adc push je sub mov jl add (bad) (bad) (bad) incl mov dec daa mov insb dec clc inc in or mov lcall inc dec xchg add (bad) decl mov (bad) lock (bad) cmp rcl movsb (bad) (bad) (bad) jg mov imul pusha jnp inc and es fistpl adc or test je mov jge ret dec add lds jp out mov out jp popf push (bad) (bad) (bad) ljmp test pop xchg (bad) out or lret clc hlt es les fsubs icebp (bad) (bad) (bad) jmp mov xlat xchg stc std (bad) imul (bad) bound imul and negb movsb and out xor mov inc addr16 loop mov cli aaa gs outsb (bad) jg (bad) (bad) ljmp jno xchg dec sbb mov mov clc dec push jno aad adc (bad) (bad) mov je or stos mov mov cld les push or popf scas shrb xor xor nop addr16 mov pop popf imul into cmc sahf jl stc cmpsl (bad) (bad) (bad) lcall es inc das sub addr16 imul pop loopne xchg popa repnz jmp or (bad) (bad) (bad) (bad) fidivr fs pushf add add adc xor out inc mov lods (bad) (bad) (bad) incl and add cmc xchg inc daa movsl clc pop jbe pushf stos and fucomp jnp ret call decl sub scas lret into xor cmp sub and popf mov (bad) jmp out dec xor mov sti lahf lahf mov ja rcl ret sub (bad) (bad) (bad) (bad) cmp andl subl lods or xchg andl (bad) (bad) lcall test push je inc into adc addr16 xchg cltd dec inc (bad) mov add gs inc cmp (bad) (bad) pushl (bad) call push inc test mov xor cwtl nop ret inc sbb (bad) (bad) ljmp ret (bad) roll mov jbe jmp xor mov rcll imul (bad) pushl sub mov pop jmp into insb in into mov leave cld sbb cmp cmp (bad) cmp js scas int3 jne mov lcall jmp push cmc pusha inc bound out mov enter add mov decl jb mov dec push into jg mov xchg lret push fist pop ss cmpsb xor clc int sbb jbe data16 mov xchg sbb or add incl scas inc mov jmp mov adc es sub pop movsl and pushl clc jns jmp enter inc pop addr16 cwtl hlt (bad) (bad) decl in xor call sub push ret xor ljmp and stc jne ret push lock aam add loop mov and popa cmpsb jg in add push outsb loope xor fdivr (bad) (bad) call (bad) enter icebp cmp daa (bad) xor xchg mov inc push out negb fs sub pushl push rcrl xor pcmpgtb sti dec jl and mov pop sub mov lret cmp add div and setnp adc loopne dec (bad) (bad) (bad) jg divl push pop pop (bad) jnp mov or and or loopne and (bad) (bad) (bad) (bad) inc cmpsl fistp cli cmp shrl pop mov or les (bad) (bad) (bad) ljmp push (bad) pop xchg ja sbb adc and loopne jmp xchg and inc xor cmc (bad) pushl jae in repz xchg sbbb pop in push mov dec loopne push (bad) pushl pop test and jns jg les (bad) (bad) mov jbe bound inc pop fdivs sub hlt mov fistpll cld (bad) (bad) mov out stos fdivr int3 daa aas outsl mov cmpsl push in ljmp (bad) inc xchg add ficom into or cwtl in xor not jl stos jg (bad) (bad) jmp mov sub inc in addr16 enter fidiv call jo (bad) (bad) incl pop dec dec gs jge jbe imull (bad) or notl in bound xor lods aam ja or (bad) incl orl jne leave lret loop mov mov cs ljmp jmp daa jmp cmc fdivr sarl aam push in push lds cmp movsb lcall hlt or push arpl push xchg clc mov (bad) (bad) jnp lret inc test (bad) imulb inc fidiv pop fs pop and daa pushf (bad) cs loope incl out push cli out rcrb fucom inc jo inc jmp aas sbb cli (bad) sub lds and push mov (bad) (bad) (bad) mov mov out hlt cmp stos inc jg sub pop and pop push jp adc (bad) call dec jmp push xor pushf xor cli sbb dec sbb inc (bad) orl fbld dec push mov (bad) lea hlt pop dec mov outsl jg scas mov xchg lock xchg negl ds stc dec (bad) (bad) (bad) lcall pop notl jle,pt jecxz (bad) fdivl jne fadds and push sub out mov (bad) (bad) lcall imul int aad fadds popf mov ja sbb cmpsl aam ljmp test or pop sbb jge pop gs jb xchg cmpsl stos inc inc lcall jmp push adcb or data16 outsb mov push pop adc frstor cmc in fmul jl adc adc pop mov jg pop sahf push xchg stos fidivr cmc dec fninit push pop bound cli xor es icebp cmp (bad) incl jecxz fdivl fcmovbe xchg or pop dec (bad) and decl mov mov push mov out lret dec adc cmp dec cmp (bad) (bad) (bad) (bad) aas fildll aam in les dec (bad) fimull push outsl in aad lcall (bad) (bad) decl mov push adc jmp std pop pop movb ljmp jg mov lods popf push (bad) sbb mov jl mov inc adc incl cld (bad) jns jo out pop aaa mov addr16 stos andl (bad) (bad) (bad) (bad) cmp (bad) lock mov outsb icebp loop and test sarl fisubrl mov in pop call and add (bad) decl (bad) mov mov mov push mov fcomi inc loope push jecxz imulb sub xchg ret test mov insb clc jmp mov lock sbb cmpsb mov aas shlb (bad) leave pop pop (bad) (bad) (bad) (bad) mov pusha xchg or js test iret add jbe es adc test xchg sbb and test leave xchg cli mov cmpl (bad) mov jl pop scas imul out (bad) dec push jecxz or (bad) (bad) dec mov sub stos scas cmp int3 aas repnz pop inc sbb add lahf dec lock (bad) (bad) (bad) cmp or inc and outsb cwtl aaa mov xor clc ret lock (bad) outsb sbb cmp decl (bad) incl stos fs stos push add lahf sarb mov (bad) mov ljmp (bad) call mov mov int loope mov jp out jbe mov movsb cmp cld push es and faddp ss out das cmpl mov pop fisttpll movsb mov mov mov or mov in adc lcall push loop sarl inc fwait int3 mov (bad) (bad) (bad) (bad) (bad) fldt mov (bad) mov or adc stos sub lods je jp fstl jno pop std (bad) (bad) inc mov sbb (bad) mov sub int3 aaa xchg rcl push imul and (bad) pushl movsb ror dec fidiv and stos and movsl pop sub (bad) push and inc push push imul nop inc movsb xchg (bad) mov gs incl jmp in and or mov or test test lcall ljmp rcl lods mov mov push mov lock sbb (bad) (bad) (bad) jmp dec mov pop sbb (bad) mov and mov jl pop pop fwait or incl test mov scas or ss push xlat xchg jbe shr (bad) (bad) incl xor adc dec cmp fisttp in (bad) (bad) jg xchg jno push movntq pop ret (bad) jnp sahf push dec dec repnz jno adc (bad) mov cmp aaa arpl xchg push test cltd pop or flds pushf (bad) ljmp negb add sub or xlat les imul inc pop inc or fcmovne outsl nop test cmpsl inc daa sti add sub lcall inc adc mov sbb iret fwait jg sahf xchg mov mov pop push (bad) mov and xor adc cli bound or adc cmp xchg movsb jo,pn (bad) jg inc inc xor mov test mov cmc jg int (bad) (bad) call dec lods call sbb scas push pop aad divb mov repnz cli pop dec std loopne std sub pushf mov (bad) xchg adc or mov outsl pop adc add ljmp cs xor out push cmp inc scas test dec (bad) jg ss push lods insb int3 jg (bad) mov mov and mov push pop dec push out pusha (bad) (bad) lcall stos mov push cmp arpl jle fabs adc mov (bad) lcall xchg inc pop scas (bad) insb sub sub cwtl mov jmp pop hlt pop std mov mov push lret les stc test mov test fdivrp (bad) (bad) jne shrl xor (bad) xor xlat (bad) mov mov in xchg (bad) (bad) (bad) (bad) cmp loope push mov popf jne movsb ljmp idivl mov iret mov lret call ljmp jno add mov pop mov mov push jl and mov decl mov insl jns test mov test loope sub jbe add (bad) out cmpsb mov and sbb adc dec mov (bad) (bad) (bad) jmp movsb push into add test push push adc or frstor mov jmp and outsb mov (bad) aaa xchg dec jae cmp popf or clc stc fwait jno add (bad) call insb andl insl ficompl loopne decl je pop (bad) dec sbb xor cmpb and sub outsl or (bad) call push mov jbe sahf lcall inc (bad) out pop mov test test lahf jl mov in adc (bad) (bad) (bad) dec cmp loopne lret stos and imul push (bad) mov cmc test push sbb out cmc cmpsl lock mov stos (bad) or mov fisub sbb shlb leave aaa loopne (bad) (bad) (bad) jns dec sbb mov es sti ret inc sti and xchg outsb mov and pop fwait jge (bad) (bad) mov mov lret pop xchg pushf test mov push push add call and xor stc lods mov adc add (bad) (bad) (bad) lcall dec hlt dec adc xchg and pop jae insb sti mov ret lea pop or (bad) (bad) decl mov mov ljmp mov jmp push xchg cmp (bad) jg push ret shlb xor xor pop adc jecxz idiv test pushl enter aam mov push pop mov leave mov in movsl lret aam or jecxz (bad) (bad) (bad) (bad) call sti sub (bad) repz orb pop faddl cmpsb push sub jns (bad) (bad) call scas movsb add pop daa dec mov int int3 sub mov mov (bad) (bad) inc mov add jmp lock rolb mov push cmp sub (bad) aad xchg mov inc mov cmpsb scas mov out test mov mov roll fimull imul sub fwait lahf lods and jne dec xchg popf sbb push xor xchg adc dec cld pop (bad) (bad) (bad) pushl lea outsl loope (bad) testl test es addr16 std and mov dec adc sub jae mov dec (bad) (bad) call idivb add jp inc jg in or mov hlt inc (bad) (bad) (bad) pushl cmp dec mov test dec xchg xor das js sarb (bad) lcall les das lods test jne ljmp stos mov hlt ret daa nop mov or sub and cwtl test (bad) (bad) ljmp je pop enter mov push sti or sub aas and dec cld jle xchg pusha fadd (bad) (bad) (bad) ljmp or mov jge push call cli push pop stos js pusha mov (bad) lcall mov jb mov inc sti adc (bad) jne das outsb lahf das inc push bnd pop decl cmp sub cwtl insb daa je lds (bad) pushl aaa and sub mov popf mov ja into mov push jmp out decb or (bad) imul scas clc leave (bad) push sub aaa lcall stc jb lods pop ljmp or (bad) and mov in sub xchg and dec (bad) iret sub cmp lock adc (bad) out cmp cmp nop push mov jmp mov icebp repz outsl push rol lcall cmpsl mov pop mov out (bad) mov push movsl sbb cld pusha jle pop repz mov lods arpl add add add fcoms scas (bad) (bad) mov insl dec lock cmp mov rorl stos int lods test incl arpl movsl push dec lcall push jo adc subl (bad) mov lret std xchg scas mov loopne dec push fadd pop mov cmp pop or mov sbb pusha xchg pop test insb xchg mov sbb insb mov leave mov (bad) (bad) (bad) ljmp jl out loop adc fbstp jb xchg inc movsb xor and xor sti mov aad cmpsl (bad) sub cmp cmp fistp call std (bad) ljmp sarl xchg fsubs push pop xor outsb (bad) lcall clc pop xchg insl cld jmp lahf dec dec mov lock xlat pop andb (bad) (bad) lcall pop lret (bad) std adc push adc push add sbb and cmp (bad) lcall cmp (bad) cltd cmpl nop das dec xchg (bad) ljmp in movsl repz push adc cwtl inc pusha (bad) repz and jmp test (bad) (bad) lcall push push les and sub das aas add xchg (bad) (bad) (bad) (bad) cmpsb jb cmp jne inc imul in pop (bad) pop sub in insl cmpsl dec (bad) (bad) fnsave adc ret decb lcall sbb (bad) (bad) (bad) decl lret dec cmp push cmp lods mov mov pop scas jge dec sub call ljmp pop push pop (bad) out xor jb rcrl test (bad) (bad) jne (bad) (bad) (bad) out adc stc sbb jb lods sahf cmc ficompl xchg or orl icebp arpl fbld push in or iret stos pop ss adc outsb nop call or repnz fdivr enter lret stos jmp (bad) mov in (bad) (bad) mov add mov add lea pushf adc jmp mov iret sub (bad) pop mov add data16 (bad) (bad) (bad) cmp ja,pn add mov cmpsl xchg or jecxz xchg out xchg jge jg jecxz (bad) icebp call loop inc mov pushf push add (bad) (bad) ljmp insl test mov and popa and dec add pop ljmp idiv sub movsl mov stc mov mov sbb cmp cld (bad) ljmp jle call jne add or into cmp pop ret aaa std pushl loopne jae jecxz lret mov test jg inc jp or scas cs popa push jl lock push jbe and bound (bad) (bad) mov pushf cli cltd mov rolb mov (bad) jnp incl ds (bad) (bad) pushl ret adcl addr16 or daa dec and dec cwtl dec fbld mov and lods or popf sub adc ljmp aas jns clc out push push or jg (bad) mov xor mov pushf inc push int3 adc (bad) (bad) (bad) call sbb push in aaa mov xor mov notb subl (bad) (bad) decl inc andl data16 lret les and scas (bad) call (bad) jp ds xor xchg stos cwtl aas and sbb decl nop mov xchg mov add scas cli inc mov push sub push in cmp cmc (bad) (bad) jg jp ljmp fbstp push sar sbb dec lock sbb (bad) lcall inc mov add pop or fisttp divb adc (bad) (bad) (bad) dec or cltd es roll pusha lahf pop pop cwtl loope mov mov xchg dec inc aas sub negb pop ljmp mov pop pusha mov xor (bad) (bad) (bad) call cmp xor insl mov pop lods es pushf imul fistpll (bad) (bad) call enter dec mov inc push xchg insb cmp iret imul faddl sbbl (bad) js inc clc push xchg sub sub int3 dec (bad) data16 icebp rorl shrl inc repz fisubrl (bad) (bad) (bad) call jge push out mov sub pop into inc mov int or ret add inc scas clc (bad) jmp sub push not cmp push sbb inc ja orb lret (bad) incl jp mov test jmp mov pop (bad) scas or sub (bad) (bad) (bad) mov jle xor add ret jns cmpl pusha (bad) (bad) (bad) decl and into loope test dec clc mov xor in call aas ss stos sbb ljmp (bad) jo rcll jl inc insb js xchg push mov mov (bad) mov test jecxz cltd cmp imul jl sbb cmpsl mov (bad) sbb push cmpsb inc sub movsb fdivr add push hlt mov ds mov cwtl fisubl cmc mov (bad) (bad) cld sbb jno adc fisttpl ljmp jne xchg jecxz cmp sar (bad) (bad) fldenv mov fmull mov xchg addr16 movsb scas (bad) (bad) (bad) jg aas bound mov (bad) push cmp push pop push in not or enter sbb (bad) (bad) (bad) incl inc mov jae icebp out mov push (bad) lret sti out sbb iret ds jns pop sbb ljmp xchg push cmp stos hlt jbe and add fs mov ljmp outsb shl lahf je mov sbb stc ljmp push (bad) (bad) (bad) incl mov xchg popa ret cmc mov and push clc adc loop adc pop mov dec lret ds in pop and pushf cwtl dec sbb push ja cmp movsl sbb and negl add mov mov stos sbb cmp pop fwait adc out idiv (bad) fistpl mov inc ss loopne dec push add sbb mull nop sub inc sub scas inc xchg cmpsl lock sbb loopne xor (bad) (bad) (bad) decl popf int3 sbb xlat jo push sub stos scas or into das inc push push cld lcall enter fisubrl out cli and jl push add xchg (bad) or xlat aas cmp jnp cmpsl sbb (bad) (bad) (bad) cmp mov fucom leave lcall mov adc cmpsl (bad) (bad) (bad) decl gs in popa and lcall add xor jmp lret fcompl mov dec mov cmp cwtl fnop (bad) lahf (bad) jg add rol ss lods and lcall lcall aad sarl mov adc or or inc pushf mov (bad) (bad) (bad) dec dec sti or fs and and mov or ret (bad) ljmp orl leave mov cli pop add out movsl (bad) xlat pop pop mov (bad) decl mov sub sarb aad dec cmp mov lret sbb mov (bad) mov out add imul arpl ja cmp mov js mov into test shrb pop xchg dec ret jne jle jae das addr16 (bad) (bad) lcall gs lret movsl loope cli and adc stos xor and (bad) scas (bad) (bad) (bad) call dec aaa les mov mov jmp sub sbb mov icebp insb jne dec mov sar xchg mov sub mov mov (bad) (bad) jg or test ss imul or lahf or bound movsb stc or sbb das enter cwtl (bad) fstpt daa nop mov sbb adc mov or arpl mov sub sub loopne mov or xor decb leave dec (bad) (bad) (bad) ljmp inc xor icebp inc sub (bad) add inc int3 push div cmpsl add jg (bad) call test push cmp and xor mov cmpsl fst int pop push (bad) (bad) (bad) inc pop in lcall aaa or xchg stos sub out xchg sub inc lret cs mov icebp incl cld dec aad sbb dec es pusha hlt or inc sbb (bad) ljmp in imul repnz cltd jge in inc (bad) (bad) (bad) call jge xchg sti push push lods push mov and xor add fadd stc adc (bad) push xchg test pop adc iret movsb sub js push stos jbe cld jbe repz (bad) (bad) call inc pop inc pusha push jge add call std sub adc inc cmp (bad) jg add mov xlat lret out jo dec xor xor mov add rclb outsl mov inc xor add in cmpxchg (bad) decl (bad) jecxz xor xchg scas pop mov ret out push pop ss fldl in add in xchg push (bad) call cld cmp dec mov cld loopne mov pop lcall loop add shrb into push cld (bad) test dec sbb xchg (bad) stos mov (bad) ljmp test sub pusha adc inc jns mov insl test aas xor fnstsw mov adcl fadds xor adc push enter push cmp mov in cltd js pop pusha shl test jge pop xchg mov loop xchg clc (bad) (bad) lcall or pop mov sbb fidivl sbb and lds push pop sti movsl sbb xchg xor jge aam mov insl insb or mov (bad) (bad) (bad) pushl pusha lcall jecxz cmp enter sahf test rclb push jns add lock (bad) (bad) ljmp mov std add popf sbb sahf faddl imul out push pusha add jns inc popa cmp cmp jo xor cmp mov subl stc mov dec push popa out dec mov adc ret inc sbb push loop imul inc cmp or jl aad mov inc ret and cmp aaa lods sbb dec jo add lret test iret (bad) cli pop xchg dec jae stos stos (bad) push subl jg xchg loop push insb fcmove sahf fstl int negl mov sub call fucomip pop jo fwait adc test cwtl add cld cmpsl ss cmpl inc (bad) das or (bad) (bad) jmp add mov mov (bad) push mov mov loop fld pop adc (bad) (bad) decl inc mov scas jp push sbb pop les or push sti inc fbld scas testl xchg push sbb test cld add iret flds hlt and push xchg enter push outsb (bad) (bad) (bad) jmp (bad) cmp ss jmp and flds lahf fmul cmp aas cmp pop inc pop xor dec outsl mov cwtl pop mov cltd dec xor add and adc icebp add push leave leave sbb (bad) lcall mov in fcomp ljmp and in xchg das push mov rcll (bad) (bad) mov ret push movsb stos push and xor and sbb sub (bad) (bad) jmp inc incb cmp imul sub dec jecxz dec jp test in out xchg std fcomip (bad) push addr16 cmp add lret out (bad) jne scas lret (bad) dec cmp pop (bad) (bad) (bad) lcall int sub in jmp xchg out or jge,pn daa inc dec push je inc enter (bad) sti lock mov mov out mov pop mov push sbb mov mov (bad) (bad) call cli repnz fdivrs imul rcrl pop mov nop das sti (bad) (bad) decl xchg ss sub and xchg cwtl push or adc (bad) (bad) jg and outsl xor sub hlt les pop push fiadd pop jp flds popf mov jge call dec mov scas jno (bad) ljmp clc fldenv xchg mov sti scas pop ss mov jmp (bad) (bad) call mov jae les or pop fst leave aam test pop rcl xchg sar (bad) ljmp jno mov jp je dec retw clc mov xchg les ljmp test lods push push loope addr16 lds cld iret mov mov pusha push (bad) or sahf (bad) (bad) in pushl inc insb lcall divb dec test jne or mov xor pushl lods bound adc packuswb inc adc jg mov mov mov cmc and pop (bad) (bad) cmp out mov gs or sub (bad) sub sub call fisttpl mov fsubl cld xor jno push fnstcw jl cmp push adc (bad) (bad) lcall inc inc add aaa inc pop pop mov cwtl jnp icebp cli dec incb (bad) call sbb shrl lahf mov cmp push jb fs mov jge (bad) (bad) decl clc xchg rcrl aaa sub cld pop sub cld sbb push stc dec add jg imul mov mov fisttp xchg jnp incb cmp mov insl ss (bad) xor cld (bad) (bad) ljmp jae pushf sbb jns xchg xchg dec mov mov fimul jp (bad) ljmp int3 cmp repnz enter sub rcrb pusha adc movsl clc aaa ljmp stos cmp rcrl (bad) (bad) lcall call call add push jno inc push pop jae leave adc int3 sahf aad cmpsb push pop loopne pushl pop ss xor adc idivb mov insl testb incl ja pop add int3 sub bound loopne cli xchg gs mov lock mov out subb lahf outsb push cmp dec mov repnz (bad) (bad) (bad) cmp inc (bad) in sub in or dec cmpsl mov push add pavgw lock inc inc std (bad) (bad) (bad) jns repz dec mov xchg rcrl imul in sahf push push (bad) (bad) pushl push cld inc (bad) pushf mov mov push in jno inc cmp xor cmpsl cmp cwtl sbb jo pushl dec fmuls scas das add xor (bad) (bad) pushl mov cmp cmc lret icebp aad cmc int cmpsb aas clc jae mov add (bad) (bad) fcomip adc inc add add leave mov (bad) ljmp pusha xchg pop nop jle (bad) imul cmp dec or (bad) (bad) (bad) ljmp pop sarb xchg cmovne push imul rcrl das jecxz (bad) (bad) call into das add les adc or (bad) addr16 sbb jp int insb add dec dec cmp mov mov dec or cwtl cmp adc inc ficompl and loope mov mov js clc dec or scas mov (bad) lock pop xchg test ljmp out sti popa cmp xor cli pop sbb ss fcoml pusha aad mov (bad) (bad) inc inc (bad) pop xchg jno push sub popf int xor lock adc (bad) (bad) (bad) pushl push xchg inc ret test je stos jb push iret (bad) icebp xlat xor repz lcall (bad) mov push cmpsb pop or pop mov mov js out jle mov fdivr aaa cmc mov stc lret inc dec push cmpsb and sub push lret dec (bad) (bad) (bad) (bad) jge std enter add xor sti pop ljmp out repz push cmc fcoml std mov sbb add mov inc cs fs push jp push xchg imul (bad) ss jne divl fisubl mov stos icebp lods cld div and add push mov cmpsl cmpsl jecxz fs mov add lahf lcall sub cld sbb imul (bad) (bad) cmp in (bad) ja push cltd push mov inc sbb movl (bad) (bad) decl mov dec push lock icebp xchg int aad daa mov rep loopne bound loopne ljmp cld adc pop jp push xchg aam mov fucom jmp ret and rcl das es iret gs icebp cwtl add ret das (bad) out xor sti sbb push (bad) dec inc aad gs (bad) (bad) jmp inc inc jecxz sub jl xor pusha pop mov rorb and cmpsb icebp (bad) (bad) inc lret dec int lods cmp loop xor cmp sahf and or ret (bad) lcall (bad) mov pushf add xchg ljmp or aas icebp sub cmpsb lahf push sar mov mov imul add sar (bad) (bad) (bad) jge add sbb xchg cmp add divb pop and cli das loopne inc sbb push enter jg pop cmc cld (bad) push inc mov test dec cwtl les dec cltd inc test (bad) pushl xchg (bad) outsl sarl pop mov sbb sub lds (bad) and outsl adc outsl xchg xor and adc bound test (bad) (bad) call fwait aam negb sub cltd xchg (bad) jne fisttpl and ja (bad) (bad) (bad) pushl push mov mov fistp iret xchg sbb jge inc insl add (bad) call (bad) mov (bad) insl xchg js add sti mov xor push add (bad) (bad) (bad) (bad) js inc loope and rcr (bad) fadds push rcrb ljmp mov (bad) (bad) ljmp mov mov rorl (bad) xor adcl mov testb or sub (bad) (bad) (bad) call cs adc sahf gs sub adc jns mov in jg (bad) jns jg pop xchg inc pop xor fs pop stc int int sbbl (bad) (bad) (bad) dec ljmp stos ss lret punpckhdq hlt in xor fidivl (bad) pushl pushf pusha or add (bad) mov dec daa xlat scas data16 mov (bad) (bad) (bad) (bad) jnp push test in stos mov ret mov (bad) inc mov mov push (bad) (bad) (bad) ljmp loopne xor (bad) sbb clc aam xchg sub call jb (bad) (bad) (bad) dec push loopne stos hlt jmp mov inc lea rolb and adc (bad) (bad) lcall pushf mov scas ds and addr16 adc jne fstl sub scas or mov repz lret lds sub rcll std xchg movsl jne mov mov and std mov jg fistl mov xorl sbb incl lods lret sbb jecxz mov sahf jnp and pop mov pop xchg xchg aaa push add push std lcall repz in insb mov xchg imulb jnp push dec aad (bad) xor pop cld das pop imulb (bad) xchg pop data16 (bad) (bad) fildll pop pusha mov addr16 cwtl adc jns int3 push or lds out js repnz (bad) (bad) (bad) (bad) cmp dec aas cmpsb fist or gs aas jo mov mov pop add (bad) (bad) (bad) (bad) clc adc cmpsl stc push jnp push push mov jl and sarb lret mov xor ja or ljmp rorl fimul fcoml arpl jg (bad) (bad) incl insb imul jg cmc mov nop sub test (bad) (bad) (bad) decl stc jmp add dec cmp int (bad) lods xor mov stos pop push mov cwtl pop aaa cmpsl pushf out cmp inc or inc jnp (bad) jmp mov (bad) xor mov popa das mov shl mov (bad) incl or iret lds pop std or inc push (bad) (bad) (bad) inc (bad) icebp cmp inc aam scas adc mov cmp ret sbb aam (bad) (bad) jmp js jecxz int3 pop mov lret push cwtl cld xchg gs add addr16 (bad) (bad) (bad) (bad) mov (bad) (bad) ja push jge lods cmp inc jmp (bad) arpl jle add subb (bad) jmp insb pop nop adc (bad) enter inc addr16 fild data16 mov (bad) (bad) (bad) jmp bound dec out mov lret pop mov (bad) xor cwtl sarl and fcomip dec sbb adc inc xchg into xchg adc iret bound ja and call shlb jne (bad) cs loop fstps lret aad psubb dec clc mov popa adc popa stos mov stos mov mov sti inc jp pop test push dec push pop cmp cld pushl scas test movsb lods sub lods sub bound xor (bad) (bad) lcall sbb test in mov mov jns pop sub (bad) iret cmp jo arpl jg (bad) (bad) sti inc xchg pop push add in xchg loope mov repnz dec stos icebp (bad) (bad) (bad) (bad) fcoml mulb add mov sbb inc imul inc jecxz gs mov mov pop mov addr16 cwtl cmp cmpsl lcall cmc adc or iret mov (bad) mov popf cld pusha loopne sub (bad) dec fisubrl push stos jl mov add pushl dec aaa ret into or add (bad) (bad) ljmp cmp add adc push or jecxz sub lret xorb insl out fwait xor (bad) (bad) (bad) (bad) jl lea les js dec mov movsb mov cmp inc xchg lods (bad) (bad) (bad) push jle lds pop adc inc mov ss inc (bad) mov and ss sti sahf andl lret je (bad) jmp cs int jbe adc pop push sub (bad) (bad) (bad) pushl sub jmp mov mov push std fbld mov jno mov fidivrl dec push inc addl dec ja xchg xchg cmp (bad) mov rcl cmp pop add adc test xchg inc xlat pop add gs les shrl (bad) inc inc in xor in xor push lret push std dec shrl xchg cli cmp pop (bad) (bad) (bad) mov jns sub mov jle movsb in pop loop testl cwtl pusha (bad) (bad) (bad) dec loop dec jbe add insl add ficompl aas pop mov fimull jg pop (bad) (bad) (bad) lcall pop jge loop pop mov mov xor or icebp int3 or or push pushf nop std leave pop (bad) (bad) (bad) jmp add cmp dec imul mov in and sbb mov xor jo mov (bad) (bad) (bad) out add fisub aas xchg sbb jge into repz dec jae movsl xor pop inc pcmpeqb (bad) decl mov arpl push pop sub mov loop dec (bad) (bad) (bad) (bad) jge xchg mov in push leave mov fmull movsb lret push lods cli jl push (bad) and push (bad) (bad) (bad) push push push leave (bad) push movsb pop pop dec cmp sahf push nop imul mov shll sar push mov js mov jmp mov xchg stc mov fdivr (bad) (bad) inc aas fucom push xlat xor popf mov es mov add fstl stos pop jecxz (bad) cmp (bad) fsubrp adc in aam out dec dec mov mov xchg (bad) (bad) (bad) (bad) fisttpll imul loopne inc xor cs jo mov dec add scas andl in mov ret imul fs or adc data16 (bad) (bad) lcall loop pushf int3 jo mov insb pop shrb lcall cld mov (bad) (bad) push cltd fisttpll xchg stc and (bad) aaa or (bad) push hlt in xchg push fwait sbb std xlat sbb pop mov push rep div fcoms popa jnp lock movsb test and jns ret mov aas arpl push adc les (bad) incl add and out ljmp popa insb and mov mov int3 das mov jns xor jp (bad) fs mov adc (bad) (bad) jmp jns popa in nop push repz stos lahf mov sbb and jne cmpsl inc cltd xchg (bad) (bad) (bad) incl jp stc rcl fwait jnp dec mov fdivs fcomp lret data16 inc sub decl sbb mov cmpsb in add jg ljmp jp xor mov and mov mov cmp jb loopne data16 (bad) daa dec (bad) (bad) mov xchg fnop lahf push imul (bad) inc xlat lea sub pop cld lcall fs syscall bound cmp or incl dec mov push subl (bad) dec js pop mov jmp out inc cmp lods lret mov dec add xchg adc dec loop cmp xor les (bad) (bad) (bad) (bad) stc leave jge cmp test inc or jl and pop cs (bad) sarb movsb bound or ljmp (bad) sbb mov mov roll outsl push lcall lock dec xor pop (bad) movsl and pop xor sbb (bad) (bad) (bad) ljmp add and pop data16 jnp sbb repnz fcompl in inc jne push imul sar cmc into (bad) (bad) (bad) push sbb (bad) or cmp adc rep mov xchg leave mov shlb (bad) (bad) decl test or ret inc xchg add or movsl data16 jecxz cmp movsb (bad) (bad) lcall jle fmulp adc ljmp xchg loop out push gs xor jno inc add or mov test (bad) decl rclb les test pop in addr16 clc imul (bad) (bad) pushl pop jns or mov out dec adc push pop fisttp lret jp (bad) iret mov pop movsl jmp push rcrb dec cli int3 scas (bad) (bad) pushl xor ffreep mov bound int sub (bad) pushl mov js fbstp mov mov sub sub jecxz xor (bad) (bad) out cli push cmpb outsb ss ja lret lods in lret repnz nop clc xchg stos dec mov scas (bad) (bad) (bad) orl sahf std int3 iret in mov add cli icebp (bad) mov pop stos ret add rcl pop int3 mov imul pop lock (bad) (bad) (bad) (bad) out das mov and repz out clc pop loopne lock push mov sbb enter xchg lock std (bad) (bad) decl or push inc and addr16 push scas sub inc call lods xlat movsb mov mov les pop fnstcw inc xchg xchg add adc repz test or mov pushf cmpsl cld dec push aaa notl (bad) xchg jg push xor push push push or addr16 ss (bad) (bad) in pop jecxz cli mov inc sub inc stc lds (bad) (bad) mov shrb mov dec or mov mov (bad) (bad) (bad) jmp pushf adc xor repnz push mov xor jo dec aam sarb (bad) (bad) (bad) cmp ja lret push mov js jmp fcmovu fs mov outsl (bad) (bad) dec mov lods inc xchg into inc arpl pop adc dec mov add mov call dec gs pcmpeqd repz cld repnz in mov push ljmp jno xor ljmp or popf push daa mov loopne mov outsb pop in faddl iret (bad) mov jno mov add sbb movsb repnz ret fdivl (bad) (bad) lcall ljmp pushf (bad) insl jmp sub and cmp and (bad) (bad) (bad) clc dec cmp movsb std out xor shl dec sahf movsb mov gs fsubs push jb testb imul push rcll mov push add ss (bad) mov adc cltd xor cld push in jge and xchg js sbb xor call or cmp adc dec (bad) jmp xchg push (bad) inc cld jbe leave and pusha ret mov mov mov sbb push dec (bad) mov imul or push jp andb xchg (bad) lcall hlt sti aas (bad) lds jno popa hlt fildll pop sub in inc xchg sub addr16 (bad) (bad) (bad) fbstp rcrl cwtl mov and jg lock adc jb hlt xchg xor ljmp rcrb int sbbl and xchg push sahf lahf jp adc mov (bad) ljmp cli pushf and and aaa out or jecxz fs jp (bad) fcomip jmp addl xor std mov fiadd mov mov pop test sbb pop out ja jno dec dec adc mov jle lcall cld lcall lea sahf (bad) icebp sub jb test (bad) ljmp pop sbb adc (bad) (bad) sbbl add (bad) mov sub push sub ljmp xchg adc or (bad) call loopne xor mov or repnz insb xor (bad) cmp jo xchg and push jle xchg outsl cmp sbbl in daa inc (bad) (bad) (bad) ljmp mov sub dec mov push int3 cmp pushl xor and mov cmpsl push jo (bad) pop ficomp jg gs (bad) call in mov jp cli nop int3 mov lods dec sbb xchg inc add cmp (bad) (bad) incl scas adc mov push push jp daa jbe lahf fnstenv paddq inc (bad) (bad) (bad) pushl or popf pop stos push enter inc fsubl pop fsubs shlb (bad) ljmp shlb mov fdivrl xor lcall sbb push cwtl das xchg mov pop sbb cld sti cmpsl push and (bad) (bad) lcall jne xchg jns sub jnp lods fdivp xor das inc xchg jle fistl sub mull adc (bad) (bad) call xchg jnp inc into mov divl insl test fidiv out mov (bad) ljmp cli dec inc pop pop adc mov add pop push sub iret adc (bad) lcall sub dec and mov mov mov ds mov (bad) (bad) mov int3 loope cmc ds pushf dec xor aam mov mov (bad) (bad) inc or mov mov xchg add lahf ja repnz mov (bad) (bad) call into jmp out and (bad) imulb scas std fistpll mov scas mov (bad) (bad) imul mov mov jbe shll mov outsl cli popa pop cmpsb int3 daa mov or mov (bad) incl test subl sti mov inc jge cmpb dec decl lock nop or sbb cltd fbstp sti mov (bad) (bad) (bad) cli inc lahf push xchg shlb ret mov mov jl ja cmpsl adc (bad) (bad) jmp addr16 push aas cmp sub push cmp (bad) mov das add mov addr16 (bad) (bad) (bad) call clc pop fimul cmp dec xor fcmove mov and sarl (bad) (bad) ljmp cmp in and sub xor mov iret les lea mov mov jo out dec ret pop xorb add loopne (bad) jl cmc fs popf repnz sub out (bad) ljmp pop sbb fldl lods xor popa scas fsin decl ja je add push repz adc into sub mov (bad) (bad) (bad) ffreep scas fdivrs je xchg mov dec mov aaa in mov add add lcall (bad) call arpl push mov repnz or mov cs stos jp out (bad) (bad) decl sub stos cmp cmpsl or dec push frstor or dec mov stc lds (bad) fsts push jl ret fwait test test and push sub (bad) fdivrs stos (bad) (bad) jmp xchg jae mov xchg andl in dec lea add scas popf fcomip (bad) incl sub (bad) or lods and insl xchg (bad) in pop mov int3 mov (bad) push arpl mov out push sahf jb pop dec outsl add sbb pop lock sub subb pop cld cmpl push mov inc inc repnz or decb mov push push inc xor mov inc xchg ret mov jmp repnz dec fsubrl inc loop in (bad) (bad) lcall mov and divb or adc fimul insl js adc xchg (bad) (bad) (bad) dec mov cmpsb mov mov imul repz aas pop notb jle pop call jmp adc aam enter push cmpsl negl mov pop (bad) (bad) (bad) dec sbb roll test pop mov jg inc lods pop add (bad) (bad) pushl in icebp out xor sti inc rolb ljmp mov lret jle (bad) (bad) (bad) pushl enter adc or push sti mov dec push pusha mov movsl pop aad sub incl or add mov (bad) (bad) (bad) (bad) mov adc or cwtl mov imul je cmp cmp sbbb (bad) (bad) decl in adc dec mov jnp sahf ret lret clc xchg xchg xchg xor push mov ret pushl jp cltd pop arpl (bad) inc lcall mov imul in add xor fcomip mov xchg lock mov xlat shlb fdivr sbb stos inc rcr lcall mov cmp std std inc xchg jbe mov cmp lret cwtl add std jo dec lcall mul sarb dec jle arpl (bad) jne (bad) (bad) (bad) in fnsave dec or dec fnstsw sbb outsl repnz and stos (bad) (bad) (bad) ljmp cltd repnz lea jp dec mov push in fptan pop movl les dec sbbl subps sub aaa cld (bad) call xchg push fsts and mov movsb clc in jnp mov (bad) (bad) js xchg sbb out xchg mov or sahf sahf and fdivrl daa jno movsb jge imul cli xlat xor and push xchg mov and mov hlt dec sbb or or add popf sti (bad) (bad) (bad) incl call cmp cmpb in aam cmpsb ss cmp fwait (bad) xor (bad) (bad) ljmp popf clc shrl adc adc inc pop pop jno or nop sbb mov scas cli (bad) (bad) call jmp daa inc fidivrl out push aas mov sub jl xchg nop add (bad) ljmp (bad) mov ja xchg lret add sub sub mov (bad) (bad) (bad) (bad) aas in xchg cld fistpl dec into cld in fwait inc stos add mov pusha lea push (bad) (bad) ljmp and inc ret mov cld lahf rcrl hlt pop xlat inc cmpsl clc sub clc rcr pop andb and repz jne xlat push xlat adc lret (bad) lcall push and inc (bad) fwait rorl movsl pop rorl (bad) (bad) jg sbb mov (bad) hlt mov test stc (bad) idivb mov xor fs (bad) (bad) call cwtl jno and jae clc sbb dec pop mov lahf sbb cmp and (bad) (bad) jmp mov cmp adc in pop dec xchg sub add lods dec decl xchg pop imul test aad fs popf aam aad (bad) out adc out sbb pop sub dec jle fwait add (bad) (bad) (bad) jmp cld mov xchg inc dec adc (bad) mov push push stc add or and (bad) (bad) ljmp and xchg cmpsl (bad) shrl pop pushf push cmp aaa (bad) (bad) (bad) dec mov arpl (bad) fisttp push xor xchg pop mov cmp (bad) decl fdivp mov jns leave or mov inc les mov (bad) pushl int3 and insb sbb and xor ret jbe mov jb int xor dec (bad) (bad) ficoml daa sub roll aaa cmp cmp jae fbstp mov clc push in xor push ds inc xchg push (bad) (bad) jp fwait daa mov lcall inc (bad) fdivrl stos jp xor (bad) (bad) (bad) ljmp lret mov fs (bad) mov pop (bad) xchg sub or push or pushf dec loop jmp push scas dec lock xchg lods push jbe or in lock pop mov xchg popf mov test push (bad) (bad) (bad) out cld dec int3 mov or push sbb jne mov sbbl pop add (bad) dec insb pop ja call js push movsb (bad) shr bound fcoms (bad) (bad) (bad) decl rol enter fsubrs add loop shll hlt in stos stos fs in (bad) mov jle (bad) pushl jmp sub bnd out push sub push (bad) (bad) decl int3 cmpl mov fcompl int pop mov xchg (bad) ret ja (bad) (bad) jg sbb test and aaa add inc std je hlt dec stos inc test (bad) fcomip push (bad) push lcall fisubl xor orl xor movsb fistl xchg cmpsb (bad) jnp jle rorl out sbb sar decl lahf adc mov idiv xor lods lds pop rclb ss or out bound sbb (bad) xor (bad) (bad) call aad lahf std pop cmpl dec pop cmp loope stc test and daa xor mov cmp sbb push push cwtl dec cld sub lods pop add (bad) sar outsb add pop aad or xor addr16 inc xchg jecxz pop jmp pop mov cmpsb (bad) (bad) (bad) aas jne roll movsb mov mov xchg mov mov (bad) (bad) (bad) jmp xchg pop push xor dec mov jne fsubrl addr16 mov pop jae jb (bad) (bad) decl fldl fldcw scas (bad) or mov insl sbb sti inc inc or (bad) incl and push sub je or popf incl fldt in cmp adc pop in push lret aas sti insl pop cmp (bad) (bad) (bad) (bad) jns adc cmp in jbe mov notl (bad) or push cld (bad) fsubr loopne adc stos sahf xor push test push xor fidivl mov adc in inc or out ds xor imul cld (bad) (bad) pushl push sahf fildl xchg xor sbb and call pushl adc int3 pop (bad) (bad) push int3 inc pop aam icebp ds pop pop pop mov (bad) jmp adcl jle inc push and mov adc dec fdivrp (bad) (bad) jmp adc dec adc cmc xchg mov sbb cmp stc shrl lret and (bad) (bad) (bad) jmp jle icebp adc sub mov enter adc jae (bad) nop (bad) lret inc (bad) (bad) ljmp ficoml or mov ds aas jmp inc and (bad) (bad) jmp inc je out stc or sub insb mov sbb (bad) mov cltd stos xchg stc arpl dec loope lods jmp jbe movsb mov incl popf pop push mov mov push ficomp mov fsubs (bad) lcall cmp or sbb ja movsl xor sbb popf loopne jl,pn cmpsb (bad) call dec xor aad add mov (bad) es add imul ljmp (bad) repz xlat inc ret push jge fnstcw lcall inc mov and mov scas mov or sbb sbb (bad) push mov dec clc repnz mov cld sub in addr16 (bad) inc inc adc into test inc mov mov daa sub cli cmp (bad) lcall jnp fisubr add mov lahf jecxz dec loope inc cmpsl imull push shrb test sbb lret (bad) (bad) (bad) call push xchg lret inc and dec push dec pop test inc dec jg lret sbb push (bad) (bad) (bad) (bad) pushl imul ss in loopne lods dec add stos stos sub xor mov inc aam sarb sahf (bad) (bad) mov int3 mov cmc jge inc cltd pusha inc mov (bad) xor sub stos (bad) cmp and cmpsb xor jmp cmpsl int adc stc arpl xchg jmp (bad) (bad) jmp out xor xchg jl add xlat xor or mov adc (bad) dec push (bad) (bad) jmp jge inc cmp jmp mov (bad) addr16 lret inc clc (bad) mov scas call movsb lret or jo lcall inc movsl and outsb (bad) (bad) jbe cmp push mov add nop lcall rcrb es (bad) jg mov rorb movsb test stos xchg mov lret fs (bad) sbb lret sahf cmpsl jne subl lcall (bad) movsb and mov mov jo cmpsb addr16 daa lcall mov (bad) decl sbb aam ret aam lcall fist dec (bad) (bad) (bad) (bad) ds lods sub or inc test not adc iret push (bad) dec dec ficoml (bad) stc dec adc inc repnz push lock pop ja xchg movsl rol dec mov sbb (bad) clc les mov adc sub push xchg jecxz cmp cwtl test push xor (bad) (bad) inc pusha bound jns mov shlb jno jmp xchg adc mov (bad) (bad) (bad) jmp popf xlat sub fnstsw (bad) xor jge cld mov cwtl out dec xchg inc arpl (bad) (bad) (bad) jmp test pop inc gs (bad) mov mov add test idiv int dec (bad) (bad) (bad) incl inc mov xchg in (bad) or sub rcrl xor insb xchg (bad) (bad) (bad) decl jmp xor push daa xchg dec faddl sub scas pop je not (bad) fcomip decl out addr16 adc mov sub xor and push fdivr xor test push (bad) (bad) (bad) lcall (bad) lea or cld pop xchg xor ja fstpl test int (bad) (bad) lcall mov dec adc insl xchg daa xor iret popf hlt pop mov xchg dec adc fisubr mov mov and xor (bad) (bad) ljmp test movsb push sbb xor out lret (bad) pushf pop lea push jne jg repz (bad) mov push push int xor and loope hlt sbb stos xlat add das cli mov pop adc push mov add jp cmp (bad) aam (bad) (bad) mov loope push sub test js xor mov pop es push popl sti inc xor cli mov mov jmp (bad) lcall jle jge gs dec cmp jnp ljmp rcr (bad) rolb je (bad) (bad) inc in in subl out sar and mov cmpl lret mov (bad) (bad) (bad) lcall mov in inc lret push inc add xchg (bad) rclb cltd inc cmp sub (bad) (bad) out ja xchg lock inc clc xchg pop and cmp outsb hlt andl add (bad) (bad) (bad) (bad) fsubs adc dec mov dec and mulb ret loope or cs (bad) (bad) incl or fidivrl notl cwtl mov cwtl dec movsb jb pop push sub mov lret (bad) (bad) lcall mov push out outsl push outsb jbe lds adc aaa pop sbb loopne (bad) dec or mov push lock jo das mov fmull adc (bad) (bad) call (bad) cld jno xor jae or in ds fldenv inc test popa out daa mov or (bad) (bad) (bad) cmp and lods sti (bad) mov repz xchg cmp cmpl inc (bad) (bad) call jne lahf mov (bad) (bad) jo cmp sbb outsb inc cmp sub (bad) (bad) (bad) cmp xchg rcrb lock aaa push mov jo add xor (bad) dec pop (bad) (bad) jg cmp xor cmp les mov loopne mov out sub (bad) (bad) (bad) mov and aam sbb push fdivp and inc sub in cld jns (bad) (bad) jmp lahf push xchg shrb inc xor (bad) cmc icebp aas mov fcom (bad) lret (bad) (bad) decl adcl mov cli loop out (bad) or imul push jno (bad) (bad) dec loop push repz lea add and jne loopne push dec ss mov ljmp das jecxz jo push mov dec out sti imul jne imul sub adc mov ds pop add add mov pusha xor mov ljmp sub mov sbb orl shlb leave (bad) (bad) (bad) incl test repz adc out xchg cltd sbb add sarl lahf sar jmp sub ljmp loop hlt mov imul (bad) (bad) mov leave jg aas sub adc lret lods (bad) mov call (bad) or cltd jbe fisub dec mov and push loop das pop mov (bad) xor push std (bad) lcall (bad) ljmp pop cmp and fsubs lret mov call mov xor cmp mov and arpl nop jge xor nop movsl jge (bad) (bad) (bad) lcall lods daa jp pop insb xlat push dec add or xchg mov pop mov add jp (bad) (bad) (bad) (bad) mov (bad) call sub mov mov mov fnstenv dec jo (bad) push (bad) (bad) (bad) decl je repnz dec cwtl inc nop in xchg sbb in sub repnz jbe jns bound xchg js leave inc std call cli add loopne fisttp aam (bad) (bad) (bad) mov (bad) lret xchg push outsl sub inc imull (bad) fild imul xchg bound mov jo out mov pop pop insl std xor imul call mov popf int jne push pop mov fcompl (bad) (bad) (bad) jmp daa cmp enter push cld xchg in je pusha outsl psubq incb ljmp xchg out pop fs jmp mov fs push lret aaa cli dec insb cmc and mov (bad) (bad) (bad) jmp out imul lret sub cmp repz sbb lret cmc xor pushl sub (bad) cld (bad) jae shrl and insl test pop dec sub ja testb inc push adc lcall loop popa mov movsl (bad) (bad) mov dec call dec ds repz nop repz xchg and dec sar (bad) movsl lret lret inc jmp hlt dec adc xorl or (bad) (bad) (bad) (bad) jge incb dec out jne lods loope mov aad jmpw cltd pop (bad) push mov mov decl mov pop add sbb mov (bad) mov insl add mov lea bound fist sub fildl fstpl jne pop lea inc mov (bad) or (bad) (bad) (bad) lcall jl ja in or scas imul inc push rcrb mov dec pop mov lea (bad) (bad) (bad) incl mov daa push scas sbb adc in cltd jmp insl out mov xlat fcompl cs incl xchg aam dec int xor dec ret pop into insb lcall (bad) ljmp push inc test call ret jbe dec test mov (bad) push mov ss mov jle push ljmp stos shlb std xlat pop iret (bad) lcall ljmp dec mov stos outsb mov (bad) xor into es test (bad) (bad) incl cmp (bad) repz inc cmpsl mov adc adc es sbb (bad) (bad) incl push movsl dec push les stos push insb lret sub mov repnz jge (bad) (bad) (bad) mov incl push sbb cltd test sub push (bad) mov daa (bad) (bad) (bad) dec test cmp (bad) mov cmpsl push movsl mov xchg outsl add jg (bad) push std fs roll push addr16 sti aaa sbb fdiv aam xchg std sub cmp loop popf xor in sbb mov lcall add (bad) (bad) aad enter mov das cli (bad) decl cmp fwait (bad) mov jle mov jmp sbb (bad) (bad) (bad) pushl ja jp loope mov add cmp adc in mov cmpsb cli mov (bad) mov inc fldenv adc adc ljmp push pop and jg decl inc adc loop xor rclb mov jne outsb add pushl jo hlt cwtl repnz and ja (bad) (bad) mov pop call inc jle test stos rorb jecxz mov lock mov incl (bad) mov xchg bound nop pop mov ror push sbb (bad) decl arpl mov call lret arpl or negl mov (bad) jmp sub sub cmp fstpl fbstp jbe ret mov pop cld add mov scas adc or sbb ficom (bad) call fnstsw ret int3 leave dec adc xor (bad) (bad) ljmp xor shll pusha mov xchg outsl (bad) (bad) push leave (bad) fldl ljmp (bad) (bad) call xor xchg (bad) jmp cmpsb ja dec sub fldenv int (bad) lar cmp and inc lcall push inc mul inc and aad push popa jge repnz sar (bad) decl mov and aas adc ja mov (bad) and sbb mov mov cmp loopne (bad) (bad) jmp add adc nop outsb imul popf dec orl fs sub jg mov ds ret adc sbb cld (bad) pushl sbbl mov inc xor pop sbb (bad) ljmp xchg in pop add cmpsb fisubrl mov js (bad) (bad) (bad) ljmp pop fild test dec hlt mov fsts mov int3 add mov jne mov (bad) mov sbb insl jnp cltd jg push mov lret ds add adc jmp call add lahf dec lcall lods mov push imul enter shl cmpsl in cs inc les mov inc add xchg rclb mov ds scas outsb pop push in mov fimull jp (bad) mov dec and lds pop popa sbb icebp mov mov pmullw repz (bad) (bad) incl adc loope or sbb cs fs inc mul (bad) (bad) cmp sbb inc or gs xorl jmp lcall add mov sbb ljmp (bad) (bad) pushl out push out ficoml lods insb into js cmp fwait xor cs cli pop loopne call or adc inc mov sbb out sbb test lock (bad) imulb dec cmpsl mov mov call out (bad) (bad) (bad) push sbb pop popf inc lret cmpsb jl xchg mov outsb mov push js inc (bad) or das (bad) fsts pop movsb and aas (bad) mov and push (bad) (bad) ljmp adc ficoml pop xor ja,pt dec push xor cmp nop mov (bad) mov xchg xor lods stos mov repz inc push test add in push bound or mov dec lret in push and clc sbb pop aad pop fiaddl sub sbb adc jo mov inc xchg out and scas cmp jl clc (bad) (bad) (bad) cmp add sub mov fdivrs fcomi mov push sub decl lock cmp test xchg and negb jbe ret (bad) lcall jns sbb (bad) dec jg fwait jle scas adc cmc fdecstp insb xchg push mov loope call jb mov aad (bad) inc adc jbe in pop sub push jo cld cld pop push adc (bad) icebp dec ja or clc xor psubb dec mov aas xchg or pop (bad) cmp mov xchg enter sbb jb push xor inc pushl (bad) jle sub rol push push mov jecxz jo or cmp mov call loop cmp (bad) pop test icebp dec aas inc clc adc mov das mov daa jo and pushf lret lea inc ds daa les dec lock ss mov rcr stos (bad) (bad) jb cmp push lcall fnstsw mov push jnp sub addr16 ja (bad) (bad) fldl xor fsubrl jecxz imul and push (bad) cmc mov lahf xorb or psubw cs push pushf je das sbb push ljmp xor jne mov or sbb push fimul pop or out nop cmpl idivl lcall add cli push div test inc adc cmp bound cmp fcomip dec les sbb jnp dec lock mov cmp (bad) pushl mov lahf jo (bad) inc xchg push ret shlb addl dec aam xor pop cltd (bad) (bad) (bad) push mov and mov enter fistpl bound ret (bad) mov inc repz incl mov inc xor lret insb sahf pop cld (bad) call xchg and mov stc xor jno sahf (bad) (bad) arpl mov (bad) (bad) (bad) ljmp es mov jl popa (bad) push xor stc jl lock pushf cli outsl clc decl xchg xor dec lret mov mov shrl outsl dec out jo arpl inc push iret fldl xor fnstenv fadd pop push sti fildl movsl add (bad) jmp fs imul test repz cmp mov (bad) (bad) out cli jmp pusha gs sbb jp in aam push rcl call leave (bad) push (bad) (bad) (bad) call pop gs pushf fdivrs or aam and add fldenv (bad) (bad) mov lods push xchg fidivrl xor cli shll xlat in cmp mov notl jp (bad) fdivr (bad) call cmp add sahf or push mov mov lods push gs mov (bad) jg push mov dec jg imulb push icebp popa jnp aad cli or sbb mov popf pop stc inc out das pop push in popf (bad) cmp mov xor jmp cmpsb shr cmp outsl test (bad) (bad) (bad) jmp jbe mov dec xchg test xor mov mov cmp out or aaa (bad) (bad) (bad) call mov xchg fsubs cmp add pop outsl push dec int jp pop adc xor (bad) dec or mov jb pop subl and (bad) ss imul or call incl loop test aad sub ret dec test mov or inc scas incl (bad) (bad) (bad) decl lock add xchg mov inc std sti dec jno push dec fs push jg dec jmp cmp (bad) jne insl mov xor rolb (bad) in lods cmc jno mov (bad) (bad) (bad) decl push mov mov fldcw cmp xchg push xchg ret mov (bad) pushl cmp movsl (bad) divl aam xchg jl inc incl xor lds ret addr16 or fs (bad) (bad) ljmp not jle or lods adc sub fildl jg sbb cmp sbb sbb (bad) (bad) (bad) lcall movl push nop mov sub xchg sub enter lds arpl mov shll ljmp (bad) (bad) call aam (bad) pusha push lods xor cmp push inc stc andl enter xchg dec out pushf (bad) (bad) (bad) lcall (bad) sti and and mov (bad) negl clc inc stos enter and stos (bad) (bad) (bad) pushl sbb mov sub sbb adc movaps (bad) jnp mov dec mov and mov jb fldl2e gs and (bad) mov pushl xor clc pop out sub or push cmp mov push repz sub mov inc call (bad) mov adc sub push mov dec stos mov rorl inc pop pop sub pop stos xchg in sbb movsl sbb lock (bad) (bad) lcall dec add jno gs and (bad) mov xchg lea lock pop mov push cli xor push icebp addr16 mov xchg (bad) (bad) (bad) pushl lods (bad) cmpsl jge cli xchg add push pop mov repnz adc (bad) mov (bad) pushl jnp adc jo loope inc cld sti test leave dec call and pop fxam jp dec dec xchg mov or ss rolb push sub (bad) (bad) (bad) ljmp cmc shl gs loope aas fdivrs aas pop xchg jne jbe cmp cmp mov jno mov or mov pop (bad) cltd mov cmp pop int3 icebp hlt (bad) (bad) (bad) inc inc test imul lahf and arpl (bad) lock cmp adc movb sbb inc sbb das xchg clc bound xor ljmp out (bad) incl inc in sub hlt cmp mov jb mov jo js (bad) bound sarb mov push dec and mov (bad) jmp mov and jae lods cmp in and pop xor add imul mov ljmp xchg pop mov push test test mov dec (bad) (bad) (bad) jmp nop out ja adc pusha imul mov add adc insb outsl mov (bad) (bad) (bad) pushl sti iret adc popa pop nop out mov lock push rcr lahf js je fwait dec cld (bad) (bad) call (bad) jmp pop mov jecxz push jle leave mov leave fs (bad) incl bound lock mov mov and jo,pn int3 (bad) mov add (bad) (bad) dec dec (bad) dec xchg outsl pop imull stc (bad) xchg adc mov push fcompl xchg jmp and fwait jmp js or decl popf imul xchg pop imul imul mov (bad) fildll mov loopne add and cwtl loopew (bad) jmp fbstp dec ljmp push out lods ljmp sub cmp jmp andl sub (bad) (bad) (bad) incl mov ucomiss xchg ja sbb adc (bad) in xchg pusha and cmp nop sar jo xchg mov lods add jge adc sar decl jno push test in (bad) inc cmpsl sub pop lcall mov pop pop push loope xchg mov fwait xchg mov jbe jp (bad) (bad) ljmp data16 pop cli pop pop je dec fs sbb mov mov mov idivl fdivrs add (bad) imul hlt pop adc pop dec cld ss (bad) (bad) jg (bad) lahf fidivr (bad) fldlg2 cmp jae mov in sub movsb test (bad) (bad) call dec or movb mov pop mov (bad) sub xlat cmpb call imul xor sub push mov or loopne pop clc (bad) call (bad) xor sbbb pop cmp add add push decl jb mov xor jae das movsl mov dec (bad) (bad) mov pop jno xchg mov outsl pop cmp pop mov repnz xor and xor (bad) (bad) call inc imul mov hlt jmp ljmp (bad) (bad) ljmp inc cmp repz push rorb addr16 xor movsb in xchg (bad) (bad) (bad) lcall popa sbb cmp into or pushf or xor push loopne ljmp ljmp xchg test daa pop incb jp shl pop push sub std (bad) lcall jnp xor jle (bad) shr push scas scas mov push std ljmp into sbb data16 xor (bad) (bad) call sbb xchg stos and add test (bad) decl js scas mov sbb push inc insb movsb jecxz jp lret mov jb push xlat sar (bad) lcall ja lret (bad) push xor adc inc or push dec aas cwtl xor (bad) (bad) mov jl aas cs mov cmp sub dec (bad) out loope adc hlt (bad) pushl push mov (bad) shrl les pop fcmovnu fisttpl cmp les mov arpl (bad) idiv add dec (bad) (bad) (bad) (bad) fildl pop movb inc cmc xchg mov imul adc scas inc lods fs push pusha int inc (bad) (bad) (bad) jmp lea stc stc pop lods mov jno mov ret outsl jno pop push (bad) fld mov es (bad) out sub mov neg jp xor insl mov (bad) (bad) (bad) (bad) ficomp jl cli test subl add jmp jns xor mov cmp (bad) call (bad) lcall add sarb or lds mov mov xchg rcl (bad) (bad) fbld int3 pop aaa stos push int fmuls jecxz (bad) (bad) (bad) mov mov push and repnz out mov or sti dec xor (bad) stos and call sbb sub daa aaa pop lock decl jae scas int out into ss insl dec sub sbb mulb xlat hlt xchg (bad) sub push fnsave cmpsb ljmp xchg mov dec jge mov push mov cmp les (bad) xchg cmp pop std das lea movsl push inc shl sub adc sti pop rcr in int jle push popa das push imulb inc push and cmp (bad) aad decl and aad fucomip pop cmpsb inc push adc jnp (bad) jmp sbb fs arpl stos dec inc inc sbb test loop (bad) (bad) incl pushf (bad) pushf fs push push mov popl test std fwait push arpl jg repnz cmpsb sbb movsb and (bad) int3 or add inc or ds adc mov jo popl jo test add jne (bad) mov (bad) (bad) (bad) jmp subb (bad) xlat mov ljmp popa scas lods mov xchg sub incl jg xchg scas test les movsb mov xor das mov or sbb daa incl xlat mov fldcw push in jnp jg leave push dec (bad) (bad) (bad) ljmp (bad) pop aas add insl fldl inc and jge lcall fwait mov cld mov call loopne mov js jbe setl aad lods xchg pushf pop push jp (bad) (bad) pushl jl fimul sbb imul jg (bad) xlat rcrb pop dec jo jmp sarl icebp aad les aam bswap test sbb mov jne mov add push cli pop cwtl cmp ljmp nop push insb gs outsb dec cwtl jnp,pn mov sbb (bad) aaa std decl adc xchg mov insl and push mov je (bad) (bad) (bad) jns and loopne stos cs and je pop cmp dec jl pop push pop stos add (bad) mov repnz in and in mov sbb dec js adc push int3 lahf das push lahf add pushl insl mov in xchg sub mov sbb dec sbb outsb (bad) (bad) (bad) mov loope bound pusha pop out enter ret outsb scas adc jbe adc inc add (bad) dec (bad) (bad) xchg xchg jl ret pop inc mov fisubrl or push int3 jecxz cld cld xchg mov fsubrs jo and mov lcall xchg (bad) (bad) incl jns cmp sub adc add out mov or cld jge sub movsb pop xchg and push (bad) (bad) (bad) (bad) ds vandnps cmp inc jge mov ljmp xchg or (bad) (bad) cmp and fidivl rcrl mov (bad) dec mov imul mov dec das aaa sbb and cwtl outsl and cmpsl decl jmp mov loope push int sahf xor lock mov test and clc (bad) (bad) mov scas xchg fnstsw jp rcll lods loope int scas loopne mov (bad) jp (bad) lods pop cmp movsl lds inc xchg push mov hlt lods insb stos loop add sbb mov hlt (bad) sbbb in mov (bad) (bad) decl ljmp xchg dec dec or xchg lods mov cmp psadbw stc or push sbbl jp int3 fwait cltd xchg lods insl test cwtl jno mov icebp test mov jae mov int sar (bad) (bad) decl xor sti adc mov mov pop push dec dec dec out loope sahf fcmovne (bad) (bad) incl inc inc and lret push sbb cs adc (bad) (bad) (bad) (bad) jp clc repz sbbl mov pop js push mov stc xor aam pop add (bad) out cli jmp push lahf xchg inc ret mov ss scas mov aam jle mov push mov ja sub add mov push push scas add stc rolb or (bad) jg cmpsl sub sbb roll add lds mov popa mov (bad) (bad) ds mov sub movsl cli push push sarb test cmp in mov (bad) lcall xchg lahf mov mov pop jg imul inc sti cmpsb or shll (bad) (bad) (bad) decl ja ds roll lds mov mov pop and (bad) (bad) mov cmpsl and xor jg ret mov sahf pop add addr16 out (bad) ljmp jle push cmp inc mov adc jg jb aad es or decl ss xlat fcomps in adc sub aad outsl pop mov mov (bad) decl mov jns arpl rclb call add or adc adc fdivs inc lea (bad) call cld mov hlt jp fwait clc adc aaa mov adc orl (bad) (bad) inc add imul loopne inc mov sbb xchg (bad) out jl sahf or (bad) lcall and pop imul dec dec jge enter iret jns sub (bad) (bad) (bad) ljmp dec (bad) out adc xchg stos push add int and push cmp incl or faddl pop pop je enter xchg lods sub xorb ljmp xor push movsb inc je inc test mov std dec stc mov push dec (bad) jbe (bad) pop (bad) (bad) (bad) incl inc aad add pop lods aam xchg insb arpl sbb js lret dec sbb jae cli (bad) (bad) decl clc rcll lret outsb adc fwait stos fstl pop push mov jecxz inc mov xor jmp jl scas cmp jg in adc dec (bad) (bad) (bad) jg movsb loope cltd ss and add fsubrp pushl push dec das lds cwtl cli enter (bad) (bad) js repz or sti rolb jno pop les aad call (bad) (bad) (bad) call stos in daa and movsb and jo sub xchg arpl add mov xor (bad) pushl outsl jle aam adc insb jle int push cmpsb insl out data16 cmp dec rcrb (bad) (bad) (bad) incl xor fistpl push jl mov xchg mov push scas mov mov pop (bad) (bad) (bad) ljmp stos cmp jne xor xor stos mov and (bad) (bad) lcall and or (bad) xor mov cmp inc mov leave int3 mov (bad) (bad) pushl ficom add jns mov je jmp into xlat xchg leave adc call push scas (bad) into add jle push aad negb pop sub or in xor (bad) (bad) (bad) push xor dec inc mov pop cmp pop push out push mov (bad) icebp dec jge aas (bad) (bad) (bad) push or test into inc pop dec pushf mov rorb dec push jp pop inc mov (bad) (bad) (bad) mov sub add cmp cmp mov push (bad) mov fnstenv (bad) jg (bad) mov jnp dec fisubr fadd loop sbb out (bad) mov add incl mov add jmp fidivr in push and pop jl (bad) (bad) incl xor dec push xor xor aam mov insl lahf xchg (bad) (bad) lcall jecxz dec mov je lock push out jnp outsb mov pop rcr jnp (bad) (bad) (bad) lcall push pop push loope pop xor sub cs xchg push add push inc mov clc call jns dec xor mov jp xchg jge adc sub lcall mov (bad) adc jecxz cmp ret cltd popa loopne call (bad) (bad) fdivr test lea and pusha sbb cmpsl lods mov lods and (bad) (bad) (bad) (bad) mov shrl sbb ljmp xchg (bad) aaa (bad) push movsl test outsl mov inc or pusha and pop shl jmp in das xor or dec fldl mov pop dec cli inc incl push decl cld sbb fisubl push je out mov fcompl (bad) in outsb lret mov sbb push std (bad) (bad) jge dec mov jmp leave mov cmp pop xchg push mov (bad) ljmp fwait mov sarb dec cmp push push lret adc es (bad) (bad) ljmp adc sub xchg mov pop mov mov xor mov call scas fwait mov std jno xchg iret push insl das mov mov mov icebp adc out cwtl les mov mov (bad) cmp (bad) icebp mov leave cli dec daa aam jo cmp mov lret hlt xor int3 leave push loop push xchg mov cmpsl push daa cwtl test cmp pop pushf jae (bad) (bad) (bad) jp dec mov mov jmp sub mov pushf and lds add decl out push xchg mov jmp xchg loope (bad) mov jg fucom lods movsl loop je dec xor (bad) add cmp xchg aas add stos popf cmp mov or lock aas pop outsb jnp movl mov (bad) (bad) (bad) (bad) fildl push in pop and fisub sub mov xchg inc sarb or (bad) (bad) (bad) decl imul fldenv pop div outsl fcoml or addr16 pop xorl jns cmp mov adc jne ret mov cmp nop daa mov jg or adc inc or movsl jg mov lcall or in pop stos add and or adc (bad) (bad) dec sbb les inc (bad) (bad) mov or (bad) insl jne shlb pop clc outsl gs sar cmc or mov jo jl cmpb mov (bad) jmp or xchg jg sub pushf or add dec sbb adc in mov test cld (bad) (bad) jp in xchg popa in in adc push ljmp mov (bad) inc ror addl pop icebp aas xor inc mov inc popa cmp mov mov ljmp add jnp sarl mov popf movsl aas push mov sarl xchg pop (bad) decl scas sahf xlat xchg push or in rclb (bad) (bad) cli test jnp xor scas xor dec (bad) aad insl jae pop cmc ds xor xchg fldl (bad) (bad) jmp cmp and xchg andl xchg daa jae (bad) lcall pop or mov mov cld bound sbb outsl clc jg jle les gs xor mov (bad) jle cwtl rcrb cmp in sub (bad) imul push dec gs xchg lea lret (bad) lcall jp idiv jnp cli jne in mov mov ljmp pop (bad) cmp mov aam (bad) mov cmc mov (bad) (bad) (bad) fsub xor inc lret adc or cmpsb in dec jbe imul out (bad) in (bad) (bad) jge loopne (bad) adc push push ret add shrb jb xor push sbb cmp loopne and push es mov add and (bad) (bad) jmp xchg cwtl fwait out nop iret aad call push rcrl roll push les (bad) (bad) call les cld xor pop std movsl dec repnz push cld xor mov out adc repnz out ds call dec aaa (bad) outsl (bad) (bad) pushl fisttpll dec jl hlt cld or cmp dec pop inc sub nop adc mov cli incl stos mov or arpl (bad) adc (bad) (bad) ljmp rorl pop lcall int3 mov jne lea subl out addr16 adc (bad) cmp fcomps cmp lods leave cwtl fidivl push sbb jp cmp (bad) pushl outsb push add ss sub xlat and push out rcr insl sahf stos adc cld (bad) lcall (bad) jae mov popl aaa xchg sbb rolb in sbb stos add (bad) (bad) ljmp pop xor xchg mov jl mov xchg cld push add cmp sbb outsb cli mov hlt mov das ja jo pop mov mov cld (bad) (bad) cmp in push sahf sbb scas sub les stc and (bad) incl out daa or pop movsb imul dec jns sub or fimull mov mov scas inc sub (bad) (bad) (bad) lcall xor or xchg or lahf xor loope int test lods or (bad) incl push cmp push and lret lock xor lods fidivl jb xchg xchg pop mov inc das sar add shll movsl aam out scas sbb (bad) dec push fidivrl mov std (bad) (bad) (bad) jmp popa (bad) pop or insb les (bad) daa popf fyl2xp1 setns add iret into inc mov (bad) (bad) (bad) clc jb,pt mov xchg sbb xchg sbb cltd pop lods in aam adc cmp popa (bad) mov jp adc xor pop push sbb arpl mov mov enter lcall push loope je push sbb fs push adc jae clc (bad) (bad) pushl lds clc mov add (bad) or push in mov dec dec (bad) mul fs stc (bad) (bad) pushl jmp popa sbb insb pop sub (bad) jnp jne pushl das inc mov and cmpsb pop aas mov popa fidivl iret (bad) (bad) (bad) decl in pop fcompl mov pushf sbb lret push shr push mov jb (bad) (bad) pushl clc xor push and adc cmp or inc hlt (bad) (bad) (bad) mov mov inc cmp mov push push pop mov addr16 sub ljmp clc mov push sbb lds imul mov jo xchg (bad) jmp push cmp shrb (bad) fdivrl add xor xchg mov test (bad) (bad) inc push xchg test mov xor jno mov fimull adc (bad) (bad) (bad) jmp cli insb aas or mov movsl dec aam insb jp mov test pop mov (bad) (bad) (bad) incl jp mov lock inc cmc repz enter push mov push mov aaa std pop push cmp add in mov push fndisi(8087 mov (bad) sti sti loope push mov cmp jmp iret xor popl nop add xchg in (bad) adc sub aam xlat hlt mov mov sub pop pusha xor ljmp std std aas movsl (bad) mov fnsave xchg add rorl xor push loopne mov and pop and (bad) (bad) (bad) pushl sbb adc pop push xor fsubrs mov mov jl (bad) (bad) lcall inc jae lock xor cli jg movsl jne jns enterw std (bad) decl mov aas stos (bad) dec sbb add cmp xchg pop insb mov lcall (bad) (bad) (bad) pushl test std test xchg pop cmp push out test mov (bad) (bad) (bad) call divw int mov xchg (bad) lret hlt or jbe dec ljmp push data16 icebp (bad) pushl arpl inc push ret js and jecxz mov (bad) (bad) lcall test jg imul pop ja inc push push (bad) mov shll sbb jp xor jg xchg aaa scas cli (bad) jmp dec fwait pop push das or cmpsb insl xchg fimull mov (bad) jmp outsb div xor fnop adc push jmp fwait add pop daa into fs jbe cld int mov pop pushf xchg pushl decl pop add loopne inc notb cmp sbb push or out dec jmp jle add scas mov insl push mov jmp xlat in cmp lea inc jmp bound and xor fcomip dec cmp xchg dec aas imul loop out jo imul std jb adc xchg cli sarl (bad) fsubr mov pusha sbb arpl sub repz test (bad) (bad) call std (bad) dec out repnz repz dec popf imul and xor (bad) (bad) (bad) pushl cld popa push xchg dec lahf push mov loope add fwait nop out test mov in (bad) decl xchg cmpsl jp pushf xchg repz cmc pop scas adc int3 or sbb das sar jmp aam (bad) out mov mov jno (bad) (bad) (bad) call in and adc jg mov jmp movsl lret (bad) (bad) jmp dec cmp fsts in jle xchg push repnz stos xor pop pop sub or xchg hlt (bad) (bad) jmp test dec (bad) xor mov pop sahf cmc cltd les adc (bad) (bad) fbld sahf add jo sti cwtl subl mov call mov dec lea aaa lods lahf rcrl push jae jbe (bad) (bad) incl dec jl dec aad sahf enter adc das rorb icebp enter jge ficom (bad) (bad) (bad) jg pop shll jo scas sbb mov mov movsb enter xchg imul pushl jmp push sub push jbe jmp mov push data16 (bad) incl dec nop sub pusha xchg push les fldenv stos mov decl and add mov scas sub fsubl cmpsl out ljmp inc jo (bad) cmp call outsl dec xor cmp test (bad) (bad) (bad) mov (bad) cmpl adc inc dec testb cmp jp (bad) (bad) (bad) lcall inc or fisttpll mov sbb lret and das aas adc lods xor fdivrl cli (bad) (bad) fsubl mov fisttpll popf sbb cmp and xor out cmp (bad) pushl js sub mov sbb je mov imul or (bad) (bad) (bad) call jmp lret nop sbb cmpsb xchg fwait pop pop adc pop cmpsl lahf mov mov mov (bad) (bad) jmp rcpps outsl xor out cmp sub xchg lret cmp jmp imul std leave jmp das dec les add data16 (bad) mov clc ja loop (bad) (bad) (bad) mov add out jb inc (bad) jo (bad) fisttpll out sub sbb push je (bad) (bad) inc jne mov (bad) push insb lds pushf imul iret (bad) enter bound sarl push adc jns jnp mov cld in (bad) (bad) (bad) pushl insb dec imul add movsb rcll inc jae fldt (bad) fsts (bad) (bad) (bad) incl jae lcall cmp mov orb dec (bad) ficom (bad) (bad) lcall and (bad) (bad) iret ss inc stos xchg repnz ljmp and or mov nop pop xor sti jbe push lods cmp cmp jp sub jg insl jle aas fcoms shll jg cmpb mov aad jb hlt cli add push xor (bad) lcall adc jnp scas insl pop dec leave or xchg push adc cmpsl (bad) (bad) mov xlat out lds mov lahf pop jmp out insb test cwtl in popa push rorb je add (bad) (bad) ljmp jmp lcall mov or jns (bad) (bad) (bad) lcall je mov hlt adc cli test les cltd push stc ja pop jp push decl xchg inc push mov dec or rcrl in rcll xor mov dec in (bad) (bad) lcall mov pop ret lds adc inc push test aad repz stc out shll (bad) (bad) (bad) (bad) call pop cmpsb mov or pop jl and add fmuls popf (bad) ljmp cli push fidivl mov in movl push xchg add iret clc (bad) lcall fbstp push (bad) out mov pop scas pop fnsave sub pop adc (bad) loopne ljmp cli push jmp repz pop mov adc outsb loopne movsl push pushf push mov (bad) (bad) jge mov aad jbe test push fs xor (bad) (bad) (bad) mov in jo xchg std dec hlt cmpsb pop lds sbb pop pop dec push fildl xor adc aam scas fs inc fistp mul aas jne hlt push xchg pushf inc jle (bad) (bad) (bad) incl adc push fimul iret mov popa xlat pop popf stos pop mov leave es (bad) (bad) (bad) pushl xor fcmove lahf pusha rclb into mov lock in nop lea (bad) jg (bad) mov mov mov insb cld sub jmp adc cmp cld pushl icebp cmpsl loopne decl (bad) mov (bad) (bad) jg and int3 pushf cmpsb xchg push js inc imul cltd jo scas (bad) (bad) (bad) call mov or and nop movsb orl stc inc cs inc fldcw pop jge (bad) (bad) call loope int3 orl ja in adc dec clc aam fmull fcom icebp (bad) (bad) fcomip and test pushf adc dec mov sbb icebp rorb xchg cs loopne adc (bad) incl cld push dec xor xchg call xor sbb mov inc (bad) (bad) (bad) (bad) incl inc sub sub cld cmp out ds pop cwtl sub mov xor (bad) (bad) jmp hlt in leave cltd loop std mov testl mov jg in pusha mov inc push imul jle addl pop repnz jae popf mov stc (bad) call adc lahf adc jo mov pop std sbb gs (bad) jg mov mov cmpsb mov pop sbb dec lea rorl jno out (bad) (bad) (bad) (bad) cli bound aad repz (bad) sbb mov xor mov sbb (bad) leave sahf jge std (bad) cmp enter xchg jmp lahf daa imul (bad) (bad) pushl mov outsb adc or cld adc repz (bad) jg lcall les xor or inc into fwait mov jp fwait and (bad) mov push test inc sub push adc sub gs or cmp pushl stos mov ret dec ret fstps push mov rorb xchg or (bad) (bad) (bad) decl icebp fsubrs popl mov int and xchg mov or mov cmpsl into xchg (bad) sbb movsl add mov lcall (bad) (bad) dec push jmp cmp mov sti fldln2 fwait cld push adc adc mov enter call (bad) fildl inc mov push adc out add mov lcall insl stc fdivl cmc lea (bad) incl test xor shr sbb add sub clc pop (bad) out xchg ss mov cmp mov stos clc fcos (bad) (bad) decl lret adc jecxz xchg fcmovu xor mov arpl mov data16 mov call clc push dec sti cli or xchg jl add shlb cmp push mov (bad) (bad) decl and push mov (bad) pusha loop jmp xchg (bad) sub push add inc push (bad) lcall aaa dec into adcb mov aas inc cwtl sub popa sbb or idivb lock fstps scas or imul lds xlat xor jb popa dec ljmp pop mov xor jp jp mov imul out push jmp or push pop (bad) rol xor cmp testb repnz adc call lds jne jbe hlt cld int fadds add cmp leave or add fldl subl sub repz cmpsb sub cmpsl mov js mov (bad) jmp pop lcall lock jnp or inc hlt fs mov fildll cs (bad) (bad) (bad) (bad) jno jb xor ror push cmp and push stc pop pop sti imull incl mov (bad) lods inc sbb movsb mov aaa sbb dec mov fs pop push fldl xchg or fwait jge lea mov xchg lods add int je jge (bad) (bad) (bad) cmp push fwait jbe cmp xor xchg in dec imul (bad) (bad) (bad) call mov ret mov loopne aam test (bad) mov dec dec or loop mov ljmp dec (bad) leave pop clc xchg or test cmp push (bad) call mov je (bad) out mov test push or fcomip (bad) decl (bad) push mov pop lret cmpsl mov mov (bad) jno lea cmp jb das nop lods lret pushf xlat (bad) out repnz jo sbb sbb (bad) incl in push dec adc cld dec add xchg stos mov dec iret cltd mov (bad) (bad) (bad) (bad) mov (bad) aad inc pop rcrb sbb insb fidivr mov lock cmpsl cmc in xchg outsl and push rcrb (bad) outsb pop mov cmp adc xchg fadds dec jle or outsb bound (bad) (bad) jmp out xor mov push xchg lods sarl out lahf jae mov pop lea stos dec dec popl sbb cs lcall adcl xor sahf (bad) and (bad) (bad) jmp jns xchg mov or push mov loopne sarb je add in mov pushl stos xor sub popa outsb mov sbb js mov pushl jmp aaa push aas imul adc xor cwtl fisubl mov dec addr16 mov lcall add sub xor or popa test jae push add daa hlt loopne aam leave decl (bad) (bad) decl ret (bad) or adc mov xchg xor xchg arpl (bad) fcomip jmp in mov (bad) outsl lock push xor sahf jmp jle (bad) (bad) (bad) inc rol pop sbb stos cmp mov dec imul xchg mov dec decl out out dec aaa jbe je xor add lcall inc bound stos sbb aaa popf bound stos imul (bad) incl pop pop mov cmp bound inc aas xor (bad) (bad) (bad) dec jns arpl xor mov add mov aam test inc inc (bad) (bad) (bad) (bad) cmp adc cld mov inc movl mov imul aas xchg (bad) pop imul mov or int (bad) or xor inc xchg (bad) idiv lcall (bad) sub mov mov cmpsb and or mov xor lcall in in fidivr adcl mov xchg xchg adc test (bad) mov xor sbb lret jge lods icebp jne mov enter mov (bad) (bad) decl add fs cld cwtl or ss sub mov jmp inc repnz imul orl (bad) (bad) jg jecxz fs push dec and ret dec push (bad) test sbb jne xchg cmp (bad) (bad) dec (bad) shld imul out push pop outsl std push (bad) or (bad) (bad) decl jg fwait push roll addr16 add test (bad) scas cmp or cmp gs and int push pop fldt push (bad) or (bad) incl adc push rcrl mov pushf jb (bad) sahf icebp jo (bad) xor inc loop incl cmp cli xor mov insb (bad) (bad) decl xor mov ds leave insl sbb mov movsl jg cmp (bad) (bad) jmp gs sub stos and push es sbb xor stos mov (bad) (bad) jmp push push test leave inc shll lret mov mov scas les (bad) (bad) incl dec (bad) insl in mov jno insl inc pop mov lret mov imul (bad) (bad) (bad) (bad) (bad) cmp dec mov jo adc or insl mov out out adc cmp (bad) (bad) (bad) outsb cmc lock mov nop aas sbb pop sub jl enter (bad) (bad) (bad) (bad) mov and lcall bound and aaa rolb pusha lods std sbb (bad) (bad) jmp add in pop jno ds cli lcall gs mov (bad) adc (bad) lcall xchg push pop ret jno loope cmpsl jmp aas outsl adc addr16 mov push add (bad) (bad) jmp sbbl push cwtl subb std out cmp arpl mov (bad) cmc jns jle cmp sub pop sbb and pushf adc sbb (bad) (bad) (bad) jnp and (bad) lcall xchg mov mov adc (bad) or mov dec (bad) (bad) (bad) ljmp imul jg mov in sbb lods mov fdivrp push mov xor aad arpl lcall daa mov sbb loopne popa in (bad) (bad) (bad) (bad) cmp or pop cmp xor jno xchg pop test mov (bad) lcall sbb iret pop in into rcr sbb inc aas push test (bad) (bad) (bad) ljmp shrl pushf mov outsb sar popf or adc test mov (bad) (bad) call lahf jg xchg and xor imul shr scas out stos xlat lea leave push or (bad) lcall fcomi or repnz popf (bad) lock or cmpsl stc sub (bad) pushf xchg (bad) (bad) jmp mov cmc gs cmp dec sbb and mov mov or mov (bad) xlat (bad) call push mov test out stos jmp fisttpl mov sub push cs in mov daa jb js (bad) (bad) pushl mov dec or aas push push add adc shlb and (bad) inc sbb fistpll adc or int (bad) imul cwtl mov mov mov adc jp cmp incl repnz mov xchg sub xchg sub imull push clc test (bad) (bad) (bad) (bad) fadds inc stos fisubr stos jmp punpckldq mov addr16 fsubp inc int out mov out xlat push rcll in (bad) pop jle call xor in imul out dec jns es lods pusha (bad) (bad) (bad) (bad) ljmp mov test or cltd mov push push int cmp sub cli decl xchg outsb insb adc in inc mov push fs in test lret iret mov pop lods push and aam dec insb sti fbld decl cmovae test loopne,pt fildl (bad) lcall xchg dec lods push sar mov ss movsb push inc and incl arpl fidivl insb fldenv dec or rcl pop inc fwait or lock pop (bad) push icebp push ljmp sbb ds lods mov pop push mov xchg std adc (bad) cmc inc inc mov mov mov jle outsl decl lock fmuls or sbb incl pavgw imul inc pop pop sbb fiadd ja push sahf push std (bad) call mov inc sub mov jno je movsl mov jg imul (bad) pushl jle sbb sbb dec xchg (bad) pop int jmp mov fsts jmp repnz adc scas cmp outsl popa ja inc stos xchg or jg (bad) mov push fsubrl sbb adc ret or pop enter cmp pop repz ljmp (bad) (bad) pusha jmp pop pop (bad) enter and push fild sbb cmpsl mov (bad) lret insb sub mov mov out movsl inc mov dec into insb mov push jne or sarb movsl iret rorb jge (bad) (bad) decl pop push insb mov adc push roll fst pop pusha mov dec in jb (bad) (bad) (bad) lcall int mov aam dec xor pop insl das inc push sbb xorps (bad) call loope out and inc inc scas negb mov test cmp sbb mov mov mov out sti insb in cmp scas shrl inc add sar stos jl incl cmpsl mov xor popf leave xchg pop jge adc push incb repnz cmpsl icebp scas adc in pushw int roll or adc mov rclb sbb xchg jle scas sub (bad) (bad) decl call xchg in lds js mov ds jbe or jmp xor (bad) lcall ret enter mov jle and ljmp fwait sbb cmp stos stos repnz mov ljmp inc nop xchg adc mov push jnp cli sub aad or sub xlat aaa (bad) in jno test push jo (bad) (bad) dec fld push xchg inc pop and pop (bad) pop mov movsb push ss (bad) lcall jmp pop mov push jmp ljmp mov fdivrp sbb jg xor pushf adc movsl adc push mov jge mov fstpt mov (bad) (bad) ljmp jne scas mov inc insb sub pop mov popa scas push or lret or sbb ss decl gs and dec icebp movsb adc add aaa xchg in jle (bad) fldenv (bad) (bad) jnp adc test sub pushf out pop out ds sub cmc inc or (bad) (bad) (bad) decl sahf dec out lcall rorb es mov pop mov sub (bad) (bad) (bad) mov insl fisttpl xchg sarl and call bnd mov fdivr jmp mov or call loopne (bad) dec and stc out pop cwtl (bad) jp lcall sub scas adc lahf sbb insl pusha out ds sub cmpsb jae (bad) (bad) push xor push cmpsb cmp and sbb hlt sar mov sub std andl sti xchg add (bad) (bad) (bad) call cld jge push into mov cmp bound cmpsl mov test pop cltd jno mov push or iret inc movsl sub (bad) fistp repnz jle (bad) ljmp adc lock xchg xchg das dec daa mov cmpsl cmpsl (bad) fcomip incl jne orl imul sbb mov enter jge dec pop pop (bad) (bad) (bad) pushl xlat aas das push mov outsl daa ret xchg imul hlt mov inc cmp fs mov dec cld (bad) (bad) (bad) dec movsl inc (bad) std xchg xchg add push popf mov adc push sub sahf mov sar adc mov inc test std dec jmp repz sub cmp dec add push mov ljmp (bad) mov cmp and cmp cmpsl jo lea jecxz sbb mov pop loopne mov in xor xlat pop jb outsl les dec xchg and mov and add inc xlat (bad) out pop pop int3 and fs lret xchg mov (bad) (bad) lcall inc je dec mov decb (bad) push lock pop sti std (bad) (bad) (bad) aas pop idivl imul cmc mov movsb pop outsl jnp xchg sub add add sbb mov or enter mov (bad) pushl pop push (bad) in inc in sarl (bad) ja into arpl sar (bad) jmp pop xor leave mov lahf jb pushf out sbb add or dec (bad) mov (bad) (bad) decl mov dec jge sarl sbb fnstsw fsubrl outsb bound mov or test jecxz xchg dec xor sahf es shrb (bad) (bad) (bad) pushl adc adc fwait xor scas (bad) mov xor inc dec lea leave lret (bad) (bad) (bad) (bad) inc sbb aad jb sbb fistpl jle scas jge cmc push arpl fidivr jo loopne (bad) (bad) jmp push stos pop popf add out rcll mov mov mov stos mov dec push dec (bad) (bad) (bad) jg dec rcrb loop push stos and cwtl jae clc shlb leave jl jecxz dec or mov out or pop sbb mov push idivl sub stos (bad) sub (bad) jg (bad) fimul sub scas ja sub mov mov and and and (bad) (bad) (bad) jmp ret ret rcrb outsl movsl pop roll pop lcall jbe sbb pop insl loop xchg push ds inc insl ja mov repnz xchg clc (bad) (bad) call fsubrl rcrb xor ror rorl (bad) clc into cmp pop mov stos mov xor adc inc fdivrs (bad) (bad) mov les movsl pop lret repz inc mov or jo (bad) (bad) pushl addr16 push pop loope jecxz or and add mov jg pop call ja out dec mov loope (bad) enter (bad) (bad) push cmpsl xor mov pop push arpl xor xchg jne xchg mov inc adc inc rclb (bad) and lahf and push dec xor jmp mov sbb sbb (bad) (bad) (bad) call divb fucomip out js iret sarl ret test loopne icebp dec dec mov enter idivb in fbstp pop data16 jge cmp (bad) (bad) incl mov mov xlat cmpsb aaa ss jns pusha cltd xor jnp int3 gs mov mov ffree inc gs mov xchg movsl sub shl rcrl mov (bad) aas cli (bad) (bad) (bad) decl or add (bad) in and push xchg push int arpl js sub mov (bad) (bad) (bad) mov inc pop dec mov jecxz pusha dec enter les jge mov (bad) mov adc cmp and scas or cmpl hlt lcall icebp pop stos js,pt stos cmp cltd stos or outsl scas cmpsl dec cmpsb out jns adc fnsave push lock xor sub (bad) pop ficoml (bad) icebp notl inc hlt add adc cmp insl add scas mov (bad) jmp mov xor cmp cmp jge out xchg aad int3 cs dec cli (bad) (bad) decl xor sub xor dec pop imul fmull sub push xor in ljmp pop loope mov jbe aas (bad) push lds in les (bad) jle scas jo and push push cmp and aaa push jns loopne (bad) (bad) (bad) (bad) jnp xchg or cmpsb pop movsb cmp mov (bad) out lahf mov out push sub xor (bad) fyl2x fnsave fisttp push aad or outsb stos or cmp test hlt arpl pop pop sbb idiv dec dec cli (bad) imul xchg push pop call jg (bad) push add outsb mov cwtl or or lret into jge push (bad) (bad) (bad) (bad) mov xor mov popa push sub mov cmp (bad) mov (bad) cmp push sbb inc inc cmpsl add mov (bad) lods mov or mov (bad) (bad) (bad) (bad) mov aaa xchg int add sbb scas lds cmp mov (bad) (bad) (bad) jmp sub ret iret xor nop cld cmp adc fistpll sbb cwtl jnp (bad) (bad) (bad) jmp and xchg mov pushf insb push xchg mov and lahf in jae jne (bad) (bad) (bad) lcall dec shll aas fcmovne pusha bound adc pop aas cmpsb arpl xchg xchg sub in (bad) (bad) mov bound inc lahf mov sub inc and sbb (bad) decl (bad) jae sbb push and mov shrl fwait (bad) and shlb or in lcall mov xchg inc or (bad) (bad) jmp adc inc and xchg mov xchg inc push je in fsubrs push push sbb (bad) (bad) incl push push push or lea fistp repnz pop pop sub pop pop pusha roll pop push sarb or pusha push (bad) lock inc add int3 (bad) stc jb aas mov jae xor movsl fsubrs sbb mov lahf test ret or mov fwait push (bad) (bad) (bad) lcall sub jb,pt mov push flds lods cmpsl movsl int inc inc fisubr push ja into add lods pop jbe (bad) (bad) (bad) ljmp ja adc cmp fcmovu cld mov fcom scas daa dec push cmp fdivrl pushl insb clc sub sub mov into insl lret or sbb outsl (bad) (bad) call ror cmpsl bound lods xor sbb pop outsl (bad) jecxz mov cmp fwait push sahf jnp or (bad) (bad) jmp cmp xor dec mov xchg mov push int lret mov (bad) or stos add xchg cmp (bad) (bad) incl cmp dec fmull sub hlt mov cmp or out (bad) (bad) incl arpl add icebp insl and (bad) push in ja cltd insl pop subl mov pop stos clc (bad) mov and sti cwtl push ret imul mov test idiv jmp adc daa test inc adc movsl sub xchg test test (bad) (bad) (bad) cld cltd arpl sbb in scas shlb mov bound scas mov jne lock adc sub fistl enter (bad) (bad) out cli fisttp adc xor xchg pop mov dec cld fldl adc sbb imul lock cs hlt and pop xor (bad) mov outsb cmp scas or add pop push cmp (bad) mov mov gs popa xchg out sti cmc mov mov movsb mov mov clc sbb repnz ds sbb xchg mov mov xchg (bad) (bad) (bad) decl (bad) loopne stc and lcall leave scas sahf and add xchg daa (bad) (bad) (bad) jmp loope js cmpsl in lock mov les push (bad) rorb pop imul (bad) call push xor pop push sub push jb sbb daa out mov repz push dec fisttpll jmp pop das scas cmpsb add out rcll sub inc insb (bad) mov cld fnstcw or (bad) loopne (bad) (bad) (bad) mov add (bad) outsb xlat cmpl or repnz lea (bad) test push inc push or incl cld (bad) xor cwtl sub call add fisubrl arpl outsb mov xor dec ss faddl (bad) lcall ds (bad) jne idivb jp xchg sub int3 mov in jmp adc (bad) (bad) (bad) jp cli out les jp (bad) xchg arpl mov out mov mov (bad) (bad) out lcall mov xor ret popl push mov stos (bad) (bad) (bad) jmp inc xchg sti push je je jle loop sub cmp dec call mov loop (bad) (bad) (bad) pushl mov gs adc or pop arpl sbb jecxz jg add pop (bad) pusha insb imul or inc (bad) jg sbb jbe cmpsl std (bad) cli in test mov push mov (bad) (bad) lcall mov sbb push ljmp add sbb pandn push mov (bad) jmp aas addr16 mov mov dec add cltd sub (bad) (bad) lcall icebp pop mov push jae lods pop add scas xchg repz mov arpl mov (bad) (bad) (bad) lcall cltd (bad) int xchg inc fstl or rcr sbb jmp jo (bad) (bad) (bad) jmp jecxz ret sbb gs popa into and lret fistp jae ret mov mov (bad) (bad) jg insb xchg test mov (bad) mov fs sbb repnz (bad) incl xor mov adc ficoml push aad mov aaa std (bad) jge inc ret pop inc and add rclb and stos rorl push lods insl lahf loop mov (bad) mov (bad) ljmp cld movsl fisubl dec iret lods mov into inc mov cmp (bad) (bad) (bad) (bad) stc inc out push push fnstenv (bad) mov sbb fsts and arpl ret (bad) (bad) jmp push sub pop out mov add cmp repnz aam mov (bad) (bad) jg pop int shr jp outsl stos mov test dec dec negl inc (bad) (bad) (bad) lcall and xor push pop out (bad) xchg push or pop sub xor jb bound sub xor in jmp idivb cmpsb xor dec fstps dec dec adc push xchg ja push cmp pop ds (bad) (bad) (bad) (bad) jg and pop xchg loopne dec pop adc and rclb aam insb jbe mov (bad) (bad) lcall sbb sub fidiv push ds rcll cs stos or dec pop test ds push lock (bad) out mov insb loopne cltd adc jae dec jnp adc dec insl shl adc (bad) (bad) fistpll scas fcoml out sarl or cmp mov imul (bad) (bad) jmp aaa sarb in sub addr16 mov jnp je stos loope add sub (bad) (bad) jmp adc sbb and xor xor or push js (bad) cmp lret incl leave enter cmpsb and loope jle outsl stos xor (bad) (bad) jmp sbb jecxz add jecxz je xchg pusha mov int cltd mov and (bad) (bad) ljmp adc pop mov lcall ss iretw dec sub sbb cmc stos insb stos fdivl push mov jecxz jle aad aaa inc lea (bad) (bad) (bad) jmp fildll enter out cmpsl imul inc inc cmpsb push fdivr inc subl in and (bad) (bad) lcall ficomp call (bad) (bad) decb test aas ret ds int inc (bad) (bad) (bad) inc test and out repnz cmc ss ja fs mov fcompl mov (bad) (bad) (bad) (bad) (bad) in andl or xchg jns sbb stos xor popa cld xlat cmc jnp inc pop mov fst jg (bad) (bad) (bad) lcall js lods aas mov in and sub lock sar (bad) (bad) jmp jmp push inc jbe xor insb pushf and push cwtl jnp push jp sub lds (bad) (bad) mov xor cld jmp cmp rclb pop popa mov sbbl adc push stc idivl aad ds lods push or cli mov (bad) push push pop icebp (bad) inc jecxz or sub arpl jb cmp mov insb or dec xlat (bad) (bad) lcall mov ja mov add fchs jmp scas loop cmpsb (bad) (bad) (bad) jg in add dec outsb rcrb loope test shlb data16 daa jnp sub scas dec xor push adc or int (bad) stc add push mov fdivr (bad) (bad) dec jnp andl lods or pop pop mov std pop cmp inc jmp mov (bad) (bad) (bad) fldl fcomps sbb (bad) (bad) lret mov hlt or (bad) (bad) (bad) jns addr16 pop mov fldl ret iret movsb mov cwtl mov dec ljmp xor enter in leave inc fbld daa dec sbb (bad) (bad) call jnp sbb hlt lret pop inc mov xchg fimull out je movq inc cmpsb pop les sbb ret mov call dec (bad) incl fadd xor arpl call adc xor ljmp decb push pushf jns addr16 sahf fsubs pop (bad) (bad) (bad) (bad) jns ja xchg hlt stos sub pop dec push mov cmp or ss inc ret fwait cs (bad) (bad) (bad) push mov sub das cmc xchg push loopne mov mov idivb add (bad) (bad) (bad) (bad) pushl cli sub (bad) sub xchg lods cs or out enter in lcall sub insl std icebp cmp (bad) pop insb push insl and push sub cmp add roll clc repnz gs in adc or (bad) (bad) (bad) incl jp pop and fadd mov xlat lea push push xchg cld insb xorl cld dec push iret pop mov add decl cmp fdivr adc pop add movsb stos inc cli (bad) lcall sbb xchg out loop in mov imul (bad) (bad) mov lods push xchg mov out mov cmp lcall cs xor pop (bad) (bad) decl ljmp inc (bad) out jne das fmuls aad sahf add (bad) (bad) (bad) jmp fcompl mov sbb and add sbb xchg xchg mov cld or mov cmp cmp mov mov (bad) call push ljmp icebp sbb test test mov add inc movsl or mov mov stc jge iret xchg jmp (bad) (bad) incl push loop aam stos dec xlat push push jmp adcl fsubs cmp movsl xor mov call loopne mov out mov xchg insl xor adc pusha dec push xor mov jg fdivrs mov (bad) mov repz dec dec or hlt push clc jg fcomip dec jnp dec test ja es (bad) mov ljmp ja outsl push add mov scas (bad) jp lock mov add sti (bad) (bad) (bad) lcall fcoms test jnp lcall inc pop ljmp cmpsb and ret loopne add or push shrb jecxz mov xor (bad) (bad) mov cmc xorl aaa sbb mov adc movsl fnstsw (bad) (bad) (bad) inc lcall cmpsb push adc das test cmp xchg pop add test lret add push push mov test mov xor jb jo or sbb mov (bad) stc sbb push leave rcl aas pop jmp sbb add addr16 jae or lds (bad) (bad) call test xlat push test cmp cmp jl aaa movsb bts lock das cli (bad) aas addr16 pop sar (bad) or lahf pop xchg in cmc in mov pusha (bad) (bad) (bad) lcall lods xchg mov sub cmp mov inc out xchg sbb call push or push and movsb push dec int3 test dec (bad) in (bad) (bad) (bad) pushl adc or (bad) mov mov mov stos fcoml test test sbb jne sbb mov negb notb sbb mov adc fwait loope or out push cld pop outsl mov mov (bad) stc shlb aad or pop or pop ret out mul mull jle sbb (bad) (bad) (bad) dec sub add jl adc cmp fildll sbb jno and out jno jne (bad) (bad) lcall hlt mov or mov mov dec notl xor add lcall pop seto int3 or xchg negb (bad) (bad) (bad) mov mov scas mov push mov cmp mov test jmp mov dec scas into sub enter and rcrl jno (bad) (bad) (bad) jg daa roll std enter lods dec or sbb fucom push ds or pushl shlb xchg pop dec (bad) movsb dec push inc xchg mov les or das pop in pusha push lea out (bad) (bad) (bad) lcall lea pop adc xchg insb push cltd lret push aam lock mov int data16 dec sub pop mov inc gs repz les sub out clc ljmp sbb insb shlb cmp outsb cmpsl mov push sahf lret (bad) lcall fidivrl add jmp and adc aas inc sub (bad) jg mov inc repz in mov jo cmp aas dec mov data16 (bad) (bad) push pusha test mov xor mov cs mov stos pop je (bad) (bad) ljmp fmulp addr16 jbe mov icebp add rolb push iret test push xor add mov les or js hlt lret cld or in jecxz incl hlt mov mov xchg fbstp jecxz aas push or fcoms imul sti (bad) ljmp inc mov jmp mov pop fidivl cld (bad) pushl mov outsb out ret inc insl in xor movsl mov mov xchg cmp cmp (bad) (bad) dec iret nop or mov out (bad) ss ret or test into je insl (bad) mov in inc jl or (bad) jbe jno pop mov sub scas pop jle xor cld ljmp lret mov push dec aaa adcl mov inc es fwait out lods mov lds push mov or mov sub (bad) ljmp push insb icebp data16 pop add xor out inc inc jno loope lods xor (bad) (bad) (bad) cld mov pop ds inc jbe ficoml lret mov xor add jg adc cmp popf xor insl cmp jmp inc arpl arpl sub (bad) (bad) call imul and int3 cmp dec mov add sub cmpsl xor incl push lock (bad) enter push add xor sti add adc (bad) jmp lea popa ss movsl add jbe (bad) (bad) (bad) decl adc imul jge inc sahf popa fimul (bad) (bad) mov aad push pop inc aad jns jle jp add cmp pop leave stos flds in decl sub test add imul xor and pop inc idivb in lea rorl (bad) (bad) (bad) jg jl scas inc mov dec roll nop int3 ffreep jns loop sbb ljmp mov in icebp out push and (bad) fnstsw sbb cmp (bad) fdivl (bad) cmp ljmp faddp iret xor hlt cmp notb jo add (bad) lcall push push mov and xchg addr16 (bad) mov popa mov and lock and (bad) (bad) ljmp loopne (bad) pusha (bad) nop adc test hlt mov xchg pop inc gs xchg xor xchg adc xchg mov fbstp add popa sbb js xorb mov ljmp aas sbb and inc mov mov (bad) ljmp iret push adc xlat mov mov leave cmp scas fcos scas (bad) (bad) fidiv and jns jge jl ds insb loope (bad) lcall imul xor xchg jl bound push insb idivb sub (bad) (bad) in jbe inc mov sahf sub cmp xchg cld mov push push sub xlat (bad) and jae cli int movsb imul (bad) jmp lea mov cmp or dec frndint jae out frstor xor int3 dec out fdivr mov (bad) (bad) jmp add fbstp inc adc cmc jl das fst stos in arpl (bad) jg and divl fs inc fiadd fsqrt pop fldcw or rorb mov popa (bad) (bad) ljmp pop popa enter arpl movsb jnp outsl mov imul jne or decl xchg sub adc push in cltd movsl jb into out dec push jge movsb adc call movsb popf mov xchg or jmp pop add es (bad) ljmp xchg pushf mov mov in mov lods dec push gs loopne (bad) (bad) (bad) cmp mov dec movsb jno mov push jns mov aas addr16 add lds push jnp (bad) (bad) ljmp movsb adc popf lret and mov aam sub in rorl leave push sbb decl gs lahf and fcmovb adc jecxz in in or inc out (bad) (bad) decl les dec popf les mov jp fidivr icebp cmp cwtl (bad) (bad) (bad) jmp jnp call adc pop sbb add add mov pop mov sahf es fistl inc repnz nop fwait xchg test adc mov pop push aad icebp decl lcall jle std (bad) (bad) jmp les data16 inc shr xchg xor adc lock mov aas adc (bad) aad scas cli (bad) mov hlt fwait lds jp int3 mov mov inc fs int mov (bad) inc cmp stos fwait adc loopne and mov (bad) lcall mov jne inc inc pop fcoml (bad) jne js test mov xchg and lcall dec push jge aaa jl and jecxz xor imul push dec lret (bad) (bad) (bad) ljmp aad sub movsb cltd ljmp insb sti inc out pop (bad) in mov stos dec and ljmp lret push sub inc arpl (bad) jo cmp xchg fist incl in fistp adc repnz lahf xlat jne int mov cmp out mov jmp clc and mov pop fbld icebp (bad) nop push popf lods mov sti cli cs les (bad) ljmp mul mov sub sub xchg xchg mov ret (bad) (bad) jmp es adc mov add iret jge mov sbbl mov jge mov les push in daa fimull (bad) rcr xchg lea mov add shrb or les fwait sbb mov pop fsubl sub fildl mov xor lret (bad) (bad) (bad) decl ret xchg push jle inc les adc daa mov int pop pop insb fmuls cmpsl sbb lcall inc mov jns and mov pop (bad) jecxz push cmc push mov push (bad) (bad) (bad) lcall adc out xor sub (bad) xor fstl mov pcmpgtw (bad) lcall pop and (bad) dec and sbb shl cmp (bad) (bad) (bad) call scas jp inc push repnz jae sahf arpl xor add in adc add or (bad) cmp pop pop xchg arpl fdiv jle lcall push (bad) pop aas (bad) (bad) (bad) jmp lds andb sahf jmp adc cmp mov daa add pop (bad) (bad) (bad) (bad) fstp fimul addr16 inc js stos sbb mov fcomip sahf xchg lret or mov pop iret rcrl mov jns (bad) mov adc sbb pop jo sbb cmp js pop (bad) (bad) (bad) pushl je mov lds mov push loope popa mov xor (bad) mov movsl lea add adc mov sub and pusha pop int3 cmp jne jae xchg es fstpt push mov push push (bad) repz ds mov mov cld push inc scas jo pop repnz loopne faddp sti shll arpl rcrl incl pop (bad) je push lret popf enter inc or sub fcom pop push (bad) (bad) jg ds aad pop sub xchg outsb sbb push cs jl dec loop (bad) (bad) lcall add test cs loop aaa inc loop jo or (bad) (bad) dec or jge xchg sti sbb inc dec sbb push mov adc iret sbb test pop mov add aad adc xchg scas or push icebp mov aaa adc add aas pusha mov (bad) (bad) (bad) lcall pop inc pop ds mov add add rcr mov pop jge pop pushl dec popa xchg adc aas lret push pusha mov push add pop lods shrl inc mov (bad) (bad) (bad) ljmp fcmovb les aas (bad) fiadd outsl sahf sti sbb in sbb push aam jl add mov (bad) decl jo xchg mov mov and imul in mov aaa adc incl cld sti rcrl aad xor scas mov add inc (bad) pushl aad roll popf daa je add out push data16 xor movsb test cld dec fdivr (bad) (bad) lcall cmp ret dec inc sbb dec push aam pop mov adc aaa or inc loope (bad) push mov bound xchg and mov sub xchg lcall mov loope (bad) sub or xor pop es sub (bad) (bad) (bad) (bad) jmp (bad) outsl lret fs adc push (bad) fwait ret mov xchg bound jle and (bad) (bad) incl in dec dec loopne pop out dec push and in xor and stos icebp or (bad) decl cmp aam add jno push mov sub dec push insb sub sbb or (bad) (bad) ljmp outsl jne jle sahf pop inc inc cmpsb and mov fwait mov (bad) fmuls cwtl mov (bad) (bad) call push idivl loope ss ret out xchg xchg pop adc mov inc cmpsl dec push (bad) jg incl pop dec adc insl inc rclb js xor inc pop (bad) in sbb (bad) (bad) (bad) ljmp or sbb loope shrb jle in mov jmp ret xchg add nop mov (bad) (bad) call (bad) mov ret mov out sbb jo test clc xchg hlt fcomip push mov decl scas and (bad) stc jmp incl push clc inc test pop ds sbb or and hlt (bad) (bad) decl pop fldl out mov movsl leave sub outsb xchg sub sub lods push mov lcall lods push mov pop sub (bad) cmp fistp mov (bad) (bad) (bad) push cs ficoml add popf fwait popa add xor sarb out addr16 jg jmp dec ficompl mov cli insl pop sbb fs and (bad) (bad) incl sbb imul aad aam mov push jmp sbb and adc (bad) cmp or jmp int cmpsl push push dec xchg js mov pop ret inc inc add (bad) mov ja aaa mov ja or leave mov into cli insb arpl xor (bad) (bad) jmp inc or inc mov cmpsl xor lock lea gs mulb (bad) (bad) fsubrl xchg div lret mov mull adc nop (bad) ficoml sbb sbb pushl or fist jmp xor js or daa repz sbb fs lcall xchg push mov jge mov adc (bad) mov or aaa xor adc test (bad) mov lods ljmp andl mov enter push out jmp shrl jns imul test aam (bad) (bad) lcall push push aad test pop call (bad) stc pop outsb jmp xchg popa pop dec adc mov cmpsl pop fwait jbe out (bad) fwait repz sub loope lahf es int3 aas (bad) (bad) ljmp jge inc out and (bad) out in decl cmp cmp mov inc daa xor mov shrb (bad) (bad) (bad) jg cli dec add mov and lcall in xchg jle inc push xor mov clc (bad) (bad) (bad) jge aas ss out scas cmpsb mov lods arpl cmp jo arpl cmpsl call and inc adc inc (bad) (bad) (bad) call lret das insl and jne arpl adc scas pop lds es or aas sbb jl (bad) (bad) pushl mov push cmpsb push xchg dec je push adc int arpl jecxz (bad) sub (bad) (bad) incl jg jle rcl sbb xor jnp push xchg cwtl ljmp fidivr cmp xchg sbb add xor (bad) incl loope mov outsb and jb insl insl imulb (bad) (bad) jecxz aas pop mov imul (bad) cmp addr16 mov rorb scas lds pushl jnp dec inc test sub adc pusha xor iret shr movsl mov pop jns movsl xchg (bad) (bad) (bad) incl adc (bad) outsb in int lock inc out inc mov mov lahf roll sbb ja clc cmp mov sub test (bad) (bad) (bad) (bad) decl (bad) cmc jge (bad) xor jbe shr repnz imul cmc push adc leave add mov sbb (bad) (bad) decl mov outsl out fcmovbe lock mov or mov call pop fwait or sub jmp popa loopne pop dec rorb dec cli leave icebp sub mov std (bad) (bad) (bad) cmp outsl or xchg aas (bad) mov mov jmp push repz sti adc jl xor (bad) (bad) pushl ret sbb je jnp lock jge mov cmp bnd and decl mov xlat cmp lds fs addr16 sahf jp sar (bad) ljmp or adc pop sbb xchg jo cld repz into loope out insl data16 push jp or lock cwtl sarb fcomip pushl and xchg addr16 jnp inc jp nop xchg adc sbb ljmp leave cmp or ficompl ret xor (bad) mov stos (bad) push (bad) popf (bad) (bad) (bad) pushl iret mov cmp xchg xchg mov clc xchg mov test push scas push sahf (bad) (bad) (bad) jmp jns scas or add lahf popa sbb inc nop out mov cmc cld (bad) out clc aam adc jecxz fs hlt push mov add adc and add int3 dec rolb pop cltd sub add (bad) (bad) (bad) incl idiv jg dec dec jmp fs inc imul lahf test ljmp mov out stos cwtl xor xchg sahf mov xor inc jns xor lcall pop cli ret into sub push fdivs dec lods shlb aad (bad) (bad) (bad) fiadd xchg ret sub stos mov jge sarb arpl js and cmp xor (bad) call ja sahf (bad) pop cmpsl out xchg pop dec jp xor icebp lret inc lret repnz fsubl (bad) cld inc lods pusha outsb add out pop or push popl cld dec push sbb cmp out repnz cmp ret test adc ljmp out jne test (bad) (bad) jmp out adc dec aad inc or cmp call movsb pop out insb pop call insb xchg or inc test sahf sub xchg adc (bad) add mov stc (bad) (bad) (bad) mov push mov ficomp sbb lods mov popf xor push pushf cltd lret (bad) ljmp mov loop mov add push and mov gs inc lock test mov int aad sbb mov (bad) (bad) inc cmp (bad) push arpl lds leave or call inc in cmpsl dec daa mov inc (bad) fcomip mov jns adc inc and ljmp mov (bad) inc nop pop pop imul aam mov (bad) sub lcall or jmp mov jno mov push in enter pop pop test mov sar mov ljmp add ret ret cltd (bad) mov pushl adc mov jle,pt mov scas jmp scas iret int jecxz sub jecxz fcomip jmp jns and dec iret xchg sbb or or sub xor out (bad) (bad) (bad) call (bad) ja sahf dec xor add scas stos lahf inc dec sbb mov add xchg xchg (bad) (bad) (bad) call in jecxz mov cmp add add insl cs call int (bad) (bad) (bad) cmp (bad) xchg outsl rol leave (bad) mov loop movsl fisttpll mov loopne (bad) (bad) (bad) inc imul jnp insl mov lret fidivr mov sarb rolb (bad) mov mov sarb mov loopne nop (bad) ljmp clc jmp mov les jbe (bad) cmpsl sbb int3 cmpsb pop (bad) (bad) (bad) jmp (bad) (bad) hlt sub inc pop repz push enter add aaa jbe icebp xor loop js pop jle pushl cld call fmulp mov arpl dec lock ja mov push lret mov cmp outsl lret mov addr16 dec ret push cmpsl xor je mulb call loopne outsl and adc mov aad adc mov imul sti fwait movsl mov push mov notb int xchg mov jmp das pushf inc imul adc (bad) (bad) push mov mov sbb notl (bad) (bad) (bad) ljmp sub sbb mov (bad) or mov lcall jle scas sahf and lahf repz cli out test xchg jb xor pushf add push das shlb sahf xor or pop les sahf imul les (bad) (bad) (bad) ljmp cmp mov push xchg shll sahf mov inc mov mov (bad) jmp or (bad) pop inc enter mov rcll stos call decl pop push (bad) gs movsb jecxz pop and or (bad) decl push push dec push jle fnstenv jp lods int3 push js clc add mov (bad) ljmp imul js fdivrl bound cmp in sbb push movsb mov ljmp adc sbb xchg xor jmp add jno (bad) (bad) pop dec std stos mov (bad) mov push (bad) mov iret and push repnz ss lret cmp ret (bad) (bad) (bad) decl push dec arpl jae inc dec (bad) jmp in jl (bad) mov jg cmp ficomp repnz cmpb or flds cwtl (bad) (bad) lcall adc jo mov sbb or addr16 dec sub rcr lret (bad) (bad) (bad) (bad) mov loopne cmp dec (bad) pushf jle dec arpl idivl push dec adc andl (bad) (bad) (bad) call lods jnp jb xchg mov bound fwait push push insb or cmpsl pop sti or (bad) ljmp (bad) xor (bad) out ret mov call (bad) (bad) (bad) (bad) call or sub push mov mov push xor cmpl push cmp mov loopne repz mov ljmp aad adc lcall mov fwait mov mov les clc jmp jg lods mov outsl sub jecxz push pop insb inc mov push mov stc cmp pop (bad) in mov cli repnz xor jno xchg sar rcl jmp xor mov pop jbe lret jne mov (bad) ljmp fidivrl sbb out int je jae out cmp sbbb rcrl sub nop (bad) (bad) call mov ret xor adc fisubr xchg lcall mov arpl add (bad) (bad) (bad) (bad) mov dec cmp mov pop or or mov push stc inc adc (bad) (bad) call adc push push aas jbe add pusha jbe in xor dec xchg lret pop mov call xchg adc pop scas sub push add lret leave or (bad) std add and (bad) call jo push ds popf or and test pop adc mov push xlat (bad) (bad) (bad) dec cld mov pop mov frstor pop out push push arpl mov (bad) (bad) (bad) incl mov push pop fcoms sbb ja mov xor sbb push ja (bad) jg add jl adc jmp mov cltd popa push adc lods (bad) xor (bad) jmp sbb pop mov imul fbstp imul add mov (bad) (bad) inc xchg (bad) pop push xor and data16 xor pushf and mov imul arpl (bad) (bad) (bad) push add mov inc mov testb prefetchnta idivb cs inc mov (bad) push xor mov xchg mov in sbb xchg and arpl sbb (bad) (bad) lcall dec dec leave fwait push add js adc xorl dec stc in pop hlt (bad) jmp insb mov (bad) (bad) int3 jae pushf xchg xchg cmp hlt dec (bad) (bad) (bad) (bad) out sbb call mov test popf cmp sub mov jl sbb fcomip call in ja xor inc aaa sub cmp jge and pop pop es int3 xor inc es (bad) jmp pusha lea sub mov aad clc mov in in ljmp pop aas mov and adc jno int clc aam test (bad) xchg jl sbb xchg jl xor mov (bad) call lcall daa xor aam xchg mov scas or (bad) (bad) (bad) call ds push xlat cli into pinsrw in enter pusha jmp test xchg (bad) pushl std sbb clc decl sub lock fdivrs (bad) (bad) (bad) (bad) cmp push fs jae jo xor add in sub pop jge inc push mov fdivrl mov sbb jmp (bad) (bad) (bad) call inc fldl fwait iret test or addr16 add test pop mov ret (bad) (bad) (bad) push arpl cmp cli data16 or ja shll sti cli addr16 xor ror mov pop test movl fstpl push popa jg data16 sub loope addr16 repnz fmull mov add push fmull mov shrl sub jg (bad) (bad) (bad) jg cmp inc (bad) lret jmp cmpsb stc dec loop and test add lcall add (bad) ds je jecxz xor sti inc pop lds pop f2xm1 jb (bad) (bad) incl (bad) aad fs xor test js (bad) xchg and div icebp cwtl push std (bad) (bad) (bad) lcall push loop daa ss lea dec call sub sub leave mov ljmp movaps stc jbe adc sbb lret sub inc pusha and and ret rcr push sahf xorl inc lret pop inc outsl add (bad) mov cmp dec in addr16 jg incl adc cmp int mov (bad) mov sbb xchg icebp int3 xchg dec mov sub dec test (bad) xchg and repnz dec xchg clc hlt pop (bad) insl cmp roll cmp (bad) inc lea mov loope (bad) xor inc lods repz imul mov pop imul insb jle test outsb int3 repz xchg cld pop sub dec xchg fwait cltd cmpsb (bad) mov (bad) pushl jmp repnz add jmp sub vpaddd mov dec sbb (bad) (bad) (bad) dec movsb lret adc in sbb (bad) xchg dec in xchg cmp inc jle sbb sub inc (bad) fcomip pushl pop stc mul sbb int cld jb mov fmul pushw imul orl test test xor cmp push xchg xchg jae sub xchg out xchg xor (bad) (bad) ljmp jo mov xchg jns push lods pop out inc cmp dec xchg (bad) jmp int ret daa inc outsb gs fsubrl mov out fidiv pop loope pop add cmp (bad) (bad) (bad) (bad) cmp push sub int3 (bad) mov scas fiaddl mov jecxz pop (bad) idivl (bad) (bad) jg sbb lods mov fldcw sub loop outsb scas mov test imul test or mov (bad) (bad) (bad) call into pop aaa mov dec (bad) xchg imul aaa dec mov add stos out jo (bad) (bad) ljmp iret insb (bad) (bad) lcall xor (bad) adc bound ljmp les subb cmpsb in (bad) fild or enter (bad) (bad) (bad) fnop xchg adc jae inc mov lret mov or (bad) jmp add jg jmp das aad pop add mov fmuls inc pusha or pushf pop cmp stos out dec push push push sub xchg or pop mov cmp lahf inc cwtl (bad) sbb (bad) jmp jns in jle xchg mov es mov daa adc in je scas mov push push (bad) (bad) sti sub jp das fwait les lods stos xor pop or sub mov (bad) call outsb (bad) jnp and imul cmp mov inc (bad) ljmp out mov or push (bad) imul inc rolb pop pop mov sar inc cld out push xchg jne shrl mov into mov mov cmpsb (bad) lcall jnp add stc insl jp mov dec pushf std adc cmp daa in fbstp (bad) (bad) (bad) in xchg inc jae (bad) ja pop pusha or frstor add pusha data16 xlat dec push or incl call call pop sahf mov in test dec pop test (bad) call xor mov js mov stc fsts or jbe stos pop jp jae (bad) (bad) ljmp shrb jl (bad) bound imul xchg shl les (bad) fild inc jo mov xadd divps jne push std (bad) lcall pop aam inc mov dec hlt mov sbb addr16 (bad) decl cmp add mov sub cmp cmp ja (bad) ljmp jno cmpl or sbb lret sbb mov stos pusha jmp jge negl fidivl lock (bad) (bad) call cmp int pop dec mov in sbb aad mov hlt xchg stc call (bad) (bad) (bad) incl dec hlt dec xchg sub aam xchg addr16 push cli pushf push ja insb dec mov ja incl ret data16 enter pop mov loop,pn push (bad) aad dec loopne pop cld pop loopne out rolb outsb jge pusha insl pop push enter (bad) (bad) jmp out data16 call xchg add sbb xchg loop mov cmp mov aaa dec iret jp je adc gs nop jmp jge (bad) (bad) call stc out repz push cmp cmp popf and fdivrl jns call std sub xchg xor shlb push push fidivr xor (bad) cmpsb adc mov push sub in xor rcr pop add sbb (bad) (bad) mov pop pop mov push xrelease pop les pushf aad rolb scas (bad) and dec data16 imul jp push lcall add data16 sbb (bad) dec adc sbb xchg add sti (bad) (bad) cld mov sti add into mov xchg ds add push mov movb sbb and stos les push jb lods clc (bad) (bad) push cmp add test mov push cmp inc fadds add rcl mov loopne dec arpl rclb (bad) (bad) fcomip cs or xchg sub scas (bad) inc lock jmp inc stos adc adc aas cmp call dec lahf jmp (bad) ljmp sub mov sbbb lea cmc leave push dec cmpb mov ret (bad) (bad) mov outsl mov pop pusha pop push icebp mov dec adc mov pop (bad) push out icebp test (bad) (bad) ljmp dec jnp cmpsl (bad) int es clc lods and js jg adc mov pop (bad) ljmp jo dec adc fidivrl push cwtl jne outsl mov (bad) (bad) (bad) pushl add jbe add jae pop out jo iret mov fisubrl jb mov mov jmp adc inc push jns mov pop fisub into push dec push and jb rcl mov (bad) jle out dec sub adc dec sbb aas daa pop ret pop jmp pop dec pop sub inc push fildll or incl push xchg das cwtl (bad) (bad) ljmp mov and subb xchg add out mov fsub add sar xchg inc enter int3 les or pop mov adc (bad) jg pop push cli xchg cmpl loopne and (bad) fcomip inc lock insb or popf inc test popf aas ljmp jg lcall and (bad) popa xor jl jg (bad) jg jg leave bound sub add mov std dec push or lea dec arpl jle xor (bad) mov push inc dec mov mov jno push ret push and jg pushl loope xor lcall mov pop fildll call enter outsl notw iret and add popa sbb orl repnz jg sbbb in pop pop add cmp lods test (bad) jmp cmc pop xorb sti add daa ret jmp pop and je adc pop subb test dec inc popa shlb push push xchg jge addr16 sub (bad) call and repnz jge lea aas sub fs pop dec (bad) (bad) (bad) jmp ja adc scas lret cli xchg cmp mov test or call in pop push jae and cld (bad) pushl mov dec mov jle lret jl cmp dec pop fldcw sub and outsb orb (bad) (bad) (bad) (bad) jmp insb sbb in mov in (bad) lret dec idivl arpl shll cmp mov xchg lret inc psllq push pop sti adc pop mov mov inc sar rclb gs outsl imul js xlat and sub les in mov fsubrp mov dec sub inc jmp (bad) (bad) (bad) jmp cmp mov jmp dec ds (bad) icebp fcomps hlt (bad) (bad) lcall and dec sbb in ror adc sub jae sahf jno push stc mov insb enter (bad) xchg (bad) jb cs add mov in mov or int3 je cltd jo ss sbb shrb sub mov sahf repz mov pop mov leave out aaa std mov xchg daa mov addl lcall rcll (bad) (bad) incl stos cmp neg mov or pop and mov lcall in pcmpgtd mov lds dec push aam negb addr16 lock inc push (bad) (bad) (bad) fbld in (bad) cmp outsb mov das outsl add xchg lcall mov andl push push dec lock and stos xlat fsub jge repnz imul aam test jge and ret imul inc int iret sbb sbb sub daa (bad) (bad) (bad) decl inc leave sahf les daa (bad) test inc push jns jae clc push mov mov (bad) (bad) decl mov dec add inc xor cmpsb (bad) fldl pop mov dec mov (bad) (bad) (bad) (bad) cld mov mov paddusw ds adc inc jle sti jbe (bad) fcomp adc cmp (bad) fisubl test lret sbb push cmp xchg test (bad) (bad) decl fwait xlat push mov push mov jmp icebp or adc (bad) sub inc cli cmp inc pushl lcall das jno addr16 lahf xor subb xor pop int cmc (bad) (bad) cmp xor fistp and inc push nop and mov (bad) (bad) ljmp pop cs mov mov mov pop sar mov or orb cltd hlt push mov pop mov outsb lahf mov (bad) (bad) fdivs add cmpsl fldenv xchg ja rcrb mov lods mov xchg into or (bad) ljmp sub inc aas bound jl mov jge icebp lahf dec mov (bad) (bad) (bad) call push dec mov enter ja or and inc fnstsw or popf cmp scas fadd fisttpll pushf mov lret dec cmc pop xor ljmp adc adc mov jnp mov aas (bad) (bad) (bad) (bad) fstl add lods mov sub outsb sbb loope int sahf dec cmp jbe jp xchg lods or jmp popa cmp mov loope lock std mov inc push pop and dec add adc lock push (bad) (bad) (bad) dec call mov repnz mov test leave pop stc mov push out iret jg (bad) decl jp ljmp iret mov xor dec and mov leave sbb and mov push xor mov sti and xchg (bad) add adc push mov incl jmp xchg adc ret fsts pop bound sub icebp std ret (bad) (bad) decl lock ret sub lock xor pop outsl repnz and jnp sbb cld ljmp jbe jno or mov outsl push (bad) (bad) (bad) jg incl nop ret mov sbb loope mov push cmp mov out (bad) (bad) decl pop jg xchg aas mov cmp mov jns pop aad fdivs xchg jae mov dec push dec aaa pop lock cltd cmpsl pop gs and add scas mov arpl pop popf cmpsl pop dec mov (bad) (bad) (bad) inc loopne sbb loopne adc or call xchg adc jl enter (bad) (bad) incl ret mov rorb pop test add imul aaa xchg fsubs pushf into push (bad) incl xchg jnp out pushf scas jmp adc xchg and movl loop add xor mov jnp dec inc xor addl out out mov and out nop dec gs sub pop mov fisttp (bad) push dec and lods addr16 bound (bad) sub fcoms rorb xchg pushl ret inc cmpsb mov dec push cltd jmp sahf cltd in (bad) (bad) (bad) (bad) ljmp xlat push or pop iret adc pop outsl cltd fs xchg outsb pop fs sbb movsb (bad) decl sbb jecxz mov push xor (bad) (bad) (bad) jg xchg (bad) cmc lds fs faddp inc sbb imul (bad) decl rcrb leave mov sbb jbe test in jb aam jmp inc mov cld fwait outsb jmp or mov push into add cld incl jo mov sub hlt ret (bad) decb push jecxz inc adc pusha fdivp xor lret mov inc test ljmp mov pop jnp call add dec push stc scas in fcmovnb (bad) (bad) (bad) jmp push sbb jp sub add scas or mov js or leave fwait and (bad) ljmp dec jl xchg cltd push mov test adc (bad) (bad) cli test aaa and bnd fs call sarb icebp pushl push mov xor pop jns outsl divl les call cmp pop dec leave or and and jo lock sbb adc (bad) (bad) (bad) cld pop cmp test fisttpll or out daa xor inc push mull dec neg idiv (bad) pushl sbb adc nop xchg cli pop movb loopne fldenv mov sar fnop mov adc out xchg jns out cmp and xor stos stos inc cs mov subl rcrb ljmp (bad) dec jo cltd xor scas popf adc cmpsl inc test (bad) (bad) jg inc sub test decl aaa pop repz adc ljmp (bad) jg dec cs dec ljmp jle xor (bad) nop sub and dec les or mov (bad) (bad) mov mov push addr16 or inc sbb fiaddl adc sahf jo inc cmp (bad) call dec (bad) mov (bad) repz fadds (bad) (bad) jnp mov pushf dec jmp push (bad) push fldl xchg (bad) rcrl or (bad) (bad) inc shrb cmpsl xor xchg or inc iret xor cmp stos outsl jbe sub mov mov cmp jg into (bad) mov stos mov lods xchg movsl shr jo loope (bad) (bad) (bad) lcall insb rol cmp cmp jle dec inc pop push adc outsb ja xchg push icebp sbb stos inc push jnp (bad) (bad) (bad) ljmp cltd aam movsl mov pop mov add xchg sub mov xlat jmp inc aas in jns push xorl ja jp jae ss in int3 movsb mov (bad) (bad) (bad) cmp data16 inc cmp in fneni(8087 ret mov (bad) negl std mov call scas iret fldcw (bad) mov and scas dec mov movsl cmpsb inc pop mov into jmp adc sahf sub je ret push push dec pop push mov lea mov arpl or jg mov hlt lea mov (bad) (bad) (bad) mov push dec mov ficoml notl push add scas or sbb inc adc and jns cmpsb or add xchg (bad) in cwtl das in repnz in (bad) (bad) (bad) inc loop fs ret mov add shlb mov mov addr16 inc (bad) (bad) (bad) push iret into mov dec iret inc addr16 adcl in sub out in dec xor push jle (bad) (bad) jmp in out aaa xchg dec imul mov insb push mov lret xor or sub jae xor (bad) (bad) (bad) jg jno insb sbb fsubrp xchg fwait dec lret enter lods xor leave (bad) (bad) pushl std push mov pop ret sbb test sub in lret jl lcall mov cmp pop cmp jl push and cmp loop testl pushl mov fwait gs jmp (bad) jo cmp clc (bad) ljmp ljmp cwtl pop xchg pushf mov pop pusha arpl call fstp dec sar (bad) ljmp ret or fadds adc outsb mov mov arpl push repz (bad) in (bad) (bad) (bad) fdivs push ljmp loop push inc push mov cmp repnz sbb lahf add push enter lds decl mov jno lods int ret (bad) jg psubw mov jmp lea pop push push jmp pop hlt mov sbb dec cmpsb mov outsw cmp (bad) (bad) (bad) call jae test pop lret mov dec push jg jp lods scas dec clc adc add daa cli mov (bad) lcall leave inc stos das aad push sub dec dec xchg mov jne cmpsl int3 xor mov out xor ss test (bad) (bad) push (bad) in mov dec aam ret incb es hlt ror and (bad) (bad) (bad) inc mov imul (bad) std (bad) dec std dec ret out adc int shrl aam (bad) ljmp shlb push (bad) xor fsubp fcoms cli lcall mov mov pop fs cmp xchg jb jns jae (bad) ljmp sahf mov popf mov sub test js,pt and add test sbb lcall push and inc mov sub add je lock negb incb cld fisttpl ljmp xchg push and (bad) (bad) incl push add shl js fnsave (bad) or mov ss and and and mov in cmc jg lcall mov cmpsb jl sub jne mov add pop cld das adc out int lea cmp dec mov (bad) stc decl mov sub test jno push sbb mov pop addb push and sbb add inc (bad) shrl or (bad) lcall arpl xor mov cld mov fcmovu mov (bad) (bad) xor (bad) mov fisttp orl mov int3 rcll push lret ja xchg pushl std decl jle (bad) mov add cmpl popa pop push mov jecxz pop (bad) stos (bad) (bad) (bad) pushl add lods cmp push inc std jns and divl outsl pop fisubr movsb ds (bad) (bad) (bad) pushl xchg aaa movsb inc cmc scas test es (bad) pop cli mov loop insb out fnstenv nop sub xor mov (bad) (bad) incl sahf mov push mov pop sbb repz fiadd (bad) test jg mov push popa xchg fnsave mov das pop push jmp or lret adc shlb out or arpl int3 nop popf sbb (bad) incl pop cwtl lea bound or jno xchg push add aam and aas icebp (bad) (bad) (bad) (bad) mov ret icebp enter adc invd lret lods (bad) shr or into (bad) push mov (bad) fcomip push sub jbe test cmc xchg mov pushf push pushf push lcall cmpsb (bad) (bad) cmp adc rorl lods icebp mov leave pop mov (bad) (bad) (bad) out and mov or fcmovne mov loope nop xchg dec sub xchg movsl (bad) pushl mov dec sbb fistl jg inc inc outsl cli cmpsl sub and sahf mov fnstenv (bad) jg incl je repz and loop or dec dec out cltd lods cmp (bad) (bad) (bad) in scas adc nop jg stos sarl lods shrl loope push call xorl (bad) ljmp mov adc add mov push pop jl (bad) (bad) fstpt lret js jmp dec cmp push or frstor lcall push xchg xchg mov pop in sub sub mov mov ret enter (bad) in nop mov or dec cmpsb ja and (bad) (bad) (bad) stc das lret out mov add sbb push mov cmp enter es (bad) ss insl imul pushf jbe fisubrl ss aam and cmp and clc xor (bad) (bad) (bad) (bad) cmp pusha fcmovne add xchg or push jp rorb test movsl dec outsl (bad) (bad) (bad) jmp movsl inc cmp mov jnp je int (bad) out adc cmp test scas push call xchg movsl mov adc adc jb pop xor daa sar (bad) (bad) incl inc push (bad) pop pop flds divl fmull inc sub or (bad) cmp fs mov jne mov cmp rcr fdivrs dec subb scas bound (bad) cmp call mov imul test mov cmpb cmp sub sbb hlt loop rcl mov js and movsb mov xchg jns sub je push mov gs incl ljmp leave push jne jns stc loop lcall sub imul jo (bad) cli cmpl xor jo (bad) out out sti push std (bad) jg or clc mov inc ja (bad) or jmp push sbb iret outsl clc call outsb push and stc xchg xor fmuls sbb jae (bad) (bad) (bad) decl xor ret and fprem bound (bad) jns xchg pop sub (bad) (bad) (bad) mov push call pushf ret sbb jnp mov cmp jg mov in mov lds into jnp or icebp inc add or repz enter mov incl cld lcall in push cltd test pop pop sarl (bad) incl out pop jb lcall mov arpl jno lret pop (bad) (bad) (bad) ljmp lret mov add fisttp dec mov adc pop aas lock mov pop (bad) (bad) (bad) pushl out cmp popf scas cltd hlt inc and es push push je mov jl test in jle (bad) (bad) incl add ret and mov (bad) add mov inc jb xor test cli (bad) (bad) (bad) mov pop pop test mov xor cmc pop arpl test (bad) (bad) (bad) incl clc rclb cltd nop xor mov mov call mov push int3 xor (bad) (bad) (bad) jmp dec xor mov (bad) pushf nop (bad) sahf cltd dec scas shl (bad) lods shlb cmp cmpsb mov lods lret sbb rolb cmovs inc jns push mov dec fcomps (bad) (bad) call adc dec in aam sub rclb inc or and stc xchg jle rcrb adc imull push cltd push fwait test mov (bad) lcall and mov jle mov popa in aad lds fcomip call lock dec jmp sti cltd test fdivrl adc addr16 (bad) (bad) jmp insb push sahf pusha xor cs aad daa ret (bad) sbb push scas jl sbb fnop gs dec jp idiv ljmp scas sbb movsb aas mov sub orl (bad) pushl inc jnp mov jo add out sahf sbb sbb (bad) decl ds lds xchg or or cmp cmp cmc sbb pop in jmp pop sti mov je (bad) dec xlat (bad) (bad) (bad) movsb fistpll or rep xor push cmp jne lret ljmp jg fwait xorb push loopne sub add in subb dec add loop (bad) mov shlb decb cmp ljmp in cwtl int lock inc ret inc inc sub mov (bad) jl stc ret or (bad) fistl xchg adc or nop js jbe xchg mov fild mov mov pop out (bad) jns mov or aad popa pusha mov movsl and (bad) mov jmp and fmulp fsubrs ljmp cmc (bad) jae rcrl xabort (bad) incl fmull add int ss lods push repnz test ljmp enter fdivrs (bad) jecxz or imul ljmp push loop mov mov jle repnz adc call xlat stos pop jne dec xor (bad) (bad) decl imul sbbl pushf push jle cld nop or test lcall and mov (bad) push clc fdivl (bad) (bad) (bad) decl jns int cli sbb addl repnz aad or dec lock leave cli (bad) jg addr16 push cmp push adc out adc (bad) incl stos cmp in hlt enter xchg jg aaa dec (bad) arpl lods or ret xor mov mov lcall sbb cmpsb in fwait addl (bad) (bad) push add push push xchg (bad) mov movl bound cs daa out movsl dec cmp (bad) (bad) call sub fs sub les cmpsb push push call ret inc sbb mov (bad) call mov cmove and imul test (bad) jg (bad) mov add push test mov jb das (bad) mov call iret dec mov push popa mov rcr cmp sbb xor nop (bad) jg dec jle dec (bad) cli lock xchg cmpsl cmp sar les xchg fstps decl sti mov clc ljmp inc jbe gs (bad) (bad) (bad) mov repz mov mov inc out push sub movsb mov (bad) (bad) decl push adc cltd mov lock push pop imul loope pop loopne std loop dec (bad) (bad) jg dec std sub jns sub lods cs push cmp pop lock clc mov xchg mov inc fwait dec sub aam sbb repz (bad) (bad) stc pusha and fstl add cwtl xchg pushf mov push inc mov outsl or (bad) (bad) jmp add in (bad) adc add inc jbe jae lock ret (bad) (bad) (bad) ljmp sarl and cli sbb lret scas pop pop repz jbe (bad) (bad) (bad) call add mov test add pop xor fisttpll rcl cmp insl mov xchg lock (bad) jmp in push jbe inc add sub and xor mov (bad) call xchg inc imul popa fstpt call movsb mov pop std (bad) jmp hlt dec mov xchg mov sbb mov lods inc push mov (bad) (bad) mov (bad) stos sbb ljmp xchg pop jno sar (bad) (bad) inc daa cmp jl hlt out insb fwait dec or add lret mov and mov lcall (bad) (bad) (bad) (bad) stc xchg int3 xor adc sub icebp ds xchg repz pusha push cmp lods (bad) (bad) (bad) inc mov inc clc adc push aam data16 imul sahf js leave int (bad) (bad) (bad) jmp push (bad) lcall jno aas pop mov jl (bad) aad sarb mov and xchg cs pop add pop outsl xor stc or pusha nop (bad) (bad) (bad) (bad) (bad) (bad) cmp dec out inc inc sub inc ret stos fisttpl out loopne mov icebp rcll (bad) (bad) ljmp sbb loopne xor out (bad) leave add xchg imul push movl lret testb jmp (bad) jmp lret out addr16 lahf or xor sub stc in lea hlt adc or mov xchg push jp sub xchg pop imul nop (bad) (bad) jmp dec dec repnz insb mov and push lods push imul pop call inc (bad) (bad) jg inc lret test dec sbb std repz xor mov lcall (bad) (bad) (bad) (bad) push add mov insl sbb pop inc in jmp pop ret jne icebp ss pushf mov call imul adc fstpt popa (bad) (bad) lcall inc inc xchg ljmp push dec or stc rcll fmul outsb js (bad) cmp scas cmp xchg shrb and mov push (bad) cli adc lret jp or cli xor ljmp push stos mov cmpxchg fidivrl pop sub loope mov scas pushf xchg pop push (bad) (bad) (bad) jmp aas and out loope adc jle in cmpsl push lods scas imul xchg sub lds sbb fldcw (bad) (bad) (bad) (bad) aas inc mov call inc mov sub (bad) int lods inc test stos (bad) (bad) (bad) ljmp or add stos jo sub pop in mov xchg insl dec addr16 (bad) (bad) (bad) jmp inc int3 jnp add add insb lods pop imul cmp xchg jmp adc jb lods stc incl into mov add je xor push xor cwtl jp (bad) pushl push xlat sbb pusha sub push aaa aam outsb rorl or das rclb jmp rorb scas fdivr pop mov incl das test hlt dec push xchg or out adc mov (bad) (bad) (bad) (bad) fmuls add outsb add xlat sub test hlt mov fdivl scas in jmp decl cli call and loop scas in arpl mov mov jbe push fisttpll sbb fs gs adc mov lods xchg dec adc pop or lods mov decl bound fmul push jle xchg mov imull xchg push popa jb pop (bad) (bad) (bad) (bad) out popf mov in xor sbb jb push cmp hlt sahf in mov jno (bad) (bad) lcall rolb (bad) mov and outsl enter push (bad) (bad) (bad) jmp iret addr16 xor jmp xor rcrb sbb imul (bad) (bad) (bad) jle cmp sub pushf xchg negl add pushf or push push cmpl adc incl pop in sbb std push cmp pusha dec pop out sbb in out in out push in call mov fbld cmc (bad) pusha mov xor xchg ss (bad) (bad) jmp pminub or fildll mov outsl je add lret mov je or and and (bad) (bad) decl ret rolb sti sub jge,pn push jg sub cwtl (bad) stos mov push out (bad) (bad) pushl sbb jge adc jno dec xchg fchs leave les add (bad) (bad) (bad) cld rolb mov cmpsl pop inc or cwtl fidivl enter add mov out lahf aad in stc (bad) (bad) (bad) (bad) sti cmp popf pusha xchg imul lcall add pop daa push insl (bad) (bad) (bad) (bad) mov das cmp cmp fs (bad) fs or pop adcl (bad) incl add push cld jmp aas and fwait popf xchg xor test or jne (bad) cmp mov pop sub int3 out mov jbe cmpsl cltd cmc clc xchg std jp (bad) (bad) lcall pop aam (bad) cmp inc stos dec les test xchg push (bad) icebp jae incl fcomip cs rorl xchg mov and fild dec mov or cli add and jno (bad) mov es in push (bad) (bad) (bad) dec movsl inc clc push lcall cmp or in dec cld decl negb mov adc enter loope cwtl adc mov mov sti gs lcall inc pushl cltd pop stos and divl ret lods ljmp imul fisub sub (bad) ljmp insb inc xor jmp add repnz out in in pop inc roll (bad) (bad) ljmp xor mov inc add mov ret sub jae notb cmp (bad) (bad) mov and mov (bad) xchg and xchg xor push mov and (bad) (bad) call sbb ljmp dec in movsb push repz rcll add sbb (bad) mov aam cmp adc jo jle dec outsl fwait cmp jnp mov out mov ss outsb mov jbe pop and sub mov (bad) (bad) (bad) (bad) fldcw (bad) push shr xchg xchg sti and subl and mov in (bad) (bad) (bad) (bad) decl mov mov aam mov roll lret mov aam iret std repz repz (bad) (bad) mov pushl insl cwtl es (bad) sub inc push shr pop adc (bad) (bad) fisttpl adc and push in jl mov std xor test pop (bad) out (bad) (bad) (bad) (bad) fmull sbb pop xor jno and out mov adc ret fiadd adc (bad) (bad) call mov sbb mov lret inc arpl insb ljmp ljmp sbb mov std adc add cmp lahf xchg or inc lods mov clc (bad) inc mov (bad) push dec das push sarl dec (bad) decl xor mov inc adc (bad) (bad) (bad) (bad) (bad) incl ret mov push (bad) int add movsb aad xchg shlb aaa push rorl (bad) (bad) ljmp lock fcomp mov into fisub xor scas jecxz sbb xchg data16 loop sub sar sbb (bad) adc arpl iret into jge dec push sbb ss (bad) jnp (bad) (bad) (bad) mov insl and test dec fwait jmp out lret push mov jno (bad) ljmp es sbb shll push pop les xor mov (bad) jmp add inc pop movsl mov dec imul stos (bad) das cli push and or and test cmp sub bound mov cld dec fcmovnu in cld mov (bad) jmp jb sbb push leave jmp pop pop inc jns loop push out js arpl push inc push push mov cmp jg (bad) sti sbb add mov inc lret jo mov pop mov (bad) pushl icebp cmp xchg inc test jp inc test decl pop jg test pop out xchg dec mov lcall (bad) sbb jl out daa and fsubrs push lcall mov or lock pop sub bound lcall (bad) dec sbb and aad je cmovle aas (bad) pop xor xchg fs cld hlt (bad) (bad) (bad) js mov mov inc push xchg mov inc arpl inc mov jle and (bad) fcomip fcomip adc adc cmp (bad) into rcrb push dec cmpl (bad) (bad) lcall aam jmp jae mul aam jns push stos add ds xor mov (bad) es divb ljmp mov out jne sti bound dec loopne fbld push sbb cltd mov or xchg mov es jmp jne xchg (bad) les test mov jb adc daa sbbl xor fbstp js xor out add insl ja sbb orl outsl adc (bad) out mov sarl movsb bound dec jnp mov incl stos js pop push sahf popa (bad) push add mov mov and xchg mov insb cwtl push xchg (bad) jmp dec (bad) or out mov lret es (bad) das ja mov jl xchg sbb fs das mov and loope push ret icebp les (bad) (bad) (bad) incl add xorl mov imul out stos mov in dec jg mov (bad) jmp imul mov repz decl add xchg push sbb push es lret push push stos sbb jno lret cld (bad) (bad) inc mov js pop dec lea pop out pushf insl add mov xchg add jne sub dec (bad) (bad) call push addr16 add xchg inc cli rcrb cltd enter aam add test (bad) jmp mov lds test scas cli scas jne inc and imul pop jle pop loop fistpll je push lcall lcall adcl fsubl mov popa lock mov add (bad) (bad) ljmp sub (bad) jo rcrl jge or mov jnp or (bad) (bad) (bad) incl mov fstps jno lret push push mov sub fldl addr16 in push aad (bad) jmp popa (bad) rcll inc enter add mov out mov (bad) (bad) jg cmpsb add xchg push mov ficomp or fnstcw sub sub mov inc in std mov jecxz sub jle cmc or fnstcw sub jb mov mov push mov sub push xchg mov iret jmp xchg in add fldl adc add fucomi push jnp push add mov out sub fnstsw ret (bad) (bad) inc cltd adc adc push sub out pop mov out idivb and lods push cmp (bad) jg je insl fimul cmp pop pop sti jge cmp ds (bad) (bad) lcall lds or in mov xor dec or (bad) (bad) (bad) (bad) dec xor dec lahf loop andb idiv sub jle jo mov xchg pop xchg and cld pop (bad) (bad) (bad) jmp adc ret sti leave sub mov enter in nop xor fnstcw xchg jle (bad) (bad) incl xchg sar (bad) scas ficoml inc dec int xchg fldt jl adc fistl out jp dec test enter dec aad push xor fildll nop mov loope bnd lfs mov repz shlb jb (bad) (bad) (bad) fcomip rol and sbb adc xchg aas lods fmulp lods orb imul (bad) (bad) (bad) jp (bad) fs or sub lea push imull mov jp mov (bad) (bad) jmp outsl rorl test outsl andb jmp aaa fisttpll fistl arpl mov (bad) (bad) (bad) call outsl decl pop mov xor shlb in push into mov cli decl inc div pop push out mov ja mov mov push popf lret rcl test sub (bad) lcall and mov lods sbb sbb cli sub sub mov fbstp orl mov aam mov lret (bad) (bad) (bad) ljmp xchg ss mov dec lock fisubr sbb out (bad) (bad) incl (bad) and fmull cmp arpl je das mov jbe scas cmp lods orl loop (bad) (bad) (bad) inc push daa sbb nop mov loopne stos dec or add sub sbb fildll es sbb std (bad) mov (bad) mov daa mov sub dec mov pop test dec inc inc push push sub (bad) ljmp xchg cs mov xchg sub and (bad) and call push mov lahf jae xchg cmpsl sub addr16 mov jae js pusha (bad) (bad) (bad) (bad) jmp movsl mov incl jg mov jne mov or fincstp cmp push lock mov pop loop pop push push (bad) mov add xchg inc (bad) lock push or jmp negb addb fisttp out dec out cmp push (bad) (bad) (bad) out (bad) add fidivr or add mov and push sub mov aad cmp pop xchg sbb (bad) lcall test pcmpgtb ljmp inc nop xchg mov sahf xchg mov xchg xchg ljmp lahf lods cmp imul mov fs push (bad) cmc or jo jae je cmp mov mov jecxz (bad) jne out cs aam addr16 mov pusha data16 pop pusha mov les enter jae (bad) (bad) (bad) push jge (bad) pushf dec mov pop aaa movb xchg adc leave inc sub pop sub (bad) decl sbb cld divps ret adc jo push and sub test mov (bad) (bad) jg int insb jecxz mov in adc repz ja,pt jmp adc pushf mov decb inc inc inc push xor xchg lods test stc cmp test jne cmc mov (bad) jg decl rcrl das int3 push lret movsb and add xchg and xor add sub mov sarb cmpsl ficompl cmc mov stos (bad) jmp xchg inc call or dec xor jg dec sbb add js insl push hlt stos adc pop mov into (bad) push jg fstpl dec sub jb push js inc test or (bad) (bad) (bad) (bad) call push out iret les pop mov dec outsb repz sbb xchg mov stos call adc out (bad) rcrb pop lahf xchg ja ret adc mov (bad) jg (bad) mov daa add push xchg call mov cld pushl repz stc mov mov xorb (bad) decl push xchg addr16 jle ja ds (bad) xchg or jbe pop hlt (bad) ljmp cmp inc jle je je adc jecxz dec in jle cs jno xlat mov int dec scas in das jp popa push (bad) (bad) (bad) push test lods push cmp or or (bad) lods pop and lods xlat mov (bad) pushl dec pop mov or ds outsl push cwtl sub jp and (bad) (bad) (bad) incl pop sbb (bad) scas imul repnz int3 pop popa in jp je and insl push jmp pushl pop popf xchg adc dec dec lea (bad) (bad) (bad) push (bad) mov (bad) mov inc (bad) fisttpl push mov int lds xor sub (bad) (bad) (bad) jl mov pop (bad) leave stc popa jne in cs pushf push imul clc int3 clc out dec pop (bad) incl (bad) sbb fadds call test ja lea daa js (bad) ljmp lcall pop cmp mov icebp dec out sahf cmpsl jnp loopne (bad) lcall ljmp and xchg rol adc js test xchg icebp int3 jmp (bad) lcall into push ret xchg inc jle cld jecxz cmp xchg ljmp cli mov rdtsc js ret (bad) (bad) mov nop test rolb cmp test or and loop test inc insl popf (bad) mov lock in roll push dec outsl sbb incl ja cld popf fnstcw (bad) jno mov (bad) incl xchg dec sbb mov addr16 mulb into cmp xlat and test jmp fiaddl jmp fistp je mov xchg (bad) fcoms (bad) (bad) (bad) jnp sbb lock (bad) dec adc repz cli pop (bad) (bad) (bad) ljmp cwtl cmp rorb (bad) inc stos lcall add lock dec ja (bad) pushl stos adc dec fsub fdivs adc sub jecxz (bad) (bad) (bad) stc push cvtps2pd out mov rcrb jp cwtl in shl sub sub fmulp rol enter (bad) lcall mov out loope adc test data16 mov inc dec icebp cwtl sub xchg incl call sahf mul lods dec jb adc pop push repnz or lock (bad) push push pop insl mov jle and popf fdivrl push xchg xchg sbb xor loopne (bad) jle je test or sbb mov pushf mov scas push dec jmp mov leave inc scas adc inc and inc mov (bad) (bad) (bad) call leave pop outsl sbbl and pop ljmp add cwtl scas jb pop rorb push ja cmp (bad) pushl dec popa gs js idivl scas rcrb jmp sbb (bad) (bad) jg (bad) mov lret cmpb cmpsl mov push (bad) sub ljmp aad (bad) (bad) out pop rcrl push movsb cltd mov cmpsb pushf insb nop push cltd xorb inc ljmp xchg inc pop movsl aad cmp dec push push dec mov jl addr16 call loop xchg idivl and xor hlt inc fnstcw (bad) (bad) decl bound pop add ret (bad) jb fucomp xor push (bad) xchg adc (bad) mov hlt fwait mov xchg int sbb cld in std jecxz orb addr16 dec (bad) (bad) (bad) (bad) fisttpll mov mov js fsubl scas addb xlat arpl (bad) adc rcr pushf and inc and outsl (bad) out (bad) (bad) mov test mov mov sbb mov ficoml aam cld lods aas push cmpsb (bad) (bad) in ljmp jl pop adc xor ljmp push xchg pop stc push mov arpl mov jo (bad) (bad) jmp js mov out loop inc in das rolb pop aad sbb push (bad) (bad) (bad) cmp dec jne jae dec xchg pop leave pop outsl cmc mov pop addl push enter sub (bad) (bad) (bad) incl xor sub scas lock test stos mov fcoms push pushf and mov aaa pop lret mov call sbb dec jbe sbb dec inc mov (bad) cmp call xor mov and cmp push fistpl aad adc adc cmp (bad) call sbb and push sub sbb ljmp fildll hlt inc rcrb push or jae sub sbb xor jb push (bad) (bad) (bad) inc adc inc jno xchg scas xor pop movsb scas adcl sub cltd arpl cld mov popa movsb adc outsb (bad) (bad) (bad) dec add mov xor loopne dec mov mov mov movsl out add lcall ror sarl and xchg icebp arpl add add lock mov xchg rcl fildl imul xor lret push cli dec ficompl mov movb pop inc push lret xchg and (bad) pushl fldz arpl daa movsb mov adc adc mov mov pcmpeqb (bad) (bad) (bad) ljmp sahf lock sbb adc cmp not pop dec jge mov sarb cmpsl inc sarb (bad) (bad) (bad) decl mov test add inc inc cmp daa dec jb (bad) (bad) (bad) (bad) (bad) sbb das enter adc hlt aaa leave mov aaa lret out mov js mov (bad) pushl mov pop mov inc je mov jno out incb mov xchg push or (bad) decl dec loope xchg push mov jne cmovnp fcmove adc inc push pop nop dec mov cwtl jg and icebp jns aad cmpsl call push mov ljmp stos pop scas jno push outsl outsl mov cmp mov mov or mov daa aad stos scas sbb cmp mov adc mov (bad) sub mov mov adc cli xchg mov cltd movsb (bad) (bad) or (bad) (bad) (bad) stc mov push loopne out sbb xor pop sbb (bad) xor dec data16 decl lock dec mov or mov stc daa pop mov (bad) fist dec push or sbb jp (bad) pushl cmpsb out (bad) jnp cmc push add inc lock lcall cwtl sbb roll inc sbb out mov je (bad) xor decl or mov pushl sub xchg out mov sub add imul pushf es xor outsb sbb popf inc clc fisubl lahf pop bound (bad) (bad) (bad) fdivrl ret mov call jno add pop loope inc add adc (bad) fisttp add mov xchg push jb (bad) (bad) (bad) inc add mov (bad) push xor aas ljmp push btr sbb mov xchg mov or std sbb mov in jge gs mov sbb pop (bad) (bad) (bad) pushl movsb call popf sbb lds lds (bad) jle fdivrl cmp (bad) (bad) jmp xchg cmc push jbe test pop and iret and pop jbe mov mov fwait xchg dec fsts or adc (bad) (bad) ljmp inc xchg (bad) je rorb pop icebp decl data16 push and fcomi insb hlt loope mov (bad) (bad) (bad) jmp addb pusha lahf sub and repz les lea and cli jae inc call push or test xor push loopne (bad) push inc xchg push (bad) dec aad (bad) (bad) (bad) call jne pop popf iret lcall xor jbe int mov (bad) sub enter (bad) (bad) pushl jmp or pop aaa movl xchg pusha fildll ljmp repz push cmp mov cltd (bad) or popf (bad) xlat jns mov push sar (bad) mov test inc or jle ljmp subl push add or jnp addr16 sbb pop lea xchg xchg mov push cld (bad) (bad) cmp push enter pop fstpt cmpl (bad) (bad) ds stos stos loope lret xor xchg jl pop inc mov and dec test (bad) (bad) pushl (bad) outsb (bad) jns negl insl pop push sub jno call xchg gs cmp fsts in jecxz jno jg sbb pop repz (bad) (bad) (bad) mov arpl sarb adc push xchg mov adc and or mov (bad) jge ljmp adc mov mov mov sub pop aas popa ljmp adc test (bad) rolb sub repz inc xchg stc mov mov insb and (bad) and add and pushf lret push mov jg and movsb icebp jo fcoms sbb push cmp xchg push adc dec and repz sbb lods xor fiadd pusha cmp cld int3 lahf mov sarb pushl lret mov hlt xchg fsubrl sbb mov shl adc in jecxz (bad) call (bad) outsb xchg jo repz inc mov add cli or mov (bad) (bad) (bad) (bad) mov lods and pop and cmpsb and and shlb addr16 fwait sub (bad) (bad) (bad) incl mov and stc test fstpt sub scas clc (bad) pushl orl js (bad) push pop out cld adc dec fldl add (bad) (bad) ljmp jmp fsubrl (bad) sbb in jne ljmp cmp ss mov (bad) (bad) (bad) (bad) lcall outsl call xchg movsl loop sub cmpxchg mov lock (bad) fsubrs (bad) xor ret in and pop idivb sarl adc (bad) (bad) incl push mov mov or inc xchg adc icebp add (bad) (bad) decl cmp faddp leave (bad) lahf sub dec or push icebp cmp nop cld push mov jmp cmc loope ss xchg lret in cmp pmaddwd lret push ret inc shlb bound sti (bad) (bad) jg subl rorl cmp push push aaa sub jge cs (bad) (bad) call dec inc xor ja dec mov stos mov or sahf adc sti (bad) (bad) mov insb pop jmp lcall add insl fistl daa gs (bad) (bad) decl xchg adc fdivrl test sbb ja or fildll pop test (bad) pop fldt sar scas mov mov sub mov push movsb outsl (bad) (bad) (bad) incl dec mov push (bad) repnz mov dec cmp jge pop iret mov (bad) (bad) pushl rcr ret adc aad mov add add inc (bad) (bad) (bad) jg ds out jo andps or dec sub repz mov frstor (bad) call sbb mov push xor insl mov in sub and mov cmp aas xchg stos adc adc (bad) xchg xchg (bad) (bad) (bad) incl xor stc add cmp in xchg sahf ljmp xchg enter int outsb push mov cld call cld stc fbld test sub popa ljmp inc mov (bad) mov mov fist mov cmp dec pop mov (bad) (bad) pushl pusha cmpsl sahf or mov add iret dec jae and cli (bad) dec sarb inc jmp push xchg cmp ret (bad) push out or xor mov and xchg add fiaddl mov mov inc pop data16 (bad) (bad) ljmp leave and xchg cmp andb out pop cmpl and jno mov mov (bad) inc inc cmpsl (bad) les js sub fs les mov ja or fs (bad) adc (bad) (bad) lcall xchg pop pop mov jb pop xor fbld and bound (bad) jp xchg imulb lcall in add mov cld add into test jecxz mov test outsb jae or adc inc (bad) (bad) (bad) jmp add inc lock subl jle sti ds pop push mov pop push mov call add stos mov xor xlat jo jmp fwait lods sarl xchg cmp mov inc out add outsl pop xchg inc mov pop fistp dec push stc insl in inc pop sahf outsb (bad) adc (bad) fwait stc mov (bad) mov (bad) into adc add in idiv jg std add lds pop popf push pusha xchg or mov fcmovnb popa std (bad) jmp cmp iret addr16 xchg xor mov leave dec out incl ds add pop sub icebp mov lcall ss lcall mov lds add ljmp add aas out and push imul cmp (bad) (bad) (bad) lcall sahf push jp sbb arpl xchg sbb adc dec cmp mull (bad) (bad) pushl cmpsl sub movsl insb (bad) mov jmp and sbb jne in jecxz (bad) (bad) (bad) call lea inc push ja or inc sub or push mulb (bad) ret push mov mov aaa dec loop fs sub (bad) das inc cld xchg int sbb ss (bad) (bad) ljmp inc pusha mov stc jl mov mov mov lods ret sub fdivl xlat out mov mov xlat xchg out das dec adc cmc pop add out insb sbb adc sub mov (bad) idiv jb ss push movsb fmuls mov imul (bad) (bad) jp push pop mov addb mov jle or jne jbe into rorl (bad) (bad) lcall mov push rclb sub jmp adc int3 cli adc xchg xchg xchg mov incl xor leave mov fwait push mov lcall fdivl (bad) (bad) (bad) jmp push jmp pop adc mov das xchg fdivs aad adc mov (bad) mov rcrb stc out or sbb lds (bad) (bad) inc jmp push popa cmc or pusha cmp pusha mov dec in jl push movsb adc (bad) (bad) (bad) pushl sbb jbe je xchg loope popf sub add and ds mov (bad) (bad) (bad) ljmp sub jno lock scas add insl mov inc loop out iret mov push pop lds cmc mov jb push inc mov notl imul jbe mov (bad) jg jo sbb push jo jnp jnp dec inc jo pop inc inc imul inc mov (bad) cmc dec pop (bad) addr16 jecxz mov sub call movsb loop mov lret xor push pop negb cmp lret lahf push lock (bad) lcall push hlt jno fisttp adc ret sub aam cmpsl push enter cmp (bad) (bad) lcall or inc ja ja add movsl jecxz jo cwtl xor fnstsw loope mov mov ds nop (bad) (bad) (bad) push lcall jb pop das add movsb jle adc shll cmpsb mov je das add incl xchg jnp fwait inc sub mov or (bad) (bad) mov sahf xchg sub lods jle ja mov es mov test pop addb lock loope loop and movsb pusha (bad) extrq inc aam (bad) jg outsb sub hlt pop movsb (bad) sbb xor int3 cmp movsl les pop (bad) call cwtl mov cmpsl xchg aas sbb sub (bad) (bad) fcomip add ds dec scas xor subl dec push pop jbe (bad) (bad) (bad) jmp xor push mov (bad) or sbb aad mov out out push mov rcl (bad) (bad) (bad) cmp adc sbb xor pop mov fcmovbe mov (bad) mov test mov (bad) fs inc mov ret les sbb mov and (bad) (bad) ljmp fidivr cli icebp cmpsl movsl jae js xlat mov shl dec movsb mov dec int mov pop cmc (bad) out push push sbb sub xlat rcll (bad) adc fild jecxz mov mov xor inc pop (bad) rcrl (bad) incl repnz es cmp mov leave adc addr16 xchg (bad) ljmp or or xchg mov ss cmp adc fucomip (bad) (bad) (bad) (bad) ljmp mov mov sbb je xlat outsb mov dec repz ret (bad) call jbe sti push pop sbb out sub hlt imul icebp xchg sub daa push cld adc (bad) (bad) (bad) (bad) out push leave pop pop ret out maskmovq das cmp jne xchg inc add cmp addr16 ret (bad) pushl mov sub adc inc jecxz test (bad) and (bad) (bad) (bad) decl jp (bad) mov repnz xor popa shr popf adc daa dec adc (bad) (bad) (bad) lcall test cmp add xor es aad cld (bad) cmp (bad) (bad) (bad) incl inc loop int3 stos cs xor and cmp push andb push pushf add lods (bad) lcall call mov frstor adc lods xchg sbb loope stos mov sarl (bad) (bad) jmp cmp call add rcll popf scas daa out push sahf rcrb (bad) (bad) pushl add int cmp mov loope xchg lahf out fnstcw mov stos sbb sar (bad) incl popa arpl add add insb fsubp outsb out dec lock jmp ljmp je mov push outsl push aaa les jns insb out call iret fisubr xchg (bad) jmp cmpsl jmp or push sbb or in push (bad) mul xchg cltd aaa std (bad) dec aas mov pop pushf pop adc xchg leave add cmp in clc das adc jmp jg cltd jp loopne cmp adc cmp dec aaa (bad) (bad) (bad) mov (bad) fnsave lret lds outsl sar out pop outsb outsl cld pop xor ret sahf (bad) (bad) (bad) (bad) jns ja dec jg xor call or popf imul inc sbb into cmp lock (bad) cli rcrb out mov adc dec mov cmpsb pop jnp lds lock inc test aas sarb jl imul push push xchg (bad) (bad) lcall loopne and shrb and mov cmc or mov fsts mov mov mov and jp push cli xchg ja fs (bad) (bad) push dec dec inc into lea scas push testb test (bad) xor repnz adc mov lcall jae mov dec cmp cs push cs in test std mov cmp in sbb ljmp cwtl jp fnstenv loopne rcrl and add js mov adc (bad) call push cmp inc cli popf sbb mov test (bad) ljmp sbb adc mov sub call push adc dec mov loope out push mov sub roll int jecxz adc ror sarb fsub xchg sub cmp cmp pushf pop pop cmp xchg (bad) call or insl mov clc test sub in lods leave or (bad) (bad) mov adc jae jmp push repnz fs or scas xor (bad) (bad) (bad) out push stc insl daa and add xchg xor in cmp ss jne mov mov shrl sbb in (bad) decl ret jnp cmpsb adc xchg scas jmp (bad) add movb stc ja mov jns test push imul mov jl xlat popa (bad) int3 std cld aaa adc push fcoms jg xchg test lods pop add (bad) (bad) lcall cld lcall jecxz out fs xchg adc fstp cmpsl fld add leave addr16 in pusha add test xchg add mov jb pop dec xor mov (bad) pushl cld (bad) mov (bad) fisubl adc (bad) stc push fisttp or (bad) incl loope popaw lea (bad) jnp int3 repz popa push aad jl jmp arpl jb lcall sub jbe jne,pt (bad) (bad) mov ret (bad) (bad) jmp or stc and lds mov test add sbb or pop mov outsb sbb repnz jl mov inc inc cmp dec lods xor cli lcall cs decl sub lret or loopne xor (bad) or popf (bad) xlat (bad) mov hlt enter cmp ds xor (bad) (bad) incl fistp inc negl jno mov pop jno in lods icebp ret fimul fdivrs test xchg mov sbb xor mov fiadd ljmp enter (bad) jg xor out sub imul fcoml imul pop or (bad) in push call mov scas clc (bad) mov push jno mov popa icebp movsl jp xchg je jecxz (bad) fsubrl shr (bad) (bad) (bad) incl shlb loopne mov inc pop xor dec pop insb sbb mov sub hlt es (bad) (bad) jmp loopne xor aam and rcll mov data16 lret stc test pop and push cs mov cli xor mov xchg add sub jp cmp scas (bad) (bad) (bad) pushl and daa ja mov ss and sar adc rcrl outsl cmpsl pop aam (bad) (bad) call enter (bad) push mov sub sbb scas dec repz mov jecxz mov mov roll sbb ss mov xchg (bad) (bad) (bad) decl lcall sbb fidivr lods xor sbb jge sar (bad) decl jle pop xchg sbb or fucomip sbb mov ja xchg aaa xchg mov (bad) (bad) ljmp jge push or test dec xchg jb dec mov cld jmp rolb in pusha cmp icebp jg or xchg dec jne loope nop push insl jmp (bad) (bad) (bad) ljmp cmpsl add sub test add pop es mov mov ds (bad) (bad) call push jnp dec das xor cmpsl popf ljmp out lods stc ss (bad) pushl push push xor sbb fisttpl xchg fs neg push sbb mov sbb addl test (bad) (bad) (bad) jmp into push sub jl mov add icebp (bad) xor dec (bad) pusha xor (bad) ljmp mov out dec subl hlt (bad) mov fcoms xchg jmp ljmp pop (bad) jl or lds test add xor testl pop inc insb jbe jl and cmc (bad) jl scas jae (bad) or ja xchg fwait dec popf imul outsl adc loope in jbe inc cmp loopne jecxz mov (bad) cmp dec pop adc stos adcl (bad) (bad) (bad) lcall test scas xchg cs iret mov cltd and das mov imul pop xchg (bad) (bad) (bad) inc or pop push xor aas je pop mov cmp cmp dec pop adc pop sbb stc pop (bad) ljmp incb insb cmc fsubrs popl out outsl mov (bad) (bad) jmp in jle loop rcrb dec aaa xchg clc dec clc jno inc and movsb pop lock (bad) decl outsl pop cmp fwait push mov mov leave push inc ds popf fcomi adc (bad) (bad) arpl sub inc (bad) inc mov inc push mov fwait mov xor sbb hlt and (bad) (bad) (bad) inc scas loope sbb and push ja mov into divl leave rolb mov (bad) (bad) (bad) incl rolb add adcl rcrb stos push sub push sar and (bad) (bad) (bad) (bad) (bad) stc incb aaa insb ret dec lret (bad) mov in dec mov cld pop (bad) cli shlb adc xchg add outsl fsubl sbb leave mov pop cmp (bad) (bad) (bad) cmp xor mov cltd fcompl add mov aam dec lret (bad) (bad) (bad) call cwtl aaa mov push push sahf cmp imul push dec jmp push jnp (bad) (bad) mov pop and dec lret jl mov adc cwtl cld inc xor mov pop cmp pop (bad) or mov ret mov movsb inc add mov or (bad) (bad) (bad) call fbld jmp mov or push test leave aam imul ret push bound ret or (bad) (bad) (bad) ljmp insl in aam mov xchg mov xchg mov jbe push daa aam cmp imul clc or lock push into jge test (bad) (bad) in lcall jle mov sbb (bad) out cli call int add sub mov push inc sti mov loope xchg dec push scas mov shrb aam xlat mov mov jnp mov ljmp add mov iret or int cltd mov lret mov fisttp imul dec (bad) (bad) fcomip sbb xchg xchg icebp mul jecxz lods pusha lds adc das (bad) repnz (bad) jmp incl sbb mov test pop or dec movsb mov fwait jg xchg (bad) (bad) jmp mov mov sti negb ror dec sahf test jb mov scas mov sbb jmp add (bad) (bad) mov imul push sbb les stos mov sti pop fdivs mov clc fbld stc mov mov inc inc scas insb mov out push jmp ds adcb icebp cmp sbb aaa (bad) cmp incl mov jne pop jl insl cs mov (bad) (bad) (bad) push xchg cmp iret pusha xchg inc xorl nop fildll adc in daa mov mov sahf stos jmp aam pop scas popf add jnp fbld xor fwait xor icebp mov mov xor ss jmp std push xor in fisttp jg arpl xlat (bad) (bad) push rcr and and stos clc pop out jge stos lds xor (bad) (bad) (bad) jg sub out stos mov cld sbb pushf lcall sub sti push lcall dec dec (bad) rcr xorb daa push lcall mov inc lcall pushf (bad) (bad) out clc mov fidivrl sbb fcompp lcall out and (bad) (bad) (bad) lcall aas mov fdivrl shll add (bad) sub lock jle adc cmpsb xchg addr16 pop lahf enter sbb (bad) (bad) lcall pushf push sbb hlt repnz mov cmp (bad) std call loopne mov xor add push xchg xor cmp ret dec or (bad) (bad) incl and add popa pop stc in push pop mov cs jp jne jl cmc pop std (bad) (bad) (bad) decl fwait popf (bad) hlt (bad) jge or push lods push pop sbb sbb cltd das mov stos sbb hlt ljmp jp movsb movsb lcall xlat in dec adc (bad) lcall (bad) adc (bad) xor jo rolb xchg into aaa jmp or (bad) (bad) (bad) ds out loop or xchg dec outsb mov mov inc out inc mov ljmp (bad) (bad) (bad) fcoml sbb flds sbb pop inc inc mov adc (bad) (bad) ljmp inc aaa jmp lcall push xchg mov inc fwait cmp (bad) (bad) (bad) call sbb push and stos cmpsl les dec lret pcmpgtd (bad) (bad) pushl and es add pusha mov dec xchg xor repz mov and jg lock repnz inc lods fdivrp mov ds mov push pop push mov decl ds jp pop ja (bad) loop adc out push (bad) (bad) (bad) decl jp (bad) push retw cmp leave mov push and les out push repnz fstpt (bad) (bad) (bad) cmp test mov adc sbb in das mov cmp dec (bad) (bad) (bad) dec push pop mov sbb out or popf lods xor lock (bad) jmp mov bound and les pushf fcomp pusha sbb (bad) (bad) incl (bad) pushf or (bad) mov jae inc pop into loop mov (bad) (bad) (bad) decl lret sub inc aaa push mov ljmp add pop das and (bad) call out mov call dec xchg jne sahf xchg stos add push pop inc movsb dec xchg out je (bad) (bad) call pushf inc sub outsb xchg push cmp mov test sbbl lcall out or lods icebp js inc data16 sub and out sbb sbb negl pushf scas rolb (bad) clc inc pop mov mov int3 clc sub lock xor test shrl je dec out mov ljmp test sahf sar stos int cmp dec stos iret cmp cmp (bad) (bad) pushl inc daa lods pop (bad) cltd mov cmpsb mov adc xchg dec jb cld (bad) jg and scas inc enter push in orl (bad) (bad) (bad) jmp push sub adc scas js mov lock mov mov and inc xchg bound aaa dec js xor mov ficom addr16 ljmp xchg (bad) out dec mov push cmp mov ret mov cli pushl movsb inc dec out in add fdivrs (bad) (bad) (bad) call sub pop scas pop pop lock in xchg pop insb mov push pushl (bad) pop outsl jp lock ljmp cmp (bad) (bad) (bad) jmp adc fnstsw jbe jp inc jl fwait xor daa cmp push aad mov jp frstor push sbb and adc ja dec xor (bad) (bad) mov (bad) fldcw jg inc mov in lea pop cltd mov decl pop jno push xchg push and scas lock inc jbe jo jo mov dec inc (bad) (bad) (bad) (bad) mov jecxz jne jbe add mov push mov imul push jg sbb mov (bad) mov idivl ds cli pop cld aas cmp cs test cs out cmpsl dec out mov (bad) dec xchg adc dec cmp mov outsl dec or (bad) (bad) incl mov dec inc xchg dec mov int3 inc in je repnz imul (bad) (bad) call cltd ds mov es cwtl xchg test (bad) enter scas mov lcall mov jne call ret mov fs (bad) jmp outsb adc xor pop fcompl push cmp int3 mov outsb push sar call jb cli adc push in or jecxz push (bad) (bad) (bad) mov int3 mov pop icebp push sbb int cmpsl jle into notl hlt in mov jle dec (bad) (bad) (bad) incl inc xor mov mov xchg jmp xchg cli or add (bad) call push int jnp inc stos out nop fiadd sbb (bad) (bad) (bad) pushl out dec pop pop dec cld out push enter sbb push sbb jnp lcall stos and mov mov cmp mov out (bad) or incl jl xchg pop add push mov dec inc and (bad) lcall mov pop lea pop int xorl test mov scas lds movsl pop in sarl dec cmpsl (bad) call cld mov loop and and or jmp addr16 cmpsb mov lcall sbb mov jb cs cmp mov call pop pop es dec sub movsl or xor movsb (bad) insl pop rcl add (bad) (bad) (bad) (bad) in ret ja inc sub fistl mov je mov jbe adc jnp decl incl jns mov dec (bad) mov pop push dec (bad) int3 movsb repnz (bad) jg dec xchg mov mov push pop cmp clc out mov jecxz pop lock jns insl inc adc push jb cmp sbb sub xchg dec or test dec adc push aad inc stc mov iret mov xor (bad) stos (bad) incl add mov (bad) icebp cmp mov inc (bad) (bad) (bad) (bad) call icebp adc (bad) or mov (bad) movsb adc dec in pop xchg adc ljmp inc pop push loop pop es addl aad push xchg mov daa mov add call adc mov fdivrl mov jecxz push xchg in xor mov push enter (bad) (bad) inc insl out in mov or xchg jb (bad) mov fnstsw xchg xchg mov lea (bad) jmp faddl aad jl push ret fs sub aam mov adc lret jg,pn repz push scas mov ljmp add (bad) (bad) (bad) (bad) cmp aad test push mov pushf pop fcomps es (bad) cli inc (bad) (bad) (bad) (bad) mov dec repnz adc pusha mov mov std in and (bad) (bad) call adc push cmp fdivl cmp add inc jmp (bad) cmc (bad) call push lods mov in xchg or push mov dec (bad) testb or (bad) (bad) (bad) jmp repnz clc or pop jmp in jmp shl cld pushw mov sub (bad) (bad) ljmp insb push mov test and cmp decb lahf xchg or sbb scas insl in sub (bad) (bad) lcall dec test shlb inc add inc insb popa (bad) mov xchg add cmp dec mov xchg scas sub lods bound dec pop or xchg dec sub out aaa adc cmpsb (bad) incl mov pop adc pop cmc fstps (bad) out les cmc movsb jmp mov (bad) (bad) (bad) (bad) pushl add cmp xor jg fistpl and je jne hlt ljmp cmp jno add shl dec in (bad) (bad) (bad) inc mov dec test pop sbb push pop adc fdivl lea xchg (bad) (bad) (bad) push rcll mov ljmp iret mov pusha imul cmpsb cmp (bad) (bad) (bad) lcall sahf lahf popa jns pop jnp jl insb mov adcl mov xor jle fidivrl pop das dec mov hlt mov popa or xlat xchg mov (bad) (bad) call dec lods ds mov cmpsb cmp pop mov sahf mov mov xchg (bad) call std jne out clc ret ficompl repz sub hlt sbb aas insb in (bad) (bad) (bad) jmp or dec pop aas mov test adc sbb add xor or xor out and je pop fstpl fwait push iret (bad) fistp movsb lea cli pop loopne (bad) push lock mov ret repnz and enter fiaddl or add push dec xchg cmp mov es aam xor cmp inc inc xor jb jb push mov mov insb mov mov push (bad) xchg mov sub pop dec push aaa lea mov and jnp outsb xorl dec cmpsb push cs adc inc addr16 loope jbe mov (bad) lock stc dec push and inc test sti (bad) (bad) (bad) ljmp orb test cli fwait mov fisubr xchg rolb fdivr (bad) (bad) decl add insb int inc dec push in lock int and hlt mov (bad) (bad) (bad) decl xchg pop mov cmpsb movsb jl jno pop push (bad) dec push cmpsb pop jg mov inc jmp mov mov sbb xor push mov sbb stos jno cwtl (bad) (bad) (bad) jg into cmp lods sub xchg jno lahf dec ja test push test inc (bad) (bad) (bad) pushl jns mov pop (bad) sbb rorb adc inc mov xor cmc das cli push cmp int3 xchg lahf (bad) dec dec lock call or sub call (bad) (bad) (bad) ffreep mov adc sub jmp pop fimul cmpsb dec add (bad) incl inc push hlt cmc add stc cmc pop pshufw gs lcall mov shll mov adc (bad) (bad) pushl enter fadds js or mov xchg add (bad) (bad) (bad) pushl lret test and add push arpl dec aaa fistl mov xor jb ficoml decl xchg xchg mov or jnp mov add shrb adc inc hlt push mov push sub hlt jae (bad) mov xchg mov push inc xchg cmp xchg lret dec cmpsb loope mov scas xor andl bound (bad) jg mov lods loope test mov add (bad) call outsb push outsl call outsl xor les xor fiadd cmp adc xchg (bad) into mov xlat jg dec das clc (bad) lcall cltd sti inc push loopne js push jmp lahf lret scas inc (bad) fnsave fild loope sbb (bad) sub addr16 adc mov jg jbe inc pop push mov fucomi (bad) (bad) (bad) (bad) mov pop cmp (bad) fisttpll pushf xchg shll mov mov hlt call fwait (bad) (bad) call loop push push push (bad) bound ret push lds outsl mov decl mov adc rcll sub (bad) fcmovnu ret xor sbb js andl inc std aaa mov inc dec out (bad) jg jmp dec std imull jmp fstpl (bad) cmpsl adc lret dec pop ljmp pop jecxz mov repnz shlb movsb xor inc mul xor pushl mov dec cmp lahf lods add cld xchg (bad) sbb xchg pop (bad) (bad) (bad) call das sbb aam clc push pop sub add and repz jo (bad) jg call mov sbb mov inc push dec mov (bad) scas xor (bad) push clc mov push sbb or mov dec mov scas xorl jns loope leave in stos sub pop cwtl neg (bad) stc cmp jmp pop (bad) push jno jmp (bad) sbb (bad) (bad) (bad) fsubrl cld or mov (bad) push outsb les add push clc pushf add ret (bad) call popf aas pushf test test and aas jne jno aas jl (bad) pushl rcll test outsb xchg movsl std fildll add dec mov (bad) incl pop mov fstl dec or xor or and add mov mov leave in (bad) (bad) (bad) jmp stos (bad) push mov push out add xchg inc mov lahf add flds shrb xor jmp push jno fist dec mov mov push push scas push dec or jnp nop sarb repnz mov xchg test int lock sbb add (bad) inc out outsb imul and mov call mov pop insl lcall (bad) (bad) inc add popa loope dec sarb out jo push cmc daa mov sbb (bad) (bad) (bad) push and mov jmp mov lret push jne add jns fstpt (bad) (bad) (bad) jg mov lcall aad sub je add movsl rcll ljmp inc out mov push cmp mov xor xchg imul pusha mov xor sbb shl cmp fmuls roll mov mov mov push add push xor xchg scas daa mov add add (bad) jmp cmp sub adc or jo test jle stos mulb (bad) pushl js xchg pop mov sti jno insb or adc loopne lahf sub (bad) (bad) ljmp lahf jbe sub nop sub aad aas rclb das sub sub into gs (bad) sbb testb lret mov inc ss leave repnz les repz call fadd or cld push mov (bad) mov jg (bad) lcall jbe inc cmpsl pop push add mov push ljmp mov adc push dec lcall ds mov mov incl push insl fs jo cmp cwtl fisub rorb mov cmp lret mov xor or ret (bad) decl dec jno fdivl cld ret cmp pop xor lret (bad) dec insl inc adc inc xor imul or fcmovnb out jmp add (bad) mov sbb mov jge dec fs xchg stc or sub (bad) (bad) (bad) cli cmp shll jg push mov icebp lahf and aam (bad) pop xchg outsb sub adc add dec (bad) (bad) (bad) call int mov mov push adc cli sub stos (bad) jl fcomps sub dec std (bad) call mov imul lods int3 orl cltd cld cmp ljmp mov cmp dec xchg fld sub ds xor fcomip incl pop xchg pop in repnz cmp hlt loopne (bad) jge lods icebp ljmp push std test cmp add fwait stc dec divl dec (bad) (bad) lcall int3 fbstp test test dec sti mov stc icebp cmc adc mov (bad) (bad) (bad) (bad) jle jb lods cli and dec in addr16 in into lret bound and xchg jmp fwait (bad) loopne lret jl loop sbb or xor lods (bad) (bad) (bad) mov mov js adc ret insl fwait and xchg in sbb push call ljmp or mov loope cmp push loopne pop aas cmp jae dec idiv (bad) jmp ss xor xor adc inc es pop popl mov mov (bad) (bad) incl lret push jl cmp mov into and push pop push and (bad) lcall cld (bad) daa xchg pop loope cmpsb iret xchg mov mov ret sub pop pop inc out inc loop dec mov jb pop xlat scas adc cmpsb jp subb out dec arpl xchg ljmp pop pop add and imul fmull and xor sbb scas out arpl xchg fidivr aaa std iret sarl mov (bad) iret inc xchg add add stos (bad) ljmp fldt arpl mov lea loope adc mov (bad) ljmp or push lock insl push push repz pushf adc std icebp (bad) and decl mov sub repnz daa rcll or movb mov (bad) jmp fwait dec sub (bad) lock xchg dec xchg test mov and mov int call sbb cli xchg mov adc (bad) (bad) jmp call add movsl sub popa cmp in testl (bad) lahf jnp xlat xchg xor rclb fistl sub push (bad) ljmp stos jo push insb push sbb add inc jle ja hlt cmp dec sbb (bad) decl add (bad) push incl pcmpgtd add imul pushl adc lea mov mov push (bad) (bad) (bad) decl (bad) rol mov test mov popa call fabs pop push mov ljmp mov stos or or imul inc push imul fs jmp mov aam sub inc or mov adc lcall xorb (bad) ljmp (bad) push dec xor sub icebp fstp mov mov mov push (bad) (bad) out clc adc ss flds and adc add jle out (bad) jmp sbb adc js fwait push shll test int jo repz dec (bad) (bad) decl or jae sarl subl mov inc ret pop pop jns pop (bad) (bad) (bad) jmp les dec mov and pop (bad) div adc inc pop (bad) (bad) (bad) incl fild sbb fsubrs arpl inc addr16 and push aam aas (bad) (bad) (bad) (bad) (bad) cmc es pop fmul mov dec pop leave lods mov sbb xor jle (bad) int add push sub dec mov in pushf popf cs lds mov ds sub (bad) aas add mov call aam mov (bad) (bad) push or sti ds call xchg or add or addr16 (bad) je (bad) (bad) jmp or dec pop jecxz std or and (bad) out cmp pop hlt pop add or (bad) (bad) mov dec and addr16 fstpt test cmp mov decl jmp shrd sbb jmp ljmp ss cli (bad) (bad) jmp pusha xchg pop mov dec cwtl ret ds jns pand mov icebp (bad) ljmp lods inc incl inc loope mov pop inc adc or or push (bad) (bad) mov sahf inc in (bad) not mov add pop dec in sarb mov (bad) (bad) (bad) lcall sub (bad) imul test xchg and insl (bad) out pushf ret mov fsubrl dec add cli (bad) decl or sub aam sar (bad) (bad) mov (bad) repz xchg imul mov or (bad) xchg dec imul (bad) (bad) call adc aaa call inc inc imul cmc ss mov and push movsl (bad) (bad) (bad) call mov pushf imul add push fs test incl and push jne popf test ret stc mov sti cmp (bad) jp outsb sbb sub (bad) jb cmp or (bad) lcall sbb hlt xor xlat popf stc push mov mov push movq out cli mov add add fdivs mov hlt and mov (bad) (bad) (bad) pushl cld mov cmpsb out stos mov fsubr push mov (bad) mov (bad) xlat leave push dec push (bad) (bad) decl loope or js and fcmove gs push push call out mov or punpckhwd or pop je lcall push js cmc sbb jmp sub jns (bad) mov or imul xor dec cmpsb dec (bad) (bad) (bad) push and inc frstor or mov fiaddl iret rcll push and xchg pop cmp leave add incl in ret (bad) fisubl sub add lods (bad) (bad) (bad) mov mov push dec test push nop and sahf adc ss pop push pop addr16 out dec aad (bad) (bad) call sahf outsb clc pop addr16 loopne jnp add fadds adc (bad) (bad) jmp (bad) (bad) fmul inc inc iret xchg cmp roll (bad) or (bad) (bad) (bad) (bad) fucom fsubrp arpl aam inc mov sub mov int scas cld jnp add push jb (bad) (bad) (bad) (bad) jns xor xchg sbb cmc sti xchg lods loope pop adc int lahf outsb add jmp (bad) (bad) (bad) decl mov mov pusha pop or out fs mov shll loopne,pn (bad) (bad) (bad) push mov lcall mov lock mov jbe mov out cli xchg jns (bad) incl push inc mov sbb mov sub jl dec call mov or sbb adc ja mov jmp mov nop test xor push lret movsb mov pop outsb daa jo (bad) (bad) jmp pop das push in and mov pop sbb pushf adcl mov mov inc icebp xor sahf mov call mov mov (bad) lcall cld adc fwait xchg (bad) bound lcall push and mov push enter out fwait (bad) (bad) cli jbe popf mov cmp sub mov out sarb jg jmp sti pop xor ficom inc mov xchg ja div lahf fsubr sbb (bad) incl and imul mov out test cmp (bad) jg add cmp iret bound fstpt jo or pop (bad) incl icebp loopne imul jl mov leave repz sti lods and push (bad) jmp (bad) neg or dec jnp outsb fistpll add jo (bad) pop cmp or mov push jmp inc cmp bound jl mov (bad) mov mov jg push mov bound jecxz subl ljmp lret ljmp stc dec mov xchg xchg jae neg hlt push lret xchg lods rcrl sbb (bad) jmp arpl outsb pop lock mov imul loopne flds inc pop sub cmp bound aas xchg stc into inc cmc aad fidivr pop je call lods add fimul subps or (bad) (bad) lock (bad) dec sub add cld mov mov orl iret rcrl push dec (bad) (bad) (bad) call xchg mov out dec loope push imul fwait mov inc xor lcall lcall add mov jl cmc call inc shlb out mov incl cli mov push (bad) shl jecxz scas mov mov fs je sub mov xor rclb sarl (bad) lcall push lret shrl pop xchg pop jmp xchg mov xchg dec loop cmp dec sub gs subl ja jge int3 ds pop hlt out cli (bad) cli cmp and pop fisub or add (bad) (bad) (bad) (bad) jl les or add out push int3 ret leave and les or lods fs lock cli inc and scas ja cmp push cltd cmp ret and clc push (bad) (bad) mov ret cmpsl add ss mov fwait enter test (bad) cli push mov lea sbb dec lods add sbb sysexit nop or mov gs mov ret push call decl idivl std pusha add clc in cld pop dec cs mov xlat decl pop lcall leave mov ret mov out daa mov (bad) (bad) (bad) jmp inc jp popf rorb sbb js inc inc lods add pushf adc clc fistpl sti outsl (bad) (bad) sbb jmp or inc gs sbb fs repz arpl pop push shll rorb lcall (bad) shl (bad) call dec loope jle xor jecxz imul add les push mov fwait (bad) dec xlat sub sub fsub add inc fisub enter (bad) fcomip pushl cmp pop mov and lret lods xchg adc gs push jl (bad) (bad) pushl test cmp jb (bad) fist adc das fsubp or pop xchg test cmc out inc icebp mov sti push dec inc in roll sub mov inc cmp sahf jmp popa (bad) test in mov lahf jmp (bad) (bad) std mov xor add idiv adc rcll std in jmp sar (bad) lcall jnp jo adc mov (bad) shrl mov jbe in (bad) scas jae in jmp mov adc (bad) (bad) (bad) call js cmp adc adc jns mov pop cmp or std lcall sub cmpsb lea std adc aad in sbb out pop cmp ds lcall push push cwtl sbb into sub test movsl imul clc pop xor jo or mov push andl int3 sti pop sbb and xor inc add lds or fistpl lods xor dec and jne (bad) (bad) (bad) inc cmp and dec mov and mov push iret fldl add hlt repz jmp jae or jecxz out and pop or fst xchg mov push push mov (bad) (bad) pushl (bad) lcall cmp int3 das dec adc outsb add cs clc (bad) (bad) (bad) (bad) repz or push pop out mov std mov lcall cmp fstpl mov es mov decl push and mov sub rorl mov push mov sbb adc and dec stc ret fistl (bad) jo lret jmp mov cmp imul dec add pushl incl popa mov cltd add in addb and jg (bad) ljmp leave rcrb addl (bad) jb imull dec (bad) lcall sbb int popf or xchg push mov pop pop mov adc cmpsb outsb shlb popa out ret mov (bad) cli mov enter (bad) cmp mov out popf jne cwtl sub mov inc and repz jne xchg sub push int lock ss repnz jbe jle (bad) call inc jg pop faddp lock adc std or loop sbb insl cmp push mov (bad) (bad) call les add cltd mov enter js mov cltd inc sti inc loop fs (bad) (bad) fsubr push xchg push sbb test lret ds mov dec adc (bad) (bad) (bad) jmp in mov adc loope cmpsl push outsb cmp cltd clc mov int3 in (bad) inc xlat (bad) mov (bad) or jne pop outsb inc push fs ds addr16 mov cmp jg cmc rclb test jb sbb cmp call or push xor jge push icebp mov xchg mov xor sub (bad) pushl adc pop mull mov push pushf mov test (bad) jg (bad) in es mov jl inc jge jae int3 insl outsb jno jge dec inc xor pop dec jmp pop jo stos sub mov jl (bad) (bad) (bad) (bad) fsubrl sbb xchg call sub fcoml das add adc sbb (bad) (bad) mov (bad) in mov out mov es (bad) push cmp cli push sbb fidiv call mov sahf pop mov movsb (bad) (bad) (bad) jg and jp mov jne gs ds icebp rorl xchg call out lock jbe pop inc in add pop fist mov and ret daa and push ror aad mov or inc (bad) (bad) (bad) pushl in and (bad) call movsl cmp inc or mov or and (bad) decl cltd adc dec jns fwait (bad) xor enter imul arpl (bad) (bad) (bad) (bad) xor ss mov cmp faddl (bad) and mov (bad) dec es adc mov ljmp pushf test and and and dec sti dec and xchg mov icebp (bad) (bad) (bad) (bad) loopne inc inc lret adc jp out mov (bad) adc or or jg (bad) fbstp lcall mov ss dec pop or adc test xor sub mov add (bad) into out pop addr16 (bad) (bad) (bad) call pusha inc dec push push cmp gs sub mov call fadd cld pop cmp xchg dec xchg popa dec in mov rorl mov inc jmp xchg rorl cmp inc adc jg or dec xchg jle nop and cmp or (bad) (bad) incl loope xchg daa sub ljmp mov in daa xor scas pop or (bad) (bad) incl adc leave pop sub sub int3 sbb push (bad) (bad) add cld push cld (bad) jnp bound add loopne movsl lret cld cmp and jne dec hlt mov jg or int cs fcmovne cs xor (bad) (bad) (bad) (bad) cmp mov sub shr add push pop mov ja xor and lock ljmp pop pop in adc and add in cltd nop (bad) or or mov or mov mov gs jae outsb imul sub (bad) (bad) dec dec or lahf jo push leave je stc andl inc xchg notb jl lods (bad) dec mov mov inc mov jnp push sarb lods stc mov cs mov sub and push and clc (bad) (bad) pushl outsl mov and mov stos fisubl ficom jae scas cwtl (bad) (bad) incl add mov insl (bad) dec test mov push xchg xor insb dec insb xchg test sub (bad) jecxz xor cmc shr add cli jg inc dec inc add mov pop hlt (bad) ds dec clc (bad) (bad) decl push push xchg jno cld pop jb or in stos push push cmp nop ficompl mov ret sbb fadd in or jno jecxz push dec jbe add loopne jg add les test sub (bad) (bad) call in movsl lds add sub js repnz ret ja xchg jmp mov xchg stc pop outsl outsl hlt inc outsl nop jno daa leave dec mov js lcall cwtl mov orb inc lea aad cmc jnp in adc outsb cmpsb xor icebp (bad) (bad) decl adc test scas jl cld add (bad) mov testl mov fidivrl insb lahf scas pop out rorb mov sub sbb sbb xchg data16 jmp pop jno xchg (bad) (bad) (bad) (bad) std pop pop inc jno jmp les repz mov loopne ret dec ljmp cmp mov cs jb dec fimull das inc xchg mov mov into lock push sub loope jbe aad sbb jge cmpsl dec and mov jg (bad) sbb mov or push cmp xchg outsl (bad) rep ljmp xor adc or in inc rcr cmp cmp push outsl mov or ljmp inc pop loop aad aaa adcl mov push repnz adc (bad) (bad) call mov stos cs clc mov inc push mov pop push sbb sub (bad) (bad) fistp out mov (bad) je aaa inc xor adc mov loopne cld and cmp sbb sbb and sub imulb cs incl out sub imul sahf push (bad) (bad) (bad) jmp mov mov (bad) popf sbbl repz rorl gs sub push std pushl (bad) xchg xchg aad mov pop insl pop sbb adc (bad) addr16 mov imul adc xchg pop cmp inc pusha aaa sbb add frstor in mov jmp cmpsl sub xor xchg inc or fdivrl cli and gs sti (bad) (bad) (bad) incl adc sbb sub lods add jo jo xor pop mov out cmp xchg clc jecxz (bad) (bad) (bad) mov mov xchg outsl mov std or add lahf adc (bad) call sub sbb push stos cmp ss mov (bad) ja jl (bad) (bad) lcall movsl cwtl add enter cmpsl dec sub scas incb icebp pop push xchg fiaddl lea hlt cld dec popa xchg dec and scas outsb (bad) adc sub mov (bad) (bad) (bad) decl in test iret jle sysenter xchg std pop jmp rorl push sbb push mov in or fs push mov jmp cld mov ds or dec (bad) icebp mov test (bad) (bad) (bad) dec xchg iret pop xor scas (bad) iret xchg and dec jle inc loop xchg cmpsb dec mov fs jg (bad) (bad) decl mov cwtl notl dec fsubrp loop mov imul inc adc mov jmp dec inc xor or fld (bad) mov xor mov pop shr lock (bad) (bad) (bad) fstpl sahf dec aam dec sub in loop inc dec test icebp imul jb popf loope (bad) (bad) (bad) std and mov int jg adc mov out out loopne cltd push inc adc (bad) (bad) decl and sub mov out push lods out xchg int3 pop ljmp mov adc daa fisttpl ret pop jg push or mov jbe mov mov lock (bad) (bad) lcall stos and inc ss negb inc and mov sti daa cld out jg (bad) ljmp mov cmp mov pop dec fist sahf mov xchg fdivp (bad) sbb fcomip aad adc loopne mov mov cld inc int3 scas ljmp sub jp (bad) push push jbe test lods pop loope aam sub fistl push lock fxch jns scas ret gs dec inc cltd adc (bad) jg nop dec test cmp es movsl ror lcall mov or adc movsl pop cmpsb mov inc repnz ficompl fidivrl cltd nop and inc stc scas clc (bad) ljmp cmp sahf jmp xor lods aaa jae push and loope mov (bad) (bad) in aas push movsl je jnp pop xor les or cmpsb aaa xor xchg xchg add call pushw scas sub add cmc in push mov divl jno add (bad) pushl mov ficompl sub sub stc stos jns out repnz (bad) (bad) jmp sti not jg or (bad) jmp xchg les fidivr cmp adc add pushl push sahf loopne xchg mov aas lock jle lods xchg mov popa or (bad) (bad) (bad) (bad) std add jg jp push in inc pushf arpl pop iret ficoml cmp xchg roll ret mov mov lret mov fadd lcall cmpsl (bad) (bad) (bad) ljmp cmc mov jnp xchg les insb cs cmpsl xor icebp lea jecxz fsts aaa lret test ljmp dec fbld mov xchg pusha mov orl loope in jmp fucomi add (bad) (bad) incl orl pop das lods test es iret jnp in xchg fcomi es jo lcall sbb cmp outsl les insb mov int pop cmp mov jmp jmp (bad) (bad) ljmp xlat pop fstl xchg and mov ja pusha stc addps lcall into jg mov sbb scas sub cli out mov int3 (bad) addr16 es lcall sarb push add mov fwait add xchg adcl sbb fwait in cmp adc sub cld cmp or jns dec push sub cmp add rclb movsb in dec mov jne xchg sbb xor sub cmc cmc pop push push and ss ja insb dec mov fbld decl mov int (bad) (bad) (bad) pushl cmpsb mov popl lcall cli jge ljmp into adc call and lahf mov into fnsave or (bad) (bad) ljmp pushf loop or gs adc lods leave mov add into imul (bad) (bad) (bad) (bad) aas inc hlt pop mov inc push mov stos dec daa or (bad) cmc mov sbb mov jne (bad) (bad) call int3 mov xchg cmp sbb data16 xor mov lcall call inc pop sub fcoms into stos push (bad) lock adc jg fdivrp (bad) (bad) jmp lds add std cmp and in jne insb push xchg dec push out mov inc push dec push mov loope repz addr16 (bad) (bad) incl jbe pop push sbb push int jnp rorb (bad) lcall mov sub daa mov ljmp (bad) inc or loope das in sbb jle sbb mov pop (bad) (bad) (bad) (bad) fidivr aaa insl sbb sub roll inc mov test (bad) mov add add inc inc jecxz mov popf jae and icebp dec xchg cmc inc (bad) push add (bad) or loopne (bad) fcomip decl mov int3 repz jp loop adc xchg int fcoml (bad) (bad) (bad) pushl adc subl sub dec imul decl ret fdivrp (bad) (bad) (bad) jg and lret pop fiaddl jp xchg jb inc stos and aaa (bad) dec adc (bad) (bad) incl jecxz out xor mov and mov ficompl addl ja (bad) jg ss popa add dec sbb sti push and jecxz xchg jne and xchg (bad) (bad) (bad) (bad) jge fstpt xor loopne mov mov loop aas jecxz jmp aaa (bad) sar (bad) (bad) incl sub cmp push sti and xchg mov push aad popf call push (bad) (bad) (bad) (bad) std mov mov cs pop fcomi cmp negb dec mov pop sub cmp add (bad) (bad) (bad) (bad) cmp push add or mulb xlat add adc jg mov das clc incl insb scas neg adc inc xchg shlb stos jo,pt in punpcklbw je cmp incl loop je cmpsb ljmp or outsl test nop cwtl or xchg pop cwtl nop pop mov add imull nop pop sahf and (bad) (bad) (bad) call add sub hlt mull scas lret jae stc pop pushf mov dec or jge (bad) (bad) (bad) jmp sub adc jae cltd pop fwait inc dec mov test sbb dec lods inc mov (bad) (bad) incl jl (bad) sub out mov in cmp mov cmp (bad) addr16 and push call ds push addr16 sbb ljmp xor dec mov pusha xchg pusha repz add (bad) (bad) (bad) jmp push out loopne xor sub pop pop xor loopne sbb jle (bad) mov xor sub sbb ljmp loopne ret push push sub (bad) (bad) (bad) jg daa sbb and das add jae add and in (bad) (bad) (bad) call loopne outsb stos pop pop sbb push mov lar sahf iret mov rolb iret sahf popf dec and xchg aas mov push scas xor cs (bad) pushl (bad) in (bad) ja mov lock shrl sbb sahf out mov mov mov out and data16 mov dec push mov test fcmove das xchg cld test push cltd cld mov mov mov jb out cmp sbb (bad) lret (bad) (bad) (bad) (bad) cmp mov imul cmpsb mov ret mov xchg sahf adcl (bad) (bad) decl push push jge pushf mov add popl adc jp ret mov int3 jg (bad) out dec aam mov outsb mov rorb movsl pop repz inc repz (bad) (bad) incl clc dec mov and fistp fsub lock fldt movsb xor adc jb (bad) (bad) (bad) ljmp dec int3 and xchg inc std loope ret sbb jge clc jno loopne aas mov adc (bad) (bad) (bad) ljmp fisttpl int3 inc jno jns pop mov (bad) cmp push mov jb mov enter (bad) mov jecxz adc xor push adc xchg cmp (bad) (bad) (bad) (bad) in imul add mov (bad) fsubrp xlat inc dec dec and push cltd scas pop cmpsb (bad) decl cli data16 or add jo pop loopne jne,pn (bad) roll aad sbb or ljmp cmp fcomip adc scas pop or adc dec or hlt mov pushl xor push repz sub inc scas sbb clc mov ja pusha ret (bad) sahf and dec (bad) (bad) (bad) jg xor xchg or lock fbstp inc jae jg (bad) call mov dec loop loop sti mov notb rcrb (bad) (bad) (bad) ljmp xor xchg aad adc pop mov push or xchg mov xchg adc (bad) (bad) ljmp sbb (bad) lock pop hlt dec pusha mov xchg repz stos test push das stos scas xor mov stc and loop arpl inc and xlat and cli fwait pop (bad) (bad) mov shrl ffreep xchg aad mov cmp (bad) jmp and jmp cmp stos inc push les lods enter mov push pop ljmp (bad) mov mov dec mov mov daa aaa ljmp cs cli xchg sahf pop fs (bad) (bad) (bad) mov into daa gs movsl add mov scas repnz pop (bad) inc insl iret jnp pop mov xchg push (bad) jg jns lcall push mov xchg fs gs test (bad) fstps (bad) mov fist out ljmp jns stc mov dec cmc (bad) xchg pop add popa adc fisub dec fisttpll xor lock daa lret xor or popa xchg add cwtl rol gs shrl or (bad) ljmp in jmp movsl test js add and ds (bad) (bad) incl or or pop dec fs push xchg pop xor in cs cmp (bad) xchg into mov (bad) (bad) (bad) call aam js lahf (bad) mov jg ds insl dec xchg pop xchg pop pop or jb (bad) (bad) jmp lods testl dec lcall lcall mov dec iret les rorb jmp jmp lods inc cmp or out daa (bad) (bad) (bad) (bad) mov push notb push xchg in push inc pop arpl (bad) movsb pop cmpsl adc (bad) (bad) (bad) fnstenv pop inc adc out imul insl or scas pop adc push dec cwtl sahf (bad) (bad) (bad) call fiadd jb lret fwait loop test adc fiaddl xor add cmpsl add xor inc or jl mov push dec sbb faddl inc or mov ret and adc push imul and adc sar (bad) jg adc es mov dec lds and cmp rcr les (bad) call pop inc dec mov pop (bad) (bad) mov into jo ficom movsl dec pop test (bad) (bad) pushl xor cmpsb jle lock mov fnsave bound xor insl inc jnp hlt sub (bad) mov dec or adc mov (bad) push push xor sub or cli pop mov cmp iret rcrb ja imul insl lret insb mov (bad) jae ret sub test mov js xchg and mov call ljmp add fistpll testl sbb loope outsl push std cs je mov adc cli xorb mov loop xchg dec into adc hlt (bad) jle fsubr pop std ljmp add cli inc cli ret fdivrs and (bad) mov pop and jns rclb jp and les cmc repnz scas (bad) (bad) (bad) push scas push ja cmp enter stos jae gs cmp add jb fucomip pop pop adc loopne lcall mov sbb movsl dec jae mov dec jo lea ret lock jmp ljmp (bad) or popa call out jg push fmul jp and clc aad push ljmp pop ja addr16 push pop inc (bad) loop sarb cmp jp or stc add aad inc enter movsl hlt (bad) (bad) dec ret jg aad addl scas (bad) loop jns cmp cwtl ja pop jne (bad) lcall ficomp pop pushf lods aaa sar jae dec inc jmp icebp xchg cmpsl insl idivb decl lods mov call adcl lods scas sub (bad) call dec pop push mov insb and jb daa pop outsb xchg mov add decl ret sbb out cltd test pop xchg push (bad) mov cwtl ds sbb std out pop les repnz into pop scas mov inc cmp stos (bad) (bad) push dec inc insb sub xor dec cmc mov dec mov popa lahf jns (bad) aaa or loop push (bad) (bad) (bad) inc add push (bad) lds repnz and mov mov je mov xchg (bad) (bad) push adc inc mov ror jno xor fsubs xlat hlt sbbl rolb sti fistl out jle bound add dec and pop sub inc je mov (bad) (bad) (bad) incl jns or mov in mov jne outsb cld mov stos xchg (bad) (bad) (bad) jmp pop jae adc ja mov fdivr insb out jb in (bad) std movsb cld jnp divl incl lcall (bad) adc dec rorb das fnstcw fimul (bad) inc (bad) call cltd cmp pop add sbb loope stc jge (bad) sti xchg (bad) (bad) ljmp ret fwait sbb sub and and into aaa nop (bad) (bad) (bad) (bad) mov jnp xor mov xchg xchg xchg adc mov out fldl lahf gs (bad) (bad) call sub push mov in jo insb push lods jno dec rcr xor xor mov (bad) cmp pop sbb sub sub mov ja xlat scas jmp dec clc (bad) mov lock test mov fs call adc (bad) (bad) ljmp out and adc add loop nop out and loopne es push ret jg out (bad) (bad) (bad) (bad) cld roll enter cmp ds xchg test sbb icebp fadds dec cmp push xchg add repz inc lods jne xchg clflush dec sub adc cmp (bad) (bad) incl push sub add scas ficomp push dec stc mov (bad) cli int3 mov popf syscall repnz and xor xchg cmp push dec into jnp outsb sti push jo mov mov (bad) (bad) ljmp mov push jmp ret iret aaa push mov jb xchg in push clc repnz shrl and test mov daa loop (bad) (bad) lcall sarb hlt cmp stc inc lds push aam inc andl call dec cmpsl mov mov pop fstl insb xchg aas xchg mov (bad) call mov or icebp jns mov loope mov repz jbe mov stc aas (bad) (bad) (bad) call and mov pop pop jb fwait les in test xchg xor test (bad) (bad) pushl repz sbb mov dec scas inc stos movsb xor push repnz (bad) (bad) (bad) call cmc out fwait and int3 push leave cmc mov jge scas push jb lcall (bad) (bad) (bad) jmp sbb test push sbbl cmp sti scas jae pushf pop in mov (bad) (bad) sti (bad) pop dec outsl test pop pushf mov jbe jl xor mov and (bad) ljmp pop std fcompl pushf movq lds je incl mov xlat and aad out (bad) ljmp add cmp xor clc aam das xchg pushf and fildl (bad) incl and stc xor pusha rcrl icebp xor inc push mov (bad) (bad) (bad) ljmp in dec rorl mov (bad) xor (bad) test or jle xchg clc out ljmp int3 sbb shlb fsubrs sbb idiv (bad) (bad) fiadd xor pop push subb (bad) loope test ficoml std jge jge or (bad) out call (bad) jg repz pop ficompl jecxz mov test dec lods (bad) fist lock les push push mov sbb ljmp adc in ja mulb cmpsl out or test (bad) (bad) (bad) (bad) call pop pop and and cmp enter mov inc mov xchg cmpl (bad) call addb xchg push push dec neg or lret imul xchg xchg lock lret ljmp or les leave xchg xchg retw jae (bad) pushl inc mov adc ficompl or pop (bad) (bad) lcall outsl mov xchg rclb cmpsb rcrb (bad) jg (bad) enter or cld sub enter std dec cmp out pop xorb pop (bad) ljmp stc or fisttp push xlat outsb sub (bad) ljmp les add test push pop lods icebp dec cmc cmp gs push xchg (bad) mov outsl ds pop jns pusha je pushl xchg pop xchg test mov test (bad) incl sub pop (bad) ja nop lods nop call push xchg xchg sub (bad) call std mov push stos inc mov mov push or push mov adc (bad) call (bad) hlt mov iret int in insl xorl (bad) (bad) jmp sbb xchg stos jmp inc dec jo in dec mov imul xor dec fbstp lods (bad) jns js mov adc cmpxchg add xor and lahf das (bad) mov xor ljmp js imul mov mov (bad) (bad) decl push in out add xor sahf stc rcll xor fdiv add rolb (bad) (bad) (bad) lcall popa sbb xlat dec pop (bad) jbe push dec sbb pop mov loope call xchg (bad) mov gs push iret repnz xchg into es xchg cld (bad) (bad) mov sub add sbb shrl divl cld push or sbb (bad) (bad) incl mov sub cmp pop les push loop dec (bad) (bad) (bad) call ret inc iret and push mov fdivs std (bad) imul and pop push cmp orl pop inc cld adc fcmove sbb or lret pop fsts cmp xor (bad) (bad) push out add in lock das adc mov popf add sub xor add aaa std decl pop inc jno (bad) ds jecxz sub cli mov js jmp in sbb pop into xor (bad) lret sbb and scas add incl or cmp push jg jmp push arpl jno insb sar (bad) decl push cltd fucomp mov mov dec in leave pop std ja sub (bad) call imul mov push inc xchg (bad) mov push jns cmp push (bad) (bad) push lcall ret loop cmp adc mov jno or (bad) add je sbb add aaa lds rorb mov and rolb sub pop xchg xchg repnz fwait repnz int mov jg (bad) (bad) jmp xchg pop inc push movsl pop je jl into aas mov mov frstor xchg push (bad) jecxz aaa or das int3 daa je ds cmpsl push and in test lar (bad) (bad) mov inc std (bad) xor hlt aad fldl (bad) lock (bad) (bad) dec adc inc in mov ja cmp lds daa sahf inc cmp mov popa (bad) (bad) (bad) (bad) fild sub mov (bad) dec mov cltd pop sbb adc mov or mov (bad) (bad) (bad) (bad) jmp inc jne cmp cmp outsb test xchg fnstsw fnstenv aam jle (bad) (bad) (bad) ljmp add jg (bad) and cs mov int push xlat out mov mov ljmp adc pop pop xor jne and (bad) (bad) lcall sbb sub pop jne mov pop nop lahf sbb ja lds fnstsw ljmp faddp mov adc push mov cmp mov or movsl mov icebp push jmp cltd cs inc std inc ds mov (bad) incl pop pop (bad) inc adc ljmp jb and dec test add fmuls push mov add js adc je (bad) (bad) decl lods aaa sub in sub test adc push sub lcall (bad) (bad) (bad) (bad) mov aas popl out popa int3 or sbb loopne sub outsl adc xchg push push (bad) (bad) (bad) pushl test sub ja cmpsl cmpsb mov lcall pusha xor in push add (bad) ljmp push popa imul mov add call (bad) pushl je cli push daa jecxz cwtl sub push jne mov aaa (bad) ljmp cmp adc (bad) enter ja shl mov sbb jo dec fwait sahf jb loop sub sbb scas dec inc push cld push (bad) rorl push leave cmpsl pop jno lret cmp (bad) push scas cs mov das mov xchg in xlat xchg nop ljmp cli ljmp sbb jg mov xchg daa (bad) les hlt mov mov (bad) (bad) cmp pop icebp dec mov sub ret xor lcall push cltd cmp or inc (bad) (bad) (bad) inc (bad) xor jne push cmc xchg sti in flds mov or test out dec fstpl pop rorb (bad) (bad) pushl movsl and mov ja inc rolb mov lahf and test (bad) call loope mov pop pop or cwtl scas cs add std cs sarb dec je sub loopne (bad) (bad) (bad) jmp sub aas loopne or jb xchg mov fldl sub (bad) (bad) incl cli jns gs jns dec inc jo aam out std movsb scas cmp inc (bad) (bad) pushl fisub (bad) je or jmp test and (bad) call insb mov sbb jecxz ds add mov (bad) addr16 cmp push mov (bad) (bad) (bad) lcall and mov xchg lods cmove xchg pushf push adc aad jno iret pop insb (bad) xor mov (bad) call idivl roll adc adc (bad) cltd jne idivl xorl (bad) (bad) mov cmc push jl or out or (bad) (bad) call xchg (bad) je lock stos adc mov or cmp mov lods (bad) (bad) mov mov xchg mov in sahf cmp (bad) movsb in stc dec (bad) (bad) (bad) call js fnop jo (bad) and sub dec push inc (bad) mov data16 sahf pop (bad) call into repz test pop push loop das fdiv push and mov das dec loopne fdivrs incl mov out js lock (bad) div xchg and mov enter lcall mov mov leave (bad) mov sbb pop jle inc (bad) (bad) (bad) pushl add mov iret jns mov adc daa xchg ds adc sub adc sbb loopne push movl sub (bad) (bad) (bad) mov cmp inc jae sbb add jns movsb push mov fwait es (bad) (bad) decl fwait jl fistl lds mov out fsubp mov nop out (bad) sub or mov push mov dec mov rolb sbb ret adc (bad) (bad) ljmp mov jg hlt ret pusha rorb das jo imul call ja (bad) pushl cs mov mov test add outsl (bad) (bad) (bad) incl cltd (bad) mov arpl push pop movsl and adc sub dec outsl or (bad) (bad) lcall pusha inc std pop jae movsl inc dec mov and movsl stc dec sbb add pop jecxz clc jge add push (bad) popa (bad) (bad) jg fs sbb lret (bad) cwtd insl fwait aas cmp inc aad notl inc fs push xor hlt (bad) aaa mov adc (bad) incl call xchg cmpsb cmp push mov addl jb xchg fisubr (bad) (bad) call lods or test aad dec push movsl in inc test sub adc (bad) (bad) (bad) push xchg mov mov add dec mov ret add in (bad) cmp out (bad) icebp or mov (bad) (bad) incl in fs leave xchg dec into jbe mov xor orl std (bad) (bad) in out and jmp mov test xlat adc xor lahf add ljmp cli sbb xor pop enter out imul sbb pop push pop mov gs (bad) (bad) (bad) decl js cmpsl add test jbe or xor int3 out adc xchg inc inc or pop (bad) jg das clc outsb xor fsubr adc (bad) sti rcrb mov das sar enter into out fs cmp pop inc (bad) jo pop push lret cmp (bad) decl and inc cli lcall xor mov (bad) fiaddl (bad) (bad) lcall add and jmp stos fwait jge mov xor (bad) adc pop (bad) jae sub (bad) incl mov sub push ljmp popa jns lret push pop push ret decl or scas jmp cmp (bad) dec sbb loop test mov lods ja scas cli mov nop dec inc out xchg inc push cli out dec sahf push pop cmp (bad) incl xor cmp (bad) divl bound lds or shlb mov push mov cmp dec pop loope (bad) (bad) lcall cmp mov je push push ss mov pushw imul sahf cmp es scas mov rolb lret add sbb add mov sbb (bad) icebp (bad) (bad) (bad) (bad) call hlt es push xor sahf cwtl cltd cmp add mov mov push cmc pop shll jmp push xchg (bad) fild cmpsl sub mov mov lret loopne inc pusha stos mov push cmc mov jge xor push sar (bad) cmp fdivrl stos je xchg insb mov lds (bad) (bad) (bad) call stos (bad) int or jns nop sub fucomip xor jg or fimull pop cs decb lret jg movsb movsbl nop jecxz (bad) and fidivrl pop (bad) (bad) (bad) mov push (bad) imul xor xlat jbe in nop es xchg xchg inc push pushf mov (bad) lcall mov push addr16 shlb fbstp test jle and add fwait (bad) (bad) pushl movb jp push mov adcl xchg sbb jbe pop xor (bad) (bad) push cmp mov mov cmpb lds add mov (bad) (bad) (bad) decl add inc rclb cmpsb (bad) call add jno jmp xchg bound repz mov xchg lahf (bad) (bad) (bad) (bad) aas repz inc hlt sbb xchg loopne insl loop mov push push push inc sub clc (bad) (bad) (bad) fdivl xor or mov mov xchg lcall incl jo jb (bad) mov outsl cwtl stos jge test mov decl xlat push dec push or scas mov cmpsl jecxz jne xor (bad) ljmp mov iret jo pop insl or fnstsw icebp xchg lcall das (bad) xchg clc std jecxz xor jmp mov and inc ss aaa std mov sbb in adc dec sub mov jne hlt pop inc test pop pop (bad) inc jb fs xor (bad) (bad) ljmp xor jo pop (bad) aas push jns rolb sub push ret cmp mull scas addr16 and clc fisubl sub sub fcomip test cs incl jg push jmp aas ret cmp mov into fwait (bad) (bad) (bad) (bad) fsubs xchg aam jno pop sti in aaa out cmp cmp (bad) dec (bad) or mov (bad) decl sub mov and pop sub xlat push sbb lcall mov pop call mov andb pop xor (bad) jbe jns pop mov (bad) ljmp lahf push rolb pusha inc shll mov loope fwait mov jge hlt jecxz decb (bad) (bad) (bad) (bad) (bad) je ss test shr xor sarl mov xchg add icebp ja fcomip (bad) lcall inc fstpt (bad) mov (bad) mov lock cmc outsl pop imul add jnp mov add ja ret in fadds popf adc (bad) (bad) (bad) mov addl jae mov int3 jl aad push cmp test (bad) gs mov cltd adc hlt cmp jne and out (bad) (bad) (bad) lcall in mov xor fisttp xchg loopne mov aaa pushf scas in and add scas mov (bad) (bad) call fidivr test sti fdivs daa pop and arpl xchg out (bad) sbb ljmp mov fadds sbb dec scas pop hlt leave adc loopne in aad push mov incl cmp insl in imull int sti mov enter cli (bad) (bad) lcall repnz dec sbb push sbb push mov (bad) sbb push (bad) (bad) in lcall jbe and mov movsb pop mov xor adc dec or (bad) cld jge push jo add mov (bad) incl es jno in pusha maxps xchg test lret add call in scas rcrl lcall adc xor cmp (bad) (bad) (bad) mov je jle add imul add and cmp (bad) call jo rcrl push sub inc int3 sar add sahf test ja scas pop dec (bad) xor inc push movsb push (bad) ljmp inc mov pop fmul xchg pop into jle xor dec sub cmp insl enter cmpl aad (bad) (bad) lcall sbb sub hlt int3 cld xor and out sbb pop mov (bad) (bad) (bad) jmp push inc arpl push testb pop mov das sbb (bad) (bad) (bad) call mov mov fimull in add adc sbb mov push xchg sub (bad) (bad) (bad) pushl push fmul (bad) aad adc popf or (bad) mov jae or sbb decl dec dec aas mov lcall insb lock test movb dec push or fwait iret cltd mov sbb (bad) (bad) mov pop testb or enter icebp and repz (bad) (bad) (bad) jmp xchg sub int3 xor pop call aam stc inc mov fcoms arpl (bad) call loopne mov mov add mov aam (bad) adc pushl push aam loop call lods fwait pusha push fild push (bad) mov mov imul mov (bad) fcomip call ja mov add sbb sub dec cmp mov out pop repz cmp xor scas into int3 out mov lods stc xchg lods push mov (bad) (bad) ljmp aas mov out arpl lods mov js and push xor or ds push cmp ds jge mov cmp and mov lret into inc mov or fildll popf mov ss sbb (bad) (bad) (bad) ljmp pop jmp mov xchg pop loopne pushf jecxz mov inc je addb int3 or pusha fnstsw (bad) decl enter jge inc fistpl lods mov ja sbb jbe mov or or (bad) incl and jle mov dec in rorl subl or rcll clc fsubr imul (bad) decl dec imul xchg test jp push ja inc insl inc mull call test loope aaa inc movsl mov mov sub leave adc (bad) (bad) (bad) (bad) (bad) mov mov push and sbb xor in std xchg and adc ja (bad) (bad) (bad) (bad) decl nop mov ljmp outsl in jecxz cmpsb inc sbb sbb (bad) lcall call fwait movsb jnp,pt std or or mov jne icebp fwait jp or (bad) (bad) (bad) (bad) call sti es aas outsb sbb mov cmp bound and pop and jle out lret das rorb cmp xchg (bad) icebp (bad) (bad) out ds push in cmp mov fxch insl pop jno mov xchg inc xchg cltd add stos (bad) (bad) jp iret dec jmp pop mov je lret jl stc and jmp arpl add sahf add flds pusha jg (bad) (bad) ljmp push dec cmp out aad adc mov fstp sbb pop or icebp in and xor and mov jne xchg and aam dec stos jg js (bad) (bad) decl add dec loope mov sbb addb in inc xchg pushl stos adc sarl and jo inc ficom jo addr16 and xor (bad) (bad) (bad) dec fdivr stc cmp shl movb xlat nop movsb popf inc push and dec adc (bad) ljmp aas pop test sarl push stos insb push lcall pop add jo cmp nop sub inc lret in sarl xor cmpsl cmpsl jge orl mov test aaa (bad) cwtl sti dec lods ja push inc cltd and xchg aas jg nop scas shll xlat adc pop jo mov call jmp xchg cs cmc fmul xchg or in push bound lods ret cmpsl mov es (bad) (bad) fisubr pop aaa dec xor addl cld dec xchg ret pusha or fcmovb mov imul xor fdivrl mov pop push ds and (bad) (bad) (bad) push add (bad) int xchg (bad) insl fidiv nop sub enter pop pop xor inc pop popa ror (bad) (bad) (bad) jmp xchg or dec addr16 and or inc jae inc cmp xor hlt scas (bad) (bad) (bad) lcall and cmp xchg outsl inc ret push xlat lock cmp loope (bad) jg and shlb mov nop xlat bound mov mov xchg mov std and push cmp jge fs aam fildll jb rclb test (bad) (bad) call jne int3 cmp fdivs xlat lods std (bad) rorl in sbb pop repnz dec sub (bad) (bad) ljmp cs sub jne lcall inc fmull arpl xchg mov mov push cmpsb fbld repnz (bad) (bad) push test dec cmp hlt push inc mov leave sbb jge hlt imul aam stc test (bad) (bad) call sbb ja and adc fwait push sbb les insl jbe adc bound sub (bad) (bad) ljmp repz or push mov notb mov ds xchg mov orl clc call inc (bad) (bad) (bad) ljmp xchg test inc loop notl jp rolb cmp and or dec std movsb mov repz stos fwait lret xor inc mov (bad) or imul outsb out into aaa pop jnp and jecxz leave out insl cmp pop clc (bad) out add fimul (bad) (bad) (bad) call hlt cmc mov push mov sub adc lds xlat sbb aaa (bad) mov rcll imul (bad) jmp (bad) aad dec mov ja mov es lret jge (bad) jg jmp stos in test hlt mull push push mov xchg jp int adc and inc enter cmp hlt jl xlat mov outsl fadd lcall mov lcall sbb lea arpl rcr stc pop mov jo jb dec fimul repnz or xor (bad) (bad) call sub xor push loopne ss or and xor or cmp stos push jo shrl pushf push outsl push jge xor adc mov js in out jo sbb enter test pop std decl jne push mov ss xchg ljmp or fs decl jnp cmpsl in into mov pop push movsl xor or sbb cltd aam mov repz (bad) ja xchg cmpsl or xor aas sti ret addr16 pushf int pop loopne into jle and ret add xor outsl fnstsw pusha cmpsl push (bad) (bad) (bad) inc dec popf mov and xchg xchg jae adc xor lea xor es or inc add test mov xchg adc push inc add int3 out (bad) (bad) decl and mov jge dec outsl test pop jbe xor arpl cmp (bad) (bad) call in xchg xchg inc das test shl ret or loopne cli fdivrl push cmovl clc inc cmc and jge fnop (bad) aaa xor mov jbe sbb rolb pushf pop cmp movsl lods dec dec das adc or lea add push and mov sub mov push inc inc adc cmc (bad) xchg scas sbb or cmp pusha divb pop arpl (bad) incl ljmp xor not push pop cwtl or pop jg jmp les and scas ret mov and cmp xchg enter jge (bad) lock imul dec arpl pop loopne insb jmp imul jo pop es xchg jb hlt fildl pushl scas pushf dec int3 rorl mov sub mov mov (bad) ljmp dec leave mov jg lock lcall xchg js adc jnp dec inc xchg lret ljmp dec fmuls mov dec xor nop ds jmp and (bad) call repnz (bad) mov in popf (bad) mov add push push mov bound xchg sahf cmp in pop mov inc gs dec dec std xchg mov push popa (bad) (bad) (bad) incl incb push mull mov ljmp sub rcrb clc (bad) (bad) cmp shll les hlt dec xchg es (bad) (bad) incl dec test insb sbb cmpsb arpl std cmc or push mov cltd cld (bad) (bad) pushl js arpl cmp jl sbb shrb mov notb pop hlt mov pop mov stos ja mov cli xchg xchg repnz dec dec decl enter les jbe and adc (bad) ljmp ret adc jo movsb outsl int3 sub push jp (bad) (bad) call adc adc inc (bad) lods test cmp fs (bad) (bad) decl xor subb pop jo xchg cmp and mov mov (bad) (bad) pushl fiaddl adc fnstsw inc dec je (bad) in pop add xchg cmp (bad) (bad) (bad) pushl es mov jb (bad) int jge (bad) in fcmovnu mov (bad) jae cmpl fcompl mov movsl int jl sub ret pop xchg nop xor (bad) (bad) pushl leave add inc aad repz lea lahf jmp sub dec rclb out into jge ljmp cmp xor stc js gs mov sbb sub jle (bad) lcall nop sahf jbe sub test cmpl mov push js (bad) (bad) (bad) lcall mov insl xchg mov (bad) push adc sbb outsl mov int sub mov and push aas push adc cmp jbe sbb (bad) rcll out js (bad) in push call (bad) sti mov xchg lds push adc push scas cld (bad) shrl (bad) (bad) pushl cmp add int3 sub jmp lea pushl adc test jg jecxz sub decl fisub mov clc mov jg (bad) (bad) decl into dec xor adc push lea xchg cmpsb add mov incl inc call loope arpl push cmpsl mov (bad) hlt imul (bad) mov mov mov fs cmp cltd inc call out mov sub loopne sbb pop pop out in dec test addr16 hlt pop rcll aam inc (bad) lcall pusha icebp adc imul cli sub cld jns pop jo mov mov mov and and dec cmp enter mov daa dec xor cltd sbb inc pop ss mov bound (bad) decl inc aad (bad) pop jmp cmp pop or jne adc jae sub xor pop cmc (bad) ljmp testl xchg xor cmpsl popf addr16 sahf jl int3 xchg jb add jne mov js push loop shr call push push dec sahf push stos movsl push (bad) (bad) (bad) pushl arpl and mov aad je sub push dec sarl jne (bad) (bad) (bad) (bad) jns cmp into xor pop fcomp rorl ss scas addr16 std fs cld stos ja pusha dec (bad) (bad) (bad) pushl repnz (bad) mov lcall push idiv ja movsb inc loopne and dec sbb (bad) (bad) incl orl sbb icebp sarl fisttp test in jno mulb call rorb (bad) int daa mov hlt in imul nop pop subl add outsl cld dec shl mov ljmp cmp test pushl dec scas push add loope rcl jae inc push nop xor loope adc or (bad) (bad) decl cwtl std orl negb jmp out call pop sahf fstpl (bad) (bad) (bad) incl scas xlat movsb pop (bad) sub cli bswap popa ss pop adc add inc xchg adc add (bad) ljmp dec loopne pusha lret or jp sti test in (bad) (bad) jg ds xchg arpl xor iret inc and push mov pushf fidivr (bad) call ljmp lea cmp fisubl (bad) (bad) (bad) (bad) incl aas leave std cltd paddb mov and repnz mov xchg notl cmpsl enter (bad) (bad) mov lock xchg and push sti imul push jo dec (bad) (bad) (bad) decl pop cwtl gs cs adc inc lods loopne test enter push repz clc pop inc cmc cltd mov mov outsb xchg push cmp ss pushf (bad) cltd xchg jmp fdivrl inc push (bad) cmp test jne jo (bad) (bad) (bad) ljmp icebp cld inc into icebp xchg cli xchg dec lret jmp add xchg lahf jno mov sub dec rcrb insb xor data16 stc fistl lret (bad) (bad) (bad) (bad) call sbb bound lcall adc xchg cmpsb fild lods es (bad) (bad) pushl push push in mov movsb (bad) push aas dec adc or jae cmp inc stos (bad) cmp cld or pop std xorb hlt push cmpsl adc incl add pop les negl inc mov in (bad) (bad) (bad) ljmp xchg dec iret (bad) (bad) xor inc sub adc inc lcall out pushl xchg insb notb cmp shlb scas dec and sbb cmp pop push mov jle cld xor inc mov sub push xchg dec pusha and fcmovb (bad) (bad) (bad) lcall mov sbb dec adc insl add les or jno push ret (bad) mov xchg push mov rorb adc int3 sbb stos adc pop call pushf cld in mov (bad) (bad) call icebp pop jne int3 push lcall int adc test scas out or push (bad) inc fistpll dec sub add ljmp sub ficom adc lcall inc mov (bad) jg dec adc gs cmpsl lea add fwait xorb call (bad) (bad) (bad) ljmp lea jmp gs outsw push or mov (bad) adc (bad) (bad) (bad) push jns movsl push cmpb cwtl lods (bad) push pop popa push (bad) mov xchg jno mov das xchg mov (bad) (bad) (bad) incl pop into sti jge xchg xchg inc and (bad) and cli xlat test cmp ret (bad) incl lret addr16 shll push inc stc out imull xchg xor jb insb xchg (bad) mov cli daa lock in (bad) mov mov out inc ja test (bad) (bad) incl stos cmp jns add adc jnp test inc cmp cs js,pt ret mov pop fwait jp clc inc xchg push mov cmpsb xchg push ljmp mov cmp shlb sub jecxz stc je jecxz clc push fisubrl (bad) (bad) (bad) call out adc ret pop mov cmc mov mov into push pop and mov leave (bad) jg incl cmp mov dec or (bad) cmpsb aaa adc cs lods popf (bad) (bad) (bad) (bad) incl mov test ret cmp aad and cltd and leave adc pminsw jmp lock loopne stos jle jo repz fs add (bad) divl icebp ret imul adc mov icebp out xlat std sbb int3 les and loope out (bad) (bad) (bad) (bad) fisub out mov jb orl adc xchg out and lcall call push incb xlat lret popf mov aam bound (bad) jg jmp jmp sub dec in cmp mov push mov cmp (bad) call ss lret enter loopne xchg jae fldt cmp mov adc outsl jge add fcomi adc xchg push stc mov jecxz rclb sbb cmpsb fdivrs lret push imul add mov (bad) jge add cmp push xchg fldl imul pop dec jecxz lds (bad) (bad) (bad) lcall mov in outsb mov ja cmc fisub fidivr xor jecxz (bad) insl xchg (bad) (bad) (bad) pushl mov xor mov (bad) dec pop jnp int xor leave psubb scas (bad) (bad) dec mov imul fcoml xor xor mov or (bad) (bad) push push in icebp push cmp in pop out pusha sub aaa roll lock mov ljmp mov cmp test push cld adc or scas mov test outsl aaa xor mov (bad) (bad) incl add nop mov push adc inc outsb push lahf xor xlat push mov fs (bad) lcall xchg ds lock push mov add fcmovnu or cmpsl sub fstps mov (bad) push shr insl jae xor bound sbb (bad) out cli jecxz mov repnz jb sti das in cwtl pop xchg xchg mov aaa jle (bad) (bad) (bad) decl mov pop mov les or shll mov addr16 and test xorl mov push hlt xor fs mov (bad) ljmp ret add (bad) mov insb mov mov xchg ret jno jmp sbb ss and mov sub dec ljmp lea mov pusha xchg popa loope add cmp adc mov popf add shrb and pushf hlt xor cli ljmp dec cmpsl repz push pop lods xchg addr16 out cmp jnp lock (bad) jle jo aas iret in imul jl mov out aam test fwait (bad) sub mov stc and mov push stos inc add push loope stos mov je out daa inc (bad) jo lahf push adc pop nop (bad) lcall add mov addl inc xor jne loop mov jmp inc cmpsl push test push inc outsb (bad) je test shll xchg nop loop inc (bad) icebp mov ds xor call push insl outsl leave pop sbb movsb (bad) mov lock int3 (bad) (bad) (bad) ljmp add in lret sub cs hlt cmp pusha mov sbb mov jnp (bad) (bad) (bad) incl push push test xor pop dec dec loopne sub lret pop cmp push jae insb pop popf (bad) ljmp cli xchg enter (bad) psubusb pop mov add or hlt ret (bad) (bad) cmp jae cmpsb das or sbb sub mov jmp pop stc aas jo cmp push (bad) mov int3 sti pop push cmp jmp clc jmp aam outsb cs pop aas sub adc ret xor xchg decl jle xchg and in sub int3 push jae push mov test out add sub pop dec icebp cld jl jge (bad) mov or imul std (bad) jg mov arpl mov test scas loope in fcomip pushl inc clc jg cltd and xor add add inc iret lcall lds mov push aam dec and scas inc xor es (bad) (bad) decl stc lahf lods cmp shrb adc cmp push cmpsb add int sar mov lcall jns out mov mov and (bad) push (bad) (bad) (bad) jmp (bad) pop sti aaa xor jecxz fdivrs and xchg xor je stos (bad) sbb jg sub cmpsb sub test jg pop aaa inc ja aaa das xor mov (bad) (bad) (bad) pushl in arpl and repz fbld xchg enter mov xchg (bad) (bad) (bad) dec das jl dec mov mov hlt ja repz out imul jo or (bad) incl inc movsl push daa out or push push leave jecxz,pt aaa push xchg aas mov sbb pop (bad) (bad) fcomip call popf (bad) clc dec mov fcoms xor out jns or add or push lds mov push pop jne mov int3 xchg jmp jbe cmpsb push or dec out (bad) jg (bad) insb outsl ficomp inc int3 xor add mov or or (bad) (bad) lcall aad sub nop sbb add lds push xlat popa lahf lds dec (bad) (bad) (bad) lcall adc loopne les ljmp icebp adc mov dec es mov clc (bad) out cli push ds and pop repnz inc mov sub pop cmp add mov out enter (bad) jmp mov pushl mov (bad) in sbb loop (bad) (bad) (bad) incl push jmp push int3 mov test sub lock outsb mov out cmpsb mov pushf cmp rcll add and jne in sysret ljmp addr16 iret xor loop push and dec add rolb lret jp mov aaa mov (bad) ljmp loope daa adc in mov cmp add lods lds xchg (bad) (bad) (bad) pushl fistpl repnz sub push je mov enter cli (bad) (bad) (bad) (bad) pushl sub ss push sarl sbb nop insl fadds or repz push mov icebp (bad) pushl scas cmp and xor dec dec push cmc lret movl pop cmp mov leave pop or fnstsw pop je loope in push jbe (bad) (bad) (bad) incl cli xor pop dec cmpsb mov adc ja add stc outsb mov add clc (bad) jmp and mov call xorb (bad) adc (bad) (bad) ljmp adc leave test movsb lods ficomp into lods loope aad jne fdiv xor das js mov (bad) (bad) lcall test pop sahf outsb xchg inc mov pusha jne cwtl push xorb and aad loope fildll rorl ror in bound mov dec xchg mov mov pushf xchg scas push add int3 pop (bad) (bad) (bad) ljmp pop popa popl jp pop in inc cmpsl sub xchg lods outsb push jle or mov cmp (bad) (bad) jmp dec xchg int3 or lds aam xchg and adc adc aas mov mov and movsb xchg (bad) ljmp repnz int3 das sub xlat scas or (bad) (bad) (bad) fnstsw out push popf lahf cltd popf out xor cmp lock push sahf (bad) (bad) (bad) jmp push lcall movsl stos and cwtl sub inc push dec enter xchg mov dec mov aad or fsubrl jge js in dec lret lock js pushf inc sbb test sbb (bad) (bad) push adc push cs jge cmpsl lock mov jge lahf inc sti fnsave mov dec or ret dec enter (bad) (bad) push push push addr16 scas push inc jg mov and xor shlb mov cmp ret loop mov mov pop loope std int dec shrb xor or icebp push hlt (bad) (bad) inc subb add or loope xor mov jg cli out jo incl lods lods (bad) call fcmovu fidivrl mov xor (bad) (bad) (bad) jle ficompl xor rclb cs insl cmp into mov fist add cld push ss add (bad) (bad) (bad) std mov mov xchg outsl cmpsl call sbb adc es jbe xchg inc add (bad) (bad) (bad) lcall ds ljmp rclb xchg sub sub pop cmp leave (bad) mov pop or popa lods imul mov jg (bad) lcall mov push push sbb popa xchg jae push iret fldcw out xor jge (bad) (bad) decl lds data16 movsb push out jns push xor pop pop out mov sbb xor dec stos jmp fiadd lret repnz and (bad) (bad) (bad) (bad) ljmp out jmp cmp ljmp inc stos cmpsl cmpsb rcrl mov (bad) (bad) (bad) (bad) jle sub aam scas mov mov lds fisttpl lods cmp (bad) (bad) (bad) jmp xor xor push fwait lea dec pop mov xchg (bad) lret xchg sahf (bad) push es pusha addr16 add sub cmpsb (bad) (bad) (bad) lcall or lahf inc xchg or mov stc (bad) jbe xchg sbbl pop and mov mov and test ljmp rorl loop test jae cmp call (bad) std shrl xor pop (bad) (bad) (bad) inc jb adc sbb push sbb lods dec cmp fwait test cli (bad) dec jge push in ljmp (bad) lcall pop fist pop xor aas pop call cmpsl jns mov jnp mov and pushf push sub fs push (bad) (bad) (bad) inc jno dec jns mov dec insl nop mov ja ret in jo jg loope pushf (bad) (bad) (bad) call cmp call xchg pop addr16 aam dec dec jge lea clc cmp mov sar fcomip pushl adc data16 jo xchg enter cmc mov (bad) and mov (bad) mov je adc sbb dec sbb repz (bad) (bad) ljmp incb loopne or test stos lcall popa jl jo and add sbb aad (bad) pusha mov inc bound adc test (bad) (bad) pushl sub in lahf (bad) in data16 pusha push clc xor sbb mov (bad) (bad) lcall xor in sub jp pop sub fcoml fistl xor sbb jne (bad) (bad) (bad) decl jnp ja test mov gs test adc and xchg dec xchg and sti stc add popa test es dec cmpsl adc (bad) lcall push bnd nop sbb sbb pop jns jbe sub and mov fist sub mov push xchg (bad) (bad) mov push cli jg out andl cwtl cld dec es xchg xchg mov (bad) (bad) (bad) (bad) (bad) fldcw inc dec sti sti arpl pop jle or pop std cmpsb sub push (bad) (bad) (bad) (bad) out ret push pop sbb arpl xchg sub adc int dec dec adc (bad) mov jl push sub and daa into add push push add lret (bad) ljmp enter leave imul das pop adc dec push mov loop or (bad) lcall cmpsb sub outsb scas outsl pop add fisubr pop dec js call add mov jg push mov mov pop push pop and decl xlat in leave mov lods xor test (bad) (bad) (bad) call inc pop hlt and dec cmp sub ss adc mov cmp mov (bad) ljmp adc lahf xchg aad push cmc jecxz sbb and jae ss jg xor (bad) (bad) call pop add ds push jecxz dec add lods adc out sbb or sar (bad) (bad) jp jp lea (bad) sub cmp xchg jp addr16 stos call out cmp (bad) cmp out mov jns and mov repz cltd test icebp add mov push ss cmp daa xlat jecxz,pn (bad) cltd sub mov jmp (bad) mov add ss pop xchg cli sbb (bad) cmp faddl (bad) (bad) lcall ds mov addr16 cmp inc repz mov push push popa insb lock (bad) (bad) ficoml push ja mov gs xlat mov js adc js xor (bad) (bad) decl ret icebp jns sub mov bound in mov aas and popf sbb xlat imul mov xchg and push out push scas icebp outsl xchg (bad) (bad) call push lret std push outsl gs xchg setne xor push dec je (bad) (bad) (bad) mov sub adc push jge mov mov sbb gs xchg or outsl (bad) (bad) inc imul data16 adc xchg divb push mov aam push stos (bad) (bad) mov jle pop lods enter mov xor xchg mov mov (bad) (bad) lcall popa jecxz xor sbb pop (bad) sahf mov sub mov mov lahf inc or (bad) (bad) cld xchg mov ds fdiv mov xor (bad) lret test (bad) (bad) (bad) mov and xor xor jbe fsubr or sbb dec lds sahf mov rorb (bad) (bad) ljmp pop rorb dec push add in aam adcl sbb (bad) (bad) (bad) mov rolb test add push lods in cmpl call push push fist ljmp mov sbb push je push sbb mov pop sub and rorl es add lcall (bad) ljmp movsb lds dec or mov fbld sbb sub mov inc dec fwait hlt mov sbbl pop mov adc mov ret int dec fwait cmp (bad) inc arpl mov in push idivb in cmc jo xchg jmp ljmp and (bad) call ficom test mov popf xchg out scas inc (bad) pop popa dec mov shr (bad) (bad) dec inc in xor sbb inc sbb dec fucompp xor push stc in aas cmc cmp inc setg add mov lods jmp sbb (bad) (bad) (bad) cmp lods ret mov cmp add pop sub into fcomi loopne add call out xchg sub sub or pop (bad) mov push add addr16 adc and adc lock inc adc cmp xor xchg xchg (bad) (bad) (bad) cmp mov lret mov sbb incb push dec int3 dec and aaa inc leave (bad) (bad) (bad) (bad) decl fsubl push sbb and jmp les scas lret (bad) jmp gs sub js dec fldl jns out in test xchg clc into push sbb pop scas mov add fisubr fs and add lcall insl and mov cs inc pop or (bad) (bad) mov cmp cli sarb mov xchg cmpsb enter and xchg mov gs cmp pop lock into xchg jl push push movsl loopne fmul sbb mov cld (bad) (bad) jmp mov lds mov lret fsubrl arpl rolb xor sub fstl sahf (bad) (bad) incl jle int jnp jle push xchg xor jns clc cmpsb xor lds sbb dec push (bad) pop aad imul scas ss (bad) lret (bad) (bad) (bad) lcall or js adcl pop xchg stos push lret outsb insl mov mov pop lcall (bad) jg push add pop xchg test daa insl ljmp pushl fidiv jns imul inc adc (bad) rolb sbb (bad) (bad) mov pop movsb or pop iret mov scas dec dec stos jno data16 cmp ss bound or fmuls mov (bad) loop call mov or add (bad) icebp lods jle dec cmp in outsb popf sub jae das sarb sbb outsb xchg (bad) int3 mov xchg push fildl cld xor icebp lcall frstor je jp sub sar call imul stc jmp or inc int ret push gs (bad) (bad) out cli xchg add xor testb xchg jnp push cld dec dec cltd dec push (bad) push cld xor jo cli or dec mov int3 movsl jo mov jns dec cwtl out dec (bad) cmp decl jae xchg daa sbb fildll lock insb js dec sbb jbe inc adc and cmp call xor lds mov jnp and adc push mov (bad) (bad) (bad) incl stc xchg jb inc jle lret push xor jl push dec js out aam push inc push clc (bad) lcall and mov les shrb into popl in xchg in lods bnd fsubrs or and imul imul xchg or inc orl mov sub das (bad) (bad) (bad) ljmp sub clc sbb sti clc nop mov scas cli fist push enter (bad) (bad) (bad) (bad) cmp push add out insl add cmp pop add mov xor sub (bad) (bad) (bad) (bad) stc repz insl outsl and lret movl xlat mov xchg or aam (bad) (bad) (bad) decl dec cmp add mov pop push mov mov jle int inc daa lret cld lcall cmc imul jecxz fs inc fsubr and jnp adc cmpsb stc ljmp clc (bad) sbb rcl add arpl xchg add jne add lcall xor enter add cmpsb leave jno in sub (bad) aas es sub popa fnstsw icebp inc inc xor iret sahf ficompl cltd (bad) xor into mov aam inc sbb (bad) lcall mov pop leave out jle arpl mov sub add mov lret (bad) incl jbe ja cmpsl or inc or jl (bad) (bad) lcall xchg mov and ret jb cmpsb lock cmp popa xchg enter push mov lcall xor mov repnz test mov rorl sbb das cwtl (bad) (bad) (bad) incl push mov cmp rorb aam push jo rclb ja popf jns lock ljmp fcoms add jbe adc test call push std mov mov ret outsl (bad) lods mov inc out (bad) (bad) call fnstenv inc cs outsl ret pop cltd jnp,pt repnz jge sti enter dec ds data16 pop je stos psrlq iret push fdivrl (bad) xchg in aad out clc out test movsl xchg mov and mov repz (bad) jmp mov fsubr add not sub fstps mov jge fs (bad) (bad) incl andl jbe mov std (bad) cld shll or shr sub mov (bad) jmp jle stos fwait pusha addl std mov (bad) ljmp pop adc mov test mov insb sub es (bad) (bad) fildll mov imulb in push mov jge adc lea mov decl inc fstps fnsave scas mov jl (bad) cmp sub add add mov push inc add fsubr jns mov mov es (bad) call imul lods repz enter cmp das ret mov clc (bad) (bad) (bad) (bad) incl scas fidivl pop lahf pusha shll jnp cmc push adc into fdivrl push hlt outsl push orl sub or (bad) (bad) (bad) call push jne dec (bad) mov fmuls in mov xchg ss push fist mov add adcb (bad) (bad) (bad) cmp sub fs stos dec aas pop test lcall aam sub (bad) lcall mov cmp in loope pop mov fadd rol insb (bad) (bad) (bad) (bad) clc fdivrp fidivrl and xchg jecxz mov outsl pop aad call push cmp pusha jne or (bad) (bad) incl xor movsl pop adc decl jns or loopne arpl push pop sub (bad) (bad) (bad) (bad) jnp imul and adc and (bad) xbegin repz pusha mov (bad) (bad) fidiv jg cwtl (bad) xor lahf aaa or ficoml cmp shll inc mov pusha movsb dec cmp jne cmpsb xor (bad) (bad) (bad) sti loope test xchg adc xor pop adc insl psubb lods jmp (bad) (bad) call daa popf outsb rcl sub xchg rorl inc vshufps mov sarl or sbb cld fildl lock lcall cmp xchg cmpsl mov aam pop cli jmp repnz xchg rol (bad) sti mov inc pop (bad) call xchg mov ds (bad) decl or cmc outsb test dec lret lcall add cmp xchg sub jg ror jo cmpsl inc iret insb call aas cli push dec inc (bad) push mov data16 (bad) (bad) inc pusha push push push and sbb mov loopne or sub sarb out movl (bad) ljmp push sbb lods pop orl fistpl fistl adc (bad) fcomip jne cmpsb es test imul movsl sahf jne lock nop rcrl scas outsb mov je test lret cs sahf das inc (bad) (bad) (bad) ljmp insb int xor or push sbb xor stos mov inc adc (bad) (bad) incl ss pushf lahf lds mov test loop js push mov mov pusha sbb push xchg ja cs and sub sub icebp sbb (bad) incl lods gs jae divb test push (bad) lcall into dec pop loopne loope inc movsb mov test pop xchg add fcomip decl cltd fistp mov pop ficompl sti insb into ss pop mov jecxz (bad) (bad) (bad) incl mov lea jae fildl mov nop outsl mov pop (bad) (bad) (bad) decl (bad) stc dec scas xor or inc movsl push push aas popf mov imul fwait mov or inc (bad) lcall ret mov mov mov das add inc loop (bad) (bad) (bad) lcall push rcrb bound xchg (bad) mov dec mov dec xchg cmp inc (bad) mov and (bad) incl cwtl mov lret jne sbb testb jmp ja pushf and lods pushf pop jp into das repnz or dec jo (bad) popf in xor mov repz and mov and (bad) (bad) (bad) (bad) xor and ret movsb xchg cmp cwtl adc add inc hlt xlat pushf jo ficompl imul (bad) (bad) (bad) jmp jg mov adc add aad stos cli xchg mov dec xchg mov lret cld or lret sub imul mov cli je mov insb test add and neg pop mov out test (bad) (bad) (bad) (bad) fidiv adc mov add outsl push loop and stc cmc lcall adc gs pushf subl sar dec pushf int3 icebp fcmovb sti sahf pop fistpll cmp dec out jecxz mov je and cmp (bad) clc stos fs cwtl repz loope cltd (bad) (bad) jg outsb fcomps inc xor subb outsl sti shlb jmp mov subl xor ficoml insl cmp lods sbb mov adc pop xor out jno (bad) scas cli (bad) call pop mov pop pop cmp out adc rcll jno add sarl jb (bad) (bad) inc in sbb pusha lock (bad) push lret pushf cld mov shrb (bad) and or stos pop pop inc sub (bad) (bad) (bad) (bad) jo,pt jae push or ret pop mov fcomip aas cmpsl xlat addb cwtl jno mov jp (bad) (bad) (bad) lcall lea jno popf push inc fwait mov push sub jbe hlt mov inc cmc roll jmp jne js movsl cs loop dec lock jno lcall mov (bad) cmp pop ficomp outsb scas pop dec or (bad) (bad) incl cmp pop inc leave mov stc jno sbb pop and leave daa (bad) (bad) (bad) lcall (bad) sbb push out xchg push mov add mov (bad) (bad) (bad) ds mov adc inc and loope ficom bound and repnz icebp stos outsb ljmp sub sub subb mov add sub (bad) (bad) (bad) ljmp pop popf ljmp fistpll loop or mov out std and push movsl add decl stos cmp mov or in xor lds loope xorb sbb push (bad) ljmp xlat scas sahf mov jbe hlt aaa xchg pop inc mull sar (bad) fisttp mov or and jl int cmp stos sbb (bad) (bad) (bad) push sbb pop aas (bad) sbb popf enter clc dec push jno sti insl aam fisubl mov icebp (bad) decl rorb jg add into lret mov lods mov (bad) (bad) incl stc outsb bound pop (bad) pop and xor mov lods cmp stos (bad) jmp push popa sbb negl push ss mov int xchg jb (bad) (bad) lcall mov inc lret je nop ds cmp in cli cmpl (bad) lcall fdivl enter mov (bad) sub scas (bad) scas xor (bad) (bad) incl mov push xchg mov ret faddl out xor jo push pop (bad) cmp incl jp (bad) dec jl fwait leave jecxz movsb in cmc popa add sbb jne (bad) (bad) (bad) jmp out xor gs xor adc push loop enter leave loope outsb fisttpll (bad) mov or add fdivrs rcrb push mov (bad) sub (bad) pushl and js pop ficompl cmp or sarb lds (bad) (bad) (bad) pushl jbe shl int aam lcall push push push xor fstps (bad) pushl std and push push stc xchg push lods shll lcall (bad) ljmp out inc cwtl ljmp mov dec dec sub dec jecxz dec gs (bad) (bad) (bad) (bad) mov cli movsb inc cmp movsl fnstenv and daa es fs mov (bad) call inc in cmp mov (bad) sub cmp adc push pop push cwtl add jb sbb (bad) (bad) in dec push inc mov les (bad) xor sbb jb jbe jge pop push adc pushl push outsb add push fcmovnu fnstsw gs jge sub sbb mov and (bad) nop dec mov shrl loop aas mull loop or xorl dec cmp pop jmp aas in add or lods ds outsb xchg or icebp js mov mov lcall cwtl pop in jno jg dec xlat mov jp cmp aam cltd push loop and (bad) (bad) lcall jle cltd icebp add lds xchg xor dec jnp sbb ss mov mov cmp xlat ds mov sbb test shlb (bad) (bad) mov stos mov sbb jns sti icebp (bad) ljmp xchg loop mov xchg add pop stos inc mov push stos outsb ljmp pop call push ljmp (bad) (bad) jmp mov outsb mov add stos jo iret decb xor es mov or push jg (bad) (bad) mov into and ret je imul xchg repz (bad) mov out jne mov je dec and bound (bad) (bad) jmp push inc jne das xor sub mov mov repnz sub imul cltd cmp sub imul add popa iret movl push hlt (bad) (bad) (bad) call jb stos jmp inc jbe popf cmp daa mov xchg jmp mov fsin (bad) (bad) incl repz ljmp orl sub into xor pop jg aaa adc fldt lcall pop out sub insl or mov sbb pop cld push and dec cmp xchg (bad) mov out loop ret lretw (bad) inc push pusha jbe loop cmp add in xchg aam xor xchg push mov dec repz mov cmc mov outsl arpl (bad) (bad) call sbb jb subl ficomp popf jno sbb inc sbb lods sub sbb out adc bswap mov inc (bad) (bad) (bad) mov rolb je out fadd je xlat call (bad) decl push jns aam or push push insl (bad) std sti ror mov cltd mov xchg (bad) (bad) jmp xor mov xchg mov sub (bad) (bad) (bad) (bad) fscale call push pop dec ja mov xchg sbb mov in mov mov add sbb mov out out inc lods (bad) (bad) jmp mov cmpsl mov dec sbb movsb xchg and mov (bad) (bad) (bad) decl xchg and stc push (bad) (bad) xor mov cwtl mov pop push mov mov or mov mov nop aaa outsl outsl (bad) (bad) call mov mov lds iret or mov mov or jl popf call ret xchg push (bad) jb sub fisubrl nop gs (bad) lcall ds outsl test cmp (bad) sub xchg rorb js sti (bad) (bad) mov rclb xor int3 xchg jo out xchg pop loopne sub add xchg xor fsubl popa push dec lret xchg (bad) xchg mov mov inc daa (bad) (bad) (bad) ljmp xlat scas pusha rcrl cmp sub inc shrb (bad) and frstor into mov (bad) decl nop sarl cmpl scas roll push dec push or lcall sub or ds lea push fs and push sbb sbb mov stos scas fldenv lds or in arpl mov push push fsubrs outsl cltd mov pushf mov (bad) (bad) inc scas adc xchg cwtl sub mov adc add (bad) xor sti (bad) call test dec pop (bad) jmp ljmp dec jno pop push int clc fild sbb dec call pop xchg cmp sbb jmp nop outsb push test rorl lock rorb sbb dec addr16 dec iret sbb push dec nop icebp lods xchg xor aam adc fisubl je imul ror xchg (bad) decl pop mov xchg (bad) ja out fwait imull pusha aas pop push sub jmp push cltd imul pop adc sub (bad) (bad) (bad) pushl push loop incb sub sbb mov mov dec mov cmp jecxz jg add mov adc cli dec and (bad) out xor push out cmc or jp push xor insb inc jecxz cmp (bad) (bad) (bad) call push ljmp xchg repz pop push test pop stc cmp push fiadd loope sbb add xchg stos mov cli in test (bad) (bad) (bad) dec jp xchg inc (bad) inc sub lods in incb xor sub mov mov push sti push fucomp jae add ljmp js cmp icebp xchg cmpsb jae (bad) idivl std (bad) mov mov jo sbb dec push in (bad) push xchg sub or lea (bad) (bad) (bad) incl ss jmp jp pop cld (bad) ljmp push pop xchg loopne dec or aad (bad) (bad) (bad) dec nop mov mov (bad) (bad) std icebp lea sub aas test (bad) mov push mov or sbb mov push mov push sub inc (bad) (bad) (bad) (bad) out xor adc cmp add das or scas mov lods adc icebp dec nop mov leave (bad) (bad) (bad) jmp mov push enter xchg inc sti (bad) add movsl mov mov push sahf mov xor adc (bad) (bad) dec nop scas xchg stos int insl out mov cwtl xchg ja leave add jo aas pop arpl enter (bad) lcall test sbbl jge dec ljmp ljmp (bad) mov mov bound mov mov movsl pop mov (bad) lcall es rcrb pop imul loopne (bad) (bad) (bad) pushl fistl negb xchg std adc in cmp push loope xlat jne (bad) (bad) (bad) jmp jp sub rorb dec and ljmp jp fldl pusha pop mov insl push rorb fistl ds ret pop in or sub call xor jbe cmc add cs jecxz push repz je decl (bad) cli aas push dec lock push or and cld xchg mov nop (bad) (bad) (bad) lcall repz push add adc mov push jl mov cmp jecxz add adc outsl (bad) mov mov jb and inc (bad) (bad) (bad) call jmp loopne scas xchg mov push lahf cltd cmpsl jnp mov inc pop (bad) (bad) (bad) (bad) mov addr16 movsb push dec sub mov gs add xor dec stos lods or (bad) (bad) (bad) (bad) jmp pop mov aam cwtl jmp pop pop imul mov out or (bad) (bad) (bad) decl push xchg push sbb lods and push stos xchg fnstenv sbb mov test mov cmp ds (bad) (bad) incl xchg ljmp popa push lods cmp dec push imul sbb xchg dec aam adc and jp (bad) (bad) (bad) incl cwtl sbb das iret xchg jnp,pt insl push mov push (bad) not into xlat ret movsb xchg pop lock ljmp mov and fisttpll jnp (bad) adc cmpsb (bad) jmp xchg negl data16 fdivs sar lock in jg cmp (bad) (bad) lcall adc cmp lods clc pop mov cmp add or repnz cmp decl int loope sub pop sbb pop dec pusha jns push xchg push or outsb mov test out add sbb push jne xor mov sub (bad) mov lsl adc data16 (bad) pop pop fnstenv dec add (bad) (bad) decl shll or outsb int dec (bad) cs or adc pop jb fdivp ret das sti (bad) (bad) mov ds iret imul icebp xchg jo mov lret test es (bad) call aaa push cmpsl sub xor dec lret push xchg cmp (bad) (bad) ljmp mov lahf adc xor xchg test adc jnp test inc lret call lcall xchg jns cs mov test (bad) (bad) (bad) pushl clc leave or lods push das cmp mov sub fstl sub mov cmp ja (bad) (bad) jmp dec xor pop call into enter data16 fcom fnsave sahf pop sti push in xchg rorl (bad) (bad) (bad) ljmp or jnp jns (bad) xchg and arpl popa cmc shrl xchg mov lcall stos ficoml sbb lock xor (bad) or mov pop mov push mov xchg int daa inc fcmove cmp jae out pop dec gs aad stc clc cmp (bad) (bad) (bad) out ror mull popa cli cs int scas lret in sbb fs mov jg add call hlt xor jne pop es ds sub jp inc xor (bad) ljmp ja movsb jg push cmp xchg xlat mov (bad) mov (bad) pushl data16 xchg aaa dec cmp push mov jge outsl cli jmp lods lahf jno fstpl push sub jbe movsb lret (bad) fcos (bad) (bad) lcall imull inc xor out in lods das mov sbb (bad) xor cld (bad) incl mov xchg mov xor stc repnz pushl imulb (bad) pop cmp rcrb bound nop outsl adc or in aaa add dec icebp lcall aaa inc pop pop lds inc std adc pop lock jmp or addr16 aad mov and ljmp aaa js inc lods xchg jmp into idiv (bad) jg mov and pop and outsb scas and or lods test (bad) (bad) (bad) jmp jg mov cmpsl adc ljmp (bad) popf (bad) loop sbb inc jns lcall jno sbb and (bad) mov int3 sbb cmpsb aas bound cwtl test cmpl sub pop imul jl mov jp mov (bad) (bad) (bad) out repnz ficomp fnstenv orb hlt pusha lock sub dec (bad) and xchg inc hlt test sbb call shrb (bad) (bad) int inc cmp dec sbb pusha or (bad) mov add out mov dec add inc (bad) (bad) (bad) jg iret lret cmp pop ljmp mov sahf xor push ds xchg outsl jle and es push ret lahf sbb ja cmp and (bad) (bad) incl mov jbe stos and pop (bad) jo cmp mull mov lret lret xor jmp lods out push cmp iret pop bt test test inc nop cmp (bad) (bad) (bad) (bad) clc xchg pop add push mov sbb int scas icebp xlat add nop mov push loop (bad) (bad) call ja add xchg es mov test mov cli and and (bad) (bad) (bad) (bad) mov movsb (bad) push dec dec jno insb nop aam cmp lcall xchg test (bad) (bad) (bad) pushl mov adc pusha fsubs push mov repz cmp or aas loopne (bad) inc orl xor fsubl add cmp add outsb (bad) (bad) in mov jl add notb loope or addr16 inc pop (bad) (bad) (bad) (bad) cmp insb xchg pop ffree and (bad) mov sti lods sbb or push scas dec cmpsb sub ljmp popf repz into push and sub dec push decl (bad) mov jne mov xor (bad) jo mov xor ja ljmp mov inc rcrb add movsl mov (bad) fisttp popa sub jne popf adc mov loope sub xchg mov (bad) lcall in out (bad) fstl jno xchg in jb mov (bad) ljmp cmpsl outsb je outsb and mov or std js xor lods push (bad) (bad) fistp insb jo fwait cwtl and xchg leave xor xchg pop jbe stos and out popf adc in ret cmp outsb add (bad) (bad) call int3 sbb hlt clc cmc xlat shlb cmp pop pop cltd movsb loope insl dec mov stos sub jg sub sti jl mov dec nop mov mov (bad) (bad) pushl icebp rcrl aaa sbb sub jae and repnz mov lock lcall xchg push push mov lea mov dec test xchg mov (bad) (bad) (bad) jge inc xor lods outsb out jno decb fsub cmp adc cmpsb push sarl adc incl jl pop scas fs test xchg xchg lds cmc mov (bad) cmc jnp into fcomip jg dec mov inc in insl or and js jg in (bad) jg (bad) fsubr test ret cltd push xor loopne inc pop std (bad) repnz inc push fistpll and std pop imul mov or jo out push ss (bad) (bad) pushl in testb ss faddl pop inc xor outsl psllw or dec cld pop int3 inc inc aad pop mov mov (bad) incl rcrb movb xchg aam lcall jmp cmpps (bad) ljmp adc mov iret xchg loope aas aad xchg mov xchg (bad) sahf mov lcall std jae sbb data16 daa loopne dec fucom fiaddl (bad) jns movsl (bad) (bad) (bad) (bad) cmp addr16 inc rcrb dec mulb out mov int3 out (bad) mov fnsave in cmc add mov (bad) jl push inc in or rclb jmp andl (bad) (bad) mov je mov gs lret lahf mov ljmp cli (bad) incl cmpsl ljmp mov (bad) repz ja mulb or (bad) lcall xchg mov popa jnp call mov cmp push (bad) incl sbb movsb sbb add std lahf fadds (bad) (bad) (bad) (bad) jl push sub add out sub les adc cmpsl pop or push lret and sbb nop mov add ficoml (bad) (bad) push sub (bad) (bad) (bad) jmp push push call gs xor enter cwtl arpl mov push outsb mov mov stos xor iret or mov sub addr16 add mov ljmp and xchg bsf push ficomp cmc stos xchg and cwtl (bad) (bad) (bad) call (bad) jmp stos jge pop addr16 movsl jecxz or sahf push jbe std pop stos movsb xchg ljmp (bad) pushl std aam sbb pusha pop mov push ds mov lcall sbb das add call les pop movsb mov (bad) (bad) (bad) lcall call or mov adc fisttp jnp addr16 sbb fisub xchg xlat push xor ljmp fld dec dec and clc (bad) (bad) call mov mov js pusha inc ret xor dec fcompl ljmp dec dec cwtl adc push inc or (bad) xor call fs (bad) daa (bad) push push sbb mov into xor xlat ljmp fildl sub xor je xor sub (bad) (bad) (bad) fistpll cmp xchg or or test push mov js cmp movsl pushl call add mov inc sub ror inc rclb je adc jns es (bad) (bad) call pop outsb jno jmp push pop lds or shlb mov lds hlt stc roll (bad) (bad) (bad) push test cmp xchg pop add inc loopne mov jbe push mov mov (bad) (bad) (bad) call (bad) or cmpb int3 loop ret les in popf adc das add (bad) (bad) fistl inc jae lods pop dec dec mov inc push inc call sub in pop lock std in cmp ljmp loop pusha sub (bad) dec sbb fisubl jns repz adc sarl push dec pop pop dec pop jg sahf mov push mov call mov bound push mov push cmpl call mov jne aas jne adc sbb mov insb aaa or aaa stos (bad) (bad) mov in loope pop xchg xor andl int jl sahf (bad) inc mov (bad) (bad) incl popa pop iret mov ljmp int3 inc jo sar cmp sti mov daa cwtl fiaddl (bad) pushl lods or inc xchg mov mov in sti sarb rorl add jae (bad) (bad) decl inc sub mov mov sub (bad) repnz rorl out out std stos addl lcall pop or (bad) mov out jp add lret adc xor jmp mov (bad) jbe roll lea push inc add pop adc hlt adc repnz arpl aad incl sbb gs mov scas xor (bad) (bad) (bad) jg or pop mov jecxz dec or cmp xchg dec sub (bad) (bad) ljmp bound loopne mov adc dec test cmp (bad) (bad) ljmp in or mov ds adc sti mov sub dec jns add or (bad) pushl xor repz cwtl adc shrl push sar clc cmpsb push mov xchg (bad) mov outsb dec fimul jmp (bad) ljmp mov add or ret subl add mov jo or push fwait (bad) (bad) (bad) std inc aam push jne cmp mov daa xlat mov iret add cmpsb adc mov sbb repz push (bad) hlt mov jl imul (bad) (bad) (bad) jmp sbb mov jmp xor sahf adc mov adc mov mov sub shrb daa dec jp fnstcw mov aaa pop push outsl cltd cltd adc dec cmpsl incl stos mov stos push xor aas out rcll mov mov add ljmp mov push xlat sbb cmp xchg jge jnp (bad) ja xor lock incl rcrb sub fiaddl jmp iret jecxz (bad) iret pop cmp stos call pop std mov cld mov push dec xchg inc cli sub push (bad) (bad) (bad) decl jnp loopne sbb lock lods and or lcall scas andl jge jns mov pop add iret jns lea jno movsl jno (bad) ljmp xchg fidivrl mov insb movsl cld lahf stos fbstp cli lcall lea ror xor cld sahf data16 (bad) (bad) dec in and inc ljmp les adc icebp es adc (bad) (bad) (bad) (bad) jns cmp jmp daa mov pop dec mov sub push mov (bad) (bad) ljmp adc push pop jl aas pop mov iret icebp iret fadds enter fsts jbe (bad) (bad) (bad) incl fisubl test pop cli push xor neg xchg jmp movsl push mov cmp pop xchg (bad) (bad) pushl sub iret or scas insl ss fdivrs out lods or sarl sub idivb js (bad) icebp cmp pop int je jle push mov addr16 lcall jg ret test jge mov popf (bad) jno sbbl das jo jp ret dec ss or enter out push mov sar outsb mov mov xchg dec xor js push inc pushl rcl inc fucomip lcall es or jl cmp mov sbb fldcw inc rcr xor pop ret repz or push jecxz mov mov stc arpl jnp (bad) add mov xor outsl mov mov mov das push inc cmp adc push sbb inc sti (bad) in nop (bad) (bad) lcall cmp add sarw cmp mov xor (bad) (bad) ljmp mov rol ljmp xchg (bad) movsl and call mov pop (bad) (bad) lcall fidivrl popa into iret and or jae mov adc dec xchg das inc add or push cld (bad) (bad) cmp aam xor xor sub das rcr ds test and dec js sbb (bad) lcall (bad) mov movl call add or sbb dec mov sub mov shr in stos mov daa mov (bad) cli cmp push dec xlat data16 push pop xchg mov xchg fstpl das mov es (bad) cmp popf adc cli loope xchg jo inc xchg pop xchg pushf dec or dec or (bad) jmp inc inc out loopne xchg out sub cmpsl clc pop je mov mov xlat sub push inc adc add dec addr16 adc cmpsb cli (bad) ljmp addb add push insb mov pop (bad) test test push lods xor mov mov push rcrb frstor mov sbb inc sub (bad) (bad) lcall aas test fmull fisubl mov in sete inc jmp xchg fcomp or dec dec fdivl mov shrl aas xor js push jle iret ficom out ljmp and jmp xchg or mov and das pusha loop scas pop mov mov add (bad) call (bad) fisttpl jge or pop xchg xchg loopne roll arpl jge mov mov shr (bad) decl jns sbb sub fildl and xchg cmpsl iret scas (bad) lcall adc cltd cmpsb push mov sbb sahf into mov xchg cmp mov call imull xchg mov (bad) (bad) jmp (bad) xor push cmpsl push fstps pop mov sarl pop adc xchg popa (bad) (bad) (bad) lcall cmc inc pushf mov and data16 jae jb push sub push loopne add sti sub (bad) (bad) lcall loop add or insl rclb std outsl jmp cwtl popa or ljmp mov sub incl sbb repz outsb test repz xor or mov cli adc fwait mov cld xchg push or dec xchg inc jno sahf mov (bad) (bad) jmp or (bad) jo jmp fs je iret ffree push fwait int3 cmp loop cmp sar pop mov scas and jne and adc popa decl dec adc pop cmp movsb cmp (bad) (bad) (bad) (bad) fmul imul lods repnz gs xor and mov rolb (bad) fcomip jge lahf ror xchg mov fwait jle call push fwait (bad) ljmp inc cli cmp sbb cs into inc pop mov mov adc loop pushl lret xchg or enter pop (bad) cld fbld clc (bad) push test (bad) jmp and push loopne add lcall fsubl xchg jp loopne (bad) jmp imul push sub lods mov cld loopnew pop hlt mov sbb fsubs mov xchg mov inc fsub lahf int (bad) decl leave (bad) or cmp outsb jmp (bad) (bad) pushl add sarb das leave xchg loope xlat cwtl xlat push push pop inc je xlat bts (bad) (bad) (bad) pushl jle cmp push loop es jle add mov movsb loopne (bad) (bad) pushl jle clc js pop clc (bad) ljmp in sbb dec fstpl mov popa jecxz sbb mov mov mov mov pop xchg mov and dec mov add xchg insl and (bad) (bad) mov mov adcl xor push and test (bad) enter adc rol dec push fs add les out (bad) (bad) (bad) ljmp or ret or aam in scas dec cmp add dec jo std lret scas push add (bad) (bad) (bad) (bad) jmp xor cmp jp (bad) jp xor sbb xlat roll cwtl test pop sub or test (bad) std xchg nop dec adc cmp es data16 test ror xor or insb fmull (bad) (bad) lcall std adc xchg adc push les mov lock sahf sbb loopne lcall xchg fildll data16 jmp lds test ss sbb (bad) incl jns push stos jae loope pop sbb test mov fdivl decl sbb fcomps jb adc pop ds or mov xor hlt aas dec ds and push leave fs mov xchg push aad (bad) (bad) (bad) jmp or repz inc mov andl push stc insb movsb stc repnz shll xor (bad) incl cmp sahf adc pushf push inc hlt push cli xor (bad) (bad) (bad) incl mov push insl lahf negb push dec sbb dec add pop imul push imul movsb ljmp mov (bad) mull adc ljmp popa jg das rolb and jb rclb mov or mov aam sbb (bad) sub pop jl dec outsl and (bad) call dec mov xlat insb and call mov or in sub aaa lds or (bad) (bad) mov mov cmp (bad) (bad) lcall push inc (bad) xor clc loope xlat sub push adc mov js stc fwait push lock (bad) pushl mov test out cmp cmpsl pop mov add (bad) cmp xor std das mov fsubrs inc mov pop test mov mov (bad) (bad) jmp lcall or leave lods mov jbe fsts lcall mov fisttp push imul sahf xchg int aas and data16 in sub inc ds dec fcoml dec in cmp jge xchg (bad) (bad) fildll mov and push gs adc or push ret adc push cmp jmp pop data16 pop out pop int3 bound (bad) icebp je ret loop push (bad) push sti cmpl dec (bad) (bad) (bad) lcall les insl enter cwtl in addr16 xchg sub xchg jns lret sbb push jne add mov fwait popa mov cmpsl cwtl cmp int3 (bad) push out pop xchg aaa int3 lahf pop mov mov not mov mov inc aad or mov call (bad) pushl into xchg and sub adc mov pop (bad) xor (bad) dec jmp sbb fisubr cmp (bad) (bad) call push mov jno mov lret dec and outsl popf icebp xchg inc push mov push (bad) (bad) (bad) jg (bad) ds lcall stc les fimul push (bad) xor lock sbb ljmp outsl or jne mov test sub dec inc repz sahf dec cmp fsubrs or mov (bad) (bad) pop jecxz and rcrl test sub aad dec jle adc (bad) ljmp mov movsb lods shrb inc cmp out inc jae lea cli call lahf xor cmpsl mov inc xor cmpsl dec std mov (bad) (bad) (bad) call rcll and mov push mov lds std test push (bad) (bad) decl sbb push mov in enter xchg (bad) mov or rolb or and sbb or pushl mov sbb sahf dec rcrb pop push or jmp dec bound nop xchg scas xchg pop push test (bad) (bad) ljmp fs inc fnstsw mov add pop test sbb sub (bad) clc mov inc xor jle push les in dec (bad) out arpl shr push (bad) (bad) (bad) (bad) mov mov (bad) in sbb adc stos je xor movsb pop sbb in dec in shll (bad) mov stos sar (bad) (bad) (bad) out into ret (bad) icebp cmp xchg test ja out int3 xchg pusha in cli push add int3 mov (bad) inc add xchg cs (bad) out and jecxz out clc outsl add test ja daa mov (bad) call cmp arpl (bad) (bad) adc out lea sbb out xchg (bad) (bad) jmp pop mov mov mov das mov andb incl lds insl jge jb add jl cli inc imul add pop dec ljmp mov mov sar (bad) ljmp arpl and test and ja push mov jne test mov (bad) jl cmp adc clc jp (bad) daa int std fcoms cli push xor call sub xor cmp pushf gs inc add (bad) lcall and jns movsb pushf pop cld dec cmpsl ret aaa aaa push xor orl mov (bad) fistpll or sub addr16 (bad) mov pop pop std xor sbb leave sub cmpsl push int into mov cs sbb into call imul xor or popf or add jo (bad) (bad) (bad) incl into push xchg rorl adc inc xchg rclb es push cmp xchg lods ljmpw pop pushl js lea dec ds data16 (bad) fildll ds rolb rcr ss nop (bad) dec jns push insb jo mov pop mov incl test movsl sbb sbb enter and popa push or cmp fsubp clc cmp outsb and add stos push push mov (bad) (bad) aas out xlat push iret iret mov cmpsl testb push mov gs adc stos jg lret dec mov ljmp ror fs lret xor xor clc or dec test cmp pop mov call add sub fiadd dec orl incl call pop mov in fistl jbe in sbb (bad) (bad) (bad) decl push xchg sbb lret std js push popa imul fsubl jmp nop aad or test adcl into test sbb (bad) (bad) cmp pop sub fldenv jmp shr rcr add add int inc stos orl mov lcall cli es inc adc outsb fisubl pushl std xlat repz add out idivl aad sub (bad) cmc jmp enter push andl scas inc mov push mov jno inc addr16 aas cmc and in pusha push add add nop (bad) incl push pop setb pusha lahf lcall ljmp mov pop ds mov (bad) pushl mov sbb in mov (bad) mov push sub (bad) (bad) (bad) lcall push add jnp pusha and sti xor jae imul xchg mov out data16 incl pop add pushf sti mov cmp sub cmp (bad) (bad) (bad) decl dec aas dec sub cld daa mov (bad) fidivr xchg mov arpl (bad) push (bad) mov popf pop dec loope fs pushf sub lret mov aas (bad) (bad) (bad) jmp bound xor sbb and or lock jge in pop mov (bad) ds jg pop push push lea mov push or imul out sub (bad) (bad) (bad) jmp jl push data16 (bad) ss dec add push test mov xchg nop sub (bad) (bad) (bad) jmp jne pop mov pop jmp or mov and shlb cltd pop (bad) jae loope decl stos push mov xor inc push ret loopne repnz (bad) fistpll mov lahf mov jp (bad) push adc fldcw cmp push sub or xchg bound arpl xor stc pusha or int ffreep or (bad) decl das mov loopne jge (bad) jno jp loope stc popf pop dec addr16 pop incl mov jmp dec jg cmpsl and lret sbb (bad) (bad) (bad) pushl and jno push rcr push lahf inc xorl pop test (bad) mov inc or push jnp (bad) (bad) ljmp push inc push pop insl imul mov jg leave mov fdivrp mov dec jo jns (bad) (bad) call sahf out fistp mov pop jbe jge insb mov add arpl jle mov (bad) jle test lods and mov shl xor pop mov (bad) (bad) fbld mov mov pop fisttpl scas (bad) xlat cmp mov (bad) (bad) (bad) (bad) mov jb push shrb ds cli pusha cmovge lahf cltd push nop ret dec movsb cmp (bad) (bad) ljmp fisubrl xchg xchg and lock mov sti mov ret pop idiv (bad) ljmp call (bad) movsb daa or test ljmp pusha (bad) (bad) (bad) lcall and inc mov xor mov pop sub test mov stos sbb pusha (bad) (bad) mov jle jb daa xor inc test sub test pop mov and movsb (bad) call jg xlat test and sub (bad) mov addr16 mov ss push adc mov pushl mov cmp cld (bad) hlt sbb enter and or (bad) call test fs inc loop inc mov clc push lods (bad) fadd std adc (bad) (bad) pushl into imul enter and icebp push xor popf adc fwait inc (bad) (bad) (bad) call test jne (bad) sbb (bad) loop mov fisttpl push or and add (bad) cmp int3 fldenv adc hlt xchg adc popf out das sti bound add jnp loope (bad) (bad) (bad) push enter movsb sbb inc pop sbb fisttpl fsubrl iret pop mov push (bad) out clc add (bad) notb arpl jno in (bad) mov add (bad) adc nop adc add cmp out xor jno xchg lret icebp outsb cmc lcall pop mov inc jge push loope cld ss adc lcall fwait dec pushf ret lret shlb push (bad) mov (bad) out movsb sahf adc popf fcomps int3 sub (bad) lcall cmp mov pushf push inc dec cmp pop adc xchg cmp gs (bad) jg (bad) std fs in clc and add xor in and pop sar (bad) decl xchg mov add xchg cmp insl mulb jae sahf xor xor jb cmp (bad) (bad) incl sar imul sar bound imul out aad jne (bad) mov adc pop icebp (bad) lcall push jmp je (bad) or inc mov (bad) fisttp mov es or mov (bad) (bad) (bad) (bad) mov xor pop stc ficoml cmp and (bad) mov push repnz (bad) (bad) (bad) ljmp or push dec mov mov leave cmp inc sti jo push xchg jnp cmpxchg lcall (bad) cmp cmp std push mov stos sti jp mov pushl xor into sbb addl mov ds cltd mulb push cltd (bad) (bad) (bad) call dec mov lock sarb xor push outsb aad mov adc popa jo (bad) mov ljmp (bad) (bad) (bad) incl js mov rcrw ret and fidivr int js call cld insb lret jbe ljmp jnp mov in sahf (bad) (bad) decl pop push jns xor jp out lahf daa out and dec lods out (bad) (bad) (bad) decl mov lcall mov or dec xlat dec sub mov (bad) (bad) mov xchg inc aaa inc (bad) mov inc movsb (bad) push cmp loope rcl pop aam (bad) (bad) decl scas push test add imulb cld or sarb xchg mov adcb mov outsl or push leavew (bad) (bad) pushl je cld inc xchg mov out imul (bad) (bad) icebp lahf loopne loopne (bad) xor push inc sub jp sbb mov add loop addr16 in jl in iret repnz mull and sub stc jnp mov test ja iret sahf (bad) (bad) (bad) decl push jge dec ss xchg lock jle jp ret aaa mov es cli negb mov imul and movsb add (bad) (bad) (bad) (bad) sti dec outsl inc xchg adc insl sbb or jns in sti sub xor (bad) push pushf gs jbe call vunpcklps xorl lret and gs call adc sar (bad) (bad) lcall sti adcb arpl loop sbb adc sbb push push decl sti mov push cmp mov push sahf out mov inc cmc push lcall ret mov sbb sub je scas push jle inc add loop inc cmp or cwtl ds pop mov mov (bad) (bad) push (bad) jecxz push cwtl in fstpl jnp fcoms (bad) (bad) xor dec jl stos (bad) (bad) (bad) pushl xor xor pushf in pop xlat and and mov lods pop sahf sbb add daa xlat in sub pushf (bad) gs (bad) (bad) jmp ljmp lods push pop mov inc pushf or xorb (bad) (bad) ljmp clc out ss add fldl out (bad) or jne dec pop ror pop cmc pushl inc sbb mov repnz in or test jnp ds (bad) (bad) (bad) (bad) pusha mov arpl mov les loop lcall test push (bad) jno and or ja mov jb mov xchg push mov jae push xor cmp sarb or jno loopne jecxz fwait inc (bad) (bad) dec (bad) jbe adc sarb xchg pop sub in fwait loop ljmp hlt pop push sub cmpsl adcb insl dec rclb (bad) lcall (bad) lret dec jecxz sub cld fdivp mov fdivs add (bad) (bad) cmp or or sbb push pop stos nop cwtl lret (bad) (bad) call jbe mov mov adc (bad) rorb add fdivp sub (bad) (bad) (bad) ljmp cli xchg imulb xor push dec or add shlb add sub (bad) jg sbb in js mov pushf out enter adc mov mov (bad) (bad) inc sub repnz and sub sti xor push pop sub shl mov jp pusha insl stos loope (bad) pushl stos lods shld fdivl dec jl aaa xchg sbbb (bad) sti fdivr push (bad) mov popa xlat mov fcmovnu jbe cmc pop sub cmpsb xor lea (bad) (bad) pushl ret jge mov leave push iret pushf leave sti out nop or loope sub mov sar mov inc or sub sub lods sub icebp xor (bad) call mov push stos (bad) and or pop sbb shrl pop mov scas clc lods cltd (bad) (bad) (bad) jmp push addr16 pop outsb ss inc or mov insl (bad) std sbb nop mov jno adc pushf adc mov into test lcall das push jecxz push mov (bad) call push es mov fisubrl rol inc adc sub das xor xor mov arpl push xchg jg or ljmp mov movsb sbb imul xor ficoml or (bad) (bad) (bad) pushl cli mov fildl cli cmp mov and cs (bad) dec pop xchg cmp insl or cmpsb pop ret lods arpl cmp pusha cld add mov (bad) (bad) (bad) jg nop add xor add negb jns cmpsl cmpsb out cwtl add jnp jmp pop pushf pop xchg in pop nop push xchg in aaa adc imul (bad) jmp mov mov (bad) adc xor rorb add pop jbe or (bad) inc ss sbb add ljmp (bad) jmp aaa arpl sahf imul sbb mov aad nop (bad) test xor or cmp jnp imul (bad) ljmp pop js sbb fist lods mov (bad) testb scas dec sbb shll (bad) (bad) (bad) decl jnp clc cmp ds jl xor sbb js hlt (bad) (bad) (bad) ljmp mov and mov mov add addr16 mov aam sbb (bad) (bad) (bad) incl (bad) test mov pop inc popa dec lock add insb ja aas dec loope xchg ds xor aaa push xchg jne dec push mov test push stos cs dec pop test or mov inc push (bad) (bad) (bad) (bad) cmp fiaddl fbld push mov xchg cli jl sbb popa test sti sub lock (bad) inc or mov sbb jle xchg sub insb pop add pop fdivr push pop stc js addr16 loope mov mov push insl push fwait shrb test push add mov fiadd aaa pop or cmp sbb adc sub jns sti adcb inc fcoms nop inc pop mov mov loop test (bad) lcall sti dec and scas inc out mov ficomp (bad) fnop dec pop in dec (bad) (bad) call sbb or sub (bad) and cmp sub xchg aam (bad) (bad) (bad) (bad) cld mov or pop dec ds inc adc das in addr16 aas shrl pop and cmpsb or ja (bad) (bad) ljmp inc nop sub imul xor andnps fs or (bad) (bad) pushl add aam sub push cmp ljmp clc dec call xor clc mov test mov xchg xorb mov cmpsl daa fbld outsl data16 inc pop nop scas and repz ljmp pusha in outsb push jbe inc ret (bad) in aam int pop (bad) mov loopne lret decl and mov xchg push mov push (bad) into (bad) out (bad) repnz ret (bad) decl rcrb xchg clc inc sahf roll and push pop jns (bad) mov cltd adc xchg fstpl dec xchg int cli int3 mov mov inc rolb mov in mov int push cs sbb nop (bad) sar cld (bad) (bad) decl ret inc xchg sti sbb xchg data16 ficompl jnp xchg int3 and pop (bad) mov sbb stos popa mov (bad) pushl cmp mov lds sub jmp pop addr16 test sub adc (bad) (bad) call cwtl fwait pop mov push jbe pop cmp (bad) mov enter dec sbb cmp (bad) cmp and mov sbb pop aas inc add lds jae mov (bad) mov mov ja pop clc lcall (bad) (bad) incl inc sahf dec pushf push or and movsb aas cmp xorb sahf xchg cmc call or (bad) das lret scas cli (bad) mov imul push adc push xchg fcomps or lcall jo in mov push cmp imul and mov lea leave xor and mov (bad) cmp fisttp mov push inc xlat xor (bad) (bad) (bad) (bad) inc sub cmp cmp (bad) cmp hlt (bad) nop dec popl enter mov pop cmp addl repnz lock loopne or scas aas or (bad) in jmp mov ret cmp mov xor rorb mov sbb cmpsl (bad) (bad) (bad) jmp jecxz xor mov pop popl mov in jno cmc scas inc ret outsl mov (bad) in insb lret fcmovbe inc or add jmp xor jno mov (bad) call scas jne inc xor outsl cld mov int lock icebp aas fs cmp cmc jg (bad) jne push mov sub sub and (bad) lcall lds mov sbb call mov push movsb mov (bad) jmp dec into push into pusha lds inc cmp in (bad) (bad) cmp push cli sbb sub rcrb sti ds (bad) (bad) call ret push or sar mov mov (bad) jo int3 repz xchg inc pop lahf inc mov outsb insb jle or lcall or (bad) incl (bad) enter inc xchg xor loope (bad) lcall (bad) mov js mov test aam fninit loop (bad) je mov setno out fcompl cmc pop push mov mov push add (bad) (bad) (bad) decb xor add out mov test nop dec mov lea or pusha cmpsb daa pop xchg test or cmp inc add or sub mov push xchg sub mov iret xchg in lahf lods jbe jecxz push mov (bad) mov or fisttpll (bad) addr16 lods pop daa cmp (bad) mov xchg or std push (bad) cmpsl mov popa ss (bad) pop push (bad) (bad) (bad) lcall jmp pop and aas out out xor out sub sti mov scas fnstenv imul cmpl nop push idivb dec (bad) mov mov ficomp mov mov xor (bad) (bad) call dec sti enter adc jns mov fldenv stc add sub (bad) (bad) (bad) (bad) decb insl adc mov sub mov sbb subb je cs adc decl cmc bswap mov imul aad fwait or (bad) lcall xchg pop push sub sbb xor mov ret imul in cmpsl dec aam mov (bad) (bad) jg jnp mov adc lea mov jmp add cltd test (bad) (bad) (bad) pushl cmp psubusw aad arpl dec sub (bad) int3 fsubrs push loopne dec insb sbb mov add stos add push push clc and mov dec inc dec pop out dec stos daa adc (bad) (bad) lcall iret pmullw fldl jno loope sub ljmp mov push xor xor (bad) imul inc cld pop dec ss stos nop and (bad) (bad) mov xchg incl mov sbb (bad) (bad) jmp cmp xor hlt jle clc ds dec das add mov les dec loope lahf xor ret dec cmp add or push (bad) (bad) mov cmc push and (bad) adc loop mov rcr clc (bad) (bad) (bad) jnp mov idivb pop mov mov int xor (bad) (bad) jg ficom movsb lods and scas xchg xchg dec in mov popf lock (bad) jmp sarl lahf dec aas imul (bad) loope inc jp fwait aas std jo mov (bad) (bad) fisttp aad sub jo (bad) test flds ss push jns ja (bad) (bad) aaa std call adc test cmpsl inc cmp repz jecxz mov push mov incl cmp shrl xchg mov (bad) jno pop cmc call dec cltd or jae jmp cltd mov fadds cld pop mov (bad) mov xchg mov and xchg ja enter lcall ret outsl cli (bad) (bad) out and int3 (bad) mov add testl ljmp ljmp xlat jecxz add jl mov dec mov pop mov and pop enter (bad) (bad) (bad) call lret and jno fdivl testb (bad) mov jo das dec cs xor inc out (bad) (bad) decl imul std (bad) iret je or sbb (bad) incl test movsl inc pop negb pop int3 jle dec out jg xchg cmp test (bad) or (bad) fidiv incb xchg and mov (bad) pushl mov fwait repz pop ret cmp adc pop cmpsb dec rorl sbb fwait mov (bad) (bad) (bad) decl call mov int mov inc push out int mov scas mov push push lcall sahf pushf and pop js or dec int3 jb movsb add dec pop lahf xcrypt-cbc cmpsl pop dec mov gs out clc add or pop clc movsb lock stos ret mov (bad) (bad) (bad) jg or call mov xor jecxz xorb (bad) adc sbb mov jmp cmpsl lods lret in push and pop cmp pop cmpsb mov daa jp fwait mov lcall or mov ja ficoml inc mov sbb mov mov push mov mov lret pop pop rcrl pop cmpsl pop jmp (bad) (bad) xor mov or (bad) pushl std (bad) jmp jl sbb clc inc out push imul (bad) lcall or or push das mov sbb jp pop mov xchg out pop inc clc jmp (bad) call xchg imul insl mov nop enter arpl xchg ds fisttpll lahf ljmp add popf sbb inc lock loop mov jle stos lcall dec dec (bad) jne imul test mov incl cwtl cmpsb iret xchg push xchg das dec adc push inc pop push cmp jne aas in push fisubl lcall repz jg inc and inc das pop (bad) sbb fstpt adc mov test adc dec inc js cmp adc stc gs (bad) (bad) lcall sahf cltd fistp les les in lods loope xchg pop into inc leave jge pop insb or xchg jg loop xchg insl (bad) lods jmp and cmpsb idivl mov loopne cs cmp and sahf (bad) mov mov mov jg lcall mov cmp push sub or enter dec les or test cmp (bad) ljmp mov cli inc mov mov cmp pop cmp xor sub pop pushf pop (bad) incl adc cmp add adc xchg mov add jge lret adc mov pop sub pop jns pop je xor xchg inc stc insb insb aad (bad) decl clc loope mov dec adc (bad) lret sub and jmp shrl jbe mov lret mov ja ret cmc sub pop xor repnz sti out insb call push insl (bad) jbe sbb pushl jge mov cltd mov cltd sbb scas clc (bad) ljmp hlt fist test ffree rclb stc (bad) popf into add adc incl mov xor sub sahf xor pushl (bad) dec lock mov gs mov xor cmp xchg jbe pop mov test cmpsl je into (bad) (bad) (bad) (bad) fdivr or into sahf rclb cmpsl or dec xor xor out js int3 sahf push sub (bad) (bad) (bad) jg lcall test scas inc lods sub mov cs add fdiv invd loope in iret lods je and iret inc movsl mov push cmpb sbb mov call fs repz fidivr (bad) (bad) incl popa mov scas ror fisttpll and subl xor dec push out es (bad) (bad) ljmp push mov sbb cmp cltd data16 sbb cltd fwait add xor mov mov jnp aas push ret mov add mov (bad) jg fidiv mov push pop stos or push push pinsrw mov icebp dec js (bad) loop inc cmp test mov jle fcomip (bad) aas xor js xor cmp cld scas and push xchg fsubr aas xor cwtl decl cli outsb cmp push jo fwait jecxz cmp (bad) lcall out sub gs sub jo les dec in in pop es incb fs sbb icebp icebp pop dec stos add or adc movsl and mov sar (bad) (bad) incl imul sbb (bad) pusha push mov clc mov pop inc or fidiv (bad) ljmp imul sarl cli xchg cmp pop adc adc xchg clc xchg sti sbb mov add lret js adc mov (bad) cmc lods ds mov sbb xor inc mov xlat jo mov inc cld (bad) jmp cmpb mov (bad) (bad) out cli jg daa daa sbb fnstsw pop mov rcrl mov fwait sbb sbb (bad) fcomip mov mov adc mov lock sarb (bad) push (bad) (bad) pushl aas test enter xchg push or and dec cmpsl lahf cmp adc out cli dec lret es jecxz pop test mov push mov add adc xchg adc ljmp test fldpi fistpll cmc jl jno out inc out bound xor adc clc mov lcall ret stc jmp mov fldenv insl sub sti rcll or and jne lret (bad) (bad) pushl add mov hlt hlt sbb fildll (bad) repz dec mov mov aaa inc jg pop jmp xor mov lods mov adc adcl push (bad) (bad) (bad) pushl push mov and in sar popa mov dec cmc add inc push push (bad) ljmp lea mov cmp fidivrl cmpb mov imul sahf push js jae mov cmp fiadd mov addr16 mov jp (bad) (bad) (bad) jmp enter xchg (bad) mov loope xchg insl in cmp adc fistp (bad) (bad) (bad) (bad) mov mov sbb jnp notb adc vmwrite jmp push out nop (bad) outsl xchg cli (bad) ljmp rep xor (bad) decl js push jnp pop adc cld mov (bad) sti inc mov lret (bad) mov jo es outsb jmp fucomp xchg mov inc inc lcall gs mov dec call adc (bad) (bad) lcall je cmc jae cmpsl aas jae (bad) xchg mov jb rolb js jnp jae (bad) (bad) decl inc (bad) in mov xor jnp xchg arpl xchg sbb sub xor (bad) (bad) ljmp movsl cmp ljmp je fdivrs je js pusha movsb into movsb cmp call enter ds mov or xchg cmp mov lcall pop push sub and adc jl (bad) aaa xchg adc xor push xor lret (bad) jg (bad) sti push popl mov jo jmp add jne mov (bad) ljmp mov xchg jge xlat sti cmp cmp (bad) (bad) jmp mov fisttpll in xor cmpsb or jae xchg fistpll dec ljmp repnz sub jge xchg pop rcrb mov or xchg (bad) (bad) (bad) jmp fstpl mov roll push sub adc and (bad) xchg mov or (bad) sub (bad) mov mov (bad) incl adc push jns popa pop mov les leave into adc pop mov jae ss (bad) (bad) decl pop adc pusha pop mov sub in leave cld or (bad) (bad) jg xlat out dec ja push mov pop jp mov lahf ljmp cltd push mov incl mov pop mov pop mov pop xchg xor stc xor sar (bad) (bad) jg fwait pop lods ljmp insl cmp int3 mov in rclb loopne std sub inc inc inc (bad) or sbb ja xor xor push xchg sub es xor (bad) fbld stos jmp cmp movsb mov mov or es test mov (bad) (bad) lcall mov cmp fistpll add adc (bad) pop push clc inc ljmp (bad) (bad) (bad) decl pop fcomp mov xlat je mov test fstl xchg fstps (bad) push push out nop and sbb (bad) (bad) (bad) jge int ljmp loope cmp pop stos shr sbb jmp jp (bad) ljmp lret ljmp jle fwait ljmp jo xchg cmp dec push pop pop and out cli call lea dec enter inc mov jg test das xor imul loop cmpsl push cltd fsubp sarl mov daa and cltd (bad) pop pop addl jp outsl cli call aad push cwtl xlat out leave push jg rol stos cmp fsubrp dec xor sar mov pushw xchg or stos outsl (bad) or cmpsl cmp mov jg add icebp mov fdivrs int3 ds mov jbe loop fwait (bad) decl cli jp sub hlt push or xchg and (bad) ljmp adc test scas inc faddl faddp jns dec sbb dec mov xchg divb ljmp mov cld lock scas aas mov or sub clc out stc sbb clc daa fsubr xor mov leave pop in or jo mov mov (bad) (bad) pushl inc and add push sbb dec adc add jns out (bad) mov (bad) (bad) lcall sbb sbb adc push (bad) dec mov mov mov call jmp (bad) sahf xor sti es inc je (bad) (bad) cmp jno dec (bad) (bad) (bad) mov mov adc sbb jns mov xchg add pushf jo ljmp lock std sub add or scas lcall call scas fs punpckhbw js or adc das inc les pop pusha inc pop lods and add decl sbb jle,pt out mov (bad) (bad) (bad) (bad) cmp repnz test popf sub inc ss xlat cmp pop dec ds out cli das clc xchg out fisubrl xchg push in jb rcll push dec (bad) (bad) (bad) (bad) std push nop enter ja (bad) repnz fisubrl stos inc int3 repnz push ret inc and jg decl data16 pop test (bad) mov dec adc ficoml mov das (bad) (bad) (bad) lcall es js add pop pushf in enter and cmc repnz push mov push int3 ljmp (bad) call ljmp js xor fisub fdiv adc das and pop lcall (bad) (bad) dec and cmp cmp pop aam xchg loope cwtl imul cmpsl dec loopne pushl sbb movsl sbb inc in add into mov (bad) ljmp ds add ds push push outsb cmp jl and adc ret pop sarb (bad) (bad) ljmp xchg or pop dec jg mov nop push pop pop enter push call cs (bad) (bad) decl adc dec or mov fldlg2 or mov cmp (bad) (bad) (bad) pushl cmp jo cli (bad) mov pop xor outsb idiv mov fsubrl (bad) (bad) pushl dec flds mov fs or enter enter add (bad) (bad) (bad) jmp jg add push fs sbb arpl add test ds mov inc imul pushl mov push es or movsb and ret (bad) (bad) call inc xchg sub stc xchg and xchg cmp xchg fwait sub (bad) mov in cmp push mov or ficomp push pop xor dec shlb mov cli dec ds xchg xor cld addr16 enter int and mov sti (bad) call stos cli dec push cmp cmpsb dec rcl sbb adc (bad) adc and push cld (bad) ljmp xchg jbe sub loopne pop rclb (bad) je xchg inc jge stc mov sbb (bad) pusha adc orb xchg jno outsb dec stos dec dec in push jae lcall nop mov push push jnp leave sub (bad) xor dec scas (bad) (bad) (bad) pushl xchg and and xchg sub jmp jmp jmp cmp xchg lret (bad) (bad) (bad) (bad) decl or cmpsb mov sbb ret stos (bad) mov pop scas cmp loopne xlat and stos repz push push sub mov (bad) mov xlat jbe push jns sar mov jecxz pusha jbe rolb pop dec (bad) ljmp (bad) jae sub gs (bad) xchg je mov lcall lcall dec mov jg fistl imul fild sti fdivp out push pushl jmp (bad) in (bad) push mov mov in add or sub jl idiv (bad) (bad) (bad) mov sbbl out aam outsb aaa fisttp mov ret mov dec ljmp popa fs cli or inc cmp adc xchg lds (bad) (bad) ljmp mov pop or jns call mov sbb faddp adc mov (bad) ljmp xchg popf and mov cmpsb scas pop xor mov (bad) pushl xor dec pop lea inc add enter push lret scas (bad) (bad) ljmp push push dec scas or mov les xlat dec sbb and sub bound je rcll sahf inc outsl std shlb xchg xor insl je (bad) call and cmpsl cld in mov xchg call movsb mov pop jg mov (bad) (bad) pushl mov jae mov inc gs push add je sarb (bad) (bad) jmp insb pop and push loope mov pushf rcr jmp pushf mov cli ja (bad) (bad) (bad) (bad) ljmp sti popa outsb mov stos adc push test jp sub dec inc lds das popa insb pop test adc adc mov into mov and and das fldcw (bad) lcall jo xor in cltd test sbb cmpl int xchg pop add sub (bad) pushl std xchg xchg mov outsl aaa lea sbb mov lea fstpt (bad) (bad) (bad) mov mov xchg xchg dec and scas push gs cmp repz or test test mov mov (bad) jg decl pop into inc jo pop repz minps loop push movsb movsb sbb push cld and push cld stos insl (bad) xor dec push mov xlat in sbb or push mov adc rcrb loope (bad) repz (bad) jmp mov push add (bad) mov mov mov (bad) dec addr16 fcmove sub (bad) (bad) ljmp aaa pop cli jae push mov pop sbb bound cli rclb cwtl pusha (bad) (bad) (bad) (bad) in lret jmp stos in cmc nop push aaa xor incb ss in mov pop shlb insl inc inc (bad) (bad) (bad) ljmp ds jecxz shll mov mov xor icebp fild dec cmp (bad) pushl dec pop clc aam dec stos je lcall daa (bad) (bad) ljmp xor sarl or insb add stc sbb fimul jl icebp (bad) jmp jne jge xchg sub lahf dec xchg (bad) mov xor xchg push jl lea lock incl stos cmp dec or ds jns xchg push adc clc lcall testl xchg scas pop lret ret loope stos (bad) ljmp push sbb hlt jno cs nop cs loopne int3 fucomp and leave fildll (bad) (bad) (bad) mov jmp mov add and lret fdivl cltd dec (bad) (bad) (bad) (bad) (bad) call js mov dec ds movsl xchg push imul xchg icebp inc test or fildl inc scas test cltd ja xor ds aas xchg fs out jbe loopne mov push fldl lcall js push sar lea inc addr16 xchg mov and sbb lret ljmp (bad) jmp ss mov lret das test jne dec mov outsb pop into add cld jb jge ret cmp (bad) (bad) ljmp xor jge add shl cmp jbe mov sub movmskps dec push mov movsl add (bad) decl nop and xchg and out sub lods out push or add or in pushl mov sbb jns (bad) (bad) pushl cmc adc decb div fnstsw inc (bad) pop leave mov int3 mov cmp std lcall push pusha insb aad adc mov das in adc and inc and sub (bad) (bad) (bad) lcall dec cmp mov enter outsb rcr in push int jae aam jle pop or sbb add (bad) lret push out push and (bad) cld shrl jo push add sahf ss (bad) jg out add lret call ds jae jp or insb fidiv jns lods lock lcall ljmp fildll lea push cld inc mov (bad) (bad) pushl fsubs mov popa sub fild pop leave repnz (bad) pop fs (bad) (bad) (bad) lcall add fdivp inc xor hlt out imul inc decl mov (bad) repz movsl pop cmp inc (bad) negb mov xor je ret lods xlat adc (bad) (bad) jmp (bad) icebp bound or loope and fwait shrl inc mov jp (bad) (bad) (bad) (bad) incl add lret stc hlt adc add sub insl test cmpsb or in ljmp hlt daa ds repz pop push fwait inc and (bad) lcall pop lods pcmpeqw flds aaa mov jno mov push std fstpt rcl mov (bad) (bad) lcall icebp dec jl rcrb data16 ljmp mov inc and daa stos dec mov out lret mov inc movsb push inc dec daa add mov icebp je mov mov xor add jbe das adc (bad) (bad) (bad) mov daa shr enter aas iret jae cmpsl xor loop pop loopne pop (bad) incl js iret mov inc pop test popa in inc hlt mov lods push hlt cmp dec (bad) incl lahf fcmovb movsl rcl pop jg loopne dec in mov mov mov bound stos icebp nop aam (bad) (bad) (bad) (bad) fcoml test insl cmp adc fwait movsl in sub repnz outsb notb cli sub mov lret mov call test std xchg pop xor dec popf dec pop xchg or mov mov (bad) (bad) inc cmc xor insb pushf xchg dec mov mov rclb addl jge (bad) rcrl cmpsb lds cltd lods cmpsb push or dec out (bad) pusha push outsl mov arpl inc das nop dec pop jge cmp pushf or imul repnz in das ds mov loop outsl cli (bad) (bad) cmp jle enter mov sub push in aaa xchg insl add mov rcrb aas jmp inc jmp rclb and cmp inc dec pop cli test mov test (bad) (bad) pushl leave pop cmpsl and test xor add mov dec cmpsl push imul (bad) (bad) ljmp cltd jecxz iret iret in adc xor mov imul add mov mov mov divb (bad) cli addr16 loop test outsl lds dec loope ret repnz jle add lds loop fcomip (bad) lcall pop pushf fistp or lret (bad) jbe scas std adcl (bad) or and fldln2 int add sbb pop rclb and adc ljmp addr16 sbb mov in leave (bad) idiv (bad) (bad) call icebp sub mov sbb jne popa or inc xchg je mov mov (bad) out cli xchg add rcrl xchg imul lods idiv (bad) (bad) lcall out clc and mov xchg add test das inc dec test mov push cmc fisttpll pushl lds dec or fidivrl adc (bad) ja or loope adc adc push insb dec add xchg out clc mov mov test (bad) ljmp scas fsubrl addl cmpsl mov mov push inc fnstenv dec push cmp or mov dec inc add or xchg dec jne inc stos imul jg (bad) pop mov out fsubs and (bad) (bad) (bad) lcall pop and mov in push bound (bad) in inc scas adc push sbb cmp lcall and jp pusha cmp xchg bound jo test jnp (bad) jnp shlb ss int3 (bad) js aad mov adc lcall cmp xchg add mov lcall ss fldenv lret test cmp jge and or sbb fwait jle mov xor jbe pop hlt xchg xchg les sub (bad) (bad) decl adc pop push pop adc jmp cld sti out icebp inc insl std sarb lahf (bad) (bad) (bad) (bad) out out lcall (bad) add mov dec test mov push sbb xchg mov jmp jmp push mov into popa jo cmc add jbe sbb aam (bad) call cld push mov add lahf mov or out aam xor cmp (bad) (bad) decl mov cltd mov mov addb and insb js loopne insb leave add lret cmp aas xchg inc movsb clc je cli xchg adc cmc add (bad) out lret (bad) mov or xchg mov cs arpl xchg mov mov jmp repnz bound mov jne roll (bad) jmp adc js dec mov lcall inc cmp mov ss (bad) (bad) ljmp ds mov sarl rcll repnz in dec mov (bad) (bad) incl dec dec scas add dec sub ret call or sbb rcrl test dec xor push gs and pop (bad) pop mov repz (bad) (bad) call pop or xchg push push xorb sub xor mov jg aas mov (bad) mov mov mov pop and outsb inc sarb inc hlt push sub pop xor decl fiadd cld mov pop cmp inc or cmp (bad) in (bad) (bad) (bad) lcall call aas or xor cmpsb mov add adc incl leavew ljmp inc dec outsb pop jle,pt mov outsb add pop push xlat xchg ljmp (bad) cmp inc push sub sub test call or mov (bad) pop jmp jbe lcall pop and pop pop (bad) dec cld sbb (bad) incl adc cmpsl mov outsl imul cmp dec inc aad fwait std (bad) (bad) decl das lcall sti pop daa add and cs cmpsl pop cmp arpl imul pushl cli add mov (bad) fnstcw or mov and (bad) pop lock cmp (bad) (bad) call xorl pushf fnstenv jbe imul fsubrs jp js push mov cli (bad) jge ss sahf mov and (bad) icebp ss pop loop add mov or adc pushl and in lret insb pop ja (bad) (bad) dec sub fiadd out dec popa ljmp jo sbb and (bad) (bad) call call pop cltd fs cld sbb mov xor inc dec and inc mov (bad) lcall ds mov pop fucomi jge mov xchg mov or dec pushf xor pusha sbb cmpsb (bad) lcall pop push out cmp jno fldcw incl test or add cmp fs (bad) (bad) push lods out push iret xor aad rorl imul out lods push ljmp int (bad) (bad) jmp adc xchg mov mov (bad) push shr out lret xor lea push insl (bad) jg (bad) sbb aad push xor test dec sar (bad) (bad) frstor fcom jb and push inc imul nop leave adc inc xor ret into rcll (bad) jg daa sbb (bad) lods pop int mov xor (bad) (bad) (bad) (bad) mov cmp mov mov jne rcrb aad test stos nop push data16 jmp mov negl aam lds inc bound dec addr16 (bad) cmp jns xchg movsb push inc scas push dec mov cwtl (bad) (bad) (bad) pushl ljmp sub mov (bad) inc dec scas call in in add stos sbb in mov popa js inc push jecxz lock sub mov pop cmp add jl xor ss dec adc add mov sbb cmc pop frstor or or (bad) (bad) (bad) incl out dec xchg aam inc fnstenv out jl and icebp fisubl jl sbb stos sub jbe xchg add mov add incl sbb leave int and xor std ljmp sbb (bad) (bad) (bad) cli xchg int sbb jns int sarb or add mov mov flds int3 xorl cmpsb (bad) (bad) (bad) call test inc xor adc mov or stos lock outsl sbb (bad) pop cmc incl or inc mov mov (bad) lods or lds (bad) ljmp inc pop lds stos xlat or mov insl xlat movsb dec pushf mov lahf aam jge cmp iret mov (bad) (bad) (bad) clc lcall sub aas sub cmc mov ret and dec jno daa arpl (bad) mov add add js xor aaa mov cmp cmp jae and push test xchg sarb xchg inc out ficompl (bad) fbstp mov mov xchg jb pop popf mov decl lcall out lds outsb cs (bad) (bad) pushl (bad) in xor insl (bad) sub cmp movsl popf mov lods mov dec (bad) (bad) (bad) pushl cmpsb insb lods pop pop sar sub xchg iret insb dec lea push dec call lret (bad) (bad) fcomip test imull dec js das test push pop fnstenv xor mov jno (bad) call adcl mov aam mov (bad) xor jg fcmovnbe fs (bad) ljmp jmp xchg fidivrl loop sub cs mov jb imul mov inc dec or shlb pop add cmpsb rclb lcall ljmp out pop pusha aam push sbb push pop cmpsl loopne lods xchg out lds mov push adc enter test mov movsl shrb (bad) (bad) incl divb mov test ljmp pop orb pop sbbb call incl test dec or sbb call push ja in (bad) (bad) (bad) lcall in xchg ss loopne pop mov fsubs inc pop or dec cmp fdiv decl ret pop jnp lret test (bad) (bad) jmp cltd lock rcl push xchg pusha test lahf ja jl sbb movsb jecxz inc cwtl ja (bad) out mov sbb xchg dec or loope gs (bad) (bad) jg and mov lret xor arpl pop and stos inc dec (bad) cmp mov mov js fsubr clc ljmp mov into lds stos adc or mov pop ja (bad) (bad) (bad) call imul mov cld addl (bad) fmull mov mov mov adc call (bad) (bad) ljmp outsb cmc popf pop cmpsb sbb sbb test jp cs out (bad) mov arpl jg mov jmp dec lret mov mov (bad) ljmp sub jp scas imul popa jp ret xor add push mov loop mov mov movsl adc sbb mov (bad) (bad) lcall push repnz popa and jle and fcmovne aaa aaa cmpb adc cmpsb inc (bad) jae clc dec test or ret inc dec lds (bad) mov dec dec push pop shrl movsl cmp inc aad lods (bad) (bad) (bad) incl insl sbb fcmovnb xchg iret jle imulb (bad) lret inc outsb in mov (bad) shrb ret (bad) mov mov pop stos mov stc push in push or ljmp cmp lcall dec adc jae inc je xor mov sahf sub lcall or movsl leave dec xor es mov xor (bad) (bad) decl rcrl scas mov rcrb (bad) pop sub hlt add mov mov add outsl jo,pn push scas inc dec (bad) sahf imul ss (bad) (bad) incl and jb cmp adc js aas les sub push orb cli out das fsubrs mov or lock mov sub lret fimul sbb (bad) (bad) (bad) decl (bad) xchg mov inc cmp and int push out aad cmp lods push dec fwait ja xor push push cmp pop mov aam (bad) (bad) call adc and insb lahf lock jmp inc sbb push in dec push (bad) lcall push push jns and (bad) imul mov push js stos cs sti or dec addr16 fisub (bad) (bad) (bad) ljmp fwait jae xchg sub mov cmp push out mov sub pusha adc ror mov in cmp cmp mov cmp add xchg lods jb arpl push out dec sbb push gs (bad) (bad) (bad) decl mov adc jns cmc (bad) bound movsb pop or push pop or sbb mov push aam pop inc stos dec pop lock call mov and and (bad) (bad) (bad) (bad) cld fucomp or pop add fmul pop push xchg insl pop aad push jbe jge mov shlb (bad) (bad) lcall mov add scas fsubrp push sub fwait jl cmpsb mov lcall push push (bad) (bad) mov xchg aas stos jb push lcall xchg xchg push lcall (bad) ljmp sbb push cmp push cwtl jl pop or call clc mov call and fimul es lret xor or (bad) (bad) (bad) (bad) mov (bad) mov cld sub stos push jg sub cwtl repz inc (bad) (bad) (bad) lcall outsl jno mov mov out jae pop mov mov xchg lret mov (bad) (bad) lcall dec mov and xchg pop icebp or add ret sbb jo stos mov pop mov subl sbb ret stos pop sbb jecxz mov hlt (bad) (bad) (bad) jg ds push cmp dec scas sub rcl push pop ds xor jmp bound imull movsb mov pushf dec or into adc jecxz lahf mov out xchg (bad) dec mov mov (bad) decl push mov add ss sbb mov lret (bad) ljmp inc xchg repnz rclb notb push and in mov pushf mov (bad) pop mov fwait xchg test mov push pop outsl mull xor shrl pushl fstpt fadd leave xor lret ljmp (bad) (bad) (bad) pushl inc insb (bad) cmp xlat test or cld es pop xor pushl push mov push addl mov lret outsb ss rcrb sbb inc mov dec idivl scas fcoml iret loopne (bad) (bad) dec cmpsb jae (bad) stc jb pop fdivrl clc cld cltd xor ficom js ljmp imul call lods mov loopne arpl (bad) adc into cli shr mov xchg lcall add xlat (bad) jo shrb mov lock decl or push rorb imul jns leave add xor pop movsb scas push (bad) (bad) (bad) ljmp adc cmp mov sub adc sti mov cmpsl push mov popf add fildll jmp mov xchg xor into mov push cmpsl sar ljmp cs mov lea mov mov (bad) (bad) (bad) decl pop pop movsb aaa push icebp pop divl dec nop cltd ficomp rcrb mov fsubrs push jmp movsl mov sub (bad) leave (bad) and dec imul (bad) (bad) (bad) dec adc sti jo xchg leave (bad) lea pop clc mov mov jmp adc mov stos mov push xchg (bad) push bswap cmp (bad) adc out std shl jbe add mov (bad) (bad) jmp mov sbb sub out sub fisttpl test lahf and sar decl pushf cwtl cmp sub lret (bad) pop sub mov jmp cltd push pop or add mov ds je (bad) test mov mov jg inc stos mov decb adc ret mov (bad) bound test mov (bad) flds lret mov aad (bad) incl cmpsb pop jns lods mov jge daa mov cmpsb add xchg mov push ret rcll pushl std jg cmp push and and or gs dec cmovl mov (bad) (bad) incl mov push add mov mov addr16 notb sub cmp mov or jle (bad) (bad) inc pop add mov (bad) js lahf pop ss out cli fs movsl icebp ja bound icebp jno (bad) (bad) call je xchg (bad) imulb fs inc inc in jg cltd sub daa ret clc in inc loop jns jle (bad) (bad) in mov inc test push movsb sub shr push test add addr16 cmpsb inc das pop (bad) (bad) pushl mov push in push inc cltd mov cmc mov jg mov push pushl ret ds (bad) (bad) (bad) dec (bad) dec (bad) (bad) lcall mov dec test out out push xchg leave push sarl push and sbb jl cwtl xor mov (bad) out dec mov fisub push sahf and push outsl sbb inc aad jne aam pop lods mov imul sbb (bad) (bad) dec ss loop repz push outsl push jmp adc sahf scas cmp leave adc out (bad) (bad) fcomip adc add xor mov negl push mov jle xor inc in les iret cld mov nopl mov call ficom fwait (bad) rcl adc add in add xacquire mov sar (bad) (bad) (bad) (bad) or jae or jne lahf cmp cltd ja mov mov (bad) fcomip insl xor and mov xchg insb fstpl (bad) jno stos (bad) (bad) and (bad) (bad) aas jnp mov (bad) fcom sbb (bad) ds push into and push mov (bad) (bad) (bad) call (bad) cmove xchg dec test test add sub pop pop dec and inc or decl decb in pop call ret pushf push dec inc inc sub push out nop xchg lea hlt jmp push xlat pop (bad) xor (bad) jg call mov add into pop dec adc add inc (bad) fwait (bad) jmp pushl xchg mov lds jnp dec js (bad) (bad) ljmp sub pop push mov test out (bad) xor mov (bad) (bad) (bad) (bad) aas xor loopne sbb push mov lea aam xor pop (bad) (bad) (bad) inc in fs mov dec outsb dec (bad) push dec sub in adc clc mov mov pop imul lea add inc insl call lcall fldcw dec pusha les in jl (bad) jno jecxz add fbld cli (bad) (bad) clc cmpsl in adc das insb ss sti and lds jg or sbb jns call ljmp mov or popf push dec push pop in inc push push int ret test (bad) (bad) mov or pop (bad) mov cmpsl sti addr16 jne inc je (bad) decb decl (bad) icebp dec mov aam cmp sbb cwtl pushf subl mov mov cli (bad) (bad) dec pop xchg cmp scas mov xor push and fbld xchg jmp pushl mov cmp xchg (bad) lock addr16 (bad) (bad) ljmp sbb push popf pop lods dec add and fcomps mov cmpl xchg cmpsb das cli cmc les dec push repz vmaxps mov repnz mov dec cld movsl mov push and mov mov scas jmp ss mov sbb mov inc cmp out or test nop mov sbb mov jg call lds mov mov push das rolb xchg dec inc (bad) (bad) (bad) (bad) mov imul ja loopne mov call pop dec (bad) (bad) (bad) (bad) cmp scas loope out rcll jp sbb out test pop addl jge push imul push inc mov push xchg out pop test or out js (bad) incl negl add xchg xchg push int3 fisttp pusha push sbb sub ret (bad) (bad) (bad) call out sahf fnstcw (bad) mov xchg mov mov lods mov les push xor sti (bad) (bad) (bad) (bad) ljmp jmp xor int3 (bad) push ds hlt add mov imul lcall sub mov dec xchg cmp dec cmpsl in lods lods adc ret test mov or add sar lret push lret cmp sub push stos lods lcall jg mov fstl push aas fidivr adc or mov les jmp lahf loope (bad) cmp mov add ja negb aas cmp ljmp jno bt pop mov sahf lahf xor inc (bad) (bad) (bad) decl push popa cli in dec sub or lret mov push daa daa das outsl pop mov mov imul scas or mov lea ds imul (bad) (bad) lcall scas negb push (bad) arpl fcmovb in xor cmc inc ret shrl out sahf ljmp pushl adc inc push aas mov lock dec test pop decb (bad) in dec call mov notl rolb popa inc sti and and (bad) (bad) fistpll xchg rorl push dec pop inc rorl add dec clc cltd mov (bad) incl sti xlat mov and or (bad) imul add bound dec leave push (bad) (bad) clc imul or pop ret ret ljmp mov shr movsb (bad) (bad) (bad) jmp adc dec in loop mov mov insl inc (bad) jge fisub jl xor mov ljmp add (bad) lock aas (bad) fldl sarb fstl sbb push repz pushl sahf xchg jmp test sbb cli push sub cmp (bad) (bad) (bad) incl adc (bad) mov mov inc mov xor fdivrs (bad) popf xor (bad) (bad) (bad) (bad) aas in ror inc int je pop mov mov sbb in leave (bad) push cwtl xor adc (bad) jmp mov int3 xor lods add mov js pop sub xchg outsl fiaddl pop push jecxz push fistpll push test (bad) decl push out cmpsb pop inc inc dec cltd dec push or xchg push dec cwtl pop jmp push adc (bad) jg sub push push insl cmp xchg pop or cli orb ret (bad) dec sbb mov popa jno test js and rolb int3 (bad) mov (bad) (bad) fucomi dec aas sub decl sbb add cmp enter cmp stos enter dec xchg cmc (bad) mov adcb xor les adcl (bad) call pop mov jb sarl pop jnp jb (bad) (bad) (bad) out xchg divl lods and and and jp idiv mov (bad) lcall rsqrtps loopne lods add mov (bad) (bad) (bad) mov daa lcall add out dec pop dec inc xor lret andl out cmp jge ja int3 sti pop sub dec mov sbb and or pushl cli adc data16 pop dec cmc mov jno mov lock (bad) jmp sub std popa rcrl pop pop adc xchg lock pop scas lret push inc (bad) loopne push lock push lcall pop adc imull pop sub and outsl sub jae mov incb insb ja adc fwait (bad) mov dec in lea ljmp add andb xor fwait (bad) push loopne,pn cmc push xchg add sub (bad) (bad) pushl push movsl xchg add test adc into inc sub movsl cmp push hlt int3 js stc (bad) lock (bad) decl popa cmpsl push jbe push insb add (bad) (bad) aaa pop sub sbb or dec jecxz or push mov dec add pop out (bad) (bad) (bad) fistp pop negb pop jno xchg enter xor mov in mov fcmovb xchg fcomip (bad) cmp and xlat rcr mov and cmp dec repnz (bad) (bad) incl jo lret imul cmp push fdiv (bad) fcmovu cli mov xchg cmp ret sbb cli (bad) call jecxz jo lods fsub push mov adc cli mov je push push lock incl push dec hlt xor test inc idivb and std (bad) call inc xor insb jbe dec mov mov sub mov cmpsl or in dec inc adc dec jnp adc (bad) mov mov cmp mov cmc clc les mov pop add xor sahf (bad) ljmp push dec mov xor sbb (bad) (bad) incl jecxz in dec neg in stc xor mov scas mov mov repnz jmp mov push cmp cmpsb mov ret xchg or add mov ljmp ljmp mov mov mov mov or iret mov shrl ljmp jmp lods lret pusha js xor aam sbb lods sbb lret dec cmp pushf leave jmp scas (bad) (bad) ljmp sub (bad) sub jne out mov adc pop dec xchg (bad) (bad) call (bad) je xchg lcall xchg popa push aad mov cmp pop push cld (bad) lcall scas lahf push sbb mov fdivrp in push pop cli add xchg out adc (bad) (bad) inc pop fstp ljmp jle icebp out fisubl adc ficompl or inc inc pop aad subl icebp push fs pop sbb (bad) (bad) (bad) mov add rcrl xchg sbb jg jle,pn pop xchg xchg (bad) (bad) (bad) (bad) fstpt outsl mov scas in and sbb push cmp cmp hlt (bad) out js jo (bad) jno xchg out js inc jne ror adc (bad) (bad) inc leave arpl popf pop xchg clc xor mov test orl cmp lret (bad) (bad) ljmp or jnp xor mov or test (bad) (bad) decl mov popa clc nop loope mov fiaddl nop aam pop (bad) (bad) (bad) (bad) cmp cmpsb bound and mov nop pop into jb cld rorb test add dec xlat (bad) ljmp sub mov pop (bad) adc sbb jo data16 cld jg adc int sub popf push subl cmp add iret jl inc mov dec cmp aas aad adc cmp pop (bad) (bad) ljmp stos mov test std sbb cmp aaa outsl lahf cmp idivb sbb (bad) (bad) jmp cwtl bound jmp or fwait xor hlt pop dec dec incl xor xor nop add outsb push xchg lcall (bad) mov pop loop sbb jbe and mov xlat inc (bad) (bad) (bad) pushl and lods push int3 xor mov ret popf dec jbe sbb movsb lcall (bad) jmp lock push cs dec add xor push xchg adc add sub and (bad) call cltd ret xor dec aas push in mov fcmove or jl xchg mov xchg in decl push push cmc incb cld aam (bad) es sub (bad) (bad) (bad) in cmpsb and scas adc iret xor xchg lods adc jbe mov or mov jmp daa pusha ljmp sbb xchg arpl pushl cld push push mov ja pop xor mov enter mov (bad) dec jecxz add sbb adc ret push gs cmpsl (bad) (bad) lcall (bad) cmp (bad) movsb in fidivl cmp xchg dec inc scas xchg fcomps mov into daa lock (bad) (bad) decl nop cmc xchg and pop sahf jmp scas mov or push aas xor sub lcall (bad) inc int xchg test hlt jmp mov mov (bad) pusha test sub (bad) push (bad) decl popf (bad) dec aaa lods xor je leave (bad) scas out xchg loop add mov (bad) test jg add lcall icebp cmc pop stos pop or (bad) (bad) jg mov leave xchg mov lahf int mov jns cmp (bad) (bad) ljmp mov mov sbb push push cmp addr16 xor dec ret pop mov (bad) jmp adc and jne hlt shrl (bad) (bad) mov js ds inc scas aad add dec cmp fisttp int3 and (bad) mov not and cmpb into test xchg imul jg out fidivrl (bad) lcall xchg (bad) (bad) cmp subb xor ljmp or mov jo insb inc pop ret loope ja fsts fwait (bad) (bad) (bad) incl fs sti pop (bad) loop push add xchg int inc push jle movsl inc jg (bad) call inc insl imul sbb loop push xlat xchg test (bad) (bad) (bad) (bad) (bad) jmp (bad) sarl dec pop shrl leave sbb icebp loope clc jl (bad) test dec (bad) (bad) (bad) incl repnz popf or adc (bad) sbb roll sub pop cmp or pop mov jmp sub add lret icebp das ret adc cld test jae xor or (bad) idiv (bad) (bad) (bad) fsub adc lcall mov out mov in repnz push scas or les (bad) (bad) (bad) ljmp xlat or shr xchg and dec mulb mov cmp jl (bad) (bad) jmp xchg jl push leave sahf push mov inc call aas and ss xchg cmc pushl mov sbbb xchg fldcw mov std (bad) (bad) (bad) sub xchg inc ds xor adc pop mov ljmp inc sbbl sbb xor xchg mov (bad) (bad) (bad) ljmp jp push push jo imul daa iret sub mov ret sbb out xor (bad) (bad) (bad) fcoms mov mov in loope jnp sub mov adc jns enter mov or cmp dec xchg jae jb xchg jge pop mov jg adc or es popf fsubrl adc cmp imul push xor pop (bad) (bad) (bad) decl (bad) mov xor add inc hlt call dec xor and push xchg cmc mov mov test xchg sub fnstsw push hlt (bad) (bad) (bad) jmp fistpll jge imul add jb jge fsts jge out push scas iret outsb out dec (bad) (bad) dec fucom insl jo into mov push pop sub cltd in pop add mov incl test stos mov and mov add add fild (bad) (bad) fcomip jns push or xchg imul mov stos (bad) adc fildl insl outsb loopne (bad) lcall (bad) cmp nop xchg (bad) call sub jle clc (bad) call push fdivrl jp dec dec sub add inc or jecxz and push mov incl cltd rcrb pop sub cmp js repnz pushf aaa (bad) (bad) (bad) inc cmp icebp push xchg sbb pop mov mov adc jae lcall clc or fild incl lahf push fldt and jns (bad) enter pop xchg movsl divl cmp lods mov (bad) mov fdivs ficomp aam pop xor int3 test mov jl lcall js cmpsl sub test pop adc (bad) push std cmp rcrl adc ja xchg dec add (bad) (bad) (bad) push movq push stos sub add es jmp cmp xor jo into (bad) (bad) (bad) ljmp sbb dec aaa (bad) xchg pop dec ljmp rclb or insl xor scas adc sub xor ds pop loopne roll lret cwtl cmp push std pushl pop test inc dec int fmul loopne push push mov xchg scas jge cwtl imul pusha mov mov cmp adc out xor daa fild mov jo js test cs insb cmp jg jmp mov loopne movl xchg fwait (bad) adc xchg leave les gs aad pop jae (bad) (bad) jmp fdivs or scas in cmpsl adc das fcom das stos xor stos mov clc mov outsl rol mov cmpsb scas mov dec xchg (bad) adc (bad) inc ss mov aad out xor in jle (bad) (bad) pushl sbb scas xchg test mov fcomps lret in sub lods jne in mov repnz sbb dec cmp push sti mov ljmp mov fildll cld mov clc ds sub mov aaa sbb fistp push into xlat notb jp shlb (bad) (bad) (bad) jmp mov xor cmpsb sbb test mov inc aas rcl add popf mov add fcomi cmp movsb xor icebp shrl or (bad) lcall inc cmp ds jb repz outsl jl clc fmul fdivr fdiv ljmp rcrl add ljmp (bad) jae addl (bad) dec push data16 mov xor pop ss pop aam (bad) lcall mov imul es push mov cmp test popa mov fdivrs cmc (bad) pushl (bad) mov inc stos mov xchg xchg aas fidivl cs mov (bad) decl sbb test lods (bad) inc inc lret das emms xchg add xor jb je jge mov add insb ds fucom out incl popl (bad) (bad) (bad) (bad) sti ret lret push in xchg push jne bound popa mov push ds sub (bad) (bad) (bad) ljmp rcll or andl ds fwait xchg js and mov loopne cmp xchg inc dec pusha dec mov jne jmp clc out jnp out mov mov (bad) (bad) incl mov hlt movsb sahf mov dec inc aaa pop or pop pop push aas sti xchg and cmpl loope dec test xor add cmp movsb lods (bad) (bad) (bad) jmp and mov bound lods repz mov mov and sub and lds out ret mov mov cld (bad) (bad) out mov lret lcall loope clc leave adc dec lea push ret fsubs jle (bad) (bad) call fisub jmp mov fsubs or (bad) fildll mov xchg mov (bad) (bad) (bad) lcall or pop mov movsl add (bad) ss xchg aas cs pop imul (bad) lea (bad) (bad) (bad) decl mov and sub fiadd rcl dec adc stos rclb cmpsb pop lds jecxz (bad) (bad) (bad) (bad) adc sbb (bad) (bad) js or std dec lret js cmp (bad) lcall add sub mov (bad) loope jp push test decl shl jle out mov out push lahf incl in jno mov cwtl not adc enterw test push (bad) (bad) (bad) mov shll test faddl js jb popl inc rcll jle (bad) (bad) mov jnp stos fs inc idiv (bad) call push mov push push and pop adc pop cltd mov pop scas mov (bad) (bad) (bad) call cmp inc aaa push mov sub dec (bad) pop aad push push adc adc (bad) (bad) (bad) ljmp cmp jp sbb fist (bad) jmp ljmp aam xchg (bad) (bad) (bad) push inc xor inc sub cs pop daa xor (bad) and movsl jne (bad) decl jl or sub mov mov (bad) call adc andl mov rcrb push or cmc scas mov (bad) jg dec xchg cld mov and or jge in popf (bad) movsl into (bad) mov pop movsl icebp (bad) (bad) lcall or (bad) iret mov pop ret jmp ret jb clc xchg in xlat (bad) (bad) call mov (bad) hlt add (bad) sub fimul cmp mov les adc or xor mov loopne and (bad) (bad) (bad) mov add or (bad) jno sbb (bad) int3 in popa jae or call lcall cwtl xchg hlt rcr fwait pop lahf mov leave pop stos push js fimul enter outsl jne cs mov jo test and cs je xchg ret out jns adc cmp rcl call adc jle ficom mov js ja xchg jmp movlps jnp imul mov decl cltd or fisubr push repz ret mov xchg imul add xchg mov cmp nop (bad) fisttp test sahf xchg xchg pushf out and bound mov decl pop cmc jle mov cltd insl sub jno fsubrs rcll call sbb decl cmp lods mov das xor leave movsb sbb iret (bad) (bad) (bad) pushl mov sub iret in inc sbb pop add dec sbb mov sbb (bad) (bad) (bad) (bad) cmp aaa push jno fsubrs addb xchg xchg add addr16 jae (bad) lcall ljmp sbb mov movsb push das icebp (bad) (bad) decl loop and insb cltd xor pop sub fcomps (bad) (bad) lcall adc jno dec cmp outsb data16 fwait or jnp jb mov std fdivrs (bad) (bad) (bad) call sahf insl xcrypt-cbc cmpsl push sbb dec not or outsb push push in cmp cs push (bad) (bad) (bad) (bad) cmp ror aam dec repnz mov dec and xor into orl enter call and mov pop push mov call inc pushf in fild sub pop cmp jg hlt sub fidivrl (bad) and ljmp (bad) mov or (bad) (bad) jmp adc inc out subl dec xlat add fnstsw mov xchg ret faddl sbb lock mov rolb jbe xchg add lock (bad) decl push mov mov jp pop add cs add shl (bad) pushl lock cld movsb cmpsl pushf cmc mov sbbl xor (bad) (bad) (bad) mov mov and and push sahf in mov cmp (bad) mov push and (bad) (bad) decl sbb roll cli mov mov aam add loop mov bswap dec gs lods jge jns test rol (bad) (bad) (bad) mov push jle mov push cmc inc enter lods fstpl fimul in pop push (bad) repz (bad) (bad) jmp xchg jbe cmp test dec sbb rorb cmpsl cmp test cld popa call shrl lret (bad) mov xlat pop cmp insl (bad) (bad) mov movsb ljmp push inc mov movsl pop inc xchg fsubs (bad) lcall jmp sahf mov cmp (bad) (bad) (bad) mov pushf push in jo fmull pusha xchg mov (bad) pop stc inc push adc les (bad) (bad) (bad) (bad) mov popa sbb pusha ror and jecxz (bad) mov rolb popf loopne stos mov (bad) jmp dec jmp jns leave xor out or inc mov mov xor (bad) (bad) lcall stos xchg mov outsb (bad) push xchg jl fiaddl ret stos sub xor sub jmp mov or aad lods or sub dec std arpl jns (bad) (bad) (bad) in andl aas test push iret cs into sahf push cmc inc jne mov mull rolb mov pop imul cmc xchg cltd xchg jnp fisubrl jg push mov and test mov xor (bad) (bad) (bad) (bad) (bad) std sub scas subl cmp jge jbe xchg sarb sub push lea lcall jl push or cld (bad) (bad) (bad) (bad) mov lock pop add cmp jle (bad) mov icebp and lock jnp hlt xchg icebp scas (bad) jmp sahf andl fdivs pop fistp dec das (bad) (bad) lcall xor ret jg xor outsl das out and sub fisubr outsb (bad) loop loopne or mov or add fucomip cld pusha lret jp adc pop int (bad) (bad) (bad) pushl pop mov fstpt (bad) leave mov jmp mov lods addr16 xor outsb mov (bad) mov mov dec (bad) call mov mov stos (bad) scas sbb out pop lock mov (bad) (bad) decl mov or mov test sbb dec or mov (bad) mov add sti mov (bad) (bad) (bad) jmp or or jp sbb bound in dec clc sub pop mov ret jb fildll loope xor les ljmp (bad) (bad) pushl mov mov add xchg stos jb inc aam add mov imul (bad) mov enter jmp xchg aaa addr16 outsb sbb (bad) (bad) (bad) jmp mov lret mov or fs stos dec xor push mov dec movsb and adc or dec cli outsl add inc mov sbb (bad) (bad) jmp lret hlt mov mov shrb out xor jbe popa lea (bad) clc inc aad iret or in loop push dec fistl gs insb pusha cmp dec xlat (bad) jnp (bad) hlt add (bad) (bad) push daa movsb outsl cld jg xchg popa sub pop lret ljmp aas jmp add (bad) (bad) (bad) jge (bad) std xchg pop mov sarl or nop outsb inc xor outsb mov pushl push lahf (bad) push jae orb jmp lcall jp jle mov push call (bad) cltd enter push pop cld out dec daa jmp out ljmp clc incl push into push sbb ds decl pop dec xor dec xchg outsl arpl pop inc std rcr cmp fidivr add (bad) jge mov imul xchg imul pop (bad) push jge mov pop inc mov jne xchg (bad) (bad) (bad) call pop mov out arpl or fs icebp push out adc ds inc (bad) (bad) (bad) (bad) cmp icebp enter add adc inc gs add inc push cs dec stc mov mov (bad) pushl adc jl inc mov jp mov sub andw cmpsl mov insb jp cld (bad) (bad) cmp inc sub out cmp popf add (bad) gs dec pop ds (bad) incl inc outsb rcrb push loope adc and mov adc xchg sub xchg test lea es in lret add pushl aad xor or push fnsave aam stos in add lods mov stos dec ds cmpsb lds je add mov (bad) (bad) decl (bad) add and int3 shl mov push and (bad) cmp loop cmp fcomip xor out jo cmpsl dec shr (bad) (bad) inc imul and xchg popa xchg adc sub fisttpll sub fdivr (bad) (bad) ljmp cmpsl adc pop lea sub add fdivr stos stos out jns daa leave mov mov sar (bad) call and iret dec sbb mov inc adc xor (bad) mov es push dec push mov frstor cmpsl fiadd adc call pop xchg pop cmp mov or adc jnp fwait stc push in xlat fcoml loope test (bad) (bad) pushl fsubl test out inc add jbe dec xor lea fcoms into dec idiv mov cmp (bad) (bad) (bad) in fdivp push and out insb dec push add adc pop and nop shl sbb mov jle push (bad) (bad) call push insl movl lock cmp push and lret rcll (bad) call dec popf sahf xchg divb inc arpl mov jl mov inc fcom jle cmp (bad) (bad) mov and les not shrb xor fimul test pmulhuw cli jl xchg popf iret cld nop inc ljmp pushf es popf push cltd jl adc mov fcoms push push add lcall cld fistpll stc jne hlt add mov mov ret mov (bad) (bad) jmp aad lock (bad) ds scas sbb movsb in dec mov call and (bad) call lret xchg pop aas cmp insl pop fwait and mov std (bad) mov loop mov stos popf dec or cmp in mov mov add aam inc outsb (bad) pop mov sar pop add dec dec inc fwait push (bad) nop flds (bad) (bad) pushl in sahf xor mov cmp xor inc scas mov fwait into das fcomip ja lea sbb sub and fdivr (bad) (bad) decl lcall push push inc push or lcall (bad) (bad) (bad) mov add (bad) mov pop rclb addr16 out sub fisttpl jb incl mov into fucomp nop mov mov or jp or pop mov push imul ficomp mov push (bad) (bad) (bad) call les pop fdivr pop (bad) or rcl repnz xor in (bad) (bad) (bad) call mov hlt lcall xor scas and (bad) fwait adc fsts es cli (bad) ljmp jo pushf mov sbb add fstl mov (bad) (bad) jmp clc cmpsb mov inc (bad) js jbe push pop add repz pop and rcrb imul (bad) (bad) (bad) call daa mov test xlat cli ljmp push ds lea aaa xlat push add xchg (bad) fbld cld ss mov mov sbb pop out mov add loope fwait sub mov xor stc xchg outsl int sarb adc mov out sub jle and (bad) (bad) decl mov xchg and mov sti ljmp xchg sub lea adc lret push shrb mov sarb imul fsubl cmc mov scas insl sub lret sbb rcll test mov jecxz inc xchg out (bad) (bad) (bad) pushl xor jle (bad) sahf pop xchg add adcl mov lock aas dec cli (bad) lcall mov and out mov inc sub out inc and mov lock ljmp sub pop idiv cs add push pop mov clc mov mov test mov push jb cltd lret mulb into test jno sub out pop jnp pop xchg (bad) (bad) (bad) ljmp stos mov push or jge nop es add rclb mov (bad) (bad) (bad) (bad) in stos (bad) je repnz addr16 push leave xchg repz adc rol cmp dec test pushl xchg xor adc dec xchg in stos and hlt (bad) mov push (bad) push mov and (bad) (bad) (bad) fisttp mov das push xchg fidivrl stos int push pop faddl push psadbw (bad) int3 and in (bad) (bad) (bad) ljmp (bad) jbe mov mov ja jg js loop add sbb popf mov mov (bad) incl xor mov (bad) in or mov dec sbb dec sbb scas add mov icebp adc (bad) jl jp (bad) jle popf in xor incb sbb jp fwait and lahf pop inc pop (bad) lcall in pop xchg push mov sahf mov jl nop xor sar into or lcall mov je mulb push xchg scas mov ds iret add imul (bad) (bad) push dec addr16 mov add mov push rorl in nop sbb popf pop insl push clc (bad) (bad) clc pop addl push inc mov push dec shll mov xor (bad) ljmp mov mov roll enter adc pop je sub stos inc das test add mov and das jo (bad) (bad) pushl pushf pop (bad) repnz (bad) rolb fdivl (bad) cld add dec repz cld lcall ret add mov stc push push lret sti mov (bad) (bad) call popa ffreep mov dec lods cmp dec or sbb push add jg (bad) jmp dec pop in inc pushf push fwait pop xchg hlt jl jae sub cmp loopne xor inc push mov cmp hlt push pop adc sbb mov (bad) fcomip dec (bad) sbb pop cmp add loop punpckhbw (bad) (bad) (bad) pushl sub fistpl inc das xchg fadd inc rclb mov jl mov jmp outsb mov xchg cltd dec lahf fcoml rorl mov stc test cmc ja ret xor cmp mov (bad) decl ret mov cmp lcall xor ret aad jmp (bad) (bad) (bad) pushl loop scas inc test jle stos fdivl stc inc sbbl mov push (bad) fcomip std lds jbe and imull mov jle js addr16 mov sub (bad) mov ds test sbb mov call lret dec bnd ds aam mov inc cmpsl incl cld decl pop fsubrl test xchg and les stc inc xor add cmp fisubrl sbb jp sub mov push ret dec pop mov sub (bad) enter out decl jo jle divb (bad) jne popf xchg int3 dec jmp (bad) fstpl and jle cmp in and insb push pushf mov jns or dec and imul jbe push rep (bad) push clc (bad) (bad) call pop jmp out int jns arpl stos xor rcr fdivl mov (bad) (bad) out push push nop or inc dec push dec mov daa jne dec stos lret pop shrl cmp fcomip (bad) pushl dec mov mov pop jmp sub in sub decl inc cli jl jle sbb sbb leave cwtl or clc (bad) inc dec sarl and or jno adc cli mov mov (bad) out mov mov movsl push outsb pop mov ret mov add add aam cmp add fcompl jge enter jb out xchg lods push loop cmp dec test decl fmull ret scas or add mov add insl ret pop out (bad) in in dec repz notl arpl clc incl fcoms in pushf push jno xchg ss incl push xchg lods test mov in fdiv frstor or (bad) call pop push sbb mov ficompl insl cwtl jbe (bad) (bad) ljmp add sub clc adc cmp lods inc pop mov jl incb stc xor (bad) (bad) (bad) ljmp hlt out loop push inc mov les inc sbb (bad) xor enter cmp outsb imul fild add mov ret inc test movsl or (bad) ljmp jge add stos pop push xchg push xrelease cmpsl dec in cltd inc xlat (bad) (bad) call mov (bad) mov fwait (bad) test cmp push mov (bad) mov frstor (bad) (bad) (bad) decl aas negb test icebp cmp pop inc sub inc jmp (bad) pushl mov inc imul mov mov loop cmp and mov outsl mov add aam (bad) lahf pop loope (bad) lcall push mov test ljmp adc push imul mov in andl test pop mov mov ljmp test fdivl sysexit add and and out xchg xor decl (bad) arpl mov add pop repnz sti cmp push jne ljmp (bad) call pop in push pop repnz std ss sub lods test (bad) lcall cld adc outsb dec es lret push jg pushf int3 add pushl std sti fildll xchg jle jne lcall stos mov (bad) push inc xchg xchg xchg (bad) xchg mov sub add ja,pn aaa xlat sti idivb (bad) jg pop cmc imul mov aam sbb (bad) repz out cmp imul (bad) (bad) call addr16 inc ror (bad) cmp movsb push nop out loope fisubr mov xor dec push pusha or mov xchg adc pop lret jbe sbb cmp (bad) (bad) (bad) pushl repz nop movsb xchg mov clc dec push push fldl (bad) decl jl push (bad) lods or out sar sbb mov stos pop mov fstl (bad) (bad) jmp xchg faddl (bad) xor (bad) sub rorb lahf mov aaa cld call loopne mov insl mov call sbb xchg or mov xchg jg (bad) call loope pop jno push push cmp inc add mov lcall add pop jo test sbb (bad) (bad) lcall and inc dec fwait sbb push push mov outsb jl lret sahf iret icebp push sti add inc call out and mov sbb push into or scas add fnop hlt or ss dec int3 sarb imul (bad) adc adc ret xchg xor adc xchg sub lret rcrb or inc mov push inc pop adc xabort loopne lds ret mov push mov aad out mov fdivs sub (bad) ljmp inc add mov out test mov dec loop mov xchg mov (bad) (bad) (bad) lcall aaa bound test das lods add fsubl fcmovb sarl in enter jmp inc loope decl pushf pop lea aam pop hlt setbe icebp dec in ljmp mov dec or ret in mov mov or jmp xor adc push dec test add or cmp sub scas (bad) jg pop pop or lods movsl test add dec push cmp push and (bad) ljmp push xchg add mov sbb scas push or addl sbb (bad) (bad) (bad) pushl imul pop std cmp jbe inc add jnp adc mov dec sbb lcall xor or dec lock (bad) jg shrb icebp lret push ljmp rolb pop (bad) (bad) (bad) ljmp popa inc in sti ret jne lahf cmp fidiv fdivrp or xor adc mov (bad) (bad) ljmp (bad) roll outsb inc fadds sub loop sarl jns lcall das (bad) (bad) (bad) decl ss adc cmp pop sbb aad out call mov mov or pop jbe push gs xchg mov int3 aas push lar jle popf jnp and pop (bad) adc sahf nop pop dec add cmpsl and lcall push jnp into xor arpl loopne shrl rorl shrb call (bad) (bad) (bad) fistp ja lds push and mov fistp and (bad) jmp insl mov adc and mov cltd xchg cld popa push (bad) (bad) (bad) mov pop xor dec stos out (bad) and lcall sub idivl add (bad) ljmp dec je xchg addr16 jno push mov pop pop push aam pop add (bad) (bad) and inc push and (bad) mov or mov insb cmpsl (bad) xlat xchg ret jne bound jecxz mov jns incb (bad) (bad) pushl clc pop or cmp mov fstl pop cmp push loop sub (bad) cli pusha sub pushf cmpxchg (bad) idiv pusha dec add movsb sub jnp (bad) (bad) (bad) jle lfs pop stos xor pop std fwait insb imul cmpsl imul or xchg pop sub outsl pop add and mov sub popa adc incl add jb xor fs addr16 lret sub jbe movsl imul mov enter call add enter repnz shrl dec push inc mov push add (bad) (bad) call add pop (bad) lock popf lods fucomi roll pusha xchg mov inc xchg sbb (bad) jmp mov mov xor aam daa out xchg or (bad) (bad) mov jmp sub mov add sahf hlt dec and (bad) (bad) (bad) (bad) fxch mov mov mov and push fldcw in jo popa dec mov (bad) mov (bad) fucomp stc adc sbbl cwtl mov mov loope xchg fdivrp (bad) (bad) incl dec lahf add mov pop sbb dec mov mov pop mov (bad) (bad) (bad) incl adc (bad) cli shr jb cmc xchg jnp icebp bound int3 movsb add sbb (bad) (bad) (bad) jns bound aaa lea mov sarl sub jg mov mov add decl imul rolb int jecxz ljmp ja aad dec mov ret leave insb sbb mov loop fistpll loope push dec (bad) cmc ror cmpsl xorl enter (bad) decl mov ret je adc jbe ja subl (bad) (bad) (bad) jmp sbb rorl sbb sti and mov push in int3 mov lcall cmp bound mov repnz or mov js cmpsl push adc xchg pop (bad) ljmp rorl push lods jns out divl ss cwtl cmp (bad) (bad) (bad) pushl or or adc stos sbb mov mov lahf sbb mov pop add out (bad) mov jg mov repz sbb add fistpll mov lcall jae gs mov fs jmp out cmpsl inc push push or fstl xchg outsb jns jae xchg aaa mov mov std out iret notl jae dec jne cld (bad) (bad) scas push insl xor sub pusha loopne out loope adc lcall or lods int adc and outsl (bad) stos mov jmp call adc loope xorl aaa lock push sub sub xchg (bad) (bad) jg cmpsl aam fcom out fcomip or add dec jge es loop jle (bad) (bad) (bad) jmp (bad) (bad) lret add inc stc popa dec pop and test mov push jno lret in adc (bad) jmp cld lret cwtl repz add rcrb cmpsb hlt xchg mov mov stc mov inc inc mov loope rol testb mov (bad) (bad) incl ss pop adc mov out movsl pop icebp lods ljmp or cmp in push aam std iret pop repnz adc cvtdq2ps out lret scas (bad) jge sbb ficomp in test (bad) call test push inc sub add mov push cwtl ds lret cld (bad) (bad) incl jg out (bad) das clc ret pop push pop inc sub adc pop bound add dec cmp rorb jmp mov xor sbb andl into pop jecxz (bad) (bad) (bad) incl xor (bad) iret push popf sub mov or sub sub lock dec mov sbb (bad) (bad) (bad) decl into pop out ljmp fs cmpsl mov jb and mov and adc jmp outsl sub push aas gs clc incb lret movsb into jle (bad) mov andl loop in inc out es enter mov rcl or aas xor jb clc ljmp adc fsts fisttpl popa popf pop cmp mov mov cs test shl push mov (bad) mov cs push dec push in sarl (bad) push inc into mov (bad) lcall xchg enter xchg mov out (bad) push (bad) jg add pop into push mov push jmp je mov xchg aam ljmp fdivr int outsl jecxz (bad) call (bad) pushf iret les outsl mov push jb adc pop xchg mov xchg lods (bad) lcall mov ficomp imul movsb out daa mov loope cmp and lcall pop push out fcomp jo pop xorl (bad) (bad) mov cmp (bad) inc nop jmp aas jl out pop pop pop hlt imul and lock in pop ljmp fisubrl pop lea sti adc pop pushf cs adc dec enter ss (bad) lcall sub xchg (bad) mov jp dec push or xchg ds sbb inc or sub (bad) (bad) (bad) cmp push adc cmc dec dec xor xor nop add gs loopne stc lods stos fstpt mov insl cmc (bad) (bad) (bad) pushl push jp pop or dec xchg and mov ficom call daa aaa xor fwait (bad) jmp mov cs cs (bad) mov nop xchg (bad) cmp (bad) call sbb dec clc scas cmpsb xlat mov push dec aaa mov and or cmp inc mov (bad) (bad) out clc (bad) ss dec and aad cmpsl fxtract cmp mov popf xor icebp mov xchg mov mov push or sub (bad) (bad) fildll dec out (bad) jmp imul pop lcall movsb (bad) jg pushl and mov je out cmp mov out (bad) (bad) (bad) jg decb push scas mov out flds sub jl add hlt fisttpl xchg dec out (bad) std mov jle jo cld jle (bad) (bad) (bad) (bad) mov imul push fmul add mov fucomp mov pop add push fsubs clc mov jge add push movsb sbb push push movsl sbb push (bad) decl xor and add shll (bad) (bad) push xchg pop icebp inc xchg pusha mov cld sub cmp xor in cmp add ds shlb in pop (bad) (bad) (bad) lcall mov mov or pop jns xor jb je sub incl pop cld add bound mov and in jno pslld push mov imul (bad) incl xchg imul mov jno popa (bad) jg fistp inc push cmpsl adc cmp or pop xchg jnp aam (bad) jg cmp popa sub sahf aas lcall fwait in fsubs push shl rep (bad) negl fmuls pop bound es or (bad) fnsave inc out fisttpl (bad) (bad) (bad) pushl dec mov mov into movl and lods push fs mov daa push (bad) (bad) lcall cmpsb adc and lods jmp std sar cmpsb jp dec fsubrl (bad) (bad) incl (bad) mov push xchg (bad) (bad) (bad) incl mov int insl loope lret push jo out nop mov xchg push xor fnop mov jmp jg adc notb rsm xchg xchg cmp pop jns jb (bad) dec (bad) lcall sbb loop xor xor cmp pusha (bad) (bad) (bad) jmp pop xor mov pop iret sbb inc inc or stc or cltd fadd (bad) (bad) mov or mov xchg jbe mov push inc cld add mov in inc in mov fcom jg dec dec clc adc push out (bad) (bad) decl sbb add add cs (bad) mov inc insb inc jge push xchg mov lret (bad) sbb mov jecxz (bad) (bad) (bad) (bad) jp push jp jne out hlt xchg mov push xor cmp mov mov add insb push (bad) xchg mov pop or jg add outsl shrl adc (bad) (bad) call int jge cmp xor dec sbb xchg pop mov outsl insb mov (bad) sbb (bad) incl add push and mov jne loopne negb popa int xor jp scas fist (bad) call push jle add cmp das nop in les ss pusha add (bad) outsb sahf scas (bad) lcall pop leave xor or sbb shrl aaa adc das cli pushl fsubrl dec jmp jns test (bad) (bad) (bad) ljmp test or test sbb lcall sahf mov stc jo push fdivr lock mov (bad) (bad) mov test adcl in call loopne scas fdivrs (bad) xchg dec (bad) fnstcw pushl test and (bad) ljmp push or ret incl or (bad) ljmp imul cwtl dec push adc dec nop test lahf pop out inc jns pop push repnz lds (bad) icebp mov inc mov scas outsl (bad) (bad) (bad) call lods cmp lret and mov in mov jne cltd xchg stc clc (bad) repnz mov (bad) (bad) decl mov sahf jp jp insb mov mov jge mov xlat and (bad) ljmp aas dec je push gs les mov out shl inc dec fadd loop push (bad) (bad) jmp inc cmpsb and sbb inc pop rorb lea dec fs ret (bad) push cmp ljmp rcr xor lcall int outsb imul leave sub sti or clc jmp movsl mov ljmp (bad) call add jmp xchg dec jecxz or or push inc (bad) addl jae jb pop fmul movsl sub cwtl mov cmpsl inc das es or jno xchg push pop inc adc or cmp (bad) (bad) (bad) decl cmp cmp mov lods add test ds (bad) (bad) (bad) ljmp sbb sti xlat sti push cmpl push iret popa inc mov imul pop (bad) (bad) (bad) pushl cmp jmp sahf aam sbb out mov mov cmp incl jno test mov mov cmp pop jp xlat out aas aaa mov jp sub (bad) (bad) inc out fnstenv xchg fimul enter dec ljmp jne mov lcall popf pop push xchg rcrb dec movsb (bad) (bad) (bad) jmp in pop cmpsl or and jae jp popa pop ss rcll ljmp push inc insl lds dec negb lea out lcall jne sub call sbb aas into jns sub (bad) push push ljmp insb dec in lahf jecxz out mov lret (bad) lcall cld repz insb decl jg jmp bound push jecxz ret sbb cmpsb jns addr16 loope mov hlt (bad) incl das into sbb je jns stos inc jecxz sub ljmp (bad) (bad) pushl inc lret and cmp pop cmp cwtl enter mov in pusha in add pop fcompl mov mov (bad) decl ficomp arpl lahf cmp and xchg sbb sti push cmpsl pop test adc inc jmp mov xor inc jno gs (bad) (bad) mov iret rcl mov mov xor cwtl inc and or hlt adc (bad) decl and in xchg mov ds adc cli push mov jnp xor iret add inc popa movhlps pushfw (bad) test and test lea repnz mov (bad) (bad) (bad) incl or sub lods jnp adc daa fldt es es out flds lcall push (bad) ljmp cmc dec or mov lds pop inc loopne xchg (bad) incl xor nop cmpsb aas push xor jbe adc mov mov xor adc cmp cmp stos jmp (bad) (bad) (bad) jmp mov mov clc shlb sarl mov sbb push push cmp aas (bad) repnz lock (bad) jmp push sti into jecxz cmp imul cmpsb icebp push pop fs fdivr (bad) (bad) fist inc adc lret nop/reserved pop pusha clc sbb jmp pusha test sahf (bad) negl shrd adc push ja xor push mov mov (bad) (bad) (bad) mov imul add or mov add aam push insb out ss (bad) (bad) call leave in inc fisttp loope fst mov jl and jge cmpl (bad) (bad) jmp mov mov nop and mov insb (bad) std fbld inc push jmp xchg inc (bad) (bad) (bad) incl aaa popf cmp xchg add pop sahf stos lret (bad) dec mov mov arpl mov inc (bad) (bad) (bad) call mov mov pop jo xchg loop jl xchg in cmp (bad) pushl std ret add xor repz adc in jb ja jo in aaa cld (bad) cmp or cmpsb fildl inc out inc das mov dec inc cmpsb lcall in or cmovp push pop iret (bad) lods bnd lahf pop incl call mov add sub mov cs jl (bad) (bad) (bad) mov cmpsl aaa cs cmp shrl inc push mov movl std dec dec add xor lret mov cmpsl arpl nop mov cmc pop (bad) (bad) out xchg xchg pop adc xchg push aam ret jmp xchg jg (bad) jg mov sub rcrb mov sub mov push in xchg dec pusha (bad) (bad) (bad) (bad) fxam inc mov icebp in ret leave imul dec mov inc stos (bad) (bad) (bad) jmp (bad) repnz aas dec mov repz stos jns mov out mov xor pushl loope push sbb xchg loopne jno addl push jb xorl (bad) in (bad) mov lods push xchg clc jno cmp and mov hlt jp pop dec sbb cmp mov lock incl outsl cli inc in (bad) dec roll jb cld mov (bad) pop xchg int3 dec leave sbb (bad) lcall popf jge mov inc hlt adc mov test pop (bad) (bad) decl lods or add in cmp nop test jo,pt js and (bad) lcall into (bad) lock loop add or arpl mov sbb in arpl sub cmp jns xchg test ja and adc pop push orl ret jne (bad) (bad) (bad) inc inc ret es mov fiadd dec or in mov (bad) lea idivl jecxz or aas scas aas and lahf fs (bad) (bad) incl int lret lock cs push mov pop mov lret adc mov into dec icebp (bad) (bad) (bad) sti in mov out pusha lods sbb or popf arpl ds sub cmc add pop dec jge repz iret xchg jb loopne bound imul js adc (bad) (bad) fnstsw jb mov xchg pushf adc rorl inc movsl adc rolb inc push (bad) (bad) (bad) (bad) js test arpl test imul jnp cld cltd xchg daa inc dec (bad) push inc fild mov xor (bad) (bad) (bad) mov in lea and ficoml fwait jo,pn cmp stos (bad) inc pop pop das ds inc mov inc inc jg mov sahf sti scas cmp cli ja (bad) dec jae mov xchg stc push mov adcb push inc mov (bad) lcall pushl pop cmp out mov push sbb mov xchg fwait push pop jge sbb (bad) (bad) call push hlt inc add push enter lret fldz lahf stos bound in add fucomip sub (bad) (bad) out mov iretw push cmp xor lods adc and cli sub mov ficom mov gs addr16 pop jbe cmp mov cld (bad) (bad) decl and cs stos cmp sub je dec push dec rol (bad) jg sub lods pop in jnp xor (bad) (bad) (bad) (bad) call xchg mov adc push cli sti mov mov aaa out jne sub pop push add adc jmp dec dec clc bound movsb pop cs cmp push (bad) mov xlat lea push sbb (bad) std add pop add (bad) (bad) (bad) jle fs scas xchg xchg test rol stos in push daa inc je divb mov (bad) (bad) (bad) (bad) incb movsl sub mov ja or pop adc push push leave add mov or imul xor sti mov cli sbb icebp imul mov insl fisubr dec (bad) (bad) (bad) pushl fnstsw imul call adcl jle cmpsb iret push xor xchg outsb mov pop in jg incl pusha jmp bound popa add and ja ljmp ss (bad) cmp leave mov mov xor mov (bad) (bad) (bad) jmp or fisubl js xchg lods add (bad) push fdivs incb xchg cmc leave rcl push jno sub lcall and clc fwait sub dec cmovge rolb push (bad) call mov add test pop scas push add pop lret lea xchg idiv jmp jb sbb pop negb and stos divb outsl fbld lock outsb mov sti ret mov test lcall xchg sahf daa bound loopne stc dec push (bad) decl cmp inc pop lea pop cli dec in pop mov jnp stos (bad) jg xchg jge add pop (bad) dec out subb sbb repnz insb add pop xor xor sub mov push dec aad adc (bad) (bad) inc add into jnp sbb xchg xor pop loope pop das rclb sbb push clc pop loopne xor in aaa lcall ljmp stc movsb call shrb xor mov mov bound jno mov sub cltd cli ljmp adc (bad) pushl pop subl mov cmp mov lods hlt adc (bad) mov cmpsl gs out mov mov repnz (bad) loop mov les mov repz jo sub dec (bad) ljmp xchg sbb test loop sbb in jno,pn call jecxz jp jnp (bad) decl mov cmpb jnp out je or add cmp insl sbb enter das clc (bad) call js add mov push sbb jmp xchg lcall in lock lcall int3 jb xor xchg movsl dec push jmp xlat fbld ljmp mov aad push push in mov jl jmp xchg (bad) decb in aaa popf (bad) (bad) (bad) push mov inc jne and xchg notl and testb mov (bad) mov out or stos dec mov mov dec scas jbe lret imul and clc in dec scas ljmp pop sbb sub (bad) (bad) jmp cmp outsl jecxz lret roll sbb push xchg cmp mov pop lock mov fstpt pop sub inc push rolb stc scas and pop mov jp mov sbb adc jae mov (bad) (bad) (bad) sti iret ljmp cmp dec out (bad) lahf test mov insb cli push test xlat aas fwait jge call cld pushl mov and cltd int3 lods add cmp loopne jg pushl aad orl ss cmp nop mov sti pop xor sub cli jns outsb out jp,pn sbb mov (bad) dec jne lods mov and xchg outsb jmp mov (bad) pushl push pop jmp scas mov mov ret inc mov sbb sbb arpl (bad) xor mov mov or mov ret pop imul aad out (bad) (bad) (bad) (bad) jg out lods cmp into ja sbb sbb mov mov add push rcl mov test jb xchg imul out xchg mov (bad) (bad) jmp cmpsl cmp mov push mov cmp xchg aaa xchg jp sbb (bad) aam push ss dec xchg jmp mov fwait cli add sarl sahf xchg icebp inc mov arpl outsb push cli add sub pusha (bad) (bad) pushl loope,pt and popf sub mov aaa mov dec pushl shlb insl std jb in vmaskmovdqu leave divl decl out xlat mov ja mov push mov adc dec mov scas (bad) (bad) (bad) push add int3 shr inc les popf lods adc jg (bad) loope pop pop das js out rorb and (bad) (bad) lcall lret mov xchg fidiv outsl mov cmp pcmpeqd push clc mov push add mov (bad) (bad) call incb adc add pushf cmpsb (bad) pop mov xchg or push jle cmp jb xor (bad) (bad) (bad) cmp ja adc lods xchg push mov adc push imul jb xchg unpckhps ss (bad) (bad) (bad) cmp jnp sub dec or cmp mov xlat push cwtl aam out les add and data16 or and faddl mov cltd icebp (bad) fisttpl xlat stos (bad) (bad) lcall xor sbb lods les dec ss cli rclb sahf pop mov test mov push and xorl (bad) mov rcrb and and push stc dec sbb push in push mov into movsb and pop adc inc in and jg out (bad) lcall jmp jb jae pop roll adc loop dec xchg jnp dec gs fstl sbb push push xor les cmp mov fildl inc movaps std cs ljmp ja xchg (bad) mov jnp sbb or lock ret (bad) inc popf in or in inc jl jl test xor ss xchg fnop (bad) (bad) jmp movsb dec je out mov int3 adc add sbb add push (bad) incl adc lahf push adc or jg cs dec (bad) (bad) jg js insl outsb mov jecxz in cmp faddl (bad) clc jle scas push insb xor push inc sub das dec dec jno ret js scas inc xor mov add (bad) (bad) (bad) stc (bad) jecxz cmc mov sbbl fs jecxz jp lods loop jne (bad) (bad) incl mov pop addr16 mov out pusha inc cmpsb dec and outsl hlt adc jae adc outsb ss cltd or push xchg dec (bad) (bad) mov leave mov bound hlt fnsave js xchg jmp cmp adc out cs cli inc mov jmp arpl push repnz lock out hlt out or cli (bad) out mov jle popl (bad) (bad) (bad) js pop hlt (bad) rolb out dec cs out and popa lcall cmp cmp (bad) (bad) decl inc inc test in and rcl sub bound rcrb mov test stos dec push outsb mov mov cwtl ljmp jle adc mov (bad) incl ret (bad) cltd cwtl sbb sahf bound jl inc xor loope daa fistpl aam scas aam cmp mov mov mov xor and jg (bad) (bad) jg mov xor xchg push in icebp ret mov pusha jmp decl jecxz dec popa fadd out dec or out xchg push fadd sbb (bad) (bad) pushl cmp cmp scas lds and xor mov std sub sti inc dec cmpsl mov jbe mov int or push sbb stc (bad) (bad) (bad) call add cmp int add or out push add mov cmpl aad arpl (bad) cmp sbb test sub dec stc cli sbb push aas iret popf push pushl lcall nop (bad) in sub xchg pop xlat aas loope std rclb (bad) jg das cmpsb mov push or fcmovb dec cld nop fwait sbb or imul roll sub sar sti hlt lret lock pop dec test les mov sbb (bad) out cli sahf fidivrl pop jo rcr popa inc sub cwtl int leave add ret adc in mov test xchg dec cld dec xor sahf call (bad) (bad) (bad) decl add xor sarl jne mull sub roll or aam stos loope cltd jge cmp xor mov lcall (bad) fistpll ljmp dec das or cmpsl leave (bad) mov cmpsl xor (bad) das clc je mulb cld push fldt dec xor clc dec sar jle es loopne mov test sub pusha xchg inc inc inc test (bad) out enter add add (bad) mov jg ljmp cld push (bad) (bad) (bad) lcall cmp add jle mov pop (bad) testl mov lock mov push cmp loopne push mov cmc imul scas cmp push packsswb dec fs mov and push push mov push sub adc xor mov scas (bad) mov pop xor ret and loop pop jno ja bound pop enter inc (bad) pushl inc scas push je jae out jae xchg (bad) (bad) dec mov mov test (bad) pushl jecxz lea int in lret pop ljmp (bad) xchg in insb or loope sub sar jp sub pop ficomp mov pop mov test fucom iret (bad) (bad) (bad) call push out test shrb mov xchg ja lahf pop push or (bad) (bad) (bad) call icebp adc jmp bound in jl jnp jnp dec jl ja cmpsb pop mov (bad) push xor push arpl lcall jno lret pushf (bad) (bad) (bad) dec cmp cmp mov xchg adc inc lds mov ds sbb (bad) ljmp dec adc jnp fimul or (bad) sahf paddsw xor pop arpl jecxz sub push fcomip mov lods inc scas mov das shr (bad) xor roll (bad) (bad) inc jbe or ret fcmovb fisubr pop rorb dec add mov es inc adc (bad) (bad) mov inc sti popa or (bad) popa gs push je mov (bad) fwait pop (bad) (bad) (bad) dec jg pop dec mov in jo cmp xor scas dec ja sti adc scas xlat test (bad) (bad) (bad) call push iret cltd lret addb inc movsl sub bound outsl jge lods iret mov (bad) (bad) (bad) jmp jmp adc mov cmpsb inc mov lods sub dec popa imul (bad) (bad) jmp lods decb add pop jo loope aam js loopne lcall add xlat (bad) (bad) (bad) incl andb xor pusha enter cld xor xchg jmp or rcrl loope cmp mov mov in and jge (bad) mov add decl dec and shrl test (bad) fmull (bad) adc (bad) lock nop movl (bad) (bad) incl add in outsl sti rcl jnp or mov sahf nop mov dec aas fwait push jl (bad) (bad) (bad) jmp stc jp das rorl xlat repz int add and jnp (bad) out scas stos cmpsl dec call adc cmp push xlat xchg mov adc jge,pn (bad) (bad) inc dec loop cmp aad xchg (bad) jns xchg pop pop movsb cmp clc (bad) (bad) ljmp loope clc push xchg jle jb lods fmull mov or jg cmpl (bad) cmc and ja and pusha (bad) or mov (bad) (bad) ljmp lock jg push ss mov pop negl mov (bad) (bad) (bad) decl pop sbb add fcmovnb jp clc add popf mov push (bad) (bad) (bad) (bad) out xchg mov mov and nop arpl lret xor push bnd (bad) (bad) (bad) (bad) jns das mov jo or mov insl lods and out mov jecxz lods mov (bad) (bad) ljmp pop (bad) dec test imul loopne jne pop sar fs jo inc lods enter jp sbb dec sub call jnp push pop push jmp fmull shrl ds adc std push cwtl es mov test and and arpl push fldenv (bad) enter sbb xchg mov xchg fdiv inc (bad) (bad) (bad) decl mov out sbb arpl inc mov pop add sbb mov scas clc idiv (bad) dec movsl push rcrb xor repz jle loopne (bad) (bad) (bad) incl pop or mov sbb hlt and dec int3 repnz (bad) jbe sub call imull sbb dec pop add mov mov loop fsubl mov mov adc fdivs jecxz add mov (bad) (bad) jmp mov mov into xchg push push test (bad) jne or mov (bad) (bad) (bad) jmp nop xchg insb hlt add insl cmp pushf in arpl sbb int aad push dec jb sar (bad) (bad) ljmp ljmp mov pushf pusha out pop mov gs jno cmp subb fsubs sbb push insl mov jno (bad) (bad) fildll outsb sub pop daa out in mov stos xchg pusha xchg mov lahf ss mov outsb lods scas pop pusha lcall fnstsw or outsl fnsave dec (bad) (bad) (bad) ljmp or movsl ss jne xchg rorl push mov push orl rorl (bad) (bad) incl inc and fcmovbe in jp popl fstpl lock mov push std (bad) incl dec in dec imul mov mov movswl and cld cmp (bad) (bad) ljmp adc dec pop push shll mov and sarl lahf mov xor jp (bad) ljmp mov js dec pop mov or test test and (bad) (bad) (bad) lcall gs popf movsb addb into fs int3 jl mov lcall pop mov cmpsb push call push ss cli icebp or in (bad) mov das dec out jp add leave mov pop inc (bad) (bad) (bad) jmp adc call pop adc sbb or hlt outsb push jbe xchg and rcll (bad) (bad) (bad) call or nop aam push (bad) or out pop hlt ret push sub scas cmp insb (bad) loopne (bad) (bad) call sbb inc mov sbb inc jle mov or jecxz imul push push imul inc xchg andl or (bad) ljmp and hlt pop int3 add cmp inc inc cmp or loope (bad) call sub mov bound insl xchg adc rclb mov jle inc out (bad) xor (bad) ljmp insb mov bound xchg push ds cmpb (bad) (bad) add cmp jge out and (bad) (bad) (bad) fistpll int3 push jne movsb dec dec sbb pop leave xchg sahf xor xor pop (bad) (bad) (bad) call jmp testl into mov fidivl add xchg (bad) mov mov in xchg out push push es or and fmul enter cli sub dec es decl inc add (bad) fdivrl push sbb (bad) fldt lret stos int3 sar notl popa (bad) out flds jecxz pop mov decl incb xor dec (bad) and mov lcall push mov jb lcall ljmp mov (bad) andnps mov data16 cmp dec (bad) cmpsb mov data16 shrb or cs dec orl call push cmpsl sub call or or mov jle scas mov int pop std ja jmp inc xchg idivb (bad) ljmp mov incl mov sbb fcomps or (bad) (bad) (bad) (bad) fcmovnbe or imul shlb push or (bad) subb rcl stos lock enter incl inc jbe cwtl jg push daa inc jbe mov imul fdivr cmp in or (bad) (bad) in ja sub ja and xchg sub sbbb jmp (bad) pushl pop add cmp mov pop dec xor popa mov aas mov cld fwait dec ret sbb (bad) decl mov bound inc cmp aam aam jmp push (bad) xchg cmpsl mov pop mov js call enter (bad) out dec lahf sar mov push sbb or movsl movsl jg pop sub js jle popa (bad) mov mov sbb pop and pop push sbb cli leave mov aaa dec (bad) (bad) pushl sbb repz add cmp andb lcall arpl imul bound hlt aam test inc cmp inc in dec mov jle and scas push mov fnop push add adc icebp lahf (bad) (bad) (bad) push xchg shl mov or jae mov mov loope fcomps fwait loop push push hlt (bad) pushl ds cmpsb pop (bad) xor cmp (bad) aas mov (bad) call xchg xchg daa cmp sbb das pop jmp lret addr16 (bad) (bad) (bad) jge pop xor xchg cli xor sub pop sub ljmp pop xchg lock (bad) (bad) in mov sti in test xchg add jbe push fs adc das loope incl movsb pop es dec push and cs das mov or bound pushl push sub push sar mov orb cli xchg addb fsubs mov psubw (bad) (bad) (bad) (bad) incl les push or sti mov push pop add adc icebp xchg mov (bad) (bad) jmp xchg out cmp movsl and jle into and rcrl imul (bad) jmp popa hlt imulb xchg stos js test push (bad) (bad) (bad) out pop mov fisttpll jle loop cmpsl or or (bad) (bad) (bad) jns lock cli lret das in scas insb push test ljmp jg xor mov xlat loop mov outsb mov addb pop lock sahf shl add push add ljmp clc aaa sub xchg inc jl cli gs dec mov fdivrl sahf stos mov (bad) jmp movsb clc aad das lea adc (bad) (bad) out ds dec mov leave mov dec pop addr16 dec push xor lcall popf mov mov shrb mov adc lcall and mov (bad) (bad) (bad) lcall add jns dec add imull add or mov push jbe ds xchg cld cmpsl (bad) pushl rol mov test test add mov test loope (bad) (bad) ljmp sub cmp push sub cmp xchg add nop dec cli jg in lods mov sub test push sbb scas mov push arpl lcall (bad) (bad) pushl cmp fmuls ja test lret push adc dec inc ja mov je sarb and lcall fnstsw fldcw jp mov loopne pushl xor xor mov xor push jl push sti cmp and (bad) (bad) (bad) mov out je push and cmp jo jl inc fild mov inc jp divl sbb jp,pt nop in pop lcall call mov out xor cmpsl xlat loopne lods lret cmp scas mov orl (bad) (bad) (bad) pushl jnp cmp cld ljmp popf js push cmp cmp pop aam sahf (bad) xlat and out jle push inc cli adc adc ds stos push mov pop add (bad) (bad) mov (bad) sbb adc pop imul cs push ljmp popa std adc shr cmc js add cmp test (bad) jg fs shrb jle pop jnp sub xor (bad) lcall add dec pusha xor add int3 mov in sbb adc jl fwait add dec sti loop outsl (bad) (bad) (bad) xchg mov add loopne repnz es in adc je or push xchg cmp lcall stos inc xchg out and pusha (bad) leave cmp cmp mov sbb dec jno (bad) (bad) (bad) inc mov pop jae (bad) fimul inc mov xchg cmp jmp movsb sbb cmc (bad) (bad) ljmp sub jg fildl out cwtl or imul push sub das adc (bad) fldl ljmp stc xchg (bad) incl jo scas ljmp add loop adc push stos ret mov (bad) (bad) pushl sbb or dec dec xchg mov add dec (bad) (bad) (bad) lcall out cmp jbe out fisttp mov dec pop sbb aad mov inc mov (bad) (bad) (bad) ljmp das xchg sub add xchg ds pop cmp scas fs (bad) jo clc test clc (bad) incl cmp inc mov push mov lahf pop sbb (bad) lret (bad) ljmp xchg sbb insl mov movsl nop sub dec loope outsb add (bad) lcall (bad) xchg mov ds push and adc xor or (bad) (bad) call mov or insb fcomps mov xor (bad) pushl ds insb fdivl shr pop mov xchg fild std xor (bad) (bad) (bad) imul movsl jl daa jmp bound gs cli sbb or adc (bad) (bad) lcall sbb ja stc mov dec enter rolb test loopne mov cld and push dec cs sbb (bad) fidivl push xor jle adc in (bad) (bad) mov test (bad) mov sbb jg mov pop pop decl (bad) cmp adc sub addr16 insb insb call shrl das xor fwait (bad) decl fcomps pop in inc mov push jb pop incl (bad) fistp jnp push dec scas cmp aam shl call or mov (bad) (bad) pushl sbb cmp or xchg sahf aas xor pop rol movsl lret sub daa (bad) (bad) (bad) decl inc sbb (bad) ret or jnp and outsl add dec inc aas test leave in lcall pushl jge cltd dec add ds cltd inc fs pop (bad) outsl xchg cwtl ss (bad) fcomip je repnz mov xchg xchg push add imul (bad) lcall dec push cmc mov and jbe orl and pop (bad) fbstp xchg or xor sub (bad) (bad) ljmp add adc fwait gs rcrl cmp (bad) fbld jmp cmp std fs hlt ljmp jl xchg loop les pop mov aam mov (bad) pushl or pop pushf scas std scas sub es fs ljmp mov xor jmp fcmovb fdivrl lock test out (bad) aas jmp jecxz nop (bad) into cmpsb ficom or xchg call inc mov mov test xor or cmp lcall stos xor lcall outsl cli clc or mov ss movsl loopne push push xor (bad) lcall jge ds push pusha inc (bad) (bad) (bad) pushl jl lcall shrb jb pop adc nop pop adc sub (bad) (bad) inc push jns ss dec pop loop movsl jle mov mov loopne (bad) (bad) fcmovu dec mov (bad) ljmp jmp xor aam notb pop inc outsb vmovhpd or inc mov (bad) cli decl (bad) call scas mov cmp mov jge xchg cmp jmp and jg cmp or cmpsb loope fwait test (bad) pushl inc sub xchg mov aam and faddp cs jae jns js sub incl subl lods loopne daa or mov xchg (bad) (bad) and cld rcl (bad) (bad) js out incl add das insb xchg lock dec aas ficomp or mov adc lds add mov iret imul jg jae les jp dec mov mov dec jg repnz (bad) (bad) inc xchg pop cmp mov or lahf es lret cwtl loope pop (bad) adc (bad) jg fucomi pop std mov xchg imul ds mov or (bad) fildl incb fidivr sbb dec mov mov mov nop sahf (bad) (bad) (bad) incl push int3 add mov sub fisubl mov hlt aas mov jg mov (bad) (bad) (bad) decl xchg fidivl mov cltd sub aas pushl mov (bad) (bad) call xor mov push pop xorb (bad) daa dec fdivs mov je es out sbb (bad) (bad) mov mov lea rolb sar cmpsl leave repz daa dec enter (bad) (bad) (bad) cmp (bad) insl cmp imul and inc xor std and xchg (bad) (bad) (bad) jmp push orl ret sub cwtl mov sub sub cmp in data16 cmp das out cli (bad) push loope je shrl dec add cld jecxz jl jg jmp (bad) xor ja clc call inc lds xchg mov push cli push (bad) (bad) call call clc nop jg mov jle icebp (bad) daa xchg sub or inc in xor mov push cmpsl mov jo pop clc pushf cli mov or xchg mov dec ret pop push dec call stc (bad) add sbb mov push pop push push fld test pop xchg jbe mov pop push mov mov lcall repz push ss xchg inc int mov and je push mov es iret arpl pop inc push je xchg ret jg pop icebp sahf pop in out ja push leave xchg xchg mov not xchg stc sarb aad loope (bad) je mov iret out dec lds stos mov lods aaa xor dec dec cli dec pop lea aam dec subl jae ss mul inc shlb std (bad) (bad) push push jno out and sub adc sub iret add (bad) (bad) ljmp and and test inc dec ljmp outsb jge pop xchg or mov (bad) (bad) push std fldcw ja loopne cwtl lods cltd (bad) push mov and rol adc (bad) pop adc arpl daa xor cld les mov pushf ja aaa fwait sar (bad) (bad) pushl insl cmpsl (bad) mov adc jo push cmp mov cmc insb mov dec inc cmc (bad) (bad) inc in mov push sbb sbb adc xchg fcoms jae sub add fimul sub jne lret popa or clc push inc jmp mov decl cld sub dec fucom (bad) mov pop das sbb sti loopne and xchg lods xor lcall dec lods sub cwtl cwtl and xor mov lock jns mov (bad) (bad) jg xchg jmp test sub dec jle ret push shll mov loop (bad) decl cmp dec je sarb push push and lret xchg icebp out (bad) (bad) (bad) mov mov frstor add or notw (bad) (bad) (bad) call faddl mov lods aas hlt (bad) pushf mov dec outsl out cmp and (bad) incl movsb mov hlt aad cmpsb mov mov ja xchg (bad) (bad) (bad) pushl rcll cs push iret mov (bad) in fnstenv jecxz ljmp jmp jno data16 hlt fist fucomp push push inc andb (bad) movsb cli std pop cmc xchg jle add cld sub inc adc addr16 inc das cli jg sub pop mov outsl imul push (bad) pushl mov ficoml mov rcrb loopne stos xchg (bad) (bad) (bad) (bad) dec decb sarl addr16 popf lea jno push loope imul lret inc (bad) (bad) (bad) incl stc or lret pop les pusha add adc jp mov data16 mov (bad) (bad) (bad) (bad) cmp rorb inc sbb jne xor das push fwait arpl pop adc std cmpsb ljmp icebp sarb mov les cmc mov inc adc push std lcall pop xchg (bad) xchg subl (bad) lcall pusha mov mov sahf mov lea in mov or decl add inc adc fwait sbb lea mov out call out shrl mov pop cmc cmpb call dec or (bad) (bad) ljmp loop add rcl push mov js adc loop fcompl push sahf mov xchg inc mov (bad) (bad) (bad) (bad) fstps outsl dec (bad) cmc mov data16 sub mov add stos or xchg mov add decl xor test addr16 fnsave (bad) (bad) and popa push and pop or add mov inc (bad) or pop push cmp adc xlat jne sbb xchg lods hlt mov mov cmp addl mov mov (bad) (bad) mov pop dec sbb jo inc push dec jb addr16 fnstsw ret xchg call lock fldcw popa mov jg inc and popl xchg in mov lret xor (bad) decl ds imul or ret jl adc lods inc jbe scas xorb cli (bad) jmp xor (bad) ret xchg mov imul jno lcall (bad) (bad) (bad) fistp fstps pop movsl xor sub negl lret sub fs (bad) jmp imul aad inc movsw into xlat movsb xor pop push add (bad) mov xor imul shll inc cmpsb and (bad) call and push xchg sbb andb loopne sahf shr aaa (bad) stc (bad) call sar (bad) (bad) call mov push jecxz int3 test iret jno or in mov inc enter lahf mov pop cltd push (bad) (bad) (bad) call sarl stos setae (bad) sarb mov sbb inc push mov jecxz (bad) (bad) (bad) cmp ret in sub out ja dec xchg (bad) in int xor das sub test (bad) (bad) jmp xor inc fidivl jp push cmp cmp outsb and ret xor add imul pop and (bad) mov mov lods in or sub cmpsl js mov xor mov cli clc (bad) (bad) (bad) (bad) lcall icebp sbb into mov (bad) sbb inc test sub xor (bad) (bad) (bad) jmp sbb and mov arpl xchg cs adc cmpsb xorb push (bad) (bad) (bad) (bad) jle pop cltd cmp les rep imul adc jl in inc pop xor push xor das or (bad) (bad) call into jnp mov sbb lods cltd cmc fs fisttpll xchg scas adc aas test (bad) (bad) (bad) call pop mov inc pop lcall mov stos ret fldenv xchg xchg daa pop lret sbb scas cli lcall push xchg mov leave insb push testb (bad) fldl mov add push push add push icebp data16 insb popa (bad) pop xor std mov jns ja jno dec xchg jg (bad) ljmp lea and mov sbb (bad) (bad) dec rol cmp push xlat mov notb push lock ljmp jnp fadds je leave sub xchg sbb (bad) (bad) lcall dec add ss lods mov sbb xor pop daa (bad) cld lcall in (bad) (bad) (bad) out out pushf jns xchg fisttp repnz sbb aam (bad) mov test push xchg icebp (bad) (bad) lcall ficom xchg (bad) sahf insb icebp les js out ss inc adc nop (bad) lret bswap aaa sbbl insl add addb dec ja xchg fistpll pop jecxz xchg daa jns mov (bad) dec jb test movd mov loop sub rclb in lcall xor movsb ds ja aam sar xlat fs cli (bad) cmp or jge ret xor js mov dec pop aad push push sbb (bad) (bad) (bad) (bad) lcall (bad) (bad) pop ja add lods cmc xchg testl call lock adc or (bad) lcall jmp cmp aad outsl push xor jmp int3 in iret or (bad) (bad) (bad) jg (bad) lock cltd scas sbb sub stc jecxz sbb push push cmp (bad) ljmp nop outsb jns cmp inc push jmp sub scas push fcoms sub fadds jmp ds push mov dec xchg jo (bad) stc (bad) js cwtl clc sub ret stos push xor xor fldl test or xor mov pushl jmp popa int data16 aaa xor and daa (bad) (bad) (bad) decl decb iret data16 adc jge nop mov jno inc mov imulb (bad) decl inc or cld jmp out test mov xor stos rol push lock (bad) lret push lds (bad) decl bound mov pop fmull cli lahf mov leave mov dec (bad) sub and insb sub pop sub orb jmp xor popf sub (bad) (bad) (bad) call mov push stos iret imul xor xor leave fwait add pop rorb mov (bad) (bad) lcall inc out ficompl dec and adc repnz insl jo in cs jp push aad (bad) (bad) incl mov inc jne pop mov mov xchg mov jo aad decl incb adc pop xchg in sbb push pusha mov or call sub xchg jle jae sub jg pop mov aas shr adc aad cs test (bad) (bad) jnp ret push test cmpl (bad) push adc mov (bad) (bad) jg test push repnz mov out loope lea int mov jmp xlat imul jecxz sub int3 jne fmuls sub mov (bad) mov pop pusha shrb in xor jne in pop mulb pop out insl test sub fimull and add (bad) (bad) (bad) (bad) jle aad daa mov sti cltd sbb mov sbb or cmc dec mov push dec clc (bad) mov lods xor xchg mov push jl cmpsb add iret icebp (bad) cld fisttpl icebp pop loope pop cwtl xchg retw mov dec and (bad) mov movsl aaa xchg sti inc or in and dec mov jno (bad) pop inc (bad) scas js adc adc cmp pop das jmp mov stos jno (bad) jg dec xchg lods popf jo push push mov call inc out hlt aaa (bad) (bad) (bad) pushl mov fidivl clc xor negb dec fmulp gs lods adc lcall dec inc loop clc jne mov fildll inc lds repz ret cmpsl push addr16 cmp cmp or xchg push adc (bad) (bad) lcall mov insl pop mov sbb mov xor pop and hlt outsb loop inc (bad) (bad) (bad) incl mov loop stos push push fldenv int or cwtl gs mov (bad) call sti rcl sub push xlat mov jns dec int3 rdpmc jb adcb (bad) decl mov sub mov jne or push push dec mov mov lods and int fcomip (bad) jmp jg addr16 jmp xor (bad) ss dec inc mov xchg jo das mov scas jp cmp or and sub jb dec mov stos dec dec pop mov (bad) (bad) (bad) incl pop lahf mov test or stos mov jb jmp sbb mov into (bad) (bad) (bad) push xor shr inc cmc mov cld pusha call std sbb pop (bad) out (bad) decl add jae in js cli sahf sub adc push ret sbb jecxz (bad) (bad) (bad) jmp sub sbb mov cmpsl mov mov out jbe int3 sub (bad) jmp mov repz es mov (bad) xor jno xchg jae aad pop mov repnz fdivr (bad) (bad) jmp icebp mov movb mov inc lcall in cwtl leave dec insl cmp idivl (bad) mov pop adc leave push scas inc (bad) mov arpl xor ret mov pop icebp mov jb out sbb (bad) insl inc aam aad nop int (bad) (bad) (bad) lcall or mov popf inc je jbe out adc (bad) fadds add (bad) (bad) incl sbb cltd and enter lea lahf inc jnp mov int and mov inc cs clc (bad) jmp jb pusha mov fdivl and sbb ja xchg xor sbb (bad) and mov sbb mov int3 jle (bad) (bad) decl xor pop push sarl push cmc xchg mov pop in dec repz add xor lock mov fistp repnz xchg mov pop jle mov dec mov (bad) jle jg sarb push sar mov or sub sub sbb (bad) lcall lahf outsb push call add popa js mov xchg mov cltd (bad) (bad) (bad) incl cmp and push dec add sbb lods pop xor xor (bad) pushl mov pop xchg mov ss ss pop aaa mov (bad) (bad) incl (bad) aaa sbb sbb es dec or adc mov arpl decl lock and imulb push push shll inc pop (bad) std clc (bad) (bad) ljmp iret (bad) jmp xor mov test inc inc jmp pop xor out dec stos xchg (bad) incl pop add inc push fwait mov repnz sahf adc (bad) (bad) mov iret enter stos lds int3 mov addr16 mov pop sub pop mov (bad) call inc lret and sub xor je loop sarb test (bad) pop bound gs adc pop mov mov (bad) (bad) (bad) (bad) jmp nop jp aaa gs inc lahf into add loop cltd pop pop xchg pop fs or lret enter jmp cmpsb mov cld outsb bound or cmp sub jnp and (bad) (bad) (bad) ljmp fistpll fadds sbb or mov (bad) (bad) (bad) mov cmpsb arpl sbbb sbb ja test (bad) (bad) (bad) pushl lods repz mov xchg xchg mov jg pop dec adcl and aam cmp or sahf scas jecxz mov xor or cmpsb push fcmovb int3 decb (bad) and rcrl cmp test ljmp jbe int3 push sbbb jns movsl jmp ja pop fsubs jp cmp sub (bad) (bad) (bad) incl (bad) enter jmp sahf pop fsubrl jl lods loope lret jle (bad) adc (bad) dec mov rcrb nop add bound fmull mov movl xchg clc decl and inc dec push aaa dec sarb pop (bad) dec hlt (bad) (bad) inc leave mov add dec sub mov dec and add pop pop (bad) (bad) decl sahf add mov faddp jns cli divb (bad) bound or inc push xchg jo pop push out pop and rolb mov mov (bad) (bad) (bad) jl push sub popa loop jne dec cmpl cmp fs (bad) (bad) call cld in nop mov ss repnz leave mov mov adc fdivr (bad) pushl std sarl sub xor sbb outsl push sub pusha mov in sbb jmp scas mov rol and xchg into inc stos mov (bad) push cmp data16 mov movb dec imul test (bad) (bad) mov add mov pop (bad) mov call jmp inc (bad) push dec xchg add decl inc je mov adc (bad) (bad) lcall cli jo pop lds sbb jg pop icebp popa mov or dec insb add (bad) (bad) call cmp sbb lret push mov xchg push sub cli sub fildl call (bad) (bad) lcall in iret pushf enter dec stos push push into push lds nop adc inc daa rclb xchg (bad) (bad) (bad) ljmp mov adc jle inc jp rcll push xor hlt push mov add (bad) pushl fwait maxps fucomi pop es add bound sti rcrl and (bad) (bad) incl mov dec inc call dec aas add test push jg call inc shrd jnp xor cmp insl mov mov push (bad) (bad) (bad) (bad) cmp ja jecxz add sub inc repz pop movsl xor adc sub (bad) (bad) (bad) pushl push test or push jl scas stos xchg hlt insl pop add pop mov imulb and jbe fisubl or xor dec xchg pop jmp (bad) xchg loopne cli jmp imul in adc mov clc pop add sar sub ljmp pop cli mov ljmp and dec mov sub add pop mov scas pop ja mov cwtl mov or pop cmp out fild in and pop xchg inc out stos inc cmpsb fbld decl mov add clc shlb and xor insl (bad) (bad) (bad) (bad) fbstp push add mov adc stos es ret xchg xchg mov pop lock fadd or popf iret daa xchg hlt mov faddl fwait sarb fcmovnb mov sub ja adc ja ds add jecxz (bad) (bad) (bad) (bad) mov xor mov icebp jp pushf jmp inc lods mov lock add inc inc mov sahf (bad) (bad) (bad) jg or cmpsl daa mov mov imul push movsb das rorb test loop out (bad) incl sbb mov push pop push test mov or push (bad) (bad) (bad) call push mov in std pop push cs sbb out lods pusha dec pusha lds sbb or (bad) call nop outsl cltd cld movsb out pop nop daa int3 rorl aas cmp or sbb add aad (bad) (bad) incl cmp inc scas loopne push xchg and out inc movsb jle sub mov (bad) mov push pop inc dec cmc cmp sub je inc mov jmp inc (bad) (bad) fcomip cmp pushf aad mov test cmp add xor adc call push int test les add push mov test (bad) (bad) jmp test cwtl hlt movsl mov cmpsl jecxz int3 inc addr16 ss loop dec xor pusha hlt mov stos rcll (bad) (bad) jmp addl addr16 test push xchg mov xchg mov inc mov outsb mov pop (bad) jl cmpsb das out jbe lods xchg xchg push add jg xchg mov jmp ds pushl xchg mov or mov inc das sarl inc dec (bad) call cld insl push testb scas mov xor out xor mov (bad) mov cmpsb lods or or xor jp cld lea dec (bad) (bad) (bad) (bad) incl ret and pop stos adc push aam push popa (bad) mov xchg clc or inc je popf xchg jbe xor jb mov jge push scas pop call (bad) decl jne mov jne fsubs aad stc loope loop lods mov push (bad) decl (bad) and ljmp and cmp xchg pop cli jmp mov (bad) (bad) (bad) pushl push jns fsts mov jbe push sub cmc shrl jo adc incl loope or pusha dec or push insb test dec mov cmp pop pop rclb xchg rolb psrlq sub ja jle aad pop sbb adc (bad) (bad) (bad) mov (bad) fadds cmp add push mov lret icebp call adc andl jno push ds (bad) (bad) (bad) ljmp fidiv cmp mov call dec lods cmp or inc gs mov outsl add bound mov out and xchg pop dec (bad) (bad) (bad) (bad) fmull (bad) rclb cmpsl mov fisubr int mov mov (bad) sub test (bad) (bad) incl movsl cld xor mov jae es jl ljmp dec dec adc daa std faddp outsl nop and stos xchg cmp add inc push xor inc jl mov xlat scas shl imulb adc jmp mov jle adc add insb push push jb jne or (bad) decl ds jne into popa shl stos loopne pop or push xor loopne (bad) decl cmc jne jns pusha pop sti dec add (bad) or cmp loope xchg out mov mov push add jb outsl cmp repnz mov adc xor xor aam (bad) decl mov test push inc ljmp movsb jp sub add decl (bad) pop in jo push adc scas lds mov sarl (bad) (bad) (bad) decl mov aaa inc out in lods es mov movsb push scas rcrb (bad) (bad) (bad) decl int3 push cmp push dec or sarl inc sti popa ds jae mov fwait (bad) (bad) jg adc ret add out mov (bad) mov scas (bad) decl inc mov and inc movq in (bad) ljmp rorb pop pop xor jl (bad) fstl fildll mov (bad) (bad) (bad) jmp cmp fdivr ljmp dec lcall xchg loop xor pand and mov js (bad) (bad) jg arpl push mov cmc or clc pop out jns popf push add or lods pop (bad) (bad) (bad) cmp dec add in mov fnclex test mov and call cld add xchg stc rol xchg and adcb lods std (bad) (bad) mov loope jb sbb test mulb inc nop lahf jp (bad) push (bad) (bad) (bad) mov scas cmp cmp lret pop adc dec jmp aam mov mov cld outsl out lcall inc lret dec xor fwait movsl or stos mov cmp rcrb int3 push popf mov enter pusha sbb leave fs (bad) (bad) (bad) incl sub sub adc mov inc sub aas mov ret (bad) lcall pop inc jg nop (bad) push mov xchg lret xchg (bad) jge mov sahf stos xor pop jle jg cli mov mov sahf pop test mov push or fadd xor dec imul push lea (bad) ljmp inc inc mov jbe rcrb inc sub cmp dec lret xchg stos pavgw push inc add clc push and repnz and xchg (bad) sub movsb idiv (bad) jmp jo not jecxz mov adc outsl mov mov (bad) (bad) (bad) pushl pop lods add out push adc ljmp inc dec lret mov (bad) ljmp mov add dec push adc mov (bad) insl test fidivr sub pop movsb push outsl (bad) (bad) pushl sbb test test scas imul mov pushl cld lcall stos idivl in (bad) in scas movsb push inc xor sub (bad) incl inc enter pusha cld pop push push in and mov (bad) (bad) incl mov std pushf scas pop stos jp icebp push test adc and lret movsb mov sti repz fdivr sbb inc ljmp cltd sbb icebp or pop mov cmp cmp and push jmp pushf and xor push jae jl push imul (bad) (bad) mov in test jbe das test lret fild adc (bad) call mov fxch sbb cmpsb jae xchg dec popf push loop push pop shrd (bad) (bad) (bad) call jmp mov testb push lret xor ret sub loop lea (bad) hlt (bad) (bad) decl sarb sub (bad) (bad) jb dec jne mov adc lods rcrb iret repnz sub out mov push pop sub cmpb lcall outsb sub jp into cmp or sbb inc xchg icebp mov lahf (bad) (bad) jg pop push inc pop (bad) or aad mov dec fcoms adc inc xor push icebp lods aaa into pop pushl inc or xorl lock (bad) dec sbb push jne mov scas sti (bad) (bad) (bad) (bad) jg sub cmpsl cmp lea out dec mov mov dec repnz sarb cmc cmc pusha aaa rol call pop pop fnstenv pop push pop mov pushf jg mov cwtl mov sub (bad) jmp insb jl or (bad) (bad) jmp test outsb pop adc (bad) bound or clc stos push mov inc mov lcall lds stos ljmp mov scas out sbb cmp into mov pop (bad) (bad) (bad) (bad) call jnp out cmp mov mov pop jae mov lea mov xchg jp (bad) (bad) (bad) push push add mov dec bound aas std xor xchg jae xchg push jo inc and loopne sub incb xchg out js negl and sbb ficom pusha sti fsubrs mov incl adc or (bad) (bad) xor stos (bad) adc scas jne (bad) (bad) pushl movsl insb push popf mov add xchg jno dec ret inc js loope mov ret sbb (bad) (bad) call outsl clc mov cld (bad) dec mov rorl sub rep cs inc lds fwait outsb pop arpl mov and movsl or std adc add jno adc lcall jecxz push icebp mov sub pop mov lcall clc (bad) (bad) mov push dec dec rorl (bad) mov lret xor cmp add inc adc sub (bad) xchg cmpsl rclb js jae adc inc fidivrl iret mov faddl pusha subb sbb add push sub or xchg mov loope sub hlt in test dec ret lock into sbb xchg (bad) (bad) (bad) push adc sbb cmp push dec (bad) jbe scas (bad) cmp in jbe xchg xchg or (bad) (bad) (bad) incl cmp nop lret out cmpl cmp ss push rolb mov incl dec data16 cld dec scas mov divb mov (bad) inc iret dec fwait push pop das xchg stos (bad) mov (bad) cld subl jae lods push jns adc (bad) (bad) cmp lds pop (bad) pop pop scas dec mov (bad) pushl inc (bad) scas stc xor sub jno (bad) xchg dec std in (bad) (bad) pusha inc loope mov stos out jg jmp push mov ficompl insl cld lods xor sbb jp jp and jg mov xor push jmp push lock stos dec in hlt (bad) out cli (bad) pushl fidivr stos lods je xchg in leave sti inc lock push (bad) (bad) (bad) pushl inc js lds xor rorb int3 cli add test adc and negb and mov add add cmpl add lcall sub lock jl hlt out xchg inc and dec ja (bad) (bad) call test mov insb xor or or dec xchg fnsave (bad) (bad) (bad) incl lods aam int3 aam ficom mov in pop pop pop jge es sub jp xchg jmp (bad) ds fisttpll popl rcrl pop xor (bad) jg incl adc add fisttp daa mov test cmp (bad) (bad) decl dec jl jb mov xchg test sbb fisttpll mov incl mov pusha je repnz and inc sub clc mov mov imul sar mov aam pushf fsts mov in push roll inc jns mov cmpsl icebp insb gs frstor xor incl (bad) (bad) call es fistl sub cli stc aad sub ja sbb aam imul or lcall and rolb testl xor in jmp (bad) incl ds cmp xor adc sub (bad) fistl xchg cmpb (bad) fstl insl jl mov or ds dec dec jmp (bad) (bad) decl loopne mov lret xorl sbb push inc or push dec dec push insb inc leave addb (bad) lcall push adc outsb (bad) testb mov movsb jmp dec aaa lock cmp mov insl pop (bad) (bad) ljmp sbb ret push mov movsb dec dec xchg das lret popf arpl add (bad) push outsl jmp xchg shl lods adc popa mov outsb mov jae xor cld xor aad mov add push lea pop fcmovbe sarl shl nop (bad) (bad) (bad) decl enter fwait mov lret xchg pop ds shrl andl lret das and (bad) call and xchg adc pop xchg push scas adc (bad) mov sub mov imul mov mov std insb (bad) iret (bad) ret in inc jmp jae mov stos (bad) (bad) (bad) in add loopne pop mov fadd jle repz shrl mov test scas data16 cwtl push dec test mov icebp mov cltd jb lds mov pop and mov sbb aam inc sar (bad) (bad) (bad) stc push sub mov mov jle add lds scas mov mov outsl clc lcall sbb inc and ret or leave inc mov cld hlt mov (bad) (bad) pushl sub and sbb orl jle cwtl cld (bad) (bad) incl in xor cmp xchg aaa imul mov mov (bad) (bad) incl mov lock cmp fcomps adc xchg and (bad) (bad) ljmp pop fs lea stos or push inc push gs pop and inc into pop (bad) (bad) (bad) (bad) decl inc pop cwtl cmp add sub arpl shr dec sbb jl (bad) (bad) (bad) jmp push fcmove andl (bad) push test (bad) xor loop add inc out inc inc push sub jg push xchg adc cli jge cmp mov xor mov pop mov and pop lock call push jecxz aad pusha stos pop adc xchg fstl adc cmp (bad) jg and lret aaa dec in lret jle dec ja std in sar (bad) jmp push xor leave adc sbb out cmp (bad) call ds push jnp push sub or mov stc cmp push xchg sbb mov cmc push (bad) jge aam les popf xchg lret (bad) ljmp fs push (bad) adc outsb add stc mov jl arpl (bad) (bad) (bad) (bad) stc (bad) dec lods jge es arpl fs mov jo adc stos and mov movsb decl cmpb popa ret adc mov (bad) mov push loope daa push pop add fcomps mov imul lcall pop rcrl in mov jnp lcall mov int3 das push add in pop and push ret cmp (bad) stc aaa jp dec lret push push decl adc jg js,pt jmp push mov idivl movsl jecxz xchg adc (bad) lcall add lret sbb jmp mov adc ret sub jb iret or pop std (bad) (bad) in lods add sub inc daa outsl sub ja inc mov les push lcall inc out sbb mov loop or (bad) (bad) lcall push popa sub insl mov into popf mov xchg push jp sarb mov xchg int jle ret (bad) push sbb mov mov (bad) mov (bad) mov sub adc lahf xor popa push in sub cli (bad) ljmp ja lea stos push inc in or adc arpl and ljmp push adc xchg xchg adc sub cmp stos (bad) call jle push inc and pop adc (bad) repnz add rcll or call xchg mov xor (bad) (bad) call jge inc gs jmp push mov sbb jns jnp mov sbb (bad) pushl insl xchg popf scas cmpsb outsl jnp pop push adc mov pop mov loope (bad) ljmp neg and xor rcll cli ljmp dec mov scas outsb and mov jmp jp jne fistpl popf jnp out sahf (bad) mov or outsl jno cmpsl inc cld xchg xor xchg add (bad) jl call je leave js jno sbb (bad) jg aaa jno push jmp and sahf bound aas and jb mov xor (bad) (bad) (bad) fstps ljmp aas ret sbb lret sbb cmpl stos xor roll (bad) incl add jmp jb jo xor jg testb inc xchg mov cwtl (bad) ljmp sub mov testl ljmp (bad) xor repnz sub mov cmp sub inc cmpsl (bad) (bad) (bad) incl ljmp out (bad) lods fsubl les orl cmp xchg enter (bad) (bad) (bad) pushl test stos inc mov sbb (bad) adc int aas sbb adcb fcmovu leave adc (bad) jl inc test lret lods or mov jle movsl leave ja xchg xchg xchg es or sub dec mov ljmp fdivrp (bad) (bad) call xchg pop xor (bad) lock xchg in iret imul mov jmp addr16 (bad) jmp outsb divl add icebp sarl out test (bad) ljmp push xchg pop int scas loopne arpl out cmpsl pop push sbb jg and ljmp sbb xor inc jne (bad) insl pop sti mov mov jb addr16 (bad) jae (bad) (bad) jg pop cs movsl mov int mov fwait dec xor (bad) xor sbb xor mov pop flds call ljmp pinsrw roll mov sbb push mov pop out (bad) (bad) call lods int lahf push repnz into lret sti cmpsl es pop pop fcomps push jmp (bad) (bad) (bad) cmp lahf dec mov jl pop cmpsb pop mov mov dec loop cmp jmp mov push ja inc mov pop callw push and lret lret (bad) (bad) (bad) lcall test sahf lcall out je negl xlat lea js imul jmp cmp mov lahf lahf leave mov or cmp add fxch scas mov mov dec push push push xchg addb inc inc dec adc push popf hlt jecxz inc sbb shrl into cld push push and cmpsl push sbb mov (bad) (bad) decl addr16 ljmp or sbb bound pop pop repz fisubrl pop lock fcmovu sbb xor into lds mov lods cmp inc mov (bad) (bad) mov pop xchg push jb scas repnz pop push dec pop test pop lret aad ds ljmp inc inc fimul mov cmp ljmp ret daa mov jo test mov incl repnz das jg mov or and mov ret xor add jmp pop icebp repnz divb (bad) and mov mov imul lods adc dec adc add mov sarb in xor fwait idivb (bad) (bad) (bad) jmp xchg xchg stc adc adc or sub lds das mov test dec insb mov xor push sbb (bad) (bad) inc mov mov ljmp jae clc mov ljmp jo pop outsl clc (bad) out jp cmp (bad) iret (bad) mov in inc inc test imul (bad) (bad) (bad) call pop cmpsb roll cmpsb das mull add leave aaa fwait aam sbbl sbb int3 (bad) (bad) (bad) call notb cmp fildl test sub insl (bad) test incl adc or xchg ljmp movsb fimull pop mov test pcmpgtd add (bad) (bad) jmp ja xchg imul jbe lret fnsave outsb dec gs lcall mov out xor mov (bad) (bad) (bad) ljmp mov jbe pop leave mov cmp insb lods sti lret pop movd enter nop test mov mov daa cltd inc stos call xchg cli add popf adc inc xchg int push fstpt (bad) (bad) call imul (bad) addr16 dec add sbb rcrl mov sarl xor pop in cmp (bad) (bad) jmp mov adc mov pop sbb and fs loope jo cmp aad (bad) (bad) (bad) (bad) mov cmp push in (bad) shrb enter cld sbb or and (bad) dec popa jne (bad) (bad) call xchg push push aaa mov mov adc add ffreep loop (bad) (bad) (bad) decl fucomi push mov scas and cld icebp subl mov push ja pop (bad) jg lcall sub jno xor add fdiv in fsubrs sub mov jae mov pushf push push add push (bad) (bad) (bad) (bad) sti and xor shrl (bad) cmp data16 sbb icebp mov stc aas xchg jecxz cmp push data16 adc sub stos loopne xor (bad) (bad) jmp (bad) hlt movsb xlat cmpsl insl daa (bad) lods sbb and xlat outsb xorl cmp mov addr16 (bad) (bad) incl mov ljmp imul and mov mov popf icebp cmp decl fidivrl imul rolb movsb or (bad) pop dec fld push fldl decl popa push into arpl dec xchg les jbe decl (bad) mov adc (bad) in aam out dec xor sti push flds (bad) (bad) push sub mov or (bad) loopne xchg cmp add gs in clc push fwait aaa cmp cld mov hlt mov cmpsb lods pop jl,pt or repz jge or pop mov jl cmp jo dec and mov sub fisttpll hlt (bad) (bad) (bad) jg loop and inc push pusha adc xchg bound adc lods std inc jmp call aas (bad) cmp sbb jae jne pusha xor and daa add (bad) ljmp pop fs xor (bad) pop mov add inc outsb jge scas mov sub (bad) ljmp mov cli clc jle lret in test dec (bad) bound mov mov push mov (bad) (bad) (bad) mov mov mov inc stos xor mov adc jmp rorl xchg (bad) (bad) (bad) (bad) jg scas (bad) popf dec lods lods decb or mov xor jmp sti mov ret (bad) (bad) (bad) jmp roll jo imul aam out ds adc pop dec dec cwtl int (bad) mov (bad) (bad) (bad) lcall cwtl sbb mov inc jne inc movsl cmp jmp stos mov es lea (bad) (bad) (bad) incl pop cmp jne inc mov pop ss jge pop pop fdivr push sti inc in or test (bad) (bad) call out xor std cmp ss (bad) ja cmp ja lcall add jns ficoml jmp ljmp xchg mov mov xchg (bad) (bad) (bad) jmp jg iret and aaa push movsl dec and xchg pmulhuw mov roll rcl lock push push lods outsl movsl mov ss incl mov adc popf add (bad) or daa out shrb call jmp or push pop xchg xor mov cmp outsl push or lahf (bad) xor dec imul inc push xor test cmp (bad) frstor (bad) (bad) (bad) out loopne xchg jge scas dec nop jmp sub insl (bad) mov jb inc mov pop cld cmp cmp adc inc in pop jbe lret cwtl arpl inc and cli (bad) ljmp addr16 cmp mov out jnp mov cmpsb push jg (bad) (bad) (bad) fdivrl mov fs lcall or adcl bound call loopne xchg ljmp rcl (bad) xchg lea mov lock ljmp addr16 mov mov pop pop repnz xchg decl pop push mov pop cmp or into test (bad) jg (bad) mov out sahf stos int3 adc in notb (bad) cwtl push (bad) sub or push (bad) (bad) (bad) call or dec inc or nop pop dec imulb loop mov mov (bad) ss or lock inc stc enter imul inc xor stos push mov (bad) jns mov (bad) xor not fistl iret sbb cmpl inc cltd inc jg out or (bad) (bad) (bad) ds xchg mov lret or outsb and mov les fisub sbb aaa push (bad) out clc call dec in popa out rorb dec xor mov mov jo test sbb ret clc aas addr16 mov jmp xor (bad) call lods xchg sti mov and dec shr xchg dec push add (bad) incl loop dec negb ficom jl outsl jmp mov jnp xchg and iret xlat lret mov adc pop dec dec jb les (bad) (bad) (bad) jmp or movsb into and fldcw add or lahf xor test (bad) (bad) decl push sbb jbe dec add das cmpl push fwait inc mov sbb outsb imul jl sbb push popa into xor push aaa (bad) mov or rol (bad) (bad) pushl dec push pop push cmc push mov mov loop,pn lahf adc and inc mov sub (bad) jg roll addr16 push dec pop (bad) or lret push (bad) mov cmc mov (bad) (bad) jmp pop pop push cmpsb mov inc adc pop (bad) mov bound ret mov outsl sti fisttp cmc (bad) jmp mov shll ljmp xor mov icebp lret pusha xor (bad) pushl xchg cmp into mov and (bad) (bad) ljmp mov mov ljmp mov fwait xchg mov push fistp inc sub adc (bad) out pop pop stos lret jp pushl icebp (bad) (bad) (bad) decl pop sub fnstcw mov push aam pop outsl mov sub rol push leave (bad) (bad) (bad) lcall mov (bad) aad jns xchg dec lret add sbbb movsb dec lret aaa std or (bad) pop mov repz sub xchg sbb (bad) (bad) (bad) jmp xlat and sbb mov ljmp fldcw jnp adc (bad) (bad) (bad) jg sub push (bad) dec jmp ret push sub push ror pop rcll dec loopne pop push (bad) (bad) (bad) ljmp ret xlat pop lret add jg daa jae out nop loope jno pop sbb (bad) (bad) ljmp lret out lret out dec mov jecxz (bad) mov ret mov out dec mov (bad) (bad) fstps bound cmpsb int xchg movsb sub mov xchg gs mov (bad) pcmpgtd jecxz ljmp rcrb (bad) xor dec jae mov (bad) dec ds fwait popf push imul (bad) lcall cmova nop mov or cmp call (bad) daa jmp fild imul or pop stos xchg movsl push or inc push or je adc popa sbb push cld cwtl adc or dec sbb xchg out pop (bad) ljmp cli shlb xchg dec arpl pushf stos sub jb adc es ret in (bad) (bad) (bad) lcall push rorb mov pop dec mov iret fs test test loopne ljmp push lcall fisttpll int enter add push imul push lods cmc bound aaa jns cs xchg mov or or test (bad) (bad) (bad) dec adc dec js addr16 cmpl sbb pop mov enter pop inc loop out (bad) (bad) dec sbb js jle enter mov fbstp sbb push or jmp sub imul sti dec xlat outsb ret (bad) mov mov lods add push xchg stos in movsb or (bad) (bad) jg stc sub (bad) loopne idivl xor push cmp sbb outsb (bad) aam (bad) lcall fs push idiv xchg cwtl sbb lcall (bad) dec fcomp adc stos xchg (bad) pushl jb sbb lock idivl or movsb pop pop add push and inc daa inc stos jnp rolb mov mov xchg imul cmpsb mov jle cld dec das cld imul inc mov mov repz pop aas (bad) sar sti decl data16 dec outsb dec outsb xor nop mov cld jge lcall lods inc lret (bad) mov (bad) lea (bad) pop adc add sub in lea mov push or pop jne lods cmp push pop mov add out out xlat (bad) aam (bad) (bad) mov mov sub ja movb cli nop cmp and (bad) (bad) jmp ret adc lds lods add cmpsb stos call mov xchg sub (bad) push push into cmpb cmp cmp dec fwait mov xor cmc cwtl (bad) gs dec inc std (bad) (bad) decl rclb fidiv popa push jge xchg mov lds (bad) rolb lret xchg mov (bad) call pop lret mov loopne es lea mov or jmp xor mov or ljmp (bad) sub (bad) push and out hlt (bad) adc or inc cld ret jns adc sub push lock (bad) push and jb notb mov pop in or push (bad) lea adc orl cmpsl nop pop pop jo (bad) (bad) call xchg shll ret push jmp fsubrp imul clc ss xchg lock test cmp (bad) incl dec test dec pop je test inc daa clc cmpsb sub mov rolb adc insb daa aam js mov pushl jg (bad) mov or and repnz push nop xchg push cmpsl sub (bad) (bad) jmp stos insb adc lret ja lods lods sti pop xlat int pop les inc inc mov popa lret (bad) pushf jp enter call clc or cmp fnop repz mov insb jne test cmp aaa std jmp bound add mov shrl sbb xchg adc int3 out sub mov mov fisttp mov lods xchg enter add (bad) (bad) lcall push shrb cmpsb push mov push jns push cmp cld ljmp fdivr (bad) (bad) push lret test insb fcmovb das imul push shrl (bad) (bad) test (bad) aaa mov push (bad) (bad) (bad) pushl add jno call cs add dec sub (bad) (bad) (bad) decl sbb hlt or shrb xchg sub mov mov jmp (bad) fist aaa hlt hlt (bad) movl push lret (bad) (bad) jmp cmpsl insl and and hlt test rclb (bad) aad fldenv popf sbb ljmp xchg jecxz (bad) aaa nop mov loop (bad) (bad) (bad) jg xorb icebp or insl lret rolb jl add in pop mov xlat mov sub fs ror popa hlt xchg push out sbb pop rcl aam xchg fnstcw sub es (bad) (bad) mov lods cmpsl test imul fiaddl sbb rep sbb sub sub adc (bad) (bad) call js pop sub rcrl sbb dec mov out je and (bad) pushl xchg and cmpsb (bad) cmp inc mov mov mov mov stos mov mov mov inc out inc sti loopne clc push out mov (bad) or test cmc (bad) decl dec jno dec xchg add mov mov xchg inc dec (bad) (bad) jg call rorl scas jge add mov push test xchg (bad) (bad) (bad) decl fwait pushf dec lret cmc lcall sub adc das push fbstp xchg movsb adc lods push in (bad) call jo movb and fwait mov js sub (bad) ljmp mov outsl xor push ficompl loop xchg outsl sbb out sub loope cmovns dec fmull ret cld call ss jns sahf stos dec call jb sbb jg and dec stos orl pop ds (bad) (bad) pushl cltd pop push shlb lds cmp xor fidiv (bad) (bad) pushl sub cmp stos and lea push lcall daa and cld (bad) (bad) decl add nop std daa push inc push bound addr16 jnp or ror inc mov add repnz push cmpsl decl fdivs hlt (bad) (bad) lcall gs into scas mov xor popl sbb push mov adc sub add pop clc test dec cmp insl inc dec mov test (bad) (bad) out insb cmp xorl and xchg jb pop nop call mov cmp (bad) (bad) (bad) jmp push dec push pop lcall lret inc pop ret jecxz mov sbb push out in movsb jg (bad) (bad) lcall xchg lret or dec dec lahf into mov hlt pop addr16 add lcall ljmp bound inc or rcrl mov (bad) (bad) (bad) inc cs fsubrl fidivl imul jb fsubrs call fsubl add jmp fmulp hlt inc xchg xchg jge das sahf lahf lar sbb (bad) (bad) incl cmp mov bound inc movsl lahf outsb cmp lods and fidivrl (bad) icebp mov mov sar (bad) mov mov mov loop cmovg cmp mov (bad) (bad) (bad) decl jbe mov cli jnp popf fisubl addr16 in add popa mov (bad) (bad) jmp inc cmp mov sahf mov mov out adc scas ret lcall or gs mov xor sub icebp and loope (bad) decl popa jmp cs mov pop call jmp sbb and gs jg dec aad pusha aaa lock (bad) decl fistp pushf dec insl sub (bad) cmp mov xchg mov ss stos int mov cmp fstl (bad) call adc dec push data16 jg (bad) and jno lds jle (bad) je pop push sbb pushl (bad) (bad) (bad) pushl push enter mov mov mov fcomp push test pop pop dec ja mov jle (bad) (bad) (bad) call mov sub jg test mov xor std lcall jno push std push inc inc inc pop dec push dec hlt add sub sar jns lods lea daa jnp (bad) (bad) (bad) incl pop in ret xor inc scas mov subl insl add adc scas add imul dec inc cwtl jmp je mov clc jnp iret repz es (bad) pushl hlt popa sbb das fistl test pop dec dec int out (bad) xor mov (bad) (bad) mov and mov std cltd ja and (bad) lcall fdivs xchg nop outsl cli (bad) incl push pusha jae sub mov and cmpsb dec mov outsb aam jnp outsb push (bad) (bad) call int3 fiadd adc clc (bad) es hlt aam es xor mov (bad) call push jo jge cwtl dec or adc mov pop out aaa add std incl cmc je loopne or dec push push lea test ja mov cmp xor push mov cltd jmp (bad) (bad) (bad) jmp cmp (bad) icebp jmp leave arpl divl js das int aaa inc (bad) scas cli (bad) mov test jne pop jmp jbe,pt mov cmpsl cmpsl pop ret jmp decl inc xor sbb lds (bad) push dec (bad) (bad) incl adc or adc loop dec andl bound adc cmpsb lcall push mov ret js or aam out push adc xor outsb into inc (bad) (bad) (bad) decl xchg int3 xchg das cs pop fadds add add sub test jb cmp das xor jne sarb ret mov pusha leave scas clc (bad) lcall or mov out mov jbe bound mov (bad) (bad) outsb add iret add and mov jp sub (bad) (bad) ljmp aaa and popf or add pushf mov scas pop leave cwtl jns ljmp mov outsb mov or mov mov cmp fdivp call outsl and jnp stos dec mov (bad) (bad) (bad) (bad) cld adc sbb pop mov push sub fmull pop fs insb cmp movsl int3 outsl fiaddl push pushf je xor jg decl aas imul jl push cld adc and imul (bad) (bad) fisub pop jle cmp pop (bad) jl out fist aad fwait push in iret push lods cltd fldt push sub lcall pop adc adc mov outsl push or xor (bad) into aaa pushf inc sar (bad) (bad) (bad) fiaddl insl js cmc pop jno adc mov movsb nop mov push fadd add cmp mov insl loop sbb push adc dec dec jg xchg pop push xchg ljmp lock (bad) jge in pop mov cmp sbb ret cmc dec and (bad) (bad) incl xchg aaa cmp sti xor cmp lds adc xchg jne (bad) (bad) (bad) (bad) cld jne std int3 es push mov mov cmp add xchg xchg sub lea ss scas mov or (bad) (bad) mov adc aaa test mov ret (bad) (bad) (bad) mov dec lret mov rcrb nop xor mov cmp test push xor push ret (bad) (bad) ljmp sub inc mov or mov sbb lret inc mov leave mov in fiaddl scas jl mov int3 clc xchg cwtl jbe dec leave sub jnp jp fdivs aas dec ret dec fsubrs pop jo pop test cs pusha mov xchg and icebp sahf fnstsw (bad) pushl mov lcall sti gs xor call loopne jnp add (bad) icebp into pop stc inc and bound mov xor mov cld xor mov pop xor mov cli data16 loop dec (bad) jne adc (bad) fcomip pop sbb mov mov (bad) (bad) xor mov (bad) jg pop ja mov (bad) jg xchg jno fs loopne les (bad) (bad) jmp jb cmp clc inc sub cmpsl (bad) rorl loopne add rcrb adc (bad) rcpps adc lcall inc cmp cmp inc adc push add decl push and mov ret movsb (bad) (bad) (bad) jg (bad) (bad) xor nop push clc dec (bad) fild cmp lods pop dec jns imul (bad) jmp jecxz cs mov cltd ret jo sbb nop lock add add jmp sbb xorl (bad) ljmp add fiadd outsl inc xchg pop sbb jnp pop out (bad) sbb mov jg jmp gs cmp and inc xlat mov bound cmpsl fldenv cld (bad) (bad) jmp push pop push nop push xchg fucomip sub jnp icebp push jp cmp xor and sar jg add repnz decl cmp fwait mov (bad) incl inc fsubl (bad) and push jns sbb mov (bad) dec nop cmp lahf and mov (bad) movsb aas cli xchg push mov decl inc std enter stos fimull sub jns in pop cmp adc xor push mov fdivrl mov xchg mov sub movsl rcr dec mov arpl ja push cwtl (bad) iret sbb in mov fxch inc repnz (bad) (bad) decl lds xchg out and (bad) add ret stos das sbb dec jb mov jb mov sarb xor aaa out lods cmp imul dec movl mov xor lock cli out and or or stc mov sub cli cmp movsb adc add in add aaa mov add lods (bad) xchg dec (bad) (bad) (bad) incl jne fnstsw or inc in xchg ret leave push xchg sub push in lret jne mov (bad) (bad) jmp pusha or jo and jns loopne shr lods sahf rcll shll stos add push cmp scas imul pop xchg cli lahf jb dec adc push or fs ret adc jg aaa cmc (bad) (bad) (bad) jg sub mov xchg inc cmp ja jno test popa repz lods (bad) (bad) mov and cmp inc icebp mov sub mov mov (bad) call and call mov aaa mov loop loop mov stos pop sti cmp pushl stos sahf jnp push jecxz push jbe loopne jne fstps pop lds das gs aas and sub sub in push push in sbb mov ret stos fadd outsb add jmp (bad) (bad) (bad) out les jge rcrb insb sbb dec or orl and lds iret clc (bad) (bad) dec out dec mov arpl (bad) out cltd cltd shrl adc mov add sbb xor pushl (bad) cmp mov xor (bad) (bad) call dec xlat in cmpsl mov mov ret jg fisub jno ja lcall popa lods xor hlt repnz or sti adc out (bad) movsb xchg imul push (bad) mov cwtl (bad) ljmp sarb mov ljmp outsl mov add (bad) (bad) (bad) jmp enter or bound or dec sti rcll nop add (bad) (bad) (bad) jl loopne cld in stc scas xor pop fprem1 push les dec std stos testl cmp inc cmpsb (bad) sub in push fnstsw bound fisub (bad) decl jns cmc pusha mov (bad) out sbb leave push les arpl xchg js leave movsb push (bad) (bad) (bad) call jp and mov mov cmp xchg xchg (bad) (bad) dec outsb repz inc mov rcrb adc insb scas add rorl cmpsl adc (bad) (bad) jg dec jecxz xor das jns idiv jg pop imul les (bad) lcall repz sti inc and add pand dec aad test cmpsb push out lock mov or mov jb or (bad) fsubs xchg aas fdiv lret sbb dec push cli pushl add push adc sbb fnstenv pushl decl push mov jg stos or xor sub cmp movsb lods mov std les jmp dec cmp or jp,pt mov rcrb out mov mov cs pushl cld ja pop mov jnp jno (bad) aaa cld arpl sub clc (bad) (bad) push and sti cmp test jmp dec mov das xchg test mov add js cmp (bad) out loop mov loop imul xorl jl sti (bad) call fsubl out out ret sub fimull (bad) ds (bad) lcall lret push (bad) das sub add xor das dec mov xchg test (bad) decl fisttpll (bad) xor cmp pop cmp push xor push push daa mov fs jmp cmp jo fcomip (bad) frstor sahf pop test jno lea iret xchg cmp (bad) (bad) (bad) fprem xchg negb arpl xlat push ss mov xlat leave inc sbb (bad) lea (bad) (bad) (bad) (bad) call les loopne xchg xor xchg dec clc mov mov (bad) sahf into push loop cli f2xm1 (bad) (bad) decl (bad) mov repz mov lahf lret mov sahf push pop push (bad) decl mov std aad and arpl push cmp iret in sub fwait ret out jbe (bad) (bad) dec xchg mov stos mov movsb mov push mov adc pop mov mov sbb (bad) or ret cld lret mov and (bad) (bad) lcall lock into or mov pop mov gs ds xor ret mov insb and pusha push out lcall ja mov popa jns sbb mov jecxz dec hlt sub (bad) (bad) (bad) (bad) pop (bad) jnp rcrb jle mov stos popa lcall cld xchg cld push (bad) (bad) (bad) (bad) jl std das fimull sbb fwait movl aas inc xchg jae,pt mov js jg xchg das pop ficom dec pusha pop and (bad) (bad) ljmp bound cltd xchg (bad) lods (bad) daa mov pop iret ret bnd pushf sbb or (bad) (bad) decl mov xchg adc push out cwtl cmp popf lret xchg xor pusha ss incl inc (bad) and out cs std loop (bad) cs ja (bad) (bad) (bad) incl dec subl jb dec lret lcall lret cmp lret jno mov incl mov xor out test jae mov and scas clc dec call and pop add and cld call pop dec adc ss (bad) jg pop push jp xchg mov mov aad imul (bad) fnstsw xchg pop dec iret scas subl mov imul shr dec push adc inc not jmp insl adc daa cmp cmpsl aaa outsl add pushf scas clc (bad) call mov rcll inc outsb shrb and push bound add dec in xlat bound cmc mov add aas sbb call (bad) jmp or or mov dec dec popa inc sahf inc cmp stos popf movsl loope (bad) (bad) jmp rorb dec jge xlat sub (bad) lock cs push cmpsb adc (bad) lcall fstpl and or mov cmp or mov test cmp (bad) js push xchg sahf fwait mov adcl mov push clc jg (bad) (bad) jmp (bad) mov add pop and in (bad) out or sbb push and mov and cmp (bad) (bad) (bad) cmp mov cmp sti mov push add mov mov jno (bad) (bad) (bad) pushl or pop mov xchg gs jo add sbb sub (bad) ljmp pop push xorb leave xchg or pop sbb add dec mov (bad) (bad) (bad) dec dec clc in int3 out mov or pop sub or js movsb bound std (bad) (bad) inc xor jecxz mov addr16 (bad) push xor movsl rcrl mov sarl lock sub mov push adc lods outsb jge (bad) (bad) call insb es lock sub jle aam out jge xorb mov out cli lcall scas mov push mov sub scas mov movb sbb (bad) (bad) decl (bad) cmp xchg daa adc xchg mov rcr mov sbb (bad) lcall and push test sarl aam sbb sbb cmpsl or (bad) cmp xchg xorl lods sbb xor sti scas cmp aaa and dec or pop cld pushl jae mov pusha push and mov movl add sub (bad) (bad) (bad) cmp mov nop movsl out pop clc pslld mov mov and mov push scas cmp (bad) (bad) call jg or jo lea rcll setge mov imul mov jle push das loop jp or sar loope pushf inc mov fidiv mov (bad) (bad) call cmpsl jns cld fcompl fdivs (bad) cmpsl sub incb (bad) lahf pop mov sar (bad) (bad) call sub sbb mov shlb repnz sub inc mov (bad) incl mov in sbb push int clc test mov xchg loop jmp in mov sub fs xorb (bad) gs add (bad) faddl pushl std xor mov pushf add jno mov mov (bad) (bad) call jnp or das mov call insb push std push add loop xchg xor sub xchg inc aaa in push adc (bad) (bad) (bad) cmp rol pop adc lds insb adc jl cmp push xchg xlat jbe cli pusha xlat sub (bad) (bad) (bad) jmp jmp cmpsb out inc jp aaa daa mov sub mov xor mov loop std (bad) decl mov cld add out daa movsl jmp popf pop call in insl cmp (bad) jg dec xchg into push movsb mov nop enter in jmp mov fisubrl repnz xor inc rorl leave cld (bad) (bad) (bad) jle fistp or lcall jns pop jns dec imul adc cmc push (bad) (bad) pushl and repnz stos mov sub xchg or dec cmp fildl sar (bad) ljmp repz rorl and push popa sub (bad) call lret adc pop mov pop (bad) push mov add inc and cltd cmp mov mov lret and pop mov stos cmpsl fucomp mov sub mov ss fstp mov xchg lods data16 (bad) (bad) call add mov sbb inc or cltd cs sbb (bad) push (bad) (bad) (bad) decl (bad) push dec sub jae aad xchg scas lahf and movsb dec cmc (bad) (bad) inc xor cmp pop or jbe and and mov inc movsl bound xor jle sbb (bad) ljmp scas add aam lret push outsl test xchg sahf pop fidivl lods sbb imull sbb push sub movsl adc jmp inc (bad) (bad) (bad) (bad) fstl sbb outsl dec mov test mov stos mov or arpl (bad) mov pop fimull and outsb xor push cmp mov in aaa adc (bad) (bad) pushl das mov inc xor dec sub sahf movsb jle loopne insl sbb je (bad) (bad) (bad) call cmpsl outsl loop add add and aas push (bad) cmp sub movsl ljmp cmp enter inc fwait and inc lretw sbb (bad) ds push out mov imul jecxz dec jl aas mov in clc xor and inc adcl xorl sti jg mov pop sub (bad) push adc (bad) aam mov xor (bad) (bad) ljmp xchg lock in mov test inc jb pop popf fwait mov loopne (bad) (bad) (bad) inc push and roll jae mov lods movsl mov cmpsl dec sub (bad) (bad) ljmp xchg (bad) sbb add jbe fwait add dec xchg incb inc xchg dec cs (bad) (bad) (bad) lcall xor mov xor sti xchg cld sbb repnz pushf push outsl dec dec popa xlat (bad) (bad) in ret daa jne pop push dec inc jge inc test popa and (bad) (bad) mov lds mov sub arpl inc and mov mov xchg inc and outsb (bad) xlat cli cli jb loope es inc jnp cltd mov mov mov loope sbbl add push add aad mov and rorb lcall fiadd (bad) or cmp sub (bad) mov scas xchg popf mov push iret cmc push xorb fisttp xor jp (bad) scas dec (bad) (bad) (bad) (bad) cmp popa cmp mov (bad) dec pop (bad) iret stos cmpsb mov rol in (bad) mov loope sub add sti je outsl lcall test (bad) stc mov jg mov and xor iret jns dec pushf pop data16 lret cli push jl push loopne scas clc incl xor or dec imul pop popf pop mov mov (bad) cmp push add or pop mov dec cli mov loop in fs iret mov sub add push pop mov push xor mov (bad) stos hlt pop inc stos bound jmp sub jle pushf mov pop fucomip or jmp mov mov (bad) jg cmp pushf ret dec fwait pop call jl dec cmp ficoml and sub int3 mov (bad) (bad) (bad) pushl outsl jnp or jo sub nop jae jbe jne out shrb lret mov xchg decl lock daa gs nop (bad) dec insl imul das mov sub mov mov cmp out mov inc in cmp mov push ja rorl (bad) (bad) (bad) (bad) clc andl xchg lahf xchg test int3 pop mov inc daa sbb lods xor call movsb outsb inc imul mov xchg pop or test jmp movsb (bad) jbe ficompl inc ds shll push jnp orl dec lds jge and (bad) incl incl das or adc mov das or in (bad) (bad) decl or arpl into mov fdivrs mov repnz pop in lcall hlt (bad) int3 cmp cld push insl xor mov push jo bound or (bad) (bad) call or sub and sub (bad) aam fs fwait lahf int aad repnz (bad) (bad) (bad) push ret gs add push lcall pop mov mov cwtl pushf xlat cmp dec cmp out dec clc (bad) (bad) pushl pop pop jb ds or sub add push adc inc aas inc add push cld ljmp mov repz jns push pop rcrl ja movsl push cli call movsl jge std xor incl lods sub icebp (bad) (bad) incl mov jo into test mov or pop push jae mov mov xchg std lahf mov mov adc rcrl das popa cmp push pop pop mov or cmp mov aaa mov (bad) (bad) incl vxorps cld sub idiv mov mov push (bad) cld xchg aaa xchg cli (bad) in sub popa mov out fwait popa dec add mov ds inc dec and (bad) lcall add jbe nop dec adc xchg daa aad or es arpl cld inc pop (bad) (bad) (bad) mov inc mov lods jno,pn and movaps jbe add inc push cmp lcall dec jbe (bad) (bad) jmp aaa mov aas cmp andl pushf and and mov pop cwtl dec (bad) lcall lahf inc push stos mov dec jbe mov insl lahf mov scas adc push inc fidivl es loope rcrl (bad) (bad) jg aaa cmc cmc cld leave ljmp jle enter push adc loopne int insb (bad) (bad) (bad) lcall enter sbb xor pop les fnstsw je popf ljmp nop xor jg lea ds xchg sti inc jg (bad) push cwtl dec mov loop (bad) dec (bad) dec mov jnp push mov ret dec pop xor rcrl and fdisi(8087 out adc and (bad) out mov (bad) (bad) call and sbb xchg cmp call dec or push hlt pop jge (bad) (bad) incl out movsb data16 daa add adc mov cmp jne jne sub jl adc (bad) decl mov and loopne aad stos cmp adc (bad) mov pop scas insb test ja dec pop adc push and (bad) decl imul incb dec cmpsb and lods pop ret in (bad) (bad) (bad) (bad) jmp sahf sub push icebp xor fdivrl xchg xor mov jg adc icebp int lahf (bad) jg lcall aas and cs pop push push mov ffreep cmp inc mov aaa jno jne (bad) (bad) (bad) ljmp or jp scas out das sbb std aas insb ds hlt adc setno mov (bad) decl sbbb les cmp (bad) cmp jbe pushf or (bad) jmp xchg sub lods es xor out mov fnstsw clc mov pop jmp xor mov loopne in fsubl (bad) (bad) (bad) (bad) jmp stos add mov dec lods jle jmp mov cmc xor push mov dec cld es mov sti jg sarb (bad) (bad) call sarb jae mov mov jb add mov sti je mov adc add cmpsl mov xor les (bad) mov cmp lods (bad) fs xchg (bad) or lahf dec arpl sbb loop sahf jp push (bad) (bad) (bad) lcall mov add xor (bad) aad pop inc dec cwtl insl aam aaa ss and aad (bad) (bad) (bad) push mov inc mov adc push push xlat jge cmpsb int3 push jne lods in into cmc or push mov lahf (bad) (bad) (bad) dec inc int3 cmp je out mov inc add mov mov in nop jge sub sbb jg ljmp sub add and repz iret movsl shrb (bad) lcall sub incb xor xor inc (bad) (bad) (bad) (bad) fmull and mov add add lds push mov out xor xor ljmp jmp clc mov in dec stc int3 push js scas cmc mov mov (bad) (bad) (bad) (bad) mov cwtl imul mov push sub cmpsb lahf pop in cwtl outsl call and ljmp cmpsl sahf push sub mov adc mov xor mov outsb std (bad) (bad) call orb jecxz adc jge ja test add outsl xor push sbb (bad) mov mov adc in mov mov mov pop (bad) lcall sahf in pop lret push sti mov mov test and mov pop or push add mov sub (bad) (bad) incl inc popa rorb pop (bad) mov popf inc xchg nop mov xchg cmp (bad) (bad) incl shlb sub mov ss jae inc jae xchg ljmp incl cli pop dec or mov xchg scas lret pop imul (bad) (bad) (bad) incl sbb xchg or mov (bad) or clc cmp fs (bad) (bad) jg or and dec enter adcl adc stos (bad) (bad) (bad) (bad) mov ret fcoml sub scas add sbb and (bad) les popa leave xchg (bad) (bad) jmp sub dec hlt inc lock std add jle mov push ret xor aas je (bad) (bad) (bad) (bad) mov inc fsubl fwait sub push adc push jbe sbb (bad) call pop stos mov cmp mov (bad) scas and xchg add xchg aam (bad) (bad) (bad) ljmp popa bound adc (bad) dec jmp out inc stc jp out and pop mov jl (bad) (bad) decl jb xchg and add mov lock ss mov jle inc loope (bad) inc test mov jne faddl (bad) sub push imul xor or sub dec stc push hlt add dec lret (bad) (bad) (bad) jg pop psraw mov out xchg xchg mov gs mov stos push ficoml out xor (bad) mov addr16 push fdivrs xchg (bad) (bad) (bad) lcall dec inc push mov aad mov popa add mov mov xlat inc mov pop in dec adc cmp jl dec lods mov test cmp mov or (bad) ja push (bad) (bad) in stc and xchg in push cmpsb dec xchg sbb push xor sbb dec mov mov mull cmpsl mov push push popf cli or mov (bad) (bad) (bad) decl ds push jnp jb xor inc pushf in aas dec dec add cli jmp addr16 xchg push dec push test sbb push xchg pop xor (bad) (bad) (bad) out dec stos sbb xchg jg cwtl jo and sbb inc pop sbb (bad) cmc dec (bad) call mov fimul subb clc std dec mov lods mov jmp aad push and cld repnz jne stc in insb dec inc xchg xor push (bad) (bad) (bad) call rorl dec inc shrb movsb adc leave clc rcll call fisttp pop (bad) (bad) (bad) (bad) jmp sub test xchg mov aam jecxz (bad) mov push std pop ljmp jbe int3 (bad) sub mov mov (bad) lcall cltd movb xor push inc push dec in (bad) (bad) incl mov push test sbb jno ljmp sbb xchg xchg jbe xor int lock (bad) movsb ds fcmovnu loop adc fwait (bad) (bad) (bad) pushl ljmp mov sub sbb push idivl std cs rcrb in pop (bad) (bad) (bad) push sub outsl pop data16 scas icebp pop push and mov insl cmp rcll clc (bad) jmp or gs mov inc das push aaa iret popf and fldenv movsb aaa std (bad) call mov lcall sbb sbb adc ja (bad) ljmp dec bound sbb jmp mov ret addr16 ljmp (bad) pushl stc mov fnstenv fsts out test jmp cmp (bad) (bad) decl xor leave negl pop dec fstps cmpxchg (bad) adc sub pop (bad) (bad) (bad) (bad) faddl jmp mov repz popa aad xor scas dec cmpsb aas (bad) out dec pop inc inc xchg xor loopne mov fs (bad) (bad) jg mov rcrb mov cltd cmp jg movsl fdiv xor lods pop and (bad) sbb (bad) (bad) decl cmp mov adc dec (bad) es and sbb jne sub xlat (bad) (bad) (bad) stc addb sub add mov in js cmpsb lea std das js sub dec call or stos pusha cmp test xchg sub fldcw insl out xchg xchg jae lock dec aas (bad) (bad) jmp mov push jp sahf push xchg inc int3 xchg jb mov movq (bad) ljmp cs xchg mov jnp lret rcll clc dec gs cld lret out xchg cs (bad) (bad) lcall xor jb test adc xchg sub inc mov pop xchg int decl dec lock stc xchg or mov out jb and (bad) (bad) inc dec jmp cmp xlat cli cld gs jmp ljmp rcrb mov stos push and mov test pop fdiv pop cld push sbb lea gs mov pop jge (bad) (bad) ljmp push push outsb add sar pop sbb rcr jnp cmp or push jbe mov or mov lock mov dec aam sbb and testl (bad) (bad) incl jl dec adc cmpl int3 sub push jno jo cmpsl xor popf fcos (bad) (bad) ljmp pop pop out mov and (bad) aaa and bound out mov cltd imul jg hlt incl jb mov gs insb sahf jns mov js call sbb aam or shrl pop sahf push or fimul stos (bad) (bad) jg mov mov fnstsw jmp pop fwait das jp (bad) (bad) (bad) lcall cmp lods jl push and mov xchg add or fisttpll ss (bad) (bad) decl call pop mov into cmp jg pusha lret ds in mov mov cmp (bad) (bad) (bad) in mov xor mov int3 jne daa int gs lcall arpl inc mov jb jle loope jp arpl into push xchg out rorb dec adc loopne ja dec sahf (bad) pop lcall and jle (bad) (bad) ljmp xor cmpsl hlt les aam bound mov mov cmp shll lcall mov xor cmpsl mov cmpsb push fs rorl (bad) (bad) jg movsb mov bound ss mov ss int add roll pushl push test add sbb pushf lods inc insb mov dec out scas scas mov xor pop push insl mov sub pop (bad) (bad) (bad) incl mov aaa je in push xchg push cmpsl cmp and dec pop mov repnz mov pop pop outsb (bad) pop sub out xchg jecxz mov fs rcrb fxch (bad) (bad) (bad) (bad) ficomp jg lods pop mov or lods arpl push and clc insl nop mov mov push add hlt bound iret popa fnstsw adc xchg mov out dec outsl repnz (bad) (bad) pushl in and sahf or bound jl pop dec sub insl (bad) (bad) (bad) (bad) xchg aam mov xchg loop aaa push push popf mov data16 xlat mov (bad) (bad) call xchg add push xor xchg jle out ss es push xchg cmpsb dec cmc (bad) (bad) pushl pop sarb dec xchg lahf cmp into cmp push mov (bad) lcall xchg lds shrb dec outsl lds cmp pop mov (bad) out mov enter outsl push push aaa into mov pop das lcall fldenv mov das cmp sar jl js cmpsb xchg jbe push xor (bad) mov inc repz xchg (bad) loopne mov jbe aas mov jbe or (bad) mov ret ds movsb es je and lcall (bad) mov sub (bad) mov lcall movsb stc cmpsl das clc pop or xor aam movsb mov enter call mov fwait jp sub push imul cmpl sub (bad) (bad) (bad) (bad) xor imul add adc bound sub aad sar int3 mov mov imul ret sub mov (bad) (bad) (bad) pushl rcrl ss test mov inc push sbb aad add scas rclb outsl (bad) (bad) call mov stos push mov push or push adc lds stc outsl inc loope in cli (bad) (bad) jmp cmpsb lods lock adc out and xchg push scas test push sbb (bad) (bad) (bad) push and dec adc add sub repnz (bad) jb in fadd cwtl insl (bad) sub out and stc (bad) int3 sub jge ret fdivrs sbb in jge and (bad) ljmp mov into int add les xchg sbb fdivl adc push sahf sbb lods pop icebp gs (bad) (bad) fbld (bad) cmp je icebp push lods shrl rorl xlat mov call sar pop cwtl and (bad) ss fsubp test das add outsl (bad) test (bad) (bad) (bad) cmp rcrb fstps jns imul jb xor mov scas push stc js pushf fmul pop ret dec jbe xchg mov xor cli sahf aad xchg (bad) jne (bad) (bad) jg add xlat in je pusha mov dec rcr ds aad dec dec jle mov fwait dec xchg clc call dec rcrb loop mov decl xchg pop ss aas lods adc and mov sbb push push pop stc ss and fwait scas std (bad) lcall and jne loopne mov xchg scas mov cs mov aas std dec sub sbb clc decl jbe (bad) mov imul mov ret sarl arpl decl and inc bound dec pushf add test inc cmp mov push enter daa loope and jmp cwtl adc sub sar incl js cli movsl loopne cmp adc add ret dec xchg loope pushl adc mov mov push dec aaa sbb push (bad) (bad) incl ss fisubrl sbb xchg pop mov mov push sub scas adc push movsb imul sbb lods hlt mov jp (bad) (bad) (bad) lcall ja add and ja add mov jnp aad cmp or and mov push stc aam out (bad) and cmpsl lock lcall push pop sarl fimull sar (bad) pop imul and or xchg inc in popa (bad) (bad) ljmp mov sub dec inc or mov and lahf jp pop push rcrb aaa cld inc jo ret sub mov ja nop xchg cmp push call adc adc aaa leave cli pushl jge out nop ljmp xchg ds jno loop (bad) push lds cwtl int3 leave mov mov ds mov push or (bad) mov sub xchg outsb mov add mov jle jge push mov inc daa in mov jl sahf (bad) (bad) (bad) jmp xor pop mov cmp dec adc jge dec jmp addr16 out decl lock push lea mov ret inc pop mov add (bad) jmp xor out jnp mov insb jle in jae mov and mov add and fildl mov arpl (bad) jg call lds push adc andl sbb (bad) (bad) (bad) (bad) (bad) (bad) pop in xchg pop (bad) dec sub adc push lods sub mov int cld (bad) incl cmp mov das push or (bad) push pop push push pusha lahf jle arpl (bad) incl mov mov test sub dec (bad) in test (bad) (bad) pushl lock lahf loopne jg jne les in xchg fadd xchg push ret scas xor mov (bad) (bad) (bad) cld mov mov dec test rcrb ss add xchg (bad) dec sar ja rcr mov cli xrelease (bad) and (bad) (bad) (bad) mov popf fldcw pop rorl xchg add jp sbb mov js decl inc dec in adc (bad) fstpl mov pusha cmp out cli (bad) mov in xchg leave pop std repz mov (bad) (bad) pushl pop cmp add or out xchg push (bad) cmp push fwait das mov xor dec push nop test jo dec push mov pop cmpsb out adc (bad) decl into or dec xor hlt dec (bad) xchg pop adc fadds push fs popf loope test je jbe cltd repz pop loop (bad) (bad) mov xorl mov sub pop push adc popf fmull lods mov inc or adc in pop dec ss mov cmp test push and (bad) mov (bad) (bad) sti push (bad) xor addr16 adc jmp gs enter clc push mul mov and stos ljmp dec outsb aas (bad) in and add ds fbld popa psadbw add sub jnp cmp aad (bad) decl mov mov jmp or jle sti int3 cmp xchg lds (bad) (bad) (bad) mov icebp sbb or sbb pop fnstenv sbb mov mov push pop imul int xchg inc push aad cmc mov jns lahf or iret (bad) xor call mov push enter jmp inc xchg pusha sbb mov or (bad) (bad) jle xor cltd xor mov mov inc es xchg add (bad) (bad) mov and leave fnstsw testb leave mov sub mov (bad) (bad) jmp jno les sbb mov xchg scas dec xchg jp (bad) insl pop arpl (bad) (bad) (bad) incl pushfw dec lea stos arpl pop mov popf mov daa jns xchg mov (bad) (bad) (bad) mov subl int3 in fsubs rorb in nop adc gs (bad) (bad) call mov shll push test pop ja call cs and lea call sbb stos mov add cmp icebp or call outsl call cli mov jmp push mov ja dec (bad) incl cld in xor push and and cmp inc mov or mov maskmovq aam cmp aaa ret inc idiv cs xchg (bad) (bad) (bad) (bad) jl arpl jnp sbbl ljmp test mov dec pop jb leave imul (bad) (bad) (bad) call je xor and divb test out jno enter cmp pop and sbb inc and mov (bad) (bad) (bad) incl jns sarb adc lea adc or pop mov les adc push cmp fcomps ja inc mov loopne xchg in mov rcl aam push cli (bad) (bad) fcomip imul sub mov adc std xor cmpsb push sub icebp (bad) (bad) (bad) (bad) cmp xchg sub or sub mov add sub (bad) jb xchg dec push sub xor pop sarl call mov repnz pop data16 (bad) (bad) incl pop add jecxz dec fisttp (bad) sti in xchg xchg pop scas (bad) enter je in and xor sbb cmp in ds mov cld dec decl fild ja call pop xor addl sub inc pop sbb pop push sbb (bad) jg sub lock pop stc cld mov mov add fwait add ret (bad) (bad) decl push test (bad) lahf pop cmp stos fisubrl in (bad) (bad) jg lea lea bnd pop dec stc inc int sarb sub and ljmp shll mov push jne stos in pushl int3 ja dec jp push cmp stc (bad) xor (bad) (bad) push ljmp scas nop mov (bad) pop mov sarb cs mov add arpl (bad) (bad) (bad) incl pop pop push es pusha cmp clc scas hlt push dec mov (bad) push (bad) (bad) (bad) push aam loop push jne (bad) xchg mov addb ret int3 cmp arpl pop int3 int3 (bad) (bad) lcall fcoml push insl out repnz xchg and push call (bad) mov scas push push push push xchg out icebp push loop push and std (bad) (bad) jg dec sarb inc jg xchg lods bound cli (bad) lcall pop insl cmp pop xchg hlt pop js adc mov scas cld rolb and rol pop repz (bad) (bad) incl andl adc pop sbb or xor mov xchg sub (bad) (bad) (bad) stos mov insb cmpsb test lods sub (bad) push outsb and imul push dec xchg repnz (bad) (bad) (bad) aas cmp enter imul push jmp test xor cld mov (bad) (bad) call adc mov mov fisttpll inc jnp xchg push gs pop ds (bad) (bad) (bad) mov adc icebp callw arpl xor mov jmp lods (bad) (bad) cmp push jmp (bad) pusha adc sbb pushl (bad) (bad) std xor (bad) ljmp in mov adc les (bad) (bad) pushl mov imulb mov hlt sbb pop cwtl fstps xchg sub add (bad) (bad) js es push push mov imul mov inc dec clc mov ds (bad) (bad) (bad) incl mov (bad) and cwtl bound icebp jle sti inc mov mov mov pop cmp je flds fwait cmp mov (bad) push cmp or aaa sti cltd lods pushf xchg or inc xor icebp gs rorb cld (bad) (bad) pushl adc pop jbe push ja aam inc negb xchg pop fwait lods popf inc push add iret add loopne,pt jo mov outsl scas test jmp test dec push pop stc push dec cmp add mov and jae inc daa or (bad) pushl std ret arpl lds aad test fdivrp pop xchg addr16 popf (bad) (bad) (bad) (bad) sti repnz mov test cmpsb fnsave sub mov popa call (bad) (bad) lcall fcompl sti jecxz ret dec cmp and and push xor int cmpl loope (bad) (bad) cmp or xor lods jne mov data16 or dec aas xchg add (bad) jmp ficomp jns adc hlt push ds jecxz les mov test ljmp inc mov mov int inc in sub lods mov (bad) (bad) (bad) jmp adc pop daa mov push sub arpl push je fnstenv mov int3 dec add mov xchg and sti mov pusha (bad) test (bad) (bad) (bad) jmp and daa fcmovnb sbb mov jle outsb in aad mov (bad) (bad) (bad) lcall or fild and dec add cwtl and xor add pop inc push sarb decl rcr and cs out sbb inc aas adc (bad) pop push ds call (bad) (bad) (bad) ljmp rorl cld sub popf push and mov mov mov test dec xchg out (bad) (bad) (bad) call hlt xchg dec sti addr16 sbb jge jae movl mov or aas pusha add es jp (bad) (bad) push mov repnz adc mov mov std dec ja test movsl inc and push mov stc gs dec and test test dec xor mov fisttp (bad) js pop mov inc cltd std mov out ljmp lods lods lret stos mov out xchg test add jnp jbe adc fnop rcll lods push and scas je jne (bad) (bad) call or sub outsb repnz pop les xor dec fistpl pop mov cld cmp (bad) push out fs addr16 aam out fs xchg loope out dec mov mov ljmp cmpsl xlat push cmp and lcall imul (bad) jg pop mov out dec xor prefetcht0 xchg movsl xchg fsubrl push inc test inc (bad) lcall push xor (bad) push pop movsb icebp xor push push repnz lock pushl ja mov loopne xchg push jl (bad) incl fidiv jle cld push in mov stc push int3 (bad) (bad) (bad) cmp add ret jns dec leave std jmp adc jno es xchg dec ljmp lcall roll or mov dec mov sub mov add (bad) (bad) mov or pmaxub sbb dec rcll push mov mov mul loopne int3 and icebp (bad) ljmp sub adc das icebp fiaddl xchg dec (bad) (bad) (bad) mov inc jb ret std pop (bad) fmulp rcll mov push loope fdivs ja (bad) lcall call (bad) and stos loop sbb call xor ljmp pushl imull sahf icebp js mov imul into jmp leave push push daa test jbe mov leave insl sbb notl add (bad) (bad) jmp cmp jo jb push mov inc mov addl mov pop (bad) testl jne xchg mov mov dec fsts adc gs add push cwtl push stos int3 mov insl xchg aas or movsb andl and loope sbb (bad) jg cmp imul je rolb cmp dec push js (bad) (bad) (bad) call pop push std push mov push push test jno out mov jl outsl icebp (bad) (bad) call and mov out sahf sar pop push adc rclb scas into push sbb (bad) push jo and lds in pop aaa cs fbld lds cli pusha (bad) ljmp xchg orl ss inc mov push inc in movsb (bad) imull mov imul cs imul js ljmp ss sub or ja data16 std jbe int (bad) (bad) (bad) jmp or mov adc add mov repnz sbb (bad) (bad) (bad) decl inc or enter unpcklps ret bound popa popa jae sbb xor (bad) incl pushf stos sbb inc cmp sub cs add sahf sbb ret sbb (bad) mov cmc mov sbb ds sub (bad) (bad) pushl xchg xor fucomip aam popf mov jle xor sbb (bad) stos icebp ret pop outsl (bad) (bad) (bad) (bad) jnp xor cmpsl mov inc rorb loop insb push or mov pop jecxz (bad) sahf int3 xchg jmp fwait push gs iret (bad) insl ret sub icebp (bad) ljmp or jne cmp ftst mov jnp (bad) cs (bad) lcall psrad hlt dec cli jne or add ljmp cmp or std inc add and cmp jg mov push (bad) std inc lds xchg push (bad) (bad) (bad) lcall dec nop jecxz andl (bad) div in popa sbb fldenv sub add (bad) (bad) (bad) call lcall ret push mov jae jno popa rorl mov iret push jnp mov clc xor insb fdiv mov insb add ja pop dec mov lea divb push fs ret xor lcall mov sbb inc push sahf cmp stos (bad) jmp popa movsl notl jae dec repnz movsb cs jmp out mov (bad) (bad) pushl mov dec (bad) xor (bad) jecxz xchg cli sahf lods inc pop int rolb mov call loopne fiaddl push push push push test xor mov jmp push pop jecxz pop inc or sbb and seta dec mov cs loope jnp sub jo movsl aad jge repnz xchg push dec lock aas je (bad) mov pop (bad) sbb movsb jo hlt dec dec shr sbb jno pop mov in rolb inc iret push inc dec xchg (bad) (bad) fbld inc xor mov in out pop out sbb cld data16 pop rcll (bad) (bad) call scas enter aad adc mov dec jl out int mov insb jb cmp (bad) (bad) fcomip xchg ds mov sbb sbb adc cltd push push jmp lea popf jo ljmp into xchg jmp push divl push pusha (bad) (bad) (bad) incl lds inc into adc fistpll and je (bad) (bad) (bad) pushl xor sub sub fsubrs cli sub add (bad) pop add cmc sub mov ljmp decb jbe cld outsb inc sahf fbld ret cmpsl inc out dec test (bad) (bad) (bad) lcall xor outsb mov sahf inc pop aad add leave in into cld out mov lcall jb scas mov mov into test (bad) (bad) jmp sbb sbb adc (bad) xchg nop stos cmp dec hlt outsb cmpsb cmp fsubl jg ffreep add inc lret loop rcll js ret test (bad) ljmp test repz mov in lret lods pop inc jo nop dec mov or decl xchg loopne call push (bad) mov test hlt cmp mov test (bad) not subb (bad) jmp loop cmp and cmp push cmpsb insb in call (bad) (bad) push and mov lods gs lock pop mov add mov js mov (bad) (bad) (bad) fincstp test mov add aas ds cmpl test mov popa outsl aad (bad) (bad) (bad) incl loope push jno push sbb int push mov sub dec repz inc (bad) (bad) (bad) (bad) ds popaw pop adc jl add sbb push ljmp and fcomip fwait (bad) in mov mov aaa rclb jl sbb (bad) clc (bad) (bad) jmp add pushl gs clc loope dec pop insl mov mov addr16 ljmp xor clc xor out aam push mov mov pop addb cmp in sar bound xchg push dec gs mov imul fcmovbe aaa add cmp dec (bad) sti lods scas xchg mov (bad) (bad) ljmp pop popf push and (bad) lods clc test dec or mov je inc cld (bad) (bad) ljmp leave xchg imul push fidiv xchg add xlat fwait sub cmpsb jecxz add jecxz and or jl mov fwait insl pushf (bad) into clc out pop addl mov mov addr16 pop (bad) (bad) (bad) dec call fnsave jle dec test cmp sub pusha sbb stc push lods pop aaa pop jns leave addr16 (bad) (bad) (bad) incl mov test fnop lea mov (bad) jae lods jle loope cmp add test (bad) (bad) (bad) in cwtl mov test add hlt mul mov jmp (bad) (bad) ljmp popa sub rorl dec (bad) xchg inc insb lock pop jmp (bad) movsb fsubrl jb cwtl inc (bad) cli jbe or aas call xchg call mov cmp rolb loopne leave add mov fcmovne push (bad) (bad) (bad) incl shlb aas adc mov bound add cmp jae int3 mov imul lret (bad) (bad) jmp hlt sbbl mov push dec dec mov out loopne (bad) (bad) decl mov pop mov mov sarl pop jbe pop jmp push or mov sub ja inc fld sahf xor fisubl (bad) push lcall ficompl cmpsb (bad) cmc push xchg sub test jmp xor aam (bad) (bad) (bad) call test pop add mov mov xchg pop and int movsb or test or add (bad) out sti jbe mov mov jae pop mov ja mov sub cmc jnp int3 or sub movsl mov pop (bad) (bad) (bad) jmp (bad) icebp pop (bad) arpl inc or leave (bad) and mov rcll inc ja (bad) (bad) mov daa or xchg js aas push mov cmpsb add xchg (bad) sub fs orb rcl mov xchg ss xchg inc jns (bad) mov jb dec cmp pop rcr mov xchg xchg fdiv jb (bad) mov (bad) (bad) (bad) jmp loopne cli jge mov fdivr rolb mov fisubr (bad) (bad) (bad) jmp dec repnz xchg (bad) (bad) sub jle jnp push pusha adc (bad) (bad) xchg iret xor in gs mov nop insl int3 ret lods and je jbe ret sbb (bad) xchg (bad) (bad) (bad) (bad) ljmp fldln2 push xor xchg packssdw std xlat jp mov flds (bad) (bad) (bad) incl or dec and push sub movsl aad sbb mov adc loopne sub (bad) (bad) ljmp sbb dec jg push mov xor push push lods cmpsl das fsubrp xchg mov dec popa adc (bad) (bad) (bad) ljmp mov push sub xor or xor sti mov test outsb jg sub mov dec mov jns sub (bad) (bad) dec xchg mov push sub pop std je leave xor loop gs dec jno aas sub sbb (bad) (bad) lcall jmp (bad) pop push mov mov sub es adc push dec pop sbb (bad) pushl or testb sub decl insb inc shll rorb sbb (bad) fidivl or inc (bad) (bad) std cmpsl mov pop add mov sub hlt xchg mov in and enter sti nop fnsave (bad) cwtl out fdecstp inc and js inc push jg xor sbb or incl lahf pusha jno cmp pop in and sbb insb mov jne data16 cld push insb cmp mov push mov cmc std stos ret outsb movsl fldenv in cli xchg imull shr (bad) (bad) (bad) (bad) out popa sub call fisubl pop xchg lock popf sbbb xor pop and lds mov ds aad mov icebp sbb jo push push adc movsl cmp (bad) ljmp hlt int mov insl (bad) cmp shr cmp (bad) (bad) (bad) jmp or inc xchg stos leave ljmp pop mov add rorb inc dec (bad) (bad) decl mov xchg inc in repz in sub push cs (bad) (bad) push (bad) loop mov cmp and dec add pushw movsb jg out mov lahf mov jmp cmc stos dec rcr or jecxz and push arpl xchg icebp (bad) (bad) fcomip fcoml mov (bad) (bad) cmp mov cmp shll inc hlt inc dec sar call jbe mov mov mov daa std jl pop mull movsl (bad) (bad) (bad) pushl cmp in add sub pop add js test rorb lock lcall cmp push xlat (bad) jg lcall arpl fcompl data16 cld les sbb add mov (bad) (bad) call lret dec (bad) sti jg test (bad) lahf scas jo mov cltd pusha fdivs icebp jecxz mov decl (bad) pushl pop adc dec es jl imul mov or lcall notl out clc es mov pop mov out lods das and lcall adc jecxz js out out test (bad) pop add (bad) decl ret and pop in mov cmp popa arpl sbb gs cltd lods xchg (bad) (bad) (bad) (bad) in push mov sahf pop int ret in mov fadd loopne sub movsl cld loop popf inc (bad) xchg (bad) (bad) (bad) ljmp psraw loope cmp mov and lods icebp daa gs (bad) (bad) decl and mov (bad) cmp mov out or jge arpl incl xchg jg push lcall mov jge adc cmp loopne push (bad) (bad) (bad) (bad) push lahf cmpsb dec dec shrb jb add sbb ret movsl adc jl movsb fadd imul mov dec (bad) sbb push fsub mov mov fadds sub (bad) (bad) pushl je push cmpsb sbb ss jl inc cwtl mov mov (bad) and cmp add mov pop mov push (bad) cmpsl aad xchg fildl cmp fwait sahf inc neg push call call jbe ds test lret mov (bad) (bad) incl insl iret mov push inc and xchg movsb lret xchg pop lock jmp mov (bad) or or popa inc or stc mov xor (bad) ljmp cmpsl xor jle mov subl mov (bad) (bad) incl in dec xchg pop in pusha sahf lea stc add out iret and inc loope (bad) pushl (bad) lret repz and lods cmp pop cmc je cld jae sarb loope (bad) inc jmp in mov sahf sahf push or xor in fs mov xchg sti in sbb hlt pop fmull and (bad) (bad) (bad) jmp and stc dec pop jne dec jp lea repz pop adc aam (bad) (bad) ljmp notl dec jo push xchg lods push adc or out repnz cmp js lock (bad) pushl mov sbb daa popf cld into cmc push movsl cltd mov fldt jns icebp decl int3 pushf cmpsl xorb (bad) (bad) (bad) fisttp pop movsb pop push dec inc pop daa mov inc mov fcmovnb dec adc mov jg (bad) incl mov pop xor push xor mov (bad) and stc andb (bad) (bad) (bad) jmp ss jp ja cmp ja inc inc fcmove data16 sbb xor mov (bad) decl aaa popf fs or cmpsl popa cltd cs mov xor adc imul mov aam loopne stos add or sbb add mov je cmp (bad) (bad) call pushf pushf adc and movsl push in int xor pushf cmp sar jg dec sub inc xchg xor hlt imul jp out lea xchg sub pop pop xchg mov mov nop mov ja mov fwait mov mov dec dec sbb aas push push and lock hlt mov (bad) incl mov (bad) pop xchg mov xor (bad) push mov or ja out mov or rcl push adc sub dec inc out dec pushf (bad) (bad) (bad) incl mov movsb popa lret cltd cmp popa pop (bad) sarb add pop xchg pop cld pushf mov mov sbbb js (bad) (bad) jmp xor (bad) mov rorl loop cmp dec jbe and (bad) jnp rorb or popf mov bound or cmp (bad) fsubrl nop dec mov pop pusha inc lret (bad) rcrl aad fistp fstl mov or decl data16 ja jo fdivr (bad) (bad) jg je fidivrl movl mov in pop cmp fisubr add iret jo test sbb pop loop ja add bound dec (bad) (bad) (bad) (bad) cmp sahf (bad) dec sub call mov cmp or add cltd fdivr (bad) (bad) decl sub movsl cmpsl push stc cmc jle xchg call ss mov push dec xor (bad) (bad) incl lods clc lret fdivr loop or dec imul add push pop fs sub xor (bad) (bad) call call loopne daa inc roll loope inc xchg imul jp aaa scas js xchg call (bad) (bad) call mov fmuls imul pop adc push fcoms add pop lds (bad) (bad) js pop mov jbe or cmpsl sbb mov add sar (bad) (bad) jmp xchg icebp pop out scas inc jge aam hlt pusha sub pop add push jb lret dec or lea (bad) dec xor fiaddl test scas cli ja jg jp pop mov xchg adc inc out fbld js test and (bad) jmp cmp sbb sbb dec loopne scas les xor (bad) (bad) (bad) lcall out idivb and sahf cwtl fdivr mov and push nop or mov clc (bad) (bad) decl push or adc arpl imul lcall es mov cli mov sbb dec inc push mov cli (bad) call cmp and arpl test (bad) mov sbb (bad) std xchg mov int3 stc inc sbb cmp (bad) jg test add test xor hlt sub cs enter sahf xlat and cld sti cmp in outsb arpl fnsave or (bad) ljmp mov movsb out inc and xchg ja lock mov rcrb push mov sub add (bad) jmp aam clc inc jmp and popa cmp (bad) (bad) (bad) mov jbe lret jl jno lds pusha inc std sbb sub (bad) (bad) incl mov or jno test fadd pop pop adc cmpsb adc xchg xchg sub (bad) (bad) (bad) pushl or je inc fxtract sbb adc out sub adc cmc cmp inc ret jecxz movsl adc jle jb mov dec aas out sbb add push mov and inc dec mov mov push lret lahf push dec fwait pop dec (bad) dec xchg fiadd pop push outsb andl jecxz sbb icebp push std cwtl int jg mov or in (bad) incl movsl dec push jae cmp gs in (bad) mov test lcall xor daa fisubrl popa icebp push fucompp fisttpll adc sub push jg sub scas and mov inc jno xor xchg push lock (bad) (bad) (bad) (bad) jp xor cmpsb sbb repnz xlat push mov lea aad out fcmove (bad) cmc (bad) (bad) (bad) (bad) mov mov lods test cld mov mov push cmc clc mov cld repz push or (bad) (bad) (bad) dec cltd add inc mov pusha xor scas mov loopne cli mov or jmp scas (bad) (bad) (bad) call xchg sub pop insb lahf in xor lahf enter stos dec in repz or fs pushl inc call fs jg xchg ret rol call rcl lcall xchg or cmp adc xchg mov xor push sbb adc dec sahf cli (bad) (bad) pushl mov insb sarb shrb cmp imul add inc xchg mov clc (bad) (bad) out lcall add or hlt ds pop hlt jg jno cmp (bad) (bad) ljmp pop movsl iret and movsb les pop jle into lock cmpsl cmp (bad) (bad) (bad) dec movsl aaa arpl shl mov outsl mov enter ret and push xor (bad) incl shrl arpl mov pop add decl sub and decl icebp fistpl sub cli or outsl loopne je aaa pop (bad) (bad) (bad) decl mov cmp or or gs sti fdivrp lcall push xchg sub outsb sbb mov outsb cwtl fwait cmp test add jecxz stc (bad) mov loop (bad) int3 test sbb or sarb jae xchg fisubl xor (bad) (bad) incl and cmp and and cwtl xor (bad) inc xor call (bad) mov or cmp add add push (bad) das mov lret push mov jl dec cmp cmpsl adc (bad) (bad) (bad) decl cld sbb pop add cmpb mov roll sub (bad) jg jmp lock (bad) push jle jge push jns dec (bad) (bad) (bad) call or (bad) imul testl pushf sbb leave fcomi jnp xor and int3 dec cmp outsl adc sub push sub cmp daa call cmp in insl idiv and jge lahf cmpsb ljmp xor xor mov push sahf and adc pusha aas dec call (bad) (bad) jmp loopne fsubrl int dec and push cwtl cwtl outsl push test mov (bad) (bad) (bad) incl sub int add inc or and mov cmp out mov mov lret ret (bad) (bad) jg clc movsb flds (bad) xor jns sbb mov cmp clc mov lahf add leave out shr (bad) (bad) (bad) (bad) ds adc fs rcll call mov mul or jg lods mov jo (bad) (bad) (bad) dec imul in mov pop mov lcall pop xchg push xchg rep (bad) ret mov inc push out mov dec mov clc xchg xchg pop mov pop hlt (bad) (bad) lret fstp es cmp adc push adc xchg fcoms (bad) call mov inc hlt pop cmpsl jp mov mov dec cmc adc in lea mov push sub ljmp cli bound inc rcll cmpsl push add mov adc dec (bad) dec jno popa sbbl std sub adc mov repnz mov stos stos je nop dec in dec inc gs xor nop ret repnz or daa into es fadd inc pop lods lods mov in lock imul lods (bad) (bad) (bad) (bad) fmuls adc in dec clc mov mov mov aam ljmp repnz clc ja or mov sub mov or mov jmp jnp (bad) pop sbb sub stos adc xchg xchg repz pop sbb push stc push loope (bad) call push push dec movsl push (bad) mov cmp or lods (bad) (bad) jmp jl inc rcrl repnz mov lea ljmp jp mov lea je shr push faddl (bad) jne mov ljmp shr nop pop lods adc mov push gs mov loopne test lret stc fwait and je fadd inc push adc mov pushl shl enter or leave in mov or pop addr16 (bad) (bad) incl jno sub or add pop lret dec mov push add (bad) (bad) jmp xchg mov pusha jne ret cmp stc jae icebp (bad) inc push dec dec pmaddwd pop and push xor jecxz movsl test data16 pop cmpsb lock (bad) jl fwait dec loop dec out mov rcrb sbb popa jmp fdivrp (bad) call mov ljmp jae cmpsb dec adc adc pop jg and cmp ds pop sub adc (bad) fldl aaa outsl mov xchg sub aaa adc (bad) jmp cmp leave pop adc and mov cli or mov (bad) mov mov and (bad) popf cwtl xchg xchg and (bad) call rorb outsl (bad) cmp cmp mov test lods cmpsl arpl fstps and fldl xchg ja (bad) jmp add or mov sahf negb pusha xorl cwtl pop dec mov dec mov daa imul pop add mov pop (bad) jmp (bad) jmp push rolb aas xor pop jb icebp mov pop dec add push fwait clc (bad) ja repnz loope,pt into mov pop lods test ja jmp das mov mov movsb jp fwait js mov rcrl mov decl pushf cmp icebp es stc xchg (bad) call mov pop cmp jb xchg shl pop sbb shrb lock and ja jb or adc cld (bad) fistpll push pop push and mov jo adc ds call inc pusha dec xor test and lock decl das pop add adc ss mov (bad) (bad) (bad) (bad) jle sbb sub sub inc mov and fistpl jnp (bad) (bad) call adc inc into stos popa dec xchg adc cmp adc pusha out mov insl xor adc push adc add xchg popf push inc mov (bad) jg jg into pop cmp je mov adc (bad) lcall cmpsl aad addr16 loop call jno hlt pusha scas inc xchg (bad) sahf (bad) jp push (bad) pop xlat mov (bad) ljmp pop jo jge push (bad) jecxz stos in mov iret push jge (bad) (bad) sbb subl nop jne jns push cmp (bad) call loopne push enter mov inc adc es (bad) (bad) incl aas mov sbb cmp add cld jnp dec dec pop jp stos mov (bad) (bad) (bad) (bad) cli and mov mov mov lds scas jns sub in xor xlat sar (bad) cmp xchg sub jo xor clc jns test inc mov xchg test pushl push sbb scas mov cmpsb xchg in popf jecxz adc ss (bad) (bad) call xchg jecxz cmp repnz mov cmp jecxz sbb into adc adc cld (bad) ficomp xchg inc sti data16 std mov out cld pop imul xchg xchg pop mov (bad) lcall pop scas fldl or and sub or adc inc or jl sbb (bad) jg jmp je in inc stos mov dec mov mov inc outsl jns pusha xlat dec aam (bad) (bad) pushl adc adc pop pop pop (bad) dec aaa roll xchg pop adc cmpl scas aaa dec jae (bad) (bad) (bad) jnp fwait cmp or adc xchg pushf fcomi push lahf int mov addr16 pop mov sub (bad) call popf iret add sbb cltd (bad) das lods jns mov ljmp cmc mov out mov cmc hlt mov (bad) (bad) call sbb test rclb jle jae clc lret ja push mov add (bad) (bad) (bad) call test arpl ret mov sub pop sub lahf lods in jg fdivrs js aas pop sarl cmp out jecxz sbb lahf or mov ret or (bad) (bad) decl and sbb shrl adc xchg xchg inc push push outsl rclb xchg loop fs sbb int3 rol stos sti inc outsb iret (bad) (bad) mov test imull (bad) push push sbb ror es (bad) (bad) (bad) incl add fisttp popf mov and iret test and dec add (bad) jmp cs pop pop jae xchg ljmp repz js xor (bad) (bad) incl inc inc mov loope sahf scas and mov add pop (bad) (bad) (bad) (bad) fildll mov scas fwait lea insl cwtd xchg or mov cli ljmp (bad) (bad) (bad) (bad) cmp add mov adc mov mov xlat and pop (bad) scas pop movsl jle (bad) (bad) (bad) jmp in sbb (bad) icebp add cmpsl pop sub lcall pop xor pushl mov mov push mov or mov clc loope sahf (bad) cld loope incl push jb xlat add cs pop in fwait or icebp int pop inc cmp es (bad) (bad) (bad) incl test lods shrl sub fs ret je cmp jne in sbb mov xchg cli or mov stc clc pop adc test leave dec out mov scas jae (bad) imulb ljmp loopne sar push fidivr flds pop mov (bad) (bad) (bad) lcall ffreep sub pushf mov mov addr16 jb mov adc sahf cmp (bad) (bad) (bad) jle in stos dec xchg sub dec sub popa js mov xchg dec cltd nop fcoml push data16 enter inc movsl cmp test jg (bad) mov inc js outsl sbb sar sbb cmp dec push icebp jo cmpsl pushl in mov xchg xchg mov rorl fsubrl in adc (bad) sub jnp aas rol iret jge stos cmp mov cltd sahf push inc pop popf and jmp sahf jmp (bad) jp imul fcoms arpl push and cmpsb and (bad) jg ds loope cmp fildl ljmp test (bad) (bad) lcall stos imul in add iret hlt cmp cmp repnz xor or mov in adc in pop daa in jmp or mov push cld inc cmp push sub mov mov (bad) pop jne jb push lcall inc jle sub fwait sub imul and mov (bad) (bad) incl mov js xchg inc inc movsb cld pop cmp insb movsl push add icebp out or push (bad) (bad) (bad) decl or fsubs jbe sub hlt push shrl dec lret inc push daa sub (bad) fcomip sub jp loopne lret push aaa fdiv fsubs out jge popf cwtl je mov (bad) ljmp test sarl nop inc add roll repnz js mov pop or out mov (bad) (bad) aas ds jmp pop dec addl add mov or jp add mov mov sub (bad) (bad) (bad) (bad) fidiv outsb jmp dec cli loop mov jmp and aad adc stos pop dec jo xor sub (bad) (bad) cmp dec fsubs mov lods stc (bad) out imul and and cmpsb lds call mov lcall repz mov inc mov (bad) cmp sub dec jne jle cmp loop mov jbe jg xchg pop fndisi(8087 (bad) (bad) (bad) incl in mov cmp es push or or fdivp (bad) std jg (bad) incl xchg (bad) fbstp mov lret or (bad) ljmp cli ljmp imul in mov and (bad) sub (bad) out cli jmp clc mov (bad) imul xchg int stc lock jno or repnz (bad) (bad) (bad) flds in sbb xchg mov icebp jb fwait add mov add adc int3 (bad) ljmp and xor adc sub scas inc jp xor les icebp (bad) decl push aaa pop cli movsb and adc call insb pop (bad) (bad) hlt insb pushf repnz pushf bound subl (bad) inc xor lods mov cld out add add in sbb xor aas js inc adc push or test pop int xchg cmp les push sbb cwtl dec cld jle rcl cli inc lahf popf inc pushf push movsl fisttpl sub jg (bad) call lret call rcll (bad) push aas fdivl ljmp gs ljmp sar pusha xor fdiv divl pop dec int3 cltd aaa mov jb dec lock mov sbb vmaxps add inc lods cmpsl jae (bad) (bad) (bad) ljmp mov xor mov inc rorl (bad) lahf mov js inc (bad) hlt (bad) ljmp aaa inc cmp (bad) mov lods jbe sub jmp cmpsb inc je xchg (bad) hlt mov fidiv (bad) call packuswb mov cmpsb addb pop in fs adc xlat cmp rcrl (bad) (bad) (bad) call push or mov push (bad) mov faddl test mov sbb push mov (bad) lcall in lcall pop (bad) cmpsb mov push (bad) pusha sub testl test (bad) (bad) call jmp mov loop daa pop push jmp test adc das mov (bad) push lahf int3 add or scas add leave mov pop sbb incl (bad) incl dec fsubl icebp push xchg shll fcomp push pop lea sub std pop inc (bad) nop lcall xchg and (bad) jmp out xor ffree insl xchg xor pop adc rclb (bad) lcall loope out fstpl icebp mov mov int pusha inc out jge xor dec (bad) ljmp scas (bad) pop negl mov push or decl sub out (bad) jns add sub cwtl xchg sarl out jae jnp adc or jg (bad) and subl jmp aam inc (bad) (bad) jne pop insl cwtl in dec repz (bad) (bad) (bad) decl shlb test mov std cmp test mov test (bad) movsl out sub (bad) (bad) (bad) mov jns daa cmp push int or jmp in sti gs add cmpsl xor (bad) (bad) (bad) sti xlat cmp push dec mov adc test cmp or (bad) (bad) (bad) (bad) pushl adc cmpsb sbb xor xchg and or out icebp sub jbe push stc jecxz repz mov (bad) lcall stos insb xchg int (bad) mov pop mov test add xchg mov adc xor loop aas push mov (bad) jle sub cmp pop mov adc xchg mov and pop out cmpb push sti pusha ret jge cld push mov repz or pop int lahf add lcall (bad) (bad) jmp icebp lock mov lret and insl dec pop mov cld mov (bad) mov xor dec mov lods and arpl or xchg scas sub int3 fisubl out cli ljmp sbb rcrl movsb mov dec dec in pop pop daa imul lcall in adc cmp push test pusha fmul (bad) stos out (bad) (bad) (bad) decl out iret in xchg mov cmp clc cmp mov pop imul loopne or (bad) test scas cmp fcoms mov push and loopne push sahf mov xchg (bad) (bad) (bad) jmp sbb das sbb mov rol test mov faddl fstpt and xchg xchg fbstp (bad) subl mov fstpl xorb data16 and jecxz fist pop jge int3 jecxz popa mov mov loopne test daa lock (bad) jbe fsts movsl fwait fs lea cwtl daa pop mov jmp lods mov int xchg sti popa into push dec push js pop (bad) mov insl sbb xor jne add fwait bound (bad) incl lods lret shrb xchg push inc (bad) xor push icebp sbb test ds pop cmc jmp inc xchg sub scas sbb mov jne jecxz adc lcall mov stos pop lea std or mov ds pop xchg int3 adc ss xchg push ds pop out inc sbb sar push cld and out fdivr out mov mov insb aad xlat pop fwait in pop rcrb (bad) (bad) (bad) (bad) mov sub sbb mov lcall ds push adc pusha xchg (bad) (bad) pushl jge mov xor test jne cmp pop shrd loopne xchg push stc std (bad) pop jb andps in xchg ds cmp add xchg daa ja jno mov mulb inc aam sub (bad) (bad) cmp mulb push jae in mov subl (bad) (bad) incl mov mov jmp mov mov mov dec xlat pop jg jae mov dec std (bad) inc in push sub imul mov and mov (bad) jg mov pushf int3 cmpsb mov cltd cmp jle fmulp pop dec xchg (bad) pushl add pop scas in in out mov mov jg jnp (bad) (bad) (bad) lcall and pop or xlat dec mov lea and and es int les jbe mov sahf mov decl jae xchg aad push mov pop push push mov pushl ret lret adc or add xchg mov xor fstps cmp scas pop loopne lret loop,pt pop adcb sub out mov (bad) (bad) (bad) mov mov or mov insl or sub pop clc mov add (bad) (bad) (bad) dec xor pop adc sub mov add and rclb aam lods inc push cld (bad) call jmp imul push mov xlat and pop (bad) (bad) (bad) incl cwtl es shr imul in mov (bad) mov cmp xchg addr16 das scas in mov xor call clc adc mov jle cmpsb sahf mov jbe lock (bad) (bad) ljmp lcall stos aad sbb iret push (bad) out sub pop lret fisttpll (bad) (bad) decl loopne pop jnp in imul ja add lret out mov data16 cmpl (bad) ljmp insb into cmpsb push and lret pusha (bad) push push cmp mov (bad) (bad) jmp pop dec pushf lret jnp test jae aas ss sbb jo in add jle inc sub cld outsl and aam incl dec or data16 cmpsb xlat stos sub hlt (bad) (bad) fdivl or out push in xchg mov mov lock jp (bad) incl fwait mov in stos jle scas nop jle decb repz lock insl data16 dec push cmp mov loop or adc repnz sbb push sbb ds das jo fcmovne or arpl mov mov and mov mov lods push pop (bad) (bad) mov andl out cmp jle sbb cmc cmp inc adc (bad) (bad) dec test es nop ret mov push and (bad) fisttpl mov or pushl jmp push call gs and sub jne (bad) (bad) (bad) incl insl mov sub out inc ss pop jl mov (bad) dec addb jl fcomip (bad) jmp mov mov jmp ret fist in push mov xor (bad) (bad) ljmp jnp cwtl shrl inc nop mov mov and cmpsb loop call (bad) jmp fidivrl (bad) sub imul imul push rorb mov jo insl sbb (bad) (bad) (bad) (bad) mov fnstenv jnp cmpsl dec (bad) pop dec iret outsb mov xor pop jns adc bound decl pusha xchg jg xor test pop xchg out adc sarl mov inc inc test fdivl lcall gs (bad) adc cwtl adc cmp shrb jnp mov outsl xor fwait jle mov arpl cmp lds adc mov push (bad) (bad) (bad) incl mov scas ljmp mov lds jbe inc sbb (bad) (bad) incl inc movl test loope sub (bad) (bad) push add cwtl push aas data16 push mov sub rcll frstor adc xor enter lcall out fbld sub inc int3 jmp inc sbb shrl (bad) (bad) decl std test inc lea imul and outsl push dec rclb idivb mov movsl mov or xchg ds pop mov (bad) (bad) call pop xchg inc jecxz pusha fldl outsb mov xlat and pop (bad) cmp mov leave jns (bad) (bad) ljmp inc insl push jno xor pop nop push ret je or mov pop jmp js jg mov inc (bad) (bad) dec pop add jbe mov aad punpckhdq iret pushf mov test sub (bad) (bad) (bad) push xor dec enter in cmp sbb mov or sub push cmpsb pop data16 jl cmpsb (bad) (bad) pushl mov lods popa mov jge daa movsl dec xor jl ds (bad) (bad) incl rcr push movsb out outsb or and jnp or jnp cli cmpsl and ljmp lret arpl (bad) in adc push push pushf push (bad) lds mov lcall ds push (bad) out add xchg sub push insb lcall (bad) (bad) (bad) ljmp inc xchg push fisub adc push cmp cmp sbb jg cmp xchg lcall call pop push and popa cmp jns fist or xchg cmp (bad) (bad) (bad) incl mov push cs xor push test sbb xchg jle movsb cmp (bad) push jno mov pop cmpsb mov xor jnp test and (bad) mov mov popa (bad) (bad) mov pop xor mov cmc fisub sbb xor sub cld mov call cmpl gs cmp (bad) lret push xor movsl cmpsl scas and jl sub xchg jge mov pop sbb and decl pop arpl mov (bad) lcall sbb popa fldcw sti mov (bad) ret test push push xchg test mov and je (bad) (bad) (bad) decl dec sbb dec dec pop insl cld or sbb sub test test (bad) adc lret (bad) call imul sub xchg cwtl cli (bad) outsl mov cmp inc or cld popf cmp (bad) inc movsb xchg data16 sbb roll lcall out or (bad) fimul dec clc push lea push push popf mov ds (bad) (bad) pushl jo push jbe push hlt and pxor repz mov in add (bad) (bad) out les inc insl mov (bad) xchg cmp jg sbb adc jno stos (bad) (bad) (bad) pushl cmp out scas lret fwait lock shrl mov mov xchg push (bad) pushf push cmp fstpl pushf fldl (bad) ljmp mov cmc aad (bad) push cmc xor fcomip (bad) mov or nop stos mov (bad) pop mov cmp incl mov xor lods loop lea cmp xor ret adc insl movsb aaa mov fcomip (bad) incl sub cmp jmp pop jecxz or out loopne insb push pushf lahf jo jno (bad) (bad) pushl add repnz (bad) (bad) icebp repnz mov jg ss scas jg (bad) fwait xchg mov pop icebp push dec lret ret adc dec mov aaa fbstp jge xor (bad) (bad) ljmp or jae and or outsl adc or nop scas int3 jne (bad) (bad) (bad) (bad) fisubr mov add inc cli xchg ret mov stos test aad je nop and ficoml lcall mov fcomps lcall dec test les push test in hlt (bad) (bad) pushl in jecxz in ret jo sub sub bound fs (bad) jg ds lods aam std jg rolb rcll sub mov stos (bad) jmp push insl inc pusha pop (bad) sub lret dec ljmp iret xor pushl stc dec stc xor (bad) sub roll lahf sbb mov (bad) (bad) jl inc addr16 jne pop data16 je loopne xchg aad and cmc lods shr (bad) incl aad loop dec movaps in jo lret pop fmul add mov (bad) (bad) (bad) mov clc cmpsl adc push mov movsl cld mov jg and dec imul incl xor (bad) stos add (bad) pushw pop mov or mov int pop test dec popa (bad) out xor sub (bad) add int3 (bad) (bad) (bad) jmp call push push stos fcmovnu jg sarb in mov gs xor inc push sbb sbb xor (bad) ljmp mov cmp mov adc movsb popf mov call sub (bad) (bad) ljmp ret fisubr sbb pop popf sahf mov hlt in add sbb out (bad) (bad) pushl push inc pusha mov rol sub rcrl mov pop (bad) (bad) (bad) incl sti xchg sbb call test sar jnp imul ja add jmp cmc repz dec adc ds sub pop add pop mov jb pusha in sub insb loopne sbb (bad) clc test mov push dec jecxz (bad) cmc lcall imul mov cmp sqrtps sbb cmp movb int3 stos sbb lods jg pop mov pop cmp cmc xchg xor inc nop aas or sub scas and dec ds cli jg out adc sbb mov cmp (bad) (bad) (bad) pushl fwait sub xor cmp imul mov xchg jmp pop (bad) fidivr xor xchg mov dec jmp (bad) incl out adc push insb (bad) dec sbb pop sahf lret mov rcrl sub jg (bad) decl dec fwait sbb xchg adc xrstor xchg adc (bad) decl xchg in (bad) outsb addr16 std mov jae mov add (bad) pusha popa inc mov sub scas ds nop inc loop pushl (bad) xchg gs jg popa iret adc (bad) ljmp push inc mov fildll mov dec jne push (bad) incl ds lock shrl xchg out ror push (bad) (bad) (bad) (bad) in loopne dec and mov mov sub push and insb or in cmp inc (bad) (bad) (bad) incl jno jle mov lods in pushf lods fisubl fnop fildl jb in (bad) push lods scas test aam (bad) (bad) decl sbb fs test pop mov pop leave push mov lea add imul rolb (bad) scas insb or test divb sar sbb pop cmp sub mov fsubr xchg andb stos repz (bad) (bad) ljmp jno call and push add (bad) push mov mov test sub (bad) mov test cmp int es dec add fsubs add xchg push sub pushf push sbb mov ficoml stos add (bad) aas or mov cmp sub (bad) (bad) call js clc inc add adc xchg (bad) dec imul fwait pop cmpsl mov jnp bound aas imul icebp inc push mov clc mov (bad) dec pop and jg sub imul mov xor (bad) mov pop out mov negb js push int scas xchg mov pop icebp adc sbb add cmc dec inc sar (bad) (bad) incl mov cmpsl push cltd push inc add mov cmovs cmp xor pushf imul call std call sub das and jecxz ret pop pusha lds and das lcall adc lret (bad) icebp fstl clc (bad) (bad) incl jge std cmp push das dec pop or sub pop outsb dec in (bad) decl ds test cmp leave pop add mov movl pusha stos cld pop pop pop pop mov (bad) fsub outsl popf jae (bad) (bad) incl nop fldl push inc jae adc cmp xchg dec (bad) (bad) shll ljmp cwtl cwtl (bad) xor aad fdivs aaa jg adc arpl hlt addb (bad) pushl ret sub inc xor sub lods cmp in icebp or xor xchg int xor (bad) jmp dec inc mov adc iret loope add mov xor inc mov dec fbstp dec mov fs pop mov cld cmp scas jo mov loop cmp push fidiv ljmp es out sbb pop insl (bad) push ret push sub xor xlat (bad) ljmp int3 add pop dec fimul push scas fucom jp fldenv pusha add xor (bad) jg rcr aas inc nop push addr16 sbb lods and call sahf push mov cmp repnz rcl pop test pop lret lods sub xlat cmp lcall into out out stc xor js sbb jmp cmp xor (bad) (bad) (bad) (bad) decb into add and dec jae test mov cmc je cmp fidivrl sahf dec ja popa or leave das xor ret push xor imul xor lea sbb sub fs (bad) out stc scas rcr hlt (bad) (bad) stos jb enter push (bad) jmp sbb sub (bad) mov mov cltd and (bad) ss lods mov fs mov lods (bad) fucompp int3 mov add pop in sub in popf hlt xor inc out inc mov ja lcall sbb mov or or push scas aad sub pushl lcall (bad) dec ret sub adc add push mov lods xchg sbb aam (bad) (bad) (bad) incl cltd mov or push and bound cmc lea push (bad) mov sbb (bad) push jne imul pop push dec inc mov pop cmp nop (bad) (bad) (bad) pushl in mov int jae mov jle sub jg inc xchg (bad) pop sbb ljmp js jnp pop inc push inc fadd aaa test xchg data16 mov pop call fdiv inc jnp test inc or insb mov leave (bad) (bad) (bad) incl sahf lods mov mov fiadd xchg inc inc dec push dec or or decl scas clc lods add iret inc inc xorl sub xchg (bad) (bad) (bad) inc push div arpl outsb mov cld repnz xor (bad) aas (bad) and lret xchg (bad) es push cs push gs mov inc decl insb std push and stos aaa sahf mov pusha jl insb pop (bad) (bad) (bad) call mov cltd inc dec pusha and (bad) mov push push fmull adcl (bad) shrb sbb and jmp and rolb into imul (bad) jg jmp xchg scas test (bad) into aas xor lcall loopne (bad) pushl sbb cwtl out clc dec ja mov dec (bad) pushl push data16 mov (bad) mov mov and in ds (bad) (bad) (bad) ljmp xor jo sahf cmpsl jge adc mov sti ss fidiv test xchg add (bad) (bad) (bad) (bad) fcompl adc jnp add rcrl in test xchg add sub jl aas (bad) (bad) (bad) lcall arpl rep fsubp sti jp arpl outsb jl xchg jno call lcall iret ficoml push stos stos sub lcall (bad) dec shrl (bad) (bad) (bad) lcall mov jg cli push test mov lahf push (bad) fnsave mov inc sub decl pop int3 inc jp mov fs pushf (bad) (bad) (bad) mov cmp mov add sbb (bad) div or in and dec int je cmp rcrl adc int3 sub and push ljmp adc add jbe fdivs movsb jl (bad) pushl lret in into sbb or rolb mov xchg or and ss int inc adc pop ds mov (bad) (bad) incl pushf sbb arpl roll mov jp mov out sub mov mov lcall pop pop mov push cmp (bad) (bad) out xchg std imull adc sbb shr dec add jp and (bad) (bad) mov cmc ja mov cmp movsb shrl test mov dec lret ljmp loope cwtl popf pop xchg xor bound xchg lods push push pop cmp push fcmovbe dec stos inc (bad) (bad) (bad) mov (bad) mov jmp push adc jb stos ret rorb dec pop ljmp xchg and int add adc es cmp repz inc pop adc (bad) fbld push lods fstl pop dec lods clc fidivr mov (bad) (bad) out std mov push scas cmp and sub stos or lods cli arpl dec jle popf in (bad) (bad) (bad) call pop push mov pop xor fwait cmpl lret xor or adc (bad) (bad) dec enter mov (bad) sbb push sbb mov mov jnp cltd aad (bad) (bad) (bad) lcall push sub mov or mov add ds jae pop inc loopne push sub decl mov jle int or sub sbb andl aam push xchg jmp (bad) (bad) (bad) inc xchg popa pusha mov push sbb and mov les (bad) push enter call scas clc dec or (bad) repnz mov push lods xchg pop mov push inc lcall (bad) (bad) call movsl cmp sub cmpsl insl or dec je jge sbb iret ret (bad) (bad) fist inc gs adc xor lret aas test adc stos call int3 (bad) (bad) (bad) push pop ljmp lock jge mov mov xchg pusha sub into push mov cmpsb add cmp (bad) std sbbl mov (bad) decl pushf cltd mov push and sub in out or mov aam add fisubrl ss stos or mov sub mov dec jo jle or int3 subb add push ja add jmp push mov imul mov test xchg jno xchg fwait mov (bad) xchg mov xor (bad) or fnstenv mov pop pushf aam jne inc imul mov mov aaa jb stos movsl loope bound sbb in test call mov (bad) (bad) (bad) mov out hlt (bad) out lods inc or test pop jns lcall adc (bad) (bad) (bad) (bad) jl or mov stos mov adc pop test cmovp adc ret xor inc mov jg or xchg adc push loop inc (bad) push push jl scas pop sti xchg incb bound inc adc hlt push cltd cmp sbb mov push or insl mov out loope (bad) call repnz xchg aam push mov (bad) fisttp add sub sarb mov icebp test imul mov sub (bad) daa repz and repz xor loop decl lock orl mov add sbb (bad) adc dec movsl add faddl add mov push mov (bad) (bad) mov je push lock test (bad) (bad) pushl mov dec shrl out sar ljmp push idiv lret stos xor (bad) (bad) (bad) inc xchg sub negl bound cmc xchg or inc sti in mov pushf pop mov push into jmp mov xor xor mov or dec inc flds rclb mov xchg (bad) (bad) (bad) mov lcall fnsave repnz icebp cli enter mov inc xor ljmp lods dec jg aam call cld mov dec inc push mov sarb pop stc (bad) (bad) (bad) mov (bad) pop fdivs adc mov dec sbbl cmp mov fs jge sub sbb fcomip mov push mov lods repz or and sub test add xor dec lahf int les incl push and xchg sahf inc lods pop rcll (bad) xor (bad) (bad) call ret jnp xchg pop mov pop xor mov mov jmp jp mov (bad) jg gs lahf jbe ja inc inc cltd aas imul in cld mov (bad) (bad) (bad) decl (bad) push add xor jbe out js rcrl or cmpsl (bad) push jp sub jg and adc pop cmpsl ss in (bad) (bad) (bad) incl popa mov cltd mov stc outsb iret push iret adc fs mov xchg fisttpll fstps (bad) (bad) jmp dec sbb push ljmp test xor outsl mov adc jns jp sbb mov jg incl and insw xchg or pop adc (bad) (bad) (bad) push frstpm(287 fdivrs and call dec mov jl xchg push (bad) adc in dec xor (bad) (bad) (bad) incl enter mov out mov stos xor aaa outsl push add inc (bad) (bad) (bad) pushl lcall aaa lea push xchg mov sbb cmpsl nop mov pop push std add push mov push jae call call jae pop cltd (bad) shl dec inc sub jae into pop ret pop ret daa mov (bad) ljmp lods je push mov inc std les xchg mov out aaa jo inc adc pop hlt stos inc aam add stc and icebp lock in in pop jg,pt stos icebp call (bad) (bad) (bad) mov mov ret sti les sub pop aas push push addr16 mov popf pop int aaa or jmp (bad) (bad) ljmp rcrl sti addr16 out push xlat insl xchg (bad) in inc fcomps and (bad) jno fildll das inc daa lods mov mov dec (bad) (bad) (bad) call mov add in mov das jmp je add mov jp leave scas dec add fidivrl mov clc sahf mov lods inc jmp cmp loope jl lret sub pushl mov dec sub rcrb iret push lahf fisttp mov nop lahf fs ljmp mov dec mov div (bad) (bad) (bad) mov bound cmp jmp mov out and (bad) xor push cmpsb pop pusha sbb rorl fdivr (bad) mov not cmp or jl push ret fucomip jae add mov add inc js lcall jnp push out pop (bad) (bad) (bad) inc pop cwtl test push pop cmp fistpl fs or add les (bad) decl pop loopne movsl pop xor js cltd lcall pop mov insl jg lods (bad) mov je jmp ds imul (bad) (bad) pushl outsb mov std pop fimull shlb loop pop pop jg arpl pop mov (bad) ljmp iret mov cmpsb sbb add scas mov insb cmpl pushf ror (bad) (bad) (bad) (bad) mov jg cwtl cmp cmpsl mov push aas mov ds adc out (bad) (bad) (bad) pushl push jo cmp push pop orl fsub (bad) lcall add mov mov add mov adc (bad) jg pop int aaa push (bad) adc pop dec xor mov lret and pop jle xchg lock hlt cmp xchg aad (bad) mov inc aam push jo sub cld push mov mov or sbb adc (bad) mov ja test adc xchg ss icebp xchg int cmpsl (bad) ljmp gs cmp fimull (bad) jnp cmp inc jmp jg (bad) jmp pop out mov sbb sub out lods or in sahf pop jl (bad) (bad) out fiadd (bad) lods cmp or rcll sahf fisubrl daa lahf push popf pushl incl sub inc and inc sub sub cmp rcrb (bad) (bad) (bad) call adc pushf sub mov add sbb push adc mov das jmp (bad) pushl push test xor sbb adc push int inc jle and or push mov das sbb aaa adc loopne mov mov int dec mov (bad) (bad) cmp mov sub (bad) ret cmpsb stc jnp inc lea insb mov (bad) (bad) lcall jmp jmp cli cwtl stc sbb pop xchg sbb fwait pop int3 test xchg xchg loope fdivrp (bad) (bad) incl mov pop pop test aas mov lcall sub ret inc int jmp push cmp popa push xchg mov je loopne (bad) decl jnp out sti pusha mov fldcw and push xchg jne jns (bad) call je sbb dec mov add or outsl out (bad) out xchg cmp aas and (bad) (bad) mov mov sbb xor mov jmp sub inc xor pop pusha adc push loope les xor sbb or incl lret fadd mov stos or mov fwait in cmp outsl xchg mov sbb cmp popf sub jns out lock cmc (bad) fdiv and jne mov inc jbe mov jbe scas cmpsl (bad) (bad) ljmp fadds dec nop repnz (bad) cmpsl inc sub jae fnstsw insl dec sahf xchg (bad) (bad) cmp int or rcl fisttpl dec ficompl ret add adc and or lea mov xchg fadds lahf pop push mov mov pusha mov (bad) (bad) lcall pop bound fwait stos cmp push outsb add jbe mov (bad) lock (bad) fildl loop jno test sbb sar pop iret xor (bad) fbstp movsl dec lret push aam xor clc (bad) (bad) out adcb or fcoms (bad) dec add (bad) ljmp aaa inc add mov ljmp xchg call ffree (bad) pushl std mov xchg idiv pop and (bad) jl lret adc rcl xlat movsb roll add push jg popa cld sahf fs xchg imul (bad) lcall cli add and sbb adc pop rolb hlt loope dec jp sahf sub imul xor (bad) (bad) pushl addr16 push lea and aaa mov bound dec push (bad) pop push (bad) fbstp jl inc les stc rol sbb pop lret xchg (bad) call std cltd mov add call jne mov jle ret mov adc (bad) (bad) (bad) jnp mov lods mov pop test pop mov rcl mov addl in xor (bad) mov jb sub leave repz div shl dec imulb sbb insb pushf mov ljmp sbb xchg shll sub (bad) jbe ret xchg call cld test add les mov mov xlat xchg pusha mov xor mov lcall and cmp mov (bad) (bad) lcall xor adc pop and mov xchg movb repz mov cmpsl mov incl jl idivb pop iret inc xorb loopne (bad) (bad) (bad) incl decb cmp mov imul pop mov cmp push lret (bad) (bad) cmp sub xor test mov mov inc inc mov arpl jg xchg rorl inc (bad) scas int mov sbb (bad) jmp mov rclb push add mov inc push push mov push and (bad) out lods mov xor dec out lods xchg loop mov jg cli out push lds (bad) (bad) call add int3 scas pop cli pop hlt sbb mov mov xor movsb cmp rol dec cmp (bad) (bad) (bad) fadd sti xor dec (bad) cmp xor and push xlat (bad) addr16 lret gs adc adc cli je icebp (bad) (bad) (bad) ljmp jae xor fmul and pop lahf pop and cmp sub sbb xchg push popa ficoml (bad) (bad) (bad) cmp bnd xor loop jns ret nop (bad) mov mov mov xchg (bad) jmp pop or cli or mov mov xchg mov (bad) (bad) incl test out and sub dec xlat xchg jno es rcr pop sbb int or lock fwait sub jle (bad) (bad) (bad) pushl (bad) jmp mov jo xor mov inc iret out jg fucompp (bad) lret ljmp cli sti cmp leave rclb loop cs inc out aam (bad) (bad) call jae int3 outsb push aaa add es mov jle gs (bad) (bad) (bad) jmp add in rorb stc mov pop and (bad) push sub pop sarb push push ds sub lds sub imul addl andb ss mov add loope and (bad) (bad) ljmp jno mov xchg pop sub xchg or mov sub lret (bad) mov fs and cmpsl mov test mov rclb movsl scas sub xchg add (bad) decl xchg and shrl sbb xlat and pop (bad) (bad) pushl mov push (bad) js push lcall mov shr sbb ss (bad) ja aam mov xlat (bad) call or test (bad) call loope xchg sub orb sbb pop xchg push ljmp cltd sbb inc popa mov lret push push fistpll (bad) (bad) mov pop addr16 (bad) or loopne sbb mov pop and les out pop out inc jo xlat xlat push in dec lea (bad) (bad) (bad) fildll cmpsl popf mov repz lea mov fcompl inc adc ret ljmp mov iret and push popf scas js xchg jp stc pop pushf sbb jg push (bad) (bad) (bad) pushl cwtl out sti push test or nop lds movnti xchg add rorl jmp jl call insb mov addb (bad) (bad) call nop xchg cld fstps (bad) lea test loope jne add lahf dec (bad) (bad) (bad) (bad) fildl inc inc push sahf inc int3 das lret les inc and test inc into lods sbb jl (bad) cmp test jae cwtl popf xorl mov jnp jnp addr16 jle (bad) (bad) incl (bad) loop sti (bad) jge sub lcall test movsb test mov cmpsb (bad) (bad) ljmp xlat push fiaddl sub cmc (bad) (bad) jmp mov dec mov (bad) (bad) decl inc jns push lcall xchg pusha sbb dec xor pop fucomip and and (bad) (bad) ljmp insb movsl pop cmp psubusw push sbb stos shll adc cld (bad) (bad) (bad) mov jo push ss lods int mov bound cltd jb mov sbb stos push and pushl mov xchg xchg lret push mov stos ss call movsl push (bad) lret xor call ret lretw jecxz sbb mov lods scas cmpsl in add mov insl jl mov sar pop (bad) (bad) (bad) (bad) mov xchg imul sub sti inc repz std fwait push jne out cli ret mov (bad) (bad) decl inc jnp mov in push mov push shrl mov dec lret xor scas inc mov (bad) (bad) inc xchg mov or cmp call add in rcll scas pop and cmp sub fildll adc and xor iret adc (bad) ljmp mov cmpsl lds mov aas mov lret fdivr lret fcompl push lods loopne sar pop icebp fcoml jl pop fwait xchg aam ss xchg mov ret icebp dec xor mov mov incl imul sub cmc xchg mov test in cli inc lcall (bad) decl jge gs loop (bad) cld das outsl aad rcrl pop sub inc xlat jo ljmp mov out jp or hlt inc mov adc sti nop or add fcomip mov fisub pushf push (bad) and aaa xchg sub out mov (bad) (bad) (bad) (bad) call out cmpsl push call mov inc loope add inc inc cmpsb push (bad) (bad) jmp aam imul pop test mov or imul fimul push out (bad) (bad) (bad) incl sbb ljmp push push andb xchg (bad) (bad) (bad) decl pop mov xchg dec add out jne mov cltd mov jbe mov (bad) decl jg xchg jmp bound arpl es lret mov (bad) (bad) or enter (bad) mov inc lret js lahf push lret or mov shlb (bad) ljmp in test faddl insb inc mov xchg inc (bad) xchg cmp lea cmpsl jg and bound scas cmpsl in mov movaps (bad) (bad) decl jle sub outsl inc mov divl ret and mov outsb lcall adc pop aad (bad) mov adc stos add (bad) (bad) (bad) in (bad) sub xor bnd mov mov push orl and ljmp sub (bad) inc insb iret orb outsl mov scas (bad) xchg push ja (bad) push adc (bad) jbe mov jl or clc iret fs repnz (bad) pushl sub jp sub out hlt xor incb hlt sti sahf subb leave in fidivrl xor test fdivs push ret jnp (bad) rorl clc (bad) (bad) jmp nop adc cmp scas lock push jle inc call add mov andl lock ljmp mov adc in insl add imul (bad) (bad) incl push js test pop hlt out adc data16 loop sarl sub add popf fmuls (bad) (bad) (bad) jmp mov sub ret test jb mov adc jnp mov cmpsb vmwrite (bad) (bad) (bad) stc xor xchg pop and idivl stos sbb jmp fbld pop jae std (bad) (bad) ljmp inc dec add mov sarl mov cltd fistpll jg daa add (bad) jg push jle and pop add xchg fdivp (bad) (bad) call jle sbb mov xor cmc inc inc in sahf xchg cld (bad) lcall ljmp sbb addb (bad) (bad) jmp adc xor mov cmp jmp pop in pusha dec mov in jmp call jnp,pt xor arpl mov and js in add pop and add cmpsb jnp xor sbb jnp (bad) lretw vmovntps mov enter out (bad) inc sbb stc dec das test (bad) incl cmc jnp push mov pop out cmpsl push test insl stos (bad) (bad) (bad) incl dec xor out xchg pop dec aam jns pop das movsb test jl fwait ljmp xchg into aaa push fcmovbe loope (bad) fbstp mov mov int3 imul (bad) cmpsl enter sub daa and inc (bad) ljmp cmp int3 imulb imul lods cli or jp cs (bad) (bad) (bad) jnp sub lods sub nop cmpsb push or aas jg inc (bad) sbb and sbb call cld lcall outsb add insb mov lret add inc jno xchg mov in pop (bad) (bad) (bad) pushl call (bad) jp iret bound fisubl jb mov divl clc das and rolb mov std add test cli decl mov lcall pop and fdivl (bad) lock (bad) (bad) mov in fsubp pushfw pop out stc jmp hlt in cmp ret jne jno (bad) (bad) fbstp mov xchg xchg out inc push das imull out mov cwtl or and int (bad) (bad) decl adc add mov cmpl ja jmp mov aas scas or (bad) and (bad) (bad) dec xchg add bound insb sub gs mov ljmp pop and or mov (bad) lcall lods lcall and imul in out sbb test (bad) (bad) mov cmp and jnp idivl xlat pop lock test dec and (bad) (bad) mov push mov mov hlt popf sub out (bad) inc xor cwtl mov ret xor jb mov add adc (bad) (bad) inc lds mov mov inc lea mov outsb clc sub sbb loopne mov (bad) decl and or fnsave and dec adc dec dec inc lds mov std (bad) jmp jecxz aas xor push xor (bad) repnz popa mov inc arpl mov lret lds sahf push (bad) ljmp test xchg jb loop push inc pop push js adc lock jbe or decl adc jecxz test cmp add fsts dec insl sti sbb (bad) jmp mov lret or loope push iret ds push sub lods or sub sahf (bad) (bad) (bad) jmp icebp or int3 add pop xchg add not popf dec mov aam dec incb (bad) jg adcl rep stc faddl inc mov addr16 xor xor call testb loop xor lock aaa sbbl ret scas cwtl push stos mov add aad out pop loop in out xchg pop inc and inc and inc mov (bad) fist push xor sub push int3 and je sbb fdivl mov (bad) (bad) (bad) jmp ret mov fcoml sub notb jo sub ret add mov push jp adc scas mov sub pop (bad) xor or imul (bad) rcr scas and sub push sti (bad) (bad) (bad) jmp mov or lret das sbb (bad) cltd cli dec xor imul das sysexit fistpll decl addb lds clc sbbl mov mov xchg pusha ljmp ljmp cwtl lahf jno imul jl sbb insb adc push clts sar (bad) ljmp outsl div fbld push outsb adc or jbe ficomp (bad) cli jecxz stos jp popa mov sub dec adc push lods enter cmp ret ret push mov fnop call jb and dec int3 dec push ja or ja ds cmp (bad) jmp cmp cmpsl popf xchg into mov adc test add clc fnop pop dec inc leave (bad) (bad) (bad) decl iret aaa mov aam inc xchg and lahf mov sub lods gs ja call (bad) jl mov xor xor decb aad sbb mov inc out (bad) ljmp test push movsl popf cmp jg lods popf pop (bad) gs mov (bad) and mov in jb or inc (bad) (bad) (bad) jmp enter mov repz cmp add mov mov push fisttpl or (bad) (bad) call enter mov jns ds shrl pop and int3 cmp adc jg test xorl add xchg (bad) (bad) (bad) (bad) mov popf les pop xchg cld (bad) jmp rcll jns jecxz ss mov (bad) (bad) jmp les (bad) (bad) sub sbb pushf push cwtl or add pushf js (bad) daa dec (bad) or js (bad) (bad) pushl cmp mov repz adc aam inc and imul jle (bad) (bad) call jnp roll inc xchg cmp mov mov stos cli mov test outsl mov fnop pop sar jmp int3 adc sub sub das jnp lcall jg (bad) incl and jecxz sub sti mov (bad) xor xor lcall sbb push mov mov stos xchg (bad) data16 dec test (bad) lcall pop adc cmp rorb (bad) xlat jns and jb xchg test mov in fisttpl lret inc pop hlt idiv mov (bad) (bad) lcall push and inc cltd xor xchg dec mov scas mov xor (bad) (bad) jmp mov or adcl bound lock mov incl lods inc movsl jp (bad) incl cli mov jp das xor xchg cs repz hlt and jmp dec jg iret jno pop sahf (bad) pop movsb pop pop mov decl leave lea bound pushf leave add xor cld mov push cli (bad) mov (bad) xchg cmp int push inc add repnz sub insl lods xchg dec push insb inc push pop sarb jns jns sub fs (bad) (bad) (bad) fildll mov xlat push add adc lret mov ljmp xacquire dec (bad) (bad) (bad) std mov aas repnz jo or lea mov pop dec mov xchg mov jle fwait ss (bad) (bad) lcall push fcomps lcall or xor push add mov adc ds mov (bad) (bad) (bad) incl ss leave adc cld jecxz jle adc push ds mov xchg pop cmpl push std sbb hlt (bad) mov mov dec enter mov fs inc popa outsl movsl xchg mov (bad) ljmp shlb add std imul aaa aad lret adc shlb pushl cmp out bound (bad) (bad) mov popf pop push dec je mov loop adc pop pop push xchg das inc sub std pop (bad) jg push cs test xchg mov and pushl cld dec hlt add lea jg adc fs ss in push dec test incl cmp sbb push adc mov pop pop enter (bad) out cmpb sbb push call (bad) incl add subl lret mov test push (bad) mov jae fcomip (bad) pushl xor lock in fsubrl and js loopne (bad) incl in or test cmovb cmp sbb xor dec adc sub loopne pop (bad) (bad) out imul and dec pop mov sbb pop lock aas pop mov inc lret mov push mov icebp push (bad) pop mov jns scas mov xor cld mov push jns fs arpl and lds fildll jmp dec jne fs rcll call mov xchg xor cld pop in pop dec adc sar pusha push fsts daa hlt (bad) (bad) decl int3 xchg pop nop das sub jae lret sbb stos enter pop mov stos (bad) pop fs add lods loope les test movsl (bad) (bad) (bad) (bad) jp cltd out mov inc mov pop cmp stos jg (bad) nop out int3 mov inc out sarl jae int3 and mov push in lret stc cmp xor fldcw (bad) cmp pop int les shll jl scas clc dec je (bad) imul rorb add cmp inc pushl aad mov mov scas sbb js sarb xor inc insb movsb inc cmp shlb (bad) incl enterw jbe dec inc jmp push (bad) mov icebp js lock sbb mov clc and addr16 out dec lret and jp dec add test lock push or cmc (bad) (bad) ljmp leave (bad) jbe (bad) or gs leave sub or lcall in pop loopne std pop add das adc cmp fdivs mov (bad) (bad) (bad) (bad) mov mov sub dec aam fs fdivl and (bad) (bad) (bad) lcall movsl repz xor cmpsb cwtl daa jne popf repnz gs adc push dec (bad) (bad) (bad) incl dec bnd or ret (bad) sub mov int iret and xchg enter (bad) (bad) ljmp adc mov xor ficom xor xchg aas in nop xchg icebp adc (bad) (bad) ljmp mov stos sub dec inc push das mov call out jns dec sar (bad) (bad) mov hlt enter into outsb test lds lcall inc push pop outsl xor jp or and (bad) (bad) lcall xchg jl pop fcmovne popa bound es mov push test inc mov rclb (bad) incl jne xor es sub xor inc imul jo push add lock lcall popf dec cmpsl sbb movsl sub or mov scas clc loop mov clc (bad) call sbbl das push les outsl mov sbb jg and push pop xchg push adc add out sar or xchg cmp mov jecxz jne (bad) (bad) (bad) (bad) sti inc mov adc cmpsl (bad) int clc push mov ljmp (bad) (bad) (bad) (bad) incb repnz scas iret xchg (bad) pusha push mov hlt jb pop xchg int push insl push adc (bad) (bad) (bad) ljmp cwtl sub and mov popf sbb dec or aaa bound cmp sub pop (bad) (bad) (bad) decl lea fmul mov popl stos mov fcoms sbb xor (bad) (bad) jmp std push adc ds (bad) push mov int gs xchg scas xor fwait jne incl scas out jp and mov fwait in imul pushl je ds xlat insb jg cmpsb leave jl lds mov or jmp popa add (bad) (bad) (bad) incl inc inc sbb xchg push sbb aad lods (bad) and aad ja cli pushl pop ss iret jle clc ds (bad) cmp test movsb (bad) adc test inc xor mov mov pop gs xchg addr16 outsl cwtl mov mov loopne jle add in movsl push xrelease sub das jnp negl test xlat mov adc lcall sub xchg mov mov cmp fdivl cmp mov mov inc jae (bad) push mov outsb dec hlt loop sbb mov mov dec mov ficom jmp (bad) (bad) (bad) decl cmp push dec pushf sbb out xchg cmc and and outsl lods mov pop (bad) pushl or or int3 lods cmp cmp lcall fstps xor out stos mov mov hlt push rcrb int3 imul lcall inc push add push ja jmp inc in jp mov fidivrl lcall (bad) lcall pop inc frstor shrb cmp (bad) cmp jne xchg fs (bad) (bad) jmp pusha or aaa mov in xchg fildl aam cmc pushl loopne insl dec xchg jp cmp (bad) (bad) ljmp sahf cmp push test dec and inc push insl add adc jbe mov popa pop (bad) (bad) (bad) (bad) in sub jg shr mov aam mov in sbbl pop roll cmp adc lods pop pop (bad) (bad) (bad) incl cmpsb lods mov pop mov aam dec xor lds fidiv out mov and sbb xchg js imul cld push jo aaa lret stos mov rcrl (bad) ljmp add or add movsb lods addr16 cs push (bad) sbb (bad) (bad) (bad) jmp mov bound sub fcmovbe pop outsb loop or test sbb bound (bad) (bad) jl (bad) mov push xor (bad) shl sti cli mov sbb in jmp pop pop jae out pop xchg or mov sub mov add xchg js (bad) stc outsb out cmpsl cmp pop fistl incl sub xchg fbld std popf es aas fisub int3 (bad) sbb mov movsl sbb adc movsl in fidivrl pop sbb inc inc decl lods dec dec clc dec aam ss and mov xor cmp ja xor (bad) cmp aam iret or (bad) loop aad jns lcall sub ror mov sbb cmp (bad) (bad) decl or fldt jns pop out loop inc lcall (bad) ljmp pop ds in (bad) shlb out lret (bad) (bad) push dec mov rorl or xchg mov push xchg cmp daa or divl mov insl ljmp mov aad ds xchg mov call cmpsl mov jno repnz xchg loope mov or jle mov dec push movsl push jg (bad) (bad) call add add mov fbld xor jmp pop jge mov pop push mov (bad) (bad) (bad) (bad) jge std xor les sarb cli ss jecxz mov pop pop mov cmp jmp and dec or dec xor rcrl rcrl fcmovne mov sbb (bad) incl lds mov shrb mov scas mov dec push lahf es adc jo xchg push lods xorb or jns mov inc jb push or cli lds sub cli inc jno fistl loop sub (bad) decl push popa pop cmp sbb int cmp das nop (bad) ret cli (bad) call std adc stos xor xchg mov lcall mov lods mov mov push (bad) mov lds cs mov (bad) decl or rclb ds hlt cmp lret jg ret fcomip jmp stos lcall dec or sbb lahf mov ret cmp int3 jmp add lcall scas lret (bad) mov inc jno mov bound inc mov cmp push or and sub or ret jmp mov push pop (bad) mov jbe push mov pop ljmp fcomip call mov jbe arpl xor loop bswap push sub push insl (bad) (bad) (bad) lcall pop cmc cmp icebp daa xor adc lcall jne movsb pop adc jg dec cld rcr shrb daa pop imul (bad) (bad) (bad) (bad) push jl adc (bad) xchg cs stos in jo inc sub lcall or mov jmp into loopne aam inc (bad) (bad) jg xchg aad fsts pop inc and inc jne jp and sbb xchg pop (bad) (bad) (bad) (bad) cmp mov mov push leave jno lds dec cmp xor sar mov or scas mov inc faddp inc into lock loopne call (bad) (bad) jmp (bad) popa jecxz (bad) or rcll or sub and dec and arpl les dec lahf cmp mov (bad) (bad) (bad) jg jp orb cmp andl lds push and xor fwait jle cli (bad) jmp arpl outsl adc push paddsb (bad) pusha int3 (bad) nop int3 mov jmp pop sub cmp xchg and test jns jns les pop (bad) (bad) out mov aam mov dec sub jl test or movsb fcoms nop rcrb mov ds jmp cmpsb aaa pop jmp xchg mov (bad) (bad) call imul rorb sbb fwait mov dec mov (bad) (bad) (bad) lcall scas mov and mov lds jns jg push pop outsb (bad) (bad) or add mov fimul aam scas (bad) popf mov cli (bad) lahf lcall (bad) call gs mov pop mov ljmp pop inc pop xchg mov (bad) (bad) (bad) (bad) decl push add push cli mov gs rclb pop lock neg and cmpsl and mov jmp rcrl (bad) (bad) (bad) (bad) fstl mov mov ss enter and adc cmp mov xor sbb xchg (bad) (bad) (bad) decl imul mov ficomp xor fsubp xchg push out enter nop adc pop inc sbb lods cs (bad) call std cmpsl daa ret insb pop mov lret or cmp (bad) (bad) decl xor lea mov scas cmp push daa jb idiv int3 push (bad) jmp pushf xor pop sbb shrb lret (bad) mov xlat addl int3 push enter scas xchg out push cmp loopne daa lods jl pop (bad) jmp jl,pt xchg outsb inc mov xor pop stc jbe xlat adc (bad) (bad) dec mov push ss add jb dec jnp mov sub jg (bad) lcall jne paddb (bad) (bad) (bad) jge ret cmpsb inc decl sub xor push loop mov cli sti inc inc stos pop push push (bad) (bad) (bad) call or mov or sub add sub popa jnp,pt (bad) into cmc mov aam (bad) (bad) lcall dec stos push outsl or std xchg lcall jl sub sbb jp hlt (bad) (bad) lcall mov and fwait into adc int es pushf mov xor (bad) (bad) (bad) fbld mov dec adc lods mov xor xor sub push add (bad) fild shrb test test jo ds incl jne cmp or pushl mov dec loop and mov sub or scas (bad) (bad) (bad) jmp in cmp sbb (bad) xchg pop (bad) add xchg (bad) pop jecxz (bad) (bad) (bad) pushl pop (bad) fdiv xlat and xor sub sbb add sbb xchg sub loop incl (bad) xlat mov mov or sbb pushf pusha jl (bad) (bad) (bad) pushl sub add push push insb stos cmp jne popf jno ss push push mov stos lahf pop xor call lcall mov jno fimul sbb mov loope mov mov xchg cmp (bad) (bad) call dec push push (bad) aad fsubrl test (bad) xor mov inc lods pop call icebp and out inc inc ret push fstp adc (bad) lcall inc loopne or sbb scas adc jmp addr16 add gs insl test lret ljmp inc xor ljmp cmp hlt arpl stos mov insl aad jmp lahf sahf test in and div divl or idivb iret in imul lret sub pop mov (bad) inc push mov std xlat cwtl xchg push lods int3 and or (bad) (bad) (bad) ljmp (bad) sbb push or pop jbe mov adc inc dec mov (bad) (bad) (bad) dec sub jne fbstp add pushw mov loope pop bound cltd jne stos xchg jno ret (bad) incl out lahf imul addr16 incb lcall dec (bad) cmp mov ret mov xorb ljmp movsl icebp mov (bad) xor (bad) cmpsl int3 ror pop sub (bad) (bad) (bad) ljmp mov data16 push pusha arpl sub xchg lret cmpsb into cwtl cmpsb stos (bad) repz (bad) (bad) jmp jne es push and fisubrl xor xor xor sbb push clc lret je ds arpl fcomip (bad) ljmp inc mov arpl (bad) push mov fdiv in fimul call dec (bad) pushl inc jns sahf mov dec sbb pushf scas psrlw adc jae test in push and (bad) (bad) (bad) in fisub mov lods lcall jle mov sub cld aaa mov (bad) (bad) decl dec jne in xor push sub aad mov mov add xor inc dec cli fwait (bad) (bad) mov mov addr16 and (bad) test xor pop test or stos jg lods jmp dec in push shrb jge,pt mov (bad) (bad) (bad) call repz dec pop cmp movd out or jl cwtl lods jmp outsl mov repz cmpsl hlt jo nop mov mov mov out in (bad) (bad) (bad) push adc jo mov imul sbb ljmp and arpl (bad) (bad) (bad) (bad) jmp inc rcll inc ds les push bound arpl mov (bad) pop icebp cld loope dec ds or pop fisubl popf arpl or and decl pop pop jo das nop fiadd ljmp sub jne sbb inc dec pop ljmp movsl jmp jecxz,pt (bad) jg mov dec ss nop pop adc dec jae xchg sbb (bad) enter push cmp (bad) sub sahf nop xchg daa incb (bad) mov addl (bad) in jo popa pushf and stc sahf push (bad) (bad) call mov pop sbbl bound cs in (bad) (bad) (bad) out mov lahf push leave into inc repnz ret dec (bad) stc out dec push rolb lret pop push hlt incl mov cli sbb jo sub xchg (bad) decl js mov or sbb xor cltd cltd repnz ja (bad) jmp inc inc sarb (bad) or sbb (bad) in dec add sbb (bad) in (bad) incl cld and jb sbb ret punpckldq ret sub mov (bad) call (bad) xor test aad add mov test fiadd (bad) lcall cmp sbb jb xor push test push xchg and aaa mov imul int mov sub dec outsl stos dec loop into fimull test xchg fnstenv jl (bad) (bad) (bad) ljmp fincstp mov pop js out cld (bad) mov sti mov push or xor lods adc xor (bad) out cli call lock (bad) dec incl popa lret jge jle fsubs insb mov cmp incl cld loope sbb mov leave das adc mov (bad) ljmp out mov movsb xchg (bad) cmp insb lods test stos xchg inc xchg popa (bad) (bad) (bad) incl or imul fisub inc inc mov js jl negl (bad) call cld push gs movsb mov adc clc add add je call (bad) inc fistpll dec xor mov lea mov adc pop ljmp ja (bad) push cld adc push xchg loop dec adcb ljmp push pop add inc push ss dec cmc repz pushf push push mov decl xchg cmp xchg push pop lock loopne addr16 mov call sbb pop loopne pushf xchg cld inc lcall xchg pop mov jmp (bad) push cltd ja cs notl dec cmp test inc jge in stos (bad) (bad) (bad) call pop add imull ret dec scas leave adc xchg dec in inc cmp movsb cmp cmpsl aaa std (bad) lcall inc or push lea sahf adc push and mov sub fldcw sub arpl pop sbb pop inc jp outsl (bad) stc xor jg mov call std out (bad) dec int sub jo mov lret out push xchg out cmpsl cs (bad) in jmp imul inc jmp outsb rol gs push in pushf test rolb lcall add xchg in jno cmpsl aam out (bad) das jne mov inc sti (bad) call dec negb xchg dec stc (bad) push (bad) (bad) ljmp jb mov repz scas add (bad) int addr16 pop loopne call pop cld aam mov mov (bad) mov ljmp cld (bad) (bad) mov inc into cld xorl and mov push ret lock mov and pusha add push int mov (bad) lcall xchg cld dec les pop aas cmp push nopl (bad) mov call add gs inc inc adc ds (bad) (bad) jg dec cmp adc mov xchg and repnz push daa aaa pop sub aas inc out pushl cld push rorl outsb test es je jnp cmp push loope sbb (bad) (bad) pushl mov in mov sarb jecxz rorl xchg fisubr xor (bad) and mov jp lods xchg inc js mov adc icebp add mov lret out int3 out (bad) int (bad) (bad) decl add pushf insl scas xor cs dec and push js or push pop lea cmp or (bad) (bad) incl iret adc ret daa je in mov and sbb loopne loope xchg lcall lcall data16 jp and mov or fsub lods jle jne addr16 (bad) (bad) dec shr dec jae jae inc sub enter push mov jbe or mov jne aaa mov (bad) (bad) (bad) lcall xor push clc (bad) repnz or adcb (bad) rcrl push sar push pop lret jb mov sbb loop loop sub or (bad) (bad) ljmp sbb ja dec inc std inc pop call sti cmpl rcrb xchg jg dec push (bad) mov (bad) (bad) ljmp imul lret mov sub jge mov sub std js mov (bad) (bad) ljmp cld out rol sti mov out push int3 jae cwtl xchg shrl mov (bad) jmp lret dec fs out repnz cmp es (bad) mov aas test pop clc out shlb and (bad) (bad) jmp mov (bad) mov push push mov aaa insb add fildl bound out lods xchg outsl push aad or pop insb sbb push mov clc cwtl mov jo (bad) (bad) jmp aam shrb js or je dec in arpl fild (bad) (bad) (bad) call rorb fild insb in add ficomp dec push call loopne jo rcrl xchg or in sar mov sar imul (bad) pop pushf mov push and xchg outsl push rol loopne (bad) ljmp lock popa cmp (bad) mov jns in add xchg (bad) cmp xor (bad) popa xchg add clc xor rcrl (bad) ljmp mov bound add clc cmp repz outsb mov jmp pop mov daa insb pop jno es shll adc xchg push (bad) jg add sbb fcmovb sti out jmp imul jb fsubl mov sbb outsl lcall decl mov test sbb sbb add bnd mov sbb sahf call xchg out sti sti enter jecxz repz push dec gs jmp or sub movsb lock stos (bad) call mov rcl or add fimull push add lcall adc and inc jno add aas adc stos fbstp mov ljmp dec cltd inc xchg fmul addr16 fbstp std decl dec and mov loopne rclb cli xor (bad) repz (bad) (bad) incl cmp (bad) in lret ja repz sbb sahf imul aad xor (bad) ljmp test jne mov jg mov add iret (bad) sbb (bad) call cmp test push daa icebp or int sub mov jmp mov enter mov push dec inc mov ret jae adc (bad) (bad) (bad) fildl sbb push or dec stc push jnp loopne pop pop rep mov adc int mov dec adc das fild xor or je,pt inc dec out dec test (bad) (bad) jmp loopne xchg lcall dec push insb sti mov pusha push (bad) jecxz dec loopne (bad) (bad) jmp icebp pop test or mov and ss dec mov fwait jns cmp mov mov (bad) sbb (bad) inc push fsubs cmp int stos ds dec xor insl test (bad) mov outsb dec push push push cmc pop arpl mov cmpsl xchg push (bad) ljmp or xchg in les jne xor scas aas or rorb aad (bad) (bad) inc and sbb ret mov iret adc in enter ljmp popf cmp push insl ret sbb (bad) adc mov cwtl lods or fistl sub mov (bad) (bad) jmp lahf ret fdivrl fwait mov jno arpl xchg adc inc jb,pn jns loop (bad) (bad) (bad) (bad) jnp movsl and insb cli lea js mov leave or mov es pop sub ds inc cmpsb cmpsb jnp pop xchg stos mov pop cld pop std push xor pop pop pop jb or inc inc jbe dec mov fisubl sub pop push pop pop sbbl cmp (bad) (bad) (bad) clc mov fdivrs ffreep imull les stc imul sarb pop lods inc or (bad) stos lea and testb outsb and sbb jg add sbb fidivrl insl (bad) pop stos push icebp clc (bad) (bad) lcall push movsb xchg mulb dec mov cld flds pop mov or out inc jge cwtl sbb hlt rcrl inc enter bound or insb aad (bad) jg in fcos (bad) (bad) dec outsl add jae clc push mov leave je jbe outsl mov shll (bad) (bad) (bad) decl jmp pop cmp call test cmpsb pop sub call pusha cmpsl inc cld push dec (bad) (bad) lcall in mov lahf popl mov pop push dec mov cmp mov pushl xchg push jecxz cmp out sub dec xchg xchg (bad) (bad) mov sti xchg test in sub lock xor jne js and or decl and (bad) dec fwait and imul imul cld out ljmp (bad) (bad) ljmp push imul (bad) arpl mov lock (bad) dec sub imul jno repz (bad) push and aam lcall jae jb loope inc pop insl push arpl mov sar ljmp xchg cmp ja popa push in add dec cmp xlat dec sti cmp incl mov test repnz and xchg mov test push hlt test pushf (bad) (bad) (bad) jmp pop dec mov sbb cli es sub mov fwait int lods outsl std test sub decl or pushf inc xor inc rolb add iret ds (bad) (bad) ljmp dec xor sarb aad xor test int and xchg and (bad) fs pop pop imul mov icebp (bad) (bad) jmp mov (bad) cmp movsb pop jl repz lea fnstsw hlt push fisttp xchg adc and arpl pop mov (bad) or scas stos test gs inc cmp ret push add outsl add lods mov aad (bad) (bad) (bad) decl cld int leave xchg mov loope mov add cld sub mov mov (bad) clc xchg test jmp adc sbb mov sub jg (bad) in lret xchg test dec sub fiadd push in stc cmp inc fcomps hlt pusha adc sti pop sub (bad) (bad) (bad) (bad) inc fcoml shlb outsb jb mov call loope xchg push lret (bad) (bad) pushl and dec pop (bad) jno sbb adc dec inc or (bad) call mov cbtw nop jo hlt out ds inc rorb jno fmuls rcll pop (bad) (bad) (bad) incl cli addr16 test dec out rolb jbe jmp pop notl rsqrtps ja (bad) (bad) (bad) ljmp pop call push push add out cli cld hlt lds daa insl stos stos mov mov sbb adc (bad) (bad) (bad) cmp les pop lret and ja ret or aad mov cli test movsb decl lea mov (bad) (bad) call rclb (bad) dec cmpsb pop fwait mov cmp push xor repz imul out push mov push jecxz aaa mov and repz cmc test mov sub cmp xchg xor out enter inc mov adc xchg xchg (bad) aaa std (bad) jns cwtl and loopne jb mov jo out aad jo mov mov (bad) mov push pop in inc imul add mov icebp test sub (bad) (bad) dec adc or jb add and pop xor dec shl rcr pushf test cmp mov (bad) (bad) stc and add std movsb fs mov and arpl fidivrl ds sub or cwtl es mov scas inc sbb cmp outsb dec ljmp bnd gs (bad) (bad) decl xor xor inc push push pop cmp pop jae rolb inc aas es mov (bad) xor lcall addr16 push inc lock jb testb lcall (bad) (bad) lcall leave fistp adc xor xchg inc mov push lret fwait imul xor sub test pop in (bad) jb (bad) (bad) (bad) jmp xchg mov (bad) int movsl push dec pop xchg adc jg gs ret sub test es (bad) (bad) ljmp mov xchg xchg add sbb das je jno add push mov inc or jge inc inc mov jo pop in fdivl jmp aaa pop cwtl movsb or ds out or lea jg ljmp nop fcompl loop add xchg lea and jg (bad) (bad) (bad) dec mov push mov jo repz fisttpl mov or adc decl cld inc cmpsl je fildll aam (bad) out sbb enter adc push cs or addr16 cltd dec cmpsl es leave js pop add test (bad) (bad) jg add (bad) cmp vmovntps roll jbe (bad) (bad) (bad) call inc sbb dec lds and (bad) xchg nop push or adc fs jmp pop int3 mov pop shrb leave pop dec pop (bad) (bad) (bad) mov (bad) jbe fwait push lock mov pop pop dec scas xor rorb or ljmp cli dec enter mov dec jae clc xchg or out adc push sub loope push cmp incl push (bad) hlt enter fsubs inc add xchg pop fdivl (bad) nop xchg add cwtl scas mov int3 cmp rcrl scas out lret add mov sbb (bad) jns ds push cld push mov ret push je inc mov fwait test repnz ljmp cli push enter fiadd add xchg (bad) push rcrb push (bad) (bad) (bad) ljmp or sbb movsb mov mov addl imul and (bad) (bad) (bad) jg xchg push adc mov and push out pop lahf in in dec std outsb mov pushl cld xchg cmp dec and into in jnp or or or daa arpl jecxz xor orb push test push add adcl mov (bad) (bad) (bad) in arpl or mov gs cltd cmp inc (bad) push dec pop mov sbbl cwtl out dec (bad) (bad) (bad) ljmp sbb sbb lock pop scas fistpl loopne test repz (bad) (bad) (bad) pushl dec into test out xchg or pusha inc cmp enter mov loopne loopne mov pop cli (bad) in aaa push outsb jne pushf aas pop xlat adc xchg or and cmp (bad) mov sub and cmp test stos sub hlt pushf dec mov sbb aas fisub jl loope mov into or (bad) (bad) mov stos jb sub mov cmp push push aad (bad) jmp jo,pt test pop add movb inc loopne cmp (bad) inc inc pop sub cmpsb cmp es hlt dec pop pmaxub cpuid pop imul sub (bad) (bad) (bad) sti lcall inc mov or or jecxz or les sbb xor mov mov bound fnstcw (bad) jmp cmpsl sarb lods push pop or xchg cmp mov push lahf lcall mov test (bad) incl push or jp lock fadds cli push mov (bad) (bad) (bad) dec out aaa jl xor xchg popl leave sub popa jae xor ficompl cmp (bad) cmp ss fcmovu movb sub and rcl lcall sti adc add rorb pop jge (bad) (bad) call jle pop push (bad) and popf sub mov dec and adc sti xchg fwait das sar jle push repnz aad jl fmull (bad) out clc mov (bad) (bad) (bad) cmp lea dec mov add mov stc js mov andl mov (bad) (bad) (bad) (bad) fidivr cmpsb sbb inc jnp dec jl push dec out aaa dec cs sub sub mov (bad) (bad) (bad) pushl sbb in sub mov mov add lds decl stos sbb test pop out (bad) cmp mov sbb jmp (bad) incl loope jnp ret aad lahf sub dec jb in test sahf dec repz lcall enter dec (bad) lea pop or add mov mov inc pop mov push gs (bad) ljmp insb inc jnp xor push ret push pushf pop xor mov imul and xchg mov mov mov fninit leave dec xchg pop (bad) (bad) jg (bad) push pushf fucomp lcall jmp cmp mov xchg and gs push cmp jmp lods jbe inc and xorl push push in xchg call cld xchg pop mov or out stc call call or ret or aaa sbb test mov (bad) lcall nop icebp mov sub push adc hlt mov mov mov mov imul dec sub pusha sbb or cld gs inc hlt jge lcall jbe xchg (bad) (bad) (bad) (bad) call stos sbb jb xor hlt fmuls loopne add loopne (bad) fcom xchg subl mov xchg or movsl pusha sub subb mov aam cmp adc lock cmp lds loope inc out push int3 xor enter (bad) jmp adc mov or (bad) (bad) mov (bad) (bad) xchg mov movsb dec int3 fdivs or fs push (bad) (bad) (bad) incl icebp mov dec fldt gs adc sub xchg push dec in repnz pop (bad) ret adc (bad) push mov jmp and insl into lods add (bad) (bad) lcall cld push mov adc fnop adc cld sbb pop add daa (bad) (bad) (bad) pushl mov and roll mov xchg xchg or dec pop sub lods (bad) (bad) ljmp aam adc jne js sbb (bad) movsb out sbb add rolb jb fprem (bad) (bad) mov or mov repnz lods repnz jmp dec sub xor mov inc jno sub adc (bad) (bad) incl cwtl fnop test movsl mov xchg sbb out scas mov (bad) inc int3 jmp mov fsts mov cmc push out push dec xor push jnp or mov lcall (bad) mov cmp jl (bad) add movsb or cld int3 lds (bad) je jg (bad) push push xor mov daa xor outsb lahf scas ret push sub push scas fist add scas cmpb add fnop ds (bad) jmp in sbb or jno mov xor jecxz (bad) (bad) (bad) push sar mov mov jl and les inc xchg arpl std int3 (bad) (bad) (bad) jmp mov test push sbb lods scas push jmp mov adc sub pop inc dec mov (bad) call std dec test cwtl into inc cld sub lahf insl repz xor mov push push lds jp gs inc stos stos fstl mov push lods (bad) (bad) jmp stc repnz je push cmp or pop out add fcomps test cwtl sub or mov testl or push push out jge ds (bad) (bad) decl repnz imul xor xchg imul jge mov cld (bad) (bad) call popf in xchg mov cmp aaa lret pop push mov mov inc mov (bad) jg push ror (bad) ficomp cmp mov into decb mov xchg (bad) (bad) (bad) ljmp sub ja fisubr subl add mov xchg inc inc or iret (bad) jg incb aaa stc out lret sbb ja rclb pop addr16 sub push cmp xor ljmp jg lock aaa and inc cmp sahf popf lods inc ljmp cli cwtl cmp jne xchg sub mov std call pushl push mov std addr16 pop mov cmp (bad) (bad) call cli aaa lcall mov inc ss add loopne mov stos xchg push push inc sti lods mov je xchg ljmp rol int3 sbb dec std ljmp push aad scas pop pop in fcomip decl push mov cmp push iret sub (bad) call push jle inc mov adc cmp (bad) insb xchg out xor xchg add sub (bad) decl xchg xchg popa movsl pop push adc addr16 decl adc cmpsb cmp ljmp xchg lcall clc fimul (bad) (bad) (bad) pushl inc adcl jne push fidivrl ret movsl cmp (bad) stc movsb add call out ja leave mov mov cwtl mov gs into xchg mov mov (bad) (bad) (bad) lcall ljmp jle (bad) mov dec push pushf ss mov je mov jmp (bad) call imul jp jo js mov out dec add dec fsubl mov mov mov dec jo fs sbb fidivr and pushf push mul and and (bad) decl lea push mov adc mov imul mov xchg enter mov mov clc jmp nop sahf push xchg add addr16 cmp cld lcall loop jae imul test adc sbb call jp and jae insb sbb xor movsl in and xacquire xchg rolb sar (bad) (bad) fistp add or inc jb test dec test push jg (bad) jmp loope cld or mov (bad) (bad) pushl cmp outsl cld hlt popa mov jns add in adc scas out sbb ds (bad) repnz (bad) (bad) jmp cmp add fiaddl sbb inc sbb inc dec mov rcll or adc sahf and fild data16 dec aas int3 cmp lods (bad) (bad) (bad) lcall ja mov pop imul add sbb jecxz push or out popf cltd mov mov fs js mov call xor xor fstl inc cmpsb dec fcmovnbe ja xor mov (bad) jmp cmp mov xchg js dec push scas jae popa jno sbb ljmp pushf in xlat sub mov lret (bad) out cmc cmp outsb arpl hlt imul pop lock repz add xor mulb push popa into cmp pop (bad) (bad) inc dec mov ss xor xchg mov pop fs mov into (bad) (bad) call (bad) mov call leave push hlt rolb inc sub pusha xor dec cmp aam xor (bad) (bad) faddp mov and pop inc and jge test ds add stos clc scas into aaa outsb jecxz and pop sbb (bad) call sub insb adc imul mov push scas (bad) pusha fwait (bad) (bad) into xchg mov jmp fs xor mov mov (bad) movsb pushf mov push jb add jae ja pop mov xchg fdiv in jge sbb or cmc (bad) (bad) inc xor (bad) mov rcrl test xchg outsb add xor or stos (bad) lcall mov sti sbb lcall repz inc and inc js (bad) (bad) lcall ret xchg xor cmpsl insl std push pop mov inc lret insb push add sbb sbb (bad) incl jl inc mov mov push xchg enter mov test dec lods jmp lcall jnp inc cld arpl pop stc stos lds int3 iret fs mov and repz js (bad) hlt lret movsb fiadd call sahf sbb les (bad) push or or mov hlt xchg (bad) (bad) (bad) lcall arpl dec push push xchg sbb dec test push push (bad) cmp dec loopne fcomip mov or test xor movb xor lcall pop lret es clc and scas push or (bad) les cmc (bad) incl and mov inc adc pop dec sahf xchg xorl sti clc (bad) (bad) (bad) mov sahf test xor sbb ret into int3 in add fbld das lcall push mov dec (bad) (bad) (bad) call jmp xchg scas or rcrl add rclb xlat adc (bad) (bad) (bad) (bad) aas call rcll dec xchg sbb sub cmp popf xor imul (bad) (bad) jg movsl sub push cwtl shll shll inc mov inc (bad) xor rcrb add jno movl int3 pop (bad) (bad) (bad) mov cmp inc in icebp pop pop pop push lret les cmp xchg push mov (bad) (bad) (bad) incl les adc pop stos push cld gs arpl out in inc mov inc (bad) (bad) cli inc and xor cli xor pshufw (bad) ljmp in mov std sti push movsl jp test imul xchg nop js jbe pusha xchg (bad) lcall decb es push and movsb cli push jp addr16 negb pop xchg pop cli cld mov (bad) (bad) std call lcall ss xor cli sbb imul xchg fsub jecxz (bad) (bad) mov xchg fstl mov gs or push inc pop pop push je xor cltd lock fidivr inc cmp sti insb fstpt decl clc in out leave adc in dec adc dec mov lcall idivl out jae xor sti (bad) (bad) (bad) jmp int3 nop xchg cmp push test hlt push and pop lret movsb sbb fldl and pushl std push sbb xchg (bad) sbb xor dec xor jns or (bad) jmp add pop rolb mov in inc dec mov and ljmp rorb and jne scas sarb push (bad) (bad) (bad) ljmp jb and sarl lods push or inc mov inc bound (bad) mov hlt lahf mov pop pop daa push addr16 (bad) (bad) (bad) cmp insl mov or inc (bad) icebp loop in push pusha ret sbb dec scas cmpsl stos inc (bad) (bad) (bad) ljmp dec cmpsl mov inc mov cmpsl dec fldln2 clc mov ss adc jns lret data16 (bad) call pop lods ljmp push dec mov pop push loop xchg mov (bad) lcall mov cld sub imul mov movsl or dec lret repz ja cmp clc jle decl fisubrl fldl push ret sub fs mov incl out (bad) mov imul daa mov and lret xchg pop loopne push (bad) int mov xchg mov cmpsl xor cwtl (bad) imulb sbb fisttpl inc mov lock mov std (bad) (bad) jmp call jl mov inc push stc pop xchg xlat outsl jge ret aaa mov pop sbb adc scas jmp in shl mov sbb pop mov or cmp movsl lods (bad) (bad) (bad) call nop mov movsb pop push jae popf push pop jns int cmpsb jo push jns mov stos xchg in or repnz and (bad) inc je mov call cld ds sub or mov repnz call cmpsb out pop (bad) aas push test push test lret (bad) lcall es mov movsl lsl fsubl (bad) jg sub xchg mov cld inc mov das ds (bad) (bad) lcall dec lock lret inc (bad) cmp mov cmp pmuludq add ja divl xor fwait iret or push or sbb rorb movsl scas inc xor push add push push push aam jae int adc pop aam inc (bad) (bad) (bad) dec std dec xor dec push shl sbb daa into (bad) notl test jle (bad) push scas cmc jecxz cmp mov (bad) (bad) (bad) (bad) jl pusha pavgb out xchg xor pop inc aam and imul cld (bad) mov pusha mov das inc (bad) loopne in or insl inc inc mov (bad) call fimull pushl pop pop xor dec outsl mov adc das mov popf addr16 mov gs push xchg xor loopne mov rolb jb ljmp sbb lret (bad) cmp cmpl inc sarb sub mov out lret (bad) xchg inc push pusha cmp push nop inc sub add repnz out loop (bad) (bad) (bad) lcall pushl data16 mov pop xor dec das dec xchg or cmp push aas adc mov scas ds ds or (bad) (bad) ljmp push dec xor fnclex jbe push dec or popa push lret loopne xchg dec (bad) push xchg or clc addb jmp pop xor mov pop movsl mov xor mov ret (bad) (bad) decl mov add test xor push stos icebp daa xchg fwait dec (bad) push je xchg in (bad) (bad) (bad) incl aam shll sub sbb and jo and dec push mov push and test (bad) ficom (bad) (bad) lcall dec iret jne imul ret jb das pop icebp pop adc les nop add dec (bad) dec (bad) mov lods into adc mov adc (bad) xlat call loopne ljmp aam icebp fmull and repnz xchg call xchg hlt mov mov mov (bad) loop sbb inc push jmp dec xor or loopne jo mov out add lods lcall loope add ljmp out push push subl cwtl mov mov or hlt clc pop cmpsl fdivrp call cld jbe sbb enter jno leave mov cmp fistpl mov (bad) (bad) (bad) (bad) mov shll in insb stos aaa out daa adc adc mov scas out jbe incl push popa scas cld sbb out mov neg stos hlt js xlat aad (bad) (bad) call lahf fiaddl loop xchg ja hlt int3 or (bad) hlt xor jecxz stc ss jae (bad) (bad) inc test mov push add or jne fs mov add push jle lds mov push add pop (bad) incl pop cmp loop scas adc pop int3 add lcall loopne mov push (bad) call or adc mov insb sub (bad) (bad) (bad) incl and sbb mov add sbb call fnstenv inc dec jge push mov (bad) (bad) dec shlb lods pop outsl ss loopne pop mov push sbb js es rcrb jb (bad) fcomip (bad) cmp pop mov cmpsb movsb push lods pusha or push (bad) (bad) jmp mov sbb lret (bad) push cs out adc call mov and out mov cmp xchg jp out push xchg xchg call cmc jmp push incl cmc outsl loopne cmc rcl lock jns xlat or or repnz jno cld mov cmpsb or ss ret sub push (bad) (bad) call je xchg mull lea cli lea inc mov lods cltd jns push mov insl btc aam inc and jge fsubrs sbb mov (bad) (bad) (bad) (bad) decl pop push push xor sbb repnz adc dec bound (bad) (bad) (bad) jmp adc aas cld pushf movsl sub xor push test (bad) mov adc (bad) (bad) call xor faddl pop leave outsl insb lcall dec pop in jne sub jp mov push pop lahf jecxz (bad) (bad) int es dec lcall lret sub inc push gs or dec add (bad) jg pop mov pop nop sbbb sahf (bad) fldl ss push nop pushf mov ficompl call push (bad) dec xor daa sti nop mov cmp inc cli ret cmp scas repz rcrl mov xchg inc xchg or inc in dec into push add adc out ds js (bad) pop mov hlt lcall sahf jmp nop adc data16 (bad) adc (bad) (bad) (bad) jmp or or mov jb insl mov arpl jmp or aaa and dec and jg decl fistpll mov hlt inc add addr16 in adc (bad) call rol int repnz dec cs cmp repz dec fldl adc (bad) (bad) (bad) mov pusha cwtl sti pusha je push push add push mov cmp icebp push in and hlt (bad) (bad) decl clc shrl loop sub lcall dec insb das push lret popa cld (bad) fistp and pop ret fbld test (bad) mov sub out or fbld nop mov daa jns movsl lcall call xchg or sub and decl test jp,pn add pop inc inc mov cmc mov (bad) mov mov xorl loop imul and push gs xchg mov dec outsl push lods jecxz (bad) (bad) mov jmp popf out push mov sahf sbb pcmpgtb mov (bad) (bad) (bad) (bad) std test or add inc jo xchg mov int3 ds push in mov (bad) (bad) (bad) pushl inc cmp lret je jg mov inc pop ror xchg xor inc sbb out cmp incl and test xor push (bad) (bad) (bad) (bad) fnstenv fcomps (bad) cmc jl test adc pcmpeqd jno test push out mov mov outsb es data16 sub (bad) fs xor lea lds lahf dec pushf sbb insb (bad) (bad) (bad) cmp or bswap (bad) dec push repnz pop fdivs mov cltd aad imul (bad) jmp idivb inc fidivl pop add rcrb mul xchg (bad) (bad) (bad) (bad) decb jp and pop pop xor xor clc and ljmp (bad) (bad) lcall mov push or jmp rclb scas gs mov cltd rcll inc loope out inc ja popf daa inc and xor nop fcomip (bad) decl (bad) mov mov jl fsubp pusha mov mov (bad) mov pop jmp mov mov loopne cltd js mov add mov jmp pop mov cmp and data16 clc in repnz mov mov sub inc push imul jmp aaa push in in loop repz (bad) or scas aas ret dec pop pop fs mov jmp incl stos (bad) or mov popf dec lock pushf adc gs and pop adc lcall aaa jle push scas xor jb (bad) mov jp sarl (bad) (bad) decl and mov adc (bad) push cmc mov (bad) (bad) (bad) pushl jns cmpsl or ss push adc sbb icebp clc pop pusha lods or cwtl mov mov ds xchg (bad) fiadd clc pushl std adc sub sbb out sub add loopne sbb (bad) cmp out hlt shlb mov and jge push aam jns in loopne jg dec cld subl cmpsl das mov adc xchg popf jge mov jno pop in stos mov cmpsb and mov js or (bad) (bad) (bad) lcall sbb or incl rcrl nop cmp insb stos mov incl xlat fsts lods push xchg jo push cld and pop push sbb insl les inc (bad) (bad) (bad) inc add cmp pop shrl (bad) aad or aas pop loop ret js dec movsl cvtps2pi pop (bad) (bad) (bad) jmp sub lds pusha cmp xchg lcall fcomps loopne cmpsb movsl rcrb (bad) jp mov fnstenv test push mov xchg adc push and (bad) (bad) (bad) call add loope repz adc adc int3 dec loope out scas xchg stos lea out call std outsl cmp mov pop ficompl mov mov int movsl xlat push pop les xor inc mov jnp cmp test or repz (bad) (bad) (bad) decl negl lea mov cmpsb hlt insl inc lcall mov jb test (bad) (bad) dec dec in and stc test decb mov orl sbb or mov jl (bad) (bad) (bad) incl test (bad) test icebp repnz pop iret xorl aam dec xchg cwtl xchg jne popf push dec out (bad) (bad) (bad) call data16 push cmc test fildll (bad) jno push negl data16 call hlt pushf in cltd push outsl add stos xor fwait shrb int3 int3 popa rcrl (bad) fldcw pop dec (bad) push adc xchg cmpl jl ja loop js sar dec and rcll (bad) enter fs rorb push and jg fisubrl fbstp push jno or xchg pop fmul clc xchg mov adc jne aad lret sbb int pop xchg je mov fimull pop cmpsb fs mov push rcrl pop mov movsl or add add inc mov mov popa dec sar (bad) (bad) js cmpsb jg add leave movsl push loop cmc bound gs movsb xchg int dec pop cwtl jno push insl push inc add aam cmp sbb xor cltd fisttp sbb dec dec ret out lret test (bad) lcall mov test push add cmp movsl cmpsl xchg sub (bad) hlt xchg dec add (bad) (bad) fisttpl push mov (bad) shrb into icebp xor dec shll sahf cld and add (bad) (bad) ljmp fldcw out mov or mov call fcoms scas fdivrs insl stc pop pop popa fdivl sub fidivl xchg loopne adc xlat mov dec out repz cltd adcl cmp rcr mov pop pop test and in pop jne push lods (bad) (bad) pushl negb cwtl arpl dec mov pop inc push imul fcompl ds mov sub mov jmp pop test and mov cmp (bad) jmp dec outsb or xchg dec movsl aas fildll lcall lret sub dec xchg pop mov mov inc insb bound ficoml mov aad je dec mov fistp decl dec mov rol pop cmp ss mov xor (bad) (bad) (bad) fisttp int pushf test fstpt xor sub imul icebp xchg adc out (bad) pushl ficom push loope jns cmp or jb push xor or mov xchg and mov push add adcb and add mov out lret scas rorb fcmovu mov (bad) stc fnstcw adc fdivr (bad) (bad) sub adc test push cmpsl pop (bad) clc repz test out mov push jo (bad) (bad) lcall call xor loopne test insl mov mov aaa arpl test outsb or ret ret fldcw mov dec push lods es mov in lods out cwtl xchg mov arpl (bad) (bad) decl jns,pt jmp aaa or pop orl in add aaa cld push cld stos fs pop xchg pusha xlat daa inc dec into inc aaa sarb lcall (bad) (bad) mov inc fwait inc ficompl (bad) dec ja inc jae mov dec dec pop xchg jp xchg das pop jne (bad) fcomip jns mov mov setnp mov lahf out cmp (bad) (bad) (bad) push pushf xchg mov cwtl (bad) adc (bad) fildl and call (bad) cmp jge outsb adc call (bad) (bad) (bad) lcall sbb and insl sub lock mov sbb adc xor loope cwtl (bad) (bad) (bad) push insb (bad) lret imul pop mov lock clc leave cmp (bad) (bad) (bad) (bad) mov xchg into in icebp dec aad stos xchg (bad) xchg pop stos mov adc xchg (bad) mov outsl push testl repnz cmp data16 jle ret mov inc ret (bad) (bad) (bad) incl es push add (bad) mov push cwtl xor test cltd xchg inc repnz test xchg and clc nop notb mov sub mov add (bad) mov mov lock sbb and (bad) (bad) mov push inc and nop sbbl adc cld lret stos pop rorb (bad) lcall int3 je jmp rorb mov lret loope (bad) or mov ret add push (bad) (bad) (bad) (bad) (bad) out cmp cmp jno sub dec jp mov inc lret aas ljmp sub aaa ss (bad) (bad) push xor push stos push adc aas int3 inc mov inc in imul add outsl lock es adc (bad) (bad) inc test push pop or out dec (bad) call or ds mov (bad) repz jecxz divb cmc cmp fsubs ja (bad) cmp and and es enter push rcrl cmpsl sbbl jle inc jbe lcall (bad) mov movsl je movntq adc fldt push xchg jecxz std lcall jmp cli or rolb (bad) pushf in lret clc fdivr (bad) (bad) ljmp movsb xor sahf stos ss mov mov icebp cmp sub adc lcall lcall ret fimull into and adc jmp xlat push in push xchg xlat jb jmp cmpsb jmp bound pusha mov lock loopne (bad) (bad) ljmp add cmp arpl sub js cmp sbb (bad) mov sahf addr16 popa loop xor dec cmp cwtl imul je (bad) (bad) decl outsl mov incl jae push popf sarl icebp adc das sbb push add jmp les add pop mov lock imul (bad) (bad) mov (bad) int ror cmpsl ror data16 dec outsb mov push shll (bad) stc mulb pop jecxz or fisubr sbb add or sbb ds (bad) (bad) (bad) (bad) jle loop xchg hlt lock in repz xchg mov cmp stos stos xlat mov fidiv jo mov push (bad) mov push (bad) xchg cmc mov lcall ds pop xlat mov xor pop cmp mov sub loope (bad) decl mov xor push xchg orl (bad) (bad) incl cmp insl mov push popa orl mov clc (bad) ljmp cmp xorl lret scas and mov (bad) ljmp cli in negl shrb int inc cwtl sub (bad) decl sub and jecxz ret (bad) mov inc pop hlt jmp and dec sub dec cmp and adc inc jg sbb icebp add movsl jg mov roll imul test (bad) jg test lds mov mov rcl fiaddl add cmp or out je mov or imul test xchg icebp sub sbb popf es jmp loope and fcompp (bad) (bad) (bad) lcall push js hlt lds cltd mov push jb pop xchg jne leave push jae (bad) (bad) call movntps cmp push (bad) mov in mov adc (bad) lret or dec aad lret jl lret out or dec add movsl jne data16 mov cmc (bad) (bad) std pusha nop push mov mov dec cmp aaa int xchg (bad) aam lahf (bad) (bad) (bad) pushl jnp dec aam jbe lods lret pop xchg shll dec das xchg daa cmc mov mov xchg inc cld les xor dec and push mov jmp jg xchg mov mov cmp pop fcoml es movb cmp (bad) (bad) (bad) js into nop test xor bnd aas arpl pop cli adc pop mulb xchg loope (bad) (bad) (bad) dec icebp fcmovb sbb outsb aas xor es sub cmc adc stos shr fidivl es jg incl push fdiv daa push fdivrp stc lods push adc rcll mov add (bad) incl pop sahf mov xor imul mov (bad) (bad) (bad) ljmp repnz sub imul sub mov adcb rol (bad) inc lahf iret inc cmp lret pop sbb mov gs cwtl xor clc (bad) lcall orb ret jl push push insl or xchg xor ds in cwtl pop mov push orl and subl test (bad) inc cmpsl outsb (bad) (bad) (bad) incl jmp cmp mov or mov jecxz sahf xchg dec mov into (bad) icebp mov lret pop or call lea cmp cmp hlt mov (bad) (bad) lcall (bad) stc ljmp or sbb (bad) push add xchg sti test dec xchg (bad) (bad) (bad) decl fsubrl mov and and cwtl mov jg mov pop dec fsub stos rorb rol jnp mov xor sar xor ljmp adc lock lret jnp add cmpsl push inc shrl nop mov adc jg insb aaa and les cli pop loopne ljmp lcall repnz stos push or (bad) ljmp movsl lods fdivrs sar sub (bad) push movsl push hlt iret int stos adc push cmp adc call icebp lret adc loopne sbb add call pop pop test pop pop insb (bad) pop lea inc inc mov sahf push loopne (bad) inc icebp push adc ret push sbb dec xor jge out xor (bad) (bad) incl xor rcr test jo into sbb sar push (bad) call icebp sub xor aam pop stc out xlat mov (bad) jg test mov and mov mov (bad) sub daa dec inc sar inc fldl jecxz mul fwait sub pop (bad) call xchg fistl rcll mov mov and das mov (bad) (bad) ljmp popf pop xchg cmp popf js adc imul ljmp fild cmp out jp mov fstpl (bad) push mov jae add lcall cli subl add outsl pusha cmp mov pop aaa sbb mov dec jle cmp or push stos das cli (bad) (bad) cmp fsts das mov inc cs mov xchg (bad) ljmp mov sbb test pop cwtl pop jo cmp (bad) pushl cltd jb cmp pop repz jb mov mov lds out ss (bad) (bad) incl incb (bad) sbb or int3 jno in push lret (bad) call push jno orl mov push std sub mov fabs sahf sbb xor sar (bad) (bad) jmp pop rcrl inc adc and mov sbbl in (bad) (bad) (bad) (bad) stc lock fist sbb mov inc out sub (bad) stos xchg xchg (bad) call call lds sbb mov xor inc pop mov (bad) (bad) (bad) incl dec or push lods jnp inc push lcall lret gs cmpb (bad) call dec push mov push xchg push pop roll jp (bad) add push sub dec dec (bad) (bad) (bad) (bad) (bad) xchg test leave push pushf incl repnz loopne mov int dec ss and xchg pushf and (bad) call imul in cli xchg out aas pop and mov push jo (bad) jg pop dec insb xchg aam incl pop lret es and mov popa inc call jns sub sub jne pop push aam push bound mov inc pushf jge cld inc dec mov dec lret xchg xchg call and sbb dec and inc jp icebp mov xchg mov add daa test mov (bad) jg (bad) aam jo mov into in cwtl sbb mov std lea and repnz sbb call adc fsubr pop jp jg aas push mov shrb ja (bad) inc mov pop lock dec (bad) int xchg mov enter hlt cmp call (bad) lret loopne loop popa mov clc or push out call sbb pusha scas dec push clc (bad) (bad) ljmp adc cmc push cmp js mov xor and js mov (bad) (bad) incl xchg js test test (bad) mov mov (bad) (bad) lcall adc test dec arpl jb shrl jp outsl jae adc mov sbb (bad) (bad) (bad) jnp sbb and outsl enter dec pop xchg xor xor (bad) push pop movsl push enter (bad) bound das inc (bad) cmc adc scas xchg push jnp lcall sar aaa std (bad) flds mov cwtl dec lret jae xchg push notl in sbb test (bad) (bad) decl mov lods sub fwait (bad) mov or arpl imul das (bad) jg decb or imul or fist pop add add push ljmp mov add or test mov ljmp incb lcall pusha lods stos out mov mov mov bound cmpl mov cli enter cld sub xor mov xchg add sbb (bad) call fnstsw fbstp pop mov or loope jp (bad) int adc jmp nop (bad) (bad) (bad) pushl hlt hlt sbb test (bad) fisubrl sub (bad) (bad) push jnp mov (bad) je (bad) (bad) (bad) (bad) jmp mov mov lock cmp push inc xchg movsb clc jo xchg jecxz or scas xchg movsl incl and mov movsb movsl mov cld lcall pop test xchg scas xchg sbb (bad) out mov jo cmpsb out stc into and add cmc push jge dec adc and lret dec sbb out (bad) aaa rol aaa mov pop add xchg (bad) (bad) (bad) decl mov aaa pop out cmpsl lds jns and divb push add xchg or nop push push dec and adc in mov sbb (bad) (bad) (bad) inc mov arpl ret test les testb add cmp mov fs das cli scas imul hlt lcall popf push stos cs (bad) (bad) jmp lahf jo ds adc outsl mov lea ljmp pushf lret das fisubr (bad) (bad) (bad) aas test sbb inc xchg (bad) hlt pop (bad) xchg xor mov (bad) inc test das push adc xchg cmp (bad) mov dec dec jg (bad) fistpll test sub and adc cmc shl xchg into or sbb (bad) (bad) fmul test outsb es mov (bad) and cwtl sbb cmovae push or mov ja xlat or cmpsb aam and (bad) lcall inc add pushf jl (bad) sbb movb mov insl dec das jge in cmp ljmp mov mov nop ja lcall cmpsl dec jmp pop cmp sbb add enter (bad) pushl fidivr jno fwait xor mov push adc or aad decl ds decb aas cmpsl test sar call cld mov add inc (bad) repnz cmp leave jb cli mov xor push setp cmp mov add and decl and out fidiv sbb xor xchg cwtl dec ja,pn push sbb pop push cwtl cmp in jg imul xchg pop rclb (bad) out lods cmp mov pop sbb mov mov lret sbb (bad) and outsl push movsb inc add movsl xchg fmul inc sub (bad) (bad) (bad) incl gs aaa ss cmp jl je and push push jb movsb mov int3 movsb sar jmp repz inc repz mov add fnstcw leave inc mov lahf negb movsb fcos (bad) (bad) ljmp pop jg sbb shll jne push arpl mov shlb jge dec xlat inc jle (bad) (bad) decl sbb pop adc in test rcll rcrl mov cltd aaa insl lea inc push push test dec (bad) (bad) (bad) ljmp test adc and dec addr16 sbb dec out std push jl mov movsl stos aaa cld ljmp fucomp ret cmpl iret icebp call call fimull idiv sbb cltd das sub cld scas sub mov and sbb (bad) mov xchg cli fiaddl push xchg in pop lea lock pushf pshufw push push jle outsl ret jo (bad) popl inc iret dec adc (bad) mov stos outsb (bad) (bad) (bad) jmp xor dec aaa enter lods sbb stc gs imul add adc dec adcl out cmpsb iret ss jp push not jo insl bound mov je mov mov (bad) clc (bad) mov or test testb sub stos imul mov jae or or das shrb repz movsb xchg call sub test add repz mov addr16 fnstsw (bad) pop (bad) (bad) (bad) (bad) fisubl stos jmp daa mov xlat js dec daa es js aad cs inc test rolb sahf xor js in setg repz (bad) (bad) (bad) lcall popa sbb (bad) and sar into adc vpunpckhdq in (bad) pop pop xchg jne (bad) (bad) (bad) call jno adc in dec push push imul xchg mov fdivrl sub rcll enter (bad) (bad) push outsl mov cmpsl sbb jp in sti pusha jbe mov jle cltd pop leave fcompl fcomps adc mov (bad) jmp pop addr16 fisttpl pop in sahf lods mov cld and sub (bad) (bad) (bad) (bad) jmp test mov scas sbb pusha dec loope jmp jp mov repnz jmp cltd (bad) ljmp rorb pop add call dec pop push mov clc push xlat subl dec add and outsb out (bad) xlat lods mov sar movsb (bad) mov inc sbb add mov and pushl jmp mov add cwtl jne mov hlt mov icebp or sub mov vmaxsd ds test in pop xchg sub cli (bad) (bad) (bad) (bad) mov xchg outsb add test dec sub lock jg cs shll leave andl (bad) mov leave fidivrl push xor sarl (bad) cmp (bad) (bad) jge fldenv bnd std mov roll lds dec nop popa daa xchg lods xor sbb (bad) (bad) incl stos fnsave movsl nop test sub pusha pop rol sbb (bad) mov cmc subl jmp cmp std inc jle cli (bad) (bad) (bad) js cltd xor cmp nop adc dec mov lods stc fwait push ret pop fmul stc (bad) (bad) ljmp cli pop xchg mov pop repz xchg nop or inc adc outsl add lock mov push (bad) and outsl nop insb lea rorl fs push (bad) std outsl lods call mov shr stos jge sbb or inc and (bad) (bad) call sub or pop inc adc jo push or jne clc (bad) (bad) fldcw cmp int3 push and inc shlb fsubrl inc cmpsb fdecstp pop icebp decl jl rcll xchg mov aas pop test call push aam pushl xchg push mov call repnz cmpsl pop (bad) push pusha pop (bad) (bad) lcall jp lea xchg lret dec cld dec push fdivrs adc (bad) std jmp mov sbb inc adc pushl and mov push aad add sbb (bad) pop (bad) (bad) (bad) ljmp mov or fdivrs adc jbe aas cwtl push mov loope push or (bad) (bad) push pop xchg sbb movsl (bad) add mov xchg dec pop sub mov (bad) call loope dec mov adc frstor pusha (bad) xor hlt sbb push cmp mov fildll adc sbb mov (bad) (bad) (bad) ljmp push (bad) fstl imul movsb (bad) fdivrs xchg cltd repz fdiv mov mov mov cmp xchg adc sub cld aaa mov subl dec popa mov xchg (bad) in sub sub popa hlt jb and stos in mov cmpsl xchg xchg (bad) (bad) incl sarb cmp mov xor mov les (bad) (bad) call loopne push pop sbb inc fldcw mov cli fldenv sti fcompl (bad) jmp stc push mov jmp repz loop cmc out and shrl pop push loop sbb (bad) jmp jmp loop jmp (bad) xchg cmp or push dec (bad) insl in addr16 (bad) lcall inc leave sub xchg push mov cs pop and popl lock inc outsb out push xchg out xlat mov push xchg pop fild adc call mov ss or push cmc lahf ja xchg xor mov shrb (bad) (bad) ljmp mov jmp sub xor call lods insl adc stc ds (bad) (bad) (bad) decl push mov add jbe cmp hlt push out mov popaw xchg dec cmp inc dec jb lcall scas sub jns push jnp sbb jae mov clc loop insb testl out jge jns data16 aad xchg mov in adc mov arpl (bad) jg stos adc dec push inc movsb addr16 hlt xor cwtl enter arpl inc mov pop sub (bad) (bad) (bad) pushl jge mov xchg dec inc add inc int3 ja gs test inc loope and pop (bad) (bad) (bad) lcall cmc loope push aam shlb push sahf call xor jnp mov sahf add push cwtl jmp xlat xor mov aam popa mov xor dec (bad) (bad) (bad) jmp xchg int3 dec dec out mov into test out jnp enter aad (bad) cli aad fdivl test pushl pop stos lret outsb inc push rcrl fwait cli or dec daa cmp dec jmp mov push inc (bad) and jo inc xor sbb dec adc imull or sti incl (bad) (bad) inc lds rorw xchg aaa enter (bad) data16 scas into shll mov (bad) (bad) pushl call vfmsubadd231pd dec mov xchg outsb (bad) mov mov sub (bad) (bad) dec (bad) xor in fmuls cli ds loop mov lock pop insb movsl lret push jb test repz (bad) (bad) mov fcompl (bad) lret jns nop les dec or xor iret jb jae dec lret sub push int3 incl pop adc addr16 push and push cld sub pop mov (bad) (bad) mov in fnstenv shrl and or rol mov pop jge movsb sbb xchg or (bad) (bad) (bad) incl push jge cmp cwtl lods add dec add (bad) xor (bad) fadd scas sub les jno (bad) (bad) (bad) (bad) mov sub inc repz jg repnz fildl das insl dec (bad) lret and sub outsl jmp sbb in mov enter or test jge fwait jb (bad) (bad) mov jbe mov push shrb mov xor popa das hlt test jne repz (bad) (bad) (bad) jle int3 push int3 or xchg (bad) cmp mov and outsb pop adc (bad) (bad) (bad) clc dec imul fucomp jno dec cmpsl imul adc and insl ja test (bad) call mov inc cs push push push test aas inc daa (bad) (bad) (bad) call inc jle,pt nop pop pop pop movsl mov sub aas and cmp sub xchg pop (bad) fildll mov xchg cli or mov pop lock decl mov lods arpl or push mov xchg mov (bad) jmp repnz sahf and mov cmp in jbe inc jecxz (bad) (bad) (bad) ljmp imul (bad) enter or in (bad) mov inc not arpl aad (bad) (bad) (bad) fs loope sub pop (bad) cmp push lea clc push arpl push jmp (bad) (bad) (bad) (bad) jle test xchg mov mov jbe mov (bad) sbb add lds insb scas fwait jmp insb xchg inc add or push xor ret (bad) (bad) (bad) call xchg mov lock inc fbld or inc xor pop fistp adc pop mov push jbe (bad) mov int pop lea stos jb jp movsb xor jne (bad) (bad) (bad) decl mov push inc adc test in outsb sub xchg pop or (bad) (bad) (bad) ljmp ljmp xor sub ss cs and clc test popa sbb jl int lcall or ds or mov cmc xorl cmp aad push (bad) ljmp push push daa inc dec pushf es inc outsb cli cmp enter js lcall xor push fucomp xchg push test (bad) (bad) (bad) (bad) mov lcall pusha mov pop loop pop xchg enter outsb xchg push mov out cmpsb mov push roll (bad) (bad) fstpt inc testl jb cltd sbb jbe add (bad) mov lea int cwtl add aam std enter inc mov add mov das cli call mov mulb sarb jg xchg leave fucomip (bad) jg jg xorl rorl ret mov mov rorl xchg int3 lret (bad) (bad) jmp lcall or stos cmpsl xor inc xlat inc push dec xchg inc xor inc out cmp shrl call lods jb cs sarl inc (bad) data16 (bad) lcall dec lods (bad) and xor jge pop fsts aas gs adc mov mov call ljmp into shl inc xchg lds mov inc mov pop outsb and icebp lds xchg ret aam (bad) (bad) pushl loopne ficom mov xchg jb sbb xchg add sbb pop lods jmp test (bad) incl push shrl mov mov and insb add imul (bad) (bad) (bad) incl mov pop nop push push xor inc (bad) cmc sbb sbb iret stos mov mov xchg (bad) decl jmp shlb inc bound and sub pusha fdivr (bad) (bad) lcall fidivr pop dec jmp adc out aad pop fsubrl lahf out outsl xchg push push decl push lock stc aad lret sbb push mov fs sti cmp xlat (bad) mov setg lds xchg lret and icebp jg call ret sbb ds (bad) inc cltd mov xchg lahf cmp movsb mov add sub in aam (bad) out clc ljmp aaa xlat mov outsl mov adc pop sbb in test das clc mov jmp add aaa mov (bad) out cs (bad) call pusha cmpsl fabs in and xor call aam pop add (bad) (bad) jg ds push sbb out ret add cmpsb and into (bad) (bad) (bad) (bad) fstpt sub pushf jbe stos xchg shll pop je mov pop (bad) cli jp push sub (bad) decl cmp jl adc in add ss xchg mov mov xchg stos dec cld (bad) std lcall arpl mov (bad) incl jb loope ss sub negl ljmp addr16 mov mov cld (bad) jmp jg data16 cmp gs lods xchg fdivl mov mov out repnz mov jmp push icebp das add loopne (bad) (bad) (bad) stc fadds popa xor loop push or dec idiv out lahf add push mov push jge (bad) adc movsl sub loopne dec decl jg bnd outsl (bad) mov fwait mov insb (bad) (bad) (bad) dec cmc xchg xchg mov cmpsl push into mov add rol pop fisttpl xchg clc incl cmpsb int dec jno pop mov outsl mov test and stos mov cmp (bad) call pop loope mov mov das frstor mov (bad) xchg dec les (bad) (bad) (bad) jmp insb jb ret test test mov pop ret lea arpl orl mov fimul mov adc push test inc (bad) (bad) (bad) push jg mov mov xchg ret icebp scas push jb imul sub dec sti shll scas cli call data16 jno call scas adc add scas cmp push imul dec pop mov push sub and mov out lea mov (bad) (bad) (bad) pushl adc out xchg call and das imulb jnp stc pop movsl mov (bad) (bad) dec nop popf inc adc add in aad xchg (bad) loop push mov in lcall dec (bad) ljmp repz adc mov je xorb push fnstsw jae insb mov push (bad) (bad) (bad) call adc clc jge sbb lahf or andl ljmp and (bad) (bad) (bad) jmp out scas (bad) sbb mov mov (bad) xchg xor jne decl into mov jne pop pop (bad) pop cltd pop dec jmp (bad) loop call fistpll jae jle mov movsl push xchg mov lret and jp mov mov loopne leave mov (bad) (bad) (bad) call pusha sub pop mov cli sub pop adc inc es push cmpsl shl lods (bad) (bad) (bad) (bad) cmp mov jns cmpsb ljmp fcmove cmp movsb and add dec dec insb xchg loop outsb jns sbb sbb int dec mov push icebp (bad) (bad) jmp push in sub (bad) mov sub xchg out insl mov add in jp std popf mov pop shlb outsl lcall stos inc mov lahf xchg adc cmpl out xor dec inc test (bad) push das add cmp xor lret jle dec push sub push sbb aaa jp xor into aam test (bad) (bad) call scas lds in push xchg xlat cmpsb loopne jge cmp mov call pop fistp leave jge mov cmpsl dec inc sqrtps es fwait dec (bad) (bad) mov add xchg (bad) aaa jne sbb sbb add in mov push imull loopne (bad) push pop ljmp lock fnop mov xchg ret fmul fstpl out inc pop sbb (bad) (bad) fistpll and aaa pop (bad) cmp mov jb xor xor mov (bad) (bad) incl and adc mov sub sysexit mov std or ljmp sar scas (bad) jmp rolb in push js sbb jb call fcomip (bad) (bad) (bad) pushl ret leave mov cld mov dec std repnz jb mov push or iret push (bad) jnp mov ljmp int3 inc fcomip (bad) jmp dec in xor roll cmp jl jae sbb fdivrs jmp incl or bound arpl cli pop imul push mov push lea xor lea mov lds repnz adc mov (bad) (bad) incl pop cmpxchg inc ffreep outsb adc push outsb js xchg push xchg stos push leave cld out sub lock cli (bad) incl push arpl mov cli cmpsl in mov add push aad loopne (bad) jmp adc add push dec or scas mov (bad) call clc pop push imul pushf ljmp push sbb dec jmp xchg clc arpl add (bad) (bad) dec fcomi push and repnz cli test cwtl jmp insl pop mov lahf out and (bad) (bad) pushl pop cs into cmp jnp mov mov cmp out cmp aas inc add incb jl ds pop test mov pop mov push addb sbb push movsl push inc outsl push (bad) mov in in imulb in scas add idivl lcall (bad) (bad) inc dec jb mov xchg out add and ljmp lcall mov jbe mov hlt pop stos loope fwait std hlt (bad) jmp push test mov loope repz and jmp mov pop cld mov push inc push iret out jb ss arpl (bad) cmpsl es outsb (bad) (bad) (bad) (bad) jnp pop mov push fstp jb cmp leave jns in icebp mov dec jle in icebp pop push xchg (bad) incl aaa mov pop dec cmp sbb (bad) decl decb movsl inc pop mov xlat push mov or (bad) (bad) (bad) call aas cmp ret inc in xor jmp ja xchg sarb fnstsw (bad) in (bad) (bad) (bad) incl dec cmp push or sub fdivrs mov into mov add sbb (bad) (bad) decl clc js jb test aad mov rcrl loope sti shrl outsl mov cld das adc pop mov xchg sbb (bad) aaa cld dec inc jae (bad) mov popf push pushf mov mov test pusha int3 in push inc jg (bad) (bad) mov imul in mov or mov inc mov test sub daa jp ja sar js mov mov xchg fucom ljmp add int3 or lret movsl jo fimul (bad) aaa std decl jnp jae gs mov pop in shll sti ret jl pushl mov and in mov rclb xor or ljmp (bad) cmp and icebp sub (bad) (bad) (bad) inc inc (bad) dec inc fisubr pop pop (bad) out repnz addr16 xchg adc mov test jecxz (bad) (bad) decl mov add fdivl mov outsb push xlat (bad) (bad) sbb jnp sbb test inc rcrl fs inc sar (bad) (bad) lcall neg mov or or xor pusha inc dec adc xchg scas push or movsb pusha test sub (bad) (bad) jmp xchg fisubl inc push movsl jge pushf inc cmp add push clc cmp aad ds cmp std (bad) decl imul or push cmp adc dec in or dec dec inc bnd dec clc incl in add or pop aad rolb dec jo int jmp and pop clc (bad) (bad) (bad) push mov out call sub test orl add jne jbe addl movsl repz mov aad mov jne jmp call cwtl icebp push test (bad) mov dec xor out mov rol js sar (bad) cmp push inc sbb cmp sbb dec movsl sbb (bad) mov lahf xor (bad) (bad) (bad) jmp hlt mov aaa mov fwait mov add dec jo cmpsb test mov addr16 int icebp mov out out (bad) (bad) (bad) jg jnp xchg push stc mov sub outsb push fisttp aam push push (bad) inc adc (bad) (bad) (bad) decl pusha mov jns pop pop inc btr mov arpl xchg cmp xlat (bad) incl xor insb push icebp mov dec pusha xchg sarl pusha mov decb xchg sub cmp adc fmull lret (bad) decl sbb mov mov adc mov pop xor mov add enter cmp insl pop ja (bad) (bad) (bad) (bad) xchg adc inc ds cltd ja sub inc ss push push mov pop fs push js xchg lret (bad) (bad) (bad) push mov je inc out fcoms add lock xchg sbb call push dec cmpsb mov jmp sub ds orb lods pop outsl xchg push xor (bad) pop mov pushl jp (bad) (bad) (bad) (bad) call les ficom mov pop ljmp push lahf and (bad) (bad) jmp daa fs int clc loopne in scas xchg rorl je stos cld pop push popl mov out scas call inc cli lret into cmpsw repnz jmp aas scas out mov mov andb pop push jb lea mov or (bad) lcall jnp jge or adc mov insb pop test in mov ljmp arpl push jp loop outsl in test dec outsb add inc jmp and jbe movb mov jne outsl or iret stc int3 adc cmp sahf fs aam mov ret cltd mov incb push aas ret mov mov adc std (bad) fistl fs pop or push jle insl lcall push pop fbld lret xchg or pop jmp sub mov xchg or or inc jmp mov std hlt fdivr (bad) (bad) incl popa pushf rol cli icebp xchg push lahf ret sbb lods add push inc xlat out cmp (bad) pushl (bad) in sbb push std dec mov pusha aad lods ror mov decl push jne cmp xchg sub scas pusha xchg mov xchg hlt loop aas mov (bad) (bad) ljmp adc imul pop add and lods lods adc int dec lcall lcall add data16 out or dec mov inc pop jle int3 add dec push jbe mov inc sbb (bad) (bad) out mov leave repnz and lock out call loop sbb inc pop pop xchg cld push sbb and and xlat jo add (bad) (bad) out inc adc mov sbb fidivl and idivl out add (bad) (bad) fcomip mov pop inc mov xchg iret cmpsl pop (bad) pusha lcall push call jae (bad) cmp imul stc sbb and or lock cmp or push cltd fisubrl je arpl dec daa into out std ljmp and enter push cmp fwait (bad) (bad) jg xchg pop xor (bad) mov rcr lahf adc call cmp (bad) (bad) lcall pop lret (bad) add add hlt mov stos pop jb out loope out (bad) (bad) (bad) (bad) decl int3 rorb clc push jge gs push fsubrp aam lock movsb loope adc (bad) (bad) jmp lretw fistpl inc mov or test rclb ja rcll mov and mul (bad) (bad) (bad) (bad) jmp lret test js jbe into mov ljmp sbb or (bad) (bad) inc jg pop (bad) mov popa cltd es or pop xchg jle mov scas xchg adc lret or (bad) decl or ljmp pop (bad) (bad) lcall push popa data16 and rorl insb out (bad) mov dec jge in dec push push loopne (bad) (bad) pushl mov push jae sub loope in or in dec sub cmp fsts loopne ljmp (bad) sub (bad) out adc xor imul fcomip fcoms jb jl sub mov pop add xchg stos pop (bad) decl xchg out bound xor pop fmul (bad) out rcrl and call ret ds mov mov test inc (bad) mov inc gs inc push adc das xchg cli (bad) cld sub mov in sub fs (bad) (bad) (bad) (bad) jns push push cli adc xchg repnz push push and sub dec cmp decl add lock sub jns jecxz,pt mov ja aas and je adc push inc pop fst dec push in fwait pop in cmp hlt popf (bad) (bad) (bad) jmp (bad) fsub push pop js int js push sub ficoml jae mov adcl cmp adc andl xorb (bad) (bad) (bad) ljmp and dec sub lds out inc sub mov std (bad) (bad) (bad) call pop loope xor pop lret jl stos ret dec mov xor jl imul ds cli outsb sar (bad) pushl stos sbbb push pop push jb lret stos insb cmp push dec popa mov cwtl (bad) (bad) ljmp ds mov sahf out cmp push insl lret cmp in push leave fwait hlt sub (bad) (bad) ljmp (bad) insb inc insl pop pop and mov inc stc xchg sti rcll cmp jae dec mov jmp xor sub adc push iret sub mov ds dec mov aaa adc mov pusha xchg aas xchg and (bad) incl mov cmpsl (bad) bound dec int inc sti inc mov inc dec inc push scas or (bad) (bad) (bad) cmp dec sub lahf mov xchg dec xchg gs subb das mov dec push or (bad) sbb (bad) ljmp clc xor and mov cwtl test insl es daa hlt mov aam jp (bad) (bad) cmp clc pop cmp inc mov movsl xlat mov mov ja add lock xor movsb gs push xchg fldenv out cli xor fsubs ja cmc jo fidivrl fwait (bad) (bad) (bad) jmp mov call xchg movsb pop stc cli std shr dec loop lret sahf mov jmp pop repnz rcrl aam test and std sbb and stos lods jmp or add and bound dec out cmpsb xchg loopne inc dec js (bad) fcmovb pop mov outsl xor xor shll or lock (bad) loopne jnp dec push lahf (bad) loope or cwtl aaa ret sar pop aam in daa aas invd int3 cmpsb sbb sub data16 in sahf (bad) (bad) (bad) ljmp pop dec das shr mov jne mov sahf arpl adc sbb pop test int3 int3 repnz sar (bad) lcall scas aam stc into outsl pop test inc aam cmp lock sti mov icebp push cwtl (bad) mov cmp hlt test test mov fmuls insl (bad) lcall xchg push add ret cmp popf js adc (bad) (bad) jmp dec popa vpand dec cmp and pop push jmp or mov (bad) (bad) lcall dec adc xchg sub sbb jnp test cmp pop (bad) pop mov pop icebp (bad) call dec fmuls in or mov iret pop fcmovbe (bad) mov cwtl push pop adc mov inc sbb movsb sarl aad mov jne mov push popf cmp (bad) (bad) jmp xchg (bad) ret (bad) sbb jb pushf fs aad inc add cmpsl xor sbb fbld lock (bad) (bad) call xchg pop and in dec mov sub nop popf pop insl mov and pushf mov in std mov cltd loopew test pop orb in ljmp push fdivrp jae xchg ret jp test add sub shll pop push mov sbb jp addr16 shr les data16 xor test call imul ds (bad) out clc inc jmp popl adc dec lcall fs mov (bad) (bad) (bad) call icebp adc sub or mov adc push in xor xor pop jae ds (bad) (bad) pushl iret mov dec xchg push mov pop fcmovnu add lahf dec mov imul (bad) push mov xor popa jb incl orl lahf lods test sbb (bad) pop iret cmpsb dec (bad) (bad) (bad) lcall mov jmp or stc mov movsb push sub pushf loop xor icebp (bad) (bad) (bad) call sbb hlt pop xor fnstcw add adc dec incl mov (bad) (bad) decl xchg push mov pop pop jge mov dec pusha xor scas (bad) (bad) mov inc xchg lret int3 sbb gs dec mov imul stos (bad) (bad) decl jp adc stc test xor insl int sub sbb scas hlt test dec jmp insb out pop xchg push or fisubrl pushl pop je out jl jle mov scas lds ficomp or pushl mov inc add sbb add out sarb test mov lcall hlt stc mov out pop sbb (bad) (bad) push mov xchg rcrb pop ret mov pop adc fwait adc jecxz clc decb data16 icebp xor inc sbb inc or jmp enter inc iret clc ret leave sahf inc or (bad) (bad) incl out xchg mov and or mov adc lret push je xor clc xchg dec dec mov jmp jo jecxz out inc xchg adc add jecxz sub popa es mov xor (bad) lcall das lods clc jl inc xchg ret lds cmp add (bad) sbb xchg and rcrl push movsb mov loope dec push pop repz cs lea stc lahf sub jno test xchg gs out ss sub mov mov adc (bad) ljmp inc mov aas jp inc xchg scas nop push fcoms dec sub push cli (bad) (bad) (bad) incl dec lock je ret cmc cmp lods (bad) mov pop jb sti sahf pop fldcw (bad) (bad) decl mov ds xor mul repnz push sbb push pop adc pop cmc (bad) (bad) aas adc sub push (bad) clc mov xchg xor xchg movsl mov add xor out cli call lret ret fbstp lods xorl jae adc and ljmp cli lcall pop xchg sub sub mov (bad) outsl mov idivb push ljmp call ljmp ljmp jo movsl scas push xchg sbb stos popa js sbb (bad) (bad) (bad) (bad) jp jno popa sbb mov fs mov cmp or rcrb sub idivb (bad) mov lcall dec arpl fs pop test or mov mov lret mov mov jle xor in pop (bad) lcall jne xchg call int3 jmp push or mov add fcos (bad) (bad) incl jg or test xchg int3 mov fnstsw add mov rcrl push add jnp pop pushf mov jecxz jl push repz repz pop sar (bad) incl jne ljmp or inc outsl cwtl fidivr and xor add insl neg sbb dec push les push js in insl out add or (bad) incl icebp insl (bad) dec jg push in pushl repz in mov mov (bad) (bad) (bad) decl jo mov in sub and fcomip orps mul (bad) (bad) (bad) call mov mov add rclb nop ss and mov (bad) (bad) (bad) (bad) cmp je inc dec aas or mov mov jmp inc in (bad) push cmp enter mov mov popa inc cmp lds mov mov stos (bad) sub mov hlt lds imul (bad) incl push (bad) mov add cltd or mov arpl (bad) test loopne (bad) fcomip test xor test and add cld pop jae sbb popa sbb push jae (bad) (bad) (bad) (bad) fistpll mov inc xor aaa nop jge outsb and out pop push cmp (bad) (bad) call popf cwtl push mov gs xchg push nop mov popf outsl sbb js push add fcos (bad) (bad) pushl (bad) inc add cwtl iret inc add inc icebp jmp pop mov stos sbb (bad) (bad) cld mov dec add repnz pop dec mov dec je cwtl ret std packuswb pop outsl stos fwait adc cmp xor or out adc pushl push mov stos fcompp mov (bad) mov or jl popf jge js push mov jae pop mov or sbb (bad) fildll repnz add test mov and dec xchg imul xchg and jae cmpsb mov mov and mov sbb jge mov call out lock insb stos jl xor loopne mov adc jnp fs aas mov dec jno outsl and in cmp js pusha cmpl dec lea xchg inc push push lock adc or xchg mov lret imul (bad) incl mov adc xchg fldl rclb arpl push mov movsb (bad) decl shll dec rcll xor mov (bad) call xor imul sarl push stos add fstl adc add cmp imul lea int pop jo jge cmpsl test xchg pop (bad) (bad) (bad) pushl adc or ljmp cmp and ss inc and (bad) call in jmp nop ljmp aam lock mov scas xchg (bad) xchg int3 or add (bad) (bad) aam movsl test lods lds inc movsb pop outsl icebp scas clc (bad) jmp jo andl ss jmp jl (bad) (bad) fistp sub pushf dec addb pushl punpckhwd pop mov sub pop inc mov addr16 or (bad) (bad) jge add out cmp ljmp xchg inc lea push sbb add mov lcall add imul mov jge cld mov xchg add cmp mov (bad) (bad) decl add test xor shrb mov cmp push jbe jnp sbb (bad) (bad) mov cmpsl inc xchg and int sbb int3 jae and pop and cmc jmp lcall (bad) nop mov xchg fildl adc push sahf std or xchg sub scas out (bad) ljmp clc imul loopne push dec pop xor sub lds add (bad) lcall sub pop sbb xor (bad) xor or fild out inc pop add mov sarb mov dec icebp xor setne inc and xchg jo jg sub xchg push xchg pop (bad) aam push loope outsb mov insl inc dec dec push cld (bad) mov cmp jae scas jbe push (bad) mov lock mov cmpsb and icebp sbb mov jle (bad) (bad) (bad) fimull mul clc adc ret jb ljmp stos lret scas push dec mov cmpl (bad) pushl cmp aaa (bad) mov mov test je (bad) sbb ret adc movsb adc sbb (bad) xchg or xor sahf loopne int3 (bad) xchg lock jg fcomip xor popf pop das sub pop pop outsl mov (bad) (bad) incl and (bad) call cmp xor mov sahf xchg or (bad) decl pusha loopne mov lock xor sub cli sbb shll (bad) (bad) decl mov outsl xor and cmpsl xor dec pop cmpsl fs jo mov mov pushf imul (bad) (bad) decl dec xor dec (bad) mov push jecxz push mov adc xlat sub in pop add dec inc enter mov adc and (bad) call mov dec dec outsb aas imul mov cwtl loopne (bad) (bad) cmp mov sbb add and sbb lock pop fsubr inc ljmp mov push shrl fildll std mov push inc test repz les sub jl cmp mov adc push (bad) call push ret dec (bad) cmpsb int3 mov xor or push mov (bad) (bad) (bad) pushl jne lds cmc out mov stos inc jb jns gs pusha out das pop add (bad) mov jp mov jbe push lahf sbb gs mov jg dec iret lods xchg mov adc pop call (bad) (bad) (bad) pushl xchg das sarb cwtl push or push enter (bad) lock mov pop xchg xchg jae into and sar incl shrb cmpsl or jbe iret stos xchg inc or mov pop dec mov push xchg lods inc cmc and (bad) call aaa sbb inc push push xor mov in dec adc (bad) (bad) (bad) out dec (bad) jae or cwtl inc (bad) sub hlt adc fildl push dec sbb push in ja push inc das cli (bad) (bad) mov or jb jg into ret ret stos xchg adc pop cmp mov jo mov and and mov aad adc std fcomip jecxz or add mov int les outsl data16 (bad) xor mov (bad) jo out xchg (bad) mov aaa cltd mov cmpsl cmp push je (bad) (bad) (bad) jg jmp insl jecxz test add in int3 lret jmp out (bad) incl mov movsl pop repz sbb aam xor call test mov fisttpll call xchg inc push adc in push inc mov in outsb cli (bad) (bad) mov out jp dec sar inc sbb xchg fs loope mov or fisttpll lock call mov dec adc push mov fwait test fisubl push adc (bad) (bad) (bad) lcall push (bad) inc pop sub (bad) mov push in data16 ficom sti movb sub out idiv scas cli jns out insb cmpsb pop push dec (bad) ja xchg jns call loopne dec (bad) (bad) (bad) call inc cs mov inc (bad) jb mov fwait push aaa jge imul mov lcall fist sbb add ljmp (bad) decl add add sbb negl outsl jo (bad) (bad) (bad) (bad) mov ficompl mov loope pop cmp mov cltd inc xor jb pop and xor (bad) (bad) daa push (bad) sbb sahf or push cmp (bad) (bad) (bad) mov cld and sbbl adc mov (bad) (bad) decl in jne call jg cmpsb jp in and jae jmp out lahf (bad) (bad) fcomip pop das dec pop cli xor cmc sbb push mov imul ljmp std lahf mull cli cmp (bad) call ds loopne cmc cmp loope test jo orb dec sbb fisttp dec mov out out shrl push cld jmp adc mov std jmp jb adc ret popf (bad) (bad) (bad) (bad) out jbe jne inc add clc mov popa es pop mov xor cli sbb shlb (bad) (bad) call pop cltd cli out ja sub push ss jecxz fcoms cwtl push aad jbe mov call rorl add sbb into xchg ss and inc mov (bad) (bad) decl lods adc (bad) pop das cltd mov (bad) or clc negb fwait mov (bad) ljmp mov popl push adc cwtl repz adc (bad) (bad) (bad) mov rcr fcoms mov pop ss adcl stos mov imulb aad lock push pop lds cs sub pop inc pop mov jo das xor (bad) (bad) lcall outsl incb jg ds stos addr16 mov lahf lods xchg and scas sub (bad) jnp add cmpxchg or xchg in movsl jnp and (bad) sub pop out testl call fimul hlt aam loop jo dec dec aam in mov pop sub rcl addb (bad) call std ret mov sub sub jmp insb add leave neg push pop sti cld movsl pop and mov in jb (bad) (bad) (bad) mov inc aaa dec outsl dec mov adcb int xchg (bad) mov out dec lock xor out push dec (bad) (bad) (bad) ljmp nop add adc inc push push pop mov (bad) mov sbb sbb stos jle and in dec mov xchg adc lret cmp call mov dec and xchg sbb and imul nop (bad) bound mov cld clc (bad) (bad) (bad) in jne inc ljmp jbe imul loope iret xor arpl mov rcrb mov aad jb (bad) pushl xchg js jne add test roll or (bad) (bad) (bad) (bad) cmp jp bound or xchg movsl jp sub stc xchg das ret lret in cwtl xchg and and mov movsb mov (bad) (bad) (bad) jmp and and pop mov adc mov push push ret repz les mov pushl test cmp jo cmc lods inc pop sbb ljmp rorb xchg and xchg (bad) stos xor mov jns add jmp das inc mov popa push int3 (bad) xor lds push jne or (bad) (bad) lcall test xchg sbbl das push cmpsb lahf push icebp rcrl stos in mov (bad) incl std jbe iret push pop stos shl push lods jecxz into or fwait jb div cmp xor (bad) lcall je and lahf pop (bad) aaa in cmp push add arpl ja jg xchg (bad) jmp mov fs sbb cwtl dec xchg cmp fisttpl mov sbb xchg add pop fcomi push pushl pusha sarl cmc dec pop fcompl out data16 (bad) call incl lods das mov aas jae stos stos or cmp cld mov xchg dec not ljmp xchg clc sbb dec popf outsb ds sbb pop pop (bad) ljmp insb cwtl icebp jge (bad) (bad) ss mov or and pop fnstenv adc mov inc push xchg dec (bad) lret loopne jnp or fisttp es jecxz (bad) (bad) (bad) decl and cs aaa popf add stos lods and fiaddl inc movsb (bad) (bad) (bad) (bad) fsubrs lret mov cmp add adc mov ds push dec cmp imul dec sub mov in (bad) ljmp mov mov and push ljmp jae cmp push in clc mov pop push pop ja lods out incb cld cmpsl in out cli lcall (bad) mov (bad) stos clc jmp push daa xchg mov xchg lret rol (bad) (bad) (bad) decl dec xchg mov sbb inc shrd mov adc pop fnstsw xchg push pop push mov in outsb sub mov daa push (bad) jno sbb in stos sahf icebp fiaddl (bad) mov (bad) (bad) ljmp mov dec push dec jle sbb mov sub push (bad) sub (bad) (bad) (bad) (bad) cmp ljmp sub sahf mov ljmp add pop sub pusha lea pop imul (bad) (bad) loopne xor into push dec cli mov les (bad) (bad) (bad) call ficomp popf int3 jl xchg jae (bad) repnz inc jecxz cltd loope gs cmp xor cli add imul pushl jns,pt adc test fisubrl ds push lcall shr adc rcrb rorb adc mov lcall adc mov scas xchg jb,pn stos sbb hlt push jmp sbb jbe mov adc int mov cmp pop mov inc call (bad) (bad) call out xchg sbb or mov inc movsl cmp dec lcall jg mov mov push sarb (bad) (bad) (bad) call mov dec rorb outsl sub arpl add inc xchg push sub pop lcall ljmp (bad) call cmc and aas in rcrl or lret insb lcall and (bad) lcall mov in adc mov adc push es lcall (bad) lahf sbb rol mov (bad) pushl xchg xor pusha sub je xlat (bad) (bad) ljmp xchg fst mov fisttpll mov or jae add int3 (bad) scas ljmp (bad) jmp sbb fisttpl xchg call loope call pop mov out movsb ffree shlb out shr int3 dec dec add (bad) (bad) (bad) ljmp jbe push in xchg fdivs and fcoms dec por (bad) loopne (bad) decl and fiaddl mov out rcrl stc jl movsb (bad) (bad) call inc or cmc insb xchg repnz lahf iret test jno sbb cmpsl cmc jmp xor (bad) (bad) (bad) in sahf repnz cld aad xchg dec outsl push jb mov es lret xchg daa pop jmp (bad) (bad) call fisubr lret arpl jl dec mov inc jnp testb push insb clc pop xchg mov dec mov loop ljmp mov scas int3 dec stos popf mov lea push inc inc push push repz inc jecxz push and mov sbb in (bad) pushl adc pop sub push mov jnp and cwtl out xor fstl xchg (bad) (bad) (bad) (bad) cmp repnz sbb sbb imul in and or (bad) decl fadd inc dec loopne jl jae (bad) mov cmp mov sbb in jg insl cmpsl mov dec sub pop add jl test stos cmpb (bad) (bad) jmp inc sbb lahf popfw inc mov add mov mov clc jg ds into pop mov and adc loope (bad) (bad) ljmp lds (bad) xor lock inc (bad) aad push call pushl add insl ds movsl inc xor negl xor (bad) (bad) jmp (bad) icebp xchg movsl mov lods imul dec fisubrl nop rorb fistpl (bad) call out fnop sub in cmp aas pop pop adc call dec pushf int clc (bad) (bad) call jmp pop std gs mov add cli jge adc mov xchg mov mov push (bad) (bad) (bad) incl movsb fistpl sub add daa mov or sbb xchg fdivrp ret fstps out lds mov lock mov mov cmp sbb fdivr ljmp pusha js xchg fcomps add mov push ds rclb inc stos push stos in and or addr16 push shrb stc sub jns int push fstpl mov dec push (bad) out pop and jp pushl mov push ds cwtl enter movsb adc xor cmp (bad) lcall lret call pop xchg xlat fistl push mov push ja mov mov pop insl jmp or jle jb add cmp aaa cld ljmp loopne jnp adc aam sbb add push popa cmp cmpsb (bad) (bad) incl lcall mov repnz dec orb cwtl jmp or inc scas (bad) mov gs push (bad) mov pop sarl shlb sub fdivr out cli xchg fcoml push jp sub bound (bad) dec pop xor mov sbb sbb lcall (bad) jg push imul movhlps jecxz push cmp sbb sbb sbb lods mov (bad) call mov lock xchg inc add push mov mov push inc sbb and pop pop (bad) (bad) (bad) (bad) lcall outsl dec popa cltd sbb xor xchg stos sub lret add or (bad) xchg addr16 (bad) ljmp inc inc fwait and popa jl ret scas cli lcall (bad) push or aas mov (bad) (bad) (bad) decl jmp outsb cmc push das and fs ss enter or xacquire sbb dec (bad) xchg fwait pushf idivl push inc cmp (bad) pop test data16 test (bad) (bad) lcall xchg mov idivb lods xchg test push xlat aaa fwait push pop call pop dec adc ud2 mov test pushf (bad) xchg ret sub (bad) daa xor insb sbb repz inc jae (bad) (bad) (bad) decl movsb fiaddl aas out xchg xor xchg in adc xchg xor insb inc mov sub (bad) pushl push out xor out add or pop in scas xlat inc les push pop pop lahf (bad) decl insb les inc mov jo gs dec mov lcall cmpsl xchg imul sub loopne mov jb xchg fxch fwait (bad) in pop loop (bad) (bad) call jg jb mov (bad) jae lcall and pop pop xchg das sbb xchg inc lahf xchg sbb iret pop imul test push divb (bad) jmp sbb push mov (bad) mov push jle in pop ret ljmp and ds jge data16 adcb (bad) (bad) (bad) call int mov dec mov adc scas cld stc mov in aaa das aam xchg scas (bad) (bad) (bad) jmp mov push (bad) jae js push cwtl iret ljmp loop xchg das lds (bad) (bad) (bad) jmp xlat xor in js mov jmp mov xchg adc dec xor xchg sahf dec ljmp fcomps and push push push adc rcll sub jp (bad) (bad) mov divb shlb lds (bad) xor js test (bad) (bad) (bad) cli add mov mov adc pop mov jle lcall push sti repnz jnp les (bad) ljmp xor mov fdiv (bad) and test dec cmc aas xchg mov ds scas fdivrp cmp mov fsubl (bad) (bad) pop adcl popa mov iret rcrl mov push inc add pop (bad) loop cwtl (bad) (bad) (bad) incl outsb jbe popf dec adc xchg mov shrb mov or jg popa sahf fwait mulb push dec mov in cmp push and imul cld test xor mov (bad) incl xchg mov (bad) jecxz pop and sti mov jl push push (bad) (bad) (bad) incl loope mov out out iret jo fdivl stos jno lods and add out sub jg xor push lods movsl sti out lret mov push repz fistpll or clc push fstl nop sbb movsb adc jecxz dec xchg (bad) call mov (bad) mov sbb jg xchg (bad) (bad) (bad) (bad) cmp pop xchg cmc clc cld js aam push jne popa scas or rcrb leave push roll popf push sar jge cmp adc cmpsl pop sahf movsb dec fwait (bad) incb jo add pushl fsubrl mov hlt ds ds (bad) mov hlt scas cmp in mov shl push jbe test movsb add and imul (bad) (bad) ljmp jbe out or jecxz jae das aaa sub es mov bound sub (bad) incl push add push xor pop imul mulb xchg movsb test (bad) (bad) out push in shrl mov cwtl push (bad) das sbb mov push mov mov pop addr16 (bad) lcall fisub mov es sbb std dec stos push adc xchg mov sub (bad) (bad) call mov test inc out (bad) push add mov sub outsb popa mov (bad) (bad) pushl cs aas and or adc ret dec out out xor ljmp xlat fbld test popa loopne (bad) aas mov adc mov dec lods mov scas push (bad) (bad) (bad) (bad) mov fs sti sbb add ss fucomip mov fldcw popa rcl xchg (bad) (bad) ljmp mov movsb inc and movsl jp orl je pop int3 mov loope mov mov repz (bad) jge sub test (bad) (bad) call das mov aaa mov hlt xchg mov inc rclb and push mov push into (bad) (bad) fcmovnbe sar (bad) (bad) (bad) fistl fs les int3 pop lret lods mov inc mov mov jmp insb inc clc (bad) (bad) (bad) call imul test mov cltd sbb jmp mov outsb (bad) (bad) (bad) lcall xchg xor inc mov adc jmp mov sub daa dec cmpsb mov (bad) dec mov and fsubl or cli (bad) (bad) out push xor push push and push sub sahf mov xor cmp dec clc lcall in sahf cmp ds mov iret (bad) or pop icebp ljmp fild leave cmpsl dec sbb push cmp enter insl jbe inc jg (bad) jmp (bad) addr16 mov push mov fstpt andl imul (bad) (bad) jg ds pop jmp xor lret and daa and and mov (bad) lcall cmp fwait imul test lahf icebp dec js test mov fnstenv (bad) decl pop repnz icebp lock adc cli aaa stos (bad) (bad) mov add push cmp mov stos dec test push hlt (bad) (bad) (bad) jmp and add mov cmc xchg jmp pop and es movsl stos add out (bad) (bad) (bad) incl mov xor and jo pushf xor push popf nop les rcl out sbb (bad) mov xchg negl xor mov test hlt push hlt (bad) (bad) jmp pop mov iret (bad) out push dec add add aaa arpl or stc es scas test mov adc push cmc in decl xor or lahf insb out jbe push and das jp (bad) (bad) lcall into sti clc adc mov in nop and xor es out (bad) inc std mov incl dec xlat adcl int3 sti sbb repz mov (bad) call jo and sbb cwtl mov lret stos insb stc adc jno clc (bad) (bad) jmp pushf notb and jmp sbb and test (bad) (bad) ljmp out mov add push mov inc jns fimull loopne xchg rorb inc dec dec imulb hlt addr16 stos (bad) lcall stos dec pop xchg sbb adc outsb sub addr16 lods adc lock (bad) (bad) call call dec dec loopne mov data16 negb mov cmp aaa fdiv add out cmp xlat jmp mov enter add dec sbb repnz adc push mov (bad) mov insl or fistp sar (bad) (bad) lcall loopne (bad) jg push mov stos pop and mov sbb fwait daa push enter aaa shll add sub enter (bad) xlat push xor es xor mov jl pop mov push xchg jo push loop in ret cli or mov and loop pop xor dec scas mov (bad) mov sub call call loopne sbb clc add out and mov dec sar jmp xchg pop test sub in xchg ror sbb (bad) (bad) (bad) (bad) jg cmc jo sub adc push in cmp push adcl pop inc mov (bad) (bad) (bad) pushl add cmpsb call stos cmp and (bad) mov adc mov std incl mov pop (bad) sbb fbld and cwtl dec stc (bad) mov lret pop out mov sbb jo mov dec xchg aad sbb arpl test cmc (bad) (bad) call adc and adc scas jmp mov std (bad) incl insb sub outsb pop scas (bad) rep fist xchg mov (bad) (bad) incl add or lods popf jp jae dec je push sbb fcoml push cmp pop pop jns and movsl std mov mov std mov (bad) (bad) (bad) mov and fldenv pop sahf push pushf mov pop es iret and call mov mul leave xchg pop jnp bound and ret lret (bad) (bad) (bad) ljmp or mov add fdivp sub jmp xor insb outsb xor xor (bad) (bad) (bad) (bad) incl nop shlb je xor xor jae dec push fidivl push movsl cmp and jbe lret (bad) (bad) ljmp inc paddb adc inc and bound loopne dec push xchg hlt add cld js pusha and ds or ljmp test dec aaa mov xchg sbb sub push out (bad) (bad) (bad) jmp sub cmp jnp,pt jp movsb cmp lock ljmp imul (bad) (bad) (bad) jmp mov negb clc in adc add fsubs jg fwait cmp call sbb fcoml and jl imulb push push std jg inc mov repz clc in outsl mov (bad) cmp jae int3 dec call stos add and mov mov mov pop and bound lcall jae fidiv (bad) (bad) (bad) (bad) jmp inc or add out xor out int3 add xor sub push add pusha into bnd fidivrl mov mov add add sbbl ds push sub inc mov pop pop mov push (bad) insl jecxz lock out sti gs decl icebp or addr16 and sbb jp (bad) (bad) (bad) fistpll jmp jecxz fild fstpt addr16 test or call stc lock (bad) ljmp and xlat mov push pop imul cld nop fcmovnbe xchg fcoms pusha cld or fisubrl insl push mov pop add cwtl xchg add mov sub dec addr16 mov das clc ljmp std scas push and add cmp (bad) xchg fstl out lcall (bad) (bad) decl bound (bad) mov mov mov rorb mov into jno pop (bad) decl nop mov addl (bad) (bad) ljmp cmp in cltd addl pop or sti (bad) push or mov fistp (bad) (bad) call das aaa es cltd daa or pusha sub (bad) adc cld dec fdivrs mov pop icebp cltd mov flds or mov repnz xor int3 and ja call cwtl je sarb pop fsts mov mov mov (bad) (bad) lcall pop (bad) fcmovne pop sarl sbb insl cmpsb add mov xor ret loopne int les shr (bad) mov sbbl (bad) daa imul inc fstpl daa call repz xor sarw call (bad) cmp (bad) or push push aaa sub lds (bad) (bad) (bad) call ss push adc inc xor dec repnz or movb (bad) (bad) (bad) (bad) out lods out les ret pop xchg sbb mov pusha rolb sbb push insb das or lock (bad) (bad) call imull ljmp sub dec pop jbe lods jnp adc (bad) (bad) (bad) jmp les jns xchg les mov mov int3 push push in stc pop enter adc dec xchg (bad) incl sahf cld inc test test fnstcw iret popa (bad) (bad) (bad) pushl mov cmp loop mov or out push ds pop gs aad (bad) (bad) (bad) mov mov sub jae loop dec push or data16 repnz loopne jns (bad) (bad) incl pop push (bad) fildll shlb arpl and dec or pop mov mov push pop jmp xchg and fsubrl andb (bad) ljmp push sub fs je xor cmp sbb shrb (bad) (bad) mov xchg jbe pop mov imull mov inc (bad) mov cltd fsts inc lcall push rcll push (bad) jbe fwait mov cli (bad) (bad) pushl into push shlb or subl sub fildll (bad) ljmp jle push scas das ret (bad) fidiv xor popa addr16 in mov addr16 (bad) decl pop mov push cmp andb dec xor (bad) (bad) jmp jp push adc scas test and (bad) ret imul fwait push mov mov (bad) lcall loop xchg loop dec cmp push adc out pop inc nop or mov test punpckhbw fcomip ljmp (bad) dec push cmp jnp sbb push mov sbb (bad) (bad) (bad) pushl jo xor sub jmp mov in push mov (bad) mov sti cmp and es push scas adc add ja mov fnsave rolb js mov or jae push mov cmp jmp sbb jb inc cld push xor lods das cmp insb js mov pop cmc inc or pop sub mov xor dec (bad) and icebp cld (bad) (bad) (bad) jmp fcomip or in mov ret clc inc das jbe jb daa in jecxz cmp cmp outsb iret in test enter lods daa aad or xchg cmc (bad) (bad) (bad) pushl inc pusha movsl xchg je sahf iret mov test or orl cs cmp das ds or scas (bad) (bad) (bad) ljmp cmpsb ret repnz into and cmpsb loope lret mov sub out push jb mov xchg pop cli mov loop jmp (bad) stos mov mov push pushf das xchg enter pushf xchg jg mov loope test jb and push bound movsl xor sbb (bad) jmp loop push iret cmpsb pop call fwait iret jbe mov push mov scas xchg cmp (bad) (bad) (bad) lcall mov pusha pop sbb icebp cmp push xor mov mov jecxz add pop icebp incl mov sbb lcall loopne out adc pushl sbb xchg nop xlat sti xchg fadds fisub lcall addr16 sbb mov daa fistpl or (bad) (bad) cmp jecxz sub into mov cmp sbb sub cld (bad) daa lret mov mov fs cmp (bad) lcall movsl jp lahf xchg sub pop sbbl pushf cmp popf scas (bad) mov mov xchg push out into out callw mov push test lods arpl push ret nop clc (bad) cli mull mov xchg pop pop ret rolb int (bad) (bad) (bad) incl in (bad) scas mov aaa lock adc inc lock mov mov mov add (bad) (bad) call divb jle inc mov jp inc dec mov mov mov adc ss cmc fldt xchg xchg aam mov test xor ret jno push pop dec lcall nop pusha xchg out int inc jo mov fistpll pop sti mov ret fsubl std jecxz xor xchg xor jae shr (bad) aad movsb ljmp push or cmp les je (bad) (bad) call fidivrl ljmp xchg pushf loopne pop cmp jp aas or or pushl add sbb mov push cmp fwait insb popa add push idivl inc pop (bad) incl push out adc lock and arpl std xor (bad) decl xlat sbb jb std std pop loopne xchg and clc popf inc inc push (bad) (bad) (bad) decl xchg enter pop jecxz pop fdivs aam ret adc cmpsl jp xchg xor imul rclb ljmp lret ja and mov popa push xchg mov loope jg mov popa int3 in pop outsl jmp cmc (bad) (bad) (bad) incl or pop dec out ljmp inc arpl pop add (bad) aaa lahf sar (bad) jg arpl fcomps pop aas adc mov lods sahf movsb mov outsl mov jno mov mov jge sbb inc decl test inc fsubs clc inc or sub push push or rolb mov (bad) ljmp jge sbb sbb es mov inc mov lds std ljmp enter jp andl push cmp jne ret add mov sar (bad) (bad) jmp fcompl xor ljmp nop mov fimul pop xchg (bad) call sbb popa or adc push mov shl sbb (bad) (bad) lcall aad sbb fsubrs add dec dec inc adc call ds jle sbb push scas outsb and (bad) sbb push sub loopne das xor cwtl push pusha xor sub pop mov or not ja nop cwtl mov mov jbe and (bad) lock arpl sbb (bad) lcall out and icebp test fsubrs sbb fwait jmp fadd adc incl jmp lock xor inc push add mov cld cmp mov repz aas mov shlb subb out (bad) (bad) (bad) (bad) fnsave mov pusha lret add rcr cwtl lds sub dec mov (bad) jbe pop (bad) (bad) (bad) ljmp mov mov hlt dec stos fmuls out vxorps dec push bound shld sbb (bad) divl xchg (bad) (bad) (bad) (bad) jge jle inc or adcb fldl ljmp pop scas repnz (bad) jmp out push cmp outsl xor pop pop ret and inc dec xchg std int3 sbb inc mov (bad) (bad) lcall out pop lret imul lret xchg xor popa lods xor xchg enter lods (bad) (bad) (bad) (bad) ljmp xchg ret inc mov mov xchg out dec mov cltd repnz pop std inc mov (bad) (bad) lcall jmp shrl mov cltd or daa pop daa imull (bad) (bad) (bad) pushl (bad) cli mov add (bad) lret (bad) xor and sbb adc (bad) jp mov push js scas push scas scas les lods insb dec cmc or jp clc loop lret icebp pop and pop (bad) js push cli stos dec ret sarb cmpsb std addl aas fistpl xor fimul or out push test popa jmp in xor push jne sub lret loop add movsl xor pop movsb adc ret divl (bad) decl add bound jl pop mov shlb neg (bad) jg jmp rcr fcmovnb gs or sub or push sbb aaa sbb xor incl jne out sahf mov lea (bad) (bad) mov mov pop jle subl dec cmp shrb repnz or (bad) call xor out repnz (bad) (bad) call out mov and push pushf jecxz bound mov (bad) mov insb flds dec mov mov out ds mov (bad) (bad) (bad) ljmp jo scas mov int clc nop mov jnp sbb fistl jo call (bad) (bad) mov cmpsl bound in inc mov icebp sarl pop mov out pop std add push xchg mov repnz fdivrp (bad) (bad) jg arpl add add fstps and hlt jbe mov (bad) (bad) call cli mov imul push adc push sub cwtl ret loopne (bad) ljmp cmc pop test je fdivrp cmpsl inc or (bad) (bad) incl fiadd adc lods pop mov push insb movsl movsw dec pop xchg bound and (bad) inc outsl ffreep sub dec jg rcrb fs sbb mov outsl push sti aaa incl je inc test mov push clc stc imul adc (bad) (bad) jmp mov pushf mov mov or sub int3 aaa dec xor fwait push (bad) (bad) decl int3 fsubrs dec aaa adc jbe fistp dec cmp lret in mov gs jg or pop gs std rcll push arpl push mov pop hlt jo (bad) (bad) (bad) (bad) mov pushf pushf inc (bad) int fild jmp add rcl push pop popa mov scas sar (bad) lcall test loopne push inc iret sbb out addr16 mov (bad) call sarl mov lcall add or je (bad) (bad) jg imul jbe imul add mov nop popa cmpsl sbb (bad) (bad) cmp (bad) lret lahf mov cmp adc add popl mov jmp (bad) (bad) decl ficomp (bad) mov sub cmp iret cs adc lea jecxz push and ds pop cmp icebp std out enter mov sbbl mov frstor loop ret in dec mov (bad) (bad) (bad) fbstp (bad) dec dec in mov es (bad) cs mov mov fnstenv ljmp and mov repz sbb (bad) call inc jae ss inc stc movsb into jg std xchg cld xor xor call dec leave clc inc xor pop out or movsb insb jge (bad) (bad) (bad) (bad) jg je mov (bad) daa shr sbb js and out bound mov inc xor pop ljmp mov sub sar pop je push cmp fistp icebp mov fsubrl outsb ljmp adc dec stc ljmp les and cld (bad) inc or push adc ljmp push pop push add (bad) (bad) ds (bad) lock pusha imul pop movsl mov je (bad) (bad) (bad) jmp mov ficom dec sbb in pop and xchg lods stos pop icebp (bad) (bad) jg sub mov pop les pop loopne adc (bad) cmc xchg push scas mov sbb outsb cmp mov mov lods (bad) cltd and push ucomiss jmp lret mov out mov std insb ja jo lods jne sbb dec stc (bad) aaa or (bad) cmp and mov cmp leave lock push (bad) clc aad mov push mov je,pn sarb mov lcall rclb rorl cmp call push aam or std xchg sub push dec xchg clc (bad) call jmp lcall in or (bad) (bad) pushl mov psllq xchg and (bad) xor jmp push mov sti scas adc xor (bad) (bad) (bad) in std xor fsubp lods inc inc loopne int3 mov cmp jo rorb cs fcomip decl sub out cmp push xchg repz (bad) lcall fcompl stc cmp fsts push fwait jb gs jno je movsb (bad) (bad) jmp enter pushf and pop in mov mov (bad) (bad) jg ds cmp clc pop cltd lret arpl pusha std mov mov jb (bad) decl out cmp fdivrl cmc mov (bad) cmp mov das sbb leave in or (bad) (bad) (bad) (bad) cmp pusha test pushf shrb xchg fstps out into mov pop dec ss cmp sahf fisttpll movsb sar ljmp rol (bad) fmull shlb mov inc push hlt imul jne xorb inc cmpsl mov incl imul popf mull sbb (bad) outsl jg shll fs out gs dec jl stos cltd setp jmp cmpsl sub push or fsubl call add mov js outsl xchg inc iret mov inc adc cmp sub inc test jmp cmp jg mov int3 and xchg push loop ret loopnew adc fimul (bad) jle arpl ss cmc lahf fstp pop dec push xlat mov loopne jne shrl adc xlat (bad) (bad) (bad) (bad) faddp (bad) mov mov inc adc sub ret mov (bad) lcall dec shlb xchg inc pop movsb loop sub sbbl (bad) js mov (bad) (bad) (bad) jmp popa pop fnsave push pop lahf mov fs xchg dec mov movsb dec inc adc (bad) (bad) lcall test int3 outsl aad jo mov std es and imul sar ljmp cli and gs cmp inc push sub std xor inc pusha pop ret cmc ret hlt or mov ds adcl loop mov scas mov shlb mov pushl fsubrs cmp mov cmpsb fcompp xchg loope bound nop stos push cld (bad) fcmovu push out mov xor or xor or adc cmc (bad) (bad) fldenv cs (bad) jns mov xchg rolb pushf cmp sub (bad) decl inc pop mov add mulb pop pop add inc aam pop jns mov push lcall (bad) (bad) fdivrp aam insb (bad) sbb lock in mov sbb jb aaa jp pop push iret mov outsb out out xor add in test mov xor pusha sbb and xchg subl in test mov sub cmp (bad) (bad) incl cmp pop jnp int pushf aas mov xchg ljmp inc in bound loopne adc inc pop mov push cmpl push nop es sub push enter (bad) ljmp ret sti mov jbe push ret gs cmp cmp in das inc and hlt loopne sahf and pop inc sbb aad stc xchg and sbb fcomip inc popa jmp aad dec in xchg push cmp lea (bad) ret ret clc (bad) (bad) (bad) jnp add in inc sub les jge pop insb sbb in fild jecxz into xchg jp push push mov add mov dec sbb leave sbb ljmp push icebp cmp cld (bad) jmp data16 mov (bad) lcall mov mov out cmpsb outsb aam lds sub mov pop cmc pop fnsave (bad) lret (bad) (bad) cmp pop cwtl ds repnz mov leave xor fisttp cmp fistl pop xor daa (bad) inc push mov notb mov push nop nop sti and mov xchg xchg dec mov icebp mov cmp and ds (bad) (bad) (bad) lcall lea out lret loop in sbb popl mov pop cld and sar cmpsb cmc xchg inc rol hlt adc lahf imul (bad) decl push stos xchg mov rorl mov popa aaa dec push dec div xchg xchg enter out (bad) in or (bad) (bad) incl addr16 and and cwtl imul (bad) inc xchg dec xlat sub jnp pushl pop mov add mov std mov mov sarl inc cmpsl adc decl (bad) imul outsb cmp mov mull jmp add pop or mov test rcrl add (bad) mov ja sub mov inc jne in mov dec data16 loope outsb mov inc fadds inc cld push clc xchg inc mov or in adc cmp inc out sbb shrl sbbl decl mov push xor pop push xorl inc push pop inc mov clc aaa mov (bad) (bad) (bad) dec sub jl mov mov (bad) or dec xchg daa outsb pop xor xor fldenv pop (bad) decl fdivs xchg inc dec cmp xlat mov xor pop (bad) (bad) ljmp and clc mov enter jo adc xor enter loope loop pop ret push dec mov lea or add or jo aad adc clc ror pop mov test add mov xchg bound rolb hlt xchg test int inc sbb dec inc push xchg (bad) (bad) mov adc imul push ds adc les cmc movl (bad) in sub mov les (bad) (bad) jmp push insb mov mov mov aad aam fisubr sar jnp mov add jmp (bad) (bad) (bad) (bad) jp push jg outsb adc sarb negb popf enter and (bad) in dec imul aaa fadd aad mov push jbe insl sbb scas (bad) (bad) (bad) (bad) in sarl fwait jo sbb addb or sub iret mov jne pop and mov mov mov or (bad) (bad) aas mov add push fsubrl lcall xchg ja pop lcall sbb (bad) xchg (bad) (bad) (bad) lcall popf lock push push mov jmp iret push (bad) mov flds push (bad) (bad) (bad) jmp out fimull ret dec (bad) push notl mov xchg lahf sub call (bad) cmp imull outsl mov popa aas lds fildl jbe xchg test mov (bad) lcall dec lods out xchg push and xor pop pop and (bad) call xor clc mov fcompl xor (bad) repnz push incl cmpsb xchg test dec or sub jb mov shrb push push mov (bad) call jb ds push mov hlt xchg and dec cltd jle mov out mov jnp lea lock inc add ds sbb lock (bad) fild mov mov stos inc clc sbbl xchg mov nop out repnz aam lds ds sub scas push push add (bad) mov cmp and xchg mov sbb xchg mov cwtl sbb cmpsl jo pop sbb sbb das test (bad) (bad) (bad) ljmp adc sbb fwait (bad) inc cmp sub mov ds sbb out pop or push pop scas pop push (bad) (bad) jg (bad) xor shrb adc movsbl fidiv lcall dec mov insb jo mov cmp fnstsw xchg sbb or push sub idivl (bad) push xadd repnz inc jg aas and and pusha and adc daa sti adc decl btc scas das into mov lods pop pop gs (bad) (bad) insl xchg leave pop imul icebp lcall adcl sbb divb sbb (bad) (bad) (bad) pushl loop lret and jg adc adc inc rclb mov push mov jo (bad) (bad) (bad) call inc push and push repnz cmc mov cltd jmp movswl sub (bad) (bad) ljmp jne lds dec add jns xchg lcall mov fildl inc incl in xchg fnop scas stos push ret jno loope jmp jg or hlt mov lcall inc std (bad) (bad) (bad) call mov jbe pop rcrl faddl sahf mov mov and loope sub out mov adc (bad) lcall mov insl data16 scas outsl and js ljmp xchg cmp pop add lahf xchg adc stc push mov imul sar (bad) mov in lret outsb (bad) mov inc cs rcrb fidiv xor (bad) (bad) incl push ds enter mov (bad) pop outsl and (bad) (bad) mov loopne adc jle or cmp (bad) lret (bad) pop scas xor jmp insb test jp adc ret cltd push mov add mov jae push push mov and xor lods fidivrl xchg aad popf in ss mov ljmp frstor test in out lods mov in in cmc lcall adc sahf ljmp add push cld cmp pop jb outsb ret pop (bad) aaa les mov mov mov inc nop test inc call add pop in aas jb dec (bad) (bad) dec mov mov in ss pushf test xor jle mov imul (bad) pop mov ljmp jns,pt shlb test jo sub xchg mov push fcomip (bad) call pop xchg adc pusha and jge jle lds lock (bad) (bad) (bad) incl les xor hlt cs inc shrb rcll (bad) pop mov or (bad) (bad) (bad) (bad) cmp cmp andl xor in mov dec jl cltd hlt ret (bad) ljmp test stc rol out sub xor mov insb (bad) aam pop lret push or mov rcrl pop test testl call (bad) (bad) jmp cltd icebp rcrl fcoms pusha or lods xor hlt xchg mov pop cld int3 (bad) and loopne movsb faddp (bad) xor adc inc loope sub push adc fild das scas movsb sbb lcall ficompl fwait call aaa adc pop lods push loope (bad) mov mov pop or xor ficoml movsl cmpsl push xor mov xor negl ds dec (bad) lcall (bad) in cmp fwait cwtl mov in dec cmp in push jg decl test push add sub lods jno cli mov jnp (bad) (bad) decl sub mov stc dec mov mov gs (bad) decl mov xchg inc sbb outsl ja jmp flds dec repz cmp and sub icebp subl push and ljmp push aam std (bad) push cmp aaa ret sarb mov jp xor test (bad) repz aam test (bad) (bad) (bad) decl and mov xorl cmpsl mov xor push stos push sbb (bad) (bad) (bad) ficom lcall jae jg sbb sub pop pop or jbe mov dec dec adc (bad) (bad) ljmp jmp jge icebp adc (bad) movsb idivl fldenv lea or (bad) (bad) (bad) call int3 into hlt jb out (bad) push sbbl or js js je xchg push push hlt push sahf mov jmp ja push test shlb pop (bad) fbld incl cs ds xchg inc and (bad) (bad) lcall enter xchg or xchg (bad) jae push mov lods xchg and lret daa and addr16 in push xchg sbb jle xchg das pop fwait (bad) cli jp mov sbb pushl aad jbe ja mov sbb cmpsl push imul jecxz lock scas bnd rcrb movsb pushf imul sub (bad) (bad) (bad) lcall les loop subl pop mov js mov fstl sbbb inc nop iret lock push sub ret fidivr push dec mov mov (bad) sub inc (bad) jg sbb sbb mov push icebp and (bad) (bad) fildll jae (bad) xchg subb (bad) xchg fidiv out add jl idiv push add jae pop stos cmp jns inc cmp add outsl mov jnp push pop sbb jno mov cltd (bad) dec adc pop rcll movsl cli (bad) lcall in les cli dec jge push jle mov xor mov dec mov jmp mov jecxz dec lods pcmpgtw pop cmp (bad) (bad) jns mov mov add jnp mov repz jno or jnp repz les scas stos pop push (bad) (bad) (bad) decl add les or or shrb adc test and cs (bad) (bad) decl cmp stos mov pop xchg sub pop pusha pop sub inc and into sbb andb xchg (bad) mov (bad) dec subl aam data16 sub xor shlb adc (bad) (bad) (bad) fsub push das push mov jnp push adc xor cwtl mov lds pushl push adc (bad) outsl cmp lds (bad) ds (bad) (bad) decl mov adc sub xorb repz pusha jp out out mov jmp (bad) (bad) (bad) ljmp push pop mov dec mov adc popf frstor and xor xor loopne xchg dec test andb add (bad) nop xorl dec ds (bad) (bad) dec inc inc cmp lret pop sub cmp jb add push (bad) pop mov stc dec (bad) pop add (bad) stos aas sti int jne or push xchg aad icebp jg mov mov imul cmp dec or addr16 or out movsb adc lea lock pusha xchg lret pusha (bad) (bad) (bad) jmp shrb mov lcall add pop flds jmp mov lcall jo adc (bad) pushl out int push in addr16 test sub inc int3 jge adc (bad) lcall mov mov sub data16 mov add clc jg push mov orl cmpsb data16 out jo (bad) decl aas fcompl lods mov fldcw mov gs iret adc (bad) (bad) (bad) lcall int add dec stos (bad) int3 neg inc cmp fs or xchg sub xor fdivs mov or loop test cmp (bad) incl push call test sub inc dec sti jae,pn mov popa lret cli (bad) lcall mov (bad) pop mov xor sar mov pop xchg ja cmpsb sbb sahf orb aad push nop test sub mov sbb inc ret fistp jnp lcall inc ds adc aas es imul (bad) decl mov pop inc jns loopne xor mov push jp iret add (bad) ljmp mov push push rcrl fild and cmp call imul call inc push jmp sti xor dec imul popa push xor adc outsl jne (bad) adc pop xor cli dec adc add or pop fisubr (bad) call pop jp add js add mov and ret pop js dec cmp mov sub push (bad) (bad) (bad) jmp jmp adc mov pop jl xchg jno sbb and (bad) (bad) ljmp lds in movsb hlt ficompl or mov mov add push sar pusha cmp outsb mov ds test clc (bad) call in iret add ret into ficoml scas stos pop test jge bound mov (bad) (bad) jmp ds dec jne dec (bad) fldcw scas data16 fs jae xchg addr16 test xchg rorb (bad) (bad) (bad) decl push in fldt (bad) aas lods xchg aas inc mov sbb fwait (bad) lds cmp (bad) pop (bad) (bad) (bad) decl leave in je call lcall mov sti pop or (bad) (bad) (bad) ljmp dec sub (bad) jno jmp xchg dec inc cld js and (bad) (bad) pushl lahf mov cmp cvtps2pd ficomp test sub cmpsl ljmp popf repnz (bad) into pushf add pop jnp aam enter push jnp rorb jmp in inc out and stc push imul xlat jno inc (bad) (bad) decl push mov stos jb or or mov xor inc or clc mov shr lods movsb mov add out lds push push mov stos (bad) (bad) jmp and fwait jne,pn test fldenv ret mov mov (bad) (bad) (bad) (bad) cmp sub lahf mov xchg xchg (bad) mov je mov mov add and jne xchg insb sbbl mov adc test push cmp (bad) jg dec jb movsl xchg je iret adc jae sub push sub std push push jle daa pusha cld fs repnz icebp sahf sub inc dec jns std and fidiv pop outsb jecxz mov outsl sub dec lods push push sub in aas inc pop ds pop (bad) jg dec ds out mov das (bad) jle sbb stos (bad) (bad) (bad) call xchg or mov xor ret mov vpsubusw pusha sub and (bad) (bad) jmp xor (bad) mov sbb sbb push outsb out jnp in jo movsl cmc (bad) (bad) (bad) decl or pop jbe add aam xchg imul clc (bad) (bad) (bad) ljmp std lcall jecxz xor les adc jmp pusha pop pusha xor (bad) (bad) mov (bad) pop sub fildll (bad) jmp mov imul mov sbb leave adcl (bad) std repz push pusha cwtl stos xor pop outsl pop fs mov call divb mov jne test (bad) lcall leave popl daa cmpsl lods (bad) add lock jle fstpl cmpsb out test cli dec loop movsb adc in mov out sbb shrl out jl sbb fs dec fstpl jmp mov sbb jg out fs (bad) mov sub adc and mov push or ljmp ljmp pop outsl pop pop jae pop js es mov dec rcrb testl pop jmp out xor sbb (bad) xchg idivb (bad) fbstp dec movsb fdivrl lahf nop loopne inc movsl imull daa (bad) test xlat mov dec sar fistl aaa xchg cli ds jmp sbb fs add arpl (bad) (bad) (bad) js jl cmpsb adc xor mov stc (bad) stos or insl adc xor ret sub loop js mov clc (bad) fbld xchg es sbb nop mov jo out jmp or lret mov adc jne sub pop push (bad) (bad) (bad) (bad) ljmp push jo pushf sub rorb cmpsb push jae inc sub mov scas jmp xor ret icebp fucomip (bad) (bad) (bad) jmp adc (bad) inc cli pop popf aam jae rcl stos jno jo sub mov (bad) (bad) push jecxz test icebp dec outsl and cmpsb cld pop icebp jg int ret mov outsb pop sub (bad) (bad) ljmp jl lods faddl xchg xor mov jno jp xchg scas or gs (bad) mov ljmp insl mov xchg fistpll mov mov jmp icebp mov push or xchg test (bad) cli dec lock (bad) jbe xor (bad) (bad) (bad) pushl (bad) or scas mov daa scas test je inc cmp xor ja bound cli (bad) fimull jecxz data16 insl pop pop cmc ss sbb (bad) (bad) cmp and (bad) jmp sub (bad) (bad) (bad) lcall mov mov inc adc push dec or aam xchg shr (bad) (bad) call jecxz mov or imul sti sub daa and imul push into push or pop pop into add (bad) pushl sbb ret or pop adc mov lahf movsl les push sub mov jle mov ret cmc mov (bad) jp aaa popf or cmp enter inc or (bad) (bad) (bad) (bad) clc fisttpl mov cmp pop push pop sub popa mov call aaa lcall add xchg out push cmp mov pop mov sub jp mov test jo inc cmpsb xchg stc into mov (bad) ljmp dec mov pop lret mov (bad) mov roll (bad) pop lods dec daa and mov cmpsl jae mov es xchg outsl mov xchg inc clc xchg (bad) mov outsb mov lcall or sub mov rcl test xchg lds in mov sbb clc (bad) (bad) call jne jbe mov sbb iret mull popf lock push jmp (bad) mov push aas push sar loop and sub mov sub push cmpsb lock push pop ds sbb (bad) jp inc inc dec ljmp leave fidiv popf dec adc (bad) mull imul xor test movsb idiv mov outsb xor jg movsb leave mov mov ret cmp (bad) (bad) (bad) push scas pushf fnsave outsl aas mov aad pop sub bound or (bad) (bad) cld lret inc sub sahf adc jns xchg dec iret (bad) ljmp test sbb pop inc aas jae cmp sbb push pop fild incl dec aam iret and mov dec mov fsts ja cmp mov adc int3 lahf add mov sbb bound inc rclb dec add pcmpeqd and out xchg jnp sbb ss pop std inc jbe mov stos jg cmpsl or repz pop cld (bad) (bad) out inc sub iret rolb pushf rcr cmp into pop dec test stos cld out adc ljmp push loopne sub ffree xchg add leave rclb (bad) int3 jae sub in dec mov xor xor call shll jnp int3 pop sar jmp cli push leave push lea mov (bad) jns and cmc addl (bad) (bad) inc nop mov div mov sub mov idiv in pop (bad) sub fisttpl dec sub (bad) (bad) (bad) call ja outsl ffreep cmp or inc adc mov loopne push adc clc rcrb int3 fisub mov dec sbb sbb (bad) (bad) pushl add out les push loop popf pop adc popa add mov (bad) pushl pop mov and inc pop xchg cmp loop aaa mov loopne mov jmp adc push xchg movsb sbb movsb sti pop add push sbb fwait push (bad) (bad) cmpsl push cli cmp lret cmpsb popf (bad) (bad) (bad) mov dec mov mov ljmpw xlat mov mov test jbe push mov (bad) (bad) (bad) decl mov js xchg shlb xchg in mov pusha (bad) call mov mov bswap or (bad) call std dec sahf xor mov jbe loope pop int mov insl icebp mov shl (bad) (bad) (bad) pushl sbb rcrb ret pop push pusha xchg aas pop push add pop or (bad) (bad) mov jno ret lahf inc test pop aaa mov jmp (bad) (bad) (bad) ljmp and adc pop mov mov int inc or jbe leave push enter (bad) jmp jp inc mov inc repz cmp into mov push cmp sub inc and lods cmp lret aad mov rol aad lcall jmp int3 cmp adc mov std ret sar pushl popf lret dec xchg mov lret jae lahf and aam mov test mov loope xchg push cli fstpl pop push cmp lret (bad) mov cmpsb adc adc jbe (bad) (bad) call add pop push rdtsc outsb (bad) das adc mov in stos mov (bad) xchg xor jmp jne mov das clc (bad) incl es stc push mov jl xor fild ficomp sub pop arpl aas cmp lret movsl xchg push adc mov int push pop insb daa (bad) inc inc outsl xchg (bad) lcall movsb scas inc or sub push loop (bad) or jmp push fcomip xlat incl add popa mov cmpb xchg aam lea and xor popa lods pop jnp andl iret xor sarl insl dec inc icebp xchg outsl gs (bad) (bad) incl jae sub lods mov push adc add in xchg mov sub (bad) lcall sbb into or sti cmp jb (bad) (bad) (bad) pushl imul or sbb pop xor push sbb lds fs (bad) (bad) (bad) (bad) ljmp cmpsb in decb dec adc pop fcomp dec mov jo insl xor push mov dec cmc adc outsl incl xor loop mov xchg bound jae je jg jb (bad) fildll fildll dec jl (bad) jp or dec data16 adc out (bad) (bad) push mov arpl popf dec dec push nop sub fildll fs es (bad) (bad) (bad) (bad) cmp xchg ja fcmovbe mov sbb pop mov nop in pop dec add xchg add (bad) mov lea pop js daa xchg dec data16 outsb dec call (bad) (bad) cmp popf push cmp mov stos daa aam mov mov jle int3 xchg inc int decl or stos in test sbb push setl xchg into xchg add lock cmp mov pop lods cmc cmp push xor inc lock inc push (bad) jg jg ljmp dec repnz jns inc mov lods cmp mov (bad) (bad) call adc aaa cmp test cmp pusha ret jbe jl (bad) (bad) (bad) mov and leave and int3 scas hlt rcr shr sbb loope les cmpsb cli mov mov xor out jbe mov cmp add pushl xor mov or xchg jmp imull sbb call std add sbb jp daa mov mov (bad) mov jp mov (bad) (bad) (bad) decl push cmp (bad) (bad) sub dec mov int add ss jmp or push mov fsts sub push aas js pop mov pusha repnz (bad) (bad) jg cs and aad sub repz mov lret jmp clc into insb movsl outsb mov pushl stc mov dec scas es xchg pop je (bad) (bad) (bad) lcall inc xchg fwait pop jns pop scas sbb lret push pusha cmp cli gs notl mov (bad) cmp or xor (bad) and (bad) xchg jno mov adc or jge jl lods jge mov arpl sub mov sbb or ljmp into push flds movsl pop mov sub lds lahf or adc je lods movsb pop fs pop mov pop mov pop clc or dec out (bad) (bad) ljmp addr16 mov cli and leave and fnsave add pushf jno es (bad) (bad) decl enter jecxz push ja mov jecxz in mov test (bad) cli (bad) (bad) call adc jns push stc xor aas aaa and mov xchg cli jb mov cmp push ljmp jle push mov inc pop shlb nop mov add (bad) (bad) (bad) call inc int3 sub icebp and dec add jbe mov pusha dec dec mov push icebp iret icebp mov cmc idiv (bad) mov insb cmp add lods rcll aad xor and std (bad) jmp xchg adc test roll or add pop mov mov ljmp mov notl push sub push ss jnp cld (bad) hlt (bad) (bad) (bad) mov inc mov cmp cmp cli mov jp cwtl pop mul stos mov pop loopne mov push sti jbe nop jb cmc dec mov ss arpl (bad) into (bad) (bad) (bad) (bad) (bad) pop lcall pusha sub jnp roll add enter mov cmp push push lret dec lock cmp sub inc push pop lahf mov (bad) (bad) (bad) jmp add cld addb mov pop scas jmp pop ja or (bad) sub pop (bad) (bad) (bad) ljmp std bound jo fisubrl dec les (bad) mov push pop sbb imul aam (bad) (bad) decl pop jg fistp into inc inc mov lcall mov fisttpl (bad) in (bad) mov mov jns cli cmp jo xchg cmc lcall or (bad) ljmp and mov push cwtl push (bad) add aaa je add (bad) jg mov sbb roll fiaddl daa addl and lods cli (bad) (bad) ljmp cwtl cmp xchg mov cld das and rorb sar ljmp pop ds inc dec mov (bad) xor ficoml fisttp ds rolb fmuls pop popa jg jno mov fidivr fadds and insb jmp jl (bad) lods mov (bad) call imul aaa mov pop adc (bad) fwait loopne outsb lret (bad) (bad) (bad) ljmp insl sbb xor pop jmp inc rcl lods mov sub loope add mov mov jbe mov xor inc lds ds (bad) cmp (bad) decl and xlat sbb mov int (bad) (bad) fcomip adc xor mul pop adc fwait cmc adc decb pop (bad) mov (bad) lcall mov lahf mov ja in pop arpl and data16 pushl std mov jbe aas rcrl xchg icebp out out sub sarb (bad) (bad) (bad) decl test insl push xchg movsl repz stc push lea scas rclb xchg lock pushl std movsb pop or js cli dec xchg insb mov adc jbe call ljmp lock add push ljmp push xor (bad) (bad) jmp push (bad) out cmp out sub mov mov pop test mov pop (bad) (bad) cmp push imul mov add mov adc std mov dec inc sahf or lods inc cld (bad) (bad) mov cmpl movsl jno repnz sbbl dec (bad) js xchg (bad) pushl or fcmovnbe xor jae add (bad) jb mov mov mov pop pop loopne pop mov mov mov add js out push (bad) mov mov push hlt lods jo pop xchg sub test fnstcw dec fiaddl decl loope ret or and test xchg sub scas clc incl xchg ret pop mov add sti dec mov mov adc adc lcall and fidivrl pop jns jae sahf fs jecxz fidiv stos xchg jecxz (bad) (bad) (bad) incl in or xchg enter dec xchg xlat cmp leave dec and (bad) (bad) (bad) mov mov adc inc xchg lret lcall sbb (bad) (bad) hlt (bad) (bad) (bad) dec inc int ss adc xchg fwait or xor dec jmp mov (bad) and (bad) out movsb cmpl outsl and mov sbb (bad) (bad) (bad) incl (bad) jbe lods sub lds pop or mov pop lds adc push fstp pop xlat add jmp shr das imul fstl outsb jne pop jle std xor mov nop mov nop lds jecxz pop insb imul (bad) fbld mov loop (bad) lahf fcomps shr jbe in xchg jb (bad) jmp loop sub sub cltd pop sub fnstenv les fsubl or dec ret (bad) (bad) dec push test xchg push add lret lcall adc xchg xchg sar xchg push jg xor jle sub fisubr loopne sar ljmp insl jno hlt lret pop lret jne (bad) cmp fdivrl or sti adc ljmp jo lea fsubrs aas xchg mov sub add xchg or adc repz push outsb pop mov or mov std loop bound loop jmp mov adc stos fildll xor mov incl cmpsl je xchg movsl cli sub jge int3 in mov mov (bad) (bad) jg inc sbb jne adc push pop inc imul repnz xor (bad) jl push xorb sub mov (bad) (bad) jg xchg negb loopne cld sbb fwait jb movsb test xlat imul (bad) jmp scas ret loop xchg data16 inc repnz lock gs js inc popf sbb and in push lock sub sub jl (bad) out ljmp mov jl mov push add (bad) (bad) incl push adc pop and cld imul (bad) mov xchg rcr fbstp adc sar add push sub adc ljmp call cld jg mov pop ret jns in cwtl ret (bad) lret idivb (bad) (bad) (bad) ljmp pusha fisttpll jne test pushf or inc scas cmovb lock testl jge lret and out cmc cmc ja (bad) mov (bad) dec loopne pop push fildl xor mov lock cwtl sub sti les sbb ds pop jb stos jb fwait icebp xchg (bad) lcall jno lcall or mov sub (bad) (bad) jmp fistpl and pop jmp xchg fcmovnb scas and sub outsb loopne (bad) jmp mov or pop sbb add sbb jle mov std (bad) call cli loope cmp pop test ds iret loop or ss (bad) pushl inc mov xchg sub jne inc pop adcb inc pop jmp cmpsl movsb fimul (bad) (bad) (bad) jmp movsb adc pop mov dec and and fs mov pop dec test and in call lret jmp out push mov xchg lcall fimull mov icebp cmp (bad) (bad) jge ss mov ret fwait dec aam inc gs shl aaa sbb inc jno mov jp jae mov add mov mov jae cmp frstor (bad) (bad) incl jmp cmp lods lret jnp (bad) sbb orb adc adc mov lods mov mov or in or cmpsb mov sahf cmp push mov sub repz mov xor loop cmp cs mov jecxz sub (bad) (bad) (bad) incl add mov mov mov rcll mov arpl hlt popw mov (bad) mov aam fucom stos inc push xchg movsl dec ja push add mov mov adc or xor dec mov push scas test bound loop es (bad) lcall dec adc add push stos sahf adc jnp jo sub (bad) (bad) ljmp imul jl jl adc and sub jmp push mov (bad) (bad) incl push mov or push (bad) incb ret fiadd sti adc mov (bad) (bad) decl (bad) stos mov xor sub das mov (bad) imul out push push (bad) incl fs outsb ljmp xchg fcompl (bad) dec or sahf xchg (bad) (bad) (bad) call mov push jge stos iret test loope,pt sbb repz inc jmp jne mov cmp (bad) (bad) (bad) call scas inc loopne xchg mov scas (bad) or mov push dec mov fstpt insb loop adc mov fdivl (bad) (bad) mov mov xchg fldenv jg pop (bad) (bad) pop sbb and outsb jo lds or outsl fcmovnu mov xlat hlt (bad) (bad) incl ds pop fpatan and sti push inc stc iret gs xchg mov or cli (bad) (bad) pushl mov sub xchg in fdivs ficomp call cmp (bad) (bad) (bad) out (bad) hlt js idiv dec mov popa loop inc icebp (bad) xor call push and movsb add jmp out daa dec pop fnsave pop push out inc inc das mov jg,pt pop jmp or cltd or lock cwtl xchg (bad) sub inc or sub ds js std inc lods ret sar pop fidivr cmpsb pop in pop pop jecxz fcomip ja cli (bad) lret int3 or xor and incl adc mov pop adc gs aam cmp rsqrtps ret out outsb sar lret push (bad) (bad) push push int3 loop lods scas inc jno mov mull negb push (bad) inc (bad) lcall xor mov xchg or cmp and or xchg lcall inc ds inc mov jl cmpsb cmc les cmp (bad) (bad) (bad) incl xchg nop pop xchg push push push fwait ss and cmpsb or and movsb xor jl and or mov imulb ret jb ljmp sub scas xchg or xor sub inc fwait push adc pusha sti (bad) ljmp repnz fwait shlb cmp jp pop pusha ds addl in inc mov dec in xor out cli pushl stc lods dec js,pn into jl cltd adc lret dec add fs (bad) out clc dec dec popa inc loope negl nop sar jae pop or pop ret pop (bad) (bad) (bad) call call pop mov adc sub xchg lds notb clc cmp push jg (bad) (bad) lcall out repnz mov inc jle arpl mov insl add xor inc mov (bad) (bad) call mov lds pop insl ss js pop sub or (bad) out ja lcall (bad) (bad) sti mov cmc loop (bad) outsl pop jno fstpl ret sahf mov clc sub push sbb dec mov lcall push clc lret push xchg jno,pn nop (bad) (bad) lcall inc mov dec inc mov (bad) and (bad) mov (bad) (bad) (bad) call push xchg push or xlat lock aaa (bad) jno xchg shrb mov sahf repnz sbb mov inc (bad) lcall cltd fisttpll call add hlt test inc jo aas (bad) inc cwtl dec int3 or outsl cli dec ds jb aam (bad) in rcl cltd (bad) (bad) incl int3 fldcw and cmpsb sahf int lcall std (bad) (bad) (bad) fcmovne add push or insl push fadds push loop ret dec cmc fdivl (bad) (bad) ja add insl mov push xor cmp mov fcomip ret adc push push shld mov pop mov les mov (bad) pushl pop loope jbe inc add add fiadd push pop and jae clc (bad) pushl stc pop lods repnz push xchg adc cmp sahf mov ds xchg test xchg dec stc enter and xor repnz (bad) (bad) pushl int3 mov cmp ds push cmc (bad) aas inc pop pop mov cltd pushf outsb rol test (bad) (bad) mov cmp jl popa scas ret mov fdivl aaa mov (bad) (bad) (bad) call outsl (bad) cli std adc or (bad) lods in and jbe (bad) jae jo lock (bad) incl es lret fstl lahf fidivr in pop (bad) cs push cmp push pop xor test jmp fcoms sbb shrb incl (bad) mov or fs ss (bad) mov jecxz push push xor (bad) jmp (bad) (bad) punpckhwd outsl cmpsb imul and call add fsubl inc loopne push int rclb mov (bad) (bad) (bad) (bad) fnop mov mov std (bad) (bad) (bad) leave xchg (bad) push aas pop cmp pusha or adc (bad) jmp push jp push mov cmp push xor cmp xchg inc push xchg fcmovne cld (bad) (bad) jmp lds xchg cmpsb sub push mov or stos les imul incl in out jae inc mov imul ja sbb dec xor and and test pop jmp lods lods fnstcw adc or mov add sub (bad) (bad) (bad) jg jp mov xor cmc fsubrs push cmc xor sbb gs (bad) (bad) (bad) mov jp xor xchg and mov xchg popf mov jne xlat jp mov xchg push mov popa mov (bad) movsl pop and pop cmc (bad) jmp inc test jge,pn shlb fwait cmpsb mov cli push xchg adc mov je (bad) (bad) incl daa cmp clc mov fs push les fwait mov iret and push insl fs (bad) (bad) (bad) cmp (bad) pop mov mov fisubr mov mov out and add (bad) cmp clc (bad) (bad) jmp mov repz lahf inc push push cmp jp dec cltd int3 push and out mov cltd clc decl adc inc fs je fildl mov mov sar mov out out xor mov dec xchg (bad) (bad) decl mov add jnp cli adc inc add jno negb rol call imul mov jmp mov out icebp dec cld sbb ljmp adc (bad) (bad) lcall sbb iret (bad) hlt sub push fisubl outsl adc incb fistpl (bad) decl inc mov ret fild cmp inc dec stos inc mov repz (bad) mov aad (bad) jg ds popf jp arpl sub mov mov ret (bad) (bad) (bad) sti stos pop punpckldq dec ljmp sub jb nop cmp icebp push pop scas into jns cwtl pusha adc ja and (bad) popl mov jo push cmpsl or inc daa dec sub (bad) decl in loopne (bad) (bad) xchg movsb sub xchg lock and pusha test ret (bad) incl dec scas cltd test jl lods ljmp clts std adc mov sar (bad) (bad) pushl lock je dec jne mov test data16 fiaddl (bad) push idiv push lods (bad) (bad) (bad) lcall divl or mov popa dec mull rolb stos lea daa adcl (bad) (bad) (bad) jmp cmp inc push jns mov push fwait sub into adcl cmp push das rol call pop mov popa adc (bad) pushl rcrb sbb hlt xchg jle cmc adc out repnz icebp sti mov jo (bad) (bad) decl lahf pop aad inc and ss jmp outsl mov dec jo mov pop nop testb inc into dec (bad) lret push mov cltd pop shll cmp dec fdivr decl lods rep dec (bad) mov xchg inc into dec or inc add push dec xor jo pop xor subl pop mov sub (bad) (bad) fcomip in leave (bad) clc js mov sbb stos push xchg imul mov call stc fisttp sbb test das dec mov lea xlat mov mov out inc add ljmp scas lea mov add push imul frstor mov (bad) ljmp lock mov jnp sub or (bad) call jmp mov jle popf jne sub xor mov fiadd (bad) mov fcompl push cmp std sbb stos jnp (bad) (bad) jmp sbb dec out dec (bad) pop arpl ja es test xor bnd stos jge dec ja and inc sbb clc (bad) (bad) fdiv clc rcl sbb bound add xlat fnstsw xor leave lcall stos nop xchg imul outsl sar (bad) pushl push lret out mov popf lret rclb push ss jb cmp jno test mov jp adc cltd sbb stos inc test xor lret inc fiadd adc cmp lret sub push xor pop pop add mov neg jg movsl (bad) mov and fdivrs xchg js sub add add (bad) pushl xchg stos xchg push nop jns sbb lea (bad) (bad) (bad) mov pop icebp insb aad test insl lret adc (bad) jo int3 clc mov sahf in or out decl ret (bad) jle xor outsl jbe add (bad) xor sar (bad) ljmp jecxz pop std (bad) aaa (bad) jmp (bad) pushl xor mov test in scas (bad) jmp aaa jnp mov fsubrs or (bad) ljmp (bad) jno sbb imul xor movsb or dec jmp adc adc pop add (bad) mov andl inc int3 clc jg jmp and or in testl das xor repz mov jb in mov icebp mov ficomp mov jg decl xor add adc std mov mov inc add lahf sbb call popf xchg or dec add xchg imul jl inc jnp lods jp (bad) icebp sub loopne shrb iret inc je add mov xor push mov (bad) (bad) fild stc and xchg jl fsts jne call pop ljmp (bad) mov xor sub pop or jae sahf in mov stc xorl cmp mov push ds test icebp mov sti mov add imul sbb or inc (bad) mov inc cmp inc xchg xchg inc adc inc (bad) ret iret mov mov (bad) insb je sbb lcall (bad) (bad) incl adc fst lret bnd jbe out sub add stos (bad) es ljmp jg pushf bound pop pop jbe push test (bad) (bad) (bad) mov mov repz mov cmpsb sahf or jno jle call (bad) (bad) jnp jno ds push popa cmpl and stc xchg inc fsubs cli imul mov into push mov mov loopne mull pop jl scas mov mov lahf xor sub cmpb xchg loopne (bad) pushl leave dec or push xchg add inc movsl cli int xchg pop pop (bad) xchg rcr fdivr (bad) call mov int lcall push jg lcall jbe push fs ljmp xchg add out mov mov call xor inc shr aam or das sar test jbe inc fistp ja insl pop lock lcall jo mov and jmp lret cwtl ret jle (bad) mov adc add xor cwtl inc fwait je mov inc mov loopne mov fsubrs (bad) (bad) jmp add fwait sahf adc cmp pop (bad) lcall xor repz push (bad) aas inc dec lods xor jns (bad) (bad) call mov insb and mov js popl xchg mov movsb cmp js push pushl std (bad) mov pop sbb iret push push pop dec pop shll sbb sar call cwtl (bad) lcall xchg int3 add jnp jmp cmp pusha lock ljmp xchg sub xchg hlt aad mov push mov add mov pop mov (bad) call cltd (bad) mov popa je idivb addb dec outsl aaa mov dec (bad) (bad) (bad) pushl jae jecxz add jl je lods enter out sti xchg mov dec (bad) (bad) incl pop cmp je sub and push cmpsl jne imul dec pop push int3 insl jmp push jmp pop je dec fsub rcrl mov push add (bad) ljmp adc test sub push jecxz inc test cwtl mov sub (bad) (bad) jg push stos out sub inc (bad) jg outsb bound sbb pop jg sub cs cmp leave mov fstl pushl inc add lods ss int mov mov popf data16 xor pushf outsl (bad) (bad) (bad) call rcll push popa nop sub inc les jle add push push xor pop and pushl into or gs cltd iret (bad) jb clc push adc inc (bad) (bad) mov jmp jns pop jp inc pop inc and addl (bad) fcomip mov jo dec pusha fistl rorb cli out clc lcall pushf mov icebp push and les xchg inc aaa mov (bad) incl mov xchg mov push sub add mov incl xor outsb mov sti (bad) (bad) mov (bad) cmp outsl mov mov lret repz outsb std cmp (bad) incl fidivr popa xchg jmp push jbe pop insb xchg (bad) ljmp ljmp inc dec stc mov fimull or dec jo mov jl (bad) pushl cmpsb int mov fnstsw std iret out sbb adc or (bad) (bad) (bad) in cmp push sar mov ret jecxz sbb repz lods cwtl inc ret insb cmp rol ja cld mov test push int (bad) (bad) pushl dec and test aad mov push mov cmpsl pushf adc inc leave test clc xor lock movsl push adc repnz lock (bad) (bad) (bad) fimull mov xchg mov jnp sub andl out inc mov fistpll jg test fwait mov pop mov and add adc dec mov sbb insl lock dec dec dec in mov mov ljmp inc push (bad) xor push dec lret popf add (bad) sbb mov mov ret out jne out (bad) (bad) call insb xor lock rcrl addr16 fsubp or cmc cmc cs popa push push in (bad) ljmp mov pop xor aas push or adc test jno (bad) (bad) (bad) jmp sahf aaa das cs scas push mov mov (bad) xchg pop ret push scas cwtl mov lea (bad) ljmp fistp sahf adc sarb sbb mov cmpsl or jmp jge pop adc mov sub pushl pop ret add mov push mov (bad) (bad) call adc mov xlat push mov push push mov test jns mov gs xchg mov (bad) incl cmp mov das jno cmp mov ja or sahf dec test (bad) jg pushl pop add loop div lret test repnz ja fs daa dec xchg pop incl (bad) cmc gs outsl mov pop mov orl sbb push fcom jge xor sub cmp adc push sub lret dec jbe (bad) (bad) ljmp lods out arpl sub test dec cmpsb push or int sbb mov ja lods or cmp cmp loop xlat (bad) mov jo pop cmpsl cld jecxz pop push (bad) (bad) push or jns cmc mov sar mov (bad) call xor lcall bound add push cld or cmp push mov pop dec (bad) mov dec das or mov mov sarb mov (bad) (bad) incl loope sub lahf or ja push inc push sbbl inc pop (bad) dec out jb leave push je jg cmpsl mov mov xor ja ds (bad) (bad) jmp mov push or adc xchg and loop repnz popa push and out (bad) (bad) (bad) lcall (bad) out iret adc sahf fcmovu hlt lret imul dec out popa test (bad) fs lds mov inc cld sti pop push popa leave ja ja jnp,pn xor loop inc jne das clc (bad) call cld jae (bad) cmp cld shr jl shl push int (bad) repz fsubrs (bad) (bad) cmp push xchg push fdivl insl sub sbb call cld decl and cmp sbb inc or push inc scas jl lods in mov cwtl and je iret and jmp adc andl cmp lcall xlat (bad) (bad) (bad) jmp or dec in sbb lods cmp mov push xchg mov jle das ja (bad) (bad) pushl add mov sbb les or pop mov pop rorl test (bad) (bad) (bad) decl test mov dec imul push inc arpl movsb xchg subl clc push xchg or mov je sbb push pop dec xchg inc iret in imul push std jae push jge add stc lret dec sub call fdivrs push xchg pushf ljmp sar inc cmpsb cwtl popa pop out mov mov inc add fildll or iret (bad) (bad) (bad) jmp (bad) jns js loop sub dec stos push iret loopne push push gs cmp (bad) (bad) ljmp dec push (bad) (bad) fstp xchg mov sub mov push add or dec (bad) (bad) (bad) jmp scas dec push mov call pop dec mov test iret adc mov sub in sti (bad) (bad) (bad) call jb xlat add fcompl xor je jle fisubrl pop xor jg (bad) (bad) incl and (bad) xchg lock cmp das mov icebp imul dec ret (bad) aad (bad) adc aas std (bad) (bad) (bad) cmp sbb sbb (bad) (bad) (bad) mov and aad xchg mov xchg into and jecxz dec or push rolb arpl stos pop test mov fmuls mov lock lcall adc (bad) xchg movsb sarl cs add in cltd and mov ljmp cmp (bad) incl xchg jb pop test mov nop pop xor int3 in sub jmp push out pusha cmp aad adc loop shlb add idiv (bad) mov mov inc or push movsl std (bad) inc pop insl push mov incl xchg adc nop or (bad) in (bad) xor hlt rcrl sbb cmpl sar push mov shlb push sar ljmp push mov xchg lcall pop loop push (bad) lcall and add add mov lcall (bad) mov (bad) jmp push jno xchg out jp ja xchg int or enter sub seta xchg xchg je test or sub xchg (bad) jmp out test push mov and ds xor (bad) jmp push ss insl loopne jae sub or adc repnz jecxz cli pop mov rorl sarb negb (bad) decl push lret or jo das popf xchg xchg xlat mov fsubrs ljmp add fcoms mov xchg (bad) mov sub decl sub fwait aas cmp imul icebp xchg (bad) jns sbb out incl fs test xor mov sub xor arpl cmp decl cmp or or movsl icebp loop pop std decl jmp cmp pop add dec aam push pop fldt (bad) (bad) ljmp or ficomp push push pop and fwait pop inc adc ret pop add pop add scas imul or mov sub (bad) (bad) call mov loopne cmp not dec cwtl fwait imul ljmp sbb daa or lods xchg shlb xor mov (bad) incl jno pop add hlt mov cmc jmp adc sub pop pop lds or out clc (bad) (bad) in xor pushf mov add dec inc adcl cmp xchg dec repnz pop (bad) (bad) (bad) pushl ljmp fs cwtl mov or iret lcall int movsl out cmp repz es push xor sahf mov (bad) inc iret jg bound xchg nop cmpsl dec fnstcw lcall adc jno mov insb loope mov std lcall push inc mov addr16 sbb or call or les inc xor adc std sub mov mov (bad) (bad) lcall fs (bad) (bad) jne enter xchg addr16 xchg jns xchg push jns pop mov mov outsb sub and jge mov xchg xor jg mov pop mov cmc (bad) (bad) (bad) ljmp enter lret sub adc std inc pop call pushf or (bad) jmp mov inc adc jge pop sbb pop test pop jns fs add xor pop dec pop push scas push cld incl lret imul xchg mov scas in jmp incl inc mov push push mov push gs xor (bad) (bad) (bad) call in adc adc mov pop mov cmp pushf and adc shrb incl call data16 (bad) es jp rorb mov and pop clc ja lds mov sbb addr16 dec mov lods repnz in mov (bad) jmp push call je bound nop les (bad) (bad) mov scas out inc push shll jge jae mov or (bad) decl sub je lret outsl inc push arpl (bad) (bad) (bad) call push and ja dec mov xor jmp jmp (bad) (bad) jge xchg dec mov cmp adcb stos out jnp jae pushf push jbe pop dec fiaddl cmp clc pop hlt mov test (bad) and xchg cmp leave (bad) (bad) (bad) inc int insb or adc xchg mov lods scas insb fcmovne mov pop hlt pusha inc push xor mov (bad) incl and add dec mov inc pop jge je lods sbb mov jne or inc out idivb or or stos mov mov std mov sub call std incl push pop jb aam jle (bad) ljmp outsl les (bad) call sbb cld lahf out mov pop cs or push ret in (bad) (bad) (bad) ljmp in mov into daa bound push push std and repnz cmp roll sub or inc or jne add sbb fcmovbe mov mov (bad) push inc jne dec repz cld (bad) loope leave push adc sub inc mulb push lahf ret ret lret (bad) (bad) (bad) (bad) mov adc add pop dec xor xchg inc cmp xor int3 push mov xor (bad) pushl add (bad) stos rorb push iret inc pop mov or (bad) (bad) decl jnp les dec sub pop (bad) add cmp pop loopne xor (bad) (bad) (bad) mov dec xor (bad) leave cmp mov movsl into je ret popf or xor (bad) (bad) (bad) (bad) jns sub stos dec (bad) jp jp sub xchg fdivrs or movsl jb mov (bad) (bad) pushl lret stc adc stos or push jge push mov enter fwait out loope (bad) (bad) lcall adc hlt mov inc sbb mov pop fimul add dec cmp fisubl addr16 test loopne mov mov imul fwait jp cmc sbb sub lods add in xchg add mov fidiv sub pop nop push or push xor mov sub jb adc loopne divl cmp add (bad) (bad) decl fildl out cmp pop lods loope faddl aas in dec fcoml mov xor (bad) (bad) lcall mov out leave pop inc fdivs das mov sub (bad) (bad) call mov out xchg sahf cmp cmp dec mulb cmp mov arpl jne adc pop sti imul push shrl push sbb clc dec adc pop scas sub (bad) pushl mov jmp and addr16 push jns jg insb sbb daa ds inc sub pop inc insl popa lea das rclb (bad) (bad) incl xor mov cmpl les jl sti sahf jno (bad) pop xor test add (bad) (bad) (bad) fsubs movsl xchg push clc adc lods adc pop mov cmp cmp jp (bad) (bad) jg inc clc ss hlt xor icebp test jb cmp aad sbb jecxz (bad) (bad) (bad) decl sub add inc loopne mov in and test xchg arpl fs stc xchg cmpsl roll xor addr16 inc jnp imul xchg sbb sar cmpsb mov addb and imul adc sarl test jg gs insb add mov data16 (bad) lcall imul push jmp outsb test adc push cmpsl add jo test sub dec add sbb inc sbb decl mov sbb jnp mov cmp neg hlt or arpl rcrl in loope loopne addr16 in push push (bad) push mov pop popa mov loope hlt (bad) (bad) jg leave (bad) (bad) mov dec bound push stc outsb hlt out out and (bad) (bad) (bad) lcall arpl push rcr fyl2xp1 sbb sbb aad fmull mov adc mov mov mul (bad) (bad) (bad) lcall jns mov pop aas aas call pop mov pushl add mov daa test cli add (bad) (bad) decl sbb and cmpsb mov xor ret jecxz cmp in xchg add (bad) (bad) lcall jae mov mov pop fucompp mov sbb dec mov pop jmp call loopne out fadds push fldcw pop dec loop jg movsl scas push mov les cmpsb xor (bad) pushl xchg or out pop (bad) sbb dec mov mov call adc movsl jns sahf mov (bad) and pop std xchg mov arpl inc (bad) test ss insl cli (bad) (bad) (bad) push xbegin dec icebp lea std js cmpl add mov enter in subb imul adc inc mov mov jg fadd mov in push clc pop adcb pop dec out lcall and dec cmp ja (bad) (bad) decl and inc movsb sub mov (bad) xchg arpl add ljmp (bad) (bad) daa stc rorl inc xchg xchg mov mov pushl mov adcl out mov xchg fcomip pminub les insl xchg mov (bad) (bad) jg pop cmp mov cmc push or sub orl push xchg pushf (bad) (bad) (bad) jg mov inc inc scas ret imul or mov dec jg imul (bad) scas (bad) call jp jbe jne pop dec push ss push dec add outsb pop daa add fidiv lock pop andl jp repnz and add inc insb ret stc xchg inc pop mov (bad) lcall jne cmp mov je aad test mov xchg lcall out pop stos (bad) loope (bad) (bad) dec out xorl push or jno dec lea (bad) lods push pop pop mov push fcomi sbb (bad) (bad) (bad) push fsubrs mov inc mov pop in mov sub xchg int3 cmp (bad) mov and add movsb mov jmp nop imul (bad) (bad) pushl mov dec fbstp jp (bad) (bad) stos out dec jmp rcl enter clc (bad) dec insb cmpsl ret ja xchg int3 lret cmp push (bad) cs and lcall mov adc jne push loopne cwtl mov jecxz push aam sbb cmp (bad) dec test (bad) call aaa sub xor mov (bad) pop lret and iret lods pop mov pop inc cwtl cmpsl in push lret mov rcrl ljmp lods jae (bad) fisttp loope add jo add cs xchg (bad) (bad) (bad) mov sbb loopne push std and jae pop aam ds popa (bad) xchg adc js in (bad) (bad) (bad) incl aam push mov add mov int3 shr dec mov call jge add jl iret jmp (bad) dec es mov push mov push (bad) jno inc test sbb adcl (bad) (bad) mov push (bad) mov arpl pop lret in inc jb sub inc sbb (bad) or mov inc mov mov out je push cs fnsave pop pop adc pushl shlb mov add pop lock stos jo xor adc rclb cmpsb mov jmp test popf dec popa mov stc mov jne mov cmp mov or fwait cli (bad) (bad) mov pop hlt (bad) leave xor lods lods mov (bad) mov fistpl inc lods (bad) mov (bad) ljmp xor loope sub and push mov mov ror fcomps hlt xchg or sti bound add cmpsb addl ds add jne das (bad) (bad) (bad) (bad) in mov fldt jl (bad) cmp xchg pusha sbb push scas (bad) push loope enter sbb push mov pop cld cmp mov lods stos pop fnop xor scas daa pop in imul insl out add pop or out and xor hlt decl xchg mov xchg and sub cld pop or jge add xor int3 sbb pop or mov scas mov cmpsb fcomip push scas lret cs push test out xchg (bad) mov insb mov xor xchg push loope icebp es outsb adc (bad) into shlb cmp dec ret subl (bad) mov pop add push push ret pushf xchg sbb adc int3 inc or fcompl cmp or sbb rclb mov icebp nop out push (bad) call pusha jo mov (bad) scas popa push ret imul imul sarb sbb hlt sar (bad) inc jge mov or mov (bad) movsl shrb cmpsl ss cmpsl shrb mov dec xchg (bad) (bad) (bad) (bad) ljmp mov push imul lock jp jle xchg bound xor (bad) (bad) push push xchg xor jnp mov mov mov out pop ficom sarl mov add (bad) (bad) (bad) mov insb enter pushf sub dec mov aaa jg ret push xlat sub pop ret add subb call mov mov lock test mov je mov sub lock adc pop ja cmp (bad) imul xor mov or mov push cld sub push mov pop out dec dec jne jae (bad) (bad) decl lock sbb xchg cld xchg mov xor lds cltd cwtl (bad) (bad) (bad) call push icebp fldt andb sub xorl or add sbb xor cmp ljmp test out pop cmp fs mov negl pop cmp (bad) inc mov data16 jb rcll sbb pop (bad) (bad) (bad) (bad) jnp lods jns cmpsb jbe jg negl adc mov sbb inc dec pop dec and jmp cmp (bad) fcomip push je mov sbb mov sahf add mov movsb insb push jle cmc (bad) incl sti imul jnp cmp dec fnstenv aas outsb mov sahf mov nop ds repz (bad) (bad) call add or xchg mov enter cmpl aam and int or das push addr16 popa xchg ds (bad) (bad) jg mov cmc sub aas adc cmc mov fnstcw pop push daa jo dec in loope es sub cmpsl xchg add or (bad) mov call and xor and sub mov ljmp ja ss lea clc int or mov (bad) (bad) (bad) (bad) aas and loop xlat xor cli test test outsb add outsl add outsb (bad) jo test inc hlt xor es movsb mov push push (bad) (bad) (bad) (bad) jle sbb push xchg loop mov sbb push add push push push jmp and (bad) (bad) mov fwait add or cmp aas sbb out insl cli in push cmpsb or adc fdivrs cmp jle sub (bad) (bad) (bad) (bad) jg sbb int3 mov cmpl psrlw lahf jl test aam push shr sub jg pushl fs xor fidivr ds mov fldl sbb (bad) dec (bad) (bad) (bad) jmp adc sbb cmc jmp (bad) cmc es mov sti jl pop fsubl fstpt aad and jle ljmp mov xchg (bad) (bad) (bad) (bad) (bad) jge jg pop stc adc push popa and mov lret shlb jo xchg int3 cs jmp das (bad) (bad) (bad) call aam dec (bad) or out (bad) stos jbe jmp push add xchg or aaa jns outsb int jmp xor (bad) sti dec dec jl sbb fstl dec mov jns or (bad) std push jb cmp sub jg fcoms jb xchg loopne arpl data16 (bad) mov mov int3 sub xchg ret ljmp (bad) xor cmpsb (bad) fcomip lds dec sahf inc and adc leave cltd and incl dec push inc in out and invlpg jge out leave pop mov stos or lret (bad) (bad) (bad) call push frstor icebp jb mov lret pop adc mov push xchg frstor or ljmp clc fwait jmp lds call or mull and cmp call lods imull lahf sahf into cmpsl movd (bad) ljmp (bad) sbbl push movsb movsl (bad) (bad) ds int dec mov (bad) (bad) (bad) cmp push cmp test sahf (bad) ret iret mov xor push hlt (bad) (bad) (bad) call xlat data16 enter je pop popa fdivr bound sarb lahf movsl (bad) xor (bad) (bad) ljmp jl lds push jae and mov jg lods in repnz jb lock jbe (bad) (bad) push insb pop call fsubrl shlb daa or mov sbb xchg gs jo test dec addr16 daa cwtl lds pop loop (bad) mov or lcall (bad) mov out mov ret sub mov or (bad) bound cld aas add lods sarb cmp (bad) (bad) (bad) inc test rclb test pop ret outsb dec cld shl lock add or xor shlb cmp ja fadds in fmuls xor hlt int3 push (bad) push dec out push add out sti popf cmpsb jno cmp xor sub in xchg outsb and dec add push ficom adc (bad) ljmp test pop or jne je or pusha push scas je mov mov movsl push ss (bad) (bad) call out add inc or jns int3 xor dec bound push int (bad) (bad) (bad) decl jmp andl sbb mov jne and pushl mov lods insl and jno fdivrs jb or mov cli (bad) (bad) jle jo cltd sbb imul mov cmp iret stc or outsl xchg stc aad push (bad) mov bound imul lahf jge jb repz add dec jg or dec in and test fcoms clc out add add inc and or (bad) mov dec stos xor ficoml cli (bad) mov fldcw inc imul push ds into sub stc sbb sub jg or in (bad) (bad) (bad) jmp dec push inc sub mov dec (bad) loop popa cs (bad) fiaddl lods inc fistp pop (bad) das mov test pusha mov (bad) (bad) (bad) decl jg pop pusha mov cs sbb ja xor fs push or jg (bad) (bad) incl push pop inc int3 mov adc push into dec jmp rclb outsl rsm sbb and pop enter pushl dec sarl fwait or mov (bad) (bad) (bad) ljmp xor dec rcrl push mov (bad) rcrl push jmp mov xchg inc mov push lods pop mov (bad) (bad) (bad) incl je push sub decb mov mov jmp out jbe sbb push ja (bad) (bad) (bad) jmp mov push ret fcmovne out xchg fsubs fnsave xchg sbb pop sub call lcall nop or mov jne adc or fwait loop jecxz repnz or (bad) mov je mov int pop mov mov cmpl xchg jmp inc pushl push lret loope pushf data16 mov loopne mov jmp ljmp push xor jbe xor mov mov cltd addr16 sub fistpl xorl mov sub fcomip push ror push fstpl cmp mov lods adc loop (bad) jmp adc xchg jmp repz popa jg pushf xor loopne xlat xchg (bad) (bad) (bad) incl dec push pop cld ja add cmpsl je pop xchg adc pop jl sarl inc add popf push (bad) (bad) incl jno adc add (bad) mov add mov mov xchg test lea ds cli ds inc cmc mov sbb mov inc push shll ja lea dec ja xchg mov mov mov nop xchg mov push jl out outsl aad xor es repz aas (bad) (bad) decl (bad) movsl dec mov addr16 xor pop adc stc mov cmp (bad) decl dec jge lahf rclb sbb mov adc inc sub ja sub jl mov mov leave mov out clc (bad) push fmul sti xchg dec pop xlat hlt in bound pop push xor lahf sar xchg icebp or mov adc and lret jne,pt lods repnz dec mov push sbb leave (bad) incl mov les push (bad) dec sub adc (bad) fcomi stos outsb popf push dec leave xor jb gs jge pop in fwait adc incl lret clc inc (bad) mov pop ss popf cmpl loope (bad) fidivr push je dec xor push mov fidiv (bad) call jb cltd push cmp mov cmp push push idivb outsb (bad) sbb fs xchg mov shll fwait push (bad) (bad) (bad) decl out add and cmpsb xchg outsb gs nop adc shrd lds fidivl (bad) (bad) (bad) call andl stos ljmp xchg subl pop fisubr ret mov pop subl dec ja xchg ljmp sub movsb push std test push (bad) ljmp lock cmp cmp aad imul cltd xor and sbb iret lock push push lea sar jg mov sbb test (bad) clc sbb enter mov push mov decl adcb out push sbb mov icebp sub mov push (bad) (bad) incl or addr16 xlat (bad) push mov ds cli (bad) (bad) ljmp fistp sbb pop hlt add clc addb sub jnp cmp movsb pop decl in in popa sub push clc or cld (bad) incl (bad) pop popf mov and lret mov flds (bad) (bad) jmp testl popf movsb cli scas popf sbb push cmp nop inc fadd (bad) hlt cmp insl (bad) incl cld pusha jb or dec das jo sbb add xor pop (bad) (bad) (bad) decl ret adc jmp sbb xchg movsl dec test loop test loopne mov outsl incl enter mov test outsl cmp rolb xlat add inc fiadd call test arpl or ror rcl (bad) (bad) (bad) fdivrl (bad) mov into cmpsl aas mov mov jl dec and test (bad) jg cmc rcrl or or (bad) cmp pop sahf (bad) (bad) (bad) (bad) cmp aam or out pop add xor jb scas punpcklbw lods jns (bad) mov (bad) decl adc stc cmpsb aaa test sti jae sbb lret repnz pop (bad) ljmp and push xchg enter out xchg ret movl xor (bad) (bad) (bad) push or and xchg mov dec int sbb pop aam test imul mov mov call (bad) (bad) (bad) lcall push ss dec xchg adc aam xchg mov adc mov cmp push (bad) (bad) (bad) ljmp mov sarb rcl lret mov notl and lcall test (bad) (bad) (bad) jnp ljmp add inc mov not rclb cwtl ret sub (bad) (bad) (bad) (bad) cmp (bad) dec scas sub hlt cmpsb lock loop jge push mov or daa cli nop int mov hlt push (bad) out pop mov mov scas mov mov insb stc inc dec jno in in out sbb pop xor inc loopne inc inc (bad) (bad) (bad) inc adc or (bad) xor dec dec mov or cmc push out in cs mov mov bound add js aam push pushf jle (bad) insl (bad) sbb dec adc sar (bad) (bad) jge clc cmp pusha mov inc leave test sbb xchg rclb fcoml lcall fwait push jl dec adc loope inc or clc dec fwait jae (bad) (bad) (bad) jmp in adc push sbb call push imul imul (bad) (bad) lcall sbb jle test mov sarl scas mov mov daa stos call rcl mov push inc jns or ret jl out sti sbb (bad) (bad) mov xor push imul jns lock xor mov jecxz mov or data16 hlt push jnp mov (bad) (bad) fldl mov or jecxz das sbb fsubs inc (bad) (bad) (bad) call popf popa pop inc out xchg xchg jne push fdivrs inc ror xor (bad) call std fldl je push adc pop lods xor cmc insb cmpl hlt sbb (bad) push movsl mov mov dec add xorl je addr16 stos lahf adc mov hlt jns xchg and orl or pop jns mov arpl jns je jl mov (bad) fidivl and les sub dec jns aaa push lahf xor test mov cld (bad) (bad) lcall jl (bad) in push mov mov lahf mov pop xchg jne cld (bad) (bad) incl mov xchg sbb and fcoml shl imul imul and (bad) (bad) call popa iret xlat mov ja dec sbb shrd push repnz test mov repnz into jno add imul push insb cmp andl mov pushf clc mov inc into xchg pop xchg pop xor mov xor mov (bad) out add pop popf jle jno xor into add xchg popa xchg data16 cwtl add cltd popw stos sub mov in ss mov add fistpll cmp or popf dec push push (bad) (bad) (bad) incl lcall daa sbb pushf sbb push xor push daa out cltd xchg incl jbe aaa cmp and test lret pop sti fmull inc mov std (bad) (bad) push enter icebp xlat push push sbb sti lock mov lds mov inc pushaw inc jg pusha into addr16 adc push fdivp pop hlt (bad) ljmp xor mov lea int push add jo ret jb into (bad) (bad) (bad) (bad) jge jns jle xchg mov stos and aad mov or (bad) mov std popa pop xor (bad) (bad) call xor loop xchg sysexit cwtl fsubrp mov mov cmp pop in adc clc sbb pop hlt (bad) (bad) sti push movsl dec pop cmp stos inc cmp sbb ss lods dec dec clc inc stc cmc and push mov (bad) repnz rol mov iret ljmp (bad) pop fidivr add jge jnp inc jb sub iret adc sub (bad) gs (bad) (bad) decl lods xchg sbb cmp mov fcmovnbe ret rcr sbb scas sbb jae clc (bad) (bad) (bad) jns int dec adc sbb (bad) pop cmp aaa mov mov sbb decl sahf or sub movsl lahf add xchg mov stc or (bad) ljmp out push out in add adc arpl icebp adc and add (bad) (bad) jg mov decl mov xchg adc jne mov inc xor (bad) stos bound or (bad) scas cli lcall push cs iret fnsave insb js (bad) (bad) (bad) cmp push mov out adcl loopne andl imul (bad) (bad) mov pop and ja lret adc dec jnp,pt movsb sub lock in and loop add aam sub (bad) jp inc xchg pusha adc sbb xchg (bad) lock (bad) (bad) (bad) (bad) cmp push cmp xchg cmp clc add roll add fisub in mov inc loopne (bad) (bad) (bad) mov ljmp jge jp loop mov loopne fmull ljmp loope cmc mov mov inc pop mov mov push fsubrl lcall ds (bad) lock dec cmp inc in and mov (bad) ljmp or aaa sub lock pop and arpl pop xor adc (bad) (bad) incl repz pusha fs out xchg jle,pn (bad) push jge push mov push hlt dec jl call int3 int3 dec shr pop hlt add mov xor imul adc xchg test mov sti fsts stos pop inc add ljmp add mov lret mov in stos sub adc addr16 movsb fnstcw fildll mov lret frstor mov ljmp sarb dec mov mov (bad) incl cmpsb sbb cmp adc jae lahf inc ret or ljmp test subb (bad) lret out cwtl push xor (bad) (bad) ljmp ret rclb out mov push test (bad) cli sub lahf fisttpl mov loop sarl out xor out stc jge inc add (bad) (bad) call xchg dec xlat (bad) or lret inc push pop jecxz and mov mov (bad) (bad) incl das rorl inc push test ljmp fsubs fwait pop add inc aaa cld (bad) (bad) (bad) cltd sbb fldt inc in mov xor mov outsb adc lret outsb inc aas inc adc loopne fwait xlat add leave jle inc mov das mov sub ja adc lods sbb and mov ljmp inc repz adc insl mov dec (bad) (bad) (bad) pushl mov mov cli sahf xchg imull hlt pop es aaa and mov push and lret jae xor and (bad) decl push add adc or in fidivl and pushl jmp pop sub lods repnz pop (bad) adc (bad) lcall ds imul das sub movsb xchg pop fld1 push push aam lods inc sbb dec xchg mov iret and and mov (bad) (bad) (bad) ljmp scas ret dec sbb sahf fmuls nop mov pop (bad) push jle mov stos div (bad) (bad) inc xor jne mov jmp arpl popf incb adc (bad) lcall add movsb mov jns decl jnp mov cmp shlb (bad) (bad) call xchg inc mov jle sbb xchg sarl lcall cmp sub stc jg sbb lcall pop les mov (bad) mov cs pop jge pop add add cld cmp inc mov (bad) (bad) (bad) call lret cmpsw sbb jecxz cmp fnstenv push lret mov mov dec dec scas sub ljmp add inc jmp xor cmp hlt xor push mov cmpsb into int ss inc icebp fadd mov cmpsb mov sbb or lds (bad) mov (bad) incl stos mov adc jmp (bad) sub dec movsb in push iret jns adc lds mov (bad) (bad) (bad) inc jno imul fldcw mov inc cmp out push fisttpll (bad) (bad) (bad) mov jo inc and pop test xchg andl popf ret sbb cmp (bad) (bad) jmp (bad) push mov movsb in pop dec sub mov sub idiv imul add (bad) (bad) incl pop test sub add into jo sahf jbe xchg sarl cmp ret fidivr (bad) in pushf les scas mov sahf lret pop popa sub jl ret adc out (bad) jg rcr or pop arpl mov mov (bad) decl gs fisubr lods jno or push cmc mov (bad) (bad) call mov sub mov jo pop mov mov rcrb xchg pop aam mov (bad) (bad) out jns push xor xor or mov push cwtl sbb (bad) (bad) (bad) (bad) fdivrs inc push push repnz mov mov mov push adc test adc jmp and or lods repz (bad) rcrb jae pusha fdivrp (bad) (bad) pushl js stos fnstsw loopne paddw aaa mov jo ds sub add negb int lcall adc sub add (bad) (bad) pushl inc push or repz clc jo adc es jnp not and add adc inc ja pop (bad) (bad) (bad) push mov xor push fwait lret insl mov fsts cmp cmp (bad) adc call (bad) (bad) incl sub sbb scas mov out sbb das inc fcmovbe sbb lock lea out (bad) movhps loopne adc mov xor jae xor loope (bad) hlt cmp inc or pusha into push dec outsb and add data16 (bad) (bad) lcall out dec aas cmp imul std popf aam clc mull rcll xchg mul mov xlat ds (bad) jg test inc std mov lahf sub hlt mov daa mov test or inc xor (bad) (bad) (bad) mov and out cmp adc and loop aad adc shrl lret xchg sub push xor incl mov movsb adc test jae mov xlat pop xor mov push es fbld and test push inc push and mov cmp in in xor sbb xor dec insb repnz adc xor mov mov and dec sahf xchg outsb sbb jge mov sbb ljmp (bad) mov push inc mov lea in (bad) (bad) lcall lret fiaddl dec xchg fldt and lcall imul mov jg push sbbb mov js icebp cmpsb cwtl lcall aas movsb adc (bad) call cld stc mov sbb xor or jecxz ljmp std ljmp lcall aam setg call icebp adcb xchg mov push pushl cld incl (bad) fldl in insl ret ret xor dec xchg lock (bad) (bad) (bad) jmp add aaa leave push addr16 pop jnp loope cmc std lahf cmp or mov adc (bad) lcall cmp xchg pop sbb pop ljmp push leave mov mov cltd xor (bad) mov xor (bad) (bad) (bad) ljmp xchg test negb sahf cmp out sahf (bad) into nop stos insb fs das add sub sarb incl loop aas out sti mov inc sub pop jb int3 fsubr lret xlat into add dec cli (bad) pushl adc xchg pop fist and cmp mov dec out push insl mov lea dec fwait add add sbb mov (bad) (bad) (bad) ljmp ds lahf dec pop lret sub aas xchg in les shll adc pop jno or movsl out mov insb repz std sub xchg ds out ret stos sub lret andl cs adc pop test imul (bad) xorb (bad) (bad) ljmp xor sahf std xchg (bad) mov cmc mov dec dec repz fimul jnp or (bad) (bad) (bad) lcall out movsl enter sti clc cmp sbb shl mov cmp (bad) mov dec out mov cld xchg cmp and repz (bad) rorb loopne jmp (bad) (bad) mov add dec add adc push mov (bad) fbstp in in xlat (bad) jle add and mov (bad) (bad) ljmp inc push push pop (bad) mov dec adcb and (bad) lcall ficom mov mov jle sbb and add lcall rorb cmp negl xchg push xor xor int3 lcall call adc add int (bad) pop pop int jp add andl ret inc add push loopne int inc lahf push in out rcll jle xor ds lds mov mov shl fistpl fbstp in scas pusha (bad) (bad) (bad) inc loop mov xchg xor ror sub jo add and push popa add pop push rolb (bad) incl push mov inc jne cld hlt cmc addr16 and insl cmp (bad) (bad) ljmp jl mov jae fsubs pop mov pop mov aam lds mov inc stc hlt (bad) (bad) (bad) (bad) sti outsb das mov js xchg push adc cmp arpl adc sti mov fisub mov jbe add aaa mov adc xchg test add mov call pop (bad) sub sub sti test pop push je stos pop outsl stc push test in sub mov mov jg mov push clc xchg adc push adc xchg ffree ret call pop cld mov (bad) repz push jo or das mov (bad) into pop (bad) (bad) (bad) pushl mov dec lods sub scas jge rorl xchg sub jae adc (bad) (bad) (bad) lcall jbe add or pop movl aad sbb fildll xchg test mov addl sbb xchg loop adc ja mov xchg push std (bad) (bad) cmp movsl adc push and mov jmp lret movsl js pop popa (bad) (bad) (bad) inc pop xchg dec movsl or aam pop (bad) adc adc iret push jbe iret test mov push and or decl outsl push into ficompl add ds incl insb xchg inc loope bound fidiv dec hlt cwtl jbe or (bad) decl jnp,pn fimul mov inc in (bad) lret (bad) (bad) lcall idivb xchg pop aad cmpsl push mov orb scas int sahf call jo lds sar jmp cmc pop lods and (bad) (bad) (bad) (bad) jmp movsl xchg lret mov (bad) aaa mov mov adc jp,pt imul jg (bad) dec je and mov ljmp adc cld ret call and (bad) (bad) decl mov jne es xchg pop rclb sbb mov add sub call scas bound sarb sar mov movsb sbb mov insb mulb pop lods in mov (bad) and xor loop pushf (bad) xor test into inc sub pusha (bad) (bad) in ljmp pop push repz add jge xor or push rcll mov iret insl xchg (bad) and aaa lret (bad) call loopne ficompl pop repz mul mov test mov pop hlt jecxz push in and movsb or lods (bad) push mov (bad) mov dec pop sbb sub push call out sub mov xorb sbb mov lock lods mov sbb mov movsl push hlt jnp (bad) (bad) jmp xlat xchg sbb movsb sub xlat fstps mov push dec movsb or repnz (bad) (bad) (bad) lcall lods outsb jl cmp daa test dec in les shll mov je aad ret push test sub clc call adcb push mov mov ds int xor movb push mov mov lcall mov insb jns jg and mulb and outsb pop (bad) (bad) (bad) call cltd testb out test test dec mov (bad) cli add pop sti stc gs fs adc (bad) (bad) incl sub push push stos jo rcr pop cwtl sub cwtl push push jno and je pop inc and inc movsb pop lret ljmp ds xor addr16 enter es movsl mov (bad) mov mov mov or mov and imul popa sub sub lock outsl mov jp scas xor push (bad) (bad) (bad) ljmp pushf out jns xor mov dec stos cld jbe dec adc mov and (bad) (bad) jmp mov xor add cmpsl jae adc push lock (bad) (bad) (bad) decl ret pop lret mov cmp push xchg add bound xor push and (bad) lcall push xor hlt arpl fidiv cvttps2pi mov mov incl mov (bad) ja push mov jl leave fcos dec (bad) mov push addr16 and outsb dec mov (bad) push inc std (bad) (bad) lcall cmpb mov in sub cs (bad) aas out cmp fsts (bad) (bad) (bad) mov mov mov sti adc std mov cmpsb test jne jmp fistl inc sbb (bad) decl or movsl dec int mov (bad) mov std (bad) call mov les loop sbb movsl sahf xchg icebp rclb jl scas pop (bad) fimull mov inc jmp aad mov ss xor jmp (bad) push jmp (bad) (bad) call clc popf addl pusha add jbe push cmp push push pop push inc mov adc adc dec test ja inc jno inc fiaddl mov (bad) (bad) (bad) jmp (bad) sarb scas sub xchg fs inc or rcl (bad) xor loopne push jno cmpsb lcall ret cmp xchg outsb (bad) lods test (bad) (bad) (bad) jmp jo mov sbb sbb out push cmp mov mov (bad) jmp shrl add aas test dec cs test (bad) (bad) (bad) out ds sbb roll out (bad) mov pop movl cld dec addr16 (bad) (bad) jmp adc cmp call jae adcl mov push aad shrl add lcall aas pop nop hlt in test aas jno add (bad) (bad) (bad) mov sub loop sti pop sub lret sub xlat jbe loope rol (bad) (bad) movsb repz add in dec lret mov scas icebp sub fisttp ds loop aaa mov (bad) (bad) mov pusha cmp mov xchg clc add push inc fsubl mov aad mov sub adc ds fnstsw pop dec xchg and ja pusha dec push or dec into jae dec or insb iret hlt jne or mov lea lods shr test inc (bad) mov imul jp mov mov push mov dec sub nop clc outsb daa out int3 lret jp (bad) (bad) (bad) jmp mov inc jbe add das jge fsubl push aam sub dec ljmp (bad) call adc stos jp mov out mov inc ficom decl cmc or jne push insb mov dec test mov decl jmp ret fnstsw xorl cltd icebp mov pop add ds test inc pop fs daa lods in stos es hlt (bad) (bad) (bad) jg add in pop outsl adc (bad) (bad) leave cmp sbb sbb fs lret mov (bad) (bad) incl and in mov ja into xrelease fdivr adc mov dec loopne mov (bad) (bad) (bad) lcall stc fmulp push sub or ret push xchg push dec mov adc add sub data16 add dec pop cli (bad) (bad) jmp add mov inc fdiv add and mov ffreep add das mov sub push dec mov add inc ds xor or mov clc (bad) (bad) fcmovbe out std inc cld pop xor dec or scas (bad) adc mov fs (bad) incl lcall fwait in cmp pop sbb pop imul (bad) (bad) jg popa popf xchg outsb cwtl or nop pop jecxz addl (bad) cmp orb repnz (bad) (bad) lcall std lea jecxz loope pop les mov (bad) mov mov fs scas mov call mov fwait xchg jnp sbb packssdw imul sub pop clc sub xor (bad) (bad) jg ds arpl stos add pop lods pop adc (bad) sarl add mov frstor nop icebp lahf push and imul fnstsw (bad) (bad) (bad) lcall imul push fnsave ficomp push xlat or bound lock (bad) (bad) (bad) ljmp daa dec ds rol cltd clc subb lea adc ret cmc mov xor jle lcall call jae rorl gs (bad) mov cmp sti ret adc aad pop adc jno pop xchg aad sub mov sbb xor shrb sub (bad) in (bad) (bad) (bad) pushl add lds test rorl add insb pop mov test dec pop outsl clc (bad) dec icebp popf xchg sub cs inc mov lds pop mov (bad) (bad) (bad) (bad) jmp fs adc inc insl les lods jo xchg and add insl lock and loop (bad) (bad) lcall gs cmp rcll inc push and scas fcomip (bad) jg daa lea cli inc ret shll mov into mov stos jmp and sbb jp cmp std mov repz mov test out mov dec fwait mov or (bad) (bad) lcall cwtl push sbb pop sbb js or xor movsl pop icebp mov sbb orb (bad) (bad) (bad) fdecstp test out mov iret stc push ss cmp add es push (bad) mov mov iret loopne out push push jg mov lods cltd (bad) adc jmp stos scas data16 ljmp xchg mov xlat test xor in daa (bad) (bad) (bad) ljmp arpl enter jg subl sub js and push xor sahf adc test (bad) incl dec popf fcmovnbe dec imul mov pushf mulb (bad) (bad) (bad) aas es add jmp push test xchg insb ja mov out loope out pop dec xchg mov adc sar push xchg cmp add fucomi sbbb scas adc (bad) fcomip inc cmpsb loope fwait (bad) addr16 bound in out test (bad) js pop sub mov scas scas or xorl xchg pop xor dec jp pop (bad) mov int3 daa mov rolb sub add (bad) (bad) (bad) in inc dec aaa out sbb fcmovu dec mov pop adc push lock inc (bad) pushl lret dec daa sbb inc popf pop xchg (bad) and stos (bad) call adc mov arpl scas ljmp and pop imul (bad) (bad) decl (bad) lock mov popa mov scas sub cli loopne or or (bad) (bad) inc (bad) aas cmp mov bound enter mov mov (bad) (bad) call lcall in mov pop iret cbtw push mov lahf jg loop mov rep (bad) fcomip inc inc notl fwait jbe dec cmp inc dec rorl das add cmp push ds pop shrb or jmp incl push add adc xchg mov adc out dec (bad) pop mov gs repz xchg jno fwait notb push ja imul rorb sub rcl hlt push inc (bad) (bad) (bad) jmp mov addr16 sbb int xchg cmpsl into mov push bound out inc stos jp xchg bound call in add xchg repnz and cmp push arpl sub cmpsl insl cmp xchg mov rcll cmpsl sbb out stos sarl jg mov sahf mov addr16 into push cltd in xchg loop and mov cld jp pop xor (bad) mov jb (bad) ja cli lcall add jmp dec jbe fstpt sub (bad) jle mov lcall repz jo in int3 sysexit lcallw lods jl idiv ljmp cmp jno lods in push sub ds cs mov dec mov cli (bad) decl mov mov mov and ljmp outsl and sbb sub jg mov mov mov popa outsb push xor (bad) (bad) decl imul pop imul jno adcb mov test lret mov cmp xchg out sub or or (bad) sti (bad) jb xchg cs dec fs js rcr nop adc mov sahf std nop jne mov lock (bad) call push test dec mov mov loop push and aam mov adc jecxz mov inc decl clc jns mov add scas in cmp mov xlat jg je (bad) (bad) lcall aaa mov test iret cmp mov xor enter xchg pop sub cwtl dec loopne mulb mov xchg mov or jne xor out (bad) jg mov ljmp sub xor jbe ret xor jmp subl repz (bad) (bad) call push scas mov loopne push jge lds mov popa pop inc xchg xchg or mov xchg inc cld sub lahf mov pushf insl in inc insl mov xor adc and mov sub (bad) (bad) scas mov lret sub (bad) imul iret sti jns add or sahf add (bad) mov imul (bad) and (bad) (bad) lcall jg xchg inc mov add loopne imul pop adc sbb inc (bad) hlt (bad) (bad) (bad) pushl inc dec sub (bad) enter adc add int ret jnp dec movsb mov (bad) (bad) jle cmp pop fnclex inc cmc (bad) divl enter lret or test or icebp mov jmp fdivr lcall pop repnz mov in add xor jne insl sbb xor repnz popf sar fidivr sahf xchg insl sbb (bad) incl xchg jge sbb insb insb hlt cmc xchg jne test push push (bad) pushl cld push mov ja fcomps xchg mov incb sbb fld je fs sbb cmpsl loope mov push jl jnp scas (bad) (bad) dec ja rcll adc (bad) inc loopne mov push mov (bad) stc fstpl test cli sar jne or jbe aam sbb add (bad) (bad) (bad) pushl inc mov imul cmp jge hlt fimul mov lahf pop or and (bad) jg adc xchg mov xchg pop push xchg xor mov inc dec mov sub call hlt fpatan mov jge and xchg jbe (bad) (bad) incl fwait or mov rclb push adc dec mov dec addr16 cli xor (bad) pushl sbb enter enter mov adc neg or cmc mov enter jbe mov xor repnz fwait nop mov lcall mov push dec enter or mov or outsl mov pop clc mov lret lea aas adc dec mov scas dec mov rcrl enter dec adc jae mov xchg in mov lcall imul mov add sbb inc clc mov (bad) mov lods or (bad) jmp lea pop mov add add (bad) (bad) mov adc scas outsb jp arpl lods add jnp ficom mov in pop xor sbb (bad) mov sti stos stos repz arpl test int3 (bad) pop outsl fs or (bad) (bad) decl fildll add dec imul mov loopne (bad) (bad) jg rclb push sub dec insb cwtl cmp stos test jae popf dec ret or (bad) (bad) incl inc jne xchg sub ret iret sahf dec cmp imul sub movsb push dec jecxz pop mov mov testb mov fbstp (bad) xor or rorb stos (bad) mov xchg int in push gs sub je sub pop (bad) adc sbb icebp (bad) fldenv pop incb not adc (bad) (bad) (bad) call xor mov jno loope bound fptan xorb mov cmp inc lock dec jae pop imul jne push (bad) (bad) (bad) dec adc clc pop mov call fild lock sbb ss cmp adc lea stos into inc inc mov (bad) call ljmp jmp dec xor jle mov roll sub sub and popl je stos (bad) push xchg outsb mov (bad) mov repz pop mov shlb mov imul (bad) (bad) call push and pop sub inc adc push xor jl add push call call dec sub cld mov push mov inc cmp icebp xchg sbb mov out cmpps jbe cmpsb mov (bad) (bad) call dec jno mov (bad) mov pop dec insb adc jmp add xchg cli (bad) (bad) call lods mov adc cmp iret or inc out add add jge lahf loopne incl dec jp dec out or mov mov jno xchg xchg (bad) (bad) (bad) lcall es rcll adc call pop jmp mov test push (bad) (bad) (bad) jmp xchg xchg mov and je adc cmp xor push mov (bad) (bad) mov mov sub fs rcl sub aaa in popa rorb sbb mov lcall mov sbb jg mov test xor mov clc (bad) lcall xor push and test pop notb stos (bad) (bad) (bad) incl mov sbb mov add stos lods xchg mov jo lods cld xlat adc (bad) (bad) cmp stos mov mov push fwait addr16 mov rcrb lods xor loopne (bad) call cmp push mov int or hlt dec clc orl xlat (bad) (bad) mov cli andl xchg lock pusha pop (bad) mov (bad) movsl inc mov lea mov (bad) (bad) jg jbe add or (bad) cld sbb les jmp sub lret adc fildl scas cli lcall movsl loop aam xchg jle mov push and jg das and fdiv ja mov outsb sti test arpl lret mov cltd add sbb js mov mov jbe ror (bad) (bad) lcall adc mov push sbbl sub cwtl jae aam fldenv cmpsl mov decl fildl inc into shrb inc and xchg out repnz (bad) pushl je aam jg enter test xchg jae ffree pop fldcw xchg in mov iret mov push aas call je andl jmp rorl jg cmc ret or or push fmuls push mulb movsl shl into rorb dec mov (bad) (bad) call or adc pop fldenv cmp mov repz shl jecxz mov es cli jmp ja sub mov sti adc imul pop outsl cmp data16 dec cld pop nop loope (bad) jge cmp fcos (bad) (bad) ljmp stos (bad) mov inc mov inc push xor mov pop jno sbb lahf (bad) (bad) (bad) call (bad) or add lret adc or (bad) jmp lcall (bad) (bad) (bad) std jg daa inc mov cwtl or cmp movsl add (bad) (bad) (bad) push and lods push cmp ds mov call out jae adc sbb ljmp les (bad) jmp call dec rcl lods jno xchg das call fimull (bad) (bad) (bad) push enter (bad) jl xchg mov insl loope push rcll mov movsb inc jg dec pop dec push in and lahf ljmp and pop adc ss scas lret sub xor lcall jle sbb push (bad) inc and or stos pushf sbb push (bad) (bad) (bad) (bad) inc adc mov mov daa call pop je adc pushf lahf in hlt (bad) (bad) jmp or loop xor xchg rcll or fwait adc (bad) (bad) (bad) fild mov jmp dec movsl push and fildll or jo (bad) (bad) pushl sar mov sub les sbb push das idivl rcrb inc insl add (bad) push jno out test cli and imul in movsb test arpl (bad) (bad) (bad) jg enter insb icebp pop imul (bad) in jnp stc cmp test sub (bad) (bad) jmp add scas rcrb (bad) cmova loope std daa mov in ror sbb or out xor nop cltd mov mov aas xor jmp adc sub mov aam enter pop (bad) (bad) (bad) ljmp sbb outsb dec mov das (bad) int add ja sub mov fcomps incl inc lcall sbb test outsl adc inc add rorl std xlat (bad) icebp cmp sti jge test pop mov gs fcoml test add xor imul hlt ds (bad) (bad) call mov inc add jmp add cli aas lds or orl adc in call and cmpsl rcl cmp dec push in out movsl sbb clc and mov (bad) (bad) pushl neg pop jecxz std cmp jecxz leave test add jne sbb negb mov mov add push sub jbe sub jg push jne,pn lea roll or mov stc movsl pop pop sarb das clc (bad) aas xchg sbb mov test push out push and xchg push add push dec arpl loope call cmp mov dec movsl jae pop clc mov pop les mov mov pop imul lea jb pop lret xor lcall pop push out jo shlb (bad) (bad) incl push jge cli ret sub mov fist sbb cmp jmp jl adc xchg cld decl jecxz imul pop dec pop adc mov pop jo stos (bad) (bad) ljmp int3 fwait mov jbe inc movsb sti push dec fwait or (bad) (bad) (bad) (bad) mov sub push stc mov add loopne cmc add jg pop nop and subl mov scas push dec lahf and js push add (bad) dec (bad) aam add jne stos or lcall repz (bad) (bad) icebp push push push or jl stc out and sbb insl test (bad) jge or cmpsb enter ds stos daa out (bad) mov inc or push inc inc cs (bad) (bad) decl repz mov mov pop lock shrb or xchg pushl div lret fcomi cmp fbld ret loop hlt and jp movsl push rolb (bad) (bad) (bad) ljmp mov inc test xchg inc cwtl int3 imul adc add cmc dec sub or incl xor jmp ds stos (bad) (bad) (bad) ljmp test xor mov and push mov (bad) xchg sub sub fisub (bad) stc mov movsl xchg push mov inc (bad) (bad) hlt int mov xchg pop mov lret int3 cmp (bad) ljmp nop pop test lcall xor sbb subl movsl icebp ljmp clc cltd lods dec popa add push clc enter movsl ds outsl test stos mov mov and mov (bad) (bad) jmp shr mov fisttpll xor mov inc sbb fidivrl xchg (bad) cmpsl dec inc push cmp shll jl cmc ret mov mov (bad) (bad) (bad) fistpll lcall scas mov std aam rcrb mov sarl or (bad) (bad) decl inc iret and in push sbb dec lcall mov mov inc cmp mov mov jp test fcompl mov fiadd mov sbb clc adc stos idivl jne xchg repz jno lret hlt cmpsl push ljmp adc mov add mov (bad) (bad) push dec orl (bad) loopne and fcmove mov clc lret mov dec push mov std (bad) sti add lods pop mov cli lcall inc sbb xchg dec jge outsb popa ds aaa std (bad) ljmp jnp aad xchg add (bad) cmpsl (bad) sarl sarl xchg cli data16 (bad) (bad) (bad) jmp pusha lock lods dec xchg push je insl xlat xlat (bad) out xorl fsubs adc pop outsl jg (bad) (bad) call ret mov jecxz sti sub or outsb push (bad) cmp test aad das ss or lods in out rcr dec cmp mov cmp sarb jp xor (bad) enter inc fisttpl rcrb testl (bad) (bad) (bad) inc inc xlat adc xchg xlat ret add sub leave out pop jne mov incl jmp inc push ret enter adc push sub fcompp sar (bad) (bad) call add test xor jl jnp lcall mov inc imul push clc (bad) lcall sbb sbb cmc int adc (bad) pushl loop xchg rol mov fnstcw mov insl mov (bad) pop push (bad) (bad) (bad) jmp jmp xor aad sbb jno fs mov pop repz push ljmp stos xchg mov lods idivb test inc add (bad) (bad) jmp inc xchg outsb pop sub outsb shlb arpl or and push sarb push or loopne or rol add dec ror cmp ljmp mov xchg arpl mov lea dec test les into or (bad) (bad) (bad) jmp rorl pusha dec lods pop xor sub mov rcll (bad) ficoml adc jg sub xacquire pop jnp fnsave lea js xchg loop add dec xor iret cmpsb dec cmp inc pusha insl clc (bad) pushl lret hlt or mov fisubl sarb inc cld fs fwait imul in or repz (bad) (bad) (bad) mov std mov jmp stos je dec lock xor (bad) push pop fisttpl pop aaa push dec or popa jo loopne pusha (bad) mov (bad) jo lcall (bad) pop mov sbb sahf adc add cltd js icebp outsl inc aad das and movsl (bad) jle divl imul pop jmp js daa rcrb sub mov cltd xchg aaa ret sub lcall int3 lea mov dec sbb jo addr16 mov das sbb sbb iret repz ja (bad) (bad) incl arpl xchg inc xor lret push mov lret in cmp sbb out clc (bad) (bad) lcall bound rorb xlat mov xor sub xchg jge fwait sub je fs pusha or mov xor jmp bound pop lods (bad) xchg imulb stc (bad) (bad) (bad) (bad) jle mov ret shr mov hlt imul les outsl aas jmp (bad) (bad) (bad) decl add cltd scas nop mov dec sub xchg inc ret jae mov cmp xlat clc (bad) (bad) jmp lds aad gs repnz or and add add inc leave mov xchg dec in jmp call pushl je or jns mov mov (bad) js mov sti jmp int3 flds (bad) (bad) ljmp movsl stc ret les (bad) dec int3 or sbb stc mov ss (bad) (bad) (bad) mov js or fimull icebp mov mov es jecxz in (bad) mov jg sub sti in je (bad) mov xchg sub xor jbe sbb mov decb mov mov dec mov and (bad) (bad) (bad) pushl les pop sub fwait dec daa jnp pop mov xchg mov ret into pop test mov jge add dec add push adc mov jecxz repz inc xchg push test cvttps2pi or ds fadd mov mov sbb cs jb lret jmp mov push (bad) cwtl pop pop add scas push ds dec (bad) (bad) decl and cmc xchg mov in pop jl bound jmp xchg cmpsl enter (bad) or cld adc adc jge sar fbstp xchg bound sbb fcmovnu inc jns sbb cmp mov (bad) (bad) (bad) (bad) mov (bad) mov fstpt xchg cmp je mov push mov push mov ffreep pusha (bad) cmp pusha ret bound cmp and inc inc loop jnp popa in stos cld test mov pop jo jle aas sahf fdivrp out push mov xchg sub pop aaa (bad) mov mov mov leave (bad) pusha lods hlt inc lret (bad) (bad) pushl push and and aad out into out add mov pop and adcl movsl (bad) mov (bad) (bad) (bad) incl inc test int mov mov scas int jl sbb mov adc mov mov fsubrs sub in dec lock ljmp ljmp mov mov jne lcall lods (bad) push pop enter mov mov js movsb pop inc idiv pushl inc adc fucomi pop sub xor mov gs cmpsl sar sti sub (bad) decl cmp in and hlt movsb inc mov aas push rorl jg pop xor and lcall mov sub jmp adc xchg outsb hlt popa mov mov inc mov (bad) (bad) (bad) call scas sbb or stos push das jp cli xadd or (bad) pop call (bad) xor lcall ljmp inc imul fwait ds in or in xchg pushf inc (bad) (bad) (bad) fnstsw clc lcall fildl inc or pop sahf repz repz mov (bad) jmp mov jp data16 in out ds push pop mov outsl lcall jmp jmp (bad) in rcll mov inc ja pop sahf out inc and int stos stos decl out bound xor jb test popf (bad) (bad) (bad) call push in inc mov sbb outsl lret inc xor dec fldcw pushf mov cmpsl and icebp fs inc pop adc and (bad) (bad) mov insb mov or mov out mov pop cmp sti xchg xor adc (bad) (bad) fistpll cmp and and pop push js mov (bad) (bad) cmp jmp jle (bad) scas fstl ljmp or mov add add aaa adc into mov sbb xchg (bad) (bad) (bad) incl test pop jno add adc or mov jbe add mov (bad) (bad) decl out cmpsb mov adc mul pusha push jle jge stos mov rorl sub add clc jp ss push loopew dec mov fcmovnu mov mov call mov in aas jge cmp inc jmp push xchg adc (bad) (bad) (bad) in mov push aad push adc jle mov int jns call aad cld (bad) js scas pop jns and dec mov mov dec sub lcall mov inc mov add sbb inc push (bad) (bad) call mul imul pop push mov adc push or jg jle cs dec push fsubr sub or push lret repnz push movb (bad) decl adc shl push fistl dec pop (bad) (bad) (bad) mov mov lods adc cmovl inc or insb icebp xlat rep adc cmp or outsl jmp lea mov mov inc cmp xchg shlb and jmp fnsave jnp jo sahf jmp lds in insl test jne lds mov insl push rcr fisubl jns dec (bad) lcall dec pop or movb push test outsl (bad) inc push sbb (bad) ljmp (bad) cli cmp das cwtl adc jl outsb lea dec loop ds and cmpsl dec mov in add stos dec enter xor mov xchg jmp cmp in mov testl sub and clc cs clc lods pop ret outsl add out in (bad) xor mov (bad) (bad) (bad) inc lock pop into fs xor outsl jg inc mov xor push pop add mov (bad) (bad) push movsl xor xchg in sub loope and ret lods movsl (bad) jo (bad) scas push push decl clc and mov insl scas iret ja,pn xchg xchg dec add lock je xchg and inc stc (bad) push jge popa fldl xor mov lea setne out (bad) jbe ss (bad) (bad) (bad) call scas test stc cmp call repz mov adc (bad) out lods mov (bad) (bad) lcall xor sbb es enter aam sbb jl pop test (bad) (bad) decl xchg and loope mov xchg fldenv stos fnstcw stos mov nop icebp dec jl stos aad rcrl adc push mov mov hlt scas cli add adc or push lods mov mulb (bad) dec mov cld adc sarb push xchg fdiv ss cmp les (bad) testl push icebp pop call js loop (bad) pop std jmp aaa or xchg cld push loope pop inc sub mov jmp jp fnsave sarb lock cli adc jns (bad) jg leave and pop into test mov in loopne sahf sbb (bad) incl cmc jmp jnp mov push popf pop jne and jb clc test jle mov push scas lds testl (bad) sub rclb inc stos das or movl sub lock mov insl cmp (bad) (bad) (bad) jmp sbbl (bad) or ja bnd pop test or mov pusha sbb (bad) (bad) out in mov mov sahf push lahf add je xchg adc (bad) (bad) call and rclb mov nop popa pop (bad) cmp mov or sbb fildll xchg (bad) (bad) (bad) pushl add jae mov add loope jle imul nop sbb (bad) (bad) (bad) incl xchg es out ss sbb inc add adc mov xor (bad) (bad) (bad) incl adc (bad) or mov out xor test mov in mov data16 (bad) (bad) (bad) pushl cmp rcl inc xlat fild out adc jmp mov or cld (bad) ljmp inc pop int cmpsb and inc stos pop movsl jmp xor sahf adc (bad) (bad) call imul push aad int bound sarl mov (bad) cmp xor (bad) sbb repz rcll sbb out push mov xchg pushf test repnz (bad) (bad) (bad) out jno rcll fisubl push mov test out add adc inc mov (bad) (bad) decl mov xor push jbe fs mov popa inc mov mov mov cmp add (bad) (bad) push push adc fwait mov scas data16 aad mov mov scas test inc test and test movsl jo pop and xchg hlt mov mov xor enter lods pop cmp sahf mov cmp push hlt push jp adc (bad) sti pop cmp stos sbb adc push fwait les int3 das iret xchg (bad) incl dec mov adc (bad) les (bad) decl or sub fcoms jno icebp push addr16 sbb (bad) decl or xor sahf xor aaa sar xchg lret xor xchg sub inc lods pusha into (bad) (bad) (bad) lcall add pop pushf mov imul mov cmp (bad) (bad) (bad) call sbb mov mov pop jno js sub cmp aam sbb and and inc pop loopne out (bad) pop je insb mov aaa jae std clc xchg dec (bad) (bad) (bad) jmp jns lahf scas sub pop arpl pop pop xlat js movsb push out std scas jo or cmc movsl int (bad) (bad) (bad) call xchg mov dec sbb dec jb movsl daa xor add roll lock lock add mov inc scas jae jae clc inc mov mov adc aas inc mov lods fldenv and ljmp mov mov loop jmp cs jmp add xchg test out push out out (bad) (bad) lcall mov aam jl movsl mov out (bad) mov dec dec in loopne mov and mov aad mov pminsw pop mov aas pop jle add add fwait lcall or and adc cld loop rol add outsl cli pop cmc jl sub cmc sysexit pop popa loopne enter aas stos scas jp (bad) (bad) decl repnz insb xor lahf mov pop icebp nop fucomp mov add sbb fcompl xchg sub dec loope mov sbb es out mov (bad) (bad) decl rcll xchg lcall add fdiv xchg sbb jo sub xchg lcall movsl stos pushf js fcomip ljmp push pop mov lahf lcall mov and inc cmpsb sbbl movsl push sahf in jmp gs add jnp rcl jg shrl mov imul cwtl (bad) (bad) pushl inc or xchg sbb mov dec das scas mov inc out mov test mov xchg clc test dec stos inc mov add xchg ljmp (bad) (bad) (bad) ljmp inc iret sub adc daa sbb lahf into cmp loope out dec rclb cltd (bad) (bad) (bad) pushl and inc (bad) in sub add aad scas mov push xchg rcrl cmp inc notb mov add push push xor mov mov (bad) cwtl (bad) icebp lea call mov dec jle mov or xorb ljmp mov inc (bad) (bad) (bad) (bad) cmp sbb (bad) sbb push inc hlt xchg push cmp mov lds cmp xor stos (bad) (bad) (bad) jmp xchg daa pop lea sbb mov cwtl movsl xchg lds insl repnz out inc mov je incl and inc lret mov xor jge push jno leave mov mov aaa cld (bad) lcall aam cmp aas and jb (bad) std std push mov (bad) decl (bad) pushf pop in or gs fdivrp xchg jbe bound (bad) incl jne daa sub jl sbb mov fadds jle stc maxps pop add (bad) ljmp (bad) mov movsb lret ret pusha jle jp sbbl (bad) jle cmp repnz dec inc movsl mov xor loope sahf addl mov (bad) (bad) (bad) fbld dec test xchg jbe add iret out dec stc xchg cli (bad) (bad) (bad) call jns in repz fucomip mov xchg mov (bad) pushl cwtl nop in repz das nop xchg or test push (bad) (bad) (bad) (bad) (bad) mov mov data16 jbe test xchg sti cmpsl push adc popa (bad) (bad) cmp cmp ljmp fwait mov imul and jae aaa push (bad) dec fcomip pop lock push cmp add push mov adc addr16 std jp in cmp leave clc (bad) decl lret mov (bad) sbb lea std mov pushf mov sbb sub (bad) (bad) (bad) cmp cmp xor jnp xor cmp inc push mov dec (bad) xchg or (bad) jg cwtl in insb inc xchg and lock jnp andb xor in mov test fsubl xor js fidivrl pop or stos sub jle mov push cltd mov xchg mov negb sbb dec adc je jle cmp or push (bad) sub push and jl mov inc shlb movsl sbb (bad) (bad) (bad) incl pop fadd shl sbb lds sbb jl inc pop jg jmp sbb cmp dec notl stos xchg mov into jae sahf push (bad) jl adc xor inc scas ja ss mov (bad) (bad) lcall push lds mov or dec mov stc mov push mov or in lods sub dec dec xor mov (bad) (bad) jg (bad) aad jmp xor add testl sub fstps lret stc mov push jae (bad) (bad) call rcll and sbb push iret xor jge cmp push xchg adc les mov mov cmpsl ljmp andb aaa ret test movsb movb push (bad) (bad) (bad) lcall mov cmp ds rsqrtps imul aad ss push or add mov cld das test jmp dec iret or lock fwait push rcrb xchg jmp push (bad) decl imul add (bad) cmp pop arpl jmp xor sahf cmc stos or push mov int3 sub nop cmp out sbb mov sar ljmp daa and jle mov push or lahf adc outsb decl sbb popf xchg pushf mov pop mov cmp insb mov data16 pop jae push lods and fldenv xorb (bad) pushl sub jbe xor lock je insb rorb imulb cmpl pop aad daa lods pop mov arpl gs pop (bad) imul cmc (bad) (bad) (bad) call rolb adc (bad) jno insl bswap sub addr16 jns repnz cmp inc dec addl ljmp dec pop xchg jmp ds lock cmp jge lcall and ljmp pop adc ljmp call scas adc (bad) (bad) mov inc rol fadd leave rclb push movsb add scas mov mov cli addr16 ljmp cmpsb test mov incb aam lds mov je cld add mov sub (bad) decl push call icebp nop sub jne imul in fs gs (bad) (bad) push (bad) xlat cmp mov loopne mov lret xchg adc mov mov xchg (bad) (bad) call pusha xchg push xor push mov xchg insl mov cltd mov jns xor leave leave xchg aad pop mov rcl es sub xor (bad) pop lds pop sti sarb mov test loopne (bad) (bad) out (bad) lret xor pusha arpl cmpsl xchg aam dec xor (bad) mov insl mov ret add hlt jns pop clc jb mov test mov add xor cmp xchg cli sub dec pop cmp insb mov adc mov and mov popf inc jmp sar das adc jle inc cmc leave adc sar (bad) (bad) jg sbb lret pop mov test in cmpsb push lds mov into in dec fstps scas cli aaa pop ss mov and inc in outsb push outsb add push (bad) (bad) (bad) decl push (bad) jg lods int xchg std push sti movsl sar in push pop push icebp xchg dec mov inc (bad) xchg dec stos (bad) (bad) jmp arpl ja add in test cmp mov scas clc (bad) push push jmp mov test mov in dec outsb imul ljmp (bad) push repz adc out andb and inc in mov xor jns (bad) (bad) (bad) (bad) fistl or lcall cld jge mov cmp jecxz push les das lds cli add imul orl ficoml mov andb mov mul lock imul xlat (bad) decl jne jns mov stc pop repnz (bad) jg mov mov add jbe or pop jnp cwtl (bad) mov out rolb int dec ds mov lcall nop add fidivr mov dec cmp loop pop imul dec insb movsb (bad) (bad) (bad) push add pop push rorb lahf (bad) icebp fcoms mov dec scas pop lods sbb mov jecxz push rolb xchg sub pushf cs in out (bad) mov ljmp or dec mov lock nop mov mov lret push into test inc xor or adc push jmp inc cli call jmp decl out push imul add stos ds int3 out ror ljmp inc clc (bad) call loop aas addr16 scas push daa loope daa cmp fwait (bad) (bad) ljmp je,pt jge insl push adc enter rcr stc movsl imul leave mov push xor xchg mov (bad) (bad) (bad) mov hlt bound mov js notb cmpsb jo jmp imul sub adc mov pop inc mov cwtl or int3 mov pop sub (bad) (bad) (bad) decl jp movsb in add (bad) sti and xchg inc inc xchg push int3 jnp dec in dec lds push scas mov (bad) call ror push in add adc stc xor cmp xchg dec (bad) fidivrl and nop (bad) (bad) incl mov ds por insl (bad) or sbb sub sub popa sub add idiv (bad) dec ljmp lahf lret stos ss pop fiadd inc test loop mov (bad) (bad) call and pop sbb or push adc gs shll (bad) jg ror add movsb mov scas xchg cltd push scas stos xchg mov inc jne and fildll or aam mov mov push pop loopne cmp xchg stc sbb frstor mov out (bad) (bad) jg ret lds mov adc pop fiaddl ljmp test sar xor cwtl jno mov ds (bad) (bad) mov pop add dec xor outsb es outsb je ficompl aad mov add iret fisttp push orl adc mull mov inc (bad) (bad) (bad) incl mov (bad) (bad) sub inc adc js and sar das clc (bad) (bad) cmp testl and sahf inc jno mov (bad) (bad) (bad) (bad) fnsave cmp cwtl pop push and sub cmpl popa fidivl mov push mov aaa mov push lret stos or and ds mov sub mov pop in jge repz (bad) (bad) pushl mov cld add dec sbb inc stos in mov adc aas (bad) dec adc cmovo (bad) (bad) out and pop jo jb (bad) dec mov xor mov (bad) (bad) mov adc aam adc inc sub and jo mov enter sbb int3 stos dec (bad) call sbb cmpsl or push out sub fbstp mov and (bad) jle movsb xchg pop mov nop (bad) bnd pop test or xor loope push repnz (bad) (bad) lcall imul loopne pop leave sub add mov mov cmp (bad) (bad) call popa dec or leave fcoml ljmp aad lods jbe daa inc cmpb mov jmp jl dec push push pushf cld push pop mov mov ret adc imul mov aam push mov cmpb cmpsb cmp jae (bad) (bad) (bad) incl out jecxz dec mov int3 xor or pushf mov scas fs sti cltd int3 pushl ret ds mov jge sbb (bad) push jmp mov xor mov mov mov dec mov or jmp xchg rorl inc or cli lret lea adc jne mov in (bad) (bad) (bad) ljmp cmpsl xor out sbb (bad) or or fistpll insl std and or sti ds push mov mov jmp shlb fmulp je jmp fildll push mov add clc ljmp movsl mov push mov ds es lods and mov fcmovb int cld (bad) fisttp mov in pop cmc mov lock in ror sub sbb pushl sbb mov imul popf mov movsb imul les xor dec cld push dec push lods test push adc (bad) cld push mov dec inc xchg xchg ret sub xor xor xchg dec mov mov and jo,pt push test mov rcr sub aaa popa rolb sahf mov mov aad loopne imul mov cwtl adc decl lret clc add cmpsl fwait (bad) pop lds jbe mov (bad) (bad) incl out adc push leave jg mov stc sbb add jp and outsl cli add inc insl pop jb sti fiaddl xchg out pop lcall decl fnstenv loope out mov loop les pushl jbe pusha cltd repz or jns jmp cmp (bad) (bad) jmp pop outsb cmp pushf arpl cltd imul enter ds aad pop mov (bad) ljmp adc sti pop sbb pop mov cld xchg mov xor (bad) (bad) pushl iret clc mov je outsl push (bad) mov (bad) into shrb clc xlat add jle sub inc adc movsl mov pop popa xor (bad) gs jecxz pushl cld aam addr16 xchg mov mov cmp xchg pop scas adc call (bad) and fidivrl insl jp pop xchg mov movsb loopne daa mov call xchg xor xor dec mov repnz lods dec mov inc js xchg ljmp adc pop inc xor inc fs aam pop sub lcall xor out bound push fs dec fnstcw pusha inc stc es (bad) (bad) (bad) js test bound test fisub fs xchg add nop mov mov sub (bad) (bad) jg (bad) fisttp movl add sub decl out leave dec lock xchg mov sahf call push mov cmpsl das (bad) (bad) (bad) ljmp into (bad) fcomps mov (bad) mov xchg or int cmpsb stos mov jp (bad) (bad) jg xor mov into pusha movsl lcall pop mov sbb cmp (bad) aas cltd dec int mov repz xchg scas jne (bad) pushw in adc (bad) (bad) lcall das lret popa mov pop cmc jnp in out divb sub ljmp mov mov pop mov mov clc inc rolb xorb xor out fwait out pop mov loopne cmp mov jmp mov imul les add jbe jge fmuls pop adc into (bad) (bad) (bad) inc pop sub icebp pop ret shrb sahf cld mov xchg adc add mov mov (bad) fcomps mov push int inc xchg adc xor scas jl (bad) (bad) (bad) (bad) ljmp pushf pop xchg hlt jbe (bad) stc int scas push mov cmp cwtl int add push push scas clc (bad) call dec rorl pop mov sub pop in sbb in jbe (bad) (bad) (bad) cmp pop cmpsb addr16 cmpsl and popa add add int xor orb cmpsb or lods lock test out mov pop ds sti mov push jbe cmp iret hlt cltd bound je inc mov (bad) ljmp gs jmp lods cld or bound fdivrl cli es mov and mov add lret jnp mov addl inc repnz outsl subl lcall dec in inc xchg imul mov jno (bad) mov imul std (bad) in ret mov stc mov add or or lock arpl push or das cli xor sub xlat das or sub mov inc lahf push push mov and movsb pusha jno mov and (bad) (bad) incl aad jle xchg lret pop (bad) cmc xor adc or push mov sbb int3 (bad) jg (bad) mov mov es inc mov mov (bad) (bad) jmp mov mov push inc push add push add mov pushl sbb cli and imul in xchg sbb (bad) (bad) call stos mov inc dec jno sbb adc cmp dec outsl mov test add adc (bad) (bad) (bad) std aam add inc scas xchg fnop pop jge hlt pop pop repz out adc inc lea int (bad) (bad) call (bad) repnz insb clc lcall mov imul (bad) (bad) (bad) lcall incb cmp cmp aam and sbb loope (bad) (bad) andps jbe (bad) (bad) lcall cltd cmp jle lea pop test push lods jecxz push fcomi pop add fwait jbe pinsrw lds push std sarl push test push or push lock icebp sarl push (bad) sbb (bad) (bad) decl or fwait test cs lods pop sub inc lahf jae shr add cmp cmp int loopne pop ror hlt inc cmc scas sbb push mov or cmp lods xchg dec int mov (bad) (bad) call sub jne and adc sbb js ficomp les icebp jl dec test je sbb xchg stos fimul popa stos push mov add ljmp xchg adc inc xor (bad) pop (bad) (bad) (bad) jmp jne sub xchg xchg orb aas jle jge iret in pop and ss ljmp or adc mov rorl loope pushl mov sub lea outsb pusha in push outsb fildl (bad) (bad) jmp mov push mov xor jmp adc leave push and sar (bad) jmp add jecxz test ljmp nopl aas push leave shrb test mov sbb (bad) (bad) (bad) pushl in sub push xchg aad sbb insl frstor dec (bad) dec adc mov idivl jo adc (bad) (bad) decl pop rolb in mov lret add xor out push dec cli xor (bad) (bad) incl dec std push stos in dec mov sbbb ja xor out xor xchg add (bad) (bad) (bad) pushl dec cmp or push jbe sub test xor aad into dec xchg cs (bad) lcall movl xor mov jle sbb loop (bad) jmp fwait fs dec bound and (bad) adc test push inc mov and (bad) call cli js pop addr16 arpl stc repnz add mov incl xlat in inc fsubrl ret (bad) je (bad) mov fdivl dec jmp lock lcall mov pop shrl pushf sarb and data16 adc dec leave jno sarb sub push mov pop mov add fdivl dec pusha mov dec test decl push jbe ja sahf mov mov push fwait lret adc or mov push xchg jne (bad) ljmp mov lcall pop ds outsb ljmp inc xchg std mov adc push faddl test iret test in xchg aas subl fwait decb imul mov adc and (bad) (bad) jmp rolb inc mov sahf sti add sahf adc (bad) incl xchg rolb mov ds ret xor (bad) (bad) mov leave xor out cs loopne mov jp add inc mov ja aam push pop arpl andb sahf sbb jmp dec jb in inc add adc pop lahf popa pop sbb jl ja sub jecxz aaa sub lock sub icebp (bad) (bad) pushl scas fwait inc pop jge fldl mov pop (bad) mov inc adc mov (bad) (bad) (bad) fisttp popa mov adc leave jmp xor ss mov xor (bad) and in push xchg add jmp dec xchg cli jecxz pop lret insb fwait clc jg leave gs push lods xchg int3 mov xchg ljmp mov add mov inc and jno xchg fistpll cltd es inc and fs xor jmp or sti loopne xor sbb decl test xchg mov cmp out ljmp int ljmp mov dec or flds inc mov (bad) (bad) (bad) lcall andl mov (bad) jnp cld mov pop fdivrl (bad) (bad) (bad) call add cmp ss pop push jns push sbb adc (bad) (bad) inc ss ret jle xor add inc cmp xor movsl sub lret imul data16 lcall xchg mov and (bad) push add mov call movsb loopne or clc fs lods mov flds ret inc repz mov in ret (bad) dec (bad) sub add mov test or lds scas inc sub xorl dec pop lcall cmp mov lret mov arpl mov jnp test mov sbb (bad) (bad) jmp iret push push mov stos in es mov pop xor ja out cmpsb cmpsl (bad) mov das scas or mov call pushf cltd push cmp push mov sub lcall jp jle and mov mov cld jnp xor mov into push test jmp std incl lret cmp push inc jbe out mov test (bad) (bad) (bad) incl mov add (bad) aaa or hlt pop outsb mov pop mov sub dec enter jg call dec xchg (bad) mov xchg fiadd dec mov push pop mov std jns loope (bad) push push sub rcr ja xchg mov pop rclb or (bad) (bad) fistpll sahf fs pop cmp mov outsb pop mov ret in daa test decl fs rol test enter cmc (bad) push jecxz jns jo lea adc fcmovnu icebp call cmp xor inc lcall shrb inc sbb (bad) (bad) inc rcl sbb sub daa inc and sbb inc cmp (bad) (bad) (bad) decl push aad pop jbe int xlat inc pop das out cltd shrb pop xchg sub sub pop add xor mov sub pushl aam lods mov rcr adc (bad) (bad) pushl ljmpw add pop data16 mov and sbb incl pop mov cmp jo movsl mov call cwtl sub or xchg dec jl into or mov inc xlat enter pop pop mov (bad) lcall (bad) jae pushf ret mov das mov shll pusha (bad) (bad) (bad) call dec xchg pop pop cld xor mov xchg sbb xchg fwait mov in adc fdivr lcall (bad) and xlat push push fadd insb and xlat fist xchg je outsl mov lds (bad) (bad) lcall pop xchg popf addr16 jg out sub mov and push inc jno adc xchg aad (bad) (bad) call cmp ret jno (bad) and inc int mov jae rorl pop adc xchg jbe add mov sarl pop xlat push lods lods inc arpl inc loopne sti loope clc push dec sub mov stc jns ret jmp out sub pmaddwd fimul scas inc pop imul add mov and (bad) iret cmp inc fistpll incl dec or adc out inc adc jno xor sub mov sub jl mov aaa and gs mov (bad) push ja lock push cmp (bad) ljmp xchg jl jb addr16 sub or cwtl sbb data16 jmp inc mov mov inc shr (bad) dec (bad) add inc xor rol pop xchg adc sbb or push xchg sahf aaa pop test or loope lcall divl lret repnz ret cmp ret clc jg dec xchg sbb or ja xchg jp push xor in into movb ret incl and mov mov xchg sub out mov dec or (bad) (bad) and aas jg or lock icebp jmp pop rolb lahf outsl and decl cmpb leave fnstcw addb (bad) (bad) pushl movsl inc mov mov pop cmp dec push sub (bad) out imul add nop notb pop and gs mov movsb mov and jmp stos dec jne cmpl (bad) (bad) (bad) jmp pop mov dec (bad) rol gs movb xchg cmp ret lea push mov (bad) (bad) (bad) incl call or push jae movsb stos inc mov and add (bad) (bad) (bad) call mov pop jb out je dec pop icebp pop popa add xlat out xchg decl dec fbstp lods pop pop pusha and xor subl cld imul pop (bad) (bad) (bad) inc or cmp cld inc pop jecxz cmp cmpl sbb (bad) (bad) (bad) pushl pop mov sub lock bound and push cmp (bad) call (bad) (bad) pushl in or and xlat iret pusha insb jl popa xchg (bad) fs loop (bad) (bad) (bad) mov add stos add repz push jno in (bad) xchg jne push loope lcall xchg mov movsb mov push mov mov std (bad) mov mov and sbb ret pop fisttp incl in out sbb aad ljmp or cmp sbb jb lret or and pop add sub mov mov shr jge inc std push pop jmp (bad) (bad) (bad) (bad) decl or mov sub aaa outsl or inc jp pop sbb (bad) jg outsl sbb inc sbb pop je ret pushf mov mov xchg (bad) (bad) (bad) ljmp jnp sbb fcoms mov jae inc stos int3 cmpsl lret lock pop lret shrb xchg lods into mov jge jp enter icebp and (bad) stos and pop mov je outsb adc daa xor or cmc push pop dec and jb (bad) (bad) (bad) incl mov push insl popf subl jl and ret mov dec (bad) decl fadds dec out jo mov out push pop jle aas test sbb (bad) mov jle rclb sbb sbb sub repz and icebp (bad) pushl test es or push push js pop mov sbb loope ljmp pusha orb push xchg mov (bad) (bad) fistpll sti cmc in incb dec movsb and cmpsl test jmp loope cmp clc jmp and or fdivl add adc add and mov and jno sub enter fisubr (bad) (bad) cmp jle pop (bad) jg pushl movsb popa lods mov push je mov fidivrl lret int3 cld (bad) (bad) (bad) incl sbb out pop pusha and cs fisttpl sub pop (bad) (bad) (bad) jmp xchg jl xor or jae inc cmp stos testl into (bad) (bad) (bad) dec xchg cs movsl sbbl lods pop jnp pusha dec ret fbstp fldcw mov push pop cs cld hlt mov addr16 (bad) (bad) call pop cmp mov xchg cmc xor nop imul fdivrl in in push mov test incl or sub imul sahf pop sub xor sbb xchg in inc push mov call sub popa and dec cmp aam (bad) (bad) ljmp and fucompp in jg scas jmp addb fildll outsl mov dec (bad) addr16 mov scas das or inc outsl mov test insb sub xchg jge hlt pop inc mov sbb lcall test jg std test rorb xchg mov (bad) (bad) call loope dec dec xor mov dec dec add (bad) pop dec bound (bad) (bad) (bad) (bad) push call inc pusha pusha clc pop (bad) loopne popf fstpt and or std divl sar inc fildll adc aas (bad) (bad) (bad) (bad) mov gs into insb popf fwait loopne lahf loope sbb insb repnz (bad) das cmc cmpsl (bad) (bad) (bad) pushl hlt sub jno loopne ljmp mov fidivl cltd addb int jmp sarl lock pop pop icebp mov cmp std enter hlt xor mull es (bad) pushl (bad) rcrl (bad) aam (bad) or xchg insb pop mov outsb outsb xor out lret (bad) decl jp inc fcompl es jb into sub ret jns ror mov lds push jo inc iret push enter (bad) (bad) (bad) (bad) fimul test pusha out sub iret (bad) sbb bound add inc cwtl clc insb inc inc adc adc jo dec and (bad) ljmp dec adc inc mov daa lock sub or mov mov pop dec push (bad) (bad) (bad) (bad) std aam scas push jecxz add lock ljmp push mov xchg xchg imul fmull jne movsl (bad) push imul rcrb mov dec adc cmp jnp pop jno mov jle inc int3 push cli inc int3 jo into xchg xchg (bad) fadds sahf mov sti adc aaa movsl and fwait (bad) dec pop ss (bad) mov pushl or xor lret sub jge mov outsl aaa cld jmp adc in dec lods xor or loope (bad) (bad) (bad) ljmp call int3 shrl or popl jle mov pop insb gs (bad) cmp andl (bad) (bad) push pusha mov jne xchg js or push and lret adc mov ret pop (bad) jmp push ret movsl dec mov mov rcr push cmp sahf xor (bad) ljmp js add xor leave and test pushf fstp lret inc mov (bad) (bad) (bad) cmp jno xchg add out inc jle mov clc mov out or pop jmp (bad) (bad) (bad) jmp gs add sbb dec addr16 clc pop jno jle (bad) (bad) fildll leave cmp das jmp in cmpsl add idiv loope sub (bad) (bad) pushl xchg outsb aam jl cwtl aam std imul push inc mov sub (bad) (bad) (bad) pushl pusha jge push inc pop imul adc aad mov mov repnz dec xchg jb in jb bound pusha mov xchg (bad) (bad) (bad) mov (bad) loopne mov pop int push fisubr bnd das clc (bad) and jno pop lea (bad) (bad) (bad) push sub sarb movsb push xlat aas jecxz xor push test (bad) int or and mov lret add (bad) lods aad adc or decl rorb je inc les adc (bad) (bad) (bad) jg adc push andl push sub jmp and inc sti adc jno (bad) push push movsl xor in xchg subl scas shrb xor sbb das xor and mov add inc arpl inc push or dec data16 (bad) jg out mov loope aas (bad) xchg aam or (bad) add jb incl sub mov test push rorb ds scas (bad) jg fmuls jns mov xchg clc lret jle cmp mov (bad) jg mov mov lds adc in push shl adc (bad) test decb inc (bad) (bad) (bad) jmp in mov adc outsl pop mov add lods sbb shrl or adc mov inc xor (bad) (bad) (bad) call sbb in inc pop (bad) push jns push and (bad) clc and out pushf and (bad) (bad) (bad) (bad) out xor mov in scas test and movsl js cmp (bad) (bad) call fmuls mov mov mov push call add (bad) push jecxz adc mov test fnstenv movl xchg cld pushf pop adc (bad) (bad) (bad) ljmp jne push sbb int3 mov aad mov out push inc pop push cmp cmp data16 push ret mov jo cmp ror int sbb (bad) (bad) (bad) jg or (bad) sub repnz mov xchg add out mov xor mov sahf in scas nop ljmp xor mov les (bad) (bad) push jl jle fdivrs mov dec jae mov jle mov xor add pushl add add fstpt (bad) (bad) (bad) lcall aas mov push jg jbe fisttpll jmp sbb pop adc push push xor cmp inc mov lcall jb and shrl outsb pop push cs aad xchg mov push addl lcall sbb sbb xchg xchg insl sbb add push adc in sub or rcr xor jle ja push jbe es enter es jnp xchg shlb mov popf (bad) mov pop scas call xor cmpsl addl int3 (bad) (bad) (bad) dec mov loop (bad) fwait or ficom and scas sbb (bad) (bad) mov xchg je push mov inc sbb xchg add push loop and pop xchg mov (bad) (bad) ljmp mov dec mov sti push iret (bad) out test mov xchg test or pop icebp (bad) inc fiaddl or pop movsb jle and sbb rol sbb sub fcomip aaa cld push ja clc cld dec fiadd mov aad mov in outsb xlat xchg jecxz aam call cmp mov add mov lcall pop xor inc jnp mov add iret cmp pop inc (bad) pushl rcrl mov repnz subl fsubs ljmp sahf fldt pushf (bad) imull iret xchg fistp sub jmp in int aam cmp pushf jnp js sub sub xchg dec pop (bad) incl ret shlb (bad) mov je mov std (bad) (bad) push cmp mov jmp sbb sbb lock xlat dec mov jmp daa insb or fs gs ljmp pushl pop sub jl sbb test dec addr16 xchg or call push push mov sub sub push shr icebp or dec ret (bad) (bad) cmp pusha paddb pop mov xor xchg sti and push adc (bad) decl sbb dec xor sbb fcomps inc repz inc jle,pt mov cmpsl fs shl std xor pusha add (bad) std arpl lcall test in xchg dec inc push sarl pop std add mov adc mov sub pop xlat outsb add pop hlt es fwait push adc ljmp movsl mov into insb icebp mov (bad) push pop jae popf mov cli imulb xchg mov mov mov stos and mov pop popf lret (bad) incl mov mov into imul add mov cmpl vpsubsb aaa rcrb xchg cld cwtl mov shl adc lods add xlat xchg mov stos (bad) mov fs popl fdivrs ficoml lds jns cltd mov lds es test mov pop dec scas add push sbb mov inc (bad) sbb mov outsl ds mov call stc push cmpsb (bad) xchg (bad) je mov popa pushl adc ds pop adcl pushl jne and ja pop xorb dec mov mov std aaa inc pop (bad) ljmp pop in dec xchg and insb cmp jle mov bound movsb (bad) lcall pop movsl mov in popw insb adc mov add xchg ds sbb decl mov inc or lods rcrb inc inc cli mov dec sbb fdivrp (bad) (bad) (bad) jl test sbb xchg pop inc mov std test arpl cli dec imul pop mov fwait xor or in pop mov xor pushf rcr (bad) (bad) (bad) (bad) cmp sub push hlt and inc xchg test (bad) jmp mov outsl aas and (bad) (bad) (bad) lcall sarl mov dec push rcpps inc lods jo int3 scas out in shrb shr sub jmp sbb inc adc (bad) std inc jno mov pushf or lds das xchg (bad) (bad) (bad) inc jg xor das lret fldt add out leave out xchg (bad) xor xor dec push (bad) pushl pusha push int clc enter into adc jno in fidivl jmp (bad) mov cli and sub in mov or sub xor (bad) mov push and arpl push daa sub pop push cmp mov (bad) (bad) cld data16 inc loope fs adc fstpt push test sarl mov (bad) incl mov inc stos fldenv repz inc ret int3 daa add xchg mov xchg xor sub mov (bad) notl std ljmp ds xchg movnti or push loop jg or dec rorb pop inc mov pop repnz (bad) (bad) (bad) decl in lods adc mov dec test cmp and (bad) fimull aad sbb cmpsl xor xchg or and pop (bad) and ds (bad) (bad) dec leave xchg mov (bad) xor inc push js int push dec dec xor js mov incl mov inc repz stc jae dec test (bad) (bad) (bad) jmp pushf stos pop lcall or jae push mov aad or mov lcall (bad) fisub inc incl sub loope fidivr addr16 mov (bad) (bad) ljmp je stos push jp sbb and pop aaa fist xchg dec in (bad) jg aaa mov mov subl daa xor mov fiadd int3 mov ljmp or incl mov outsb das sti fcompl xchg cmpsl test push popf sub mov dec test (bad) and cmp push mov lret xor adc ljmp mov pop fsubr push popf repz inc mov add (bad) (bad) (bad) sahf mov mov lods add das cli lcall jnp dec (bad) adc mov xor scas push test xchg push push bound movups mov (bad) incl daa jb scas fwait in loop popa js xchg icebp rcll in stos (bad) (bad) ljmp mov sub mov insb xor leave mov (bad) (bad) (bad) js test push das movsl aam cmc xchg jg cmp inc popa pop jmp fnstcw out cmp mov iret sub mov test call aad xchg les (bad) dec sahf jne xlat (bad) call cmpsl popa mov call xchg outsl js adc push push adc (bad) (bad) (bad) clc movsl scas xchg aas iret jp dec shrl scas jp int adc and jo (bad) (bad) (bad) (bad) decb bswap inc rclb push into pop fldenv xor cmpsb ja dec xor cmpsb (bad) jg stos push fs test push dec push ret or das sahf repnz in nop jo stos (bad) (bad) lcall clc inc xor fdivl push pushf rcll cmpsb jno xchg inc jg stc mov push cmc repnz sub mov xlat jmp or pop adc lds int mov (bad) (bad) lcall ja xchg dec lds add hlt add int sub jo xchg scas add call insb jns sub rorl in fidiv cmp (bad) loope adc loop aaa std (bad) out or ja or outsl roll outsb add sarb aaa push std (bad) ljmp add pop pop scas ja xchg sub in adc or pop dec lret or mov (bad) fsub jae mov (bad) jb (bad) (bad) (bad) mov gs fildl and mov scas lcall add jae lahf loop rolb pushf ret xchg add hlt jg mov mov fs sar mov xchg jb dec fdivp dec push push (bad) (bad) (bad) jmp pop mov scas popf fwait in or fnsave cmpsl xchg stos mov jns arpl mov (bad) (bad) (bad) pushl or sub test mov sbbl mov inc pop enter pop stos and (bad) decl push push push shr push sti adc cltd test fnstsw mov ss lock jmp addb inc or (bad) fstps movsl xor adc cwtl cs (bad) (bad) (bad) jmp xor in scas dec mov jg push push pop sahf or enter pop sub decl sub mov outsl icebp into adc dec push xchg dec jle push push mov (bad) (bad) pushl std cli in and mov adc sbb addr16 push fcomip adc add (bad) add (bad) (bad) aas jp adc cmp xchg inc cmp insb popf fdiv (bad) (bad) (bad) call add push mov aaa (bad) xbegin xchg popf pop cli cmp (bad) (bad) lcall or pop fld xlat pop loope push mov mov aam faddp cmpsl (bad) (bad) (bad) ljmp dec (bad) loop pop add call xchg ljmp fstpt xor decl in or or sbb mov fnstenv mov test jno (bad) (bad) call cwtl push push or inc and out xor aad aas lea ljmp cwtl jp decl stos push fimul inc xor (bad) mov aas je mov push adc jg inc insb ja and ret (bad) (bad) jmp aaa pushf mov jecxz gs in inc loope shlb jge test cli (bad) jg jbe add inc push (bad) push cld nop jge imul cmp mov jmp outsb mov push sub (bad) aad fnstsw lret push repnz mov (bad) sarb push (bad) (bad) (bad) mov xor andl dec out mov xchg cmc dec xchg subl (bad) (bad) decl cmp cmp inc roll rcr mov jns arpl cmp jp add (bad) (bad) call xor inc (bad) cmp popfw pcmpgtb jmp cmpsl les or xor or cwtl pop ja xor test lcall cmp and out divb int out enter fincstp sbb das mov and push sbb cmpsb and (bad) jmp lods mov lret imul cld dec inc sbb call mov loopne (bad) fucomip enter fnstenv fsubrp in push and mov in fnsave mov (bad) dec ds (bad) (bad) jg xchg mov cli mov mov aas jge in xor xor leave add pop ds mov push cmpsl imul sub mov test mov stos or jecxz (bad) call rolb (bad) ds inc xchg lea xor repz push ds (bad) (bad) jmp out nop aad jns jns and or mov aas mov inc cmp and jmp divl addr16 pushl sub cmpsb fcoml rcr shrb sarl call loopne adc push cltd aad pop movsl into std popa push xchg add xchg ret (bad) (bad) (bad) lcall add fildll imul es mov pusha repnz jo outsl mov incl outsb shl insl push (bad) adc out jno adc mov inc sub jbe (bad) (bad) ljmp mov jg jp push mov xchg jnp mov mov jl (bad) (bad) (bad) jmp xchg sub dec (bad) mov inc push nop sub sbb out (bad) (bad) (bad) (bad) mov rcll sub insb or (bad) mov inc andl lcall bnd cmp mov call mov dec cli dec scas cmp jg pusha ds jg (bad) mov (bad) (bad) (bad) jmp push adc les push leave cvtps2pd leave (bad) fistl xchg test int mov std sub mov sbb xlat (bad) pop lods inc fistpl cmpsl arpl clc xor into (bad) (bad) (bad) call dec std mov mov fcmovnu imul xchg lcall shlb mov pushl in pop jp cmp lods aas lock jecxz aam daa dec dec scas inc or enter negb dec and orl (bad) ljmp shll pop xlat (bad) lcall insl ds dec sub call mov push bound jns icebp jnp or inc loop push adc and (bad) (bad) (bad) decl add or jg jecxz cwtl cli popa jns and push sbb (bad) (bad) mov cs dec (bad) jns (bad) int3 dec pop jle inc mov fldenv imul adc xchg dec jmp sub fadds inc fstp rcl (bad) (bad) (bad) jmp repz push dec xchg push adc adc stos xor push pop cld in imul push add inc shlb sub push pop xchg jns and (bad) ljmp mov xor bound mov (bad) int pop in cld xor loop cs mov mov or loop push sbbl shlb out push lret rorl mov push cmp add loopne outsl in data16 (bad) out and ret mov dec mov mov fstl and pop (bad) (bad) (bad) pushl adc cs inc stos mov test inc int3 mov mov sbb push pop (bad) (bad) (bad) (bad) ljmp sbb stc int sarl xchg pop ja inc lods cmp inc dec mov leave mov (bad) (bad) fdivrp stos out add cmp ss jbe decl fistpll and push xchg pop dec xor push sub rorl inc mov jge (bad) (bad) (bad) (bad) mov pop hlt test (bad) ds inc cmp aas inc mov mov (bad) mov int3 mov cld fimull xchg clc imul ljmp clc decl mov and jnp fs dec arpl jg icebp (bad) (bad) (bad) inc cmp mov add adc loopne je in pusha inc inc cld test mov cmc insl decl or cmpl cmpsl out test (bad) ljmp mov cltd testb loope ret insb cmpsb mov lock add (bad) leave mov sar outsl mov adc sub inc sti rclb adc (bad) mov lock (bad) decl addr16 pusha mov inc push xchg dec lds idiv (bad) call icebp pop fsubr call pop fsub push adc (bad) (bad) jmp mov and cltd or dec and clc test sbbl mov cmc cli xchg or push mov mov jp fldt sbb sahf pop rcr lcall (bad) mov fnsave or int inc and mov jmp dec pop adc dec dec xchg movsl scas shrl movsb jo sbb (bad) (bad) (bad) jmp dec loope pop sbb shrl sbb fsts test outsb sub mov jae (bad) (bad) (bad) incl aam cmc mov lods stos push add jmp push outsb pop mov lock xor and in in cmp ljmp (bad) (bad) (bad) jl cltd xorl (bad) sub sub test adc test out jno push add (bad) (bad) dec mov cli lcall mov or leave (bad) hlt push push cltd (bad) mov mov (bad) (bad) (bad) fmuls push xchg scas push ja out xor and in test (bad) (bad) (bad) fcoms iret dec icebp pop fbstp aam xchg inc add clc sarl pop jmp pop jae (bad) jg pushl sub data16 jp popa int out loope loope imul (bad) decl push cmc in xchg xchg sub mov xorl jo enter int3 xchg pusha jle enter (bad) lcall fwait mov fadds mov sbb sbb out pop cmp (bad) call mov xor rorl mov inc and xor pop (bad) stos (bad) ljmp mov icebp jg inc stos add ret xchg mov or les mov add repz popf mov (bad) lcall inc mov sub outsb xlat add jle fisubrl (bad) add (bad) decl mov jmp mov xor (bad) repnz (bad) incl mov pop sbb sbb or fwait xchg mov (bad) decl sub fs xchg cmc xchg outsb jmp ds in xor cmp js,pt inc std outsl add xor imul fstp sbb mov jge rcl cwtl flds pop bound lcall fcompl (bad) jmp and (bad) movsl les add lods sub mov je les sti adc aam mov aad sub inc adc mov decl std lret sahf mov pop popf adc fsts jg (bad) cmp adc test out (bad) adc pop pop sbb or fiadd inc mov mov xchg (bad) stos jno mov lcall (bad) (bad) fmull rcll dec stc pop hlt and xchg (bad) and inc movb pushl ljmp xor jp iret or mov out pushf mov movsl pop ret out (bad) (bad) (bad) lcall loop add lret and icebp cmp sub popf add and push sub leave (bad) ljmp in movsl mov sub insb arpl (bad) test push xchg xor push (bad) ljmp jo int3 xchg out das insb stc das jmp cmp in movlps mov outsl (bad) jmp popf rclb mov mov lock or (bad) out mov outsl dec cmp mov roll mov sti (bad) mov movsl in dec jns,pn mov mov inc xchg icebp hlt (bad) (bad) lcall mov and gs lea (bad) or pop cmp push mov (bad) mov or test sub (bad) (bad) (bad) cmp jne jmp cld jae xchg out and aas in outsb aam xor mov call push es mov inc mov pop lcall hlt mov (bad) jmp and add es sbb push js daa dec xchg sbb adc dec sbb ss pop lock call (bad) xchg les sbb das cmc mov fs addr16 movsb int3 pushw (bad) (bad) (bad) decl push jecxz scas ftst adc inc jge repnz jle fucom mov mov (bad) (bad) ljmp cli xchg push push (bad) lahf and punpckldq in push dec push repz dec xchg (bad) cmp rcrb xchg (bad) js rcrb mov fisubl (bad) mov cmp xchg insl in pop mov out lcall and lods mov xlat int3 (bad) (bad) cmp in bound outsb mov fwait inc inc dec pop adc cmp xor lcall and (bad) es xchg jb dec mov adc decb arpl nop sbb bound push fcompl pop xor (bad) (bad) inc mov sti dec mov xor adc xchg mov mov imul test jbe push dec sub fsubs inc dec dec push mov pop insb sbb call xchg fwait imul mov sbb outsl sbb sbb cmp pop (bad) push cmp (bad) (bad) decl int3 fsubrs jle jle push sbb dec or idivb (bad) (bad) jmp stc inc push pop test imul roll mov (bad) (bad) (bad) lcall fucom pop cld leave cmpsl cmpsb mov loope xor popf aad stc or pop ret adc (bad) jmp fstl or les (bad) (bad) (bad) fisttp adc add pop jecxz ljmp jmp or jge mov (bad) (bad) inc insb pop push lahf push js in push or mov add ds push ret xor addr16 addr16 ret jmp loop outsl sbb (bad) (bad) (bad) decl add bound xor inc add dec mov (bad) fiaddl (bad) fnstenv sub int3 subl cs (bad) adc lods mov ljmp aaa (bad) sbb mov jg (bad) mov inc mov xor pusha mov pushf loop adc (bad) (bad) (bad) cld ret adc cmpsb in rcrl (bad) or ret mov mov (bad) pushl fnstcw mov dec sahf addr16 repnz lods pop test fisub stos (bad) cs addr16 je enter adc pop in movsl add cmc decl fnstsw clc adc pop (bad) mov stc inc rcl fisttpl pop push mov pop and lea adc daa lcall push cmp or pop int3 iret bnd (bad) (bad) inc sub sbb lret pushf and mov add inc add mov inc pop (bad) (bad) (bad) (bad) cli fwait jb ljmp sbb sbb fdivl out add int pop iret lods (bad) (bad) (bad) ljmp aas (bad) sbbb enter (bad) xchg xchg mov mov (bad) (bad) (bad) incl xlat add sub lret xor inc sti fld1 mov popl lret and inc xchg lret cltd (bad) (bad) (bad) pushl jg pop js enter mov gs int3 xchg out outsl inc jecxz sbb or sub ljmp push pop xor cmpsb xchg js into scas shll dec sub sbb aad (bad) (bad) call add out and sub lods or lds cltd nop add lret dec add push xchg inc push jb fildll adc (bad) mov adc mov test mov aas push xchg (bad) (bad) jg fisubr and loop and in (bad) arpl fcmovu push js out stos add decl push fcmovne mov sbbl stc inc inc movsl xchg fidivrl int3 pop scas jecxz xor jb (bad) jnp mov cs sub mov mov out sbb push pop adc xor inc sti into sub jp loop jb push and inc pop aaa pop inc (bad) (bad) in fbld dec (bad) shll mov jg call or pop fistp rcll popa das mov sub mov popa aas jmp rcrb push add xor clc xor cli (bad) lcall or je jmp aas xchg xchg jecxz (bad) (bad) (bad) (bad) cmp pop in shrl decl imul stos push dec push pop adc and ds decl arpl dec or mov adc pushf xchg les pop arpl jg call cld mov push push repnz adc jmp mov repz in mov call lds and bound xchg and xor stos sub push testl bound push pusha add add xchg mov fmuls (bad) (bad) call cwtl sub cmp fist jbe movsb leave mov stos push mov add pushf mov inc inc data16 mov mov jnp test mov sbb (bad) (bad) (bad) incl mov outsb sub sti jg pop lock shl add loopne push cmp repz imul loopne (bad) and clc mov outsb (bad) icebp arpl in cmp sbb jmp lcall fldt jbe cmp pushf or lock mov lods gs xor (bad) lcall out push das and (bad) incl out ljmp xchg mov or add and (bad) (bad) jg ds and mov lea iret scas mov (bad) (bad) call aad mov shl xor mov pop pop cmp out jb ret (bad) mov or mov and sarl (bad) mov (bad) inc in (bad) mov (bad) in lret cmp divl rol xchg shrl mov adc mov push sbb rorb aam lds xchg xchg (bad) (bad) pushl jmp jl xlat dec mov inc push aad sbb sbb aam (bad) (bad) mov sub mov xchg imul insl cmp xchg outsb dec jl (bad) decl cmpsl inc xchg mov call mov test loopne jmp mov (bad) (bad) (bad) flds inc jns mov and mov hlt xchg iret add je xchg pop jmp les (bad) (bad) mov bnd test cmp jae xor pop imul stos (bad) (bad) mov inc adc pop sub mov dec cwtl mov pop cld in mov mov fmull out push mov jae rcr sub (bad) call jmp std insl xchg icebp shr pop sbb movsl adc inc push lret pop in pop pop (bad) (bad) jg jnp sahf cli test orl cmc push sbb mov cmpsb icebp popf push std jg loop pop xchg adc inc lods int stos push fsubrl push push (bad) (bad) (bad) jg scas sbb loope test adc adc test movsb and out mov pop (bad) lcall cs in cmp push dec cmp jne sbb fiadd test jno daa sbb (bad) (bad) fsubs pop movsb sub cs mov loopne add sbb aaa push loopne sub pop sarl movsl jno lods lea xor adc scas (bad) (bad) out adc xor xor jno imul (bad) (bad) jg mov push popa addr16 xchg lret cld jle inc cmp (bad) (bad) (bad) call push or and xchg xchg fistl pop dec repnz adc push mov (bad) (bad) inc mov out cld mov or outsb push loop imul sub sahf xor addr16 (bad) (bad) ljmp imul mov ret push cltd mov push es push add mov cmc or (bad) cmp or push mov cwtl jmp xor sbb sub pop pop push push pop dec inc pop dec and adc push inc movsl addr16 outsl es mov repz fistpll (bad) (bad) mov adc or fistpl xor adc ret mov loope xchg dec push xchg jecxz and jae std call cwtl aam dec mov cmc (bad) psrld hlt decl push pop jg fucomp jge imul bound jecxz (bad) call xchg push cmc sbb rcl jns xlat cltd loop addr16 jmp jg sub lret iret adc dec pop sahf (bad) (bad) (bad) push pop fsts ret sub push or bound ljmp sbb int mov ljmp incl xor out imul stc lret mov scas push ja cmpsb xchg jb movsl mov jecxz sub add add dec mov add js ja popl cmp lret scas or stos bound ret (bad) ja sar (bad) lcall js test dec lock push pop pusha mov inc test sub sub xchg xchg pushl in cli (bad) shlb in xor jg sub adcl dec mov cli (bad) jmp stos mov lock cwtl popa lods add mov incl or jmp push xor movsl cmp dec ja lods f2xm1 (bad) mov sbb fndisi(8087 jnp mov inc mov xchg mov (bad) decl and jmp fcomps pop sub lahf xor add mov add adc (bad) (bad) incl or jnp lret jp jmp mov jl mov in xor (bad) (bad) mov adc adc insb gs add push inc mov pop lock jle vunpckhpd aaa js fldenv faddl xlat enter lcall pushl aad fadds sbb add dec or xor rcl or (bad) jmp jns (bad) mov (bad) push outsl push mov xchg scas out (bad) mov xchg mov jle rclb sqrtps fs and ret ds pop xchg push adc lcall incl popa (bad) in dec leave xchg sti repz int3 lds jo enter jmp mov inc push or cmp ja aam push pop dec scas incb sar and pop add stos (bad) rcr stos cli xchg into fsubrl rcrl or inc arpl (bad) mov mov jmp push push sbb les std incl cld test ret movsl in sbb daa ds cmp pop push (bad) (bad) (bad) (bad) jle into cmpsl mov or shrb bound pop sbb popf push add sarb pop std call mov mov ret xchg mov shr add sub (bad) (bad) (bad) cmp cld test pop in push jbe or int3 mov (bad) mov cmp out inc or ljmp mov mov (bad) call call pop xchg testb or push test sub lret cmp les push (bad) (bad) (bad) decl hlt jb lods xchg mov push sbb and (bad) mov xchg outsb add adc (bad) jns nop xor stos lock adc mov cld push es adcl fcomip fldl dec mov mov dec dec fisttpll ljmp pushl mov push cmpsb pushf lret cmp add (bad) (bad) lcall xor (bad) add xchg sahf lods mov jle cmp inc push hlt jae mov mov xor add test push cmp (bad) (bad) (bad) (bad) out inc fs sahf cmpsb xor cmpsb (bad) inc (bad) dec pop insb fisttp or imul adc pop cmp sahf pusha cltd sbb fwait divb mov lods hlt out sbb jmp (bad) int3 sub cmp (bad) (bad) (bad) call lret mov das add jmp loope mov jmp mov sbb push aaa add (bad) (bad) call imull fimul add leave fdivr mulb insb stos push (bad) push fsubl (bad) (bad) (bad) jmp inc inc out call cmp inc rcll (bad) (bad) or dec dec (bad) iret lods mov pusha out cmc (bad) (bad) decl mov sbb cwtl add das inc dec push inc (bad) mov mov (bad) fistp int3 inc pushf lea jecxz push test or sti (bad) (bad) mov jmp mov daa add pop aas les mov jmp adcl pop (bad) jecxz lods bound fstpl jg decl cwtl mov mov lret movsl test add lods ljmp mov lds loope sahf mov fwait clc out test dec push test notl (bad) ljmp or ja add cmc add cmp xor (bad) mov push test sub test in push mov cli call cmp mov pop inc js push scas stc sub or jae (bad) (bad) (bad) (bad) cmp add mov inc rclb or xchg fucomip rcrl scas cli jg mov (bad) repnz cltd mov adc or sub pop pop cmp fcmovnbe (bad) (bad) call xchg lret stc sahf mov sbb push xlat out pusha (bad) out clc (bad) clc xlat jae in das adc int fisttpl inc fsubr adc or adc pop jno hlt push pop (bad) xchg pop call das test push fbld loop jmp sbb inc sub decb cld mov (bad) fmull in testb in in fildl sarb (bad) mov jmp (bad) decl int insl pop pop inc call imull (bad) (bad) call jge in inc mov or xor push mov mov pop nop inc dec xchg xchg sar (bad) (bad) cli jnp push js xchg push fdivs stos cmc sbb sarb rolb (bad) (bad) (bad) jg mov popa cltd sbb fcmovb add repnz sbb dec adc in mov or hlt idiv and and lret cs mov pop dec arpl stos sar (bad) lcall ljmp leave movsl pop je xor js (bad) addr16 lcall xlat std (bad) (bad) jmp sbb leave add arpl pop add jg (bad) int sub (bad) (bad) call pusha daa out inc mov faddl scas dec adc pop and lock (bad) (bad) ds pop ror loope mov dec adc cmpl cltd adc (bad) jg jmp mov test mov inc cmp fisubrl pop or adc push (bad) cwtl (bad) (bad) incl sbb ds push test sbb (bad) push or or in fwait jle and lds cmp ret loope pop das outsl loop or fdivl shl ret inc sub aas dec (bad) decl push jle nop outsb jne add in sub pop arpl mov adc int3 fs (bad) pushl mov mov mov test testb push sbb inc popa push sub fiadd (bad) (bad) (bad) jmp inc (bad) cltd jns mov js aad cmp inc mov mov imul cmpsl add ljmp repnz jnp loope sub and pop add clc (bad) jmp inc dec sub lock cmp and (bad) call lret test leave xchg data16 imul movsb xchg mov cmp fcmovnb mov cmc cmc xorl or jno aad ss (bad) mov mov daa sbb leave loop pusha ss pop (bad) or incl test push add sbb mov dec inc jle clc mov rorb mov sbb clc jg incb rorl sub (bad) mov cmp push aaa pop (bad) call pop mov nop sbb ja (bad) lock aad xchg gs lret jle (bad) (bad) (bad) mov addl xor aaa push stc pminub sub xchg in (bad) (bad) (bad) pushl mov dec sbb into insl or outsl sbb jle sbb lret and or (bad) lcall inc cmc std jp xchg mov call (bad) fistpll jns adc pop mov add mov jnp or mov loopne dec in adc ds popa loop mov inc jmp dec mov in imul and sub pushf pop lahf ss push sbb sub std sub cmp bound lcall repz jle repnz (bad) mov push cmp push loopne mov push mov mov and mov xor incl add mov cmpsb loop mov arpl (bad) call cltd int rcrl cltd cld loopne xchg jmp xor test and pop cwtl loopne xchg pop jo sar xchg in sub hlt inc pop je pop jle aam lret loopne decl mov adc stos pushf or jle jecxz decl fcomp inc sub std jb fadds in popa js add (bad) (bad) ljmp dec jmp xchg jge xor insb loop jbe (bad) push enter pop cmpsl xchg inc add mov pop enter pop add cmp mov scas je,pt cld (bad) decl sub mov mov mov bound (bad) incl cmpsl xor ljmp (bad) mov (bad) (bad) (bad) jmp sbb push xor jg cmp adc fimul sub (bad) insl ret cs jbe cmp es adc sbb rcl adc sbb arpl xchg adc jmp mov test xor and jmp repz mov imul lds bnd (bad) call cmp add add fiaddl data16 mov insb jne ljmp sti out popa mov mov dec jg push mov call jns call mov pop inc cwtl and push std cltd into inc pmovmskb jno cmp and (bad) out xchg or stos dec ds lret (bad) (bad) (bad) call pop xchg inc fs cmp cltd or jns dec orb dec inc repz (bad) (bad) (bad) push pop insl push pop jl dec xor xor push mov lret and xor add call cmpsl fldcw repnz dec popf or (bad) (bad) lcall lcall pop sbb sbb (bad) cmp jbe or call fild or or pop in lcall call adc cmc cs xchg adc arpl inc out gs incl (bad) out add add (bad) (bad) (bad) call lahf xchg cwtl xchg outsb pushf popa aam dec jecxz addr16 and jmp clc xor xlat ds (bad) (bad) ljmp insb cmp dec push insb bound xor xchg leave and pop pushf sahf mov jl movsl inc bound clc (bad) call inc or mov mov mov and pop xorl mov dec rcr insb (bad) (bad) (bad) jmp inc xor jo cmpl cmp pop pusha (bad) mov (bad) (bad) (bad) push jae inc jnp (bad) xor js out cmp cmp popa (bad) ja enter xlat adc xor fistpl fcmovne pop (bad) mov adc ds mov movsb cmp (bad) (bad) jg sbb test pop fisub xor ss mov out sarl cmpsl sahf das xor and dec inc jb aad push xor mov cmp dec pop mov (bad) decl insl xlat sbb mov repz inc push mov sub aam loope scas jmp into jmp les sar shl fwait xchg ret and xor ror push js sub pop adc mov imul (bad) (bad) (bad) (bad) incl ljmp rorl pop pop mov adc xor ret inc add aas sbb in (bad) cmp xchg fdivrs sbb inc and (bad) pushl nop out popa xchg movb xlat cmp cmp loope notb das mov testb add xchg arpl sub inc inc test add insl loop pop insl lods dec cmp fstpt inc lods pop adc mov pushl (bad) and (bad) ror cmp call sbb sbb jbe mov sub in ss arpl test aad (bad) (bad) (bad) call or insl add mov inc imul roll xlat daa dec rcrl add (bad) repnz lea into aaa push in (bad) add or arpl (bad) decl rcrb out mov pop imul or push xchg test cld jo mov push inc mov sub jl add out adc (bad) (bad) (bad) (bad) fldl add cs and jbe push cli stc mov stc sub (bad) ljmp fbld rolb mov or aas (bad) push adc in (bad) (bad) (bad) ljmp movsl mov inc inc cld cmp clc mov fnsave popa mov dec mov (bad) (bad) incl cmpsl fisttpll es popf std mov popf xchg inc jecxz mov jbe (bad) (bad) lcall jno jb and in mov mov mov push insl (bad) cwtl pop xchg cwtl xor test stos ljmp fbstp bound pop jae les les pop push addr16 scas (bad) dec ss incl jnp and xor bound jmp and jae jne nop adc fisub (bad) (bad) (bad) call movsb (bad) lcall mov push es xor jp jge and scas (bad) (bad) (bad) incl lret mov jne mov sbb std fcmovu add and push fisubrl push mov stos jg (bad) std pushf fmuls out dec fmul scas mov push (bad) (bad) (bad) jmp mov adcb xor jno loope jno ret mov add sub (bad) jmp lods inc pop inc fidivr sbb sbb out dec roll dec fs sub lcall dec xchg aas xor lahf pop jne dec cmp lret and es push xchg les mov mov je xor (bad) jmp arpl and push negl cmp insb sbb cmpsb sbb mov ret (bad) aam dec adc ret xchg in cmp pop je pop mov lock (bad) (bad) jmp test cmp jl sub dec addl sbb insl es fcomip pop jo pushf scas call mov cmp inc jbe dec and adc hlt jmp dec shll xchg lock pop inc and jg and (bad) pushl mov in ja pop add ss mov push loop incl ds aam aam jl enter cmp fisttp push push xchg ljmp ss dec push fwait icebp sarl fldpi mov scas inc dec rol mov sub outsl sbb push pusha pop ds lcall cld jmp mov addb (bad) (bad) decl xor cmpsb je jle stos data16 sbb rolb sahf jge adc outsl cli es lret xor das jp pop cltd fldenv stos into fwait xor jle mov jl sbb (bad) (bad) (bad) pushl dec fadds in (bad) xor push sbb movsb imul (bad) (bad) (bad) incl dec fbstp xchg imul push jns outsb pop loop dec (bad) sbb inc cwtl scas int int (bad) fwait aas fild xor (bad) (bad) aad xchg sarb (bad) (bad) pushl js in pop iret pusha (bad) out jle pop and adc add stc and addr16 daa nop clc dec pop push mov mov (bad) call fistl sub sahf (bad) ljmp jp adc hlt insl push mulb push mov xor test movsb (bad) pushl mov mov pop (bad) lcall scas push daa xchg sbb repnz xor rcrl mov ljmp inc jno xadd dec push add add push xor push lahf stos inc and out jl mov inc mov xor in iret lret push cmp in jle movsb mov and (bad) (bad) jns and popa mov outsb loop mov adc test mov add lea (bad) (bad) (bad) push enter adc push int3 mov xor call loop add (bad) decl push pop loop jns inc out mov push mov (bad) (bad) ljmp std mov lods or insl sbb (bad) pop jecxz xor add mov push add leave jbe aam scas jl loop jno (bad) (bad) call add xchg or lock shrl movsb or lret mov (bad) (bad) mov and xchg pop inc mov icebp icebp pop das insb movb lods mov (bad) (bad) incl mov in je shl cmp fst into jl push xchg cwtl movsl mov push and ljmp adc gs xchg or incl lret jmp ss push jle int3 pop cmp fadd adc sub jmp js cld jg les call ret xor inc lcall ds test (bad) mov sbb fnstcw pop sbb pop inc jo ret (bad) call and cmp gs and pusha insl lods (bad) lock jmp cltd test xchg in fs cld mov out cli fstl in dec xor stos sub (bad) (bad) push push pop dec mov rep lahf xchg (bad) out loop in outsl (bad) int xor cmc arpl add (bad) (bad) (bad) call mov mov lahf popa or xchg push aas rcr call cli pop jnp lret adc rcll inc (bad) bound arpl mov xchg mov repz and (bad) decl fildl sub insl push shrb aas dec sbb fwait or fsubr addr16 add fadd mov stos mov nop cmp push adc xchg mov lahf rcl (bad) (bad) (bad) ljmp adc jne insl pushf lret (bad) movsb fidiv call sbb mov mov cld (bad) fisttpl fdivrl jb,pt jo jmp jg (bad) icebp int scas mov divb (bad) cltd das add mov inc out pusha jg aaa ret and test in popf dec (bad) test (bad) mov aam cli add mov fs add dec test cmp mov not or imul xchg push imul pop insb ret test cwtl sbb lock sahf sub add pop loope dec bnd xchg lods xchg adc (bad) (bad) (bad) out imul and dec roll cmp jo ret cmc sbbl (bad) bound (bad) pushl (bad) fsubrl jp jecxz xchg jae dec pop (bad) fsubl out sub pop in pushf hlt data16 (bad) (bad) decl test jo mov testl es add (bad) (bad) (bad) (bad) (bad) mov mov arpl mov nop test jns imul out push inc sub (bad) (bad) decl or pop insl add test or mov loopne int int and clc (bad) (bad) inc js add cli lods fdivrs ds mov pop sbb xor and push call in and (bad) clc dec (bad) xor stc faddl fldcw imul lcall and popa (bad) dec xchg pop mov jge mov outsb pop sahf fdivrp (bad) (bad) call sub push or xchg pop mov mov aas aas mov (bad) (bad) (bad) jmp and leave mov jle mov xor popf and mov js ficomp pushl faddl or sbb cmpsb and mov mov mov (bad) decl cwtl popa dec insb pop mov sbb rorb push mov or (bad) (bad) jg ds push lret jb inc cmp in xchg mov push or (bad) decl or aaa dec or pop mov xchg and pop jmp sbb fcomip stos cwtl bound je and ss (bad) (bad) (bad) decl int pop adc cmpsl lret lcall xor outsb aad aam sbb (bad) fbld dec mov out sub (bad) sarl (bad) cmp movsl fwait xchg jns push sbb mov les in sbb sarl div insb cs push inc ljmp push je into jmp es icebp sub aaa std (bad) (bad) cmp sub out rclb testl stc dec adc (bad) (bad) (bad) (bad) (bad) xchg sbb jne,pt imul leave jbe jne rcll dec stc mov fs incl dec mov adc mov adc js jg add or inc jp rorl push or (bad) jmp sbb sbb and je dec or dec in jmp push test (bad) (bad) incl sub cmp test sub inc mov pop dec mov jno mov inc pop insl dec shlb dec (bad) (bad) (bad) dec inc adc jmp jb sarl stos sahf leave movsb lods mov pop or shrb testb add sub shl mov fsubl or pop gs je add in xchg cmpsl addr16 cwtl push xchg (bad) sbb xlat (bad) (bad) (bad) decl dec int3 pusha mov ja cmpsb (bad) insb sti or mov adc cmp cmp jb dec mov (bad) adc pop mov cmp pushl sbb mov inc std arpl paddw roll sub sarl bound inc adc and mov sbb ss imul pusha jno,pt sbb bound mov (bad) incl xor jecxz (bad) jno les daa push data16 (bad) jmp mov out mov dec int jg call xchg xchg bound lret inc hlt lcall push movsb sbb leave hlt (bad) (bad) lcall add in ss sbb xor cmp popf popf es shr ret scas clc lcall scas push iret repnz mov jbe sub rolb sbb (bad) pushl and xchg gs adc xor cmp lea (bad) (bad) (bad) decl jo (bad) pop inc aad lret idivb xchg lcall adc inc jnp rorl nop iret insl jne dec mov mov (bad) lcall jle inc sbb sbb mov sbb mov jo (bad) jg mov sub std push xlat push movl jle out (bad) (bad) (bad) call cmp cmpsl test xor jno inc xor add or test call and and repnz (bad) (bad) (bad) (bad) out dec pop pop sbb sysexit (bad) xor mov data16 les dec dec call leave (bad) cmp xchg test mov rep jmp orl (bad) (bad) (bad) jmp push insl jo test jne push cli insl xor test sub cmc add dec (bad) (bad) (bad) decl fxtract or xor adc cmp int jnp inc ja insl dec jns add mov sbb (bad) (bad) (bad) cmp cmpsl dec sbb push setbe mov and call (bad) (bad) (bad) clc (bad) mov in stos cs daa sti xor inc rolb clc mov in ffree and mov iret nop sub push xchg hlt ja and std aam lods xor pop xchg fiadd hlt push fdivrl and adc clc mov outsb jne sub ret movsl popf movl inc ds imul (bad) nop sahf add dec stos lea cmc fcomip (bad) pushl roll out and in aas mov and lods jae (bad) (bad) (bad) call in movsl hlt out mov sarl loop popa cmp scas rsqrtps idiv aam orl ds jns mov inc xor (bad) ljmp xchg aad pop sahf pop mov mov push mov (bad) jmp shlb ds test mov inc popa gs rolb outsb ds lret cmp push mov cmp jg (bad) fstl gs ret lret jge mov ret jecxz push sbb mov sbb mov jg jmp sub vaddps addr16 mov lret mov mov inc shll (bad) (bad) pushl mov call inc dec pop nop dec and add lods enter adc inc incl add mov mov cmpsb test mov jb stos arpl mov (bad) push jno out adc fwait jno sbb repnz push adc lahf pop adc xchg dec (bad) cwtl xor cmp ss xor dec mov int3 rolb xchg jbe mov loop sbb (bad) in mov pushf sbb imul rcrb mov cmp adc jne stos and loope (bad) (bad) fcomip dec mov imul sub inc fs imul mov xchg push decl (bad) (bad) fcoml out jp lock and out (bad) push mov in mov arpl cmp xchg mov or cmp (bad) push and mov push (bad) fidivrl mov dec xor (bad) mov adc cwtl or fiadd push outsl call cld fnstsw rcrb lds pop or jb (bad) (bad) decl cmpl xchg (bad) shlb int3 xor test dec test in cmpsl stos sub mov stos push cli mov (bad) (bad) decl std (bad) (bad) mov fistpll das in sbb pavgb cmpsl xor adc aam sahf stos sti jg cmc out mov mov xchg inc add (bad) lret or and pusha sbb test (bad) (bad) (bad) (bad) (bad) stc jnp inc cmpsl cmp rol loope jnp lret stos mov stos (bad) cld je push jmp push add pop dec mov mov daa dec dec xor test pop dec xchg test cmp push jp xorl jl sub xor outsb lods sub lods jecxz mov sub or loop inc sbb (bad) (bad) (bad) mov mov icebp ja mov insl inc push out insb loope jns popf je (bad) (bad) lcall andb cmpsb (bad) pop mov movsb push xor xchg ja ja test (bad) adc (bad) xor repnz je in sbb mov inc jge cmpb cli inc lret sbb cmp xchg lret dec enter jl mov mov sbb mov negb sbb or fdivrs call (bad) fbld js pop je,pt xcrypt-cfb cmpsl out and adc and add lcall mov insl imull lcall mov sub call cld pop cmp pop movsb mov pusha xchg sub (bad) decl jge dec fs mov test movsb add mov push cltd pop or decb jg nop repz jo lret mov fwait (bad) test fwait rcl repz icebp pop mov mov push (bad) roll das push sub incl incb sbb mov sti mov add or mov cmp mov (bad) test push iret test jl (bad) (bad) decl cld inc dec (bad) pop and daa push and xchg sbb cmp (bad) sbb mov adc popf jns pusha sub pop jmp pop leave dec in rorl sub or out push pop mov popf movsl loopne (bad) lcall sbb cmp pushf movsb and repz xor lcall jg nop sbbl xor pop insl jle (bad) pusha insl cltd dec add jmp leave aam lcall (bad) mov andl out mov jns inc (bad) ret std (bad) (bad) (bad) jmp inc nop dec cmp je push jle jne mov movsb aam jbe push in add jbe mov cld (bad) incl popa loop iret repz push out mov jmp addl jg ds sub ret divl mov lret cs cmp xor inc adcb sub pop repz inc adc outsl push adcl push (bad) or and add cmpsl test sbbl lea mov or and jecxz mov add xchg movsl pop in push xor data16 jmp mov adc es scas fmuls ss xor (bad) (bad) call mulb jl,pn leave push sbb fscale sub fdivl bound cld pop push sbb sbb iret scas decl cmp out cmp push mov xchg pminsw (bad) (bad) (bad) lcall inc mov cs scas out mov push sbb scas (bad) xchg (bad) or (bad) call lret ja xchg inc sub sbb pop cmp xchg pop lahf add mov jg fwait xchg sub sti mov dec dec imul int3 mov pusha xor jns sbb incl decl pop nop add adc lods adc inc js mov mov add and push daa in cmc sub popa mov nop xor fwait out bound jecxz add cmp fcom aad (bad) (bad) (bad) jmp int scas pop jno cmp mov fldcw cmc cwtl ss inc fwait push sub pushl cmpsl outsl in movsb fistpll (bad) cmp and sarb jbe and out cmpsl jns xchg jmp add insl sbb (bad) ljmp sub mov xor xchg lock lods ret jns stc rcll (bad) mov inc and insb (bad) (bad) (bad) decl in jo rorl cli loope (bad) out sar popf or jle mov add push loop and (bad) lcall loopne fs sarb pop inc jp gs sbb ljmp pop enter (bad) icebp (bad) (bad) (bad) decl in jne cmpsl mov das stc aam lds inc cmpsl cli and xchg and sbb (bad) lock (bad) (bad) incl sub pop roll mov jecxz (bad) (bad) aas add cmp mov out addr16 fs sbb (bad) (bad) decl rcrl ljmp jmp inc adc jmp dec xchg adc adc push cwtl cmpsb (bad) (bad) (bad) (bad) cmp data16 xor pushf pop dec push imul lret xlat push pop bound call test sar (bad) incl adc mov add addl dec adc ljmp decl jo xlat lock in loop jle mov add in ficompl jae (bad) ljmp jl push or ja adc imul adc pusha pusha mov gs sbb jnp test inc pusha dec nop xlat dec mov pop mov push inc and imul in or add (bad) (bad) (bad) (bad) mov sbb nop aam mov push (bad) adc push mov enter dec inc loop lods or adc mov mov jae lret mov (bad) int3 lock lcall or lods faddp fdivrs aas sub es xor idiv out xor add mov sub dec mov sub mov mov pop push (bad) (bad) (bad) call in in ss xchg movsb and dec mov xchg and mov ljmp mov cmp cwtl jae cltd push arpl xchg bound clc fsub shll icebp (bad) out clc jmp adc lret test or pop std sbb (bad) (bad) mov ror cmp xor (bad) aaa or mov pop icebp das je mov xchg imul (bad) inc sbbl xor (bad) cmp arpl xor inc mov jg pop xchg and mov push inc jb dec cmc fbstp outsl hlt in mov ficom fistpl test (bad) (bad) call mov or mov fsts mov xchg jg inc jbe cmp (bad) (bad) jg clc clc pop lods aaa fsubl daa mov scas faddl scas mov insb adc pop (bad) (bad) (bad) (bad) mov popf scas and sahf and and (bad) out sub jne aam pop mov (bad) (bad) (bad) lcall push push xor cmp (bad) sar xor daa mov cwtl mov clc (bad) (bad) push stos sub outsl roll das mov jmp shrb cltd imul lock add mov mov ficom (bad) (bad) (bad) call enter insl in mov daa repnz pop imul add movsb pushl xchg rcrb mov adc (bad) (bad) jmp addr16 in jae fisubr sbb data16 sub outsl xchg nop mov decl inc pop sbb jmp or paddq mov (bad) (bad) (bad) pushl ljmp das gs fdivr pop mov out push repz inc (bad) loop vaddsubps (bad) incl adc int in js fisttpl mov add (bad) xchg cmp inc xor pop test fistpll (bad) mov rol (bad) mov dec mov sbb std adc (bad) in (bad) (bad) (bad) jmp xchg xor cmp jns repnz lods pop (bad) popa sbb mov fdivr (bad) (bad) (bad) fsubr bound dec js cwtl mov jl repnz fidivr mov cwtl xchg (bad) (bad) mov sbb sar pop hlt mov dec xor (bad) lcall jmp inc mov dec add push push mov jae movsb jmp xlat cwtl lods push add jno push inc aas lods jne (bad) fnstenv pop insb mov lds mov lea sub loop dec out xor (bad) (bad) pushl sub ljmp mov push pop push xor mov mov in mov popf lahf sub jne jecxz pop sub jb mov ret or mov cmc (bad) into jle mov mov scas movsl mov adc and (bad) (bad) (bad) call xchg inc mov or addr16 enter mov test (bad) (bad) inc insb mov fcom adc mov inc xchg jp les jmp fs aas lcall cmp push test test mov dec inc mov test (bad) (bad) call push cmp push inc test mov mov stos (bad) (bad) jg cld add adcl push mov add dec or (bad) jne (bad) mov sub repnz mov std cmp test fstl xchg (bad) (bad) (bad) call cmp sub inc es dec mov inc data16 into aam (bad) (bad) (bad) inc into dec push (bad) in fsubl notl mov sbb into pop xor (bad) (bad) (bad) ljmp or mov mov das inc cmp fxch or jp xlat (bad) lcall jo jp nop mov sbb pop andl ret js jb lahf ds (bad) mov (bad) incl (bad) mov jbe (bad) shll sbb jno jmp loope push jecxz inc (bad) (bad) (bad) call fsubrl push cmc dec push jns fistl stc sbb shlb or pop sahf mov and mov (bad) incl mov mov scas mov cmp mov lcall int3 xchg push sbb mov repz jg lcall (bad) outsl xchg jno test jg cmpsl xchg out fs jl out sub push jg (bad) ljmp or xchg sub insl loopne jle hlt and xchg add and aad (bad) (bad) (bad) stc xor sahf fsubrs sti cli pushf or adc cmp add sub repz imulb loopne (bad) lcall mov arpl sbb sti pop sti dec jb xchg (bad) (bad) (bad) (bad) jmp jle xor mov test insb rcll push loopne lods push mov (bad) and incl mov dec in outsl iret addr16 cmp das dec mov jo xlat int incl mov pop (bad) movsl cmp stc adc jb jnp push push inc data16 (bad) (bad) pushl mov dec mov loop sub jbe cld mov das pop or call lcall stos jns cwtl out pushf mov jp mov pop loop and (bad) (bad) (bad) pushl insl imulb into jl inc adc mov in mov cmp imul mov (bad) call icebp cld jnp arpl xlat add pop mov jns mov call mov mov dec ljmp nop ss das and adc mov pop mov mov (bad) (bad) call in adc insb mov and jp mov or ds jmp mov add (bad) (bad) (bad) incl fcomip push push push push pop fistpll inc fwait out sub mov xchg fisttp pop or decl pushl js mov jnp and int3 repnz sbb daa pop and clc mov push sarb jge (bad) (bad) pushl repnz push add sub add test faddl (bad) (bad) (bad) jl dec xor std sbb xchg inc stc shrl out xchg fsubrs mov pushl push mov mov gs mov (bad) jmp xchg or push xchg cmp xor mov scas dec lcall (bad) out ds cmpsb and (bad) lahf mov (bad) mov or test pusha jnp ljmp ljmp icebp (bad) icebp pusha jle jecxz (bad) (bad) call ds cwtl (bad) jge dec inc (bad) jmp pop mov cs loope add cmp (bad) ljmp push mov add cwtl addr16 adc sub sti call ret (bad) (bad) call ret lcall dec lea mov mov mulb sub lock outsb pushw decl incb nop bound mov enter movsb pop dec lods mov aad jne scas sub loopne lret in inc arpl xor imul std dec jg mov cld (bad) decl fdivrs addl mov cwtl (bad) jb cmpsl (bad) jg imul movsl adc and or aam (bad) (bad) (bad) (bad) cmp mov pop pop ret mov js sub outsb xchg dec (bad) mov (bad) (bad) call pop test aam or cmp out in lock cmp pop daa xchg pop jae adc (bad) (bad) push insl inc (bad) mov scas add add inc cs std mov lea push repz cmp mov add (bad) mov insl sub lahf push xor imul repz jno xchg push or sbb clc sbb add (bad) (bad) fcomip das imul lock les es (bad) insb or repnz mov call aam cmpsb pop mov rcrb or mov xchg sarb jle mov call xlat (bad) mov ret dec negb mov decl push pusha and les fsubrs inc call ljmp leave jb ds dec adc enter (bad) (bad) (bad) (bad) fistpll out push sub out xor cmpsb (bad) ret xor pop popf push sub (bad) decl xchg popa add jo clc repz push sub mov call stos adc (bad) jg rcrb pop (bad) mov loope aad fnstsw push fiadd (bad) (bad) (bad) jmp popf push push rclb xchg frstor sbb gs sub xchg lahf arpl (bad) inc in adc adc cmp int3 das inc mov pop adc dec out adc cmpsb jns arpl ljmp mov jle loopne or dec in popf sbb adc (bad) (bad) cmp ja xchg and sub pop js aaa jle ret lcall mov inc and mov pop xchg sub pop cmp lcall dec out add inc clc pop xor das (bad) pop addr16 (bad) (bad) incl push sub cld test std sub inc sti mov adc sub add (bad) (bad) out adc loopne mov xchg leave test out loope or (bad) fcomip adc add mov aad sahf jbe fistp lret ja cmpb (bad) (bad) (bad) incl das cld cmpsb call outsb adc sub xor fimull in push xchg add inc push xchg xchg push jmp div enter mov sub out rclb or xorb or or push sbb adc shlb loop lret xchg hlt aam clc (bad) (bad) dec xchg dec addr16 or jnp or jecxz test idiv lcall sub (bad) (bad) incl sub (bad) loopne mov repnz pop xchg xor add cmpl mov add push xor lea (bad) and lcall add and (bad) (bad) lcall adc and and jge push push adc xor (bad) jmp (bad) stos lods fwait movsb (bad) mov dec lret arpl and (bad) (bad) (bad) jmp xor adc inc clc add push or dec xor (bad) (bad) ljmp mov lret sub clc mov into lds push dec mov jbe aam dec mov lds sub jno (bad) jg pop fidiv out test and xchg pop mov (bad) inc (bad) (bad) (bad) fistl xchg std adc mov inc pop xlat sub jns mov (bad) mov lret mov jne mov repz dec mov stos mov add pop loopne nop frstor sub (bad) mov pop add arpl mov add add (bad) sbb pop mov and adc mov (bad) (bad) mov sub add dec xchg xchg in in or cmp push (bad) (bad) (bad) push daa push fdivs mov dec jg fs cmc and add cmp adc arpl aam push add icebp pop bound shr inc lock mov cltd js push lock (bad) (bad) (bad) call push (bad) imull or inc cmp add iret xchg dec sahf xlat insb sbb popa sbb push adc (bad) incl xor mov lahf push call jge,pt pop (bad) add or dec inc leave pop ror adc cmp sbb (bad) (bad) call and outsb hlt scas lret mov scas push push or mov fs loop add int sub fwait sti and (bad) (bad) (bad) mov xchg loop les xor popf jb mov inc stc fstl jno popa mov cld and lods (bad) ljmp shlb push icebp push iret sub mov xor xchg jge and pop loop jg (bad) incl push js mov pop mov mov gs adc js ret (bad) (bad) (bad) jmp push pop gs jns push xor sub xchg xchg sub mov clc mov (bad) (bad) ljmp mov mov fcomip in lret jnp bound dec (bad) lret out mov xchg data16 (bad) push dec orl lea stc jno inc mov stc or and mov (bad) (bad) (bad) sti popf lds xchg jmp std adc scas mov inc jb sbb xor sbb ljmp imul mov push cmpsl popf xchg xchg inc bound js dec fsubrl lcall jl xlat dec insb stc push jb outsl push jne sub lahf pop mov mov cmp icebp (bad) (bad) (bad) dec jnp outsl inc hlt addl inc (bad) (bad) lcall sti iret or sbb pop jno inc insb mov jbe ljmp jmp das jb push pop add fist je repnz pusha fstl mov (bad) cmp cmc xchg sti pop jge sbb xchg xor jae push pushf mov decl lock mov insb pop int3 jecxz rcl cmp lahf push shll or jbe add lret int3 cld adc dec jo pushf je sub push mov decl mov negb outsb call movsl (bad) jo rcl lds or sar mov mov test lret xchg sbb ret jge call sbb (bad) (bad) (bad) fnstsw (bad) les mov lods les sar mov or cli lods int dec xchg (bad) mov inc pushf adc loopne push popa xchg (bad) shr xor lcall mov bound dec mov ret xor int mov mov ficom cld (bad) (bad) jns push insb mov cmp js mull dec bound fcomip mov (bad) (bad) (bad) mov sarl add sbb clc and sub mov enter test add pushl mov push mov clc decl add std stc repz (bad) (bad) (bad) (bad) out sbb cmp leave dec jge (bad) pop popf dec nop mov jge mov dec lea (bad) (bad) cmp push adc jl (bad) dec (bad) pop adc test pop in jecxz lcall lcall icebp push movsb or mov test insb mov pop in xchg adc jnp ljmp mov std sub pop jl pop cmp xor sub ljmp arpl in leave adc jmp cmpsl xorl movsb mov fildl inc fcomip mov in jl into pop mov fisub popa mov mov or push ja (bad) fistpll (bad) (bad) (bad) push out jecxz not and mov std mul int idiv ja les lea orl jp in cmp jns out in pop (bad) aam dec xor or (bad) dec mov jmp out lcall pop inc out jl aas test jbe (bad) (bad) (bad) (bad) (bad) aas inc rorb mov sub outsl cmp cmp lcall sbb (bad) (bad) (bad) push cld orl and leave mov xchg aaa sub in sub push fcoml (bad) jp daa outsl mov es jl lret arpl or sub stc lock (bad) push xchg hlt pop add adc jo push mov addr16 inc cmc ja fstl pop or scas dec push jmp es add bound pushl aam clc push aas lock (bad) (bad) (bad) call (bad) mov jbe int3 lds pop xor xchg lret popf adc inc stos cmpsl jle and jle (bad) (bad) ljmp clc js cmc insb add add pop pop les add enter aam xor (bad) (bad) call mov and ljmp es jno loopne clc (bad) decl addr16 or les jb scas push add nop cmpsb mov fcmovbe sar (bad) (bad) call fadd push jo iret js xor arpl ljmp (bad) loopne mov int sahf sub or pushl shrl add out jns mov xchg lahf pop jecxz clc aad int3 adc (bad) lock aaa fisubrl add xor push inc (bad) (bad) (bad) ljmp (bad) dec shlb pop and cli xchg lea mov ds lea jge adc arpl fwait ljmp cli xlat dec mov xor mov daa pop outsl xchg mov inc mov sbb lcall insl adc lret mov cld (bad) (bad) push mov mov (bad) bound movsl inc test push push jno lcall mov (bad) (bad) lcall sub sbb add fidivrl cmc stos jbe mov js mov and (bad) (bad) inc subl test cmp das lcall mov push or stos add (bad) ficoml xor xchg mov (bad) (bad) jg jb add leave pop sub ds out push cmp jae xchg pop fisttpll hlt int push sbb pushl and push ds or and fcomip outsl les imul hlt pop aam ret push (bad) dec mov push test inc jmp (bad) fmull fsts aam sub dec aam ds or decl lods mov xor pop cli or xchg push push ret (bad) out mov int push repnz arpl js test adc mov call enter adc je jo pop jne mov mov std (bad) mov dec inc sub in mov (bad) dec dec push xchg inc in mov ljmp cld lret jge out sub add mov mov (bad) ljmp sbb leave loope inc aam lahf add (bad) (bad) scas outsb jecxz (bad) mov iret (bad) (bad) (bad) (bad) jp inc sub out clc dec sub (bad) out imul fsub or add (bad) jno (bad) mov or mov sub lock push adc sbb (bad) (bad) (bad) call das inc mov dec inc stc jnp les mov pop push das mov lret (bad) lcall loopne aaa fs in jne cmp int jno outsb xchg inc cmp ljmp decl xorb jb int xchg inc cmp ljmp in push pop shll push lods test xor loope pusha loopne xchg dec incl cwtl (bad) aaa aas adc sub inc pop ret push push sub dec mov aas pop std fdivr mov icebp jne inc cmpsb xchg (bad) icebp xchg into outsb je (bad) (bad) (bad) lcall and dec ja inc dec test inc shufps (bad) jmp and fwait dec mov adc pop mov rolb sub mov jne jmp push sub mov xchg sub sub lods cmpsl and cmp jnp jmp mov fwait xchg (bad) (bad) jg ds pop jge cmpsl mov (bad) lock insl mov cmp add enter push dec leave pusha stos int3 fimul cwtl popa cmpsb sub ret mov mov sbb stos fist pop gs jecxz (bad) incl pusha repz lds push sbb nop xchg cmpsb int (bad) sti lods sub (bad) mov dec mov inc cld mov inc pop sub xchg into cwtl not aam mov (bad) (bad) jl push pop icebp mov clc sbb dec or pop xor in lahf add cltd cmp aad lock mov cmp mov sbb aaa fwait (bad) xor out andb je or (bad) (bad) jg arpl lahf insl xchg lret call test or cmp dec imull (bad) (bad) (bad) incl (bad) dec pop mov pop movsl mov adc ret adc lahf adc mov jae (bad) mov lods jno rorl leave mov loop out cmp cmp xor jge mov dec mov inc lahf es mov push mov fistpll dec jmp movsl push dec lock dec push fwait jns roll mov ss inc push dec pop aaa std ljmp mov sahf pusha sbb call repnz incl rolb iret icebp jnp inc or stc out push xchg (bad) psubb pop popf es clc ljmp (bad) mov cmp xor (bad) jmp adc cltd jp xor adc int3 sbb imul cmp sub (bad) (bad) jmp mov jg mov test ret test fadds mov int into out (bad) (bad) fidivr (bad) ljmp clc mov xchg push repnz lods gs movsl cld repnz xlat (bad) (bad) (bad) jmp mov sbb scas mov cmp jmp xor (bad) mov nop lods imul insb ljmp sti loop push xchg jle (bad) (bad) (bad) jmp ficomp fildl cmp push lahf sbb out aam vmread in (bad) call mov (bad) mov sbb idiv mov gs sbb pop in sub ds leave jp sti stos adc incl mov mov push aam inc lds inc dec mov jbe pop hlt pop sahf xchg arpl (bad) jns push pop nop stc jge sub ds leave cli cmp xor cmp (bad) jmp (bad) sub jo jb push test jl cmovo out dec adc mov (bad) (bad) (bad) inc outsl inc ds mov or inc pushf stos jnp mov xor push mov jmp repnz pop ss hlt outsl sbb xor ret cmp adc xlat or out ss std and (bad) (bad) (bad) lcall fwait jb enter push test hlt jo cli fs fsubrs xlat lock mov or fnstcw pop fwait pop (bad) (bad) (bad) fbstp fwait inc lds lahf mov xor sti pop and sub mull incl adc pop enter pop lret mov sbb (bad) call xchg jp xor fs sub cld addr16 jmp (bad) incl mov xor and data16 lds xchg sub imul mov inc sub mov stos sub mov sar adc in mov cs popa lods scas scas cwtl dec push popf test fsub xchg and lea jae sbb insl pop mov jo add jecxz sbb (bad) fistpll cltd pop cld xchg lret aad xchg or lods lret (bad) (bad) mov sbb aam add xchg scas fiadd cmp jmp (bad) (bad) (bad) push leave aas stc cmpsl jge nopl aad sub mov pop inc jp push lret and arpl dec (bad) (bad) (bad) call xor or stos (bad) xchg inc cltd xor js cmpsl call je cltd xor (bad) (bad) push adcl cmp fs inc popf aam pop js out and xchg pushf and (bad) mov imulb mov mov jmp adc mov adc jp pop and dec or cmpsb jle loope jecxz repz mov jbe test ja shlb out jns xchg in (bad) lcall and lds (bad) and add inc adc mov (bad) jbe hlt lcall jmp pushl std inc cmp push lahf fld1 outsl xchg sbb das and mov adc clc (bad) (bad) dec (bad) mov and push adc daa out fdivrl out in pop enter imul rorb ja jecxz xor jg jg mov leave sbb rcrb or (bad) (bad) (bad) cmp sbb cwtl sub fwait inc dec imul fxch (bad) xor std mov test jns test (bad) (bad) incl outsb adcl outsb rclb lret jle (bad) ja (bad) (bad) (bad) call je cli mov jle fsubrl sahf cmp dec dec mov inc (bad) in (bad) incl xchg pop sbb jmp mov int3 cmp daa mov and cmc fstl jne lret (bad) incl push mov mov test mov je mov idiv or jg push xor inc xchg jg lds cmpsl out mov es cmp xor xlat sub jmp (bad) jnp int3 mov ret test cs std lods pop mov push cmp mov (bad) (bad) fild jmp or call push roll push lods sub push icebp or inc (bad) (bad) (bad) call add cmp push add xlat xchg loope jmp fs pop in imul cmp jno xor inc jnp pop dec mov adc inc stos mov (bad) (bad) push xchg data16 mov pop stos aaa lret push or test pushf (bad) add cltd loope mov test decl sub jmp dec daa aaa scas cmp jnp mov popa lcall test mov sub ficomp push mov ja (bad) (bad) (bad) call push lods daa cmpsb pop ljmp lds inc adc jecxz pmaxub jbe push sti sbb push aad xor cmp or fcom (bad) (bad) (bad) incl stos enter adc iret inc nop adc test jg add add sub ljmp jns (bad) punpckhbw sub sub imul cmpsb in mov pop sbb call add push mov pop push xor pushl (bad) outsl jl fimull or out outsb (bad) mov (bad) (bad) incl pop loope fstp push add leave dec mov out jl xor stos push out iret aam fldl incl cld push jo repnz or lcall in je loope cli (bad) mov sub push (bad) out fcomi dec adc loopne jbe pop ret xor and cli (bad) (bad) (bad) ljmp loope sub popf mov movsl (bad) jl mov inc xchg pop jo mov not (bad) (bad) (bad) jmp in ret cs adc xchg sahf jno adcl xchg jbe imull (bad) jae (bad) (bad) (bad) lcall imul sti cmp pop or sub adc shlb imull inc dec ja sbb adc and div pop aaa repz movsl (bad) pushl ret hlt push ficomp push pop dec lods and fnop lea mul stos push (bad) (bad) call cmpsb in xchg lret push addb ds (bad) (bad) (bad) mov stc out mov pop mov out ret call mov (bad) dec lret jge dec jle bnd (bad) int mov cmp enter (bad) (bad) push test loop jmp mov cwtl jge xchg jo xchg js adc mov sbb (bad) (bad) (bad) jmp lret xor jae in (bad) in rcrb ss xor movsb inc fisubl (bad) jge scas and (bad) incl sub inc inc (bad) int3 sbb aaa aas (bad) icebp jns aad ljmp fiaddl imul rcrl div das adc jge imul mov mov (bad) (bad) call loopne jb xor (bad) (bad) and je (bad) lret fmull (bad) (bad) mov xchg add mov sub ljmp pop add inc fsubp jb xor jmp addr16 sahf lds ja aas mov idiv xor adc jmp sti fscale or fildll cmp push inc daa movsl pop cmpsl stos inc ss (bad) (bad) call mov arpl in pop int3 or jge sbb cmp lea dec dec xchg jg lock insb push pushf sahf sti ja mov fcoml cmp mov (bad) ljmp cmp sahf cmpsb adc adc sub adc lahf test push mov adc popf inc xchg (bad) push pop pusha repz rcr xchg push ljmp aad pop repnz jecxz rolb pop dec mov incl (bad) and ljmp arpl arpl push decl lods push add idiv lcall inc psubb (bad) fdiv incb and cmpl andl jb mov or and add mov or (bad) fs ljmp pushl insl ret push mov lock push lahf adc scas test xchg pop in jl adc pop dec bound mov mov mov cli (bad) (bad) pushl stos out xchg cli shrb ret sbb xchg inc push xchg addr16 cmp (bad) jg scas das add and aaa jnp arpl stc sbb (bad) mov (bad) (bad) (bad) cmp inc pop push and lock push loope sti or ret pop sbb sbb dec cwtl movsb aaa or pop push xchg (bad) call testb addr16 cmpsl loop inc dec iret xor dec push dec aaa adc fcomip call cld pop dec fistp jae fidivr jbe inc mov stos sbb (bad) (bad) (bad) pushl cmp xchg clc and adc or sub xor dec pop into iret dec push cmp push (bad) (bad) mov push arpl sti add jae xchg jbe iret stos nop insl pop jo je (bad) (bad) incl outsl orl inc aas lret mov mov in mul test push mov (bad) (bad) call xchg pop dec leave rcl addr16 add add les in test add addr16 (bad) ljmp stc mov ds ja inc jge js and stc jno push lcall addr16 xchg ds test jl xchg (bad) pushl dec jbe lret int cs scas mov pop hlt push scas push fs jb pop or (bad) inc and push (bad) (bad) (bad) lcall cmp mov sub jne mov add dec shlb (bad) (bad) (bad) decl or je (bad) iret xor add int inc pop sub dec mov scas (bad) (bad) (bad) jmp loope and pushf js test dec mov pop pop inc out sbb cmc fwait lds aam movsl dec inc push (bad) (bad) (bad) jmp mov pop lret push add cltd sub cld into ss adc mov push repz (bad) (bad) jmp rcrb in xor xchg icebp xor sub cltd cmpsl jle xor enter xchg jae test (bad) lcall pop jge jb push push imul jbe pavgb push lret lret decl sbb xchg call inc iret (bad) (bad) (bad) fistpll jno add shll dec sahf fsubp and adc lock xchg push cmpsb (bad) (bad) lcall jmp push and lods js leave cltd sarb movsb (bad) andl sarl shlb xchg clc jle push fcomi gs (bad) pushl xchg imul pop xchg xor lcall fbld or in lret jae in sbb inc test cmp lcall sub ds xlat sub je (bad) loope (bad) ret scas lods and lods (bad) (bad) (bad) (bad) out loopne mov push xchg mov cmpsb (bad) aas mov xor int3 inc mov dec jb xlat aad sub pop fbstp orb (bad) jg hlt xor cmp sub bound push push das sub lcall inc xchg flds mov cltd jl mov mov (bad) (bad) incl push test push xchg jnp pop ss sub fcoml pop sar (bad) (bad) clc xchg mov negl mov cwtl lret adc dec loop lret mov jb addl inc mov xchg ss xor pop stos dec lret (bad) (bad) (bad) fistpll in sbb ret xchg adc lds cs and in cld inc (bad) (bad) (bad) decl ljmp in xchg jl mov mov loope in mov (bad) jg imul pop aad negb push push xchg aas aas sbb xor pop pushf sbb adc cld pop push jge imul (bad) decl in mov sub out out dec inc fdivs push (bad) jmp movsb pop pop mov or ret jns fisub popa fcmovnbe push jl sub (bad) and push btc movsl mov jmp lret pop push jae xchg mov mov push lahf push (bad) jp jbe (bad) (bad) (bad) call dec mov add push lret enter inc (bad) jae pop lahf mov roll (bad) mov lret ja xlat fidivl sub inc mov ret mov (bad) (bad) incl fsubrl mov arpl push test add push push mov or out (bad) (bad) (bad) (bad) incl gs rcl es xchg ret aaa xor imul xchg and (bad) pop outsl adc (bad) (bad) incl std loopne pop adc and pop (bad) ret lock ljmp movl les sbb xchg (bad) mov arpl and fadd das mov rcrl mov shlb mov mov cmp idiv (bad) ljmp push int3 mov loope mov sub pop sub repz (bad) adc adc mov (bad) pop hlt (bad) ljmp push bound mov imul in in adc sbb (bad) ljmp cs (bad) mov sub mov inc jecxz mov les (bad) jmp mov adc push jecxz and ss outsl stc das mov in mov aas (bad) (bad) jg dec push insb xor jae push rcrb ss jae pop mov (bad) mov inc fwait dec adc aam cmpsb sub jb (bad) (bad) lcall push adc mov and daa push jne hlt mov out stos (bad) mov and (bad) xor jmp mulb imul inc jb hlt test iret pop clc push jecxz cmc aad (bad) (bad) lcall loop rolb sti inc cmp fwait jae mov cli pop int3 (bad) pushl mov cmc and aad sub mov dec pop cmc jbe imul push out push ljmp mov jo cld inc or push pop mov popf rcr (bad) (bad) (bad) decl out pop add decb or sub xor mov and stos sbb cmpsb lahf incl sar hlt imul inc out rorb mov xor add lahf lcall mov jl call hlt into inc jl loop pop loopne mov sub (bad) (bad) (bad) call mov test (bad) loop add (bad) out test stos xlat popa inc push aas pop rorb pop adc (bad) (bad) (bad) fcomi lods sbb inc cmpsb jnp sbb cwtl lretw pop int3 mov mov cld lds adc cmp pop (bad) adc outsl lahf popa push cmp inc ret fcoml push ljmp inc adc ds (bad) (bad) pushl mov (bad) cmp cmp push mov push or mov (bad) (bad) (bad) lcall test inc or pop adc mov mov ficom cld (bad) call mov insb mov ljmp push lahf outsb mov clc (bad) fldt clc push or xchg mov jl lods bnd sar (bad) (bad) decl jge cmp mov cmpsb fwait xor mov fild das cli decl sbb xor sub mov inc lahf cmp or ficoml xchg ds clc ficomp shl ret stos or aaa mov clc add inc push and mov and (bad) (bad) jmp popa mov push pop pop jp or pushf mov popa lret icebp aas inc ljmp jns (bad) (bad) (bad) pushl pop xor (bad) sub nop pushf outsl ret xchg xchg push inc jle aas sbb (bad) (bad) push or lahf into cwtl push push fistl mov inc dec popa dec out adc (bad) dec mov popa call std decl dec jge (bad) xchg pop jns (bad) arpl cmc loope out scas (bad) pop es (bad) (bad) (bad) jmp scas mov inc mov xor dec xor (bad) enter aam mov (bad) (bad) jmp dec cmp cmp xor pop (bad) dec movsb dec pop pop mov lds dec mov mov cld rcrl iret mov lcall or sarl push adc hlt inc jae lahf aad lds and dec ljmp ds or daa adc add jecxz (bad) arpl aam (bad) push lret jno (bad) (bad) fbld int3 std sbb mov push (bad) pop cmpsl int mov jo (bad) (bad) (bad) call (bad) cmpsb std aaa ss inc lahf pop movsl test out pop and (bad) cmc dec leave movb lock add imul ret lock xor or jno mov and mov (bad) (bad) dec adc popf data16 movsl add and outsb ret out sub or sub (bad) ljmp xor stc push mov jl lcall mov data16 xor mov dec sub push imul (bad) cmp inc mov jl and or cmp nop inc std add cmp das dec xor gs aaa pop lock xor (bad) jo (bad) sti hlt inc loopne mov fistpl loop pop orl dec mov mov xchg (bad) (bad) (bad) incl out std or sub daa push roll push lcall aad out inc or pop cmp call cmp cltd mov sbb das ds mov (bad) inc ljmp cmpsb push dec js xchg fiaddl clc (bad) call rol imul add push popf pop pop enter int3 cwtl call cld call cld lods out sbb mov dec popa test lods loop cld int push and (bad) dec push rorb mov cmpsl sub pop cli cmp and pop cmp (bad) mov and mov pop push aaa or xor xchg rcrl jl push std (bad) call fnsave mov dec mov mov ss inc (bad) jmp mov in icebp imul (bad) lock bound aad dec inc fidivr nop (bad) (bad) (bad) pushl sbb push jns xor and gs rcrl or cli xor dec rolb fnstcw adc pop cld stos test sbb (bad) sti enter xchg bound mov popf and (bad) lcall mov rclb outsl rcr loop stos into dec (bad) xor imul jae scas (bad) (bad) decl pop fmull cs adc lret cmp cmp push sub jle pushf inc adc (bad) divl cmp cwtl adc fsubrl iret xchg test cmp pop in xor jns ljmp mov (bad) cmp mov in decl stc sbb dec mov ffree stos adc cli fiadd sbb divl push fwait add and incl cmp mov jl push addr16 (bad) orl ss sti inc ljmp cli pushl adc push sti adc xor stos cltd call int test push jns iret les mov pop jbe mov cmp add int cmp ljmp in jne lock lea repz roll jns (bad) push dec ljmp mov test and aam rcr test (bad) (bad) push mov movsb jbe add cmc sub or out cltd imul sub (bad) (bad) decl cld cmp cwtl mov xor cld daa adcl cmp (bad) (bad) lcall pop push mov (bad) jmp pop jp pop push or dec out jmp outsb cmp (bad) (bad) fstpt xor rcrb daa sub add test incl repnz pop fbld iret push jae (bad) (bad) (bad) (bad) jmp nop sarl out add mov and adc dec mov shll pushl (bad) fisubrl cmp adc lock stos testl xchg ljmp mov movsb out mov jae cld (bad) mov xchg jns push rcrl mov gs inc cltd cmp dec mov outsb scas xlat jl mov dec mov jge mov pop xchg loop pop je ja (bad) (bad) jmp into sti dec je (bad) ret into imul movsl mov dec jg es fincstp pmaxub lods sbb (bad) (bad) (bad) (bad) cmp imul cmpsb out das adc ret push out fadds cmp mov xor (bad) (bad) incl xor xchg jecxz stos push push mov scas std ljmp and push push in mov and js out in out rcrb (bad) pushl or (bad) int3 dec mov mov fisubl mov (bad) (bad) jmp mov test les and jae pop pop pop mov inc movb jp (bad) call cmp pop out sbb inc jmp push sbb mov jnp mov (bad) (bad) (bad) jmp xchg and sbb sbb loope or xchg mov (bad) mov sar (bad) (bad) pushl or outsl shr push (bad) je xor jge xchg pusha lcall loop mov pop (bad) fcomip jmp mov js test data16 lret es (bad) aaa sub adc pushl cld xchg fwait xchg push mull jp adc pop ret mov push dec cmpsb (bad) (bad) (bad) jg sbb and mov and daa xchg dec inc sahf incl cmp call xchg jbe lahf push test (bad) (bad) (bad) (bad) mov (bad) xchg insb jmp xchg push cli pop pop jne mov cwtl mov (bad) (bad) (bad) lcall pop decb push xor adc push imul outsb orl xchg outsl mov rcr push outsl lcall (bad) mov pop cmp int3 sbbl (bad) jmp std adc dec mov pop fsts cmp js sbb cwtl lahf repz dec dec lahf inc outsb fist sahf jle push das or mov in (bad) inc fdivl mov xchg jb mov xchg (bad) xor ja pop adc out cli (bad) decl mov cmpl dec ds mov lds cmpsl cmpsb test sarb (bad) lcall mov pop (bad) jno pusha shrb adc pushf enter jle fwait ret lods adc pop lret or adc (bad) (bad) call xchg sti pop add sarl test les push dec in addr16 inc pop dec mov pop add or dec ds mov push xchg inc aas cmpsb add (bad) pushl pop int3 xchg dec mov movsb mov adc dec lea and movsb or clc lcall faddl push sar lds mov fnstsw cmp (bad) ds (bad) ljmp inc pop (bad) je test inc (bad) loop repnz inc fxch fstl call fistpll sbb (bad) (bad) (bad) jmp or xor mov and nop mov cmp or mov outsb (bad) (bad) (bad) jmp in mov outsl xchg test jecxz leave adc and dec loopne aas xor loop (bad) (bad) fidivrl push inc icebp add and addl fs push sbb aad fstps push (bad) (bad) cmp (bad) call xlat outsl bound mov (bad) (bad) lods es neg int or dec push mov sbb cmp fsubr inc mov lock imul cld out sub fnstcw xchg sbb sbb nop in add jl jmp (bad) negb loop mov incl sbb xlat mov decl ss mov or lods insb xchg lcall cmpb push lahf fnstcw dec clc xchg aaa (bad) (bad) (bad) push lret rolb ret int push mov mov sub ja stc push mov add and rcll pop mov in imul lret call xchg lds and mov cmp daa cmp fadd and or (bad) pop cmp out push dec mov hlt or push incl fidivr cmp jl mov out push (bad) (bad) (bad) call loop push aas loop outsb je lret mov ss xchg rcll stc ss or (bad) pushl cmp cmp ljmp mov sbb add out lret (bad) mov dec xor ret mov or adc push mov or imul (bad) (bad) decl push adc daa ret adc imul sbb xchg enter (bad) decl fcompl mov jg mov adc cmp jns push lds (bad) decl shlb jl sub scas (bad) (bad) ljmp cwtl test adc sti es and fcoml pop adc leave aaa inc adc lcall lret ds in or jmp stos das push push outsl jae aam push out push int std ljmp push xchg sar fstps add jae jae xor cmp (bad) (bad) (bad) (bad) mov mov push outsl or mov jle sbb xor adc lret xchg add mov adc (bad) lret rorb bnd mov jecxz,pt xchg jmp fmuls cmpsl outsb test fistpll or or xchg xor (bad) (bad) (bad) ljmp sahf lret dec pusha fcmovu xchg jno cmp fild sub cmp cmp inc xlat jg xlat loopne (bad) (bad) enter inc aam sbb xchg imul stos loop (bad) mov in fsts (bad) (bad) (bad) pushl in les leave dec push dec shrl rorl std jle,pt leave adc and mov or xor jp (bad) call pop aam pop pop mov xchg bound mov jnp cs pop cmc jg nop jl cmp std stos sarb and push mov mov adc ret pop push inc (bad) (bad) fcomip and adc pop or and aad pushf dec xor mov pushl cld fstpt stos inc and lret sub push xchg push add jbe loope std out dec lcall (bad) jnp loope out test pop nop adc lret xchg pop push inc (bad) (bad) decl pushl lea cwtl push mov or adc (bad) pushl cld push pop aam fwait sahf xorl xchg or rclb (bad) (bad) (bad) call in cltd daa call jae sub (bad) cmpsb lds scas insl (bad) das adc (bad) (bad) fistpl cs mov ret cmc nop fdivr (bad) (bad) jmp cmp add sarl scas stos dec push addr16 dec ja test ret cld lcall (bad) je sbb fucompp jne adc stos adc xchg cltd sar pop mov aad inc add and mov jo ja sub mov (bad) ljmp insb jae mov aas sahf stos inc cltd dec lods pop sub (bad) jg xchg insb flds out and inc mov sbb in mov mov jb pop sarb pop pop cli add popf and addl (bad) (bad) (bad) lcall repnz lods imull fmuls dec sti rclb ds fisttpl stos lahf sbb mov mov (bad) mov int jg arpl mov icebp aas inc roll fnsave add pop jecxz bound sti (bad) (bad) lcall fs adc std dec jecxz dec cmp mov mov jno loope dec je and push std jg dec stos arpl scas add mov jecxz leave jp jl pop add les imul cmpsl add xchg sahf pop and test js jne (bad) repz sbb and jl out out (bad) (bad) (bad) pushl sarl mov shl out (bad) cld sub adc mov (bad) (bad) lcall inc mov mov mov lss xchg mov mov stos inc sbbl inc push mov mov jge cmp adc mov cmp pop fistp in (bad) (bad) (bad) incl stc cmp sbb and sbb mov fwait jae mov dec aas mov sub jge push pop lcall xlat pop mov stc push pusha es (bad) (bad) (bad) decl xchg out inc mov mov push outsb jle sbb aam jns push sub add cli pushl add shll (bad) (bad) (bad) incl (bad) dec insl test cmp sub xor push sbb ja xchg mov jg add xor push dec adc pop mov jmp insl mov mov push rep clc (bad) (bad) (bad) ljmp sahf mov jge push out jbe testb jae loope add mov ljmp faddl cmp push add clc ss sub stc mov cld (bad) inc (bad) jne dec cmp cmp movsl adc mov mov into leave xorb loop cld (bad) aas loopne and jle dec iret jo cmp call pand lcall rclb lcall (bad) jbe or add fist arpl fildll or mov pop mov jl lea inc mov jl jne xchg xor test pushl movsb sbb or rcr jb or mov test nop movsbl (bad) xchg (bad) (bad) call in outsl mov jno inc pop popa pop jae mov ds insl and movsb lahf pop or jecxz (bad) (bad) call mov jbe xor popf cli fwait std mov stos repz fnsave xor daa xchg add (bad) mov mov add cmpsb dec jg pextrw and in (bad) (bad) call dec mov mov sub push sbb aam clc cmpsl mov shrb (bad) (bad) (bad) jmp (bad) jo adc ss (bad) cwtl mov mov ret stos mov push incl pop xor push lods mov pushf inc (bad) pop and xchg imul ja mov adc jne add jb lods stos mov (bad) fistpl mov jmp push sub insb lcall inc jl fwait aaa jns shrl xor aam ja sub fmull js (bad) (bad) (bad) ljmp pushf insb aad jno push cwtl es and cmp push and sub outsl cli sub jecxz cs out push test sbb inc decb fs test inc adc ljmp xor fiadd (bad) mov jno add loop push lcall fild sub jmp push fsubs flds lret jne fldl add mov jbe dec fldl jl out (bad) (bad) (bad) (bad) jg jno (bad) mov cmpsb mov xor push xchg lods and add push daa xor dec sar pop cmp cmp (bad) aaa aas push (bad) mulb dec or movsl jb push add in sub inc call inc in fisubr inc cmp xchg daa aas adc inc in imul add hlt pop enter std or psraw cmp call fsts push jg mov ret sbb test pop cmp jne sbb stos stos and mov add or call fstp mov adc inc out dec dec mov (bad) (bad) incl inc mov (bad) scas xchg inc aaa cltd cmc leave dec mov or sbb std (bad) incl stos stc test jl pop mov jl sarb (bad) (bad) jg mov lods incl cwtl sbb dec fidivrl (bad) lcall sub pop (bad) fs movsl testb jl mov sub movb shll iret xchg (bad) incl cld jnp jl mov lcall mov jno jecxz jecxz mov adcl mov push sbb or add (bad) (bad) mov test pusha dec mov push fwait jbe sbb cli pop mov aas xchg cmp push xchg cli call rolb adc adc iret in ds (bad) (bad) ljmp pop dec or adc dec pop adc cmpsl nop (bad) int3 fcomi or push imul inc cli (bad) pushl out addl jns cmp ja push pop test sbb cwtl enter gs fstl mov hlt lea sub (bad) rcll in jge fbstp inc (bad) das js mov outsb in xlat or (bad) daa cld lahf std (bad) fbstp (bad) (bad) lds sbb xchg mov (bad) (bad) (bad) decl add ret scas mov loopne cli xor stos in repz mov cmp std lcall mov dec outsl aas pop int3 shl imul jb mov clc fstl cmc lret pop ds lahf pop push cwtl in cmp scas repnz subl or xchg js mov lcall lock cwtl mov pop dec fnsave fisttpll aaa jl mov mov adc pushl es inc fcomps jae cmp stos sahf imul (bad) enter cs lret push fwait and push fnsave (bad) in inc es pop pop push mov and (bad) (bad) (bad) mov shrb (bad) nop sahf jno mov call push int3 mov lcall (bad) jmp les push data16 and xchg into aam insl fwait (bad) (bad) jmp or mov repnz and dec mov sti nop aad jmp adc mov (bad) xor pop (bad) icebp das pop pop mov popf push (bad) xor or jl les push (bad) (bad) (bad) jmp stos mov ret mov cmp fdivs in adc sub pop sbb (bad) std (bad) incl mov or mov arpl sub pusha push pusha lock jg and (bad) mov mov fs pop push and add test mov mov (bad) (bad) call popf mov gs mov xchg scas dec mov std sub cmp movsl sbb aam leave scas (bad) cmp add loope add dec or (bad) aas cmp xor (bad) cli fldenv (bad) incl add cmc jp xchg mov cli call (bad) jmp mov add pop or (bad) lcall dec mov xor out jle fwait and pusha push (bad) (bad) jg ds pop dec inc notb icebp (bad) pusha in in pop mov lods inc sbb jmp mov hlt jmp sbb aam pop lret rorb or ljmp stos jg call or sbb movsl int3 aam (bad) mov and mov hlt xor xchg loope mov stos xchg add lret adc pop add mov cs lock dec aad scas inc dec jge sub movsb jbe pop js cli xchg pop mov adc ds outsb iret mov (bad) (bad) (bad) (bad) cli mov inc adc or stos xor dec lods test and jle in test cld (bad) mov sarb data16 cmpsw out fbstp xor (bad) mov subl jl imul add xchg dec stc (bad) mov xor and sbb xor lock (bad) sub mov push inc (bad) (bad) (bad) decl (bad) adc xchg mov test out lods dec mov jnp (bad) (bad) (bad) call pop mov cmp ret push mov mov and add xchg sbb arpl cli sbb mov fiadd clc ds (bad) out js (bad) mov inc jnp mov mov mov loope (bad) (bad) (bad) (bad) (bad) clc adc and push (bad) mov aas aad lock xchg jp mov loopne cld cmp call and outsl arpl testl and and pushf inc jb xor (bad) push (bad) adc (bad) ljmp push test icebp pushf aaa jge add cmp pushl adc popf jbe fprem1 xchg mov fidivrl xor test rorb out (bad) or pushf call (bad) popf cmove jnp (bad) (bad) (bad) jg rolb add lea pop (bad) cld fimull inc stmxcsr mov mov sub outsl mov ss data16 aas pushf ja dec and mov sahf outsl cltd (bad) (bad) (bad) (bad) jns lahf jl add das jecxz repnz or dec xor icebp xor pop push jge sbb inc (bad) (bad) (bad) jmp inc adc sub outsb ss imul jne lret test mov adc shrb sbb arpl (bad) lcall push cmpsl mov add fbld lret stc aad jns push leave xorl test (bad) pushl popa stos mov mov adc dec jnp adc push (bad) (bad) jg ds mov mov outsb cmpsl sahf cmpb mov lods out mov (bad) (bad) inc jns pop xor insb es out call add dec movsl lea and cmp scas lcall jns out mov scas es add out out and es clc loope (bad) (bad) decl leave push hlt orl jo add sbb hlt adc call insb (bad) add repz es int addr16 sub sahf imull dec xchg and enter push call inc fsubrl ds mov pop (bad) fild adc jmp sbb test (bad) (bad) (bad) call jno inc pop sub out psubb dec (bad) arpl sub push sub pop clc lcall daa lods inc mov divb dec sub jne mov test call pop mov mov je (bad) fmull inc ja ret pop mov imul fist addr16 (bad) lcall ret pop push sbb or imul mov popf es cmp and xor mov and shlb arpl loope push ja aad ret cltd dec out jae gs cmp and xor pop aaa call aaa jb pop mov pop clc dec (bad) (bad) (bad) pushl xchg adc daa cmp pop ret fildl pop sbb sbb aad jmp mov xor (bad) inc jmp sub or es icebp jno sbb (bad) (bad) aas push shrl dec push xchg cmp repz (bad) inc push xchg test adc (bad) (bad) (bad) jl lcall iret (bad) sbb xor fdivrs inc pop ret push test mov pop mov mov aaa (bad) (bad) (bad) decl pop pop push out lcall jbe xchg ljmp cmc jo cmp jge sub std and jae hlt push stc lcall nop inc subl (bad) (bad) inc fs push fsubs ja dec or shll into (bad) adc test (bad) (bad) incl lock jp sbb pusha loop repnz mull mov fisttpll jns push lock test or sbb add lcall push fdivp shll cli xchg loope in push or pop (bad) xchg aaa adc ret mov pop aas mov xchg or (bad) mov xchg (bad) (bad) ljmp add xor sbb shrb jo iret mov push mov lcall inc fdivl mov (bad) (bad) (bad) ljmp cmp pop push in shll sbb xchg into fisttp or loopne (bad) xor xlat push xor dec in icebp add lods cmc mov int3 test jp (bad) (bad) (bad) (bad) mov add jg or mov js xchg jno repz out add and lods decl jle pop mov jne pop (bad) sbb nop mov aaa rcl sbb gs stc das (bad) (bad) (bad) ljmp push mov mov js sbb test and data16 sbb add je sbb ret or ljmp repnz mov je negl je sub popa lea stos enter incl push into mov fnop in mov test ss pop xchg cmp scas push je inc jg inc daa lcall pop (bad) outsb fs mov fldcw pusha cltd jae in sub mov lahf pop mov mov shr fmul mov add es (bad) out clc xchg jl add cli sahf sub mov jl lcall pop inc (bad) (bad) (bad) pushl out cs mov pushf jbe lahf int3 call sub notl push mov (bad) ljmp push or cs test (bad) popf addr16 (bad) (bad) (bad) (bad) mov adc lcall pop enter stos and ja out mov and cmp sub inc pop xor addl daa mov inc outsb mov pop imul push and or cmp leave xchg insl lahf lea pop and ljmp insb jp jg xchg out cmpsl sarb (bad) movaps sbb cmp cmpsb push lret push pop mov (bad) (bad) inc xlat ljmp dec pop pusha lea enter aad pop in stos les cmp jg (bad) (bad) jnp xor sub mov xor jecxz fdivl ljmp sar and sbb cmp cmp add sub xor pusha ja ja ret ds sbb xchg xchg mov (bad) call sahf mov jmp scas sti pop dec jl (bad) xchg pop (bad) (bad) ljmp xor ja testb mov push jmp decl lock adc cmp pop add jge or loop sti cld (bad) (bad) jmp jnp push push test mov inc xchg xchg out xor movl inc pop mov (bad) jg fs pop iret push mov adc imul (bad) jmp (bad) repnz pop and inc cmp (bad) xor int pop movsb lret pop cmp ret jg,pt adc (bad) (bad) decl (bad) fimul push xor inc or sbb xchg enter dec data16 cld (bad) fild and mov xchg push std dec jl in cmpl rclb mov or adc mov pusha xchg cmp xchg pushf lock xchg sub xor (bad) (bad) (bad) call icebp mov insb push push fstpt fs dec push add mov pop loopne sub ret push aad cmp xchg addb test push (bad) mov js out in popl cmp popf fcoml push mov popf sbb clc imul mov jl jle fucom xchg jmp movsl testb daa xor sar incl repnz add mov popf push ds dec out pop out aad dec jns inc inc fldenv jno mov dec popa scas xor in bound jo pop dec dec mov xor dec (bad) (bad) decl dec ret iret xchg mov pop or jo add adc dec fisttpl (bad) decl xchg ret std pop sar (bad) mov psraw inc ja jg sbb (bad) cmpsb cmp call push repz xchg cld push sub fcmovb adc (bad) pushl pop les loop mov inc and mov jecxz cs scas inc (bad) pushf cmc fwait (bad) call iret sbb cld cmovle dec loopne movsb rorl pop and out fldenv sub jp ljmp mov into add cbtw aaa stos xchg test loopne push fstp xchg adc (bad) (bad) pushl scas aad or pushf pop and jmp das (bad) rcl (bad) mov test mov int3 xor test addr16 cmpsb inc push addr16 clc ret xor (bad) fstl jp das adc movhps add (bad) inc (bad) pushl inc ds and mov outsb or mov ret (bad) popf incb cld ljmp push fstpt popa cwtl sub leave (bad) mov imul sub xchg call xchg mov jbe add and (bad) (bad) jmp shrl lret insl mov jo (bad) inc lods (bad) (bad) sub push add lods lcall dec loopne (bad) loope pop aas push sbb dec rcr dec add mov test jbe jmp (bad) (bad) (bad) incl lret jo (bad) mov mov jle pop pop decl mov cmpb popf fs and pushl dec adc sub shr imul xchg cmp mov stos in sbb fimul mov (bad) (bad) ljmp mov inc mov inc out in jp dec push and test and add fldl push cld (bad) incl mov xor pop mov int3 cmpsl dec push lret std (bad) call xlat xor insb or enter pushw jg add jb mov enter (bad) lcall dec cld sarb push sbb mov jp lahf fcmovne dec dec pop cmc dec jmp (bad) (bad) aad test xchg mov sub fnop clc pop lock lret push cmp and std shll sub jecxz ret mov inc mov lret dec mov aad int outsl mov test jmp mull loop mov fimul cmp cltd scas ds xor dec inc (bad) (bad) (bad) jmp jbe lds push inc stos movsl (bad) push pop xchg push mov adc xchg ret (bad) (bad) (bad) (bad) pushl sub mov (bad) and dec mov xchg push jge jge (bad) jne mov daa push (bad) (bad) (bad) call mov pop cmp dec in fdivs xchg (bad) stos out dec inc loopne mov pushl std pop decl sbb push add cmp jecxz (bad) mov add dec in aad mov mov cmpl inc (bad) (bad) (bad) inc inc fistp (bad) mov repnz icebp dec adc push das mov lahf inc dec (bad) (bad) (bad) decl and inc xchg xchg mov inc xlat xchg repnz cmpsb xor sub in xor (bad) (bad) jmp mov dec sub sub movsl loope jmp sub imul rcll xor jp adc jns cmpsb dec fisubl roll xchg mov loope xchg (bad) jae out lock incl repnz mov rcll in or mov (bad) lcall loop pop aam pop or mov mov sub shrb (bad) (bad) call or into aaa cli out adc cli jg mov dec ret jg push inc das cmp std (bad) fisubrl shll loopne sub arpl mov inc popf shrb xchg cld sub loop in pop mov ss (bad) sahf push aam jmp mov (bad) jg sub loope xchg sbbb fs push push pop clc adc xadd scas les cmpsl dec inc sbb (bad) (bad) lcall mov jle test cmpsb fnstcw (bad) test mov adcb xor pop (bad) (bad) (bad) jmp mov push inc sub add xchg popf ret dec das jmp sub sbb call (bad) jmp (bad) push add pop jne arpl clc add add add (bad) jae dec dec mov (bad) call les insl xor pop pop ffreep cld add mov (bad) dec xchg and sbb (bad) in inc in loope rclb lds mov (bad) fdivr sub sub out dec (bad) lcall das int3 mov lret xor hlt fcoms jg scas cmp and (bad) push xor xchg push lock xchg ds lods shl xor (bad) (bad) (bad) fistpll shlb roll jns cmp les call cs mov push (bad) pusha test (bad) (bad) (bad) jmp (bad) fwait loopne mov movsl bound imulb mov pop jno stc sub lahf xor (bad) (bad) ljmp in addr16 push xor dec push (bad) jno fidiv movsb mov pop adc mov pop (bad) (bad) fcomip call gs leave stc inc cltd lock out pop test imul mov cmp jae xor xlat (bad) xor aas rcr sti cwtl movsl add inc xchg (bad) (bad) jmp push out push sahf ja mov dec lea fs js (bad) (bad) mov jg loope ret add cmp sbb jns stos (bad) adc add lea xchg jle daa jle cs pop cmc xchg sub in pop insb ret mov popf add add orl aam xor (bad) (bad) cmp loop data16 test jb pop and jne inc inc (bad) (bad) lcall arpl aas fwait sbb pop dec push and out vaddsd fcoml fs std (bad) cmp pushf mov and (bad) (bad) lcall jmp pop or into mull push mov aam mov add jl (bad) (bad) (bad) pushl (bad) mov push mov pop nop das cli push add xchg add nop iret push in (bad) (bad) incl sbb inc call xchg ljmp mov (bad) jg jmp ja out add sub mov mov fwait rclb push (bad) (bad) (bad) incl (bad) fucomi push das sarl push in popf dec daa dec fs fbstp xchg adc decb mov iret or add jnp inc sbb les mov pop cld pushl push push icebp jnp mov jno enter sahf inc dec dec and (bad) ljmp lods sbb push repnz push (bad) (bad) addr16 fisttpl (bad) mov (bad) jmp sub inc cld test test or in push addr16 cmp (bad) lcall fnstenv insl dec mov lods push jp adcb dec jo inc daa lods shrb (bad) sti aad pushf sbb cld mov in and mov (bad) (bad) jg ds out mov add dec push inc stos inc lret ret (bad) ds push dec mov jge mov cmpsb (bad) (bad) incl jbe fs scas add hlt (bad) lret movsl dec repnz (bad) call lock jo and and (bad) notb fsts jns inc inc xchg (bad) (bad) (bad) (bad) ds sbb and jle es rorb inc jmp mov mov scas xor jmp push inc jle (bad) (bad) mov inc or test int cmpl lret sub sub dec sbb (bad) (bad) (bad) call mov (bad) nop std sbb mov paddsw mov push push cmp (bad) stc pop ret lcall mov mov jne jo (bad) ljmp (bad) sbb inc sbb cmp popf je mov mov push push pop sbb sbb jns mov fisttp mov les xor mov in (bad) (bad) mov adc cmp adc inc inc jl jle mov decb add and imul jle pop loope cmp xlat sub adc std mov ljmp lret mov xchg pop lods jne test (bad) out outsb inc cmp call pop adc stos lea mov sub (bad) pushl fisubr ficomp mov inc add lcall mov cmp jmp mov xchg mov jno into ja fwait movsl inc ds (bad) mov out cmpb cli push xchg insl push out clc (bad) dec xor mov pop pop je orb adc fsubrl idivl sbb (bad) ja jb movsb subl adc mov (bad) or (bad) jmp clc lret call jl and fnop adc data16 pop iret out mov xor (bad) (bad) (bad) ljmp les scas mov stos loopne and std xor cwtl mov cli ja ds add aas mov ret mov cmpsl int3 movsl insb (bad) jne lock fildl xorb movsb xchg add jmp mov fildl call (bad) (bad) (bad) (bad) js pop (bad) and adc outsl dec sbb inc jno inc (bad) flds aaa ss (bad) jg (bad) mov add push dec push mov jae aaa mov adc xchg cmc cs fs (bad) (bad) jmp pop ljmp xchg xlat sbb (bad) pop leave push sub xor repz xchg sbb push out inc or xchg out jne push das cld cli add mov sub fcos (bad) (bad) decl push out inc xlat xchg insb insl mov in mov scas or pop jo fcoms ss (bad) (bad) pushl add sub into push and cli xor push pop outsb mov movsb daa gs (bad) xor (bad) (bad) (bad) (bad) cmp xlat nop (bad) out push sub sar sub lods ljmp mov (bad) (bad) (bad) (bad) fiadd ss iret add mov imul lock mov mov cmp dec sub outsb push sub insl and push fs xchg lret pusha cmp test fs mov fwait push ret cmc (bad) (bad) ljmp lds sbb inc nop sahf and push daa mov mov pop (bad) std test mov push aaa xchg xchg jns outsb xor arpl cmpsl jnp sar (bad) (bad) decl cwtl out imul and pop sbbl loopne mov mov int3 jae dec push lock dec ja add (bad) jmp inc out aas insl mov es jp xlat scas push arpl pop ret xchg push (bad) (bad) (bad) push leave pop sti lret xor add or sbb dec or xor fdivrl (bad) push (bad) xor mov add mov xchg push sbb xchg lods mov jg inc fwait aaa mov xchg or jb cmp jmp popa enter call iret test fistp orl cwtl (bad) jne mov (bad) in (bad) loopne xor enter jecxz in sub push pop mov (bad) (bad) incl out daa cli cmp imull fiadd loopne icebp jb test or xchg push icebp (bad) (bad) (bad) jmp sbb dec mov mov or sahf dec cmp dec pop clc (bad) call ds sbb movsb js mov mov gs idivb int3 stos add pushl pop lods in xlat sub js sarl xorl into arpl xlat (bad) (bad) (bad) push adc push mov stc push xor mov jge pop mov (bad) mov (bad) jg add jb sbb stos jae adc shll repnz movsl or xchg xchg dec loope lock loope pusha loop push mov movsb incl fidivr fist lea sbb (bad) (bad) (bad) stc roll mov or sti nop sbb (bad) adc imul cmp jns testl daa (bad) and fs mov ss xor pop cmpsb cmp and cmp and repnz popf nop lock ds movsb mov mov (bad) ds outsl mov adc add or bound (bad) fbstp (bad) (bad) jmp adc aas sub (bad) in inc or xchg xchg mov mov or cmp mov ljmp lret pop fdivl ja dec push mov inc jns xchg loopne ss inc push mov mov mov lods out xchg int3 push adc repnz mov lock std (bad) decl xor push in lea ret fbstp mov cmpsb mov (bad) (bad) decl ss sub testb inc sbb test pushf lock or aam and outsb mov lods imul sbb call (bad) (bad) (bad) decl (bad) cmpsl sbb jne test lds inc push sub stos dec push (bad) cli push xchg out lret mov jg (bad) pop mov js jecxz fadds mov (bad) (bad) jg xor ljmp cmc js push pop int test push stos and fisub cmc ljmp jmp leave in dec jae lods (bad) mov rolb xchg les mov clc sbb loop loope test shll fbstp in push fnsave les adc jg hlt push (bad) mov push cmpl out repnz jo xor sbb mov ret mov push pop jp dec inc enter cs rcll jo xchg (bad) (bad) incl les sti add fbld ljmp mov fisub imul dec mov ljmp add rcll lock shrb adc daa dec in inc push (bad) decl sub pop inc lods xchg jno (bad) lcall add push jne arpl (bad) cmc clc in or ljmp jg enter int push add outsb adc cli add mov sbb push aas (bad) (bad) (bad) incl xchg bound xor add repz mov mov (bad) (bad) dec popf out or mov lea cmp mov lret mov jbe pop (bad) cmc jmp inc mov stos or jg sbb and notl out cli (bad) (bad) call inc rcll aaa xlat adc (bad) mov xchg in repz movsl adc roll sarl outsl sbb imul int jge lcall bound jae ret push inc bound in adc (bad) (bad) (bad) lcall sub cmp jne mov popw and pusha sub push das add push mov sbb in mov jge (bad) lcall push into loope popa scas addr16 cmp adc xor xlat fs lea pushl mov xlat push xchg (bad) and mov and push outsl in ret mov ljmp sub adc pushf adc xchg rorl pop es (bad) (bad) mov and push les push sbb (bad) (bad) mov jae push imul popa int3 lcall mov loopne sbb ds dec into xor (bad) (bad) (bad) ds dec mov inc ds or mov and lds sub call adc jmp xchg in das push dec xchg aaa (bad) cli ret js,pn xchg pushf (bad) (bad) (bad) jmp mov aad test cli (bad) mov xor nop and xchg cli jmp hlt in sub mov fbld mov (bad) mov ds dec stos add dec enter das sbbl push xor pop and xchg xchg popf cltd rcll cmp out call (bad) push cmp js call ja mov ljmp adc adc dec inc lret jmp loope mov mov or inc mov js sbb rorb (bad) (bad) pushl sti sbb xor repz xchg in imul push sbb outsl clc ja xor sahf insl sti dec fwait push inc daa incb xchg cmp andnps or repz dec lret push xchg (bad) (bad) (bad) cmp sub add pop xchg jnp and pushf flds mov ret mov test xchg cmp into nop in and imul das mov or mov scas or clc mov pushf push incl cli addr16 pop or insl adc aaa mov (bad) (bad) incl js (bad) iret jne cmp mov std mov das mov sub add (bad) (bad) jmp js call inc sbbl insl dec push aas jp aam and mov ficomp sbb out sub pop fs mov (bad) (bad) mov xor adc mov add mov loopne je int (bad) (bad) ljmp pop mov sti and lcall hlt push cld cltd inc and cmp cmc pusha push adc jg jmp lret adc call pop xchg loope push jnp decl rcr leave (bad) (bad) jg inc stc iret push jno push nop (bad) pop lds cmp int lock je movsb or dec or lcall mov stc cltd mov repnz (bad) (bad) (bad) jge imul arpl aam adc (bad) xchg xchg aaa mov stos and (bad) (bad) (bad) jmp xchg push leave mov test pop pop aam cs jg sub (bad) (bad) (bad) pushl jp sub arpl enter dec mov or ret fldcw (bad) lcall divl shrb aad mov fs mov lcall and sbb shrb cli fucomp inc xchg iret adc pop mov aad addl sbb ds das push cmpl in lods add fstpt xor in cmpsb in sahf cmp (bad) jg sub in xor lods mov (bad) dec outsb pushf subl fstp mov mov xchg mov cld into fsubs push js (bad) jno xchg mov adc sbb adc stc ss cmpsb insb cmp xor and (bad) (bad) (bad) (bad) cmp add mov mov cmp jge aam notl jmp ljmp test out repnz cmp dec cmp (bad) (bad) lcall mov (bad) ret push push cmp pop or (bad) (bad) pushl cmp movl cmp push cmp xor aaa add insb and (bad) (bad) lcall out xlat mov ljmp (bad) mov repnz out clc dec xor fdivr jge les mov sub jg ljmp sub mov jbe mov inc add clc (bad) (bad) lcall jecxz popa push cli movsl (bad) add lret jecxz inc jmp in jp lock jle js (bad) decl ret clc add xor pop fidiv (bad) (bad) (bad) (bad) fisubr je sub cs sub loopne mov mov mov leave aaa enter aaa (bad) (bad) (bad) (bad) jge out and cld add rcl std test iret mov lds dec (bad) jmp or mov mov push add cli lcall dec cltd daa das jb in mov addb int (bad) jmp sahf add push andb cmp int3 push insb xchg pusha and mov inc (bad) ljmp xor xor addr16 pop (bad) (bad) lcall sub fwait sbb mov test sahf jp loope repz xor (bad) (bad) repnz outsl lret decl (bad) pushl adc in adc lds (bad) or sub dec dec into clc fildll (bad) dec mov bnd lret cmpsb push xchg ja movsb jp or lea (bad) (bad) (bad) lcall scas push out lret hlt jge addr16 xchg cmp nop call out movsl push fcom scas test adc mov js call call aaa pop loopne xlat out sbb mov pop out add aad pushl cld pushl (bad) outsl sub in adc daa sbb les (bad) pop and or push cld adc stos add jbe fcom jg (bad) fistpll inc das shr pop mov jge sbb mov dec fmull dec mov cmpsl sub cld rorl in push and push call pushl xchg or loopne cwtl scas mov pop inc push cmp xchg mov sarb ljmp xor fs in in movsl mov xchg loope rcrb mov cmpsl lods (bad) (bad) (bad) (bad) cmp inc lea jmp ret xchg sbb jg mov inc fs into (bad) (bad) (bad) call inc push cmc jmp ljmp jae fsubl adc push sub (bad) dec jnp xor xor sbb pop notb xor jne lods outsl test lret sbbl imul lahf clc aas daa and test incl test pop or in cwtl repnz insl mov jle (bad) (bad) decl add cmp sub xor icebp lcall je or push dec cli cli push push xor push cltd mov push aam test stos jnp (bad) decl cltd dec dec cld call sbb fstps imul (bad) (bad) (bad) incl ljmp in (bad) sbb sbb or push fisub mov xchg jne dec (bad) (bad) (bad) (bad) mov mov jle adc movsb sbb (bad) cltd bound pop outsb mov (bad) (bad) lcall dec fstl mov (bad) lock jnp pushf push push mov outsb repz lcall dec (bad) (bad) (bad) incl sbb sbb loop jns lret jmp push push cmpsb divl sub (bad) (bad) jmp leave ljmp jge js push push push andl testb sub fcomip lcall pop mov shrl pop sbb mov adc push rorb cmp movsb push sahf pop daa sbb dec andb xchg push jg sar mov mov pop cmp cli cmp mov and and js shlb stos and (bad) decl pop jbe adc and inc loop add or (bad) sub icebp aas les (bad) bnd dec jmp aam push ficomp mov and adc fidivrl scas cmpsb test popa cmp push adc jg mov xor pop lock or mov dec push jne adc movsb xor mov into cmp ficom nop adc jb (bad) incl xor lods xchg mov icebp dec cmpl push aas fisubrl dec popa cli (bad) (bad) decl sahf jae out nop jg jae dec (bad) add xchg pop adc push ljmp sub xchg push xchg cmp outsl bound add push mov mov xor and les cmp jmp (bad) (bad) pushl lds mov movb jl cmp jge xchg ret jo lods mov push mov (bad) (bad) (bad) pushl notb xchg mov adc (bad) int pop pop pop icebp add or (bad) (bad) (bad) call icebp inc mov fs mov mov jge sub or pushf inc jmp pusha not fdivs decl mov inc push jg int3 shrb jo jb jg (bad) (bad) std out mov leave sub les out jg xchg lret fs cmp (bad) (bad) (bad) decl out data16 lds ja fisttpl push pop pop jbe cmpl (bad) (bad) lcall sub lret popl and xor push pop insl cmp add sub mov mov cmp or nop call jge sub hlt mov jge (bad) pop stc mov test ja ret (bad) mov scas jecxz mov rorb imul jo ret cmc into (bad) (bad) (bad) dec lods sub push lea fiadd sbb adc xchg push stos push sbb (bad) (bad) incl cmc jns cmp (bad) je mov pop test daa nop cli cmp sub (bad) call insb jne cmp or sub jg add sub add mov jb std lcall sqrtps xchg sbb fwait jns (bad) (bad) jg sahf outsl inc xchg xchg fldl2e mov or lea das pop movsl or in (bad) jg pushl out and jp nop enter dec fisttpl sti cltd push (bad) (bad) (bad) jmp adc and (bad) mov jmp jae sbb sbb cmp in (bad) cwtl sub (bad) (bad) decl lahf jmp mov sbb lahf leave in or popa popw dec mov (bad) (bad) (bad) (bad) mov jbe cmp into mov dec push js xor sbb inc pop jle jmp (bad) (bad) (bad) jmp mov stc cmp mov enter cmp shll or sub jmp (bad) test loopne mov fild ds decl inc xor leave and icebp loop xchg mov (bad) (bad) call sbb dec movsl push aad mov push inc stc sub xlat sub divb cwtl (bad) (bad) (bad) (bad) cli xor mov lret jbe enter xchg jae call adcl and (bad) (bad) out sbb xlat in loopne jne mov (bad) mov test out mov push push push pop test jmp xchg add mov adcb in push loope sbb (bad) (bad) cld dec inc fwait jmp lcall popa roll pop mov ret pop in jbe jp aaa inc std jmp and jo mov (bad) call mov fxch fstpl les lock ret es pushl cwtl gs push pop fisubl inc jo (bad) (bad) mov insb sti int mov test jae iret les push (bad) cld mov insb arpl lcall rcrb xchg stc int3 dec enter dec daa or mov test into test pop cli (bad) pushl mov and hlt sahf cmp inc icebp rorl sar (bad) incl push out out mov or pushf adc movsb in cmpsl sub (bad) (bad) decl aas and push stos xchg dec out or mov adc pop adc (bad) (bad) (bad) incl cli push std fwait ret dec jb in icebp enter out or cli lret sbb push cmp popf mov pop pop sub sub (bad) (bad) ljmp sbb imul xchg xor push xorb xchg into or (bad) incl jbe mov pop das xchg roll mov pop test jmp lods mov adc cmpsl pop aas les push clc aad lret add enter xchg mov pop stos add and pop push mov xchg in cld lret push (bad) (bad) (bad) call cwtl pop stc and ljmp mov in sub dec test (bad) (bad) (bad) call push mov scas les incb roll es nop mov in sti (bad) (bad) (bad) push cmp call add ffreep jae push push lret mov out (bad) (bad) (bad) dec inc or stos adc lret outsb jo sarb push ret call loopne test nop out je xchg pop aad (bad) call data16 xor out push xchg mov or scas pop data16 dec mov (bad) (bad) mov mov jg mov add leave pop mov popa (bad) (bad) (bad) call js jge out iret in add pop ljmp mov jnp fucom cmp mov data16 (bad) (bad) call test scas out and outsl lods data16 push xor pop push dec cltd ljmp (bad) or mov xor ror inc clc (bad) lcall sub jecxz and add pop pop jmp cli push in (bad) or (bad) (bad) incl mov and jl cli lcall rolb mov call fbld fwait sahf dec xchg mov sahf addl lret jb xor (bad) std (bad) push mov lds sub sub cli cltd push nop jno pushf sbb adcl dec sahf aam fcompl and in addr16 mov and mov mov test insb and (bad) (bad) mov shll jno jp sbb stos mov js pop (bad) out clc incl cltd subl incb and ret or orb rcl das push sti mov jp pop sub mov xor adc sub push lret (bad) (bad) (bad) jmp mov xchg jb je or xor repz loop bound and (bad) (bad) (bad) pushl dec repnz neg pop or mov neg jg lea rclb int3 movsl ja test test (bad) (bad) (bad) out jg (bad) test je aas or xor pop adc pop inc lea daa dec stc mov (bad) (bad) decl lock xor sti adc lods (bad) mov out sub out (bad) aas or cwtl push fildll adc xchg cmp stos fidivr sub or cmpb (bad) jg mov add cmpl cld pop xor jecxz movl sbb sbb aad adc (bad) jne inc ret cmp cli (bad) ljmp addr16 les outsl mov je push xlat jbe (bad) hlt xor xchg pop (bad) (bad) jg aam shll rol mov dec xor les addr16 jg lods push cmp inc mov jle in (bad) (bad) (bad) lcall inc push lahf cmp pop jp bound mov cld or xchg (bad) and (bad) dec outsb jnp fnop sbb jl popf add xor outsl adc xor sbb (bad) (bad) ljmp in inc (bad) sarl rcl aaa jnp test scas cltd sti ljmp imul in inc sbb mov push sbb xchg adc sahf out fs sarb add test fild (bad) pushl in popf lods lods xchg sarb ffree ss mov cs mov cmp pusha sbb outsl jb mov or pop gs mov jmp fisubl mov (bad) incl adc lret cmp clc lea insb js push inc sub (bad) (bad) pushl (bad) sbb fs js fwait stos addr16 push stos popf pop (bad) sbb psubq jbe out mov (bad) incl pusha push out pop stos mov lea xor jmp lock fstp insb pop xchg ret (bad) (bad) lcall xor lds cmp push fdivr mov or mov cmp dec repz mov fs sti jnp dec and inc leave jmp (bad) (bad) (bad) ljmp push cld in (bad) (bad) jns iret adc data16 lret outsl add (bad) test adc (bad) lcall ret mov cmp and push rorl loopne jbe in (bad) mov xchg pushf clc imul xchg xchg xchg sub (bad) (bad) pushl fwait (bad) clc dec jl ljmp cmp repz jg cmc lcall int fisttpll mov fs je jnp add (bad) ljmp adc xchg dec es imul inc imul sub hlt jg ds in add (bad) (bad) (bad) jg movsl jle and (bad) les popa inc pop xchg jl andl loop and push aam or (bad) imul and nop mov (bad) (bad) call mov fwait out push mov mov nop push divl test xor and (bad) (bad) (bad) inc imul sbb sbb test test xor jmp (bad) (bad) (bad) (bad) cli push popf push push jge stos stos lock aas lods mov xchg sbb int xchg push (bad) (bad) cmp aam ljmp cmp imul xor pop xchg (bad) sbb into lods es (bad) push pop push mov gs adc pusha clc jbe or std (bad) (bad) (bad) out jbe xlat mov add mov sarl repz stos add (bad) (bad) fcomip jmp adc aaa scas inc mov xchg mov push lcall fbld rorl push movsl sbb cli pop (bad) cld xlat ja cli mov in xchg loop,pt sub inc js dec cs pop lods and movsl or (bad) jg pushl loop add cld xlat push adc sbb movsb xchg add incl adc dec pop std jecxz adc dec sbbl popf mov fucom fnstsw cmc cmp xor xor cli (bad) call lea cmp push test icebp pop loope and or (bad) (bad) (bad) cli sbb dec rolb lock in ljmp inc cmp pop int3 jp (bad) (bad) jmp idivb int3 (bad) dec pop mov gs sub jne push lds cmp (bad) dec iret aam ljmp sub cmovno dec inc daa hlt pop pop mov jne fwait je adc adc ljmp clc pushl sbb cmp insl and test pop js in add pop loopne inc sbb (bad) ljmp mov sub fistpl jle add movsl iret mov push mov (bad) dec mov insl out clc out sahf mov pop int push call daa adc or stos jmp icebp das clc jg pusha push inc pop (bad) push je mov outsb push and movsl inc mov (bad) out and insb lds fs ret rcll popa and hlt clc fdivr (bad) (bad) jmp je enter jne or lcall mov movsl cld aam imul (bad) dec in stos (bad) (bad) pushl es je cmp and jno mov mov push xchg cmp or clc sbb aad mov mov lea sbb mov test ret sub pushf pop jbe movsl test insl movsl (bad) mov lret push movb push (bad) jmp out pop fsubrp ds cmpsb add cmp xchg repz addr16 (bad) (bad) mov sbb xchg mov orl std int3 lret bound (bad) (bad) jg loop test pushf cmp xchg mov dec and jp dec in pop mov mov mov mov jbe ds xchg (bad) push (bad) (bad) fmulp loopne mov inc lcall add pop xor push repnz aas aaa push sti (bad) ljmp (bad) sub dec call mov out adc rorl (bad) (bad) (bad) pushl rorl push inc jle mov cmp ret mov dec fbstp decl dec (bad) repz jecxz outsb xchg mov cmpsb ljmp aad (bad) (bad) (bad) inc dec push cli gs jnp pop lea cmpl mov inc fsubp nop enter lcall mov mov fwait dec mov xor movsb stos xchg fsubl (bad) (bad) jg (bad) roll call pop push jl inc (bad) pop pusha inc (bad) xchg gs dec andl push (bad) (bad) cmp xor inc fcmovu jg mov mov aam mov pop lds dec int jmp cmp movsl or push fmul addr16 stos mov stc (bad) (bad) (bad) (bad) pushl loope mov push std inc mov xor fs dec scas lods mov fwait out test (bad) (bad) (bad) (bad) incl fild lods mov mov xchg adc push jecxz jae stos ja (bad) (bad) pushl cmpsl insb adc sub (bad) test cli stos loope aam push inc xchg and mov jmp xchg push push fdivr dec dec xchg imul (bad) mov (bad) stos or or mov jbe mov repz jecxz repz jne (bad) (bad) (bad) call jp push or and jmp das add int3 inc mov ss ljmp fwait (bad) (bad) (bad) call push insb movsl addl loop dec xchg mov cmp fistpll mov test fidivl sub into sbbb cld gs je jno (bad) (bad) jmp cmc push (bad) stos sub inc mov js cmc pop stos cs push ret xchg call adc lret or invd xchg adc xor cmp daa or jg mov and out hlt imul jg jg sbb fbstp test movsb xchg leave xchg jp int adc lret xorb es mov mov add sub fistp dec int mov (bad) (bad) (bad) pushl jo pop add outsb xchg mov mov icebp sub mov lcall scas scas mov (bad) into repz dec sub popf mov jae jl lds lock (bad) incl int and test ds ret pop clc mov je (bad) sbb call (bad) (bad) lcall pop rorl add mov or notl cmp insb dec and repnz jge pop sub (bad) (bad) decl sub jbe jl lds mov cmp stos in es xor mov inc call cli mov cmp inc jno cmp and (bad) call jne sub ret add and sbb xor cli icebp push inc pop mov push (bad) pop dec mov insl jle inc add psrlq pop into lods ds cmc mov push adc jb lock (bad) (bad) (bad) inc xchg mov daa orb bound leave outsb inc xor push push sub cmp push rclb rcll xchg sahf (bad) (bad) (bad) jmp push xor sbb clc fild sbb mov push shlb xchg lret rcl (bad) (bad) inc xchg mov out out adc xor pop ffree mov outsb (bad) jg int adc sbb push adc sub shll or fisttp call sbb mov adc (bad) (bad) pushl or sub or je pop rorl inc cmp and je (bad) (bad) (bad) push jns popa (bad) adc test jl mov and aad inc lcall push jmp das (bad) push cmpsb cmpsb jae sti (bad) outsl dec es test fs (bad) (bad) mov stos jp cmp xor cmp push pushf addl pop mov shlb jnp mov xchg mov testl ret push adc mul fisttp ljmp push cmpl (bad) (bad) (bad) jns xchg sbb mov out loopne data16 fwait (bad) xor cmp lds (bad) call out adc pop jecxz jp testl out sub push lds adc fistp scas fbld dec psubd mov jmp lock aas xor mov pop (bad) (bad) (bad) lcall mov mov push xor fcomi cmpl push repz in add mov ret loop stos (bad) (bad) mov shrb scas (bad) pop mov sbb sub aaa movsb mov lret pop outsb addr16 adc and insl decl call lea or xchg cmp pop push mov push (bad) pushl cld incl add adc push xorb dec imul add jno (bad) (bad) (bad) incl js push (bad) movsb push and outsb inc jae pop shl sbb mov nop (bad) (bad) (bad) pushl sbb xor adc fwait imul leave setbe jb (bad) (bad) incl sub jne pop mov test sub add aam dec cmp test (bad) jg sbb sbb push (bad) outsb pop fstp sbb fisubr push lods xor sub lcall idivl cmp lcall jecxz mov ss (bad) (bad) (bad) ljmp ss addr16 out lods sub jle jg sbb inc rcll and jno push ljmp aas mov in jmp js int mov jle (bad) (bad) mov xor push inc rorl sub cld pop dec dec cmp sbb (bad) pushl sub inc push imulb xor xchg inc mov outsb add stos lea lods adc or xchg inc pop ljmp sbb icebp incl fidivr inc jle xchg pop sbb iret push jge (bad) (bad) call adc and mov loope inc mov ja divl jbe (bad) ljmp rorb jo mov mov in lret fucomi addr16 clc sbb pop call dec and sarb pop and pop jns add jbe ret push inc call xchg std hlt and aaa push imul ds (bad) lcall dec popf pop popa or jle pop scas sub sub cld or lret (bad) ljmp xchg cmp sbb das pop mov fist pop jnp pop mov jg lods dec repz mov enter (bad) (bad) (bad) out ds push or outsl (bad) hlt ljmp xchg cmp lods ds push jle fs pop xor xlat pop test aam xor cs inc fldt lea (bad) loop dec add pop idivl gs mov mov cmp cmpsb hlt jne ss mov cs jg mov fwait xchg xchg cmp xchg sub mov cmp stos fs aas adc ds sbb mov (bad) pushl lahf (bad) (bad) mov popa popf out adc notl addb js outsb inc (bad) (bad) (bad) (bad) jmp dec xor outsl in add inc ds xor push shrb lds inc adc or pushl inc dec push (bad) aas push cmp fdivrp (bad) (bad) ljmp je arpl jno jecxz je add mov cwtl inc loope dec sti add das sbb std (bad) (bad) cmp fnstenv cwtl mov mov std inc ret pop std (bad) (bad) lcall sub mov in dec adc cld fsts mov (bad) pushl out pop lea sbb lock push or insb adc cld (bad) (bad) (bad) cmp enter rcr mov sbbb xchg ja pusha push adc aam (bad) incl lret cmpsl mov pop pusha and pusha inc in lahf test scas lods fucomip pop (bad) (bad) (bad) incl out rolb aad lods xchg movsb mov in movsl imul pushf clc jle sub addr16 cmpsb leave jmp jo aam daa jnp dec or xchg adc cltd into in (bad) cmp ds dec add adc mov mov lahf jnp fwait add push xchg pusha sub lock mov (bad) (bad) (bad) incl pusha insl call and test fdivrs les (bad) jle sub (bad) (bad) (bad) jmp mov adc (bad) arpl inc or dec out or or dec (bad) (bad) (bad) dec adc cs shrb pop test je cmp mov hlt (bad) (bad) call stc mov pop xor xchg xchg cmp or pop nop and ds scas fildll aad (bad) pop ja xchg hlt and xchg mov fs (bad) (bad) call xchg mov pusha inc int cmp xchg daa sub xchg stos inc push cltd ds jo inc or lcall call pop push add mov jo lods push xor mov aad ljmp xchg loop sub (bad) (bad) mov or push and das std inc pop mov mov ds (bad) call inc pop fmull xchg sbb pop push femms leave and sub adc xchg push add push loop and mov icebp das xchg mov push xor bound scas and ljmp mov adc mov mov dec xchg jbe jae jmp mov (bad) (bad) (bad) jmp xchg mov push add mov and jns loope dec xor dec xor push xchg jno pushf imul or pushl mov loop push lea mov mov mov pop jo (bad) sub cmp or (bad) (bad) fnsave xchg in or add push sub out jmp (bad) ss fbld cmp lret insl pop sub pop (bad) (bad) (bad) jmp or inc xor and shlb jp sarl ds (bad) mov sbb stc adc inc movsl fbld xor ljmp add fmull test pop pop jae (bad) (bad) jmp fsubs jb pop push call add lods ljmp fucompp mov sub xor jg cmp or out ds mov popf in sarb (bad) fcomip jg inc mov repz arpl push mov cmp jmp jmp mov leave push pop mov cmp negl pop adc std xor insb rolb add lcall fcomp mov sbb jno cmpsb fisttp es mov (bad) jmp mov cs fisubr in daa popf mov push dec mov push push sub mov mov push push loopne data16 int inc (bad) fnop lcall mov imul rclb push in cmp (bad) lret movsb push int3 fcomip jmp mov cmpsl inc mov test xor (bad) (bad) clc out es ret loope and lock sbb adc test je inc jmp fcmovnu sub fdivrs ss add ja std (bad) (bad) push fidiv imul and leave add push mov test mov (bad) pushl xchg outsb cwtl aam stos jb jno inc mov jmp in adc sarl cmp cmp into stos sbb mov cmp add ss test add (bad) (bad) (bad) call jns nop cmp stc mov dec imul jbe inc jb shl inc (bad) and mov lock (bad) push lods aad test arpl cmp xchg dec mov inc sbb cmpsl int push cmp (bad) call mov mov gs cs adc (bad) loope pushl cld (bad) (bad) mov xchg sub in sub cmpsl xchg xchg scas int lea xchg (bad) (bad) (bad) cli sub sub add pop mov cmpsl push shrb clc xchg pop dec orl (bad) (bad) (bad) (bad) mov adc out lods jmp aaa push adc insl test jb xlat gs jmp in push cwtl sub mov sub xlat addr16 cmp sar in jl adc jo stos ss add mov push inc mov movsb push pop jae (bad) (bad) (bad) jmp frstor inc push mov pop mov js aas xchg test cmp sar repz (bad) (bad) incl jge xchg xor add nop adc fs cmp loope adc ds (bad) dec dec add xchg add (bad) (bad) (bad) cmp lret lds mov add dec fldenv xchg adc or (bad) call mov je push pop sub popa cld movsb mov rcl inc cmp pop (bad) incl cld sahf add mov aas push repz or dec adc sub pop lock jle lods in mov faddl shlb inc aaa dec clc (bad) mov push cld and push loop (bad) test cmp ljmp sarl imul sub test mov lea ds psrad pop mov sets xor (bad) (bad) (bad) call sub sbb ret imul icebp gs in adc mov call mov je int3 cmp mov sbb fwait dec mov sub fstpt insl pop mov sbb emms ficomp push add mov push push adc rolb mov lcall dec loope out inc (bad) dec lahf repz test (bad) mov pop mov (bad) ljmp cmc out pop repz in divb adc push pop mov pop push (bad) (bad) (bad) (bad) inc cmpb ret (bad) dec mov sub xor xchg (bad) jb mov inc cld lcall (bad) test cmp lret sub pop aad roll xlat test les add mov sub dec test push scas pop lds decl insb pushf popa pop pusha out clc jp xchg daa je mov call (bad) call push fdivrs pop pusha jl push cli push pop pop and (bad) out hlt ret (bad) cltd cmp (bad) lcall push daa int3 xor pop out xor ss jae leave ljmp rcrb mov aas and lds std xchg in fadds hlt cmp pop mov sub jbe cwtl gs or ret aaa mov mov mov add dec xor (bad) (bad) call mov (bad) hlt data16 inc std shlb sub mov jae in (bad) std pop sub test xor inc shrb ljmp cmpsl and or andl in mov push movsl cmpsl jg scas xchg cmc lcall mov roll ret push movsl movsb ds lock daa (bad) (bad) (bad) pushl adc imul xor mov or jl adc dec xchg sub push add mov ret sti pop (bad) out xor mov inc ret (bad) decl xchg xchg inc lods rclb ja dec shll xchg xor xchg push shlb insb sbb and or push mov cld ds pop test mov xchg pop repnz sbb stos mov lods lret or je mov pop fcmovu or call incl pop push aad (bad) cmpsl call push mov (bad) (bad) (bad) pushl adc mov and (bad) mov sar ret cmp in jecxz (bad) ss sar (bad) mov inc cld movsl in dec int out push sub aas (bad) sub mov stc sti (bad) cld dec dec icebp int mov jle repnz (bad) mov (bad) (bad) mov icebp adc cmp cld lcall mov (bad) cmp stos movsb sbb (bad) ljmp je xor cmp mov cmc or es add test and les (bad) (bad) call cmc jo es ss fcmovnbe inc xchg mov xor mov sbb ja add push jnp jno (bad) (bad) call (bad) xlat arpl lea mov pop test or pop fisubr (bad) mov loop fsubrp ljmp jecxz inc and (bad) dec out jmp or (bad) call mov push dec test fildl mov inc test dec nop clc sbb mov ds (bad) (bad) incl cmp xchg (bad) pushf cs cmp xchg push adc mov xlat enter add jno,pn sar (bad) ljmp jl push ljmp sbb mov add in fistpll iret lcall jl in fwait mov add jmp sub push mov test sbb (bad) adc push pop push cmp das idiv (bad) (bad) call movsb xchg shrl adc loopne pop xchg pop pop jno xor and (bad) add bnd shl arpl (bad) jmp clc jge ds jb in lea (bad) (bad) incl je jae test jbe sarl inc push cli nop mov enter (bad) ljmp sub inc gs xlat pusha mov loop movsl addr16 sub jmp fisttpll icebp mov push jo sub enter push cltd push ja (bad) inc rep repnz xchg (bad) or lcall sbb dec mov (bad) push xor adc push fdivr (bad) ljmp mov adc mov adc push ret cmp or test (bad) (bad) call daa xchg lods mov (bad) push jbe in outsb ljmp xor xchg sar inc xchg mov xor sbb clc sub cmp (bad) (bad) jns sahf cmpsb jl repnz stc mov jne lock outsl (bad) ror aad jl mov mov insl loop mov add fsubrs xchg jo dec inc pop inc lahf jp mov (bad) (bad) inc or dec rcll sbb or xor add dec mov (bad) (bad) lcall inc and or loop mov fnsave test popf cmp and (bad) jg inc loopne,pt shrl push into rcrb in (bad) (bad) (bad) decl jge inc pop sbb jle cmp push in dec add xchg cmpsb das call call pusha cmp rorl int3 jae mov call mov mov mov (bad) lcall insl cmp adc in xor aad hlt (bad) (bad) mov inc add inc sbb xchg arpl gs jp shlb push (bad) pushl xor pusha fst shrl fwait xchg sbb jne adc ja movb ds or (bad) push (bad) lret int (bad) (bad) incl inc les rcll (bad) mov pusha xor pop cmp int and add out fptan int3 ret jg loopne jp add enter cld (bad) (bad) (bad) call ja (bad) cmc int3 and cmp or add inc aaa mov cld adc inc inc sti (bad) (bad) pushl popw gs cmpsb aas or and (bad) xchg push (bad) out or and lods ja (bad) (bad) (bad) mov aas jae pop rol dec mov mov push adc mov hlt mov mov sahf push xor mov mov xor lock call (bad) mov nop cmp dec or mov push fistpll xchg adc push leave mov pusha pop (bad) fcomip incl loop mov lock sub insb mov or ja hlt inc js (bad) ljmp mov dec push bound popf pusha xor (bad) pushl pop push jae xchg mov loopne out imul loope (bad) (bad) (bad) call sbb roll cwtl add lret sbb mov int jmp (bad) (bad) (bad) jmp fs fstps (bad) mov pop sbbb inc cld cmp cmpsl loope jmp push mov cli or (bad) (bad) jmp lahf or push flds mov fdivp or push rolb std lcall and sub xorb jge mov mov aad sub in mov xor rcr push out pop sbb nop lods dec push lahf mov mov xlat ljmp jb cmp (bad) cli packuswb loope imul mov adc movsb mov mov incl mov clc sub out ror xlat jmp or cmp lahf jle je cmp mov or (bad) (bad) (bad) jmp xchg mov mov aam call insb xchg dec pop leave mov icebp mov jp mov sub push (bad) (bad) (bad) jmp jne and fcomip pusha int jnp cmove fnstcw add stc xchg and (bad) (bad) (bad) (bad) in jl dec lods insl popa sbb adc and pop add or inc stos xor incl pop lods in out clc std out push sub int lods cmp sahf (bad) (bad) (bad) dec cwtl out leave sub cmpl es pop clc loopne (bad) add and out pusha in shr out out incl sbb cmp (bad) (bad) mov lock jge inc push loope sub mov adcb pop andb (bad) (bad) (bad) mov sub outsb mov sub and mov scas adc call add test negl jne mov xchg and (bad) (bad) (bad) jmp xchg and test and push sbb (bad) xor mov and insb popa (bad) les cltd (bad) (bad) (bad) incl rol mov ljmp cld es xchg xchg jmp mov (bad) (bad) or daa xor mov ds mov jp and dec cwtl and push (bad) (bad) (bad) (bad) cmp dec movsb enter daa adc inc jg add clc mov adc scas sbb jp (bad) (bad) incl jg in loope sahf aad repnz jo and xor in sbb rorb push (bad) cmp inc into or imul mov adc (bad) (bad) mov shrb repz xor mov push xchg nop inc mov rcr sub fidivr lock (bad) (bad) fistpll cwtl push push add mov lret mov fsubl cmp adc icebp ljmp jge cltd mov ret add inc add cmpsl push push lcall cmp fldt pop cmp outsl test or loope xor dec mov sub sub inc int3 dec pusha adc out and cld lods mov xchg mov sbb (bad) (bad) jmp rcrl in ret jno xchg xchg ss shlb scas mov xchg jle mov xchg ds addr16 pop gs mov mov out aam (bad) (bad) (bad) ljmp inc pop (bad) add push subl je xchg xor daa sub (bad) (bad) (bad) cli and pop adc mov mov jmp cmp inc cmp (bad) (bad) (bad) lcall test push fsin in rorb das jg jecxz imul dec (bad) (bad) (bad) ljmp test mov inc (bad) xor inc add popf sbb sahf pop fst mov add (bad) dec test jle push rcr ds (bad) or mov fwait xchg jmp (bad) (bad) movsl repnz sbb (bad) (bad) (bad) incl add jl cmp pop sti push or pushf int3 fildll sub aas int3 ja enter add sbb lcall and cli (bad) mov jle dec mov (bad) pop sub jp (bad) scas fsubrl xor insb out push rorl call loop enter cmp xchg inc cld nop sub sub ljmp aaa std (bad) mov jo xchg mov push inc dec and mov add lcall mov bound mov (bad) call pop int3 cmpsb adc adc insb idivb pop dec loop mov out cmp testl inc cmp jg jae,pt xchg pop xchg bound addr16 aaa add call cli (bad) (bad) mov (bad) (bad) incl iret fcom push insb outsl add insb push cmpl or jg movsl jno (bad) (bad) (bad) decl add pop push pop sbb bound fiadd xchg dec mov lahf fsubrl lcall xor mov cmpsb repnz (bad) xor or pop lds jmp dec and ds (bad) (bad) ljmp incl mov mov iret mov xchg xor jns pop sub insl (bad) jg add shrb mov pop test xor cs (bad) (bad) lcall pop lods push test xchg push fnsave add imul push les (bad) call xor outsl daa inc sbb fidivrl (bad) ljmp mov pop and xchg cmpsl or cmp jmp jl sar ljmp sub mov jo add pusha xchg cli cld mov lea call lret push stc (bad) (bad) scas ljmp adc mov dec (bad) (bad) (bad) pushl nop sahf inc sbb in jecxz lret test sbb add (bad) and (bad) mov rcll loop int dec push ss mov (bad) stos idiv (bad) (bad) (bad) fnsave out fiaddl insb incl pop (bad) das stos dec mov xchg ret mov (bad) lcall adc push hlt xor cmp and add mov xchg fbld xchg pop cli incl and and out jl,pt (bad) (bad) jg xor loopne push das ja fcoml test in daa lcall xchg mov decl inc loop fsts scas rcl xor mov and cmp insb (bad) (bad) (bad) incl sbb dec mov cmpsb add lcall call ljmp and sbb dec cmp mov sub sahf dec push cmp jnp mov push ret (bad) (bad) jmp push adc inc push jg add dec test mov sbbb (bad) fstpt mov push push inc (bad) out (bad) lret fiadd outsl or cld hlt in mov (bad) decl xor loopne push mov cmp and mov push and jo add in mov mov mov loop pop ss movb and (bad) (bad) (bad) mov call sbb shrl inc movsb dec xchg hlt dec inc or (bad) (bad) (bad) (bad) mov rolb cmp ljmp jg cld push aas pop and popa jo pop std (bad) jp bound push add inc inc sarb mov (bad) (bad) jmp test dec les sbb push sbb out mov dec or xchg (bad) incl lock stos pop lods test cmc cmp es shl aas xor (bad) (bad) aas xor mov jno popa leave leave into mov aad insl cmp inc sub jmp (bad) fbstp sub loop jp daa loopew xchg les (bad) (bad) (bad) cmp sub mov ss xor imull pusha insl mov call sub mov mov xchg imul push sar popa ds and sub outsl push ret (bad) ljmp mov shll (bad) lock and mov aas out aam imul mov mov xchg repz loop mov xchg xor mov push xor ja and repnz add add cmp (bad) ljmp sti jo roll and sub xchg push cli mov inc pop cld push fcomip inc (bad) (bad) (bad) jmp fadds imul xchg pop lods data16 das push icebp (bad) push loope (bad) (bad) (bad) jl add out stos sbb out hlt mov (bad) cltd and (bad) push or (bad) cmp shrb and aad jae idivb es dec (bad) (bad) (bad) mov lcall xlat xor add std fistp push lock pop insl stos je (bad) (bad) inc aaa arpl mov mov ret mov sub xchg syscall cmp fisub call cmp stos and fs cmp mov lods xor (bad) jg lods insl xchg rcr dec enter push inc xor clc pop (bad) (bad) (bad) lcall or ja lahf addr16 stos ret out cmp add mov cmc xor je idiv adc (bad) (bad) decl pop cmp pop xor add scas aad sub cmpsl subl add jne hlt xchg jle cmp push gs scas inc ds in iret push mov loop (bad) (bad) inc mov push enter mov xchg (bad) (bad) (bad) mov lret ja mov test mov cmp cmp (bad) (bad) pushl and xor pop cmp arpl call dec cld and (bad) (bad) (bad) lcall sub test mov cld insl mov cli insb fistp icebp mov (bad) call xor inc int3 and in imul pop ds push rolb xchg mov call in xchg xor sub (bad) (bad) pushl in mov ja cmp pop cmp imul fistpll cmp (bad) jmp dec idivb fisttpll add rcrl rcll call fiaddl pusha mov (bad) mov test lret js lcall inc ret out xor (bad) (bad) (bad) jmp inc pop loop push (bad) js add cld pop add loop rol (bad) (bad) (bad) (bad) (bad) fnsave cmp adc cmp mov push cmpsb mov add cmp or jle aad sti ds add dec cld jne mov sahf jge pop dec push cwtl loopne call or xchg popl lret int3 (bad) (bad) (bad) (bad) cli pop push test inc lret fimul mov je mov std xchg mov xchg inc mov (bad) (bad) (bad) jmp pusha loop sub and mov push pop fiadd pop xorl adc (bad) (bad) jmp xchg add mov pop adc stos lock add push push shrl xor xor xchg fwait enter inc cli cld jl in push mov inc (bad) (bad) std mov scas mov icebp ja (bad) (bad) (bad) lcall mov push sub inc ljmp inc (bad) xchg push (bad) hlt pop cmpsl (bad) (bad) mov adc push cmp les cmc in (bad) add sbb (bad) (bad) (bad) mov movsb test add roll mov cltd into mov js mov cs sub jns pop fs adc mov (bad) (bad) dec (bad) iret test dec (bad) es shlb xlat push test lds jmp in clc cmp sub mov (bad) (bad) jge movsb sbb cld cwtl cs push sbb ja call ds sti mov sub lock clc jo sti mov popf mov (bad) dec ret (bad) enter call push out fmull aam sub jbe out clc (bad) call std xchg or adc cld mov push aas add nop add (bad) (bad) fisttp rorb imul mov int mov (bad) xor (bad) ljmp sbb loopne mov add inc adc xlat cmp data16 ficoml jg (bad) (bad) ljmp xchg les popf in inc push lea lahf adc add inc int cmp mov mov inc push movsb je cmp or adc xor xchg jp sbb jnp mov (bad) jmp das test and addr16 fnstenv fildll int3 lods outsb lods (bad) lcall (bad) pop xor cld cmp repnz mov sbb pop out cwtl cwtl loope arpl clc (bad) jmp inc xlat jle xchg jne pop mov mov or sarl call push mov mov (bad) mov push sbbl movsb in (bad) fs jge fwait xchg lret jae mov jns xchg loopne sub and or jno adc add (bad) and inc (bad) ficom imul sti lcall scas out sbb shrl test xchg repz (bad) (bad) (bad) jg xchg pop into or push adc lods out push data16 nop mov jae sub (bad) (bad) jmp lock jno arpl in out mov push ss or cmp pop (bad) std ds inc insb and incb mov notb xor sti pop (bad) call fidivrl arpl push cmpsb pop dec jg cmp mov subl mov cwtl add iret (bad) call outsl add push dec fwait sub xchg pop push int dec (bad) and jmp pop lahf cmpsl insb xor (bad) (bad) clc mov movsb or pop push outsl repz push mov mov leave aam mov insl out nop movsl and cmp aaa (bad) (bad) call jo push dec cmp pusha mov bound mov (bad) (bad) incl push pop fwait aaa sbb mov mov sarb cmpb aam dec mov add (bad) (bad) fisubr (bad) movsb pop hlt fildll inc outsl sbb movsb inc sbb and in lcall mov pop adc ficom push add sbb (bad) (bad) jg loope push jnp in xor test xor pop push incw mov xlat icebp inc fild or mov inc add push es (bad) (bad) (bad) pushl test push aas mov shrd pop pop inc addr16 and cltd stos ljmp (bad) mov jb mov (bad) (bad) mov jo sbb (bad) lcall mov imul faddl mov jae call lahf sar call dec inc sub pusha shl cmpsl inc mov mov fildll pop call sbb cmpl daa mov repz ret (bad) lcall mov lret dec (bad) jecxz int jmp ja incl xchg lea fs push sbb pop andl (bad) decl mov stc leave out jb inc and sub out jp sub mov mov lods sbb xchg stos hlt rorl lcall pusha je dec je ja gs nop sbb pop movsb cmc xchg jl,pt jle xor dec cmp (bad) out sbb rolb lds adc aaa pop xor pop sub adc xchg and call gs loopne mov inc sarb (bad) (bad) (bad) incl enter mov scas pusha popf cmp ret sub js dec out cmpsb in inc data16 (bad) (bad) (bad) call pop test adc jl cmpsb je adc out (bad) imul cmp pop leave and dec add xor adc sub mov ljmp (bad) cs add sbb fwait adc dec or pop pusha inc mov mov aad jns pushl mov xlat (bad) (bad) sub mov enter sahf adc mov ds mov xchg int3 stc movsl js cmp addl call test pop dec push sub cmp xor (bad) cmp xchg and or cltd push xor (bad) jg sub sub push push cmp cmp (bad) lcall or mov pop incl push das add outsl or lcall cmp ret clc (bad) (bad) out insb mov (bad) jmp sub adc (bad) jmp adc mov pop nop fmull fbstp ljmp (bad) (bad) ljmp lock stos jl rcrb out xchg cmpsb (bad) mov xor sub (bad) (bad) push cltd lret es inc and sub or lods fnop xorb fsub loop pop std (bad) decl ror push adc fldl jmp cmp mov sub idivb (bad) (bad) (bad) jmp inc add fmull or mov cmpsb cmp dec fld pop leave cmp and sbb (bad) pushl dec imul jle test mov mov mov inc dec out fidivrl (bad) jg rclb js xchg and (bad) (bad) (bad) call cmp add cmp out loope and (bad) (bad) (bad) decl out mov out hlt dec leave shlb or cmp lret je int push ljmp (bad) mov test xor cmpsl cwtl cmpsl mov dec or addr16 sar mov push xchg dec push leave pop outsl (bad) sub cmp jbe pop jp sahf outsl mov rcll (bad) call or sbb stos jg movsb mov inc jecxz mov mov in (bad) pushf out sbb (bad) (bad) fbld les jmp call ljmp cwtl add in mov js,pt outsb pusha bound (bad) (bad) lcall (bad) dec cmp cs das pop mov jne add aas outsb mov jbe scas clc pop sbbb int3 shr xorb data16 (bad) inc or push (bad) jne sub scas mov mov mov enter lods (bad) (bad) jg cmpsl roll cwtl jb push push adc mov and sbb and (bad) (bad) fsubrl rcrb sub mov fs std pop xchg fild sbb clc in push sahf inc (bad) (bad) (bad) call pusha fnstcw shrb mov fwait xchg mov push jmp and jns xor scas mov aaa lods mov xchg pop sar adc (bad) (bad) incl sub mov test push pushl mov add divb mov test push mov fistpll xchg (bad) (bad) jmp jle popf in out out push out (bad) fisttp xor push dec dec jmp (bad) (bad) (bad) (bad) cmp fldcw pop (bad) jo test and outsb mov mov push and jmp es sbb mov xor pushf dec in sarl rcrl ljmp push out xor je adc aam movl stos (bad) (bad) (bad) (bad) in adc bound push jnp lods nop pop mov mov aad push and dec lods in sbb inc bound (bad) (bad) (bad) (bad) jnp in push lahf imul jl pop jns mov jmpw xor push data16 (bad) (bad) (bad) (bad) call push and out inc test (bad) js cmp scas ja int3 (bad) (bad) (bad) (bad) fistl jge insb jno pusha pop dec mov das stos mov fadds jb aaa add data16 (bad) (bad) (bad) (bad) sbb ret leave je popa add js pop sbb mov jg sahf insl aad cmp lahf out sbb adc and pusha cli ret lret nop hlt sbb and sub and adc fildl mov or sbb (bad) ljmp mov jae out ror rorl notb xor inc xor clc (bad) ljmp jo scas mov pop sti repz jne push jmp mov adc (bad) mov fiaddl mov mov pop icebp aaa mov sub cltd push add push lds (bad) (bad) jmp test sub push mov andb pop add jge sarl (bad) (bad) (bad) (bad) ds jl das push pop scas aaa andb not andl std jns sbb (bad) push jle jp mov push decl mov (bad) mov cltd arpl shrb push (bad) cmp (bad) lcall fistl test mov xchg aad push stos (bad) (bad) (bad) ljmp jne mov mov cmp dec je xchg (bad) mov and out cli mov xchg xchg xchg cmpsb lret xor testb into leave jbe inc inc aad xor mov or xchg xchg leave or mov insl cmp lds loopne and movaps (bad) jge pop inc popf sbb or es (bad) lcall pop inc sub pusha dec fdivr cli call fcmovne jge pop push xchg (bad) mov lret dec das push pushf fcomip jg or aad lock mov adc cld dec add mov scas ds (bad) push mov jle out inc call or imul or cmp decl (bad) outsb jecxz aas lahf lcall cmp dec sub fs fcomps ja clc and aaa enter xchg mov out ret or adc sbb (bad) or sti sahf sahf xchg sar and fldl jno insl sbb int3 in lahf (bad) (bad) (bad) ljmp jo inc icebp cmpsb and (bad) scas jmp (bad) mov xlat xchg and stos mov fwait mov insl xchg sbb mov popa fwait pop (bad) xchg (bad) loop adc stos dec mov arpl (bad) pop icebp decl pop dec and xchg mov mov sbb xchg adc pop (bad) jg dec mov repnz mov add sbb dec cmp (bad) (bad) ljmp jns mov push push mov (bad) fcomp or inc mul jg inc mov out xchg loop mov pop mov add (bad) mov out rcll sbb mov stos jecxz (bad) call dec es dec fwait pushf sbb in cmp mov push sub mov enter sub lcall lea cmp stos (bad) decb (bad) inc lods mov (bad) (bad) fsubl test int adc fst repz (bad) incl sarb xchg mov mov cmpsb (bad) mov or push mov lock es icebp push inc cs ds stos mov enter incl int cs loop adc xchg jp xchg xchg jmp xchg mov incl repnz repnz in push cli jle js and sbb sti push hlt (bad) (bad) jle std xchg lret xchg scas lock and out pop push pusha mov pop test ds or pop add fildll ds scas mov aad mov (bad) (bad) incl push (bad) imul and push imul fcmovu xor out mov fisubrl dec pop (bad) (bad) (bad) jmp call lcall mov push shll dec sbb mov jmp push out xor inc int3 sub out push cmp sarl xor loopne cld das xor mov lods sbb or cmp or xchg or jne inc cmp (bad) call pushf sarb fcomi in add adc subl ret inc mov (bad) (bad) jmp cmpsl lods mov fmul insl cs jbe fstps add sbb (bad) mov adc cmpsl lds addl outsb (bad) insb ret pop cli (bad) (bad) (bad) cmp jo and mul fcompl ret cwtl and inc add lret into das clc cs mov sbb or xor icebp xchg mov pop push add (bad) (bad) (bad) pushl adcl sbb dec ja mov push add xchg (bad) xchg test outsb cld jno test xchg (bad) (bad) (bad) ljmp (bad) repnz ret test adc push xorb or mov adc (bad) mov and jo int (bad) mov dec mov and jl rorb and ficoml (bad) enter (bad) lcall sub call jne inc push xor sti fs mov xor sub mov dec cs ds out clc push repnz cmp (bad) cltd lods or iret ds push inc shrb mov aam push aam fs mov and or pushl adc sti inc dec (bad) mov pop (bad) or mov fcompl jl push clc xchg inc es addr16 cmpsl notb (bad) (bad) (bad) incl dec lods clc inc mov pop cmp movl pop gs popa es out sbb (bad) (bad) jmp push inc ja adc push sub mov outsb (bad) adc cs pop add test mov (bad) jg call and out sub lret or xchg dec mov sbbb jmp cld imul and popa xchg bswap ret inc mov mov ljmp ds scas dec fs or add sub jecxz sbb ds and inc ds rcrb cld aam push pushl pop xor and pop mov push dec push mov data16 movsl inc das clc (bad) incl (bad) mov add cs adc push cli mov inc ss repz (bad) (bad) decl inc cwtl addr16 movsl daa push inc inc push aaa es and pop xchg sbb sbb xor insl ret (bad) and adc xor incl jle outsl push rcl xchg stos js adc or cwtl jmp cmp pushl (bad) or out mull sbb rcll sub xchg insb jnp fistpl pushf (bad) mov (bad) (bad) (bad) lcall (bad) cmp pushf sbb jl pop sub inc pop idivl (bad) (bad) (bad) (bad) cli jbe jae test rolb mov xchg or mov xchg imulb es (bad) icebp (bad) in xor movsb std call (bad) (bad) (bad) lcall xchg leave popf xchg dec jge cltd xchg icebp arpl push and loop sbb test mov push (bad) cmp (bad) (bad) pushl dec mov lahf cmp loop inc xor xor outsb and jnp sbb dec (bad) (bad) (bad) ljmp lea dec cmc aaa add mov lcall adc sub xor lods mov xchg and mov cli push mov testb por lret jmp sahf fs les (bad) (bad) fdivl and cmp cltd out scas jo rclb ds jns fsubr (bad) (bad) incl lea or mov test sub (bad) (bad) (bad) mov aas jo out jle (bad) fsin mov mov int mov scas scas (bad) (bad) (bad) decl mov mov rcrl insb clc stos (bad) dec out dec push pop dec jmpw adc (bad) (bad) (bad) call imul test outsb bound jecxz sbb loop pusha dec in push into dec dec pop mov (bad) inc adc mov jbe stos out xchg push xor stc jle incl jmp faddl fdivrs push cld mov ficompl pop xorb pop push xchg lcall and mov (bad) mov (bad) in lret cmp push jno and lcall std ljmp mov inc test (bad) out lods (bad) (bad) ljmp sub xchg push pop cwtl inc out ljmp insl jge rorl loop imul frstor mov push xchg add lret iret sti dec pop in movsb xor xor jecxz pushl adc in (bad) or js pop leave sbb sub mov xchg cmp (bad) (bad) jmp fimul mov stos xchg cmpsl or xlat pop sahf push jmp add leave sub decl ds gs fildll mov jb xor cli decl dec inc cmp aad or xchg push imul mov pop mov dec out (bad) (bad) (bad) mov dec fcoms mov in or das lret mov xchg push cmpl (bad) (bad) (bad) (bad) jl sub lock lea ss mov movsl fmuls xchg hlt mov xchg std jg ret (bad) (bad) (bad) dec imul repz idivl nop fbld jg ss cmp jbe,pn (bad) (bad) (bad) jmp jle adc int3 icebp leave pop jbe sub pop xchg repz loopne (bad) (bad) lcall mov or add xchg in dec stos or xorl mov push cmp ljmp or stos dec loope pop pop mov icebp cmp cmp pusha fs fildll (bad) (bad) (bad) pushl push add jl das xor jp mov nop pusha aaa or leave xchg jp push pop and push std (bad) decl mov push inc lret jnp adc insl cmp (bad) (bad) (bad) (bad) in jmp sbb sbb pop dec fisubr push push adc mov dec xchg les pop aad mov cmp pop lods adc pop add (bad) push sub loope lret incl add pop stc fisttpll orb call negl (bad) call mov and jp pop (bad) push push test or sub dec xchg es cs (bad) out or mov sti sbb scas xor (bad) (bad) (bad) call shrb mov jge sbb jge outsb add rorb push sti inc (bad) out clc (bad) jg jp out cmpl gs adc test (bad) jmp icebp sbb jb fs mov sub je dec mov sub shr icebp jmp sti jge in pop scas ds idiv mov fildl cwtl or inc sahf jle (bad) sub rclb jb sub lock inc movsl ds out (bad) jecxz (bad) jp (bad) pushl mov sub xchg rcrb mov out mov stos nop inc mov stos adc mov mov aaa clc jnp xchg sub sbb (bad) call or sub test sub pop jns pop aad mov sbb or pop mov dec pop cmp jmp in mov subl arpl or jnp sahf cmp dec je pop inc nop lock jge (bad) (bad) (bad) (bad) sti jne or mov inc and pop cmpb xchg (bad) (bad) (bad) call test sub mov push push sahf dec iret cltd pop xor dec pop daa arpl cmp (bad) (bad) (bad) (bad) (bad) mov xchg std or enter add jg out xor div cmp fwait cli (bad) (bad) (bad) (bad) jns sub lea dec jg les cmpsl int leave int scas cmp in xchg fwait jmp mov daa sti repnz pop mov movsl in ljmp cli (bad) (bad) call stos lret xor lcall aaa lahf loopne repnz mov mov push adcl cmp lds in pop sub jle add (bad) (bad) (bad) cmp adc xorb rclb int incb fs cltd cmpsl xor stos aam add jle dec sbb mov aas sbb and (bad) pushl jmp adc test repz push dec mov test (bad) (bad) (bad) (bad) mov mov repnz ret mov mov add nop or sub loopne jmp test sti mov push (bad) mov mov mov pusha fdivl (bad) or inc ljmp add lea test sub sarb cmp (bad) ljmp mov loopne inc movsl mov xchg or fmulp pop jmp bound xchg and loopne pop jno (bad) ljmp nop inc jle or inc dec orb jmp sub in jl enter add adc (bad) (bad) pushl mov sarb test push mov inc pop adc insb or scas (bad) cmp and xchg xchg lret insb and (bad) (bad) (bad) (bad) ljmp xchg cmp insb leave push mov jbe repz test (bad) (bad) negb (bad) decl adc jo mov push les sahf mov lahf dec cmp fnstenv push ja sti mov jmp push cmp cmp mov xchg in lods (bad) in pop pop pslld (bad) mov lcall arpl lret jns mov sub dec jmp int adc hlt sub scas (bad) jge (bad) (bad) (bad) dec or mov wbinvd push jle dec xor sbb sub out cli mov sti sub cli mov (bad) ljmp jle repz loopne (bad) pop mov cmp sti fwait mov jbe lcall (bad) cmpsb mov xchg mov bound rcll (bad) fcomip decl dec add pop jg jg add sub and cli and mov mov (bad) (bad) (bad) inc cli add leave repnz int3 aaa subl dec fimul add mov or (bad) mov (bad) lret (bad) (bad) mov aaa cmp iret fadds aam hlt jecxz add les std sub stc (bad) (bad) (bad) (bad) out ja inc push jo jp push xchg lahf cmpsl pop mov add xor mov pushf test xchg cmp add xchg mov (bad) nop notb (bad) (bad) (bad) cmp adcb or pop jb pop xchg or in in mov loopne xchg aam notb dec out (bad) fwait lahf jp mov ret (bad) decl add mov fwait push mov xchg xor movsb push iret xchg (bad) (bad) (bad) jmp mov dec xchg mov cld data16 insb cs inc outsl test rorl mov (bad) (bad) (bad) pushl mov dec jmp lcall cmp xor nop jbe,pt adc mov (bad) (bad) (bad) call aam push sub lret xchg fstps adc faddl xlat and sar (bad) (bad) call inc imul pop ret push aam mov cmp (bad) ljmp (bad) (bad) jp xchg ja sub nop cmpb inc fwait subb xor cmc (bad) pushl or push out out pop cmc fs mov nop mov (bad) (bad) (bad) mov hlt rolb adc in leave movsb sahf mov mov cli fnsave ljmp rolb test (bad) faddl jno xchg pop out cmp and add testl incl sahf test xchg arpl (bad) mov cwtl push (bad) cmp addr16 pop cltd pop jle dec fsubrp (bad) fcomip jmp pop lea sub jl je ljmp (bad) (bad) (bad) cmp dec test nop pop lret out jns cwtl notl fmull dec cmpl repz push pop into (bad) (bad) pushl push test mov mov loop dec mov ret out or adc cmp mov pop fidivl adc test push xor daa sub (bad) mov cltd inc (bad) push lods xchg push fisubr pop and mov ljmp imul fs inc lret dec dec sar dec dec in push pop push sar call fs bound mov and cs or sahf (bad) lcall cmpsb push jge into or aam sbb jno sti add and pop sub and pop dec int3 dec neg cmp (bad) (bad) dec repz loop push mov and lret jno lock fadds add sub push lock jmp xlat (bad) aam pop bound fiadd cld sbb mov mov sub mov (bad) (bad) (bad) ljmp sar sbb ret shrl push mov pop das (bad) (bad) mov xchg les (bad) (bad) lcall jno pop mov mov xchg cmp ljmp lea xor ljmp jno jl or and test cli fwait pop push sbb call int3 push cmp ret (bad) mov push fsts xchg fimull cli mov cmp pop orl or movsb popa scas movsb fnclex cli xchg leave bswap inc jb jno pusha ljmp into inc pop or sti (bad) (bad) (bad) in jbe pop int3 rcrb rcl lods jecxz cli inc pop fcomp rol mov stos cmc push gs movsl in (bad) jg add mov bound pop jp add repz (bad) ljmp xchg xlat or push push popa mov mov ret add mov lea xor pop cmp pop adc xor xchg cmc cmpsb push test test loope mov dec xchg jle in test add mov and push xchg mov (bad) (bad) (bad) cmp mov adc mov subb jle pop stc fldl adc pushl cmpsb lahf jmp jge insb leave push push mov clc (bad) (bad) (bad) dec fidiv out inc test nop pop das adc sub stc sbb pop (bad) or add jnp pop cmp add out fistpl repz cmpsl xor and (bad) out and arpl test inc imul jg (bad) sub lahf stc lds sbb jb mov push idiv andl xorb (bad) jmp mov pop or aaa cmc lret dec or insb in insb std (bad) lcall add clc fwait cs fdivrs rolb jg ds sbb (bad) cld ds leave cld push mov push pop ret push cli jecxz cmp pop (bad) (bad) (bad) (bad) mov inc mov pop mov out cltd jae fsubr mov mov out jo scas jno jae adc sub insl mov pop repz xchg decl xor push int3 mov ljmp lods pop in or (bad) (bad) pushl push fwait cmpsl stos push mov bound dec loope fcmovu jge mov xchg mov sub (bad) decl pop dec out fnstenv xchg or and cltd adc or mov test (bad) (bad) mov pop or pushf mov test pushl ja outsb aad lods add sar (bad) (bad) jmp mov mov fcoms pusha je movsb jge gs add adc mov inc aam jle cmpsb and xchg (bad) jge lcall mov fmuls into (bad) cmp mov (bad) (bad) pushl int shl shlb xlat or push (bad) fisub popa mov psadbw sub inc (bad) (bad) (bad) (bad) cli or pusha or adc stos insl mov xchg (bad) fimul fisubl lcall fldenv xchg push push icebp sbb frstor mov (bad) cmp outsl clc (bad) (bad) fildl adc call movsl pop inc gs leave cs mov jp decl push int3 test add inc (bad) (bad) decl sub lahf loopne inc imul daa enter cltd pop pushf stos jecxz (bad) (bad) (bad) (bad) pushl sbb cli mov stc lods adc jg mov jno mov xor xor fucom inc loope (bad) mov sub (bad) cli sbb inc (bad) (bad) ljmp mov push movb mov add sbb (bad) push outsl movaps decl and dec pop sub and (bad) ljmp inc es je mov adc adc add jg mov lahf adc push (bad) (bad) call cmpsb notb inc jbe sahf bnd cld push movsl inc (bad) cmpsl inc or pushf add jns jg (bad) sub lds cmp mov dec (bad) ret stc pop pop dec cmp int3 inc std pop inc (bad) cmpb fsubrs aas mov (bad) call out out test (bad) (bad) jge xor adc pop fnop jg mov pop dec push jmp test (bad) jg sub in dec jne dec mov add mov (bad) (bad) mov in popf in jnp or stos icebp mov lcall sbb and (bad) fnsave push fist inc cmp js pop pop (bad) adc inc rcrl and (bad) fcomip addr16 and push ret xchg (bad) dec and movsl pop push mov or cmp stc (bad) (bad) (bad) ljmp or lods adc push push insb mov xor jno pop scas in (bad) (bad) (bad) call fldt daa into inc pop mov scas dec ljmp jno xor jo in xchg mov repz notb push stos cli mov jo (bad) jbe mov xchg sbb jle inc mov (bad) (bad) (bad) incl das sbb pop lock das (bad) dec mov dec test mov cwtl dec pop add mov pop dec dec cmp ds (bad) (bad) call add aas lret sbb icebp imulb push inc xchg pop je (bad) (bad) lcall es outsl sub dec adc mov sub pop inc ljmp adc (bad) (bad) (bad) push cwtl or sbb repnz (bad) call mov es pop jmp test cld (bad) (bad) jge dec imull lret push iret cmp jbe jbe sahf sub mov mov push (bad) insl or and mov dec inc scas enter call inc push push repz pop push int3 mov (bad) fiadd (bad) aam out inc pop repnz pushf das adc adc xchg (bad) (bad) (bad) pushl in mov fst inc leave xchg sub rclb pop xor push xchg push insl and ret icebp sar decl jecxz enter das cmp push mov cmc jns imul out xchg cmp jecxz repnz inc ja or (bad) in clc cli jae cmp jg repz dec pop mov push (bad) (bad) decl sub cmp cmp mov lods push fwait (bad) mov into pusha push gs mov push cmp mov mov rorb js,pt cmp cmp lock je push (bad) (bad) (bad) inc adc cli add xor (bad) lock and hlt push jo adc aaa push mov inc sar incl ret push fsubs iret aam lea push jp stc lds into jg mov (bad) cmp xchg rclb std adc int movb (bad) enter sub loopne movsl jno jmp xchg jne mov push stos imul pop sarb fs cli dec repz jg dec std push pop in bound ds icebp sbb mov loope mov imul mov pop cld (bad) (bad) (bad) mov cmp fld out pop cmp adc inc cmp aam push aad test (bad) (bad) call xor or mov adc inc xchg push cmp icebp sbb cli (bad) fsub adcl out or inc std push shrl or test add (bad) (bad) push aaa mov stos clc sarb jno (bad) push pop adc test fld addr16 pop outsl adc pop lock jo mov mov std incl inc sbb pusha mov cmp iret pop out ret (bad) (bad) dec lret scas xchg imul push pop cmp dec jne mov or lock push (bad) (bad) ljmp cwtl mov mov aad pushf push shl and cltd clc cwtl scas out fsubr and decl jmp xorl jg pop incl popf lret movsl lcall orb bound cmc (bad) incl adc lcall adc push hlt scas mov rclb add (bad) decl out push push jae cmp data16 pop sbb adc jmp xchg test bound call test icebp or sbb js (bad) mov xchg mov test pop pusha or stc or insb cwtl lcall movsb (bad) (bad) dec xchg dec mov xchg leave mov fsubl psllq (bad) (bad) mov adc test adc push jnp or or lret and loopne pop mov dec dec nop push mov jg hlt loopne,pn adc adc sub insb ficomp push (bad) out adc clc (bad) (bad) (bad) ljmp sub je pop fistl add imul fcoml lret imull arpl out hlt (bad) incl (bad) xchg int3 cld push pop push cmpsb inc jmp pop jp cli (bad) lcall push cmp or je shll aaa sbb xor (bad) ljmp (bad) xor or test rol addl cmpsl or push scas (bad) jg lcall pop mov in aaa std test cld push sahf pop sub and mov adcl aad insl xlat (bad) (bad) (bad) call inc dec sub sbb xor inc mov aaa cltd repnz mov clc rclb gs pushf mov push pop sub dec xor jnp add jg and lahf test pop push ljmp clc pop add cmp shl inc fstpt neg out fsubs mov pop xchg (bad) (bad) (bad) call aaa add jo lcall sub stc mov bound fs xlat aad sbb dec xor or rol push jle xlat lcall (bad) cmpsb pop cmpsb out outsb (bad) xor add mov and xor push incl fdivrs adc mov pop sar aaa or ljmp repz jo cmp lret jmp cld (bad) jmp mov jge jp add and lret mov (bad) jg ds cmpsb sub (bad) sub sbb cs pop test (bad) (bad) (bad) jmp adc dec pop mov popl in cmpsl jg fxtract (bad) lods ja mov stos mov cli je inc sbbb mov or mov xchg mov (bad) (bad) (bad) fxch mov dec xor jbe and test sub inc inc cmp cld arpl (bad) mov lock (bad) (bad) incl and and pop arpl and frstor push in and pushl in mov mov hlt pop loopne adc imul (bad) pushl dec leave mov adc pop fwait mov push (bad) test outsl sub push cmp fldenv repz and shrb (bad) jg ljmp (bad) pop out pop ret fwait sub xchg decb (bad) (bad) (bad) jmp cmp pop adc mov jmp mov mov out enter (bad) ljmp (bad) cltd sbb dec out jg jle mov mov or push mov lods inc aam xchg (bad) repz call std jae push fidivrl cmc (bad) mov mov cmp pop jno test lds (bad) call (bad) lock les int3 aam cltd sub xchg flds inc jno mov incl das jge or mov mov fisubr imul sub daa mov pushl in in das mov mov movsb jo in push push (bad) loope lret (bad) (bad) out push xchg aam rorb inc xchg xchg add ss xchg js shr popf ljmp (bad) jmp mov das cmovns test fisub les mov cmp jle (bad) xchg jmp sub mov or cmpsb inc mov fucomip and sub sbb mov aad (bad) xchg mov es sbb (bad) (bad) mov sub pop mov aam mov jmp (bad) (bad) ljmp sub jae pop arpl loope lea push ret repnz push (bad) (bad) (bad) dec mov xlat sti or out ja or xor mov and cmp xor (bad) (bad) (bad) jmp shl or inc sbb repnz into lea lea pop or xchg arpl sbb adc jns mov add jmp sub lret icebp (bad) decl test jae dec cmpl rcl mov ss in pusha icebp shrl test orb sbb aaa push fcmovb (bad) mov sbb dec jle pinsrw lods es and add xor pushl jg es test or das mov pop aaa stos sbb adc clc imul push fiadd test loopne (bad) ss imul mov pushl mov pushf jmp mov (bad) (bad) ljmp push dec cmp pop fmuls je xchg mov data16 dec cltd push adc mov (bad) call xchg out inc arpl or movsb or rol sarl call mov sarl cli sub push sub das cld xor sub (bad) (bad) decl mov add loopne popa inc mov and shrl or repnz adc inc (bad) (bad) (bad) (bad) jge xchg push xor mov inc daa mov dec sub inc mov push and cmp pop pusha rcr jl lea mov sub decl lea loope pop inc push pushf mov sbb fdivrl mov ret leave faddl fstl jbe ss and mov dec leave nop (bad) out shlb mov (bad) jno (bad) (bad) fistpll sub and pop js stc push test push cmpsl je (bad) fcomip lcall sti pop lock pop (bad) test push mov pop pop push fwait xchg jecxz (bad) (bad) pushl aad jge ds xlat add jbe mov mov shll lock inc xchg aaa mov pop and sub or (bad) jmp jecxz out push xchg mov jnp mov js push out xor scas push mov adc (bad) (bad) decl stos outsl mov dec or sbb or pop fstpl leave mov (bad) (bad) ljmp push sbbb mov mov mov fucomp in mov fwait push xchg push add cld call sub das or call rol lcall pop sub (bad) or in (bad) fidivrl (bad) cmp cmp sub dec fstpl shl jb dec call add xchg insb sar (bad) decl cld aam and xlat daa jno add mov cmp xlat mov call cmpsb xor stos cmp mov (bad) (bad) stc das mov lock mov rorl sbb or or push sbb ret pop cmp aas and (bad) (bad) (bad) mov adc aad mov nop fdivrl mov add arpl adc nop cltd (bad) (bad) (bad) call gs jb add mov enter lcall imul push dec mov jbe pop insl push rolb mov aaa repnz mov in add add push dec ret or les (bad) (bad) (bad) (bad) jmp dec or inc cmp or ficoml ret loop nop xchg cli jmp loop rcrl das lahf stc loope inc loop mov mov repz cwtl push adc ljmp mov sahf mov xchg aam (bad) mov decb (bad) aad lods arpl or cmp xchg inc pop (bad) (bad) (bad) incl cltd cmp fisubr popa lret xchg leave mov in cmpsl int fsubrs adc js arpl jecxz fcomip decl sbb orl cmp and pop cld out pop sub (bad) (bad) jmp (bad) jns mov lret cmpsb repnz add sbb push addr16 cld pushf inc (bad) (bad) jecxz (bad) xchg cs stc lcall test push scas jno (bad) es sti aam (bad) mov xchg pop jmp nop cmp mov mov (bad) lcall xchg mov pusha and sub fcmovu or mov call mov fcomps mov icebp or mov or dec bnd jl mov clc cmp fstpl (bad) (bad) (bad) ljmp inc inc movsl int3 cmp push mov pop dec sbb ja std sub cld (bad) cltd outsb xchg pop iret (bad) int xchg and or jecxz sbb or les iret dec (bad) (bad) (bad) incl icebp movsl inc pop mov (bad) (bad) inc and rcr mov dec mov inc or pushl loope ss pop mov or (bad) jae roll and andl jl movsb sarl or inc (bad) call ret bound gs rcrl jo (bad) pushl inc or adc je cmc incl jge mov pop dec mov hlt leave or (bad) (bad) push push pop sahf mov sub push dec test scas sbb ljmp lcall arpl jae jne sahf inc cs sahf adc jbe adc in cmp (bad) (bad) fcomip nop mov je lods ret cmpsb pop js xchg sbb and daa (bad) (bad) (bad) (bad) cli lret movsl mov jbe cmpsl fcmovu repnz (bad) aaa (bad) stos enter jb xchg jl out lods push je sub data16 xchg pushf or jo in xor and (bad) mov imul cmpl jge (bad) mov movsb arpl sbb incl pop pop xor fstpt mov mov call pop mov movsl mov add jecxz out push push mov (bad) call pop mov or jecxz test rcll add xor (bad) (bad) std or adc int mov faddl mov inc cmp (bad) (bad) (bad) pushl sbb jp fcomps repnz es ss lods xor cmp jg (bad) ljmp fldt (bad) cmc mov add rcrl outsl movsb test xchg loopne sub (bad) in call sti mov mov xor js ret out jnp sbb inc ret fnstcw out (bad) (bad) ljmp arpl sub push loop mov sbb pop mov in pop out clc (bad) (bad) ds cmpsb fmull ficoml jno,pt dec push xor stos fisubrl leave sbb (bad) (bad) (bad) jmp rorl out es and or cmp out aam pop cmp jns stc fldt fs (bad) (bad) decl ret add test and lcall (bad) (bad) (bad) call add out notb jecxz popf int3 test outsb addr16 jne (bad) (bad) (bad) jmp ljmp test mov out ret fcmovnu loope es mov push cwtl imul jae pushf out in std push jbe lcall pop pop jmp sar out cli pushl in sub fcoms aad cmp xlat xchg inc mov pusha sbb push add decl adc addr16 ljmp pop fsubp js mov pop push (bad) (bad) call and push push mov movsl movsb repz mov (bad) int fwait jo pop or loope cli adc clc test pop inc mov loopne adcb cld lret imul popa leave xchg movsb fucomi (bad) (bad) (bad) (bad) (bad) pop jmp jge push cwtl lret shrb insl inc sahf sub add (bad) jg jmp mov mov jno scas mov pop sub clc adc (bad) (bad) call in (bad) (bad) testb scas (bad) jg (bad) std jbe mov ret loop lret xor ljmp or outsl inc cmp xor (bad) movsl adc popf xlat dec xchg adc push sub (bad) aas mov pop arpl push inc enter xchg ret inc imul mov push sbb (bad) (bad) (bad) jp leave add clc push jge ds test lods scas jle xchg sub push (bad) (bad) (bad) incl cmc mov aas and pop sbb out xchg xor sbb (bad) (bad) (bad) jmp enter cmp fs xor sbb xor imul mov pop or (bad) (bad) jmp mov jbe scas add scas stos orl ja pop leave sbb (bad) (bad) fcomip dec sbb mull pop mov mov add xor jnp js (bad) (bad) mov rcrl xor aam mov aas daa xchg aas adc sub pushl cmp xchg jae lret xlat sbb dec sub sbb outsb mov push (bad) test scas (bad) (bad) (bad) cld cmp xlat push lcall test push jo roll (bad) (bad) incl fcompl sub jae into cmp and int out pop add out jle sbb cld call les sarb mov mov pop inc cmp loopne (bad) (bad) (bad) push ljmp sti or lcall mov sbb lret jg mov inc jmp jecxz cmp sub mov in push lcall adc imul test ret mov lcall sub aad inc xchg pop std xchg repnz loop xchg hlt cwtl adc pop (bad) (bad) (bad) ljmp movsb xor pop and negb (bad) icebp push xor test inc cwtl push cs movl out push inc inc cs aaa loopne mov sti pop clc iret xchg and jecxz (bad) (bad) (bad) pushl cli cmpb addr16 dec mov test imul ja insl jbe xor aad add xchg test (bad) idivb push adc icebp hlt sub lock (bad) decl xchg fistpll cmpsb dec mov insl (bad) adc jge mov lods push test mov ja std icebp cmp mov std lcall les dec test push call mov insl sub (bad) inc mov insb xchg jg outsl (bad) jmp repnz fs push and pop sbb ss xor add inc or (bad) (bad) lcall add mov fstps popa imul pop lock das mov pop jo test mov roll jle fdivrs imul aam cmp jmp xor mov lcall jg mov xor sub add (bad) (bad) jg jge notb or mov inc mov fistl jbe into xor arpl mov push mov sbb das xor cld aam (bad) decl fistpll inc aas mov push leave xor cmc fimul gs mov shrl add das mov loop mov sub mul push jmp mov and ljmp push in test xchg (bad) out mov mov xlat cwtl sbb popf gs mov sbb imul push sbb fisubl push fbld in dec adc incl push mov dec in inc sub adc clc jns daa jb lcall decl (bad) call mov jns or (bad) jae inc ficomp mov fwait dec pop and mov jo sbb loope xchg sbb pop push xor pop dec imul (bad) lock fisttpll fwait adc mov add sbb inc mov push (bad) (bad) (bad) incl loop arpl mov sub cli aam pop or add mov popf (bad) (bad) (bad) call bound xor aad adc sub dec add xor adc incl sub mov mov mov or jnp push (bad) (bad) (bad) pushl scas addr16 adc pop sub loopne insb xchg xchg ret xor in in pop rcll jo (bad) (bad) (bad) decl (bad) arpl loopne or pop and inc jnp push xchg stos call (bad) mov xchg lret in dec gs xor xor (bad) jmp ljmp jecxz into icebp out mov imulb jb ljmp ds and mov push xchg mov cmpl and jmp lds xchg jne inc inc sar push add hlt add or mov xchg shl (bad) (bad) (bad) (bad) jge fild jle bnd lods scas inc push xor popa push and adc bnd test (bad) (bad) ljmp jecxz std inc or sti cwtl bound bound lret jno fstpl nop bound inc pop adc (bad) mov jbe jge pop sar inc jp inc sbb adc aad push jo (bad) lcall fbld sub sub mov jne mov sbb call xchg clc inc push in (bad) lds pop (bad) mov (bad) (bad) (bad) (bad) fldcw xchg pusha inc push push lds lret sbb cmpsb cli cmpsb xchg sbb sarl (bad) (bad) (bad) pushl insb mull adc repz jmp es push rcrl (bad) (bad) (bad) pushl out jns mov rcll add or mov push dec in pop cmpb gs bound push push xchg adc or fsubs (bad) jge pop pop rcr jae inc xchg test dec and adc adc adc (bad) (bad) ds and lret popl psubq cwtl js jp xor adc (bad) ljmp pop mov aas push js das out jp pusha std cmp inc scas xor mov or push mov jg (bad) (bad) mov clc or popa pop cmp sbb sbb (bad) insb je (bad) (bad) call sbb mov shrl xor mov (bad) out jge push (bad) (bad) (bad) (bad) (bad) sub arpl mov stos add loop or jp pushf push mov add add decl adc sbb xchg jp mov std ret pop leave (bad) (bad) call dec scas sbb sub xchg or xchg sbb stc cmp jmp inc pop push dec sahf loopne and push dec into or jg jnp scas (bad) lcall jne rol jno cs or dec mov rorb fistpll sarb (bad) or lds sub cli out cmc pop xor (bad) (bad) decl sbb cltd lahf pop adc subl out mov and cli (bad) (bad) inc sub adc mov xchg (bad) dec addr16 (bad) scas inc xchg and ljmp pop enter dec pop lahf cmp je cs loope sub ljmp cltd fisubr jl jmp mov lea gs ljmp push out outsl sub xor in mov insl repnz xor (bad) (bad) mov xor dec xor lret push test mov mov repz imul or adc push push xor pop out sub js push mov aam data16 (bad) (bad) incl inc and push jmp add mov sub mov idivl movsb (bad) (bad) (bad) pushl loope enter push scas andl jne push (bad) enter mov sbb and pop (bad) (bad) (bad) pushl cmp scas jp push arpl pop fcoml jp and out stos mov and jne (bad) (bad) (bad) incl popa push stc and addr16 jne push mov or mov lret mov shl sti mov mov stc mov push mov popa (bad) (bad) jg jge,pt fsubs lcall mov lods outsb std mov mov ja or ljmp (bad) adc pop lcall ret mov push xchg pop or xchg (bad) (bad) ljmp ds and fmuls xchg xchg jnp cmc insb pop shll and pop (bad) cwtl (bad) (bad) (bad) inc xchg fwait ret xchg pop xlat movsl enter cmpsb mov xchg pop or (bad) lcall or (bad) arpl and xor fs pop (bad) push out or mov (bad) ficom pop in mov (bad) in mov aad add sub cmp (bad) lods faddl mov les sbb mov ds (bad) fildll mov (bad) sub into call mov push adc adc das push test sbb pushf jmp jo (bad) (bad) jmp bound ja loope dec pop ret (bad) enter lods insl push mov inc (bad) (bad) (bad) call shrb das mov cmpb aas xor push push aas and cmp or (bad) (bad) (bad) pushl inc mov clc and aaa (bad) in jae mov mov fisubr push scas inc or mov inc arpl je xor mov punpckldq arpl mov dec jp jg outsl xor rcrb and lcall insl std (bad) (bad) lcall jp sbb in xor push sti cmpsl jne adc and clc xchg les call xchg jns push xchg test mov cld ds or fisubl test and lcall sahf pop adc imul rclb call xchg repnz loope (bad) pushl incb iret jl dec dec gs movsl stc nop addl inc or lods (bad) mov push xchg (bad) push imul (bad) (bad) out mov (bad) mov add arpl xchg js int3 dec out xlat iret (bad) (bad) (bad) inc or pop sti icebp mov in pop lods jae (bad) call js mov out pushl cld call xchg (bad) mov inc cli push scas pop sub push dec jae push jne movsb xor mov (bad) (bad) (bad) incl fadd jo leave popa mov pop add ss xor je mov xchg mov std sbb cld (bad) (bad) pushl stos xchg xchg mov mov push je or push in (bad) (bad) call fistpl inc clc outsb (bad) ds and xchg mov xor inc js jnp (bad) (bad) out cli loop mov sub jae (bad) mov add sub jg imul push (bad) ds mov add icebp (bad) jmp inc scas mov in mov pop or mov ljmp mov mov pop ficoml or xchg push sub negl cmp sbb inc (bad) call mov je int3 adc inc xchg adc movsl sub (bad) cmp push fbld sub xchg popa ds cld and (bad) decl adc insb add pop pushf leave test pop loop (bad) decl ds ja (bad) ds xor cmpl add xor mov cmp mov ljmp sbb pushf sub out fisub repnz (bad) (bad) decl xor jae and clc lock rorl enter sbb mov pushf jge pop add pop mov ret sub (bad) (bad) dec cmp push mov movsb jno les fbstp callw sti mov ljmp es pushf daa xchg movsl and test add cwtl sbb shl (bad) (bad) (bad) decl sub pop jns push ss xor inc inc inc js jbe and imul (bad) in jmp cmpsb sub jl sub or (bad) (bad) lcall pop mov mov mov cltd pop xlat or stos fist iret sti mov (bad) fist pop loopne push sti xor lea cmp (bad) (bad) decl in pushf gs push sub ror and adc pop std (bad) (bad) fidiv sbb mov dec mov jae cld push fistl sbb cmp cmpsb sbb icebp sbb ds test notb clc or mov (bad) (bad) (bad) jmp fcoml enter and mov cmp imul test mov fs xor mov jne mov aas neg decl xor or xor rol iret int3 lcall (bad) (bad) (bad) jmp nop xor mov add andl mov add mov inc push adc lcall pushl inc mov ficoml jp idivb dec jle xor (bad) (bad) call push dec in daa sti fwait push test and das dec and jl,pn test mov repz (bad) call jmp cmp testl bound mov (bad) (bad) ja lock subl mov lahf push push outsb sbb loope (bad) mov mov (bad) ljmp das (bad) or (bad) fwait mov push movsl das scas (bad) (bad) mov ret dec out loope inc repnz adc mov (bad) (bad) jg xlat xchg mov adc dec sub ret cmp xchg sbb and (bad) out xlat (bad) call push ljmp jmp clc jmp jl jnp push push push jnp mov jns shr clc ljmp xor ret fcompl (bad) pushl jge add (bad) fildll ficompl lret xchg jmp adc dec popf mov mov xor dec mov mov jp std shlb adc pop loopne int dec mov je lea les mov jle sub mov or cmp cmp dec xor cmp icebp push shll mov mov stos push lret pop addr16 push outsb scas jmp (bad) (bad) (bad) mov jb xlat jbe dec jle int sbb or cmpsb push sbb lcall mov push push (bad) adc cmp fdivrp ljmp dec les ja pop sbb out daa test mov ljmp add push xlat leave xor decl inc sahf jp xchg xor jle in jp roll (bad) (bad) (bad) ljmp aas or icebp call sbb push cli (bad) out or loopne jmp (bad) (bad) incl mov xor and dec jne jno movsb les xor out inc test (bad) jmp repz mov outsb push adc loopne dec rol push push leave cmpsl stos (bad) (bad) (bad) (bad) xchg mov jmp outsb pop mov jecxz push inc pop out jo mov std pushl stc mov orl lods mov (bad) (bad) cmp in or int3 (bad) lret mov jb test icebp mov call jmp scas cmp incl inc dec out xor mov mov cmp add jbe push ds (bad) fcomip popa sbb int3 (bad) pop jge aas mov aas aam inc push es adc sbb dec and pusha aas mov xor movsb push lcall fist pop stc divb mov jp les add sahf decl sub adc pop pusha stos jb push jne int sti inc xlat (bad) (bad) (bad) (bad) (bad) inc pop mov add sbb xchg faddl xchg popl xchg sub cli mov sbb mov adc cs lock inc inc jns icebp aaa adc (bad) (bad) (bad) lcall sub in xor push imul or xor push lods pop sub fucomip mov adc pop call mov jne sti movsl cltd adc mov fldcw cmp shr cmpsl adc icebp addr16 aaa xchg pop bound rcrb cs and (bad) lcall jmp mov mov out cmp scas cmc sbb fdivs (bad) lcall call (bad) jns jmp jb ja aas sbb out mov clc dec incl mov mov fstpt sub pushf adc jnp mov repnz mov rol lods pop je cmc sbb dec stos or add std je (bad) (bad) inc mov mov lods mov out mov inc jae jbe sub jmp and stos cltd (bad) (bad) (bad) inc inc fnsave mov jle clc xchg cmp mov mov lret cli sbb (bad) (bad) (bad) clc xchg push (bad) xchg inc adc loop and loope cmc cmp jl repnz xchg (bad) call fistl push notl xor pop mov (bad) lcall push lock incl xchg lods cmp pop mov jmp cmp leave (bad) (bad) (bad) (bad) pushl jb xor enter pop je lfs pop popa push test pop dec in or and fs (bad) (bad) ljmp cld add push (bad) lock and ja xchg out in adc pop jg (bad) (bad) (bad) pushl cld jle ja pop pushf xor punpcklbw icebp loop pop and xor imul incl mov pop (bad) pop scas std imul mov cltd loopne cmp cld incl out aaa mov cmp repz (bad) xor inc cmp ljmp ds or mov cmp inc loopne pop or ja,pt cwtl repnz jb aad lods mov push jmp pusha nop mov out push mov outsl (bad) (bad) (bad) jmp lea fcomps sbb sub js subl dec dec stos pusha jmp cmpb (bad) pushl pop test mov cmpsl push push inc movsl cmpsb adc scas test fsts xlat in add xor ja ljmp mov inc fsubrs pop push in aam mov sub cmp adc push mov push dec inc mull cmc decl insl out xlat pusha ss popa jmp sbb (bad) decl pushf or and imul nop insb rcrl in fdivp pushl jns adc mov adc lcall (bad) (bad) call dec pop adc mov pop add test add sbb mov inc (bad) call push xchg imul leave shrb insb mov or add call push test (bad) sbb lcall mov mov xchg mov jg mov (bad) int3 (bad) (bad) (bad) jg fstpt mov or rcl push fmuls push repnz xchg sti cmp (bad) (bad) lcall ret mov pop call out gs xchg call fsubr std (bad) push cs ljmp dec movsl push pusha pushf mov nop xorb xor adc pop call inc dec call fidivrl jnp imul imul test inc sub mulb inc cmp mov (bad) (bad) call and orl pop insb out xchg cltd imul aad sub insl jnp xor (bad) (bad) decl mov test xchg test push icebp les incl out push jnp mov imul lods fldcw lea incl add add jae aas or subps ljmp pop mov pop inc lret aaa lods fildl sbbb dec pop sbb xor (bad) (bad) ljmp mov and push nop cmp sbb push insl xchg mov das loopne mov jl das roll dec out sbb scas rcrl sub mov jg pop gs daa adc push pop inc fsubr notl cmp (bad) (bad) jg in in cmp ljmp shr (bad) stos jl dec nop xor adc (bad) ljmp frstor mov loope int3 xchg mov movl adc (bad) (bad) ljmp fpatan (bad) imulb loopne jle xchg and cmpsl data16 sbb xlat bound loopne sar rorb jno outsl addr16 push push xchg xchg out pop sub jle (bad) (bad) mov dec out pop (bad) mov sar jbe pop sub adc jno inc mov jbe xor (bad) (bad) call fs addr16 (bad) imul cltd shll or inc (bad) popa dec js add fdivp (bad) call mov mov pop (bad) mov mov jno clc mov rolb cwtl adc into mov into inc stos (bad) (bad) (bad) decl ret sarb (bad) dec cmp push jae nop pop or (bad) (bad) decl mov xchg jmp mov ss or mov or std sahf dec inc inc (bad) (bad) (bad) inc inc mov insl lret jae cmp mov adc push arpl lods addr16 jle (bad) (bad) call loope cli and xchg ljmp sarb aad push or mov lcall test xor adc cltd addl mov mov out pop (bad) neg movl out push bound ret cld enter out adc mov lods jl inc cmp pushl or adc aad imul lret push dec cltd movb sub push inc aaa adc or push stos or mov (bad) rcrb incl test pop ljmp sub cmp mov xor xor in into mov or stos in imul (bad) (bad) (bad) ljmp sub pop dec sahf mov cli xor mov sub movsb xchg (bad) jg mov stos fnsave (bad) or push cld in repnz adc int (bad) mov cmp cld sti xchg divl dec loop (bad) (bad) (bad) jmp cmpb sar daa (bad) test push (bad) popf leave mov dec mov adc fcomip decl cltd pop jg test lea shrb mov popa xchg inc dec sbb out cli (bad) jmp sub es jae call pop sbb (bad) (bad) incl add jns call sbb mov and js loopne jnp (bad) jg (bad) loope mov sub faddl cwtl (bad) fcomip (bad) in ret jae ljmp xor lret cltd mov and (bad) decl inc jb sub call xor int3 sti pop push ds xchg std lock (bad) (bad) push loope enter pushf mov add test pop cmc out mov mov std incl xchg xor and push cmp xchg cmp (bad) (bad) pushl dec and or mov call fwait or adc add fldt xor mov jae (bad) (bad) incl lods bound lods fsubs mov and dec mov jg pushl lret int3 test loopne icebp int3 in sbb pop cltd inc and cwtl pop mov ret (bad) (bad) in push (bad) sbb lea loop ljmp ljmp add push dec cmpl repz mov test call and jp fistl jo jg (bad) push sbb test test fidivr pusha jmp add lods push inc sub data16 (bad) (bad) (bad) jmp daa sbb pop mov cltd jbe mov clc into cmp cltd add pop inc cwtl mov mov (bad) push sbb mov mov (bad) (bad) jg mov mov adc fistpl sub pushl std or dec dec sub push enter rcrb jle (bad) (bad) (bad) (bad) jnp ss sub sbb outsb mov dec mov out inc (bad) mov (bad) (bad) (bad) (bad) cmp add jecxz ret jo je inc sbb xchg sub gs and ja (bad) (bad) (bad) cmp inc nop scas mov icebp and lods pushf xchg test sub (bad) (bad) ljmp push sub push vmaskmovdqu icebp divl je lcall data16 movsl mov xchg xchg cmp adc adc dec test stos push jp,pt (bad) (bad) incl xor and cmp push outsb inc (bad) fiadd hlt mov mov inc insb es mov or sahf cmpsb jp fcoms adc xor outsl adc xchg mov push cmpsb add push test inc xor pop xor clc cmp nop das cmp les daa inc lcall or ljmp xchg test jecxz (bad) xchg cld les shlb in mov or loopne sahf scas push ljmp mov xchg lahf repnz cld rorl pop dec (bad) (bad) (bad) (bad) jnp xchg xchg stc inc faddp jae in (bad) lret insl (bad) cmp aaa pop mov imul mov std xor dec jl jmp dec mov adc (bad) (bad) (bad) mov lock je push push xor mov stos pushf push out adc int (bad) (bad) (bad) pushl test loope fsubrp leave push lahf es pop dec mov mov fwait loop lock (bad) ljmp bound pop adcl xor (bad) xor (bad) fist sti sbb push dec lods pop fdivr das (bad) (bad) pushl xchg div cmp hlt and int3 mov sbbl (bad) ljmp cmp jecxz add xor stos fs sbb ds xchg in xlat cli incl push insl frstor push lret jecxz add cmp push pop loop cmp adc and adc and fwait testb loopne cmp mov or push mov (bad) (bad) (bad) std popa stos pop loopne jmp mov shll and jne jle dec (bad) (bad) mov jg cmp les inc fs lcall xchg dec add jle mov xor push in test adc (bad) std (bad) (bad) incl push test movsl xor push (bad) aad and arpl rcl decl std daa mov xchg nop push and pop push sbb (bad) (bad) (bad) out sbb cs push (bad) cwtl (bad) mov outsl sub mov int3 mov rcrl mov dec jb pop cmp pop imul call mov push dec scas test popa enter add xor dec (bad) (bad) (bad) call out leave dec scas mov push mov (bad) popa or xchg dec cmp (bad) (bad) (bad) jmp cwtl (bad) inc pop hlt les repnz aas mov mov xor and (bad) (bad) (bad) ljmp stos aas in push mov sarl jno mov inc nop stos fidivrl pop fbld imul movsl pop (bad) mov push cmp add dec aas sub jg sahf adc xchg pop mov call mov pop adc (bad) sti stos ss lock fsubrl jb xor xchg push (bad) push mov test fnsave cld fwait mov jg mov gs movsl clc insb notl cmp cmp or mov cmpsl xor push mov cld (bad) call dec push jno stos xchg dec out pop imull mov and push int3 stos and adc iret mov (bad) ss fs decl sbb (bad) fcmovne adc aaa test andl pop pop adc daa jno mov fld cmpsl les outsl hlt cmp push add or inc rorl (bad) (bad) (bad) fldl aas inc push lret pushf fdivl mov dec jb xchg out dec and or mov or movl cwtl js jmp (bad) (bad) incl mov cmp outsl mov mov andl cmp mov mov and outsl outsl cmp daa inc lret or push into and js fcomps mov push dec adc movsl loopne fs ret add push xor mov pop std (bad) ljmp pop shr jmp mov lcall adc (bad) incl inc sub mov dec adc adc gs jno xchg mov pop pop (bad) pop jg insb push and push cs mov and cmp insl dec cs sub fldenv push scas (bad) mov pop out loope adc mov aad push pushl sbb inc jecxz ja pop sub roll dec fwait jnp (bad) mov xor dec add inc inc ficompl push mov stc jg (bad) (bad) cmp test lock fwait or pop sbb add mov jnp in push call dec push aaa dec repnz icebp inc rcr bound add movsb pushf mov imull enter ja cld pop (bad) inc pop and mov insl inc rolb ss pusha out (bad) sti ds (bad) (bad) call sub push mov jb jno inc xor movsb outsb inc sbb (bad) inc imul dec push aas cwtl push rcl and sbb ficom addr16 (bad) (bad) pushl inc mov in dec lock inc outsb dec inc cwtl cld es lods sbb or inc les ljmp lret cwtl ljmp xorl (bad) (bad) (bad) (bad) (bad) test cmp test imul vminss cmpsb (bad) sti packssdw mov js mov sbb (bad) (bad) call ds xor mov popf and adc xchg mov (bad) (bad) fist (bad) pop sbb inc test xchg jo mov pop mov fadd xchg (bad) (bad) (bad) (bad) cmp movsl aam dec (bad) in lret or (bad) sahf cmp fdecstp push xchg jne inc testb dec (bad) (bad) (bad) jmp outsl pusha add loopne insl (bad) adc ret (bad) (bad) (bad) inc dec call jmp push clc and fdivrs xor cmp mov or mov mov pop mov out add mov or mov (bad) decl mov xchg rcl cmpl insb bound decl lock push mov add sub ds cmp dec in test sub nop out inc xchg mov lret cmpsb add (bad) (bad) (bad) pushl pop or jne lea dec or enter mov call jmp ja push or fstps sarb stos lods test and ljmp mov stos repnz push (bad) (bad) (bad) (bad) dec mov sub inc mov adc xorb push mov inc mov decl imul sbb jo jmp mov pop das clc incl xchg test into loopne lea scas icebp or inc mov fs cmpsl xchg das insl testb bound mov (bad) jmp push add repz sbb lcall pusha or jmp pushl jl sbb mov dec add ret fwait loopne push ret scas fisub cmp (bad) (bad) (bad) decl nop add lea add lret imul or xchg dec cwtl aaa cltd (bad) decl pusha iret lahf enter adc (bad) (bad) fistpl test jl insb adc and dec in mov dec fnsave rcrb xor jl loope sub add out cmp push lds jl pop jle sub jno aas jecxz (bad) in pop mov push push dec ss mov insb pop scas dec aad sbb dec and cmp mov stos xchg inc pusha and dec mov jmp (bad) into int3 jl add push inc fcmovnbe insb or das fbld les add fsubrs cmp cli into or and or aam fdivr ss xchg or (bad) jmp test into jns sub or jg jp push push dec xchg lods popa xor aad repz rclb mov in mov decl pop loop inc jle mov xor xor insl xchg sbb (bad) ljmp or pop pop push outsl mov (bad) lret bound and jp lds (bad) ljmp sub cltd aaa std js fadd jp adc jecxz movsl arpl jne mov (bad) (bad) decl push push pop test insb pusha cmp ss push in cwtl xor (bad) (bad) jg ret lock dec cld cmp scas or popa fisttpll push sarl aaa mov jnp rcr cmpxchg mov dec (bad) (bad) (bad) jg int3 imul mov pop or add xorl mov mov nop repz stc push pop xchg std fstl jecxz insl in call push dec out lcall ds mov mov dec clc call fcompl dec adc jbe mov in mov insb sub jle push std stos add sub (bad) incl nop ds je lahf xlat inc cmpb outsb test mov or sbb mov hlt (bad) xor or xor push push mov imul (bad) lcall lahf lods fs jmp mov push out sbb cmp jo jle (bad) (bad) (bad) decl mov sahf loope push pop neg pusha loope inc pushf adc test lcall (bad) mov sub mov mov loopne mov popf pop mov xor push xorb pop rcl inc lahf sub pop (bad) ds cs (bad) (bad) (bad) jge and (bad) and mov sarb aaa xor pusha popa mov inc jge xchg push cld adc (bad) mov orl mov inc ljmp clc pop xchg or mov xchg rcl (bad) lea js mov add (bad) (bad) (bad) decl dec jmp xlat loope cmp jne int3 jnp bound out mov (bad) (bad) incl repz loop cmpsl cmp ja push scas (bad) call dec cs jp inc sar (bad) (bad) inc mov dec leave out leave lret lret cmpsl stos dec sub jge xchg sub dec pop jmp (bad) incl aaa fadds pop push pop mov leave std divb sahf dec pop cmpb fs xorl cmp (bad) (bad) ljmp xchg add mov add xchg and inc pop sub in arpl pop (bad) (bad) (bad) decl out testb mov aaa pop lods and (bad) jl cltd (bad) (bad) decl pop (bad) jbe (bad) popa jle mov jmp add aam mov mov loopne (bad) call jne data16 mov dec (bad) pop pop (bad) cmp push mov mov jne (bad) (bad) call push or dec (bad) aas xchg cmpsl and cmpsb into xor pop push mov (bad) (bad) (bad) dec scas push xchg jo and push (bad) mov mov ja pop iret cld (bad) (bad) push test test in push rorl dec hlt xor dec pop adc jbe push mov jg add push cmpsl xor fstpt (bad) (bad) (bad) call adc xchg xchg jno lods xor sti adc pop int dec mov decl adc adc loop sub aad jo (bad) decl ret mov daa mov adc push lods rcr inc mov sub (bad) (bad) (bad) jmp test gs loope or (bad) dec rorl fcoml add into (bad) (bad) call loope call mov aad push dec lea (bad) cmp rolb das sar jo lock mov lods iret das movsb mov sbb cmp (bad) (bad) jmp daa mov loope lods dec dec cmpsb scas mov insl jb (bad) mull xchg (bad) (bad) (bad) jg iret jns cltd fnstcw adc sub xlat adc popa mov jnp mov cld incl pop popf iret roll mov dec in mov (bad) incl pop inc push fldenv xchg cmp enter jmp aas xchg xlat rolb inc or (bad) jg inc ds push (bad) lods test lds aad fwait adc fs cmp sbb jbe push push pop or inc stc mov jne (bad) leave stc rclb adc (bad) push jg and aaa xor sbb xchg lahf fdivrl cmp (bad) (bad) fildll ret fimull xchg neg fdivr xlat dec mov mov pop cmc out cmp (bad) cmp into pusha fcmove or inc cwtl lret subps mov sbb mov xchg xchg pop icebp decl jo push and out inc into rcrb mov jo sarb lods (bad) (bad) (bad) dec insb inc bound movsb test aam fiaddl cmp ds call test cmp mov in pop rcll sub (bad) call cmpsb gs divl lcall sahf shrb mov ds out hlt iret leave test bound jge clc sub push aaa int3 (bad) insl cmp stos lods mov mov btc sbb cmp add or lcall mov fadd pop stos incb cmp (bad) int and sarb je or and popf jp and jne out loop adc das cli and insb aad pusha sub aam push inc push push imul (bad) pmuludq jg jbe cmp push xor push lds or into xchg test pop movsl xchg je push cld idivl pop fisubl or adc mov and lcall cmp xor adc and xor mov cs or push scas jg pusha cld ljmp fisttp (bad) (bad) (bad) ljmp sbb add adc fistpll mov lock pop cmp push lock and (bad) (bad) decl lcall movsb push (bad) push cmpsb push jb repz ret pop das lahf push fwait dec movsb fwait ljmp dec test (bad) jmp pop in cmp or popf sbb aas cmp inc stc mov (bad) (bad) (bad) decl repnz dec sbb addr16 in xchg push and mov xor (bad) (bad) (bad) incl jge fmull cmp stc scas jmp jbe sub pop push dec ljmp in decb push clc pop and xchg ljmp pop sub (bad) decl xchg jbe mov movsl data16 pop adc test push addr16 mov pop jl adc mov aad test idiv push or jb mov (bad) (bad) (bad) in in jecxz xchg loopne dec scas mov dec fdivrl repz mov mov scas (bad) (bad) inc (bad) xchg xchg ljmp mov add xchg arpl pop or (bad) (bad) incl xchg test fxch (bad) mov lret jl shr ret movb insb xchg insb fs cltd out (bad) (bad) push jb imul clc daa and call xchg or roll or scas (bad) (bad) (bad) incl shlb je or xchg outsb cld (bad) or sub outsb mov jmp out (bad) fs mov out xorb in mov pushf sbb call mov lret outsb push jl call repnz popf fs daa js lods (bad) (bad) (bad) (bad) decl or imul xchg cmp push adc mov xlat cmp push lods cli leave movsb in js daa mov jle inc lods pop sbb cmp outsl or daa (bad) (bad) (bad) (bad) jge je and sub clc cs rclb (bad) push (bad) cmc sub (bad) (bad) (bad) ljmp ret ffreep push push (bad) mov nop pop xchg iret test inc pop lods mov inc adc test (bad) (bad) (bad) (bad) jl pop xchg fidivrl in sbb adc hlt push xchg fnstcw lock xor and push push shrb outsb jp jg fs cmp addr16 cmp iret clc repz (bad) (bad) dec push and fstpt icebp leave iret jle mov push scas je je mov (bad) (bad) jmp addr16 jl mov xchg sub scas mov or pushf xchg xchg aas push (bad) (bad) (bad) decl ja or loopne cmp add gs movsl leave fldenv or jp sbb jbe or push lea aam stos push ret (bad) pop outsw or outsl and push mov fnstenv xchg fidivl aaa add stos lret movsb sbb (bad) (bad) ljmp sbb cmc into pop xchg mov cmp (bad) mov sti jg sbb dec loop stos inc enter (bad) (bad) cld int mov stc or pop lods dec jns add movsb cmp (bad) (bad) incl adc mov or fdivrl lcall xor arpl lea in cld pop lea mov or (bad) (bad) (bad) pushl cmp xchg ja adc call or stos sub and xor scas jo (bad) (bad) (bad) push movsb push fsubrl je or sbb jne push imul jne adc push loopne adcl fistl fs jo cld (bad) (bad) mov not dec insl popa sahf or jo jo scas push push mul mov mov xchg addr16 cmp jmp mov es aaa cld dec fdivrp push (bad) inc pusha pop add shrl fisttp or (bad) decl jb shlb cmp andl xor clc sub cmc push (bad) (bad) (bad) jmp mov push lret jb mov jno cld je outsl xor cmp mov lock mov push fcompl mov cmp sub outsl (bad) (bad) decl fiaddl push mov fsubrs outsb mov movl add arpl (bad) (bad) (bad) pushl push out xchg push inc xorl in das out icebp mov dec pop stos in dec pop jno inc or (bad) (bad) (bad) jmp add sbb dec into movsl xchg and dec cmp inc cmp in data16 lock loope incl out xchg adc movsl pop push add repz cli inc cmpb (bad) decl pop arpl mov mov cwtl jg inc test xchg scas rcrl (bad) (bad) (bad) pushl scas and push cmc push ljmp fstps mov pop daa or (bad) (bad) call aad and shrb insb popf sbb hlt imul sub aam sar (bad) (bad) cmp sub sub insb aaa je lods xor cmp jbe repnz inc loopne mov sub jmp cmpsb pushl mov out jbe xchg les add pop clc and and (bad) (bad) lcall dec nop test (bad) (bad) or cltd sbb mov jmp ja (bad) icebp jmp inc cmp incl sbb call cmpsb cmp jmp jmp iret mov mov and pop mov sbb mov xchg cmp dec sar push hlt jl push in sti in adc (bad) (bad) (bad) mov (bad) adc pop jno sub out jle jmp sub std lret jns sub (bad) (bad) aas pop cmp sub mov add int3 arpl pop fstl pop aad loop (bad) mov lret loopne push icebp and (bad) (bad) ljmp ds pop adc adc mov repz xchg cmp sti movsl push movsl rol (bad) cmp fwait mov jnp xchg and lods add push push xchg lahf sub (bad) (bad) mov jmp adc jb pusha jns mov ficompl push jecxz sub pushf dec cmp mulb (bad) (bad) (bad) jmp test scas push rcrb and jge xchg icebp jb inc sbb pop mov ret xor (bad) mov jns dec div push and (bad) jg inc pusha outsb sbb std sub les (bad) add test (bad) ljmp pop mov out and popf push fistpll stos in rorb sub stc mov xor mov pusha lods repz mov push pusha mov (bad) sbb int out ds aaa lret fist (bad) call mov mov repnz xor aaa test call cmpl pushl cmp ret add jae push ret adc aad cmp aam fs imul inc fisubr gs outsl (bad) fcomp and pop lds mov lcall lcall out in lds jmp sub fstl mov mov (bad) mov jl aas adc dec add rcr (bad) idivb gs fstl mov mov out fisttp xor test jns jae mov addr16 push mov jmp mov stos std jno add repnz (bad) (bad) call sbb fidivrl jmp inc div push inc (bad) out pop aas mov mov out scas mov fs (bad) fcomip jge xor pop and int3 ficom in push adc sbb lods test (bad) decl sbb jbe flds mov add or ss cmpsb jae pop out loop (bad) lcall xchg fimull mov popl push xor lea sbb out dec cmp stos adc sub leave jne sarb cmpsb push and mov dec cmp cmc adc loop jg (bad) nop sbb xor jno mov push sbb cmp dec (bad) cltd jne sar int std ret mov dec cmp or lock leave (bad) dec insb mov (bad) (bad) fistp lea mov or cmp inc dec jno in cmp and (bad) (bad) (bad) clc xlat ljmp jbe enter lahf es add (bad) mov dec xchg xor add in (bad) (bad) (bad) fist test sarb fnstenv xchg je xor loope cmpsl lea mov outsb jae popa lcall sti mov (bad) pushl jle in aaa push les lret sub push or dec into bound (bad) (bad) (bad) ljmp sub shll mov jae or scas les data16 jg sbb jae mov pop dec mov ljmp sbb cld (bad) sbb xor ljmp test cli (bad) subl mov mov or lcall xor loop or cwtl ds push cmc (bad) (bad) jl pop xchg add test rorb imul daa and (bad) decl out push stos cli movsb adc add (bad) (bad) jg fs inc xor je sub sbb inc movsb add int sub movsl repnz les (bad) (bad) dec lahf les xchg shrb adc in cwtl sbb push inc stc int3 adc jo data16 (bad) mov fpatan nop lods jno or inc push jno pop and ds loope dec mov jns lods cmpsl cmp jmp cmc pop adc test mov (bad) (bad) decl ds jns dec adc xchg cmp cmova insl nop sbb sub cmp sub or mov mov lret (bad) (bad) cld push jo loopne (bad) jae xchg add ss xor xchg popa (bad) (bad) (bad) incl loopne sti icebp jno scas push and addl nop movsl mov mov push jmp clc fsubrl sbb ds sub rol in (bad) (bad) (bad) incl js aas xchg mov xchg and xchg pop jnp (bad) jae pop sbb jae insl xchg aam xchg (bad) (bad) (bad) jmp shrb lds rcll xlat lcall (bad) call (bad) cmc in dec push inc xor (bad) jg push lods cmp jns mov fadds jmp hlt orl mov xchg xchg dec rcll ss rcrl (bad) ret jle xor inc jne mov clc add sbb (bad) lock insl (bad) (bad) mov scas or inc dec adc fsubl xchg leave rol clc mov mov jmp mov adc cltd into xchg dec lea lods lret pop wbinvd int3 lcall inc inc add fnstcw movsb mov ficom fstpt xor insb cs (bad) (bad) (bad) call cwtl adc dec pop stos mov (bad) cmpsl sbb loop or rorb jge pop out pop incb cld mov xchg adc (bad) ljmp in inc in test fmulp bndldx cmp mov xchg cmp jmp jmp (bad) cmp fwait je xor std outsb dec inc or sbb mov lret cmp (bad) xchg jp dec in or or sub in jns dec (bad) ljmp pop std (bad) pushl pop into leave jb aam cwtl pop mov xor adc (bad) (bad) (bad) lcall or stos xchg sahf cmovle test jl jns (bad) js jne jbe (bad) (bad) ljmp adc xor mov movsl xor mov in jne cmp pushf (bad) (bad) (bad) call movsl or leave sbb mov cmp pushl mov pusha aam ljmp mov outsb addl (bad) stos pop popf test inc test mov in jg popa add inc das ds sbb push push mov (bad) (bad) mov repz ret insb lea pop or test mov push bound cltd push adc mov pop idiv (bad) (bad) decl sub test dec pop pop ja mov pop aad mov xchg (bad) (bad) ljmp add call (bad) fidivrl mov aas inc dec in sbb jns xor sub mov cmpsb shl test test jns fild (bad) call cld inc sub jmp rcll pop outsl sub sbb xchg pop lret jecxz popa (bad) and push mov dec cmpsl pop jnp pop xchg fisub sbb jecxz push movsb into cmp adc (bad) lock jg cmp inc mov out (bad) movsb mov or out gs (bad) lcall pusha mov pop test jne and fstpt push xchg negb xchg mov xor and mov test int (bad) (bad) (bad) lcall (bad) (bad) aas cmc repnz adc jge jg fmull mov sbb cs cwtl inc dec lret pusha ret (bad) (bad) lcall lret xchg fsqrt push xor sbb push lahf rcrb adc (bad) (bad) (bad) jg add jge push sub xchg jnp in pop addr16 pop inc outsl in dec fsubrs and (bad) (bad) call std shlb mov dec push push push jb mov hlt dec mov xlat aaa std (bad) (bad) jle jp (bad) lahf push inc fsubl out jo and js fadds (bad) xorb aad adc push mov scas incb cs hlt (bad) jle es hlt (bad) jg ds push jl sbb shl mov out scas imul sbb (bad) push fs mov lret pop maxps (bad) (bad) in ja setp sbb push movsl scas pushl push insb das or xchg (bad) mov pop adc dec pop ffreep push mov push adc xchg loop inc cs clc jmp repnz jbe and in dec push call xchg add lret or xchg movl js xchg addr16 rcll mov inc xchg jl insb lcall das adc inc mov mov mulb ret cli pushl mov sbb mov negb dec mov hlt enter push push adc jmp ds cmpps (bad) jl push imul out adc xor out (bad) mov nop adc (bad) (bad) (bad) sti push mov imul fiadd cmp adc mov js (bad) jne add int lret xor pushl lret jnp imul jmp incl and (bad) dec mov adc cmp and enter (bad) (bad) dec dec jge jb jle add and cmc ljmp xlat imul (bad) ljmp stos mov mov push popa xchg sar pushl add pop push xlat mov scas ljmp dec sar (bad) (bad) pushl push das xchg int jbe mov in gs ja fdivl ja ficom (bad) jle dec sti clc loope std mov mov sbb gs sbb jg dec ficomp sbb pop lods inc ds (bad) ljmp pop sbb jecxz daa fisttpll negb repz (bad) ljmp inc and mov icebp aas (bad) rolb icebp decl sub fnstenv jp push (bad) (bad) (bad) (bad) mov mov insl bound lahf cmp mov or pop jle or test dec cmc adc mov (bad) (bad) (bad) jmp push lds (bad) js arpl pop mov lret lods xor pop int add dec inc jecxz iret mov pop mov mov jg and lods and push jmp cmp aam push (bad) repz je and (bad) (bad) decl xor and inc dec ret test jge and inc mov jb pop jmp mov arpl jle mov shlb fwait mov mov call xlat fwait jbe addl dec sub jle jnp mov (bad) (bad) (bad) (bad) cld cs test sub xchg mov movlps sub mov fcmovne xor cmp mov push lret add daa sub (bad) das cmc add xor dec sub sahf (bad) (bad) (bad) (bad) ljmp shll xchg xchg aas add and mov subl sbb or pop jmp and orl push xchg mov es in lret cld (bad) (bad) decl jno in xor out add ret push mov out inc neg stos jb or add lods fdivs jl clc idiv imul (bad) (bad) (bad) (bad) fsubr loop and inc mov notl or out loope sbb loopne iret loopne cmp (bad) (bad) jmp push aad cmp inc push fisubr mov inc pop lret imul or test hlt arpl scas enter ror lret out mov push push test pop jmp icebp aaa aaa sub mov mov sbbb icebp (bad) (bad) out (bad) incl mov mov and rorl lock cmp sub (bad) (bad) (bad) lcall aam arpl jg pop imul out mov inc jns cwtl adc leave (bad) (bad) (bad) (bad) mov lods fs push mov sti mov xchg out fcomp push pop dec iret stc sub (bad) (bad) (bad) ljmp dec sub in sbb sbb push xchg mov lahf jne nop and pop popf bound call (bad) incl into stc mov sub sbb pop inc loop call and faddp sbb sbb bound std (bad) ljmp push roll dec pop mov pop fs pop xchg cmpsb call (bad) incl loopne mov push repz fisubl fmuls or push cli aas xchg sub jbe mov ret mov xchg out ret jns enter cmp (bad) jg fild sub jp mov jecxz mov sbb imul (bad) (bad) push push insb mov cmp sbb scas sub xchg movsb hlt (bad) pop push sar xchg call dec repz fwait in jmp push adc add dec (bad) mov lcall sahf ds out pop test add dec mov test or (bad) pushl adc lahf outsl sbb add pop sbb jmp adc std (bad) incl ds inc jbe mov inc cmp dec sub sbb std pushl jae outsb sbb cld xor mov jg or popa push hlt loopne ds dec or movsb cmp or iret sbb ret mov adc push jo arpl (bad) (bad) mov insb lock jl pop leave pop inc or decb or (bad) enter mov (bad) fnop jmp (bad) (bad) ljmp cmpxchg or adc xor pop or (bad) scas in lods imulb nop popa and jmp dec (bad) stc clc addr16 mov es pop push mov out adc fildl ja popa shrl (bad) (bad) (bad) (bad) (bad) (bad) stc ljmp cwtl lods decl fbstp push (bad) stos and add call (bad) (bad) (bad) incl add jno jp push dec int js test cmp (bad) or (bad) (bad) (bad) (bad) aas out pop arpl sbb sub sbb lods movsb lcall push hlt mov mov ljmp or std ja mov dec gs jo (bad) (bad) inc inc (bad) (bad) clc xor insl rorl jmp fisttpll (bad) testl (bad) (bad) (bad) call clc leave push loope cwtl nop sbbb xchg repz scas dec es add fdivr loopne pop test sti and es jb mov (bad) (bad) (bad) call subb in sar push popf pop sbb fsubrs std shl mov xchg cmp incl push cld mov add aaa cmc fdiv mov sbb lret inc mov cmc (bad) (bad) call sub push cmp stos aam cwtl dec outsb lret hlt test xor into imul dec jns mov (bad) jnp divl xchg sub add loope xchg xchg pusha and add sbb mov mov (bad) jmp mov inc pop movsl fmulp andb (bad) lret pop sbb jl fadd jae inc addr16 in sar lcall jmp sahf mov (bad) int int dec aam sbbl das adc lret xchg insb in fidivl cmpsb mov outsl add mov add fwait pop xchg lods (bad) ret ds aaa cmp sbb jl shll dec out inc jae adc sub pusha cmp lcall jge cmc fwait sub fidivrl (bad) int3 fist or adc sbb fs (bad) ljmp fs mov mov out es movsb push cmp and test (bad) lcall pop pop popa les inc loope decl pop sub (bad) aaa (bad) repz inc jg (bad) lcall xor rcrb scas daa xor aad das xchg push addr16 std sbb xchg adc (bad) (bad) inc movsl cmp sbb loope mov scas imul or incl cmp loope scas cwtl mov stos lds pop adc xlat (bad) (bad) decl xchg dec sbb stos scas jns pop lock hlt and mov test lock push mov in rcrl (bad) incl sarb xorb jnp cld ss leave out and hlt ljmp push sbb in ds lods sub outsb (bad) jo inc ret in cmp xor sbb jno imul mov jbe (bad) (bad) (bad) jg mov mov mov sub adc faddl daa lds in icebp ljmp nop pop and or (bad) xor pushf aad pop adc cs call fstpl ss addr16 (bad) mov ljmp adc ror mov cltd mov mov or push bound xchg mov addr16 lret pop pop inc test movsl (bad) lcall mov les xchg jnp (bad) ljmp stos push mov test or mov dec fmulp repz xlat mov (bad) (bad) (bad) jge adc lahf daa hlt rclb (bad) ja iret (bad) out and loopne scas popa pop pop (bad) (bad) (bad) push sbb mov push mov aaa xchg shll jmp push cmc push sub dec (bad) (bad) (bad) ljmp out jnp mov mov cmp push jns sahf jge inc push rcrb sahf pop push lret and (bad) (bad) ljmp inc xchg (bad) xor jg loope lcall mov xchg and (bad) call jne lahf (bad) mov add inc cmp outsl lahf cmp mov pushf lods ret (bad) or sbb (bad) lcall sbb das pop call fisubr jno imul lcall dec xor out negb fisub ret mov cmc (bad) (bad) call add mov cmc outsl inc jne push mov mov lds cld sbb scas sub mov pusha mov (bad) dec or fidiv cld mov or int lods fisttp adc mov xor sub (bad) decl push pop rorb or dec mov (bad) testb nop insb fwait xor jbe ja and (bad) (bad) lcall mov add mov fs out cmpsb mov insb mov adc adc andl mov (bad) jle ds out mov jmp and inc imul shll xor mov (bad) pop fiadd loopne (bad) lcall push lret test insl outsb fdivl cld inc mov fcoml insl (bad) pushf stos sti push mov in fsubrl negb sbb xor push (bad) (bad) (bad) jmp jge pop or xchg pop mov jae dec add or in icebp out (bad) xlat mov dec mov dec jnp cmpsl push pushf push push and (bad) mov mov lods adc xchg fildl loop repnz outsl mov decl push mov fnstcw adc xlat daa sbb inc xor icebp mov mov cmp and pop inc push jne test shrl stc aaa fildll (bad) lcall jg pop insl dec jmp push iret adc pop pop (bad) clc (bad) jmp push push mov (bad) jecxz into sub in aam test dec es jb mov xchg xor mov lods mov out pop xchg xor mov dec dec in xchg movsb dec in jno (bad) pushl cwtl mov push stos mov sub mov (bad) (bad) (bad) inc dec jae mov in lcall les pop sbb or jae sbbl adc scas and sti mov mov and pop aam xchg (bad) ljmp cmpsl icebp (bad) pop mov and cmp pop pop xor mov mov mov cmp (bad) jbe add mov pop lcall lods mov push xor cltd xchg mov sub mov cmp dec ljmp push xchg daa xchg popa jnp mov into mov jo shrl mov sti cmp mov insl sti lea cmpsb sahf das xchg mov int3 pop mov pusha jae push push mov push loope,pt (bad) (bad) call andl (bad) mov adc adc (bad) je mov inc or enter pop decl popa sbb and lret sub pusha fnstcw push adc adc xor sahf xchg pop shrb sub fnop push (bad) (bad) (bad) decl adcl jmp and cmpl ss mov sbb loope jp inc xor add jle aad inc jg decl inc xchg cli (bad) mov cmpsb fnstcw push adc sub (bad) (bad) call loope mov mov jmp sbb xor gs jle (bad) (bad) incl jecxz fwait nop test repz mov jno dec icebp enter inc adc (bad) (bad) inc int outsb push push xor scas fmuls mov xchg adc fistl xchg jmp pop adcb (bad) (bad) jmp loop or jecxz xor or xchg jecxz imul clc jb cs lock (bad) push shrb popf enter mov fucomp xor sub or popf notl mov lret outsb sub xchg mov mov leave in xchg jg dec cld (bad) data16 mov push (bad) and scas xchg mov stc xchg xchg (bad) (bad) decl xor push je out mov mov (bad) (bad) (bad) decl mov (bad) mov or xor and push (bad) sahf fisubl sub (bad) push dec dec jge or sbb fisub bound pop in lods in scas xor mov push sbb (bad) (bad) (bad) arpl (bad) pop mov lret adc mov push (bad) jg and cld push pushf cld mov sti xchg mov and lock sti in sbb jecxz push lds mov (bad) call mov outsl mov fist das in popf fadds movsl outsb mov shrl (bad) (bad) lcall fistpl pop xchg xchg clc pop pop or lock mov insl leave into (bad) (bad) jmp xor repnz add loopne (bad) insb pop and cmc (bad) (bad) jmp lahf lahf js mov je sub les xor xchg adc lea mov cmpsb cli push ds lret in or adc jmp in (bad) (bad) (bad) (bad) dec dec decl inc pushf mov nop xchg mov jmp pop sbb mov mov jmp (bad) (bad) fwait test divb pop out ficomp sbb sbb dec mov adc cmp pop mov and mov pushl (bad) arpl icebp mov cmpsb push loop fiadd jg sub (bad) (bad) decl fldl xor ljmp out (bad) icebp std into in xchg test (bad) (bad) (bad) decl lret iret outsb cmp xchg insb movsl fwait or fs mov fs jb (bad) (bad) call xchg (bad) repnz movsb sub fistpl nop dec pop ja mov sti das jmp (bad) ljmp jne pop or cld lods in repnz aam rcr mov (bad) aaa std (bad) (bad) sti sub pushf out add jae mov aad imul jbe xor mov xor xchg outsl push setle or or (bad) (bad) push mov pop (bad) cmp pop (bad) lods ss add dec and ljmp decl xchg jl,pn fisubl mov adc jmp arpl inc fcoml mov jae stos mov addr16 lods mov fcomps xlat cmpsb push ds (bad) (bad) call outsb mov jb pop sbb xchg jg (bad) outsl (bad) test mov pop lock ljmp and mov lahf sarl divl cli outsl stos outsb pop clc xchg lret in push jg (bad) incl ds imul mov (bad) fsubs sbb push pushf cwtl popf dec icebp sbb xchg pop nop lods mov (bad) ja (bad) mov (bad) idiv (bad) jmp jle dec in dec xor fs jecxz pop repz pop sub rcl or (bad) incl or inc or adc test scas (bad) pushf ret in or (bad) jmp cs mov into adc (bad) aam add stos push jecxz outsl sti cmp (bad) (bad) (bad) pushl push pop add in jbe sub iret scas sub add dec mov pop add bound mov ret jne (bad) incl fbld lods sub jnp add dec cli pop inc frstor aas lea icebp ds cmp int mov push sub lcall sbb pop xor pushf lret sub lahf nop stos dec fwait dec mov (bad) (bad) (bad) mov jb mov cld clc movb lcall ss xchg hlt incl imul test jl mov or dec lods inc jge insl jae and adc and sub (bad) (bad) jmp (bad) xlat mov insl nop sub xchg call rcrb inc push jns adc xchg add (bad) (bad) ds sub xchg sbb dec xchg dec dec rcll cmpsl jp push je pushl inc jb,pt test in mov mov inc sub (bad) (bad) ljmp fbld add sbb or das adcl mov ljmp (bad) dec pop movsb out je mov sub cli ret jge mov mov addr16 ljmp sub mov les inc icebp lcall (bad) pusha cld mov lods push into jne leave jne out (bad) push js (bad) call fwait mov inc sub adc jmp arpl pop std (bad) (bad) cli cmp imul iret (bad) mov loopne out pop cmp cli bound mov mov pop add outsl out xor lahf mov les (bad) ljmp (bad) lret jmp pop mov mov jo jge (bad) mov (bad) (bad) (bad) (bad) mov fidivr xchg imul fwait add jge dec or andl mov and sub xchg sahf cmp add (bad) loopne movsb enter mov sti or fdivrp mov push pushf adc adc (bad) fbld jl aam mov add cmovge jns xchg sub mov jo (bad) (bad) inc pop lret jmp xor sub out pop xor ljmp xor mov ficompl lcall mov push out adc jmp ds cmpsb mov mov mov cmpsb imul (bad) (bad) dec and ja icebp mov jno xchg mov sub sub lock shlb clc push into loope xchg cmp (bad) lcall push mov cltd (bad) fdivrl mov inc xchg dec mov pushf in fisttp (bad) call aad shl jb enter in inc mov mov es ljmp mov mov cwtl mov mov mov lods nop stos ss decl in xchg lea mov loop lods cmp lcall lcall adc inc testb xor jne ds (bad) (bad) ljmp sbb push xor and xor stos outsb pop shrb dec out ds lcall adc jp (bad) pushl shrb xchg popf fcmovu sub inc push sub xchg inc or mov sub (bad) (bad) (bad) (bad) jle dec fwait loope nop (bad) sbb lret rolb je xchg pop out movsl sar (bad) (bad) call jge or adc xor addr16 pop lret cmp insb imul push repnz aad mov aad sbb (bad) fldt lahf push aad jmp sahf ja les outsb nop mov and (bad) imul cmp (bad) (bad) decl aaa pop xorl lahf xchg push inc adc mov (bad) incl ds addr16 (bad) js ret ljmp lcall jge adc dec (bad) mov lods push mov stos or xchg xchg inc xchg movsl aaa std shll jns lds and (bad) mov add mov inc sub mov xor mov call (bad) inc and xchg lret (bad) movsl jbe inc clc icebp jp or mov popf shl popf jmp mov (bad) in push dec jne adc mov ja inc pop ljmp cli ljmp mov cli ss nop cmpsl push pop dec add mov fsubl sbb cmp (bad) (bad) call repnz sub mov into mov or pop dec rolb decl aas iret push jbe or xor jecxz (bad) (bad) call jne sub jmp popa test dec gs mov mov scas xor aam xchg (bad) loop icebp test sti and int3 out mov (bad) (bad) dec xchg inc call (bad) mov xor mov mov jmp pushf ljmp hlt rcr dec and outsb (bad) mov pop iret or or jbe cmpsb or call push shll push xor lods dec enter push outsl or daa stc rclb fcomip sahf adc dec xchg in lds call lret mov (bad) (bad) (bad) jmp (bad) arpl repz mov add mov nop das pop (bad) (bad) jno or lock leave pop pop or pop inc cmp loope addb (bad) decl inc (bad) mov aaa add ss pop pop sbb (bad) call lods mov fsub popa sahf jl ja cli mov testb sbb or mov (bad) (bad) decl rcl (bad) sub cmp mov adc mov (bad) (bad) (bad) jmp cmc add (bad) rol mov xchg pop insb mov jmp (bad) arpl push popa push add fsts and xor push push in sub call cld jb sbb loope negb test inc lods ficom add shrl dec xor mov xchg sar das ljmp cmpsl out out adc mov ljmp mov pop mov jne xchg enter dec in pushf gs sahf movsb pop xor (bad) (bad) incl sbbl jg xor shrl (bad) push inc dec (bad) cs cli (bad) fsubs gs (bad) fsubr negl (bad) incl ret mov fdivl and push sub push and mov (bad) (bad) (bad) (bad) fiaddl loope push test int lods int jnp jmp xor xor loopne fwait mov sbb (bad) (bad) (bad) call and jmp aad into add and (bad) or fcomip out repz ret xchg cmp and scas clc decl in mulb cmpsl test out movl mov cmp jno dec rorb lret (bad) pushl gs mov das cmp mov (bad) lods (bad) loop in leave movsl lret pushf or arpl aam dec (bad) (bad) (bad) lcall (bad) jl stc mov lods inc jp mov fidivrl xchg std add mov stos (bad) (bad) dec mov cltd into in mov (bad) (bad) xor ret pop jmp pop fisttp mov mov aad mov sahf push lcall and test scas mov sub aaa and (bad) incl outsl sbb push mov dec les lcall adc sbb into pop jl int and pop push fadds (bad) ljmp mov cwtl lods jo adcb pop (bad) int3 fisubr stc loope adc (bad) (bad) (bad) (bad) (bad) mov sub cmp jp mov and fs push sbb push xchg lods adc (bad) (bad) (bad) mov (bad) xchg sbb adc (bad) aam mov aam dec (bad) cmp push xor jg aaa pusha sahf in daa add into stos jp,pt add fcomip ljmp cmovl dec xchg push aaa or cmp iret add (bad) incl test xchg (bad) out mov mov lcall cmp pop (bad) divl push adc ljmp loope ret add (bad) sub pop dec push cmp push (bad) jg movsb call and dec fstpt sbb mov jmp inc clc cltd adc adc test outsb out sar (bad) (bad) ljmp xchg mov pusha andl push add outsb push mov jp cmpsl push clc arpl das xchg xchg mov (bad) (bad) ljmp lahf aaa rorl or push push pop cs sbb mov sub in in and call loopne cs es mov sub imull ret (bad) inc jns gs lcall movb push push push push jae insb lods and dec sahf cmpsl jecxz and xor xchg and mov xchg aas std (bad) ljmp mov shl arpl mov mov mov push add (bad) call sbb in add jge pop ljmp inc xchg mov mov lock stos (bad) (bad) (bad) out sub jae int inc lcall call mov (bad) (bad) (bad) call mov ss aad (bad) sbb aad mov xchg popa cmpsl sbb inc dec mov jns (bad) mov cli inc lods int xchg idivl je sbb pop icebp enter cld testl (bad) (bad) mov les jmp dec int3 div and repnz dec loope aas sbb (bad) (bad) (bad) lcall sub push (bad) xor arpl ss insb pop in mov adc pop push movsb movsl (bad) jmp pusha inc mov ret sub adc into cmp icebp stos (bad) (bad) (bad) call jg mov addr16 adc jecxz in add fwait test pop test add (bad) (bad) (bad) ljmp fs inc clc lock pop ljmp dec loop je cli mov push dec incl test inc xor jb,pt mov stos stos add scas dec mov and xchg mov (bad) mov sbb or pop mov fst xchg sbb inc mov test pop shl (bad) lcall enter pushf rorb in mov je add xchg fstl out (bad) (bad) (bad) mov std inc push jne xchg and push mov daa push and outsl jno and out test xchg sbb insl lcall lea push iret sti sbb (bad) cwtl add (bad) (bad) (bad) jg in loopne sahf pop mov ja mov mov jmp sbb and push jp jmp (bad) mov test hlt or (bad) (bad) incl cld jne inc add leave sub aaa clc cli xchg test push leave aas sbb jg decl xchg adc ret xchg mov mov lock dec sbb push fmulp stos xchg push rorb mov jecxz mov xchg loopne jns lcall (bad) (bad) push dec xchg push popa fdivrl decb pcmpeqd add out fdivrp rolb xchg (bad) (bad) jg dec push in lods imul out test sbbl (bad) (bad) (bad) ljmp lcall jne jl push fcomps inc mov push lock fwait inc add pushl dec test data16 (bad) (bad) dec push icebp pop cli mov dec inc dec mov loope mov iret std or mov (bad) (bad) (bad) (bad) mov roll ret aaa ret gs sbb mov push nop repz rol push call sbb cld xlat ds (bad) call pushl clc or pop ret cmpsb out cmpb adc incb lea scas pusha je push mov sub scas arpl repz daa ret in lret in jns ljmp lods insl sti (bad) in and xor cmpsl add cmp rcl (bad) (bad) (bad) mov mov popf mov add sti adc sbb mov (bad) mov lcall rorb cs push out jle lret imul jmp inc cmp dec (bad) mov inc push push notb push cmp outsb sub leave mov (bad) (bad) lcall jecxz scas test add pop xchg sub mov fs jmp push fs mov mov dec lahf mov add sbb iret (bad) push fisubl inc flds xchg scas clc (bad) jmp int shrl xchg mov fsubrs lock lcall (bad) inc scas or arpl and (bad) add cmpsl xchg adc in test orb cmp decl fwait ds (bad) gs sbb lds push je test mov repnz mov (bad) in int mov lahf test add iret popf add pop insb jo adc jno push and out call (bad) sti sarb shrl (bad) (bad) (bad) call shll (bad) xchg pop jae,pt cld push incl jp in gs inc and (bad) (bad) (bad) lcall inc pop adc or mov cs jo rol shrb push pop add lock mov adc es (bad) pop not or ljmp mov sub sbb mov fmul ja mov push or jg pop out in mov sub ret dec jecxz fidivrl leave ds push mov jmp (bad) repz mov xchg mov mov mov jmp outsb inc add sarb fstpt and dec ds sbb insb idiv (bad) int ret nop push push pop icebp out cli decl shrl aam icebp pop int insb xchg pusha fnstsw fistpll cmp add inc cmp and and daa or mov mov sub js repz (bad) std fwait std (bad) (bad) stc jge aaa imul popf dec js inc mov jns mov xor (bad) (bad) (bad) call (bad) and shlb andl xor jmp mov jge out mov (bad) (bad) (bad) jnp repz xor or mov in ret xor and orl jmp sbb add into into inc idivb sub mov (bad) test mov fbstp std ljmp mov imul ret cwtl sub cmp icebp out dec fnstenv inc les mov (bad) (bad) lcall add pop adc and ret sub fadds shrb cmc (bad) dec xor ret push mov ret sbb sub jl sbb or int (bad) (bad) (bad) pushl repnz mov inc push lcall es pop fistp add jg mov inc add lcall fs and inc xchg push cwtl cmp (bad) ljmp push pop bnd jb imul (bad) (bad) (bad) jg fidivr aad push test ret and outsb sub fldt (bad) xor xchg mov (bad) (bad) (bad) incl je nop scas mov pop cmp scas xchg inc fisubrl sbb ds inc pushf sub jmp (bad) jg les into push jmp xor inc and dec ljmp (bad) (bad) (bad) decl shrb inc xchg push xchg (bad) fadd stos aam call orl (bad) (bad) (bad) call and mov inc maxps mov add lret add out dec enter (bad) dec les mov (bad) enter dec out movsl sbb nop push (bad) mov adc dec decl lock xor mov or or ja mov add (bad) (bad) ljmp popa in aam lret mov (bad) hlt in xchg inc out int3 (bad) lcall (bad) (bad) (bad) call jg or in ret fdivrl sbbl mov (bad) (bad) (bad) (bad) cmp sar movl repz cmp mov xchg (bad) insb rorl (bad) jno test aas call es std fidivr imul xchg insl (bad) ds pop (bad) mov jnp loopne fsubrs movq arpl and pushf nopl adc pusha cwtl cwtl shl (bad) (bad) (bad) lcall das or leave add fmull mov inc push rcrb imul sbb and frstor pop cld (bad) incl mov xchg sbb jg cld scas ss iret in ss cmpsl aam pushf dec ljmp jg ds fisubl mov das cmp aaa cld fistp mov adc out outsl dec dec inc dec jge dec dec (bad) (bad) (bad) incl inc xchg jge cmp notl test sbbl pop xchg dec icebp push out lret mov js adc push (bad) test pop sbb (bad) (bad) (bad) pushl mov ficom mov (bad) (bad) inc repz insl sub dec mov (bad) (bad) (bad) ljmp cmpsb fldl out pop mov stc movsl add cmc cltd mov pusha lds stc mov mov sbb mov xor sub pop outsl popf xor xchg out push jge ljmp in cltd ficomp or push daa mov push mov xlat pop fs aam mov adc mov (bad) incl pop mov fisubl xchg xor dec cli std into std cld or outsl jle ds jbe (bad) scas and fistp std dec pusha pop xor call (bad) popa das xchg ljmp dec jbe xchg inc adc dec fcomip fwait push sbb std sbb and push (bad) (bad) jg pop nop sbb mov mov popf ret jmp dec in sbb es fstps (bad) jmp lret dec andl jle push mov out mov lea hlt ljmp inc nop mov jle popa sbb cmpsl add inc lods enter loope,pt (bad) mov cld ficom out aas enter pop imul dec sub push cs xchg movsb lcall hlt cs lahf jg push inc aad ds pop (bad) pop pop loope (bad) jg dec or xor mov in xor sbb pop (bad) mov sub data16 aas scas fmull call outsl mov pop pop lock inc sbb cmc enter aas mov xchg xor hlt or (bad) lcall add fdivrp test jnp loopne dec (bad) cmp push adc (bad) ljmp lcall and inc jmp iret cmpb and and (bad) or cltd push (bad) (bad) (bad) incl mov ljmp jp (bad) xor pusha insb push mov (bad) dec rolb (bad) lcall popl jmp (bad) fldt loopne mov scas or mov scas repnz add inc in and push jge clc ret (bad) jnp call fcmovnbe pop mov pop sarb lcall das mov mov and and jb mov sub hlt (bad) jg ret mov aas xor aam jnp movsl es iret cmp sarb push mov and add adc (bad) (bad) inc sarb scas orb and orl mov jge adc dec outsb push mov insl shrb call push test repnz and add push mov sub ljmp (bad) dec lods add dec lods push gs jmp mov mov (bad) push or push and cmp (bad) lcall inc or pop mov cld sub orl (bad) (bad) (bad) pushl adc out mov test jno sar dec ret bound inc test push std sbb inc out xchg ds cmpsl sub or loopne (bad) (bad) (bad) mov test mov scas repnz decl into dec ss add (bad) (bad) (bad) ljmp shlb push xor cmp and aad or cmpsl loope inc out (bad) jns cmp push mov mov test push inc cmp jo mov xchg shll lret inc sub push loop (bad) lcall lret inc mov repnz outsl inc test adcb lods jge insb jmp call add stos out scas (bad) pop pop pop addb jmp mov mov cli xchg jge cli xor mov popl sbb jg cmp xor (bad) (bad) jg movsb ljmp and (bad) pop push inc dec sbb movsl push int cmp mov (bad) decl xchg pop mov iret push sub xchg out shl lret (bad) (bad) ljmp out jmp cltd sti cs or sbb movsl cmp bndldx mov xor (bad) (bad) (bad) decl dec lahf mov scas icebp int ljmp in xor call add outsl clc (bad) jmp lea shrl cld flds jbe pushf les cmp cld (bad) (bad) fmull (bad) cmp push fmuls jb push test adc dec sub (bad) lcall lea sbb xchg mov push repz (bad) (bad) pushl inc test test jp jmp lods jae das or jge movsb imul (bad) (bad) (bad) call ljmp repz cmp xor jmp mov test fisubl fnstenv movsb xor push xor repz mov or sbb call call aad lods inc xor or mov inc or inc cmpl push jae add outsl inc xchg hlt or and out (bad) (bad) xor hlt jmp fmulp cmp and pushf hlt in add in ljmp sbbb mov adc jl push mov cmp (bad) (bad) cmp das fmul or mov cmp mov jae mov gs sub (bad) (bad) lcall sbb inc dec xchg cld shll int3 gs add fidivl mov inc test pushl ljmp ds cmp and (bad) (bad) mov repz aas jb stos inc lret out loopne mov adc stos lock (bad) (bad) (bad) push loopne xchg pop mov mov je test loopne in iret xchg jle mov test fxch and fdiv decl push mov cmp xchg push (bad) (bad) incl fimul xlat ret cmp push xchg sub pushf push (bad) (bad) (bad) inc sbb jae (bad) sarb (bad) mov push pop movsl hlt push je mov dec fwait and scas (bad) (bad) (bad) jmp xlat cli ja dec xlat push (bad) sbbl sti xor out add in xlat push pop cli (bad) fucomp stc or aas incl ds (bad) incl sbb aaa aas jae lods ja xchg xlat outsl sub cli (bad) (bad) incl mov cmp loope sub mov mov or sub lods in jg (bad) sti ds imul xchg imul mov jp imul mov and cmc push jmp ljmp cli lcall xchg add (bad) pop inc (bad) mov (bad) cmc enter mov sbb (bad) call pop pop movsl sub jnp popf sub push pop inc out sub cld aaa dec aam (bad) ljmp idivl add mov (bad) (bad) incl movsb (bad) cmpsb jns fildl xor (bad) mov add jne (bad) (bad) (bad) (bad) mov jmp mov and in xchg insb pusha cmc adc dec nop xchg pop inc fbld pop dec or rcr mov mov je (bad) (bad) (bad) (bad) fldenv xchg mov push imul or xchg mov cmc ret xlat xchg (bad) (bad) (bad) call dec daa lahf mov cwtl mov jno iret js sar pop enter mov xor pavgb or sbb pop mov pop in xor mov sbb sahf cmp mov cld or shrl add or cld loopne mov or gs mov xchg jbe,pn sbb mov (bad) inc jmp (bad) sub mov mov mov xchg lock (bad) incl pop push and xchg pop jb imul mov xchg jge in out mov xchg xchg adc call adc sbb add in push and (bad) (bad) call xor and not out mov mov sub leave inc mov xchg (bad) jg jg inc in bound pushf mov leave xor add or jmp (bad) incl mov pop popa mov inc push push (bad) (bad) ljmp ljmp cmpsl xchg int3 outsl movsl push push jae fidivrl sbb (bad) out add jl add loope leave xor test (bad) call fidivr mov and fdivl jbe jmp pop xor lcall ret (bad) xor jne jns in mov test outsl cwtl pop ds pop sbb mov hlt imul imul cmpsl rcrl xor (bad) ljmp aas pop add mov sarb daa mov fmuls mov invlpg nop notl mov (bad) cmp jnp or rclb xor incl mov push lods lcall pop lahf (bad) mov and aam xchg adc mov leave hlt jge movsl jmp adc std mov cmp ss dec mov jb xlat mov push pop push sbb add (bad) (bad) (bad) mov inc jmp cmp mov xor or imul mov adc (bad) (bad) ljmp daa sbb rol xchg mov dec dec sahf adc rorb out inc xchg out test decl aad shrb dec push mov sub (bad) (bad) jg sahf fdivs fnsave add inc inc xor test jl mov ja dec jecxz mov pop movsb rol sub fidivr jne,pn xlat mov (bad) (bad) (bad) (bad) fprem movb add cmpsl loope (bad) xor lea mov mov stos inc pop pop (bad) fcos fildll xor dec lahf sub and (bad) incl jo je iret bound ss test mov (bad) (bad) (bad) cmp and adc xlat adc loope dec enter push sub inc mov and push rcrl iret and cmp fcmove test xchg xchg cwtl addr16 mov out sub mov daa incl aas faddl icebp call lcall mov lret sub jnp mov inc cmpsl into clc dec (bad) and insb mov outsb (bad) (bad) mov jp into (bad) test or dec in out les stos (bad) loope scas and (bad) (bad) in push sti jle sahf mov das sub (bad) decb adc adc mov cmp (bad) (bad) lcall ror std cmp or jge inc or hlt xor cmp pop and adc decl lock repnz xchg add mov stos pop mov pop sbb mov (bad) aas clc insb movsl in xor mul int3 sub cmpsl mov in rclb adc repz cmc loope (bad) cld pop std pushl xchg out push xchg lods (bad) cmpsb addl je mov cld mov (bad) ljmp stos cmp inc stc lods iret sahf mov mov (bad) (bad) mov shll inc cli lcall mov mov push mov xchg (bad) decl les xchg aaa iret mov xchg or in movb jmp outsl (bad) incl cmpsl roll lods pop inc add pop ret int jae xor xor fcoms (bad) incl xor mov fwait inc out inc (bad) (bad) (bad) mov jbe mov (bad) sbb pop fisttpl ss add mov xor (bad) incl inc popa mov in pop loop lods dec cmp jo push pushl cld pop push or mov dec cmp add test ss imul insl shr adcb lret movsb divb pop mov adc cs in loope icebp (bad) decl xor iret sub mov data16 popf mov and leave push scas das sar (bad) inc pcmpgtd addr16 xchg cli pop mov rcll and fwait insl pop outsl cli push mov push ljmp fist add and clc cmp or (bad) mov mov cmp (bad) (bad) sti mov arpl dec pop pop mov sub or cmp mov xchg dec cs loop ja push and subb push ljmp hlt stos call inc or popf sub je push add (bad) (bad) lcall push into and mov loope jbe pushf mov jbe insl mov sbb (bad) (bad) mov sarb pusha test push psrad shll ficoml movsb lods add stos inc jecxz pop sbb cli jbe cmp (bad) jmp sbb mov jg loop je jecxz std js mov dec cld in sti cmp push (bad) call xchg pop xchg movsb jmp xor outsb cld (bad) (bad) lcall pop xchg or pop jg sub imul js dec pop dec and mov add test ss dec shrb aas mov pop dec xor fidiv movsl (bad) in cmpsl out or loope shrl mov sub rcrl idivb and movsb xor xor pop mov shr lret cmp adc jnp sbb xchg mov (bad) (bad) (bad) push mov pop loop popa lock jb jg arpl push into lahf pusha jo and jo (bad) (bad) jmp jb addr16 dec loopne push outsl dec cmpsb outsl xchg roll (bad) (bad) pushl test rcll adc mov fs jl arpl icebp lods push (bad) out in (bad) in (bad) (bad) stc js mov (bad) mov mov mov mov inc pop dec cli in test jb (bad) (bad) (bad) ljmp roll test in jp aas jecxz or insl xorl (bad) (bad) inc pop loopne inc push sub lods xor ljmp shlb (bad) leave mov mov or and (bad) (bad) (bad) call add repz pop mov into xor sbb cmp cltd and sbb mov dec jp jbe in mov sbb ds cmp xor call mov sbb mov xchg call cmpsl (bad) (bad) mov mov loop movsl jae aad outsb aas mov cmp jnp sbb (bad) incl jl mov xorl ret cltd mov sub inc mov mov xchg (bad) (bad) (bad) incl mov fdivp (bad) cld jge inc jecxz push jg rorl sub push mov lock push mov in push sbb pop inc sub ds movsl lret pop pusha sub (bad) rolb pop push jg mov sub cmp xchg inc (bad) (bad) (bad) incl push sub mov out (bad) cwtl jle nop shlb add (bad) (bad) pushl shrb dec test jmp out or es mov dec aam (bad) (bad) (bad) ljmp aaa push and in mov jecxz flds xchg pusha xchg jmp call outsl cli lcall (bad) lret mov mov adc push imull xchg mov and xor pop out xchg xchg daa rorb or aam (bad) insl loop sti test orl out sbb (bad) decl mov xor fs inc inc sub ret out mov sahf add (bad) add mov (bad) aaa add push mov incl xor push insb or push add add out xchg pusha (bad) sbb pushf xchg lds call xchg das sub cmp sbb push and mov pop sub arpl (bad) (bad) decl jb lcall xor mov lahf jmp or xor cs cltd scas sub xchg and mov sub or mov push mov mov sub inc insl cltd jge mov xchg rcr dec add mov (bad) (bad) (bad) (bad) (bad) jns in push (bad) (bad) push push pop inc rcrb out aaa sbb and out adc lods out in (bad) (bad) incl jne insb mov push cmpsl scas gs jns push push jg mov aad flds or iret (bad) (bad) (bad) (bad) out loope aad mov adc mov mov stos cmp mov daa call (bad) (bad) aas out pop pop jl test adc clc icebp ljmp and scas out ds insl mov movsl cld sub (bad) icebp xchg ds inc cmp (bad) (bad) pushl xor cli out jns bound fadd sbb in popa cmc mov xchg lcall (bad) (bad) jmp jmp (bad) aad icebp sti mov sbb mov outsl push clc add xchg repnz decl xchg sub lret sbb sahf inc cld xor cmpsb cmp xor ljmp (bad) call (bad) rcrl inc sbbl xchg aad inc test mov xchg xchg mov add lahf add dec stos fnstsw and enter (bad) (bad) jmp dec popa mov fwait mov dec stos push xor and mov inc or cmc adc mov pushf fs (bad) (bad) decl ret adc in sbb jmp jns lret xlat add popf (bad) call mov iret test (bad) in nop push aas push pop mov pop mov and mov pop dec arpl adc dec and xchg xor (bad) (bad) pushl sbb call mov insb push in dec cmp aam push iret ret subb pushl nop sub lock loop lea popa jbe in add add fiaddl (bad) ds rol jg (bad) ljmp push aas hlt stos out and jp and aas das in clc jg popf cltd sub jecxz cvttps2pi arpl jmp and mov xor dec pop (bad) call mov mov lret mov xor cmpsl push sti js inc imul pop in lcall and (bad) (bad) int (bad) lcall test adc scas das inc xchg add mov ja mov mov (bad) (bad) call push pop add dec push lahf mov add cmc and adc push icebp js push sub test cmp popf dec mov insl inc sar inc cs push imul jbe jbe mov (bad) (bad) ljmp push jne jbe lds das dec mov int mov shlb lea clc imul pop icebp stos push insl mov lahf pusha inc and mov lret pushaw movb pop add pushl sub (bad) lret or mov sub add jl xor std cmp add rcrb push push icebp mov mov mov lcall inc or jecxz dec adc cmp ds lock mov push cmp lea sub cmp adc mov (bad) mov adc jnp (bad) std push sub xor mov pop rorl fs dec (bad) (bad) (bad) decl xlat inc aaa jmp nop sbb popf and dec sub (bad) hlt adc ljmp (bad) (bad) (bad) mov nop in push pushl mov jne mov fidivl or xchg outsl cmp mov sbb std dec adc jp xchg push idivl das mov call stos pop nop dec xchg clc adc aas xchg js,pn dec push jb popf in hlt cs push std fbld adc (bad) mov cmp dec and pop mov (bad) (bad) (bad) mov sub ja dec aaa jg sub enter mov test add ljmp loop out ds ret xor (bad) fsubrl mov lods and xchg add dec mov sub xor xor cli (bad) incl aaa sti mov xchg loop shlb push cmp add pop xchg fwait out dec and xchg sti mov pusha xchg push push jecxz stc pusha loopne call mov pop pop es mov xchg jle (bad) (bad) lcall or hlt and (bad) inc sti jecxz rcr xchg pop mov mov pop xchg (bad) xor ds repnz inc pop movb (bad) in rolb cmc mov sbb adc (bad) cmp cmpsb dec vorps in or (bad) (bad) mov sahf adc cli mov fcompl xor mov push or (bad) lcall jo push push scas test cmp mov pushl fdiv rcrl ret add and movl loopne mov lcall cmpsl pop les jae push inc daa cs repz fldcw push xchg dec jl or dec and (bad) (bad) pushl test out repz in lcall dec ss pop outsb or iret insl xor sub and ds je (bad) (bad) jg add cmp or (bad) or popa lea and add lds cmc call push cmp sub inc ds (bad) (bad) (bad) cmp pushf (bad) dec sbb sub js jae xchg push adc ds int hlt out cli fwait (bad) sub pop mov sub jno (bad) (bad) (bad) fisttp in (bad) push mov std jge jnp vmfunc sysenter ja cmc inc push mov cmpsb sarl (bad) (bad) (bad) (bad) mov stc mov lock lahf sbb push stc cltd push movhps clc aam xchg xor lcall or xchg xchg mov inc or data16 and add fcomip mov add imul out mov stos sahf sub cmpsb test call (bad) sub fisubrl sub cmp mov call (bad) (bad) (bad) ljmp or dec cmp jg add iret lock call test add cli xor adc push push cmp iret fimul ds ss push inc (bad) (bad) inc js jno sub push insl cmp add or adc add decl cli sub cwtl sbb insb inc dec or (bad) out (bad) ljmp insb mov jbe call cmpsl and xor scas xchg movsb (bad) mov xchg jl outsl movsb mov iret arpl repnz mov (bad) jg cmc push aam andl xor sbb inc xchg aaa jo leave mov sub idivl xchg aam mov out inc cmp sar call xorl mov mov loop or push popa mov data16 xchg xchg jmp inc dec adc xor ret int3 ret mov or push enter decl and inc fmuls in lea imul shrb and out xchg add call or rclb sarl ret (bad) (bad) (bad) jmp out add repz nop or dec (bad) fcmovnbe or pop (bad) mov adc (bad) (bad) (bad) call push lret add lahf or adc mov rcll xchg mov loopne out (bad) dec pop inc push daa shll lods push or (bad) (bad) push and mov jle rclb xchg mov jo lcall mov (bad) (bad) lcall icebp dec mov rorl xorl jnp xchg lods cmp adc (bad) (bad) decl fs in xlat adc xlat mov jg ja scas sarb ja xchg push pop pop jp lods fsub in xchg int3 inc fwait (bad) (bad) (bad) lcall cmp dec test cmpsb pusha pop push dec lret push and fwait adc sbb mov or mov fwait leave sbb dec (bad) ds or pop (bad) (bad) (bad) decl lds stc sub push push jns mov inc push inc call int sbb dec cmc incl xchg cmpsl mov clc sbb xor roll repnz xor cltd js xchg cli mov (bad) inc ss sbb jge sbb xchg add out add (bad) (bad) decl ljmp add xchg or daa push sub repnz sub cmp add int stos (bad) lods pop and sbb decl ds push insl fistl out push or fisubl xchg (bad) pop inc ret ljmp iret cmpsl cmpsl add call dec cmpsl cmc dec sub jo pusha mov imul sbb (bad) call insb xlat jecxz and addl adc stc inc es lahf into popa jbe mov or (bad) jp nop push or jo pop lods cmp dec jo xor xchg das lcall cmc jmp xor sti cwtl data16 mov mov cmp mov cld sub into js (bad) mov clc movsl je add sbb fdivrs movsb loope pop jo ss add (bad) out xor (bad) (bad) lcall jb pop daa xor xor lods cs enter test pop add ljmp jne flds add ds add inc inc out ljmp scas rcll inc pop in jp mov jmp out roll andb bound out jne enter push mov mov int and jecxz in mov orl mov aad mov add stos push jae scas push sbb cmpl xor and movsb dec xor (bad) sahf out mov xor ljmp jbe mov addr16 insb cmp mov int3 pop xchg mov aaa addr16 push (bad) lcall jmp jmp xchg pop sarl int cli mov loop (bad) (bad) incl dec dec (bad) xor push mov test icebp inc mov jl popa test (bad) (bad) (bad) pushl hlt dec subb fcoms sarl pop jmp mov inc xchg jl jmp lcall push scas (bad) hlt push nop mov loope inc scas dec mov divb cltd mov sub push push fdivr (bad) (bad) ljmp sub jb push data16 (bad) and ret out icebp adc aam and (bad) clc (bad) enter inc nop clc add push xchg cmp inc push out fdivrp rorb ret imul iret pop jns clc out fldcw repnz sbb (bad) call mov rolb iret fadd dec stos mov divb inc data16 cmpsl fidivrl xchg rcrl add adc loopne sar sbb (bad) (bad) jg imul xor jno aaa push int mov leave aad test scas cld (bad) (bad) pushl inc inc add add stos mov mov mov mov ds addr16 adc jmp lea enter call mov sbbb lahf xchg cli jne mov cmp in (bad) (bad) incl inc pop (bad) sbb outsl dec mov or pop shrd and lock repnz (bad) (bad) push adc push call push xchg pop and adc cmpsl mov xchg aaa enter push jo (bad) (bad) (bad) lcall rclb push inc fnop push xlat jo hlt cmp in jecxz inc sub xchg scas test (bad) (bad) jmp loop pop mov cmpsl (bad) mov ss dec xbegin popf or add (bad) pushl aas sub xchg cmp sub (bad) jo call stos ds (bad) sbb push repnz testl xor sbbl inc lea mov popw hlt jnp fildll std pop jl (bad) sbb ds lret in outsl cli sub add mov negb fsubr sbb or gs sbb fildll loopne sbb and aam pop mov rorl fwait (bad) jo pop pushl cmp sub (bad) lcall fiadd mov push sub cmp jecxz aaa jae mov jnp (bad) (bad) (bad) (bad) mov sub and push stos fldt add pop add jnp jg js pop push cli lcall dec in or jae cli ds xor mov fiadd or aas xor lret jmp fs pop pop sbb add imul (bad) incl add decl in mov ficoml adc mov pop jns (bad) (bad) decl dec xor nop xor andb sahf add hlt test push stos jl test mov add test es sbb (bad) (bad) (bad) call xchg inc dec or and icebp dec push out push in (bad) outsl int3 mov mov mov xchg orl data16 cltd imul decl in mov int3 mov sar pop add mov jle jg lret loopne (bad) (bad) (bad) call outsl xchg mov add loop in mov lret (bad) repz jb push sbb dec mov jae in out repz lret jbe mov fdiv cmp in subl fs (bad) call ret jb cli xor fwait aad add push add ret leave imul push pop js sbb in fldenv mov popf rolb dec int3 (bad) (bad) (bad) incl mov sbb pop push mov mov pop icebp adc leave hlt and sbb and ror cs sbb pop fdivrl in int or ds pop sub xchg (bad) repz or (bad) jno dec lcall ds sub mov mov mov cs cld mov push mov mov insb (bad) incl adc jbe cmp bound cmpl lret sbb pop or adc out clc (bad) ljmp sub rcrl pop cwtl adc or popa mov cmp (bad) lcall (bad) xor (bad) mov insb adc add mov loopne adc dec rorl (bad) (bad) (bad) jmp enter dec cmp and or int3 cmc insb and dec lahf daa xor aaa cld ss inc lea push mul (bad) mov repnz jmp ret pop xchg pop andl adc lahf mov (bad) (bad) ljmp (bad) cmp sahf mov push push push rcrl mov and (bad) (bad) fild push into mov mov ret sti loop adc test dec and push jg ljmp mov fildll cwtl and dec pop mov dec hlt dec jmp pop lcall stos sbb popf adc pop mov test and xor loopne xor mov sbb ja (bad) lcall cltd rcrb scas enter and or stos jae incl testl das push (bad) mov sbb and incl and fsubrp (bad) dec or mov jmp mov leave sub (bad) (bad) decl inc aad adc mov fcmovbe pushf push js cmp fwait popa or imul lock fcoml ror inc inc fcoms roll push pop pop push frstor cmp frstor mov mov in xlat pusha pushf adc rcrb (bad) (bad) lcall adc xchg cltd xor pop cbtw push cltd push movsl push rcrl test inc dec push daa lahf ljmp negl push imul inc push mov cwtl insl cmpb xchg (bad) (bad) (bad) mov in sub and cmpsb adc cld pop icebp (bad) push pushl testb pop pop ljmp (bad) out mov pop (bad) gs es mov dec push jo push daa xchg lar push xchg pusha loop ja mov push add mov sub mov imul je decb sbb lret dec mov xchg add (bad) fldenv (bad) (bad) incl and sub mov sbb mov jp sarl (bad) in fisubr and xor inc mov movsl in addr16 rcrb push lods jmp sbb or sbb bound das adc popf adc ret pop scas sbb inc (bad) mov inc lock sub fisttpll mov sub xchg lcall mov ljmp pop in pop xchg mov lea pusha (bad) or decl pop adc push and sarl daa fbstp das mov icebp jp nop mov in mov (bad) (bad) lcall mov cmpb mov ds push xor arpl push inc stos popf sar pop inc jns,pt pushf popa ror cli jae add out loopne sarb push loope popa xchg push mov clc sahf icebp sbb pop adc mov ret inc into jp mov jmp lods jbe (bad) (bad) (bad) jmp sbb aaa or jl mov cwtl xlat lahf jmp add mov (bad) (bad) (bad) incl pushf pop xchg mov pop and int3 shrb fcmove out rclb stos jl dec cld call rclb stos std mov cmpsl or pop in push jecxz mov jecxz sahf push aas (bad) hlt adc aam out lods cmp xchg popa outsb pushf add ljmp lods adc dec pop push sar ds fnstcw or lcall pushf add rolb push xchg xchg insl call cmc incl mov and hlt pop mov adc ds pop es pop push loope inc mov mov dec mov push and mov (bad) out movsb mov dec cld rcrl popa xor lods (bad) push cmp (bad) (bad) incl sub rcll loope inc mov cmp add xchg or call push int3 rol jg loope add push ret mov and stc lea imul (bad) cmp inc bound sti out adc add dec popf and xchg or mov (bad) push jbe lret lret dec cmpsb out inc hlt loope cld push xlat (bad) pushl repnz repnz dec mov leave mov mov sub jmp fiadd dec jb (bad) cmc push inc (bad) (bad) (bad) lcall inc nop cltd int sub jmp int3 push out les jnp fwait arpl (bad) (bad) call cmp dec mov rorb push dec dec push pop pusha movsb rorl sub lcall test mov cmp cmp scas or scas sbb rcrb (bad) (bad) (bad) call mov pop mov dec jecxz leave mov sar outsb aas jl test or jbe mov incl insl aaa or push lahf jno lock es idiv outsl cli (bad) ljmp jmp js push stos mov imul sti (bad) (bad) (bad) decl enter out add xchg nop clc xlat imul push (bad) xchg dec xor mov sbb mov (bad) (bad) (bad) fldt sub xchg adc out cmpb mov std xor mov call cmpl push stos inc sahf loope,pt fisub addr16 (bad) (bad) call push xorl sbb lea popf sub mov stos loopne sub add jnp xchg stos pop fistl js or sahf mov push les (bad) (bad) jl and sahf adc out inc and xor ds hlt ret (bad) loope fmull sub testl jno (bad) decl jmp jmp (bad) cmp clc pop shl mov mov (bad) (bad) (bad) jmp outsb jne mov roll (bad) ds sbb data16 lods inc xchg fwait sbb std loope cmp lcall sbb (bad) dec cmc sahf ljmp xor insb jmp hlt mov std cli sub stc cs pop push nop jp lret cmovbe mov (bad) (bad) pushl movsl or imul inc into push sub jbe jbe mov xchg sahf flds out push (bad) aad xchg sbb inc popf les cmp cmp push cld pop cmp icebp adc (bad) mov push dec daa lret ret cmpsl (bad) (bad) (bad) (bad) jle mov (bad) mov nop (bad) xchg jecxz rcrl jne scas mov cmp idiv (bad) lcall data16 sub insb xlat dec jb int leave es mov jge xor cmp int cmp cwtl je inc andl inc aam fdivrp mov outsb push (bad) (bad) (bad) call jo xchg mov cmpsl test pop sbb loop dec aam enter bound jp bound movsb adc mov pusha sbb clc push xor (bad) (bad) mov and or sbb pop cmp mov mov lcall mov fnstenv orb sbb push aad add ljmp jp mov in xchg pop mov push mov pop jmp (bad) decl incb cmpl inc fwait adc sahf cmpl sbb (bad) (bad) jg push in inc hlt or inc (bad) mov ss sub mov (bad) jmp (bad) int sub pop adc fnstcw or int3 mov call jnp (bad) adc pop xor insb or sbb (bad) lcall sub idiv jmp fidiv adc out cmpsl out in sbb mov in sbb pop mov out stos mov movsl in (bad) in mov or clc jg jge adc outsl push imul clc cmp mov je pop jge mov dec (bad) repz adc aam int3 das sub add (bad) (bad) (bad) call sarl mov push int jg cmp mov xor lahf pushf (bad) add pop push and dec mov loopne xchg fdivrl sub (bad) fcomip sbb addr16 mov outsl dec mov movsl scas (bad) xchg rolb add addr16 pop outsb dec (bad) dec jmp dec sub sahf pop sbbl jb int loop mov (bad) (bad) (bad) fistpll cli testb adc mov cmp dec insb dec sti xor icebp (bad) jg ds loope xor mov push iret pop cmpsl cltd dec mov cli (bad) fcomip stos fs jp adc cmp sub jbe fnstenv repnz clc call mov repz sub imul or push cmp ss (bad) ljmp and call pop scas stos inc lea mov ret push loopne (bad) (bad) (bad) decl test pop jo push add ret repz femms or iret mov aad pushf insb je aam and mov pop (bad) or dec adc cmp enter (bad) jmp xor sbb jno call ljmp iret sbb decl inc mov xor pop xchg push and test (bad) (bad) jge,pt cs in adc mov roll sbb jno push mov je pop les subl push pop mov (bad) imulb cmc xor mov pushl ds mov dec jl dec (bad) dec or je sahf insb xor int jo mov xchg jo jmp loop (bad) pushl pop mov jns roll cmpsl adc ljmp sub pusha inc mov xchg push or sub dec (bad) mul out cs (bad) (bad) pushl sbb jg pusha sub jns adc incl pop (bad) je outsl cli (bad) fild out in pop (bad) cmp or les dec sub (bad) aas inc scas jae enter in shlb inc pop xlat fwait gs cld adc stos mov shrl (bad) (bad) (bad) call (bad) sub ss (bad) fsubrl int3 mov int3 scas loope pusha (bad) adc idiv das shlb pop outsb add loop loopne inc dec jg out shrl call (bad) lods push loope das add data16 inc cld fs and xchg or stos fs adc jle gs push adc jae iret and jecxz dec (bad) jmp cmpl rcrb adc sti das and (bad) (bad) (bad) call push add inc xlat popf lahf mov mov fimul pusha cmpsb xor lret mov mov outsb mov call or insl fstpt jo sub and adc sar inc sahf enter ret lahf mov lods (bad) mov add pop (bad) (bad) (bad) (bad) jg punpcklwd push push daa cmc scas inc mov (bad) mov call (bad) decl mov arpl pop stc stc inc ja cmp insl mov inc fbld (bad) call movsb lcall inc add call add fistp pop cmc sahf inc jae pop cld push cmp ja iret ss cli or (bad) ljmp clc jg push (bad) stos nop adc cmpsl xor xchg push in shlb push pop mov ret (bad) (bad) (bad) fldenv pop pop lret push jl es mov sbb jb or in cmp sub scas add mov mov lods adc dec stc mov sub (bad) (bad) (bad) lcall push hlt sub scas nop mov push (bad) mulb notb fldcw cmp (bad) (bad) lcall add in orl mov sub ss fdivr (bad) push decl (bad) gs loope cld xchg aas xchg test sub icebp (bad) cltd jmp testb (bad) (bad) (bad) fbstp ret call sbb ret aas inc rcr jbe and jp fdivs sub (bad) mov in mov aad fcmovnu dec xchg pop xor fimull movsb mov (bad) ljmp sti cld int3 push das (bad) mov add mov inc sahf sub add mov mov outsb repnz xchg lcall cli aam cli inc scas sar insb cli incl (bad) cmp sub (bad) not enter js push outsb dec jp jns icebp lock aam (bad) (bad) (bad) pushl adc xchg loopne shrb lock jecxz adc inc cmp push test jbe (bad) push mov cmp ffree dec jo dec jmp or push gs jbe pop and (bad) (bad) ljmp (bad) lock inc xchg push sbb pop ss push (bad) fisubrl lret mov cld lcall mov lock (bad) mov or (bad) xchg xchg (bad) ds std aaa jl adc (bad) lahf push out (bad) subl (bad) (bad) ljmp xchg pop pop ljmp adc cltd aam sbb jge adc (bad) dec repnz (bad) (bad) jmp dec and std addb sahf jge jbe popf outsb std cmp in mov mov mov mov mov cld jmp pushf call (bad) (bad) (bad) (bad) ficomp sti mov add repz mov movsl add popf out pop adc sti popa ljmp inc push pop or mov pop decl xchg pop pusha mov pop ret add movsl leave xchg (bad) (bad) (bad) fcomip lds insb mov leave mov push dec fs shr jbe pop inc lods sbb lock (bad) (bad) decl sub fs adc inc imull mov test bound mov inc jb (bad) jmp and xchg (bad) jne in xchg daa push outsl mov and idivb adc into in (bad) (bad) incl and and stos sbb ljmp out das lret jle mov push (bad) decl mov jp je mov out adc cmc mov mov (bad) adc jno xchg pop add (bad) (bad) jg hlt dec cmpsb ds jmp sbb lock popa xor or xchg shlb jge,pt pop rcrl aas and (bad) incl (bad) mov sub call or or cs sbb xor inc jne cwtl jns clc pop jg sub (bad) (bad) lcall fstpl and xchg jbe shl fsubs test int xchg pushf cmp sar in lcall repz inc or xlat sbb jbe flds jae dec xor mov aas aaa push (bad) ljmp scas repz cld outsl fsubr das adc push sub sbb xor jp cltd mov push (bad) mov addb out dec sahf in dec fucomp mov mov pop repz pop icebp cbtw cltd add add mov fmulp mov dec in lret ds (bad) (bad) (bad) incl adc push test jg push mov lret sub and sub jge cmpsb ss iret loope,pn int push ljmp jmp jge and addl xor js jmp lret bound sbb sbbl push roll out (bad) (bad) (bad) incl xchg imull inc push xor add push fadds inc or pop jle add (bad) (bad) mov mov push and pop sub push xchg add aad ljmp or fldenv adc mov mov call das dec inc shrl bound fadds mov pop adc (bad) ljmp test or add icebp (bad) (bad) jmp mov pop int3 ret jecxz and mov cld ja test pushl addr16 (bad) jp or fdivp hlt in mov popf jns bnd movsb ja (bad) (bad) ljmp xor jg scas loop add or hlt adc fnsave cwtl fadd adc hlt decl xchg mov sahf mov push rcrl push insb adc adc (bad) lcall adc int3 adc mov push stos fs cmpb aam (bad) (bad) (bad) pushl popa cmp in rolb pop ds pop fxam add std pop and mov lea test or dec daa pop dec jnp les dec aaa sar (bad) lcall mov xor xchg (bad) xchg sub mov and mov xlat pop push (bad) (bad) decl test imulb xor lcall jl popa inc and (bad) out or sar cld into add jbe xor jmp (bad) mov (bad) (bad) jmp cmp imul dec bnd imul in jb add fmuls jne add cmovae mov faddl inc cmc and adc jae sub jno cmpsl xchg xchg repz lock (bad) (bad) mov sbb fs sahf adc xlat in sti jp cmp dec mov push add pop xchg (bad) sbb push jne loop inc jae sub cmp shrl (bad) call or or ret lock sub pop ret pop dec push andl call (bad) cmp pusha hlt dec shl sub pop mov mov sar (bad) (bad) (bad) jmp fcompl insb imul sbb xchg push jno outsl add inc jnp xchg pushl cld jne aam imul in and pop data16 pop fwait lcall dec mov push in adc ror popf jae or or adc je xchg inc jmp mov ljmp insb rcrl mov sti mov inc push addr16 ljmp (bad) pop cmpsb rorl xchg outsb inc jle out jns jbe fnsave (bad) (bad) (bad) decl lret fidiv arpl cmp and push pop lods cmp movsb (bad) (bad) (bad) call pop add pushf xchg mov insb mov hlt inc mov cmp push jmp push idiv (bad) (bad) decl test ljmp inc scas into fdivs lahf ljmp jo pop repnz dec (bad) (bad) jg or inc je push (bad) mov loope (bad) (bad) pop sub sbb fcmovu test (bad) dec fwait adc inc mov ret ds sar adcl movsb iret push mov push mov pop mov push sub pushf push fisubrl mov push out addr16 jg (bad) ret and fdivs dec (bad) in call pop and xchg add lds call push xchg jecxz xchg cwtl jmp or push mov push loop sbb sar (bad) (bad) call scas nop jbe cltd outsb inc inc jb movsb fnstcw dec sarl and xlat xchg (bad) fbld mov negb push stos mov (bad) (bad) push adc outsl rolb std in out jmp add jmp jecxz (bad) jp mov pop insb jle scas lods test push inc outsb or xchg lds in stos (bad) repnz (bad) (bad) (bad) cld out (bad) adc pop sbb popf lcall mov pop xchg mov or (bad) (bad) pushl jp or fwait imul dec sti cwtl aad hlt scas les iret push jne and (bad) (bad) (bad) lcall and adc jl sahf (bad) inc sbb std mov jnp popa xor (bad) jmp cs or popf daa mov fsubrl subb or popa cmp (bad) (bad) (bad) cmp fwait mov es mov mov jo (bad) jns and mov adc cld (bad) inc loopne hlt xor inc lret leave mov daa cmp mov stos mov ja incl fcomi outsl call inc sbb rclb mov cltd out lret clc clc fild mov stc jnp sarb (bad) (bad) ljmp enter xlat es cmp lods fwait pop mov in es mov adc test fnop jbe or and (bad) icebp xor (bad) xor leave inc dec mov (bad) (bad) (bad) incl mov sahf gs ss (bad) push cmpsl xor or scas pop mov cmc sub aaa xchg std (bad) push jnp (bad) aaa push pop (bad) sub fmull jmp lret sarl and lret xchg int3 mov cmp cs dec push (bad) (bad) in arpl out mov sub inc pop pop and pop mov pop mov insb (bad) (bad) (bad) (bad) jg (bad) mov in jle xchg or mov icebp hlt push ljmp outsb jno scas (bad) (bad) (bad) (bad) insl roll in mov xchg dec inc movsb mov ret rclb fsubrs lcall mov popf push mov sbb and xor pop test fidivl xchg (bad) (bad) (bad) cmp aam and add pop mov mov or push loopne inc out xchg or adc pushl xchg xchg mov mov mov mov add (bad) push pop sbb push or pop add popa stos push xchg mov (bad) jmp or cmp fwait ret lahf jle iret test (bad) call std out push jbe out jle jl,pn xor lods or pushl out jle pop iret mov mov cmp and cs stos loopne push lds mov inc xchg imul arpl aam cmove mov mov (bad) out xor jae loop in js inc ret add xchg mov (bad) (bad) push test adc pop inc dec ret in push xor loop and (bad) sti (bad) cmp nop sbb (bad) (bad) jmp into adc repz inc imul fistpl inc push dec data16 xor (bad) mov dec mov mov fs or movsb dec add (bad) (bad) (bad) call aam lock (bad) hlt in pop test test int3 shr xchg lret adc (bad) (bad) mov xor call int sbb add stc test xor mov mov decb sar int jmp cs lock test int3 sub xchg add ret or add add out mov mov test dec xchg xor push pop imul (bad) jmp and cwtl xchg cmp mov cmpsb push (bad) arpl insb mov add out repz scas imul mov call (bad) out or stos mov push cmc pop mov clc mov jle test or or sbb (bad) and cmpsl or aas and mov (bad) (bad) inc das iret inc add mov clc bound test cmp mov outsb enter (bad) sub mov mov into sub inc cmp cld scas cli fdivr push out mov or stos iret scas pop nop mov test (bad) (bad) (bad) call mov jmp lds lcall cli mov out clc pop test mul xor shrl ds jg and sahf mov (bad) decl pop out outsb adc (bad) out adc inc int3 fwait and jae xchg (bad) (bad) (bad) decl mov nop in jg pop in mov push push leave xlat (bad) mov (bad) (bad) incl hlt sbb add lret push bound mov cmc (bad) (bad) jg cwtl or adc into mov jne inc jecxz jg cmp cmp imull arpl (bad) call mov repnz es jle aam jmp pop sub xor daa inc cmpsb (bad) (bad) (bad) call in pop mov inc cmp xchg mov or mov mov lahf adc ss ds popa test jg (bad) call ret cmpsl xor dec scas cmpsl pusha shrl ja imul xor pop (bad) (bad) (bad) (bad) js and sub cmp adc sti jnp insb sub int and popf lret pop or pop mov (bad) (bad) (bad) jg bound pop roll fstl daa adc jmp das fbstp (bad) out and incl mov xor sbb sbb test adc scas cli jg inc dec inc cmp add mov rorb jbe (bad) (bad) (bad) ljmp les in ret inc hlt scas lods adc jbe loope and push ds (bad) cld icebp es cmovne xchg cmp mov add lods push movsb or sbb mov arpl mov (bad) (bad) (bad) cmp shr popa arpl cmp in and mov pop rcr not sbb (bad) call loopne xchg push push (bad) pop mov xchg ljmp dec or orl mov sub ds hlt pop (bad) iret push (bad) (bad) jmp mov scas push (bad) dec les jne adc dec or (bad) (bad) (bad) (bad) in cmp icebp out cmp sub jge or sbb mov inc mov ljmp clc call lcall inc sbb jnp push call fwait or mov (bad) (bad) call (bad) xchg in push ret and ljmp push ds mov sbb push pop fnstsw into in pusha dec fwait test jmp sub lahf xor int3 in sub (bad) (bad) call (bad) insl and hlt xor (bad) jle arpl mov sub jle lods testl adcb xchg sar es out movsl sbb lret je (bad) mov fstpt lods dec addr16 (bad) (bad) (bad) pushl mov loopne mov pop sbb mov lods adc pop push inc movl jl enter pop pop cmp (bad) (bad) ljmp push sub lret (bad) sbb jne pushf add dec les or (bad) jg decl lods (bad) sbb add out (bad) jecxz out fucomi addl (bad) incl push or ds mov aam pop jge in (bad) incl mov mov mov dec mov lods enter inc sub (bad) (bad) (bad) fdivrp mov je lret stos xchg mov xchg gs jae or xchg ljmp push negb pop lea mov stc add and (bad) jmp adcl out (bad) lret mov jp add (bad) jmp hlt mov test stos mov jmp inc into mov sbb (bad) mov cli jl bound jns test adc rdpmc adc inc (bad) (bad) (bad) inc sbb loope mov or sbb in aaa push inc xchg syscall jecxz stc cmp (bad) lcall xor jl push cld push add cs jae xchg dec push mov jge pusha or and js inc cmp (bad) (bad) (bad) (bad) mov (bad) xor outsl add in lods adc les cmc sbb push pop xor push lods pop ret mov (bad) (bad) (bad) call (bad) sahf sbb mov xchg dec lock xchg mov or cmc iret nop nop aaa add adc enter xor push sbb lds sub (bad) mov mov aad addl pushf outsb lcall sbb mov fucomp mov aas and mov test inc xor inc out ja xchg push mov (bad) (bad) push jmp (bad) out cmpsl rorl push loopne mov cmp loopne cmp pop icebp lds xchg aam add int add jb enter xchg mov jmp adc dec mov dec cmpsb mov add cmp mov cmp cmp inc int or std inc xchg fisub (bad) (bad) or hlt (bad) (bad) (bad) fdivl add jp mov ret xor stc sarb push pop push mov add push sbb js (bad) push and mov (bad) lret sub fcmovbe lcall inc mov daa hlt popa or mov adc ljmp ret dec gs add outsb aaa ds movsb call mov ljmp test (bad) (bad) (bad) jg dec xlat dec in push push je aam clc outsb (bad) xchg xorl cmp test (bad) ljmp lods arpl add sarb (bad) lcall clc mov sub xchg imul and pop jbe or add sar sbb sbb push mov cmpsl data16 add dec sahf (bad) or mov mov pop sub (bad) inc aas pop cmp out cmp and mov loope pop lds add mov mov xor addr16 insb cmp mov dec std rcr inc rorb mov fiadd scas clc ljmp xor push sbb cmc fmull mov jns test fs sbb pop ret sub or (bad) mov inc mov mov (bad) inc push or sub clc pusha and sti dec shlb out cmp xor shl jge mov lock (bad) (bad) (bad) mov dec pop cmp mov es sbb mov lods lods xchg (bad) pop (bad) (bad) (bad) ljmp xchg fiadd xchg lahf mov jo jne push (bad) adc out xchg jl (bad) (bad) (bad) jl dec les and xchg outsl inc rol cmpsl in js mov or lahf xchg xor (bad) lcall jae pop dec mov addr16 loopne,pn arpl sub lods into or pop fwait cli mov scas mov sti stos pop test jl popf adc pop nop mov mov and incl fidiv jo or fisttpl lcall pop or pop rorb sbb es dec test cld popf in shlb jp mov fisub adc push push cmpsb adc cli (bad) in mov popa push mov jge popf ds push popa std (bad) (bad) call or incb sbb xlat insb insl pop sub lret mov inc mulb cmp (bad) call fstpt and lret outsb push adc inc js fcomip arpl stos das pop stos stc sbb sahf (bad) pushf das mov adc cmp imul jb (bad) (bad) jg pop lock insl jp push push inc movsb sbb aas ljmp lcall adc iret sub lret mov in push jnp mov mov (bad) (bad) mov in int3 cmp (bad) rolb ljmp pop dec hlt lcall movsb stos sbb cld or icebp mov pop pop test cmp jmp (bad) out es std sbb xlat mov int lcall push lock (bad) inc and scas cmp rorl js fstps dec das scas cld push inc sbb jecxz rolb incl pop mov jno mov nop mov out adc pop in in mov outsl lret pusha rcrb pop push lock cmp add cmpsb (bad) and rcrl loope popa cld ljmp xor imul (bad) jg and push bound push push pop inc (bad) (bad) ljmp gs (bad) outsl or jle xorl xlat cs arpl mov movsl out (bad) (bad) (bad) ljmp std and loopne fadd outsl pop adc ja movsl ficompl fadds push cmp (bad) cmp lret (bad) icebp shr cwtl decb cli fwait imul fldl out addr16 jp hlt xor (bad) (bad) (bad) (bad) mov adc fsubr inc out pop xchg cmp aaa jnp (bad) loope or out stc mov ret (bad) incl jb aam xor push movsb fdiv mov das add sti ret adc enter mov loop (bad) (bad) (bad) lcall dec aaa les add mull scas xor push jo out das (bad) cmp adc (bad) (bad) jmp sbb mov or xor or jg mov jno test (bad) incl mov fildll cmc dec fstl dec cli mov xor mov (bad) (bad) decl daa cltd movsb dec sub add jp mov add sub pop mov sbb loop (bad) (bad) (bad) incl sti mov subl fisubrl ja xor (bad) decl push xor imul xchg mov dec push mov (bad) mov or (bad) (bad) ljmp jnp bound lret dec sbb mov xchg adc sub jmp (bad) aaa mov push mov outsb lds jl int dec test pop lock cmp inc add ret test lahf cmp nop frstor imul inc cld incl add int adc (bad) (bad) (bad) jg xchg cmp (bad) ret inc mov scas jp idivb mov outsl imul lcall pop mov cmp add (bad) insl (bad) sbb sub (bad) decl sub dec push mov mov sub into mov push pop outsl sub cld (bad) ljmp outsb mov int3 clc std (bad) nop scas push sub mov (bad) pushl sbb cmp gs lea mov add data16 das clc sub outsl adc gs (bad) (bad) fnstsw je mov lods jmp dec pushf pop test xor (bad) (bad) (bad) (bad) mov adc inc mov es jecxz ret mov fidiv xchg pop xchg adc push stos lcall decl mov aas test aas sbb sbb xchg dec jne test rol (bad) (bad) (bad) cmp not pop loope pop insl jmp push sti lret cs outsl add cmp xlat lds imul push sbb (bad) (bad) clc mov add and adc dec es leave enter js lds cld or or pushf outsb repnz xor mov inc mov loop push cltd cltd pop icebp cmp (bad) jnp push fdivrl pop repz inc sub or mov push mov (bad) (bad) mov pop cmc adc pop cwtl sub popf cwtl (bad) (bad) push mov (bad) (bad) (bad) (bad) mov outsb cmpsl rclb insb cmp enter popa inc mov clc push leave test (bad) (bad) (bad) pushl cwtl push sub push or or xchg xor push add inc inc adc ljmp xchg xlat xchg sub adc jp jmp cmc mov mov adc stc div mov out jmp push cld (bad) (bad) decl std das sbb mov adc sar rclb mov outsl adc pop cmpsl insl sbb xchg jo rclb dec jnp imul pop int3 divb out clc add add mov xor dec daa (bad) (bad) (bad) incl lret pop jge aaa cltd adc test mov mov jecxz sar ljmp loopne jle xchg mov in in xchg xorl jg (bad) (bad) fbld push ficom repnz sbb popf cld divl xor (bad) jg jmp pop cmp fcmovu xor sbb and cld iret je sahf movsb add aaa push sahf or into cmpsl pusha fwait sub push dec dec jl (bad) (bad) incl cmp mov mov in fnstenv arpl add into dec and (bad) jmp inc hlt cmpsb lods clc in and (bad) enter pushl mov adc pop jae fadds imul inc inc mov imul sub xorl pop insb (bad) (bad) (bad) lcall pop (bad) cwtl or into push std or mov dec sub shll cmp (bad) (bad) call dec mov iret mov or cmp mov sbb test push aaa jb (bad) (bad) lcall das dec mov pop pop sbb xchg sbb clc jge dec jp bound repz pop (bad) (bad) mov dec outsb mov repz xor cmp dec insl ret lahf mov ljmp (bad) xlat aaa sbb sub je or shrb fcomip ja call sbb jns xor call push test jl push in (bad) adc mov xor jg outsl mov mov pop (bad) jmp ja ficomp xchg cmpsb jp adc pop sbb (bad) scas dec add lods xchg sub (bad) (bad) mov in into xlat notb pusha ja in inc loope adc or cli mov (bad) (bad) ljmp je in xchg in sahf lahf in test imull cmp jle cmp std (bad) (bad) fstps and in add adc xor jnp imul mov ja (bad) imul dec adcb (bad) mov in imul and inc in sbb mov mov (bad) xor or (bad) aas ss ljmp xchg call (bad) loopne push add cmp mov (bad) (bad) (bad) cmp pop lock dec cli dec inc mov inc out bound dec push add push adc (bad) jmp add popf pop mov in pop jl mov fidiv pop outsb cli pop add inc dec add jecxz adc (bad) jmp xchg and in sub xchg sub or aaa std (bad) dec cli jmp add adc fisub lahf popf je xchg (bad) jns movsb (bad) mov bound dec call ljmp cmp and dec jmp (bad) (bad) pushl cmpsl xchg xchg das cmpsl test add cltd xor (bad) (bad) incl jp add or lock sbb mov xor stos dec push cli incl in cli lds jne pusha pop mov mov clc test cmp inc je (bad) (bad) (bad) jmp sbb es cld loope nop and ffree add enter dec repz (bad) (bad) inc in fdivl jb imul dec cmpsb imul (bad) hlt out daa mov sub dec (bad) add (bad) call (bad) call cmp mov test xor (bad) lcall mov xor jle push push lock aam pusha pop mov dec into or (bad) (bad) (bad) lcall xchg pop (bad) icebp repz ds rclb inc mov mov or dec xchg cs ret pop mov arpl lcall sub xchg (bad) mov xor out inc push test (bad) incl jl (bad) jae leave icebp subb jmp sbb inc mov add or mov xorl ljmp idiv mov add mov pop scas mov dec adc sbb adc cmpsl stos dec jmp rclb addr16 (bad) cmc jg jmp cmp and dec push mov or pop out cld jg pop outsb and sub outsb inc popa js das pop xchg fwait mov mov pop (bad) (bad) aas sub in frndint in jns mov out inc pop dec (bad) (bad) decl insl nop adc das inc bound mov cli or mov mov (bad) (bad) in data16 (bad) jg mov jo lahf ds test and dec inc aam outsl cli (bad) jns shlb iret fcomp (bad) jle dec sbb cltd push insl jns gs (bad) sub loope (bad) (bad) (bad) decl ljmp cmp mov ficompl aaa addl (bad) (bad) ljmp xchg aad dec sub lds mov es fsubl imul (bad) ds cwtl add sub cmpsb aas cwtl sarl jge sbb push decl xchg dec lods sub pop mov (bad) (bad) jmp inc idivb pop pushf fild stc stos jns xor cmp jmp das sub mov rcl sub (bad) incl sbb mov fdivp scas test sbb ret pop fistp cld mov mov clc popa pop (bad) test mov pusha incb (bad) (bad) lcall scas add in leave jbe mov jecxz inc sub cs ja (bad) out and pushl cmp repnz pop ret pop or jg (bad) sub (bad) (bad) dec in sbb mov xchg sbb mov rcrb (bad) mov adc dec test xchg push fcos (bad) call pop jns stc jb pop enter pop or or (bad) (bad) lcall lcall (bad) sbb cmp hlt mov dec movsl pop hlt movsb push inc cwtl or dec mov xor (bad) (bad) call or jo jmp cmp mov add stc or xor (bad) (bad) ljmp loope fxch dec movb loopne in (bad) fisttp idivl mov adc mov sbb out jmp xlat and lret push (bad) (bad) (bad) jg test out loope divl xchg cs rorl stos inc pop mov pusha mov (bad) (bad) (bad) cmp mov or inc mov push in adc mov out (bad) (bad) (bad) incl cmc sub sti pop add xor dec jp loopne cltd or cmp bound (bad) call aad pop rorb push in shrb (bad) lcall mov pop mov stc push fwait notl xor pusha shrl jp ljmp (bad) xlat xlat jp dec stos mov lahf jg or (bad) cltd cmp es xor arpl mov mov mov pop popf mov push jmp mov add int mov inc mov mov adc mov mov jno or inc iret cs mov (bad) (bad) lcall adc lock daa out xchg add xlat mov iret ret jp fcomp out push jb incl mov fistl mov dec hlt sarl fs push ret faddl add cmp sub inc movsl pop dec sbb popf fs (bad) (bad) incl xor dec or xchg mov jmp cbtw fisubr out cli (bad) jmp mov and push and mov shll test ljmp clc decl lock cmc push imul pop (bad) (bad) (bad) push sub cld js inc mov sbb mov sti mov ds ret dec dec add insl push pushl decl cld scas xor sbb push bound and ljmp mov push pop inc jecxz inc int3 stc adc jno enter push push push (bad) (bad) call adc rolb icebp pop jle xor inc jae (bad) pop shrb ljmp test or inc shlb scas (bad) (bad) jmp push or mov daa add insb es clc (bad) (bad) decl jge adc (bad) fdivs sbb loop addr16 pop adc mov jne (bad) (bad) out int3 adc xlat icebp jo iret dec loop jae push mov fdivs out sbb (bad) lcall shl arpl and mov fist adc jg xorl outsb mov (bad) (bad) pushl xchg lret aaa cmp xchg mov push loope pop xchg je (bad) ljmp leave xor aam call scas hlt ljmp sbb cmp push cmc dec aad jmp rcr (bad) lcall mov cmp repnz outsl push mov imul (bad) incl add into idiv mov cmpsb (bad) (bad) sti scas xlat add jp fs (bad) mov adc (bad) (bad) lcall jae sbb stc aad jecxz (bad) mov daa xchg add sbb mov (bad) (bad) (bad) call jo sbb into sbb add mov xchg outsl xor pop fdiv fxch jge cli inc jno cmpsb incl imul add fcos (bad) mov adc mov or fs sub sbb fbstp lret decl pop es shll dec cmp push loopne imul enter lcall mov mov dec cmp sbbl and mov adc fs hlt jns test (bad) nop stos lods and mov imul (bad) (bad) (bad) (bad) (bad) aam movsb mov sbb mov into fistl and lock (bad) lcall (bad) mov dec ja cmp stos aad mov pop mov (bad) (bad) jg ds push jb or mov add or insl ss add or push sbb add cli push (bad) rclb cmp (bad) decl lret jb push out push pusha dec cmp push inc xchg or push pop sar orl push xor or in idiv pop (bad) (bad) (bad) incl xchg adc mov push jle mov stc jecxz xor push adc jmp mov mov add sub xor cmc divl scas loop mov insb add stos adc fistpl jbe jmp pop ss ljmp jge dec mov mov push ljmp push jne jnp sahf mov rcl ficoml out cltd pop test mov lods mov out sub rorb lock decl ljmp add cmc fsubl repnz push decl lahf mull insl out xor xchg cwtl mov xchg jns,pn (bad) out xchg mov (bad) pushl insb scas (bad) xchg fldcw mov js loop sarb (bad) (bad) (bad) push test (bad) sar mov stc pop xor jnp xor aad adc dec and jmp lahf xchg (bad) aas cmp mov sbb dec pop mov aam adc cltd cmpsl (bad) dec pop decl clc xchg sub (bad) (bad) lcall dec sbb test shlb insb adc mov mov (bad) jg adc sti sub pop cmp (bad) dec add mov and mov mov sbb and cwtl adc into loop and ret fisub je xchg dec (bad) (bad) call xor leave lds ficompl (bad) add js addr16 rorb std push out and ret icebp mov mov jecxz fsubrs mov jmp cmp mov fsubs call lahf mov int add inc xchg (bad) (bad) (bad) push iret outsb (bad) out (bad) (bad) xor xchg setl add jle mov loop test dec pusha and (bad) (bad) pushl pop inc dec inc adc ljmp ja xchg adc sub addr16 clc and mov insl jns movsl (bad) (bad) out clc xchg js in test ja dec mov pop icebp cld lret xor out scas xor (bad) (bad) ljmp clc les fist int jecxz sti add jne inc dec jo (bad) (bad) jmp pop push out adc imul pop in mov (bad) push jnp cs (bad) jmp jmp shr ss fistpll dec adc test mov sub ror mov mov out inc ss (bad) (bad) (bad) pushl lret cmp lds es scas xchg inc inc popa data16 in adc das mov in nop cwtl cli (bad) (bad) pushl lea orl mov sub jl inc or (bad) out rolb adc aaa sahf out pop push and movsb cmp xchg add (bad) ljmp xchg nop out mov sbb mov sub mov mov addr16 lahf jmp pop movsb fdivr lea pop adc das fs inc mov daa mov push scas in jns fwait lock stos pop or mov jbe in sub xchg (bad) (bad) (bad) incl xlat popa daa push xor in stos mov push loopne mov fstpt mov jg push (bad) mov int3 xchg pop and and or (bad) ljmp jp,pt lea out popa cli push and jg inc js (bad) (bad) mov test sub push imul cmp jg in mov cmc (bad) (bad) (bad) lcall pop pop aaa mov clc mov jle das in mov push adc pop mov incl pop push std data16 push xor out xchg adc inc mov push (bad) push popa mov pop (bad) (bad) (bad) push sbb (bad) fldt daa (bad) mov sbb jmp xor imul dec adc pushf mov mov inc sti mov lock out pop xor sub cli outsl cli (bad) (bad) jle cmpsl push sbb push loopne ret mov stos mov mov (bad) call lock imul inc movsl jecxz sbb lret repnz dec pushw dec cli (bad) (bad) lcall mov or mov fld out pop push fadds std pushf sub decl push movsl js pusha jno je xor xchg pop ljmp outsb lcall mov (bad) (bad) pushl mov push test dec mov push inc and xchg imul call ret mov dec mov gs pushl xor loope insb push (bad) (bad) (bad) jg (bad) loopne inc fdiv lods adc in js pop fwait scas nop (bad) fldl jns nop repz mov (bad) (bad) pushl and ret push pop (bad) fcmovbe pusha aaa nop pop and xlat aad ret mov pushl mov jo enter ljmp in pop and adc ljmp leave fiadd push aam pop or das cli (bad) lcall jns out and jl mov iret scas push nop add dec (bad) (bad) (bad) (bad) jle mov inc rcl mov jb daa jb adc jno sbb aaa outsb add (bad) ljmp add and pop cs jge and lcall push lock cmp sub (bad) lock (bad) xor rorb (bad) (bad) (bad) decl sub adc xchg mov pop stos inc dec pop mov sub push je loopne aad mov pushl fisttpll push xchg mov dec push sti mov xor mov add adc sbb (bad) (bad) incl test cmc lods push imul test rorb add in ret add xchg fnstenv jno (bad) pushl ds dec inc insb movsl adc mov sbb (bad) incl xor jb pop adc cmovbe and aam adc clc (bad) lock (bad) (bad) mov mov jae pop cmp xor mov ja shrb sbb scas in cld adc das sar and adc xor adc (bad) jae es jmp test int3 cld jo ds push sub lods mov (bad) (bad) (bad) decl cltd cltd into lds xchg sub mull ret inc (bad) (bad) jmp ret push cmpsb js xchg scas lods ds cmp sbb mov xor (bad) ljmp gs call sub adc xchg lahf mov pushf enter hlt push ret dec or (bad) (bad) (bad) pushl and xchg pop test sbb adc imul mov (bad) (bad) (bad) ljmp out inc pop xlat in pusha pop sub sti out scas xchg stos xchg in xchg mov les es (bad) (bad) mov pop push sub mov (bad) pop adc cmp (bad) (bad) lcall pusha bound mov push cmpsl (bad) nop test pop jmp dec sarl sub das int3 fcoms (bad) fldl and sbb test xchg les mov push add vpaddusb sar jb scas cli in into in cwtl mov (bad) (bad) jmp or pop inc mov jnp enter add pop pop fwait push jbe les sub fidiv inc (bad) ljmp sbb jns jg inc ds mov imul (bad) (bad) ljmp (bad) xor ficoml aad mov adc add mov jb dec inc (bad) mov dec lret mov (bad) incl rcl dec leave cmp iret jl in xchg or aad (bad) (bad) jmp sahf xchg outsb adc arpl cmp bound sub in test mov daa (bad) dec (bad) ljmp mov ss mov sub push lcall sub push lock mov jg xchg jle mov or enter push ret xchg (bad) (bad) call pop (bad) shlb sbb inc jo call push adc call lcall jb cmc xor jl add loopne xchg inc push jle jnp adc loopne mov dec mov (bad) (bad) lcall mov scas sti sbb rcl cmpsl xchg sarl sub mov fisub cltd pop jnp ljmp mov inc pushf (bad) movsb and sbb cmp (bad) (bad) jmp aam stos mov nop jp xchg jo cmp mov jl (bad) (bad) jmp cmp jbe adc jo pushw std dec jnp rorb shll dec jp addr16 (bad) notb cld decl mov les xchg jle int into iret sahf sub mov (bad) pushl mov push ja sahf adc decb add sub aaa jno adc and pushl add (bad) mov cmp push cmpps pop iret cmp xchg (bad) (bad) faddl sub jbe jne rcl pop pop jp test xchg addr16 inc pop cmp (bad) (bad) (bad) fimul das inc push jnp out sub push cmpsl mov sar pusha or jne sar (bad) ljmp data16 push ret inc sbb aam sbb xchg xlat (bad) fnop cmp incl sbb xor nop pop adc xor sbb fs pushl std fistpll outsb (bad) ljmp sarl and dec xchg (bad) fidivr mov push mov pop icebp decl sti stc add dec adcl nop push cwtl (bad) (bad) mov sub lods jmp fbstp inc stos out pop (bad) test dec adc (bad) (bad) push mov xchg xchg and ret inc add mov jb arpl (bad) inc jns,pt xor (bad) jno sbb loop ds stos pop mov das rolb inc or ret fdivrs push mov or xor adc dec cmp aaa xchg jp sbb cwtl adcb repnz (bad) (bad) movsb clc insb or pushl mov cli push cltd ja icebp arpl sahf (bad) cmp inc loop push mov cmp loope inc (bad) (bad) (bad) lcall out rol inc mov xor ss cmp (bad) jno and stos dec add (bad) (bad) lcall jno push movsb mov test arpl test inc push lahf pusha (bad) (bad) (bad) (bad) lcall iret enter inc push jns cmp mov push mov push push cmp (bad) (bad) dec inc jne aad out inc adc dec aaa repnz ret (bad) lea outsb mov (bad) (bad) call dec fisttpl adc push ss cmpsl xor mov dec xchg cmp push fisttpll mov hlt dec test mov sahf mov cmp cmpsb sbb mov xor and int push faddl inc insl imul decl js jmp aas jmp pop mov mov (bad) call loope push pop mov add and aad adc jp xor pop imulb in sub sub loop mov test or in add inc mov (bad) push sbb push int leave std xchg and push sub (bad) repnz loope (bad) mov movsb dec dec xchg sub lock and ror push (bad) cmp cmp adc popa mov (bad) mov call and inc out imul dec xchg push enter cld int hlt ljmp outsl cmp imul cmp jmp hlt mov enter xchg jmp ja xchg dec (bad) cmp addr16 call and je shrb adcl decl push incl cmp add mov jns insb (bad) (bad) (bad) (bad) cmp pop pop int3 in mov inc pop icebp pop mov hlt (bad) icebp (bad) pop les xchg iret push fidivl test (bad) in (bad) inc lcall jmp add xchg dec andb cmp inc in add rcrb insb dec (bad) pushl cli cld push daa mov scas cld adc icebp or mov mov mov adc cmp (bad) push or pop inc repz lret in push popf sbb jl push add mov cwtl in les xlat pop xor test dec (bad) lcall fisub nop dec int mov cmp xorl int3 dec (bad) (bad) (bad) (bad) incl jb push mov testb sahf pop inc rcrb lahf push cmp mov test enter ss (bad) (bad) cli ret pop sub and and lea js and icebp (bad) lcall cltd daa sub add in lock (bad) jg fucomip xor mul shll dec cwtl mov test stos lds pushl fwait rcrb and xlat cltd add jae dec aas lock (bad) push dec dec loopne test jno hlt and mov xor mov outsl lods push arpl pop xchg insl mov cli aaa imul mov lds mov scas imul (bad) (bad) (bad) (bad) fisubrl xchg and mov cwtl mov inc outsl out nop bswap push push test sub push or mov int3 pop popf mov cmc mov adc (bad) incl adc pusha jp shrl cmp andb dec imul xchg rol push or in outsb adc inc pop push mov imul xor in inc (bad) (bad) (bad) (bad) mov xchg stos push add addr16 sub popa dec pop lods jle imul jp xchg js (bad) (bad) int3 test sub sbb xchg xchg int3 mov enter xlat pushl es ret cmp mov gs loopne mov outsb fnop jmp xchg aas fs lahf lret or (bad) decl cmpsl xor add pop sahf (bad) mov imul (bad) (bad) (bad) ljmp sahf jno lret test pop (bad) inc sbb dec jecxz xchg xchg (bad) insb ds jecxz mov mov xchg aad hlt stc mov xor add add jno add repnz push repnz jle out mov subl sub jnp lcall sub clc mov out dec js outsb xor std test movq push (bad) out pop into push mov mov sbb mov pop sbb mov xchg mov out pop adc clc mov mov fwait (bad) out xchg pop rcrb sub ljmp mov (bad) ljmp push fistp mov xchg lcall lcall (bad) in push sub cmpsl icebp scas adc nop repz push push call ss cmc and pop enter aas fndisi(8087 mov xchg (bad) mov mov (bad) (bad) call insl test cwtl enter and hlt jno xchg hlt lock mov cli adc mov in lods out (bad) cld decl pushf mov xor adc and call mov xor dec adc or xor pop rclb and mov pop lret into (bad) (bad) (bad) ljmp adc ljmp mov dec or jmp dec jmp mov pop and in imul clc addr16 nop adc jmp xor jg mov xchg xchg mov shrb push ret decl gs lds fistpl test mov cld pop xchg clc lret popa and scas sub (bad) decl cmp add repnz js dec pusha inc mov xor jnp js (bad) incl mov dec push lahf sbb es aaa test xchg jne scas adc cmp sub dec push out xchg mov xlat arpl or fdiv xor fwait jb pushl nop push push ds js cmp (bad) (bad) cmp arpl jge (bad) mov jle ret jbe fdivrs dec bound jmp enter mov jecxz les xchg jae imul loopne clc into (bad) (bad) (bad) dec xor sub js ljmp notb fistpll cld xchg (bad) jo (bad) (bad) lcall sbb sbb icebp scas test add fs int xchg mov xor cmpsb pop lea lods sarl jb in inc dec (bad) std (bad) (bad) ljmp mov inc out push adc sbb nop int3 and lcall inc mov (bad) mov sti test inc sbb std (bad) jmp stc add inc (bad) repz mov pop mov pop incl call lret jecxz jne jmp scas sti (bad) (bad) (bad) lcall push and addr16 mov fsubrs mov movsb sub mov mov out (bad) mov lods (bad) (bad) (bad) call (bad) cmc out mov sbb add nop pop sub xor xchg jecxz test cmc dec push sbb repz xor pop (bad) decl std fldl cmp push sub fiaddl and fwait (bad) push sahf lock pop sti xchg jge mov call push push jno cmp (bad) (bad) decl dec shrl push mov push jg imul pushf mov clc sbb pop mov cltd add call stc shrb push je les sbb xchg jnp mov mov jp mov sbb (bad) (bad) (bad) in negb mov fistpl jp mov iret xchg add pop and fnstenv (bad) mov movsb mov lock cmp mov inc mov sbb push insl std (bad) jmp mov xor or (bad) jg ds sub lret negl and add sub sti sahf ljmp in jle xchg fisubl dec les adc stc (bad) (bad) (bad) call jmp sub hlt push jno pop jp sti and sti (bad) dec cmpsl shll (bad) (bad) inc sahf es (bad) cld cmp push imul pop sub inc bound aam (bad) (bad) lcall into test dec cld addr16 add sbb fwait lds push (bad) dec or or (bad) in add and lcall enter and rorl inc mov mov push dec cmp mov xchg ja (bad) test sub data16 jae sub decl push ret imul fsub loop (bad) (bad) fbstp lock test stos xorb add (bad) dec loope pop cmp xor sub fs push add xlat movsl sbb mov ret decl jg mov mov cmp data16 cli pusha inc nop ss add (bad) fstps lret pop lds pop fiadd jecxz cmp sub mov (bad) fcomip mov loope mov push out je and (bad) (bad) (bad) in leave cmc bound sbb pop sarl push adc or and add loop mov inc shll dec mov hlt test scas mov (bad) (bad) (bad) fcmovnb movsl loop cmp sbb (bad) dec xlat lcall jl mov sub (bad) (bad) cmp sbb add pop lcall inc dec std push ljmp subl lcall xor movsl jae xchg mov (bad) call jg cmp add bound shrb mov lcall cs push adc pop cli out jp,pt mov xchg sub and jl lds data16 adc (bad) (bad) (bad) jmp mov xchg aad push cltd (bad) cmp adc jno mov and sbb xchg add jb (bad) (bad) (bad) jmp std in std loop adc ja mov pushf push rcr mov add in (bad) (bad) call ret loop mov jl enter fdivl ds pop xchg cltd fsub dec lods pop jb test (bad) (bad) (bad) lcall adc aad (bad) xor sbb in mov icebp icebp sub mov (bad) (bad) call jecxz jp out adc mov xchg fisub repnz lods fsts cmp pop jle aas cmp sti or mov scas xor (bad) (bad) ljmp mov sbb lahf mov push xlat jge in xor enter mov push (bad) (bad) (bad) (bad) cld pusha jmp sbb inc ljmp jmp inc lcall add (bad) (bad) (bad) pushl das cmp sub xchg mov sub push xor inc jo mov lea pop lods lcall pushl dec and jl mov pop sbb leave stos outsb pop test (bad) (bad) (bad) incl lea jecxz mov mov ds adc jle jno lret (bad) decl lock xchg jne cmp jns adc mov test cmp jb (bad) (bad) fistp adc dec rorl pop sbb jecxz lret into inc fmulp scas xor (bad) decl iret mov push dec wrmsr dec out (bad) mov jns mov nop iret mov ret mov xor imull aam add ljmp icebp mov add dec jne ljmp cltd mov xchg cli add pslld cmp add adc (bad) (bad) pushl cmp mov or push fcoml out jecxz cmp mov (bad) call or dec xorl mov mov pop (bad) (bad) (bad) (bad) mov jne movsb cmpsb mov (bad) iret dec mov cmp jb (bad) in (bad) ljmp and or cmp adc cmp or addr16 neg mov loopne sbb test mov movsb pop fwait rol pop cmpsb (bad) outsl push sbb and jb fisub (bad) (bad) lcall mov xor mov mov (bad) or lret int push push rol jmp xchg inc sub xchg loopne in ds adc (bad) (bad) inc imull (bad) stc ja fsubl push stc arpl mov aas cmp xchg mul xchg nopl ret (bad) (bad) incl cwtl setns pop jbe repnz bnd mov je xacquire sbb lcall push (bad) repnz ffreep mov lea mov dec jno out (bad) mov daa insl dec adc xchg mov pop xchg mov (bad) (bad) fcomip sbb xor xor jge sahf je pop cmpsl mov jns (bad) (bad) (bad) (bad) jns cli mov lret out sbb jae or (bad) in mov ret aam int pop inc cli repz mov clc fdivp sahf or not cmc fdivrp (bad) mov sbb fadds data16 enter lcall pop xor xchg and jp (bad) (bad) (bad) inc lahf loop (bad) pop imul popa fisttp lret add int3 adc (bad) (bad) (bad) (bad) fildl insb mov jne sub movsl lea sub mov xchg call (bad) (bad) (bad) jmp xor outsl (bad) fwait cmp cli fwait mov inc cli or adc test adc (bad) lcall sub (bad) cwtl jp xor lock pop dec lcall jne adc test jle shl mov std mov jb jne mov pop and (bad) (bad) (bad) call (bad) xor xor jns mov lret jmp (bad) out andl setg mov cs lret ret jb stos dec movsl cmp or xchg cld (bad) jo popf out pop pop sub jns inc jo sbb (bad) (bad) jmp lahf jbe ret cli fild fwait repz rcrb jno add mov fwait sti mov (bad) (bad) sub es sub rcr jae add cltd jae add (bad) lcall and dec and shrl icebp es cmp add mov (bad) jmp mov xchg push fs (bad) (bad) mov and stc (bad) add lods (bad) out xchg daa mov (bad) jge in dec adc mov cmp pop jne cs std or pop fnsetpm(287 mov mov mov imul cmp stos (bad) (bad) mov (bad) (bad) (bad) (bad) fxch sbb (bad) mov (bad) mov mov sahf xor jg mov lea mov xchg fcom inc (bad) or pop lods jecxz in sub imull or test lret (bad) dec (bad) repnz adc inc cmpsb xchg adc frstor nop inc (bad) lcall js mov ret pop fisttpl mov loope out mov ljmp fs jne cli adc mov and in push pop dec std call pop in push nop sbb movsl add mov dec test (bad) jl call mov in pavgb (bad) (bad) lcall sub jo jno rcll xchg enter inc (bad) (bad) jg pop inc js pop add enter xchg scas stos ja xor xchg and popf (bad) (bad) (bad) incl push cmp xchg je pushf pop mov xchg cmpl push pop hlt (bad) (bad) fsubrs in xor mov nop or add inc sub jbe imul nop call jp (bad) fsubl cmpsl leave xor (bad) ja adc cs sti fdivr (bad) (bad) decl rolb add dec mov xor in dec fs add adc push push mov jecxz sbb pop jb and (bad) lahf xchg bound mov out (bad) (bad) call fwait into pop icebp push add fidivr xchg das jb js ss sbb push (bad) repz arpl cmpsb and sub (bad) (bad) (bad) mov or mov mov push cmpsl jns mov in clc cmp pop (bad) (bad) decl pushf jo dec mov pusha cmp popf jp mov and clc aaa std pop jns sbb mov pop xor outsb stc xchg dec (bad) in jno xor (bad) (bad) jmp xchg rsm (bad) sar inc add add cmp jp (bad) (bad) ljmp mov out repnz push out add xlat pop cmp test ljmp xchg stos add push out call inc jg rolb push lds decb std (bad) (bad) incl mov ljmp jnp mov xor (bad) (bad) (bad) repz push pop cld pushl lret mov sahf popa leave insl sbb lahf jge add (bad) (bad) (bad) mov pusha clc cmpsb sub in sbb (bad) pushf repnz adc or jg jl pushl cmp or sub dec pop (bad) call mov push sbb fnstenv add test decb loopne in outsl cmpsb test xchg pop (bad) push add or jno (bad) (bad) call enter push and insb cs (bad) push inc mov movsl xor iret and jg or dec mov imul add sar jg movsl out push cmpsl xchg mov test jle jmp xchg (bad) incl mov pop xchg dec (bad) jg dec js rcl cmp pop push loope xor or xchg dec insb lea out iret cmpsl (bad) (bad) (bad) jmp cwtl dec rclb stos pop (bad) fidivl push je outsl cwtl scas push cmp xchg sub jg insb std aas ret stc xor gs jbe ljmp insl aam xor mov in lea pop lods stos out aad ds mov lcall (bad) xlat mov fcompp push fbld (bad) fidivr pop pop jmp ljmp mov inc bound in mov sub adc push xchg mov idiv (bad) (bad) push (bad) pop dec pop cltd add lret push fidivr shl push clc subl sbb aaa adc jmp and sub sub test add push insb fistpl sbb push pusha out inc mov cmp data16 cmpsl inc mov (bad) (bad) ljmp push gs lret pop pushf scas out cmc push sbb psllq push xorl std xor cwtl push mov inc jb or js mov lock enter dec xchg incl sbb sub add add addr16 mov mov xor or ds jmp push or pop aam lea shl lock jno jl jne push xchg mov jae aad push jecxz (bad) (bad) mov out lret shll ds (bad) xor xchg js xchg movsl dec fcomps (bad) (bad) fild cmp fcompl jecxz lcall pop push sbb cli inc jecxz in es roll test (bad) dec jb push movsl pusha fistl pop iret cmc iret dec fidivr push lods fdivrs push insl dec adc xor cmpsb adcb outsb sbb push (bad) call cmpl push push add jae jmp pop scas into in lret hlt and std (bad) cmp in pop sub fmull scas test push testb imul pop adc sub push cli stos in cltd repnz roll mov in adc (bad) (bad) (bad) push cld jg jl pop lods sub add xchg clc sub pop jg data16 mov (bad) (bad) (bad) fdivl sbb dec pop adc cmp lahf pusha xor fimull push insl (bad) (bad) in add gs pushf add xor fs or pushw sub jle sub icebp jmp imul cli std jg cmp adc cld adc or pop cmp (bad) (bad) (bad) cmp push adc push pop fcmove ja dec pop xor jmp cmc (bad) (bad) (bad) ljmp push push mov jmp daa icebp andl mov sbb dec bound jmp mov stos mov rep and push mov and jle mov lock pop lcall sub mov outsl movsl test mov call cld cmp push js pop notl mov outsb pop test (bad) (bad) ljmp dec mov mov jle and xor aam xlat in and fiaddl xlat pop xor pushl xchg pop mov inc jmp decb lret sbb push push (bad) (bad) (bad) (bad) cmp cwtl jbe sbb stos arpl cmpsb mov add stc dec sub cmp sar pop cmc adc add cmp ja unpckhps call or xor cmc idivl fs icebp and (bad) xor mov cmpsb or sbb out lea mov loop pop add not xchg add mov gs (bad) (bad) (bad) lcall pop vandnpd pop mov mov adc adc cmp xor sti outsb std inc jne mov pushl sbb por mov mov mov aam and insb add pop (bad) (bad) (bad) jmp (bad) push ret insb add (bad) jb xchg cmpsl jbe test cmp jecxz hlt fucom es (bad) (bad) incl psubw sbb mov fbstp fldt enter inc cli negb add mov dec les inc (bad) (bad) (bad) call ror pop (bad) and (bad) jge ret jns je mov out adc decl clc es cmc mov aaa icebp xor push add pushl out pop (bad) adc leave sbb inc gs (bad) (bad) incl inc cmpsb jbe lret cmp je insl sar pushf fidivrl or imul inc (bad) insb sub jo (bad) (bad) (bad) dec cmp dec sbb add data16 dec and push and (bad) (bad) (bad) lcall repnz scas imul pop dec aam pusha cld mov pop add cltd dec and (bad) dec cmp jmp fmuls ljmp mov call inc fimul (bad) (bad) jg sti push int3 out ja sar add and stos lods mov adc (bad) ljmp or ss lret jb (bad) fwait push sbb xor inc jns adc (bad) (bad) ljmp push jno xchg inc and jle dec out outsl sub js sti in or inc (bad) sti add adc rolb js jge (bad) (bad) incl iret outsb ss jle rol loopne int3 movl jp pop cmpsb adc push cmp xchg js scas repz lds ss xor idiv push fistpl sub jae (bad) (bad) ljmp or insl out sub jl inc outsb and (bad) call lcall adc call ret adc repnz jmp (bad) out sahf cmp dec lea jb (bad) (bad) (bad) incl xor insb jno sahf jle fcmovu or jno call push das cltd pop (bad) insl std (bad) incl pop inc pop lods popa add popw xlat cmp ja mov lahf jg dec pop jle,pt xchg mov (bad) (bad) (bad) lcall pop push pop inc push pusha rorb mov ja push ja cli push js addr16 enter jmp mov fimul or fldcw sbb sbb mov insb into jl mov push and (bad) lcall add mov xchg jp aam aas arpl add imul incl xchg sub or ljmp mov sub add in sbb mov insl mov and test mov or cli arpl push pop mov call dec cltd int3 pop imul inc aam mov fiaddl xchg pop (bad) (bad) jg mov xchg push fcom test jb push jecxz mov pop push (bad) repz (bad) jg cld mov mov stos (bad) dec les dec loope pushf push xlat pop pop (bad) (bad) ljmp int3 push mov insl sbb dec push aad repz out out ret divb hlt jbe cli (bad) (bad) decl push arpl mov jb and push ret call push test cmp decl mov ds cmpsl jo add fldcw jmp sbb or sbb adc enter in mov push push (bad) lcall frndint inc sahf jo mov enter mulb sahf (bad) (bad) call scas adc inc adc movsb pop (bad) repnz jb lock (bad) call push push inc and or addr16 mov iret insb or sbb (bad) fistpll test pop push ret jae (bad) (bad) (bad) mov mov cmp push fsts push adc aam shrl pop mov xchg aam mov out and mov (bad) (bad) call push lds and push sub cltd adc iret ret push (bad) (bad) (bad) call jns andl (bad) mov dec dec pop loope rclb and sbb decl or roll ds in mov xchg mov add dec adc (bad) mov (bad) mov inc (bad) (bad) (bad) (bad) in shll adc or lods cmpsl icebp or xchg out cmp flds ret aaa add mov jmp outsb fs das pop mov xor xchg shl dec aam jge mov (bad) (bad) (bad) pushl das dec mov inc add ljmp aas das pop lahf je add cmpsb (bad) (bad) ljmp pop (bad) hlt xor out and xchg and mov pop push push (bad) insl adc stos pop cmp lret stos adc (bad) (bad) decl bound dec sub mov push les movsb or (bad) (bad) incl cs adc xor les and pushl mov pop sahf fwait push dec pop out jmp cmpsb jae sub push sbbl or mov (bad) (bad) jnp sub inc cmp fidivrl pop pusha dec and negb cwtl push mov add (bad) (bad) jmp inc xchg sbb lds xchg mov fwait mov nop std sti pushf cwtl loop (bad) (bad) cld cli in std add adc and jg fs add icebp push mov (bad) (bad) (bad) mov or xor aaa cmp add xchg dec adc pop aas stos inc push dec int cmp (bad) (bad) jmp movq push lahf sbb mov ljmp mov (bad) lcall mov sub xchg popf push xchg testb (bad) (bad) (bad) incl jmp mov ret sbb and std mov cmc arpl into gs cwtl mov add test mov in scas jae push (bad) (bad) (bad) lcall mov or xor sub or icebp roll cld imul xchg lock adc outsl xchg cmc push jecxz lret (bad) dec (bad) imul (bad) lcall mov aaa lods cmpsb fwait aas cmp in mov push out mov es mov repz jmp mov cli and ds add cli incl int3 scas mov mov aas je into out (bad) (bad) (bad) incl sub push or aad xchg pop fs adc (bad) pop (bad) clc sbb (bad) (bad) (bad) jg add (bad) xchg imul mov pop out push xchg mov (bad) (bad) pushl mov das mov shl mov pop cli sbb ja jb loopne (bad) (bad) call sahf jp add lea bound pop jle lds pusha mov (bad) (bad) jmp or fnstsw sbbl gs call jae and mov add test sarb mul (bad) (bad) (bad) ljmp jns arpl stos adc cs push hlt daa sbb cltd dec fldcw xchg (bad) mov add push jecxz pop je divl mov dec es ret cmp cli dec cli (bad) (bad) (bad) jg inc jo scas xor push jmp rclb and (bad) incl pop insb movsb je into (bad) je xor mov dec (bad) push std cmp movsl test sahf push add test fisttpll sub add ja loopne jg (bad) ljmp xor mov sub sti fiaddl mov je lods imull rcl mov mov xor repnz sub test (bad) (bad) (bad) decl stc adc int gs jecxz in das into pop pop cltd lods scas loop and das clc (bad) incl dec rolb cltd mov dec mov xlat out repnz cli ljmp push out jne stos lcall xor (bad) pushl mov mov arpl cwtl int3 push mov dec inc sbb inc lret cmp add (bad) decl sti pop lods pop sub bound mov push movsl jmp (bad) (bad) (bad) mov mov adc subl fldl out xchg push xor jmp inc fcos (bad) (bad) (bad) jns into mov mov jle mov fldl2t ret add and popf inc xchg lock jle ljmp or mov mov repz pop imul mov and je (bad) (bad) dec clc in and inc popf imul xchg int push xchg incl add sub (bad) fcomip (bad) jmp mov gs dec or pop fdivrs push mov (bad) (bad) jmp cli insb shll sahf or inc gs mov cmpsl lahf nop loop dec add popa pop lea in loopne mov fdivrl cmc pop (bad) call pusha lods outsl sbb add xchg pop imul pop push subl lahf inc mov pusha xorl nop mov cmp mov cld pop inc stc inc pop jle ffreep popf repz sbb scas test ljmp cli pop xlat ret push insl addr16 sub fwait pop mov into out push (bad) (bad) lcall sub mov (bad) inc pop testl and mov insl cmp pop cmc (bad) jmp and sbb out dec fucomp push mov (bad) ljmp movsb or sub adc inc or cltd int3 add adc std jbe xor cmp fbld add push xchg jo (bad) (bad) (bad) dec sub xor mov outsb sarb (bad) pop loopne add xchg pushf loope fdiv stos (bad) mov sub jne mov adc cmp (bad) decl xor das jo movsl popf mov adc vsqrtss lcall lods mov (bad) pop sbb push aad (bad) (bad) incl rcrl mov dec cmc movsl push jmp xlat lcall or icebp and movsb inc roll (bad) pushl stc push mov push fild outsl std mov mov int xchg rcrl das or sub (bad) dec mov mov xchg push ret and xor decb mov inc adc add leave lret subb movsb (bad) (bad) (bad) jg scas dec jmp sbb sub mov mov push enter (bad) (bad) lcall fisubl xchg adc lcall add scas pusha inc (bad) sbb (bad) call and lods ja mov (bad) xor jle cli subb xchg mov call add fiaddl pop pop sub jg (bad) fidivr dec out fisttpl aam or jge test (bad) (bad) ljmp push out pop jns mov xor test scas cmpb mov or xchg ret cmp cld (bad) (bad) cmp mov dec dec and test leave mov in lret inc jp (bad) dec (bad) (bad) dec jne fiadd lods xchg mov inc or outsb push mov sti (bad) (bad) (bad) fildll mov subl dec mov jbe cli lret mov decl xchg push pop or inc jecxz sbb jbe xor test rep subl xchg cmp mov pop hlt ja mov std pusha lahf push std dec sahf (bad) jg or mov lcall repz (bad) (bad) lcall (bad) dec das iret xor xor js jo sbb in inc push (bad) push lcall call mov notb imul sub repz (bad) cmp xchg sahf lcall or mov or test lds call bound sbb pop aam mov ret jmp xor (bad) incl mov adc in xor fsub in mov xchg or (bad) (bad) call sbb shrl lahf sub cltd pop (bad) xlat in xchg jae in xchg incb idivl stos pop (bad) (bad) (bad) ljmp popa cmp mov sbb inc sbb jle or ds mov pushf (bad) call fidivr dec sti mov test lds and mov mov sbb loopne jns (bad) cs (bad) fucomi xchg inc mov (bad) decl test loopne test mov stos mov xor xlat mov pop (bad) jecxz and push push push or and mov es incb sub push out scas faddl xchg xor (bad) (bad) ljmp idivb lea scas pop test cmp (bad) mov push mov (bad) mov cld push and xchg in cmp gs push push sub push std (bad) mov add ret mov scas pop lods pop inc ficomp aaa stos jl mov lret loop cmp (bad) (bad) fimull cmpsl or mov add add mov pop dec ljmp adc (bad) (bad) call adc pop test es mov dec enter (bad) dec pop loopne jecxz daa sar sbb lahf or cmp jp into inc cmp mov pushl sahf imul loope aam pop js dec sbb push jmp xchg adc ret xor jle adc sar (bad) out dec mov jle cli xchg adc outsb inc push dec das scas push fstps jns adc mov inc xchg cmp inc ret pop cmp das (bad) aam mov push call adc (bad) adc push pop cli lcall mov push ss inc inc jecxz xor xchg jp inc in lret fs std sti arpl jmp scas cli add pop or ret daa push mov mov sar (bad) (bad) pushl sub cmpsb outsl js daa push dec pusha clc enter je mov loopne (bad) lcall push mov mov or loope and popf sub stc xchg icebp dec out (bad) call std jle xchg dec scas mov call mov in push jg (bad) daa xchg or (bad) jmp clc sbb rcrb mov push imul pop dec scas cmp dec decl cmc lret lds inc mov pop cli ds push (bad) (bad) (bad) inc mov cmp dec mov adc repnz sub hlt in ljmp cmp call adc (bad) test push mov push (bad) (bad) incl movsl pop out or sub jnp mov cmc clc pop push in pop mov (bad) dec sub xor jecxz and dec mov mov int3 leave jmp adc test pop jb push int3 (bad) (bad) (bad) (bad) mov jmp je dec dec cltd fcompl push mov and sbb add jge (bad) inc inc cld fdivrp ljmp ds cwtl aam cmpsb addr16 jae mov roll scas pushl sub mov push call adc jbe fisubrl es pushl lcall mov mov sub outsb sub fcoms lret mov xor outsl cli lcall leave xor inc repnz fisubr leave pop out or test pop (bad) decl push sub push (bad) jecxz add int3 (bad) cs dec js jae loopne ljmp cli int (bad) mov insb xchg inc (bad) jmp xchg or jne pop sub loopne in div (bad) (bad) call cmp sahf jns test jmp jg xchg inc mov scas fcoml and jae adc jmp stos (bad) jg xchg ja aaa mov outsb das dec cld dec push stos in push push mov lea lcall decb add popa outsb psrad fisub stos out ss xchg (bad) fcomip fwait adc inc out repz aas daa mul sub (bad) (bad) pushl or xchg adc jo in jb aas jmp mov (bad) decl push dec les out adc xchg mov rcrl lcall lahf out sbb pop not sar jae js loopne add sbb fs xchg fdivrp (bad) (bad) pushl cmp cmpsl cmp push cwtl inc scas and fucomp xchg gs iret (bad) nop cmp sti shrb inc popl hlt fcompl (bad) decl pop jmp jecxz out imulb sub push into (bad) xor (bad) (bad) (bad) mov xor out jnp in fimul xor xchg cmp (bad) (bad) (bad) decl push lods mov jl test mov imulb mov loopne adc jmp jno insl mov pushw pop sub into call push ds cmp (bad) and not (bad) (bad) (bad) decl pop jg fdivl pop mov lahf imul lods jne pop xor arpl sub frstor sbb cmp repz dec lods (bad) ljmp and jecxz sbb imul xor andl jle (bad) fcomip fnstenv ss lcall mov mov (bad) frstor outsl pop push bound loope ljmp sbb vmread stc mov sbb in mov push inc push pushl std (bad) mov leave jecxz data16 in jo mov mov and add push pop repnz jg pop adc inc stos cmp pop scas clc (bad) (bad) (bad) mov jo lods data16 outsb clc jp out or sti adc xor cmp cli xor ds pop fidivrl mov mov nop (bad) ja lahf cmpsl and pop dec (bad) jbe push adc (bad) decl js jns sti and inc cmp fsubl pop out xor out dec icebp orb mov out clc ds xchg jmp adc cld aad pop ficomp pop test (bad) into (bad) xor adc jo (bad) (bad) pushl jne in xchg outsl jbe rorl ret mov rclb jnp out xor pop enter inc jbe fstp or (bad) aaa pusha or lds push (bad) jg dec mov daa subb loope cmp movsl loop daa arpl hlt (bad) (bad) sti std test fwait mov jl mov dec lods jp imul (bad) decl cwtl adc pop cmp loop lods add mov fimull lods push loopne (bad) (bad) jg sbb cld into lret jg jmp pop fldz jne int3 movsb loop (bad) ljmp fsubrl dec inc repnz mov mov xlat jno mov fdivrp dec jg (bad) jg adc fsub testl or lods xor scas pop fcoms movsl aad (bad) (bad) incl jnp mov fcmovnu loopne stos pop mov aam and ds popf (bad) (bad) (bad) incl pushf std jno je xlat mov into mov mov sub (bad) loope das clc (bad) ljmp sbb (bad) and sub iret mov mov mov iret ret testb cltd inc jmp ffree sar (bad) decl cwtl add pushf push jae push outsl mov xchg cmpsl fistpll lds cld jg add adc repz jg cld sbb xor pusha jmp add (bad) pop push pop pop arpl (bad) jg mov inc rcl lahf mov add xorw (bad) (bad) pushl fbstp dec push push sub mov pop jnp xor inc (bad) (bad) (bad) jmp (bad) fsubrp jnp aaa sti inc mov scas or mov sarb inc cmc shll test insb out inc aaa ds (bad) (bad) (bad) (bad) cmp adc insb cmp loope mov lcall cmpsb rclb mov (bad) (bad) pushl jecxz sub cld mov xchg xchg or gs inc xor push pop ja test loop mov icebp jne sub add aas aad mov and add (bad) incl enter and test (bad) push cwtl repnz cld jno (bad) (bad) flds add bts jno insb mov pusha clc (bad) fnstsw mov sub fcmovb cld sub scas jge pop mov (bad) (bad) decl fiadd shll (bad) xchg or orb fild mov mov lcall jae out test das int in stos in lods push pop sub xchg shll lcall and andb pop dec jno add dec adc decl jge arpl cwtl pop fsubrs scas (bad) adc xor push mov (bad) (bad) sti mov stos test popl mov add xchg movsb inc (bad) lock mov jae test xor (bad) inc add xchg xchg cmc mov mov (bad) (bad) (bad) in jle pop add ss mov mov repz data16 jmp iret ja xchg je (bad) (bad) decl jnp xor xor mov jbe pusha xor and inc repz ret arpl fistpl add aaa inc xchg (bad) (bad) pushl mov lock dec addl repnz lods xchg dec scas (bad) (bad) (bad) incl sbb lret lea push inc mov ljmp (bad) (bad) (bad) dec fstl mov xor sbb cld addr16 xchg push nop mov or (bad) (bad) (bad) jmp arpl mov cmp inc arpl jb repnz push sarl sbb (bad) (bad) pushl lock xor or pop ja call lea out jns pop and (bad) jg jmp add mov mov aaa outsl add pop pop movsl inc mov cwtl (bad) (bad) (bad) jg cmc lods bsr int3 xor adc cmp rorb inc cs xor sub add add stos out fsubl push mov mov mov xchg mov push into test (bad) (bad) (bad) jmp pop or dec push xor enter and inc add push movsb std pop lea (bad) (bad) (bad) pushl ss ret jae jl inc cli mov and imul add int3 (bad) loope (bad) (bad) pushl pop xchg lea xchg ljmp cmpsb pusha add fimull inc loope mov (bad) incl inc out lods aaa add fnsave mov mov (bad) (bad) mov jmp insl inc mov dec push loopne mov xor push adc sub (bad) call nop dec xlat out mov push xor adc pop jg xor call jg and lahf xor in dec lock (bad) shrb (bad) idiv jnp mov and in addr16 mov data16 mov (bad) (bad) lcall stos decb aas inc sub rolb int3 insb xor sbb out retw fwait (bad) (bad) (bad) ljmp lea popf xchg cmpb sahf dec sub imul xchg cltd xchg inc dec sub into xchg das clc jne fcomps rorb mov call imul lahf scas pusha fcompl out mov fisttpl aaa sub (bad) stos and int ret cmp xlat movsl push sub int int pop jmp ljmp and and repnz mov xor fsts (bad) push (bad) (bad) (bad) call add mov jo sbb sbb lret ss push cmpsb mov scas insl imul aad adc pop mov sbb fist jg dec push dec mov (bad) mov mov (bad) repz (bad) xor inc inc mov mov pushl sbb movsb and lods sub out adc push std (bad) (bad) (bad) aas ror and int popa notl pop push rcl pop (bad) ss push sbb js inc (bad) jg and adc test adc mov mov loope in mov jmp (bad) xchg xor pop xchg xchg leave addl dec outsl aaa push add (bad) (bad) call sbb scas cld lock movl pop in (bad) (bad) dec stos mov or (bad) (bad) (bad) decl jne stc lods push lahf mov std test imul pop loopne push (bad) decl ss or xchg sbb lods xchg out cmp popf fisubr lahf in loope pop fwait das dec pop xor sbb mov call in popf xor ljmp xor mov dec in inc aam lds or decl das (bad) mov jl cmpsb xlat mov sbb in xor xchg (bad) cli loope test sbb (bad) (bad) lcall (bad) lahf out fwait mov (bad) push repnz sbb mov push dec scas aaa ljmp mov js in cmp shl test outsl cmpsl dec sub cmpsb aad in (bad) call cld aaa jb push (bad) sbb mov or and lret insl rorb (bad) (bad) (bad) decl lret or mov cmpsb in mov mov cmc mov (bad) (bad) (bad) dec idivl (bad) cmp icebp add pushf into shll and or cmp ret ja rolb repz jge cmpsb incl out add fiaddl push sub sbb mov clc jnp dec sub push std sbb inc lcall les imul das add jmp and (bad) lcall push cld fcomip (bad) cmp imul int3 adc int3 jb adc (bad) (bad) decl adc pop (bad) mov popa sti sub mov mov cli or lods pop fstpl mov leave add pop hlt shl mov call lcall loop mov inc adc cmp sbb repz mov (bad) (bad) decl dec ss nop pop adc mov mov mov fsubrp cltd movb (bad) (bad) cmp mov xchg sub dec cmp xor inc ror adc (bad) (bad) les in ficoml adcl jge push pop fstp std (bad) (bad) (bad) mov push outsl lahf fnstcw mov pop scas or jle pop mov (bad) (bad) (bad) (bad) jmp mov dec or dec pop out es add sbb xlat mov lcall dec jl aad mov jecxz jae aas in (bad) (bad) jg xchg add mov lret xchg push or inc int xchg push fcompl xchg (bad) (bad) (bad) incl stos push mov jmp test sub in int (bad) xchg fldt iret push out (bad) (bad) (bad) jge inc pop dec xor es or lret cltd popa pusha (bad) sti cmpb les mov add cmp sahf push xchg push data16 and inc jle popa sbb pop adc clc (bad) jno aaa dec test (bad) ljmp fstpl lds in fmul inc cmp mov (bad) ljmp test bound lahf jo stos jge daa xchg dec add or jecxz add (bad) (bad) (bad) lcall xchg lods aas ret test stos push pop cmp or mov (bad) jmp nop inc es jle scas lahf or arpl imul dec dec inc (bad) (bad) (bad) lcall imul mov arpl pop pusha push ja shlb das inc pop jl mov jmp nop js stos or jmp les mov sub rcl (bad) (bad) dec mov pop pop shll arpl aam xchg add adc jmp out les inc add aaa mov cs sahf jb dec cmp fwait clc stos leave enter (bad) jl out and out clc int movb icebp cmpl pop cld int mov pop mov xchg dec sub loopne cld fcmovb (bad) call push je mov popf inc adc out int mov outsl mov (bad) pushl aam lock movsb (bad) into das pop pop js outsb pop sub aad mov mov dec scas or sbb add jnp insl mov imul xchg fs enter pop movsl pop lods test and outsl (bad) call loopne push clc mov jb xor scas popf rcll aam sarb (bad) popf sbbb xchg ljmp mov (bad) (bad) dec stos lods pop fist and (bad) (bad) ffreep enter mov pop in std loop lcall fisubr rcrb mov mov mov (bad) (bad) (bad) mov inc and cmp xchg jbe in xor push stos push jno sbb (bad) ljmp pop scas icebp lods push push hlt dec adc add scas rolb add fdivl mov and mov lret (bad) (bad) jg add dec add shrd daa (bad) aam icebp xor stc fstl sbb lcall scas mov pop and or nop gs pop and (bad) (bad) fcomip sbbl jge adc xchg cld xlat push das cmp adc (bad) (bad) (bad) jmp add out cmc xchg add lock nop add mov pop jns push cmp (bad) (bad) call js push mov js imul push sti insb out adc mov mov ret clc cmc fidiv adc ss ljmp mov xor adc icebp inc or aad inc (bad) (bad) (bad) jg inc fwait pop fcoms mov cmp pushf sub clc pop adc (bad) (bad) jmp cmp aas fcoms lret fcoms mov cwtl and iret lods xchg sbb xor ja (bad) sub ds mov call mov movsl pop adc push ss adc imul pop cmc (bad) call mov loope pop mov aam loope bound (bad) (bad) (bad) lcall push cmp test scas jecxz add push adc aad cmp or aam or push dec out aas mov (bad) (bad) incl je push int sub mov js mov out xor insb nop or sbb (bad) mov pop ds pop scas pop fisttpl (bad) (bad) fisttp jge and push std es or int3 pop decl cmp or push jns sbb mov (bad) (bad) call mov adc push pop jmp jmp adc scas mov xchg pop in cld (bad) pushl or je aad jbe insb divl pop sbb pop jb xchg sbb (bad) (bad) (bad) mov aam mov pop push jno jo cmpsb loopne jo dec stos imulb (bad) (bad) inc cltd xchg jns and cltd ljmp add jmp pop lahf xor aas (bad) cmp and insb clc (bad) (bad) lcall pop (bad) xor lods icebp fucomi jns js or mov popa (bad) (bad) ljmp sbb scas cmpsb pop sub cmp or xor mov (bad) (bad) (bad) inc fstpl jg aam outsl xor lret sub movsb mov pop es and adc mov sahf xor add mov cmp imul mov or repz mov (bad) jmp xchg xlat jmp fs pop sbb cld stos test clc (bad) ljmp push mov stc xor cmp cmpsb add mov (bad) (bad) jmp inc mov xor adcl and (bad) (bad) mov lock shrl xchg incl and pop stc mov ljmp lahf ds xchg es lods (bad) (bad) (bad) (bad) cmp mov movsl push jno rcll scas jne or and aas mov rol cltd ret xor decl sub jle pop pop (bad) fwait xchg les (bad) incl lahf sbb or and sti int push xchg paddd mov cmp sbb fimul repz fbld (bad) (bad) push mov pusha movsb outsb std jns das les leave rol add cltd fildll (bad) mov jo cmp xor in mov push cli in into movsb in ds imul push ds call sub (bad) (bad) (bad) incl jno jae aam mov bound outsb mov push or roll call bound addr16 pushl mov loop aam mov push ja sbbl jnp (bad) mov sub js jl push repz cmp pop repz cmp cld (bad) pushl iret pop push (bad) lock lea mov rcll loopne cli (bad) jg mov mov repnz sbb stos mov adc (bad) fcomip scas add arpl cmp (bad) popa cmp dec aad cmp dec icebp (bad) (bad) lcall push call sbb es stos fldcw mov xchg fisub ds xchg es pop sbb bound sub mov cmpsb outsl jbe in add clc or dec aaa push faddl lock out mov mov test into cmp push lret sahf lods cmpsb mov lret shrl (bad) (bad) call ret add xchg lahf jbe push clc pop mov fdivs hlt (bad) dec cmpsb in inc jg clc pop fwait ds xor lahf aaa push mov (bad) (bad) decl mov decb push lds mov xchg push aaa std (bad) lcall das mov push fildll outsl out and inc (bad) xchg sahf mov lock dec (bad) or hlt sub xchg mov (bad) lcall insb scas fist dec inc add in sbb outsb pushf lea rorb xlat sbb (bad) jmp out mov cmp fisub lods xor pop mov clc mov call mov mov int3 loopne cld (bad) push ret addr16 push sbb imul xor adc (bad) (bad) jg mov xor (bad) push xchg pop dec adc push push pop in xor sub and lods imul inc cld xchg or out inc push add mov mov mov or (bad) (bad) incl imul imul rcrl push test jmp mov inc outsb (bad) (bad) (bad) incl and add adc mov dec mov rcr dec mov xchg gs sbb cld push or add mov das mov test jae adc xchg adc and inc hlt add incl pop push fnstenv and fildl (bad) (bad) (bad) (bad) mov dec daa dec xor pushf and xchg mov je mov (bad) (bad) lcall data16 jp inc sti adc aaa sbb aad test aam repz mov (bad) (bad) ljmp xor sbb inc rolb dec mov testl test std jp cmpsb cmc pushl lea mov mov incl add pop or pop ret jne dec mov stos jmp sub bound (bad) (bad) ficomp cmc stos fadd sub cmp arpl push cmc fcomip (bad) decl push (bad) cmpsl jnp sarb pop stos (bad) mov aad mov pop lret add inc inc pushl inc aam xchg jae,pt mov push inc (bad) mov fsubp ljmp (bad) hlt out mov call push ret and jne xor mov or ds rolb adc subl ja and loope movsb mov clc ljmp aas out pop and adc jg jl cmpsb inc cmpsl mov out (bad) jmp (bad) (bad) incl cmpsb mov pusha dec mov mov in push xor mov mov mov pop cmp push (bad) (bad) (bad) cmp dec les xchg stos mov movl dec mov mov inc cltd lods out mov lret incl (bad) sub add mov mov (bad) (bad) (bad) jmp jmp add lock into fdivr pop jmp sbb (bad) mov aad mov sar (bad) aas pop or fs xlat jg dec outsb in (bad) jbe insl push (bad) (bad) jmp mov mov scas loope enter mov jl test push out in (bad) (bad) (bad) jmp rorl xlat imul lret push dec movsl stc inc xor lret (bad) or (bad) (bad) (bad) jmp dec xor mov xor outsl lret pushl add pop inc enter adc mov decl inc ret outsl jb mov lret (bad) jmp and lods xchg mov sbb lea (bad) (bad) (bad) ljmp lcall sub test fwait aam or cmp out cld dec fcmovnu inc js sar decl xchg sub pusha stos lea les sbb (bad) (bad) call mov aas and sarl add mov test dec jbe lahf add test (bad) call in fwait or xlat je cmp mov xchg push mov rclb xchg sub lret (bad) (bad) call jle jecxz cmpsb inc adc push testl push mov mov jmp (bad) decl sahf xchg leave push mov dec das adc pop pop ret push push mov les (bad) push cmp stos inc lret loope movsb dec fistl push lock (bad) fs out and push fdivrs loopne lret sbb stc pop repnz jle call sub lds (bad) (bad) fcomip pop fmuls (bad) fsubrl inc mov mov leave data16 lea cmc shll (bad) mov cmp mov das scas mov jne cltd mov loopne or jb loop or idivb insl inc insb cltd sub lds (bad) ljmp (bad) mov sbb mov pop les cltd inc bound jp (bad) (bad) (bad) jg jmp loop test inc sub outsl jmp xchg movsl cmp fidivrl int3 (bad) (bad) (bad) (bad) jnp inc xor jnp loop mov mov mov (bad) xchg out out and (bad) (bad) (bad) pushl ret in (bad) rcrl gs stc xchg lcall movsl mov push std (bad) (bad) (bad) pushl jle sbb sbb push sub ss jl sbb cmp jecxz jl (bad) incl pop in iret out add add das or mov clc cmc repz std cmp (bad) (bad) (bad) pushl cmpsb (bad) adc pop add sbb jmp sbb iret push push (bad) (bad) ljmp pop ret inc insl (bad) cmp sbb scas mov lds cmp movsb out out xchg cmpsl push in pushf inc (bad) push (bad) cmp cltd insb stos or pop repnz outsl (bad) decl jecxz pop pop mov cli and (bad) pop movsl push add push mov lds js mov jns sbb push sub sub (bad) ljmp cmpb mov out movaps insl sbb (bad) ljmp jae mov enter mov test lods dec xchg in cmp jle mov loopne int push mov jne sbb lret sar pushl inc inc or je in test lret cld lods cmp outsl ja push pop mov mov aad nop push lods icebp (bad) (bad) (bad) incl js ret fidivl add lds das test repz std xor push std shrl xor in sti push fildll ljmp cli (bad) jmp push add mov dec mov xor (bad) incl mov xor adc fldl2t xor test outsb fisubrl pop fwait test insb pop inc pushl std jmp rcl inc jecxz cmp cmp sbbb xchg dec jmp addr16 sti mov cmp lcall ja iret xor (bad) notb cmpsl adc push dec jno lea lock add pop sti push imul decl sahf lock fdivl hlt sbb adc repz int3 mov inc int3 aam add (bad) cmc push daa add cmp cmp cmp mov (bad) int3 inc lcall (bad) ljmp (bad) dec cmpsb jmp pushf xor movsb mov cs adc jle mov pop mov mov data16 sub (bad) (bad) pushl sbb adc (bad) jae xorl dec hlt jle (bad) xchg mov (bad) (bad) mov mov test jno push adc or lods outsl inc push cwtl pusha (bad) lcall nop pop xor or out aaa in push and (bad) mov (bad) sub (bad) (bad) (bad) (bad) mov xchg (bad) cmp call sbb insb addl inc inc mov and (bad) (bad) (bad) clc xlat fsub mov cmpsl movsb inc and pop gs mov xlat (bad) ljmp ds and int mov hlt lea xor mov push test je jno imul sarb (bad) mov cli out mov addr16 test push clc dec jp jecxz adc mov lret push andl loopne shr ds (bad) (bad) jmp cmpsb xorl and jae jecxz fidivrl push (bad) (bad) mov nop dec stos dec iret clc lcall pop pusha setns and pop icebp (bad) inc and sub adc jg add xor push push (bad) (bad) call lret mov je sbb rolb cmp inc jbe rclb push pushf stc add xor ljmp push insb adc aam mov inc (bad) out clc (bad) stc inc jl fimul push sti icebp cwtl paddsb pop mov fsubrs (bad) (bad) cld mov nop call out and add imul sub inc (bad) (bad) (bad) pushl lock xchg sbb and pop mov pop sbb xor pop cmp mov lahf push or lea ds add das adc gs divb push cmp (bad) (bad) push daa push mov call add dec aad in add cwtl pop hlt out mov (bad) call mov add mov addl xchg jnp es icebp out test sarb mov ljmp adc enter xor int3 jb jle outsl adc adc and jle cmp (bad) (bad) aas and ss cmp sbb add mov and sbb push push (bad) (bad) (bad) call (bad) push in (bad) jl mov sub aam lods add jo mov movsb (bad) stc inc (bad) (bad) (bad) pushl mov jp,pt jae stos inc adc jmp ret test pushl (bad) out lds ljmp test mov test je adc (bad) ljmp mov mov movsb dec and out outsl and addl mov (bad) incl lds and push int test add adc jmp pop (bad) mov mov or cmpsl inc xchg cs rcrb mov aaa sbb fisubrl cmc leave add loope or mov mov (bad) pushl cld fmuls lods sub aaa sarb test in mov (bad) (bad) (bad) jmp cmp jne cltd jmp (bad) adc bound repnz mov lcall fidivrl adc inc into out (bad) (bad) (bad) lcall xchg stc mov push pop jb rorb pop mov ds loope sbb aas (bad) add outsl ljmp ret and add (bad) mov lds xchg inc cmp ljmp sbb xor adc (bad) fildll outsl pop icebp aad fisub sbb push shrb mov mov ds push jmp pop ret xchg test inc push mov jge ljmp sbb pop sub (bad) mov (bad) std int punpcklwd lods mov mov sub scas (bad) ljmp mov loopne mov pop nop pop xchg pop lea inc movsl dec rclb jg dec popa pop cmp scas sbb push xlat xchg jne out inc pop sbb incl xchg cli shl and imul fwait stos and fsubp mov sub (bad) (bad) (bad) mov (bad) js jl lcall dec jecxz lods mov xchg scas imul fidivrl lcall call add cs lcall jbe mov ja (bad) pushl mov cli iret or ret dec push pop hlt xor out xlat push jp leave (bad) (bad) (bad) incl push inc fwait push adc popf call lcall rorl aad (bad) (bad) (bad) decl lcall in lret inc pushf andl popa cmp jmp cld sub outsl pop clc call xchg fstps or mov sahf (bad) (bad) (bad) lcall out pop jb adc cs jp les push pop fs stc adc into faddl (bad) lcall push mov dec mov imulb inc sub add out out (bad) mov stos leave cmp fs lret cwtl cmc pop vpaddusb mov push icebp (bad) (bad) (bad) call int out pop mov hlt push lcall test movsl loopne test decl adc mov out js fwait and jg jg shufps inc outsb mov lock and fld mov movsb aas movsl xorl scas fldl lods cld icebp adc pusha cwtl je (bad) frstor mov sbb mov inc js mov (bad) (bad) incl push cld ss (bad) fdivp mov lret cld push jbe fwait xchg clc rcrl mov cmpsl (bad) (bad) (bad) incl incl daa in stos or sub xor xchg loopne jnp (bad) (bad) (bad) jg adc push push leave js cmp lahf pop int3 mov clc xor imul (bad) mov lcall jp pusha xchg fiaddl inc jbe pop pushf adc out (bad) (bad) decl xor clc call mov insl mov mov sbb loope std (bad) fidivrl dec cmpsl scas loop shrl test push jge ljmp (bad) aas jp out jno and mov push adc inc ret adc (bad) (bad) jmp test std xchg gs dec or inc pop js daa add sbb scas add sub mov jmp (bad) mov sbb cmc out jmp mov sbb test (bad) (bad) ljmp loop push jecxz jp sbb sbb inc fcmovu mov mov lods add sarb nop inc scas push outsl jge and sbb xchg add jmp sti push cmc xchg aas dec add (bad) (bad) lcall add or mov mov adc data16 test (bad) mov add add test push mov pushf push mov aaa loopne cltd xor sbb sub ljmp pop xor sub iret pop rcr jb xchg mov inc push dec jne loop dec xlat ds scas or push std inc jnp dec or ja sbb sbb adc movsl mov ret mov stos mov ds (bad) (bad) (bad) in mov loopne nop fadd pop insl add mov ret (bad) fnstcw jg leave int3 fcmovnu (bad) (bad) jg call xchg aas pop mov rcl pop repz cs push sub xor adc ds inc sbb pop clc in xor dec pop dec mov inc fild sbb (bad) (bad) (bad) call xchg sub push sub push dec mov dec mov mov xchg sub jmp mov mov repnz ljmp iret (bad) (bad) mov test and jmp fadd push mov mov (bad) ficom rcrl pop insb insb out test cmp mov mov push dec das (bad) fsts cltd lret jmp cmp (bad) decl xchg xchg xor test (bad) in fs dec xor jnp cmp je test lock (bad) push rorb pop adc addr16 inc insb fisubr sbb jle xor xchg outsb (bad) (bad) decl adc push mov lods jl popa inc dec test or out jmp (bad) (bad) decl insl and sbb push pop pop add xchg lea (bad) jg ds das or loop cmc repnz in ret lcall mov (bad) ljmp mov push aad adc scas jne inc mov incl sub (bad) push add scas mov xchg adc mov xor test mov pop sub ljmp push dec les sbb inc mov ret lret (bad) cld pusha lods mov movsl (bad) (bad) (bad) lcall cwtl in pop clc fisubr push ds or loop adc cld mov shl adc (bad) jmp xchg movsb mov adc jg inc cmp fimull xchg inc adc lcall movsb xor sbb mov in (bad) lcall sbb inc inc in scas adc mov pusha push in out out mov mov xlat mov popf pop push in push lods shl sub xor inc (bad) (bad) (bad) (bad) pushl stc pop jbe mov ret adc fwait aaa cmp inc cmp xchg add icebp or sar outsl pop xchg push lcall mov imul dec (bad) mov lcall scas cltd cmpsl (bad) movsl push sbb outsl arpl incl push push jmp fs adc outsl aad in ljmp mov (bad) (bad) jmp adc ja es icebp hlt imul mov subl fmuls dec sub push (bad) fcomip (bad) (bad) (bad) lock jecxz sbb sub (bad) out mov shrb pop daa push fwait sbb out cli incl mov call gs xlat dec call inc mov sbb (bad) (bad) mov xchg push out stc dec imul mov clc dec out sahf cmp icebp jno (bad) call sub sahf xor cmpsl sub addr16 insl push stos inc je incb sub ljmp (bad) lods jns shr cs loopne into xor rcr repz mov sahf rcr cmpl xchg mov xbegin in imul bound in push push loop jae sar (bad) (bad) push lock push sahf adc popf mov mov pusha mov dec in pop int add (bad) pushl mov cmpsb dec and lds not add mov dec mov lcall enter lea dec loope push (bad) (bad) (bad) inc xchg cmp aaa sub adc sti cmc pusha mov push jnp push xor jne (bad) (bad) (bad) call into jge int3 aas in es push insl test add jns push mov out lcall (bad) jmp push or fs stos and (bad) movsl xchg ja dec loope out (bad) (bad) lcall ds and push (bad) dec (bad) ret mov jne (bad) xor (bad) or cli (bad) (bad) ljmp je cmpl xor mov mov add in jle xchg (bad) mov push int (bad) cmpsb bound add les dec add (bad) incl js push sbb (bad) mov hlt pop mov jg scas nop lock and scas fildll add int3 adc (bad) popf push mov loope xor jae (bad) (bad) (bad) cmp out xlat shlb sub arpl dec rcrb pusha js pusha add decl call ds scas pop inc and je (bad) (bad) jmp arpl lock pop sub fistp and sub push cmpsl xchg xchg sti xchg jg and (bad) (bad) jmp gs jmp mov shrb jmp dec (bad) (bad) mov inc or test dec popf pop mov rclb (bad) cmp (bad) (bad) (bad) inc xchg ret cmpsb push sub pop pusha leave pop mov inc add pop inc lods fbstp out push aas pop sar loope pop (bad) and jo mov xchg sub cli popa mov add fmull (bad) (bad) jg push js pop jge lea je jae scas and sysret adc jbe,pt loopne mov movsb jge shll xlat xor incl popa push push sbb rolb mov jmp sbb (bad) (bad) dec cmp (bad) jge add bound adc mov aad mov cmp mov (bad) (bad) (bad) ljmp mov sbb test push sub stc jbe dec xor or flds push les not mov jp rcrl out pop cld (bad) (bad) ljmp leave sub ds cmp roll lret mov pop push dec xchg add (bad) push aam add dec ss test subb test jg (bad) fcomip fstl jno stos sbb stos push outsl cs ja rorl or aad je and pushf jb bound sbb lret mov pop mov or push (bad) out and imul in cld inc xchg fwait xor cmp lock ds sarl mov dec cltd je or in inc or (bad) jg cld scas cmp mov test (bad) dec adc je cmp loope fs or inc jecxz loope les cmp xor int (bad) jg decl xor cvtpi2ps push sbb rcrb adc or out or add lods jo test call fild and cmc add ds dec (bad) lahf (bad) (bad) (bad) lcall lcall mov icebp mov cli cmp mov fbld xor out inc push movsb jg hlt lcall frstor shrw aad data16 (bad) (bad) dec les adc add inc mov cmp sbb out push add rol pusha push ret ror add (bad) ljmp cmpsb lock test and test out loope or outsl (bad) (bad) decl sub xchg enter fs popf dec mov lcall mov mov jns lock scas call fimull jbe int sti add xlat addr16 rcrl mov mov je pop xchg cmpsl fbld mov and aam sahf sahf push jmp jbe push sahf jge (bad) (bad) ljmp add xor rorb adc jnp dec jnp inc in push lock xor add add cwtl loope sub (bad) (bad) lcall imul xchg jno rcrl arpl insb outsl jo mov mov pop incl (bad) div cs imul sahf roll dec leave push in xorb (bad) pop stos xchg mov lock scas pop fildll inc xor mov (bad) (bad) ljmp mov ja xor jb pop aam mov inc push and (bad) adc ss in add inc sbb xchg xchg xchg push (bad) push enter xor or pop pop and sahf (bad) add (bad) je jecxz aad dec movsb dec fstps (bad) ljmp hlt jns jo add insb add add or pusha sub incl xchg dec sbb adc xor sbb mulb (bad) xchg mull push fs mov add push mov (bad) (bad) (bad) incl dec pushf inc lea fist add pop dec mov fstl mov push (bad) jg movsl andl inc fdivl dec push sbb pop mov or (bad) (bad) mov jne inc jg pop clc jb pcmpeqw repz (bad) (bad) inc cmp ja mov cmp iret (bad) dec repz xorb jle push (bad) (bad) (bad) lcall xor pop adcl lods inc and push mov pop jg xor loop stc js xor (bad) (bad) pushl xchg mov and lods add jmp repz and lcall (bad) xchg std pop xchg cwtl jbe (bad) (bad) int3 dec dec sahf xchg dec mov in mov pop out (bad) fbld clc aaa jle mov cmpb not push pop popa add cmc int3 pop divl xchg xchg fwait push xor stos fs cmpsb mov (bad) xor xchg in fmuls fstp fsubl dec pushf xor cmovl (bad) mov test xlat icebp inc (bad) (bad) mov xchg sbb ret mov fisttp or call ficom inc xor cmp inc jmp or pop daa sbb inc sbb add inc lock (bad) (bad) (bad) jmp mov test data16 inc in ret movsb add dec pop xor mov call loopne in ret ret pop push stc lds adc mov cmp aad (bad) (bad) (bad) cmp fisttpl imul insb cmp int fcmovnb inc cltd mov or (bad) lahf inc push (bad) mov loope cltd add pushf mov (bad) ljmp clc mov repnz js and ss in pop dec xor dec (bad) (bad) (bad) lcall nop mov jg ficomp xchg pop pusha mov mov decb or lret bsf (bad) (bad) (bad) in movsl leave loop scas mov pop neg rolb inc adcl add (bad) (bad) push pop daa movsb nop push push push xor inc lahf push inc (bad) frstor (bad) arpl pop add addr16 xchg inc std sbb add push movsl adc scas nop lods incl pop xchg mov cli mov cld (bad) (bad) incl subl push add outsl test (bad) sti aam jle ja test (bad) incl adc das int inc add movsb add mov xchg je mov (bad) (bad) lcall out pushl popa test inc inc or stos mov stos mov hlt stos pop xor mov sahf jmp push jle and sbb xor (bad) lcall jo cmpsl mulb (bad) fisttpll stc jecxz push jecxz,pn daa lds mov roll clc xor stos lea imul sbb pop mov mov pop hlt (bad) call mov mov sbb fistp dec out mov xchg stos sub jg push test pop insl or jp adc push inc mov jecxz push ja icebp adc pop int3 (bad) jg call ja cmp adc clc inc bound xchg jb sar push cld test inc sbb mov adc jmp insl dec int incl jns inc (bad) (bad) and cli mov scas cli jb call idiv cmp (bad) scas push or fwait test jbe push mov push (bad) mov dec ds mov out subb inc and mov cwtl cmp mov repz (bad) (bad) call push push pop lahf xlat mov xor inc and rorb test ret loopne lcall jl subl add (bad) (bad) pushl loopne sub outsb sbb lds sub and ficom decl lock jo push aas (bad) or pop inc xor cmpsb jno test movsb cwtl incl jmp push int cmp (bad) loopne mov imul (bad) (bad) (bad) mov push sub jne pop stos fwait pop sarl pop test cli push outsl icebp stc push jb (bad) (bad) (bad) ljmp arpl aad mov xor out lods pop loopnew dec mov (bad) (bad) decl adc (bad) xor pusha xor xchg dec iret push xor xor push push adc jge push mov pop dec movsl mov (bad) mov in mov enter dec cld (bad) (bad) lcall sahf lcall stos jle aad aam (bad) mov cli add inc (bad) (bad) cmp push gs sub xchg arpl sbb (bad) (bad) ljmp and movsb xchg in pusha mov and je popa push (bad) hlt test inc (bad) (bad) (bad) ljmp cmp and cld (bad) idivl jno add push pop lods xor push (bad) (bad) (bad) (bad) cmp jbe inc jp cld cs jae inc clc stos or mov cmpl (bad) (bad) cmp cmp add sti and jne lret mov mov sbb (bad) (bad) (bad) fmull ffreep push sub fidivl shrb loop pop cmpsl mov (bad) (bad) (bad) decl adc test clc ja aas push jno incb push (bad) inc lock sarb fwait (bad) (bad) pushl xchg pop inc add xchg mov mov jl je pop mov inc imul js sbb cmp pop loopw mov cmp and mov movb add insl cmp and add (bad) (bad) lcall stos mov pop mov mov hlt or cmp lahf xchg test lcall ret sbb je cmpsl ds clc (bad) jg or push add jp fisttpl xchg pushf push stc loop (bad) repz jg (bad) call aas mov test test inc stc or imul mov mov cmp decl push mov push xorl or jg xchg xchg or cmpsb rclb xor add xchg sub rorl adc (bad) (bad) pushl fadd xchg into mov test add fnstcw sub data16 cmpsl cmpsb jbe (bad) (bad) call ror pop popf movsl and js inc repnz gs imul inc mov jmp (bad) jg mov jbe lods mov sub clc push sbb (bad) (bad) (bad) push mov loopne out sbb cwtl call nop mov jo ret mov mov cmp ja aam stos mov rcrl jne les pop loopne mov into iret mov cmp xor ret push icebp push call aam sarb insl mov lahf int sar outsl adc in mov rcrl pop jbe and (bad) (bad) mov data16 ret ret int3 xor bound out dec bound (bad) (bad) cmp pop stc and xchg mov dec mov dec dec das repnz jns movsb outsl mov add outsl jno rorb clc xor or icebp jle sbb loop cmp or jmp or pop push and (bad) (bad) dec add ds (bad) fcmovu (bad) hlt movsb mov fisttpll je dec or subl fbstp (bad) (bad) (bad) jle xor (bad) popf out jg push xlat lret cmpsb pop sbb xor push push xchg orl mov jg decl (bad) lds out arpl scas inc adc bound ja pushf ja push mov jb fldl push xor jl cmp les add xorb cmp (bad) ljmp xchg adcl mov jecxz sahf mov (bad) (bad) (bad) out mov lock push adc push lahf repnz xchg dec or sbb (bad) sbb stos add shrb (bad) (bad) decl push lret dec and push std jecxz lods test push test inc lret mov stc ljmp clc jp insb inc sub xchg (bad) mov cld sub pop jg pop bound push (bad) (bad) (bad) inc push cld add cmp sub jns dec cmp mov jno jecxz jnp leave and pop loopne ret xchg js pop xor ds mov lret and ror lock (bad) incl cwtl pushf mov clc dec mov lods add arpl loopne (bad) decl rorl in js pop xchg shl dec jge (bad) fcomip or xor xor fcmovbe push mov mov (bad) (bad) decl int or and mov push imul (bad) (bad) (bad) jmp aam inc aad lcall (bad) outsl mov push jg add (bad) (bad) (bad) pushl imul inc leave xchg lret (bad) or (bad) mul sub cmp sti (bad) (bad) (bad) incl mov push sahf (bad) sahf imul outsl sbb mov call (bad) push lret inc (bad) (bad) (bad) (bad) fnstsw or pop call xchg jne je stos daa adc mov (bad) incl aaa aam xchg push lods jge insb jecxz stos insl mov jg lret cli pop outsl enter lock push enter mov mov paddusw lcall sbb jmp dec cwtl pop inc pusha sub xor inc sbb xor mov fcomip testl stos test cmp movsl push mov enter (bad) (bad) ljmp dec mov and movsl insl mov (bad) xchg imul ss loopne ss fbld dec lcall (bad) jmp mov or push xchg pop fdivl mov add pusha inc (bad) (bad) inc mov or inc inc pop (bad) (bad) (bad) incl adc pop dec js xchg ljmp arpl adc jmp pop sbb (bad) decl cmpsb in popa pop (bad) ficom mov in sahf mov pop pop mov sbb ja or orl mov mov xchg dec out mov (bad) (bad) ljmp imul das inc and pop push jge (bad) jecxz lret xor (bad) sub xorl xchg mov lret lods jmp gs (bad) popf (bad) (bad) (bad) call jno sub and push mov aaa outsb (bad) std adc cmp (bad) call bound ret sbb fcmove adc pop cmp sti sub (bad) out xchg (bad) lcall mov (bad) (bad) (bad) jmp std and mov jge inc aaa xchg aam add insb fwait imul lods (bad) (bad) (bad) call pop iret jae ffreep ds scas fdivs xchg loope sti adc fwait (bad) incl jnp and getsec xor push pop dec lods xchg ds aaa std (bad) mov cmp sub aam mov movsl xorl (bad) mov aaa jbe fcompl and decb pop movsb xchg (bad) out hlt repnz pop mov and test xchg xor inc (bad) cmc (bad) (bad) lcall or mov jno aas (bad) ja imul call xlat stos (bad) (bad) (bad) decl inc and sti cmpsb add fstl mul dec or push pop punpckhbw jl (bad) (bad) (bad) ljmp test cmp rcrl push aaa jae inc push mov cmpsl add mov jmp (bad) (bad) jmp (bad) dec outsl and rdpmc sar fnsetpm(287 mov aas mov imul cmp (bad) (bad) call mov call outsb dec mov add arpl xchg repz adc xor (bad) (bad) (bad) ljmp div inc imul (bad) pop sbb inc js cmp xchg xchg inc xchg (bad) (bad) call and fcmovu push lahf jbe mov cs pop mov (bad) lret sti (bad) ljmp mov jae scas imul int3 pushf jb add cli jg test sub mov dec mov push clc (bad) (bad) cmp popf dec cmp mov lahf data16 cltd mov mov cmc dec icebp cmpsl mov fninit xchg add mov (bad) (bad) cmp data16 cmp adc fcomi scas lods (bad) js add mov loop ljmp ljmp push movsb adc pop mov sbb cmp sub pop sti adc cmp mov sub or ret adc (bad) (bad) (bad) (bad) sti xor add cltd pop lods pop inc xor add mov (bad) ss fadds mov dec (bad) jmp in mov fs cmp in popf les xchg lret mov fs (bad) (bad) (bad) decl mov cwtl xorl outsb das sub push popf scas jns mov nop pop (bad) add mov addl cmp pushf cmpsb cmc mov pop sar add scas mov into xchg mov inc xchg dec cli dec bound (bad) (bad) (bad) clc das imul (bad) jno popf xchg xor imul (bad) mov stos rorl out mov (bad) mov out mov xchg xorl (bad) (bad) (bad) ljmp lret jle stc jmp mov pop mov push xchg pop dec dec out cmp lods call adc sub xor testb or fsts fs lock mov push outsb jns,pn sbb fsubp add lods fsubrl decl mov sub cmc pop bound mov lods sbb mov hlt xchg lcall jl outsl imul push and iret mov push repnz dec es hlt loope and in and (bad) jmp movsl mov mov (bad) repz cli mov dec cltd push xchg int fsubrl sbb (bad) (bad) (bad) decl (bad) repnz or cmp pop xlat jns pop mov sub pop lcall jmp add and mov dec add jne fdivrs or (bad) jg mov pop call sti scas ds adc cs cmp (bad) fildll decw shll mov pop and xor incl xor pop push rolb xlat and stos sub fdivr jg fs loope enter sti dec stc add fcmovnu cli sub out sbb and ds push jnp push dec or decl sub loop stos or pop jnp (bad) (bad) (bad) push rcll cmpsb stos push scas clc sbb xchg aaa out adc push (bad) scas lret fisub xor mov (bad) jmp cmp mov mov push les push mov inc call add pop sbbb mov inc xchg iret add out cld movsb loop (bad) (bad) pushl cld jo mov jmp sub repz sbb mov or (bad) (bad) cmp ret fadd mov cmp adc sbb inc dec cmp incl repnz lcall push xor and pusha adc mov xchg jle mov (bad) (bad) jmp js sbb out sar loop adc jnp call push add (bad) call add sbb mov inc cld push (bad) addr16 pop ljmp decb push mov inc push xchg (bad) (bad) (bad) call cmpsl mov into test (bad) ret insl dec sbb (bad) adc xor (bad) (bad) (bad) ljmp xchg pop (bad) push loop push fs ja,pn in dec and (bad) es (bad) (bad) (bad) mov sbb int mov scas or (bad) xor or inc cwtl movsl in (bad) jno (bad) (bad) (bad) mov data16 xchg ret rol mov scas fldt xchg cmp inc jae mov ljmp (bad) (bad) fisubrl sbb popf addr16 mov inc inc fisubl mov subb (bad) jg (bad) (bad) incl inc scas xchg test or dec push jo sti shlb (bad) (bad) (bad) dec shlb sahf mov or mov leave mov call lret sbb ret call cld decl inc pop sub ret lock xchg gs dec push mov ljmp (bad) (bad) (bad) ljmp adc and cld popa not sahf xchg pop adc mov ja stos int3 inc pop repnz lcall (bad) pop cmpsb imul ds stos pop inc rep jae notl addr16 fs jmp mov xlat jne add lahf nop (bad) (bad) (bad) pushl sar pop outsb xchg sbb dec sbb xor push sbb mov or (bad) push add cli stos mov xchg jo addl sbb pop jge cmp out xchg scas jae or (bad) (bad) jl cwtl push cld in loope xchg divb push outsl inc addl ds dec rcrb inc cld or aad jbe xor (bad) lock lahf add push sahf dec lcall and (bad) test mov loopne (bad) mov fisubl dec cmp aas fldl push push (bad) loop orb js sbb (bad) (bad) ljmp mov pop cmp inc fbld inc gs mov rcll loop pop in (bad) (bad) (bad) lcall or fsubl iret jg cmp pop dec or mov add (bad) sarb aaa or mov ds scas sbb (bad) (bad) jg repz pop pop pop out pop in mov jmp add repnz stc or scas push push mov add (bad) decl push pop mov push sbb pop (bad) jl fwait dec mov mov fistl xor xor jp pushl xchg ds jl mov (bad) jg (bad) jns cmc fcmovb mov xor sub push test inc das push test push (bad) push dec or xor jecxz lods cmpb cli call outsb loope add mov pop jp (bad) or mov mov inc mov push xchg dec add push loope lock jl popf push vcmpsd inc jns fsubr (bad) mov adc int3 int3 and cwtl mov mov fisub xchg mov cmp add divb hlt (bad) (bad) pushl inc jb es and js pop sbb lods mov add (bad) lcall push pop sub or jo repz addl ret (bad) (bad) (bad) inc and inc out inc loop (bad) jmp adc mov lods mov decl add je cs pop insb xchg or push mov hlt sub (bad) (bad) (bad) decl inc inc icebp scas stc lret rcrl xchg xor int3 (bad) inc aad hlt loope add add (bad) xor dec jae jne mov push adc lret orb (bad) decl mov ljmp ret jno inc sub cld (bad) lcall mul mov jae mov jp pop popa xor (bad) jg mov (bad) pop pop rcr ret insb lret pop fs aam lea mov cmp sbb jle cli or (bad) mov push cs (bad) ja xor pop cmp lret shll mov jo (bad) out fldenv fdivs clc (bad) mov (bad) mov push flds fcoms roll loop (bad) ljmp fcomps jb js out fdivp dec or add ret mov stos out inc xchg (bad) (bad) jmp loope lds adc inc loop rorl xor (bad) (bad) (bad) in xor push (bad) aas sub pushf fbstp out push or add cltd (bad) fcomip push pop dec in jecxz lods push pop pop mov xchg xchg out roll (bad) lcall adc (bad) js cmp popf imul icebp jg add stos sbb clc pop add mov cli das ds jge je pop or outsb fidivl xor xor xchg movsb adc cmpsb rclb sbb adc sbb leave adc ds lcall xor shrl adc xor jo jle jmp mov mov les and into mov mov loopne push ret lret pop pop fimul jmp jl cwtl lods lea mov lods jl mov ljmp addl inc pushf adc sub pushf jne ficomp (bad) out mov sub insb sbbl cmc adc sahf outsb (bad) (bad) call xchg inc pop in fwait jo jmp mov push loope ja dec mov pop roll lds cmpsl and cmc jnp adc call test aad mov pop jne inc dec testb cmpxchg vpunpckhdq push fstpt add jne pushl inc adc lcall and push or xchg mov add jae into sub mov stc sub mov jmp lret cmp mov or or sbb jge cmp pop out (bad) (bad) fcomip icebp and push jb mov fiadd or jbe xchg push pusha (bad) (bad) (bad) (bad) jp outsl mov jmp pop dec repnz dec mov xchg dec popf movsb cmp pusha add or decl inc inc xchg adc add mov push adc dec iret pop mov fcmovnbe adc scas loopne jg (bad) lcall mov fcomps add lret repnz cmp into mov inc andl clc mov call or std (bad) (bad) incl push (bad) repz push sub push mov xchg aad xchg int3 jg (bad) (bad) mov rorb adc iret imul jecxz scas imul mov push lods lahf jecxz cmpl cmpsl adc test sub hlt out mov nop or into and mov out mov jne mov es (bad) jmp inc cmp test repz ret xchg je cmp xchg (bad) mov dec test push wrmsr mov ds mov xchg push test dec inc jge inc imul pop dec add imul imul aaa arpl push in mov jp dec or jge push or pushl std ljmp adc lcall mov lret jecxz push clc sub in mov mov or lret push mov and inc mov xor mov (bad) scas sbb jle out imul je (bad) (bad) (bad) ljmp xchg insl inc cmp jo enter adc leave sub frstor cs scas rclb dec repz clc sub call push dec pop or mov mov ret outsl (bad) xor push lahf movsb cmp or andb ljmp jae pushl mov jle adc leave cli push test pop add ret jmp mov jg add sub pop mov ja adc mov ficoml jecxz lret out pop cs push xor sub imul (bad) (bad) pushl fwait js test pop mov pushf push sbb sbb pop (bad) (bad) lcall xchg ret js inc (bad) or pop xor call or out call sti lcall sbb mov hlt imul dec push mov xchg xchg ds (bad) (bad) call ds sub sarb cmp fisubrl dec push lar (bad) call fnsave xor (bad) jb mov ret xor movsb loop cs cmp int test jne add (bad) (bad) lcall hlt dec je mov lock mov lock popf mov repz jge and incl add mov pop fstpt dec insb sub icebp push jo sbb add std mov imul xchg jle popf stos fildll mov std xchg pop xchg mov loopne leave movsl push lods loop pop mov cltd arpl imul (bad) push insb sbb lret jb (bad) dec ljmp divb pop movsl xor add decl mov aad (bad) fwait test (bad) ds adc xor (bad) lods shll dec in fldenv (bad) or jmp add (bad) (bad) lcall in add xchg shll mov cmp ljmp xchg sub (bad) decl mov clc ljmp lods xchg cmp (bad) mov add jno popa add lock outsb ficom dec ljmp and and decl ljmp jns lea push cmpsb hlt (bad) jg add mov pop sub jae jno dec lret jg (bad) incl daa (bad) dec insl push mov add fistp stos ficompl pop cmp (bad) (bad) (bad) jmp clc and out jae mov mov aas and lret xor popf iret in test into jecxz scas cli jmp sub pop aas mov test in sub xchg rorl int lcall xor inc xchg icebp inc mov add or stc mov fild sti push (bad) stos mov daa hlt cld mov cs cmp (bad) (bad) (bad) incl cmp cltd lret in sub rol push sbb repnz movsb outsb and fildl inc outsl scas stc jno lock push in (bad) ljmp fist mov xchg dec (bad) (bad) lcall push sbb push in movsb aaa or mov or add les cmp dec std jg ljmp test gs inc fimul (bad) (bad) (bad) call sub mov addr16 adc aad pop jmp mov pushl mov (bad) fidivl jno mov add ret (bad) (bad) call mov mov inc jge push jns or pop test data16 mov fldcw decl inc and sbb dec mov and outsl mov jb aam add stos lahf (bad) movsl fiadd xchg in jg (bad) ljmp jbe mov std in mov arpl mov inc stos sbb in aad sub fcomip jle adc call push pop add mov cmc (bad) (bad) lcall push in push int3 add mov dec inc sub inc jg popf or xchg ljmp cwtl inc js dec mov lret popa mov jmp push sbb scas mul shrb pushl sti or std cvtps2pd add mov mov les sub inc push arpl mov (bad) (bad) ljmp andl stc or fimul adc dec mov add cltd or das mov aas ds movsl nop (bad) mov ljmp push jmp shrb mov dec or je insb (bad) bound fistpll xor sarl (bad) fcomi sub pop ret mov mov cmpsb insl mov scas mov imul mov or and leave push es lock (bad) call dec cmpsb aas movsl dec jne int3 jmp or cwtl lcall js lock ljmp xchg xorb imul mov test adc dec ljmp arpl int xor popa lods sbb mov (bad) (bad) ljmp cmp mov arpl inc neg sbb or mov cld test mov and (bad) mov inc lret mov (bad) (bad) dec dec xchg mov les cmc imull pop stos mov pop pop test outsl inc and push mov mov (bad) mov bound push (bad) roll (bad) dec cmpsl mov dec ret add and icebp push mov aaa cld mov jge test push into xchg (bad) mov js xchg cmpsl pop sar (bad) (bad) lcall or imul adc lods enter aaa xor in cmp (bad) (bad) lcall call mov fistp aaa pushf mov sub sarb (bad) (bad) (bad) decl mov scas outsl jns scas adc out adc xchg fstl aaa inc sub mov xor sub cmp dec ljmp addr16 mov jmp (bad) (bad) dec xor out push sbb bound aas pop mov call cld push xchg sbb loopne int lret or aam test push ds (bad) (bad) incl xchg cld mov add or cs mov sub ljmp call mov xor mov xor push int (bad) push or adc inc cli (bad) (bad) incl or mov pop xlat xor mov or int int aad std and (bad) ljmp push imul outsb and add jns icebp daa fwait push stos decl cs jge or stos lock das push imul test mov (bad) call (bad) jecxz mov js mov sub push fdivrl inc hlt mov lcall lret decb inc lods pop push mov mov test mov (bad) (bad) decl fsub mov (bad) xchg xchg mov cltd and test or pop lock or cmp jb push pop cmp js call and inc aam sbb nop nop test js,pn cld sbb pop inc out lret fdivs jbe pusha decl (bad) jmp fidiv push mov cs jb mov mov and (bad) aas cmc pushl cmpsb add fidiv or aam cmp lret jns outsb rorb cmp xor lret (bad) (bad) dec adc xor dec pushf and std xchg xchg mov mov add ljmp mov lahf push repnz repz dec les daa ss and jae add fwait aam decl clc cwtl popa mov jb cmpsb cmp sbbl call sub aas ds pop outsb sub mov gs pop ret adc lret mov jle xchg shll (bad) (bad) out mov data16 fs ret mov push cltd mov cmpsl bound clc sub mov mov xchg mov mov inc adc test sub jmp lcall rep add sar outsl outsb jae sbb negb sarb jno mov adc mov jp inc and ds (bad) (bad) (bad) decl imul popa sbb or sub (bad) cli mov hlt and aam fwait pop aas adc pop movsl (bad) ljmp xchg adc fwait push sub push mov jne push ficomp cmpsl cli dec xchg pop fadd daa xchg adc (bad) (bad) (bad) lcall popa fild jns aad out rcll mov adc or repnz pop mov lret scas inc mov sti and xchg mov mov push mov adc mov test mov jle fwait (bad) (bad) ljmp ds clc mov mov xchg mov mov inc cwtl cli dec mov cld (bad) mov (bad) (bad) (bad) decl xchg pop xchg dec push dec movd cmpb sub sub sub (bad) (bad) (bad) mov clc out mov sbb adc push xor int sbb xchg icebp clc fistpl dec xchg dec cmp insl cmpsb into or repnz xor xchg ljmp and adc xlat pop push fsubr (bad) (bad) jmp in rol aas jge fldt xor mov (bad) sbb mov mov (bad) sbb into xlat test decl adc xlat mov stos out xchg inc dec cs inc jo and (bad) pop loopne sbb into xchg and std mov xor (bad) (bad) (bad) jg fstpt adc incl mov add cli inc or add (bad) decl or jnp jle dec insl outsb mov movsb (bad) sbb fild cli jmp lods push sbb jl jne mov lds or xchg xchg sub mov sbb fwait sub mov out and mov scas pop inc push or ljmp mov mov pop cmc (bad) jnp xor xchg fdivrl and adc sar xchg popl (bad) (bad) (bad) lcall cmp mov rolb dec sarl push push repz push jb inc jae cld (bad) inc fs clc rcrl mov pop hlt lahf mov mov test cmpl (bad) xchg push imul mov push xor pop sbb cmp mov sbb rclb dec (bad) fistl adc (bad) (bad) call mov add push lahf sub mov outsb fstps scas mov cmp (bad) (bad) (bad) (bad) ds lock jne aad fbld lods add hlt sub add in out test (bad) jl mov aaa cld lcall inc test inc inc push push jbe or inc sub ja pop adc xchg (bad) (bad) inc ret fdivl cltd jae dec pop add pop call pusha (bad) (bad) mov inc add mov xchg sti iret sbb mov dec in or sub mov (bad) (bad) decl add (bad) and xlat mov sub inc cmpsb xor fcmovbe aas xor call xlat (bad) fcmovu jle jnp enter bound fsubr and je jg das (bad) (bad) (bad) jmp fisubl and xchg in or daa mov outsl mov sub (bad) jmp xchg into sbb imul into sub ret pop loopne add sbb ret scas clc dec (bad) (bad) (bad) push test and dec sahf mov dec ss xchg adc lds sbb stc lea mov (bad) lcall pop mov jge rcrb xchg in rolb mov out (bad) incl ds addr16 call ret dec mov pop jge in clc (bad) jmp jecxz in cwtl test loopne divb mov adc pusha (bad) jae mov out cmc (bad) (bad) (bad) (bad) jmp push jne loope (bad) sti loope inc mov mov jb xor (bad) cmp loope lods sbb push mov mov push clc pop inc stos loope pusha popa negb xchg fwait (bad) cmp addr16 lcall aas es cmpsb mov push mov int (bad) (bad) decl cld (bad) lret dec stc scas add push or dec movsl imul dec inc mov aad (bad) call dec jbe pusha sbb (bad) les mov jl (bad) (bad) call and sub nop stc jb dec pop rcr fildl add movsl dec popa xor sub (bad) (bad) pushl idiv push adc pop pushf popa mov add jae (bad) lret sbb (bad) (bad) (bad) ljmp add adc add cmpsl sbb jb add mov (bad) (bad) call lods xchg inc call pushf inc push clc mov lea nop mov adc (bad) (bad) jmp sbb repnz pop push xlat loopne cwtl sbb (bad) mov je add add xchg push xor std (bad) jg sbb add pop inc mov aas xor pop or test (bad) push cli (bad) (bad) lcall push mov in stos cltd or lcall popf and std jmp sahf add test jne pop stos adcl adcl jns ret js jge xchg (bad) and inc (bad) (bad) (bad) incl test sbb jle sbb les ljmp inc (bad) (bad) (bad) incl inc out aaa and push fldenv cmc imul mov xlat ret sub pop cmp xchg out push addr16 in fidivr mov dec decb (bad) mov add add test loop mov das cli rcrb push ss dec inc (bad) (bad) (bad) call push imul xchg sbb push mov out cmp cltd ljmp (bad) (bad) (bad) incl dec and dec ja or je xchg add mov (bad) mov mov (bad) (bad) lcall push rclb pop pop pop jae mov mov or lcall out (bad) into adc (bad) mov call add push jg pop mov cmp dec dec adc (bad) (bad) (bad) (bad) fdivl ljmp pop inc test adc test rol outsl inc fidivr cli incl mov mov out dec in scas dec mov jl and incl mov xor lock pop jne fwait (bad) pop xor pop mov sbb lods ds (bad) ljmp mov (bad) push clc xor mov (bad) into mov jecxz cmp pushl lock pop add jp pop sub or pushf mov jg movzbl (bad) lcall subl xchg mov mov out (bad) or (bad) (bad) call stc dec sbb and add test jne xacquire orl js mov sub lcallw lock sar push jmp inc push jecxz xor imul xchg (bad) pushl std out push das adc and mov addr16 jo test mov jnp adc jg sub adc sbb push pop ljmp dec pop adc xor movsb (bad) (bad) (bad) decl jnp sub adc adc inc in popf pop test add fcomip gs clc inc lcall (bad) ljmp push fadds in movsl hlt test inc cmpsb dec test popa xchg cmp (bad) dec mov mulb test call or fdivr inc fld cli (bad) call push cli nop jb out push push cmp or (bad) decl mov adc mov ret imul (bad) (bad) ljmp xchg inc mov and jnp mov arpl dec ret push mov mov dec sub (bad) (bad) pushl cltd add sbb ss jnp xchg push or psrlq stc mov pushl nop xchg mov adc mov xor mov pop int dec idiv (bad) (bad) dec push jno arpl cmp js sub imul int3 test lret (bad) (bad) dec cmpsb sahf insb push gs cmp cmp xchg mov aas hlt jae and scas or iret push lret mov (bad) (bad) mov xchg jno sbb inc lret or sub lcall (bad) in decl mov cs pop jns outsb mov push xor and ds call mov and xchg mov cmp xchg mov xor test jne aaa and mov or cli xchg mov sub sar (bad) call pop ret sub pop je jo mov push dec jl dec loopne pop cmc aaa adc out mov dec mov bound out (bad) lcall test fldcw pop push in pop iret inc scas xchg push lods popf inc and fisttp out mov ljmp int mov or aas inc inc add jbe adc (bad) (bad) pushl mov inc sub mov out lcall arpl ret xchg cmpsb mov (bad) (bad) jmp rolb sub sub inc cmp adc mov xorl jns jge addr16 mov cs ja pushf and loopne lods sahf (bad) (bad) (bad) pushl and cli jae (bad) dec enter lret add scas sbb or (bad) jmp pop xor xor stos adc add (bad) (bad) cmp jnp,pt pop rorb add mov in sub push insb sub (bad) (bad) (bad) call rorl sub adc ljmp mov jp stos insl cld cmpsb decl xchg es ds jg and or (bad) call and add inc mov in das inc test shl pushf cltd xchg jp out jbe arpl scas or lret fistpl pop push xchg sub (bad) (bad) ljmp gs pop (bad) push sub or push cmp test sbb bnd cmp add (bad) cmp lahf or js lahf mov mov (bad) call pop dec add mulb test out add movsb faddl and test sarb mov cltd fsubrs outsl test (bad) into shl mov sub lods pushl push repz ds pop movsb jg inc jno,pt jbe cmp inc inc (bad) ljmp mov push popa add lret cmc sub in fs (bad) (bad) (bad) fldl cmp push mov push data16 rclb ficomp xchg adc jp xchg (bad) inc (bad) decl (bad) insb flds jb fcom clc lahf call sti and fistpl (bad) (bad) decl mov xchg jo dec cmpl cld jecxz (bad) xor and mov adc pop mov stos mov push loop dec mov pop fdivrs popa or sub pop pop adc inc cltd and mov lret dec xchg adc (bad) fbstp popf imul sub lds cld (bad) (bad) jg pop mov je insl fidivl pop sbbb (bad) mov and cmpl (bad) (bad) ljmp loopne test repz mov sbb cwtl test xlat test cmpsl or outsl xchg pop add dec inc icebp or or mov fsubl clc stos (bad) and lcall cmp inc inc es dec pop xchg inc hlt xchg push clc hlt hlt (bad) (bad) fcomip enter mov in lods xor clc stos push push fidiv pop mov lds cltd lea jl xor xchg nop lret mov repnz (bad) (bad) (bad) pushl pop nop xor mov mulb (bad) push (bad) (bad) mov lods shl adc incl pushf fsts fisubr daa jne xchg call scas push pop cmp mov mov test (bad) jne jae lret cmp pop (bad) (bad) (bad) lcall sub ss (bad) xor pxor dec mov aaa insl aam cmp or xor (bad) (bad) ljmp cmpl jl cmpsl (bad) or rorl adc cmp and sub mov decl (bad) and mov shrb dec xor mov clc leave (bad) (bad) (bad) decl ja enter int sub hlt cmp test push sbb push insl cld (bad) call jb jb movsb sbb cwtl test out mov push jnp test ds repz outsb and inc cmpsb mov mov lret mov adc insl bound adc sahf mov and pushf outsb out inc pop rorb adc push imul or lcall call out pop xchg imul jne,pt cmpsb pop (bad) (bad) (bad) jmp inc xor add aad pushf loope clc cmp adc inc rol sbb (bad) (bad) (bad) decl sbb sub daa push xchg ja mov mov and in dec mov mov (bad) (bad) incl (bad) iret xchg nop ret xor aas mov adc stc add (bad) (bad) call push xor jl cmpl jg jmp out mov jle in inc jp (bad) (bad) jg inc pop cmp or mov (bad) xor or ucomiss (bad) call (bad) pushl mov (bad) loopne call lock popf popa mov loop xchg inc js add (bad) (bad) incl jbe mov movsb xchg fldt roll test sarb add push repnz sub push bound push scas lock dec sbb mov testl jns (bad) (bad) pushl add mov orb cmp push repnz mov pop jb or (bad) (bad) decl jae popf mov push loope idivb imul dec xor outsl (bad) mov popf out movsb xchg cmp xlat inc cmp adc repnz (bad) (bad) (bad) (bad) jmp mov fdiv loope (bad) lods jl jg cwtl pop repnz mov nop cmp insl hlt or xlat xor (bad) (bad) push push fisub jge lea test mov sub jb lods rcr leave mov fdivrp or cmp (bad) pop outsb in sub jmp mov push pop xchg fldcw mov jl sub mov adcb and or (bad) (bad) decl popf pop and cltd stc data16 cmp add int dec xor pop sbb (bad) (bad) (bad) (bad) jmp mov addb xchg or sahf ja mov inc mov cli pop cmc mov jnp and fcompl data16 sbb (bad) lcall xchg jb repnz stc push dec testb leave jge xor lcall insl sub mov (bad) (bad) call mov and aam push pop push push cmp push sar sbb (bad) xchg clc (bad) pushl sub js lcall sarl das mov jmp xchg add (bad) (bad) jg scas xchg lock dec add (bad) lock popa mov ds shrb mov jg (bad) (bad) (bad) decl pusha movb mov xor push cmc in xor adc mov negb (bad) (bad) ljmp rcl test lahf sub test xchg dec mov frstor clc pop daa (bad) lcall adc pop or dec adc (bad) dec mov add out or pop insl loop addl push mov (bad) (bad) inc dec mov insb and mov push fsubs clc mov mov dec mov (bad) (bad) cmp push xchg sbb sub xchg and fdivr out cli fwait sub mov aam or pusha mov imul (bad) lcall jecxz push pop push ss inc xchg mov dec inc fcmovnu adc scas (bad) (bad) (bad) call fnstenv jl test adc test insb inc add cltd daa xor stc mov movsl cmp sarl sbb cmpsl inc ret mov pop sti xchg incb mov shlb xchg pop xor and xchg fsubl outsl clc (bad) ljmp clc and cmp (bad) hlt mov sub sub (bad) (bad) (bad) mov inc ror cmp es addr16 xchg pop sub pop push mov sub inc insb cmp fstl xor out leave lods (bad) (bad) pushl mov ja insl mov into outsl lds cmpsl or loop cmp (bad) lcall mov push pop mov insl icebp mov nop cmpsl jg mov test jmp jno jecxz xor push and cld mov pop sub (bad) (bad) ljmp and dec mov sbb adc jno pop push mov insl mov aas cmp addr16 in aam int3 imul push or pop aam cmc (bad) decl fdivp arpl je sbb outsb mov pop sbb (bad) fist cld aaa (bad) jmp mov shrb and (bad) repnz dec mov lcall popf repz divl loop push nop dec push xor (bad) (bad) decl imul pop cmpsb popl xchg push aad mov repnz (bad) (bad) decl sbb push xor leave in pop sub fcompl pusha cmp in xor (bad) (bad) jmp push lcall cmp nop mov mov dec mov aas jp stos decb (bad) push and push or cmp mov cmp (bad) (bad) decl into (bad) aam inc ljmp mov gs mov dec pop popa mov (bad) out pop pop inc jnp (bad) (bad) jg inc mov pop lret insb jns sbbl push sub sub (bad) lcall cwtl pop cmp lcall mov (bad) (bad) pushl enter (bad) movsb stc scas xchg xor dec add test pop pop aam call inc fdiv mov hlt orl push subl cmovae test stos sbb mov call cli jb ljmp jnp mov cmpsb xor aas cmp std scas sahf int cmpsb fimul sbb gs sbb and je jo bound gs (bad) (bad) ljmp mov lods xor pushf fstl ret mov sbb movsb and push and fwait sbb lds and aaa je dec push std insb adc (bad) (bad) jmp push mov xor into push push mov shll mov jle (bad) mov test xchg (bad) (bad) lcall es leave pop adcb sub fs lods outsl std jle jg ja sti jo (bad) mov inc and mov loop scas imul inc lods in inc (bad) (bad) push test push mov fstp xchg enter (bad) push pop cld les fistpl (bad) (bad) (bad) jmp jb and mov inc leave outsb loopne mov enter cmp mov ljmp xchg push call repnz test inc adc in mov std push stos hlt loope mov xchg pop out pop mov cmp roll addb xor movsl mov popf ret jae sbb mov or mov (bad) (bad) pushl pusha adc cmp sub in xchg mov or stos xor cmp jno mov gs inc jg bndstx data16 call mov xchg cmp iret jno outsb and cmpsl add negb aas xchg sti mov push fwait mov xchg jbe jnp push sub push add mov test sbb lcall (bad) mov (bad) xor pop out cltd xorb ret xchg lock lock paddusb je std jg call test xor push sub and movsb mov lods push fsub adc (bad) (bad) (bad) jmp in push mov mov pop ljmp cmp (bad) push fiaddl cwtl lcall (bad) jmp xchg aad mov ljmp lahf xchg popa movsl (bad) jb roll sub outsl loope cmp lret adc cmp lock cmpsl add (bad) decl (bad) sahf bound jl ret push test clc (bad) (bad) (bad) data16 jmp int fs xchg sarl lret sub adc xchg in push test (bad) mov mov push mov (bad) cli inc repnz xchg pop hlt lcall cmp bound (bad) test out inc test pop dec aam stc sahf fldt scas pop je adc xchg xor movsb (bad) (bad) jle (bad) jmp mov sub (bad) (bad) (bad) push sub mov test (bad) dec mov mov adc jno pop lods push cmc or lcall mov lahf sub mov outsl xor jg push stos movsl ljmp aad (bad) incl movsb loopne sub (bad) lock lea pop cmp aad mov (bad) (bad) jg adc mov xchg int push mov in sbb (bad) sbb mov pushf pop xor (bad) fsubl push stc dec mov xchg dec loop (bad) ja leave cmpsl cmp test cmp (bad) call xchg dec adc add add inc cmp (bad) jg mov fwait mov xchg cld scas add cmp jb stos mov xor (bad) (bad) (bad) mov dec pop and xchg inc out clc call add sub dec ljmp (bad) incl or and inc mov rcl xchg sbb cs (bad) xchg (bad) jg lcall das jle mov fdiv loopne mov imul (bad) fisttp adc shl dec push inc jg int add pushl cld sbb mov xchg adc sahf imul mov pop popa jmp add repnz pop cmp gs mov inc push clc fisubr rcrl loop,pn push sbb (bad) lcall shl cmp sub repnz dec cwtl mov push cmpl inc or (bad) (bad) (bad) aas push or sti js test xor push repz repnz or adc (bad) xlat mov mov insl or rclb xchg aad cwtl (bad) mov out ja dec pop scas jae out xchg rcr mov insb decl pushf pop insl fisubrl pop cwtl mov inc shlb stc inc test jnp jne xchg push ret or add pushf cmp dec sub (bad) (bad) ljmp outsb cld mov leave cvtps2pi jae inc jecxz out jg mov cmp testl loop cmpsb daa js stos or xchg mov mov mov leave imul mov (bad) call sbb (bad) dec fdivr fsts inc add lret xchg imul out cltd test (bad) call mov insb push pop scas mov stos jae in (bad) cmc hlt dec mov std in insb adc xor (bad) (bad) ljmp ret sub test mov push push gs push jl push out sub js fmull (bad) (bad) (bad) jmp pop aaa add (bad) push movsl cs push and jl outsl outsl enter out outsl dec push (bad) call fild jg sub mov mov jb lods and xchg and cmp and jl sti ljmp outsl ds mov rcl xor stc arpl sti push cmp stc sahf rcrb arpl cwtl scas push les inc push aaa ror jnp pop add call xor mov int and dec movsb mov inc push dec (bad) (bad) fbld (bad) xchg cwtl xor inc insl (bad) push outsl adc (bad) or decl insb popf sbb dec jns insl and pop push lret rolb (bad) (bad) (bad) pushl in inc test mov in xchg outsl or mov (bad) (bad) (bad) ljmp out ret or xchg cltd rol inc cltd pop push cmc jnp xchg pop (bad) (bad) (bad) (bad) jg xchg idivb mov repz jne iret test rclb pop jge cmc cmp in (bad) (bad) (bad) call mov push (bad) jbe pop dec (bad) mov fyl2xp1 ret cmpsl xlat clc xor or pop fsubr ja lds and mov (bad) (bad) (bad) incl iret lock arpl add dec cmp cmpsl in (bad) test shr cmp (bad) (bad) jmp (bad) int3 push mov (bad) jecxz popa inc loop jb mov fcmovbe inc xchg mov push ficom push shrb push pop sarl ret fisttpll jae clc das shlb loopne jl pushf add xlat xorl or mov (bad) push icebp sbb add stos out mov and gs jge push and sar call stos xchg lea aaa (bad) cld ljmp xlat lret push push (bad) pushl mov push xchg lods jae movsl xor sub test (bad) decl mov sbb and ud2 dec fdivrs mov inc insl pushf or enter (bad) (bad) incl scas push roll and pop mov aaa sti dec jns rcr pop sub add cld (bad) jmp divb pop mov adc jbe fwait jne jbe or xchg mov (bad) (bad) (bad) pushl cwtl test dec incl cmp fdivrs add cld leave add mov lods call pop outsb stc adc xor mov (bad) xor fcmovne lds lds add cmp pop stc (bad) (bad) (bad) incl lahf push mov mov cmc inc ret jo insb cs and mov mov mov add movsb and lahf pop mov add add aaa nop test (bad) ljmp sbb fcomps div movsb pop lcall add (bad) (bad) mov mov insb cmc or (bad) inc hlt inc push xacquire xor sub xchg shrb fcomip outsb ds arpl jno stos rcll add stos mov xchg pop aaa (bad) (bad) (bad) incl (bad) or mov sub jge xchg daa scas mov inc bound dec cmp sub mov xor lret test (bad) (bad) lcall cmp cmp jmp cli clc jmp incl lcall test inc xchg (bad) (bad) (bad) call (bad) push adc inc and mov jl pop cli mov call stos pop and sub adc xor cmpsb ss push inc mov pop xchg outsl mov sahf je leave addr16 cmp fdivs mov rcl pop aad cmp gs mov add in fsubrs (bad) (bad) (bad) ljmp lret push cmp add insl cltd or pop cs jno xchg scas push inc lret mov inc (bad) ljmp xor push inc pusha aam mov xchg inc rcll hlt (bad) sub sub push popl cmp or fadds insb pushw in pushf push or sahf (bad) (bad) (bad) (bad) ds adc or inc lret addr16 cmp lods jnp or sub push sbb jmp mov dec movb sub shr es cmc std jecxz scas adc (bad) repz (bad) (bad) (bad) pushl cmp fimul into (bad) (bad) into out into and fnstcw xchg adc cmp call push pop cs cmpl cmp jmp sub xor repz add push sbb (bad) (bad) pushl adc stos loop ret into mov cmp loopne out pop pop inc (bad) mov adc imul call lret add (bad) or (bad) adc push das mov (bad) lcall sub test in in call (bad) jg mov xor daa testb ljmp out mov std sbb enter fdivrp out cli (bad) (bad) cmp ja mov mov subl dec sub sbb (bad) (bad) decl xor inc fs add (bad) hlt push jg rolb outsl mov call int3 ret cmp iret inc imul icebp cwtl sbb mov pushf cli add stos das cli (bad) jp mov dec fidivl aaa cmp das jo xchg es orl pop lds xchg and (bad) mov fadd fiaddl xor sub in cmp cmc (bad) out cli pop push and out arpl pop dec clc stos dec icebp mov aad xchg push test xor dec dec fcomps cmc pop std fadd decl int3 sti stos cld movsb add adc push xor scas dec out fstpl (bad) fistpll lahf inc addb divl cmc (bad) xor out clc ja fdivrl or jp pop scas out or sbb (bad) xor (bad) decl (bad) mov bnd jp mov out mov ljmp mov mov (bad) (bad) pushl push or test cmc out into fwait jmp ljmp ret daa (bad) (bad) (bad) jmp jnp insl push fisttpll fmuls scas ds and out inc aam shlb sub in xor (bad) (bad) inc (bad) lret test xlat mov pop cltd dec cmp std pop mov incl ljmp popa fild jae (bad) (bad) (bad) pushl add add and imul or pop mov das xchg in push jecxz (bad) (bad) incl mov pop popa or push (bad) push cmp add adc or mov std push cli mov in and retw ret or fsubr das sar repnz xchg or data16 mov add pushl jmp adc sbb dec or push decl push nop jge mov push add (bad) (bad) jmp xlat mov leave inc xchg nop pop imul outsl add inc addr16 cwtl jnp xlat addr16 ljmp adc lock cltd push inc jb jnp push movsl notl (bad) (bad) ljmp xor adc pushf pop out cs inc mov subl push notl jg cltd pop in jo xor (bad) (bad) lcall sbb outsl imul jmp ja ss (bad) (bad) ljmp insb js stc sbb enter mov lods mov (bad) pop mov popa mov (bad) (bad) (bad) call mov pop push (bad) scas out push rolb xor and inc cli (bad) (bad) jmp add dec (bad) xor ljmp enter das pop inc repz add mov push je daa lret scas cs push xchg cli (bad) pushl popa daa pop out into cmp fdivrl or xchg (bad) ljmp push jae sti gs dec stos push fsubrp daa std mov sub movsl jg add pop ret loopne,pt (bad) lcall mov sub mov fcoml shr mov (bad) (bad) lcall dec jg xor insl and lods repnz (bad) mov xchg (bad) (bad) jmp mov push xchg add into xchg clc adc stc jp mov adc (bad) (bad) (bad) (bad) lcall adc into xor sub sbb add (bad) (bad) xor stos add push jbe les je xlat lret mov or jmp lock mov movsl pusha in jnp jl jg mov pop mov dec sbb loopne jl (bad) (bad) (bad) call inc mov mov in push stc push insb (bad) lcall cld dec mov (bad) cli (bad) (bad) decl sub push pushf mov addl rcll rcll aam jg ljmp push popa pusha int3 mov test cmp pop js xor (bad) (bad) lcall and pop cmpsl push rol sahf mov aad sbb cmp imul dec stos mov fbstp jne call or jp and or jecxz or jno cmp pop hlt call mov pop hlt jne div (bad) sbb inc lahf add push imul shlb fbld lds dec orl adc sar (bad) (bad) lcall in sbb lea je push cmp dec xchg push jno gs jecxz (bad) (bad) (bad) inc in sbb pop je pop sbb repz andl dec mov mov popa add test (bad) (bad) lcall int push std sub insl or add xchg adc adc xor mov inc loope mov popa out xor mov (bad) mov int cmp cmpsl gs sti es jl daa cmc mov inc popa (bad) jg (bad) and call mov stc xlat fist adc cli (bad) call addr16 mov stos xor fmull test cs adc call pushl (bad) ljmp es es mov lret or shrl (bad) call sbb cmp ret imul out pushf push cltd sub mov dec dec loope ljmp repz dec mov insl pushf pop cmp sub fistpll mov pushf shlb repz add cmp cmp mov sar imul pop add (bad) (bad) (bad) fnstsw fisttpll out sub incl out sub mov dec sub mov shll andb int add mov ds dec fcomp aaa (bad) (bad) (bad) ljmp mov xlat cmp test scas jb cwtl imull mov pusha ljmp clc (bad) ljmp push (bad) push dec repz push rol dec sbb adc (bad) (bad) decl inc enter push and fwait lock inc sub ret and push cmp call fildll ret je push jo ds (bad) jg lret pop xchg inc (bad) loopne call movsb (bad) int inc (bad) iret jno jo (bad) (bad) (bad) jmp out jns pop and lea movsl jmp adc negl jecxz ja rorb xchg (bad) (bad) (bad) (bad) pushl fcomip lods or enter mov clc notl roll pop mov push out pop in xchg jnp test adc int3 mov (bad) mov call movsl mov inc ds shll (bad) fcomip push enter sbb ret mov sbb pop (bad) (bad) (bad) lcall mov out (bad) adcl rcrl xchg xor sbb shr (bad) (bad) (bad) decl loop and sbb add out das in out pop call fnsave int3 mov leave push mov mov and (bad) je (bad) (bad) (bad) ljmp push mov jecxz pushf scas popf push out jecxz repz ret cmp (bad) (bad) (bad) decl sbb mov pop fistp jb push sub test rorl sbb (bad) xchg and movsl xchg mov mov lods pusha ret sbb pusha test fnsave (bad) (bad) mov dec or cmpsl inc (bad) je aaa lret add int3 in inc jle arpl dec in dec mov cld ljmp mov xchg inc je adc cwtl movsb ss incl mov or mov rcrl sub push subb pop xlat cli outsl addr16 repnz ror popf daa jp jns,pt fcomip (bad) push or xchg jmp mov fildl sahf ret mov mov push pop (bad) lahf dec cmc (bad) (bad) pushl cli xchg xchg or call stos cltd add sub (bad) xor xchg lock imul mov mov popa pop aad sub mov movsl add cmp xchg (bad) (bad) (bad) jmp and rorb es xchg aaa inc mov jp dec pop pop (bad) mov incl jg lods repz mov (bad) push push push es das sar in dec sub hlt and or (bad) es inc pop push (bad) (bad) lcall push les das pop xchg scas inc sub mov and movsl loop add sbb repnz adc jo dec rcll push jecxz in stos lock rorl (bad) (bad) incl test mov scas adc push dec jne pop into push pushf fucomi xchg jns or daa push mov (bad) lcall adc push jg jo add inc inc xchg (bad) (bad) jmp arpl rol xchg xchg in test popf xor stos lahf or (bad) (bad) cmp jmp clc inc push or cmp nop ds mov push xor jo sbb (bad) (bad) incl mov out xor outsl stc (bad) je outsb jne cmp mov push mov mov or xchg out sar lcall cmp push or (bad) mov jle call sahf inc cmpsl mov and ljmp push mov sbb cs (bad) (bad) call imull sbb add xchg cltd mov divl dec bound mov sahf add in mov sub test sahf sub cmc jmp (bad) (bad) (bad) mov jno ljmp xorl sbb jmp or sti xchg incl std add call test and cmpsl lds (bad) (bad) xor cli leave cmp mov mov pushf icebp cltd sbb (bad) cmpsb cs test pop addr16 mov sahf std push sub xor xor pop jl inc aas rclb cld (bad) (bad) lcall js mov popa add cmpsl push (bad) xor or mov cmp push outsl (bad) jg pusha pop and xchg inc cmp adc dec mov dec or xor mov dec lods ds (bad) (bad) lcall int push ret fbld mov push mov adc and cltd mov sbb mov xchg sbb mov loope mov (bad) stc adc and std lahf or sahf jno lods dec dec push sbb or dec xchg ss adc adc (bad) (bad) incl sbb (bad) lret sub movsl sbb fs cmp ljmp jmp add sti sub mov jge js mov enter enter (bad) (bad) ljmp push out cmpsb out cld cmpl mov adcb xchg shll (bad) decl ja cmpsl ljmp pop out mov cmpsl mov sbb sub lcall popf or and jmp pop sub sbb in jmp add (bad) (bad) mov jb jmp add cli (bad) lret hlt jle adcl ret (bad) (bad) ljmp push jo rorb popf or mov adc jecxz cmp fcos call inc ds mov sbb jo cmpsb xchg je xor (bad) mov cmpsb fdivs xor push jbe aas stc aas cmp int3 xor (bad) fstpt sbb push jmp pop sarl inc dec lods (bad) jmp adc cmc xchg push sub (bad) (bad) (bad) jmp call inc dec mov aad mov or ljmp or (bad) (bad) incl or movsl dec xchg stc and mov outsb mov arpl sbb adc (bad) (bad) jg lahf fimull push ljmp leave cwtl adc pop jne inc (bad) (bad) (bad) call or mov pop dec inc pop add fwait pop inc xor (bad) (bad) pushl popf adc inc aad jmp cmc mov repnz pop inc (bad) and fstp mov mov mov or test fldcw test mov jnp shrl jb (bad) (bad) pushl push jno popf rorl cmp or daa or je movsl mov (bad) mov or rcll adcl inc or (bad) in jns inc cmp xor int insb jae add fcomi cmpsl jnp (bad) (bad) (bad) pushl (bad) jb outsb mov jl push or add enter add sbbb in test lcall jo aam dec std sub outsl out in sub sahf (bad) ss or (bad) (bad) js xchg mov jns or cld imul add (bad) (bad) lcall add sub mov jge or stos and fldt test add leave xchg sbb (bad) (bad) pushl rcr lock mov leave pop dec mov test loopne add inc decl add push cmp adc inc in dec fistpl ja rcll inc adc ljmp insl pop mov inc (bad) int3 orl jp daa and (bad) cmp sbb insl (bad) dec and fdivl push (bad) push jl mov pusha push and lock decl fadds nop out lret jg adc arpl scas clc call sbb jbe push push stos mov cld lcall ljmp rcrl fnstsw imul (bad) push sahf pop inc inc mov (bad) (bad) pushl lret ja xor in or inc int3 out sbb clc fbld inc cmp loop mov push sti stos out pop sub je or in push or (bad) or xchg dec push ss (bad) (bad) (bad) fidivr and dec stos mov push add inc adc hlt aam push mov clc sbb xchg mov pop xor fwait lds cs iret popa add (bad) (bad) cmp adc sub std sbb insb icebp ljmpw adc lcall jge in mov pop pushf or loope mov mov (bad) (bad) (bad) lcall or inc xchg xchg pop xor sbb lret pusha xchg xchg jns or mov xor cmp pop (bad) mov call daa sub ds daa lods repz adc scas jmp cmpsb test (bad) (bad) (bad) (bad) jg mov sub dec adc dec rcll pushf dec aad cwtl loop add ja aas rcl jecxz sahf mov inc lret cmpsb dec mov (bad) (bad) incl sti lahf cmp andb jb cltd fistpl dec and data16 rolb hlt (bad) (bad) (bad) (bad) mov fwait sbb or xchg popf xor pop (bad) xchg iret data16 mov mov xor rdtsc ljmp loop sub inc sub data16 sbb outsb popa pop dec fcomps test jle cltd sub scas xchg jnp nop ret (bad) dec insl xor xchg aam orl xor push and lret xor std mov mov (bad) (bad) jmp mov push (bad) jle lea xor pushf mov and and and cwtl ja in out bnd (bad) dec aad cmpl dec push pop push dec mov cmc push pop adc mov cld (bad) (bad) (bad) dec aad lds jno xchg inc aaa fs jp imull xchg cmp fimull adc fwait cmp jecxz andl (bad) (bad) (bad) mov jmp dec test sub jmp sub (bad) cmp (bad) (bad) incl rorb not and add leave popa inc fwait aad or sbb aad stos adc cmc mov in xor pop pop (bad) lcall mov divb xlat insb sbb and cmp (bad) (bad) pushl mov inc adc push add hlt cmp sub cli bound or stos (bad) (bad) decl gs sub popa stos jge push push jmp out sbb (bad) (bad) (bad) in jle adc inc mov ficom cmp xor out xor xor popf sbb (bad) inc cmp out aad nop xchg mov push shlb insl hlt mov mov jmp dec in addr16 movsl and frndint mov sub jns mov in mov or rcrb sahf scas movsl mov xchg jnp add push lods cmp push mov pop out nop popa nop mov repnz jmp mov das mov fistpll jnp xchg pusha xchg push js sub push ds lcall sub scas and mov jg sbb xor mov push inc dec jecxz dec test imulb sbb jmp pop xlat out jg in adc incl cltd pop inc (bad) js arpl out popa mov cs (bad) incl into std or sub pop ds loope jno in loope mov mov ljmp ret arpl mov addl repnz xchg pop dec fdivrl loopne (bad) (bad) mov pop arpl in mov pop push xor jg (bad) (bad) (bad) ljmp or shl mov adc or sbb mov fsubs dec (bad) (bad) (bad) cmp cmp negl aad in dec cwtl jno shll les aaa cwtl ret jns repnz dec ds insl sar jmp aaa subb or pushf dec cmpsb adc test adc cwtl ljmp iret add inc add rolb mov decl fs inc pop pop cmpsb fs add or (bad) (bad) (bad) decl or fiadd jp lret inc out rcr cltd jnp sub xchg add jg (bad) (bad) (bad) decl out fnstsw movsl jp fisub add ja lods xchg ret adc mov (bad) mov xchg fldt or idiv clc sub dec adc xlat into xor (bad) (bad) ljmp sbb xchg out jb inc xchg (bad) push cmp cld push and sar (bad) ljmp dec mov sub sti out jnp test movsl or (bad) (bad) (bad) jns test xchg in sbb pusha aad imul stc int pop jp test (bad) (bad) lcall cld daa loopne sbb pop inc out inc enter sub mov ljmp stos mov jno add mov and movsl cmp inc hlt add repnz rorl loopne cmpsl stc pop mov adc jbe push sbb jl sub mov mov jl (bad) cld mov push mov scas ja jle (bad) (bad) incl test add mov (bad) mov cltd mov (bad) (bad) (bad) (bad) jnp dec fidiv lahf and pop out cwtl mov test lock xor xchg push (bad) incl test jns out jge,pt adc mov mov pop xor repz fldenv jl imull jle push scas cli (bad) decl or icebp sarb sahf sahf xchg mov lcall cmpsl mov sub in or xor mov (bad) (bad) call mov xor daa ss jl movsb (bad) icebp dec adc cmpsl aad ds (bad) cmp (bad) (bad) (bad) in lret cmp fstpl cmpsl jo int3 sbb leave clc xchg mov out leave fbld and pushl iretw dec daa push gs push shrb ljmp lock movsb ljmp (bad) (bad) (bad) (bad) cmp jo test dec popa sub pushf fs dec jne bound xchg scas (bad) (bad) (bad) (bad) jns mov pop ljmp or rorb add adc jmp (bad) bound test das jle mov mov jmp and xor pop sub or push out icebp pushl std outsl imul sbb mov in cmp jne lea xor ret (bad) (bad) (bad) (bad) jmp fdivrs enter adc lret or ja xor inc or (bad) (bad) (bad) ficomp mov sbb jge (bad) pop data16 or fsubrs aam dec sar lock cmp cmc (bad) call ljmp pop shrl outsb xor test jno adc adc cmc dec movsb icebp incl call jge mov test incl pusha loopne int fimul add jmp insb outsl push jge pushl mov je or xor sub adc (bad) (bad) jmp data16 ljmp mov mov pushf sub (bad) (bad) jg mov popf cwtl jg divb mov jmp fcomps decl pop out imul (bad) (bad) fistpll addr16 fs iret mov xchg arpl shrb nop outsl mov pop je jmp sarb (bad) cmp push divb (bad) ljmp das test mov push (bad) xor cmp lods movsb adc (bad) (bad) incl fnstcw clc test dec cmp jp addb aas jns sbb pop inc pop popf sub aam inc mov xor xchg add out test add xor decl sahf mov jo xchg jnp sbb jp movsb test (bad) (bad) ljmp sbb dec inc notl rcrb adc mov sub (bad) (bad) ljmp arpl pand push sub stos mov addr16 or mov mov sahf add xor imul scas and cld aaa sub or mov add add push icebp jmp sub ja (bad) push incl pop (bad) mov xor inc pop xor xor push jno out es fildl mov push shrb push pop xor aad dec and repz jp cmp xchg cmp sarb xor (bad) lcall pop dec fimul cmp add inc pop subb dec (bad) mov sub leave and outsb fiadd cs insl inc lcall clc add xchg push xchg xchg inc (bad) pop enter fmuls mov (bad) in (bad) ljmp cli (bad) movsb sub movsb (bad) fistl pop jne (bad) mov and aad je (bad) xor ret cmp (bad) (bad) ljmp cmp pop or movups adc xchg push aaa lcall sahf add sbb icebp ds (bad) (bad) mov dec cwtl or push pop inc popa mov mov fistpl popa fistpl or add xchg push inc pusha cmp idivl sti dec add add popa in or (bad) (bad) (bad) push jo ret fcomps push or or aas jle test fadd ret push xlat call adc sub nop in xchg les pushl xchg lret pushf mov jae or mov add sub (bad) (bad) fidiv xchg out jb lcall int3 and and (bad) (bad) jg pop cltd push rorb rorl adc inc setno sbb xchg es cltd sub bound push pop lods int3 not mov jle (bad) (bad) (bad) lcall sub insb push cmp push fsts adc in inc jmp or mov fisubr lea lcall inc rorl push xchg xchg xchg lcall mov jecxz (bad) decl push ds lahf xor js stc das shlb xchg inc dec (bad) (bad) (bad) call jb mov mov fsubrs lods js push inc out push icebp sti popa adc scas add in cmpsb movsb aaa mov (bad) push pushl cmp cld push int3 rcrb jp (bad) std in sub mov cli (bad) (bad) decl lds add mov push xchg leave lcall in inc mov (bad) (bad) ljmp mov icebp cmp scas dec shl lods jns and xor push dec pop aad sub (bad) (bad) decl pop call xor or jb jmp stc (bad) in pushf mov (bad) dec mov (bad) (bad) incl lock fidivl pop scas in xchg mov or es out leave cmpsl adc (bad) (bad) ljmp shll inc imul dec aaa xchg repnz aad pcmpgtd fmull mov fisttp jae in and arpl jns cs loop (bad) jmp mov mov fdivrp mov and arpl dec sub sub decl push mov les xchg cltd fsub push ljmp fidivrl add mov adc call and shrl movsl andl call loopne and cltd sbb int mov cltd mov pop aam jle (bad) call push mov and cli mov mov and pop xor sbbl in sub scas mov fadd insb push fildll jmp cmp fsts xchg lods mov mov je (bad) ficomp xchg loopne mov (bad) (bad) lcall aam push jb mov je cs lahf xchg ret cmp push mov dec sbb repz jg or dec pop lcall or (bad) decl mov jbe,pn and addr16 xor loop (bad) in jmp ds lret sub les mov decl pop mov jl sbb jge lcall dec mov or loopne and (bad) (bad) (bad) jmp sub and outsl mov adc push outsl aad mov ret rolb aaa inc loope dec int3 (bad) (bad) (bad) incl repnz sbb fucompp jbe push mov and enter rcll and (bad) (bad) jmp ds xchg inc xchg jns xlat dec push add fnstenv lods enter sti (bad) (bad) lcall push cmpsb sbb out js xor lret jmp jp fs and loop and out mov roll add pop mov push jmp xor mov in mov popf decb and incl stos dec xchg jle sbb xor (bad) jg mov pusha inc and scas int xchg mov jo pop cmpsl jbe enter (bad) (bad) mov mov fsubrl mov int3 stc sub pop pop mov ds (bad) (bad) (bad) incl adc ror xor mov out fwait xchg in mov adc (bad) (bad) (bad) mov inc mov ss mov mov ret xor cs icebp (bad) (bad) incl lret push stos loopne adc js adc pushl pop loopne pop inc sbb lods dec lret movsl (bad) lock das aam pop fisubrl fsin ljmp (bad) sti add add cmpsl gs cmpsb cs jl push mov jge insb test mov mov cs sub adc adc mov pop inc cli jmp lods mov cwtl lret cmp lods mov mov pop push iret sub jg sarb sub mov cmpl mov dec cmpsb dec es rcl rcll push sub aaa (bad) (bad) (bad) lcall jns jb lea cmp sbb dec fs ds es (bad) (bad) (bad) jmp enter cld inc aad ret pop imul pop xor test dec pop int push dec hlt (bad) (bad) pushl push ret cmp loope jbe arpl cwtl std aam ret xchg add pusha sarb and idivl fcomps cmp and stos mov add inc fs pushl leave dec roll dec sub pop pop xor push in (bad) (bad) out clc fmuls inc or and mov data16 es (bad) (bad) decl inc or inc inc push ret mov mov (bad) (bad) (bad) ljmp push movsl dec xor sbb int or push test and roll clc inc mov (bad) ljmp out rorb scas jae xchg lods pop jns ja push lret and xchg hlt jnp (bad) (bad) (bad) dec mov rolb test xor xchg loopne loope in or ss cmp (bad) (bad) (bad) ljmp dec int3 jns mov scas sahf cwtl stc aam push sbb push inc cmpsb xchg jp mov das mov rolb sahf sbb int scas clc (bad) cld sub leave xorl jo repnz mov cmpsb je sub (bad) (bad) jmp movsb jbe adc add cwtl popa push jg sbbb mov outsl clc pop cmp pop sahf dec inc (bad) jmp sbb mov mov (bad) (bad) ljmp int repz mov cmovg iret sbb push clc or aas sub int cmpsl stos cltd push pop rclb es imul aad xor sub scas and or sbb xchg enter ljmp (bad) (bad) decl cmc inc sahf in dec out test dec loop icebp xchg xor inc mov hlt or (bad) aas popf scas in ljmp or adc test idivb add add in (bad) (bad) decl subl cmp fldcw mov frstpm(287 mov (bad) jmp jno (bad) jbe or dec jge rcl lock imul gs and jmp fsts inc inc rorb mov add push and subl ljmp data16 push mov mov je lcall imul lock lcall push std push fbld mov (bad) mov mov xchg and jle and test jno pushf loope inc call cmp movsl jb (bad) std cmp sub ja cmp add lahf stos out push or popf inc jge sbb scas clc ljmp (bad) dec pop cmpsl dec pandn and pushf data16 pop pop add jmp int3 clc pop je dec mov add idiv (bad) (bad) incl scas daa mov pushf int inc pop lds into jge jnp loope loope sub in mov push loop pop or jmp fldcw sub xchg js les mov (bad) sti out or mov push scas sbb xor decl cmp (bad) (bad) (bad) aas pop (bad) cmp jmp (bad) sub add mov jbe adc mov cmp (bad) cli jne,pt add stos jecxz sub jecxz (bad) (bad) pushl movsl bound dec fcomp nop pop mov push jbe movsl repnz test mov loopne ret push inc pop outsb rcrb fsub dec dec scas mov xor decl mov jne dec cs sub aam arpl xchg adc mov xchg xchg mov (bad) lcall test pop cmc mov test (bad) add mov or (bad) (bad) call stc mov test pushf cmc (bad) jo sbb jmp xor cmpsb or mov (bad) (bad) push jge (bad) cltd aas aas push add inc lods sub out cmpsl cmpsl mov stc outsl sbb jo jg (bad) decl inc iret cwtl and bnd leave inc dec jne dec clc sbb jne sti jb jae (bad) (bad) incl loop rcll shrl in jbe xchg loope fimull jmp pop mov (bad) incl push jb add mov inc push (bad) and pushf cmp flds shlb cmc hlt cwtl je hlt push outsl jbe push or icebp (bad) jg aaa jno,pt cld insl into cld pop stos xchg test addl arpl ljmp cmp pop xchg imul inc mov int3 xor cmpsb ljmp dec mov sub sbb (bad) (bad) mov ficomp nop sub cltd jg push sub out into pusha or stos inc (bad) jg insl ds lods je insl rcrb sbb cmpsb repz mov (bad) in add pushf xor sti push mov add mov imul or pushl sbb imul incl (bad) or adc sbb fistl push inc data16 mov (bad) ljmp cmp push mov jg and cmp fdivrp loop les lcall add ficompl or incb negb subl lret and repnz jns jbe (bad) jmp xchg xor int3 lcall leave call (bad) stc add arpl mov imul in int fwait add rolb xor jnp pop sti xchg and lods mov cwtl ja ret iret (bad) (bad) (bad) decl arpl gs and rorl pop cmp mov jle mov mov ret es lds cmp dec mov mov adc push and in sub sbb std test xor cmc in loope,pn out repnz xchg imul cli aas addr16 add mov scas xchg inc shrl (bad) mov adcl add (bad) sahf jae jmp decl xchg into mov lds inc inc mov inc daa stos (bad) (bad) pushl mov inc inc test jo popa int3 xchg pop sub pop cmpsl jns inc dec (bad) fild outsl scas sub sarl into and or mov ja adc pop cmp test push lea repnz loope ret mov (bad) (bad) incl push (bad) arpl add inc movups (bad) out push lock outsl lcall inc xlat cmp ljmp push (bad) cld add add in insb inc scas aad fwait incl movsl inc and pop and jecxz popa push push xor fwait (bad) stc (bad) (bad) (bad) decl cs out js (bad) clc out fistl jg addr16 lret (bad) adc das mov add ljmp or dec xchg mov pop xchg inc test out jp jne lock and adc sbb sti cs xlat daa popa push xchg sahf mov xchg cmc (bad) jg rolb int push rcll popa popf adc fucomip add add gs cld dec sub (bad) (bad) mov cmp xor incl xchg dec inc cltd loopne fwait xchg sbb clc push cld outsl call (bad) lea xchg call fnstenv (bad) (bad) cmp add ljmp dec (bad) xor cmp sbb lods mov incl pop jl out into dec xor nop jle je add ljmp incl xchg testb and cmp frstor dec cmpsb sub xchg lds push call fildll cmp adc ds ljmp pushf shrl lock pop imul data16 (bad) (bad) (bad) std inc test insl push xchg cld stos adc enter xor dec int mov adc imul decl movsb mov test mov inc lcall jno ret fsubr (bad) jecxz cmp ret (bad) push sbb sahf jb addr16 scas jne xchg setge mov int loopne push subl jmp mov pop lcall aad into jge adcl repnz xor cmp loopne pop inc loopne jo lock sub outsb sbb adc push aad je test scas out push in jae and fcmovne js and (bad) in (bad) fcmovnb int3 mov out jo dec cmpsb or sbb sub es movsb sahf and push loop lods outsb aas cmp pop xor (bad) (bad) (bad) decl imul xor nop lahf insb mov xor movsb jecxz adc jmp dec imul sub push lret push jmp xor std (bad) (bad) incl rcr push incb xchg xchg or pop cltd dec pop jo or ret inc lods cmp (bad) (bad) mov add outsl add sbb xor push in mov xchg lods gs lcall (bad) jo rcrb ljmp sub daa movsb int mov push push or ja cli add popl jg into rcll xchg out clc ljmp add push lods into data16 and dec leave in ljmp (bad) call fdiv jbe cmp insl insb test insl mov pop insl add (bad) jmp push add fsin xchg xchg outsb ljmp mov inc cld xchg jo pop mov cmp adc insb or mov or push (bad) (bad) (bad) call pushf addr16 dec js mov scas notb (bad) jmp in jl (bad) (bad) (bad) dec cmp add and cmp jns jecxz fs jle push das cli or jecxz or mov je mov xchg sarb (bad) (bad) (bad) jle mov cmc rcll jns or inc sub sbb fistpll pop addl cld (bad) (bad) (bad) mov (bad) data16 test lcall test movsb ss (bad) icebp inc enter pop push in adc cmp cmp and sub sahf out je idiv (bad) (bad) lcall test inc pop mov push jae sti adc clc sub daa inc inc mov in icebp mov push imul cmpb or lods loopne hlt xchg push adc ja or mov (bad) jo (bad) cmpsl pop mov rcr mov icebp int3 lret mov mov pop mov mov ret movsl jle inc mov push add fild mov mov mov xchg (bad) (bad) (bad) decl cwtl jecxz xor inc push scas mov outsb fninit mov inc shrl mov movsb test and (bad) (bad) ljmp loopne sub movsb inc loopne xchg jbe aas mov out lock cmpsb subl call xchg mov xchg sbb sbb fst mov push mov (bad) (bad) cmp add mov lea sub stos or jnp das push inc pop jg (bad) (bad) (bad) jmp xchg fisub pop push and shrl test mov (bad) call mov adc sbb lds (bad) (bad) incl adc test jbe pop scas fwait aad xchg cmpsl cmpsb add pusha mov lcall ljmp push adc (bad) (bad) mov leave cmpsl aas dec push sahf shrb je dec loopne push dec pop cmp shr movsb jg (bad) (bad) ljmp fwait adc popa push add lea fbstp sbb (bad) (bad) pushl mov mov ljmp mov movsb outsb mov ds (bad) (bad) (bad) dec movsb push out mov (bad) add pusha in sahf mov sub fs stos (bad) (bad) incl pop jne clc jmp mov mov push nop mov js pop into push ja dec sbb dec inc pop cmpsb sbb adc add (bad) (bad) (bad) inc xor mov mov lret push xchg and sbb push insb stos jle movsb icebp ds cmp in inc (bad) (bad) (bad) pushl cli mov aas xor pop ja lahf incb repz or ja or ja (bad) fmull adc out rcrl or (bad) shrl icebp pop loope or xchg aas mov xchg fstpl and dec inc and add call loopne pop mov mov jge scas imulb dec loopne dec stos lods (bad) jl (bad) (bad) in (bad) mov cs shll pop cli lahf jns mov sti xor sti int3 imul out mov call int3 xchg int ds cwtl jo (bad) (bad) jmp add push cmpsl adc cmpsb fisubrl xorl dec fcmovb popf (bad) (bad) (bad) push cmp nop adc mov and sahf jg pavgw mov scas cld (bad) (bad) (bad) fisubr int or mov or jne enter dec or mov insl (bad) sub and enter ds aaa mov (bad) (bad) call mov fdivrp mov test cmpsb lahf pop lret pop shl ret xchg mov (bad) (bad) and data16 pop push in mov inc sub test lea add sbb push dec (bad) mov adc and cmp es mov fucomp mov stos aaa (bad) xchg sbbb push xchg mov (bad) (bad) jg les out sbb pop enter mov jno (bad) cmp nop and in (bad) (bad) mov pop inc out push sbb adc xor inc lahf dec push xchg sbb ficomp bound incl lret (bad) sub fs mov loop mov sbb clc pop (bad) pop inc sarl cld sub aaa cld pop sti push dec dec sarb (bad) pushl jp pop sub cwtl out dec stc adc loopne dec outsl mov lcall outsb xchg xchg sub jg push mov push mov sar aam xor cli xor xchg clc dec sahf test arpl lods (bad) (bad) jmp jmp jne scas dec test pusha (bad) fisubr pop push sub cmp xchg mov dec fcompl nop or xchg faddl incl jg jb or pop daa (bad) ljmp ds mov sbb lret jg or and rcll sahf add (bad) (bad) jmp je lock fucom lcall mov ret ds and xchg push cmp sub pop dec mov (bad) frstor inc inc repnz pop (bad) ficompl mov push loopne xor (bad) cli mov push cld mov outsb inc clc cmc xchg call cli (bad) (bad) (bad) lcall sub leave bound or and mov mov xchg adc push or sbb lea into ljmp and imul (bad) (bad) call int ret cli and mov pop inc cld (bad) scas loope xor pop inc clc jg pop or cli or dec and jno mov xor pop pop sbb int3 mov and push int cmp xchg cmp and or (bad) (bad) (bad) decl adc push arpl sub sbb in and add cwtl bt ss (bad) (bad) (bad) jmp adc inc mov data16 cmp fwait inc pop ss (bad) (bad) incl dec out imul adc cmp popf fsubl dec (bad) jmp jl aad cld pop add fs and cmp lcall push icebp xor int3 popf pusha loop bound add inc add (bad) xor (bad) (bad) (bad) lcall mov dec and and flds (bad) mov add hlt adc mov (bad) out notl pop sub xlat mov enter into scas push (bad) decl (bad) fmulp or pop mov repnz cltd loop and jo (bad) cli inc adc call lds dec aad pop or (bad) (bad) fistpll mov negb das fsub popf adc push push inc mov sahf das adc inc ds mov (bad) lcall mov push fldl sarb loope push shrl xchg add (bad) (bad) (bad) call lret scas pop dec sub std cltd sbb sub in pop iret lods add sahf sub rorl pop addb mov pop dec popa inc xchg fist jmp fcmovbe (bad) push popf les push sub dec mov (bad) pushl ds or (bad) fisttp xor adc dec rclb jne imul test decl and adc cmp out dec xchg fs jmp insb pop jno outsl (bad) ljmp stc shll mov dec iret mov and jmp jnp mov xchg outsl and ljmp (bad) jo lret adc ss lret (bad) cmc pop pop test aaa ds mov movsl xor mov sbb shlb mov mov repz movsb (bad) (bad) call sahf ljmp scas lock scas sbb cmp mov mov cli (bad) (bad) jp xor stos sbb mov add clc dec xchg cmp (bad) (bad) jmp sahf jmp loope in rcrb push sbb repnz mov mov sub ljmp (bad) jl out dec (bad) sar (bad) add and or add (bad) pushl mov outsb cltd ret mov test fisubr out adc dec nop imul mov mov ds pop pop adc (bad) ljmp add jg into add mov test jbe ljmp mov pop movsl divb test sbb fisubrl dec inc ja (bad) (bad) lcall jns (bad) pop (bad) orl int pop fs enter lock adc cmp mov (bad) fidiv inc jmp and add dec push cli ret jmp xchg dec aaa pop (bad) mov (bad) (bad) fimull cltd mov mov push or inc ret stos scas mov (bad) (bad) out cli mov and (bad) xchg cmpsl jge lret enter (bad) (bad) incl xlat popf sub daa or xchg jnp jge sbb cmp (bad) call and push outsb std mov data16 jne sbb (bad) call jno jge xchg or (bad) (bad) (bad) mov cltd cmp jle and lds aad int push cltd in and pop mov xchg xchg rclb inc outsb mov ljmp js imul lretw add subl add jg (bad) (bad) fcoms push push stos dec push cmpsl (bad) into jb stos (bad) sbb lds aam std mov ss int3 push fisubrl sbb pop pop call mov (bad) mov testb add ljmp xlat xchg mov lds insb adc cmp push push mov loopne mov sbb mov sub jae cmp ss pop xchg mov inc cmp loopne jg outsl ret orb fwait in out inc popa imul mov in xor cmpsb icebp cmp hlt clc or mov rol dec mov adc aas dec shrb test es lds in sbb (bad) (bad) call test fistl sub dec xor loope or pop pushaw das mov rorl or jo icebp lea sub sub inc inc sub xchg repz in in stos mov push or mov nop out cmp (bad) ljmp push xlat es insb jmp fild out test (bad) push sub stos test (bad) decl (bad) jmp ret in rorb rol jp sub xlat popa mov je (bad) push pushl pop rol call shll test in call (bad) shrb (bad) (bad) call add bound int into aad flds xor sub (bad) fisubl pop das (bad) jo mov stc inc ja (bad) lcall xchg add lret mov adcb icebp loop mov out rorb insb data16 rorb scas mov scas sub jge lods dec xchg aas xchg (bad) inc xor xchg jl xor rorl (bad) jg (bad) fstps jb and popa inc jbe fiadd rcrl aas push cld outsl lcall xor xor cltd xchg scas mov popa cwtl cld sbb cwtl (bad) (bad) (bad) incl xchg jecxz shrb jmp mov jne xchg test xchg fstl outsb icebp cmpsb jnp dec xor aaa xchg shrb mov and aaa (bad) int3 popf mov ljmp clc inc js mov sbb xor outsb out fmul rcrl pop inc jp popf outsl push (bad) (bad) (bad) ljmp pop jge mov push or cmp ss js push in cwtl xchg (bad) ss xchg jns mov roll and fucomi jb sbb fsts unpckhps iret decl lock xchg (bad) fbstp addl and in pop jl call lock sbb (bad) sbb sub std (bad) (bad) mov stos movsl mov pop addl add xor (bad) (bad) decl xor jnp xchg addr16 enter flds sub and fist sbb add nop mov ficoml lds js adc and (bad) (bad) (bad) out stos scas and movsb dec xor mov pop mov fnop icebp inc idiv (bad) (bad) lcall call mov inc addr16 pusha (bad) cs sub and shrb cld ja (bad) add push sbb push outsl (bad) (bad) jg and or ljmp imul mov or inc sbb jp orl out into mov jns push ss (bad) (bad) pushl push (bad) outsl test mov jecxz aas iret pop xchg outsb (bad) shrl push fistp cld cs (bad) (bad) mov out adc in mov cld adc jns hlt pop cltd jmp clc jnp dec and (bad) cs (bad) call inc (bad) adc push lret inc lea cmp lcall nop jnp mov xor xor cmpsl jb jns (bad) divl icebp sbb popf and in lcall pushl adc vxorps and fwait pop xor xchg cmc out ljmp (bad) lcall fbld adc jnp lods (bad) sbb mov pop fnop (bad) mov push lret out fdivrp sbb pop push push jg push addl mov (bad) (bad) fsubl push insl out jp aaa pop push imul xchg movsl add fsubl pop lcall decl xor mov cltd shll mov jmp daa dec xchg mov pusha int3 adc (bad) (bad) (bad) lcall dec adc inc fimul cs push xchg add xor cmc inc dec sbb sub mov xchg fbld popa dec xchg test xorl aaa data16 push jmp add mov or push (bad) ds (bad) (bad) incl add je pop jne push pop jnp std das mov jmp or fs add scas movsl cmp imul push (bad) (bad) (bad) (bad) ds pusha mov cld in (bad) jae cmpsb pop popf movsl push push ljmp (bad) sti mov insl sbb push jns xchg adc int3 pusha enter loopne pop aad js dec ds (bad) (bad) (bad) mov sub adc mov outsb lods fadd and cli sub scas jbe xor imul push fs (bad) (bad) (bad) (bad) ljmp pop imul popl aaa or mov sub cmc sbb and inc scas cmp cwtl mov xor shrb dec fs add mov sub (bad) cmp (bad) mov mov push mov xor inc aaa je ret mov jge (bad) (bad) call out in (bad) mov imul stc pop sbb negl xlat mov dec inc fnsave inc (bad) decl adc mov (bad) (bad) (bad) (bad) fisub or int3 push cmp add mov sbb or in in xchg dec mov or or fwait mov test xchg test call sub xchg out cwtl icebp pushf fidivrl mov hlt daa sub push add cmp cmp mov in push adc insl das pop nop je mov push aaa cs (bad) jmp mov loop adc inc jle hlt and rclb lock sbb (bad) (bad) decl mov push xchg inc or scas adc mov aaa xchg ffreep add and divl xor cs mov cmpl (bad) (bad) decl sbb stos int3 sub mov es push shlb adc sub (bad) decl dec sub dec jo addr16 imul adc cmp mov das xchg cmc insl adc add call jecxz (bad) (bad) call sub lock add inc repnz mov jl push adc repnz sbb mov aaa cld ljmp sbb aam repz ret hlt sti out hlt xchg mov (bad) (bad) (bad) jg loopne add mov mov mulb mov in in in fwait (bad) fbstp iret insl inc ds sub enter (bad) jmp stos out push adc faddl pop lock mov (bad) in movsl (bad) outsb inc cmp and clc iret inc cltd cmp jmp js dec not ss (bad) (bad) decl push sub (bad) aaa mov adc push fidivl xchg shl jge pusha scas dec in lock aaa aam mov nop sahf inc and inc loop mov xor adc test jge lahf mov jns inc mov icebp loop negb dec sti fildll icebp clc jmp xchg (bad) (bad) (bad) jmp pushf push gs cmp pop push inc fwait add sbb mov scas sbb jns add mov (bad) (bad) (bad) lcall xor xor out jl jl icebp cmp je mov mov scas hlt out iret cs and mov test inc push sub scas out or inc repnz jecxz,pt xchg fs dec es lcall dec imul jg mov arpl (bad) (bad) (bad) mov out jp jecxz jmp sbb movb in pop js stos mov mov lahf in mov std outsl cmpl xchg mov add (bad) (bad) (bad) cld cmp or lods out pop cmp adc in das sahf fcomi idiv roll sbb dec mov dec sbb dec adc out xor clc mov pop scas fisubl sbb enter push ds push stos cmp ss push jl jns jl (bad) (bad) jmp stc mov and inc jecxz addr16 xchg loopne fcoml xchg or clc mov aas (bad) daa movsb iret cmpsb (bad) (bad) lcall push movl insb jne sbb aaa (bad) (bad) mov add cmp scas adc es mov jmp (bad) clc cmp ljmp and pop cmc inc fidivr and loope mov test sarl cmp ficomp (bad) push cmp repz push or cmp (bad) (bad) (bad) ljmp push adc movsb pop sub fildl mov lcall jecxz add jbe cmp (bad) (bad) jmp aam xor add jne push and rorb dec push pop dec mov (bad) push jbe cmp pushf adc xlat outsb arpl pop adc mov cmpsb test xchg clc lcall mov dec xchg (bad) (bad) mov nop mov adc lods xor test push jmp jae hlt lock pop inc test out (bad) (bad) jmp push int cwtl xchg add scas adc cmpsb pushf dec scas lahf ds cs insb movsb loope and aaa pop push add rep inc lock call or ds xchg mov and (bad) pop bound jo add xor loop jnp and fidiv pop lcall std push cld or pop or add adc add jnp push sbb cmp pop inc shrb (bad) sarl test dec (bad) (bad) (bad) call lea push pushf dec call add (bad) mov repnz push mov (bad) jmp scas cld bound gs xlat add sub inc (bad) push add or (bad) (bad) decl bound clc imul daa aaa out add (bad) ljmp and xchg add cmp js mov cmp decl push ds pop jl sbbb (bad) (bad) decl cs mov xor jge dec test iret cwtl jae push aad outsl fsub (bad) into push lods cld mov push and xlat pop (bad) int3 addr16 movsb aad mov (bad) (bad) out mov dec jmp in push xchg xor xor mov pop out jmp jmp fabs pop pop jo dec push lret or pop (bad) (bad) (bad) lcall mov adc xlat xor lock rorb imul cltd push (bad) (bad) fsubl in jg jb dec adc add push clc (bad) (bad) jg test in dec not test inc js fcomps ret (bad) (bad) incl jmp stos and push mulb pop popa fstp cmc adc ret cmc (bad) call or cmp jb cld sub sub dec pop sahf xchg out cli outsb push out fnstsw and mov je fst (bad) (bad) (bad) pushl inc addr16 into sub sarl int3 in ret fwait mov dec leave sbb jecxz push (bad) (bad) ljmp push lcall ss jne jl insb adc dec lret sub dec cmp imul in fldenv and jae fwait out (bad) je imul (bad) out sbb push (bad) (bad) (bad) incl jns inc push xor fist lret xor out enter cmp hlt or (bad) (bad) ljmp pusha (bad) cmp call dec adc (bad) sub shrb dec push ds adc cmp insb pop pop sbb incl pop sahf loope inc jae add outsl push lcall ljmp int3 aam test sbb popf mov and cmc ss decl xor xchg cmpsl jge mov pop in leave sbb xor push (bad) repnz (bad) (bad) (bad) decl fsts adc ret push mov push sub xor xchg inc xchg mov cwtl (bad) (bad) lcall sbb mov nop repz lods outsb push push ds or (bad) (bad) (bad) decl imul pop mov std adc mov aad push and repnz jno test rorb (bad) (bad) (bad) mov xchg xchg mov loop adc out add iret stc add lds sar add dec inc jp outsb cld mov and pop lods aas sub mov negl pop add sti ljmp jp add pop mov outsb pop adc (bad) (bad) (bad) decl inc out xor dec mov mov jmp push das outsb stos mov (bad) jg inc dec rcl ror sbb sti adc push xchg xor (bad) fwait pop fildll jb pop jmp sarb (bad) fisttp push pop fwait jecxz sarl shrl push fist aaa (bad) aam (bad) (bad) mov dec (bad) ss insl fisubl adc and divb aam adc xor je std sub lret adc mov xchg cmp fsubl enter sub inc loop hlt in (bad) ficom cmpsl push inc mov xor cmp enter movsl add in movsb stc mov (bad) out (bad) (bad) (bad) incl in mov je test dec in sbb ja push jo sahf in push out mov mov shr das pop div sbb cs (bad) (bad) (bad) pushl xor jns,pn pop pusha dec les loopne stos cs fistpl sbb out (bad) in (bad) inc adc lods mov sub and das popf icebp mov call ljmp sub scas aam and add ss ljmp lret cmc (bad) mov shll cmp adc das mov and ja add cld mov mov std add mov cli ja pop pop and inc inc in or mov jmp inc out mov sbb xorl fs inc sbb out cmp push ljmp sar adc out in adc pop inc or repnz scas mov bound (bad) (bad) pushl inc xchg mov lahf mov rcrb fld cltd inc add daa pusha lods jno (bad) lcall cmp cmp or dec dec push lret pusha mov pop xchg test (bad) (bad) jmp and cmp cli test flds push (bad) or push movsb fidiv (bad) ret adc push push nop scas js pop push mov ljmp mov cmc mov fsub mov lret xchg adc int3 mov in (bad) (bad) (bad) ljmp aas enter test sar sbb mov xchg mov pop andl lcall in and testl cmp lods add mov (bad) cli (bad) js inc jnp jg pop cmp popa pop pop sahf (bad) (bad) (bad) lcall mov push pop popa or inc push (bad) das adc mov add add ss (bad) (bad) call adc std mov xchg daa xor aad or loope sub pop das cli push fisubl push hlt pop cmp mov icebp cmpsl mov loope test push (bad) (bad) (bad) jmp xorl jb add adc ja push je jp xlat (bad) (bad) jmp out xlat sbb push into sti mov or xchg add outsl daa ljmp inc test jo stos inc aam rolb sub out cmp xchg dec or dec (bad) ljmp std inc sbb out sbb jg jne aad or jg or pop mov jl or ja mov leave sbb (bad) (bad) (bad) out or fisttpll out add out mov scas jnp pusha xor push (bad) ljmp jmp out and in cwtl xchg stos outsb nop fwait adc das adc fmull cli (bad) jmp xor int3 ds jg shlb mov jmp lret ljmp ds (bad) call push jns je outsl dec sbb add ljmp or mov subl cmp mov rolb inc pop (bad) (bad) (bad) pushl inc lahf das sti rorb les adc sbb aas int addr16 inc add adc (bad) (bad) (bad) jle lcall adc adc inc jo pop jb sub incl mov loopne add mov pushl push dec mov jo ja lods push bound adc in sub aaa std call lcall jge insl push aad and pusha or push das out int3 add decl xor lock dec in jmp lods nop rcrl sub add in (bad) fnsave or mov test mov or mov popf jg insl xor je (bad) (bad) (bad) cmp push mov adc mov popa sahf cs dec push aam pop (bad) out cli inc xchg cmp add nop lret mov xor add adc cli (bad) (bad) jmp lods mov lcall xchg mov xor pusha (bad) imul rclb mov in mov adc inc sarb adc jo xor add xchg nop lods incl xchg or sbb sbb mov push movsb dec lds jg gs inc push test jae add imul bound cmpsb out (bad) int3 loope (bad) (bad) jmp or pop xchg inc clc mov sahf xor in sub (bad) call pop cmp fldcw movlps add and popf test sti mov fwait push adc mov xchg jno adc add push mov enter popl mov and out push push sub pop (bad) ja add jl pop callw fmul xor orl cmpsb and je push in pusha ror out jbe pop and jns (bad) (bad) (bad) decl mov sub jnp adc xor xor scas dec and lods mov (bad) cmpsl push clc (bad) (bad) (bad) (bad) fstps ljmp aad repz pop pop stos cmpsl loopne jbe xchg dec lds sub (bad) (bad) pushl cmp xor icebp and mov rorl iret clc out jmp pop pop rcrb mov jmp dec ficom lock cmp jmp arpl dec push test call daa iret repz ss xor sub icebp jp inc rcl cli (bad) call daa mov pop pop jl into fcom cmp sarb xchg (bad) (bad) jmp lds mov cmp inc pop mov dec sub gs sahf sub (bad) (bad) decl mov aam pop aam shr push movsb push adc mov or dec mov push mov (bad) call dec mov repz inc sti xchg scas sbb icebp (bad) (bad) mov aam dec decl pop je lret cli dec xlat pop jp dec stos es out push mov lock xchg cltd sahf adc (bad) lcall (bad) jns (bad) insb sti lret push mov or icebp bound out inc pop leave xchg pop dec mov push xchg inc lcall (bad) incl leave and fisub test outsb subl rorb (bad) (bad) ljmp add out xchg inc stos lahf fcomp loopne scas inc inc je adc inc orb (bad) incl aas jae imull push ret dec stos cmp sub test jbe mov (bad) int mov xor cmp dec xor (bad) decl jmp xor call loopne mov scas out popf xor (bad) (bad) (bad) rorb xorb pop (bad) jno push and cmc mov bound (bad) decl imul push fiadd jbe xchg mov dec loopne inc pop dec and repnz clc fwait (bad) xor stc (bad) mov push fwait or (bad) ljmp ds cwtl in xchg mov fwait (bad) jbe sub xchg call fadd push fstpt xchg inc inc clc mov sbb (bad) (bad) pushl sbb dec xchg notb lea test mov shll imul dec cltd out or aas ficom adc outsl shrb lret js cmpsl and xor movsb enter hlt (bad) jg fs gs test imul mov adc (bad) out mov push or mov dec sub ds sub (bad) pop add pop popa jmp add clc mov dec (bad) (bad) (bad) incl shll pop daa xchg inc adc mov aam loop mov jmp inc (bad) (bad) (bad) (bad) stc add push cld xchg cltd (bad) and adc pop loopne in fdivl push push loope inc sbb sti (bad) aad sar (bad) (bad) jmp jb lcall cmp or hlt imul jecxz (bad) mulb (bad) decl push jp das cmpb sbb inc outsb xor rcl push insl lods out push or ljmp test mov aad dec jae fstpl test fwait cmp (bad) fiaddl pop popa jb xor push (bad) cmc (bad) (bad) ljmp adc xor jne movsb cltd cld cli shlb (bad) aas sub sbb incl mov cmp cmp dec cmp insl jmp orl shrl (bad) (bad) (bad) out inc lahf mov push test or imul cmpsl mov inc jg inc push add (bad) fcomip decl fsubrs adc dec mov or mov sahf mov ds cmpsl sbb add push mov xor (bad) repnz es in add aam xchg outsb (bad) (bad) decl fild jbe mov sahf cs push or push (bad) (bad) (bad) ljmp adc jmp jnp adc outsl push jns pop idivb popf inc movsb (bad) and or call xchg cmpsb push jg push insl cmp jg (bad) (bad) sti arpl sti jne add pop mov or push pop sbb fistpl jae jnp mov lock pop xchg mov inc cmp (bad) aam stos fcomip (bad) call xchg mov lahf mov lcall test (bad) imull outsb clc jmp mov mov mov cwtl clc (bad) pushl mov xor outsl stos add movsb cwtl cmpsl es mov pop jge jbe mov mov push std cmp test push push jmp fstl cmp push sar pop jl repnz clc jbe sub dec in pop lahf test xlat and cmp mov out (bad) (bad) (bad) push mov test fidivrl jae and test cli xor jns mov out outsb hlt cs mov dec sbb lock es into sub or andl lahf jbe and push fs jo xor ja mov shlb mov out dec mov (bad) (bad) (bad) (bad) cmp std jp sarl ds arpl push dec daa add adc lahf xchg out and jns mov dec xor out cli pushl std (bad) out cli das xor xor lea cs and fnsave in xchg movsb leave pop mov mov in in xchg mov ret mov xchg push (bad) decl pop mov insb and and ficomp pop pop sbb (bad) dec aaa pop mov shl cli test push fisubrl mov cld lcall sbb pushf dec call dec ja jg push cwtl lret test fsubrl jg insb cld cmpsl cli ds stc ds jns (bad) cmp (bad) (bad) (bad) lcall daa pop mov add pop xchg movsl (bad) jp call movsl push xor (bad) push stos xor cmc imul xlat mov cmp (bad) (bad) pushl sbb lahf add popf mov adc lret push loop test ucomiss std decl xor mull ret test adc loope addb (bad) dec add mov push dec (bad) repz out jno xchg ja push imul loopne dec std (bad) jmp lods push imul cltd or jge sub jp jmp incl ret (bad) jge inc ds fbstp aam jb icebp or adc std incl imul je pop cmp adc mull in aad xor push push out or (bad) (bad) dec (bad) (bad) (bad) jg push stos xchg lods cmpsb xchg pop lds xchg inc stos cli sahf addr16 jp enter call mov fidivrl sahf xor dec sub pop jle call loope adc (bad) (bad) pushl scas jb mov dec lret jmp out and adc divb rcr or inc jecxz negl xor mov cmp (bad) jg pop ds hlt push or mull xor (bad) inc outsl push dec sbb mov sub out push push roll scas (bad) push or fs xor pop icebp insb cltd push int3 (bad) popf fist pop stos adc mov out add cmp adc jno add add sar inc ss inc mov xlat fdivrl dec dec sahf (bad) (bad) (bad) (bad) pushl je bnd lret and decb cmp test sub mov push daa out (bad) (bad) (bad) (bad) in fmulp repz mov test (bad) adc ret push mov xchg fcomi stos je (bad) (bad) (bad) inc mov lods jb mov sub lds repz xchg adc sub pop fwait inc setns pop cmc decl out sub ja sbb push jns,pt (bad) (bad) fcomip das test es pop mov sbb push jl mov mov (bad) (bad) (bad) cmp cmpb mov and gs xchg movsb in and rcll push fbld (bad) ljmp ja and data16 fildll mov mov pop in (bad) (bad) lcall xchg cltd cmp add cmp xor les mov add (bad) (bad) lcall test fsubl arpl mov test pop push aam cltd in daa (bad) xor mov ljmp mov mov mov xchg out aaa or push (bad) mov adc test push jbe aad icebp (bad) ljmp pop jp jle pop fdivs push dec imul int mov adc mov add call jge (bad) jno pop int3 adc jecxz mov or les mov in mov enter jmp mov xchg sbb jl add (bad) (bad) pushl mov and pop add jmp dec adc mov loope sbb jl adc (bad) (bad) (bad) mov stc scas jnp leave sub (bad) add inc jo stc loopne cli cltd xor pusha push mov rorl (bad) loopne mov fnstsw xor jbe lret xchg into popf push or jnp jno inc dec (bad) adc adc jg pusha cld notl sub fstpt in hlt fwait and cmp fwait sbb xor les dec mov lods sbb jmp (bad) std icebp mov (bad) ljmp pop adc je and stos jnp sahf (bad) mov pop ret lret mov push cli jmp or dec enter sub movsb inc ds ror mov loope xchg daa mov gs cmpsl hlt inc xchg (bad) (bad) (bad) lcall mov movsb adc pop xlat jle mov (bad) repnz inc (bad) lcall (bad) (bad) call fiadd jge inc xor dec arpl cmpl inc sbb lahf imul ret (bad) lcall add jmp cmp or pop mov push sbb sar add adc mov fmul mov push jo mov frstor mov les pop xchg hlt push jg xchg mov das sar xor aas pop stc jg das add rclb xchg sub sbb (bad) (bad) pushl mov shlb jmp mov rol ficomp repnz (bad) (bad) (bad) incl pop fidivr jno sbb das cmp pushf aas mov mov jle sahf sub (bad) (bad) (bad) clc scas into cltd in xor sub jmp cli mov or lret iret in and adc mov adc cmp int pop sbb or ret aaa pushl dec mov (bad) xchg int mov xchg mov (bad) (bad) cmp jg cmpb add (bad) (bad) lcall jmp fbstp cmp xchg cmpl push lcall push loope (bad) (bad) ljmp (bad) mov lea lahf cs xchg push add and xchg mov mov sahf mov ret sub push (bad) (bad) (bad) lcall pop adc test push xchg lret dec (bad) and pushf (bad) push dec dec out movhps sub aam add popf add cmp stos (bad) inc lret pop repz gs test dec dec outsl js mov ja in push sub mov movsb jns adc cmp (bad) or push inc pop movsl in sahf and (bad) (bad) (bad) call add lcall sub mov loop mov inc mov aam pop xchg aaa xlat sbb jno push and pushl mov push test sbb fwait (bad) lcall push fwait cmp ja mov push add mov jmp stos and xchg push dec fnop cmp sbb or add iret dec (bad) (bad) (bad) call pop inc out stos mov aaa push and add inc xchg cmp adc vmovhps lock mov xorb (bad) (bad) clc ret (bad) rcrb mov mov sarl fidivrl (bad) scas add xor (bad) jmp fisubr mov jmp and jo cmp (bad) mov pop sbb dec or insb (bad) (bad) (bad) incl aad xor shr push scas cmp dec mov hlt popf ret ljmp in roll or aad xchg add in mov ds hlt (bad) (bad) std std popa jnp mov adc inc outsb aas push (bad) (bad) inc sahf repnz aaa inc inc repz push dec mov dec mov sbb (bad) (bad) (bad) call loopne (bad) xor mov je xchg fidivl push jp adc stc mov imul pop inc hlt mov pop (bad) ljmp cmpsb mov dec leave dec outsl out fdivp lock out subl loop repnz mov fdivr (bad) (bad) cmp push cmp arpl push test int3 popf imul dec mov aam (bad) lds push or lock loope mov (bad) sar stos and sbb hlt cli mov push decl xchg add ret inc addb cmp js xchg jae inc (bad) xor (bad) mov cwtl mov pop popf lods cld (bad) movsl incb loopne mov jo (bad) (bad) (bad) call or bound lock mov add xor ja or pop xor xchg pop inc test inc sbb (bad) (bad) call ds mov scas cmpsb nop push ror rcrl xchg sub (bad) bswap (bad) jg ljmp mov enter inc lds xor loop popf jo and mov pop push js jae dec sbb mov cmp (bad) aam pop fwait lret push mov mov xor or out mov (bad) dec xchg and inc std sbb lret in in (bad) (bad) lcall rol pop mov fsubr leave cwtl loop fdivrs rolb cli cmp sub inc adc (bad) (bad) lcall dec xlat outsl loope jb icebp fsts icebp ret push dec in mov fidivl push fisubrl pop jg sub hlt mov mov mov aad imul ds jb lods js nop mov cmpsl (bad) jge movsb (bad) (bad) (bad) jmp or out rorl jne pop (bad) cmp pop push dec ret xchg add cwtl aad loopne push sar (bad) (bad) push xchg mov cli cmp adc inc test test gs pop sbb mov (bad) fbld dec mov sahf inc dec and pusha jno outsb sbb lods cmp pop les aaa add jl xor (bad) ljmp mov lret mov cmpb (bad) decl and xor mov lahf push fcomps or out xor mov inc push or (bad) jge repnz pop jl sbb cltd (bad) (bad) (bad) fistl mov lock lcall cmp ret dec call pop scas sbb (bad) (bad) (bad) sti add mov insl jl out pop popa into fldt aaa insb adc push cmp (bad) dec mov sbb mov stos fmulp (bad) sub dec ss outsb xchg push lret pop mov mov jg,pt pushl or and pop stos cwtl push pop mov sbb frstor add ljmp cwtl push add std mov mov cmc xchg js sahf add fnstenv push inc push loopne jecxz sbb jae sub movsb in bnd (bad) (bad) (bad) in cmpb movsb mov inc leave in movsl dec sbb cmp ficoml (bad) (bad) (bad) (bad) cmp inc xchg ficomp (bad) out daa and dec xor adc pop mov incl jns and or (bad) and ret adc inc and push dec insb nop int3 cmp or arpl adc ja mulb jne clc mov inc insl mov iret in clc fcomps cmp (bad) (bad) (bad) ljmp xor je sub or aad fwait cmp outsl inc dec xchg in mov test jno aam call (bad) or aad xor or jmp add fmull (bad) (bad) fbld add loope mov mov stos nop sarb ja fisubl mov xchg mov push aam xor pop jmp xchg aas (bad) xchg arpl cmp jg shll daa pop or jg inc jnp outsl pop dec cmp jnp (bad) (bad) lcall cmp and add inc and lcall clc mov jge push pop inc push clc (bad) int sub ds lcall mov ficoml mov lret fstl out (bad) (bad) lcall mov mov sub fdivrl or xor add ss rcrl incl or sub popa fdivrs xor in sbb (bad) (bad) (bad) (bad) jmp and mov testb leave leave arpl cmp mov stos imul addr16 mov (bad) (bad) jg jp adc js loope mov mov mov scas inc inc (bad) arpl shrb sahf cltd xchg out jo fistpl mov adc mulb (bad) (bad) lcall je dec dec or hlt jno in aas mov sti aad xor mov (bad) (bad) call daa jo (bad) jle xchg test xor bnd (bad) rolb add mov (bad) (bad) (bad) mov sub dec pop movsl out inc (bad) cmp xchg xchg sarb (bad) add lret dec (bad) (bad) (bad) fild push dec bound xlat in fdiv cmpsl xchg jmp int scas jne mov in pop jno test imul (bad) (bad) ljmp sbb ret (bad) hlt or stc test xchg mov add sbb and decl mov pushf xchg jecxz cmp jge (bad) (bad) ljmp dec daa mov aad and call inc dec dec sub pushf mov inc ss (bad) (bad) (bad) call inc loop jno imul mov rcr pop mov in stc (bad) sahf fistl mov clc mov ret addr16 lds sub cmpsl aas out cmpsb popf adc das cli inc push int3 cmp lea mov inc aaa insl xchg call movsb add in outsl pop pop ret push imul (bad) out test sbb in movsl in stos loope dec dec incb lea faddl int3 mov sarl pop xor push outsb ds xchg (bad) xor sbbl mov pop mov (bad) testb cli lcall stc or push stos pushf mov jno adc inc mov xchg fbld imul xchg push loope mov mov cmp add pushl (bad) add sbb call pop sar stos (bad) fistpll mov fisubrl imul jb enter inc test (bad) (bad) (bad) call mov roll pop push cmp or sarb and fisttpll mov mov imul fnsave (bad) (bad) jmp test and inc fwait add sbb arpl dec leave (bad) push cli (bad) (bad) call mov std mov adc aaa or mov dec cld dec scas xor insb (bad) (bad) decl inc add jb imul xchg lds cmpsl leave aas (bad) (bad) (bad) (bad) cmp cmp inc jnp add pop adc paddb pop adc push push mov (bad) (bad) call cmpsb cmp imul daa aad lahf or (bad) xchg test int3 pop cmpsl xchg add sahf (bad) (bad) pushl inc fsubrs or add jmp (bad) fstl jg (bad) ljmp cwtl xchg push out lret add or imul sbb jnp mov lods inc movsb fidivr ds adc cmp push dec xor ljmp mov sub jbe test cmp or inc stc lock (bad) (bad) incl jne dec push jp mov jae jns xor sbb push pop mov aaa std pushl pop jmp xlat dec mov outsl push cmpsl xchg pop ret cli (bad) (bad) (bad) (bad) fcom (bad) jns sub xchg ret out or sarb divl push das (bad) loopne (bad) decl out scas ret (bad) (bad) dec divb or call inc push mov add pop sub pop gs push into cli jl dec enter out frstor (bad) (bad) incl test jl rorl in xchg mov icebp adc enter mov pop cmp add es pop mov mov xor xor ja or lcall xor lds addr16 cld lods fcos (bad) lcall repz ret les inc (bad) inc ficompl pop add mov or and (bad) (bad) jmp xor xchg push adc popf mov and mov adc cmp xor repz and mov jle inc lods push dec xchg dec (bad) jecxz mov ficomp movsb daa xlat dec mov (bad) call xor (bad) push mov pop xchg add (bad) call out int3 adc (bad) incl insl lcall pushf push test xor stos and fistp call (bad) lcall mov out cmp ds lahf mov mov push in jge movsb cwtl ljmp (bad) (bad) (bad) lcall ljmp daa cmp notb push fisttpl adcl (bad) (bad) (bad) jmp stos (bad) or js xchg arpl inc iret cmp inc cs test movsl mov iret adc call std les lods cmp outsl scas jne je pop stos sarl pushf pop push in sbb (bad) lcall repz loope push movsl cwtl or jge inc rclb xchg push icebp pusha pop (bad) (bad) (bad) push ja cld insb xchg xchg push inc mov xorl sub (bad) (bad) pushl push push pop lcall call cmp add orb pop push clc sbb rcrl dec pop cmpl or dec xchg std push icebp lods dec fldl jl or cmp fisubl cli decl das test add scas push push xchg sbb mov (bad) (bad) (bad) (bad) fsts push sbb lds pushf imul in nop lea mov mov ds sahf pop insl add fistpll les add cmp iret cmp or mov test mov jno sbb mov std inc jmp ljmp add fnstsw inc rcl hlt cltd pop (bad) (bad) (bad) inc dec imulb outsl scas cmp mov lods mov seta jo sar lcall pop inc popf cli test leave aaa lock ss dec lds cmp das ret push mov cmp pusha repz adc sbb add or (bad) fbld adc lret mov dec xlat imul pushf les and (bad) pushl inc scas insl push sahf in add inc imul mov (bad) dec mov (bad) (bad) fildll sub iret sahf sbb and mov (bad) (bad) incl in sarl jno fs pop cmp fs adc or push rcrb mov adc jno push lret cli pop std fstps dec pushl push pop hlt add xor dec (bad) sub (bad) ljmp or dec xor mov scas idivl subl lret out mov mov (bad) (bad) pushl xor outsb adc mov lcall xchg stos cld roll (bad) push roll outsl in adc iret data16 (bad) xor sub sbb (bad) fisttp mov lret leave jb outsl dec out ret into adc (bad) fbstp lcall fbstp int jmp inc popf push ljmp pushl popl pop insb insl daa orl popf addl sub lods rcll cld fstps outsb push rep mov (bad) iret mov xchg stc cld pop and cmpsb adc push or (bad) mov addr16 repz push sub inc cmp (bad) je jbe dec lods jmp jmp data16 cltd and (bad) icebp pop jmp (bad) les (bad) call (bad) out inc or add and ret dec andl addr16 push in or push daa push adc (bad) (bad) lcall pop inc in pusha mov out xor push test jae sbb ret mov or (bad) (bad) pushl lea sub out repz movsb or frstor into xor sar mov clc shll ds push jecxz push mov insb inc mov (bad) call push inc iret pop iret jmp movsl je outsb push sarl (bad) scas mov aaa push push inc sbb ret jo movaps cs gs or adc (bad) (bad) call mov mov pop enter inc xchg daa mov (bad) (bad) cs loop mov push jg add pop or cld xor sahf xor sub lock clc outsl mov in dec into add dec call (bad) jg ds popa cmpsb (bad) adc rcr mov cmpsb push sub add inc (bad) clc repnz ret cmp movsb bound cmp (bad) (bad) (bad) jns pop aam fist (bad) push das or xchg ror cwtl mov lcall (bad) (bad) jmp and cmc and mov shl dec jb inc xchg cmp dec or (bad) (bad) (bad) lcall mov lods insb mov js mov push pop mov pop inc lods loopne stos push je out (bad) jge (bad) (bad) jmp dec scas dec and pop popa xor icebp daa and ficompl push mov (bad) (bad) (bad) incl daa dec or je ret mov imul push in or decl cli (bad) (bad) (bad) dec push and xor popa (bad) aaa psraw lahf loopne in add clc jecxz push fwait sbb outsl (bad) decl pop (bad) je inc sub test or sbb mov (bad) (bad) (bad) pushl insb dec ret mov xchg mov stos jbe leave mov mov stos jns ja cli leave xchg xor dec ds fisttpll sub mov (bad) (bad) (bad) jl mov push xchg incb jnp (bad) call sub lods cmp sub popa in sub dec test sbb jmp mov fs jb cmp sub lret nop fsubrs ljmp mov imul iret (bad) out cmp (bad) pop fsubrs or insl adc imull addr16 (bad) cmp ds pop mov lea out cmc out xchg and xlat lcall ljmp inc jb fisubr int3 push lods jo (bad) (bad) jmp test mov movsb lods (bad) inc xor inc xadd xor (bad) lcall xor mov ret push xor jno sub addr16 out (bad) (bad) (bad) (bad) mov inc and call mov cmpsb push add or pop sbb popa hlt addr16 (bad) lcall into mov add imul mov sahf push mov (bad) incl fucomip push call lret sbb gs sbb xor aas fprem or push cwtl sub push (bad) fcomip pushl fwait add jecxz mov cmp fadds lods xchg mov push lret (bad) (bad) (bad) lcall pop (bad) pop lods jp fild fbld push inc xor push pop lea (bad) jg jae fcom pushf in pop nop pop push adc mov shll scas aaa (bad) mov stos scas pop cmc jl int3 adc loopne loop lahf mov pop std or subl adc mov mov and call imul mov (bad) (bad) mov mov push js sbb in jmp cmp fwait mov dec hlt fcmovu jmp dec adc mov sub sbbl jnp data16 pop cld inc scas orl insl clc pop mov ret dec dec jnp cmp out and mov mov and ds (bad) fcmovu lahf stos jb jno ficomp xorb and cltd sahf daa xor mov inc lods test sar add push fisttp xchg inc or add mov fstl popa ficompl out mov arpl out (bad) mov push inc cmp push pushf xor (bad) pushl jmp cwtl mov sub test stos xchg xor flds mov std jmp push out push push and pop mov std pop (bad) ljmp ja,pt orl cld lock and lcall lods mov cmp push cld cmp adc (bad) (bad) (bad) jg adc (bad) fs test xchg sub mov xchg das jno xor lcall lret inc add push lcall xchg mov fiadd stc sub sub outsl xchg out mov lret ja cmp adc adc cwtl mov fsubrp pusha lcall pop add jle mov jne xchg mov (bad) (bad) pushl push xor in jecxz pusha lds sbb (bad) xchg xor in scas pop lods sub (bad) jmp movsl andl les ds mov xor test jae pop pop xchg xor incl arpl jne insl lds aas mov std into jne jb cwtl push mov pop ret sub xchg es insl mov in inc fidivrl (bad) (bad) lcall arpl (bad) fidivl adc lret push xchg ss pop push mov (bad) add (bad) pushl fildl test add xchg or scas sub mov cmp mov (bad) (bad) ljmp sbb (bad) mov adc mov cmp bound (bad) mov inc xchg lahf adc xchg pop daa mov mov testl pop mov mov mov (bad) mov gs (bad) (bad) fbld mov xchg xchg push (bad) repz mov cmp mov std (bad) fucomp daa lods xor xor jg mov and push mov incl jne repz push ja and scas lcall sti jne imul sahf leave mov (bad) (bad) decl nop lcall dec shrl incb dec out xlat int3 mov in inc dec mov lock mov ljmp (bad) (bad) (bad) incl jmp add and dec sbb push push inc jmp gs inc mov ret mov mov adc movsb add xor pop insb adc imul xor mov (bad) inc add add out cmp loop push fs (bad) outsb and cs and dec (bad) out (bad) mov (bad) mov mov dec je push mov imul adc inc jo (bad) mov xchg ds (bad) (bad) ljmp or xor sbb pop jl cmc sub xor fidiv int3 dec out dec push (bad) (bad) (bad) decl pop arpl sub cmc dec aaa dec lea sub cmpsl cmp aam imull or fistpll js test mov pop dec adc xchg add push mov add (bad) call and (bad) cltd mov mov sub lods lahf int3 sub decl mov lods adc andl mov (bad) enter jg cmp (bad) (bad) (bad) cmp rcrb fcompp test push dec fs pop mov adc out lds cs jmp (bad) jle pop push fdivr or jge call (bad) (bad) (bad) fistpll sbb xor jae dec add dec fsubrl int3 mov xlat mov xor sbb fs sahf insl inc scas push sarb test mov int3 lea stc sti test fnstcw aam pushf dec (bad) (bad) decl gs jbe cmp leave fstps pop inc cs (bad) mov push std incl jo pusha bnd test xchg jbe std (bad) xchg stos jp imul icebp cltd jp,pt push sub or mov (bad) sub fwait loope into push (bad) (bad) (bad) call jge,pt mov mov (bad) jecxz ret inc sbb mov stos xor pop sub adc loop xchg cltd aaa cld jle cli (bad) (bad) jmp sbb dec mov push imul js and cmp (bad) (bad) ljmp mov sahf js iret mov ds fmull xchg pop loop subl add inc (bad) (bad) (bad) (bad) call dec movsb xor insl je icebp les aad sub xor pusha call fisttp ficom into push mov cmp pusha std push adc cli (bad) jg mov mov xchg adc dec dec cmp jmp jge adc imul les ret icebp (bad) pop (bad) (bad) (bad) call jnp inc in add fnop and xor push and icebp lock mov cmpsl (bad) (bad) (bad) jmp outsb add dec repz add dec das mov stos sub cltd mov lods and (bad) (bad) cld jl lret mov mov ja xchg and mov (bad) (bad) decl add sahf stos or sarb jmp idivb in (bad) loope (bad) jg jae pop (bad) stos mov xchg jne xor loopne adcl xchg pushf (bad) (bad) (bad) lcall mov cmpsl out es add in outsb or shll inc call enter (bad) ljmp int or mov mov push sub outsl lods add (bad) (bad) mov or cwtl mov xchg mov pop pop add nop faddl inc mov (bad) (bad) (bad) dec xor and js scas nop loope lea inc or (bad) test and (bad) xor sbb xor roll test mov adc ljmp loopne lods push test lea inc sbb in ds adc jp scas inc xchg and mov rcrl fnsave mov sub insb mov cmp jmp pop push mov (bad) (bad) (bad) (bad) fmuls lcall ficoml mov mov (bad) int cmp inc lods inc inc dec mov push and or sub or (bad) lcall lds sarl cmp cmp mov mov cmp out dec sbb (bad) (bad) ljmp movsb mov mov shl sbb inc nop jg,pt fld and popa dec arpl repnz (bad) (bad) decl (bad) sahf ret repz clc and out movsb pusha rcll cmp rorb push sbb enter xor rol lahf cmpsb rol neg mov popf fmuls decl loopne test push adc stos xchg test (bad) hlt (bad) cmp scas adc adc jb inc incl fdivr nop ret ds orl jecxz stc ficompl add cmp cltd hlt inc sub jg mov mov (bad) (bad) js pushf push add inc or push push sti out aad or adc jl or fs inc pop lds lods stos jb add xor (bad) pop imul movsl ds (bad) (bad) out pop pop cwtl test jmp dec cmp rcrb test lret lahf into repnz mov inc ret stos pusha mov (bad) (bad) (bad) (bad) call repz inc data16 hlt pmullw (bad) xchg (bad) mov leave pop rcrl (bad) (bad) call gs test mov jmp cmc cmpsb pop aam adc insl ficomp (bad) (bad) call dec fmulp movb sbb push subl (bad) xchg mov addr16 out (bad) ljmp movsl lcall aam jnp inc jae lock push or pop stc sbb (bad) inc jnp scas push ret mov pop pop mov dec fdivs sbb (bad) (bad) pushl xor adc call cmc pop imul sarl push dec ds out and setp (bad) lcall leave dec pop xchg push jle movsb (bad) xor cmp sbb dec dec sarl inc outsl mov pop mov movsl pop test lcall ljmp adc jno pop or (bad) add test sar aas sub js test decl popa xlat and fsts sbb jl (bad) mov push or fidiv movsb mov test mov fdivs gs jmp (bad) dec pop xchg cmpb mov pop icebp stos loope,pt cmp sbbl inc fsubs icebp jle jbe test (bad) (bad) (bad) call adc cld subb or cld leave inc or lret mov xor (bad) (bad) call push or or push xchg and pop jg or mov xor xorl enter mov ds push enter test jb inc or dec adc (bad) cmp bound mov popf (bad) nop clc scas (bad) (bad) call sbb mov fldt mov fmul (bad) fimull je (bad) push inc (bad) push and push cli mov clts sbb mov (bad) fldcw sahf push push ljmp mov js ds outsb outsb push sub (bad) (bad) jle das cwtl inc out xchg inc std jl mov sahf mov cld push ds movsb pop fnclex (bad) int arpl inc dec add and sbb fs ljmp iret lds cld jmp fldl2t sub loop push adc adc inc lods (bad) (bad) lcall lea jb cmp cmc sbb adc into add xchg (bad) lcall push nopl (bad) fisttpl pop lods sub cmp (bad) pushl jne or xchg aam fcmovnbe pop mov loope mov jecxz loope incl cmc add add push xchg add cltd cmp (bad) pushl pop jns pushf mov lea mov lds or sbb pop lods sbb lcall mov sbb dec xchg or clc inc xchg mov (bad) (bad) fild shlb lods in (bad) jmp xchg jo xor add jle aas push dec lds inc (bad) hlt (bad) lcall mov cwtl xor jnp popf stos popf es adc mov lret out cmpsb mov fisttp mov out cmpsl insl (bad) out cli ljmp mov stos mov movsl jmp pop jle in imul dec sub test outsb (bad) (bad) (bad) incl mov sub pop jae cld cld test dec xor (bad) dec inc fdivr (bad) (bad) decl push lods dec int3 and int3 cmpsl out (bad) stos addr16 or data16 pushf pop pop cld xlat and mov dec inc push or int3 cmp mov sub (bad) (bad) push inc cmp or outsl xchg jl cwtl fsubrs add test enter outsl or (bad) (bad) (bad) (bad) fildll movsb mov jge jp sub std mov xchg in and jl cmp ja (bad) pushl in sub lahf cmpsl cmp ss scas add (bad) decl or (bad) cmp sub cmp ret mov aaa std ljmp mov mov push pusha dec xor (bad) (bad) (bad) fistpl push lahf enter or lock lock fnstcw xchg mov jmp inc xchg test cld cmp (bad) lcall push cmpsl sub stos sbb dec imul das (bad) mov push xor mov jmp loopne int3 sahf pop or mov out mov jmp xchg in xchg movsb aad mov and (bad) adc shr ret sbb sbb xchg (bad) (bad) ljmp (bad) roll (bad) cmp push lcall fimull aam (bad) mov xchg ret jmp add mov aaa jp,pt cmp popa and xor mov xor or push mov dec jmp call add ljmp jbe mov (bad) (bad) (bad) fildll push push dec sbb ljmp sbb bound inc daa lea (bad) call (bad) cltd pop arpl into mov pop inc mov jo shll mov ret orb add sbb (bad) (bad) lcall fcoms xor inc xchg mov inc xchg pop stos inc pusha test les xor mov xor lret clc inc ds enter mov (bad) jnp loope fimul rclb mov cs stos push dec in sbb jecxz decl adc roll gs xchg (bad) mov add (bad) (bad) mov jp push pop sbb or push andl lret sahf pop jmp cmp gs or fdivr inc jno xchg fisub cmc das jo jl (bad) (bad) incl add sub out (bad) loopne mov imul ret pushl cld ljmp mov pop ss imul clc xor inc dec mov jne add (bad) decl loop addl int xor lret xor (bad) (bad) (bad) push push lret sbb int3 lret xchg pop xor test jo dec mov stc insl jle fcoms test (bad) incl cld sarl (bad) lret pushf and cli out ljmp (bad) (bad) (bad) inc loop addr16 ljmp rolb or icebp xor in (bad) jl (bad) (bad) call dec aad mov enter sub mov out aad sahf (bad) lcall stos cmpsb lret inc adc test mov divb inc push cli (bad) (bad) (bad) cmp cwtl lods idivb (bad) frstor xchg ss mov insb imul insb into mov cli ljmp xor adc mov ljmp popf lcall pop dec lock (bad) (bad) decl sbb mov ficompl jae push inc divb pop push pop mov xor and jg dec sbb sarl fmul aaa add (bad) cli (bad) fistpll jle notl imul xor ljmp imul push into pop mov mov (bad) lcall push mov mov sbb loopne and or je out or inc ljmpw insl cld pushl mov (bad) cld mov push (bad) rcrb dec fmul xor sub xchg mov lcall cmp xor (bad) pop lock test mov sti in sarl inc mov lock (bad) (bad) (bad) jmp popl mov divb outsl int adc xchg push cmc dec jge fisub dec push les decl call es (bad) in mov jo mov ja data16 std (bad) ljmp hlt out pop adc bound dec jne (bad) push lods pop cwtl fisttp push stc adc adc ljmp mov (bad) (bad) lcall jnp xchg mov push aas xchg or jge sub push ss (bad) dec pop push cwtl add (bad) jmp mov in cmp xchg adc push (bad) (bad) jg mov iret jnp inc or mov xchg (bad) lcall inc lock dec pushf test jmp repnz jecxz push cmc or leave (bad) (bad) (bad) ljmp idivb and mov ja pop into addr16 jmp in sbb jg or loope mov ds xlat push cmpl cmp pop add test sahf xor mov sub test (bad) pushl stos js dec mov sti push insb jno stc xchg jnp,pn or and xor pop icebp dec cltd push cs lahf mov push cmpsl repnz pop jnp cmp ret pop mov mov test xor dec inc mov lcall ds inc mov jle cmp fwait mov fiaddl (bad) (bad) (bad) (bad) in bound xor inc out setns ss lods mov test mov (bad) (bad) jmp call lock bound jns mov sbb test jns sbb (bad) incl rcll jnp jle out pushf sub inc mov icebp jge into dec jb in mov (bad) (bad) ljmp loope das or lods mov jecxz es aad pop mov rolb and sub decl mov addl enter ds (bad) (bad) (bad) decl add cmovle lock dec out jo xlat movsb movsb pushf cmp (bad) (bad) mov pushf aam test rcrb xchg push push pop fisttp pusha (bad) (bad) mov js dec pop loope mov repz ds (bad) mov scas aad (bad) (bad) (bad) (bad) cli aam or inc rcrb loope sub in mov push rcrl (bad) jge fisubrl iret pop add and xchg cs jns mov mov ds lcall pop mov icebp adc adc pop imul (bad) call dec jae mov sub pop pop mov mov cmpsb push push push or (bad) (bad) (bad) decl mov rolb xor ja movhlps dec dec push pop xchg cld int3 ret push and mov mov decl pop jg xor mov clc ds lcall incl xor and cli add lock dec jno xchg test or loop sbb (bad) lret mov into (bad) (bad) (bad) mov cmp scas push xor pop pop pop and cmp lret cmp (bad) repnz jae (bad) negl or pop or stos sahf outsb ljmp add sub incl mov ja pop sub jns pop mov add clc cwtl adc (bad) (bad) (bad) fisttp stos dec pop test fsubs mov sub imul xchg add incl mov aaa push xor in popf (bad) (bad) (bad) (bad) jnp push xor adc imul (bad) push fs push (bad) into add imul (bad) fcomip mov ret cmc pop mov enter lods push jl (bad) (bad) (bad) jg push ds xor add xchg lea aas cmp out dec dec pop iret lea inc pop rcl dec xchg arpl insb mov ds inc lock decl adc sbb fnstsw xchg push push testl aam (bad) (bad) decl rolb pop icebp (bad) in (bad) ja test jnp bound imul scas jle sar (bad) (bad) ljmp mov lods cmp dec iret lcall movsl dec xor fidivr pop sub cs add xchg mov push cmp pop jmp (bad) mov push loope (bad) (bad) cmpsl lods outsl cmpsl stos or ljmp cmp xor repz (bad) (bad) inc and and jl inc push scas inc (bad) jl aam mov fmuls cmp (bad) lcall mov sub out and gs test push push cmp ja xchg cltd and repz jmp xchg pop dec jnp adc or ja insb mov add (bad) mov out or dec out or gs sahf imul add (bad) (bad) (bad) ljmp faddl arpl in xorl pop add (bad) testb std or icebp jo mov scas sub adc inc aaa in or je,pt mov repnz outsb push sub mov adc cmpsb cltd inc sbb push sub (bad) (bad) dec daa push aaa les dec push out in jmp test push cli lock add scas lret cmp incb mov sti mov test lock (bad) call cld jmp xor inc push dec xlat rcrl jl mov push cmpsl f2xm1 pop (bad) (bad) (bad) incl xchg cmpsl movsl add mov es test les in jmp popa mov clc xchg movsl cmpsl jb push sub cmp cmp cld ficoml es ss dec ret call inc and dec (bad) lcall gs mov clc bound jecxz push (bad) (bad) (bad) lcall ficomp test mov mov mov rclb fistpl jbe or (bad) (bad) decl xchg and dec dec jmp mov dec movsl inc sahf pop pop xchg push out insb popf inc and (bad) (bad) (bad) (bad) mov loopne shrb pop sub sub in movb fcomps mov pop inc push (bad) (bad) ljmp mov push shl in adc mov aam cwtl add dec sar (bad) decl mov push addl popa jnp cmpsb xor repz adc or (bad) (bad) (bad) (bad) jg insb dec inc dec xchg xchg xchg fwait adc push push ds push insb (bad) (bad) (bad) jmp mov (bad) adc pop addr16 out mov stos jbe mov xchg mov cmp popa xlat (bad) popa arpl jne push mov inc pusha pop ret cli popf iret sbb scas jbe push enter fiaddl xchg (bad) (bad) ljmp push addr16 push sub fstl out and xchg push jmp cli (bad) pushl ds daa mov or popa xor mov insl (bad) (bad) (bad) lcall mov into cli addr16 loopne cmp mov or cmc push push jp adc sub dec (bad) (bad) (bad) incl rcrl or push or sbb aam xor push jl pop cli lods icebp cmp (bad) (bad) pushl loop cmpsb lcall xor ss insb sub (bad) sar pushl cmc xchg mov repnz (bad) sbb movsl imul das out mov add pop insb xlat adc mov out mov adc les arpl jno xchg push bnd xchg decl aam xchg orl mov (bad) (bad) cld les add mov jae xchg mov mov fidivrl shrd (bad) (bad) fcomip fwait cmc es fs xchg mov in dec push inc push (bad) xchg add ja pushl imul cwtl cmp push mov push stc cmpsl insl lret ss sub (bad) (bad) ljmp pop and notb and cltd jns lahf lds and inc lods pop repz cmp in mov loopne int fisubr cmp out inc les dec (bad) (bad) (bad) (bad) (bad) out mov daa test mov add and fildll scas push pop inc cmp (bad) (bad) (bad) out push daa and nop xchg inc call cmp fwait mov fwait sub xorl add jae xchg orb push insl (bad) (bad) (bad) (bad) clc mov divl loop test ret aam ja lret jno ret les (bad) (bad) jmp sub cli mov das ror ficomp cmp rcl lahf xor add (bad) (bad) cmp dec xor sub in or cmp mov inc (bad) dec inc std (bad) lcall ds out dec gs push or xor xlat dec mov jbe (bad) (bad) (bad) decl lret test sub movsb inc sbb addps jecxz sti dec push sahf adcl (bad) fcomip scas clc xor int3 bound inc rclb lods nop add out sbb mov imul cli or iret mov inc divb mov xchg sub (bad) lcall fiadd addr16 mov aas cwtl xchg jb scas lods push stos cmp mov (bad) (bad) out cs js dec shll and cmc push mov sti push out (bad) lcall add (bad) ss cmp outsl push lods adc repz inc frstor ljmp ljmp ljmp jg and idivl test (bad) ljmp mov inc ss inc ficompl lahf repnz cwtl outsl mov jle add call out test cs add pop jl sbb enter (bad) (bad) jmp icebp ja (bad) scas sub testb mov mov jb std inc xor sub (bad) (bad) cmp loope xchg mov mov push push fnstsw jne push stos xchg mov fisttpl xor pushl loop (bad) (bad) jmp sbb lods or push sbb aaa mov push dec test into fcoml loopne (bad) incl dec hlt popf ret and jns dec and mov adc (bad) (bad) mov rcrb sub hlt and in test xchg ja loopne lcall add repnz jb scas aaa and pop jo std call xchg xchg push mov data16 loop mov xchg xor mov ja (bad) ljmp sub repz sahf enter cmp (bad) (bad) push test out lods or or shll in fs fdiv mov stc aas ljmp push mov xorl sbb cmp sub sbb (bad) incl hlt add cmp pop push movsb pop cmp mov es (bad) (bad) decl lods ja aaa cmp push dec cvtpi2ps lahf sub scas fsubs je push fucomi std lcall outsb arpl jle mov arpl std add sarb setnp (bad) (bad) mov outsb mov stos std repnz addl (bad) push outsl mov xchg and add pop cmp je push xor in mov mov dec aam sbb sub (bad) (bad) (bad) call ljmp adc outsl and xchg idiv lcall (bad) (bad) incl popf (bad) push pop mov jbe cmpsb out je in or xchg in mov decl into insl push mov xor icebp sahf mov mov jl outsb (bad) and fdivrp (bad) lcall imul pop xchg xchg aam xchg dec out or push jne imul shlb (bad) or pushl sub sub aas jle ljmp stc jmp jno loopne frstor jmp adc and cmc int3 cs je push jecxz cmpsb (bad) (bad) decl pop mov lret daa js ret or (bad) mov (bad) icebp idiv (bad) (bad) (bad) jmp (bad) sbb (bad) jo popa lea je sbb test mov add aaa cmpsl mov lcall (bad) mov adc xchg lcall pop scas push jmp sub call adc adc adc xlat dec sbb add (bad) jmp jne scas out xchg pop pop inc cmp cld push div popf aas sbb call push js bound cli shrb fdivrs add mul shll cld push sub sub mov mov ja daa mov andb jmp cmc (bad) inc jge xchg jg push xor add mov inc gs std (bad) push rcrl xchg loopne decb jp pop sbb (bad) (bad) mov push add pushf inc scas mov fwait or ds clc (bad) (bad) (bad) mov mov cmpsb jns jbe cmp mov (bad) mov out loop test lock push jge lods inc (bad) ljmp loop jl xor pushl adc sub (bad) (bad) ljmp bound pop cmp sub (bad) in xchg push je idiv repnz movsb repnz call mov sub repz xor cmpsb push xchg xchg mov push add (bad) mov jmp stos enter sub ret (bad) (bad) jle std js aam stos sbbb js fst push inc aaa push push sbb adc push test (bad) inc add int3 clc sbb std mov cmc lock cmp adc or (bad) (bad) decl ds inc mov fsubr pop icebp adc xor or (bad) (bad) call mov jb in pop movsb cmp jl jo push dec imul data16 (bad) (bad) (bad) lods in (bad) xchg nop in callw mov mov sbb insl inc mov (bad) (bad) decl adc jmp aas cmp add imul push cli push pusha (bad) xor xor movsb mov insl xor test clc sbb mov mov fldt int mov outsl add (bad) ljmp es push mov es mov mov dec dec aam hlt and ret (bad) (bad) jnp cmpb ljmp int3 aas add dec add pop hlt and in mov cmp ds (bad) (bad) call mov dec xlat inc xchg adc xchg stos scas ds shll and mov aad imull fnsave int3 adc (bad) (bad) call add dec or sub inc neg or pop jb xchg mov pop cmp (bad) inc pop inc dec or cltd push pushl pushf ss stos mov adc sti and (bad) (bad) (bad) pushl dec pop notl dec movsl and add aas add jmp fidivr fdivs jmp cli (bad) lcall (bad) jae aaa aad out lock stos mov cmp loop ljmp loopne mov mov in ljmp lds hlt mov sub mov xchg popa inc (bad) (bad) (bad) jmp dec sbb jp daa int3 ret xor js xor jmp ss jo in mov jnp outsl (bad) (bad) ljmp xorl sar stos push into pop rcrl (bad) mov sbb or insb sbb mov (bad) incl xchg xchg xchg enter mov mov cmp pop dec dec rcr jle or cld (bad) decl mov jno or and push jne out addr16 mov aad jb hlt inc mov and jns or add (bad) call cmp sub mov xchg push sub cwtl mov jne sbb ljmp mov push ds (bad) pushl inc (bad) dec test sbb lcall push stos add (bad) (bad) (bad) jl pop clc xor mov nop adc nop mov sbb dec sbb mov in xchg or jmp cmpsl icebp xchg and fcomps cmp xor jecxz out ja imul pop (bad) jg lcall sub xchg je push mov addr16 xchg mov mov mov fwait in add lret add orl push pop sbb add lea cld jno (bad) hlt aas pop or pusha mov (bad) (bad) (bad) out sahf popa pusha jl sbb sub jbe popf popf xchg int in add (bad) call jmp jae imul adc pop mov int and aam pop xchg (bad) (bad) (bad) jmp mov (bad) stos in push mov das push push out lret (bad) daa (bad) outsl push lret out sbb (bad) mov loopne popa hlt xchg outsb jl mov stc jecxz pop mov (bad) lcall sub loop jo rcrl mov faddl jl push fwait stos xchg mov (bad) (bad) (bad) call fnop mov push adcl mov sbb lods jnp push movsl fld cli fwait (bad) jmp mov pop les add mov insb xchg mov ljmp push cwtl or scas xchg int3 (bad) (bad) jl mov sbb mov (bad) (bad) pushl andl out out sbb mov push jp ja shr xchg jnp push cld (bad) ljmp arpl imul (bad) dec xchg stc adc cmc mov movsb dec add sar (bad) incl push js icebp gs inc sbb push movsb xchg loop rcrb fbstp cmp (bad) (bad) ljmp ss movsb cld shrb xor jp jb gs xchg fwait mov pop inc sbb (bad) jmp adc push xchg push popa dec fdivrl aam add stc xchg loope stos sub lcall fs cmp mov sahf fdivp (bad) (bad) incl stos mov xor push pop fs mov test out pop data16 jmp loope aam pop mov xchg pop (bad) lahf in clc dec mov cmpsb mov or fist jae mov fdivrs je (bad) jns cltd popa (bad) mov mov fisubrl bound sub sti push add (bad) (bad) (bad) pushl and xchg loopne movsb mov or adc dec sub push push clc push lods or lods (bad) (bad) (bad) jmp xchg pop mov stos arpl insl (bad) xor ss pushf jnp mov mov jge inc or (bad) jmp pop dec mov movsl jge pop (bad) jb lcall sahf mov adc and sbb dec notl fsts (bad) (bad) (bad) fnstcw cmpsb or int je and mov mov pop gs sahf movsb das lods or inc push mov (bad) (bad) ljmp bound test imull pop mov mov dec inc lods leave fdivr (bad) (bad) jmp int3 xchg push xchg push sbb xor or into stos add xchg rcll push sub cmp (bad) test ficompl outsl iret mov fcomps mov mov (bad) mov decl push scas jmp test pushf push push lret xchg cld pop adc scas mov mov pop bound adc stc sbb fwait push cld cwtl jae test jne sub pop fsubs xchg loope cltd clc pushl mov adc or mov adc jmp cmp jp pop cmp lahf mov (bad) (bad) jmp bound inc fsubrl jb inc out (bad) cmpsb add xchg mov and mov pop mov jmp test mov adc ljmp jno shlb mov push das mov in inc cmc jge mov (bad) mov adc imul fwait (bad) call adc dec push jle mov (bad) lcall test mov (bad) cmpsl cmp xor (bad) (bad) lcall or stos popa and pop aam std add out xor call (bad) mov bound aaa lds push dec lods inc and pop in mov jno mov jp cmpsl (bad) (bad) (bad) call lahf cld xchg movl mov je rol mov in xchg ja push sahf or cli sub dec (bad) (bad) call jle arpl js cmc mov dec clc xchg aas jbe fbld fwait push jp or (bad) dec imul add mov push (bad) lcall div loopne mov inc loope jb insl sbb add ds cltd inc mov stc divb (bad) jge icebp adc sbb (bad) pop add out or (bad) mov xor push dec sub in pop (bad) cwtl les mov jp test sub adc xchg cli lahf lahf test out decl notl and in push insb pop adc push jle push inc mov (bad) mov fdiv pushf xchg fiaddl ja out mov das in push orl js cmp (bad) (bad) (bad) (bad) stc xor dec divl repnz jnp (bad) or in inc jbe roll fcmove sti ret xor loope (bad) inc ror lock mov das ret pop les (bad) jmp push xor xchg notb cld pop xchg sbb call jmp inc push sub inc pusha adc fcmovnb (bad) mov dec mov les (bad) (bad) jo mov mov (bad) call mov jl (bad) and add sub out push pusha cmp ljmp pop xchg mov cli xorl sbb jge adc out push sar ljmp ror jne mov xchg aas sahf mov inc dec mov (bad) push test je or jns vpmulhw push outsl dec adc (bad) (bad) lock stos adc cmp pop out pop pop lock fbstp pop mov aaa mov push dec inc faddp inc call sub icebp push and ja leave into std or jecxz addr16 gs popf in enter clc (bad) sbb (bad) dec sbb sub (bad) mov and shll mov hlt mov mov aam sub (bad) lcall ret arpl inc jnp sub test cmp out (bad) (bad) lcall adc int clc inc sbb enter add and nop and out (bad) (bad) (bad) (bad) jmp adc and jge das inc mov jbe sub imul dec aad cwtl cltd sti cli jg test mov decb and mov int shrb xchg or (bad) (bad) mov dec push js xchg (bad) cmp js outsl imull jbe test incl cmp sbb add outsb cltd loope loop in test ss cli lcall pop xlat (bad) push ret imul push fwait loope shl push sbb inc dec popa pusha fcoml out (bad) (bad) (bad) decl outsb inc sbb lea jg movsl dec dec sarl jp and outsb adc fbld adc ss in sub and ljmp insb out (bad) and sub out ja loop push icebp mov cmp mov call mov (bad) (bad) (bad) cmp xor mov mov push (bad) das xchg pop jnp xabort je dec cmp cmp push cmp add test lcall mov xchg shr xchg outsl dec jbe popf mov pushf cs cli incl cli jecxz push cmp inc push jmp push sbb scas sub (bad) (bad) ljmp repnz insl mov jbe cld ljmp test mov xor cmp xlat outsl and cld lea mov or sbb pop mov cmpsl inc (bad) (bad) dec cmp inc or add add bound pop ds dec push mov inc mov jbe lcall (bad) (bad) (bad) ljmp jle jle imul dec in push mov out inc dec inc mov cmpsb test add mov cltd lods mov nop mov pusha add (bad) pop (bad) (bad) (bad) incl pusha (bad) inc sub call stc sarb jecxz lods cmpsb test sub ljmp sub jp push in or fistpll (bad) inc in jno inc roll or sar imul lret inc jl loop jp test (bad) (bad) (bad) inc mov adc xor xlat psrld bound sub mov dec xchg dec out pop or aam (bad) (bad) (bad) push andb inc adc sbb test sbb lcall dec mov jb and (bad) (bad) jmp jbe imul push fisttpll in andl daa fs (bad) mov stos sub jmp xchg or (bad) call adc cmp ds movsl stc push (bad) ja or dec arpl lcall and sbb ds pop push (bad) call ds push jp xlat mov ds and iret xor outsl decl xor mov lret iret inc sub mov and xchg xor mov add mov lret xchg lcall pop mov inc push loopne inc orl test xchg (bad) push cwtl ds and das jl sub xchg rclb fbstp (bad) push js lods push add int movsb and (bad) jmp aaa jl das loope adc dec insl imul sub cmp test pop cmpsl aad imul ja popa mov mov xchg jno (bad) (bad) (bad) (bad) call jno mov les enter sti add add ret movl jb cld (bad) call arpl sub ss mov dec repnz jno,pt mov push and lret scas sbb decb xor inc mov or (bad) (bad) (bad) (bad) out pop mov leave sub jecxz fmull sbb nop insl cmp cmp mov mov out pushf pop pop mov push arpl (bad) inc repnz mov inc insb (bad) (bad) dec cld dec into mov cmp xchg sbb or lds sub push xchg adc dec or add dec jp lds cmpl test ds (bad) call cmp ljmp int3 lods cmp mov das lahf push mov (bad) (bad) (bad) fild adc movsb cwtl inc test loop jmp and xchg out negl scas (bad) (bad) (bad) jns xor add mov add push loop add ljmp clc xor mov (bad) int3 inc pop inc clc (bad) xor add xchg jb ds lcall xlat cmpsl cmp inc addr16 imul repnz popa and add dec add jg push jg imul ja sub jle pop loopne lret push sahf jmp fimul cli jno (bad) (bad) mov jbe repz divb adc pusha inc xor xchg out sahf and cmc (bad) ljmp xchg dec loop cld out cmpsb leave test push jle (bad) (bad) out ds fs push stos mov outsl inc jg push nop (bad) repnz mov repnz (bad) (bad) call andl das aaa std shlb sbb in jge mov mov ret or lcall sbb or and jno fiadd sub gs jl lcall daa mov sub mov roll in adc popf sbb loopne jne pop sub jmp (bad) (bad) (bad) (bad) sti mov nop cltd xor mov mov sbb xor or add insl (bad) (bad) (bad) (bad) cli adc fs mov xchg je sub rcrl rcll aaa testb (bad) (bad) ljmp adc add ds out (bad) stc mov imul jmp mov in stos lret out cli lcall or mov pop or jns scas (bad) jmp inc cmp ss fnstenv in dec mov pop adc mov (bad) incl add mov (bad) jg push sti mov clc add sar (bad) (bad) push aaa push xchg push rclb icebp lds ljmp sbb loopne sub (bad) jg (bad) fldenv aad clc mov fiadd rcrb xchg pop popa sbb (bad) (bad) (bad) pushl sahf popf int3 out lret xchg sub jb icebp stc pop je xor xor xor ljmp lods push dec shlb cltd in jae je sbb (bad) (bad) decl adc nop aam push shrb inc xchg fcmovnu in (bad) (bad) (bad) incl sahf rol outsb addr16 sbb add subps pop sbb cmp mov clc (bad) (bad) cmp (bad) cmp sub push je pop sahf fimull (bad) adc sahf outsl int sub (bad) (bad) (bad) mov lret jmp lret arpl jb test inc jmp push (bad) add jge pop mov sarb pop call mov popf jmp pop mov jns test adc mov pop ret (bad) int3 fwait js imul mov (bad) push and sar mov inc hlt sub inc fisttpll lahf je push xor add (bad) ljmp mov out ljmp mov add mov aaa and pop hlt push mov dec add xchg lock out push test (bad) lcall add cld cld xlat mov pop test (bad) (bad) ljmp fmulp inc or mov xor neg pop stc test ljmp add cmpsl rol in flds mov cld cmpsb sub imul inc mov (bad) (bad) (bad) mov and les stos cmc pushf add arpl ret xlat mov std sbbl or add or cmp daa mov cli (bad) jg push imul sub adc pop xchg out ret inc enter ret fs std arpl orl (bad) (bad) (bad) incl bound add in adc fidivl stc dec pop in bound fsts or (bad) decl or sub mov call cwtl lret lahf dec xchg (bad) sbb sbb inc jmp adc sbb int dec (bad) (bad) (bad) jmp dec sbbl pop and adc mov lcall jnp cmp das addr16 (bad) (bad) (bad) pushl roll or nop inc test sahf push sbb push adc icebp popf or (bad) (bad) (bad) (bad) in inc xchg or iret outsl sbb lods mov pop push (bad) dec sbb and xor loope (bad) (bad) fcomip icebp sbb repnz (bad) or nop inc shrb in mov sbb roll mov data16 (bad) fucomip mov dec mov into clc (bad) (bad) (bad) call push and cs and repnz (bad) xor cli lret jmp mov cli add in add loopne insb mov jno data16 jbe mov decl mov mov aam loopne pop mov mov insb sub movsl (bad) (bad) decl inc cmp cltd xor xchg add push movsb adc add pop dec addl iret fxch jne pop adc stos mov (bad) mov stos jnp das in inc js pop clc (bad) (bad) dec icebp jmp push dec (bad) out loopne ss stos out dec mov out lahf mov mov sub adc in daa xor push mov ja test icebp popa std aam insl nop aaa mov mov xchg ret ds in or enter stos or push test cmp roll mov es (bad) (bad) jmp jbe xorl inc jns mov pop stos cmpsl jg sbb cmp push das sarb (bad) (bad) repnz insb xor sub (bad) ljmp cmpb adc imul call mov aas adc (bad) outsb adc jns jnp test inc sbb enter (bad) (bad) decl add jb xchg hlt sbb shr test in loopne movsb aad add add xchg mov sub notb cltd xchg mov sub ds xor mov pop (bad) (bad) (bad) push fsubrl lret hlt jbe je rcrb inc mov inc adc jne mov js pop aam outsl clc pushl add adc (bad) je sbb pop push push and cmpsl (bad) (bad) (bad) incl sbb pop movsb xor daa mov cmc cmpsb push clc cs shlb dec cmpsb and repz (bad) (bad) (bad) jmp call inc sahf lea stc add (bad) sub in int3 stos pop mov clc jnp cmp arpl stos dec pop idivb in repz ljmp nop sub mov test pop jle lods or (bad) lcall pop aam mov mov sahf in adc fdivp out jecxz (bad) lcall pop je jmp dec fcoms cli lods xchg dec jno imul or stos inc lock (bad) lret out jne cmp ds (bad) (bad) (bad) pushl test sub repnz loop adc stos mov gs cli clc popa imul xchg (bad) (bad) jmp inc mov and and inc nop cmp aas xor sarb jae dec mov cmp (bad) (bad) call aad fisttpll push mov cli cmp and jae clc cmpsl test divl and (bad) cld push setnp pushw cmp mov push lret (bad) jmp in shrl aam push add fnstsw and cmp (bad) out xor mov data16 add xor xor cmp push sbbl daa dec (bad) (bad) (bad) decl fs jg jmp ja mov std pop in in stos lods iret out mov add mov (bad) (bad) ljmp je icebp cmpsl incb outsl ret push push and dec lock daa (bad) sarb (bad) (bad) (bad) call dec data16 subb loope sahf cmpsl jno and push mov push jb sub bound inc jmp outsb inc imul rclb sub sbb xchg mov dec (bad) daa in fs (bad) (bad) (bad) mov pop in cmp (bad) leave out (bad) popf pop pop dec or cwtl mov insb mul ljmp cmp jmp push icebp or lods jmp daa push cltd fs insb push xor (bad) (bad) out cli xchg repnz pop idivb push mov shrb mov xchg xchg sbb mov (bad) (bad) cmp sbb movsb ret popf andb mov mov (bad) (bad) incl cld pop in sahf cmp js outsl push aaa lret jne into inc lds scas xchg (bad) (bad) (bad) decl xor int3 popa adc push fisub stos rcrl rcr push mov mov pop fildl adc xchg xchg jo pop or in fs jecxz mov pop pop (bad) (bad) decl cmpsl cmpsl leave icebp add xrelease sar ljmp xor mov jne ljmp stos cltd jmp fist nop or push (bad) push xchg mov nop (bad) aaa pop imul or (bad) (bad) ljmp mov not jno xchg jns ss mov push mov (bad) (bad) (bad) jmp or mov dec ret lods loopne mov cli pushf aaa xchg fstl ret ret into movsl leave jmp mov call dec out sub jne or ds (bad) lcall call cmpsl mov mov mov movsl sub nop jg (bad) ljmp cld xor scas push (bad) ss add pop inc xchg loopne in (bad) (bad) pushl (bad) mov cmp dec popf pop out add int adc shlb (bad) (bad) pushl mov scas movsl or cmp pushf fbstp push push sbb ret xchg sbb (bad) (bad) incl mov xor sbb cs mov test hlt test mov clc pop outsb stos lock (bad) incl push cmp sbb cmp jecxz stos nop jp cmpsl cmc js pop clc (bad) lcall sbb adc adc mov push mov mov push bound out insb mov das test jg lcall ss test cmp pop and jmp xor inc sub into (bad) mov push (bad) (bad) (bad) call pusha sbb stos mov incb insb addr16 mov (bad) in pushf (bad) decl xlat fldl push loopne test test sub jns loop call cld (bad) ljmp cwtl pop push xchg mov cmpsl push cli sub cmp test mov adc ret jg in loope and test lcall xor add (bad) xor je iret and sarl outsb cmp std cmp ljmp ja jp add in icebp sbb shl loope ja popa jge jns (bad) cmp ds cmp sahf mov cmpsb inc mov cs imul cli les std xor inc mov ja xchg and dec or jp fcomip lcall es and add inc sub inc jle in (bad) andps fmul and cli (bad) call push fildl insb mov decl lock js fsts data16 mov imul mov jle sub xchg jo add xor cli nop jecxz jne es fisub cmp ds pop jbe (bad) (bad) (bad) cmp pusha lahf cs je int3 je dec shrb jg add xchg jmp loopne mov pushl int ljmp or inc aas and mov nop addr16 out sahf insl popf stos lock (bad) call out cltd adc add popf cmc push sti ljmp pop std mov (bad) ljmp pop mov push inc addr16 inc icebp sarl rol sub jns sbbb (bad) mov adc int3 mov xor lret jbe xor (bad) jecxz or (bad) sti (bad) out jge dec pusha sub (bad) (bad) (bad) cmp and add and pop inc loop lret pop imul (bad) (bad) fistpll push addr16 cmp jp idivl xchg inc adc push enter (bad) dec cmp mov fnstsw pop addr16 jg popf mov xchg xchg shl mov fcomip lcall test xchg lcall or adc jne hlt or sbb mov (bad) (bad) lcall adc lret loope jle mov pop leave inc pop fstl sahf dec test cmc (bad) inc push in lods jb int scas cmpsl xor sbb icebp mov mov aaa mov fistl repnz mov xorl (bad) (bad) (bad) incl mov adc and out sbb mov test ret add aas int xchg or pop push xor call sbb push xchg jge mov call ss negb (bad) (bad) jg fildll xchg and cmpsl and fisubr jmp sbbl insl mov fistpl stos rclb mov incl fstpt mov adc aas adc mov or push push (bad) (bad) (bad) pushl hlt mov push das sbb stc dec out pop mov lret jb pop cmpsl adc in out jp sbb (bad) jmp fisttpl ret cld ja es push cltd lret (bad) loopne (bad) mov dec popa cmp ljmp mov rcrb push sbb mov stos in and xchg ds jno xchg mov call fnop add mov mov ds sbb movsl cmp repnz inc mov in jne (bad) sbb sahf (bad) push xor jae xor (bad) (bad) out mov mov xchg and mov fdivrp jg sarb (bad) push (bad) dec stos outsl data16 mov mov jmp (bad) call out add dec sbb cmp sub jae lods jmp (bad) (bad) jmp jle je in push push jle lods dec loop arpl or addr16 jmp xchg (bad) (bad) (bad) call mov into aam and call (bad) shrb ds dec cld (bad) call dec cltd test cmp dec cmp mov cltd xchg mov jg fmulp shll and cld jmp jge and mov movsl (bad) call cmp mov lea mov ds jb cmp out or out ss mov ljmp imul pop adc daa xlat mov sub lahf ljmp scas sbb test add mov mov ljmp dec inc js cmp push add cmp aaa std jmp or leave mov inc or mov fdivrl jg inc mov jmp out add xchg loopne (bad) (bad) (bad) call or pusha mov xchg jp mov mov in aam cmpsb aad (bad) lcall inc push add ds les ds std or mov test xchg sbb (bad) (bad) jg push testl push test shlb inc fisubr mov mov ljmp cli (bad) addb shl pop sbb fistpll aaa stos in imul jns std cmpsb into fstps mov out les rcl fs jbe cli test adc (bad) (bad) ljmp out jmp and das das xor sbb push in outsl cltd imul push aas into decl push xor cmp push test int3 push aad loopne pop dec loopne xchg leave adc xor mov (bad) (bad) inc push lret or fsubrs out lcall sti jb xchg insl dec mov (bad) jg (bad) cli add fwait loope stos fmuls inc sar mov insl iret dec and scas mov mov mov repz push popf or xchg and call imul mov cmc dec lods daa insl lock repz jl or push inc loop (bad) jg (bad) jl outsb test or mov push push xor std cmc sbb adc in pop fildll push mov ds push cmc jge aaa inc clc call add mov jae (bad) (bad) (bad) incl jnp dec cwtl das or clc cmp jp fisubr ret jb sbb jmp or (bad) jmp out es adc aaa std lcall stc jle jbe sti cli or jo adc repnz rcll jo pop int repz and mov fisub xor xchg add dec gs and pop or push incl lock mov adc sub popa cmp xchg mov (bad) call xchg lea add add aad ss adc jnp es fcos (bad) (bad) inc inc and sub adc test or loop adc roll ljmp lcall mov enter frstor adc ds test addl sub (bad) (bad) (bad) incl (bad) and out arpl xor and sbb mov outsl je aad sar in pushl (bad) mov rcrl fnsave pop jle jle xchg push sub lcall add jle addr16 jae popa loopne add mov ds fldt sub jle (bad) (bad) (bad) lcall js jne outsb push cmp cmp clc adc jecxz push lcall aam push pop push int pop cmpsl jnp or xor mov cmc cltd push push and mov popf xchg push dec sbb decb aaa das sar cmp not pop es test adc push mov lcall lcall sahf pop (bad) pop clc es nop and clc pop lock lcall jmp cmpsl mov test mov mov std (bad) (bad) call xchg xchg adc (bad) mov aaa pop mov mov xor push pop rorl pop and sarb sbb lret mov mov sbb imul cs push mov (bad) or jmp sbb mov (bad) fs (bad) pushl cmpsb inc cmpsb out nop repnz outsb mov imulb xchg cmp mov mov (bad) (bad) ljmp sbb push push xchg or xchg xor ss mov in push fistl jg ljmp out and sub movl daa in dec lea cmp ds ja repz xor adc lods (bad) (bad) call out dec (bad) aam out pop cmp jb xchg aas mov lret dec adc mov (bad) (bad) (bad) fistp xor loope testb jecxz enter jmp dec fcompl xor (bad) (bad) (bad) ficompl sub add push dec mov loopne push lods jo fxch dec jp insb std inc xchg mov shlb fidivrl cld jg mov pop mov dec cmp inc (bad) fbld lds mov mov mov pop out mov ljmp mov mov fidivrl ljmp sarb mov sub cld sbb xor and (bad) (bad) (bad) mov negl push jl (bad) (bad) xor loope,pn pop cmp adcl hlt in xchg push mov push sbb pop xchg add mov dec add std push jmp lock sub test xchg out sbbb outsb cmp (bad) (bad) (bad) ljmp sahf test fwait out dec sbb push lea not add dec pop std ja orl and push (bad) push push (bad) loop cmp adc pop inc mov in fisubr pushl or and or and add cmpl imul pop test jecxz es jmp cmc (bad) nop dec aas mov adc movsb or cmp jmp adc mov xchg mov scas test or adc sarl pop adc aad not mov clc frstor sub enclu add iret xor aam push rcr fwait or inc test add xchg ja cmp push mov (bad) jmp push adc ljmp dec les (bad) in (bad) fistl dec adc (bad) (bad) (bad) call jb fildll aaa (bad) sahf (bad) adc push sub adc fmuls pop orb push mov mov das jle jg xlat xorl cltd jns and (bad) (bad) incl inc inc push jns call scas jmp das ds popf (bad) or insb (bad) (bad) (bad) jmp fidivrl mov out add push adc nop hlt lock cmpsb inc mov mov (bad) (bad) call sbb and fnstsw lret mov daa xchg inc add push nop mov sub mov push and movsb push (bad) jp scas (bad) (bad) incl push aad jp pop cmpl (bad) jg scas push sbb cltd ja add decl inc cmp mov mov cmp pop push fs mov lret pop shll push idivb ss fimull inc pop icebp (bad) jmp lcallw push or mov imul sarl ss (bad) (bad) call scas mov out movsb pop stos inc push xor (bad) js inc or movsb dec call int (bad) (bad) (bad) pushl out addr16 pop loopne xor xchg jne jb mov cwtl and mov xor inc dec (bad) (bad) call sub add mov and fbld mov pop aaa divb jmp (bad) decl adcl sbb adc cwtl outsl lcall inc int fcmovb (bad) mov inc sbb lods ljmp mov (bad) (bad) pushl cltd es push sub xor jl inc cli cmp (bad) icebp lahf nop stc jnp adc (bad) (bad) (bad) in fidivrl or mov loopne push dec je ret xchg or (bad) ret in jne dec rcrb add mov cld lahf arpl (bad) outsl das xchg pusha xor pop (bad) mov mov jecxz xchg call and hlt mov call and insl mov jo cmpl (bad) divl jne pop es mov fsubl (bad) push sbb jl push push neg (bad) pop decl clc inc cmp cmp ds or sub repnz (bad) (bad) pushl sbb xor mov rclb adc dec in dec pop mov (bad) (bad) (bad) call addb xchg mov (bad) pusha jg cmpsb jge (bad) imul dec cld dec cmpl out sbb pop sbb icebp inc push cli int3 mov sti test adc in inc popf adc fildll adc popf movd xor cli (bad) lcall mov xchg xor mov lret (bad) popa xchg and xchg (bad) (bad) pushl mov mov xchg jno push lret pop stos inc (bad) xchg outsl mov dec and (bad) (bad) (bad) dec add in loope push jns mov sbb lods movsb xchg stos fs mov (bad) lcall fadds xchg cltd mov sub sub xor mov lcall adc mov xchg pop jae (bad) (bad) (bad) decl (bad) nop outsl dec mov cmpsb mov lret mov in xor in into (bad) (bad) (bad) decl xchg or decb push out in and aad jno pop fmull test (bad) lcall pop jae xlat data16 cmpsl push pop (bad) fldenv out repz int3 jnp aam mov (bad) incl mov or loope or data16 pop adc in inc (bad) incl pop or int3 int add popl mov test aam jns ds call int cs lcall mov into cmpsl out mov ret mov imul jg call repz adc mov addl cmp sti out xor (bad) lcall pushl arpl jecxz pop fidivrl add cmp iret mov add push (bad) call mov out cwtl dec aas sub sbb dec dec aam cwtl add (bad) (bad) clc dec bound jo adc sub lcall pop or or mov xchg push cltd mov cwtl jne xlat sub (bad) push sti mov hlt push int push pusha push cmp lea mov decl jl jp outsl sahf sbb (bad) in jae aam pop in lcall lds cmp and dec hlt pop sub loop dec aaa rcl popf mov scas xchg in scas mov (bad) (bad) ljmp mov sbb push lcall test or orl leave mov in repnz (bad) call sbbb outsl (bad) decl jmp mov popa lahf je dec insl mov std inc repnz int3 loopne rcr mov dec das mov rclb (bad) dec popf orl sub bound stos stc adc lock fwait (bad) test and inc push sbb inc inc (bad) mov (bad) (bad) jmp (bad) xchg cltd mov dec call ret or pop scas push jge (bad) (bad) lcall jbe ret jmp bound addr16 or nop push jno ljmp aas xchg dec cmp mov cmp pop sahf test dec xchg cli xor test lret jl mov jg or sbb sahf and sub loopne xchg ds shrb (bad) iret test ds (bad) (bad) ljmp pavgb cmpsl setle xchg pop bnd imul xor jg (bad) pushl leave pop lds ljmp mov int es and (bad) (bad) (bad) call jns mov ret (bad) hlt enter xchg adc shrb fs cmp (bad) (bad) inc idivb sub jp xlat int inc or dec aad fstps std lds mov inc decl mov lods jo cwtl add fld decl (bad) std movsb negb pop (bad) (bad) (bad) (bad) cmp lcall jl adc mov pop aad push or fadd sbb (bad) (bad) (bad) pushl or ds mov popf or inc mov test inc xchg inc mov sub ljmp cli mov (bad) jno jl test jo push push shll cmp lock (bad) (bad) jmp pop in outsb add jbe outsl xor insb xor mov add cwtl aaa lock jg jl cmp (bad) (bad) mov sub mov add dec xchg jg popf fstps jl out outsb jmp inc (bad) out clc (bad) aas pusha xchg push pop sbb lock mov cmp push lcall sbb pop sbb cmp dec xchg mov mov std ljmp gs bnd ljmp int aas push jg push push inc cld into push std (bad) shrl cmpsl xchg cmp insb pushl add (bad) (bad) inc outsl pusha insl xchg pop mov adc adc dec mov sbb inc (bad) jbe (bad) fcomip push mov sub frstor pop sti pop push push or ss (bad) (bad) decl cmp cmp ficomp test mov lds cld (bad) (bad) incl in outsb sbb inc push jno jmp push in pop sub out repz jg std pop xchg cmp or dec and xchg and pop (bad) (bad) (bad) pushl and std adc mov in not mov cmp pop lds arpl adc int3 adc (bad) call mov cli subb mov ds xlat pop cwtl outsl sub jge (bad) (bad) ljmp xor fnstsw cwtl xchg xlat loope jmp lods sub pop ss incl pop les push in jg dec ljmp mov (bad) (bad) jmp fmulp sbb (bad) cmp add std cmp ret cmp mov mov rorl call loopne das sub iret push mull jbe sub mov icebp test (bad) jmp mov js and std (bad) jbe mov (bad) (bad) (bad) (bad) jg lea pusha mov das mov inc imul pop inc flds rorl (bad) (bad) decl mov pop xchg sbb mov sbbl pop sahf (bad) call mov int jmp and ret jnp mov adc (bad) (bad) (bad) incl jge mov sahf push outsl xchg dec pop jne pop inc ret in cmp jb (bad) lock je arpl jbe mov push xchg or adc add jg (bad) call mov mov cmp or pushf mov or fdivr (bad) (bad) pushl leave pusha sbb xchg xorl mov es add cwtl xor stc inc enter ljmp mov cwtl mov jnp test pushfw mov jge cmp (bad) (bad) incl inc out out jo (bad) pop cmc and scas sbb ja repnz xor and mov lret and inc push mov mov adc (bad) (bad) (bad) sti outsl cld inc jnp imul xor adc xchg cmp in or (bad) (bad) (bad) (bad) cmp cmc dec leave xor shll sbb mov repnz dec pop sbb cmp scas (bad) (bad) (bad) decl xor fstpl outsb icebp add mov scas (bad) iret pop fmul sti in cmp lods mov pushl (bad) jnp mov add sahf pmaxub (bad) ljmp sahf push push inc jl insb pop xchg test sub (bad) (bad) call sub and ret jbe rol xchg jne sbb jg push sbb lcall aas js ret xor testb mov mov decl adc (bad) sahf push or (bad) mov sub cli xchg mov mov jnp sbb push push std mov js xor out arpl (bad) cmpsl (bad) xor out pop mov inc callw add lods sti sbb add (bad) (bad) (bad) jmp mov les pop clc popa jge aam es or jl pop adc loopne (bad) (bad) call ficompl inc dec push test dec cmpsb mov inc mov adc pusha sbb jmp test rolb fisubr pop roll inc inc inc repnz jp insl mov xlat ret (bad) (bad) (bad) (bad) sti pop inc fcompl dec push adc push ds add stc inc leave mov pop xor std (bad) (bad) lcall push xlat rorb sub sti stc scas jb rcr sbb (bad) (bad) (bad) mov jmp orl sub mov aas ret and scas and clc (bad) (bad) pushl lahf xchg iret cmpl sbb fidiv mov popf pop and fiaddl (bad) (bad) mov imul adc lds shll shll lahf stc inc or call scas dec mov aam mov jg (bad) arpl push pop scas out mov cmp pushf xor sub mov (bad) (bad) jmp sahf mov cmpsb inc mov mov cmc add adc aas shrl dec sbb mov cmp stos xor pop out imul (bad) (bad) call (bad) or scas sbb sbb xchg cmp movsl or add popf rcr (bad) (bad) (bad) incl sub dec push push insl jl pop push push outsl stc sub out fsub cmpsl clc mov fst fldt cmc and insl inc xchg xchg push (bad) aaa negl pop lahf adc or (bad) (bad) jmp test enter jbe adc fs mov data16 ret jnp pop xlat aad jmp add jnp cs fstl jne mov add lret out (bad) jbe sahf out call (bad) adc or stos sub (bad) jg mov jnp xor lahf xchg cwtl loope sahf xor loope mov lock (bad) (bad) (bad) jmp imul (bad) push add cltd sbb and test mov mov (bad) out mov push fsubrp mov mov nop push cmpsl inc sub inc repz test sbb jp fimull dec int fnstenv xchg push (bad) call cli int3 addr16 lock stc bound movsb stc cld push lcall ds (bad) (bad) push push hlt lahf cs std cmc push aam lahf push xchg sub std and mov adc (bad) cld (bad) (bad) pushl call cmp mov scas adc arpl popf jbe dec hlt imul jno push rcr inc std cmp cmpl adc or jge enter pop enter negl nop hlt dec popf int sbb (bad) (bad) call xchg ret sbb ja int3 pop jle xchg ret mov push push jl push mov (bad) decl push inc ret shlb sahf lret les xor mov pop pop std push inc sub fnstenv outsb push xchg push cli push lcall xor (bad) into xchg (bad) (bad) (bad) call ret mov bound inc cmc adc (bad) cmp sub out lock gs fwait lds (bad) std cmp xor ret mov sub jmp inc gs popf mov and (bad) incl in pop sub sbb aam jb mov or push mov pusha pusha (bad) (bad) ljmp cmp test xor out push add daa adc and jmp add (bad) (bad) (bad) (bad) (bad) mov lds xchg or je dec jns leave mov int3 in and (bad) pushl dec aaa dec xchg pop mov dec mov mov xchg jo movsl mov into push insl lcall push sub in jge push loop or stc push arpl shl mov mov dec jns outsb cmp or jmp pop pop (bad) scas dec hlt popa pop dec dec test pop push (bad) dec (bad) ljmp adc addl cmp dec and outsl fcoml pop mov mov dec pop (bad) (bad) (bad) lcall jno sub out iret and lods mov pop (bad) int3 dec fwait insl and (bad) (bad) (bad) call xchg ss mov mov cmp iret add push lahf int3 and (bad) (bad) jnp ror cmc pop out (bad) repnz and mov xorl mov add sub cli mov push pop data16 lret mull hlt xor mov xor (bad) (bad) (bad) mov fmul xor sub fldenv leave int cli push insb imul (bad) (bad) (bad) (bad) cld mov movsl mov cwtl or cmp xor inc sti mov cltd jae (bad) push fdivrs mov push push (bad) (bad) (bad) call iret jmp adc ds xor rolb (bad) pop fidiv mov outsl sar (bad) decl cmp ljmp mov add (bad) dec add or inc dec (bad) in (bad) jg cmc inc lds add adc rcrl xchg sbb in hlt or sar pop xchg inc stos rcrl sub xlat xor jns test jns icebp (bad) jg daa in bound fdivrl push jecxz jbe sbb (bad) (bad) lcall push sub decl dec scas jne in enter sahf mov cmp sbb (bad) ljmp clc js mov add loop lret inc jno hlt push pop lods push (bad) dec nop mov mov mov aaa xchg adcl dec cmpb push out add decl pop sahf fmull loopne push subb data16 xor cli (bad) (bad) (bad) mov movsb add (bad) stc mov data16 inc nop sub inc cmpsb in cmpsl cli out bound (bad) mov or fcoms sub out (bad) (bad) decl inc fstpl test mulb jne stc xchg scas rclb popa scas iret inc cwtl out (bad) (bad) fcomip stos and cmp in pop ret fadd in mov sbb lods sti (bad) (bad) (bad) pushl pop sbb sbb adc imul or orl jp mov cmpl mov inc nop test jo push jae pop mov mov aad xchg mov arpl push mov sbb cmp cmp (bad) (bad) (bad) mov roll dec pop pop jne dec mov mov add cmp (bad) in jb dec lock pushl adc jno leave push scas fildl scas into int mov (bad) (bad) (bad) (bad) in outsb mov add data16 mov adc push push dec pop outsb dec mov lds xlat pop insb jmp sbb sbb mov rolb loop mov test dec inc mov dec dec cli (bad) cmp ds xor sbbl call scas xchg xchg inc in in push mov sarl ret cmp incl mov dec fxch and push call add (bad) (bad) jg jbe sbb fcompl clc add mov ret (bad) (bad) (bad) incl fidiv push loopne fwait cmp (bad) dec adc push jl test cli xor int3 pop add xchg and adc sbb mov in pop (bad) sbb inc push inc adc in jg aad lahf push pop xchg mov test mov cs out mov push ds jne,pt fisttpl cltd lcall adc bound mov loop sub lcall pop jg stos push mov add loope (bad) call mov test cltd pop adc mov cmp mov sar decl or mov icebp stc dec stc sub sbb test je ljmp pop cmp push cmp in or jnp dec xor enter insb lds or cmp (bad) (bad) (bad) mov pusha jne cmp pop mov insl scas into xor test repnz pushf jl repnz test mov (bad) ljmp ret push insb jnp adc lret arpl lahf (bad) or dec adc push xchg ss dec (bad) mov (bad) (bad) jmp and and pop pop pop jecxz and adc lods cmp or leave mov (bad) decl cmp fsts ljmp jp ret mov ss iret repnz jge cmpsb sub adc mov pinsrw outsl fwait sti (bad) (bad) ljmp mov push aam out jl andb stos mov mov sbb popf mov mov outsl es test or mov or into pushf (bad) (bad) (bad) call fcoms ror ret lcall hlt push inc enter (bad) fucomi adc cltd sahf (bad) (bad) (bad) jmp sub gs cwtl out jne push in sbb adc add dec outsb jb fldt push lret dec (bad) (bad) (bad) pushl cmp push jne (bad) popf xchg xchg test outsb dec clc sbb push xchg xchg rcll repnz (bad) (bad) (bad) (bad) lock out insb test adcb jbe push xor dec addl aad (bad) (bad) dec mov jno ljmp inc in push xlat jge lea test (bad) cmc adc inc movsb cmc jmp push dec xchg fisttpl ds call std pop xchg jnp je dec push js add loopne arpl push xor add mov sub and decl push sahf scas dec dec and lret push repz cmpsb jnp lret and lock lcall or sub test roll cli jmp ds jbe lcall call and lcall jmp (bad) jno stos fucomip mov adc aaa pop ret pop cmp cli xor test push movsl push leave ret in cli or sti into jne iret popa enter aas push insb jbe adc dec cwtl xchg insl sub aam add push mov jnp xchg add (bad) (bad) incl stos popa push and inc mov daa ljmp out cmc jo cld mov adcb (bad) decl or cmp shlb push out sti jb xlat (bad) (bad) (bad) jmp (bad) sti cltd (bad) sub mov lds fisubr imul test hlt aaa imul cwtl repz xchg sub cmp (bad) divb cmp sbb int push pop mov xor add jmp cmp xor lahf aad loopne into pop cmp lcall xchg jecxz icebp test jmp loopne in pushf and cld jmp aaa shll mov push adc (bad) gs cmpsb xchg lds ljmp adc sbb push and scas insb add jmp fldcw push lock dec das sbb mov (bad) ljmp jl lahf push in or pushf lahf orb mov cltd ds test mov lret mov adc shrb out loopne (bad) mov popa inc sub ljmp (bad) jne data16 test jnp in pandn imul mov (bad) push test cmp push aas (bad) mov fbstp (bad) imul jno dec (bad) (bad) (bad) incl psubq jge push and sbb cmp xchg add xchg call sahf addr16 enter gs flds pop or lcall push decl cwtl rcrb push (bad) fwait adc out inc xchg stos sbb jae (bad) (bad) decl out sti xchg sarb xchg or scas xchg cmp out dec test xor sti mov (bad) (bad) cmp pop fwait sbb mov jg adc and fstpt lcall xchg lock push sub jg sbb and clc (bad) dec mov pop add daa (bad) (bad) incl mov cmp add and add sub sbb push daa jnp pusha or add pop nop and (bad) (bad) (bad) fcmovb add or imul mov in ret js (bad) ljmp jge test movsl xchg push or in ficom cli (bad) ljmp add cs mov das xchg push hlt pop xchg or daa test (bad) (bad) ljmp ljmp push loop stc into in mov jg xor stos in sbb (bad) mov gs xchg lahf outsl xlat dec pop mov push mov fcomps jae sarb cmp rcrb into xchg out lea (bad) call cmc inc mov add repnz ljmp push mov and add in cmp jo dec push stos es fbld in fcom push and add adc jge insb (bad) (bad) (bad) incl jns sub sub into jle js pop jge cmp jmp das dec cltd ds inc dec (bad) mov fcompl test dec push pop lock (bad) jmp (bad) aad clc ja xor inc (bad) fiaddl rolb adc (bad) (bad) (bad) (bad) lcall or in xor mov mov lahf fs (bad) (bad) decl dec (bad) aas adc and icebp (bad) rcrl ficom dec adc mov incl cmp cld sbb add xor mov (bad) incl ficomp jno mov xchg sahf mov pop (bad) loop ret mov push (bad) repnz cmp data16 (bad) call mov fist ja hlt mov les (bad) decl (bad) (bad) jbe jne adc aam pop add mov dec fcomps int3 or stos addr16 fsubs lret test loopne xor cmpsb (bad) jmp call xchg xor (bad) fld sarb (bad) loope ljmp movsb mov popa mov clc ljmp and lock inc sbb (bad) (bad) (bad) pushl imul add dec push pop sbb sahf ds pop movsb out fsubrs cmc (bad) mov cld pop pop (bad) ss fiadd jl fwait jno push add (bad) (bad) decl enter pop loopne ss (bad) lods xor stc sub jge and dec sub xlat mov (bad) incl push inc (bad) js call adc (bad) test xchg mov (bad) (bad) lcall call push dec ja ret fsubs mov arpl xor mov (bad) incl stos add mov jl stos cmp adc or mov ss (bad) incl push jl out test jge popf cmpsl call leave push pop idiv (bad) decl mov xorb in popa stos out stos adc popa cmp and adc add mov lds or and cmp mov dec jns lods inc adc xor (bad) (bad) incl pop xchg cld js mov inc and bound (bad) mov scas sub iret incl (bad) jg pop es hlt mov or call dec push scas xor aam inc sti lods test ffree dec scas mov mov jp lret aam decl lock xchg jae sbb mov mov adc loop (bad) (bad) (bad) call lcall insl fcoms pushf fwait (bad) jg mov pop aaa jo pop inc std or sbb push inc push ds mov ja or (bad) jmp mov stc xchg out aaa pushl jl inc in mov (bad) imul and (bad) (bad) call jns mov cmpsl jb mov es pop rcrl mov jp mov xchg push (bad) (bad) (bad) jmp add repnz sar mov pop popa push imul mov inc cmove pop lds adc scas cli (bad) xadd sub push dec aam fcompl incl pop ss scas dec jmp lock mov mov mov cmc jmp xor sbb mov sub mov mov in outsb bound (bad) gs (bad) jl ret or popa adc pop les std mov push push adc pop fnstsw push hlt ljmp add pop dec xchg lock and mov (bad) (bad) (bad) fnop add ss in xchg xchg mov insl push mov cmp mov out inc push and decl frstor xchg jno and mov mov pushl ds nop lock outsl ror push pop dec stc sbb pushf xchg rclb (bad) (bad) (bad) decl lods fwait int outsl std fiadd fisubrl into icebp and push sub arpl mov inc jo push add (bad) sti push xchg loope dec cmp xor mov (bad) jmp add cmp insl xchg imul xchg imul jmp add enter cli sub out mov (bad) jg push cmp subl arpl mov stc (bad) mov sarb lds shrl addr16 lock pop fadds sarb dec dec add push outsl das pusha ljmp (bad) push loopne into xor decl mov imul out (bad) sti jl and (bad) (bad) mov push mov push daa (bad) sub aaa inc je add imul push cwtl and mov loop mov pusha cld popf adc aad les push das push (bad) (bad) (bad) inc pop data16 (bad) popf cmp js loopne out cmpsl xchg push xchg movsb mov push ret mov outsl mov hlt aas pop mov xchg push nop sbb pop imul movsb xchg lea pop scas and scas imul xor out iret pop add pop and xchg jno sub (bad) (bad) incl inc fbld mov lods jbe mov push neg cmp incl push aas repz lret push (bad) (bad) (bad) call sbb je out in stc sub mov stos push sub push push pushl dec mov (bad) (bad) pushl adc lods add popa out insl xor test cmpsl sub fs and sahf or in or popf stos in ljmp mov lcall ret ret clc insl mov push into mov sub xchg mov inc mov pop jns push aaa mov xchg pop mov cmp (bad) (bad) call dec push adc aaa pop or mov lret shr xchg je outsl (bad) jp add (bad) pushl sbb push pushf push pop fsub add push sti js insl sahf adc (bad) (bad) (bad) jg xchg loop mov mov cmpsb sbb lds or inc inc jle cwtl mov loopne or scas (bad) (bad) (bad) jmp lret xlat sbb call cli mov add mov mov dec stc fwait jns (bad) jmp add sub les clc lret ljmp scas xlat and or pushf sub flds mov nop pop cld jg (bad) inc push sbb mov ljmp lods dec addb cmp je add (bad) ljmp ljmp in push inc xchg fdivs loope add enter mov mov lea add ss push ret (bad) jmp sbb negb xchg dec faddl add sub (bad) jp ljmp mov jp lods mov dec and in adc loope (bad) dec mov aaa ja add jae jne jmp bnd mov cmp or (bad) mov lods nop jg mov cmp mov or cltd add jmp lcall add scas pop cmp pop rolb dec xchg cmp int int3 mov cld (bad) mov sarl and xchg xchg pop orl (bad) in lock loop xchg cmp mov fistl repz or push dec stos nop mov pop fimul dec jp sbb sub shr mov insb cmp mov (bad) (bad) (bad) lcall add rcrb (bad) es ljmp jle scas add stos (bad) (bad) (bad) lcall xchg daa dec mov nop fwait dec jno,pt out out js cmpsb push mov ljmp inc inc xchg lret adc ds adc xchg clc pop xchg jge pop dec test (bad) (bad) (bad) pushl test (bad) mov mov ljmp adc add jmp sti (bad) dec xor and lret pop bound (bad) mov dec push lahf loop (bad) (bad) ljmp sub (bad) dec out mov (bad) push scas in popf cli cmp push ret (bad) (bad) (bad) jmp or xchg adc and int3 rcr pop or push in pop (bad) (bad) (bad) call nop gs xor push bound or icebp imul dec mov and cmp (bad) (bad) (bad) pushl add popf dec jb mov aad lret or shll jns fs or (bad) iret js loopne call rorb out pusha pusha xchg leave addr16 pop jge (bad) (bad) (bad) fcomip cmp push mov xor pop mov icebp add cmp (bad) jmp cwtl iret push imul cwtl cmp lcall push or cmp (bad) (bad) ljmp addl fistpll rolb mov or scas and movsl and (bad) ljmp xchg xor dec les jbe (bad) (bad) (bad) jg push lods lahf add sbb mov add mov jb cli hlt fistpl cmp and mov sub cmpsb call inc dec std hlt jge mov (bad) (bad) push jg push sbb mov in xor or out out lcall js dec add push scas push sub insl fldl (bad) (bad) ljmp ds push inc sti push divl cmp xchg in daa hlt nop arpl lcall hlt lds sar pushl pop push sub lahf nop sar xor pusha mov enter (bad) (bad) ljmp cli mov pop mov inc push js (bad) fucom arpl cmp fisubrl cmc (bad) fldl jle fidiv pop movsb ja (bad) (bad) (bad) fistpll xchg mov (bad) fsub lcall jle insb call lcall mov inc outsb (bad) cwtl pushf push cwtl fmulp mov pop nop push ret jp mov jg add lock (bad) (bad) inc xor test xchg xchg jp xchg add mov int3 or dec mov movsb aad pop icebp push clc jnp lea ret cmpl call pusha cmp push (bad) (bad) (bad) call addr16 xchg aad inc jp nop or or pop sti fnop cmpsb sahf cmp scas arpl xchg add (bad) ljmp xorl pop iret aas pop mov bound enter outsl mov mov iret hlt test push mov (bad) (bad) (bad) (bad) cmp mov (bad) test insb imulb add add clc js push xor cmc (bad) jmp push int3 sbb mov fcomi mov fdivrs pop cmp (bad) (bad) inc push add insb mov ja mov adc cmpsl xchg add pushf and lds cmc ljmp mov cmpsl jmp aad pop add icebp stos daa data16 mov imul or test outsl (bad) (bad) (bad) incl rcrb dec pop mov or jp scas stos xor add (bad) iret xor sbb (bad) mov xchg dec and arpl cmpsb adc mov (bad) (bad) (bad) mov mov (bad) mov dec bswap in jbe jp jae or (bad) (bad) (bad) (bad) js sbb push not push sarb xor sbb xor arpl mov in (bad) (bad) lcall les or and xor adc jo inc jb cmp jns dec nop and jae (bad) mov push shrb les jbe test clc sub adc inc mov push xor jl cmp or je jg ljmp das insl cmc inc popf stc paddd insb in sub outsb add stos xchg xchg test add pop mov mov xchg sbb negl (bad) (bad) (bad) lcall pop gs cmc aad fcomp mov test lahf pushf in xlat sbb (bad) jo,pt (bad) (bad) (bad) (bad) cmp ret cwtl rcrl sbb sub xchg enter rcll fisubl mov lahf jl mov lea (bad) lea cmpsl push inc ret or in out dec cli (bad) (bad) incl retw call in cmp mov sbb and sarb xchg fcmovnb mov xor xchg cmpsb mov xchg pop inc or push mov jle or pop lock cmp arpl mov (bad) (bad) (bad) lcall inc sub js cld (bad) enter mov pop fcomps lret cmp rclb mov pop leave pop push pop pop sub ja mov xchg daa cs jg jne cmp lods sub adc pmaxub pop icebp (bad) jge data16 pop pop ja stc dec cltd push out adc cmp jg jb mov (bad) (bad) (bad) mov adc mov ficom enter aas and andl adc inc lcall (bad) pushl or fwait pop cld push jo in stos jmp add jae sbb push test (bad) (bad) (bad) (bad) call jg add inc hlt mov movsl lcall jp mov xorl (bad) (bad) dec shrl shl sub out rorl (bad) repz lods fwait ja adc adc decl push subl ficomp out add xchg js mov xchg hlt add pop inc or ficoml ja,pn int3 dec out test aad lea ja mov mov xlat dec and cmp (bad) (bad) or insl gs (bad) (bad) (bad) incl xchg inc movsl add or adc (bad) cmp popf xchg xchg mov pop (bad) incl es push scas incl sbb mov (bad) incl mov ficomp mov pop dec jl xchg mov (bad) (bad) jmp mov dec jae mov lds movsb ret bound pop test (bad) lock fwait jg dec jae (bad) (bad) (bad) jmp rolb push cltd scas ret clc stos (bad) sbb gs aam in ss sbb xchg adc lock ljmp movsl mov das xchg ficompl arpl (bad) (bad) (bad) fbstp stos lcall andb movsb jae in icebp rep gs bound (bad) decl ret jne cmpsl stc rcll roll sub (bad) (bad) (bad) clc adc (bad) push xor fwait ss mov mov (bad) push aas insl push add std insb lret sbb (bad) (bad) call inc sub adc xlat (bad) int3 mov lods popf rcrl jg adc fstl (bad) lcall adc and jg int3 jle mov daa out lock mov fwait imul (bad) (bad) sti scas (bad) jae aaa mov in sbb sub dec xor adc loop (bad) ljmp cltd cmp inc adc cmp mov repnz into inc mov jns outsl bnd repz xchg aad xchg (bad) (bad) call gs mov aas rclb insb dec icebp lods push clc and jp ljmp (bad) (bad) (bad) push sti pop loope hlt or aad pushf mov (bad) fdivl fldenv cmc int3 push cmp dec aaa ljmp mov mov inc add jbe mov mov lcall sub jge ja rorl test mov or xchg jecxz mov sub sarl and insb xor (bad) pushl cmp cmp inc int3 jg insb insl imul pop xor and lcall decl jecxz sub inc imul cwtl imul inc xchg (bad) (bad) incl and cmp jbe mov aas movsb fdivl lcall cld and adc dec int3 xchg clc sub pop lock pop enter imulb push mov (bad) je ret nop or es pushl in mov les hlt pop hlt (bad) (bad) (bad) pushl push jg dec mov inc xlat jae pop imul test ret add sub mov inc jle push movsb mov pop cmp repz sub not jmp dec je (bad) pop imul shl inc jecxz dec lahf inc mov push (bad) (bad) (bad) incl jnp lahf sarl jne inc fimull aaa jcxz cld iret ret adc sbb aam or lcall mov mov loop sbb jmp push push sti push cli fcoms inc mov and (bad) fild dec mov inc scas dec pop popl cmc (bad) jmp push and cld add cld mov (bad) (bad) lcall cmc subb shrb call js or mov jg add sbb mov fnsave (bad) (bad) (bad) ljmp dec repz (bad) out test iret xlat mov fstpl and adc xor jmp pop cmpl (bad) pop inc leave sub sahf and xchg fdivs (bad) pushl out std cld mov inc add ret and fnstsw dec xchg decl inc mov sti push divl sub adc jg mov orl xor mov in dec add out jp negl rorl repnz in icebp pop (bad) (bad) pushl adc call pop dec inc xchg mov inc loopne cli repz (bad) (bad) (bad) call xlat pusha sbb lahf cmpsb popf (bad) cmpsb xor inc addr16 fdivp mov mov (bad) (bad) (bad) lcall or je dec aad out xor mov adc clc and lret jmp sub (bad) (bad) (bad) push xchg or adc ljmp mov lret in cli dec cmp lret leave and popa jmp pop imul mov mov (bad) (bad) (bad) jmp mov sbb jmp js add inc and pop in lret cwtl adc pop loopne lcall iret sbbb rclb sub out sbbl ret sahf and aad sahf sub lods scas cld dec inc xor xor mov (bad) (bad) (bad) call and scas xor adc push fidivr mov stos dec into rorb int jg (bad) decl aaa mov or jnp push hlt jle add popa pushf xchg popa (bad) (bad) (bad) dec inc es pop loopne and imul bound jp sub sbb inc (bad) (bad) (bad) call xchg cltd insl jbe repnz call xchg sti adc movsb je inc (bad) (bad) (bad) jmp jg cmp std in into mov pop rcl and mov call rorl (bad) jmp sbb and sbb dec lods enter je iret xchg push or cmp (bad) (bad) push cmp (bad) adc test insb movsl xor sbb sub aaa push ljmp fs fldenv push dec jg or jnp adc lods int dec push mov (bad) jmp sarb fs negl xor mov and test pop (bad) jmp cmp jmp fsubl sbb stc test (bad) (bad) decl push pop ja or ret rcrl adc xchg pop jg ss fildl push mov add jno or loopne cltd pushf out mov adc imul imul mov (bad) sbb insb into jmp stos jb dec mov stos (bad) ljmp ja into sbb ljmp jbe sbb mov adc (bad) mov es loope xchg mov sub cwtl pop jp (bad) (bad) (bad) (bad) in lods fistp pop add cmp push mov push add imulb outsb pop scas ror sahf sbb mov (bad) push xchg sub enter sbb insl mov push js mov jo or dec icebp or mov mov ljmp mov (bad) (bad) incl sbbl pop loopne insb lcall pop lds loopne push jno int3 addl js call pop inc (bad) (bad) (bad) (bad) push sub pop imul sub push adc decb cld stos bound decb cmp lods jne decl fs add neg ss and fcomps repz decl repnz and add loopne icebp (bad) mov (bad) (bad) (bad) lcall ret outsl cltd xchg sbb cmp rcl pop pop sbb (bad) ja xor jns mov jmp mov jg push push imul add xchg push or mov push iret dec xchg cmp idivl icebp jl mov pop mov fnstsw lock in addr16 mov pop rolb imul icebp (bad) (bad) (bad) push mov xchg outsl jbe mov aas pop add paddusw pop ja test (bad) jmp jae mov push rcll outsl std push cld jmp xor cwtl ljmp imul push dec lods lea sub mov (bad) (bad) (bad) fidivr sbb pop aam aad out pop les aaa push shrb ljmp cmp add arpl push xor fld adc jbe (bad) (bad) (bad) out pop inc fsubl xor rcl in push sbb cmp in sub aaa adc cmp adc xchg mov clc cmpsb pushf sub lcall paddw das rcrl add inc mov sbb or (bad) (bad) fbstp inc js sub add cs rorl pop into (bad) js ss decl push enter outsb jge aam jns in fisttp nop ds pushf lret and or push sbb or ljmp dec mov dec stos fcomi lcall fs mov (bad) cli cltd mov add jne lahf scas mov jo xchg sub adc (bad) (bad) (bad) incl call jns sar inc jae and aaa adc mov ljmp incl mov faddl popa jns dec fadds mov mov cmpsb pop adc (bad) ljmp fnstenv ja xchg ret and in or sti arpl cmp mov mov cli adc dec sub mov cmc inc in dec mov sti sub ljmp mov (bad) (bad) cmp jne push iret loop andl xlat inc das or push xchg ret cmp icebp sub adc ds jno movsl jle pushf fidivl pusha jne,pt daa incb out cmpsb stos push xchg sub fild xor xchg xor decl lock icebp xchg mov imul ret mov dec xchg test sub and push bnd addr16 jmp outsb popa push dec fidivr dec dec das cli out mov lods mov sub imul jmp lds or push xorl insb xchg push scas call into dec call add mov outsb (bad) ljmp cli in aaa arpl mov sub lods sbb lcall loop mov js mov outsb push inc pop xchg mov decl lahf shlb test (bad) fmuls (bad) ljmp mov adc or jae inc jb pop or cwtl (bad) adc pop pop mov push and lret or mov gs ds loope pop (bad) (bad) mov movsb fs cmp xchg push aas out out sahf gs (bad) (bad) (bad) jle xchg push jae xchg mov out jl push ret psllq sti xchg pop jae outsl clc jmp ljmp xorl into stc (bad) (bad) (bad) ljmp aaa lods gs inc je mov jge rcll mov (bad) push scas fwait pop aaa cld (bad) dec jns pushf mov pop jge fdiv and and clc in push pop pusha jmp jge and shrb mov dec out jmp push ds jo inc fstl ds (bad) (bad) incl loope jo lods ss test xchg xchg adc (bad) in sbb je xor mov xorl (bad) pop mov fwait inc call dec clc adc jle fs mov xlat xchg push es (bad) (bad) ljmp sub and loope and mov into mov or pop leave (bad) incl jge mov cmpsb push cltd (bad) mov inc test cmp (bad) incl aaa dec mov js fwait add cmpsl fs xor mov jg,pn ljmp (bad) shl mov call aas aas push sbb inc (bad) pop lock (bad) lret inc fcoms sub movsb cmp in mov fs lods xchg xchg xor mov dec call or add cmpsb inc data16 cmp xchg adc sub (bad) ficomp fldt fdivr pop ds fsave mov popa xor mov push notb movsb out mov mov and ss mov pop (bad) (bad) (bad) call inc test mov rol outsb adcl fistpll cmp ss (bad) (bad) (bad) cmp lret mov mov dec testb popa mov and xlat add test inc sub or in xchg aad add sbb adc pop or pop or inc (bad) pusha add sbb leave insb dec or (bad) jmp lret divb ss cmp sbb mov test popa push add sti (bad) jg (bad) aas ja test or stc iret push nop icebp add mov sahf (bad) fcomip jmp rcrb push ss sahf cmp (bad) xor roll (bad) (bad) (bad) incl into adc stos insb out xchg pop loop rcll mov sbb mov ljmp es inc jl push enter adc aaa pop mov (bad) jp cmp and imul jne int3 sbb mov lret in loope jg (bad) call (bad) pop xchg cmp push (bad) repz (bad) fistp or and lcall add in lcall push adc push ret stos sarl mov sahf mov gs adc (bad) (bad) (bad) incl inc xchg jns dec and sub mov cmpsb lock or or (bad) jp mov jo inc int3 sarb mov addb in push mov mov (bad) (bad) call xchg (bad) out daa fwait lret leave nop mov lock sbb jmp jno inc iret (bad) (bad) (bad) (bad) jmp or fldenv loop inc imul fildl cmpsb imul mov (bad) pushl test clc pusha mov inc mov rorl (bad) (bad) lcall cmp fadds mov mov and adc mov pop sar incl lods es (bad) dec jle aam and jg mov push mov cs fcomip lcall aad xor cmp icebp mov add lods xchg (bad) cmc mov cli (bad) incl dec lret dec leave jae push addb je pop aad inc out pop idiv (bad) (bad) (bad) clc mov js pop fstpl or sahf jns pop out (bad) mov pop ds daa mov outsl cltd stos ja cld rclb sub cmp (bad) incl and or mov and arpl pop leave outsb ret lods and pop cmp test (bad) jmp clc sbb push fild outsl cld mov mov mov int3 (bad) aaa ftst mov mov pop sub clc inc or inc push xor dec jb push int adc jg inc js mov lds add push lods or dec (bad) (bad) (bad) (bad) jmp sub inc sub pop insb sbbl mov xchg mov (bad) call loopne loopne out sub std aam dec dec xchg inc in insl fs xorl (bad) push jp cmp pop pop pushf jne outsl xor cmp mov ret dec fmulp cmp (bad) lcall lds add dec dec pop pop adc and cwtl addr16 add (bad) (bad) lcall jne mov cmp sbb stos shrl mov mov fdivr (bad) (bad) (bad) ficoml jnp pop cmpsb pop add lret inc dec push mov pop mov pop or (bad) (bad) incl lret fs lock les ret jbe ss fiaddl sahf scas in movsl (bad) (bad) (bad) (bad) mov dec aas nop mov test xor scas push xchg notl hlt dec cmp ljmp and (bad) std std sbb loope mov xchg pop mov dec fstps nop jle (bad) (bad) push jge lret lcall mov push shll leave and sti sub and das inc outsl pop fisubl jle mov ds (bad) cmp test mov sbb xchg jmp lret test mov adc mov (bad) inc jecxz add push outsb mov pop out rolb dec (bad) (bad) call in idiv add sarl clc lahf mov pop mov mov push (bad) (bad) decl xor sbb outsl xchg je mov mov pop das clc jg or mov insl xor jnp (bad) iret fs andl (bad) ljmp sub xchg add dec mov lea mov (bad) (bad) push inc js enter mov lret cmpl arpl push dec (bad) (bad) (bad) decl in stc fld dec add stos mov dec or inc inc mov (bad) (bad) mov in movsb test mov and pop incl imul mov fsubs (bad) mov ljmp sbb sbb (bad) sbb stc (bad) jmp sub jp inc sub mov ljmp cli xchg aaa and repz jge pop inc lods xchg jecxz ljmp cmp (bad) (bad) (bad) decl rolb movsl int3 jge pop popa clc adc and mov ret or lods (bad) das clc add push xor sbb cli loope inc jne out idivb mov das xchg sub outsb sar repz sbb mov incl cli xchg mov dec add (bad) mov jb (bad) and sar push shrb cmp sub mov mov push adc incl inc lret lods sub ja jmp loop clc sbb lock push mov (bad) (bad) jmp call cltd xorl rclb into mov js outsl mov xchg or ljmp pushf jo xchg cmpsl out lahf loop enter out jne dec (bad) pop cmp fildll jno cld (bad) lcall mov pop (bad) jbe inc in test pushf imul sbb push push or mov enter bound lea cmp rclb fwait xor mov xchg leave and inc daa and leave (bad) stc dec cmp rcr dec or (bad) ljmp push sar (bad) call lods sub insb cli icebp sbb xor pop add push mov addr16 mov mov (bad) int3 in and or sub xor mov pusha minps decl (bad) fisub fcoml (bad) pushf dec and (bad) (bad) incl pop sbb mov (bad) jg add xchg stc stc lahf sub cmp arpl loope decl cmpb mov andb decl sub cmp pop cmc (bad) xor lahf repz jb mov out jns clc (bad) jmp pop mov cmp cmp std mov mov push xchg ljmp dec or (bad) dec std sbb mov cld lcall inc fistp cli mov cmp stos (bad) sarl mov xchg frstor ljmp incl inc iret out and stos or push or xchg push das negl (bad) sahf fs repnz (bad) (bad) incl jmp ja aad xchg and cmp push bound xchg ret xchg mov inc hlt in (bad) (bad) (bad) fidivr in push xchg inc (bad) sahf outsl stos fcmovnbe les (bad) or jl aad add (bad) fldl cmc sbb (bad) and sub xchg movsl out cli (bad) inc lods lahf dec test xor lahf jno ret mov jge test js call xor jecxz (bad) lods mov mov mov loope push std sub lds out jne mov addr16 lcall adcb addr16 xor cmp and lods fsts insl out ucomiss adc inc jmp ffreep hlt outsl aad cmp fadds cmc lcall mov mov xor jbe iret scas jo sbb scas xchg push cld sub cld mov cmp lcall pushl fmul push add ffreep incb cltd (bad) push pushf and inc pop je add pop cmp fidiv sub clc add jno push jle (bad) (bad) fcomip cmp pop aas ljmp and jecxz jmp add lods bound rcr jg test hlt push xor cmp ss mov jmp adc imul addr16 jo decl insb leave push ds sub pop sbb hlt aaa cld incl fsubs (bad) out jl xlat and movsl mull popa adc inc xchg aam cld inc add cmp xorps cs in push (bad) (bad) pushl nop rorl jo icebp jne push jno lret jg jecxz subl fstl daa mov (bad) (bad) call sub fadds mov xchg ret repnz imul aaa sbb xchg pushf mov stos cmp sbb jg sbb (bad) lcall movsl push inc add movsl mov mov outsl inc dec adc repz cmp (bad) (bad) pushl pop (bad) pop test imul outsl repz lock les incl cld incl xchg test insb and movsl subb test (bad) (bad) (bad) ljmp mov (bad) dec test jo mov icebp lds sbb mov cmp mov jnp lret inc mov inc or (bad) mov outsb jne aad scas lock jno jge bnd add aaa fimull enter mov (bad) (bad) (bad) clc adc inc cld negl je in and sub sbb outsl adc (bad) (bad) (bad) lcall lret mov notb out dec cmp ss in cmp (bad) ljmp sub mov cmpb xchg lock pop jmp out or (bad) (bad) incl jg out mov imul into dec push mov lahf mov sbb aaa cld (bad) lcall pop cld xchg add xchg cmp sbb xchg push js decl ret clc lea into ficomp decl aam push aam out mov inc adc xchg cld xchg add idiv cmpsb (bad) decl xor psadbw and nop pop (bad) enter lods ss (bad) (bad) (bad) jle sub xor jge inc pushw mov pop fs jae dec sbb daa or cmpl jne jecxz adc cmp (bad) (bad) (bad) pushl mov push and fimul jg xlat pop addr16 cmp gs (bad) (bad) (bad) ljmp mov sub pushf rcr lock jno (bad) je jp clc inc push pop inc mov cmp int popa and fbstp lea into and test pop loopne mov mov fisttpll loopne (bad) (bad) (bad) decl xchg pop cs inc cwtl insb cmp hlt and sbb dec test cmp push or (bad) (bad) call lret or sahf mov cmpsl dec xor fs rol out xchg push jae bound inc ds lods jg (bad) pushl les dec xchg mov out xor mov mov push xchg call inc push and pop imul mov pop push sub (bad) (bad) (bad) jnp cmp xor aam pop mov inc or outsb in sbb lret andb hlt sar call loopne jns ret inc push cmp inc fldl xchg shrb gs (bad) (bad) (bad) jp in scas aam lods data16 jb lods (bad) int add jb mov das pop int mov adcl imul mov shrb mov inc mov (bad) (bad) inc sbb mov fcom jo cmp stos repz int pop xlat ds test (bad) ljmp inc pop imulb outsb cltd xchg push addb sbb lods shufps (bad) (bad) (bad) call dec and (bad) sbb sbb and pop (bad) or (bad) not mov push das (bad) (bad) (bad) call popa pop into push cmp mov out mov iret jecxz adc lahf (bad) (bad) (bad) jmp adc cld jg cmp aam or test mov call xchg mov mov or pop std (bad) lcall fistpll fsubrs pop mov pusha mov inc inc inc dec sbb clc jmp mov pop push sub call shrb push pop (bad) bound xor (bad) cmp mov sbb mov dec aad (bad) (bad) incl sbb jbe addl cmp mov sub fwait mov push in into adc add jno xor repnz or add cmp jno fldl cmp adc repnz (bad) ljmp xchg xchg (bad) dec movsl dec or pop sbb mov add cs sub add es lods jge jge ljmp jecxz in or lds loope es (bad) lcall mov or out add push je (bad) ljmp ds movsl cltd and (bad) cmp int3 add push adc rclb add neg pop sbb pop mov pop icebp (bad) (bad) mov xor xor loop xor xchg in inc sub inc mov arpl (bad) imul pop popa (bad) fwait ret pop out xor cld int3 adc jns mov push in lahf xor sarb mov (bad) mov jl or bnd and lret push cmc cmp cmp or dec dec push jmp sar scas push rcll mov cmp ljmp sub je das mov mov fs add adc cmpsl and pushl aaa or dec dec subb add pxor (bad) jg out jb pop or out cmpsb inc aas aaa pop les and xor jnp decl in gs pushf xchg xchg push insl sti add (bad) jg dec (bad) or fnsave std jmp mov sbb (bad) jmp dec cli cmp lret sub jnp mov and aas insb jmp add adc or push sub dec insl es outsl push mov inc cwtl pop lock fsubrl in (bad) incl ss push ss (bad) mov sub and fisttpll repnz sahf (bad) jne push sub add jo xchg fs (bad) (bad) pushl mov jmp idivb inc dec push push test (bad) adc lret mov (bad) (bad) incl in sbb pop cmc js lret and mov lea sbb sbb pop es xlat sub (bad) (bad) fistp adc clc jmp mov lds fidivrl (bad) ljmp bound mov mov jbe ljmp cmp add cltd adc (bad) shlb outsl in stos (bad) fldl (bad) (bad) mov movsl xchg fwait mov out pop in hlt in roll (bad) decl pop sub xchg adc mov js jl mov adc xlat lret xchg or and or xlat sahf and dec (bad) (bad) (bad) (bad) cmp std adc sbb xor in js or pop jo pop pop jge leave inc sti dec clc fcomip decl and sbb test inc xchg push cmp incl negb xor pusha shll loop xor gs inc push jnp cmpsl mov leave and sub stos add jbe or sbb out clc mov sbb aas mov inc imul (bad) (bad) push dec or gs sbb hlt adc (bad) icebp popa lds leave stos divl (bad) (bad) lcall jl insb push mov arpl icebp cmp jne loopne mov mov movsl cli sarb lret adc push mov adc mov cmp cli inc aaa adc (bad) (bad) lcall out and push push int xchg fiadd loope sarb inc rol pop xor mov addr16 cltd or adc cli (bad) (bad) jle cs idiv push pop adc lcall push and call inc push mov pop into aas xchg lret hlt ret pop leave negl (bad) jg jmp outsb cmp iret int3 xor mov mov inc inc dec sbb pusha std (bad) mov je,pn or mov lret dec jnp mov pop lcall (bad) fildl rol aam cmp outsl jmp mov mov jno jl pop je pop push insl loopne (bad) (bad) call std mov dec adc cli sub xchg fldl call push jecxz fwait mov inc int3 jbe imul shrl ljmp cmpsb jl mov addl xchg les daa (bad) jno and inc xchg mul jmp loop sbb (bad) (bad) incl enter cmp mov mov cmpsb test mov (bad) (bad) (bad) inc adc adc les cwtl out inc (bad) pop or leave mov cmp pop or push incl push pop add cmp repnz or imul sub cmp mov js ret push test insl sbb pop adc test ljmp gs dec add (bad) cmp (bad) (bad) mov enter adc sbb inc cmpsb sti and loope jne incl dec or (bad) fisttpll mov lcall (bad) (bad) ljmp jno rorb (bad) stc sahf ret sbb jecxz add loopne bound adc (bad) (bad) (bad) push push cmp (bad) lret enter imul divl test jp pop add incl jg jp fiadd stos icebp repnz lock bound and (bad) movsl movsb xchg (bad) (bad) (bad) (bad) jg adc into fistpl xchg sbb xchg push add cmpl (bad) dec add pushl int (bad) (bad) (bad) decl mov add mov adc decb fisttpl inc add xchg pop dec dec (bad) ljmp (bad) rorl stos mov fwait jg cld xor aaa daa pop push sbb xchg mov (bad) shrl and (bad) out lret mov mov das ficomp mov (bad) (bad) (bad) jmp adc or and dec pop int les pop fldt xor or jne aaa fmul mov or icebp push mov dec (bad) lock ljmp dec mov inc add lcall (bad) (bad) (bad) push aam fisubrl scas stos and mov enter loop (bad) std or (bad) (bad) (bad) dec sub mov cmc mov jmp imul stc iret into add outsb jmp jle adc (bad) incl jge in jmp stc or (bad) incl mov les mov inc inc fstpt sub jp sbb dec cwtl bound adc cmc das ds push (bad) (bad) mov pusha (bad) jg cmpsl xor mov jp adc jb push (bad) call std pop pop into out cmc shrl xchg fldl test and fcmovne fbld cld (bad) (bad) mov cmp jns in inc rol inc push xor scas jecxz into loopne mov pop mov test ljmp (bad) and andl lret xlat outsl mov xor in xchg mov and sub pop in push retw and pop in shr adc xchg cmp pop sbb push (bad) (bad) mov xor ljmp cmp cmpsl sbb jg fdivrl xor sahf aas push sub adc int3 fwait sahf repnz cmc leave pop push fildll outsb (bad) call mov jns inc out cmp test fcmovbe ljmp mov cmp push lock dec sarl ljmp je rol jg (bad) loope push sub mov mov popa stc sub in or (bad) (bad) (bad) incl hlt xchg ret cmp int3 sbb jae jle mov mov enter mov push jmp lcall ds fisub call (bad) (bad) mov lret lcall push push dec les pop mov out dec or incl inc dec sbb inc mov push sbb mov mov decl lock and cli mov ds adc ds int cltd leave mov incl xchg pop mov cmpsb ja push jmp cli mov jo pop lcall push xchg mov sub (bad) (bad) (bad) mov shrb xchg pop xor adc sar xor dec jl xor cld (bad) decl fwait stos or xchg dec rorb imul add ret call pop cmp cltd ret pushf jbe faddl push adc inc ljmp push ds (bad) (bad) fbld inc xor cmp dec in mov into jno or test sub pop jns push mov push fistp sbb (bad) (bad) call aad dec add pcmpeqd jmp add push ret jno cltd and pusha setno (bad) aas ret mov (bad) mov (bad) mov jp ret (bad) jno jge (bad) (bad) lcall push gs dec push xor ljmp jno dec arpl jecxz push cld lcall jl sbb push movq add dec push sahf cld mov jae mov sbb in push outsl jne loop clc (bad) (bad) lcall jecxz mov sub sub cltd lds inc dec adc loope xor pusha add lret xchg inc cli test (bad) (bad) (bad) decl mov (bad) jecxz imul pop lea test xchg jg adc and imul or push sub in xchg cmp cltd fbstp (bad) decl rcrb sbb xchg adc add rclb inc les sub mov cmpsb std push pusha icebp gs fcompl or fcomip pushl xchg mov int jg in and fildl adc cmp adc rorb sbb mov push mov sbb leave imul (bad) (bad) (bad) es out cs xor arpl add pop push mov scas mov or pop add pop xor (bad) adc push or inc or mov mov pop imul test call sbb jecxz xor pop leave mov mov mov (bad) (bad) (bad) dec enter inc xor ja imul inc pop push and fimul test idiv xchg std pop xchg xor nop outsb jbe nop jle (bad) (bad) call (bad) xor xchg (bad) fidivl jmp (bad) leave repnz gs popa cmpb scas stos rclb mov repnz neg inc lods rcrl stos out (bad) mov add cmpsl pop dec out mov and fldl adc ds lock (bad) in pop jge push jae sbb cld xor imul int xchg stc cmpsl fistp xchg pop jg sub xchg nop (bad) (bad) (bad) incl (bad) icebp mov jae (bad) and punpckhbw sti dec pop sarl xor popa iret clc popl xor xchg mov in lahf lods mov idiv (bad) (bad) ljmp xor jle fidivrl and push dec add add xchg cmpsb mov jp jle cli (bad) pushl sbb cmp and sahf lods sti mov (bad) incl mov test or ja enter push movsl sbb adc jge aaa std (bad) lcall aaa mov cld test fmuls jb mov test jge mov insb in adc dec dec sarb jl in mov pop fisttpl cltd or mov pop dec loop lret (bad) (bad) jg mov adc cmp cli mov dec cmpsb js adc cmp mov loop mov dec mov fwait repz addr16 loopne imul pushl std fstl mov jmp movsl ljmp push ret shr jnp cmpsl inc sub push cmp (bad) (bad) decl dec add pop in lea orb cmpsb (bad) jae fnop or mov (bad) (bad) decl scas orl sahf cmp and mov scas lcall add push sbb jae test sbb roll stos sti pop mov enter jbe in mov mov testl sbb call lock in push (bad) (bad) jg and subl push cmpsb mov std xchg sarl inc inc loop ds andb decl inc cld lret dec rep inc fld1 sarl inc add cmpsl fmull or lods sbb (bad) (bad) lcall xor aas inc leave je cmpb lahf scas push or pop hlt push adc push test mov outsb push push enter (bad) (bad) jmp cltd adc call cmpsl lods aaa ja push popa mov (bad) (bad) jmp cmpl push push lods pushf sub ss pop cmc xor int insl sahf (bad) jg jmp sar faddl jg mov jae jp sub incl cld pushl comiss adc test add push mov sub clc (bad) (bad) ljmp out out popa popa (bad) cmc movsl lret out dec xchg xchg fwait std cwtl repnz xor (bad) mov add sub gs mov scas jo push mov xorl sti xchg push or (bad) (bad) mov push ss fldt xchg xor mov pusha loopne js shrl (bad) (bad) (bad) (bad) jg add jecxz addr16 inc loopne mov cmpsl pop lods xor ret cmpb loope (bad) incl push mov fbstp out dec into ljmp add or cmpsb sbb js cmp or inc aas (bad) (bad) (bad) lcall push pushf (bad) dec pushf push push push out push push jg xor (bad) ret (bad) (bad) (bad) (bad) mov mov outsb out dec ljmp (bad) mov sbb (bad) (bad) (bad) call sub lds push dec jno xor jl xchg cmpsl adc xchg ret pop (bad) (bad) (bad) decl jae xor fbld rcr aaa ficompl push cmp gs xchg leave cli mov dec fidivr out in jb cs mov jo inc mov (bad) call push mov cmp insl xchg outsl pop ret out xchg pop mov mov push test call in inc inc stos sbb nop cltd xor or jne cltd test subl aad addr16 mov dec (bad) (bad) dec mov adc dec daa data16 or push xchg dec mov cmc (bad) (bad) (bad) fcomip cmp movsb pusha and dec shlb aas mov (bad) (bad) call adcl pop call call xchg cwtl fiaddl push (bad) pushl dec dec add lds jle dec push push imul aad clc out dec (bad) (bad) (bad) fdivrl in cmpsb das and and fwait aas popf aad xchg lods mov push daa or inc pushf jae jle (bad) addr16 xchg notb jg pop xchg ljmp std xchg add cmp lds in push mov outsl fwait mov xchg mov jo (bad) cmp cmp sbb inc xchg ret repnz xchg hlt jmp xchg pop jmp pop sar sub dec cmp add (bad) (bad) incl dec cwtl cmp sub add adc and cwtl add push pop pushf push (bad) lcall inc jmp or push dec push push cmp into int aaa cld pushl test pop adc push ljmp shrd adc mov enter mov mov xor push inc xchg out sar (bad) fsts imul xchg add (bad) (bad) call lcall adc push in test xchg sbb dec push lds pop ds (bad) (bad) (bad) pushl xor fwait cmp lahf out cs mov adc rcr gs icebp jge push in nop xor push (bad) sbb mov ljmp leave hlt (bad) (bad) lcall or inc add or dec sbb bound xor push cmp cmp or or (bad) cmp cmpsb (bad) fimul stos (bad) (bad) pushl test mov imul ret mov insb (bad) (bad) (bad) decl (bad) mov lret pop enter or dec xchg (bad) in mov xchg es adc gs (bad) (bad) (bad) decl push adc pop test js pop xor jle ret daa mov sbb (bad) call fisubrl popf negl cmpsb dec inc dec outsl nop jecxz sbb pop ds xlat pop add cmp mov (bad) (bad) (bad) lcall pop cmc ja jle out test inc mov mov add cmp je (bad) (bad) (bad) pushl cmp fadds sbb mov add push mov push inc pop dec rcl (bad) (bad) pushl mov pop dec push dec push fcomip push scas clc stos fldcw cmpsb loope cmpsl in popf cmp pop int mov xor out or inc jnp mov (bad) jmp ret and or xor xchg mov push ret fistpl mov mov js push adc dec sbb test mov push add pushl mov add aam mov or loope (bad) decl movsb jae scas jg icebp repz sbb inc jno rorl mov (bad) (bad) push push je les addr16 aam stc (bad) lahf test cli fstps incb lcall (bad) stc push ficompl ss cmc sub rorl xor cmc test cwtl hlt js (bad) (bad) out push cmp push xchg adc adc pop mov (bad) push call iret in push mov inc lahf inc aaa pop icebp leave xchg mov loope mov ljmp mov sahf cmp inc pop xor mov adc adc push mov pop push test das rcr ds xchg pusha sbb push nop test ret into and stos test push or repnz sahf (bad) (bad) (bad) lcall xor add dec cmp int3 mov push les pop test fcomip pop cmp add fwait imul mov sub mov es or (bad) lcall std jmp jne pop jne inc fidivr jmp (bad) call imul or imul mov ljmp (bad) (bad) push or in (bad) inc test ret xor inc jbe out cwtl jp incl push mov sub mov shlb test (bad) ljmp imul jecxz repz jnp rclb mov cmpsb inc add pop (bad) mov lret test xchg sahf (bad) and popf mov lahf cmp cmp (bad) (bad) (bad) jmp xor outsl adc sub mov stos xchg pop dec sub (bad) push (bad) fisub xor inc xchg adc push xor inc test das mov call dec fwait aaa pop in bound add cmp (bad) (bad) (bad) mov jg xorl clc and mov into jo lahf jl add les fidivr sub aas pop inc mov mov outsl ljmp pop xchg cmp sbb adc imul (bad) int3 or outsl popa add (bad) (bad) mov nop enter cmp add push sahf and cld (bad) decl fs (bad) mov xchg cmp fwait push inc dec inc hlt or cli sub mov push rcrb add mov in cmp or pop (bad) xor adc or imul push popa add dec ss jae movsl ret mov push (bad) (bad) decl ficomp dec lea inc dec or int in loopne mov out sbb (bad) push popa sub ds loop call jmp mov stc cmc pop cld (bad) out fwait add bound cmp outsl xor pop divl cmp pop pop ljmp jbe leave sti dec jmp outsl cmp loop xchg outsb jmp cmpsl std cmp adc scas fdivrs xchg loop arpl (bad) int3 cltd fisttpl shr out out cli daa push (bad) (bad) (bad) jmp mov in pop and test dec push test cs dec jg lds fs inc pop dec mov push inc push ret mov lret inc fcompl pusha add repnz fbld lcall adc popa mov xchg (bad) (bad) (bad) ljmp push add fs (bad) mov jle lods iret mov sbb rcl mov push jo pop clc dec fdecstp fist ret mov push movsb test jbe call std (bad) or lock popf push sub mov (bad) (bad) lcall sbb xor out movsb adc sbb push pop in movsl stos or (bad) (bad) incl mov hlt mov ljmp lcall fidiv mov fdivrs push fildll aam movsl jae pop (bad) lds mov mov decl sbb push mov pop add lods lcall fcmovnu xchg movsb jns jmp cwtl (bad) in (bad) (bad) cmp inc repnz sub stos dec leave outsl jg xchg out mov add (bad) (bad) (bad) ljmp jmp mov mov jge jge mov xchg aad cmp cmp decl push (bad) push mov push sti jno lds pop pop xor cmpsl scas scas sbb pusha jmp sbb insb push xor daa mov dec pop mov test call sbb lock pop lret inc lcall (bad) gs cltd sbb movsb mov sbb aad test (bad) (bad) inc sbb add cwtl jbe sub (bad) bound insl ret xor (bad) push dec jae jno (bad) (bad) push scas hlt adc insl pop pop lods shrl popf rorl xor mov fdivr jbe imul ds hlt jle xchg cmp sarl xchg jno cmp in xchg int (bad) les dec in decl mov push in leave lahf icebp out lret add (bad) (bad) (bad) fmulp test aam mov stc lret cmpsb into sbb sub cmpps inc fwait push paddsw mov jg (bad) fsubrl test (bad) movsb pop pop pop jmp pusha sub mov ret adc pop ret push outsl pop sbb (bad) xchg es bound (bad) push insl mov lret rcrl xor push lods bnd pushf mov cmpsl cli (bad) (bad) inc push iret sbb dec xchg insl and (bad) cmc movsb data16 cmpsb lock lods or mov cmp xor or and push adc adcl int3 xor lahf pop and cld jno jnp jl std movsb sub push lahf arpl sbbb add cld mov ds (bad) (bad) in (bad) and xor jae xchg pushl or into pop hlt pushf lods or push mov mov mov pop sbb mov mov sbb pop lcall mov mov jo loopne add out mov xchg cmp mov movsl cmp cwtl in (bad) (bad) mov adc lret cwtl mov mov aad xor leave out pop mov (bad) (bad) jmp (bad) lahf mov arpl xchg dec (bad) loopne fidivr cmp (bad) aam cmp ds flds pop mov pop cmp ss mov rclb aam mov repnz lcall add flds push push mov and ja xor lcall bnd bound lods sub (bad) mov inc divl rorb (bad) pushl sub cmpsl push xchg es enter (bad) add (bad) jl jbe repz (bad) lcall lock jecxz push jns popa cwtl sub out cmp adc lret (bad) incl mov test jb (bad) pushf xor pop dec mov sbb mov js push inc icebp bound jns in incl add cmc xchg movsb fs out (bad) mov sub es aaa lcall (bad) lcall (bad) int int3 cmp inc push out movsl inc sub adc mov inc mov addr16 (bad) mov push cmpsl pop mov inc mov cmc adc mov lret sbb decl mov and out sarl pop push cs sub mov mov or je cld cmp mov push loop add mov and pop cltd and pop or lock pop (bad) xchg pop lret xor dec pushf or nop mov dec fcoms scas push cltd jbe pop int ss cmp stos add or xor inc (bad) pushl mov subb clc inc inc lea xchg outsb sti cmp mov (bad) (bad) jg ss fs aad popa push cld and adc in in clc sbb jmp (bad) (bad) (bad) call ret test xchg lahf mov xor les idiv and xchg call lods adc pop roll jmp enter (bad) xor dec cmp adc pop rcrb mov addr16 (bad) mov jmp out (bad) pop mov mov mov mov xchg or or (bad) (bad) incl leave scas pop cmpb ds stos movsb pop int3 outsb test cmp xchg (bad) jmp fwait and mov mov (bad) mov (bad) aaa inc jo xchg sbb mov mov jmp xchg xchg add add mov pop aas (bad) (bad) (bad) ljmp int jecxz icebp jb add cmc inc xchg and cmp aad push loop (bad) (bad) incl notb fildl outsb call jb imul ja cli int lea ds (bad) mov cmp adc ret (bad) mov sti (bad) (bad) (bad) (bad) (bad) ficompl scas rorb dec xchg out in movsb xchg imul test xlat dec add mov scas and (bad) (bad) (bad) ljmp or icebp pop (bad) pop jne xchg xlat and add xchg (bad) decl dec sahf dec inc int and (bad) stc roll xchg aad (bad) jmp shr xchg insl xor mov fdivrl mov mov insb ss test fildl (bad) (bad) (bad) jg bound pop lods sbb stos xchg mov scas aam rcrl xor ljmp inc dec fwait loopne,pt fsubs rcr (bad) (bad) (bad) incl mov dec lock fwait mov and mov mov cs pop jl imul jno (bad) lcall (bad) cmp test fstp arpl pop push (bad) (bad) negb (bad) (bad) (bad) inc cmp or pop test sub cld mov insl mov sbb add (bad) cld int3 jno pop cmpb xor aaa mov (bad) (bad) decl cltd xchg sbb iret mov dec outsl sti adc cmpsl sbb popa (bad) (bad) (bad) (bad) (bad) call and xor mov les mov aam sbb out adc incl std mov or mov jae outsl jb test (bad) (bad) mov cltd je push jns je push pop (bad) dec inc lcall and testl lahf jge gs mov sub arpl (bad) jmp push movq out (bad) push mov cmc test rol lahf push or (bad) call nop fsubrs jno cs ffreep fdivrl dec jne js insl mov dec imul mov not add iret lret dec sbb lcall (bad) (bad) (bad) ljmp aas test mov int xlat mov push mov sbb xor ljmp xchg push mov inc mov push mov push into in pushl cld push and rolb push iret (bad) repnz xor jge out hlt (bad) call jb lret mov nop sbbl sti push mov (bad) (bad) incl mov movsb in inc xchg aad (bad) mulb mov xor ficom cwtl daa sub fsubr jg inc cld push clc test mov or fcomip call or mov and mov pop roll sbb ljmp aaa jle dec (bad) bound or repnz mov shrl jle (bad) ljmp or es cs aam subps test jmp add add mov inc cs (bad) (bad) push flds mov or jbe sub mov inc into dec scas (bad) incl pop or jno cmp in jns std xor (bad) jmp rorl mov cli sub js inc imul mov dec movswl imul popf inc sbb mov lcall mov xor xor outsb outsl aas leave out and mov push adc cmpsb (bad) mov addr16 out inc lock push push (bad) aam mov push sarl dec and decb ljmp add push divb mov xchg adc out or outsl clc (bad) (bad) mov (bad) jmp mov ljmp dec lret push inc rcr imul cmp movsl adc jle or mov or (bad) (bad) (bad) (bad) in daa add fadds lcall push cmp push lock adc mov push aaa sub adc cmp (bad) call mov pop dec mov jl pop fisttpl add adc cmp nop outsb (bad) xchg lahf pop out xchg jbe gs jp push mov jg adc icebp inc outsb std int3 fist popf fwait cmpsb (bad) fwait xchg cmpsb and jg ljmp lods outsl and adc push shlb sub sbb ret lcall xchg fnop pop lea in mov mov jae add (bad) mov jae icebp inc adc or cmpsb aaa in adc jecxz ret sub adc int3 fdivr (bad) (bad) (bad) call rcr push scas xchg dec in xlat adc nop jnp mov lret stc dec pop jnp sti adc (bad) (bad) mov adc mov dec sbb loopne push (bad) mov dec mov add fmul repz pop cs push jmp sahf xchg cli pop sub call jo sub repnz nop fdivrp fisttp push cmp pop shl dec test decl jmp xor ljmp scas xor cmpl arpl js fcomps and icebp pop mov js dec cmp jo lock ret mov dec sub mov ljmp add in je dec scas mov and scas (bad) (bad) (bad) call (bad) std xchg imul test cmp mov add das frstor sar lret xchg call sbb fsubs in mov dec adc nop call cmp push pop cmp mov (bad) (bad) (bad) (bad) mov or adc test enter into mov dec or pop adcl (bad) ljmp out sbbl jp pop icebp ret and xchg pop inc xlat inc xor cli loopne (bad) (bad) dec push push rcrl or repnz dec sub repz sub mov push subl scas cli inc stos push fidivl ss dec arpl test aam sub inc loopne es addr16 and (bad) pushl cmp pop and jb jp fwait and incl push out pop (bad) cmp push dec icebp sbb sub jp data16 push aad (bad) (bad) inc pop jnp loopne fdivr mov jl movsb outsb and arpl dec repz sbb test (bad) incl xor cmp or into shrb inc mov stos mov shlb dec jnp ljmp in test into sbb jno xor dec ds push mov movsl stc ds (bad) ljmp mov repnz jp shrl (bad) dec or sub pop dec (bad) mov iret xor cli lods push ret lea icebp decl xchg sub sahf pop add int3 in ficom mov inc add jecxz mov mov jbe pop pop gs fcoms and pop lcall bnd adc sub mov (bad) (bad) pushl fs outsb mov (bad) call loope lods fcmovnu gs xor sbbl loop je sti sub sub icebp xor in jle sub adc repnz sar call pop cwtl jne adc sbb outsb mov dec nop add push (bad) (bad) (bad) jg cmp cmp xor sbb std xor int mov call pushl incb fwait adc mov daa mov inc push ror js jp cld add or (bad) (bad) ljmp pop cmpsb pop aaa roll add sbb push test dec sub stos mov loope xor (bad) call add mov pusha xlat cli scas sub test lret mov mov inc (bad) and ds add popf test ljmp ficom (bad) (bad) (bad) pushl (bad) mov lcall sub out xor push aaa cld jb lcall es loope unpcklps jb in lcall rorl add fimul pop ljmp push jmp dec push or or scas aaa (bad) (bad) (bad) ljmp add inc or loop pop les and popa scas lea mov in (bad) (bad) js mov pop adc in gs xor xchg fdivrs (bad) (bad) (bad) incl fistpll xor xor xor mov cmp jnp ja jl mov flds (bad) call mov pop jecxz adc cli fldcw fprem1 daa sub shrb sub or and jl xchg in jmp push sub jmp das ds roll in dec ss (bad) popl push add sbb sbb ljmp hlt jbe lcall xchg mov call inc outsb dec mov mov mov or fs dec aam and jo aam pop pushl call idivl in or aaa mov (bad) and push mov decl testb rclb outsl popa mov mov aam lods xor (bad) call pushf xor inc imul in xor cld daa mov (bad) dec inc xor or ss mov or inc jge (bad) mov std enter (bad) (bad) (bad) incl and mov ljmp fyl2x sub mov jnp ljmp pushf cwtl aas ljmp add sbb in lahf cld mov bound jno (bad) (bad) (bad) ljmp and int sbb cmp test push shrl mov out inc jnp ret call lods int3 addr16 xor sti dec cmp add decl mov popf add dec push mov mov arpl mov out mov enter test aam (bad) (bad) cmp outsb or and push ljmp rcl (bad) aas lret push jae adc mov in mov pop sbbl cmp jge adc xchg inc jg cmc lcall sahf cmp xchg lds test dec xchg int3 stos pop nop jle push (bad) inc and sub inc cwtl fisttp jl fldl mov mov (bad) (bad) decl mov and rorb push dec pop jl scas mov jle push cmp pop add (bad) call fisttpl cmp out stc mov add int (bad) decl push mov xor push inc lock int3 mov enter jmp mov sub push jl lods call out xchg les xlat (bad) (bad) (bad) pushl dec dec sti cmp pop pop mov ss repz out fmuls adc inc dec sub jg (bad) mov lret jle cmp or addr16 paddb jmp scas sbb inc jle dec mov cmpsb (bad) (bad) (bad) (bad) cmp or fisubl (bad) jo,pn xorb icebp jecxz pop jbe and jg sbb je push and imul pop std push jmp or outsb repnz sarb mov call ret ds insb xor loope cmp (bad) (bad) decl frstor inc cmp jno arpl emms xor rorb pop mov call jno lcall jno cmp (bad) (bad) incl and push or xchg rolb in adc xor mov imul inc xlat (bad) (bad) (bad) jmp inc cmp arpl sbb fldl sub fucom sbb jae (bad) (bad) (bad) ljmp loop pop jns inc loope aam mov add addr16 data16 (bad) pop arpl sar scas mov stos mov aad (bad) (bad) (bad) jge cmp pop xor (bad) aaa adcl and pop push movsl outsb cmpsb js adc xor (bad) (bad) pushl ret lcall fidivr adc fs sbb jle idiv mov sarl pop jg cmp jae or xchg cmp xor or rolb pusha insb int push (bad) aaa ds (bad) (bad) incl (bad) in xor jno hlt jns jp pop int3 repnz push (bad) (bad) pushl cli mov mov jg jae scas js out mov push sar (bad) (bad) inc jge xor aad cld (bad) push enter insl inc mov jns in ficomp mov mov (bad) (bad) call push imul call pop sti nop and cld test jle mov call mov inc repz gs das in out jmp push push push xchg test push mov (bad) xor aam lock lods xchg jmp and pop loope (bad) ds (bad) (bad) jg mov gs popa sub popf xor jge mov mov jne loopne or cmp (bad) jmp sub sahf (bad) push imul mov mov divb xchg (bad) (bad) (bad) pushl inc mov fldt sub (bad) lahf jb std (bad) (bad) or pop loop cmpsb (bad) sub imul adc add mov mov (bad) mov imul js or xchg mov call sub push jle mov das xor mov jne out stos sub aaa pusha stos xchg pop mov mull dec loope sbb (bad) incl loope,pt test xchg cmc lods adc add (bad) mov jge adc bound adc dec jecxz data16 and clc ds dec adc ret ja mov incl ss xchg fwait xchg jo jg scas mov lea je xchg (bad) (bad) dec push push (bad) mov adc push iret repnz mov xchg fstl mov jle imul add hlt (bad) cmp int (bad) lahf mov js lcall xchg test sbb xchg mov out sbbl xor pop test pop ds (bad) (bad) (bad) incl xor cmp fstps sbb mov push cmp mov (bad) (bad) incl and pushf xor lea xchg cs xor shrb mov and mov lea (bad) (bad) (bad) decl inc adc daa xchg movsl loop mov cmc sbb sub imul das rol pop push leave mov popf imul fnsave jmp ret (bad) ljmp je pusha sub inc and jmp xor pop mov addl mov (bad) (bad) (bad) call repz add getsec fwait xchg inc jge cmp imul jp cld jle sbb sub clc call les and lock sbb cli (bad) (bad) (bad) (bad) cmp std and lods orl push add (bad) add cmpsl mov add push push pushf inc in shrd (bad) (bad) (bad) (bad) js stc add movsl push dec loop dec je cld cmp xchg jns lahf stc int mov (bad) leave mov dec (bad) push stos pop repz sub setg scas enter lret scas std (bad) (bad) (bad) lcall cwtl fbld mov mov push inc xchg mov dec cmp jg shll mov xchg ficompl pop fistl repnz xchg mov outsl call cld call loope mov dec jmp inc cmp (bad) mov es fildll xchg stos mov (bad) pushl lret mov and dec push adc andl ficoml (bad) (bad) jmp xorl aaa fisttp pop nop cld adc adc insl (bad) (bad) (bad) pushl sub or or mov pusha mov leave pop scas sti adc ss mov ja out adc out sub inc inc xchg sbb jmp xor dec (bad) (bad) (bad) call inc int3 pop xchg in lret subl dec or mov cmp (bad) (bad) incl loop push pop jmp pop jne iret inc mov test add cmp add fsts sar add pop aas mov jne jmp rorb pushl cmp jno inc clc mov imul fisttp cs fcoms (bad) pushl mov xchg int3 and pop or popf loope mov and fs icebp mov pusha loopne add repz mov sbb push pop ror push incb mov fimull add xchg mov sarl pop or aas push (bad) hlt sysret mov mov (bad) (bad) lcall imul mov cmp mov mov mov cmpsb lret mov call hlt and addr16 cmp sbb and es push pop leave sub sbb ljmp inc outsb adc xchg ret add xchg or (bad) (bad) fistpll sbb int3 mov xchg imul ljmp in insb xor aas lea setp add mov (bad) (bad) decl lds jne inc push sahf das mov out rorb out mov (bad) fldt mov add pop repnz sub adc push (bad) (bad) (bad) (bad) aas jnp inc mov adcl xor push xchg testl test (bad) int3 inc popa and (bad) call adc stos aaa or insb push push or out dec pop andl decl jbe jnp cld rol (bad) mov lahf shlb cltd in mov in (bad) jg fs clc mov add je inc and arpl pop aad test sbb (bad) (bad) decl dec out inc sbb push test sub add jnp movsl out cli push push gs (bad) (bad) (bad) ds xlat jno mov cmpsb div adc faddl cmp jnp sub (bad) mov subl int push ss lods sub adc mov ljmp (bad) es push jle (bad) in out xor flds rorb (bad) incl ret cmp insb inc fs pop xchg jne sarb jg add sbb dec sub in lods sbb cmp mov cli pop leave jge pushl lcall sub and sbb aam mov idiv call cld (bad) pop dec imul jae cs js adc mov mov ds insl push inc xchg repnz outsb lcall (bad) jg lret mov mov pop scas js mov mov mov pop cmp into mov cli push xor (bad) sub idivl or fwait jae push popf (bad) (bad) (bad) call cltd mov test xor jbe or pop lcall insb sbb aad mulb jmp rclb (bad) icebp sbbb insl sbb mov inc cltd (bad) cmp xor add test jge sub fistpll (bad) mov xor mov pushf shl mov adc mov into (bad) lcall decl ja enter pop outsl dec mov sub in cs (bad) (bad) fisubr mov lahf cwtl (bad) jb call dec cmp and (bad) (bad) (bad) call xor aas sbb sub notl rcrl cltd mov and push or sar cmpsl xchg repz mov mov pop movsl cs insb mov pop mov cmp ret loop cmp inc (bad) (bad) fbstp adc nop jg push mov rorl pushf xor lcall or test mov hlt (bad) lahf cs shrl ds jbe mov nop pushf pushl add (bad) (bad) (bad) in inc into in or mov leave cltd sahf pop and (bad) (bad) lcall mov cmp cmp xchg adc add jae iret inc jle pop inc loop loope (bad) (bad) (bad) pushl lret cmp lcall movsl sub mov inc or subl cli pushl cld or push add push xchg sub fnstcw jbe lods cltd xchg xlat lods incl pop jo loop into ror ds dec sti jno fcoms in push hlt (bad) (bad) (bad) (bad) mov sub jae mov pop add cmp fcomip imul mov (bad) ljmp cli (bad) movsb test jp in adcl push dec mov jne sub js repnz pop std dec mov adc pop stos cmp int add xorb (bad) incl negl mov push xchg into scas inc fnstsw ljmp (bad) (bad) ja es (bad) fcos (bad) (bad) call ret popf push incl test movsb out mov and out dec fdecstp es (bad) (bad) ljmp ror and add sbb or jg shrb xor loope (bad) (bad) js loop popf sbb push popf sbb aaa mov or lock (bad) ljmp or push mov jb loop inc add jmp ja adc push shll (bad) mov inc dec loop xchg mov jecxz lods dec mov jmp xor and jo scas mov addr16 dec cld stos ds js push (bad) jns nop mov cmp pop andb dec mov dec mov (bad) mov pop call divb mov aas sub push mov cmp (bad) jmp movsl repz pop lods xchg shr sbb sbb sub mov nop fistpl ss (bad) decl lock cmp cwtl lea inc fsubr jnp data16 call push fbld (bad) push dec inc cmpsb fnstenv fmuls test ljmp cmc cmp incb sub xor pop fucomi popf enter loopnew aam in inc (bad) aaa (bad) (bad) (bad) decl mov or lcall sbb dec mov push clc (bad) (bad) lcall shr add (bad) fist sbb push add push gs imul decl pop pop imul call test (bad) out clc mov stc xor jns mov sbb (bad) (bad) (bad) jmp adc movb out xor je (bad) sahf and cmp push jns enter sbb add out inc add (bad) (bad) call mov push ret insb mov ljmp pop mov (bad) dec pop push lods lret (bad) sub and pushf int3 ss sbb push imull (bad) (bad) xor jecxz jmp dec jp cli ljmp push pop (bad) inc and mov inc (bad) icebp in or imul (bad) ljmp xchg pusha ljmp incl add shll and fldt mov out (bad) (bad) lcall std mov mov jnp inc sub sahf mov ficom mov jnp (bad) ljmp xchg stos lods js adc xchg jo (bad) (bad) je das push dec rcl imul mov fnstcw in into pop pop fidivr (bad) (bad) incl mov lds mov std cmp mov ret js lahf decl inc pop jns loopne mov pop jmp sahf das enter mov (bad) (bad) pushl inc inc adc sarb jbe cmpsb sbb xchg cmp mov clc lods xor mov (bad) lcall imul dec mov cmp (bad) xor sub aas add sbb int3 inc ss mov pop xchg pop popa add mov loopne cmpl (bad) cs xchg (bad) (bad) (bad) ljmp aam and aaa jmp imul sub repnz xchg icebp (bad) jg (bad) aad push dec incb lds iret mov int3 leave hlt (bad) pop movsb xchg and subb mov lcall dec push (bad) (bad) (bad) fistp xchg iret ljmp inc aam and inc mov jns int popa int3 (bad) (bad) (bad) pushl sub ret incb gs sahf cs xchg mov mov fxch arpl (bad) (bad) (bad) incl enter xchg test cmc ja mov cmp and dec push bound (bad) lea lock and out xchg cld fbld testl push pop (bad) aam jmp mov push sbb imul popf mov (bad) ljmp mov sbb xchg pop repz pop or dec int xor call push fistpll loopne mov lds xor jb xor fs leave cmp (bad) pushl flds (bad) cmp ret idivb ljmp mov sbb or fs cs push sbb dec repnz pop ss add enter lock into cltd adc (bad) (bad) (bad) lcall imul sar (bad) xor cltd push push or decl push negl jbe or mov outsl clc mov pop inc sub adc push or cmpsl out dec enter (bad) (bad) (bad) in mov xor gs ss fisub nop sbb mov jl (bad) push cmpl (bad) (bad) dec (bad) cwtl adc dec rcrl jle xchg popa rorb outsb test sar (bad) (bad) decl mov popw cmp mov cmpsb add (bad) xchg insl mov ret lods stos lcall decl (bad) notb lock push jne xlat and inc (bad) (bad) (bad) lcall fs or sub shl out mov (bad) cmp mov call cs (bad) (bad) push movsl pop movsl cltd cltd jb les gs add jae test or lods es jbe (bad) sbb add lods push (bad) jmp and jo pop mov jecxz lods movsb ret add xor sbb (bad) (bad) mov add mov ja les or lea lea addr16 pop (bad) (bad) lcall jge repnz aaa (bad) lcall ds (bad) jne test shrb outsl push mov inc or inc sbb aaa jp xchg push adc (bad) (bad) (bad) push and cmp mov int dec mov int3 insl jno cltd or and add dec jecxz lock ljmp xor (bad) jns inc stc push xor lret ljmp cmp push and hlt movsl dec popf mov jb push xor mov dec mov inc imul and mov dec lods mov push clc call bound mov jle roll test mov and xchg cmp mov push lods leave xor fwait repz or sbb fucomi (bad) fild or int3 shrb xor (bad) (bad) lcall push pop out adc sub or mov pop add lcall or add add ffree (bad) mov inc (bad) xor call mov push push js (bad) lret pusha and xor scas mov adc in (bad) lock jae (bad) call repnz stos push pop mov outsl test inc mov pop mov insb pop xchg mov fiadd ret sar cmp jbe pop ds sbb pop mov test (bad) fsubrl add mov adc test push (bad) ljmp mov or cmpsb pushf mov and cld jnp ljmp and push or mov (bad) mov mov fcom scas fcompl (bad) fdivrl insl daa jnp ljmp ds inc sub sub push xchg (bad) into cmp jg add cltd test add cwtl xchg lods mov cmp (bad) (bad) incl mov inc mov cwtl decl push xchg cltd mov outsl adc cmp add add decl lahf loope rcrb inc inc pop cmp dec stos ds enter (bad) (bad) inc lds mov xchg push inc adc dec test (bad) jp and pushf int3 clc bound stos mov es (bad) incl add xchg mov jb pushf mov inc cmp popa dec mov push pop sub or adc sbb jg xor (bad) (bad) incl fistpll out (bad) xchg mov jb (bad) hlt rclb dec push xor sub cld (bad) (bad) push movsb sub lret mov mov stc pop mov xchg jmp ret decl lock enter enter repnz xchg movsb inc aaa xchg hlt stos pop jne (bad) jg mov sub addl mov lahf push inc orl (bad) aaa cld decl mov dec xchg repnz (bad) add lcall (bad) or bound movsb adc scas jb (bad) (bad) lcall imulb je loope cmp xor sub and pop ret out out clc (bad) inc sarb enter mov sbb cld mov adc sbb (bad) jae xor xor popa mov jne add (bad) push mov (bad) cmp cmp shr adc xor xor push dec sub push inc int3 jle jg and sti xchg imull (bad) ljmp mov push clc inc ja scas stos add fiaddl mov (bad) (bad) (bad) jmp sahf cmp mov sti es sub out out pop lcall (bad) (bad) (bad) decl (bad) xor cmc or push stc in sbb cld mov xchg xchg fwait hlt jo (bad) ljmp cmpsl mov (bad) fild enter hlt (bad) es iret mov (bad) (bad) push mov sbb add pop mull stos jno inc pop dec shlb ljmp inc adc lea loop ljmp rolb ds stos dec pop jae push in in aaa jo mov in addr16 push in pop (bad) (bad) (bad) jg fidiv adc lret cltd fildl clc cmp jne mov ja dec outsl push and pusha daa rcrb inc xor push rol rolb or imul adc and dec add (bad) (bad) (bad) pushl adc dec or test add fs aam or or into xor (bad) (bad) (bad) cli jno mov mov jp sbb adc test fcmovnb dec jg,pn ror (bad) (bad) (bad) pushl inc aad cmp mov jb lcall aad movsb pop es fist outsb xor xor sarb jb fistp lahf mov clc (bad) (bad) jmp (bad) jb movsb push mov ffreep jno xchg dec inc mov mov jo mov ljmp sahf shlb lods dec add pop movsb fdivp mov push stos out adc movsl stc xchg je jnp cmpsl push lret fsts nop pop (bad) adc (bad) (bad) jmp cmp lahf xchg dec or ucomiss jae push or loopne dec fdiv (bad) ljmp add test xor std sbbl mov lret lea xor (bad) in pushl lods add dec sub or push mov loop leave add cwtl ffreep jecxz pop dec call int dec (bad) pop jno,pt pop lds (bad) jg adc insb imul xchg inc lret cmp sbb adc mov pusha adc das lahf lods lret cmp mov mov mov cmp pop and push dec dec push or (bad) jmp lock in addr16 ss mov jg push mov and adc imul mov sbb mov ss mov pushl push mov fsubr jmp pop pusha ret es jge inc pushf data16 mov mov leave ret mov bound sub dec enter scas xor (bad) ljmp mov inc dec (bad) push ja inc pop sbb and jle outsl sub cmp ret fidivrl data16 movsb (bad) (bad) lcall dec scas xchg cmp scas xchg ljmp (bad) push cmp test dec add xchg (bad) (bad) (bad) jg dec enter pop subb dec out cmp aaa xchg push out jl add ljmp icebp ffree scas clc mov mov xchg jle call int3 add xor in and sbb pop mov insb xor popf add pop ljmp push pushf cli mov dec cmp add mov dec ds sbb sti cmpb in xchg inc adcb pop xor push psubsw jbe xchg sahf dec cmpsl xchg pop cld call push mov addr16 dec mulb sbbl pop mov (bad) (bad) mov push (bad) (bad) in lods xor in cmp xchg jbe sti (bad) (bad) jnp jp (bad) (bad) pushl xchg lds mov add stos stos ljmp mov call sbb (bad) (bad) pushl xor jbe sub pop inc data16 jmp or outsb out fdivrs insl or sub (bad) (bad) (bad) incl push rcr rcrl test hlt xor mov test jl dec xor (bad) (bad) jmp lock sub or or pusha andl mov outsb dec mov add sbb lret les adc fimull xchg cmp call loopne lods jbe mov inc int3 lods hlt adc ja cltd jle cwtl xor (bad) jg jle jle jecxz nop jne inc icebp cld xlat lds pop aad lock lcall mov dec orps add rolb in (bad) (bad) (bad) (bad) cmpsl fs addl inc sub mov push jnp inc cld sub mov pushl cld (bad) les cmp pop push jg push mov int movsl stos scas xlat arpl ds loope pop aaa fsubrs pop repz (bad) (bad) (bad) incl jb popa jp mov bound adc lods mov dec push incb std jmp (bad) fcomip pop jl mov inc enter lahf jo lahf mov lret pop fidivl (bad) pop (bad) (bad) jl into xchg sbb jge pop ss add pop (bad) (bad) (bad) (bad) (bad) cmp sub jmp and lret pop xor gs pop sbb jmp fiadd sub hlt push shrl nop sub test and (bad) (bad) incl jmp sub ss pop jmp and cltd xchg insb mov ret (bad) mov ds xor mov jl (bad) ja arpl (bad) (bad) mov or pop xchg sub test aam mov push scas imul mov push inc psllw sbb sbb (bad) (bad) (bad) mov ljmp xor or add movswl sahf mov stos push cwtl sub adc mov (bad) in in insl fwait jne cli xor movb adc cmp mov cltd dec std xor cmpsb sahf (bad) (bad) (bad) (bad) sti pop out enter inc mov faddl jae and dec mov fwait lea mov pop pop push cli jmp addr16 cmp ja lret sbb sbb (bad) (bad) (bad) (bad) incl mov decl xlat fsubrp adc jnp jnp subl (bad) jmp push sub js leave pop jne dec in loopne imul call sbb (bad) (bad) push les ss dec popf inc sbb ss roll loopne movsl cmpsb (bad) fisubr aad push jbe push mov std lcall (bad) sbb xchg add pop cmc (bad) jg lods xor jmp std lea sub (bad) (bad) (bad) inc into push in fsubrl movsl cmc in mov mov out (bad) cwtl int3 sub repz jmp or das xor or inc sub add fisub and das push ficoml jle mov (bad) push sti js dec jne sub mov mov in xlat dec mov push mov add (bad) jmp xchg mov adc int pop imul (bad) (bad) (bad) inc pop adc mov push sbb sbb ret xor dec loope lcall dec mov fwait insl lret arpl (bad) jb and pushf mov jecxz (bad) (bad) lcall mov mov xchg xchg push cmp adc sub dec cmp (bad) (bad) push mov jae push icebp lods sti pop inc pushf ljmp mov jno pop out pop clc decl push stc push out sbb ds mov lea xor jle add enter sarl add cmpsb dec adc pop jecxz cld insb hlt lds adc out pop xor stos insb xchg sbb or outsl imul pop addr16 mov (bad) call ret sahf lcall sub jle (bad) (bad) call lcall or cmp loopne push lock das mulb (bad) (bad) call lcall ficom push adc pop mov insb daa mov andl adc sbb mov add cmp addr16 push bound popf test fdivr (bad) (bad) pushl into je jp inc jo push cmpb jnp adc jns xchg sbb mov outsb imul jge pop in adc jns inc lock sbb (bad) (bad) (bad) call cld fcomip mov jg inc (bad) scas jge (bad) cmp jp dec into cmp cmp ss push push (bad) add push imull cld fsts jp xchg insl jecxz add decl and mov jno fcoms pop xchg (bad) mov test or push dec or lock jecxz mov sbb lcall and stos mov mov sbb (bad) (bad) (bad) ljmp xchg inc cmp jg dec adc std cmp mov loop add or pop dec xor repz push ds push push cmpsl dec ficomp adc sti sub cmp hlt popf cmp (bad) call loopne mov pushf leave (bad) ss xchg or sbb in hlt int3 addr16 xchg (bad) (bad) (bad) call rorb sbb mov xchg xor dec xor mov fimull call adc mov int3 mov ss (bad) (bad) (bad) and scas fcmovnb fldl and fcoms (bad) ficoml imul (bad) jmp stos ljmp test cmp jmp loopne xchg adc pop pop (bad) (bad) (bad) (bad) fsubs addr16 or and adc mov fisubrl stos test mov (bad) call sub aam stc inc shrb or (bad) ds (bad) (bad) jg sub sub mov clc outsl cmp jg clc mov xchg pop mov sbbl pop mov popf mov into jnp pop fdivp (bad) ljmp push dec repz (bad) es jnp out ds sub pusha adc in add stos jb (bad) (bad) (bad) lcall in xchg push mov adc jp pop (bad) adc mov sbb push jecxz in push xchg pop jbe mov add push mov mov jbe ja popf pop rcl (bad) (bad) dec (bad) xchg ds loopne (bad) (bad) incl push (bad) mov lret jge stc (bad) cmp in add jns,pt (bad) (bad) jmp add stos idivl and mov jmp clc out clc incl xchg jge fistpl ficompl loopne (bad) lock push js out add das pop jecxz insb inc mov dec inc es ljmp or movaps aad push xchg lcall xchg inc inc das cmp aaa and mov xlat hlt mov cld cmp sbb xchg mov sub inc in inc out inc je mov rcrb cs (bad) (bad) pushl cmp in sub lret dec icebp xor je scas test pop mov push test sar (bad) call xchg icebp stos mov lahf sub sahf pushf hlt mov mov outsl push test (bad) (bad) ljmp (bad) (bad) aaa pop daa mov jle push aam (bad) and mov iret cmp cmpl insb mov std clc mov xor mov push xchg jp adc pop push sbb shrb xchg sub xor push std test mov push (bad) push popf pop mov jns xchg adcb in inc push lcall push sub push inc mov inc lcall (bad) adc pop pop jno lahf ds xchg push cmp pop dec or test jge xor mov xchg (bad) loop mov aas push cld mov std out push loop or ljmp jg push xor js mov push xchg mov adc mov add pop movsl mov mov inc mov repnz sub (bad) (bad) decl xchg adc xor out xchg and aas movsl out into insb xchg pop sbb test xchg (bad) (bad) dec jae dec push xor pop push push lds imul pop xor xchg dec jecxz push (bad) fcomip pushl pop fs lock loopne sahf lahf xor cld dec movsl icebp jb aam lock int pop add decl jnp adc jae pop xchg (bad) (bad) jmp sbb cli ficomp fisub fsubs push pop jecxz lea scas mov jo pop insb lock (bad) mov outsb jae mov mov (bad) jg sahf jge xchg rorl aam in pop (bad) (bad) xlat mov (bad) movsb xchg (bad) (bad) (bad) decl notb lret push fwait pop imul jns xchg orl es mov sbb (bad) (bad) (bad) decl xchg inc sub cld push (bad) stos clc (bad) lock mov jmp push sti int push (bad) and fucom sub mov (bad) (bad) jmp test xor mov aaa iret inc jo mov dec sub mov inc mov (bad) push jmp inc cld fisubr fnstsw mov cli stc xchg arpl or mov xor js sub sar std (bad) in xchg adc stos (bad) jmp fcmovne imul pop xor aaa adc sub ljmp pushf test (bad) cld insb adc xchg or push outsl adc ljmp repnz cmp sahf or push ds mov push inc jl rclb inc xchg sbb (bad) (bad) (bad) jmp jbe jecxz lret xchg lea loope cli push mov sahf test fidiv add cli jg jge les mov call adc pop loopne insl mov (bad) (bad) ljmp and and bound movl push push xchg xor (bad) (bad) incl and popa push gs or or fstl divl lcall mov andb fisubr cmp mov xlat repnz (bad) (bad) (bad) pushl aad mulb dec inc lods push fistp movsb dec mov inc mov insb lret lcall (bad) (bad) ds sub orl dec mov or pop dec adc cmc adc lea (bad) (bad) pushl xchg aam xchg mov jecxz repz pop pop sub into mov sbb lcall pop (bad) insb xchg enter push xchg mov out stc push outsl test rclb test sub jle or (bad) (bad) jmp call les xchg iret repnz or sbb rcll faddp (bad) (bad) dec and jg faddl cld cmp (bad) sti test gs or hlt imul out sub mov xor add ret xchg push mov jns aas lods repz ret and add (bad) (bad) decl mov lods sub xor xchg adc mov aad loop,pt ljmp clc decl pusha (bad) mov lret nop jnp loope jecxz cmpb sbbl (bad) (bad) (bad) mov pop xchg fdivl and (bad) push cmpsb stc stos mov cs arpl loopne daa cwtl sub (bad) (bad) (bad) incl sub negl and mov adc add incl pop (bad) (bad) (bad) jmp xchg mov shlb mov aas lret sarl arpl int shlb iret lods ret gs jg (bad) cli cmp fs push (bad) pop cs les leave adcb and pushf hlt mov loop jae loope es (bad) ljmp outsb ret sub jmp push dec mov sar ret mov (bad) test mov xchg outsl clc (bad) incl jae test test popa int3 fucomi jae loop push push cltd mov dec cwtl adc cld (bad) and mov dec push lds (bad) mov lcall (bad) cmp mov mov jb mov (bad) call xor and stc inc enter subl (bad) lods decl pop sbb ror inc shll fbld and inc inc mov xor adc pop dec in sarb scas mov xchg ds stos es mov push cmc jg sbb xor cs sahf adc dec out in (bad) (bad) (bad) (bad) mov mov jmp jae inc mov inc mov or les std sub rol (bad) (bad) (bad) jmp xchg jp and inc cmp lcall xlat jl in dec dec sbb (bad) (bad) (bad) incl push stos stc mov add popa jp xchg push or lea ror fidivl xchg sti shll inc dec push out ds aad stos jecxz out mov or push xlat mov out movsb (bad) mov decl sub add pop mov cmp fcompl cld daa cmp add ja js jo idiv (bad) (bad) (bad) cmp or mov ss enter push mov cmp inc clc cli (bad) (bad) jmp lods (bad) rcr mov sti jbe mov jg adc mov lcall or mov dec int sbb cmp call (bad) (bad) aas das jb sahf mov mov push sbb repnz mov sub shrb xor dec mov clc aas xchg pop cmp outsl nop pop cmpsb jno bound stos std jl add mov sahf xorl inc push sarl mov stos mov call shll push daa add (bad) (bad) lcall outsb out inc cmp test sub out out int3 aaa pushf (bad) ljmp add dec adc outsl xchg push out ds xor (bad) data16 (bad) (bad) (bad) call mov sbb add adc add or xchg loop cmpsl clc pop outsl cld mov pop loopne sbb shl rcr mov in repnz xor and jp (bad) (bad) jmp rcll cwtl dec and into out mov pop xchg push lret hlt jnp dec fdivr ljmp mov mov mov cmpl jmp mov js xchg ss outsl movsl jns cltd enter mov cmovns mov aam jmp mov mov clc jmp xchg (bad) repnz jnp jge (bad) inc int sar out cmc leave push outsb pop (bad) (bad) (bad) call test pop mov ja jle inc gs rclb mov stos and cmp lcall xor xor xor andb (bad) (bad) (bad) fcomps push mov cld inc push jmp stc push int loope lahf repz add imul cmp aaa std incl das inc aas or mov jns cmp pop push std xlat (bad) mov cmpsb xor fadds nop sub jo push out test xor incl imul inc dec mov jg mov outsl sub mov add mov decl cmp pop sbb add mov (bad) xchg add out (bad) cmp adc pop stos jmp xchg divb add and js (bad) (bad) pushl (bad) in jl mov lods js xchg test sub xchg aas repz jns jecxz mov icebp incl aam out push push add mov in mov sub sbb test movsb rep sahf mov push cli xor rcrl mov imul sti popa cmp xchg popf pop cmp or gs xchg dec mov mov cmc lahf adc mov or fs aad pop ds sbb or call loopne mov mov gs pop lahf push popa mov adc insb and lahf addb (bad) call (bad) bound add jle push jmp stc or push (bad) (bad) (bad) mov push mov pop inc pop int3 stos xor fadd jmp repz (bad) (bad) sti and jg mov cs xchg out loopne popf mov mov call (bad) sbb (bad) out movsl (bad) cs in push add mov dec (bad) pushl push ss insb jns push or cmpsl cmp ljmp in test lds xchg pushf inc dec xor jns loopne mov mov lcall ret fcomip (bad) jmp or bound in in sub (bad) (bad) jg aaa add push mov mov pushf pop out mov jno insl mov mov (bad) cmp jl push sbb or xchg dec (bad) (bad) (bad) mov mov fs cld (bad) (bad) pop movsl push mov rorb or inc ljmp in (bad) (bad) (bad) lcall in inc das in out and lcall jno sbb cmc jae dec pop rolb (bad) (bad) (bad) (bad) cmp icebp xor cltd repnz and jge inc test fistpl fbstp (bad) (bad) jp xchg out fdivrs scas push push loopne sbb aaa jnp bound es cs sub (bad) (bad) (bad) jle jae adc xor cmp push jp test mov stos cmp daa and cmp (bad) pushl xor leave cmpsl loope sub inc fwait push inc loope mov cmp aaa (bad) (bad) (bad) (bad) jmp lret stos sub test andb std fistp inc cmc xor cld add je jg,pt (bad) pushl push xchg movsb clc hlt dec out xor repnz xor cmp (bad) (bad) jmp push std (bad) and subb push pusha fistl add dec lret notb add adc lret pop jns mov (bad) call xor adc and cmp push add aad jp imul jno mov notl (bad) (bad) mov inc jmp mov jg push or out push jno push fsts rol (bad) (bad) lcall cmpsl aad cmp sub addr16 scas pop mov loope jg (bad) xor aaa fdivs xor shll (bad) cmp (bad) lcall aad xchg icebp jp imul inc in sub (bad) jmp fist pop lods pushf fdivr xor pop pushf lretw (bad) sub push push adc aaa pop incl cli xor (bad) sarl pop insb xchg (bad) (bad) call add stos jmp cli jae stos xchg xchg movl jge jg push adc mov adc xchg jne lds (bad) (bad) (bad) out jns loopne pop jge fs xor mov jmp sbb clc aaa dec fcoms dec jg and or ljmp jo mov ret add fcomip call stos and js dec (bad) (bad) lcall ficom or jns mov cmp lock sbb lahf or lahf mov (bad) icebp mov movsl fistpl jnp push negb (bad) (bad) incl lds xor daa ds jmp or cmp mov out sar (bad) das dec fisub (bad) call (bad) cmp mov lds sbb mov push jecxz pop mov pop (bad) dec imulb (bad) (bad) decl jmp notb pop inc js xchg cli test jns les jb arpl xor (bad) (bad) (bad) (bad) jb iret mov push and mov mov clc fsubp jmp scas mov mov cld (bad) (bad) (bad) jmp test fs inc mov insb sbb mov out and jg dec (bad) or xor (bad) ljmp aad popl push add mov rcr push data16 mov sbb daa dec (bad) (bad) (bad) dec cmp cmpsl loop lds enter out pop or jp jp out nop sahf test (bad) (bad) (bad) (bad) jge adc dec cmp xchg jmp orl aaa mov repz jmp movsb xor or cli imul jns lret sbb clc lcall pop lret mov push (bad) ds (bad) (bad) incl pop adc mov loopne cs fwait jl repnz add pushf test adc pop scas cli (bad) (bad) out lds (bad) in out test stos ret pop xchg mov add bound xor sbb mov stos and incl outsb les sbbb dec or push dec (bad) movsl js sub (bad) outsl sbb inc fimull jo test (bad) mov dec push dec lea mov out aad in stos test push mov stos cmp addr16 (bad) (bad) (bad) out mov mov cmpsb js (bad) (bad) xchg lds ljmp mov (bad) (bad) (bad) jmp adc sub lock jnp in adc pop add pop (bad) (bad) (bad) inc sub mov pop xchg out or inc jo test adc and lods das add loop add (bad) (bad) fisttpll or pop mov mov ljmp nop fidivr cmp (bad) jmp dec lea add push inc xchg mov (bad) (bad) lcall ds lods mov jg mov sub dec pop add addr16 (bad) jmp mov mov (bad) decl inc push (bad) mov jle cli jmp insb add clc dec aam mov push sub jnp sbb (bad) (bad) ljmp dec jecxz mov mov adc fs int pop sub fimul pop ficompl (bad) push xchg sbb push inc mov scas mov mov xchg sub (bad) mov pusha lods dec in movsb (bad) cmc pop inc sbb sbb cmp js into push add adc (bad) (bad) incl shlb xchg mov cltd dec jbe stc out hlt stc dec lahf jb mov std jg xchg lcall mov clc out lds inc cmpsb pop adc xchg nop lock sbb adc mov (bad) lcall pop leave lock cmp inc jmp out jo dec mov inc jecxz push xchg mov (bad) (bad) incl cmp mov fst movsl add lret packuswb sbb (bad) (bad) jg in jge bound outsl jl or lret cmp fisubl lods ficompl jl (bad) (bad) call insb xor pop xor jo arpl pop clc pop fisubr enter (bad) int3 aas pusha mov in int jp repz mov sbb in frstor xor pop icebp cmp push dec sbb fs sbb std stos insb mov sbb incl sub (bad) das cmp pop dec test or lcall mov dec ds dec pop daa sub out dec ljmp jle mov adc pop sub dec adc push (bad) (bad) imul (bad) ljmp pop jno clc pop mov loope adc mov cmp sub pop popa nop or ja (bad) (bad) (bad) call orl or push jno into jg mov xchg dec (bad) (bad) (bad) lcall pop ss ja (bad) aaa and gs adc test pusha arpl sahf in das xor mov (bad) pushl gs xchg cmp xchg dec xchg sub jae test pop cli ret fwait and lcall cld xchg divb inc inc test dec fwait jno daa inc and xorb stc sbb jne les xor sub decl and or sbb add (bad) sbb jp insb fistpll sub mov arpl ret mov lcall nop (bad) (bad) mov sti sbb inc sub xor mov jecxz mov cmpsl inc xchg popa pop xor popa add (bad) es or (bad) lcall outsb out das jge add or inc sbb loope fiadd pop adc call hlt jne or sbb (bad) (bad) pushl mov and pop (bad) (bad) jge,pt sub lock and push sbb push enter adc movsb push subl add mov stos sub (bad) (bad) call sbb or dec jecxz loope jg in sahf test (bad) cmovae ss or sbb or in push out cmpsb inc push test mov js dec cmp lds ds and cmp push out mov pop (bad) (bad) es frstor pusha in das movsl pusha sar mov pop mov jno sbb insb jne jae push je mov ret or jns mov mov pop pop mov or call push mov cmp lock mov in push (bad) pop mov push mov mov mov roll pop or xchg sti fidivr mov ljmp pop push push push lahf popf xor mov xchg lods and pop leave cltd mov shrb cmp cmc incl sub test xor mov je jge pop dec xor ss add nop push aas test subb popa ds (bad) cmpsb dec push add sbb sub adc mov leave sar stos (bad) sbb insb jbe mul scas sbb and ja sbb or or (bad) (bad) jmp int add loopne cmc dec out pop sub test inc rcl call (bad) decl stos xor arpl cmc mov xchg call ficomp nop jb std or jae pop ljmp nop test fdivrp (bad) and out inc cmc insb xor (bad) (bad) incl push pusha push mov adc xchg xor aam and std cmp jne pop add in stc idivb pusha cmpsb mov pop and mov ret xchg xor std adc out clc addr16 push inc stos mov dec (bad) fcomip ja push adc jecxz jbe mov mov lcall push flds push dec inc pushf push movsb mov decb jmp add outsl cli (bad) jmp mov (bad) idivb arpl pop test push dec mov (bad) (bad) out sbb mov sub test inc adc add ret out add ds pop cwtl cs inc mov repnz roll (bad) (bad) (bad) (bad) cmp xchg popa mov nop gs lahf mov lock icebp cmp ret fidivrl mov and inc loope clc sub mov ljmp insb or push push xor subb daa pop cmpsl jp (bad) (bad) ljmp xor mov jae jo loopne inc cmp and pushl lcall repnz shll movsb mov test fistl cwtl stc test lcall dec or lret mov rorb push add mov dec (bad) xor stos push fnstenv negb lahf mov pop push inc dec lods (bad) sahf cmp mov dec pop jbe stos add ljmp clc repz push dec push mov test les push ret mov pop dec sbb mov mov mov pop bound (bad) (bad) lcall test aam mov inc lcall mov imul nop insl test cmpsb xchg adc cs jmp pushf sbb push push sar sub xor nop loopne out subb das mov jb inc jp movsl jns jl inc decl (bad) outsl shrb (bad) loope lods in mov jp imul (bad) lcall repz inc jno orl lods (bad) jo aaa adc push pop adc jnp stc int (bad) (bad) hlt ss fwait shl jbe push repnz mov mov (bad) (bad) (bad) decl jg or test out dec xchg pop sti dec push or pop mov pushl cli ret inc sarb mov xchg iret dec pop loop decl mov push inc test rorb or mov sbb mov out pop cmc pop mov xchg mov pop ret or or mov idiv (bad) lcall sar xchg sbb sbb pop int3 decb mov jo (bad) inc test (bad) (bad) (bad) (bad) jmp imul mov mov sub push or adc add adcb xor fcmove lock mov rolb mov nop inc cs jge (bad) pop inc (bad) mov mov pop jns mov push and or dec xor in or (bad) out mov jle sub inc outsb pop lcall hlt fisubr std xor sub xor push in mov incl cld and sbb mov fs pusha xchg imul (bad) (bad) pushl cld cmc iret sahf or movsb in fnsave sub cmp pop ret adc out cli stos (bad) aas fcmovu and mov clc mov sub mov fisub sahf pop shr mov push jbe and (bad) (bad) fstp xchg sar mov mov jbe push mov mov cwtl enter jmp es mov idivl push mov add popa sbb (bad) (bad) jmp insl imulb enter mov jmp int sbb cltd cmp cmp outsl xchg mov cltd pusha imul push push mov xor mov sbb cli mov cld cmpsl mov in fildl sysret xlat insl push scas xor dec out fimul inc dec inc popf xchg mov sahf (bad) (bad) (bad) jg adc mov mov dec mov cwtl test add out pop and mov push pop repnz shlb (bad) (bad) (bad) ljmp mov pop (bad) imull repnz inc lea and cs push or loope pushl adc jge jcxz pop mov (bad) (bad) lcall push pop sbb loopne pop lea or add test lock jno (bad) (bad) jmp and test fdivr jae je push sub push fs std rcrb mov xchg mov inc adc ljmp mov pop je inc je jle les repnz add cmp or (bad) (bad) (bad) inc lods xchg imull lock push mov pextrw (bad) jmp xor jecxz and repz (bad) incl (bad) lods int3 sub adc pushl pop ds mov mov jp hlt (bad) xor popf mov pop nop std (bad) (bad) call sbb mov test mov cmpsb jecxz fistp (bad) push fistpll mov jg push xor pop cmp xchg (bad) outsl cli (bad) cmp jno stos pop ret imul stos jmp shlb (bad) lcall data16 mov pushf push xor lret mov mov add and sub je (bad) (bad) lcall scas faddp mov mov mov or add (bad) call (bad) (bad) fcomip ljmp jge and loope cmp rorb mov and and lds inc aam dec daa repnz push lahf jmp (bad) incl xchg and into mov jns pop or aas outsb jg add and pop mov mov push clc (bad) inc subl (bad) sbb xor (bad) (bad) jmp test or jge push imul and xchg hlt outsl jmp xor addl mov sbb adc sbb pop cli mov mov pop push mov (bad) call test sti les movsb pop movsb es cmpsb push jmp push add lods cmp popa cld or xor xor ds (bad) dec inc lods push mov pop or sub mov push std (bad) ljmp fstpt out shl cmp cli pop pop and push mov (bad) sub mov les push sbb xor (bad) (bad) ljmp sbb leave fmul mov cmp movsl jecxz xlat lahf fstl mov movsb dec loopne ret arpl and incl sbb dec mov pop pop sbb pop jnp dec xchg (bad) ja je addr16 leave lea (bad) cmpsb in fiadd popf jg xchg arpl fsubr mov push lret add jmp jg sbb out sbb mov cld inc jecxz cmpsl sbb pop test xchg jg movsb jmp das sub jge push mov push (bad) (bad) (bad) call push mov iret sbb mov jp dec cmpsl dec repz (bad) pushf pop aad roll mov push movzbl insb and add (bad) jg add jecxz aad bnd ja (bad) stos bound inc inc sahf mov js jae push pop mov incl ret xchg xchg inc adc push or (bad) adc pop push ljmp xchg push pop inc enter (bad) lcall es call adcl addr16 ret and xchg or mov pushl pop ds es movsl cmp (bad) jmp sahf xchg fyl2x (bad) ljmp pop aad mov push rolb mov mov aad decl cmpsb ficomp dec das dec adc sbbl dec push cld jmp xchg outsl (bad) pop lret clc (bad) (bad) pushl mov push xor rcl jg xchg jne movsl das push and pushl mov (bad) arpl mov jns insl scas mov lcall outsb jle or lret daa and aam fcmovnbe pop stc cli pop hlt ljmp xor roll pop imul loopne ret or cmp pushf mov cwtl ja fisubr (bad) decl pop dec test fistp pop xchg push (bad) (bad) ljmp push dec dec lcall sbb dec ret mov ljmp les call jnp xchg pop xchg jo cltd ja out sahf lret xchg jo rorl into xor mov (bad) (bad) (bad) lcall xor pop push fcmovu adc in (bad) lret ret mov adcl lods out (bad) (bad) (bad) ljmp push jge in pop movsl jbe mov outsl sbb sbb (bad) (bad) (bad) (bad) pushl or push push aaa stc sub lods jle ret cmp hlt (bad) jb gs dec xchg xlat push or cli dec imul mov (bad) xlat and sbb push pop cli (bad) repz loopne loop mov (bad) fwait arpl mov (bad) pop std cmp cmp and jmp push test adc loope (bad) popf ret jecxz jbe fidiv call ljmp into in adc outsl (bad) popf mov and cmp sahf lods mov lods or pop (bad) dec aad dec mov sar (bad) (bad) mov insl imul or lret stos pop push ljmp leave dec mov (bad) jmp mov mov mov sub mov fisubr loope (bad) fbld cmp in xchg (bad) outsl imul sub aaa xchg (bad) (bad) inc jns mov (bad) repnz sbb clc cmp pop and scas push rcl cmp (bad) call call mov mov ds cli ljmp mov xor add xor in movb mov ljmp fwait shlb int int3 cmpsb push (bad) clc lcall aad xchg adc dec xchg shrl hlt inc bound test inc int3 ljmp inc lock in nop inc repnz add (bad) (bad) push mov movsl pop lds sahf xlat mov fsubs daa sbb jns mov (bad) (bad) (bad) incl test pop mov pop shl (bad) imul je ljmp imul push in andl (bad) aam dec jmp stos (bad) add inc out pusha lret push pusha pop add jg dec add loope scas jns (bad) ljmp sahf (bad) cmpsb pop or push mov mov insl scas jge xchg scas fisttp push or and lahf cmp sarl xchg dec jg sbb pop sub popa loop (bad) (bad) decl push addl in aas push jnp (bad) hlt imul enter pop lock jo jnp (bad) (bad) lcall das jg (bad) mov repnz in xchg les fcoms addr16 xchg and dec lcall scas stos add xlat cmpsb neg icebp (bad) mov mov aaa shll cmp sbb test or jl adc lcall mov insl movsb in cmp jnp lods mov mov cmpsl (bad) lcall (bad) sbb pop push jns mov ss test add int (bad) mov test pusha leave popf idivb pop fcmovbe test cmp (bad) lcall mov repz add mov adc pop pop test aas sub std icebp pop stc ja ljmp dec (bad) (bad) (bad) lcall (bad) xor sahf adc popf mov insl ss adc in decl push pop bound ret (bad) (bad) (bad) jmp xorb mov push rcrl arpl mov or icebp add (bad) (bad) (bad) mov fsubrs dec jnp push xlat mov push add repz fwait sti (bad) (bad) (bad) push jmp pusha frstor arpl imul mov jbe (bad) adc gs xchg outsl iret xchg (bad) (bad) (bad) call or mov mov cmp adc cwtl lock ret ficoml (bad) (bad) frstor pop cmp mov push aad jno jne stc divb push and xchg stos jmp mov mov lods cmp imul push or leave xor std adc addr16 fisttp sbb mov pop mov xchg jl (bad) pushl mov (bad) ss xor xor and push aas test bound (bad) (bad) incl hlt or pop iret sti adc adc jb shlb pop jo jp (bad) (bad) (bad) incl sahf movsl mov (bad) xor sbb dec add insb lahf push inc xchg fisubrl sbb rcrl (bad) fcmovnbe cli int3 ficom jg arpl lds in fcomps sbb mov cmp (bad) jmp mov idivl in repnz int3 test inc (bad) mov jne out xchg push call cld (bad) (bad) incl insb bound push xorl stos jle jl xor mov xor inc leave (bad) (bad) incl adc adc mov add lahf add inc rcr lea int imul hlt jmp and out push pop or cmp std (bad) incl out xorl cltd jecxz (bad) push mov jbe mov lods xor and (bad) lcall sbb sbb fisubr add push xchg cmpb xor test and xchg aaa lds scas xchg aas pop (bad) (bad) aas imul lret jne out enter pop push xor (bad) ljmp jb test (bad) add mov or mov mov and (bad) cli adc lds or stos decl clc add push jnp push (bad) scas push cmp xlat (bad) (bad) (bad) jp and mov or mov cmp inc xor mov fidivrl je xlat cmp and int push loope and out psrlq lock (bad) (bad) lcall mov es in mov adc aam jns push mov loop icebp jmp incl jl and stos addr16 das inc jnp and jg ljmp pop mov inc out xchg loopne ljmp cmpsl xchg repnz enter (bad) (bad) call mov dec int3 pop (bad) sbb sub movsb pushf rcr std (bad) jg and mov pop fs cs dec add mov scas fsubrs ds test loopne cmpsb or das xor mov int3 cmpsb cltd in pop (bad) int lahf sbb adc hlt pop popf sbb nop mov and xchg ja mov data16 fs (bad) (bad) (bad) call inc js (bad) pop cmpsb call mov add dec pusha adc mov push outsb outsl jge pop fcmovne cmp and addr16 cmp sbb cmpsb es mov loop out loopne mov sbb push test mov fdivrs aas adc dec pop (bad) inc mov push jb (bad) xchg mov repnz sbb and pop jae pop outsb jle inc xor lods (bad) and xchg lods xchg es (bad) (bad) jmp insb repz mov inc push cli repz inc addb insb xlat movsb jg (bad) mov and add push xor (bad) (bad) pushl mov jo add jne scas ss jmp and xchg popf (bad) (bad) (bad) push out popf cmpsl clc push jl fwait lea stos pop xlat and inc ljmp dec fadds add sbb (bad) lods ret dec inc cld mov xchg rol jb sub (bad) ljmp (bad) jmp adc iret into add adc dec pop mov xchg mov sahf (bad) (bad) (bad) incl jg or and mov adc outsl pop je test bound ret xchg sti (bad) insl adc (bad) nop insb sub ja adc mov mov stos add inc and (bad) (bad) (bad) cmp nop inc int mov leave out ret pop pop jmp cmpsl (bad) sti (bad) push popa xchg pop mov nop ret aam xchg adc fcompl and cmc test and xor cltd aas imul lods xchg pand cmpsb (bad) lcall das rol mov stos pushw inc ds (bad) (bad) dec ljmp cmpl lret shrl loopne lcall add (bad) (bad) pushl inc (bad) xchg or mov jge and clc cmp adc push loop insb pushl jmp out call mov call pop fyl2xp1 cmp (bad) (bad) (bad) ljmp push jl mov insl fwait imul jne jl mov jns js push mov leave insl (bad) (bad) (bad) inc xchg xchg lcall lret lock les je (bad) sub bound push jbe aaa sar xchg jge aaa cmc cmpsl ret cwtl inc (bad) aas rorl int arpl fs ja ret push iret lods sbb out (bad) (bad) pop push mov (bad) repnz and inc push dec ror inc add jmp and loope add (bad) jb jp add mov (bad) (bad) ljmp jne stc (bad) fsubl cli cltd fs or ffree jnp mov (bad) (bad) (bad) mov fisubrl cmpsl dec mulb dec dec mov call pop jp inc orl call sub sbb mov decl pusha pop xor mov push sbb (bad) (bad) (bad) fisttpll adc inc sub aad repnz jge cmp or pop mov (bad) (bad) (bad) push push scas sbb and adc adcl pop pop or les (bad) (bad) (bad) cmp fnstsw xchg jmp and push cmp jle mov add and fsubrs xchg pop inc ja adc fistp dec add jns incb call (bad) lcall cmp bound rorb add pop xchg sub push sub (bad) (bad) ljmp add stc (bad) popa mov add in or push or mov inc iret imul pop (bad) clc cmpsl xchg dec pop test mov pop xchg (bad) incl fistl loop (bad) xor das sar xchg or mov sub sbb (bad) (bad) ljmp adc pop or pop (bad) mov lods pop pop sbb ljmp (bad) (bad) (bad) jmp xor and sub or mov sub hlt not dec movsl popa push mov mov (bad) (bad) in shrb add cmc daa lcall iret jmp fwait push or (bad) (bad) mov ja test loop cmp push pop test test and (bad) cmc hlt add stos arpl das cli incl cmp les jb xor xor xor (bad) (bad) decl push sarb add inc push cli jne xor xchg (bad) aam cmp sahf pop push add (bad) mov call or push xchg stos (bad) (bad) ja test (bad) loopne xor cli shrb pop mov sbb (bad) call (bad) mov aad add adc adc cmpl repnz adc xor aaa jl xor adc ret push loop inc (bad) (bad) (bad) (bad) incl hlt adc lods inc cmpsl cmp movsb movsb pop and mov cmp or xchg xor das cmp xchg cmpsl push lcall jnp jno or or shrb or and (bad) mov push imul add repnz inc sub inc addr16 (bad) (bad) decl adc lods mov xchg fildll leave sub lock sub (bad) (bad) (bad) fistpll jmp lock adcl lock mov or xchg push xchg jecxz (bad) (bad) mov stos jo mov pop test inc aaa sub add lock loope incl pop lock cmc fidivl adc add rclb sub xor std incl mov mov lea into xor loope add int3 es push push aam xchg (bad) (bad) (bad) (bad) aas nop mov or sub pop lods lock cmc mov mov cmp add (bad) (bad) incl ja add shll int3 push in ljmp pop mov pop stc in clc mov (bad) jmp fidiv pop in and push adc imul rcrl xchg sbb dec aad cwtl inc addr16 dec adc js mov daa mov xchg shll xor add lcall pusha imul mov inc mov jne (bad) mov cmp dec std (bad) jmp and jle shll add xor ret fbstp dec sarb mov in loop ss pop (bad) cld repnz or sar loopne mov jecxz push decl cld mov and cmpsb xor ljmp add ret push call ret push and pop mov sub sbb lods dec jle mov xchg pop add (bad) (bad) cld ljmp xor adc inc sbb pop lcall int sub jle fsubl push in divb test cmpsb test call out test xlat pop mov mov shlb mov and lcall lock jno mov out outsb outsl das push (bad) mov mov mov movsb xchg incb call pop sub cltd imul sahf mov (bad) xchg pop sbb (bad) (bad) incl mov imul pop aas sub ret cmpsl sbb cmp sbb fmull (bad) (bad) ljmp push sub insl test jo inc sub xor mov jo pop idiv (bad) (bad) incl shrl lcall fsubl xchg lret loope addr16 ficoml (bad) (bad) (bad) cli jnp sbb hlt lahf cwtl jb mov mov stc inc or inc jle push pop int pop (bad) (bad) (bad) ljmp mov fcompl dec xlat in arpl jmp loopne xor jg cltd popf push mov mov add or (bad) (bad) (bad) jmp popf (bad) mov (bad) inc out mov sub int leave jl mov adc ss fisub (bad) (bad) incl fisubrl xor jno jge mov das stos leave imul sub (bad) pushl repnz stos xor dec xchg fdiv mov push bound test ds cltd xor fisubl jnp (bad) (bad) call mov arpl test xchg adcb jbe aaa pushf lods jmp test push (bad) (bad) (bad) incl test sarl (bad) cwtl imul or adc xchg fnstenv pop adc fs (bad) jns stos cmp pop mov jecxz (bad) (bad) (bad) cmp sub mov stos int outsl adc sbbl jno and (bad) decl and cld aas in mov das dec cmp hlt push lahf jnp fnstsw or call pop pop sub adc aas decl jbe lds and ljmp lods dec cld xor dec arpl ret mov push (bad) call push mov mov dec sti and pop pop jo xchg push (bad) (bad) (bad) incl sbb out push ja cs test inc les lret mov mov test xchg (bad) dec (bad) (bad) (bad) pushl sub shll iret fwait fwait sahf cld pop mov je mov (bad) fwait out daa and sub mov dec in imul pop (bad) nop sar adc sub add pop cmp in stos std sbb pushf cs inc (bad) leave sbb cmp adc cmpsb cld (bad) mov (bad) (bad) (bad) lcall popf fadds push cmpsb and jnp iret repz cltd xchg push lock lds rcrb push (bad) (bad) (bad) jmp aaa mov inc jo push jp lods xchg cmp jg lods mov mov adc idiv (bad) (bad) in pop and pop pop dec xor adc stos xchg out pop xor into push adc (bad) call iret push shrb pop enter test ficompl jg (bad) mov sti das pop rorb or roll addl (bad) lcall adc xor dec sbb sub mov mov test ljmp or push (bad) lcall mov mov and in (bad) (bad) (bad) mov cmp sbb inc movsb inc jp mov xchg pop jns push fs (bad) pushl push (bad) cmp inc insb inc jbe icebp neg xor jns jle xchg movsb iret sub ljmp mov ja gs sar jle lock lea inc ljmp xchg push test lock loope sbb and cmp adc push (bad) (bad) (bad) decl aam sub cmpsl addr16 fdiv adc add not xlat xor shll pop push (bad) lcall loopne sub cmp add mov out jnp mov outsl (bad) (bad) (bad) (bad) js fldt sbb xchg cmp dec sbb out sub or ret pusha mov (bad) (bad) (bad) mov cwtl or ds jge or cltd add pusha mov mov in cmc (bad) fcomip decl lret lret test mov dec xor sub xor and mov or jg push mov mov sti (bad) (bad) (bad) decl jno stc inc js daa es je xchg fmuls pop in sbb adc loop mov call icebp popa add mov shlb popa or ljmp xor (bad) sti xchg ljmp xchg sub (bad) stc (bad) (bad) (bad) mov push pop cmc push and daa popf ljmp (bad) fcomip ljmp repz pop mov push out push pop lea mov inc xchg call (bad) jmp in out sarl lret mov push dec or pusha jmp push xor ret repz ds out mov incl push sti adc sub out lret pop mov mov in shll lret out mov push xor inc cmpsl mov push dec xorl cmp (bad) add xchg jmp cli (bad) cmp jl pop mov adc pusha dec xor mov fdivr fwait (bad) lcall push or jle aam and jle xor xor (bad) (bad) mov sub adc mov or lods push (bad) jne inc pop mov pop push mov push (bad) (bad) (bad) call xlat js jl jg jmp int3 or add push (bad) sbb ds add (bad) (bad) jnp sbb add pop jp pop add jle adc (bad) (bad) (bad) (bad) cmp shrl xor xorl pop cld mov fsubl or shll dec push cmp test ret mov outsb (bad) clc adc push push and mov daa stos (bad) (bad) (bad) lcall scas fdivrs xlat pop fsubl (bad) mov jl loop dec jns inc repnz dec pusha inc fiaddl stos or mov fsubr xchg pop jo (bad) (bad) mov lret sbb cmp outsl clc jp mov stos jle aaa std jg addr16 js xchg rcrb cmp ljmp jp (bad) (bad) (bad) mov mov push adc jmp push jl daa push movsl adc les insl std (bad) push stos jle jp loop out mov inc int (bad) ja sub (bad) pushl or fwait cmpsl mov lods fnstenv inc inc add pop ret sbb cwtl cwtl fs stos test xor stc aas mov cld (bad) rol imul push push cmp (bad) (bad) jmp mov mov pop push outsl repz stos int3 dec pop in jg sub fldenv mov add jmp rolb das cli ret sbb pusha repnz arpl outsl clc cmpsb jg adc movsl or add bound mov enter sar (bad) call mov mov add shr dec js insb add aad outsb ret out adc (bad) jg (bad) fimull out repz pusha rclb add enter test repz dec add pop lock push cmp push xchg pavgw std pop das int3 sti or adc mov xor xor xor pop sub add and fistpll adc adc imul insb push movsb mov or and adc leave mov (bad) incl (bad) push or and jb mov lds mov je decb (bad) (bad) (bad) ljmp jmp jecxz push (bad) mov fisubr dec call and jg cmc inc nop mov (bad) push and adc ljmp decl ds jb jecxz and (bad) (bad) (bad) jg inc sarb mov leave ljmp xor jo out or in (bad) call cld popf das ds push or mov mov push arpl std mov fiadd sub dec test inc mov decl incl push inc int3 cli cli mov (bad) outsl xchg sar mov add mov lcall movsl arpl add sti cmpsl push push jb into sub testb xorl pop adc cs call inc les push dec (bad) cwtl adc outsl push fcompl (bad) (bad) incl dec push mov or fisttp stos sbb lock or mov imul lret sbb fnsave rorl lods dec push std xchg fisttpl cli bound hlt xchg mov pushl jb arpl jno pop sub notb out insb push enter (bad) mov outsl (bad) (bad) (bad) (bad) (bad) lea adc icebp xor jl mov jb psllq mov push stos icebp (bad) (bad) (bad) incb jno mov sbb rorb fdecstp xchg cmp inc sbb popa push push adc fistpll test cwtl mov cmc sbb out fdivl das call loopne push pushf xor sub mov movsl sar (bad) (bad) push inc sbb add push adc mov sbb push xor repz addr16 push jecxz in (bad) (bad) in rcll mov imull std mov sbb jle cli push or mov pop jp sub dec ja outsl sbb push xor cmp fidivr lock mov daa (bad) xor xor inc push out (bad) (bad) incl scas idivl loopne call mov mov push sbb push push jae std fcomps (bad) ljmp pop push in lahf aaa int push (bad) loope rclb adc mov push mov and (bad) incl hlt mov scas adc inc push mov andl xchg shl mov (bad) (bad) fisub aad outsb and adc mov int jno jmp xchg sub dec sub cmp fstps cmc (bad) incl lcall push fninit cld push jmp in je (bad) (bad) (bad) push cs sbb lods rorl sbb aas pushf mov iret pushf pushw cmp (bad) jmp outsb gs cmp dec psadbw arpl dec adc inc or (bad) ljmp sub or lods cmpsl or xchg pop xor out movsb mov stc ljmp (bad) divl clc js (bad) mov mov sti push out xchg jmp (bad) (bad) incl mov addr16 jne stc adc aam stos xchg mov xchg cmp mov xchg push push xchg push call (bad) (bad) (bad) (bad) fnstenv aas das jmp add lock push ret in daa mov int push loop (bad) call loopne and mov or fstp mov pushf or cwtl dec (bad) jg ljmp rclb or jnp pop push out xchg mov (bad) (bad) (bad) jmp push lcall mov dec cld xchg dec and stc adc in or xchg pushf lret sbb outsb mov mov ljmp (bad) mov and xchg xor mov adc mov leave in sub (bad) (bad) jmp (bad) cmp aaa xor xlat insl (bad) sahf loopne push movsb rcrl shrb cmp pop inc bnd out push cmc inc mov lret sbb es in in cs mov or jg sahf add adc sbb xor or clc lcall (bad) repz mov cmp test mov pop (bad) mov lahf in dec sti imul (bad) lds sar xchg clc cmp mov lcall inc hlt adc or inc fdivrp pop scas arpl bnd (bad) pushl inc dec (bad) xchg aaa stos loopne sbb jnp sbb clc sub (bad) into incl cld (bad) (bad) loop jb out sub add aam inc fildll jno pushl jmp jnp fisubl cmpsb std jne xor lret mov xlat out std xor push (bad) (bad) (bad) ljmp jmp scas shll mov lret movnti icebp mov mov sub lock outsb jnp push inc sbb jnp (bad) aam popf int or add xchg inc ljmp add push push (bad) (bad) (bad) lcall int3 adc mov mov jp sub lcall sbb push mov xor (bad) (bad) (bad) jp cmp push add dec imul std xchg adc inc lret cmc pop add pushl adc fsubrl ret mov (bad) (bad) pushl xchg mov (bad) dec insl movsb push lods (bad) cmpsl sbb push xchg mov push sub lcall push push ret push add (bad) (bad) (bad) aas or fnsave lret adc xchg push or test push cmp (bad) mov push xchg jb or mov adc xchg push outsb cs data16 sub (bad) (bad) jmp adcl and xor push add mov (bad) jmp mov stos adc sub and (bad) (bad) dec mov mov loop mov pop xchg test mov push xchg int lock std out jbe in int jg lcall (bad) out sub out in add out ds int mov (bad) decl pop jmp mov shr dec out cltd add fidivrl (bad) decl insb add inc push leave (bad) pop pusha add xor push bound sahf mov lcall clc fwait incb test pop or (bad) incb jbe icebp or mov ljmp in orl add movsb loopne fist hlt dec lcall ljmp gs aaa sub outsl cs out jmp or iret pop (bad) clc (bad) (bad) ljmp cltd and xchg (bad) cwtl shld dec sbb test les gs (bad) jmp add fmull adc inc mov (bad) (bad) (bad) lcall leave loop (bad) lcall cltd mov ja roll out std out lcall push fmul cmp subl loop add jmp sbbl mov ret imul aam mov mov mov xchg dec push cmpb or dec fildl cmp pop jne pop or lock (bad) fwait pop outsb mov ret iret repnz jge shll and and scas (bad) (bad) (bad) lcall adcl push adc dec lea pop dec movsb xor sar mov ja in jmp dec insb std (bad) decl pop imul lods xor je add adc cli xchg clc lock and or xchg aaa dec add nop (bad) dec mov ljmp pop adc pop adc sbb xchg in pop jle (bad) jg sahf hlt mov cmpsl aaa push divps xchg sub nop mov (bad) dec std push imul lret movsl mov cmpl mov (bad) clc addr16 aad pop jno mov mov stc jmp sbb (bad) mov pop pushf adc cmp or jl lods xchg pushl or movsl aad in frndint (bad) ficom jno out and xchg insl sbb jmp lcall sbb out mov stos (bad) fistpll jb loope aaa mov xchg lods mov cmp (bad) (bad) lcall inc mov mov imul cmp mov xchg xchg jge adc fs sbb sbb sti in xlat stos lds das fsubr (bad) in lcall jnp cmc and stos test add add (bad) or mov popf icebp pop sbb imul xchg (bad) xor pop jbe push (bad) (bad) (bad) inc inc rcll movsl and pop sahf dec cwtl mov (bad) repnz test mov aam ret sahf aad mov roll and negb cld mov jnp pop test pushf cmp fbld mov mov xor ds insb push mov ljmp cmc or mov xchg pop and movsb outsb repz (bad) (bad) (bad) (bad) ds cmp push or mov or rcl or out dec jecxz insl mov mov mov insb jno pop daa push rorl jmp jbe xlat scas loopne jo sbb aaa insb mov jge push (bad) (bad) jg mov pushf sub push hlt test scas popl add push aad lcall xchg push pusha fs rolb dec imul bound call inc ret jge les inc mov sbb ret xchg mov (bad) movsb ret add popf xor inc (bad) call pop adc mov subb xchg lods imul (bad) fbld jb inc mov push aaa repnz push das add pushf lea push pop cmp imul idivb (bad) (bad) (bad) mov cs xchg add mov das mov xchg sarl mov lods pushf fisubl lods jecxz lds dec (bad) data16 or (bad) pop add jne int pop (bad) mov inc fldcw shl cmp cltd pop std (bad) (bad) decl pop inc jmp insl xchg pop cmp jg sub test xor scas stos jg jecxz mov or loopne insb lret mov aaa stos mov add push pop xchg sahf loope pop out sbb jge inc push cmpsb add push lock (bad) repnz pop sub pushl mov std out inc cmp adc adc mov sbb (bad) (bad) inc insb pop repnz add enter stc push loope scas (bad) cmp and push fdivl (bad) pushl mov iret in push into inc lods mov jo (bad) jno (bad) sti ss decl fisttp adc inc aaa data16 push insb jmp sbb out or push bndldx cli enter lahf repnz jg test mov es sub jg dec sub (bad) lcall push test dec push inc mov (bad) stos (bad) adc adc push ss (bad) lcall ds mov rcl or lds aad divl int (bad) (bad) decl aam mov negl call repz xor repz (bad) ljmp mov test xchg push cmp mov jb mov (bad) (bad) incl jbe mov ud2 out sub xor jecxz cmp (bad) ljmp cmp sub test push xchg pop insb sbb dec test (bad) (bad) ljmp ret push out push sahf dec ljmp (bad) xchg mov cmp or dec je lret (bad) (bad) (bad) cmp xchg mov les out jno mov push loope rcr div push xchg pop push mov inc pop movsl test (bad) lcall into push or lods scas hlt std mov in pop cltd ret inc aas add outsl decl sub xor mov xor fsin call mov (bad) mov into mov out mov push cwtl cmp daa lcall pop ds inc cmc add jge mov out pop cmp int3 shrl xchg and cmpsl jle imul popa add push test sub fldt pop lcall cmpsb lods ds out jae in jg int mov jmp cmc jns out loope xchg adc and out lock inc push push sub (bad) (bad) (bad) jg jmp fsts add adc mov sbb mov sahf loopne ds xor std lahf decl inc sbb lea lds add sub adc sub (bad) (bad) pushl les inc and xchg imul enter sbb xchg jne sbb mov (bad) ffreep or inc dec and and jp mov mov xchg sbb jle xor (bad) (bad) (bad) decl jecxz movsb std mov xor xchg ror or popf jmp mov mov mov je (bad) jnp (bad) or push insl jb pushf inc in inc xor das pop int3 test (bad) (bad) (bad) dec pop mov xor dec or add or bound ja xlat test cmp (bad) ljmp dec shld inc jbe popa hlt add xchg fistpl jbe xchg sub (bad) (bad) inc xchg enter adc cld in repnz sbb cmpsl aaa xchg rcrl int sbb inc (bad) (bad) (bad) ljmp addl or scas lea mov imulb (bad) incl xchg loop das pop dec jmp sbb xchg test pushf (bad) cmc loopne aam loopne incl scas jnp scas and or repnz jne cmpsl and incb movsl (bad) (bad) in jl nop out add jmp ds jmp sbb (bad) ljmp aas dec les mov xor cli add jb iret jo movsb movsl adc (bad) ja sar call enter pop jp stc insb nop sahf mov clc scas (bad) (bad) (bad) (bad) fldl push xor vmovsd xor pop fnop xchg out ljmp lahf mov (bad) mov (bad) icebp push dec jle cmpsl (bad) jle inc mov sti (bad) jb (bad) (bad) (bad) lcall out lods jge lds push mov pop mov add sub mov pop sub (bad) jmp push add push push lret push inc mov out into mov xor (bad) (bad) (bad) call data16 adc (bad) sti inc mov cli add aas test out inc int3 lret jbe (bad) mov (bad) (bad) (bad) lcall mov and cwtl shl mov fsubs popa lock inc adc adcl in (bad) jecxz (bad) das mov add cmp iret sbb dec stos dec ret xor (bad) (bad) ljmp mov mov inc pushf mov push rorl fmull test (bad) (bad) (bad) (bad) incl mov add mov lgs pop dec pusha pop fsubl cmp push decl ret jns fstps lret and int push es pop hlt pop xchg fisubl push imul add adc (bad) (bad) (bad) call adc call (bad) stc fnsave les mov std add jecxz mov aas call (bad) (bad) (bad) cld mov imul int (bad) mull (bad) in adc jnp outsb (bad) comiss or jmp (bad) (bad) cmp xchg rcrb das dec insb push outsb push inc pop pop cmc adc jo pop or (bad) call cmp jp add pop sarb movb gs mov movsb (bad) (bad) in into movsl flds loope push fmuls lods inc jge (bad) (bad) out mov mov ret test (bad) jg adc xchg je cmp bound sar decl mov xor fs shll daa sarl pop or ljmp xor (bad) and add in call loopne or cmc loope mov out add adc out mov dec and cmp sub hlt (bad) loopne (bad) ffree cmp pop dec inc loop push (bad) (bad) (bad) dec js and pop out loop jl outsl pushw rorl xchg loope sbb xor call pop movsl (bad) (bad) (bad) lcall test cmpsb sbb std lods xor lods fnstcw data16 les ja add inc (bad) (bad) (bad) incl rclb inc jp sbb jmp mov aam push mov xchg mov pusha (bad) dec mov jo or jb stos popa (bad) push jne fstpt sti (bad) cmp mov and jp bnd sbb (bad) (bad) jmp dec stc fistpl in insb insb psllw jg xor out gs push (bad) xor lret adc imul sahf into sbb mov call test mov stos dec jno imul (bad) add decl retw rcll jmp pushf pop in jl jmp pop notb lock mov mov test (bad) (bad) (bad) dec dec sarl adc int3 mov sbb loope out mov pop xor (bad) (bad) (bad) (bad) cmp push cmp imul imul subb dec clc cwtl pop (bad) testb shr inc cmc (bad) dec push push pop in scas mov bound rcll cmp (bad) or fs xor pop dec mul mov and (bad) (bad) lcall mov dec or gs shll mov imul ss mov pop add mov push inc mov int (bad) incl xorl lret shl stc les inc aam adc dec lcall xorl push sub hlt adc adc pop loop bound sub inc (bad) mov hlt aas stc sub outsl xchg sub in cmp jmp pop pop sub (bad) fcomip (bad) incl js out or ficoml popf rcrl test fldlg2 adc sub (bad) jmp in (bad) dec negb ret and inc inc push mov adc decl insl jl (bad) je push xchg xchg mov push push imul shl mov add imul xchg add pop xlat push enter mov shrl (bad) (bad) jnp das ss fisttp repnz adcl jge pop pop and out cmpsl ret in (bad) (bad) call mov lods jo inc push pusha mov (bad) and (bad) push mov jmp inc xchg (bad) (bad) mov sbb ret addr16 dec in or sbb push out sbb jns pop aaa outsl mov (bad) ljmp jo add sti push ss pop push loopne jns pop jg jno (bad) fstl icebp cmp stos std shll bound mov push or jne adcl aas pop add adc decl pop imul (bad) (bad) (bad) ljmp adc and das scas out mov ja (bad) imul cmpsl iret jge dec jne cli add sar (bad) decl shll stc jl les sbb or pop insb js lret add (bad) (bad) decl fs je mov sbb or mov (bad) (bad) mov push mov call popf xchg aas rcll stc jae (bad) (bad) sahf jg mov lcall pmaxsw sbb test add add (bad) (bad) sti test push pop (bad) fcmovb test and sbb cwtl jmp fbld ds (bad) pop ret ss lret jae aam not jbe fnsave push (bad) (bad) call (bad) int3 mov push adc push lods data16 std sbbl (bad) fild iret icebp pop (bad) test mov push cmp sbb xchg mov fmuls jmp (bad) ljmp aas push inc in lahf loopne dec jnp xor mov inc inc xchg mov shll (bad) (bad) fimull push push in ds sbb scas js or js lret dec in dec test and (bad) mov dec enter pop cmp rcl imul mov int3 in jo (bad) incl or mov in int3 jb fwait and insb add pushf mov sbb shrb cltd mov (bad) (bad) (bad) incl dec inc xchg pop dec sahf mov (bad) out jo and jle jne add movsl mov rorb add dec mov push pushl lea adc (bad) and push jno outsb sub stos jbe xchg (bad) (bad) lock movsb cmp add test (bad) (bad) lcall and loop cmpsl mov (bad) jecxz test andb mov ficomp test (bad) (bad) ljmp adc mov int sub scas inc xor (bad) fs lret mov ljmp push xor cltd adc xchg nop push xor (bad) mov xchg mov mov jns lds sub in aaa xchg movsl jno (bad) (bad) jmp sbb jae rcrl shrb add icebp addr16 popf (bad) decl mov popf scas fdivs out pop (bad) (bad) (bad) (bad) (bad) jmp add inc mov push sub div mov add cld cmp jbe pop stc outsb (bad) out push mov mov cmp push fdivr (bad) fcomip pop out andb fsts and shlb and mov xor ret lret cld test stos daa ds (bad) (bad) out cmp push insb mov outsl fisttpll cs adc xchg dec subl adc addr16 fisttpl cmp movsb cli add mov incl sub adc adc sbb xchg (bad) pop cltd mov jb mov dec lcall pushl pop es loopne movsb mov jns movsb jb jl popf mov daa jnp mov nop (bad) loopne repnz ficomp std jmp xor and stc mov insb ds add sti mov ja inc daa test out (bad) lcall jle mov pop dec popa fild lret jmp push scas das xor (bad) (bad) (bad) inc jne mov and xchg stos and push out call sti adc iret mov and inc (bad) (bad) (bad) jl pushf sahf cmp ret rorb inc std es aas add loopne fcomip inc ficom xor (bad) pop rcrb inc lods (bad) decl repz (bad) cwtl lret stc or adc jp dec add ljmp or inc and ds mov and (bad) (bad) (bad) lcall stc mov xlat test or es popa (bad) shrl iret js add inc leave sub fwait gs ds jmp push daa fidiv sti mov out cld aad pop lds loop in xchg (bad) (bad) (bad) ljmp (bad) jl fldt aas sbb jo or add (bad) sbb push call std daa std lods aaa cld ja jb add lcall jge and insb cmp cmp (bad) jge xor ljmp lds sub cmp ror mov jecxz dec ljmp dec stos sub (bad) popa and lcall (bad) pushl mov inc cmpsb mov adc xor fcoml lahf inc mov incl syscall nop pop nop rorb es incl jno push out sub stc rcrb cmp mov pop dec add out xchg ss aaa sub mov scas je (bad) lcall repz lea xor mov xor push push stos (bad) mov add incl jno lahf (bad) ss pop sbb (bad) decl ds dec adc xor cld insl adc (bad) jmp sbb (bad) and push pop js add aad (bad) call mov fsts cs xchg daa int or jae aaa lock inc adc (bad) (bad) cmp mov test aam or mov iret rcrl xor incl dec je lods (bad) jns ret pop fs iret cmp cmpsb out es out lahf int adc cld and shl in jle out push mov ds imul mov lods push sbbb inc ss js (bad) out clc ljmp fimull cmp push aad hlt aam mov jnp add xchg (bad) (bad) jmp xlat sbb leave push imull push sub adcl (bad) ljmp push (bad) and loope pop pusha push movsb pushf test mov cli and mov ds and pop push jae fs pop ds (bad) (bad) jg and cmp mull or sub imulb int3 jb (bad) jg jg adc adc insb movsl ja (bad) xor call xchg (bad) (bad) (bad) ljmp xor jl mov ja lds push mov and jae fcomip (bad) (bad) ljmp mov arpl ret jmp call (bad) jmp (bad) xchg outsb add arpl stos jle mov push jge rcrb incb daa add jmp fimul cmp movsb icebp pushl xor incb jecxz sti pop arpl jmp xchg cmc ljmp scas cmpsl jnp in insb icebp xchg aam int3 push xchg push (bad) (bad) (bad) incl sub das or mov loopne xchg imul lds jp cmp mov and call out test lahf xchg sub aam push cmpsl xchg and (bad) cmp jecxz mov add test stc arpl lds cmc jp (bad) (bad) (bad) incl pop outsl ja mov ja nop add loope mov (bad) xchg cmp insl rcrb sar (bad) in jns insl sub xchg sbb inc inc cmp pushl aam pop mov sahf jne adc and lret and incl push (bad) stos (bad) and fnsave dec mov inc adc cmp pop lods jbe (bad) (bad) mov xor sbb mov push jle mov (bad) mov jecxz sub push cmc pop std jg (bad) (bad) call insb les pop push into add dec xchg fcmove cs (bad) sub lret subb (bad) mov cvtps2pd or mov lods add jae (bad) jecxz jle push lret mov rcll sbb dec loopne pushl in sub push inc aad (bad) clc lods repz add dec push movsb mov mov insl cld or stc mov popa (bad) jmp inc mov xlat ret (bad) cmp dec popa xor push adc xchg mov leave dec push xchg in jbe aad (bad) ljmp mov sub sti (bad) cli or pop jmp stos inc rclb (bad) (bad) (bad) mov sbb fmuls sub push dec jecxz jo adc pop jecxz (bad) (bad) jmp add outsl outsl dec dec add addl stos lret test (bad) (bad) call sbb dec rorb xchg rcl repz cltd adc (bad) (bad) (bad) inc pop addr16 sub das gs std xor das add xchg pop daa (bad) mov push cmpsb ljmp sub (bad) ljmp aam xor jae add call ds inc jo popa test bound lahf push pop aam aas xchg push xlat (bad) mov sbb pushl sbb inc imul rcrl loopne pop lea inc xchg insb xchg (bad) aad jmp fldenv sahf jmp ds sar call cwtl ds inc inc or mov adc jecxz lock (bad) (bad) (bad) jp outsb cmc jge iret dec popa jae leave (bad) fsubrl pop sub xchg test stos cwtl pop or mov incl or and jno daa pop cld mov (bad) pusha movb cmc inc push pop cmovp mov add inc push (bad) (bad) (bad) ljmp hlt cmp cmp xchg ss cli and xchg ret je cs sbb or xchg outsl cli sub pop cmc dec daa je jb adc bound fwait mov (bad) lcall inc icebp adc pop sbb push xchg mov push add jns aam mov test enter pop andl cld ljmp inc movsl inc xchg fidivrl stos sbb and in clc int les (bad) (bad) (bad) call lods incl inc or jbe popa xchg repnz scas call fsts or int3 ret sbb adc incl jo jbe and popf scas cmc pushf jo xchg lret in mov mov push push mov pop pushf in sahf int (bad) (bad) (bad) (bad) cmp push seto pop cmpsb push push cmp jo xchg (bad) mov into repz daa scas divl sub fwait insl jmp rol es xor mov (bad) jmp ljmp fs int3 (bad) into push (bad) (bad) jg xchg mov dec jbe sbb adc xchg (bad) mov push xor xor lret incl xor add out je xchg mov lds or fldl stc sub and sahf iret sub inc lret pop pop push xor sbb das and ljmp inc sub fidivrl (bad) jmp cli andb jge addb cltd cmp adcl icebp je stc (bad) (bad) (bad) incl popf je stos addl push inc push xchg call setno add (bad) ljmp cli mov scas sub mov sub mov shl fwait pusha pop mov or aaa add pop mov movsb dec push inc dec jae (bad) (bad) cmp inc sti jo xchg ret sbb (bad) jle jb loope pop mov popa pop xchg pushl cmpsb fwait incb jo aas dec (bad) lods sbb loopne ljmp (bad) push cmp fs out and inc adc in add dec out sub pushl cltd subl ss ljmp insl lcall xor inc dec xor ljmp aas lahf xchg mov dec dec pushf out rorl mov outsb (bad) (bad) (bad) inc mov insb jle pop and out sbb dec popl pop xchg ret sbb (bad) lcall mov into test push (bad) dec aaa mov fistpll leave sbb mov dec sbb cmp inc sbb jmp movsl mov sbb (bad) push fistpll sub int3 in xchg divb inc mov imul mov pop icebp call lret pop call xchg add stos pop into dec and (bad) dec (bad) (bad) (bad) jmp std mov cmp cmc scas bound mov sbb and clc mov add (bad) (bad) (bad) jnp fs test mov xchg stos and int3 jns out cs hlt mov repnz std and das stc lods or repnz xor cmp test fs fs data16 mov (bad) (bad) mov aas (bad) pusha and addr16 (bad) std adc jmp sub add jno cs movsl jp fadds cli adc push arpl ljmp mov add xor xor (bad) and or call dec stos int inc fcmove sbb pop sub push lret cmp mov push mov (bad) (bad) ljmp ret scas adc jo mov jmp dec xchg mov (bad) pop push popf (bad) jno decl fsubs inc mov repnz jno jge sub pop lret add (bad) (bad) jmp lock inc xchg cs shr mov mov bound push mov lahf push lahf (bad) (bad) (bad) (bad) jg push test xchg pop push inc and jbe mov push xor movsb das fs ljmp mov pushl ret push lea cs mov pop ljmp mov pop jns dec cmp and mov (bad) (bad) lds fwait (bad) (bad) (bad) (bad) fsts test push xor inc cltd je movsl jno push mov xchg xlat xor mov xor adc sub ret adc push push in daa jne nop sub stos push sub aam and call mov ret push sbb das sti iret cwtl mov in and fwait aam fild dec push fdivr add and (bad) (bad) (bad) (bad) jge mov sub cmpsb push inc adc loopne cwtl jns,pn jns repz adc and (bad) lcall lods ret shlb insl enter stc (bad) in (bad) (bad) (bad) incl das rclb mov lds cmc mov aam pop (bad) (bad) (bad) push push cmp ret pop push mov ficoml out mov sub add fnsave icebp incl xchg repnz push mov scas mov ljmp pop adc inc or test (bad) (bad) ljmp ds fsubp pop test and xchg adc movsb pop stos mov ficoml in dec (bad) mov int sahf cmp lods jae cmp (bad) (bad) (bad) out popf xchg dec xor inc pop pop xchg mov fwait ds pop imul adc (bad) ljmp sahf mov push gs nop (bad) idivb setl loopne sub orb call dec scas (bad) (bad) mov cld pop mov jge (bad) push nop or fwait femms in in (bad) (bad) (bad) decl mov mov aaa mov xchg jae test insl imul movsl pop xchg xchg or (bad) incl cld xor fsubs pop jecxz jge bndstx cmpsl jecxz mov mov push lret mov fstp sahf enter cmc mov insl add (bad) (bad) (bad) lcall scas xor or test lds pop mov imul pusha scas (bad) (bad) ljmp idivl jmp mov push imul and lret (bad) push add jmp push xor or in adc cmpsb mov or (bad) (bad) (bad) (bad) jg gs mov mov dec and mull or mov add push and das sbb sbb sbb and (bad) nop in stos mov out imul push sub clc xchg stos push fidivrl add (bad) jg rcr and sub gs scas dec jo dec push add or (bad) (bad) decl inc pop test mov sbb mov lods xchg aaa or jo pop mov sub (bad) mov into out ds into jmp jmp icebp cltd or mov mov ljmp pop icebp jg add jo xor int ror jo daa dec cltd incl hlt inc rcr cs ss and mov pusha mov jle (bad) (bad) (bad) (bad) pushl cmpsb jae into cmp push pop sub test mov pop in add (bad) ljmp mov out mov jns insl sub mov mov scas push nop test (bad) pushl push std mov push mov (bad) add add pop ds pushf enter adc jg (bad) jmp into sbb xchg fnstenv ja aas aam and inc mov decl lcall imul push add (bad) ja les xor subl imul idivl fldt incl ds mov arpl or rcrl ljmp xor mov orl jae xor sti mov add aaa dec mov out push (bad) mov cmp int3 scas lock clc lahf stos jns repz (bad) mov sti (bad) (bad) (bad) call pop and xchg cmpsl pop adc inc mov sbb lods mov mov fbstp fildll (bad) (bad) (bad) ljmp sahf (bad) ds jns lock push sub dec mov mov ret lods (bad) scas inc (bad) mov (bad) (bad) (bad) jmp scas cmc pushl ficoml mov dec outsb mov cwtl mov ret xchg lcall sbb xor xor fs (bad) (bad) jmp (bad) pusha popf mov xchg movsl cmp lea xchg adc push add cmp iret xor cwtl pop test dec scas xchg mov stos jp mov loope in fs (bad) (bad) jmp lcall and gs (bad) and (bad) cli notb xor (bad) (bad) (bad) cmp aaa mov (bad) (bad) icebp xor mov clc (bad) bound (bad) out fisubrl mov cwtl pop or and fbld loop mov (bad) (bad) jmp xchg mov movsl sbb fistpl mov mov push jns and mov sub mov mov pop add outsl or mov sti ja (bad) (bad) decl xchg lea mov adc lcall xchg cmp mov mov call lret inc cltd iret sbb mov jg hlt or call push mov or jbe mov int3 jne (bad) or pop popa mov pusha cwtl push sahf cmp insb cld xchg cs sar ret mov sahf shr push sti dec pop sub addr16 mov mov ljmp call aaa inc jl inc fcomip (bad) inc jae rorl jnp cltd cmp les and movups (bad) (bad) decl push sbb ffree ljmp push adc cli xor and pop fs push (bad) jns add arpl movsb fs push adc pop addl mov cltd lahf or (bad) (bad) (bad) in jmp pusha and flds decb xchg cmp inc inc sub movsb xchg ja add rcll dec lcall cld mov (bad) (bad) (bad) jmp sub jnp inc bnd lahf dec xchg shl mov mov loope sub (bad) (bad) pushl sub into sahf inc xor adc out mov pop in inc mov dec lds (bad) (bad) (bad) ljmp mov (bad) jmp sbb add sahf cmp dec lds pop (bad) (bad) (bad) (bad) jl popf mov push (bad) jnp ja push insb je dec cmp lret xor jg movsb mov std or sbb xchg and lods sub xchg push adc and push fnstenv shlb mov cmpsb outsl cmp sar mov dec pop sbb pop push cli out into loop,pt mov push hlt jne xor decl xor xchg jne ds (bad) je fimull jge push push xchg mov call std sub sahf ds sub (bad) imulb (bad) fnstcw xchg push jmp (bad) sahf mov (bad) (bad) mov enter jge call mov and sub insl mov (bad) cmc test enter or push cli (bad) (bad) lcall std ljmp pop xchg cmpsb mov hlt adc mov idiv into scas and movsl movsl dec mov mov add dec ja or push push fstpl (bad) (bad) incl jge xchg cltd stc mov outsb out pop rcr imul (bad) ljmp cmp push lock jecxz mov or and ljmp mov leave daa (bad) cld xor push repz mov or enter je xlat adcl pop add (bad) incl pop jns or int3 xchg add dec xchg les pop cmp enter and ljmp (bad) lods movsl aaa les loope lret and (bad) (bad) pushl bound pop scas movsl ret (bad) xchg daa xor push nop rcl and mov test sar and sub pop idivb dec outsb push loopne xor imul add (bad) jmp popf push enter cmpsl decl rorb in js jg fisub popa add daa inc (bad) (bad) pushl mov and call in jmp ds cmp (bad) lcall mov in mov mull lods mulb fcompl mov daa push push int3 sub pusha lea pushf (bad) adc pop push mov sbb ljmp cli es rcll xor addr16 push and (bad) out cli sbb ror imul cmpsb and movsb mov mov ljmp mov dec or mov dec sub push xchg (bad) je gs push (bad) ljmp or pop add xchg cmc cmp xchg (bad) cmp fistp cmp jmp mov loope cmpsl xor (bad) decl mov mov ficom shrd std inc mov (bad) fildll mov ds test mov jmp das bts insb scas add into shrb pop xor jg jo add sti test (bad) call jg cwtl shll mov pop inc mov (bad) out add enter add and (bad) ss mov cmp enter dec cwtl mov fwait mov out nop rorb int3 and lahf sub sbb mov ljmp clc jmp insl cmp rorb add dec aad sbb jle (bad) (bad) (bad) ljmp sbb jmp mov mov imul mov pop jo (bad) (bad) inc imul push cmc adc fstps (bad) fldcw enterw ret jno shrl xchg inc int mov dec mov push and mov adc cld mov outsb inc mov loope xchg ljmp fisubr xchg lea lods ds xor push js add (bad) (bad) decl or lea mov and pop or fist lcall orb clc pop gs orl fcoml repnz (bad) call pop mov test mov js mov add (bad) decl push int incl pushf (bad) insl fsubp lea std aad adc sub std ljmp popf ret ror pop jno leave jmp out or fild push xchg (bad) xchg dec mov aaa dec movb in jne (bad) es (bad) lcall ds jge inc adc js sar or mov (bad) jmp leave hlt dec mov outsb jae inc ret addr16 (bad) (bad) (bad) fnstsw jmp mov and sub aas jns fmul aas in repnz (bad) (bad) jmp insb out mov jg dec adc push clc sbb (bad) movhps movb inc cmpsb dec inc (bad) (bad) lcall jp clc sbb inc or nop mov test int3 sar insb cmc or (bad) jmp call mov cmc push jmp ret fs push add mov mov cmp sahf add divl jns clc pushl pop add out sub sahf aas (bad) cli aam or dec or inc (bad) (bad) (bad) call and mov cmp pop (bad) out sbb add mov xor (bad) fcomip jae test cld push arpl dec cmpsl mov out (bad) (bad) incl ds (bad) enter js lds inc cmp (bad) (bad) call push daa mov push shrb bswap sub xor arpl xchg loopne (bad) (bad) (bad) call mov js or daa shr pop pop test jnp cmpsb in sub scas jbe out dec in jne cld (bad) (bad) dec int push adc por pop jae pop je dec std sub and aas jbe ljmp adc out lock ret into daa movsb ret psrad push (bad) (bad) (bad) dec pop inc lock lods movsl or loopne int3 lret divb sub es test (bad) (bad) (bad) mov fistp mov and fidiv inc add fstps mov in push mov test sahf mov lock lock mov add pop add pop (bad) fldl fsubrl jg and ss push shr or push mov (bad) (bad) in arpl aad out (bad) pushf insl std jae fildll xchg push cmpsb fwait sahf loopne dec leave (bad) mov ja fwait imul fwait (bad) out out and jecxz sti pop mov xor or lock (bad) call lahf inc jae pop repnz pop imul scas xor (bad) aaa (bad) jg loopne outsl ds orb lcall lcall fs pop insl ficom test mov mov cli scas test aad in mov (bad) lret rcrb ds clc mov lcall fcmove ljmp lods out push mov add sub sub cmp (bad) (bad) (bad) decl aaa pop cmp js mov mov cld and (bad) pushl fistpl jno fbld scas adc sbb mov or adcl cmp mov data16 push test decl in loopne mov movsl in out jbe pop inc xchg cltd add ds ss jae iret inc mov or (bad) (bad) pushl pop cld test xor or shrl sbb push or (bad) in mov std (bad) (bad) pushl popl pop out outsl jns insl popf ss mov ljmp mov sbb mov fmull in mov (bad) push mov sub negb js add sub push lret in xchg xchg mov sub lcall dec mov dec and sbb (bad) (bad) incl ret jmp mov push jg add mov (bad) (bad) (bad) pushl movb ss mov mov cwtl aad mov mov popf fsubrl or or jmp xor sbb jle mov jg xchg xchg popf pop fldcw mov sbb sbb dec out (bad) (bad) (bad) (bad) in out mov enter repz xadd adc xor sub mov (bad) decl adc mov push jo mov push jne push addb int3 icebp (bad) (bad) mov frstor adc or repz movsb push (bad) (bad) (bad) fbstp mov cmc add (bad) insl mov fs in cmp pop pop xor xchg adc or (bad) (bad) jmp fstl sub jnp sti adc dec cli aad add pop push mov sub push mov (bad) out clc jmp fwait lret and jne cmp sbb call std mov fisttpll (bad) (bad) jmp sub jne xchg or (bad) dec fwait or arpl jle pop (bad) (bad) (bad) (bad) mov fiadd sbb adcl jl lahf mov mov xor (bad) (bad) lcall xchg adc out gs cmp or pop inc lea xchg pushf xor xor (bad) (bad) (bad) (bad) incl in in add cli cli bound jne pop sub imul adc gs insl scas dec mov cli (bad) decl stc arpl pop push in cmp popf jns decl popf pop pop (bad) (bad) (bad) call jno dec sub fcomps sbb outsb sbb movsl push test dec inc lahf loop sbb test mov (bad) enter aad cld sub and lret fisttp (bad) (bad) jmp mov lods or mov ss in outsb ds sub inc rorb mov daa (bad) jg lcall push push out insb pop rcrb std (bad) mov (bad) (bad) (bad) lcall roll sub enter and hlt or dec jo popf (bad) ljmp cmp xchg cs sub imul test dec and cmp lret ja inc and aam mov push dec mov xor cmc inc cmc (bad) (bad) (bad) ljmp adc lcall cwtl (bad) adc xor add or cld mov les nop loope,pt pusha outsb aam mov ljmp int3 loop adc lods es mov push push (bad) fbld rcll mov push sbb and (bad) (bad) jmp test aas pop test out pop pop push (bad) lret push or and sbb hlt (bad) (bad) in inc mov mov sub sub xor mov je dec (bad) (bad) (bad) (bad) (bad) icebp mov add rcl bswap mov mov push das cmp (bad) lea clc (bad) decl and (bad) push cmp rcll insb loop inc (bad) (bad) ljmp sbb lret push fsubs mov mov cltd adc (bad) (bad) push lcall call sbb ljmp das xor (bad) jg jne push inc and inc jmp fldt clc push dec ret repz insb push lcall mov inc dec sub mov add lret dec ljmp mov push pop inc jg bound stc repz add (bad) mov mov xchg popa aam call loopne adc shrb add pop inc rorb into arpl test adc mov std insb mov rclb dec dec sbb mov dec mov (bad) ljmp (bad) xor add stos dec push mov or je fwait sbb push scas (bad) stc into insb insb push test xchg in mov cmp (bad) (bad) (bad) mov mov or jno or cmpl and lods or (bad) jg mov or jne negb pop mov int popa fyl2xp1 jne sub dec mull pop insb xor xchg fwait jne push roll aam sahf dec ffreep repz dec aas cwtl cs sub jg mov xlat out pusha test (bad) imulb scas popa mov xor flds sbb ljmp dec (bad) idiv aam lods frstor popa ja shll jno dec or push (bad) jmp pop lret jbe pop cmp dec push inc xor lods sbb mov jmp push mov and dec movsb imul jp sbb xlat int or cli (bad) ljmp mov leave and ja aad in jns dec mov cli ret or (bad) push add push or cmp dec jle (bad) mov inc inc aas (bad) xchg repz in adc aad ja sar add lcall imul lret imul fsts outsl clc outsl adc jmp sbb aad js jle data16 jg (bad) pushl push mov std insl cmpl dec in sbb push loop inc out jns jg movsb push mov push das popf addr16 mov (bad) (bad) (bad) ljmp mov sbb xchg push lahf fiaddl (bad) int xor mov outsl inc addr16 (bad) (bad) (bad) lcall cmpsl (bad) xor mov push cmp mov (bad) (bad) in adc pop rcrb mov mov je jmp dec les daa push mov fsubr push push fdivp popa or dec ljmp adc ret clc cmp loopne xor or xor mov (bad) call xchg stos cwtl cmp jge mov lea mov adc lret (bad) (bad) (bad) cmp jle jbe sub sub inc movsw aam sub cmp lret (bad) ljmp push fldenv or daa dec or pusha test xchg xor xchg jno lahf arpl (bad) lcall push test lret or cmp outsb xchg rolb pop ljmp std mov test (bad) push xor jmp loop mov push outsl lods mov cmp (bad) incl and pop or inc mov or inc pusha roll popa pop xor fisubr incl rclb fwait dec movsb popl xchg lahf cwtl push lods mov cs daa mov jmp adc out push xor cld test (bad) daa add loop dec mov and call incl lods dec xor scas js xchg push out dec rol (bad) mov rorb mov jmp ja enter in movsb push cld xchg cli jno mov pop sbb mov lods sbb fwait mov push inc xor mov js mov bound pop daa add xchg idivl mov mov or jg aam std xchg out imul mov sbb test mov (bad) fcomip and xchg (bad) push mov adc test xor mov es ficompl divb pop xor (bad) jmp test in enter pop and adc (bad) aaa sar jns lcall mov shrb mov sub les or (bad) (bad) (bad) (bad) fldl push dec loopne mov rcrl jae icebp xor cmpsb iret pop and dec xorb (bad) out mov lds out sub mov aam cmpsb add ds lahf ss (bad) push cmp cmp xchg (bad) mov je xor (bad) call mov inc mov push adc jmp add loopne jg dec frstor or jo mov adc dec test enter (bad) (bad) jmp mov pop scas les xor sub lcall mov sahf or pop test (bad) (bad) lcall xor push mov test sbb cmpsl mov cli dec pushf dec sbb (bad) call (bad) aam push (bad) sbb (bad) (bad) mov mov inc into repnz xlat leave add (bad) (bad) decl cltd sbb sti cli xchg (bad) mov fist (bad) (bad) (bad) decl xchg fildll sbb inc (bad) push dec sub in scas in stc sub lahf (bad) (bad) (bad) ljmp xchg mov or jecxz test mov jp (bad) pusha out fstpt in aaa add (bad) (bad) decl mov jg pop mov mov xorl xchg cmp sbb or add lock (bad) cld icebp mull test aad es xor mov pushl bound jle lds outsb fisubr adc push xor mov pushl mov cmp adc xor xor aam jl mov aam adc (bad) pop cmp jb dec out rclb add inc inc dec mov xchg mov cmpsb cmc mulps mov (bad) xchg pop xlat add ljmp inc stc jmp sar xor out mov jbe sahf sbb outsb clc xlat lock movsl ljmp call jmp sbb jmp push or pushl sub imul ror (bad) data16 or sbb sub add mov cwtl mov lret cmpsl enter aaa pop bound arpl popa dec adc cmp rol or mov mov adc mov aad sub or (bad) lcall ficom xchg cmp push (bad) repz cwtl dec fwait cltd pop lock (bad) incl inc stc stos fsubl dec fimull pop mov out movsb mov push fcom fist outsb out ficomp pop mov jg ljmp xor push sub loope (bad) xor aad pop std dec mov push mov push jg fidivrl push cltd jnp sbb mov mov mov popf inc mov adc jge push xor sbb icebp and imul pusha push sar lcall fdivrl out (bad) dec les mov xchg insl cmpsl mov ret ret jp mov mov jg shlb (bad) (bad) pushl cmp test pop inc push sbb adc jl jg xor data16 lock (bad) (bad) decl shl xchg sbb int (bad) mov (bad) (bad) mov out and (bad) roll lret xchg push ss cmp mov mov stos add decl gs sub jb hlt shlb int3 mov inc push fisttpl push std incl das lret add xchg (bad) fmuls (bad) (bad) fisubrl xchg mov (bad) decl scas ljmp dec gs ror test xchg faddp pusha lret test sub xchg inc in (bad) mull dec or push scas ret jmp (bad) jmp testl orb out out and incl cltd rcll cmp or (bad) aaa out xor incl ljmp fwait pusha adc fcoms jmp movsl insl cmp lcall jmp inc push (bad) mov lret rorl call pop cmpsb jmp lcall dec mov and mov and arpl xor dec adc incl les (bad) (bad) (bad) mov ret lret ja test int3 cmp daa test hlt pop arpl jbe sbb fcoml lods int3 mov mov xchg jmp fisttpl (bad) (bad) (bad) pushl inc inc xchg jl fsub xchg mov add adc clc jno sarb lock mov ficompl xor mov idiv mov pop (bad) sar (bad) (bad) (bad) cmp adc rol cmp sub dec add test sar add test jno test ret or js mov mov dec or push (bad) mov dec (bad) cmp decl leave in aad add (bad) xchg xor push lret cmc call gs cmpsb icebp jb mov pop js lcall push ds cmp mov adc or stos jl jecxz jne out push sar cmc mov xor in ret out and rep xor jmp inc shrl (bad) cmp xchg int3 add call xchg ret loop xchg add (bad) (bad) lcall mov or fnstsw and sbb loope repz pop cmp (bad) (bad) lcall add mov int add stos mov jo dec dec pop cmp cmp mov adc (bad) (bad) (bad) pushl lods scas repz pop inc popf rcll fcmovne xchg pop call sbb (bad) (bad) (bad) pushl sub enter jo es inc xor mov sti das cmpsl (bad) (bad) mov and push test (bad) or inc faddl (bad) (bad) (bad) fdivrs ror xchg fsubrl fldcw fdivrl jecxz call das cli call inc cmp shll fmul jge loope loope fidivrl mov push mov incl and js mov sahf mov loope xchg sub add fnstenv icebp mov sub mov aad out xchg fldt fcoms (bad) loopne mov icebp dec pop roll cmp (bad) incl cmp or js repz add inc mov cli pop fldenv (bad) (bad) (bad) lcall mov mov and pop push inc xchg lods inc loope inc (bad) in push std (bad) (bad) lcall lea jl mov push fstpl mov stos jg sbb (bad) test bound adc and icebp add (bad) pushl mov stc in push fiadd repz decl xchg ret pop dec andl dec pop dec jo shl fisttp (bad) (bad) (bad) pushl out adc add fild loop aas pusha popa and xlat mov ljmp repnz ret mov mov movsb add push and movsb ds (bad) mov loopne dec cmp sub insb xchg cmpsb inc mov dec adc int3 sbb (bad) (bad) pushl insb xlat add adc sbb cltd cmp mov sub add dec add and xchg test pusha push mov popf mov mov cmpsb xchg dec (bad) outsb ds jns xchg adc (bad) (bad) (bad) ljmp dec inc (bad) mov pop loop (bad) xchg push in add xchg aas in pushf push add lock in mov dec cli decl and movsl jecxz (bad) jo jne push (bad) (bad) (bad) (bad) mov fldpi enter mov (bad) mov ret data16 cmp fwait aad push incl push fdivl push je cmp mov inc sbb adc (bad) or mov add add daa pushf shrb (bad) (bad) (bad) (bad) ljmp clc lret fucomip push pop dec or and mov leave jb push loop sub jne cmc ljmp lods jno and lret das ljmp stos jae cs (bad) decl xor or pusha enter in lock (bad) (bad) or sbb xchg out hlt aas in movsb dec xadd and or scas sbb into or sbb (bad) (bad) call fstpl cltd test jb sahf jbe mov dec push int3 arpl (bad) incl pop cmpsl sahf cltd mov stos std xor sbbb pop (bad) jmp cmp xor ds xchg dec sbb mov dec or xor lcall aam decl mov (bad) out fidivr add sub stos pushl ljmp (bad) sub dec fcmovnb mov rorl jmp aam (bad) (bad) mov pop xchg dec dec cs mov sub movsl mov (bad) (bad) (bad) ljmp (bad) mov loop push push xchg cmpsb or arpl and loop mulps negl push mov mov fidivrl das or mov scas imul mov ja shlb das and (bad) (bad) (bad) incl mov xchg cmp mov adcl in xor mov fmulp jae sar (bad) (bad) jle inc xchg sub sbb in and push imul mov and jmp dec jp adc or loope cmp decl lret test (bad) aad jl cwtl (bad) icebp test imul jo (bad) (bad) decl mov xchg sbb outsl mov shrb cmpsb cli mov cmp dec (bad) in inc aam mov fistp push inc sbb dec stos lcall mov stc hlt and adc (bad) ljmp pushw or orb pop adc jle add sahf pop adc and clc mov ret js movsl (bad) (bad) (bad) incl das lea (bad) jb (bad) mov jo,pn stc lret icebp sbb imul xchg (bad) (bad) (bad) lcall fsubrp jmp mov jmp xor jg xor in and (bad) in es push sub inc pop sub adc stc xor fadds jbe mov aam cmpsl push sub pop mov mov lods in je js mov pop aad mov sub fcomip pop into je (bad) jb jo shlb je and out inc and testl or mov xor add or scas lds xchg ror adc cmpsl scas cmpb or add fmuls rcrl (bad) and jge (bad) (bad) mov pop into arpl cmpsb mov adc inc xlat arpl lock (bad) call inc (bad) jl push in xchg leave adcl fistp fsts or ljmp pop (bad) lret inc icebp mov jg shl jg das cmpsl in test pushf mov (bad) (bad) ljmp shrl lds je inc sahf jns mov aad xor xor dec sbb xchg adc mov (bad) (bad) mov mov cli out add out imul (bad) (bad) pushl rolb clc pop inc lahf stos les ret lcall outsl sbb dec push mov (bad) (bad) pushl add iret push es mov sbb pop push add xor mov ss (bad) push imul into in mov push add jmp jae (bad) (bad) call adc lahf push mov pop sub into xor mov lods adc mov cld sbb and pushl add enter add lcall mov es and jp dec jne mov call cmc les or sub mov push in not ljmp cmpsl mov cmp scas push or clc pop cmp repz aad aam test jp jno rolb bound (bad) jnp aad mov das orl stos mov pusha adc (bad) sti inc push dec inc xor lcall movsl xor sub cmp cltd inc js test es testl jb jle lret (bad) incl cld (bad) jns in xchg sub dec fcompl push sti mov (bad) (bad) (bad) jmp mov ljmp xorl adc jns (bad) mov fwait or cli adc and out clc (bad) fidivl cwtl push insl dec adc or (bad) lods adc fisttp incl lcall hlt mov decl add xchg mov (bad) and sub xchg (bad) (bad) (bad) mov mov jns dec jmp popf stc jmp pusha jne sub xchg inc cmp insb (bad) ljmp rcrb vmovd (bad) sub subl sar subb js xor mov lahf out or (bad) (bad) (bad) jmp mov les push sbb nop insl test mov lret out movsl or std push push sar nop cmp lods fildll sbb roll decl rcrb test icebp jmp dec leave xor adc adc sbb sub xchg pop out test inc mov push and ret (bad) (bad) (bad) call xchg outsl test xchg lahf enter iret lods push push jae xor inc jecxz mov mov loopne (bad) lcall mov push rep cmp mov sub enter es xchg mov sbb or lods sar fild pop ds hlt seto jb scas (bad) (bad) (bad) jmp jnp mov xchg (bad) mov jle jb test mov dec icebp xor repnz cmp (bad) lcall stc xchg lret cmp inc xchg xor in fs or in mov adc pop cli cmp ljmp inc mov cs clc mov sbb xchg push sbb inc mov add (bad) incl les into adc sub inc cli or pop pop pop je xor std xor jp cmp (bad) ljmp jno sbb fs jne push int adc inc mov jb add iret jno (bad) (bad) (bad) (bad) fldcw aaa inc cmp (bad) jo fs mov xor fnop mov out (bad) (bad) (bad) ljmp lret and sbbl mov arpl lds mov lahf gs mov (bad) lods insb xlat je ret aas imul lcall dec mov (bad) mov push sbb sarl jl in enter (bad) call into out arpl inc pop or mov pushf stos lret mov incl mov xchg xor mov shrl fbstp add sub mov (bad) (bad) call jp mov (bad) sahf cs jo sbb lcall xor repz idivb lods mov or iret cmp mov sub sbb in mov push into lods push nop jbe fucomi movb dec or ljmp dec mov mov rclb cmp or (bad) adc sub pop xchg pop test cwtl dec dec jmp dec inc decl cmp jbe pop in imul fisub or (bad) inc popf imul jg ljmp or jl test mov cmc (bad) fimull pop (bad) (bad) (bad) call sbb aad je mov add jl ficompl jg sbb xor (bad) (bad) (bad) in pop les adc sarb mov (bad) mov push jae notl sub push add dec (bad) (bad) call test xchg push push sbb adc movsb pop jns ljmp push add (bad) lcall cs push or test push xchg jo and ss call ds sti outsl xlat test inc bound sbb jl,pt cmp loop ljmp clc xor pop xchg add lods aas arpl mov mov (bad) out (bad) jg loopne mov pop (bad) xlat jnp inc icebp iret mov sbb mov std decl dec (bad) pushf and sbb mov inc movsl pushf xchg cmp sbb sub ret dec sahf jl scas outsl push sub (bad) (bad) pushl xor jmp jb sub sub or (bad) xlat call clc insl mov lahf sahf scas lds (bad) (bad) (bad) in pusha adc jb xlat pop sbb ret movsl (bad) mov ds aam incl sbb je aas jno daa dec in clc lea cmc pushl adc xchg jl add je xchg clc add (bad) fucomip movsl jno bound pop aas fcmovnb int3 movsb mov (bad) (bad) call dec and lret jp clc dec loopne subl mov ljmp sub jae (bad) mov test out push das push stos sub loopne and dec mov jg (bad) or fisub lods pop (bad) (bad) ljmp mov inc mov xchg loope notl out jge push jle or adc sbb incl and lret push (bad) frstor call mov xor mov add scas (bad) (bad) (bad) lcall fldt std aam jge mov push adc push jmp dec push shrb xchg mov jmp pop hlt fwait fwait mov fbld and push fbld add sbb fidivr pushl jecxz xor push dec mov push mov add js xchg sahf push (bad) (bad) jg mov adc enter ficom push push jbe fwait sub (bad) (bad) ljmp adc shl fdivs incb and pusha insl (bad) add test fwait inc ret mov cmpsb call push (bad) cmp dec push xorb sub (bad) (bad) dec (bad) in mov sbb pop xchg or fldcw adc and or es (bad) (bad) (bad) (bad) fsubrs jp mov mov pop xchg mov gs aaa add stc xor (bad) (bad) (bad) fstpt adc rorb mov jns cmp push push fcmovnu les data16 ja adc test pushl mov hlt imul ss pop jbe aad loop push (bad) (bad) mov sbb out lret and inc jb xchg xchg lods (bad) (bad) (bad) (bad) cmp fdivl jo stos adc mov jne mov pop or mov adc loope sbb lea sbb jnp xchg pushf andl or pop (bad) std sub mov cld (bad) (bad) cmp sbb loop cltd jno cs xor jg adc pushf adc cmpsl or jb pushf outsl xchg fwait (bad) (bad) incl es sbb mov or push or ds dec pop jo ds xchg (bad) incl fmuls xlat bound mov movsb loop popa mov gs dec sub mov repz dec imul cld jno je (bad) (bad) (bad) pushl arpl fsubs cwtl (bad) lds das (bad) out xchg aas sbb stos xor fldpi es movsb loopne mov decl mov lret inc mov xor add jg pushl div imul idivl ds fcoml movsb ss sbb (bad) lcall (bad) pop out mov push repz fidivl or jg sbb xchg ret enter cli jmp add xchg mov ds mov and pop jg inc cld scas ja rcll repnz addr16 incl lahf add sbb std cld leave cmc out lret clc psubb mov cwtl (bad) call pop rol and add iret dec data16 (bad) incl mov jle dec and movsl clc das and nop inc mov (bad) (bad) (bad) pushl or xchg xchg arpl test imul xchg gs movups outsl (bad) (bad) (bad) decl std rcrl inc jbe pop jmp enter (bad) mov xchg arpl adc (bad) (bad) lcall fs pop inc or fcoml repnz cmp test pop fistpl or (bad) (bad) jmp jecxz dec sub je or cmp jno fcomps add push std jno mov bound (bad) pushl xchg dec xor (bad) pushl lahf or adc mov pushf sbb (bad) (bad) (bad) dec stos cmp mov pop int mov and jbe mov push and outsb cld xor xor pop mov (bad) jmp sti mov or es (bad) (bad) mov cmc or dec xor push add outsl pop jae imul inc data16 int3 (bad) (bad) (bad) cmp test cmp js leave popf stos xchg mov idivb (bad) (bad) (bad) decl nop testl jge dec mov mov push add (bad) (bad) incl aad cmpsb aaa push xor and int3 into mov movsl incb pop bnd lods leave out jnp (bad) (bad) jg das idivb sbb popa xchg jmp aas movsb inc loope outsl pop cmp cs fcoms lock inc push xchg ds (bad) pushl xchg push mov sarb int cwtl ds mov popf bound add icebp ja aaa sahf xorl mov push enter ret and pop and xchg clc lods js jg (bad) jg mov fimull fimul les pop ljmp (bad) (bad) (bad) mov xlat iret orl movsl pusha or ret std sbb cmp out mov add test push push mov cmp mov aam cld adc xchg push xchg ret setb (bad) (bad) (bad) (bad) cmp jg inc lock in mov popf and cmc dec fdivs sbb popa ja clc sbb iret xchg leave mov (bad) call or aas mov xor xchg mov xchg rcrl leave xorl lock (bad) ljmp adc (bad) pop std mov (bad) loopne inc iret dec je push inc cmp xor fild or shlb pop lret shrb mov cmpsb jne jo movb imul jg (bad) ljmp add leave lock push push ds lret (bad) (bad) lcall pop lock xchg cld data16 sahf xor push scas loop pop inc xchg call loopne icebp movsb lock lcall daa loope pop adc cmp (bad) (bad) in mov sti std push sbb jae mov sbb fdivr add mov mov aas imul adc mov jmp mov jb mov xchg dec sbb (bad) jno cmp pushl rcrb cmp and push jecxz int3 mov (bad) fcmovb jecxz daa cwtl (bad) (bad) (bad) (bad) jns push sbb mov jns add je dec mov push pop ret in sub (bad) (bad) aas ret cmp call stc js test pop movsl inc sti push sbb fist inc push (bad) (bad) (bad) decl lret loopne enter xchg sub rcrb or icebp jp scas inc pop inc add (bad) (bad) (bad) jmp add movsl daa xchg stos ret xor mov mov sbb sti scas enter push insb cld (bad) call add xchg aaa in (bad) adc mov mov (bad) (bad) jg mov loopne adc add lahf xchg inc mov dec xor addr16 dec (bad) jg decl les cmp ficompl int outsb mov enter xchg (bad) (bad) (bad) decl xchg divb mov movb into cmp jae fdivr outsl cli lcall cmc cmp lock fidivl adc insl cltd int3 jnp jg adc xor jl (bad) addr16 (bad) (bad) (bad) pushl ret mov jmp icebp adc stos sub in jge,pn loope repz and inc pushf fistpl arpl push push cs loopne shlb lret ret push ss sub adc add dec jl je scas std push std adc ficompl call or mov jnp fwait decb or inc sub ljmp lcall mov mov xorl into jge adc (bad) lock adc push cld (bad) mov push lods lods (bad) mov test or into mov fdivr call sar ljmp (bad) imulb lea pop in scas shll xor bound sub cmovge lcall (bad) (bad) (bad) fs ja jbe insb (bad) ja sub xor insb adc sahf or push mulb xchg push in mov (bad) (bad) decl and ljmp cmp mov jb and xchg scas lret (bad) lcall ret push pop and test (bad) out in mov mov (bad) (bad) call jle arpl scas cmpsl (bad) xchg xchg push cmpsl add sub sub aad xchg sub xorl mov add lods inc adc pop lods ds fs dec les jnp mov xchg jae (bad) (bad) ljmp adc lea inc out rcr inc dec mov and in cmp lret xor dec (bad) xchg (bad) out push es jp out push sahf adc stos popa jnp dec sub dec pop (bad) (bad) (bad) incl or cmp fwait nop fnstenv jbe pop dec bound push xchg xchg xchg push aad icebp lcall pop xor pop mov push push ds (bad) (bad) (bad) incl pop add xor rcrb call sub lods arpl pop pop cmpsb vmread (bad) (bad) incl push clc push in nop sbb push mov jbe push sbb popf cmpsl jnp sbb push stos cmp (bad) incl loop jb lea pop push icebp (bad) cwtl cmc and mov test pop pop dec cmp or add pop (bad) incl xchg dec fcomip sub mov mov cmpsl inc mov inc xchg (bad) mov sahf and fsubp and imul (bad) (bad) (bad) shl imul popa mov (bad) mov cmp pop lcall inc call pop mov xor (bad) (bad) mov xor scas cmp stos inc andb incl jle adc and or jne sub cmp pandn mov add (bad) repz shr ds sbb aas jge pushl xchg aam pop mov movsb cmp icebp (bad) (bad) (bad) jmp out stos xchg lret mov jl pop mov ljmp push and xchg inc jg adc imul mov (bad) mov xchg insl xchg mov fs lds pop mov (bad) (bad) call xchg mov std and sbb and js xor data16 (bad) jno mov sbb xor inc data16 jp outsb test mov clc (bad) (bad) pushl outsb stos js xchg outsl aad jl enter stos jge sub hlt andl push xchg ds aas mov insl push mov sarl xorl mov int (bad) in (bad) decl inc das mov push popa push insl enter aas mov (bad) fdiv popa cmc (bad) (bad) dec jge jp sar rclb push jmp pop jo cmpsl cwtl push lods ja cmp mov or fistpll sbb lock jnp xchg cmpsl (bad) mov cld sbb test cmp (bad) (bad) (bad) pushl jbe popa lcall pop pop sbb inc and inc jae jne fdivr (bad) (bad) call nop subb pop pop repz dec sbb push xchg xchg lods mov add and and jmp dec pop or (bad) (bad) pushl xor sub jne les out cwtl mov inc push clc (bad) mov and daa push mov fstps mov repz (bad) mov scas sbb mov test pop stos out in out ljmp add ret jecxz (bad) (bad) (bad) ljmp in popf icebp insl sbb pop fs and push adc mov mov call inc push hlt mov mov leave mov icebp or push (bad) (bad) (bad) in movsl sti sub fsub add (bad) mov ficomp test lea adc jo cmp (bad) (bad) jmp loop mov aas mov mov or std sbb mov cmp data16 rcl leave fdivp sub test inc fdivr push (bad) (bad) (bad) xchg and xor mov xor repnz sbb jecxz (bad) (bad) fcomip jge loop dec pop push enter loope outsl shr xorl inc pop cli (bad) (bad) (bad) std out mov mov pop push add ja test sub add cltd mov add outsl mov jnp and testl lahf and call sbbl mov insb (bad) sahf mov (bad) pushl xchg insb push je pop push pop rolb nop xchg repz mov xor data16 (bad) (bad) ljmp mov xchg xor or lret mov cmp sbb lcall (bad) pushl inc sub adc loope mov and inc jae push out insb dec cmpsw push (bad) (bad) (bad) pushl popa test outsl push add push mov jne jns add call add xor (bad) (bad) or fsubrl das pop stos mov inc (bad) (bad) (bad) (bad) jl pop add sbb push fnstsw int pop cmp fdivrl movsb push jne xchg pop sbb icebp inc incl insl pop pop jno xor lods arpl (bad) (bad) (bad) cmp push jo pop out mov xchg pop cmp xor jle mov push fadd (bad) (bad) mov and lret outsl mov sar (bad) (bad) pushl mov inc daa push in scas adc mov fisttpll mov and iret mov add call inc test push inc fnstenv xchg and sahf cmp mov (bad) jge cwtl inc jne aad insb andl xchg lcall and (bad) (bad) (bad) (bad) aas outsb add jmp ret inc (bad) inc negl xor enter cltd test (bad) (bad) mov call mov inc and add test ds bt xor or leave andb test (bad) jg mov out mov ss sbb and dec popa shrl push cmpsl (bad) lcall push push clc inc cmp hlt mov or (bad) sahf inc mov mov aam out clc ljmp sarl pop cmpsl ljmp or lea cli push sub (bad) or dec cld lcall insl fs dec push insb add repnz mov mov and in inc scas sbb cmp jne (bad) mov inc sbb sbb jp (bad) inc push pop std pop mov xchg ja jecxz mov scas jmp mov cmpsb mov xchg div mov ja lea jbe inc mov mov ss (bad) (bad) (bad) push push pop pushf inc mov push out adc cmp popa outsb ja add pop addb xchg popa and gs jno test movsb jg adc and sub inc pop inc pop out and out jecxz push cmp xchg cltd cld (bad) fbld mov sub xchg cmp jmp mov or loope bound call gs adc fildll xlat cmc sub mov cltd xor (bad) call mov std js inc dec (bad) daa call sarl jns std scas cli sub ljmp sub imul jbe dec dec les int3 sbb lret pop pop fsubrl mov (bad) (bad) (bad) decl pop insl shrl loopne cmp push adc jb int3 cmova cmp (bad) (bad) incl jnp lret xchg adc jae mov mov pop add sub dec aas pop inc aad hlt (bad) (bad) (bad) stc mov inc (bad) jbe push mov pusha sbb mov push js aam fsts (bad) lcall clc mov mov inc and test sarb mov or mov lods aaa addr16 cld add push pop cs scas (bad) ss or (bad) call (bad) jecxz outsb cmp jp jns int3 lds cmp aam pop mov (bad) (bad) pushl adc test shll or test jg outsb stos bound or and call inc jno sub push test icebp mov inc and lods (bad) decl ds push or push rcl mov (bad) lcall mov aaa (bad) cmp adc and shl (bad) (bad) jmp sbb fcomps mov xchg repz jl xchg mov dec shrb jb (bad) (bad) lcall cmp aam cmp or push enter iret mov push or jmp mov stc xchg out stos jne iret jmp das out push and rcrb (bad) (bad) mov and push leave and shll cmp pushf jno and jg (bad) outsb (bad) (bad) (bad) (bad) fcompl loopne cmp push dec push add jb in out mov sarb addb ljmp and (bad) ja mov lahf dec movsb ds (bad) fiadd cmpsl loope adcl fisttpl bound mov stc sub cmp mov sbb insb xchg leave xor (bad) (bad) (bad) aas iret dec dec sub or jecxz add pop test cmp addr16 daa lahf (bad) decl dec pop fbstp dec mov inc push nop xchg test pop adc enter jmp mov imul dec xchg jg (bad) mov xlat clc pop dec (bad) pop insl push sub fadds cmc (bad) lcall cmp xchg loope add dec cwtl aam sub jbe int mov ljmp push dec ficomp push (bad) dec mov dec stos xor hlt pop pop cld mov mov dec mov cmpsb mov iret xchg adc jg mov (bad) (bad) (bad) lcall loope movsb stos loop and bound inc gs jge xor movsb jbe inc test xchg sbb (bad) (bad) (bad) call adc mov outsl das xchg ljmp mov popf das (bad) (bad) (bad) decl pop (bad) ror cmp data16 pop push sbb sbb enter or push test mov pop push (bad) out pop add loop (bad) rolb paddb and or insl std mov sbb jno cmp and rcr mov dec inc shl out test ror pop clc int3 imul (bad) jg scas ds clc fild aas dec out pop outsl jl out adc jle out (bad) lcall mov xchg or or divb leave mov (bad) (bad) (bad) cmp adc mov adc mov jne (bad) xchg int3 inc and inc mov (bad) (bad) (bad) (bad) jnp sub (bad) int3 sub sbb cmc je stos push mov push dec add mov dec aas fdivr (bad) (bad) call scas mov sbb xchg lods pop push jle jne sub adc mov xor cld or jne xchg pop or push inc lret push mov int (bad) (bad) jmp xchg ds iret aad adc int3 stos ret movsb pop movsl and into xor (bad) inc es add ret gs push jle aad inc in fwait daa test or jge or pop inc (bad) mov mov lea (bad) (bad) (bad) call ljmp fiaddl mov pop xor inc push push or ljmp mov cmp dec xchg or mov add (bad) dec (bad) in lret dec insl adc loope rcrl cmp or push ds or outsl cli dec aas xor xchg add mov hlt xor dec inc lds arpl (bad) (bad) (bad) (bad) ds lea mov ljmp jno or push test mov (bad) jmp jecxz mov cmp add sbb mov cli jae jl (bad) decl lock sbb ret scas fadd xor jae aaa (bad) imul add adc in inc push fwait loop addr16 sbb faddl push mov add jg ljmp mov pop aas or std add sub mov ljmp shr inc add movsl pop push pop mov jnp aaa dec ret scas lods popa gs imul (bad) jmp es and in dec mov xchg mov dec notl dec hlt outsl cmp addr16 sti idiv test pop clc cltd push out sahf pop dec rcrl push (bad) or mov sbb enter (bad) (bad) ljmp repz sub je mov call clc sub dec mov ja nop adc scas sub insb lods mov lret in xor (bad) (bad) (bad) incl arpl adc mov cmpsl pop sar sbb fisubl daa push mov jne (bad) (bad) (bad) (bad) ljmp or adc (bad) or lods inc mov mov pop and (bad) adc outsl (bad) call data16 push shlb nop xlat mov mov mov cmc push les data16 rol or mov ljmp sub mov lock (bad) (bad) jg bound xor sbb out and pop mov aam movsb add sahf cmp inc cli ljmp std shl mov xchg pop sbb scas xor cmc mov ret cmp sar (bad) (bad) decl jnp fwait dec mov xor iret mov fwait aas (bad) jo loope leave fcmove or (bad) mov cmp pop pop inc lds les or out sub (bad) (bad) cwtl pop jecxz push dec loop jbe mov leave pop mov push fildl int cmp sub (bad) (bad) jmp xor rorl jecxz push add xchg scas bound loop dec cmc or (bad) incl aad dec stos mov fwait or mov mov call fidivrl in push and pop cmp jg call mov inc test jb push clc sub dec inc xchg data16 (bad) jg aas mov fwait test mov in cmc cmp mov push cli jno mov arpl aad call in sar (bad) (bad) lcall in inc push pusha jmp jp (bad) lea jno add xchg sub cs (bad) (bad) (bad) jmp arpl ret nop in cmp xor subl (bad) (bad) (bad) out jnp add and mov inc push mov aaa ja mov out push call mov xorb sbb sbb imul lcall es mov jmp scas or mov popf (bad) add sub (bad) (bad) jmp push pop ja mov sarb mov add sbb xchg std pop xor cmp mov adc test fstpt test test mov aaa sbb add pop repz repz pop nop loope push push push inc xchg sarb xchg loope ret push pop dec add stos jge movsb loop (bad) add loope xor cmpb add jne popf std addr16 pop (bad) (bad) (bad) incl pusha push cli mov clc shlb jne cmp data16 xchg and scas push out jbe (bad) (bad) pushl rolb ret lea nop std aaa je and xchg into mov (bad) jg add fwait out or mov mov stos lods sbbl cmc scas xchg dec stos inc add inc decb cmp es popf out jl or mov fnsave sub sbb pop idiv int mov loope pop mov (bad) out dec loope call add stos add movsb fxch negb (bad) lcall ss dec add cmpsb popa ss adc lock inc outsb (bad) (bad) (bad) lcall fwait in pushf loopne aad js (bad) mov cmpsl jbe leave pop xchg (bad) js addr16 inc (bad) lcall push mov test sbb (bad) dec pop pop lods xor sarl mov nop xlat loopne dec sub sbb push inc enter sar (bad) (bad) mov dec insl fwait mov jge sti sub outsl rcll pop (bad) (bad) rcrb arpl test pop xchg jb or mov (bad) (bad) call cmc (bad) jbe sahf (bad) inc mov adc pusha add push cmp fdivp adc hlt (bad) ljmp (bad) xlat out hlt jae fnop or scas lret and (bad) fisttp pop sbb pushf xor and gs je pop (bad) (bad) mov xlat sub xchg cmp into faddl (bad) incl sarb jbe mov aaa dec fsubrl jns repz cltd xor inc hlt cmc (bad) (bad) (bad) jmp test dec popf mov jecxz jnp push add shrw dec xchg dec mov adc sbb add test push bound xor cld xor xor psadbw pop xchg scas in sub or mov out mov fwait xchg jae jmp stos iret outsl xchg jl cmpsb or sbb sub adc and (bad) (bad) pushl xor sahf pusha data16 mov mov push push js mov (bad) ljmp (bad) jae cmp mov add inc mov push sbb arpl (bad) jg push in test sub (bad) aaa std xchg adcb lods icebp sbb pop imul test dec in leave mov dec xchg mov pop inc add incl mov mov repz push or lret (bad) (bad) fistpll cltd fadd mov call mov adc clc xor mov mov icebp jae dec aaa sub aad mov push (bad) (bad) lcall (bad) lods ficompl sahf dec ja push cld nop jns cld je in cmc stc mov outsb adc pop cmc fadds stos mov (bad) pushl xor into sub pop pop jecxz neg mov add sub andb popf xchg lcall cli aam es cli pop mov push push lods sbb ret (bad) (bad) push inc and pop bound lock mov fnstcw arpl mov inc fcompl mov fcoms push shrb insl push shr add sahf jp pop loop and lahf cmp ja (bad) mov shll xor imul push push repnz je cld inc (bad) (bad) (bad) jmp mov cs push cs push adc xor inc iret push xlat pop fcos inc or sub testb mov pushf jae (bad) (bad) call mull out push cmp cmpsb enter push sub in xor dec pop add fild mov push sbb ja js (bad) lcall fdiv or pop pop test shll ljmp xchg (bad) (bad) (bad) decl leave xor push xchg lret fsubs sub hlt cmp jno in jg int3 pop pop (bad) (bad) (bad) call sbb cltd cwtl je mov lods sbb sub out aam pusha loope cmpsl sbb incl js jl cmp fcmovbe adc inc call sbb shlb cld (bad) (bad) pushl pop xchg test mov js enter xor jbe jp fisubr jmp pushf sub (bad) (bad) frstor inc and jg jg mov mov rcrl push lret adc shr push jge insl xor mov js jg rcl out push (bad) (bad) (bad) (bad) aas cs aaa jecxz jbe dec arpl das adc push aad sub enter scas jne fwait aad (bad) (bad) (bad) (bad) clc fwait cmp sub fcompl xor aas scas popf int pop aaa xor mov daa (bad) (bad) (bad) (bad) mov and pop (bad) jo adc lds mov jbe inc hlt cmp ret rclb std (bad) pushl mov xchg jmp mov mov mov (bad) ljmp cli pop push xor add (bad) or sbb jge icebp daa icebp inc outsl lcall inc mov or cmc xchg mov push sar (bad) (bad) jmp fdivrs fcoml mov je test push js aaa out xchg xchg (bad) rclb (bad) incl in repnz mov (bad) loope sbb mov test push mov and sbb ss xchg cmp lea xchg xor ss pop and dec add addr16 adc xorl out jl pop xor scas inc xlat adc lock jno loopne pop jecxz (bad) (bad) (bad) ljmp popf mov outsl adc pavgb (bad) mov loopne and inc sbb fwait les push setns push push (bad) icebp push mov mov dec add dec iret adc mov jmp (bad) cmp inc ss and dec incb push lods pop (bad) (bad) (bad) in ret jne fstps inc xor jmp test sbb cmp pushl inc out divl mov loopne inc vcvttsd2si cld inc fwait sar mov lret ficoml int3 orl mov mov outsb dec cmp (bad) (bad) (bad) push fsubrs bound jnp cli (bad) jo xor and mov add les sbb pushf mov adc pop jo adc mov test pop sbb movsb lret jno call pop fmuls jg (bad) pushl aas dec cli ficomp adcl jmp mov cmpsl dec sbb mov jns add (bad) (bad) cmp stos push xchg pop fnstenv (bad) fsubrp mov dec cmpsb (bad) mulb and mov lods pop push sub ret movsw and int popf adc push ja jge cltd or (bad) (bad) (bad) call and repz or push sbb fs scas xor in ficompl inc outsb jb jae lret (bad) lcall mov sbb xor mov stc sti jp leave mov sbb lds stos fstpt fs adc lret cli jmp aam xor jge dec mov scas test rclb in or ret cmp and push negl or daa arpl (bad) aas (bad) (bad) cmp jl int3 pusha int sahf decl push in leave std ss add lea dec cwtl mov inc ss xchg add dec inc cmp (bad) ljmp gs jecxz add pushf sti dec lret repnz fisttp psubsb (bad) leave push outsl fwait jl daa mov mov repz testb movsb push inc (bad) call loopne repz mov insl (bad) insl pusha iret pop adc les cmp cwtl movl xor in test mov sub (bad) decl enter aas and test aas inc call (bad) jmp addl push cmp xor movsb mov xor (bad) (bad) (bad) ljmp and inc scas mov sub xor adc (bad) (bad) (bad) (bad) cmp cmc inc xlat mov xlat je mov lds pop inc push mov scas add outsb sbb in sub xorl push cmp mov das iret jmp fisubr in adc jo lods idiv ds mov cmp xchg decl xchg xor stc jnp in jbe xchg hlt outsb push in inc push fsubrl (bad) jg lea or ljmp vmovaps xor add xorl adc xlat out in (bad) push rclb mov sub (bad) (bad) (bad) jg outsb sbb pop les push jg push add rol xor xchg jge aad lcall dec adc loope ret popf and or and mov cmpsb inc fwait in cmp ret fdivrp (bad) (bad) incl pop mov add sbb mov in ljmp into mov fnstsw mov (bad) (bad) (bad) (bad) fisttpl fistp sbb scas mov clc int mov out xchg (bad) rorb icebp mov (bad) (bad) sti imul aas dec cmpsl or (bad) lcall and rol jae adc sub fistpll out push xchg insl nop jae mov (bad) jg jmp dec (bad) mov notl das mov push mov dec stc mov (bad) call lds andl adc xor mov cmp inc (bad) decl or pop cmp sub xchg mov xchg inc (bad) (bad) (bad) (bad) pushl lcall mov (bad) jne je mov les sbb jg ret sbb sub shrl (bad) adc fnstcw into pop lcall (bad) in and out shrb mov testb push sub aaa dec push inc cmpsb js add cwtl and jmp push cmpsb das test and jge sub aaa xchg call cmp jae int3 aas add mov add jne bound cmp insl add roll je add mov (bad) call sarb jbe mov ds mov and (bad) aas rclb (bad) ljmp cmp pushf inc add or insl gs (bad) mov xchg imul aaa add mov pop stos or loope inc pusha (bad) (bad) (bad) sub xchg sub mov jns pop xchg hlt (bad) (bad) enter jecxz sbb (bad) (bad) (bad) std push lds sub outsb add bound pop mov add hlt call sub add (bad) ljmp adc stc mov jbe cltd ljmp ds mov pop dec add add imul (bad) dec loope mov (bad) test repnz xchg or jl and std arpl ljmp clc test popa insl push mov aad ljmp xor jmp mov les or adcb (bad) (bad) mov pop ss mov mov outsb pop jge pusha adc xlat sub jge fwait mov sbb cmpsl (bad) (bad) (bad) call repnz rcrl jp or jae fmuls in jmp adc (bad) (bad) (bad) inc push cmp loop loope adc push bound and sbb clc jmp push mov cmpsl jl inc movsl mov fsubrl rorl adc jnp xchg jecxz or mov stos sahf push pushf icebp aaa mov or ljmp imul cli adc std (bad) jmp ss enter adc adc (bad) decl (bad) leave inc cli int3 dec (bad) mov mov into mov mov sub in (bad) (bad) decl repnz pop gs lods das and pop fiaddl mov xchg ja out (bad) (bad) (bad) jmp push flds xchg mov pop sahf je mov push shl (bad) jnp fucomp and mov adc dec daa repz mov (bad) (bad) jmp mov mov sub push cli dec insb out inc insb jne pop pop aas or int3 test dec outsl add push and push fwait pop or addb aam lahf into mov mov (bad) (bad) call mov fisubrl loop pop xor cmp loop push mov fildll (bad) push sub incl cmc jmp scas arpl imul fldl2e dec sub (bad) sub jae mov out aaa fwait sar adc cmc movsl lahf jge xor fistpll decl fs add sti shrd cmp xchg sarb scas push scas es iret ret lods int3 dec imull sub (bad) (bad) aas sbb daa pushf adc add jne bound and shlb mov cltd dec ficomp mov out clc incl js lret mov mov jl cmpsb jg push mov pop enter ds popf push icebp decl mov popf sarb pusha cmc or incl aam adc insb mov aas cmp cwtl pop out daa mov add inc (bad) decl pop xchg insb test sbb stc xor xchg popa push mov (bad) incl lods fwait out jle xchg sub ss inc pushf inc mov rcll (bad) (bad) mov cmp add mov lret jnp cld mov movsb imul fidivl push push ljmp cmp cmpsl ret sbb push rcrl cmp pushl inc (bad) mov inc ss je loop add jbe or push aaa test jg ds (bad) lret mov (bad) gs fnstcw jg in insl adc mov adc mov popa xchg cmc and (bad) sub ja scas shlb (bad) (bad) (bad) cmp adc stos fcmovbe (bad) xor lcall jbe (bad) (bad) pushl jae stc adc mov dec in in clc movsl pusha pop test aad (bad) ljmp jb inc outsl mov jne mov fmull and fcomip ljmp hlt (bad) dec add xchg fildl dec lcall mov (bad) jmp jns outsb aaa dec sbb jns (bad) jge gs push popf push sbb (bad) mov jmp cmp mov int3 push lods push jecxz (bad) (bad) lcall jbe mov push mov xor xchg xor adc add test shrb mov aad fcomps inc call (bad) mov adc out daa popf leave xchg test sub in leave push xor loopne (bad) incl adc mov bound adc loop jbe pop push sbb (bad) call cli add mov cmpsb cli sbb aaa mov add (bad) pushl in into ret xor mov nop cld and hlt bound hlt push mov or (bad) (bad) (bad) call jp push cmp and mov shlb pop add and popa fs mov push cmp call (bad) aad xor insl mov push xor mov jmp xchg cmc (bad) lcall pop jno jge sbb pop inc cmovno mov inc negl fildll adc cmp outsl mov pop lock jb adc pop jae xor fcom or fmuls xchg cs nop lods gs (bad) (bad) jl adc insb sti dec ret mov pop loope mov mov dec push outsb xchg cmp xchg mov adc adc sub (bad) (bad) frndint sub push scas sbb mul xchg and or xchg mov xor (bad) (bad) lcall xchg fs (bad) into and mov mov sub ja in fldl (bad) (bad) decl mov dec push dec lahf ret or mov arpl or mov repnz cli cmc mov out cld (bad) ljmp mov leave cwtl adc int3 (bad) cltd xchg repnz lret push push push sahf fs mov (bad) decl mov gs (bad) (bad) iret push pop mov and cld jecxz or mov ds int3 xor or lock cmp aad or int3 lods add (bad) (bad) call mov imul adc fcomps or outsl cmp xchg loop xchg mov fdivr push outsb lret add std sbb out leave ljmp into cmp xchg scas ret cmpsl push loop rdtsc aaa xchg pop leave pusha lea dec cwtl cli roll (bad) decl inc stos mov dec cmpsl mov cld les addr16 xchg adc sbb (bad) (bad) call pushf rcrl pop add fstps bnd and sub sub add (bad) jg addr16 jg jecxz mov dec push ja loopne movsb mov cmc push (bad) (bad) (bad) call push add aas jbe pop or jmp movsl cmp lods or mov lcall icebp cltd int sahf jl mov and sbb fidivl lea cwtl mov addr16 add sbb jl and jle and inc test adcl ljmp add mov mov jmp sbb (bad) (bad) (bad) lcall (bad) aad ficoml fwait sub loopne and pop adc dec (bad) dec jb in (bad) out clc ljmp add and jecxz popf rclb lods rolb test lods xor (bad) (bad) incl cmp or es js fisub int pusha and (bad) adc jecxz insb push iret sti stc das clc aaa cld cs lahf pop cld push scas or sub inc jle pop (bad) fcompl (bad) ljmp and jnp cli scas out popf push xchg push ja fldcw add insb paddsb (bad) (bad) (bad) pushl out or popf push outsl push or repnz enter mov mov cmp adc ljmp cli push adc sbb pop (bad) or ret je je jae fmul jmp pushf pop mov inc mov push push fcoms inc popf fisttpl je mov ret jmp jo sbb in in jae sbb inc js idivb rep pop fiaddl cmpsl cwtl (bad) mov jo pop mov lods pushf push subl divb sar lock rcl in add pop mov lods and (bad) decl sahf stos loopne cmp or cmp loopne stc mov cmpsb (bad) aaa rorb xchg sbb cmp decl sar sbb stos les cmpsl stos (bad) lods cmp fidivr mov pop push xor xchg (bad) ljmp sub (bad) mov cli (bad) stos cmc test std cltd sub cld aam shrl (bad) pushl ss (bad) int3 pop lret pop dec dec call arpl addr16 adc (bad) mov shrl test lock mov (bad) inc mov pop xor sbb test inc xor int3 or jnp (bad) (bad) mov (bad) cld iret movsl and lods or aad or pushf push xlat (bad) (bad) jg push out fs cmc stc imul inc mov lock mov (bad) (bad) (bad) sti cmpsl lods sub repz ret fcomps repnz inc jno xchg inc test mul jae xorl xor add mov cmpsl cmpxchg mov inc push jns add movsl mov mov movsb (bad) (bad) (bad) lcall pushf fdivl leave repnz and mov mov mov fldt adc jmp or fs nop mov lods sbb cmp ljmp aad mov cmp mov sub xor add (bad) (bad) ljmp adc push (bad) pop fstpl stos sarl xor (bad) (bad) (bad) (bad) (bad) cld movsb ljmp test fdivs or fwait scas and push stc dec jb leave pop push rcrl push rorb sub mov mov arpl (bad) scas xchg mov ljmp mov (bad) jg and icebp sar sbb sub push inc (bad) fildl popf xchg jne (bad) (bad) (bad) jmp lret les mov pop mov adc rolb iret pop scas mov out mov and clc test pusha mov add lcall add mov (bad) jmp cltd (bad) jne dec fisttpl inc jns cmp daa jl jmp in fs or xchg subl pop (bad) mov stos iret repz out mov sub or push clc data16 and (bad) jmp xor push mov jg sub pop inc sub push loopne,pt adc dec arpl adc (bad) (bad) js mov mov inc jbe imul mov movsb in xor sti mov add xchg sub sbb cs inc mov lds jg jmp inc imul cs fcoms mov cmp push sub js xor push mov inc js lods stc test aad sbb jae jo cltd sarb mov mov xchg dec inc lret sti movsl test sbb mov decl or dec xor outsl pop mov fdivrs aad andb insb cmp lods sbb mov and in ds lcall sbb lcall jmp push sub loope mov sbb icebp jns (bad) (bad) call movb mov jne,pt and in mov lahf jecxz mov stos stc or (bad) (bad) mov out and jp cmpsb add xchg push cmp jmp jne push mov shlb test cld push fldenv mov decl iret sub xchg mov xor lahf (bad) (bad) (bad) (bad) jp or lret mov test fnop int pop sbb push repnz dec pop decl icebp in pop (bad) adc dec jp sub and int (bad) (bad) (bad) ljmp ja and (bad) mov (bad) jb xor and jo mov sbb das lock int mov jecxz pop adc push lods lahf or fisubl push xchg add inc es sbb xchg xchg push ss or mov (bad) (bad) mov add pop lock adc loop sub std add add (bad) (bad) (bad) pushl jne aaa lret or das inc push lahf push pop xchg out enter in shlb fs pushl mov jbe pop xor xchg jg,pt (bad) jg mov push pop xchg cmp scas xchg cmpsl push pop les out xchg hlt stos (bad) call jle cmp nop xor (bad) mov fild and jnp mov and (bad) das clc (bad) jmp ret testl mov add cmp lods (bad) in sti (bad) (bad) (bad) (bad) jl pop add and inc and xor and (bad) (bad) jmp xchg add jno cmpsb pop mov xor shll lods movsl adc pop inc jno (bad) (bad) (bad) mov pop (bad) iret cld enter xor hlt xchg jno add mov stos imul push and int3 dec push sub fcompl or inc cltd dec lods push mov les cmc sbb jle adc lret dec cmp (bad) pushl jnp xchg jb jne call hlt jno (bad) xor ret cmp add pop imul cs mov imul fdiv aam repz push in out or (bad) lcall ss mov adc inc ss (bad) into xor add fs je mov (bad) (bad) (bad) fildl bound ss and mov fidiv sbb inc out imul (bad) dec cld ffree scas mov cwtl jae push add movsb movsb mov (bad) (bad) (bad) push mov sbb mov xchg xor inc outsl dec gs les inc stc pop icebp popf xchg pop (bad) mov jg push sub repnz pop fbld cmp ds outsl adc xor sbb out dec jmp (bad) (bad) (bad) call test sbb xchg out sti mov mov cmp ljmp (bad) mov sbb inc enter gs aad fnsave pop dec ja and test mov cmc test lods fdivr inc xor incl pop push mov dec mov aam ds inc imul cmp push insl push cmp lahf lds clc ss std push pop loop adc (bad) fcomip incl sub imul pop add adc ret leave out rcrb (bad) (bad) lcall dec pop push arpl fldt adc cld das loopne call ja (bad) repz aas int mov mov xor stc pop int3 sbb mov jl std fcos (bad) (bad) incl jp movsb pop mov ficomp mov insb fsub mov (bad) std sti jg (bad) jg test adc adc mov imul cltd loop cmc xorl rorl inc mov enter test sub sbb adc cmp imul and outsl mov mov rcll lcall ss lcall (bad) or mov inc (bad) jmp rcr push cmp xchg push push xor (bad) out sarl lahf daa movsl lcall adc inc inc or sub (bad) (bad) cmp mov lcall adc cwtl xlat inc sub mov sbb (bad) (bad) jmp jbe cmp cmpsl in xchg adc mov inc int enter push push xchg (bad) cmpsb or push mov call mov adc or push ret test push xchg mov (bad) (bad) mov xchg gs ret lds scas sub loop push mov xchg inc dec inc fcompl (bad) (bad) (bad) fidivr sub cli jmp and push iret xchg sbb mov mov mov hlt sbb dec (bad) je loopne xor push sahf cwtl pop pop and and lcall mov dec push cld add dec adc iret ret push insb out and clc mov dec xchg pusha mov insl loop pop push inc data16 cmpsl sbb adc lret xchg xchg pusha rcll fidiv cmc and (bad) (bad) (bad) call stos or mov fist ljmp mov xor jl dec pop sub popa pop decl pop cmp mov mov imul movl clc lcall and (bad) (bad) dec xor pop out and fs xchg add mov add test sbb addr16 adc in clc push dec (bad) (bad) (bad) (bad) sti hlt jg,pn rcrb fnstenv mov lcall fidivrl mov jmp cmp ds pop call mov push mov jp jl (bad) (bad) call cmp mov data16 push cli subl scas aad xchg insl ficomp in es (bad) (bad) (bad) jg lcall push xchg int3 loope fisttpll pop test (bad) pop ljmp mov cmp ret lcall (bad) ljmp push js dec dec jecxz sub lret or loop or mov add (bad) je out ds scas xlat mov sbb fldl stc jge mov fwait pop loopne (bad) fistpll cmpsb mov out mov push out (bad) adc mov out cli pusha dec xor lea (bad) (bad) fild (bad) lods popf (bad) sbb push in cli xor outsl sbb es push pop ret test out mov sbb outsl mov in (bad) hlt (bad) mov cmp or pop clc mov (bad) es test aad dec adc lahf adc jne (bad) (bad) jg sahf sub aam addl fidivrl or add movsb (bad) (bad) (bad) ljmp inc or call jmp mov dec (bad) adc add jge adc (bad) (bad) (bad) (bad) fidiv aaa inc jno adc jae push je add mov jle fisttpll (bad) (bad) pushl mov lods push aaa sbbl jbe xor call xchg xorl scas mov imul jo (bad) (bad) (bad) out or cwtl push dec xlat adc jle flds (bad) push jae ds outsb or (bad) (bad) dec rcrb scas inc (bad) adc jns jo push jg sub or jecxz pop nop faddl icebp mov and push (bad) icebp jne sub movb (bad) (bad) incl inc pushf lea or lods ds fs enter mov (bad) (bad) ljmp jmp and gs mov mov push fcomps int stos sub cmpsl inc adc cmp (bad) ljmp xchg mov sarb pop (bad) fwait and dec push jp mov push sub mov lods jo repnz mov pop mov lock adc add jae sbb jne shrl mov mov pop dec pusha pushl inc ret mov aam (bad) jge test push (bad) mov push sarb mov fs aaa mov int3 mov stos popa mov mov fstpt outsb (bad) (bad) lcall sub int3 xor sub aad sbb outsl fs (bad) decl xor hlt mov rcll jb sbbl in push je and ss call loopne pop loop dec xlat mov adc fidivr insl xchg clc push call test dec dec loope xchg adc sub or cmc adc or fistpl fwait inc loope leave (bad) popf icebp stos dec movsl xchg mov ds cld (bad) incl ja mov (bad) push into test rolb addb out clc (bad) jmp jmp pushf pop jecxz je mov jecxz cmpsb jne mov fsts (bad) rol add mov sbb std jmp enter movsl mov rol iret mov mov imul aaa inc (bad) je mov icebp inc push mov jo cmpb pop sbb pop cmc (bad) jge sbb sub (bad) cmpsb notb dec imul mov popf int3 xchg in sar (bad) jmp and jp xchg out imul outsl mov xor repnz nop sbb incl ficoml mov add cmpsb mov stos jecxz repnz lret push mov add repnz (bad) (bad) jmp shlb shl cli add push mov inc mov cli (bad) (bad) (bad) cmp movsb adc cmpsb in (bad) mov sbb rorl stos sar (bad) out in ljmp fimul fidivr les xchg in and leave jns decl jle mov pop mov fwait daa jbe cld mov pop je into out cltd xchg lods push notb xor xor jmp (bad) lcall inc xchg xor mov ret rclb dec divl xchg imul (bad) (bad) (bad) incl cmpsb inc data16 mov mov cmp int3 mov inc push stos arpl cmp jo dec mov jo mov inc ss jle insl jecxz test test sti jge mov rcl pushl sahf cwtl mov jle loop ljmp pop xlat inc aam adc pop xor xor stc add sub pusha mov jnp aas mov jae js adc push sub incl push jo and pusha cmpsb (bad) (bad) decl ds push fadds addr16 les cmp jnp jl (bad) (bad) (bad) (bad) fimul add sub or js pushf fnop cld aam add inc jns lret dec cmp test cmp and (bad) jg add dec mov daa add lahf dec xchg mov vmwrite xor and insb add add xor (bad) int push aaa out (bad) call fisub ds add fadds jg cwtl fmulp popf jl (bad) (bad) (bad) pushl sahf push mov lret push das xcrypt-ofb (bad) pop (bad) stos xchg push xor loop arpl mov (bad) (bad) (bad) (bad) jp in lock inc xchg sbb jmp roll mov add xchg or inc jns clc pop cld decl sar mov rorb sub iret xor mov (bad) (bad) out inc push fadds add push dec push push test adc jbe fcomi mov mov (bad) (bad) (bad) pushl or push xchg daa inc inc jno hlt push xor stos or fwait loopne popa push repnz inc push clc (bad) (bad) incl test lods cltd add mov out cwtl xchg cmc inc mov pusha nop in mov lods push (bad) decl mov pop jmp fisubrl xlat mov call ljmp clc imul mov or lods adc out mov mov pop push adc repnz xor ficom call pop fdivs lahf inc dec mov data16 insl or (bad) jb or pop adcl push in inc push test enter test push push sarb jmp push ret pop push faddl data16 insb loop xchg (bad) inc mov stos xor lods mov mov loopne (bad) (bad) jg pop repnz in or jb addl mov (bad) (bad) out cli aaa imul jmp xchg push mov out pop mov xchg (bad) (bad) ljmp inc adc loope imul sbb pop mov or sub out rcr lock add (bad) call pop (bad) mov (bad) pop pop push (bad) ja cli loopne in or jg adc dec test adc jecxz (bad) mov or dec push mov pop adc test in or (bad) adc inc (bad) jmp jg stos fnstcw and faddl sahf sarb arpl (bad) (bad) (bad) (bad) mov jae jl add sti sbb jp mov dec imul mov and xchg jp rcrb (bad) (bad) jmp push lahf or mov aad data16 xchg inc push scas inc xlat aam xchg mov leave scas (bad) (bad) (bad) dec (bad) mov push ror fcompl and enter sub push (bad) or pop cmc lcall xchg fadd bound mov ret lds (bad) (bad) call ds out jne (bad) in mov mov imul in pop pop xchg (bad) ljmp jns lcall pop outsb (bad) jbe push dec xchg (bad) arpl std jge add xor xor loop arpl stc (bad) lock nop movsl or sub (bad) stc int or xor push dec leave inc dec ljmp js repz xor mov mov xchg in mov pop mov cld icebp cs arpl push out mov mov jmp roll (bad) xchg daa jnp bound mov or popa sbb add cmp popa mov or sbb dec mov shll loopne mov pusha inc fwait mov cmp andl pop out (bad) (bad) decl int lods adc jb scas nop pop xchg push movsb std (bad) mov mov (bad) (bad) (bad) jg cs lds mov xor jno aaa pop push (bad) ficomp in (bad) decl ror add out leave adc add imul das mov cltd jg sub (bad) (bad) jp mov jmp xchg adc std pop dec nop lret iret cwtl xor incl mov push jo inc jecxz int loope call xchg (bad) mov push mov aaa xor (bad) jmp (bad) addr16 xchg dec jecxz pop lds lret in jno sub (bad) (bad) jg cmc mov les mov push or pop outsl repz xlat roll fcoms inc mov leave push inc and jl jmp add (bad) (bad) mov int sub aad mov in enter sbb popa jb (bad) (bad) jmp lds cld popf rcl push icebp xor popa imul mov loop js jl aam std (bad) inc xor mov jbe dec cmpsb fscale or lret xor pop hlt (bad) jmp lods test js pop mov xlat call push push sbb insb pusha pop mov lods lcall add mov push xor jo les jmp mov outsb repnz sbb pop popa sub out cltd std mov mov push jns icebp mov xchg inc sbb lret mov jbe (bad) (bad) ljmp insl ljmp popa hlt or ds lods mov jbe or stos mov inc jns add push pop xchg mov xor (bad) inc mov outsb hlt and add push (bad) push dec and sbb xlat xor (bad) (bad) ljmp mov inc push push mov scas clc fs mov xchg or push xchg incl clc shl test ds (bad) testl icebp pop cmp mov xor sub xlat sbb mov movsb call aad enter es cmp decl mov ud2 pop inc fisttp lea xor mov mov mov into cmpsl int fwait std (bad) (bad) pushl call movl cmp test out dec or pop insl pop rcll (bad) lcall (bad) sahf adc or repz std into repz mov jns call (bad) call dec (bad) ret imul sub mov andl jmp inc adc outsb bound fdivrp pop std inc insb lods pop pop into and daa sbb push add out sbb pushf dec lcall dec cli pop notb loopne or mov out jb loopne sub or fwait clc inc jne cmp cmc mov hlt dec popa cmp dec hlt (bad) (bad) jmp mov cmp jnp and fsubp pop jno xchg in jmp adc decl ds cmp inc jo push sarb repnz inc pop (bad) (bad) incl inc sarb orl test jmp push dec lcall stos cli xchg mov (bad) call mov jle and pusha fs stos fiaddl pop push out cmc push and add (bad) ljmp jmp out mov xor mov bnd shl and adc pop xor ljmp pop shll aad dec sbb jecxz imul push adc test (bad) mov push xor add aad adc cs rcll pop xchg dec movsb cli sbb or int3 cmp push sbb sub jae fwait (bad) push and aam sub jl icebp mov dec jecxz sub push jg (bad) ljmp push and adc pop cmp jl (bad) (bad) (bad) ljmp xor pop scas or jecxz push cld dec jp xchg lods cld jbe (bad) xor iret sbb std (bad) incl or push std push (bad) (bad) cmp (bad) adc add mov or popa sahf jnp (bad) (bad) call mov out test (bad) cwtl rcrb mov (bad) (bad) call mov cmp cs add jp jl push outsl jl push in (bad) jg icebp das fwait ljmp dec mov js neg jnp call dec in jns and push int3 je push popa ds clc (bad) ljmp jecxz sbb or in imul mov pop xor fadds xchg in test (bad) (bad) (bad) jg cmpl jo sbb add push jns iret arpl adc orl call xchg xchg push cmpsb or lret insl cltd cvtps2pi shl dec in movsl cmp inc (bad) mov lods pop (bad) mov cmp and stos rcrb scas inc sbb push sbb in inc mov (bad) (bad) fcomip into sbb ja or ds cmp dec ljmp (bad) (bad) (bad) call stos aaa idivl adc leave aam xor jno ret or movsl push mov sub sar (bad) jbe jl jbe lret (bad) (bad) call aam cli dec dec and mov dec push pmulhuw pop adc add and (bad) jmp inc sarb dec push xchg jae jno int xor js (bad) call std rcrb push cmpsb push lea pop mov add xchg out es (bad) (bad) lcall pop push fistpl fimull test sarl lods mov add cmp inc in in cs out test (bad) cmp stc mov and (bad) (bad) clc mov mov in mov inc adcl test push xchg lcall inc pop cli ret (bad) jl mov out xor (bad) (bad) jmp xor xor mov into or lret aas mov loope mov (bad) (bad) (bad) mov (bad) sub jge xchg movsl mov adc add inc adc jg ret inc push ret jp inc out (bad) dec iret push lea (bad) stc xchg jo call fcoml cwtl outsl add jl xor pop and loope pop (bad) in std (bad) (bad) call push dec xchg addr16 jge mov or ljmp mov mov scas mov mov loop mov fstl (bad) mov (bad) mov out ret lret (bad) (bad) jmp mov or mul and push dec pop out in stc xor mov sub (bad) (bad) (bad) mov cmp call add imul (bad) (bad) incl mov addr16 push leave sub cli aaa inc mov cmp arpl (bad) jg pop repnz ret cltd add loope pop pop test (bad) mov fldt mov cmp pop roll cld (bad) inc clc into sub jmp leave dec ss and dec inc mov movsl mov cmpsl lret arpl ret ja cwtl (bad) pop sahf insl mov add mov mov xor aad push xchg call lea mov sahf mov push test cld call dec je jg cmp dec cmp pusha int inc jbe (bad) (bad) (bad) jg mov repnz in aaa (bad) loope test stos jne cmp pushfw (bad) (bad) incl xchg jae aad or adc rcrl (bad) movsl push xor (bad) incl dec jecxz lds (bad) ds psraw scas adc (bad) jg pop cltd int xchg jne lcall or mov lahf outsl xchg cmc pushl push push pop orb inc cmp mov (bad) xlat (bad) (bad) (bad) pushl (bad) lock add sbb outsl cmpsl mov inc mov aas test push out pop and sbb (bad) xor hlt arpl (bad) (bad) jmp pop cltd inc adc xchg dec test jb cwtl and and fstl aas jne mov (bad) and fidivr (bad) adc sbb aad jg lcall fistp aad in and push dec inc jns nop push or dec (bad) jmp xlat xchg push xsha1 cmpsb lea out loope js xor mov das pop addr16 mov fmull jmp mov pop cmp jl push adc cli (bad) (bad) jmp push sbb movsl ja test xchg jnp punpcklwd lret int pushf dec (bad) (bad) ljmp push repnz outsb test into loopne fmull call mov pop fcmovbe adc es neg fnstsw and subl (bad) ljmp cmc bound push mov fdivp insl cmp fistpl add (bad) (bad) decl cmp xor adc sub pop mov xchg mov das rorl nop pop sub dec fiadd mov mov (bad) fistpll xor (bad) and xor mov xchg (bad) dec fidivl das or (bad) (bad) ljmp pop or popf jg,pt cmpsb in pop mov inc inc loopnew xchg mov ljmp aas xor les fs popf andl cmp jle (bad) (bad) (bad) (bad) call leave (bad) and xchg xchg jne push dec xchg mov cmp jno xor mov incl fsubp cmpsb lret pop adc mov in mov cmp imul add das cmp dec fs inc pop dec push call cli sbb and (bad) mov stos mov (bad) pushl rcrl dec jne xlat lock sub lcall (bad) (bad) dec xor movsb mov mov sbb push enter and mov jne mov pop sbb xchg stc mov call cld fwait jbe push stos cwtl mov mov cmp sub add and mov jp cmpsb jp andl add cmpb pop int3 push xchg std sbb push cmp (bad) mov iret dec lods mov or (bad) (bad) decl mov mov cld inc addr16 gs push sti mov shrl iret aam cld (bad) (bad) incl lea lahf xchg int3 (bad) dec push jno rorl mov (bad) (bad) incl inc push cmp lods loope test or or insb pop into loop jecxz popa (bad) (bad) call inc arpl out pop sub pop jno (bad) test scas push (bad) (bad) lcall xor jecxz vcvtdq2pd inc arpl add loop cs push xlat daa dec rcrl jge sbb sbb dec or aaa std mov ror lock loopne pop ret or jae cltd fidiv xor call out fwait and mov dec cs addr16 (bad) fild push jg ficompl xchg (bad) mov mov (bad) (bad) jmp orl sbb ret mov mov jno xchg stc xlat std jl or (bad) jmp sbb cli loopne in stos xchg test mov data16 jo stos and ja xor (bad) (bad) (bad) ljmp add fidivl adc or xchg test pusha or xchg (bad) cli jmp and leave xor jo mov pushl insl in cli jge sahf cmp jge jecxz imul xchg add xorl sub pop mov mov lret fisubr mov (bad) (bad) ljmp xchg mov mov or enter shld ljmp sub xchg or ds test mov pushl xchg mov ljmp push jge add push jns jnp cmpsb (bad) call lret xor ja rolb das cmp cli daa (bad) (bad) lcall nop test or jbe xor jecxz xchg ds mov (bad) (bad) push or and ss inc cmp repz rorb fsts ljmp add and mov lock pop popa mov mov pop sub and clc push pop push xor shrb inc mov mov ljmp xchg repz xchg inc fidivr mov sar (bad) (bad) fcomip push mov adc addr16 call mov inc loop or ds add aas incl xor add ret dec xlat (bad) jg jmp and jp xchg cmp sbb icebp and or jmp addr16 inc xchg xchg inc mov fbstp (bad) lods mov xchg adc (bad) and push (bad) (bad) lcall push mov mov adc jg xchg inc inc jmp pop (bad) fcomip mov sbb movsl adcl jmp outsl cli incl stos xchg adc or movsl loopne or bound (bad) (bad) (bad) jg daa ror fld1 cwtl lahf aaa xchg (bad) and inc dec enter push jge dec jle sbb mov add jns fldl xchg mov fdivrl (bad) (bad) (bad) dec adc pusha pop jge incb dec mov mov nop (bad) jg mov stos push (bad) mov pop sbb dec xchg pop int3 xor xor mov (bad) (bad) (bad) jmp movsb mov or push std adc pop mov cmp (bad) (bad) pushl stos push daa jne (bad) mov fstl mul mov (bad) sub push lea push mov inc cmpsb (bad) (bad) (bad) call fidiv mov adc insl dec sti mov dec sub cmp xor (bad) (bad) (bad) (bad) ljmp sub hlt xchg scas fwait mov push mov sbb mov lcall call ret add jns pop fdivrl push sbb mov idiv (bad) (bad) push dec pop outsb movsl sub push ret sarl mov mulb or rcrb lahf sub inc fwait (bad) (bad) (bad) pushl xchg movsb push lahf jecxz (bad) hlt fs mov cltd (bad) mov out jecxz sar (bad) (bad) incl sub jge add jmp js push fistp add ret or jns nop (bad) jae lahf xchg pop lret push pop data16 mov (bad) lcall or sub mov xlat fnstenv scas jns cmp (bad) jmp mov mov ja adc sub push push (bad) (bad) ljmp dec outsl xor mov jns in das loope je adc push cld ljmp xlat ds gs out push lock cltd jl pop or (bad) (bad) (bad) (bad) stc dec jns decb popf push inc push push (bad) dec pop or push pop movsl mov mov jl jmp (bad) ljmp cmp aam inc sarl sbb js pop lret cmpsl inc pushf xor (bad) lcall dec ds imul inc outsl in les in out lock xor adc or lods aam dec adc (bad) mov (bad) xchg push std mov cli movsl or iret cwtl or lcall dec dec js out adc jecxz,pn xor jnp loope (bad) (bad) lcall xchg cmp inc push xchg ss dec int cmp adc cs push icebp jg (bad) fcoms dec test cmp ret and xchg dec push sahf dec icebp outsl outsb pop cli (bad) push or mov icebp mov mov cmp sub adc loopne pushf rorb daa and subl in push (bad) (bad) (bad) (bad) mov mov fstl faddl daa push xor sub xlat push out mov call enter cld lock adc (bad) (bad) incl mov stos push lds xchg ja jle dec push xor pop push xor cltd fidiv push jecxz and negl je dec shrl (bad) (bad) jmp outsb adc or repnz lods lods loope xchg sbb push scas jle mov and repnz (bad) mov mov inc mov jbe xchg jg pop aaa add jmp xchg mov loopne sub push ret jbe jmp ss xchg arpl jecxz (bad) (bad) incl jns test dec test sub jne add (bad) (bad) jmp out dec das mov xchg fiaddl adc dec cwtl clc stos or xchg (bad) ljmp or notb int mov ret xchg in xchg insb (bad) (bad) (bad) pushl icebp sahf js es ror popf push je push and shl jne pop push push adc (bad) (bad) ljmp sbb inc clc push cmp loope nop ja inc fwait sub cmp and (bad) pushl sub xchg outsb (bad) inc mov arpl out clc sbb adc add (bad) mov (bad) jmp mov popf sbb shl ja mov mov sub and hlt pusha xchg push or (bad) (bad) (bad) lcall mov fdivs sbb and cld xor dec pop inc in popa aad pusha mov call push mov xchg or pop (bad) ss jmp icebp fldlg2 les sub (bad) (bad) dec pop inc jno shr lea je push mov nop cmc movsw jecxz sahf in dec mov (bad) (bad) inc clc arpl scas jl push (bad) stos add addr16 cmp xchg aas pop repz ficomp xor ja sbb inc (bad) es std dec (bad) out push push fildll jl,pt mov aam (bad) (bad) (bad) decl jae enter cwtl cli scas mov dec scas sbb fdivr mov (bad) or (bad) stos fistp (bad) fcmovnb cltd (bad) (bad) (bad) jmp sub xor clc loope imul xchg (bad) mov rcrb mov call std jb loope movsl push or lret dec xlat aas pop mov jbe jg xchg (bad) outsb pop (bad) (bad) pushl add dec xchg and mov outsb push mov jg inc test or mov cli (bad) (bad) mov imul ja mov mov movsb sbb (bad) (bad) fbld push push lods push inc mov mov aam lods enter add add mov push int shl lahf push test mov jge popa and repz jno jg insb cmc sbb mov decl lock adc inc push (bad) mov pop fcos (bad) (bad) (bad) jle lock fisubrl in mov decb les in cld stos mov lock xor sbb aas pop cmp mov add xchg add cmp and xchg data16 jle and mov fiadd jp dec push (bad) (bad) (bad) jmp adc std adc cmp je fnstenv sub adc jle lods insb mov sub jns pushf repnz (bad) (bad) jg lret scas or dec rorl subl jmp lret xor jmp dec hlt xor inc and fnstcw add fildl hlt fbld addr16 popf (bad) sub pushl int3 scas js popa movsl mov pop inc ds push scas decl icebp push adc (bad) jg adc push sub in jg inc std mov imul insl lds sub mov sub push cld jg aad mov xor inc sbb jp cltd inc or mov clc (bad) (bad) jmp and cltd sbb lock outsl cmpsl inc xchg imul int sbb cs (bad) (bad) incl inc popf insb fdivrs pop xchg dec mov inc decl mov sub inc call sub movsb clc fs mov pop (bad) push jle inc fwait mov jl,pt outsl (bad) (bad) fcomip fstpl scas sbb pushf mov sub mov pop js (bad) (bad) push adc add shlb jl mov (bad) (bad) dec adc push imul jbe popf (bad) scas or cli or loopne push imul sbb xchg dec test jb scas dec cltd (bad) sarl xchg dec paddusb movsb mov lods jl (bad) (bad) jg mov daa jl mov insb inc repnz pop adc call shrb ss je xor inc and (bad) (bad) (bad) (bad) je,pt enter jo jl pop fsub loope outsl faddl sbb shrl pushf (bad) mov pop (bad) xchg mov cmp sub mov and and (bad) loope or sarl sbb das xchg call arpl (bad) imull imul mov dec mov and shr lret es mov xchg les (bad) (bad) dec enter push ja cmpsb (bad) aas or stos insl mov sub sti in pushf outsl add add (bad) (bad) pushl inc pop xor mov enter js and inc and and mov push add xchg mov lea loope in (bad) (bad) (bad) (bad) lcall jae nop xchg jle cmpsb sbb std or dec stos jb jne pop and sar pushl iret mov push int add jmp inc inc call outsb jmp hlt (bad) ljmp jbe sbb hlt xchg cwtl sarl (bad) es cmpsb pminub addr16 and (bad) fucomip push fcoml xlat or lods xchg (bad) (bad) fistpll xor outsl dec add loope mov and aaa loop in push fimull sti jge (bad) (bad) jmp jmp lods int3 xchg stc jb xchg fcmovnbe xor cld sub adc clc fistpll add xchg imul lock pop (bad) (bad) jmp in sub int3 aaa ret and adc (bad) sub (bad) (bad) ljmp push into fildll popf jg test icebp scas test loopne push and sti lea cmp cmc aas add jg inc mov fs (bad) test lods into mov fldt push mov mov (bad) jge popa ret jl pop pushf pushf (bad) or int mov imul and cmc pop movsl dec cld jp mov std xchg dec std pop dec and iret je sti lcall iret (bad) jg pusha ds dec into cld es dec sub in cmpsb lods enter sub dec test ja push (bad) cmp push mov lret test pop iret inc (bad) (bad) lcall push jnp inc shrb jmp rcrb cltd add (bad) call ds push popf enter imul add mov lahf and xor fstpt pop jbe popf cwtl and lcall xchg aaa stos in aas sub cltd clc add cmc xchg popf inc xlat andb paddw (bad) decl xchg stos popa jo ss pop sbb xchg ljmp daa popw cmp (bad) mov popf (bad) sbb fldt lahf pop pop fwait cmp inc (bad) ljmp (bad) xchg (bad) enter inc push ret shrb sub leave cmp mov mov lcall sarl inc push arpl jae and (bad) (bad) (bad) (bad) fisubrl lret insl inc cmc jmp outsb cmpsl and hlt add inc (bad) sub call (bad) (bad) (bad) jmp out sahf cld xchg in test jle das std daa pop popa pop push sbb adc cmpsl add mov lcall lods subl fisubl pop mov (bad) inc or cwtl mov adc clc lcall dec mov dec les popa pop push bound mov imul (bad) call gs mov mov das cs jnp mov mov (bad) (bad) (bad) ljmp xor sbb cmp pusha fnsave iret lcall sub data16 (bad) (bad) incl les lcall fild jg shrl aaa jb pop lods jl cld decl orl pop and (bad) jg mov push adc call mov int3 (bad) aad mov loopne (bad) ljmp cmp sarl fistl (bad) add icebp int3 sbb fwait out cltd nop pop xor xchg (bad) (bad) (bad) mov and push xchg sbb cmp xchg stos outsb lret lods dec pop outsl sbb ss cld (bad) (bad) fsub das mov cmp jb aas imul lret pushl sbb jmp fdivl lret jmp in fisttpl mov pop or push xchg shrb dec xor incl shlb (bad) test xchg mov push es (bad) mov inc mov xchg jnp prefetcht2 sbb xchg ja xchg dec vmulss (bad) (bad) call bound popf push insl insl mov sti push mov jmp pop ret and icebp (bad) (bad) (bad) ljmp cmp add lock cmpsl cmpsb pusha ret icebp icebp out fwait int3 push mulb dec lods (bad) (bad) (bad) jmp sub sub jl test call xor iret (bad) incl (bad) shrb outsl addr16 and mov xor icebp (bad) (bad) (bad) jmp ret jmp adc sarl mov inc or xor test (bad) (bad) decl jecxz insb pop outsl cmp lea push fstl fildll mov mov jmp test movsb push mov dec xor cmc dec jne (bad) cwtl jns incl mov (bad) (bad) ljmp mov or rcll scas add pop icebp inc pop movsl ficom hlt lret iret fldcw pop adc fisttpl clc push dec cltd (bad) int hlt dec cmp cmp push int3 jg mov add (bad) incl jle adc (bad) fwait dec insl imul sbb pop ljmp mov adc pop xchg xor lods ljmp (bad) pusha inc xor (bad) mov adc add lret mov cs inc cmp cmp adc mov sub loope ljmp pop cmc (bad) (bad) decl jno jp sub mov jb xlat xor mov push push (bad) (bad) lcall adc push xchg mov inc mov adc xor add xor incl mov lods cld sub push stc nop imull sahf (bad) mov ret jnp repz jae mov xor test push cmpsl pop test mov test std (bad) (bad) incl xor push mov pop je inc fs or data16 dec sbb push add jg imul sub andl insb fldenv leave lds mov or cld inc push dec cmp (bad) (bad) (bad) (bad) ljmp mov mov mov shlb cmp imul xchg lea into adc mov inc sub movsb sub mov aaa std (bad) std scas sub dec enter repz fs mov xchg pushf xchg shlb mov push xor decl loop xor pop cmp mov enter loop xor cmp inc (bad) (bad) cmp outsb pop jns adc lret mov into and sub cmp lcall mov shlb lea mov ret jo jg xor mov jmp (bad) (bad) (bad) incl inc aad mov jno xchg fidivrl xchg sub jle jmp addr16 decl lock push jecxz les fwait (bad) dec push xchg dec test mov cli lds lods outsl incl pushl daa imul xchg je push cwtl out mov push (bad) mov ret and lcall xchg lahf push arpl mov ds xchg movsb push popf in fdivrs xchg sub push mov stos add jmp cmp mov cli mov (bad) xchg adc pop sar push cld decl xlat mov fcomp aas mov es hlt cmp outsl lret and (bad) (bad) jmp inc adc jbe stc mov mov iret icebp fdivs sub rcr je adc lcall ja cwtl sbb cmpsl mov or loope sbb cmp cs (bad) (bad) lcall cmpsb ret lds and fcoml jno fwait push outsb inc jnp das or fsubrl pop (bad) (bad) inc in sub insb outsl bound (bad) int inc fisubrl in (bad) das mov (bad) (bad) push dec push mov cli mov in (bad) cmp inc sbb and lret loop sti (bad) push push push (bad) (bad) (bad) decl mov and scas push mov cmpsb sbb rcll fimull icebp sbb fcomps cmp mov ret (bad) (bad) lcall movsl hlt xlat test xchg (bad) adc fiadd lcall inc subb aad cmp dec adc into xor out es mov icebp xor (bad) divb or clc sbb inc imul pop mov or (bad) jmp sub in (bad) mov stos loope mov pop vfnmsub231sd and pop negb insb jg (bad) (bad) (bad) inc mov enter out in jmp test jecxz div xor movsb int3 popf decl out jmp (bad) call cmpsl xchg mov xchg mov and cmp stos pop and loopne xchg lcall mov fs mov aam cmp pop xlat adc fdivrp (bad) (bad) decl repz push or pop mov movsl popf cmp imul inc stos int jecxz sbb sti (bad) (bad) fistp push push rcll fistpl mov jp mov pusha (bad) out mov (bad) lcall test dec ja (bad) jne ja lods pop jg movsb push cmp (bad) lcall neg and and adc mov outsl xor xor dec mov (bad) (bad) jg xchg (bad) loop jge sub in dec test adc add push lods pop ss cmpsl sbb (bad) (bad) (bad) cmp mov mov adc mov mov pop mov aad stc push cmp mov xchg sub shll and inc and inc test fildl (bad) lcall ds loop sbb mov (bad) lret sbb mov (bad) jmp jnp das lret mov cmpb fwait jp aad das rclb mov shr rorb in sbb lahf loop (bad) incl mov hlt jo mov iret rorb xor (bad) out (bad) lcall or out fs jg dec inc in mov fisttp xchg das lahf sub push xor pop and scas clc adc repnz push sbb lret (bad) call cld pop ljmp and add pushfw lret pop in shlb (bad) (bad) jmp and push xor cmp jle repnz pushw jle or cli jg mov sub mov stos lret adcl (bad) (bad) in or inc xor ds mulb mov cld sub call mov push sbb sub clc (bad) (bad) (bad) pushl cmpsl sub cmp imul lahf jle jnp pushf mov imul nop jg jb test mov jbe jo sbb xor cmp (bad) jl clc dec xor fisubl call push (bad) fcomip and xchg push daa leave inc pushf (bad) (bad) (bad) jmp xchg inc clc adc inc jo pop mov imul pop cli inc js,pt mov cmpsb loope push pop (bad) push rep pop cmp rcl xor popa adc lods in jnp sub jb test mov dec xchg and xchg outsb scas sar (bad) (bad) mov push cwtl fnstcw push inc xchg pcmpgtd pusha lret push (bad) lock pop repnz cmpsb (bad) (bad) (bad) dec jp fistp aad leave lock pop jecxz mov xchg pop add je out (bad) scas call int3 and aam push cltd shl ss mov jmp js jb fsubr jnp daa out aas jecxz push enter mov mov fnstenv jp std (bad) (bad) stc stc jno mov insl repz ficoml fcoms add pop (bad) mov xor dec mov mov (bad) (bad) mov jl cmp cmpsb or jnp dec jle pop dec mov sbb std les (bad) (bad) decl xor leave lahf daa out jecxz aam pop lods enter pop sahf adc xor add enter cmp decl test (bad) fwait dec mov cmp es imul scas lret test bound (bad) (bad) incl es stos nop jno cmpsb add fcmovu jns xchg (bad) adc nop or addb dec lret and xchg xor adc lcall push lea aad mov cld or repz imul loopne test rcr ss pop inc sub in test sbb jge int3 sub inc cmp or pop into mov pushl stc out dec aaa xor pop imulb xor sbb std test (bad) (bad) incl xchg jmp mov xchg ret fdivl mov sti mov sbb (bad) (bad) jg inc loope xor addr16 fs inc loope mov jo adc mov xchg xchg mov jmp cmp push xor test sbb iret sbb xor cmp (bad) (bad) ljmp out push sbb pop add xchg push dec dec pop push jns hlt sbb leave dec cmp ss ficoml ret enter ss (bad) or xor pop orb push out test mov stos adc sub or lahf std or push push push pop sbb inc sbb call dec adc (bad) fcompl out adc cmp fnsave dec xor rclb pop mov roll daa inc pusha pop (bad) mov push sbb sbb mov jmp adc lcall jb mov adcb mov in xchg mov stos sbb inc mov inc lock pop (bad) cmp (bad) (bad) incl outsb mov int3 pop mov and lcall sbbl jl and mov mov fcmovnb xchg mov icebp (bad) shrb (bad) ljmp xchg aad mov in push mov push mov fdivl mov mov and cli jnp adc xchg daa sti bound mov ficompl jg gs stos cmp pusha inc dec jl xor mov rcr call insl pop jne loop cmp mov cli add pop jbe jne cld (bad) incl sub stc movsl sti fnstsw insb pop or adc mov std fist dec mov mov stos loope (bad) (bad) pushl das dec into in int into inc push sub ja inc adc lds (bad) (bad) (bad) incl mov mov xor jmp mov dec jmp call (bad) int mov das inc xchg jle mov (bad) (bad) inc insl mov out mov jp jmp cli dec mov push pop inc and loope (bad) out clc lcall out pop (bad) pop cmp inc in push adc pop movsb aam popa (bad) (bad) ljmp daa sbb pop icebp xor fnstcw inc fisttp aam decl insl push inc fsubl shrb inc and pushl ljmp or lods xchg clc push sbb les push popa sbb (bad) push fidivrl or cmp xchg aad mov outsl (bad) call ds lods sbb cvtpi2ps ret xor dec sub cmp mov (bad) (bad) lcall fstp push hlt sub in mov pop (bad) in pop outsl dec shr cld incb aam xchg inc push cli (bad) (bad) (bad) ljmp in or add out imul test xchg ljmp mov fistl mov mov cld stos (bad) incl into inc push mov add nop fwait push xchg xor jg add mov sbb mov cmpsb mov inc fwait andb sahf lcall jmp lea popa push xchg inc mov pop pushl lcall fiadd mov repnz xor dec jb dec outsl (bad) (bad) call push mov inc dec cmp push jle xchg js push inc xlat (bad) decl lahf fadd addr16 data16 test (bad) call cltd mov imulb pop add es popa dec incl jle lock out adc icebp or aas bound (bad) (bad) decl jne jl jb xor (bad) push push lcall arpl mov mov add call fisubl lea stos je and jg fsubl jecxz xchg sbb gs mov fcom jmp push or mov xchg inc xlat (bad) (bad) (bad) call stos movsl xchg mov dec in in add jo ljmp test xor (bad) decl lock iret inc push dec jg or ja es push cs xor (bad) decl cwtl vprotw sbb pushf fnsave lods into inc or pop dec dec mov add daa push mov (bad) (bad) (bad) incl or imul inc loope out gs dec ficom pop scas push sbb xor push (bad) mov ljmp lret push iret cmp lcall and pop mov sbb and rorl in sbb mov lcall sub in scas add movsb jo xorb decl pop sub push js pusha sti add cs lcall push pop loopne decl xor adc sub ret sahf aaa mov and movb (bad) lcall stos sahf sub sub rol enter stos sbb mov (bad) decl in test xchg inc mov cmpsl lods and jno decl dec adc xchg adc imul push mov outsb out jnp fnstcw jg sti popa jbe out pop fs leave fwait (bad) dec or adc dec adc cwtl ja fisubl jecxz xor mov std loope insl fs jmp dec pop dec xchg cmp lock call pusha push enter addr16 ficoml hlt out sub cmp jne (bad) (bad) (bad) (bad) out jb sar arpl mov loop lods js mov jae mov lods jnp (bad) jmp rclb jle (bad) (bad) call (bad) push dec pop (bad) outsb mov pop xchg dec shlb push cltd cwtl mov pop ja aaa js adc lcall sub fisttp fildl ss sbb add fisubr out inc xchg push add call push mov pushf xchg sub dec (bad) (bad) ljmp ds jnp dec scas add push adc mov push adc pushf mov push pop jl and mov (bad) mov cmp aaa incl pop xchg mov lcall (bad) (bad) jmp cs sti or pop (bad) push insl sub dec or or ss clc sub dec mov movsb or and cwtl scas xchg xchg out sti push adc adc (bad) lea loope outsl sbb jg xlat pop inc adc add push fcoms dec pop adc (bad) (bad) (bad) jle xor sub push (bad) xchg push sbb jl int push jne in cli rcr ljmp sub pop lcall push fwait or pop adc fildl dec fcmovb mov mov (bad) (bad) (bad) decl push aam push cmp sub sub jnp outsb sarb rcrl (bad) jmp movsl shr push cs mov (bad) (bad) jg std cmp pop adc adc rcrb test loopne cld dec xchg cli pop jno (bad) (bad) (bad) push out xchg in shll cli adc ror xor cmpsl pop xchg and aad add (bad) dec enter inc andl pop ds xor aam mov inc decl andb out mov dec cli sub out and pop mov cmp pop xor mov pushl es dec mov hlt repnz gs dec xchg jne cmp jae (bad) fcomip incl pop repz jecxz lret in push cmp xchg xchg or lock (bad) mov fimull loop jbe inc push int3 mov rorl inc scas ljmp or jmp adc jnp (bad) fcomip mov adc clc mov mov jns jmp ret mov adc (bad) incl adc enter loop mov xchg out xor (bad) (bad) mov int mov mov in mov nop jnp test popf mov (bad) outsl ss (bad) lahf push push inc xor xchg (bad) (bad) mov pop icebp mov js mov cmpsl cltd cmpsl mov in aam ret adc hlt inc sbb adc xor inc mov (bad) mov xchg and call data16 ss sbb (bad) jmp (bad) (bad) call pop test push call mov xchg jp mov fcomip (bad) cld (bad) in (bad) test stc inc fdivs cmpsl imul (bad) out loopne mov out cs test aaa (bad) and inc xchg mov sub mov incl dec hlt jne in xchg mov fisttpl popf loopne test in mov lcall push and jp jno cmovs mov es (bad) (bad) (bad) cmp fbld jo adc loope jle fdivrs je pop lods pop setnp pop dec clc (bad) (bad) dec ret pop fcoml out or pop into pop jo test aas inc data16 outsl insb les scas or xchg jge xor pop jno sub sub push idiv or mov icebp sub pushl ljmp clc ja add dec ds and mov (bad) ljmp cmp out fs (bad) dec fist ret cmp lret lea js aaa or decl jecxz and dec mov mov xor cld (bad) (bad) ljmp (bad) das cli add mov lcall clc or lock lcall push adc pop insb mov ret xor test jl outsb repz (bad) (bad) dec in mov nop call test jnp test leave knotw arpl and dec bound (bad) decl dec in aas imulb test push mov push aam fsubrl jo fwait lock xor and test mov inc (bad) cs and std (bad) jg out sarb ret xchg fisubrl add and js dec push jecxz push push and (bad) ljmp or cltd sub outsb jnp into sub jo sub int3 repz (bad) decl lock (bad) pop sbb gs jg test mov mov popa xchg data16 pop cmp hlt enter and or xor lcall (bad) lret fistpll push sti jo (bad) mov aam fistl scas jle mov lea (bad) push sub ror xchg scas clc incl (bad) mov ret pop mov mov lea xchg cmp xor pop pop cmp dec (bad) xchg jne je xor mov repnz stos xchg mov call jns popa mov push int3 sbb pop cmp sbb or dec hlt sub dec and push lret add inc ljmp ds popf sbb pusha loopne mov (bad) js xchg cmp adc cmpsl (bad) or sbb sahf pop mov (bad) (bad) (bad) incl jecxz push sbb add mov lahf (bad) std fisubrl xor mov es sbb mov (bad) (bad) (bad) ljmp loope dec pop int3 lret inc call dec pop fcmove jns mov sub adc pushl std (bad) stc xchg js sbb scas jg movsl xchg mov loopne and mov aad xchg push mov out sbb ja fwait push mov mov aaa ds outsb dec pop cmp push lahf sahf pop stos sbb stc cmp inc or outsb pop sar call hlt push aam imul pop gs mov pop sar (bad) mov or cwtl fs (bad) int3 popf jo adc ficomp push (bad) jg and daa xor lea adc push (bad) (bad) ljmp bnd mov cli sub xchg aaa push repnz dec jne and lods mov xor sarb jbe push cmp inc sub push (bad) jmp ljmp aas inc nop fstpt push pop or jmp (bad) out in sbb ret and imul call mov inc ja sbb adc imul (bad) stc pop dec icebp imul imul mov addl das and insl dec and or push test test (bad) (bad) (bad) (bad) decb sbb into subl mov outsl ljmp inc aas stos jnp pop sbb decl push jmp enter jns xor in rcrb mov (bad) (bad) dec mov cmpsl repnz mov sbb xor dec jmp inc mov mov call std call or test incl cmpb sti arpl push inc pop push push or xchg repz daa or (bad) rcl movsl push pop cmc (bad) (bad) in in jbe push or xor (bad) int3 sub sbb xorl (bad) (bad) pushl and and loope xor mov stos lcall movsb cmpsb out and push jl inc clc fild ror push mov add lret fs cwtl int3 mov cmc mov pop call sub ds adc movsb sub imul jge in jo stos inc xchg ret fcomip cwtl loop or mov rcr stc shlb and (bad) decl push cli push jns aam pop (bad) out into mov jne nop xchg (bad) (bad) pushl dec cmpsb mov xor cmpsl inc jle aaa or cmp in aaa cld mov add icebp mov cmp ljmp xchg iret mov cmp ret (bad) (bad) (bad) pushl cmc sarl adc cmp ljmp add xor jmp lcall cmc pop incl sub cs mov mov sarb (bad) (bad) ds (bad) (bad) jg dec fistp lahf test lret int3 int jbe or xchg notl or std (bad) (bad) sbb jmp pop or aad int3 (bad) mov mov pop xlat sub ds popf rorb sbb (bad) (bad) (bad) pushl int3 xchg fistl pop sub into and jb and (bad) (bad) (bad) call (bad) dec stc mov (bad) xor or addb fcmovb push mov (bad) (bad) jmp pushf push dec in and or mov add in adc sub xor (bad) or inc inc pop mov or xchg inc sahf jbe mov (bad) pushl sub push adc dec xchg mov mov ss (bad) arpl lcall pushl ficomp push xchg (bad) out jns mov inc aaa adc push (bad) (bad) jmp adc xor cmp add xchg jge (bad) (bad) (bad) fnstsw and cmp dec push test cmp mov scas adc jns (bad) (bad) lcall ret divl clc outsl push ss sub rcl (bad) out pushl repz je pop idivl (bad) (bad) (bad) pushl or inc test pop xorl or loopne jno push out (bad) (bad) (bad) push decb push jp ljmp xchg mov push sub adc loopne clc (bad) clc jp lret in cltd cmpsl xor jbe ret cmp pop cld mov pushf ret mov or (bad) (bad) ljmp test xor fcomps and push or fcmovb inc ss and jg (bad) lcall sub pop inc aad fnstcw inc clc inc enter repnz xchg fistl jg (bad) jmp jge or and imul sbb pop inc push and scas (bad) lcall mov sbb xor dec testb insb dec jo das jnp (bad) (bad) (bad) incl lock xchg inc lahf mov lahf pop sbb cli fsubl fadds push push push sub shlb (bad) dec push enter in push mov in xchg adc xchg repnz lcall clc ja scas in (bad) dec sahf mov push mov popa adc scas add test adc not mov fscale pop jnp push (bad) (bad) (bad) jmp insb insl dec test popf not pop jns add in push cmp je (bad) (bad) jmp sub cmpsb je je jns mov js mov push mov (bad) (bad) jnp and pop inc jg lcall loop movsl jb dec (bad) mov ja pop std jmp lock pop jmp outsb pop imul test mov sub sub call scas popa pop ret lds int3 mov int lock dec add loop decl ficoml mov loopne into mov popa sbb cwtl pop insb adc mov shlb mov aam sub mov xchg ljmp and inc in lahf mov jg enter daa test sbb jo (bad) (bad) lcall push pop cld inc scas cltd jp jle sbb pusha in stos add fwait add jp inc (bad) lcall push int sbb xchg dec pop (bad) cmp (bad) (bad) (bad) call inc or fbld mov mov xchg popf or out iret stc mov cmp xchg (bad) (bad) (bad) decl pop ret arpl scas sti push xchg sub sub jmp cmp add (bad) lock movsb test (bad) call lahf xor ror jo xor shll loop daa mov pop mov icebp sub adc in mov into loopne and xlat mov lcall jmp hlt pop xchg or (bad) (bad) mov (bad) (bad) (bad) cmp shrl adc mov sub push inc pop cmp sub scas ja lods add (bad) (bad) (bad) sti ss fwait sub jb and addl or (bad) (bad) fisttp imul mov ljmp sub ljmp push ss (bad) (bad) jns mov and aaa (bad) mov xor mov popa push mov mov cli and pop test (bad) (bad) (bad) call ret (bad) cld stc adc int std lahf xlat inc jp insl xchg mov cwtl cmpsb (bad) or hlt mov (bad) lcall cmc les imul insl addr16 jge sub iret in std (bad) (bad) call or adc push lea loopne xor or fucomip (bad) jg inc ds and ret xchg pop test (bad) (bad) (bad) (bad) std pop push pusha lods xor arpl test push xor add add cld and adc (bad) (bad) pushl add pop movsb (bad) in adc aas or pop inc pop sbb adc cmpsl nop lea and fild daa jg inc mov inc pop ja lds mov mov cwtl aad mov mov shl mov loop aam imul mov lods push cwtl test push (bad) adc enter push fbld pop mov (bad) push ljmp jmp enter scas push cmp cmp xchg fwait pop xchg (bad) jmp inc iret shlb xchg fistpll sbb (bad) xor shlb (bad) (bad) (bad) (bad) ficoml cmp mov push inc adc push sbb js jp and addr16 (bad) (bad) (bad) ljmp cmc scas repnz fnstsw sbb dec inc jb mov fs push nop fdivrp fdiv mov push xchg adc je adc aaa cld (bad) mov cmpsb sub loopne dec cmpsb pop cmc pushw in in mov ljmp adc insb mov test ud2 mov (bad) lcall js loope loop pop cmp cmp dec and cmp mov add incl jl add cmpl dec (bad) aad loop cmp cli (bad) (bad) (bad) frstpm(287 jmp stos dec test fistp push xor mov jne adc sub mov xchg (bad) cmc cmc cli (bad) decl push adc xchg sbb jae (bad) cmp adc push jo,pt cmp add jmp or sub ret mov (bad) lret shrb clc sahf pushf pushl lret xchg inc jge adc incb clc push into fwait imul test call mov pushf adc lcall sbb (bad) lcall sbbl pop push bound sar (bad) mov in mov mov insb imul int add test aaa fstps cmp lret add jg ds xorl add xchg or xlat sbb dec lret (bad) (bad) lcall mov cmp movsb inc mov mov fisttpll (bad) ljmp clc mov mulb out popf add jne cs icebp push mov jne nop inc sbb loope es and mov popf fidivr call mov jge mov lret jp sub jo push pop xor (bad) (bad) incl or shl adc add lea dec adc mov push or icebp (bad) and out push inc dec loopne xor mov aaa xchg arpl (bad) incl (bad) arpl (bad) (bad) adc push adc (bad) pushf ljmp sbb adc and shl mov cmp jae test sbb add cmpsl sbb mov je cmpsl sbb idivb je xor andl mov xchg lock (bad) lcall pop sbb push aam or dec bound and decl shll pusha imul add (bad) mov pop imul fstpt scas mov iret pop pop sub mov push sar (bad) (bad) decl jge fisubl sub and arpl lea adc adc and jns (bad) fcomip add mov or mov jnp fisubr pop (bad) xchg xor mov (bad) (bad) cmp mov jae dec add jp,pn (bad) ret popf insl pop xor jmp test mov mov or lds (bad) jg cld sbb pop fcmovnbe push mov into fnstenv ljmp adc ficomp das ljmp mov mov mov push das jae xchg (bad) pushl push cmp fistl sub scas dec push sub cmp stos (bad) out clc imul add jmp ficom (bad) fildll lret mov dec mov jb ret adc inc insb add push jo xchg fimul cmp je rclb xchg cld jae and ljmp jecxz shr cld test xchg out rorb dec fldl jmp ret mov add push frstor cmp fmull jmp sub (bad) (bad) (bad) decl pop xor in mov jge jmp das and sub outsb in xchg (bad) insb out pusha loope incl and sahf cmp gs cli ljmp mov and or fsubs fisttp jg push cmp arpl pop or (bad) (bad) (bad) lcall paddsw fst ljmp cmp lods fisub popf ficoml rclb jg (bad) ljmp jecxz push ss mov test push in pop (bad) popf sbb insb out test push dec cmpsb (bad) sbb insb jmp les scas cmpb push pop test push ds cmp sbb mov inc lahf or (bad) pushl xchg sti xchg shrb stc adc push push movsb add (bad) jg mov call xor insl push jmp mov dec xchg mov cmpsb fmulp loop std push pop pop mov into jmp dec sub pop ja loopne (bad) (bad) (bad) mov nop rolb jmp nop pusha stos pop in cmp xchg imul mov xor std (bad) lcall mov es shlb inc fbstp mov rorl mov dec pop xor test xor (bad) (bad) (bad) call aas fistp inc es sub mov int3 enter inc push sub dec mov lock (bad) call lret jbe stc cmp jl inc xor outsl dec push out lahf xchg sub add or (bad) ljmp jnp inc sub (bad) mov adc mov leave dec jno sbb push out (bad) (bad) (bad) (bad) aas pop mov jp repz aaa in mov cmp out stos xor sar (bad) (bad) mov cmc enter lock pop lcall cmp lret frstor cmp sub (bad) dec pop and push ja les push xor (bad) jns fs dec mov pop (bad) (bad) (bad) lcall mov ds mov cmp nop cmp xchg scas and fs mov cmc add (bad) fcom (bad) cmp fprem stos push pop jb dec flds jp outsl mov adc (bad) (bad) (bad) jle cmovns mov mov addr16 mov mov les xor daa shrb cmpsl sub (bad) (bad) (bad) ljmp mov sbb orl pop cmc sbb mov ljmp xor ljmp cli aaa das or adc mov test push leave bound imul push or (bad) (bad) jnp mov test mov mov sbb adc sbb std mov (bad) (bad) (bad) decl adc scas test jnp orb add pop mov push inc popf adc mov and sarl sbb xchg test (bad) (bad) cmp jo mov (bad) nop je adc push (bad) or test insb hlt js mov mov (bad) cmp mov sahf (bad) cmc adcl dec or not jp movsb pop jo ljmp fistl repnz sub mov (bad) (bad) incl test mov add dec stc inc rcr das lret mov mov pop hlt outsl sub push jnp repz loop jne (bad) (bad) incl lea cmpl dec cwtl movsl xchg ret (bad) jg or test sahf adc or jmp leave mov cmp pusha adc pop sbb rorb int3 xor out pop ja andl push stc les mov mov dec dec and push loope fs jnp les int3 (bad) (bad) (bad) mov pop aaa lret fidiv negl inc push clc sub or std mov xchg into mov mov or push jl mov mov dec adc (bad) incl xor mov push sub js insl (bad) (bad) call ds pop mov cmpsl pop loope and (bad) sbb push mov sbb cmpb arpl add lcall sbbl sub cli adc dec mov decl xor mov cs mov pop mov jmp bound jno lahf or lret dec cmpsl inc rorb lock (bad) pushl das mov gs movsl xchg (bad) repz scas push fsubs ret adc rolb xchg and (bad) (bad) mov in add int push mov or (bad) (bad) (bad) ljmp fidivrl mov stos imul ret or mov (bad) (bad) lea loope (bad) decl lock jmp push (bad) push (bad) movsb push fistp xlat (bad) dec jecxz ljmp pop mov (bad) mov sub ss jmp (bad) aad jae pushf xchg ret jo,pt xor (bad) ljmp sahf push add in mov adc fcomps inc sub lds (bad) (bad) (bad) incl mov dec xchg jbe sbb jae movsb xchg adc lds push sub stos cmp (bad) (bad) ljmp in mov fimul cltd pop (bad) in xchg aaa and and add call (bad) (bad) (bad) jmp ss data16 jge sub mov test dec add mov leave fdivr jmp xchg gs adc or (bad) mov push cwtl and scas sub popa sbb lock xchg nop pop and inc mov icebp mov (bad) (bad) decl mov fs dec insb sbb xor out lods inc ret je push (bad) (bad) (bad) (bad) jns loopne cmc clc cltd ljmp sub mov add repnz stos cmp (bad) (bad) inc aas xchg xor push xchg shrb nop mulb fstp jae fcomi cmp std lcall dec xchg and arpl cltd push cli call pop pop leave aad aaa fsubr jne in inc dec adc (bad) ljmp lods xchg std loopne mul das enter mov cmc (bad) (bad) mov les div movsb jge aas pop jecxz lods cmpsl xchg testb (bad) pushl sub daa ljmp aad add dec mov sbb pusha or mov int3 fucomp sbb inc lock loopne fidivr lcall mov and xor xchg loopne and rep push js (bad) (bad) pushl adc repnz xor cwtl dec aam cmp mov dec out jge in pop mov pop cmp sahf bound scas jmp (bad) repnz pop mov (bad) (bad) call idivb lcall (bad) xchg stos test int3 mov mov adc dec scas cmp cli pushl pop int add xor add push or add (bad) (bad) decl jnp stos mov cmp ret push mov shrl push cmpsl sub dec decl cmc cmpsb add mov mov out clc (bad) decl out addr16 imull lods js pop add add mov std insb jg or leave sub lea (bad) mov mov inc xchg xorb inc cmpsb inc xor (bad) mov (bad) inc mov jbe ss xor push (bad) jne push push nop xor mov mov call std cmpsb mov rcll sub push icebp adc (bad) (bad) (bad) pushl cwtl or rcrl data16 sbb vmovss (bad) imul xchg fmuls (bad) call ror dec xchg out xor in push popf mov or mov (bad) decl into add loopne fisubl aas jge pop not xchg loop push or lcall sahf jl xchg adc adc dec (bad) (bad) call ds adcl into popf sub mov ret mov add loop incl psrlq fsts mov push cli dec mov pop xchg add movsl (bad) (bad) (bad) jmp xor rclb stos mov test int sbb (bad) je out lea imul stc repnz ror out es int mov decl sahf (bad) jecxz push cs dec fisttpll in push push push lret (bad) ljmp mov and out xlat in xor xor incl icebp cmp insl lret push (bad) pusha mov sub inc in dec insl imul (bad) (bad) incl xchg dec dec icebp cmp not sbb (bad) imul out movsb mov ljmp mov or ljmp orl inc in adc sbb test mov leave mov sbb outsl (bad) xlat sub in pop dec sub (bad) pushl mov test cmpsb xchg arpl lahf testl cmp (bad) incl imul fstpt inc cmpl andl popa fs xchg jg mov adc lret cmp (bad) (bad) (bad) call mov pop mov test imul inc in sti sub je (bad) (bad) decl pop lret inc test pop shld add pop mov in push (bad) and decl out ljmp jle mov push xchg sbb je negl stos cmp (bad) (bad) (bad) jmp movsl movsl jnp ja or and enter push rcll (bad) out mov push mov movsl mov mov mov xbegin test push cld stos jae adc mov (bad) (bad) (bad) out mov mov je sub jno insb sbb popa test mov (bad) mov loop insb sarl mov cli pop adc pusha std cmc rcrb xor mov ficomp pop inc adc mov nop and fdivr (bad) (bad) pushl xchg and jne cmp call ret adc push xor mov decl ds addl ds int sbb mov (bad) (bad) mov xor and mov scas sarb shrb jl dec and sbb (bad) (bad) decl sar es jno add pushf sub sar push (bad) test pop jns xchg (bad) (bad) (bad) (bad) fidivr in (bad) ja insl fldl arpl push push jecxz mov push sarl dec xchg mov (bad) (bad) decl test dec data16 data16 sbb xlat push push out xor mov xor xchg call mov (bad) fscale push cmpsl mov jl outsl ds jno cmp mov iret sub mov cli jb (bad) (bad) call lea cs mov (bad) xchg mov cmp popa mov ss or enter dec inc out cmp nop (bad) sahf jl jg adc lea lret fs (bad) (bad) (bad) js lea adc inc mov xchg cmpsb sub std or lods push jb (bad) (bad) (bad) jmp loop add in pushf push jbe jb or mov jl pop adc (bad) (bad) (bad) decl and insl cltd inc push add and hlt out orl cltd ds pinsrw (bad) outsl (bad) (bad) (bad) call mov or xchg mov test arpl sub xor mov pop (bad) lea pop cld and and or sub clc (bad) ljmp ds xlat ret pop inc out inc je push pop shlb int lahf cli movsl pop aaa adc into (bad) incl fidivrl push xor jnp xchg push jmp sub add adc (bad) (bad) (bad) push mov mov inc add xor dec dec (bad) fnop loopne dec push cmp sub push pop imul ss jp mov pop xor adc popl insb inc dec fucom mov cmp mov aaa leave ret and inc inc mov push jne mov (bad) (bad) (bad) mov xchg stos pop test push adc pop xor movsb adc imul out test (bad) (bad) (bad) (bad) (bad) cmp outsb push jecxz test xor icebp mov outsb pop bnd sahf addr16 mov push sahf push pop (bad) cmp add in lcall push rolb ficomp pop inc sbb test das aaa mov cld sub fwait mov xchg add adc notl jecxz push jno cwtl ss ret pop ret cli (bad) (bad) ljmp dec push fnsave insb jae (bad) mov mov adc movsb jbe idivb ljmp push in and push or pop push jp push (bad) xor pop int (bad) (bad) call push cmpsb or movsl and pop stos adc or loop mov imul mov test (bad) (bad) lcall jge cmc loopne (bad) dec sti mov mov shll cli mov out in and (bad) (bad) decl in inc fisttp xlat out (bad) xchg sbb lahf lahf je push lock adc decl mov inc mov (bad) xchg push clc xchg and (bad) (bad) jmp and sbb push push bound push jbe mov jae mov movsl sahf ret mov add insb nop ds push push scas add push pop (bad) pop popf popa or pop xor (bad) (bad) mov cli scas or in (bad) sbb cmp das jns inc fs (bad) ljmp mov jp mov lahf jl and xchg ljmp xchg in (bad) (bad) (bad) jmp pop or xchg and inc jp bound or jae xchg in es pop repnz or cli inc fucomp pop sahf cmpsl jg mov mov fdivrp (bad) (bad) (bad) cmp sbb sub daa push cmp sbb jmp repnz pop jg jl sar call pusha jmp lods aad cs fsubrs push and push (bad) cmp add out insl xor dec jle jo mov and (bad) incl test in sbb test insb les je iret loope (bad) (bad) call mov mov inc out fistp jmp jne ret loop daa stos (bad) (bad) (bad) pushl jno cld movl leave push push jne add (bad) addl and shrb or push xchg push call fidivr adc jb or dec and inc pop leave push (bad) ljmp and cmp pop int3 push mov or mov into ds rcr ljmp gs inc jnp (bad) jo pushf push inc (bad) pushl lret xchg xchg in shr aas pop scas cmp fnstenv cld dec pop hlt mov lds in clc inc dec sbb (bad) pushl mov adc inc sub xchg inc fsub mov adc xor (bad) call push stos bound lds mov enter jmp (bad) rcrb cmp pushf dec mov mov mov add mov (bad) (bad) call jecxz adc out ret mov push popa pop mov push pop mov pushl cmp pop jl imul add cmpsb lret xor or mov lcall or cwtl (bad) lock and jo loopne mov arpl testb (bad) ljmp lret adc fwait cmp in pop mov add xor test inc jnp push pop ja dec push insb out cli (bad) decl pop xchg jle insl jmp addr16 mov mov ljmp or fwait jmp or dec dec or xor popa (bad) (bad) (bad) jmp jns or movsb cmpsb fdivl jmp sub (bad) dec rcll mov (bad) (bad) idiv lcall pop pop lods sub push and rclb hlt js outsb es in incl push xchg mov or or mov mov cs aas xchg lret (bad) incl (bad) jl pusha jl cwtl dec stc mov xchg or gs stos insl scas ret (bad) (bad) ljmp push call jo iret jbe xchg (bad) stc lcall clc das dec lods (bad) (bad) (bad) lcall fsubp jbe lahf xchg jg (bad) repnz ror pop pop lret inc jns stc outsl clc (bad) ljmp add popf pop jnp and js mov loop cld rorl (bad) (bad) (bad) jmp fild jb pop scas imul xor mov popa jge addl incl lods add fsubs sar jg cmc fmull push aas ljmp xor push mov xor scas bound movsb pop fisttpll cli sub pusha sar push adc sub mov xchg (bad) (bad) (bad) ljmp pop cmp loope fadds fdivrl push push or insb popf nop pop mov push (bad) ljmp (bad) push and and int stos mov or arpl (bad) jg jmp (bad) mov xchg adc push dec jnp or fs movzwl movsl fidiv ljmp push pop jecxz xor lods jno xor and aaa or jbe xlat cld mov mov add ljmp loopne negb push lret outsl insl pusha mov (bad) (bad) pushl sub rcll jle pop push mov imul lods push inc cmpsb sbb and sar (bad) call fcoml push nop add les jg lcall pushf (bad) call ds outsb ljmp lcall fimull jmp inc sub cmp inc in out mov subl jnp pop sbb (bad) incl sub mov adc sub loope push push xchg dec (bad) (bad) jmp clc xchg in mov cs movsb test (bad) push jmp (bad) lcall cli push jl xchg jl xor mov in pop xor incl fidivr xchg js insb pop mov fucom mov or or xchg pushf dec mov icebp mov outsb xchg imul (bad) (bad) ljmp jp pop push push (bad) fwait mov (bad) pop mov mov scas push mov out (bad) hlt mov ljmp lock popa push push sar (bad) out es jns xlat shll mov lahf ret xchg popf scas (bad) (bad) (bad) jg or inc adc lock inc inc add lret pop out imul bound (bad) (bad) jmp pusha cmp xor push mov push jge in (bad) adc les jmp sbb in outsl test (bad) call jnp addr16 and (bad) std push inc ds xor xor xchg inc push pop imul pop addb pop int3 jns popf flds ljmp push ljmp xchg cli cmpsb dec xlat jle (bad) mov lahf dec dec xor jge mov xchg adc push sub push aam mull xchg into dec ja lahf mov (bad) lcall mov push push inc add or mov call push insb and out cs loopne adc or mov pop stos dec es mov push lods mov loop push mov js adc pop rorl or repnz add cltd lds mov pusha repz fcomip incl in mov sub pop andl (bad) (bad) (bad) pushl adc and adc popa jmp xor dec mov dec dec insb out (bad) (bad) (bad) jmp daa insl mov outsb lods cli stos (bad) xor mov insl in dec shrw (bad) (bad) incl jecxz mov movl sbb add ret jnp pop cli jmp mov cld (bad) (bad) (bad) fist popl cli or arpl mov jg and cmc adc ret push daa sbb and or jnp (bad) aam xchg stos ret add and jge or adc mov inc cltd mov enter shrl mov lcall inc rorb cmp or pop rorb or inc scas nop push int3 push dec inc add push xor lds or jle and (bad) (bad) push pusha (bad) jecxz xchg inc inc mov fldcw adc movsl xchg test jb (bad) jmp popa mov push push in shrb adc sbb (bad) (bad) (bad) (bad) por mov dec xchg pop ret push jbe (bad) mov jecxz mov jmp (bad) (bad) pushl or inc or stos push xchg inc inc ror pop imul adc into push xacquire neg cmp fnstenv cli mov adc ret cmp fild mov xchg mov es int sarb (bad) call (bad) shrl mov mov xchg jne jl jbe push idivl call ljmp movsl xor (bad) mov imul outsl pop lret shl mov in or (bad) mov cmp cmp js (bad) (bad) (bad) jnp pusha inc inc mulb shrl and stos adc outsl xor xor and lcall push lret dec xor (bad) or nop jo add (bad) (bad) jmp fcomip jb arpl pusha in les sbb mov xor mov mov in adc (bad) sbb jmp jecxz icebp mov (bad) (bad) jg popa cmp sahf daa hlt push push adc lock jns,pt xor aaa ja fcmovnu jb push cmp scas push jp and sbb (bad) (bad) call cmp inc cmp mov xlat mov mov lods inc icebp cmp mov inc stos (bad) (bad) (bad) (bad) mov mov addr16 popa mov mov cmp jns dec or dec lret add (bad) call jle cmpsl or dec dec imul js pop adcl (bad) out mov ret mov mov push pop aas add (bad) (bad) (bad) mov addr16 out hlt xchg push and mov and clc push decl xor scas fsubl popf xor pop sbb inc rcrb mov or ds (bad) (bad) dec jmp add jb push fdivs push jbe mov movsl cmc cwtl movsl (bad) iret mov (bad) mov das ret xchg lcall nop mov mov xor xlat cli (bad) (bad) decl scas subl xchg int3 mov lcall lods mov inc loope and cltd sbb jns fdivrl (bad) incl mov inc popf into mov call pusha icebp mov mov insb fs scas or push adc (bad) (bad) (bad) jge jnp cmpsb xor scas mov mov fsubr mov gs adc lock fldt xchg push outsl sarl (bad) mov movsb leave fwait push (bad) (bad) (bad) fistpll orl fldenv mov out push mov jg (bad) lcall ljmp cmpsb add insb mov scas idiv cli int sub jg add inc outsb js pop pop dec xchg fisub mov lods (bad) (bad) (bad) decl and call mov xchg push into mov out out xor js js xchg (bad) (bad) (bad) pushl push add adc pusha call mov lcall cli adc add (bad) call or jns stos daa movsb jle lret pop dec sarl pop cmp (bad) aaa cmc (bad) (bad) jg mov add gs inc hlt test pop je pusha mov cmp (bad) (bad) decl push jno mov (bad) popf adc fdivs mov jg int3 xchg xor rcr mov (bad) (bad) fcomip sub das fdivs pushf jp adc cli enter dec shlb cmpsl nop cltd and (bad) mov jle xor add pop mov repz jne,pn pop (bad) add (bad) (bad) clc rcl jecxz mov push xchg outsb into sbb mov aad aaa icebp add dec (bad) (bad) (bad) decl pop push mul push je inc adc data16 ljmpw int ficom push repnz (bad) (bad) decl into pushf xchg icebp mov xor cli std cmpl je mov lcall lea or es (bad) in pop cmp mov ljmp xor cwtl adc adc cpuid add pusha cmp incl lcall aad insl jo ret sbb xchg xor jmp movsl clc push (bad) (bad) aas xor icebp mov pusha ficoml repnz cmpsl (bad) (bad) ljmp enter xchg cli push leave push pusha popa insl or add xchg xlat (bad) (bad) (bad) push nop (bad) hlt inc sti (bad) ja jle addl mov decl push pop pop fwait test (bad) incl jp es jp inc out lcall sahf ds (bad) jmp inc sbb lret add cmp cmp fs jg (bad) cmp sub push mov or movl imul (bad) sbb fstpl in (bad) sub xchg pop push xchg cli movsb xchg inc (bad) (bad) in xchg cmp jmp xchg or out cs ja jne,pt xor dec (bad) lcall mov mov bound jmp pop dec hlt push xor les xor (bad) decl add push ss push sar xchg (bad) inc xchg pop jle (bad) mov cmp adc or cltd and test add (bad) mov (bad) jle mov cmp ret test pushf (bad) jmp mov pop adc (bad) (bad) ljmp cmp lds jo lret xlat leave and push xor (bad) or js xchg (bad) decl sbb mov repz jb negl sahf lods insl stos mov xchg roll xchg mov sahf adc mov cmp shrb aam aaa je inc jg dec movsl xlat inc sbb mov inc shrb jns jle (bad) (bad) mov xadd outsb and daa push add jns mov scas arpl or pop cld pushl je mov jns js std outsl add mov or (bad) fstpl push jg decl es sub dec xchg vmread std aaa std adc mov popa loopne xlat xchg cltd inc hlt lret loop pop push (bad) (bad) (bad) decl push xor jp mov enter mov pushf mov aas insb cmpsl gs aad pop cmp fisubl jle jecxz mov aam imul sub (bad) dec push scas aas inc add and ret fidivl loopne cmp pop mov stos jns outsl cmc inc jbe scas mov lahf push mov inc lods add mov test dec jl sub in bnd dec (bad) decl and mov xchg mov inc cmc mov (bad) (bad) lcall push loopne mov and pop push xchg sahf in mov sbb (bad) mov or fwait rcl mov cmp xchg add (bad) (bad) incl mov push xchg jbe push (bad) fildll pop mov xor and (bad) jne (bad) (bad) (bad) cmp or mov jns out jp aam sub adc incb (bad) (bad) ljmp xchg sbb xchg or lcall iret ret (bad) jle je jp loopne std das inc lahf mov dec or (bad) sti movsb xchg inc sar (bad) cmp jecxz mov cwtl dec cwtl jmp pushf outsl push lods out xor inc popf aas test or dec dec (bad) adc out mov xlat rcll incl cs lret cmp ljmp aad mov lcall sub lock mov out sub mov cmp (bad) jg pushl (bad) jg jmp pop aas loopne bound jno movsb mov push mov inc gs (bad) (bad) push sarb repnz loopne (bad) std mov pop rolb test dec testb ret adc (bad) (bad) pushl xchg pop mov in sahf adc test popf push (bad) adc xchg cs int call decl out pop jne jno mov jmp in stos ret push dec mov cld incl cmp cmp cmp popa xor jg xchg adc (bad) (bad) (bad) jmp ficompl repnz and (bad) lods cmp cmp xchg loope cld cmp sbb fnclex call or gs lret jmp iret inc push push (bad) add lcall mull pop les push mov ja or movsb cli addr16 mov sub imul mov jb (bad) (bad) (bad) lcall jae pop lock jns loop sbb test cli scas push les cli out (bad) (bad) (bad) pushl outsl pop mov inc dec jo adc cmp repnz or fnstsw (bad) lret push cli ljmp idivl pop movsl std dec test scas jne,pt lods cmp (bad) stos imul pop addb add jo dec cld sbb push (bad) stos mov stc push pop (bad) out clc jg sbb movsb adc loopne movsb xlat out xchg movsb or js adc (bad) (bad) ljmp inc adc test mov mov pushf icebp jne shl inc xchg xchg outsb sub (bad) (bad) (bad) call out popa lcall sbb lret std ss cmp pop add (bad) dec fsubrs dec cmp mov push gs inc shrl push repz inc jge test inc mov shll sub icebp push fwait push xchg cmpsl les inc pop dec sbb (bad) (bad) lcall mov stos cmp loope jbe pop cmp and cmp rcrb (bad) mov fsubrp aad ss inc cwtl mov fdivrs popa pop sub (bad) decl cld pop or insl mov mov (bad) into cmp dec jno mov aam ljmp fsubrs jge (bad) (bad) mov popf data16 xor outsl popf mov fiaddl js clc (bad) (bad) (bad) incl xor add fwait imul lods ljmp mov stc jmp mov insb dec (bad) lcall in (bad) fiaddl imul inc pusha sub fsubrl mov out (bad) (bad) lcall in push rcrb add lock shlb stos push pusha iret leave cmp nop mov call divb (bad) jns xor popf mov scas add scas mov out xor pop push adc jae nop mov (bad) call xchg pop add adc (bad) and jp rorb xor pusha or (bad) (bad) call movsl fsubrs stos cmp nop scas mov ljmp in push ds or lcall std jl repz pop cmp cwtl xor out inc sbb decl fdivrp int3 bt clc imul (bad) adc push jns popf xchg idivl fildll out add push jle cmc inc psubq aam sbb inc sahf ret inc jp sub mov aad pop lock decl sahf inc and mov sub adc add (bad) scas jge call cmp cmpsl inc fs pop popf dec xchg ret mov cmp (bad) ljmp pop loope or sbb push jae jo ret movsl xor (bad) call jge int cli mov daa adc test cmpsl push (bad) cltd scas dec add (bad) (bad) call int3 and push push xor lock jge jne mov or out sub addr16 popa ljmp std mov xor lret dec push (bad) jg add ds lahf jnp (bad) (bad) (bad) (bad) clc in xchg pop insb jg lock nop flds jl (bad) test loopne mov ljmp gs jmp pushf out push stos cmc jp stc int3 ljmp xchg aam sbb (bad) (bad) (bad) (bad) call pop idiv add jecxz pushf sbb and mov or mov add (bad) (bad) lcall arpl add ret lods rolb sarb mov out imul sbb es sub mov cltd lahf fstpl pop sub pop imull test dec clc (bad) jmp pop inc aaa in dec pop or xor jg jne jo aad add (bad) ljmp mov insl push adc xor sbb cli xchg aad cltd pop pop lret loop dec inc ds mov and (bad) (bad) incl inc out mov and pop jle sub lret jnp push mov ja in add movsl (bad) (bad) (bad) pushl lcall jg pop jo cmp loop pop (bad) mov cwtl outsb sbb push fstl es xlat (bad) sbb dec ss (bad) incl sbb push cld push dec xchg je xchg or push add icebp fwait dec (bad) (bad) (bad) (bad) fisubr jae xor je cmpsl lahf (bad) xor data16 sub xlat mov pop (bad) (bad) (bad) call inc repnz pusha ss inc int3 mov jo jle pop cmp jbe mov cmp xor and es (bad) ds lahf or dec sti (bad) ljmp mov subb sbb cmc jmp and in mov (bad) (bad) ficoml or sbbl mov movsl (bad) (bad) call nop imul mov movsb push outsl or ret cmp cmp ljmp mov sbb push sub xchg cmc adc cli (bad) decl dec sbb out pop xor daa ret mov (bad) (bad) (bad) dec jle stos pusha dec cmpsl mov add jnp cwtl sbb ljmp in (bad) (bad) (bad) call mov fimull push mov cmp xchg cmpsb movl and (bad) (bad) (bad) cmp xchg lods fwait cvtps2pi movsb out xor xor es mov xchg push sti jmp lods sti movb or icebp (bad) jg decl or sbb mov inc rorl cmp sbb push or ljmp push in hlt and (bad) (bad) (bad) inc je jbe call pusha mov loope sbb out jge jb adc pop test add movsb jnp popf jae (bad) xor (bad) into sbb stos sub sar (bad) (bad) pushl dec add adc pop dec cmc dec cmp or sub nop lock idivb cs sub dec outsl inc jecxz push ljmp cwtl clc (bad) (bad) pushl sub shrl scas ljmp lcall adc or xorb loopne les loopne ljmp xor movb rep and gs jb (bad) (bad) (bad) mov mov jle loope test cmpsb mov mov or into scas xor (bad) decb jmp idiv sahf mov (bad) (bad) (bad) (bad) jns mov fldcw or add cmpsb push andl pop scas dec loop sub mov sar incl lcall xor (bad) out in mov xor mov (bad) (bad) jg rol icebp pop xor ja pop rcll push xor les (bad) (bad) dec (bad) mov cmc outsb ss and pop dec inc xchg leave cmp pop dec jmp cmp xor (bad) (bad) (bad) jmp inc test push stos out (bad) push cltd negb into mov adc inc inc ss lcall mov aam sbb adc and sbb cmp mov mov mov or out out or mov sbb jno inc sbb (bad) (bad) (bad) call push dec xchg sbb jbe inc repnz subl jg push push addr16 add pushl lcall data16 mov out adc je push iret stos cmp test test mov mov aad push xchg fs push (bad) xlat jo inc pop inc mov das sar popa std mov cmp (bad) cld dec sub push jnp mov (bad) (bad) lcall or xchg push out ret mov jmp adc dec dec mov sub (bad) out pop adc mov in test add sub sbb mov push sbb pop add pop cmp jnp lock jb push mov gs pop xor (bad) (bad) ljmp or pop outsb fsubp inc (bad) addr16 push push outsb adc fstl les mov lock fwait lret push repz add scas into fist add clc (bad) (bad) aas inc push sbb es fstpt dec lods inc dec lods (bad) (bad) jg mov sub adc xchg arpl test jp push jl fdivs xor loope movsb mov push imul cmpsb call ss jecxz sbb mov xchg test (bad) (bad) (bad) call cmp mov dec test jg int3 ds push mov icebp and hlt das clc call adc sbb mov icebp sbb (bad) (bad) fistp into xor andb sub stos sub mov mov xlat push lock sahf add cli stos (bad) (bad) jmp mov push adc mov sub inc adc and (bad) (bad) (bad) (bad) cmp dec leave dec dec outsl mov pop pop sub loopne sbb out mov mov mov jmp push (bad) adc jbe sbb lds cmp and or inc jl push sub mov dec sti or outsl lock and pop pushf and push or sub push cmp lret js sub cli test mov aas sub lds (bad) incl repz rol cmp ljmp mov (bad) fdivrp cld movsb xchg (bad) out mov inc cmp rclb sub pop test fdivs jno aad call jmp mov fcomps in push das sahf int das test out ds data16 pop cltd jo xor stos pop in leave adc push enter push out cmp push in jle and cmpsb loop rorl push aam or lahf add adc pop gs jg js jae (bad) (bad) mov mov mov cmp xlat lea pop and xchg (bad) (bad) (bad) decl or jg push cmp nop inc mov icebp (bad) loope (bad) clc decb decb loope cs (bad) (bad) lcall xchg or int3 test cs add enter cmp ds dec push test (bad) (bad) pushl add xchg jbe cmpsb xor (bad) hlt xor and sbb jle mov (bad) jg dec push das xor xchg aaa xchg movsb sub jg sub lods mov inc pop jp (bad) (bad) decl sbb xchg loop xor inc fistpl lcall dec pop aas jno xor test decl mov (bad) jl call (bad) (bad) mov fsubs pop lcall out xor incl xchg lret sbb data16 in popl adc rolb mov jg inc cmpsb addr16 aad ljmp aaa jns cwtl fdivrl mov (bad) cmp mov stos jecxz mov xor dec and lcall je mov mov mov inc test pop sahf mov xchg push push pop xlat dec xchg jno jecxz mov and test (bad) (bad) (bad) ljmp mov adc enterw xor sahf cmp clc jo xlat mov xor mov (bad) (bad) decl adcl fstpl mov push cmp cmp es clc mov mov (bad) mov movl cwtl in and ret pushf add adc js movsl imul ljmp (bad) or std xor gs inc sub add xor or or stos in ret push mov mov pop (bad) jg jmp mov xor bound jl xor dec jle (bad) jno (bad) jg loop adc push jo inc jl ret mov mov jne (bad) ljmp rcr add add mov pop stos repnz xchg clc lds imul jecxz push aaa enter xchg sbb incl dec mov inc dec sbb sub mov adc cmp (bad) (bad) (bad) (bad) cmp dec adc es nop and xor rol adc aaa cmp data16 (bad) (bad) (bad) pushl icebp pop sbb xor mov xor aas sub mov (bad) (bad) (bad) cli lret xchg jle test jl loope mov aas fidiv scas iret add pop leave push xchg loopne or hlt les adc (bad) (bad) lcall insb mov mov or sub jge adc dec adc js (bad) (bad) ljmp and push mov push cmp into pop icebp scas push jle jns jmp adc (bad) incl test (bad) lods in stc pop mov sbb dec mov je,pt jp loop add (bad) mov xor xchg scas xchg (bad) (bad) (bad) decl jge push ljmp adc add xchg adc (bad) push mov and sahf sub mov jb ljmp mov mov xchg xchg xlat mov cld and and fsubl outsb push sbb call mov ja xor jns orl mov lods sub mov sbb stc es fucomip loope loop iret xor scas xchg out aas orl (bad) jmp jno popa xor mov shr xchg ljmp psubusb addr16 cltd (bad) fisttp push ds mov pop jno (bad) repz push ret into push inc adc mov ja lcall mov js scas add (bad) (bad) lcall scas push cmc pop std enter mov cltd (bad) mov and push push into jno inc out cli (bad) decl pop xchg pop pushf xlat inc out lea test jmp sar repnz scas les (bad) (bad) lcall pop inc (bad) roll jmp int3 lret sbb mov or jg insb out pop add (bad) jmp dec cmpsl ret and pop ljmp cmpsl sub test mov jge mov (bad) (bad) (bad) fiadd pop and sbb dec (bad) fistpl sbb (bad) pop xchg ds cmp jp int3 inc insl imull dec xor (bad) (bad) (bad) mov lcall out or fmull jp inc out push aas inc and out jg (bad) push xor rcrl sub mov xor push (bad) jg ljmp into lock or bound add (bad) fldl (bad) (bad) (bad) inc outsl sbb shlb jo imul ljmp int3 sbb (bad) (bad) (bad) call xchg xor or sub cld dec jp push push popf pop dec push jae adc (bad) push hlt dec rcll inc repz xchg or push mov cld lcall dec jge mov rcll clc xchg pop decl add imul sbb lea xchg rcrl mov lahf xchg inc enter (bad) (bad) fcomip sub xchg ljmp lahf jge lea outsl out and jg loop pop sbb mov cmp lret push addr16 (bad) (bad) push addr16 adc push sub inc xor popl into pushf mov sbb (bad) incl mov xor dec fmull mov pusha and cmpsl cwtl out inc mov cld pop loopne in movsb pop cmp rcl push (bad) (bad) call sbb dec jecxz pop sahf dec std lock stc inc fstpl jmp cli sti or dec ljmp ds stc aas sbb jae scas xchg (bad) (bad) (bad) pushl enter mov sub jge mov fwait inc sbb inc sbb (bad) (bad) (bad) (bad) mov mov into (bad) push int3 lock xor inc xchg add jno cmpsl dec int3 jb add mov fucomip mov inc mov xchg and je clc cmpsb mov in loop add (bad) (bad) incl adc (bad) cmpsl flds add enter int3 arpl popf cmp (bad) decl adc cmc sahf cmc es jmp or pop sub or xchg movsb ljmp (bad) loop ret push mov ret orb (bad) mov adc mov repnz je cs pushl mov (bad) addr16 jnp xor cli mov sti and (bad) (bad) call mov (bad) mov xor in inc loopne aaa pop lds fsts fs (bad) mov out dec lea imul loope mov pop push repz lret cs (bad) (bad) decl adc fidivrl (bad) dec mov enter inc rclb pop inc xor (bad) pushl mov and jns ret cmpsl dec std jno or pop aad insb cmpsl add mov (bad) sti ret jmp das xchg in jg mov popa sub movsb rorl or jmp (bad) push sbb xor pop das rcrl (bad) cmc test test fsubl bound push mov and jb pusha cmp xchg (bad) (bad) (bad) cmp outsb dec aad push inc das aam push repz xor pop lcall push cmc or idivb popf jne mov stos (bad) (bad) (bad) ljmp mov icebp inc hlt and arpl cli jne leave mov push and (bad) ljmp or addl arpl sbb and mov or jl xor cmp ret fildll lods mov mov mov out cmp fisubr mov aaa ds and (bad) (bad) jle mov lock xchg mov pushf or enter lcall sbb add stc stos es sbb sub loop fldl (bad) (bad) (bad) incl cli jecxz or inc or and inc pop mov jmp lahf insl add lods mov (bad) (bad) (bad) call leave jne test ficompl sub rorb mov xor (bad) (bad) (bad) jle xchg cwtl push sbb pop or dec inc jl rol xor arpl add or outsb (bad) (bad) (bad) decl mov jne stc pushf lock sbb and scas sbb jno mov (bad) (bad) (bad) add ss lods lret xor nop or sbb sub pop jle idiv decl mov jl icebp dec incl cmp mov and mov (bad) (bad) (bad) incl das std (bad) (bad) jl out pop cli xor sbb scas pushf lret dec loopne in xor outsb cld jmp cmp hlt push push in mov adc dec sbbl fs jne and std pop in push push jp fdivrp stc push add (bad) lret xchg push cmp adc dec adc (bad) (bad) (bad) clc push and dec inc sub pop (bad) pop vcvtsi2sdl xchg add mov cld jmp pop sbb jb nop xor inc sub data16 sub aas mov lea rcrb out add mov stos push sub add mov popa aad pop cmp fdivrp (bad) mov mov aas das imul test inc outsb sar (bad) ljmp pop fwait cld insl mov sbb push mov cmpsb jecxz hlt aaa sbb lret and dec movsl shrb sbb xor lahf notl pop dec xorl add shrl dec sbb cmp inc mov loop call popf add adc (bad) int3 jne mov pop lahf loop inc jecxz lock xchg (bad) dec stos enter (bad) push dec sub xor mov das sti or mov sub jg mov outsl pop or add rcr movsb cmp outsl pushl jns or add mov cmp pop lea dec (bad) cli test (bad) (bad) pushl xor out je fwait movsb cmp mov fwait mov cmp inc jae push loop (bad) call in push mov stos les adc inc test arpl mov inc add aas addb mov (bad) (bad) jg pop jne pop cmpl aas push inc or push jb stos aaa data16 (bad) mov push fwait push sarl dec (bad) sbb cmovae bound es (bad) call lock scas mov mov popf inc fcomps push mov mov mov pop (bad) (bad) (bad) inc jge lret in xchg icebp lea sub hlt icebp sub push loopne pop iret lea pushl in xchg jecxz inc xor add fwait repz fldcw and cwtl adc (bad) (bad) lcall scas mov mov test (bad) rolb sbb fisubrl fs jl fwait outsl (bad) (bad) (bad) pushl fsubr xor decl dec (bad) inc dec idivb xchg jp pop push sub push (bad) (bad) (bad) fsubr dec wbinvd jl imul mov bnd rolb sub dec mov mov hlt sub jae jae adc or (bad) (bad) (bad) pushl inc das xchg dec daa add cmp scas xchg xchg fs cmp sub sbbb cmpsb (bad) pushl cli loop scas loope mov movsl add and popa aas pop decl mov adc xor pusha fildll xchg (bad) cmpsb and fs (bad) (bad) (bad) lcall cmpsb dec iret dec jg push fmulp dec xor cli pop mov (bad) lods and shll mov jmp and lcall ret jb jle movsb jns inc (bad) lcall mov sbb or ret aas sarl jae adc (bad) (bad) js adc popf shll mov cmpsl xchg mov mov push or ss sub xchg sub scas mov jmp sbb and lret push inc jle mov scas cmp sub xor nop mov xor dec mov call and popf mov xchg (bad) (bad) fs loope pop (bad) (bad) (bad) (bad) jg pop mov mov sbb cs in inc sub call test add cld das aas test mov rcr jecxz cmp mov iret call push aaa push int pop sub fisttpll (bad) push xchg push cmp jp xchg inc fistl (bad) mov (bad) mov xchg xchg test call sahf xlat mov and and push gs (bad) or in (bad) adc push dec mov out lods pop test movsl add not ja sar push jno out sbb imull js (bad) (bad) lcall xchg sub and dec xchg push loopne mov aas mov aam xchg rclb jmp cmpb lret jb lret mov lock or pop data16 js (bad) leave push movsl mov xor cld js lahf mov mov pop movsb pop aad inc sar notb pop dec aaa push lds jmp int sti inc loope pop mov ret int3 lds lock (bad) mov pop ret cli (bad) incl push adc cmp arpl inc flds arpl fs jle aad enter cmc call ds int pop rcrb lret in ja insb xchg (bad) (bad) call scas out xor cmpsl xor pusha adc (bad) mov scas push mov les xchg mov data16 incl xchg hlt jecxz sbb (bad) (bad) ljmp sarb lahf (bad) test (bad) movsb mov or sar or (bad) pushl aas popw xlat mov out imul ret in les imul mov (bad) incl push sbb mov sbb je cs das js inc (bad) (bad) incl mov inc daa fwait fs int inc sti add fistpl cld fidivl lahf testl or movsb sbb cltd xchg dec sbb xchg test fwait or dec mov insb add call (bad) (bad) (bad) dec std jmp enter or xor in cmp sbb popa sbb loop xlat (bad) ljmp es xchg dec xchg push clc inc add (bad) mov jbe insl (bad) inc test (bad) call (bad) sub outsb xor aas lods nop push stc mov pushf ret lcall cli lcall inc inc cmp fisubrl and clc pop jbe (bad) xchg adc js xchg je (bad) (bad) call cmp in fwait data16 (bad) in shrb test gs pop (bad) movsl sub xor ficomp repnz xchg scas push (bad) pushl cld cmp xchg in fwait mov in add mov es sti lcall popa pop rorl mov and (bad) movsl imul pop ljmp push lea sub repz imull push cmpsb or loopne stos cwtl out std dec loop (bad) shrl jb cltd and sti fsin std test add cs cmp lods jne add ljmp je js mov out bound mov ja int (bad) call cwtl xor jmp (bad) pop push sbb sub dec loopne push (bad) (bad) (bad) lcall mov xlat inc fs xor lock les flds dec cmp (bad) adc push movsl mov cmc mov jle xlat (bad) jmp scas xlat adc dec lock cmp pop cs push and adc (bad) ds cli inc lret pop es movsb shlb mov stos (bad) (bad) lcall fs cwtl aad pop or mov rcll (bad) (bad) (bad) fistpll push sbb push xchg repz or adc nop adc dec jecxz stc stos adc push (bad) das add mov out nop mov adc or ds (bad) rcr mov jge test or cmc push ficomp jecxz sar inc or push jle adc ret es out fstl xor inc xor dec into test aas das dec xor (bad) jg (bad) cmp outsl jg pop (bad) test jg movsb xchg sbb or scas mov das xchg push pusha repz fisubr adc test mov mov outsl loopne imul repz mov pop (bad) in cmp pop and int test push bound loope repnz outsb xor imul test inc imull pop xor incl pop or xchg dec push dec js insb mov cmp (bad) (bad) jmp ss popf outsl fdivs in clc jge les pop adc pusha mov out mov mov mov ljmp dec decl jno sbb pop (bad) (bad) jg inc xchg and out scas jns stos call scas jne dec dec (bad) (bad) ljmp (bad) and scas aaa jae adc inc outsl and jae data16 inc jge sar lea outsl ljmp mov fidiv (bad) ljmp sub in add les xor in xor mov (bad) jmp or jle fmull dec ret mov cmc outsl js (bad) fild pop mov movsl nopl bound lods adc (bad) fildll shrl ja push xchg pop push test xor cmp push in aaa out rorl xor ds xor popa xor ss cmp decl push mov cwtl imul pop mov mov jmp mov add mov in or pop jmp or mov xchg les aad sub jl decl pop fild cmp test int mov ret scas push dec push inc push mov rcl push repnz outsl add shl (bad) (bad) jmp dec divl mov push bound push stos mov (bad) (bad) (bad) incl pop fmull adc inc gs or or fs loope jecxz pop inc ljmp (bad) lcall and xchg call ds lcall push or cld (bad) (bad) jmp mov scas pop jbe gs out fdivrs cmp movsl add mov jg add push pop jnp jmp in mov (bad) push aaa jp mov cwtl aam sbb (bad) jmp cltd pop add adc outsl es mov cmp outsb fprem scas ds scas cmp cmc mov jns (bad) jo data16 mov repnz lods mov out out mov push push (bad) incl or repnz int3 mov and decb mov sbb fcompl inc test pop aad cmc lcall scas clc mov test sub mov decl add sbb pop inc pop or aaa lea push fs mov (bad) (bad) (bad) lcall call rcll push jp lea js sub lds dec out adc stos or (bad) jmp push mov rorl in enter outsb aad in xchg push clc (bad) add jb push dec mov lret je mov xor inc jo divl mov les inc test adc call sbb push mov pop call jle movsb dec repz loop xor (bad) lcall int cwtl clc sub add mov xchg add stos dec int test (bad) decl mov les adc cmp mov imul mov loopne dec add sbb fwait push inc (bad) dec inc (bad) je fiaddl sbb xchg add add dec (bad) (bad) (bad) fild daa adc mov inc lods jne pop xchg push data16 test pushl nop loopne push daa mov sub and and jg mov insl aas fnsave push push jg movsl sub pop dec mov xchg (bad) mov fs mov xchg jnp jg (bad) jb (bad) cmp stos sub (bad) call push test lods sti test mov repnz inc into jbe js xchg dec pop mov decl (bad) cs mov loopne fcomip dec adc push dec inc pop stos mov fildl pop pop les mov xor rclb icebp rcr (bad) (bad) dec push das (bad) insl mov pop xor out nop sbb push js mov dec pop and jmp (bad) (bad) inc mov movsl or cmpsb psubsb mov mov mov fcomip (bad) lcall std xchg stc stc jb (bad) je or xor aad rcrb (bad) repnz decl cmp xchg in pop dec testb jae inc inc repnz (bad) sbb push inc sti outsl in (bad) xor mov mov mov out nop add (bad) (bad) lcall test sti add fsubs add mov push mov and mov adc movsl in sbb loop cwtl (bad) (bad) (bad) jmp or mov pop lret rcrl lret mov mov dec dec lds js lret dec les push movsb xchg pop sub adc addr16 push inc clc lods or (bad) call les icebp sub (bad) xchg mov mov mov imul sub enter lds and (bad) dec test out jecxz and cmp xor pop mov inc push inc pop mov out xchg adc xor lahf fldcw andl mov adc adc cli (bad) (bad) (bad) jmp jne stos mov sti mov cli xchg fcmovnb test hlt jne pop andl jno in call push int pusha pop mov mov out or jge,pt (bad) (bad) call test dec dec int cltd loopne andb push inc pop xchg inc ja test cmc daa dec decl cmp sbb mov adc loop cld pop mov in sub jae sbb (bad) (bad) dec ret cmp mov and out ret pushf add xor mov lret and mov mov lret dec and jb (bad) out aaa xor in je or add mov (bad) (bad) jmp or pop mov mov xor sbb lods add es (bad) decl (bad) fcmovnbe add fucomp xchg add and push cmp jecxz and (bad) ljmp lods fsubrs push adc push stc icebp fs stc (bad) (bad) pushl mov dec movsb inc lret mov sbb cs mov loope cmp daa (bad) (bad) (bad) inc addr16 fdivl mov lahf das add mov dec sbb ret fdivr push sub mov (bad) ljmp jmp xorb mov scas cmp mov loopne das cs (bad) (bad) (bad) mov add sbb mov cli adc sub xor gs hlt push push push adc insb notb mov push pop vpsubsw testl xchg loopne push push idiv clc adc xor jecxz push (bad) incl cld pop xor dec and (bad) (bad) shrl sub (bad) mov cmp sbb bound add test fdivs pop dec insb ljmp add shl int3 xlat mov sbb icebp sub in mov shrb ss lods movsl into mov les mov mov xchg jns icebp mov cmc push mov cld fnstsw add (bad) call fstpt sahf sbb or sarb movsl jp mov dec (bad) (bad) (bad) jmp add sbb and sar iret inc dec pop cmpsb add pop sbb rcl xchg roll movsl push cmc mov xor xor dec and jg mov jg lock (bad) (bad) push lock xchg lret and push and aas cmp xchg jge and (bad) pushl stos sbb add cmpsb cltd xchg dec xchg cmp mov iret inc repz lods mov pushf daa loop push negb mov cltd adc jno sbb (bad) (bad) (bad) pushl inc mov mov dec ret adc fstpl movsl lahf pop les (bad) mov jmp insb mov sub (bad) (bad) ljmp movl out call lret or and lret and (bad) incl enter inc add pop lret pop mov loopne jae lock out fmul dec popa ds and (bad) (bad) mov sbb mov cmp ficomp daa icebp cmpsb jmp (bad) call sbb push sub mov or xchg sub insl stc mov (bad) call bound lods pop fstenv jns adc xchg into imul inc (bad) (bad) (bad) cmp or stos test sub adcb loope and das adc pop ds cmp cld ja (bad) inc jbe aaa fidivl or inc int fsubrs hlt adc outsb fisubr (bad) (bad) (bad) pushl jnp es push testb call add test loope int3 mov sar arpl outsb cmpsl mov lret pop out into mov dec add add and (bad) (bad) pop int3 aaa ret out fsubrs mov into sbb push enter ja mulb push jmp out inc lret out pop rolb xchg clc lea les cmp ljmp mov shl jge nop rol dec (bad) push out xchg jge mov std mov or lea xlat jl mov jnp cmp push xchg sbb mov adc ljmp inc sbb imul add cmp push into cwtl dec xlat gs push stos mov or pushf inc xchg mov xor mov lcall (bad) out cli push cmpb hlt out fsts mov insb cmpsb clc lods (bad) pop inc in int3 push mov ja (bad) jmp iret xor dec and sbb cmovno pop movsl cmp inc mov mul into fcoml inc test inc ficoml mov fsincos jb mov push jge popf sti (bad) (bad) (bad) decl cmp or or push mov cs sahf push cmp divb jg mov pusha in (bad) (bad) incl push mov push jmp fsubl push dec pop push sbb imul adc mov iret inc inc aad ret jbe xchg roll repz jg insb ds cmpsl mov es or loopne cmp jmp nop push icebp jbe add out test test add leave pop sbb lock jg or in (bad) dec divl mov movsb mov mov (bad) incl jno pop stc fsub icebp aad mov call dec mov adc ss sub std mov cmpsl dec and ljmp mov and pop push jns sub cmp jp mov add decl mov pop xor mov jo daa mov jmp fcmovnbe lock pusha lret popf fild sbb insl notl loopne (bad) (bad) (bad) jmp mov or mov (bad) (bad) pop mov cmp enter cmc and out or mov (bad) pushl stos fldcw cmp push (bad) fldt (bad) incl xchg icebp cmp push pop mov popf dec push and (bad) (bad) mov cmpsb add mov sbb (bad) repz std jne and mov insb dec xor (bad) ljmp int3 loopne (bad) mov rcrl push in rcrl cmp std xchg out mov scas sub pop jecxz pop cmp mov jnp outsb cmp pop cmp (bad) pusha jae scas ljmp test (bad) dec arpl pop sub inc fcompp (bad) (bad) (bad) ljmp (bad) scas sbb jno dec sbb dec add xor jnp out lock call lret shrb mov ljmp (bad) (bad) lcall gs mov xchg adc enter xchg addr16 jns test (bad) or (bad) pushl int3 pop push pop jp push xlat das add in or mov dec push (bad) lcall test das (bad) (bad) (bad) call roll add subl cmp pop dec insl das (bad) fisubr pusha hlt jg outsb clc (bad) imul mov add xchg mov push sbb mov xor ret (bad) (bad) jg pop lods cs ds int3 les push and js dec aaa mov mov (bad) (bad) (bad) jmp xchg icebp xchg cltd lods inc jnp out std and cmp in inc jns movsb push incl mov mov inc mov cmc mov cmp pop xor (bad) decl jb lods jle loopne pop outsb xchg movsl movsl fidiv inc xor jg lcall arpl lock iret xchg addr16 repnz shr stc xor (bad) (bad) ljmp inc pop lods jl xor mov mov push adc lcall aam xchg push movsb mov loop js popf int xor (bad) jbe addr16 sub xchg loope shr xchg rcl xlat jns sbb inc loop scas adc mov (bad) inc pop adc loope jo cmpsb cmpsb out repz jle popa mov fbld add ret add lret insb pop in (bad) (bad) (bad) call je jg pop mov sub (bad) cmpsb loope addl fwait adc cmp (bad) (bad) (bad) (bad) cmp insb fnstenv push xor push push add mov stos or mov (bad) lahf xchg jbe iret sub ds pop mov std test sar (bad) (bad) (bad) call movsb pop inc int3 sub xor gs adc mov xchg push push add fwait lcall push jecxz sarl pop mov outsl jp fdivp xchg in insl loop insl adc jmp (bad) fcomip jge test insb (bad) sub popa adc imul (bad) lcall cmp jp sub xchg aam cmp stos nop (bad) (bad) (bad) pushl rcrb xchg mov xchg lret mov mov pop fildll (bad) out mov movsb subb ja mov push (bad) (bad) (bad) lcall sub aaa pop mov je mov mov xor push andl into jp pop pushl js (bad) (bad) (bad) call xchg out jbe call xor mov sbb (bad) cmpsb xchg call jae pop add pop call insb out or notl pop xchg mov fdivrs stos mov jmp jg push cmp mov stc add andb lcall xchg loop outsl push add in in (bad) (bad) fcomip adc pmulhuw gs jmp ret push push stos (bad) (bad) lcall dec das mov jle sub cwtl data16 jo (bad) (bad) jmp (bad) sarl cmp ja xor popa xchg imul xor aas adc test rcrb (bad) (bad) incl nop mov dec rorb test enter movl daa lahf aas cmp cmp daa jecxz in push ret sbb (bad) (bad) (bad) mov mov mov inc pop pop dec mov fisubr cmp (bad) pushl insb push daa or inc xchg or fdiv and icebp push pop jne,pn cmpsl (bad) jg (bad) mov ljmp inc xor fsts (bad) (bad) jl ljmp or dec add (bad) jne or jnp (bad) jg sub sarb lock xchg mov fs (bad) (bad) ljmp test mov xchg mov lret and adc idivl (bad) (bad) (bad) incl lods and std jb int test fcoml (bad) jne pop shlb sti push sbb mov or (bad) lcall addr16 mov (bad) adc mov sub jg ds adc and pop (bad) fldt mov jl nop fcos (bad) pushl jb xlat pop shl inc es inc dec sub sbb push stc lea (bad) (bad) (bad) sti xor loop push and inc cltd xor (bad) xor inc shll (bad) or (bad) (bad) (bad) jmp add jge xor xor (bad) sahf lahf cld clc ds dec popa gs (bad) (bad) (bad) (bad) jp dec xorb stos dec dec push xor sbb (bad) mov out and jecxz (bad) incl inc inc push xor pop rol push cmpb adc mov pop repz sarb add (bad) mov in add cs out ds in add cli mov jo push mov sahf adc nop mov sbb icebp cld daa repnz (bad) push mov (bad) mov nop scas add xor and push scas sahf stos sub jae (bad) (bad) push mov pusha add push in push mov test pop out sbb xor decl lcall fcmovnbe (bad) in adc fstpt xchg cmp inc lock (bad) (bad) ljmp xchg sbb push popw es jb lods pushf adc sub mov mov (bad) mov enter mov push add xchg adc mov stos (bad) call add ljmp pop push outsb push push jle (bad) (bad) incl xchg jnp rolb repz mov (bad) ljmp rcrl roll cmpsb rclb popa sub (bad) (bad) call xchg xchg imul aad sbb lea mov fnop (bad) (bad) mov cmp push cld adc xor ret push outsb sbb jmp lret jne xchg push adc sub (bad) fistpl push ljmp cmp pop pop rcr movsb mov mov (bad) (bad) (bad) dec sbb and stos mov outsl push mov aas inc and xor or add insb xor (bad) (bad) (bad) pushl int3 or int jge xor fnstsw inc mov inc in mov fildll add ret in aaa push ja loope mov xchg adc push jp andl pushf cmp cmp and jae jns out or (bad) decl ljmp mov (bad) imul nop push jle inc jecxz sbb mov sar (bad) (bad) ljmp rorl lret les nop push subl sbb adc lahf jno xor jle add cmpb (bad) call mov xor xchg scas stos and out call adc and pusha leave (bad) (bad) (bad) call popl clc mov push mov rolb shr xchg call (bad) (bad) (bad) (bad) jp out cmp push mov in in xchg and sub pop lods cmpsl push std incl out test inc rcll xchg add mov mov lret cmc jne fild ficom adc (bad) int3 fdivp mov mov (bad) mov mov inc divb sbb mov xchg mov incl mov cmp aas mov shll (bad) (bad) ljmp ficomp lahf (bad) aaa xor xor xchg adc aad and jge icebp (bad) (bad) (bad) decl inc xor jge aad mull pusha lret pop and icebp cli add out (bad) (bad) (bad) fild je cli cmp inc mov sbb adc mov loope mov mov ljmp mov dec (bad) jns mov inc fwait sbb call (bad) push ljmp outsb or mov clc aas or xchg stos push add cmpl add xlat mov mov (bad) call dec xchg int3 sbb pop and jo pop pop mov mov dec mov inc in pop pop sub sbb inc push push inc dec mov fsubrs pop into clc xorl cmc (bad) ljmp lods out stc and mov and mov mov call mov (bad) ds mov shrl call (bad) ljmp dec testb and outsb movsl pop ss xchg push mov jl jle (bad) (bad) jmp loop mov or sbb inc (bad) cmp jecxz mov mov test inc subb xchg aaa sub dec inc or mov cmp ss sbb cmp ds daa inc mov gs cli call cmp push mov sarb ljmp cmp inc mov out stos jne sbbl lret adc inc jbe mov (bad) jmp ljmp sbb mov adc ret xchg fwait adc inc aad mov (bad) decl pop mov (bad) (bad) cmpsl out sub in mov xor adcl inc (bad) xor or adcb lcall mov (bad) mov fildl jl dec icebp pop lock aad pop jae lds or (bad) (bad) push jb dec loop dec or (bad) or mov mov insb lahf aas out dec xor sahf mov mov out xchg sub sahf and (bad) (bad) (bad) ficompl addr16 and scas rorl fcmovnu gs xchg (bad) call push inc jp icebp cmc inc mov pop jle push aaa in std jmp repnz sub inc ljmp cli cmpsb jle mov les rcrl cmp scas xchg (bad) decl xchg push loop xor fwait ds inc jbe aas and outsl andl (bad) (bad) (bad) jg xchg mov jbe push mov push mov lcall xchg repnz and (bad) scas clc pushl scas rclb orb push in daa imul pop sub mov (bad) (bad) (bad) lcall jns lret std test outsb jae ljmp cs pop fisubr cmp sar (bad) call dec cmp ret pop mov pop std test jno mov xor lret call jns das mov ds or xlat sub add mov andl inc loopne (bad) (bad) lcall cmc les jno out (bad) call sub imul adc (bad) adc (bad) (bad) ljmp clc std inc es mov and cmp (bad) loope pop sub aad dec jmp adc (bad) (bad) incl gs sub pop mov jmp loop pop mov dec dec pop arpl or (bad) (bad) (bad) lcall xor jne shll mov add adc rorb and daa dec std mov mov pop jmp sub pop icebp scas out fs ss adc jg mov dec cmpsb cs sub inc mov xchg das cltd es (bad) push jge bound lds pop lock sarb in mov xchg ds inc sub mov jecxz mov xlat popa (bad) decl dec in and xor bound sti lret jp sub leave loop (bad) fcomip decl enter clc xchg adc mov push ret decl mov ficomp jne adc cmpsb aad pop fisttpll (bad) incl sbb int inc jmp pop (bad) xor ficompl aad jge (bad) (bad) (bad) pushl cmpsb in imul jp sbb test cli mov out dec aad dec cli (bad) cmp cmp push in adc push inc (bad) (bad) lcall mov jbe mov ret test adcb sub jne jb cmp js xor pop inc fiaddl insl pop add push and test jle jmp xchg mov and add add cmp cli repz (bad) call stc test and cmp adc fwait mov (bad) (bad) call aam adc movsl cmpsb sbb pop jg jmp mov sbb in cmp jp outsl adc mov xchg sbb cmc add mov adc int3 outsb add decl mov cmp loop jo pushf ret (bad) (bad) decl ss dec inc and jno sub and jo (bad) std ljmp (bad) (bad) pushl pusha test sbb aam movsb inc lods (bad) dec jmp mov adc and (bad) (bad) (bad) lcall mov imul jle pushf adc nop sti xlat push and (bad) ljmp (bad) fucomi imul pop dec xor xchg xchg or add xchg and add idiv (bad) mov push lret push loop mov je icebp clc mov push dec push jb and xchg mov (bad) lcall push cmc push cmpsb jbe out jg add (bad) mov xchg cmp (bad) in adc pusha jle,pn mov je mov add and push sub cmp lret ficoml mov pop mov sub cwtl mov mov icebp fcmovbe adcl xor (bad) call push enter lods and loope test dec sub mov jmp scas (bad) (bad) (bad) incl outsb push or add push or jp iret aas push rolb inc pop adc (bad) (bad) incl sub xor jne gs mov mov mov clc lcall (bad) mov scas jnp popl repnz push js out fwait (bad) (bad) jg aas adc sbb movsl pop in (bad) mov push pop outsl push idivb loop ljmp seto dec popf rolb and mov incl bound mov mov adc call insl ljmp sbb sbb add mov mov mov test adc mov mov arpl mov cmp and stos xor fnstsw test push push std pushf mov xchg adc sub cmp fidivrl adc bnd mov (bad) fiadd cmpsl cmp (bad) inc out in push push outsl pop adc mov sti insb mov dec out dec jmp jge scas mov sbb loop cld out lods mov lcall idiv (bad) (bad) jmp inc pop out push daa xor pop sbb movsl repnz xchg sub fdivr aas subl mov aas leave sahf clc into dec mov repnz popa (bad) fisttp je ret sub std and std jg call mov sbb test pushf cli add repnz sbb aam mov decl xor arpl inc (bad) adc arpl (bad) (bad) ljmp xor push (bad) aaa jmp adc dec cmp xchg divb sub fisttp dec aad push ss inc ret js sahf mov sbb (bad) (bad) jno sub rcll aaa mov cmp pop loop lods pop xor inc mov jmp lahf or ds xchg add jg push ljmp js push out es dec or mov dec sub test (bad) (bad) decl xchg jmp out sarb cmp mov push in push mov stos enter loop (bad) (bad) jmp mov jns pop repz mov stos stc fadds mov popa mov or push nop and cmp xor (bad) inc ret or mov shll mov movsb test or add dec mov shrb repnz (bad) ljmp mov jg inc dec xchg mov imulb push in bnd (bad) push enter (bad) (bad) (bad) dec cmp loop xchg nop int3 or das adc push jmp addr16 test (bad) ljmp out mov pop sub add pop mov jbe (bad) adc push imul jg mov and inc rclb inc inc sub push cmp (bad) mov repz hlt in adc push xor jo jge (bad) mov jecxz out nop mov mov jmp mov in ja sub or scas test imul sbb add insl dec cwtl lods gs jl sti inc loopne or js inc sub jge sbb (bad) ljmp pop iret xor xor nop cwtl enter cli jbe pop push jp adc mov fwait pop loopne pop mov push cmpsb mov ds insb adc dec mov decl enter adc aas or jmp mov mov lcall mov add xchg or popa cmp jecxz add lret (bad) (bad) (bad) ljmp jle out pop mov incl cli mov loopne std mov (bad) jg ljmp ljmp dec loope dec jae (bad) inc in xor lock cltd inc lea push pop jb repz aaa push (bad) or xor (bad) pushl cmpsl pop je push fsubrl icebp lcall xchg add ljmp aam lcall js push xchg (bad) test jg or mov adc dec xor xchg mov add in xchg int ja (bad) (bad) pushl repnz in ss mov cmp sub jae das (bad) (bad) call loopne push sti testb mov bound or push sub jb call (bad) cli (bad) je mov notb stos movsb jg test pop mov sub cli mov arpl inc lods test aaa (bad) aaa pop cmp lcall (bad) (bad) out rcrb pop repnz push incb add dec imul mov movsb lods outsb fdivrp jne mov adc lret dec (bad) lcall outsl push or inc adc rcr int3 inc int mov jae (bad) (bad) ljmp add scas repz aam popa iret pop ja mov rol arpl call enter mov fidiv xchg pop add and arpl mov mov xchg jnp push fcoms (bad) (bad) (bad) (bad) stc aaa mov sbb mov dec mov (bad) in cwtl mov sbb add lods (bad) xor lcall je cltd adc stc movsl daa inc mov sbb pop cs test cmovp dec icebp repnz mov (bad) cs (bad) (bad) pushl dec pop jp xorb imul pushf adc les aas jb (bad) mov jg cmp cmp gs or or repnz cmp mov pop pop out adc (bad) (bad) push xchg pop mov jg rcll mov lret cmp add mov add stos and (bad) (bad) push cmc push push enter fstpl jg sbb jb mov pop push and sub in push stos (bad) das test and sbb fdivs fs pop xchg pop add push repz int3 add add push jge fcomps lret popf pop cmp xchg adc lcall iret call mov mov lods adcb ds rcrb cmp sub jg (bad) xor inc xor in push into and data16 sub data16 jmp ljmp fistp enter push jnp push cmp mov (bad) (bad) (bad) dec sbb adc lret fmull jnp popa jno sub and sub inc insl (bad) (bad) (bad) lcall je insb and jae ja push movsl pop mov jle cli pop jmp inc and outsl sahf adc (bad) (bad) jmp loop and or cs shl call sub sarb cmp jge (bad) dec add pop cmc inc nop sbb pusha gs rorb pusha cmp inc (bad) lds hlt push push mov inc jno dec pop (bad) fwait pop adc pushl inc mov cmpsb rol mov inc mov scas adc push hlt (bad) (bad) call and mov popf xor adc jns,pn out loop loopne mov cmpsb call fnstenv pop idivb aam dec xchg out xor push and (bad) (bad) decl cmp pop cmpsb push ja cmp call gs jnp xor test xor xor sbb mov sub incb push mov mov and aam pop aas mov (bad) pushl xlat jl lods lods sahf arpl xchg mov sar outsb lock arpl daa adc jmp (bad) (bad) (bad) incl jg,pt push stos push test rcr in mov imul push sub mov (bad) (bad) (bad) (bad) (bad) jb or loop pusha jnp push lret mov in xlat (bad) (bad) cmp clc ljmp lock xor sub dec cmpl mov (bad) sarl lods (bad) add icebp call (bad) jg pop sbb cli jbe dec lods mov sbbl dec add mov incb orl xchg add xchg ljmp adc xchg sbb out cli (bad) jns cmpsl cmpsl mov cmpl mov sbb daa mov inc iret adc sub xchg ret iret into sahf cmp incb imul in scas fs cmp pop xor punpckhbw in dec pop call je mov loopne pop lcall in xor inc sbb aad cmpsb (bad) (bad) (bad) decl dec mov xor subl std pop pop push out push push jmp (bad) jg jmp sarb ret pop xchg notb lea adc aad clc (bad) decl sbb int3 cs sti push add pop inc jo (bad) call cmp int3 cs int cli mov inc pop mov sub decb loope data16 pop dec pop stos mov aas lcall sbb stos pop cmpsl sbb add andb in inc jmp (bad) lcall lods mov and dec mov cwtl mov (bad) test outsb mov (bad) fdecstp add ret push lahf mov flds ds (bad) (bad) (bad) fiadd inc ja pop xchg jo inc jns and loope xchg cli push cmp dec sub add sbb (bad) (bad) jmp icebp icebp iret dec test mov pop adc fisubrl (bad) (bad) (bad) cld inc pop xchg insl push or mov (bad) pop sbb add imul jp cwtl sub lods int rcrl pop aad (bad) jmp and jge mov inc add (bad) incl dec mov stos mov (bad) jb pop pop sbb (bad) push rorb cltd mov scas (bad) (bad) (bad) call sbb aaa arpl adc test pop std xchg mov add (bad) (bad) call rolb cmp cmp mov pop jb subl xchg or lock adc sbb xor dec push mov xor and mov (bad) (bad) ljmp add pop int3 pop or and xor pop xor mov mov pop leave call imul pop inc xchg cmpsb fcomip (bad) ljmp sti xor (bad) push push xor and mov dec iret or (bad) (bad) (bad) call mov movsl lret test int3 stos imul dec ds xor out addl mov lock xchg adc inc pop mov shr and sub mov or xor sti mov push (bad) (bad) out cli stc mov push inc rol xor push or inc insb fist and push mov dec std ja push mov cli int3 xchg sub (bad) (bad) dec aam roll outsb push (bad) pushl inc movsl fsts shrb lods pop push js enter dec xor push mov mov adc (bad) pusha popa mov aas mov mov icebp (bad) lea (bad) (bad) (bad) mov rorb fist int3 dec (bad) push decb push sub shlb addr16 pop shrl out (bad) lcall (bad) mov mov xor mov adc mov in sub (bad) (bad) call pushf push mov push imul or add jg inc es icebp jle scas es ljmp clc xchg jnp into push pop push (bad) xor jnp imul insl xchg (bad) (bad) mov adc leave xchg test pop jne lock mov outsl jae jecxz (bad) adc es loope subb cmp (bad) (bad) fistpll packssdw pop lahf mov add dec mov dec and mov push mov push or jmp (bad) ljmp fidivr loopne rorl rcrb pushf xor push notl jne xor pop and (bad) sbb les cld inc pop mov movsb xchg lcall js mov push (bad) cmp jns,pt or fcmove test outsl lods test movsb (bad) (bad) mov outsb dec xchg pop dec mov cmp pop jp mov call sub ret sbb fwait mov add fbld ljmp pushf mov sbb mov (bad) (bad) (bad) decl jmp push movsb push push dec (bad) testb daa int pop cmp loop (bad) (bad) (bad) jmp mov dec xchg insl arpl lea ja out cs add sti rcll ljmp jg add jo mov fwait add sahf jg jge dec ret (bad) (bad) incl push sbb rorb lock popf and aas (bad) (bad) (bad) jmp xchg test pop or cmpsl stos stc icebp xchg jle rcrb in leave (bad) xchg sbb iret and orl (bad) decl (bad) pop test dec mov cli add (bad) (bad) ljmp jns ss add inc std out push pop jno les pop sub (bad) (bad) (bad) incl aas and repnz sub in pop inc (bad) and jge lea mov call jbe out jle sbb cmpsb lret mov mov push pop mov sbb (bad) (bad) jmp mov push cmp repnz repz rolb test cmp sbb inc (bad) das mov aaa cld lcall xor cmc fstpl cmpsb or mov lahf mov xor sbb sarb cmpsl les imul pusha loope mov sbb jnp sbb (bad) jmp xor test mov stc (bad) (bad) call jp aas fs pop push xchg xlat xchg test dec cmc loope ds jnp xlat inc cmpsb outsl push or decl mov in adc push test incl adc hlt lock out int sar (bad) mov sub push and add xor mov ret std or test adc lock lret push (bad) cmc sahf repnz lcall push mov jle mov lcall (bad) jmp mov nop stos cltd (bad) cmp dec lcall dec loop jbe (bad) (bad) pushl adc test jbe xlat out jecxz pushf adc mov push scas xlat stos xchg frstor ljmp mov (bad) call xchg cli pop data16 (bad) jg ds fsts cld push cmpsb popf xchg cli or data16 (bad) jne clc sbb add repnz lods push adcb pop loope mov outsb popf mov (bad) jmp bound cmp (bad) mov pusha xor mov and mov les adc add (bad) (bad) decl adc cltd arpl mov test sbb lahf add push int loopne mov leave xor (bad) (bad) push and xchg mov xchg cwtl dec sbb cmpsb imul ss cs lea (bad) xchg fwait jle pop lret jno hlt leave push je (bad) dec aad outsl add adc fldt (bad) ljmp test jl xor and push and js mov push jnp push mov (bad) (bad) call mov lret inc test mov test inc cltd lods dec addr16 (bad) (bad) lcall jnp xchg mov xchg push stos cmp call subl jg (bad) lcall jp std js sbb cwtl (bad) fcmove push fistl (bad) fidivr popa inc sahf sub cmc push loope inc (bad) inc aas jb pop pop lock mov or jbe or push or fiaddl ja jns (bad) (bad) push mov bound sarb jne adc push push negb cmp data16 add (bad) cs imul test ja inc push test (bad) (bad) (bad) inc cmp mov push mov lcall xchg or jo sbb imulb (bad) (bad) incl sub push jge cltd xchg mov outsl aaa test jns inc lcall pop cmc (bad) lcall mov lretw jae nop mov or or push icebp (bad) (bad) (bad) (bad) js out xchg test nop push jecxz mov cwtl adc andl std mov (bad) (bad) push sub insb adc lock and jmp push mov nop push ljmp stc mov mov fdivrs jl sub test test mov fcomip mov xchg int3 rclb sbb das push stos xchg imul mov (bad) inc xchg inc add inc cmp aam fwait shl stos into (bad) mov jo or test cs push push xor cli test insb outsl clc jg jnp pusha push pusha or es adc jb adc (bad) (bad) (bad) call pop or or xchg aaa add xchg sub in and dec in data16 (bad) ljmp fisubr ja jbe push imul inc pop pusha lahf dec mov mov jo mov (bad) jg (bad) jge std ljmp lea push test cltd (bad) push popa in jg insl addr16 mov mov repnz insl push aas lret scas and stc pop incl cld pop cmp cmp out xchg (bad) (bad) ljmp movsl mov sbb jmp int sar dec das xor push push orb lret int imul pop xchg jb mov (bad) sub and (bad) (bad) (bad) jmp shll adc mov lret jp mov xor adc dec cmp test (bad) (bad) jmp lcall popf inc shlb (bad) ret addr16 inc xchg addr16 mov outsl mov push ds and dec stc int3 push mov cld (bad) (bad) (bad) jb cmp cmpsl (bad) mov jae test adc cs (bad) (bad) jmp adc enter jno and (bad) xor push and inc lcall fwait cmpsb out add push fist js (bad) adc mov insb adc out pusha dec inc out (bad) (bad) (bad) ljmp outsl mov (bad) mov das jo rorl lods fcoms stos sahf add xchg (bad) (bad) jmp and and out mov inc mov pop je xchg mov (bad) cli (bad) (bad) decl ljmp fsubs ret lods pop xor jo outsb or sub jb test cmpsl pop mov push sahf mov popa leave sub pop mov jg sub (bad) enter imul into mov int3 inc and mov test inc (bad) (bad) (bad) (bad) mov cwtl xor dec push inc int3 fmul loop lds daa out cmpsb inc pop leave pop mov lcall jmp pop jne or movsl fdivl xlat ljmp repnz jle (bad) (bad) (bad) incl jge add push and and xor and jp pop jae adc lods movsl fcomip xchg xor hlt hlt repnz (bad) (bad) (bad) (bad) add (bad) jno cmp mov mov or movsb adc scas cmp cmp adc lods jmp add (bad) fistl or mov ds xchg shrb add push mov pop and xor xor xor cmp cld ja dec fs and stos repz stos cmc or mov (bad) incl jns xor mov or stos nop inc mov repnz fsqrt lcall fsubrl push cli xchg sahf ds (bad) lcall jo repnz sti icebp sub sub ja dec out mov fwait push gs (bad) repnz sbb (bad) lcall inc arpl ja cmp jno in daa or xchg scas (bad) (bad) ljmp ds fdivp repz aad xchg or mov cs mov shlb dec ret (bad) (bad) (bad) jge push xor jo cwtl cmp out test dec scas sub loop in inc sbb (bad) (bad) decl inc push adc inc test negl jecxz or (bad) fstpl mov or loopne cli pop push mov popa dec bound pop rclb add les lcall inc xchg imul fmul out aad in jae loop je clc rorb cmp xchg xchg sbb (bad) stc push add mov push dec and (bad) (bad) fbld sbb sbb aam fs icebp ds dec fisubl push fucom (bad) pop xchg lods or test (bad) mov jle ja jno push mov push outsb addb pop lds shrl dec (bad) pop psrad cmp hlt (bad) (bad) (bad) ljmp aas mov out mov (bad) (bad) xor sub push in sub sub (bad) mov xchg and add and xchg jbe (bad) pop jnp call inc call push sti int3 mov pop loopne inc sbb mov lcall decl into ret sbbl lret sub (bad) lcall mov jae adc or cwtl inc sub addl call mov repnz mov inc fist iret jbe cwtl insl popa pop pop or (bad) cmp sbb adcb sbb and lcall inc or mov hlt jo mov xlat loope cmpsb jmp rcl xchg push enter shr pop and cld daa jne add or (bad) call stc pop jmp sub cmp mov mov ds (bad) (bad) ljmp daa or call mov pop arpl sarb popf mov sar mov dec cwtl test out sahf xchg mov pushf inc jmp inc popf (bad) (bad) (bad) out add int3 lea jns xchg cli bound add and xor iret jl mov (bad) pop fwait mov rol fs stos push sbb xchg xor stos fisubl ljmp pop clc add (bad) fsubrp les sbb test fcmovnb (bad) ljmp mov sbb movsl ds int daa and inc js pushl nop sub std xchg inc xor aam fsub and add ds dec lds pushl std (bad) cmp mov jecxz pop add pushf out in sub xor in scas cli (bad) dec (bad) or fsubp inc push jnp popa push addr16 dec nop sbb bound (bad) (bad) (bad) decl jnp pop mov ret sahf mulb mov sbb pop mov ret aam (bad) (bad) (bad) lcall push cli icebp test xchg sahf leave inc and push jp fistl pusha mov leave mov cmp mov sbb push jle out mov aam and push add lahf in loope in xchg jle aas dec jbe,pt (bad) mov jmp out mov (bad) (bad) jne dec add inc jnp mov cwtl ljmp repnz repz ljmp sub cmpsl sbb decl incb sahf ds mov pop insb mov fidivl orl in dec clc (bad) (bad) (bad) cmp lret popf (bad) dec xchg outsl cmp loope int3 fistpl repz repz sub (bad) cli movsb inc inc mov stc in das xor aam adc mov dec sbb call lret lock fsubrp fisub ficompl push mov addb mov xchg xchg xor jo popa inc xchg pop (bad) and sbb dec xchg xchg mov or sub in add stos (bad) jmp mov mov cmp (bad) dec jecxz sbb out scas sti nop leave std jg shlb xchg popf ljmp jecxz cli insb inc jecxz pop pop cmp mov mov out popf inc sub and lea jl inc pop xchg xchg and (bad) mov xor cwtl out (bad) (bad) (bad) ljmp mov mov jns lret pop iret sti xor push shrb jno outsb xchg fisub ja or call push aam arpl and lock (bad) (bad) (bad) (bad) mov movsb xlat pop push push cltd sub ret test sbb outsl sub daa decl test or (bad) fidivl decl clc jg mov xchg shll out (bad) mov aad and ljmp test sbb cli (bad) (bad) (bad) incl es stc scas and out sub in std enter mov dec (bad) (bad) (bad) ljmp rcrb mov mov cmpsl in enter repz xlat jb cmp or sub test out negl (bad) (bad) push dec or adc jmp add ret popf js mov inc mov je stos lods out cwtl out (bad) jg (bad) cmp fdivrs push or jp jno push add adc inc push mov stos push pushl adc (bad) cmpsl test add xchg add outsl adc mov (bad) (bad) call mov cmp push clc sub xchg or int xor pop cmc sbb lcall aad add cld data16 push push addr16 xchg cli mull test stc add cmp push sbb sub mov cs (bad) (bad) call stos push cmpsb (bad) pop (bad) mov das inc enter jmp dec ds mov lea sbbb (bad) (bad) jmp add inc pop pop xor mov adc add (bad) pushf test aaa xchg outsl cmc push lret pop ret lcall add and dec scas jecxz jb pop cmpsb xor jmp (bad) pushl push mov fnstsw fidiv cmc daa add mov pop imul pop loopne mov dec scas dec xor jmp mov push aas enter shlb mov into repz mov icebp (bad) (bad) jg cmp inc cwtl xchg test jmp addr16 mov mov pop lret std (bad) fbld xchg mov push pop in into imul int sbb and ljmp and mov (bad) decl cltd test xor or arpl aad lahf mov sbb aam pop lcall sbb movsb xchg stc loop cwtl xor (bad) decl stos ljmp xchg int3 sub fisttp or (bad) (bad) call js jg test sbb or push inc cmp mov inc cli pop test fisubrl nop ds cmp das dec mov ja sti int xchg ret lds (bad) (bad) lcall mov xor or mull mov ljmp dec dec clc pop dec pusha fistl ficomp (bad) mov cmp daa and mov rcr jle mov icebp adc adc iret cmp lcall hlt or fcoml (bad) mov loopne mov (bad) lcall inc in cli outsl sub (bad) sti push aaa xor (bad) gs xor (bad) decl jo dec jp into cli (bad) xor aas rcl scas pop pushl xor xor lret or (bad) (bad) fild and scas loop mov mov lcall loopne sbb fstp int das clc xchg or pushf pushf (bad) (bad) jmp in je (bad) cld cwtl test mov cmp aad mov (bad) incl test xchg mov daa pop fisub add cmp movsl dec and fldl jmp adc cld or cld outsl adc cmp jg into in mov pop clc incl imul or adc ds (bad) (bad) ljmp push movsb push js in in mov add mov (bad) callw inc jmp inc imul pop push sahf icebp xchg adc aas mov hlt inc jle (bad) (bad) (bad) pushl pop mov mov cmp mov jl loope subl cwtl imul pushf jbe test inc shl mov aam rcrb mov (bad) add (bad) ljmp pushl test mov cltd out mov xchg xchg dec cmpl in or pop fcomps (bad) call hlt js pop test inc mov jno rolb fcoms (bad) (bad) (bad) (bad) jmp xorl push jbe popa cs push (bad) fisttp (bad) push ret repnz (bad) mov push cmc (bad) int and stc (bad) dec dec cmpsl lds imul (bad) decl jae adc mov out repnz lods pop imul jbe inc clc and (bad) (bad) out clc (bad) call pop adc or mov mov test add add ficomp mov cmpsb push enter and dec cmp mov out and arpl (bad) (bad) decl and sub out pop pusha pop gs xor sbb jns lock outsb aas jp mov (bad) (bad) (bad) ljmp push dec lods in push sub ds jge movsl add cwtl mov xor je loop mov xor mov dec dec imul sar ds pushl std incl cmp lcall sbb (bad) (bad) (bad) incl out movb (bad) lods sbb jo mov es inc stc in jecxz inc jecxz ljmp xor fcmovb icebp sbb hlt mov mov shlb lods call (bad) (bad) pushl out adcl stos pusha add addl pop adc adc arpl and imul lret (bad) fild sbb (bad) rcl add sub call (bad) ds and or mov daa int3 mov inc ss rcrl (bad) pushl in dec sub in call mov int3 sub pusha xchg sub daa (bad) (bad) incl fnstenv leave jb or movb movsl cld (bad) (bad) pushl out (bad) cmp xor or xchg adc cmp ficompl mov xor push and push popf mov scas ljmp loope or adc (bad) xor xchg add (bad) fcmovnb add adc pop and adc ss mov jl sti push sahf adc ret pop mov and (bad) (bad) mov dec (bad) add repnz out out xor mov inc cmp jecxz adc (bad) mov xchg or (bad) lock and ds fnstsw cmp add (bad) (bad) mov les and or inc cli jl cmpsb mov lcall faddp sub xchg jl fstpl (bad) mov or sarl ljmp fdivrp sarl rcrb (bad) decl out push xchg int in pop popa adcl cmp js in addr16 xchg jg (bad) out in or arpl pushf push mov pop push add pop imul data16 outsb insb add movsl jne (bad) (bad) (bad) lcall push adc mov sub jns aaa aaa sub pusha adc (bad) ljmp gs cmpsb mov mov pop clc xchg xchg dec (bad) (bad) mov pusha cmpsb xor push push idivl and loopne fs cmp sub imul ret pop and nop ljmp (bad) incl mov aam xchg call push inc jp or int and lock or (bad) add pop lock fucomi mov rol (bad) mov int3 fwait cwtl sbb mov add call fstpt xor jno (bad) mov sbb aaa xor jb ss (bad) std pop je xchg cmp icebp mov and ror in pushl pop mov test dec sbb jg (bad) call mov add sbb push jbe push repz (bad) (bad) call and or cmp or add inc xor in dec repz push (bad) mov pop call aam inc jo inc ret push es out push mov or (bad) ljmp push lret ljmp test insl bswap and add mov push out jmp add inc inc pop push and add add jge in push ret adcl pop inc fidivr lock mov (bad) (bad) ljmp adc leave (bad) and in jge rcl or mov out cld (bad) (bad) (bad) lcall jg fimull ror dec mov sub iret cmc adc jbe adc pop mov (bad) clc push dec insb orl (bad) xor jge in std lods movsb mov pop stos lret dec fs sub jg movsb pop lds repnz xchg xor loopne out mov loope sbb mov pop cmp sub cmpsb fwait push pushf rcrb jns ret incl mov mov xchg (bad) mov push fild or into roll inc push push sbb cwtl daa xor stc (bad) (bad) jmp sahf pop jne test xor mov xchg loop jmp incl dec xor xor (bad) pop addr16 arpl int call cmc sbb mov mov out clc scas cli call sub aam add shr add dec mov out cmp pop shll arpl xchg repnz inc push test stos clc (bad) (bad) call jmp jno pushf and push ds repnz xor ljmp (bad) insb inc stc xorps and xor xor xor das cli ljmp sub adcl loopne dec xlat fldt bound lcall cmpsl jmp fisttpl mov lahf call push loope push inc adc sbb lret mov pushf mov (bad) (bad) (bad) jmp sbb gs jmp jp jl mov outsw sti adc cld (bad) (bad) dec (bad) adc ja movsl out jae mov cwtl scas shlb sub add jg or jecxz pop or xchg das ret xor lahf mov ljmp xchg ja sbb (bad) and fiadd hlt (bad) (bad) decl (bad) xor pop or (bad) outsl outsl aam cwtl mov (bad) (bad) (bad) fild repz mov pop fldt sub les mov add rclb loope or dec cld fnstsw dec dec pop adc mov outsl clc repz data16 inc icebp inc add lock cmpl mov loopne (bad) (bad) jg mov dec mov in push cmpsl fistp or push jns dec xchg imul pushf cmp fstpt (bad) cld mov xorl sub (bad) (bad) dec sbb xchg outsb or ret push pop sub push repnz jle xchg cmpl mov mov push test and mov or mov test out mov rorb cmpsb pop cli dec mov flds call jns outsl adc jmp mov pushf and iret xchg dec xor shrl (bad) call jp xchg jne or ja mov mov pop popf (bad) (bad) lret (bad) (bad) decl mov fadd inc pop mov repnz fadd sbb add fildll or (bad) fildll xchg leave mov lahf cli push ds cwtl notb pop inc add js scas lret stc popf sbb enter (bad) incl jno xchg xor clc cmp adc jns insl rorl out (bad) repz (bad) (bad) incl jmp push push repnz sahf dec je sub lods inc xchg (bad) pop jno nop jg jge cmp clc (bad) (bad) dec (bad) mov arpl push cmp inc add dec shl mov (bad) lcall or loope or inc jnp mov (bad) (bad) incb jmp (bad) ljmp icebp inc xchg das xchg insb sub out dec xchg cmp xchg ret popa and (bad) push mulb inc imul push inc mov daa jecxz pop jbe ds dec jb in in (bad) (bad) pushl pushl into sar aam popl xor xor data16 (bad) call rol mov xor sub pop cmpl loope add (bad) incl js clc daa mulb vmwrite mov mov push mov (bad) (bad) lcall push xor push pop fmull jp lock dec push mov jl xchg sti add aaa fwait jmp (bad) (bad) lcall imul add into movsl into sti addr16 xor fmuls in jmp mov icebp (bad) (bad) (bad) call dec call jecxz outsb iret mov inc imul and add push xor (bad) (bad) lcall dec sub leave mov push push add fisttpll in aad and mov push mov (bad) (bad) (bad) cld and lret sbb xor dec pop rcll and lods incl (bad) pushl aas fisub in test adc cmpsb bound xchg clc aam jecxz pop scas (bad) ljmp ljmp iret dec mov mov scas adc xor call loop xchg mov pop fxch pusha dec fisubrl lahf xor adc (bad) incl lock cli jo insb mov (bad) popa repnz test jno add (bad) decl adc mov add rolb lcall loope dec sbb pushl cld mov movsl clc cmp (bad) (bad) mov addr16 jle mov mov (bad) dec jne pop ja mov sbb into mov ds mov push cmpsl or fidivrl test cmpl pushf jg inc fdivrl je cmpsb (bad) (bad) (bad) (bad) aas out adc push pop mov xchg sub pop sar jl shr das adc (bad) (bad) (bad) incl mov cmpsb cmp lea cmp inc nop cmp (bad) (bad) (bad) (bad) (bad) mov and push fwait mov mov pop es jge cmp loope sbb (bad) (bad) ljmp bound ret (bad) jns push mov mov out rclb in imul pop sahf lea fs (bad) (bad) jmp mov das stos sahf mov cmp nop pop and rolb stos jmp (bad) jg sahf ss and xlat mov rclb hlt (bad) call ja cmp pushf mov push push shrb mov adc pushl pop push (bad) cltd ds cmp xor out je xchg jnp outsb mov loopne aam (bad) (bad) (bad) jg mov addb jle sub outsl lods movsb mov fwait cmp push mov (bad) (bad) nop sti mov outsl ficomp mov cli dec scas addr16 (bad) pushl lock (bad) jl loope fiadd in mov mov sbb fdivrs imulb das dec or push cmp popf xor (bad) fcoml fwait jo dec cmp xchg cld (bad) (bad) jmp mov inc dec sub pop pop cmp push inc nop cmp fcomps cmc mov leave cld (bad) (bad) pushl xchg mov sbb xchg gs adc mov lahf xor ja aam jmp nop mov add jnp lcall sub loope and jmp pop xchg cmp lret pop sbb lock fidivrl jne (bad) (bad) jmp incl xor insl sbb cwtl push fisttpll aaa pop shlb pop cmp loope ds jmp (bad) and repz cld cwtl sbb test movsb lret fmul jp jl pop push test mov xchg mov test add loop mov adc rcrb (bad) ret adc mov mov pop and (bad) (bad) mov or out pop sbb sub dec mov xchg (bad) (bad) (bad) decl add inc xchg iret cmp rcll notb jg in cmp pushl loop adc jb insb pushl adc (bad) pop loope sahf push test int stc pop ljmp scas push in fiaddl fsubrs cs leave out mov pushl pop fwait jg push xor mov pop pop xchg push xlat mov stos mov sbb ret fimul add loope jecxz (bad) jecxz movsl adc sbb ret jne pop xchg pop and cltd call andl adc incl clc mov dec in fsubp mov mov mov call dec dec or push stos cmpb dec and (bad) jmp shlb jno inc mov ljmp push mov test xchg mov stos jae xor adc loope rcr or pop lret xchg xchg outsl aaa rolb sub lea sar (bad) ljmp daa ja data16 mov xchg (bad) pop (bad) pop cld jmp mov dec and sub push (bad) (bad) (bad) (bad) jmp cmp loop cmp xor push cmp cwtl cmp push xchg jne imul sar mov imul sub dec sub sahf xchg (bad) (bad) inc stos rcrb xchg pop lods mov movb xchg mov (bad) (bad) (bad) jmp subl jne mov adc (bad) leave lea xor inc (bad) (bad) (bad) (bad) out int stc push pop mov push or adcb pop xor add sbb ljmp call adc push or mov outsl dec test adc mov xchg ja cmp ja and mov sub (bad) (bad) ljmp movsl stos int3 (bad) out cmp aas fildl test testl sbb push dec popf loopne fisttpl (bad) (bad) (bad) cmp add and (bad) (bad) (bad) call (bad) mov lods push imul in test lahf mov flds test data16 (bad) (bad) call les adc xor dec xchg push cmpsb pop int mov jmp es cmpsb cmpsb push pushl (bad) cmp xor pop int3 fcmovne dec sbb outsb call addr16 mov (bad) (bad) pushl stc jmp adc mov dec int or jo cmp out jmp repz inc dec cltd clc (bad) jmp jecxz fistl lcall sbb xchg adc call mov (bad) (bad) call icebp push jmp cmp dec pop mov mov hlt test lcall ds mov (bad) (bad) (bad) lcall sbb xchg loopne and lods pushf mov xlat (bad) in repz dec loopne (bad) (bad) (bad) ljmp test loop xchg jbe movsl adc mov pop imul lret cltd cmpb fdivp pop into or popa dec cmp ds (bad) (bad) incl mov icebp mov (bad) ljmp sbb (bad) (bad) (bad) lcall push cltd adc cmp into or and pop nop mov pop sub adc mov lret xor sti push xchg adc lret enter (bad) jle mov cmp cwtl inc cmc arpl lret xor (bad) mov mov je jl jne lcall (bad) (bad) (bad) decl (bad) loopne sub lret cmpsl int adc adc fnstcw mov adc (bad) (bad) (bad) lcall push in inc aaa and pusha xchg (bad) pop movsl mov out das lds aad fisubl loopne pop mov cmp cmp adc cmp int pop inc pusha scas (bad) (bad) lcall aaa fistp (bad) jecxz dec mov pop mov ljmp rcll divb sbb adc addr16 outsl inc repnz cmp (bad) (bad) jmp or setns cmc pop and mov cmp outsb out (bad) xor les and mov (bad) fisttp push pop loopne mov gs jb into ret test call (bad) (bad) (bad) cmp inc aas inc andl cli aaa adc ja fcmovbe test push ljmp (bad) es push cltd sub xor xchg push sbb (bad) mov mov or mov add stc push push loopne xchg out mov or mov adc mov ljmp mov sub sti loope pop push rolb dec iret je (bad) fcomip ss mov push int and scas xor lods xor xchg in mov mov pop sar call jns xor cmp ret imul les jg das into es and xor out jp mov (bad) (bad) jmp mov inc jnp loopne aas jnp pop sbb jne mov jnp jecxz cmp (bad) (bad) (bad) inc sub fwait loop sti dec jmp (bad) je test mov xor jb in (bad) (bad) (bad) (bad) ljmp add mov and loop dec push pop (bad) mov sbb dec jb jg (bad) fdivl fs clc lock mov mov repz mov cmp movsl (bad) cmp idiv sbb or movsb inc test hlt inc adc andl xchg jmp out movsb ds fmuls jo popa pop stos sub (bad) (bad) push mov mov lcall fwait push and jae flds scas lea pop incl ljmp xchg dec adc insb lea cli imul ljmp mov (bad) call insb inc or xlat dec insl cli and mov sbb (bad) (bad) ljmp das es scas imulb xor aam mov pop adc cmp inc mov icebp (bad) lcall insl and cmp push bound adc lahf inc jp (bad) (bad) lcall sbbl pusha mov xchg xor out cwtl leave push pop jne clc mov or sbb (bad) lock call push ds loop stos cltd adc xchg test cld lds and je rorb loopne test sub xor mov mov adc test and dec push fildl fld lcall inc lods mov ret movsb xor inc scas jge outsl jp sbb (bad) (bad) (bad) decl dec in inc sub notb or dec out je mov fucompp ja sub add ljmp lods or loope jae cld lods pop popa (bad) push xor (bad) cmp push xchg test lcall xor (bad) (bad) dec in push fstpl enter xor sub fcom dec cltd mov mov (bad) (bad) (bad) jnp pop fwait cmpsl pop pop loop popf and (bad) fidivr add out sub bound xor jmp in pop sar inc adc cld sub xchg shrb inc fisubl call add mov cmp sub aad clc icebp jg jp (bad) fistpl push jg jbe push push ja (bad) pushl cmp clc (bad) dec mov loope jmp lds pop lret sbb xor ret fwait andl push iret mov mov mov lret inc jno mov mov jle sbb xchg cs loopne xor pop cmp (bad) mov and and sbb cmc adc aam stos in loopne pop ficoml pop or mov sub mov (bad) jl xchg xor ljmp shrb fsubs (bad) push movsl bound mov pushf and and inc leave in (bad) (bad) (bad) lcall or out cwtl jl lahf mov ds dec mov ret aam sbb push cmpsl sti andb adcl lcall in pop rcr out pop inc fs negl jne ss (bad) incl pop fwait xor fs dec int (bad) pusha into xor js mov add pop insl (bad) (bad) (bad) call lahf cmp push test and cmp or lea scas and je dec pop pushl (bad) xor sbb cmp mov push lods mov jmp decb ret mov cmp mov ds (bad) (bad) jg stos adcb aam adc add inc outsb xchg idivb pop mov (bad) (bad) (bad) jne mov repnz sub out sub mov (bad) scas pop ficom pop (bad) (bad) (bad) pushl jp push test test mov adc cld add mov push (bad) call cld adc dec sub sbb outsb out lods addr16 insb add aas sub (bad) (bad) fsubl add cmp mov sub mov (bad) mov in nop pop sbb movsl add ljmp mov mov add cli int inc sub out icebp cmp (bad) (bad) ljmp mov pop pop jne cmpsl sbb in jne sub xchg jecxz stc (bad) std maskmovq notl icebp (bad) mov fadds adc mov pushf aad (bad) (bad) mov mov mov repz mov cmc jg lods aam fcomps mov into (bad) (bad) jmp ds lret jb dec dec pop push cwtl jnp push xor mov push pushf aam sub sub add dec fdivrl pop sub adc xchg jae xchg jmp sub add (bad) sbb pusha inc ds cltd mov movq inc mov mov pop pusha insl (bad) (bad) (bad) call sub stos or xchg inc popf push lahf add int3 lret dec (bad) leave or push sar and insl movsl mov movsb ret sbb repz (bad) call std add adc xchg or fildl adc (bad) push jne (bad) (bad) (bad) call (bad) lret sbb dec aam (bad) or xchg andl test (bad) jmp stos push out out imul add sbb clc ds adc mov add (bad) (bad) (bad) stc pop fcmovnu out pop js adc fldl aad pusha movsl mov loop mov (bad) (bad) (bad) (bad) (bad) clc leave dec inc nop sub fs push movsl inc out xchg rorb out gs notl (bad) (bad) (bad) decl movsb cmpsl mov std ror and pop xor int3 lahf lock dec mov adc ret push or or sbb pushl or ret mov fisttpl mov gs in (bad) (bad) incl pop push hlt inc scas cltd lods movsl adc mov add loop aaa cmc pop jge scas inc mov (bad) (bad) (bad) inc xchg fs iret pop bound imul rcrb xor addr16 stos hlt lcall pop lret popf lods mov mov mov (bad) (bad) (bad) fist and mov aam fwait cmp adc xor xor xor aas cmp add popf mov cmpsl roll cld sbb adc mov xchg add (bad) mov xchg push and fisttp or cmp cmp (bad) (bad) jg pop mov icebp fadd mov mov addr16 (bad) (bad) lcall xchg mov mov test dec xor leave jge cmp test mov pop and cmp movsl adc mov jmp ror cmp dec jnp jp mov stos and (bad) mov mov arpl ljmp push clc (bad) clc scas xchg in sub mov push push in dec push mov jg ds mov mov dec push in aaa (bad) incl push jg xchg call mov pop icebp xlat jne pop (bad) (bad) (bad) (bad) sti and rcr stc insb push int3 add inc in add scas jbe test je mov jp sbb je (bad) (bad) ljmp cltd leave jne xchg sub xchg test push cmp (bad) decl negl clc subb add sub or xchg std (bad) (bad) (bad) stc sub lock gs repnz (bad) push outsb sub addl mov sar ja adc push loop mov adc movsb in and (bad) (bad) mov fcmovu movsb popf xchg xor popa dec cs cmpsb call mov adc outsb shrl lcall icebp ja adc jae adc xor scas addr16 xchg out and (bad) (bad) (bad) (bad) fisubrl xor addr16 sar mov dec fmul adc dec dec shl (bad) (bad) (bad) incl mov mov je sahf leave roll mov ret dec mov ljmp hlt add cs push lock push pop sbb stc (bad) (bad) lcall mov test adc (bad) pop dec cltd out adc sbb or repnz (bad) (bad) ljmp pop clc dec scas fs inc movsl push sti pop call xor sub cwtl movsl (bad) (bad) (bad) push push xor or repz das pop addr16 sbb sub arpl cmp push mov decl test dec js or lahf xor xor xchg mov insb jecxz (bad) ljmp in cld jp in popa inc sub sbb jecxz sub (bad) (bad) (bad) mov gs jbe jnp add subb xlat in outsb aas jo mov (bad) jg ljmp aaa fsts and cli sub fs adc or adc bound push (bad) (bad) (bad) call xchg popf outsl sti fstpl into cmp lret jno cmp jbe ljmp arpl add decl mov add add pop (bad) (bad) (bad) push adc inc into mov xchg in pop imul stos sub stos jnp popf (bad) (bad) incl imul xor mov sub neg mov dec in scas int std cmpsl xchg mov fdivrp cltd lret push fistpl mov (bad) (bad) (bad) (bad) out mov inc jg mov aam out jnp jle,pn push leave imul out (bad) stc mov ljmp pop push cwtl or jl cmp adc bound mov sbb cmp lds shlb (bad) lods rep mov push mov (bad) (bad) (bad) (bad) in mov push iret or icebp in in test dec cmp xchg call adc mov (bad) (bad) decl jp in arpl inc movsb mov fbstp cmp rclb (bad) jge and cmpsb fidivl (bad) sti cld sub jmp or push add xor lret push push shrb (bad) inc mov jae or sub (bad) imul iret adc sub mov and jmp or addl cmpsb dec sub sbb rolb repz enter cli mov lahf pop movsb mov outsl pop cmpsl cld push xchg or fs sahf jne sbb dec loopne je lock cmp ljmp mov lods mov cltd in (bad) incl mov cltd jmp jb xor sahf movsl cmp sub (bad) call aam pop sbb pop dec popa xor mov mov pop add icebp insl fimul xor in fcoml hlt pop ds (bad) (bad) jg cmp jl adc jg pushf xchg sbb mov sbb or pop xchg pop (bad) (bad) (bad) (bad) mov loopne (bad) (bad) mov sub jl mov mov call ret ds (bad) fdivrs mov jnp jp ljmp shr sti hlt jp (bad) mov (bad) (bad) (bad) jmp xchg mov dec jp aas dec xor pop lret pusha imul into sbb js dec daa jmp ljmp outsl fldcw xor adc push xchg (bad) jmp sbb push or cmp fsubs scas ss addr16 or push std or ror (bad) xchg sub (bad) fstps sub cld loop mov call push jb,pt dec push imul into inc push into mov gs mov xor mov sub imul fsubl out call arpl push cld (bad) call push push mov pop movsb fdivrl lahf leave pop or cmpl jg sub lods fmuls out int3 setno in pop cmp xchg sub loope pop imul cld ds hlt push mov incl std decl (bad) arpl xor aas lds insb jb jg jmp sbb sti and dec dec loopne jmp (bad) (bad) mov inc (bad) repz out scas dec loopne and push sub (bad) ljmp pusha mov sub cmp in clc sti mov add cmp xor lds jge stos (bad) mov jae xchg (bad) fdivl hlt fdiv mov popa xchg sar jmp (bad) (bad) fcompl mov push (bad) jge pop in mov mov les lahf and push enter (bad) jmp sahf and sbb mov movsl lds xor add push cld (bad) mov adc sahf insb push nop sub jecxz rorb sbb pop cmc ljmp shrl or push fdivl sub lcall sub data16 aam cmpsb rorb es stos mov (bad) (bad) (bad) pushl sbb sub fwait clc js loopne mov insl fs data16 lods add addb (bad) (bad) call push cmp jb aam test mov mov dec jl out push rcrb and gs push (bad) call sub or cli scas rorl (bad) ljmp imul aad pop mov jl ss or imul (bad) (bad) lcall fwait mov in in add in xlat xchg push in mov mov jne sub push jg (bad) decl (bad) dec mov insb (bad) fiaddl jg mov ds adc push bound sub lods fwait mov lcall dec push subl nop sub dec pusha ret ss pop (bad) (bad) (bad) (bad) inc fistpll push jmp add xchg mov dec mov loopne cmpsb mov inc add (bad) (bad) ljmp adcl and dec pop xchg pop mov lahf xor fdivs (bad) lcall dec xchg mov test inc cs (bad) cmp outsb dec push sbb (bad) (bad) lcall mull xor addb jns fdivrl mov xchg push popf cmc sbb xor (bad) mov lea outsl rcl (bad) loop inc ds xchg aas cmp sub (bad) (bad) (bad) lcall or out adc cmp test xlat or fidivl and cmp (bad) (bad) pushl mov dec xchg jge jle test mov repz test (bad) push aaa sar (bad) (bad) call pop out ds adc gs divl outsb push push sahf hlt jae jge dec scas push (bad) clc (bad) (bad) jmp lods test inc enter shrb sbb xchg mov ljmp insb lods mov pushf push insb mov inc rcll dec jns push scas jp test inc ds das push pop stos outsb sbb lcall es mov jb lret lret xchg jbe pop imul xor enter cld fildl pop xor stos dec sub fiaddl icebp int sub fcos (bad) (bad) incl xor adc xchg popa int inc (bad) xor fnop push mov mov dec nop cli (bad) jg push int3 lret test push (bad) dec adc sarl lcall sahf dec cmp mov jb aaa rcrb int3 aaa adc in lahf mov sahf xor (bad) (bad) (bad) jmp scas jge push loopne xor inc inc pop inc cmpsl sub xchg or jne mov (bad) (bad) (bad) incl in scas lcall inc movsb push pop inc lret sbb (bad) das sti rcll (bad) incl movsl sahf lods inc es cmp dec or fildl push inc (bad) (bad) (bad) lcall inc adc jb cmp ljmp push cli sbbb es arpl fsubr mov int3 xchg jp std into mov in push jg sbb aas orl lock mov sbb (bad) (bad) (bad) pushl xchg sub xchg xor test mov scas mov adc pop mov cmp adc (bad) xchg cmc sub sbb call fld lcall mov jmp testl decl pop (bad) inc push push popf and ret daa rorb pusha inc shrl dec (bad) push sub nop inc dec je or push jle jmp and mov pop ds adc mov out cmp push cmp aam iret mov pop push jbe (bad) (bad) incl mov into adc aam inc in add pushf xor incb ds mov hlt out xor or clc push jecxz (bad) sar (bad) fidivl fucomip inc je adc pushl jae test pop inc (bad) (bad) (bad) mov or flds mov std inc adc movsb mov iretw pop (bad) adc (bad) (bad) (bad) decl xchg insb out and stos data16 nop mov cs mov (bad) jge hlt inc add ljmp and (bad) ja insb cwtl xchg xor dec cmpb (bad) (bad) (bad) lcall mov aam clc loope cs int and gs insb dec mov inc xchg (bad) (bad) (bad) call sub test adc stc cmp iret add mov dec lret mov (bad) dec mov pop ret imul dec lret jne pusha leave push and mov in cltd stos pop cli lcall sbb sahf sbb sub sub loope (bad) (bad) (bad) pushl jbe pusha add sti enter xchg js (bad) dec xor loopne add push cli (bad) (bad) jmp std inc stos mov sbb cli pushf dec idivb test push sbb xchg dec mov data16 add jle mov fstpt push mov fwait or pop or ljmp jmp arpl sbb ret inc (bad) rcr jp adcb pop rorb je cmpsl mov and push scas mov (bad) (bad) call jb je push adcl inc inc mov arpl cmp inc fmul pop sbb (bad) (bad) (bad) call add popa cli rcll inc mov into cli mov sub scas pushf xor cwtl pop adc jge jmp mov stos cmp xchg (bad) jno push or mov adc mov (bad) (bad) lcall push pusha jmp aaa push cmp sbb rorl xchg (bad) xor pop rorl (bad) (bad) (bad) out into dec (bad) sti or (bad) iret inc jo push pop cld lret push jl xchg inc mov adc ret jg ret mov inc jbe icebp push cmp decl faddl push mov sbb xchg cmpsb push dec pop enter call in push cs (bad) mov inc addr16 lahf repz cmp adc push mov sub sbb add aas test jg ret aam push add pop mov adc sbb rcrl adc ja (bad) (bad) decl and and adc rolb movsl fsts test pop and mov and lcall rclb rcll and inc lcall jge mov fdivl add lcall sbb loopw fnstenv jl mov fimul or xor js inc sub and or push adc decl or divl sti push push clc cwtl aas out mov test ljmp pop pusha lods (bad) mov jb mov fsubrl push sub mov (bad) jmp mov xor fsubrs sahf mov popf jecxz jge (bad) (bad) ljmp gs inc and cmp sarb push repz jns icebp and cmp mov (bad) (bad) (bad) inc or out stos dec push dec mov icebp in jno js mov repz inc sbb mov sub ljmp lret fs pop or mov mov dec sbbb adc inc push aad push dec enter (bad) jmp int3 test pop jae sbb arpl sbb (bad) (bad) pushl (bad) out cmp adc add fisub xor pop push adc xor sbbl pop cld (bad) (bad) (bad) jle enter cltd out ds vpshuflw jmp fldl jg imul dec mov out shrb (bad) (bad) out cmp sbb jp,pt pop les es mov dec dec add test xchg xchg dec flds nop fucomip ds (bad) (bad) jg inc or bound out (bad) mov pop loopne rorl call xchg (bad) (bad) call (bad) repz jecxz mov inc cmc adc push fisttpll and push add call mov lret test mov bnd (bad) (bad) (bad) incl scas xchg xor xor push cltd pop scas movsl mov mov imul (bad) lcall aad fcoms push (bad) icebp inc xchg and hlt (bad) jmp (bad) inc test dec in push push hlt lahf jbe mov mov (bad) jg inc sahf sub (bad) dec sbb lret int3 faddl mov sahf fstps ss (bad) push dec xchg nop add mov inc js xlat lahf mov mov loopne das mov xchg jns xor fnstcw out cmp in loop cwtl jae jecxz (bad) pushl mov push scas and mov or inc (bad) push in (bad) lcall add cmc adc sti iret (bad) sbb jg (bad) push or outsl clc ljmp fldt push xchg aas sub push mov xor mov test ljmp lcall lock (bad) loop shld jns cld (bad) (bad) decl and (bad) std jne insl stos pop push jnp xchg sbb add lods adc aaa sbb ja shll jnp cmp sbb pop sub sbb rorl jae mov or (bad) (bad) ljmp es and inc sbb pushf pop inc sbb add dec in (bad) arpl xchg outsl push (bad) incl (bad) push mov mov jg fisttp push mov loop mov gs pop jbe mov push lds sarb push xlat adc stc popa loop (bad) jmp xchg xor ss add and sub in jno xor loopne inc shlb (bad) (bad) (bad) mov popf (bad) jns pop mov sbb push loope ficom insl cwtl add jbe ja sub (bad) jg insl or xor xor fcmovnb jp lds test cmc (bad) (bad) decl and jmp push dec leave add cmp js aam fidivr sahf out or dec jne sbb loop int push bound mov and outsb pop push xchg jne dec outsl mov inc movsl (bad) sub (bad) jg mov mov leave stos sarl bound data16 xchg (bad) push cld data16 sub or lret jne mov (bad) outsb inc js sbb (bad) (bad) (bad) lcall bound jecxz pop push push lahf shrl mov (bad) mov pop push cltd mov xor mov push in mov sbb push xor out inc (bad) (bad) (bad) call sbb or insl out std fs aam jecxz (bad) data16 inc mov fsubrs clc mov imul in push xlat and nop xlat es inc mov test add lcall pop ja mov inc mov in sub pop adc sub lcall lret repnz inc lods lods dec xor cmc adc ljmp inc out cmp sbb xor cld pop insb roll mov fdivr (bad) stos push in pop xchg or (bad) (bad) incl add mov push addr16 cld int jge loopne xchg std pop cmc mov xchg rolb or sub push cltd in cmp (bad) (bad) (bad) (bad) mov mov (bad) out out lds notb test les sbb mov mov fs in cmp (bad) pop add pop jnp mov (bad) call dec mov jl xor adc popa sbb xchg cltd ret inc or clc decl addr16 xchg mov test loope sub adc and push mov mov aaa xchg das in sbb nop mov movsb inc gs inc roll (bad) (bad) (bad) incl ljmp push ja xor popa pop xchg jne jecxz popf jae mov lcall lods (bad) xchg outsl xchg sbb sbb incl in sbb loopne sahf rolb mov add inc lods jne pop mov ja scas add hlt mov sub or pop mov jbe loopne xchg shrb push mov lock icebp sbb inc inc aad rclb ret incl lock ret push mov dec inc call (bad) ljmp ret push mov dec ds dec shll fstpt xchg cmp (bad) (bad) (bad) jmp roll jb inc push jmp add subb sarb in insb pop sti add adc add adc cld stos (bad) jg jge bound cmp dec cmp or jl sbb loop jg or xlat mov pop push jne loopne sub out (bad) (bad) decl (bad) adc pop push es add aad inc cmpsl iret lods enter xor out pop imul mov mov lea (bad) xor icebp arpl (bad) (bad) incl fcmovb mov inc data16 and xor js pop test clc (bad) push dec mov adc (bad) xchg pop pop xchg nop ja fldenv and inc lret mov (bad) xor and enter lock je (bad) (bad) ljmp xor aas test adc pop imul pusha and fwait jnp or add inc gs jb xchg outsb jle hlt inc pushl cmp mov stc icebp add incl jnp in movsl jmp xor (bad) fistpll ljmp ja daa mov adc inc sahf call and sbb mov sub and cmp dec clc call add (bad) ficom pop dec fsubrs adc incl je pop leave lret mov dec push and cmp pop cmpsb fwait pxor xor aaa adc add xor cwtl and xchg add (bad) decl jns enter les pop jecxz mov mov cmp (bad) cmc pushl jmp xchg ret inc test rcll mov aaa pop and (bad) (bad) (bad) (bad) fbstp bound lret out jb sbb insb mov aaa shlb mov xor sub mov fisttpll pop adc cmpsl mov cli mov cli stos and rcl call arpl test adc jae,pt push (bad) (bad) (bad) call es xor and xchg push das leave aaa sub in pop mov lds and lds js add bound mov insb int3 mov movsl mov push mov mov cmp or (bad) jb adc (bad) (bad) (bad) mov dec dec xor iret imul lret dec inc lahf hlt pop cld push jae (bad) (bad) call loope sub dec adc pop or jl cmp sbb mov inc xchg aad mov test (bad) jmp fildll sub dec (bad) xor jno inc and lahf dec inc push dec outsb mov (bad) jns loopne cmp addr16 ljmp rclb incl pop sti adc mov xchg dec call (bad) pop or rcll outsb icebp aaa data16 xor pop cmpsl adcl cld mov in (bad) (bad) (bad) (bad) mov imul push push inc imul adc (bad) aam ljmp das cli (bad) call mov adc xor jmp outsb cmp (bad) decl mov lret lcall int push xor pop in jmp jnp xor (bad) (bad) (bad) inc inc pop mov (bad) inc (bad) mov inc outsb ret sbb (bad) les shrb mov (bad) lcall mov ret fcmovne faddl cwtl xchg sbb jg in xor sub rcrb mov imul (bad) call cld jo ror movsl stos cmpb call imul rorl (bad) ljmp mov scas div ja cmp cmp mov inc arpl ds data16 lods push hlt inc mov pop sub (bad) (bad) js les in mov mov dec movsl in mov insl jno sbb rol int3 pcmpeqb add scas cli pushl sub mov sub insb dec dec emms imul (bad) ljmp push jo push adc cmp sub adc sbb mov push pop cmp in push jecxz lret cmp xchg or inc adc xor (bad) mov scas sbb mov test xchg lahf push in outsb lods popf cld (bad) (bad) push add loop dec jle lods cli pop mov cmp inc loopne outsl aad inc mov (bad) pop add aaa or mov (bad) jg inc scas data16 (bad) lods daa testl icebp (bad) xlat test xchg mov ljmp adc fwait adc adc mov (bad) pusha (bad) sbb leave movsb jl ss cmp sub repz fisubl adc ljmp push sub ret jg mov cltd jne repnz popf imul sarb js loopne pusha adc ds hlt jns pop flds xor in sti loop loope mov (bad) ljmp stos int3 fs push daa cmpsb rclb les pop jg mov (bad) jg mov loope shlb inc push test add cmp out cli incl push (bad) call in mov xorl cwtl data16 ja fstl dec jb es ret lcall xchg (bad) (bad) mov jmp pusha dec lcall push lods aas adc mov call (bad) std jb inc or cmpb (bad) (bad) decl movsb mov std or out and loope inc mov mov or pop push mov (bad) pushl mov int3 inc mov mov jge mov ret mov (bad) (bad) fcomps push push pop adc pop pmaddwd and xchg xor movsl push sbb (bad) (bad) (bad) (bad) mov pop imul test out or out adc (bad) (bad) incl xchg fiadd (bad) shll adc xchg movsb push decl rol sbb mov dec cmpsb ds outsb out (bad) std pop jle dec ds (bad) (bad) (bad) lcall mov adc loopne imul hlt rclb sub xchg jmp mov dec xor pushl outsl in xlat and inc cld out clc mov sbb dec push mov mov loop jno mov incl movsb mov lcall aas mov mov shrb and cmp (bad) (bad) call aaa mov pushf test and clc mov scas icebp xor sahf (bad) (bad) (bad) jmp roll push std fisubl dec cmpsb pop popa mov push push jbe repz jmp pop adc (bad) (bad) call pop mov cmp loope pusha mov xchg push test iret das (bad) lcall (bad) cmpsl test push scas ja ss (bad) inc cmpsl lods jl sub ret xor dec (bad) call push mov xor ds icebp subl fildl push shrl pop ds mov mov xor mov (bad) mov pop xchg pop cmpsl xchg xor lods mov xchg scas add mov xor sbb imul mov lahf fild adc ficom add aaa mov (bad) (bad) das mov pushf add out cmp jecxz (bad) jle call in push sti jmp (bad) (bad) incl loop cmp xchg push or or in inc pop mov (bad) imulb lcall sbb sub add int (bad) (bad) call or or pop (bad) loop sbb jmp mulb pusha push mov adc (bad) (bad) (bad) cmp jmp stc insl pop mov xchg xchg data16 push ret lds (bad) (bad) inc dec fdivs lret fs addb xchg xlat cli adc mov in mov sar (bad) lcall (bad) pop lods fwait jns sub js test mov mov dec or (bad) sbb add jg or fimull sahf mov (bad) jmp inc stos shr sarl dec xor cmp call (bad) (bad) (bad) lcall fs scas fwait and or sub mov test insb rcr in pop mov (bad) (bad) (bad) incl pop sub inc mov leave scas push int push ds sbb sbb les syscall adc decl ja push or xchg fisttpl int3 push loope ret pop ficoml pushf das inc mov push xchg les movsb pop call xchg push mov into pushf (bad) or pop and insb repz add (bad) out clc mov outsb add insb into lcall dec lret fldl ljmp fildl ret sar fucomi hlt inc in jp sbb (bad) (bad) decl cld sub loop rcll or mov clc adc lcall pop (bad) (bad) (bad) (bad) sub bound sub push jecxz cmp add jg mov ljmp (bad) (bad) jmp scas repnz es mov stos cmpsb mov inc mov (bad) (bad) jg pop stos mov loopne adc fldenv popa xchg pop (bad) iret push pmaxsw (bad) (bad) pushl scas arpl (bad) jae xor cmpsl pushf ret jo add mov popf mov jns or ljmp pop xlat pop mov push xchg cwtl das daa std jo stos (bad) jmp push orl pusha xor dec out test idiv decl out out mov jns bound mov outsl (bad) repz (bad) (bad) (bad) mov jl cmp mov test testb fs cmp (bad) decl data16 movsl cwtl mov inc leave roll lret movsl loopne mov pop (bad) cmp xchg mov sbb sbb adc neg fwait jg sub and in xchg push out (bad) (bad) (bad) dec jo jp out andl movsb sub or iret repnz (bad) call ds inc (bad) lock pushl mov sbb jne loop shrl fcmovbe js,pn (bad) pushl std add popa xchg pop lahf push cmpsb mov mov cld pop iret and (bad) (bad) (bad) (bad) fsts ljmp imul test jb fsubl out sahf sar decl mov repnz pop and cmc cmp (bad) test daa repz cmpsl xor (bad) (bad) (bad) cli xchg out lods repz les stos push ret imul jge cmc cli and lret xchg inc imul (bad) call mov adc sti xor dec iret jns (bad) imul scas pop cmpsb mov idivb (bad) jmp adc idiv aad fstpl inc xor stos scas xchg les (bad) (bad) mov sbb insb fld sub adc push insl inc loope adc (bad) (bad) call sahf push cmp in mov sbb rclb mov (bad) lcall fcomps cmpsl stc inc push bound sub dec std lock sahf hlt test out clc ljmp dec dec xor mov mov cmp pop sbb cli (bad) (bad) (bad) pushl lock ljmp mov and mov jp hlt lret addb (bad) (bad) (bad) xchg js and cmp ljmp ret int3 cmpsl pusha enter xor lods cwtl sar repnz dec cmpsb add icebp mov lret fmul adc pop add mov push jge loope jbe fwait jp xchg mov std bound call lods repz popf mov sbb jecxz mov in (bad) movntps (bad) jne sbb shrl dec call push pop mov push insl fwait xor add arpl bnd lea pop test fisttpll mov dec scas fst or movsb mov (bad) ljmp cli dec int3 andl flds sti decl jmp loopne movsb pop cmp mov adc xchg dec fidivl enter out leave (bad) (bad) (bad) incl divb dec jp mov stc sbb lret adc push pop add push mov jle (bad) (bad) decl das adc and xchg inc test fdivs fwait adc adc (bad) (bad) (bad) pushl pop insl jo scas xchg or jae jbe lahf fiadd jb loop xchg lea jae pop xchg or push (bad) (bad) (bad) jmp xor repz jb loopne push xchg push cli sarb (bad) sahf sarl (bad) cmp or push lods inc push in mov sbb jmp lret or sub lcall add adc push mov aas push jl add add mov call stos and loope fwait jb or (bad) (bad) push jecxz (bad) ljmp (bad) stos insl mov dec stos cmp xchg mov rcl sub pop sub pushl jl xor jns lock push iret imul js pop es ja into je,pn out cli mov ljmp out mov cld decl fmulp sbb push enter push cmpsl notb inc sbb push (bad) push mov and mov cmp pushf sub (bad) (bad) ljmp jno mov jo push jg jne inc cmc and adc inc scas (bad) (bad) (bad) (bad) jmp rol in and dec cmc jmp aam push icebp add fnstenv or test inc es int3 jnp jl sbb inc dec leave fidivr or dec lods gs mov push (bad) (bad) (bad) pushl xor mov sti out (bad) inc and int3 mov xchg fisubrl mov (bad) (bad) (bad) fistpl mov inc aaa push sub sub pop jno test inc sbb or sub add fstpt aas mov push pop cs push mov inc dec adc fmul ds rol stc addr16 sbb pop lock mov lods js fdiv xor in or xchg (bad) (bad) jg sub inc ss (bad) pushf sbb imul add addr16 jns arpl (bad) (bad) dec test cmpsl pop gs int ss push sbb ja ss sub mov outsb ds clc lea ja ret push popa fnop das sub cmpl jbe sbb iret in stc push lock xchg push inc sarl and clc cmp (bad) jnp inc sub xor push pop cmp repz mov cmp (bad) incl addl aaa mov mov fs sub loope (bad) (bad) fldcw sbb (bad) shld loope jno push (bad) (bad) mov out jne or dec ret pop dec mov mov sbb (bad) (bad) (bad) jmp jl xor (bad) sbb inc push and sbb push bound iret ret cmp lcall add in adc aas sbb ja (bad) (bad) call mov mov lea xchg andb jo xor pop ret jle cmp dec addb fcompl movsl jg (bad) popa aas xchg xchg fsubs data16 pushf (bad) ljmp adc add ret jb lock sbb rcr mov scas shrl cmp pop aam ror cmp mov (bad) (bad) (bad) jnp pushf je push jp stc in out enter aad cmp push iret jo pop (bad) (bad) decl inc fidivl out mov inc dec mov sub ljmp mov adc movsb fcoml sub and mov cli mov add pop outsb pop push ret addr16 xor xchg push dec test sarb sub (bad) (bad) pushl xchg lods jne sub pushf inc jo inc data16 jle mov call fdivrs sbb sbb xor sbb inc fnstenv add incl adc adc lods jl fimul cld (bad) (bad) jg test sub dec test inc daa ret out mov lcall (bad) jg sub lahf ja xchg jg adc (bad) incl push (bad) xchg inc jge fstps int3 outsb in push rorb lcall inc sub jns xchg mov (bad) (bad) (bad) (bad) cmp dec cmp aam xchg add xor inc xor repz fxtract mov cmc mov (bad) (bad) jmp fwait mov (bad) sub sub or sbb cltd stc push (bad) cmp sbb outsl add (bad) incl ja mov mov ret cmp dec xor icebp ret lcall aaa std das lcall cmp dec xchg stc push inc sub push sub push sbb (bad) jge rolb xchg pop int3 and or (bad) (bad) jmp jp dec lods daa enter int mov sbb sbb aad jge xchg cmp (bad) int std (bad) jg cs clc mov nop dec inc mov sbb xchg lret in dec fdivrl mov aaa outsl jl in cmp data16 jo loopew pop fdivr (bad) call and push bound sub stos (bad) jbe inc jmp mov and pop mov (bad) (bad) (bad) jmp shr xchg xor scas leave push lahf push mov xor push insl and inc mov mov (bad) (bad) (bad) lcall loopne jecxz (bad) into sti xchg int jmp lds push (bad) xor pop loope push cmp ret clc ljmp pop sarb mov jle ds ljmp bound sub les loope jge popa xor push adc mov mov cld xor add pop jmp cmp popa adc addr16 (bad) (bad) (bad) cli sahf pusha add scas scas or loopne cmp (bad) rcrb mov mov and (bad) (bad) (bad) (bad) fnsave gs push dec aaa rcrl aas cmc cmc cmp mov (bad) jo (bad) daa mov jmp test mov lret ss hlt sbb dec mov xor (bad) incl or sbb xorl jmp or mov inc or cmpl sti adc std (bad) ljmp xlat leave aas or ficompl out shlb iret scas cmp pop insl pop movl fiaddl (bad) (bad) (bad) jg push sbb pop mov sbb cmp or data16 pop rolb sbb inc cmp lahf sbb jmp xor repnz scas mov (bad) fistpll stos vminpd mov dec mov (bad) (bad) (bad) jmp cmp mov mov repz jle adc cmpsl fbld xor (bad) idiv adc fcomip es mov sub xchg mov cmp call nop icebp fsubrp negl xchg pop mov sub cmp (bad) (bad) pushl shrl pop sub inc add and int xchg jns daa inc fdivl (bad) decl loop sar cmp ljmp iret or cli push imull jl nop push imul cli shr js jge xor ljmp movsb pop pop arpl imul (bad) (bad) (bad) jmp mov mov das pop mov pop jg sahf sub imul (bad) (bad) (bad) pushl inc iret push and push out cmpl add cmc push inc push int3 iret (bad) (bad) (bad) decl sbb mov cmc dec mov jb loope fs adc jno mov (bad) (bad) fdivp mov fistl arpl and push movsb lock push push xor fdivrl pop ljmp pop sub mov (bad) call pop mov pop mov sbb and dec mov dec sahf push shr stos imul sub iret fwait (bad) jg mov mov push dec cs ljmp cmpsb mov aas daa sub mov (bad) (bad) ljmp ds dec fimul stos stos ret call xchg pop pop (bad) (bad) call test xchg bnd mov fidiv mov fistp and pushf popf fstps pop mov mov add js (bad) mov mov (bad) ljmp adc or lret inc std sbb sbb or rclb (bad) push icebp mov divb fcmovu sub (bad) fcomps inc ds ja xchg (bad) decl fcmovb pop xchg rolb fdiv xor xchg push scas dec mov (bad) jg ds mov or xlat xor cs (bad) (bad) mov xlat push testb add sti jg sub fistp add dec lods mov ja (bad) sub mov lahf xor adc ss (bad) decl fsubs jb push ss mov divl dec push es test cmp cmpsl in lea cli loop cmp (bad) outsl clc mov cli adc (bad) out clc aaa mov faddp jnp jl mov pusha stc roll (bad) (bad) (bad) ljmp and push dec mov fisttpll xchg cmpsb jle dec loopne fwait adc (bad) fcoml ret (bad) lcall loopne insb pop cmp (bad) xor cmp in xor ds xchg push inc ffreep fwait push pop push push dec xor (bad) jmp negl shll iret push or push dec cmc add (bad) call fisubr inc cmc (bad) push lea enter sbb (bad) cmp sbb pop xlat jmp es jbe daa adc (bad) (bad) (bad) cmp pop cwtl (bad) fcoms test inc sub (bad) in into ja lahf adc idiv mov call add addl or dec xchg outsl aam fnstenv test inc (bad) jg adc push (bad) mov mov pop cmc andl pop xor xchg sbb mov sbb and (bad) (bad) (bad) jmp ljmp das push pushf mov adc fcmove aas add adc (bad) call shrl mov mov jnp jne int3 notb jge (bad) ljmp add out sbb (bad) add mov fbstp inc and (bad) mov xchg fwait or pop outsb std sarl jns cmpsb push pop sti (bad) (bad) ljmp addr16 insl inc push in and lock (bad) dec xchg ljmp adc adc sub (bad) (bad) jg inc add push into es cmp mov add or mov (bad) (bad) (bad) stc aad jg outsl cli fldcw push pminub pop jl (bad) lret lea mov dec clc dec out adc pop sub jp rclb (bad) leave add iret push sub and popa mov mov (bad) (bad) (bad) pushl or push inc rorb adc jp stos pop xor adc fcomip pop orb inc test cld insb mov mov jb jmp pop sahf add inc pop mov (bad) jmp pop dec mov (bad) lods mov xor jmp test jne mov (bad) (bad) decl jb lea inc cmp dec mov std add decl inc dec in mov jnp (bad) (bad) ljmp cmp xchg aam jle dec xlat inc push lret xor mov mov adc ret sub sarb ljmp mov int3 je ja cmp lea jecxz js clc fisttp (bad) (bad) lcall and cmp int3 add sahf jl int push test sbb mov pusha ja (bad) (bad) incl int3 dec mov mov pop xchg add (bad) leave mov and fnstcw (bad) (bad) clc xor pop push enter cmp repnz out mov dec adc cmpsl (bad) (bad) (bad) decl pop mov sub mov (bad) jmp mov push int3 push jbe push psubd decl inc stc or (bad) xor leave mov icebp into sub in cmpsl add popf hlt std daa test or mov decl into pushl or divb or jle les (bad) (bad) imul outsl aad (bad) (bad) mov push (bad) sahf mov das mov jo push mov jb clc jg (bad) jg loop mov jp mov fsubr pop pusha (bad) call ret (bad) ret and jg (bad) scas negl push test ss lcall decb cmp dec jo push sbb movsl xchg dec mov decl cli scas dec inc pop sarl cltd data16 sti xchg jp aam (bad) (bad) ljmp scas push mov or xchg mov je movsl andb and push push lods (bad) repnz js mov dec test pop inc clc (bad) (bad) mov lahf inc mov adc aad fs movsl mov (bad) pushl ja,pt leave cld lret inc rcrb mov in scas arpl (bad) (bad) incl adc dec dec jl xor inc movsb fsubs mov mov sarb (bad) (bad) (bad) (bad) (bad) inc cmp push push movsl std jno cld pop jo popa pop and ret cmp cmp mov call xor mov mov jmp iret hlt xchg (bad) (bad) (bad) ljmp cmp push xor add add pop (bad) aas dec clc in in andl (bad) mov lock jle pop jge pop loope mov or into push mov jno xchg cmc push push mov sub arpl cmp dec mov xor sub mov cltd and (bad) incl cmc mov pop push push jo (bad) (bad) mov (bad) icebp iret lret add pop fcomi add push fcomps ds mov adc insb pop incl cmpsl sub dec sbb xchg xchg pop cmp fs cwtl test jge inc sarl (bad) (bad) (bad) sarl test adcl dec lock iret xchg iret inc jmp addl rcll dec adc decl dec jmp xor mov (bad) decl adc mov jmp cmc mov dec pusha dec out or insb int3 loop or loopne ljmp jmp inc xor xlat stos cwtl inc lret sti xlat (bad) pushl push dec push mov ds sub xchg xchg cli (bad) incl insl rcrl mov fisubr flds fwait or xor (bad) ljmp xchg sbb jle,pn into mov sbb data16 mov cld inc les jmp (bad) (bad) (bad) call imul mov sbb cmp sbb imul stos aad out push sahf shrb xor jecxz mov sbb jecxz mov (bad) clc mov mov fld add ds (bad) (bad) pushl ds scas cmp imul daa sbb ficompl mov in fnstenv (bad) (bad) jmp ret stc (bad) dec xor pop mov loopne or pop lock flds (bad) (bad) (bad) (bad) fdiv mov ss xlat push adc sti jno cltd (bad) call inc sbb arpl jl jmp sbb mov cld jno mov repz (bad) decl (bad) dec add test mov mov call dec xchg add imul xor call jmp pop (bad) jae jb out scas xchg cmp ds xchg lds mov ficoml out stc data16 fcomip inc lcall mov pop out scas add sbb jb ret or (bad) (bad) cmp mov pop aas mov or jecxz (bad) (bad) lcall cli loopne jecxz mov lret xor mov mov or cli dec (bad) (bad) (bad) ljmp push cs jne rcr (bad) fcompl push xchg mov aam leave aaa nop dec scas call mov adc add daa pusha dec mov sub fwait (bad) call aam test jg add (bad) (bad) (bad) jmp jp sti dec hlt mov mov push inc mov mov pop imul mov (bad) (bad) call xor aam inc xor pop pushf xor ljmp cld inc xchg xor hlt mov out xchg mov jle jbe mov or pop insb js dec mov pop cs cmp inc dec mov (bad) lahf jl dec out cmp adc cli cmpsb fmuls lahf ds (bad) (bad) pushl sahf (bad) cmp pop push lods push sbb cmp lcall aas sub test test stos push push inc imul (bad) sbb stc rol jmp mov push sbb std decl sub mov dec dec push xchg insb pmullw cmp cmpsl pop lret jle test (bad) jg inc xchg jbe or inc stos lea or push mov inc dec (bad) (bad) pushl sbb or dec mov aas add mov (bad) jmp jne add add and cmp xor addb (bad) (bad) ljmp jo and jl movsb adcl insl pop addr16 cmpsl fsubrs sar (bad) (bad) call pusha hlt lahf rorl movsl sti push adc nop or and jg sub repz sbb sbb mov xlat jo icebp (bad) (bad) mov jp cmp popa jp and loop notl pushl je add ret fdivrl out imul incl push (bad) (bad) (bad) (bad) cmp jo insb rep dec or push and iret cwtl jle sub jae dec inc xchg add fcomip call push push leave cmp ljmp inc ljmp imul xchg cltd xchg xchg and ja out ljmp dec xor (bad) (bad) (bad) decl inc pop mov test dec push out xchg sbb pop xchg enter jnp lds dec push xchg call xor sbb sar fwait loopne fidivl adc (bad) (bad) decl mov mov arpl or rorb add scas push rcll jmp call push mov sbb jno xchg mov ret (bad) push out cmovle int3 fucomp sub (bad) (bad) (bad) (bad) fchs cmp sub leave xchg push pop jno test pop push or push xchg push adc jmp clc sar int3 pop sti ds lret xor push sub scas cli (bad) ljmp cmp fwait jg push fcomps and stos addl sbb iret fbstp repz arpl pop cs and (bad) (bad) (bad) ljmp repz mov mov add xchg loopne or cmp fisubr cmpsb push outsb xchg cli decl fs shlb incl add mov lea idivb pop jg lock inc push loope cwtl fist imulb (bad) (bad) pushl cwtl pop nop cmpsl scas pusha fcomi mov pop (bad) int3 (bad) xchg add outsb mov push mov lahf adc adc mov sub jl ljmp out shl lcall pop imull dec ja imul (bad) lcall pop movsb ficomp nop aam jo stos ret (bad) call jl or fdivl dec inc into sbb push (bad) dec (bad) (bad) (bad) lcall jg lods mov scas imulb andl adc xchg loopne idiv pop (bad) (bad) (bad) lcall stc cs adc movsl mov mov lock or clc (bad) sub and (bad) jmp mov lahf daa pop xor enter push les insb push sbb incl mov mov ror hlt sbb insb clc add (bad) adc (bad) (bad) (bad) jl mov cmc add fisubl movl mov call push push (bad) loope test in stc and mov add jns or in ljmp push xor and cltd xchg and ljmp aaa rorb inc add dec mov xchg rcll or incl movsl loope xor jns lcall jle std stos adc ja iret hlt pop stos addr16 ljmp repnz fsubrl cli (bad) call mov test ljmp jae (bad) jne inc iret jl (bad) (bad) cmp in pushf outsl push call dec mov (bad) (bad) call lock dec (bad) and in jp push dec repnz aad insl and pop adc (bad) (bad) incl addl jecxz jp loope mov imul aam loope sub and (bad) jmp scas push push adc ja ror xor mov lods add lock mov scas xor lcall clc sbb sbb in sti push cmp and add addr16 cmc mov (bad) (bad) (bad) jmp xor push mov int std mov xor cld sub and (bad) push lea push push jmp cli jp push xchg push int and ror cs clc lcall into dec jl mov mov (bad) (bad) call nop and sub in aam rcll push lahf mov es (bad) (bad) (bad) (bad) call mov pop imul ss cmp call sar dec push mov xchg mov xchg dec adc mov inc and lock out fld pop xor jg inc mov jecxz (bad) (bad) incl outsb inc xchg fnstcw cltd pop fld (bad) jae repz (bad) (bad) call mov aam push mov test sbb push push xor mov sub int arpl mov inc js dec or push daa push mov mov out ds call push aad scas je fcomip or dec iret insl lock cmp mov sbb (bad) (bad) fadds test cld sub push fidiv pop xchg arpl aad mov xor mov dec (bad) mov mov adc sbb adc in dec add jns addl inc pusha dec jl cmp (bad) (bad) call push jb sub add int pushf jle ds sbb leave lods pop movsl push cmp (bad) (bad) push or xor test push push mov ret xchg rolb jg or dec mov cmp and out xchg sbb xor jecxz insl leave ljmp adc fdecstp loop out jge fsub add (bad) (bad) (bad) incl aaa scas inc leave jmp jle nop adc dec out iret xor (bad) (bad) lcall jge mov (bad) inc pop and mov loopne fnsave or ret (bad) decl push mov jmp mov aam sub push ret aad push aas jb jp (bad) decl (bad) mov lcall leave rcrb (bad) lock mov mov sbb pop lock xchg pop sub test out pop jmp (bad) out clc pop jp mov outsb sbb xor mov repz mov pop repnz (bad) (bad) (bad) (bad) jmp ret sub movsl or pop cld mull sbb and xor add cli sub mov (bad) loope,pt jl stos pop cmp ljmp sbbl cmc negb mov add jne (bad) movsl sbb test sar push std incl xchg aaa or push sub xchg and outsl cmpsl in (bad) (bad) (bad) incl bound add loope add jo in pop dec (bad) jecxz or int3 jmp dec (bad) xchg (bad) (bad) (bad) call mov mov lea cmp into xchg pop mov mov xchg enter (bad) (bad) jmp sbb loop call or dec or jmp fwait cmc (bad) and cmovg call (bad) xor jecxz repnz inc xchg sti mov jmp mov loope (bad) jg push mov call ljmp stc popa stc repnz std jg mov (bad) lods mov das jbe,pn icebp aaa mov mov lock decl jg mov push sbb mov scas mov mov lds cs jl sub in cld es xchg pop pop cwtl int3 push mov loopne add iret jno jge int (bad) (bad) pushl mov lret test pop jecxz mov jns pop (bad) decl jno push nop xlat sbb stos cmp cli xor jmp push es lret mov push fcmovnbe cmp stc sub fisubrl mov (bad) add pushf in outsb std call pop adc es and decl push adc or nop cwtl cmp push push jmp mov flds dec cmpl xchg dec movsb dec lahf jnp fistpl push icebp or (bad) jmp cmp mov rcrl fs push outsb hlt out (bad) jo enter fwait jno push std fcomip in inc decl mov push std fstps cmp sub scas and (bad) into add (bad) out repz outsl clc (bad) (bad) out aas out aas mov std xchg sbb ss mov mov jno sti stos loope mov pop cli or ret pusha repnz mov or cmpsb mov sbb lcall mov dec outsb addr16 (bad) (bad) (bad) aas popf inc iret lods mov pop testb test aam jle sahf scas mov dec cmp cld (bad) incl (bad) and scas add jp fwait int cltd pop mov add sarb push and mov js cmp out adc push std (bad) cmpsl xchg (bad) jne test call pop or (bad) cwtl adc (bad) (bad) (bad) inc xor push (bad) mov mov out lret mov fucomip enter mov scas clc (bad) (bad) lcall sub cmc cltd js sub out loopne lcall jo mov scas sub lret cmp lods push (bad) (bad) (bad) call jl cwtl lret mov nop xchg out ss mov stc mov or hlt (bad) in punpckldq mov and pop dec sbb (bad) (bad) (bad) jg iret cmp push pusha sub and lahf aad fs fidivrl and and mov clc inc cli (bad) sbb aaa mov or mov xchg adc stos sbb inc repnz mov repz inc (bad) (bad) jg arpl xchg add push adc daa cmpsb jne push mov adc jmp jae xchg jae or and xchg cltd xchg (bad) (bad) (bad) fistpll add push pop jne daa imul mov mov popf cs xor cmp mov cltd fdivs add ret mov cltd jmp pop dec int3 and inc push mov jmp lcall mov xor (bad) (bad) jmp lfs sbb stos sub pop jecxz gs adc js lock (bad) (bad) (bad) call pop insb imul inc in cmpsb scas cmpsl jp repnz lahf leave pop dec sbb jg and lcall mov add dec outsl cmp cld pop ds outsl je or in shll (bad) mov addl mov aad popf psubsb ds call fisub ss lret (bad) xor xor insl imul cmp pop xchg pop addl xchg (bad) (bad) lcall ds cmp inc (bad) jne stos fbstp sbb jmp ljmp mov cli lock sub sahf mov jns (bad) jg sahf test push xchg mov jle jns lods push push (bad) (bad) jmp push sbb sbb lods lock push push gs aaa mov pop xchg out mov clc (bad) jns fwait movsl mov adc sti xor jae mov mov or fidivr sarb push cli mov popf call jo mov (bad) pushl lods fneni(8087 adc mov and in aam xchg sbb inc daa (bad) (bad) inc mov (bad) fstp ficomp or adc mov mov cmpsl cmp or popa das mov pop inc mov pop push cmpsb or out push ss adc (bad) mov pop in inc aas push je jb movb in add test adc fdivr (bad) (bad) jmp rcr ds jge jb shll pop xchg fiaddl ret pop out inc (bad) fildl outsl cli or pushl or mov cwtl outsb clc out (bad) (bad) jmp push pushf inc push lods lock mov (bad) dec xchg and (bad) ljmp dec icebp lahf xchg loopne rorl imull cmpsb adc lret xchg data16 fmuls push xlat stos pop (bad) (bad) (bad) lcall out pop pop es sub mov and out cld lock jmp mov aad adc leave pusha add lcall lcall pop add cli stos and push add decl jg and xor mov aad nop rorb decb mov hlt (bad) (bad) (bad) mov jge lods ja aaa stos pop dec int3 (bad) xor fnsave sbb in (bad) (bad) pushl test bound adc bound out fsubr div (bad) gs andl ss pop ljmp ds (bad) (bad) jg fldcw jns jne aad cmp dec into add ret add dec jmp call cli into inc lock mov imul jmp stos jecxz test ret sub mov clc lahf test xor push jns incl cld jmp test jne mov dec (bad) xchg inc rcl aas (bad) outsb sti adc ds out jl xchg push cmp mov mov or (bad) incl jae inc pusha push and sub fist sbb stos pop sub rolb lds mov adc (bad) lcall fcomi jbe in notl movsb push gs mov rcll lahf mov mov decl stos jbe mov and scas outsl ret xchg mov dec enter call inc mov pop push jbe jnp (bad) mov jge sarb mov (bad) jg into lret lods arpl fidivr stc push sbb add ds cs fwait decl fsubr shl repz pop (bad) sbbb lock (bad) incl ret mov jg mov and mov rcl mov lock mov sub mov xor ja adc bnd or xchg aaa xchg fs dec inc jmp dec pop mov int (bad) (bad) call xchg jne sbb in mov negb pusha rorl movsl xor cmp and pushl cmp inc and es pop ds jg push xchg test mov fsubs pop push int3 cmpsl add jle (bad) ljmp mov dec xchg les je cmpsb cwtl aad sti fwait add in lods lds push push ret ljmp (bad) in sub jae shrb inc mov into movsl out mov mov pop dec dec push clc mov (bad) (bad) incl in adc mov scas and inc ljmp call std in clc (bad) (bad) (bad) push xchg sub mov repnz ja mov leave jp sub (bad) incl inc mov add and jl loop fstpl lds cld pushl xchg xor outsl xchg std jb xor mov jg repnz sub into out mov pop std (bad) (bad) jmp cmp mov test mov or dec or xchg cli js test add ds shl push cmpsb les (bad) mov adc push sahf xor (bad) (bad) (bad) (bad) mov cmp pop or loopne,pn or xchg cmp jl sti test (bad) (bad) (bad) incl or (bad) imul (bad) push jecxz and out ds sbb shlb ljmp clc decl inc pop jo ret repnz dec xchg push adc add ljmp (bad) (bad) (bad) (bad) inc sbb daa dec (bad) mov stos inc xchg or rorb or jle push pop iret add inc push mov movb (bad) lcall add xchg dec outsl je cwtl jge sbb push inc daa inc sar (bad) (bad) jmp push out repz xor fidivl adc pop mov (bad) dec jno add xor (bad) (bad) (bad) pushl fisttp sub (bad) mov fsubr fisubl sbb xrelease popf cmp pop std jmp cmp jae aad lret mov insb sub add push outsl (bad) (bad) js xor sbb stos jb mov test cli mov pop hlt xorl xchg stos (bad) jg jg pop and fwait cmp jb inc jae pop (bad) mov sub (bad) (bad) incl xchg sti xchg add xchg xchg push scas call int3 pusha call imul incl xor sub cmp sti xchg adc addr16 lods loopne jle repz mov inc mov in jns (bad) bound sub mov (bad) (bad) (bad) decl fisttp lods aam pop arpl lcall stos mov jecxz xor (bad) push cwtl pop les sub or popa jno sahf repnz (bad) lcall je ret test pop mov divl push jecxz cld and andps stos rcrb test dec (bad) jbe insb imul inc adc cltd pop cmp movsl jns push dec outsl push nop adc aaa out xchg (bad) xor jg jno xor popf jp (bad) (bad) (bad) inc inc (bad) ficompl xorl test aad addr16 push js daa inc mov loope clc (bad) pushl inc xor popf jle lods les into push test lods je pushf bound dec add (bad) fimul lea mov leave push int3 scas jne mov int or mov push rorl leave sbb lods aaa std (bad) call lahf jae mov adc pop mov mov pop jne sub (bad) decl out fxch sub xchg mov jo pop movsb jnp pmaxub pop aad xor out aas dec shrb movsl and add mov dec outsl mov lds cld (bad) pushl popf mov out scas push mov imul adc ret repnz xor aas xor fcompl sub in cmp js adc xorl in push and loope push cmc in pusha sub mov add (bad) (bad) stc mov aad push xchg pop outsb mov mov cmp ljmp addl push enter movsl je add (bad) (bad) (bad) (bad) cmp pusha cmp push leave fidiv leave (bad) jmp and dec xchg lds cwtl rol (bad) ljmp gs aaa jecxz movsb mov int3 addl jp cmp call bound xchg lds in xor bound push (bad) push (bad) (bad) (bad) (bad) out sub xchg mov icebp js dec inc cmpl add cltd insb dec adc pop addr16 cmp (bad) (bad) decl dec dec cmc leave and setp fcomip jns data16 sbb lods jg (bad) lcall dec pop movsb cmp mov arpl movsb stos dec push cmp xchg movsl mov pop dec andl std (bad) inc mov pop xor das cmp cmp xchg pop inc out mov bound int movsl insb mov mov sub lcall mov imulb std in out addr16 enter call cmp (bad) fdivrl xchg cmp clc cli movsb add (bad) (bad) (bad) decl add aas adc bound jmp push mov xchg fnstsw push pop cmp (bad) (bad) jg push sbb mov mov in gs in fsubrl lahf adc stos mov test call (bad) (bad) inc fwait test ss add push jns,pt rcrb ds and sbb mov jnp js cmp xchg sar push aad mov push xchg fsubrs or (bad) (bad) ljmp xlat and cwtl fwait mov clc fwait mov popf in in push (bad) jecxz push push es aad cltd pushf (bad) (bad) jg shrb addr16 pop (bad) (bad) add lret repnz dec add xchg (bad) bound sub jg (bad) jmp clc rcrl cmp mov xchg or leave push pop jb (bad) (bad) pushl inc jp imul or cmp call and sub mov cld aad rclb (bad) mov clc jg or xchg mov pop popf add out dec jecxz pop scas fldl and cli jmp scas stos cmpsl comiss mov (bad) (bad) (bad) pushl icebp push (bad) arpl dec fwait jo (bad) ja lods pop je hlt fbstp jae rclb ret mov jmp clc mov mov aaa xor sub (bad) (bad) (bad) ljmp pop cmp lods add xchg icebp and inc mov jle out scas pop xchg mov inc dec jl lret (bad) aam ja cli cmpsb jnp dec adc iret push inc sub inc popf std xchg dec or out jl mov sub cltd cmpsl scas mov (bad) test ds lahf nop aam dec out cwtl push syscall aam xchg mov mov aaa xchg push add fldl cli pop (bad) (bad) (bad) call sti lds rcrl cmp lret pop inc shl push (bad) (bad) (bad) incl xchg jle xor jmp or mov call inc sub adc (bad) decl icebp inc push fs cmc jecxz insl jbe out outsb pop (bad) (bad) mov mov pop cld inc test movsb fcoms nop xchg icebp ljmp xor sbb pop sbb sbb push es mov inc std dec xchg mov sbb gs ss jo push (bad) (bad) pushl (bad) or ja dec popa pop test cltd jbe rol ja aaa out dec fstpl sbb add add shrb cmp idivb dec cmp inc and pop push rolb ds pop sti cmpsb pop lock (bad) call jbe (bad) std test pusha mov xchg mov pop sbb stos jle or xor xor sbb les jg imul cmp add (bad) lahf xchg xor in in int xchg inc xor je popa jae fdivr (bad) (bad) ljmp mov in sub sub aad mov ret loopne inc dec push gs xchg fdivr aas sbb push pushf xchg cmpsb in cmpsl loope icebp cmc (bad) pushl sbb out in mov cmpsb push pop in test mov gs sub (bad) lcall sub cwtl ljmp sub fnstcw adc jp test (bad) (bad) decl dec rclb push stos add cmp sti sbb mov mov and (bad) (bad) (bad) (bad) incl fsubs shr jle push inc sarb cwtl out or decl adc xchg inc mov rcr jb xor mov (bad) decl xchg mov cltd xor inc push jns jnp mov cmp mov dec (bad) (bad) (bad) lcall loop shlb dec mov adc jo mov jno (bad) lcall pop xchg mov (bad) (bad) fild aad jg add sbb jae dec xlat dec pop ljmp mov mov pop xchg (bad) (bad) dec insb xor lahf pop inc push inc loopne add pushf or jo pop das stos pop testl (bad) (bad) incl lcall stc in add sbb xor or jp xchg and dec mov cmp or sub dec inc xor in fistp arpl (bad) ljmp ret jecxz mov push repz push push jne (bad) dec in pop inc mov (bad) (bad) jmp and ret mov sub adc mov out xchg adc ret dec lret cmc pushl push pop jl cmp clc jmp sbb (bad) pushl lret aam bound cltd pop fucomip cli (bad) aaa pusha je lcall or fsubrp mov or jecxz (bad) (bad) (bad) pushl cmp or or loope lods ss pop leave (bad) int sbb push (bad) push icebp aaa cmp sbb enter (bad) ficompl mov dec lods (bad) stos adc cli loopne stos ljmp (bad) cmp fsubl sarb cli mov add movsb (bad) (bad) (bad) pushl and push push sahf adc arpl data16 sbb mov dec jecxz and movsb mov (bad) (bad) (bad) sti add lret sub rorb cmp js adc sub xchg and sbb (bad) (bad) (bad) jmp clc dec outsb lods sbb push lcall dec jle xchg and pop rcll scas shll or popf push mov push ljmp xor (bad) fistp (bad) jne xor xor (bad) (bad) ljmp lods pop ljmp mov jne imul xchg insb ja insb inc sub (bad) (bad) decl add jne xor inc sub stos jg push xor xchg dec and mov repz xor outsl add mov add cmpsb test inc sub jge (bad) (bad) lcall popl loope shrl sbb push mov gs (bad) pushl sbb and and stc fimull mov (bad) shl (bad) jns (bad) (bad) ljmp loop lahf pop fisubr aad jbe pop add mov dec in test popa xor jl outsl (bad) call inc incl or and xchg xchg mov bnd loop icebp mov (bad) (bad) incl mov pop push sbb jae incl fisub cwtl test pop jg lods sarb (bad) (bad) lcall jle xchg pop mulb push rcll test (bad) call daa dec pop (bad) lock mov sti pop pop bound ljmp mov insb pushf ret xor mov mov call into add pusha sub (bad) lcall sbb imul insl pop hlt (bad) call mov in incl inc fildl ja adc (bad) ffreep inc add push fimul call test sub insl repz (bad) (bad) lcall mov cld xchg mov sub cmc data16 (bad) jecxz sbb ja add cmp push adc mov jmp aam ret stc out cmp enter jg nop xchg rcrl jle addl or jbe xor push mov (bad) (bad) incl jns mov decl in or hlt adc call mov xor mov adc or jg (bad) gs lock adc lds or inc aam adc iret imul xor popf mov popa ds inc dec int3 dec clc loop mov std inc mov (bad) (bad) mov mov mov mov cltd sti mov mov jb (bad) mov mov add push and aaa mov (bad) dec push xchg ror mov loop fs out in xchg std sbb idivb (bad) or lcall decl pusha or outsl xor jmp in pop jb sbb (bad) mov cmp lcall negb or mov pop popa push out mov pushf mov ss mov (bad) (bad) inc inc js adc adc loopne imul cld sarb lahf ret insl sbb ret clc xchg daa (bad) dec mov push push xor lcall cmp or mov lahf iret mov sub pop add (bad) (bad) mov add add out scas clc sub into hlt push add addr16 cld loope cmp (bad) (bad) (bad) aas jmp push popa adcl orb bound or into mov cs (bad) lcall and mov adc (bad) leave rclb pushl cmpsb xor jge int pop dec or add dec inc and inc pushf fnstsw (bad) (bad) decl push push mov pushf push mov sbb (bad) rcrb lds call cld (bad) mov aad mov fdivs mov dec cmpsb sbb or insl pushl sar or adc xchg (bad) dec mov fcoms ficoml imul push xchg mov xor (bad) (bad) decl insb xor lods sub lea inc sbb cmpsl inc mov cld ficom push mov call mov fildl sbb sub jno pop fiaddl mov dec push jp sub rorl cmpsl add in mov pop ds xor cwtl pop dec add push mov (bad) (bad) (bad) call mov (bad) xchg insb xchg fmul fisubl add cwtl and out popf mov or adc sub aam sar push (bad) in scas jns mov std mov xor xchg cmp incl fwait out cmp cmp out mov sbb mov fmulp jp (bad) mov mov push (bad) (bad) (bad) pushl outsl mov stc js lea xor inc loopne addr16 pusha test push xchg mov or not push add fstl imul (bad) (bad) out ds (bad) insl xchg stc and arpl jno inc xor sbb cmpsb sub ds jg cmp das sar xor push xchg into pop cwtl hlt jnp cmp lea test (bad) (bad) (bad) (bad) jl push movb inc bound push fsubrl xor pop sub ficompl mov lcall or out leave fidivr push xor pushf adc jecxz sub fdivl xchg xor jl test pushl std push xor aaa ljmp fwait xlat dec popl repz mov ljmp push adc jnp sbb jge loop rclb mov sbb push int subl xor dec cmp insb std (bad) jg sub movsb fs jmp (bad) in fwait lret xlat or add outsb (bad) (bad) jg imul les (bad) lock mov decl (bad) icebp das dec jg jne das and int xor (bad) (bad) call adc daa sub es or sub cmpsb and and dec movsb incl jbe std in call or pop xlat popa fcoml fildll leave in push js mov cmp add inc mov and jae cli decw subb ds bound inc jg jg lcall in push add mov shrl int3 push loope jge xchg clc inc (bad) call and aad cmp dec les cld push mov push mov cmc cmp ss pop or adc mov (bad) (bad) (bad) decl jae aad xor insb cmp mov sarl popa insb fwait dec stc push mov (bad) jmp or imul push in repnz jne outsl push pop mov lods hlt xchg (bad) (bad) incl mov xchg cmp mov insb iret mov adc push nop ljmp lret (bad) (bad) lcall push adc adc rcl loopne add leave jg xchg dec popf es ljmp addr16 fidivr jb push adc (bad) decl and ja mov pop xorl stos cmp (bad) (bad) (bad) aas inc inc mov cmp into cmp jmp stos cmpsl or int3 fs mov test sbb cmc loop fwait out lahf jo (bad) (bad) jmp movsb outsl mov inc dec icebp pop ljmp rcll inc and xchg (bad) (bad) std sbb jmp jae mov sub leave dec test je inc ljmp sbb push cmp add jne,pn (bad) (bad) lcall sub shlb in cmpsl js (bad) arpl pusha push mov (bad) sbb cmp (bad) call (bad) pop xlat mov lods xchg imul in (bad) cmp (bad) (bad) jmp xchg es sub pop lods inc mov mov jl inc sub nop (bad) (bad) (bad) (bad) js psrlw mov repz lea shlb and inc rcrl test mov incl mov cmp imul lods mov data16 pop movsl repz aas test (bad) xor mov inc int3 cmp int movsb mov xlat cltd fbld mov (bad) (bad) lcall ja loope arpl cmp in jb fnstcw dec sti pushf sub (bad) inc ljmp loop pop xchg das es cld (bad) (bad) (bad) call mov xchg xchg iret mov mov das xchg lahf mov js ja (bad) (bad) (bad) call fiaddl iret dec cmp lea mov mov inc or addl jmp sahf dec les push pop xchg push pop lcall outsb hlt adc jg sub (bad) mov mov decl lock push push mov sub movsl idiv (bad) jmp xchg add xchg dec push mov lock dec ds mov (bad) jmp decl lock cmp inc sub loop int3 (bad) mov clc popf and add (bad) dec and cmp pop and mov and pop cmp (bad) (bad) mov xchg out mov loopne jbe dec call (bad) hlt mov mov push jl cli (bad) (bad) lcall loop pop push fs mov aam fcmovne mov lret xchg lahf (bad) jg outsb cmp push out and cld rcrb js jb dec jg (bad) (bad) (bad) (bad) mov jecxz fisubl fdiv nop fxch out cmp enter and mov adc incl pop arpl ret push sub xor incb in sub aas roll (bad) test fucomi add loop jg (bad) push xor leave sbb orl fwait decb loop and xor xchg inc and mov add jmp cli cmp jecxz add gs scas xor call les loop cmc pop inc outsl shr jl xchg pushf cld incl cld cmc in mov call inc (bad) rolb xor mov mov (bad) pushl sub and aaa mov add subl loopne add repnz (bad) (bad) (bad) call sbb mov aam dec fwait mov adc push dec ja mov sbb (bad) push ljmp cli stos ja push lds cltd call cwtl sbb fdivrp (bad) (bad) lcall jecxz insl es cmp into push out cli adc jl je clc fsubrp data16 (bad) (bad) incl lea add icebp jge stos sbb inc rorb outsl mov mov cmp (bad) xchg pushf jae lcall jnp xchg mov mov mov add and push (bad) (bad) (bad) ljmp shll inc mov gs mov or dec pop cmp mov icebp add ds addr16 adc lods push (bad) (bad) (bad) (bad) mov nop jp stos (bad) dec and dec leave jae imul mov (bad) (bad) lcall or movsb fs sub or jle xchg mov adc jmp nop mov dec push xchg (bad) insb loope sahf jle fild mov (bad) (bad) (bad) jmp xor (bad) jecxz adc jge in adc xor lcall (bad) (bad) ljmp in lods stos mov mov test cmp and and fwait dec add (bad) das scas mov incl add cmp (bad) (bad) (bad) jmp hlt aam mov orb inc xor fs push jne cmpsl in lret out (bad) (bad) (bad) ljmp and jnp pop push in inc mov rcrl mov mov iret cmc insb call loop push mov xchg pop fimul (bad) (bad) (bad) fistpll mov test and lds fsub pop faddp dec mov dec jg (bad) ljmp add into insl jl pop out add inc mov pop dec je es mov call pop xchg pop cwtl dec inc mov add push outsb sbb (bad) fldenv cld or cmc (bad) ljmp mulb sub aaa scas icebp pushf hlt (bad) mov add repnz lret hlt es (bad) (bad) (bad) mov js sbb jle mov mov adc jnp ss mov or cli notl (bad) stos push jl insl fwait xchg push ja dec lea xchg in add mov xor jg jnp jecxz add (bad) (bad) lcall fidivr cmpsl dec cli or dec jb xor mov push cli (bad) (bad) call es ss xor pop mov mov mov aaa gs dec outsl inc hlt (bad) ljmp and jbe loope mov stc xor add fild add (bad) lcall hlt in (bad) xchg or push pop push mov push xchg rclb inc lret (bad) (bad) (bad) incl push mov jmp ljmp icebp ljmp xlat andb xor loope popa jae popf mov in dec cmpsb mov jnp and add popf inc out mov (bad) sbb subl or sub in mov mov mov or xchg adc dec int3 test rclb or pop lods inc je dec cltd stc inc nop rorb inc clc fbld in dec out rcll aaa std (bad) jmp ja sbb push add add jns xchg mov js lods testb (bad) (bad) incl and cmpsb aam adc sub daa jmp daa pusha sbb into movsb les jg js out mov jge mov pop sub call mov inc int3 mov ljmp cmp (bad) clc ljmp lea (bad) dec mov (bad) (bad) (bad) lcall pop mov rcl dec and dec cltd mov pcmpgtw cmp loope inc inc decl xor andl inc lds and test cld in scas ljmp ljmp xchg mov fstps dec push jbe cmp push sbb (bad) in icebp xchg test cmp push imul (bad) (bad) mov sub std je packuswb (bad) clc adc scas pushf jecxz push inc int cmp jg (bad) (bad) ljmp mov ds xor in sarl and sbb cmp xchg dec (bad) (bad) in ja xchg sub rcrb in add dec popa mov pop push lret ljmp (bad) jno push lock push out (bad) mov (bad) (bad) (bad) call daa add fs adc aas cld fsubl addr16 cwtl fwait dec xor test popw fdivr (bad) (bad) decl mov jns add (bad) and xchg add pop test xor icebp push imul sahf fwait cmpsl imul mov (bad) loopne (bad) aad inc mov mov cli jmp shr lcall xlat jnp (bad) call mov ret xchg jo out mov (bad) jno mov xchg lret (bad) ljmp cvtdq2ps xchg add adc inc bound daa and add shll jbe mov (bad) (bad) lcall and and push sbb test inc pushf sbb cmpl sbb (bad) (bad) mov test sbb fucomi pop and insl xchg mov outsl cli fucom mov sbb and les inc (bad) (bad) (bad) fnstsw pusha sbb push add icebp or mov fldl icebp das dec je mov aas fdivrs (bad) ljmp dec jnp das jmp shrl jnp inc mov xor clc or icebp (bad) (bad) (bad) dec xchg pusha fsubs dec scas sub cmp sub mov sarl mov push sub xchg jge pop sub pusha sub mov pop and mov (bad) (bad) jg mov pushf int3 push or lds cmp inc xor jp jb mov or lcall int3 push sub (bad) (bad) (bad) pushl int push inc insb add fistp sbb test xor stc xchg cs fcomip incl xchg fxch adc testb dec or mov cli inc push push inc in inc push sbb fs pop arpl roll fcoms pop icebp (bad) call xor adc mov cltd sbb std jnp fild int3 es shlb (bad) (bad) (bad) dec mov lock leave idivl cs pop test orl jge sub in sar (bad) (bad) jmp aas jo cltd gs ss cld cmp and jns (bad) js mov fnop push mov call jmp or jno sti std push sub call pop pop sbb cmp out (bad) lcall sub mov inc (bad) adc mov unpcklps (bad) (bad) pushl (bad) add arpl push (bad) imulb and rorl xlat test int add xlat (bad) (bad) (bad) cmp xchg test sub sbb clc dec fwait add push repnz sbb (bad) (bad) jg push adc psllw (bad) sbb test add mov xchg adc fs pushl cli cs cwtl xchg mov mov fwait sbb jae add lods cltd dec mov push push scas pop jno out jg cmpsb mov and dec fcomip out xor cltd sbb inc xchg lret push xchg (bad) es (bad) out clc movsl lods mov pop mov jg sbb icebp xor movsl mov mov mov or add in pop cltd (bad) (bad) (bad) pushl mov mov roll mov ss xor ret xor xchg jecxz lock jmp xchg mov ficom xchg jl outsl call (bad) lcall cmpsl mov daa in nop xor cmp das (bad) (bad) (bad) call push or js sbb lret cmp test dec jb mov outsl loopne leave loope (bad) (bad) pushl sbb sbb jnp cmp aad push pop fisttpll add dec pop ja pop inc sar ja push mov nop jnp jae mov scas and add (bad) or (bad) ds ficom adc inc mov imul test leave jmp fsubrs inc xor ret add inc mov sbb bound shll insl ja pop fistp std rol les fsub pop pop pop loope push and scas sbb add imul (bad) (bad) inc mov cmp loope loopne adc test je adc dec inc frstor (bad) (bad) (bad) out es into lods jge dec mov xchg add inc cs jecxz fwait add fsts ljmp mov pop fmuls subl xchg (bad) (bad) decl dec pop cmp xchg mov pop jb sbb adc (bad) sbb bound mov mov cmp scas push (bad) and add pop xor hlt jbe mov xor lock xor mov jl lock incl dec lods mov add mov loop (bad) decl mov lea lods lret pop gs sub incl fbld and movd out jnp or lahf or (bad) sbb sbb lock push pop test cmp movsb xor (bad) (bad) jmp sub sbb sbb ljmp inc mov daa nop and mov xchg cmp inc pop cmc jno mov xor std jmp mov inc jle mov xor (bad) jg out fldt incb xchg xor ljmp fnstsw rclb stos xchg inc mov decl add push xchg jo aad imull roll fiaddl pop incl and xor cmp mov (bad) out adc pop mov js cld or inc pushf test lods pop mov mov adc ds jbe mov dec xchg (bad) jno (bad) ds scas xchg mov enter lcall (bad) decl popf pop out cwtl mov hlt pop shr les mov (bad) incl xor xor rcr cld cltd repz xor imul add bound sub mov or (bad) je pop lds test adc (bad) call lods pop mov inc into rorb xor (bad) (bad) lcall adc (bad) lock sbb jo sarl arpl xchg inc into or orl (bad) incl fnsave push push inc insl je push mov lods jbe sbb adc (bad) (bad) call clc mov vsubpd out aad ficom popa pop int scas jbe sbb clc (bad) jmp stos cmp fisttpll cwtl mov add cld add (bad) stc mov scas cli (bad) (bad) lcall inc das fstps popa jmp jg ret fldl2t lods mov dec pushf xacquire push xor cld inc jnp sbb push adc add cmp fwait lock or inc mov ja,pt iret pusha (bad) popa hlt mov sbb (bad) ficomp (bad) (bad) push jmp inc pop movsb cmp xor jbe repz push pop inc jnp (bad) (bad) (bad) jmp cmp push sbb dec ljmp mov push std in push mov outsl loopne (bad) jmp aaa fiadd or mov repz sub mov adc xlat mov mov cmp push shr push add (bad) pushl es lret repnz out aaa push cli mov loop mov pop mov (bad) decl mov lret mov lods nop arpl mov (bad) mov push or pop sbb mov arpl mov mov arpl ret icebp xor xchg (bad) (bad) ljmp jg rcll (bad) int jl nop mov sahf into inc sbb sbb (bad) (bad) jmp dec cmp jns out repnz in sahf mov (bad) frstor (bad) jmp adc pop addr16 popa and jl dec pop int aam test mov pop fildll sub loop les pop outsl insb aaa ds (bad) (bad) ljmp out add les and es cwtl rorl (bad) xchg add imul gs cmp or aas mov outsb push in leave loop leave icebp mov (bad) lcall cmc imul or adc inc fwait xor rolb (bad) (bad) (bad) pushl sti push xchg push addr16 jge js lods enter loop push add dec or ja pop fs mov mov sahf call call push lods mov (bad) negl test jg stos scas lock mov (bad) xchg int3 sub xbegin xchg in por arpl popa rol adc dec push dec dec xchg (bad) fild pop cmp fisubl xor or incl mov sbb fwait mov jp sar pop mov fs es test mov jg mov inc pusha es repz push popf sahf cmp fiaddl push icebp testl ljmp adc insl rcr or cmp cli sti outsl fwait lods es mov mov mov (bad) (bad) decl scas test clc jnp std mov test sub movsl mov (bad) (bad) jg mov pop add cli pop pop rcll mov cmc sbb (bad) (bad) (bad) lcall xor add std dec ds and lahf or mov sub cli (bad) (bad) pushl outsb sub cld les sub inc icebp out out xor sub or push inc daa add (bad) (bad) mov shrl sbb mov mov ret outsb jmp mov outsl (bad) jmp sub mov add or mov imul inc dec pushl add and incb bound out cld out cmp ljmp mov (bad) call or shrb add mov minps ljmp mov ret (bad) gs inc and mov pop sti mov int3 ja (bad) call mov loopne repz repnz pop pop std aas sbb es int3 loopne xor (bad) incl push mov sbb bound dec or mov popa sbb addr16 jne mov popa ljmp add fdivrl in (bad) mov (bad) (bad) lcall js inc ret leave bound adc add rol (bad) push movsb scas fst (bad) (bad) (bad) jmp push (bad) jae mov pop stc int3 push mov jno push push lcall dec cld scas adc subl mov call pushf cmpsb mov push mov fadds in mov call mov call or icebp addr16 (bad) inc cmpsb mov (bad) ljmp ds add jmp mov mov frstor pop or loopne jae and mov dec lods aaa cld (bad) call out (bad) fstpt shrl mov sbb lea (bad) (bad) (bad) ljmp not jl aas into cmp xchg ljmp xor das out cs mov push in xchg (bad) (bad) (bad) (bad) mov mov test aam jns ljmp (bad) in jb ficomp jo pop push mov push jo gs (bad) (bad) incl (bad) call inc xlat lret and mov js (bad) cmp fcmove cmpb dec clc (bad) (bad) decl scas sub mov xlat clc in ss fisubrl enter mov lret dec (bad) in push arpl dec lods clc jne push aad (bad) (bad) (bad) mov sub xchg dec popa int mov imul mov push jl (bad) mov fs xchg aam dec arpl cli scas jle mov sub mull notl sub (bad) (bad) decl push lock outsl jmp and jo pop mov dec inc xchg lea push pushf (bad) (bad) (bad) cmp xor test push push cs (bad) idivb imul jne cwtl ret jmp rolb (bad) in jmp (bad) (bad) mov mov out lcall mov sbb into (bad) (bad) (bad) push repz out cltd and and mov jbe mov jge xchg sbb call sub leave les clc push push fsubrl cmp mov (bad) (bad) (bad) incl es insl out (bad) loope mov pop pop jno in and push popa insb sti jmp aas (bad) (bad) (bad) (bad) fmuls inc jne fistpl and push (bad) dec jecxz xor jnp sub dec add (bad) (bad) (bad) decl fisttpll sub jb loop sbb sub xchg xor jle cmc push lods push mov push add mov (bad) outsl jb,pt lahf inc mov and (bad) (bad) call pop push pop mov mov mov mov jno nop adc jnp cld (bad) (bad) in jb jnp cs mov xchg sbb in jp popa scas sahf cmp inc insb nop mov call aad sub push scas adc dec out aas adc sub add dec sbb aad lret lret (bad) jmp xor cmp mov ficomp (bad) (bad) (bad) fisubr lock test dec pop push nop adc inc xchg sti daa outsl fnsave (bad) fisttp push cld (bad) cld stos loopne ja cmp mov mov or or inc xchg (bad) (bad) faddl lods in clc pop roll icebp xchg adc (bad) (bad) jmp sub jns pushf std in outsl rol aad movsl pop sti inc ret sub (bad) (bad) cmp xchg jle ret jb xchg push sbb nop mov inc ljmp shrl aaa cld jmp lock fcos sbb popf cmp sbb mov cmp (bad) pushl jmp inc test aad and (bad) cld out xor outsb ds out push inc (bad) (bad) (bad) jle imul mull icebp fs rcl jae loopne (bad) int3 (bad) clc (bad) (bad) pushl es enter out cbtw lock ss adc int call cltd ds rorl dec sub pusha cld lock push inc (bad) mov cmp pop (bad) fildll xchg sti (bad) (bad) (bad) call addr16 xchg fsubr xor pop xchg insb jb xchg aaa out xchg aaa rcl cld xlat xchg repz (bad) (bad) dec aas daa or sub fiaddl int lock ja icebp repz clc sbb cmp mov (bad) iret cmp pop mov or pop or es nop lods mov std inc cmpsl loop add push inc es jno loop push sbb bound push add fcomip sbb mov cwtl cmp sub sub shrl clc (bad) decl push xchg scas jmp push inc rorb dec cmp fcmovu idivl adc (bad) cmp and (bad) (bad) (bad) pushl adcl rcr dec jg sub add pop js leave pop test xor (bad) ljmp inc (bad) out and xrelease mov incb lcall xchg scas jo js push sti int3 mov rclb jl adc rorl pop movsl xor inc sbb and lea rcrb mov push cs rclb push mov (bad) (bad) lcall xchg sub mov xchg (bad) pop or mull (bad) mov xlat fs pop mov in add (bad) (bad) (bad) jmp jnp pop sub fcom mov dec shrb push fnsaves sub call cmpsb push (bad) jne xchg (bad) ljmp push mov inc out pop arpl jnp mov imul (bad) (bad) call sti cwtl cmp test in push mov in call dec mov (bad) jmp sbb int3 and inc or fcomps mov (bad) mov mov push sarb fcompl mov (bad) jg or push and or enter stos (bad) inc adc pop add jmp inc movsb call mov dec mov inc cmp fmull sbb aam cli (bad) incl dec xchg das adc test cltd dec push inc cli inc push xchg push leave add popf gs stos cmp mov (bad) mov mov aaa cs shrb lret jbe pop movsl sbb (bad) (bad) ljmp std jbe mov inc inc std mov addr16 pusha lret xchg shrb xchg fmull push loop jp outsl and (bad) idivb mov or test shlb (bad) pushl mov sub xor and sub cmp jb in push jns lods std (bad) (bad) (bad) ds fwait inc (bad) fstl lea sbb bnd adc xchg (bad) pushf popa movsb rclb (bad) call xor ffree jns insl insb mov or fisubrl mov repz mov mov jle ds sbb (bad) cmp stc lcall jecxz sub nop (bad) mov stos clc (bad) (bad) lcall mov or push daa sbb loopne mov add (bad) jg mov rclb cli or int3 jbe (bad) push nop push (bad) (bad) call sbb and pop aad xor std fidivr mov inc je sti jmp (bad) (bad) incl daa mov xor bound sub push cltd or and jmp cmp mov push (bad) shll repz adc (bad) decl ds mov in adc mov outsl inc jo inc and daa push cmp (bad) lcall fcmove mov dec mov popa cmp (bad) mov mov (bad) daa out cmp mov (bad) dec test jle das xchg push ret push xchg xchg dec and (bad) lcall mov movsl pop aad test and imul test (bad) call outsb (bad) ja adc dec in inc jle loop sbb aam or loope fisubr pop loope (bad) pushl cmpl pop dec (bad) and mov (bad) (bad) mov add lods popf sbb add adc push inc iret loop (bad) (bad) jmp and xchg jmp imul cld insb loope cmpsl xor (bad) jmp ja sbb lret add push sub xor jno sbb inc ds jae ss xchg inc (bad) xchg es incl push ss cmp in (bad) decl fwait pop stos mov xorb hlt clc scas xor pushf leave sbb adc (bad) (bad) pushl lret push xchg pop icebp mov sub dec sbb pop and mov loopne pop pop test test jp flds adc ds sub lods adc loope fild ds arpl fld xor or xchg xchg lock test mov repnz sbb jmp std mov jle rolb xor cmc fnstenv cmp xorl imul jmp lret movsb insb jmp (bad) decl fdivp push xchg mov sbb and push xchg mov pop sar (bad) (bad) mov ja dec fwait cmp jns out adc dec (bad) (bad) rsm xor xor inc loop mov xchg adc add popf adc mov jge pop aas icebp mov in sbb jle jbe sub dec (bad) pushl mov or stos into ss loop iret xchg cmpsl mov sbb shl jne,pt movsl inc (bad) mov inc iret pop movsl fs popf cwtl ret (bad) lock clc sbb sbb (bad) aas cmp inc jg (bad) call lret cld pushf aad sub push dec or ret pushl mov in jle pop sbb mov mov jmp (bad) fstpl push jle xor adc add in shrb popf cmp and lods pushf test call into mov fdivrs lock je mov movsl lret les sahf (bad) repnz (bad) lcall dec xchg push loope cmp mov mov lahf xchg or daa xchg scas pop frndint (bad) (bad) (bad) decl mov xchg xlat jmp aaa movsb mov jp sbb cli and jl jmp (bad) call fistp mov and lret xor xchg sub mov in rcr test sbb mov xor call mov test out cwtl lcall (bad) mov cmp dec hlt or mov scas clc data16 push or push adc (bad) pushl sti nop jb mov in and in pop in or dec movsl dec (bad) lcall ds (bad) clc mov or into outsb mov out sbb pushl pop mov sub xor xchg add jbe clc addb or fsts (bad) mov cmp xchg lret or adc pop movswl lock push into push and inc jo (bad) (bad) pushl loop add aam (bad) lods neg push aas jns mov ds lcall loop mov xlat aaa sub and push jp fidivrl xchg (bad) (bad) ljmp out iret sbb in cs inc mov lea shr scas (bad) (bad) incl in lret mov stos out insl dec cld stos jne ds popa js add push cmp (bad) (bad) (bad) jmp (bad) cmc out fs stos push sbb xchg xor adc scas pop (bad) jecxz mov jo mov inc mov cmp iret jg pop ja pusha rclb mov sar inc popa sarl ja mov xchg sahf jmp movsl pop adc (bad) (bad) (bad) jg pop sub xchg xchg push adc mov mov movsb mov (bad) lea (bad) (bad) inc xor jno sub data16 call sahf push (bad) push xor decl lock and cld xchg addr16 sbb xchg test out test mov test dec push cvttps2pi sub lcall dec or (bad) sub pop cmp ret idivl push std decl mov and xchg test push out and and pusha push adc cmc adc (bad) call sub js xchg cmp cmpsb insl shl (bad) fldcw fwait mov ljmp fnstcw inc sub push cmp stos repnz lock dec dec sub aas mov sub test mov jns enter push (bad) (bad) cmp mov (bad) cli mov imul inc (bad) jecxz xor jecxz loop mov push dec sub (bad) lcall stc inc imul leave mov test push gs lods inc (bad) out lret sub add sbb das call pop push sbb push es mov jle push (bad) (bad) (bad) decl mov push jle xor xchg or outsl sub mov xchg xchg jge and dec and pusha je repz rcll mov mov arpl adc ret xor push push xchg mov mov add (bad) lcall popf (bad) jae push xchg push jae (bad) ret jmp mov mov imul jmp outsl pop add pop lea inc sbb mov lcall or loope push insb ljmp call mov cmp xor and lods insl js sahf (bad) (bad) jg popa jle push jo mov in fs stos popf lods mov cltd xchg movsb lahf mov (bad) jmp pop cmpsb push pop jo out cmp lea rcrb (bad) mov cmp sahf push push mov shlb cli pop dec in mov fwait jg jge pop sub push movsb pop or push or jae xchg (bad) lods cld xchg outsb insl jno sbb data16 loopne xchg pop mov lahf pop xorb je clc out decl cmp repnz mov pop and jg ds xchg mov push xor mov test (bad) (bad) (bad) jp (bad) and inc lods pop push inc dec adc fisubl (bad) aaa (bad) jne fildll or ret mov mov xchg js (bad) push inc cwtl cmp mov (bad) out clc or ljmp pop mov pushf std mov pop pop lock pop lods add push jb fbstp fisubl mov mov or (bad) (bad) lcall aad mov sbb dec outsl movsb ja lea inc clc jnp mov (bad) (bad) (bad) jg and mov jnp mov jae push mov div add sbb cmpsb int or (bad) (bad) lcall or je inc fs adc adc ja mov push or mov (bad) jmp loopne into add enter mov dec cmova mov jbe (bad) (bad) pushl lods jp pusha cwtl fs jae mov fisttpll lret sub nop cli lcall arpl mov or clc fcoml and adc mov ja cltd mov lahf pop outsl lret mov js aad jge push cwtl push leave inc sti sahf mul cmpsb gs cs add daa sub pushl stc mov ja div jae and xchg mov pop ficom daa xchg (bad) hlt mov (bad) out push mov pop (bad) cmpsl sbb mov and js jg (bad) lcall inc sahf lds mov les adc and (bad) call scas enter push xchg mov (bad) (bad) ljmp sbb movsl aas loop ret roll lds in out or dec mov (bad) fs (bad) (bad) (bad) jg fwait inc je xchg pushf imul popa xlat cmp out pop push and pop enter (bad) lcall rcrl mov mov gs mov insb jmp sbb ds dec (bad) jg call andl xor movsl stos (bad) xor loope (bad) (bad) (bad) (bad) jmp jmp push push js sub mov mov xchg sbb sbb leave jg xchg (bad) (bad) (bad) jmp or and sahf mov (bad) xlat int (bad) (bad) std repnz push push sbb or mov sbbl cmp clc push idiv pop hlt incl lock pop mov scas dec out sbb pop pop call add (bad) (bad) (bad) cmp sub rorb xor and sub jb inc cmpsl xlat mov in mov std fwait push imul ds cli sub xor cmc (bad) ljmp repz ja in dec pop lods out rorl aaa jecxz test lret lcall ja and (bad) pop movsb iret movsb push std loope or push rcll (bad) fcomip jle dec cmp xor test gs or hlt (bad) (bad) pushl test scas pop movsl mov bound and jg dec push xchg jno mov xlat shlb lock loopne in adc mov (bad) (bad) (bad) (bad) fcompl ds pushf ljmp pop xchg xchg and mov fisttpl pop (bad) lcall push dec xchg push int3 xchg stc sbb push dec test mov popa mov mov push jmp (bad) (bad) (bad) (bad) fnstsw jmp insb push jb jb adc (bad) inc dec dec mov call std cltd bound (bad) (bad) (bad) faddl out test scas scas aas inc lds adc push jae push notb imul pop or mov cmp setp mov ss (bad) lahf and scas pop and insb cltd push rolb mov jns mov shll push pusha adc cld (bad) (bad) pushl (bad) mov mov (bad) divl jg hlt stos push bound mov or xchg xchg jle add mov ds lock (bad) call inc out push unpckhps pop jno int in cli ds adc fcoms lds loop test int3 jno cmp pop dec ds or test pushl mov inc inc lret jecxz fwait adc jecxz movsb shl pop call and (bad) stc fs inc mov mov xchg inc jno inc add dec lods shr rcr aam adc add xor (bad) (bad) incl out mov cmp add xchg push imul or stos inc je lock (bad) incl (bad) imul push mov inc mov sub mov insl (bad) inc xchg sahf fistpll outsb mov inc (bad) cld lret and (bad) (bad) call mov pop hlt gs dec adc mov adc sbb leave sti testb mov fsts mov les decb insb test mov xchg out cmp adc int mov sub dec sar mov pop pop je rcll movsl mov out scas pop xchg xchg movl sub ja mov lods fnstcw cltd jns mov push mov ds clc or in or or das stos inc adc dec pop and aam idiv (bad) cld mov pop mov pop push push push xlat sbb into dec outsl sub mov (bad) out cli imul stc cmc (bad) mov cmp jg sub inc fnsave xor sbb fcomip push pop shrl repnz pusha in jmp and xchg scas call loop cli (bad) (bad) decl lock mov cmp mov stos je add inc sub jb (bad) (bad) (bad) out sahf test test xchg mov gs push xchg subl inc mov std (bad) jns ljmp mov inc adc dec ds (bad) (bad) jg in xlat mov cmp cmpsb xchg (bad) cmp xor cli cmp pop arpl sub or std iret or mov mov add popa jp out fimull mov sub sahf or (bad) call in jb into jl movsb xor mov inc and (bad) jmp cltd mov mov mov cmp mov mov sbb stc jg scas repz out std in in enter ffreep bound sar (bad) (bad) jmp jne jns xchg test dec (bad) clc xchg negl test mov add das clc jns xchg rcrb sti mov lock pop cmc pop mov mov cs cmp lcall or (bad) xor push sbb js (bad) (bad) jmp adc test mov and das push ja push and movsl xchg cmp sub (bad) (bad) (bad) ljmp mov (bad) dec or out das and sti push loop sbb ret and xor sahf loope xlat mov and decl mul mov stc call cld inc (bad) (bad) pushl dec leave (bad) pop adc dec cli xchg jns jle (bad) ljmp sahf xchg push pusha ss hlt int imul emms jmp cmp jmp scas out je inc int cwtl movb pusha mov in loopne adc cmp and dec std xor popa pop test xor jne inc sbb test mov mov decl int3 adc orb add push mov mov add call les push jmp shlb bound inc inc iret insb jmp jl push jle orl push std and and adc inc insb hlt adc aaa lcall (bad) icebp mov or jl mov jo aas (bad) cld xchg das arpl inc jge lea sub loop out sbb (bad) or faddl and (bad) xlat loopne or fst das clc (bad) (bad) cmp mov aaa and lret sbb in xor repnz in jmp hlt xchg inc push adc xor push mov pop je cmp sub and stos sub mov dec (bad) jg cmc inc push cmpl addl pop gs cwtl fwait (bad) (bad) (bad) (bad) (bad) fsts dec dec daa les cmp sub (bad) fisttpll les pop lods push mov mov (bad) call xchg lcall mov mov dec addr16 and cmpsl dec pusha (bad) pusha ret dec pop lock sbb movaps (bad) (bad) jg or shrb ficompl imul and jp sub lods lahf ss loope clc (bad) (bad) incl xlat out push push repnz dec jmp push add nop xorb call leave mov mov leave data16 (bad) (bad) (bad) ljmp xor iret sub in sti jae dec mov jae jb js (bad) (bad) (bad) (bad) lcall (bad) mov inc pop loop lret xor pop add (bad) cli pop clc aam daa ja enter (bad) (bad) push adc ljmp pop es jo sbb adcb (bad) (bad) in ljmp cwtl pop add mov jp ret in addr16 cmp adc (bad) rol and (bad) (bad) ljmp pop std mov cld fsubl xor mov dec adc push inc and xor test dec push pop lcall jb ja jg push push cmpl mov test (bad) (bad) dec adc cli inc imul popl (bad) (bad) pushf and mov cmp aam cmpsl leave dec (bad) (bad) (bad) ljmp jle sbb daa in aam pop mov movsl lret sbb (bad) mov push inc icebp cs mov out or mov stos inc cmpsl sbb xor cmpsl out push mov mov rcll sarl jmp mov decl iret das pop mov adc cmc dec jae sub xchg xor jne pop loop (bad) inc add mov xor jecxz pop pop push incb cld into dec imul cld stos sub or mov mov mov xor nop outsl fsubl cmpsl jb arpl (bad) (bad) (bad) call pop inc mov xor nop mov or (bad) and std mov jg cmp or (bad) fmull mov (bad) (bad) dec xor lret sub push dec les fcomi jp inc mov inc roll (bad) call and pop push pop or insb jge stos lret fbstp or xchg mov xchg mov sub incl xlat das out xchg cmc lcall test add or iret cmpsb mov (bad) decl out aad stos fist addr16 adc data16 sbb (bad) (bad) (bad) incl leave pusha cmc push dec lret or inc jae cmp (bad) sub out in (bad) add push ds loop lcall pop xor mov (bad) (bad) pushl and cmpsb mov mov cmp das pushf in sahf dec add xchg cmp cmp (bad) (bad) clc popf add xchg and and cwtl jo mov push (bad) lcall mov in jmp in bound push jl cmp and (bad) lcall (bad) movsl sub rclb (bad) icebp add and lods iret (bad) (bad) mov mov lahf pop inc imul fdivrl int ljmp jge adc pushl daa out dec xor mov (bad) (bad) call add xchg scas cmp sbb push in jp aad aad js mov xchg daa mov lock and fwait cmp xor (bad) call push rolb mov imul pop sub (bad) (bad) (bad) cmp dec je mov jb push cmpsb jecxz xchg xchg xchg push add push (bad) sub (bad) in out (bad) (bad) (bad) call and rcll fdivp push jg daa popa xchg aam jp adc stc cwtl fsubrs int3 lahf (bad) (bad) (bad) lcall jmp jge inc sub add stc inc iret dec inc repz ret popf cli push pop lahf mov cld (bad) call or cwtl mov inc add mov (bad) jg mov negl out call mov je pushl ljmp mov xchg xchg xchg js pushf repz ss (bad) (bad) decl and mov in arpl add jecxz push jb xchg pop in ljmp push std add xchg in cli inc xor push dec fwait add std jecxz shrb mov mov sbb out rorb xchg (bad) imul sti aas clc jo inc in xchg lcall test ja rclb (bad) rolb ds jnp ja cld dec mov xchg push or and mov pop (bad) (bad) jmp hlt xor js or xchg leave xchg decl pop push inc push xor repnz mov inc cmp shrb jnp pop add ss (bad) (bad) pushl out ds xchg aad divl insl cmp sbb adc mov fcomip decl enter je pop push jmp aas loop ljmp inc ret (bad) jne pop loope cmp scas std lret and clc lods and es xor add push sahf sub test add incl mov std sbb push mov (bad) jg imul dec out add add xchg dec lcall (bad) call inc jo addl lcall xor (bad) nop mov (bad) (bad) jmp (bad) add jle lahf and jmp and gs stos mov mov (bad) (bad) (bad) incl push js sbb (bad) fildl pop cmp fwait sub mov fiadd dec mov les or pop inc mov (bad) (bad) lcall pop nop inc fucomi xchg mov enter push adc sbb adc dec stc out (bad) (bad) (bad) (bad) mov enter mov lcall insl fwait jo mov cld or test mov pop add stos jmp (bad) (bad) (bad) jge jno inc lods or sbb jb iret ja mov jl pop push pop inc stos sahf ljmp (bad) mov out sbbl lods xchg dec (bad) mov repnz sub fucomip xchg in (bad) jg repz adc xorl bound adc push sbb fwait (bad) (bad) (bad) jns mov and adc repnz in test (bad) (bad) call adc nop dec xchg inc scas jne add ljmp sbb bound mov outsb cltd cmp (bad) incl mov (bad) outsl imul pop cmp xchg xor mov imul xlat daa mov and movl pop std decl pop jmp xchg fidivrl cli stc (bad) and mov inc and pushl fisubr lret push push mov andb jmp adc test fcompl push mulb cmp (bad) mov fnop ret add pop stos sub jle lods subl decl push incl dec scas and cld pop incb dec push mov scas (bad) cmp (bad) cwtl and loope rcr mov jmp (bad) (bad) (bad) pushl sbb rol cmpsb sbb or dec cmp daa jle xor cmp or add xchg insb aad sub ljmp incl pusha jp mov jl add cs fisub pop dec mov lods (bad) (bad) (bad) (bad) cmp mov adcl xor sub xchg mov mov (bad) (bad) incl pop fdivs sahf stos pop mov ficom jge xchg (bad) insb ret jmp (bad) (bad) (bad) out es push int3 repnz repz dec mov jge cli sub ret or mov pop jl jl mov (bad) (bad) fidivl push cmp rolb push (bad) hlt mov pusha or push (bad) (bad) decl dec sbb cmpsb add mull mov mov call mov xadd lahf dec push ret mov fimul mov jno (bad) (bad) call nop fildll cli push or leave pop mov cs lcall incl hlt jle popa call cmpsl imul js (bad) mov sti stc (bad) (bad) (bad) lcall xor dec out (bad) arpl mov ljmp sub outsl push daa fwait adc and (bad) jmp push and xchg mov and std inc mov (bad) jmp pop jl scas outsb push push outsb enter xchg imul (bad) sbb cmpsb scas (bad) fistpl pusha mov in icebp dec loopne (bad) in push (bad) (bad) (bad) ljmp jb cltd in fildll inc nop fwait cli or mov aas xchg pop sbb outsl dec jecxz (bad) ljmp mov mov stos mov jmp nop mov add dec inc iret cld mov xchg mov sub mov call dec mov popf shl cmp pop xor mov sahf jo (bad) (bad) (bad) (bad) incl cmpsb shll jb xchg xchg mov and mov mov cmp add (bad) mov mov mov sub push iret add adc int int sbb (bad) (bad) (bad) pushl jg stos cwtl nop sbb mov xlat outsb adc enter outsl inc lahf test fldt ss (bad) incl xor aad fldt (bad) mov mull xchg (bad) cmp aas add xor add gs ret push popa ds loopne dec fs (bad) jmp lea add push std (bad) mov decl dec cmpb frstor lods jbe xor mov aam repz (bad) (bad) incl pop add or jg pop mov sub imul jp sbb (bad) decl push mov and into and mov stc sbb or inc sbb pop inc push pushf lods es in sub xchg mov mov jns sub loop cmpsl mov fbstp fcomi mov (bad) leave popf mov imul inc jmp dec jp (bad) adc ljmp repnz mov mov push jno xchg out jne arpl les fmull (bad) decl bound sub pop jbe pop xor test std jp cmpsb (bad) dec addb aaa mov sub loopne (bad) mov inc add push std (bad) call icebp loopne rcll push sbbl sbb inc rolb mov lret dec dec dec (bad) jmp dec (bad) aam out sub (bad) (bad) fistpll sti in pop mov and cmp jbe jmp jns call les (bad) push jns rcl pop imul xchg pushl mov (bad) mov (bad) or (bad) (bad) fistpll mov ret add xor popf repnz ficomp fisub jg (bad) fcos (bad) (bad) mov sbb pop outsb add inc jg inc lcall (bad) pop sar (bad) dec imul bnd jle mov test daa loop (bad) call mov sti js mov xchg scas repnz mov stc sub jecxz cmc lretw repnz test lcall (bad) (bad) ljmp clc cmp test imul shr lods push jecxz inc pop (bad) pushl out jge lods icebp pushf pop dec lcall (bad) (bad) fistpll xchg outsb fnstsw movsb rcrb int3 add mov lods (bad) (bad) lcall mov dec cmp lds lods pop cs mov pop push sbb ljmp xchg mov jo (bad) adc inc and push out (bad) ljmp mov sahf pop out xchg xor insl add lret rorb add (bad) cli lcall lds (bad) mov ds xchg test push mov pusha pop cmpl in out or add push inc pop movsb inc dec sbbl stos sbb imul out xorl and fild dec jl orl xchg daa add mov mov test sbb call out inc cli les add xchg push insb push ljmp sub stos out cli xchg cmp loope sarl pusha jle inc fucom in dec (bad) decl pop jnp jno lods mov cmp push (bad) lcall (bad) (bad) incl lock arpl (bad) mov xchg sub sub mov test (bad) in pop clc push add (bad) (bad) pushl inc push fs cmp out pusha fwait cmpsb add in and je ret mull adc inc pop add scas adc lcall pop cmp fildll loope pushf xlat mov mov hlt popa dec ljmp fimul in pop xchg outsl lahf outsl shrl (bad) (bad) (bad) fistpll lock les pop push outsl jecxz daa cmpb cltd je push js (bad) clc in (bad) (bad) (bad) call and je cs add push (bad) int3 loopne jnp sub rorl aaa push jnp jne sar scas adc roll sbb sub mov test (bad) (bad) (bad) jnp xor push testb xchg mov mov pop push test loopne mov inc std call outsb cmpsb lret and mov frstor pop into outsb jecxz (bad) std (bad) (bad) (bad) call or add pop mov inc mov cmp dec adc (bad) (bad) (bad) call scas mov pushf xchg jecxz cwtl ds jno aaa out lea xor jnp aas and (bad) mov sub mov sbb ja pop xchg jb fwait xchg and (bad) (bad) (bad) inc push sbb adc mov inc mov in push test mov jb pop mov mov mov out es decl in pop jae (bad) (bad) (bad) ds adcl mov cs andb mov popf mov (bad) inc add incl mov cltd push jecxz testb out (bad) lcall ret and jmp aam xor ds lock cwtl push in inc xchg pop movsb push into (bad) fist (bad) (bad) incl (bad) stc out or add xor push mov (bad) jg popa mov add cmp and add lods push imul in adc (bad) (bad) call add imul inc xchg cli sbb jno inc xchg (bad) (bad) mov in mov adc mov fs jl xor clc outsb (bad) (bad) jnp leave outsb arpl jae dec call arpl out std mov or das clc (bad) jg scas jg fcompl adc inc sub jae mov pop xchg (bad) (bad) pushl imul repnz mov jle add loopne (bad) mov (bad) add orb enter pop pop fldcw (bad) incl cmp push fcoml jecxz sbb out cli lcall inc ja or xor push mov ret shrl outsl cltd idiv (bad) ljmp or (bad) jne jns push movsb xor das repz jbe test (bad) jg jmp lret or int or jae add popa or loopne push pop popf (bad) (bad) mov adc and fwait cmp xchg sbbl mov ja (bad) (bad) (bad) jmp out sub scas mov and xchg insb mov jmp lret push ljmp sub stc pop pop or loop ret adc test (bad) (bad) (bad) call leave iret mov and sub or test push pop or repnz mov mov icebp (bad) (bad) incl insl test clc movsl xor xchg pushf (bad) pusha rcrl das clc (bad) fbld clc ret dec (bad) cmc in pop stos and inc fisubr lock dec push pop xor mov or mov (bad) fldl mov adcl sti test rcrl (bad) or add inc outsl xor insl (bad) clc fldt dec lcall or jne jbe incl loope das mov cmpsb loopne,pn and cmp mov (bad) (bad) (bad) (bad) fiaddl sub outsl jge push jns pusha push notl cld icebp ljmp mov enter add pop jmp push pop push pushf cmpsb cld (bad) pushl sub mov pop aaa (bad) insl out xchg mov pop pop outsb cmc pop mov jg popa mov sbb dec into nop cmp (bad) (bad) (bad) (bad) call sarl aad sub mov push fdivrl in jmp mov sub or (bad) (bad) (bad) ljmp xor pop lea shr dec mov aaa outsb xor pop cwtl aas cltd dec in outsl cli (bad) call loope xchg (bad) dec add in and (bad) loope (bad) pushl fcoms out cmp fmuls mov aaa mov (bad) (bad) (bad) mov and daa cmp cli movsb cmpsl iret xor int lret lods dec cltd pop pop mov (bad) (bad) incl nop add (bad) push jne out fcmovnb das out pop or int3 or lods and lock mov cmpsl cmp xor (bad) je addl (bad) (bad) out ds sti sbb fisttp gs push jl fiaddl mov xchg repz pushl (bad) mov jo push and ss xor inc in sbb ljmp data16 dec and dec xor out xchg lret mov into fnop (bad) (bad) decl dec pushf or adc inc cmp mov mov pop mov dec stos int push pushl icebp push scas add fstpt and mov mov adc push dec cmp add enter in jl shr repz inc cmpsb mov ljmp and add jecxz lret jnp daa mov sbb jns sbb rcrl pop lcall (bad) (bad) decl cmp pop mov mov jne pop pusha add sub pop lret pushl test sahf loope fildl jmp mov add (bad) lcall push lock jecxz mov fisub mov outsb stos lret jno clc shl push mov sub fistp and (bad) (bad) (bad) mov out mov scas std data16 dec sub xchg xorl cmp (bad) jmp lahf lock fbstp adc xchg dec jmp fistp into das mov ljmp sbb xor lods or jp pop ljmp mov push jno (bad) or pop xchg fxch xorb dec fs pop hlt (bad) mov pop lods jo sahf fwait ror outsl mov call pop (bad) (bad) (bad) in push in cmpb and jae inc add movsb nop push loope jno jno popa adc (bad) (bad) lcall mov xor sbb add xchg lock movsb adc jae iret addl (bad) frstor es xlat dec pop add jb cmp bound mov (bad) (bad) (bad) call xchg enter push mov sub psubw mov ss xor imul (bad) (bad) aas fdivrs cli xchg dec xchg mov pop pushf xchg adc dec jmp addr16 pushl dec pushl cmpsl mov ds (bad) lret add jl fcmovu fidivr mov pushl insb jnp mov (bad) mov sub fldcw bound sub addb arpl add mov (bad) (bad) (bad) (bad) fldcw out push sub mov fdivrs xor and (bad) jnp (bad) neg dec inc (bad) imul mov out and or std fs dec movsb fst or jg add pop mov hlt clc xor (bad) decl pusha insl sub popf dec stc cmpsb int fisttp mov dec leave repnz cmp (bad) sar (bad) jmp insl add or stos and lcall imul mov adc add jo leave stos pop idiv mov lcall arpl dec mov or out mov stos push fisttpl (bad) call hlt cltd pop push fs mov xor dec (bad) (bad) (bad) (bad) cmp push dec or inc fcoms test and scas mov jo dec cmp (bad) ljmp fadds pop and add and (bad) xor pop (bad) (bad) (bad) incl lret test daa fdivs push (bad) in mov pushf pop xor inc push addl sub inc inc xor sub (bad) (bad) (bad) decl sbb mov lret sbb mov pop xchg mov xchg fstps (bad) decl rclb xlat dec mov push stos cmp jmp iret push cmp ss outsb imul sti inc imul repnz scas sarl push mov lock pushl std push pop mov or xchg mov rcll aas pop push xor (bad) (bad) (bad) call popf add pusha lahf stos pop xor stos jmp inc out ret xor or mov fwait cli jmp sbbl out adc sbb call aam xor jns or pop cs lret xchg cli mov test lahf in push push (bad) lcall jge mov push daa sub mov or cmp push sbb (bad) (bad) incl cmp xor mov daa fldcw pop pop push sbb (bad) (bad) lcall mov scas aad stos loopne mov movb cmpsb cmp xor dec lock mov fstps add mov lahf ja mov dec push inc mov (bad) (bad) decl jb frstor jo inc xchg push cmpsl xchg add adc rorl out (bad) xchg fcos (bad) (bad) push push movsb mov inc add cmpsb sub or fcmovbe adc mov imul dec jmp call xchg xor mov (bad) ljmp in mov cld test popa fildll sub and test arpl lret xchg (bad) (bad) mov sbb andb andl cmp loop stos push push rorl (bad) jmp rcll xchg ja jge dec je lea inc push sbb lret pop sub mov (bad) (bad) push enter xchg rclb pop fstpl xchg dec les clc mov arpl cmp mov mov test insl loop aas sti nop and xor aas dec push dec cmp mov (bad) (bad) pushl out (bad) mov lret lds test dec int3 mov and cmc xor (bad) lcall sub dec sub cmp xchg pop mov dec inc (bad) (bad) (bad) cmp hlt shrl cmp add call mov lds pop jo pushl and cmp or (bad) (bad) incl jmp jecxz pop (bad) out lods xor inc scas xchg decl adc mov push scas or movsb xchg (bad) pushl rclb leave das jl inc roll (bad) call mov sub cs sbb lret loop (bad) sbb adc cwtl push (bad) (bad) (bad) decl adc xchg sbb jnp enter stos inc inc adc int3 (bad) add jnp (bad) (bad) (bad) ljmp out mov out dec add std bound ss scas cmp xor cmp cmp (bad) (bad) (bad) (bad) (bad) ss rolb cmpsl pop xorl inc xor mov lahf push jns mov add add jge int in xchg cmp cld mov (bad) (bad) decl mov (bad) scas (bad) outsb pop gs outsb daa sub mov mov call cld mov aas mov jbe (bad) mov xor fdivr (bad) (bad) jg into lcall adc xor cmpl fdivl mov or decb je sbb jg mov push mov jle (bad) in test sub mov bound call lahf scas movsl inc push in je inc (bad) (bad) decl (bad) in sub idivb and mov and shll (bad) (bad) (bad) ljmp inc inc stc sbb jmp xor into es sub jle test jbe push fs mov stc fiadd xchg fdivl adc les add jg ds in sub or xchg loop pushf clc mov xor mov fcmove sti push and ljmp jg jl push stos in inc and (bad) (bad) pushl cmp adc and ljmp adcl (bad) (bad) jge mov clc sub sbb out (bad) pop jg outsl push (bad) (bad) jmp mov das push add out jno cmpsb decb mov fwait and (bad) decl sub daa dec adc adc pop icebp ljmp mov dec pop negl push mov test das cltd idivb xlat jg jmp cmpsl popa gs repz sti or fld and jb (bad) (bad) jg sbb (bad) dec or sarl mov icebp cmp aad xor jbe fild jle les int3 jmp sub xlat fwait add lcall scas dec je cltd sub cli xlat (bad) (bad) (bad) lcall lods pop mov mov xlat fistpll out adc jbe outsl dec inc daa fidiv mov bound bound int imull lock aaa fnstenv (bad) lcall cmpsl dec lods into sti jae xchg js dec rcrb (bad) jbe sbb (bad) call notl push aaa inc mov xor push (bad) ljmp mov inc mov sub add mov and sbb (bad) (bad) fstpt fs lock das ds push mov pop mov mov insb andl fild aas leave fldl sbb xchg cmpb lods int3 xchg jo inc jle (bad) dec nop mov xchg push push mov out and daa subl outsl push mov xchg xchg loop or lods (bad) (bad) lcall xchg push movsl aaa push sub imul mov lods pop aad repz cld (bad) call fisub dec sbbl (bad) xchg or jns nop or push cmp adc pop outsb sbb enter (bad) (bad) decl push loopne mov lret aad add jb jmp push xor aam and fsubrp jo cmp jne push jmp movsb mov orl (bad) (bad) (bad) decl cmpsl dec loopne lcall iret jge (bad) dec jb arpl or movsl nop adc jecxz fwait pop or add xor mov adc (bad) mov clc fldl2e jl sti mov clc push (bad) cld int inc ret call incl pop pop push sub push mov add scas dec stos pushf mov incl fcompl add mov jle into xchg cmp movsb movsl (bad) mov sub addb inc in dec mov add movsb outsb pusha push dec mov mov ds pop inc dec sahf dec pop dec xlat prefetchwt1 clc ret loop (bad) jp (bad) (bad) (bad) pushl aas ret xor lret inc das aad (bad) xor inc mov (bad) decl or negb add jne test push fsubl outsb lcall cmpsb imul sbb push enter (bad) (bad) pushl sahf or push icebp sbb xor mov cmpl jp inc xcrypt-cfb cmpsl mov test cwtl adc add (bad) (bad) call ret flds and sbb sti mov adcb fs xor dec push sbb (bad) (bad) pushl inc or mov sub push bound shufps int3 pushf insl imul mov outsb push movntq std out aaa iret cs cli decl sub ss lods lock decl (bad) call movsl shr pop mov xchg sub cmc add sbb mov and (bad) (bad) call int cmp into sbb adcl sarb leave adc mov ret mov out hlt xor jne mov pop push xchg mov sbb (bad) fnstsw jge out mov loop push pop mov jb jl cmp fistl sub cmpsb sti dec mov push push int adc scas out mov (bad) (bad) cmp pop cli out cmp lahf mov jle and ja and sar dec xchg ljmp loopne add pop pop rcrl sub lcall (bad) (bad) (bad) (bad) cld les xchg pop and mov mov xchg cwtl push mov inc mov insb add stos lcall or mov lcall out inc (bad) (bad) (bad) jmp sub js jge je nop and adc xchg test int3 mov inc or fsubl push int3 (bad) jg mov aam imul outsb xchg jecxz (bad) jmp or fwait mov or bound push mov inc sub out jmp int3 jl sbb mov es and js js (bad) jmp sub cld (bad) mov sbb jg cmpsb (bad) je (bad) mov or mov loope xchg dec mov lods add push add or pop ja sbb add mov push shrb or outsb push jns lahf push pop aaa std stos dec mov cmpl (bad) call mov (bad) int3 (bad) mov xchg aaa xchg sbb and xor leave ret xchg into out ss cmp (bad) (bad) decl (bad) and movsl test dec fistpll fisttpl mov int cmp (bad) (bad) fimull psadbw popf push popa loope sti fnsave mov add repz or lret mov pop aam add adc dec cmp push push or xchg (bad) (bad) ljmp in mov push cli loop jle and or cmp push ljmp in cmp mov jp shll lds lock (bad) (bad) in lods push movsb push aad pop jmp nop sbb lcall dec stos inc add (bad) (bad) jmp rolb push test ja fs lahf cmp lret mov test imul pop and mov xchg jae loope out push (bad) (bad) in push mov dec dec adc cmp or (bad) jg (bad) loop push rorb pop sub ret pop rcrl fwait xchg (bad) (bad) (bad) ljmp inc sarb or mov lret in cli es xchg and cmpsb popa or sbb leave dec jb fcompl (bad) pushl inc lock movb and scas call fstpt fwait and sub mov xchg mov inc jno data16 inc xor pop loop (bad) pushf jmp xor jl ds xchg jl add mov lahf outsl imul mov cmpsl (bad) into (bad) mov sbbb dec adc inc sbb enter jnp mov (bad) jmp loop jne fcmovnb loope (bad) gs xor adc cli or adc fcomip (bad) cli lcall mov xor cli dec xchg dec rcrb (bad) (bad) decl cmpsb inc lods call lock xlat push mov mov aam inc (bad) (bad) inc outsl pop mov mov addr16 lods pop sahf xchg mov sub (bad) call (bad) jmp xchg sbbb outsl jb push sbb sti (bad) leave rorl (bad) (bad) out push pop js fucompp pop out in push aas xchg fstl (bad) cmp sbbl sbbl xchg or jnp jg movsb adc ljmp mov aad clc lretw push mov arpl ljmp push test xchg push push push sbb (bad) lcall inc jg nop (bad) mov test arpl mov inc shlb dec xchg test dec jo sbb and cli (bad) cld insb iret add or xchg movsb rcrb (bad) jg mov gs sub mov shlb adc inc cmp (bad) mov xlat imul jg or xor hlt jnp mov (bad) decl and in hlt mov cmp daa pop sahf pop adc xchg xchg pop decl mov mov xor sahf sar ljmp in outsl xchg pop mov add (bad) cmpsb add (bad) push (bad) (bad) (bad) call pusha push mov repz call mov (bad) jecxz aaa cmc imul adc out cmp pop loopne jmp cltd jne cmp push pop jmp leave adcb cmp loopne and in push mov aam jle ds (bad) (bad) (bad) (bad) jmp int sub (bad) push and push jge test jne loope jle sbb ljmp das cs or je or push dec jno or dec mov xor mov (bad) testb ds inc cmp call (bad) lcall lds out dec mov lea mov or pushf lret adc sub cld xor sbb or fwait xchg sub (bad) out es mov fidivr jb mov std lcall cmp jmp add mov mov fisubl or dec shll lahf dec leave dec lods mov mov jg ds push das mov lcall repz sar (bad) decl rol jns cmp fs mov bound jl add std jbe (bad) cmpsl shrb jo xor test (bad) (bad) mov jno push xchg rorl mov pop xlat fs and push adc xadd mov inc dec ja call jl pop cmp jmp xchg xor leave int mov test (bad) jg xchg mov mov sub (bad) jns aam (bad) jo mov and xchg or imull xor inc jne mov (bad) lcall push in popf data16 mov cmp xchg jnp jne stos jo cld cmp cli (bad) push adc (bad) (bad) incl fdivp rcll aas fdivrs cmpsl or add cmp mov (bad) (bad) (bad) call cmp inc mov scas cmc xor add (bad) adc pop push lds jno das add pop xor sbb pop (bad) popf icebp incl push push cmpsl jo xlat or mov lcall mov loope lahf movhps mov pushf jl popf xor (bad) (bad) (bad) (bad) mov push add subl stos lret cwtl xchg pushf repz adc mov fimull and inc les (bad) jg ds lret ret aaa push or int3 sbb adcl push push xchg cltd pop jecxz (bad) (bad) decl mov imul jmp sub mov cmp insb mov pop fdivrp lcall sub sbb into xor std sahf mov jg pop add out mov pop enter jb loop daa repnz ret sub loope enter pop pop sub (bad) cmpsb icebp (bad) jmp into dec mov int3 addl (bad) (bad) (bad) call inc cmp push int3 ret jp push mov and loop (bad) (bad) cmp pop pop aam sub arpl decl sbb (bad) (bad) (bad) mov ljmp jae jno cmp (bad) cmc loopne test cmp push push call inc jnp jb add pop (bad) xlat int3 rcrb (bad) (bad) dec mov xor (bad) (bad) mov pop jae std mov fiaddl popf xchg mov adc mov (bad) xor test in lods (bad) lcall fisub and lret push (bad) mov (bad) (bad) (bad) (bad) (bad) fidivr jle push ret inc xchg fwait xor dec push stos mov mov push les pop cmp (bad) ljmp popl pop and sub cmpl push (bad) xor enter sub (bad) cli push mov loop push adc push aam loope mov mov inc shl dec insl (bad) (bad) lcall dec aaa fildl add jcxz jne pushf (bad) in cmpsb movsl adc fcomip pushl xor sbb fdivp pop jle push or add jo (bad) (bad) (bad) incl dec dec jnp or das and out repnz das push cmp (bad) stc cltd (bad) loop inc pusha out (bad) (bad) inc adc cltd (bad) push jo lret mov loopne mov imul sub icebp ja (bad) decl dec lods pop in int3 inc cmp inc push xchg movsl rcrb add (bad) (bad) (bad) (bad) cmp dec pop das mov data16 inc sub and xchg jb cmp decl adc test mov inc lods lahf aas sub lcall dec out adc pop xlat in es sbb daa (bad) sbb add sarb (bad) (bad) (bad) mov pop add adc jno pop xor fs mov dec or (bad) xor (bad) out cmp push out ja int sub (bad) (bad) decl insb and xor cmc mov movsb mov mov mov in jg or in jl and mov insb push or inc push (bad) std fucomip repnz pop or xor mov out lds or or xor mov pop aas pop push dec mov (bad) (bad) (bad) decl (bad) lods (bad) cmp fist inc push push rcrb in imul cmc and (bad) cld ficomp (bad) (bad) jg and or in aaa cmp lahf add nop sub or push cmc jecxz mov (bad) incl pop pushf icebp test sbb and mov rdpmc pushf xlat cmc fwait push pop sub dec xchg (bad) testl sub add aam dec pop popa xchg sbbl (bad) (bad) (bad) ljmp (bad) dec out inc or pop mov and orb out cmpb sarb cmp (bad) (bad) stc or lret push ljmp pop int mov dec dec mov and test (bad) data16 (bad) (bad) (bad) mov adc in pop (bad) test inc lea sub shl xchg loope push (bad) (bad) mov rcl aam cwtl cmp jg jp dec and adc pop incb cltd xchg test incl add aad sub inc push inc test (bad) (bad) (bad) ljmp daa and cmp add loopne xorl fiaddl push aaa cmp adc (bad) (bad) (bad) clc aaa sub xchg xlat sbb pop inc mov sbb mov sarb push and xchg mov push xchg xor adc lcall fs or (bad) (bad) call add push neg mov pusha dec incb (bad) or xchg (bad) (bad) call lea sbb shl or lahf push sarl dec sbb movsb xchg cmp add add push jbe fisubrl pop test mov call pop xor idiv outsl mov pop lret icebp hlt test cld (bad) (bad) fistpll or jle outsb std test sti mov loope sub xchg cwtl ljmp jo jp inc adc inc sbb (bad) pop (bad) fisubr and sbb in and pop inc aad enter jns xor movsb mov mov dec jmp mov and or xor add (bad) ljmp scas cmp lds int3 in adcl out adc jnp (bad) (bad) (bad) (bad) jl dec mov cmp pusha xchg hlt push push imul (bad) stos fwait adc sbb add cmpsl add loope imul ljmp mov push iret ljmp and jmp jecxz cmp ljmp out fimull xchg push (bad) pop icebp cltd or dec push outsb shll sub ja mov stos sahf das in push pop fstl (bad) (bad) incl (bad) jge idivl (bad) aad jno cwtl out mov sbb loopne lock loop pop repz adc fstpl imull cmp dec or inc inc in and aas fsubs cs adc pop fmulp pop (bad) roll xchg je lods xchg popa jecxz (bad) in into mov (bad) call push or jnp mov sbb daa or dec xchg nop pop jnp,pt push xchg push int (bad) (bad) (bad) (bad) cmp jae xor repnz sbb pop pop gs fiadd adc movsb mov inc lcall call shrl dec (bad) sub (bad) (bad) (bad) call gs adc or call sub scas cmp xchg (bad) (bad) (bad) (bad) cli pop into fsts add cmpsb jmp stos cltd cld ds mov xor pop add outsb (bad) (bad) jg pusha push xchg gs or icebp outsl jo push mov fisubrl mov (bad) push or rclb mov test out rorl push subb (bad) (bad) jmp decl sub loope (bad) push mov ja imul insl mov pop sbb inc imul lsl (bad) (bad) lcall mul dec add movsb aaa sbb pop lea xor xchg scas cwtl sbb mov fsubrl pop adc repnz (bad) (bad) ljmp icebp pop scas in inc lcall xchg dec faddl (bad) int mov (bad) das push repnz es jbe out sti jae,pt or pop mov scas push nop incb scas push std (bad) pushl jo and mov pop (bad) pop lods pop cmp cmp ss jns sar (bad) fcomip or xor test in xor cs sahf pop push push jle (bad) call inc aad lods mov bound es lods xchg dec mov (bad) pop lahf mov out xchg ds mov jbe jae cmp xchg stc (bad) pop roll jmp push mov scas scas push in in cmp cmpsl aad mov mov sbb (bad) jmp into test in scas xlat (bad) mov cli inc fnstenv jp rcrl adc mov inc jecxz pop and or iret mov mov inc test sahf pushf mov mov stos mov mov ds (bad) lock mov (bad) les mov and (bad) aad xor rcrl sbb xchg iret rcll (bad) pushl (bad) pop or add cmp push adc adc std xchg adc scas movsb std (bad) (bad) inc into sub mov xchg loop es dec repz (bad) sbb jg or mov mov and decl jb sahf xchg and stc call cli jmp inc sbb lea test (bad) lcall into jb cmpsb je (bad) gs push inc insb popa cwtl pop into js daa lds adcl mov cmp (bad) (bad) mov hlt xchg inc add xchg lcall jns shrl scas sarl mov imul xchg fmull lods jg cmp (bad) (bad) push mov xor cltd and (bad) (bad) (bad) pushl (bad) or pop mov jns (bad) or or sbb adc sarl inc pop xor mov scas les mov shrl mov (bad) jb xchg loope clc jle (bad) (bad) lcall test je lcall jb nop fildl cs scas jo in sbb cmp add pop loope dec mov (bad) (bad) ljmp sub movsl xchg xchg data16 mov subb add (bad) data16 std ljmp lea fsubl mov push stos (bad) (bad) lcall mov mov (bad) jns sbb jp or test call aaa aam push xor popa mov insl mov push pop lret sbb iret sub mov repz pushl in (bad) (bad) (bad) (bad) (bad) stc pop mov xor push or cli inc test jnp jns push sbb xchg (bad) (bad) (bad) jmp pop xchg push dec jl adc jns (bad) fs out (bad) push (bad) loopne,pt jno cltd insl leave (bad) (bad) decl iret cwtl popa add xchg xchg add push and jecxz jl (bad) (bad) (bad) jmp ret andnps add outsb adc bound (bad) fisttp add call enter (bad) fbld or mov mov jne fwait cltd lods mov push push test (bad) (bad) (bad) decl or push stos push push test dec xlat loop stos cld cmc das aas inc ds push mov sbb (bad) (bad) call imul jmp loop,pn hlt in jge frstor incb adc push inc sarb adc mov xor insl std (bad) (bad) js insl mov lret mov je insb adc pop adc mov (bad) jg ds fwait das lret loop (bad) test sub mov or cli inc mov (bad) jg sub jp mov and mov fisubrl pop fbstp out (bad) (bad) (bad) decl jnp sbb push jnp jp andl stos adc (bad) ds fdivr decl (bad) jmp cmpsb lods les setne cmp icebp add add pop call (bad) jns cmpsl cli cmp ja test or negb pop fidiv lret aam and negb xor scas bound cmp stos or (bad) (bad) call jo iret add xchg and add jns shrl mov mov ss jmp mov sbb mov mov (bad) lcall test pop in loope xor mov mov jnp loope mov je scas adc (bad) mov sbb imul jg,pn stos loop xor add pop leave fucomp (bad) (bad) aas pop pop sub push sub mov ret jl mov das rclb pop xchg dec or jbe cwtl aad sub sub std bound nop dec (bad) data16 inc adc xchg push pop adc dec xor (bad) pop in pop cli (bad) (bad) (bad) ljmp mov test cmp aaa adc dec lods insl rcll pop test (bad) (bad) call ss divb lock mov sbb outsb mov pop pusha inc ret out repnz cmp cmc (bad) lcall je scas and testl (bad) loope out jbe xchg (bad) incl fnsave dec dec pop push mov (bad) (bad) (bad) mov cmpsl mov in mov jne push les stos push scas xchg sti push call icebp mov clc es rcr cmp (bad) jmp cwtl insl inc out xor orl mov cmp add mov fwait mov movsb jo sub adc arpl mov popa cmp (bad) (bad) (bad) jmp and pop ja enter cmp outsb test xchg xor inc mov enter (bad) (bad) (bad) decl add add ror xor int3 and xchg (bad) (bad) pushl test push rorb scas or loope dec inc or dec push lds (bad) fwait (bad) ror or (bad) sahf js ja sbb cli fs mov mov aaa mov (bad) (bad) jmp rcrb mov iret mov mov cs xor ljmp data16 outsb sub push jb push lret mov (bad) (bad) (bad) (bad) decl sub sbb xchg stos inc (bad) (bad) xchg mov pop and jne (bad) (bad) jg adc mov out sbb push ret jge xchg loop lods test (bad) (bad) (bad) call jmp and sub dec jno pop mov mov mov arpl lcall leave loopne and (bad) sub mov fidivrl dec addr16 sub cmp jmp cmp xchg and add pop pop loop cmc movsl sbb pop jmp fucomip int3 shrd (bad) (bad) decl in sub xchg jmp fiaddl cmp mov outsl (bad) xchg jbe (bad) decl xchg popa push or adc mov mov arpl (bad) lcall cwtl adc fstp gs add (bad) pop js rcll lods dec decl cli sub adc sbb push mov sahf test sub loopne cli jbe insb cmc sub sahf add jne and xchg ljmp shll cmp push bound adc incl icebp mov push mov (bad) (bad) (bad) (bad) std addr16 scas ss pop and ss sbb (bad) mov imul cld jmp or (bad) (bad) (bad) incl push (bad) jl xchg pop or push inc das or pop pop mov rclb mov (bad) jns (bad) jno xor pop das test loope rorl mov out jp mov push pop cmpsb (bad) incl cmp dec repz fisub (bad) decl add sub pop ret mov das ret jno xor xor hlt push push cli stc mov daa (bad) (bad) call sbb mov call pop dec inc push (bad) and orb (bad) (bad) lcall int push hlt jns loop sahf cld jecxz (bad) divb (bad) (bad) arpl out cmp sbb xchg (bad) lcall dec leave xlat mov or push imul push clc and sbb mov iret clc iret or push mov pusha sti test frstor idiv (bad) (bad) decl loopne sbb xlat (bad) cmpl cmp sti mov lods test (bad) ljmp (bad) lcall cmpsl sbb cmp cmp mov (bad) std push sbb or cli xchg xor cwtl lcall push imul cli call push fs (bad) (bad) (bad) jmp sbb jg sub jmp inc imulb add xchg sbb in out sbb (bad) (bad) (bad) inc ss adcl mov jecxz mov sub jns test mov (bad) (bad) incl in mov shrb mov out mov adc cmp (bad) (bad) (bad) (bad) jmp inc insl jne pusha xor xchg popa jmp mov into lcall xor pushl push or and xchg outsb or ret sbb jo repnz (bad) (bad) pushl mov sbb in test and lods sbb push lahf gs (bad) (bad) (bad) (bad) jp pop out jae mov jmp rcrl out jmp cmpb loope call ds test jbe nop push movsb add aas clc scas pop mov aaa std jmp mov aaa sahf repz insb sti out pop mov inc sar (bad) (bad) ljmp push lods loopne cmp loopne lock pop nop dec jecxz in jbe fwait xlat lds xchg (bad) (bad) pushl mov dec mov jae sub xlat mov bound mov mov and or jno test mov (bad) (bad) mov (bad) lea (bad) (bad) dec and lock or sti jno adcl das xor and movsl push xor outsb xchg adc lret mov inc mov fstl ds cmpsb cmp (bad) mov or jo dec nop (bad) (bad) mov (bad) (bad) (bad) decl adc test (bad) cmc inc mov mov dec cmpsb cmp xchg lret pop push push push mov mov stos adc (bad) (bad) (bad) (bad) jge fwait enter push ficoml fwait stos xchg mov inc xor lods dec dec bound ljmp test sarb test jns or (bad) (bad) ljmp mov inc mov jns mov push loopne (bad) jne call xor ret mov stc pop lret (bad) lcall in cmp pop int3 out pop push movsb xchg mov cli ret les lcall mov ret fwait std mov movsb (bad) (bad) pushl test mov pushf sbb push and push pusha mov es sti pop push pop and jge gs cld (bad) ljmp push pop push nop jp sbb (bad) adc lock jnp push (bad) (bad) (bad) ljmp xchg mov stos imul add (bad) lods scas pop mov stos push sub xor out mov (bad) (bad) jmp lret jb sub lcall aad sbb (bad) mov dec or push mov int3 lods loope xor mov scas rcll ret lret (bad) (bad) (bad) dec xor rcr xchg (bad) mov inc insb jmp push push pop mov addr16 mov inc and (bad) (bad) (bad) (bad) (bad) jmp sbb add jg imul add (bad) test mov test mov jae mov xor and sbb dec xchg xchg repz mov popf subb xor jle rclb out cmp (bad) (bad) jmp or sub and in call out add jg pop movsb (bad) incl dec lret std dec sbb cld data16 loopne je ror push mov call mov jo lret jle inc mov pop dec das (bad) int3 inc js dec xor mov add loop fwait fwait and pop (bad) (bad) (bad) dec fisub repnz fimul sbb jle (bad) add mov xchg (bad) (bad) decl loop xchg lahf xorl pop inc pop inc (bad) mov jns sbb xchg es pop bnd mov mov mov decl imul adc (bad) nop xor loopne fld cmp cli sub adc jmp repz enter jae adc or lahf ficomp dec ljmp mov incl sbb fiaddl mov cmp push idiv int lock jmp int3 (bad) push (bad) (bad) (bad) (bad) jnp pusha ja and mov xchg xchg inc xchg cmp ret int push out sbb scas xchg mov pop aad sub das mov pop outsb cmp and push loopne mov mov sar mov mov insb test out clc mov xor mov out ret cs jae dec jp dec sub (bad) incl icebp sbb lcall sub sub push lods int (bad) ljmp push xchg dec xor or cmp lahf sbb (bad) (bad) (bad) call and adc mov inc fwait cmp scas jecxz dec (bad) (bad) pop cltd jno pop mov mov add (bad) (bad) jmp les inc movsl daa or (bad) inc mov push push outsb ja sbb cmp (bad) jmp pop jle jbe sbb xchg subb cli mov sub shlb fstpt jg pop and sub push gs xchg ffree stos pop test scas and das (bad) (bad) ljmp dec mov mov scas loop ror adc gs mov out xchg (bad) (bad) ljmp jg pop sbb sarb jnp ret mov ljmp mov jo aaa dec (bad) fisubrl mov or ljmp in jg xchg mov lret mov mov cld icebp (bad) leave cmp test add jl popa mov push (bad) lahf inc ja cli cs out and ss jne ljmp mov outsl pushl sar pop push out or enter push xchg (bad) push loope or decl push lds mov adc lds mov and lea ljmp sbb sub mov cs jo pop (bad) (bad) (bad) (bad) fisubrl dec lcall mov push cli xchg inc sub in cwtl std push ja ds adc repnz popf pop add mov test in daa push jno icebp cmp std setle int nop add call bound and cltd push and lcall cmp sbb std pop adc arpl mov cmpsl test fisubrl cmp (bad) jg inc pop mov bound out dec stc push outsl mov jge sar or cmc stos ret xchg pop or gs jmp adc cmp xor (bad) (bad) lcall mull xchg add or push negb mov xchg cmp stos testb pushl dec sub ret hlt ja push mov jmp pusha mov adc fsubrl dec mov (bad) sbb push mov jp je ljmp cli inc in add ds lods xor adc mov in nop pop int3 stos xchg or std fidivrl sub into inc mov ljmp lret in inc jg repnz jge dec pop mov ret cltd mov add (bad) (bad) ljmp lret add fcompl and (bad) adc int push sahf scas jae fiadd std mov push repnz inc pop pusha mov mov inc pusha jmp pop push sub (bad) (bad) lcall sarl add inc sbb mov lds decb pop inc xorl clc pop push (bad) or xchg imul push stos (bad) (bad) mov push push sub std inc xchg push cmp jmp jecxz adc xchg jb aaa sbbl mov jnp add pop pop cmpsl arpl mov iret inc dec (bad) (bad) (bad) incl (bad) popa jg xchg dec pushf inc mov data16 mov sub nop notl (bad) mov js mov sti dec sbb incl imul sub ja xlat cmc enter fistpll push sub xor xlat pop push repz (bad) pushl mov cltd clc jmp sbb ret mov cmpl pop jno (bad) cmp adc inc fstpt cmp (bad) (bad) fcomip imul adc sub test add sub test jp pop cmp rorl cmpsl neg aaa mov inc scas pop ret cmp dec cli (bad) or nop mov test pminsw das out xor inc popf adc pop xor pusha ds mov adc (bad) (bad) ljmp shll add lods addr16 mov cmp push dec lahf xor out test dec mov or sbb cmp inc xor and fwait ljmp mov ds test fisubrl dec push daa add jp (bad) (bad) (bad) aas jg jmp scas mov call lcall notb (bad) (bad) incl test cmp leave xchg xchg aas or adc pushl or pop cmpsl jnp pop add mov into nop add pop pop loope (bad) dec push scas andl mov sbb cmpsb or jnp roll pop xor push popl mov inc push es and pop jg pop sbb (bad) (bad) (bad) (bad) call pusha (bad) psubd cwtl jae adc repnz std xchg push add mov add ljmp push repnz pusha mov lret pop js cmp xchg int3 outsl and lret (bad) (bad) (bad) call dec (bad) mov jae lret inc mov popa cltd into ret xchg lret loop inc cmp hlt icebp subb int3 aaa hlt jae mov jp xchg adc std push jbe insl pushf cltd repnz aaa scas dec test (bad) call loopne cmp cld jge jl cmp (bad) scas popf mov push inc ja (bad) (bad) (bad) decl popf and push loope inc loop sbb mov push xchg push push aas inc (bad) or cmc or dec pop dec scas scas ds push int repz call add add push (bad) (bad) (bad) decl add pop push lods test fimul mov cmp mov aad (bad) ljmp fsubs fisubrl jp pop ret loop,pt pop cwtl (bad) loopne ds pop fs test (bad) (bad) mov sbb add inc and push cli dec mov sbb mov lret (bad) (bad) in jbe das mov insb push xor or test lods mov jns fdivrp lcall inc mov daa mov (bad) into mov xor (bad) pushl in push sbb cwtl jne inc xchg in into push xchg jmp (bad) (bad) mov fdiv bnd loopne push dec sbb in (bad) mov loope or pop test cld (bad) jmp test mov lods push daa dec add fstl cli (bad) (bad) (bad) call sbb adc sbb mov rorl mov pushl pop sti gs test xchg imulb jno inc xlat jno jl dec dec xor fidivr or cmp pushf in (bad) (bad) (bad) inc mov push ret lret cs mov cld lds inc imul pop data16 fiaddl (bad) pushl sbb jno pusha mov add jle inc dec dec mov test mov pop ljmp inc jmp push mov adc hlt (bad) (bad) jmp out frstor in pop mov mov lods cwtl sub or mov dec mov mov xchg xchg jp and cmp arpl (bad) (bad) call (bad) xlat in inc push out mov mov mov mov xchg jp (bad) (bad) ljmp pop dec sbb aam xchg jl xchg sbb roll shlb ds mov sbb cmp dec loope addr16 mov cli call push cmp jbe dec and dec xor jo loope cltd cli sub dec ljmp out (bad) xchg xor into adc (bad) (bad) std fadds ret mov loop ret push cli push arpl xchg jbe xchg outsb (bad) (bad) (bad) out dec into jmp out xchg fucomp add in ret out push (bad) cli ss pop cmp (bad) incl icebp je jmp lock inc imul fsubs jne loopne sub mov aam out push pop sub int mov insb push push sub sub (bad) (bad) incl push repnz mov sbb adc aaa adc (bad) (bad) (bad) mov aaa jb push adc fbld sub push adc rorl sbb loope ds (bad) (bad) (bad) jmp out aam pop inc and push fdiv mov mov mov andl clc xchg cmc (bad) in jmp pop mov ret test enter (bad) (bad) fbstp push aad adc idivl xor add dec ljmp mov cmp push mov sbb mov insl pop in sbb jbe (bad) (bad) (bad) call aaa (bad) jns sbb xchg pop sbb adc add fsts (bad) jg ret mov scas sbb inc inc out or pop lds repnz dec jae pop mov scas ja mov addr16 pop cld xchg mov es (bad) (bad) call cmc ds (bad) in push test cmpsl pop dec xchg call aam dec fldt (bad) (bad) ljmp pop lods pop push shrb push roll cmp dec inc ret (bad) (bad) (bad) call lahf xchg mov pop dec cmp mov mov adc push or adc (bad) mov add arpl add icebp sub lahf jg,pt dec add fdivp sub lods cmp iret mov icebp xchg pop (bad) and cmp inc sarl jg stos xor xor (bad) ljmp (bad) (bad) mov add and das xchg sti aas pop or mov loop aad in xchg cmp lods in sahf (bad) incl dec mov mov cmp mov (bad) call loopne sub xchg loopne scas adc adc loop aam inc es xchg ret inc push (bad) (bad) (bad) fild jns mov pop cli insb xchg push outsb inc test sbb aaa (bad) xor push inc (bad) out and jecxz lcall (bad) mov fsubrs sbb add mov lock add and call loope (bad) (bad) (bad) (bad) sbb jmp inc dec fchs movsl sti jnp mov sub aad push sbb (bad) das cs cmp decl and fldcw fnstcw lret loopne cmp and jns and (bad) call sbbl jno mov adc or xchg mov (bad) mov imul sbb push xorl pop ja je sti dec and (bad) (bad) decl mov cmpsb push out inc mul cmp mov and dec scas ljmp sarb mov fsubl bound leave rcll hlt (bad) (bad) (bad) cmp sub fldt xorps mov pop loopne xchg lods push dec or jmp or jp cmp adc jmp pop (bad) (bad) (bad) (bad) mov cmp ds add sub dec lea outsl lret test ljmp push pop dec sti mov sti push mov push fimull jae aam mov mov jno lock popf mov xchg insl jmp add dec (bad) (bad) mov or add (bad) mov aas sahf fildll ja jmp mov fcoml mov fnstcw xchg sub (bad) jnp out mov and aam adc ds (bad) (bad) jg gs cmp cmc aad mov test dec test out (bad) call mov lea dec imul das in adcl leave (bad) (bad) jg mov mov pop jecxz mov (bad) rolb clc test movl (bad) (bad) (bad) (bad) fdivr bound shll pop sbb aas mov fnstcw push mov mov ja scas std mov dec je add jno sbb outsb pop mov rcrl inc insb push lret or add outsl sbb outsb (bad) and lcall push push add test or push cmp imull lahf sarb lock cmp adc and push adc push imul jns dec cmc mov call (bad) inc (bad) (bad) mov lret push (bad) int pop sti inc pushf loope jmp je addr16 jle decl (bad) ljmp pop addr16 and loop pop jne xchg gs add out ret dec (bad) (bad) (bad) decl cld loopne xorb sbb fisttp mov scas scas gs pusha test (bad) (bad) decl mov imul cltd push jb cmpl andl (bad) (bad) jg or and aad ret jg mov imul ja or shr int3 inc jno cli int3 cld mov jmp ret in ss adc ret and aad int (bad) ljmp jo jno xchg jle jbe scas in sbb inc lahf mov (bad) incl outsb pusha xor xor xor xchg pop jbe push lods (bad) sub mov decl nop pop pop xchg popa sub test and dec jns pusha pop or nop mov add icebp xchg scas xchg and (bad) xlat lret (bad) (bad) (bad) pushl out pop inc scas or push lea inc insb sbb pcmpeqw loopne sti jo (bad) ljmp fiadd mov int mov scas add in (bad) xor sbb inc (bad) (bad) (bad) call je mov sahf inc xchg pop scas fwait das (bad) imul dec roll and jno (bad) (bad) (bad) (bad) std arpl cmpsl jge push movsb into xor cmpb xorb sbb lods dec sub sarb out cmp or cmp pop push xor call mov loope je test jns sbb xchg pop lcall mov sbb xchg lcall push adc test xlat (bad) (bad) (bad) sti cs mov mov fnstenv aam movsl mov sbb jnp icebp mov cmc and jmp clc mov mov mov fwait xchg mov lcall jb push sahf xchg pop (bad) push cmc xlat out bound (bad) movsl out jmp (bad) (bad) pushl fs rclb in pop (bad) fucom cmp aaa jmp aas popf adc (bad) inc xchg cwtl mov pop sbb rolb ret into mov ljmp movsb test jmp js orl leave or sub dec je jae sbb jl loopne xchg jbe sar ja xchg mov into add negl mov pop int3 ret sahf mov mov jge and jg push and inc xchg enter mov pop adc mov pop insl jle loopne pusha jl and (bad) (bad) ljmp or movsb xchg or mov adc (bad) in xchg jg les pop insl into fcoml (bad) (bad) (bad) (bad) fdiv mov sub jno jo aaa aaa das lar jecxz shrb dec mov out ret fbstp jmp pop jb lret out pop mov lahf or lahf leave fdivs fstps adc pop jo sub test dec (bad) mov in mov dec sbb fcomps lret sbb sar cmp (bad) cmpsb mov lret out (bad) sar call sarb jle sub cli mov push out pushf imul outsl cli (bad) call inc sub xlat cld call fimul add bound add (bad) (bad) incl push cmp push mov mov mov push xchg in xlat scas mov jb xchg cmc ret decb lcall stc push out push mov push sub (bad) fbld add push mov xchg inc lret (bad) decl (bad) mov lea loop dec and lret scas orl push (bad) (bad) (bad) jmp xor lcall loopne addb adc cmpnltps int sbb xchg test mov dec arpl data16 call (bad) hlt aad rclb int3 addr16 dec jmp std fildll push popf inc out xchg in adc (bad) mov xor decl jmp rorl jg jmp aaa loopne int (bad) (bad) lcall mov and inc addb stc cmp (bad) lcall fwait push fldt dec and dec push lock jns outsb (bad) (bad) (bad) (bad) mov cmpsb adc jg xor (bad) leave mov jae out mov sbb sti iret xlat addr16 (bad) (bad) jle jmp mov movsl adc sbb lods xchg shl dec pusha leave les pop sahf (bad) sbb (bad) inc int3 push in lret xor push jb xchg xorb mov stos jp mov cmpsl outsb xchg ljmp pop jae bound sub dec (bad) (bad) (bad) decl repz xchg pop js xchg cmp fimull or mov add (bad) decl pop lcall pop pushaw pusha add hlt (bad) lcall into jg imul fwait adc push hlt pop (bad) pushl fsubl or fcoml stc pop in inc xchg pop mov movsl mov dec mov adc cs out mov sub sbb (bad) jmp mov dec outsl cmp adc xor (bad) (bad) lcall xchg stos out outsb dec push inc fchs add mov rcll sub movsl movsl (bad) cmp rorb sub mov rorl and call add inc pop push add push pop mov call fisttp inc sti mov out dec and inc xchg adc jp dec dec lea rolb jecxz std (bad) lcall jmp sub lods mov inc test lret bound dec adc (bad) (bad) (bad) cmp mov xchg fwait mov (bad) movsl jo in mov xchg sbb push ret add mov iret stc lock (bad) lcall dec mov repz icebp mov jae aad push test or cmp pop pop adcl loopne movq ljmp sub or outsb loop adc mov int3 mov mov rorb (bad) mov inc jle (bad) (bad) jmp sbb cmp push popl icebp adc fdivrs loopne addr16 (bad) call add dec ds and dec sbb cwtl std pop dec inc xor (bad) (bad) decl sbb (bad) adc rcl pop enter inc lret je pop outsb xor cmp xchg test mov (bad) incl push pop cmpsb (bad) cmc and call outsb jecxz adc mov cs or sub inc pop icebp sub inc hlt dec fldl (bad) (bad) (bad) lcall cmp ljmp or fs lret cwtl jl cmp (bad) (bad) (bad) call push clc sub push xor inc pop cltd lahf into das xor and jp cld std (bad) (bad) inc incb (bad) iret lods test ja and lea rcrl scas fmul nop mov mov xchg mov je lock jb mov mov out cmpsl fistp cmp mov jbe adc push sahf sub scas jmp (bad) push sub (bad) icebp ljmp test inc (bad) out fsubl popa or push rorl lret add bound lea imul imul (bad) jo and stos push sarl test adc and arpl (bad) (bad) pushl imul cmp push xchg (bad) call xchg push dec mov pop hlt jg das cli inc or push popa xchg pop popf push mov adc out clc dec (bad) decl outsb lods pusha in mov sbb push pop lahf enter pushl cld xor dec xor nop add cs add sahf in iret insb mov lcall add or adc aam nop (bad) movsb cmpsl jbe je pop jp insl xlat jp (bad) lcall in sarl mov push push mov or call scas aas mov arpl push lcall aam out sub (bad) (bad) ljmp roll test jb stc adc pop loope pop sub cmp pop mov jnp and pop loopne rolb out (bad) adcb addr16 movl and call and mov insb cmp jg dec cmp jne ret stc das cwtl mov mov or repz (bad) inc pop inc pop (bad) and cmp dec rep fnstcw cli mov xor xor push add mov in push mull push inc cli pop jo jl ds fistp mov or fcomip (bad) pushl fs popf call xchg mov lea out mov lds mov sub (bad) cmp mov inc lcall cld pop leave dec int3 lcall cltd cmc cmp push cld incl int xchg nop in ja lcall push loopne sbb (bad) (bad) sti (bad) (bad) jmp imul daa push cmpsb xor or or pop cs scas xor dec fsubl add std (bad) (bad) jg rolb inc xor adc xchg repnz in (bad) push cmp mov dec xor cmp (bad) (bad) cmp mov fcoms xor (bad) (bad) (bad) (bad) fisttpl insb adc xor and aam mov rol sbb test cmc (bad) in movsl sub mov aad push movsb xchg push sbb sarb jg ds inc stc repnz adc das cmp pushl pop cwtl loop mov aaa mov data16 (bad) xor (bad) incl push mul pop and je notb repnz incl dec inc test xor (bad) nop lds push cltd out (bad) (bad) inc adc scas hlt out xchg out inc push inc popa cmc pop out push (bad) ljmp cli popf dec cltd push xchg movsb pop rorl jmp scas jge ffreep inc jo aaa push fs shlb (bad) lcall mov es enter popf in lret cmpsl pop pusha sahf hlt (bad) (bad) (bad) (bad) ljmp mov adc sti jecxz pop rclb nop or int popa loop out sbb and push push sbb xor imul pop data16 test jno dec mov add les rcll jmp fcos lcall ds hlt inc (bad) jnp pop shr sbb (bad) (bad) (bad) decl test enter xor mov or pop and mov (bad) (bad) (bad) incl mov clc leave sub loope inc push shll pop adc xor insl mov (bad) (bad) (bad) incl xor test je sub xchg mov push push jns bound mov push leave test (bad) mov (bad) mov mov sbb ss pop (bad) js lret mov ret adc jns clc decl xchg hlt push xor push mov adc (bad) decl ds pop xor (bad) popa (bad) pop dec jl cmpsl inc and (bad) (bad) jg mov or cld lret lcall sbb fxch mov (bad) (bad) (bad) pushl cmp mov outsl addr16 sbb mov ror xchg sub fcmovbe lods dec adc (bad) call imul nop push pop xlat lret push add mov cld xchg xchg cmp jg (bad) jg insb pushf out loopne outsl add mov test pushf jnp (bad) (bad) (bad) pushl mov xchg xchg ror leave (bad) lock fwait (bad) mov mov (bad) lcall cld xor lods dec fistl jp aad xchg jg mov mov (bad) (bad) pushl push loop sbb xchg or fldcw gs fistpl dec test (bad) int (bad) (bad) (bad) mov (bad) push cmp xor lds es push loop lret and in or lcall sahf sahf jne jl mov mov test repnz add (bad) ljmp subl cwtl (bad) sbb (bad) add adc push fsubs aas jmp mov mov push sbb jbe mov pop hlt push (bad) (bad) call dec aad ds imul out cmpsl out and scas jo cmp incl movl and gs loopne cmp (bad) (bad) (bad) (bad) jle sub sbb push out mov lds ret out push push enter fs (bad) (bad) jmp xchg sbb addr16 aam sub mov fsubrs adc push popa (bad) (bad) (bad) jmp pop push mov mov (bad) jnp in pop mov repnz dec push and stos cld imul incb mov in das lret mov ljmp dec out add lcall test mov xchg and (bad) (bad) (bad) fmul in aas inc mov adc adc loopne mov push lea (bad) inc mov push (bad) (bad) (bad) (bad) (bad) mov mov xchg xchg gs cld into mov xchg push pop fwait xchg loope and adc ljmp mov xchg insb in data16 xchg push nop stos and dec pop mov mov adc (bad) lods inc ljmp aas fiadd (bad) (bad) (bad) pushl xchg sbb push lods dec sub mov mov or add daa popa pushf bound (bad) lcall dec out jo shl lock xor cltd imul loopne incl out sbb ret mov cmpsb jge mov push and (bad) call es pop es adc rorb data16 insl and (bad) cmc rcrb jbe (bad) icebp lcall adc outsb (bad) je sbb jg shll mov push into faddl dec jae idivb mov (bad) (bad) jmp pop inc or loop in lcall cmc fimul ret std lahf pushf imul (bad) (bad) (bad) jmp iret push sar jp cli popa xor repnz testb xor je (bad) (bad) (bad) out jmp mov leave jbe loopne aad in icebp jnp lahf iret push mov sbb iret in sub incl imul (bad) mov sub add movsl sub mov (bad) bndstx aas pusha pop dec adc mov mov mov out cmpsb pop or mov cmpsb jnp and (bad) js mov call add inc dec repz push mov lret and cmp xchg mov arpl jo xor push loopne cmpsl add (bad) (bad) (bad) call daa fucomi cli push dec mov mov inc push test adc jb popf testl jmp aad pusha mov fxrstor sub pop dec jge push decl out ret inc movsb adc jns mov xchg fimul (bad) incl mov icebp mov cmpsl lidtl jg (bad) cmc aad add nop (bad) ljmp test dec mov xchg or dec cmpsl insl xchg fdivrl ds (bad) lcall xchg cmp scas pop incb jle pop mov (bad) mov jns dec mov push adc dec xlat dec les push mov xchg (bad) (bad) (bad) (bad) jg loope adc sbb push cmp inc xchg stos xor mov mov mov sahf cmpsb inc ret mov xor add lahf repnz xlat ret inc xchg adc out adc orl jb mov les and sbb add sbb add (bad) (bad) (bad) jnp jp sub ss lret xchg mov or int aaa call mov jl or pushl add in lret outsb fwait les push xor aas cmp sbbl out in fsubp push lock (bad) (bad) out sti cmp cwtl push xchg xchg rcl ret xor mov and lcall gs mov movsb ljmp pushf dec pop sbbb fsts (bad) (bad) (bad) jg ficom cmp pop jae repz and mov dec out dec sbb (bad) (bad) pushl (bad) and push adc out scas jmp add jl jae call stc je or ljmp rolb xor loopne lods insl or sbb js push cmp (bad) (bad) (bad) ljmp shrl cs sbb outsl (bad) xor lods mov ds scas jmp cmp dec sarl (bad) lcall adc cli repnz and ds ds hlt sub pusha adc mov sub (bad) decl mov ret fisubrl fwait fwait inc xor movsb xchg xchg add (bad) (bad) (bad) incl lahf icebp xor mov or and ljmp sub or (bad) (bad) push dec push jecxz or cld mov mov push pusha (bad) mov jg iret (bad) sbb imul test pop and xor xchg jmp add ds and mov repz sbb inc iret lcall (bad) sbb mov jle mov or leave adc dec (bad) (bad) js cmpsl outsl jge push repnz add xlat xor xchg repz (bad) (bad) ljmp sub incl jle sbb (bad) adc push fwait out es (bad) (bad) (bad) (bad) clc leave pop mov gs fmull adc xlat nop cs pop jns outsb lods stos jno (bad) (bad) (bad) inc mov mov in mov leave popf mov inc dec (bad) ret je add std (bad) (bad) lcall popf ficompl mov or inc pop test (bad) xor aaa lret cld aad push xor daa insb bound fiaddl sbb inc stos mov (bad) (bad) mov mov xchg xor push js xchg add dec cld cmp sbb insb fwait enter dec (bad) (bad) (bad) pushl bound xor repnz insl jge sbb (bad) fnop mov into lds popa (bad) jno scas ljmp scas mov push stos shl inc in or bound (bad) (bad) (bad) (bad) ljmp mov sbb jle je inc data16 or (bad) jb and push sti (bad) (bad) lea rcr dec jae jb sahf mov xor (bad) cld (bad) (bad) (bad) jg xor pop or xchg or sarl and inc sub (bad) ja mov jmp pusha fcoms cmpsl pop std ret (bad) jg mov sub jae dec add push pop add mov or inc add scas jge stos into ret mov xchg or pop sahf addr16 outsb test (bad) incl xlat insl out mov (bad) mov mov mov xchg sbb aam cs cmpsb cmp das hlt mov sahf insl pop dec fldcw loop and mov adc (bad) (bad) fbstp inc xchg mov mov adc pop es les (bad) (bad) pushl daa shr adc mov inc test in pop and dec lss sub (bad) incl cld pop mov adc xor stc sub xchg adc lock into lods data16 (bad) (bad) (bad) (bad) cmp pushf shrl add scas mov xor popa mov out inc cwtl (bad) (bad) (bad) (bad) stc cltd sahf push xchg mov inc pop cltd daa jb and xor xchg lret xor push xchg or (bad) (bad) cmp in or loop fistl and dec cmp mov mov or push hlt mov addr16 mov in adcb jae or mov xchg lret and mov enter xor inc decl clc imul and fidivl (bad) (bad) (bad) (bad) jp repz mov or popl inc es inc outsl ss iret add (bad) (bad) decl fs into lahf and and mov mov (bad) (bad) mov dec mov fwait push insb lds popf xchg out add (bad) (bad) in incl jge pop cltd cmp jle fdiv (bad) imul clc mov xchg ds and (bad) pushl cmp sbb xchg loope in and and mov test loope mov (bad) incl mov enter jb mov and stc out add jo inc out or (bad) (bad) (bad) mov mov ja ficompl ret xchg out enter jne or adc incl push cmc fsubs pop in pop fcmovnbe repnz clc (bad) jmp std pop (bad) cltd notb out pop xor pop xchg mov jg ficom mov (bad) lds add nop bound in fcmovu cwtl xchg pop out je pop push dec mov (bad) jmp sub pushf add repz pop mov cmp ljmp scas push (bad) (bad) (bad) call inc aaa sbb add in lds popa fs aaa les lret pop xchg cmp (bad) (bad) decl test in or dec pop call xchg cmp shlb sub out lcall xchg jns pop fsubrl mov in pop outsl cs mov mov outsl mov scas ret aad aad or dec adc test mov scas jmp hlt add xchg sbb (bad) (bad) call sub int mov adc int dec ret adc mov data16 jle repz (bad) faddl pop int3 xchg push and xor popa dec fistpll and stc int mov stc (bad) (bad) (bad) lcall (bad) (bad) es jg push cmp int3 cld mov fstpl mov das mov rclb adc (bad) (bad) jmp stc xchg and int (bad) cmp test lds push adc push jmp daa push push cld pushl xor inc dec xchg cld jmp arpl mov sub mov and lods pop xchg lret (bad) lcall mov inc mov (bad) sbb jae cmp pop mov (bad) lcall rclb xchg push scas xchg neg outsb cmpsb add ret sbb rcl stos fisubr stc lcall jmp cli pushf mov fmull loope lods icebp adc js inc push dec (bad) (bad) (bad) (bad) jl mov (bad) jne dec dec lods js jo clc pop jns cmp or pop call dec loope xchg cld push into inc nop lds sbb sbb sahf mov xchg cs or (bad) (bad) pushl stos dec adc gs mov pop cs lret fisttp repnz inc (bad) (bad) (bad) call pop lods mov call les daa sbb out mov jmp add and pop cld call sbb jne push push add and inc inc xchg mov lcall adc fsubl fdivs lock mov inc rorl mov push (bad) lcall or (bad) test mov popf das test cmp (bad) mov lock je fadds aad js aas mov mov mov ret ds push enter out fisttpll inc clc fbld (bad) popw out sbb adc pop lock pop adc xor cltd das loope (bad) call push and nop push test pushf lds popf sub inc mov dec xor pop repz outsl jp push test jno xor (bad) sub cmp aam mov inc push (bad) incl add mov sub sbb cltd jne imul push (bad) (bad) decl gs and xchg iret xor xor addr16 (bad) incl xchg lea inc shll clc popf movsb fcom rorl (bad) (bad) std xor fmuls fldcw mov pavgw push mov mov inc add pop shll test addr16 sbb (bad) (bad) (bad) fistpll jo rcrb sub hlt jge lods cmc push cmp clc fs fcmovnb add lods aaa cmp insl xlat incb mov dec dec and mov aaa (bad) (bad) (bad) decl es sti mov cld adc ud1 pop lcall lcall testl fadd sub pop xchg dec sub icebp pop cmpsb push sub sbb (bad) (bad) (bad) jnp cmp mov into sub popa push das mov out xchg jne adcl call lret xchg and xlat adc add fidivr cmp xor sub sti (bad) mov xchg push shrd xor pop rcr mov jmp push sub mov sub sbb mov mov (bad) (bad) ljmp imul cmp mov mov aaa adc and sbb lock cld push lahf xor mov (bad) (bad) ljmp push ljmp cmp xchg insl cmp inc and pop pop push inc popa cld mov xchg es xor sbb (bad) (bad) jg mov push push xor or mov (bad) cmp clc (bad) (bad) (bad) push mov ficompl mov sahf mov mov test sbb xchg decl mov cmc jbe in push add (bad) (bad) jmp mov gs xchg sub fistl and out jmp fwait mov push lret xor cmp divl movsl dec repnz dec out loop xor push rorl fisubr mov lret (bad) xor or inc jmp or js fist mov pop data16 mov sbb aas and jns (bad) (bad) mov sub lret add repz dec (bad) xorb jne nopl loopne xchg (bad) (bad) inc and jns (bad) out imull rorb daa scas clc sub icebp insb pop push fdivr scas cli (bad) cli sbb xor push ds movsb clc xchg cmpsl cmpsb cmp mov (bad) (bad) lcall test xchg sbb aad (bad) call in (bad) xchg inc dec scas and loope push int3 pop cmc (bad) jmp (bad) (bad) into jecxz dec lods dec xchg out and mov xchg fisubrl fwait ret data16 popa aad les jle vmovaps lcall stos (bad) (bad) mov arpl inc push leave pop cmc lcall js incl xchg add mov pop pop cld xor test mov pop mov pop loop mov add daa test jmp (bad) call ret (bad) (bad) (bad) outsb xchg mov cli jb mov or and lcall addr16 es mov mov dec rorb (bad) call mov cmp loope mov insl and test jge cs imul (bad) (bad) (bad) incl pusha aad int inc hlt addl cmp stos outsl rclb pop pop fcompl jne lods mov (bad) and pop pop inc inc movsl pop lock jg,pt (bad) jg lcall ljmp lods dec push xchg stos push mov es (bad) (bad) ljmp sub xor ficompl lret push xor mov mov mov mov (bad) (bad) fsubl dec shlb stos or jmp jl outsb dec adc call ds mov stos and jp sbb lcall cs mov inc ror jae cmpsb lock mov add (bad) scas mov clc lret add pop pop ljmp jbe aam cmp xchg cmc ljmp xchg pusha dec jge aad inc in push mov adc (bad) (bad) decl (bad) pusha pop es sarl mov add xchg popa mov (bad) jns mov shlb lock mov xchg (bad) fs jae loope add sub and andl xor sbb ljmp mov test sub mov pop flds imul adc xor test or lock jge push sub dec popf (bad) (bad) call pop lea mov add inc enter mov jmp xchg (bad) decl repz jbe sbb ret mov out imul pop cmpsb mov jmp adc (bad) (bad) (bad) call push dec mov and jno jb mov add sub (bad) (bad) pushl mov or bound int3 mov mov lret in xor cmp mov fimul cmpsl imul aad dec push dec sbbb mov inc out mov push out xchg vcvtdq2pd add jnp,pt add test dec mov test mov jmp ds xchg pop dec ds mov loop sub aam out cmp movsl rorb insb mov or mov mov imul cmp xor stos sbb scas cmp jne fsubrs (bad) (bad) decl lods or (bad) inc mov xchg mov in mov xchg leave stos dec jge (bad) (bad) (bad) call jg mov mov fwait dec scas fcoms mov call fimul fbstp push push xchg dec xlat pop mov mov (bad) xor stc dec iret or aaa (bad) xor test (bad) (bad) lcall icebp mov push sbb mov pop jbe xchg fisttpll sub (bad) (bad) jg (bad) dec call ss cs js frstor aam inc dec or or mov ljmp ret mov mov cmp scas mov imul shll scas jo inc push add mov (bad) stc pusha sbb sbb cltd imul mov movsl rcrb cmpsb cmpsb fisttpl (bad) (bad) (bad) aas adc mov jo (bad) nop ss sub cltd jge mov xor (bad) pushl repz ss insl xor inc int cwtl cmp shld mov sub xchg mov mov jo pop rcrl cmp adc lcall and rorl or arpl iret (bad) (bad) (bad) ljmp sti add dec sar out outsl pop out adc lods xor push (bad) (bad) (bad) (bad) jmp int sarb in cmc repnz scas (bad) mov mov inc mov (bad) mov (bad) (bad) mov in fldcw dec (bad) sub xchg (bad) lcall mov cmp ret mov int3 xor iret cwtl (bad) (bad) (bad) (bad) (bad) ja les adc jne dec sahf cmp imul mov insb jle and scas cli (bad) or imul sahf inc or (bad) (bad) (bad) cli in xorl dec dec or and (bad) (bad) mov ret or mov inc xor lahf sbb (bad) (bad) ljmp mov ja or jbe or xlat lret pop xchg add (bad) pushl fistpll adc dec out sti std enter push cmc mov pop pop add (bad) (bad) jmp or or cmpsw faddl dec rclb in jecxz jbe jecxz xchg cmp (bad) mov mov imul inc xchg pop and imull fwait dec int3 jl (bad) and movsb cmc (bad) out mov mov ds cld (bad) (bad) (bad) jg pop shlb sbb jg mov mov sbb adc outsb clc (bad) call fdiv test int js jmp jae sbb outsl mov dec xchg (bad) (bad) incl cmpsb sahf enter dec inc dec testl lds (bad) jg decl sub sbb dec cmp mov lea stos std arpl (bad) (bad) (bad) aas repnz xchg out adc inc xchg inc notb mov call fsubrp sub push inc popf and mov (bad) in push call mov (bad) mov push popf cmpsb imul inc or push fwait mov stos cs lret inc xor jmp imul (bad) pushl mov (bad) xor stc cld or dec lret push jno push cmp cmp (bad) (bad) mov clc les xor cmp sbb insb jnp stos imul mov cs sub jl jge scas lret (bad) (bad) pushl ds mov push lret mov sub sti popf mov test imul inc adc outsl push nop rclb pop pop push adc or (bad) jmp lods mov (bad) push in inc push movsb cmpsl push (bad) pop pop push aad pushl (bad) fninit xchg lea ds nop jb pop repz imul xchg xchg fstps mov xchg jbe into push icebp jecxz enter dec mov fisub xchg (bad) (bad) (bad) call (bad) jne mov jg push add add dec in pop cs lods jmp (bad) ljmp jle outsb mov xchg in jl in decb cli xchg jp hlt movsl lcall fsubr inc testl (bad) fcomip mov pop jge dec mov xlat sub jo icebp outsl jne mov bound stc push hlt mov stos xchg pushf inc inc adc and call fabs cmp (bad) (bad) lcall or stos fcoml les popf inc fldcw int3 dec inc mov dec nop xor (bad) (bad) inc ror adc jbe dec add adc and xchg cmp fsubrs iret push in xlat jnp test (bad) jmp or xchg xchg sub sub ret insb loopne xchg jp je les pop (bad) pushl push xor inc mov sbb ljmp xchg (bad) (bad) incl mov mov repnz rolb sub in mov (bad) (bad) lcall int3 int jbe jb pop adcl cmp add out inc in xor idivl mov popf sti (bad) decl lock inc out aam (bad) mov push xor stos mulb das dec ds icebp mov (bad) (bad) (bad) decl sbb adc lods in mov xchg sbb test sbb into sub in xchg jle (bad) (bad) ljmp out jns pop repz scas cmpsb push js push xor add xor (bad) mov movsb inc lock cmp idivl (bad) xor enter dec loop (bad) mov or mov (bad) out sbb pop sub (bad) lcall xchg sub xchg sub cmp xchg popa jge adc xlat dec cmpsl (bad) (bad) (bad) jmp xlat insl or mov movsb sub xchg fiaddl jecxz ret xor (bad) (bad) mov jge fisubl bound sub mov cmp jbe add ljmp (bad) aaa in adc nop subl xor cwtl sbb fdivrl mov jmp mov pop popf xor push sbb cmpsl loope dec fisttp add scas ss and lret dec pop (bad) (bad) lcall adc sub jle jge xchg xor adc push test ljmp jb mov inc jl dec xor int cwtl fstl inc push inc (bad) mov enter (bad) (bad) call push cmpsl psubd repz xchg jmp pop sbb mov fstl test and cmc std ljmp test cmp call adc ficom jg inc ds nop in data16 (bad) and inc lds call ja jno (bad) adc in mov push mov fcomip stos ds dec movsl push lods sub lcall jg cmp dec jne fnstenv or add ds nop enter test xchg inc dec inc call push pop enter xor outsl mov mov pop pop (bad) ljmp rcrb push pop inc (bad) in lret dec shll jns inc xor jbe (bad) (bad) (bad) fbstp sbb mov icebp gs scas cld jbe je add ss push std dec sbb mov add push fnstsw ljmp mov xchg add xor and and mov dec xor (bad) (bad) (bad) jmp inc xchg jno stc inc sub xor jno adc cltd jns clts jle (bad) (bad) (bad) decl sub adc das push and or movsl or out gs xor adc xchg test popf mov cwtl sbb inc mov pusha (bad) (bad) (bad) jmp cmpsl push bound (bad) cwtl push dec push dec mov cmp push and mov cld (bad) (bad) ljmp es aad or or xchg add add (bad) (bad) call xor clc xchg (bad) jae jmp cltd outsl mov cs mov lds out and (bad) call adc pop js ds imul pushf adc and or or mov addr16 fnstcw sbb fsubr pop xchg dec xchg ja cli adc pop pop mov mov rcrl mov sti sub ds pushf out cmc dec call loope xchg sub (bad) cmp (bad) (bad) (bad) mov adc mov push push sub rcrl mov push (bad) jg pushl stos jae sbb insl dec ja aad adc cli and fxch adc fwait (bad) pushl setle gs adc dec cmc pop jns or pop (bad) (bad) (bad) (bad) fist test xchg sbb mov xchg push std fmull inc sbb cmc scas imul fimul mov (bad) (bad) dec sahf icebp add mov dec ljmp push mov enter (bad) (bad) ljmp clc cwtl fcoml js fwait cli in inc and mov sbb int3 mov popf jnp xchg cmpsl pop (bad) jg call push or (bad) dec cmp mov cmc mov outsb jne or (bad) (bad) jmp sub sbb push aam mov rcll sbb repz inc mov push mov ljmp inc mov xor xor inc push sub insb xor (bad) (bad) (bad) push fwait sbb xor and clc rolb data16 jp int3 outsl add add cli (bad) (bad) ljmp pusha adc test cmp mov push mov push xor stc lea cmpl pop popa cld xor arpl inc mov adc jns ret mov int clc mov mov sbb mov jns je dec sbb lahf push adc dec test push xchg sti xchg fildll add xor ss pusha (bad) call pop mov sar arpl inc sub xor stos push lahf xor cmp mov jmp sbb addr16 and mov (bad) mov es push cltd aam push negl push sub jmp (bad) (bad) (bad) pushl inc dec adc imul aaa xor sub nop pop push push (bad) (bad) (bad) decl push arpl in and xor shlb xchg and (bad) (bad) push sbbl adc push ret pop jbe and lods shll lcall mov in in and push imull xor fdivrl outsb pop fwait pop (bad) (bad) pushl cs add lcall test sub mov sub clc jg mov dec inc add lods pop jne jae nop mov adc mov (bad) ljmp mov inc mov das add (bad) mov in dec pusha or (bad) (bad) decl or inc popa jg xlat rorb movsb or in pop mov rcr fucomi (bad) lcall or (bad) jb out rorb scas hlt mov dec insl mov jo cmc test clc xchg into fidivl jmp dec mov (bad) ljmp and shrl clc and push sub and cs lea call ja (bad) xor fwait jbe sub out xchg xlat pop repnz rcrl iret int3 aaa cld and (bad) decl push out cmp enter and loopne sbb adc jmp mov test test xor pop (bad) (bad) (bad) call (bad) pusha fs imul cwtl cltd mov mov mov xlat pushl (bad) incl ss mov cmp sahf test shl (bad) ret nop pop xor sahf inc push (bad) (bad) (bad) inc in int sahf xor jl hlt daa mov sbb mov addr16 push (bad) (bad) jmp pop fdivrl movd into jg add scas sub bound cltd dec daa xor leave mov ret fld idivl mov push arpl sub mov (bad) mov cmp fwait lcall xor sub mov cmpsl sub mov call and out cmp insl inc fdivr je stc and cmp arpl jp push pusha aad cmp push mov inc nop enter dec dec inc jne (bad) (bad) lcall pusha loop jnp sbb sub and xchg idivb sub fadds (bad) call xor and in aad push dec add sbb cli loop cwtl jg (bad) (bad) (bad) (bad) fstp (bad) jne mov pop mov mov lea or stos in lahf popa or scas mov (bad) aas sub imul xchg adc bound call sub sbb dec (bad) (bad) (bad) out push popf sub ficompl pop lods (bad) push xchg mov adc xor (bad) (bad) pushl dec sub gs push jno into fdivrs pop adc out inc sbb or pop xchg test imul jge jbe sub (bad) (bad) fisttp (bad) rcrb xchg or pop push mov add or sub dec xchg mov clc mov adc xchg lcall (bad) dec xchg fst pop lods push pusha and add pop shrl xchg and mov sti pop xor add ljmp mov imul or mov (bad) (bad) stos dec mov mov dec aad jmp mov jmp stc push lods pop gs xchg mov js mull (bad) (bad) (bad) ljmp cmp mov test or lret sbb dec stos movl (bad) (bad) aas inc add push dec mov sub pop push xchg cltd stos mov lods mov (bad) pushl insb test adc or lods out fmull pushf inc sbb fwait push pop mov mov pop data16 adc xchg push enter xor sub mov cmp sbbl into xor (bad) (bad) (bad) out and pop mov (bad) sahf sahf mov (bad) push pop lods test pushf push jp jae adc clc add add ret add aad cli (bad) mov repnz pop mov scas inc insb icebp push jl repz enter daa cltd xchg xlat xlat cmp lret hlt cmp stos ljmp xchg push inc (bad) push mov add enter popa pop jne ds (bad) fdivr lcall mov aaa addr16 mov xchg (bad) leave nop repnz mov (bad) ljmp int3 sub or cmp test cmpsb loope test in inc ffreep jl pop (bad) (bad) (bad) (bad) fcoml in push push mov mov (bad) and lret imul rcll loope inc fwait xchg mov or andb cli jg push movsb imul jne outsb hlt inc dec jo (bad) (bad) (bad) fidiv and stc mov inc roll pop dec push out ret in (bad) (bad) (bad) push pop sbb bound pop mov jne and es xchg xchg dec jne adc (bad) (bad) (bad) stc insl jne neg inc icebp cltd dec xor lea shrl sub insl push jle movsb xchg (bad) (bad) (bad) (bad) stc rcll or or mov leave mov aad jbe mov cmp mov (bad) pushl std cli jne dec dec scas xor push inc adc mov sub mov (bad) jg (bad) out cmp and add inc push and add mov lea inc adc push inc out inc bnd lods pop or dec sub ljmp out adc push dec mov shr xor jg push shl dec mov (bad) call icebp and les aad push sbb sub test scas mov dec ds push jnp cmp jb jp scas pop pop and ja (bad) jge sbb orl (bad) (bad) (bad) lcall cmpsl in xor cmpsl pop bound mov fucomi mov add (bad) (bad) incl bound cmpsl mov mov out data16 mov mov (bad) (bad) call mov add (bad) clc and (bad) (bad) mov mov adc add mov pop cmp movsb mov xor xor js mov test jmp jns pushl cld jns jle jns pushf add shll mov paddsw lret clc (bad) pushl ret fistl adc dec fadds mov pop or sub dec adc dec out dec mov (bad) ljmp out add leave fimul ret lret cmp cwtl loop add xor (bad) (bad) call rorl ret xchg sub movsb sti loop mov xor sbb mov js inc lods fs jle or loop dec inc xchg clc (bad) lcall push adc popf mov pop imul (bad) arpl in lock mov xchg ljmp lret mov (bad) (bad) ljmp mov and lods xor pusha mov fcomps es inc cmp xlat push push (bad) (bad) (bad) ljmp push je inc adc scas xlat lock jg mov movsl jl rol sbb cmpsb mov fldl in mov pop mov mov pusha jmp (bad) imul outsb mov jbe (bad) (bad) jge cltd test pop and inc jge aaa push es fildll inc stos xchg pop (bad) incl fidiv adc bound lods mov (bad) incl sub jb and call mov push sub cmp jno mov outsl icebp xchg (bad) (bad) (bad) jmp xor (bad) mov push jle mov add xor jbe mov iret cltd pop sbb (bad) cli mov jmp fstpt mov decl sub clc (bad) adc mov arpl lret lods lods and push das sbb int sub scas push ret mul mov xor cmp daa xor subl fimull or jmp dec lret xchg mov mov (bad) (bad) (bad) in push outsl push jbe es out mov inc cmp fisubrl out (bad) mov hlt push adc neg out dec in pop mov pop daa icebp add sar ljmp add adc mov sbbl aas cli (bad) decl pop push ficoml cmp repnz xor jge mov pushf and mov (bad) jb and (bad) mov xor (bad) (bad) mov (bad) xor push jecxz mov xchg sub xchg mov jmp cwtl jmp (bad) (bad) (bad) decl or (bad) outsl (bad) or ds adc cli sub cli insb (bad) (bad) (bad) (bad) cli (bad) xor nop cld sub loope push (bad) (bad) inc pop je enter cmp ss mov call sub sub or das jnp adc push dec jg mov scas adc pop icebp (bad) (bad) (bad) mov xchg pop cld adc dec mov popf nop inc cs nop pop repz mov cs out loop (bad) lcall pusha add xor and (bad) test out fnsave lock insb ficomp out lock aad jge sbb (bad) out and (bad) pop sbbl aas cltd cmp (bad) (bad) dec fs push cmpsb push dec add mov fidivr pop mov xlat push cld (bad) (bad) (bad) (bad) out jbe and and (bad) jnp insl cmpsl pop pop add sbb andl mov das add (bad) (bad) ljmp andb mov (bad) dec fstpt ss nop int add scas inc mov leave cmpsb mov jns fadd pushl data16 (bad) cmp mov (bad) (bad) incl lock mov xchg sub je sub sub and xor cld (bad) (bad) (bad) jmp out jecxz (bad) iret pushf test adc cmpsb cmpsl cmp (bad) push xor add mov aad (bad) call mov adc test sbb into in (bad) (bad) (bad) jg bound push cmp dec jp mov jmp adc stos xor mov dec jg movsb mov mov insl pop imulb push sub dec (bad) decl pop pusha xchg adc pushf dec pop cmpsb (bad) (bad) jmp xchg fbstp adc dec sbb sub test std in xchg icebp inc das cmp sbb xchg sub xlat inc or aam fcoms lcall push lods (bad) sbb inc and mov jbe cmp dec outsl addr16 mov push push inc mov mov stos cmp dec adc (bad) pushl std pop cmp mov push ret lret mov ret cmpsl pop xor pushl dec pop push lea sahf jne push xor (bad) incl insb cmp jb pop add mov cli push inc lock adc movsb cs sub dec (bad) or adc add (bad) inc inc mov xchg cwtl mov outsb cwtl test loopne push aaa addr16 pop sub adc decl adc mov dec cwtl stc stos add ja and jns lods (bad) (bad) (bad) decl lods push push cmp pop inc aad iret lods jno icebp cmp and mov dec add fwait push inc (bad) mov insb outsb test jmp dec cmp cmp dec pop sbb mov sub and mov xchg xchg in repz (bad) (bad) ljmp mov insb mov imul mov movsl or or dec (bad) (bad) fdivs ljmp test (bad) (bad) (bad) fistpll out fimul push push push jp inc mov dec push push cmp pop aas dec mov (bad) jg aad sbb sbb or fs ds add mov decl lock jne int ja or cltd push inc femms dec xchg lods ret outsl (bad) arpl (bad) (bad) jmp lds jo pop dec leave test lods (bad) iret sub lahf push in or (bad) (bad) jle adc insb push xchg lea sbb jp sbb sbb ret fnstsw and add mov loopne stos mov pushf test je aam mov inc mov push xchg and out or and fisubl push (bad) enter lds es add jae cmp test cmpsl test xchg test pop bound pushl jg lret mov ret add adc loop mov movsb (bad) mov arpl mov (bad) mov (bad) (bad) cli pop jge mov add pop aam cli mov and ds and and cmp (bad) (bad) (bad) ljmp fwait cmp xor mov decl inc mov (bad) (bad) call fcomi fcoms out inc sbb adc mov fild jl scas (bad) shr pusha add (bad) (bad) (bad) mov push sbb outsb lods pop sub xorb in (bad) fucomi setb add pop in fwait orl pop loopne repnz add add (bad) (bad) jmp jecxz cmpsl outsl add shl sbbl sbb add sbb sbb jecxz xchg pop scas cmc (bad) (bad) (bad) (bad) mov dec dec adc mov (bad) dec sbb shl imul mov scas pop leave pop pop hlt (bad) incl adc out aad xchg gs sub xchg add mov push loopne (bad) flds (bad) inc push cwtl and lcall jp mov jg and fldl mov jmp pop subb push jle loope push add dec mov ljmp cli mov adc divl jns cmpl xor (bad) mov scas cmp inc adc test (bad) mov fimull xorb xchg sar pushl mov aad inc xchg (bad) and and adc (bad) out adc jae movb loop inc in xchg (bad) pop cmc pop cld sub enter mov add xor movsl (bad) (bad) fcomip dec roll lret inc out stc movsb popf cmp test jg jl test and mov lods jbe sub lcall jp jbe pop lret xor loop cmpsb fdivl mov adc push mov (bad) dec sbb adc push in or (bad) mov divl mov pop xchg mov mov add xchg pop xor push xchg hlt shll cmp and push mov aad scas pop fcos pushl push int sub fadd and inc xchg inc test sub pop mov xor inc push jl pop cmp loopne push lods pop xchg or or repz mov mov xchg (bad) (bad) (bad) decl pop push and xchg sub and loopne xabort das xor xor mov pop jmp pop add (bad) (bad) jmp push mov in pop lcall test pop mov scas sub addr16 sbb lcall test inc cltd cmp iret lcall xlat or pop repnz imulb (bad) lcall jae shll dec test add mov je lods lahf sbb sub (bad) mov jno jnp inc or xlat xchg xchg xor test mov das push lcall lcall pop hlt adc jne jg pop jns lock fs sbb (bad) (bad) jns aam inc inc and cltd pop clc mov fiaddl movl (bad) enter call scas pop in push push js sub mull and pushf (bad) (bad) (bad) dec daa mov jns das add xor xor push push mov loopne out push int (bad) (bad) (bad) (bad) push adc sbb in or mov pop sub add ret jbe or (bad) dec fsub movsb pusha inc outsl rcl cmp (bad) adc adc leave mov mov inc (bad) ljmp jle xor (bad) (bad) mov jmp lods pusha insl aaa mov in int inc and orb xor call paddd (bad) (bad) cmp mov and jno lea cmp push push jb (bad) (bad) decl pop push iret fiadd aam push jge ss aas aad insl mov (bad) dec je cmp ds push xchg jmp idiv mov inc lock mov (bad) (bad) call jnp and lcall (bad) pop fwait and clc sahf fadd lcall (bad) ljmp (bad) ljmp dec rorb lret jo xchg jmp leave aas mov (bad) jmp (bad) xchg or lret push out fisubrl mov adc popf sbb xor xor pop (bad) (bad) (bad) (bad) sub mov add cmp clc mov loopne ret pop std xchg and adc lcall cmp mov push xchg mov nop mov xchg push push fs loopne pushl add stc inc jl rcll js sub call outsl mov pushf cltd das stc insb dec fild stos mov cld xchg push repnz (bad) (bad) call in daa mov add jns lods push (bad) or cmp int3 je push or mov nop (bad) cmp jmp push or pop fnop (bad) push adc cmp hlt mov pop and add clc mov or jp clc repz inc pushf sbb ljmp js lret (bad) call cmp or jb mov sub pushf scas add dec jae scas stc and jg (bad) (bad) (bad) (bad) jnp cmp inc inc and cmc test mov ror (bad) lods mull hlt dec push ljmp mov push iret and pop dec mov (bad) lcall mov incb push xor jns ss mov (bad) (bad) incl lret mov sbb fwait fwait inc dec jno push and pop imul cld (bad) in inc daa out dec dec jae pushf mov rclb out xchg (bad) lcall mov (bad) (bad) (bad) incl out imul pusha push (bad) adc mov test adc (bad) lcall call repz mov inc jp adc test (bad) call mov mov xor std pop ret icebp jne lret jns jmp (bad) incl popa sub xchg push mov test mov mov in mov adc (bad) mov xchg adc sub pop adc jnp xor add ds jae cmp cli mov adc ljmp lds call sub out lea in btc ja aam (bad) (bad) pushl mov xchg mov out or into push (bad) (bad) (bad) in push lods (bad) cwtl xor push cs loope fimull aad adc mov ja addr16 pusha or into add in (bad) and sbb pushl pcmpeqb jl inc movsl cmp mov mov ja (bad) (bad) incl inc jg imul xchg notl dec test jmp mov xor insl push add jb push (bad) (bad) (bad) lcall xchg pusha test mov imul loopne pop lahf push es (bad) (bad) (bad) jmp jmp cli lock aaa stos and test mov dec mov loopne pushl imul cmpsb xchg mov cltd movsb push fs (bad) sbb push std mov sbb xlat inc xchg aaa cmpsl std (bad) push mov ljmp add lock mov mov sahf aad lret and call pop add aam jle xor scas cli (bad) fistpll stc inc adc and dec xchg pop aam (bad) (bad) (bad) ljmp lret mov and or loopne es icebp je out push fcomi pop cwtl aam sbb mov inc cld xorl (bad) sub sarl mov mov imul push ret lcall decl fcmovbe insl cmp pop xchg dec cmc test jmp std xor mov (bad) (bad) jmp inc ret shll stos sub and jg pop inc and loop mov scas (bad) (bad) (bad) call jmp jle leave add jecxz jl jp jg rcrb mov jno enter pop cmp push pop xchg shrl jnp fwait push (bad) cmpsb adc push push add rorb leave xor add mov xchg (bad) cmp movb enter or dec push push xchg outsb popf repnz mov (bad) (bad) call arpl mov mov std and ret aad pop jg ret or jne test (bad) (bad) jmp pop loopne jne stos insb jmp adc shll call iret (bad) call and (bad) xchg scas pop jae lret push clc decl or and gs sub popf lds xlat (bad) decl lret ds xor push cltd cmpsl sub into xor int syscall (bad) (bad) (bad) pushl aaa fnstsw xor (bad) or add and inc xchg clc das mov scas lods push (bad) (bad) (bad) call adc jle mov mov xchg in aas mov clc incl or jnp pop rcrl add mov fcos (bad) ljmp adc jb mov cmpsl (bad) (bad) push stc mov imul xor (bad) (bad) decl es fsubp pop fstl adc sub mov ja je ljmp clc incl jne push xor mov jecxz pop mov xor or aas das ret mov sbb (bad) (bad) (bad) lcall inc xchg jne (bad) fadds lcall mov jb aaa (bad) mov loopne aas sbb jg fidiv fiaddl jne cld adc jl loopne (bad) push or xor mov js les sti xor pop cli jno dec out cli sbb cmpsl cmpsb testl decl cmp mov pop cli scas adc mov cmc or mov (bad) mov pop loop hlt and aas xchg fwait lods pop insb int dec or scas in cmp (bad) cwtl sub push imul hlt addr16 (bad) (bad) mov adc in divl dec mov jo idivb les or lcall lret stos into int3 cmpl notl out out dec xchg push cmpsl xor cmpsl xchg int cltd or rclb sub pop std (bad) (bad) incb dec out jge add and out test sbb (bad) enter lret (bad) ljmp hlt inc mov jae pushf adc insl or mov push gs lcall ljmp repnz repnz adc dec (bad) ss outsl clc xchg add pop rorb cmp (bad) (bad) (bad) decl pop jnp fcoml pop sbb jbe (bad) mov dec xchg jecxz mov (bad) fwait xchg xchg pop lahf mov or jae out jns idivb out (bad) (bad) (bad) call jle dec sarb js popf mov jge shrl xor jg jmp pop xor mov pop pop pop sar (bad) (bad) call jne sbb add lret or mov add mov cmc or mov out mov into dec sti pop cmp cmp and push or scas in aas xchg push int3 mov push scas insl xor shlb testb rcrb inc jne shrl mov jns outsl mov repnz int mov movl (bad) cmp shr daa ret gs sub (bad) sti or gs (bad) mov out adc sar jmp int3 iret lock (bad) (bad) decl xchg push mov or jnp into pusha mov cmp (bad) call (bad) sahf bound mov fldt repz fildl mov xchg repnz das mov (bad) fdivrp pop cwtl and lods ja addr16 dec out jmp pop test (bad) (bad) pushl sbb cwtl popf punpcklbw ss mov repz jmp in (bad) ljmp sbb shlb or cli aaa inc jne add icebp fisttp ds adc aad cld call mov mov pop cmp (bad) (bad) jg mov mov fimul dec and mov add adc (bad) out cli inc shll mov or call mov leave mov ljmp (bad) pop sub add hlt add cmpsb add sbb lahf scas mov (bad) (bad) incl push repz dec sbb scas dec (bad) stos xor jmp and enter inc jecxz jmp ds and scas out (bad) (bad) ljmp int3 pop ret loopne repz es insl push (bad) cmp aas push imul loop stos adc (bad) (bad) ds pop cltd (bad) repnz nop add xor inc imul mov ds ds fbld mov pusha jb mov (bad) (bad) (bad) dec pop xor cmp xchg iret dec repnz cmp lret or ds jne inc decl hlt mov pop xchg jne ss (bad) (bad) (bad) decl into in enter into dec jmp ret dec adc stos fnstcw cmp dec hlt lock (bad) (bad) call push lock mov je js mov movsb push std ret repz (bad) (bad) lock ret cld gs (bad) nop or je fs shrl test aas test ja (bad) ljmp sahf inc pop ljmp mov jnp dec cmpsl push orl pop and ss idiv push das mov (bad) (bad) ljmp inc sub call xchg push cmp repz in (bad) (bad) mov add sub iret adc leave fildl out jg gs aam shlb cmpl (bad) sbb sar jbe pushf push lret ret xchg cmc xlat dec or (bad) daa mov mov xchg ss (bad) idivb push push int3 out std (bad) call jno movsb cmpsl adc call in xor cmpb mov mov mov cmp and xor adc incl xlat jp jmp mov loope test dec andl cld js jge and fstl xchg jne xchg ds sub mov ret (bad) jg jle push pushf push ret pop shrb cmp jnp xchg decl lret lahf push ficomp insb lods cmp adc hlt movsb jp lea (bad) incl fsubl xchg (bad) inc int3 mov (bad) (bad) (bad) call test sbb sub idiv ljmp add incl xor push cmp arpl test sub or scas ja stos xlat loope or call js,pn (bad) mov push xchg lcall pushf les loopne fidivrl mov (bad) (bad) incl dec int sub mov mov fwait add pop lock aaa cli cmp std (bad) jg movsl inc cmpsb inc mov cld mov fwait push mov jg call pop fsub xor sti cmpsl pop sbb fistpll ds icebp cltd mov adc mov push adc mov push scas not jne subl cmp movsb sbb inc sbb mov adc lcall mov mov ds (bad) incl test lods inc pop cmp fsts (bad) or das cli mov js lds pop gs push jne shlb lahf ret and in ljmp bound inc pop ret or xor inc call cmp mov fneni(8087 inc daa std test mov xchg std out test sub mov (bad) (bad) pushl jl mov or cmp dec pop mov es xchg pushf sub mov rep push pop mov lods sub mov cmpsl (bad) stc sbb imul lock daa xor mov dec ss cmp ss mov (bad) pop adcl jg (bad) incl pusha nop inc xchg pop aam jle sub xchg sbb cmp (bad) call jg push push lds sbb dec jb push in xchg add aas add dec loope (bad) out cli call jnp addl aas aas or adc call std fnsave repz pop push lods out jbe les aaa lret or decb push jp mov inc cmp mov mov out lds adc and (bad) pushl aam pusha mov mov (bad) or push sbb (bad) (bad) jg xchg inc mov sub mov je ror push push lcall into cmp mov sbb cmp lret (bad) mov add sub add in pop pushf shl jno int rorb mov lcall inc cmp clc test (bad) (bad) fisub or inc or xchg out sar mov cmp (bad) (bad) (bad) inc arpl mov (bad) dec sbb mov or cmpsb mov inc sub (bad) (bad) lcall push lahf fs add mov pop cmp insb cmp jbe outsl or ss call les enter jg sbb hlt decl es mov lds je push push inc ljmp jecxz int3 arpl push fimul sbb pushl das ss lods mov jge,pt inc popf ja xchg into sarb mov jp (bad) (bad) jmp mov insb idivl sahf adc mov add mov xor cli lahf add pop sarl add jle jmp mov out fucomp pop fcomps lahf ljmp decl (bad) lret cmp loope dec mov je test dec pushf xchg sub (bad) (bad) lcall movsb lea ret adc sbb ds push mov sub mov pop loopne pop aas fildl (bad) addr16 xor sahf pop lea sub (bad) ljmp sub cmp gs mov scas mov bound adc arpl adc (bad) incl call dec or aas sbb mov aas mov fidivr dec stc push (bad) ljmp shrb pop bound aam lret dec fnstsw mov iret movsb test (bad) call std cmpsb sub sub lods push pop rorb add sahf inc mov arpl lret (bad) (bad) incl lods pop sbb lods in jmp or test mov outsb mov mov (bad) incl sub mov add xor pop lds ja mov or (bad) ds (bad) (bad) jg and cmpsb inc and outsb cltd dec sbb cwtl mov sub mov (bad) pushl lret data16 cmp pop inc cmpsb (bad) mov out sub lods stc xchg cmpsb jae test (bad) (bad) (bad) dec popa scas jmp mov hlt aam mov scas loope movsb or sbb popf inc call and mov setge lock leave pop dec lods insb inc pop fs adc xchg subl mov pop (bad) loop and ja decl das loope pop mov mov jns and in addr16 sub lock and (bad) cmp out cmp ds xchg cld (bad) push adc mov sbb scas fnstsw dec push (bad) jg mov pop xchg cmpsl adc jne xor sbb fsubrs lahf (bad) incl dec lods jbe loope (bad) lock jl in scas xchg cmp and incl push push add or push inc dec cli (bad) (bad) (bad) mov bound dec in into gs jmp bound add mov jb jp mov testl pop sbb fstl pop add push xchg mov mov ficom jg sub inc xor jae,pt loope jnp adc (bad) (bad) ljmp sub hlt jecxz or push sub lods decb in (bad) mov and jp stc decl test jnp ja add fldcw adc xchg add push sbb mov lock mov ds pop movsl sub enter popf repz pop jmp or mov ds repnz (bad) (bad) (bad) incl mov sbb lret mov mov arpl lea fbstp xchg je jo lods mov xchg out lahf cmp ret mov (bad) (bad) (bad) call sub mov scas (bad) pop mov lcall xor int3 mov icebp cwtl (bad) (bad) (bad) lcall and pandn inc dec mov sub outsb ret ret cmp sbbl push or cwtl aam andps ret mov cltd test test jns insl std push (bad) stc pop jns insb cmp xchg pop (bad) push mov jg mov stos cs movsl xor js (bad) xor pop lock jns add inc loop pusha aaa dec test ljmp dec dec or in enter push mov repz icebp lret dec (bad) mov push mov test (bad) (bad) jg fimul jb xchg (bad) repnz mov loope xchg (bad) (bad) (bad) (bad) call imull adc test in outsl shlb fsts mov mov xor loop fnsave lcall mov pop xchg lods sbb cmp sbbl int3 cmpsb mov fstps (bad) incl jmp (bad) xor arpl xor das insb das gs (bad) (bad) pushl outsb test sub popa out stc cwtl repnz iret fild inc pop shll cmp cmc (bad) (bad) push fmul lock fstpl shrb mov insl stos int call outsb jb and inc xchg mov movsb (bad) (bad) (bad) mov inc (bad) mov decb shll lahf or adc pop cmp fcomip and pop lds mov ljmp (bad) aam add out and adc xchg or (bad) adc and pop inc cmp or push mov jnp fdivp (bad) (bad) incl jb roll dec jle mov sbb xchg pop je (bad) lcall xchg jbe mov push pushf out ljmp sbb mull push fiadd cmpsl outsl xor (bad) (bad) pushl leave test int3 nop fucompp in mov dec lds mov cmp jae (bad) jno and xor fmull cwtl add (bad) (bad) (bad) decl dec push cli in rcrb pop cmpsl movsb popf roll push sbb sbb pushf (bad) in adc (bad) jmp pop inc (bad) addr16 mov popf jge mov rol ds cmc (bad) (bad) mov test je repnz inc jae adc xlat cmc sbb jmp push and fwait mov in inc (bad) (bad) out push push push les dec sbb lret inc sahf xor jg or daa sahf jecxz adc mov mov idivl clc (bad) (bad) (bad) mov xchg and mov mov sbb (bad) iret mov or sbb (bad) (bad) out lods sahf jnp fildl add lock mov or stc inc mov pop cli pushl and inc shl adc xor fsubrs popf pop xchg daa ret ljmp inc nop cmp icebp cmp (bad) (bad) lcall dec fisttpl mov sub (bad) (bad) lcall adc hlt mov iret add rolb sub mov (bad) (bad) call mov in sbb imull pushf and and pop bound adc (bad) (bad) (bad) (bad) fisub push pop int3 daa xchg outsl pop jo icebp lret sub pop into insb jle sub sbb pushl sbbb xor xlat (bad) push mov shrl xor (bad) sbb loopne rorb cmpsb cmp xchg cmp add (bad) mov test dec data16 stos sbb hlt adc dec popf popa popl jb jl xchg ljmp (bad) decl (bad) aas sbb fcompl decb dec sbb test ret movsb mov pop (bad) decl ja test jbe stc shl and (bad) lods mov leave clc ja nop jb daa sub fistpl fisubr lahf test test push out clc (bad) call in les mov dec mov es cli fadds decl lret jo inc data16 inc iret int3 pop fidivr push fsubs add jmp cmpsb (bad) sub aad dec jne sub imul jns mov xchg fcompp out fisttpl mov sub pushl mov outsl (bad) pop mov mov pushl test push jno or lcall stc out sbb pusha arpl push xchg outsl clc call subl xor add lds pushl or push cli aad xor xchg sahf std push mov lcall mov data16 mov mov mov push mov ds repz xlat int sbb out mov push clc dec lds jle mov mov int cmp (bad) ljmp mov cmp mov loop push arpl dec cld lcall pop sbb pop mov stos push xchg lcall and jg inc mov fiaddl mov clc (bad) fbld outsb xchg xchg xchg sub sbb shrb mov push call aad ds pmulhw call xlat lret sub call push dec ljmp nop adc pop movsl call lret std mov jmp mov pop std incl push lret mov fwait leave jo sbb adc jmp incl cli xchg jne jle stos xchg movsl pop aas lock daa adc xchg out aas xor movsb test clc (bad) (bad) dec or jle icebp xor mov roll ficoml jo gs out add cli add scas ljmp fbld push movsl das mov iret fldenv lret mov push adc xor test dec (bad) out cli outsl mov push dec pusha jecxz mov lcall incl dec aam (bad) dec cmpsl insl iret cli xor roll xchg ljmp shll sub enter xchg imul movsl mov mov pop and inc adc (bad) (bad) (bad) jmp push call jbe loopne hlt outsl or xor (bad) jmp jne pop push das shrb loop cmp sub inc or pop push xchg sub (bad) fstpl decl xchg mov xor das sahf or jp sbb mov inc mov repz fistpl sarl out jl iret pop movsl jmp clc arpl (bad) (bad) pushl sub test jle into lret jge pop push divl pop insl test dec scas rorb (bad) mov popa xor pushf stc jne outsl cmp push pop push aaa sbbl mov jecxz (bad) (bad) dec xchg lock leave cmpsb jb pusha jp jl add outsl adc jmp call in arpl leave popf push (bad) scas mov jbe xchg sbb jl (bad) lcall and scas fmull pop or out sub je ljmp cli roll movsl xor lahf inc inc aaa jp rcrl cmp sti (bad) (bad) ljmp lods xchg (bad) xor scas es int3 and cli push (bad) adcl fistl out xchg mov pushl lret lods jne cmp (bad) leave test mov dec mov test sarb or cmc rsqrtps fbld into (bad) mov xor jp adc and (bad) lcall (bad) std pop inc mov mov movsb or imul (bad) incl mov fsin jnp mov pop mov add ss jns (bad) xchg decl ret or mov xchg dec dec cmpsb lea daa xchg pusha out lods aaa push cs lcall subl mov and mov or (bad) (bad) pushl insl add and mov aam rorl sbb (bad) fbld fistpll cltd sub adc jp jbe js pushl jl pop cli lea ljmp and jl aas ds add push mov fcomip lcall pop insb cs or xor out dec arpl xor (bad) cmp (bad) (bad) ljmp dec rcrb dec push jbe sub repz (bad) jo adc fwait (bad) aas orl in cmp push cmpsb dec mov dec (bad) cmc (bad) rcrb int3 cmp shll pop out shll (bad) (bad) (bad) fimul out shll aaa sbb loope stos stos gs (bad) (bad) mov push loop rcrl xchg xor fsubs (bad) (bad) mov clc adc inc mov insl push jge loope imul (bad) movsb icebp mov push pusha popa (bad) pop or mov (bad) pushl mov adc data16 sub (bad) (bad) (bad) call fs xchg sarb les test sbbl ret (bad) (bad) (bad) cli jne mov aam or xchg jns and push sti push mov loopne (bad) (bad) jg xchg xor adc sarb sbb push cmpsl or insb repz sbb (bad) mov inc push test stc pop push sub mov adc cmp mov ljmp push pop xchg dec adc ljmp les pusha ret mov (bad) call mov jbe aaa push adc stos (bad) jno (bad) jo sub add (bad) (bad) decl or je cmp adc sahf sub sub jno aaa std dec sbb and call inc lods or xchg in sbb cmp pop (bad) (bad) (bad) incl mov cmp aam mov cmpsb mov push push sbb lods pop getsec mov call fs mov cltd es fsubrs and pop inc sub lock add int3 pop sub scas repnz es outsb mov cmp adc pop ljmp fdivrs mov dec imul jmp sub cltd inc cmpsl inc xor mov (bad) (bad) (bad) ljmp jecxz sbb pop cmpsl pop push push mov sahf jo out jp incl and sub call movsl adc sti aad insb int3 int (bad) (bad) (bad) pushl mov rclb mov sbb in mov jbe or jbe (bad) (bad) lcall dec push bound jo ss in das insl jno cmp add fadd loop (bad) (bad) out cli lea movsb and test aaa xor scas pop xor (bad) (bad) pushl dec scas lret mov out sub es out mov fcos pop cld (bad) mov pop xchg sub xchg addr16 sub (bad) mov lcall mov cmp pop cmc inc fildl push in enter leave subl (bad) cmp ljmp sbb insb jns aam (bad) mov repz mov dec lea scas in jecxz (bad) decl pop mov sbb push mov push pop out mov mov cmpsl test add xor sub imul pusha pusha daa lods cli and out fnsave (bad) (bad) push sub cmp rorb (bad) (bad) ljmp ds push loop mov insb fdivrs mov (bad) sub pop jmp cmp idiv (bad) (bad) incl add inc bound cmpl cs mov mov jecxz sbb (bad) push xchg sarl adc jmp daa pop aas test cmp xchg cmp push push ja ret repnz jge loopne cmpb (bad) fisubl movsb (bad) out add je xchg cmp or push push or mov outsl test ljmp jmp test push mov popf loopne repz mov lock push cmpsb cmp sar add mulb test and xor adc (bad) ljmp push jp fdivrs out js (bad) and repnz scas xchg (bad) (bad) (bad) lcall sub iret insl pop fsubr aam xor call (bad) mov mov add sub jns,pt push push dec mov jne mov push mov fs loopne mov mov and jg mov mov iret (bad) (bad) (bad) jmp push das jmp sarb (bad) jbe mov aaa les and popa pop (bad) call mov cwtl mov imulb icebp lcall inc int3 cmpsb sbb (bad) (bad) add or sti xor (bad) (bad) incl xchg push pop daa dec les das fldl push xor aaa lock or popf cmc and (bad) pushl mov or out ret mov cli mov (bad) (bad) call fcmovnbe stc add mov or es loopne jo js aaa std (bad) jg mov sub mov (bad) in mov dec sub mov std (bad) (bad) incl inc dec lea pusha jbe adc pushf add add (bad) (bad) jg call adc inc mov mov adc sub ds inc int push ljmp clc test call xor inc sbb (bad) jmp in push jnp ljmp cmp inc lods (bad) and xchg (bad) incl ljmp xchg es push xchg push sbb sbb cmp (bad) ljmp pop out mov outsl xor hlt test push mov adc fcomps hlt test ljmp leave add xchg adc xor fbld aad (bad) mov idivb sbb in jo shlb mov (bad) jg pop jmp in xor mov sub sbb out pop jecxz aam cmpsb mov (bad) call arpl dec xor dec loopne push xchg ljmp aad push dec pop inc rcll mov pop (bad) ljmp or jbe int3 mov (bad) (bad) ljmp inc call divb mov aad mov inc push pop loope imul xchg clc imul lret out mov cmpsl and (bad) mov movsb dec cmp (bad) jmp push popa movsb and repz xor xchg push push ret sar (bad) (bad) pop sub fisub test cmc pop push loop (bad) (bad) (bad) mov mov push mov sbb sar xor mov jne pushl cld call push pop mov and mov repnz movsl (bad) xor lock (bad) ds jecxz cwtl sbb push aas add (bad) (bad) (bad) lcall mov xlat (bad) push and clc xor and ja int dec mov cld sbb fimul cmpps aaa cmc (bad) (bad) (bad) cmp mov (bad) dec ljmp jg dec idivb sub and mov outsl pop inc call repz pushf sbb in jbe loopne (bad) mov push das ljmp stos cmpb sub push sbb add rcrb cli cmp fnop lcall and repnz ss fwait jg adc cltd ds out clc fildll ds inc flds dec je (bad) (bad) (bad) decl mov arpl mov lds or dec aam sbb (bad) mov loopne cmc inc pop and or push xor cld dec addr16 mov enter sbb out (bad) (bad) (bad) incl mov ja fild out es jl pusha mov jb sub xor test xchg (bad) (bad) (bad) lcall jg mov add jns lods rorl mov arpl or inc decb sbb mul aad test (bad) inc bound loopne lret dec xor (bad) lcall ret sub jae jb mov push push push xchg insl ret incl pop stc fnstsw pop mov mov insl sbb jmp mov in xlat test dec mov pushf fidivl subl insl sbb sbb mov mov sti sarb test cmpsl mov pusha cmp test cltd lods xor addr16 imul fisubrl (bad) (bad) call data16 push out mov call popf nop pusha sub fistpll mov aas xchg cld (bad) (bad) decl cmp push jge lock (bad) cld fbld into push jle std mov push (bad) (bad) call mov sbb xchg insl push call cs cltd or les pusha mov subb xor lcall mov or leave dec (bad) xchg jnp or xchg ja mov fstps mull (bad) inc data16 cmp pop insl pop lcall mov loop pop imul sti lods add (bad) lcall (bad) (bad) cmc sbb add push insl sbb push push mov xchg (bad) xor incl xchg cmp cmpb popf in test add (bad) repz add call pop sbb lea aaa nop jnp in pop lods adc cmpsb scas xchg (bad) lcall fdivrl lds mov mov (bad) or imul cmp jg insl cld (bad) inc movsl jg int push sub sbb movsl ret (bad) clc mov mov bound inc xor cmpsb fbstp inc add lcall out adc push jb inc fcomps (bad) (bad) incl mov xor fnop cld and pop push rolb scas das movsb ds xor leave cmpsb (bad) (bad) (bad) mov xor adc pop shrb scas cmp push pop adc push pushf lcall jg xor dec fstl fidivrl xchg push jae cs shlb push xchg ffreep pop popa add adc sub es sbb xlat xchg lods out imul rcl add daa mov jne gs rclb dec test mov (bad) (bad) dec jl clc inc xchg or fsts pop cwtl xor in jne push bound insb ljmp aas in sbb mov dec (bad) jmp inc jne lods mov and mov (bad) push xchg sub loop cwtl mov cmpsl cmp (bad) xor (bad) mov xorl cmp pop cs inc rcrl in inc xor and (bad) (bad) jg lods pop pop and jb pop sub fnstenv test or mov mov sahf (bad) lret or sti xchg mov imull inc mov decl int3 push inc add and xor sub insb leave mov and (bad) mov (bad) ds pop out jmp mov jae jge and (bad) (bad) ljmp sub mov sti inc dec scas cwtl jo xlat hlt adc cwtl sbb mov (bad) (bad) (bad) call and mov mov aam xchg mov mov inc dec lods fisttpll ret ret out xor pop push sahf das mov (bad) addb es sti outsb dec cli jmp fdivrp cmp mov jmp cld (bad) (bad) (bad) cmp or std cmp aas lahf jmp (bad) jge loop adc dec rcll push setno (bad) pushl rolb imul popf jp jb mov call mov sub int3 dec (bad) mov cwtl into xlat out mov jecxz or add and std pop (bad) (bad) (bad) (bad) jg outsl pop mov and clc movsl loop lock lret jne or subl (bad) (bad) (bad) (bad) mov jno les repz jmp clc xor cmp sbb adc inc jg das rcrb shl pushf stos cmp fs jmp sahf sar jmp loope sbb mov xor (bad) jmp ficom mov push mov xor movsl xor pop repnz (bad) (bad) pushl and stos (bad) adc pop mov jne adc fwait sbb cltd sub inc mov aam (bad) (bad) (bad) lcall sbb mov xchg cmp std out mov icebp stos or lcall ret imul mov sbb (bad) pop xchg cmpsb xor add mov stos psubusb (bad) (bad) decl or jl pusha pop lea das test push int3 mov (bad) lcall stc enter lret test in and fiadd (bad) add ds add fs jmp daa cmp dec pop les cmc xchg iret subl jle xor arpl xchg push adc mov cli das push mov pop dec mov out arpl imul (bad) ljmp mov aam pop scas jo sub je leave insl stos movsb adc lods idiv aas mov dec cmp add mov xchg imul pop in dec stos aas mov pusha les pop (bad) (bad) (bad) (bad) jnp shrb push mov dec xor cmp mov or mov mov jg fs jns lcall aad insb xor xor rorl cld cmp push outsb lahf pushf addr16 (bad) (bad) jg or and mul push push fsub xor jne add imul add mov pop sti (bad) (bad) incl fxch pop out adc leave popf xchg cmp divl cmpsl mov test scas (bad) (bad) call sub mov dec enter aam mov inc lods mov add (bad) incl aad das lods les mov push out cld arpl and pop add inc mov in sarl out shrl lds cwtl (bad) out mov xchg xchg test out hlt pusha adc adc fmul and mov adc inc int adc out and movsb movsl mov cmpsb hlt decl je popa (bad) mov idivb fwait mov loope xchg pop jb loop inc jb (bad) (bad) call imul nop aad nop cwtl xchg iret cmp push cmp mov push or dec into out mov and lcall iret xchg xlat nop cmp fs cmpsb cli rcrl out je (bad) (bad) incl sbb (bad) xor cmc push mov dec mov jecxz out (bad) (bad) (bad) (bad) jp in dec (bad) loop lea sahf dec icebp sub ja fsts mov mov (bad) incl inc mov add sub (bad) ret dec add lret es mov in out mov sub inc xchg cmc (bad) pushl loope ret es into jl inc cmp mov je (bad) (bad) decl loop inc push mov or xor fldenv sbb sub dec xchg decb add jno fwait dec push mov push (bad) (bad) (bad) pushl cmp cmc out pop cli stos xorl mov cwtl and in sar in pushl dec sub divb cmp roll sbb pop push cmp xchg xor dec jecxz (bad) (bad) call add imull rol fsts (bad) es aaa cld out lods rolb divb rol xchg jno iret (bad) jg pop mov loopne rorb clc sub in ja jg dec outsl pushf ljmp fcompl (bad) lock (bad) push sti adc or rolb dec push jge ret in div lahf call push xor (bad) (bad) ljmp out push sub jne sub hlt cmp das mov (bad) lock rorb scas push mov imul xor repnz imulb adc (bad) (bad) (bad) (bad) incl loop pop mov pop or mov pop (bad) bsf adc lahf lods jns imul lret mov xchg mov mov push lea or (bad) ljmp cmp rep aas cli mov pop mov test and mov fcomps cwtl cmc jae test in (bad) clc (bad) (bad) ljmp mov push ljmp into inc xlat aaa (bad) adc (bad) ljmp push adc (bad) out test jg mov (bad) (bad) ljmp pop mov mov insb dec jge and (bad) mov ret daa push out mov sar (bad) (bad) cmp lock cld pop mov or test dec jp mov jecxz jg jns sbb icebp jg jmp sbb popf mov cmovge xchg test in inc cmp ljmp xlat dec and add mov das and jbe aaa lcall fs adc xor mov (bad) pushl fs aas rcll mov jl movsb popa mov scas pop mov mov mov adc cld movsl mov push cld jns cli (bad) (bad) (bad) dec leave jo push lods (bad) cltd cld lea out xchg ds fistl es pushf mov shll decb lds (bad) (bad) (bad) incl into jbe mov mov mov or inc push push or add jb shlb push lcall and (bad) arpl loop mov (bad) (bad) (bad) inc jecxz cmp mull add outsb cs mov mov (bad) out mov mov bound cs mov hlt imul sbb inc and push jg inc std or int sahf out insl ret mov sub (bad) cmp (bad) dec cmc pop xchg mov notb insb adc decl add mov mov pop cmp dec sar (bad) (bad) pushl push xor and cltd push jbe addl data16 xlat pop (bad) (bad) (bad) dec call out lahf dec shl ds sbb stos xchg push jge mov push cmpsb jno (bad) (bad) incl in add mov repnz scas ds pop pop cmp mov sbb pop add js subb cmp cmp sub adc (bad) (bad) (bad) (bad) inc imul jmp rcrb decb insl or mov push dec ficom pop (bad) outsb call movsb icebp push clc cmp push (bad) mov mov call mulb jge or push pop imulb inc mov pop ljmp inc mov lock incl testl hlt mov adc inc xchg enter cli lcall bound test test jle push bswap addl loop (bad) cld loope add jmp sbb in pop pop scas flds loopne (bad) call ds inc jae popa inc xor mov imul push sbb (bad) hlt jo cmp ljmp call sahf push push pop ja xlat scas push pop mov js cld (bad) fiaddl popa sar add mov scas cli clc pop mov loopne inc in xchg sahf xchg cmpsl and cmp bound les popf push (bad) (bad) (bad) decl cwtl or sarl xchg cmpsb loope mulb add cmp mov xchg lods push incl (bad) jp adc aas cmpsb lret (bad) ljmp inc jle jp jne rorb gs push push inc xor add xchg mov cli incl pop loope mov and (bad) pushl xchg mov push xchg pop call out ss movsl and decl mov mov mov rcrb ret lret add sbb jbe lea dec mov lea mov imul (bad) (bad) ljmp daa sub sbbb xchg imul insb clc into mov push mov lods fstpt mov scas jmp mov les push xor adc xor inc jmp jmp push pop add icebp (bad) pushl inc fild mov bound sar das clc xchg mov (bad) jmp imul (bad) (bad) (bad) mov mov sub aad ror outsl or pusha rcrb cld scas incl pop and stos dec push sub adc popa pushf dec out inc dec pop (bad) mov mov and cmpsl decl addr16 inc push mov sbb xchg mov push sub outsl ds xchg sbb mov mov pop hlt dec push das push (bad) loop dec mov xor loop (bad) ljmp pop mov mov aam je aas jae push cwtl outsl js ja sbb pop pop pop sbb popf add pushf jbe mov xor (bad) ljmp mov enter fcmovb cmc fucomip lcall sub outsl clc scas clc inc xor (bad) out pop cmp dec mov pop push xchg sub (bad) (bad) (bad) decl gs js js iret hlt jae roll or stos xor mov jecxz je adc add lcall lahf (bad) push push xchg jecxz scas mov jnp cmp cmc and inc or mov popa jae sub outsl push dec cmp pop mov mov incl es int fwait mov pop fcoml jnp loop ljmp (bad) jmp insl cmp dec pushf inc pusha cld loop mov in in and ss xlat dec cmp jmp sub or mov and (bad) cmp aaa push adc (bad) outsb aam and sarb sahf fs and lock (bad) mov mov (bad) ret mov out or (bad) lcall fidivr adc into ja or cld xchg mov adc (bad) lcall mov addr16 addr16 popf xchg sub lds xlat push adc pop stos adc in xchg sbb or leave iret sub in roll call push addr16 rcrb sbb mov (bad) (bad) mov fs sbb loopne outsb sub xorl (bad) (bad) (bad) call jmp outsb and add loopne lods mov mov lods lcall pushl jp mov adc push js mov inc or pop fidivr int3 outsl cli (bad) dec xchg lret mov sbb pop out xlat call out cmp mov insb int3 mov pop push ja sbb mov bound jl aad pop push ret dec pop and (bad) daa mov push lcall mov (bad) (bad) jmp cld xor mov leave lods dec ds jle mov lods ds ljmp and lret jecxz,pt repnz std push ret or (bad) decl xchg xor sub lds push test or lea add cmc clc jbe loop decb xchg popf xchg int3 (bad) cmp add inc cs paddd inc dec lret (bad) fwait insb jmp mov (bad) add (bad) (bad) lcall push clc xor xchg (bad) out jbe xlat sub mov (bad) mov sub adc stos cld (bad) (bad) (bad) call and (bad) mov cmp or xchg jno pop mov jmp xchg loop (bad) ljmp cmpsl sbb or pop lea (bad) loope cli jmp fdivrp add ljmp sub int3 sub xor xor aam (bad) fldcw (bad) (bad) fidivr rcrl mov test or adc pop rcr repnz hlt (bad) (bad) pushl comiss enter sub xchg xchg fisttpl cmpl add test (bad) (bad) lcall fistpll pop mov notl push mov pop pop inc dec rcrl shl inc xchg stos (bad) (bad) (bad) incl sub dec mov dec pusha cmp adc jl jne loop aaa jne stos test jecxz (bad) (bad) (bad) lcall dec shrb mov fs or in adc sub popa jge sub call sarl adc icebp jmp stos cmp xlat adcl (bad) (bad) lcall rorb lret mov jmp jg xor rorb or push mov call jg jge subb mov std sub mov pop jp inc mov cmp ret (bad) lcall and adc xor mov mov mov outsl sbb xchg clc hlt sub mov (bad) (bad) decl das mov and test lret aas call aas stos mov lret pop (bad) (bad) (bad) (bad) call mov inc ljmp xchg xchg adc push dec movsb (bad) push popf push (bad) (bad) lcall adc pop xchg cltd enter fwait lcall pop cli sub push xor dec jg incb and lret fsubrs stos jmp (bad) call call test (bad) jl xor orb xchg (bad) (bad) lcall mov in lods cld inc sti cltd sub and jg mov je dec sbb fstl std pop xchg and mov adc mov xchg and sub inc sub fucomp cmp (bad) ds ljmp out rcrb add push push jge hlt call decl add mov fcmovbe xor (bad) or arpl mov mov movsl fidivr je or aad add mov push inc jmp mov jbe pop cmp mov ss nop test stos (bad) mov mov sub lods and cmp addr16 push fadd call in jg dec adc cmp push pop inc fbld adc fwait mov xor mov fs jecxz (bad) (bad) jbe aad imul in adc mov xchg inc or (bad) ljmp rcrl jb scas out rolb or hlt jmp sub mov lcall cmc push mov xchg dec enter (bad) (bad) (bad) ljmp das or lcall (bad) fcompl aaa stc jge repz fisttpl jg xchg cld (bad) (bad) jmp add jnp cmpsl fisubrl sbb xor daa pushf fnop add stos (bad) into (bad) (bad) call sub sti (bad) lret dec popa lods adc inc pop xchg inc mov mov jb pop or (bad) xchg mov adc add data16 (bad) (bad) stos je pop jb pop and sub and daa addr16 int3 cli (bad) (bad) decl pop mov jp aas xor xchg fisttpll mov pop sbb xor lea (bad) ljmp lock popa mov pop jns push mov dec cmp xchg stos xchg addr16 (bad) call (bad) pop es insb pop xchg push push enter daa call std pop pop xchg ret jmp mov jl mov jo aas and call ret adc nop lahf jle push call loopne jmp sbb add jg xchg and pop cmc imul jb xchg dec (bad) (bad) (bad) decl scas or adc jle je out lods sbb push or jae jmp cmp (bad) (bad) pushl (bad) pop fstps (bad) mov mov mov sti inc je push adc (bad) (bad) (bad) (bad) jge xor sbb sbb push push xchg sti fstpl sub pushf or dec arpl (bad) (bad) (bad) call or inc xchg in scas in out and mov mov in (bad) pushl jg jae je fcomps or cltd outsb sahf repz ja lahf insl repnz arpl jb gs and in pop lcall call stc out enter mov mov adc imul inc call sbb pop mov add nop sub (bad) (bad) ljmp lahf jns cld (bad) movsl loop dec xchg add jecxz lahf loop lods inc dec js out adc jg mov inc mov insb fisubl lret pop ss (bad) (bad) mov mov out mov movsl popa jno dec xor out jecxz (bad) es pop xor idiv (bad) lcall or fdivrs jecxz aam out int3 sub lods stc hlt dec xchg cmp aaa xchg (bad) xchg mov popf frstor xor fisubr (bad) lcall fmuls loop pusha xor iret outsb lret ljmp test js sti pop notl jno call fs fs aas adc (bad) jae stos jecxz cmp fidivr xchg dec (bad) (bad) (bad) decl push scas and loopne xchg mov mov lahf fnstcw inc push push pop std jbe mov (bad) incl (bad) fldl iret mov or nop fmulp gs push test test xor fcmovnbe (bad) decl push in pop and mov fdivl cmp pushl call mov lcall pop cli add xor dec clc jg loop adc out mov jmp pop aas or (bad) (bad) mov jne popa test xor lret sub stc xchg lcall jne ljmp scas je xor (bad) (bad) lcall xchg dec jecxz jmp push (bad) sysret loop out pushl shrl int pop fs (bad) (bad) (bad) dec xchg mull nop scas jl jp,pt pop cmovp vmulps push sahf popl mov es adc dec imull or mov lret push adc scas (bad) dec xor jno mov lea sub call icebp or loopne fsubr clc movsb cmp dec mov jge sbb pop call ljmp (bad) (bad) (bad) jmp ss push nopl lret stc or daa movb nop ja fsts lret test (bad) fcomip incl lods jb push or inc test xlat sti mov cld add (bad) (bad) jle and gs test lock imul rcrl (bad) lcall mov sahf (bad) mov aaa mov adcl das sar (bad) sub lea insl mov sbb cld incl fbld nop pop iret andb iret rcl and roll sbb andb dec pop roll stos (bad) hlt (bad) (bad) fisttp test sbb ret stos iret xchg test jmp repz (bad) fnsave jae dec lcall sub mov andl mov and pop scas pop push loope mov addr16 (bad) dec inc sbb imul inc sbb push ret pushl (bad) jl scas inc mov xchg in repz sub divl push (bad) (bad) (bad) dec fdivs std movsb push jge mov enter enter imul mov fstpl jbe pop and or call leave pop mov (bad) aad ds (bad) in test (bad) (bad) incl mov xchg and or loope not in fs int sbb pop icebp (bad) (bad) mov xrelease sub add loopne gs sti pusha jmp push stc in sbb adc orl mull pop or (bad) or lcall push jnp nop push imul scas (bad) decl pop adc (bad) cmp jns aad (bad) (bad) (bad) jmp out mov outsb out or mov lods imul scas cli pushl mov dec jae test (bad) cmpsl aaa xor jb dec out aas pop aad (bad) (bad) (bad) fbstp mov xchg mov aaa in jbe and jnp (bad) dec test push icebp cmc addb or inc ljmp js (bad) (bad) (bad) cmp and sbb xchg repz (bad) xchg dec cmp std rcrl pop inc (bad) (bad) pushl jno stc insl or cld pop nop in sbb fiadd (bad) push aam mov movl lret sub test ljmp jmp scas push fldcw loop pushf xchg cmp sbb push dec (bad) (bad) (bad) (bad) pushl dec cmpsl (bad) push movsl pop jo add pop imul insb xlat dec lret in std sbb into jmp scas stos ljmp jle lret ljmp das xor mov add xchg arpl (bad) faddp imul xchg and int call dec lea inc adc incl push adc or ds mov pop cmc scas jnp pop sub push cmp (bad) xchg out enter cmc adc push push ds dec pop cmpsb faddp cmpsb (bad) jg fs sahf push adc (bad) push (bad) outsb inc sahf (bad) (bad) (bad) (bad) jmp add test inc ret les push cli jbe dec cmpsl sti hlt pushf lcall (bad) pushl ret xor dec xlat enter mov lret (bad) pop es inc jmp leave cmp mov test (bad) (bad) jmp int3 cld push push dec xchg stos stos jle push lret push jecxz cli pop push push icebp (bad) mov dec jge xor push (bad) (bad) (bad) push fstps push pushf inc movsl cmpsl mov movsb inc inc inc cmp gs (bad) aas xor (bad) (bad) (bad) pushl and push outsl xor test inc out lods dec pop adc lock out dec pop mov mov daa out xchg cli insl lahf mov sti mov push addr16 inc mov add add cmp insb lret sahf ret cli dec xchg pop (bad) pushl mov sbb or stos mov xor ret jg and add pop hlt outsb mov (bad) (bad) mov push jnp gs xor cmpl out sarl add mov jg gs pop lods mov pusha rorb jmp cli and std fcomip and shrl pop negb cltd ret leave (bad) mov lret cmp mov mov cmpsb ret lcall bound jnp mov mov mov pop dec movsl lahf test hlt add add ficompl sar mov call out xchg or mull (bad) (bad) (bad) call rcrl cmp das cli rorl push je daa mov cli or mov mov out xchg mov add dec mov dec aam movsb (bad) cld cmp pop jmp pop (bad) call sahf loope sub push mov ss pop add (bad) decl fistp test push cwtl insl adc add add and pop sub jnp mov (bad) ljmp dec push push aas sub pop push mov popa (bad) (bad) pushl ds mov arpl gs int movsb outsb popf fadds xchg sbb lcall fdivs sub jle aaa xor xor lds push mov out xchg jg add sahf gs xchg dec and cmpl pop adc pop push pop (bad) (bad) (bad) lcall adc test sbb dec xchg (bad) push ds adc (bad) ss xchg scas push hlt (bad) (bad) (bad) jp mov leave ss aad push int3 movsl sub cmpsb icebp insl mov xor (bad) (bad) (bad) fisttp shl (bad) jae mov lret ja sub popaw cwtl out cmpsb inc dec std inc call decl add pop push fstpt pop xor lods sahf out or ud2 (bad) ss pusha std (bad) (bad) ljmp jmp inc bound fiadd xchg js mov outsb bound ret mov mov aaa gs scas sub or dec mov (bad) (bad) (bad) mov cmc mov scas and lods push jae xchg push dec add rclb inc (bad) jmp fwait mov add jnp iret (bad) (bad) pushl ror mov jmp pop mov push pop outsl jl das push lea ds mov (bad) dec ret mov loopne adc inc and subl xor add (bad) (bad) (bad) lcall test sub sub dec nop loopne dec imul jb add dec into hlt mov (bad) (bad) (bad) jmp stos ror xor xchg lods pop arpl scas pusha cltd insl sub sahf xchg mov addr16 (bad) (bad) aas shr pop cmp xchg out mov mov leave mov add aaa jge das (bad) (bad) (bad) (bad) cmp mov add lods cmp xorl pop mov jne aad loope in (bad) pop jg dec es xchg ret mov (bad) fcoms adc (bad) jmp mov ss xchg fwait mov dec mov int enter adc cmp sub lods pop dec inc fnstsw or aas jecxz add dec xor add jecxz (bad) (bad) mov push mov (bad) push dec std scas dec fwait lods and into sti cld dec (bad) call cmpl cs (bad) adc pop arpl ficomp (bad) decl xchg ja lds out push jb pushf fisttp (bad) (bad) (bad) lcall add inc aam std push pop mov popa in outsl adc push enter mov int dec mov ljmp aam test xor jae adc jb jle cli stos pop test ret loope sbb and shr mov xchg mov scas cli pop mov out inc pop stos mov into (bad) mov iret lea (bad) (bad) decl je fstpl sbb jle incb or std test xchg popa sbb (bad) (bad) call pop movsl mov or xor jg mov cmpsb test (bad) (bad) (bad) jmp and dec inc xor adc hlt adc mov xor and int push nop std sbb dec jge (bad) (bad) call icebp imul (bad) adc je movsl test rcr lock mov lods xor fs inc or movsb xor pop pop fiadd xor nop adc sub cld jecxz jne fnstcw mov sub (bad) (bad) lcall loopne xlat push hlt mov jb js daa pop adc xlat cs dec ret jbe sbb scas cli mov jnp lret jae ja xor jb loop sbb adc loopne add (bad) (bad) (bad) mov push xor movd cwtl mov test shr xchg lcall lcall bound fist mov (bad) pushl inc mov xor cmp lret lds and (bad) (bad) decl hlt fmull mov cmp cmp mov xlat and mov call add pop inc insb xchg push mov rolb outsl xor or inc push sbb loop pop mov ds sbb iret mov jne repnz std arpl mov sbb aas lea fcos or cli mov xor int3 mov (bad) (bad) ljmp (bad) and sbb or xchg scas jae stc cmp dec mov (bad) fildll xchg sub (bad) mov xchg jo mov dec (bad) int (bad) aas rcrl decl and fimull fcmovu repz jmp cli (bad) (bad) in jmp (bad) icebp sbb (bad) mov cmp test ret rorl cltd inc inc lds cld adc cmp push xor sub fcmovu mov xor lods add sbb sbb aad sbb cld push dec push cmp pop adc xor (bad) (bad) (bad) inc sahf imul mov or pop cli xchg mov add stc test divl jne mov ret xor call (bad) fwait stos push repz or pusha int push in (bad) (bad) (bad) push push inc mov int3 fildl imul mov loope mov xor testl push dec pop fnstenv hlt rol mov test (bad) jnp out inc gs xchg ret dec sbb and sub insl xchg dec ss (bad) call mov popa rclb std imul scas pop add shrb ljmp xchg cltd xor fiadd (bad) fisubrl movsl xor bound popf pop loopne cld lcall or loop mov xchg sbbl mov stos cltd dec in insl imul lcall cmp sub imul cmpsb dec cmp decl xchg cmc pop popf mov sbb and sti add xchg mov ret ljmp (bad) popa pop or sub imul and push cmp or test add pushl aas cltd dec loope in pop xor inc fldl and (bad) mov dec push cli in pop xchg test mov push in add scas mov (bad) cmp ja int and xor pop stc jo sub insl adc pusha push dec add (bad) (bad) ficompl dec add jns cs xor sbb push cmp sub call std incl mov jp and ljmp ficompl aad mov (bad) (bad) call and jmp sub jno in lcall sahf cmp outsl scas pop (bad) (bad) (bad) decl sbb stos adc mov fwait sbb jecxz jno iret adc dec inc fisubrl cmp lds adc inc repnz testb inc aad jnp into xchg rcll dec xchg (bad) (bad) pushl clc int3 pop pop mov cmpsl mov and (bad) std xchg xchg sti addr16 sbb sub stos je (bad) (bad) (bad) (bad) ljmp outsb or pop cltd in or jg mov mov mov pop mov or xor xchg (bad) fdivp arpl mov enter pushf pop push mov addr16 scas or lock mull das jmp push pop out xor lods xor ret and aam mov in mov subl int3 cmp ds es imul adc sub test loop mov mov sbb mov (bad) cmp hlt iret xchg cwtl (bad) repnz inc ljmp nop test and jg xor mov int sbb movsb xor outsb mov inc (bad) pop outsb xor icebp (bad) (bad) call adc push pusha out data16 (bad) xor ljmp xlat sub (bad) (bad) (bad) fnop jmp sahf mov stc aaa or loopne xchg imulb dec (bad) xchg iret push jmp std ret (bad) (bad) (bad) ljmp or es sbb pop dec xor jb in int inc mov xor inc bound cmp sbb lods push mov orl cli (bad) jmp in or xor and dec repz sub imul lahf enter jne mov call iret insl and cmovl xchg int push decl (bad) (bad) pushl mov inc mov mov pushf mov mov push incl fdiv xor gs pusha pusha add es aaa mov aaa jg (bad) lcall xchg mov push lods cmp push movsb iret mov movsb pushf test xor pushf mov jmp dec mov shlb sbbl (bad) (bad) (bad) cmp cmpsl mov loop inc add fs dec pop dec xor and sub fildl hlt fldcw sub add (bad) jmp mov stc and dec or fsubr outsl jge jnp outsb mov (bad) (bad) jmp mov addr16 dec lcall push mov je fstpt dec mov push (bad) pushl das xor jne mov call jno add (bad) (bad) (bad) loop shll xchg ja popf adc stos stos arpl cmp fnstenv pushl inc fs sti inc fdivl cmp leave lods mov push push sbb (bad) (bad) push outsb repnz enter shrl mov pop push lods rorb aad and (bad) jg incb cmp int adc loopne out xchg decb stos imul sub das or pop mov mov mov out enter add inc (bad) (bad) lcall pushf gs and test sub clc or mov push push inc aad fldl cmp (bad) (bad) pushl or cmp lahf push xor push jo sub adc cmp (bad) (bad) pushl test mov es aas and outsl lds sarl daa inc cmp je (bad) (bad) (bad) fcoml or das adc xor insb add scas or or pop outsl xchg sbb adc xlat jl pop push (bad) sti adc test mov add (bad) (bad) jmp push sbb push xchg mov push pop (bad) and inc xchg push aas add pop or dec adc pop test jb jg in ret xchg and iret jmp mov xchg mov xchg pop push fcoms stos adc mov aas add int3 mov aas adc inc cmp inc dec (bad) (bad) (bad) decl sbb sbb and and (bad) lret fwait jp or cmp fdiv inc inc (bad) (bad) (bad) incl popa jle inc sbb xor outsl push popf lock adc sti stos push loopne scas ss xchg dec jg mov test rcrl pusha es out orb dec pop push in xchg (bad) (bad) ljmp movsl push ss test mov in sub sbb mov inc jmp arpl mov xchg hlt (bad) call inc scas add jno push ja decl clc scas pushl (bad) push lods mov stos ret in sub or jae loopne test xchg (bad) (bad) decl popa out loopne mov cmp fs scas out call sahf test inc dec xor lea mov imul (bad) call pop bound fistl lea xor and (bad) (bad) call jecxz inc push add in and stos or flds popf (bad) incl xchg sahf and aas (bad) icebp push xor outsb sarb push sahf fdiv push inc and pushl mov and cmp scas jo fucomi add scas pop cmp mov (bad) (bad) (bad) incl es scas lahf leave add or arpl push aas xlat or stos in xchg adc (bad) (bad) lcall es gs or and push sbb data16 add out repz xor xchg sub stos (bad) (bad) incl and test int nopl jo sub sub (bad) mov mov bound test lret push lret lcall repz (bad) std bound mov leave fisttpll or lret sub (bad) dec inc insl sbb fcomp (bad) movsb jg add pop nop inc dec cs push clc adcb or (bad) incl pop shrb pushf dec xchg push pop mov loopne lods mov sbb sub sahf je jb nop jg (bad) dec or divl mov es das sbb subl (bad) (bad) (bad) pushl stos inc inc fcoml daa lods fnstsw sbb int repz aad jle sti adc ret (bad) (bad) (bad) push daa lea mov daa push loop add jle mov sub and lret sub or (bad) (bad) (bad) (bad) jg push loope arpl shlb (bad) aam (bad) push int3 and and ret not mov xchg mov mov mov (bad) cwtl repz push dec dec dec inc (bad) jno pop cmp test clc (bad) incl jne sbb stos outsl push std std jne enter mov aad (bad) jmp mov add rclb mov dec jmp adc (bad) (bad) ljmp cld pop sbb add add add in movsl lcall mov (bad) out xor jp (bad) (bad) sub push rcl es pushf (bad) (bad) (bad) (bad) fisubrl pop push (bad) pushf mov movsb add mov imul add jo sti dec pop arpl cmpsl les sub (bad) (bad) jmp aad sbb xorl mul xchg dec or arpl push jae popa mov nop lahf sbb subb daa sti repnz mov iret jne fldt mov (bad) ljmp and pop push push dec loop or leave bnd mov in lods cmp jmp lock aas lcall (bad) (bad) ljmp and dec or cs (bad) incl sahf jge xchg rorl fnstenv xor mov repnz jmp adc jno jbe adc sbb sbb mov cmp (bad) (bad) (bad) incl inc add repnz into sbb imul jmp sbb xor mov incl pop loopne dec in inc addr16 pop push loope (bad) dec into mov sbb cld adc sub mov hlt inc xchg mov (bad) (bad) (bad) mov mov sti arpl push enter fmul cmp in cwtl (bad) sahf repz cmpsb mov push fstpt pop fiadd lds jae mov in and icebp outsl stc (bad) (bad) (bad) (bad) jl or xor mov jns mov mov mov idiv (bad) (bad) push inc (bad) cwtl popf ret data16 jge mov push les mov cmp js (bad) (bad) lcall mov cltd dec mov jge test loopne xor clc aad repnz xor jg incl xchg outsl inc mov dec ss xchg jae pop or (bad) clc call adc ret insl lods sub (bad) incl sbb xchg cmpsb mov mov push cld jg push movsb loopne mov or push pop cmp jecxz cmpsb out ljmp jg,pt pop jbe mov and jle icebp push jmp sar (bad) (bad) es mov jo mov loop pop pushl pop lock (bad) (bad) mov mov add jae dec test xchg test mov insb mov pop icebp (bad) ljmp imul jl jmp lods stc push add lea (bad) (bad) pushl fldlg2 in das shlb mov pop adc cmpsl cs in imul (bad) ljmp mull adc add or imul lcall push mov push outsl cmc mov push pushf lock arpl mov (bad) (bad) fistl test fs push pop (bad) dec dec sbb pop mov push dec cmp inc ss jnp push test mov dec lods pusha (bad) call mov stc outsb adcl shlb nop sub ljmp ljmp aad push (bad) je sbb lods or int3 stc mov (bad) ljmp scas int ret js jne push insb sub jmp (bad) (bad) (bad) decl cmp pop inc mov pop ror mov cwtl (bad) lea push aaa mov (bad) (bad) (bad) call leave out or fs paddusb (bad) fs mov mov std (bad) incl rcll mov hlt rclb xchg inc lods in fdivrs and stos pop (bad) (bad) call ljmp nop lock nop cmp adc inc xchg lods fwait jl (bad) (bad) in (bad) pusha and roll and rorb int3 das or jns jl movsb xor repz ja pushl loopne cmc or aam enter mov decl test fisubl mov jbe ljmp clc ljmp pop addr16 push hlt adc out and push ficoml int push (bad) ljmp in fistl nop pop sbb push imul (bad) call insb xchg xchg mov sub mov sub add add (bad) clc fadds xor and loop sahf mov inc pop push (bad) (bad) (bad) incl mov dec jns nop popf mov push add ds inc xchg (bad) jo cli scas add call fisttpl ds (bad) jmp scas mov sbb sti (bad) lret (bad) hlt cmp inc jne fnstenv add (bad) ljmp in jl subb ljmp pop xor in aas fiaddl sbb cmp jmp fdivr test jbe sub pop mov sbb adc std cld sbb (bad) (bad) jp adc pushf cmp xchg setae xchg mov cmc jns test movsb out (bad) cld adc sahf outsb mov cli jb loopne outsb jo mov mov (bad) (bad) push dec dec xchg pop pop clc mov jle fbstp (bad) xchg into sub and int3 (bad) je (bad) ljmp mov xor mov insl xchg xor aad and mov pushl cld add js dec (bad) jns aad cli push lahf inc adc mov pop insb xchg xchg fimul mov loop test cmp ljmp pushl xchg lret push inc bound repnz cld sbb mov jge mov push lea jecxz es lods cld add jnp hlt (bad) (bad) (bad) lcall xchg or pop std cmp idiv xchg jg pushl cli insl loop dec out shrl (bad) (bad) call mov (bad) sbb and xchg mov adc jbe roll mov adc repz sub jg inc ret test into fisubrl into std flds call (bad) (bad) (bad) call or sti cmc push sqrtps xor repnz sar or mov stc cmp lret xor mov in out test hlt sbb aad hlt (bad) aas push in call cmp cmp in mov sub (bad) lcall jge jg ficomp mov outsb lods mov mov push adc dec push (bad) and or mov sub inc xchg repnz pop ja stos mov clc enterw jg push xor jno fnstcw (bad) mov push add fmul inc sub xchg inc inc lock (bad) (bad) mov sub sub loope loope sahf lahf fwait pop jecxz mov aad hlt (bad) lcall sub adc out and or ljmp lds push je jbe pop xchg and mov (bad) pushl sar adc or inc and in dec scas xor pop enter sbb popf (bad) (bad) (bad) dec lcall and imul xor in push repz jae jecxz cmpsb jge std stos (bad) imul je rorl scas inc lret add (bad) (bad) lcall jge dec adc lahf cli sub cwtl xchg add cld cmp stos xor sti (bad) jmp popa adc or push jg xchg int or (bad) ljmp or mov cltd mov js mov mov jg (bad) jmp and repnz faddl jle or andb call adc loopne cmpsl lods mov std sbb in (bad) mov shlb fbstp push jp sbb and sbb inc int3 xchg idivb (bad) pushl icebp adc ficom pop xlat mov or mov movsb popa iret xchg arpl lcall pop jo repz stos fwait les lret repz int nop add adc jo les (bad) dec mov mov std fmul inc inc cltd cmp cmpsb mov (bad) decl notb xchg inc xor movsl mov lret cs (bad) (bad) decl pop sub xchg xchg loopne pop stos in add sbb push push dec cld (bad) (bad) (bad) (bad) scas adc push (bad) js push dec sbb out add sbb mov or jmp ds jecxz sub pop insl xchg std (bad) push in div in ds scas popa cs aad cwtl pop frstor (bad) ljmp imul and cmp lahf sbb sub adc shrb mov mov inc cmpsl (bad) lods jmp loop jp sub add jb rol inc call mov jbe lahf gs iret (bad) cli sarb push incl adc (bad) jo sub cmp pop bound call icebp pop pop pop das pusha inc clc mov mov imul cmp insl add aas cmc test out add (bad) (bad) (bad) jle pop dec into loopne fidivl pop cltd and stos pop and aas xor jbe sub imul xor dec jns and out cmp add mov ret imul jg xchg (bad) (bad) decl ret enter xchg (bad) xor lods lds (bad) ljmp cs lock dec pop or inc mov hlt iret in ja jno pop mov ficomp pop (bad) call loopne enter out lret cmp jbe loopne loopne jmp pop cmp (bad) mov addl jmp or jl cli (bad) (bad) pushl push incl jl mov in out mov es inc mov mov data16 loope sarb or (bad) (bad) call inc test or xchg cmp pop pop loope jae,pt aaa std (bad) decl cmp push fsubl incb xor out insb inc adc and jmp (bad) (bad) imul stos icebp and dec cs (bad) (bad) out decb (bad) lret popa push cmpsb pop lods adc adc xchg cltd out sub jmp sbb test (bad) dec stc push scas xor inc and fcmovnu je lods into scas xor push xlat pushl std fwait mov push xchg mov cld sahf cli pop add cltd jae (bad) (bad) (bad) call int jb test mov shll inc and aas push or (bad) or add (bad) pushl imul jge test (bad) shrl (bad) add and push dec jo or mov nop (bad) repnz (bad) dec pop in jno (bad) (bad) (bad) pushl arpl (bad) aad inc lahf repz mov mov (bad) (bad) lcall jae sti xchg (bad) popf mov or test mov pusha ljmp inc in cmpsb dec or scas (bad) (bad) decl test imul aam (bad) xor loop sub dec iret mov jnp push dec dec sahf xchg (bad) (bad) lcall add and and loopne cmp push ds jg (bad) incl ds insb sahf (bad) mov add in in mov jmp out mov cmp sbb test in cld lea loope and iret (bad) (bad) (bad) jmp pop js (bad) jno pusha push mov ret fistpll loop xchg hlt mulb (bad) (bad) mov pop push push jb sbb xchg jb or lds into xlat fisttp xchg ljmp addr16 add xchg mov mov cli hlt adc and inc cmpsb (bad) (bad) pushl adc xor xchg push pop leave inc dec (bad) lods (bad) rclb inc jo sbb (bad) (bad) (bad) (bad) outsb jb lock mov pop cmp dec dec push inc js add push mov mov jmp aam and pop fnstcw mov (bad) (bad) decl (bad) stc sbb fs sbb inc cld or mov daa cmp add sub jecxz xor push and (bad) mov in xor pop repnz cs mov (bad) mov fistpl or into test (bad) call ds leave jno roll push mov js sbb sub xchg stos movsb push push rcrl idivl mov sbbb cli xchg mov mov inc ds lods int3 repz push pop adc incl cld mov mov scas add lea pop gs cmp or mov incl inc sub xor jecxz scas rcll enter test add cmp sub (bad) (bad) (bad) in and mov ss sub fnstenv xor fistpl jg dec hlt subb (bad) (bad) (bad) call pushf jb or dec cmp mov test rclb (bad) (bad) jg js ljmp or dec aad mov xor mov fucomi lcall (bad) cmp fwait pop push jns dec xchg xchg push (bad) aad pop dec je jmp hlt ljmp pop xor add cli cmpsb sub mov ja (bad) fisttp cmp sbb push out cmp ljmp cmp jmp push mov and js jp mov int inc imul (bad) (bad) (bad) decl mov popa lds stos mov jmp out in popf mov ficoml mov inc (bad) (bad) (bad) call mov adc stc or push push pushf xor nop popf dec out loopne lret (bad) (bad) pushl jl fsubl jmp pop mov sbb dec lahf ret leave add (bad) (bad) mov mov pop inc mov loop into pop outsl out mov (bad) (bad) (bad) incl dec cmpsl adc mov lods cld pop jb fcoms aas pop cltd fcomip xor les adc in (bad) (bad) incl inc lret cmp ja aam cmp ficom fistp jle push xchg iret es cld call sub in mov (bad) (bad) mov dec inc jp xchg int3 ljmp mov push jne sbb cmp (bad) (bad) ljmp adc dec outsl adc push mov fs (bad) hlt std aam (bad) pop jg mov mov xchg fcomi sub mov cmpb xchg pushf jno mov movsl scas add jmp adc movsb imul mov mov les (bad) aas xor les pop adc xchg (bad) (bad) (bad) dec xchg dec sti adcb add out int3 add dec jecxz mov int xchg nop (bad) (bad) (bad) pushl mov and lcall mov insl push fucompp call lds push in je pop add outsl jo xor mov (bad) (bad) jg cwtl rcl xchg mov push in in or mov mov xor testb xchg (bad) (bad) (bad) call (bad) in leave jb jno loope jle lahf iret mov out vmovntps pmulhw cwtl loopne dec (bad) (bad) (bad) cmp xor xchg mov sbb jns sbb test std mov sti ljmp mov cmpsl xchg iret orl or dec inc xor in add fidivl and jmp or push jns xchg pop push sub ljmp sahf push in add mov (bad) incl jae daa and into cmp xor dec jno jg mov (bad) (bad) (bad) jg xor push mov jno ds push out add push lods stc dec sub loopne (bad) pushl cmpsl mov notb or (bad) fs pop jb enter call inc mov mov in cmp cmp outsl sub bound xor inc push push cmp cmp (bad) fdivrl int sbb add pop mov mov (bad) jnp jp jns dec (bad) (bad) fisttp push pop sbb add mov push sub out lds mov scas imulb mov xchg (bad) (bad) out jne,pt xchg scas xchg pop and pop mov scas mov loop xchg (bad) js add (bad) pushl test repz ret adc (bad) (bad) fistpll push mov std ret xor sbb xor cli sub (bad) (bad) (bad) jmp xchg adc ss cmp dec adc sub mov inc incl and fbstp aad push bound xchg fcmovbe inc (bad) in (bad) (bad) ljmp dec cmp pop pusha scas mov jo cwtl daa loope rolb mov or mov loope test sbb cmp das ret jle lods (bad) (bad) (bad) decl aad xchg push push pop cmp lcall pop aaa jbe mov ret cs (bad) (bad) inc (bad) roll pop shr je test sbbl dec inc cmp pushw int3 xchg lock icebp sub mov repz mov mov sub dec pop outsl mov pop lock fisubl push shr mov cli ljmp jo scas aad out std push stc std leave dec lret sub cmp (bad) (bad) jmp inc ja fsubrl xor mov adc or xchg ds repnz insl adc push jno (bad) or movsl in shll (bad) mov add mov dec in fiadd inc mov inc icebp sti or add (bad) lcall sub cwtl test sub ss enter xchg aaa xor ljmp add lahf cltd cmp xchg or add sbb aam and cli (bad) ljmp adc jle outsb (bad) mov test pop into jmp inc mov push pop out js mov mov ljmp and ja dec pop dec jns insl and sub (bad) (bad) jmp sub add ljmp inc jp mov lea jecxz mov (bad) cmc sub mov (bad) cmp pop mov (bad) int3 rcrb outsl hlt cli push std ljmp sub and mov mov inc mov pop loope (bad) ljmp leave mov loope (bad) daa fs mov or or sub dec push jge outsb inc jnp (bad) jg ds cmp mov or add sar stos (bad) sbb mov sarl in call push aaa ds jnp test push addb (bad) ljmp jb xor cmp arpl lret sahf mov (bad) repnz pop call das dec mov dec cwtl fsubr in out data16 mov (bad) jo sub (bad) (bad) jle addr16 sbb sysret aaa or loopne (bad) pusha fs call jne inc pop or je jmp (bad) (bad) (bad) incl inc mov ja mov jecxz lret jo ret push ljmp cmp mov mov sbb sbb loope je (bad) outsl fdivrp push mov mov ja push test mov imul outsl lahf loope sub adc (bad) js or icebp clc cs mov add ljmp jo cld mov fildl je mov inc sbb sub adc sbb outsl lret sar (bad) (bad) (bad) ficompl dec and xchg jmp out sbb mov lea roll das sbb (bad) aaa add and mov enter out (bad) (bad) jg ds inc ss loope loope inc jge mov jo cs lret jne pushl std push jl mov in sub imul movsb xor (bad) (bad) (bad) clc jne ds dec push lret xchg into int3 lea mov loope jecxz cli das cli cwtl sahf loop ss cld inc fwait stc out push divl ljmp std out push mov jecxz xor ret jns lret mov (bad) lcall or jmp lret jl popa les add out in aam loopne xchg adc jge das cli test ljmp sbb cmc shl (bad) (bad) jmp xlat lock lahf add js adc xchg mov add sub aad inc sbbl adc sbb inc fs call mov (bad) cmp in pop out jge pop mov adc push jg push addl (bad) fildll add inc enter ja jns fstps pop fisubr sub cld incl mov mov loope imul sbb (bad) (bad) fisttp mov std nop jno cmp xchg ret (bad) pop enter or lods add ljmp push mov pop mov aas inc push jns popf xchg or jg hlt push outsl and aam jle in and decl pop daa imul aam pop das xor scas cmp push cmc mov int lret cmp (bad) call dec gs add mov (bad) mov sbb (bad) jmp in dec dec aas add aad (bad) sub jg sahf pushl xchg out pop les pop dec mov (bad) (bad) jmp xchg inc push cmpb or add mov adc push xchg idivl cs ljmp push scas add notl push mov repnz mov lea jns push inc daa add mov imul scas (bad) mov js and xchg mov or popf lret ficompl cwtl jb xor jmp fcoml mov shrb xor pop add xor out std and outsl lcall inc cs jle dec add adc aam or sub mov decb inc mov pop lods mov ds jmp (bad) or mov repz popa sub pop outsl inc push outsl jo out fwait das push sub lahf sub insb jne fnstenv ljmp sbb divb mov mov inc lahf dec sbb inc fistl cld sub cmp sahf iret pop jno stos pop add cmc scas lret jns (bad) (bad) decl loop cltd aaa pop sbb rcrl push xchg daa mov sbb mov std roll repnz cmp (bad) (bad) ljmp push push leave pop inc imul rclb movsb pop sub mov out je (bad) jg cmp shrl mov std clc loope subb cmp xchg xchg push sub (bad) (bad) (bad) cmp and cwtl fldt mov test dec clc lods inc mov clc pop push les ds xchg clc (bad) inc out popf sbb xchg sahf sbbb jmp aam jecxz sbb cmpsb push ljmp clc incl inc sbb xchg xor xchg lret mov cltd mov jle fucomip popa in mov sub cmp aas inc lods lret cli je lods ret or (bad) je (bad) fcomip push xor popa mov or arpl inc fisubr (bad) (bad) (bad) (bad) cmp clc in sub fwait shlb scas and repz xor stc ljmp cmp call jo das mov movzwl mov push mov jae or insl sub aad fdivr (bad) (bad) (bad) in xchg adc inc (bad) mov push popa add (bad) mov mov imul push xchg clc lcall outsb nop mov pop adc fistpll mov (bad) incl mov arpl or movsl out pop push pop in movsb add hlt mov pop aad (bad) (bad) pushl xor jne rcrl pop sbb xchg (bad) sahf daa sub push mov mov movsb jg (bad) (bad) jge divl lea loop sub flds xor add std inc or fs xchg pop xchg dec push addr16 push dec addr16 js add (bad) pop or cmpsl (bad) (bad) (bad) incl fwait daa jnp mov lds pop cli data16 repnz add incl cld adc mov rcl mov sar sahf adc (bad) xor cltd jo (bad) fidivrl lea sub dec ret mov xabort insb imul les gs mov aam and xchg sub jp (bad) (bad) jmp fisubrl and and insl mov xchg inc pushf (bad) in mov popa and (bad) dec or jl fsubrl movsl mov adc push insb mov jl (bad) rclb sbb add inc push mov (bad) cmp insb mov subl push cwtl pop jno dec add dec mov (bad) (bad) (bad) ljmp fmul xor stos jg imul data16 dec insb and js mov (bad) (bad) jmp add or xor movsl mov sub add scas jae mov and lods pop in (bad) (bad) inc rcrb pop and mov cmc cmpsb and push out (bad) lcall je,pt in imul dec (bad) fwait pop aad or cmp pop add (bad) (bad) jp mov push push enter mov ss push add (bad) ljmp (bad) xor push mov jo mov (bad) mov repz adc cltd fs jmp mov pusha fneni(8087 and push fildl (bad) ljmp inc jmp jmp mov hlt rorb sbb mov ljmp sar call xchg inc push push (bad) pop sbb out nop test cli jo stos sub add loop cmp (bad) (bad) call ja jl xchg outsl jl aaa ja xchg fwait (bad) dec dec xchg xchg or popf dec (bad) (bad) (bad) decl adc pop xchg push stos sbb aaa cmp jns repz jmp and (bad) fsts fld lock mov and sbb incl js cmp popf cmp or (bad) (bad) (bad) lcall clc jae dec mov xchg push cmp rol mov pop fwait out (bad) (bad) jmp clc push mov inc insl jns xor fldt call and sti out dec mov lret mov out dec jmp dec push stos es cmp jns mov jg add pop push mov mov cmpsl fistp (bad) pushl cld xchg aas xchg repnz xchg hlt adc cli insb (bad) (bad) (bad) lcall daa lcall les divb push imul ljmp xchg (bad) mov (bad) (bad) (bad) push enter adc push data16 xor in mov sub or adc sub (bad) (bad) (bad) (bad) mov jmp loop pop ret jp loopne loop setbe (bad) stc xor lods and mov ljmp jmp cmp sub je sbb jg hlt incl cmovb lret ds xor outsl movsl xchg sbb sub mov inc arpl lods stc xchg mov jmp and xchg mov jge cmp repnz (bad) (bad) lcall inc je lcall pop lcall imul mov (bad) fnsave outsb loope inc push or pusha movsb cld sti popf lds cltd cmp (bad) (bad) (bad) out push sbb incb aad lret push test add mov or pop inc (bad) cli or and jnp mov test or mov fist mov mov leave fmull insb or (bad) lcall iret sbb test xor mov ror popf (bad) mov cld mov movsb jle cmp jne,pn (bad) (bad) push sar icebp outsb sbb jecxz (bad) jb and xchg in mov jb stos dec lahf test inc or loopne je dec (bad) (bad) (bad) fistpll adcl dec std pop test sbb mov mov jmp adc adc inc gs pop sub or lcall and lods push mov js enter mov dec xchg sar fcomip jle inc jle jecxz push xchg iret insb inc mov ret mov (bad) pushl mov int3 adc jae xchg mov mov mov imul (bad) (bad) decl (bad) dec push sub mov sbbl cmpsb lcall (bad) (bad) (bad) pushl push outsb adc aaa push inc pop jb (bad) in push (bad) (bad) decl xchg mov stc movsb lock mov ficompl int cmpsl add and inc test adc ss dec fwait dec loop pop stos pop mov test ds inc (bad) fbld rcrb pusha lret out mov lcall test out bound icebp jecxz sub pop sbbl (bad) scas and mov stos inc test popa cmp ds (bad) (bad) dec cmp das ja je cld je xchg inc (bad) (bad) inc rclb loopne flds (bad) (bad) (bad) push inc xchg push in insb dec adc push aad cwtl jg push xor sub xchg push pop cmc outsl cli mov lahf aam and movsl shrb jns jo sti in or push cltd shrb xlat mov or mov xchg (bad) ds clc (bad) decl cwtl popf (bad) nop xchg mov insl pop pop cmpsl in leave xchg mov (bad) incl mov sub mov inc pop mov mov mov cmpsl sbb movsb js (bad) jg mov mov fwait jne aam aaa aam ljmp (bad) ljmp insb add mov test dec jmp add xchg push lcall aam add (bad) dec and arpl int xor ss xor bt (bad) (bad) ljmp mov iret movsb adc jns xor bound push rorb sar (bad) mov (bad) loopne lods adc (bad) hlt jne rorb fwait fwait dec sub (bad) (bad) (bad) incl dec bnd push dec pusha push dec (bad) sub call std mov testb jne jg mov jbe loop lret dec push idivl int andl adc out (bad) (bad) sub jecxz pop (bad) (bad) (bad) (bad) in out or icebp or and mov cmp adc lds mov ljmp cli push or and ret xor dec leave jns push add dec sahf lcall pop rcr (bad) aam iret mov loop push lret addl xchg insl push stc sub ficomp aas imul fist bound jg sub lock ficompl adc out outsl mov mov out push pop es or pop pop rorb mov push push inc sub jbe sbb inc lret mov test pop sbbl les movsb push ds (bad) mov mov in out or or (bad) clc (bad) ficoml mov insb ljmp (bad) lcall push sbb inc push cmpsl push mov mov sbb push out push dec ljmp movsl push cs xchg mov (bad) (bad) mov in pop push call add or insl lret sbb enter (bad) (bad) jmp cmpsb aas cmp cmpsb in mov sti imul ja mov cli sti data16 roll dec mov adc sti push int (bad) jbe mov rolb movsl jge (bad) (bad) push push fist mov dec jmp push loope fldt repz mov je push jno (bad) (bad) inc fdivs fcomi adc ret scas xchg imul fadds fwait mov xor push daa ljmp (bad) (bad) (bad) cld pop dec je ret aad mov push mov sub xchg inc adc nop mov decl xchg aaa fsubrs pop jne cmpsb pop mov outsl ds (bad) cmp aad dec dec xchg cltd aam dec cmpsl sub (bad) (bad) (bad) mov repnz xlat gs inc add push test movsb data16 pusha mov sub out js clc pushl jb add dec adc (bad) xchg push das test mov stc pop ret (bad) (bad) (bad) cmp xor aaa mov xchg xchg mul jp in testl (bad) (bad) (bad) (bad) mov cltd movsl insl (bad) js jp lds cmp mov add (bad) fnsave lods dec add incl setp cld dec add add push push (bad) (bad) lcall push mov mov adc pop sbb nop (bad) call sarb mov (bad) fs inc lods jmp or loopne jecxz (bad) (bad) (bad) incl in fdivl insb mul imul and ret lock and inc jnp mov call or mov xor (bad) (bad) (bad) cmp xor fnstenv test int3 mov and lret adc (bad) (bad) incl pop or pop int push je stc rcll sbb jg (bad) ljmp lods push (bad) int lahf mov ja ds nop les jne js cmp rcl xchg ficom cmpsb aam loopne (bad) (bad) cmp or mov sbbl cmp pop repnz ja fnstsw (bad) (bad) call jbe lea sub jbe movsb xchg es fbld popf lcall call jmp or mov pusha adc or pop add aad (bad) sbb pushl inc cmpsl adc inc stc es cmpsb cmp iret fldcw inc arpl xchg xchg (bad) (bad) (bad) jmp call mov icebp fstp mov outsb pop dec out in push or sarb push sub (bad) (bad) call mov insb xchg decl xchg inc lock subb insl in jne ljmp (bad) (bad) (bad) daa js (bad) (bad) mulps ss popf aam mov fildll fdivrp (bad) jmp inc psllq ljmp adc mov lcall inc ret pushf test inc push rcll sub in jbe fcmovne lods (bad) fbld sbb dec dec imulb fistl (bad) (bad) (bad) jg sahf add or rol mov repnz push (bad) (bad) (bad) decl cltd cmp push ss xchg lds mov fcmove or push pop fcmovu loope adc (bad) (bad) jmp lods outsb and les push jno imul sub inc inc mov jmp jns in mov xlat (bad) in mov xchg push dec es out and decl jno je imul mov ds dec (bad) (bad) frstor in (bad) jo sub xor int sbb (bad) (bad) (bad) jmp pop sbb sub gs mov mov ds es or jle jbe inc loopne sbb (bad) (bad) jmp sub leave sbbb cwtl xchg xchg mov into pusha or lock jb les movl ja xor roll aam sti xchg or outsl mov ss outsb jo call incl cld or adc outsl mov (bad) xor dec push mov cmp mov pop fisubl mov dec shr repz push movb xchg pop xor faddp js cmp (bad) out nop xor out (bad) paddd in es mov xor adc (bad) lcall dec pop jg (bad) (bad) (bad) fistp pop mov int push ljmp mov and in fimull (bad) lcall lds push pop cmp ret sub push xor iret push pushl adc add push adc in movsb call mov mov lret in repnz fwait icebp pop cli sbb xchg sahf and inc pop pop lcall (bad) mov xchg xchg push sarl sbb push mov rolb sbb loope pop mov add je out fs (bad) (bad) (bad) (bad) mov mov in nop jb aad jmp rolb inc mov mov xchg and (bad) (bad) (bad) (bad) ds inc hlt cld pop aad mov out and dec shrb mov mov jno (bad) (bad) (bad) (bad) ljmp test cmp stos sub adc js in cwtl cmc mov sub jmp (bad) mov in jle inc jbe xchg pop pusha push lret cli aad adc repnz mov shrl push jne loope int fisub js into sti pop add jge (bad) (bad) ljmp fs lods aam inc add push sbb inc fisubr jg call rcll xchg shlb (bad) out inc in (bad) sbb std (bad) in xlat out popf adc dec je stos repnz adc lea pop adc lock std mov andl ds push inc jg jo rol sti fiadd (bad) incl andb push mov es lret je jle push xchg sbb jmp adc inc sub add mov mov fstpl imul mov aad (bad) (bad) (bad) pushl jne rcr lret mov imul (bad) and insb mov aad inc (bad) (bad) (bad) call dec mov xor pop push mov xchg push sbb sar jle pop mov cmp ret popf ret push push jg insl loop and stos dec jne sbb (bad) inc mov (bad) incl add inc xchg add ss (bad) (bad) (bad) mov rcrl out cmp leave adc hlt jp mov stc adc (bad) (bad) (bad) jmp imul lods jge mov and lret and insb std (bad) push (bad) jmp lret inc dec adc les or aad aas cltd dec in adc push pop out or jmp outsl push scas (bad) cmp pushf dec or jmp or jle xor (bad) (bad) pushl lock mov sub dec rcll xor sti std mov xchg add pop dec add (bad) jg (bad) fbld pop rorl jno xor jno das inc ljmp xchg mov mov or clc (bad) dec arpl cmp mov and mov (bad) call mov cmp or dec jo out outsb subl lcall cmc (bad) pushl in add shr pop jo int adc sahf xchg (bad) (bad) ljmp adc adc addl jne stc mov arpl inc inc ds in xchg scas loope test test out add ror mov sahf aad dec cltd insl or mov outsb jg mov or scas lret xchg notl cltd pop fs (bad) jecxz cmpsb cmovp xlat adc les enter movsl leave mov cs and adc pop mov clc or mov inc (bad) xor xchg outsb fidiv push clc jle jno sarb insl ljmp movsb mov (bad) (bad) (bad) lcall and pop jns mov (bad) xor pop push je bound fwait rolb dec mov cmp (bad) (bad) (bad) (bad) sti movsl cmp cli sub lock or das notl mov xchg inc pusha scas aaa repnz mov enter or adc fnstsw std xchg adc mov (bad) (bad) mov mov and xor sti enter out cmp mov push push xor ljmp pop lds dec repz rorb jae jg sub rorb xor jge rorb (bad) (bad) (bad) (bad) sub cmp fs xchg mov divb mov repz sub cmpsl inc xor ret mov xor mov cmp scas sbb test push xor lods (bad) (bad) lcall sbb jle xchg sub int3 fwait pop xor jnp mov jmp scas nop mov xor dec sub pop mov pushf push pop cmp movl (bad) (bad) (bad) (bad) mov cli inc sub stc lcall lea aas fidivrl imul mov cs loope fmull les (bad) call cmp jb (bad) pop push sti sbb xor enter clc aas push in stc stos or (bad) (bad) (bad) dec stc inc in xchg roll xchg and or ljmp push or popa mov cmp lcall or dec and and mov adc lcall ds icebp push negb loop dec loop js add mov (bad) jle mov out cmpsl hlt (bad) stc out iret xchg add jae ret dec adc (bad) dec xor (bad) (bad) out popa shrb pop out xor xor jle dec fdivrs scas push or (bad) lcall mov mov jge hlt nop adc (bad) xlat cld repz pop sub (bad) (bad) (bad) call roll das mov xchg adc in icebp fsubl push pop ficomp popa insb (bad) (bad) (bad) jmp (bad) sub daa popa push lret xchg mov sti movsb daa sbb pop test pop sbb mov mov xlat (bad) (bad) out mov js mov push lods inc push stos rcrb (bad) jl (bad) (bad) (bad) dec fdivl add aaa clc or pminub mov (bad) (bad) jmp pop ds pop test es cwtl mov and mov std jecxz cld mov cwtl fwait push insb mov mov ss lods mov push xor or sahf les or jg cmc pushf inc mov (bad) (bad) jmp xchg int3 and pop ja cmp dec sti in mov adc jl into mov mov fcoms out xor sbb repz rolb in add pop inc in (bad) (bad) (bad) jmp cmp inc lgs or ret xchg ja sbb iret das repz pop incw (bad) (bad) push decl rcrl xor mov mov pop (bad) (bad) mov shrl int aad mov cmp xchg daa pop pop sub xor (bad) fcmovnb mov test push jno xor ret mov mov (bad) je push (bad) (bad) call add jmp nop push cmp push and int3 sbb sbb adc (bad) jg pop xlat cmp add inc add test loope mulb call (bad) and sbb aas sbb stos xor (bad) jge pop inc mov mov mov cs ficompl (bad) incl dec mov or mov mov dec clc (bad) (bad) call fld loope sub and xlat mov add fwait dec repnz loopne cmpsl and add add pop out orl push ljmp roll add lahf cld cmc dec xor out inc (bad) (bad) (bad) clc int3 jbe pop pop cwtl dec dec jmp ret cld adc stc mov std decl mov xor sbb pop mov (bad) (bad) (bad) cmp pop icebp mov jle adc aaa sub push push loope (bad) ljmp (bad) lods stos push arpl outsl cmp xor out or push out inc movsb lcall ret cmp pop cmp push xor lcall (bad) (bad) stc pop iret or leave fwait sub xchg es movsl loopne loopne std mov popa dec jo js test in sbbl or lret push ret arpl cld push (bad) mov in pop arpl in into inc sbb or rcrb mov ret push imulb in or addr16 paddusb (bad) (bad) (bad) ljmp jbe js mov and inc sub fcomp std sarb inc add pop add pop addr16 arpl pop dec hlt or pop mov xor push ds mov pop and xor (bad) mov inc xchg push arpl cmpsb cli mov sbbb cmp scas mov mov jns aam pusha cs xor cwtl sub out (bad) (bad) in mov into test sti sahf push inc push cli jnp jne pop push mov lds (bad) (bad) (bad) (bad) clc push lcall movb shrl mov sbb jle sbbl ret push sbb in es (bad) jg addl ljmp add sbb fisub negl (bad) (bad) pushl popf rcrl mov pop loop sbb inc push (bad) or add (bad) (bad) decl push push xchg test stos aas std (bad) (bad) loope lea ret cmp (bad) (bad) call xor ret cs popl push (bad) jb test jmp popa inc fimull jecxz (bad) (bad) (bad) ljmp gs adc inc adcl icebp mov mov scas addl repz (bad) (bad) lcall imul stc adcb aaa jno out and roll or je xchg (bad) push test clc pushf fwait dec jmp (bad) fcomip decl mov adc push (bad) xor mov inc (bad) (bad) (bad) jmp xchg fiaddl jae cs xor jo scas mov ret mov lret (bad) cs inc pop sbb (bad) (bad) (bad) out lds arpl mov lods (bad) adc sbb fimul mov mov jb stos or (bad) (bad) pushl push out mov loope pop scas subl mov not sbb xchg call repnz lret sti or xor std lahf popf jb (bad) cmc jge incl (bad) iret (bad) loop mov fadd aad cwtl xchg mov lods hlt mov daa (bad) (bad) (bad) decl cmc mov cmp out push lds loop push mov adc and adc sbb insl (bad) (bad) (bad) pushl jle clc addr16 inc sbb imul hlt dec pushf enter aad (bad) (bad) lcall daa dec dec mov adc lods xor sbb addr16 call imul mov cs clc jge in jg bound and aaa clc sbb nop insl jl mov sar ljmp push pop jle xchg mov pop sahf inc mov repz sbb (bad) fnsave lea fisttp enter jg (bad) (bad) (bad) push inc push mov lock test sbb mov int mov mov and fdivr inc sbb (bad) cmp enter out and dec test (bad) (bad) fistpll mov shrl mov insb or mov ret data16 loopne loop inc decl int3 xchg jbe rolb mov ja insl fisttpl (bad) out fildll lret pop inc mov mov aad adc in and mov (bad) (bad) (bad) dec jb test roll pushf xlat jno cli jo (bad) insl pop call jge jno fildl incl stos xchg pop push cwtl adc and dec push loop jg xchg lcall dec lahf jmp adc call clc or dec mov cmp (bad) ljmp mov push mov ficoml push add mov (bad) ljmp push cltd (bad) cmpsb jle adc scas or int3 and idivl adc or aad pop mov cmp int sbb adc adc dec and push loope repz mov (bad) mov mov add out ret mov or out scas adc and icebp outsl xchg ds (bad) jg dec push or shl mov or insl xchg mov (bad) (bad) (bad) in xor imul (bad) cmc fs mov jo (bad) cwtl sub das xchg and add (bad) pushl jmp dec mov aaa data16 lock out mov pop in xchg xchg adc fwait and (bad) (bad) inc mov mov std sub outsl loopne packsswb cmp (bad) (bad) mov adc push sbb adc sub (bad) jmp and (bad) ljmp mov lret sbb fwait iret pop aas mov cmc (bad) (bad) jmp push jmp in inc pop (bad) mov in sbb dec xlat adc jg dec mov lcall jo repnz cli (bad) fsubrl jo mov adc dec mov and inc scas mov mov inc mov cmpsb pop cmp sub xchg je sar (bad) (bad) dec sti test js lahf sub mov xchg add jle and imul pop pop mov enter imul pop dec jbe mov cmc fnsave (bad) (bad) (bad) call clc cmp push stos out sbb lods sub pop imul data16 imull inc (bad) ss jl rorl jno ret sub or (bad) (bad) jmp mov adc cmp sbb imul jb dec inc push les popf cmpsl cmpsb inc (bad) (bad) (bad) dec jp inc dec iret sub les pop int3 push call cmp int lret rol fiadd jae in (bad) (bad) (bad) cmp jo xchg fstpt cmpsb mov inc sbb mov aas test call enter sbb lods push les (bad) (bad) (bad) lcall lds mov pop mov rorb sbb aas adc (bad) pushl xor adc mov sub int jnp jnp fnop in add mov pop mov outsb cmp xor arpl (bad) fisttp mov pop mov add int3 clc decl inc and inc mov cmp cmp (bad) incl xor push test mov jo (bad) (bad) (bad) decl rep lds jns mov (bad) jg xchg popa lds or lret leave push jmp mov (bad) jmp mov (bad) gs stos hlt adc sub mov add jbe sub xchg xorl sbb cli fistpll lcall lods andps mov loopne mov (bad) (bad) (bad) (bad) fcomps call fadds fwait xor lcall push mov jmp es mov add in loop (bad) lcall pop sub ficompl push mov sbb jmp or mov mov inc (bad) cld (bad) out cmp stos or out xor push fist (bad) (bad) push dec enter lcall xchg mov pop pop clc xchg sub mov sbb (bad) call (bad) aam mov inc leave stos sbb mov repnz lret pushf sub add cltd out (bad) xchg (bad) (bad) (bad) jmp cmp dec test loopne or movl and pop (bad) (bad) lcall or adc mov lds mov mov jb insb lods pop (bad) (bad) mov scas pop (bad) mov outsb pop xorb hlt pop std mov imul cmp (bad) lock xchg push ds push out aaa (bad) (bad) (bad) fistpll nop pop aad and xor arpl test int adc mov pushf inc cmc adc xchg push cld (bad) incl pop jae pop js mov test cmc xor mov das andl mov cmp (bad) fimull cld lcall pop inc mov (bad) (bad) (bad) jmp push jb imul (bad) test mov cmpsb push inc or fldenv je fisubl push scas aam (bad) push rcrl dec mov push icebp (bad) (bad) fildll mov ret mov (bad) xor syscall adc call out mov arpl jge aaa and outsb pop push imul pop rolb insb js adc push fcmovb (bad) jg ficomp push or jl lds sub test hlt (bad) jg cmp cmp xchg stos mov fwait mov mov add scas popa cltd cmp int3 cmp (bad) (bad) mov (bad) xlat clc add pop xchg leave out in xchg lock insl inc je repnz (bad) (bad) (bad) (bad) jmp outsl or pop call jp cmpsb ret sbb fimul dec dec inc pop cltd push sbb (bad) incl call lods xor imul (bad) (bad) mov test xchg add loop cmp cltd add jg push fild insb fisubr pop cld decl mov jno repnz andl pop or (bad) (bad) lcall cld scas and jo inc or je (bad) imul adc aas inc push adc (bad) decl enter xor push outsl mov xchg mulb pusha dec leave cli sub dec inc and push ds (bad) lcall mov inc xchg (bad) es fdiv cmp jno jb iret fdivs arpl push shlb arpl repnz in lcall call inc mov jmp or test sar cmpsb mov or lcall loopne mov pop push mov lcall (bad) std mov push (bad) or adc sbb push rcl iret jb pop int inc adc or ret and (bad) ljmp ret xchg jno lock orl jg push lcall sbb push xor add sub mov sub mov repnz (bad) (bad) lcall call jne mov cmpsb jecxz (bad) pop dec je pop (bad) xor enter inc ljmp xchg mov in sub sarl sarb std (bad) (bad) decl aam push mov test lcall xchg mov jmp xchg movsl jl (bad) (bad) pushl dec hlt cmc leave mov mov insb hlt aaa dec xor loopne cmp shr (bad) (bad) mov insb pop cld (bad) out (bad) loop icebp cli and adc dec push sbb scas (bad) (bad) (bad) jmp pop xlat inc into outsl mov repz fisubr dec or inc lods or xchg push faddl or (bad) fcomip (bad) fidivl ret mov addr16 fwait ljmp (bad) jg mov push sarb sarb jnp mov ror pop or jg mov inc sbb cmp (bad) (bad) decl push mulb sbb cmpsb les jge mov sub (bad) (bad) mov lods sbb sti or (bad) or dec sti add stos icebp outsb clc mov sbb jecxz dec mov mov cmp sub pop mov inc mov arpl jno arpl (bad) scas (bad) out arpl (bad) mov pop int3 mov rol incb mov mov push add (bad) (bad) ljmp sbb xchg cmpsb mov out pop xchg push jmp xchg xchg or mov ljmp popf dec sub dec inc (bad) jg incl xchg aad repnz test lds stos or (bad) (bad) lcall (bad) sub dec xchg mov (bad) push sub ret push push push mov ljmp mov mov mov faddl dec mov or (bad) ljmp sbb loope jbe ret nop dec into xchg xor (bad) call sub jbe jmp dec jns loop sub aaa repz adc (bad) (bad) (bad) incl pop mov and xor push inc arpl outsl lock adc aad decl xchg inc ja or addl pushl clc xor ljmp mov push mov pop ds (bad) (bad) jg fsubrl pop mov (bad) adc das or insb data16 mov push icebp mov and push or dec cli push add mov add ror imul push xor fmul (bad) (bad) (bad) call stc xchg xor inc in or jbe push xchg inc repz (bad) cmp addr16 bound shrb outsb xlat push xor mov mov (bad) (bad) jmp loop and ret stos xchg pop push lea mov mov in sub stos mov call sub mov (bad) ds add sahf aas popa xchg adc (bad) jg sahf (bad) (bad) mov ret mov jmp out clc (bad) jmp inc cld int3 ret push mov sbb cltd fbld test cmp (bad) lcall aas push ja sub aam sahf sub adc sbb movsl stc js xor (bad) (bad) (bad) lcall pop adc lock popl jmp ja clc ja cmc sbb sahf mov mov (bad) (bad) incl enter jnp mov js lods ja sub xor jl mov cld (bad) (bad) decl pop or lds cmp cmpsl int3 sbbl (bad) mov sbb subl (bad) incl ss jle cld test nop sub pop out xchg and adc ret ds movsb mov add mov stos or xchg mov inc aam mov lods insb inc out (bad) rcl add (bad) (bad) decl add jne inc mov pushf adc mov out pop repnz lods (bad) (bad) (bad) ljmp cmp hlt stos aas inc sbb mov mov inc (bad) movsb incl inc pop sub or arpl les or (bad) (bad) incl pop xor rorl dec out cwtl mov pusha pop rcr mov loope cmpsb or lods push mov mov mov movsl rcrl dec inc das mov movsl loop mov dec mov incl sarb cmp xor stos rcr xchg xor (bad) (bad) (bad) call or mov adc cmpsb dec push leave jnp jnp push jle sub add cmp addl scas das and sbb adc (bad) (bad) call sti sub rcrb cmp pop dec xor push mov std inc arpl sbb dec add sar ljmp dec or sbb mov int push push popf (bad) pusha xchg push cmpsl imul pop sahf xchg dec test pusha jnp pop scas sti cmp jb (bad) (bad) jmp xor fdivrl int3 pushf or jmp sti push mov cli outsl in mov (bad) (bad) call aam gs ficomp sub sub xor (bad) and inc std lret fwait mov int3 psllq sub mov pop jo or jae inc es inc ja enter sar (bad) (bad) out cld add push jns cmp aad test rcrb jge xchg popf jg and cmpsl in ss test insl or leave sub cli mov jp cltd xor lock aas jno adc (bad) stc fnsave fmulp (bad) ljmp fs ds xor mov xchg jae pop mov xchg lcall lods (bad) fiadd xchg dec (bad) call movsb fisubr push push sti or sar pushl sub mov stos sahf ffreep inc test jnp incl aaa dec rclb xchg lock fist (bad) pushl sbb push push xorl pop jbe pop pop lods out cli adc nop cmp jns (bad) ljmp xor jp xchg ffreep sbb clc jmp pop inc dec loopne bound and or ljmp jmp in pop mov cld fsts pop inc xor jecxz les test insl int3 push (bad) (bad) (bad) pushl fisttp leave lahf int movsb cld daa add sbb stos lods xchg jno add sti xchg hlt ror in mov es xor (bad) jg mov pop (bad) mov xchg inc dec pop xor out pop push fdivrp (bad) (bad) (bad) mov pop lock les pop mulb data16 jb aam pop test mov cmp or faddp (bad) or push int mov mov add shl in repnz (bad) (bad) ljmp dec imul mov test push (bad) mov in movsb (bad) (bad) (bad) push loopne add cmp add dec iret push scas push add sbb sbb stos (bad) mov (bad) (bad) (bad) decl pop addr16 jl jl cs ja faddl push mov lret dec mov fucomi pushf call loopne and fidivrl xor and data16 popf add jg sbb (bad) (bad) (bad) mov and adcl jo sbb pop ret sbb lods sub push pop mov cmp (bad) jmp cli mov adc cli push mov push addr16 pop mov outsb retw adc out mov decl ss jno xchg mov pop mov adc cli push mov xchg sub adc mov jae mov mov inc sahf nop fwait add sub or cltd in lret mov cmpb pop sbb cmp xchg clc (bad) lcall imul fnop (bad) lods cltd ljmp dec mov mov and and or dec scas pop shlb pop (bad) add mov (bad) incl pop clc xchg sbb out jecxz out test repz xchg (bad) incl sub mov repz scas les dec fisubl jge push add (bad) stc add out popf mov xor sub adc lret aam (bad) (bad) mov test mov daa imul (bad) pop cmpsb js (bad) (bad) (bad) (bad) fcomip dec cmp mov fisubr push adc jge fwait sbb inc ljmp pop lcall ljmp jne fdivp sbb jbe jmp loop jecxz fwait mov mov push inc mov pop add fldl inc inc and pop jb (bad) (bad) mov push push jno cmp push cmp lret fwait push outsl ficomp (bad) (bad) cli xor jo lret pop data16 push out das dec (bad) movsl test mov inc ljmp pop mov push pushf repz sbb fcoms or cli jecxz outsl jmp (bad) (bad) cmp clc jae mov popf add nop addb cmpsb mov mov mov sub addr16 bound add add rclb push push insb inc fs (bad) (bad) (bad) jmp fcmovnu and mov cltd inc addr16 xchg or add xchg add (bad) xor xchg ljmp ds adc push fmull iret cmc push xchg pop ret mov insb scas jle lods dec (bad) std push xchg (bad) outsl pop mov cmpsb (bad) mov xor adc mov mov (bad) (bad) (bad) ljmp dec aas xor enter and stos mov xchg bound shl mov rorl jl push pusha (bad) (bad) lcall sbb pop add into imul inc jno adc dec xor lcall inc lret js (bad) xlat hlt push rcll insb jb clc (bad) (bad) fstl sub pusha sub ret sbb sbb loope push adc sub xchg lock pop (bad) lcall xchg mov xor gs pop ficoml stos (bad) (bad) (bad) call add jno pop mov mov dec xlat cmp sti pop shl lods and (bad) (bad) (bad) (bad) clc sahf pop cmp mov mov or dec test xor insl mov cmp pop sbb loope (bad) pushl ficom insb cld xchg add sub out fsubl loope mov inc pop in fwait (bad) (bad) (bad) aas cs adc fimul lcall rcll cwtl sub jne pop (bad) jl out jl dec dec dec andb sarb or pop and push jp cmp (bad) (bad) ljmp and roll movsl mov divl imul lea fdivrp (bad) (bad) call aam js aad (bad) xor andl push xorl push (bad) (bad) (bad) dec jmp inc add jae test rcll xchg push mov lahf sbb pushf push pop push sub push or popf outsl stos push adc sub jg (bad) (bad) jmp adc fwait push xchg ret out jmp pop sub out push scas sub xor xor (bad) incl (bad) test mov jns and xchg xchg sub popf mov das popf divb adc insb cmpsl and aaa dec pop inc fwait idiv (bad) mov repz (bad) mov adc mov ficompl push xchg sub jecxz dec and (bad) (bad) pushl (bad) scas in ficoml aad in sub push lea and pop lea stc and iret (bad) decl cmpb xor es nop mov mov jae incl and jp (bad) addr16 imul sub pop (bad) (bad) (bad) out or hlt cli or shrb jge (bad) int mov scas mov sbb pushl mov dec rol jle sbb sbb pop test dec ror (bad) (bad) (bad) incl pusha lods pushf jns xor sub xchg jnp sbb fstps dec (bad) (bad) (bad) jmp xor mov or icebp add mov mov adc push andl (bad) (bad) incl outsb daa cld mov gs (bad) or call fcomps (bad) (bad) (bad) dec xchg pop xchg or aas pop cltd cwtl sub push (bad) lret xchg or stos mov (bad) call data16 jmp or outsb aas ret leave sbb les stos cmp cmpsb xor or fwait cmp cmp hlt ja mov call mov xor inc mov repnz dec and ss mov ss and add in jle add inc dec inc sbb xchg jmp or cmp mov cmp pushl or jae,pt and or cmpsl out ss (bad) dec sub mov out movsl out imulb mov (bad) (bad) (bad) cmp mov inc push cmp (bad) ljmp out and lock or leave ds (bad) (bad) (bad) out jg test inc sub pop xchg enter mov pop mov js cmpsb mov cmc (bad) (bad) (bad) decl mov repz adc std sbb dec mov mov push insb lds pop stos mov (bad) jmp jecxz in rcr push push xchg test xchg xor (bad) jg loope js jp xor sbb xchg xchg inc mov mov jne dec rcr sbb pop ret add xlat jbe xor sub out ret (bad) (bad) lcall aam jns ss into jl xchg iret test add lea lods jbe xor fidiv fsubrs xor (bad) dec (bad) (bad) (bad) jmp sbb jo out testl (bad) push mov push test push sbb popa jmp addr16 adc lods push mov push pusha sbb ljmp imul mov inc cmpl ud1 sahf mov jg test mov lret push adc (bad) (bad) decl xor xlat sbb xchg in add adc mov pop (bad) decl addr16 scas movsb pop push inc jp pushf and lcall xchg inc fs jnp push jp outsb adc divb repnz mov xchg lret mov fidivr jae push and scas mov das (bad) (bad) (bad) decl pop in or call jb and mov jno je and push (bad) mov cmpsl mov out jbe aad scas mov lret mov mov insb (bad) adc jg call or dec lahf (bad) cld out hlt bound mov and (bad) (bad) (bad) mov inc mov es in xchg cli cmc lods add xchg inc aad add xchg sub (bad) (bad) decl insb dec imul jmp mov imul xchg aad (bad) (bad) (bad) incl inc push jne ret push fdivr fiaddl call mov sbb incb adc (bad) (bad) (bad) (bad) jmp push xchg and mov add mov dec (bad) mov pop aad cmp mov cli cld pop cmp fstpt out (bad) push or add cwtl ret mov insl jne fisubl movsl pop dec cld (bad) decl in xor pusha rcl jne dec dec cwtl mov xchg push (bad) (bad) jg mov jnp mov ja mov test mov and (bad) (bad) ljmp ss out mov push insb test ds add mov mov pop dec (bad) (bad) (bad) jmp cmp push ljmp sar (bad) into dec and fwait ret jb pop or lcall or xchg xor sub ds fmulp ret aas pop aad bound jg call std pushl add jp ror popa outsb out add gs fstps cli (bad) jmp cmp cli xchg lds cmp or and cs pop fisubr cmp push ds (bad) (bad) inc pop cli imul inc add and mov push in ret jno pusha adc stos push xor (bad) mov cmc fidivr mov fsubl cmpl es popf xor or ds aad fcoml xor imul push or push xor out (bad) ret xchg lods (bad) pushl (bad) xor in outsb and das ds in rcrl clc sub adc xchg hlt xchg sti aad fdivr (bad) (bad) pushl out cltd push jb in stc add das repz cmpsl jg xchg jne fs cmp pushl arpl mov sub fisttpl inc mov data16 mov mov les (bad) (bad) (bad) incl divl cltd int out stos in in adc cmpsl in inc out test push sbb fucomip mov (bad) (bad) (bad) incl pop mov inc jns sbb in rorb call mov call inc (bad) push (bad) sub jmp ja sub xchg mov and test (bad) pushl jbe mov or add ja (bad) push ss pushl cs test sti inc cmp cli in into mov xchg sarl scas cmp es inc mov mov inc mov sub ss (bad) (bad) (bad) (bad) decl or pop negl jb add loope mov pop fdivs (bad) inc push (bad) pop fldcw and jbe cli push mov (bad) (bad) inc pop fwait arpl push mov inc sub lods xchg push mov push (bad) (bad) call jns cld int3 mov mov ret out test popa push movsl xchg and jle jb cmp sar pop into out adc jno push inc sbb stc jmp xchg xchg mov (bad) (bad) (bad) call xchg cmpsb mov fsts push test shrb xchg sbb nop nop or (bad) ljmp xor mov inc aas mov xchg jle add inc xor mov xor stos jns orb rcrl cmpsb jmp adc subl je rorl cltd xchg movsl cltd ret loop inc cmp call fldcw (bad) jnp inc (bad) mov pop pop in jmp dec mov imulb mov (bad) push iret arpl xor movsb jmp dec xor add xchg xchg mov icebp call pop ret push push bound int and (bad) xor mov sarl (bad) (bad) (bad) (bad) mov lods jne ds sub nop and push scas cmc pop (bad) sub push test xor inc push fnstenv bound mov clc cmp loop (bad) jmp mov sub jbe subl xchg jl test adc push cs pop mov cmp mov call lcall mov daa lods (bad) sbb and out aas dec icebp pop (bad) decl add dec mov and push xchg in mov sbb insb add sub aaa repnz (bad) mov mov loop test cmp mov mov mov dec ret mov and js xchg and and (bad) pushl sbb adc xchg push ret cmpsl jecxz test icebp lock ret lods rcr sbb cmp fcomps (bad) (bad) (bad) jg ds mov aas inc xor mov int sbb and jge pop hlt (bad) mov enter out subl stos adc (bad) xlat sbb or (bad) (bad) pushl hlt or push in stos loope daa cli aas mov (bad) inc rcll imul (bad) mov mov or fist loop xor jp push fsub std pop jmp popa cmpsb addr16 loope mov jno push icebp push (bad) push pop popf mov fwait push mov ss decl and push cmc aam cs or and lods fcmovnbe sahf (bad) (bad) (bad) lcall sbb pop add iret stos hlt cmc or sbb bound and inc (bad) (bad) (bad) (bad) stc xor and fwait ret clc ret sahf fs mov leave loope push (bad) (bad) (bad) (bad) cmp scas jle and pushf adc and adc pop std cltd cmpsb mov (bad) lcall popa loop cli ss cmp sub mul inc mov push adc push (bad) (bad) call rcll out jle sbb movsb push mov xor cmc cmc rcrb xchg xorl mov cmp in xchg in push rep sbb inc subb jl,pt xchg push shll cmpsl mov mul test cld (bad) call iret mov lds sbb fnstcw (bad) lret (bad) jg test fistl ja dec and cltd lahf mov mov (bad) incl sub stos rcr addr16 out and punpcklbw ja adc push or (bad) (bad) jmp inc pushf or pop push jns add mov out sahf es xorl jmp rcrb xchg pop icebp or in mov and and jge or (bad) lock (bad) (bad) (bad) (bad) cli fs push mov pop movsl pushf (bad) in cli fstpt movsb mov fwait gs movl (bad) mov dec xor push roll fstl mov (bad) (bad) (bad) decl (bad) test jp adc test aad mov test mov adc mov hlt jg lock mov int3 lods roll lock pop aam sub inc test sar dec cmp mov jne mov jb imul mov jo xchg (bad) repz loop repz xlat das or or insl fisubr cli (bad) incl sbb sbb mov push int cld cmp inc loop cmpsb sub (bad) xchg (bad) incl inc add aas jmp cmp jg mov mov xchg popa rcll push iret in push jg pop xchg pop repz mov incl mov cmp (bad) call pusha sti push mov leave insl cmp pop add pop daa jle pop add pop stc xor or mov add mov ret jge sarb sbb add cmp hlt addr16 xchg cld adc popa (bad) call lcall iret sub adc enter loopne push ds push and ficom out clc lcall andl dec out xlat cwtl pop lret or test lcall mov int adc xchg xor call loopne dec lods cli jo jns push adc pop cmovs (bad) xor mov fstps icebp inc push std (bad) jmp jp cltd lcall push mov (bad) popw divl shlb pop pop inc or sub mov pop inc jmp cld sbb aam mov lods psrlq (bad) in call popa jmp jl arpl push ja in cli (bad) (bad) lcall fs lret mov mov dec divl (bad) jle stos into into dec pop call std das sub push xchg loope outsl push (bad) jns or dec testl incl lcall add insb xchg stos lds dec and incb or or dec (bad) (bad) mov sub sbb dec dec aam pop xorb loopne dec sbb in and (bad) mov mov repnz mov (bad) (bad) (bad) in jnp test adc mov (bad) mov mov fwait jmp bound push pop ret gs sbb xchg mov (bad) ds jl (bad) (bad) jg cltd mov repz test jnp mov push stc xchg pusha pop mov push pop pusha lea cmp push das shrl fdivl pusha in clc jg ret and lcall add cmp js inc jmp cld (bad) out inc mov bound mov sahf push subl daa (bad) (bad) fbld pop ds fstl sbb fistl (bad) (bad) fldl scas adc lds int ret mov mov aas sub inc mov xchg push lret cli jmp iret xchg sub xor push inc scas sar (bad) call daa xor inc fcompl test (bad) fiaddl push cmpsb xchg push shl pop je iret pop frstor icebp (bad) (bad) (bad) (bad) fisttpl daa mov fwait adc out sbb outsl pop pop add aam adc hlt popa out stc xor jg test or xchg clc mov bound pop xchg sub sbb adc (bad) (bad) incl jb loop mov push ljmp mov or (bad) (bad) mov ds mov flds push mov jb mov inc inc xlat push js mov mov push test repz sbb jbe cmp cli pop decl out pushf and je (bad) pushl and push push lods add mov add xchg fwait mov loope pushl add mov mov rcll gs (bad) (bad) fsubs outsl hlt pop mov mov (bad) lahf or sarl cmp nop cs cwtl mov adc fisubr out (bad) (bad) pushl xchg adcl sub stos pop bound add mov (bad) decl xchg fsubl dec mov shr rclb pop popa test (bad) (bad) jmp dec or fsubs mov mov lahf (bad) xchg push jmp dec xchg (bad) incl cld sub lcall aaa ljmp outsb cmp call cld lock cmp cmp mov lcall add push in xor mov (bad) (bad) lcall pusha add cmp mov jl cmp fcoml les lock icebp sbb stos (bad) fcoms push lcall adc ret push shlb pop fldl cmp std (bad) (bad) dec insb mov pop push popa pop cmpl jle movsb push mov out ret pop mov jg or adc js mov pop sub xlat jmp xlat inc jmp cwtl add cmp mov aam (bad) (bad) (bad) jmp test pop cmp icebp mov pusha rorb not in movsl xor mull insb ds and loopne (bad) decl xchg lock cli push cmp scas xor out pop lock push and (bad) jg and mov sbb cmp pop push (bad) (bad) lcall outsb and scas mov inc fwait shrb (bad) xor sar fcomip decl dec inc inc inc push sbb inc jmp jne,pn iret icebp dec popa pop mov mov (bad) call cmp add mov mov rorb js,pt loop aas mov insb fldenv push outsl jo pop es pop (bad) sar jg add (bad) cmpsb pop movsb mov lock mov dec inc enter push pop dec hlt fcomip jg dec (bad) inc pushf in ret adc lea in mov mov fistp shr cmpsb stos and pop cmp and sbb int3 push mov mov decl adc aam loop insb loope pop out ret pop mov lock ljmp call cli cmp jne clc fldcw gs mov out jbe (bad) (bad) (bad) pushl lret loop pop int3 loope aad cmpsb loope xchg xchg adcb outsb push mov push cmp mov hlt adc (bad) mov lods stos adc push mov scas js imul xchg sub inc jne jo fsubrs dec arpl outsl clc (bad) jl xor mov ja popf lods sbb jp fmull push fsubp (bad) (bad) (bad) jmp iret in push loope nop cmp jle outsl lds sbb fwait sub ja sbb jmp push xchg ds xor pop mov ret sbb mov jmp sub scas out dec sbb xchg xor mov add push fs sbb jmp orl cwtl fmuls clc inc mov and sub and (bad) das and aad add push (bad) (bad) call mov adc test loope add xchg adcl and mov inc hlt (bad) sub test sub (bad) (bad) (bad) fistpll cmpsl push and mov mov xchg inc adc pop loop dec outsb std stos or xchg mov pop push int cmp aad sbb lcall incb mov or pop (bad) mov insl fsubs (bad) (bad) fcomip std dec mov xchg es cmpsb adc xlat lcall lods inc dec (bad) (bad) (bad) (bad) mov jl push jmp outsl push dec xchg mov (bad) adc lret test repz call cld pop call cld pushl mov adc fidivrl rcr jle xchg dec push popa enter iret adc decl add ffree (bad) and jmp fcoml mov ss lock sub out pop ret cmpsl (bad) (bad) (bad) lcall mov sbb mov ljmp push cmp clc ja cmp (bad) (bad) call cs (bad) rcl or fstp fistpll sbb adc (bad) (bad) jmp or cwtl adc call sbb sbb pop pop test repz int3 adc (bad) imul mov (bad) arpl jae xchg xor int3 cli ljmp jmp ja adc mov add (bad) (bad) ljmp (bad) jae mov jb xchg stos xchg in cltd mov fisubrl pop push nop es lcall (bad) cs mov push mov (bad) (bad) aas push ja mov add mov icebp mov arpl cld fwait xlat (bad) ds (bad) mov dec push dec (bad) pop jp add cmpsb and scas xor (bad) ljmp mov mov xchg fadds mov (bad) cwtl dec movsl insb adc bound push (bad) (bad) (bad) cmp (bad) push ds fbstp add lret sub idivl (bad) call dec out arpl test aaa std decl nop out jl mov sarb movsl and cld mov (bad) (bad) call addr16 (bad) jl inc jp cmp lret inc imul sub (bad) decl (bad) push sub dec pop add pushf xorl pop leave cmpsb repz xor icebp push call cmc push or stos fwait jl in jg stos jecxz in push cwtl cli dec adc jbe outsb mov imul incl in cmc in aaa jbe or (bad) fistpll pop fdivs or scas imull loope push jp and or pusha add call (bad) xchg adc cmp sub out adc pop xor cmp lods sbb decl add inc adc dec (bad) ficoml dec arpl neg popa ljmp sar push pop and inc dec out ja sahf push leave (bad) (bad) (bad) (bad) lcall pusha jl aam sbb jp add (bad) jb mov xchg out sbb aam add cli (bad) pushl cltd fwait (bad) in sti out outsb adc gs pushl sahf push sbb (bad) jg lcall mov add push adc push lds stos ret jb (bad) fcompl pop push dec fldlg2 lods jbe pop test mov cld mov fwait dec nop stos out fsubl ss incl cli push inc xchg mov imul mov (bad) (bad) lcall sub inc imul sti sub fs inc movsb lea xchg (bad) adc pusha add (bad) (bad) jmp shr or pop std hlt lcall cs sbb (bad) pop stos fcomi out pop jmp (bad) (bad) ljmp pusha aad rcr enter lods jns add shrl xchg repnz lcall cmp outsl add jo jge in movsl popa rcl xchg outsl sub (bad) (bad) (bad) jmp iret stos mov orl rcrl pop out cli adc jno mov cmpsl inc jnp push dec adc push mov enter (bad) dec pop inc jno ds (bad) (bad) (bad) mov arpl sub push std mov test sti cmp rcrb ja hlt xlat icebp push inc lock enter jno in (bad) or scas (bad) call jecxz imul in jb fild inc xor mov push aas ret (bad) (bad) (bad) incl mov add (bad) push push inc adc xor leave jg,pn jbe popf lock stos (bad) lock daa lahf ffree push adc sbb lcall js mov test sub dec in add (bad) (bad) aas xor aam enter pop sub out push or xchg ret (bad) call cmp nop cmpb sub ret push mov imul (bad) xchg and out or test inc fcmovnbe xchg xchg ljmp arpl int ret (bad) jmp (bad) stc loopne clc jne pop mov sbb popa (bad) (bad) (bad) lcall jecxz dec sub xchg (bad) cmc push ror push lcall fdivp xchg push adcb mov ds (bad) (bad) mov loop fwait xchg pushl pop sti rorl inc pop lcall pop xchg push das addb sahf ret adc (bad) (bad) (bad) pushl icebp lds add mov mov xchg dec sub out push in and (bad) (bad) incl inc dec enter jnp or mov fimul push sub add jmp xchg shlb and (bad) (bad) (bad) jmp push jb cmp decb rcrb cmp aas iret dec dec xor mov (bad) lcall hlt pop pop stc fs and aas ror lock aam xor (bad) (bad) decl inc xchg pop or mov dec rol std jecxz fsubrl push cwtl push add std inc adc das mov not cmp xor fs mov cli (bad) ljmp (bad) repnz test sarl out outsl test ljmp stos aad mov (bad) dec clc das movsb pusha xchg data16 sbb rorb ss (bad) pop lret insl arpl xchg mov loop mov xor aad aad into mov pop mov add pushl lret mov in jmp or push mov adc sar (bad) (bad) call push pop out fs ja data16 test push in jp (bad) out dec ret xchg les mov push fstpt inc icebp mov inc jl out jl (bad) hlt push adc add out cli enter sub push stos popa aas aam xchg popf and (bad) (bad) mov pop hlt jmp orb dec or and shlb ret mov pop (bad) (bad) (bad) (bad) mov cmp (bad) mov pop mov cmp jmp imul rcl jp bound (bad) mov aad negb pop mov adc sub out push aas and sub hlt test and dec sarl popf enter (bad) (bad) pushl ret lods or pusha lcall sti std sbb mov iret or pop fimul push in inc call push jb je lret push (bad) (bad) (bad) incl mov ljmp fisttpll lods out les cmp mov cld movsb mov pop jp enter das inc mov cld aaa adc (bad) (bad) call les stc or das daa jl cltd xor (bad) (bad) (bad) (bad) jge repz cmc out pop xchg insb sub imul push mov pushf jg adc mov (bad) mov in push pop xchg mov sbb and cli jmp (bad) xchg rorb scas and dec and (bad) call roll hlt int3 out data16 popa add add cld dec jg insl or test add test int3 shll mov jg (bad) (bad) (bad) (bad) mov out xor inc xchg xor pushf pop lret outsl mov add mov adc (bad) (bad) (bad) jmp or push orb imul clc cmp cld (bad) xchg cwtl (bad) (bad) (bad) push inc pop imul fsubrs leave mov (bad) push lcall fdivrp call call hlt jne mov cmp lahf and add ret out dec mov adc (bad) ljmp insl sbb mov xor int3 ss cli bound cltd mov lcall mov inc adc (bad) push loope mov cmp and mov xor nop sub cmpsl mov negl push mov sbb mov (bad) (bad) (bad) mov aas gs xchg jnp push push imul lahf push dec cmp insb ds or popa (bad) negb lcall dec movsl add mov jb sub jge sub pop and lcall call pop cmp popa push shrb add shl mov pop or lds (bad) (bad) (bad) call fiadd cmc cs stc mov arpl dec pop jle stc nop dec push jns adc repz sbb (bad) (bad) (bad) (bad) in lret xor pop adc sbb pop inc fs inc sti jl sub dec jne or pop add mov lock mov roll repnz adc jb inc cs sub clc call or rorb fldpi push (bad) (bad) (bad) (bad) fisub sbb je xor mov sub in lret je (bad) (bad) (bad) lcall movsl xchg cmpsl subl sub mov mov pop cli dec fcoms (bad) (bad) (bad) lcall mov mov rcl out inc dec jmp sbb daa lahf cmp lods push fsubs pop (bad) jmp push sub decl jp or movsb (bad) jp outsb mov lcall popf jo stc fadds jo xlat cmp stos jo pop add cs mov jg fwait clc out mov or aaa pop lret lcall lcall notl mov and ja inc lods dec sub decl test aad lds in pop pop inc jo outsl cmp (bad) and push cli btr jne mov js xchg insb push adc sub cmp pushl xchg pushf mov xchg cmp xchg and call mov std mov (bad) (bad) (bad) lcall (bad) icebp jb (bad) or bound xchg pop fcom lods xor es or inc or dec cs adc or (bad) (bad) fcomip cmc loope sbb push ret cwtl rorb mov lret jae pop stos mov (bad) (bad) (bad) pushl cmp insl test aas mov out outsl in and jne pop repz into popf dec dec int3 mov lea es fdivp les das inc addr16 push rcrl inc add (bad) (bad) lcall cwtl lret fistpl es mov pop cli xlat popa rorb mov mov push pop ja sbb (bad) (bad) (bad) (bad) cld push std push rcll sbb jnp or xor sub js jmp call add clc sub pop xor sahf insl mov mov and pop xchg mov push pop sar shr dec ja ds jo mov sub sbb sub cwtl mov fstpt (bad) (bad) ljmp inc push or xchg test loop jb sbb mov scas loopne xor icebp (bad) (bad) decl add cmc imul pusha (bad) (bad) scas leave mov das pop cld mov inc add cltd xchg pop or mov aad (bad) lcall lret pop jno jp dec cmp xor xchg subl cs mov (bad) mov bts enter push inc adc data16 fdivp rcrb jmp inc sbb pop push imul lret add dec scas mov xlat lds (bad) call pop adc pushf xchg fs or sub (bad) (bad) (bad) jmp push mov (bad) push or xor pop adc pop mov push dec incl add adc dec mov push xchg aas aas lods (bad) (bad) pushl pop (bad) sub fs xchg (bad) xor adc (bad) mov in inc xor cmp (bad) repz lds sti (bad) (bad) ljmp repz jbe dec loop jecxz cmp sub int3 inc idiv inc inc cli dec jecxz pop sarb js,pt icebp xlat (bad) xor (bad) (bad) mov into int mov ret sbb push scas and jecxz (bad) (bad) call xor arpl mov mov push rolb (bad) inc mul xor (bad) (bad) pushl dec jno lods xchg xor cmp (bad) data16 imul in add inc cmp leave (bad) jnp es dec inc xchg lods stos cmpl ljmp fdivrs js push iret imul cmp xor (bad) movsl mov cs addr16 fwait or sbb lea sbb (bad) (bad) lcall adc push pop push push adc neg add sti xor inc ret ja jg jmp mov xchg push rclb test or inc in inc (bad) jmp sahf mov add (bad) int mov test loopne mov inc mov or imul movsl or out xchg out cltd (bad) lods cmp adc cmp adc sub fisubrl jnp jle into lcall movsb mov stos (bad) (bad) call push xor aas and mov data16 imul out test clts mov cmp cmpsb loopne add (bad) (bad) decl add and cmp (bad) sbb xchg icebp jne sti je cmp std mov (bad) (bad) mov mov je xchg xlat sbb fmuls imul push sub in cmp adc add (bad) jg shrd cmp pop push xor mov and dec or and clc into jmp push (bad) pushl std decl cmp xchg arpl cli mov mov (bad) nop ret pushl pop shlb jne,pt or cli dec jnp (bad) (bad) ljmp adc pop add pop cmp lret mov aam mov xor cmpl pushl xor sbb cmp push sub out adc decl mov jb popa cmc lea insl push adc (bad) (bad) jmp pusha mov arpl das dec mov loop mov mov rcl pusha push repnz mov (bad) lcall sub mov xchg mov mov xchg test jle addl sub out push push (bad) decl (bad) inc js loop subl cmp divb es (bad) (bad) (bad) call sub add or or mov push mov (bad) mov (bad) and push ja aam insb mov jb lcall mov rorl fnsave pushf pop jne inc stos jbe add (bad) (bad) ljmp dec fsubp das daa out shlb dec mov divl add sub mov (bad) (bad) inc sbb in orl mov dec in int nop sbb int3 rorb xor (bad) (bad) (bad) mov in jge or add or add jmp mov (bad) (bad) decl fsts in and sbb push cli push xor cmp (bad) (bad) (bad) decl mov or je push push mov mov cmc mov rolb aas insl xor pop pop mulb jge push mov clc dec ficomp mov shll les jg test mov push pop popf frstor cmp (bad) (bad) jp ret add inc test test cwtl jnp dec xchg loope or mov (bad) mov movsb push arpl pop mov mov xchg add sub mov inc std mov add divb popf push lret cld mov sbb push dec jb,pt and std (bad) call push arpl or cltd notb iret out outsb inc jg (bad) jmp fmul xor add out mov sti mov xchg adc in sub jge cmp fmuls xor lock gs jecxz test (bad) (bad) (bad) decl jmp push pop and mov rclb loop cmp (bad) jl,pt mov incl repz outsl pop std pop ss mov push mov add mov pop repz ljmp cmp jecxz jmp push les jl shrl mov sbb decl mov sub mov (bad) (bad) ljmp loop loope adc js inc data16 xor add icebp es mov pop or (bad) (bad) pushl pop int3 sub test imul (bad) or jge mov sub pushl in lods hlt jbe inc (bad) das inc (bad) (bad) (bad) jg lcall push pushf int cltd pop add lods (bad) gs scas and (bad) (bad) jmp push iret adc popf popf cmp cmc out mov out cmp add ds cld jle loope mov push pop test imul (bad) decl pop mov inc xor shlb pushf bound (bad) dec cmp mov or inc cmpsl adc ds push add fwait add mov cmpsb lcall cld aaa sahf push repz push mov cmpsb (bad) (bad) (bad) jmp fs sbb insb mov xor les add mov bound dec dec cmp ljmp negl add mov pop out xor scas vmovaps icebp out leave xchg (bad) (bad) (bad) ljmp pop mov dec jne (bad) jns mov je ja jl pop adcl cmp (bad) cs test ja aad and pop sbb (bad) icebp loope mov jne (bad) jmp clc xor rolb xchg sahf and mov push pop cs cmp jb popa cmp stos and xlat stos out incl jg adc mov add dec cltd inc add adc hlt in loop daa cmpsb repz (bad) (bad) lcall sub jg add and in jmp sti dec jecxz fildll xchg into add (bad) (bad) ljmp xor jnp sbb lea mov or fcomip ja fimul hlt mov lcall jmp lcall lcall push std setnp outsl xchg mov (bad) (bad) (bad) clc sbb iret sbb negl mov mov (bad) sti (bad) (bad) (bad) decl ds loop mov (bad) pop jl fmuls fwait iret jmp out hlt pop (bad) (bad) (bad) jmp adc jecxz loop or in sub lds (bad) fnsave jno and (bad) (bad) incl cs cli mov lea pop pop out mov mov jnp jb leave push push mov mov jp jbe incb xchg mov repz push mov pop cli add js inc rorb addr16 test (bad) (bad) mov pop sub xor dec faddl inc add fs leave jle dec ljmp (bad) lcall pop je cmp mov xor inc fildll ds xor add scas pop fist cmc mov cli outsb insb xchg push xor jp mov mov ds and jg dec mov xor mov push cmp and mov (bad) jmp int mov dec hlt or mov clc mov pop mov clc (bad) (bad) jmp cmp (bad) xchg lods (bad) sub daa scas xor imul adcb test cld dec lock (bad) call mov sbb xor outsl pop mov xlat es jp add adc (bad) fcomip mov jnp ret push lea cmp in leave xor sub push daa (bad) jg mov and push addr16 mov decl sub sbb popa lcall das or (bad) mov push or add rolb int dec inc jo ret mulb jg mov out jbe aas cmp pushf lods mov xchg mov (bad) (bad) ljmp int3 inc dec jae icebp std inc hlt push push negb and dec xor sarl out (bad) (bad) (bad) incl aaa adc jmp jge dec (bad) lcall ret (bad) cltd jnp mov jecxz push mov adc cld jmp fstps subl mov ficomp mov cmp or jbe idiv (bad) ljmp xor pop fnsave fmull sub pop or stc dec jns shlb (bad) jg xchg mov (bad) sub fwait mov jmp push jne mov xchg roll sub xor int mov daa mov cmpsb aaa cld (bad) pushl or inc leave fist mov cmp mov cmp (bad) lods test ljmp call les pop add movsb cwtl hlt testb nop push in fisttp jb mov cli decl jbe mov cmp xor and repnz mov sub lock pop pop in sub imul imul jg test mov mov hlt jbe ljmp popa or (bad) outsb mov cld nop cwtl sub pop inc dec xor adc (bad) (bad) pushl cld ret nop lret fs rolb dec test aam lods mov sti add (bad) (bad) ljmp cmp adcb mov cld xchg dec adc ds adc (bad) lcall push stc inc fsubrs mov dec or (bad) ljmp mov cli inc cmc es into sbb jbe xchg lods jecxz (bad) adc cmp inc pop mov jg ljmp sub gs outsb btc js inc inc adc cmc mov fcomip pushl js mov insb dec add mov fs mov pushf clc (bad) (bad) jg test test adc data16 mov test cwtl pop pop jo (bad) incl loop (bad) mov cmp fimul pop test test (bad) (bad) fbld aad cmp movsl mov adc (bad) stc and mov (bad) in push mov in ret push out cmp (bad) (bad) cmp scas push outsl addr16 dec nop daa faddl in int sahf popa jno sub mov out and adc cmp push fisttpl push mov (bad) (bad) in ja clc lret mov push iret sub mov divb jecxz xchg ficoml push test sub loop sbb mov (bad) dec lret nop or insb or push xorl test xchg outsl lret js dec inc push pop jne orb cmp inc daa dec mov ficoml loop push (bad) (bad) mov xor aaa mov rcrb or daa (bad) (bad) (bad) call clc js mov push mov add daa mov popa orl stc lcall (bad) incl add add andl test ret (bad) arpl ret push (bad) (bad) fcomip sbb sbb mov dec jo and movsl mov in aad pop sub push nop jae mov pushl or mov cwtl mov sbb mov js and and hlt inc test inc aam adc (bad) ljmp gs test lahf inc pusha aam (bad) ljmp ds pusha fwait push popf lds push xor push clc pop loopne dec data16 aaa cld (bad) mov mov lods add in icebp subb call jmp mov pop test dec push xlat cwtl std (bad) (bad) decl push sub sub ss in xchg (bad) je jg xchg stos dec mov jno bound rclb (bad) xor add push ljmp mov incl pop mov lods stos mov fildl inc stos push pop das inc cmpsb dec fcmovne popf (bad) (bad) (bad) jmp repnz jmp xor push (bad) stc lret mov int cs push xchg xlat das adc (bad) jmp add in js jne push rcrb adc mov (bad) frstor push inc cmc adc scas mov and mov (bad) jo sbb mov or inc dec or popf add (bad) jg inc push mov sarb out imul lea (bad) xor ret xchg pop inc inc (bad) xor jl pop insb aad mov gs imul xor call stc mov mov (bad) (bad) (bad) ljmp pop xor cmp in paddd xor loopne imul add (bad) jge cmp push sti les xchg sahf push orl cmpsl or cli inc into call pop xor add pop push ss rorl cmp in cli in or jg test cwtl jae int3 loop cmp aas mov dec js in lcall ljmp jp mov mov and cmp pop mov (bad) sar or jecxz aad cmp lea jg idiv (bad) (bad) ljmp pusha push xor mov xor mov xchg icebp scas rcrl sar dec in inc imul fnstsw dec std sub iret sbb xlat (bad) (bad) mov cmp hlt push scas movsl push jb mov ret fsubl dec les das test add mov adc movl mov jbe (bad) in ljmp (bad) (bad) (bad) ljmp lss mov mov out sbb sti jne cmp pop gs jbe xor loope roll outsl negb pop pop lock (bad) pushl jmp sbbl inc aam xchg push cmp (bad) (bad) decl push popf sbb das iret cmp int jae (bad) repz notb in pop (bad) jg decl mov push mov push mov out push mov cmp cmpsb mov pop inc mov mov negl test fild mov lea jle pop daa lea rcrb lods and ds mov ds outsb mov adc xchg nop pop clc sbb (bad) (bad) mov push into rol imul xor and mov scas xor call pop add pop push out mov movsl (bad) sti stos (bad) mov stos and sbb push xchg inc jbe call lea inc mov std inc (bad) js sbb (bad) (bad) pushl inc sub je adc hlt test mov vmread mov ljmp mov fimull popf in subl sub sar cld (bad) (bad) (bad) dec sub stos leave stos std adc mov mov jnp jnp jb das jnp jbe dec aas inc jb mov lcall mov pop pop cld mov outsl movsb aam xchg cmpsb ret imul (bad) mov xchg sbb fcomip aad xchg (bad) pop dec sbb and in repz fcompl (bad) lcall ds idiv xchg xor xchg stos mov pop sbb or sbb mov dec mov lea lock pop xchg xchg out dec (bad) (bad) (bad) (bad) jmp cmc aaa fnop mov sbb inc out xor sbb jns push lea pop lds sbb push inc jae jge int pushf loope in ret xchg mov push mov lods sbb aad xchg pop xor clc (bad) (bad) js mov dec movsb cmp ss mov (bad) (bad) jmp aad mov lea xor or push jmp ret aas adc lock cmp (bad) (bad) fnstsw pushf add out push decb pop push out fnstenv jno and xchg pushf and shlb cmp (bad) (bad) lcall int cld in (bad) mov mov std scas fwait (bad) fwait test adc in push cmp (bad) aaa fs (bad) xor das inc hlt (bad) mov jne add fistpll test (bad) (bad) (bad) decl nop stc aas cwtl cld mov int3 dec pop stc inc jecxz mov fmulp pop or inc mov decl mov lods adc fildll fdivr (bad) (bad) call in in and das ljmp faddp pop ljmp and jmp dec hlt mov imul in dec das ss adc or mov adc xor sub fcoml fisub xor aam push cmpl sbb (bad) incl push int3 adc xlat (bad) push call sub (bad) add outsb idiv mov mov movsl adc ja (bad) sub mov add in xchg push adc pop cld (bad) (bad) ljmp int3 es mov dec mov sub add (bad) pusha dec dec and cltd push mov pushl cmp mov aaa (bad) movsl repnz sbb sarb jmp (bad) ljmp sahf daa or mov outsb pop cltd jle ds jno (bad) fcomip mov cmp push in mov insl rorb outsb sarb (bad) call std mov sbb aas dec adc es mov xchg maxps xchg loope push (bad) (bad) (bad) incl add pop sti or stos mov add cmp mov lea inc dec xlat pushf ficomp lcall fldt cwtl out xchg int fst test lcall dec repz (bad) (bad) ljmp and or cli addr16 insl sub mov or test sub jecxz (bad) out and stc add jo cmp insl mov mov xchg and (bad) ljmp std jne push cmp adc ja xchg rclb lret cs (bad) (bad) ficom dec loop adc femms cli insl popf out enter into inc mov int3 dec (bad) cwtl push (bad) jg jle lea cwtl test test push adc push pop ljmp jbe (bad) sbb or xchg cmp xchg cmpl (bad) call push adc xor insb int lods into (bad) data16 inc repnz xchg (bad) (bad) fbld mov repz fdivrs outsb mov adc cmp (bad) (bad) dec push mov imul push into mov inc lock fmuls adc fdivrl aas or lods (bad) (bad) (bad) pushl xor das popa mov mov cmc sti out mov test (bad) (bad) (bad) ds or xchg cmp loopne xor test clc push (bad) mov inc mov (bad) mov std or mov sub mov push in push imul cli pusha fwait push (bad) (bad) (bad) dec mov pushf push rep mov inc add je inc push push mov movsb or (bad) ret xchg ljmp mov xchg imul jns,pt and mov add adc sub xchg xchg (bad) fcmovu fidivr xor jcxz jg mov fsubrl test jmp and jl and sub push ret out sub in (bad) (bad) ljmp mov fucomp loop ficomp mov dec xchg in mov dec stos iret jae push add adc in pop lea pop pop out mov decl stos pop adc repnz call pop out (bad) out imul and add pop mov (bad) (bad) lcall push mov mov or cmpsb into scas hlt sahf popf pop lret mov ss jns (bad) (bad) jmp stc pusha dec fs and rcrl hlt (bad) dec ljmp sub lret lods (bad) ljmp push cli daa (bad) dec (bad) mov lods cmp (bad) call lods mov and xlat sub cmp mov test jbe insl mov icebp clc jg pop mov ja lcall mov inc push test and (bad) ja (bad) call push push cmp (bad) or and adc cmp (bad) (bad) (bad) fistl test and fisubr cmpsl (bad) ret fistp (bad) (bad) (bad) (bad) incl xchg add cmp mov dec add sbb mov out cld adc (bad) (bad) mov xchg mov shr jnp dec pop sti push insl loope enter inc mov add ljmp scas into dec pop ljmp repnz or (bad) (bad) (bad) decl leave xor in xchg dec add scas adc pushf and rolb repz adc out push (bad) popa and mov stos test imul scas dec mov out dec xor je jno (bad) pushl jns je xchg pop cmp out scas xor jno scas and sti xor ljmp fwait jae in lret pop rcrb shrb sahf test shl (bad) ljmp sub (bad) nop out dec and iret add jno pop push in aam sahf es addr16 ljmp icebp (bad) negl fnstsw scas ret jecxz pop lcall inc mov sub jge pop (bad) fcomip incl lret std lahf inc pop pushf outsl mov fwait mov adc push add jp inc xor pusha daa or ljmp stos dec push cmpsb mov push mov jp rolb sti push mov lret xor rcrl (bad) (bad) cmp xchg in (bad) pop test pushf ss lcall sbb into jl popa test inc subb mov push add cmp mov fisubrl test sarb xchg cmp (bad) (bad) pushl sarb icebp outsb enter popa pushf daa inc jg cltd mov dec jp cwtl inc adc (bad) (bad) (bad) call pop adc out mov gs or jo sbb mov inc mov push (bad) (bad) jmp (bad) hlt jp fdivs sti add repz call (bad) mov mov and (bad) ljmp int3 mov out push or inc mov insb xchg std xor and test and and (bad) sahf jg pusha add test pop (bad) (bad) (bad) ljmp inc dec mov sbb sub jle inc push push xchg jl lahf es and adc cmp test dec cld (bad) jg repnz sbb push mov cmp insb std inc (bad) (bad) pushl (bad) adc ret sub and dec icebp gs fs mov das and inc fildll mov stos addl (bad) pushl jg and js sbb cld push pop jb dec pop es std (bad) cli fmuls aad (bad) (bad) ljmp sub aam or ja jae data16 test shl stos mov push rcrb pop mov test sti push push cld pusha cmp jo inc sar (bad) (bad) decl mov or test xor jne movsl into pop adc jg adc ljmp mov inc fs and popa adc mov notb lock jecxz xor pop lmsw in push push ja (bad) call push in loopne jle arpl in pop or mov or (bad) lcall aas lods (bad) cmp sbb pop cmc cmc fwait and (bad) mov jmp in mov add cmp sub std pop incl gs inc hlt fsubp cli cmp rorl inc xchg inc (bad) add (bad) iret pop jb sbb lods repnz sub imul (bad) (bad) jmp pop cltd add imul inc mov push adc sahf dec pop popf push jp sbb mov rol (bad) push jl and sub (bad) or pushl mov movsl (bad) jbe pop cmc aas sahf in roll push les add subb ss incl aad adcb inc cli xor inc fsubp mov iret pushf xchg push add je popa adc testb adc int3 adc lret push mov call loopne mov loope sub subb xchg xor or shld jo lock push (bad) (bad) ljmp scas test arpl icebp jns cwtl mov scas cmp leave push std ljmp orb loope pusha or mov data16 cmp mov movsb push cli loop (bad) (bad) jg pop ret adc lock dec lods scas mov fs std inc lcall dec sbb (bad) (bad) cmpsl cmpsl adc xor outsb arpl (bad) (bad) (bad) lcall jo push dec aam xchg sbb or ret sub fsubs lods push std adc (bad) notb ljmp sahf (bad) cmpsl add sahf scas jo rcrb mov mov je jae shll adc outsb or ds (bad) fbstp push stos sarl sti mov fistpll push jne (bad) (bad) pop jge fild (bad) mov je xchg lods pusha add pop push jl push adcl das lret or xor adc mov int mov inc insb mov mov sub icebp dec push (bad) (bad) (bad) call mov outsb rcrb loop sarb dec popa mov mov pop xchg sbb inc cmp (bad) (bad) pushl mov pop xchg imul xor cmp fld1 call cs cmc sbb cmpsb in xchg push adc or sub div pop je ficompl jne mov enter sbb dec pushf fstpt addr16 shlb dec mov out adc insb (bad) ljmp xchg pop jbe shr dec popf pop fwait cwtl loopne scas test jbe pop sbb xlat (bad) call (bad) cmp out stos enter fs out aad movsb jnp call decl inc fisub jge inc mov mov or add dec add inc sub (bad) (bad) (bad) call jecxz scas jnp cmpsl (bad) test dec pop push cmp test orb and add scas xchg hlt (bad) jmp lods dec (bad) lods fild dec fs lds (bad) mov mov in mov adc adc cmpsl xor adc adc in pop pop repnz insb sbb (bad) incl push push repnz jl push add adc adc sbb and pop inc add mov inc push xchg lea fstps and sbb push inc xor sub xchg xchg push jmp push xlat sbb push or xor mov (bad) call push inc imul lcall push outsb cmp jne cmpsb mov inc cmp (bad) (bad) (bad) cmp and or sbb mov cwtl ficomp sub lret jno aas push (bad) (bad) mov cmp je sub ds fs test inc push jns dec nop adc jmp mov cmp pop les inc sbb aam int fs outsl (bad) (bad) (bad) incl inc push imul mov pop dec imul (bad) xchg inc pop (bad) aas stc sub cmp stos (bad) jmp mov push (bad) adc int3 cltd addr16 (bad) bnd (bad) (bad) lcall sahf insb insl pop xor mov jne xchg jns push jge movsb xor (bad) (bad) call sti push cld xchg adc (bad) das mov inc in cwtl xor cmpsb cmpsb sahf mov repz lret jmp daa das sub and adc xchg insl arpl outsb sbb cmp mov jns push out stos mov sti insb sub jle cltd push xchg (bad) lcall fisttpll jge (bad) cld jo cwtl cmp (bad) (bad) aas orb bound xor and inc dec cmp (bad) xor mov out aad dec mov cwtl icebp ficomp (bad) (bad) push jnp ja ss data16 cltd (bad) (bad) (bad) call cmp xor in mov bound cmp lock adc loop push test pop cmpsb sti sbb (bad) (bad) jmp adc int and sub pop mov (bad) inc jmp cmc in push jae mov negb cmp mov std inc cmp adc ja push and es jbe (bad) pop mov dec movsb cmc mov cmp (bad) decl xlat and mov xchg std or push add pushl or mov aam sub fwait clc add (bad) cli mov incl push fisttpl repnz lahf adc xchg inc dec bsf mov (bad) lock add dec push outsl addl pop add incl lahf mov in and mov (bad) incl cld add pushf clc mov out mov arpl stos das push cmp xchg or sbbl sub das push jo push inc stos gs fidivr fbld (bad) lcall ds pop loop outsb dec mov les cmpsb cmp adc pusha call (bad) (bad) mov out ds clc mov leave popf (bad) nop mov aad leave (bad) (bad) (bad) pushl loop sbb or pushf sbb mov and loop imul mov dec (bad) dec sub mov mov xchg jg (bad) (bad) incl pop xlat stc jne sub push cmp mov (bad) iret sub iret incl and movsl cmovle lea adc movsb mov cmp hlt call sti dec addr16 inc sub cli (bad) cmp enter mov push out (bad) (bad) pushl lahf and out sub out or gs xchg sub mov bound xchg (bad) (bad) (bad) lcall xchg jae and jmp scas (bad) in in fnstenv mov das in fidivr insb mov les faddp in (bad) (bad) (bad) (bad) cmp xchg loopne popa xor cmp movhps insb add xchg push pop pop push aaa incl pop cli mov into test push js sub das clc sbb aas mov cs iret leave cmc xchg std fidivl mov push les sbb dec imul cmp (bad) (bad) aas fidiv clc inc mov (bad) (bad) push pop xchg sbb push cld push pop jmp (bad) (bad) (bad) (bad) pushl pop (bad) divl lret pop mov mov out popf mov rorb loop xchg dec mov jg and xchg (bad) (bad) (bad) push jecxz movsb cld jns mov push in add (bad) jmp hlt movsl test cmp pusha js cli pop cmp test mov int jns loope pop mov push mov adc in lods inc popf sbb adc dec or (bad) decl and scas mov jns dec push mov mov (bad) cmp (bad) (bad) (bad) decl in jns cmp loop adc or fisubrl pop pop or outsb inc jne cltd out lcall shll imul stos mov xchg or push (bad) ljmp arpl imul push cld push lock mov add xchg pusha jl xchg call ds lea jle mov bound push dec decl push push addr16 or add xchg (bad) les cld mov call inc (bad) dec pop jle sarl add arpl (bad) (bad) jg mov daa pushf dec add inc and in jnp pop xorl mov (bad) mov mov inc divb pop imul or (bad) (bad) ljmp and xor push pop fsubrs jp fldt loope jp or dec cltd cli cmp pop clc jne sub test out mov lret daa cwtl mov mov cmpsb xchg mov ljmp call pop inc ds cmp bound add out sub pop xrelease adc daa dec shlb outsl push lea mov xor bound mov push cmp pop lcall testl pop shll (bad) pop mov xchg or movsl inc call fstps cmp decl add jecxz ja hlt mov test push es (bad) in pop pop push fisubl pop inc jno data16 cwtl repnz mov imul (bad) (bad) (bad) pushl mov int3 cmp jge or lret jl inc inc push push js sub adc jnp sub lods lret xor xchg negb cmp mov cmp or xchg xchg (bad) (bad) decl cmp in pusha mov ljmp add imul dec (bad) inc mov mov pop mov ja movsl push add (bad) call movl stc push (bad) lret push xchg leave bound xchg mov cmpsb loopne dec test (bad) ljmp inc jg mov in mov outsb ds (bad) leave pop mov (bad) (bad) (bad) incl pop rol mov sub xchg test mov xor pop pop data16 ljmp pop enter lods sbb or (bad) cmp add mov (bad) aas push mov mov cmp xchg (bad) jg mov in jmp inc adc out mov lcall (bad) (bad) (bad) lcall sbb stc lds outsl je movb iret imul and cmpl sbb jbe dec cld push adc push cmp sub lcall ds aad sbb inc pop lahf cmp je mov (bad) incl imul inc rcrl cmpsb dec sub decl or dec pop loop fs xor (bad) (bad) lcall lods fwait into outsl push add ljmp jge jns xor std jmp (bad) adc scas cli mov sar (bad) (bad) decl ficompl xchg sub cmc pop mov into ds inc sbb add out cli mov stc mov mov jbe (bad) jg mov enter xchg rcrl mov movsb or or dec adc cld scas in sbb loop mov pop jb jg (bad) (bad) lcall xorb adc iret rcl roll imul (bad) (bad) lcall cmp mov imulb sub sub les insb std lcall repz or imull push lock add cld jg mov insl xchg js fldt ds fbld stos push shl fstps xor dec dec call lahf jbe lret and xlat inc fistp mov (bad) incl aam outsb out xchg (bad) das fisubl loope cmc daa cmp sub push add sbb mov cmp mov nop sbb jae (bad) (bad) (bad) (bad) call xchg xor mov mov mov mov divb (bad) (bad) (bad) pushl mov and mov mov xor mov xchg test push iret push (bad) (bad) (bad) jmp mov or stos inc (bad) or ror mov inc sub cmp (bad) (bad) (bad) ds xchg push push in data16 mov xor add add mov cli (bad) (bad) (bad) (bad) in pop mull jge enter or xor or imul push aaa std sbb xlat add (bad) (bad) jmp cltd mov (bad) pop mov pop inc or les fsubrl lods add jae or das cli pushl push pop pop aad mov pushf je sti push pop mov rclb jecxz ljmp (bad) mov xchg lock stos push or cmc sti cmp call push dec inc imul popf cld lock jmp mov int inc pop dec imul mov ret dec cmc (bad) jbe dec dec out cli icebp adc int3 or leave push rcll int3 incl jmp mov enter or adc nop add aaa dec clc lcall (bad) js sub ljmp bound int cli test lods adc cmp cld fdivr (bad) (bad) jmp or js add repnz lods cmp or (bad) and cwtl loop cld outsl mov fadd (bad) (bad) (bad) decl in (bad) ljmp movsb fsqrt dec jle and inc dec push xor pusha xor push or stos (bad) (bad) (bad) incl adc call daa push fs jp out dec mov (bad) (bad) mov mov pop aam sub and stos (bad) sahf movsl sahf clc mov lret push mov (bad) add or sub xchg sbb mov mov out add mov sbb cmpsb popa sub pop pop mov dec out cmpl outsb pushf lock (bad) (bad) (bad) jmp mov pop scas scas add (bad) mov add test mov es mov (bad) (bad) (bad) mov lret insb mov sahf or mov mov jbe cmp (bad) mov mov pusha jnp test into push outsl xbegin pop mov (bad) (bad) jmp push pop push movsb mov push mov rorb insl fisubl (bad) (bad) inc xchg mov and inc iret outsb sbb in insl cmpsl insl cld call push fnstsw ds cmp adc ds fbstp stos sub mov std mov aad pushl lahf add adc dec push in dec push adc xor mov push jmp sbb (bad) (bad) (bad) call leave (bad) ds xor pop fcomip pop into pop push jmp mov sar imul stos and incl adc xchg int3 movsbl inc call (bad) inc cmpb mov jp add in popa fcomps push (bad) (bad) (bad) out mov js out dec xor lods mov es sbb js lds inc lods cwtl sbb iretw xchg jns loopne decl loop mov outsb jg out add dec or call (bad) mov jbe pop pop push insb ret and mov scas stc push xchg cwtl jo lcall test push jmp xchg dec xchg orl adc (bad) incl adc (bad) inc jge (bad) add (bad) jg popa mov sbb mov push push movsb sub hlt (bad) (bad) cmp sbb test jbe add fidiv ret xchg pop pushf sahf xlat (bad) ljmp mov push ja (bad) out mov dec or int (bad) (bad) decl sub jae adc dec cmp stos lea imul or subb dec js (bad) (bad) (bad) cli test gs push or addr16 sbb mov ds stos or jg,pt lret push mov icebp lret idivb incb in add inc (bad) adc mov sub rorl lea (bad) (bad) (bad) inc push mov loop psubd adc add and jg adc (bad) (bad) mov aaa push mov cltd (bad) rep stos arpl sbb add jae gs (bad) (bad) jmp fwait fs pop ds adc ss test lret aaa mov lea jnp (bad) ljmp test das mov xchg repz scas dec adc cmpsb pop adc inc inc (bad) (bad) (bad) xor mov mov ret (bad) dec adc idiv popf aad mov pop adc sbb movsl inc in stos mov xlat dec mov cli jg xchg cmp cmpsl and push jbe cmp push ret add xor and xchg jbe (bad) (bad) (bad) (bad) jmp xchg add mov add into sahf fcomps xchg ljmp (bad) inc push scas aas pop cmp loopne ficom (bad) mov ds lock mov xor cmp add pop mov (bad) mov stos lods outsl inc adc dec icebp shrl clc push jmp les (bad) ljmp add out push andl push icebp addr16 push fbld jae mov mov lcall jmp adc fucom shrb rcl xor jge mov and add push ss inc cwtl callw cld pusha js xchg mov jbe mov fs iret pusha std ficompl test fcmovnu lock call std fcmovnu enter aam daa jne sub cld adc pushl dec sub das sbb aad mov cld push adc mov (bad) loopne (bad) (bad) incl cmp ret push inc je jne rcll and pop xor movsl aaa das clc (bad) (bad) ljmp adcl push and test imul push lcall (bad) decl sub (bad) add xlat cmp sbb icebp jno loope and add mov dec pop stos repnz sub ljmp aas push (bad) (bad) (bad) mov fs in incb xlat xchg (bad) arpl lea mov leave in cmp cwtl or (bad) ljmp ds incl mov sbb adc dec imul and adc aaa cld stos jae,pt push popf xor insb xor xor inc popa lahf push dec (bad) (bad) (bad) call add repnz xchg push call mov or out (bad) je in icebp or push (bad) fcomip in lea imul pop sbb cmp lret movsl (bad) (bad) (bad) incl inc jmp fnop cmp imul mov (bad) mov out bound cli (bad) call adc sbb or xlat dec mov sub enter mov aad mov mov mov pushl adc jg or inc pop adc (bad) (bad) jmp shlb sbb enter xor cmc and mov inc and sub (bad) cmp and mov fdivs dec scas data16 xchg out (bad) (bad) test cli mov xchg sbb push popa orb add ret ret (bad) (bad) incl in repnz sbb xor add lock sahf test dec or add dec (bad) mov je mov sub xor stc xor rol xchg and insb xor hlt fimull pop add insl out decl into popa mov repnz sbb push int3 push movl nop je scas call mov outsl adc repnz lock jns pop gs popa out imul gs aad sbb adc xor movsl icebp add jmp add pop xchg imul xchg mov sbb pop mov (bad) (bad) ljmp dec inc in add jmp mov rol sub daa loopne inc push pop das (bad) leave lods pushl cmpsb jnp jno incl rclb and or (bad) (bad) lcall repnz sub sarb lret add xor (bad) (bad) decl pop mov addr16 out and scas addb jmp (bad) (bad) (bad) decl mov jnp rcrl lcall jle imul jnp fs (bad) (bad) (bad) (bad) fcmovnu cmp mov into add add clc inc out mov bound or insb repz scas hlt (bad) (bad) (bad) call push or and lret push in test lret (bad) (bad) sbb mov (bad) jg and iret xor inc and mov add gs insb das std (bad) (bad) jmp sub sar idiv enter add stos mov inc and scas mov (bad) mov push pop jge imul adc and addr16 fmull push adcl ficom mov push sub ljmp pop adc lcall and jno (bad) incl hlt xor ret lret js jg push or mov mov xchg sub (bad) lcall lods pop icebp cmpsb clc lahf pop daa outsl lea repnz (bad) lcall jge mov ds (bad) xor jbe inc jg fstps and leave outsb rcrl xchg xor xor (bad) (bad) ljmp ret (bad) mov stc pop add rclb xor fmul out xchg std (bad) (bad) lcall ficomp outsl mov fidivl mov ljmp (bad) (bad) pushl scas xor mov mov aas xor mov push aas stos lret outsl out mulb scas (bad) (bad) jmp out mov lods pop sbb pop xchg mov scas repz (bad) (bad) (bad) call (bad) in cli mov enter mov fwait inc (bad) cmpl (bad) fcomip (bad) call out or mov ljmp sub outsl imul jp rcll (bad) clc data16 mov call cmp arpl fstpt add (bad) lcall adc sti inc (bad) pushf mov out inc add xchg mov (bad) clc (bad) (bad) call sub ss mulb lock cmpl std inc inc cmp fildll inc push sahf add insb test ret mov xchg dec cwtl popa test lret ljmp mov arpl xor ds (bad) (bad) jmp pop mov rorb lea ja (bad) out sub jne pop adc (bad) (bad) (bad) jg ja push sub insl enter pop fdivl outsl lock loopne add push in lahf push jbe mov clc decl push fisttpll xchg push cmp jb pop mov data16 dec sub incl decl out lods mov lcall or pushl (bad) (bad) (bad) incl push icebp scas xchg jge push xchg leave sti aam or xchg dec in test add add rorb test inc fcomi push call mov fnstenv or icebp xor je pop popa mov mov (bad) (bad) (bad) ljmp jle add xchg dec pop aad mov cmp mull cmpsl dec xchg sbbl jmp hlt es fcmovnu adc jecxz (bad) (bad) (bad) pushl aad fbstp cmp sub pusha inc mov mov lock dec stos mov nop (bad) (bad) (bad) (bad) jl push add fs (bad) loope xchg jb sbb mov dec push pop fsub mov aaa fdivr (bad) jg int3 pavgb hlt xchg das pop (bad) mulb test leave lret (bad) (bad) (bad) call mov jbe icebp cmp push push jge mov nop mov jae or scas push pop xor (bad) ljmp and nop (bad) jnp mov and and enter dec (bad) ljmp scas aas or xchg fadds lds stos fwait roll (bad) incl int and mov pop dec xor daa loop (bad) (bad) (bad) (bad) mov push rorb jo dec into and mov (bad) xor idiv push std in lea (bad) fwait cmp mov rolb adc mov adc test xchg dec je int es shrb idiv incl push das ds jmp sahf jge dec cli push imul outsb pop das add xlat (bad) (bad) (bad) ljmp xchg adc insl int stos cmp cmp or jg cltd mov (bad) jmp roll jmp imul popf mov and adc in fistpl dec pop add (bad) (bad) (bad) incl aaa clc dec mov cmp lcall imul mov and pop sbb jne pop cmc rclb add hlt (bad) cmp (bad) sub jne xorb sub adc data16 (bad) (bad) (bad) jg fldl pop adc test and cmpsl pop xchg decl call push or rclb popa cmp xchg jne lock jg (bad) fistpll xor adc add idivl dec lods pop clc mov push iret sahf mov cltd dec lret mov into in lods mov add es cli or loop ss mov push insl (bad) (bad) mov enter xchg or sbb dec clc mov lahf mov (bad) jg jmp (bad) pop and rcrb scas fisttpll (bad) (bad) (bad) fildll lahf dec sub mov cmp (bad) sub cmp jmp mov cld (bad) ljmp test pushf testb push rorb or fdivrl (bad) call dec and lock mov inc imul mov push sbb (bad) (bad) call mov pop xchg xchg out (bad) je jns push xchg out pop (bad) int lret call outsl (bad) sbb imul (bad) ss (bad) lret (bad) ljmp data16 data16 mov xor mov (bad) jg fwait cmp test mov (bad) (bad) mov mov addr16 jb sbb iret ljmp dec xchg pop jl (bad) xor mov (bad) in (bad) jl das cli (bad) incl and (bad) insl cmp lods push fsubr addb insb lods mov or lret (bad) jmp push icebp aam pop dec in adc (bad) sub aad fwait mov out iret (bad) (bad) lcall adc ret dec jecxz fwait in rcrl ds pop mov and cmp cmc call ja pushf js sbb fwait pop pop (bad) jbe add xchg lret sub (bad) (bad) incl jae cs xchg push sbb adc fnstsw inc xor cvttps2pi jg xchg mov pop pop jb dec mov loop pop pop repz adc in (bad) adc stc test xchg dec cld (bad) incl out adc aam aam sarb arpl mov (bad) jg ds imul insl cld mov jecxz push push dec or rclb pushl in dec jo pop and mov mov (bad) (bad) fdivrp inc das in or outsl insl repz (bad) (bad) call lret inc loopne imul cmp jbe call pushf insb mov (bad) call mov in jl inc dec in (bad) (bad) fistpll ds mov les les mov and (bad) (bad) ljmp (bad) popa jae fisttpl call (bad) insl out ret cmp push mov (bad) ljmp clc in mov jne mov lds xchg cmp fwait popa inc inc dec out mov sub push dec sbb sub mov fidivr ss jg or adc add movsb les push mov (bad) (bad) lcall addl pop shll push sub (bad) cmpsl mov jg ljmp out ficompl fisttpl push push sub stos inc (bad) pusha out pushl cld pushl and push mov xor sahf add in (bad) mov (bad) (bad) (bad) std xor xor orl cli mov and jmp mov arpl pop sbb icebp mov adc pop (bad) incl int3 fldcw fsts push and cmp xchg mov mov inc mov subb jmp mov cwtl xlat sahf test (bad) xor aam (bad) (bad) (bad) (bad) (bad) sbb dec dec outsl lock je enter pop pop rolb and je mov lret mov sub dec cmc out pop pop in sbb cmp sar (bad) fdivr mov mov xchg jle mov sub cmp mov (bad) decl je adc lea cltd push push add (bad) xlat lcall add jge,pt das push xor stos jno nop add (bad) (bad) dec adc add incb (bad) jg mov inc add push ja out mov xchg decl ds aam jmp sub mov (bad) nop test (bad) ljmp mov pop outsl popf xchg mov ret mov dec adc or mov test cld push dec push mov cmp je push jl inc fsubrl or xchg (bad) (bad) call or xchg and fsub adc ljmp sub iret aam xchg and clc pushl jb xlat mov fcom jg add jae dec aam mov call mov add mov add push ds mov lea adc enter adc (bad) (bad) jnp call adc jne (bad) int add xor mov lock sarl js (bad) (bad) (bad) cmp push data16 cmp add cmp icebp mov ret lods inc jg (bad) ljmp mov xor aam jle add jo xchg pusha sub push add xor push es fistl mov inc (bad) adc mov aad int3 jmp daa insb cld int3 loope test inc mov lret icebp (bad) incl pop cltd or pop or dec add loop sbb ljmp (bad) decl dec xor push push je int3 xor aas jb jo decl js pop ljmp lea jbe movsl (bad) (bad) (bad) dec jg xchg ja nop inc cmp je push cmpsl jno lret dec aas outsb mov gs popa mov popf (bad) (bad) (bad) ljmp out out test cs mov jns and add int3 data16 (bad) decl fistpll arpl movsb inc leave mov int3 pop mov mov lahf ja cmp incl fwait sbb push movsl mov pusha xor jbe pushl sbb xchg iret sbb cmp lcall jmp cmp pop (bad) ret sbb dec and lds xor arpl cs lcall and xchg xor mov jg or cmp (bad) (bad) (bad) jle lret or push push xchg rolb jp test pop inc or push xor jmp ret pop xor mov (bad) dec lods add ficom fucomip push jecxz fdiv adc std mov jmp mov jg gs or lcall mov (bad) (bad) call add in mov sahf adc std pop pop or lret out mov push mov (bad) (bad) mov and cmp adc scas jmp sub ficompl inc pushf (bad) pushl std jecxz (bad) xchg sbb add xor jbe (bad) mov shl ss mov (bad) inc pop dec add imul push sbb cmc test ljmp cmp repnz test test in cld xor (bad) (bad) (bad) incl xchg mov pop pop xor aaa xor dec js add sub inc mov dec cwtl test in (bad) and pusha xchg add jo cmc sar pop xchg cmpsl iret sub cltd pop bound jbe cltd sar push jl stc dec push hlt jl loopne push gs or sbb enter inc ret loopne dec (bad) (bad) (bad) call sub enter jecxz push lea arpl pop push pop insb sbb jg lods lcall aas push jbe ds jecxz scas mov adc decl cli gs mov fimul das test mov (bad) cmp push adc imul jmp mov dec mov cltd cmp out repnz pushf dec decl push xor jle jmp (bad) (bad) dec ljmp mov movsb mov aaa mov ds add or push iret scas (bad) (bad) (bad) (bad) fisubrl jecxz cltd test mov sti in mov and cmp ror push adc adc (bad) (bad) jg pop fild mov leave ret xlat mov es mov fs (bad) (bad) (bad) out (bad) pop xchg inc inc pop fist rolb (bad) push ss cmpsl add bound (bad) ljmp dec mov dec jmp (bad) (bad) (bad) mov xchg add pop repz test and add xchg ficoml fwait mov jmp aad mov inc adc outsb xor loopne cli pop xchg (bad) icebp (bad) (bad) call std sti repnz jns leave push and jbe xchg sub (bad) nop lcall add sahf add add jns cwtl sub repnz (bad) (bad) incl es sub (bad) loopnew jle repz (bad) cmc jo xor jno in push (bad) jg xlat pop xor push fcoms pop dec add (bad) mov outsb add cmp js (bad) jae (bad) (bad) mov sub xor pop (bad) and je or or mov sbb mov jo xor faddp ret push lahf les out xchg imul pop test out cmpsb mov movl sbb sbb shrl inc push es outsl mov (bad) (bad) (bad) (bad) cmp xchg jge imul les sahf aas sahf outsb and ret (bad) (bad) (bad) incl mov or int3 xor fadds aas add or enter pop ret (bad) (bad) (bad) (bad) mov mov hlt or enter or add gs mov arpl mov icebp adc push gs mov and pop insl incl sysenter sub xchg cmpsb adc jb dec add jmp dec clc in mov (bad) mov xchg shll test mov jge lods cmpsl jns adc lods out xor aas out aaa mov jne (bad) incl pop test std xchg ds mov xchg lret jns insl fwait push cltd hlt std (bad) add (bad) (bad) ljmp push ljmp dec xchg push inc sbb mov cmp das mov (bad) (bad) (bad) dec pusha (bad) sub xchg inc and sub ret rclb in inc stos outsb lcall lret (bad) lcall stos stc or mov push int3 int pop repnz xor mov xor aad and mov (bad) (bad) fildll jle pusha cmp jl jae push pop aam push jl cmp push pop stos sar (bad) fld xchg fwait orl outsl pop popl test sti xchg push pusha or jmp push push jns add cmp scas sbb xchg (bad) (bad) (bad) fcompl rclb mov pop dec stc xor pushl ds adc mov adc (bad) jb or ret (bad) push mov jge orl fadds (bad) (bad) (bad) jg pop adc adc adc cltd std fmul dec es fsubs fisttp shrb das sar push xchg outsb push sbb lods movsl int3 inc cmp mov (bad) fcompl std (bad) (bad) (bad) jmp js push repnz movsb lock mov stos shrl ret push xlat mov (bad) (bad) (bad) call xor push mov gs scas cmp (bad) mov inc pop pop loopne pop call in js es out mov xchg sub incl insb lods adc xchg mov sbb cld mov push dec pop insb das (bad) hlt dec xor push xor ss cmp (bad) (bad) (bad) call mov aaa dec loop xchg push dec or cmpsl xchg mov bound aad jmp inc mov cmp subl rorl jmp (bad) (bad) (bad) jg insb xlat mov stos mov mov (bad) xchg fincstp dec stos sub add (bad) ljmp adc cwtl fistpl xlat loope cmp sti mov mov or ret jb mov scas cli out mov lock or sbbl loopne pusha repnz (bad) mov ficom xor inc mov push cld rcll cli ljmp xor lcall cmp out or (bad) (bad) (bad) mov cld rorb jle sbb mov xchg loopne int3 pop jo sbb jmp and push in jo push negl adc ret dec call test ljmp inc pop fstl vxorpd aam and out lahf fsubrl loope and repnz inc (bad) (bad) (bad) call dec rorl mov (bad) (bad) mov jnp jne dec xchg xchg jnp comiss (bad) (bad) (bad) js xchg cmpps pcmpeqw mov cmpsb pop xor pusha push cmp mov dec jne sub iret lods push mov lock enter push or mov adc (bad) (bad) int fistpll (bad) cmp fnstsw repz dec mov xor enter fstl (bad) mov aas cwtl aad cld (bad) jmp scas orl mov sub (bad) incl jl add iret cmpsb sub cmpsb add dec xor pop mov sbb add jge and push pop push shl clc pop (bad) lret mov (bad) mov ret cld add adc arpl jg inc jo in mov shrb das lock mov cli addr16 (bad) outsl cli (bad) call cmp mov inc andb mov testl (bad) (bad) (bad) call pop insl xchg movsb lcall push hlt dec hlt arpl ss cmpb (bad) (bad) lcall cwtl lds test mov and xor (bad) mov (bad) (bad) ljmp clc lcall dec out mov repnz and insl ret pop xchg stos fcos (bad) (bad) lcall mov lock std imul test xchg ds inc out xor add cmp fs ljmp aad (bad) pop js push xor cmp mov cmp test rolb and data16 (bad) in test (bad) xor adc jecxz mov jg (bad) (bad) decl mov (bad) call repnz sti repz (bad) sub cmc xor call loope jle mov test ljmp loop,pt jns mov mov xor faddp popf sub push jnp fwait adc (bad) (bad) (bad) sbbb dec add jmp outsb (bad) repnz push sahf xlat dec xor popf xchg fistp add add outsl mov dec xor adc loopne,pt jp gs mov push jmp sub ds pop idivl dec push ds cmp bound andl mov lock mov inc in aad sarl (bad) (bad) call shr movl sub push adc out inc arpl imul (bad) (bad) jmp xchg cmp sbb jne mov cld shrb inc popa aad push jl stos cmpsb in std add roll ja (bad) lcall dec aam lock add leave cmp or lcall sub into mov jp aaa lahf dec mov jbe lea (bad) in (bad) jmp jecxz mul jo and pop leave sahf xchg or push mov (bad) (bad) incl pop mov sbb sbb xchg enter es hlt mov aad clc xor mov out in imul inc roll xchg loop (bad) lcall jp add scas divl jne dec dec mov pop jno sahf push cli ret jns ret (bad) lcall and pusha sti notb dec repz pop out sbb inc push xchg sub or ds imul hlt mov cltd dec subl (bad) incl cmp in push loopne ja fisubrl mov or mov cmc stos adc push xchg push pusha jo add (bad) push mov sbb push jge xchg mov cmp (bad) (bad) (bad) jg sahf loope add dec mov add jne ja (bad) (bad) (bad) (bad) jl lea add lds (bad) clc loop movb xchg movsb inc aad idivb adc clc cmp in inc mov lods mov stos jg xchg mov pushf sbb imul (bad) enter decl bound mov sub or daa loope and out sbb and pop mov add pop ja push xchg or and (bad) (bad) ljmp test sub mov fildll dec int inc xchg xchg ret adc jg test lods push push idiv or jg test cld mov cmp push out imul ret inc lcall daa push xor loopne pop adc aaa ret mov bound je je icebp (bad) (bad) mov or icebp jo cmpsb push in popa or stc sub rcl (bad) (bad) (bad) (bad) cmp cli xchg loopne fdivrl mov les pop inc inc add mov scas clc inc xlat ret arpl jne xchg cmp popf loopne inc xchg sbb (bad) (bad) lcall cmc (bad) out sub stos (bad) push and dec inc (bad) jmp fldenv test pushl lcall in ja cltd adc jb dec jae pop mov (bad) (bad) (bad) mov xchg cmp mov xor mov inc sub dec in and push adc (bad) (bad) (bad) pushl sub fildll out push xchg adc test and in sti (bad) jg fistpll popf rol popa jae mov test cmp in jg ljmp mov mov jb in dec and sub jmp psubd roll push cs cmp and (bad) (bad) mov int3 out sub (bad) xor add adc xchg (bad) (bad) (bad) jmp iret test test int cmpsl movb decb shrb push sub push cld (bad) out xchg lret imul cmp (bad) outsl pop jmp mov outsb and xorl jno add xor or xor cld sti stos inc dec (bad) into (bad) (bad) (bad) incl das ret pusha insb int3 xchg ss inc sbb cwtl lret cmp jno jle out movsl test (bad) (bad) (bad) in test mov es hlt fwait aas cld jbe inc mov fstpl ljmp fistl nop or dec and adc push sub (bad) (bad) (bad) (bad) call (bad) mov xor out push sub lods cmp ds pop test (bad) jg (bad) js mov inc hlt mov add xor out jmp jno push (bad) (bad) incl lods jle fnstenv xchg adc cltd das fbld (bad) (bad) (bad) (bad) incl and test adc aam popa or push imul cmp pop xchg (bad) (bad) (bad) incl js in sub push and adc cltd mov xor add cmp (bad) (bad) (bad) lcall pop xchg fdivl aam in shrl pop add cmp inc pop mov (bad) (bad) incl pusha xor movsl inc mov xchg stc jg push in imul push sub mov enter pop sbb (bad) out cli (bad) jl adcl ret pop cmpsl (bad) mov adc enter push into cs (bad) fcomip ljmp cmp push pop lret dec insb imulb popf stc sbb dec icebp (bad) ljmp cli sbb enter imul push loop (bad) into jo mov dec (bad) (bad) decl sub or leave sarb cld arpl addb xchg jno (bad) lcall ds lret out pop stos pop mov imul aaa imul (bad) (bad) lcall pop mov sub jmp test in in pop mov out dec sbb inc insb nop pop (bad) (bad) (bad) incl in ja mov fwait mov bound sub push loope xchg pop hlt pop jns int sbb mov shlb arpl scas add jg cmpsl leave shll lret sbb mov xchg pop pop stc loopne mov outsw dec jns,pt push cwtl jb mov popf inc push (bad) lcall outsb rorb jg mov xchg inc mov cli (bad) leave cli push lret cmp (bad) (bad) (bad) (bad) in push (bad) lds jg mov cltd cmpsl fmul xor push xor (bad) (bad) (bad) call xchg lds fidivl jne mov aas mov nop add (bad) pop icebp lcall or inc cmpsl stc cmc aad sbb out (bad) arpl (bad) or pop and jmp mov xor ret sub (bad) (bad) call dec mov jb ss dec shr loopne sar pop cltd push leave loop sar clc repnz mov sbb or in jl fs (bad) (bad) (bad) pushl jle call dec js sub sbb in cmpsb cmpsl push lock dec sub (bad) cli push cld pushl mov push popf repnz xor gs mov minps jmp mov push adc imul lret (bad) (bad) (bad) fisttp add jnp mov repz mov cmp sti and (bad) ljmp pop out roll movsb mov or jp syscall movsb je or fisttpl (bad) jg stos jge xor test addr16 icebp cmpsl mov ret xor repnz insl mov (bad) (bad) inc push adc sarl mov rcrb imul mov aaa mov popf cmpl arpl divl sar daa cld in cmp mov inc fsubrs sbb push push add imul hlt adc xchg cmp xlat inc std daa ret aam (bad) (bad) (bad) push call add ja cltd ds push mov movsb ljmp (bad) (bad) mov test out call fsts lret incl adc rcl (bad) push adc in stos mov movsb mov test (bad) (bad) mov push sub jo dec mov leave out insb sbb mov arpl (bad) (bad) (bad) decl push pop jb jb pop mov adc in lds sub or mov test sti shl stos imul cmpsl jecxz xchg loopne add or les shrl mov (bad) cmp mul dec insb push ss xchg mov sahf jecxz dec jae insl xor nop pop (bad) cmpsl (bad) (bad) jmp testl jnp dec (bad) jmp into insb loop xlat sub (bad) (bad) decl inc test test adc dec repz (bad) std les xor pusha lcall xchg mov mov sub stos lret ja push dec inc mov and bound dec xchg mov ficom lods aaa cmp push cmp pop xor pushl fisub mov push jbe xchg int and test dec into (bad) (bad) (bad) pushl mov mov repnz xorl or xchg test (bad) (bad) sti mov sbb data16 xor add sub ror mov pop xchg (bad) and (bad) (bad) call lock iret jne pop xor test pop mov mov dec add and dec xor loope mov rolb xor xchg stos push loop (bad) (bad) lcall mov daa push icebp xchg jg cli jo pop ljmp jp add inc pop xor (bad) (bad) lcall adc cs rol inc fcomps xor sbb or jecxz xor sar pushl and jmp hlt fstpt (bad) jg pop mov jecxz pop pop (bad) rol test scas xor (bad) mov dec add push sti inc sub movsb adcb pop aad nop pop js aad jge jmp mov dec mov fistpl into orb (bad) jg mov sarb push inc or mov ficom pop (bad) (bad) (bad) decl mov imul js push xor repz cmp hlt cmp repnz (bad) icebp sti sub adc mov clc das xor out lods push sbb mov dec js leave dec jae,pn mov jle jno mov (bad) lcall lcall cmp fs mov mov mov gs inc incb sub xchg stc dec dec or loopne dec and (bad) int3 xchg test out (bad) ljmp lahf sub lahf sarb push sub hlt push adc (bad) jg adc (bad) adc ja sti pop sbb imul loope hlt mov jae movsl movups addr16 (bad) (bad) pushl jae pusha ret push stos arpl pushf (bad) (bad) mov (bad) (bad) (bad) jg pop hlt sti cmp cmp or sbb dec mov mov aaa dec jns insl les (bad) mov out push xchg mov ss jmp xchg pop xchg loop (bad) pushl sbb mov dec jno dec xchg mov arpl (bad) (bad) call jecxz int push sub push push mov push inc push in test sbb (bad) (bad) jmp inc add out cmp aaa sbb mov cwtl cmp sbb fs (bad) (bad) (bad) incl into sbb lret cmc jo (bad) imul xor jnp idiv (bad) (bad) lcall clc (bad) (bad) mov iret (bad) or pop in and mov (bad) (bad) (bad) jmp fwait jno sbb shl loopne aas push shrl mov pop sbb mov (bad) (bad) loope lods dec (bad) mov lahf (bad) (bad) cmc inc cltd jl cmc xchg jl xlat inc fcompl out out (bad) (bad) (bad) lcall ret push push xor ret sbb jle fmul lods les ja push lods jmp fs cld push ja push daa cmpsb (bad) lcall sub sbb daa mov (bad) neg (bad) (bad) (bad) jmp jnp,pn adc js sbb adc dec pop jo pop jb cmp (bad) (bad) (bad) ljmp in psubw (bad) aaa movsb iret in out sbb xor call push xor leave push out (bad) (bad) incl cli sub sar jmp fwait out jae enter pushl jmp insb repz mov (bad) (bad) ljmp sbb imul into cs stos pop pop rclb je cmp (bad) call aad pusha pop clc sub mov mov (bad) scas mov cli add sub scas cmp or rcrb (bad) (bad) mov push sub push sti mov inc negb test mov fild call mov cmp pop and (bad) jmp sbb into dec pop push daa fistpll push das sar fidivr stos cmp fcompl (bad) ljmp scas test cltd inc outsb insl ljmp movsl daa pop cmp cli push cmp xchg cs xchg (bad) mov jp (bad) mov je xchg int3 pop cld (bad) (bad) mov shlb cmp clc push pop pusha clc adc js lahf (bad) (bad) call xchg ret pop jnp,pt push dec in jb jecxz test addr16 fsub inc scas repz lock sahf sub into jbe sub (bad) incl mov push jnp scas mov and add push cmp (bad) jg call sub popf mov jnp rorb lea je std loopne or (bad) jmp and fnstenv mov loop xchg lret ficoml ljmp (bad) jg adc and dec (bad) add roll movsb test cmpsl int3 movsl jb std (bad) (bad) (bad) pushl lock sub inc pop aad push pop outsb xchg sbb cs jmp xchg aaa cltd les push and sbb ljmp xchg cli mov dec xor inc (bad) (bad) (bad) ljmp dec fmuls or xor adc test xor jbe inc cmp mov es sbb insb add and aam imul (bad) (bad) decl arpl sbb pop adc adc mov dec loop ljmp ljmp das pop or leave or out xorl adc and xor mov call (bad) decl lock (bad) mov andl xchg mov mov (bad) call out out and pop mov jmp push adc cmp push popf popa lcall pop lea scas imul test test sbb ret arpl (bad) (bad) call fldl aaa in cmpsl cmp mov outsl sub jecxz and xchg aam (bad) (bad) (bad) (bad) mov mov mov pusha xchg adc push xchg test adc (bad) (bad) (bad) inc push jae js fsubrl call mov (bad) push add inc stos inc pushf iret jb inc (bad) mov nop mov ss je cli sub incl dec lahf test (bad) lret popf movsl jp jmp cmp pushf enter aas (bad) sar jbe add (bad) lcall xor insb mov or jnp (bad) call pop fldt jae les sbb (bad) (bad) fbld fs cmp cs pop lods xchg lahf in mov push ds mov fldl inc mov sar out add decl mov mov mov loope (bad) ljmp aad int3 cmp pop and cwtl dec test jno jl xor (bad) (bad) mov mov loop push in or xor (bad) xor test lea (bad) (bad) (bad) pushl push (bad) and pop mov xchg add ds sub pusha jl inc jb (bad) (bad) decl push jne sbb push add push xchg in adcb (bad) test ljmp jg mov sub shrb (bad) dec rcrb out mov ja std (bad) (bad) pushl out pop push mov adc ds jb inc ss xchg jmp jg sub sbb flds fidivrl mov sbbb or test jmp repz pop xor add pop in enter mov call ds scas dec (bad) cmpsb mov cmp (bad) sti mov and (bad) (bad) (bad) out in daa test mov add xor jns test arpl (bad) (bad) (bad) mov pop out scas jno xchg (bad) cmp inc je inc dec sub sbb mov push push add fcompl push cmp push xor cltd je loope xor cmp jmp (bad) cmc push pop fstps lret (bad) mov aam push mov icebp jg pop movl in subl js (bad) (bad) (bad) call lea xlat adc push pop jp inc aaa jo jae fnstcw ss xchg pop lods test pushl std sti fwait mov sbb adc push sub ljmp imul bound or pushl mov push in xchg xchg pop pushf addr16 fs (bad) (bad) jg pop aas sar rorl (bad) mov lds out sbb movsb push add jne (bad) (bad) jmp int3 sub fs sub fcomps xchg add jnp add (bad) cmp aam and fs push enter mov in jp int xchg enter jb sub fs movsb es jne push rorb lcall jge mov add push or iret out fnstenv mov pusha dec mov iret sub mov sbb data16 fnsave jp fisubr xlat or lods or sbb add int rcrl das mov (bad) (bad) jg xor xor push rcll lea lods xor dec lcall mov cmp xlat dec (bad) (bad) (bad) lcall fldt sub mov or add lcall mov cld scas xchg push in test imul call cmp jle pop jns adc fstl push inc jp ds inc mov sbb or test neg in lcall cmp pop jmp mov inc cmpsl jne fxch popf push das (bad) or inc aaa dec jb (bad) (bad) decl outsb fsubl and rcr sbb andl test ret pop pop fild adc push cmpsb (bad) (bad) incl xchg je test cmpsl cmp mov test movsb xchg add gs jae cmp std push test cltd mov ljmp cmp fwait (bad) (bad) (bad) fmul sahf mov fcomps popa sar or mov lahf push or cwtl (bad) (bad) (bad) (bad) jle stos push aam mov arpl xor inc (bad) into call lea xchg mov (bad) mov loop jb xorb call imul jnp sub (bad) std push and push sbb cwtl xchg mov in mov incl and mov test insb inc into lock cmp inc add add inc mov pushl (bad) out or push pop xchg lods dec ret lret push mov das jns pop test (bad) (bad) (bad) cli call pushf sahf aaa inc mov xchg sbb in jecxz sub je decl loop dec aad push mov mov inc loope jae sahf cmp jno xor adc sub dec (bad) (bad) call add ret cli (bad) mov repz xchg or jno das cmc repz dec (bad) (bad) (bad) (bad) (bad) jg leave ds dec arpl mov scas sbb (bad) mov mov ret add imul addr16 mov mov call fsubs mov adcl shll int3 insl lods xor lods pop xor mov addb gs (bad) xor sub jo fidivr mov or scas pushf mov add std fbld xchg cmp mov add inc add (bad) (bad) (bad) jmp lcall (bad) data16 lods pop imulb mov xlat nop lcall mov and (bad) mov loope dec fdivl push jl pusha xchg rcrb hlt jl adc daa stos (bad) (bad) (bad) jmp test mov clc sbb jne pop imul sub movsb lock test aaa cld (bad) push (bad) int loope inc stos mov insl adc movd call call inc imul pop mov imull lcall lret stc pushl aad ret (bad) pushl rcrl lods scas pop mov test xchg adc imulb (bad) jg jg test cwtl popa jns inc (bad) jo (bad) repz dec out test mov dec sbb xor sbb jne shrb or jle loopne xchg sahf cmp in xor lock and movswl mov iret inc test cwtl mov mov sti (bad) (bad) (bad) ljmp notl push add mov adc inc jmp aas mov ja mov inc cli mov aam xchg pop pop push xchg cmc push jmp jg fistpl lea in int push fcmovbe sbb xchg (bad) (bad) (bad) pushl jae sbb xor mov (bad) mov in lcall insl dec jo call or ds sbb add pop (bad) (bad) (bad) call pop fnstcw dec loopne sbb cmpsb mov adc fnsave fbstp rclb (bad) (bad) pushl mov fdiv sbb test int dec cmp mov ljmp js lods lea test loope push repnz jbe and sahf mov push (bad) ljmp cli test xchg mov inc test cmc imul and (bad) (bad) (bad) (bad) push stos hlt push or out push ljmp and (bad) mov jns cmp (bad) jmp cli jmp lds aam sub lret mov sbb inc mov (bad) (bad) (bad) call out or lea or outsl push cmpsb and iret mov popl push (bad) decl lahf pusha mov xor jmp xchg xor out (bad) push adc movsb mov (bad) (bad) (bad) (bad) cli repnz fisttpl clc jl les scas (bad) and int push jbe aam fiaddl add fs xchg icebp out lods fsubrs mov mov (bad) (bad) (bad) (bad) ljmp pop lcall stos fimull out iret mov jge je or (bad) (bad) ljmp sub jl pop and cli test sbb or lahf inc pop mov cmp jno dec sbb push ret and mov repnz cmp (bad) (bad) push fist and mov mov jns add les (bad) (bad) lcall xchg push inc inc (bad) leave or cmp mov dec sbb jmp mov fidivl (bad) (bad) mov mov jecxz jae test jns adc cmp aad pop (bad) ljmp aad pop xchg scas mov les mov xor jmp cmp cli cmp subl rolb push das clc jmp in and shrl mov bnd dec (bad) loopne (bad) dec sti lock jmp pop sbb imul loope jne (bad) and cli into xlat incl cld mov imul out imul add les scas clc (bad) ljmp mov add adc jl add hlt xor dec mov ljmp jg cld cmp stos sub loope aad xor lret push es cmp rorb (bad) (bad) (bad) ljmp testb fildll jbe adc lret xchg dec test (bad) bound sbb push in decl lcall cmp (bad) dec imul push and scas or dec mov inc (bad) (bad) (bad) jmp add enter jae xlat ja inc call jg inc jle popa outsl add std (bad) decl push adc je and add out jnp aad fwait push mov popa mov jg call test inc shrb repz loop adc in xchg push push insb jmp (bad) (bad) ljmp in sub push push mov in mov sbb fwait out jns popf mov dec sub and cs std popa fisubrl movsl test loop push dec loope fwait (bad) (bad) decl out add mov lock sarb sub jnp cmpsb push xchg (bad) (bad) dec dec sub dec dec leave inc scas lret xchg inc ret mov fwait into and jae xchg inc movsl mov (bad) (bad) incl repz lret (bad) dec cwtl pop (bad) jno cmpb dec push xorl (bad) out cli jmp inc cmpb into or jnp mov xchg mov das clc (bad) dec jp sbb sahf xchg mov aas sbbl out xchg cmp (bad) (bad) pushl xor stc mov cld scas outsl pop adc bound push xorl (bad) (bad) (bad) (bad) decl cmp jle inc cvtpi2ps fcompl push rorb lcall (bad) pop add fisubr lcall jg scas in ret xor (bad) mov fildll or cmp inc cmpsl (bad) jle xchg insb mov (bad) stos stos (bad) (bad) call js lods inc pop mov xor addb inc in jno,pt test (bad) (bad) jg dec jmp sbb sbb jl cmc and mov ljmp xlat fcomps ret (bad) incl sbb (bad) in push adc cmpsl scas (bad) loop movb (bad) (bad) (bad) (bad) cld in xlat pop mov lret mov adc (bad) (bad) sbb and (bad) (bad) (bad) jns cltd mov adc and fsubl clc mov push lods out daa stos or jbe mov ds add push mov addr16 (bad) (bad) pushl mull lock push mov inc lahf idivl adc insb enter (bad) push int stos sti flds adcb (bad) mov xor and jle xchg lea pusha mov (bad) (bad) (bad) call dec andb cltd lock lret fistpll push mov mov push inc sbb popa lods imul mov or pop sub mov ljmp mov dec jle push mov adc mov repz out push lods jecxz aad add jo or aam (bad) (bad) (bad) mov mov sbb mov sub es aas add aam sbb sub xor push aas xor push (bad) inc cltd mov fiadd or (bad) push std (bad) call ret cmp inc mov dec xor dec stos aaa std (bad) incl push mov icebp add jmp js fwait adc rclb (bad) call dec pop xor jae movsl add jle les dec in mov adc call lss out dec push add inc faddl in mov (bad) (bad) lcall xor xsavec dec adc pop fs jae stos add lock (bad) fisttpll sbb cmp mov inc push xlat xor (bad) call inc pop mov loopne add push mov imul das test mov fisttp and cld ljmp es loopne mov movsl test add push xor clc mov push cmp in jecxz (bad) jg mov loop mov aaa push ljmp add call addr16 pushf inc aad pop jnp (bad) (bad) call orb jl leave enter bound lods jmp dec mov fsts mov (bad) (bad) (bad) ljmp mov pop jg lahf mov dec mov popf jmp cmp dec push cld (bad) incl mov test jmp lock and pop icebp incl xchg inc push popa inc pop test shlb mov mov out test loopne inc out dec (bad) (bad) (bad) jmp or dec add push dec jg lahf adc and and (bad) incl add mov test jge mov push (bad) sub (bad) lock popf xchg pushf imul (bad) incl sub fdiv fdivrs loop push cld dec mov ss mov (bad) ffreep call push test sbb dec sub xchg jmp out ds mov sar and mov mov std inc (bad) (bad) (bad) jmp adc and stos jmp pop pop pop or push dec dec or (bad) decl nop and aam into (bad) mov push pushl das mov fistl or sti mov xchg fistpll pop cmp mov out inc sbb rorb ss aaa jecxz sbb mov incl dec stos in or dec sahf std (bad) call mov sub and je inc stc repz push mov mov addl sub inc test mov (bad) (bad) fcomip sbb mov mov jb lods lcall mov test jmp push jnp into xor lcall or mov sbb (bad) (bad) (bad) ljmp adc cmpsl ret jle in adc fcomps and dec xchg xchg arpl nop sub xlat pop and mov pop cmpsl mov xor ljmp mov and (bad) dec movsb xor (bad) (bad) decl incb cmp test add dec sub mov mov (bad) mov call xor mov call dec test xor sub stc mov test jg adc lock (bad) (bad) (bad) out inc adc inc pop out aam js mov iret icebp pop out cmp jns (bad) mov clc dec and inc lret sbb (bad) pushl add stos push push push xchg mov movsl cs push xor dec (bad) jmp jns in jmp popf lcall xchg ret jge jae lods (bad) dec fisttpll ds (bad) imul loopne outsl cli inc loop and outsl or scas shlb push std (bad) out mov nop mov mov outsl adc jl out sar aaa jmpw rolb mov mov (bad) or dec sbb mov and mov (bad) (bad) jmp push add and out outsl imul pop ss sub loop dec sbb (bad) lcall and jp lret and mov sub jge insb gs xchg ret iret lock (bad) (bad) (bad) fisttp sahf lcall movsb pop xchg cmp push arpl adc xchg loope pusha decb and dec insb (bad) dec jl (bad) (bad) ljmp ficompl xchg cmpl test mov stos or fdivr (bad) (bad) decl xor inc or lods inc pop sub mov mov cli lret adc lcall addb mov xor flds enter icebp push insb push xor rolb ljmp rcr (bad) jg bnd cld jecxz push push test cwtl lcall xor (bad) (bad) (bad) ljmp or push aaa sub mov aam rol fnstsw fisttp addr16 add (bad) (bad) ljmp jno push nop mov sbb sbb fidivl jp addr16 sar fdivrl mov icebp aaa gs push pop rolb (bad) (bad) decl lock shl mov ret scas mov jg scas push pushf pop hlt (bad) call jmp lret cmp outsb mov pop fs test (bad) (bad) (bad) lcall fcmovne add mov stos add scas sar js xchg loop push add sbbb cs ficom out shrb (bad) aam and in dec (bad) or inc repnz xor nop iret and pushf inc lock (bad) (bad) (bad) jmp sub jb cltd pop or std pop jb or dec cwtl sbb les hlt push xchg (bad) (bad) (bad) incl roll jle pop dec mov lods lret in jge cltd lods cli sub mov mov cmpsb rol mov (bad) ljmp test test adc gs mov stc mov push push out sub lcall jmp loopne cmpl add outsl scas aam nop push push clc push enter loop (bad) jmp inc inc pop mov sbb mov lret or (bad) (bad) mov cmp mov add (bad) sub enter subl push mov cmp loope and mov and (bad) xor or aaa xor pop (bad) (bad) (bad) (bad) flds sti add insl sbb or les and or rolb or jno das cli (bad) mov popf xchg sub sub jg iret mov inc push cli loope (bad) (bad) incl lock ret out outsb xlat or test push ljmp fildl mov pop or dec inc imul pop fucomip mov jge (bad) (bad) (bad) call insb ret pop adc and divb stos sub cmp or (bad) (bad) (bad) call inc xlat mov adcl mov push lret mov out dec pop cmc dec loope ljmp inc ret adc mov adc fmull insl mov add ds and shlb mov call fistpll std cmpl test imul mov cwtl test push loop addr16 adc cmc xchg jg ljmp mov mov subb (bad) lcall leave ss roll lock lds sbb sbb push jle (bad) (bad) (bad) incl pop in pusha lret fwait rcrb out and add out out xor xor pop push sbb mov push xchg (bad) lcall ds lret or das xchg test ljmp (bad) (bad) jmp inc cwtl dec jae adc stc jbe lret push cmp mov ds dec lods call shrb bound or fmuls aaa (bad) stc dec fwait mov (bad) incl mov lods stc stc xor mov jns cwtl sbb aam fimull xchg dec and push sbb decl ja pop rcl outsl fldcw cli call fbld mov xor lods jae clc (bad) mov arpl dec (bad) insb pop xor push stos mov sub (bad) push jl mov fdivrp stc insb mov cld scas xor add mov sbb adc xor mov cmp (bad) (bad) (bad) pushl jne jmp iret mov addr16 push gs sub int loop decl (bad) fimul push xchg rorl pop out and sub mov push sbb push sbb ds jg lcall in jmp cmpl jmp (bad) incl jmp jno mov or cltd fucomip inc mov jg ds jg mov dec jo (bad) (bad) lcall push add and test clc cmp adc xchg fdivl incl adc and pop js cmpsb incl cld jmp mov dec repz mov mov jb test add dec jae out and xchg cs enter xorl daa imul decl loope out (bad) clc mov jb cmpxchg subb (bad) jmp inc push add jnp,pn xchg lcall or dec stos lods push (bad) (bad) lcall (bad) cwtl fbstp or pusha push xchg mov fistpll stos cmpsl clc outsb mov xor pop add push sub (bad) (bad) dec lods mov pop popf add jp push cmp adc repz (bad) (bad) fist icebp sub aas (bad) jo xchg jb push or cmp sbb push hlt and outsl jl,pt arpl cmp and rol sub shrb pop js pop aas xor lea (bad) cli dec cmp jbe sbb xor incl dec and mov fsubrs addb jnp adc out adc inc inc push (bad) jge jno shl hlt imul inc ljmp fldt xor cmp mov sbb lret mov (bad) (bad) jns inc xor enter jmp mov jns nop lock (bad) (bad) (bad) ficompl faddp mov cmp jle adc push xor hlt cmp popf int3 dec (bad) (bad) call xchg sbb gs daa and pop mov sub hlt notb in (bad) pushl cld pop in aas cmp adc or add xchg ss stc test mov pop xor lods and xchg inc jecxz pop fdiv jbe mov out (bad) (bad) (bad) pushl test not xor inc jb push and repnz notl data16 fcomip (bad) (bad) fistpll push or sbb ret int3 xadd es push mov call cmc xchg rclb enter push dec cs jp incl xor sbb cwtl adcb sbb jle xor test and ror test lret shll xor dec dec sbb aas sar cli pushl pop push mov adc sahf push xchg cmp inc mulb sbb fcomip loopne test stos mov mul dec movsb dec adc mov mov push lock ds dec pop nop jecxz xchg jge xchg (bad) dec or (bad) ficom inc in cmp mov xchg push lock movsl sbb nop outsl jle subb jne jne mov xchg and (bad) (bad) (bad) ljmp jns pop (bad) and mov fnstenv aam bound (bad) add (bad) decl loope pop jb lea adc mov aad cmp cmp dec dec lret gs lret ja cmp idivb xchg jmp (bad) xchg divb mov fidiv and jge cmc sar fisttp (bad) (bad) dec insl aas jl out sub push xor loop xor in out and push ds adc pushl mov pop fbstp aad or imul std nop push xchg bound ja clc cs mov (bad) and cmpsb (bad) loop idiv (bad) push pop mov xchg pop pop gs shll (bad) dec lea in movsl ja (bad) (bad) (bad) (bad) cli (bad) call cmp rcrl or mov cmpsl pop xchg ja aad xchg (bad) (bad) (bad) incl xchg xchg cli jp pop in add cmp (bad) xchg flds call (bad) (bad) (bad) incl inc push decb stos mov adc in add mov imul clc (bad) incl dec mov xchg sti enter loop fwait js and inc or sbb inc jg pop cld das loope add mov and sbb (bad) jmp or fiaddl cli jbe cli test cli call inc (bad) scas xor stos in pop push out sub (bad) and (bad) (bad) aas fiadd sbb stc hlt pop packssdw and lea mov mov dec (bad) pop iret push push cmpsb lods mov add sub xchg stos loope rep add es xchg and jnp (bad) aas in out mov jg mov xchg lods lret enter fsubs xchg ficomp (bad) jmp jle or sbb cwtl in cmp inc xchg dec jno xchg add (bad) mov sbb call pop dec std ret repnz adc inc xchg sarb (bad) (bad) out mov arpl test cltd mov (bad) lcall add mov inc iret dec cmc jl cmp (bad) jg jne mov dec xor jo jmp mov imul fmul outsb cwtl test (bad) (bad) ljmp or std and inc stc xbegin mov sbb pop sbb ret mov fs (bad) call cld jge inc call jns or jb fdivrs mov mov movsl ror inc jb add lds ljmp outsl mov sub fmulp sbb cmpsb out or jmp jg (bad) push jmp add mov mov mov mov (bad) (bad) pushl push addb lock add mov loope adc clc call rorb sub enter ret decl loope mov mov pushl call jg or xchg mov dec adc or fisttpll (bad) ljmp jne push mov xchg cmp lret lret inc xor dec out sbb or mov dec push cmpsl fldl repnz mov xchg fcoml es add clc and (bad) (bad) ljmp dec lahf push scas out adc je or mov call add push add add mov push sbb mov into xchg lds in fsubl sbb mov cmpsl cmpsb (bad) cwtl leave mov jae mov bound fldl push xchg inc jge cmc fcomip xchg fimull (bad) jmp add (bad) decl xchg fmul mov ret aaa xchg xchg jle mov or pop jmp dec pop push lock adc cld (bad) (bad) decl mov inc mov outsl jge,pn add insl mov gs or jg sub out movb jl xchg ss fwait scas pusha aaa fbld push clc call push mov push ljmp dec inc pusha lret lahf inc clc pusha bound add stos xchg mov (bad) mov jmp loop xor and xor (bad) (bad) (bad) (bad) jmp sub pop pop pop cmpsl fs push jl iret clc aam cltd out xor lcall (bad) (bad) fcmovu insl and leave mov adc adc cmpsl test in lods clc sub (bad) (bad) cmp lods cs push adc testl add sar (bad) decl adc out jo rcrb aaa jle mov cmp lods xor jecxz ljmp lods sub add adc pop dec xchg or lcall pop repz inc sahf lahf jl sub dec lock aaa in pop add add pushl std pushl (bad) popf int sub mov and popf gs in push jns lahf rorl decl and stc lds lea rolb xchg out jns imul outsl mov xor mov ds cld lock pop push sub pop and add (bad) cmp mov inc pop pop sub fs fidivl (bad) (bad) (bad) jg sbb hlt cmp in cli add push fnstenv dec in mov in (bad) ljmp rcl enter into int hlt or and push jmp insl jge (bad) (bad) (bad) ljmp pop jne or add fsubs mov cld sub push jp mov xchg sbb mov repz adc dec pop inc rolb insb popa mov push fwait outsb movsl mov cltd or (bad) (bad) jg xlat dec (bad) cld out fadds es jno xchg pop xchg (bad) (bad) dec sub push clc clc ljmp clc fstps sub push dec add rorb inc loop in cmp pushl mov test test pushl inc aam pop mov push sub cmp (bad) jae dec push mov cmp std inc mov (bad) ljmp cs (bad) (bad) jg mov push jb sti ret mov call mov adc pop sar (bad) xor adc pop dec iret cmp push jp (bad) jmp mov movsl fstpl mov aad lock fcmovne test outsl ljmp or loope jmp push pushf adc psubb ljmp es adc sub (bad) inc push cmp cmp sbb lret cld ljmp inc mov pop call (bad) adc (bad) fisubr cli ret or stc mov xchg mov inc sub (bad) sub xchg adc push mov cmp (bad) (bad) (bad) dec loopne jmp fsubrl or stos test inc loope popf stos pop insl rcrb cld pop and cmpsb (bad) fcomip pushl pop pusha stc mov mov push or jge xchg inc mov push fidivl push sbb ret mov add cmp out stos sub mov sub or (bad) (bad) (bad) dec jo mov push pop xchg mov inc fisttp ja or inc mov incl mov test cmp aaa stc mov (bad) (bad) (bad) decl sbb aas idivl outsl xchg fwait dec cmpl cmp (bad) cmp cmpsl idiv (bad) lcall or fist mov je (bad) icebp xor mov (bad) (bad) incl out in push and repnz mov pop lret in jae mov shlb pop push pop dec (bad) (bad) (bad) lcall aas lea pushf js lret mov mov push sub mov fstpt push test and sbb jae sbb and test inc mov add mov mov stos ds hlt dec aas imul (bad) lcall add rcrb pop pop ja icebp mul ret push fwait add js push sub (bad) (bad) (bad) sbb (bad) (bad) (bad) mov mov cmp ret inc fwait cmp mov pop std mov jle cmpsl lods or inc (bad) jmp hlt pop lock sbb fild push xchg push mov imul adc xchg dec lds sub lret (bad) (bad) (bad) (bad) decl into iret xor rcrl jbe mov mov mov addr16 adc loop (bad) incl mov call into outsl sbb es xchg dec cmp (bad) (bad) call vpand ficom int les fisttpl std mov jns add scas ja and gs movsb cmp pop xchg xchg icebp scas mov pop or mov push or (bad) incl sub add cmp mov cmc (bad) lcall pop faddp lds dec push in repz cmp adc out pop inc mov add test xor dec pop bound jb lods addr16 push fs (bad) (bad) (bad) (bad) cmp daa sub aaa and pop xor xchg jbe mov (bad) mov xchg paddd mov ret ret repnz inc in ds sbb (bad) (bad) (bad) pushl push (bad) int test mov test mov inc in mov or cmp mov sub cmp cmpsl fstps jg incl (bad) sbb fwait int stos sub ds movsb sbb pop sti (bad) (bad) decl sub sbb dec cmp popa mov sbb push out ss adcb jg ljmp repnz mov lds jne sbb (bad) mov push ljmp sub loopne insl cmp stos jne incb outsb jb das pushl outsb mov ljmp and icebp stc mov mov adc (bad) jb nop/reserved pop int3 cmp and bnd stos in cwtl aas jp ss pop incb mov xor into mov (bad) (bad) incl inc jge xor cltd ja fnsave ret xor fs sub xchg out and pushl xchg mov pop (bad) stos cmpsb (bad) fsubl rcrl (bad) (bad) (bad) jmp push outsl stc xchg add adc in call fcomp mov pop push jle mov push fwait mov xor ja mov imul dec fidivl lods sahf sti mov cmpsb push cmp add loope stos xchg sbb cmp cmc xlat outsl fistp cmp jl push xchg hlt (bad) incl push mov movsl movsl aas push popa mov jg ljmp mov shrb imul and cmpl cmpsb (bad) (bad) incl mov jge add inc fsts xchg lods (bad) push push shrl pop (bad) (bad) (bad) call mov test add cli mov dec loopne (bad) outsb inc test add lods aaa (bad) ljmp lcall cmp mov jg add pushf insb hlt mov pop repnz imul or pop push inc movsb ret inc decl inc sbb subb fistpll dec ds xchg pop and sub jb xlat inc sub ljmp pushf cmc sub dec movsb int or jo clc sub in add dec jno pushf cmp (bad) (bad) incl ss mov lds xchg fnsave int3 in jae cwtl mov add inc ds push outsb je xlat iret test (bad) ljmp mov or mov (bad) out or sahf cmpl and (bad) (bad) lcall push push or jmp cmp sub pop jns aas (bad) (bad) ljmp push pop gs imul cwtl in mov cmc mov (bad) (bad) call out aam sub test and sbb dec cmp test (bad) (bad) jg fisubr mov or mov imul clc enter inc hlt inc out sahf ljmp xor int3 shrl or ja mov (bad) je stos mov std sub movsl pusha mov mov mov dec xchg sub pusha ret ljmp fisubl loope mov (bad) sub call mov (bad) jg mov add lahf inc clc ljmp (bad) (bad) (bad) call and loopne add jns pop ljmp add scas mov (bad) (bad) lcall and pop dec mov shrl testl cli (bad) ljmp cli lcall sub dec inc add mov pop imul insl push dec inc rol in xchg repz loop stc mov adc movb (bad) incl add lds jns and mov add (bad) dec sub add xchg cmp lock sarb pushl ljmp mov cmp mov add jo mov and call mov inc (bad) add daa xchg sub adc xchg jl lahf shlb push and scas mov sub or (bad) call pop jecxz pop into pop adc push imul and stos cltd jecxz std outsl cwtl fidivl push je or pop cmp cmp in (bad) ljmp dec ds in cmp cmp and imul clc lcall aad ficoml sub sbb ret add (bad) (bad) jmp xor pop pop mov lods mov sbb int3 pop je movsl dec mov cmp ret rorb subb add icebp mov ja jns popf xchg adc mov int3 (bad) (bad) jmp dec outsb enter sbb or and lock (bad) (bad) mov adc xchg fdiv inc push pop frstor loop repnz (bad) jg movsb (bad) xor xchg or aas imul inc scas xchg ljmp test (bad) xchg fidivrl ljmp (bad) fcomip cwtl js dec ret outsb mov pop pop rcr sti xchg les (bad) incl ss inc nop cmc pop push jmp mov nop in aam cmc (bad) fisub inc (bad) or (bad) imull (bad) movsb sub ljmp pushf daa rcll add das (bad) (bad) (bad) jg es sbb xchg movsb test jbe icebp sbb xchg idiv fsts (bad) mov test or pop xlat dec inc add (bad) (bad) (bad) pushl sub shlb dec stos lret (bad) adc pop xchg bound push lock call xchg mov in addr16 (bad) pop repnz in push sbb das mov lcall jg jecxz cmp cld xchg lods push stos xchg jl mov add cmpsb xor ja les lahf adcl xchg fildll ljmp jnp push dec stos pop ds loopne mov (bad) (bad) (bad) fsubs lahf dec mov mov repz lock sub inc or iret fistl leave inc (bad) cmp mov sbb stos add int3 jg dec mov fistpll cmc jl (bad) cmpsl (bad) adc in in daa jmp sub adc ss cmp cld (bad) (bad) (bad) jl popa enter pop pop scas mov stos pop fidiv popf mov insl mov cmp (bad) aas test jo inc mov cmp frstor insb jno test les rcrl mov mov add (bad) incl push (bad) sub (bad) mov pop (bad) outsb pop lods fnstenv inc in outsl xor ljmp lcall mov imul sbb into jne sub (bad) dec jmp pop ds inc cmpsb jns ret lret xchg sbbb (bad) (bad) fistpll cmp sub lret cmp inc repz dec (bad) je and (bad) (bad) (bad) decl jo mov mov push repnz push clc cwtl fs (bad) (bad) in mov jbe callw jmp lock sti out out aad pusha or roll mov mov (bad) (bad) (bad) (bad) fidivr adc mov call jae rcl out xlat cmpsl in nop sub add lret ds push ret test jge xchg cmpsl (bad) (bad) (bad) jmp mov and pop add je inc mov (bad) pop mov dec test (bad) (bad) incl pop lret push pop mov (bad) pop (bad) lcall pusha mov (bad) popa out cmpsb or cwtl out clc (bad) dec pop pop jmp out cld and sub outsb push fistp mov (bad) mov and (bad) lcall mov push clc cmp cmpsl lea (bad) (bad) pushl (bad) pop sub or arpl pop sub jno adc push call or mov cmp cmp pusha jg in dec pop lea arpl (bad) mov lock lock scas jns mov fmuls aam jl enter push (bad) jge mov push pop lret xchg sbb add cmpsb out sar mov mov dec cmp jae out ss test jmp adc or (bad) pushl or insb mov pop and adc mov jmp stos sahf insl adc imul sbb lcall ds adc aam leave std push pop cmp pushl mov cmp xchg lahf mov sbb (bad) loope pushf (bad) (bad) (bad) ljmp shlb addr16 dec sbbl bnd mov aad xor mov jp push jno (bad) (bad) call inc pop pusha xchg jno adc dec pavgb adc xchg mov (bad) jmp xchg pop repz movsl cmp push pop data16 cmp call ljmp fsubs bnd sub (bad) je (bad) frstor sar mov push fdivr test nop xor decb push pop test inc jmp call jo test inc inc or dec fs mov ret mov and pushf dec mov push (bad) (bad) (bad) jmp mov and pop outsb loop mov push lds dec fcom push xor mov (bad) (bad) (bad) (bad) (bad) adc cld inc add inc inc ss jo lahf leave inc rcrl stos rorl (bad) (bad) call inc sbb test adc adc mov jle xchg pop out push or xchg jne (bad) (bad) lcall popf mov rclb pop cmpsl mov mov in cmp pop inc stos push cmp sub (bad) loopne,pn out push inc inc mov mov repz (bad) or add mov xchg (bad) (bad) (bad) call out fnstenv mov (bad) mov sbb sub in or sahf pusha imul mov incl cmp fistl inc mov out cmp inc add push loope jns add dec add pop mov fisttp js jl push call mov xor mov adc into cmp mov insl sti into adc (bad) (bad) incl imul jne jmp ret (bad) add call (bad) cmp add fwait int repz imul sar mov cwtl add mov test cmpsb sub out (bad) (bad) mov pusha gs mov aaa lret aam push data16 es (bad) incl addb xor push mov bnd pop (bad) push mov rol cmpsb or sti sbb std pop je jb xor lret or (bad) (bad) inc xor inc pop mov sbb fisub xor lock lock sub mov xor or decl inc stc lea movsl rol jl jge push inc inc ss jmp (bad) aaa and cmc push enter and pop les cmp or mov mov inc mov or push sar (bad) decl cmp (bad) roll imul and mov xchg pop in mov (bad) (bad) jg ds mov sub dec out fldenv push pop fdivrl mov mov and xchg (bad) fcomip (bad) lcall cmp push lods loop mov sbb and xor (bad) (bad) (bad) (bad) mov std sub movsb xor inc sbb fmull movsb cmp decl lods out cwtl adcb adc fldt std pushl jbe cmp outsl fsubrl (bad) lcall sbbl mov insb jmp ret push xchg and nop jns pop mov add mov push push cmp (bad) jmp cmp push inc int3 data16 pop into dec mov xor pushf cmp xchg (bad) jmp xchg and les dec or imull test (bad) jg push pop sarb or test inc pop sarb aas (bad) jg test pusha outsl add movsb mov insl ret and (bad) (bad) out clc fs clc xor cmc ffreep push sub (bad) mov (bad) outsl test cltd data16 jno pop ljmp sarb and jb (bad) adc inc (bad) mov loopne push pop popa add dec cli pop pushf dec (bad) (bad) (bad) jg neg cmp ja and push les xchg mov repnz (bad) (bad) (bad) lcall ljmp dec mov gs inc scas mov pop mov dec inc push (bad) cmp std jnp in inc push fwait ds movsb mov cmp (bad) (bad) pushl clc loopne sbb push std lds out dec xchg into jl repnz jae int xchg add call inc mov mov xchg mov cli push sahf jo (bad) cli and mov pop sub mov stos cmp (bad) incl outsl mov je gs je fdivrl (bad) cmp sub pop xor adc xor pop mov pop cmp es inc add sarb dec popa xchg sub jg cmp fwait leave in pusha outsb xor pushl leave (bad) adc aam insb stos insb and lret (bad) (bad) (bad) (bad) out (bad) aam lahf scas mov rorb inc aad mov (bad) or inc cmc cmp outsl clc cmp addr16 lods jle sbb and loop sbb inc loop and popf (bad) (bad) (bad) push pop outsb (bad) mov cltd aas cld stos pop mov daa test es out nop shlb cmc jno sub or negb or adc sub sub shrl insb (bad) (bad) (bad) lcall dec ret sub cs and gs repnz fstpt in jp dec clc xchg cwtl scas (bad) (bad) (bad) in adc stos je mov inc test jle xchg call cmp sbb aas loopne test test cmp (bad) fcomip mov popf push fsubs adc jecxz (bad) (bad) (bad) ljmp rol int3 lahf repz fimul jnp aad int3 aaa arpl inc jg (bad) call cmpl mov insl lcall adc xor sub push outsl xor inc jae adc (bad) (bad) jmp insb pushf jbe cmp pop test xchg fsubrl add or (bad) mov (bad) (bad) (bad) jmp popf mov jle or jecxz pop mov jecxz cld jae and icebp mov (bad) (bad) lcall push not out lds xlat and mov add sub sbb fwait cmpsb movsb mov (bad) (bad) (bad) (bad) mov xchg cwtl jae hlt push push lds push fsubs jae mov sub xor mov loope outsl cli jmp jae imul adc pusha shll mov pushf or push das inc mov xchg pop adc (bad) cli xchg and mov pop add (bad) ljmp arpl popf xchg cmp sbb and (bad) (bad) (bad) lcall or ds loopne pop popf pop je or push es fdivrp jl sar jg call call mov mov and (bad) aaa enter pusha repz test jmp (bad) idivb and jg (bad) ljmp mov stc add rcll pop sub mov or notb ds lret movsb mov (bad) jg dec push jmp in push jp dec adc out lea pushf inc call mov stos dec jno push inc jecxz and xchg ror mov mov add icebp pop ss pop mov scas lea xchg jae mov decl jp adc xor cmp dec adc vpsubsb xchg or (bad) jmp xor lods inc sub add rorl sbb inc dec in mov xchg or scas cmp ss out mov adc icebp aad push xchg rorb mov add call jle xchg push xchg push mov cs jge icebp (bad) push sbb es jecxz or js (bad) pushl popf ds test inc jo mov std (bad) jg mov cld cmc subb lods mov repnz rorb loope or bound or repz mov scas (bad) (bad) decl mov push cmc mov xchg mov stos cld push xlat pop shr mov loop (bad) mov adc sbb je xchg leave and xchg (bad) jmp jecxz push data16 add mov decl aas mov enter (bad) mov (bad) incl dec icebp lahf leave sbb cmc xor nop push sub jae inc es (bad) fcomip inc arpl fdivl pop mov mov stc inc push push xchg push xchg lods mov (bad) (bad) out or or sbb add hlt sub (bad) xor (bad) (bad) (bad) push push adc je mov lcall or pusha and add push jne shlb mov cld jbe lock xor push out js clc (bad) (bad) decl push lahf mov out (bad) mov xor add cwtl xor fcomps std jmp mov or push jae or (bad) out (bad) ljmp stos out pusha ret push mov jb ss in mov test les mov mov dec jno test sbb lock sahf sti test loop in ret jns,pt pusha sub ret mov push sub int or or (bad) movsb or aad or (bad) inc mov fsubl mov movsb sub ret pushf jecxz inc add ror je leave xor mov loop not in xchg and sbb xchg popf (bad) (bad) mov and pop push in imul sub jle jbe sub push ret push std (bad) pushl cmp das rolb mov divb dec (bad) (bad) mov lcall icebp or lock adc jb or (bad) (bad) (bad) decl cmpsl xor xchg jno and and jbe xchg and or shrb (bad) jmp or in lds (bad) cmpsl cwtl jp lock xlat add inc in sub xor mov sahf pop loop mov scas pop jae aaa (bad) push std mov pop jecxz jl mov mov (bad) jmp jmp push and std or rcr ret neg push das pop fnstenv and sub xorl adc (bad) (bad) call push push or push push les and aad push int3 and adc in fldenv sub pushf (bad) (bad) (bad) push lods stos or mov in stc mov rcrb inc sub in mov add (bad) (bad) pushl fisubl add shr out stos cwtl xchg std lcall inc nop stos aam jl aas mov xor std cmp or (bad) mov orl mov fwait (bad) int3 jl sbb inc mov xchg (bad) (bad) (bad) mov mov (bad) (bad) pushl outsb repnz dec cmpsb in pop test dec fnstcw adc ja xchg mov js cld (bad) (bad) (bad) ljmp stos (bad) inc push jne mov cmp leave mov add mov adc iret push push dec xchg mov or (bad) ljmp test es sbb insl in shrb cltd std or or push mov out push int3 insl jg lds cmp cwtl jb mov or std jbe hlt mov sbb call push adc (bad) (bad) (bad) fist dec push pop add pushf xor loopne in xchg inc gs cmpsl and sub mov inc cld shl or fstps ljmp dec and outsl sbb loopne sbb mov cmpsl push pop ljmp add xor inc stos adc adc negb xchg jno cmp mov cmp jecxz call adc loopne mov lret push inc jo or and insb mov stos mov ja mov int iret scas xchg lret (bad) ljmp mov push push lea (bad) xor lock (bad) lcall cmp xor movsb mov (bad) in cmp hlt in xor push add jns (bad) ljmp dec iret nop push pop mov jmp lret push cmp mov (bad) (bad) mov or cwtl cs mov inc mov (bad) incl into mov sub loop sbb jg scas shlb cmp mov ffreep jmp hlt out dec es sbb xchg xchg adcl pop mov (bad) incl lods in (bad) aas inc pop pop adc pop push xchg ret inc sub mov das cli fadds pop lods in fnstcw jmp and mov (bad) (bad) lcall inc pusha add hlt testl rclb (bad) mov mov jne (bad) mov sarl xor ret popf push (bad) mov jl jnp js aaa adc jp xchg mov out jnp sbb in (bad) (bad) (bad) mov or aad cmp inc inc push jg jo mov lods mov jg outsl incl fimul addr16 movsl repz dec mov movsb (bad) fwait fwait (bad) (bad) (bad) decl andl pop sar repnz popa popa jns jmp lock push (bad) lcall pushf mov outsb movsb psubusw enter pusha and push ret icebp push dec xor test jle push inc sub or inc cld jbe ljmp pop lods jnp in cmp push (bad) push pop enter ds loopne (bad) (bad) cli lret add outsb sbb jbe mov push adc inc out lret sub js jmp sbb add push and psadbw cmp repz dec xchg jg out cmp mov cmc (bad) fistp bound mov (bad) or nop inc add inc inc jne cmp test xchg sar out (bad) jg xor (bad) dec std dec lock xchg sbb mov cmp or (bad) dec jg test mov cmpsb push aaa or mov xor outsl dec imul jbe pop xlat (bad) decl adc fisub imul push xchg jmp jg or rolb jo and outsb push mov pop fcomi lret sbb (bad) scas ret incl ret inc ds sbb loope (bad) (bad) ljmp cmp enter cmpsl inc pushf sbbl jmp mov mov jo data16 outsb jp mov ja add mov inc jae lock clc cld or lods inc divb dec (bad) (bad) call inc sub jl shlb fdivrs jp fldt fmull outsl push (bad) mov cli cmp out ret mov add ss and (bad) ljmp add or sti xor (bad) (bad) jg pop rcrb (bad) insl dec jb fdivrp add jae mov ljmp and mov in and idivl pop ds in (bad) ljmp xor cmp lahf or mov repnz clc incl or adc (bad) ljmp push repz mov jno pop adc (bad) (bad) mov xor aaa decl stc adc cli fwait lods test jbe mov cli jne ss mov rol (bad) (bad) jg add add sbb add pop push cmpsl xchg push add std mov pop stos (bad) (bad) jmp jmp clc push jo push push and add loope xchg push insb cli ret cwtl (bad) call pop inc mov dec stos and push xor lods pop sbb js je add (bad) jmp aaa imul dec mov ja arpl (bad) fistpll push dec and pushl pop sar or adc or decl leave add lods addr16 test mov idivl cmp sahf cmpsb push cli pop jmp xchg iret xchg repnz rcll cmp push adc (bad) lcall jp push (bad) pop inc add push mov je xorl (bad) call ds jb sub mov mov push sub sar mov (bad) (bad) (bad) pushl movsw mov inc sbb sub loopne cmp sbb jl (bad) and (bad) (bad) jmp xlat mov cli (bad) scas mov adc popa gs lods ja pop std imul scas fsub and idiv fst call hlt (bad) (bad) cmp loope and jecxz dec fistp jle aam aas sbb (bad) (bad) (bad) decl pusha repz jns lret jl pop ret enter out mov sub cwtl (bad) cmp int3 jae int push ds clc pop leave arpl pushf xor jg dec mov cmp adc js mov pop ss icebp stos (bad) lcall js add pop scas scas (bad) ja leave ret mov push ficom xchg push jae ficoml push push jg (bad) pushl scas or shrl jecxz enter mov and lea sbb fidiv test (bad) (bad) (bad) call pop pop adc insb jb push mov push lcall cmp (bad) call repz pop mov mov inc arpl inc jmp ljmp orl outsb mov sub ror repnz aam mov aad or (bad) fcomip lds jns test sbb ds popa mov add push jmp jp incb mov xchg dec (bad) lcall cltd xchg addr16 cmp jmp xor decl (bad) cli jae mov je fcomps or je sbb cmp add lcall pop cmp fsub popl lods mov loope ss sbb cld insb pop cs inc xchg jb xchg test push jne pop fcoms pop fnstsw lcall test addb push in (bad) (bad) call mov xchg cmp adc lock not pop fcmovnb lods sub xchg out popa mov ret stc scas dec jecxz andl popa test (bad) (bad) call mov (bad) outsb mov lcall clc mov sti pop sbb decl fldcw lods xor cmp dec cmp std and adc fstpl or sub jg (bad) (bad) (bad) ds inc xor frstor imul cli pop loop mov ds decl push inc or lahf cmpsl xchg scas ljmp sub or mov sub push jge data16 sbb mov decl daa mov clc je jno test out inc outsb fistpll add sub jae fcompp ja xchg (bad) leave jne mov push incl aaa std jnp (bad) (bad) (bad) lcall xor mov dec adc push test jle fldl (bad) (bad) decl insl fdivs cmp dec insl jno jns dec and (bad) (bad) addl (bad) (bad) dec bound pop repz mov inc sbb cmpsb (bad) mov sbb shrl (bad) ljmp (bad) pop nop (bad) mov adc jg pop mov add sbb mov jl repnz mov fstpl mov pop lcall rcrb pop mov pushl lret shl jp addr16 push and ret outsb mov (bad) (bad) push outsb dec cmp aam popf out fld1 add gs or in rcl ficom mov je (bad) (bad) jmp gs and std out pop inc and mov mov adc sbb (bad) mov mov call das pushf mov push push movl push jno ljmp lea clc sarl inc jle lcall mov scas cmp ss imul aam (bad) cmc shrl lret mov fdivp xchg add addr16 cs ja push pop hlt or cli (bad) jl sbb sub mov add (bad) (bad) (bad) push sbb add mov xchg stos and xchg arpl push gs (bad) (bad) pushl jne and scas pop addb pop add outsl lahf add jg (bad) lcall lds xchg mov or hlt ss cltd (bad) push (bad) (bad) (bad) fcom gs je mov lods movsb xor push ret jbe fwait cmpsl push ds (bad) mov (bad) loope sbb loope mov ficom iret ret aam (bad) ljmp shlb rorl pusha dec in jg jne ret sbb clc mov sti mov pop xorl and pop xchg (bad) call lret xor addl xchg repz xchg ja xchg push sarl (bad) (bad) (bad) inc cli in leave int ss push jo pop fnsave xchg xor mov sub dec jmp mov sub jl mov or cwtl imul push ficompl call jns (bad) add sub jne in pop dec addl sub (bad) (bad) (bad) jmp arpl xor adc fsts mov mov pop xchg mov mov (bad) (bad) (bad) (bad) jns mov push or repnz sbb (bad) dec cmp cmc inc fs pop mov cmp mulb lods sarb in lret shr scas imul cld add adc iret pop mov jg test pusha aam lcall xchg mov outsl sbb iret pop pop dec loop scas inc mov sub or adc jmp mov push into xchg lret jle cwtl xchg add xchg js or std mov dec add add or loopne (bad) clc loope adc loope call (bad) lahf in xor cli movsb addl icebp ss out clc pop mov call mov (bad) enter clc push mov inc (bad) sbb mov sbb sub sti ljmp (bad) (bad) pushf cwtl push mov je jge xchg sbb (bad) (bad) (bad) jg lea sub (bad) cmc stc sbb insb cmp lea cmp adc imul lcall dec loopne sub or mov rcr pop nop fiaddl test push jecxz movsb loope jnp (bad) incl jp xchg push decl test (bad) mov inc clc inc ficompl incl fisubr shrl dec fcoms ror sahf inc add mov push pop adc add xchg mov (bad) jmp popa mov xor ret push dec lods or mov or pop fcmovbe mov (bad) mov rcrb mov push cwtl scas xor inc adc and scas mov (bad) (bad) (bad) ljmp push scas mov adc pop cmpl notb cld mov movsb arpl xor inc lahf aam inc pop cld (bad) push in int3 adc movsl push or iret push lods pop out cmp adcl test xor push (bad) (bad) (bad) ljmp push push and sbb push jns sub sahf xor cltd (bad) mov (bad) (bad) (bad) decl and jne (bad) lret adc jne (bad) mov cwtl int aam pop lds ss (bad) mov pop pop cld clc (bad) stos pop mov mov cltd nop push or cltd stos loop (bad) dec or cmc hlt (bad) lahf mov (bad) (bad) mov and dec pop pop scas add test scas clc leave mov pop xchg mov sar ljmp sub clc mov (bad) sarl das or pushl dec enter pusha mov add push cltd sahf and (bad) (bad) (bad) incl popa xor ds push sub lcall fnstsw xor cmp lahf jp psubb pop push add idivb dec mov pshufw xor (bad) jmp jle xchg jmp mov test and jb mov cmp ja rcrl in add inc push inc ffree cmp mov call adc push int adc jl mov arpl sbb push cmp dec das popa dec jnp jecxz rorl addr16 pop jae stos shrb ja (bad) ljmp sbb mov push cltd dec in sbb push ss sbb into in (bad) (bad) (bad) call xor pop push inc in inc pushl fmul jnp fwait mov aaa cmp cwtl insb push sbb add das mov push mov pusha cltd push sti xor mov out xchg popf enter push pop mov pop mov mov dec lock clc repnz pop mov pop mov jb (bad) mov test andnps xor iret sbb or (bad) incl jb loope scas mov (bad) pop out add imul test incl mov repnz in pop mov cmpl (bad) ljmp or es push dec int3 lea push (bad) dec and cmc shl cmp (bad) (bad) decl add xor cmpsb dec ja loopne pusha jmp repz inc sti add (bad) push mov std ds int3 rorl add mov int jmp pop roll decl and into fadds cmpl (bad) pop inc jle icebp and and (bad) inc jb out mov cmc imul adc add int xchg adc ljmp inc aaa hlt scas pushf stos jae out insl rolb ret repz (bad) (bad) (bad) ljmp call in inc inc ja popa inc fwait mov sub mov or cmp stc iret (bad) push idiv (bad) (bad) jmp and jne jg arpl (bad) icebp int3 mov jne adc test mov (bad) (bad) lcall jmp cmpsl (bad) xor or xchg pop sub scas xor rclb loope (bad) lock fcoml (bad) (bad) (bad) ljmp fdivr es stc sbb out jnp mov (bad) sbb cs jmp mov std int sub add mov leave sbb ret dec rorl (bad) (bad) ljmp outsb insl imul lret ljmp sbb popf add mov (bad) pushl mov mov popf add fstpl xchg jp xor inc dec clc (bad) shr and repz mov cmp inc sbb mov xlat mov jecxz cmp (bad) (bad) (bad) decl nop int3 jnp ljmp jge or fs jo stos sbb cmp shr hlt (bad) (bad) jmp daa xchg jb test cmpsl cmpsl jmp cmp mov pushf jl push aad mov inc and cmc mov mov insb and call mov xor add jbe push cmc or pop aad das (bad) (bad) (bad) ljmp loop dec popa pop scas adc pop mov sbb xor jge jno push cmp ss (bad) mov push mov mov push out or loop ljmp mov mov repz pop daa fsts std test mov or call or hlt insl adc cmpsl pop stos loope jge pop xchg mov aad call repz push mov push lcall mov mov in xchg out pop push stos adc sub test (bad) (bad) (bad) call fcmovbe dec mov inc sbb aas xor in xchg or in faddl das cmp js mov xor cmp sub inc pusha mov mov pop in ret movsb jmp ljmp jb cli cmpb mov xchg push pop cmpsb imul (bad) decl fidiv loop fwait pushf push add ss arpl push adc fcmovnb daa (bad) (bad) incl cmp je nop jge jbe lea cmc mov rolb lret jo (bad) (bad) (bad) (bad) jle data16 xlat adc jge mov dec dec ret scas rcr (bad) movsb aaa sub xor (bad) lcall shll pushf mov xchg stos loop dec fisttp mov or vmread (bad) (bad) (bad) mov (bad) dec mov or cmp scas cmp sbb mov sbb rcll (bad) mov mov decl outsb lods xchg les hlt or ds iret sbb xchg mov sbb inc sbb cmc nop push push (bad) (bad) (bad) (bad) jmp or andl pop jo xchg jno mov out jnp out aaa lea push (bad) (bad) (bad) inc jno (bad) or add and and mov xchg dec enter stos dec (bad) (bad) mov aam sub dec or or push dec fimul adc (bad) (bad) (bad) cmp push mov aas (bad) and xchg mov adc movsb pop or cmp (bad) (bad) ljmp push adcb loopne (bad) in pop insb pop lea insl push adc pop js adc mov (bad) adc rcrl (bad) jge pusha shrb adc inc hlt out mov pop cmp push ja mov lcall add lds pop jg jbe into xor add lds mov jge in cmp jmp sub addr16 outsl arpl int3 je sbbl test xor (bad) (bad) stc xor jecxz mov faddl mov out or cld decl fstps pushl lcall addr16 das push sti mov cmpsb fwait push mov adc lret lahf xchg or (bad) (bad) (bad) dec fwait push lcall jno sbb pusha xchg sbb push jne sbbb ret or (bad) incl cmp mov jecxz imul xchg lahf or (bad) xchg (bad) mov in mov add mov clc or sar sub xchg lods mov scas mov (bad) aaa inc ds sar sarb (bad) loop sub outsb jae (bad) (bad) incl in pop mov jmp fsts and jno loop (bad) push ds nop test mov and (bad) (bad) (bad) dec sbb je jae pop popa jmp sbb or es pop or pop lock inc add (bad) in or dec out xor cmpsl fnstsw insl jg pop (bad) (bad) (bad) (bad) clc (bad) or out push mov jg leave or jns adc outsb fiadd inc call clc (bad) lcall nop and popf jmp mov test jb and (bad) ljmp aam jo je loopne mov jge das mov sbb (bad) fadd (bad) jmp les out leave jae dec push es dec fidivrl push pushl or jp xlat lahf ret lds call (bad) mov (bad) std sub cmp int push fldl bound outsl ja and add dec loopne aaa rol fdivrl add sti or dec pop out mov pop sub xchg cmp out lcall leave push sbb xlat fimul pushf and fbstp jmp xor je jecxz xor inc ss incl sbb pushf and fmull outsl je inc jle cwtl dec push test call mov imul sub incl js pop xor je and iret fiadd repnz je (bad) out cli mov pusha inc and mov mov push and sbb push adc repnz mov mov sub mov cmp add jmp out sub aaa fidivl (bad) mov mov sbb mov mov mov std pushl push aas dec jle cmpsl (bad) loopne add xlat (bad) out jp dec pop in add lock pusha bound fisttp jp (bad) lcall sub push imul pop add cmp ficomp or pop jae sub mov fs (bad) xchg add sbb xchg push or rcr ds inc outsl fidivl ret dec mov popf imul dec call push sub ds jns mov lahf (bad) and fildl mov dec ljmp sarl or sti push jo cmp idivb loope je (bad) (bad) (bad) incl jbe cmp cmp push mov cmpsl shrb xor leave or dec mov (bad) (bad) call add mov out or lds mov ljmp and cmpsl jo js (bad) (bad) (bad) decl inc jle shl or (bad) addr16 pop popf push jp imul pusha (bad) (bad) (bad) ljmp repz ss and jmp call push add das das movsl xchg mov (bad) mov add jne out sub arpl cmp jge add ja mov lcall sahf test mov popa ljmp and (bad) call inc adc pop mov (bad) jb inc lcall xor ljmp pop fidiv sbb or es jl test dec inc inc (bad) (bad) (bad) jmp fcompl pop adc repz pop pop cmp push sbb repnz xchg pop rclb in mov (bad) ljmp rolb andl dec xchg test xor push cld lcall insb js xchg fadds push aaa push cli fisttp pop cmp loope aam (bad) and (bad) (bad) ljmp sbb xchg push push data16 (bad) adc jecxz dec adc adc int3 (bad) jg call ljmp in ss lea or mov hlt insl (bad) (bad) (bad) fildl fisub dec call call cwtl test ja adc (bad) (bad) (bad) incl in push lods repnz mov clc mov jmp insl mov pop stc dec test mov dec test pop mov lcall into ds andl push imul push cmp adc jg es lret js jp jb,pt dec (bad) (bad) mov mov pop aas cmp add and push sbb or (bad) mov xchg test lret movsl loop movsb jne fst cmp test lahf jp cltd shll pop (bad) (bad) (bad) jmp push mov jmp clc sti cltd cmp mov out outsl shlb push (bad) (bad) (bad) incl xorl jo push mov pop (bad) or rcrb (bad) incl mov adc fsubrl idivl in mov (bad) clc mov cs pop sbb les bound (bad) push xchg adc mov popf test xchg rcll fs jnp test (bad) push subb pop std daa or test mov loopne inc in pusha jecxz add mov aaa fidivr daa mov pushw gs (bad) (bad) cmp lock fs fidiv (bad) (bad) fistp in mov in push test outsl mov int icebp dec aaa cmpsl dec sub (bad) lcall xchg adc xor mov xchg mov (bad) (bad) (bad) (bad) aas sahf scas mov push xadd inc jo sti mov cli (bad) (bad) (bad) fmuls xor cmpsb fwait lods push mov cmpl int3 inc xchg addr16 mov sbb push ds sbbl sbb (bad) call ficom push lods jo push mov movsl push add inc pop xchg fimull (bad) (bad) (bad) ljmp inc dec jo inc fidivr mov jecxz rorb std jno and mov (bad) (bad) (bad) call mov jne out in subb lock arpl sbb into cmp (bad) lcall (bad) dec or pop dec or inc mov andl (bad) (bad) ljmp popf in cli adc xor (bad) test (bad) mov shr mov mov (bad) (bad) lcall (bad) bnd std xlat bound fidivl push or call cld lret mov lcall mov imul sti xor insb fstl clc pushl xor jbe lods mull popa clc (bad) fisttpl mov loopne jb sarl jg mov (bad) jg pop pop subb adc fstp or (bad) mov loopne dec xor inc dec imul je mov pop sbb xor shr inc cmp add out ljmp adc fdivrs pop inc cltd mov cmp stos (bad) lcall inc mov movsl fildl pop sbb out mov loopne leave mov push cli hlt in test push cmpsl out shll pop or mov adc xchg std ds (bad) jmp out test loop mov nop (bad) sub dec and mov insl add (bad) (bad) call adc lcall fsubs pop push add enter (bad) decl cs das cltd mov cmp add lcall (bad) (bad) scas repz (bad) adc xchg dec sbb sub test cmp xchg mov sub bound outsb sbb ja (bad) ffree ds push notl (bad) jmp cmc cmp inc aam or lock inc push hlt ret dec rorb cli decl lock (bad) les mov mov out decb (bad) ljmp mov (bad) sbb outsl stos sahf cld scas out (bad) push (bad) loope nop (bad) jecxz nop pusha fsubs sub jnp in es jbe xchg (bad) jo jns out or (bad) fisttp (bad) (bad) mov push add paddusb fiaddl mov loopne (bad) (bad) ljmp enter out pop clc push lret mov fist lock ljmp (bad) clc mov jae xor test adcb and fs rcl sbb test insb sub out sub movsl scas int3 jbe ss es sbb lock jae or (bad) (bad) call loope arpl push push dec fbstp mov mov xchg xchg mov push mov cs (bad) (bad) mov (bad) push pop (bad) inc pop xchg test int fidivl mov js xchg jg jo xchg lahf pop (bad) ljmp mov stos int mov mov (bad) add cmc push cltd lret push cmp gs mov (bad) sti repnz loopne dec cmc ret aam in gs arpl mov adc sub adc xor std scas push hlt ljmp das pusha mov in out pusha push add movsb add (bad) incl addr16 repz divl jae cs shl lea cmp call aad sbb and xchg loopne cmc xchg in mov push movsb call std jmp fildl pop in in cs mov es push sub fs (bad) (bad) (bad) decb je adc xchg loopne imull cld std addl mov clc push (bad) icebp nop (bad) (bad) (bad) jl in sbb and cltd jl ret add pop add xchg pushf xchg jb jnp (bad) decl incb mov fsubl faddl jb jnp movsl xchg add gs (bad) decl add cmp pusha ds (bad) decl pusha es cmp push movsb popf sbb dec out js fisubl jne or dec out ds xchg loope loopne xor push insb cmpsl pop cmc xor jp pop xchg hlt sbbb inc in notl (bad) (bad) (bad) incl push cwtl mov idiv inc cmp (bad) mov dec mov fstps xor inc cli sbb jne cmpsl cmp jmp (bad) add outsb (bad) movsb pusha (bad) (bad) (bad) lcall daa jno mov pop ret out adc inc xorb in adc out adc (bad) jmp cmp sti cld mov (bad) jns mov outsl add cld and mov ficompl hlt mov mov sbb mov ljmp fnstsw int3 dec lahf adc or (bad) xchg in inc cli (bad) (bad) jmp or jmp out lret inc aam cmp inc (bad) cltd or roll das mov jge sbb mov sub dec and rorl adc cmp lock ljmp ret pop jns jg iret push sbb mov mov and loop int (bad) decl sub sahf fldcw icebp dec repnz or (bad) fbstp inc rcll fidivl sub (bad) adc sub scas mov add pop lock je fstpl push inc stos mov pop or or test jb and sub aaa jmp xchg cli mov ds pop push mov (bad) (bad) (bad) (bad) sti daa leave mov into add jnp in xchg stos scas (bad) push and daa stos add hlt mov stos and lcall pop clc loop jl int3 sahf cs clc gs inc shlb (bad) jmp cld ja (bad) daa jb dec divb ljmp xorl imul mov and mov mov push mov mov mov xor (bad) (bad) (bad) ljmp cmpsb cs sub (bad) scas sbb scas stos sbb sub xchg inc mov (bad) ljmp loopne mov repz xor out rcll test aam sbb xor fbld xchg clc je sub fisttpl adc cmp lds adc mov xchg mov mov sahf cmp les jae out mov stos (bad) jno sahf cmpsl mov lahf mov call std sbb jmp js pop dec sti or or test and ja lcall pushf enter stos xor (bad) repnz xchg (bad) in sbb aas fisubrl ret mov or mov inc adc incl popf push and pop daa pop sbb stos dec lret push (bad) (bad) (bad) mov adc fcompl mov cld clc jle dec mov mov and std sub inc (bad) (bad) cmp or and orl incl mov mov daa (bad) scas adc (bad) (bad) call cwtl sarl arpl and lods addr16 mov pop pop push popw fdivr (bad) (bad) jmp imul cs xchg bound outsb neg (bad) jno pop (bad) inc rol cltd lret and (bad) (bad) (bad) incl (bad) (bad) sub (bad) sbb cltd mov jns fs mov pop jae iret jne push out pop lcall lcall adc pop pop xlat ss jns pop mov hlt (bad) (bad) (bad) jmp movsb sub fiadd sbb or xchg xchg mov lds je mov jmp xchg iret mov test pop mov stc in sbb xchg adc call out add or cli (bad) incl addr16 std sub in push sbb (bad) ljmp movsb jle aad mov cld xor test mov (bad) (bad) (bad) mov pop lcall cwtl dec fisttpll in mov loopne jl (bad) (bad) lcall loopne repnz xchg mov iret cmp inc iret mov out or sub mov adc (bad) test ljmp or je (bad) mov fcmovbe or mov dec cli iret (bad) (bad) (bad) mov call lcall fisubl aas insl arpl mov sub and sbb jg sub pop aaa and jnp out into movl add or scas jmp lds decl jp dec and je stos inc xor jmp sbb cltd pop or pop mov push cmp fnstenv es push incl cltd clc incl (bad) jne push pop xchg test scas pop jg or jno fildl sti inc (bad) js inc std loope mov mov inc cld scas sub clc jns mov shll fimul mov cwtl sahf sti (bad) xor pop mov pextrw movsl sub and (bad) (bad) call dec xchg ret js rcrl add and mov sbb xchg in xor (bad) ljmp cmp push fdiv gs xor out xor dec dec mov lret lahf push cld idivb mov inc sub addl popl push dec adc pop (bad) (bad) mov cmp xchg int3 mov xchg outsb mov push jnp xor in sub and sub or clc dec sbb sbb call movsb push loop aad mov je mov ficom add (bad) out fldenv mov push mov scas xchg dec pop dec add imul cmc ljmp sub pop ja mov pop data16 adc (bad) mov mov popa mov xlat xor (bad) (bad) (bad) pushl scas bound jae cli push xor fsubl sbb js mov fisubrl cmpsb (bad) adc cmp lcall dec and in mov (bad) incl jmp cmp add push or imul (bad) mov mov mov call jns cmp add dec and (bad) (bad) call add (bad) pushf cwtl lcall push and stc push mov sub xchg add push sub mov lcall sub ds lret iret (bad) or das clc (bad) dec (bad) sub pop ja insl fucomip add pop fwait push rcll jno addl rcrb in xchg into aas jl jo movsb mov adc mov and cmp mov ret sahf mov pop addl lods stos decb push jg or cwtl sbb cmc pop outsb dec or lcall std dec aaa xchg adc xchg jp mov jne adc sbb cli (bad) (bad) (bad) out and add push pushf in js pushf sbb pop push fnstsw xchg lock cmc setno scas clc ljmp ficompl es mov inc mov loope cmp push aaa add inc sub in dec mov pop arpl daa std inc push in loope imul ljmp loop mov (bad) adc or out cmpsl daa insb rolb in xlat test pop pop outsl aas cmpsb pop sbb mov or push mov mov xchg dec (bad) (bad) (bad) (bad) jge mov fnstenv cmp mov (bad) lock (bad) cmp ljmp and sub (bad) push xor lcall popf iret stos lock adc (bad) (bad) ljmp mov add and add mov xlat mov (bad) (bad) cli sbb fisubl subl ja mov add xchg xor and aam sub (bad) (bad) push fimul outsl addr16 int add push dec ret add adc andl imul adc test push push test (bad) (bad) (bad) pushl fnstenv inc or int3 dec inc sub pop rcl xor cmc xchg (bad) mov mov aam jnp mov and lock (bad) std mov nop mov in mov lahf aam or sub lods faddl pop (bad) (bad) (bad) call cmp adc jl ffreep push bound (bad) aas sub adc inc lock mov (bad) (bad) call pop in into xor cmpl stc test or sbb test (bad) (bad) (bad) jmp push sbb sbb jo mov rcll mov adc mov icebp aaa push xor in inc mov nop xor (bad) lcall dec mov fdivrl mov sar jmp jae cmp lcall adc and pop push xor or ljmp les inc cs lahf mov leave imul imull inc xchg xorb insl (bad) (bad) (bad) call cmp mov fidivrl push xor stos adc iret mov xchg rcrb hlt lock cmc or data16 je push pop xchg outsl mov cld xchg xor (bad) call (bad) jo in cltd ja test lcall ficompl or and mov pop and fs scas xchg push adc ljmp jns add jecxz mov push (bad) mov or into cli push addr16 add stos (bad) (bad) ljmp pop push cmpsl in rclb cs or ss jmp call int mov and in cmpb jbe cmpsl mov or call cli inc outsl pop mov pop std insb imul mov aas fiaddl inc test stos shll mov out mov cli xor test pop xlat cmp mov push dec arpl push mov adc (bad) (bad) clc out and bound test cli stos insl sbb adc ds (bad) (bad) out mov xchg idiv stos aam pop lea idivl lea cmc cmc (bad) (bad) dec pop xchg (bad) hlt mov xor leave inc sub mov test (bad) ljmp ds and and jp push jae sub sbb jne loop and mov jne,pt push in dec inc push sub insl jge inc pop test aad inc xchg lcall cmp ljmp stc les mull lahf xchg xchg xchg adc lock mov (bad) push fildll lcall push mov jb les stc imul (bad) inc out push sbb mov pusha pop xor ds xchg jl lds into mov (bad) ljmp shll cmc dec fistp push adc xor popa mov sbb outsl loop lods jmp (bad) cs dec call ss repz xor fidivr loopne and (bad) lcall mov das jl xchg out cmp mov out pop and (bad) pushl pop jnp cld loopne stc jp mov outsb pop mov (bad) jo cmp ficoml adc call loop mov and xchg jbe pop mov (bad) (bad) fistpll xor mov lcall inc popa jg xor ja xchg cld test (bad) pushl ret mov adc mov push mov mov or popa pop int mov test push xor scas icebp mov (bad) (bad) lcall cmp gs push sub fiaddl imul cwtl mull (bad) call xchg test xor out or sbb outsb mov and cld (bad) dec in sub xor mov jmp popf repz (bad) jmp push int xchg sbbl xchg hlt sbb les cli lret sub (bad) (bad) cld mov bound rcll jp cld mov lret mov jmp push jbe xchg (bad) xchg inc call fwait xchg lods xlat leave push jnp (bad) into addr16 in jg cld xor (bad) jmp cmpsb jo add xchg daa lea cwtl lcall push roll cmp shr stos aam mov push ja sarb xor lcall ds push xor out cmp add lods insb mov insl sar (bad) jmp popf xchg adc add fwait and insb loop call sbb fisttpl (bad) (bad) (bad) jg xchg or dec pop std orl ss jae insl pop xchg and lods movsl jle mov pop (bad) (bad) (bad) (bad) sti shll bound sbb inc aam in ja jle (bad) arpl jae mov scas aad xchg add add jbe xchg movsb icebp cld mov icebp jmp fsubrs pop adc inc icebp adc (bad) (bad) incl or cwtl xor xchg and mov (bad) (bad) jmp outsl lods mov mov mov cli push sub les xchg adc test (bad) (bad) decl in pop pop xor jnp lahf mov call les call push cmp mov cmp add pop ficomp jmp fwait mov sbb (bad) cmc mov push cli (bad) (bad) (bad) lcall or or add pop adc or jl stos xchg clc mov pop jecxz bound (bad) (bad) call cltd dec adc test add in loopne leave jno mov push xlat or pusha cld cwtl pop cmp in push sahf dec inc xchg (bad) lcall ja das lds hlt and jge push mov xor in cmp xor hlt stc (bad) (bad) (bad) call adc mov rorl bts nop shrb cmpsl scas insl add scas push cmp push xor mov dec ss cltd push pop pop lock sbb xor xor test cmpsb fwait sub (bad) (bad) call lods sub sbb in xor xor inc push jl jle mov pushf clc (bad) (bad) (bad) ljmp fiadd clc and or cmp xchg or sub xchg (bad) ljmp not mov pop inc mov clc pop fwait push sti insb pop inc adc or sbb (bad) jbe dec je inc pop xchg lret scas pop sub push aad adc jbe lcall pop sbb push dec ljmp push mov nop ljmp cmp push test test sbb cmc mov mov (bad) incl out cltd dec pop and jnp les jmp popa icebp inc xor stos dec enter and (bad) incl sub sti cwtl push enter xchg pop mov (bad) ljmp push movsb pop and push cli (bad) jg mov push or cmpl pop in sarb (bad) ljmp hlt push mov push adc call push mov scas mov and xchg pop xchg mov into mov dec sub push pushf cwtl sub movsl icebp jbe dec hlt (bad) jg loope insb xchg (bad) out jne push sub mov inc (bad) out clc fnop test popf inc mov adc (bad) popa fcmovnbe mov in xchg (bad) (bad) (bad) (bad) ljmp movb popf cld fiaddl jp xchg movsl pop jl,pt mov stos in inc idivl (bad) (bad) decl aam xchg mov outsl pop pop lret das stc das jle in sub push (bad) (bad) (bad) (bad) mov xchg and mov (bad) fnstenv loopne out push into push or (bad) (bad) lcall cmp cmpsb pop mov cld mul cmpsl and pop icebp cmpsb mov add (bad) (bad) jmp je sbb movsb xor mov lahf jp andl ljmp pop sub arpl aas xor mov jbe (bad) (bad) jmp xor fild adc ds sbb out adc test inc js sti ss push incl (bad) cli cmp lock jp out pop fld (bad) (bad) (bad) inc lods mov push stos movsb dec dec push dec mov sbb sub inc lcall ljmp call inc jae (bad) add jl cmp mov mov pop dec popf movsb lock push cmpsl pop aam mov ljmp or imul (bad) mov pop xchg lock inc out and (bad) pushl cld shl mov lcall aad sub pusha fdivr pop mov into mov mov stos loope rorl (bad) (bad) fcomps daa xchg call push mov xor mov mov mov cmp dec je xchg loope (bad) (bad) (bad) jmp je int mov scas pop or dec mull rdpmc outsl jns imul iret lcall push push mov and add add push adc loopne inc or test popa sub xor (bad) decl ficomp dec insb xchg lods or aas mov cs xchg cs mov fcomip mov sub and push jno insl sub or (bad) incl inc jmp test dec lret push js jecxz adc inc aas outsb xlat push arpl icebp xchg movsb adc rcr cli imul (bad) (bad) call out cmp (bad) rorb push jo aas jmp xchg jne mov push jnp (bad) (bad) (bad) push int fwait out mov into aaa push dec mov enter jmp (bad) jp roll es incl sbb inc test stos jp fdivr lcall inc sahf inc add js arpl xchg imul std push cwtl enter and inc (bad) dec test dec jne test inc outsl cli (bad) ljmp and cltd sbb stos xlat inc push repz mov push or push jg (bad) (bad) (bad) fldt jg xchg stos (bad) pop pop cltd test (bad) mov and outsl and add (bad) pushl aas and repz aaa mov out pop push jmp and jg inc cmovae adc outsl or fwait or (bad) lcall cmp js or rcrl repz cs leave (bad) pop imul sahf sub cmp cmc (bad) fmuls xchg sbb in mov and xchg (bad) (bad) jg pop into adc and mov (bad) lcall inc out (bad) dec movsb inc sbb outsl nop mov rclb outsl pop jne and ljmp (bad) enter popf mov sahf (bad) (bad) (bad) lcall decl or mov fidivr mov lahf aam or (bad) (bad) (bad) pushl into in ljmp pop repz sub scas cltd call (bad) ja fucom in lahf push mulb jnp iret inc dec mov bound push (bad) (bad) ljmp jecxz sarb push (bad) divb aam test (bad) pop out add (bad) (bad) (bad) incl inc sub lret inc jmp outsl leave pop mov dec push out outsl out cs call std jmp jne sub xchg cmpsl in (bad) jbe rclb ja bound sahf dec ffree add cmp push push add movsb push mov push addr16 jp,pt ror pop jmp clc stos outsb ret (bad) jmp lret aam mov fs mov test dec cld mov pop (bad) fcmovbe add add stos outsb fwait and aaa std btr sbb mov sbb sahf mov cmc add mov mov cmp adc pusha xchg dec fdivrp (bad) (bad) (bad) cld inc clc in int mov in out add outsl addb cmp xchg in daa fwait xchg cltd jmp (bad) (bad) lcall pop adc xchg xor dec add jno push jmp xor (bad) (bad) (bad) dec loope dec and mov sub cld dec inc test sbb mov mov and js je cli daa arpl push (bad) xor push cmp jl aad fldl data16 (bad) (bad) decl mov lods push or mov adcl mov fbstp in adc jp (bad) mov xchg nop lock loope movb or pop push adc movsl cld (bad) (bad) ljmp shrd pop mov pop mov xor das or ss or (bad) (bad) call push jbe insb in insl getsec inc jae ss add or (bad) pop sahf das pop data16 (bad) (bad) incl pushf imul sub mov xchg cs mov (bad) (bad) (bad) (bad) js lock mov in lods xchg vandps iret fcoml jbe sbb das lock dec cmp push jne mov fsubl (bad) (bad) incl mov sbb jae cs shrl popa test out sub lods sub pop xchg add cmovo aaa pushf ljmp out clc jo sub mov sub sar mov mov ret mov loopne (bad) push lcall cmp push xchg mov cmpsb xor (bad) (bad) (bad) cmp mov xchg (bad) xor pop (bad) fsin mov pushf insl jnp lds sbb cmpl fcomps adc rorb arpl icebp push (bad) (bad) (bad) (bad) mov fs jmp addr16 sbb inc xor cmp nop dec ret or jmp mov (bad) jmp pop aas es stc mov jl aam sti bound dec dec movsb (bad) push (bad) (bad) js das sbb xchg mov data16 pop out out dec (bad) xchg repz gs lret and (bad) (bad) call xor out jne dec aad inc push fsubs hlt aam mov mov mov lcall xchg popf dec jns (bad) jb cld cmp (bad) add cld fadd mov into xchg mov popf arpl jne jg cli xchg adc or push sub jae mov (bad) (bad) (bad) lcall movq fimull cltd xorl das and adc aad (bad) (bad) (bad) (bad) (bad) fsts test mov xor push stos in mov mov push mov dec xor (bad) (bad) jmp pop sahf cmc lahf inc dec jae sub cmp sbb (bad) xchg outsl xor pop adc lcall jmp push incl std (bad) jl mov xorl fdivrl jp (bad) ljmp pop mov pop cld sbb je sub (bad) incl pop aam ficom cld (bad) push in mov jl cmp (bad) (bad) (bad) jmp pcmpgtd mov fidivr fwait pop jns icebp add (bad) repnz ja xchg daa (bad) pop jmp cli std fmuls push adc jmp jle lock call leave aas addr16 scas pop jg ret es or clc call mov (bad) lcall in repz stos pop (bad) mov xchg repnz xor pop jno mov sbb sti adc or loope popa in or int (bad) jns push jg jg push out xor push pop xor dec mov int3 incl pop movsb cltd mov std test in xor cmp mov incl shrb dec imul cmp dec (bad) sub pushl les fidivl popa icebp stos cmp stos mov ds andl push cmp fimull pop and out sub sarb jp cmpb idiv ljmp jecxz push cmp lcall sub xor mov mov stc pop cmp mov sbb test mov inc (bad) stc cli das clc ljmp pop es push inc push ja or and xor incl mov ret ss lret mov or jns xor (bad) (bad) jmp cmp test cwtl (bad) ss xrelease daa icebp popa push mov int3 dec imul adc mov cmpsb (bad) repnz lock inc sti mov jge mov and js nop or dec repnz scas jle fist fxch in mov jg (bad) (bad) (bad) ljmp arpl inc push dec movsb mov test lea fnop dec or mov (bad) inc cmp pop mov cmp dec add popf loope xchg cmp (bad) (bad) (bad) cmp or push dec inc lods mov pop or pushf mov adc fldenv rorb (bad) pop cmp push (bad) fcomip (bad) sahf lret out jge and fwait sub push xor fistl int repz (bad) (bad) incl test and push xlat sahf jo daa inc adc addr16 (bad) das push inc or mov call ret mov fs rcl insl idiv (bad) (bad) inc mov ret shll insl aam inc and cmp inc test lock pop negl (bad) (bad) (bad) jnp push repz push push xchg clc ret stos nop mov and out aad (bad) adc decl rcrl iret (bad) push ret and inc and stc xor mov decl movb or fnstcw (bad) mov jle frstor call (bad) (bad) jmp inc pop dec insb incb push int3 inc mov sub dec sbb push out xlat fdivrl (bad) pushl fcoml xlat lret xlat mov pop in inc scas add and data16 leave (bad) xchg push add sub (bad) (bad) jmp icebp test imul push cmp popa in and cmp je jp das movsb movsl loop sbb jne dec cmp enter dec push sub sbb (bad) (bad) fistpll pop push xchg mov adc and popa mov push ljmp ds push leave adc push mov sub (bad) jmp mov dec loopne xlat test push jg lock push xchg xor sbb (bad) (bad) (bad) lcall insl jno cli cli jg roll popl lds fisubrl (bad) pushl push fist jg xor push dec xor xor cmc pop or decl push pushl das ja mov fwait dec lcall stos es arpl and mov sub cmpsb inc jns push push fs mov ljmp aam into pop loop mov push es lds cmpsl insb xor ret ja (bad) (bad) (bad) (bad) mov cmp pop into cld scas (bad) repnz or repnz loopne stos xchg or xchg sub das stc (bad) test or cwtl sub (bad) fldl es cmpsl sbb mov cld lcall pushf je xor mov jecxz mov xchg lcall adc std das test je into sub and ds sbb (bad) dec movsb int inc ljmp aad xchg incb mov fimul xchg inc fs lods ljmp xor add xchg daa jmp mov call mov clc divb cmp test add repz cmp (bad) (bad) (bad) dec addl xor mov je inc cmc sbb push sbb pop clc (bad) (bad) ljmp addl fistpll mov cli ss mov mov fdivrp pop mov bound ljmp and lcall pushf dec jno or mov mov cmpsb sahf lahf (bad) (bad) jmp stos int3 jne (bad) scas (bad) (bad) (bad) call rcll call sub sti jne js bound test mov bound jne xorl sbb mov sbb jne sub cltd (bad) ljmp mov xor scas xchg inc add popa xchg (bad) inc pop jp sbb mov loop adc (bad) mov test in (bad) mov and push and or jne in out dec addr16 (bad) jmp in xchg nop aas outsl xchg mov adc ds cmp outsl jle das adc icebp repnz inc mov (bad) (bad) (bad) ljmp nop lods (bad) hlt mov adc mov in inc mov xchg adc cmpsl (bad) jg test (bad) das pushf and divb andl (bad) decl fild (bad) or sub stc sub mov dec jbe pop or (bad) incl push dec (bad) mov mov jo (bad) (bad) dec (bad) (bad) jmp mov xor sub and mov cs lahf cmp ja into cmp mov outsb adc roll add mov jae lock call mov jns stos add sbb jb and (bad) incl xchg pop aam cmpsb sti jecxz jno imul dec fisub stc mov sbb ja adc repz je mov mov dec int3 cmp outsl clc ljmp data16 jnp,pn fcmovbe pop or fimul adc mov incl pop push ljmp add xor pop cmp push lahf xchg cltd nop mov (bad) (bad) (bad) cmp repz xchg pop mov mov xor dec stos arpl and ljmp cli lcall and stos add cmp adc paddsb fisubr (bad) jl ljmp test ror push test mov (bad) (bad) ljmp push fs fidivrl xor mov fidivrl add cs mov lods add or decl jo mov mov ret test or incl adc jge mov mov push ds (bad) (bad) jg xor in test push call aas push or dec iret cld xchg cmp (bad) (bad) lcall mov push int aas outsb mov insb or mov stc mov (bad) (bad) jg insb dec enter int3 in lsl jae in mov add dec adc (bad) mov je,pt mov (bad) call mov dec inc dec jbe push add mov xchg lods (bad) (bad) lcall xchg lea or ficom aaa jge (bad) ljmp mov dec fildl (bad) push jl out jo out (bad) (bad) (bad) jmp shll xor (bad) mov lds daa sub push and dec fisubrl jge dec call dec (bad) cltd push mov ljmp dec aaa enter stos fstl out adc jbe (bad) (bad) jmp ja aas mov pusha sbb ja mov sub jo mov mov mov lret cmp lret aad xchg jmp mov mov sub sub xchg (bad) jmp aad ret cmp add out pop repnz dec stc mov cmp (bad) aad pop fdivl (bad) jo lret loopne lahf (bad) (bad) ljmp mov xchg sub xchg (bad) mov cmpsl in bound insl jl xchg pop xchg (bad) (bad) (bad) decl data16 inc js push cmp in jb xor pop sbb (bad) and (bad) (bad) jp add lcall pop jne cmp or sbb sub aaa xor or iret ret in ljmp int pminub xor sub sbb clc (bad) (bad) jmp (bad) ja es dec push leave push pusha ss in cmpsb dec (bad) (bad) incl fdivrp sahf xor cmpsl sbb inc cli add (bad) fsubs cmp fnstsw mov mov pop clc xor std pushl arpl xchg imul jg sti mov ds sub dec shl push les jae fs jb mov arpl (bad) lcall jle mov (bad) dec sbb dec pushf xor inc mov dec (bad) (bad) call (bad) pop mov xchg ds inc stos int3 (bad) roll dec pop mov mov (bad) (bad) lcall jb repz test inc dec addb jb fiadd jb incb sub daa xchg dec mov mov movsl mov in sub pushl mov sti rorl jb add add clc (bad) incl add gs mov mov sbb xor push mov push in mov lcall mov mov (bad) (bad) (bad) (bad) mov lea mov xchg insb div push test (bad) sub push mov fidivrl (bad) (bad) pushl add inc scas sbb aas leave addr16 jnp into inc dec popf outsl fcompl (bad) (bad) ljmp sub loope sub clc fs push push inc jecxz sbb pushl fsubp outsl fwait mov mov fstp cmpsb mov adc lret call movsl jg aaa inc push jb outsl data16 (bad) jg mov out cmp inc and sbb lcall sar ja push dec je arpl outsb fbstp cmpl rcr popa cmpsl cmp mov lahf mov test or mov (bad) (bad) (bad) pushl mov mov adc jl fistpll xchg jle mov cwtl pop jne add pop cmc out mov ljmp cmp pop inc mov loopne (bad) (bad) jnp lock cld es pop xchg jmp sbb fstpt add (bad) (bad) call inc outsl loopne fmull fistl je add adc sub jg (bad) (bad) fmulp mov or nop add xchg inc jmp and addr16 add (bad) sub mov lahf fdivrl push inc lret push jbe mov push xchg jno inc (bad) (bad) call mov (bad) push inc rcrl xor cmc out mov movsb (bad) call rorb (bad) ret aaa xlat adc loopne cmpsb lcall je mov mov mov or pop mov or call fdivl sbb mov cmp mov std sub xchg xor (bad) (bad) (bad) lcall nop lds push sbb mov das push sbb xchg add mov decl inc jb faddl xchg inc bound mov in rolb push dec (bad) arpl mov push inc lods push stc mov imul mov and lcall stos or (bad) and xor jno mov mov les (bad) (bad) (bad) pushl xchg into push cmc loope xchg icebp xchg mov mov mov stc sub ljmp addl add in punpckldq mov xor pop mov and stc cwtl out cmpl pop leave movzwl dec push xor notb jae out fistpl (bad) jg roll aad mov pop pusha or mov mov stos nop and ljmp mov ss pop loope add lods punpckhbw outsl jge push inc sbb (bad) (bad) (bad) cmp xchg js jge dec es dec fcmovb cmp loopne iret cld cmp mov sbb je push dec dec jle jl adc insb xchg push bound sbb daa sbb (bad) (bad) incl cmp sub stos aam aas lods mov mov or notl outsl mov pop loop inc xor (bad) (bad) (bad) (bad) jmp xchg xlat divb popa mov mov outsb lcall fs ja (bad) jmp xor out inc inc mov mov movsb add (bad) pop xor outsb (bad) (bad) (bad) call inc push mov test mov add pop add cmc fmuls incl dec js (bad) (bad) (bad) pushl mov push daa dec fcompl push sbb out addr16 pop int3 sub mov sti lcall out stos sub cwtl jno sub imul shlb (bad) (bad) jg (bad) sti andl dec mov jb cmp mov xchg (bad) lcall add cmp xchg jge leave pop push mov add mov call mov fidivr in adcb gs pushl outsb inc pop movsb sub stos in out mov ror push (bad) jg call (bad) getsec rorl cmp in arpl inc fcmovbe cltd pop push xor xchg adc (bad) (bad) (bad) incl add scas jnp clc mov pop bound clc pop add and jl int lock and (bad) (bad) jnp outsb out enter dec es fwait scas mov sub fnsave cmp (bad) imul (bad) call jmp jns or icebp daa adc inc dec subl add jg pop test fcmovbe inc lret xchg sbb sub loop cwtl ficoml (bad) (bad) (bad) ljmp xchg sbb inc out aam inc jmp and push mov push in mov and cmp mov out sub std mov (bad) ds hlt jo pusha push mov and addr16 loop dec inc jp xlat icebp push orl test cmpsb (bad) (bad) fist into fimull mov cmp fsubl push push adc adc (bad) (bad) incl cld fsub and pop adc jl fisubr dec push and mov dec push clc inc sar sbb sub xchg inc xorb mov js and (bad) jg sahf jae ljmp pop dec repnz mov pusha call dec popa lcall push jns mov nop jmp mov mov aaa inc rcl dec outsb mov sbb ljmp psubusb popf adc scas (bad) pop jmp popa xor decb (bad) (bad) incl pop push (bad) repnz xor cmc mov pop hlt loopne or (bad) cmp (bad) (bad) (bad) out jbe mov roll popf dec push push push mov shll test pop xchg mov int3 xor mov enter adc lretw pop test clc sub push cmp jo or leave jns jl mov pop and add (bad) (bad) (bad) call and jmp push call mov inc jl xor adc (bad) (bad) (bad) mov mov cli xor push push push sub and or ret jg hlt incl fisttpll movsb aad cld ds mov sbb sbb (bad) cld je in push sarl mov mov push shl jno arpl shrl xor (bad) (bad) (bad) call (bad) stc mov jnp mov xchg outsl sti pop (bad) xchg jl mov mov pop mov push test hlt push mov xchg (bad) fmull cmp jae mov pop (bad) sahf mov insl (bad) jg add and jmp ucomiss mov (bad) (bad) (bad) pushl or pushl andl jnp aam std scas adc mov push sub cmc dec pop (bad) lcall mov int3 sbb inc jns (bad) (bad) (bad) call sub push ret into pop iret jecxz bound and inc and xchg dec fistl dec stos sar (bad) pushl lods sub jns and mov pop dec xor out jg push adc jp xor aam mov (bad) (bad) ljmp js jo and pop or sbb jg push cli insl out or movsl popa (bad) (bad) (bad) ljmp sbb sbb pop xacquire or dec (bad) repnz pop ret mov in (bad) mov dec jb out push nop mov ficom and (bad) lret out outsl cli (bad) incl lahf and sbb repnz or (bad) ret std sarb fucom idivb (bad) call jb int xchg int or and inc fucomip movsb cltd xor inc orl sar (bad) decl xchg jg adc add (bad) xor push into fwait aad adc mov jmp xchg sbb loop mov cs dec fstpt adc movsb lock jle dec adc sub (bad) pushl data16 dec lods pop inc pop jne std adc cmp dec mov incl mov xchg movsb inc push hlt sbb push pop mov gs (bad) (bad) dec lahf outsb push fistl xchg repz pop or push popf sbb xchg je and xchg mov std jmp mov stos int3 in jo mov mov fs ficom push xor (bad) jmp inc sarb test mov ret (bad) mov jl ljmp mov pop push out (bad) (bad) inc mov (bad) ret inc push imul mov popa jmp (bad) (bad) (bad) call into inc mov movsb inc push mov cwtl mov fcmovne dec inc xchg push adc imul (bad) lods repz lret lds adc inc mov jbe in (bad) out xchg push shll arpl loop inc in outsl and (bad) decl decb mov cld sub add js dec lods iret mov (bad) decl mov insl mov in push jge push popa cmp aad imul rclb pop inc sbb or cld loop,pn fdivrl jno dec (bad) mov (bad) pop jmp out stc les outsb push jl and inc mov push cmp pop mov js dec rclb (bad) jne inc shrl cmpsl jnp (bad) sarl sub rcrb ljmp xchg (bad) setns outsl (bad) repz inc popa xchg ret xchg add out inc dec addr16 (bad) (bad) call fildl add add iret call push adc mov sub push pop in jecxz (bad) ljmp stos rorb jl lods int3 xchg adc fdivl xchg (bad) (bad) (bad) incl sahf add pop or insb in mov jecxz sahf aam jmp idiv ret std jg out mov jno xchg and jno cmpsb popa sub aaa adc sub sbb test jb push (bad) call andl pop call (bad) sub push dec cmpsb mov leave scas xor incl cli mov and sbb outsl xlat inc ja mov (bad) (bad) call aam outsb aam pop (bad) jg icebp inc inc pop adc out add mov leave pusha pop jmp (bad) fcompl inc sbb mov push add mov cwtl into mov dec stc mov lock inc leave mov ret mov cli jecxz sarb mov adc xor mov cmp adc leave (bad) repz aad (bad) fadds mov out push std push inc btr add or inc int3 sar call cld sub and pop push out in sub adc cmpsb mov ret outsb xchg mov repz push xchg jo outsb sti cmp insb (bad) (bad) (bad) (bad) mov push pop mov lock ss pop push pop ds adc cmp and (bad) (bad) (bad) pushl adc into and out cwtl inc mov inc sahf iret xor mov scas out cmp (bad) (bad) ds xlat setge ja bound loope add mov (bad) push mov pop (bad) movsl dec push lock jbe scas fcoms leave mov (bad) (bad) (bad) faddl in dec repz sub and ja jae out aam (bad) call mov dec lock pop add pop jmp push outsb inc pop imul inc fnstsw and in xchg nop pop icebp cmc xchg fdivr scas (bad) jno xchg fdivl xlat fbld inc lea and cld (bad) jg cmp mov pop fldt and pop (bad) cmp (bad) lcall fwait lods clc pop mov or push ja mov xchg inc lret out push or lcall and push mov or dec (bad) lahf push or popl int pop jecxz loope cmp nop xchg jp xchg repz pop dec call mov mov sbb iret or lcall jp cwtl stos in popa and jb pop mov mov stc cmp xor inc dec (bad) (bad) (bad) jmp fisubl jae lea adc into into adc sbb lock lock leave es xchg mov (bad) (bad) xchg jno sbb inc js pop sti push dec and push jle add sub add (bad) or (bad) (bad) (bad) fnstsw lods in (bad) and cltd loopne ss imul jmp mov cwtl repnz test (bad) call sub cmp out adcl dec cmp test mov push std pushl fnsave xchg lds aam movsb sarl xlat lock fmul mov jo pop xor or out push sarl scas lock aas flds xorl out jge loopw icebp daa mov cli (bad) jmp push mov lcall (bad) xor (bad) jmp adc (bad) idivb adc rolb pop loopne inc ljmp or (bad) decl push lods lahf ret mov inc jle rolb push es pop (bad) (bad) call sahf cwtl cld int adc mov inc mov fbstp xchg xchg clc sbb sbb sub cs daa mov sub lcall mov push and or push movsl popa aad xlat loope (bad) or lods outsb ljmp mov inc clc push cld cmpsl xor mov (bad) (bad) incl xchg fisttpl cmp daa pop jbe sub jge mov (bad) pop (bad) xor ds add (bad) mov pop or mov push mov outsb cmp aaa std (bad) pushl out sbb sarb sti inc jle pop test gs std aas in mov sub (bad) (bad) call mov fwait out fs loopne push repnz lods (bad) scas mov pop arpl loope (bad) (bad) inc jge add mov inc stc push ret data16 push xchg mov nop (bad) (bad) (bad) (bad) jg lods or jle push jp sbb jle push jmp jnp adc sahf push jmp jmp cltd into cmp adc inc push lods iret fbstp inc mov mov push inc sbb ret or xchg push mov mov je jge (bad) (bad) decl xlat cmp xchg jp add xor or (bad) decl fstl pop sbb inc loop push (bad) pop mov jg call clc js pop and and push sbb sbb scas xor cmpsb cmc je dec (bad) (bad) (bad) ljmp inc jmp in (bad) mov ljmp dec sub jne,pt mov push loope imul in sbb insl mov (bad) call loopne jae adc dec pop dec mov mov fwait je mov les cwtl jge xor sbb imul int3 enter (bad) (bad) lcall into in jge inc sbb iret in or mov cli iret (bad) mov (bad) call mov or loop jmp (bad) (bad) (bad) (bad) std lods je cmp mov adc pop xchg imul insb adc (bad) ljmp sbb scas mov mov sub je mov or mov (bad) pushl adc imul (bad) mov push add jp int3 pop (bad) int3 add inc sahf xor aad testl mov mov inc mov lahf cmp adc out jnp call (bad) (bad) mov push js push aad mov lahf aaa fwait pop (bad) push (bad) jns cwtl xchg loop jl (bad) (bad) decl scas pop push loopne mov cwtl sti sarb pop pop mov jmp sbb (bad) (bad) (bad) dec pop fstl data16 repnz cmp daa push pop in mov imul test lcall sbb mov ljmp stos outsb dec sbb jbe mov sbb (bad) mov inc rorl (bad) (bad) (bad) ljmp imul pushf cmpsb mov cmp sub out mov dec inc jmp adc loopne test (bad) in cmc inc push cltd mulb sbb or ds (bad) (bad) (bad) pushl mov scas mov add fsub sahf hlt jo and cmp outsl xchg xor lock dec add jo jae push (bad) (bad) out cli push add frstor adc (bad) push mov nop dec xchg mov clc or jl (bad) insl stos sub out pop sub xchg jg (bad) jg mov enter aaa mov (bad) cmp mov (bad) jp jge (bad) aas es or jmp dec push push dec xchg dec xchg mov stos inc nop pop jmp push push jne js jge js std mov sbb loopne pop and lret sbb dec (bad) lock fist in sahf xchg lea and cltd push cld (bad) ljmp call adc dec mov popa mov and (bad) incl mov cmp push je mov jbe adc pop xor fdivr (bad) (bad) decl aas fcompl loope jmp xchg call push fwait jmp xlat push fsubr lods (bad) pushf (bad) (bad) (bad) inc loope movsb psubd (bad) lds imul (bad) jmp lahf adc lods rorl (bad) (bad) decl call push mov xchg jle jmp mov sahf cmp (bad) xor (bad) decl pop mov mov dec add clc lea int3 adc bswap mov (bad) (bad) call inc sahf and push aas outsb int pop inc or jae xchg dec xor lahf andl (bad) fstpl xchg sbb lods repz jg mov into mov xchg or in (bad) (bad) ljmp cmpsb or xchg cmp fstpl cs (bad) or addr16 push mov clc (bad) (bad) call pushw (bad) fwait sahf jno call mov arpl incb pop mov mov repnz leave in fisubr or (bad) (bad) (bad) dec jnp fimul jnp push xchg ficompl ret inc inc and xchg pop dec mulb (bad) (bad) jge addr16 sbb mov xchg cli xchg adc and add rorb dec push jge lods insb (bad) sarb and (bad) lcall jnp push das nop dec imul in or (bad) (bad) pushl ds dec push fld jae dec aam ret dec push mov mov (bad) (bad) (bad) lcall insl adc mov pushf add or push movsb iret inc mov (bad) (bad) (bad) incl les mov pop cwtl mov sbb in mov ret push mov mov pushl push push sti mov mov iret (bad) push faddl (bad) call ljmp cli xchg out int3 or jnp cmp pushf dec rolb (bad) (bad) jmp cli outsl sbb jmp cmpsb sbb je (bad) dec fnstcw xchg cmpsl (bad) push int3 xchg popa lods (bad) (bad) (bad) ljmp mov idivl mov jb movsb mov mov out jmp movsl lret jnp (bad) (bad) (bad) pushl push jo cmpsl mov sub aaa lods cmp negb inc cmp cmc adc (bad) cs cli incl mov inc fsubl jne (bad) (bad) (bad) incl or jnp nop out cmp sbbl mov icebp mov and ljmp mov adc cs scas rorb mov xor push jp mov aas (bad) (bad) dec in (bad) push jmp cmp sbb xchg ljmp (bad) (bad) (bad) pushl pop and and sub xchg negl loop imul jmp dec cli fcoms adc fidiv add leave sbb cmc ja lcall ds scas data16 mov xor lahf shrl iret mov cmp lret dec or add dec pop mov call pop cli pop cmp insb call fadds test jbe (bad) (bad) (bad) lcall cmp xchg ret and inc sbb into pusha mov fsubrp adc (bad) ljmp pop xchg adc xchg into inc nop add jo (bad) (bad) lcall mov loop in dec inc outsb mov (bad) js cwtl mov mov (bad) (bad) call iret jmp inc clc sub (bad) fcompl (bad) fstpt pop (bad) out jl js pop mov cmc pushl les out dec pushf sub cltd (bad) cmpsl cmp out pushf (bad) (bad) (bad) call loop cmp cmpsl xchg loope xor pop sahf cmp push sub jl or jmp fbld mov imul daa jae (bad) (bad) call out js or lahf push bound imul xchg add inc or add push dec out stos decb lods lods insb sbb xchg data16 sub mov push jmp (bad) (bad) (bad) pushl je hlt (bad) pop mov ja pop (bad) mov mov scas jbe outsl popf mov xor decb rcr sahf testl ja sub sbb mov incb push cmpsb pop inc hlt xor ljmp outsb out xchg aam ret icebp push pop dec pop add jmp gs add and inc cmp ja lcall mov adc push ret (bad) sub push ret cmpsl pushl cld and aaa jne,pn fidivr push jno (bad) je ljmp push and lock in repz movsl mov (bad) ficom (bad) jmp dec ja lea out lret jmp cmpsb dec mov enter ljmp cmpsl inc mov dec inc sub in imul mov cmpl ja and mov dec int3 xchg lret add (bad) jbe jno add jmp pusha sub push in insb or aas jo xchg test (bad) (bad) (bad) lcall sahf jbe ss or scas push icebp stos cs or xchg test or je sub (bad) repnz (bad) (bad) decl pop mov jecxz mov mov test nop je insb rcrb notb repz decl mov stos cli incl cmc xchg stc hlt les fcom inc cld incl fdivrp sub aam jl in pop mov sbb ja sbb add call xchg es add (bad) (bad) lcall and and sub and push mov (bad) stos fisttp (bad) (bad) incl push (bad) loop push dec mov xor push movsl xchg sub (bad) (bad) incl or jp fistpl push les xchg adc stc inc sub lcall cli xchg pop push mov dec push jecxz repnz outsb sbb call imul sub jmp (bad) (bad) (bad) call in daa mov dec sti jg or inc add push jno mov mov jbe (bad) (bad) incl fimull loope inc ds xor sti add jg xchg lds clc lods stos (bad) (bad) (bad) decl mov adc inc mov ss jne cmp sub into mov and ljmp sbb sar cvtdq2ps aad outsl push jl nop loopne jecxz pop out (bad) pop and push inc xor test loope jns lcall ds (bad) repnz test push loop sub (bad) (bad) (bad) call into test int3 aad lods loopne (bad) insl inc nop lods sti adc add in ljmp mov aam (bad) pop sbb bound call aaa sub (bad) (bad) (bad) call cmp sub push sti cmp (bad) inc test push aad out pop lret cmp dec xchg js call (bad) (bad) mov rcll mov fs lahf test js clc pop cmc pop scas cwtl iret xchg xor iret les or push (bad) (bad) ljmp (bad) jae call mov movb pop imull loope or pop icebp (bad) jmp jns xchg ret cmp ror and ffreep pop jecxz and and (bad) cmp inc inc sub jmp fistp outsb dec xchg test fdiv addl ds subb sbb push popf sub jecxz ja pop cs fcom das out pop out dec (bad) (bad) cmp mov push cmp push test dec (bad) (bad) lcall fild jmp cmp lods inc das xchg xor pop mov push sbbb (bad) push loop inc and sub mov (bad) xlat push inc jecxz xchg xchg shlb mov mov das in pop mov and clc les mov or (bad) pushl or dec outsb add outsb xorl push mov jg mov xchg mov add sbb (bad) (bad) incl push test (bad) lods and mov dec push flds push xchg add push aas (bad) call mov inc pushf arpl test inc jge pop mov (bad) (bad) jmp std notl dec xchg (bad) xor pshufw scas mov push pop ss sbb or xchg and cmpsb and (bad) mov add addr16 fsubr cmc push inc bnd push iret (bad) (bad) (bad) jmp test insl fistpll mov mov dec push (bad) jb or (bad) (bad) (bad) decl daa adc push in jo xor jmp sub push loopne pop cmp add cmpsb xor sbb xchg hlt or mov lds sbb push gs push stos xlat test and ljmp sar add dec adc jbe icebp inc sub xchg jmp out mov mov mov imul fcmovb lret jecxz push mov and cmp adc push and (bad) decl ds outsl lcall jo xchg sbb mov call sbb push nop lock cmp dec pop repnz (bad) lcall daa jns,pt jecxz ficoml stos inc sbb or divl dec cmp pushf jb mov loopne or cmpsl mov aad (bad) or lock (bad) push ss push adc (bad) decl pop mov adc ja lcall test out sar (bad) pushl aad les cmp xor add pop xor xchg cmp lods cmc (bad) jbe push das ja aas loope sbb sar pop cmpsb inc mov xchg mov test pop or adc sub sti (bad) fisubr (bad) out cli jg xor inc fdivrs lds fucomi repnz int3 ljmp popf cs popf hlt sub inc (bad) popf pusha rcr push cmc cmp push (bad) (bad) bound (bad) (bad) ljmp mov ret ret xchg into (bad) push movsb mov sub xor push adc inc or xchg mov fstpt mov jle (bad) (bad) (bad) (bad) sti pop mov fwait or outsl xor jns or or mov sarb dec mov mov insb cmp ror jae imul or sbb mov ljmp call cld pushl push cmp mov mov outsl jbe jge pop fimul (bad) ljmp imul push xchg cmpb push shlb ljmp xchg push sub jg push mov pop pop aas cmpsl leave push push ja loopne push orl (bad) jp aaa fwait sar je pop lcall dec out (bad) (bad) (bad) (bad) std daa pop pop jns sbbb xor out pop (bad) (bad) add (bad) call sbb cltd (bad) fiadd and dec xlat pop (bad) clc jg cmp cld pusha jg (bad) ljmp sbb outsl jnp fsubrl (bad) mov aam lds test push mov call push add mov aad sahf fsubr scas cli decl push adc jo ss adc pop push iret ss (bad) mov inc push or xor call fildll mov dec dec jle test (bad) pop std popa daa out jg fildll in mov (bad) (bad) (bad) jmp push scas imul pop push rcll jecxz push js sbbb (bad) (bad) (bad) decl sub pop stc rorb imul (bad) mov pop mov mov (bad) (bad) call sti lcall out pop mov and inc aad push (bad) movb clc fcmovnb (bad) decl stos popf (bad) loope and mov mov pushl inc popf push bound inc loope test mov adc fstp popf push adc (bad) (bad) lcall mov jnp (bad) in mov es sbb and int3 cmp mov or cltd daa sub jb cli jne (bad) lcall mov cs jp sub sub inc (bad) jmp xor popa shr ret test ds arpl out clc call pop mov imul mov fldl fbstp cwtl sbb addl mov (bad) (bad) fstps sbb nop test pop fnop fwait sbb mov xchg cmc mov lock jmp (bad) fidivrl loop lcall dec (bad) or call outsl imul push call idiv (bad) (bad) mov xlat imulb push hlt (bad) lcall pop mov sub xchg pop enter pusha cmp fwait lret lahf out xchg sbb aad (bad) (bad) (bad) lcall push mov into push jnp movsb add ss mov (bad) icebp cmp nop mov mov loopne test js fcmovb (bad) (bad) (bad) call jnp pop mov sbb or je scas movsb (bad) mov iret repnz cld push fwait and inc cmp pop ljmp xor or (bad) incl sub je out dec xchg adc lcall pop xchg cmp inc pop cwtl push dec in sbb data16 mov jl or sbb dec xlat movsb test jecxz mov add or jle pop mov fcmove dec add (bad) ljmp mov xchg cmp jmp jno mov (bad) aaa or lods push mov fmuls (bad) call lret xor jecxz data16 stos inc xchg leave mov enter and ds xor (bad) (bad) decl nop jnp in sbb icebp sti mov pop rcll sub inc push and push xchg jo (bad) imul add mov daa pop xchg (bad) stc sahf test or ljmp mov pop sub cmc (bad) dec movsb inc pop dec dec (bad) (bad) jg sahf (bad) negl mov and mov jne in stc lods and (bad) (bad) (bad) jmp out enter cmp sbb inc fstpl insb rcrl pop xchg (bad) leave orb push mov arpl into push (bad) and js adc jne mov jp ljmp mov ds addr16 stos sbb ljmp fwait (bad) clc inc lret cwtl adc js sahf es (bad) mov mov xchg push push inc mov ljmp jecxz xchg xor (bad) clc dec clc (bad) call ja sahf std mov xor (bad) (bad) decl ds cld in cmpsb pop jg (bad) fnstcw loop leave xor fimull (bad) (bad) decl xchg push popf jl xor lcall pop mov (bad) jp (bad) cmp movsb inc imul dec pop inc sbb lods mov icebp fs push ret popa inc adc (bad) (bad) ljmp jo sahf sub iret mov mov cmp mov lods shlb cmpsl pop push into aas (bad) call dec popf xchg cltd mov mov nop enter sbb xor pop cmpsl stos (bad) (bad) (bad) (bad) ljmp mov ret mov sub jp test sahf pop scas ja jnp test (bad) lcall mov pusha (bad) or movsl push aas lahf xchg cli (bad) (bad) (bad) in xchg add pop mov fmuls fst cmp xchg pop mov jo (bad) (bad) ljmp std sub xor (bad) pop xor test jnp loop mov (bad) ljmp cmp push push pop inc push xchg int3 sahf jnp adc cltd jmp (bad) mov mov loope and sbb mov test xor ret add icebp xor sub jle pop xor ds lret pushf fidivrl lahf pop pop imul push inc (bad) (bad) mov xor es pop gs push xchg cmp aad movsb fnop jg (bad) sti mov xor adc (bad) mov std movsb dec (bad) jbe mov (bad) (bad) out add dec nop add sub inc pop ret xor cld aaa inc test (bad) (bad) ljmp insl ss mov leave cwtl inc stos sub jg (bad) (bad) in mov js push adc jo xor pop mov xor (bad) (bad) pushl jno clc mov arpl orl out pusha not mov sbb cmpsb idiv (bad) incl mov mov inc aas outsb or xor pop dec fs (bad) incl int (bad) jbe rcr lcall dec and shrb inc int3 jl sahf mov pop aas push imul insl fistpl clc loopne add subl (bad) fcoms mov xchg and iret push sbb ficoml xor pop sbb mov jmp rclb movsl outsl (bad) jno sti xor sahf cmpsl mov mov mov clc (bad) lcall jne (bad) jae fwait repnz addr16 dec jb inc rcrb (bad) inc fwait xor push sub lea push push cmp lock int3 sbb (bad) push push cmp (bad) pushl jno xchg les mov sbb imul push lock and mull and push jmp push cli xor cmpl hlt rcrl jl and mov (bad) addr16 in mov in and xor hlt shrl lret (bad) (bad) decl push in sub jo loop fcmovnu cmpsl push ror test xor pushf xchg mov sub (bad) mov je enter scas test rorl add stos jbe and (bad) dec dec jno repnz add in fidivl inc (bad) je dec or nop cwtl sub je (bad) (bad) (bad) std inc add aam sarb loop mov inc stc mov hlt leave lods dec aaa sti outsb jg (bad) jmp fsts sbb stc in pop xlat lock push insb inc rcrl clc lcall das jb add xor sub loop imul (bad) push clc insb xchg adc or addr16 or and idiv (bad) (bad) jmp pop xor popf mov mov mov sub mov lret mov clc sbb (bad) pushl mov dec sub stos mov loope jo or adc dec orl xchg jg (bad) call fstps lcall dec movsl lock in mov sbb cs (bad) (bad) call dec inc xor movsb arpl out lock ret adc cmp fldt (bad) (bad) (bad) pushl push mov ds insl mov adc in push push and add nop (bad) xor aaa ffreep cmp sti pop jnp xor dec and imul (bad) out aas in xor rcr lret ss (bad) (bad) pushl sbb sbb hlt arpl and clc jp add cmp ljmp cs mov ja (bad) (bad) decl iret jmp push shlb test (bad) lods mov (bad) jl jno popa (bad) (bad) out mov cmpsl xchg mov sbb adc not sub lock (bad) (bad) call jbe xchg jge mov push movsb add test divl lcall repnz flds jecxz in and in mov jg add xlat fnstenv pushf cmp pop mov cs (bad) or and (bad) (bad) (bad) call fdivr in pop movsb mov push arpl push push pushf inc (bad) icebp jmp lods cmp (bad) (bad) ljmp int3 mov cmpsb push lcall inc mov imul cmp sub cmp lcall (bad) sub in jp dec psllw push (bad) (bad) (bad) lcall test adc or int or frstor les cmpsb call mov icebp mov xchg dec jbe sub push adc (bad) ljmp lea sub xor lahf jno pusha inc cli pop xchg subl iret push fisubl pop (bad) divb lods push or sbb enter (bad) pushl xor cltd mov dec fmull enter jb lea mov or inc add incl xchg mov xchg outsb call outsl pop test xor (bad) jg sti fistl iret xor sahf sub clc or lcall call dec sbb ja sbb xor push sub cs je sbb (bad) incl jl incl in mov cmp (bad) mov movsl (bad) xchg inc ficom incl mov mov aam mov repnz rolb lret dec push jg (bad) dec ss add popf or sub call (bad) xchg sbb push sbb shlb mov inc cmp (bad) (bad) decl int ljmp pop or roll sbb mov push jmp decl inc add adc push (bad) (bad) (bad) call or fcomps repz mov mov into test sub loopne clc lcall (bad) xor mov jmp pop dec inc adc out (bad) (bad) ljmp cmp cmp arpl ffreep insb adc lds loop dec pop test out incl pushf or inc dec std xchg sub (bad) (bad) jmp hlt icebp jns (bad) in je loope and jb ja mov js or sar scas and jo pop mov or lcall push js dec mov fimul mov icebp jo lods inc insl roll mov (bad) (bad) ljmp push cmpsb insl das pop mov fmull mov fstps sti fisttp stos pushf repz xor clc in (bad) (bad) (bad) push ss dec roll (bad) xchg sbb sti js jecxz push (bad) rol mov test (bad) (bad) mov stc add insl out xchg add lret mov mov ds (bad) wbinvd push stos (bad) (bad) (bad) ljmp mov nop pop mov cmp jmp lret mov sbb dec add (bad) cli dec dec push sub pop sbb (bad) decl add cmp push (bad) mov push inc or push mov sar cmp xchg nop lret inc add inc adc stos xchg (bad) (bad) incl jg bound add jae push ja loopne popa cmp stos mov (bad) (bad) (bad) cmp mov and insb sahf sbb or ja gs loopne dec adc jno je lds fdivr (bad) (bad) push mov jae xchg mov pop pop ret cld (bad) scas jl push lcall mov xor mov imul icebp mov cmp pop dec sub idivl ljmp orl push and sahf dec sbb or hlt das mov (bad) jg lahf and mov sbb push icebp pop jne push pop (bad) cmp popf or test lret fnsave fimull (bad) jg dec fcomps sbb dec inc push (bad) imul into ret dec cmp scas adc mov (bad) (bad) aas push xchg ss mov xor loopne dec cmp aaa nop jp sarb cmp decl lcall jae push jo test or popf (bad) aaa push (bad) (bad) (bad) (bad) ljmp or lret adc cmp outsb dec test loope test add scas std (bad) cmp pushl dec ret nop pop dec les addl push dec das pop cmp out pop dec vpaddusw (bad) (bad) (bad) decl push stos adc fchs test cmpsl popf jne jecxz sub nop loopne xchg enter adc incl fcompl adc rcrb pop (bad) sub mov jp add (bad) decl mov ss (bad) aaa aaa js dec jns and aas je repnz fs (bad) data16 mov or (bad) (bad) incl jbe inc cmc and (bad) lock push xor mov or sti sub push mov (bad) decl addr16 outsb adc je push rolb fcomip (bad) mov lahf movsl call add add fsts jbe outsb das sar mov hlt sub pop test mov mov mov loop jecxz loopne push inc lret or divl es (bad) (bad) (bad) ljmp xchg jmp push mov movsb adc test stos (bad) repz add movsb mov loopne mov sub (bad) (bad) (bad) mov bound dec push out sub jge jp inc xchg je jp dec movsb das nop mov lcall test jl sbb jne adc and pop in jb (bad) ljmp ja subl sub in rcr push in adc or push incl fs or dec dec push sahf and mov pushl mov in and add pushl je aam xchg xchg cmpsl add nop je jmp jg (bad) je or sub das shrb jns clc jne (bad) (bad) (bad) lcall add xchg sbb (bad) or mov fisttpll mov mov rcll mov (bad) adc (bad) (bad) (bad) (bad) cmp and std sbb rcrb loope mov add hlt adc sub jmp cmp outsl xchg fucomp test divl decl aaa mov mov or push push stc mov orl (bad) jmp fisttpll push and mov lods jge cmpsl leave ss mov lods idivb or sti xlat fcomip jmp pop rorl add mov call jb hlt (bad) jg pop hlt mov cmp adc mov ds fstl orb sti mov hlt mov cmp push std pushl mov xor sbb aaa out mov (bad) jmp ret loope sbb add movsb ret xchg push jl cmp (bad) ljmp push or popf lds lea ss stos xor adc outsl xchg mov std sub cmp leave pop sbb or xor (bad) (bad) (bad) (bad) out fbstp xchg adc lods sarl mov movsb pop fmulp sub jl ret and aam add dec call lods and sbb mov (bad) idiv (bad) (bad) mov loopne mov ret jns mov push scas and add push or (bad) (bad) call xchg adc mov (bad) ja loop xor mov fimul (bad) lret push inc jae repz jecxz fild mov push pop dec mov (bad) (bad) fcomip inc lahf nop xor dec les mov ljmp ror imul xor sub (bad) mov outsb ja fwait mov fwait cmp mov mov mov movsb sbb (bad) inc or add add cmpl ss outsl pop sbb in mov ljmp pop ds cmp ds fistpll cs pushl (bad) icebp xchg push cli outsl jo jbe push fwait (bad) fsubrl call fimul sbb xor sbb (bad) shlb arpl and icebp scas pop ret lds ret (bad) test loopne icebp (bad) inc std adc push ret ds jbe sbb cmp sarl arpl mov sub popf mov sub popa jmp pop dec jle or es sub lock jle popa inc jg jp (bad) jg mov cmp xchg aaa push insl cmp pop or das pushf lahf cmc outsl mov scas pop or (bad) aam mov push mov idiv lcall mov sbb ss flds push xchg aad les movsl fidivrl mov insb (bad) (bad) (bad) (bad) cmp aas enter scas or (bad) dec dec idiv pushl jae daa jne pop push (bad) mov test ficoml sti bound std (bad) ljmp out insb and sbb in adc jmp ret (bad) (bad) (bad) decl push insl push es pop (bad) push pusha rclb sbb (bad) mov ja adc lock sahf in mov add adc mov push cld dec rcll test jp ret js (bad) mov nop (bad) or adc push loopne mov dec (bad) xor adc inc lds jg outsb sar decl movsl jae or (bad) mov ja,pt cli (bad) mov aas mov (bad) cmc jnp push (bad) ljmp loopne sub mov xchg jg pop scas mov jmp (bad) jmp sub decb divb push lods sbb (bad) (bad) (bad) (bad) or arpl or sbb mov sbb stos pop cmpsb xlat mov loope dec xor push dec push mov mov (bad) (bad) (bad) call mov sbb pop jns sub fs test cmp xchg add rcll leave jns and pop std gs into (bad) lret mov xchg lret jbe mov das ffree cmp jns or lock lcall ljmp pop or sahf loopne pop lock lcall or adc repnz inc mov add pop daa hlt mov out sub test nop pop (bad) cmp jmp fldcw xchg mov outsl push add push jo (bad) (bad) (bad) call scas jo inc cwtl inc mov ret jae ja cmpsl push dec mov insl xor cmp (bad) jecxz (bad) push push das mov clc mov (bad) std addr16 or jo mov pop cwtl xor cmpsl inc pop inc cmp push or je push push bswap sbb mov push push subl je push nop sbb mull jae push cmpl call std stos pop int cmp aas inc addr16 fcom push into imul (bad) jge movsl fisub push jge js int3 mov inc (bad) dec add jle jne dec (bad) (bad) (bad) (bad) fdivrs lea xchg jbe push and push cmp adc pop hlt jmp push pop sbb (bad) (bad) incl cmp fcmovne add pusha adc adc imul lcall jg mov xor (bad) repnz inc icebp push xchg jae push addr16 mov gs mov je clc jp (bad) cmp dec mov adc and cwtl sub loope ds sbb int hlt (bad) decl mov nop cmp scas fadd and insb adc (bad) decl (bad) outsb dec pop xchg inc xor (bad) jp xchg sti loope jecxz and jnp inc sbb and sarb incl push ds mov xchg dec inc jp (bad) (bad) (bad) pushl jl data16 mov mov adc add mov inc jle push clc jmp cs and out mov mov sar push adc dec pop or dec cltd pop sbb repz (bad) (bad) (bad) incl or (bad) cltd push jge push sti aaa mov jl stc or enter pop xchg (bad) (bad) (bad) pushl nop inc jge repnz aam cmp or nop ror fwait sbb (bad) (bad) (bad) jmp fidiv cli decl or mov sub not and gs and fnstcw (bad) fstpl ss jne aaa sbb mov out (bad) pop es sahf mov adc mov inc cmp ljmp inc js je repnz (bad) (bad) incl adc jl insl je pop add out out (bad) mov mov shl (bad) decl push mov dec xor fs out mov or jmp jmp ljmp pop es xchg and (bad) (bad) ljmp mov cld flds fnstenv lcall sbb notb cmpsl push inc sub mov ljmp (bad) jns jp or les mov insb inc lret fisttp mov pushl jp dec pusha jae in pushl fmull add adc jbe inc data16 (bad) fcomip call outsb lods mov mov ret cmp popf movsl rorb sbb mov iret in pop adc incl xor outsl shr push mov hlt test jecxz pop xor in std mov jmp cli fcmovb sub inc mov arpl fcomps es fisttpl xchg (bad) (bad) (bad) pushl mov iret or pop mov mov cli dec call into call (bad) (bad) call xchg popf dec mov xchg pop xlat fidivrl out inc mov and ja inc mov xorl out pop mov and ljmp and push out fdivrl sbb sbb jp (bad) (bad) lcall jb mov je arpl push jb in and dec addr16 adc mov insb adc call incl mov in and shll test jecxz or inc incl std out fnstsw (bad) hlt and lods call cld (bad) mov mov (bad) dec ds (bad) lock stos xchg hlt jecxz pop push cld fbstp sbb xchg nop (bad) (bad) (bad) (bad) fsubrl sbb mov mov mov stc mov je mov (bad) ljmp cli call cmpsl xchg lods repnz add scas jae lods shll (bad) (bad) jg pop enter pop mov jno pop push out mov (bad) mov (bad) (bad) decl test sub cld mov mov cmp cs sti sub jg test (bad) (bad) call dec sbb inc mov cmp stc and mov dec mov aaa roll (bad) (bad) decl loop add adc loopne in cli or test inc sbb (bad) (bad) (bad) (bad) fptan movsl push and std ljmp rolb out jge jno in rep nop (bad) ja jmp std movsl push ss xor outsb das icebp dec popa mov call sarl cmp mov sbb lock jmp adc sbb loope push cmp add fldcw mov pop pusha lock lds and popf pop or sub pop cmc sub jecxz dec mov adc ja push cmp (bad) decl mov jp jno inc dec decb mov (bad) int mov mov (bad) (bad) lcall jl ds (bad) clc iret stc popf mov inc pop lret cmp out push lahf lcall (bad) lcall push cmp sbb enter pop xchg xchg mov gs sbb mov (bad) popf push out (bad) (bad) (bad) call push sarb mov aad movsl (bad) leave push out cmp jno cmp adcb xor fnstenv push aad lret cmp ja or call fsubl pop mov pop sti add mov sub jbe lods orl addr16 pop mov add fwait (bad) jg dec mov and aas mov mov cltd lods (bad) and (bad) decl aaa test movsb insl clc rorl (bad) or outsl mov sti lds or cs cmc (bad) incl subl out mov add sub in ror in xchg cmp (bad) (bad) inc test and jmp mov mov arpl sbb addr16 leave in sub cmp nop les fild mov pop mov mov icebp adc push xor or pop cmp sbb mov xlat xchg int add inc inc movb call insb out popf and inc test mov into in pushf push stos inc jae cmp or std mov (bad) (bad) jg xor mull aaa ficompl hlt pushf outsl inc mov inc mov mov decl sub (bad) aad bound popa add andb fs xor out jne into jg gs (bad) lcall imul addr16 inc xor outsl inc mov (bad) jg insl ds mov xor aad mov enter (bad) (bad) call sti and mov loop enter ret jge pop or mov outsb inc ret call xchg sahf mov mov xlat ljmp cmp pop popf imul jecxz xchg mov arpl (bad) (bad) jg mov (bad) xor sahf mov push xchg add insl out dec repz loopne add ret xor rorl pop cli out cli incl sarl jnp dec jb stc je push dec sbb cmpsl out xlat (bad) (bad) (bad) out and cmpsl cld popa mov daa ss or dec scas neg cmp mov cwtl in (bad) (bad) (bad) pushl lods xor mov cmc pop adcw pushf pusha clc icebp jne jg cmp stc cltd (bad) (bad) (bad) incl loop sub out xchg pop add cltd rcrb dec jle fcmovne xchg lahf mov (bad) (bad) incl mov jne popf push leave pop mov shl gs in (bad) dec sahf xchg xor incl dec enter (bad) jb jnp repnz jp mov (bad) incl lret pop pop stc inc xor loopne dec jns jae jle mov dec (bad) fdivrp lcall inc mov add hlt shrb mov sub push (bad) (bad) (bad) (bad) cmp ja jg jl dec push or in enter sbb push adc lods (bad) (bad) (bad) call daa mov sbb lds rclb sub test mov jnp (bad) push lret dec dec inc inc popa int xor insl ret xchg and aad push lcall ljmp aas and xchg adc or inc enter ret add push std call inc outsl test adc fsts or cmp (bad) incl pop imul push xchg mov (bad) (bad) (bad) ljmp in out popa ret pop cmp sub sbb stc imul lcall sub aaa scas dec push loope aam jl clc mov mov inc outsl xchg ljmp repnz (bad) ljmp lret cmp pop xor cld fsubl inc mov int3 dec sbb pop fdivrs (bad) (bad) ljmp orl neg mov es push adc mov sub rdmsr (bad) (bad) (bad) jmp sbb test jg mov jnp jno lea (bad) jmp jg mov (bad) (bad) (bad) pushl cmpsl mov scas and push lea pop mov mov push push push pop xor xor cmc pop xchg lcall inc mov fs (bad) popa dec mov (bad) (bad) (bad) in ret ds and or xchg fwait jg movsb ja cmpsb popf icebp mov jmp decl mov pop inc (bad) loop insl shrl (bad) push inc adcb lock loop jl sahf fs leave fsubs jg and loopne (bad) lds pop enter push xor out pusha xor add imul (bad) call jecxz lods loope jnp cmc or jnp icebp mov leave or (bad) (bad) ljmp jg ljmp push ret pusha inc xchg in in popa addr16 adc (bad) (bad) incl jbe xlat pop pop push (bad) mov enter out pop in mov xor push std decl mov add or mov and inc xchg and (bad) fldenv xor (bad) (bad) out mov sbb xor mov call (bad) mov pop repz scas jl stc add mov (bad) in inc das pusha xchg inc fnstcw lds pop jl stos in mov sar cmp popa xor push pop movsl vcvtdq2ps in (bad) call sarb jo lods scas dec inc fadd mov and (bad) push roll pop cmp xchg (bad) lds xor imul mov (bad) mov xlat icebp mov js arpl sbb out or or (bad) out mov stos push pusha mov (bad) decl jo pushf cli sahf jge rcl push mov xchg shll jg nop add jnp out (bad) mov (bad) (bad) (bad) push fsubr sub jo dec lods out arpl sub fnsave sbb (bad) ror lea (bad) (bad) (bad) ljmp cwtl lds daa arpl mov pop push inc cwtl outsb (bad) mov loop adc mov out add or pushf fistpl loopne jge jb test (bad) neg insb jne scas xor (bad) (bad) (bad) jp xor push mov xor pop push out push data16 das mov movsb (bad) notl std (bad) jg jmp mov js sti popf adc pop mov and inc (bad) lcall shlb mov test dec test std incl xlat fadd out cwtl inc pop mov aad sub xor loop lcall lods mov lock cmp or outsl clc pushl bound mov mov mov add xlat out fcos (bad) (bad) incl repz shrb jp sub out sbb dec add pop pushf push fs push hlt mov cld loop test push or jmp xchg js fldl jmp push cmp inc inc lea dec cmp ljmp sar decl ljmp repnz sub pushf inc loop into cmp fnstenv (bad) jg mov mov (bad) call cltd mov cli xor lcall js mov xchg cmp dec pop mov imul mov add (bad) fisub add cmp (bad) (bad) decl mov aad adc sub pop fmuls cld pushf push push sbb int lock data16 lret jmp (bad) (bad) call pop pushf xor call mov xor sbb mov ds fucomip cld or pop mov loope call sbb mov movsb jle jp insb jae mov out cmc outsl clc (bad) in std mov mov imul lock jae cwtl push roll hlt fcomip ffreep in popf out jp movsb lahf pop (bad) jp popa ret jl,pt cmp ljmp jle xchg xor push insl cmp pop sbb (bad) dec xor decl int popa lods pop inc cwtl sbb mov sbb mov or lahf cli (bad) (bad) (bad) fisubr jle inc xor out and sub (bad) fnsave sbb jmp cltd mov (bad) xchg stc (bad) xchg notb (bad) (bad) lcall or sub sub mov (bad) pop jno out jg incl inc jb inc mov les cmpsl and sub (bad) jmp insb nop (bad) scas pop mov in dec xchg jle dec mulb and (bad) in adc lods icebp jbe in fadds jg jb adc testb (bad) mov jns cmp imul inc roll sbb sub ljmp stos sub inc ret xor inc sahf xor sbb fldl ds fiadd or push jno (bad) call dec das and out inc jmp call shrl (bad) out xchg jne push in (bad) (bad) (bad) lcall sub dec call fcmovnu and adc adc sete insb adc xchg lcall xchg lret and mov mov push (bad) decl dec mov jno add add xchg and fildll pushl pop mov mov loop cmp xor (bad) adc cpuid (bad) (bad) (bad) lcall rolb or push adc dec aaa dec imul daa push mov loope incl aad mov scas xlat (bad) outsl ret loopne (bad) mov test in adc popf xchg fld inc int push call insb sub cmp sahf xchg jl pop icebp (bad) (bad) fistpll push xor dec roll mov scas pop mov (bad) fisttp int3 jns xor cmpsl imul mov mov push adcl mov lock add insb pushf push push and fnstsw addr16 (bad) (bad) push hlt aaa or dec (bad) clc push jle lods loopne and jecxz sbb loope push shrb ds dec sub push sub into xchg int3 (bad) jmp addr16 rcll add cmc pop rcrb inc add fcmovu (bad) (bad) (bad) pushl icebp mov in ss xchg dec and addr16 xor sub out clc (bad) (bad) call lret in hlt dec ljmp test icebp jae adc jecxz lods add push bound dec lock ss daa lods cld (bad) jg mov mov sbbl xchg (bad) pushf insb std jns mov and cmp bound icebp or aaa add push test sbb loope ljmp icebp and jbe push and or sbb inc mov mov decl pop jno bound lret (bad) negl ljmp dec dec ds mov and pminsw decl ss (bad) fdivl mov mov (bad) fldl insl or loop sbb jbe mov fdivp fistpll (bad) pop pop adc mov (bad) jg mov cmpsb or add dec movsl mov xchg mov mov (bad) decl jg or adc stc cs dec push xchg (bad) leave lds (bad) (bad) fbld mov enter pusha jle imul (bad) lcall mov xchg jae addr16 push push (bad) je jg jbe xchg jb imul inc std push rcll icebp inc sub data16 mov mov sub fsubrs fs mov cld (bad) (bad) ljmp dec adc addr16 pop sbb cs mov test cmpsl cwtl adc or add divb mov (bad) (bad) (bad) inc mov mov and lea mov xor mov pop xchg loopne dec adc (bad) sbb lds mov sbb push dec mov decl lock dec jmp pop bound (bad) dec add fwait and (bad) out cltd sbb jge (bad) aas dec inc (bad) rcll cwtl fmull movsl in cmp adcb (bad) decl cmp notb adc ja jnp mov jbe cmp mov or push push aas lcall mov add call clc bound arpl lds xchg push in jp (bad) (bad) mov std mov pop dec rcl xor jl or mov add out lret and inc push insb cmp and add (bad) pushl dec push push jno repnz mov popa mov ja mov cmp cmpsl (bad) (bad) (bad) pushl icebp mov lods cli sarb push lcall dec xor xor stos shr enter and (bad) lcall das popf xor sub xor testl imulb mov cmp les les (bad) mov jecxz (bad) jg cmpsl sbb inc inc cmp in fisubr or jmp push faddl sub xchg cld mov add sbb in ficompl jbe adc (bad) mov dec xlat andl push add ret leave (bad) (bad) incl inc sub popf mov mov je ss dec pusha pop mov (bad) (bad) cmp ljmp dec in cmp sahf pop or mov dec push (bad) ljmp push xor movsl mov repnz jge push das fnstsw add (bad) incl icebp jge inc jo jno push cmpl ds push into push sub xchg and imul (bad) (bad) in jmp jno outsb pop incb adc sbbb stos cmp ljmp into (bad) (bad) (bad) incl fsubp lods cmp scas ljmp or fdivl inc jae jns test rol decl mov xor sub adc (bad) iret dec std (bad) mov jp lahf scas mov hlt lods imull inc mov sti test pop push jle fisubr push int hlt fwait (bad) ds iret shlb sbbl pushl pop repnz aas push push divb (bad) std lods (bad) push mov xchg (bad) (bad) jmp dec xchg test push (bad) jb sar imul cli mov mov (bad) (bad) decl clc repnz sarb cmpsl xor mov inc cs (bad) lcall dec push jecxz stc jno dec dec or add (bad) (bad) (bad) incl fmull mov pop popf adc outsb sub mov fdiv loop (bad) (bad) (bad) mov int3 push jle lahf inc add (bad) test pop arpl cmpsb pop jp (bad) (bad) (bad) inc push push fwait je add (bad) mov pop pop lds (bad) bound jp lret clc insb mov (bad) (bad) (bad) ljmp pop sahf ss or jo repz and push (bad) jp dec loope mov (bad) (bad) jns mov das cmpsb dec sbb pop test push addr16 jl or stos addr16 (bad) (bad) (bad) ljmp clc iret jmp enter in adc iret nop icebp rcrl cmp jo (bad) (bad) (bad) (bad) fnstenv push mov jae rorb pop repnz xchg jae dec shlb dec inc out mov addr16 dec ds (bad) (bad) jle fwait cmc mov cld sahf xchg shrb lock push add imul (bad) inc inc es add (bad) jne dec in daa loope push add xor push jge push mov pushf outsl jg divl jae lock incl add andl or or and (bad) (bad) (bad) lcall (bad) lock or (bad) rcrl cwtl sub and xchg sbb mov cld ds mov fiaddl dec nop mov ror nop jo mov push sub mov cmp nop xchg pop cmp rcr jne or (bad) (bad) (bad) dec mov jp popf sti add fildl into sbb adc movl pop icebp xchg je mov cmp aad mov cmc xchg les clc (bad) mov (bad) in mov cmc adcb pop xchg and push jp ficompl (bad) (bad) decl loop jmp aad (bad) sub xchg and sbb (bad) (bad) jmp dec into out in dec sub xchg mov ds xchg cltd push or jmp add outsl jg jmp xor push mov (bad) (bad) decl (bad) pop or adc pop mov mov ljmp dec (bad) (bad) fcoml in sub test mov cmc and (bad) (bad) (bad) incl stos xor ja aad les mov mov and sbb (bad) (bad) (bad) ljmp leave rclb xchg lahf xor mov sub cmp or jne jecxz (bad) lcall gs and cmp xor jmp sub addl (bad) mov js enter cmp lret sub jno sbb mov or pushl aad lock je mov fcomps mov mov (bad) (bad) (bad) cmp aaa cmp in sub lds sahf mov clc jge mov jl (bad) lcall inc loopne into dec lret (bad) movsb arpl cmp imul fmull out or out mov jle mov fbstp dec aas dec adc dec lock outsl xor or mov cmpsl push (bad) (bad) (bad) pushl (bad) or pop cmp divl stc jmp xor add and pop inc push roll mov out xchg in nop (bad) (bad) (bad) jmp (bad) sub and add in pushf pop inc cmp outsl xchg fisubl (bad) (bad) incl add add mov imul addb test test sbb pop xor (bad) (bad) pushl adc dec movsl xadd mov sbb jl or (bad) (bad) jmp mov scas and xchg mov test push les (bad) cmpsl sarl addr16 pop xchg sub (bad) (bad) (bad) (bad) mov sahf pop ja (bad) lods push jle sub dec lock xor xchg stos cmpsl insb std incl scas jo jnp cs clc outsl stc mov (bad) (bad) jg ljmp (bad) dec mov add inc jb iret pop cmp fisubrl and and cmc in testl jl mov loopne sub adc xorl lcall aad (bad) clc mov lods fcoml pop sub push (bad) sti xor (bad) (bad) (bad) inc in fldt subb movsb lret xor mov mov data16 or out add mov cs popa in loopne,pt in mov stos sbb sbb push dec stos ljmp xchg (bad) out and in outsl icebp cli push pop inc fsubrl fstps test incl addr16 loopne aaa f2xm1 sub (bad) jg mov adc mov je orl jge and dec out js jno outsl sti and sahf mov (bad) jg int3 mov xor push inc shrb push fwait push jno mov in jmp jg movsb push cmpsb xor mov hlt inc popa icebp (bad) (bad) lcall pop sub bound cmc inc ljmp xchg xchg lahf inc (bad) (bad) (bad) fild cmp and clc mov lea mov pop sub sti pop lcall (bad) decl xchg and (bad) rorb ss push pop mov fcmovne jle (bad) (bad) (bad) jmp cld xor nop sbb insb jb fidiv insb fisttp jle sbb pushf push mov and pcmpgtb cmp std ljmp (bad) (bad) (bad) incl mov test xchg mov loopne jg cli aas shl jbe jns sub xor jmp ljmp mov bound jmp out push fs inc sbb push inc cmc sub ja dec or in pop jmp fcoml nop jg jmp dec movsb pop in dec (bad) (bad) (bad) lcall push dec cwtl add out mov cld mov dec mov scas negb sub sbb mov adc sarb call addr16 stos dec pusha movsb sbb xor mov test add mov in and popf test push jae clc (bad) lcall push leave cmc loop jnp xor andl and cmp (bad) (bad) (bad) aas (bad) pop xchg mov ja or add loop ds les (bad) (bad) (bad) call mov adc aam cmp or call in int aam call std stos data16 leave pusha and lret jmp inc add inc (bad) popf push and or cmp pop lock js lods mov daa mov cli ret out add (bad) repz or sub ds jge ljmp (bad) call mov jmp inc stos lret inc mov (bad) ss sub adc shrl call mov cmc int insl mov (bad) decl sbb loopne sbb arpl aas cmp sub xchg xchg cli mov sbb mov clc (bad) call sub ret into xchg in loope pop sahf (bad) in (bad) cs lahf arpl (bad) (bad) jg and test inc sub or and sbb fadd (bad) (bad) cmp in fidiv jmp out sub pusha insl dec sbb pop rorl pop or (bad) decl xor and out je lods push test sarb jbe stos jg push ss mov or loop sub mov sbb jp loope adc push (bad) (bad) lcall and pop dec or mov push mov test cmp in pop dec push inc push adc cmpsl mov loopne rorb jmp mov in lds sbb xor test xchg shrb test enter add cmp lcall fisub popf test pop sub movsl jl popf adc ds out nop mov inc adc pushf xchg lcall loopne dec fwait xchg outsb fldt jmp mov cwtl mov sbb mov cltd dec mov dec ljmp lret xlat aaa cmp (bad) (bad) (bad) decl popa push jge adc das aas fstps inc jp mov lcall movsl xor sub (bad) call cmp cld mov dec ss (bad) jne dec pop cmp mov (bad) (bad) dec push sbb ss push or jp lret fcom mov inc (bad) fisttpll dec jmp xchg cld call jge movsb or cltd sbb aaa cmpsb mov jb lcall call jne mov test sti cmp rcr test cli lcall inc mov leave out pop dec pop mov (bad) (bad) jmp cmpsb jecxz in pop aam fidivrl movsb js cmp clc mov lcall mov adc movsb fyl2xp1 dec pop je cwtl pop ficom iret add (bad) pushl pop sub lahf ror cld inc outsb xchg sub (bad) (bad) jg shl pop and xchg lock pushf test pop sbb pushf das sar dec push stos push mov std movsb out mov xchg fnstenv xor cmpsb inc mov jg or and mov std loope,pt sbb xor add (bad) (bad) (bad) incl or in jl lahf lea jnp insl dec lock popf fidivr sub add cmp xchg mov mov push insl and ret decb adc (bad) (bad) (bad) jg lea movsb popa mov xchg mov imul scas sub mov inc ret ds or mov ficoml das cmc adc lahf mov mov sarl clc mov std mov lret insl inc cmc mov dec dec out sbb lcall adc sarl fldenv xchg subb mov jecxz inc (bad) test ds popa popf dec ret sar (bad) (bad) fcmovb sbb lea fdivs pusha rolb lcall xchg xchg imul hlt scas insb pop (bad) (bad) (bad) pushl xor ret jb sbb lock cmp dec pop ja (bad) (bad) (bad) ljmp movsb cmp mov cmpsb inc jne test cltd cmp push mov mov aas push pop rorb lods jbe enter js sti cmp ja add mov lahf test xor fnstsw fdivr dec pop mov jge addr16 (bad) fcomip push dec js sbb in leave xor stc xchg xchg (bad) dec jnp dec mov cmpsl sub and push mov mov mov std fs xchg push ja mov xor cld div (bad) (bad) fbstp inc aad das movsl xchg lret stos nop adc out in cli push test decl xchg jp das sbb dec sbb sbb push or cmpsl dec pop add push fiadd sub jge mov mov leave dec aam jl mov bound jp scas cwtl int3 xchg xchg sub xor add add decl (bad) mov or loopne fmull fsts sbb cmpsl std (bad) sub push sahf pop nop testb lcall ffreep (bad) mov sub (bad) xor sbb movsl push mov push dec pusha inc rcll fs xchg mov mov mov mov scas iret and or jg decl xchg dec ret dec clc pop push scas mov pop (bad) ss cld and jne nop movsl cmc (bad) (bad) decl addr16 outsb rorl jae daa jp jge jnp pop aaa int and (bad) (bad) (bad) ffreep or inc inc pop mov xchg lret test push adc add mov test ljmp pop rol repz cmpsl cs popf jno xor ljmp cwtl (bad) sbb gs lea inc int3 stos sarl xchg mov adc jp,pt (bad) (bad) decl cwtl cmp cmp bswap (bad) loop xor cs cmc js (bad) out std adc leave sub and in inc icebp (bad) (bad) pushl cmc mov jnp in ror pop ljmp (bad) out cmp in pop (bad) (bad) lcall xor cld or stc ljmp mov mov or (bad) (bad) ljmp push mov fidivr ror jo jne adc and cmp (bad) call stos ljmp je inc jne mov shrb lret movsl and icebp (bad) (bad) (bad) ljmp lahf sbb aad out (bad) mov jbe mov les or rcll in pop ljmp sbb push (bad) jae outsl sarl push out jecxz insb sbb stos pusha nop cmp inc (bad) (bad) call inc (bad) stc jne mov jns insb fisttpl inc jns shr inc (bad) (bad) (bad) incl dec mov je popw pop add out pop dec xlat pop (bad) jo dec loope gs xor sub mov mov lods jne in adc loope push adc mov std sbb cmp jb (bad) (bad) (bad) cmp stc xor mov add jb,pn lahf and jnp hlt or cmc (bad) (bad) (bad) mov and dec mov mov aam and push push adc cmpsl pusha sub (bad) (bad) lcall mov fisubr mov test arpl popa pop shr and movsl pop pop push adc xchg stos jb xchg mov (bad) jmp pop and push pop roll dec push push aam adc inc cmp mov (bad) decl das or jb std fldcw pop adc (bad) ljmp mov jl mov fwait mov fcom cmc lret xor inc clc call cld xchg dec push sbb test sub push rorb or mov or out xchg test (bad) (bad) out pop mov inc mov test imul or inc mov xchg out ja in movsl into dec (bad) (bad) (bad) jg fsubs xchg (bad) cwtl xchg rolb push test push insb movsl mov (bad) cmp rcrb push fiaddl mov pop and repz (bad) ljmp mov (bad) sub ja sbb mov test loop js call fisttp (bad) dec iret pusha cs stos jp fs (bad) ljmp push sub cmovl (bad) (bad) (bad) (bad) pushl sub push jo jne add aaa rorb dec jmp das xchg sub in (bad) decl dec fidivr jne add in jo pop insb mov (bad) (bad) (bad) incl lcall jmp pop add loopne inc mov mov lods adc outsl xor sbb push (bad) lcall icebp (bad) dec ret push push xor push movsb test andb call (bad) ljmp mov mov roll addr16 repnz loop (bad) fistl cmc (bad) call inc push pop (bad) aad jecxz or push xorl mov inc jbe push add pushf mov movsb dec pop or pop aad (bad) (bad) (bad) lcall rclb (bad) ret movsb and repnz push mov xchg xchg cmpb fmull (bad) decl pop (bad) test in inc mov (bad) (bad) cmp pusha imul sub mov add cs test ret (bad) mov repnz push icebp ret loop xlat mov das inc inc (bad) pushl mov xlat pop int3 cmpsl adc add mov xchg adc inc ljmp out xor fbld lock call shr mov loop loopne call sub ret movsl lea call xlat (bad) (bad) incl mov xor test mov test loop lcall mov dec mov dec pop (bad) jg dec test in test movsl ret push adc sar decl ret jb push add sahf or mov (bad) (bad) jmp mov mov fdivp lret das lods jecxz out pop dec (bad) push in push out mov xor ja sbb imul mov (bad) repz (bad) (bad) incl push cmc loop (bad) sti adc inc cmp mov sbb jge (bad) in clc subb push test mov jo sahf nop sub lahf sub mov flds adc ret push jl fist out jecxz je (bad) cmc not cli out (bad) adc stc pop (bad) (bad) decl push mov ficompl xor jmp push jbe ja jp in into es jg and push shrb jo ds insl cwtl aaa (bad) (bad) (bad) (bad) call push and lcall into lods fsubrs or dec adc mov jmp imul xchg inc mov aad ds jg mov test rcll in in outsb stos (bad) jg push or cmp movsb int3 int in imul and pop dec test decl adc inc push hlt mov add cmpl cli jmp or dec mov and xor cmpsb (bad) into fstpl mov cmpb fdivl movsb pop sub adc cmp into jbe xchg pop push (bad) (bad) jg cltd dec jbe out mov pop repz jp mov sbb dec mov call add mov push pop mov (bad) daa mov (bad) (bad) (bad) (bad) ljmp addr16 inc xchg jnp hlt bound mov jbe loopne dec scas aad jmp (bad) mov cli mov out and mov mov imulb loopne (bad) js lret enter sub or rcrl arpl enter (bad) (bad) (bad) jmp pop (bad) dec icebp and in mov xor int push push mov add (bad) (bad) jl dec jae sub dec mov mov fimull in adc xchg call cs mov mov pop mov test and fidivrl das lock dec adc pop mov mov (bad) sar lcall xlat repz (bad) jecxz es std mov idivb and sbbb (bad) (bad) incl out mov xor mov mov jle rorb sbb cli call xchg push cli add je adc or (bad) ljmp jo jbe dec or (bad) mov lret dec lea call into fidivl xchg (bad) (bad) (bad) jmp or dec sub testl negl pop mov inc js (bad) (bad) call in nop pop stc test daa sub mov push aaa int3 dec xor push mov dec add and mov push cmp bound cli ljmp mov stc mov mov aaa cli push (bad) (bad) ljmp lret dec and popf push (bad) repz jae in pop dec jecxz cli stc cwtl push sti (bad) jg lcall js insb aam sub jp xchg cli xor mov mov dec (bad) (bad) mov mov add outsb scas sub xlat into inc (bad) cltd fldcw imul pop jle xor cld daa jo insl lret cltd imul aaa std pop pop jmp push bound jle neg and cmp out insb jno std (bad) incl inc mov sub (bad) jb out (bad) push (bad) xor fsts cmc int (bad) (bad) (bad) decl adc add inc add sbb cltd lea jo lods mov rcrb and (bad) (bad) (bad) decl (bad) sbb mov adc fldt push cmp xor jbe add sbb ja (bad) sbb jmp mov (bad) pushl jne loopne aaa jbe in and mov add push mov ljmp add outsl test pop in xor movl (bad) (bad) jmp imul outsb fstpl xchg repnz lret aam jno sbb fsubl popa (bad) (bad) (bad) (bad) fisubl xor inc pop out jns les or push std jb (bad) pop adc (bad) jmp push mov xchg into cli jle xchg in and mov sahf mov xor test lcall (bad) aad in cmp cmp nop imul or int pop sub (bad) lcall sbb xchg mov xor divl (bad) (bad) (bad) ljmp sbb jp int3 movsb imul mull add xchg push rolb jne cmp (bad) (bad) jmp faddl (bad) cmp lods mov ljmp and adc daa decb out push mov lcall cmp fwait sbb cmp incl dec push out stos and movsl lcall lcall lock cmp sbb sub jo dec lret cs imul rcrl ret and out fistpll jne xchg add xchg ds (bad) (bad) mov dec repnz faddl inc stc mov mov cmp jo (bad) (bad) (bad) ljmp insl push sub test and inc scas and test lret mov (bad) pushl das aad push and or sub pop push jmp sbb sbb mov (bad) (bad) (bad) dec push add aas jl push outsl cmp cmpps dec mov shld (bad) ljmp (bad) add jne jmp cmp xlat or int adc push data16 sub in decl (bad) jmp adc jbe sahf inc push fucom mov cmp cmp stos and jg (bad) cmp push jo aas sub push inc fisttpll xor sub and ss ret out add xor (bad) fs decl pop sbb and movsb sub clc inc leave movsl xlat and movb add jg lods dec push inc pop mov push mov mov incl xchg xchg push add lahf xor ficoml push add fwait sub mov or cmp ds inc push (bad) (bad) (bad) jmp sub das out mov test mov daa and popa movsl icebp cs std mov (bad) (bad) (bad) call adc sub cmp fbstp flds lods and repnz addb fwait repnz push mov ljmp out or sub add out jecxz jge mov inc (bad) (bad) (bad) call movsl sub xchg stc repnz mov lret mov jo outsb (bad) (bad) (bad) jmp or clc repz sbb in mov push xor sub mov fmuls add (bad) (bad) jnp mov mov cmpl outsl out (bad) (bad) pushl dec cli adc dec mov sub test sub (bad) (bad) lcall mov repz cmp fs fbld cltd mov cmp or mov ds pop inc pop stc loopne pop push ret and jo int (bad) ljmp in or div pop (bad) stos fsubl mov jle loopne jg pop mov sub mov xchg imul mull inc rcll push orb pop pop adc stos lock lcall mov cwtl cs lods dec popa (bad) (bad) (bad) pushl mov push mov fcmovnbe mov or add int3 add (bad) (bad) pushl or mov xchg mov pop inc (bad) (bad) (bad) mov icebp repz xchg jne mov addr16 insb mov jl (bad) or pop push dec aam pusha ds jge xchg dec adc (bad) lcall sbb jle pushf add test (bad) pushl ds and mov stos mov pop dec test push cmp scas fdiv adc add loop sub xor int3 ja,pt scas adc rcll mov adcl dec pusha xor arpl stc jne out outsl xor xchg icebp xchg mov test ds cli (bad) jg dec xor ds mov pop or ret sar push mov ret lock and (bad) (bad) (bad) aas fiadd dec popa push sbb es lock push sti dec aam mov xor add (bad) (bad) pushl mov iret and adc or (bad) jb jb ror or push or pop jl add xchg and push loopne (bad) incl ficom push (bad) dec add enter mov jmp lods or mov inc ja add inc pop scas xor lcall push add aaa push lods cmp push dec jmp push or (bad) (bad) (bad) cmp add pop lret xchg sbb cmpsl pop sbb fbld sub xlat lahf lods (bad) bound divl jmp insb loop aaa icebp jbe lcall lcall pop dec lcall mov pushf fmul in sub (bad) mulb or xchg (bad) or out mov mov add sub push cwtl (bad) (bad) (bad) jmp stc jmp xor lret pop and sub push lea ljmpw cmp int fldl fcoml push gs dec mov (bad) (bad) push mov cmp dec push sbb stos mov mov fidiv push les mov sbb fmuls xchg scas mov jb out cmp sub mov stos popf int cli xchg jg xor data16 (bad) (bad) dec jae inc mov lods sar or cmp xchg shr inc movsl or pop adc sub not dec and cmp (bad) (bad) (bad) (bad) std arpl scas imulb cmc push aad xor xchg punpckhdq (bad) xor pushf std add (bad) incl out test je push mov or push idivb out (bad) xor (bad) incl and mov loopne not stos or ljmp mov dec xor mov fwait repnz in jle stos out adcl sbb cmpsl mov enter lock cwtl es out mov in lcall push les add lds xchg mov or (bad) (bad) jl rorb pushf sub sub repz adc push cltd sar js pop pop cmp hlt mov push dec sahf aad jmp push jecxz call cld and sbb dec add vmwrite jb lret mov sbb or sbb or dec mov push cwtl mov xchg pusha pop xor mov (bad) es in fidivrl imul data16 mov inc (bad) incl adc inc add cmc sub (bad) jmp sub pop jne jg adc mov push lcall or fdivp pop pop xchg jns imul and ljmp fnstcw cltd xor loope pop cli mov push mov xor (bad) (bad) (bad) incl sub cmp mov lods xchg pop subb jl fstp cmpsl fbld jmp popa es xchg jecxz test sbbb dec jo (bad) (bad) push in fmull push rep xlat push pop out divb push xchg pop es ss xchg pop pop (bad) (bad) (bad) incl imul mov mov xchg add adc or mov incl int3 call and xor icebp lods notl pop lret mul inc sub (bad) (bad) jg cmp aas fist shrb push lock mov and (bad) (bad) mov cli sub add jge sbb lahf les jg push pop xor mov jg push shll lret mov stos jg int mov push fildl mov jns je mov iret out int3 das cld jmp repnz (bad) (bad) lcall inc dec adc les or xrelease cmp dec dec icebp jb push xor adc ljmp mov jnp xchg cmp xchg mov pop leave insb leave xchg mov test jbe (bad) pushl inc rorl aas cmpsl push aas adc mov out dec pop insl push lock ljmp adc xchg push adc shlb dec mov out and push cli ss or sub call mov and xchg loop sbb add stc mov repnz push addr16 test je xchg add mov mov or mov jb mov adc sub or clc shrb push jp jb (bad) (bad) call inc lcall ret jp mov jecxz nop pop loopne pop inc and ds test mov jno and nop rcr xor int rcrb sub cmp pop sub (bad) (bad) pushl push xor repnz dec cmpsl arpl push sbb add jmp mov fildl pop clc (bad) (bad) incl and pop and add repz jae lea (bad) decl mov push arpl inc in or jecxz mov sub mov call xchg xor lods aad ja (bad) mov push xchg mov fadds inc dec leave (bad) icebp mov jae cmp (bad) mov into pop mov sbb pop fstpt addr16 mov fdivr (bad) (bad) ljmp jmp in outsl pop push jmp cld movsl fmull pop xchg (bad) call inc rcll je fs aam test scas scas stos mov and mov mov lds das shrb (bad) and ljmp out and pop (bad) test out mov es das xlat stc icebp fmulp js in (bad) aas imul dec mov insl adcb (bad) (bad) (bad) ljmp mov adc adc je ret push data16 jmp cmp (bad) (bad) (bad) cmp dec notl push addl xchg sahf sahf jns out sub xchg cmp sbb inc cmc push mov xchg pushw shll arpl and (bad) (bad) ljmp inc pop inc ficom (bad) cmp inc pop nop or leave mov jb dec das pop and sub (bad) (bad) (bad) std into shrb in xchg push and and push push jae ds or cld dec scas or clc (bad) sti pop push data16 in adc mov fwait (bad) (bad) lcall shlb (bad) jl mov mov jp pop xor and cld sahf sbb and jp mov ret pop or (bad) (bad) decl xchg xor stc adc xchg iret pop push iret scas mov loop cwtl std xor stos mov or (bad) jg aas popa ret dec test jnp orl mov pop mov (bad) (bad) (bad) cmp out dec les bound gs adcl in add and ds in pop xor ret mov cmp pop mov ds ja (bad) (bad) (bad) jmp andl sub cs jle or sbb fist pop movsl rcl lcall ljmp out imul int3 (bad) jge add out lea (bad) insb xor notl cmpsb out outsb (bad) (bad) (bad) push repz movsb push sub jo cli fldenv stos xchg or mov mov pop or call mov mov dec out sbb test mov pop (bad) (bad) (bad) incl mov sbb mov cmp jns js leave fs inc xchg sar (bad) incl fldcw pusha repz jbe nop cmp xchg fistpll (bad) (bad) call ds in sahf jne ljmp cmp in fdivr (bad) loope (bad) (bad) (bad) jmp dec or in ret pop cltd mov imul dec stos add loopne mov jg fldenv decb repnz adc (bad) (bad) (bad) (bad) mov xor jo cmpsl orb fistpll sbb pop xor jge and or pop push fsubp jo imul incb (bad) shrl (bad) lcall dec cmp fadd pop shll xchg pop dec xor jl inc cmp inc bound (bad) (bad) incl (bad) aad bound mov pop mov pop and pop (bad) jns imul (bad) call ja or add push mov ret cltd push cmpsb xchg mov sbb push dec aas fcoms mov incl jle inc and ficompl mov xor imul (bad) (bad) (bad) (bad) stc stos iret jmp pop js les popa es inc push aas je daa fld push loope scas push mov or mov in dec xor mov jecxz (bad) (bad) (bad) jmp cmpsl jge pop cmpsb les mov lock icebp ljmp cld (bad) (bad) stc stc hlt inc add movsl ss mov and pop out loope (bad) jge add (bad) push mov (bad) (bad) (bad) call cli sub push mov jae add jp push pop pop dec xor ja mov push pop imul test pop sbb das xor loope imul sub dec cmc in clc inc aas xchg push dec xchg mov cmp (bad) incl ds cmp loope ficom and cld popa clc jg call les cmp sbb jp push pop sarl lahf sti outsb sub adc out call mov mov add push (bad) stos (bad) dec xor push add xlat out aam add mov sar pushl xchg jg,pt daa call ljmp out fcmovnu ds (bad) call lcall mov mov cmp and jb and dec cmp inc jg pop mov cli sar (bad) (bad) lcall rorb cltd popa mov mov aas popf cmp lods add fcompl mov lods out sub pop pop or fs ljmp (bad) mov sub je mov out leave (bad) insb lahf sahf mov xchg enter (bad) (bad) incl xor adc xor roll or mov scas mov sub push movsb adc loopne jmp push add hlt out add cmpsl loope jp (bad) (bad) call or dec mov jne and push outsb es (bad) dec (bad) (bad) (bad) call add mov outsb xor mov push mov xchg xchg xchg cmc dec and ss movsb or inc mov sub incl cld mov clc pop das and xor cmp fdiv (bad) jp out (bad) mull sub or in dec push outsb sub (bad) (bad) (bad) (bad) jle cmpsl or dec mov inc pop lahf out add mov daa push jae mov sbb inc mov icebp xlat and sbb or fildl das mov ror add cmpsl add in mov (bad) ljmp scas aam pushf xchg test jl sub call ljmp aam incl add pushf (bad) stos dec out mov lock decl jmp repnz xchg gs mov adc mul ficom fbstp cmp (bad) jo xchg addl inc clc fistpl push repz cs mov dec call (bad) ljmp js mov int sub mov mov xor or push sarb sbb movsb dec movsb pop (bad) (bad) (bad) decl push out xchg (bad) cmp mov add cmp lcall xchg mov or vminps mov mov cmpl adc inc xor fwait fwait adc je ret pop mov push (bad) into adc (bad) (bad) decl sbb push outsb jne mov sbb or inc sti and in adc loop (bad) (bad) ljmp int3 call (bad) cmp xchg mov lahf sub push aaa xor cmc pop cmc xor cwtl push sbb jecxz lods (bad) (bad) incl adcl pop sbb mov sub jmp inc push adc sub cmp (bad) (bad) (bad) incl cwtl test sub int int xchg test (bad) bound cmp and add test stos pushl sub pushf rcl es das and push jl jnp push dec mov (bad) mov in xor inc fidivl fldenv (bad) (bad) (bad) (bad) cmp mov xchg mov repnz mov fwait pop sbb sbb ljmp mov jno nop cmpsl mov out cli sub jne push push xor pop cmp rcl jecxz (bad) (bad) lcall xor mov push cwtl or mov mov push nop and out jecxz dec adc cmp clc lcall mov rcrl (bad) jg movsl rolb and push adcb sbb dec or push mov scas imul jmp cltd xchg (bad) rorl scas or adc lcall insb mov mov (bad) xor rcrl push mov add lea dec daa push cmp stos mov mov (bad) (bad) (bad) ljmp shrb mov adc movsl dec lds addb ljmp arpl movsb rcr call jp ret and pop inc jg pop inc stc fcomi fs sub clc jle mov call pop sub push stc mov xchg (bad) cmc push pop or jnp hlt inc xor imul mov je les cmp (bad) (bad) cmp (bad) (bad) iret or lea daa outsl add fs push les (bad) lcall push xor and pushf fsubrs sub sbb push inc inc pop (bad) fcomip (bad) fstpl sbb jle shlb mov push rol xor out ljmp (bad) jmp cmp inc sbb fsubrl mov jmp cmpsl int push in mul pop pop add or (bad) (bad) pushl cmpsb sub cli pop and push aas push sarb cmp pop jle pop or loope lahf dec incl add or xchg xchg call scas dec js and sub in mov stos fmuls sub (bad) (bad) (bad) call out lcall repnz in cmp pop push jns lret or mov xchg xor imul loopne sub stos sbb clc repnz dec jns and jl fnop jecxz (bad) (bad) pushl lods dec mov rcl mov push mov push jg aaa push pushl in add fs mov scas test pushl int mov (bad) add loope add pushf loope push and fstpt stos jns in iret dec push mov mov (bad) sub or add mov in in jae fistp in and pushl movsb ds dec pop xor jb add lret sar (bad) fistpll xchg clc mov fbld adc xor fistp jo adc in (bad) (bad) (bad) ljmp cs stos pushf (bad) out (bad) mov ss mov dec mov aad dec out (bad) fistp (bad) (bad) inc bound cmpl cs stos xchg cld es push dec sar mov movsb push (bad) xchg out mov xor (bad) (bad) (bad) jmp int sbb inc dec in pop (bad) dec je push test adc lret mov and (bad) (bad) (bad) ljmp and xor and push bound imul sub fisubrl addr16 (bad) ljmp xchg lret pop xor repz outsb fistpl ret (bad) and (bad) (bad) (bad) ljmp daa jae add xchg (bad) gs sub jne dec enter xchg testl xchg xchg sub hlt fsubs lcall sbb ljmp add sbb pop out adc (bad) outsb sbb (bad) decl sbb jp xchg enter addr16 inc xor jge mov fmul (bad) lcall lcall add inc jnp cmp js cld dec mov (bad) (bad) push sbb cld push sahf movb loop dec test lret popa je,pt xor mov insb andb sub mov and jbe jns (bad) (bad) mov mov mov xlat xchg push fildl andb ret sub cmp (bad) pushl aam cmc adc fbld js and testl aam faddp jmp dec ror pop loope jns adc jecxz std out mov ret fcmovnu in in cmpsl and movd and (bad) (bad) pushl xor in mov sbb test mov test jae and (bad) lcall int3 mov (bad) mov dec insb xchg add jmp (bad) aas xor xchg xor test mov push out add or call lods fldenv lock pop cmp inc stos rorb xchg mov das das add jmp push mov xchg movsl lea (bad) stc xor (bad) (bad) (bad) incl faddp adc das sub out bound push pop pop inc dec mov sarl nop adc and out popf xor ljmp sub lret add mov pushl mov add frstor and sub (bad) (bad) pushl les fisubl dec add stos sbb adc into pusha dec jg (bad) jmp xchg ret inc mov pop mov jecxz dec sub xchg push das or fidivrl cli (bad) (bad) lcall add stos mov inc sub mov cmp pop bound dec out (bad) add ljmp movb xor rcr pop mov mov aad shl out decl fidivr sbb fisub es or xchg add arpl scas (bad) (bad) (bad) jmp sbb and shr mov ret cltd pop pop xor movsb or js or sub (bad) (bad) ljmp mov cmpsb mov xchg js jp xor stc mov insl inc cmp (bad) (bad) (bad) ljmp movsl sbb push jecxz sbb jb lcall js das cli lcall hlt leave inc sbb mov mov adc mov fs mov lods ljmp aam rorl push outsl sbb or mov inc or inc add (bad) (bad) ljmp pushl inc movsl jae aad xchg xchg jns jle adc inc jns aam pop (bad) (bad) (bad) jmp scas mov jmp xor (bad) sbb aam add fldcw inc test aad loopne mov int test or push nop sahf mov push inc jno mov (bad) (bad) jg sub imul inc mov pop test in or addr16 (bad) mov insb into push ljmp pop sahf xor decl clc ret add scas inc xchg mov aaa xchg dec sbb add ds push xchg sahf ja (bad) (bad) std mov das ss stc fdivs mov sub call or loopne repz jle jns fldl adc aad jb (bad) (bad) (bad) lcall cli adc pop lahf test aaa in jl iret lret cmp sbb fnsave adc addr16 or es dec loopne cmpsl add mov (bad) (bad) mov fwait shr mov inc (bad) sub icebp xor push sub fstpt fdiv rcr loop (bad) incl faddl lods (bad) cli dec cmp add (bad) (bad) (bad) decl mov cmpsl push pop mov shlb pop int3 pop mov xor sub scas push or (bad) (bad) call aaa push shlb jmp and js imul cmp (bad) call push lds cmp mov in jns dec push add mov (bad) (bad) (bad) lcall pop jae (bad) in mov xchg sbb arpl jl insb sti test jl in adc push inc insb pusha lahf inc xor pusha addl cmp (bad) (bad) (bad) cmp out pop adc add cmp (bad) in dec dec dec and xchg sub push movsl mov (bad) (bad) decl negl inc mov sar divl add push xor arpl daa fdivr (bad) (bad) (bad) jmp push enter inc mov xchg iret dec mov sub cmpsb stc dec call or mov fstps nop mov mov jno mov fwait pusha imul push cld (bad) decl push mov mov lret xchg xchg out xchg pop pop dec pop jb mov xchg pop mov inc add jbe hlt and outsl and pop ljmp mov mov loopne (bad) (bad) call mov cltd mov and add mov test xchg ljmp (bad) (bad) (bad) cli mov cld pop mov je daa call daa (bad) mov jl out mov dec push xchg rclb mov inc mov jmp cmp and cs (bad) (bad) incl rcrb fidivl test int mov fdivp push mov (bad) decl in jg lahf fisubrl cmp bound pop jnp (bad) incl pusha sbb sub jae inc mov xchg xlat in int sub fcomip dec push dec sbb nop shlb cmp test stos or dec dec xchg mov sar (bad) jmp pop pop or xchg mov pushf cmc cld daa xchg jg adc (bad) (bad) lcall fstpt push insb and dec cltd push daa bound fistl dec push lcall dec jp out (bad) mov cwtl adc int3 adc (bad) fimull es (bad) (bad) inc pop and mov inc rorl inc imul mov rep inc xchg sbb clc (bad) lcall imul insl mov in sarl bound mov sbb pushl pop (bad) rcr lahf call dec pop mov lds pop outsb fwait clc movsl std pop lock lret movsb mov and fadds scas gs dec cld outsb mov cltd (bad) (bad) (bad) call je test xor lea and mov xchg pusha push incl mov (bad) mov push enter pop enter in (bad) lcall or rol addr16 stc test xor xchg (bad) (bad) dec xor sbb xlat fimull mov lods testl je fisubrl (bad) (bad) (bad) decl cltd mov push loope jns fcomip mov test (bad) cld pop in cltd xor (bad) decl cmpsb add or push fidivrl or sbb fcoms incl and imul hlt cmp adc lods lock (bad) jmp imul mov fs pop inc aad push hlt stos dec roll rclb cmp (bad) lcall repnz jmp loop mov jae jo cli lds xchg nop add cltd daa subb lcall and fisubr xchg movsl (bad) call mov pop sar dec xchg imul clc jnp int3 or mov jmp mov cmp faddp or mov mov addr16 jecxz data16 (bad) lcall push scas test xorb sub ljmp push mov jg dec mov pop cmpsl mov cmp xor (bad) (bad) (bad) jmp lcall test hlt cmp mov out lret pop cmp popf orps popf cli incl pop xor jnp sbb push das pushf repz mov imul push pop push negl xchg xchg dec push pop je (bad) (bad) ljmp (bad) mov ret push xchg mov aaa xchg movsb cmp sub ret push aaa (bad) (bad) (bad) call js inc repnz mov in repnz mov mov icebp scas add cmp imul aad mov (bad) decl pop or xlat (bad) in mov sub xchg in (bad) (bad) decl push stos jo sub sti jnp inc aas (bad) in pop pop pop dec pop cwtl cmp ljmp or into adc or cltd adc scas and cmpsl adc (bad) (bad) (bad) decl cmp pop mov xor ja jb pop and pusha or stos (bad) mov push adc mov cli jne lahf jne out mov cmpl sub pusha fcoms jl (bad) (bad) push lahf mov mov push bnd sbb int3 jmp (bad) (bad) (bad) decl fwait adc aas xor adc lock pushl (bad) lcall xor fstpl push lods xchg pop push and repz imul fild in sub orl nop inc and jle lods inc or (bad) (bad) ljmp pop test lret imul out fcomp test inc xchg push movsb pop xor (bad) mov ja jg dec std stc sbb pop scas idivl sub negb out clc sbb cmp jbe push lahf cmpsb add (bad) incl je (bad) sahf aas pop mov cmovns cs mov (bad) ljmp mov push sub adc jb push (bad) ljmp fdivrl dec aas rclb (bad) out mov jmp aad mov movsb sti arpl ret jb fs jns hlt subl pushl dec mov mov sub daa adc (bad) lcall ror movsb mov in add cmpsl cmc lods int3 push inc mov test jbe add add push das test aad imulb xor push pop std (bad) aas (bad) shrl ds in push call inc adc (bad) (bad) incl xor add push lea ljmp lea in pop push stc push push mov (bad) (bad) (bad) incl mov aam cmpsl mul les pop xor cmpsl mov in loopne dec mov incl ds mov adc or push (bad) jmp lods xor (bad) xor int3 data16 jnp pop cmp mov out sbb out inc fwait add jle lods mov out cmp pop pop pop jbe mov pop faddl xchg cmp (bad) or mov inc jle mov cmp jle sub into lods ljmp jmp loopne adc push stos sub (bad) clc xor push outsl cli (bad) decl std insl adc mov inc shll sar es push inc incl push les push pop pushf cmc (bad) pushl stos push pushf dec cmpsl dec cmp inc sbb add cmpsl mov repnz movsl mov sbb mov add sub lods jns push cld cmc scas ret in inc push lods loope fnsave aam movsl repz cmpsb dec loope jg xor push sar inc (bad) push loope icebp cmpsl test (bad) pushl rcrb sbb xor sbb lret cmp into jae (bad) (bad) (bad) out jecxz cmc jmp cwtl rolb ljmp data16 out int3 add (bad) (bad) (bad) jmp dec ret and hlt adc test mov int je or (bad) (bad) (bad) decl movsb jb fnstcw repnz jg div push push aad insb sub in loop ret jge loopne out cli incl pop (bad) jno test and movsb jne inc (bad) ljmp cltd mov push adc jecxz (bad) lcall pop pop xchg and leave out lods fildl in inc in xor cmpsl mov or (bad) (bad) (bad) ljmp mov xchg stos loop enter (bad) test dec std js or (bad) hlt (bad) incl (bad) int3 imul xor daa adc xchg popf aam dec call cmp in ds mov pushl fidiv xchg and pop mov or loope sub loopne popf or int3 test (bad) (bad) (bad) jl or jne (bad) out push jp aam inc fistl mov and inc hlt push pop (bad) out cli ljmp dec adc sub out test mov stos inc push add push jmp scas mov popf (bad) xor shll sbb jp popa pop push clc mov add pushl jp jb js and dec sub mov jge (bad) (bad) (bad) pushl mov mov out inc test inc iret aas stc sbb in and sub (bad) (bad) stc and xchg movsb xchg sbb push jnp mov sbb mov cmpsl out sbb mov mov ret mov call std mov and pop insb mov mov out xor test jno (bad) (bad) mov or dec adc jnp rcrb cmc incl mov push movsb aas leave push mov (bad) lcall pop pop and iret gs jp sarb and xchg push out add cwtl (bad) ljmp sub xorl mov mov adc cmp (bad) (bad) cli (bad) aaa inc sub aad dec loope sahf inc (bad) dec xor orl (bad) sub push sub adc daa mov repnz das (bad) (bad) ljmp sub cmp xor repnz xchg jle lods out mov add dec (bad) mov addr16 loopne in pop push mov adc iret arpl ljmp dec mov push cmp sbb dec jbe (bad) push sarb mov xchg nop cbtw push into rorb lahf fnstenv (bad) (bad) fistp mov lret ja out sub movsb add sahf add (bad) call rcrl push push cwtl adc push popa es push xor decl jo mov sbb adc push sbb xor popa cli (bad) int3 out push sub test pop hlt lea loopne lods lahf jbe rcrl dec inc xchg das rclb mov (bad) mov stos dec (bad) fstl adc and js,pt stos mov adc (bad) jg jle xor fst stos icebp aam jno shrl std lcall nop icebp (bad) inc pop fsubrs sbb popa mov mov or fmulp add (bad) lcall push pop push arpl dec dec sahf push or ja mov (bad) (bad) (bad) mov faddl mov or fs (bad) pusha adc cmp (bad) pushl (bad) bswap and cmp test dec test dec insl jo add (bad) (bad) mov rclb pusha popf jl add and out rclb ljmp push push fcoms sub mov and fcmove call cld fist in ret pmulhw pop dec pop xchg and sbb mov (bad) decl lock inc ds sbb iret and adc cs pop and ss add cmc mov sub xchg (bad) ret cmp ret mov inc lret mov xor sub add pusha mov stc nop xchg scas cmpsb les sbb cmovb (bad) (bad) call pop ret or out jp inc fidivl inc bound lahf or (bad) (bad) (bad) jmp out cmpsl pop lahf sbb pop rorl fiaddl lcall (bad) (bad) incl ss push ss ss jecxz xchg pusha and incl int3 sub fisttp sbb rcrl jo mov dec sub inc (bad) (bad) (bad) call cld or jecxz sahf mov jecxz mov je or jmp cmpsb iretw leave stos sub (bad) decl gs outsb xchg adc adc (bad) (bad) jg sub fistl add inc test insb loop sub jmp ljmp cmp shlb leave jb out mov mov jo pop cmpsb (bad) (bad) (bad) jmp cmp cmp mov adc sub jnp cmp xchg ljmp xor dec into push mov lret in sub (bad) (bad) (bad) lcall mov pusha sahf out pop decl jo sub shrb pop js (bad) adc (bad) (bad) (bad) call pushf dec inc mov jl mov in (bad) dec push lods (bad) insb jb loop pop pop push loopne (bad) xor (bad) in incl push adc pop push je sbb jmp fcmovu orb push or adc cmp jp stc lds cwtl jno mov add scas (bad) cmpsb push std (bad) aaa into push in dec add cmp push pop loopne mov iret push mov out (bad) (bad) out mov mulb mov (bad) mov pop lahf mov ss push inc lods mov inc sahf adc rol dec call incl sbb mov ds shrl hlt popf dec (bad) cltd test lds jg (bad) (bad) inc cld mov xchg xchg push loopne push or fidiv jg mov repz add test (bad) (bad) (bad) (bad) fidivrl icebp mov jns bound rcll lret push imul int cmp xor icebp mov push stos xchg xchg (bad) test (bad) in xchg pop inc ds mov fldl cs xchg lods or inc (bad) (bad) lcall dec cmp cmp xor (bad) jmp adc jno frstor mov mov xchg inc mov dec adc imul dec (bad) (bad) jg lds sub (bad) jl mov test (bad) jg jne cld ljmp ds mov mov pushf hlt mov popf out cmp (bad) (bad) call daa push call jno aam mov xchg ffreep inc in push sbb pop test inc outsb out lcall push rep scas (bad) fisttpll push pop jnp daa pushf dec pushf or inc je push enter (bad) (bad) (bad) lcall mov sub jae push je mov or add popa scas test push icebp iret and sahf lret ret push adc ds incl les aam ret fistpll or xor xor ror jle scas mov ljmp xchg mov dec adc add cwtl inc daa cld pusha jbe,pt test outsl fldcw jno insb ds (bad) (bad) jmp jp or mov hlt movsl xor xchg ds lret gs icebp test lcall incl insl in push sahf enter adc adc adc daa stc xchg mov pop sbb (bad) dec inc mov test aam jmp jno dec cmc fcmovb mov (bad) jg inc ds sbb cwtl test pop and mov dec addr16 push loop and outsl add mov int lock push scas inc mov aam mov pushl test in mov (bad) mov inc fwait xor jne push stc out sub (bad) (bad) (bad) (bad) pushl and rcrl dec adc (bad) stos mov push push sarl dec or das push pop (bad) jg ljmp fisubr stos cmp inc sbb ficompl leave xor loope repz fsts fild push inc std (bad) (bad) jmp pop jecxz fistpl addl imul fmull xor jae jno sub (bad) jg inc ds mov jecxz jle mov sbb das and pushl xor cmpl hlt sub cmp aad in adc and mov cmc sbb (bad) (bad) call mov arpl cmp popf sbb dec or mov loop jg popf push icebp jg jae mov inc and test (bad) (bad) call jmp add daa xor add add mov push enter decl pop daa mov sub dec insl aam inc fisttpll sbb (bad) (bad) jmp aad jge and add js lea jbe loopne repnz sahf leave test incl ds sti arpl sbb mov cld inc jmp loop outsl dec push pop ficomp fdivrl pop (bad) push jmp scas xor mov iret push test push dec cltd push adcb ss cli cmc push lahf mov mov mov pop cmp decl mov xor rorl ficom fcoms dec (bad) jnp in adc mov jg ret xchg push fdivs dec lea adc dec stos sbb (bad) fsubs bound cmp adcl dec xchg sub mov test (bad) (bad) (bad) cmp mov ds adc out addl (bad) fcomip pushl gs or xchg cwtl fisttpl push push fimull movsl repnz (bad) (bad) call push cmp stos movsb xchg lds lods stos inc mov in shl pop gs mov repz mov mov (bad) decl pusha xor ret and lret (bad) cmp (bad) (bad) fcomip xor rolb scas outsl inc testb jmp test lods mov fwait insb ljmp ljmp (bad) (bad) (bad) incl mov mov in sbb jl rcll movb aam push sub fwait (bad) call pop push fistp ss adc push or cmp (bad) (bad) (bad) pusha outsb xchg mov dec neg fiadd movsl out or out ss (bad) mov and dec out arpl push sub mov (bad) sbb icebp (bad) (bad) lcall dec push sbb cmp test movsb jb or sub mov mov sar (bad) (bad) loopne push test (bad) sub xchg mov negb ret xchg gs xchg adc lret scas dec les leave ds outsl clc (bad) pushl fucomi push jmp mov in wbinvd stos lret push sub inc lds rol sbb fdivrl cli (bad) incl push xchg lret push nop push les arpl push arpl ljmp lret mov insl ljmp (bad) (bad) mov mov sub mov in ret int shl and adc repz shrl test cwtl fiaddl mov pushf sahf pop sbb rclb orl fiadd sub pop out adc push fcomps cmp cmp movsb push lret lcall or inc in lea inc cs in sub lods jmp fdivrs dec std ret dec jnp ds sbb pop movl mov push xchg push dec inc mov lods mov fstps fs inc mov add xchg (bad) jno sub scas adcb jb mov adc lret mov pop test add sub lea mov mov and (bad) (bad) (bad) decl cmp xchg mov in sbb es mov outsb adc mov push and pop lcall sbb arpl add mov pop jmp (bad) (bad) incl fldt and mov cs jo xchg insl (bad) mov mov (bad) (bad) (bad) incl in xchg (bad) mov mov aad jge pop adc ljmp jno (bad) (bad) (bad) call sub (bad) notl shrb xorl cs out lods es (bad) (bad) decl int3 (bad) sbb movsb cli mov mov sub push into and sar sub (bad) (bad) jmp outsl outsl hlt dec dec sbb add lahf xor lret sbb movsl jge sahf jmp js test mov or cmp test shll sub jnp pop js xchg stc inc lret adcb jp sti (bad) (bad) (bad) ljmp mov pop test lret add jecxz fimull (bad) (bad) (bad) cmp adc jno push dec adc dec sti lods push pop jb sub push (bad) (bad) (bad) incl sub daa mov mov or inc sbb inc cmpsl dec andl test (bad) (bad) (bad) ljmp dec ljmp pop aas push sub adc push fwait adc shr test (bad) pushl ficom xchg scas fldl lcall inc std jmp fdivrp (bad) (bad) call mov popa or (bad) in fiadd ljmp dec push dec dec adc push push (bad) (bad) (bad) mov inc push fdivrl dec cmc xor push xor xchg cld nop or mov cli (bad) (bad) dec in fwait in rol push pop sub inc mov scas stc mov push roll rcll sbb aaa aas rcrb daa in xor mov (bad) cltd and movsb fmull imul rorb sub jae jns iret xlat je aas mov inc imul shl push mov ret mov dec and sti pushf sub xchg lea (bad) (bad) (bad) jmp xor push pop test sti jmp dec insl fs jae enter out incl and sahf jmp lods pop loopne cmc (bad) (bad) incl adc mov out daa std lods js (bad) lret int or dec cld dec cmp add sbb icebp lcall dec push gs sub popa dec call sub inc pop test fmuls pop mov jecxz jmp mov orb cs in setae ljmp and pop or sahf ss ljmp push sbb push xor dec aas shlb mov dec sub pop mov (bad) lcall jns fidivl jne sbb jmp lret (bad) (bad) ljmp xor jns dec push and (bad) (bad) out les adc inc cmp cwtl test fnstsw (bad) in iret dec out shll daa mov (bad) jmp jl test pop fdivs push fwait cli aaa mov xchg inc inc sub (bad) (bad) incl daa test and and popf xchg stc popf sbb or std push outsl cmpsl test jo jae pop cld std insl xor xor pop enter cmpsl std mov and xchg mov (bad) cli (bad) cmp icebp ljmp mov idivb sahf inc aaa call jb iret sub xchg call mov or rorb xor cld (bad) jg inc sub jo icebp (bad) sub or mov ret cld pushl push inc cmp dec pop and aaa icebp and dec sbb das lcall das pop xchg sti xor mov xor cli or arpl je test cmpsl fdivs (bad) ljmp ljmp push fiaddl adc (bad) or (bad) cmp rcll and jmp sbb stos cmp (bad) (bad) decl or ret jg add stos icebp fwait pop push jne movsb int cwtl sbb ja (bad) (bad) (bad) incl mov xor fistp repnz ljmp loopne sarb leave outsb outsl lea (bad) (bad) (bad) ljmp aaa inc and subl sbb mov pop addr16 (bad) decl bound imul mov div add mov push and (bad) (bad) lcall xchg mov sub loopne lods dec and (bad) adc out mov xchg sbb (bad) (bad) (bad) decl in movsb es mov stos negl outsl sbb and cmp imul repz jle outsl andb sahf inc rcrb push sbb adc xchg cmpsl push cmpsb cmp mov fistpll mov xchg sbb (bad) dec inc daa add popf and jno push jp mov aam sbb add inc add push mov mov rclb incl int3 insb dec (bad) and jae stos js mov push or pop insb mov dec xchg xchg out sub mov shrl inc xor mov sub cwtl repz into or pushf int scas loop imul pop cmp xchg (bad) (bad) (bad) mov addr16 lods mov (bad) and pop aas daa rcll inc rcl inc inc inc cmpsl stos mov lcall pusha (bad) repz mov jl dec push sub inc pop jo xor andl mov fisttpl (bad) popf es bound fistpll outsb and pusha push mov sbb dec adc (bad) (bad) (bad) aas mov icebp mov movsl (bad) rcrl js mulb sub inc push (bad) in aaa cld push xor inc push dec aam lock inc (bad) jno repnz lock (bad) (bad) cmp es xor out ffreep jmp mov xchg decl (bad) mov pop mov into mov shlb pop (bad) (bad) sub mov sub js in (bad) jg dec xchg js sbb andb movsl jg stos inc inc (bad) and (bad) (bad) pushl leave arpl int3 and popa sub test sbb pop xor jae into hlt add (bad) std stos stos mov or fisttp mov fnop unpckhps movaps sub ds adc dec sbb xchg loopne lahf aad push lret js dec xrelease (bad) jmp xor mov aam mov lret lock cmp sahf or ja mov push iret ja mov stos gs dec testb insb stos lea jle (bad) add mov mov imull loopne fbstp sub (bad) (bad) (bad) call je je (bad) lds pop dec mov xchg xorl and mov in in sbb out mov (bad) (bad) incl add cmp xchg test movsl push fstl push pop insl mov inc and mov sub pop in adc out outsb out mov adc (bad) ljmp lahf mov sub (bad) mov jl pop add (bad) (bad) mov jbe out mov ljmp pop xchg insb repnz (bad) (bad) (bad) cmp aaa jns or scas mov xor shlb jb cmp in dec rclb sar inc nop jecxz sbb in jl inc enter mov mov adc (bad) (bad) jg rcl dec push ds jbe gs call data16 push xchg dec idivl imul loopne ss out xchg pop xchg sbb stos lock ret cmp lds mov outsb popf sbb sbb cmpb dec or push add fmuls mov test (bad) (bad) (bad) out mov les cmp cmp xchg fsubs inc clc xchg adc sub pop lret cli (bad) jae inc stc add adc jg sub dec mov movsb xlat (bad) dec (bad) and cmp repnz (bad) (bad) decl rcrb inc dec in push incl fst (bad) inc xchg out inc pop gs cmpsl mov scas nop pop inc cld (bad) lcall push lahf xlat pop ret adc xor mov clc jmp sahf add and sub jno loop cmp (bad) jg pop xchg ret push pop dec popf mov pop scas std nop push jecxz xchg (bad) decl or mov push xor push testl scas roll test (bad) (bad) decl fbstp xchg jno pop out std jne cmp inc inc xchg mov hlt icebp loope (bad) (bad) (bad) decl cmp xor fcoml arpl mov add xchg mov mov fwait or loop and mov rcrl fidivr (bad) (bad) (bad) ljmp lea mov cwtl sub xor and mov jg decl enter mov lret mov and and jg jg imul cmp push cmp dec adc fbld fsubrl or out add fadds cmpsb icebp lcall push pop sub iret sub dec lcall pop ficomp fildl cmpsb sub arpl inc or mov je cmc sbb subl pusha dec je (bad) mov adc jg cmpsb in or ds dec arpl xlat add push popa xlat imul lcall fmull stos cld imul int fisttpl adc (bad) (bad) (bad) jmp call addr16 sbb add out cli aad inc (bad) ficom pop sub call std insb mov push sahf mov incl imul std mov xchg movntq out inc inc gs push cmp (bad) (bad) (bad) decl in stos adc lret lret (bad) jle subl punpckldq das mov (bad) (bad) decl loopne das sbb add js mov cmp push push jns sbb mov fcoms call lret cmp inc sub xchg adc call mov or mov push dec mov pop pop shr push jge mov mov inc outsl mov mov mov xor sbb mov (bad) lcall fs sahf adc add pxor jno (bad) test nop jb adcb call (bad) sahf xchg mov adc adc movsl movsl (bad) (bad) (bad) std fwait les (bad) out fsubr jge repz test add dec scas (bad) inc stos (bad) incl cld test sti aam sub cmp pop outsl mov fildl jl icebp (bad) (bad) (bad) (bad) mov push xor or je stc notb pop mov icebp outsb std outsl sub sub lock ds mov and sahf mov bound leave lock out fidiv clc (bad) (bad) call imul in test je xchg sahf xchg jo movsl and fimull inc (bad) ljmp fcmovnu insl sbbl test cli ljmp or cmp fidivl lock adc lret das addl mov and (bad) cmp out ja mov sbb cmp jbe cmp inc (bad) mov (bad) mov mov sbb out ret fwait ja shrb rorb and int dec push mov jmp addr16 inc fisttpl or or sbb mov xor les mov (bad) call inc loope jl mov cltd xor call pop pop jge lret xor daa mov jnp out mov mov pop mov push cmc push jbe pop mov (bad) mov mov cli and or pop movsb repnz lret movsb inc inc (bad) (bad) (bad) (bad) lcall xchg lret adc into pop mov mov and and popa popa push incl sbb sbb sbb xor mov mov gs (bad) (bad) (bad) (bad) jmp test loopne and or les lds inc xchg inc sbb ljmp xor cltd sbb loopne mov (bad) fbld pop fdivp aas sti jg loopne add pushf popa ja mov (bad) (bad) call or pop fwait leave dec or bound lock pop les pop bnd call gs lret push jle and enter aad mov movsb mov adc lcall insl ds jne pop push sbb imul (bad) push pusha mov loope xchg mov sbb cmp pushf insb cwtl sub mov mov (bad) (bad) (bad) push lods movsl orl (bad) mov inc cld scas adc dec push fcoms dec inc fcmovb adc (bad) (bad) jle add enter scas out incl pusha (bad) (bad) call sbb fadds ljmp (bad) sub dec cmpsb lea mov jge aad inc test push movsb icebp orl scas mov push cmp and pop jg,pt jg and (bad) and (bad) nop data16 (bad) (bad) (bad) jmp add mulb call adc push dec and mov cmpsb pop jnp mov mov dec mov mov pusha adc sbb clc mov xchg mov xor pushl std test and cld mov hlt dec clc adc dec rcrl mov xchg and stos or stc movsl sub shrl fcompl push (bad) pusha (bad) (bad) (bad) (bad) sti mov mov gs xor pop cmovns mov jo pop into rcr push aad jg sub push and sub fistpll lcall scas (bad) (bad) jmp lret adc (bad) push jbe push mov sub shrl popa cld (bad) push cmpsb sub sti xlat lea mov lds jle je int (bad) (bad) jg mov scas xchg push jns jl lds hlt xor add pushl (bad) rorb dec jno push add jg iret insl add cmp out fnstenv xchg mov add push mov aad mov insl scas pop lock (bad) or sbb inc cmp test jle cmpsb sub (bad) (bad) (bad) cli and bound push xchg mov or mov mov dec add xor out or (bad) mov call mov sub ss push jb fs inc mov (bad) cmc cld (bad) (bad) inc cld pop xor adc sub daa loop outsl in cmpsl (bad) jno test dec daa adc jecxz (bad) (bad) call fstl arpl push xor or scas mov scas rcrl mov cmp rcrl (bad) ljmp xor int3 aad pusha (bad) mov (bad) hlt imul out (bad) decl fidiv lock fistp cmp dec cwtl int cmp dec xlat (bad) (bad) lcall ljmp fsub pop hlt mov fistpll ja (bad) (bad) (bad) (bad) jg popl and pop lock hlt push outsl pop sub iret stos arpl jno push scas cmc dec fs ljmp mov push xor push gs and loop cmp cli add push sub pop mov subl scas ds fs xchg or jb (bad) lcall iret push cs mov imul xchg or fisttpl or xchg adc push aad mov (bad) enter pop imul incl sub or cmp cli xchg (bad) (bad) mov push sub sub or mov and mov mov decl lock push mov xchg jge out fdivrl jl (bad) jg add cmp lret insl and les mov clc (bad) inc pop rcll or xor jbe fmuls jmp fiadd ret push inc dec aad icebp int3 and mov jae (bad) (bad) (bad) pushl lea out mov inc or add cs xchg cmc jl inc scas and mov (bad) fiadd sahf xchg or subl fiadd and sub in push popa js decl mov inc outsb jnp out jge stos subl sbbl (bad) (bad) (bad) pushl adc fnop jle push dec fimull (bad) sahf in or sub (bad) (bad) mov (bad) fwait mov jmp xchg or in (bad) adc into inc fidivl (bad) (bad) pushl int sarb xchg lods push test xchg fldenv mov jno (bad) inc and jle sub shr pop pop sub iret (bad) (bad) (bad) inc das lea inc subb inc push sbb fldt faddl cmpsb in jo mov mov cmpsb jmp sub (bad) incl fcmovnb fisttpl mov adc hlt push dec xchg jmp cmp incl jle mov xor adc mov (bad) call enter jne dec xchg xchg (bad) mov xchg icebp call (bad) mov dec sub sbb aad pop clc pop pop dec sub xchg fdivr (bad) (bad) pushl out enter mov leave cmpsb mov or test mul mov outsl out out call andl cmp mov stos xor add (bad) decl mov (bad) in gs rorl cmp cli xor (bad) (bad) jg pop hlt out cmp inc push xor mov sbb xor iret imul xchg and (bad) (bad) (bad) cmp fdivrs add push or addr16 into cli cltd (bad) icebp pusha aas mov jge mov insl (bad) (bad) (bad) ljmp push pop test inc sbb inc pop mov ja movsb (bad) loope movsb mov fwait (bad) (bad) (bad) out inc lret mov add cmpsb aam int3 movsb into das movsl call (bad) (bad) (bad) decl xchg add adc xchg loope mov inc adc mov cld xchg repz test (bad) out cli inc or jbe sbb adc mov outsl ds fldt stos (bad) lcall into mov or xchg dec mov and (bad) aam fcmovb pushl cmp leave outsl mov (bad) (bad) incl popa adc insb repnz scas pop outsb stos push sub popf jno cmc (bad) (bad) fimul mov jp or inc inc outsl sbb mov mov ljmpw xlat push or ljmp mov jno idiv xor xchg add bound and push mov mov test or inc adc jge pop and (bad) (bad) (bad) incl outsb mov dec fdiv mov jnp addr16 xlat insl pop loop (bad) xchg inc mov push ficompl in out (bad) (bad) (bad) ljmp lahf dec dec cwtl (bad) addr16 loope popa push inc fninit jne dec out pusha jl or ljmp (bad) decl sub mov jns ja push pop jno repnz jnp arpl aam (bad) (bad) ljmp mov push loope lcall je xchg dec bound inc mov pop inc sar (bad) jmp push ljmp and iret jl pminub fisubrl out cmc lret mov jl mov lods mov cmp rolb mov cld nop adcl dec jno (bad) (bad) dec add sub jecxz or data16 xlat inc jns jnp in adc add ljmp (bad) out stc sbb decb aaa ss sbbb (bad) mov in adc xchg pop pop movsb insl lret je (bad) (bad) jmp stc jo jge mov stos ljmp repz dec jg clc cli and call loop xchg cmp sbb fdiv push jle movsl xchg cmp (bad) xor lcall aas imul add mov lea cmpsb aas js insb in call cmpsb mov cmp mov or mov cmp cld or pushl sub adc fidivrl mov dec pop inc pushf out hlt and (bad) (bad) (bad) (bad) cld push and cwtl je xor mov pop and dec mov or daa loop pushf fisttpl pop mov and jle sub cmp imul das test (bad) (bad) incl cmp (bad) push lock arpl add es (bad) xlat jb (bad) mov in fcomp or (bad) (bad) decl mov mov xchg xor out xchg add lahf cli pop clc lea dec hlt xchg xor mov in or adc sar mov mov (bad) incl and rclb mov dec cli adc test (bad) ss movsb cmp cmc les dec or sub mov or mov dec cmpsb lcall shl jmp sub sub adc cli dec roll cmp (bad) (bad) (bad) mov lods jns punpckhwd (bad) inc sbb (bad) mov jno or mov movzbl push arpl enter sub fdivrl call cli cli fs pushf loope jg sbb jecxz cmc and movsl (bad) push ds decl lock and sti fstps mov pop outsb and mov mov lret and xchg xor cli (bad) (bad) mov lock das out fwait (bad) mov iret jg cmp pop sbb (bad) (bad) ljmp pop xchg insb scas or cmp xchg mov adc lock std in or mov sub cmp fsubp add xchg ret mov pop add (bad) je (bad) (bad) call ret push ljmp imul xchg addl lcall lea or sub lea sbb iret pusha pop or adc push addr16 xchg inc xor mov aaa das iret inc sbb sub aad aaa adc or decl int (bad) (bad) inc xchg pop hlt out mov decb cld jo push mov loope cmp aas ljmp incl cli jg or leave testl loope mov xchg loopne and dec and sahf (bad) xchg (bad) (bad) (bad) lcall xchg mov mov mov cmc imul ss and xchg (bad) (bad) (bad) lcall cltd insl xchg pop les adc lahf lea mov in xchg das mov test cli (bad) (bad) incl test sbb movsb adcb inc aaa jno xchg aaa ljmp mov inc (bad) incl ds push imul daa (bad) jne sar cld (bad) (bad) (bad) ljmp scas je and ljmp daa je out pop xor cmp sbb test (bad) (bad) incl (bad) fstpl xchg xchg std xor jg aaa in outsb aaa mov (bad) mov je jmp and or jecxz pop mov dec out sarb jmp adcl inc jg (bad) mov jbe outsb into stos adc (bad) or inc or lret stos lods lock ret adc inc adc xor mov (bad) xor mov incl and out xchg jmp fnsave (bad) (bad) jns xchg loop pusha pop push fmuls fistp (bad) (bad) cmp fiadd jmp mov push adc popa (bad) ljmp sbb clc or jne mov (bad) (bad) (bad) push jg lea mov jno int call (bad) je pushf into aam xchg (bad) sbb (bad) jg lock mov ds aaa pusha cmpsb test xchg imul cmp (bad) ljmp int fucomip cmpsl dec outsb lds jmp pop inc jne stos add aad add ljmp test xchg add xchg lock pop and (bad) (bad) (bad) decl clc cmpsl es xchg xor std (bad) hlt fadd (bad) into xor lock arpl (bad) (bad) (bad) cmp lock pop int3 in jne sbb repnz cmp ud2 jnp jl hlt (bad) (bad) push mov sub nop cmpsl or mov mov and leave stos stc arpl (bad) sti ljmp out aaa push in cmp cltd jmp cld pop mov (bad) jmp outsb fadd out and hlt sbb mov ja xchg lock lcall add pop insl fidivrl (bad) (bad) (bad) les iret popf pop mov in loop rolb aaa imul movsl ret pop jmp push jne cmc jb outsl push js and popf fimul in fldcw jl mov fistpl sub incl and push fldcw and jg daa rolb push pusha nop lret cli push mov jns mov lret out (bad) (bad) (bad) ljmp pop lock xchg outsb pop mov cli (bad) cs call (bad) push pop or aaa pop xchg cld mov aaa jmp pop aas (bad) push pop xor dec (bad) dec repnz (bad) (bad) (bad) incb jmp cmpsl xchg mov lock (bad) mov mov mov icebp xor lret dec adc cmp ljmp mov cmpsl and ret mov mov (bad) mov pop cs lea add xor (bad) aas jae scas mov pop cli (bad) (bad) (bad) jmp jnp pop roll movb jg mov push testl (bad) (bad) (bad) inc gs std out enter sbb fdivr faddl dec jne xor insl stos xchg out clc (bad) pushl ja xor test mov cmp fwait sbb push lret das or jae outsb pop adc sub adc fldcw push addr16 inc xchg sub (bad) (bad) (bad) mov mov pop imul mov add pusha and push cmp push mov sub sub in test pop aad xorb mov lcall loop and cli mov push testl push inc std (bad) call and sub shl das inc fnstsw dec xor mov stos jecxz (bad) cmp push iret imul into or mov mov (bad) (bad) out cmp jae enter (bad) (bad) push data16 push sub test mov into cmp or sub and (bad) lcall and dec mov lcall xchg mov (bad) jmp jg nop dec cmc xchg push out in idivl loopne jmp ds negb call arpl mov out insl adc int (bad) call add jge lcall fwait ss sbb or fsubs xor dec jl mov (bad) (bad) (bad) fild cmp aas cmp push fdivs xchg gs add mov push push pushf sbb imul test movsl lcall (bad) (bad) decl jg xlat enter sub mov jecxz jecxz pop or mov loope enter int test outsl out iret pop jae fwait dec cli arpl (bad) (bad) (bad) xor (bad) divb adc addr16 daa insl test push inc push aam cmp jg (bad) (bad) pushl inc mov mov fcmovb fidiv (bad) fwait jge sub negb xlat mov test aas lahf push clc inc pop adc xchg jp dec push in mov push pop dec pop adc movsb icebp rcr push push mov sub add and mov dec (bad) (bad) decl or xchg out shl arpl add (bad) adc pop cld pushl stc popa popa cmp scas fist movsl pop add (bad) pop xor jge (bad) mov jnp jp mov bnd fs sub cmp test jg add lcall ljmp (bad) cli mov fsubrp dec cltd xchg push stos add dec pusha mov loopne (bad) (bad) (bad) jmp std inc stos mov repz lcall dec sbb fnstcw (bad) (bad) (bad) incl xor das push and xchg adc or fs jge je (bad) (bad) decl mov mov inc stos pop pop push or lods mov xchg inc subb sbb (bad) (bad) ljmp cli iret push aaa out jg xor jl inc ja xor push test add lcall or dec dec push inc inc push fiadd xor ds decl or and dec mov cli push jl loop fs iret (bad) pushl rcr jle lcall mov lahf inc mov xchg xchg cltd cs movsl (bad) (bad) ljmp jle insb enter push aad mov or ljmp ds mov insb inc sbb sub adc (bad) (bad) jp pop shr popa sbb loope mov fs mov sahf mul (bad) (bad) fnstsw push sub xchg aam mov rcrl (bad) mov push push rcrb adc int xchg shrb in rcr cmpb lret lret aaa pop out lods movsl pop loope sti cmp jae (bad) pop aam cmpsb mov dec mov and jo (bad) (bad) call xlat jl adcb sti aad mov pop xor mov iret jle ljmp jmp mov (bad) add adc sub dec pop (bad) mov movsb add call ret inc int dec mov and shlb pop xor out (bad) ljmp inc cmp shl rcrb pop (bad) in out pop out push mov decl mov repnz inc stos fbstp enter cmp ja mov add cli add cld add pop jecxz (bad) add mov xor aam pop (bad) jg imul testb push inc mov (bad) (bad) (bad) (bad) ficompl push hlt cmp or push cli dec pop push or inc (bad) add pushf nop pop jl (bad) (bad) incl lds call lcall jns cld adc cltd les mov adc mov push aam xor mov in add dec mov pop (bad) sub or (bad) (bad) pushl push mov mov fnstcw int aas sub fdivrs inc jl jb fsubs leave hlt (bad) jno xor ss (bad) (bad) call sub mov not lods cmc adc mov cmc in jle (bad) (bad) decl mov outsl repnz mov adc (bad) fildl and cmc and sub outsl (bad) call push pop push pop (bad) adc ss (bad) jg adc dec dec adc std fbld daa lea decl test es jmp fbld mov mov sbb xchg cli (bad) (bad) call jp add pusha das pop sub stos inc addr16 hlt jge je loope std pop lret (bad) (bad) out xor and inc dec xchg cmpsb icebp push inc push adc adc les mov (bad) xchg les mov xor jg (bad) lcall stos adc test xchg mov lds push and mov or add xor in pop (bad) (bad) jg push fwait repz ja dec fdivrs xchg test jne rcr (bad) mov notb leave and adc jmp mov adc icebp sbb sub jmp pop cmc jge pushl or or mov test lcall arpl pop lret mov jae lock outsl insb movsl add jbe or adc or pushf jecxz jns decl ficom ja aam mov adc decl or out (bad) mov xchg sbb (bad) (bad) jmp xor mov add out stc sub cmp jecxz cld inc push imul and inc pop ss jne test andl pop std incl out pushf add cmc bound int3 ss call pop jecxz pop or mov add icebp xchg mov cld (bad) lods (bad) (bad) (bad) lcall mov sbb lock (bad) iret push sbb aad cmp clc (bad) call push outsb push xchg arpl inc lds icebp push sbb das cld adc test mov inc scas xlat js cs les mov xor jo jecxz jno push push sbb (bad) jmp ds sbb fsubs insb jbe shrl (bad) dec sub stos or jmp push cmp cmp push push xor (bad) (bad) (bad) call push leave sub hlt (bad) fucomi pop inc mov and fisubl mov pop test mov ja (bad) jo insl or adc push scas cmp test out cmpsl fsubr mov (bad) data16 mov (bad) (bad) jmp ss aaa jge enter test mov pop int3 je push inc sub imul (bad) pushl ficompl jbe jbe push fcomi sbb fstl mov (bad) (bad) ljmp mov scas and scas xlat fildll popf mov xorl mov sbb fs cmpsl (bad) lods mov xlat fstl mov fcos ljmp loop rorl cmc rolw xor (bad) jb push inc sub (bad) incl mov loopne or andl lret add push movhps or push lock dec repnz aas fwait mov cmc out and add arpl mov in call and xor or and push dec sub inc movsl sbbb ds (bad) pushl fidivrl sub lret in and fs fistp (bad) decl dec insl push xchg nop mov imull add arpl stos jmp decl dec jmp inc (bad) inc (bad) sahf (bad) or push scas shr push jmp iret push lret mov loopne dec loop insl ja,pt int3 aaa (bad) imul incl xor pop call stos mov xchg icebp cmp cltd movsb lods adc sbb jp or shrl mov imul jmp inc adc pop or or (bad) pop xchg mov hlt xchg cmpb jge and dec (bad) call stos enter pop adc add pop jg jne adc and (bad) (bad) decl xchg pushf roll mov pop push fcmovbe inc inc xor jp sub (bad) mov cwtl lret cmp lcall jo sbb insb mov cmp pop dec cmp aaa jge jg sbb in xchg jns push outsl dec jo cmp call inc pop mov adc inc adc sbb push insb aaa (bad) (bad) call pop add adc das jmp xchg nop jnp mov daa insl loopne leave fstps xor ljmp push sub xlat bound mov xor test notb inc and (bad) cli lock push xchg xor js out popa lret in xchg mov pop pop mov push (bad) (bad) jmp fsubrl fucom imul xchg inc mov pop int3 (bad) mov cmp (bad) aas adc xchg addl insb sahf jmp pushl cmp jl sbb jb cmp ffree lods dec fnstenv (bad) incl cmp loop cmpsb das mov pop jp add dec fdivr pop jmp fbld (bad) (bad) (bad) lcall push mov clc sub call fild lea inc push mov xchg or stos and adc nop push xor inc inc inc add hlt inc and pop std imul shufps stc xchg push (bad) (bad) call loopne movsl (bad) je out xor dec and lret dec out rorl jno mov or jb dec and cmpsl in (bad) pushl mov fldz repnz sub or xor lods cli rolb insl jmp dec in add lcall jp push jecxz (bad) (bad) (bad) mov lds clc push mov dec pop mov in push mov (bad) call pusha or adc cmp push stc inc movsb call lods inc lret jp fwait mov and lds push jne mov and mov or (bad) ljmp lea lcall xorps testl dec sbb fidivr imul (bad) jmp pusha stc (bad) jae (bad) fcoml inc mov imul and mov arpl push pop rcrb loopne cmp push call (bad) xchg pushf or mov sbb push or (bad) (bad) jg xchg outsb or sbb pop sti jo adc subl mov out (bad) (bad) lea inc in mov (bad) (bad) push pushf fdivl (bad) and (bad) xor lods jne fnstenv xchg add pop scas mov fisubrl jp ss fs sbb add or loop,pn lds xor mov lahf ds sub test mov lcall add scas mov jle add dec (bad) mov mov (bad) (bad) (bad) (bad) pushl inc imul xlat fld out jae mov sbb xlat fld (bad) jmp mov jle inc xchg and aad (bad) (bad) pushl mov (bad) and insl popf xor cli mov outsb icebp mov xchg iret pusha pop sbb cmp (bad) (bad) (bad) decl jns daa jno dec rcr sub loopne add adcl sbb cmpsb fbstp mov pop sbbb cmp fiaddl (bad) test push sub cmove faddp sbb add jbe mov (bad) mov out sarb aad mov repnz icebp call (bad) mov mov fiadd (bad) (bad) decl rcrl sbb pushf sahf pop pusha xlat sub push pop cli aad roll cwtl pop (bad) cwtl arpl jg push insl insl sbb inc pmulhuw aad jnp sbb ds or outsl pusha xor jb and ljmp mov cmpsl (bad) in mov int xchg push std or fisub fmuls cmc decl inc pop sbbb push aas jmp popf add pop xor or (bad) decl adc es push push (bad) (bad) push sbb movsl mov cs in inc std add sub mov push inc mov lret fcom popf jne sbb cmp lcall mov dec mov (bad) (bad) (bad) ljmp xchg ds div dec jbe lcall int3 fisubr pop pusha adc (bad) jp in jge dec jne and jb in loope (bad) (bad) (bad) fistpll mov inc popa rclb lock mov clc jp,pn mov add popa xor lcall dec xlat pop out xor fdivl ret cmp add push dec ds push xor loop fsubrs lods mov xchg aad outsl cltd (bad) lcall mov cmp mov imul insl sub or or (bad) (bad) push xor mov mov ljmp movsb or jle aam sub push fsubl and fistpl ds ss pop jmp cwtl lds inc xlat hlt icebp (bad) (bad) pushl and je add js dec shll jecxz jnp xor test int3 movsl loope test xchg jge jg mov inc cwtl dec cmp mov mov xchg or (bad) lcall sub shrl sti mov out clc adc outsl (bad) incl pop insb push pop lock or movsb out adc lret sub cmp jecxz ljmp lret mov push inc cmp ret (bad) (bad) jg xchg xchg pop fsubl cmp leave cmp stc inc mov mov dec test in out xchg add les repz xchg (bad) (bad) mov and dec pop cmp daa outsb in jb cmp lock (bad) (bad) (bad) ljmp mov pushf scas jmpw dec test gs addr16 inc daa dec pop (bad) (bad) (bad) inc mov or out mov mov dec ror and aaa lods xchg sub lret into leave gs std (bad) call loop fs jp xor add loope push pop cld jno (bad) mov mov mov adc into lock push jnp (bad) (bad) (bad) dec rclb dec pop in or xor insl push cmp (bad) mov inc into dec adc xor fcomip (bad) push fs jle mov pop xchg pop hlt or sub fwait lock fildll test add xchg aas mov or (bad) and (bad) mov arpl push push adc xor sbb mov (bad) incl mov xlat jmp fisubr sub rclb (bad) lcall aas cmp adc cmp add cmc push ja push mov movsl out insb sarl xchg jo sub (bad) cmp or scas pop xchg aad add jns jo hlt ret (bad) out jg test jge gs xor mov das adc sarl adc stos sub int3 out sub (bad) fstl ds adc insb (bad) call or pop pop lods sbb cmp or inc xor movsl fistl pop dec hlt (bad) decl aam inc jmp cmpsl dec cmpsl test hlt jge (bad) (bad) incl popf xchg pushf xchg xchg xchg jp imul pop test gs lods push xchg jae fcompl aaa test push (bad) (bad) lcall mov pop dec sub fildll or and test repnz ret daa xchg jno ss and inc jge fwait mov jmp sbb dec sbb mov int3 push sar (bad) lcall lds pop bound sub fsub stos mov jmp jge or pop cmp dec hlt insb and decl cmp push inc lret and cmpsl addr16 call inc loopne mov pop jno sbb (bad) outsb mov mov (bad) (bad) dec mov or arpl jmp fcomps cmpb inc rcr mov (bad) (bad) jmp inc adc push jnp cmc arpl scas push pop or sarl ja js xor cmp (bad) pushl (bad) push inc dec insb aaa popa mov xchg (bad) repz jb repz cwtl mov (bad) sub and clc ds lea xlat cmp je adc (bad) (bad) jg pop sbb fmul loope jecxz add adc iret (bad) arpl aam decl (bad) decl mov leave sub xchg mov ficomp mov cmp rep or (bad) inc int sub (bad) sbb into xchg jmp fwait imul bound (bad) dec push nop pop test push fwait ja xlat arpl mov insl lcall mov mov repz imul push popl (bad) (bad) ljmp or push dec cmpsb cwtl mov and sti outsl dec je idivl aas cmpsb aaa cld (bad) lcall stos fisttpll or adc rcrb loope xor pop jo clc (bad) jmp arpl data16 sahf push adc push jbe arpl lods pop (bad) jmp mov adc mov out fs mov test mov jmp cmp cmp stos fs jl cmpsb inc ds aam loope decb call xchg fdivs dec jb cmp dec mov lea push pop loopne adc popf (bad) jns lods (bad) (bad) (bad) lcall xchg inc or loop loope fwait inc mov (bad) inc aam sub iret data16 aad cmc (bad) (bad) (bad) push mov lahf faddl pop inc push loop adc mov push cmc lcall sub imul mov push loopne sub in lcall nop dec sub lcall or cmp inc int3 int3 inc ljmp pop adc or (bad) (bad) (bad) incl xchg es dec sub and pop aas daa inc sbb push popf mov mov push xchg arpl decl flds sbb sbb dec mov gs (bad) incl xor rcl sbb cmpl popf sar incl (bad) ja in cmp mov repz and scas clc or inc test mov sub lahf sub sub int3 push adc add mov fidivr xor pop (bad) (bad) (bad) jmp mov data16 dec paddsw sbb sbb out loopne or rcrl xchg inc jo adc add cld (bad) ljmp sahf mov fs shl data16 loop mov into pushf inc jecxz ja jns mov xchg insl fstl adc (bad) xor (bad) (bad) cmp mov pop mull cmp outsb test sub cli (bad) jg push xlat pop ficom ffree pop lret push call fld pop aam shll mov lret pop mov rcl sub lretw push push test daa jno or cli pop in mov jae dec mov aas scas xlat mov dec movsb add or pop pop mov lods (bad) (bad) (bad) ljmp jp jmp push imul clc mov push cmp add arpl test out xor push cmp xchg nop cwtl adc ljmp std and test pop and xor (bad) (bad) mov scas fwait and push pop mov rorb push push fs stos sbb outsl dec cmpsl (bad) (bad) (bad) jmp shll push fmul push test ret outsl xchg lret cltd mov shll push or add cld movsb mov imul fmulp out lcall mov test mulb imul inc (bad) (bad) (bad) incl inc push inc dec rsm aad xor pop cmpsb mov repnz stc pop and mov inc fucomip test sti jle (bad) lcall inc lret and mov jns aas jecxz jp dec add mov (bad) ljmp inc push pop (bad) mov cs or rclb cmp incl outsb das sahf sub jb jne mov sub int3 outsb (bad) xor aas xchg pop sub (bad) (bad) (bad) jmp sub pusha in nop aas or inc mov ds movsl mov jecxz adc fwait jnp or mov (bad) (bad) mov sub xor sub in or and pop ja loope popa nop mov test dec sub incl pop dec ds and in (bad) ds cwtl or (bad) (bad) scas bound pop mov (bad) ljmp pop mul or push pop dec jecxz in sti dec aas hlt jns leave mov dec dec push cmpsb (bad) (bad) jnp add xchg adc mov mov fsubl rcr ljmp pushl push dec sbb clc call lods arpl idivb imul sbb (bad) cmp (bad) mov clc mov dec cmp test mov mov dec aaa jecxz (bad) inc dec outsl cmp mov aaa mov ljmp mov mov pushl or adc stos push outsb jge jle xchg ljmp cli (bad) cmp lea scas dec pop cli pop push inc ss popa dec xchg jns push daa out (bad) (bad) (bad) (bad) lcall insb mov rcrl repz pusha es outsb pop xor hlt inc das cli and fcoml gs dec mov (bad) fstps sub roll jae,pt scas int3 (bad) stc pushf das cmc pop jle (bad) (bad) dec lcall or sub sahf roll dec sub ds movsl pop test adc leave arpl push and jle jg (bad) lcall cvttps2pi das inc push sarb lds arpl pop xor and inc (bad) subl jmp movsl pop sahf or add fwait mov (bad) (bad) jg int nop loope jae push cmc jp add lahf cmp xchg lcall (bad) (bad) pushl cmc push push inc adc jnp sbbb cmpsl (bad) jmp je pop jge wrmsr push test jmp lahf jge adc and outsl mov xchg sub cld fldl (bad) (bad) (bad) (bad) fdivp inc xchg add jmp aaa adc jns sbb fldz add xchg push cwtl (bad) pushl cld and movsb (bad) cmc jbe pop xchg and addr16 (bad) lcall (bad) (bad) (bad) ljmp dec pusha pop pop jp in mov jmp shll fprem pop xor pop push hlt or std (bad) call xchg jge popf push cs inc bnd outsl cli jg mov je xchg imul roll ljmp xor (bad) int and mov inc sti pop sub dec cwtl push cwtl fs fs in decl push stos pop inc dec fmull (bad) cli ret rcll add (bad) (bad) jmp addr16 jne xchg cli pop out add imul mov mov ss cs scas jno pop (bad) (bad) pushl popl incb xor mov add je xor iret (bad) pop incl int3 mov add repz out (bad) (bad) (bad) ljmp adcl xor (bad) jnp (bad) xchg inc push inc arpl movb (bad) (bad) jmp lds fs jae fisttp sbb repnz test (bad) or pop sar push stc lret xor loope (bad) (bad) decl fs aaa insl dec dec (bad) pop dec push dec jle inc mov push imul xor cmp sub inc dec bound repnz jg (bad) into or mov sbb ljmp (bad) ss hlt (bad) cmp xchg mov pop lret fnstcw setg mov stos jmp adc jmp mov sahf js loopne repnz sbb (bad) (bad) call nop or movsb lods pop cmpsb stos sbb xor sub and mov adc jb xsha256 out push outsl cmp sbb (bad) (bad) mov out sbb xor cld jne test sahf outsl sbb pop or in mov push fwait (bad) (bad) (bad) (bad) jl lret (bad) push jne mov test and and mov add (bad) (bad) (bad) jnp movsb bnd mov or adc and jns,pt dec enter sub mov pushl loope out fild hlt mov (bad) decl pop pop repnz ficom mov (bad) (bad) fstp push (bad) jo ss fwait aas les aam scas sarb dec sbb cs (bad) pushl jmp fidivr xor leave push scas jbe inc cld lcall pop (bad) (bad) (bad) ljmp pushf out aaa cmp imull test mov push lcall sub mov pop lret push sbb xchg test jg lods add dec (bad) (bad) and lret gs xlat pop popa (bad) rclb cmp mov ljmp lea mov repnz outsb aad push xchg bound xchg push clc ds (bad) in add push movsb les movsl test cs movsb (bad) lock jmp and popa lcall mov into out (bad) jl in iret stos and (bad) (bad) mov cmpsl push mov out sbb daa add repz call sahf mov loope add xchg ljmp test cmp repnz (bad) (bad) pushl es pushf mov mov push int testb mov test or fdiv movsl cmp je adc inc dec and loopne push (bad) xchg pop push cltd les (bad) (bad) lcall shrl rorb jmp stos and lret jb push jno cwtl repnz add pop jge,pt gs mov clc xchg adc pop (bad) mov daa mov and mov pop icebp or out ds mov fildll (bad) (bad) dec mov jl xchg insb (bad) add and or movsb jmp (bad) decl xchg cmpsl xchg mov push xor mov mov push inc jnp jg (bad) inc jb,pt xor incl loopne or jbe add test (bad) jp outsb inc (bad) ljmp add mov and addr16 cmp and test mov xchg mov incl lods cmp cmp mov insl or pop mov inc dec (bad) (bad) (bad) incl mov mov decl mov lcall mov (bad) (bad) dec push mov inc test lret fs adc sbb test dec and inc sub (bad) (bad) ljmp ficom mov push or rcl int3 pop push lahf (bad) mov adc pushl jmp mulb shrb add cmpl jl outsl push mov (bad) incl test shl fisubrl lahf inc sarl (bad) pop outsl popa jbe daa push xor ss (bad) (bad) jmp jo into sbb lods cmp nop stos js (bad) jo cmp cld mov xor stos (bad) cmp (bad) jmp (bad) cmc inc rolb push mov insl sahf jo mov aaa nop lcall cmp cmc xlat mov inc ficom jb (bad) (bad) (bad) cmp ljmp sbb or popf jmp shrb dec inc das push icebp out ljmp add (bad) or mov cmp ds test fimul mov (bad) incl pop dec cwtl push mov data16 pop jle add (bad) lcall add pop outsl jmp fcmovu nop icebp dec call lods sub lcall mov xchg and (bad) mov test jmp cmpsb jge (bad) (bad) (bad) call pop out loope (bad) and icebp popf or int test xchg pop aaa push dec sub (bad) pushl mov adc loopne mov jb xchg cwtl out jb inc inc bound mov imul popf push orl xchg fdiv fbstp les adc jp cmp jmp mov push adc cmpl incl ljmp daa jmp cld xchg insl jg,pn js lods cmp xlat cwtl addr16 (bad) dec enter sub mov adc pop cmc (bad) pushl mov xor mov scas mov sahf ret in lcall ljmp or push lods xchg fucomip and ds into mov rorl ljmp xor out imul mov out cli outsb pop scas push loope (bad) lcall add pop (bad) nop add sub xchg lret mov lods jae in out bound ret rcrb add fwait xchg scas hlt imul mov (bad) (bad) decl jg scas jne jo xchg cwtl fdivrl adc (bad) out sbbl sbbl jmp fidiv add xchg sbb cmc dec mov cmp fildl mov test in sbb mov cld (bad) jl inc in fiadd movsb cmp mov cld pushl dec jns cmc fsts in cmp lret mov (bad) ljmp push mov testb xchg fucom cltd fcmove or jbe ss sub aam jo and mov (bad) (bad) (bad) jg pushf test ret sar nop inc lock enter fstpt movsl or call cltd mov ljmp jecxz (bad) (bad) (bad) (bad) jp ss cmp xchg (bad) push inc mov fadds mov loope outsb and (bad) (bad) (bad) jmp sub rorb data16 lahf jl ret add mov push pop negl in xor inc or (bad) (bad) call pushf fbld sub (bad) mov ljmp cmp (bad) jo push (bad) mov add push sub outsl push fadd psrld cli bound pop jl fildl lcall sub rcrb fs jle xor (bad) dec and scas dec mov jb ja test lods fistpll (bad) or sbb and (bad) (bad) mov dec jae (bad) mov rolb xlat lods dec mov cmp sub (bad) incl jecxz dec dec sbb add aas rorb inc ds movsb mov xor or out or inc pop iret push mov jb jmp xchg aam mov xchg pusha pop clc dec sbb adc decl adc jb sub push (bad) in lret and adc call rclb and incl mov stc inc push push loop fiadd sub cmpsb (bad) inc mov aaa or xchg jbe inc dec pop sti aam mov (bad) (bad) ljmp sbb shl push or push nop or (bad) (bad) jmp sahf pop mov rclb fwait mov outsb lods loop sarl xchg (bad) (bad) (bad) (bad) ds adc adc xchg pop cmpsb (bad) pop lea or and jecxz cmp sahf jb wbinvd lods les jns sub pop jl lods into xchg daa push cltd mov loope lahf popa mov icebp lcall fdivl insl cmp mov push aaa aas inc mov mov ja inc (bad) movsl cmp or (bad) (bad) (bad) ljmp xchg pushf pop sub ret pusha pop dec mov mov push pushl test loope push mov xchg xchg sub mov push lcall ljmp orl scas clc call imul cli pop je addr16 fcoml rclb xor decl push test jb shlb (bad) mov add aam inc int cmp push out inc mov push (bad) (bad) jg dec pop lock xor mov iret (bad) (bad) (bad) lcall sti mov scas bound or dec (bad) cmp add adc (bad) mov (bad) ljmp icebp pushf enter dec xchg popa inc pop mov lret (bad) jg sub inc fcmove dec xchg mov (bad) xchg or mov mov call loopne aaa jnp mulb sub ljmp dec xlat cmp (bad) (bad) jmp pop or imul adc (bad) lcall repz sbb aas adc (bad) (bad) jmp jb aas pop xchg sbb sbb cmpsb ljmp push mov (bad) jo cli dec fisttpl or (bad) (bad) incl loop and faddl bswap mov push sub xchg lods fnsave cmp (bad) (bad) (bad) (bad) fstpt aas (bad) or xchg mov popa or jnp adc sub das lahf ffree (bad) (bad) jmp xor add (bad) sti xchg les inc inc jbe mov (bad) (bad) jg xchg xor das cmpsl mov dec insb pop (bad) push sub cld aaa xor mov imul (bad) (bad) pushl ret or xchg mov inc movsb fiaddl pusha add mov cld (bad) pushl mov dec or inc test loopne jnp cmp out add inc fadds pop fwait push nop lret mov daa out fstpt inc lcall inc jae mov stos fistl pop jge (bad) jno adc pop stos inc or cs imul lcall sub cmp adc cmp mov mov jae in mov lcall inc sbb xor or xchg xor into inc fstp outsl inc les movsl imul rcrl test call lcall or pushf push inc mov xor clc call int3 mov push xor push stos daa icebp ret pop pushl sbb mov nop jae arpl out sub fildll jnp enter mov fwait mov xor inc cmc std dec adc cmpsb (bad) decl push mov pop sbb (bad) or cwtl mov cli shrb sahf xor ljmp lods xorl or lret sbb repz daa pusha or or loope inc push idivl dec clc push mov and (bad) lcall mov or xor sub xchg pop stos cmp ljmp push test hlt xchg add dec (bad) xacquire cld jbe cs int3 mov and sbb clc rcll (bad) incl iret pushf mov sub add fbld cmc pushf jae (bad) (bad) (bad) push pop jb (bad) mov les insl adc bound sub rep loope scas or (bad) jmp (bad) (bad) inc out js rorl loopne push out stos shr daa dec icebp mov cmp mov pusha orl jecxz xchg and scas push mov push adc pop inc or ds cli cmpsl sar (bad) incl mov mov mov aad data16 rcl pop out and jg icebp push cmp sub sarl pop cmp lods jne stos (bad) (bad) (bad) jmp cmp insl sub lea aaa mov rorl lds (bad) inc mov (bad) lock (bad) incl into test sub add cmpb xchg pushf ret mov push mov lods out test jns paddd call mov scas push sbb adc pop outsl repz stos adc js pop mov push adc rol fwait dec clc jmp movsb pop int movsb stc dec jno sar (bad) (bad) lcall add inc xchg decl cmp sub popf sbb outsl jmp (bad) mov ds jo push push add mov push (bad) cmp call lods out inc add mov jbe push popa push ss add mov (bad) push sub inc popf les sbb div (bad) lcall stos sahf xchg or lcall add sti and bound incl test jg (bad) call pop sahf xchg or cmp data16 and mov test cld fldt cltd imul (bad) rcl xchg lahf (bad) (bad) (bad) pushl vucomisd push mov daa jge les (bad) mov sub xchg mov (bad) push jnp or repz jbe lcall jmp push popf (bad) ja movsb lret mov (bad) jl mov movb fdivp popa mov pop sahf repz mov (bad) (bad) (bad) call cmpsl add insb inc stos daa sub inc adc mov mov jl push push in cmpsb sub (bad) (bad) (bad) jl xchg lcall sub dec fisub lods int jge cmp jns (bad) (bad) (bad) out hlt ss push notb adc gs cmpsl mov scas stos or dec cld push gs xor pop lret cmp sub mov jecxz jg (bad) adc dec out mov dec sub mov push arpl cs pop and and mov repz loopne sub scas push push cmpsl sti ror xchg jl sbb or mov hlt les mov loope push sub popf sbb jl sarl xchg (bad) lods dec dec je mov pop fcomip (bad) mov dec mov jnp sbb in push dec sbbl mov cltd inc pop imul and pop (bad) (bad) ljmp add mov test pop lcall jo lahf xlat in dec sar (bad) (bad) call sbb mov daa lea dec test add shrl mov inc mov test fmuls cs andl mov xchg lea subb inc or sbb (bad) out cli incl jecxz mov xchg jle xor outsl das and insl scas es cld in ljmp and cmpsb xor insl jmp cmpsb mov cmp (bad) mov int push mov mov pop fwait xor cmp cmp out xor (bad) mov inc je dec out cmp add or cli (bad) mov out in in outsl pop mov stos ljmp or ds jmp jmp fdiv pop aaa pop sbb ljmpw jno sub push arpl mov xchg adc xchg movsl cld adc xchg cwtl aaa cmc (bad) (bad) fcomip fsubp repz mov stos in dec add dec pop or mov jp decl lret push ja testb faddl lock fmull (bad) (bad) call test pushf xlat or cmp mov es inc mov das imul cmpsb pop (bad) (bad) (bad) ljmp xor inc inc jge inc sbb in sub inc test iret imul leave (bad) (bad) jg xchg mov mov les lock outsb cmp pop push push outsl fdivr (bad) (bad) (bad) fld inc sub push xor or jp mov jno pop sbb mov xchg test imul xor (bad) (bad) ljmp inc lock dec xlat mov add jns push and jnp movsl pop jne (bad) (bad) (bad) fisttpll fldl jnp mov mov adc mov or in lds loop mov (bad) mov lods jecxz jle push dec outsb jns xorb lret (bad) decl pop jmp int push xchg loope sahf cmp and out sti insl lret adc pop lea pushl ds jmp (bad) pushl in xor xorl arpl mov (bad) aas ljmp push and xchg cmp js repz mov adc in (bad) incl xchg xchg je insl xchg add cmp lret outsb push pop mov pop or (bad) push cmp (bad) (bad) in mov cmc iret loopne sub mov movsb out mov and shll push xor (bad) adc mov sbb ret nop insl mov sbb lcall incl mov pop out hlt xlat pop les aam sysexit mov aaa xchg inc inc rcrl int3 lret (bad) gs (bad) (bad) lcall and cmp pop cltd xor cwtl mov xchg incl mov cltd pop push xchg jno mov stc mov jae icebp std push pop fldt int xchg faddl lods add ret aad pop mov mov add xor rcr mov sahf jecxz dec (bad) (bad) (bad) decl cmp sbb bound fisttpll adc jg addr16 fs (bad) (bad) ljmp cmpb push adc inc add mov pop jle pop test jge out (bad) (bad) ljmp ret test lea dec jle out jno sbb insl sub lea mov jnp ret (bad) inc xchg inc dec add jmp pop inc test in loope dec (bad) jg (bad) cltd imul cld les jle or pusha pop sub mov (bad) (bad) cld adcl pop inc jle xor test jmp (bad) (bad) (bad) call and xlat lret jp dec popf mov ret sbb xchg repz xchg push andl (bad) call add mov mov mov dec pop arpl jmp cs cmp push jge pop divb and jmp or mov imul (bad) fimull xchg cs mov lcall and repnz mov fmull insl enter (bad) xchg and mov ss (bad) (bad) (bad) cli pop add sub shr popa stos mov outsb sub jecxz loop dec ficomp incl les outsl xchg inc insb pop sbb cmp mov pop aas mov (bad) (bad) (bad) lcall rcrb sbb mov mov outsb inc sbb pop (bad) mov xchg xor jmp cmpsb (bad) decl adc int imul es lret mov pop jbe lret adc or outsl cmp inc and ja mov pusha clc outsl ss or test sub popa ljmp mov (bad) ficoml adc ss cs lcall gs test pop or mov jno and clc lods mov cmp (bad) push pop or mov call jae and movsb or inc (bad) jbe pmulhuw lahf and dec aad decl lods test hlt daa lea pop hlt andb and push ret mov inc inc mov or (bad) (bad) (bad) (bad) incl sbb out loope fisttpl negl jecxz and mov sub add (bad) inc xor inc dec cltd insl into orl add pop mov (bad) mov out dec inc mov fs or pop out jecxz pop test fs xchg cli (bad) (bad) cld fwait cmp out and jg sub sub lcall push ds mov repz xor fwait adc ss sbb cmp push cli (bad) (bad) call jo push (bad) pop scas or imul frstor mov ja jg,pt in mov xchg lods add (bad) jg andl pop jge aad push mov xchg stos mov mov outsb cmc mov (bad) lcall in and sbb jmp and mov and push xor (bad) (bad) ljmp xor test lods or icebp fisttpl dec adc (bad) (bad) (bad) call and fstpl xchg xchg mov mov rcrl mov cmpsb inc xor rolb insl push ds cmpsl inc data16 je scas scas mov (bad) (bad) jnp popa sub aam inc push in and stos mov adc mov (bad) fcomip ja xlat fistpll inc mov sbb dec pop (bad) (bad) (bad) jg aad mov xchg xchg out mov lods mov not lock mov adc sti (bad) push pop pop movsl nop decl cltd js or xchg mov adc in xlat cmpsb (bad) (bad) (bad) mov in push xchg and push push jns pop jg arpl das cli mov rorl test (bad) outsb in xorl loop aas (bad) mov (bad) (bad) (bad) decl xor xchg hlt (bad) jg (bad) mov cmc les jp inc ret into sbb add roll mov pop inc (bad) test (bad) ljmp inc xabort cmc pop aad cli insb jae pushf dec mov stc cld jmp (bad) (bad) (bad) pushl adc loop pop adc mov pop xchg lahf add adc scas (bad) xor push ss (bad) jg jb ss cld mov xchg jp cwtl dec mov cld (bad) mov jb mov mov cli popa jmp ljmp adc mov push mov insl mov jge (bad) daa divl popa (bad) and out or test ljmp xlat mov mov loope out (bad) mov pop sbb inc add (bad) (bad) fldt xchg mov fild lea ret out sbb mov (bad) mov test and pop lock jge and out push sub pop into clc (bad) call fimull dec out inc subl enter decl adc add outsl push in (bad) cmp icebp (bad) (bad) jg cmovs insb pop daa pop (bad) xchg push xchg pop mov and lcall movsb ds in push xchg xor ljmp out cmc sarb pop lods mov push pop sbb int xchg (bad) fbld lock cmp iret pop dec add mov xor push jnp ds sub nop lret mov pushl nop std or lret inc mov sub imul and jnp (bad) decl (bad) jbe sti leave (bad) sbb jmp rcl mov les push lea clc (bad) fcomip decl mov xchg out mov add outsb xchg sbb das push (bad) (bad) (bad) push xchg jge inc push out add ret push inc jmp push xor inc inc add aam inc pop clc into adc fstl scas mov stos js ret loope cmp pop xchg cs subb jb mov (bad) (bad) aas push int mov sbb mov lret dec repz shll das pop xor (bad) (bad) (bad) (bad) cmp xchg loope inc ret or jp sub imul (bad) jmp icebp xlat popa mov add jp out inc (bad) (bad) call sub (bad) jae add js test ja jl xchg add sub cld (bad) incl clc sbb mov outsl stos (bad) push lret cmpsl popf int jne mov outsl (bad) (bad) pushl mov or xchg jmp xchg xor jmp insb cli adc pop (bad) (bad) (bad) dec notb fwait or loope inc fadds enter call pop fild cwtl add les ds into add sbb test sar ret or pop fcoml ds (bad) decl inc mov add adc icebp mov and les or rorl fisubrl and js mov xchg lods fs (bad) (bad) (bad) jmp pop push xchg (bad) lret mov int3 mov fimul scas adc pop pop xor inc ds cmc (bad) (bad) jmp mov pop lret jge lret cmp in je mov fwait mov decl jo dec ljmp out stos repnz push jb negb lret mov push jo xor and inc push jb push (bad) (bad) (bad) mov ljmp dec jecxz jb cmpsl mov vmread or inc pop out fstl (bad) jmp sarl push xchg sub test lds push xchg test mov mov pushl pop clc arpl cmp mov lret ret js jbe out (bad) (bad) (bad) incl dec out lock and jnp dec popa pop (bad) mov pop aaa adc fiadd or ja (bad) (bad) ljmp sbb ja cmova jne addb sahf mov scas sbb or cs (bad) (bad) pushl inc clc lods inc or fsubs adc jmp lods insb clc sbb sub mov mov int aam movsb outsb mov sub clc fwait lock cmp mov add insb dec sahf jg leave or cld sar ljmp adc add fistpll pop push adc jae mov pushl je lods xor stc and inc pop xchg pusha xchg icebp fimul push pop push mov cmp cmpb mov (bad) (bad) scas adc pop mov jmp decl mov in sbb sbb popf (bad) scas mov and mov and sbb aas std lahf pop mov push xchg (bad) jae mov mov and jmp in test jno icebp mov shr stc gs mov mov add (bad) mov repnz sbb lahf cmpsb cmp loope cwtl cmp lods add (bad) (bad) call jns imul push out lock sbb cmp fs sub sbb popl (bad) incl (bad) rsm jecxz arpl scas sahf inc fcomip mov sub aam arpl movsb data16 cmpsb inc sahf pushl add fsts push dec xchg adc out cli (bad) pushl stc add lock pushf add outsl mov and into xor jp (bad) fcomip cmpsb mov mov or mov gs push ret dec inc or mov mov int3 sbb mov pusha cmp jbe lds mov std mov imul int xor inc inc or adc addr16 sti cltd mov addl add inc sbb adc sub mov jle or (bad) (bad) ljmp rcl ja popa (bad) in outsl aas jbe sti inc lods xchg stos jne mov stos lcall dec cli out mov popa add repz inc or int mov (bad) cmp call sub jno fistpll dec (bad) out sti mov push sarb pop out pop popf mov cmp (bad) pushl push lcall and sar rorl es std pop divl lret sarb shlb cmp cli push sbb push xor (bad) (bad) jg fimul inc and mov sbb lock inc imul push sahf gs addr16 ljmp fcompl sub jle adc xchg push lods pop fdivrs (bad) (bad) (bad) inc mov daa sbb les stc push xor iret jnp in jnp scas add adc addr16 lock incl aaa js fldl add dec xor sarb test fwait (bad) fwait pusha ds sub and xor (bad) (bad) (bad) lcall in and scas add loopne sar sub (bad) jne aam arpl mov mov lret imull xor add (bad) ljmp repz es out loop fisttp xchg nop push cmp loop out (bad) incl imul fisubl out inc or test (bad) (bad) mov in dec and fs push push lods mov xor cmpl push mov (bad) jl xchg mov inc inc mov mov dec sbb movsb pop inc int mov xor cld inc or (bad) (bad) (bad) jle (bad) push lock adc pusha imul jge aaa push xchg inc push inc mov fwait (bad) (bad) arpl lock loope fistpl or cld push cmc (bad) pushl cltd lea in jnp punpckldq push (bad) pop fisttp test or int3 push out xor (bad) aas mov sarb pop sub iret mov les rcrl nop sar ljmp pop scas jno xchg mov jecxz jnp (bad) (bad) incl jno push out scas (bad) lahf mov xchg add repnz (bad) out cli (bad) in adc mov (bad) (bad) jg push and into mov mov mov sbb pop cld (bad) incl ret popf push (bad) aad in add add cmpl jb mov (bad) xor dec cwtl (bad) incl mov hlt lret in mov cltd jp or jp (bad) mov fs jl call mov test (bad) (bad) mov icebp imulb sbbl sub aas punpckhbw clc (bad) (bad) (bad) out mov notl dec mov movsb out cmp sbb mov loope lcall outsl or mov std add lret call (bad) (bad) out pop div dec aas jp das and pop clc cmp pop push mov (bad) mov and movsb inc push xlat pop cmp sahf shl adc mov sub pop jp cmp (bad) (bad) (bad) decl pop jp and pop sub jo mov aad lea lret (bad) jmp (bad) cmp lea icebp loop add pop xor mov mov test pop std pushl fs push lcall cmovno push cmp (bad) (bad) (bad) dec jns cld sahf sub pop and inc leave sbb stc and mov (bad) cld cwtl int3 test (bad) incl jne imul xchg mov and movsl xchg mov (bad) lcall or rcrb or std int3 sbb ds movsl xchg hlt ja xchg (bad) (bad) (bad) lcall in sbb inc xor icebp lock jnp add inc cli addr16 push add (bad) jmp test cmp jge push test adc inc lods mull (bad) lcall loopne push and add xor xchg xchg std jmp cmp mov cwtl cmpsl xchg push or adcl xor sbb movsb dec popa xchg adc jecxz (bad) (bad) pushl xor sbb (bad) mov xor push mov push cs push ja xor fwait mov lret cld (bad) (bad) daa cltd add sub lods xchg mov xchg dec mov lods jmp mov or mov (bad) les insb cmp sub (bad) (bad) (bad) call aad call imul pop imul mov dec movsb inc aaa loopne (bad) call (bad) (bad) in push enter call and setl jecxz incl push and test mov or into pusha (bad) (bad) (bad) (bad) fbstp dec mov in fnstcw cmp das cmc jg or fs (bad) xor sahf add pop test xlat mov lea fstpt (bad) ljmp push pop outsb jmp subb repnz ljmp jno fistpll out dec pop pop scas ds mov push adc sub push (bad) xor vsubss adc (bad) xchg mov mov lcall sub sub adc (bad) cld jp push mov out or dec (bad) (bad) jg popa mov push inc ljmp idivb jno lret mov and push mov and aad (bad) (bad) (bad) decl xor flds xchg sub (bad) mov cs fcmove cs ljmp sbb inc cmp sbb xchg in dec loop jmp add pop mov xor or dec rcr and xchg mov repnz (bad) call xchg push enter popa or jmp sbb ja dec ret push pop push sub pop std and not ret jmp and insb dec and jg lods mov sub and arpl ret mov (bad) jmp cltd addr16 es lock xchg xchg push pop xchg lods sbb out push mov mov inc (bad) lcall cmpsl inc cli pop dec push mov fsub inc adc sbb (bad) (bad) (bad) ljmp adc jle (bad) call adc std out push or dec stos stos sbb xchg push std repnz (bad) mov jb,pt push mov bnd in pop insl jno mov dec movsl fisttpl xchg jge mov fs jmp cmp mov mov cmpsl xor xchg cmp ret ds outsb pop out add mov xor int sbb inc pop (bad) cmpsb pop fdivs dec int scas push jne mov (bad) (bad) decl jl out ss push stos ljmp sbb inc ret (bad) (bad) mov scas imul cmp dec fidivr orl (bad) (bad) inc mov mov sar addr16 scas cmp xchg das push aad test xchg cwtl scas (bad) mov (bad) jmp cli or (bad) iret mov mov add hlt mov clc (bad) ljmp jns mov dec daa xor inc jecxz cmp aaa pushl (bad) stc aaa pop stc lock xor jecxz push cmpsl sub ljmp (bad) aaa cld (bad) mov jmp test fisttpl pop insb adc arpl push ljmp int inc mov push cld push leave xor imul inc (bad) (bad) (bad) (bad) mov inc and ss inc dec scas xor lea cld imul (bad) jmp test cltd (bad) jmp adc (bad) (bad) fbld rep outsb dec mov lods movsb xor or fwait jl call mov cwtl pop hlt (bad) call pop scas mov adc push pop (bad) dec mov inc jne xchg fdivl (bad) (bad) call xlat inc les mov sarb lahf mov (bad) mov jno push out or or aad call push (bad) clc (bad) (bad) inc sarl add cmpl jl shrl clc and lods (bad) (bad) (bad) jg hlt clc jmp fs push cmp inc pop test hlt dec push sub xchg cmpsb lock cwtl shll call scas rol sbb ret outsl into mov je sub int and test (bad) (bad) lcall push shlb dec nopl ja ljmp xor ss mov dec and lock in pop subb bound dec or out jnp xchg jno xchg mov and cmp std lds int3 adc out push aas jae mov (bad) (bad) inc mov sub jmp sub mov mov sti mov in adc scas (bad) (bad) decl mov jl rcrl inc push add inc pop ja,pt dec inc cltd clc mov ret mov push adc adc push push ds (bad) mov add lcall push sahf adc xchg ss adc push jmp je mov inc insl or pop xor xchg mov cltd push popa repnz cmpsl sbb (bad) aaa call inc lea cltd ret push push data16 insb pop push inc pop add ds int aad jmp bound or fisttpl stos mov sub add jae (bad) call dec mov outsb dec repz inc inc out roll imul (bad) fldl aas sub out notb loopne clc (bad) ljmp arpl dec test fs test fist jbe push (bad) incl fidivrl sbb ror xchg pop aad inc mov (bad) (bad) (bad) pushl jmp sub jbe (bad) mov std loope,pn mov enter int cmp ljmp mov sub or (bad) (bad) stc lret mov adc lods sub les ret aaa leave ret movsb mov push jne cmp movsbl aam ljmp push pop push pop jmp fidivl cs sub and (bad) (bad) xor rolb (bad) jmp fldcw jns xchg adc adc ret mov nop pusha sub dec sbb sbb lret sub stos xchg lahf jns adc inc mov (bad) decl cwtl inc fidivrl out imul lock push pop sbb push scas clc (bad) decl xchg mov hlt cmpsl pop (bad) and mov loopne xor loope (bad) (bad) (bad) decl in int3 xorl jns push aas ljmp cmp jo popa mov (bad) (bad) incl or push xor fcmove mov cltd mov push cmpsb lret outsl in aaa (bad) (bad) (bad) incl (bad) jno sub pop and repz push sbb gs pop out scas sahf call movsl dec fsubs cmp jne add cs push pop (bad) (bad) (bad) (bad) mov repz mov cmp add lcall mov cmc pop dec xor dec dec cmp push and decl mov pop cmp repnz jb sar (bad) (bad) fistp aas xor test xchg cmp (bad) xchg (bad) mov pusha pop or cld push (bad) pusha jle call and packuswb jl xchg dec push fucompp js dec lahf cwtl mov aad dec repnz or call or popa stos sbb outsl iret cli push jg (bad) (bad) call push xchg out sbb shlb push call pop sub decl sar jmp ds adc dec xchg jmp outsl push lods loop cs xor xor addr16 xor jo movsb xchg (bad) (bad) (bad) decl clc in adc push xchg js inc sbb mov jne fidivrl cli jmp clc (bad) (bad) (bad) pushl (bad) (bad) jb mov jnp ljmp or lret in (bad) cmp mov incl pusha out and arpl ss mov (bad) decl inc fs adc jp roll cmpsl ss cmp lret cmp mov fs mov mov xchg sub add inc fadd dec push sub sub (bad) mov jbe mov jmp es loope (bad) (bad) decl mov imul scas fmull push cmp fwait inc hlt popf inc xchg dec hlt incl movsb (bad) callw push imulb (bad) and xor (bad) pushl mov cltd cmpsb adc int test jne mov mov (bad) decl add pop das stos mov pop stos mov pop leave pushl dec jmp outsl es scas out mov adc mov xchg (bad) (bad) mov lock inc xchg pop gs mov shrb mov ficompl push and cld frstor push int3 or inc sub test fist adc xchg sub add fcomip push xor aam mov and (bad) (bad) incl outsb add xlat shll int3 pop cwtl (bad) sub cmpsb insb xchg sub stos push (bad) (bad) (bad) inc (bad) cmp (bad) fistp imul pop lret pushf mov xor mov (bad) (bad) ljmp lods push xlat popf dec pop dec out js cwtl test hlt insb cmp mov add add inc add (bad) inc aas into push (bad) loopne add or das jg mov ja (bad) (bad) (bad) call (bad) jae mov loope jg loop jb mov out fidivl mov (bad) (bad) inc mov mov cmpsb or (bad) pop test (bad) mov out clc sub shrl out pop gs (bad) (bad) cmp add out jne daa lods cmp sti int3 dec mov dec repz jb (bad) (bad) (bad) mov sbb mov jge push fistpll xchg cmp (bad) ljmp fcmovnbe ficom shlb popl inc in inc (bad) cmp insb mov clc mov dec mov clc adc (bad) (bad) (bad) (bad) movsb xchg inc lock rolb data16 fiadd rol sbb ds daa jnp cld (bad) (bad) call pop aam pushf jge jmp xchg lret ljmp insl ds sahf outsb incb xlat in push fnop roll (bad) call fadds fimull adc arpl jne sbb xor scas clc cmp dec pusha popa adc daa lahf dec ret fisubr fdivrl (bad) (bad) (bad) out nop mov and stos pop inc mov push jg daa sbb lea lds cmc (bad) (bad) (bad) ljmp cli sub and or jg sbb fs cmp jmp mov sbbl jo add (bad) (bad) (bad) mov sub lods sub aas sub pop push jbe pop inc xor pop mov mov jne (bad) (bad) (bad) jmp dec and jg cmp clc lcall jae addb insb into mov dec (bad) (bad) (bad) (bad) ljmp mov in fcmovbe (bad) les or dec popa sub add fsqrt lcall lea pusha into aad push sahf rcl subl mov add out scas arpl xchg sub fcomip pop mov pop jmp rolb jo push mov test or stos shrl jge mov ja or scas sub pushf xor mov add (bad) and out cli pushl pop mov add adc push nop (bad) (bad) (bad) decl xor cld out pop or fldt std lock jp pop and jae cs int inc ljmp and stos inc sahf (bad) outsb stos popf add (bad) incl out sub aam xor stc pop dec add sbb xor mov call stos sub repnz and add mov push mov stos (bad) ja mov mov or popa xchg xchg cs in mov mov decl push add adc nop out pusha or imul rcrb sub inc sbb inc pop xor mov push pop push cmp (bad) incl mov inc cmp and mov push mov mov (bad) (bad) (bad) jle cs lods insb pop (bad) loope dec bound push add cmp movsb or enter and push stos aas mov jle addr16 iret add xor inc fbld xlat push mov dec jne adc repnz xor shll or sub pop scas mov mov ja hlt (bad) (bad) (bad) incl mov mov enter fadds inc and ficoml icebp fdivr (bad) (bad) push mov push lds fcomip sub dec popa adc adc push push hlt add adc xchg aaa arpl (bad) (bad) out ds std xchg lcall in mov sbb rcll push xor adc scas cmc push scas nop lods lcall cmc cwtl ljmp les or imul adc ds pop stc xchg cmc sar push xorl iret push imul es fs xchg sbb lods sbb mov fbstp fs cld in std (bad) and jecxz lock stos imul subl (bad) (bad) (bad) (bad) in out insl push ret mov or xchg xchg jnp bound divl imul mov cmc call pop mov dec dec xchg cmc push sbb jg mov (bad) (bad) decl mov lods ljmp push sub mov mov aaa sub rcl xchg (bad) out (bad) test ds repz or int mov iret lret (bad) call add or xchg push pusha (bad) mov inc aas push (bad) cmp lcall inc int3 xor pushf fcoms imul mov test add jp fcomi icebp pop pop pop sub rorl xchg (bad) (bad) lcall cmp jo testb (bad) pop dec lahf ret stos call push in (bad) push sbb xlat data16 push sbb (bad) fwait mov pop cmp cmpsb pop fmull dec sti cmp mov rcrl add jne lret pop jb push aam lods je lods mov stc or xor (bad) (bad) (bad) jns subl stc cs sbb adc xor or cmpsb rorb add xor dec (bad) (bad) (bad) ljmp idivb mov mov (bad) in xchg sti sub pop sbb inc movsl pop push test test (bad) (bad) call lcall cli in clc repnz sub xor sarb xchg sbb lea add add xor jbe pop push push pop inc or (bad) push (bad) (bad) (bad) call (bad) mov fistp sbb stc sub (bad) (bad) (bad) lcall mov mov pop xchg sti shlb leave outsb inc and in inc mov rol mov adc lods dec xor das clc ljmp das push out jbe ljmp movsl imul push or add jp xor outsb out insb mov aaa in ljmp addr16 arpl and pop xlat fadd (bad) ss aaa adc dec mov inc sub into xchg sahf in pop fbstp decl outsb ljmp jo pop (bad) leave imul (bad) jmp xchg jne mov cs mov hlt inc sbb adc imul add add es pushf imul or out mov cmp xchg daa jg fnop sbb cmp icebp pop mov jae sub mov lcall cmp imul (bad) call outsl sbb jns addr16 (bad) stos jge cmpsb or adc sub (bad) fstpt jp adc jg adc aaa iret dec icebp ficoml cmp out ljmp (bad) (bad) (bad) jmp dec ss or sarb into jo jmp sub nop cmp sar ja cli jae mov out stos rcrl cmpsb (bad) in (bad) fisttp jmp gs imul xor loopne sub sub (bad) fcomip movsb xor mov cli idivb add push sbbl mov (bad) pushl jns xchg and ror je dec les out ret hlt (bad) jns xchg push int3 xchg cmp ljmp stos int3 xchg mov push subl stc xchg ret lods xor rorb aad sub (bad) lcall adc push (bad) jmp call push inc clc lahf mov ret (bad) repz dec aad push fcompl add andl negl (bad) (bad) mov clc jnp and js movsb dec sarl push mov (bad) ljmp mov nop mov cli jb cmp push mov adc lcall push mov (bad) lea pop push mov jg shll pcmpgtb outsl cwtl in das xchg out cli decl pop inc (bad) xor aaa add call (bad) (bad) (bad) lcall mov frstor lcall out pusha (bad) adc imul xchg aad incb pushf cld mov and pusha xchg sti mov sub xor pop pop sub ljmp lret mov cmp (bad) (bad) lcall jbe dec sbb mov push cs orl lcall and scas jmp sbb les std dec dec cmp push pop sbb adc loopne adc (bad) (bad) incl fisttpl popf mov fdivrp popa xor adc fwait mov aad ja sahf loopne (bad) jg js loopne jmp or repz out shlb jne cmp (bad) (bad) (bad) pushl jg incb adc into jae inc insb ds xchg or mov je sub (bad) mov sub jb pop mov rorl stos push push push mov pushf pop ss sbb call push push lds xor push and adc sub rcrl fcomip (bad) pushl fwait cltd sub outsl (bad) jbe cmp lcall inc fist sti pushf (bad) lcall pushl mov out adc pusha mov movsl in cmc dec test mov (bad) jg inc mov add xor enter fldl popf fimul add mov es fucomip mov ljmp or or inc push fadds aam fnsave xor mov (bad) jmp mov mov repnz outsb push push mov or mov add bound pop (bad) (bad) (bad) decl dec daa mov iret out sti andb cmpsl sbb sbb sbb push (bad) (bad) (bad) incl hlt cmp mov in call xchg dec push repnz inc lret mov lock (bad) incl aas mov mov pop cli dec stos mov outsb repnz (bad) call nop sahf bound lds push inc pop call loopne jle sub xchg je or fmuls sub xlat pushf (bad) (bad) (bad) jmp mov inc add enter push ret xchg ljmp mov pop xchg rol (bad) (bad) (bad) ljmp mov roll inc lcall or subb ds or icebp test (bad) (bad) aas adc and or jbe lahf jnp dec call sub jmp cld decl lock cmp jp (bad) xor xchg push dec inc sar jg popa ds subb jge jns in jge movsb (bad) push (bad) (bad) pushl aam push jnp mov bound enter (bad) lea (bad) inc push (bad) (bad) (bad) lcall jg scas dec mov (bad) and pop fstpt pop mov movsl jns xchg sub (bad) (bad) mov and push sbbl faddp pop jmp ljmp das pop mov daa mov movsl and cmc jne decl outsb dec dec ja pop pushf add mov pop push fisttpl push arpl push cltd sti xlat sub push pop xchg and fwait jge mov ds or pop dec mov insb pop mov lds mov (bad) jmp lcall fsubr inc int3 fnstsw outsb sub ds adc call loopne sarb (bad) mov pop iret lahf test (bad) (bad) (bad) fcomip insb xor (bad) jmp xor pop dec and into xchg lahf unpckhps mov inc sbb sar lcall mov and test ds enter stc adc leave push (bad) (bad) (bad) jg xchg add sub lret aas fist jns aaa push pop popf push xlat (bad) (bad) lcall out notl dec mov imul sahf or jg inc push or ljmp adc jmp mov or fnop fildll cld ds (bad) decl in jae,pn inc outsl aad sub or (bad) (bad) (bad) decl sbb add cmp xlat sbb (bad) inc mov cmp int3 mov (bad) (bad) (bad) jmp sub pop jg fisubl pop or xchg xor push popf leave sub pop (bad) fimull pop (bad) incl adc aad push mov (bad) or cmp lea loopne rcrl jmp movsl pop pop sub add ss ret repnz dec push ret or xchg ja (bad) incl mov mov shlb and sbb pop ret (bad) (bad) jg sub arpl loop outsb outsl popf jo aaa push jg dec test (bad) cmp pop fsub daa pusha pop iret sub sub arpl loope or lods out xor mov mov mov (bad) (bad) lcall fcoms push mov cmp pop mov inc shlb dec xchg clc fwait std in (bad) (bad) (bad) call push add data16 pop cld push in mov addl add add (bad) (bad) jg jecxz or lds test in lods mov sub cmp data16 (bad) (bad) jmp mov add push pop (bad) push and mov ljmp (bad) (bad) call ja xor pop int3 mov dec add inc stc add add and jmp add (bad) in jp iret fmuls inc arpl out (bad) mov (bad) in sub jg lcall pop mov mov pop cmp sahf push mov (bad) (bad) (bad) pushl mov xchg xchg aas pop dec xor inc mov fucomp in sbb bnd or (bad) xor call andl pop mov push add mov fwait into (bad) (bad) mov sbb sub sahf hlt ljmp (bad) xor ljmp xchg jl (bad) jecxz mov (bad) (bad) fist pop loope out jae daa divb (bad) decl (bad) insw rolb jmp mov call scas jle pop dec lods and (bad) (bad) ljmp sub xchg adc sbb sub sahf push out sahf inc adc jl ds lcall dec sti leave xchg xchg mov shll push outsl movl outsl adcl out xor pop (bad) jge pop or mov (bad) (bad) (bad) call icebp mov in decl ds mov cwtl (bad) (bad) (bad) jg es add out adc adc outsl xchg pop daa dec pop sub imul or and mov shr ds inc (bad) xchg ljmp push adc (bad) (bad) (bad) incl outsl loope test mov jns fldenv adc fst xchg aas lods sahf int test lock scas mov gs sbb cmc fcomps jg cmp pop sbb fcompl inc (bad) mov jg cltd or push loope rorb mov (bad) (bad) in shrl iret xchg and movsb in aas repz mov cltd and dec add bound data16 (bad) (bad) decl (bad) mov sbb call pop int3 rorb xor push lahf icebp lods (bad) lcall mov mov jno inc jle push sub (bad) (bad) (bad) decl inc pop pop cmp aas rorl ret pop adc push xchg sub ficompl (bad) (bad) lcall loopne sbb into daa mov jnp add adc sub xor call hlt es movsb mov dec les je aas in push scas dec test (bad) ljmp insb stos mov into insl stos pop rcl mov xor fwait pop inc enter add adc pushl jmp arpl pop scas aaa dec je (bad) (bad) mov (bad) cmc xor fsubs sbb (bad) jg jg jecxz sarl pop insb fbld sub pop xchg pushf (bad) pushl std inc std in aaa rcl sbb push pop or (bad) mov mov (bad) (bad) incl pop pushf and in adc aad adc xor jne out int fcomip push or stos jge (bad) cmp mov lcall sbb jb mov cmp mov (bad) ja pop dec outsb inc mov adc pushl jns cmc sub inc in xor or inc mov adc xchg push (bad) lcall movsl mov in lret inc into int3 mov fistpl push das in dec mov (bad) ljmp in inc bound and gs push pop inc imul push push adc (bad) push (bad) (bad) (bad) call push dec addr16 xor mov inc sbb mov push test mov mov sub (bad) mov jecxz mov dec jbe sub inc jnp and fidiv out xchg repnz sti test cli (bad) pushl test popa ficoml ja adc jae ret out fbld inc ds jecxz (bad) (bad) ljmp sub sbb mov out aas cltd sbb dec loope je (bad) (bad) (bad) push cmp xor (bad) cld iret mov scas xchg int pop in fcompl lret enter (bad) (bad) (bad) (bad) fldt cmpsl (bad) pop mov sbb xor xchg sbb pusha push xchg jmp (bad) call gs xchg jbe add nop leave xchg sarb mov outsl (bad) (bad) (bad) decl cli jmp fs mov and scas stos ret or cltd cs jns xor lock jg and push incb aas sub es (bad) pop (bad) call mov add daa add (bad) inc jg (bad) dec out mov mov ret insb dec xchg js xchg adc mov (bad) (bad) (bad) dec mov dec mov sbb hlt xor mov mov or and scas pop popa xchg not outsb xchg aad aam mov adc add scas lret popa or cltd (bad) cmp jl (bad) jmp dec and inc and xchg enter jl (bad) (bad) jmp jns add jo insl cmpsl call imul push (bad) push nop stos xor (bad) call das fwait insb sub sub xorb cltd (bad) mov (bad) (bad) jmp insb outsl rcl clc add jmp jp mov sub cli fcoms mov icebp dec lea loop add (bad) arpl (bad) (bad) mov jae mov sub push sbb or xor pop fs (bad) (bad) (bad) pushl out popf mov or pop int pop push je rep add lcall aaa xchg sar inc cmpb or cli aaa sar fcomip pushl sub loop push ror mov push xchg lea jne aaa std call pop lea xbegin pushf add dec je pop cltd adc (bad) (bad) (bad) ljmp add scas jbe popf jmp (bad) data16 imul sbb enter je mov (bad) ljmp clc scas addr16 pop or inc mov dec cmp xchg push inc xchg out adc (bad) (bad) jmp repz inc xchg jne mov out fdivs ret push fdiv mov rolb sbb dec ljmp in xchg pop push rcrb call mov jp push xchg inc pusha dec pushf xchg pop mov data16 sub mov dec sub out mov sbb ljmp divb dec sub or mov (bad) (bad) mov mov inc insb in test mov lods or push mov cwtl inc mov (bad) (bad) call loopne cltd pop cld nop icebp sub (bad) jb sub mov cmp call push (bad) jne or mov mov (bad) mov add mov enter call loopne sbb lods or mov or inc ret sub xlat and sbb hlt pushl ljmp xor mov push dec jmp xchg mov (bad) (bad) incl xor sub mov mov lods pop (bad) or adc (bad) xchg jb hlt sub mov ljmp pushf xchg in aaa or shl in lods in shrb lret lret lods cmp or (bad) incl push into out or inc push and sbb inc mov dec (bad) (bad) (bad) call les push jo mov mov movsl push inc push lods or mov and idiv (bad) (bad) pushl stc bound mov push pop pop jge (bad) sbb outsb xchg or fwait out cli xor (bad) (bad) inc adc std lret scas sbb or mov mov inc and (bad) (bad) pushl out xor push int3 insl pop cmp push xchg xchg push rclb (bad) jmp adc orl lea pop loopne push jmp setae push xchg sbb cmpsb cmc (bad) (bad) (bad) incl pusha jp movsl mov hlt and mov mov sti pop mov mov inc hlt mov sahf inc lock (bad) mov dec xor jae cld adc adc xor ljmp mov push mov fwait pop in pop sbb outsb mov out test lcall int scas lock push mov jge cli lahf xchg or sbb lret imul iret pop insb or mov xor idiv push pop hlt jl sahf (bad) dec mov cmp and adc push popf imul (bad) incl cmp or out push mov (bad) ljmp data16 adc sub add ljmp (bad) jmp shl (bad) push (bad) inc ret and test mov (bad) and test (bad) (bad) decl inc mov mov into mov jmp ja daa xlat and xor (bad) pushl sub je mov inc push int3 popf cld pop add mov into and pop in pusha cwtl out (bad) (bad) (bad) lcall jo out dec sbb push add into int3 pop lds or (bad) dec (bad) decl pop enter push (bad) hlt jo push jb stos test clc sbbl int3 inc outsl ljmp std in fcomip pop loopne enter lahf scas arpl xchg jo jo xchg adc rep gs punpckhwd repnz loope (bad) hlt inc insb add (bad) call (bad) into roll or (bad) pop rolb sbb dec jne (bad) push ficompl or outsb in lcall (bad) (bad) (bad) jmp add insb push inc push mov shrl sub and mov (bad) (bad) (bad) pushl cmp mov lds pop in add and xor ja test (bad) (bad) (bad) ljmp repz cmc jne mov lret xor pop xchg pop or das jno adc cmp pop es mov mov sub decl push pop mov mov pop hlt or (bad) pop outsb mov les enter stc icebp icebp sub lcall pushl cld out jbe clc mov pop mov movsl ret jl (bad) cmp and pusha js mov add xchg or das cmp and jmp std jge add call pop xor xchg imul jg hlt jg stos sub insl hlt jmp push adc loopne cmpsb iret mov (bad) (bad) (bad) dec dec or fstpt pop inc imul dec leave add fisubrl ljmp lcall aam js imul fcmovb (bad) faddl push mov jno mov (bad) (bad) (bad) call mov into push inc test sbb icebp xlat pop (bad) out push orl int3 or (bad) pushl cld test cmp adc dec add inc xor subb (bad) (bad) (bad) jmp ret insb or inc jo sub sub sub lods xchg dec clc (bad) ljmp cmp xor lock in (bad) xchg outsb dec dec pushf cmc (bad) jg push roll gs insl mov call xchg mov addr16 or not sbb imul movq (bad) repnz and loope inc in push dec movsb pusha cltd xchg (bad) das es and and cmpsl arpl stos mov (bad) (bad) jmp mov in cwtl test xchg mov mov push (bad) out call imulb add (bad) fisubr (bad) lcall sbb adc lcall mov icebp loop jns scas int3 sbb pop pop stc ret (bad) call sbb adc cmp jge mov add adc inc (bad) sbb lds xchg lcall pusha fistp cmp call or inc (bad) sbb pop adc xchg cli and mov push push into (bad) lcall mov push inc or lret mov jno div or std fistpl insl jg (bad) ljmp and ret mov jl rclb sbb idivl cld inc addr16 (bad) (bad) pushl jl leave std or add mov add xchg test in pop lcall lods popf (bad) mov inc shlb inc push rolb sbb (bad) lcall mov xchg leave andl pop stos stos cli mov rorb pop xlat cmp xchg push sbb jne pop jae jp gs jp rol incl sti scas xor (bad) ljmp mov lods add dec or jg cmp sub pushl mov daa sti push dec dec je dec cmp or addb mov out clc (bad) (bad) fisttpll mov (bad) and lock dec xor sbb (bad) (bad) (bad) ljmp inc mov lret xchg orb adc xchg aad sbb lock aaa cld (bad) jmp (bad) lret aas sbb inc sbb sar sbbl add or in adc insl push lea sbb shll or add and es into (bad) (bad) out cli mov add invd mov xchg ljmp jl fnstcw (bad) (bad) jmp ljmp xchg or and xchg addr16 push cmp mov xchg or stos xchg mov clc inc add out sub cmp inc lcall cmp add mov mov adc mull push inc push sar in adc pop xchg sahf jg (bad) pushl dec hlt leave xor int sub pop out addr16 dec push stc (bad) ljmp dec and iret cmpsl adc or jne into jb sar decl sbb loopne push cmp push inc shll (bad) (bad) incl mov add sbb and push insb clc nop lds push push and mov hlt mov sahf arpl xchg testl or dec cs mov mov and pop fs or sub fisubr lods movsb and mov scas cld mov mov push jae fnstcw pushl mov insl adc adc xor xor (bad) mov or subb fndisi(8087 and sub test (bad) (bad) (bad) call pop mov fcomip mov add and out add pop pop lods dec xchg adc lcall ljmp arpl scas jnp jle cmp push and pop scas sar fisttpl fnstenv (bad) (bad) jmp shrl scas lock (bad) adc aas fstl jmp or loop mwait mov fistpll pop sbb ficom mov inc (bad) out xchg ds rolb rclb cmp mov or pop pop mov negl out push push stos test xchg dec pop dec jp loop pushl xchg je cwtl movsl pop test jg clc inc mov or (bad) (bad) ljmp push (bad) je or jns inc cli daa inc adc pop push loop mov xor test xor ss (bad) sbb lods (bad) jge sbb ljmp cld pop xor clc cmp dec mov mov ss pop (bad) (bad) incl sbb pause dec xlat mov mov or xor out jp test pop aaa sbb pop outsb mov mov xchg insl gs cltd mov mov inc cwtl jge xor push (bad) (bad) (bad) in push add cwtl pop sub fisttpl (bad) xor xorl (bad) (bad) jg fistpll push mov mov out or mov mov (bad) (bad) incl insl loopne ja xchg test pop inc outsl mov jno xchg gs pop mov int lea sub (bad) mov (bad) xor lock pop mov cmp lret mov inc call sbb pop addr16 adc test mov test pop xor popa lret or pop insb and clc pushl ds clc andl fstpl cli (bad) (bad) jmp scas cmp ffree xchg (bad) sub fldl inc mov mov (bad) ljmp cmp inc fsubrl pop fucom sar stos jge mov push popf add add mov (bad) (bad) jmp mov in out jmp push movsl xlat jnp inc push aam popf test in movsl (bad) (bad) (bad) (bad) cmp xchg cmp dec (bad) jp das push jnp rcll pop cmpsb mov (bad) (bad) (bad) call jnp neg (bad) sub jmp pop adc fldenv insl addr16 xchg ret icebp (bad) (bad) pushl jb lcall out js int pop sti das pop cmpsl les jecxz lcall mov cli cltd (bad) ds inc inc xchg rcrl add (bad) incl or popf jbe pushf xor (bad) fxch js popa mov aaa mov lcall loop test jle push (bad) (bad) mov es das subl adcl push pop inc cs (bad) (bad) (bad) incl shrl das cmpsb mov ret out test add mov sti sub (bad) inc sub outsb adc loop fcoml decb lds inc push inc fnstcw jl jnp incl or out enter test mov mov xor mov or imul negb mov (bad) push daa (bad) (bad) pushl mov nop xor leave jecxz (bad) mov mov mov and incl pop sar cmp adc shrl add out mov cmp cmp hlt jg (bad) (bad) call mov stc sbb pop dec testl mov push and jmp addr16 (bad) (bad) (bad) jg mov movsb scas mov inc call icebp int3 or pop pushf cmpsb pop xor ret pop into push mov lret push jecxz mov (bad) (bad) (bad) cmp lret lret ds and lahf sbb lds xchg nop repnz lret hlt test lds ds push cmp ficoml mov enter mov jnp mov (bad) add and test (bad) call sbb cwtl shrb mov inc out mov lret insl sbb sbb (bad) (bad) ljmp jge lret ror iret in dec sub ret jns push add push add sub lods out lods les mov in pop pop negl mov sahf cmp cwtl loope inc jno (bad) call lock sub push nop cmp scas adc cmp jo jmp (bad) push pop mov xlat xchg lea bound mov jo sarl sbb lds inc (bad) (bad) jmp pop mov jne mov aas or (bad) mov nop jmp (bad) (bad) jmp lods xchg xchg aad ds mov ret ja hlt faddl mov jnp jg add jb mov (bad) ficomp jg mov add ljmp adc push rep shufps or jge add adc fistl and mov (bad) fisttp orl ss call xchg aad je cmc mov ljmp mov ljmp nop mov faddp lods inc pop cltd inc pusha bound inc cmp pop add mov movsl sub les (bad) (bad) decl mov lcall mov pop js ljmp int3 (bad) repz inc sar (bad) incl add adcb jbe add xchg add movsl mov jle test pop rcrb dec add outsb or add xor xchg push push ficom fdivr call cld push pop es imulb adc jl mov aam mov (bad) pushl subl push fisttp or and das pop call data16 mov ror jl (bad) cmc fabs (bad) (bad) (bad) out outsb pop hlt jge pop pop mov arpl add inc xchg xchg insb fadds mov clc mov repnz int3 mov (bad) (bad) call adc sub mov iret lahf inc dec es ljmp add out sbb dec push popf bound idivb ljmp and jge adc scas xchg cmp xchg lods (bad) (bad) cmp cmpsl fisttpll addb mov dec jg (bad) jmp aas mov push pop sub ja xchg clc shlb add ret mov sbb (bad) (bad) ljmp add arpl loope clc cltd ja jbe fbstp out les mov dec loopne ljmp jg mov addr16 adc xchg rol cmp (bad) (bad) mov lret inc sub sub cld or imul pusha ljmp (bad) (bad) out imul and hlt scas fidivl sub rorl (bad) (bad) hlt jbe or or cli test (bad) (bad) jmp adc fbstp sub icebp dec int3 adc fwait test or stos inc add jno pop (bad) (bad) (bad) pushl (bad) push popa or ja mov in xor sarl jb inc jb jns adc mov fwait add xchg arpl (bad) pop test decl pop stc (bad) xor pop pop (bad) rcrl in in ret push adc dec repnz addr16 and (bad) (bad) ljmp inc cmp ret mov or or aam xchg ret cld mov ret iret cmc (bad) outsl clc decl shrl (bad) (bad) outsl mov pop push andb add testl (bad) (bad) (bad) call repz inc and sub std push sbb pop (bad) (bad) (bad) dec xor sub mov fs mov cs sbb push and jl fcomip decl mov js jge push dec enter inc daa ss jae mov (bad) (bad) ljmp xchg repnz xchg stos push in aaa xor xchg xchg add ret aaa fisttp (bad) into (bad) (bad) (bad) jmp call cmp popa push dec xlat pop (bad) pop out add popf jp cmp repz roll cmpsb mov mov sbb jge dec cmp mov (bad) jg lahf xchg mov and fsubrl xchg js in sub aad lret pop gs jmp cli (bad) out shr jnp jp,pt js (bad) mov mov and mov std adc (bad) lcall dec push add jge jbe push mov icebp xchg insb (bad) push repnz add add mov loope dec jb imulb cld xchg vpacksswb mov clts test in das fs cmp and decl lock jbe mov jb fwait cmp mov xlat adc (bad) (bad) (bad) (bad) in jns pop popa ds mov fistpl dec sbb in mov lds mov (bad) jmp jle mov pop (bad) or adc (bad) ljmp dec fmul xor cmpsb adc sub fucompp (bad) (bad) (bad) lcall ljmp mov and xchg mov xchg sub and pushl fwait mov cmp mov (bad) in push es (bad) mov and lds xor or jmp jmp je test push je outsl pop mov xorl lds (bad) (bad) (bad) fistpll repnz mov inc adc jp pushf inc int3 scas mov out mov sbb test inc ds in loop add xor mov call mov cmpsb (bad) (bad) decl stos int3 dec adc mov adc shr add in (bad) ljmp sbb inc push adc jbe cltd or jnp xchg mov inc sub int notl cmp add lret call (bad) shlb xchg inc mov xchg dec sub (bad) (bad) jmp sbb lods lahf jbe dec test (bad) movsb add sub cmp inc jno inc add subb pop dec shl lea jg adc push movsl cmp aas mov lcall hlt cmp test dec call std jmp add hlt mov outsb mov jmp sub (bad) (bad) incl mov out inc (bad) mov negb or loop iret sub imul cmp scas xchg mov int imul repz mov jb xchg dec pop mov mov stos lcall test mov inc (bad) (bad) (bad) lcall popl add xchg dec jecxz test jno pop inc inc lea scas lea push jb or adc (bad) mov push imul out fmuls mov sbb push pop icebp mov mov pop ret (bad) mov fmull repnz lods push sti push fiaddl dec xchg push dec (bad) call fwait xchg in pusha jo jb mov repz in in aad (bad) (bad) inc loopne (bad) scas cmp bound fisub mov ret inc imul ret (bad) (bad) lcall fmul mov test jg cli xchg sbb roll adc fcomp and incl setne and (bad) (bad) out adc adc mov add jmp adc pop fs adc fcmovbe (bad) (bad) (bad) decl jl cmc pushf cmc jno (bad) or scas (bad) nop xor test popf enter movsb fisubrl (bad) (bad) js jle and pop (bad) push imul or jb cld mov bnd sbb mov (bad) (bad) jl adc pop int push jg mov inc xor pop mov cmpsb cmp add push out mov sbb jae mov add cmp or popf (bad) dec jb cmpsb fwait xchg dec movsl int3 scas sub xor inc ljmp (bad) incl cmp mov lcall outsl scas push sbb add fmuls fstps or bound (bad) (bad) (bad) jg hlt jle adc mov dec test push mov popa adc jno lret icebp pushl and jecxz dec pusha xchg (bad) lcall sahf mov hlt fsubrl addr16 call add stc push pop cmp jecxz mov pop (bad) mov fiadd sbb jae lock pop js icebp xor xchg inc (bad) jmp fs je mull or pop add jp push and je adc repz xlat mov ljmp add dec xorb (bad) icebp inc clc inc adc pop xlat mov inc (bad) (bad) decl mov inc lahf pop shrl out push mov push idiv (bad) (bad) (bad) cld clc or repnz (bad) lods pop sbb sbb fsts dec fwait push xchg clc (bad) incl test ds jo inc push mov pop sub pop fiadd insl aam xchg pop clc mov mov sbb xchg or (bad) out cli add jle xchg divb insl xor pop shrl ss (bad) (bad) (bad) decl mov sub lea cld pusha in dec fwait pop sbb fwait adcl nop repnz call pushl lcall xor push jae xchg lods addl sub jae xchg outsl xor and (bad) incl xor pop push ds out pop jnp pop pop lods arpl les popf push repnz inc cmp jb,pt btr pop xchg movsb in mov enter mov aam or dec das jnp loop cmp pop adc xchg push outsb cmp xchg jmp les bound (bad) daa or fstpt mov or sbb (bad) xchg fisubrl pushl pop jle add jnp adc push data16 (bad) (bad) ljmp or sbb es lea xor xor jb (bad) cmp sbb imul repnz inc mov jecxz mov add stos idiv inc pop pusha popf dec add aaa std inc ss pop pop xchg sub fwait pushf add push add mov inc (bad) je lds xor int mov (bad) clc xor adc sarb lods das mov sarb jo (bad) jg popa gs lods push mov out rclb mov ja in (bad) ljmp add jns out sbb lds and scas (bad) pushl lret xor xor outsb icebp cltd cli notl xor lahf lds jecxz data16 mov (bad) mov lcall in add push popf ficoml (bad) (bad) mov mov lock dec cld lock repz jbe inc js test cld (bad) (bad) push sub sub dec adc popl adc add dec mov push mov mov or push ds mov xor (bad) cmp sbb sub sub adc mov out mov (bad) mov rorb addr16 test mov loop pop std inc sub dec lock jns iret imul ds (bad) (bad) fildll jnp,pt in fcomps mov je and add arpl rorb jmp (bad) out xchg lea mov in or mov sbb push (bad) (bad) (bad) call push (bad) cmpsl (bad) shrl xchg rolb xor cmc inc hlt outsl daa jae jl nop jo adc mov inc mov cmp xor sub mov sub pushf mov mov push lods add sbb scas mov ficompl in adc pusha mov aam push sub (bad) (bad) incl std pop jae and scas mov mov (bad) adc mov in lods add (bad) (bad) (bad) cmp push jecxz leave dec push cld jg jp movsb das fstl dec jo orl lods clc lahf inc (bad) (bad) (bad) push mov jae scas pop bnd mov icebp xchg ljmp in cmp sbb ss imul cmp scas add mov in mov ds bound inc inc ss test aad pop std sbb and lock push fbstp cli (bad) jns icebp loope cmp and cmp push mov vmovapd nop mov inc mov pop sar jg ds aad enter lahf or xor push (bad) (bad) (bad) jg or cli mov mov xchg fistpl les in mov dec (bad) (bad) pushl sub (bad) jmp sub push dec fisttp lods popl add std add and or sbb int mov (bad) (bad) jg mov xor ror pop sti jmp add pop push jge (bad) (bad) (bad) (bad) cli xor mov dec or mov movsb (bad) pop lret out popa cmc sub and std (bad) (bad) decl adc xchg (bad) js jb dec sub out sti mov and fwait mov mov push es ret in push movsb adc or cmpl fwait cmp ljmp pop jae test jmp sbb or movsl movsb xor dec push xchg mov (bad) (bad) (bad) in fmulp cltd xchg add mov pop or (bad) mov xchg incb cmp pushf (bad) out mov mov sbb shrb jmp (bad) cmpsb mov pop jp ds add rorl cmp aam sbb dec idiv (bad) (bad) call rorl pop dec ljmp call iret and data16 xchg rol push (bad) (bad) (bad) ljmp popf pop and push dec insl cld jmp fbld add in rclb adc movsb fcompl and xorl (bad) jg inc ds jecxz jno lcall jecxz adc (bad) (bad) call push and gs hlt (bad) jecxz test dec daa push add push (bad) (bad) (bad) lcall aaa jno sub push pop js sti xor fmuls jnp pop pop hlt (bad) push movsl sub cwtl xchg sub std test xchg stos data16 outsl mov inc leave outsb sarl bound fistpl (bad) jnp fdivrs imul mov sbb ja (bad) dec dec ds mov mov mov aad push das mov (bad) (bad) (bad) ljmp mov cmp das leave pushf scas mov jge mov xchg int3 lock hlt dec mov popf mov rcl popf xor (bad) (bad) incl cmp in adc subl aas in jno test sbb pop pop mov (bad) (bad) (bad) decl sbb cmp and xchg movb (bad) cmc xchg mov addr16 xlat sbb icebp dec fcompl cld (bad) (bad) pushl ljmpw aam movsl js js add jl es ret cwtl and into xlat (bad) lcall inc dec mov inc xor stc xchg imul dec addr16 (bad) lcall dec je loop iret jmp sahf mov jg cmp add (bad) lcall cmp or adc or inc push (bad) mov jp pop push or sbb in (bad) (bad) decl movsl mov aas sub push jb mulb repz mov test (bad) fistp es orb mov ret pop inc or iret imul mov pop mov ret mov addr16 mulb lods (bad) aaa add sub cld xchg pop fisubr and les fcomps xor ja or std ss (bad) (bad) call test lds les mov sbb ficomp jg (bad) aas mov rorb sbb adc inc aaa out das test lods inc xchg int ljmp or inc mov xor loopne cli nop mov lcall mov push imul cld xchg shll es add (bad) (bad) (bad) pushl shrb mov inc icebp cwtl dec mov pushf lock mov decl push mov push (bad) cli mov lcall mov shrb jge leave push mov fldt mov lds arpl inc cmp jne outsl ficomp cmc xchg jmp push dec or (bad) (bad) incl adc int3 lods adc mov mov jne test fiaddl loopne pop mov (bad) (bad) call push cmpsb mov push push xor je movsb lods inc dec std nop/reserved xchg movsb lock (bad) pushl insb out call jg adc fidiv mov xchg mul dec inc stc daa add (bad) lcall sarl push dec sub jmp (bad) (bad) (bad) fsubl fildl jp aam adc sub std and jg adc fcoms mov jg mov mov fstl lret jns dec insb std jmp subb (bad) (bad) jp dec test (bad) aam dec (bad) aam insb int3 pusha inc mov mov dec (bad) xor movsb scas push (bad) das in (bad) (bad) ljmp sbb mov ret test vmread ds (bad) roll and icebp (bad) (bad) decl mull out sbb lea insb jo pop add inc (bad) (bad) (bad) fistpll sti test ss cld cmpsb xlat mov addr16 inc fst cmp sub mov push js imul scas fdiv add pop cmc inc mov les jbe lock cmp and sbb mov lcall or incl sti insb lods pusha pop call pushl fisub push aaa mov scas mov mov sub xor mov inc push xor test (bad) (bad) ljmp test nop insl mov xchg add inc mov mov enter mov fucomp fldt xor nop std inc pop jmp push arpl mov pop mov (bad) mov shrl aaa test lret int3 adc hlt fsubs jl (bad) (bad) jmp sub imul xchg mov ljmp fdivrp mov jno enter test frstor (bad) xor (bad) call (bad) notb jns out mov and negb (bad) or mov mov sbb lcall mov and aaa (bad) in fldenv sti arpl js pop push inc es fbstp mov or sub xor insl rcl ljmp mov ficompl int clc xchg sub push pop (bad) imul mov (bad) out cmp rcr push and aad cmp or jge lret test (bad) movsl jl mov jle cs jmp ss inc push in mov addr16 add add fdivr (bad) (bad) (bad) ljmp dec scas (bad) stos cmp les ret add aas push push outsb scas jne lods pop (bad) out pop (bad) (bad) mov xor and loop inc fisttpll out in xchg add mov (bad) mov jne fstpt sbb (bad) (bad) lcall ds push xchg ja mov sub pop and push stos nopl out bound cli incl jo mov mov test sub hlt ds (bad) (bad) ljmp xchg icebp (bad) push jnp mov sti xchg mov mov cmp jmp or sub push cwtl aam shrb cmp test xor (bad) (bad) jmp in cmp mov out movb push pusha in inc scas roll aas sub xor (bad) decl push cmpsl popf cmpsb cmp mov lds push lret fsubs cmp xchg rolb loopne mov mov jecxz hlt lock inc sbb je dec dec sahf aam sub jg mov push mov test flds mov in add into iret fimull je lcall or lret lods mov mov (bad) hlt jp outsb iret sahf dec and sbb rorl int and cmp dec in xor sbb sbb xchg dec pop loope shr call cld add in cs push sub push in adc call cmp add stc out xchg adc (bad) (bad) incl orb jl mov inc mov fstl add pop lds andb addr16 in lock cmp lods aad push cld fbstp (bad) in mov jo sub call push cmpsl incl fistpl or mov in fadds std jne jno in jle jl enter das sub add cld aam jae mov push (bad) (bad) (bad) jg sub rorb addr16 movsb cmp sbb idivl fadd lret cmpl push cld pushl dec jb or (bad) or test cs pop sahf fwait (bad) or xorl push push ss dec mov into xchg ds xor int3 add arpl (bad) decl and push xlat mov xor sub xor sbb js (bad) (bad) jmp insb fimul daa into xlat icebp ja xchg sub dec (bad) movsl lcall xor test pop pop (bad) jg (bad) mov dec fdivrs inc xlat cwtl inc sbb mov cmp (bad) clc pop in ljmp mov push sbb sbb test push pop jl (bad) (bad) pushl (bad) out outsl pop inc jnp repz (bad) mov repnz rcll inc adc xor add (bad) (bad) jmp loop jno (bad) fldcw out cmpsb movsb jge mov jno (bad) lret popf jbe pushf cmp lods sbb repnz push mov (bad) cmpsb jge dec mov leave mov into jmp pop (bad) (bad) (bad) pushl cmpsb sub xchg cmp je movsb cld int loope ficoml lahf cmp dec clc call inc imul pusha dec cmpsb mov and push mov xchg cld ljmp xchg sahf (bad) (bad) gs enter pushl push sahf mov jmp jnp rorb sbb sub dec (bad) (bad) (bad) call dec mov mov mul mov notb test jo scas mov scas loopne lcall inc js andl sbb add idivl sbb sbb adc mov andl lds mov inc push mov push (bad) (bad) (bad) (bad) push cmp mov test dec pop sbb imul std cmp adc (bad) enter mov pusha movsb (bad) out xlat fcmove xchg repnz (bad) (bad) (bad) fidivr mov adc sub clc (bad) mov or out es ljmp in scas iret test pop adc cmp (bad) (bad) (bad) (bad) sti ds dec jne pushf pop je or ret aad ret xchg outsl shl jp ret dec xchg dec lds shrl jns clc ds (bad) fistpll lods jne dec and adc aaa scas lret xchg jnp out cmpsb clc rolb or fdivrp pop (bad) ljmp cli jmp (bad) aam adc sub fs sbb cmp aam xchg movsl xor (bad) (bad) lcall scas cli jns lcall inc cwtl sbb dec jp cmpsl xor gs mov (bad) (bad) (bad) lcall jle pop pop sub mov mov (bad) lock xchg mov sbb push (bad) (bad) (bad) jmp adc popf sbb push mov in mov xchg sbb pushf mov mov xor loop jno add or loop sbb std aam xchg (bad) (bad) (bad) lcall fwait mov pop mov (bad) in punpckldq das mov cld cmp jns,pn add (bad) inc cmpsl sub push jl jg shr push mov sbb adc jl punpcklwd mulb (bad) jg inc fisubr movsl mov rol shll xchg xchg inc pop or sbb jecxz pop inc pop idivb (bad) (bad) out (bad) jnp xor call cmp inc inc mov xchg jo into jmp (bad) (bad) jg push xor mov cmp enter nop jnp out (bad) xchg sbb jns lret push std insb ds fxch mov (bad) lcall es aaa lahf add pop aad nop push sahf insl shrl or fsin push dec sar in lock sbbl pop jmp stos (bad) pushl push or push add mov (bad) loopne xchg sahf and (bad) (bad) (bad) mov push rorb xor adcl shl loope xor (bad) (bad) incl jmp (bad) dec pop or gs rcr fcmovu xchg (bad) (bad) stc xor and mov jns cmp (bad) lcall fstpt lods xchg xchg push xor test sti les jb xchg add (bad) (bad) call jne movsl and movntq out pop in mov aas push (bad) ljmp lcall adc inc xchg mov mov sbb int or test inc and (bad) incl icebp inc stc sti add loop test push mov mov aaa ja (bad) jmp decb (bad) push lahf mov sbb mov (bad) (bad) lcall adc test add (bad) cli mov pop mov leave sbb xlat and adc leave stos cmp adc jge,pt jecxz incb inc lds push in and xchg push mov adc mov pushl in adc (bad) mov rcll pushl test (bad) (bad) jg push mov and in fcoml imul or aad (bad) call aad pop sbb outsl sbb dec fistpl (bad) pop call ja cmp and test cmp mov (bad) faddl lcall popf nop lock js sbb push inc in (bad) fs mov sub fwait dec (bad) jg fisubr test popf jns sub mov push mov (bad) aas or xchg sti xchg inc lock mov push (bad) decl inc sub mov test jge (bad) (bad) lcall and dec test adc jl lods nop jp dec or sarl (bad) lcall std inc add (bad) cs xchg push jmp inc sbb mov mov pop nop push das xchg sub aaa push dec xor lcall sub jg (bad) (bad) call lahf dec shlb lods insb (bad) mul loopne cmpsb shrb inc hlt pusha inc decl mov mov mov (bad) (bad) (bad) fist and and gs (bad) (bad) mov mov mov sbb faddp jl sar (bad) jl roll cli mov mov bound inc pop lods (bad) js clc mov push lock xchg xchg imul (bad) incl ds rorl or mov fnstsw sar (bad) (bad) mov and pop xchg pop insb sbb inc sub aad (bad) (bad) (bad) (bad) (bad) mov jb inc xchg movsb hlt sbb test cmc loope sub pushf jae in (bad) (bad) lcall push inc mov aam add fs in int3 es inc pop sbb sbb (bad) mov sub mov out (bad) sahf arpl ret popf rcr add das clc (bad) ljmp outsb jl inc jmp push in dec mov add mov das clc or lds inc lock dec cmpsb mov (bad) ljmp fdivp imul and insl add jmp inc shll cli xchg sbb roll cwtl or mov add insb hlt addr16 push (bad) and (bad) jns sbbb (bad) into mov (bad) adc sub (bad) ficomp shll inc (bad) fimull stos test (bad) jmp negl jl notb fcompl or inc and jecxz lcall push out sub dec cmp addr16 js test lahf inc mov (bad) mov pop sar jmp aas dec xchg push jo loopne inc and pushl ds (bad) xchg or sub hlt pop inc adc dec pushf cmp and out pop mov insl std incl les xchg test (bad) (bad) call pop pusha or push sub jmp test push addr16 or xorl mov mov imul mov pop push or ret sub or add (bad) (bad) (bad) faddl xchg jnp (bad) mov push push mov and dec adc xor or jecxz popf adc inc sub mov (bad) (bad) (bad) lcall add inc jecxz les jb enter pop jmp jnp add ret jl (bad) (bad) dec in xchg jmp fsubs dec (bad) imul pushf inc cmp clc aam testl incl mov (bad) jp pop scas mov (bad) rclb out mov js cltd jmp sahf lods inc cmp adc (bad) (bad) (bad) inc inc (bad) jp push lcall sbb stc sub sub adc call (bad) (bad) decl sub pop les inc lods lods adc out (bad) push out sbb addr16 add fistp add add add mov jae push (bad) (bad) (bad) (bad) cmp and scas mov inc (bad) pop std icebp cmpsb inc fisub cmpsb jecxz outsl (bad) ljmp outsl packssdw mov sub nop xlat cmp ss (bad) (bad) ljmp sub clc inc xor push push add (bad) push repz fucomi loop outsl enter popa std (bad) mov jp adc (bad) mov mov mov adc call loopne mov stos in and jg arpl and (bad) (bad) ljmp jmp adc ss pusha jmp (bad) mov ror sub mov imul sar test push sub xor sub in imul lods scas xchg ds out push sub (bad) mov mov and (bad) lret loope loope and (bad) (bad) (bad) jmp adc cmp dec int3 pop xchg jp cmp es ret test (bad) aam scas (bad) mov (bad) (bad) (bad) (bad) cld push mov or mov mov dec insb aas mov dec andb cs or hlt cmp inc lock cs mov sar pcmpeqw adc mov and stc in into xchg (bad) cmc sub inc out cmp xor js clc jg ds xor stos mov cmpsl xchg sub add add je mov adc (bad) (bad) (bad) fcompl (bad) in jp call mov nop jne jno loop (bad) (bad) jg push jns push fdivp sbbl iret sub test cmp (bad) (bad) call fbld sub imul gs xchg (bad) push (bad) (bad) (bad) (bad) jmp stc test pop stos popa or xchg insb gs pop pop int fisubl (bad) popf (bad) (bad) jg dec jl add push lds repz daa enter daa movsl sub ficoml aas mov ljmp (bad) push int3 (bad) mov push std mov push addr16 mul push adc fnstcw clc add movsb (bad) ljmp ds fcomps pop test daa popf jp out popa and test xor (bad) jg push add fdivrs xor (bad) inc cs push fsts dec ficompl icebp popf (bad) (bad) (bad) jmp ljmp das lret mov stc xchg daa lock pop add ret clc (bad) (bad) fnstenv or sub mov call pushf inc (bad) and (bad) (bad) (bad) ljmp test test repz loope ss jecxz add dec ljmp (bad) (bad) (bad) decl nop popf test ds repnz mov (bad) mov pop bound jbe jp (bad) call xlat rorb mov (bad) cli movsb inc cmp std (bad) inc adc pop lods pop movsb sub cmp shr rorl xchg mov das clc lcall aad jbe mov fcoml lea xor mov mov das push cltd sbb popf (bad) imul jbe outsb xchg xor (bad) (bad) call cmp pop pop pop negl mov loopne pop sbb add jg mov (bad) test mov add xchg mov push or sbb (bad) js jo (bad) (bad) (bad) decl aad les in xor sub or das sub test insb adc mov dec jns loopne cmpsb push push rclb (bad) (bad) jg or xor insl fiaddl xchg gs mov ss ja inc sbb (bad) (bad) (bad) jmp pushf sub cmpsl ss fwait mov je xlat enter pop pop shlb (bad) mov push xchg push mov xor inc sbb dec lea (bad) (bad) (bad) jnp xchg repnz fistl dec sar xor lcall les ljmp rorl lret mov jg xor inc out or mov cmpsb sub mov fdivr call (bad) dec outsb call cs pop and dec and jecxz mov xchg movsl mov jg ja jmp call pop js clc mov xchg push xor inc mov jl mov xlat dec ds and jg addb insl jnp jbe,pt xor pop push pop lds fsubs lods lods ja (bad) decl xchg inc cmc into notb fimull mov xlat nop cwtl sbb fsubrs push in ret adc repz das clc and xor idiv (bad) dec xchg push add dec and pop stos movsl xchg fbstp mov sub jle arpl push jnp push faddl (bad) call icebp sub and les mov lods push xchg adc jg pop (bad) adc pop cld (bad) (bad) (bad) pushl or (bad) push fdivl push jns add je addr16 sub sub xchg aam (bad) (bad) pushl ljmp jecxz xchg push xchg and inc rcll mov incl fisub scas cmp sahf dec lcall xchg mov mov rolb pop mov cmp sbb cltd xchg enter ret add and xchg jb adc enter stos sbb pop dec inc out data16 lret icebp cld pop sub loope lcall test out add mov arpl xchg fisub pop inc add (bad) pushl fsubl stos mov dec jo lock (bad) pusha inc int3 adc fdiv (bad) call (bad) adc call xor pop (bad) sbb pop ja mov cmp or pop adc xor jecxz aas std nop ficom (bad) (bad) dec ds frstor mov rcl pop push es xor (bad) lcall cmpsb lahf xor lret or cmc or lcall insl dec pop test or pop aad adc (bad) scas sub cmpsb mov and movsl sahf cmp inc roll movsb and (bad) add pop enter add fistp test into lods cmpsb stos mov push mov pop jg mov scas mov xchg cmpsb dec and (bad) adc mov push adc stos cmp gs pop fwait mov (bad) lcall mov dec inc and std (bad) (bad) in incl (bad) xor fdivrs shrb cmp inc sub adc (bad) (bad) (bad) call pop push mov in (bad) pop ds adc lret mov insl lret sar (bad) (bad) cmp or cmpsl mov into pop mov and inc cmp xorb sub pop cmc sbb popa dec mov cvtpi2ps inc addr16 sub stos dec scas in decl add push adc fildll and (bad) push mov clc xchg and dec loopne testl xor (bad) call add cmp or popf cmp push loopne mov in push push or cmpsb fcoml cmp out mov sub (bad) (bad) (bad) jmp push fldt inc mov and js frstor xchg and dec test movsb adc push adc cwtl outsb inc in sub xor add jb lahf nop (bad) (bad) jg mov add jmp jp rcl push addl (bad) (bad) jmp push sub aad adc sub daa aad sbb cmp lods push xchg (bad) (bad) ljmp push dec mov aad pop cld in ja popf js inc aad rcrb jl imul mov mov jg ja sub cmpsl mov mov fsubrs lea in mov cmp mov gs xor mov sbb js or (bad) (bad) push bound mov bound sarb mov jle mov data16 and fmull outsl les sbb popa aas (bad) (bad) (bad) call movsb outsl movsl insb dec mov jbe fildll cltd mov mov mov pop ret adc imull (bad) (bad) (bad) pushl xchg ret and popa xchg jbe xor add adc and mov mov (bad) pushl adc fsubrl hlt mov sbb xor les push cmpsb push stos cmc fcmovne das movl adc add mov aaa (bad) (bad) incl mov rcrb lcall pop mov or clc mov js jmp xchg fstps jmp sarb dec repnz aaa mull mov rorl (bad) clc fidiv push aad cmp mov popa jg,pn stos xchg (bad) xlat push mov sbb clc (bad) (bad) jmp movb or addb in pop xor clc movsb pop leave mov add ds lret jae aaa push lods mov out ljmp cld shrl (bad) lret pushf outsb pushf rcr jecxz lods pop sbb outsb pop out xchg jecxz (bad) fdivrs data16 test fisttpl in xchg lcall rcr mov iret jge push cmp pop loop xchg subl (bad) (bad) mov sbb inc jmp cld (bad) xchg inc ss movsb push jle cld (bad) mov push add sbb push xchg xor sti push das stos fmull xchg mov in aam cld mov jmp dec or add adc ja hlt push or add or dec and mov xchg js stos lods cmp cld fsubrs mov or mov mov (bad) hlt ffree inc nop adc pop lock cmp ja dec lods aad (bad) and jns insl mov jns lea sub incl mov sub aaa cld (bad) incl adc dec dec mov scas (bad) into and es mov sbb (bad) mov push mov pusha xor add cli (bad) (bad) jecxz pop cld sbb ja jg (bad) jmp jle sbb shrb mov push mov xchg xchg mov sbb mov lcall incl repnz pop (bad) mov jmp push mov fsubr std movb out inc enter push bound into sahf cli cs cmp aad sub (bad) lcall in divl mov or inc bound rorl (bad) (bad) aas xor xlat out (bad) dec cwtl mov ror jae push cmp cld (bad) (bad) jge push es mov das push jae xor (bad) outsb icebp mov inc (bad) (bad) (bad) cmp test sbb cmc leave push inc mov fcompp movsl ss jns dec call and mov mov sbb ljmp mov out push scas ja or sahf mov out jb (bad) icebp jp popa or sub insl sbb dec jo sahf sub (bad) xchg mov (bad) decl xor inc add iret in sbb xor (bad) (bad) (bad) jg insl imul jmp add xchg cmpsb scas aas aas sbb dec js (bad) jbe fist cmp pushl paddsw adc dec cltd aas test adc fwait adc fidivl (bad) (bad) (bad) jmp lret adc (bad) and or adc into and fistpl (bad) fild ds xlat ror xchg mov cmp mov enter cwtl ret jbe prefetchw ljmp sarl mov movsb call les lcall (bad) stc and mov mov mov push cmp pop (bad) (bad) (bad) decl in fwait stos adc xchg xchg js mov add (bad) sub cmp (bad) decl mov insl iret push mov mov inc flds push js,pt scas icebp (bad) ljmp ljmp sub (bad) lcall cmp add fimull pop lock jno inc dec mov rol (bad) (bad) (bad) decl aas mov andb push in adc mov xchg add pop lods ret mov mov into and fs push jno xor mov int3 scas and call std and push cmp mov in jmp jo les pusha ret hlt add push insb adc mov mov add daa inc pop xor push gs sbb mov or mov cmc aas jge or pop ja fldl push cld push mov push (bad) mov ret push or inc mov leave xchg xchg push cmc div (bad) (bad) (bad) (bad) std pop dec mov mov mov jge cld pop test cmpsl sbb aad inc dec std (bad) (bad) (bad) call push sbb add add in mov mov jae xchg xchg aaa xchg (bad) call or orl fisubl stos lock sarl insl std sub test add (bad) jg mov push sub lcall cld pop aam inc pusha js mov repnz (bad) (bad) call loop push in cmpsl cmp popa jo cmpsb mov cmc jbe jecxz das and (bad) call cmc jnp cltd ds mov sub xor mov xchg unpcklps scas adc (bad) jle dec xchg xchg repnz mov (bad) scas xchg ljmp cmc dec dec mov push aad not mov stos (bad) (bad) pushl int xlat mov jg mov cmp sbb (bad) (bad) (bad) (bad) jg inc mov (bad) add (bad) xor inc arpl dec mov (bad) (bad) jmp lods add dec and add divl mov (bad) cmp jb jbe xchg lock push insl dec insl inc mov (bad) (bad) (bad) call fnstsw add pop sarb cmp (bad) jnp gs dec mov std ljmp (bad) incl sbbl jp add inc ja xor jp mov pop clc (bad) (bad) (bad) ljmp ficompl pop loopne add add sub in outsb jecxz xor scas incl out stos and (bad) (bad) (bad) jns cmpsl mov icebp rcrl xchg leave and aas and pop shrl fdivr (bad) (bad) mov int xchg mov xor outsl cmp nop (bad) lret call rorl pop push and adc negl (bad) (bad) call pop jb sbb mov cmp fbstp hlt aas (bad) in jne adc xor imul mov test jae js lods sub mov bound rcl cmpsl xchg push cmp (bad) (bad) (bad) pushl mov rclb sub stc fwait call xchg pop test sahf loope inc (bad) (bad) (bad) pushl dec sbb ds inc lahf mov mov icebp out (bad) divl mov (bad) (bad) mov pushf mov jae mov xor push push adc call (bad) incl jg scas das xchg mov push jnp mov or std pop jns pop in (bad) (bad) (bad) test xlat inc jno and gs fldt and pop js ljmp mov add bound (bad) (bad) pushl daa sbb mov test arpl mov jo xchg mov sbb imul jns jge adc sub (bad) sub (bad) and cmp (bad) decl jb sbb sbb mov lcall insl test (bad) (bad) (bad) (bad) fcmovnbe xchg lds sbb in and add push adc pop mov inc and mov mov jnp adc sti out repz (bad) mov out mov test jecxz push aaa cwtl lods jl nop je (bad) (bad) (bad) incl sub mov (bad) subl repnz stos mov or mov (bad) lcall daa (bad) fsubl cmp pushf jp inc or in cmpsb dec sbb push cld (bad) lcall in fnsave rcrl test cltd cmp push jb (bad) mov ret mov cmc dec arpl in enter jecxz fiadd arpl and inc and or jmp mov aad cwtl push das in data16 sbb add mov faddp push pop in push mov xor pop test xchg (bad) (bad) decl sub cli lods xor or xchg pop push push popf mov and call icebp cmp mov or outsl clc inc xor pop mov cli popa add lds popa cmp xchg in pop js xchg insb (bad) (bad) (bad) jg lods mov je shl popa scas mov (bad) pop sub sbb inc lsl xor rolb ss imul subl scas sub pop cs adc (bad) call loopne mov adc mull sar push inc outsl mov adc (bad) (bad) pushl mov pop movsl adc adc xor push mov enter scas daa cmp aas sbb push arpl (bad) (bad) jmp adc scas or das xor mulb inc push or and pushl add pop ljmp pop (bad) dec push mov dec or inc pop std incl push rcrl push mov jg dec mov (bad) (bad) jmp iret jns into mov and cmc fstpl cmp fs push mov in sti xchg (bad) (bad) (bad) int3 or jp,pn jp aas test aam lea scas sbb pop xor jo (bad) (bad) (bad) pushl loope adc mov repz lahf aaa lcall adc (bad) (bad) call add jle lock add jle in or out les (bad) jmp clc cmp imul cld sbb pop fdivs mov aam out sbb leave cmp pushl mov push hlt mov ret (bad) sbb dec push nop leave in mov add decl (bad) push or loop xor cmp and sahf fidiv fdivr sbb mov pop mov mov mov jmp cli jae insl sbb inc mov jae mov sub loopne push or (bad) lcall pop jne mov in dec les push xlat dec test pop pop fidivl pop sbb arpl pop ljmp mov add mov jo mov cli pop jb lods mov scas add lahf mov sub cli addr16 cld lds pusha aam std fwait mov and (bad) data16 imul xchg loopne orb mov out sbb lret incb stos dec loop cmp clc inc sub xchg pop mov push sbb imul pop popf lret loopne cmp fldt (bad) lcall nop or jo out cld adc (bad) ss stos (bad) mov mov or mov push fsubl sbb pop loop dec cmp (bad) call add mov movsl push pop add in or jl jle push mov (bad) decl mov mov movsl rcrb daa mov dec loope daa (bad) (bad) (bad) pushl push mov dec test hlt dec andl cmp loop arpl xor aas fisubl aas imul or incl imul or pop pop (bad) (bad) fistpll iret int mov mov push jmp dec mov (bad) (bad) (bad) call rcll enter jl iret (bad) sbb fldlg2 or push lcall dec cmp pop jl lret pop or pop lahf (bad) (bad) jg pop loopne dec jnp sbb imul arpl iret call or push jl call mov out and inc nop xchg in es sub xor mov js call std (bad) or cmp mov lcall imul (bad) (bad) (bad) (bad) hlt xchg xchg cmpsb aas sub fs jo scas or ja jns add dec iret push shll ret inc and add jb pushf pop cmp ret outsl adc mov (bad) mov (bad) incl (bad) jae shl pop mov scas add push xchg icebp mov aaa cld (bad) (bad) cmp inc mov jl mov sti cmp int cmp pop (bad) (bad) (bad) call ret jecxz pop ja mov std cmp mov or ja mov (bad) (bad) (bad) pushl pop in xlat ss jge ja in out inc aam push ret xchg cmp lock (bad) (bad) incl roll and mov inc cli xchg xchg pop or stos (bad) (bad) (bad) ljmp stos fs mov pop sub dec cmp lahf pop or xlat sub loopne mov outsl push (bad) scas push arpl stos add call sbb cmpsb imul fildl loope hlt sbb (bad) pusha (bad) jmp (bad) js repz inc (bad) cmp mov xor cmpsb add (bad) (bad) (bad) mov rcr inc imull add jns ret sbb notb push (bad) (bad) incl arpl popf (bad) jmp fstp outsb cli mov daa lods ljmp clc xchg outsl push ss xor adc (bad) repz xchg popa bound mov in add xor xor cs (bad) divb xchg call in push popf pop (bad) call int in push gs push aaa cld fcomip sub mov lds mov xchg in (bad) jg imul lods cld popl sar adc adc (bad) lcall fbld sti jl inc mov push loopne lods sar cmpsb jle pop cltd sub inc mov and cmp and pop cli ljmp bound or inc dec cwtl mov jg push xor lods mov mov jo jnp (bad) (bad) incl add cmpsl push fwait push test adc push sbb cmc cmp fdivl lret jmp les cmp (bad) call std mov ja adc rolb test adc insb (bad) xor ret (bad) incl aas xorl xchg jno mov ret inc sbb push add pop outsl sbbl (bad) jg jmp out pop lcall sub fdivp xchg aaa push sbb std mov (bad) (bad) incl inc xchg inc pushf (bad) int sarl pop and fcoml daa and or and pop xor or popf leave jns or inc ret add popf scas fstpl or ds in sbb pop push mov adc cld idiv (bad) xchg dec sbb jne in pop fist mov pop sti lods out mov and sub lods hlt sub or fwait xchg mov or xchg cmp or cmp xchg pop inc sbb add jae xchg sub mov (bad) (bad) call ss fcomps mov scas sti dec cmpsl rcll movsl fcom xchg stc (bad) (bad) aas adc cmp (bad) jno sbb outsb or clc stos gs mov xchg inc xor sarl adc sahf stos mov push mov inc std jmp jns psubw cmpsl lds pop mov (bad) jg mov insb stos lret or xor movl decl sahf add fsubrl pop in mov pop mov (bad) je (bad) (bad) (bad) (bad) std mov popa (bad) jo xchg dec in sub out les ret mov ds loopne int3 scas rcrl out mov ds xor inc xor and sub (bad) sub mov lcall (bad) testb outsl mov cmp lods cmp mov push sti popl (bad) (bad) mov in test clc neg je ljmp fcomip incl fldl push test jp dec xor mov in jecxz xor call iret and mov cmp adc cwtl pushf in adc movsb ja inc stc (bad) (bad) (bad) (bad) ds imul js adcl add ds mov jbe mov mov push in stos xor incl mov inc fdivr push jle jg mov mov enter and mov (bad) (bad) mov or movsl pop int mov in xor sub push (bad) decl ljmp das gs jle stos sbb incl jne (bad) clc adcb push loope jle cmp jp (bad) (bad) (bad) in test xchg fistpll aam jb stos push call mov sahf rclb push jo mov (bad) (bad) (bad) cli xor fdivr inc xchg mov sub xor mov jecxz lahf repnz and aam (bad) (bad) jmp adc sbb stos fstp pop in lds jo push pop arpl (bad) ljmp jp mov dec adc mov jg fs xor sti xor mov adc or sub push (bad) (bad) (bad) mov jmp inc call shr mov add mov mov sar aaa cld mov (bad) enter cmp xchg jns jns jmp pop cld inc add das les dec mov and cwtl (bad) dec mov andl mov adc push data16 int (bad) fs test cmpsl sub movsb add mov lret cmp leave insb cld (bad) lock (bad) aas pop adc nop imul mov cmp scas in inc cmp pusha daa or (bad) mov cmpsl clc mov pop add scas ficomp inc cli stos mov in loope out insl xchg (bad) (bad) (bad) ljmp test pop sub adc push push and lds in mov jmp adc jmp cmp inc (bad) (bad) (bad) std and push es notb scas and fldenv fsts insl cld fild ds sub repz xor mov jp mov outsb mov xor mov xor cld dec ss fimul rep mov andb adc push push jg sub and push (bad) daa mov pushl repnz and movsb ds (bad) (bad) incl aam mov pop psrlw popa or sub push or int mov lahf inc inc hlt (bad) (bad) jmp icebp mov (bad) lcall mov xchg clc cmp jmp lcall cs inc fist imul mov pop adc cmpsl out (bad) (bad) (bad) mov cmp cmp jns sbb pop pop dec pop xchg inc fldl out cmpsb jle (bad) (bad) (bad) (bad) ljmp xchg fldl cmp pop lds ja add fisubr xor jmp or jbe dec cmpl aad adc lcall cmp push icebp movsb stc incl sbb test dec outsl daa inc cld int3 mov sub pop sbb (bad) (bad) (bad) lcall mov out pop mov dec das lret and xor pushf mov arpl jp pop outsb lock mov mov mov les and negb sub push dec aas push push lret call popa inc mov in ds (bad) mov push leave addr16 mov push (bad) jmp mov xor xor decl adc and xor (bad) (bad) ljmp dec and (bad) add repz adc mov mov shl mov (bad) (bad) (bad) pushl je (bad) stc xchg cwtl xchg lods insl mov fs cwtl sub enter mulb (bad) incl jo fildl inc aas push mov in andl mov (bad) (bad) mov mov and and sbb inc dec les movl lock jp mov popa sarl or int mov (bad) lcall pop add in and add pop cmp inc test scas es testl mov lahf dec adc std add inc sub (bad) jns (bad) (bad) (bad) clc out dec mov xor mov jnp fist cwtl push push das sbb stos cwtl sub (bad) incl sub sbb adc scas inc in mov (bad) (bad) pop mov inc dec ss call sbb pop ftst and (bad) ljmp test pop test lods mov (bad) lcall fwait mov subl repnz xchg adc mov ljmp loop sbb (bad) fwait xchg sub or (bad) cmp mov adc popf movsl add push in fcmovb scas scas dec (bad) (bad) fildl mov and test inc cmp (bad) (bad) (bad) fsubr and jge insl sbb push arpl sbb xchg stc dec test (bad) decl cmp and sbb lret jge push xor add inc mov (bad) jae (bad) lcall clc mov fldlg2 sti test xor gs xchg jno stc add clc popa sti sbb (bad) jmp jnp or js mov aam out mov sbb xchg push push (bad) (bad) (bad) call repz inc scas push fwait push add pop dec mov fs cmp fmuls (bad) (bad) (bad) ljmp cmp repnz and insl pusha scas cmpl dec iret add jo mov dec push and sub jmp out out out pop (bad) (bad) ljmp movsl mov ret push in lcall jns stos mov (bad) rcrl jmp out repnz cltd cmp add mov lcall hlt js pushf leave mov rcr jbe sbb or lcall mov sub je inc arpl mov jbe mov stc ret icebp call mov test push lret ljmp jmp mov clc pop sbbb push and hlt jl sbb (bad) (bad) jg outsb mov jno adc (bad) mov sbb sub xchg jmp xor les jnp jnp repnz lcall lcall xor or cmp jae call les xchg xchg jo mov add inc fnsave ret les es (bad) (bad) inc mov mov pop lods cs (bad) mov and jae jmp xlat pushf aad mov adc mov test mov push jmp sub inc sahf cmp in lock jge and or gs ret mov (bad) call jl dec mov cmp pop shrl xor pop (bad) jg (bad) jge rcl daa icebp adc imul jno loop fdivp test insl dec dec clc xor aam and (bad) (bad) call mov dec mov cmp mov lds ret shrl (bad) dec cmpl cmp shrb lods js es imul push sub push xchg incb mov les sahf mov (bad) call adc repz xchg mov call cmpsb add lods std dec ret fwait push sub fwait sub mov push push (bad) data16 cld push (bad) (bad) (bad) decl fisttp in mov test and xor dec push mov aas popf jo fs mov es clc cmp pop add out mov fstps es or call stos pop cld mov pusha jmp movsb push (bad) (bad) (bad) inc mov and lcall pusha push and arpl mov in add cs dec add pop imul decl cld scas jne cltd lods inc (bad) jno jbe ret cmp push mov ret (bad) (bad) (bad) dec mov lods (bad) dec pop cli cld mov jae inc es xlat aam dec (bad) inc xchg add shl (bad) (bad) (bad) (bad) (bad) cmp dec push cmpsb mov ds cld inc aam jp sbb adc mov (bad) (bad) dec push gs shlb popf fldt stos movsb imul stos adc mov dec xor (bad) fcomip test jecxz test sbb xchg arpl (bad) (bad) (bad) incl (bad) test dec cmp push push int cmp mov or (bad) (bad) pushl cmp mov cmp sub xchg testb (bad) cltd aaa lcall popa jg (bad) (bad) call fwait js imul push leave push cli pop mov cmp scas cli (bad) incl mov int pop es pop insl cli sbb dec xchg xor (bad) (bad) jmp pop xor cmp xorl or push push adc adcl (bad) cltd jae add pushl cltd mov jb add popfw mov in cltd adc jbe mov jb push dec mov cmp ret cwtl movsb jp (bad) (bad) (bad) mov jne ds pop fcmovnbe jne jle std cmp and mov or xor (bad) (bad) (bad) (bad) call aam or mov or inc rorl cmc sub popf mov pop mov faddl cmp pxor lcall jb popf data16 jecxz pop les mov or (bad) (bad) (bad) decl mov fmuls lea dec and mov pushf aam (bad) mov (bad) dec and clc jle sbb cmpb xor sub divl int xor jmp outsb or or dec jmp scas ficompl xor cmp rcl pop icebp (bad) (bad) call out rorb test hlt lods and cld negl push aas mov (bad) decl jb or ss popf scas cld jl and call add inc fwait clc push rcr mov sub test stos sahf jmp (bad) fcomip jp push mov sbb jg lock push nop (bad) mov sbb imul mov movsb mov int shlb dec hlt lcall fidivrl notb (bad) jmp pop rcl xchg pushf pop cmpsl mov rcr inc or dec add pop mov call xchg pop xchg xor rclb jb mov ljmp (bad) ljmp jecxz push or jo insl cld (bad) push movsl mov or adc (bad) push pop mov pop (bad) jg ds dec add cs xorl imul nop (bad) sbb push xor stos jo adc inc fisub inc jg mov pop sar (bad) (bad) std adc repz mov jno mov xor movsl push mov ret push add (bad) jg lods sbb jns movsb rol cmp test (bad) out sbbl xchg arpl mov out jg sahf outsb fldt (bad) (bad) (bad) call add mov ficompl (bad) dec cs jbe je dec adc cli dec cmp lock or insl loopne jmp push shrb stos inc and dec xlat add js ss dec (bad) (bad) ljmp ds xchg sbb jb sub jmp jae das loop fwait push popa mov pop icebp sti je lcall mov sub dec sub rclb in stos lods arpl inc rcrb xchg xchg pop loopne loopne cs jb call mov inc (bad) jns sbb (bad) repnz incl pop punpckhdq pushf (bad) icebp imul mov adc (bad) mov sbb mov insb dec push call pop xchg cs inc mov mov in outsl (bad) add mov (bad) (bad) call lock lods addr16 daa fdivrs das jno mov es push inc mov (bad) faddl pop mov mov popf rcr call jle mov pop inc xchg dec outsl nop mov (bad) lcall ljmp shr jbe mov cmp shll mov (bad) (bad) lcall xlat xchg daa ja adc pop xor xlat push dec adc sbb (bad) jno ret inc cmc lods repz (bad) jmp aaa adc sub dec add cltd inc sub add in popf jmp (bad) (bad) call pop jl mov xor push xchg cmp mov das (bad) lcall pop adc add cmc icebp xlat test test mov cwtl push ret mov inc lock addr16 pop dec cmp dec call insb arpl je scas cli decl add fisttpll aam jmp sub outsb icebp jno (bad) (bad) fisttpl cld js cmp rol sarl dec mov pop push inc adc adc jge (bad) (bad) (bad) clc ret sbb and push jp je (bad) and sbb (bad) mov sub and (bad) (bad) (bad) pushl scas pop les data16 jo push mov ficoml pop mov pop mov cli (bad) (bad) push pop mov push aaa iret bound dec inc int3 (bad) in jo xchg mov mov jge imul sub lcall data16 inc add or dec pop push adc pop xchg lock (bad) (bad) (bad) pushl mov lcall add add push mov lret psubsb xchg lret rcl sti mov pop lea push mov (bad) (bad) decl or xor mov cmpsl dec pop sbb pop cmpsb jge push ror push jbe loopne ljmp and mov push loope out xchg mov sar pop or jb out into jmp aam adc jg mov (bad) (bad) (bad) incl jp inc addr16 in xchg mov imull xor (bad) incl mov and pop (bad) idiv xchg andb in inc jb jg stos les (bad) (bad) cmpsb (bad) out cli push xchg adc lahf scas das mov push (bad) stc (bad) loop lods (bad) (bad) (bad) incl inc push repnz adc jne movsl xchg push cwtl and loope jae das rcl inc test cmpsl into lcall test sub das xchg push les and lea (bad) (bad) (bad) out mov (bad) jbe mov pop rol mov loope adcl inc add add cmp lahf movsl mov into or cld pushl mov mov pop (bad) dec loope popf (bad) mov jg (bad) fisub or xor xchg xorb mov jmp (bad) (bad) decl out xchg out insb push cmp jb out and std fldln2 outsb lahf sbb jle mov fwait test jbe in xchg add lock sub mov sbb (bad) leave sub xor mov push (bad) xchg (bad) lret es dec jnp in xchg aam pop insl mov pop jmp insb dec jae mov sbb jno mov (bad) (bad) call mov arpl andl lods shl sbb xchg push mov inc sub xor outsl (bad) pop xchg mov cmp adcb (bad) call and (bad) (bad) incl ret out sbb mov and (bad) or (bad) ljmpw addr16 (bad) (bad) pushl mov xchg cmp push add cwtl fwait in pushf xchg mov out inc add sub (bad) decl outsl and imul cpuid test insl or mov xchg jae jecxz (bad) ljmp cmc ds and pop lcall inc adc mov (bad) (bad) (bad) inc push insl dec add inc icebp leave (bad) mov push aas mov imul shrl xchg or out gs mov inc pusha sub lcall jnp orl xor fmull fdivrp pop inc add in fimul popf (bad) or (bad) (bad) (bad) mov mov hlt mov cmp cmp fildll divl dec sbb (bad) (bad) (bad) decl and inc in adc sbb incl add pop xchg out outsb jl (bad) (bad) (bad) mov xchg mov js movsb aam ret jbe jge sbb imul sti loop aaa dec mov decl push test xor and xchg mov or (bad) pusha dec ljmp xchg (bad) (bad) decl add pop xchg in fcmovb cltd or hlt dec imul dec mov push fnstenv (bad) (bad) (bad) cmp push inc aad add cmpsb mov jb fcoms ret sbb bound (bad) (bad) fcomip mov imul push rcrb lods in jl incl (bad) (bad) (bad) incl dec xchg loope lret sub cmp adc and es inc and or repnz or mov sub aam scas mov cmp (bad) (bad) (bad) incl (bad) loope pop pop mov adc push (bad) aam ja mov sbb sub mov (bad) jmp sbb sub into inc sub mov push sub (bad) jle xchg daa mov lods cmp fcomi adc inc cmp mov lahf sar fbld mov sub loope (bad) testb stc stc out push mov xor inc ficom (bad) (bad) jg sbbb jno ljmp ja sbb (bad) (bad) jmp push xchg dec fdivl aam push loope sbb inc push pop imul int3 imul (bad) call or test dec fsubrl pop xlat inc repz dec lret ret mov insb xor insb mov in mov adc xor mov es cmc mov or lcall pushl or jae pop mov lock test loopne (bad) (bad) lcall lahf push sahf xor ss jl in sbb insb mov in flds sar (bad) (bad) (bad) stc pop xchg cmc aaa out inc std adc mov pop jle add push xor (bad) pushl (bad) sbb inc stos ret rolb ret or add movsl popa and push inc dec (bad) (bad) call add mov pusha into and cmc (bad) decl ds cmpsl push xor inc ficomp nop bound fldl (bad) (bad) lcall push sub xchg dec test mov xor and and (bad) (bad) (bad) decl sub cli cmp cli cmp mov jo sahf cmpb je fs ljmp mov sub cwtl jp pop push icebp push aas push daa mov or add and jmp in nop clc js (bad) dec pusha mov insl ret mov mul pop dec xor in incl clc sti inc outsl sbb pop jb adc addr16 (bad) (bad) ljmp and mov and xchg jo movsb pop pop xchg push inc xchg adc sbb (bad) jmp sahf ljmp and push stos inc in (bad) (bad) (bad) call sar xchg aam imul scas leave test adc cmp aas or (bad) test lea (bad) cwtl insb push sbb das adc xchg (bad) (bad) (bad) fisttp mov sub mov fbstp push ret push xchg jecxz mov (bad) (bad) in jmp test jg mov push xchg xchg cmp mov jmp andl jmp dec aad jno je mov mov rcrl sub xorl push xchg fnsave pop lcall sub call jnp add in pop pop sar (bad) (bad) lcall scas cwtl inc imul push push sbb pushf lods push aam loopne mov (bad) in mov stos (bad) (bad) (bad) push adc ret fcoml mov xor xorb lret setl mov cwtl (bad) aad incl dec push outsb shl cmpsb gs mov aad in mov incl lahf jecxz lcall cmp mov lcall pop pop xchg mov xor lds icebp rcr and ss fildll mov (bad) mov repz (bad) (bad) decl xchg ja mov pop test add in lahf push iret rol mov jne int3 cltd dec jg sbb and outsl cmp mov and inc push pop dec outsl (bad) (bad) (bad) mov sarb subl mov xchg sub aaa cld (bad) decl xchg sbb andl das in cmp decl inc mov adc xchg mov sub movsb jno rclb dec popf cmp pushl shrb sahf mov xlat push loope lods jmp decl insl out gs push sbb mov xor dec ret inc and cmp mov jl stc xchg lret fbstp stc int3 (bad) fwait xchg fistpl stos push decl sbb add push mov dec lcall (bad) jmp loopne xchg ret stc push mov push jge icebp sahf dec xchg xchg jge sbb dec dec fstl and inc cmp mov clc (bad) ljmp ret xrelease lods (bad) stos cli mov sbb pushl jmp addb in aaa test jns (bad) jg mov xor mov sbb push push cli (bad) (bad) mov push mov mov (bad) mov inc adc (bad) (bad) (bad) fistpll ds fdivl out je jnp ret add push ljmp and (bad) decl in mov cmp sub icebp jo (bad) dec push and pop mov inc jnp or fs pop inc adc (bad) (bad) (bad) fsubrl xchg or push push mov ret inc push fistl and or jge lcall sub neg and and sbb (bad) (bad) jmp sub int3 cli push mov mov fnstsw repnz mov jg mov mov arpl mov xchg scas mov cmp (bad) ss (bad) (bad) lcall out lods imul sub jns mov loopne scas stos out push pop insl (bad) mov jne out orl (bad) ret jmp aaa xchg inc pop jae xor (bad) decl mov rcll xor xlat or mov (bad) fcomip ds cli xchg pop or mov xor leave bound mov pop xor in dec loopne aas jge mov inc mov adc adc into sbb sbb int out repz push pop inc and (bad) (bad) decl pop or mov insb xchg shr fs mov mov ret inc push cmp mov icebp (bad) (bad) (bad) cmp in fmuls sbb das leave fisub roll and add (bad) (bad) fnop sub sub and std test sub pop cmc dec push roll sbb jle out sbb ret xor push push and push dec or or mov (bad) (bad) call leave mov ds leave stos adc mov fwait hlt push ret add jmp (bad) (bad) pushl pop leave xchg jg call cmp fnstsw fisub adc fildl stc (bad) (bad) (bad) call fldt enter xchg mov push (bad) pop fnsave loop mov clc es pop scas ds test mov lock call out mov mov dec push pop mov (bad) (bad) (bad) inc push (bad) ss sar adc or inc pop and ret cmp decb mov (bad) (bad) (bad) lcall or rcrb scas icebp (bad) repnz ret fnstenv in dec jmp (bad) xchg xchg mov mov in jecxz dec add inc mov (bad) (bad) (bad) jmp arpl and push push mov and or aad jns xor mov inc sbb shlb dec loope (bad) (bad) (bad) jmp stc sbb push stos and pop xchg dec mov aas mov pop add fs stos push ljmp addr16 sbb inc or mov add dec xlat movsb rcrl (bad) (bad) push aaa jae fcomi pop jo aaa ja lods mov mov cld (bad) ljmp dec push lea call mov push test (bad) (bad) call inc loopne cmpl fldt rol push movsb sbb push mov jecxz aaa inc cli pop and push adc mov push mov xor sub cli xchg std inc jns mov fisub test pop in mov into fxch mov mov push sub loop mul pop loopne int enter stos rcrb das fmull (bad) (bad) (bad) decl fildll mov inc leave mov inc inc in mov adc imul lock mov lcall incl cmp out movsb dec sub xchg pop repnz das inc or dec addr16 loop push jno push pusha dec dec loope aad add fwait rol adc (bad) push decl and push jae insl sbb scas add pop cmpsl mov std ljmp cli mov sbb add adc jbe fwait pop lds (bad) mov push lock adc roll sub daa mov push add jmp int3 std (bad) (bad) (bad) lcall int fist dec iret into pop jp pop xor inc pop shr mov push (bad) jmp lahf mov ss jns loop int3 rcl repz jae xor mov (bad) jmp rolb and test (bad) js mov xchg mov or call pop cli int jb hlt mov mov xchg mov mov or pop fisubr add (bad) lds das popf xchg lahf sahf jae (bad) (bad) (bad) in inc ljmp xchg pop (bad) (bad) pop fs mov dec stos shll frndint and mov imul push pop (bad) (bad) (bad) (bad) aas subl dec bound les lds jecxz push and ja mov ljmp (bad) (bad) out push mov mov fwait inc push mov out enter mov sbb cmpsl sbb (bad) decl daa and mov or cwtl outsl mov lods xchg (bad) jg or add adc bound jne lea insb xchg aam loop sbb dec fiadd lret push ds (bad) fnsave xor repnz (bad) rolb cmpsb out int push jmp clc push stc inc cmp ds add or icebp (bad) in lret lods lret pop pop pop leave ljmp xlat push (bad) (bad) (bad) call ficom xchg lock and lahf out imul std pop (bad) (bad) (bad) decl loope fildl xlat mov pop daa imul (bad) push cltd (bad) pop or loopne mov rclb fwait push pop cmp (bad) jo ss mov fmull add (bad) fildl sub or or mov xchg mov push test pop inc stc sahf (bad) iret test push pusha ret (bad) (bad) (bad) dec lods xchg cmp push and (bad) mov add mov popf lods xlat incb push add call add push inc inc adc jge repz mov enter dec into and inc loopne and in cli stos adc adc mov (bad) jg mov pop movsb fbstp int clc dec lcall inc sbb shrb pop pop pop (bad) (bad) decl push lock mov mov (bad) pushl or stos leave dec xchg repz inc or ss xchg pop aaa mov adc mov fwait dec ja nop inc cmp mov cli (bad) das xchg ja push ficompl bound push fs inc js cmp pop sub xlat dec mov push insb js adc (bad) (bad) (bad) lcall mov mov cs jecxz faddl gs sub push cltd jg jae mov addr16 xchg fdivrl cmpsb dec add mov outsl adc je inc push jl push (bad) (bad) pushl popw lcall push subl sbb mov lods (bad) decl or add dec sub xchg push mov pop (bad) (bad) ljmp imul mov cmp dec cmp jns dec loop das (bad) (bad) (bad) pushl push add xor cmpl mov cld aas inc ret rcrl ret sar (bad) (bad) decl cmp aam lcall xchg dec xor cmpsl enter (bad) (bad) out mov popa out test ds pushf fs pop mov push cmp ljmp push in mov (bad) fcomip (bad) ljmp inc push js inc mov mov mov add data16 lock (bad) incl jbe roll add adc iret dec push das out lcall (bad) (bad) decl lcall jmp repnz sbbb push hlt and and call and out ret mov mov push xor and (bad) pushl jecxz push dec or dec cmp int3 stc cmp pop push (bad) push (bad) (bad) (bad) push fsub and or sub scas sbb das jns dec std mov and mov jg (bad) das movsb out outsl addr16 cmp test inc fcompl xor pop or (bad) ljmp sahf lock pop je push sub in add cmc add push test pop mov xor pop adc jne loopne mov push (bad) lcall repnz fisttpll test test pop jecxz scas adc xor lret and (bad) lcall loopne,pt (bad) or pop adc ss mov (bad) (bad) (bad) push (bad) xor fidivr inc push and shlb daa ret ljmp scas xchg popa cmp outsl cmpsb lods decl in fimull imul arpl imul aaa mov (bad) call loopne inc (bad) jbe ds daa ljmp push add add fist (bad) jl popf mov xor xor xchg jl mov je cmpsl mov cmpsb mov adcl out test bound jmpw pop lock mov cwtl sti xchg mov scas enter (bad) or (bad) cwtl ja xor decl cli (bad) pop sub xchg inc jmp loopne fnop fsub nop xchg or (bad) (bad) incl cmp or out fstps cmp ret inc pop insb popf movsb lods bound fstl xchg dec (bad) (bad) (bad) lcall out (bad) into loop fwait jne xor fisttp pop push xor call andl jg mov scas or fiaddl (bad) push shr incb addb sub mov xchg fsubs adc cld aaa push mov pop lea dec (bad) (bad) jg mov pop aas pop xchg jmp push fcoms pop and mov push or pop out pop mov and pop vmovlps fcomip (bad) ljmp sti lcall rol and inc cmp inc push mov inc add repz in sbb outsb mov lret sbb stos pop insl aas dec mov mov (bad) decl sarb mov adc icebp movsl fwait neg cmp jle xchg xchg inc fcoms mov out mov sbb mov rolb sbb push and mov (bad) (bad) dec xchg out sub shr push negb test rolb pop mov add (bad) (bad) (bad) lcall int (bad) (bad) xor scas push fcmovnbe jbe ds mov (bad) pop lcall aad pusha cmp lret mov (bad) jg mov mov lds sahf add push in jmp pop jg pop inc mov mov sub sub inc insl push or push std call mov into (bad) arpl sbb add xlat dec sahf (bad) (bad) (bad) mov adc shlb js inc inc fldt out aas push jb pop insl adc mov cltd lock (bad) (bad) (bad) incl (bad) or clc push inc and aad jb sbb lock dec mov cmp push in xlat fucomp sbb rclb int3 int3 (bad) imul mov jecxz (bad) (bad) stc cmp loopne cltd jl cmp or fdivs imul out std (bad) (bad) mov jne cld sahf test mov mov out aam pop int js xchg (bad) fisttpl loop push xor push lods (bad) push ljmp mov cmp (bad) or sbb insb aaa movsl pop jmp sub pop (bad) (bad) (bad) inc cmpsb pop aaa jb and outsl xchg mov cltd jle,pt es aas lods mov jmp in out (bad) (bad) inc sarl pushf push dec outsb push daa push push popf ja xchg enter addr16 icebp test sar (bad) lcall sbb addr16 xchg jo jne and xchg jmp fs and insb or (bad) pushl sahf addr16 or pop mov and ret in mov out imul push adc test sub loop mov (bad) (bad) (bad) pushl mov add and pop fsubrs aaa xor mov (bad) (bad) (bad) lcall mov mov mov push jecxz rcrl push addr16 fadd outsb mov push mov add fmull shrb cmp fs ret dec mov xchg addl pop push outsl mov cmp out (bad) fstpl jmp jl xchg (bad) (bad) (bad) pushl pop outsl imul out mov bound outsl test nop les movsl xchg (bad) push mov ret inc sub inc loope cmpsl fisubrl pop jne popa jo dec jecxz xchg fcomps or cmp hlt movsl repz icebp inc test or sbb push add mov push pop fs pop (bad) (bad) (bad) call cmpsl (bad) cmc xor aas xchg subl mov cmpl (bad) (bad) (bad) jmp jnp mov inc add popa insl dec lds lock xorl ret pop inc or femms (bad) mov inc cli (bad) repz ds (bad) (bad) ljmp sbb cli add jecxz pop xchg ficomp shrl pop mov mov mov inc bound (bad) (bad) ljmp cmc fs sarb loopne inc mov jp popf pushf std jo jp test test (bad) incl sub mov cmpsl jae jno leave das dec jbe mov sbb loope mov ljmp shll aaa shr stc sub cwtl (bad) dec add out pop sbb pop (bad) (bad) (bad) push pop xlat or pop stos mov mov test add out int mov in and push fldcw sub ljmp mov lret ja or push fsts pop add test cld pop loopne xchg std xor pusha adcl enter push jle inc or pop or das xchg in call lcall cmp out jbe pop lods loop pushf or or push cs mov xor pop inc gs jl inc xor loope mov arpl adc cmp add push jnp mov fcomip (bad) (bad) fsubl cli out fsubrl and pop jo loope pop loopne pop fdivs call dec or sbb loopne mov or jo dec jae jmp (bad) xchg cmc push add sbb pop jmp (bad) and cmpsb pop mov add (bad) incl fucomi movsb repz fmulp ret fnop dec shrl (bad) lcall adc dec add pop jg int fwait jne jns jne sahf sbb iret mov jmp and sbbb dec stos loope ljmp jle (bad) push mov mov hlt or lods and (bad) mov lds stos ret pop and in mov fwait (bad) dec ljmp cmp mov in cmp (bad) mov loop (bad) (bad) decl pop cmp aaa dec (bad) fwait add pushl jecxz ret loope (bad) das inc pop gs jae test xchg sahf dec fdivr (bad) (bad) (bad) mov fcmovnb xor mov xchg mov pop nop (bad) and cmp in add lcall inc loop sub sub loop add jo data16 or fdiv in xor ds (bad) scas add (bad) jg repz stos xchg push es jns xchg scas std popf mov pushl jecxz xor sub pop int3 jne in adc sahf insb dec js sub xchg test incl fisttpll cmp cltd in xchg and push arpl adc jno jl sti (bad) (bad) (bad) decl pushf test (bad) (bad) shll mov fildll adc dec sarl addr16 dec or (bad) pushl cmpb adc test fnstcw gs (bad) lcall setp aaa enter in xlat leave mov lret movsb cmp dec (bad) (bad) (bad) (bad) in bound repnz sbb rcrb out nop out mov inc lods sub (bad) frstor out movsb xchg (bad) ds mov int3 dec adc (bad) rcrb cmpsb int pop leave fcom lret mov add outsl clc (bad) cmp dec lcall adc mov lods das out enter (bad) call cmp mov aam sarl jle (bad) mov push insl pop int3 mov (bad) (bad) (bad) fistp clc (bad) loopne push push xchg xchg or mov std pop jl push jae icebp ja (bad) jmp add out push movsl jmp jle mov (bad) jp insl pusha xor mov push mov iret sbb popa test inc push fisttpl ror xor inc mov loopne stos push adc (bad) (bad) lcall fsubp or cmp mov xor stc pusha mov jbe loopne lcall cltd aam nop idiv cmpsb das clc push insl xor loopne (bad) call and sbb mov dec fwait mov lret (bad) pop enter bound mov shlb mov (bad) (bad) ljmp cli shlb lret sub xor mov sti into add fdivrp aad mov mov (bad) (bad) jns stos fst mov ss scas mov xchg sub and je ljmp inc es dec adc bound (bad) call cli lcall and push xorl (bad) (bad) (bad) in scas ds das repz push or xchg xlat mov jns mov ds (bad) (bad) (bad) ljmp into movsb adc popf test cmp pop ss mov inc push sub mov and mov ja pop mov (bad) (bad) fdivrp xor call or ret jmp mov daa (bad) shl inc shl inc cwtl mov pop mov (bad) (bad) incl jl pushf cmp in sti mov mov mov in out lahf inc xor test or (bad) incl andb arpl cmp jg (bad) (bad) ljmp (bad) xor jle (bad) cmc mov mov dec xchg (bad) (bad) dec mov ret cmp push lods sub loope outsl dec xchg cwtl mov sahf not inc ljmp call mov adc pop stc into add adc in clc xor (bad) (bad) jmp hlt hlt fdivs cld dec fisubrl addl jo mov mov pop adc (bad) (bad) cmp imul sbb movsl adc imul inc pop add pop mov (bad) (bad) jle inc pop cmpsb imul (bad) adc call (bad) (bad) decl jae hlt (bad) in pop jbe push mov leave shr mov cmp xor cmp popa dec call adc mov js shl fidiv ret (bad) (bad) (bad) mov movsl ds arpl adc push nop xchg sub enter (bad) jg icebp sbb push push std iret cmpsl jecxz push arpl (bad) push push insl jl clc inc jbe popa xchg repz inc daa nop fisttpll dec sub je test movsb js sbbb fnstsw (bad) mov inc xor jbe (bad) (bad) inc rorb mov arpl mov in mov movsb jno sti aaa mov mov adc stos mov jne (bad) (bad) (bad) ljmp sbb leave xor ljmp movsl adc jo or sbb lea (bad) (bad) jmp inc loope test pusha pop mov adcl jmp fldt mov adc call pop xchg mov adc lock clc insl aaa lret in push inc cwtl dec cmp mov mov fidivr and mov cltd jns gs jecxz dec (bad) jg decl dec xor jbe inc test out aam scas repnz scas jne (bad) cmc mov out (bad) (bad) ljmp inc or push and (bad) jbe inc jg or push add or (bad) cld jecxz cltd inc and cmpsb dec mov daa push and hlt (bad) mov jle inc popf mov jecxz lock (bad) (bad) (bad) (bad) mov bound mov xor adc in mov in into cli in out xchg (bad) push jnp rorw fs negb insb hlt lds mov dec xchg mov les lods push inc add jmp into mov out and (bad) ljmp mov orl test (bad) mov (bad) (bad) (bad) mov das inc push sbb insl fstl mov pop data16 ds sbb jl mov xchg daa aas outsb scas in fdivrp fsub fs scas adc gs lods outsb adc ds pop (bad) (bad) (bad) lcall cmp stos xchg lods mov test mov cmp jecxz arpl (bad) (bad) call dec push outsb push sub ljmp sbb push cmpsb mov push pusha (bad) fcmovbe cmp xchg lcall pop fild out fadd sbb ljmp jbe stos push (bad) (bad) fcomi add cwtl pop test dec lret dec (bad) dec sub scas inc aas adc lcall mov xchg sbb stos fisubr adc jns movsb int3 icebp (bad) (bad) (bad) lcall mov push cld xchg loop xchg xchg enter jge gs jne scas addl ret mov (bad) (bad) ljmp mov xor fcomps mov cmp push push gs (bad) (bad) (bad) lcall mov add adc icebp adc imul in xchg out xor decl mov ss pop cmp mov push (bad) cmp add sbb jmp xchg in jp icebp je lea icebp sahf pop out test pop xchg loop js popa call loopne test add pop lret cwtl aaa movb nop lock jns js sahf test push test mov xor and xor adc fidivr and ret (bad) (bad) fsubrl sti inc dec push aam mov inc mov outsl inc jmp aam call imul cmp xlat inc inc into dec je and mov cmc inc outsb push pop das jne push sub pop sahf xorb inc sub lds cmp fisttpll outsb cmp mov xor (bad) (bad) call inc mov push adc push pusha enter in xchg xchg stos cmp call or test mov (bad) call loop faddl xor mov lods daa cli xor das out fcomip (bad) pushl mov pushf mov lods add hlt lock (bad) call sbb cmp mov mov dec inc push mov (bad) (bad) (bad) incl fistpll push add mov scas (bad) mov xchg loope mov cmc mov (bad) jmp (bad) loopne fstpl sub addr16 fwait sub pop cli dec and (bad) (bad) (bad) (bad) mov jecxz or mov fmull xor int mov add (bad) lcall (bad) jae xchg fiadd cs xchg (bad) (bad) (bad) aas pop aas mov andb mov sbb jl hlt inc fsubrp lret adc (bad) (bad) jmp lea jl leave lcall out (bad) scas fsubs mov or sar (bad) incl add sarl cltd je out cwtl xchg and popf fcmovb shrb enter cmp xchg sbb dec jno xchg sub (bad) (bad) (bad) mov dec pop fistpll stc insl push xchg lock xchg push jbe dec add pop mov (bad) pushl xchg (bad) cmp fldcw dec mov push je js fnsave push and mov ds jmp pushf push sub hlt pop (bad) add jmp dec iret test xchg inc pop dec mov xor xor jb pop lock cmp mov stos leave xchg fdivl mov in cmp subb lcall dec mov dec iret xchg push es pop ret jge jg push cmp jg lods xlat lea mov (bad) call das pop scas jecxz lahf xchg cltd xlat mov notl inc call cld incl aaa daa mov add pop outsb (bad) fwait push ret jp fistl rorb or xchg outsl or out mov pushl mov int lahf mov xchg sub mov or (bad) decl add mov pusha loopne jmp cld mov or mov movsb sbb push pop mov in loop imul (bad) decl pop push sbb push test loope out mov stc add mov xor adc cmp (bad) (bad) (bad) decl insl dec outsl mov push outsl mov jno push pop mov in dec mov data16 push cmp sahf hlt orl mov fstl push addr16 js fs (bad) (bad) (bad) call add xchg into push pushl ja inc mov pop call data16 imul aaa movsl sbb (bad) (bad) (bad) decl sbb ret push loopne xchg cmp sahf mov adc mov scas or pusha popa (bad) (bad) (bad) incl jmp nop xchg sbb add (bad) addr16 int3 fiaddl mov lock mov (bad) mov mov icebp push test test fist sub sbbl (bad) and (bad) out cli mov xor push push lret fidivr arpl cmp leave or mov xchg (bad) (bad) (bad) (bad) jmp out inc xchg sbb pop shrl mov push sbb imul push (bad) lret (bad) (bad) (bad) (bad) cli (bad) sbb and or daa loopne dec cmp int3 mov imul iret mov movd decb (bad) adc gs ljmp push lret sub (bad) (bad) (bad) jg out leave pop cmp add dec xchg mov cmp lock fstps in pop (bad) ljmp xchg or and push adc (bad) decl (bad) adc and lret test (bad) jns inc mov add sub icebp jbe dec shl dec insb (bad) (bad) (bad) incl fdivrs jl or repz popa xchg inc dec sti add lods mov sahf jb mov (bad) (bad) call push sub add pop sbb xlat mov test test lret cmovbe (bad) (bad) (bad) incl dec xor mov cwtl sub cmpsl loop mov js fwait pop loopne sub (bad) (bad) cmp jns pushf jmp stc pushf jnp stc or mov repnz pushl mov lcall adc sbb sbb sar cltd pop addr16 hlt lret jb or mov ss (bad) (bad) dec mov mov adc test leave cwtl (bad) mov lods xor pushl aam pop mov mov scas adc test das enter xor or lahf cmp sbb imul loop dec mov shl ret push xor pushl ret mov repz sbb mov cmc or repz (bad) aam xor mov or lcall push cld (bad) (bad) dec int3 sbb pop jbe scas jno in mov in push jmp cwtl sbb xor inc (bad) jg add sti dec aaa les lds out xor and jbe adc mov lret push outsl insb pop out mov xchg stos in movaps test mov insb outsb enter xor rcrb adc push pop jnp je xchg (bad) jo je test fdivrs push mov adc sub sub outsb lods test lret ss xchg push (bad) (bad) ljmp repz or inc pop (bad) mov inc lock cmpsb sbb dec loop lods adc xchg inc sarb (bad) (bad) fildl pop push mov xchg push pop or dec rclb rolb hlt fiaddl mov incl or sbb ficom outsl or jg decb xchg adc cmp lret (bad) fistpll mov aas dec sahf adc push mov les decl (bad) ljmp pop fld xor jg sbb pop jno (bad) push push jne hlt add (bad) (bad) decl int dec ret sbb xchg popf in push push ja sub xorl (bad) ljmp rclb ljmp (bad) mov adc adc lods mov (bad) fisubr xorl ljmp (bad) push jnp mov fldt (bad) (bad) (bad) jg stos es sbb ret rcrl inc add fisttpl fadd fbld (bad) (bad) fistl and inc inc sbb mov pop xchg cmp lds adc mov push inc push int sbb push pop jmp adc jb and or insl jp scas arpl or sub jge sti jb jle push mov and je (bad) (bad) (bad) decl inc xchg add sahf mov hlt sbb xor loop clc mov adc ret jbe (bad) (bad) pushl jmp push pop das mov mov add ja xlat jg inc mov (bad) call scas enter sbb fdivr jbe popa in fild imul and inc insl xchg icebp (bad) (bad) incl cld js incb lds xchg lock mov xchg mov aad xorl loopne ja cs jg ret (bad) (bad) mov sbb (bad) (bad) pushl int3 insl fbstp jb xlat mov mov xchg dec scas shll (bad) pushl cmpb cmp cmpsl mov clc push (bad) call repnz (bad) (bad) (bad) jmp xor jmp cmp (bad) mov mov out in xor incl sar push ret ljmp add mov outsb repz pop inc cmc xchg in fisttpll sbb (bad) jmp inc sub mov add rcr and jae inc adc push cli (bad) (bad) jmp lcall movsl inc sti mov jle (bad) ljmp test jmp pop notl mov data16 sub (bad) jl push push (bad) cmp fisubl call enter sub imul clc jno lods xchg (bad) jg ds adc add xlat or sbb pop jns (bad) (bad) (bad) (bad) stc pop pop push adc pusha gs adc cmp xchg pop (bad) (bad) pop pusha adc sbb rcrl (bad) (bad) jg hlt add ja das xchg mov cmpsl jne ljmp (bad) (bad) (bad) aas pop pop xchg lret insl inc out push push outsb cmp jmp xchg mov (bad) pushl adc push mov mov pushf cmpsl clc popf adc pop sbb pop daa jmp (bad) ljmp je outsb incl loope xchg jno fdivrp dec dec ret pop inc push pop enter stos fs test aaa and bound (bad) (bad) (bad) (bad) cmp jno rcrl (bad) mov dec (bad) sub in jmp out cli (bad) xor jbe leave aam (bad) (bad) (bad) (bad) stc mov push sub pop adc push sub pop in jmp (bad) (bad) (bad) (bad) cmp les enter aam mov push ja aas pushf cmp (bad) sub shlb ds into add (bad) jmp sbb sbb fidivl daa cmpsl pop dec push (bad) (bad) jg aad push xchg fisubl addr16 jmp in mov fucomip mov cltd dec (bad) (bad) lcall push es jbe inc std out push aam mov aas popf pusha mov lods dec in decl add (bad) pushl jmp cmp push mov mov incb ljmp rclb scas sbb sub (bad) (bad) (bad) (bad) stc (bad) aam scas mov cmp arpl inc jnp pop dec jecxz push mov sub add cli mov xor (bad) (bad) jg mov jg das stos rcrb xor inc cmp orl ljmp dec vpmulhw das in xchg cwtl mov lea xor ss aad popf (bad) (bad) (bad) (bad) ljmp (bad) icebp and pop popa jge (bad) xchg mov inc mov add or (bad) decl sub cmpsl lcall sub outsb shr mov (bad) lcall push jae push addl mov popa out leave stc jae (bad) decl sahf movsb in jo jb ret into (bad) and clc (bad) jmp cld fldt xor arpl lret test dec adc jp and (bad) jg fidivr imul jne add jmp insl fildl xorb (bad) (bad) cmp lds dec cwtl mov cmp cltd mov push ds out adc ds pop popf (bad) adc (bad) int mov test dec or sub (bad) inc lock cmp mov (bad) xor pop stc (bad) push popa mov jns jge stos out shrb (bad) jmp lahf std lret pushf lods popa inc xchg out pop inc in test ds in and xchg xchg loope jbe adc adc orb (bad) jmp xchg sub and xlat add (bad) ljmp push mov inc push or or cwtl xchg outsb in call lret (bad) (bad) (bad) ljmp mov lock sbb mov xor push movsb scas sub mov shl sbb bound jmp mov jl lret cmpsb movsl ds jb mov jmp sub mov pop and and lcall ss mov inc ds iret enter jo push (bad) (bad) (bad) inc pop adcb pop push ljmp mov cld test lods inc loope (bad) (bad) decl push in adc mov pop mov sub call push fsts (bad) (bad) incl and mov inc add mov mov mov call dec std ljmp mov jno dec out jp inc mov decl xlat push xchg jmp inc insb pop pop sbb dec mov mov (bad) call adc or mov ds cmpsb add rcr bnd ds (bad) fcomip dec stos jnp mov test mov cmpsb push lret mov sub (bad) (bad) js cmpsl xchg les rcrb and in push cltd (bad) (bad) fist fiadd adc or jb push (bad) clc cmpsl jbe movsl sub (bad) (bad) (bad) (bad) js jle cli adc aas ret cwtl scas or dec es into fcmovnu fcomps call jmp mov inc shrb insb enter add and xor in cli (bad) dec mov out rorl push test lea inc and mov (bad) (bad) incl (bad) sub jns cmp push (bad) in shll (bad) (bad) jmp cmpsl lods adc ret jmp ds xor movsb jge push mov stos insb mov addr16 cs (bad) (bad) call and and cltd sub jne push loopne aad cmp lea add ljmp or xor out call cmc mov pop cmp popf (bad) jnp (bad) (bad) (bad) call movsb dec sbb std popf inc mov aas es pop xchg test mov jmp into inc sub inc push (bad) (bad) (bad) (bad) call mov push xor (bad) pop adc mov aaa cltd jns cmpsb bound lahf mov mov jge inc push int3 add dec out push pop sub das js icebp (bad) lcall fcompl fwait xchg lret out or xchg ds cmpsl push aam pop push sub (bad) sbb push pusha (bad) (bad) (bad) (bad) out fisubr cmp lahf icebp mov pop stos push mov xchg int3 (bad) jmp dec cs cld jmp sarl sbb les adc xchg repnz les jo iret dec xlat faddp push (bad) (bad) mov mov adc cli stos jle gs pop das imulb or jmp les scas lcall jo jecxz ficompl and mov cld lcall mov jns (bad) int3 (bad) (bad) (bad) jg jl int3 rcrl stos jg popa cmp (bad) xor mov fbld xchg mov lahf inc (bad) (bad) incl ss cwtl aaa mov pextrw jo out (bad) incl cmc pop xchg loopne repnz lcall out cmc (bad) lcall ljmp ds clc out xlat insl (bad) leave lds (bad) (bad) (bad) call dec out (bad) les push aad push lcall iret mov adc incl pop cwtl lea inc xchg dec sbb mov sub ds shlb (bad) ljmp inc aam and pop int3 insl ret test (bad) mov (bad) (bad) inc add into das cld mov pop aaa or rcl mov das scas test add fist (bad) (bad) lcall (bad) sub mov pcmpeqw jle (bad) frstor jae aad jl sub jg decl loop in xor or (bad) insb add in jle push mov pop push and addr16 ja or mov jb jge jg xchg stos (bad) (bad) data16 faddl aas test xchg pop dec (bad) dec sti mov pop ljmp ret aam mov push add fstps (bad) jg (bad) repnz or or adc int loope xor adc and in into jae or in dec sub sarl rcrl jmp push ljmp sub cmpsl hlt sti or sbb push push (bad) (bad) (bad) fistp (bad) adc push xor cmp pop pop sar aaa adc inc in adc push or jns mov cmp decb negb cltd mov (bad) (bad) ljmp lret sbb mov test mov jge pop inc fisttpll sub inc cli (bad) (bad) lcall popa mov in and jbe loopne in add dec (bad) mov aad test insb (bad) call push push push push insb and xchg sbb loope shl loope xor std dec hlt stos inc cs fs sub (bad) (bad) ljmp (bad) push xor test fdivrs test sub jns (bad) (bad) (bad) pushl and adc mov pop lret dec std mov ja dec inc or mov incl test mov mov jae movsb inc pop dec dec mov jo push sub es pushl and push xorb (bad) (bad) (bad) jg test mov push fildll xor fwait cmp inc in xchg (bad) (bad) pushl stc pop push rcll or sub push loop push cmp jbe or (bad) decl sub je jbe out jecxz cwtl or dec jnp sbb (bad) (bad) (bad) decl pop sbb sub out mov ljmp nop jecxz sar mov push add pop rorl push popf jge jmp jb outsl ss sti (bad) (bad) (bad) (bad) std cmp (bad) mov std dec shll mov test mov notl (bad) (bad) jmp adc dec mov std jl test push shrl mov cld js (bad) (bad) (bad) (bad) jge dec leave ret test out mov mov aam shr daa mov push stos pop (bad) out scas xor jg int3 add sub movsl daa mov (bad) (bad) mov aad roll xchg fisubl and ficompl push and fdivrl jg (bad) dec and lds std lret js push adc ds push (bad) call in out and loopne xchg (bad) lock mov sub sbb fdivr (bad) (bad) lcall pop aad or jge mov (bad) mov mov xchg xchg xchg xor (bad) (bad) (bad) call rcrb inc repnz xor xor dec arpl mov movsb mov or inc and (bad) call sbb aaa int std inc mov iret ljmp cltd sub (bad) call jle,pt out and cmp bound (bad) (bad) (bad) decl or and das in mov sub jmp and xchg pop (bad) (bad) (bad) pushl sub jae fstps or mov icebp jg loop dec or xchg roll ss in fidiv jmp repnz add iret cmpsb ja add jmp decl sarb dec ljmp mov add push add lahf std out imul xchg (bad) jg aad mov xchg mov add aas mov loop rol jmp mov inc in xchg sub dec repz add std push les push iret (bad) or add xlat ds (bad) (bad) jg push inc aas mov inc decb xchg es inc jnp mov sub adc call cld mov in mov (bad) xor call cld cmp mov (bad) jmp xor fidivr in or je stos (bad) (bad) mov dec fidiv lock insb and mov aam popl inc movsl dec popa mov mov xor push insl out adc gs pop fs dec (bad) (bad) (bad) cld inc (bad) pop scas add jo test dec cmpsl xchg movsl subl bound movsl cmp pop out test (bad) xchg sbb (bad) mov lcall js lret imul adc sub jp pop sbb inc popa xchg clc (bad) lcall loop xor pusha cwtl call xchg out (bad) loopne (bad) jg fisubr cmp or mov mov clc (bad) (bad) call rorb or dec xlat pop insl roll jle add notb dec iret (bad) incl sarb sub push cs outsb sbb andb std (bad) (bad) cld mov (bad) pop lods dec cld cmp aad mov and movsl push (bad) cmp shrl insb andl (bad) aaa pop adc add mov pop mov xchg ja ljmp cwtl or pop jae cmp out adc mov sub push and mov or pop jg and adc push cltd stos push xor nop or xorl jne mov lds (bad) decl lret gs cmpb cmp cltd jo push imul cli (bad) (bad) fstpt mov add pop add aas mov push mov sub bound idiv jmp inc insb cmp mov or in sub test lods pop ss jp imul add sahf gs ds jbe movsl mov (bad) (bad) inc fwait aad mov dec lea lcall sub rcll xor clc (bad) mov jmp inc data16 in cmp adc ja das push cmc out mov xor mov cmp jno aas jno (bad) dec inc fnstenv inc jne jnp fdivl ljmp test bound push mov xor inc pop pop sub push jl push aam mov inc inc push cmc (bad) jmp sbb movsl sub test inc adc mov (bad) decl mov jae xor repz dec dec (bad) (bad) pushl adc cld in and imul pop mov insl lcall xchg xchg push pop mov outsb jle xchg sub lret sub std dec loope cmp fimul test in cli (bad) (bad) aas rorl inc loope fcom stc insl aad aaa mov fmulp mov stos lcall ds sub sarb loope push scas imul or and es (bad) loop ss aas fwait ss leave iret sub daa xlat out push push fadds std (bad) cmp test push push xor xor mov adc (bad) jg sarl (bad) (bad) std js sub or cmpsl cmp mov cld scas cmp dec (bad) mov jecxz (bad) (bad) ljmp mov (bad) mov adc or mov pop mov out les decl adc (bad) mov adc cmp add and (bad) (bad) (bad) (bad) fsubrs jbe into cmpsl mov inc pushf int push dec (bad) cltd mov pop addr16 mov push fisubl jo jo lahf scas cmp out cmp hlt adc inc mov sar (bad) call cmpsl rcll test pop call popf sahf xor xor test incl sub inc xchg fistpll mov jge jmp mov popa in add inc ja sub (bad) xchg cmp lcall and cmc sbb loopne pop adc mov lcall jbe xor push adc xor push add loop adc mov call and inc push rcrl cltd push push sbb decl xchg mov push mov and hlt arpl aas cmpsb scas add or dec push (bad) inc push jecxz and fcoms dec push push jo outsb or cmp ret in dec xchg sub (bad) call aaa mov mov jl lahf dec and dec mov add mov ror inc inc (bad) ret clc (bad) pushl mov cs lcall xorl or test enter je not rcll (bad) call xchg xchg xchg xchg jecxz sbb pop (bad) mov xchg push rol in and (bad) jmp fstps or sub hlt scas (bad) mov xchg faddp xchg mov orl and (bad) (bad) jmp lods stos add pop aas rcll js jnp xor dec push or (bad) (bad) mov mov lret int pop (bad) std dec inc adc in into cmp movsb adc ds orb sahf xchg (bad) imul or xor adc inc mov pop ss ljmp movsb adc xchg mov scas mul mov pop js (bad) call mov fldl (bad) fwait leave into jge sub xor cmp dec aam push pop mov push and inc ret pop cli ret pop gs aas xor decb rcrl fldl jg add sub jl fnsave dec mov (bad) (bad) (bad) call adc ret lods inc outsl int3 sbb mov test and es (bad) (bad) lcall scas mov pop fsubr aaa pop (bad) or inc cltd out inc cli iret xchg out xchg jno (bad) (bad) ljmp aaa shr add pop add decl fisub lahf sbb xor xor das add and jg sbb sub (bad) (bad) jmp cs pop jmp sub ret (bad) lock lret jg mov dec ss (bad) (bad) ljmp into sub cmp int mov push cmpsl jge push into jo repz (bad) cld mov (bad) (bad) decl bound inc lea pop dec dec iret icebp stc dec sbb or aaa inc (bad) (bad) (bad) (bad) cmp mov and cld push push ret jmp and and ret adc cs (bad) (bad) (bad) incl mov xchg (bad) mov mov sbb test test inc aam inc jp out cli scas adc (bad) repz cmpsb pop nop (bad) (bad) ljmp push push divb or or mov aam es add (bad) jmp daa jbe test vmwrite push leave lcall dec loopne jl ljmp mov pushf in lds cmp pop (bad) jmp call lahf sbb out into add mov and mov pop mov outsl pop xor (bad) jg mov fwait sti insb fwait (bad) mov jge mov inc push adc (bad) inc stos sub stos ljmp sti lods xchg aam lock (bad) (bad) ljmp ds push (bad) cld mov inc (bad) inc pop xor leave sbb lcall dec (bad) out ss mov lret xchg nop loopne lcall sub test inc sub (bad) xor push lock stc add shrb mov cmp in jg pusha ds icebp push bound jne aas mov push mov pop and (bad) or cmc pop jl add jo int3 lret jp (bad) dec rcrb dec adc fidivr sbb lock jae sub fsub fidivr pop popa mov (bad) cld pushf xchg sbb add (bad) (bad) ljmp mov lods mov or adc xorb mov (bad) mov mov (bad) lret ret enter cmc (bad) (bad) mov jbe mov (bad) push push je gs lcall test cmp (bad) jge push jnp lods xor rcr ss int adc sar and mov (bad) lcall or push nop cmp ficoml mov dec bound cltd mov xchg xchg scas mov ljmp in push lods add aas popf in call sbb xchg ss and lds pusha jge fdiv pop fwait push sbb inc mov int push lret xorl (bad) jg ja dec shr das scas cmpl ror and ds add jg push jle mov or lret fnop insl sub xchg movsb lcall or imul xchg sbb decl out ret inc fiadd sbb lret sub (bad) (bad) (bad) call cmpsb cmpsb push je sub pushf or lods pop sbb inc jbe loop pusha jb inc push hlt xor cld (bad) (bad) cli inc add jb (bad) hlt pop leave rclb imul xchg pop jb xorb (bad) (bad) (bad) call pop push sub sbb pop mov bound mov sbb or xor sbb push lcall xchg stos adc jg push pusha in dec insb push leave sbb (bad) (bad) lcall add xor out movsb stos int3 mov data16 enter lret xchg inc push lock (bad) (bad) call or pop add ret mov cld std mov stc lea mov (bad) mov insb mov sub stos loop in xchg adc mov xchg into pop jmp outsl (bad) (bad) call pop shlb sbb fidivl int cltd jb,pn mov xor arpl loopne mov lods stos popa xlat xchg cmp pop popf jns sub mov jne (bad) (bad) pushl cmpsb sarb sahf in outsl lret xorb dec repz imul (bad) decl xchg pop adc sub mov jne js push push or (bad) dec (bad) (bad) (bad) lcall inc repz insb mov cld aam pop or repz inc mov insb dec les or out aas mov adc aaa or orl shlb loop (bad) push or sbb jge and sahf push divb or rcll outsl adc push mov ret lcall popf mov add xchg jae pop decl fnstsw bound aas pop (bad) (bad) mov xor add invd add fiadd aaa out xchg xor (bad) pushl call pop js and (bad) jl popf out jl mov (bad) (bad) decl and xchg pop (bad) cld cmpsl out scas push mov add dec sti or adc pusha aaa sbb (bad) (bad) decl movsb icebp sub and shlb loop xchg mov push rol divb xor je std pop jns loopne insl cmc inc jge fmuls or xor push (bad) (bad) call dec push xchg pop pop fiadd jle jl pop jmp call mov mov shlb fldcw outsl jp adc ljmp and mov rorl lcall jp mov test (bad) (bad) dec xchg ficomp dec ds jl push popf push and bound cmp aam xor xor pop dec jge ljmp lahf adc xlat xchg dec lock (bad) sub (bad) (bad) (bad) call mov or lahf jae cmp jecxz adc or xorl xchg push scas out repnz cld out xchg cmp (bad) das mov sahf (bad) rcrb ret xor call mov sbb testl int (bad) (bad) jmp insb xchg push or nop fstps ds inc xchg pop cwtl push addr16 and dec cmpsb adc cmpsl icebp outsl push decl cli inc nop jns movsl lods sub clc mov int lcall cmp pop jnp mov push test jns sbb loope (bad) out and test mov sub cld enter mov mov clc (bad) call int jo mov fcomi cmp fs cs pushf fstps sbb (bad) pushl mov push into push cmp add and arpl push add jno add adc (bad) (bad) js iret shll testl cmp sbb test les int aam sar (bad) (bad) decl imul push mov movsl mov test lock mov cli or mov (bad) call xchg or adc in test adc sbb rolb xor (bad) (bad) jmp nop add or push in or push mov mov popf (bad) (bad) (bad) pushl in rcrl pop add pop jl jle xchg ljmp mov inc cld decl lods pusha cld xor rolb (bad) jg dec ror test insb cmpsl xor add xor and (bad) (bad) (bad) fbld xchg in pop inc ds imul rcrb (bad) call icebp (bad) (bad) lcall pop or sub lea lods loope in rcll inc cmp mov mov pop bound les loope sub (bad) jnp pop nop sar jmp clc dec push (bad) or js (bad) (bad) (bad) decl jg fs sbbl sub sbb jge lock jg test xor inc clc (bad) (bad) call adc xchg stc f2xm1 mov jge adc add into mov jg sbb mov flds popa mov and ljmp ljmp pop lods add or add ljmp jae cmc xchg push cmp (bad) (bad) incl pop add movsb insl jnp mov dec xlat push adc push jns loope adc jl lods (bad) (bad) ljmp mov push stc scas sub mov inc fstpl hlt dec movl jge (bad) push dec mov sbb pop enter out lock loope ret ds (bad) pushl and and jns xor mov (bad) sub push stos xor (bad) call and out inc paddw adc loop or addr16 cld insb (bad) (bad) mov push lods lods jp stos xchg fsubrp push pxor jmp outsb add or ret pop inc push or sub ljmp lcall xchg fisubl inc movsl xchg lcall inc mov es scas cltd jmp xchg dec (bad) (bad) (bad) dec popf fild in rorb movsl mov addr16 mov xor hlt std adc (bad) (bad) jg rcll cmp sbb inc cmpxchg dec test cmpsb xor dec cld sbb aas jl,pt inc inc dec jle add (bad) incl sub cwtl adc imul jb jae sar jg mov mov mov lret dec mov and cmpb cmp (bad) (bad) (bad) incl arpl mov mov fsts inc push fwait adc xchg je div cmp (bad) (bad) decl xor jae outsl rcrl out cmp in pushf nop fsubp (bad) mov (bad) (bad) (bad) call sub nop nop dec push sbb mov iret int inc dec dec dec lods add inc imul (bad) lcall loop leave sbb cmpsl mov lcall cwtl inc sub jmp je mov ds (bad) (bad) (bad) fsts jp (bad) pop xor pop push dec xor mov push dec scas loope and or lcall pop scas jmp pop ds (bad) aas dec jmp repz mov movsl mov dec idivl sbb ret hlt (bad) (bad) pushl lds outsb adc es and adc rcrb sbb mov fist xchg cmp pop and or int aaa (bad) in ja inc ds dec sbb (bad) (bad) call or adc or fcmovne xor sub outsl xchg xor pop aam xor or inc mov (bad) decl inc xorl mov add push cli cmpsl push and (bad) ljmp jg std lcall xchg inc xor out popf outsl leave std mov (bad) (bad) push mov xlat or loopew movsb imul push push add mov icebp call pop adc in out outsl out or (bad) (bad) lcall fstpt cmpsb inc jne mov cltd pop cld add imul cld jg xchg jae,pt rorl mov lods mov xchg adc (bad) aam in push ss ror xchg xor mov or dec xchg rcll lcall and imul test mov mov mov sbb pop (bad) (bad) (bad) (bad) (bad) jmp data16 pop jno insb push mov (bad) sahf or xor jle mov (bad) incl and or test stos sub cmpsb push repnz sub (bad) (bad) fbstp xor (bad) inc aas cmp sbb leave mov mov adc lcall sbb and jmp ljmp (bad) decl jmp sar out dec std inc pop mov mov data16 fidivl dec cmp xlat push (bad) jg lcall in mov in incb cmc inc jno mov dec lret pop imul (bad) jmp in (bad) and rcrb mov add xor mov fbstp cmp icebp (bad) (bad) (bad) cmp push in fstl cmc fnstenv mov sbb lock in mov jo (bad) incl mov int int3 sbb or jb jnp (bad) ljmp mov push lret fnstenv and das (bad) jmp ds cli cmp out in lahf pushf pop outsl (bad) (bad) mov mov (bad) mov rolb pop daa xchg or and addr16 (bad) (bad) (bad) std xchg mov dec mov xchg mov xor push test mov xor mov call or cmc mov jge or mov nop pop (bad) mov pop sub ja aam xlat pop cmp cmc adc mov xlat jb push pop dec push int3 and pushl mov lret cmp or aam xchg pop gs loope ss xchg imulb shl or fwait xchg (bad) jmp dec add fnstsw rclb (bad) mov cltd into inc add das cmp lret push (bad) (bad) aas xchg pop sbb clc xchg enter fisub test mov and mov sbb cmp mov inc inc push ret lahf adc (bad) (bad) (bad) jg lcall cltd and sub mov dec add popa cmp (bad) (bad) call xchg dec mov pop adc cmp sbb cmp pop push lret lea (bad) decl call xlat call adc adc daa or les jbe (bad) (bad) jmp xchg adc ffreep icebp mov push push cmp pushf adc jp mov testl ljmp or hlt pop xor into or enter jg insl cmp xchg sahf mov lods dec mov mov inc and incl scas sbb add (bad) lahf xchg leave fwait rcll in cwtl (bad) (bad) (bad) call xor cmp and imul movsl and cmp sbb push stc in (bad) xor xlat push lea jle push (bad) (bad) (bad) ljmp add (bad) incb sub pop push ja xor sub pop mov (bad) (bad) (bad) call push cwtl jle jae adcb pop dec or ret pop push outsl and cmp lret fdivrs (bad) (bad) ljmp mov xchg sub jmp mov dec dec idiv loopne bound (bad) (bad) pushl in pop mov xor mov icebp mov and cwtl sub mov sub (bad) (bad) push aad mov xchg xchg push push addl icebp jne mov sti sbb xor push and sub or es fs pop ds mov (bad) lcall jl jns,pn adc insb push fcom dec jo hlt in movsb out sub (bad) pushl cmp push scas (bad) (bad) jle push mov popa lock dec (bad) (bad) (bad) pushl out int fwait (bad) mov in icebp negb or js sahf add lret jae push cmp add jg insl sarb and rcll imul (bad) (bad) out and movsb push test out loope jns test mov (bad) incl lods fisubl std mov jo je int3 sub stc jecxz loopne adc or and negl xchg ja or mov lea jbe (bad) (bad) (bad) call and (bad) sbb repz push jnp (bad) cwtl cmp fcmove aad jbe (bad) (bad) (bad) inc jge dec scas addr16 popf sti std pop adc or push jge add fdivrl xchg and (bad) (bad) decl addr16 cmpb leave xor adc in or popf nopl lods add sub (bad) mov shr jno xchg or clc sbb (bad) ljmp inc hlt jne jne icebp mov mov mov lret inc pop repz pop hlt (bad) jmp xor mull out jns jle ret mov es xorl ss sbb addl (bad) (bad) ljmp out xchg sub int ja in jns sub (bad) aam nop lret xchg ljmp mov nop jb dec jno pusha xor sub rorb adc daa sbb (bad) (bad) lcall test mov mov mov push lods rcl mov fs sti xor mov (bad) (bad) call xor or xchg mov outsb lods adc add mov mull adc ret arpl push dec cli notl cmp xchg add (bad) (bad) jp outsl pop and and sub rolb test sub cli mov int3 pop xchg jecxz icebp aam (bad) (bad) (bad) call adc add pop sbb mov push mov lock pop ret cwtl (bad) sub (bad) (bad) (bad) js repz mov sub mov test sub (bad) (bad) decl dec push les bound push outsb fs ss inc inc stc dec sti and adc jg loopne (bad) (bad) ficompl lahf dec pop es cmp sbb fwait cli push (bad) (bad) (bad) jg push outsl mov aaa ja das lods sarb adc ret lods lock subb push and pop xchg inc outsb (bad) in lcall insb cmc sbb cmpl stos pusha sahf scas (bad) (bad) (bad) call repnz and xor idiv add mov jge add stc add mov dec mov or fnop outsb pop or and or or adc fbld cmp (bad) ljmp iret fstl push xchg popf mov imull xor (bad) mov repnz push pushf xor (bad) (bad) (bad) decl jbe movsb stos lods sbb shr pop out push int3 lock mov mov stos ljmp jae jmp mov les add jbe cmpsb ror in in pushf mov leave or (bad) lcall and (bad) mov int stc mov cmpsb aad outsb mov inc (bad) (bad) (bad) incl daa test imul orl loop push xor mov cmp or lcall push insb sti cmp sahf mov (bad) sbb cmpl aaa cld ret sbb mov pop shll jb mov sar (bad) incl jp ljmp scas into movsb jb jp mov add (bad) jmp loopne (bad) mov xlat les flds (bad) out and xchg aad in adc (bad) cmp scas out fisttpll xchg dec mov (bad) and push push (bad) jne je sbb jle (bad) (bad) inc sbbb lea dec (bad) paddq out adc mov xor add pop add xchg mov mov and lds adc xchg (bad) decl xor sub push leave adc imull lcall (bad) (bad) ljmp inc inc scas mulb aaa pop push iret rclb cmpsb mov in sbb mov scas movsb add lret adc or movsl lock iret xor icebp call xor xchg sahf loopne ljmp pop and xor and xchg jmp arpl rolb rcrl (bad) mov cmc jnp mov aaa push pop or xchg ret dec push popf dec idiv aaa cld decl in xchg jle ds decl inc addr16 fs scas mov lcall cs cltd mov and mov cmpsl fdivr (bad) (bad) (bad) cld nop imul mov adc enter rclb xchg fsubl popl (bad) jmp or test nop xor mov jb loope je sbb mov push sbb add imul add sbb push fimul push pop stc je push in jl (bad) (bad) lcall cmp jp adc xchg add dec mov pop pop fild rorl mov jg decl dec dec dec insl loope cmp fdivr scas cwtl xor lea mov pushl jno (bad) mov pop (bad) mov ds (bad) (bad) (bad) jmp dec insl mov dec cmp pop mov xchg cmp push dec xchg add clc call loopne stc insb adc xchg mov mov repz mov sar xchg lcall clc push adc (bad) (bad) ljmp sub mov subl pop cwtl insl push mov xor pop test addl pop pop clc (bad) jmp fwait (bad) jp adc stos mov insl mov cs (bad) (bad) call mov sub adc mov cwtl jbe sub cmpsl mov (bad) mov clc cmp jne mov xlat (bad) sbb (bad) push iret aam fistl mov and fldt mov sbb int push push add es mov sbb leave dec (bad) out adc inc mov dec inc loop jo pop cmpsb mov push dec cmp repz pop mov push push push mov mov jnp sbb test (bad) (bad) (bad) call test into stos inc and stc fldl dec adc cltd ja shrb jecxz fwait xor mov mov mov (bad) lcall jecxz movsb es mov inc ss cmp popw rep push xchg sbb pop sub ds dec sar sbb adc xchg loopne lcall mov stc out pop clc dec std pop movsb cltd bound cli (bad) fistpll lea jle inc pop lret adc rcrl decl jmp in test test (bad) incl adc addr16 mov aam pushf jp stc scas loope insl jne fisttpll or lret shrb push sahf pop fnstcw sahf popf pop push adc rclb aam (bad) int mov lcall mov mov mov add aaa cli shrb jge mov cmp imul mov (bad) mov pop jge outsl jmp dec pop cmp movsb iret and add fiaddl xor pop into fldenv out mov inc nop call inc sbb lock xchg mov push jns pushf cmpsb inc adc pop or (bad) (bad) cld sbb nop mov xchg mov and ret jmp lods test cmp (bad) (bad) ljmp aaa pushf adc or orb mov je movsb push mov (bad) (bad) out lock iret inc ret sbb and mov inc pushf insb (bad) (bad) lcall aaa out add push or mov aas push mov xchg (bad) (bad) (bad) jmp adc cs pushf sti sub and xor nop cltd mov (bad) (bad) (bad) (bad) stc sub mov cli mov cmpsb std and out std aad cltd aam push xchg int3 mov mov pushl jg xchg pop push leave sbb scas (bad) mov sbb or mov insl lods lret jmp (bad) (bad) (bad) ds sbb lock and scas psllq loopne leave mov fmuls std mov ds (bad) ficompl daa adc aaa pop jle (bad) mul sahf lds lock mov in dec out xchg fcomps cmp lea shll mov (bad) std inc jno inc mov ret ret jmp add ret mov scas pop int (bad) lcall in xchg je push mov repz jnp pop cmp test mov or pop pop sarb in ds (bad) (bad) (bad) fidivrl or or loop adc aas ja jno mov mov ss push lcall ljmp mov lds enter ljmp divb cmp mov stc mov or or repz cmp inc jp inc and data16 shrb daa mov (bad) ljmp mov or clc inc outsb subb (bad) lds push cwtl fs inc add pop arpl (bad) (bad) (bad) mov mov sbb std xchg or (bad) lret rorl jmp hlt call xor ret dec jae stc add sbb add and data16 sbb cltd sbb insb pop pop je xchg iret xor inc add (bad) dec cltd and (bad) mov xchg decb iret or scas and ljmp jmp retw push and les lea and jg inc (bad) adcl push mov int3 imul pushl fs dec adc jno fs cmp and mov test loop (bad) fcomip incl mov aad inc adcl data16 push push ljmp inc lret inc xor pop jmp mov jae cs (bad) (bad) lcall adc xchg fstl xchg mov dec loop sbb lea fildll movsl xchg dec mov dec test pop shrb stc mov lret (bad) ljmp push ds test cmc sbb xchg (bad) incl pop fnstenv pop push mov pop jne jmp popa test ret in mov mov xor (bad) (bad) dec cmp pop add in (bad) xor lcall lret mov and cs (bad) (bad) pushl addr16 aad and lods je loope mov pop stc dec rolb outsl les cmpsb (bad) out cli daa pop pop dec dec stos sti jbe ret cs (bad) (bad) jmp jle dec inc xlat mov lods mov fist cwtl pop push adc push inc out adc outsb and add (bad) call es shll out xchg and (bad) mov xchg cmp test mov imul dec inc dec xchg lock (bad) sbb fcoml std pop sbb sub idiv aaa add cwtl jne (bad) or adc fiadd (bad) pushl sahf data16 xor loop incl stos aaa mov dec mov adc mov xor (bad) lcall (bad) addr16 enter jp xor das xchg sub mov inc adc (bad) (bad) call lret ret add sub test pop cmp ffreep ret xchg mov adc sahf mulb in pop xchg std in pusha xor out add sahf daa (bad) (bad) incl pop mov mov test movsl cmpsb cmp sub subl int3 cli cmp adc inc xor stos cs data16 addr16 sarl outsb (bad) (bad) (bad) pushl sbb enter cmp insb and bound mov adc sar (bad) lcall push les dec (bad) imul std lock (bad) call inc mov xor xchg mov out jo lahf xchg (bad) ljmp or rcrb mov ds jnp jns push mov not fidivr dec (bad) cmc (bad) aaa cli sub or das xor add sbb das stc lcall (bad) fldcw cmp dec xor in pop jmp std out data16 sub sub (bad) fcomip sarl or pop pop push arpl adc push fisub mov push das mov popf mov cmp es dec inc lea lcall add mov mov xchg loope loope (bad) jmp xchg mov push jns mov and pop cld xor int into fwait inc lds es cs (bad) (bad) call jne mov stos bound bound jns dec push aas adc movsl cmp (bad) (bad) jl mov dec in mov test in push leave test test jmp call cltd pop addr16 cld jmp xlat fwait lds pop dec mov inc std push pop leave enter (bad) incl decl push add pop or stc xchg ljmp or mov imul (bad) add inc jbe mov mov mov int3 rorl jl daa mov mov and jno mov test cmp (bad) (bad) jg ds icebp ss xchg pushf adc (bad) sbb adc mov call adc pop andb add push cmpsl loope aaa ja dec sbb jle,pn (bad) (bad) (bad) mov dec pushf xchg movsl js push hlt and dec fistpl aam mov xor sub inc (bad) (bad) jg or cmp inc sbb sti adc sbb test inc insb (bad) popa data16 (bad) (bad) call popa mov enter es dec stos mov jns fs mov jge sti (bad) call (bad) push insb sbb cmpsl cmc dec xor push mov pushf cmp add fildll enter sub fdivrs mov mov call xor (bad) (bad) (bad) mov icebp dec xor test pop dec testl es sbb (bad) lcall lods push cld mov xor test dec fcompl mov pop mov xchg decl clc dec inc mov jbe cmp sbb (bad) (bad) (bad) call sub adc jnp scas repz and dec (bad) mov out outsl clc decl mov jbe xchg out dec push jo (bad) mov mov (bad) (bad) (bad) decl mov pop dec push int aad xchg (bad) pop and mov jge js (bad) (bad) inc scas cld mov inc inc test iret mov insb shll je divb (bad) (bad) mov inc sub mov jl push push push xchg adc cmpsb hlt jle push dec pop (bad) sub adc incl orl sbb pop sbb jecxz cmp iret add push mov push (bad) (bad) (bad) inc jmp not ljmp sahf adc push dec push pop mov push add aas outsb popf mov fsubrs outsl cli decl shrl (bad) pop jnp or arpl lds jmp outsl (bad) (bad) (bad) jmp ljmp or stc orl loopne add adc inc rcrl clc lods cmp (bad) (bad) decl xchg sub (bad) dec dec xor jl cltd inc push jno fnstenv add std or loop,pt add out dec and (bad) incl fcoml cmp repnz mov or pop insb inc ja jmp das hlt fadds mov icebp pop push jl dec dec pusha lret clc mov lcall push push jmp jno sbb sub ss ja mov (bad) (bad) incl push daa or test lods out cld arpl popa sti pushf sbb (bad) (bad) (bad) dec pop cli in mov push (bad) test jg xchg daa mov xor mov out int3 mov pop or mov rcrb fs dec mov clc jg cli inc xchg pop xlat xor push xor pop ror pop (bad) (bad) (bad) fistpll icebp (bad) lcall out pop and jg notb mov xchg (bad) iret aam jmp shll push dec jecxz mov jmp dec add inc testb les push (bad) (bad) ljmp mov stos fdivrs sahf add mov sahf insl mov or ror mov add ja cli mov lds jle mov xchg cmc call out test pop dec lcall (bad) (bad) (bad) out mov jae add ret das and jae cmp shl (bad) in stos mov pushf mov push sbb fsub (bad) call std insb jnp int3 mov mov sahf fistl rcl lret out jnp repnz cs inc (bad) (bad) (bad) jmp cmp add inc les xor xchg cld pop adc dec cmc insb jae (bad) (bad) (bad) pushl ljmp out insl (bad) (bad) stc mov push add test icebp (bad) (bad) jmp div push dec mov loope mov lret leave or shlb add clc dec adc or addr16 sub ljmp dec cmp aad ficoml in mov aam pushf cld outsb push sbb push fnsave pushf ljmp mov mov and ret lcall fs inc inc mov jb dec (bad) insl cli (bad) ja cmp mov in clc (bad) (bad) jmp cmpsl scas mov adc or or mov (bad) sbb xchg fs jmp or sarb test adc fistpll xchg mov cmp movl in pop mov push subb jecxz or pushl pop mov test ss cld sub stos clc lcall jge add jmp out sub push and in das push mov js pop test rcrl jnp mov das sar hlt repnz loop sbb mov lock bound mov jge sub mov cld pop push ja daa loopne jne and and or aaa out call ljmp imul lods das iret out push pusha ret xchg xor (bad) (bad) incl mov dec mov jnp inc je or nop scas (bad) mov incl cvtps2pi mov xchg fcompl xor sbb decl aam (bad) (bad) ljmp cld mov test inc ficom (bad) xor mov movsb bound jecxz,pt test out cli daa cmp call out and in cmp lcall (bad) out (bad) (bad) (bad) call sbb mov insb scas es xor xchg test pop cmpsl pushf je mov shl mov pop (bad) xor pop aad ds mov cmc addl pusha xchg xlat daa into dec in sbb ljmp pop outsl cmp (bad) (bad) (bad) ljmp (bad) aaa hlt ret icebp mov mov (bad) lret push push aas mov sbb (bad) (bad) jmp (bad) cmpsl nop aad lock rolb (bad) sbb mov lahf mov cmp dec fdivrp pop push jno or aam aaa cld inc ljmp pop test lret sahf pop dec xchg mov decl xor repnz imul das (bad) and cmpsl (bad) (bad) (bad) loop insb jbe lods pop xchg mov cmpsb dec inc lcall xchg sarb sbb jne (bad) cmp push pop mov rcrl psubq insb (bad) jo (bad) xor mov shl arpl cmp or (bad) jmp jns imul imul push push xchg fdivr (bad) lcall sahf push inc and xor xchg jae add inc push cmpsl or cli or inc int (bad) pushl cmp call aad inc jp ret fisttpl jno fmull aaa inc cmp dec mov sub mov pop (bad) xor sahf dec shll incl inc mov xchg loopne sti das mov push shlb pop adc sar push pop je lods ljmp addr16 scas loop dec fwait (bad) (bad) ljmp ss and mov and mov sahf call inc jb sar pusha pop scas in into dec ja push (bad) pushl out sub jo jne movsb pop jmp fistpl icebp xor cmp or cld (bad) push jmp rcrl std lea mov in jae adc (bad) (bad) (bad) incl lret pop (bad) xor sub add push jbe pop ja xchg addb aad fcom (bad) (bad) jmp mov mov and shlb mov shr sub push dec ds imul mov jo dec xchg dec mov outsl or out mov ss int3 and pop ret negb sbb cli addr16 mov lods jle jle les pop hlt adc test fistpl mov lea or test push dec scas (bad) fcomip (bad) inc push movsb xor jbe inc negl push data16 mov cmp (bad) (bad) (bad) jmp mov pop (bad) mov dec mov cmpsb mov mov mov nop cmp loop jle xchg lea xchg bound xor sbb test cmp inc in add (bad) (bad) incl cli sbb jmp rcll pop adc mov in popf arpl dec sub test cmpsb sbb outsb push mov aam or pop in arpl dec rorb adc int3 and loopne xor cmpsb dec add ja inc (bad) (bad) (bad) fmull test inc mov pop or std loop jge insb xchg (bad) pop push clc sbbb dec fimul ja xlat les cmc xchg add lcall lcall add xchg hlt incb jmp in sbbb mov (bad) mov xorb stos fnstcw (bad) (bad) ljmp outsb fistl faddl ret mov add popf cli sub nopl aam xor rclb (bad) incl ss aam jo cli mov mov mov add xor mov lahf mov adc xchg (bad) sub call insl add adc ds xchg sarb std push aam jo mov inc aad push mov mov mov ret hlt lock in push stos rclb (bad) (bad) lcall inc std movsl ror mov jecxz in cmpsl sbb mov into in ljmp rcrl call popa outsl (bad) lock (bad) (bad) (bad) jg cltd pop xor cmp inc mov (bad) jno setp mov add (bad) lods (bad) ljmp dec mov (bad) fstl lcall push jmp push push lds (bad) fbld mov sub sub cmp pop test lcall cmp jae push ljmp inc push fstl dec jp jo dec insb inc test fwait jne dec push xor pop leave pop cmpsl jg (bad) push in xor push in addr16 (bad) idivl adc scas or sbb fsubl pop es xchg mov xlat outsb arpl (bad) into mov js cli mov dec repnz xor aam (bad) ljmp enter loopne cmpsl das outsl shrl les pcmpeqb out cli icebp loopne inc pop (bad) sub clc (bad) (bad) call inc add inc xor test pusha (bad) fs sahf xlat ret mov push (bad) (bad) (bad) incl and xchg cmp int3 push adc je in push lock imul (bad) (bad) ljmp lock hlt aad pusha cmp movsb loope imul lods cwtl jle inc cmp (bad) (bad) icebp (bad) decl add lds ds (bad) ljmp push inc lds popa mov cwtl (bad) insb lcall sahf sbb cli call lea or sub (bad) aaa icebp sarb (bad) call jns clc cwtl xchg add jnp fwait ljmp (bad) int3 mov xchg sub insb push or push loop and cmp insb (bad) aas js jnp xor (bad) xchg pop xchg lock mov ds lods mov jp xchg inc jl dec cmc fmull call jae (bad) shrb dec (bad) sbb push leave sbb cmp push mov inc dec decb mov mov and push fwait jmp or repnz not jbe sahf xchg into adc ret mov (bad) (bad) (bad) jmp ljmp pop and xchg ret outsb sbbw leave bound (bad) (bad) (bad) jmp test jecxz mov add aad les les hlt in push int test jmp inc int fiaddl iret adc fcoml push jge daa cmpb fistpll mov mov pop imul xor fcmovnb fimull xchg outsl out test pop icebp (bad) (bad) mov adc or stc and jno sbb push cli enter (bad) call stc inc jno add xchg adc rorb inc adc cmp cs in test jp pushf cmp fdivp popa and fwait pop ljmp into (bad) (bad) (bad) decl push jo (bad) fldt inc clc inc jns xchg push fwait mov (bad) (bad) (bad) ds mov push aaa int3 bnd loop sub aas xor pop jmp mov sbb dec cmpsb lds adc adc addr16 repz push das (bad) (bad) mov ret or call aas aaa aam loop mov push loopne jnp xor dec test movsw jbe sbb jns adc je pop ds cli (bad) incl pop adc sbb adc pusha xor mov cmc test sbb sub cmp pushl mov sub or fs lret popf mov cmp loope test lahf mov lahf (bad) insl roll nop jne jne in js push mov dec inc push inc push out pop shlb jg pop inc xor div sahf js pop popf ds (bad) (bad) jg test mov outsb mov das pop pop movsb push pusha fdivl gs test push aad hlt (bad) ljmp iret (bad) mov cmp mov mov fdivrl sub mov sub (bad) mov enter jg ret xlat in push fsubs es (bad) (bad) (bad) lcall std stos add mov scas pop push sub xchg mov and pop mov fsqrt mov loopne imul cmp dec sbb mov inc xchg roll sahf bound and pop cmp mov jp xchg rolb xchg aad (bad) decl icebp mov push push imul mov std mov mov out add dec fwait xor mov out test scas movb add daa sbb fsubr adc and dec lea adc jg adc xchg int3 insl (bad) (bad) (bad) lcall push pop fwait scas leave data16 sti outsb push push repnz xchg push clc (bad) xchg call scas (bad) (bad) (bad) (bad) mov stos test in ljmp mov lret scas adc iret popf lea clc ss test adc loope xor (bad) (bad) mov xor ja inc add (bad) into mov aam in jns fcmovnu (bad) (bad) xlat dec push add xor pushl or mov (bad) in fiadd in jp sbb or inc icebp (bad) (bad) (bad) call cli into imul jnp sub jp sbb popf mov fwait jmp push inc pop std (bad) lcall inc test push mov fildll inc in mov sbb gs xchg inc fnstcw fstps mov add inc adc xchg aam fisubl scas push int scas cli incl and test inc sbb fcoml pop rcrb adc xor fdivr (bad) (bad) incl arpl cmp outsb push loop rclb adc jns (bad) decl or push out lds pop sahf mov fnstcw (bad) (bad) (bad) lcall fmul mov cmp mov add pop sbb cmp clc pop fidivr (bad) (bad) pushl pop mov js fildll xlat dec mov jg lods inc clc (bad) push xchg (bad) (bad) lcall (bad) lret in lcall xor cmpsb mov mov je pushl xor decl mov repnz add cmc imul lahf sub fldl or scas clc jmp insl repnz in (bad) call aaa out or repnz lods mov faddp fucomip aas rclb cmp lcall maxps pop push notb and sub xor imul and xchg (bad) (bad) (bad) (bad) pushl cmp jg js mov (bad) pop sub enter add test pusha int3 (bad) (bad) (bad) decl sti jecxz gs jg jecxz and xor cmp push mov mov mov jle push mov in ret jl pop inc outsl cltd insb mov and jo jne (bad) add decl into jecxz out cltd lock (bad) (bad) (bad) call jns jne repnz mov xchg cmc into or adc xchg mov (bad) call lea push out xor xor mov inc (bad) repnz imul (bad) jge fs jmp icebp lods xlat xor fidiv lods clc mov cltd xor and pop enter fadd lock (bad) (bad) (bad) incl pusha test jnp in mov dec cmc jb scas cli neg pop inc jae cmp (bad) (bad) (bad) fcmovnbe loopne or lds out push in adc aam xchg pop das or and lcall pop mov mov sti jnp sub (bad) jne scas imul or push std mov rcr fs lret adc movsl dec loope mull and outsl (bad) mov add fwait and xchg lock lods ret sub cmpsl inc aam popa cmp (bad) fstpl test (bad) into scas scas stc stos xchg pop movl loopne pushl adc sub or push comiss mov xchg cld (bad) (bad) call (bad) (bad) push stos xor mov mov jl test jge push mov (bad) jg and sahf insb and jmp jno mov lds and jl stos rcrl mov jmp fistp sar movsb xor cwtl daa aad fmul adc mov out mov jb sbb sub out cld and sub addr16 ds mov cmp pushl inc mov incl lahf jbe or fdivs push cli ja dec rcr (bad) and sahf test cmc sub cmp (bad) (bad) decl fistpl cltd jle test mov xor sub fbld out data16 cmpsb fcmovnbe (bad) ljmp fistpll lcall push cmc pop ss push cld call lods xchg in sub mov cmc fs jge add (bad) (bad) (bad) lcall cltd lahf jmp rcrb in dec iret cmp js ja mov jno (bad) dec outsl icebp cmp pop ljmp enter test xchg shlb adc mov aam movsl adc pushf sub lret adc pushl fldcw sbb add and mov loop rol fistpll add mov loopne loop cmpsl cmp sub sbb xchg mov lcall add gs loop cs lods or ljmp jb arpl cli push test or fadd mov rorb jmp rorb popf push out mov push sti jae sbb loope (bad) (bad) (bad) stc insb xchg xchg jb push jbe fidivrl outsl pop mov inc (bad) cmpxchg hlt sbb decl jnp orb das (bad) mov dec into add or lcall mov clc mov loop insb in sbb push lcall dec jo int3 fnstcw xchg aam addr16 mov mov fwait (bad) sub pop (bad) sbb push inc xor pop stc add ret and or pop jp add add (bad) test xchg stos adc call loopne popa imul lcall sub cld (bad) decl cmp push scas clc sahf sbb stc sbb (bad) add fild int3 inc sub out not inc mov (bad) jg and sbb ljmp insl in in hlt xchg imul cmp mov iret adc cmp clc (bad) lcall scas xor push in mov cmpsl stos hlt adc mov sti push cltd into (bad) (bad) (bad) incl arpl xchg pusha in or aad imul dec int3 lcall push xor adc iret adc mov or (bad) (bad) incl mov mov out xor pop mov (bad) mov loopne stos pop stos cmp and xchg dec xchg clc push mov xor inc ret jl mov add stc mov xlat push jecxz cs or (bad) fistpll xchg cld pusha mov (bad) (bad) fcomip sub push pop test add xor mov jg inc pop lds lahf push stc out lret scas xchg ja mov fsubp (bad) dec pop cld xchg or pop cmc pop jl (bad) (bad) in (bad) mov fs repz sahf push popa imul (bad) push and (bad) ljmp ret dec aaa (bad) aaa xchg rolb xchg mov ret sub adc mov (bad) in lds dec push movsb jnp data16 dec lea lret lcall and jo repz xchg adc out adc (bad) (bad) jg fistpl notb adc fs sub push jp imul lods (bad) (bad) (bad) (bad) decl lahf js enter rolb outsl shll mov add push xchg (bad) (bad) (bad) (bad) call mov cmp and pop mov mov mov pop cmp aaa jne sbb dec mov push jg insl lcall (bad) (bad) lcall mov mov cmp lds mov xor (bad) in (bad) (bad) mov and jg push sub test pop xchg in sti mov cli jmp gs ror adc aas jle (bad) dec test leave (bad) (bad) (bad) (bad) dec cmp das in movsb outsl or pop push fidivrl adc and mov (bad) (bad) (bad) incl aas or or (bad) cmp mov scas jns outsb (bad) jmp inc icebp dec (bad) xlat sbb nop outsb out push fcmovnb jl,pn pop repnz or and test mov push mov inc loopne mov es xchg push jne lds stc cltd adcl jecxz outsb cmpb in add cld mov (bad) (bad) mov mov insl shrb xor in push outsb rcr (bad) mov mov sbb call fisttp jbe shlb rorb xchg mov divl dec jge (bad) (bad) (bad) decl fcomi in xor test out pop in das rcrb (bad) push and test (bad) (bad) ljmp rcrb cmpsl xchg dec and push add ds pop pop (bad) jg add popa sub inc mov sub xchg add (bad) decl add pushl jge add lods aas (bad) fstpl daa and (bad) (bad) jmp xlat in mov in jp (bad) mov xlat sbb or sti mov (bad) lcall push ror lock push xchg cmpsw leave sub movsb mov push pop pop out lcall inc js jmp iret or sub fwait inc sbb cs (bad) fsubp jns aam int sbb insb (bad) repnz add imul (bad) (bad) jg repz mov cltd dec sub adc fildll lcall fimul ds roll (bad) (bad) decl repz int mov (bad) and jno sbb inc popa pop repnz sub (bad) (bad) dec int and shrl sbb jne mov xchg std ret je (bad) (bad) jmp data16 inc rclb sar ja push mov xchg gs xchg (bad) out cwtl movsl (bad) decl leave xor sbb push or mov inc fcomps (bad) (bad) (bad) pushl (bad) mov cmp pushf cmp inc push std bound nop jne mov add add (bad) (bad) call fiadd (bad) pop mov (bad) jbe shll lahf or addr16 gs sub (bad) in xor mov je repnz aad imul fwait mov sbb cmpsl das mov (bad) (bad) cmp jge (bad) ss mov xchg shrb arpl jmp mov movsb sub push add push mov mov jg push out jns loope sub jmp es lds jb mov pop jg imul movl pop cmpsb jecxz mov popf sub pop cmp pop adc adc (bad) mov es (bad) aas popa pop inc push fwait loopne mov stos sti jno (bad) imul pop lock sahf mov ds xchg pop xchg fdivl mov (bad) jmp inc xchg pop lock fnsave mov stos mov rorl out and scas decl outsl jp xlat xor adc and mov or in fstps test ds incl adc mov dec in sbb sbb repnz sarl fcompl (bad) (bad) (bad) fnstenv jbe inc or sbb outsl jne and mov pop rorl rolb fnop sbbb pushl dec imul gs cmp xchg outsl add ret add mov js pop cmp (bad) pushl adc jmp insb stos pop les test and jnp xor mov sub decl fistpl or js push repnz (bad) pop lahf stc clc cmpl cmp add inc clc mov jge (bad) (bad) (bad) jmp inc in aas (bad) cmpsb and loop sahf pop rcll adc jae cwtl xor ss (bad) jmp test pop notb rclb mov adc xchg ret jg lcall sbb cld xor in incl test lock lret xor xchg hlt aas addr16 push sbb dec sub dec jmp jno cmp push cmpsl mov jne add sbb cmp jne fisubl roll mov cmpsb push mov adc sbb out mov fcomip jg lret and mov outsl ret push cwtl dec and (bad) fidivr clc (bad) pushl cld test add and notb mov cmp nop inc inc sar inc pop lock lcall shrl ljmp mov leave cmc lods inc out orl loopne movsl loop xchg movsb push xchg sub pop ljmp movsl push ds aad lock and push adc xchg pop nop and cmp mov fs dec mov scas xor repz out fcomp xchg fwait push pop (bad) (bad) lcall cli mov (bad) or lret scas inc and mov pop jmp and fild mov sbb mov pushf mov out xchg jne int hlt call add clc dec lea add loop jmp jb add test ret (bad) (bad) ljmp push mov (bad) (bad) sub popa ror scas pushf xor ret xchg out enter (bad) (bad) decl xchg (bad) mov out push push ss divb sub lea xchg mov or lods adc (bad) (bad) jg mov pop or int (bad) ja jle and sub (bad) lcall lods cmpsl std lcall xorl cltd adc in loope (bad) (bad) call inc iret xor in and pop xchg inc cmc mov xchg cmp jno (bad) (bad) (bad) incl (bad) jl and mov pop rorl insl dec or jb and pop jmp (bad) (bad) (bad) fnop popf dec cmp nop and lret and in xchg mov lret xor addl sbb pop insb pop fisubrl push incl xlat sub pop lret std lret (bad) out mov push xchg das ja cmp loopne ljmp notl cmc push dec outsl inc mov inc jne arpl push pop movsb repz stc mov incl lock ret or (bad) ljmp cli (bad) call sub xor call cli insb inc sbb push adc xchg loope mov dec decb decb jl pop (bad) mov (bad) (bad) jmp cwtl lret mov add mov sti xchg in mov stos pop (bad) pushl fnsave je,pt cmpl sbbb xor xor lods push ja mov pop hlt mov (bad) cmp sbbl std push scas sub xchg movsl ljmp and xchg xchg or dec lods dec inc (bad) (bad) jg mov jge pushf jne pushf loopne cmc sub pop cmp bound decb sub pop clc adc inc sbb in jg testl movb out jnp pop inc adc pop mov jecxz cmp push loope (bad) (bad) (bad) incl test pop dec ljmp adc pop mov inc cwtl inc repnz mov test (bad) jp adc stos (bad) jge loopne (bad) stos cmpsl mov test and psrlq (bad) fcoms dec and es iret cmpl shrb adc (bad) (bad) mov outsb xchg leave in (bad) xchg push clc (bad) mov xor xor enter ds push sbb xchg (bad) testb sub nop insl imul jge jo icebp (bad) ljmp sub lea or dec push xchg xor push adc fisttpl cmc jnp xor rorb inc push fdivrs pop into cwtl inc xchg mov pop pop arpl ret ljmp jo loopne push mov cltd lock imul dec or addl inc xor adc push sti shl (bad) (bad) (bad) (bad) out cmp mov orb sbb (bad) ds inc mov pop es int3 (bad) ss mov and xchg and jne xchg call (bad) (bad) (bad) pushl add lahf jle popa shr enter sahf jno aad scas sub jecxz mov hlt out (bad) (bad) (bad) (bad) mov mov arpl mov out (bad) mov mov ror (bad) call (bad) (bad) (bad) call jne adc pop add loope xor popf outsb jo shl cmp pop dec ss ja (bad) (bad) incl test jns fiaddl sbb inc push (bad) mov ret lret and xchg test lds mov or xchg lret push mov jae sbb add call mov das cmp mov pop lock adc add pop sub or ds mov (bad) (bad) inc lods fidiv add cmp dec push not mov lock outsl dec or xor add (bad) (bad) (bad) fstl or mov cwtl movsl aas mov int3 imul and (bad) push inc outsb scas (bad) addr16 pop jg int mov out sbb cmc cwtl fcmovnb je loope (bad) (bad) pushl mov xor push and cmp dec repz in ret inc outsb and mov das (bad) (bad) ljmp rclb pushf cmp les test mov cmp add loopne incl leave sub clc push stos imul (bad) (bad) call repnz out fs lods stos and adc adc and out cli mov push mov push push mov or (bad) xor push (bad) (bad) fcomip xchg mov push scas sti lahf test xchg (bad) cmp mov mov test cmp inc (bad) (bad) push and lahf cmp pop out dec lock je push or add cld decl or or dec pop xor or (bad) decl das sar jp mov in dec adc dec divl mov or test sub clc pop jns mov sub addr16 ljmp pop icebp sahf pop sti cld push xor dec in setp (bad) pushl je,pt jg lods (bad) loopne mov mov or cmpsl sti (bad) (bad) (bad) ljmp lds rorl lahf pop sbb mov imul (bad) (bad) (bad) call inc bound inc nop cmp fstps in in js xchg jns test adc xor mov jmp jle sub push inc xor clc lea mov (bad) fistp cmp cmc test sbb push fcmovu pushf mov dec xchg xchg enter (bad) out subb pop pop sarl hlt (bad) pop ds xlat xchg das pushf push dec mov ja (bad) (bad) (bad) cmp jno repnz outsl sarl lock js pop loop pushl (bad) push imul test rorl xor mov inc cmp adcb ret fidivl sarb push mov dec push fsubs mull call mov or iret bound (bad) lcall mov mov mov test enter in (bad) (bad) (bad) fisttp dec push aad mov popa cmp xorb mov mov cmp rcrb (bad) jmp ja cli sub lock gs lods push les pop sbb arpl pop push clc jo int inc ds dec scas ss cmpsb (bad) (bad) call mov sbb pushf sub test inc enter jo in (bad) (bad) inc cltd loop (bad) (bad) (bad) (bad) mov nop cwtl inc pushf insl stos push jmp mull pop push icebp mov out sbb call xor and sbb rclb xor or cltd punpckhdq pop stc lds mov cmp push test or sbb ljmp lahf (bad) clc repz or xchg int insb into (bad) mov inc pop lea lahf dec fdiv (bad) decl jae mov in dec pusha popf inc sbb in pop fildll fcomip fldenv outsl scas push xor lret sbb rclb ds outsl and int imul ljmp (bad) int xor mov pop sbb daa cmpsl adc in movsb aad in loop adc (bad) (bad) mov aaa int3 ss push (bad) xor push sbb add xor out mov (bad) (bad) pushl jb mov lock in dec or cld sbb cs or or idiv inc push (bad) mov xor cmove lcall sahf xchg call xchg push xor inc pop mov fcoml outsb xchg into lret (bad) sub push (bad) jbe xorl and popa mov mov faddl data16 jmp jne mov (bad) ds sbb ficomp inc push or inc xor push mov popa out gs jno mov (bad) (bad) (bad) decl dec mov inc xor daa xchg dec mov jmp jo jno ret imul (bad) incl shrb cmp fcomps call fwait les or les xor or jno repz bound (bad) xchg ret fisub outsl jg jno lret (bad) (bad) (bad) (bad) mov js mov add shrl aas arpl decb repz mov es ljmp or loope cmp imul ds add daa adc std sahf das dec in inc and mov ljmp mov data16 cmpsl pop xor call incb sub out jp (bad) (bad) call push mov sub es cmp pop add out xchg out and mov (bad) (bad) (bad) incl add mov testl std sub cmc add (bad) movb mov add call rcll cs mov bound add mov and mov test fs (bad) (bad) incl aas xchg or mov stc std mov pushf mov pusha aas lods jne aad loope pop lock cmp xchg inc rclb iret test cmc fdivl sbb popa ds push mov (bad) fwait dec fidiv sub (bad) pushf fcoml mov int push (bad) xor je sub cs jae (bad) (bad) jmp lret popa (bad) xlat in mov jge cld test es adc pop mov fiadd (bad) fcomip ljmp sub dec clc add push inc cltd das xor xchg (bad) (bad) (bad) inc pusha mov and mov xchg and je adcl cmp out adc (bad) (bad) jmp and mov out mov cmp mov hlt cwtl rcrl lock ljmp sub (bad) (bad) decl aaa js xor adc rcll sub push inc insb adc jg jg mov jle adc push fcmovnbe dec jle xchg mov loope sub sub or ljmp aaa inc out out ret pop nop gs ds pop addl (bad) (bad) cmp jae mov xor jbe push out or or push arpl pusha push push int shlb jle xchg aaa inc dec mov sub mov icebp aad adc mov inc icebp data16 xchg jbe mov test (bad) incl push push mov daa and sahf cmpsb cmpsl dec idivb and frstor and mov incb inc mov push jo rolb stos dec fimull push stos lahf or (bad) mov enter iret leave jmp and mov (bad) or mov (bad) (bad) (bad) decl roll jne adc push sbbl rclb (bad) std mov (bad) (bad) (bad) jnp lret leave mov push mov add sub adc push xor push (bad) mov ljmp int3 mov sahf and movsl dec inc aam enter cld incl cld call dec iret inc fisttp cmp inc cwtl out cmp sbb es mov jle (bad) mov sbb mov lcall dec mov mov pop mov js mov (bad) jmp (bad) cmp adc bound xchg test adc dec js,pn scas add cmp lock (bad) repnz ljmp jmp push (bad) adc mov in das ds lods ss or decl xchg lock ja fmul (bad) das outsl lods movsb xchg push lcall in push dec adc (bad) call leave dec loop add shrb lea nop pop pop hlt es adcb cmp mov incl dec dec dec inc mov adc dec shrb cmp out (bad) (bad) (bad) jnp sbb pop dec data16 mov mov lea out (bad) lcall inc aad sar call insb lods inc pop sahf mov push ja add pop inc sbb (bad) call ds ret cltd adc stos cmp or rol xchg (bad) stc push (bad) (bad) incl (bad) sbb rolb xchg cmp mov and inc xor loop sbb mov and xor sbb dec sub (bad) cmpsb mov sbb add mov dec js (bad) (bad) (bad) (bad) mov in inc std inc adc mov lret movsl sub adc mov mov cmp adc mov std jg pop mov arpl arpl jp (bad) clc (bad) (bad) ljmp mov cli sbb mov call and cltd pusha subl ss (bad) (bad) ljmp mov sbb push cli or es fist inc les fnstsw jmp (bad) (bad) (bad) call inc xlat dec inc inc stos lret imul or fs lcall insl xchg mov xchg inc (bad) aaa std pushl jo mov es test (bad) xacquire fiaddl (bad) (bad) mov adc dec push pop (bad) lret push (bad) fisubl (bad) lcall call add lea ss jp repz sahf and addr16 (bad) in push and push pushf (bad) iret cld popf outsb dec insl lret mov jno mov dec push js gs mov pop cld cmp outsb push cmpsl xchg xlat mov sbb aad movsb mov (bad) sub lcall sub fmuls mov (bad) (bad) out frstor int3 repnz sub (bad) xor out sbb loopne push cltd and jnp pop (bad) (bad) in jmp inc xor mov test cmp aas dec xor call test cmc adcl rorb jp outsb out xchg and sub gs stc jns je roll fs (bad) mov mov mov into ja jmp nop (bad) ja dec dec fistp jne push jae in push or jl and aad mov mov pop ds (bad) (bad) jg mov aam push or mov push jl loope adc jbe jl sahf aad (bad) (bad) (bad) incl icebp arpl add imul sahf pop cli xchg jle hlt pop inc test pop repz add ljmp (bad) or jle inc add (bad) (bad) jg mov push and shll out lock push cmp dec mov pop or (bad) (bad) jmp jne pop and nop int xchg fidiv pop dec dec pop mov lahf aad mov mov daa fldcw cwtl or outsb call jae push (bad) jo jg xchg rclb jae inc pop pop (bad) (bad) (bad) call jae jae cmp jecxz loopne pop mov add (bad) mov ss (bad) (bad) ljmp lods cmpsb ds hlt cmp stc xchg push jnp sarl mov jecxz scas test and fcomps stc cli scas cltd mov (bad) (bad) (bad) jmp hlt jno xchg cmpsb sub into ret (bad) add adc xor incl inc xor xchg jb mov icebp es jecxz cmp push inc xchg adc (bad) (bad) jmp (bad) aas (bad) (bad) insb xor mov inc sbb das sbb mov rcrb repnz call ds cld stos mov dec dec xor (bad) jbe lret rcrl (bad) incl fsubl mov addr16 test inc aas dec dec push or mov pop std (bad) (bad) (bad) dec mov div pop mov leave aas sahf out add in fwait andl cmp add fmull decb nop push lds xchg sbb ljmp mov (bad) push (bad) das (bad) mov cli incl adcl inc scas mov (bad) (bad) (bad) cmp or mov div gs xchg mov and (bad) (bad) call sbb fisttpll (bad) mov pusha jle ss and inc je (bad) lcall imul cli dec sbb (bad) push movlps mov dec xchg (bad) (bad) fbstp jecxz (bad) aaa mov stc stos xchg flds std dec jbe pop popa loop ret sub (bad) call aam imul push sbb mov cmp pop movsl bound leave fwait push movl ljmp call xor jb fsubrl daa inc mov jns push dec jg (bad) (bad) cmp outsb pop popa fdivr push mov dec inc cmpsl mov ljmp pop lock std mov lret sbb sbb test ljmp cli (bad) incl mov outsb push inc xchg test inc out cld inc adc (bad) incl mov inc cld es jp mov (bad) (bad) (bad) (bad) jmp jle inc inc xchg js (bad) jnp or add xchg and jle (bad) (bad) dec push (bad) (bad) (bad) (bad) jmp dec push in jae in jge arpl cmp jecxz scas (bad) (bad) mov in (bad) (bad) (bad) decl (bad) (bad) int3 sbb xchg ficomp into xchg shr (bad) repz xchg (bad) (bad) (bad) incl sbb dec xor (bad) loope push add jo je outsb pop mov rorb pushl in stc adc push ss add (bad) push out loop dec dec dec repnz nop fstpl das dec xchg imul sar dec push mov push lahf lods aam adc (bad) mov fdivrl xchg test cmp ficom cmpl and (bad) (bad) (bad) incl sbb fdivl shr and mov inc pop sete mov xchg sub (bad) (bad) (bad) (bad) cmp mov cmpsl push call push (bad) ss bound pop sbb (bad) out dec (bad) mov leave push arpl test inc push inc push sar cmpsb (bad) jmp inc pop (bad) pop xchg jnp ja cli push sub pop sub xchg add cmovl (bad) push mov pushw mov std lcall pop dec sub loop,pt cs jge movsb mov mov mov sbbl xchg or lahf xor outsl inc push mov lds (bad) (bad) incl add xor fiadd cmpl push xchg (bad) (bad) cmp xchg aam jae mov pop pusha sbb pushf push (bad) ds xor inc (bad) (bad) pushl push add mov ljmp push or mov push int cli (bad) (bad) dec jo fdivs clc or or dec pop xlat sbb notb push and push or cli and jmp lea cmpl jg test inc aas xor call (bad) lcall cmp ljmp dec sbb bound xchg (bad) (bad) lcall mov fnstcw cmpsb mov lret and add pop (bad) (bad) (bad) push cli in lds xchg adc mov push jbe loopne and jl mov int3 cmp je fsubrl jne jb fsubs decl ds or imul movsb pusha mov leave push repnz cmp inc dec (bad) incl js aam push fadds (bad) (bad) dec pop and lret cmp dec outsb out add fstl add stos jg (bad) (bad) (bad) (bad) (bad) or imul push lret cs mov xlat jb pushf mov (bad) (bad) (bad) inc xchg mov std inc sahf clc fadd out mov sbb adc and (bad) (bad) jmp inc jl bswap cmpsl dec je add dec xchg mov inc cmc mov fcos (bad) (bad) (bad) out movswl lea les xchg cld cmp out (bad) pop xchg jae jp in shll call loopne xor push cmp dec xor (bad) (bad) in ljmp push out adc pop pop je,pt jmp mov inc mov mov push xor call popl xor sbb cmp xchg clc call data16 int fistpl push dec pop and lcall scas sub ds movsl cmp (bad) (bad) incl ja or and (bad) dec cs aas fs or lret rorl (bad) (bad) (bad) ljmp testl rcr hlt push cmpsl addl mov call (bad) mov mov sahf adc hlt (bad) (bad) (bad) mov repz lods movb xchg rcrb fidivr jmp (bad) (bad) lcall les call dec cmp movsl or sbb popa shr mov lcall xor pop out in inc imul in or add (bad) pushl sub inc in js mov and (bad) (bad) (bad) (bad) aas or push test divl out decb rcrb sbb mov mov outsl (bad) (bad) (bad) (bad) jge lret into lea pop in call mov shlb and push loopne fwait xorl (bad) decl inc sub imulb loope jg mov mov pop (bad) (bad) (bad) mov mov cld adc (bad) sbb xor mov mov mov push xchg mov (bad) inc mov les pop loope nop dec pop insb cwtl dec aaa push (bad) (bad) add and subb and ds (bad) (bad) dec in xorb add lock sub jne xchg fstps (bad) jno idivl (bad) (bad) (bad) (bad) fimul mov inc inc inc sub xor imul push jnp leave in push (bad) (bad) decl mov jne inc (bad) push lret pmaxsw xor sub (bad) (bad) (bad) (bad) lcall movsl jecxz mov cmpsb pop mov imul iret dec sahf inc mov call (bad) (bad) dec xor and out imul lds loop mov mov (bad) inc lcall add xchg stc fcoms loop sub jns mov add (bad) (bad) (bad) decl push sbb xor mov (bad) idiv loop aad add push rcrl ljmp mov sub xor push fmul rcrl inc insb push pop pop (bad) aaa insb cmp mov (bad) adc mov shlb xor sbb jo push jmp mov mov outsl daa ljmp and (bad) xor jp addr16 or decl sub pop pop mov imul scas repnz jl sub pop mov incl inc dec sbb add js daa mov push jb add mov ret or (bad) (bad) (bad) call sub outsb xor out bound inc loopne xchg dec sti pop mov cld (bad) call lret int lds inc testl pop or test adc (bad) ljmp (bad) push or mov pop sbb stos dec in mov adc mov sub mov mov aad ja pop pop test and js lea jmp and pop pop lock (bad) (bad) (bad) mov lret (bad) cmpsb xchg lahf push push cmp dec (bad) jge sub fmuls dec ret icebp mov sub lea jno (bad) (bad) (bad) call loope repnz jp es (bad) dec pop adc inc out xor cltd arpl aaa push push bound push cmpb outsl lcall std call mov into orb and pop jmp cmpl inc sbb and into mov dec inc mov mov cmp stc (bad) (bad) decl ds pop xchg mov mov or mov out xchg mov (bad) call adc push xchg mov dec arpl jge loopne pop pusha and inc nop sahf push mov in inc icebp add nop gs insb lret mov in (bad) (bad) (bad) decl enter and fild adc movsl fisttpl or add notl (bad) jnp fimul xor jecxz jns sub incb sbb ja (bad) loop mov inc cmpsl (bad) (bad) (bad) (bad) (bad) std in xor cmp cmp sbb aas repnz pop es ror pop xchg mulb (bad) sti int rcll add cmp scas lret sbb xchg inc jp mov or adc repnz in jl popa fldenv and push test mov (bad) ljmp imul mov push push mov xor mov (bad) pushl ds fwait outsl sbb addr16 cmp es push in dec ds (bad) (bad) (bad) pushl push leave stos jno loope push mov jmp add cs jle mov xor jb pop stos xchg pusha or cwtl pop stos out in push mov ljmp adc std nop add dec (bad) (bad) (bad) pushl out xchg sub push in pop dec gs sub mov mov mov in (bad) (bad) call sti sbb stc (bad) sbb lahf xchg in mov popa or aam sbb (bad) fcomip jle dec addr16 sti inc mov mov aam fwait adc mov fptan out leave std (bad) (bad) jmp sub leave dec loop xchg arpl jo adc test pusha es pop (bad) jg or or lret or (bad) (bad) ljmp sti xchg dec test dec push push pop scas in or xor out cmp aaa sub pop mov movsl pusha sbb fsub hlt (bad) (bad) call iret jno mov (bad) or fcompl gs pusha test std mov clc pop fidivl outsl or inc add (bad) (bad) lcall push pop or clc rcrl xchg mov mov pop (bad) (bad) (bad) jmp int3 xchg cmp push cmpsb pop dec jns mov jne add pop push mov mov shl lds ret stc inc and sub cmc (bad) (bad) (bad) decl ds fist pusha je inc xchg mov rolb cwtl sub or jl add push mov aad (bad) (bad) mov push fisttp (bad) push stos aas daa movsb mov jecxz lahf mov ret pop cmc inc (bad) mov les lods jmp cmc ss pusha (bad) (bad) (bad) jg and insl xchg cltd adc mov xchg fsubrl xor rcl aam lret pop aas movsb xchg adc pop mov lcall cmp xchg stos out inc loopne mov mov (bad) (bad) (bad) decl fmul inc dec mov jge clc xchg push xchg pop cmp flds jns out scas xchg push or mov int mov cmp mov sub push fmuls add add movsb xor fldenv idiv sub fucomp movsb negl sbb rcrl mov pop imul push aad stos jns jl lret cld (bad) jg xchg orb into add push xor and push gs clc (bad) (bad) cmp xchg call sbb aad (bad) sbb sbb cmp scas push jnp and adc dec push mov push sbbl rclb or mov (bad) (bad) cmp mov les push dec iret enter mov add hlt jne cmpsb stc cmc clc jnp push add xor dec (bad) pushl sbb jns adc aam ss loopne subb bound inc out cmp jle (bad) lcall mov out mov mov (bad) aaa sbb mull sahf jnp (bad) (bad) incl adc adc cmp in and loop push imul ret lcall ljmp dec or jl je (bad) rcl mov mov (bad) (bad) (bad) push in loope,pn dec sahf push je lods js mov xchg enter jle out jg mov mov pop jne adc in cld push into xchg jno mov xor xchg pinsrw and sub mov dec adc sbb pop push incb (bad) gs push xor cld pushl cltd push mov sbb fmul ficom adc cmp jmp mov xchg aad jns add push sub insl (bad) sbb (bad) (bad) (bad) (bad) mov mov jle pop and cmpsb inc xchg dec stos lds mov xlat or inc imulb and clc fdivl nop (bad) mov adc lock (bad) (bad) ljmp sti add mov xlat jbe popf ja dec imul mov xchg jmp (bad) decl es sub pop je sarb lea cld stos sub scas std jne lcall xor cld xor mov xchg lret push mov jnp (bad) (bad) (bad) (bad) jmp sub rcll mov mov push xlat xchg and cmp outsb idiv (bad) (bad) (bad) fstp aaa lret call ret push ds xchg sub and mov (bad) jg (bad) jmp or dec add in and mov add call pushl outsl sub inc and sub data16 pop add mov (bad) (bad) out mov insb mov mov xchg stos sub jl stos jmp sub (bad) (bad) incl js jne xor leave repnz or cltd ja pop lahf or ret sbb and repz loope mov sub (bad) (bad) mov cli test push adc xchg out push inc cs ret loopne add test dec xlat icebp icebp mov (bad) daa rclb jo les cmp ds inc (bad) (bad) (bad) call sub inc xor add jns bound mov es xchg ds pop and das mov add (bad) lcall jp in mov test inc cmc test (bad) cmp fisttp lahf xor shrl xor adc and shrl mov xor addr16 (bad) (bad) pushl mov pusha dec xchg cld test push or (bad) pushf rorl push and pop dec mov push (bad) (bad) lcall into mov cli adc sbb in icebp sbb xchg sub jl mov (bad) (bad) (bad) call pop xorl cmp out mov lret mov add dec xchg loopne clc (bad) (bad) (bad) (bad) pushl cwtl (bad) out sbb mov decb mov shrb jge mov mov (bad) in mov fldt dec and ja orb repz adc (bad) pushl dec push jmp mov cmpsb pushf jle xlat inc add ja movsb cmpsb icebp mov iret and mov scas clc call ds jo mov sub mov fcmovne (bad) (bad) (bad) (bad) cld nop in cmp test (bad) mov out ja jl ja in mov (bad) (bad) (bad) dec test push fcom (bad) in in fucom popa movsb push mov lcall xchg idiv (bad) (bad) call test mov push jmp jbe jbe xor stc insl lods xchg and pop adc push fs lret xchg push inc inc cld movsl ja fisttp sub jmp test pushl mov pusha imull es push fwait mov pop (bad) (bad) out cli addr16 pop push sub (bad) insl test cmp sub andl cmp das mov inc arpl (bad) (bad) (bad) divb xchg jb into mov or movsb mov (bad) (bad) (bad) jg mov push clc stos mov dec inc push mov aad les (bad) push or das lcall sahf nop pop dec or push (bad) jae xor jle int (bad) xor or mull xlat or pop adc in divb or (bad) (bad) (bad) mov mov fildll cmp push dec stos push mov cmp xchg pop inc lret (bad) ljmp lods mul pop das fnstsw and in cli fs outsb push and (bad) leave mov jg jg loop inc out (bad) cmp jl sbb (bad) cmp add dec sar into scas xor push inc push lcall loope pop pop inc fdivs out (bad) (bad) (bad) ljmp xor xor jmp loopne jmp lods dec outsl mov mov ja lahf or add (bad) pushl in adc aas push sub or push ret mov les stc icebp unpcklps push clc pop stos mov (bad) adc outsb les (bad) (bad) mov mov jne fiadd ret mov mov push mov (bad) push (bad) (bad) (bad) incl ds bt or push mov popa js lds mov (bad) (bad) (bad) (bad) cmp mov iret daa xchg or (bad) jecxz in xchg xchg inc enter into adc ss fwait dec fs idiv (bad) (bad) (bad) call clc out je or cmp test js cmpsl inc les (bad) lcall rol mov decb push cmp push insb das mov push es insl mov (bad) (bad) call jge lret xchg push pop sbb sbb xchg pop push lock inc inc mov lret mov idivl mov (bad) std movsl stc mov xchg pop movsb jp ret hlt stos into jge (bad) pop pop jb adcl popa (bad) outsl push jo notb sbb gs aam decl pop xchg test and lret pop fidivrl xor mov (bad) mov aaa test scas sbb adc dec or mov loopne inc ret loope cltd (bad) lcall incb mov je,pt rcr mov pop aam mov (bad) aas insb pop and (bad) (bad) cmpsl lods lret pop daa aas aas pop ljmp loope fisubl (bad) cld fstl aam cmpsl sbb stc inc sub (bad) add adc (bad) fild aaa sbbb xorb adc mov addr16 (bad) (bad) call enter jb scas dec bound mov fsubrp enter sbb mov (bad) (bad) (bad) incl test movsb pop sub outsb pop shr jle sahf or repz cld mov (bad) (bad) jmp xor or dec leave sub cltd (bad) rorl sub xor leave ret pop sub (bad) (bad) call sahf out dec negb incl nop adc push cs movsl mov push cmc and orl aaa fistpll das mov fidiv mov flds xchg ds ljmp (bad) lcall or pop mov pop aam xor (bad) jne mov arpl xchg inc cmpsb cmp hlt mov or xor mov xor and (bad) mov ret jbe das je inc adc dec dec (bad) arpl loop (bad) (bad) ljmp adcl mov outsl or and (bad) in scas sahf repnz dec adc (bad) (bad) lcall fnstsw ret push sbb out fs push push sub mov push addr16 daa and xorl (bad) (bad) (bad) call pushf cmp inc cmpsb das lret (bad) xor adc bound sub js cmp in je (bad) loopne jg insl rcrb pushf idivl jecxz and aam pop fistpll (bad) (bad) mov or push inc int3 push mov xor addr16 add dec call ljmp pushl out sub arpl cmp or insl (bad) adc xchg sub xor movsl std sti lods xor xchg lods aad and adc xchg mov jecxz,pt (bad) (bad) lcall (bad) enter cmp outsl inc mov mov imul hlt scas js mov jmpw (bad) rolb pushl add fs icebp pop cwtl jl push movsl and outsl dec je (bad) ljmp (bad) adc (bad) negb xor cmp mov scas pop pusha push or dec loope or cld fwait divl addr16 ds (bad) (bad) pushl adc jnp imul movsb outsl es daa subb es push cli jne mov xor inc mov add faddp push bound cli mov inc or cmp inc mov ljmp stos jno loope push mov push push cwtl push xlat fistpl test jmp nop hlt and sbb pop (bad) (bad) ljmp mov into ljmp shl mov rcll int inc clc (bad) (bad) rclb test aas pop icebp pop ds (bad) (bad) incl dec imul loopne ds pusha int ret dec test cmpsl pop dec out mov push dec leave jmp (bad) ljmp xchg adc hlt xchg pop rorl and (bad) jge adc mov ret outsb jmp xchg mov mov (bad) (bad) incl mov lock jnp adc cmp stos push jns lock jp fisttpll aam (bad) (bad) (bad) call fidivl push pop leave cmp jne inc scas dec jp je std shr dec fldl xchg sahf and bound mov aad adc ss lea pushf xchg call sub mov std (bad) decl pop daa jns xor add mov aas ss (bad) jg cmpxchg fwait mov enter mov push xchg (bad) cmp mov (bad) jg jns or hlt in adc lcall js imul sub mov movsl or push mov fs jb int inc rorl mulb jno mov xor xor jae,pt push lret sub mov pushl dec inc clc test pop (bad) jno lret pop pop popa cwtl jecxz inc mov sub cmp cli (bad) (bad) js ret daa out dec ret addl jae ljmp dec mov iret cld dec push or (bad) pop xor lret pop lea dec dec dec lcall mov dec xor lea xchg xchg call dec jno pop pop gs loope cld adc ss lcall and icebp scas cld mov cmpsl imul fwait push test xchg adc inc mov (bad) cmp jmp out fsts es fistp mov add and pusha movsb rclb into xor (bad) mov fs nop aad mov lds pop and cld (bad) (bad) jmp nop push pop inc test add les into test mov mov gs stc pop insl leave pop pop sbb daa aaa push (bad) divl cli rorl (bad) (bad) ljmp mov inc int3 adc inc sarb sbb xchg aad xchg push ja sar mov or push rcr lods out das mov pushl (bad) xlat dec cmpsb fldcw imul xor (bad) (bad) pushl roll test pop arpl sub aaa fs lcall mov push (bad) mov pop cmp ljmp sbb pop lods or cmp (bad) (bad) jg dec hlt ret outsb popa push mov push cmpsb in pop outsl mov sub xor outsl (bad) (bad) (bad) lcall jbe adcl lock mov fistl scas aad sahf adc push call jno mov test cmp clc fisubrl xor (bad) movsb iret or call aam enter pushl pop jbe (bad) pop mov mov fildll loope jp in and js dec sahf push mov int dec ljmp rclb jae arpl add fbld dec add (bad) xchg mov fwait and jb pop (bad) (bad) (bad) decl push insb shrb sbb movsb movsl aad mov (bad) scas or sub mov out std ds scas adc lcall dec lahf leave mov mov psubd call int or xchg cmc (bad) repnz mov or js pop subl (bad) jmp add add jno sub adc mov movsb adc scas inc mov fldt push std xchg fist add ds mov pop xor cli pop push mov (bad) (bad) (bad) clc mov repnz mov out dec and xchg pop repnz vmovntps and (bad) (bad) (bad) incl jecxz push hlt test insb dec sbb sahf mov adc dec push xor dec mov (bad) (bad) pushl lods lcall dec jmp xchg or roll xor pop mov push cmovae jno mov ljmp (bad) incl lahf pop add notb cwtl in test ja pop or xor andl push ss and sub cld das jp fcomi dec popa (bad) in mov mov pop fistpll xchg pop mov insl arpl movsb fcomip pop mov xchg push popf jno int mov (bad) inc cmp mov popf jmp adc loope (bad) call mov cmp stc push fnstsw fldenv (bad) (bad) mov mov mov gs out push xor jl sub mov dec call mov (bad) ljmp add mov jo call jg in add ret (bad) mov into mov add xchg std sub and arpl loopne and mov stos (bad) mov dec pop mov sbb xor aam in adc (bad) (bad) (bad) decl scas popf and pop add (bad) mov repnz xor pop lcall inc xor pop add pushl cmp dec nop or imull (bad) (bad) lcall sbb pusha cs adc stc mov mov insb dec imul pop sub mov (bad) (bad) (bad) (bad) jle and push pop mov popa xchg scas cmp lret repnz cld mov repnz (bad) (bad) (bad) incl adc lods mov jge cltd cmp iret ds pop cmc aaa mov pushl ret add or (bad) aam dec jmp mov (bad) (bad) (bad) jmp loop pop mov nop divl arpl push xlat sub andl push push repz sar ljmp or mov adc sub mov xor jge and (bad) ljmp popf mov jns jp push incb xchg call add jns adc dec (bad) add incl xor push or roll push dec fdivr xor pop pushl and add arpl inc or (bad) call int (bad) flds bound cmp inc jecxz jnp mov mov mov pop add call dec sbb les adc (bad) jg inc mov daa and scas imul jmp lcall insl add pop (bad) leave and das ror movsb adc imul mov (bad) incl xchg mov lahf outsb jnp nop pop lods push sahf ss add (bad) dec xchg jb cld (bad) pushl std push add outsl stos cmp push mov fldenv fdivrl mov sbb cmp mov pushf data16 jg pop je or add pop rclb stc dec (bad) ret jg popa mov mov mov or roll jmp mov lods gs adc jle sahf (bad) mov mov loopne stos (bad) mov in setle cmp push inc xor sar (bad) incl out scas pushf xor nop sbb cmp fiaddl leave jecxz mov (bad) (bad) (bad) (bad) mov xor ss mov mov pushf shrb push fdivp jnp in (bad) (bad) (bad) call inc mov sbb or sahf dec into xchg test sub cmp mov push shl insl cld (bad) (bad) jmp inc fs mov mov mov push and (bad) pushl in mov loope and xor push push cmp out jg test (bad) (bad) out add mov out cmp fisubl jo mov not (bad) (bad) (bad) pushl daa and sbb dec mov mov push ljmp loopne ljmp pop adc jp add sub push into xor js ljmp inc mov and jle insl lcall fs cli cmc push dec jne cmp mov or stc jge mov jl mov (bad) (bad) push ja pop mov dec es imul js test sbb out inc out (bad) incl inc lock mov add xchg xchg (bad) hlt mov fidivr (bad) ljmp stos test cmpsb lods cmpsl lds fdiv lret das in scas sub test (bad) (bad) (bad) (bad) (bad) push je jle dec sub push cmp rorb out pop bound sub insl (bad) sbb ljmp bound aad jo mov jp in movsl mov aas lcall scas lret cmpsl movsb outsb (bad) loop xlat and insl and push lcall test andl iret call ds jl call addl mov or (bad) push sarl hlt mov dec and sahf imul in (bad) imul mov mov incl add fildl mov sarl mov mov inc inc jno (bad) (bad) incl lods aam inc jae or cmp rolb xor ret add pusha cltd (bad) (bad) (bad) (bad) jg jecxz mov push divb mov enter dec inc mov jge adc (bad) (bad) dec test jle data16 jb je mov loopne out jp xchg push (bad) and (bad) incl xchg jnp mov stos xor dec ljmp (bad) push cmp ret outsb ss fstpt call sub addr16 and ret lcall jg add lods ds add repnz fs mov cmp cmp stos xchg pop pop nop mov mov popf cmc lcall xchg cmpsl jmp push mov stos pop add mov dec jl popa std sbb mov xchg iret add add stc out jp push negb iret addb pop adc call sbb loop pushf push push dec add int3 pop (bad) daa push dec lcall cs xchg mov (bad) lret movsb push popf daa sbb in in cmc jmp cmp cwtl shlb sub add mov jg or cmp insl ret mov (bad) (bad) (bad) pushl int inc in iret push in ret test adc add pop or sub mov dec jmp xchg fsts (bad) sbb fldt (bad) (bad) (bad) jmp in or lds int orb fiaddl les movsb enter or cli (bad) call pop jnp decb iret xor sbb (bad) ljmp mov inc out sbb add lcall push mov push sbb add push (bad) jno push xor inc add (bad) ljmp (bad) loop jl ljmp data16 xor cwtl adc add js (bad) (bad) decl pop fmuls pushf rclb mov xor lea xor stc push xchg pushf cmp test sub notl jge pop sbb pop out lods cwtl xchg leave pop or imulb add in mov inc loop lods mov or inc test (bad) (bad) jg arpl in ljmpw jle lcall scas sub mov (bad) (bad) incl nop xchg jne xchg js mov fs pop cwtl or movsl push or xor movsb stos xor ljmp sub repz push push es pop scas std ljmp push mov adc mov pop rol movsb mov aad (bad) lcall jge,pt mov js cmc icebp in rolb jmp or (bad) (bad) jmp es push repnz icebp mov or dec dec mov jg (bad) jmp mov popf icebp cld js das jbe enter ljmp ss (bad) idiv (bad) decl repnz dec adc lret dec in mov mov mov popa mov cwtl (bad) (bad) (bad) decl dec push or mov (bad) iret pop std icebp jns cmc jae mov leave jno cmp ljmp or push gs mov fcmovnbe test mov (bad) lcall lds add xor stc lods js dec lret in aad dec xlat cmp add cmc dec adc mov fisttp adc test sub and dec jnp sbb pop and stos decl mov popf mov loopne outsb sub jne or call push push test mov ret (bad) (bad) decl and add rcll mov xchg mov sar pushl ljmp and cmpsb in lahf add ds iret dec ficomp (bad) (bad) (bad) mov sub les icebp popf adc cmp ret (bad) lods pushf and (bad) mull sahf es xor popa cld jne (bad) (bad) jmp lea push aad cmp pop xchg inc inc jns jge add test inc popa inc (bad) (bad) (bad) ljmp dec jge js xor push adc mov sub aad (bad) (bad) in adc cs and stc sub xchg and dec push dec jo cmovl scas daa loopne lds inc gs sbb mov xchg jecxz lcall jno dec outsb inc mov push xchg push (bad) (bad) (bad) jg cmp xor cwtl fadd and adc xchg cmc into pop movsl outsl mov inc fwait js add jne xor gs cmp or jb test (bad) (bad) decl mov pusha sub into nop inc (bad) enter push mov jo jbe sbb sub jno ficomp gs mov sar push insb dec lcall mov and (bad) ljmp and (bad) fcmovbe cli inc jb pop insl inc or out jne stos sbb (bad) (bad) fcomip add popf mov dec stos dec mov lret inc movsl push shr clc fdiv push insl fldt cmp (bad) (bad) (bad) jg and mov stc cmc call mov je mov push repz mov fyl2x (bad) (bad) (bad) (bad) scas enter and icebp lods out cmp cmpsb test mov xor push mov fnop frstor sbb xor ficom sub in xlat ret cmp adc jmp or inc leave or dec out out sahf cli call pop or (bad) cmp pop mov jg ja (bad) incl push lock clc (bad) sub jg jbe ss or (bad) call jns xchg mov cmp sub clc mov or mov mov out or ljmp (bad) (bad) (bad) xchg push popa pop sbb xchg dec in cmp add lock das rcrb or mov lea pop lock jns gs test sub lods test (bad) (bad) aas xchg pop lahf movsl and loope lahf cwtl (bad) adc push pushf and fsts ret mov fidivr adc repz nop lock mov sbb dec cltd push stos popa cmp (bad) (bad) (bad) incl cmpsl popl fnstcw jno rcl push jno push ficom push test sub fldcw mov mov xchg cmp cmp add or pop shll xchg (bad) (bad) (bad) call lds mov negl push mov fidiv mov xchg shlb fcomp (bad) incl mov jg lret jecxz cli rcl pop mov (bad) (bad) (bad) incl loop in dec jne movsl xlat add out jno int3 or in xor std (bad) (bad) mov adc (bad) pushf lock data16 (bad) jg div mov dec ret imul iret bound pop imul sbb test cmpsb cmp ds out and xor inc (bad) (bad) (bad) jmp and sti jae sbb sbb sub ret push ss jb aad ss imul cld pop lock aas sbb outsl mov dec stos dec lcall fisttpll xor xchg dec pop or inc cmp jo ljmp ficoml (bad) (bad) jmp addb std cmp sbbl sbbl add fdivr (bad) fisttp pusha roll pop cmp js dec sub in (bad) jo (bad) (bad) (bad) (bad) jns push dec (bad) mov and xor jno in or dec inc stc rolb sub add arpl mov sbb sbb pop pop cmp xlat xor fsincos xor aaa inc sar pop mov mov mov mov (bad) (bad) decl xchg and cmp mov (bad) (bad) mov push movsb sarb test lahf add std jle pop mov add imul (bad) xor dec pop lock mov pop popa pop (bad) xlat loopne,pt dec call sbb out mov cld (bad) (bad) (bad) fistp add cltd pop pop mov sbb test aam pop xchg das test ss das mov xchg int3 movb sahf js in ret lcall sti test xchg lds lret adc ds das (bad) (bad) (bad) (bad) jg pusha movsb jnp nop mulb cli or add cld jp push inc daa push outsb scas add or das sar jp and jbe stos cmp pop mov pop gs (bad) (bad) (bad) dec dec pop popa xlat xor sub pop mov mov pop lcall xorl cld (bad) adc (bad) (bad) jmp (bad) sub repz pshufw test xor aaa scas push cmp xor lcall jmp mov lcall aam fadd fdivs jns mov ja lcall adc int3 mov inc jo lahf fdivl xor adc mov mov idivl mulb inc pop dec mov jg fidiv data16 ljmp mov push imul (bad) cmp sbb mov xlat jp ds std in imul cmp (bad) jle sbb jle sbb fcmove (bad) hlt and inc movsl jp cld jnp (bad) (bad) (bad) (bad) jmp mov scas and inc push xlat push mov mov push aas lock cmpsb fildll lret aaa xchg push push hlt add push or sahf (bad) (bad) (bad) incl inc mov js movsb mov sbb jmp rorl (bad) xor sbb aas dec pop imul mov xor xor fadds decb rcr pop aaa dec jle lods bound lock push jae fcmovnb mov bound gs jno cmpsb jl (bad) mov pop ds push push xor pop sar push lds pop cmp shl mov incl cmpb push repnz fidivl ret mov lock (bad) (bad) pushl mov push movsb std les aam add cli repz sub pop or push mov cmp hlt (bad) std lods sbb lds fildll inc hlt push mov adc (bad) decl push mov cmp stc mov inc mov or (bad) xlat (bad) (bad) (bad) jg stc loope (bad) cli add arpl pop add popf cmpsl fsubrl dec mov rcll or push ds inc and loopne nop pushf jmp push pop sbb shld pop inc xor pusha pop sarl gs imul push push push lock push fistl lret int3 ret gs xorl push pop add imul adc (bad) mov sub push (bad) mov daa xor add dec sarl xchg mov push dec adc (bad) ljmp push shl jmp cmp mov (bad) (bad) (bad) mov xchg insl lahf out sarl jmp mov nop int aas fisubl xchg sub pop cmc jmp push mov loope mov push add jns and pop hlt and inc mov and (bad) call pop sub lods pop lahf (bad) push or sti jl rcll xchg lret fiaddl (bad) (bad) (bad) incl lock enter out ret adc sbb xor jp hlt sub mov incl adc sub jo out xchg int xchg sub (bad) (bad) call mov xchg add ds rclb aas lret push jae inc jns xchg out (bad) (bad) (bad) cmp scas cmp sbb (bad) out sub mov jp pushf xchg call push fsubp dec outsl jmp pop in repz scas (bad) (bad) incl iret outsb cmp pop xor pop jl or andl (bad) (bad) call stos fidivl xlat dec insl mov add jb es sbb xor cwtl (bad) (bad) (bad) (bad) jp sbb push js push sub and push iret imul sbb (bad) (bad) ljmp jbe dec sub mov ds and dec ss (bad) (bad) call leave push xchg imul lods cs mov outsb jo pop mov lcall out out ljmp bound lahf adc mov cmp int daa ljmp aad adc iret testl push jo mov insb addb sahf inc in lods call (bad) (bad) ljmp fmulp (bad) inc jmp sub (bad) insb mov and (bad) jno gs (bad) (bad) (bad) (bad) jmp aad mov pop cli sbb enter out jg divps cmpsb int hlt xchg incl dec loope (bad) call push dec addl je inc imul (bad) push mov ds push cmp or mov add ljmp out out sbbb adc (bad) (bad) mov insl inc mov cwtl je enter cmp aam inc jg (bad) (bad) (bad) fist push int dec cmpsb loop lods cmpb fs lahf jbe push xchg (bad) (bad) (bad) lcall sub or outsb scas mov and push cs and sbb push (bad) (bad) (bad) (bad) (bad) (bad) and pop sarl in mov addl xchg je add sbb (bad) (bad) inc cmp jle dec jecxz mov xchg insl or adc cmpsb dec (bad) ret pop icebp xchg (bad) (bad) (bad) jl imul stos test iret loopne inc pop fwait dec xor mov pusha insb jns cmc (bad) ljmp dec push rcl cmp aam and popf leave push add sub ljmp adc fist add dec and (bad) jg in mov jl outsb pop xchg sbb mov xchg (bad) call ds xlat sbb push xor jns pop in fsubr push insl dec clc add arpl (bad) push xchg jmp stos enter cltd out call pop leave sub (bad) ljmp popf rorb dec jbe and outsb clc dec call xchg popa mov std dec mov outsl mov adc dec pop dec cmpsb out loopne hlt cmp push inc xlat idiv jmp xor adc cwtl sbb mov jecxz (bad) (bad) fistpll int3 mov sub loop pop mov mov mov mov sar stos inc sbb mov cmp push inc or add (bad) mov sbb decl mov cltd sub xor repz (bad) ljmp jo inc dec out sub add sub mov mov call sub pop test inc cs aaa jp ljmp dec je addr16 xor adc (bad) (bad) dec pusha stos scas sub mov lea xor or test lret cwtl mov add jp,pt sbb jno icebp sub (bad) (bad) mov sub icebp xchg cwtl mov fnsave push sbb add mov rcrl (bad) mov push cmp add out fbstp scas xor ljmp subl mov mov rcrl pop jecxz rorb call gs dec popf mov or rcll mov xor ljmp (bad) adc mov pop repnz push dec mov fs or (bad) jle aaa sub dec repz sub outsl mov ljmp mov lock add jp cmp sahf fcoms inc aaa movsl frstor (bad) (bad) (bad) ds sub int xor cwtl repz pop cmp clc pop stc cli lds lcall adc clc mov enter cmc jo (bad) (bad) (bad) ljmp (bad) lods aam dec or dec (bad) cwtl push aaa sub repz dec mov out pushl sub xchg xchg cld ret or in jbe aaa inc or decl sub iret jp imul aas sahf mull out mov movsb mov fsubs pop pop std inc js incl pop bt rorb push ret dec imul ljmp jae int sub cvttps2pi mov inc outsb jecxz xlat (bad) (bad) (bad) lcall adc fwait cwtl jecxz add adc pop inc cmp or in test hlt pop inc xchg es mov mov mov push sub mov sbb js out ret loopne (bad) pushl mov xchg aad cmp pushf adc or loopne dec adc call push fs imul push call scas (bad) (bad) ds insl in ret mov mov sub mov sar call or arpl mov out cmpsl ret xchg fisubr insb sbb xchg js sbb push jl icebp adc (bad) push adc pushl push and jecxz out xchg mov cmp (bad) (bad) (bad) xchg or loop in std push notb insl mov or loop clc dec cli and or push (bad) and fdivl loope (bad) mov enter xlat call xchg lcall lods inc popf push pop gs add (bad) dec mov mov mov loope dec dec or push int mov jl inc lods push sbb jns adc dec jecxz subl bound hlt sbb pusha (bad) (bad) (bad) incl scas pop es mov icebp mov inc push iret push adc pop stos into mov addr16 lret (bad) incl add imul mov call sbb (bad) xor es call sub jae dec loop test inc outsl pop push (bad) (bad) (bad) lcall xchg mov mov pop je ret add rcll loope outsl mov xor (bad) cmp xor and or test mov cmp lock ds or inc incl jl (bad) push popf cmp nop mov hlt clc inc adc (bad) mov inc cmp inc mov and and sahf enter and (bad) (bad) decl and adc gs (bad) pop scas rcrl rolb repnz sbb dec xor jno pop adc hlt (bad) (bad) (bad) (bad) in stos stos imul pop push fiaddl mov jg jp in or pop sahf jbe inc ret lret mov jmp mov pop stos (bad) jg adc xchg xchg (bad) lret repnz pop pop popf adc (bad) (bad) jmp lods (bad) (bad) das iret dec jmp ret data16 push (bad) mov jecxz (bad) jnp cmpsb (bad) fisttpll push gs shr and (bad) lcall mov mov or and dec ficom add sub outsb inc mov outsb adc inc mov hlt inc jmp stc sbbb lret out xor cmp aaa cli pop cli (bad) ljmp pop leave mov pop int jnp push les cmp mov (bad) jmp mov cmp xor mov pop ljmp mov sti mov inc fist dec daa fwait cwtl jb ljmp mov icebp js enter call insl std (bad) in jae sub clc popa push fstps mov (bad) (bad) (bad) jg repz add inc ror fldenv adc dec mov call push cmp sar or loope add mov push sub xchg rorb and es ds (bad) decl insb mov and inc mov jp incl mov ret stos add das sub (bad) (bad) fcomip or or popl sub incl fiadd fiadd leave fcoms dec std and (bad) (bad) pushl or (bad) xor push and sub adc fnstenv xchg xchg cld push (bad) (bad) (bad) decl stc cmpsl dec xlat test xchg jo imul in jmp pop cmp test mov (bad) cli sub cmp pop jge into daa outsb cltd dec adc inc or inc fs pop (bad) (bad) (bad) inc (bad) push test jnp mov xor scas fild jp pop aam jnp mov push cld loope decl popf push jg jle jl cld xor dec push sbb lahf mov (bad) clc loop dec into or mov sbb in inc jne loope loope push test vpunpckhbw shrl sar loopne jg test pop xchg pop inc add inc cmp gs (bad) mov or addr16 push sub cli loopne insb pop inc and inc rclb movb pushf loopne sbb jne sub jmp dec test lret cmp mov mov mov je sahf push (bad) cmp outsl push mov push jnp sbb cmp sub or xchg mov mov lret fsubrs enter pusha imul (bad) outsl adc mov rcrl out mov sarb in xchg or fisttp jle popa push sarl iret aam test (bad) (bad) incl loope sbb pop jmp in in pop sub fisttp das mov mov (bad) dec lock mov popf push mov inc sbbl sti add sarb (bad) jns and mov sbb nop outsl ljmp ret xor shlb sbb push or es pop and out pop cs inc cmp push cld push mov rcll popf inc mov (bad) (bad) pushl jns or es sahf adc and repnz cld (bad) (bad) ljmp inc add out or out test lea lods mov ficompl nop out je mov js cmc stos sbb cli jle (bad) (bad) decl jmp aam inc das cli aaa sbb fmulp mov inc (bad) cli cmpsl pop pop loopne jo inc cli (bad) (bad) decl nop imull jle dec ret repnz pop in lahf test sub mov call or adc add adc test cmc decl mov popa fwait nop mov xchg push fsubl sbb xor outsl ss mov or (bad) incl int3 add jl adc sbb fsubrl (bad) jg popf mov ja fs adc arpl dec lret sub cltd push (bad) (bad) jg xchg sbb and lret iret add (bad) (bad) stos and (bad) lock xor xchg dec bound cmp cwtl and dec out ja (bad) (bad) dec pop mov mov inc mov pop rorl aam in mov mov jge dec nop (bad) (bad) (bad) jmp cmp push cmp test hlt and xchg add adc xor fucomp dec (bad) fidiv cltd pop or add jnp (bad) push jl jne xchg fdivr (bad) (bad) pushl stos fwait pop fcmovbe dec iret or cmc dec xchg xorl adc pusha ret loopne je pop (bad) (bad) (bad) pushl mov sub push push es mov repz xor les rcll lcall lea sbb fstpl fnsave inc daa push cmpsl sub cmpsl mov sarb xor (bad) mov das popf shll dec dec mov es mov jmp (bad) (bad) (bad) lcall fnstenv call and mov mov fisubl hlt cmpsb decl jmp ds ljmp ljmp add addb mov lea and xchg pop rorb (bad) (bad) (bad) jg lar das pop icebp or ror arpl je mov and and imul dec push jae lods push push cmp inc sarb mov pop sbb mov ljmp cltd lcall (bad) scas and sti ficompl repz (bad) movsb cmp jp rcr dec mov call sub ds push or (bad) (bad) jmp mov dec fstpl pop (bad) data16 outsb into mov adc leave and sub movsb (bad) lcall pop adc jns mov repnz nop (bad) ja inc mov or outsb and dec mov cli (bad) addr16 adc lcall jo mov cmp int xchg mov mov cld pop repz dec mov (bad) jp les dec insl sbb call mov mov enter push test mov repnz sbb xchg jne (bad) (bad) (bad) cmp xlat jl jecxz pop inc xchg lods dec stos or les mov ret (bad) mov out adc repz cmpsb aaa or mov test or jg mov mov decl pusha scas and jl jne push (bad) mov mov fnstenv inc jmp fs lods int3 stc lret jp (bad) (bad) (bad) decl dec inc jecxz mov loope notb mov sub jnp mov cld test push in cmpl jo (bad) lock mov call add add lcall or aad addr16 mov mov add (bad) (bad) push cmp mov push xor dec std adc (bad) adc and clc jg or jl xor lods in cmpb mov test int3 jne pop lret jp (bad) lcall push xor fldenv xchg or cmp (bad) ljmp fistp sbb xchg ja out aam es sar ljmp sarl mov in pop cmp add add xchg scas push cld in (bad) fincstp lods dec push (bad) cmc add lds ret pop sbb (bad) jg mov and stc adc mov cmpsb mov ljmp push aad fmul loopne add mov or (bad) fisttp mov dec sub add lods adc call (bad) call mov jnp es inc (bad) jne les (bad) (bad) lcall push sahf (bad) and jecxz xor sub arpl pushf add test (bad) mov inc ds mov push dec push out jns push fsubr adc imul inc (bad) (bad) (bad) dec scas cwtl inc jo mov insb sbb addb pop (bad) mov lods xor decl mov arpl xchg imul sub out (bad) (bad) jg popa pop push sbb call cmpsl push (bad) (bad) pop pop andl cltd (bad) (bad) (bad) call insb not jl mov dec clc and or es inc cs mov popa lcall pop daa in sbb pop add bound lahf jp in repz sub sar (bad) (bad) jnp je loopne xor push arpl pusha ret leave xchg cmp jb and push jmp lahf mov mov mov ret adc (bad) (bad) jg push test sbb adc hlt pop push (bad) fstps hlt pushl cld lcall inc (bad) jbe ljmp mov fcomip pop dec jmp push push arpl ljmp pop outsb (bad) pop cmc (bad) ljmp mov cmpl test or dec sub scas add das adc lea das data16 popa jne arpl xor jg push cld jmp mov ljmp xor repz dec (bad) (bad) (bad) ljmp test mov (bad) xor jae fistl or jp nop dec or (bad) decl mov xor out jns das (bad) jp xchg xor push and cmp lret (bad) (bad) (bad) incl adc (bad) hlt push jae out dec add add popf ljmp outsb pushf incl mov mov pop pop xchg nop dec rorl push sub (bad) aas fdivs push popf or (bad) iret scas xchg or cltd pusha add (bad) pushl insb int3 adc or pop int cmpsl insb imul movsl lret or (bad) jg (bad) ljmp mov or jle lea addr16 rclb dec popf xor movsl jecxz cmpsb stos jmp andl or (bad) (bad) (bad) lcall pushf leave xor add mov inc mov xor xor incl and sbb jns dec pop jle icebp faddl popf dec out test (bad) (bad) jmp dec aad or out mov jecxz in or movsb mov push (bad) lcall cwtl mov jecxz xchg mov sub into jmp fsubp add pop cld incl xchg int (bad) push out pushf sbb fs iret pop adc fild mov ds mov stos jns clc (bad) lcall je ljmp ret mov dec push xchg (bad) (bad) ljmp push pushf cmp es cld repz mov inc test (bad) (bad) inc adc mov dec mov mov pop psubw (bad) sub pushl cmpsl add jl fiaddl add mov aaa dec les ret and (bad) (bad) mov addr16 mov lods jle lret pop cmp (bad) (bad) incl movsb push dec es sbb xchg mov inc push mov sahf fwait push adc cmp mov sub pushf vrsqrtss sub cmp cltd xor aam xchg sub (bad) lcall mov fistl aad push sub xchg or lret cmc pop stc insl cli (bad) ja popa cld mov (bad) (bad) (bad) aad (bad) aaa (bad) movsb shlb fdivrs push (bad) (bad) call push inc push mov cld lcall outsb cmpsb (bad) (bad) (bad) (bad) cmp lds adc add mov or and mov fisubr inc sbb (bad) (bad) (bad) (bad) jns shll mov pop adc jg push or pop mov out (bad) incl rorl aam pop xor add je push (bad) jno push cmpsl lods (bad) (bad) (bad) lcall and fldt lahf and into (bad) jbe lock out std and icebp das rcr inc cmp cli (bad) call push or mov push mov (bad) lcall fdiv cld bound ja ret jecxz stos repz stos cmpsb je sbb in jmp pop mov push jo push sahf int3 addr16 cmp sti cmp inc cmp js fldcw (bad) mov lahf xor (bad) cmp mov xchg popf movsl push imul aam and inc data16 cli cmpb (bad) (bad) (bad) inc push int3 sbbb shlb repnz mov (bad) sub lds ret scas or and pop mov mov fucomip mov pop pop inc in call or (bad) (bad) fisttpl push shrb scas test push arpl jge das mov (bad) (bad) (bad) (bad) in (bad) enter cs insb pop inc xchg or push xor loope sahf mov sub movsl lahf movsl arpl sbb dec in test cmp fsts (bad) jg ljmp mov shrl cld (bad) (bad) decl aas push pmovmskb (bad) jae aad mov clc repnz xchg fstpl fsubrl cs mov int (bad) jg dec ds mov pop test orl mov repnz fildll mov clc xchg (bad) jg jbe aam mov push mov iret inc dec pop jno pop mov push jge inc clc (bad) mov xchg push cs mov xor arpl ljmp rcr (bad) mov js cmc mov mul outsl dec in xchg (bad) (bad) (bad) jg dec (bad) loop ret into xor std (bad) (bad) lret cli adc fisubl (bad) cld fsubl (bad) (bad) (bad) decl mov or adc std mov mov fstpt mov inc movsb adc mov xor into xchg fwait addr16 scas and (bad) (bad) (bad) fdivrp xchg fmul adc lock fnsetpm(287 shl pop mov std mov (bad) or bound (bad) (bad) (bad) jmp inc bndstx scas ret mov or inc jmp daa pop mov pop imul (bad) lcall pop test mov and outsl sbb fs mov (bad) lcall (bad) mov mov aad xchg mov xor cmp dec imull arpl (bad) (bad) jmp pop loop fdivr test out lcall ljmp cmp pop add mov call push cwtl push xadd jo lcall inc jmp sub push fadd pop pop (bad) (bad) (bad) decl pop mov divb popf lods and inc das pop dec out cld pusha aaa pushf loop clc mov stos test mov loope addr16 loop jle push dec aaa out outsb outsb stos sub xlat inc push movsb (bad) jl adc idivb das (bad) push push lea jg cld jae fbld fsubrs testl fimul mul (bad) (bad) (bad) decl inc pop mov jge cmpl dec sbbl out pop nop xor das jecxz cmp (bad) (bad) call outsb jge push je out or mov mov in mov sti (bad) (bad) (bad) jmp xchg dec xchg mov xor mov inc ljmp prefetchwt1 inc pop mov push js,pt or and (bad) (bad) (bad) jmp rclb jmpw adc adc mov das std mov mul aas in popf repz mov daa gs iret push (bad) mov push (bad) out aam rolb out sub imul leave xor xchg or (bad) incl cmp scas sbb pop dec adc sbb imul jg aas mov es mov std das or cld (bad) incl jo dec cmp into icebp out scas jp cmp inc movsl or (bad) or sub (bad) jmp lret roll faddl xchg mov mov idiv (bad) (bad) jmp sub popf mov mov hlt inc lea test xchg push mov push call mov decb add stc mov sub or incl pop (bad) fldcw sub mov (bad) (bad) out ds cwtl in xchg pop jno cwtl imul jns cwtl lods scas fsubr jae popf fdivrl (bad) (bad) cmp push das ret and xchg repz inc cltd dec sarb gs mov lcall (bad) test test or dec jl into test outsl imul inc or and clc call outsb or sub sbb xor (bad) fistpl negb pop xchg xchg push pop decb bound mov cmp (bad) jg sbb addr16 add rcl repz push jmp (bad) (bad) (bad) call repz mov mov ljmp cmp xchg mov push outsl (bad) (bad) (bad) (bad) cmp jmp mov dec test inc xchg dec lret pop ja ss jb dec jmp (bad) pushl add push loope sbb push jns iret mov popa push ljmp xchg pushl clc dec icebp test mov pop out fwait clc nop test (bad) (bad) push (bad) popf lahf test je test in jmp gs xchg inc clc movsl (bad) (bad) (bad) jmp jecxz call sub add add mov xor outsl cmp decl push cmp push iret mov lock dec and pusha mov ljmp inc lret out scas (bad) cmp fist mov inc (bad) xor mov hlt adc (bad) (bad) decl pop push or lahf push jo dec sbb dec jmp imul inc dec jb xor gs decl jae adc jle pop insl ret mov dec std mov push pop cmc lcall mov xchg fs (bad) (bad) jmp (bad) lods dec lods inc (bad) enter push sub movsl xchg push add push mov sbb jl mov addr16 loope,pt lock push jle pushl xchg inc xor inc push jne es adc (bad) lcall ret lcall push sub cld and pop ljmp nop jne in out stc jp xor (bad) (bad) jmp dec (bad) fisubrl mov ja inc shrl into adc cli push mov sahf fwait test dec dec inc pop dec scas cli mov iret setp rolb pop inc sbb jae xor mov pusha fcomip sbb jmp or inc push imul rcl push loop (bad) (bad) push mov mov add jp mov test mov (bad) testl loopne ret cmp xchg lods pushl inc cmpsb addr16 pop dec mov insl repz (bad) (bad) inc gs add loopne pop sbb inc xchg (bad) push xchg add xlat sbb insl (bad) (bad) (bad) push jecxz mov or add movb inc xor sbb (bad) (bad) mov lret and adc mov adc adc cltd je push jg and (bad) (bad) (bad) jmp dec cmp pop movb mov dec lds nop jmp std xor jo repz jns and mov call fs enter movsl int lret rep pop out iret inc in rcrl aas xor (bad) (bad) jmp shr in ja into rorb cmp pop loope (bad) mov pop mov and ficomp adc lcall sar (bad) (bad) decl xor dec lods and add xchg or jmp es adc mov scas pop stos scas fistpl mov push out jbe shll data16 xor ja jecxz (bad) (bad) (bad) call pop daa mov push pop inc mov cmp xchg stc test inc leave fwait xlat cmp daa mov jmp jae dec insb push cmp out dec iret fdivrs push shlb jbe mov add dec ds xchg ret lods scas clc incl scas add imul push in inc test jl (bad) (bad) out adc es fiaddl cmp aaa mov fwait sahf adc lsl jmp pop push nop cmp sahf pop or jmp movsl xchg dec ds sub lcall outsb jnp xor in xchg lea mov fs dec movl js push sbb jg,pt inc lcall imul cmpsb jg mov xor popf and push popa lcall push xchg inc mov jae loopne mov mov push cld pushl mov inc push in sub or insl nop les int bswap push aaa addr16 inc add mov pop and clc (bad) (bad) lcall adc and cmp les push stos or movsl push adc mov sub icebp hlt cmp adc outsl add ljmp jo jecxz adc mov incl add push dec cmp xchg adc dec pop icebp aaa mov (bad) (bad) (bad) inc int rcrb mov mov mov mov outsl sbb (bad) push xchg mov and (bad) (bad) (bad) inc xchg sub mov mov pop pop xchg rolb jnp call jl or stos idivb push movsb out sbb call add js out pop dec xor mov mov pop fist jecxz push mov or sahf mov gs (bad) jg loop fcomi mov fdivl (bad) sbb jmp xchg jae es (bad) ljmp or pop mov icebp push mov fistp sub sbb and push mov inc stc jb test jl dec inc jle fisttpll lds or mov push jmp pushf xorl pop mov xchg jmp sahf add popf lahf inc ja cld ljmp les lds xor pop std jg imul inc mov jne xor (bad) mov inc dec fs pop lods mov sub (bad) incl or xor sti out cltd cmp ja push mov xlat add outsl std pop test cmp (bad) (bad) incl fstl pop xorl pop ror push aas cmp mov add sub add fsubrs pop and sbb dec fistpl loope mov into dec jle and lret push push pushl gs aaa out adc jmp xchg mov jb jmp (bad) (bad) (bad) mov pop aaa es fdecstp outsl test or loope sbb movsb shr scas fs out test jo inc cli mov sbb cmp cltd cmp jmp fwait push and outsb sti and movsb fs call std out ds push ds shll mov cld mov test mov add (bad) out hlt xchg sbb ret cmc rcrb dec xorb (bad) xor incl (bad) cmp sub cwtl dec addr16 in jns test lret movsb push jae lods inc aad (bad) (bad) (bad) cmp or mov mov repz lret and jnp sbb adc push push push je or add (bad) (bad) mov ds dec das rolb dec lds adc (bad) (bad) (bad) ljmp push dec call outsb (bad) aas xchg jnp cli ficoml mov mov mov (bad) jg pushl cmp sbbl out iret popa stos inc rcrl xchg movsl cwtl xor sbb (bad) (bad) lcall jg dec inc clc pop mov in je xlat icebp mov fs push jecxz call sti (bad) jmp cmpsl stc lahf enter add in (bad) mov pop imul (bad) jg or sub pop add es sbb mov shrb (bad) (bad) (bad) lcall pop cld orb pop mov andl inc inc cmpb loope roll (bad) call push cmpsb in call jo inc sbb out cmp dec jge (bad) add jp mov idiv (bad) aas add mov push lcall mov and inc (bad) (bad) (bad) (bad) jge (bad) push mov dec pop cmpsb adc mov loope xchg in or sub cmc ljmp ret sub into mov push adc mov push push ret inc dec (bad) (bad) (bad) incl nop pop sub addr16 mov fldcw adc inc arpl cmp (bad) aam sar stos sbb xor adc xorl (bad) (bad) pushl mov imul outsb cwtl push imul jmp fldcw outsl and iret (bad) (bad) (bad) ljmp (bad) sub lcall mov jb pop (bad) insl repz (bad) (bad) (bad) (bad) fimul xchg sub mov push ljmp js cmp xor (bad) jmp jmp out loope dec (bad) inc and hlt hlt (bad) call je out ret jnp das loop cmp fldl outsl pop outsl or cmp jp mov add mov idivl lcall adc adc out ljmp xchg mov jp loopne pop cmp push xor jle pop xchg out xchg or adc mov mov mov movsl adc jecxz push pop jno mov repz in repnz decl mov out mov lret mov (bad) ljmp fildl sub in sub (bad) jo push (bad) lcall mov push cmp ljmp (bad) (bad) (bad) lcall (bad) cltd sbb cmp insb pop iret fiaddl sbb cli mov and (bad) (bad) ljmp scas dec or xor iret cmc push les (bad) mov aaa xor mov ds ja ret or xor imul jmp add int or aad xor lds out dec fstl xchg aam adc or jb dec fucomip mov (bad) (bad) lcall repnz inc scas cwtl in mov out jne and fiaddl xchg mov xchg sub out cli pushl or jnp leave inc mov sbb lret out push xor (bad) (bad) jmp push sub rcll js jns mov leave (bad) sarl push nop mov js cmp cld call nop cld or add and mov in aam mov cmp (bad) (bad) pushl pushf iret adc imul loope testl dec jne cmc mov xlat arpl lcall out add (bad) jno pop push inc test inc mov cwtl sbb daa ret ja in (bad) (bad) (bad) decl stos mov aad popl aaa (bad) (bad) xchg and or rclb jo and mov std (bad) mov mov int3 mov (bad) (bad) lcall mov mov out subl lcall mov cmp mov push pop mov and in push imul mov push or lock (bad) aas cmp pushf ds xchg and aad mov lods scas int daa (bad) loop adc (bad) (bad) fistp xchg repz out fwait or outsb xchg mov mov cmc cmp fistl arpl enter in or pop loop pop popf xchg sub test (bad) (bad) jg into add lea in incl psrad bound ret shll inc cmp bound (bad) pushl cmp icebp in int fdivs pop mov cli jp (bad) (bad) (bad) mov lahf sbb nop jo mov and sub push lret std mov pop push lcall xchg or mov fadds jecxz mov inc push inc inc sub ror and decl mov adc and pop fstpl or (bad) (bad) (bad) decl addl xchg jae xor push nop in sub and imul imul mov inc xchg or sarb push ja (bad) (bad) lcall idivb popa enter mov rolb daa (bad) fnsave push shrb pop ja (bad) (bad) (bad) jmp in das jle cmp stc mov sbb xlat pop popf pop lret jmp xchg mov push ficom pop sub mov pop hlt into and sbb mov movsb add jge or mov jnp sub mov push fldcw xor in out mov jge imul mov or pop gs pushl sbb lock jge (bad) (bad) ljmp fcmovu jns inc jno (bad) data16 adc mov out mov jl adc mov (bad) (bad) mov shr sub iret das sub cmp mov repnz xlat mov jecxz mov and fucomip repnz push mov sub cmove mov pop mov (bad) (bad) pushl int3 loopne adc push (bad) inc jge sub cli xchg std xchg or in ret cmp sub ljmp mov outsb jge (bad) jle jbe outsl push cld mov push cs rcrb outsl (bad) (bad) lcall dec adcl or ret (bad) jge mov sub adc dec pushw push addr16 cmc repz xchg fist imul sbb mov dec lods idiv (bad) call pop push in pushf push mov mov jecxz fwait cmp adc call test mov dec in int sub test mov pusha pop scas enter ds decl add stc or jecxz lahf adc clc rcrl fcoms (bad) scas mov cmpl xor adc (bad) sbb loope (bad) (bad) lcall push imul sbb xor pop add push xchg cmp nop cmpsb inc and dec xor lahf mov in insl (bad) push and xor pop cmpsb mov mov fnstsw mov ret sub (bad) (bad) incl inc aam (bad) ja test inc push (bad) jecxz aad jmp push push (bad) (bad) (bad) ljmp sub push movsb adc outsl fstps lret mov bound pushl leave push mov pop sbb and cli aam xor fmull pushw fistp inc mov or (bad) (bad) (bad) ljmp and fisttpl cmpsb inc push jecxz adc stc xchg xchg lret imul pop xchg pop (bad) (bad) (bad) call inc sti push xchg fisttpl jbe aam adc cmp in movsl push sub pop xor (bad) (bad) (bad) push repz cmpsl dec aam pop mov push mov loopne mov jp push cmc sbb mov pop incl or xchg aam cmpsb hlt fldcw (bad) lea pop cmp ljmp jnp adcl sahf loopne mov in mov mov sub pop pop ljmp enter dec dec mov les dec push mov pusha mov adc stos (bad) (bad) (bad) push subl fs adcl push pop testb out xchg test or das cli (bad) mov dec (bad) push out mov push xchg out (bad) hlt mov cmp mov (bad) pushl cmp push movsb xchg jo adc cmpsl fbstp xchg jmp or (bad) stos dec sahf jne stos pop jae inc mov ja flds inc push (bad) (bad) mov sub jg fmulp inc inc mov jecxz popa movsb repz and push aam mov (bad) (bad) (bad) in jnp dec jle jnp or add xchg (bad) (bad) ljmp gs fisubrl lcall popa aaa xchg sbb fisubr (bad) mov xor incl push in decl jmp les fstp push adc pop xchg out lcall (bad) jmp gs cld mov inc hlt pushf jmp js lods int and dec cmp (bad) jmp cltd pop add adc in mov jmp mov cs insb fisubrl hlt sti es pop insl push dec pop ret sbb cmp cld (bad) (bad) call push pop cltd add lods jg ja aam cmp mov jecxz cmpsl or (bad) jecxz movups (bad) lcall push mov push imul cs lret stos jl (bad) (bad) incl ds or or mov adc dec adc lea pop (bad) (bad) (bad) call mov ja insb and mov jge cli test dec outsb ss test cmp test andb dec inc jmp divl or call mov pop (bad) xchg fwait mov pop and es popf add jb in or (bad) jg xchg push mov sar push data16 imul cmp mov (bad) (bad) jg xor mov test addr16 cmc mov mov (bad) (bad) (bad) mov mov xor loopne sub mulb push adc call cwtl (bad) rclb loop add sub mov adc orl xchg movsb idivb push mov push adc clc (bad) out mov dec (bad) lahf aaa add push add adc (bad) decl xchg and std arpl add insb inc (bad) sbb int3 fildl (bad) (bad) incl mov bound int jnp dec adc into cld add fdiv jmp cmovl (bad) jg dec xor cmpsl mov (bad) (bad) (bad) mov mov sub mov pop mov push push fwait js sbb pop add dec (bad) cmp ljmp mov sub cltd stos (bad) test icebp aad std mov push fisttpl mov stc lcall stos fistpl pop inc cmpsb mov mov hlt sbb pop mov push clc xchg and movsb cld popa sbb sub (bad) incl sbb cwtl repnz pop mov (bad) sti (bad) (bad) jmp std pop decl pop mov add jbe mov jns xchg push add (bad) pop mov sar push push bound mov test inc mov mov add pushf dec add out and cmpsb mov out cmpsl js inc ljmp cmpsb and sub fwait jo int in (bad) lcall dec aas lods loope call mulb pop mov sub mov dec xor dec aas cltd sub adc test (bad) mov lahf mov mov cmp nop add push xor xor adc (bad) lret pop jno das cs inc sahf (bad) (bad) (bad) ljmp into ret jb ds or xchg repz stos sub dec and (bad) (bad) call mov sbb subl mov ret int jp mov jp xchg (bad) (bad) (bad) ljmp xchg das pop inc repnz out (bad) (bad) jo inc cmc xchg inc fs pop pop daa out or pushl mov push aaa clc adc push outsl mov (bad) sbb and (bad) (bad) jmp and mov xchg adc dec cmp loope pop cmp ret pop cld mov xor (bad) (bad) call out jb je jl ret insb repnz add call xchg addr16 lcall aad xorl and xchg push ret cmpsb mov (bad) (bad) mov mov xor in cld std fmull sbb xchg push sahf movsl cmpsb push bound (bad) (bad) mov xchg (bad) push (bad) push pop idivl addb dec (bad) mov jno dec arpl push (bad) (bad) (bad) ljmp ja pop xchg jno lock (bad) mov jp pop push test or js sub jmp cmc push fs lret mov xchg outsl cli pop call dec mov pop dec ja xchg push je (bad) cli pop mov (bad) ljmp addl ja popf xchg adc sbb aas in push rolb jg (bad) call or mov inc add data16 or mov dec fcoml cli mov (bad) (bad) decl aas lds loope sbb dec cmp inc jns xlat cmp mov lods xchg jmp std add pop lods imul cmp adc adc es cli mov xchg test dec mov (bad) and loopne loop sub mov cmc pop xor pop mov (bad) out clc shrb cmp in (bad) jbe fstps gs cmp lods sbb or lods fs das sbb decl sarl ss pop test inc push (bad) (bad) (bad) decl or inc push fdivl mov sbb addr16 xor push push ret hlt (bad) call adc pop mov enter leave cs jnp mov icebp jmp adc sub cld aam (bad) (bad) jmp mov jl xchg ja inc in fwait push jl repnz aad lods pusha push sbb fsubs jo gs test movsb cld ja rcr jno,pt mov js incl stc or loopne xor (bad) lret lds adc insl (bad) fnstsw mov mov dec cs xor xchg (bad) (bad) call push xchg push (bad) int scas xchg rorb test mov les lds repnz lcall push ret mov sub in movsl push adc ss dec cwtl stos js adc mov and out clc adc aad inc es xchg popf loope pop inc ret les ds adc adc (bad) (bad) lcall pop clc test popf mov or sarb (bad) push test lret jge fisttp cmp sub (bad) icebp fldl (bad) (bad) out add (bad) fwait pop mov xlat push in xor xchg inc std call adc (bad) dec sub (bad) out mov mov mov xchg jb ds ljmp (bad) fstpl jne daa outsl (bad) ljmp push outsb xchg pop sbb stc jne pop stos mov cli loop or mov xchg pop xchg or (bad) (bad) (bad) jmp icebp ss movsb and jle push jo mov inc repz mov cltd pop mov (bad) push mov (bad) (bad) (bad) jmp ret addr16 and cmpb inc push pop or pop add mov (bad) (bad) (bad) lcall js orl pop orb cltd dec cmp test mov (bad) (bad) (bad) (bad) mov mov mov xchg iret nop cmpl cltd fadd cmp call (bad) lcall aad loope mov sub push sub jp mov xchg scas (bad) insl xchg xchg outsl mov aaa dec (bad) fwait cli cmp sti and (bad) (bad) cmp test sarb xor (bad) adc lahf xchg lahf jbe mov (bad) jg ds sub lock sub push shr add xchg loope incl dec movsb (bad) enter das inc jno popf aaa ds je sar sahf xor test fs jmp (bad) fcmovu mov shrb pop jl xchg mov ds mov (bad) (bad) call in cmp jmp or aam stos daa and cmp cmpsb insl push jno cmp cmpl mov pop or mov push inc fstl cmpb pop and inc int or pushl cld outsb sahf daa mov xchg and sub inc jg jnp repz or mulb nop call (bad) (bad) call xchg mov loop pop daa or mov push push nop dec add add aam (bad) (bad) cmp mov mov jmp repz cwtl insb enter sub mov mov inc add test xor xchg mov (bad) jmp paddsw test ds std push xor addr16 and mov loop (bad) jmp in pop lock fnstcw ja mov cwtl dec jle add jecxz stc mov sbb inc and lret (bad) mov pop cli clc sahf cmp nop neg inc mov fdivp cltd sub test sar test sub dec push arpl pop mov dec add call faddp test repnz pushf je insl jb (bad) (bad) lcall push xchg dec jmp stos in sbb adc mov or mov sub scas lret ret movsl mov std (bad) lcall ret inc pop ret sbb mov loopne xchg arpl mov (bad) (bad) (bad) lcall cmp clc push jne stos sti test cmp testb adc mov (bad) (bad) jmp inc mov sbb gs xlat andl loop mov mov adc fs lcall jmp cltd fisub es loope (bad) sahf and jne sub int inc into jb (bad) fcomip cmp aam clc jecxz hlt nop andb jge fucom orl push dec arpl sbb pop stos ljmp mov xchg add sbb pop movsl incl and daa xchg in xor adc add inc test (bad) (bad) (bad) mov js dec out lods (bad) repnz xlat mov incl pop pushf (bad) (bad) dec int sahf dec sbb es push mov push push mov (bad) pop inc pop pop out inc div xor (bad) jg jnp stos cmpsb dec sub les cmp fs hlt (bad) decl nop ds push mov dec xor mov stos sbb mov cmp xlat cmp bswap dec pop je xor sub mov mov mov (bad) (bad) pushl lock packsswb xor pop inc mov lcall push rcrl call pop popa jp test xchg decl inc imul add (bad) outsb sbb mov add xor xor or lcall (bad) jmp popf fadd or sub add sti das sbb and ret mov sub (bad) (bad) push jg data16 sub or dec sbb jae xor inc xor lods or sub (bad) call cmp lods sub roll lea add (bad) ljmp or push xchg inc push movb pop cwtl mov stos mov les add ds (bad) (bad) (bad) (bad) pushl repnz push pop (bad) and mov mov and push or (bad) pushl int3 test je sbb fdivr mov cmp (bad) (bad) (bad) ljmp (bad) push sub sub xor mov punpckldq mov sub mov pop and jno jns call and icebp cld ret fs adc out in pop fsubr (bad) (bad) (bad) jmp mov or xchg cld insb out (bad) push (bad) dec jb xchg jnp ds (bad) (bad) (bad) (bad) lcall lret or sbb js xchg aad jb imul outsb sbb xor (bad) (bad) jmp dec enter mov push fbld jl jmp adcb ret push or pop mov loop mov fildl shl sar (bad) incl ficomp insb push sbb idivb addr16 add je (bad) (bad) mov sub xchg mov jbe aaa out pop cmp mov xor xor (bad) pushl xchg pop adc mov scas push xchg mov iret or cmp xor (bad) (bad) jg xorb and pop xor (bad) or xor sub clc pop shrb mov pop (bad) jg push ficomp loopne into inc mov jae ja (bad) (bad) lcall mov add xor outsb mov xchg jmp dec mov push outsb mov xor add lea dec daa test (bad) (bad) lcall aam push cmp movsb pop push loop or arpl push push push push arpl push jmp xor cld add cwtl and and add fmull mov push mov ret cld pop adc fidivr daa es call push push sub pop fwait dec pushf ja dec push mov or inc insb or xchg jbe and inc lret pop mov pop (bad) or xchg jecxz iret xor scas (bad) (bad) (bad) decl (bad) adc and push or push xchg inc shr xchg cli stc int3 mov call xchg jmp push mov pushf in or ljmp aas adc lods pop add jae (bad) (bad) (bad) jmp sahf jno adc icebp mov mov and mov test sub js (bad) (bad) call lods dec push jge hlt lcall mov mov (bad) decl push mov lods cmp fmuls dec xchg stos and icebp (bad) (bad) dec dec dec scas cmovge fisttpll loop,pn lods (bad) (bad) (bad) out ds push xacquire pop cwtl scas aam jl movb mov sbb (bad) (bad) (bad) inc and cmp movsl jl test dec in inc push adc push popf sbb jbe data16 (bad) (bad) incl jb jl dec mov cmp repz lcall (bad) call jbe (bad) (bad) (bad) decl roll xor mov lahf dec pop adc inc jg add or push and (bad) ljmp push jp jnp cmp add adc and pop cmp (bad) (bad) (bad) ljmp call into inc out inc cmc int3 xchg mov inc jge dec add hlt shll sti fisttpll inc mov jno out negb stc push pop and cs clc (bad) jg es fistp call mov sub (bad) jmp mov mov sub cltd push (bad) out mov sub sub xchg fiadd mov shrb sbb lods leave jne es jbe mov cld adc (bad) stc xchg (bad) loope (bad) (bad) call int3 int out xchg dec and jmp inc faddl push add xor sbb outsl dec loop and (bad) (bad) (bad) clc mov aas jo sbb addr16 xchg paddw or push das sub mov jecxz cld (bad) (bad) incl sub mov cmp push add fwait loopne mov ja aaa ret mov jne adcb inc in sub out (bad) (bad) incl div popa sbb loope lahf cmpsl imul add or fnstcw cli (bad) (bad) lcall push imul ret xor xor test icebp mov das cli ljmp cmp repnz cld sbb mov mov fs pop out mov (bad) ljmp sub (bad) adc ficoml mov push call (bad) push xchg jg and (bad) ljmp push cltd mov add push (bad) mov sbb pop fcomip (bad) (bad) jp adc insl sbb push xchg jae test mov gs (bad) pop xchg shrl (bad) (bad) (bad) push cltd jnp loope inc test sub mov jl sbb add and stc sar (bad) (bad) ljmp andl test jno frstor push push mov cmp jbe mov (bad) aas push idiv jg out dec dec rclb ret inc sti add jmp ret jg pusha mov and divb jle cld (bad) jg int3 add dec test pop nop sub sti jae mov cmp jno push mov gs out mov (bad) jmp xchg rol adc push aam daa pop pop mov xlat lahf fcompl xor cmpsb lcall leave or adc xchg gs mov sub dec iret loop (bad) (bad) (bad) pushl cmpsl leave xor sub scas lock es leave lret xchg fdivs test (bad) ljmp jl dec clc fnsave push iret rorb inc pop adc jle xor es incb (bad) cmp leave scas out push mov shl out inc add out out (bad) (bad) lcall mov cmp or sub adc mov decl call mov and loope mov cld out cmpsl roll dec fsubs xchg push in (bad) xchg dec aaa xchg addl in xor push cmp add outsb push je add pop or push push (bad) (bad) (bad) (bad) jg (bad) cmp sbb sub push sti (bad) loop je repnz loope cmc jo (bad) (bad) (bad) call test out mov push addr16 xor lock rcl out stc jle (bad) sub cli push pop push (bad) (bad) (bad) call push push mov scas adc test lds daa jnp loope call inc sub push jp pop fwait adcl sahf (bad) fnstsw loopne enter pop jmp int3 cmpsb sbbl sbb lahf adc pop jb jg pushf nop in xor and fistl scas clc sahf movsb je and sub xchg sarb push imul xchg (bad) (bad) mov dec dec sets mov lods lods lcall and xor int3 push mov je lret (bad) (bad) (bad) call jae pop cmp mov mov jmp cmpsb call test xchg jmp int sub xchg mov xchg and nop insl out xor ss test stos mov jg or daa fs jno nop mov shlb ror and (bad) (bad) pushl jae mov pop xchg pop out jp or push idivb xchg jns out cltd dec xor (bad) (bad) (bad) mov add and sub fs sti pushf push push mov mov sbb ss mov ljmp fsub xchg nop das fwait scas out hlt dec push inc je clc ljmp fwait mov mov jae int3 mov xor out out inc ret icebp je stos add ds (bad) decl fbstp lret (bad) cmp push jbe divb lods sub cmp pusha aad jns (bad) lahf mov fcmovu xlat push xchg mov mov mov (bad) push mov and rclb xchg in sub (bad) jmp push push push ja xor ret cmc and in ja (bad) call pop or mov rolb xchg icebp mov jg add nop pop clc (bad) (bad) jmp aam cld add add push sbb fmull mov or pop adc pop xchg mov bnd xchg pop std (bad) jmp pop or or rorl dec xor lea (bad) jg outsb lds adc repnz insb cli loop push add sub incl mov loop jnp push insb sar cmp and xor mov or (bad) (bad) lcall stc xchg mov xlat jo cld cld xor hlt dec pop lods and sbb sbbb pop or adc clc imul adc les leave xor sub pop (bad) (bad) (bad) jg pop xchg pop dec pop cmp cltd cmp inc add xchg hlt gs push push scas arpl xor inc mov pop pop into cmpsl sub stos (bad) (bad) pushl fisttpl and mov dec lea adc test (bad) (bad) incl push jge lret and fadds pop mov dec fcmovnu lds fistpl pop mov ret incl mov cmp mov fs jo mov jmp mov mov or daa jmp jb mov insl adc ljmp add jo (bad) mov imul add jecxz pusha jnp subl (bad) (bad) call jno dec pop call push xchg inc outsb int3 and adc push andl decl xor inc loopne cmp (bad) xchg fiaddl mov ds sub decl mov dec (bad) clc and sbb xor out cld (bad) (bad) pushl mov daa xchg mov inc xor jmpw (bad) gs notb inc jno (bad) (bad) pushl test pop adc mov mov mov jnp ds mov pop movsb (bad) sub fwait push adc cmc out mov mov sub (bad) cld fstpl jne adc fcompl loopne gs adc fdivrs decl sbb push nop push xchg (bad) cmp pop lea jne sbb push movsl mov (bad) (bad) cli add xor cmpsl adc (bad) xor fnsave dec jecxz mov int3 nop (bad) (bad) (bad) incl (bad) pushf addl adc insb inc mov xchg sbb (bad) (bad) (bad) lcall pop sbb mov sbb jmp dec mov rolb incl clc xchg outsb mov pop xlat ja pop xor jg sbb cwtl (bad) (bad) (bad) (bad) cmp push loop and daa fwait stos out and push xor mov imul ds (bad) (bad) (bad) (bad) cmp je int (bad) cmc push xchg scas (bad) xchg push add mov dec inc sbb (bad) (bad) jmp pop pop jae lret add popf pop push lock and fsubrl mov insb insb push xchg rorb fdiv inc push xchg inc insb push lods je inc out loopne leave das cli jg push data16 dec ss add les out icebp (bad) (bad) (bad) call rcll pop and jmp rorl out push popf pop inc (bad) xor (bad) jmp or imul (bad) loop into mov cs stc sub das adc sbb sahf dec ja (bad) (bad) (bad) lcall aas test mov push adcl mov pop mov loopne hlt mov mov mov jg mul out xor (bad) pushl jb hlt in mov inc not (bad) sub clc negb dec mov (bad) lcall lcall and test ljmp adc fnstcw mov (bad) (bad) (bad) cmp nop into lods cmp cmp mov and sbb mov pushl inc fildl xchg mov popa inc and pop stc dec lret aad int dec xchg pop sbb call (bad) jmp iret lea and popa xchg cmc (bad) jg mov shl sti insl in pop call jbe int movsb mov mov les (bad) (bad) (bad) out test (bad) mov adc (bad) jno mov sub cmp cvtpi2ps (bad) (bad) call iret and push mulb mov mov jg stos ja stos mov daa cmpsl jge (bad) popf push pushf mov xchg mov lahf xor loopne sbbb std nop arpl sub pop in scas sti stc (bad) (bad) (bad) (bad) mov fwait (bad) stc sbb jne fcmovbe inc dec clc js push xor (bad) inc xchg pop mov (bad) (bad) popa shrl add xchg xchg sub gs (bad) jmp mov (bad) (bad) jmp push push scas test or mov add dec xorl popf aas inc test inc ficoml pop sub jmp scas scas jae cmpsb sbb in push xchg pushw out add (bad) (bad) pushl mov and (bad) push mov xchg nop scas push mov mov jp (bad) (bad) lcall shll pop dec push pop mov ss repnz xchg (bad) (bad) stc jbe push ds xor (bad) rcr adc repnz (bad) (bad) mov cmp xchg cmpsl pop xlat addb add hlt scas int3 add (bad) mov sbb mov call mov cmpsb push daa mov and imul inc fildl std (bad) (bad) (bad) pushl (bad) push in push inc lahf push mov js adc mov outsb push call stos push push mov lock icebp xchg repz dec insb pop (bad) (bad) (bad) lcall xor out push ret adc or xor or in (bad) cmp sahf pop cmp ljmp (bad) les cmpsb jb repnz loope lds ds (bad) call jbe data16 xchg push enter (bad) lcall xor cltd lret dec call int3 call jnp add adc hlt lcall and mov scas popf mov lcall pop cmp adc xor leave stc xchg mov or inc movntps (bad) (bad) (bad) incl sub shrb aas call push daa dec push xchg cltd jb ret push (bad) (bad) call push sub ss test sub test adc rcrl imul pop nop ficompl sub fsubrl jmp lahf mov mov lcall cli xchg inc lods pop fiaddl sbb add test inc mov sbb hlt and pop mov test (bad) (bad) (bad) js mov or pop dec fcomps xchg cld or data16 (bad) (bad) (bad) lcall mov xchg ret out push lret pushf push sti xchg pop fstpl ficompl sbb inc enter mov (bad) pushl (bad) jmp (bad) lret outsb jno (bad) xchg and inc mov aaa ja out ss mov stos inc (bad) (bad) incl popfw jecxz lret popf push mov push inc push ja jno repnz jno cli mov (bad) (bad) incl popf mov or std add add js call sub and add ret xchg sbb jno (bad) xor pop xrelease jmp jnp mov jle sub mov cld xlat add (bad) (bad) incl jno cmp idivl popf out popf push iret es aas pop xchg push dec cld (bad) (bad) (bad) cmp jb mov mov int3 in in pop lock cmp daa sbb ds lods outsl xor dec xor call (bad) fimull enter stos xor push add mov mov push mov test sub inc ljmp sub push lods fstpl inc fnstcw mov jno lock (bad) mov mov sub cmp lcall or jbe (bad) lcall mov mov (bad) rep in out addl xchg out (bad) (bad) (bad) incl push adc test stc jmp inc sbb pop cmpsl mov and cmp adc out int3 or xor jne (bad) (bad) jmp mov popf lahf (bad) imul in add dec je into ja mov (bad) (bad) decl mov in cmpsb inc pop jno out xor rep loope pop popa xor push js aaa cld decl in push sbb frstor (bad) fisttp pop dec xchg xor and cli inc lret mov rolb das bound sbb cwtl mov aad mov mov pop add loopne pop xchg and call cmp jbe loop cwtl lock fldenv adc icebp add jecxz daa je loopne (bad) inc sarb jne inc or inc movsb mov js sub lcall loope pop (bad) daa push (bad) (bad) aas dec push fldenv mov sahf mov lret mov lahf loop dec addr16 adc imul fcomps mov sub (bad) (bad) lcall jl lahf out outsb cwtl dec sbb cmp jle xchg lahf adc (bad) aas sahf mov push pop pop lahf pop mov inc popa add add (bad) (bad) (bad) incl and inc repz jno mov in outsl dec ljmp cwtl xchg (bad) out cli call cmp (bad) lret push and inc cmp test push pusha sub mov (bad) call sbb jb clc insb imul dec mov popf fisttpl (bad) (bad) fbstp add aaa xchg jmp sbb push cmp sbb je jne mov mov cmp (bad) (bad) (bad) lods xor movups dec iret push sbbl inc or lahf add or loop int3 (bad) (bad) (bad) call test pop stos and or je sbb dec inc aaa inc add xchg xchg and jg inc js,pn jmp cmpsl mov push jmp movsb inc push mov sar decl inc mov shr test in adc inc in lods sarl and shr (bad) ljmp test (bad) sbb push outsb lds xor add in jecxz and pop inc inc sbb out nop (bad) (bad) (bad) jmp inc or call sub push loop cmp in (bad) push xchg inc jl add cmp fcomip push push fsubrs leave fcoms cmpsl insl inc add test outsb xchg push (bad) (bad) (bad) push pop xor pusha or adc mov out or sbb (bad) fisub pop (bad) (bad) (bad) (bad) jge int mov and outsl cmpsb iret fmull dec les jnp mov lods (bad) hlt cmp sub in insb mov inc addr16 mov or rolb push (bad) (bad) incl adc (bad) pop add aaa pop and inc fwait rcr jnp iret leave push jno rcrl push cmp ljmp cmpb lret pop out aad div jo cmc addl jnp call jo mov mov jp mov ret ljmp sub fidiv rcrb inc sbb mov (bad) (bad) aas sahf pop into scas rcl ja or mov or test xchg (bad) ljmp mov mov mov aam call (bad) jns adc imul lret or xlat mov mov sbb xor (bad) (bad) (bad) cmp adc sub ret adc jae imul adc fcomp arpl ja (bad) decl push lods mov dec jmp mov scas in out es sbb (bad) (bad) (bad) cld ja (bad) mov xor inc idivb (bad) stos push jae dec push adc jae rclb jae enter jo into xchg scas enter ja xor mov add (bad) cli dec (bad) decl inc pop pop fisttp fwait loopne fsubl aad clc (bad) jmp (bad) sub aas mov inc mov mov push xchg (bad) setle (bad) (bad) (bad) inc fiaddl pushf mov xchg arpl cld fcmovnu sti push loopne (bad) dec in mov lahf aam mov cli (bad) (bad) jmp jno or ret mov sbb pop push shl mov into jno cmp sar ljmp cmp pop or das xchg dec jmp in data16 imul add (bad) lcall or lods loope push and je loope mov and mov je xchg or xor ss sti cmp pushf hlt outsb sub (bad) (bad) (bad) aas shrb aas mov push inc stos sbb pop mov (bad) (bad) (bad) call jg sarb stos mov push cmp pop aaa inc jge mov call mov dec xchg xlat inc outsl aam test leave scas jge sub pop add xchg dec lods sub jae (bad) pop lock insl push aam shll mov ds mov ds mov lock out pop insb fnop das cld cs lahf inc adc jae mov pop mov and das sar add or imul jecxz push ja arpl outsl pop sub dec dec shrl and andl outsl mov push es scas (bad) or pop stos adc mov xor mov lret xchg lock xchg xchg testl out push xor hlt (bad) xchg sub loop jecxz in xor cmpsl jle (bad) (bad) (bad) (bad) std enter cmp lock cmp ret pushl mov icebp (bad) (bad) mov sbb fiadd lods jae fwait xchg pushf fcomps popf sahf inc ljmp data16 out in lret dec and (bad) mov dec xchg cmpl jmp inc mov and xchg aad fistp cmp push mov (bad) jmp insb cmp and mov pop push jno ret mov fild sub mov add mov inc nop std sub inc (bad) ljmp cmp (bad) or mov ljmp repnz pop sbb outsb mov jecxz (bad) (bad) mov addr16 imul rcr xor dec fadds (bad) incl aaa mov in xor mov jbe lret fidivl xchg or inc adc fucomip cmpsb ds negl lods xchg cmp (bad) (bad) fistpll mov test cld and mov movsb fyl2x mov imul std add (bad) call lret into stos (bad) mov mov mov dec or jb into and jecxz mov xor push mov fimul adc fadds es pop (bad) jne xor lret (bad) (bad) (bad) (bad) (bad) pop lods scas inc imul mov push cwtl (bad) out fidivrl xor jg jae scas (bad) (bad) decl ljmp out stc ds add push cmp das cli ljmp fisttpl mov push int3 aad push push aaa xchg (bad) lcall imul (bad) (bad) (bad) fldcw dec jno int3 sahf stos sub dec cmp adc pop mov in and (bad) (bad) decl repz inc mov ficom aad inc dec dec mov loop les add pop xchg lods sbb lock sbb or push xchg sar pop pop mov add je mov xor in lahf lcall jg loopne rorb inc in je int cmc and outsl push femms cmp sti add jb sbb jae das and (bad) ljmp mov sbb loop add inc out hlt jp add call movsl mov xchg lea cld addb sub xor lret or sub sbb pop xchg mov mov push sub negl jecxz and jnp push cmpsl (bad) ja cmp push pop and push dec aam jbe mov mov push jg,pt dec mov lcall (bad) cli sarb inc jb test dec xor repnz cmc (bad) ss sbb sysexit lock pop sub mov andl ds (bad) xor ss push push pop rol pop add inc jb iret or (bad) push ror es imul rclw ds mov dec or gs jns sahf fxch insb int3 icebp mov decl pop pop out add mov mov (bad) mov dec mov movsb rolb mov jge data16 gs (bad) ljmp xor ja and adc adc int3 pop pushf or push fiadd cwtl jge fwait (bad) (bad) ljmp push (bad) fdivrp xor push std sbb pop movsl ja jmp pop (bad) (bad) (bad) (bad) call (bad) pop bound xor cmp ret cmpsb jns inc lock jmp mov rclb decl movsb pushf or bound push lret push xchg ljmp call imul xchg xchg xchg in cmc flds pop andl (bad) pushl xchg fs leave cmp or (bad) ja (bad) ljmp mov (bad) (bad) idivb sub outsb mov mov (bad) (bad) lcall into test push sbb je data16 in shll mov xor (bad) (bad) (bad) decl dec dec movsb dec xor push cmpsl ds cltd lahf pop xor insl xor (bad) fdivs mov repz push loop das or ficom jno push rcr sub xchg dec (bad) (bad) (bad) mov add mov test dec pop scas xor push xor outsb push (bad) mov xlat mov daa in test je and scas inc or sbb mov std jmp (bad) cmpb test (bad) (bad) (bad) lcall fimul in lea divl (bad) pop mov (bad) jae push fstps incl pop mov ds outsl lods dec test lret xchg lea xchg push stc xor aad scas fcomps (bad) (bad) (bad) decl mov push stc frstor mov xor inc (bad) out push add lcall sar mov jmp mov sahf in sbb cmp (bad) (bad) inc mov fsubp scas movsb cli lds lods clc or cmpsl sbb sbb adc inc push pushf loope jnp nop rcr loope mov imul jbe mov (bad) ljmp ds or inc bound leave sub ret mov icebp loopne (bad) lcall sti jnp dec (bad) or sbb jae adc mov in add mov add pop test movsl mov sarb (bad) jmp inc push (bad) out mov in push jne in hlt adc (bad) (bad) (bad) ljmp push or loop ret add and push mov lods mov mov jbe add pop ljmp fucom mov dec test lock cmc arpl sub jg jne aam pop (bad) (bad) (bad) jg lea movsl repz pop jno xor stos repnz hlt add lret pop lods dec (bad) (bad) (bad) pushl repnz or int3 add sbb sti stos mov cmc jae inc xchg out aaa adc mov sti divb sub (bad) jp test sub addl xor xor cld xchg imul outsl jg dec in sbb mov (bad) movsb fimull pop (bad) (bad) fcomip (bad) clc push pop sub mov icebp lods pop fdiv cmpsb jmp and or sbb pop sub icebp push inc movsb cmpsl sbb (bad) inc js (bad) (bad) (bad) (bad) clc mov add push fcom roll (bad) cmpsb pop ljmp js (bad) (bad) (bad) (bad) out xor cmp xchg inc add loope scas jb mov pop adc jns sbb idiv (bad) (bad) inc push inc ds and add loop scas jp mov add (bad) mov cmc (bad) mov push mov xor movl pop (bad) lods arpl cmp xchg hlt dec cmp and daa sbb mov add pop xor popa jge lahf iret mov repz jle (bad) call ds (bad) aaa jecxz xchg mov (bad) ror lods sbb xorl (bad) call loopne jmp ljmp hlt popf mov test dec xchg (bad) (bad) (bad) ljmp inc lock fistpl ss outsl std push or mov jge int (bad) (bad) (bad) decl mov aaa cmc lea inc jne add bound shll xchg adc pop jo xorl stos adc (bad) (bad) (bad) (bad) jle jmp cmpsb adc xlat adc mov mov pop sub xor mov cmp adc outsl pop nop movsb das inc pop inc pop mov mov fcoms int3 cmp pusha dec sub jb js mov (bad) (bad) pushl mov adc mul je mov imul mov loope les mov orb pusha xchg fs (bad) xor (bad) dec pop es (bad) (bad) call mov stc mov lock dec and mov int3 push add decb pop sti pop cmp or out repz clc adc movsb adc out pop lods bound (bad) (bad) ljmp dec sub (bad) mov and cmc xlat outsb cmpl mov push (bad) push leave int inc mov sub cwtl jmp and push jae jmp fdivr (bad) (bad) ljmp imul rcrl pop outsb sbb mov fsts cmpsl cld fiadd mov pop lock rclb jp or aad ss outsl add xchg jns (bad) (bad) (bad) fcomps in movsb push popa dec push lea jo sub ljmp loop sub cwtl or (bad) call std stos push mov ljmp pop clc push pop test fbstp fnstcw add int ljmp xor popa fcmovne loopne jmp out mov icebp stos (bad) add xor mov outsb sahf dec xchg clc lock (bad) (bad) out push add cmp inc nop sbb pop int jg notb mov call mov push and mov inc and (bad) (bad) jg int3 mov sarl (bad) mov test push sub fidivl out clc (bad) (bad) cmp insb cld add adc xor mov push adc cmp jbe jae adc add sub (bad) (bad) inc test nop jp fs pusha es jmp sub repz or lahf jo push push xor mov decl lock push cmp fdivrs scas jp pop iret test mov lret aaa shll int3 and (bad) loopne daa jne pop dec mov push push rol pop int3 das lods mov jle int mov lcall (bad) pushf fist jg and inc mov leave sarl add ljmp mov into jmp test arpl mov add jbe mov adc insb xchg out sbb ds mov cmp orps xchg pop subb clc mov lock lods cmp push cmpsl xchg (bad) iret dec lcall (bad) pushl ret jmp in dec adc popf pusha idiv xor lahf pop cmpsl out nop jns mov pop repz sub jge shl addr16 lods (bad) (bad) (bad) ljmp aam lcall scas mov test inc jge push dec dec pop and sub lods ret cmpsl lods std sahf out mov decl loopne (bad) and push loopne mov xor inc stc fild xor mov mov testb mov jo loope adc notl pop jo xchg sti jle and lods pop mov (bad) (bad) mov dec mov sarb gs rcr mov push lods (bad) jne fdivr scas xchg imul std cmp imul dec xchg pop mov pop loopne ljmp mov std scas jge and out xchg lods rorb ss lds popa cmp je add jp (bad) ljmp ds subb dec (bad) lret mov and mov (bad) (bad) (bad) (bad) fwait stos out jg fwait iret or inc call call or sbb jg push push mov and cwtl (bad) (bad) (bad) lcall and or bnd add mov mov (bad) xchg fsubrl fistpl (bad) (bad) (bad) call test xlat scas sbb xchg test xor fistp hlt jno orb (bad) decl jns sbb and xor fbstp add inc js stc stos (bad) frstor sbb nop fsub cmp insl enter lret add mov jg (bad) lcall xor ret fmulp inc jno,pt sbb imul cmp (bad) out or sti pop pushf pop mov sbb (bad) mov and inc dec rolb lret ret es (bad) call sbb lcall xchg mov fsubl repnz mov enter lcall sbb or aad js out cmp in call cli jb test push mov mov aad xor fmull lcall ljmp addr16 mov sahf in repnz fs xchg int push das xor mov pop mov lcall xchg lods jge cmpsl xor pushf divb inc mov lock fsubrl xlat je sti mov (bad) (bad) js ljmp ret jno call add (bad) push ja ja mov cli (bad) mov ds mov mov insl aam pop adc jle add (bad) (bad) (bad) cli jne mov fnstsw ja faddl jmp cwtl arpl dec nop (bad) fstl add fdivr in jae adc ds es pop and (bad) add arpl xchg or (bad) (bad) (bad) jns int inc ss fcompl mov outsb mov add mov (bad) lcall mov mov cmp sbb dec xchg lret and cmp (bad) arpl ljmp push stos sbb cmc test push xchg icebp push mov jmp lods insl jmp decl cmpsb dec cltd mov push mov sub mov (bad) (bad) (bad) stc nop mov mov mov shl (bad) or (bad) xchg xchg aam arpl cmp daa (bad) cmp xor xchg cmc leave (bad) (bad) (bad) jmp lods mov scas inc dec push cltd inc inc insl stc jmp aam add cmpsl test xchg xchg movd pushl clc (bad) (bad) sti push dec fisttpl jne cmc mov jl xchg jg mov clc subl es test (bad) (bad) (bad) jmp jnp xchg pop lcall dec int3 mov js sti or add mov in ds std (bad) jg mov jb fistp sbb aam sbb lret dec pop mov xchg arpl ds dec sarl fimul sarl incl xchg adc mov fstl mull push cltd je sbb mov idivl pop dec psubusb ret (bad) (bad) (bad) (bad) in jle xor movsb jno jae into cmp mov pop push sub mov adc add dec xorl sti sub incl add jle popf jns sbb xor int3 dec xchg (bad) (bad) mov jne push sbb andl pop mov sub lret (bad) mov cmpsl insl mov ret or les cmp arpl (bad) mov pusha sbb leave push mov lock jo (bad) (bad) ljmp mov stos jae lcall or (bad) iret cmc and outsb lock (bad) (bad) (bad) mov xchg fimull pop adc iret insb cmp subl sti and test add icebp popf xor jge mov inc rcrb idivl pop lret and mov hlt pop stc (bad) push jge add push ds (bad) dec mov mov jne stos (bad) sbb lods mov insl pop andl (bad) lcall les xchg int3 sub pop fidivrl fidiv push or (bad) (bad) (bad) call mov out ss imul sbb push mov jle aad (bad) (bad) lcall push mov inc mov push jne test stos enter mov scas out leavew lret adc sbb enter jmp push ljmp add pop mov sbb arpl repz jb js,pt (bad) (bad) (bad) dec popa dec sti push adc stc lods (bad) loopne enter sub jns test mov lock lcall xor insb loop pushl inc sub pop dec lret popf xchg pop xchg xchg xor ljmp ficomp fstpt mov cmp or loopne outsl in daa dec orl dec arpl dec fsubs and xor scas icebp (bad) ljmp inc push push jmp insl shld (bad) mov dec imul decl in xor pop pop inc fiaddl std lds fistl (bad) (bad) (bad) (bad) jmp adc repnz outsl xor loope push mov add (bad) jno outsb and mov lret sub stos je push fistpl (bad) mov int (bad) add and cmp rcrb inc push out (bad) (bad) incl mov stos sub pop lcall or mov in repnz (bad) (bad) fisub in mov jp popf or test dec popf pcmpeqd (bad) (bad) (bad) jg fidiv fsubrs sbb (bad) sub add mov or lea xchg lods clc add scas fs cmpsl fistl fsubl cmp imul test jl hlt add pop aaa push icebp jnp test push adc aaa mov (bad) (bad) (bad) cmp cmp aaa cmpsb mov pop scas enter les adc sar (bad) fisttpll pusha jb mov mov mov js mov call mov jno (bad) lea insl cmpsb dec mov mov pusha out push in mov (bad) ss and sbb jmp xor (bad) (bad) pushl xor cmp pop mov mov stos incb imul jns adc cmp sub inc jl out cli (bad) jmp rcrb out mulb aas mov cmp (bad) (bad) (bad) (bad) mov ljmp cmp sbb inc push mov xor cmovl decb into (bad) (bad) (bad) (bad) cmp pop cmpsl push sbb (bad) mov mov repnz pop fisttpl call mov jne dec cmp adc and sub and ljmp mov lock mov adc lret jo pop mov jbe rcrl ja (bad) fwait je xchg mov ljmp and dec out dec inc inc cmpsb movsl loop (bad) (bad) (bad) lcall popf jp pop lahf pop test mov iret mov jle or push xchg sub mov and xor xor push (bad) (bad) (bad) call insl jno mov jno lcall pop dec mov lds inc imul aaa cld or push sbb or xor pop jle test aam jns icebp xchg (bad) jmp mov or xor mov cmc cmc test sbb fsts push je inc in cmp xor jae std xchg push mov (bad) dec lcall (bad) (bad) (bad) (bad) mov and out add pop in mov adc (bad) movsl xchg movsb (bad) cmp (bad) jg pop xor lahf loop fsubl mov cmp mov in jno clc (bad) (bad) pushl push xlat bound lods add xor iret stos (bad) (bad) cmp pop ret lret popa xchg xor jne cmp mov sub fxch ljmp insb stc enter clc (bad) lcall stos and and fsts xor (bad) jecxz (bad) incl cs cmp xlat out pop enter mov (bad) (bad) call fsts lods icebp cmp fldl scas lret movsb jle lahf sub (bad) or (bad) lcall adc pop mov movsb mov lods dec inc inc pop rcrb (bad) lcall and or mov aad cmpsl insl pop (bad) (bad) (bad) call in and rolb and cwtl aam lret (bad) rsqrtps push cli inc pop dec fisttp popa (bad) (bad) mov mov and movsb in (bad) jle fcom xchg push cmp jge (bad) mov xor cmp aad loop insb mov movsl out mov push sub and pop arpl leave enter scas or inc test push pop das lcall out or fiaddl aad (bad) (bad) (bad) fistpll leave insb lods mov cmp test or mov jns ret (bad) and inc call stc lods adc mov (bad) (bad) (bad) mov cmc sahf imul xor popf test pop xorb sub add incl (bad) hlt cmpsb stos add (bad) lcall or adc xchg rcrb int iret test push movsl inc xor (bad) pop sub add (bad) mov dec fnstcw sbb fsubr adc jl mov std (bad) (bad) call inc xchg jmp dec (bad) xchg arpl repnz popa mov call xchg stos iret cs jns inc in lods jp or movsl (bad) call out dec outsl inc mov pusha je shrl mov sbb push mov (bad) (bad) mov pusha faddp cli flds ljmp cmp sbb cwtl mov sahf (bad) sarl sub scas aaa mov push fiadd repz (bad) ljmp mov sbb pop insb (bad) mov xchg ja bound mov and stos ljmp sbb scas subl ljmp rcl pop lods fildl aas decb gs push out jo imul std hlt in cltd cmp sar (bad) pushl test popa jmp or add (bad) fisubr mov pop xchg ss (bad) (bad) jg mov dec (bad) mov cltd test and sbbb push movsb hlt stos dec inc call pop leave cs into outsb scas mov pop imulb mov xchg xchg ret jl jae push and repz (bad) (bad) (bad) jle aas daa xchg dec (bad) sbb mov adcl dec sbb rorl stos cld pop (bad) (bad) (bad) (bad) jge jae push mov or jne or mov movsl ljmp (bad) call mov inc pop push add (bad) cmp push in loop lods xlat add subb push arpl and test js mov or (bad) (bad) (bad) incl stos sbb push or mov sbb cmc cmp sbb stc adc mov sbb (bad) in xlat inc ja or repnz (bad) ljmp fwait pop repnz xlat adc inc and stc fsubs ret or xor (bad) (bad) mov push jb (bad) (bad) mov mov adc aam sti dec test mov (bad) (bad) (bad) jg add and or jecxz jmp out jbe cltd insb dec sbb cwtl mov incl cld call mov loope pop testb ds inc lahf sbb cld (bad) call xor mov and sbb jae inc jo push xor lret push fwait ds decl call jnp scas lahf mov push (bad) (bad) mov rorb aam aad adc lahf mov sbb mov push (bad) (bad) (bad) lcall add loop mov jne icebp and xchg mov pop push test or (bad) (bad) (bad) ljmp push in mov bound arpl aaa gs inc jne out lods fs (bad) (bad) incl ds mov jl or xor aaa ds enter pushf mov idiv neg jbe (bad) movsb ficoml fstpl adc push mov mov sub (bad) (bad) (bad) (bad) jp sub adc mov mov push jne fstps das cli loope std (bad) (bad) (bad) lcall adc xchg mov xlat pop sbb sbb sub fdivr lds pushl ret mov rolb fldt in adc mov in bound bound out xchg shl sub jnp jp int3 cmpb pop xorb pop dec ret xchg stos inc xchg insl adc adc xlat xor fidivl xchg fcomip (bad) jmp sbb leave in sub mov and cmpsb or or ja sar jl cmpsl scas divl ds sbb popa std dec mov les xor sbb call clc loope xor jge xor xchg ds jg (bad) jmp in hlt mov sub sbb mov in sub push dec and push (bad) cli adc (bad) in (bad) cmc rorl inc push push fucompp xchg xchg adc sbb (bad) (bad) (bad) (bad) jmp sbb push incl fiadd cmc push adc (bad) sub pushf xor aad push adc (bad) ljmp mov cmp sahf movsl sbb sbb xlat lcall push lcall dec mov xor mov lcall jmp ret xor jle inc loop fisubr pusha push mov iret call int3 cli (bad) (bad) jmp pop push cmp mov ljmp cmp jecxz,pn jecxz xchg push push cli imul addr16 cs mov jne mov stos jae shll movsl hlt scas (bad) cmp insb aam adc (bad) (bad) jmp or xchg xlat adc cmp dec cmpsb test stos shr mov mov ret mov mov add test arpl dec adc imul dec jl aas cmpsl jne adc out movsl sub sub sbb mov inc mov test loope xor test jl (bad) (bad) jg mov xchg les pop sub jae cmp lock mov pop lret (bad) jns pop jo sub data16 inc (bad) ljmp jae mov jo mov mov inc hlt dec or and imul (bad) (bad) (bad) lcall push roll add adc mov sub xor (bad) out jnp (bad) (bad) (bad) (bad) jl jecxz clc pop (bad) addr16 jg sbb or mov pop sub mov (bad) ljmp int jp sub xchg shrl jno stos sbb push xchg (bad) incl cld divb ss cmpsb mov mov xor sub push int (bad) (bad) (bad) (bad) fstl push test fistpll outsl repz adc aam out jecxz mov cs mov lahf sub mov push push sbb mov loope out cld or in (bad) (bad) jmp cli xchg mov rcll std js fdivrs mov mov in dec and jmp lcall out test and lock (bad) ljmp xchg call jmp cmpsb mov jae adc sub jb (bad) out cmpsl popa xor (bad) dec movsb mov std aaa cmp sub ja pop ret sub inc (bad) addr16 clc jo cmp and and cmp jp ficom ret cmp out adc cli insl and out das xor ljmp sub pushl sbb dec out add mov mov mov mov push (bad) (bad) (bad) jmp addr16 rolb adc mov mov mov (bad) (bad) (bad) ljmp adc cmp rorb sub push js or and adc mov (bad) ljmp aas mov dec pop inc push inc int3 add inc pop mov mov movsl loope push xor adc hlt into pop test mov (bad) mov mov or fwait lret add popf mov (bad) jg mov imul cli imul pop sub dec mov (bad) mov in push add mov pop or sbb daa mov jmp std pushl pop mov xchg nop lret test push push loope imul lock inc mov call pop hlt jb mov sbb inc push f2xm1 in popa pop inc insl sbb and inc adc mull outsb aam add insb test out ljmp sar sub outsl fmulp jmp out mov mov loop (bad) (bad) incl sub outsb imul (bad) repnz lcall lret xlat jle (bad) (bad) (bad) call negl movsb mov jne xchg sbb fwait loope (bad) lds sbb mov push mov adc in icebp xlat jae push pop pop push push jg imul adc xorl jg mov jo xchg inc cld (bad) (bad) inc div sub (bad) nop (bad) dec pop mov imul pop and jg ja arpl mov sub or inc loop xor std jno (bad) out add mov nop mov push push push fcoml sbb (bad) (bad) (bad) fistpll into (bad) icebp and imul jl cmpsl mov fcomps in adc std cmp dec sbb xchg jp push rcrl add xor and (bad) jg ds fidiv or fadds jecxz and (bad) pushl ss test jge scas sbb and xchg xor (bad) (bad) incl jns sarb xchg xor ret roll mov inc dec lcall and fucomip push pop dec xchg data16 incl cld ja out sbb and adcb fildll xor fs lods mov lock or push ja stos insb push pop mov (bad) cmc cmp jmp (bad) (bad) call in out mul in or js movsb js rcrl dec push jb inc das xchg enter (bad) (bad) jmp sbb push fdivr add push mov int or dec mov mov jmp push mov cld jne loop (bad) (bad) ljmp mov pushw fsubrl or jmp stos testl pop loop xor dec xor jns iret into rorb or cmp and data16 cmp jnp (bad) (bad) jmp je pop das nop ljmp nop push clc (bad) or add cmc mov (bad) (bad) jmp ja jb lahf xchg cs ret push clc ljmp mov icebp negb in aad test inc outsb data16 dec and hlt (bad) (bad) jmp call mov in mov mov repz xor cmp xorb scas inc (bad) (bad) mov and ds dec test pop jo or dec sbb (bad) ljmp jecxz out cmp out mov jmp ret mov cwtl iret push int3 inc imul xor sub loope cmpsl push xchg scas cmp movsb out lcall pop aam repz cwtl adc jecxz repz cmp inc mov (bad) (bad) (bad) (bad) xor sbb adc enter xor adc add insl or (bad) (bad) (bad) (bad) decl (bad) cmp lahf scas (bad) xchg repnz rcrb jae mulb jmp pop (bad) (bad) (bad) lcall pop add (bad) lret dec mov repnz iret (bad) mov jnp add movsb call rol push xchg cmp and (bad) aas cmp decl mov pop arpl push popf add mov pop mov mov outsl add cwtl stc xlat (bad) (bad) incl cmp loope jae push jg xlat or dec ljmp and cld (bad) (bad) jg xchg ljmp pop push jnp les and xchg jmp scas sbb dec imul inc add arpl (bad) jg dec mov mov mov fisubr es pop add mov addr16 scas decl pop iret call xchg (bad) (bad) jmp dec jp ds das mov cmp adc lcall push outsl in inc sub (bad) (bad) call dec push fimul sub sbb movsb mov pop inc les repz out (bad) fcompl roll push repnz and les int3 movsb add mov sub inc ds mov clc xchg loop es fs (bad) (bad) (bad) (bad) fldenv push or xorl jg sbb sbb ffree push jl add incl incl push lcall jns jnp and in sbb mov jg (bad) (bad) (bad) inc sarl shl clc popf loop add cltd ret jae fldcw (bad) dec pop pushf pop dec into xchg mov jecxz sbb xor mov push (bad) (bad) lcall sbb or push fiadd faddl adc push fist sub in mov cmp push (bad) (bad) (bad) (bad) cmp imul vmovaps int3 add xchg or xorl das std (bad) ljmp mov dec pushf mull lea jmp mov fadd adc xchg sbb ljmp gs fwait sbb ds fsubrs sub mov decl mov mov (bad) mov cmp mov push xchg dec fdivs das imul enter leave push or jmp xor inc pop into mov (bad) and cmc lret scas add mov fstpl das mov call or sbb xor adc mov jmp mov mov sub cmp xorl xor pop sbb cmpl ljmp std (bad) push popf xor xchg and jecxz xchg dec push jo push (bad) (bad) jg mov xchg (bad) or das jae push ficomp fmuls (bad) jge leave fisttp cmp (bad) mov mov inc movsl stc bound cmp mov imul loop,pt gs ficom addl cwtl testl aaa jg jp mov adc (bad) push mov mov rcl (bad) divb js push push sub xchg loopne cmc ljmp pop pop or jo imul (bad) pushl jmp fcmovne sbb clc xor add add jmp ss js clc (bad) pushl in js jp mov mov leave enter cmp (bad) (bad) ljmp dec test iret dec and adc jnp jb sahf xchg cmp mov pop cmpsl hlt inc movsb (bad) std xor pop inc xchg (bad) (bad) (bad) lcall in cmp lahf fisttpl add (bad) std dec xchg mov mov (bad) call jge push jg dec stc inc lcall cmp scas fidivl stc movsl push mov pop lods fs inc addr16 lods add lret in pop mov jg ds gs in mov inc js (bad) ljmp mov xchg fcmove cwtl jp js xchg in jb mov rolb in cld aas dec dec sar mov xor sbb fisubl mov dec mov jmp (bad) (bad) incl ret mov mov mov cmp gs (bad) (bad) (bad) jmp jns xor scas out xor add cmpsl pop mov push add xchg popa enter xor push sub iret outsl and mov adcl popf rolb (bad) (bad) (bad) out mov repz pop xchg hlt jmp xor jge dec sbb repz (bad) (bad) (bad) decl mov jno pop xor lahf xchg js or or (bad) and and insl mov pop xchg sub in sbb cmpb fwait and push xchg fs mov stc adc (bad) (bad) decl xor es test mov in outsl cwtl cmp imull pop mov or inc loop call jns jg jp lods int sub push loop js xor adc mov push (bad) (bad) (bad) jmp cli sbb mov hlt push add add out jecxz dec lret (bad) jmp mov fucomp fisubr jge loope inc shll call es movsl inc cmpsb (bad) (bad) call add ficompl aam cmpl test arpl into sub cmpsl je (bad) (bad) (bad) decl pop daa mov js pop xchg (bad) cmc fidivrl fs xor aas cmp jmp or add (bad) (bad) fmuls cld cmp leave cmpsl (bad) xor sbb push fisttp sub add cmp mov or (bad) (bad) pushl sahf (bad) aaa mov xchg dec sub push mov mov (bad) (bad) aas (bad) fiadd lahf jmp lret mov pop es inc jmp sub (bad) pushl notb pop mov aad dec add ret test (bad) (bad) pushl pusha push cmp leave dec dec or mov dec (bad) (bad) (bad) (bad) cmp mov sub (bad) xlat std sbb rcll scas cld fisttpll add (bad) enter sub testb iret and fisttp (bad) mov mov outsb push aaa mov xchg xchg imul out lock scas inc xchg sbb pop ficom jg incl enter shll xchg imul (bad) (bad) sbb add call and xor add xchg and xchg mov jmp sub test les jo outsb repz in mov (bad) (bad) (bad) pushl ds mov xchg imul jg push fstpt test je subl sub pop sbb mov fdivrs lock mov rcll sub xchg dec rcrl cmp pushl push movsl cwtl mov fs add out stos es dec mov add adc test int3 pop xchg das mov cmp fild or inc mov mov dec xchg xchg jmp clc mov push lret shll mov push jne jg push loopne and lcall fdivrl ret imul outsb out pop xchg xchg test jnp,pt adc decl jno jnp adc jmp out or lock aas fs and inc (bad) (bad) (bad) incl dec loopne in out push clc out pop push in test adc push push mov adc cltd ljmp xor mov outsl pop cmp mov push mov adc push jge stos jg pushf jl mov lcall ds adc idivb cwtl jne pop cld add jmp jmp stos mov fwait cli xchg pop add mov es push negb (bad) (bad) (bad) jmp push cmc jb push cmpb xchg pop adc push cmp mov push test pushf clc (bad) (bad) jmp loop enter sub insl cmp out add je insl jo (bad) ljmp sahf pop incb cmc inc insb push mov insb dec fcomip inc adc jecxz arpl inc frstor mov popa jl sbb pop xchg sub insl inc imul xchg jge mov je mov loope ficompl jne xor lret pop jne mov loopne std jbe adc sar push loop sub mov (bad) (bad) lcall xchg sbb cmc in (bad) xchg push int3 roll test dec jae das outsb pop jno movsb xor ljmp in dec xchg or (bad) out arpl jns stos dec (bad) lret mov (bad) cmp mov rclb cmc stos (bad) xchg sbb inc jle out movsl jns test jbe lock std lcall pop or cmpsb push test cli xchg jo out out inc addr16 jle and cmp push shld cmpsb hlt jg cld and and mov jae (bad) (bad) incl iret pushl int3 dec out xor bound push adc (bad) (bad) decl enter addr16 mov popf loope pop dec into inc or repz nop in imulb scas cli decl jae sbb pop xor nop dec insl nop icebp and in jmp (bad) lcall cmp imul daa aad fistp and pop ret xor (bad) (bad) (bad) mov jb (bad) int popa shrl push mov sti (bad) and xor dec and lret aad jmp loope insb daa icebp push lock pop sub jl dec jbe mov (bad) (bad) decl mov mov std in or jb inc imulb rcll xor (bad) cmp decl sbbb sbb or aam cmc xor mov notl aam sahf repz mov (bad) (bad) ljmp ficom aas repz lods sahf test sub std adc ds sti mov (bad) mul add adc mov mov fsts ljmp mov add lds (bad) (bad) (bad) decl mov inc int out aam lock repnz sub fdiv mov out adc xchg fisttp mov fwait insb ljmp pushf dec or fidiv pop repnz push mov mov call mov cmp or inc xchg fisttpll push add (bad) (bad) pushl adc or jnp cmp lods mov adc xor cmp (bad) incl shll jle jg add and aaa ljmp jbe xor orb (bad) (bad) (bad) decl adc arpl in (bad) insl xchg lret push add sub jae (bad) lcall enter lret negb and add aam push cmp sub jmp pop loope loope pushf scas inc adc jge or in mov mov gs mov jbe push repz mov xor xchg daa addr16 mov es lcall mov and sub cmpsl mov mov pushl gs xchg in cs sub xor into xor (bad) push mov lea push adc pusha inc fdivrl sbb inc cs or (bad) jg ljmp push nop adc xchg sub jne shrb jmp (bad) fldt xchg and fisubr rolb push push mov xchg (bad) aas pop mov mov js add loopne add (bad) (bad) jmp mov iret in fisttpl jno jns cmp lods cmp aas shl xchg dec test lcall xchg jmp mov and cmp inc aaa cltd ret dec andb ljmp adc cmpsb adc fmuls jbe mov aaa xor xchg cmp jb,pt sbb lret or mov fildll sbb sbb xor out (bad) (bad) lcall into jmp sbb bswap jnp xlat movsl cmpsl push jne mov cld call push mov and aad sub or push rcrb lock push iret rolb xchg lahf sbb cmpl loop sahf sbb (bad) jmp scas push sbb aaa cmp cmp stos rep mov push add sub sbb iret mov lds imul decl add xchg ds dec ficompl cltd (bad) (bad) (bad) incl jl push cmc inc cmc add pushf pop mov fwait pop cli mov ret fs in (bad) (bad) (bad) (bad) jmp out lret mov xchg (bad) xchg jmp mov push jp adc inc fdivrp (bad) (bad) jmp ret add cltd repz xchg popf push xor sub aas fstl or in add (bad) (bad) (bad) lcall jnp sbb jne mov std jl ljmp sarl (bad) sbb add sub cli pushl in das xorl gs xor lcall rol arpl sarb rcrb push or pop and mov test sarb xor push ret (bad) (bad) (bad) jg shl xchg jg adc bound or lods jnp int mov push popf in mov pop sbb lret or pop dec dec add out and ficom in call pop popf lds (bad) pop std ljmp rolb jg movb daa in fdivrl rolb cli int (bad) (bad) jmp pusha push sub or jb inc sub mov jl fistpl fcmovnbe adc (bad) add adc jae sbb leave dec and cli aas lock or jnp clc (bad) (bad) fdivrp jnp pop aas mov mov inc xorl outsb mov adc push js mov in sbb movsb or test incl sahf jp into cmp test ja jne,pt sbb mov mov push mov pop dec std (bad) (bad) cmp addb pop mov in sub out sub (bad) jg sahf rcl daa xchg (bad) (bad) ss cmpsb mov add sub fs movsl std or out jb ds out cmp dec jno dec jecxz push cli cmp (bad) stc (bad) stos aam ret stos mov iret ljmp mov push lea out mov (bad) pop fist add sti (bad) ss and pushl sub cmp sti lea (bad) (bad) mov push jle xchg jmp jge pop loopne repnz movsl pop loope sbb jae movsb sub call icebp inc pop int ret mov jg push lret imul dec xchg fistl pop in mov add out ds (bad) decl xchg std std ficoml add sub jle mov xchg loop (bad) (bad) (bad) lcall outsl pop into jnp add and std daa test (bad) test and (bad) (bad) dec and cmpsl push pop sub sar lahf mov dec jae push pop dec lret daa jp cld mov je cld jg decl pop jmp bound lcall xchg in jns and mov mov inc pop xor sub mov js mov ds push mov jecxz adc pop mov push sub aam aad and fs mov (bad) pushl mov outsb add jg mov push mov inc ljmp mov pop pop iret pop jne lret insb mov push xchg and xor pop pop inc sarl popa int3 and fcomps adc mov dec pop mov out lods repnz ja sub sbb (bad) (bad) (bad) (bad) cmp inc and lret pop mov iret sub pop sub and lret cs fcmovnu mov mov movsl dec jne push and inc adc (bad) aas fisub fstpl adc push ja xchg loop,pn scas mov ss sub (bad) ljmp shlb into pop mov shll push lcall das sbb aaa cld mov inc out inc sub stos lods ljmp dec mov push stos pop mov ljmp xchg jecxz and dec jns xchg int3 pop test decl lods push hlt pop push es fwait inc or popf sub push xlat int xchg xor scas rclb ja push icebp sbb je pop pop sahf mov mov pop aam icebp xchg addr16 aam rol jle mov push mov fild jecxz,pt fsub jl gs jae sub mov das loop jne pop lods push loop aaa fs mov out aad cmp (bad) leave mov (bad) (bad) (bad) mov outsl inc cli arpl sbb dec mov pop add fstps (bad) jmp or enter cmp add ljmp (bad) rolb inc into mov jne and gs dec clc enter jecxz dec inc pop jecxz jp cmp ds xor cmp xchg inc fstl push and (bad) (bad) (bad) pushl lahf inc dec mov pop xchg pop stc std push inc jmp or cmp (bad) int3 lret jmp jne (bad) (bad) (bad) in stc sub iret mov dec push mov push ror xchg fwait pop fwait inc outsb cmp dec (bad) (bad) decl in enter adc aas jo nop sahf mov and (bad) (bad) fbld mov adc cmpsl mov and ja sar or sahf sbb fiadd push std loop (bad) jmp scas sbb cs iret dec cs adc mov mov mov jae (bad) xchg and insb divb (bad) (bad) cli cld add aaa push and std or (bad) (bad) mov push fsubrs mov mov xchg xor or enter iret sub pop mov divb movsb pop and or cmpl hlt mov (bad) adc mov stos mov repz outsb in cmc ds (bad) (bad) jmp mov and and add lea sahf inc mov fwait call aam xchg icebp lcall xchg and hlt ja aam (bad) (bad) decl daa sbb stos xchg mov outsl inc shr mov sub or std cli jecxz call jmp fisub pop cmp and (bad) (bad) (bad) mov imul jb (bad) mov mov flds fdiv ret sbb fimull inc cltd dec xchg push and add (bad) (bad) (bad) incl xor in pop (bad) (bad) cli stos cmp daa outsb movsb rorl js jg decl push je movsb decl rcl popa jbe stos add mov add ja js dec mov pop xor mov ja xchg sahf mov lods xchg mov (bad) fmull icebp xchg xchg push into shrb clc rcrl mov stos or in jbe lcall mov sar cmpl mov enter push (bad) (bad) (bad) push push shl mov call cltd mov ja (bad) cwtl scas add lcall mov mov sbb mov cltd jmp jmp or or add push inc cmp std (bad) (bad) (bad) ljmp pop pop mov sub sbb adc inc pushf inc fwait pop mov insb int push sbb mov xor enter inc sbb test mov (bad) (bad) (bad) inc cmc or lretw mov xor pop push sti and jg shll insb xchg cmc (bad) decl dec pop (bad) ret loop dec (bad) mov jmp (bad) (bad) ljmp mov and testb cwtl or (bad) fisubr (bad) xor cmp incl movsb sub push (bad) lods repz stos or adc pop or test das fstpt jg (bad) inc icebp scas js call jecxz inc pop dec fsts sub (bad) (bad) aas (bad) (bad) (bad) (bad) jge pop xchg push dec or pusha lcall shll inc cmp or jae aad shr (bad) (bad) ljmp (bad) (bad) jge rcll fimul sub repz sbb sub mov jle loope jecxz dec mulb popa cmpsl ja dec jbe and stos (bad) (bad) incl popf jae sbb outsb subl and cmp popf (bad) rorl (bad) (bad) jmp pop jge mov in sti dec inc iret daa jmp add insl icebp insl xchg sub mov fidiv mov inc ds int enter incl mov into daa and add add xor rclb mov (bad) inc sti xchg mov pop push cmp out mov pop (bad) sbb lret sbb in sub cmp jle fcomip (bad) fcomip stc outsl loopne jp cltd divb dec inc mov mov or xchg fwait (bad) (bad) push mov xlat cmpsl popf jle lahf scas xchg out and (bad) call ds dec push dec cld mov roll dec jo ret jmp (bad) call fidivr mov cwtl inc dec adc or (bad) (bad) push add loop inc rorb les xchg rclb lds pop out (bad) (bad) (bad) lcall cmp repz pop jle jnp xlat loope,pt xlat sbbb ss xor mov add imul lcall (bad) jnp hlt in cli repz lea jmp jns sub inc (bad) (bad) (bad) jmp adc mov pop (bad) cmp jle out lret aam xchg vmread movsl out cmpsb out cmp lock and pop fsubrl or or jb (bad) (bad) (bad) lcall ret inc cli lods xchg xchg mov ret popf xor sbbl xchg jp mov fcomip pushl (bad) aad (bad) jae push pop mov loop dec or dec (bad) xchg add fdivrs push in sbb (bad) (bad) (bad) (bad) jmp clc dec repz rcll lret lock and fsubrp inc lods dec pop sub sbb (bad) ljmp push out sti js test sub pushf leave push loop lcall pop call sub (bad) mov (bad) pushl outsl mov scas test stos mov leave aaa into sbb daa test stos mov ljmp jecxz pop in dec push je lods mov aad cmp jmp (bad) (bad) (bad) decl stos jle cltd sbb aaa pop and pop jle dec and js inc in cmp (bad) (bad) mov add pop inc mov sbb movsb mov adc adc cmp stc dec sub inc and fnstenv test jl dec mov (bad) (bad) ljmp cmpsb push lcall pop je adc clc test loop (bad) pushl xchg or decl call pop repnz pusha fsub (bad) ljmp jo das inc xchg imul popf or sbb and push jmp icebp cltd adc cmp imul mov cmc or mov (bad) jg cmp and std sbb (bad) (bad) fnstsw jae dec mov adc (bad) sbb sbb clc mov ret aad jbe divl jne (bad) (bad) pushl mov add jae nop inc add movsb clc aaa stc movsl js je ja xchg iret dec ljmp or cmc (bad) push mov xchg and fistpll repnz pop sbb (bad) (bad) (bad) mov pop fist mov adc sub pop les fldenv jecxz ja jmp incl test imul push lahf outsb xor sbb xor jae into mov (bad) (bad) lcall and lods movsl sbb in mov push mov dec pop lea (bad) je call (bad) rorb sub ret scas pushl cld call jb cwtl dec or test fcmove mov jb fbld (bad) mov int sbb add (bad) call dec push mov xor aas rclb push cld pop leave (bad) dec (bad) jmp jecxz (bad) jmp js std jmp mov add (bad) mov push lcall adc jno inc (bad) out push lods push lret mov clc (bad) decl xchg or test pop and mov mov (bad) jmp push inc es addr16 sub jns (bad) repz popa (bad) ljmp xor mov lds (bad) mov inc adc (bad) mov sbb or nop and fisubr insl push leave xchg lods push and sub cmp push and (bad) dec sbb xor andl jmp mov jmp sbb cli mov out addl mov cmovno flds sbb jmp cmp out mov inc sub (bad) call sbb sub add cmp cmp js fstpl xchg jl (bad) (bad) lcall xchg test lret jg push inc or sub fildll mov mov and sub xor dec sbb test lock xchg stos (bad) les lods jae dec sub movb (bad) (bad) pushl jge shll (bad) loop daa rolb and cmp stc jne push or (bad) out stos (bad) sub pushf loopne jns (bad) (bad) fistpll push mov xchg les pop sub bound sti push add inc (bad) fcomip (bad) jp or aad or fnstenv icebp int3 adc xor fwait (bad) mov fild sahf flds add mov (bad) call in dec push push (bad) xor pushf testl add fisttp jnp fildll nop repz (bad) (bad) call arpl in xor (bad) xadd or dec dec outsl aad outsb (bad) (bad) (bad) ljmp jp or clc scas add cmp dec incb fs xor mov movsb inc sar (bad) (bad) (bad) fdivrs in sub popa xor or shlb pop loop xor push mov (bad) (bad) (bad) fsubr jge mov mov sbb inc jle jno pop out fadds adc mov imul pushl outsb movsb rcrl popf (bad) call push mov push jb aas cmp adc bnd adc sbb (bad) (bad) (bad) out pop ds mov aas fistpl cltd sbb rolb mov and (bad) (bad) (bad) std hlt sub stos add rdmsr rolb fwait hlt lcall hlt cli or hlt jmp (bad) jg decl aam lcall out aam imul scas jnp xchg pop movsb cmp jg sti inc xorb icebp inc xchg jp cli cmp adc rorb push inc xchg (bad) (bad) (bad) decl mov pusha outsl lea or mov inc and jo out aas add ss andl jp,pt sti (bad) mov imul incl outsl dec repz sub mov lcall sahf rclb stos out inc jbe insb loope aad add lcall (bad) call sbb pusha negl aaa aas sbb ss (bad) (bad) call ds in mov lea adc sbb or xchg test (bad) (bad) (bad) (bad) mov mov push jb fisttpl add aam or imul xchg cmc xchg cs or dec popf iret jge push xchg pop daa (bad) out sbb popa lret (bad) pushl cmpsb lcall test inc mov in out lea insl nop push lods ljmp cmp mov mov mov call lcall sub pop dec cwtl push scas xor sub test mov pushf les pushl mov or mov ss mov add (bad) leave or ja call insb out (bad) cli mov repnz daa popa push adc js xor (bad) (bad) jmp and outsl in push lahf or jns,pt loope add cli ds sub das add cmp and pop or push xchg out stos jnp in cmp sbb sbb sub (bad) (bad) mov fisubl mov or aad push jg jbe mov mov (bad) ljmp sbb fnstsw push or dec mov fs (bad) (bad) fistp push or ficoml xor stc (bad) pop (bad) imul std cmpsl les decl lock push insb fidivrl adc cmpsb cmpsb adc (bad) jg adcl int mov bound sar outsl fmull loope movsbl (bad) jmp push cmpl mov mov mov xchg divb test ljmp fs dec addl inc cli dec addl jne xor xorb icebp mov (bad) (bad) (bad) (bad) lcall and xchg les mov das pmaddwd mov fbld negl push scas ret inc ljmp push inc int3 sub add into scas mov lret mov pop loope je lods cmpsb (bad) (bad) (bad) fistp imul pop or jle mov mov cmp pop jae (bad) (bad) (bad) lcall shrb mov test sub push cmp dec cmpsl movsl mov add pop and xlat mov push dec cmp or and (bad) (bad) (bad) call ret pop and cli cmpsl push jno outsb dec rcll cmp jae (bad) (bad) (bad) fcmovu pop mov leave std out cwtl arpl incb in xchg addl in mov ss pop std (bad) call add xchg mov outsb mov das scas jns add es sbb stc adc sbb jp ljmp lret imul jae,pt cmp push cmp repnz pop (bad) (bad) lods pop out add scas es jb mov pop mov mov (bad) (bad) mov jae ficom push enter cli outsl adc push sub xchg mov data16 jae repz xor rorb (bad) cmp xchg add and jmp dec xor pop out jecxz pop (bad) ljmp pop in adc popl lcall cwtl in inc add lds ljmp mov popa fisttpl stos or jl xchg (bad) sub jl das test jae sub jg pushl movsl das add push cmp cmp cmova lret frstor leave call jg inc push mov xor loope dec cltd pushf mov xchg int dec push add (bad) (bad) (bad) call jne stos add inc scas adc cmp pop cltd inc je jecxz lret cld (bad) fild jb int3 aam dec in jnp sub mov xchg sbb leave (bad) (bad) pushl int3 pop call pop adc in mov shlb aaa lret std add inc (bad) (bad) (bad) lcall xchg xchg cmp dec aad lea stos cmpl (bad) enter notb or jno aaa push popa mov mov mov (bad) decl ja (bad) push pop sahf jg push jp jecxz dec iret clc insb jne adc push push in sub sbb pop (bad) (bad) stos pop fcmovnu iret ret (bad) (bad) (bad) pushl push daa add out in xor add mov adc adc lock stos lcall xchg and jno jp pop inc mov sub (bad) jmp pop mov test push rclb mov jg mov fistl (bad) call xor sbb or mov mov jp or icebp (bad) (bad) pushl push cs pop jae fwait inc and ds mov mov (bad) call mov movsl jle inc insl fdivs (bad) jmp jb xchg loopne call push jns xorb jecxz bound sbb (bad) jmp mov es mov out pop addr16 insl pusha dec (bad) mov or addr16 jg pop pop sbb (bad) (bad) lcall cmp loope sub pushf fs sarl cmp add insl test outsl mov loopne add cmp (bad) (bad) jg aam ds mov loope enter cmp pop mov push popf jg les in repz and imul (bad) ffreep push mov test sub lods in sub loop jl mov in jmp sub mov bound roll (bad) (bad) decl inc or and jne push cmp movsl push out xchg xchg jb mov dec inc cmp cmpsl (bad) (bad) (bad) pushl cmp jmp push dec mov clc cwtl fimul insl jns stos sub in (bad) ljmp clc in shr push jo cltd (bad) sarb movsl je add lods jnp dec push stos cmpsb cmp sbb (bad) (bad) fcoml lahf jp or (bad) loope mov sbb adc (bad) pushl dec inc outsb or scas test fbstp xor lds je fs dec (bad) (bad) (bad) jmp push jle ljmp pushf fmuls mov xor cli pushf clc lret insb adc sub inc ret mov ficomp jl int3 cmp sahf clc fs in (bad) sbb xor int pop sub inc xchg mov (bad) ljmp imul test into sub lcall int fnstcw daa rcll jle sar (bad) fisubl pop adc cmp push xchg pop xchg cmp pop (bad) pushl adc jns pop loop repz dec push cmp (bad) ljmp inc in sti xchg loope insb les fistp jmp push mov cmc push orl ret (bad) xor push jb dec mov nop fdivrp (bad) inc in xor mov jmp (bad) call fs adc cmpsl pusha test dec fnstsw jne idiv xor int inc or imul daa fldenv adc mov (bad) cmp push mov lcall mov adc aam and mov mov jmp outsb cmc (bad) (bad) (bad) cmp mov pop test or push out mov xchg inc inc int3 jl (bad) loopne (bad) fist rcll add ficomp aam in ja sub in inc mov and and hlt cmp roll loope jg jg inc xor sbb out fadds mov hlt in jg inc cld cmp sahf jnp int jg (bad) call dec leave sub lret aaa mov or mov mov outsb pop cmp clc scas ljmp aaa adc jmp inc pop adc out xchg jle or jg pop jns mov mov fsts or (bad) decl mov lahf mov push std negb or inc mov mov lcall lcall xor movsb xchg or cmpsb mov cs adc mov jp (bad) ja fcomi xchg pop pushf or fisttpl mov (bad) test add incl xchg shll jecxz add jne jle,pt push rolb andb (bad) (bad) (bad) incl cmpsl or mov pop cmp hlt add lahf addr16 jnp fnop (bad) (bad) push lcall out jb repnz outsb push sub pushf pop dec lcall (bad) incl mov pop loopne outsl jge rcr movsb cwtl call cld insl std fcomip lcall inc icebp push push dec cmpsl ret movsb pusha daa cmp add (bad) (bad) out xor aad push push enter das mov xchg ds (bad) (bad) lcall pmullw je jge imul sub xor jl ret cmp movsb mov test sarl js ljmp xchg cmpsl rclb mov pop and sbb cmpsl jmp inc cmc (bad) push push outsb or testl (bad) je lret dec mov mov mov inc cmp and and sbb mov xchg sub inc je iret popf xor mul cmp clc sbb call imul mov cmp in push cmp or dec shrl sar ljmp xor xor push pop movsb ljmp cmp sahf sbb pop loopne hlt fwait mov loopne aam fsub (bad) dec inc jge (bad) (bad) (bad) push and pop (bad) and mov inc sbb lds sbb cmp inc cmp popa mov rcll (bad) xchg lret icebp mov inc mov cmpsb (bad) cld faddl cmp pop movsl lock aaa fnstenv push jmp insb xchg jne xchg and repnz ficompl mov push dec ds popf xor mov clc (bad) jl add ss mov rolb (bad) (bad) (bad) call shrl lahf sub addb dec into dec inc add cmp ljmp (bad) (bad) ljmp fs xor xchg mov les mov push jnp mov jmp das popl ljmp sub (bad) (bad) jmp bound push daa pop js dec dec pushf inc push adc xor outsl movsb mov xor mov cmp add or int add out sub in jo repnz rolb sbbl arpl punpckhbw add mov dec cmp (bad) mov mov shlb mov je or incl adc out xor es jmp mov adc mov insl js call add add push mov adc (bad) (bad) jmp daa pop dec xor mov jbe xor inc hlt add aaa pop ror enter ljmp out push cmpsl and ljmp (bad) out mov mov sub jnp divb loop enter mov (bad) (bad) fistpll insb shrb pop inc js pop loope fldl lcall and sub adc cld (bad) pushl mov pop lods add in pop pop sbb add and mov clc mov roll xor jne or push dec mov mov ds ffree mov sub scas clc ljmp jle xchg out push in ficom rcrl shl (bad) (bad) (bad) decl dec ds movsl outsb jp pop rorb lods jno js inc in clc dec popa in or push fdivr out dec nopl nop jmp push jecxz (bad) call add iret and mov jge outsl aas gs (bad) (bad) (bad) mov les ja jle imul lds sub add (bad) (bad) call xchg mov pop mov sbb subl inc pop and movb adc fs aas or dec repnz push mov (bad) (bad) (bad) pushl dec mov pop add iret jne jno adc add mov cmp call enter arpl xchg or out dec repz inc jg (bad) pushl sub cmp mov in mov (bad) adc aas dec fdivr pop jae (bad) (bad) (bad) (bad) fisubl cltd and sub hlt jae arpl adcl pop movsl movsl fnstsw repz adc fstpt test adc fdivrp pop xor lret push (bad) (bad) mov push adc inc lods sbb jnp dec aad xor (bad) ljmp orl notl pusha loope pop add mov xchg imul ljmp in stos dec iret dec daa pop inc pop inc jb das mov (bad) jb sbb iret ds (bad) (bad) lcall or sbb in shlb cmp (bad) (bad) (bad) push not mov stos inc jmp cmp rorl and jecxz stos add push (bad) mov or js push pop subb pushl (bad) (bad) int outsl (bad) xor xchg sbb popa push js (bad) (bad) jg ret call iret dec pop popf dec stos mov int3 popf sahf mov sub (bad) (bad) (bad) dec test or rcll push jns sbb cmpsb push stos clc xor add dec (bad) (bad) cmp fildl lods (bad) sub fistpll jl aam rclb cmp outsl cld sub (bad) cli fwait jnp mov jg inc cld pop js xchg mov ds imul cli (bad) decl aaa xor sub popa pop enter sbb adc (bad) xor (bad) (bad) jmp mov dec dec incl inc je push into repz outsl mov (bad) (bad) (bad) pushl repnz nop dec (bad) daa and insb push repnz lds jae (bad) sub jbe add jno jno (bad) (bad) (bad) decl lods jmp push cmp adc andb push inc mov jae sub and jl (bad) sbb scas (bad) cmc push inc aad aaa bound pushf inc xor sahf orl jmp inc jns jmp cmp jge and sub mov (bad) (bad) (bad) (bad) fldcw xor sarl test mov lcall cmp cmp pop sbb cmp (bad) out (bad) xor fcoms mov jge stc faddp mov (bad) (bad) jmp test icebp sarb fcomps dec xchg out outsb mov pop cmc stc sub sub out push (bad) mov pushf fs lock sub push sub out hlt scas stos sub jle pushl std pushl test cmpsl mov scas adc std in push ss jnp (bad) (bad) (bad) sti inc js add mov lds push push xchg lret inc roll addr16 mov pop jb mov call aas mov dec jecxz and jb mov jnp sti fcomip mov mov push pop jp adc lret mov mov xor mov iret enter aad pop xchg jl push (bad) (bad) (bad) call cmp mov gs dec jle mov xchg pop add rcr lret xchg lock jmp xchg mov inc scas pop iret ds outsb loop jl (bad) (bad) incl xor test es les xchg xchg leave cld fwait or jbe movsl mov adc (bad) (bad) (bad) dec outsl cmp xor xchg mov insb lcall lods scas cmp mov es (bad) (bad) incl xlat jns lret and leave shrl push jns jecxz (bad) int add add test jmp mov sbb pop mov or mov in cmpsl sti in sti das insl mov mov jmp jmp test fadd adc lds bound les imul jno int idiv jno (bad) (bad) incl pop jp hlt jge outsb pusha jg sbb or sbb adc loopne repz cmp or clc decl into add repnz imul jnp xchg sbb aaa cs gs in decl test jge (bad) call mov rcrl sub ja adc inc dec sub add push inc cmp out pushw mov inc loope mov jg jge loopne sub mov xchg jns int3 xchg mov test push adc inc icebp push and push fwait int ss sub sub (bad) (bad) (bad) pushl gs xor cmpsb pop int3 stos into xchg imul stos adc enter rclb mov add add push push inc incl cli popa inc pushf test mov inc lret (bad) (bad) (bad) lcall sub push enter mov adc aas inc fistpll push pop iret outsb sub (bad) (bad) (bad) ljmp mov or mov push sbbl push mov jno fs (bad) call inc mov ret inc inc or outsb stos or jae (bad) decl rolb pop std inc (bad) sub test or (bad) incl push pop test sbb lret mov jbe push add mov pushl out fsubs pop jg sarl int3 lret lret xchg je mov pop (bad) (bad) (bad) decl jmp pusha and add adc or lret nop clc lcall (bad) (bad) (bad) incl pop fdiv push scas pop pop and mov bound std scas or inc inc pop fistp jns fist hlt jp fldl lds and not xchg clc scas sub pop jae repnz outsl subl push shlb xlat mov adc stos inc xchg push (bad) imul (bad) (bad) (bad) (bad) push shr pop jecxz rcrb sub pop aaa dec pop sti enter push jbe fcompl sub lret or (bad) decl xchg xchg xchg int jne sbb ss lods and (bad) mov mov cmp cld and notl incl pop rcll lret adc push test ljmp mov (bad) fdivs outsl and pop ret push adc out sbb push mov or ficompl outsb fs xor stos (bad) (bad) (bad) lcall adc lcall xor jmp in dec jne pop xor or cs (bad) (bad) (bad) inc push int mov push cltd jmp fisttpll mov add jge sbb (bad) fisttp ds (bad) jbe jl int adc rolb add test inc or ja pop adc jg (bad) mov cmp repz mov dec sbb dec push fild incl ret ficomp in add jne (bad) (bad) incl cs pop mov popa into adc (bad) std adc les jg and cmp outsb push xchg jae aam inc mov test bound rcrl dec stc ret test and cld das aas test push hlt (bad) decl dec add push jge bound leave sbb ss lock (bad) ljmp pop cwtl mov add xor push xchg pop mov dec imul adc idivb fisubr rorb aad push stc adc sub movsl cmpb out jge sub xchg sarl daa imul mov clc sarl out or sub fsts (bad) iret cmp add (bad) (bad) (bad) jmp mov fcompl mov jecxz sbb out xorb dec sbb dec jecxz (bad) sub and movsl pushf adc jecxz sti pusha pop (bad) ljmp sahf push push je fcmove int3 add xchg push push in (bad) mov (bad) (bad) call dec mov mov popa pushf mov insb dec jp xor jmp mov mov out sbb sahf ja dec mov add push sbb lea mov cli (bad) jmp popf je enter and mov dec test aas cli (bad) (bad) jmp sub jb mov cltd dec dec or xor nop sbb cs mov jb es rcl cmpsl mov mov (bad) (bad) jg nop enter or mov mov sub jno push or push jg jg loope (bad) lcall mov inc xor aaa mov adc hlt movb movsb aad add mov leave (bad) (bad) fisttp pushf and jp inc cmp insl push jle dec and xchg (bad) (bad) call (bad) push adcl stc outsl int mov (bad) mov inc pop (bad) adc sarb inc das outsb stc lock add (bad) lcall push imul insb sbb nop movb cmc loopne jg xchg lcall in gs lahf lcall mov aad (bad) (bad) lcall xlat and xor loop mov sub mov icebp mov push xor inc imul mov jb js sbb push sahf sub add mov add (bad) jae add or das pop insl ds (bad) ficomp lret push lock out or (bad) (bad) (bad) mov push push flds push lret add aad cmp adc cmp xchg cmp (bad) mov ds jbe (bad) pop daa pop jl aad jmp enter lcall loopne mov fldcw sbb stc and adc aaa push (bad) les sbb lcall pop add ds pushf int jnp xchg insl cli imul (bad) jnp mov or ljmp sbb push inc sub inc loop sub adc (bad) (bad) decl (bad) mov outsb (bad) push fimul fistpl pop stos (bad) and rcl mov lea inc or sti cwtl leave lret xor pop add add or pushl fnstcw les ja mov jl decl pop push adc movsl and gs lret cli sbb xchg mov mov mov mov gs add mov add (bad) cmp and fcomip pushl es adc rorb jle dec (bad) in loop jns push cld (bad) ljmp test movsb pop sub lds mov (bad) nop xor insb outsl out leave (bad) (bad) call cmp push (bad) fsubr sti (bad) jns in adc adc and fmull and js popa in mov dec mov dec pop pusha or mov sub loopne dec sahf arpl mov lret (bad) inc mov ja aas ret mov (bad) sub test (bad) ljmp and push insl xchg cli mov mov push mov mov jg add punpckhdq jb bound pusha pop push and and (bad) jmp lcall pop push std mov pop bound rorl (bad) (bad) (bad) dec and adc and xchg loop xchg xor je mov enter dec (bad) pushl out mov mov frstor iret jae jmp sub adc lret loopne out and divb fiadd mov cmp push cmp (bad) lock xchg lret cli dec jle repnz push (bad) push mov xchg and mov jb jg inc mov fidivr dec push lods and ljmp pop sbbb jns sbb fimul (bad) (bad) (bad) jg fwait (bad) or push xchg fucomp push (bad) aas in jo inc push jmp (bad) cmp sahf inc sub jle mov inc dec jno mov outsl mov (bad) (bad) (bad) call dec xchg mov jle js jp adc pop xchg out xchg lret pushl mov std cli add xor add scas fsubrs hlt mov or (bad) (bad) (bad) (bad) js pusha fs outsl push ucomiss repnz andl add jmp mov or or les pop mov out add jle popa dec xor (bad) lods xchg mov sahf das out fdivrl sti xchg pop mov aam lcall movsb cwtl jge pop arpl imul lcall push jno pop mov mov jl cmpsb call ficompl sbbl cmpsb inc stos pushl cs repnz sub sbb (bad) (bad) incl xor lds and sbb cmpsl push aas out roll pop inc sub push pop add inc lcall mov inc icebp or add lock loopne insb mov pop outsl call aam add jnp mov (bad) mov insl (bad) cmp movl fmulp fidivr cli in jno push sti das add out or negl sbb aam (bad) inc call pop outsb stos aam pop sbb push outsl sahf pushf insl dec lods enter adc and imul or xchg cld sbb (bad) ljmp push or les or outsl cli loop mov jmp ficomp lret add jle sahf outsl push mov (bad) mov (bad) mov (bad) call jle popf xchg mov scas ss jae and mov adc dec inc lea (bad) (bad) (bad) ljmp bound scas icebp xchg addr16 jno (bad) ljmp stos fsts mov call adc lock cmpsl data16 and scas inc add (bad) ljmp cmp or mov push mov aas adc popa pop (bad) icebp mov movlps arpl stos mov sar hlt (bad) cvtpi2ps xor aad out clc inc ds in in insb (bad) leave jg stos mov ljmp ja,pt aad (bad) jae int or (bad) (bad) (bad) mov es imul mov popf cwtl icebp cmp inc adc or inc fcomip pop mov rcr fildl loope (bad) decl ds inc popa pop clc stos outsb cmp pushf jmp and addl xlat (bad) (bad) call fidivr repz mov mov sbb ficom add test (bad) (bad) (bad) call push push sarl cmp pop pop (bad) xor dec xchg je jnp (bad) jbe cmpsb popf aad push repnz jae (bad) (bad) (bad) std in test adc add add daa (bad) roll lea dec iret adc mov (bad) incl ss imul gs nop pushf sahf sbb (bad) bound cmp in ss ljmp (bad) pushl icebp and shr and add mov jbe rolb addr16 jae (bad) (bad) pushl sub test sbb lcall and test jmp aam jp xor (bad) (bad) ljmp or xor rcrb and scas xor xorl add scas cmp xchg mov pop mov fidivrl stc sbb ljmp test xchg andl sbb pop nop push sub mov repnz repnz imul mov lods add call jo out je mov testb add jge aad out cli mov pop fwait (bad) (bad) (bad) mov mov lahf mov dec ret icebp decl in (bad) (bad) (bad) pushl nop adc push aaa cld int testb cld popf jno mov jae iret decl popa loope dec hlt mov and (bad) (bad) (bad) ljmp ret mov xor xor call cld pop fadd cmp ret pop mov (bad) incl cmp int3 (bad) ficoml dec mov in pop inc pushf fs (bad) (bad) (bad) incl repz or jg sbb enter test lock cmc ret divl clc je inc iret idiv lcall xchg push cltd ret lea mov jle cmpsl jne xchg dec mov (bad) (bad) (bad) pushl jmp pop fs fisub in push inc or cwtl into mov cwtl ret pop sbb stos mov mov (bad) (bad) jmp aaa fwait imul pop and (bad) xlat fildl cmpsb xor add (bad) call test ds iret stos push cmc push das sub xchg (bad) decl xor shl daa dec int3 mov popf and (bad) (bad) pushl dec mov xor mov cmp jne iret mov xor push movsb outsl or lcall call in out (bad) (bad) (bad) (bad) fimull cmp pop xchg outsb pop pushf jno lahf fndisi(8087 (bad) jns (bad) daa (bad) stc mov sub (bad) (bad) (bad) (bad) stc lods mov xchg or pop jecxz jo lea inc inc fwait aam push repnz and add call movsl sbb jecxz push andb push incl inc xchg mov jb out cltd jnp (bad) (bad) jmp jae jge xlat mov xlat push or fisub push inc popa add pop push dec decl sar cmp dec sub mov call or lcall outsl push jno or cmpsl jae xor int3 outsb push mov imul mov ljmp xchg dec add (bad) aas rcl or enter test jle (bad) (bad) (bad) dec mov inc inc fnop mov ret cmpsl into rorb js cmpl dec sbb clc (bad) incl sub lds sub mov and lcall (bad) cmp dec (bad) rcll repnz aaa cwtl ljmp idivl fucomp loopne clc inc sub (bad) (bad) ljmp adc lock jmp pop fwait xorl cwtl stos (bad) (bad) (bad) call xchg mov imul inc sbb mov mov rorl (bad) (bad) (bad) inc push adc test and leave lret imul cmp push mov (bad) (bad) (bad) (bad) mov repz ret fcmovnu cli jno inc lods flds in hlt test sbb (bad) (bad) (bad) decl test nop mov sbb push adc mov xchg push incl sub dec sub pop dec or aad gs dec int3 dec adc (bad) (bad) ljmp hlt jecxz aam (bad) ss jno mov mov ja push call cltd (bad) (bad) (bad) call mov mov push and push mov mov mov cmp incl lahf les pop jge mov call leave test sub mov inc mov fdivrl push jmp jecxz mov (bad) lcall inc repz (bad) lret and (bad) xor fcoms or push (bad) in mov (bad) (bad) (bad) (bad) pushl lea push push movsl xchg outsl popf scas aam jg fwait or pop xor js mov sub (bad) (bad) jg mov fbld test test xchg fs idivl imul sub jmp leave inc out dec cs out arpl roll xlat and (bad) (bad) push popf stos or jno push hlt pop andl arpl adc popf fnstenv sbb sbb cltd clc in flds jecxz decl lock adc into push cmp rcr pop add mov scas ds inc add ljmp or pop xchg cwtl or aaa shlb xor rcrb mov inc mov lcall insl fsubr mov adc (bad) pop test pop push cmpsl sub hlt inc mov (bad) (bad) ljmp push sub xchg mov fcmovu std pop dec testb (bad) (bad) (bad) pushl xchg inc aaa pop pop es imul pushf loopne adc ljmp (bad) decl cmp sub test out test lcall inc in call (bad) (bad) (bad) lcall push (bad) adc mov ficompl lods cmpsl mov cli stc insb decl (bad) push sub adc jo stc mov mov mov mov movsb pop loope (bad) (bad) pushl fbld and aam sar cltd or lods clc cmp dec out push bound sbb in sbb cwtl ret jae,pt xchg pop enter call mov push cmp movsb xor cmp mov cmc sbb ss jmp ja add dec std call mov mov sarl sub es adc das inc cmp lods adc stos adc enter outsl icebp fdivrp incl cld insb mov int3 sbb mov in loope push xchg push cmp cmp (bad) (bad) (bad) decl stc adc popa fsubrs xchg scas push or in pop lahf pop adc push loopne scas jg decl cltd ret jne in es fiadd dec fidivl ljmp sar movsb jno xchg mov in mov xchg mov dec rcrl or (bad) ljmp fdivr fsubl inc jg mov icebp stos xchg loope fistpll xchg daa push mov arpl push jb (bad) (bad) (bad) jg jl xor dec sbb int inc ret enter adc mov aad mov (bad) (bad) (bad) inc adc test and das leave push pshufw xchg es cmp mov incl fstl dec (bad) or cmp cmc push mov xor outsl andl jmp (bad) cwtl clc and (bad) std mov pop lock jg cmpsb repz push lcall test out ret cli push aas pop xchg or mov insb repnz clc ficompl mov (bad) (bad) (bad) (bad) jmp mul pop xchg (bad) lods lods push lahf fildl mov push rcll out movl stos push rol (bad) out adc mov mov lds (bad) (bad) (bad) jmp dec jo pop sbb fwait mov dec and push lahf mov movsl int out scas xchg outsb mov (bad) (bad) jg cmp sbb mov (bad) es and mov (bad) (bad) call inc scas lahf xchg dec (bad) mov fisubrl in jbe pop cmp call jbe (bad) fbstp aaa dec sbb test sbb out std xor dec (bad) ljmp mov inc ljmp add imul jg scas inc in scas cli outsl ljmp xchg rol push fs mov insl stos cli mov nop (bad) (bad) (bad) call mov popf insb js insb xchg xchg insb ror cld add jne fadds (bad) lock nop pop mov jg popf xchg lret pop cmp sbb inc or (bad) sti (bad) (bad) (bad) inc mov adc jge xchg jae movsb pop test mov test push dec cmp lods dec test (bad) (bad) (bad) incl (bad) mov outsb sbb cltd jbe xchg and push (bad) xor jne jmp push push clc negl mov dec sub insb lock (bad) (bad) (bad) (bad) mov ss jne rcr (bad) mov inc push in inc sbb (bad) decl mov and mov data16 or movsb aad (bad) (bad) incl ja mov adc mov rcrl mov js inc clc cmp in push xchg cmpb sbb (bad) (bad) (bad) cmp gs mov pusha fidivrl jge mov cli jo movsl and inc sub push push cwtl dec mov lcall add nop imul adcb xchg shrb (bad) (bad) jg jo mov push dec aas mov (bad) mov cmp test (bad) (bad) incl inc xor rcll test cmpsl mov add (bad) sbb xor xchg cltd pop pop push cltd stos movsb pop (bad) (bad) mov jbe in das jae push iret dec fwait (bad) (bad) ljmp (bad) cltd cmp je dec mov jl xor adc (bad) (bad) (bad) jge fimul pop out ja je and mov sub jno neg ret je push lods (bad) (bad) pushl and arpl inc rcrl (bad) push push and mov inc popa sub sar (bad) decl mov sbb fucom pop mov (bad) adc enter push sti mov (bad) fild popf stos cwtl jle movsb and mov (bad) pushl push jle decl (bad) jbe scas mov xor cltd push (bad) (bad) (bad) ljmp inc inc mov mov jmp jne jecxz mov mov push or (bad) out out rolb jg dec std sti roll sbbl pusha add gs dec sub negl sahf or lcall inc call xlat leave (bad) pop fnstenv inc mov aas (bad) (bad) (bad) inc mov jno les push shrl ljmp cli pop scas push mov stos and hlt inc hlt scas pop sbb sub cmp add mov and (bad) ljmp cli shr mov addr16 aam adc inc jne dec mov sub das cli inc add add push mov xchg lret outsb outsw divb cld push mov js negl push adc xchg sahf sub (bad) (bad) call sub out push fdivs xor shrb cmp arpl mov (bad) lcall cmp push sbb jmp (bad) cmp shlb inc cmp lahf cmp (bad) (bad) (bad) jg mov ret cmp gs xor mov iret out imul (bad) call mov dec mov aas bound dec repz (bad) (bad) mov push pusha sbb mov push adcl ret out (bad) (bad) incl (bad) int3 stos cmp sbb push inc pop fldt (bad) (bad) ljmp adc inc inc ss xchg sti test jmp cld loop rclb pushl jp loop pop aas sbbl sbb jl loop xor (bad) (bad) call pop jo pop cltd (bad) in enter and iret add dec insb jns adc jg sub xchg movsb call pop and (bad) (bad) incl jge and xchg pop and iret lock je repnz enter sahf jg ja cli pushl leave clc jne jbe js or daa pushf jg (bad) jmp call xor xchg cli cli xchg push jbe fisubl inc jo pop (bad) ljmp rcrb add sbb out cmpsl fwait sbb push and jo lods ret stos add mov mov pop lds loop pop cld jmp fwait hlt pop add sub cpuid mov (bad) shrb xchg or jne mov aas lea cmp mov xchg jo clc aam stos push xchg or test (bad) (bad) pushl mov mov push inc cmp and rcrb adc adc movzbl sub mov (bad) lcall inc aad push xorb or xchg add cwtl xlat xor sub mov mov jle (bad) mov xor xlat xlat lahf pop lcall cli (bad) dec add lock hlt int dec adc (bad) (bad) pushl fsubp inc (bad) fmul outsl loop in fcmovb mov les (bad) jmp and mov lret xor (bad) (bad) jmp test dec js sbb mov cli bound adc cld inc aas nop mov pop lahf lods or ret mov mov out (bad) lcall sbb cmp cmpsb add loop pushf dec xchg popf leave iret dec cmpsl (bad) (bad) (bad) (bad) fbstp jne and adc adc roll cmp cmpsb add shrl (bad) aad cli ss inc ret jmp mov pop jg push pop in rcrl (bad) jg fdivrp aam leave push pop dec pop jl aad in pop mov mov mov insl daa mov imul inc pushf push xchg pusha loopne push push or fldenv inc outsl pop (bad) (bad) decl mov dec mov js push fdivr jnp inc (bad) (bad) dec out or jmp call mov mov cs xor jp cmc cmp insb jb test inc mov dec inc mov cld in shll (bad) (bad) (bad) jg dec jle push sub push mov call cmp mov (bad) in gs (bad) incl mov outsl lahf or inc pop int data16 inc cmp (bad) (bad) incl jbe lret sub adc cmpl sbb mov lret and (bad) (bad) inc mov loope fidivr je lea xchg mov adc popf std jmp jmp daa repz inc add dec xchg dec ror test fisttpl cmp hlt and lods cmpsl cmp (bad) (bad) (bad) inc jmp jl push sarl cmp xchg xchg inc lret push cmpsb cmpsb push das push xchg icebp xor popw inc rcrb inc (bad) hlt mov int mov cmp addr16 add and stc ret scas inc add adc int3 xchg adc (bad) (bad) jg sarl xchg and mov les sub mov adc iret arpl in push add dec clflush pop add lods (bad) mov or pop aam xchg push sub cmp idivb dec jg (bad) pushl jae mov mov fild jge adc ret pop mov test mov push adc (bad) xor mov cld cmc push cld (bad) out (bad) cmpsb xorb and dec pop cs cmp (bad) push mov mov lret stos cwtl icebp ljmp adc (bad) (bad) decl mov negl fistpll add cltd cmp das pop push pop push inc mov xchg cli (bad) (bad) jmp dec adc mov push outsl pop shrl mov cmc cs sbb dec mov sbb mov lcall jne (bad) (bad) fildll pop cmc in add pop pop fnstenv insb arpl sbb aas cwtl push fidivl jmp add cmp xchg repz pop sub cmp stc (bad) (bad) (bad) (bad) jg mov into idivl (bad) imul or fisubr or inc cld mov pop (bad) (bad) (bad) ljmp out dec fcoms mov out andb rcll or adc xchg rolb lea jmp lods icebp (bad) cmp pop int3 bound lret test push outsl nop hlt fdivrp pop or or stos faddl xchg je sahf aaa (bad) ljmp add js xchg enter test movsl mov pushl cmp jo adc jmp mov ftst add xor fmuls nop or push cld (bad) pushl inc insb inc frstor aam (bad) sbb push cmp sti jne (bad) (bad) (bad) incl xor sub into or jecxz jo add cmp adc mov (bad) std jae mov hlt lock loop out adc pop hlt add push mov xchg and mov int3 sarl fldt cmp cli mov nop jne test mov xor movsb xor adc stc hlt mov sbb mov mov fsubl jl insl xchg mov (bad) decl pop rorb or mov leave test cmp js cs ret mov (bad) (bad) (bad) jmp push jecxz mov (bad) adc fnstenv movsl push and jns ja mov (bad) lcall and fldl add cmpsl mov xor cwtl (bad) (bad) (bad) lcall fwait and adc sbb rcrl push jmp (bad) pushl pop jo lods push adc repz sbb jmp push mov pop xor dec inc (bad) (bad) (bad) pushl stc and roll add in insb pushf mov outsl ret repnz sbb lcall jae mov sub nop cli mulb adc out fs mov push ret sub dec jb out cmp pop (bad) pop std mov test gs pop push icebp repnz sub cld jg or mov jbe repnz add out mov (bad) loope cmp dec xor fdiv fmull inc xor cmp sbb add add test dec loope or lds insl (bad) ljmp jg sti sbb lret xor fisttp out int3 push insl xchg inc xchg add stos or lds repz fildll mov (bad) ja (bad) xor adc (bad) jmp adc jb iret outsl notb (bad) hlt sbb outsb inc or out mov incl lahf (bad) imul mov jns ds (bad) (bad) incl mov outsl mov add xor cmp mov lcall cli (bad) (bad) pushl je mov xor adc test in fbld push mov scas mov or cwtl daa arpl push dec push push xchg fs mov jmp or dec shlb mov mov sahf cmp jle pop js ss (bad) out data16 in out movnti (bad) (bad) (bad) pushl or int3 dec cmp lods dec xchg call inc cmpsb cmp cltd hlt jg dec insl lcall jmp decb ret xchg jb lock xchg test (bad) call outsb icebp jb popf sub sub xchg pushf sti imul shll loop mov in ss inc mov fwait (bad) aaa push movsb sbb mov add andl rorl call ret fs pop gs flds imul outsb mov cmpsb cmpsl aad pop inc addw in incl xchg xlat xchg scas (bad) mov ja movsl in jbe ja or (bad) (bad) ds sub and mov (bad) (bad) decl sbb leave xchg aam js or dec jbe xchg xrelease ljmp cli and pop or mov xor push into jns aaa (bad) enter or add mov loope shrl std fsub pushf cli pop xor pop or fild ds and inc aam xchg iret mov or mov adc leave and (bad) pushf push add and lret sbb clc jg lcall imul xchg mov cwtl lcall dec lret icebp (bad) (bad) out mov pop cwtl adc roll (bad) mov push mov xchg mov call mov fisttpll push cmp js add into jnp aam (bad) (bad) jmp jle push inc cmp inc imul pop ret test int3 pushl adc dec mov mov lods icebp in jg add dec push add jno stos imul call jns iret sti pop mov lds jg mov dec push loop sub mov sbb xchg ljmp cmpsl call test pop and ror sub mov push jb cld pushl xchg mov inc ret stos push dec inc xchg sbb in adc pop or outsb and dec sbb loope mov (bad) cmp mov cwtl xchg sbb (bad) jbe jb push loopne mov mov xchg ret (bad) jmp xor sti aad pushf and xor jbe call call out icebp enter (bad) (bad) cmp mov pop pminsw ja add movsb sub cmp in fcos (bad) (bad) pushl inc adc jae cwtl push aas js test and cmpsl xchg test jnp and mov out mov aaa cmp xchg xchg es in jo loopne out pop les rclb mov xchg adc pop bound jb loope fldt (bad) jmp fwait fs out pop (bad) (bad) bound gs in or bound pop lcall and (bad) sti pop mov add dec mov decl nop adc dec mov test or push (bad) jg dec insl stos ret clc or mov fwait inc jo in inc dec dec dec ret notl lock (bad) (bad) pushl mov (bad) or xor cs lds std inc mov icebp loope es call (bad) std xchg xchg sahf adc jnp mov or int incb push push int3 lds or outsl out jno sbb aaa xchg dec enter adc adc (bad) (bad) (bad) lcall iret in (bad) sub aam push cmp in insb test lea sar (bad) or cmpsl cmp mov xchg mov xchg push mov add adcb sbb (bad) (bad) jmp (bad) aad add int push xchg out jne or mov add popf push (bad) out clc das int in loop popa cmp push mov sbb jnp sahf jnp add cli mov xchg jmp aam mov jmp shrl insl jg movsl das xchg adc mov inc (bad) (bad) (bad) ljmp sbb jecxz movsl ret and in fldcw lahf outsb jmp lock inc inc in sbbl adc inc and jns lds (bad) xchg add jne cli xchg sbb (bad) lcall (bad) (bad) jg cld mov insb sub xchg mov arpl bound mov orl jge rorb repnz outsb cwtl and (bad) (bad) ljmp adc jbe mov jge lahf lret mov cmpsb inc fldt (bad) (bad) jg mov data16 xchg stos dec test movsl dec insb (bad) (bad) (bad) mov ret pop push push shrl notl fmull mov insl mov pop or mov insl mov inc dec lock cmpsb ljmp xchg stc cmp and and gs (bad) incl sahf scas das push out aaa ja jmp es call pop sahf stos repnz mov inc movsb icebp xorb ds mov mov fmuls movsb hlt incl inc add pop and jl inc gs sahf pop (bad) (bad) (bad) call push loopne mov (bad) loope sbb inc jns inc cmp (bad) jp adc cmpsl in jmp mov stos inc nop and or push jmp in negl cmp ljmp jae,pn lret jmp aam lcall push sub cmp stc inc insl cld movsl pop push jne (bad) (bad) lcall jl je pop es pop nop dec sbb mov pushf sbb test sub (bad) xor (bad) (bad) (bad) incl xchg in (bad) fcom xor repnz cli xor ret lods stos jae sti (bad) dec xor (bad) (bad) lcall cmpsb dec (bad) cmp xor push (bad) mov rol sahf fsts sub (bad) (bad) (bad) stc ja sub jns cmp (bad) pop adc in mov pop jnp lea pop stos cli daa test (bad) ljmp test int sub push or inc js fidivl add imul push sti fildll pop sub (bad) (bad) (bad) popf dec aaa mov sub (bad) cld test add mov dec pop (bad) (bad) (bad) pushl mov push ljmp push jmp ljmp xchg add pop cs fdivrp (bad) (bad) (bad) stc je (bad) mov es jne out add push test sub cli gs jmp (bad) (bad) (bad) pushl jl sbb out xor add test (bad) xchg adc (bad) (bad) ljmp push dec lods popf test adc insl mov (bad) mov loop and (bad) (bad) incl lods loop adc dec xchg push bound rorb sub cmp ret int repz (bad) (bad) jmp dec loopne data16 cmpsb bound cmpsb popf leave ds xor loop in imul (bad) mov (bad) (bad) jmp fucom flds cmc test jo sub pop cld pop xchg fidiv cs loope (bad) (bad) (bad) (bad) frstpm(287 sub lds mov movsl or repnz xchg pushf cli pop cmpsl mov mov add popa test pop jnp mov mov scas push je sub jns sbb js pop test mov adc pop mov dec sahf and mov sahf cmp dec mov pop push xor cwtl sbb out das les fisub sti cmp mov mov ds inc add mov xchg (bad) (bad) dec mov adc push pop jae mov sbb ficom push test leave lods cld (bad) (bad) decl jns adc jge int pop (bad) push popa imul cmpsl insb out call sar add jl out mov outsb sub lods and ret (bad) (bad) incl push push and and pop (bad) (bad) (bad) mov (bad) test xchg ja stos xchg repz jecxz xlat jb (bad) aas pop push repz incl adc push pop or xor out jo insl push xchg mov sbb mov dec mov cmp add loop repz inc ret (bad) (bad) (bad) std dec ss and cmc ds arpl outsl dec or enter lret enter ss and jmp sbb mov and pop cld call enter cmpsl adc loop mov sarl (bad) cld (bad) (bad) (bad) (bad) lcall push sub xor mov mov mov dec rcll (bad) jns cmp pop (bad) (bad) (bad) lcall lret lahf in stos test mov push xor jl mov jbe in xchg cmp (bad) (bad) (bad) ljmp fisttp dec call insl into scas repz test and call es push rclb inc jl pop js jo loopne mov into pushf lahf shrl es push scas sbb (bad) (bad) jg stos mov das mov cmp add loopne mov cli (bad) mov movsb popa popa imul xor ds inc (bad) (bad) (bad) call (bad) lcall (bad) cltd xchg add (bad) out or push dec aas (bad) incl pop pop xor inc aam xchg and xor cltd adc outsl (bad) (bad) lcall cmp imul sbb sbb mov (bad) mov mov ljmp ds rorl divl lcall movsb mov bound mov jmp pop dec out test xlat inc hlt repz (bad) pusha ja aam adc pop fcmovnb adc mov rcrb adc xchg fwait mov (bad) jo (bad) push mov stos mov scas in ret (bad) scas cmp dec cltd fisttp dec inc inc sarl (bad) incl jp daa inc imull gs das pop xchg cli testb (bad) push adc fldt (bad) ficomp lret adcb aad aad mov ds mov push frstor loope pop or out (bad) (bad) jmp jmp push das mov das push and add lret inc sbb int cmp adc (bad) dec pop mov stos icebp mov es mov imul push hlt (bad) (bad) incl mov fild jge test mov sahf mov in (bad) (bad) fisttp inc sbb inc adc mov jns inc arpl sar ljmp xchg loopne mov std mov jne dec push lret or push fildl decl sbb repnz test mov push push push pushf stos sub fimull stos loope lcall je (bad) fiadd jmp arpl pushf je cmp mov ds nop adc decl loope cli sahf cmp jle sbb dec xchg adc pop outsb sti pop (bad) (bad) fcomip rorb inc sbb fwait bnd jp jl sbb mov xchg sahf in or pop xchg mov xchg xchg (bad) jo xchg fs decl inc sbb vfnmsub231pd (bad) (bad) jg or jne ret mov adc into pop test imul ja shlb dec xchg or (bad) mull dec xor (bad) jg inc pop jbe dec push cmp inc or mov mov int pop icebp sbb xor mov inc mov in xor adc cs push pushl outsl mov mov loope scas cmc ret inc leave insl sbb (bad) out push test lret bound sub (bad) (bad) inc stos xor jnp and cmp xor push movsb cwtl push add (bad) (bad) lcall ds jg mov xchg and sbb pop mov cmc jge ret xchg add test dec in (bad) imul pop mov aad jmp lods sbbl cltd push icebp sub int3 dec test mov sahf mov dec scas call (bad) lcall rcl lods outsb add lock sbb xchg lds arpl std decl lock mov add add dec hlt push mov loope push (bad) pushl dec or pop mov inc mov cmpsl push push mov dec inc jle or stos inc push into sar pushl out cmp xchg inc insb loope repnz sbb add xor movsl ljmp mov mov dec insb mull xchg push (bad) ljmp cmp push push dec test loop stos jp bound mov xor imul enter pushf lcall dec inc repz jle lahf sbb mov rorb loop push pop sbb incl sahf negb (bad) lock clc subl adc mov jmp pop in daa repz dec inc aaa sbb push inc in cli ljmp pop lock and and and cmp imul cld adc or xor ljmp mov (bad) (bad) (bad) in fnop pop sar mov pop cmp pushf jmp hlt mov iret pop cli mov int3 ss push aam in inc sbb adc fsts push lods ljmp je pop cmc dec mov fadd fstpl rcll outsb mov inc and push mov (bad) call es or inc dec out mov mov cmpl mov lcall fstpl inc ja js xor imul dec sbb int3 mov bound (bad) (bad) (bad) lcall pushf dec movsl adc mov push subl xchg adc aaa test pop mov (bad) (bad) (bad) inc xchg std arpl int xchg mov cmpsl js adc test mov jmp jl,pt cmp mov jb arpl (bad) ljmp insl pop rcr out int3 (bad) xchg inc rorl cltd mov neg (bad) (bad) (bad) jg add ret push dec ljmp xchg rol mov pop pop pusha adc in or inc jb (bad) or sbb lret mov (bad) (bad) incl jle pop idivb aam subps lret outsb cmpsl test cmpsb mov sbb cmc (bad) call sub aas push rclb inc rolb push fcompl push mov lds ds lds (bad) mov cld mov or sahf pop add ds or mov loopne in decl (bad) lcall std cmp icebp inc rolb adc shl pop mov sbbl push fwait xor dec mov adc adc mov arpl out xchg pop cmp mov mov ds fildll dec ja mov jno lds (bad) (bad) jmp lahf and and sub fbld cld adc dec outsl dec adc push scas (bad) (bad) (bad) (bad) ljmp cmp inc dec push rorb sti rolb in jae mov mov (bad) (bad) (bad) pushl nop xor das lock orb (bad) and lea mov ds cmp sbb (bad) (bad) (bad) mov cmpsl fistp movsl jmp je adc in repz xor cmp (bad) jmp test jbe imul mov pop cs jg mov dec fisttpl mov jno cmc push xor lods inc imul decl mov cwtl ficompl bnd jg out insl ret push ds test (bad) jmp pop mov (bad) ds (bad) (bad) fildll push and fisubrl hlt add test ds (bad) (bad) (bad) ljmp mov insl lds sbb sti and pop jae mov and (bad) fcomps cmp inc xor pop dec dec and ret pop lret push sub mov leave xor (bad) divl sbb into jns sbb cld loopne clc ljmp cwtl outsl adc pop cmpsl adc ss repz sub or push dec mov rcrb sbb sbb mov inc scas mov fcomip dec jmp shl sbb fs fidivr mov ret hlt (bad) (bad) pushl sbb std cmp jp or adc xchg mov jp (bad) jnp cwtl xlat cmp scas mov lahf out cmp cmp mov out cs xor outsl cli (bad) jl inc arpl jns fsubs mov fimull mov xchg cltd shrb (bad) (bad) std es mov jne push iret push aas leave sbb inc (bad) (bad) incl push and mov test mov cmpsb mov push jmp rcrb jmp or mov negb mov xchg mov or sub pop cli incl sti clc xchg (bad) and ret enter (bad) (bad) decl mov or adc xchg dec or mov scas stc aas insb cltd ljmp ljmp mov xchg mov push sbb (bad) notl in push push outsl inc daa jg jecxz dec cltd hlt les jb sahf in dec mov jle (bad) (bad) jmp inc out or inc jp push imul fwait pop scas daa jecxz pop aam (bad) (bad) (bad) fcmovnu sbb inc lcall stc and loopne (bad) (bad) stos push adc test pop cmp mov cmc (bad) movsl aas add addb jns (bad) mov stos xor sub (bad) (bad) (bad) mov jg cmc ja pop loop mov mov in repnz (bad) (bad) jmp fild aad mov sahf pop and cmp fidiv imul (bad) incl stos add jbe call aaa popf cwtl xchg jns pop insl mov clc (bad) jmp dec sub inc xchg dec repnz inc hlt inc les mov (bad) jg pop sbb and jb es inc jns (bad) (bad) sbb das and mov or repz xchg (bad) in xor sub lahf dec stc jg fistp in incl pop push addl or outsl add jp clc sbb aam push (bad) (bad) lcall ja ss aaa mov sbb popf psubd mov or scas lds test dec fbld or xor int push or fdivrp push sbb rorb mov cmp into hlt orl loope aaa or xor sahf pushf sub rcrb lea xchg (bad) aas imul jo lret mov push mov add adc stos nop shrl call mov test pop push js pop xlat dec sti mov fistl push in jge pop das pop (bad) mov (bad) jg jb out (bad) (bad) fldl or fsubs js inc xor jmp push inc (bad) cld pop loope xor or (bad) mov cltd cmc lret lods push mov lret loop std (bad) (bad) jg cs repnz pushf iret push sub jns mov popa popf add aas (bad) (bad) call clc add lds pop jp jl insl out pop dec mov iret fcoml iret mov push into cs addr16 adc pop scas mov int3 and repnz mov (bad) (bad) jmp jmp push mov push addb inc sarb ficoml lea (bad) (bad) (bad) (bad) cmp ss jne ret (bad) push int3 fcmovne mov and out insb xchg loope (bad) (bad) (bad) ljmp popa pop adc jp negb jp add lods iret out out sub push fisubr fs sub dec cld sahf (bad) (bad) incl xchg cltd mov leave pop cmp andl iret sub decl ja (bad) (bad) jl xchg pop mov push mov xlat pusha ds js cmpsb (bad) (bad) call jns idivl arpl ret inc test arpl cltd jb mov stos dec jmp imul xchg pushf lock (bad) ljmp mov inc dec in xor into push sbb mov (bad) (bad) ljmp fistpl sub inc rcrl xor dec enter icebp inc ficom (bad) (bad) jmp jnp pop (bad) bound xor pop fist pop ss in insb lahf (bad) xchg movsb push jle jl repz test lods (bad) (bad) (bad) decl lea push das push pop xchg lret fmulp xor xlat imul sub inc mov or (bad) incl push jge xor rclb jmp aam adc add (bad) jg mov mov adc lods push imulb dec je lahf or ret (bad) mov sub das rorl out mov ret cmp fwait inc inc dec (bad) in (bad) pushl mov movsl movsl pop dec stos xchg into jno cltd lock pop lcall pop pop pushl test xchg (bad) sub decl cmc pushf and bound adc (bad) (bad) (bad) incl lods or and leave repnz adc ret nop fcmovnbe xchg mov out add jo lock testl add inc jmp mov xor clc mov mov fcomip out sti int3 fidivrl aaa out fcomps fisub mov neg jmp pushl jnp stos ficomp inc cmp or fucomi addr16 sbb (bad) (bad) (bad) inc xchg mov outsb frstor clc daa movsl inc cltd mov sbb mov lahf pop xchg mov imul adc fucomp jmp aaa insl es push aam test fucomip lock (bad) (bad) call js int mov in in xchg push xor jns sbb push pop repz (bad) ljmp jb outsl cli imul mov jne add push or test sar push cmp (bad) lcall (bad) (bad) decl sbb int3 fcomps mov je movsl lds pop xor (bad) ljmp ret mov (bad) leave xor daa mov xchg lea dec jmp jmp das push scas sbb xchg in mov out sbb mov push decl fidivr fcompl (bad) inc dec jb jno jg xor sti (bad) sbb inc sub lahf pop (bad) insl mov pop bound or loope (bad) lcall ds sub pop pushf ficom fwait push mov decl dec int3 dec cwtl (bad) (bad) (bad) incl fnop outsl in or sub jl pop fadd leave mov rcrb adc (bad) (bad) (bad) decl addr16 movsb cld push mov lds sbb sti lret mov pusha test and (bad) (bad) call (bad) nop cltd lds adcb sub mov cmp xchg dec add aaa (bad) (bad) (bad) incl (bad) je loope fwait movsl jnp mov fs ret sbb jae mov (bad) (bad) (bad) incl pushf divb mov mov mov mov sbb in loope in cli inc xchg (bad) jle pusha std (bad) sub sti xor out push push and sarl mov mov add call (bad) (bad) (bad) jg jmp xor nop les imul sub rcrb inc aas dec xchg je inc cmpsb adc inc xchg or sti pop lcall lcall faddl adc sub inc and mov dec inc dec mov test and jb xchg mov rclb out mov lcall mov mov mov cs es mov rcrl adc cld test mov (bad) xor nop test shrb test push (bad) (bad) lcall push lcall int3 push add and cmc inc jg push mov jmp rcl mov or loop ds cmpsl call pop (bad) sbb mov mov add sbb pop adc and mov cmpsl inc lods test (bad) (bad) ljmp mov leave mov sub mov arpl pusha scas inc data16 pop and cmp sbb mov mov xor pop imull cmc fcos (bad) (bad) call ret cmp adc (bad) js mov add call lahf mov cli xchg jmp popf dec push cli adc lahf das shlb clc fcos pop cmp popa mov jmp xchg jmp inc aam (bad) mov sub fstps mov (bad) pushl pop push icebp xchg sahf push push jne pop ss lea mov lahf jg fcoms adc scas inc push push xlat pop sub inc mov cmp cmpsb pushl lss mov call outsb inc push xchg out (bad) push decl mov mov jmp jnp push cwtl cmp xor outsl mov and ds (bad) jne push arpl (bad) (bad) (bad) ljmp iret js dec cmp fwait add ljmp fsubs dec ds inc std (bad) (bad) call mov mov ss sbb (bad) js dec or inc jae lcall or lods or mov (bad) fld shll test xor jmp aad loope sub inc dec add (bad) pushl or fstp rcl cld sub jge sbb mov adcl jb mov pusha xor addr16 subb movq mov push jne,pt test stos outsb add (bad) dec popa or test clc (bad) jg xor add jns orl addb cwtl xchg dec fisubl (bad) (bad) incl xchg inc jnp fwait std sub mov cs jp sub pop test push das jmp dec dec cmp gs (bad) (bad) lcall adc dec jne sahf aas cmp jge jmp mov cmp lock in mov (bad) jg cli xlat shrb xchg inc cmpsb imul add push cmovb mov inc sbb jno jmp aad cmp mov icebp mov mov jb xchg call pop sahf in pop insb or (bad) (bad) incl jg cld lods inc inc loopne icebp or pushf adc fldt test (bad) (bad) incl and in cmp insl pop negl xchg add cmc lcall mov pop data16 xchg dec call test cmp (bad) ljmp jge jmp pop sbb insl out (bad) xchg rorl mov jbe or (bad) (bad) in push or adc jno push xchg xchg icebp mov or (bad) fisub and pop pop jl nop push pop add xor call pushl (bad) test movsb or jno xor xor or fwait or cmc (bad) (bad) call jno fisubrl aaa pop call sti ret outsl repz fwait sub std lcall xchg imul cmp aas jg popf jp mov inc cld incl fdivl into xchg dec pop nop gs and aad cmp mulps mov or lahf (bad) jecxz incl out lods cmp or pop jb je das clc push ss (bad) mov aaa mov jmp lret jle iret icebp (bad) (bad) (bad) (bad) cmp fmull jns push cmovne xchg adc (bad) insb mov push pop out mov (bad) pop (bad) adc aaa std lcall cltd fdiv (bad) mov imul jns clc adc xor in popf jmp (bad) pushl lret xchg repz or into inc outsb cmp imul dec ds pop xchg (bad) (bad) (bad) out push push or stc push in cli adc out pop aam jno mov sar (bad) (bad) push sub outsl shr aas (bad) cltd jb or xlat dec inc push popa int3 mov (bad) (bad) (bad) lcall int3 imulb fwait jb int3 (bad) and or in enter aad xchg mov pushf (bad) (bad) (bad) inc push daa stos out jecxz jo cli sbb bound data16 xchg test ret nop mov (bad) inc lods scas daa cmp xchg lret fwait out sbb stos adc ds aaa push repnz cmpsl cmp (bad) (bad) (bad) (bad) fstpt xchg lds sbb jmp inc xchg and clc ret mov add and movsb mov outsb stos cltd push (bad) (bad) mov adc sbb loope or mov test (bad) pushl mov daa test mov loopne les pop vunpcklps xchg cmp jle xchg push jl repnz adc sub (bad) ljmp xor mov data16 mov jns mov pop push or lret and cli ficom jne shl pop clc or push enter loopne xchg mov mov push lds andl add clc pop ljmp push sub call push testl outsl sbb stos js lods push (bad) out cli decl iret adc mul and lods adc jo mov mov or decl dec int3 jmp inc stc cmp mov inc gs mov jmp sbb test ljmp mov dec cmp mov test push mov push daa dec (bad) (bad) (bad) incl push cltd mov xchg dec lock test cmp add and (bad) dec cmpsb subl dec or inc cli in mov jl subb (bad) (bad) (bad) call push cld add fdivs mov and icebp repnz sbb push stos push (bad) (bad) (bad) std inc sub or push push outsb inc mov inc lea in xor or leave cs inc inc jp ret sub jmp aaa lahf repnz xchg sub fiaddl (bad) (bad) ljmp push ret rorl ficoml dec push inc jle inc cld jge mov adc stos jmp sub std pop js mov xlat icebp add incl fist loop leave (bad) or fldenv dec stos ficom xchg insl cmp adc inc xor (bad) (bad) (bad) ljmp dec jo (bad) cmpsl xchg in hlt dec notb aam sbb jne mov and (bad) (bad) (bad) (bad) cmp inc insb jg and fnop add inc push ss les and mov mov pop daa sahf lds xor clc (bad) (bad) incl movsb mov adc push idivl (bad) (bad) xchg insb or xchg mov out sarb pop ret int test add lcall lods dec push ficoml jmp inc cs push xchg movsb add xor rcr out fmuls jecxz sahf hlt fsub mov movsb xor fcompl sub sbb popf mov call pop addb pop popl mov push adc les (bad) push and repnz adc decl lock fsubrl subl or cwtl ja or mov out cli dec fidivl xor in inc add (bad) ljmp xchg mov xor mov jg mov xor das cli pop and fs add aad cmp (bad) mov pusha mov pop nop xchg test jp,pn mov ds std ret pop mov scas jmp stos decl inc pop dec outsl cmpsb mov inc and jmp jmp in dec loopne xor pop inc sbb ja jge scas fiaddl bound push in loop dec mov pop add (bad) (bad) ljmp xchg jne mov xchg xchg roll stc push (bad) int cmp pop cmpl pop dec mov lock aaa pop stos sti in popa jp (bad) (bad) jg daa xchg ret jp mov xor sbb pusha es xor dec imul pop adc decl xlat push adc je pop (bad) lret nop cld std mov sbb lcall incl call inc jbe ds fidivl xchg fcompl cli mov les xchg cld push cmp jp ret shr decl ljmp fisttpll aam sub cld (bad) (bad) call aad mov cmp aad loop (bad) xor mov pop enter or xlat mov (bad) out test sbb add fistp lods jp insl (bad) (bad) (bad) lcall jb lods cmp push sbb mov call xchg sub mov cmpb mov (bad) (bad) decl repnz mov pop inc sbb enter add xor fstps mov or in lret or mov out add adc sub (bad) (bad) (bad) (bad) ljmp cmpsb pop movsb jg fsubr js data16 aaa or push nop dec inc mov sub sbb scas nop lods lds clc inc (bad) (bad) fcomip or cmpsl dec inc push add out fwait push out sahf adc (bad) decl fsubrl push std mov add adc and jle (bad) and adc pushl nop repz push (bad) (bad) (bad) call jp test or dec mov popf mov ljmp add cmp (bad) pushl sbb xchg mov or pop in dec ss or push fistpll test (bad) pushl iret in hlt inc scas adc (bad) movsb ja outsl leave ja add pushf xchg mov (bad) (bad) out (bad) ds cmc dec sbb outsl push ds or les fwait (bad) jle incl jecxz mov mov xchg dec pop jle xor push ljmp cli incl inc and repnz in lea dec jge jo out jb call mov sub decl data16 test rcrb enter sub or lcall sbb lock and xchg add test push dec mov pushl push xchg cmp sahf mov sub adc mov aaa mov pop jg (bad) ljmp push fcomp cmp sbb popl inc les adc in test pop sbb int add pop pop popf (bad) (bad) (bad) jmp sti sub jle adc push ret dec iret sbb sbb pop push sbb (bad) (bad) decl adc sub jae es jb push sbb cltd xchg (bad) adcl ds (bad) (bad) (bad) jmp xchg and in mov pop mov testl mov pop mov inc call adc cmp js (bad) (bad) (bad) incl iret add mov add pop mov fldcw add jge jb push sbb (bad) (bad) (bad) aas dec out adc inc insl push xchg inc inc lods sbb mov mov mov xor (bad) (bad) ljmp lea dec gs xchg out addr16 aam dec sub and sub (bad) (bad) dec jae in out stc aas (bad) movl or mov and jnp add inc (bad) mov and decl ss (bad) std mov (bad) xlat test stos lock mull xchg decl mov cmp hlt stos push xlat sub inc sbb (bad) (bad) call loope les (bad) nop (bad) xor cmp repnz cmpsb cs (bad) fcomip pushl pop pop jb sub (bad) or or cmc mov loope jl and shll cmp xor inc mov clc (bad) call mov das lds xlat fcmovnbe add cmp scas jecxz xchg add pop stos or aas bound and mov (bad) ljmp int jne pop pop imulb pop mov mov insl xchg adc jnp cmp aas adc incl xchg hlt les dec (bad) ljmp clc out jbe pop xor imul dec shrb mov int3 lods and int3 pop mov ja fmuls push aad sbb jge add mov aad jae loopne pushl scas mov xchg ljmpw insb insb cli jns or push (bad) (bad) (bad) jmp out imul dec (bad) jnp cmp mov mov test insb cwtl add (bad) (bad) std add loope test dec mov je (bad) sti jb sub (bad) (bad) mov insb fidivrl dec imul into cld push sub pop jns jg (bad) decl xchg roll (bad) mov inc push and jmp leave add inc jne push push aaa mov sahf mov ja (bad) (bad) call sbb ret jle jnp cmp inc iret scas imul mov cli (bad) (bad) jg cmp ljmp sbb popa movsb add inc mov dec cmp out in jmp and add hlt lcall sub jno (bad) stc ss pushl imul ficoml shrl add fldenv cld je dec mov lods sbb call (bad) xor sub ficompl rcrl ficom and (bad) test pop scas (bad) (bad) (bad) (bad) incl dec and dec movsl pop mov mov outsb test lea xchg push mov ljmp pushf daa sub ja mov mov repnz push mov rcll (bad) mov stc out and push lock sub shll cmp (bad) jmp (bad) (bad) leave sbb cli outsb cli xchg mov in mov inc or jg jno and xchg lret in sbb lret (bad) (bad) (bad) (bad) addr16 pop inc sbb cmpsb pop pop clc mov push adc pop cmp sub (bad) (bad) mov jb cmc jg mov xchg les jbe ret xchg sub (bad) jmp or and data16 xchg sbb inc mov jmp inc popf push dec cld (bad) incl cmp stc scas ja dec movsb hlt cmp (bad) outsb jge (bad) (bad) (bad) jg gs xor cmpsl pop sarb cmp mov enter sbb gs (bad) (bad) decl pop mov mov (bad) mov adc aas jmp lret fsubs (bad) (bad) (bad) call les idivl dec jb mov dec enter dec add ffree mov (bad) (bad) (bad) fildl insl es cmpsb clc jb pop mov out xchg cmpsl mov ja or and decl mov imul push sbb cmp add andl (bad) (bad) fcomip add popa aam sbb push sub mov into pop dec jae mov pop pushl lret sbb gs mov loop pop mov mov and (bad) (bad) lcall ja sahf mov inc inc test fcomps lods cmp hlt fstp movsl sub (bad) (bad) jg ljmp jecxz cld out xchg pop sbb jo addr16 xorb clc jmp xor mov fild (bad) (bad) (bad) lcall daa sbb cmpsb mov mov jo test les mov xor jmp insb repnz loop repnz into sub outsl and ljmp popa insb stos stos arpl divb jp loop aad je dec and insl test (bad) call (bad) les ret adc lods cmp in mov jo sub les decl ret call inc mov cmp ljmp lds out and push idiv mov xchg xchg push lcall jg (bad) (bad) mov cmp inc xchg outsl push imul jle dec pop (bad) (bad) (bad) pushl xlat sbb push cmp cltd pop dec jge cltd pushl lods xor xor stc adc add lock (bad) (bad) jmp mov mov into sub rorl lods cmpsl pop das or xor ja (bad) (bad) (bad) push icebp out cmp lods adc aad push xchg or out jl arpl and (bad) call rorb xor and cmp mov (bad) lcall push jne ret pop je into pop rorb (bad) or xchg jl mov shr ds push (bad) ficomp sbb pop inc xchg (bad) jg sahf pop mov mov sub out nop adc add (bad) push xchg mov jb adc pop aaa int (bad) xchg or mov incb jmp push inc repnz fs ficompl xor sbb ja imul lcall idivl decl (bad) iret aam (bad) cltd js outsb jbe pop repz sbb (bad) fsubs xchg and enter jge outsl jae into std mov ss out mov mov jmp and (bad) (bad) inc mov cs sahf pop loope in xchg je inc (bad) es (bad) (bad) decl mov pop mov dec cmpsb xlat xchg jmp jge hlt ljmp mov sar (bad) (bad) (bad) (bad) cmp ds lahf outsb out cwtl dec mov push pop sahf (bad) into push mov cld loopne xor (bad) (bad) (bad) call cmc xor shr mov pop fwait enter inc jecxz xchg add popf (bad) (bad) (bad) jmp push inc nop dec in je fbstp push jl pushf imul ja jecxz movsb pusha and (bad) pushl shll xchg pop movsb in or sar (bad) mov fwait push jmp mov fisub sub cmp push (bad) (bad) cmp repnz ss inc sti mov lea cli add out pop lods mov js pop int (bad) (bad) incl bound out test pop imul outsb lcall mov int cmpsb repnz lock in inc test lods mov mov xor (bad) mov inc pop (bad) mov cmp (bad) (bad) (bad) (bad) jle mov lahf ror push out bound add lret cmp mov (bad) (bad) (bad) incl popa sarb shll loope jg adc cli xchg ret test push add lcall cmp popa stos in mov pop fldt (bad) jmp sahf xchg or nop test pop xor dec jle jmp mov sbb dec (bad) hlt out sub test xchg sbb pop dec inc sub mov (bad) (bad) call fcoms and jno aas ret pop ret adc (bad) mov loope outsb fstpl test xor outsb in mov test push pop mov jl ss and (bad) ljmp add scas pop fmul rolb pop fisub sbb incl arpl or aam and xchg xchg dec (bad) decl sub xchg lret clc mov cli adc lret rclb cmp xchg push dec pop into repz sbb dec push xor inc adc mov pop jne (bad) clc out xchg adc cmp dec (bad) (bad) ljmp sbb rorl add xor dec imul out (bad) ljmp mov lcall or sub xor xor subl and outsb mov lcall and out add dec xchg sub xchg or inc rorb incl cltd cmpsb or addr16 fsubrs rclb or or pop (bad) inc (bad) mov mov mov sub add imul sti pop sbb add (bad) (bad) (bad) jmp push lea lcall lock or les xchg jge mov (bad) (bad) (bad) (bad) ljmp fxch cmp pop (bad) pop mov in addr16 (bad) fsts ret mov inc sahf add mov lret add sub rcl inc xor div and fdivl (bad) (bad) pushl add data16 xchg hlt leave fdivs push dec iret leave dec scas inc data16 icebp jg lock inc bound into mov (bad) lcall lahf ret mov sbb shlb xchg mov xor dec adc test push icebp xor fdivrs inc jmp (bad) (bad) (bad) incl sub push popf inc mov pop jo dec sbb or test pop xor lret inc inc (bad) (bad) (bad) pushl mov mov ss push jge lret adc mov inc xchg sub cld (bad) (bad) call push cli push xor bound cmp stos mov jno xchg add push rcrl movsl data16 mov loop daa fwait dec dec mov lcall or mov mov inc dec addl incl cld shrb (bad) sbb popa lea stos sbb xchg jecxz fwait or (bad) fisub insl (bad) ljmp (bad) fnstcw je (bad) pop inc push fstps sbb jns lea pusha mov mov push jg ljmp (bad) (bad) cmc (bad) mov (bad) fucomi sub test xchg cs (bad) (bad) lcall cmp cmp dec push add push cmp mov (bad) jl out sub inc dec xlat fcomip mov dec outsl and jnp insl fmuls push cmp inc in sbb out cli and data16 rcr subb vpcomw push imul out jl inc scas imull sub incb sar dec fdivp outsl test mov sbb es pop (bad) (bad) (bad) (bad) jmp lods push lock mov movsb xchg adc jp mov insl ret dec mov (bad) (bad) (bad) (bad) jmp xlat or hlt sbb je sub pop stos pop mov mov lods sbb push ds (bad) lcall mov test inc mov adc jp mov rep mulb inc sahf sbb xchg aad out imul jmp or push and pop dec les adc mov ds cmp cltd ret aas xor inc sahf and push push imul idivb out pop imul and pop mov cmp xor pop out adc pop js cvttps2pi ds ret js dec adc mov out adc in (bad) (bad) ljmp jb dec imul xchg inc jno xchg xchg iret mov fdivr test (bad) fist repz mov mov mov push (bad) call inc sbb inc lret hlt pop (bad) push mov stos imul mov inc addr16 and mov xchg jp (bad) (bad) (bad) jg jno incb in test insl cmpsb bswap xor in mov scas mov gs and decl sbb cmp fcomip call les ret jmp xchg aam int3 add pusha mov inc mov jg (bad) jmp lock jle out mov inc xor (bad) decl je xlat jbe or mov rorb ror in pop rcr icebp (bad) jmp dec dec ds js imul jmp push mov pop (bad) (bad) jg mov ss xchg inc in std pop test stos cld or insb fs lock add sub push mov incl or (bad) cmc inc sbb dec ret jg loopne adc push mov (bad) fcomip and jle je sbb xor add xor xchg imul hlt (bad) call out cmc lahf adc out mov mov bound ficoml (bad) decl movsl aas inc in cmp mov aad mov (bad) decl xor mov and nop scas and std (bad) (bad) jmp cmpsl xchg jle mov cmp dec test pop mov inc adc loop add xor push or push mov inc rolb push jno lret fs mov (bad) (bad) (bad) mov enter add sbb fwait test or pop mov and (bad) (bad) inc sbb roll rorb push xor or (bad) repnz pop mov addr16 lcall inc pop sbb fwait push ja (bad) lock adc fdivrs inc sar dec push (bad) (bad) call fidivl insl and push imul fwait out mov inc stos xchg adc (bad) (bad) (bad) fcoms daa push arpl xchg (bad) xchg xchg cmc in xchg addr16 push add pusha jmp fcomip (bad) lcall cmp clc and jmp fsubrp jecxz dec and xchg pop pop pop push std decl (bad) push test sbb test jne sbb decl (bad) lock mov xor lods loopne imul inc aaa cmp (bad) out call scas xchg in add test and notl fidivrl (bad) cli test cld (bad) fisubrl sub xor int xchg cli pop hlt test (bad) ljmp cli cmpsl decb lods cmpsl cmp int int test add test push and push cmp orl das or xor fcomip cmp pop cld out fbld mov mov mov sahf cmc call imul xor mov lret shrb sahf cmp mov (bad) mov dec std add mov out sub (bad) (bad) decl insl lods mov pop insb push push jno rcr jecxz cmp (bad) lahf int leave xor (bad) decl lds push mov pop (bad) (bad) (bad) decl fs mov roll and lds fildl sbb pop pop xchg fdivr (bad) (bad) (bad) call (bad) inc ss dec mov stos cmp dec mov and (bad) ljmp rorb out jg and add leave mov iret pusha lock pusha bound (bad) mov xchg inc xlat (bad) (bad) pushl jecxz xorl in fmuls scas mov and add ret jns push aam divb jb vpmaxub jne adc add push ds inc push rol (bad) (bad) (bad) push lret xor decb ficoml pop fistpl hlt pop aaa xor push mov movsb daa sbb ljmp hlt mov lods divl sub mov xor jmp (bad) jg mov mov sti inc push mov loop or out and dec or pop (bad) mov pop (bad) das fidivr test mov cmc jb fbld das mov cmpsl xor out (bad) decl dec loopne mov loop add arpl xor xor adcl sahf roll cld sbb jge inc mov mov xchg mov inc jl xor push cld (bad) incl xor cli push in push add cmp (bad) fnstsw mov jg pop nop jl dec cmp xchg or and push sub cli push inc (bad) (bad) (bad) (bad) in orps fucomip inc clc icebp adcb sub loop hlt bound fistpll (bad) (bad) (bad) (bad) (bad) cmp setb popf cs xchg addr16 mov (bad) shrl ljmp or (bad) incl mov xchg inc xchg rclb mov or push popf jle (bad) jg sahf stos adc cmp jo syscall xchg adc shrb enter ljmp shl mov jmp mov and push aas into out mov cld pop inc push mov mov jno xorb test ljmp out (bad) xor (bad) (bad) jmp fistpl in mov outsl out mov cmp hlt pop and push adc hlt cmc push rolb (bad) jmp dec fidiv xchg sbb xchg mov test xchg dec push into ja mov and or push rorl in adc (bad) jmp hlt push out inc adc mov mov fstpt pop push (bad) (bad) (bad) fildll jnp bound mov mov pop cmp ds nop ret pop xchg jno movsl loope inc cmpsb adc pop loopne inc jmp decl int inc enter outsl mov clc in daa (bad) (bad) (bad) fistpll mov lds inc repz mov jg and not arpl push sub jnp fbld add mov inc jb ss inc lret (bad) inc pop jg icebp and lea aas cmp sub mov xchg sbb dec lock pop push aam xchg dec imul in mov (bad) (bad) jmp pop movsb sbb in pop inc arpl mov orl arpl call dec push jae inc xor loope pop loopne add pop fnop cld pop push fwait jmp testb pop xor fimul (bad) (bad) (bad) call ss iret xor ds ljmp (bad) into insb fstpl arpl sub (bad) call pop in test aad jp in push jl mov bound mov pushl or jo aam out mov inc cmpsb sahf pop xor dec inc mov mov or adc test les sbb inc (bad) fidiv decl enter add inc scas push and test and js inc dec je lods (bad) (bad) (bad) lcall mov sbb cmp lods mov push sahf dec in (bad) imul (bad) (bad) mov dec jne scas adc outsb sbbl ss push mov mov (bad) decl xor sub dec jge loopne mov das out mov mov movb sahf iret sbb mov add dec xchg sbb jno mov pop inc mov pop imul dec xchg xchg push mov jnp or call std push xlat sub idiv push xor push pushf jle daa fs (bad) dec lret and pop mov pop inc pop sub add dec dec or rcll jno (bad) (bad) sbb dec cmp push jle fcmovnb scas pop ret lods pop cmp scas xchg mov incl popf fnstcw (bad) fmuls pop (bad) mov pop shrb inc incl sub dec sub in out mov cmpsl rol hlt pushf frstor dec inc sbb pop lock sahf lock notl pop xchg push daa outsl repnz sbb sbb sar (bad) (bad) lcall gs int subl xchg cmp hlt jmp vpmadcsswd mov cmpsb (bad) fisttp (bad) mov adc (bad) cmp (bad) (bad) (bad) incl data16 push dec pop mov pop or jae jbe add aas cs (bad) pushl cltd dec imul imul and je push cltd xchg and jl cli mov les in (bad) fstpl mov push mov push ja sahf cmpsb xor data16 (bad) (bad) lcall (bad) cld hlt gs and mov mov out push mov popf cmp jp (bad) (bad) (bad) call rolb xchg push lock gs in adc adc rolb and push out cli (bad) (bad) mov imul or setbe dec aad push inc jnp scas (bad) in (bad) (bad) (bad) pushl xchg inc mov xchg dec sbb inc (bad) test mov adcb aaa mov mov cltd push pop pop aas lods add into shll cmp (bad) (bad) (bad) (bad) cmp test pop add dec jmp gs inc cli push jmp push test clc pop pop (bad) (bad) (bad) call outsl sub or (bad) lcall nop icebp subb flds cld mulb mov test or adcl in les mov add push sbb push push or cmc stos cmpsl mov mov (bad) (bad) pushl sub nop into rolb outsl and in jecxz adc enter push or std push adc or jne movsl cmpsb (bad) (bad) (bad) (bad) fistpll sub loope call (bad) mov sahf les sbb pusha idivl out inc dec jnp mov ret mov xchg and leave ljmp ss pop (bad) decl out aad ja xor jp movsl in es add cmp push jae xorb inc pop jne out fdiv bound xchg fnop iret push pop ja (bad) ljmp insl jno (bad) test dec cmp sbb dec sub xor aaa std jmp mov (bad) mov aad sbb into mov aad xor test pushl add and pop test stos ja push xchg sub mov inc mov xor ds add fdivl call cld push inc jne mov mov sbb bound aad addr16 fptan or incl popa mov sub lret adc cwtl ror rsqrtps out push sub (bad) incl sarb cmp mov cmpsb sbb idiv ficom outsl inc (bad) aas and inc hlt cmp in xchg inc push adc pop sub ja mov ret mov sarb fistpl scas add (bad) (bad) pushl fnstcw je mov in jmp ljmp xor sarb sbb clc (bad) (bad) call mov fucomi mov lcall xor adc loopne decl mov xchg jno cmpsl mov outsb and decl lock test fadds add pop cmp mov dec jae or sar (bad) (bad) ljmp aaa dec inc cmp mov push add fxch mov rclb mov std push cld outsb mov aad inc jl add (bad) (bad) decl nop jnp lock pusha jbe dec out out inc mov push icebp cmovg add push jbe enter aam xchg mov (bad) movsb mov mov cmp (bad) (bad) (bad) mov cmc scas movsl dec repnz xor stos xchg stos in cmpsl andpd sub nop xor iret (bad) (bad) (bad) lcall stc test lods mov ret sahf pop negl adc lods popa fistpl or dec (bad) jmp push pop xchg cmpsb (bad) dec adcb push fnstenv test insb mov xor cs imul cmp mov movsb (bad) stc sub lcall mov add (bad) (bad) (bad) jmp cli outsw push rclb idivb push pop outsb pop iret and pop (bad) (bad) (bad) decl cmp or scas fsubr mov bound mov sub bound lcall (bad) ljmp mov push mov or mov mov dec rcl adc inc pop jp mov push fiaddl icebp jb xchg ja,pt clc mov ss lahf jp cmp xor cld (bad) (bad) mov jmp std xchg jmp lcall pop lret repnz pushf repz inc repnz mov cmc (bad) loopne adc cld test (bad) (bad) (bad) (bad) mov ficom adc cmp mov imul rcl test (bad) lcall add or fisubl out (bad) mov sbb (bad) (bad) (bad) jg popf popf jne mov cmp push xchg inc nop pop out je add dec pushf daa push (bad) and (bad) push jae pop fisttp cmp cmp hlt jne test sti add out aam jne (bad) dec push (bad) inc push adcb lret mov shlb jno dec icebp cli cmc repz insl xchg insb imul test mov cmp or add sub sbb mov adc sub clc pushl ljmp insl loopne mov pop popf or adc or cmp adc mov insb push cmpl mov lcall aam xor (bad) (bad) (bad) fiadd leave rol inc outsl (bad) bound adc and lret rcr or adc jo push cmp adc mov pop lods shrl loope ljmp clc mov jl inc xor stos pop dec jecxz repnz jge out pop lcall sub xorb rorl add insb xchg loop fild lods cli xor mov test mov (bad) (bad) (bad) fbstp loopne ds and add outsb insl mov pop rorb (bad) (bad) (bad) jg aaa stos cmp push pop hlt bnd test rcrl adc popa js,pn add sahf jmp out (bad) (bad) decl outsb sbb or xchg pop and mov jl jnp lods xor (bad) (bad) decl scas out add add stos in xlat lock mov dec push ljmp js (bad) (bad) (bad) ljmp or mov cmpsw and js or aas mov adc (bad) (bad) (bad) jmp jmp mov push roll mov lock jecxz insl frstor das pop addl incl and jecxz sbb cmpsb (bad) enter xchg add sbb cld sar (bad) (bad) cmp inc loope and test or jl cltd insl out xchg cli (bad) ljmp push sbb aad mov xchg pop xchg jmp outsl push push sti push nop mov fs fwait (bad) test ljmp mov adc test and mov and scas add jb stc (bad) mull mov ljmp lods push decb push fldt pusha sub ret add shlb add mov (bad) (bad) (bad) cmp fs mov cmp ret or fwait sub mov cmpsb insl inc ljmp imull add bound out jo jecxz jecxz (bad) xchg dec std bound or ds (bad) (bad) jg outsl loop out cli lock push mull cmp shll std data16 out fs (bad) (bad) (bad) call adc (bad) imul cmp xchg xlat or jmp inc sbb push stos imul mov xchg popa mov jmp (bad) jmp repnz (bad) prefetchnta cs fstps ds loope add (bad) fsubrs and incl sbb pop inc add add (bad) jg movsb sub and out fs sub lds (bad) ljmp lds adc rorw (bad) ljmp movl jg mov mov pushf dec xchg call cmp call in or jns sub xor inc jns mov adcl mov outsb testb outsl adc pop add inc jns sub sub jg adc push sti and cld jg (bad) (bad) pushl mov imul in nop test pop inc mov arpl test decl aas jl or or (bad) rol pop sub lds or inc cmpsb mov call push mov jg int mov shl pop dec repnz sub pop loopne mov insl icebp ficomp in jnp and jp dec insl (bad) cmp dec push jmp fdivrl jns jb mov (bad) (bad) lcall pop pop mov jmp stos addr16 or not insb mov mov push sbb (bad) fidivl push icebp insl mov es jnp aas popf movsl push push lret add mov incl imul subl movsb mov pop ret cli cmpsl sti test sbb pop call or imul jns xor and xor ja or insl cs mov pushf (bad) cmc (bad) (bad) (bad) decl idiv iret fstpt inc aas push xchg cmp (bad) bound enter pmuludq data16 popa stos mov incl xchg clc addr16 in std push stos lret mov negb jmp cld lods adc (bad) (bad) push ret xor popf js mov rcrl mov mov cmp fsts (bad) (bad) (bad) fsubs mov (bad) inc jne pop bound inc mov lahf insb popf (bad) incl adc push cmp movsl xor popa cmc fnstcw xchg push dec adc das lcall mov fwait js or insb stos cli sbb (bad) jmp or sahf inc cwtl adc adc sub iret test push pop inc cld decl cmpsl clc dec out (bad) mov (bad) push or mov mov add pop push xor push mov in lret std icebp test lods (bad) xchg shl and jns (bad) (bad) (bad) fistp mov inc push jge dec fmuls es xor iret or ret (bad) push jge push xchg gs push sti (bad) fsubrl pop jae jl int3 xor cmpsl out fcmove jmp nop les xlat pop insl jg sbb (bad) mov clc inc dec and stos push xchg aas popa pop sub repz xchg out mov sub jg addb imul jge pop decl dec sub adc iret adc (bad) out andb cwtl ret int3 mov call or call lahf inc jns (bad) loope jno push push and scas rolb icebp and sub (bad) jg lods mov in cmp fildl or (bad) ljmp mov mov dec pop repz pop sar cmc lods ja enter adc ret mov inc andl int3 rol pop lods fs add and imul push int3 and xchg andl decl mov es subl sub mov pop lock sbb mov roll aam pop sahf rcrb incl mov movsl mulb popf into jno add hlt (bad) (bad) call or and test std (bad) scas loop stos mov and testl xor outsl push pop mov adc loope xor dec arpl sub (bad) inc es ja arpl add adc popa out (bad) in out jo enter in cld incl pop or lods xor nop popf cwtl xor jnp call mov pushl sbb (bad) cmp loop inc sub sbb std ljmp mov sub sub lret xor (bad) (bad) call adc cwtl add insb idiv repz inc xchg stos add mov ljmp clc (bad) mov mov das hlt dec call add cmp sub mov (bad) sub adc (bad) mov pop jae jne or sub test adc ljmp push inc inc movsb dec xor inc jb lahf js mov or stos aaa cld mov mov ljmp adc lods pop repz decl push fsubs adc xchg xor (bad) mov mov loopne data16 inc jae add (bad) lcall (bad) sub call test or fs (bad) das repnz pushf (bad) xchg xor lret sbb (bad) lds je push push aad and jecxz mov push (bad) (bad) (bad) inc xor icebp shrb mov xor dec into call mov stc mov mov fdivp (bad) decl inc sbb sub cli mov jle fs inc and or cltd movsl movsb lock jbe pop adc jecxz ficomp jmp (bad) (bad) fdivrs add lock push push lock adc int3 js (bad) mov fldenv (bad) leave cwtl movsb (bad) adc push inc pop hlt or xchg dec inc jp (bad) (bad) (bad) decl shrb ja divb gs push mov addr16 repz jl xchg clc and (bad) icebp (bad) (bad) mov pop lret ficom in enter mov pusha lcall (bad) call push push mov fisttpll xchg mov aam (bad) mov and lds xchg mov stos inc jb les lcall jecxz (bad) jmp jecxz int3 sub pop sub lea and cmp (bad) (bad) (bad) jmp jbe imul xor sbb push ror divb or stc jge (bad) (bad) jmp or or sbb push jo cs fsubrs hlt adc test inc ds sub push push mov push or repz fsubrl mov outsl add aaa dec xor inc adc dec mov (bad) (bad) pushl jg mov xor out xor add (bad) loopne inc pop in (bad) (bad) pushl mov adc and adc adc aad stos test lock and (bad) cmc sar outsb leave dec add mov fxch jg test or mov add nop (bad) (bad) (bad) (bad) jmp test add inc push pop xchg lcall inc push push xchg test sti pop (bad) (bad) (bad) decl mov pop mov fidiv or xchg mov xor (bad) lcall sub mov stos std mov fwait jne cmpsl cmp inc xchg outsb mov jg (bad) out (bad) mov jbe mov in adc icebp aaa dec mov dec or (bad) (bad) call or ss xlat cmp and mov mov inc inc (bad) (bad) jg inc and jno ljmpw jb add and xchg add cmp (bad) (bad) decl movsl sbb cmp push pop movsb jo push or sub aaa cld (bad) xchg pop jecxz js fdivrl sbb clc mov push out or xlat inc lods mov xchg mull popf cmpsb and cwtl ficoml test mov or gs loopne test (bad) (bad) decl insl fsubrs clc xor xor stc mov mov cmpsl xlat xor int adc inc addr16 test mov (bad) (bad) push je pop dec lahf inc hlt mov push in jle mov xchg data16 pop ret aaa mov mov mov movsb negb pop push add sub into test call (bad) ds (bad) (bad) jg (bad) inc dec lret inc (bad) jae out loopne mov push xor sbb mov sbb arpl les jne out xor fs out adc adc xchg fdivs (bad) pop cld (bad) (bad) jmp cmpsl mov mov pop mov into jp int and (bad) (bad) incl movsl dec cmpsb and or cmp dec or jle mov js (bad) ljmp (bad) pop test mov pop cmc mov jnp pop fnstsw add out and fbld out add dec fdivrp add inc add mov scas and movsb add add push sbb enter dec sub (bad) lcall ds push pop adc xchg sub mov scas jnp lds movsb jne bound sbb mov loope stos jle mov mov mov ret clc dec loop push (bad) (bad) mov arpl lret aas imul inc sbb pop mov mov ljmp lds jl outsb inc and sti (bad) testb scas xchg ljmp mov cmp cld cmpsb aad mov call sbb (bad) (bad) inc mov faddp and lock fcoml and gs stos call call cld (bad) out insl scas imul ljmp add add fs (bad) (bad) jmp les rclb mov jecxz scas scas minps insb dec adc add inc sub fidiv add or jg or das xor in sbb cmp (bad) (bad) (bad) out cmp sub push out ss (bad) je andl sub cmp ret imul dec insb ss sbb js call xor xor (bad) ljmp mov mov cmp jb or inc imul (bad) (bad) (bad) cmp repz test xor rolb sarb xchg imul scas les (bad) jp jno pop sub xchg push jne xchg adc and scas mov jbe dec (bad) ljmp jb in pusha push inc out mov inc ljmp mov xchg int je pop or call xlat pop and scas clc pushl jb jg (bad) icebp adc outsl xchg xchg jnp pop (bad) movl add adc push add ret cwtl aas test adc decl fdivr (bad) das mov je push adc pop adc imul mov rorl cmpsb (bad) (bad) fistpll jmp arpl sbb add jg (bad) inc gs push hlt (bad) (bad) call push cmpsb cld cbtw mov jo adc mov dec fyl2x mov inc xchg mov push add scas adc (bad) je (bad) (bad) (bad) pushl push jne cltd add (bad) cmp stos xchg push enter sar (bad) call mov rclb add pop or sub mov pop dec fstpl (bad) (bad) (bad) incl sti jne syscall and bound movhps jmp mov daa les (bad) (bad) lcall inc aad jbe (bad) xor shr mov repz jno idivb or jecxz dec insb cmpb aas fidivrl call imul dec subb out add adc jo sbb ds aam mov enter call jl loop repz (bad) ljmp loope mov stos xor jns fnstenv (bad) inc lret pop sar bound or ljmp roll or and add jae (bad) (bad) dec loopne ds in pushf push insl call sbbl jmp ds mov test or inc adc and (bad) (bad) (bad) jnp mov push inc rcr mov shrl cmp imul clc mov dec jb pushf (bad) ja (bad) (bad) sub sti pop pop ret (bad) (bad) (bad) jg mov xor jle push jbe adc xchg repz jnp (bad) decl add subb mov xchg cmp test dec (bad) (bad) (bad) call in sarl iret adc push aad xchg mov mov cmp mov gs adc (bad) (bad) (bad) incl ds mov frstor mov enter jge dec sbb jbe jle cmp (bad) ljmp ficompl mov xchg out std loope sahf pop mov fdivl cld (bad) (bad) incl add push cmp push mov and jmp adc repz repnz (bad) pushl cmpb sub ret test (bad) gs outsl ljmp test mov call jae cmp sub xchg adc pop cld mov inc add xor mov fdivrs xchg scas pop xor push xchg sbb xchg sub push (bad) fidivr (bad) call and xchg add frstor mov je mov mov push and movsl hlt ss into sbb mov jnp mov stos add pop pop mov clc (bad) push imul inc xchg daa aad test (bad) in sbb icebp incl jmp push (bad) (bad) incl xchg xchg xchg inc rorl fcomip fs stos dec mov adc push mov or ljmp nop add in push stos inc sub popf pop mov enter mov cmpsb mov push lret pop jecxz xor incl pop or xchg jg dec int push cmp add cwtl jo sti and insb jle ljmp mov je mov xchg add lcall ljmp xor sub clc loope aas mov stos sbb jle inc jne into cwtl (bad) (bad) incl or inc scas aas in (bad) or (bad) mov (bad) pop aad pop pop (bad) (bad) (bad) lcall mov es (bad) outsb mov in cmpsb lahf cmp adc je mov cwtl mov or sahf mov (bad) (bad) pushl lret pop ja sbb jnp cwtl or (bad) adc inc stc loope or fisttp outsl pushf sub mov jecxz cmp stos push out jle,pt adc movsl movsb xchg mov fldt sub lret sub add cld (bad) jmp aad mov inc mov adc (bad) jg in xorl pop dec repz xchg mov pop or (bad) call fisub mov pop aaa rep push int3 push jno sbb stos sar outsl cli (bad) mov nop push mov jno fiadd add push (bad) gs mov jbe fwait (bad) decl cmp and pop imul jnp mov dec inc dec loope shrb dec fdivp xchg ljmp aam (bad) pop jle jae icebp push popf sahf jb test jbe (bad) (bad) incl loope push mov repz mov (bad) (bad) rolb jp jge cmp mov (bad) cmp xor scas fisubrl jo jecxz loopne stos test hlt jnp and ds mov jle pusha sbb or mov cli mov pushf (bad) js (bad) (bad) inc cli mov mov leave cmp loop add ljmp xchg cmp fucomp out mov (bad) (bad) (bad) push inc (bad) xchg outsl xor xor insl popa rorl jne xlat insl fadds addr16 sar ljmp pushf test ror (bad) xchg lods aad inc jp push mov mov arpl cmpsb scas dec mov inc xor mov pop inc adc insb xchg imul (bad) (bad) call div mov dec push into xchg mov daa adc mov mov aas repnz sbb call outsl lock xchg imul pushf cwtl xor add outsb dec push xchg js pop int3 sub add dec dec jnp sbb (bad) out (bad) (bad) (bad) (bad) mov aad jno sbb fiadd out lea sub push mov mov mov (bad) decl mov push dec sbb push fnstsw mov enter negl mov ljmp or movsl loop sub jnp rol pop (bad) aad ja cld (bad) incl cmp loop jbe enter (bad) repz xor cwtl push push and push cmp stos cmp and into cmp cli (bad) (bad) (bad) cs icebp pop pop test (bad) dec sub je mov mov stc xacquire sbb jo xchg dec jb push cltd mov int3 and fsubs aas test (bad) (bad) pushl mov or aad xor inc (bad) mov jns andb add movb fsts inc (bad) out cli ljmp (bad) sub scas (bad) decl add push std bound mov xorl test (bad) fbld push movsb in cli mov and inc mov jae (bad) ss test push data16 rcll test lahf arpl (bad) pusha pusha mov xor mov test cli (bad) (bad) jmp leave andb xchg or lods sub fsubl mov jmp add movsl arpl jp sbb cmpsl jbe pop push (bad) (bad) (bad) incl rclb (bad) rcl xchg int3 push clc in push test jae sbb push test imul jmp jmp jo mov aad in (bad) ds mov fisttpl cmc js adc fbld add inc add and mov jb dec and mov incl fidivrl aam mov clc sub adc popa xchg mov mov jp mov lcall outsb or pop fistpll cld (bad) (bad) ljmp arpl out inc xor push hlt fcomps je aas ljmp and (bad) call push mov ss cltd cs out addr16 je adc add mov xor (bad) mov test jmp decl pop push pcmpeqb scas xchg push je test cmpl sbb add dec insl mov test (bad) (bad) decl push jae data16 cmp ret call cli push mov sbb mov sbb cwtl xlat and (bad) (bad) jg faddp lods pop outsb xchg stc jp jne mov out sbb jmp pop jno adc push pushf incl dec xchg adc imul cs dec in std adc jnp mov mov jecxz rolb inc mov aam sub xchg mov clc (bad) jmp push mov cmp fldenv push (bad) fcompl std nop cmc ds inc fcompl pop sbb push (bad) call pop adc popf push xchg (bad) ss sub and fsubs cmp nop inc (bad) rcl xchg in daa xor (bad) (bad) (bad) (bad) clc cmc outsl fs jbe repnz xchg adc inc dec sub fisub loop xchg lock mov (bad) mov pop mov pop arpl inc add (bad) mov imul (bad) call scas sarl mov outsl dec or daa std pop cmp outsb les out das dec sbb mov gs loopne sahf repz (bad) (bad) (bad) call add mov rolb inc add pop xchg jmp xor leave mov insb fisubr imul sub dec mov mov imul inc or (bad) (bad) pushl cmpb addr16 sbb fwait in pop jecxz mov movsl push dec fimul sbb (bad) pushl and dec xchg repz xchg push jnp (bad) (bad) inc and mov jno dec push fcmovb cmc dec pop and dec scas iret pop loopne sti mov jecxz (bad) incl lret adc cld (bad) enter fwait pop jg fsubl sub (bad) (bad) (bad) mov pop imul ret adc imul add bound or (bad) je mov (bad) (bad) pushl insl push jle sub and sbbl int3 mov pop out xchg jmp (bad) (bad) (bad) incl or add aaa aaa (bad) adc ds out or or mov jmp test mov sti mov ret add (bad) cmp cmpsb scas aam cld (bad) ljmp mov lods pop dec jecxz mov insb dec inc lds xchg iret jge push aaa mov fimul test cmc cmp fmuls (bad) (bad) jmp popf aad adc in mov and imul sbb sbb ret clc pushl in mov movsl (bad) mov insl (bad) out clc jg ljmp pushf movsb xor loop aad in popa pop (bad) (bad) (bad) decl or test mov imull scas adc sub in push fidivrl xchg stos mov sbb cmp loopne lods push out and adc add je pop pushl cld dec xchg imulb inc mov cmpsb out mov in fwait lret out sbb jge sbb call lock lods outsl (bad) fimul dec enter (bad) (bad) (bad) (bad) cmp imul xor fldcw movsb int3 call rep test (bad) (bad) (bad) mov out xchg mov inc fist xchg and add scas pop adc mov (bad) (bad) (bad) decl out xchg push cmp push cmp pushl int3 sbb in call fldl and jmp (bad) ds icebp movsl imul mov push (bad) jl roll dec cmp adc cmp (bad) (bad) (bad) decl or xor mov or cwtl adc (bad) adc push (bad) xchg mov sbb lods sti or pop push (bad) (bad) (bad) pushl xor sub dec and inc fnstcw imul jo push cli jmp inc rcrb pop or (bad) (bad) pushl fwait loope dec xor nop lcall iret or pop decl pop lret lcall jg adc pop fincstp push stos or mov arpl bound aaa (bad) (bad) (bad) (bad) mov insl push xchg and jbe das je fldl xchg loop mov mov cld adc pop pop shrl add insl leave jp mov jns (bad) stc (bad) (bad) (bad) decl sarl out repnz jl out hlt shrl mov xchg ss decl (bad) mov dec add hlt ljmp jb clc (bad) stos push jae inc or and sbb jg dec fdivrp sarb mov (bad) (bad) call mov or test mov cmpsl pusha jp,pt not fistl add into mov (bad) lcall or hlt adc push fstl sub (bad) sbb cwtl pminub cld inc add sbb mov push gs (bad) jnp dec iret pop mov push push jnp jl add and cmpsl je ds xor sahf (bad) lods (bad) ljmp pop mov outsl mov add sbb add (bad) (bad) (bad) call xchg popf insl add inc jp insb mov test pop ret inc loop add and scas cli mov pop outsl rolb dec and hlt jecxz push nop (bad) lcall pop stos std imul daa push cmp loopne leave mov inc (bad) (bad) (bad) lcall and push lcall imul insl stos or pop cld push lcall ljmp test add push nop cltd mulb call cli (bad) inc dec mov mov (bad) mov push dec mov (bad) (bad) decl mov push jmp dec int test xchg (bad) (bad) ljmp jbe cmp jl mov divb cmp out jl jp negb pop out adc fdivr (bad) (bad) ljmp cmp int3 mov gs inc xor xor cmp arpl shlb adc ja lcall (bad) cmc repz xchg mov icebp fidivl leave xchg mov ljmp xchg cmpsl mov mov sub in rcrl lds push enter jmp inc sahf sub stos loopne inc out jb mov ds call testb mov (bad) mov int3 dec xchg xchg pop int3 pop sub (bad) (bad) push pop pop mov (bad) push jb mov adc stos into xor mov (bad) (bad) (bad) jmp pop jbe mov fldenv dec rcrb mov orl (bad) xor add adc dec mov sbb push pop and cmp xchg and movsl cmp pop sbb push orl xor (bad) (bad) (bad) dec (bad) fldenv clc push mov dec xchg lahf cld in mov lahf ficom nop mov data16 (bad) ljmp push mov daa and fisubrl push sub daa dec sub and (bad) ljmp fwait pop int nop jno movsb (bad) lods dec scas mov mulb aaa or cmc rcrb adc (bad) (bad) lcall pop sbb notb ret les cmpsl push adc cld cmpsl adc pop iret cmp (bad) (bad) (bad) (bad) mov shr jmp mov jmp std aaa cmc sub mov (bad) jg out xchg mov repnz inc adc or inc movsl jmp dec dec cld mov cmpsb fstl iret fdivrl (bad) jg sahf fist dec add mov hlt insb incb jp cs cmp mov (bad) (bad) call sub mov cwtl cs push dec xchg outsl sbb cld mov fstp xor jne mov cmp (bad) (bad) jmp push fisttpl pop insb dec lahf inc cmp mov mov mov adc sub and out adc sub (bad) int mov and mov popa decl lahf stc test enter fwait sub lret jl mov cmpsl inc ds lcall imul aam out jno mov js fidiv pushl out (bad) movsl xlat aam icebp jle cmp call in cmp je and xchg scas scas push insl dec push adcb inc push pop sbbl out mov (bad) lcall xchg adc dec add leave pop xchg aad std ret xchg in out push dec xchg js xchg (bad) cmp decl (bad) fdiv xchg es push jl mov mov add mov (bad) fildll loop or clc jb pop test incl mov iret lret (bad) incl pop dec pop popf (bad) dec push mov test xor (bad) (bad) (bad) incl les push adc sub sbb fild jbe mov adc push aas (bad) lock sar lcall adc mov sbb mov mov loopne aaa mov xor push outsl sub (bad) (bad) (bad) cld lea dec add aas push ljmp fldt push mov idiv incl mov jmp jge mov push inc adc les push pop push (bad) (bad) (bad) jg out test (bad) (bad) into scas push push test out sbb jns xchg pop gs jnp and (bad) (bad) incl insl js jp xor sub cmp ss (bad) movsl jne lcall roll movb adc dec fs divb push call push mov adc sbb xchg negl xchg jno xorl cmpsb adcl (bad) (bad) fdivrp dec xchg push aad inc jmp jge fwait or sub cs and arpl inc jne out sbb pop or addr16 xchg (bad) (bad) call cs jl xchg inc mov pushf sub jge pop outsl insb push sub in dec (bad) fcomip lcall das cmp jae cmp add inc adc dec push jl jle xlat pop hlt and hlt xacquire popa mov lcall lcall sbb push stc call add jne sbb (bad) jg lahf mov lods mov aas repz dec jno icebp test (bad) adc (bad) (bad) (bad) (bad) incl stos or jle test insb (bad) jne inc movsb loope xor inc ds (bad) (bad) decl mov stc jae lods insl (bad) repz pop test ret (bad) (bad) (bad) mov or mov cltd xlat push mov testl pop sbb push mov dec lods mov lcall cld pop xor ds xchg repnz stc lahf or mov insl fwait jle mov cmp (bad) (bad) (bad) out mov in int das jne inc inc dec das mov or cwtl out cmc sbb adc loop fistpll sub jg (bad) mov and pop sub lods xlat jg cmp push push mov jmp lcall aaa (bad) stc jmp dec adc and stos mov pop mov and fldcw push mov (bad) (bad) (bad) ljmp adc adc fadd (bad) sub xchg pop leave cld aas push and push daa stos push and add mov mov sub lcall test je test add (bad) jg xchg xor xor push adc jecxz shll xor or outsl mov dec xchg shll ds jns sti mov (bad) (bad) (bad) (bad) jns pop lods loopne mov out xor int dec mov push repz cmp sar (bad) fsub mov (bad) and cmpsb rolb mov sti (bad) cmp jle andb sub incl mov push (bad) or sub pop or (bad) (bad) (bad) lcall xchg insl scas and test dec (bad) lock or jge jecxz mov xchg sub call jecxz (bad) (bad) fsubrl adc cmp pusha xchg mov sub cld daa mov pop mov sahf jmp push push push adc imul dec shrl leave stos das pop and or inc (bad) jg and lcall cmp (bad) mov add (bad) (bad) (bad) (bad) ds cld in adc dec jns xor iret push cltd rep nop loope into mov cltd jmp test (bad) decl lock in mov inc or mov imul imul ljmp mov fistpll sahf (bad) jecxz pop sbb mov gs ljmp sarb fadds mov xchg punpcklbw push xchg (bad) cwtl mov mov (bad) (bad) decl mov andl or jle jb mov mov scas inc inc cli jg ds mov push (bad) in push (bad) (bad) jg push cmpsl das adc inc ret leave mov aad push mov mov nop add fcmovbe fisubl adc stos inc repz xchg (bad) fldenv fwait push xor in dec imul dec xchg and mov (bad) (bad) jmp data16 mov or bound inc or cld mov loopne dec jle inc cltd pushf dec add jbe cmp (bad) (bad) lcall jnp (bad) add cwtl in push pop cmp test insb test add or mov inc cld (bad) (bad) (bad) dec or add fsubs fucomp mov cmp lods (bad) movsl xchg or push sar jg inc data16 adc cmp sahf (bad) in dec xor lcall or push ret repz push and add lods or xor push mov js ret (bad) std mov xchg mov jmp test decl xchg dec decb xlat dec dec arpl stos mov inc psubusw lcall pusha jg ljmp incl push push into mov clc cmp mov sbb add sbbb (bad) (bad) dec fwait adc mov mov xchg and sub aam xchg decl jg push loopne movsl aad mov lods (bad) lret inc sahf (bad) cmc (bad) (bad) (bad) jmp xlat inc sub mov xlat pop pop pop jne mov jg roll fadd dec adc xor (bad) (bad) lcall hlt rolb xchg push xor cmpsb jmp nop (bad) fist ficomp xchg mov icebp and pop iret (bad) (bad) (bad) pushl cli push mov inc cmp movsb enter scas add les sbb adcb or fdivrp fidiv push rcrw push cli mov xor ja ljmp (bad) incl sub mov dec (bad) fstpl xor (bad) call stc jb add dec icebp pop movsb pop std loope and add mov ljmp sub cmp xadd pop shrb sti xchg jo jge sbb push xchg push cli add pop mov jmp push cmp cwtl test ds lret dec mov cmpsl sbb (bad) (bad) (bad) lcall sbb sbb in loop les xchg int cmp push aas mov mov aas into and mov mov pop sbb (bad) (bad) call dec xchg out inc xor insb js lcall fldcw int inc js out mov mov (bad) ljmp outsl or push mull test in (bad) jcxz push pop cli call add lsl mov scas mov std (bad) ljmp arpl cmp movsl or das pop mov test cld call lret aas lods mov in sub hlt xorb (bad) (bad) (bad) call cmpsl cltd and scas mov (bad) in adc cmp fsubrs dec stos (bad) (bad) (bad) (bad) jg cwtl (bad) nop arpl rcll ds cmpsb (bad) lret add push add lahf scas jne add sahf nop inc out inc ljmp push (bad) aaa aaa xchg movsb ja mov xchg (bad) push jge adc mov cs stos push xor in adc inc daa add out ss sub and jle test jg and adc lock out sbb xor or rorb inc xchg cmpsb ret mov aam cli cmpl jmp pop xlat mov mov flds dec inc scas je mov aas pop push or ljmp rclb add (bad) (bad) jge cmp (bad) jns cld fs (bad) int3 ds xor xchg push fsub (bad) jp rcrl adc hlt (bad) (bad) (bad) jmp and aam hlt cs (bad) (bad) jecxz pop cmove xor icebp adc xor (bad) jmp cld inc push fisub outsl mov pop rorb (bad) (bad) decl imul mov mov sbb mov xchg icebp (bad) (bad) jp test cmp aaa xchg xchg push fstl xor mov cwtl aad icebp push mov jns adc mov ljmp outsl movsb int3 cs mov stos xor xor ss inc cld mov sub inc adc push (bad) popf call mov and movsb imul push andb xor (bad) (bad) decl addr16 insb decl mov bound lods sub cmp xchg sarl (bad) (bad) (bad) fstl fsubs (bad) cltd adc mov xlat (bad) repz cwtl fs mov (bad) (bad) call push xchg in in mov and stos aas (bad) mov pop xor sub lock sub sar dec jne adc mov ja mov cmp mov push mov xlat adc je adc (bad) jmp ds dec shrl or lods inc xor repnz shr and inc (bad) movsb les fisttp mov or jne adc xor iret add mov (bad) (bad) decl test ja inc int sarb pop insb icebp mov mov xchg test mov (bad) icebp test mov aad or pop sbb scas cwtl mov loopne inc and loopne cmp and or mov pop xchg mov xor decl lahf addl jns popa mov (bad) (bad) jg push popf ficom roll pop ljmp (bad) repz subl (bad) (bad) decl inc cs mov adc xor scas in cmp out dec push xor jmp cmpsb je jl (bad) frstor sbb jns faddp adc out xor push mov (bad) cli incb cld decl lds pop xchg jg sub mov mov xor dec sub add cli lock add mov cld iret and pop adc arpl (bad) xor (bad) (bad) (bad) fucomi ljmp xor scas mov sbb cmp rcr xchg xlat fsubp inc rorb decl add loope in push mov bnd or stos insl idiv ljmp sub das push inc xor mov imul mov dec jno (bad) incl cld pop jno mov enter test repz pop sub andb arpl and inc ds inc jl mov adc dec cmp das test popa clc inc fwait xchg cmpsb stos push jmp (bad) (bad) jmp ret popf lds jno stos out adc loopne (bad) mov cmp (bad) (bad) decl (bad) in inc inc lea mov inc mov push stos (bad) (bad) decl out out lea pop mov sub pop mov cli (bad) inc in aam mov xchg hlt repz pop pushf adc (bad) (bad) decl mov sbb sub imul rcrb icebp lret in arpl ljmp mov (bad) rclb xchg sbb cltd jb mov sub call cmp mov (bad) jg lret pop icebp out in xor sub mov mov sbb pop inc push in sub (bad) (bad) jmp and bound xchg addr16 aaa mov adc imul pop mov jle mov lods xchg sbb (bad) push test sub or dec in out jnp mov sbb or pop movsb cmp stc stc push in and jg in and data16 pop xchg repnz jmp bound or inc imul cmpsb mov es (bad) call fcomi out fisubr popf imul test push cld imull (bad) ljmp mov push adc mov insl xor and sbb (bad) (bad) jmp inc sub pop lret sti shlb dec outsl cmpsl les jbe jns sub mov ljmp dec cld jp dec xor pop ds rorl mov outsl (bad) pop push incb movsb fchs inc push pop call or sbb jmp dec shrl hlt mov les dec test icebp mov lcall (bad) (bad) jg jle insb cmc adc iret xchg push pop out mov aas outsl push in xor or (bad) (bad) fistpll mov or add jg test in mov jecxz call imul movsb cmp dec jp,pn stos test cmp xor jle pop and sbb adc inc lret into pop pop pop dec jnp js ljmp aam popf ret das xchg xchg xchg (bad) adc (bad) (bad) mov pop add (bad) pop dec stos ret mov (bad) (bad) (bad) (bad) clc xor loope (bad) fstps mov rolb jno stos mov (bad) (bad) (bad) outsl mov dec andb cmp sub testl pushf sbb fidivrl push jb mov cwtl jbe cmp (bad) cmp mov add xor rorb mov insb ss stos add aaa add ds jae sbb inc (bad) (bad) (bad) inc rcl xchg and or es daa mov sub push mov outsl or ljmp add (bad) jno scas mov lahf gs imul dec mov clc inc pusha xchg daa push ret mov out hlt jmp jo mov pop cmpsb and (bad) incl push push lods and add pop sbb pusha ljmp movsb movsl xor dec sub cmc (bad) call mov dec loopne lret sub mov enter lret rorl subl test data16 sbb loopne jg fwait call call jae into pushf (bad) cmp out mov pop cmp adc push adc test mov test sbb (bad) (bad) fild ds mov in repnz (bad) pop dec addr16 jg das mov mov cli test pop (bad) mov mov in pop inc call in mov jp pop ljmp loopne inc ljmp fimul fnstcw jmp xchg in out and (bad) jmp lcall cmp jbe jle fsubs (bad) (bad) call fnstenv call xchg sbb (bad) clc popa fnsave cvtdq2ps fsts and mov cmpsb jo xor out jno ret iret (bad) mov ja fistpl gs and pop pop movsb test (bad) std add mov inc in xchg data16 cmpsb add mov out outsl arpl pop dec mov xlat rcrb mov mov xchg stc imul (bad) call scas mov add ds enter xchg push lret (bad) jb jnp add decl insb imul lcall outsb xchg and xor loopne andl fistp (bad) (bad) ljmp jnp mov popf push xchg inc adc mov mov mov aaa cld out sbb ret sub lcall or mov lcall call jb sti iret out jle mov and sbb pusha cld (bad) decl xchg or or je push mov sub pushf pop les mov add cmp rorl sbb cmpsb cmp fcoml (bad) (bad) pushl mov aam jnp push scas jne fisubrl push movsb (bad) adc out lock (bad) (bad) clc pusha mov hlt lret js mov inc mov inc loop sub fwait cmp (bad) (bad) fistp inc inc sbb scas ja imul mov jg or (bad) (bad) (bad) decl xchg pop into dec test fdivrl xor dec movsl inc or jle test mov inc cwtl push lds (bad) mov push in cltd enter out or cs inc sbbb cmpsb (bad) (bad) (bad) lcall push pushf sub popf mov enter adc cmp lock in hlt out sarb orb outsl addl or stos outsl pop dec (bad) (bad) (bad) incl dec sub mov jae ret cmpsb aaa dec bound ja lret jmp push jae mov ja lcall in dec mov and (bad) ljmp dec mov sbb adc and imul jl jg pop rclb mov mov lock cli (bad) (bad) ljmp mov in std and jge add jno icebp lods test mov out iret and jmp add rorl aad mov pop dec adc leave jg pop inc test div xchg ds ja iret push test jb mov push leave (bad) jae je decl pop jg push push pop pop stc rcrb out push or (bad) (bad) (bad) ljmp out cmp int3 add rclb in loope stos mov add (bad) (bad) lcall adc (bad) push sub (bad) rcrl sbb int mov lret mov std (bad) (bad) cmp mov test fcmovnb push pop adc add inc inc pop sub popa xchg sahf jge inc mov adc out mov xorb pop dec sub adc xorl and jmp (bad) (bad) jg fwait push js lods cmp xchg xchg mov pop sbb jle sub mov ja add iret bound jb sti (bad) (bad) mov fcmovnbe cltd and rorl lods sti fdivp out icebp adc jno mov (bad) (bad) jg cmp fisttp push rcll or sub in xor leave pop xchg (bad) mov (bad) loopne jl push mov (bad) lods inc adc (bad) (bad) jmp jae int3 popf in out leave add mov push adc lods xchg fdiv or lcall mov jl (bad) loope xor es mov cld fildll out mov movsb (bad) sbb lods clc lea mov iret testl inc xchg sbb mov (bad) mov imull out pusha call cmc sub push rclb jle,pn outsl (bad) (bad) (bad) push enter adc or hlt nop pop add mov push xchg aam mov add (bad) ljmp gs movsb jne jg xor (bad) jb jp inc (bad) ljmp repnz je inc push adc data16 or lcall mov cld mov inc xor ds mov ds (bad) (bad) (bad) incl push push push mov (bad) mov data16 inc pop cs lcall mov call cmc cmp aam xchg cltd iret fcompl (bad) (bad) (bad) out cmp insl dec andl clc pop stos idivb add or rcrb loopne pop (bad) (bad) (bad) jg orl fidivrl cld add push mov cmp dec ljmp loop gs jnp mov cmc dec lret cli fs popf movsb ds movsl push (bad) (bad) (bad) fistp xchg (bad) cmc loopne movsb push xchg or dec pushf jle mov jmp scas mov dec fnsave cld (bad) dec pop adc aas pop and or mov cs pop les mov mov dec or pop (bad) sub mov test pop add (bad) call test add in sub out push xor dec js lret fisubr daa sbb test (bad) jmp mov cmp push xor dec jbe ljmp out repnz jmp jp xor sar mov mov sahf shl outsl add adc jb jo mov push dec and inc (bad) nop xor ds (bad) (bad) (bad) lcall loope push xor jno repnz push js in hlt pop imul (bad) jb sub add (bad) (bad) (bad) jmp js bound ss push rclb mov dec fdivs mov push cmp fbld sbb cmp jno jp (bad) xchg (bad) (bad) incl push test int mov mov scas jmp cmp (bad) decl mov (bad) daa js int add mov fnstcw sarl test inc pop mov (bad) (bad) (bad) (bad) mov dec test pop inc dec push xor adc in pop xchg add push jb (bad) mov and mov outsl lret jmp sub dec cmp cmp lret mov int dec pop aam push (bad) ljmp (bad) jne pop mov mov mov clc fst mov mov imul inc or push mov repnz ja cwtl sub (bad) (bad) (bad) incl gs out inc xor ja xor outsb sub popf or cmp (bad) (bad) (bad) (bad) stc popl pop xlat mov push and dec pop cmp fbstp adc fcoml xchg lahf test test jmp sti lds cmp xor stos fsubl mov jbe aas push dec mov lret inc in (bad) (bad) (bad) ljmp push sbb int iret in cmpsl lods mov ret adc popa loop mov (bad) icebp or or mov int3 xor dec movsl add lret xor mov imul decl mov pop (bad) in sti mov mov loopne (bad) in shll push mov add mov mov mov loop loop fisub cli call pop cmp imul dec sub add sub and icebp and ljmp in adc ret stos in (bad) (bad) lea hlt adc fwait inc sbb out add (bad) (bad) (bad) jmp sbb or aas arpl sub addr16 lahf xor (bad) (bad) ljmp add clc sub (bad) fildll (bad) out icebp jns gs push in xchg js aas rcll mov pop cmp (bad) cmpsl ja repz jae cmpsl mov dec mov jg icebp pop lret add push repz mov push ds sahf fcomps scas mov cwtl fidivr (bad) mov xchg pop (bad) (bad) (bad) call sub adc shlb call add cmp (bad) sub mov call fdiv notl cmp lcall (bad) dec mov push push xor xchg dec mov fldenv cmp xchg sub outsl clc lcall loope fcomps notl push ja push in add sub (bad) (bad) pushl clc xor (bad) scas push adc in xor xor insl insl jbe int3 adc mov (bad) (bad) dec adc mov out (bad) int xchg add lahf and cmp into movsb and imul cld leave inc packssdw cmp dec add scas pop push dec icebp fisubr cmp (bad) (bad) inc add xchg dec xchg push mov cs out pop add or (bad) cmp (bad) (bad) (bad) fldcw loop mov jl xor sarb mov aad daa sub mov aas aam sub ja lock icebp and jle xor (bad) (bad) incl fistpl or adc stc lret notb or mov push adc (bad) (bad) call jmp mov push aam dec pop xor ss xor add in call imulb (bad) xchg xor cmp mov jne fwait arpl stos lret mov lods push pushf or iret cld pushf je iret lea (bad) inc aam and rorb xor leave lods cmp or (bad) (bad) decl imul ret test or outsl imul das push mov (bad) sbb and clc mov ret pop lock jecxz ja jg ret xor inc jae int3 jmp in ja aam and xchg les addr16 es lods aas dec and jp ss xchg and jg push mov jl lret dec sbb repz ret mov leave aas in imul or into les dec sbb leave loop scas xchg lods (bad) fidivr test adc inc xchg ds out mov addl sbb std enter (bad) (bad) (bad) mov mov sub sbb dec jns out xchg jl or insl icebp stos bound hlt (bad) jge outsb and out add roll jg add fs test inc (bad) push faddl hlt fcoms (bad) (bad) (bad) jmp repz push push pop cmpsl ffree mov sbb mov xchg frstor jmp or sarl (bad) aaa (bad) cmc add rcrl cmp sub std add imul inc mov adc rcrb (bad) (bad) (bad) (bad) lcall lock subl jp sbb xchg arpl enter jb (bad) mov (bad) mov out pop imul add jne (bad) (bad) ljmp xor andl push adc in stos push rcrb clc icebp nop dec or jle (bad) pop in bound push je mov (bad) (bad) (bad) decl in jbe mov add and dec cmpsl inc (bad) (bad) jnp or (bad) (bad) (bad) lcall neg mov and inc sti bound fs (bad) mov sarb jl xchg out clc (bad) inc jo cli ret es lcall inc es mov fbstp inc cli (bad) (bad) jmp daa cmpsb ss jmp push jne lgs shll cmp dec cmpb xor ret ficompl inc push (bad) (bad) (bad) (bad) clc or sahf movsb cmc (bad) das lret nop mov inc mov iret lods inc jmp add (bad) call stos cmpsl mov fsts cmpsl xchg jle icebp pop xorb add pop add cmp dec add incl push jle aad adc dec cltd paddsw mov sub mov lea ds sbb inc adc out inc ja lds mul inc clc outsl push mov sub xor (bad) jmp jo,pt push cs mov mov xlat and push jbe (bad) (bad) (bad) call rcrb outsl mov add out adcl test leave into (bad) out loope ljmp cmp jmp fisttpl mov rcl ljmp inc test call out jne jne lret cmp sbb ja cs ret loope insl mov inc mov cwtl mov or stc sbb pop lea sub addl lock icebp dec fcom ss pop mov inc in fwait pop lock (bad) (bad) fnsave mov (bad) dec pop add jl bnd pop (bad) movsl out jo (bad) dec xor xchg out push push (bad) incl cld jns ret inc shl push add add push es cmc (bad) (bad) jg dec dec aam jno or sbb out lods gs cmp jp mov and pop hlt inc cmp fwait lret xor test cmp icebp xchg loopne negb (bad) ljmp push jnp mov js xrelease clc push mov data16 push orb fbstp jb scas rcrb adcl (bad) cmp mov mov shl add ficomp and fwait loope add jne pop dec inc lret (bad) dec xor ds adc int3 icebp and mov sbb inc loop and jmp gs call mov add sbb outsl ljmp inc mov (bad) incl lods testl mov sbb jno nop push (bad) (bad) (bad) (bad) cmp push test sub stos pop (bad) or orl ja adc adc mov (bad) icebp mov mov lock push cmp ja dec in mov (bad) (bad) call jg imul xor push loop dec test cmp (bad) pushl sbb mov aas dec sbb mov flds inc xor push and (bad) (bad) call insl dec jne lea cmp jb jnp insb daa and loope jno mov inc mov push (bad) mov jno or (bad) (bad) call sbb ret sub jae je insl lods sub frstor mov (bad) adc (bad) dec push in popf cmp sbb nop idivl mull cmpsl in or adc (bad) aaa loopne (bad) lcall inc cs mov sbb not cmp outsl cwtl add push mov adc pop mov pop inc enter cmp stos or jb add xor add xchg scas ljmp xchg xor repz mov mulb jnp pop and xchg and cmc (bad) pushl dec lret in or xor into imul incl mov pop add test in ss ror pushf call decl cmpsl leave jo nop inc cmpsb cmp divl or xchg or ljmp inc mov dec push fsubrp ljmp mov mov fisubr popf xor (bad) jge lds (bad) mov aas add cmc lahf lahf adc sbb add (bad) jg pop lret mov push and push sub xchg mov (bad) fldl cld push cmpsl pop out in jno add (bad) (bad) (bad) jg jbe scas ret sbb shll pop push and inc pop xchg push adc insb test mov (bad) sbb ljmp add mov cltd gs push cli lret dec inc dec pop fidivr ja ja stos sbb push in (bad) decl rorb pop ds mov push cmp xor std (bad) (bad) ljmp jmp in std xor mov pusha jle out into sbb scas sarb push fidivl and adc je mov sti rcrb out xchg imul mov dec inc ljmp bound in jnp cmpl xchg ds mov (bad) fs push (bad) (bad) lcall in stos stos mov xor cmpl mov sarb xlat cmp fst sbb (bad) pushl mov mov dec test pop cmpsb push add pushf aas jne or movsl or mov sub or lret in imul push dec out mov (bad) (bad) ljmp xchg xchg add pop jbe (bad) or mov jecxz imul cli jno pop push mov in (bad) cmovae mov jle rcr in adc cmp add cmp cmp bound push xchg mov cmp mov mov sarb cmp mov mov out out (bad) (bad) (bad) cmp clc dec sbb inc ret lods mov call and imul lcall es cs stc fidivrl jo pop loopne nop push pop sub mov test std daa test inc leave lods jb (bad) decl insl pop mov mov mov popf aas ljmp pop mov adc movsl fwait sub lret (bad) (bad) call mov into outsb imul xchg and pop (bad) fidiv xor (bad) (bad) (bad) jmp loope popa jbe mov sbb push rcll pushf push aad std leave insl fwait xor jecxz (bad) (bad) call add out xchg sbb scas jg (bad) jo dec insb fdivr pop and push or movsb and sti mov and incl mov cli xchg sub mov mov push (bad) cmp (bad) out (bad) in (bad) ljmp pop xchg fmulp xchg call adc jp (bad) (bad) (bad) lcall (bad) in stc fxch (bad) test mov jp ror ljmp push mov test mov incl xchg mov and jl pop or outsb dec xchg ljmp subb loope jnp stos iret xchg gs add xchg mov and ds and dec jo test dec xor mov mov mov loopne (bad) test add (bad) cmc stos mov enter jmp sbb push pop cld es jne psrlw xlat adc push sub loope je sbb sbb or mov jne sbb cmp (bad) (bad) (bad) lcall or or push ljmp daa (bad) loope xchg je xchg in outsl mov pop mov movsb stos pop inc xchg xchg push add xchg mov jmp (bad) (bad) dec jbe inc inc lahf pop jmp fwait sub mov push or mov clc (bad) lcall fcoml addr16 push lock repnz mov sbb lock and dec jg dec repnz push pop imul (bad) incl sbb sbb fisttpl addb cmc (bad) (bad) fcomip (bad) jg add xchg shrb cmp movsb sbb fsubs incl mov pop icebp mov lds sub jmp fisubl (bad) fdivrs push or cmpl lcall (bad) sbb addl mov insb test sbb ds (bad) (bad) ljmp xlat jl pop fs in lcall out pop jl clc xor jl (bad) (bad) (bad) mov dec adc fldt sbb aaa data16 cli push cwtl sbbl inc into sub push daa enter add test cmp mov cmpsb aad aas jg (bad) pushl lds cmp je xchg shlb sbb mov mov (bad) (bad) (bad) (bad) jl mov mov jp loop aas add ret mov and mov pushl or sub push push cltd in shrb test (bad) and (bad) (bad) (bad) lcall sbb (bad) rol cmp jmp stc lahf or push add sar or add lcall pusha jecxz loopne mov sub sar incl xor adc test dec pop mov mov push incl inc and fdivl pop xor imul sbbl sbb fwait (bad) jnp dec ror jle xchg loop nop (bad) (bad) (bad) decl cmp cs je js and mov xor or inc iret mov data16 pushl mov fwait ljmp mov test lcall test fwait lcall jle xlat dec push mov lods inc addr16 inc cmpsl (bad) (bad) (bad) pushl loopne and add push mov imul int jl js (bad) mov scas fstp pushl loopne dec aad sbb (bad) (bad) (bad) ljmp inc fs mov cwtl lcall bound enter cmp sti popf (bad) (bad) (bad) push stos pop bound mov lret xor (bad) mov mov loop or movsb cmpsl dec enter pop sub push ja call dec push (bad) adc test (bad) call aaa test pushf mov fld1 enter xor fwait dec and inc xlat pop cld (bad) (bad) (bad) cmp lret cmp mov ss lcall jb pushf inc or imul outsb mov arpl lods add (bad) lcall xchg push (bad) hlt fidivrl fucomp sub or jg lcall mov test ss out dec loopne movsl ficom pop sub leave iret lods xor (bad) (bad) ljmp xchg lods cmpsl jne (bad) fcomps movsl inc xor add sahf sar pop inc fsubrp ja (bad) xor cmp stos add mov mov jns xchg dec and jb (bad) sbb call pop mov mov xchg or (bad) ljmp mov push sub fsubr adc jae into jle loope (bad) (bad) call loopne (bad) push or mov jmp or xor mov mov (bad) (bad) (bad) mov aaa mov cwtl inc iret cmp iret lock rclb jle pop ss sub mov (bad) (bad) (bad) sti test sub sbb and jmp jmp sub xadd sub mov sub adc cs decl (bad) std stos fsts scas in mov xchg jecxz roll fisubl iret (bad) (bad) (bad) inc push subl xor insl fdiv call clc repz loope adc imul (bad) fcomip dec lods mov jb (bad) jmp in outsl andl sub mov jl xor push lcall add sbb sub mov sub pop or mov loop xchg mov inc xchg push mov (bad) lcall (bad) pop adc pop shll dec loop or cwtl jae fsubrl sti pop pop pop and icebp sub rol pop ret (bad) push sbb in repnz cmpsl jp stos out imul loop and dec (bad) (bad) (bad) ljmp es xchg dec inc pop jnp mov or dec add out sub inc (bad) (bad) (bad) ljmp loopne cs jmp xor pop mov aam jb movsb jbe xor hlt (bad) (bad) fsubp jg test push xchg sub fldl (bad) (bad) ljmp ljmp andl pop jg jecxz and mov mov aas adc jg dec pushf gs (bad) (bad) ljmp push shrl insl (bad) lds inc ret mov arpl outsl xchg add pushl lea test inc dec cli mov mov (bad) sahf xor les mov xchg fist mov aam lcall into jo mov sbb and inc call sbb jg (bad) ljmp orl sub sbb jecxz mov fsts (bad) (bad) (bad) lcall pushf cs push notb mov sbbw or dec inc pushl dec mov fstpt test xor sub imul mov pop xchg (bad) (bad) (bad) (bad) fcomps stos sub int3 pop lods ljmp push test out dec lds enter mov or push (bad) (bad) cmp dec stc mov js adc lock or inc inc aas ss incl ficompl jmp int pop inc dec push (bad) cmp adc xlat mov mov mov (bad) cmpsb (bad) or rcll xchg mov sar and dec xor (bad) gs sti scas add and dec out cmc out outsl xor lcall xlat and xor push (bad) xor scas inc sahf xor (bad) (bad) inc xchg sbb lcall mov jg or js adc sub inc jle aad test lcall mov sub mov cmp dec outsb cld mov out mov push jmp xlat je in (bad) (bad) (bad) incl hlt jae loop call or popa sarl xchg mov dec ljmp hlt push mov mov xor rolb aad jg push (bad) sub arpl mov mov (bad) (bad) call xchg add push fstl cltd xor in gs mov pushl movsb clts sub loop jmp pop fwait imul ds icebp addr16 (bad) ljmp fmull int lahf test inc dec mov pop fsubrs xchg ss pop push add (bad) (bad) mov adc in adc cmpb (bad) (bad) jmp pop push fwait shr popf cld sub sbb pop cmp (bad) (bad) ljmp xchg jo xchg pop subb das lods call jmp call mov sbb inc xor jecxz clc and cli fwait (bad) call cmp arpl push ss je cmc lea mov jmp ds addr16 cmc clc pop sub neg mov (bad) (bad) (bad) (bad) jns mov pop sbb sub push test push (bad) js sbb orl je inc adc rcll or xchg sub jb sbb xchg (bad) (bad) (bad) cmp push dec add repnz inc push and (bad) (bad) aas xchg enter push mov cli std enter nop in gs add imul xor sub jmp nop inc cmpsl neg and in mov loopne repnz (bad) int pop hlt lods sbb je mov ljmp add adc dec inc xchg (bad) mov iret insl insl adc mov (bad) (bad) (bad) pushl push mov mov cmp fnstcw aas and popf add or (bad) (bad) (bad) decl test aas test pop and jle mov push add adc or mov cmpsb sbb repnz aas pop jmp ljmp or inc fs sub inc jne adc add dec fldenv adc pop jb repz (bad) call std mov scas push sbb inc add bound (bad) (bad) (bad) ljmp dec out enter xor xchg mov in sbb jae (bad) dec into (bad) jno mov (bad) (bad) (bad) dec rcrl mov or mov es fcmovu lret push inc sbb arpl inc mov jnp movsl add lret adcl inc mov jne sar (bad) (bad) jmp dec subl std in cltd push dec popf repnz mov xchg out idiv adc (bad) (bad) jmp in pop pop mov or imul push and and int3 xchg (bad) (bad) (bad) call add xor lods jb incb jmp mov cmp add xor ljmp pop xor out (bad) dec arpl bt jp mov repnz dec push add jg imul sbb pop andb fdivrs mov adc push movsb movsb (bad) jo incl inc or push (bad) (bad) (bad) inc ja sbb nop inc sub lcall dec pop (bad) jne iret test icebp (bad) (bad) in in mov xchg cli jmp addl sub ljmp cmp pop (bad) (bad) in loopne xlat stos sub push inc addr16 (bad) mov enter push movsb cli push xchg test and adc clc and aas mov jae fwait stos sahf sbb (bad) decl popf lret aaa es jecxz arpl movsb ds push push xor mov mov and sahf (bad) (bad) (bad) call jmp les jbe or push addr16 imul mov mov sub (bad) (bad) ljmp loop nop sbb sbb or jl adc add icebp xchg jnp jle (bad) ljmp lret fnstcw cmp xchg xchg push jp (bad) adc int3 xlat loopne adc xor inc scas and push out sub or (bad) (bad) (bad) fsub sub pop in sbb dec sti out loop and fcomps cs loope out pop ret mov insl sub hlt and ljmp scas push insl mov (bad) jmp or pop les jnp mov and mov sub sbb decl fisttpl mov enter adc fdivrs iret (bad) lcall addr16 sbb dec das mov insb les (bad) (bad) (bad) pushl add pop fs stos lcall add mov push cltd inc adc (bad) push jmp in lods xchg pop lcall fnstsw negb mov arpl push (bad) (bad) (bad) (bad) jp or test leave mov sbb bound mov xchg (bad) (bad) (bad) incl push aaa (bad) out inc mov jl adc xchg nop cmpsl jge test mov cwtl jle ljmp insb mov xor stos add jae mov stos jns (bad) (bad) call leave or sti out iret addr16 xchg lret js xor sar or dec jl inc ret les sbbb inc cmp (bad) (bad) (bad) mov incb stos mov push cmp or cs push (bad) (bad) pop jecxz mov aad (bad) ljmp push add loopne rcrb je pop in jae stos pop incl in (bad) scas dec jae pop cmp je push and push incl push dec rcrb ljmp arpl jecxz jne fwait popa imul rolb sbb ja jno outsl lock mov mov fcos push stos adc pop lahf (bad) (bad) (bad) (bad) mov jmp pop (bad) loope xor pushl rcl cmpsb dec (bad) cmp mov (bad) icebp (bad) ljmp (bad) (bad) push and cmp bound std add test arpl push pusha jne gs or cmp test sar (bad) jmp push jo fyl2x add pop push jno mov pop jecxz fneni(8087 xchg rol xadd sbb (bad) ret fsubrs out imul in push dec call aad vbroadcastf64x2 ret sbb cmp icebp (bad) js fimul fs dec cmpsb inc mov ds ret (bad) (bad) (bad) lcall iret xchg ja sti mov inc mov scas ret jo jne sarl ljmp (bad) mov clc push sbb dec push sahf inc push rorl mov inc adc ds adc (bad) (bad) fistpll pop sbb cmpsl push xchg std cmp push daa jle aad and je mov mov rcrl add jae pop xor (bad) loopne mov (bad) jae lahf idivl jp push test (bad) incl adc cmp test add mov loope arpl adc pushl cmp sti and lock mov cmp and fldt into mov (bad) call pop mov ds enter repz cmp (bad) fnop dec push in (bad) (bad) (bad) decl dec cmp xchg xchg in roll dec sahf or xor dec adc mov (bad) pop hlt add es jnp push adc bound or lock or inc cmp sarl outsl dec imul ljmp inc js dec popf jbe aas lahf adc and jne ss (bad) mov dec lock adc ds in es sarb jo (bad) (bad) (bad) decl jne sbb stc pop fldl out aas cvtdq2ps stos inc mov or aad (bad) ljmp int movsb scas mov cmp pushf xor (bad) (bad) (bad) decl mov mov pushf pop pusha mov repz inc roll jl ret out sbb (bad) cmp lods (bad) (bad) (bad) pushl repnz and xchg pop rcll lret jmp cwtl (bad) xchg addl fiadd xor cmpsl dec cld incl pushw adc imul daa mov ljmp cld sbb addr16 ss lods cltd (bad) lock roll push mov cmpsl and fadd js adc imul (bad) (bad) call rorb into nop imull sub in test mov and ljmp es (bad) (bad) lcall inc mov lods loopne popa pop sub inc gs aas out stos pop imul (bad) (bad) jg repz scas arpl ficompl push lods ret test icebp nop nop test and aam lea fildll mov addr16 xchg jns fucomip iret (bad) (bad) (bad) decl ret cmp ljmp inc xchg xlat push pop rclb push ja add (bad) (bad) ljmp sub divb mov loop mov mov cmp std xchg stc mov and pop insl xor adcb cmpsb (bad) ljmp xor pop inc lods jp and jecxz sar adc (bad) mov mov fidivrl mov stos pop adc fwait (bad) (bad) jnp out inc jne inc lcall jp dec mov mov jecxz (bad) (bad) push (bad) jne mov jno outsl out adc xchg push or ja ljmp xchg aad dec sbb sbb mov test movsb and cwtl in mov (bad) incl add sub sti mov inc xchg fisttpl lods (bad) icebp push mov mov sub scas lret stc mov mov (bad) fcos (bad) decl xchg repnz xor enter pop cmp bnd jns inc cmp bndstx pop xlat test push xchg mov fldcw out es nop push (bad) loopne inc in aas jl js les pop negl (bad) call adc test enter call pop pop push and (bad) (bad) call movsb js in sub mov xor test out adc bound ljmp jno and cmp xor cs inc bound (bad) (bad) jg in repz or test xchg sbb leave ja dec (bad) (bad) (bad) incl (bad) cmp subl push mov sub adc jp out (bad) (bad) (bad) ljmp sbb xchg inc jnp arpl jmp cltd jmp mov (bad) (bad) (bad) pushl add stc or sbb dec inc pop mul cwtl icebp mov cld pop adc lcall (bad) (bad) mov rcl pop arpl sbb mov hlt (bad) (bad) ljmp add dec add nop xchg lret ficompl (bad) incl sahf addl in jle sti testb jg inc (bad) mov add jbe add xorb cld (bad) in imul cli pop bound fidivrl push dec mov sahf adc fsubrs add pop mov jae lods cmpsl mov dec mov jp,pt adc ds jle pop mov orl pushf icebp push sub dec pop in in daa xor jg mov test imul (bad) (bad) call and stos sub nop push add sub addr16 sahf movb in push test and stos mov mov jo push and stos mov fstps and les repz (bad) (bad) lcall mov test xchg inc dec loop mov pusha or or mov mov or mov insb or (bad) (bad) (bad) mov shrl jmp dec mov scas (bad) (bad) (bad) xor rclb fsubrl push adc inc (bad) (bad) out ds xchg in pop dec cwtl lock mov xor call or daa addr16 rcrb mov mov loopne lock (bad) (bad) call and fildl mov add xchg jae pop mov xchg es lock (bad) (bad) (bad) (bad) jmp shrb mov arpl cmp cmpsb mov rcrb fcomip (bad) decl hlt sub pop and jge (bad) inc fadd sbbl sarb enter inc test je or and mov movsb insb mov jg je,pt dec mov popa repz outsb adc xchg cmp cmpsl push aas ds push (bad) (bad) (bad) jmp out test dec cmpsl (bad) and rorl int jne insb mov in xchg (bad) (bad) (bad) jmp sub arpl push rcrl decb nop fcmovb push cs negb sub ljmp loop scas sbb in dec xor (bad) (bad) (bad) aas pop test test and sti rorb push (bad) std fsubr aaa movsb inc pop (bad) (bad) (bad) call (bad) hlt jl push mov ficom mov aam lds cmp xchg lock rcll pop (bad) (bad) (bad) (bad) mov call movsb jp movsl shll jmp sub fldcw (bad) lcall jl inc cmpsb dec inc push pop int cltd mov dec and dec mov (bad) (bad) jp and xor xchg push pop fisubl or pop push pop jno and push xchg and (bad) (bad) lcall lret cli rcll je int3 or ss mov stc loop pop push (bad) (bad) (bad) decl jp shr enter (bad) jo hlt mov add push xchg mov inc adc cli (bad) dec ret icebp ds ss inc in ret xchg lds (bad) (bad) jmp sub pop add mov xor xor hlt or lret imul (bad) dec pop adc outsl leave mov je icebp cld mov incl xchg dec movsb xor jmp sbb lret (bad) jg outsb and leave (bad) push adc repz je sti insb xor cltd repnz out (bad) out mov orl movl cltd out and mov loope adc mov (bad) lcall pop popa cmpsl (bad) clc xchg lea jle mov push fdivl jge add push pop mov (bad) (bad) jmp push hlt fisub in leave pop rcl add jne push cld mov (bad) ret add (bad) (bad) lcall xchg test pop sbb xor push shr xlat cmp dec jmp (bad) (bad) decl mov fstp xchg jge gs pop aaa mov push mov int out push das sar sbb mov push jns dec mov lret jecxz clc loope (bad) (bad) call repz pop pop jle dec fs dec and xor add pop (bad) (bad) (bad) inc fnstenv push fcompl cmp sub call pop cmc inc addr16 enter (bad) (bad) jmp mov sub sbb cltd (bad) lret xlat mov mov sbb imul (bad) (bad) mov mov (bad) sbb sub in mov ljmp adc and pop sbb int mov ss aaa clc mov (bad) (bad) cli rolb test fwait repnz jo xorl jo xor aaa push (bad) jmp call jle inc xchg mov aam fs sti push xor (bad) (bad) inc call ss inc pushf gs mov jmp int stos xor insb pop dec arpl or mov xchg call xchg jle push (bad) decl scas (bad) lock (bad) (bad) incl mov adc test xor xchg arpl mov (bad) (bad) call repz pop test jno std in mov outsl data16 insl insl xchg and loop add (bad) (bad) incl dec addr16 adc adc add pop add mov (bad) das out iret cld jae cli add addr16 jo push sbb jle push outsl (bad) (bad) (bad) lcall push mov sbb aam subl cmc dec insb aam ret mov movsl push cmpsl fs (bad) (bad) jge sub bound test rcrb cmc out xchg and into xorb adc jg and cltd into xchg mov sbb pushl or popa scas mov rcrl sub ficoml (bad) jmp pusha lret pop arpl or (bad) cmp add insl push inc lret mov cmp lea xchg cmp (bad) dec pop fdivs add aam adc nop mov (bad) jg dec ds push dec inc pop dec dec aam aas mov and int3 pop xchg push sbb xchg lcall (bad) jmp jle aaa jnp sbb (bad) aam das insl mov cmpsb push arpl dec xor (bad) int3 xchg loop sysenter adc push loopne cltd (bad) (bad) ljmp xor xchg das jle out pop mov xor sub fnstcw pusha push ja jp sbb (bad) push (bad) (bad) (bad) call mov and pop cltd (bad) cmpsl and mov lahf jecxz mov dec jmp sbb (bad) lahf inc add cmp arpl scas mov push (bad) (bad) (bad) jmp mov or repnz mov lods mov dec imul cld out movsl (bad) aam and pop push sar hlt gs data16 stc (bad) call adc lret addl fdivrl add movl lock adc xchg rol mov rcrb sbb insb adc pop and jecxz (bad) (bad) call cmp movsb adc daa loop repnz inc inc repnz inc or pushf mov sub mov ret (bad) jg lods push adc jnp cs ljmp negl jo sbb mov and add push push or ljmp push dec rolb ja pusha cmp lcall add mov inc cld fld1 mov ret ljmp test data16 jp cli lcall jmp ljmp jnp inc pop adc (bad) jmp dec or lret es ljmp cltd ficoml sti hlt (bad) (bad) pushl inc push jne (bad) jmp jo call fs (bad) es (bad) out roll sti into in mov (bad) fildll mov lcall inc push jb mov xor or stos pop push mov or incl imul in (bad) decl out jp or (bad) and movsl mov int3 ja cmc push mov mov les fsubrp es stc or (bad) (bad) (bad) jmp cmp sub inc sub mov mov push (bad) sbb stos mov xchg pop loopne fistp jns xor lahf sbb lcall push lods pop in lret aas test enter add sar (bad) (bad) (bad) fild push xchg and je jbe lahf cltd jne jecxz mov stos mov (bad) (bad) (bad) push mov pushfw jns stos insb jno push data16 dec in and cmc mov inc mov xchg push add add ficompl ret (bad) (bad) ljmp scas push dec mov ss push or leave jae mov mov or (bad) (bad) jg ja jae mov lods bound in jno leave jbe test adc mov (bad) out add jne sbb jl movsl lret aad (bad) jns (bad) (bad) call dec or adc insb repz xor pop cmpsl dec jg push cld movsl (bad) decl (bad) fisubr cwtl mov push cmp cmp hlt inc (bad) (bad) in add adc call mov notb cld outsl mov mov jecxz xchg ficompl xchg mov ja sub (bad) (bad) (bad) pushl scas xchg pusha mov push cmpsl and mov cld sti cmpsb pop clc adc shlb mov inc push mov mov pop sub mov (bad) (bad) (bad) decl add (bad) sbb sbb jae cmp xchg push outsl sbb pop cld (bad) decl ret mov sub and jb mov icebp jl in or (bad) (bad) decl mov and inc outsl sub jno mov insb dec (bad) mov (bad) decl and adc out mov out test fisub (bad) jmp pop mov jbe icebp movl inc mov mov xchg jl scas int sti int3 fcmovb push (bad) (bad) (bad) pushl push sbb push mov pushf jmp and mov push xlat lea ja dec dec mov mov out nop sub jecxz xor dec outsb xor add lcall inc cmpsl cmp movsl pop push and xchg (bad) (bad) (bad) incl adc xchg out stc cwtl js push test dec repnz and mov push in (bad) iret inc sbb in (bad) (bad) lcall mov jbe push xlat stos sbb mov aam adc in in mov call hlt insb xchg and ds cmp mov idivl xchg aaa cld (bad) inc bound inc mov add mov xchg test (bad) jb clc (bad) (bad) call sbb repz dec push ja pusha ljmp jmp cwtl stc (bad) decl inc ds mov mov nop (bad) xor dec push pushl adc xchg cmpsb in (bad) (bad) (bad) incl hlt xchg nop mov adc push inc sub lods lret imul cli shrl jne (bad) (bad) (bad) lcall pop mov lock or in sbb push push out or push leave push pop cld (bad) lcall out lds or pop sahf push push xor nop push mov sub pop xor mov ss xchg add add idivb test jae clc das xor (bad) mov faddp fdivrs (bad) (bad) ficomp ds das ja stos push mov dec pop sahf sub bound jbe jno stos lret (bad) (bad) (bad) incl in cmp int shll mov idiv leave pop scas inc shlb in mov icebp incl aad out (bad) fnstcw push sbb in fisubl mov mov sar mov daa cmpsb ficompl std fidivr and in lcall ljmp mov (bad) icebp mov or xchg aaa and (bad) (bad) (bad) mov repz rclb inc jle scas cmpsl int push in aas sub ja push jg adc (bad) jg add out ret xchg cld inc jnp,pt dec add (bad) (bad) cmp jg subl jae rorb lea loope je stos jb pop hlt mov pop addr16 dec xlat scas (bad) fidivr mov push or push add jg mov jbe sub icebp cmp mov sub ds (bad) (bad) mov jbe outsl insl inc aam movsl xchg sub pop stc (bad) sbb (bad) decl lret stos inc xchg inc push sub cmp fwait cwtl imul jmp and jg shrb dec cmp ret inc js outsl (bad) (bad) lcall inc pop inc loope out into imul into jae rcr pushf (bad) (bad) (bad) jmp pop push inc out mov sub jg ret and push neg jmp inc mov push andl adc fistl in int int mov cmp push add rol pushf xchg imul push (bad) pop loopne loope shlb ss cwtl aad arpl mov incl (bad) xor mov add lahf lret cld push lahf mov movsb adc push popa jmp inc sbb les add (bad) (bad) (bad) dec pop out ss adc mov sub icebp jl hlt clc daa adc push (bad) (bad) (bad) (bad) fcomps cli aam pop sub add mov mov sti mov (bad) xor adc xchg lcall cld sbb xchg mov sub inc adc popf incb (bad) (bad) (bad) lcall sub pop xchg in (bad) pop xor lods lahf cmpsb mov inc shl lods test pop ror inc cmp (bad) cwtl rcrb leavew mov cmpsl jae mov (bad) decl add adc and inc les inc and fisubr jb aaa push jg (bad) decl test stc in inc mov and push jnp lods (bad) ljmp push and mov adcl rcr mov dec ss (bad) lcall cwtl cmp push fdivs push in jg inc pop (bad) push ja sbb (bad) (bad) decl (bad) pop xor mov push (bad) adc xor or sub mov out (bad) (bad) (bad) (bad) mov push ret add mov push xor push (bad) pop in (bad) (bad) (bad) lcall fcoms das cmp test xchg or shrl cmp std (bad) jmp repnz jb add pop mov addl stc idiv (bad) ljmp jg dec xchg stos lock out into fisubrl mov js (bad) (bad) (bad) call cmp fdivr cmc cmpsl rcll int3 and xor in lods dec mov pop sub (bad) (bad) call loope fwait push inc enter mov jnp jno pop stos pop xchg jmp out (bad) dec lret (bad) (bad) (bad) jle insb mov sbb inc (bad) jmp xor dec sub dec xor xchg cmp (bad) (bad) lcall pop gs add adc arpl mov js or rcrb (bad) (bad) (bad) jg ret push lock push xchg mov lahf test or out imul cmp decl or (bad) mov js int mov mov add adc int3 in push loopne (bad) (bad) (bad) (bad) call or call push pop aaa mov std xchg pmovmskb cld movsl lret sub inc sub idivb mov ljmp les xor cmp mov loopne (bad) push cmpsb (bad) fist jae and loop sub push iret dec ds sub call or xchg leave fsub dec in add popf xchg xchg sbb fsubl lahf aad dec movsl and jmp mov sbb xchg repz sahf cmpl ds (bad) (bad) jg xchg inc adc out jmp and cmc in mov sbb lahf es (bad) (bad) jmp xchg jg arpl xchg jno mov js pop (bad) jmp (bad) (bad) (bad) mov ffree sub (bad) xor bound icebp popf outsb outsl inc mov xlat xchg dec add aas inc popf push lock xchg rclb aam dec add add push aas mov fistpl cmovae fist in (bad) sub (bad) (bad) lcall xor push sti dec and xor addr16 loopne dec call mov fwait (bad) pop cmp loop test cmp push loopne cmpsb in stos or cmp ss pushl std ret fldl cld mov adc add xchg mov cmovge (bad) lcall push cs cmp in movb shl inc push cli in push mov loopne mov cmpsb jno fnop mov (bad) divb lcall adc mov mov std pop ds aas fisubr or xor mov (bad) (bad) ljmp ds pop pop shlb jne orl loopne sbb nop mov (bad) (bad) (bad) fild cmpsb scas pop daa scas sbb ret jae mov popa cmp inc cld (bad) (bad) (bad) cld cmp jmp pop test pop (bad) lret mov xchg jp loop push insl sar jg push (bad) mov (bad) pop sbb outsl pop xor (bad) (bad) (bad) (bad) ds popa jp mov out xchg cwtl adc push jl fwait std inc int3 or inc mov inc hlt (bad) (bad) (bad) jmp or enter pop int3 cli mov ljmp cmpsl (bad) (bad) lcall sti or mov outsl mov cltd jg aam aad jbe sbb outsl cmp cmp mov xor mov adc pusha or mov ljmp push popf push pusha call out push mov ficoml test pop (bad) aaa cld aad xlat add (bad) (bad) (bad) lcall xlat dec (bad) (bad) out dec clc movsl mov movsb in ds mov sub or call test iret mov mov add mov in dec adc les movsl mov (bad) mov mov hlt jp (bad) cmp jno xor xor adc jmp sti outsb mov adc cmp ret (bad) mov (bad) sahf mov push inc in out rcl mov adc cmp (bad) (bad) lcall lea lcall rolb lret (bad) lock shlb add dec in iret les fdivrs icebp lods add push pop dec add cld insb sbb cmp xor pop (bad) call add mov es mov rol pop mov rcl (bad) pushl iret sbb or mov (bad) (bad) mov xchg pop and imul or mov xchg push sbb cld shll lods (bad) (bad) (bad) jmp cmpsb cmp dec (bad) leave add roll rcrb jg (bad) je (bad) (bad) ljmp push (bad) push jle jne xchg mov xchg dec stos (bad) (bad) (bad) jmp xorl mov xchg sub sub lock ficoml test adc icebp test clc (bad) incl ss data16 mov hlt xchg jp mov cmc pop cwtl repnz adc (bad) (bad) jmp out pop or in pushf int jmp imul mov test (bad) sub add (bad) (bad) jmp xor andb loop mov out bound sub lcall or xchg and dec std pop sbb ds or faddp enter xchg pop lcall add clc idiv imul cmpsl ret aas mov je add (bad) (bad) (bad) jmp sbb ljmp scas mov scas aas lcall lock (bad) (bad) (bad) pushl xor stos movsb mov cmp cltd lods mov jmp (bad) (bad) (bad) lcall mov (bad) inc loop lods cmp (bad) rcl and cmc arpl ss xlat fcmove je outsb push (bad) (bad) (bad) lcall sbb pop mov push xor aas sbb pop cmp fdivrp mov inc (bad) sti mov (bad) incl popa divb sub pop test mov gs stc mov pushf pusha mov (bad) pushl adc mov pop popf mov pop ljmp (bad) dec sbbb es sbb push stc or dec or sar movsb imul mov jmp addr16 push mov aam fdivl pop xchg inc lods add lcall xor (bad) mov lock (bad) popa fdivl and jge (bad) (bad) (bad) inc ret xor xchg fwait dec icebp aas popa int or add cmp (bad) (bad) (bad) pushl mov mov call rclb xchg paddsw sbb jne (bad) ret xor cmp (bad) jmp jl in loopne cmpsl mov test pop sahf addr16 mov cmp dec mov loopne or mov fnstcw xchg in in or (bad) decl imul and das jns fnsave or inc (bad) (bad) (bad) jmp fistpl stc xor dec es inc cli ds mov js hlt xor jg adc xor leave xchg test jnp pop in popa (bad) lcall popf xchg pop repnz movsl adc pusha cmp sbb mov and js int3 (bad) (bad) (bad) (bad) cmp hlt push jg repnz xlat cmp xorl mov mov (bad) (bad) incl mov clc aam xor scas xchg xchg lods addb (bad) incl mov pop mov xchg mov dec out sarb (bad) int (bad) incl mov call add mov sub call (bad) (bad) (bad) call hlt orb mov or in mov ret add jg xor cmp jg (bad) jne jge movsb pop repnz lret mov subb call lret add lret fdivp dec je and out icebp inc inc (bad) (bad) (bad) incl call xor in lret add jns js xor sbb cmpsb lcall (bad) jns lock lcall movsl out out dec inc mov pop repz jae (bad) (bad) incl jge cmp insl jnp jnp xor imul ss cmp ret dec sbb daa sti fldenv rcrl mov sbb pop and leave push pop fild inc mov sub js mov (bad) lock xchg movsb sub repnz (bad) (bad) lcall mov cmp adc push sahf movsb mov fisttp popf ljmp fwait dec mov out adc add inc cwtl cmpsl (bad) mov sbb mov imul movsl xor leave dec stos dec jecxz fwait push insb dec (bad) (bad) (bad) jmp jns bnd sub flds pop (bad) jo shrl aas cli ja adc (bad) (bad) (bad) ljmp jo call adc inc dec movsb (bad) je dec push out popf arpl (bad) pop mov ljmp out dec cmp stos pop jnp test mov push lcall mov sub lret (bad) int (bad) mov push push fisubrl mov push or push out (bad) (bad) mov add pop or dec push mov cmpl test mov cmp test adc inc pop xchg add mov xchg inc (bad) (bad) (bad) (bad) fisub mov incl shrb icebp sti and ja xchg fcoms int inc (bad) (bad) (bad) push (bad) bound setns mov push movsl test (bad) cmp in xchg sarb xchg xchg jmp sbbl lcall (bad) (bad) out xor and sti push lods outsl fwait mov (bad) mov jg cltd int3 aas (bad) (bad) (bad) ljmp test popa mov or adc sbb addr16 in jmp xchg push in stos dec add bound cmpl js js and call xor scas (bad) (bad) incl (bad) cltd das mov and pop dec push test sbb inc mov sbb dec arpl xchg sub (bad) (bad) (bad) incl xchg cmp push mov imul sub adc jp inc (bad) mov in mov pop leave mov xchg lock push xchg push outsl int3 mov and mov jmp xchg (bad) (bad) (bad) jmp dec mov jge pop scas add mov fdivrl mov sub (bad) (bad) inc xchg xchg inc sbb cmpsb iret push call (bad) data16 cltd shrd loop add mov (bad) jg js push jae xor les sub test xchg sti rcr cld or idiv (bad) (bad) lcall push mov data16 pusha push mov xchg push or xchg mov (bad) call jg shrb dec pop adc mov jmp adc pop icebp or aam outsb sbbb rclb movb jo lcall decb xor push call fwait out and call movsb jp icebp nop insb loopne mov lods mov repz sub fdivl inc (bad) ljmp je jo mov mov dec mov add je inc jecxz (bad) jmp xchg xchg out je (bad) xorb mov ret mov mov dec aam fsub add push cltd cmpsl pop dec xchg cld imul mov (bad) (bad) ljmp xchg push pop outsb clc andb cli push push les mov sahf sub xor (bad) lahf and sub in jns (bad) (bad) jmp scas mov mov insb push push sub add xor add jg sbbb push mov xchg xchg das mov (bad) (bad) (bad) jmp mov xchg ds or sbb aas sub (bad) mov mov jno addl ljmp xor sub sub test inc cli (bad) cli push cmp lods add jle divb lds and cli clc adc jae mov pushf pop push inc cmpsb sub (bad) aaa adc push cmp bnd push (bad) (bad) (bad) (bad) jmp xchg ljmp inc and in dec bound cmpsb data16 int3 mov jmp (bad) (bad) push add cmpsb add pop push lret ret adc ret xchg jbe inc (bad) (bad) ljmp stc cmp std fidivl jo xor or sbb lcall sub sbb sub stos and std incl jle jmp cmpsl inc or rcrb or pop jg ffree into jo jg sub das enter sub movq (bad) fistpll push push sbb mov add sub out repz sbb inc mov (bad) ljmp je,pt xchg lahf loope lret jno cld dec shlb jnp icebp ret sti js sti (bad) (bad) (bad) ljmp insl dec cmp das push int3 mov rorb movsl stos fsubrl cli out clc pushl adc mov mov shr adc out mov fisubrl ficom cmp adc (bad) mov mov mov in (bad) jl scas imul dec aas decl clc cli pop inc pop test adc and push add pop fcoms adc xchg inc sbb mov jne stc fdivr (bad) (bad) (bad) (bad) in sbb ds (bad) aaa pop add cmpsl and xchg inc cmp lods out mov popf mov (bad) lcall (bad) repz mov mov push mull movsb icebp mov adc movsb test pop xor mov je mov inc dec mov pop ja js movsl movsb in cmp cwtl jno pop push clc xor mov rol cmpsl les int3 (bad) mov mov (bad) out and or cmp loope dec lods inc xor xchg jecxz mov clc movsb xlat pop xor sahf out cs xchg decl mov jo jg cmp push jecxz xchg and mov pop inc add and xchg aaa cwtl test (bad) (bad) ljmp pop (bad) scas shrb aas jg mov jo int3 jo sbb xchg add (bad) add orl out cmp push imul mov test mov push loop adc xchg lret or sbb (bad) fcomip pushl pop popa cmp loope dec xchg loop loop mov rol cmp (bad) (bad) (bad) (bad) fdivrp cltd pop (bad) xor inc sub lock (bad) mov das mov fistp mov (bad) (bad) pushl movsb push (bad) scas loop mov mov mov mov mov lock cmp loope (bad) lahf fdivr mov das int xor sub cltd sbb dec ret jle arpl std call push stos fs mov fidiv mov outsl add call sti push call iret add pop sub dec cld (bad) (bad) fistpl inc daa push sar lcall rcr stc pop loope jg ds sbb clc (bad) jge outsl (bad) (bad) mov iret xchg mov sbb dec outsl in sahf pop into test jns jecxz (bad) (bad) (bad) pushl sbb cmp rclb enter mov pop inc outsl repz lcall ljmp xor (bad) leave into (bad) and mov je jg mov pop mov dec scas fdivrp mov icebp rcrb push push adc mov push fisubrl push jne (bad) leave cs (bad) mov xchg test out fcoms imul xor lahf rol lock (bad) pushl lods nop mov ret sub xchg or js pop (bad) jg pop adc pop cwtl or insl push out in inc xlat (bad) lcall ds cld adc dec mov fidivr sub xor mov cld pushl sbb dec sbb jb lea jg leave (bad) stc dec and lods dec pop arpl sbb test (bad) sahf dec (bad) ds push (bad) bndldx and test sahf ljmp std (bad) (bad) cld xor jnp bnd push lods xchg inc aas xchg repnz sub pop mov arpl (bad) pushf fldenv addr16 lds jl pop mov (bad) (bad) (bad) (bad) mov mov adc mov sbb (bad) std das or inc mov lcall das or sub clc repz jge xchg test int3 int3 sub pop sub data16 (bad) (bad) (bad) jecxz,pt leave push lods push insl push mov pop mov loopne jl jnp pop call and mov push add (bad) (bad) (bad) ljmp dec rcl (bad) mov cs add test mov rorb lret (bad) lcall cld or or (bad) lock jmp jbe in sbb je add jmp xchg aad scas jge lcall mov aam sub sbb (bad) fbld dec call jl lods dec xchg (bad) (bad) ljmp adc (bad) lods adc leave enter mov inc pushl jo jmp (bad) (bad) jmp aas popf xchg test call pusha mov test hlt movsl jbe cmp cld (bad) (bad) incl fwait mov push aam mov adc nop movsb adc xchg jb xchg scas das scas faddl jg push jns data16 mov and or add sbb mov ds (bad) loope gs ficomp insl jo pop hlt stos mov pop enter aas mull aas in xor bswap in cmc inc sub or inc out pop fsubrs cli das and leave xlat pop daa addr16 bound jo xor test (bad) (bad) (bad) pushl mov inc sub mov cmpsl aas int mov mov pop dec jo aad std out ret insb (bad) rorl sub mov (bad) ljmp cmp jecxz rcll aaa mov stos mov pop mov lock jmp orl xchg fmulp mov sub or out fcmovne (bad) fcomip lcall xlat mov fs xchg sti std inc lods and movsl mov decl add inc ds es lods sbb ljmp decl dec or push push and inc push (bad) adc lds push dec cmpsb test (bad) (bad) pushl or notb push cmc mov jmp in fidivr (bad) mov xchg adc (bad) (bad) (bad) ljmp (bad) sbb enter imul pop rcrb (bad) xlat sbb cmpsl inc (bad) (bad) lcall sbb cld xchg outsb jecxz lret cmpsb or je int3 sbb pop clc push jge (bad) (bad) decl cltd and cmpsl pop sub adc inc push xchg dec outsb xchg xor pop iret jae cli push (bad) (bad) cmp outsb cwtl (bad) push fsts roll cmp dec jb ds fs icebp enter ljmp lock add dec test ss sbb mov inc (bad) mov lret (bad) (bad) (bad) call lods inc out fnstenv divl popa sbb aam out fcompp loope sub push jecxz fstpl call test push outsl mov or sbb call out andb imul out clc sub jbe aaa push add jecxz or xchg cmp fs pop adc sahf fidivrl lea xchg hlt ljmp popa inc scas icebp xchg sbb lods aad (bad) pushl sbb or mov mov scas mov (bad) (bad) (bad) std enter xor ljmp in test pop mov clc and rclb scas dec mov std and (bad) (bad) call inc aas and mov and and jg repz jmp popa movb jne pushw push mov pop movsb das popf xchg mov add jmp sbb nop jg cld (bad) decl (bad) sbb dec ficoml jne push dec inc pop jmp mov (bad) decl aam mov mov (bad) in test and pop xchg mov inc fsubrs (bad) (bad) incl and xchg js shrl and rcrl pusha or into jle mov (bad) decl push pushf push mov dec loopne dec xchg jle dec repnz inc pusha ljmp xchg cmp test adc mov mov sbb cmp jle adc (bad) clc lea (bad) (bad) decl pop push ficomp call xchg lods movsl faddl xchg jo stos mov insb cmp fcoms (bad) (bad) pushl adc (bad) lea pop pop test pop aam lahf sbb ljmp dec xor (bad) (bad) pushl dec inc mov jne pushl xchg aad push lock inc pop sbb mov (bad) (bad) pushl sbb std mov ljmp add push dec das sub aas pushf (bad) (bad) (bad) (bad) fsubs cmc push jecxz scas scas inc dec cltd pop xor imul iret rolb cmp inc aam (bad) mov sarb ss push cmp imul push pop fist or (bad) insb das sar test arpl cmpsl pop addr16 sbb movsl or cli push and (bad) (bad) (bad) mov cmp ret aam or cmc mov dec imul (bad) (bad) pushl jns out and stos add mov int3 hlt repnz sbb (bad) (bad) (bad) decl inc push xor jmp iret mov aaa push xor lods outsl add (bad) (bad) push push mov (bad) addr16 inc fistl in jo mov div jle lret add pop add pusha and and dec jae push mov sar or in mov and loopne enter sub decl lods adc pop into pop ret inc pandn repz or fadds in add hlt cmpsl sbb cwtl push xchg jne test ja js pushl std decl into pop outsb bnd mov sbb outsb outsl add dec aad test jle pop lock addl jo inc or jg mov xlat cmp lret repnz in aam or xchg jmp sub (bad) (bad) (bad) incl adc adcb in mov dec inc cmp nop inc sub ljmp rclb rcrb inc (bad) (bad) (bad) (bad) in mov sub sub mull xchg mov mov adc (bad) bound mov (bad) (bad) (bad) incl mov sub adc xchg into xchg jecxz lcall xchg pop and sub fmull test add lea jno mov sbb adc je push in movups cld mov pushl push mov sub cmpsl mov loope cmp ret cmp cmp pop jnp rorl pop ds test (bad) or ljmp pop (bad) (bad) stos int jp jbe sbb ficom push jo ljmp mov push xor pop pop sar inc cltd mov fimul cmpb (bad) (bad) lcall scas nop mov jmp xchg shll ficompl xchg pop int jo adc (bad) xchg dec cli fidivl (bad) (bad) (bad) pushl repnz (bad) clc add aaa (bad) push nop data16 (bad) popf ljmp pop sbb (bad) pushl jg scas inc pop test cld inc or out mov (bad) (bad) call shrb jp jg xlat mov out (bad) cwtl xchg or aad jecxz or (bad) (bad) ljmp out stc loop stos fdiv test xlat in das or icebp dec popa pop jecxz adc fstpt mov dec or out fwait out push pop aad jnp test mov (bad) incl mov cmpb sub add es (bad) (bad) call (bad) xor mov andl mov or sub roll sbb or decl pop jno pop out dec push test incl fidivr cltd mov movsb xor mov scas push out jl lock mov (bad) add (bad) jmp addl pop mov rol lock leave (bad) (bad) (bad) mov orb pop adc pusha inc int enter aam xor pusha jns mov (bad) (bad) (bad) lcall inc mov sbbl or (bad) inc pusha dec arpl cmpl (bad) (bad) (bad) fistpl (bad) mov notl lods mov insb repnz xor (bad) adc jle call movsl and test adc imul push (bad) lcall add xchg and mov inc jp (bad) (bad) (bad) lcall movsl jle dec jb enter pop paddusb mov je ja,pt and (bad) (bad) jg loopne or in cmp adc mov sbb lods inc push jle fnop adc loope add lcall (bad) cmp nop mov lods lret or aaa push jecxz or dec je inc std pushl and mov popa pop and or mov cmp pop or sti ja pop in ljmp (bad) (bad) jmp add mov cmp sub into jge loope sub (bad) call test (bad) scas fnstsw mov pop orl dec mov sub fisttpl inc sahf loopne xlat jb inc fisubr pop (bad) (bad) jmp push adc pushf ljmp pop mov dec add inc call mov popf mov xor (bad) xchg addl push js lea std into movsb xor mov adc add inc jne inc sub xlat movsb jno call pop xchg out rcrl pushl enter push xor or pop (bad) shlb fbstp mov (bad) (bad) (bad) ljmp data16 add sahf es sbb pop xor cmp add or cmc lods mov cld stos pop pop inc inc scas add test (bad) jmp inc dec enter pop ds mov stos (bad) (bad) or xchg aaa xchg sub (bad) mov xchg inc js jg sub push fwait inc popa je rorl loopne stos adc (bad) call add das jg jle pop clc dec sub cmc add repz jg int3 mulb cli arpl (bad) (bad) (bad) fbstp test mov jge lcall in push add xchg mov (bad) lcall sub mov arpl ljmp inc dec (bad) sar (bad) fildll in dec adc ss daa xlat mov add lcall call dec pop sub or test nop popa push sahf (bad) sub out test dec jecxz adc rcll lret push ja (bad) jmp seta mov imul pop sbb (bad) (bad) (bad) ljmp sub adc flds pop xlat adc dec inc test jo fldl2e (bad) (bad) decl aad jle lret xor dec or outsl scas add xchg jmp scas mov mov lahf and fdiv sbb add mov mov inc jnp (bad) (bad) call addr16 scas les mov cwtl mov mov (bad) (bad) (bad) pushl rcl and inc jecxz in dec loop cmpl fcompl sbb (bad) insl iret mov fdivrp (bad) (bad) jmp ss xor push mov adc inc xor sbb ja pushl mov push das icebp out movl pusha loope xchg inc inc cs push (bad) (bad) (bad) incl fs lods push cmp rcrl movsl aaa rcrb fs push mov add mov pop popa sbb push push and inc (bad) xlat (bad) dec inc pop dec sbb (bad) (bad) (bad) jl iret rcr jns dec jl sbb in xor dec sarb xchg jo jp ja ja (bad) (bad) (bad) pushl in outsl adc mov je xchg adc dec push fcompl sub sar dec gs mov mov into pop dec mov dec loop (bad) (bad) pushl push popf hlt addr16 test imul out rorl cs sbb (bad) (bad) (bad) jmp iret mov add jle push inc cwtl xchg push (bad) fs fsub cltd fadds (bad) (bad) mov pop subb ss xor daa sahf repz pop jle and sar imulb adc ret jb (bad) decl lock addr16 lret enter sbb pop jnp movsl push mov inc test (bad) (bad) (bad) pushl and in addr16 push cli push je inc test (bad) flds dec (bad) (bad) (bad) call insb lahf out mov call dec mov fcmovne cld aad (bad) mov (bad) (bad) (bad) lcall mov cmp dec out insl shll mov add sub les ret imul and xor sbb add lds out adc mov movsb and (bad) (bad) incl cmp fstpl (bad) xchg in cmp aas enter js mov (bad) (bad) out adc cmp push outsb loop dec xor xchg inc or cmp xor (bad) (bad) (bad) lcall stos mov adc imul js adc out mov aaa push notl shlb mov lret sarb pop jne lcall (bad) (bad) call and adc mov push mov hlt xchg (bad) addl ficom sti xchg dec sahf ja lcall rol fildl push lods popf jmp xor stos push pop sbb mov (bad) jg pop lds sub aam imul dec pop cmpsl cwtl int3 mov cmpsl enter fs lods inc fs (bad) (bad) dec mov mov mov push jp outsb enter repnz mov add cmpsb inc inc xor cmpsb ljmp cli decl ljmp sub lret test sbb xor pop push icebp xor icebp clc test mov jle scas and inc inc mov stc sti mov xor (bad) mov pop inc or std or (bad) mulb add sahf popa jmp ja adc cltd cmpsb inc dec adc (bad) mov out sbb and test pop inc pop jp shlb or movsb jg mov js ret sbb aaa cld (bad) ljmp push popa fldpi hlt push dec pop outsl push lea scas stos ficoml mov (bad) mov loopne mov push and int mov and sarl dec inc mov push pop dec setae (bad) (bad) lcall dec sub scas add call mov les or js adc mov shrb (bad) jg dec icebp and sti sbb lods cli pushf inc and or outsb das adc inc (bad) (bad) mov in fisttpll imulb in ljmp out arpl clc dec adc dec out and sbb dec nop (bad) jmp (bad) or jg jmp push adc cmp fisubl enter pop xchg lahf in popf inc (bad) call push cmp lahf in xchg sub repnz push mov add xchg sub lcall pop mov and icebp fs (bad) (bad) (bad) jmp dec pop xchg push mov ret movsb jecxz icebp dec lahf insb fmuls shrb or incb adc adc xchg sub lcall (bad) pop fimull pop cli mov into into cmpsl incl int3 sub dec jg dec cld push sahf cli in mulb push imul sbb popf xchg subl inc lds gs inc adc pop bound dec repz cmp or incl xor adc push or cmp mov jg cmc pushf push and mov pop pop jae daa jle stos inc cwtl pop fdivs adc adc mov ds rcrl stos sbb mov cmpsl leave ret cmpsb mov mov sbb jp adc insb mov or jle (bad) int3 or decl (bad) sub aad cltd mov test stos ljmp and pop sbb inc or (bad) push cld (bad) (bad) jmp subb std (bad) popf xchg loopne adc xor add (bad) incl pop dec mov fwait sbb add fdivrp (bad) decl sahf (bad) jle xor dec and push lret in mov enter (bad) call in sbb out gs add out test jecxz xor ja testb dec jg (bad) (bad) ljmp xchg and sarb std fldl inc gs loopne and jae inc clc lcall cmp dec fbstp ficomp pop clc (bad) pushl sahf mov repnz adc cmp sti fldl mov mov (bad) movsb cwtl scas (bad) fbld xlat jb push sub test push dec in out test adc push into pop imul (bad) (bad) call push dec test lods (bad) movsl mov add int3 ds push das es push push test dec cmp xchg dec rorl icebp jp mov or push lock out (bad) (bad) fmull (bad) clc das xchg (bad) loope mov jns int jnp lds mov pop js cmp push adc jg and test mov fcomps cli ret rcrl inc jp cltd push mov dec mov dec jg add fcmove pop scas or test daa dec lahf fisubl cmp push test jnp std aad fild mov jp sub jmp add push xchg cmp pop xchg test dec es add push jle scas dec or out imul inc add push add (bad) incl sbb stos inc lods (bad) mov jns sub pop mov cmc shr sbb fs in adc xor jg or and jp push jg icebp mov inc cmp cmpsl inc jns ds lahf and iret mov pop pop cmp adc dec add mov or iret negl dec gs je push pop fiadd arpl jbe jbe jns outsb sbb sub jo es fidiv cmp sbb lcall xor inc ja xchg jae addr16 and jno gs mov out fisub ret cmp jbe cmp imul outsl outsb clc push or inc pop inc (bad) popa aaa imul bound insb sbb xchg aaa mov mull push sub imul mov (bad) and out xor sbb xchg pop lcall xor outsl je mov data16 jne sub pop jo mov push (bad) gs jbe xchg insb fbld fcmovb sbb imul out cmp fistpll (bad) sbb arpl lds xorl jbe or pop mov ficompl insb (bad) mov popa sti add jns adc aaa adc pshufw aas notb mov ja adc pusha mov jne and roll adc clc push nopl pop ja imul outsb mov fwait lods jp jnp insb mull or das pop daa into jecxz push ds dec dec bnd mov jne outsb jmp js shrl fwait push aas add lahf cs jae dec das (bad) popa cmp ds ja insb mov je negl pop cmpsl pusha or pop dec xchg sbb pop sub or outsl xchg (bad) cvtps2pi repz mov inc ret movl das and cmp pop ds xor je in insb jb arpl pop test inc push mov (bad) xlat cmpsb xchg mov inc inc jne cwtl jne ret mov adc fmuls push jo cmp stos push push mov daa sti jns sub clc xor inc aaa ja mov ret add dec pop inc inc xlat add pop sub pop and shll xlat push fwait jae pop mov insl mov pop jae scas stos outsl jbe icebp pop add lret add jle mov and sbb cs push out jae dec sbb (bad) jbe fildl jl call pop sub loop push lock mov inc das cmp sar ret lahf xchg insb dec adc add sbb popl arpl lock or jmp loopne mov rcl jnp push outsb js rdpmc add add scas and (bad) outsb mov inc rol add or int3 rorb cmpsl xorl loop dec pop push inc push push mov (bad) idivl or dec out jecxz outsl add je push dec aas out bound add or inc and adc or dec lcall jo (bad) adc inc jo sbb mov movnti and xchg addr16 lahf cmp loop out into addr16 dec gs js lods fucomp xchg mov push mov sti xor cmp mov fstpt and mov or es mov xchg cmp jg sub scas popa xor jg push and cwtl mov and je adc icebp mov jns andb or jne je jbe,pn inc pop adc dec jecxz push cmp dec add xor stos scas or add dec pop xor inc pop cmp popa ds pop add jecxz stos push fwait push push outsl das xlat mov inc mov push xchg or (bad) stos add popa push mov into cmpsb add (bad) shr mov add push imul add sbb addr16 ds xchg stos ja loop imull inc adc fidiv shrl xor shr ljmp dec dec outsl cmc push or out push or jnp jnp imul push cmp rolb mov (bad) and lock outsb inc repz add aaa and dec out mov pop jo pop cmp xlat inc test inc test jb push xor daa imul inc mov xchg push lods jecxz sbb daa push outsb xlat push push addr16 in je jle aaa ss mov and scas mov push repz adc leave lds out cmpsb je push sub xor jnp mov push sbb and fdivrs pop sbb adc testb xchg mov inc sub inc xor and adc stos das sub mov sbb pop jl aaa and pop jo cmp loop (bad) iret cmp mov mov cmc cmc arpl ss das outsl loopne xor dec dec pop mov sti mov incb insl les jle ret push push div jbe xchg push xor adc scas out dec outsb negb xlat scas jnp mov pop ret adcb out outsl dec sbb add cli adc loop jnp outsl sub ljmp mov ja inc lea mov ret ret pop pop cmp fidivl imul dec add push adc arpl add outsl movsl fiadd push inc lahf sbb pop jns es (bad) icebp pop fadd cmp push jnp mov insb fldt or sub imull pop mov cmp shrb add ret sbb outsb sti jne mov sti mov inc outsl pop sbb mov mov push cmp ds pop gs sub jae aas insl repz mov arpl outsb cmp fstpt dec push jmp bound scas pop jl aad jne xlat push (bad) jne sub sub (bad) xlat pop ja ljmp daa push (bad) fadds (bad) (bad) mov scas xchg arpl imul fistpl push pop sub addr16 jp ss mov dec outsb xchg jne or adc inc jg nop mov adc push lock pop inc in jmp and sub aas and ret adc push ljmp pop xor hlt test das stos sarl and push xor mov cmp (bad) je adc sbb mov xlat out push cmp cmp add jbe imul das inc test cs testl shrl ja call dec inc push sub xlat call pop into mov dec outsb jbe pop xchg mov dec out and insl adc mov je push outsl mov xchg push dec fstpt mov out jb rorl imul pop adc xchg scas push mov sub push cmp xchg xchg lea subl push popl dec pop dec imul shr mov test pop ficompl jbe pop mov or xchg push add mov sub pop or icebp scas sbb cmp xor ret push fwait imul xchg pop push or test pusha cmpl sub lahf xchg and jnp sti mov addr16 addr16 sbb mov pop or outsl lcall or mov jl sub adc jmp mov pop and rorl pop js mov popa mov rcl add arpl push pop (bad) cmp push jb jae ret pusha add faddp test ja mov mov (bad) and roll popa fbstp push movsl (bad) dec and mov jns arpl add ret pop adc lea mov cli pop data16 xchg mov dec mov mov cmpsb xchg pop xchg mov push pop jae pop dec jp (bad) imul mov push aas jne xchg loop ja sub xor mov sbb fistp push adc adc push scas inc mov add imul sub push xlat addr16 adc mov das push or cmpsl jmp adc add mov cwtl lods pop push push xchg jne loope push in aaa jmp imul rcrl inc je das lods bound mov add js mov mov push inc in mov push or push mov aas jnp pop xchg mov xchg outsb daa or fiadd lods adc and lcall addl test scas fnstsw pop pop or xor jnp pop push leave bound outsb dec test push mov js rol push dec cmp ret pop sarb add jg (bad) ds inc lcall (bad) loopne shll insb xchg inc sbb mov mov or xor call pop pop outsl pop or inc or imul cltd xor rclb data16 inc pop sbb stos adcb cli add jecxz adc lret jg jl push cmp adc sub fwait push add jecxz mov pop arpl mov cwtl aas lahf adc sbb aaa insb pop pop aaa push jmp (bad) and hlt popa repz or push in imul dec sarl add iret cmp cs insl sub push adc sbbb data16 in jno add add fwait divl pop mov dec mov out js pminsw inc sbb dec or daa mov ja push popa sub mov (bad) or add scas push push and pop push mov add cmpsl xchg subb or sahf jne ret jbe aas mov jg arpl pop and lcall push or pop push add test inc data16 mov sbb int3 inc push cmp cmp (bad) mov cmp data16 notl adc shrl or call pop inc adc or sbb sub sbb add shr xchg mov jnp outsb sti cmp and or push das (bad) loope aad pop pop dec push add xchg xchg fildl fiadd stos pop mov cmp pop jg ficoml pop sbb cmpsb mov (bad) arpl pop dec mov mov jg add or imul cmp das adc jo lods je push ret outsb mov inc sub mov and out daa mov (bad) ret mov js repnz mov jb xchg loop mov cmpsl push jmp adc xor push lods inc fcoms or stos mov push pop jnp inc and daa push stos popw adc jg mov jae mov shll stos inc or and das adcl (bad) ja mov movsb popa daa mov adc in fs cwtl loop sarb addr16 push cmpb das ds (bad) pop xor push (bad) dec pop inc dec fsubl and ret push add jns call sbb cltd mov or aas imul cmp mov mull dec addl adc xchg push or push imul or inc sbb std jg and add cmp aaa mov js sbb cmp or jg divb push jb xchg (bad) stos adcl repz xchg add adc inc pop sub rcr adc push push dec (bad) mov ds adc push jns cmp dec sti push push dec push insb mov jae addr16 inc pop xchg adc fcmovnu dec (bad) adc sub shlb jge imul (bad) xchg push fiaddl cltd push jne adc insl xor mov and insl faddl stos imul negb addr16 jns adc (bad) fsts subl mov mov imul jae jns fucomp adc mov push push dec xchg outsb arpl push add sbb xchg dec jmp iret adc cmp pusha or dec mov gs mov (bad) arpl mov movsl jnp add sbb data16 inc imul xchg outsb jb dec pop push sbbb lds xchg mov xor pop imul lds add js sahf loopne add sbb cld insl inc fisubrl ffreep sub add push cwtl (bad) dec mov sub sbb jp loopne push push or dec ror xchg push xor sub outsb xchg xchg adc jnp js outsb adc je xor add jbe imul xorb push int imul imul sbb jo adcl mov push adc insb add mov pushf (bad) mov cmp adc ja (bad) push dec add mov xor jmp js je jbe dec xchg push cli push push sub add pop movsl cmp xchg sbb cmp out gs imul mov adc fsubrl add mov gs add or pop add jb lods decl xor pop push pop js inc jp xor arpl ja mov add js xor arpl fs jo adc pop or xchg loopne or enter add mov cmovns adc cmp iret ficom test cmc or fdivrs jl adcl and cmp orb orl scas add mov or add sub test add add adc testl mov (bad) jmp and lds mov or mov add add adc addb sub mov xchg xor or sbb jb test sub pop xchg add popf sbb dec xchg inc (bad) adc xchg lret enter dec sbb pusha xchg jb fidivl or mov addr16 (bad) adc add or mov dec push in popa popa sbb push inc loope mov imul fwait cmp fistl pop sub cmp in or bound cmp leave or push mov sub xor fildll add jne and (bad) cmp sarl std or or pop bnd pop sbb push and dec sbb xor movsl push js mov mov nop mov (bad) ljmp call cs int3 push cmp movsb imul in iret jge sbb mov lods and mov cmp sarb (bad) pop (bad) std fs lahf into adc (bad) shrb adc lret xchg jg sarb dec ror dec adc add in fistl mov gs dec mov bound out call call mov (bad) dec dec xor xlat data16 popa mov xchg sbb lcall clc xlat mov lcall mov mov in cmpsl loop mov inc icebp fimull mov lea int3 (bad) scas push cld (bad) mov ljmp out arpl aad out pop lret jge mov mov int3 sub nop aaa jne in mov je rorl fnstenv dec test or es inc jae test inc inc push jge mov ret gs jnp sub sub int3 push mov ljmp jnp call fildll ljmp (bad) sbb fdivrs jb fldenv and in (bad) aaa pop loope mov or xchg mov (bad) cmp push mov repnz sbb xchg fwait rcl fs adc notb idiv lcall stc fs rol loope jp push aaa cmp es loopne jg mov mov pop pop adc (bad) sub or aas xchg (bad) incl fistpll add hlt xchg cmpsl jecxz sti mov scas stos jle (bad) jmp or into sti loope,pn mov loop pop lods mov or es (bad) (bad) jge xchg icebp adc xchg (bad) adc loope and iret (bad) mov test cs insl std cmp jmp les lcall and ror arpl fwait inc or int cs ficompl sbb and lret push and pop cmpsb add and mov (bad) jmp sbb push insb adc mov inc push adc sbb cmpsl (bad) (bad) (bad) (bad) mov jp repnz mov aam pop dec jecxz fsub hlt rcrl cmpsl mov inc pusha mov fcomip incl shr stos cmp dec push lahf test sbb (bad) (bad) (bad) mov (bad) or cmp xor dec mov dec jmp sbb jle cmpsb mov bound (bad) jg push push lds out xor push jne mov xor es lahf lahf mov idiv (bad) (bad) call adc mov repz les cmp js push sbb xchg mov jg mov imul jae loope or (bad) (bad) mov and push das out or adc in and lods mov (bad) mov push pop ja scas or popf xchg jge cmc roll (bad) (bad) lcall (bad) (bad) test dec outsl addl xor push xor test inc pandn sahf jns divb pushf jno jae mov mov add jge mov (bad) (bad) (bad) call push xchg (bad) and jecxz mov fcmovbe push arpl ret outsb sbbl cmp jmp pushl jmp dec ror leave pop xchg add (bad) decl xlat mov ret or pushf jbe mov (bad) (bad) (bad) dec cmp jge es pop mov and scas out inc mov jp scas add in leave or mov aad in inc inc es xchg cmp (bad) fcomip lods mov lret test clc inc sub mov pop stos repnz call push fwait out jno repz cs (bad) loopne fs pop test jno out (bad) (bad) (bad) decl inc repz mov (bad) cmp and test sbb inc movsl cmp das mov jge adc popa mov sbb ljmp decl incb (bad) repnz lret mov mov or repz gs stc sar int3 bound repnz test add pushl shr ret jne xor dec dec dec dec mov dec inc adc mov xchg insb cmp pop xor jb lds mov bound jbe adcb iret jge mulb push loope pop arpl daa xor fild (bad) fisttp dec inc mov pop in test ror int3 test cltd xchg (bad) aas inc sbb xchg or pop mov jge arpl cmp (bad) (bad) ljmp mov inc cmp cmc jmp pop repz aas inc inc inc pusha cmc lea push iret (bad) inc or pop sbb cld jge push or xor cwtl mov xchg out cmp bnd out sbb adc jg outsl (bad) mov xchg fnstcw daa jnp push sub xchg or sti adc adc xor loopne or call cmp xchg icebp mov xchg les movzbl loopne in pop dec adc xchg cld shrl outsb and (bad) pushl add cmp test mov mov cmp inc (bad) (bad) (bad) (bad) dec pop inc (bad) test cli popa loopne rcr (bad) gs push pop imul sbb (bad) aas push cld (bad) sbb mov insb add adc add insb dec push std (bad) pushl pop addr16 loope shll push sub sbb add movsl out dec mov das pop (bad) (bad) (bad) cmp dec das mov das into mov cmp cmp lock (bad) jmp bound daa xchg lret sub xchg mov jg ss cmp (bad) jbe jb dec dec xlat mov int into ljmp es in (bad) (bad) mov insb inc mov cmc jp xchg ret dec aad fmuls hlt addr16 addr16 mov mov xor dec int3 fwait hlt jmp out clc sub out mov dec iret jl fsubs and clc xchg pop jg mov out xor dec sti jmp (bad) or dec (bad) arpl pop add fcmovnb aas sti incl mov mov pop jge (bad) cld sub (bad) (bad) (bad) jg sarl cli cmpsl icebp movsl imul mov loope int3 pop cmpsb pop inc lock push xchg std mov ljmp das push sbb jo (bad) mov dec mov shrb pusha xacquire dec ficom inc cld movsb fdivrl xchg mov jle (bad) (bad) ffreep sti adc mov fwait cli jns sbb mov sbb (bad) (bad) (bad) fnstenv adc sbb jge xor push js (bad) repnz fbstp daa adc js adc leave push pop std (bad) fisttp xor sbb jecxz cmp loope mov ret movsb (bad) (bad) lcall das mov loop aaa mov cmp mov popf ret mul (bad) decl inc jmp xadd loope fisttpl push xor mov movsb mov (bad) aas popa mov xchg fdivrp mov pop das jmp xchg call ror popa mov mov sub pop lock pop jecxz cmp insb lret xchg dec lcall incl xor jbe or push aaa jecxz cmp sub fcmovnb call stos cli mov dec jmp or dec mov movsl jge aam sti cs cmc sbb js (bad) in mov es adc cmpsb cli or ss gs sbb sbb int3 push add insb nop gs jg mov push sub pop lret cmp mov call sub popf cmp xor mov fs mov je add push fwait lea cmpsb jg incl (bad) jge inc rol (bad) jno popf cmp lods (bad) (bad) (bad) mov mov decb (bad) repz cmp inc mov mov cli fs xchg inc mov loop jl sti (bad) cmp cltd imul jg jge push mov (bad) call add rcrl outsl in stc out push addl pop push mov mov test mov aaa subl imul lods mov mov sub xlat loopne xchg cmpsb xor adc test lret (bad) lcall test sbb je mov imul cmp (bad) push mov adc fildll inc xlat clc cltd mov sub inc fs pop mov mov mov cs cmpsl mov dec repnz push jmp decl lock fwait and enter or inc dec ret ss mov inc lahf std or pop sahf stos jge out cld enter mov fcomip call add int3 repnz mov pop pushf dec push les and inc stos test push test jnp pop data16 dec loopne sub call pop mulb mull ficom stos ss (bad) (bad) (bad) push pop inc lret xor repz imull jmp xchg inc (bad) adc adc adc loopne pop add or clc jg xchg xor add jmp pushl aaa (bad) lds jecxz outsb cltd mov sbb inc dec dec bound push cld mov movl mov jmp xor xchg mov xchg in lcall int3 fs adc outsb jge int cwtl push je (bad) push lock shrl call mov pop dec mov and push (bad) (bad) (bad) lcall fs inc popa rorl call lcall xor call lcall stc dec adc adc or mov and inc arpl mov jle xchg je loope push or test mov fnstcw fild aas or int scas xchg cmc repnz (bad) fmulp (bad) sbb cmp mov out add clc (bad) (bad) decl aad pusha mov xor push ljmp insl xlat enter mov ljmp xorb sbb jmp jae test lds into (bad) (bad) (bad) in jle pushf jge mov xchg mov bound mov cld in mov ret (bad) (bad) (bad) jns pop loope in push lret (bad) je mov pop ds imul jl test lods fbstp fs mov stos dec ljmp sbb cmpsl mov faddl decl out mov in sti pop inc out jae lods push repz aas xchg (bad) jno ljmp rcll stos cmpsb jl cmp loope movsb stos dec loopne outsl xchg dec adc ret rcl in lea add pop fwait pop fldl pop and xchg xor adcl (bad) in lods iret cmpl xor adc loopne pop ret push jecxz sar sub mov fimull push lock rolb sar fcos decl adc add xchg pop jge add jmp jge rorb cs in (bad) (bad) (bad) (bad) mov jae mov sub sbb inc das std popf mov into jmp sub sub (bad) decl add repnz aam fsubl popa mov (bad) (bad) push stos roll push cmp gs mov mov xor mov push cmp and notb cld lcall dec sub adcb addl (bad) (bad) (bad) jg jecxz inc daa mov (bad) cmp xchg roll mov lea outsl cmpsb lods sub hlt sahf sbb imul lret int3 incl sub lret test xchg lcall or (bad) decl xchg sub xlat adc imul repnz frstor push pop xchg outsl pop jns,pn adcb jge mov xlat add outsb push mov jg mov int3 das (bad) mov mov sbb inc add es mov std (bad) incl and lea push jge xchg (bad) lret sub (bad) ljmp scas jmp add cwtl dec xlat repnz and push push mov mov aam out imul fcmovnb movsb mov std je ss dec pop jge decl inc je pushf (bad) fs icebp sbb jmp xchg repz aas call xchg or (bad) in and mov movsl loope notl dec mov out insb mov icebp out push (bad) pushl repz outsb shll stos or rclb ss hlt jl insl gs xor xchg aaa jne cmp stos jle mov sub in pop cmp adc lcall sbb scas and (bad) (bad) lcall out xchg jns cwtl sbb fsubs lcall mov (bad) in call mov lods lds mov (bad) (bad) jg pop rcrl dec mov popf cltd jo stos fdivrs lahf jno imul cmp cmpsl sbb or xor jp push or (bad) jecxz std or ja jge pop and loope repz and jle,pt (bad) jg dec fs pminub jb in inc sub ja sub jg (bad) mov (bad) mov std xor ficom add mov div (bad) jmp lods pop call repz add fiadd jecxz or jecxz (bad) call popf sub lcall add push cmpsl xchg jo xor xor dec test pop leave in dec jg loopne decl mov outsl enter sti push and idivl xor (bad) lcall insl shl lds cli inc sbb mov loope xor ss lcall adc daa xor inc xchg xchg (bad) (bad) (bad) (bad) cli cwtl adc testb lods lcall inc cmp and iret pop inc addr16 dec (bad) aas sti cmp pop fbstp dec mov or add inc or jg mov lods adc xchg and fcoms (bad) call lods insb or inc scas jno loopne mov jge lods add clc adc jbe jnp,pt add mov adc xchg loop fwait cmc ljmp (bad) mov pop or lret jo pushl std mov pop sbb xor repnz mov pop ljmp jbe lds and dec pop mov push or (bad) (bad) push and dec cmc push push orb add sbb shr dec push jnp add loop cmp (bad) dec jb lock and ljmp in sbb mov dec sbb out mov lcall sub icebp pushf mov sbb lock call dec (bad) loopne fistp cmp xchg fidivrl mov xlat cmp sub push xor rcll or sti xchg test jo pop cmp mov mov addr16 aas or mov sub sub mov (bad) mov clc ret pop mov lret outsb xor bound aam cs ret rcrl push dec fdivrl jbe pop mov push pop insl inc jg jmp sub fcom test (bad) (bad) fidivr jl lcall int fldenv jmp mov arpl sbb xor (bad) inc addr16 pop in iret cwtl sbb cmp pusha mov lret (bad) aam dec nop (bad) nop sar mov push insb inc adc dec mov cli push icebp lock sti xchg jo js (bad) (bad) pop pushl les lcall xor dec add xor stc aas pop dec cwtl fucom imul in (bad) call imul mov jae jge cmc or (bad) (bad) (bad) pushl sbb rorb imul gs mov decl testb xor push sbb jne (bad) jg mov (bad) arpl jp lsl iret clc popa icebp je,pn or and push cmp xor push pop mov jnp cmp scas jge addl jno mov fwait or add mov or push (bad) call pop addr16 xchg das test xor arpl cmc in daa lret dec and mov mov call cmp cmp jge int mov fnstcw xchg mov (bad) lock dec das cmp ljmp xor rcll in adc jno cmp mov and xchg ja clc jg fild jp mov imull pop std decl jb jo push cli fidivl bound repnz decb jg fs aam add dec das (bad) add aas add aaa jno mov xor push xor addr16 mov insb inc adc pushl cmp xor in ljmp faddl (bad) push sub fwait push jae (bad) aas sti insl mov test popa popa mov test nop jle (bad) icebp push dec rcr mov imul das push in dec mov add clc mov hlt xchg jl decl dec mov and mov movsl in xor pushf sub std (bad) (bad) fmuls cwtl bound aad ljmp ss push jecxz ficoml cltd jg dec cld xchg out std (bad) dec xor mov (bad) (bad) (bad) jge cmp jae into loope inc push xchg (bad) sti pop shrl les (bad) subb add pushl fidivr (bad) jb test (bad) (bad) (bad) mov sub sbbl mov ja popf pop fwait mov mov stc adcl rcll xor (bad) mov cld call or xor xor loopne lret and (bad) enter aas adc mov std (bad) (bad) ljmp dec clc xchg inc xchg add push push jp mov mov xchg adcb dec fildl iret aam sbb lahf popa fmul inc (bad) ljmp mov jecxz in iret jl roll hlt jle (bad) into lahf clc or jmp mov dec mov inc and mov sub out arpl mov fcomip call add pusha inc negb fstpt arpl jle cli dec inc mov lcall xor pop jno in aaa xchg dec dec add pop xchg in mov push jno scas ljmp rclb pop or mov repz popa push jp pop add cmp push hlt clc adc enter (bad) (bad) incl rorb push or push iret mov push xchg mov pop (bad) (bad) ljmp imul je dec pop sbb cmp lahf dec mov (bad) xlat adc push (bad) shll and mov mov jg adc inc jno xchg adc mov aas xchg xor lds and (bad) insl xchg xlat test cmpsl pop lds hlt fwait jle inc bound rolb jmp dec xchg xorb lea lock and jge aas xor xchg daa add pop pop inc daa nop out xchg mov bound mov xchg adc jb push sar jmp jne or add ret pop cmp or psubusw mov test mov aas (bad) (bad) (bad) (bad) inc fildl enter xor push dec lahf jecxz add stos sbbb xchg fstl lcall shl jne aad mov sub pop xchg iret mov mov clc or mov jmp mov flds fs (bad) (bad) lcall stos out jmp pop pop cmp mov faddp fucomp (bad) xlat loop outsl bound xchg jge pushf mov in (bad) mov fistl (bad) dec pop jmp add xor loopne or xchg dec inc ficoml mov in and lds (bad) dec decb inc jbe cmpsl jg pushf add rcrl ljmp push push les or add inc or (bad) jmp and xor movsl sbb cmp es pop sbb (bad) xor lds orb aaa sub jg decl out jmp xchg fnstsw jge nop adc dec dec pop iret test ljmp pop (bad) repnz sbb sub pop cmp (bad) (bad) pushl stos or add mov pop les mov xchg fxch add scas pushl sub pushl xchg in mov js sbb (bad) (bad) (bad) in sub jge push add hlt push sti mov bnd je cmpsb xor movl orl mov (bad) mov gs jl ret sbb pop nop (bad) lret ljmp outsl clc and cmp xchg insb cmp rclb cmp bound dec mov (bad) (bad) (bad) cli ds inc (bad) push mov scas incl cmp aaa jmp xor stos dec inc mov (bad) cmp lcall add mulb das or ljmp addr16 push clc (bad) incl nop pop popf outsl mov (bad) popf rol mov loop loopne sub (bad) lcall (bad) jo jns gs imul pushl pop or cmp sbb cltd lds les push stos push testl mov and arpl xchg movsb or sti cmp pop pop out imul (bad) push mov dec xor cmpsl sub cmpb loop scas mov not and fnsave cs test mov and pusha add sti and sarl in dec clc push sbb adc mov testl leave xchg addl pop add aas mov aad cld mov int3 scas js insb mov xchg pop loopne (bad) mov pop aas mov pop stos icebp add fisubrl movsl (bad) call push adc xchg arpl push push ss (bad) scas fsubrs lcall mov loop xor pop (bad) (bad) (bad) cmp scas pop lret push sub lahf xor icebp push loope xchg push push data16 incl cs push lds and jmp sbb xchg movsb lock xor fdivrs fldt adc pop shlb adc in jo push xchg rcll loope pop inc bound int3 jecxz xor xlat lcall (bad) cwtl push push decl mov test adcb cmpsb (bad) (bad) (bad) (bad) mov xchg cmc dec test xchg test lret sar dec jge pop dec (bad) dec push push and stc lcall pushf mov cmpsb mov jl and (bad) aaa and cli fcomip mov dec mov lods (bad) mov call scas add (bad) (bad) cli dec ljmp movsl add cmpsl (bad) enter ljmp jmp push (bad) mov and or or pop aam pop and mov fistpl cmp bnd dec or sbb cmp bnd (bad) pushl incb out (bad) sbb jne mov lods push sbb (bad) ljmp mov dec fiaddl push into rorl fmul mov (bad) dec decl pusha adc dec and jp ret push mov or leave inc cmp push aad xchg stos lcall sub insb movsl stos movsb in cmp pop adc cmp dec imul add mov ret (bad) mov xor ss aam push lcall mov jp cmp sbb in (bad) jbe cld add fcomi or adc push sub adc cli mov push cmp mov adc push push scas push xchg mov xchg clc (bad) mov mov add mov out out outsb dec mov test mov lcall test fsubrl mov pop xchg pop stc xorl jl adc ljmp mov pushf and or call sub (bad) rol mov je pop lcall fimull neg cmc inc lcall (bad) jg inc push inc rcrb pop addr16 jb jns dec lahf adc orl jmp (bad) xor xchg sti mov xor push sbb aam ljmp insl outsb sub sub inc sbb mov mov and popa (bad) jge (bad) (bad) mov rcr lds mov iret adc ffreep add mov inc (bad) (bad) decl arpl xorb rol fmul or cli (bad) incl sub inc aad lea dec bound cld jns out dec (bad) (bad) (bad) adc dec lods popf fs mov cmp mov jle (bad) lcall add sub push xor sar dec inc int3 imul aaa mov js aad imul add xor ror xchg mov pop arpl out cli leave decl repnz into mov loopne (bad) (bad) call jp iret aad mov lods sub xchg bound xlat pop push cmc rcll sub scas js aam push movsb mov or push mov push dec or pop int3 movsl out loop out adc lods popf cltd movsl fs (bad) fbstp cwtl fnstcw inc aad or call lret dec es loop lcall es scas data16 and adc and test insl and inc sbb pop xor mov or inc dec out jb or add pusha hlt cmp in (bad) (bad) jmp (bad) repnz repnz repz imul cltd cmc leave adc lret (bad) jg cli das cli (bad) out daa push inc mov jecxz adc sbb xor adc push jb sbb xor sarb cmp ljmp ljmp mov lret inc ljmp jecxz push and stc adc (bad) jno test dec xchg adc mov lcall xor pop dec add subl out jge pop test cmp (bad) (bad) pushl shr pusha mov cmpsb test xor subb arpl inc cmp insb cmp add xchg mov xchg add out pop dec cli fiadd call std mov jns pop cmp mov pop pop xor jne sbb stos stc inc shlb mov (bad) outsb sarb jnp cmp mov (bad) mov pop mov dec cmc mov mov jg or add in mov aaa (bad) dec stos xor inc loope int3 push mov aaa and xchg outsb cltd adc (bad) cmc fwait sub sbb mov inc xchg incl mov lret (bad) icebp mov lock (bad) dec icebp fcos incl jecxz xor dec inc jbe aam loop and aad adc loopne fisubr ja add cmp push sbb jle in mov hlt add sub mov mov fs push inc adc hlt (bad) or (bad) (bad) (bad) (bad) jmp cmp popa push rorb ficompl aad mov push fstl mov (bad) mov jo loope dec out cmp mov sti jo daa xchg mov (bad) (bad) call test test fldl2e mov fldenv cmp (bad) call cmp bound cmp iret loop sub pop dec inc adc test fstpt xchg mov das (bad) (bad) aas repnz pop int cli jg mov or pop outsl je dec mov jmp cmp jno xchg add int3 sub push fadds inc fbstp mov add aad cmp mov jns push cmp mov fdivl xor loop jg (bad) decl in pop add das sub cmp je xor stos cmp jp jge lahf out movsl jl sbb loopne jg aad mov fcomip shl xchg dec loop pop lret fsts sub sbb mov mov adc push in icebp pop push jp,pt jmp sbb sub ljmp add jge push xlat push push xchg inc dec test fnstcw or sbb mov cmp (bad) iret mov jl ja jmp dec or mov adc iret (bad) (bad) (bad) (bad) cli and adc stos inc dec loope sti push lods add mov fistp push les add stos pop stos push repnz outsl loop sahf leave adc xor mov (bad) (bad) fcmovbe and mov xchg and sbb pop jmp sub int xor mov incl push (bad) mov fsubr jns rorl mov test push pop (bad) (bad) (bad) jmp mov mov shlb les mov inc in (bad) jmp fistp pushl in adc xchg loope inc pop (bad) (bad) jg sti iret or ss cmpsb addr16 xor pop out iret add push popf pop (bad) (bad) (bad) (bad) jg call insb adc pop cli insb shrl scas mov inc mov rol rcrl decl (bad) popf add jecxz movsb mov lea das rcr sub add ljmp fisttpl lock pop mov std dec sbb cmp test aas push jo jl insl jne adc rcl sbb jg sbb cmpsb sar clc lcall leave pop call aam inc aaa xor push or xchg sbb insl shrb shlb cmc inc sarl mov aad (bad) call clc inc add shrb inc icebp sub adc (bad) jg fdivp push add ret cld scas mov mov cmc push (bad) (bad) (bad) jmp ja mov pusha adc mov (bad) inc push ljmp inc scas sbb (bad) push add out popa mov movsl rcrl ds mov ja arpl pushf push or call add icebp icebp pop dec push orb (bad) (bad) call sbb mov xor mov xor repz subl pop mov pop or jno (bad) call into insb mov scas push stc xchg popa cmp xchg cmp inc shrb mov jmp (bad) (bad) (bad) ljmp jle mov jmp xchg dec xor xchg jbe cld add (bad) jl mov xor pop jg (bad) (bad) aas add mov xor sbb sbb data16 add inc mov pop push dec pushf mov imul fdivr not adc cld flds (bad) jp inc mov mov (bad) (bad) (bad) lcall fldcw inc mov lods jnp pusha shr cmpsl inc sarb adc push scas clc jg sub test sti inc ljmp or mov or ds jle out hlt dec pop sub (bad) (bad) jmp stc mov lods sti xor out hlt andl xchg aaa jl or mov dec jbe loopne jg ja fmuls push push hlt inc ds inc add imul stos sub jno push in push (bad) sub jle sbb cmp aam (bad) stc xor bound movsb (bad) jmp jecxz xlat fbld (bad) mov mov pop les add ja cli mov out imul imul je mov out popf sti cwtl clc push popa dec dec dec cmp lahf sbb imul cltd scas mov jmp push pop add jbe lcall fcoml aaa jmp sub shr adc dec mov cmc jne inc sub jge (bad) (bad) pushl pop or les jmp (bad) xor cmc add mov adc ja (bad) cli and into mov mov hlt dec and ljmp xlat bound outsl add pop pop (bad) inc or (bad) (bad) incl lods sub jg decb sub arpl mov and jns movsl icebp shrb call cmp xchg mov adc insl pop mov sbb sti cmp add (bad) cmp fisubl mov jne add and addb mov flds fs iret (bad) fstps and push sarb decl aam sbb mov lahf or fild pop mov outsl pop sub outsb jo call ljmp ja pop xchg aaa mov pop push daa sarb mov (bad) decl xor pusha cmp (bad) rcrb stos dec cmp mov adc lods jbe mov mov sar loop mov jmp add jne (bad) jmp cmp or mov or xchg adc adc inc jo push insb add cmp arpl xor idiv (bad) jle cmp jae adc or popa jle xchg pop lret and or jae pop dec aaa imul add fidivl (bad) mov loopne or dec lods jecxz add (bad) rcrb imul push lock fbld in (bad) lcall jge push inc (bad) aas daa test xor add (bad) call xor xchg push cmp mov jmp adc ljmp dec iret ret jmp in rorb cmp enter add and mov (bad) ljmp int3 jns,pt xchg mov arpl gs fisubrl push into dec mov subl decl aam xchg add jecxz fcmovu adc (bad) cli push pop mov sbb (bad) (bad) (bad) decl push or and adc repz pop xchg dec cmp in cmp xchg jge lds mov adc insl push dec or (bad) subl out hlt lock cmp loopne scas enter jns std scas mov mov lcall loop cmc icebp inc bound loope cmovle or cli lcall inc inc sub mov lock call xor cmpsb imul scas aaa inc sbb jns pop imul test test or imul mov mov dec inc pop sbbl in jns jl dec pop mov pushf std (bad) (bad) incl neg and das dec mov mov (bad) sub adc cmc jo (bad) (bad) jg mov incl dec pop and xchg or add and or mov out sbb and add sub adc (bad) jmp fs (bad) js aas popa push (bad) lock fwait cmpsb (bad) cmpsl movhps repnz mov (bad) dec adc xchg nop mov add push aas pop cmp test and push or es leave cmp xchg xor mov shlb mov in (bad) (bad) (bad) out add mov jle test mov mov movsl xor les xor sbb out rcrl cmc insb jmp (bad) ljmp into mov int sub (bad) dec sub (bad) pushl xchg fbld mov push or mov in std leave or decl (bad) (bad) loope dec inc mov push aam (bad) pop lock lgs mov mov subl xor xchg xchg roll pop sub addl inc je shrb (bad) add scas lds sub aaa (bad) (bad) jmp in mov daa sar pop mov mov lds aam inc and call and sub jb add dec iret and (bad) jmp sbb ljmp clc fbld push js lahf data16 addr16 scas sub (bad) incl mov dec fidiv lds xchg loopne test push insb sbb cmp imul clc pushf mov push repz (bad) mov (bad) (bad) inc mov cmp xor push pusha or notl mov push xchg lret test inc cld fistl inc sbb jecxz int3 dec data16 (bad) (bad) call and dec bound test mov push and inc divl (bad) aas bnd leave pop mov out in pusha xchg sbb mov popl repnz or push inc jnp jne in adc je cmp ret add loop pop xlat nop pop sub jno sbb xor lret pop push push pop stos (bad) divl in adc icebp mov xchg xchg sbb fcoml addl stc gs mov mov pushl sub inc aas pop scas (bad) jmp dec mov mov jne fdivr push (bad) (bad) (bad) jg mov lds lock nop in pop cld push clc (bad) loope mov xorl decl std xlat xor fstps inc repnz sub call push mov mul sbb sbb fiadd dec pop xlat mov div hlt jg xlat sub xchg dec mov mov jge (bad) (bad) fist mov dec mov repz je lods jmp es mov and outsl xor or mov or sti mov je dec jge lds in xorb ds sahf push mov jb jg (bad) incl sub xchg out jb ljmp sub pop pop dec rol sbb pop (bad) std cmp pop dec fldt adc rclb stos jg (bad) lcall jmp mov movsb mov fistl xchg push xorl lcall fisubl cmp pop sub add neg and ss xchg sbb and divl or push dec sub inc cmpsb and add (bad) mov or (bad) sub ret mov dec jle loop inc lret in add stos lret mov (bad) (bad) fist sbb arpl mov xor mov and cmp call inc kmovb xor xchg cmp into mov sub sbbl (bad) (bad) mov add leave push int3 (bad) mulb cltd mov (bad) sub lcall ror cltd or ret sti fadd jne xor push mov and inc lret xchg dec inc mov adc scas clc jmp jp int sbb cmp xchg xor xchg and (bad) pushl popf mov mov lock mov andb xchg in std (bad) jg in aam shlb or pop add sti add inc fdivrl (bad) popa push jo (bad) adc js jae push iret push sti mov shrb stos xor iret or push pop repnz or add mov leave cs sub test push inc sub (bad) cmc mov adc pusha pop ret cmc jg add dec rorb call fcomip pop jl lea repnz pop mov inc push jo,pn mov (bad) incl jl popf dec mov and popa mov sub ljmp mov ror pop cmp mov (bad) or lcall jecxz sub push pusha pop sub idivl cs (bad) (bad) call sub or test xchg stc mov repnz in ljmp hlt cmc cli popa sarb dec stos lods jge sti in jbe ret and or pop cmpsl bound inc (bad) (bad) or add xchg ss xor jmp lds pop repz daa aas xchg (bad) lcall inc xor insb and (bad) jmp scas popf adc pop fs mov scas adc xchg cmp jg sub mov push imul xor adc js (bad) call loop dec (bad) cmp and rcrl cmp pop (bad) (bad) mov ficoml push cmp ja cmp mov (bad) lcall inc cmp ss mov and jbe fstpt (bad) (bad) mov xor push or xor lret aam js mov inc dec les das pop shll push pop add xchg cli ret push adc mov popa repnz cmpsl adc mov (bad) (bad) ljmp pop mov rcrl test and outsl mov jecxz mov (bad) (bad) ljmp lea cwtl add scas sbb pop add lods push insb (bad) (bad) jmp orb mov push pop or push test sbb mov (bad) (bad) pushl xchg rcrl lret and xchg jnp push rorl decb add mov inc jecxz (bad) mov cmp cmc jno cmp gs stos sub pop fiaddl (bad) mov jo pop sti dec pop push push push loop (bad) (bad) mov (bad) fsubrl lret push in test (bad) outsl cli (bad) clc lock popf cli mov lahf push pusha jg lods scas int3 xchg jg out adc mov sbb into std cs in outsb jg cld push cmpl popa xor mov rolb (bad) (bad) (bad) lcall or xor rol ss push mov add movsl ja sub adc aas repnz (bad) fidivl das xor sbb ret scas push cli jl in cmp push lcall decl or mull out inc sbb imul scas lahf push out mov (bad) sbb idivl xchg aad ja push adc pushl loope loope inc pop in push and ljmp fidiv (bad) (bad) lcall pushw mov scas negb adc dec aam sub sahf xchg sti dec jmp pop hlt popa ljmp lea sbb (bad) cltd pusha arpl or (bad) mov out mov mov clc (bad) (bad) out mov (bad) bound pop or fsubrs lcall push and icebp (bad) lcall jl push ficomp xor jge insl cmp cmpsl inc std sbb jne aas imul mov roll nop insl cs inc pop cmp incl movsb pop inc test (bad) dec jge jnp push js cmpsb in xor clc push push mov (bad) (bad) out adc sbb repnz push xor outsl fldenv xlat pop and lahf std call mov movsb push mov xor loope cmp (bad) in iret adc sub lahf xor and adc jbe outsl add decl or shll or repz imul shlb cmpsl push push sbb mov fcmovnb into mov cli cs (bad) (bad) (bad) jmp dec rep xor or xor inc movsl clc iret sbb mov or incl (bad) jnp sub add inc add mov mov add ds (bad) (bad) lcall je test test ja scas out pop inc and or loop push lcall jo bound push xchg sti mov and psubsb jmp (bad) enter movsl ljmp and lahf in lock aas sbb into (bad) and adc icebp jg cld push sbb jbe fsubrl xchg xchg and fs cltd fistpl inc addr16 outsl xor nop je jg cmp (bad) (bad) (bad) adc (bad) call lahf mov pop xor xchg loope adc cltd nop in aam decl cmp (bad) push jbe xor or (bad) (bad) (bad) mov and lock rcll push orb add jbe push (bad) push mov lcall call shrl mov jle mov cmpsb cmp insb cltd imul (bad) (bad) (bad) mov lcall mov stc js repnz cli repz fsubr movsb call in sbb pop pop lahf pusha xor push push fwait cmp sbb fist or (bad) call rorb outsb mov cli or mov add push sub or cmpsl out xor loop popf std leave mov push dec aam push in adc mov (bad) pushl in pop mov mov fwait ret push dec xchg in inc adc std pop push mov add pavgb pop push lds cli mov loop popa insl int lcall out fcmovnbe adc mov push sub aam sbb in push mov enter mov jmp mov imul rcl shrb aas ret icebp fxtract push mov fwait jge nop stc dec (bad) (bad) (bad) (bad) mov mov mov jbe xor pushf mov jo fisubrl dec dec jmp (bad) sub movsl mov pop std mov lret add adc (bad) inc (bad) call mov mov inc mov (bad) (bad) jmp jl rcrl (bad) inc es lods fucompp mov sbb cmp xchg (bad) mov push xchg mov jge mov imul inc call adc (bad) (bad) ljmp fdivs insl pop sarb inc rcl add stos (bad) clc loop xor lcall mov cmp bswap in test clc cmp jnp int3 push pop mov cwtl insb xchg mov adc lock ljmp shrl sbbb ja xor xchg mov pop lock jge adc push loopne pushf push pop loop push mov shrl (bad) jg insl lock push int xor in inc leave xor addr16 (bad) (bad) incl in int and btr pop popa ljmp sti sub add fildl push hlt dec rorb int cs cmp push push popa sub call or jg sbb or cli (bad) stc or rcrb out dec pminsw imul clc (bad) mov stc incl sub rcr test sub fildl push cwtl cli mov das mov (bad) aas adc imul (bad) dec inc (bad) call jno sbb ja mov inc mov xor (bad) fild loop pusha loopne out adc dec div push rcrl iret (bad) out mov and jbe (bad) loopne xchg in es je (bad) jg (bad) sbb lret xor out jp repz cmp jmp and push mov jmp add cli add dec xor jg sbb mov (bad) aas add out adc flds mov int3 pop and cmp (bad) jg dec mov pop push and and cmp push icebp jae (bad) inc rcll out inc js xchg push dec pop adc cli stc pop adcb mov outsb sarb fiadd mov (bad) in das es outsl cmp icebp pop push cmp xchg mov pop cmp out arpl push into cmp (bad) inc pop push sbbl sub movsl xchg and fdivl rclb (bad) jmp inc fdivrp jo mov xchg or xor lods cli aas mov stos mov stc and fldl sbb dec push (bad) (bad) incl call pushf js mov in and jecxz pop mov lret scas mov pop xchg xchg and jle gs cs dec lods (bad) lcall or pop pminub mov xchg stc xchg xchg cld (bad) (bad) (bad) lcall leave lcall (bad) std outsb fbstp xor adc push pop dec test xor mov sub (bad) (bad) ljmp push cmp mov cmp nop mov (bad) cli jo fxsave xor jb (bad) aam push movsb hlt mov pusha or xor (bad) aas and mov jae xsavec daa (bad) aaa js cmp mov push das fildll ret ds sbb push sbb inc xchg inc mov or xor ja mov adc xor aaa sub pop pop adc fbstp mov mov mov (bad) stos insb ret (bad) out andb out pop add lds (bad) (bad) ret daa fprem1 adc inc cmp in xor pop out mov (bad) (bad) jmp sbb or iret psubsb fmull jo (bad) pop sub std mov lahf std or xchg cltd cmp clc push mov (bad) (bad) ljmp movsb or push and int3 add xor rcrb cwtl leave popa mov or in dec jnp cmc call adc adc or jb test outsb push std hlt jo add pop cmc jmp adc pop pop mov xchg or cmc inc fwait mov (bad) aas sti lcall pop add std (bad) push jge pop add test and (bad) (bad) jmp popa sbb imul iret pop xor cmp jmp (bad) push and jne cmp mov decl sarl insb jmp cld xchg add lock in push cld mov xor stos sahf adc repnz lahf xchg jo sbb lea sahf fsubl pop sub xor mov sub cmp sub jg (bad) (bad) (bad) mov xorl dec mov in cmpsl js pushw xor sub lcall jp stos stos movsl lods lahf enter push cli (bad) (bad) pusha fwait in or in xchg pop mov jecxz and dec stos in out lret mov addr16 js clc movlhps les rcll sub (bad) mov inc xor inc jge movsb stc mov adc (bad) mov iret (bad) clc mov xchg (bad) hlt (bad) (bad) decl mov push rorb inc mov cld pop jecxz int3 cmp add sub adc push dec gs or jnp,pt mov or fstpl in ja jp (bad) xor cmp sub icebp mov adc lcall stos outsl popa hlt pusha xchg pop xor icebp xor (bad) fcomip jo xlat mov mov fistpl (bad) sti xchg adc dec gs push and loopne (bad) decl push add adc sbb shrl adc push cmc jg cltd push les stc hlt add shr incl cltd jo xor add popa and and lcall cmp mov xchg mov mov out popa call call sbb sub hlt jno pop jb and and test ljmp xchg sbb mov sub jge cs fcoms pop pop mov add (bad) jg xlat (bad) (bad) out decl rorl sbb xor ficompl das rcrb jl mov and mov sbb pop jl and aam ss pop push pop and out in mov movsl rorl bswap pop adc xorl pop dec dec popf mov sarb (bad) mov (bad) clc pusha test lods and out xchg dec cld mov jg lret clc (bad) call sbb sti mov mov addb lods stc sbb mov mov sub cmc loop out cli lret xchg cltd pop pop test lret cmp fstl (bad) pushl xor js push cltd add mov fisubrl clc decl (bad) cmp aaa stc ret cmp and (bad) lcall call mov mov sbb hlt inc dec cli pop sbb adc cwtl jg add adc mov sbb jmp mov mov test xchg dec (bad) movsl pop lock pop (bad) hlt sbbb mov sbb dec mov and insl (bad) decl jbe and dec add jae movsb out push push sbbl or pop push add jl jmp out std das sub fcoms jg jecxz add shll call mov cmp and mov insb xchg pop mov jecxz arpl add jae iret cltd add adc cltd and jl lret movsb incl aam (bad) stc inc dec loop jns (bad) (bad) (bad) dec mov mov stc sub mov jb in iret ds fs pop pop movsb push pop add fs mov pop mov jae jb pop popa cmp clc jns loop sub jg add (bad) out and pop sbb cld enter inc out daa add cmpl (bad) cwtl adcl jb lret mov jmp jge adc (bad) (bad) jg xor iret negl add dec add into pop dec mov pushf ja sbb lods in pop push cmc adc lret cmc adc out sbb stc jge adcb ds sub (bad) fwait mov aad loopne or and xchg jg (bad) mov (bad) repz imul pop outsb push insl shrb imul xchg (bad) aas sti out push (bad) jge jg inc xor pusha push cmp ljmp mov or lret in sbb inc push jo gs les and pop mov decl scas imul adc sub jg mov pop ss (bad) (bad) incl (bad) sub and dec lods mov mov cmp push data16 sub mov cltd push cmpsb es sbb xchg mov inc aam mov sahf add jle ljmp jne cld push mov (bad) in cli les sbb push and sbb cmp lods sbb dec out (bad) decl lds or jnp xchg ret pop mov mov dec and jp push push cltd push sbb daa xchg jg insl adc mov xor sub (bad) (bad) ljmp xor sbb xchg pop sub jae (bad) xor loop and (bad) lret mov cmc (bad) decl mov cmpsl fisubrl xchg inc pop (bad) mov (bad) ljmp in cmc xchg lods dec xor dec aam ja adc jge and (bad) (bad) mov mov (bad) insl adc lcall test mov mov imul iret test mov cs mov fdiv add pushl dec data16 xor test std cmc shl imulb xor add (bad) inc int3 jnp (bad) lret push add dec rorb dec rcll sarb pop sbb outsl (bad) push or (bad) (bad) (bad) (bad) dec adc add mov into ds sbb jae jge mov inc sbb cmp icebp repz loope shrb cld test pop fildll pop inc xchg sbb ljmp repz jne adc je (bad) (bad) (bad) jmp stc jbe in mov adc call push mov inc mov xchg pop jp adc loope pop push mov mov mov outsb lock lret cmp xor dec adc test sbb mov fisubr fs mov xor (bad) (bad) decl push push push mov popf xor jo jg dec shrl repnz test (bad) (bad) (bad) mov aam out xorl dec andb pop cmp lds (bad) cli outsb insb movsb sub mov mov mov (bad) scas mov (bad) (bad) call push dec push cmp int3 mov pop cli cli pusha ljmp sbb lcall sti sub cld pop adc shll ffree push inc pop (bad) (bad) pushl les push cwtl fsts mov mov push jecxz out jmp and mov push es jmp lock cli cmp xor divb test adc popa jmp dec push or ljmp test dec insb dec sub iret mov data16 test sub addb test sub mov inc fdiv inc add std jmp sub (bad) push mov lcall pop push aam data16 xor nop movsb jns cltd cld (bad) or out jmp clc fidivrl in (bad) (bad) (bad) jg xor shrb daa xor push stos movsl push jno sbb leave inc jae lods scas enter (bad) lods (bad) jmp or out mov lea jns (bad) pop sub adc xchg cmp clc mov pop (bad) mov (bad) fdivl and je movsl out mov sub ljmp outsb sbb xchg lods out je inc pushl cld incl in ret outsl cmc jae mov mov lahf sub repnz mov mov jbe (bad) (bad) mov sar cs jp not shlw cmc adc fnsave movsl sub (bad) pop xlat sbb inc mov cmp mov popf pushf mov (bad) test ret aas cmp jno cmp lret lahf std (bad) ljmp and xchg lods call and sbb gs mov (bad) (bad) lcall push repz sbb mov iret icebp pmaxub test dec dec or lods mov adc xchg imul fist pushl sbb test inc add repnz iret mov (bad) (bad) (bad) fadds js add mov sub data16 hlt mov mov inc imul jnp dec and dec mov cmp or cmp fsubrl and or push push fdivs in cmp ss (bad) (bad) decl jnp or repnz pusha sar push leave (bad) lods sub fcoml push xchg data16 inc (bad) fisttp (bad) mov pushl dec fcmovnu inc push cmp lock cli jae lret or push mov push mov jns add test sbb xor incl sbb mov hlt fcos in mov lret popf insl icebp lods jge pop aas clc pop cmp call (bad) incl mov je and mov shrb mov adc pushl sbb mov sbb insb jmp clc (bad) lcall fisubrl ret aas out or push insb sar dec xlat test xchg mov mov ds adc xor pushl lea pop push ret cmc stos mov (bad) (bad) fisttpl mov sbb pushf lock scas push pop mov mov sbb pop loope (bad) ffreep clc lret (bad) fcmovb and out jbe popf sbb push xor xchg mov pop jne push rcll imul (bad) (bad) (bad) ljmp ss mov mov mov ss in pusha fisub jmp lea sub shll and jns idivl mov dec sbb (bad) (bad) out out mov jmp (bad) decb inc xchg cmp sub push clc test inc ja imul push cmp ljmp clc (bad) fmul and pushf test inc cmp pop insb xchg (bad) enter push jmp dec jge (bad) inc add xchg and push cmp mov in adc repnz cld (bad) pushl test xchg test lret mov ss cmp sbb rcl orl sbb frstor pop push mov push (bad) mov cmp into jp add xor or test rol aam jb cmp movsb jns xlat pop mov insl fsubrl or jg repz add sbb std ljmp (bad) (bad) (bad) decl sbb cmp sti xor adc loop pop jmp push arpl dec sti add sbb jns push ds sahf lock (bad) add mov xchg ljmp mov add test cs (bad) fcomip dec push in mov ja in gs push insb into in lahf data16 adc aas and or xor adc mov incl ja add (bad) int (bad) out std ja sahf mov mov mov add cwtl xor les sbb pop cltd rolb (bad) add insb aam cwtl clc movsb jp push sub lret mov adc insl pusha (bad) (bad) jg push test or sahf push add mov lds mov jge rcrl or mov (bad) jmp (bad) xor leave loopne repnz xchg xchg mov decl xchg popf cmc mov inc fistl lods (bad) aas and xchg xchg mov sub push push sub jge sbb (bad) out adcl jo push and mov fild pop lahf mov push repnz mov aaa lds jmp loopne fs or inc fbstp scas or adc sbb (bad) mov test xlat adc pop rcrl cs incl sarl and xchg cmp mov les cmc hlt mov aam rorb push imul movsb arpl or pop idiv lock mov jecxz scas (bad) ljmp decb xchg push pop xchg push push xchg pop fidivl iret mov stos jo dec xor addb xor (bad) out cmc lcall jne pop pop mov das mov push fildll call pusha add insb out dec mov fstl inc sbb mov jge jbe jae xor test mov sub in sbb pop cwtl cld imul dec outsb and push lret mov xor fsubrs ljmp sub inc aas out adc jno xchg (bad) (bad) (bad) ljmp jae dec mov mov jecxz or aam dec and add (bad) xchg insb sti fwait (bad) mov mov (bad) lcall dec pop sub mov rcll pushl push leave push imul mov rorl (bad) (bad) (bad) lcall jecxz add inc mov jle xchg sub xchg jmp repz insb out cmp mov ret (bad) jmp mov outsb xchg dec arpl sbb dec imul arpl mov adc inc push push dec repz inc addr16 mov xchg inc cwtl hlt dec sub inc xor repz (bad) (bad) jmp insb (bad) mov or roll fsub orl cmc popa mov jno stos inc (bad) (bad) incl adc loop,pn mov hlt incb dec inc repz and jmp data16 (bad) cmp inc xchg add push sbb lock into (bad) sub pushl cmp push mov xchg (bad) jne xchg xchg and xor mov rorl pop jns (bad) mov push adc lods rcrb (bad) (bad) pushl and xchg mov fmull mov pop mov mov stos or push (bad) aas repnz cmp inc adc in popf cmp add push test lods xchg sti (bad) pushl std or lock cs and and pop (bad) pop push jb hlt aad arpl inc (bad) std pop stc or shrl xor (bad) cmpsb in out mov pop lahf dec (bad) (bad) ljmp scas jle mov sbb mov test mov push dec sub mov and add je icebp push xorb dec add xor inc (bad) (bad) (bad) (bad) sti ljmp cltd fisubl stc jge notl mov jnp pop aaa inc mov sbb (bad) call cmp addr16 xchg (bad) mov inc bound loop (bad) incl es stc jl xlat pop mov fs (bad) ljmp stc adcl xchg mov call movnti fisttpl scas cmp xor mov sbb ficom pusha outsb rolb lock fnstenv (bad) or pop cli add jmp adc mov push jecxz mov das dec dec lret in bound sub (bad) (bad) (bad) call out and rolb aad popa sbb mov in in add (bad) ret xchg sbbb insl adc pusha adc inc (bad) jecxz lcall (bad) adc xchg out dec sbbb or jg inc je stc inc bound push and dec (bad) sub decb out inc inc lret cmp dec movsb pop mov lock leave enter xor fbstp out xchg jg loop mov mov cmp arpl lock test cld (bad) mov xchg sbb test dec aam cmp sub xchg iret cmp pusha addr16 cmpsb push inc sub call mov push lcall scas test mov cmpsb scas punpckhbw mov jmp (bad) fistp pop sub addr16 xor in xor (bad) (bad) call jl mov cmc xchg adc in fs rorb mov std sti mov push scas in cmp (bad) cld (bad) jnp aas mov pop pop sbb mov push (bad) cli icebp pop xchg or addr16 fsub popf in cwtl test cmp and mov lods push sub inc push mov stos outsl pop inc sbb loopne pop push sbb jmp (bad) dec xor adc add mov adc or push leave and (bad) js (bad) rcrl sub push aam (bad) (bad) jb inc pop std push dec sub imul or fnstsw vpaddq cwtl and (bad) (bad) pushl repnz fldl das insb loope daa jb push mov lret test addr16 call mov (bad) cs or (bad) cmpsl aad lock or xchg insl enter xchg add cs dec hlt inc fadds lods rclb cmp (bad) in inc das adc jmp sbb mov dec sbb sub jg lahf ss (bad) (bad) (bad) fucomip loopne mov dec jae cmp cmpsl sub popf sarl sti adc ret lock sub pop inc push push cmp pop xlat jg (bad) call (bad) pop es dec enter cwtl inc mov inc mov sbb enter (bad) (bad) cmp mov push sub (bad) outsl or push fist xchg push loope pop push sbb mov (bad) (bad) mov iret cmp fisubr out push dec xor loopne jmp (bad) sbb cmp dec in shll lock cmp sub rcl into inc (bad) int3 cmp je cmpsb xchg xchg jge lock (bad) jmp or rcl adc jo scas mov jbe (bad) imul or cmp cmpb mov gs arpl movsl sbb scas clc mov in sahf sarl and outsb sub stos scas push lods (bad) nop sub xchg dec pop add pop dec pop push jns push adc ficomp out jmp fwait fwait jle cmp jg dec movsl mov (bad) push lea jge push or fisubrl enter scas lea and stc dec inc les xchg ss ja mov lcall jo shlb outsb insl rcrl icebp dec ja popf mov push pop sbb push shl nop hlt test jmp xor imul add push (bad) (bad) (bad) lcall xlat ljmp fisubrl lea (bad) or jne call push push dec js outsl ficomp adc gs pop xchg lcall mov lock inc xlat push xchg cs call ror pop arpl mov xchg outsb movsl call and popf mov testl or rorb adc or xchg lock mov leave jae scas aas fwait dec add jp jl insl push aad hlt pop dec pop xchg push inc and dec (bad) mov add std sub push cwtl outsl adc clc mov incl xor pusha mov vaddps mov sbb sbb pop fiadd jmp push xchg or mov nop test call and enter popa scas or decl xchg (bad) lcall ret pushf int3 lds xchg push or dec add test fisttp test mov std std xchg xor das mov (bad) ljmp add dec out mov (bad) cwtl add popf jne loopne outsl clc dec int3 xor lahf cmc clc pop or inc xorb int push testb cmpsb jl call dec popa sub jne pop inc (bad) sbb xor and addr16 int lock call add or adc sub std mov cwtl test fs sub divl rcrb daa cltd (bad) (bad) jg push dec push inc repz adc sahf adc jbe mov mov inc and xchg jbe pop mov pop push ret inc out push fwait out push flds cs mov std (bad) movsb (bad) (bad) (bad) mov out sahf or mov ret (bad) (bad) xor sbb adc and incl lret lods cwtl inc push out fistp ds (bad) cmp cmp jmp gs xor push cld (bad) cmp mov add es outsl pushf scas mov insl cmpsb or shrb cli xorl xchg pop mov (bad) (bad) (bad) decl pop adc loopne pop mov xchg pop rclb mov in cld lcall push xchg cmp cli call sub rorb jnp imul sbb movsl mov inc xchg adc clc (bad) incl jne fcomp adc push test jae lds sub mov (bad) cmp lahf sar push ret adc push add (bad) in mov mov ss aam or xor jb and (bad) decl out loopne inc mov cmp jb jge push dec test mov mov xchg repz divl pop (bad) ljmp sbb push mov idivl jl jbe (bad) jmp inc sbb das test inc into dec loope (bad) incl cld dec pop fistp pop insb jns (bad) mov dec push insl icebp arpl xchg (bad) hlt cmc jmp mov or (bad) lcall loopne dec mov xor push jmp dec push (bad) (bad) pushl mov insb sbb div push xchg sahf xlat pop sbb test push cmpsb dec xor or (bad) int3 sub jae and (bad) sti push loope inc xchg iret aad push mov cmp lods sbb dec ret xor dec (bad) (bad) (bad) lcall and jns incb ficoml aad cmp or or (bad) (bad) inc pop add xchg jo lods outsl and icebp cmpsb sti add push jno lcall (bad) aas loop jecxz adc inc jle clc dec cmp adc mov loope push fldcw sar in dec push pop bnd stc fstl popf sub in movsl lods (bad) out lahf or jb test (bad) loopne cmpsl (bad) cmp mov mov mov ljmp mov ja outsb out insl (bad) (bad) (bad) (bad) cmp push call es (bad) xor mov xchg and mov call imul repz mov (bad) (bad) sub loopne pop pushl push push lds fisttpl xchg cmpsl fisubr test push mov nop sar into sbb inc test aad (bad) (bad) (bad) jmp sbb and fwait into pop cmp inc lcall xor test pop xor mov leave xchg test or and (bad) (bad) (bad) dec orl (bad) mov or adc gs mov mov repnz out (bad) fcomip call addr16 dec fcmovnu mov movsb push outsb fistp fwait ret xlat cmp xor jmp jg mov jmp (bad) fs add mov (bad) outsl (bad) (bad) cld jp test fcmovb adc lds push sub and nop movsl jbe or or mov cmp mov xor dec out data16 cld cmpsl push (bad) (bad) (bad) (bad) jmp fmuls xchg je mov movsb orl stc xchg cmp (bad) jg ret into idiv pop jnp xor mov loopne jmp and jb push test stc pop add clc (bad) mov jecxz add push sbb add push jne (bad) jp,pn lock out fist (bad) ljmp cmp jmp das or adc (bad) iret (bad) addr16 lahf push (bad) jnp out ret insl test out movsl lock jmp push movsl pop mov mul repnz sar push xchg out stos int3 xchg cmp cmp cmp pop pop orl mov dec mov loope sbb (bad) (bad) call cmp mov adc cld hlt xchg sub icebp shrb pop lcall dec sbb cs mov js int inc dec dec lret test icebp jnp testb push out repnz imul sbb ret lods repz and pop fidiv cmc mov pop push sub in jg std decl jo hlt div inc cmp and dec xchg inc fistpl or (bad) (bad) (bad) (bad) fildll jg out dec push pop sub cltd loop test mov insl xchg pop sbb loopne mov repz cmp sbb mov ja aam mov inc mov pop push scas clc or push inc mov (bad) sarb mov jbe mov sub ja out jl mov pop movsb popl pop (bad) ja pop or call jmp and xchg and (bad) std mov repnz push (bad) (bad) cmp xchg sub bound (bad) call mov (bad) (bad) jg dec jns pop pop mov adcl or jo,pn (bad) pop jnp adc (bad) pushl pop lcall push test or fsub cmpsl and lds loop inc cmp adc mov clc (bad) (bad) jg lock dec inc fist fwait jmp pusha mov jo aam aaa dec xchg mov mov les les dec push xor (bad) (bad) (bad) (bad) ljmp push in mov (bad) lahf jb xchg cmp inc aad pop mov cltd jnp mov inc jne (bad) (bad) cmp aaa bound cld cltd pusha (bad) into imul push cmp decl pop add (bad) xlat add xor sbb test jmp cwtl and mov (bad) push inc lods adcl sahf lahf popf pop adc fildll mov cmpsb enter fwait cmp (bad) (bad) lcall jecxz inc (bad) mov mov sbb shll xchg or mov cli andb insb xchg ret push cltd lcall leave ror insb or (bad) sbb (bad) (bad) (bad) call flds ljmp outsl negl jnp neg push push aas fmuls mov mov xor insl sub std test mov lret sbb jg test (bad) pop push mov lcall (bad) ljmp jl inc int xlat xchg push sub pusha xor cvtps2pi xchg jnp sub pop cmp lret xlat pop push jg sahf (bad) (bad) and xor ret lods sbb mulb fbstp inc mov ja jmp fcomps cmp jecxz mov pop aaa hlt sbb mov (bad) jl (bad) pop out repz sarb and movsl push xchg pusha mov cmp jmp jmp sti (bad) jp and push mov (bad) (bad) jg push push adc ficompl aad push adc notb test decl (bad) mov punpckhbw dec xchg cmp cmp jo lcall xchg inc push jnp dec pop inc or push and (bad) dec inc jle (bad) inc inc and fldcw mov loopne shrb add dec test mov mov fwait push adc aas sbb movsl xchg icebp popa jb in pushf or mov mov hlt push or outsl sub dec mov push out mov movsb idivl cld int lcall mov (bad) decl mov sbb aaa inc cmp outsl dec pushf fwait stos rcrb mov insb jg add or pop mov rcrb stc push cld dec sub cwtl push lods out mov fidivr mov fdivr pop (bad) (bad) (bad) call fwait mov push jnp mov mov or int mov fldl fiadd aad lock add xor mov clc push icebp adc or add pop inc cmpsb or cli jmp lock push inc adc icebp cwtl dec cmpsb cmc (bad) cmp lret rorb int3 repz adc sar popf xor (bad) (bad) faddp jno aaa mov (bad) jg cmpsl std inc xchg and push mov mov pop dec cmc jo fwait repnz mov ljmp ljmp push inc dec arpl mov xor mov sub dec enter dec leave add adcl js dec dec test adc add add out ss hlt fcoml cmp outsl mov leave fildll inc xchg aaa jnp test in sub cld iret loop imulb aas mov mov xchg lahf (bad) (bad) lcall lret pusha scas pop add call fistpll pop mov mov (bad) pop dec dec and icebp ljmp (bad) xchg cmpsb and sarb rcrb scas idiv (bad) jmp push sbb insb jb fldl xor xchg imul add int sub insl dec push jmp test pop sahf xchg jns ret inc push pop pop inc sti jmp pushl cld test shl push cmpsb dec push dec mul int cli lock es cmp (bad) fisttp loopne insb mov sub adc mov rcrl out aaa (bad) (bad) decl adc jecxz jns cs cwtl call push loop (bad) (bad) jg dec les mov shr pop test movsl pop sbb push scas sub dec mov dec (bad) in jb pop inc cli add inc repnz xor std xchg (bad) xlat add add lret cmp xchg lds repnz mov scas clc jg jb lret popa or pushf jecxz stos inc xchg push (bad) (bad) lcall mov in icebp (bad) dec xor cmpsb sub and mov fs call fsubrp jo ret cmpsl clc xchg push movsl cli in mov xor adc add inc leave movsb add imul rcrl (bad) (bad) (bad) call push leave divb adc dec movsb movsl in dec pop imul ljmp hlt mov add aas neg pop (bad) jns rorl push or push xor or (bad) (bad) jg int3 xlat xchg adc sarl sbb inc pop dec mov aas xchg mov mov mov (bad) icebp push jmp clc push aad jo ret adc push adc leave pop mov adc cli test sub sub aad negl fnsave gs stos xor (bad) dec add xchg clc mov add pusha cmpsb fildll orb push add popa inc jge gs (bad) lret adc sbb ljmp push xchg mov jmp (bad) fiadd sbb mov dec lcall xor and (bad) (bad) pushl inc push pop ret stos cwtl cld and pop popa cltd jnp cld xchg test (bad) incl sub inc aaa pop test mov icebp mov (bad) mov lahf pop xchg fwait movsb jg push les add mov stos (bad) mov lcall fldenv (bad) (bad) decl nop mov cli popf pushf insl pop fmul imul pop sub aam (bad) stos je push (bad) (bad) jle (bad) aas inc aam jmp js pushf mov sbb sbb jnp pop xchg pushf pop xchg xchg clc (bad) (bad) call add xor dec pop loop arpl mov insb or or outsl js mov leave cli cmp adc jg sub out lock jno std sbb (bad) decl mov cmp push xchg jecxz (bad) (bad) (bad) ljmp aad mov leave out sbb iret mov scas adc ja ret or and daa es (bad) ljmp jo push dec mov jmp imul (bad) cmc ljmp rclb add xchg jp mov mov or sbb mov cmpb int3 mul ljmp (bad) (bad) fcomip lods jle clc (bad) in jno adcl inc or or ljmp aas mov (bad) and xor adc (bad) (bad) ljmp dec xchg cld out xchg push adc or add loope jle lcall sub or scas lahf sbb ja adc push mov incl and push or mov hlt dec cld sub leave or loop mov xchg push cwtl (bad) incl adc int3 dec push pop mov ljmp shr (bad) jbe int3 je orl scas in lock add mov add xchg inc (bad) sar adc adc outsb ss jl push and mov (bad) sub push pop insb dec push es fisubr push cs jns clc cld push pop ds incl clc dec popa mov std jb (bad) dec dec imul pop cmp testb (bad) pushl dec hlt ret clc cmp das mov dec mov cwtl xor mov dec xor inc into add cld and inc pushf inc outsl and imul sub icebp mov xor (bad) ljmp sub cltd jo loopne (bad) fnstcw xadd mov jmp popf jo jne mov data16 pop outsb bound adc dec nop (bad) pushl dec fisttp test mov repz (bad) mov xchg xchg dec lods daa push lods clc pop mov xchg cmp xor addr16 inc test mov fistpl push dec cmpsb cmpsb (bad) out clc pushl lcall (bad) pop mov je fildl mov sbb (bad) loop out sar jb lahf cmpsb jmp add stc push (bad) call xor jmp push icebp rol pop pushf push in or adc adc mov outsb loopne add mov ss sar sbb inc loope cmp test sub out loop repnz pop sub jmp pop pop mov in pop mov cmp (bad) mov cmp xor sbb or mulb int mov inc pop out sbb call jmp jge outsb dec cmp mov mov ret fstpt cmp xor mov les jmp and sub decl loopne sahf jge mov div ficomp mov (bad) jb cmp in cmp decl mov sbb mov mov sarb or (bad) jg incl jbe (bad) inc mov xor sub mov (bad) ljmp mov pop repnz (bad) int3 or js int3 xor push pop (bad) lea pslld jns sti jae,pn mov test sbb xor fwait add aaa or cltd aas call xchg push mov cmpsl jmp daa aaa jo (bad) imul pop inc inc sbb adc (bad) jmp fsub pop stc xlat fiadd in push inc pop dec mov ljmp mov sub inc add lret inc aas mov aam sarb stos cwtl jl mov xchg decl mov dec cmpsb and loop mov repz cwtl push push jp lret push and js aam (bad) incl add push mov bound and decl mov pusha mov sub jp cmp jle jecxz push insl sbb pushf les (bad) jmp sahf cmp mul pop rorb mov pop pop push dec cli repz decl lock sbb cld das (bad) scas push push add and stc enter dec popf xlat (bad) (bad) jmp jmp inc lds inc cmp (bad) mov outsb cmp mov int adc mov add fnstenv lret call std pushl pop push addr16 rolb in xchg pop jp jbe cli fxtract ja rolb das aas jmp cmc dec dec push push (bad) lcall daa and sbb fcompl mov and es scas lret xor push push sub (bad) push or inc imul adc pushl fistp mov or mov in in push (bad) (bad) decl and fwait mov mov mov xchg fsubrl mov mov xchg mov in mov scas cli mov fistp jle (bad) ljmp dec (bad) mov mov or data16 mov test imul add pushaw push push push cmp mov mov cmpsb sub ss push js mov sbb aaa and ss push mov mov fmulp ljmp hlt repnz pop or fiaddl dec in dec xor xor decl test out lret dec push pop outsl in ljmp jmp xchg hlt aam mov xchg dec cli inc icebp sub je cmp call int3 xchg (bad) ja jno fidivrl cmpsl loop scas mov scas rol mov repnz (bad) (bad) (bad) (bad) call dec xor xchg inc pop pop out repz incb sti cmpsl in xchg sbb (bad) fadd or rcrb das xor (bad) repnz mov and (bad) (bad) incl mov sub mov fistpl jae and aam mov or and cli or dec adc in mov call mov repz (bad) repz clc add or mov inc in psubd push and icebp cmpsl push out icebp addr16 ffreep insb (bad) (bad) (bad) jg in ljmp movb out addr16 adc (bad) (bad) ljmp sub jge mov movsb mov xlat sub rclb jp (bad) (bad) lcall fucomip mov daa mov or dec push sub dec mov lret jnp (bad) (bad) call sti or pop jecxz pop add idiv xorb xchg lock sub dec sub test in clc stos fldenv xor cmpsb add jp cmp mov (bad) jg (bad) lock (bad) ja xor insb stos jge fsub call dec inc mov pushl jle loopne ljmp mov add (bad) lcall pop ljmp es jnp dec sub mov cs sti js loopne push or lahf sbb mov cmp xchg and (bad) cli inc jb mov ljmp adc adc rcll sub faddl (bad) out stc sti (bad) incb out sub sar roll dec dec (bad) (bad) aas xchg addr16 in lret mov mov in dec mov sub (bad) (bad) decl push aaa es sub mov divl (bad) mov lcall jne cld aad loopne jnp mov in mov gs pop inc call enter decl shrb (bad) notl push pop mov inc out hlt call dec mov add and cltd jnp insl and insl enter int3 je xchg mov push push hlt dec sbb mov jp mov std jmp mov and dec hlt imul adc (bad) (bad) pushl pop icebp mov xchg inc pop imulb ljmp dec pop lret mov add pop sbb dec lea pushl mov mov sbb test xchg dec clc into inc add incl call les jp dec out sub xor cs scas out pop xchg push mov loope dec repz (bad) (bad) (bad) (bad) lcall mov je cmp in popf aaa cmc pop (bad) dec add add outsb mov scas clc jmp mull out jecxz pop dec sbb mov lods test mov add popf shl jp mov arpl xor loopne cmp add pusha ret (bad) cli jo sub repnz jge or jbe and jo inc je test push fwait stos jne xor cmp or sbb jmp sbb (bad) aas lret sbb pmulhuw lock dec and mov mov fildll cli (bad) imul in lods jns aas lock push pop (bad) (bad) (bad) decl mov mov addr16 (bad) inc negl pop dec inc inc mov mov sbb cs inc or arpl xchg in mov icebp jl out pushf cmp inc iret and jb into xor cmp jmp pop or pop push mov fsts loop pop jae leave jl (bad) fildll out das bound xlat scas dec out pop cmp repz fnop inc xor mov retw and movsl (bad) (bad) (bad) (bad) fiaddl cmp pop pop test sarl mov jne loope jmp jmp mov xor jle mov adc pop jne je dec outsb decl das xchg fs add cmpb lcall dec movsb dec adc test xchg sbb (bad) jmp std (bad) (bad) fcompl insl movsb cmp jmp lret mov pop xor mov mulb ffreep out (bad) fsubr (bad) or push (bad) cli repnz pop pop mov dec cwtl in pop stos inc jmp roll and cmp daa (bad) cld push xor mov push xor mov insb ja shr inc mov push or movsb adc gs push mov push (bad) lcall mov in jmp (bad) hlt das cli call sub fdivs daa dec loop jo add (bad) decl lock stos lret or movsl fistl dec (bad) xor pop sar (bad) (bad) decl ds mov daa inc test (bad) aas pop cltd dec push add out mov (bad) (bad) ljmp push sahf cmp mov cmc fist dec adc cmp out push (bad) (bad) (bad) jmp (bad) fistpll aas mov fs push push xor (bad) lret jg incl cld inc movd dec scas aas sbb stc cmc insb movsb stos orl jg decl stos mov (bad) mov aad incb ret inc cmp movsb call sar fsub lret jmp add lock jbe js aad xlat (bad) (bad) jp mull adc push popf mov ds pop cld or jnp sbb (bad) (bad) incl jle push movsb daa roll clc dec stos fs mov cmpsl imul imul sbb rclb (bad) lret ljmp mov push dec aad not cld mov das mov mov or insb fcmovnu pusha inc pop push jae mov aas sbbl fwait movsb (bad) sub (bad) (bad) (bad) lcall out ja scas xor cwtl sbb cmp add mov cltd add jns mov add mov fsub dec ljmp adc dec fcmovnu cli scas (bad) (bad) push jo loopne pop sub xchg mov adc mov ljmp je cmp pop popa mov mov sub push add int (bad) (bad) call dec inc adc in imul mov xor int3 pushf mov sbb mov sbb add and push cltd push push (bad) (bad) lcall mov icebp cld icebp arpl inc jecxz add add sub rolb cld int aas xchg (bad) (bad) ljmp shr push pop lcall push mov add (bad) (bad) call inc cmp push pusha imul sub jne jae lret (bad) jmp rolb cs xor inc inc cmp mov fwait das push cld jno mov cmc ljmp jp push aas push xchg (bad) xchg aaa (bad) loopne scas xor lret in cmp shrl dec movsb mov xor mov jmp fdivl lcall jle jmp fildl pushl rorl jge ljmp (bad) jmp out lahf xor inc in test dec mov test fwait inc lret mov (bad) (bad) jg (bad) xor mov xchg pop cwtl sub and cmp mov aam mov repz fidiv dec mov repz popa dec inc bound rcrl aaa (bad) lcall stc pop jnp daa popf rol pop mov or inc icebp jl sbb bound out (bad) (bad) (bad) incl fstpl mov sub in jne out and lock ret pop inc int3 xchg and sub sti dec shrb ljmp jne movsb arpl lock mov (bad) out mov jb (bad) lcall inc cmp pop adc push jnp push pinsrw pop cs mov test mov push adc xchg mov (bad) mov (bad) pop adcb mov icebp out mov pop (bad) popf jl mov fisub sti dec pop push and cmp and fnstcw cmp jb addb (bad) (bad) cmp cmc jle mov stc pop add std sbb sbb clc jbe mov cs lret cli out cmp fnsave xchg rclb pop jl mov inc negb mov nop loop or add push pushl leave mov add cmp in lcall fsts dec and inc (bad) xchg mov fiaddl (bad) (bad) (bad) incl (bad) sub cli insl cld (bad) out out jge or mov mov clc in lret loop (bad) pushl and scas addr16 jmp cli inc push dec mov loopne (bad) mov out adc mov inc jecxz int3 loope clc pop dec into insb dec dec movsb lock add cs je adc icebp ljmp out inc ljmp adc (bad) ljmp (bad) hlt cmpsl inc les std in push pop cwtl cpuid push inc ljmp sbb popf cld js (bad) mov inc shll ss in mov or in jge (bad) (bad) aas adc xchg mov je ja movsl or adc pop jno mov mov test sbb jno mov lret clc incl ret jne xlat rcl dec pushf pop cmp (bad) mov lcall mov or mov ret out cmp test cmpsb pushl adc cmp ror sbb stos (bad) inc and cmc cltd (bad) cwtl mov (bad) jg inc push popa push call enter leave dec repz (bad) (bad) incl dec std lret dec cld hlt imulb mov push add addr16 xor xchg xor jb aad std jp push insl ret push cmc pop es (bad) pushl (bad) mov test jae lret daa dec call lahf sbb arpl xlat je std es lret inc sbb ds decl lods mov jecxz popl aas fnsave movsl cltd test sub outsb clc incl mov mov fisubr sbb push ret jge mov inc mov pusha mov sub jns push mov (bad) jbe dec mov ljmp push mov std push jmp enter sub cmovs xor push in add fcomip jg mov push cltd ret sub fdiv mov sti shl mov js mov (bad) jmp dec ljmp (bad) leave or in (bad) je sbb gs push cli (bad) dec and (bad) adc out test push mov adc (bad) (bad) (bad) out jle mov or call (bad) fild addr16 nop mov fwait cmp aam mov (bad) incl ficompl icebp or push out lock hlt repnz std (bad) lcall mov xor add pushf add (bad) es sbb decl in xchg cs daa fld int3 pop lcall mov (bad) pushl adc sbb xchg mov (bad) cmp inc mov mov ret loopne xchg outsb mov add fisttp sbb dec loope mov pusha lock or jg jo push mov adc lret xor sbb push jno adc (bad) pop cmp jle push xor (bad) jg and or cmc pop cmp dec mov aad ja std jle cli cli hlt cmp lcall cmp call in popf aam jp cs push cmp out fcmovnu (bad) lcall popa mov mov add xchg push stc pop sbb or pop xor xor in jbe add sbb ficomp ljmp mov std call rcrl jmp cmp mov pusha (bad) (bad) pushl jg bound int3 pusha insl mov sub je aas sbb xor fildll dec aad fdivrp test (bad) (bad) (bad) mov xor test jmp dec insl pop vaddps (bad) jns je inc cld (bad) (bad) push lcall imul or lcall inc jg sti and (bad) (bad) (bad) mov lds and (bad) push fs jae dec or mov (bad) (bad) incl mov sbb inc mov in add mov jl stos aaa add aas arpl sub (bad) ficompl (bad) dec data16 jg jp sahf or rcll shrl popa push repnz jp cltd sbb (bad) in mov rorb in sub insb xchg jno jp add adc dec jg or add mov aam mov inc test lds jns pop (bad) out es or sub sub daa pushl jmp test push ficom mov gs std dec jmp xchg dec (bad) (bad) (bad) lcall mov fld aad xchg mov xchg push cmpsb dec cmpsb or push pop pusha and pop xchg and lods call into test mov dec xlat test idivl xchg or jb pusha inc pushl shlb pop fnstcw decl pop (bad) jge outsl cli lcall jmp adc lds in push mov push jge call rorl or xchg jbe (bad) mov pop mov pop jp xchg imul (bad) fistl dec les mov (bad) jae repz mov jmp icebp sahf jmp xor ds (bad) jg jmp into add or insl jmp inc cmpsl or push (bad) xchg shl (bad) (bad) (bad) call icebp mov (bad) adc scas ja repnz cmpsl fdivrs mov cli int3 xor in xlat hlt icebp les add cltd xor xchg pop inc jecxz push imul mov out (bad) (bad) (bad) (bad) cmp mov (bad) mov rol and dec and orb test lcall dec dec push mov in xor and sti shrl test xchg lods in add fwait jbe adc jns lods hlt (bad) fisubl nop or (bad) (bad) out call or orl push pop scas adc notl xchg sar lcall xor and outsl repz add (bad) ror stos (bad) in jne das xor insl (bad) popf jg dec dec mov cmpsb jb lock adc lcall push sbb sar out mov ljmp xlat stc fisubrl mov out mov adc (bad) (bad) fistpll ret push fs out hlt fs or or test mov lahf pop in ja sahf xchg push ret cmpsl adcb loope lods lods push (bad) mov (bad) loopne sti xlat fucom xlat in mov aas out xchg dec mov fildl pop lret je scas xor cld lahf jecxz (bad) lcall mov lods or out xor mov push hlt fistpll (bad) jmp lahf mov dec dec pop out (bad) jno push jl jg and fnstsw in subb jg repz jp sbb lret sub call mov loopne iret dec pop push dec fisttp pop or cs xor sar sarb inc bound cmp sbb ret (bad) iret sahf adcl push aas in mov aaa mov bnd fildll pop aas cwtl div push popa dec pop cmc pop (bad) ljmp lods clc movsl jg (bad) mov inc mov mov xchg sti aas and (bad) lret push in jmp les sub (bad) ljmp loope lret repnz stc adc and test lcall or in xchg inc cmp pop add repnz (bad) jecxz xchg test xchg imul sub test adc (bad) (bad) (bad) (bad) cmp push lock dec xchg int jns mov push ret out and sub inc imul sbb stc in scas xchg push cmc decl ljmp pushf push jg in jbe in shll mov jmp mov adc (bad) mov pushf dec pop aam es and pop out (bad) (bad) (bad) ljmp adc mov push lcall jge push mov pop jl in pop inc sub xor inc jb push ljmp data16 ljmp clc mov pop mov xor xor sbb (bad) push inc ret incb icebp adc sub (bad) xchg stc lods in ljmp clc aas push mov daa sbb fxtract in jmp cld setge xor lret (bad) (bad) mov stos shlb mov dec out inc lret xchg scas in fmull pop pop insl rolb jmp cli push ss cmp mov xor ror mov pop sub orb int xor fistp sub lods dec sbb add loope jmp enter lcall (bad) out cli incl imul scas or (bad) dec adc xor sbb add call ljmp pop pusha mov lock push cmpsb push ss mov sbb (bad) (bad) push icebp push jnp xor sti popa and aas lods jbe pop dec imul sub pusha in rcl (bad) (bad) pushl mov fwait inc enter mov repnz dec out (bad) mov sarb sub lcall push (bad) scas pop and mov mov (bad) (bad) lcall cmp xchg sub cmc aad jg aam jge adcl sbb inc dec cmc loop sub pushf imul popa mov inc cwtl (bad) enter daa xor idivb in ljmp cli aas lods (bad) bound add mov (bad) jmp cltd daa pxor jecxz and dec (bad) mov add xorb and xor adc pop call pop xlat mov pop clc jp aaa pop xchg cmp aam rol outsl cmp mov mov into xor (bad) (bad) (bad) decl repz pop fwait adc mov pop cmp cmp cmp or repnz (bad) ljmp push jno fldenv add or or (bad) (bad) (bad) aas push call xor sbb xlat movsb lret push loop xchg push incl sbbb push decl push stc push les (bad) xlat cmp jmp mov std (bad) aas adc ja mov ja out push or xchg sbb test scas cmp fs scas repz xor (bad) (bad) jmp inc xor or xor jne cmc inc dec sub jmp (bad) popf adc adc (bad) fucomp xchg xor adc cltd scas cmp and movsb imul (bad) (bad) mov mov mov (bad) dec test push rorb ljmp adc (bad) mov aam (bad) or cmp sbb push and negb pop ljmp nop inc xchg inc fdivr pop loopne (bad) mov out sbb inc ss scas fmuls in inc dec xchg jmp xchg push xlat mull cmpsl xchg mov pop test push cli xlat (bad) cmp incl insl lret data16 jmp adc inc or aas in or fcoml arpl std (bad) aam hlt mov xor and aaa cld out rolb test data16 jb fwait or clc add mov je inc add jle cld xchg push add push or fwait push xor add inc outsl sub scas sbb int3 mov leave cli (bad) dec sub pmulhw dec aaa or (bad) lcall pop push ficompl pop repnz pop in (bad) loopne sub lock mov out pop push dec or fdivrl movsl dec std adc fnop jmp aam call xchg push adc (bad) (bad) clc iret fcmovb fwait addr16 mov insl push (bad) shlb add inc cmpsl lea enter adc xor (bad) jg mov sbb enter (bad) xor shrb call mov leave inc mov stos addr16 cld negb imul insl (bad) (bad) mov mov inc mov aad or mov sar iret jae mov outsb sti pop sub jmp fst iret incl fdivl call stos stc ret pop (bad) jno cmp in (bad) (bad) (bad) lcall inc sub stos sub (bad) out dec inc or das testl aam jp (bad) push sbb stos repnz fwait test scas mov roll and ret sbb (bad) rcrb inc icebp repnz sub hlt adc mov xor dec andl push or push mov aas jge sti xor (bad) adc cli pop pop mov push mov sarb mov inc je (bad) mov xchg mov push lods xchg loopne ss rcrl clc ret cld jp jbe jbe pop mov inc and (bad) (bad) (bad) jmp push lret push loop add (bad) (bad) aad mov mov push cli lea cld repz int3 int cs add sbb jle xchg cmp (bad) popa hlt pop mov push aas mov (bad) aaa aam mov loopne mov add push (bad) jmp mov add fbstp or mov std nop pop mov push call dec loope sub pop loopne mul lret add outsl (bad) mov gs repz nop movsb pop in lcall icebp xlat scas pop sar notl mov (bad) mov (bad) fiadd pop xchg add or out lods out jecxz insl xchg (bad) cmp mov inc add orl xor ss ds jne (bad) aas xchg decb cs orl adc leave loope cld stc mov dec das lret mov js lcall dec sbb mov pop xchg sub inc sub pop ljmp dec cs sub es pop pop ljmp jecxz lret xor push push push sub inc sbb fisttp dec ja jnp mov in dec push add sub cmp sahf push cwtl insl push (bad) aaa (bad) fiadd add jmp out (bad) mov jne (bad) loopne call aas jno test scas sbb sbb inc mov sarl xchg test sub xor test sub clc ljmp or (bad) pushl leave push call xchg dec ret pop and out sub lahf and (bad) xchg (bad) pushl mov jnp xor jae les jae lcall (bad) decl (bad) mov push (bad) mov jle test or or xchg jmp lret in outsl out adc push add mov aas sti push inc jo adc daa das or sbb mov mov pusha test adcl mov fsubrp clc and dec cmp mov mov loop sub movsb and scas add fildll aas imul sbb (bad) jg or aad insl (bad) std adc lods jmp (bad) (bad) decl mov mov (bad) repnz push ss pop pop clc sar ljmp or dec out or insl mov call sahf dec jl pop cmp (bad) (bad) imulb ret out in mov popf push imul xchg mov (bad) aam ja (bad) mov int3 push sub fisttpll jmp push mov xchg test mov mov enter out mov nop pusha xchg pop xor int sti nop dec lret inc pop inc inc daa out dec fcomip jo test dec pop or call mov dec negb cli (bad) (bad) (bad) jmp movsl ret push scas iret sub pop pop add (bad) or dec add icebp (bad) out and or add pop stos mov insb (bad) add stos inc push or (bad) decl pop shl mov mov or cmp inc dec mov jo cld call ret imul mov pop xchg in (bad) (bad) jg in mov sbb clc and mov push add adc fidivr cmp pop add lcall ljmp repnz rcll (bad) (bad) (bad) incl loop addr16 flds mov cmc xlat loope pop mov pushf hlt sti adc cld pop (bad) (bad) jmp or test lods (bad) pop inc movsb aaa ret jle ss enter (bad) (bad) (bad) incl sbb mov mov fdiv scas (bad) mov (bad) push sub pop stc (bad) push jle ret ljmp and test std pop push inc mull sar decl xor push gs pop in xor push dec jg popf idivb jnp fld and sbb adc pop pop push push mov or mov push clc mov cmpsb push int push sahf popa loop jl in imul test shrb (bad) in jno mov lea inc int3 fs push jecxz lcall (bad) enter aad pop mov and lods outsl (bad) call into mov bound lahf adc push fiaddl xor dec dec xchg xchg std (bad) ljmp sub or mov mov xchg sahf inc inc push lods jae add stos insl (bad) (bad) (bad) mov and call mov or nop popa mov add addr16 loopne mov lret clc (bad) (bad) (bad) mov mov div fsub mov mov xor sahf mov repz mov jo cli xor push in (bad) (bad) call out xchg mov scas negb mov aaa inc mov dec testb adc decl repnz jecxz aad xor test nop test decl push cmp (bad) cld ret pop push inc pop add int mov mov pop sbb mov aad mov push in inc cmc dec or xor cmp lods movsl pushw imul stos or xchg and cmc aas js call inc xchg hlt mov out nop aas or in (bad) incl push stos out insl test or mov adc stos sub (bad) aad (bad) (bad) (bad) inc sbb mov add orb movsb mov gs hlt pop jge sbbl popf mov mov addr16 mov mov pop mov inc js adc stc mov (bad) decl add push and lret dec lea pop sbb cmp fild iret lahf ret xor mov ss cs shrb (bad) cld test (bad) mov cmpsl sbb cltd lret (bad) ljmp (bad) repnz xchg test sti insb jne and (bad) add inc out repnz push add sti mov mov ds (bad) mov icebp dec addl or pop and orl out mov add mov dec (bad) (bad) (bad) pushl xchg push jno (bad) sbb test fildll shrl popf jmp incb mov mov gs (bad) jmp mov fstpt xchg xor call mov lahf add (bad) ljmp and mov in xor jp sub dec adc (bad) (bad) (bad) (bad) cmp mov dec inc or sbb aam mov sub int bound insb scas cmp or (bad) call cmp pop lds xchg cwtl jmp cltd xor les cmp imul mov ljmp and mov mul push push inc ss jns lret pop (bad) adc lock xor sbb (bad) jle js shl adc cmp fbstp cld sbb jo cmp jae or mov mov es or clc cwtl mov aad push incl aaa xor mov dec xchg inc or ds (bad) lcall enter popa inc adc lahf pusha movsl lds lea add (bad) and and xor jae pop inc in fistl (bad) out push hlt out sbb outsb cs pop das mov pusha xchg push add (bad) (bad) (bad) lcall jae mov cmp mov push pushf loope pop fmull xchg rcll adc inc cmp add push jmp push dec lea jns (bad) (bad) (bad) (bad) faddp push (bad) xchg ja dec aam loop idiv hlt mov cld iret daa mov and std mov sahf inc cs inc pop cmpsb xchg out xchg (bad) (bad) hlt iret sub mov decl shlb and jmp mov cli (bad) (bad) (bad) ficom mov mul inc hlt xor mov cmpsl pop (bad) push cmp pop imul in (bad) push jne pop aas repnz or cmovo add loope movsb ficoml (bad) (bad) stos cwtl in dec xor scas jg push cmpsl outsl insb dec rorb dec subl lock add aas jne (bad) or aaa add aad icebp pop inc cmp mov cmpsl pop adc and push jmp sbb (bad) sub jl sbb (bad) (bad) (bad) decl sbb pop push test lds pushf push lds das mov repz pop (bad) (bad) (bad) (bad) fadds xlat xor adc sub mov sbb aad or inc (bad) sbb inc push std (bad) fbld mov or in cmp sub loope std (bad) incl cmp hlt xchg and ret jne or test imulb mov add mov pop sub push push xor (bad) imul mov in or mov push mov (bad) sub fcmovu xchg and (bad) (bad) (bad) pushl push imul bound cmp imul cmp cmp sbb hlt stos jg sahf lret ficom and and addr16 cmp or cmp decl pop inc loope int3 mov mov jg xchg scas xor inc sqrtps (bad) call (bad) push sbb jne bound xchg clc (bad) aas and sarl ret inc jns cli cmp jecxz fsubs iret mov jg add push ds (bad) fisttp sbb aam and adc (bad) fldl2e push repnz iretw out dec fidivr mov pop cmp cld (bad) lcall xor cmp fidivl mov adc cltd jae sub pusha sbb lods mov (bad) call add sbb test imul pop int3 loopne (bad) (bad) mov sbb (bad) jg mov mov xlat mov pop loope fsubrs lcall sub jne push mov out adc mov decl call mov pop pop out adc push leave jg jge pcmpeqw mov pop into insl pop dec sub ret icebp ljmp sub iret xor mov loope out das xchg sub jns mov cmp std push jb cmp ret inc sbb (bad) mov test popf aaa hlt mov sbb cmp (bad) (bad) pushl loopne mov add aaa push (bad) rcrb dec (bad) adc cli xor pushl aaa fbstp sub mov mov aas mov jmp fildll (bad) mov cmp lock adc ljmp inc je ds push cmp push jbe (bad) (bad) idiv lcall sti sbb fisubrl xchg pop lcall mov xchg pop jg jns fcoml inc clc jmp adc (bad) adc decl inc fdivrs cld and (bad) fildll ret add int3 add mov xor das (bad) aad loop (bad) xor fwait xchg out (bad) dec or cmc test rorb jno insl or jle (bad) (bad) call pop ljmp int3 jo inc mov fistpll push fcomip pop clc cmp mov in or mov jmp loopne mov jo sbb mov ja lcall test inc jecxz (bad) incl sarb xchg int3 cltd scas cmp insl inc jge jnp (bad) (bad) lcall cmpsl dec push fst repz mov sub call cmc das and cld (bad) (bad) (bad) clc jno in push adcl fist dec movsl sub lea pusha (bad) mov dec decl (bad) jg loopne jo sbb mov jo cltd rcll (bad) (bad) (bad) call inc mov fldt scas icebp xchg stc dec insb bound add mov lock (bad) sti jg inc lods dec movsb cmc xor (bad) out cmpsl (bad) call std jmp xchg test (bad) (bad) and arpl addr16 pushf shl outsb xor std call dec stc movsb push xorl fwait ret jb cld ljmp fnstenv mov clc mov js and (bad) aaa push stos dec js pushf (bad) lock push loop sub (bad) in jmp lock sbbb mov jne pop mov fnsave cltd xchg jnp decl (bad) pushl xlat cli aas inc jo mov jo mov test dec mov fisttpl cmc (bad) in sbb add jmp mov pop (bad) (bad) (bad) pushl jmp cmpsb xchg push aas add je jmp sub add pushl cld mov sub pop pop mov jmp (bad) sbb (bad) jmp addl cmp and sbb pop push mov (bad) (bad) pushl jl mov mov jle fstl scas pop cs xchg xor mov sbb xchg cli aas lret xchg and pop gs xor test in lcall test popa std ljmp pop inc out fisttp inc cmp and inc sarb inc jle jge (bad) (bad) (bad) call enter push push mov mov inc push fdivr xchg das xchg shl mov aam xor mov les xchg bound or xchg icebp (bad) jl mov ret rorl out (bad) xlat pop inc cld fcomi ret push (bad) jecxz aad add jmp or mov out ljmp cmp sbb (bad) jmp rcrb arpl push adc mov movsb pop aam repz (bad) (bad) lcall cmp scas add xchg repnz push cld dec sti push int gs mov cmpsb out clc jmp xchg xor xor aam inc xchg jmp repnz fimull or das cmp (bad) (bad) pushl adc out out imul movsb popa push lock xor pop inc sbb lret pop and and (bad) decl scas mov (bad) fs mov mov popa (bad) fcomi lcall dec or xchg inc lahf loop fwait mov les inc adc pop or cld xor sub (bad) jmp shrb cmp hlt rcl jns xchg xchg int enter (bad) cmp insb and xor fsts mov (bad) call push enter bound imul jo fisttp divb dec (bad) adc sub xchg imul push lea push in (bad) (bad) incl sbb outsb mov mov jge mov sub mov jnp jge mov adc cmp and inc cmpsl clc in sub sbb dec fnstsw dec jg stos add repz jg test cs add movsl push decl pushl fcompl push outsb xlat dec mov add movsl movsl pop push cli jmp pop cmovge mov out add mov outsl cli ljmp push mov xchg (bad) dec pop rclb adc call into mov inc (bad) jmp cmc orl jp test clc imul or scas (bad) hlt xor dec insb ljmp push add orl mov aas mov mull data16 or dec lret shrl xor mov pop aam mov test subps cs pop enter dec jg sub adc adc jl pop cltd cmp (bad) fstpt (bad) push jo and push test sub test add mov (bad) jmp sbb and jg cli mov fsincos lods lods (bad) aad sub in add fild push xchg outsl mov in push pop std push or and adc (bad) lock cltd es jg imul out cmc jg notb cmp push inc shll std sar out dec pop pop mov shll std hlt enter inc movsl push movsbl and arpl ret fsub shr push push xsaveopt (bad) incl pop loop les pop inc hlt out pop lcall sar (bad) mov out cmpsl pop xorps sub pushf xchg decl ljmp ror pop call cmpsl lea gs pop int xchg cli (bad) jmp in clc dec daa sbb pop add arpl out fwait inc decl sub inc push mov mov fdivrp (bad) (bad) push ret pop std fcoml mov fdivp (bad) popa cmc imul mov cld ljmp inc lds jmp in out lcall xlat sbb xor pop cmp adc cli fwait insb xchg jecxz dec sub std sbbb (bad) (bad) ljmp fidivrl mov stc jecxz in lock or das aad stc into ljmp in xlat xor mov push dec push fwait and mov sbb nop ret pop xor inc ds push addr16 adc call out jne mov sub decl fidivr add add icebp jp lock (bad) call mov hlt addr16 add dec cmpsl shll loope mov jns stos sub adc movsb dec mov adc cmpsb (bad) outsb cld jb mov xor (bad) mov sar jl dec fcomi cltd insb mov incb imul pop xor lock inc pop mov in add in dec lock (bad) aas pushf mov sub repnz rclb sbbl sub (bad) mov or mov dec inc cmp fwait cmp lret ljmp scas addr16 push (bad) (bad) (bad) jmp fs stos or pop mov cmpsb nop in daa loop dec jne xor jg (bad) (bad) incl in sti mov sbb dec int push pop sbb loop test in xor dec push out jge shrb cmp mov add (bad) pushl dec and int hlt gs cmp in mov addr16 je adc dec rorb and ja imul xor enter ds jg incl test add leave mov (bad) call xchg ret cltd fbld popf mov dec xor ret jp (bad) (bad) cmp xor out repz pop lods (bad) cld insl lods push fsts imul dec clc (bad) cmp jnp mov mov negb mov call lret out data16 sarl stos xchg cs and insl (bad) xchg out cld dec xor (bad) test mov test cld aaa xchg sti jecxz sti xor (bad) call dec out fdivrl movsl loope (bad) jno shrb test push inc lds or out and jge loopne das add xlat mov dec push xor enter (bad) (bad) (bad) inc pop (bad) xchg mov push adc std daa imul jbe call or sub xchg (bad) (bad) call mov inc scas mov (bad) movsb pop dec pop push or sar bound in in stos inc and (bad) mov test ss aad out hlt or clc (bad) (bad) jmp inc push or pop mov mov repz cmp mov cmp lahf shrb mov dec adc inc lods push push pop test mov push mov (bad) adc xchg imul call aad jo mov insl push lock cltd lods ljmp ljmp lods inc sub adc xor push xchg das fidivr (bad) fstps jns sub adc mov (bad) mov push mov int rorb fcmovnbe ret test push stos push mov lret loop in lcall sbb mov enter ret enter clc jo push inc xchg (bad) jo ret lahf rorl lcall or mov (bad) call sti cmp adc and pusha outsl fldcw push das popf jns fisttp sub push pop jmp dec je dec popf popa sbb stos mov cli push or sub fwait cltd mov maxps lods fdivr (bad) (bad) out enter cmp fs jle xchg ljmp (bad) fnsave pop inc ljmp jae mov and ja xor outsl mov dec cli jg out enter xchg (bad) in lods cmpsb (bad) (bad) (bad) push je mov pop mov push imul jmp adc or xchg (bad) cmp jg xchg fdivrs jbe dec jecxz cmp jnp (bad) (bad) (bad) lcall stc mov xor pusha cs shl xchg push mov std (bad) jl out loope inc ja xor je out (bad) lcall lock mov push push imul in enter outsl ljmp outsl arpl out arpl sub aad int icebp mov arpl mov (bad) jg shrb enter js pushf in adc mov (bad) (bad) (bad) fstpl xchg testb xor mov negb mov jns mov jmp call and mov sahf sbb nop mov sub sbb hlt mov pusha push or cli xchg popf sub bound out insl adc xor gs mov mov popa adc (bad) mov sub push pop fstp pushf orl and jns dec (bad) (bad) ja movb mov sbb lahf mov cld in adcl decl call shlb je aam dec sub add std pop idivl call nop push jae dec out cmc (bad) mov sti (bad) jg add jge mov add shll pop orb mov aad mov cmpsb lcall (bad) out mov sti shr clc inc scas out adc sti pop cmp mov xchg mov js das clc inc rol and es xor push sbb sar (bad) (bad) pushl add jae mov or or lock inc (bad) sbb loop push sahf iret mov loope xor mov clc jmp ffree aam pop inc fwait dec std in cmpsb or aam fs mov sbbb cmp push jecxz mov subl xor scas add in cmp ja into (bad) incl adc aad mov imul mov inc (bad) pushl rclb or frstor scas jp xchg adc push icebp loope mov jmp outsb imul xor pop inc cmp (bad) (bad) lcall add call inc xorl test cmp call std lock pop std add sub (bad) iret mov imul pop cmp and shlb mov imul sar (bad) incl jge fwait dec and loopne mov divb ffreep and decl lea inc lahf xchg decl jg lods push xchg push add lock std push cld sbb lcall mov inc cmp xor sbb incl movsl imul mov and andb sbb jne scas (bad) int3 or es inc mov (bad) (bad) ljmp (bad) (bad) aas mov call sub mov mov xchg or pushf sbb jg jecxz cmp pop jg (bad) fnstenv outsb pop jp fwait cmp jle imul pop xchg movsb jp xor es (bad) incl rcll xor iret shlb jp pushl idivl test (bad) pushl pop lods inc lcall or or jno es or sbb jns lock push hlt mov jae loope sbbl in mov (bad) (bad) call test hlt xor mov clc sbb jno pushl or xor icebp mov inc (bad) (bad) call lcall sbb out xchg jle fxch mov shrb das insb pop out jl clc pushl adc dec pop orb cs rcll mov loop pop dec in mov fist lea popa and (bad) out xchg int3 mov adc jg and jbe leave push push call or xchg std repnz xor push je addl xlat mov (bad) (bad) jnp and mov notl cmp sub lcall leave add jge (bad) dec mov ds or aas mov mov cli mov xchg or push dec mov jbe js push (bad) (bad) aam (bad) pushl push pmaxsw add sbbb or mov sbb das out mov dec cmp xchg and (bad) (bad) (bad) call test sbb (bad) (bad) lock aam cmp push cltd adc mov lret xor rcrl call mov or (bad) xchg xchg lcall push mov (bad) (bad) (bad) (bad) call test aad aaa insb fcoml mov sbb pushf popf mov cmp or out mov cmp roll call cmp jno mov sbb lea test (bad) fdiv loopne pop aaa leave ror enter dec aas clc ljmp sbb clc sbb xchg rorl pop or push adc jbe test jns (bad) inc lock push push mov ljmp pop xchg sbb icebp test jl lcall fistp cltd dec and lea pop cmpsl rolb sahf mov xor dec jmp mov xchg (bad) incl pop mov mov and or lock nop iret ss xlat imul jl stos test mov push cmpsl faddl xchg mov sub jg cmp inc mov iret mov jle adc fadds and in imul sti in xchg sbb test pushf xchg sub pop mov sti loope push push (bad) jp popf dec push mov sbb inc mov jmp (bad) dec inc mov sbbb lretw clc lahf adc mov adc hlt in xlat cmp stos aad inc xor ret stos push push dec mov xor sbb xchg mov ja push add out jns or imul jb cmp stos (bad) mov cmp xor jg xchg jmp pop mov iret fcompl idiv pop gs mov pop sub mov sbb decl sar push ja cmc push mov mov ljmp mov mov outsl outsl mov mov sub lret sbb (bad) fdivr insb cwtl subl jns mov mul push inc movsl int3 inc sub or inc inc ret jg fistp jne dec arpl scas les jmp push inc mov or addl inc cmp stos mov nop xchg mov ret shrb adc enter inc mov or pop popl mov jbe add or add and xchg push jb push pop pop adc xor psadbw std jo add pushf insl jo xchg daa push push sbb sbb sbb sbb inc inc outsl inc add (bad) xor mull and adc mov sbb add out adc ret push ljmp adc pusha cld dec movsb add inc push add insb into arpl ss jns adc add sbb adc add adc iret sub pop sbb add and dec arpl push dec sbb dec fsubl or outsl dec add push in push gs cs and xchg pop mov addl adc js addb fstpl outsb fs sbb flds jmp lcall inc imul imul sbb jb jb add mov pusha mov sub push or add push outsb insb les mov out mov xor outsb sbb and push inc into pusha xchg push pusha popa and sti dec xor sbb pop push imul gs jo sub jnp cmp or sub push mov fs sbb lret insl add fld xor inc inc and (bad) mov mov lods mov cmpsb sti push add jp pop lcall jne and sbb aas inc pop add enter rcr sub jge (bad) mov je push out inc popa movsb ret cltd push push scas dec inc sbb (bad) fidiv and sbb xchg sbb mulb insl add mov pop shll rcll sub rorl cmp push sti sbb sbb sub pop or push daa dec cmc jl test inc push stos ja pop rolb dec inc pop aad stos (bad) push sbbl jo mov repz (bad) xchg popa mov pop push sub pop inc ljmp add sub adc mov sub ds outsl (bad) fisttpll je adc sub jae inc imul add (bad) hlt xchg fiaddl add mov outsb inc jnp pop hlt fs pop mov clc jae js push icebp push add call jecxz movsl cs cwtl jge xorb adc imul movb pop xor mov out sbb sbb fstps insl int3 inc and pusha add les push sbbl push or and and add inc jb and cmp or sub outsl sub js add outsl push cmp stos sub test sahf test add and popa sub push roll adcl leave add out sti mov fisub sbb jnp or and jecxz das loopne lcall repz sbb cmp inc push inc push fwait add mov inc sub arpl ret clc ret lahf and jge js jbe pop xchg jo or lods test lods test sbb push dec push xor repz adc adc gs adc dec mov lahf test inc jge rcl adc fs or lock outsb sbb ja mov scas mov inc pcmpeqb adc lods inc sbb popl subl adc faddl jbe add jp fs sub lods jbe pop mov pop push pop rolb (bad) stos mov ret cltd xor fsubrs mov xchg add adc fcmovu xor pop add xchg add mov adc pop pop push arpl sbb lea leave inc outsl fnstcw js outsl sbb roll mov or insb xchg imul pusha add ret sahf test and pop mov sbb imul sbb dec data16 sub inc jae roll add call dec je dec insl lock jnp push or push cmp mov inc jb push add mov popa gs (bad) or mov jp sub pop xchg push inc into fs dec sub add roll pop and (bad) sbb inc je sbb jecxz or fcoml test das sbb and and dec push adc push out jmp sub cmp adc cmpsl add inc enter cmp jo jo sbb adc dec add addr16 mov (bad) mov imul lea (bad) mov adc dec arpl sub add arpl mov sbbl pop xor mov ret mov add inc xor rcr inc and or mov in rclb mov add sbb fs mov popa pop xchg loopne push fistpl mov push fldenv xor push jo aam addl mov movsl outsl popf insl lock jb or arpl cs nop int sub fmuls idivb xor fldl test push aaa push pop es cmp and (bad) insb rcll imul inc and adc adcb shrl (bad) fs or fndisi(8087 push push fs sbb in push and je lcall rcll sub data16 dec jbe or jb mov inc add push sbb adc and xor sbb adc test mov inc adc pop sbb sbb (bad) cmpsb xor ja dec jae and testl and pop add inc adc in (bad) xor out sbb imul add jo es dec jbe xorl sub sbb cmc add data16 (bad) fcmovnu lcall pop dec cmpsl inc pop pop icebp add xchg clc outsl and push and cmp adc lock sbb icebp and jne push in cs popa inc inc xchg in es dec inc adc sbb das pop mov insl xchg and inc or and pop mov (bad) popa scas inc imul or mov and insl and imul jmp xchg inc adc adc mov dec mov jns movsl sbb push mov adc lea sbb inc lret push cmp fnstcw inc sub sub add push mov jge xchg popa ljmp data16 sbb add mov and jae test subl dec pop adc shll rcrl xor fs stos push mov mov xchg stos xor mov or fcoms xchg dec fndisi(8087 popf mov push sbb pop cmp push pop xchg and xchg sub jge mov or inc jecxz mov mov mov movsl loope outsl mov repz dec nop popf push lock pop out dec pop jne mov subl add and insb pop pusha clc add or inc fs or iret iret push cmp orl xor and mov mov rclb roll xor or push mov add test clc inc inc cmpl adc inc sbb push and mov mov mov movsbl popa jnp sbb cmp insl xlat sahf fisttpl adc push sahf insb and pop push cld adc mov ds lds cltd addr16 dec inc lods shll and xlat add rorl dec sub inc inc push push jo idiv rcr sbb adc dec mov xchg fmuls and push aas cs add jl shrb popa add push dec and xchg lahf je,pn jae sbbb jb dec nop lods notb add mov je dec sahf pop pop out jae dec pop es (bad) mov xor sub xlat es and ret add orb add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp mov pop add and 