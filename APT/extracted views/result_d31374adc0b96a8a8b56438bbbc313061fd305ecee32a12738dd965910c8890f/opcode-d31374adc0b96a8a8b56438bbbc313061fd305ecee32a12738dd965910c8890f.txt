outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push dec fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push push cmp pop clc and (bad) je or add push mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods das fnsave sub jne pop push adc ret add pop pop add mov push jb or cmp popa mov cmp add mov mov je lea mov test or je out ret (bad) dec mov jmp push cmp and add aaa je leave or inc push iret or sub (bad) sti std mov jbe sub add sarb lret inc dec insb outsl out fwait sbb ds adc sbb vcmpsd int mov adc adc ja cmp jae jg arpl mov adc add mov add movsl mov aaa and rep js mov pop movb mov jecxz dec fildll push xchg or mov mov fwait popa stc roll dec add xor xchg in sbb push push push nop adc cmp fcmovne je mov insb mov and sti mov dec pop mov mov pop pop or xor addr16 ja test cs cmp cmp xchg out je adc fsubs sbb inc xor popa mov adc fisttpll sub stc iret jae popa xor and mov lea jle,pt push and std adc jle jae sbb daa pop sub inc or sbb jmp xchg mov sub push sar lahf adc cmpl in mov leave je mov sub sbb jb mov adc inc imul add add mov fcmovbe jge adc add gs insb adc clc mov lock fwait jmp or (bad) in add pop jne test mov jbe cmp cli sub mov fcoms and sbb (bad) and pop rol loop lea outsl or and (bad) push push pop fcompl jb and sub shl addl out es sbb movb insl aaa mov in stc jne aam lock ficomp fistpl lret and or stc or sbb ret pop pop fstpt sub pop (bad) sub sar rcr insl cltd or add es mov into fnop lea dec mov push mov sub (bad) loope imul mov fidivrl mov and pop jbe xchg pop not test xchg call pop lods repz and mov in (bad) or pop mov mov fwait or shl lods fidivr sti testl push push insb ret sahf std or fidiv jo sub in jbe fmuls out pop jmp je mov clc jge inc addr16 pop movsl or imul dec dec mov pop xchg iret repz (bad) jmp mov cmp jae ja icebp (bad) loopne inc or sub cmp jae fnstcw out pusha add sub (bad) movsl inc je xor sbb sub or sbb or cmp sub ss sub add push mulb mov xor sub das push jnp mov arpl insb mov outsb push test sbb ret dec dec dec inc dec mov dec cmp int3 mov push push lcall icebp mov jbe imul sbb jne xlat cs js and out (bad) jae jle inc ss aas fsubrs adc adc mov push or (bad) inc out (bad) jo ret jbe lods daa jae dec (bad) and in inc sbb jne imul cmpsb cs insb sbb pop adc cmp pusha arpl sarl sbb roll rol leave push aas push mov aaa ss psubusw inc push mov sbb mov mov add mov pop sub das mov dec call out outsl or in sbb cld sub mov mov cmp and sbb mov cmp inc and mov inc or pop fcmovne ret stc jbe mov enter fwait je lds sub jnp pop sub push xchg pop push xor sub (bad) mov pop aaa dec cltd jae push fdivrl fisttpl call test adc pop hlt cmp pop lcall or fadds sahf in icebp ret decb sub sub inc push add push dec dec ss test and and adc das test out in ds xchg xchg fdiv push in fstl and arpl xor ljmp or mov mov add or decl jne cmp (bad) jbe (bad) cmpsb lahf ss movb mov xor pop ficom or (bad) aam pop mov jp test das adc mov cmp jne je (bad) sbb push aas adc xchg push sbb dec push pop mov push mov xchg in das mov mov idivl pop sbb cmpsb or jg or test sub mov loope push decl pop xchg mov adc cmpsl or push or (bad) and aas xor pop cwtl call out rol mov pop iret adc decl cmp pushf nop movq js push in xor int push gs cli inc lea scas add xor push jg pop jnp mov lcall sbb mov push lock pop or arpl sbb (bad) fdivr push add stos in mov add loop ljmp mov out out scas jge subps xor lea outsb xchg or rorl push xor jbe jnp sub popf les dec enter insl mov int3 mov jecxz xchg sbb or inc les cwtl out insl (bad) aas pop push and jnp cltd pusha int iret int sarb mov pop jmp inc mov aaa and orl mov js cltd fs ret arpl subl dec mov out sub int3 and lcall fisubl push mov movl push fsts dec mov pushl mov jge sbb add pop dec push rcrb inc je xor imul int lret inc pop pop jae and add roll xchg adc rcrb in outsb adc push fistpl fisttpl adc mov ret aas popl xor and je add sbb stc js mov imul fimul inc stos stos cmp inc adc imul push push push mov ss add push adc in cltd loopne sarb lods (bad) mov insl or push imul or les mov in mov ret (bad) neg sbb adc add add xchg mov jns xchg jo add jge push rclb pop pusha repz or rep adc (bad) cmp test inc pop jne insb and gs mov test and add jae adc or insl aaa sub in dec push ret insb and inc or sbb mov daa adc mov adc cmp sbb dec inc into outsl popf xor movsb add push push inc (bad) mov outsb mov pop imul inc cmp mov jne push roll aad xor enter pusha addr16 push sub adc add fsubrs mov sbb out sti lods mov test mov out and sbb sbb adc loopne pop mov std inc xor push xor and mov pcmpeqb pop mov lods dec dec or mov aas neg (bad) aad lea add pop push push in gs lods sub or mov mov sub rorl fdivrl push jmp push inc and jbe inc mov mov adc cmp loope push pop jp pop mov (bad) (bad) mov push xchg push sub ss mov sbb or xchg aas xor jl xchg jbe adc push sbb mov mov into jne push adc dec shr jo inc ss mov dec mov xor into dec inc inc mov and in (bad) pusha xor movsl push mov fistl cmp je pop out sbb push sub fstl jo fnsave sbb sub xor lock xchg cwtl xor adc sub cmp inc clc cmp aam pop pop push std bound jae es mov (bad) push push pop push cmp or and clc xchg scas push push and mov jmp es jne adc je cmp fnstsw popf add xchg test xlat (bad) jbe fnstsw aad insb (bad) mov jle and xor fsubr jge sub mov cmp jne repz push sbbl ficom inc pusha mov inc mov cmp mov daa (bad) mov in mov dec jmp push insl xchg dec push flds sbb push pusha into out sahf or push sbb daa pushf mov fnstsw push xchg and je sbb jne push inc sub fucomip arpl jnp fwait mov mov jle lret mov cmp inc add loopne test push clc sbb lea int pop mov xchg sbb je sbb mov popa adc sti ret push and mov cmp xchg dec sub mov out mov jne or sub mov sbb or and or test adc pushf loope push and xchg ret loopne dec outsb inc dec push inc js or das add rcll sbb push arpl incl jne push mov jle dec es iret pop pop aas sarb and and pushf and adc lock daa or xor lds push mov and xchg or mov in or out jl jp pop fwait xchg lods rorb pusha jnp enter (bad) pop (bad) leave or mov je add je fwait insb incl inc cmp jl jmp out push (bad) fldcw xchg push cmpsb jb adc add mov and mov mov sbb and scas mov xchg mov adc adc out (bad) (bad) pop mov js nop enter jnp inc mov sbb sub faddl sub outsl pop sti les xor insb out cmpb pop adc outsb rcrl fmuls insb sub add sub xor nop or pushf les cltd adc sahf clc rorb xlat pop push jne mov pop test je push cmp sti mov mov xor sub out push pop out mov loop sbb icebp jmp mov cmc mov xor add leave mov cmp call cmp lcall sub dec int sbb xor xchg xchg psubw mov push push push mov lret (bad) mov mov jmp in dec sbb xchg sbb (bad) repz dec push mov dec mov cmp daa dec cmpsl leave or rcll mov test invd push dec and dec or add push mov xchg push inc add (bad) fcoml add jnp inc aaa jp push call aad cltd loopne mov xlat mov xchg and ja ret or push xchg push stc pop sbb pop aaa rorl insl icebp je sbb or mov rcll subl cld mov pushf shrb or mov jne mov leave mov xchg push mov rol jbe inc adc out in mov fstpt fldt je dec and xchg iret jno lods jl test push mov in push iret scas dec adc call mov fisttp or sub sbb lea insl fist add int3 aad fcomps cmc in cmp mov mov mov cmp jne mov push and jbe sub or add push mov push (bad) lret daa cld lret testb and inc and dec sub push neg pusha xor push push sbb imul xor jmp cmp xchg lods mov push xor push inc ficompl pusha jle xor dec in out icebp rcl ss sbb adc fcmovnu adc ss or sbb movsl cmp in sub and xchg add (bad) jmp fs fnstenv dec or jge and mov sub sbb push cmp and push jbe int push (bad) xor jb in ret out cmpsl and push aad insl stos mov add dec out call adc or cmp mov or cmp adc aas clc xchg jae iret and dec adc pop push mov call jmp sbb sub sbb aaa jae pop xchg mov jle jl jne xor push mov lea ffreep idivb pop xchg mov es (bad) lea pop xlat aaa cwtl cmpsl and xlat je dec push aaa ja or adc movb or mov (bad) notl sbb push jno cmp and push push popf cmp jae sub call test push fsubr scas add xlat sti pop loopne pop and addr16 inc inc xchg inc push jo jo ds into push xchg adc jne jge sub (bad) jmp (bad) into cmp je push dec mov ret and fnop mov add insl mov xchg pop cmp pop mov mov xor or testl (bad) sahf mov sub (bad) outsl data16 dec jb ss lcall dec add das dec lods test inc pop dec mov dec xchg dec add pop dec adc or or cli pop out xlat sbb dec push add add push sub cmp inc push jns (bad) or repnz lcall es fsubrs push sbb (bad) mov data16 sub jo jns push test dec aam js in adc pop (bad) mov xor xchg jo add and sub jne sub jge inc in inc and inc js cmp inc test xchg rorb out out or sbb push sbb dec mov or or mov xor add ret aad sti add ret push mov add mov mov sbb shlb aad inc adc in mov enter daa (bad) mov lret pop enter lea add cmpsl (bad) jne cmpsl mov dec push inc lock addb add popf sub inc ficom mov fmulp and pop (bad) fsubs sbb inc loopne mov or mov fstl push mov push gs pop jl jo lcall mov add mov mov push mov inc and sbb or mov shrb loope mov (bad) xlat repnz push repnz mov insb in cmp lock pop fcmovnbe jmp loope lock push and push xacquire xchg push imul mov mov addr16 dec mov inc jno sbb lahf and daa jno inc cmp lret sub aad xchg test or jb xor mov or push mov das mov push jnp outsb fadds int adc or movsl insb leave jbe cmp roll aas xchg push xchg test or mov mov jp lret mov ret push jno sub (bad) or jp ret inc push (bad) push jns xor sub mov sbb movsb cmp and or sub mov mov xchg int3 mov mov lret mov xchg sbb sbb push cld cmp and add sbb in pop pop add mov add fidivrl ret lods pusha sahf pop repnz adc or mov mov push mov (bad) lock or cmp pop dec pop mov fcoms pop jb (bad) xor or cmpl out je adc fild aam inc push nop/reserved js mov leave cmp fidivr daa lahf pop mov xor (bad) pop add xor repnz repz out jne cmp sahf pop add jbe xor xor add add inc rcll fs xchg cs push movsb adc add jmp subb addl inc stc test push outsb lea xchg mov (bad) loopne dec mov imulb dec insl or movsb pop nop inc inc idivl rorl jbe idiv sbb clc xor repz pop je sbb sbb and pushf or idiv inc sbb vorps inc or lds popl adc (bad) fsubrs push shrb lret sbb jne and add sbb mov adc cltd dec add ljmp loope push or xor ss jp movsb cli int pop ffree int xchg pop cmp inc cli je and mov mov mov push push or mov mov cmp and sub icebp out jl mov mov pop jl add (bad) jge gs jge jb push or ret fs mov test in fs jp (bad) testl cmp (bad) (bad) add js jmp orl int incl or (bad) int3 int3 push inc xor pop inc xor (bad) or popf or push mov lret in (bad) icebp mov (bad) inc clc adc inc cld lea and mov imul popa lea mov inc ja pushl push lea test pop pop inc or xor and sbb mov xor iret fidivr mov push or or lds fistp mov jmp mov lods hlt pop mov sti aas pop push mov push mov lcall add push and mov scas fidivr in loop loopne scas add gs sbb xchg add repz arpl (bad) mov jmp pop leave rcrl xchg or or jge or in push fdivl outsb mov sub std shlb or sub lods cmp jb jae adc data16 (bad) repnz mov inc adc adc cmp enter (bad) push adc add mov in roll sbb mov mov cmp fisubl popf mov push sbb push inc ffreep mov test push xorl out rolb cmpl sbb fdivrs inc sub out sbb cmp insb outsl scas scas sub add hlt clc ret ficomp inc mov mov popf adc xchg fcomp and add insb rcl lea push (bad) xor jbe fadds pop dec int3 jge inc adc je mov push sub fmul int3 std in cmp mov mov and scas (bad) and fwait imul jmp add in adc adc loope cmp or mov and or mov sub xor imul arpl dec pop pop xor je push or (bad) (bad) or ja pop dec (bad) scas cmpsb or cmp jne xor pop mov mov dec andl aaa mov jle push or dec inc sarb movsl xor jge adc mov inc int3 dec jae cmp ja cmp fsubrl out fldl mov outsl cs int3 mov scas mov mov roll (bad) cmp cli clc jb clc ja js jae and cmp jb sti mov aaa inc jmp mov jb int mov enter inc push (bad) enter divl loopne arpl xor mov aaa and mov mov mov mov add sbb pop mov int3 lea xchg mov sub cmp inc and lcall pushf add test mov dec (bad) je arpl pop call dec (bad) xor lock hlt clc sub mov ja incl lock or lock fdivl adc popf pop insb ss stc adc or leave and addr16 jg mov outsb jnp std jecxz ja inc neg out lea iret leave and inc (bad) stc sub xor lret or dec mov add outsl add or dec mov pop inc mov add add mov daa and sub add lcall add and ret sub inc inc xchg sbb (bad) xor sbb sbb adc or or dec roll pop pusha pop ret add inc xchg mov fsts pushf mov jae adc add inc sub dec out fcoml iret mov rclb rol sub stos add cmp xchg push mov mov sub sub or add mov out xchg enter outsl lock ret mov mov in add ret in loopne mov pop pop pop inc stos push jp (bad) std (bad) mov add mov push hlt add push mov call mov jae (bad) je mov divb testl pop cmp je push imul or cmc sar (bad) (bad) ret adc jne lea mov test je sti fstp push mov mov xor mov add fnop scas mov das xor ret repnz inc imul add sub fsubrl push lea popa cmp jl fisttp pop jg xor mov (bad) pop jge cmp mov lds ss xchg into enter lock mov and bound fsubrp (bad) in adc sar mov (bad) dec add loopne or mov adc push or adcl jne cld push push leave mov push mov cwtl fmull jmp add scas lea inc shrl imul sub loopne or cmp ds dec jmp rclb aaa fcomps inc cmpsb int jnp or lods add jg add mov js sbb lahf push and inc cmp mov lret insl add out xor pop lgs das mov pop aam je jg mov or ljmp dec add mov jecxz cmp dec push push movsb mov sbb mov mov xchg test inc pop push loop test xor xchg inc xchg stos notl sub mov fsin mov mov add outsl dec fildl pop cmp xchg cwtl sbb xchg cmp mov adc push call aaa push add rolb pushl call push xchg mov cmp push sbb mov jo mov bound lds push ret pop dec and mov mov aad sub jnp,pn and loopne (bad) sbbl cmpsb push stos lea inc jle adc cmp test pop jae inc mov or loope test pop push push es fwait insl jb pop movsb xor mov mov in dec and in cmp lret sub adc cmp add pop and lcall xor data16 push pop mov mov mov aad aas inc xchg sub push movsb (bad) pushf ss ficoml pop les pushf testb (bad) mov rorl test mov pushf push push fbstp adc mov cltd test push add lock arpl xchg sbb lock sbb pop das and and loopne push mov ret dec les test scas inc push add push dec dec rcrl adc push cld (bad) gs mov cld js loope inc cwtl outsl in fcoms pop push xor aas add jmp out fimull add push dec jae fwait dec fsub imul or mov lods lret popa push scas faddl lods popa insl mov cmp loopne popa cwtl int fisubrl push leave sbb and je sub notb je cmpl mov ret sbb adc adc (bad) jmp push or cmpl arpl pusha sub js jbe jo not inc je or sbb ficoml push push mov in mov pop pop sbb mov sbb lahf data16 or (bad) jl dec push jl pusha scas mov jg inc data16 push jne mov jle jne pop sub or add es xchg pop inc jo xor (bad) jae adc pop bnd nop pop xor in push stc add gs adc sbb sub enter mov jge mov cmpsb mov mov xor adc cmp jae jl jnp jg mov add xchg jle inc sbb or js dec sub jle jbe aaa fsubs int sbb in jbe cmp jg or addl cmp ret pusha in jp jle rol subb fidivr movsb decl cmp popa sub dec or das inc and dec inc lock js cmp rcl aas inc cmpsb fdivs pop imul data16 insb xor inc xchg test sbb lock mov dec cmp jl cmp sbb inc adcb jbe mov arpl fs cmpb es pop pop (bad) insb lock push outsb jmp pop sti pop call aad bound dec dec cmpb mov mov fdiv je rorl push or lret hlt and push add pop and adc push push inc lret mov test or cmp mov mov mov jae pop sbb scas jge cmp add imul inc cmc inc lock mov push inc loopne ds (bad) enter jnp adc push ss pop jmp pop dec sub repnz sub mov xor and sbb jge rcll or cmp aas sahf out pop mov push jne push out sub push outsb push cmp or daa sbb jnp inc mov adc ds push ret int stos inc push data16 ja loopne,pn pop or sbb pop aam mov add pop inc jl gs insl nop mov and xchg loopne js (bad) shl dec push dec jo push xor mov push imul in ja and mov daa dec or xor inc insb mov aam mov mov pop inc sub sti iret xchg stos push push imul pushf js sub fcomps cmpl dec and mov mov mov dec sbb je pop inc or pop inc nop jg aaa sbb mov push cwtl add and jae loopne push sbb imul pop add (bad) or movq or push jb adc imulb addl pop mov es movsb add add push cmp fcmovne divl leave adc or movsl lods inc inc adc sub sbb add dec jae add pop pminsw mov mov out mov push add pop and rol lret sbb add and divb push mov dec (bad) int xor push pop jmp sahf dec fmul cmp dec stc js dec push jnp or les sbb or stos pop rolb mov jmp stos jmp cmp and pop push mov and add mov sti inc xor addr16 test push popa sbb inc or lods inc pusha pop fisubrl inc push fdivrs or or stos inc mov test push jne push movb xchg insl (bad) mov jmp fstpl cs stc imul fdivrs stos and mov or dec test mov pop jge and mov test es xchg jne push dec xor add add mull xor stos pop inc push push jne and mov insb es push mov lds (bad) (bad) fiaddl inc popa or push adc nop or and or or leave fimul push cmp pop mov (bad) mov xchg sbb call pop andl jmp xchg adc inc add inc out mov mov sbb fadds push pop xchg pop lods push faddl cmpl or loopne and add test cmp rolb js add cld dec mov xchg sub mov xchg xchg or or sub pusha out or in sahf mov stos pop fwait mov lea out cli adc movsb cs ja enter outsb cmp call outsb jmp popa jne enter loopne mov (bad) pop leave and mov add rolb adc push ja xchg popf push jnp xchg out fs out cmp add call pop cmp xchg xor inc mov add cmp sub call lret ds loopne jp lea lock mov dec fistpll mov in pop push fild adc jle arpl pop ret fsubl sar mov inc cmp es or mov xor xchg in enter movb sbb and inc jmp pop stos push fbstp faddl popa bound dec xlat rcrb xor adc inc or mov mov aam add inc icebp jle xlat mov cmp inc lahf popa mov movsb outsl ja push mov insl mov shll jecxz jmp jae sub icebp inc cld dec ret jb je add push mov sbb add rcr xchg stos cmp lahf push stos js out lods or xchg into sub test jl inc dec adc dec inc pop fs cltd out jne add push popa push fmulp rorb shrb cwtl mov test mov xorl fnop mov inc sub xchg dec outsl or or repz xchg adc enter mov inc jmp (bad) (bad) xchg dec stos jle pop mov shr mov aam enter lods shr push test ds (bad) stos aas dec sub mov push and lret es sub xlat add sbb scas and or pop loope jbe inc jmp push inc or popa jb orl loope push je push jecxz xchg popa jmp dec dec push nop adc dec adc mov inc mov or jne int3 dec cmp inc mov xor adc dec aas or int mov loopne dec push push adc and out mov mov fcoms mov or xor out lret xchg fcoms inc and shrl les mov jp inc sti std pop lea pop ret lea push inc pop push cmpb stos inc cli test jg add fnstenv push adc or push sarl adc mov mov lcall or stc xor xor xor xor cmpl and and mov and pop pop pop enter jg inc cld cmp je cmpsl out cmp je cmpsb jmp mov adc fwait push aam xchg sub push fisttpl into dec std cld or stc and mov push hlt (bad) pop in and enter arpl cmp mov divl jne adc movsb add shlb push adc fisubl jl enter aas ds sbb ss sahf sub call adc insb adc pop aaa mov les test in inc push mov pop push push mov in lret jmp loopne sub nop sbb cmc call add push mov adc imul mov sbb ret xor mov dec xlat and jns inc and mov out cmp jae loope insb lea pop icebp subl aaa and inc mov cmp in cmc loopne push test add adc add inc les push jmp inc cmp jb hlt mov fcmovu je cmp push pop int3 sbb and insl mov insl cmc xor inc or or in aad push fidivl dec cmp dec (bad) mov mov push (bad) mov fmull pop loopne xor mov mov je push fs je (bad) outsb mov mov sub lea xchg aad mov clc mov (bad) sub inc dec pushl cmpb pop mov dec push test insl aad pop sub sbbb test subl or jmp mov jle enter stc addr16 testb pop imul pop je andb mov mov push std or in aam dec cld and aaa mov jg add orl mov mov das cwtl popf xchg pop adc push sbb loop push out pop add or lret iret fisubr or mov mov sbb mov and or test adc ror (bad) sbb loop mov or jg (bad) test pop push adc mulw or imul loopne je jbe sub out push pop sbb decl push ret adc and mov push sar mov cltd stc add lcall shr push enter jmp mov int3 pop sub add cmp pop mov mov jmp cli push push clc pop pop push (bad) or addb loopne es and ret mov leave sub jmp leave pop mov inc test jb les fsts dec pop outsl jecxz idivb cwtl jmp jl or test mov outsb cmpsl push sti and js push movsbl mov sarb (bad) mov push fistl dec cltd pop xchg les fldl dec shr push movsl addr16 push push adc pusha jb xor xor fldt add push mov call sub add pop dec dec je or mov daa or xor add adc jb sti sub popf fldcw lea add pop fmuls push mov inc inc enter shr jmp mov sarb imul mov jns je insb je ja jmp ret lret adc and fisttpl inc cmpb loopne inc enter xchg les sub rcrb ret mulb sbb sbb adc sub xor push ret xor lahf add clc addr16 jge xchg add (bad) in repz pop call rorb in jb add shrb mov mov xor sar mov lea sbb (bad) rorb pop int hlt dec sbb mov pop or fcmovb fnstenv xor fisubr lock out inc jmp xchg imul and add adc mov std pushl (bad) int sub mov push out (bad) js cmc xor jl test dec rorl xchg test (bad) testb enter pop ja imulb lds add push push ja lcall sub inc xor out pop aas dec outsl sbb mov sub pop roll jecxz out mov ret arpl or push je xchg or fsubrs in or addr16 (bad) mov int3 rcll add mov push fs pop add aas cmc enter je dec hlt jmp ss (bad) dec shrb hlt lods jne clc xchg sbb dec mov pushl daa inc stc push fcmovb push cld aas enter pop mov sbb and cld pop mov inc add or cmp in test inc insb insb jge pop ret sbb xor sub add fildl test cmp das aaa and in lahf fwait jecxz daa cmp rcl inc sbb add jb adc mov cmovno or es sub xchg insl cmp xlat push fcoml adc inc ljmp inc sub or cmp push cld push mov (bad) test sbb mov data16 in mov sbb sub nopl jno or je inc idiv popa cmp inc cmp fs pop cwtl xor (bad) rcrb es mov jmp and jmp pop xor sbb jg jl jae push push ja js rorb loopne fisubl and pop jnp shld jge sbb aas idivl aam loop xor or sub xchg in (bad) pop jg sbb lock jle js fcomip push push repz (bad) or add adc sti cmp pop add hlt mov mov scas push sub xchg mov pop mov fisubrl je fnsave imul (bad) and mov into hlt mov test rolb fsubrp es mov imul add mov fcoml insl add sbb mov push push or ljmp daa adc rorb jae add sub inc add mov hlt lea testl inc mov inc lds sub xor fcoml (bad) dec fildl xchg dec hlt sbb mov and add or pop or test pop mov fwait in push inc mov popa (bad) stos pusha add adc dec shrl push mov bound inc dec mov dec add cmp mov sbb or (bad) fdivs and loopne xchg push sbbl cmpsb scas sub pop mov add adc mov ret add or lds mov dec cmp es xor push inc xor push ss ret dec loop inc pop enter add arpl and fisub mov sbb sbb rcrb (bad) enter jmp test mov inc and (bad) jle testb and sbb fucomp cs fwait or cmc movsb xor int fldt xor ja mov mov sub or loopne imulb loopne repnz sub lock add mov sub repz roll push out test insb cmc orb jge cmp les push fildl pop test je,pt cmp cmpsb pop jns dec dec sbb nop pushf adc cmp pop xor enter int3 inc sbb dec (bad) es xchg or loopne daa cmp mov mov mov dec inc subl pushl faddl sarl loope mov outsb test or push inc add insl pop inc stc jmp pop loop push mov push mov adc fildl (bad) mov or cmp jge lea shl mov enter push add fs and add add cmp jl aas adc cmp add sbbl (bad) xchg sbb dec cmp xchg jae iret and repz sbb push cmp xchg pop sub push mov pop pusha rorl jne pop push call xchg push pop push ffree shrl jp cmp push (bad) aaa fisubrl or lcall dec cmc out adc cmp or add je cmp imul mov push cmp jne cli (bad) mov dec inc pop push loope mov jecxz fcmovu fbstp cmp jbe inc or ja xor mov jmp lods icebp sbb pop hlt pop pop mov (bad) std xor daa inc jo dec jl cmp je push in (bad) ret das mov jmp aad cli js push roll and or inc cmp je daa mov loope lods lds ds and cmp das shrb insb push cs ss jle fistp negl std aaa jne pop incl mov movl mov cwtl push add mov bound jl test pusha mov push aaa (bad) cmp push clc cwtl clc sbb lahf pop outsb and xchg mov ret es sub (bad) mov mov push push xor int pop or mov mov call or (bad) mov mov push (bad) cld aaa mov mov fwait inc stc test mov inc cmp sub push mov lahf je add push mov mov inc inc or jmp fstp pop lds add sbb inc in mov (bad) xorl mov sbb or or jne into dec mov shrb inc sbb push inc out imul sub cltd mov enter adc add mov and xor jge inc jmp xchg sub xchg imul sbb jge add and test jmp std negb sub xchg ret shr mov dec fcmovu mov mov push pop inc mov jne sbbb cmpl or or sub loop or push push pop sbb inc mov jae add pop ret fst xchg femms sub add mov mov add jbe clc mov (bad) mov rol insb add repz test and adc (bad) ljmp jbe ljmp repnz push sub cmp jae xlat or cli in sbb push repnz das dec (bad) push inc add add xor add jmp xor and inc and and mov out ds fnstcw add lock jmp dec dec mov test (bad) insl pop repz inc cmp add sub inc push sub dec into dec or sbb or in call xor fsubrl dec push mov sbb xchg or sub mov xchg scas add xchg cmp jae orb pop outsb mov inc add and adc add mov sbb sarl in in pusha add (bad) (bad) cmp jmp lock jl cmp sti jge mov cmp int fstpl (bad) (bad) jae andb aad sub inc mov shlb movsl sahf mov dec jl (bad) inc aaa or jle das add cmp adc xor inc mov ja and or out or idivl mov and cmpl lea jne ss mov mov das enter jmp ret dec dec outsb adc add loop jo (bad) mov das sbb dec jle jle jbe mov add repz loop jl incl inc cld ret inc insb arpl jnp jmp adc jne test mov dec sbb aas test jo sbb imul adc test xchg int insl mov lea fnstenv negl cmpl insb add fistl aam push xor sar in jp cmp popf add stos add jl cmp jg sub mov inc cmp jne inc push adc ret insb ds xchg jge mov jmp arpl pop or clc push dec adc pusha testb pop add cli xor flds sub imul or xor ljmp jmp repnz sarl rorb sbb jp sbb imul mov inc movsl push pop ret adc int3 jno pop adc lret out mov out pop loopne,pt xor test jae outsb fildl test fnstenv repnz iret adc push negl sbb cwtl pop mov (bad) pop add push push and sbb push cmp adc mov leave mov stos repz je inc cmp out jae out add xchg sbb sbb insb jne into sub call pusha mov inc push cli jne icebp sub pop inc push push int3 push lods pop dec mov js addr16 sti pop adc mov mov inc aam jbe sbb xorl add push je push jb cmp pusha decl adc mov and pushl pusha in mov push cld mov mov clc fisubl aam les push lea cmpsb adc in adc push popf push imul mov in aad out xchg add andl stos xchg mov pop bound hlt xor add sbb push push andb add push or mov mov cmpsb adc add loop ljmp jb vmovntps shr mov mov iret imul inc test in dec test jl clc fldl adc lea mov mov insl les imul or jle xchg sub xchg aad jo pop rorl dec (bad) dec mov and mov jmp dec add das jne cld shll pop mov andl cmp fs and pushf mov imul jl add pop push pop jno fsubp push adc add pop add (bad) push data16 imul pop sarl jmp xchg push mov sub adc sti add mov icebp add fisub out adc (bad) adc cmp je mov movsb jno inc cmp out pop mov out not and add or loopne sbb in jl mov pop push inc dec into pop cltd (bad) lea pop or pop (bad) hlt or test into subl pop xor int sub aaa add add pusha mov push mov fcmovnu adc and fsubs or insl pop ret inc lods or jmp and and mov ljmp aad adc cmc movsl add pusha lcall cmpsl rorb fild jnp mov sbb mov sbb adc xorb sub outsl push push fcmovnbe mov xor push or ja testl paddd mov add dec add cmpsl or cmp (bad) adc mov cltd ds adc adc cmc or mov add rol ret test enter lea push fbld add das cmp pop mov insl or push sar push stos fidivrl add dec push adc xor dec cmc fisub lea sub dec pop and faddl add and sbb cwtl inc add jne jmp nop aam sub call or jae inc sub and and or sbb out jbe lcall pop jne mov cmp es add pop and jae add aaa jmp mov or fimull jnp sub ljmp adc inc test imul imul adc mov cli (bad) push cld jnp pop fisubr mov mov mov or cmp push fstpl loopne jecxz push inc or or mov sub (bad) neg mov xlat je mov shrb lods pusha dec dec push into pop je imul push fs pop jl fldt add mov push stc inc or add icebp inc arpl cmp jle pop dec or jmp repz add call scas cmp in and mov decb jne movsb lods pop enter or leave dec adc sbb test pop (bad) mov sub cwtl sub subl jp pop inc sti adc mov jp or fs mov adc and rcrl jge insb jae xchg rcll mov jle shr or or das outsl pop sti subb lea and jnp mov (bad) jb mov xchg add lahf jnp pop push add mov jne add and ret outsl add xor lahf shlb lea jecxz jns jne,pt cmp cmp push outsl adc movsb dec outsl test or sub ljmp xor lret push outsl pop sbb ret je mov enter les roll ret or enter xor push push std push mov nop sbb pop jbe stc lods movsl add jl and inc outsl lds inc cltd loopne cwtl movsb mov jo fwait jno xor pop pop lods fcmovnb dec loopne ret xor rolb cs testb add dec push insb and shl push mov cltd push or rcr push mov lea cmp inc fcmovne icebp repnz pmuludq sarl out ja,pt mov adc push sub cmp jbe and add subb mov or inc mov sahf jecxz or push mov mov jl js add cltd ljmp xchg aad mov cld fisttp and lea sub xchg push jp mov ljmp cli dec cld dec cmp add lods cmp orl mov mov add xchg (bad) insb cmp movb lock lea pop xchg fsubrs pop xor cmp mov pop push clc icebp add sub and xchg sbb nop dec or jno pop mov fs insl es into add fwait stos fstpt sar dec inc xor rorl pop (bad) cli pop scas sbb mov lret pop aas or dec dec pop dec pop pop in xchg gs pop call pop inc nop dec xchg and iret in js mov mov inc dec or insb dec test mov inc xor and insb inc jno cmp mov sub jge pop mov mov pop xor jnp adc jbe in jge inc mov jns test and inc cmp dec push es jle loope dec call jbe push pop add ja push fs ja jno gs jne test xchg jnp push add xchg xchg sbb popa push xchg xchg psrad xchg into pmulhw mov xchg jns or mov addl push loopne push push pop add lret pop mov and pop pop xor mov or mov shrb sub ret pop mov test pop and daa add push shrl scas mov icebp ficompl jno bound fist jmp pop pop sarb mov mov push mov cwtl inc sbb ficoml mov mov jg rolb ret rorl mov or cmp push cld mov add cmp jae orb jne addb inc add (bad) inc cld sbb mov faddl repz (bad) stos je inc test sub call jmp hlt cmp mov add nop push inc loope int3 mov pop stos or or xor incl xor mov fcomi aas push aas mov pop mov jns test push sbb cli pop orl mov mov push pop xchg cli jge mov jmp das sub mov sub pop icebp push ljmp sbb cmp inc push jle or push cli out pop sub stc push movsb imul ljmp dec mov sbb in add add mov pop test push push mov push pop push cmp bnd fmuls mov enter sub je adc lock rorb sub sub fucomp stc or enter movzbl add and call push out roll push loope gs and adc pop fwait in push outsb insb outsb sbb loopne add imul out or sub sub jp jbe add cmp sub cmp jl cmp les es es data16 or add mov dec call add mov aam hlt jbe pop inc jae stc jl dec add and sub or jne cmpl jb loopne mov inc cmp mov (bad) or pop mov mov inc sbb add inc sarl insl ss sbb mov xor pop pop xchg in testl cmp adc adc pop xchg out rcl add pushf inc ja mov mov in push xchg clc sbb pop cmpsb mov jp xchg mov push orb sbb mov inc pushf aad push adc pop sub call sti cmp jae cmp sbb repnz ret add adc (bad) xor pop xchg cmp and xor je (bad) and sbb jne jne outsl cmp sub push and sub lea inc bound roll repz mov cltd sbb push cld add mov test pop add sub or pop xchg pop mov inc jno enter ds lods mov jp or test jmp cmp pop cmpb inc inc aas pop lods ret jae cmp and faddl mov cmp (bad) cltd mov mov lahf repz jae fldl xchg jae jp xor push xchg jbe jne push pop add xchg sub and xchg mov in mov sub xor adc jmp jns sub in sbb jb out jmp mov lock aaa cmc rcrb mov movsl add add js pusha pop or and push mov sti inc aas das lock and sbb jl sbb das (bad) jbe call insb loope std rorl pusha jae adc add fcomps lock rclb popa or (bad) inc sub jne mov fnsave mov (bad) ja and clc (bad) mov sub jle xor push gs cmpb int push pop inc inc stos arpl sub add jne lods push mov nop add push push sub in adc add cmc mov push mov and leave adc les and xor sub push adc pushf adc sub testb ret sbb push inc inc mov pop sub add cmp add ljmp and or dec negl je out inc add adc lods mov rcr and fimull popf nop es (bad) cmpsl inc ret or loope add iret (bad) in inc jmp add lcall rorl scas clc add mov lods push push mov pop push adc loopne punpcklbw fcoms (bad) xor adc xchg (bad) ds nop inc dec mov pop mov mov pushf add (bad) mov mov cmpsb imul and pusha lcall rorb and je insb orb loopne nop mov jne repz or or cmpl loopne pop xchg xor (bad) jne pushf add pusha rol xlat mov pop lock mov (bad) cmp adc or inc mov sub fldcw test inc stos or mov in dec je test divb sub add and das fnclex cmp gs stc je cmp fldenv out cmp outsb pop fldt cli sub or mov call arpl rorb ret lods test xchg fidiv sub mov push fstps pop push test pop add cmp sbb (bad) je push add mov push cs or pop xor xor cmp aas push sub sti mov add add jmp cld mov inc inc leave call bt repnz pop sahf cmc and dec mov inc movups sbb inc push jne pop mov ror cmp outsb inc frstor xor test into adc adc and ret or xchg adc call add mov cld push std flds lret mov push repz clc in lods aam ja cmp ja decb sarl pop add cli fidiv lea add push and adc out popa enter mov push jns jmp add jmp jl scas mov or sbb or and out xchg add and fs xor popf rol into adc cmp popf or xor or mov (bad) jae add jecxz bound roll adc dec xor jae pop sub rcl dec test mov inc mov loopne adc std cmc cltd jmp stos cmp and in xchg stos push jl mov loop or mov icebp pop xorb fsts ljmp mov sbb leave inc ja call ret pop mov sbb mov mov inc outsl inc popa push xor sti insb sbb lea enter inc and fmull je nop lea ret shrl nop jne push int3 adc into xor xor mov sbb sub push pop sbb xlat pop xchg dec push xlat mov in ss sbbb inc outsl mov lahf adc mov inc adcl lret (bad) xchg jle fstpt xor or adc sub (bad) pop imul fsts shrl push fs mov jbe scas pop jne sub sub test sbb in mov push mov and adc push dec lods mov into and test mov lea and (bad) dec sub inc cld cs pop (bad) push mov scas jge lock andl sarb ja xchg jb sub andb (bad) mov movl cmp sbb inc cs push (bad) int mov rcrl pavgb xchg aas movsl or push pop add int jae or mov cmp mov or movb inc mov lea jl mov cmp inc int3 sub in hlt sub cmp push jno xor or pushf inc fadds icebp (bad) mov (bad) jl or adc (bad) (bad) xlat nop mov add rorb cld pop push mov push (bad) lea push push pushf mov or mov loope pushf jge xchg jo loopne xchg and movsl push xor pop sbb stc and add (bad) mov mov movsb lock add cmc add stc jne inc insb adc inc cmp inc sbb notl xor or inc adc inc mov adc (bad) mov push mov pop cmp popa sub or scas jne xchg ss mov addl mov adc call jb (bad) loop js jge mov ss std pop mulps and push mov sbb push sbb jo xchg mov shlb cmp xchg jl sbb xor test cmp inc xor cltd add sbb lods insb jg imul (bad) mov and cli loopne jl mov or push (bad) mov mov push (bad) jb cmp sbb cmpsb jno push lea mov cs adc and and dec xor out push and sub jle xchg mov or fsts mov aad lods push aaa push xlat push mov add push xchg sti or (bad) or pop adc inc mov xchg add mov lahf adc jne data16 push push mov lcall pop sbb cmp xchg add pusha and sbbl mov aam fadds test stos or push lcall leave das (bad) ficompl or or test mov pop shrl or call adc jmp rcr or jne (bad) mov mull inc push out (bad) jb cmp ja pop cmp jbe dec fldcw outsb outsl loope data16 sub outsb pop dec imull add outsb sbb inc notb add imul imul test out stos mov mov fisubl xchg inc or mov test inc inc cmc and lret inc xchg roll rorl mov sbb push lock int enter sbb ss mov push imul adc push fisttp push add sub xor je cmp inc cmp ss stos (bad) xor lock and inc andl lcall call pop stos mov jmp mov out cmpsl mov xchg test cli adc in std inc rcl inc cmp ja adc inc pop out pop push add lea rorb or stos lea lret orb add mov add mov ret cli inc inc in push cmpb sub push rcl or inc mov movsl movl movsb adc mov scas mov movsl inc shll mov call pop cmp push cmp sub pop imul sbb rcll dec stos add divl or push cs orb imul jbe pop cs sub (bad) (bad) fisubr jae adc adc je jne nopl sub subl or lock add insb or adc testl mov and iret pop fwait push js pusha and out or adc mov sub roll inc repnz ffreep test push lea dec adc sub (bad) sbb mov add test repnz inc inc mov or rcrb push cli mov lea push push sti into pop nop mov std sbb int3 es xor and subl cld push pop or fimull mov adc mov mov add js nop cmp mov rorl dec adc and pop mov enter ss mov jb jp push aad jnp and and loopne dec mov hlt cmpsb adc sbb adc cld adc adc and inc jne ficom push and mov ja leave imul jle cmp andl fldl notl add pop mov push jmp push pop call jne dec adc test or pop dec (bad) fistl mov mov jnp jmp or (bad) ja adc push jne je adc xor fsubrs cmp adc pop lcall jne sub fimul push (bad) pop add pop add shlb mov dec jle mov nop sub or mov divb jmp push sub and sub cli push cmpsb jmp lea in cmc lret or push loop adc addl xchg imul arpl icebp sahf sbb sbb push mov mov push pop test fcmovnbe cmc xchg jmp test add jne test jne movsl loopne test or sub dec jbe sti testb out or clc push subl xor test aad pop add ja sub push sbb lcall sbb ror push aas mov push xchg mov mov nop in call dec sub imull push adcb insb pop mov jmp or pop push mov sarb or adc inc ljmp and dec loope clc lea push sbb in fisttp subb scas inc rcrb push jge or push je push sti jne inc cmp inc mov out sahf addr16 mov sub (bad) scas loopne ja pop sbb pop jmp sub xchg cwtl inc lods xor pop mov xchg mov (bad) push sub addl shll popf cld mov or scas imul xabort lret fistl or je add mov and push push adc je xchg mov pop (bad) mov add hlt pop push push pop mov jge inc lret inc insb jno test jo add sahf mov pusha xor jl sbb mov setp (bad) lods test sbb inc push or sahf mov (bad) imulb xchg sub inc and and mov movsb adc xor jp and and out rorl jno inc jne cmp lds mov je sbb test cmp sbb and shrl push insl je and lods (bad) cmp adc add insb fiaddl sti jmp adc xchg movl mov daa pop sbb xor jne mov cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 inc jne add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt inc pop or push push lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb sub mov sub push dec cmpb lea mov fcmovne (bad) jge and or push pop pop aam stos push cmpb cmp push or loopne xchg jle push mov or or mov notb xchg xor mov mov call sub and int3 adc xor (bad) std push sub repnz add pop jl pop es imul pop xchg aam fcoms push fisttp inc mov sbb inc jmp push cs mov mov lcall stc rolb add in lea inc mov push push cmp and cs jmp movsl add in or xor fistpl mov push pop mov and pop fs call pusha and adc dec ret mov pop pop mov leave test push adc and arpl sti enter xchg sbbb (bad) mov iret and mov jne or sbb dec inc cmp jo cmp cmp popa add xor cwtl test sub out daa push pop adc es dec adc adc cmp xor loopne xchg adc pusha add adc or inc popa jnp,pt cmp sbb or outsl inc outsb jmp sti (bad) ret pop sbb add dec fs nop mov imul push mov stc and (bad) cld add push inc pop add xor inc test rolb xor xor sbb enter mov clc cs ret push add rorl add imul mov push outsb mov mov or and test cs popa test xchg adc xor iret data16 xor and and xchg inc cmp and dec sbb adc sbb fs nop mov in mov lock ret (bad) sbb dec pop insb jnp push cwtl push int pop syscall aam in cmp cmpsl push test rcrb lods add ss cmp sbb pop dec and add sbb sub push and mov push add add mov jmp push loop mov lcall lods test test andb or jbe mov and ds pop mov mov cwtl subw and inc test scas jg inc fucomip popf push repz rcrl push sbb mov push sbb add call push les movsl or mov sub (bad) or mov push or and dec lods add icebp push int3 and cmp cmpsb cwtl jmp fs or or jbe pop adc sbb sysret lods inc daa jo enter xor inc jge lcall andb sbb xchg in fdivrs cltd mov push lea jmp nop sbb dec push sgdtl enter cmp std sbb gs jecxz push in xor pop loope jne sbb into push in pop mov mov inc mov inc add mov popa fistpll dec or lcall shr sbb insb xchg incb adc or mov jb test inc int3 out and mov in inc testb mov or adc inc and outsb sub jmp jnp pop push mov bound pop push outsl mov jne (bad) push pop repnz adc sbb xor ds or bound stos adc adc sbb shrb notb stc or xchg int ljmp and addb pushf std or add aaa sbb inc mov and pop dec or push or dec inc sub cmp pop add aad (bad) je cmpsb inc push or dec call inc outsl dec cmpl or add pushl mov ret mov pop pop cmp dec scas push imul into jb inc sbb sbb popf and mov add xchg mov dec add push into add pop aam pop out pop mov loopne movsl in inc mov iret or pop lock cmp mov pop inc pusha mov push lods int jns or cmp shrb loope sub mov inc xchg int push cld pop rolb mov mov popa inc add sub leave xchg cmp movsl dec jmp push repnz add push arpl push loopne add mov sbb xor mov adc add sub je mov loopne dec (bad) xor (bad) sbb cld mov add sarb les les and push cld ret cmpsb pop ss fcomps mov lcall sub push bound xor sarl sahf lods mov aam add sbb lcall test imul sbb cmpsb imul imul mull add (bad) jne rcll jae mov (bad) xor push xor add jae andl adc add push mov xor mov dec pop mov dec negb inc or dec scas cmp and lar or lcall pop push mov bnd push repnz pop notb xchg lret inc es dec push dec push in pop testb or pop out xchg mov int3 iret mov pop loopne or (bad) jne divps add bound insb mov push add add add call cmp pop add xor push push pop out (bad) aad and add add js pop sub or adc push fisttpll cli add pushf insb mulb sub insb insb or mov pop inc dec dec inc dec pop dec inc inc cmp push inc dec inc inc push inc inc add dec push push inc push push or jb outsb je insl and jb jb outsl jbe mov push push adc imul add dec inc xchg dec dec inc adc lret fucomi das push xor cmp sub insb je mov imul jp push std mov repz aaa outsb outsl je add addr16 arpl data16 outsl ja cmp outsl outsb leave push enter jae fisubrl add jbe jb jne lds arpl and insb sub xor sub pop das popf in mov pop push fsub pop xor jbe testl pcmpgtb xchg add jae sub inc and inc test gs test stc and insl repnz je test das insb outsl arpl jae pusha sub mov add and add addr16 insl das test (bad) and ss xor xor dec popa dec adc inc xlat push cmp and jb jne jae xor mov (bad) addr16 outsl add lods jne fs dec sub push cmp push imul push mov dec imul sub cmp and push aam ret sub cs mov xlat loopne sub insb ja ds mov add je popa ds push fcmovnu jnp jbe push mov xorps imul gs popa addr16 outsl js jae mov xor fs sbb jae add and or xor xchg jnp fs push decl inc inc es imul gs bound mov dec or or jo adc dec (bad) cmp data16 imul pop outsb pop cmp sahf gs iret imul pop fadds push jne dec popa outsb or pop push push dec inc jnp mov inc aas cmp and mov sbb test mov or jae push cwtl sbb imul or iret int icebp push imul fidivr das daa and add pushf jae or sbb es cs mov jae cmp sbb insb mov mov test mov outsl or ja sub je sbb add adc stos adc xor jae int3 dec push cmp daa lahf xor pop lods add lods push sbb (bad) js sbbl add sub adc mov or sub inc and inc dec xor xor pop enter stc or nop outsl clc adc mov fdivs aaa add mov inc inc addb mov sarb mov and or rclb aaa insb test mov mov insb repnz pop sub (bad) in pop push add mov sbb inc push pop test inc rcrb shrb jnp in add adc cwtl pop popa aaa xor lret mov jbe or mov inc pop sbbb nop test cmp mov adc in cmp cmpsl mov pop jbe dec scas daa fsubrs pop xor imul fs aaa loopne mov je daa dec mov andl repnz pop daa dec stos js jnp,pn inc aad cwtl mov sbb add les shlb xchg pop rolb add push inc push dec cs dec dec add (bad) jle repnz dec pop xchg les js xor mov mov adc push cmpsl lcall mov fldenv gs gs add push inc popa add xchg call jnp jb cld outsl pop xor xchg outsl fwait int3 xchg mov pop out xchg or pop adc outsb cmp rol add lcall fwait cmpsb imul dec shrl in aam mov mov imul outsb aam cmc jb jae sub arpl jnp mov addr16 and or arpl imul je outsb aad push stos push pop inc testl imul jae arpl jne je or stos fdivs ja jb popa in mov cmp sbb sbb insb insb jns or in bound pop sahf js xor sub leave fisubr mov cs out and and gs or xchg push fsubr or ja sbb pop call stos aas jae inc jne jb push push jae inc test jns out fsubrl add xor mov jae xor xor pop (bad) add pop jbe dec dec add pop loopne add dec add daa out dec cld xor je (bad) (bad) mov push mov lods stos stos mov push mov push fild mov lods mov insb inc imul add fdivrs add jnp mov shrl nopl in mov shrl popf in jb lods shr aas sahf xchg stos nop mov call leave dec (bad) outsb sti jbe xchg xchg adc lods insl xor or and popf pop out test pop dec (bad) push arpl dec sldt xor sub fs or pop cmp popf or dec dec adc ja inc xor rcrb mov sub cmpb leave inc notb jge xchg jge mov dec daa mov mov and or jnp js out (bad) jg insl dec xor clc mov and sbb hlt mov add dec mov sub loopne pop or (bad) (bad) (bad) pushl fwait xchg xchg lahf jnp in dec push jnp leave in sub xor mov dec (bad) (bad) (bad) push (bad) mov mov mov insb add dec (bad) in xor mov insb add int3 insb sbb loop mov dec sub jns mov and inc (bad) mov mov incl call insb sub mov mov cmp mov insb push push in (bad) (bad) (bad) call add and test sbb pop inc mov inc inc leave push out xrelease (bad) decl cwtl popf (bad) cwtl xor test lods ret sbb orb xlat jg (bad) jmp ret push pop dec test lret imul add mov js cs (bad) repnz mov or adc jnp dec xchg sbb icebp dec mov int3 fwait or lret incl cltd leave (bad) (bad) (bad) lcall mov mov add mov mov scas mov (bad) dec les icebp mov push int3 and (bad) (bad) push bound pop xor notl fistpl xchg adc nop pop stos xchg sub aas pop pop jnp ret (bad) lcall mov xchg jle push sti xchg (bad) lret cmp js gs sub cmp (bad) (bad) jg mov xchg sub pop jns adc fwait cwtl sahf pop push dec fwait inc adc pop push sub (bad) ljmp (bad) out inc hlt lret and inc adc xchg jmp adc pop fstps cmp sahf sbb (bad) (bad) incl addr16 inc xchg jb push enter sarl fldt jl (bad) jmp jmp mov outsl sub cli mov lods push and (bad) inc jmp jl pop dec cmp das sbb test xor mov imul incl push mov and dec mov sbb sti (bad) pushl stos out add dec or jp insl je jnp pop dec cmp dec outsl (bad) mov jb cwtl ss and cmc pop cmp mov fdivrl ljmp mov (bad) (bad) (bad) pushl cmp mov test loopne inc lret xor in lods sbb aaa loope pushw inc mov (bad) (bad) lcall mov mov xor dec dec int3 leave or dec aam add (bad) mov ss inc add xor push or sbb pop cmp sar (bad) mov jo adc lret inc adc xchg jl (bad) (bad) (bad) mov lret or addb (bad) out lea inc int3 jl cwtl sub pop loopne lea (bad) (bad) call xorl mov mov loope dec in jge and adc (bad) incl xchg mov xchg out xchg mov inc stos inc pop xchg mov cwtl rorl pop and cwtl cmc fld fs sbb popa adc dec fcompl arpl mov (bad) (bad) (bad) jp xchg mov inc adc fisub inc popf xchg add xor addr16 (bad) decl aas repnz push loope int dec addr16 mov lods leave xchg cmp (bad) std out mov nop insl cwtl fwait lea xor clc stos adc test (bad) scas push jno (bad) (bad) ljmp add out adc repz repz pop cwtl sbb rol mov and dec push jg iret xchg pop icebp pop (bad) or mov lahf ret inc pop (bad) (bad) incl jo add mov add dec clc xor adc daa cwtl jecxz push stos mov cmp popf xchg mov push pop (bad) jns arpl dec push mov sub jg call jno clc sub aam insl insb loopw scas mov mov lret and roll hlt mov outsl pusha icebp push loopne scas stos mov jg adc testl mov inc loop (bad) (bad) (bad) cmp lahf sbb sti inc sub sbb inc sbbl stc test (bad) gs (bad) decl sbb inc mov test sarb jb push cld (bad) jg xchg xchg xchg lods xchg and jne mov dec and sbb (bad) (bad) lcall or call aas fsubrs (bad) xor fisttpl push (bad) (bad) (bad) call xchg inc movntq out lret dec ss push aam cmp ret push mov sahf (bad) (bad) (bad) in pop add out mov xchg pop inc adc pop or jb cmc dec pop clc pushl pushf cld sub jno (bad) push xor adc (bad) (bad) pushl jle jae dec or cltd rclb lret adc mov (bad) ljmp dec inc ja mov mov xchg lret sar ljmp add js or mov lods jl jno adc mov xor push dec sbb push xor (bad) jg pop (bad) stc out adc push imul enter mov adc (bad) (bad) inc cltd mov cwtl mov test mov (bad) jo jne jbe sahf dec jl pop (bad) (bad) (bad) call push lea inc test mov pop dec pusha xchg mov arpl xor daa cmp lahf or (bad) (bad) incl insl sbb leave pusha je and push fs mov lret cmp xchg add cwtl lahf test mov add or inc xorl push adcb cmp sar adc xor adcl dec pushf repz lock inc pop test roll push xchg cwtl ja (bad) add sahf scas icebp jne (bad) lcall daa scas loop je ja and and mov (bad) (bad) lcall xorb mov dec cmovb pop xor hlt out std pop jno push xchg (bad) ljmp pop inc sub mov mov in push lds insb cwtl push xor (bad) (bad) ljmp mov scas fs sbb add cmpsb lret jp inc jae inc push push out cmpb (bad) jp mov es pop jp mov jp popf jns push or (bad) (bad) incl mov aaa sub jge in xchg sub das mov int mov jbe icebp mov sub (bad) (bad) (bad) ljmp xlat lea jns push xchg int3 inc and cwtl scas adc ljmp std dec mov fmull inc add push jg xor mov mov lcall pop cmp repz dec addr16 lock popa movsl (bad) (bad) (bad) in inc xchg push out dec add and lret and lahf mov test aad (bad) push andb in mov sbb and test mov mov mov xor xor xor es (bad) mov cld clc out in fcomp sarb (bad) (bad) (bad) fcomi dec out and sub pop int xor rorl lret incl adc lock (bad) ljmp mov mov or mov rclb push (bad) incl dec dec inc pop nop enter cmp mov or xchg cli (bad) cmp inc (bad) pushl lret push adc aaa adc dec dec lods pop xchg sar push insl adc stos gs aam lcall mov pop ljmp lock jnp adc pop sbb push mov xchg sub mov ljmp jae sub pop pop push jmp mov aad sbb push aaa xor lret jns dec adc cmp outsb push jmp and mov push mov jp int3 fisttpll into clc mov les mov mov pop imul (bad) (bad) decl jg (bad) dec mov jl insl popa lret mov xchg arpl adc dec mov ljmp call mov mov xchg scas push (bad) jmp xchg jmp mov jg mov pusha jge (bad) xchg xchg (bad) (bad) pushl mov lods push add mov insl ss cmpl les lds mov insb mov dec inc cmp dec (bad) (bad) (bad) incl jnp push mov sbb imul pop fldpi shlb push (bad) iret fimull mov repnz cwtl inc xchg mov mov sbb aaa (bad) mov mov mov mov xlat popa adc lods cld lods jle pop repnz xlat pop pop (bad) mov test pop dec stos ret mov dec andl jg inc fimul xorl lcall xchg mov nop mov je scas repz mov adc pop add leave incl mov je ja mov sbb cwtl xchg add (bad) (bad) (bad) push mov int3 mov jnp adc jg fwait xchg cmpsb mov push repz and mov cmp nop addr16 xchg mov addr16 cltd in fstps dec (bad) (bad) ljmp mov lret test mov jmp (bad) (bad) decl xor xlat xchg fdivs push repz xor pop dec repz ljmp inc xor punpckhdq (bad) out (bad) decl push fwait cmp xor lea dec pop mov loope dec xor inc call xor faddl mov push push inc dec jne and (bad) (bad) call inc lea ss pop dec dec pop dec clc push inc outsb inc and inc xor fidivr cmp xor pop test cmp jg daa ds je dec mov incl ss repz dec push loope xchg xchg add dec jmp cli fcomip adc xor push dec dec (bad) fwait (bad) sub jle push dec jg loope mov das inc fdivs push mov stos dec fdivr (bad) (bad) decl mov push lods add sbb fwait push out pop mov pop in fwait jb das cld das cld js inc outsl or (bad) pop mov cmp mov (bad) dec sub lea dec pop sbb add jae sub test dec fcmovnu mov pop leave add pop fadds mov mov aaa pop loopne (bad) dec orl mov mov pop or aaa mov push mov cmc lret adc dec or cmp int popa pop jbe add cmc or popa and stc lea lret or mov xchg lret (bad) cld ja lock push and push mov mov mov push jge mov dec mov lret cmovl dec mov je lcall call test fs mov movsl mov (bad) jg addr16 mov or or and adc cmp mov mov cs or mov leave int3 js dec cmp jp pop shrb (bad) xor movsl and or in jo cmp pushf aaa dec mov lret or add xchg add xor mov mov jle dec adc insb push sub mov cmp (bad) orl ljmp ret pop ljmp lahf pop adc iret aas ja std mov enter test xchg lods fs cld xchg dec gs es adc mov xor fwait and rcll pop pusha inc (bad) rolb loopne ret (bad) xorl mov fwait enter mov je mov push lahf sti dec je dec lahf fwait jle adc sbb andb or or setb pop subl mov xor lea and (bad) mov mov dec in fs (bad) fs cmp insb lcall js (bad) xor data16 mov mov dec ret add mov xchg stos mov jle dec fwait inc jns mov adc addr16 call mov aam repz arpl mov aam mov js pop rolb ret aas dec inc dec call outsb mov rorl jge js xor das jo in dec inc inc sub dec into jg add outsl sbb lahf js adc popa dec push les jg push add dec scas pop push std push mov lcall js push dec pop in rcrl xchg sub push and shll sbbl add dec mov sub leave (bad) lcall add mulb js scas dec dec xchg addr16 fucomip jge js dec xchg dec inc pop dec xchg fwait jge js or adc aaa cs xchg movsl xchg and stos insb lock and jge js sbb sub lods inc push insl mov test inc fcmovnu das mov add pop pop mov mov movsl js pop dec gs ja idivb gs xchg popa js adc fdivs jno add add int (bad) int (bad) (bad) (bad) dec dec cmc test dec pop cld pop out mov sub xlat int3 xor sbb (bad) (bad) lcall sub daa popa aas push rorb mov (bad) dec (bad) imul cmp dec hlt cmp add xchg mov mov fadds lret rclb (bad) jmp aam addr16 ret (bad) push das jns mov jnp mov sub or lahf mov out dec repz xchg inc fisttp pop push pop push bound pop pop sbb and clc (bad) (bad) lcall mov push inc scas fidiv repnz out adc in xlat xchg push rcrb or pop loop push mov bound mov int lcall mov orb pop sub les gs add (bad) mov leave dec lds out fdivrs sub pop in jns jle dec cmp (bad) (bad) push popf mov scas cmpsl and (bad) cmc jb xchg cmpsl mov pop lods dec lods cmp (bad) (bad) mov dec xchg inc pusha popa pop and and cmp das (bad) adc repnz push js sbb outsb push adc inc sbb or popl jg jb jno xchg xor test leave inc jl jle dec fs negb or push icebp ds decl std sahf push in ret jbe ja fstl pushf xorb jb push ljmp lock mov mov push or xlat pushl (bad) incl fsubrp clc icebp mov cmp push xor mov mov mov jbe sbb sub push and (bad) addb inc leave rorl lret (bad) mov rcrl add scas sub fisubrl push jecxz insb dec stos adc mov int pop jo fimul inc test or popa jg push js js vmread inc nop add data16 fdivrs mov insl ds xor std pushl jnp daa dec push js js call outsb xchg dec fadds aaa push out sub push js inc popa loope aas in xor ss xor pop push jb loope js inc or minps pop js jge (bad) adc pushf fwait lea jle mov (bad) sbb fistpl out outsl cld (bad) decl push sbb in dec in loop imul into dec push clc or (bad) incl mov cmp inc mov adc cli pusha gs mov mov jg lds fsubrp lcall in call adc out pop (bad) mov (bad) outsl (bad) sub lret mov adc inc iret sbb sar (bad) (bad) (bad) ficompl cli (bad) into rorl sub psraw push cmovae adc test (bad) (bad) in jnp ja (bad) adc dec insl inc mov inc insb in sbb in pop cmc dec cld pop pop pushf setp test mov adc lcall push mov negb push data16 fmull cmp (bad) jg cltd and sti lahf push mov shr dec pop sbb push dec (bad) (bad) push push push stos ret adc outsl sbb sbbl jge (bad) jmp jne imul leave sahf (bad) mov add and or leave (bad) (bad) lahf pop xor lahf aam insb dec adc mov jge js push dec pop xor mov mov (bad) ss lods mov inc test in add pop adc rorl daa js mov lcall test xchg mov jnp sub scas decl dec pop ss push aad (bad) in hlt or adc (bad) pushl mov cmp mov scas lods stc jmp inc push jecxz divb (bad) in jg jb cmpb ficompl sbb loop mov (bad) (bad) jmp (bad) dec out cmp fdiv stc sahf imul adc es pop in aas jmp (bad) (bad) inc loop lock sub dec test mov dec sbb cld out stc cmpsb xchg jge dec (bad) (bad) dec pop rorb dec lahf imul pop lds sbb push mov push (bad) (bad) decl insl iret mov mov (bad) fs (bad) iret cltd negb cmpsl int3 push pushf or ljmp sbb dec pop fildll add pop mov (bad) (bad) jg and add (bad) mov inc addr16 xor movsb cmp xlat xor incl or mov ljmp add ljmp sbb mov fs loop push cltd jg daa pop aaa lea jb jl jle js xor aaa sub mov cmp aas enter js cltd in inc sbb pop fild push lods imul cli dec cld jbe and jge movsl lds (bad) dec adc (bad) pushl mov stos out push jmp lock pop das dec sahf dec aaa (bad) outsl ja pusha clc sub fisttpl (bad) ljmp push aas inc jg xchg mov pusha iret sti adc fisttp pop xchg rorb mov (bad) ljmp das cmc add sarl icebp add cld add cmp xor mov cmp arpl inc jbe dec push push dec (bad) incl xor pop lds lds or push adcl repnz sub mov repnz mov jmp hlt xchg jge js and mov not test push cmp cmp mov mov (bad) dec mov xchg gs push outsl pop xor inc sub test or sub jb sub sub push jno fdivs jae sbb inc ret sti xchg jge icebp cltd mov mov dec (bad) xchg pop and js cli push mov adcb addr16 int add mov ss xchg adc mov (bad) mov fidivrl insl imul mov xchg lods add ret sahf push mov pop dec (bad) call dec cmc in push sbb mov mov je or pop call mov pop je push icebp rcrl dec mov xchg (bad) (bad) (bad) lcall push lods adc es into movsl cmp push dec push dec lds (bad) (bad) call sbb sub popa sub jl cltd jbe or (bad) pushl clc mov mov lock mov mov clc pop pop xchg (bad) (bad) hlt in iret and ret int aad nop dec cwtl push dec (bad) mov mov xchg jns push call jnp adc xchg mov imul push push inc xor lea mov and inc (bad) push inc push fild mov xchg js dec pusha xchg or lods xchg lods mov js imul (bad) (bad) jg pop fistp xchg shlb lock inc fsubl xor jno in in pop ds insl jo test out cwtl dec dec pop cmp adc dec lcall pusha popa imul aad das push (bad) (bad) (bad) jle in (bad) xchg fstl ds jo int jl cvtps2pd mov pop cwtl or cmp dec fcmovbe je dec loope ljmp pushl leave and push cli aad jbe xor ret pop je sbb mov pop push mov rolb fs scas pop mov xchg jno sbb jo xor xchg loope (bad) das shrl mov xchg decl xchg xchg cmp call sub (bad) (bad) jg (bad) sbb loop les fbstp lret fwait xchg cld lods mov (bad) mov (bad) jg push pop stos outsb jbe mov lods mov sub clc bound enter (bad) (bad) decl sub lock mov sbb mov xlat (bad) fnop test pop jg lods add inc inc in and mov in mov push sub aam das test sbb js mov push sub cmp xchg push mov xchg outsb lcall gs cli scas pop cld test pop jne xchg pop (bad) in (bad) jmp adc lret and imul (bad) incl and outsb stc push ds jno pop xlat or (bad) mov jns popa pop incl andb ss or outsl fs outsl mov mov jmp pop pop pop push outsl clc sub fisttpll mov xchg out add pushf fsubrs xchg lcall pushl (bad) nop pop pusha movsl dec (bad) js add pop (bad) pop dec aad pop pusha (bad) (bad) pushl dec data16 mov lret add pop sahf jp sti pop push cmp out (bad) mov push xor loop cwtl dec jl mov or cmp cltd and hlt (bad) (bad) dec xchg mov scas xorb push push jmp das fdivs lret and sub add mov cltd lea pushf test mov sub dec pusha rcrl mov mov jnp fistl stos push pop sub sub fsubrs sarb or add sbb cmpl fcoml adc mov add (bad) js mov pop push dec xor (bad) (bad) incl pop xlat and inc ret lret pop enter inc push mov push imul mov mov mov adc jl pop xchg pop dec xchg push mov xor call movsl and icebp sbb sbb mov inc or pop bnd into add dec dec stos adc dec push sbb incl dec shr pop clc push shlb fs sub (bad) (bad) dec mov pop (bad) in cs adc (bad) mov mov pop push sub popf (bad) (bad) (bad) call loope adc mov shll cli es xchg mov imulb inc pop pop mov ret push test sti cltd fnstenv mov mov inc test (bad) stc jne pusha xchg and lea jmp push mov adc clc and test int js jl dec jge add add xlat aam imul jmp (bad) incl xchg cmp mov pop mov push push inc cs pop ss jge dec mov add repnz stos mov add push mov mov xor (bad) (bad) (bad) fcomip cmc les jo aad cmpl xchg scas xor push xor cwtl xchg int (bad) lcall mov mov add push sub sarb (bad) (bad) ljmp jmp aas imul dec and add xchg into xor fmul xchg (bad) (bad) mov loop (bad) hlt das cld (bad) jmp enter aas add aas inc and pusha cs cmc push popa icebp ret popa aam mov clc add xchg roll xchg nop and add xor mov pop xor mov inc sbb jge push insb add aad imul mov inc mov mov (bad) ljmp loope jmp (bad) cld repz ds xor xor clc (bad) (bad) (bad) (bad) (bad) call adc into arpl ljmp mov pop xchg mov push enter cmc ljmp dec or xlat nop push push clc mov and jp jo jae mov pop out (bad) (bad) decl sub xor push test lret sbb cmovl pop ljmp mov imul xchg xchg xchg mov adc and cmpsl rclb fstl sbb or std push mov cmp inc and divb imul bound rcrl cs mov mov out xor inc mov dec inc add addr16 imul sti mov outsb sub or je je push add push popa jae cmp and xchg sub and inc adc and stos push cmp mov int3 jp push gs and pop stos mov inc add stc add mov and orb test adc adcb add add add (bad) xor and adc outsb mov (bad) cmp sbb mov xor push add add imul imul mov or or jge push cmp xorps adc and adc adc and sbb cmovno sbb xor push pop push pop outsb mov push pop jnp pop insl out das dec ja and jb fsubs jge xorb orl sub or sahf mov ss into pop xlat cmp or sbb add sarb sbb enter or adcb xchg xchg add js out or sbb in and ret aam xlat imul mov lcall adc xor fcoms lods sbb dec (bad) xor sbb fdivl sbb js jns imul pusha lcall (bad) in jecxz adc mov pop inc add and fadd xor into xor add stos adc nop xor add pop cmove movsb inc jno add pop lcall jns and jg jns cmpsb fild mov cld das inc jle popa adc cld test mov inc into push cmp ljmp and pop iret mov in fucom sub call (bad) push add repnz pop pop fisubrl xor fcomp loopne cmp sahf hlt in jle sub (bad) mov add mov dec (bad) mov mov je cmpb push (bad) xor pop push push dec (bad) xor rorl inc cmp je xor sub sbb add imul cmpsb imul cmpl mov roll jg enter arpl mov push push inc flds inc aas gs mov dec add int movsl insb movhps cmp js mov insl lcall dec insl add je xor add xchg mov out (bad) xor repnz das add xorl aas inc push jg push inc mov inc pop insb outsl imul xor or pop out aaa insb outsb addr16 and jg pop outsl jne pop outsl pop jb outsb addr16 nop sti aas je jo pop imul dec add add les jl adc or add push loopne fs ucomiss idiv dec outsl fs gs popa outsb fs imul je inc mov cmp add gs xor insl fnsave popa aaa dec cmp in inc add xchg jb adc dec or fwait push inc test inc gs pop insb stc fidiv inc sbb shll in cltd inc daa inc mov jnp sub pop or push or es adc xchg outsb (bad) (bad) xor popa inc inc xor ja in outsb addr16 dec bound push insb outsl jae ja lock gs mov arpl nop insb jne push fsubs data16 jae push je xor pop aaa sbb dec inc dec inc push or pop jb push mov push (bad) push je dec fdiv insb push outsb ja fs (bad) fbld popa xchg adc test push insb jae mov arpl push popa mov imul mull xor dec (bad) fldt insl roll dec insb xchg xor inc jo iret sbb insb xchg call and push pop and push gs push add or or dec ret (bad) adc arpl push lea data16 or insb fwait mov inc adc and mov push imul mov out push repnz jns jb adc pop aas inc dec xchg fwait inc or push mov push icebp or add and inc ret jbe xor sbb popa or pop push push pusha dec pop cwtl adc jne mov and dec inc pusha add or mov sarl imul mov push lret mov and inc pop and ficoml xchg adc (bad) adc sub jmp jns push xor leave dec outsb cmp mov mov addr16 pop movsb popa (bad) outsb dec gs test les adc loope mov dec outsl sub adc pop push push inc push inc lret xchg xchg adc adc xchg jg add xor sbb (bad) lret push inc add dec add add add add add fwait lods mov pop adc in sub add add adc inc pusha or or cs cmpsl insb fs mov je (bad) sahf nop (bad) out ret add and int clc sti cmpsl adc daa sub inc add es push (bad) xor sub (bad) mov cmp xchg sub add add add add add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add mov add add jo add jo add jo add jo add jo add add add jo add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push dec fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push push cmp pop clc and (bad) je or add push mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods das fnsave sub jne pop push adc ret add pop pop add mov push jb or cmp popa mov cmp add mov mov je lea mov test or je out ret (bad) dec mov jmp push cmp and add aaa je leave or inc push iret or sub (bad) sti std mov jbe sub add sarb lret inc dec insb outsl out fwait sbb ds adc sbb vcmpsd int mov adc adc ja cmp jae jg arpl mov adc add mov add movsl mov aaa and rep js mov pop movb mov jecxz dec fildll push xchg or mov mov fwait popa stc roll dec add xor xchg in sbb push push push nop adc cmp fcmovne je mov insb mov and sti mov dec pop mov mov pop pop or xor addr16 ja test cs cmp cmp xchg out je adc fsubs sbb inc xor popa mov adc fisttpll sub stc iret jae popa xor and mov lea jle,pt push and std adc jle jae sbb daa pop sub inc or sbb jmp xchg mov sub push sar lahf adc cmpl in mov leave je mov sub sbb jb mov adc inc imul add add mov fcmovbe jge adc add gs insb adc clc mov lock fwait jmp or (bad) in add pop jne test mov jbe cmp cli sub mov fcoms and sbb (bad) and pop rol loop lea outsl or and (bad) push push pop fcompl jb and sub shl addl out es sbb movb insl aaa mov in stc jne aam lock ficomp fistpl lret and or stc or sbb ret pop pop fstpt sub pop (bad) sub sar rcr insl cltd or add es mov into fnop lea dec mov push mov sub (bad) loope imul mov fidivrl mov and pop jbe xchg pop not test xchg call pop lods repz and mov in (bad) or pop mov mov fwait or shl lods fidivr sti testl push push insb ret sahf std or fidiv jo sub in jbe fmuls out pop jmp je mov clc jge inc addr16 pop movsl or imul dec dec mov pop xchg iret repz (bad) jmp mov cmp jae ja icebp (bad) loopne inc or sub cmp jae fnstcw out pusha add sub (bad) movsl inc je xor sbb sub or sbb or cmp sub ss sub add push mulb mov xor sub das push jnp mov arpl insb mov outsb push test sbb ret dec dec dec inc dec mov dec cmp int3 mov push push lcall icebp mov jbe imul sbb jne xlat cs js and out (bad) jae jle inc ss aas fsubrs adc adc mov push or (bad) inc out (bad) jo ret jbe lods daa jae dec (bad) and in inc sbb jne imul cmpsb cs insb sbb pop adc cmp pusha arpl sarl sbb roll rol leave push aas push mov aaa ss psubusw inc push mov sbb mov mov add mov pop sub das mov dec call out outsl or in sbb cld sub mov mov cmp and sbb mov cmp inc and mov inc or pop fcmovne ret stc jbe mov enter fwait je lds sub jnp pop sub push xchg pop push xor sub (bad) mov pop aaa dec cltd jae push fdivrl fisttpl call test adc pop hlt cmp pop lcall or fadds sahf in icebp ret decb sub sub inc push add push dec dec ss test and and adc das test out in ds xchg xchg fdiv push in fstl and arpl xor ljmp or mov mov add or decl jne cmp (bad) jbe (bad) cmpsb lahf ss movb mov xor pop ficom or (bad) aam pop mov jp test das adc mov cmp jne je (bad) sbb push aas adc xchg push sbb dec push pop mov push mov xchg in das mov mov idivl pop sbb cmpsb or jg or test sub mov loope push decl pop xchg mov adc cmpsl or push or (bad) and aas xor pop cwtl call out rol mov pop iret adc decl cmp pushf nop movq js push in xor int push gs cli inc lea scas add xor push jg pop jnp mov lcall sbb mov push lock pop or arpl sbb (bad) fdivr push add stos in mov add loop ljmp mov out out scas jge subps xor lea outsb xchg or rorl push xor jbe jnp sub popf les dec enter insl mov int3 mov jecxz xchg sbb or inc les cwtl out insl (bad) aas pop push and jnp cltd pusha int iret int sarb mov pop jmp inc mov aaa and orl mov js cltd fs ret arpl subl dec mov out sub int3 and lcall fisubl push mov movl push fsts dec mov pushl mov jge sbb add pop dec push rcrb inc je xor imul int lret inc pop pop jae and add roll xchg adc rcrb in outsb adc push fistpl fisttpl adc mov ret aas popl xor and je add sbb stc js mov imul fimul inc stos stos cmp inc adc imul push push push mov ss add push adc in cltd loopne sarb lods (bad) mov insl or push imul or les mov in mov ret (bad) neg sbb adc add add xchg mov jns xchg jo add jge push rclb pop pusha repz or rep adc (bad) cmp test inc pop jne insb and gs mov test and add jae adc or insl aaa sub in dec push ret insb and inc or sbb mov daa adc mov adc cmp sbb dec inc into outsl popf xor movsb add push push inc (bad) mov outsb mov pop imul inc cmp mov jne push roll aad xor enter pusha addr16 push sub adc add fsubrs mov sbb out sti lods mov test mov out and sbb sbb adc loopne pop mov std inc xor push xor and mov pcmpeqb pop mov lods dec dec or mov aas neg (bad) aad lea add pop push push in gs lods sub or mov mov sub rorl fdivrl push jmp push inc and jbe inc mov mov adc cmp loope push pop jp pop mov (bad) (bad) mov push xchg push sub ss mov sbb or xchg aas xor jl xchg jbe adc push sbb mov mov into jne push adc dec shr jo inc ss mov dec mov xor into dec inc inc mov and in (bad) pusha xor movsl push mov fistl cmp je pop out sbb push sub fstl jo fnsave sbb sub xor lock xchg cwtl xor adc sub cmp inc clc cmp aam pop pop push std bound jae es mov (bad) push push pop push cmp or and clc xchg scas push push and mov jmp es jne adc je cmp fnstsw popf add xchg test xlat (bad) jbe fnstsw aad insb (bad) mov jle and xor fsubr jge sub mov cmp jne repz push sbbl ficom inc pusha mov inc mov cmp mov daa (bad) mov in mov dec jmp push insl xchg dec push flds sbb push pusha into out sahf or push sbb daa pushf mov fnstsw push xchg and je sbb jne push inc sub fucomip arpl jnp fwait mov mov jle lret mov cmp inc add loopne test push clc sbb lea int pop mov xchg sbb je sbb mov popa adc sti ret push and mov cmp xchg dec sub mov out mov jne or sub mov sbb or and or test adc pushf loope push and xchg ret loopne dec outsb inc dec push inc js or das add rcll sbb push arpl incl jne push mov jle dec es iret pop pop aas sarb and and pushf and adc lock daa or xor lds push mov and xchg or mov in or out jl jp pop fwait xchg lods rorb pusha jnp enter (bad) pop (bad) leave or mov je add je fwait insb incl inc cmp jl jmp out push (bad) fldcw xchg push cmpsb jb adc add mov and mov mov sbb and scas mov xchg mov adc adc out (bad) (bad) pop mov js nop enter jnp inc mov sbb sub faddl sub outsl pop sti les xor insb out cmpb pop adc outsb rcrl fmuls insb sub add sub xor nop or pushf les cltd adc sahf clc rorb xlat pop push jne mov pop test je push cmp sti mov mov xor sub out push pop out mov loop sbb icebp jmp mov cmc mov xor add leave mov cmp call cmp lcall sub dec int sbb xor xchg xchg psubw mov push push push mov lret (bad) mov mov jmp in dec sbb xchg sbb (bad) repz dec push mov dec mov cmp daa dec cmpsl leave or rcll mov test invd push dec and dec or add push mov xchg push inc add (bad) fcoml add jnp inc aaa jp push call aad cltd loopne mov xlat mov xchg and ja ret or push xchg push stc pop sbb pop aaa rorl insl icebp je sbb or mov rcll subl cld mov pushf shrb or mov jne mov leave mov xchg push mov rol jbe inc adc out in mov fstpt fldt je dec and xchg iret jno lods jl test push mov in push iret scas dec adc call mov fisttp or sub sbb lea insl fist add int3 aad fcomps cmc in cmp mov mov mov cmp jne mov push and jbe sub or add push mov push (bad) lret daa cld lret testb and inc and dec sub push neg pusha xor push push sbb imul xor jmp cmp xchg lods mov push xor push inc ficompl pusha jle xor dec in out icebp rcl ss sbb adc fcmovnu adc ss or sbb movsl cmp in sub and xchg add (bad) jmp fs fnstenv dec or jge and mov sub sbb push cmp and push jbe int push (bad) xor jb in ret out cmpsl and push aad insl stos mov add dec out call adc or cmp mov or cmp adc aas clc xchg jae iret and dec adc pop push mov call jmp sbb sub sbb aaa jae pop xchg mov jle jl jne xor push mov lea ffreep idivb pop xchg mov es (bad) lea pop xlat aaa cwtl cmpsl and xlat je dec push aaa ja or adc movb or mov (bad) notl sbb push jno cmp and push push popf cmp jae sub call test push fsubr scas add xlat sti pop loopne pop and addr16 inc inc xchg inc push jo jo ds into push xchg adc jne jge sub (bad) jmp (bad) into cmp je push dec mov ret and fnop mov add insl mov xchg pop cmp pop mov mov xor or testl (bad) sahf mov sub (bad) outsl data16 dec jb ss lcall dec add das dec lods test inc pop dec mov dec xchg dec add pop dec adc or or cli pop out xlat sbb dec push add add push sub cmp inc push jns (bad) or repnz lcall es fsubrs push sbb (bad) mov data16 sub jo jns push test dec aam js in adc pop (bad) mov xor xchg jo add and sub jne sub jge inc in inc and inc js cmp inc test xchg rorb out out or sbb push sbb dec mov or or mov xor add ret aad sti add ret push mov add mov mov sbb shlb aad inc adc in mov enter daa (bad) mov lret pop enter lea add cmpsl (bad) jne cmpsl mov dec push inc lock addb add popf sub inc ficom mov fmulp and pop (bad) fsubs sbb inc loopne mov or mov fstl push mov push gs pop jl jo lcall mov add mov mov push mov inc and sbb or mov shrb loope mov (bad) xlat repnz push repnz mov insb in cmp lock pop fcmovnbe jmp loope lock push and push xacquire xchg push imul mov mov addr16 dec mov inc jno sbb lahf and daa jno inc cmp lret sub aad xchg test or jb xor mov or push mov das mov push jnp outsb fadds int adc or movsl insb leave jbe cmp roll aas xchg push xchg test or mov mov jp lret mov ret push jno sub (bad) or jp ret inc push (bad) push jns xor sub mov sbb movsb cmp and or sub mov mov xchg int3 mov mov lret mov xchg sbb sbb push cld cmp and add sbb in pop pop add mov add fidivrl ret lods pusha sahf pop repnz adc or mov mov push mov (bad) lock or cmp pop dec pop mov fcoms pop jb (bad) xor or cmpl out je adc fild aam inc push nop/reserved js mov leave cmp fidivr daa lahf pop mov xor (bad) pop add xor repnz repz out jne cmp sahf pop add jbe xor xor add add inc rcll fs xchg cs push movsb adc add jmp subb addl inc stc test push outsb lea xchg mov (bad) loopne dec mov imulb dec insl or movsb pop nop inc inc idivl rorl jbe idiv sbb clc xor repz pop je sbb sbb and pushf or idiv inc sbb vorps inc or lds popl adc (bad) fsubrs push shrb lret sbb jne and add sbb mov adc cltd dec add ljmp loope push or xor ss jp movsb cli int pop ffree int xchg pop cmp inc cli je and mov mov mov push push or mov mov cmp and sub icebp out jl mov mov pop jl add (bad) jge gs jge jb push or ret fs mov test in fs jp (bad) testl cmp (bad) (bad) add js jmp orl int incl or (bad) int3 int3 push inc xor pop inc xor (bad) or popf or push mov lret in (bad) icebp mov (bad) inc clc adc inc cld lea and mov imul popa lea mov inc ja pushl push lea test pop pop inc or xor and sbb mov xor iret fidivr mov push or or lds fistp mov jmp mov lods hlt pop mov sti aas pop push mov push mov lcall add push and mov scas fidivr in loop loopne scas add gs sbb xchg add repz arpl (bad) mov jmp pop leave rcrl xchg or or jge or in push fdivl outsb mov sub std shlb or sub lods cmp jb jae adc data16 (bad) repnz mov inc adc adc cmp enter (bad) push adc add mov in roll sbb mov mov cmp fisubl popf mov push sbb push inc ffreep mov test push xorl out rolb cmpl sbb fdivrs inc sub out sbb cmp insb outsl scas scas sub add hlt clc ret ficomp inc mov mov popf adc xchg fcomp and add insb rcl lea push (bad) xor jbe fadds pop dec int3 jge inc adc je mov push sub fmul int3 std in cmp mov mov and scas (bad) and fwait imul jmp add in adc adc loope cmp or mov and or mov sub xor imul arpl dec pop pop xor je push or (bad) (bad) or ja pop dec (bad) scas cmpsb or cmp jne xor pop mov mov dec andl aaa mov jle push or dec inc sarb movsl xor jge adc mov inc int3 dec jae cmp ja cmp fsubrl out fldl mov outsl cs int3 mov scas mov mov roll (bad) cmp cli clc jb clc ja js jae and cmp jb sti mov aaa inc jmp mov jb int mov enter inc push (bad) enter divl loopne arpl xor mov aaa and mov mov mov mov add sbb pop mov int3 lea xchg mov sub cmp inc and lcall pushf add test mov dec (bad) je arpl pop call dec (bad) xor lock hlt clc sub mov ja incl lock or lock fdivl adc popf pop insb ss stc adc or leave and addr16 jg mov outsb jnp std jecxz ja inc neg out lea iret leave and inc (bad) stc sub xor lret or dec mov add outsl add or dec mov pop inc mov add add mov daa and sub add lcall add and ret sub inc inc xchg sbb (bad) xor sbb sbb adc or or dec roll pop pusha pop ret add inc xchg mov fsts pushf mov jae adc add inc sub dec out fcoml iret mov rclb rol sub stos add cmp xchg push mov mov sub sub or add mov out xchg enter outsl lock ret mov mov in add ret in loopne mov pop pop pop inc stos push jp (bad) std (bad) mov add mov push hlt add push mov call mov jae (bad) je mov divb testl pop cmp je push imul or cmc sar (bad) (bad) ret adc jne lea mov test je sti fstp push mov mov xor mov add fnop scas mov das xor ret repnz inc imul add sub fsubrl push lea popa cmp jl fisttp pop jg xor mov (bad) pop jge cmp mov lds ss xchg into enter lock mov and bound fsubrp (bad) in adc sar mov (bad) dec add loopne or mov adc push or adcl jne cld push push leave mov push mov cwtl fmull jmp add scas lea inc shrl imul sub loopne or cmp ds dec jmp rclb aaa fcomps inc cmpsb int jnp or lods add jg add mov js sbb lahf push and inc cmp mov lret insl add out xor pop lgs das mov pop aam je jg mov or ljmp dec add mov jecxz cmp dec push push movsb mov sbb mov mov xchg test inc pop push loop test xor xchg inc xchg stos notl sub mov fsin mov mov add outsl dec fildl pop cmp xchg cwtl sbb xchg cmp mov adc push call aaa push add rolb pushl call push xchg mov cmp push sbb mov jo mov bound lds push ret pop dec and mov mov aad sub jnp,pn and loopne (bad) sbbl cmpsb push stos lea inc jle adc cmp test pop jae inc mov or loope test pop push push es fwait insl jb pop movsb xor mov mov in dec and in cmp lret sub adc cmp add pop and lcall xor data16 push pop mov mov mov aad aas inc xchg sub push movsb (bad) pushf ss ficoml pop les pushf testb (bad) mov rorl test mov pushf push push fbstp adc mov cltd test push add lock arpl xchg sbb lock sbb pop das and and loopne push mov ret dec les test scas inc push add push dec dec rcrl adc push cld (bad) gs mov cld js loope inc cwtl outsl in fcoms pop push xor aas add jmp out fimull add push dec jae fwait dec fsub imul or mov lods lret popa push scas faddl lods popa insl mov cmp loopne popa cwtl int fisubrl push leave sbb and je sub notb je cmpl mov ret sbb adc adc (bad) jmp push or cmpl arpl pusha sub js jbe jo not inc je or sbb ficoml push push mov in mov pop pop sbb mov sbb lahf data16 or (bad) jl dec push jl pusha scas mov jg inc data16 push jne mov jle jne pop sub or add es xchg pop inc jo xor (bad) jae adc pop bnd nop pop xor in push stc add gs adc sbb sub enter mov jge mov cmpsb mov mov xor adc cmp jae jl jnp jg mov add xchg jle inc sbb or js dec sub jle jbe aaa fsubs int sbb in jbe cmp jg or addl cmp ret pusha in jp jle rol subb fidivr movsb decl cmp popa sub dec or das inc and dec inc lock js cmp rcl aas inc cmpsb fdivs pop imul data16 insb xor inc xchg test sbb lock mov dec cmp jl cmp sbb inc adcb jbe mov arpl fs cmpb es pop pop (bad) insb lock push outsb jmp pop sti pop call aad bound dec dec cmpb mov mov fdiv je rorl push or lret hlt and push add pop and adc push push inc lret mov test or cmp mov mov mov jae pop sbb scas jge cmp add imul inc cmc inc lock mov push inc loopne ds (bad) enter jnp adc push ss pop jmp pop dec sub repnz sub mov xor and sbb jge rcll or cmp aas sahf out pop mov push jne push out sub push outsb push cmp or daa sbb jnp inc mov adc ds push ret int stos inc push data16 ja loopne,pn pop or sbb pop aam mov add pop inc jl gs insl nop mov and xchg loopne js (bad) shl dec push dec jo push xor mov push imul in ja and mov daa dec or xor inc insb mov aam mov mov pop inc sub sti iret xchg stos push push imul pushf js sub fcomps cmpl dec and mov mov mov dec sbb je pop inc or pop inc nop jg aaa sbb mov push cwtl add and jae loopne push sbb imul pop add (bad) or movq or push jb adc imulb addl pop mov es movsb add add push cmp fcmovne divl leave adc or movsl lods inc inc adc sub sbb add dec jae add pop pminsw mov mov out mov push add pop and rol lret sbb add and divb push mov dec (bad) int xor push pop jmp sahf dec fmul cmp dec stc js dec push jnp or les sbb or stos pop rolb mov jmp stos jmp cmp and pop push mov and add mov sti inc xor addr16 test push popa sbb inc or lods inc pusha pop fisubrl inc push fdivrs or or stos inc mov test push jne push movb xchg insl (bad) mov jmp fstpl cs stc imul fdivrs stos and mov or dec test mov pop jge and mov test es xchg jne push dec xor add add mull xor stos pop inc push push jne and mov insb es push mov lds (bad) (bad) fiaddl inc popa or push adc nop or and or or leave fimul push cmp pop mov (bad) mov xchg sbb call pop andl jmp xchg adc inc add inc out mov mov sbb fadds push pop xchg pop lods push faddl cmpl or loopne and add test cmp rolb js add cld dec mov xchg sub mov xchg xchg or or sub pusha out or in sahf mov stos pop fwait mov lea out cli adc movsb cs ja enter outsb cmp call outsb jmp popa jne enter loopne mov (bad) pop leave and mov add rolb adc push ja xchg popf push jnp xchg out fs out cmp add call pop cmp xchg xor inc mov add cmp sub call lret ds loopne jp lea lock mov dec fistpll mov in pop push fild adc jle arpl pop ret fsubl sar mov inc cmp es or mov xor xchg in enter movb sbb and inc jmp pop stos push fbstp faddl popa bound dec xlat rcrb xor adc inc or mov mov aam add inc icebp jle xlat mov cmp inc lahf popa mov movsb outsl ja push mov insl mov shll jecxz jmp jae sub icebp inc cld dec ret jb je add push mov sbb add rcr xchg stos cmp lahf push stos js out lods or xchg into sub test jl inc dec adc dec inc pop fs cltd out jne add push popa push fmulp rorb shrb cwtl mov test mov xorl fnop mov inc sub xchg dec outsl or or repz xchg adc enter mov inc jmp (bad) (bad) xchg dec stos jle pop mov shr mov aam enter lods shr push test ds (bad) stos aas dec sub mov push and lret es sub xlat add sbb scas and or pop loope jbe inc jmp push inc or popa jb orl loope push je push jecxz xchg popa jmp dec dec push nop adc dec adc mov inc mov or jne int3 dec cmp inc mov xor adc dec aas or int mov loopne dec push push adc and out mov mov fcoms mov or xor out lret xchg fcoms inc and shrl les mov jp inc sti std pop lea pop ret lea push inc pop push cmpb stos inc cli test jg add fnstenv push adc or push sarl adc mov mov lcall or stc xor xor xor xor cmpl and and mov and pop pop pop enter jg inc cld cmp je cmpsl out cmp je cmpsb jmp mov adc fwait push aam xchg sub push fisttpl into dec std cld or stc and mov push hlt (bad) pop in and enter arpl cmp mov divl jne adc movsb add shlb push adc fisubl jl enter aas ds sbb ss sahf sub call adc insb adc pop aaa mov les test in inc push mov pop push push mov in lret jmp loopne sub nop sbb cmc call add push mov adc imul mov sbb ret xor mov dec xlat and jns inc and mov out cmp jae loope insb lea pop icebp subl aaa and inc mov cmp in cmc loopne push test add adc add inc les push jmp inc cmp jb hlt mov fcmovu je cmp push pop int3 sbb and insl mov insl cmc xor inc or or in aad push fidivl dec cmp dec (bad) mov mov push (bad) mov fmull pop loopne xor mov mov je push fs je (bad) outsb mov mov sub lea xchg aad mov clc mov (bad) sub inc dec pushl cmpb pop mov dec push test insl aad pop sub sbbb test subl or jmp mov jle enter stc addr16 testb pop imul pop je andb mov mov push std or in aam dec cld and aaa mov jg add orl mov mov das cwtl popf xchg pop adc push sbb loop push out pop add or lret iret fisubr or mov mov sbb mov and or test adc ror (bad) sbb loop mov or jg (bad) test pop push adc mulw or imul loopne je jbe sub out push pop sbb decl push ret adc and mov push sar mov cltd stc add lcall shr push enter jmp mov int3 pop sub add cmp pop mov mov jmp cli push push clc pop pop push (bad) or addb loopne es and ret mov leave sub jmp leave pop mov inc test jb les fsts dec pop outsl jecxz idivb cwtl jmp jl or test mov outsb cmpsl push sti and js push movsbl mov sarb (bad) mov push fistl dec cltd pop xchg les fldl dec shr push movsl addr16 push push adc pusha jb xor xor fldt add push mov call sub add pop dec dec je or mov daa or xor add adc jb sti sub popf fldcw lea add pop fmuls push mov inc inc enter shr jmp mov sarb imul mov jns je insb je ja jmp ret lret adc and fisttpl inc cmpb loopne inc enter xchg les sub rcrb ret mulb sbb sbb adc sub xor push ret xor lahf add clc addr16 jge xchg add (bad) in repz pop call rorb in jb add shrb mov mov xor sar mov lea sbb (bad) rorb pop int hlt dec sbb mov pop or fcmovb fnstenv xor fisubr lock out inc jmp xchg imul and add adc mov std pushl (bad) int sub mov push out (bad) js cmc xor jl test dec rorl xchg test (bad) testb enter pop ja imulb lds add push push ja lcall sub inc xor out pop aas dec outsl sbb mov sub pop roll jecxz out mov ret arpl or push je xchg or fsubrs in or addr16 (bad) mov int3 rcll add mov push fs pop add aas cmc enter je dec hlt jmp ss (bad) dec shrb hlt lods jne clc xchg sbb dec mov pushl daa inc stc push fcmovb push cld aas enter pop mov sbb and cld pop mov inc add or cmp in test inc insb insb jge pop ret sbb xor sub add fildl test cmp das aaa and in lahf fwait jecxz daa cmp rcl inc sbb add jb adc mov cmovno or es sub xchg insl cmp xlat push fcoml adc inc ljmp inc sub or cmp push cld push mov (bad) test sbb mov data16 in mov sbb sub nopl jno or je inc idiv popa cmp inc cmp fs pop cwtl xor (bad) rcrb es mov jmp and jmp pop xor sbb jg jl jae push push ja js rorb loopne fisubl and pop jnp shld jge sbb aas idivl aam loop xor or sub xchg in (bad) pop jg sbb lock jle js fcomip push push repz (bad) or add adc sti cmp pop add hlt mov mov scas push sub xchg mov pop mov fisubrl je fnsave imul (bad) and mov into hlt mov test rolb fsubrp es mov imul add mov fcoml insl add sbb mov push push or ljmp daa adc rorb jae add sub inc add mov hlt lea testl inc mov inc lds sub xor fcoml (bad) dec fildl xchg dec hlt sbb mov and add or pop or test pop mov fwait in push inc mov popa (bad) stos pusha add adc dec shrl push mov bound inc dec mov dec add cmp mov sbb or (bad) fdivs and loopne xchg push sbbl cmpsb scas sub pop mov add adc mov ret add or lds mov dec cmp es xor push inc xor push ss ret dec loop inc pop enter add arpl and fisub mov sbb sbb rcrb (bad) enter jmp test mov inc and (bad) jle testb and sbb fucomp cs fwait or cmc movsb xor int fldt xor ja mov mov sub or loopne imulb loopne repnz sub lock add mov sub repz roll push out test insb cmc orb jge cmp les push fildl pop test je,pt cmp cmpsb pop jns dec dec sbb nop pushf adc cmp pop xor enter int3 inc sbb dec (bad) es xchg or loopne daa cmp mov mov mov dec inc subl pushl faddl sarl loope mov outsb test or push inc add insl pop inc stc jmp pop loop push mov push mov adc fildl (bad) mov or cmp jge lea shl mov enter push add fs and add add cmp jl aas adc cmp add sbbl (bad) xchg sbb dec cmp xchg jae iret and repz sbb push cmp xchg pop sub push mov pop pusha rorl jne pop push call xchg push pop push ffree shrl jp cmp push (bad) aaa fisubrl or lcall dec cmc out adc cmp or add je cmp imul mov push cmp jne cli (bad) mov dec inc pop push loope mov jecxz fcmovu fbstp cmp jbe inc or ja xor mov jmp lods icebp sbb pop hlt pop pop mov (bad) std xor daa inc jo dec jl cmp je push in (bad) ret das mov jmp aad cli js push roll and or inc cmp je daa mov loope lods lds ds and cmp das shrb insb push cs ss jle fistp negl std aaa jne pop incl mov movl mov cwtl push add mov bound jl test pusha mov push aaa (bad) cmp push clc cwtl clc sbb lahf pop outsb and xchg mov ret es sub (bad) mov mov push push xor int pop or mov mov call or (bad) mov mov push (bad) cld aaa mov mov fwait inc stc test mov inc cmp sub push mov lahf je add push mov mov inc inc or jmp fstp pop lds add sbb inc in mov (bad) xorl mov sbb or or jne into dec mov shrb inc sbb push inc out imul sub cltd mov enter adc add mov and xor jge inc jmp xchg sub xchg imul sbb jge add and test jmp std negb sub xchg ret shr mov dec fcmovu mov mov push pop inc mov jne sbbb cmpl or or sub loop or push push pop sbb inc mov jae add pop ret fst xchg femms sub add mov mov add jbe clc mov (bad) mov rol insb add repz test and adc (bad) ljmp jbe ljmp repnz push sub cmp jae xlat or cli in sbb push repnz das dec (bad) push inc add add xor add jmp xor and inc and and mov out ds fnstcw add lock jmp dec dec mov test (bad) insl pop repz inc cmp add sub inc push sub dec into dec or sbb or in call xor fsubrl dec push mov sbb xchg or sub mov xchg scas add xchg cmp jae orb pop outsb mov inc add and adc add mov sbb sarl in in pusha add (bad) (bad) cmp jmp lock jl cmp sti jge mov cmp int fstpl (bad) (bad) jae andb aad sub inc mov shlb movsl sahf mov dec jl (bad) inc aaa or jle das add cmp adc xor inc mov ja and or out or idivl mov and cmpl lea jne ss mov mov das enter jmp ret dec dec outsb adc add loop jo (bad) mov das sbb dec jle jle jbe mov add repz loop jl incl inc cld ret inc insb arpl jnp jmp adc jne test mov dec sbb aas test jo sbb imul adc test xchg int insl mov lea fnstenv negl cmpl insb add fistl aam push xor sar in jp cmp popf add stos add jl cmp jg sub mov inc cmp jne inc push adc ret insb ds xchg jge mov jmp arpl pop or clc push dec adc pusha testb pop add cli xor flds sub imul or xor ljmp jmp repnz sarl rorb sbb jp sbb imul mov inc movsl push pop ret adc int3 jno pop adc lret out mov out pop loopne,pt xor test jae outsb fildl test fnstenv repnz iret adc push negl sbb cwtl pop mov (bad) pop add push push and sbb push cmp adc mov leave mov stos repz je inc cmp out jae out add xchg sbb sbb insb jne into sub call pusha mov inc push cli jne icebp sub pop inc push push int3 push lods pop dec mov js addr16 sti pop adc mov mov inc aam jbe sbb xorl add push je push jb cmp pusha decl adc mov and pushl pusha in mov push cld mov mov clc fisubl aam les push lea cmpsb adc in adc push popf push imul mov in aad out xchg add andl stos xchg mov pop bound hlt xor add sbb push push andb add push or mov mov cmpsb adc add loop ljmp jb vmovntps shr mov mov iret imul inc test in dec test jl clc fldl adc lea mov mov insl les imul or jle xchg sub xchg aad jo pop rorl dec (bad) dec mov and mov jmp dec add das jne cld shll pop mov andl cmp fs and pushf mov imul jl add pop push pop jno fsubp push adc add pop add (bad) push data16 imul pop sarl jmp xchg push mov sub adc sti add mov icebp add fisub out adc (bad) adc cmp je mov movsb jno inc cmp out pop mov out not and add or loopne sbb in jl mov pop push inc dec into pop cltd (bad) lea pop or pop (bad) hlt or test into subl pop xor int sub aaa add add pusha mov push mov fcmovnu adc and fsubs or insl pop ret inc lods or jmp and and mov ljmp aad adc cmc movsl add pusha lcall cmpsl rorb fild jnp mov sbb mov sbb adc xorb sub outsl push push fcmovnbe mov xor push or ja testl paddd mov add dec add cmpsl or cmp (bad) adc mov cltd ds adc adc cmc or mov add rol ret test enter lea push fbld add das cmp pop mov insl or push sar push stos fidivrl add dec push adc xor dec cmc fisub lea sub dec pop and faddl add and sbb cwtl inc add jne jmp nop aam sub call or jae inc sub and and or sbb out jbe lcall pop jne mov cmp es add pop and jae add aaa jmp mov or fimull jnp sub ljmp adc inc test imul imul adc mov cli (bad) push cld jnp pop fisubr mov mov mov or cmp push fstpl loopne jecxz push inc or or mov sub (bad) neg mov xlat je mov shrb lods pusha dec dec push into pop je imul push fs pop jl fldt add mov push stc inc or add icebp inc arpl cmp jle pop dec or jmp repz add call scas cmp in and mov decb jne movsb lods pop enter or leave dec adc sbb test pop (bad) mov sub cwtl sub subl jp pop inc sti adc mov jp or fs mov adc and rcrl jge insb jae xchg rcll mov jle shr or or das outsl pop sti subb lea and jnp mov (bad) jb mov xchg add lahf jnp pop push add mov jne add and ret outsl add xor lahf shlb lea jecxz jns jne,pt cmp cmp push outsl adc movsb dec outsl test or sub ljmp xor lret push outsl pop sbb ret je mov enter les roll ret or enter xor push push std push mov nop sbb pop jbe stc lods movsl add jl and inc outsl lds inc cltd loopne cwtl movsb mov jo fwait jno xor pop pop lods fcmovnb dec loopne ret xor rolb cs testb add dec push insb and shl push mov cltd push or rcr push mov lea cmp inc fcmovne icebp repnz pmuludq sarl out ja,pt mov adc push sub cmp jbe and add subb mov or inc mov sahf jecxz or push mov mov jl js add cltd ljmp xchg aad mov cld fisttp and lea sub xchg push jp mov ljmp cli dec cld dec cmp add lods cmp orl mov mov add xchg (bad) insb cmp movb lock lea pop xchg fsubrs pop xor cmp mov pop push clc icebp add sub and xchg sbb nop dec or jno pop mov fs insl es into add fwait stos fstpt sar dec inc xor rorl pop (bad) cli pop scas sbb mov lret pop aas or dec dec pop dec pop pop in xchg gs pop call pop inc nop dec xchg and iret in js mov mov inc dec or insb dec test mov inc xor and insb inc jno cmp mov sub jge pop mov mov pop xor jnp adc jbe in jge inc mov jns test and inc cmp dec push es jle loope dec call jbe push pop add ja push fs ja jno gs jne test xchg jnp push add xchg xchg sbb popa push xchg xchg psrad xchg into pmulhw mov xchg jns or mov addl push loopne push push pop add lret pop mov and pop pop xor mov or mov shrb sub ret pop mov test pop and daa add push shrl scas mov icebp ficompl jno bound fist jmp pop pop sarb mov mov push mov cwtl inc sbb ficoml mov mov jg rolb ret rorl mov or cmp push cld mov add cmp jae orb jne addb inc add (bad) inc cld sbb mov faddl repz (bad) stos je inc test sub call jmp hlt cmp mov add nop push inc loope int3 mov pop stos or or xor incl xor mov fcomi aas push aas mov pop mov jns test push sbb cli pop orl mov mov push pop xchg cli jge mov jmp das sub mov sub pop icebp push ljmp sbb cmp inc push jle or push cli out pop sub stc push movsb imul ljmp dec mov sbb in add add mov pop test push push mov push pop push cmp bnd fmuls mov enter sub je adc lock rorb sub sub fucomp stc or enter movzbl add and call push out roll push loope gs and adc pop fwait in push outsb insb outsb sbb loopne add imul out or sub sub jp jbe add cmp sub cmp jl cmp les es es data16 or add mov dec call add mov aam hlt jbe pop inc jae stc jl dec add and sub or jne cmpl jb loopne mov inc cmp mov (bad) or pop mov mov inc sbb add inc sarl insl ss sbb mov xor pop pop xchg in testl cmp adc adc pop xchg out rcl add pushf inc ja mov mov in push xchg clc sbb pop cmpsb mov jp xchg mov push orb sbb mov inc pushf aad push adc pop sub call sti cmp jae cmp sbb repnz ret add adc (bad) xor pop xchg cmp and xor je (bad) and sbb jne jne outsl cmp sub push and sub lea inc bound roll repz mov cltd sbb push cld add mov test pop add sub or pop xchg pop mov inc jno enter ds lods mov jp or test jmp cmp pop cmpb inc inc aas pop lods ret jae cmp and faddl mov cmp (bad) cltd mov mov lahf repz jae fldl xchg jae jp xor push xchg jbe jne push pop add xchg sub and xchg mov in mov sub xor adc jmp jns sub in sbb jb out jmp mov lock aaa cmc rcrb mov movsl add add js pusha pop or and push mov sti inc aas das lock and sbb jl sbb das (bad) jbe call insb loope std rorl pusha jae adc add fcomps lock rclb popa or (bad) inc sub jne mov fnsave mov (bad) ja and clc (bad) mov sub jle xor push gs cmpb int push pop inc inc stos arpl sub add jne lods push mov nop add push push sub in adc add cmc mov push mov and leave adc les and xor sub push adc pushf adc sub testb ret sbb push inc inc mov pop sub add cmp add ljmp and or dec negl je out inc add adc lods mov rcr and fimull popf nop es (bad) cmpsl inc ret or loope add iret (bad) in inc jmp add lcall rorl scas clc add mov lods push push mov pop push adc loopne punpcklbw fcoms (bad) xor adc xchg (bad) ds nop inc dec mov pop mov mov pushf add (bad) mov mov cmpsb imul and pusha lcall rorb and je insb orb loopne nop mov jne repz or or cmpl loopne pop xchg xor (bad) jne pushf add pusha rol xlat mov pop lock mov (bad) cmp adc or inc mov sub fldcw test inc stos or mov in dec je test divb sub add and das fnclex cmp gs stc je cmp fldenv out cmp outsb pop fldt cli sub or mov call arpl rorb ret lods test xchg fidiv sub mov push fstps pop push test pop add cmp sbb (bad) je push add mov push cs or pop xor xor cmp aas push sub sti mov add add jmp cld mov inc inc leave call bt repnz pop sahf cmc and dec mov inc movups sbb inc push jne pop mov ror cmp outsb inc frstor xor test into adc adc and ret or xchg adc call add mov cld push std flds lret mov push repz clc in lods aam ja cmp ja decb sarl pop add cli fidiv lea add push and adc out popa enter mov push jns jmp add jmp jl scas mov or sbb or and out xchg add and fs xor popf rol into adc cmp popf or xor or mov (bad) jae add jecxz bound roll adc dec xor jae pop sub rcl dec test mov inc mov loopne adc std cmc cltd jmp stos cmp and in xchg stos push jl mov loop or mov icebp pop xorb fsts ljmp mov sbb leave inc ja call ret pop mov sbb mov mov inc outsl inc popa push xor sti insb sbb lea enter inc and fmull je nop lea ret shrl nop jne push int3 adc into xor xor mov sbb sub push pop sbb xlat pop xchg dec push xlat mov in ss sbbb inc outsl mov lahf adc mov inc adcl lret (bad) xchg jle fstpt xor or adc sub (bad) pop imul fsts shrl push fs mov jbe scas pop jne sub sub test sbb in mov push mov and adc push dec lods mov into and test mov lea and (bad) dec sub inc cld cs pop (bad) push mov scas jge lock andl sarb ja xchg jb sub andb (bad) mov movl cmp sbb inc cs push (bad) int mov rcrl pavgb xchg aas movsl or push pop add int jae or mov cmp mov or movb inc mov lea jl mov cmp inc int3 sub in hlt sub cmp push jno xor or pushf inc fadds icebp (bad) mov (bad) jl or adc (bad) (bad) xlat nop mov add rorb cld pop push mov push (bad) lea push push pushf mov or mov loope pushf jge xchg jo loopne xchg and movsl push xor pop sbb stc and add (bad) mov mov movsb lock add cmc add stc jne inc insb adc inc cmp inc sbb notl xor or inc adc inc mov adc (bad) mov push mov pop cmp popa sub or scas jne xchg ss mov addl mov adc call jb (bad) loop js jge mov ss std pop mulps and push mov sbb push sbb jo xchg mov shlb cmp xchg jl sbb xor test cmp inc xor cltd add sbb lods insb jg imul (bad) mov and cli loopne jl mov or push (bad) mov mov push (bad) jb cmp sbb cmpsb jno push lea mov cs adc and and dec xor out push and sub jle xchg mov or fsts mov aad lods push aaa push xlat push mov add push xchg sti or (bad) or pop adc inc mov xchg add mov lahf adc jne data16 push push mov lcall pop sbb cmp xchg add pusha and sbbl mov aam fadds test stos or push lcall leave das (bad) ficompl or or test mov pop shrl or call adc jmp rcr or jne (bad) mov mull inc push out (bad) jb cmp ja pop cmp jbe dec fldcw outsb outsl loope data16 sub outsb pop dec imull add outsb sbb inc notb add imul imul test out stos mov mov fisubl xchg inc or mov test inc inc cmc and lret inc xchg roll rorl mov sbb push lock int enter sbb ss mov push imul adc push fisttp push add sub xor je cmp inc cmp ss stos (bad) xor lock and inc andl lcall call pop stos mov jmp mov out cmpsl mov xchg test cli adc in std inc rcl inc cmp ja adc inc pop out pop push add lea rorb or stos lea lret orb add mov add mov ret cli inc inc in push cmpb sub push rcl or inc mov movsl movl movsb adc mov scas mov movsl inc shll mov call pop cmp push cmp sub pop imul sbb rcll dec stos add divl or push cs orb imul jbe pop cs sub (bad) (bad) fisubr jae adc adc je jne nopl sub subl or lock add insb or adc testl mov and iret pop fwait push js pusha and out or adc mov sub roll inc repnz ffreep test push lea dec adc sub (bad) sbb mov add test repnz inc inc mov or rcrb push cli mov lea push push sti into pop nop mov std sbb int3 es xor and subl cld push pop or fimull mov adc mov mov add js nop cmp mov rorl dec adc and pop mov enter ss mov jb jp push aad jnp and and loopne dec mov hlt cmpsb adc sbb adc cld adc adc and inc jne ficom push and mov ja leave imul jle cmp andl fldl notl add pop mov push jmp push pop call jne dec adc test or pop dec (bad) fistl mov mov jnp jmp or (bad) ja adc push jne je adc xor fsubrs cmp adc pop lcall jne sub fimul push (bad) pop add pop add shlb mov dec jle mov nop sub or mov divb jmp push sub and sub cli push cmpsb jmp lea in cmc lret or push loop adc addl xchg imul arpl icebp sahf sbb sbb push mov mov push pop test fcmovnbe cmc xchg jmp test add jne test jne movsl loopne test or sub dec jbe sti testb out or clc push subl xor test aad pop add ja sub push sbb lcall sbb ror push aas mov push xchg mov mov nop in call dec sub imull push adcb insb pop mov jmp or pop push mov sarb or adc inc ljmp and dec loope clc lea push sbb in fisttp subb scas inc rcrb push jge or push je push sti jne inc cmp inc mov out sahf addr16 mov sub (bad) scas loopne ja pop sbb pop jmp sub xchg cwtl inc lods xor pop mov xchg mov (bad) push sub addl shll popf cld mov or scas imul xabort lret fistl or je add mov and push push adc je xchg mov pop (bad) mov add hlt pop push push pop mov jge inc lret inc insb jno test jo add sahf mov pusha xor jl sbb mov setp (bad) lods test sbb inc push or sahf mov (bad) imulb xchg sub inc and and mov movsb adc xor jp and and out rorl jno inc jne cmp lds mov je sbb test cmp sbb and shrl push insl je and lods (bad) cmp adc add insb fiaddl sti jmp adc xchg movl mov daa pop sbb xor jne mov cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 inc jne add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt inc pop or push push lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb sub mov sub push dec cmpb lea mov fcmovne (bad) jge and or push pop pop aam stos push cmpb cmp push or loopne xchg jle push mov or or mov notb xchg xor mov mov call sub and int3 adc xor (bad) std push sub repnz add pop jl pop es imul pop xchg aam fcoms push fisttp inc mov sbb inc jmp push cs mov mov lcall stc rolb add in lea inc mov push push cmp and cs jmp movsl add in or xor fistpl mov push pop mov and pop fs call pusha and adc dec ret mov pop pop mov leave test push adc and arpl sti enter xchg sbbb (bad) mov iret and mov jne or sbb dec inc cmp jo cmp cmp popa add xor cwtl test sub out daa push pop adc es dec adc adc cmp xor loopne xchg adc pusha add adc or inc popa jnp,pt cmp sbb or outsl inc outsb jmp sti (bad) ret pop sbb add dec fs nop mov imul push mov stc and (bad) cld add push inc pop add xor inc test rolb xor xor sbb enter mov clc cs ret push add rorl add imul mov push outsb mov mov or and test cs popa test xchg adc xor iret data16 xor and and xchg inc cmp and dec sbb adc sbb fs nop mov in mov lock ret (bad) sbb dec pop insb jnp push cwtl push int pop syscall aam in cmp cmpsl push test rcrb lods add ss cmp sbb pop dec and add sbb sub push and mov push add add mov jmp push loop mov lcall lods test test andb or jbe mov and ds pop mov mov cwtl subw and inc test scas jg inc fucomip popf push repz rcrl push sbb mov push sbb add call push les movsl or mov sub (bad) or mov push or and dec lods add icebp push int3 and cmp cmpsb cwtl jmp fs or or jbe pop adc sbb sysret lods inc daa jo enter xor inc jge lcall andb sbb xchg in fdivrs cltd mov push lea jmp nop sbb dec push sgdtl enter cmp std sbb gs jecxz push in xor pop loope jne sbb into push in pop mov mov inc mov inc add mov popa fistpll dec or lcall shr sbb insb xchg incb adc or mov jb test inc int3 out and mov in inc testb mov or adc inc and outsb sub jmp jnp pop push mov bound pop push outsl mov jne (bad) push pop repnz adc sbb xor ds or bound stos adc adc sbb shrb notb stc or xchg int ljmp and addb pushf std or add aaa sbb inc mov and pop dec or push or dec inc sub cmp pop add aad (bad) je cmpsb inc push or dec call inc outsl dec cmpl or add pushl mov ret mov pop pop cmp dec scas push imul into jb inc sbb sbb popf and mov add xchg mov dec add push into add pop aam pop out pop mov loopne movsl in inc mov iret or pop lock cmp mov pop inc pusha mov push lods int jns or cmp shrb loope sub mov inc xchg int push cld pop rolb mov mov popa inc add sub leave xchg cmp movsl dec jmp push repnz add push arpl push loopne add mov sbb xor mov adc add sub je mov loopne dec (bad) xor (bad) sbb cld mov add sarb les les and push cld ret cmpsb pop ss fcomps mov lcall sub push bound xor sarl sahf lods mov aam add sbb lcall test imul sbb cmpsb imul imul mull add (bad) jne rcll jae mov (bad) xor push xor add jae andl adc add push mov xor mov dec pop mov dec negb inc or dec scas cmp and lar or lcall pop push mov bnd push repnz pop notb xchg lret inc es dec push dec push in pop testb or pop out xchg mov int3 iret mov pop loopne or (bad) jne divps add bound insb mov push add add add call cmp pop add xor push push pop out (bad) aad and add add js pop sub or adc push fisttpll cli add pushf insb mulb sub insb insb or mov pop inc dec dec inc dec pop dec inc inc cmp push inc dec inc inc push inc inc add dec push push inc push push or jb outsb je insl and jb jb outsl jbe mov push push adc imul add dec inc xchg dec dec inc adc lret fucomi das push xor cmp sub insb je mov imul jp push std mov repz aaa outsb outsl je add addr16 arpl data16 outsl ja cmp outsl outsb leave push enter jae fisubrl add jbe jb jne lds arpl and insb sub xor sub pop das popf in mov pop push fsub pop xor jbe testl pcmpgtb xchg add jae sub inc and inc test gs test stc and insl repnz je test das insb outsl arpl jae pusha sub mov add and add addr16 insl das test (bad) and ss xor xor dec popa dec adc inc xlat push cmp and jb jne jae xor mov (bad) addr16 outsl add lods jne fs dec sub push cmp push imul push mov dec imul sub cmp and push aam ret sub cs mov xlat loopne sub insb ja ds mov add je popa ds push fcmovnu jnp jbe push mov xorps imul gs popa addr16 outsl js jae mov xor fs sbb jae add and or xor xchg jnp fs push decl inc inc es imul gs bound mov dec or or jo adc dec (bad) cmp data16 imul pop outsb pop cmp sahf gs iret imul pop fadds push jne dec popa outsb or pop push push dec inc jnp mov inc aas cmp and mov sbb test mov or jae push cwtl sbb imul or iret int icebp push imul fidivr das daa and add pushf jae or sbb es cs mov jae cmp sbb insb mov mov test mov outsl or ja sub je sbb add adc stos adc xor jae int3 dec push cmp daa lahf xor pop lods add lods push sbb (bad) js sbbl add sub adc mov or sub inc and inc dec xor xor pop enter stc or nop outsl clc adc mov fdivs aaa add mov inc inc addb mov sarb mov and or rclb aaa insb test mov mov insb repnz pop sub (bad) in pop push add mov sbb inc push pop test inc rcrb shrb jnp in add adc cwtl pop popa aaa xor lret mov jbe or mov inc pop sbbb nop test cmp mov adc in cmp cmpsl mov pop jbe dec scas daa fsubrs pop xor imul fs aaa loopne mov je daa dec mov andl repnz pop daa dec stos js jnp,pn inc aad cwtl mov sbb add les shlb xchg pop rolb add push inc push dec cs dec dec add (bad) jle repnz dec pop xchg les js xor mov mov adc push cmpsl lcall mov fldenv gs gs add push inc popa add xchg call jnp jb cld outsl pop xor xchg outsl fwait int3 xchg mov pop out xchg or pop adc outsb cmp rol add lcall fwait cmpsb imul dec shrl in aam mov mov imul outsb aam cmc jb jae sub arpl jnp mov addr16 and or arpl imul je outsb aad push stos push pop inc testl imul jae arpl jne je or stos fdivs ja jb popa in mov cmp sbb sbb insb insb jns or in bound pop sahf js xor sub leave fisubr mov cs out and and gs or xchg push fsubr or ja sbb pop call stos aas jae inc jne jb push push jae inc test jns out fsubrl add xor mov jae xor xor pop (bad) add pop jbe dec dec add pop loopne add dec add daa out dec cld xor je (bad) (bad) mov push mov lods stos stos mov push mov push fild mov lods mov insb inc imul add fdivrs add jnp mov shrl nopl in mov shrl popf in jb lods shr aas sahf xchg stos nop mov call leave dec (bad) outsb sti jbe xchg xchg adc lods insl xor or and popf pop out test pop dec (bad) push arpl dec sldt xor sub fs or pop cmp popf or dec dec adc ja inc xor rcrb mov sub cmpb leave inc notb jge xchg jge mov dec daa mov mov and or jnp js out (bad) jg insl dec xor clc mov and sbb hlt mov add dec mov sub loopne pop or (bad) (bad) (bad) pushl fwait xchg xchg lahf jnp in dec push jnp leave in sub xor mov dec (bad) (bad) (bad) push (bad) mov mov mov insb add dec (bad) in xor mov insb add int3 insb sbb loop mov dec sub jns mov and inc (bad) mov mov incl call insb sub mov mov cmp mov insb push push in (bad) (bad) (bad) call add and test sbb pop inc mov inc inc leave push out xrelease (bad) decl cwtl popf (bad) cwtl xor test lods ret sbb orb xlat jg (bad) jmp ret push pop dec test lret imul add mov js cs (bad) repnz mov or adc jnp dec xchg sbb icebp dec mov int3 fwait or lret incl cltd leave (bad) (bad) (bad) lcall mov mov add mov mov scas mov (bad) dec les icebp mov push int3 and (bad) (bad) push bound pop xor notl fistpl xchg adc nop pop stos xchg sub aas pop pop jnp ret (bad) lcall mov xchg jle push sti xchg (bad) lret cmp js gs sub cmp (bad) (bad) jg mov xchg sub pop jns adc fwait cwtl sahf pop push dec fwait inc adc pop push sub (bad) ljmp (bad) out inc hlt lret and inc adc xchg jmp adc pop fstps cmp sahf sbb (bad) (bad) incl addr16 inc xchg jb push enter sarl fldt jl (bad) jmp jmp mov outsl sub cli mov lods push and (bad) inc jmp jl pop dec cmp das sbb test xor mov imul incl push mov and dec mov sbb sti (bad) pushl stos out add dec or jp insl je jnp pop dec cmp dec outsl (bad) mov jb cwtl ss and cmc pop cmp mov fdivrl ljmp mov (bad) (bad) (bad) pushl cmp mov test loopne inc lret xor in lods sbb aaa loope pushw inc mov (bad) (bad) lcall mov mov xor dec dec int3 leave or dec aam add (bad) mov ss inc add xor push or sbb pop cmp sar (bad) mov jo adc lret inc adc xchg jl (bad) (bad) (bad) mov lret or addb (bad) out lea inc int3 jl cwtl sub pop loopne lea (bad) (bad) call xorl mov mov loope dec in jge and adc (bad) incl xchg mov xchg out xchg mov inc stos inc pop xchg mov cwtl rorl pop and cwtl cmc fld fs sbb popa adc dec fcompl arpl mov (bad) (bad) (bad) jp xchg mov inc adc fisub inc popf xchg add xor addr16 (bad) decl aas repnz push loope int dec addr16 mov lods leave xchg cmp (bad) std out mov nop insl cwtl fwait lea xor clc stos adc test (bad) scas push jno (bad) (bad) ljmp add out adc repz repz pop cwtl sbb rol mov and dec push jg iret xchg pop icebp pop (bad) or mov lahf ret inc pop (bad) (bad) incl jo add mov add dec clc xor adc daa cwtl jecxz push stos mov cmp popf xchg mov push pop (bad) jns arpl dec push mov sub jg call jno clc sub aam insl insb loopw scas mov mov lret and roll hlt mov outsl pusha icebp push loopne scas stos mov jg adc testl mov inc loop (bad) (bad) (bad) cmp lahf sbb sti inc sub sbb inc sbbl stc test (bad) gs (bad) decl sbb inc mov test sarb jb push cld (bad) jg xchg xchg xchg lods xchg and jne mov dec and sbb (bad) (bad) lcall or call aas fsubrs (bad) xor fisttpl push (bad) (bad) (bad) call xchg inc movntq out lret dec ss push aam cmp ret push mov sahf (bad) (bad) (bad) in pop add out mov xchg pop inc adc pop or jb cmc dec pop clc pushl pushf cld sub jno (bad) push xor adc (bad) (bad) pushl jle jae dec or cltd rclb lret adc mov (bad) ljmp dec inc ja mov mov xchg lret sar ljmp add js or mov lods jl jno adc mov xor push dec sbb push xor (bad) jg pop (bad) stc out adc push imul enter mov adc (bad) (bad) inc cltd mov cwtl mov test mov (bad) jo jne jbe sahf dec jl pop (bad) (bad) (bad) call push lea inc test mov pop dec pusha xchg mov arpl xor daa cmp lahf or (bad) (bad) incl insl sbb leave pusha je and push fs mov lret cmp xchg add cwtl lahf test mov add or inc xorl push adcb cmp sar adc xor adcl dec pushf repz lock inc pop test roll push xchg cwtl ja (bad) add sahf scas icebp jne (bad) lcall daa scas loop je ja and and mov (bad) (bad) lcall xorb mov dec cmovb pop xor hlt out std pop jno push xchg (bad) ljmp pop inc sub mov mov in push lds insb cwtl push xor (bad) (bad) ljmp mov scas fs sbb add cmpsb lret jp inc jae inc push push out cmpb (bad) jp mov es pop jp mov jp popf jns push or (bad) (bad) incl mov aaa sub jge in xchg sub das mov int mov jbe icebp mov sub (bad) (bad) (bad) ljmp xlat lea jns push xchg int3 inc and cwtl scas adc ljmp std dec mov fmull inc add push jg xor mov mov lcall pop cmp repz dec addr16 lock popa movsl (bad) (bad) (bad) in inc xchg push out dec add and lret and lahf mov test aad (bad) push andb in mov sbb and test mov mov mov xor xor xor es (bad) mov cld clc out in fcomp sarb (bad) (bad) (bad) fcomi dec out and sub pop int xor rorl lret incl adc lock (bad) ljmp mov mov or mov rclb push (bad) incl dec dec inc pop nop enter cmp mov or xchg cli (bad) cmp inc (bad) pushl lret push adc aaa adc dec dec lods pop xchg sar push insl adc stos gs aam lcall mov pop ljmp lock jnp adc pop sbb push mov xchg sub mov ljmp jae sub pop pop push jmp mov aad sbb push aaa xor lret jns dec adc cmp outsb push jmp and mov push mov jp int3 fisttpll into clc mov les mov mov pop imul (bad) (bad) decl jg (bad) dec mov jl insl popa lret mov xchg arpl adc dec mov ljmp call mov mov xchg scas push (bad) jmp xchg jmp mov jg mov pusha jge (bad) xchg xchg (bad) (bad) pushl mov lods push add mov insl ss cmpl les lds mov insb mov dec inc cmp dec (bad) (bad) (bad) incl jnp push mov sbb imul pop fldpi shlb push (bad) iret fimull mov repnz cwtl inc xchg mov mov sbb aaa (bad) mov mov mov mov xlat popa adc lods cld lods jle pop repnz xlat pop pop (bad) mov test pop dec stos ret mov dec andl jg inc fimul xorl lcall xchg mov nop mov je scas repz mov adc pop add leave incl mov je ja mov sbb cwtl xchg add (bad) (bad) (bad) push mov int3 mov jnp adc jg fwait xchg cmpsb mov push repz and mov cmp nop addr16 xchg mov addr16 cltd in fstps dec (bad) (bad) ljmp mov lret test mov jmp (bad) (bad) decl xor xlat xchg fdivs push repz xor pop dec repz ljmp inc xor punpckhdq (bad) out (bad) decl push fwait cmp xor lea dec pop mov loope dec xor inc call xor faddl mov push push inc dec jne and (bad) (bad) call inc lea ss pop dec dec pop dec clc push inc outsb inc and inc xor fidivr cmp xor pop test cmp jg daa ds je dec mov incl ss repz dec push loope xchg xchg add dec jmp cli fcomip adc xor push dec dec (bad) fwait (bad) sub jle push dec jg loope mov das inc fdivs push mov stos dec fdivr (bad) (bad) decl mov push lods add sbb fwait push out pop mov pop in fwait jb das cld das cld js inc outsl or (bad) pop mov cmp mov (bad) dec sub lea dec pop sbb add jae sub test dec fcmovnu mov pop leave add pop fadds mov mov aaa pop loopne (bad) dec orl mov mov pop or aaa mov push mov cmc lret adc dec or cmp int popa pop jbe add cmc or popa and stc lea lret or mov xchg lret (bad) cld ja lock push and push mov mov mov push jge mov dec mov lret cmovl dec mov je lcall call test fs mov movsl mov (bad) jg addr16 mov or or and adc cmp mov mov cs or mov leave int3 js dec cmp jp pop shrb (bad) xor movsl and or in jo cmp pushf aaa dec mov lret or add xchg add xor mov mov jle dec adc insb push sub mov cmp (bad) orl ljmp ret pop ljmp lahf pop adc iret aas ja std mov enter test xchg lods fs cld xchg dec gs es adc mov xor fwait and rcll pop pusha inc (bad) rolb loopne ret (bad) xorl mov fwait enter mov je mov push lahf sti dec je dec lahf fwait jle adc sbb andb or or setb pop subl mov xor lea and (bad) mov mov dec in fs (bad) fs cmp insb lcall js (bad) xor data16 mov mov dec ret add mov xchg stos mov jle dec fwait inc jns mov adc addr16 call mov aam repz arpl mov aam mov js pop rolb ret aas dec inc dec call outsb mov rorl jge js xor das jo in dec inc inc sub dec into jg add outsl sbb lahf js adc popa dec push les jg push add dec scas pop push std push mov lcall js push dec pop in rcrl xchg sub push and shll sbbl add dec mov sub leave (bad) lcall add mulb js scas dec dec xchg addr16 fucomip jge js dec xchg dec inc pop dec xchg fwait jge js or adc aaa cs xchg movsl xchg and stos insb lock and jge js sbb sub lods inc push insl mov test inc fcmovnu das mov add pop pop mov mov movsl js pop dec gs ja idivb gs xchg popa js adc fdivs jno add add int (bad) int (bad) (bad) (bad) dec dec cmc test dec pop cld pop out mov sub xlat int3 xor sbb (bad) (bad) lcall sub daa popa aas push rorb mov (bad) dec (bad) imul cmp dec hlt cmp add xchg mov mov fadds lret rclb (bad) jmp aam addr16 ret (bad) push das jns mov jnp mov sub or lahf mov out dec repz xchg inc fisttp pop push pop push bound pop pop sbb and clc (bad) (bad) lcall mov push inc scas fidiv repnz out adc in xlat xchg push rcrb or pop loop push mov bound mov int lcall mov orb pop sub les gs add (bad) mov leave dec lds out fdivrs sub pop in jns jle dec cmp (bad) (bad) push popf mov scas cmpsl and (bad) cmc jb xchg cmpsl mov pop lods dec lods cmp (bad) (bad) mov dec xchg inc pusha popa pop and and cmp das (bad) adc repnz push js sbb outsb push adc inc sbb or popl jg jb jno xchg xor test leave inc jl jle dec fs negb or push icebp ds decl std sahf push in ret jbe ja fstl pushf xorb jb push ljmp lock mov mov push or xlat pushl (bad) incl fsubrp clc icebp mov cmp push xor mov mov mov jbe sbb sub push and (bad) addb inc leave rorl lret (bad) mov rcrl add scas sub fisubrl push jecxz insb dec stos adc mov int pop jo fimul inc test or popa jg push js js vmread inc nop add data16 fdivrs mov insl ds xor std pushl jnp daa dec push js js call outsb xchg dec fadds aaa push out sub push js inc popa loope aas in xor ss xor pop push jb loope js inc or minps pop js jge (bad) adc pushf fwait lea jle mov (bad) sbb fistpl out outsl cld (bad) decl push sbb in dec in loop imul into dec push clc or (bad) incl mov cmp inc mov adc cli pusha gs mov mov jg lds fsubrp lcall in call adc out pop (bad) mov (bad) outsl (bad) sub lret mov adc inc iret sbb sar (bad) (bad) (bad) ficompl cli (bad) into rorl sub psraw push cmovae adc test (bad) (bad) in jnp ja (bad) adc dec insl inc mov inc insb in sbb in pop cmc dec cld pop pop pushf setp test mov adc lcall push mov negb push data16 fmull cmp (bad) jg cltd and sti lahf push mov shr dec pop sbb push dec (bad) (bad) push push push stos ret adc outsl sbb sbbl jge (bad) jmp jne imul leave sahf (bad) mov add and or leave (bad) (bad) lahf pop xor lahf aam insb dec adc mov jge js push dec pop xor mov mov (bad) ss lods mov inc test in add pop adc rorl daa js mov lcall test xchg mov jnp sub scas decl dec pop ss push aad (bad) in hlt or adc (bad) pushl mov cmp mov scas lods stc jmp inc push jecxz divb (bad) in jg jb cmpb ficompl sbb loop mov (bad) (bad) jmp (bad) dec out cmp fdiv stc sahf imul adc es pop in aas jmp (bad) (bad) inc loop lock sub dec test mov dec sbb cld out stc cmpsb xchg jge dec (bad) (bad) dec pop rorb dec lahf imul pop lds sbb push mov push (bad) (bad) decl insl iret mov mov (bad) fs (bad) iret cltd negb cmpsl int3 push pushf or ljmp sbb dec pop fildll add pop mov (bad) (bad) jg and add (bad) mov inc addr16 xor movsb cmp xlat xor incl or mov ljmp add ljmp sbb mov fs loop push cltd jg daa pop aaa lea jb jl jle js xor aaa sub mov cmp aas enter js cltd in inc sbb pop fild push lods imul cli dec cld jbe and jge movsl lds (bad) dec adc (bad) pushl mov stos out push jmp lock pop das dec sahf dec aaa (bad) outsl ja pusha clc sub fisttpl (bad) ljmp push aas inc jg xchg mov pusha iret sti adc fisttp pop xchg rorb mov (bad) ljmp das cmc add sarl icebp add cld add cmp xor mov cmp arpl inc jbe dec push push dec (bad) incl xor pop lds lds or push adcl repnz sub mov repnz mov jmp hlt xchg jge js and mov not test push cmp cmp mov mov (bad) dec mov xchg gs push outsl pop xor inc sub test or sub jb sub sub push jno fdivs jae sbb inc ret sti xchg jge icebp cltd mov mov dec (bad) xchg pop and js cli push mov adcb addr16 int add mov ss xchg adc mov (bad) mov fidivrl insl imul mov xchg lods add ret sahf push mov pop dec (bad) call dec cmc in push sbb mov mov je or pop call mov pop je push icebp rcrl dec mov xchg (bad) (bad) (bad) lcall push lods adc es into movsl cmp push dec push dec lds (bad) (bad) call sbb sub popa sub jl cltd jbe or (bad) pushl clc mov mov lock mov mov clc pop pop xchg (bad) (bad) hlt in iret and ret int aad nop dec cwtl push dec (bad) mov mov xchg jns push call jnp adc xchg mov imul push push inc xor lea mov and inc (bad) push inc push fild mov xchg js dec pusha xchg or lods xchg lods mov js imul (bad) (bad) jg pop fistp xchg shlb lock inc fsubl xor jno in in pop ds insl jo test out cwtl dec dec pop cmp adc dec lcall pusha popa imul aad das push (bad) (bad) (bad) jle in (bad) xchg fstl ds jo int jl cvtps2pd mov pop cwtl or cmp dec fcmovbe je dec loope ljmp pushl leave and push cli aad jbe xor ret pop je sbb mov pop push mov rolb fs scas pop mov xchg jno sbb jo xor xchg loope (bad) das shrl mov xchg decl xchg xchg cmp call sub (bad) (bad) jg (bad) sbb loop les fbstp lret fwait xchg cld lods mov (bad) mov (bad) jg push pop stos outsb jbe mov lods mov sub clc bound enter (bad) (bad) decl sub lock mov sbb mov xlat (bad) fnop test pop jg lods add inc inc in and mov in mov push sub aam das test sbb js mov push sub cmp xchg push mov xchg outsb lcall gs cli scas pop cld test pop jne xchg pop (bad) in (bad) jmp adc lret and imul (bad) incl and outsb stc push ds jno pop xlat or (bad) mov jns popa pop incl andb ss or outsl fs outsl mov mov jmp pop pop pop push outsl clc sub fisttpll mov xchg out add pushf fsubrs xchg lcall pushl (bad) nop pop pusha movsl dec (bad) js add pop (bad) pop dec aad pop pusha (bad) (bad) pushl dec data16 mov lret add pop sahf jp sti pop push cmp out (bad) mov push xor loop cwtl dec jl mov or cmp cltd and hlt (bad) (bad) dec xchg mov scas xorb push push jmp das fdivs lret and sub add mov cltd lea pushf test mov sub dec pusha rcrl mov mov jnp fistl stos push pop sub sub fsubrs sarb or add sbb cmpl fcoml adc mov add (bad) js mov pop push dec xor (bad) (bad) incl pop xlat and inc ret lret pop enter inc push mov push imul mov mov mov adc jl pop xchg pop dec xchg push mov xor call movsl and icebp sbb sbb mov inc or pop bnd into add dec dec stos adc dec push sbb incl dec shr pop clc push shlb fs sub (bad) (bad) dec mov pop (bad) in cs adc (bad) mov mov pop push sub popf (bad) (bad) (bad) call loope adc mov shll cli es xchg mov imulb inc pop pop mov ret push test sti cltd fnstenv mov mov inc test (bad) stc jne pusha xchg and lea jmp push mov adc clc and test int js jl dec jge add add xlat aam imul jmp (bad) incl xchg cmp mov pop mov push push inc cs pop ss jge dec mov add repnz stos mov add push mov mov xor (bad) (bad) (bad) fcomip cmc les jo aad cmpl xchg scas xor push xor cwtl xchg int (bad) lcall mov mov add push sub sarb (bad) (bad) ljmp jmp aas imul dec and add xchg into xor fmul xchg (bad) (bad) mov loop (bad) hlt das cld (bad) jmp enter aas add aas inc and pusha cs cmc push popa icebp ret popa aam mov clc add xchg roll xchg nop and add xor mov pop xor mov inc sbb jge push insb add aad imul mov inc mov mov (bad) ljmp loope jmp (bad) cld repz ds xor xor clc (bad) (bad) (bad) (bad) (bad) call adc into arpl ljmp mov pop xchg mov push enter cmc ljmp dec or xlat nop push push clc mov and jp jo jae mov pop out (bad) (bad) decl sub xor push test lret sbb cmovl pop ljmp mov imul xchg xchg xchg mov adc and cmpsl rclb fstl sbb or std push mov cmp inc and divb imul bound rcrl cs mov mov out xor inc mov dec inc add addr16 imul sti mov outsb sub or je je push add push popa jae cmp and xchg sub and inc adc and stos push cmp mov int3 jp push gs and pop stos mov inc add stc add mov and orb test adc adcb add add add (bad) xor and adc outsb mov (bad) cmp sbb mov xor push add add imul imul mov or or jge push cmp xorps adc and adc adc and sbb cmovno sbb xor push pop push pop outsb mov push pop jnp pop insl out das dec ja and jb fsubs jge xorb orl sub or sahf mov ss into pop xlat cmp or sbb add sarb sbb enter or adcb xchg xchg add js out or sbb in and ret aam xlat imul mov lcall adc xor fcoms lods sbb dec (bad) xor sbb fdivl sbb js jns imul pusha lcall (bad) in jecxz adc mov pop inc add and fadd xor into xor add stos adc nop xor add pop cmove movsb inc jno add pop lcall jns and jg jns cmpsb fild mov cld das inc jle popa adc cld test mov inc into push cmp ljmp and pop iret mov in fucom sub call (bad) push add repnz pop pop fisubrl xor fcomp loopne cmp sahf hlt in jle sub (bad) mov add mov dec (bad) mov mov je cmpb push (bad) xor pop push push dec (bad) xor rorl inc cmp je xor sub sbb add imul cmpsb imul cmpl mov roll jg enter arpl mov push push inc flds inc aas gs mov dec add int movsl insb movhps cmp js mov insl lcall dec insl add je xor add xchg mov out (bad) xor repnz das add xorl aas inc push jg push inc mov inc pop insb outsl imul xor or pop out aaa insb outsb addr16 and jg pop outsl jne pop outsl pop jb outsb addr16 nop sti aas je jo pop imul dec add add les jl adc or add push loopne fs ucomiss idiv dec outsl fs gs popa outsb fs imul je inc mov cmp add gs xor insl fnsave popa aaa dec cmp in inc add xchg jb adc dec or fwait push inc test inc gs pop insb stc fidiv inc sbb shll in cltd inc daa inc mov jnp sub pop or push or es adc xchg outsb (bad) (bad) xor popa inc inc xor ja in outsb addr16 dec bound push insb outsl jae ja lock gs mov arpl nop insb jne push fsubs data16 jae push je xor pop aaa sbb dec inc dec inc push or pop jb push mov push (bad) push je dec fdiv insb push outsb ja fs (bad) fbld popa xchg adc test push insb jae mov arpl push popa mov imul mull xor dec (bad) fldt insl roll dec insb xchg xor inc jo iret sbb insb xchg call and push pop and push gs push add or or dec ret (bad) adc arpl push lea data16 or insb fwait mov inc adc and mov push imul mov out push repnz jns jb adc pop aas inc dec xchg fwait inc or push mov push icebp or add and inc ret jbe xor sbb popa or pop push push pusha dec pop cwtl adc jne mov and dec inc pusha add or mov sarl imul mov push lret mov and inc pop and ficoml xchg adc (bad) adc sub jmp jns push xor leave dec outsb cmp mov mov addr16 pop movsb popa (bad) outsb dec gs test les adc loope mov dec outsl sub adc pop push push inc push inc lret xchg xchg adc adc xchg jg add xor sbb (bad) lret push inc add dec add add add add add fwait lods mov pop adc in sub add add adc inc pusha or or cs cmpsl insb fs mov je (bad) sahf nop (bad) out ret add and int clc sti cmpsl adc daa sub inc add es push (bad) xor sub (bad) mov cmp xchg sub add add add add add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 