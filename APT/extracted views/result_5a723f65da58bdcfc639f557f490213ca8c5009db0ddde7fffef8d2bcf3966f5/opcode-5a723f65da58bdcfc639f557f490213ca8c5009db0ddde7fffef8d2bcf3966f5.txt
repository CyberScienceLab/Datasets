pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add fmuls add loopne add fmuls add icebp or or add add or mov or adc add or or add add adc or movsl loop add loopne add or outsb pop or sub add and or imul add loopne add or mov loopne add or mov loopne add add in or pusha pusha push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock jmp mov adc xor lea (bad) (bad) pop mov inc add cltd push out inc stos inc dec dec test cli sub add inc fwait test dec out and pop loop sub (bad) and cs ds call call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add add mov and rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub test dec movsl jbe cld ret push push or jmp xchg push xchg cmp mov cltd cmpsl ret xchg clc adc or insb sahf sub or (bad) pop or mov xor cmp popa pop rolb mov push mov cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv pusha outsb nop xor xlat jns pop test sub pusha rolb xorb call pusha fs sub gs cmp (bad) (bad) fisubr pop mov xchg jge pop xchg dec test mov aam push mov mull fwait addr16 insb inc loope push sbb enter push pop pop je ret sbb mov pushf pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov cli push pop lock jp sub and mov lahf sbb push jmp xchg pop clc mov push mov cmp popf add xchg or jnp iret pushf cmp inc (bad) xchg adc jp pop sub lret push movb push lret sub push fildl xchg pop jno push xchg imul mov push addl lods sub mov push inc loope xchg dec xor sbb push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor push lods and neg or xchg leave xor fsubrs int inc (bad) (bad) mov mov jp test mov dec or or sbb loop push cmpsb imul or (bad) inc fnstcw cld adc adc mov jb jmp pusha xlat mov loope mov sarl aad or pusha fldenv adc sbb xchg add pusha rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl sub lcall cmc mov pop cmp xchg repnz jmp mov repz adc add push xor sbb ret or aaa add and mov xchg push std jmp cmpsb xchg push adc loop call sub test fxch mov lock or outsl sbb add loopne neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc xor or mull sarl inc inc mov sub pop mov lods xor mov (bad) push cli cltd lock out nop jmp sub lahf sub pop inc inc sub xor inc push cmpsb clc rcrl add inc inc insl testb fwait adc sub loopne and jo push rorl sbb adc pop mov add fwait push or add add or add add add add add add mov or add add not or add add mov add add or add add pop sbb add mov or std push add call or add pop add (bad) add fdivl and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl imul jmp dec mov stos test add jg les add (bad) add sbb scas adc mov neg add push lcall dec fwait imul lcall sar iret add jle sub enter mov cltd dec xor mov push int3 clc push test imul shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec into or jmp mov stc mov insb in into negl cmp jecxz in jno xor dec jns lcall push pop mov pop mov pop and shr int jns negb sbb mov pop inc xor inc mov cwtl in movsl xor cmpsb cs out lret sbb lcall (bad) das add dec and pop or xchg enter sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul add push add inc cmp jg inc sub lods cmp push loopne scas hlt inc enter sbb xor movsl and test ret xchg in hlt imul add movsl cmp cld xchg int (bad) xor push sbb xchg mov ficompl jb add rclb mov lods stc pushl stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop inc or jg shrb test imul add cltd xchg imul sub scas mov xchg shrl mov xor sbb nop push xchg imul cwtl xlat mov jge sub enter fdivrs cmp pop push add nop das (bad) sbb sub and insl lock cmpsb idivb jne mov mov pusha pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb das adc and imul xchg mov mov dec push jnp in adc xor mov sbb push fmuls xchg sbb orb frstor inc push (bad) push lock adc fs jne push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl push (bad) jne xor and pop ss xor jnp test and das sbb push in pop or negl das lea (bad) (bad) push insl movsl leave jp movsb fcompl mov xor das movsl push aad inc pop xchg ja and or and das popa fwait push test sbb sub pop pop and jnp jge pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock loop adc (bad) xor out aaa inc sbb stos dec cwtl jle dec (bad) imul icebp mov je enter mov scas (bad) pop movsb call out and mov aas dec mov insl nop in clc pop daa ja rcrl or imul jmp repnz fwait pop jmp mov cwtl call mov int mov inc mov push push mov fcomip add adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo das sbb or mov shufps ja mov adc imul es jl dec in (bad) dec push aaa inc jle dec loope neg mov leave movsb pop cmp jle mov loope sub test stos lds (bad) jne sub mov add test in je inc and shrl outsb iret movsb dec add sub and jl nop popa jnp (bad) sub frstor cmp dec inc add jge inc inc push idivl repnz fs pop inc scas je xchg ja movsl imul fld xor jae dec push in cmpb mov gs in je push jo or pop add xor loopne mov inc loope push imulb add or jo or loope (bad) xchg inc add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or aad pop mov (bad) hlt pushf xchg xor or push xchg adc das xor mov movsb jge jo adc test adc dec mov mov xlat in and xor pop fisubl out in ja mov jae mov pusha fcoml dec mov jl sbb imul (bad) shr loope pop add pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or clc or fsubl xchg bound sarl pop jp stc xchg out jge add cs pop push lcall mov cmp mov cmp stc lock aad ss out rorl sarb cmp std pop lods fsubs xor pop mov cmp aaa mov insl int3 push adc stc mov popf (bad) mov jnp inc imulb es setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub ret sbb cmpsl push and jl nop shlb out orl sbbl xor ret fucom cmp adc xchg out xchg leave mov lock dec mov mov and pusha jnp pop jl loop mov inc call pushf call call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call cmp adc rcl jb iret dec arpl xchg push repnz int3 adcl in push repz imul lret and add popa aam xchg test dec or std adc popa fmull and jge push pop aad fimul call mov jmp xor bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter (bad) pop or int3 fcmovnb push sub mov add pusha sahf pop lahf call in lds sbb in push sbb in or pop dec int3 popa xor sub sub mov (bad) cmc test or lods and incl add lock ljmp or xchg sbb and scas jno jne enter mov push mov add add call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp fidivrl adc aad addr16 popa adc pop dec xchg dec lea in xor add and pop pop cmp into jno popa fidivr (bad) out jne inc outsl mov sbb repz adc idivb (bad) jae inc fwait inc jb pop inc and test sub es mov clc cmc or pushl jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add and repnz push das push inc imul mov mov sbb mov fild and jp into mov adc pop xchg adc negb dec loope outsb popa bound popa nop das mov icebp cmpsb in or es test int outsl jo insl jae fisttp test adcl mov mov inc sahf xacquire pop inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad movl xor inc mov int3 mov cs sahf cmp jge mov push test sub fdivrs and push mov jae scas adc bound dec ret sahf mov cmp dec adc ss xor jmp call shl cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je mov call es xor jne sub pop xchg insl aad pop stc je stos mov data16 jae ss mov lcall adc cs sub fisubrl mov and push inc and adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja fidivrl inc inc mov shll pop in icebp aam push mov test rorl ja dec in mov rcrb lock test fdivrl xor adc jle out ffreep ret test dec mov inc cmp and pop pop adc adc sbbl (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp xchg cmp outsb shlb sbb cmp xor scas int out inc ret jnp fsub (bad) ffreep test and mov xlat out pop into inc add jp fiadd lods daa insl in pusha stc movsb cld hlt dec or movsl sub gs dec jnp sub or call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs mov jmp arpl fldpi mov jbe scas mov cmc movsb pop mov add jne stc or mov scas jnp loop testl jne sub pushf jae jl sub xchg gs dec (bad) push rorl pop xlat leave imul cmp popa das scas xor in jge pop sbb or negl into fs aas add push cmpsl inc jle add jle or pop inc test gs mov mov pop pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop rorl out pop and das mov lret pop je jo lcall sbb loop push cltd adc (bad) mov out pop lods xchg hlt add adc inc into jnp jle (bad) pushl fiaddl mov iret xor lret aaa es in test testb lea jae bsf rol pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub movsl xlat xchg cmp mov rcrb sbb enter sub outsl ret mov pusha xchg shrl in insb arpl into mov lret xchg xchg mov scas scas xchg mov inc pop int sbb subl popa mov lahf mov jnp jp jle jge xor testl (bad) cld xchg pop lcall inc inc mov xor jb pop es sbb mov push pop rolb sub push add fstpl mov push (bad) mov pop inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov add pop xor xor push fldcw mov cmpsb (bad) das int3 sbb fdivl imul push xlat jne xor dec jmp pop sbb pop mov cwtl jg std out imul mov add int mov popf mov (bad) clc movsb mov cmp xor shld (bad) imul call cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl xor and cmc mov cmp imul in xchg addb cli xchg hlt inc mov xchg pop mov cmp mov inc int shll ret jbe test sub repz ja adc jle inc xchg mov xor arpl jns adc cmp je test mov cmp jae dec in pop jne int jp xor pop hlt and movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall jb dec daa lret int3 mov xor cmpsb lret cmp push add jge iret sub add pop data16 lcall int3 leave lods mov pop ljmp loopne es xor sub xor sbb sbb and jge (bad) push aad sub pushf mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test mov pop cld jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) and push sbb mov pushf mov adc fcomi mov hlt xorl cmc dec jl push nop dec gs add xlat daa lcall push movsl pop mov in scas push lods sub imul lds cli jne fcomps xor lea jne pusha neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor sarl arpl out sub lcall cs imul adc mov or rcl test jg mov js (bad) push call outsl lret lret gs jns jns cmp scas fidivr push mov dec push jp mov inc push (bad) imul aaa lea cmc cmp push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov pop lds or popf dec flds mov push aad push sub pop jge pop out or stc fnsave sbb mov cltd pushf sbbl (bad) test imul adc call xlat adc sub (bad) rep mov mov jnp ss into mov aaa dec mov out push pop repnz add and je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp sbb aas shrb ljmp add test mov and jmp in lahf fdivrl mov popf dec mov imul inc fstl shr jo cmp mov sarb sbb mov outsl fisubl test ret outsb out pop mov xchg dec idivb dec mov ret and cmp movb lea call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub das hlt fisttpl hlt sub xchg imul jo fs test dec sbb int3 xchg cwtl clc push cmp or insl rol jecxz (bad) pop lahf dec dec mov cmpsl sub jb adc pop jbe (bad) sub and dec push (bad) (bad) fstpl jmp test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov arpl pusha and cld cs lret int das gs jno sarb test cs int sub scas aaa or push insb add int lret addr16 pop inc adc fidivl clc mov rcrl mov sub xchg cmc adc ficoml cltd cmp loop clc push into cmp (bad) or jbe les fdivl jno pusha cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb and xor mov sub pop inc jle insb sbb push fdivrs and mov (bad) push cmp fiadd aas cmpsb cmc or and cltd xor imul ficoml jae popf outsb sub loope sbb lcall scas dec adc ret ss les js pushf pop dec and in into inc fldenv cmp test and cmpsl popf popf and xchg pop cmp jb pop les jmp pop cwtl lea pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds nop pushf dec cwtl inc (bad) scas xchg jnp xchg and in fisttp shl pop stos push cmc lods or movsb add in sub je cs sub (bad) jg out xchg jns out mov les in out inc sahf sub cmp fldenv cmpsl pop jae xchg add add push xor aas call sub mov dec or push jmp test or out mov movsl pop mov enter jnp mov stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or pop jmp or mov aad adc rcl mov and scas mov xlat mov inc fs fcmovu into cwtl setne adc popf lock insb xchg add loope push mov push je cmp movsl lock sti dec gs cmp sub shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb or fdivs jg mov out sti add or pop js mov xchg sub (bad) xchg push cwtl repz xor cltd (bad) (bad) cmp out jg je rolb pusha popf mov rorb sbb xchg lcall icebp std insl shr sahf stos adc jmp lret (bad) mov popa movsb in je jge aad jecxz (bad) leave (bad) test inc xchg dec inc sbbl jecxz push loopne mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov mov inc aam (bad) pushf add mov test imul cwtl xchg cwtl pop pop cmpsb sbb ds mov scas push xor fwait std mov test pop cmp xor outsl mov scas jns rep outsl add fimul hlt mov fstpl or xchg xor dec insl pushf lahf out arpl das dec insl out fs cli icebp ja sti cmp fisubr pop inc lret fistpll inc (bad) in push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov push or out cwtl pushw ja adc dec sti rorl mov pop loope push add out mov in xchg loope scas loop insl lods enter int3 outsl cmc insb in test arpl imul sbb gs cmc inc xor dec test ss add repnz mov movsl inc mov adc or insb mov in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb (bad) jbe out inc (bad) mov mov lss jb jmp nop gs cmp sbbb cmc and lods out mov pop mov clc xor stc dec mov (bad) out hlt pop lods out xchg mov loopne mul rorl lods sub pop (bad) cmp iret inc popf xor pop xchg jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq dec (bad) in lock mov jo (bad) jns pop and push sub push inc les scas in mov xor adc sbb enter inc fisttp xchg sarl jno push ret push cli inc fisubrl sub lds pop test pop imul movb mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test dec aam mov sub and in in add push or cmp mov adc xor cmpsb sub or sub into jle sbb sub or pop notl and movsl cmp inc jno bnd test leave pop cli sub sbb pop inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov orb sbb mov lret inc jg lea sahf out push (bad) (bad) stos adc mov es (bad) (bad) pop mov fcomip or add and (bad) push rorl cld mov xlat dec movsl xor inc and (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in ret xlat pop hlt cltd pop sub scas and or fwait sub dec xorl cmp mov repz push mov fstl test fs fdivl jns xor jmp stc lret test aaa mov cwtl bsr sbb subl fs out push jle daa ret leave or stc cmp jmp pop push and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov stos fwait jo jns mov hlt insb lcall push adc cld push jbe or pop cmpsb repnz jb rol dec mov es xchg adc pop mov xchg clc jo mov push cmp sub and and out in jecxz je adc jle ret jp xor (bad) lret jae repz test pushl fsubp mov inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg das adc xor fistl in mov mov or icebp repz push xchg inc iret pop movsb dec aad mov sub ss loope jns in pop lret push in push xor sbb fcoms or push push xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub hlt popf inc mov xlat and iret xchg rorl mov out mulb jg push pop das in and or push cmp std std or cmpsl pop pusha or mov aam cmpsl pop xor jmp xchg push leave add jge sub dec and sbb movsl cmp mov push add xor push mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl sub (bad) xorl cmp lock lods push in lds or sti or jle dec add inc xchg push rorl pop dec stos push mov cli dec pop ss das and in dec (bad) jo not call xchg outsl inc (bad) xor inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 cmp jo cmc ja and inc or adc test mov xchg push pop mov pop data16 out outsl lret cmp xor dec xchg out rcr fnstcw repz bound mov adc xor cmp mov or xchg les xchg xor or lods mov xchg push cld pop fsubs scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl lods push aad xchg lea mov (bad) and cmc jle adc iret dec and jmp push mov inc int3 mov int3 call cli dec in sbb xchg sbb repz xor in sbb dec push leave jecxz enter movsb aas ret bound ret sbb pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb adc push loope mov sahf test test std cmp std sub push adc iret or or imul divb stos stos sarb and xchg out (bad) (bad) push (bad) clc imul lcall int3 xor lcall or stc sbb (bad) aad mov mull lods movl cmp lock pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov dec mov xchg xchg test xlat inc cmp das lods mov push (bad) xor clc cli stc xchg fstpt inc lea xchg cmp cmp and mov cmp mov fidiv mov pop (bad) adc das jp insb mov test push sbb mov push mov pusha add add rol movsbw bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add jnp fnstsw adc aas das dec ret data16 shll shlb mov mov mov loope fnop dec scas push mov inc sbb pop out movsl aam test movsb aaa insl int3 push adc cwtl movsl sbbl decl fbld test fldl2e insl call es push iret mov pop hlt inc sub rol dec jl outsb cwtl insl cwtl out xchg jnp inc pop cmpsl inc dec jl lds ds inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor xchg pop mov in jmp (bad) xchg or mov lods insl je inc lea mov mov popf pop jecxz inc leave mov fisubl mov cmpl and and jmp xchg sub cmp ret mov add adc in mov sub test add inc stos push stos cs add data16 call lea jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor and sub (bad) (bad) (bad) jne sti dec or sbb (bad) stos mov fisubrl aad xchg lea jmp add mov push test add nop sbb or cmp (bad) adc cli push xchg pop test js call sarl movsb fdivrl cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add dec test fwait in pop xchg pop out repnz std mov mov scas or mov out into mov div fstps and push mov xor (bad) or (bad) cltd stos iret (bad) in mov cmp (bad) mov (bad) cs adc inc mov cwtl cmp in inc sarl mov imul add add in pop add pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test xor out pop into into adc cmpsl jae mov lret cli das into sbb popf aad jp sarb lods adc dec inc in fidivr cmc mov jnp test pop leave and sbb and jne dec iret or push aad repz sub (bad) call push dec jo sbbb inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub daa mov call mov fldl xchg dec jb lret pop sbb dec mov aam pop mov jbe xor leave sbb cmpsl lea or inc jl out push repnz push in cmp fcmovnbe xchg into xchg mov mov add loopne aaa repnz push mov lds fdivrs bt bt sub jmp test es add (bad) out test adc inc add (bad) dec repz in add inc add add mov add inc add add ds jns nop xor inc add add cs out add inc add clc jecxz aam push mov es add add inc add inc add add stos sbb pushf xchg add inc add add loop fwait (bad) out add inc add out cmpsl sbb jnp jp sub add rorl out inc aaa sub add xorl sub add add jne inc add (bad) mov adc pusha das es add add mov sub add (bad) cmp inc xor add push cmp lahf scas mov add xchg push cmpsl pushf or add lcall add inc add add lret lcall lock sbb inc add cld lret repnz add fnstenv xor add xor or xor sub add call mov add mov fildll push mov inc add ljmp imul add idiv sub jge and sub add clc test (bad) ds add imul sub add arpl jno xchg sarb inc add call aaa mov add call inc jp inc add add inc fsts test add in cmpsl inc popa popf xchg inc xor add pop hlt add mov add cld adc clc xor inc add (bad) pop sbb pop jge sub add sub jbe sub add dec mov xor add stc je pop out adc inc add rorb imul xor add and add call push push sub add out mov xor add push rclb sarb inc add iret scas fmul das (bad) pusha ljmp inc add (bad) lods lahf xor inc add add cli sbb cwtl lea sub add aam std xlat or cmp inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) and lret sbb mov insl cli aaa mov lods xlat push fistpll inc pusha xchg jnp sahf fidivrl imul aam push out fnstcw (bad) sbb idivl lds data16 das stos leave sub in pusha mov pop test aad add cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz (bad) pop mov sahf icebp pop movsb cld out fwait clc ss sub or hlt pop outsl rorb sub rorl jo dec clc jg out insl mov inc in add loop inc cmp add inc jo jae jnp pop out jno repnz cs add pop verr (bad) fldenv fsubs pop inc pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc fidiv (bad) mov push inc cmp (bad) pusha pusha insb xor cmp xchg xlat pusha into xor ss je outsl lea pop dec outsl xchg (bad) fistpll and std xor lret js sbb xchg inc sahf out xor call aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea inc inc mov js lahf mov jo mov or xor shr jmp or jae stos psllq inc int adc mov xor nop fcmovbe cwtl xchg fs in sbb mov insb mov mov dec push (bad) jbe clc mov dec inc fldenv inc insl xchg cmp lods test stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno call arpl data16 cmp (bad) xor std sub xchg mov xor loop lret or out cmpsl mov mov push mov add (bad) xor fnop add roll (bad) repnz test out fnstcw sahf mov xor push cltd rcll cld xchg cld es mov ret push mov jmp xadd lea bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov pop xor fstps pushf lret icebp cwtl repz dec mov enter (bad) scas ja lods sub mov push outsb pushf sub and xchg and xlat fidivr subb int3 jg daa jp pop jns add fwait stc inc movsl add ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas sub cmpsb mov fs jae bound xor int imul int3 push cmpsl jecxz xor addr16 jne jb scas mov sahf xchg xor adc in adc lret scas push and jno sbb xor int mulb and add repnz add xor imul (bad) mov dec ficompl inc cmpsl pop mov dec leave jecxz cmc add (bad) jmp add jne push pop jmp cld js xchg ss pop add add stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test mov shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or iret mov and mov (bad) jns int xchg push and inc mov pop call xchg rolb adc cmpsl pop out js or dec cmp inc test lret pop mov imul mov divl inc or jbe sbb roll roll sub mov sbb pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf sbb and and xchg xchg dec call pop and mov xorl lahf dec scas stc lcall repnz or fcomi inc adc sub inc adc (bad) jbe cli mov sub sbb jb jp mov loope gs ds or movb dec or adc out push sub and mov repnz inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret adc mov shrl pop insb adc mov cltd inc inc fisttpll inc imul cmpsb and mov sub jns rcl repnz enter aas jg (bad) pop push (bad) pusha aam pushf sarl xor cmp mov adc xor xor je test bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and sahf hlt xchg xchg dec jne decb es mov add clc xchg imul xchg jmp jae icebp insb mov mov mov push or jle jns mov mov jb xchg push dec shl and dec mov fdiv in sti pusha mov lea bound pop inc jmp sub cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push in adc (bad) imul lret int and and lret sbb (bad) andb lods aad inc ds shlb cld sbb imul call int fdivrs mov inc xchg xchg insl movl (bad) in subl mov fxch lcall push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom inc mov scas arpl jno int pop dec jo mov in call (bad) pop movups insb shll scas adc insl test xor fdivl jb test jmp cmp ficompl test loopne add stos mov adc cs mov clc push packuswb fstpl cmp ds shrb xchg mov or inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb and pop fwait lret and mov call bound imul cmp sahf (bad) clc data16 push adc mov dec dec lea je ret cmpsb loop dec lcall ljmp ljmp inc mov stos dec and dec and cmp jmp lods xchg mov mov stos sbb (bad) mov xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test insl inc sbb xor inc scas call imul push jb or mov and leave push cltd pop sti cmpsb sub sbb mov mov mov ss pusha jno (bad) mov or rorl pusha lea je cmp sub pusha clc call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb lret xor insl jne sti fidivrl adc xchg nop push inc sub aas (bad) mov inc pop dec inc outsb je rcrl mov scas xchg cmpsl repnz std adc in test gs sbb cs dec sbb enter lock xchg scas out or fnsave (bad) daa adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp imul inc xchg push pop daa inc stc loopne pop test les add and mov xor and testl mov and int test jbe push mov test cmc sbb (bad) in xchg popf js push mov mov and or jle das gs fdiv es rcll insb sti or es pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad pop daa adc jbe outsb std and fsubrs dec aam or and mov xchg pop repz mov ret test sbb jp negb scas xor (bad) xchg cwtl fwait xor les mov dec imul int3 in push pop rcll pop repz xchg pop mov enter mov inc test je shrb xchg push inc outsl mov dec pushf rcrl leave call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb into pop insl adc jp cli jnp int jmp dec mov mov jnp aaa popa repz repnz aaa shrl mov mov xchg cmp pop pop jl popf stc or in aam movsb add cmp (bad) pop push cli push sub hlt mov (bad) push insl das in mov call fnstsw push mov inc int adc mov or xchg fadds in ds sub test dec pop pop jnp sbb int3 xchg lcall dec pop out aaa cs sub lds (bad) in jmp jbe jns cli sbb ss mov sbb in jns push dec mov xor aad jecxz cmp sub mov inc repnz cmc inc test (bad) xor dec test xchg inc sbb xchg or repnz pop inc pop ss cwtl fldenv pop jmp jns inc add adc cmpsb fisttpl (bad) imul sbb xchg adc rcrb or inc push rcl icebp jg cwtl adc dec cmp mov insl jb or mov (bad) mov dec cs push ret add pop add popf jne xchg cmp dec dec and in adc shrb jne jnp xchg into scas jmp mov ret adc pop cmpsb and sti or out aas cmpsb mov sbb mov in cmpsl mov dec push add jmp call (bad) jle rorl sahf (bad) or mov loop mov push imul loopne or cld roll cmpl or adc cs add mov cmp pop (bad) negl or fs cmp outsl and aam rcrl or loope inc (bad) jns or or lods imul out sbb out outsb lret cltd mov mov mov mul xorb cmp jae cmp pusha aaa sarb pop arpl pop addl cmovs mov lods or imul int3 add pop pop xor pop mov xlat pusha cmp call jmp sarl (bad) repnz dec aas fwait es adc mov mov sti add imul (bad) aam shrl sbb xchg pop jne pop lods xchg test aaa cmpsb jge popa inc test dec inc xor xor xor es cld lods push in jge or mov ds xchg dec cmp mov xchg mov xchg lods or scas fcomp inc add call inc fcmovbe jg,pn pop or call sti inc ret pop es dec out mov mov mov jae push xchg ljmp xor sbb xor pop mov orl dec ljmp out movsb pop mov imul adc je sti out inc out and xchg mov stc movb fdiv pop outsb sti or jmp mull in mov stos adc xor in pop (bad) shlb call push nop jno lea push repz adc sub lea push popf pop aam adc out and mov movsl mov push hlt sbb or scas out ret cmpsl imul loop push js call mulb out add adc push bswap pop pop bound loope hlt fwait add bound jnp imull mov mov lret mov and xlat add bound fwait sub and push inc xor mulb popa js xlat mov push outsb sbb jae push and jnp mov cltd test dec jl pop hlt hlt and xchg outsb push mov and mov in sbb or add into mov pop sar (bad) mov repz cs pop jne pushf sbb jg jp push sub call xchg addr16 xor jmp in es lahf sbb push cmp es test (bad) popa iret mov mov xchg lods pusha adc mov jnp pop repz ljmp push xlat out lahf sub xor inc cmpsb mov lcall ret pop mov icebp sbbl sti dec dec pop shrl out or fistpl inc fstpl inc cmpsl mov mov stos int and mov push inc (bad) jle lock leave inc add xchg add subl inc mov add hlt loopne adc and push mov sub sub mov gs mov dec or movsl jo cmpsb leave inc es insb push aad adc xor add xlat push les out dec xchg cld push pushf ss ss inc mov in daa in jg and imul mov jmp pop lods in lcall mov inc adc movsl push cmp (bad) (bad) clc or adc insb adc xor lahf inc inc test dec inc sarb mov out call cli dec inc iret pop push test scas and pmaxsw ljmp cmc insb (bad) jg xor mov inc out mov add mov cmp pop fwait jp,pt jns daa adc lcall fwait xchg into pop adc (bad) pop mov and add pop xchg int3 mov in mov scas add fsubrs out dec sub aam dec and test sub (bad) mov loop add xchg icebp jg out mov pop movhlps mov (bad) in cltd push sbb lds idiv loop icebp dec cltd je push into mov je gs or dec push jno dec push cld mov in push or jo hlt jle push pusha stos mov dec sahf xchg dec hlt imul cmpl lahf gs sbb xor je sbb mov ja insb xor arpl or cmp adc pop jb xchg in sbb stc jb sbb in push sbb adc in std insl lea jg ret mov nop jmp out stc or jp jecxz push push shll mov xchg xchg push sub pop add (bad) mov or sub xchg int mov test (bad) out iret fnop testl xor (bad) xchg cmpsb lods rol fstpl dec es fldcw rcrl pop inc pop pop or scas shlb cs jno mov pop into adc xchg pop imul dec ds fmuls outsl repnz lret push sti ret aam or pushl mov stos ret pop push js or sbb push mov mov addl mov xchg sbb out lds rep sub add cmp sub pusha add fistp ret andl push insb jecxz lahf in push dec mov sti sbb mov lods jecxz xor test test aad pop and out mov je subb cmp add es dec xlat and dec fstpl jmp xchg dec leave aas pushf (bad) push push sbb pop (bad) fcmove ds sbb jo (bad) jno sti jns outsb push mov xchg in mov aad ja pop cli (bad) pop ljmp cmp push imul (bad) insb cwtl adc mov into mov add xchg nop (bad) push jp das or sbb inc xor and (bad) cmc mov xchg andl mov loopne push inc cmp pop fs cli dec mov ss xor test int3 adc cltd movsb mov sahf sbb pop add outsl sub (bad) in dec xor sbb adcl insb add push adc adc stc xlat dec jle adc pop js es cmp inc and loop push xchg and pusha pusha fisttpl arpl fidivl es add push mov movsb mov sub repz gs jmp adc push and jnp sbb mov call xchg pusha in cltd (bad) mov test mov sbb sbb cld add jmp xor nop jne mov lock negl popf lahf in push shrb bound dec jno imul jl cld mov mov mov cli imul pop cltd scas aam rol xor shl sub jbe stos into xor push in aam data16 call icebp cmp adc mov adc pop cmc adc sti mov dec dec add test push (bad) sti std in int3 xchg test and call mov loope cmpl or push lods push test xchg mov mov (bad) sbb imul fldl push cmp pop pusha push pop xchg mov sub aas clc imul test xor fistpl xor loop dec outsl dec (bad) lea scas aad (bad) jg fnstcw in jp mov pop inc dec mov pop sub and jae in push push sub cmp pop (bad) ficoml sub and xchg imul jnp inc pushl bound popf shr pop ret lahf xchg add mov fadd dec (bad) mov xchg lock lea adc mov mulb sbb lret lea rcr cmp xor (bad) jbe aaa cmp sar das adc stos pop inc sarb aad inc xchg pop call cmp dec shrb lcall pop cmp jb cmp push sbb jl xchg lods movl and data16 ljmp sub push (bad) (bad) shll stos xchg pusha arpl cli cmpsb sbb ss scas sbb subb cmp sbb jns fistl mov bound cwtl mov inc jo out sub ss sub lahf and stos inc das int3 add scas clc jnp push stos add and add jmp cmp inc arpl inc cli sahf divl (bad) lahf movsb aam mov push xlat jne pusha out fimul mov mov add sub pop ret lds clc in and sub js (bad) pushf jb inc (bad) mov es pop xor sbb std xchg (bad) test xchg cmc daa aad jmp gs cwtl jbe cld mov fnop mov fisubrl mov sahf sti (bad) hlt daa mov nop cmp add push and dec mov lods cmp mov cmp out rclb stos jns jmp sub in pop xor and xor mov push fisttpl xchg and and xor (bad) insb inc xor clc jnp dec sbb out and xchg mov push out popa mov mov jecxz sub inc xchg and push int3 sarb pop mov fcmovnbe (bad) outsl and dec clc rcll jae (bad) (bad) pop aam and cmp inc jge out cmc scas cli adc sarl icebp inc movsl push adc repnz pop lods xor loope pop and rcrl mov inc rorb cmp testl incl (bad) adc and sarb xchg ja fcom mov cmp and test icebp movsb les add sub xor inc je sbb ja lock push std js cmp stos mov xchg clc inc or and ret mov or jecxz pop (bad) leave xlat dec int3 cld fwait mov xor jnp add sbb push sarb call mov jecxz aaa and jmp cwtl inc adc sarb dec fucomp cwtl fs test xchg aad adc sahf movsl test jnp or fwait cltd push ja dec jnp add push js and shl inc sbb sub ret add pop dec fstps cwtl movsb xchg iret xchg je jecxz dec jge cmpsl cmp daa imulb mov (bad) outsl fwait int3 stos mov scas sub mov repz in lea pop scas fsts push mov andl xchg cs pushf pop insl int push aas ds fisttpll mov dec in or enter and push and insl cmp mov lods sti xchg imul mov frstor hlt dec jge cs cld xchg adc jo lods in roll lret (bad) cmp insl stos sti xor sub insb scas push push mov inc cmp ja iret cmpsb push xchg adc lret mov mov sbb (bad) or imul scas aaa rclb ds adc nop cmp jno aaa sub enter dec mov dec in sbb sbb call ficom lock jp repnz ljmp xchg ret stc fnstsw vsqrtss jmp insb add pop jg mov fisubr pop cltd or (bad) cltd cmpsb lds mov pop fildll or outsl nop gs mov push les outsl mov mov and sub fdivr mov and mov add pop sub cmp mov add daa aam sub rclb out loope add flds xor sbb dec mov push out aad xor push pop xchg je popa outsb dec cmpsl xor sub inc (bad) fdivs push addr16 iret test add push scas test fdivl arpl cmp addb (bad) je iret mov pop dec and mov push sbb mov sub fbld mov mov test ja mov cmpsb mov test dec mov testl jl sbb cwtl lods adc mov iret sub xchg sti or fmuls pop cmp dec shll out push notl fdivl push loope jl insl lcall sbb cmp mov imul push adc sub pusha mov das test or js fstl xor outsb icebp icebp loop dec fdivr pusha jp pushf rorl lds sbb xor adc sbb popa (bad) pop rolb push fwait sub xlat jnp sbb inc push negl iret mov inc dec sbb or cli dec testb sbb daa push lret pop cwtl (bad) dec inc jae dec sbb or in adcb nop jmp shrl dec add sub xchg pop adc dec cli pusha fs mov push cltd andl data16 into in and (bad) out (bad) jo mov mov inc mov notl lods cmc adc cmp mov in pop fldl inc popa in adc mov sahf roll push ret fsubl pop test clc das mov cmp lahf hlt inc clc adc jo mov les adcl adc sub hlt aas scas mov fildl add mov xchg out mov aad cmc lods xchg int3 or cmc jecxz (bad) in xor jp sahf push adc iret dec push dec mov inc or xlat loop mov cltd loope icebp and inc fs mov test mov adc mov push test movsl addr16 std jp adc and popa mov cmpsb or pushf lret mull jne iret push jl sbb cmp push test add cmp (bad) outsl inc mov or sbb stos jne sub dec mov into mov xor imul cmc jmp jl (bad) (bad) mov fstpt jle pop mov pop not aad stos dec out push push xchg fisttpll outsb insb popf sarl jne daa mov lahf cld (bad) negb mov stos or imul je insb arpl jp data16 pop es mov jbe sub lods push jmp test sti ficomp ret popf imul push imul stos arpl (bad) inc mov daa adc in icebp orl jns repnz jge dec in mov push ss pop pop mov shlb call test mov mov mov insl lock sbb and push outsl (bad) loope in xchg sub mov xor and cmpsl mov pop mov or xor divb shll jecxz fidivrl jl sbb mov xchg bnd arpl scas add rclb into xor or jl sub and xchg cmpsl dec pop movsb js fldcw mov mov mov and sub lea xchg loope gs inc jb push pop mov pop or jecxz and mov push push add inc popf insl stc mov cmpl mov adc add stos fldt stos popf or xchg adc cmpsb aas pop pop enter hlt add push js jmp enter mov jge (bad) iret rclb xorl (bad) repnz dec xor ret xchg lds inc xchg andb das mov (bad) std jbe fs stos xor mov cmp xchg (bad) aam xlat rorb iret adc (bad) es sbb jl,pt (bad) cmp jb mov dec xchg mov insb fcompl faddl js sbb jmp cwtl push ljmp lea jg shll popa inc dec in mov add cmc cmp mov mov adc dec mov mov push (bad) add adc popl insl xchg stos mov xor or sbb inc fbstp mov xorl imul (bad) mov xchg xor add push dec clc movsb fldl jecxz daa aaa xor push out and mov jmp push out jae es or popa (bad) rol sti cli push loope mov inc dec jo imull test xchg shrl jg xchg push pop icebp sahf pop pop incb push cli inc mov mov push aas xchg lcall xchg movsl mov sbb pop out dec xchg dec popa les cmpsl gs xor adc push add cmp fistpll xor data16 insl mov ljmp mov and add mov iret cmpsl cmc sbb mov add mov dec xchg ret xchg xchg adc fstl imul ret incl sbb push (bad) dec jb xchg add pop jmp shrb sub ret pop insl popf lds daa adc pop test mov jge sbb jmp (bad) into clc mov mov in out sbb cmp std mov fs jns lcall jae aam inc ret lea test mov in clc xchg mov popf or movsb (bad) incl jl fdiv out mov (bad) jo and pushf or mov mov mov es sbb les (bad) enter in rclb jae scas sbb mov ret daa fcomps pop cmpsb sbb aas xchg mov adc (bad) insl cmpsl popa iret inc mov and mov imul cmp or xor xor jbe loope outsb adc cmp stos popf fs mov (bad) mov ss push icebp and insl fs xor aam outsb lcall iret fadd enter rolb push mov into jo mov sub and pop xor or imul cld repnz pop decl cmp push mov jg test push jle fwait sub (bad) mov (bad) mov cwtl cmp mov lea cli je into repz push movsl cmp scas add ja or jge fs mov stos jo into and hlt ds popa test aas push mov jo scas clc pop inc out mov xchg pop and fistp mov mov rorl cmp sub jae imul jnp movsb or cld xchg adc mov dec int cwtl (bad) iret mov mov pop jl in adc push inc xchg or inc fcoms cmp lea pushf or inc inc cmp xor loop cli push je fldenv inc call xchg mov push xor mov xchg cmp and lahf fnsave jle test fmull pop adc fsubrl xchg mov lretw lods lret outsl (bad) leave sub push addr16 and rolb dec in fcmove in mov fcoml xor rclb iret and lcall fidivl mov or xor dec popf fs jge rorb test pop push push loopne cmpsb cmpsb movsb sub es jo (bad) sub leave sub pop test or dec rorb sub orl test xchg in add mov cmp std add rorl test test mov or jae lcall push pusha xchg pop pusha add cmp mov das xchg mov cltd mov push mov rclb cmp and add btc jo sbb icebp ret call jnp mov scas imul cmpsl pop mov push sub cmp jb loope xor sbb and adcl xchg (bad) push inc cwtl shl test aas xor cmp jae hlt out ficom jnp sti cli lea (bad) cli out push test fstpt sbb cmpsb dec es cmp pop (bad) in jae dec pop scas mov clc mov or jmp lods jae sbb jg dec cs and jg push cltd test jno xchg pop inc cmp adc ja and jnp ja arpl mov xor or faddl xor jmp inc push adc movsl xor mov add xlat dec adc (bad) mov dec xor pop (bad) arpl pop mov pop fdivr (bad) (bad) pop iret inc ljmp jp mov shrl push mov loope sbb jns stc lcall test push sti mov inc jnp sti mov add sub or cmp out pop or insb or call cltd mov adc imul pop leave inc fs add lret dec pop push (bad) sti fdivs mov and inc rcl jno jnp mov pusha xchg lret std push outsl mov mov movsb and jne fidivl sbb mov jle jl adc stos sbb and jnp inc add xor mov or sbb add mov test add (bad) mull leave cmp xor rcll sarl das sbb xlat es into xor fdivrs adc xchg push dec inc insb std jnp scas cltd lods adc stc negb sub dec test in dec xlat dec (bad) and faddl xor and fistpll or inc hlt js sbb fcompl sbb into xor (bad) adc in bound mov data16 xor cmp xlat jbe je aad sub js addb lahf mov xchg inc imul hlt loopne push cmp mov cmp adc sbb push (bad) imul in cmovnp cmp inc cmc test loop sbb fmul dec push push les adc xchg rcrb fwait and ficomp into dec flds inc xor pop and in xchg sbb pop xchg jp xchg mov in adc clc push scas pop push and mov cltd cli pusha (bad) lret mov pop lods hlt in xor inc mov mov cmp xor lahf jl pop rol loopne ss int3 lea imul and enter jge lahf cmp daa stos push push sbb into jae push sub loopne jno fwait loope mov imul jo jge stc leave jp int mov jp or mov mov loop sub jb jb inc cmp lret shr in (bad) mov iret fdivl sbb cmp pop mov xchg loope popa pop stos daa out (bad) idivb push xor lds cmpsb mov jmp sub pop mov xor mov jnp jge mov and lock mov ret adc fidivrl dec pop inc addb test lcall (bad) xor mov or mov mov add icebp leave mov dec test stos out js scas popf lods int3 outsb lret test mov mov inc imul pop mov dec pop test push mov jle call jnp mov lods je in in inc test push jle jle movb fimul mov mov cmp adc lea shll mov cwtl mov or orl (bad) (bad) and dec sbbl push and lds (bad) test sub js adc or (bad) imul stos out mov jecxz cmp gs into cmp cmp mov xor pop pop mov les sbb gs lret call push into mov sub jl jae loope inc adc pop popf lcall leave stos sbbb mov mov xor mov sbb lcall cltd lret (bad) pusha addr16 in and push fldl gs fwait jno adc je mov xchg mov out pop ret insl adc push sub inc sub mov add aad jbe imul movsl inc and push das fcoml cmp mov mov fwait mov sbb sub test fwait pop dec mov and and test jb inc pushf ja push xor mov int3 clc mov out scas cld cmp xchg xchg adc push mov sbb sbb inc arpl push ljmp sbb jno in lock aas aam xchg mov std mov jge enter in xchg pop cmpsl add push jnp out pop cmp aam mov pushf test add mov stos lock into cs xchg mov and add popf (bad) int3 adc int3 or sbb cli (bad) ret pop stc mov and jge pop dec push mov add mov (bad) add pop popf jb inc push mov xorl fcomi pop push inc out adc hlt rorl pop jmp sbb (bad) mov xor outsl mov xor jg divb jle inc rorb pop clc (bad) mov popl bound stos xchg es mov sti or out pop mov xchg movsb cmc call cmp mov pop es in inc negb imul scas jne fidivr sub test loope mov fistpll adc mov test jnp xchg cmp or push adc jmp and dec ss mov lea lock sbb enter pop push sbb lds push ret mov pop frstor popl xor out les ja repz insl out cld or cmpsb mov mov lcall sub xchg xor and xor push std cmp hlt enter scas add and dec aas jo xor mov movsb xchg cmp int3 mov cli xchg push std xchg (bad) cs jecxz fsubl pop ja popf lret mov repz stc pop addr16 or xchg mov scas in fisubl push pusha dec (bad) cmp mov xor dec jmp adc repnz xchg fidivrl adcl pop push inc mov sub std fs mov shrb push addr16 stc jbe sbb loop icebp and fnstsw aaa xlat add jmp gs add inc jg sbb dec jns inc xchg pushf cmp hlt insb cmp lret cli xor imul bound loopne mov jle add mov adc inc (bad) dec mov or jmp or enter dec and add jl cmp push push mov inc mov cmp add mov xchg xor fiaddl xchg mov sarl orb lock xor popa cli lods and lahf dec xor out sar cmpsl and addr16 cwtl pushf scas int in inc jns mov (bad) sbb pop cmp sar pop pop jp adc pop (bad) jg jp enter jg sub lea mov inc push cwtl sahf mov push adc mov mov cli mov enter and fdivs sar mov and (bad) int es mov dec iret add cmp dec pop or loopne push fcmovb sub pop push push icebp cmp lods mov mov inc sarb pop fsts adc jmp inc sub je lret fldl adcl add push enter mov xor repnz push cltd (bad) int3 movsb subl fildll push pop ficompl fwait add aam imul cltd adcb cld push (bad) js mov xchg xchg shl in mov sbb nop sub jb fstpt lea add xchg or jo add test lods mov les adc inc fs cld mov add add aas cmp xor dec std push sbb out fwait outsl mov fcmovu (bad) cmp ret pop pop adc test stos stc pop and jae push push xchg or push sub add cld jmp loop mov (bad) clc ja ss outsb mov mov lahf adc pop jge movsb inc decb cmpsb test lahf data16 sub mov stc in je ja inc mov sub addr16 or xor pop mov pop fdivr scas mov test in cmc es dec inc push testl xor pop mov movsl inc sbb (bad) out (bad) jmp mov xor ror cmp or sbb stos lock add repz and sbb inc addl adcb xchg xor xchg pop movsb xor std xchg cwtl xor and jmp mov aaa mov cmp verw mov popa lahf adc adc sbb leave test push cmp jg mov mov adc xchg mov dec aam jle dec sbb imul pop fs jge imul stos or push cmpsb inc pop pop ja push pushf dec mov mov jge es pop ss jo xor mov out xor xchg adc xor mov (bad) loopne lret pop out test fisub sub in lock arpl jo out scas cmpsb sti sar enter lahf adc mov mov mov dec cmp push mov pusha fidivr push jo jp js push mov xorl popf cmp adc adc mov sar and lret std xchg es pop xor mov fistpll (bad) incb dec fisubr add mov aad jne inc (bad) mov outsb enter hlt (bad) jb lods rcr arpl mov outsl mov adc or (bad) mov adc (bad) xor jecxz aad or push mov inc aam cmp pop rolb push scas call data16 movsl adc xor icebp mov or fldenv rcrb push (bad) adc in jmp not daa xchg cmp rcll (bad) jne stc std cmp jo outsb push addr16 push push fxch mov inc sub loopne outsl in lods ficomp dec push notl mov ret xor fnsave inc out mov stos push js enter mov into les xchg sbb pop (bad) stc jbe mov data16 jmp pop fidivl pushf aam xor xchg mov push ficomp mov loopne dec gs ret adc xor push aas (bad) inc adc push test ret das fscale das xchg out mov pop mov sbb lods xchg sub insl sub jno daa in mov sti (bad) je mov ds push cmpsb jge push lret pop dec push cmpsb or sub pop mov push mov inc xchg fdivrl add cmp fild push fcmovb nop lods inc add hlt adc or add xlat jnp cmpsb cmc faddl xor sub stos rcrb pop sbb mov icebp jbe or icebp ret loope into jae sub aaa adc sbb cmp inc and mov mov mov std add in xchg mov or xchg xchg ret cmp push inc mov das fldl sbbl fdivl lea stc movsl aaa ja jmp clc (bad) cltd mov add (bad) inc cmp add das xchg cld cmc divb pop dec cmp js sub or sbb movsb cmc ficoml bound ds add fmull xor enter outsb int push mov in or movl and add cmp xor xor jnp or sarb adc hlt insb sub shrl aad mov push xor adc loopne mov inc jbe fcomp lcall push jbe lods arpl cmc and mov mov ret aad cmpsb xor cmp mov pushf bound (bad) mov scas (bad) sti dec shrb jmp mov imull test adc fwait shl mov mov add push add mov cs mov jnp loop fwait push subb xchg cmp outsb inc inc xor incl fidivrl rolb fwait aas mov push xchg ret aad push inc jle scas adc jnp (bad) xor or jecxz and xor in ror cmpsb jae push lods sbb inc int3 inc inc jae xor cmp jae pusha adc mov inc mov fwait lock stc inc jmp (bad) sbb lcall dec push aas cmp push sbb movsl outsl ja mov push shr loopne loop mov inc repz int push jne in sahf or cwtl or ret adc cltd ret dec jge cmpsb push repz pop inc or aas inc and pop movsb xchg pop jl inc jnp sbb (bad) cld hlt jno js stc mov or aad test or dec lock mov ret mov adc mov es test push dec or inc xlat lods lods mov jo jne mov fimul aad jns or and not loope lea (bad) mov or mov xchg mov in sbb icebp arpl inc das cld rcrl pop cmpl leave and movsb inc ret ds call add pop push mov mov add sbb jns lds cli test adc js inc add (bad) mov fisub popf icebp adc (bad) push div xchg jl repz adc adc cmpsb ja ljmp fcmovbe mov cltd in xchg mov push stc cmp leave lds mov xor push scas pop mov pop or dec push out add xchg or inc fcomi dec pop loop push add push adc test jp dec push loopne sbb xchg movsl push bound popa sbb and pop out sbb out adc adc in js xchg inc dec ss aas push mov call ret ljmp dec in js dec xor cld mov rcr dec cli jl addr16 push hlt popf xor push aad movsb xor loopne sub ficom and lds sbb adc dec xor das xor or mov (bad) pop push mov push pop push inc out or out sub sub sbbl cmp cmp (bad) cmpsb scas fdivl mov and jae mov outsb js shlb or cs cmc in cs jmp fstl ficompl sub int movsl cmp cmc fnstenv sub push jne sub push imul clc clc aaa sub lock (bad) sub repz int in (bad) repnz movsb incb mov sbb fwait push mov bound jb push out dec mov arpl les xlat mov vmwrite lea test mov inc ss pop sbb xchg out push (bad) arpl pop pop insl cwtl cli push notb hlt imul pop test jg loop pop pop daa mov fdivrl je imul enter gs mov xor xlat xor rorl jmp lods jno incl add pop ja rcrb js js inc fs (bad) (bad) lods subb idivb push mov inc inc mov and scas icebp repz incb test test jnp sub xchg orl testb cli (bad) push das pop repnz scas aaa repz mov fwait and mov test aaa adc (bad) jnp push xlat test push mov iret jb sbb cmc mov stos and es pop and sub jo fnstenv int3 int inc popf xor dec cwtl shl aam mov bound push test rclb and lods out lret data16 mov xorl xchg fiadd push (bad) je inc lret add add (bad) iret call pop stos mov xchg gs jb lock fwait sub push sti nop mov or cmpsl jne icebp pushf jle aas aad mov push mov (bad) or out out and pop bound mov adc lea (bad) mov sub sub sahf ja or ja jne push movsb ret out add sbb mov sti push sarb cmp dec lods addr16 jo sbb lret jmp xor add and pop enter push push gs fnsave mulb int push dec in xor push addl jo (bad) mov add fiaddl lcall das loope mov call test xor das sbb mov loop jp iret cmp loop stos (bad) pop or in icebp lods hlt xor mov je and cli test push popa cs lea adc lods mov outsl push fcmove sbb push xor xlat sub push mov pop push test fldt push ret loope aas xchg cwtd push push mov imul jp bound imulb add das add addl mov add fildl loop call sub je cwtl mov pop pop in das adc inc loope pop test call icebp lret out pop xor sbb and mov adc je fs popa fisubrl mov or fwait mov xlat jne das aad adc mov data16 cwtl xchg jmp push sarl loope inc mov or out sub out dec test lds (bad) xor xor (bad) jno cmpsl in sahf out les imul mov std push push mov (bad) ret (bad) mov mov iret sub cmp push loopne push xchg imul fs sub adc dec push icebp in jno dec outsl add lods push shrb or in inc lret adc push mov push fstl fstps loop loopne inc add fiaddl (bad) xchg xchg imul jb out leave loopne fbld jle pushf adc and (bad) cmc push mov jo outsl test inc sbb (bad) jcxz cmp and pusha pop pop or mov add add ss pop push jle inc popa sub imul loope sbb xor pop jns pusha test test or add pop mov inc rcl mov and lods lods in mov pop xchg ret adc icebp in sbb das dec dec js leave leave fnstcw jb aas cld (bad) mov push mov (bad) loop bound pop or lret fcom mov (bad) fucomip sub ret js pop shrl test add adcl bound jb sbb es inc xchg ds insb into adc fs loop push (bad) pop cmp in sub jmp sarl push adc xchg pop sbbl push sub leave inc js xchg cmpsl repnz into adc dec aad adc (bad) insb pusha aas jae mov pushf enter adc pop arpl dec mov inc jno jns add rcll or stc pop jg test xor push adc cwtl sbb addr16 dec into push out inc dec shll dec cmp jo orb xlat fnstsw cmp lret insl push cld mov mov inc pop mov ss ja,pn add mov push xor in push lods cwtl jae adc into pushf jmp jmp add push dec dec stos pop outsb mov mov xchg pop lret mov orl sbb mov dec pop (bad) enter xor dec fs aas rcrb sub xor inc fsubrs xor lea adc mov (bad) xor mov stc dec stos sub inc dec push (bad) pop inc lret and cs test outsb push sub js inc mov or out pop jle (bad) stc cld sub push adc lcall mov pop or fstps icebp xor adc ja mov xchg in les xchg aam xor dec mov mov cltd dec mov cmp push in and or frstor push flds jns cmp or lret xchg xor gs rclb (bad) mov pop pop pop xlat mov sbb lcall jo out das arpl push and cmpsl dec xchg jno cltd cmp popf pop movsb jl aas aam xchg ret cs out xor in (bad) enter (bad) or fcmove ss xor movsb add mov dec mov cltd std int mov or or sbb pop inc or ss sahf jl cmp sub int3 mov dec pop (bad) mov dec call in mov sbb in mov decl loope xor and je pusha sub jle pop lods imul fmull mov call jb lds inc adc mov inc mov test jo jne push inc jnp in mov je mov cmp out outsb mov out test cmp xlat mov and aaa les lds int outsb adc inc dec mov mov aad ljmp cmp mov sbb push cmp es sbb inc leave arpl xchg adc addr16 mov dec in mov pop jp out pop negb (bad) icebp loope ret imul cltd (bad) lock jecxz xchg ret fs xchg outsl xchg dec (bad) (bad) icebp jg (bad) int3 rorl pop pop testb fist dec mov push cmp (bad) jmp or sbb stos (bad) sbb jmp js jp sbb xchg xor xor clc std int3 sbb jmp or sub mov or jnp or pop pop lret lret mov addb inc adc xor mov adc add jb fidivrl jle push je clc fnstcw xchg add jl jbe sbb and cmp sbb scas fwait das jmp lret add fsubr add mov sub dec and lods pop mov aas jae cmp xor mov push push jno ss stos or dec mov mov push rolb xchg imulb fisttpll repnz add nop das sub jl mov push xor pop cmp cmpsl fstl mov dec mov mov das inc inc mov (bad) lret imul mov leave into and insb sbb dec hlt mov cld or jnp pushf enter and jge imul cmpsb mov ret or lods xchg push movsb ret and loop push (bad) mov lea add mov mov roll xchg in out lods stos add xchg mov iret fisubr aaa inc cmp sbbb xor jl ret push jno pusha xor lods or push jno aas fcompl fs mov arpl jb push fbstp test push notl in call rclb std push mov push fadd push dec (bad) xchg mov adc sub jb sbb fistl inc aas adc adc sbb pushf or aad clc inc mov jg addr16 inc jmp push aaa sbbb mov movsl jmp shrl imulb or loope pop sbb out mov add sub fnstcw aas lret sti xor ja and mov dec cmp gs lea flds das (bad) jne or pop xchg loopne xchg xor or stos xor push xor sub and push jb push pop cmp sbbb testl jmp mov cmp mov lcall mov mov insl push sbb cwtl push sub add cld cli mov ret iret dec xor mov push jno lret pop notb push adc (bad) (bad) mov lret mov dec imul scas mov popa dec xchg cltd cwtl pop (bad) push mov std jno mov pop pop push sbb inc dec push mov imul int adc ds push cmp ucomiss jl jp sbb inc ret pop data16 mov xor cmpb out enter jl mov out cmp pop lea icebp and fildl pop out out jp jge sbb mov lea inc dec mov add outsb push imull mov jl jns pushf sub push ret mov aam and cmc les sub std cmp jne,pt fcoms inc ljmp push loopne push add dec out sub daa push xchg insl push icebp jb cmp jmp xor dec stc xorl stc sbb iret and sbb out add out pop adc ja add loopne inc add cmp sub aad cmp movsb shrb aam cwtl in jle sti mov popa data16 or xlat (bad) mov mov or mov nop stc xchg scas out vsubps lcall and jmp inc out mov xor push adc mov mov cli jge xchg mov fcomps fldcw push mov hlt (bad) and add es mov dec addr16 je push fdivrs pop aam pop pop dec nop mov mov gs add mov cmc fstpt pushf sti stc rolb adc or repz test dec xor sub repnz xchg inc xchg clc mov add dec sbb cmpsb jmp cltd add and jmp sub push pop nop test or cmpsb dec call adc mov mov mov sidtl pop inc (bad) mov adc mov call psrad push je in or or mov loope push dec mov stc adc mov push rcrl push iret and push xor nop daa and sbb mov jl shl fcmovb pop mov scas (bad) cld out int3 test (bad) sar and aad lcall fidivr clc adc das rol dec adc and pop popa push xorl jae mov (bad) inc lret int inc lahf jle mov dec mov push inc or scas popf cmp add mov mov repnz (bad) stc cmpl mov xchg adc jge mov push mov inc popf (bad) js pop test movsb mov loopne jecxz neg outsl sbb movsb cltd lds lahf and orw test cltd int stos scas sub sub addr16 fwait outsl in pop sub popa pop and adc repnz push out inc sub push inc add jnp stc push push stos or sahf mov leave cmpsl jne and mov sub outsb mov cmp mov xor pop push jns popa jbe jecxz jmp jp mov fsubrs mov (bad) pop nop inc fimul out xchg aad inc fsub aam push arpl adc adc mov jl cmp sti sbb inc or stos repz cmc lock loopne sbb push jne xchg dec aas test (bad) addr16 dec cmp dec sahf inc lds xor adc add and mov dec bound xor sub xor dec jp pop outsb lret pop sub ret lods lahf or pop enter stc sub iret popa hlt aad aad lea mov mov imul mov dec arpl outsb pushf cmp push lret xchg js in (bad) or xor hlt daa icebp test mov mov arpl aaa mov xchg or add cmc xchg out clc or jmp push xorl nop jp outsb notb insb loope adcb push icebp movsb les xor mov cs sub mov mov add push dec mov adc push lret nop pop imul jg adc xchg fistl inc int jecxz out aaa push stos lds mov xchg jecxz repz jne mov adc add inc mov inc pop out outsb jg jmp ljmp or inc xchg mov xchg movsl jmp ret sbb jne cmp mov and addps pop test and imul (bad) push in xchg xchg cmovl neg mov adc xor inc and out and push bound mov sbb inc mov jecxz (bad) jle mov jne hlt imul pushf mov push adc or test mov (bad) xor cmc in xchg mov mov push mov push mov lcall sub ds ss repz mov test fdivrl int or pop push in push adc push int3 dec cmp aaa mov sti (bad) xor jg scas mov push lods xor jmp xchg inc pushf cmp fs (bad) mov mov add jp je inc arpl sbb insl push out add sar lods mov test inc data16 cmp outsb and jbe xchg lods pop sti adc outsb sub adc adc divl ret add es inc or (bad) mov out call cmpsl in clc hlt stc xor pop and lret adc (bad) (bad) cli xor jno mov in mov mov mov dec jl outsl in (bad) pop inc adc and shr ret gs xor jecxz sbb and popa and mov pop ds cmpsb inc cmp int3 xchg js pop in jmp mov push jae xor out (bad) sub sbb mulps movsl sbb inc (bad) outsb push stos mov xchg (bad) adc adc adc fwait leave pop cmc test inc jge in ret hlt loop sti data16 or mov and adc jmp ret aas jns adc mov and cmp push arpl or xor xchg xchg xor bnd inc inc mov stc lock and loopne fadd (bad) jmp imul imulb sub bound pushl xchg inc lea push mov pop (bad) ja ljmp (bad) jb test dec (bad) mov lahf jmp outsb ret inc cmp lahf push adc sub push jmp mov or cmp push std push ret cmp mov jp jb arpl call and fbstp ds arpl imul es fadds arpl (bad) jp rorl stos clc pop mov mov fisttpl dec je test (bad) out sub pushf (bad) mov cmp repnz xchg cltd sbb inc xchg cmpl adc daa adc arpl mov movsb jnp xor hlt cmp xchg cs pusha xlat out scas adc lret and add cwtl imul jmp xchg stos cmpsb xor sar rcll dec and or repz jo push hlt xchg sbb pop rorl stos mov jecxz mov test jne cmc iret les incb jne sbb mov pop jecxz push sbb pop sar inc cmpl mov adc loopnew cmp cmp sbb jnp out mov insb sbb pop add aam es pop add and push xorl (bad) fs jno nop popa cmpsl or cmp out ljmp outsb or test sub es inc imul orl shlb dec mov pop cltd mov sbb hlt adc adc xor inc mov xchg enter sti clc inc in or adc push mov sar dec dec ljmp pop (bad) daa dec insb jo rcl imul mov dec xor sbbl (bad) xor mov mov inc icebp mov or push in and add insb cwtl inc or pop jbe shrb mov clc cmovb sbb xchg aas (bad) and cmpl int3 cli cmp push pop aas inc pop and inc sahf and hlt inc mov sub (bad) or fisttp jo ljmp mov dec test in (bad) dec cltd dec pusha jbe jnp dec jmp (bad) insl inc pushf repnz adc out push xchg and fisub lret sbb loopne sbb pop and test leave insl cld shll dec cmp mov (bad) imul push jns add fstps inc insb dec dec sti dec into xor sub inc cmp movsl mov jg cltd (bad) dec insl (bad) test lods xchg mov xchg dec cmp ljmp xchg fwait or pop sub in mov insb outsb mov xchg xchg fcomi pop frstor or mov and lcall fstp arpl ret dec clc cmovs (bad) icebp inc push sbb ljmp in and mov lods cmp xchg mov int3 iret inc push push clc cli out xchg rcll mov dec pop xchg mov push fwait icebp jg push shll dec loopne test jns roll xchg (bad) cmp cmp lock testb daa dec jp push sbb loope inc cmp sar icebp test shrb int shrl rcrl not mov data16 out xchg pop dec loope fild jae mov xchg hlt clc (bad) aam in movsb jg movl pop mov movsb aas and (bad) mov cmc lret sub adc aad jo fsubr fdivr mov jecxz or decl dec sbb jne lock lds sahf cld int3 sub (bad) mov je loopne sub and sahf jno and (bad) insb mov aad shll (bad) mov shrl cmc es mov and clc mov mov mov jg fnsave ret dec sbb cmp out jbe or out sub mov or pop adc push xchg jg mov icebp xor ljmp push sbb sub cmc or mov ficomp rcl or (bad) push cmp cmpsl pop push mov mov ds loope in or int test mov and aas aaa xchg jns sub out inc mov sbb and into xor pushf fnsave sbb (bad) lcall pop xor in in cld mov jge loop add in xor xchg jge pop icebp push fisubl into xchg outsl clc add jb dec xchg hlt scas test mov dec fidiv lds stc ret test mov inc out sbb (bad) std jl movsl jp mov mov out aaa (bad) and adc aas inc xchg jmp and add sahf mov test test jno fisubrl dec jbe adc lret jne mov add jnp mov adc lods or mov mov movsb xchg in aaa js sarb mov pop dec push mov les push jle mov push jle fdivr (bad) mov outsl pop adc mov pop call jbe fmull sub aam sbb xor repz sbb in adc xor pop test imul inc cwtl imulb loop sub sbb mov ja or int pop xchg out lcall data16 mov outsb lret clc dec mov stc jbe insb ljmp lret in jae dec xchg shrb sbb xchg ret push js adc shrl inc cmp xchg lock lcall mov cmp sbb addr16 das std or fsubl xchg int3 xorl mov jl dec outsb (bad) sahf sti movsl test ss cmp in clc imul push sub fidivrl pop shrb aaa mov orb mov fxam and les pop fisttpl pop movb je repnz dec mov mov rcll js jge sub push repnz xor (bad) jg push pop jmp pop lea dec jno imul out lods jmp mov xchg cmp paddusw xchg push (bad) mov out jle outsl cmp pop call cmp sub jg outsb xchg jle pop or leave mov mull push (bad) pop int3 and xchg movups imul dec fidivrl sbb js mov pop test (bad) dec xchg adc mov inc dec push loop in adc mov mov (bad) xor adc les inc jae ret cwtl push (bad) jno xchg push pop or mov es aaa mov dec xor xchg add call adc mov pop and add xchg fwait jge cli xor xlat mov ret mov ss jno ret push leave sub into in mov into or outsl paddsw in int3 mov mov mov cmpsl js mov (bad) inc pop movsl cmpl hlt xchg bound movsb cmp xchg jbe pop test cmp out idivl (bad) icebp in fwait lock or xor stos jo arpl mov nop mov mov pop cmp fdivr cmp cmp insb adc sub std or js cmp cmp dec cmp mov pop fwait lds and pusha inc das xchg ds cmp xchg test mov in jp dec dec popf jle xorl insb out test push dec out mov inc insl enter lock insl xor sbb cmp enter fidivr sbb cmp push adc clc scas pop mov stos sti or xchg pop (bad) fyl2x mov int xor lret les cmovae mov pop pop mov aam push or pusha mov pop sub dec lahf xor hlt pop mov sub fcmovnu dec test mov mov test inc aad xchg sub outsb jmp ss cmp jmp pop in in (bad) mov aad js and inc pop aas movb push mov aas imul mov lea cmc imul cmpsl int (bad) scas ficom inc xor mov int3 sbb popf test ror dec loop into or dec leave in imul icebp push scas not addb repz push paddw jg enter (bad) cmp paddq mov rcrb std cs push dec dec dec test cmp jns mov roll subl out cltd leave lret mov adc dec adc clc das cmc pop sbb jo xchg hlt mov cmp scas iret add cmovl dec leave push fsubl cli jl repz insl lahf xchg inc fdivr cltd mov fildl shrl pop ja mov or mov inc or mov pop inc mov mov into cmp jo mov aaa push xchg add mov inc mov mov inc push sub and push sahf dec jmp xchg mov xchg cmp or cmp jg loop jg push mov mov sub stos lock mov push xchg push ja mov mov pop cmpsb jle mov push mov std mov cmp and (bad) jecxz inc popa test jp out add aas mov (bad) scas xor cmp (bad) aaa pop ficoml (bad) adc and imul push dec leave cmpsl xchg (bad) aaa dec push fs dec mov pop xor leave mov xor add (bad) loopne lret sbb stc push hlt cmc xchg lret pop sahf pop call rolb cwtl or inc sbb cmp (bad) aam sbb imulb pop enter mov and repz dec mov subb cmp (bad) loop xchg test push jns cmpsl and jl (bad) sbb data16 ljmp (bad) in mov mov pop imul test in test jecxz mov xor or loop cmp mov cmp pop cld in js rolb jl cli call fdivr (bad) add and pop hlt push insb fwait setge rcrb mov or std (bad) adc sub pop out test jb (bad) int vandpd lods push add das sbb cmpl js and push test pop push push lahf xor add mov mov sub pop je loop mov fiadd in cwtl lcall std mov and or out mov adc movsl std arpl gs jbe int ret xchg ficom shl or pop out push imul add pushf (bad) mov xchg cmp xor fldenv nop gs adc pop adc jge out push xor into rorb daa icebp out out mov lahf mov (bad) fcompl lahf dec and cmp (bad) orl and lcall sahf adc jbe vpcmpgtd mov mov lods jl inc add (bad) popf in test insl imul and int3 sar notl lods in (bad) jbe push and jge add sbb xchg arpl mov and jne nop les dec pop fsts push push dec pop lcall cmp dec push lods or mov in mov cli gs cmp in in das lods pop fs mov fisubr mov pop cmp jmp cmp call mov jge arpl (bad) (bad) lods pop xchg mov imul push imul dec pushfw push xor push stos or int sub (bad) mov popf xchg imul mov and fdivs mov mov mov repz into dec out movsl idiv add stc mov push mov (bad) mov add push in hlt addr16 das (bad) mov in insl ja sbb jb (bad) jae aas int push xchg out es xor mulb rorl inc fiadd xor mov dec into ljmp lods xchg roll popa pop cmpsl (bad) ret fstl mov (bad) stc push shrb neg cwtl pop call ljmp xchg mov leave mov and jns lock repnz sub mov xor jns mov addl dec inc jne addr16 cmpsl pop dec pushf add push (bad) mov sub add cmp sub mov insl clc or out test ljmp imul fsubl jnp,pn dec lea test xchg dec sahf jp push cmp jg cmpsl push and aam pushf dec loop inc stos xchg or jmp inc lahf stos test test jae jae dec push test jl jg lea xchg push sbb outsb sbb test std push scas inc clc repnz out mov or (bad) (bad) out fs stos std cmp repz in inc and pop push loopne cmpsb dec push ljmp insb scas cmp popf pop dec es int outsb inc scas mov aam mov ficom cmp lds loop test pop dec push shr ja daa movsb cmpsb in mov cmp and jnp cmp add dec add les test mov mov es dec dec or fimul shll fsubr enter inc xlat push fsubrl (bad) out xchg xchg sbb rolb icebp inc sarl push loopne mov cwtl loopne es aas push or jno dec call xchg cmp jno addr16 push mov push shll int3 dec call int3 sub dec hlt imul outsb icebp pusha fadds fdivrl push js fs xchg loopne xchg xorl or fwait pop fiadd inc jae scas mov pop rcr adc into ja repz pop in jo add push jns xchg add xor sbb add pop scas mov cwtl imul jb stc pop out imul jmp ss sti icebp xlat add push sub aaa lahf fnstenv bound or xchg in jns (bad) sti add jb cmpsb imul fstpl xor jecxz stc jnp dec movswl aas pop jo subb dec pusha (bad) push addr16 pop loop icebp or (bad) in outsl (bad) mov fwait aas xlat or pop adc stos repz push (bad) jne pop jp ss cld in fstp pop sub icebp ss sarl aas xor scas dec hlt adc loopne lds out sub mov aas insl dec mov int3 in add stos daa push ljmp and or push rol mov (bad) and xchg outsl push scas mulb cmpsb jecxz xchg hlt mov cs and cltd push incb lcall jge lret push cmp adc pop ljmp mov xor test cmpsb cmp add jge mov cmp push lahf add jb cmpsl fs inc sub cmp fisttpll sti ljmp cltd jne test cltd dec pop test (bad) jae lods rcr adc out and imul icebp mov cld jmp out cmp mov test ss jmp lods repnz lcall mov mov jno inc xchg xor (bad) jg push lret sbbl push pusha imul jle adc in push in mov faddp loope pop stos (bad) mov xchg adc push xchg imul (bad) in dec sbb pop leave xchg mov aas out and out push adcb nop iret sbb pop fisubl sbb cmp pop lea adc fsubl and and call fucom repz jbe outsl dec in inc lds adc add js push pop mov cmpsb xor js or dec lea lcall sbb idivl enter xchg add outsl xor insl in and shrl shlb sub push stos xchg sub out inc xor push mov les cli lock jne bound inc dec stc sbb fcmovbe (bad) xor add out or add in and in (bad) pop jnp das mov xchg fisubr mov pop enter xor pop iret fimul jno mov mov jns add cmp pop insb inc xor adc gs into fidivl push scas pushf xlat movsl in push imul sub mov rclb ss test out pop and xlat in sarb dec pop jl int sub pop mov dec out mov or imul push xor jns nop sub iret (bad) adc cli fstpl (bad) (bad) dec adc xchg jle dec scas outsl dec jecxz mov xlat xor (bad) scas fdivp sbb pushf lods mov xor xchg pop pushf mov (bad) add enter fsubp lcall std xchg call and cmp sub lahf or (bad) ja pushf aad push loop pushf dec pop dec jae cwtl and push cwtl fidivl xchg ftst push sbb std xor loopne popf les inc int3 je pushf inc icebp cwtl sbb fcmovnbe movsb int3 cli fs sub aad mov and lods movsb add push sub lea out mov cmp pusha addr16 push pop jno nop dec in sub sub mov sub pop ret inc dec loope and jne sbb dec (bad) xor dec imul and mov cmp add cli add inc inc mov and fcompl cli add shlb aas fwait dec fmull jmp lcall mov sti lcall into xor jecxz leave xor xchg push (bad) mov arpl aam aas or mov dec shrl pop fsubs push sbb or inc in add aam cmp jg lcall shrb mov sbb in xchg imul cmpsb jg push push mov insb cmc mov pushf in jmp fs push cmp or pop mov pop fwait sbb jns push lcall cld movl daa mov mov or into es sbb cmc xor dec xchg in fildll add aaa cld or mov inc (bad) jmp gs mov scas popl xlat lcall mov jp and insl pop jmp jg das popa test outsl das sti and sub mov jb in xor mov fldl std stos mov lcall into xchg (bad) jne lahf bound or movsb in scas mov cmp mov sub fistp repz mov dec je nop ljmp mov in (bad) jne add test jge aas pop imul (bad) pop fcoms fidiv icebp loope mov aaa dec add jle fs pop inc mov pop pop add cmp pop push in mov mov mov sub cmp ret shrb popf lret pop add pop or mov adc (bad) loop inc inc sbb sub in sub andl sbb cmpsb into xchg les and push fdivrl xchg xlat aam adc or jg arpl lods js pusha pop les inc pop (bad) cvtpi2ps jnp mov cmc ret xchg pop sahf repz mov pop xchg stos int3 inc cmp js test add cmpsb das cwtl push clc cmp lret shld adc ret lock cli cmpsl mov lret (bad) push rcrl (bad) divb and int3 in inc add std pop push aaa incb insb push fsts mov sbb imulb lcall (bad) mov jmp add dec aad mov es in loop lret (bad) lds fimull cmp ljmp xchg lcall dec cmpsb add lods sub bnd cmpsb mov mov add push arpl aam cmp aad inc icebp push mov lret or dec push xlat lahf push fadds dec fidiv cs jne inc jno mov je repz shlb pop push cmpb adc inc rcrl dec dec inc sub outsb inc lods jns std cmp cwtl fimull (bad) xor mov xabort xchg jmp sub inc imulb mov (bad) xor fldl xchg or test sbb addr16 loopne stos arpl xchg cltd les pop rcrl jecxz mov jno outsl pop leave add mov les ja cmpsl iret dec fs incb popl rorb xchg xchg add stos lea enter jb inc (bad) loopne or test inc inc loop jg ret cmpsl sbb outsl mov (bad) out in jge leave daa test mov in dec or mov (bad) movsb out jle mov daa outsl pop sbb jno iret daa test aam fstps pop inc lods mov jne dec outsb les and (bad) dec (bad) test xor dec (bad) daa cld aas dec imul inc push cli xor xor out sbbb push mov adc pop sub xor lods (bad) jae pop xchg pop sub add dec lods mov dec mov repnz popl mov int test mov stc fmul sti inc jp out lock loope mov cmp int enter jg mov lock sarl jno arpl adc fnstsw mov out sub mov in sahf xor pushf or lcall ss dec jae scas pop mov in mov das xor sub dec pop test xor pushf mov scas addr16 jne cmp or dec xor in sub andl ret nop and sub loopne inc pop jns push mov dec out mul add jns dec scas and imul aam dec popa fbstp cmp into std push ds add decl insl pop lock xchg (bad) testb lods push push (bad) je jecxz mov pop (bad) mov or mov insl sub mov cmp pop sarl daa fsubl mov ficomp and xchg xchg pop shrl loopne push cs xchg lea xchg lods cmp imul mov push inc and mov dec pop push inc in mov es inc cltd cs sarb pop outsb adc (bad) fwait and pusha je je sbb fsubrl xchg subl imul arpl jle movswl mov lock mov je push fwait cmc pop push test dec xor leave rcrb mov mov cmpsl lahf lcall add rolb push pop arpl inc jmp adcl mov cmpsb pop sub xlat push (bad) jae (bad) xor movsb add xor (bad) es xor xchg shlb arpl in jecxz arpl insb popa jp push and loop jle add js lret (bad) mov inc dec cmp (bad) jbe int cwtl popa jmp aam sbb nop test lds cmp add (bad) jge jp fnstenv cmp push jmp adc rclb fstp mov sahf (bad) lret pop xor stos aam insl iret addr16 sub add test (bad) sub test cmc sahf add lret (bad) push cld add cmp je adc (bad) xor add mov and mov out cmpsb sbb jae mov adcb pop xchg inc mov (bad) xchg mov mov imul xchg fisubr lds or pop cmc mov aaa pop bound scas push or push jge (bad) ss or or mov dec fisttpl mov popf sahf jge cmp push je jbe push sbb dec jg xor fsub push adc js sarl dec jge jl jnp clc dec xor loopne xor pop mov mov ret int jecxz bound test scas xchg mov or jne lret pop mov (bad) hlt (bad) out popf dec and loopne mov and mov xor push (bad) jp push mov pop sub mov fbstp sbb or test fldl loopne dec lret inc rorl iret push orl mov stos out mov or lds push imul push fcomp and cmp sub lcall xchg mov hlt inc test add jo push mov mov fwait hlt mov cld xor js outsl popf cmp pop repnz mov sub insl shrb pop jae adc test mov in cmp dec add ss jnp cmp mov xchg or loope push jmp mov xchg mov jmp mov cmpsb (bad) insl cwtl xchg jne loop and lock lock inc lock mov nop ficompl lods sbb outsb xchg fildll sub ds (bad) xchg sbb mov xor lret ret ret dec int add jge,pn ficom mov push rclb (bad) stos dec xchg adc or xlat xor cwtl fdivrl lea in outsl sub cmp xchg fldl inc stos xor aam adc push cmp push mov (bad) add add (bad) jle (bad) pop or or jnp leave mov dec push push jecxz adc gs mov cmc mov int3 or lock pop sahf pushf andb popf fidivrl stc push cmpl xor mov mov imul and pop jmp lods das and imul mov push xor ljmp cmp sbb call jns (bad) je frstor cmp test sahf fs dec loop or xor (bad) incb push insb dec into jno adc xor lret and test jp subl sbb ja enter gs je mov out adc mov cmpsb pop pusha (bad) repnz arpl rcrl arpl add cmp lret ret inc xor and sub adc sub ss out (bad) sub call cmpsl lock pushf (bad) icebp and xchg out sbb mov mov in cmpsl repnz bound and mov mov cmp or sbb loopne sbb inc outsl push jbe push cltd sti enter adc inc mov xchg push jmp pop lds das fwait (bad) js dec fs pop cld sbb add add fstl mov (bad) xchg mov insl fs or cmp inc xchg loope je out mov xchg stc (bad) sbb movb insl mov popa lea dec repz stos push aas add pop sub (bad) mov aam ljmp cmp add mov sarl (bad) test and mov cmpxchg inc adc fs enter mov ja inc scas lret push add sbb das sub inc add enter adc fucomi std push test push mov aaa jo iret test arpl int3 fwait mov test call aad outsl std mov fimull xor pop scas lret out push or fisub pop js inc movb cs cmp shl jae enter push sub mov stos mov hlt fwait lret jnp mov mov jo insl mov sti jmp add repz cmp pop (bad) jns lret or clc pusha fisttpl mov dec adc or gs pushf (bad) pusha add adc push inc pop add add in or xchg push dec (bad) cmp inc pop or cmp mov adc xacquire inc inc mov sbb idivl xor (bad) lods cmp test lahf aas imul or mov test pusha pusha lds inc adc dec mov pop jge push jae cmp inc loope test cmpsb movsl dec xchg outsb pusha lock ss push xchg ljmp sub dec push xorb xlat sbb scas pop jge repnz and cld test fs fwait pop into fidivr mov inc imulb frstor jns dec or push sbb sub jmp shr rol inc test dec les adc or mov or or push subl dec push fcmovnb mov jno lods pop xchg aam or jo xorl lock rolb movsl mov aad ljmp inc nop cmp hlt gs fcoml lcall or insl loopne imul or jae push and or mov jns outsl repz int3 or add test mov xchg add push mov insl out jg test test js outsb cmp mov push push int3 add (bad) iret dec fisttpl neg jecxz out dec es leave out test jno xor sub mov push fbstp pushf mov ficompl fimul adc js loop mov jecxz mov pop (bad) test cli sbb or pop and add cmp inc pushf lea mov push cmpsb sub dec rorl loop xchg mov stos add xchg (bad) xlat js dec sub pop lods mov mov jo jge pop or cmp dec daa push sahf xchg in cmpl lods aam sbb aas rorl push fistl sub sub sahf jns mov xor aas jno mov in movsb mov repnz adc xor xor mov fcoms sub test push std mov adc rep push jl int dec movnti mov and xchg or loopne and es mov fs sub inc mov xor jp xor jp popa popa leave aad push push cmpsb push gs jecxz push add sub sbbb dec nop sbb pop int and popa dec jae pop fs clc xchg adc cmp inc cmpsb mov je or cmp rorb add push cmp das and xchg push sub notb dec xor loope and mov mov push ja scas pop and das cmp stos in push loope sahf mov xchg (bad) outsb int addl cmc popa xlat dec addr16 xorb cwtl mov pop jge inc stos rcrb dec pop or (bad) dec pop mov stc dec scas push aam push lret inc sbb pusha pop jae adc cld cmpsb loopne mov and mov sahf mov int dec xor scas sbb imul repnz adc (bad) push cmpsb scas inc mov mov mov ljmp mov and in xchg test in jecxz push mov jnp js sbb in popl lea inc xchg ret pop jge or out scas ja push pop test jnp xor cld sbb fldenv and popf mov loope add cmp not mov add test lret aaa inc pop xor fsubrs mov inc ret int3 (bad) (bad) dec fwait mov mov pop inc lods in imul lcall push sub lcall lds rorb jo add stos jbe data16 mov je xor scas pop nop inc fisubl outsl jecxz add inc cmpsl pop inc pop xor lods (bad) dec loopne sahf mov dec add fwait jp jg rclb jns sub sub das lods movsl mov cltd outsl in or les ja push mov aam repz lods and pop pop jae cmp clc pop mov pop adc ret jae pop outsl push std or mov and ds in (bad) cmp mov fildll sub mov icebp test out sub add fisubl (bad) popa popa xchg ljmp das mov dec popa testl mov icebp in (bad) ret mov nop bound jnp dec in push (bad) dec insb sahf xchg lods popf sbb dec pop xchg sbb push pop pop and or pop nop inc adc mov inc pop mov mov push lock iret xorl je mov std popf (bad) pop mov ljmp xor jecxz xchg xchg cmc xchg xor out sbb mov lea dec test das and jl popa sub sbb mov lea add mov add iret and dec out xor xor and cmp jne xor imul sub rcr or pop adc fs sbbb (bad) xchg push jmp jle sbb inc mov movsb pop jp cmp xor jle xchg mov cltd lods xor ror movsb jne loop pop loop push push pop sub jnp inc mov adc mov sahf and xchg lods (bad) rolb cwtl (bad) cmp aam add pop inc pop cli movsl cmp or mov sub xchg push in mov popa sti mov jbe,pn pop insb mov jnp out loope inc into xchg bound iret inc mov (bad) (bad) adc insb gs mov or sbb fsts sub ss cmp mov sbb lret test sbb inc or xor sub jnp add xchg arpl (bad) cwtl xchg imulb (bad) ret mov lods out push push push aaa cmp or inc mov xor add aad (bad) pusha and add sub sbb inc (bad) decl xchg in jp ljmp xorl mov add xchg adc pop (bad) fs dec jne pop in push jns insb sub xchg faddl in mov pop imul pop push sbb pop std jno dec test pusha sub mov pop imul cmp xor comiss ficomp add mov popa rclb xchg xor shr clc into or rcrl mov and jb inc inc add mov inc sbb fisubrl hlt ja lahf cwtl add push jo gs dec dec and mov push pop dec lock gs nop push sub flds icebp stos jmp imul roll aaa mov adc rol sbb ror pop mov loope sbb push fsts data16 mov hlt push lahf repz push in lret dec stos mov rolb xor pop adc popl fistp aam xchg leave cltd adc and lods adc (bad) cmp inc loopne cmpsl repz in push pop out inc in in jbe sub mov roll (bad) sti shrb out pusha add (bad) inc (bad) push rcll pushf in and sbb pop xchg mov dec outsb insb ja xchg je imul jnp mov sub lret xor fisubl add sub in divb sbb xchg pop adc gs cmp pop les dec sbb add jl ja cmp andl mov lods roll pop in rol js movsl lods notl and xchg sbb iret push test sub out mov aas (bad) pop xchg sti add test addr16 ret add subb rclb add dec xchg pop popf fisttp (bad) dec ficomp mov add shlb xor data16 pop repz pop mov sbb jmp mov cwtl xor mov ret repz dec jmp push scas inc xor int3 mov or into push lcall ret imul std adc push jp pop xlat cli cmp fs mov mov mov cld and cmpsl movsb mov outsb scas xlat sbb push gs cmp mov mov aas icebp mov push adc sub imul mov and pushf (bad) xor inc dec (bad) arpl xchg jmp arpl mov lahf push negb xor jg add dec call popf ljmp ret adc jno or stos and sub imul outsb push pushf lret mov mov int shll loopne push imul mov mov in cmc sub cltd and sbb cmp scas inc xchg inc popf xor jne dec and xchg fild in addr16 fstpl sub fnsave pop iret lock outsb push push xorl popf mov cmpsl das xchg pop fs sub sub sti sbbl inc cmp adc xor mov and cmp (bad) and scas clc sbb push lcall xchg mov fnclex mov inc sub inc dec pop mov out ljmp (bad) dec mov out rcl and xchg cmp stos pop ds fwait xchg xchg and mov xchg imulb fisubl (bad) cli mov add sub dec xchg push pop inc add out or into ret cmp push out sub and mov arpl mov add (bad) jno cs es out xlat inc call (bad) push int bound xchg popf pop add lahf fimul lret clc pop jl and cmp rcll in add push test mov push addr16 xor dec jbe out (bad) imul inc xchg ror mov pop push jnp and mov push fcompl pop pop ljmp (bad) jne mov mov imul nop ret out icebp lea loope push insb int3 mov aam sub push adc xchg pop jnp movsb scas push rorl (bad) jl add aaa dec ja lods mov mov sbb stos push inc push inc sbb out (bad) test sbb (bad) push out jg enter xchg sbbb add adc imull pop xchg mov stos aas sbb frstor das mov js out mov in add jb cmpl add or fnstenv pusha push push lahf pushf std addr16 xchg and push mov push jns mov daa sti xlat (bad) mov lods loope jl mov cmpl mov jns push push cmp push movsb push dec hlt adc cwtl mov mov jb push mov jno mov stos (bad) inc inc inc jmp jns mov fsubr ds icebp mov mov sarb (bad) adc rcrb push (bad) xchg cli cld and jb mov inc dec push xchg mov cs movsl out xor in mov ret xor mov std xor faddl fucomp mov dec aas sbb mov stos xchg sub clc ret mov rcrl push aaa sub ljmp pop (bad) and push imul into (bad) je jg sbb gs push inc dec in dec ret push xchg mov dec push jg sub xchg imul mov adc out xchg leave and mul inc loop add in sub ret mov test inc mov inc (bad) pop push mov pusha int jg add popf ficompl add (bad) ljmp mov addr16 mov sub xchg frstor mov cmp ja iret cli insb or int3 negl fiaddl aad test arpl jo imul mov jnp out or (bad) (bad) push ljmp sbb adc movl dec cmpsb mov or sarl mov sbb push push mov rcr cmp cmpsb jbe adc in pop mov call test xchg add cmp pop xor mov jae stc loope,pn fwait outsl or mov leave test outsl xor std lcall xchg lahf (bad) xchg daa loope call shl or movb out mov sbb push adc sub add repz enter aam push enter imul dec fisttpll mov mov cwtl fwait or out xlat or and dec mov imul ret xor push fldenv lahf cli ds xor cmove sbb adc sub cmp outsl sti bound aam jne stos adc addr16 sub xor mov xlat sahf test pop insb (bad) or popf out mov mov mov js les (bad) cmp stos stc addr16 add fisttpll (bad) jle mov mov ficoml fcmovu lret (bad) mov popf loop mov jp push cmp and sbb andl jno xor jp and xchg and sbb pop xor std pop fdivl mov pop xchg push int dec adc xchg mov jbe inc dec pop adc test sub jne cmc std rclb cmpsl cmpl scas or in inc sub xchg and sub (bad) mov cmc pop adc adc pop or outsl ds push pop hlt lcall fs ds mov mov ret cmp mov cmp call or sbb inc (bad) pop nop daa addr16 sub xchg sbb rclb dec mov rolb xor test cmpsl and movhps ficom xchg push enter fldenv dec push mov pop sbb jl inc sub iret les icebp add mov pop dec sbb mov (bad) add cmp mov stos popa sub or lahf push sar mov lcall cmp jmp es lea loop lret stos test jae in push stos ja push jb inc push add ret mov dec push xor bound ret xchg into rep iret jle mov sub insl push jbe ss sub xor xor mov xchg mov cld lret jmp inc push adc out cli (bad) push outsb lret sbb fisub mov scas inc dec popf clc add stc xchg (bad) cmc out xchg jecxz ljmp mov mov jle popf mov lret dec lods fistpl mov nop mov ret lret sub test pusha jns (bad) jne stos ret pop push dec cmp cmpb jmp enter mov adc das into pop and inc add addr16 jo fld pop popf out adc sti cmp loopne adc jbe inc dec xor sub aad mov fstl pop idivl addr16 jmp xor outsl pop cmpsb add inc insl popf mov call (bad) mov fmulp xchg and (bad) notb mov sub repnz push and sahf loop xchg into jo mov (bad) adc insl add mov fcmovnbe out addr16 jmp sahf fxch lret cmpsl sbb adc pop cmc testb stos popa adc stos sbb adc mov push in adc add lods movsb jns xlat jb aaa mov adc into scas in push and sarl sub or xchg mov int or mov mov mov mov lcall test (bad) jmp xchg into mov dec popa stc xchg jmp mov mov xchg inc sub aaa cltd pushf push and xor shll adc repnz jno outsb into les and xchg sbb shrl inc andl xor scas bound lea ret pushf adc rol out in (bad) arpl insl inc fisttp mov push frstor jns xchg loop xchg mov lcall and and rcrl mov or dec inc movsl mov add arpl mov sub ja mov add jle xor cli enter imul in aad insb stos mov pop pmaxsw xchg fadds aas jb idivl mov outsl cmp pusha pop cmc mov and dec sahf push test jo mov cmc jl mov mov or repnz xchg jo rorb xchg sbb cmc out jbe pop mov push imul adc repz jp xor movsb dec push add addr16 fbstp or dec mov mov cwtl popf inc stos insb fsubl mov dec push mov xchg outsl push and lods mov mov or add fimul ja es pop arpl (bad) or xchg pusha jle xchg cs push mov out mov je test jnp pop hlt lea ja mov xchg inc pop jmp aad inc mov mov lret hlt jo pop shrl nop cmp inc jnp sub stos mov ret loope and pop push mov mov in jp popf dec mov or inc roll (bad) pop test fild in mov fistpll aaa mov mov in jno call sti in push sub mov lahf insb dec xchg inc mov jle add fs push nop xor (bad) dec insl mov xchg mov stos sbb push pushf jnp xchg inc adc pop loope outsl imul pop insl ror lahf push fisub in pop push fstl lret xorl push xchg jo sti pop (bad) out xor push lods add pop cmp insl add repnz lock in in pop into mov xor stos iret cmp je jno fsub das and mov mov ja (bad) jo dec push sar mov ret stos lods test jae arpl mov cmpsb idivl jbe mov jbe jmp rclb mov xchg insb pop sti in mov sbb lahf xchg leave roll call cld jmp pusha fwait xlat mov sub (bad) push or xlat xchg mov mov mov mov sub das pop sub sbb pop in adc cmpsb sbbl stc repnz fstp and jbe test popf cli icebp sub das cs cmpsl clc push pop jno jp enter pop lret out or out pop push sti cmpl push jmp sarb mov inc pusha xor push add rol aaa jmp pop fistpl pop or jmp inc sarb push lea les lods stc mov test jb cltd addl insb xor int sbb push xchg jae gs pusha xchg jne sub das pop jecxz roll and rorb dec les fistpll imul and insl daa fwait jne jne ret addr16 cmp push es stc jo dec push add scas bound push cmc sahf or adc mov add push add dec sub fstpl leave lret xchg rol sub add pop and push popa ljmp out sahf jb das dec mov pushf jg icebp push push jmp lock or clc cltd addr16 adc ret mov sub dec push fwait mov icebp sub xchg cli adc push jmp (bad) mov loop cmp xor mov jne in pop decb xchg mov into dec into test xor cmp loopne jbe pusha lcall pop inc mov and cwtl and and rorb push into in (bad) in cmp mov jp xchg xorb and std (bad) popf mov mov daa getsec pop scas rclb or into fcmovb sti out shr mov mov or push cmp lds popf xchg orb cld int3 jmp pop sarb les sub out das xor insl xchg mov add (bad) pusha mov and adc dec jne nop mov rcl push lahf mov lds rolb push (bad) sbb jl pop fsubl mov fbstp adc stos fbld cltd inc push sub pop cld lods lea rolb and sbb sbb cli ljmp dec xchg cmp dec (bad) push jg test push push sub bnd adc push icebp or lcall or jge adc add mov int mov cs jg xchg mov clc inc pop sub ljmp daa add sbbb pop xor imul into lret fdivl fisttp mov mov out ret gs cmp loopne (bad) and addr16 xchg lods jge mov andb jo sub pop cmc lds mov test movb sbb adc jl fmuls add into mul mov inc sbb xchg push pop adc enter inc xchg cmp repz leave aaa inc cmp mov ret mov lea inc jno stos jo out popa adc add (bad) scas mov std ljmp cmp xor dec push incl addr16 stos inc add faddl ret stos dec jecxz inc daa insl xor lea pop adc cmp dec inc jae sbb push int (bad) aaa or aad cmp adc and (bad) push cmpsb inc cmp stc cli mov arpl repnz pop jg,pn popf jbe xchg insb pushf (bad) iret and inc jl pop loop mov addr16 arpl mov mov or cwtl push cmp and repnz icebp (bad) repz loope fs je lcall ret les repz add cmp (bad) repnz xchg fmull or adc cmovae (bad) xor jp jne mov fs add adc sbb insl mov (bad) sub cltd dec and xchg jl out outsl sbb sahf jnp test add rcrb mov fist cmp dec lods cmp fistp mov (bad) xor xor jl inc out in fs mov pop xor sbb fsts inc test (bad) jp pop loope into push and rclb push into je mov dec pusha (bad) lret pop mov ja and test fstps aad jno adc xchg mov pop popf sbb ret test cmp inc daa sbb or cmpsb (bad) sub or jp push jnp mov xchg test fnstsw and cmp mov jmp xchg fs xchg xchg fiaddl mov fnstenv mov pop sti loope xchg aaa inc outsb push movsb pop in jl repz outsl adc incl xor std jnp dec add in mov test and mov test mov xchg ds add push sbb sbb scas pop jmp push mov cli sbb in jg fadds popa xchg pop jge dec ljmp jbe stc leave inc jg jecxz rcl out xchg ds out xchg cltd inc adc inc bound adc (bad) call int3 jnp (bad) sbb cli aam loope ja inc add mov jle push mov cmp test jno xchg cwtl ja mov and cmp out push in adc sbb fcoms inc (bad) mov cmp and fwait xchg ret jp std dec or lcall in sbb add jmp jge mov gs xor dec lds dec mov mov or std sbb lcall push das loope jno popf lret jmp cmp pop (bad) pop adc sub push inc cmp mov jmp out movsl mov call inc cli fucomp xchg ja xor mov inc loope shrl mov push pop cwtl clc push add push lcall xor fiadd pop mov cs scas in fild loope out sahf push mov frstor fmull sub scas fdivs adc push je jns or add pop fidivrl jnp insl repnz mov (bad) cmp ror sub lods lahf out mov inc pop test loope pop sti pusha sub ljmp push pop jo push jns (bad) hlt mov test and and subl (bad) lea dec outsb test xchg xchg (bad) pushf pop cmp sar jmp cwtl mov jecxz adc add leave ljmp xor lods push mov cmp add gs cmpsl xchg dec rclb inc (bad) into andl fldenv cmp xchg push or xor cmp into push pop je test mov std out movsl dec (bad) jbe movsb mov mov mov cwtl xchg pop out shrl xor xor lcall aaa push enter loop nop adc inc adc data16 scas cld cwtl jmp or bound ljmp insl (bad) fidivrl inc data16 push lahf enter xor inc aad sbb out push andl mov mov lock jle inc sub je cmc xchg sbb inc xlat mov fsubs lds lods inc jbe es xor cmpsb out jl js or dec clc hlt xchg mov fstps cmpsb lret pop or int movsb lds in mov sti mov jae jp dec fcompl sub sbb jb testl lock adc push dec lahf pop xor mov negl out mov lods popa cmp xor std pop xor sub (bad) push xor sbb arpl imul inc in sbb clts lahf mov xor stc add and sti or cmp test or add aad jp in fldl push lahf les push sub arpl loopne fld shr pop ret mov mov jg jecxz stc mov mov mov (bad) call popf outsb fcmovbe mov add xchg pop lret pusha dec push addr16 je lods or dec adc or ljmp push fucomp and into popf fwait mov popa sub setb outsb arpl aad divb jne add sar or add lcall les ljmp call rcr adc std movsb push adc xchg mov scas test dec cmp insl xchg mov (bad) int pop and mov in pop faddl idiv popf ja push loope jge orb stos adc dec xchg mov icebp push sti stos inc sbb jp dec or std xchg sti (bad) xor mov out mov aad in pop rolb mov xchg cld sbb mov inc daa xchg cwtl jp ljmp fs insl outsb ja mov lcall bound inc loop loope (bad) fmull pop mov mov sbb fildll pop fwait int shrb scas dec test repz (bad) push bound xchg lds cmp push cmc adc xchg (bad) sub or and js dec hlt pop fimul rcrl pop push into jne stos cli data16 push dec xchg xchg and popa sbb push inc sub (bad) icebp inc std nop adc repz movsb popa sbb xor cld xchg cmp mov lret insl bound cmp movsb in adc fdivrs adc cmp xor inc xchg outsb mov xchg popl fsubrs test dec dec inc jne pushl jle das push push jno (bad) imulb jecxz pop sbb xor mov or ljmp and sbbl stc rcrl pop jbe add sti (bad) mov push mov push push fstl ja jae sub push add ret das sub push out popl in cmpsb cmp clc or movsl pusha mov into call lds leave jo or aad das cld xchg mov xor jb inc lods xchg push fnop inc stos repnz pop or out addb pushf mov adc dec ficoml test scas inc sbb mov mov mov sbb push test mov jno inc push cmp jne xor mov push data16 mov bound lods int jl andl (bad) outsb fs fs loope inc (bad) mov push out aam adc out cmp xchg pop das and aaa lret rcl pop add push clc jbe sbbl fistp or xor nop pop and stc cli aaa mov std (bad) scas xor push fsubr inc adc lds pushf inc insl ret mov push dec fstps and adc adc inc ds push inc jmp push pop mov jb cmpsl (bad) rorb jne xchg lock jecxz adc dec lret or popa loopne das ficom cltd mov mov gs sbb push sbb mov and jno dec cwtl ret clc faddl pop fstl out cli xor lods inc xor mov popf aad (bad) lret mov xor fistpll mov or mov or jno push xchg outsb dec lret iret inc pop call add fincstp pop jnp jge sub dec push pop in mov test ret loope pop push je sub enter mov or jl sahf sahf bound dec aam xchg std ds or test or xchg das inc aad fldcw gs dec jno dec xor jg jl sbb mov sarl repnz in jae push (bad) or mov push dec xor pop lods iret outsb xor cmp pop inc sub cmp push push cmp dec std inc out xchg lahf cmp jo int jle lock push ss inc loopne sub pushf lcall scas ja lret mov xor bound insl inc cmc aaa and pop test fnstcw sbb pop dec sbb insb movsb jae,pt mov addb xchg push sbb sbb pusha sbb jbe dec enter (bad) pop inc add pop add mov xchg fstpl aaa add and cmp (bad) sti iret mov ret loope pop sbb lcall mov mov (bad) out xchg mov sub mov push and cmc bound mov dec push pusha leave nop and mov insl xchg sub sub dec fdivr dec xchg and push cmp into mov sub lods inc jge fistpll and out inc mov loope aam (bad) jge repz scas andb popf pop pop fstl aas cmc sub or xor out (bad) pop imul jnp cmp cmp mov jnp sub lret inc dec xchg pop sub jb mov outsl lahf sub iret push (bad) push loope push cwtl push rorl and mov pop stos in (bad) xor sbb in rcr test inc xor cltd ficom dec jbe stos adc mov add pop sub sbb flds dec test test stc sbb (bad) xor scas pop mov dec pop je enter mov xchg gs stc repz movsl pushf fdivp and popf clc lods cmp fsubr cmpsl pop inc stos call dec lea pop fimull add adc mov clc std dec jbe jae push sub pop push mov jp out outsb mov adc cwtl push xor and xor cmp mov fadd andb stc mov mov fs test push movsl (bad) sub jo adc inc lods add push xchg out cmp or or mov les push sbb inc mov push pcmpeqb add addl xchg dec (bad) mov cltd (bad) pop stos insb sub xor (bad) lock nop addl fstpl in loope ss out aaa cwtl shr mov ss call rcrb and adc outsb test fimull mov push jbe test sub cmc cmp bound sbb push mov push inc pop popa and clc cmp int loopne gs cmpsb js int3 loope dec jmp (bad) jg lret push mov xchg sarb scas test (bad) fsubs fs or sbb (bad) mul shrl dec and negl pop and pusha mov not or xchg dec add jb gs pmulhw xchg aas adc jnp dec sub stos test outsl (bad) jo pop icebp pop in decl cmp sbb int3 jmp rolb ss popf shrl pop (bad) cmc or and sbb lds xor mov xor ret mov add push mov and and insl xchg mov call push (bad) shrb dec iret gs scas sub inc in pop mov mov mov fiaddl jge jnp or xchg es movsl (bad) xor xor adc mov (bad) add xor inc xchg push jne ds (bad) in add scas add inc adc cmp bound test dec jbe mov xor sub test mov popf sbb in (bad) xchg fdivrl jmp lret add cmp xor scas jmp imul rolb or popf (bad) ret sti movsl aaa mov hlt (bad) ss insl adc jbe ss fnstenv pop push pop pop add stos mov loopne pusha aam stos cli xchg xchg in pop mov fst xor xor out xlat mov jo add xchg jecxz mov mov jo and sbb loop orb and pop inc sti mov pop fstpl xor ret adc push pop notb out frstor dec movzwl ljmp pop sub repz push pop mov pop pop gs sbb jne enter sbb adc pushf xor ljmp push fsubrp sbb (bad) (bad) push cmp sbb push sub mov rorl scas icebp adc aad out ret fnstenv arpl sti ja outsb stc inc loopne jo (bad) enter jae adc (bad) mov sti (bad) es fdivrs popa pushf lods or daa push cmp lock pusha in movsb call int3 xchg fsubr adc xchg mov add mov jl mov in cmp loopne mov cmpsb inc xchg sub inc ror mov test xchg daa loop xchg jns sbb sbb xchg or ret scas das sub orl xchg adc adc xor sbb (bad) jge ljmp rclb shrl cmp sti ficomp jae sbb iret into xchg scas push shrl mov aas cmp lods insl insb loop dec test sbb bound pop dec lret add popf push lret std hlt jmp fs test sub es fucomp popf jne add gs imul mov dec push dec loop pop scas mov icebp mov gs sbb int3 cld or out out insl xor mov fsubrs cmp sbb or fs stos imul or sbb mov jb adc mov inc sub nop insb xor dec pop mov test sbb xor sti cs inc pop dec pop add aad mov mov in cmc jl cld (bad) adc cmp mov pop rcrl dec mov jo add push or arpl pop cltd inc or int3 (bad) add sbb in jae sbb test lds into andb dec mov sub adc pop push jne in aaa mov or pop jl dec jnp xchg fsubr enter fsubrs std imul jbe mov mov fidivl aam stos and mov mov movsb je sbb push inc xchg dec repnz inc mov out shlb ds (bad) mov dec mov or ja insb popf push imul movl push jnp dec or fisubr mov into lods cmp mov inc jg mov adc sub adc or std pop out rcr cmpsb or sbb jnp rolb cmp cltd mov test test std in cmp mov imul in dec lahf dec out jne lock in jg xchg cmc cmp shrl add or lods pop in mov sub js jo imul mov mov dec ret sti imul leave jmp sbb aad mov test inc adc cmpl out jbe imul xor lock inc xor arpl lcall push and cltd and lcall dec js and test icebp and jo in enter cmp pop daa xchg add pop inc (bad) aas repnz mov sbb lahf (bad) fidivl leave call iret pop pop rcrb cmp cmp sub xor (bad) daa icebp mov mov dec int3 cmp fcomp mov (bad) xor lods push fimull icebp push xor sbb add ret pop mov push xchg rorl or loop out movsl fbld sub mov aas fwait in mov mov xchg (bad) mov sub add push mov xor loop pop int imul dec sbb xchg std dec insl gs ret aas dec inc jmp leave dec push mov dec call jmp mov inc stc pushf mov jmp test andl jge fsub or dec int loopne test pop rcl mov test and loop push imul outsl in out sbb mov ljmp lret inc rorl popa pop loop pop aas xchg ficoml xor in out (bad) and lahf pop mov jbe mov mov and jne dec (bad) divl bound fadd cmpsl rorb push stos loop sti repnz sti xchg aaa fdivrs notl dec lret in xor arpl jbe (bad) push nop in adc pop dec jns jle ljmp mov pop xchg push cmp jmp stos cmpsb add xor adc jecxz mov pop inc out arpl push jl adc sbb loope mov (bad) insb adc lods mov mov ljmp (bad) cmp sub pop add and cmpl insl mov pop push jecxz inc incl adc mov cmp mov xchg out popa add (bad) ds push jle sbb and scas cwtl stos mov push sbb mov cmp adc jl sahf fwait clc fstl dec or lcall inc push jae lock adc xor pop int mov stos idivl pop cmp mov jb aam mov std call mov enter divb xor mov adc push dec dec gs test push xchg adc es sbb movsl cmp cli popl orl or testb or and insb sbb inc cmp lahf push or mov cltd arpl and daa dec scas pushf and idiv fdivr lcall sub (bad) leave push cmp mov cld pop stos and mov imul add pusha mov or inc add mov push ljmp bound (bad) xor inc cwtl dec fldenv sbb ljmp lahf jb (bad) imul inc fildl clc popa loop lea aam (bad) (bad) cmp add pop and popa lret or inc je xchg and sarl jp pushf scas lods jns mov jge mov inc and test ss lcall dec stos mov xor repz mov in xchg out dec mov sti sti xor cmp mov xor stos cli pop and (bad) cmp mov add and inc das out mov mov dec adc pop in gs imul sbb pop int3 addr16 loop pop sbb pusha je adc sub mov jo (bad) hlt nop call aas int (bad) dec mov fs dec sarb jbe or enter (bad) inc scas mov add ja cmpsb (bad) cmp je scas adc scas mov cmp sbb pop decl cmp adc add push xchg adc call js int jns mov das dec or dec clc subl adc mov sub mov movsb mov jo insl push in clc xor pop addr16 std leave pushf jmp jns test (bad) stos cmp or sahf dec loope push fidivl pop adc loopne (bad) mov out xchg cmpsl in xchg mov gs pop and in insl mov lea or icebp loope cmp push mov loop iret sbb loopne nop add sarl xorl dec pop sbb push lcall sub aam mov popa dec mov pop fmul and mov lods add pop push push push push loope mov jbe adc mov sub pop jne sub ficomp xor xlat inc xor cltd cmp popf cmpsb leave enter outsl cld mov shrb xchg sbb mov (bad) mov bound outsl arpl or rcr jg imul ja loop jo iret orl cmp (bad) cmpsl movb inc lahf or fucom mov neg push xchg xor pop stc adc dec sub xor jae sub lods sub aaa cmpl xor dec pop ljmp (bad) inc dec inc fnstcw cmpsl dec cmpsb rorb xchg insb inc data16 (bad) adc pminsw ficompl rolb xchg or lret mov test add xor icebp insb mov je lahf rorb daa jne scas mov sub push hlt inc xchg int xor mov or or pop dec push sub bound cmc sub push stc pushl insb xchg popf jb ja daa (bad) fldl jno fimul test mov int3 out pop sbb loopne push in and xlat loopne cmp mov nop xor sbb xchg pop and sti pop xchg aad xchg mov enter lea xor fdivrs add jbe add cmp (bad) (bad) hlt hlt inc push cs (bad) or xlat cld inc flds int mov add int3 pop inc inc add jmp pop test inc or fwait repnz fisttpl xchg mov and loope bound test add inc fistpl sbb fadds sub xchg jge xchg flds sub and push insb pop jnp cmpsb addr16 repz arpl in and les sub inc dec (bad) movsl ds lods pop (bad) or je mov mov (bad) adc stc fwait adc adc xor stos jae ss xchg popf xorl hlt jecxz push out mov mov push push xor jmp xchg in gs or sbb adc scas mulb (bad) hlt xor sbb sbb aas mov and pop in jne xchg push push ror jnp push pop or mov cmpsb jl sbb mov fildll add push jnp push sahf lret jl in and inc and test rolb dec lahf sbb and xchg push pop repnz xor lret daa jp lods xor mov jle bound dec popf dec push or nop push mov adc push fldenv mov pushl inc pop push popf add fidiv push (bad) ss outsb repz or leave mov iret or loope loopne popf add xchg add push dec pop cwtl into scas pop in push push rcrl sbb outsb test dec imul insl mov (bad) cmp mov push jns or jecxz push test sbb int3 lahf add movsl jns xchg adc mov or nop adc pop (bad) xor push inc xlat add dec int3 mov je or pop mov mov cmp scas inc push mov ss aas mov fisubr cs fstpl mov popa or and cmpsb xor stos out mov lods cmp xor sub es les xor in iret inc lcall inc jne pop test adc xor and pop cmp or jo add xchg ret lret (bad) push fisubr das sub clc fdivs mov rcl mov lret lods or add ljmp mov cmp jl adc xor jo pushf js ss adc imull insl inc or inc mov movsl pop je sub jbe repnz ret clc rcrl mov (bad) insl adc jns std mov loop in movsl or push sar cmp cmpsb (bad) cs jb test adc fwait mov (bad) mov or (bad) mov mov fidivrl dec in insb mov fistp (bad) sbb xor dec inc push (bad) imul fsubl test jp and ss das shr test icebp dec add lds jne push or fisttp (bad) mov xor and push std scas push cmp dec sub add inc jmp push sub notb movsl mov cmp dec mov addr16 inc cmp lcall test std leave frstor stos sahf and and test fisubl jbe inc jge fcmovnb cmp mov daa cwtl lods pop aam mov loope (bad) in mov sub jne rclb sub adc imul pushf jo xor aad ds lods jp int sbb imul xchg inc push int in bound cmp mov rcll cwtl xchg ror loop lahf nop fdiv xchg fldl repz jl lahf jl test mov mov ret ficoml aam aaa xchg xlat push adc push test mov sbb mov pop sbb icebp or mov lds push (bad) jg dec dec roll loop xchg jne fnsetpm(287 frstpm(287 repnz dec test mov stos orl loopne icebp mov loopne stc repnz sarl sbb inc push (bad) out test mov xlat jmp bound dec (bad) sub enter scas lcall mov loope int3 xchg pop add xchg mov notb cmp call cmc and xor pop ss mov ss loope test xor and add repnz (bad) data16 adc adc lret mov (bad) fwait mov call push mov pop mov xchg fdiv jno sbb imul dec lret jmp stos movsl dec xor in jecxz loop pop je shlb fwait jnp test or out lods out gs in xchg scas jl mov mov push mov or xchg and fistp and xchg pop inc push movsb cld fs xchg cmp mov xchg or pushf (bad) xchg pushf ret cmp andl js xchg cmp mov push ss mov adc jmp aad dec movsb sbb xor outsb push pop cli add cltd adc xor test jnp adc out push push in jle add and (bad) xchg mov dec (bad) loopne popl ljmp clc inc mov cwtl xchg ljmp sub push int cwtl pusha push nop loop jb fldt call scas mov xchg int inc repnz stc rclb pop mov (bad) push cmp imul aas arpl dec push add ljmp hlt jp dec cmp testb mov or fstpl dec out add test enter dec and and sar stos scas or pop in (bad) hlt ror push xchg dec mov pop (bad) jb mov lahf mov in aas jmp add movsl cli leave mov lcall fsubp scas dec jne lds inc jg sub lods test clc xchg outsb in sbb sbb pop mov daa out or sbb xchg mov or rolb call inc xor xchg ror and std mov push int xchg sub mov push mov pop jae or (bad) xor in xor test xchg xchg jmp cmp cwtl (bad) aaa dec sarb pop rcr icebp ret iret jp cmp clc jge add xchg test jo push inc push mov push pop dec pop push dec in push xchg pop and cltd jne cmp lods gs loop pusha sti es mov fwait cmpsb (bad) aam mov add mov xchg pop pop jmp sahf stos mov inc out scas jg jmp (bad) scas fisubrl mov and icebp and fistpll test pop (bad) outsl lea aad jmp test cltd mov ss jno cmp call cmp mov cmc jno and mov dec cmp out pop aaa jno pop xor popa cli mov mov cmp xchg std or mov dec jbe cmp cwtl (bad) mov outsl mov mov fnsave jecxz ss mov fimul cmc pushf sub imul pop pop dec jns jbe fildl xchg lss mov test or out es fnstcw sbb push je (bad) jecxz stos fidivl jge jle data16 xor out ljmp xlat dec xchg sbb jmp add aaa out cmc enter fstps ret iret mov test bound dec pop popa clc mov cmp mov mov dec movsl popf aam pop jp stos adc pop lret jge pop inc add push cmp cld aam gs mov xor notb or xchg ss stos es sbb pop mov or lret repnz out and xor das lahf xchg jbe inc jnp aas add icebp les inc add pop xchg pop mov call scas inc jbe,pn jno mov lahf jae lret xor popw inc dec dec stc mov push cmc lods fdivr flds cltd push adc mov cmpsb repz inc int xor stc leave cli and or mov pop pop movsl cmp test imul icebp xchg sbb pop jge mov xor mov movsb mov push jae xchg ffree les inc add jns add pop fs call (bad) push les leave repz xor (bad) mov dec jns adc sahf or pusha sub mov movsl rolb mov mov jmp inc (bad) out dec dec push jae jno or push je aam daa xchg daa xorl push mov xchg xchg sarb lahf adc in cmp xchg push lret xchg (bad) xor ss ficom push data16 sub inc jbe lds mov pop lcall jecxz jge int3 cltd ret lds cmp lea test and sub addr16 lret cmp mov jmp or ja adcl mov adc popa enter (bad) rorl in popf loop dec sti sub sbb scas xlat lcall mov insl sub mov ret lods into test xor mov cli xchg and fnsave adc ljmp nop popf adc xchg (bad) mov js pop inc iret test rorl xor (bad) pop pop rcll push out push jecxz cmp dec (bad) mov cwtl push popf add dec test icebp cli push mov ret or popa lahf dec ret cmp pop jecxz dec and lahf inc dec out (bad) lahf push and mov push sub mov (bad) adc jae inc enter jno mov aaa cmp movsl lret out dec add pop pop and outsb enter cmp and lods fwait dec aaa xchg fwait push push mov stos mov insb sub cwtl sub and out cmc out cmp xor dec inc mov jno (bad) std pop (bad) or cmp aam pop in adc jp test nop adc (bad) and or mov mov or imul inc mov aaa (bad) iret ficompl test cmc scas jg scas add cmp cmc popa test sarb add cmp push rcrl push ret or xor xchg ljmp pop jo outsb mov cmpsb mov mov lcall cli loop inc aaa fs vmread enter fsubs dec xor inc add test add lahf jns inc lea sbb int imul add test or popa and cmp mov cld jno and out add pop ds in call mov or xor sarb leave push adc push lods cs jp enter push adc cs (bad) lahf loopne sti outsl idivl aas sub rcll clc add sbb mov scas sbb lods pop sub jmp das daa sahf les and mov popa push or or mull test out mov les enter aad stos (bad) out mov js mov dec xor adc pop ret add shll cmpsl out (bad) jae cltd add aam clc pop stos xor or xor out inc dec xor pop sbb mov jbe mov cmp cltd xor cli mov mov dec into pop cwtl ret and sbb cmp pop mov cwtl pop pop pop mov push mov inc lcall sbb mov sbb or xor push and mov test fcmovbe jg rcrb (bad) int dec ret cwtl ret mov xchg xor mov xlat mov mov pop scas sarl sub sbb aas decl inc (bad) mov adc pop mov and mov mov nop sahf addr16 cmc cmp in jle xor lds rcl out cmpsl les mov aas mov cmovo sti jle sbb adc out xchg cmpsb call (bad) pop and cmp std in call (bad) (bad) cmc push subl arpl push mov sub cmp pop enter mov mov sub insb leave cltd pop mov lret sbb daa (bad) and pop movsb jg data16 and lahf int3 test outsl rcr jecxz jmp adc cs mov push xor les das out xchg iret jp (bad) xchg leave pop inc jmp push mov divb (bad) out pop sbb lret lahf mov mov push pop hlt adc shrb xlat jb xchg push cld data16 out mov ljmp daa insb fildl xchg jge sbb (bad) jae push sti sbb dec xor loop pop add rolb fdivrs and inc lods lret add xor push jnp pop dec sbb into fnstcw or jb pop test movl push cld mov jbe cmpl lds mov mov fcmovnbe jne mov mov cmp mov std call (bad) stos nop jne jl or lcall add push cmp lock xor mov add sub jne fildll out loopne testb mov mov sbb out mov xchg call mov mov mov push inc outsb mov and sub sti out jne stos mov fisttpl insl jne hlt pop scas push cmp jnp pop cmp stos stos xchg sbb sbb aam lds je mov dec inc sub iretw sub ja je or jmp imul lock or fcmovne mov mov sti mov hlt lahf lock xor jecxz push fiaddl rcrb push push fldl (bad) pop (bad) pop mov and je jo cmp cmp stos (bad) imul cmp and dec int3 xchg xchg fcomip mov test xchg cs and (bad) adc in dec mov sub push jecxz test cmp or pop add insl lret add sti data16 or inc mov push sub inc cmc cmp pop sub pop jmp pop fisttpll push mov jno,pt (bad) loope mov daa cmpl sbb jp roll outsl ficomp push mov (bad) jns mov and xor mov nop fist xchg pop int in dec jae,pt push test js mov stos stos mov inc mov dec jmp icebp (bad) ss es inc les mov or push (bad) xchg test sub mov enter jb sti push (bad) push xlat push dec ljmp jecxz mov movsl arpl out imul je dec mov jmp jl push (bad) adc cld jp rcll movsb cld rcll jg dec mov out mov rcl sub mov int xchg push fdivrs je adc add mov (bad) or pop xchg into fdivl mov ret cmp (bad) xor mov out adc jns scas lret insl sub outsl lcall mov adc dec icebp xor daa ja inc out cmc add in sub int3 dec insb sub mov rorl push (bad) cld push (bad) icebp inc sbb push pop sti insb scas sbb cmp add out pop in push jg stc jae push jb in mov mov mov mov cmpl and and stos and cmp dec pop xlat in bound mov inc daa aaa in loop testb dec insl shll mov lods adc sbb xchg dec mov xchg sub scas mov test repnz and xchg xorl jbe inc mov sbb pushf out arpl fild adc aas test (bad) lret push or (bad) dec add ja push adc add adc stos cmp sub dec (bad) push iret xchg enter sub fcmovne add lds mov inc mov push mov aad out sbb xchg xor out jmp xchg mov aas adc aad idivb sti fstpl and inc mov mov mov int3 xor das dec mov ret inc popf hlt dec outsb pushf mov mov adc cmp mov movlps shr lds mov push mov sub cmp cli mov movsl mov mov jecxz lret popa push fmul daa hlt xchg pop pop ljmp sti mov push (bad) (bad) or or adc iret inc popw js xor fwait add mov push or cld in iret jp dec and adc mov popf jecxz leave ret inc daa enter les insb pop (bad) mov movsl cltd and rcrl inc xor mov outsl jne outsb aad aam call sahf pop repz jae daa dec jecxz stos sub les sarb ss cltd dec pcmpeqb in jp popa popa mov stc lret sbb dec xchg cltd lea iret fisubr test cmp inc mov xchg in pop mov inc loopne mov nop adc cmpsb jo lds ds cmpsb pop sub popf mov mov lods and clc bound rorb or ret mov and sub or xor mov repz idivb mov dec icebp jno adc icebp jmp fcmovnu add in test divl mov adc mov aaa (bad) mov sub pop dec add aam jnp out arpl push add mov imul or add call movsl repnz pushf pop aaa mov ljmp gs pusha push in sub sub xor cmp xchg shlb pushf cmp (bad) in mov cmpsl adc les inc push mov (bad) xor int push jg outsl mov push mov repz testl push or stc pop fmull mov dec popa inc push pushf dec insb fiadd arpl (bad) mov aad xor xor and stc int3 int cld loopne out insl mov loopne mov push icebp cmpsl mov jno push xor cmp adc jo test mov and insb mov mov mov mov gs dec movsb sahf lock sub in and out jns xor dec or mov gs test jne adc ds inc push in outsl dec das movsl inc clc mov data16 and push cld inc jb insl rcrl add mov mov cmpsb mov ja pop fdivrl fcomps in sbb pop lcall cmp dec inc sub sub push xor pop arpl int3 cmc push or daa cmp cmp outsb mov orl and or or (bad) sub mov push xlat mov test mov out scas outsb fsubrs inc mov push imul inc and ljmp (bad) lods gs or ljmp int3 fadds nop or xor xor sbb divb icebp repnz xor pop pop out add add sub bswap sbb jo mov movsl mov mov dec loop mov mov xchg cltd ljmp popf stos jns mov ja pusha outsl pop mov sub mov lods repz add mov push cmp xchg test in adc aas (bad) push in inc aas push test push pop add stc ja adc in fisub jg call outsl pusha loopne xor insb fimull fimull incl and pop xor cmp sub jecxz popw shrb ljmp push enter aam and add (bad) fcmovbe pop test or repnz bnd push jae unpckhps xchg xchg xchg sub mov insb imul ja neg loopne cmpsl repz fsubl add sbb rcll inc pop push fisubrl lea mov mov loop jns test addr16 addr16 js fstl leave fcomip je in movsl jb cwtd addr16 (bad) shrl in mov cbtw lods shrl rcr fldt and mov xor (bad) jno pop clc fstpt repnz scas icebp lods mov pop mov cwtl repz or (bad) mov in mov add cmpsl insl aaa jns enter or mov enter mov repz loop cmp mov out je xor cwtl iret or cli jne inc movsb xchg (bad) xor mov lea mov outsb jnp stos xor jo test sbb ljmp sub mov in or (bad) mov sub mov mov fwait mov fildl mov in aas mov outsb dec jmp out add xchg sahf int xchg mov adc or lcall pop cmpsl loope (bad) stos or arpl sti xor mov test xlat adc pop mov push cmp movsl mov (bad) cmpl aam in inc out cmp cltd sbb lods loop ret xchg cmp cmp pop fs xor fisttp loopne sti pop loop xlat mov pop mov fdivrs std fwait test in lock sub pop popf adc lret sti repz lock popa cmp loope jg mov popa sub dec test mov test jmp (bad) aad push or pop negl lret jl jp or cmp rcll ds arpl inc in jnp lods js push out and cmp stos lret adc lods ds jae mov lcall jb test or sbb cli xchg gs (bad) jge xchg mov data16 aad xchg popa aam jle mov xor inc (bad) icebp jb pop adc xor xor push jmp mov sbb negb sub mov sbb imul loop dec sub iret inc je out bswap and stos (bad) or add inc andb mov xor mov (bad) jns xor test inc (bad) (bad) scas imul jge mov js roll es (bad) jae inc in sbbl aam pop pusha pusha clc push sub add repnz aas mov sbb jns cli fmuls int in mov push jb shl mov xchg (bad) xor insb stc and cmpsl ds and add nop pop nop jb mov repz jmp fldcw cld loop iret ljmp lret fbstp out mov push push cmp ds in push in pop jle test sbb leave bnd nop mov mov call in (bad) dec add test pop cmpsl xchg lea das popa lock fiaddl scas loopne xor aam xchg add imul adc iret fwait cs dec cmpsl cwtl stc jne sarb int pusha test daa aam ret mov in repnz xchg sub sub mov push popa aam ret jecxz xchg int mov pop cltd test popa cli sub mov ret inc mov push mov test cld in mov inc add inc ss mov adc sahf mov insb pop les fcomp das and dec cmpsl push in jmp mov jno cwtl xchg sti shrb fstpl flds cmp mov dec pusha adc fdivl dec push mov mov jb out cli cmp idivb mov cmp cmpsb or rcrl xchg pop jecxz (bad) cli out daa (bad) jns arpl (bad) call cmpb iret cs jg sti scas add (bad) mov mov lret mov lods repz sbb aad insl fisttpl jnp jo (bad) out xor push sbb pop sub xor xchg and jl (bad) jge ret ss jbe mov mov test and mov inc rolb pop pop sti inc lock jb mov in pop jae (bad) repnz in loope (bad) jmp jge lcall stos or pop mov cmp not pushf dec push mov sub std push pusha imul rcr inc pop out sbb mov addr16 in mov fs sbb pop andl jb ja lret (bad) cli jecxz lods aaa rclb adc inc cmpsb adc lcall outsb sbb push mov shrb push scas pop fs call ljmp mov sbb pop xlat jg data16 inc and jle out inc divb sub inc or or lea clc (bad) rep std js mov shll fdivrl xchg popf (bad) xor push repnz test ss pop inc (bad) xor xor scas or sbb adc ret mov int inc and mov pusha xor xchg mov imul fistp jle add cld mov fnop mov pop xor dec mov xchg clc pop les pop adc test loope xor lods add add mov fnstsw cli (bad) mov or lock lret jb cmp inc and lods bnd sahf and clc imul xor bound scas xor inc adc jne pop pushf xchg iret repnz test jae add dec out mov je push pop fnstenv jp into ds je cmpsl bound (bad) addr16 nop lahf mov pop outsl mov arpl jae jbe ret fstl mov and or dec add loop cmp (bad) sub or push xlat cld push sub fbld imul cmp fiaddl aam inc in pop push imul (bad) imul mov inc sbb aaa mov int cmp jne scas in fistl cld jl icebp insb in mov or loope (bad) cmp add ja sbb adc xor icebp (bad) adc fxtract jecxz and sub popa or arpl xchg pop mov mov inc shrb or jp insb out dec insb jecxz sbb xor scas rclb roll sbb sbb or xchg and pop xor lret dec sbb inc popf add push push into lea jmp wrmsr outsb push pop std adc imul cwtl xor lahf mov adcl push ja aaa fwait jp jmp test pop sub (bad) in ljmp lock in pop clc stos (bad) out dec mov bound rorl mov mov adc ss mov pop and jp mov push cmpsb fbstp push xlat sub insb inc out insb fstps ja mov sti cmpsl xor aam mov mov push pop jae mov sbb aad (bad) (bad) fisubr dec mov lods jl pop daa pop scas dec add test fbld pop jns outsl out daa iret push mov fcmovb push dec xor adc lcall js into push out push mov cmpsl cmp push leave ror sbb xor test stos cmp jp stos xor hlt mov mov push ds mov iret icebp mov bound rol xchg jge repnz cmp xor inc adc sub ds sbb and lods pop (bad) gs jns ljmp pop adc (bad) jmp rcrl jle fcomps pusha jg mov (bad) movsb out (bad) adc inc test fcmovbe (bad) loope jnp out (bad) lret stos jns es push loope std mov lods das in xchg leave int3 mov xchg jecxz loopne sub add push mov in or bound inc fnstenv (bad) push daa sahf aas icebp xor cld jg or lds push push and sub (bad) iret ljmp xor shlb jb (bad) dec mov mov mov les xchg cmp or pop push in adc push inc sbb cmp jmp push xchg add nop cmpsb sub xor into xchg popa inc sub scas ret in pop stc es lods rorl in arpl sbb mov jmp (bad) int3 lret divb sub mov fcomps lcall into and mov outsl sbb jbe pop adc clc (bad) push lods cmp push lea (bad) pop sub push popf ja icebp xor stc fcompl cmp adc push pop dec inc xchg fs xchg divl pop pop mov sbb xchg (bad) cmp sahf cmp (bad) pop lods xlat add popf mov cmpsl cmc adc jne lahf mov jecxz stos mov bound hlt insl (bad) xor push pop cld add jge arpl lods add push movsl je push cmp sub sbb pop cs scas fistpl mov jae in (bad) adc push sbb push mov adc popa (bad) jno dec icebp je pop movsb adc mov icebp ss push and mov notb push dec adcb xchg out mov fucomi jns push les test mov notl inc xlat jo repnz jg clc movsb aaa sub and call (bad) cs jb mov call in lock testl inc mov or sahf (bad) leave fdivs jmp inc push scas aad jecxz push fnstenv jl out scas push (bad) sub inc jb fldt dec push repz out insl loop out incb add adc call sbb popw int3 cmp nop jne xchg and mov loopne aas mov xchg insb out lahf test xor push dec jnp imul in cmp pop imul fadd popa mov ljmp test and mov mov sbbb jae jbe andl jbe test fnstsw lods pop push mov cltd mov adc pop repnz add or push cmp sbb or scas jmp push push lahf les cmp mov and jnp pop arpl jbe jge inc subl mov test imul jb ret cmp pop pop aaa push mov iret loop and outsl push sahf ljmp adc pop nop fcomi push lods movsl ds lds xor jne shrb jbe add stos sub arpl (bad) mov xor adc cli lds push xchg nop adc push out (bad) push stos imul sbb (bad) adc out int3 scas dec into or mov hlt out push mov mov lret ljmp pop (bad) mov jns arpl mov movsb mov cmovnp imul aaa dec fisub mov mov sbb lret xor cmp mov sbb push das ss rsm jns and (bad) xor in lcall mov out xchg xor mov test mov fidivl jl call mov push ja dec mov les subb push fidivrl dec (bad) hlt stos push inc insl pop outsb inc xchg insl lahf jecxz dec mov and sbb movsb clc mov fnstsw movsb in push pop fldcw test cmpsb mov cmpsb scas subb add xor (bad) pop sub (bad) jle aad or or rorl leave int3 ss cmp aam mov fist lahf pop es xor imul sbb insb adc xor push (bad) into sbb mov adc sub cmp sbb outsb sbb (bad) mov mov mov cltd cld mov dec adc and mov and lods sub ret scas sub test fidiv arpl (bad) outsl sbb jbe adc xchg sarb cmp ficomp nop imul push loope push scas inc cltd (bad) out sbb mov aaa and push fsubrs leave in popa (bad) js inc (bad) and loop mov or and mov sbb adc sub xchg ss fmull push xchg xchg loopne std test (bad) mov or out cwtl fadds stos and xor hlt push xchg aas push out inc push pop adcb sbb sar adc xchg mov lret xor xchg xchg (bad) xchg aas mov pop (bad) xor or cmp aam push xchg shl inc mov and fldt aad pop or fstpt cmpsb cmpl call and out xor into push roll pushf mov divb sbb mov jo dec aad dec push xchg ficompl cmp ja in cmp or fdivrs mov out (bad) push mov lcall sbb bound or popa mov adc pop push lock cs (bad) jmp sbbb int3 mov sub das (bad) arpl repnz stos in jbe jp mov (bad) int ficom arpl stos das cld cmpsb imul imul sbb adc jecxz inc push arpl and cmp arpl mov hlt xchg hlt xchg and pop cmpsb bound xchg fidivrl pop in pop xor int3 mov push pop lods cmp repnz add cs popa in loop mov mov mov inc mov loop adc sahf mov sub cmp pop mov lds inc mov jmp push cmpsb push push sahf mov in (bad) or cld fidivr lods inc daa scas imul dec mov in int addr16 in fadd mov pop das pop lcall sbb in or fsts incb jp inc nop xor mov (bad) out je rcl iret push flds xor mov cmp movsl fistpl and pop repz pop aaa add int pushf mov mov push add mov jne repnz icebp lods inc aas ja and aad sbb aad aaa fwait pop add movlps or push imul movsl push es fcomi int not xchg out movsl sub jge push dec sti push movsl push testl int inc imulb (bad) xor aad jmp xchg ljmp enter inc xchg mov sbb lahf stos clc ds jbe sahf ret mov in push mov daa aaa mov xor es inc push pop xchg fmull scas insb xchg test lock test xchg fistpl mov xor cmpsl stos and cmp (bad) mov je jl add popa loop jb mov push and pushl jle sbb mov loope push lods les jno push int push sub sar sbb mov xor insl or lret stos stc cmp mov cmp mov lret rclb daa push test fucomp daa xchg sbb mov mov xchg adc push scas scas sbb gs xchg mov aas mov mov (bad) mov sahf jo xchg call inc mov adc sbb call cmp es inc ret jmp cmp add lahf mov icebp iret mov and test push jge icebp ds mov aas cmpb (bad) or mov adc mov add mov and push out in in ss sub jne jg and fwait pusha test outsb pop test mov es mov jo sub jne pop je nop and loope int jmp xchg sub xchg add adc dec pop ficoml jmp xchg xchg xchg inc ss dec cmp in push loopne inc shll in xchg jnp movsb aas repz punpckhdq loopne or rclb and mov jecxz mov inc movsl dec or dec aam xor and enter mov sbb sarb fcoms inc aaa mov adc (bad) je cmpsl xor fcompl lcall mov sahf mov xor fisubrl movsb movsl inc adc push repz mov lock pop aam dec pop push mov movsb xchg and lods add push inc dec push and and xor orb test mov xchg adc inc adc (bad) mov mov pop mov inc cmpsl mov mov xor jbe adc sti mov ds roll ret mov call cmp jne outsl push addr16 jge test pop (bad) cmp mov popa push xor loop into sti loope pop insb cmpsl push mov cli mov push push pop push test mov in xorb outsl in jae das cmpsl add in sub dec add lret adc cltd and xchg xchg or nop xchg cmc ljmp rcrb xchg pushf test sub cmp sub push fwait (bad) push (bad) leave aad mov jnp rcll or scas clc add aad rcrl rcl add lds mov outsl das cld popf faddl push aam mov xor repz insb rcrb gs sbb adc add pusha (bad) xchg (bad) cld jecxz pop xchg inc jbe pop mov cmp std rolb (bad) enter xor jg fwait push in ss inc out mov xor in popa hlt in hlt mov sbb mov jp lds sbb test and arpl sbbl mov ret push jne (bad) incl and xchg out jns cmpb jno cmp add push cmp dec adc sbb cltd shll push xor cwtl sbb je mov mov popf (bad) rorl lock jg inc push dec jne jle hlt shrl mov icebp arpl lret sbb jge mov sar and mov fsubrp dec stos test insl mov cmp push push cmp mov fcomps mov (bad) fdivl cld in shrb push leave (bad) push icebp xchg pop (bad) jno popa dec (bad) fsubrl push fldcw repz dec fist mov pop mov adc mov adc mov rcll popa test (bad) adc xchg loope or sbb outsl outsl cmp jae das insb pop or pop and cs scas inc mov push push mov xor xchg cmp mov pop iret mov lock lods bound imul fwait cwtl jnp xor dec scas subl sub in ja outsb in inc cmp (bad) lcall hlt pop outsb jb insb jbe ret fs divb outsb icebp ret adc xchg fsubs dec and fisttpll mov enter jo daa andl mov int3 movsl je pop imul sbbl inc (bad) std (bad) xchg or test je mov sahf jmp stc js arpl jb mov add outsl adc pop mov pop add insb inc jae aas test mov daa stc add push pop add pop xlat sbbb jae jecxz push cmp dec out add mov mov ret xor dec xchg jb call insl push and lret jnp push (bad) (bad) neg and outsb das or cmp arpl leave outsb inc cmp jle xchg add mov mov pop jno adc cmpsb (bad) lcall aam xorl loope movsl mov rcrl add add daa (bad) cli add sbb push (bad) ret xchg xor xchg xchg aaa xchg xchg out jb xchg (bad) mov (bad) sbb inc movsl mov js pop lock aas mov dec loop fidivr cmp jp shrb adc push jnp aas sbb rcrl jns adc pop fwait cmc rcrb dec aam rorl xlat ja mov push fcompl data16 aas addr16 jae pushf das and dec mov lock adc and mov ss push xchg push (bad) jecxz xor (bad) enter cwtl pop mov cs pop cmp push add aam loopne pop jbe mov or ffreep mov mov adc pop jg popa fidiv decb out clc mov loop ja mov push adc mov movsl xchg (bad) fptan xchg aas mov fstpl sahf pop flds lock aad and punpckldq mov popa mov aam fisubl jne and fs mov jp jle xor sbb jp stos sbb jbe nop xchg sbb bound mov cmpl scas out lret imul jo cli mov cmp xchg sti sub sahf int mov loopne clc dec movsb push or mov and insl fwait je sbb push dec cmp sub mov push out jmp inc jb mov sbb loop mov mov adc mov sbb mov xchg sbb popa inc lea pop fisubl mov pop xchg lret mov aad dec xor icebp and iret adc pop cmpxchg cmpsb fwait mov xlat mov push out mov cltd out lcall mov jo jle scas (bad) punpckhbw or jno jmp or jns sti clc vmovss addr16 jle push dec sahf call and imul movsl stos lret out data16 popl in ret addl stc lods push jne pop xor cli test and shl add aaa mov addb pop add rclb mov mov arpl pop cld imul jnp mov fstps jno jno out fnstcw mov cli fildl loopne fstl inc mov dec ss lret or cmp mov std sbb jp bound push mov icebp xor mov mov pop jmp jno jl push loop mov das inc xchg out mov inc cmpsl push jns movsl or adc popf rorl popl sub push jmp push adc outsl outsl call lods add outsl imul xchg xchg sub inc mov push mov loopne or movsl fidiv sarb ja lea cmp outsl cmp adc inc call sbb mov push xor add jae inc les and push push pop sub and es test cs jle pop xor pop int inc cmovae rcr mov mov imul jg (bad) push push xor (bad) ret pop jecxz cltd pushf cmpsl fprem1 (bad) push addl mov movsb or icebp enter gs xchg cli and jge std je mov call pop das push movsl (bad) push mov xchg loope dec (bad) outsl stos (bad) call scas (bad) jmp inc jmp aad cmp pushf shrl xor dec icebp or ret gs or push subb cmpsl adc test mov xor cmpsl cmpsl pop cmpsl loope stos loope push dec cld mov daa loop xor call or and aas push int pop sbb add inc xor bound jmp jle loop push lahf movsl cmp jg fdivrl cmp icebp in js out and xchg into adc dec mov nop out pop jbe,pn sbb ds fcomi loopne xchg ret lret xor mov push insl mov lock lock pushf pop jecxz iret jmp stos xchg rcrb insb cmpsb dec and sbb outsl inc cli jno fstl xor add sbb dec rorb mov mov imul (bad) cmp mov dec push and int3 mov xchg lret fsubrp push shl test scas bound imul inc and rcrb scas jo mov and (bad) testl jne or push dec es dec test outsb mov in cmp lods push and cmpsl idiv (bad) mov sbb fistpl loopne icebp xlat inc pop xchg loop cmp or adc movsb jb and lock dec lret pop leave inc and ljmp lods mov push push mov jmp inc push push and push ret cmp fsts cltd sub jns xchg pop mov cmpsb repnz jg pop lret in and and jne adc lea not xor cwtl aas out mov pop jae pop cmp xor repnz dec sbb scas addr16 and and add push arpl push cld xchg shlb js aas aas xchg and fucom into mov lret jmp xchg jno jnp ljmp jg xor mov lret xor xchg (bad) push shll scas sahf mov dec repnz sbb mov stos sbb adc daa mov xor cmpsl xchg (bad) xchg adc push out popa or pop adc pop xor add sbb out imull cwtl gs adc daa or and mov mov mov sub subl (bad) lret leave testl mov lret add (bad) out cmc xchg mov scas push or sbb mov xchg hlt inc mov or and inc push dec add sub imul popa ja jnp push les inc adc push push test cmp fldl xor stos bound insl enter add push inc pop inc movsl mov inc test pop dec imulb or sbb mov push mov fbstp sti sbb mov bound xlat jnp and outsl xchg inc inc fsubl and cli add ja jnp inc test pop repz mov adc jp,pt fldt dec cmp cmc xor out pop out cmp jecxz clc xchg icebp mov sub lret add xor fisubr pushf enter mov xor dec shll xchg fistpl add jmp addr16 cmp (bad) mov cmp outsb pop mov fs mov jae rcl and or movsb fcoml adc sub scas psrlq cli popa fwait fwait shrl fs jle or mov push cmp cmp mov xor push arpl fldcw notl dec orl loope out stos ds out in fs fsubrl pop mov and mov jl jb push cmpsb negb cmpsb ret sbb add test aas or shr shl add jge adc xor cmp cmpb mov mov cmp fist outsb pxor iret bnd sbb inc adc lea test test mov add add cs mov movsb (bad) or sub mov push jne,pn jmp test pop pop adc leave stc adc pop iret dec stos xor aad or test dec cmpsb ret jb xchg test movsl outsl fcmovnb hlt cmp scas inc loop push mov push decl xchg fistpll outsl (bad) ljmp mov icebp or pop rcll sbb push mov sub jp mov pop pop roll cli push nop clc push add dec push xchg dec and fild sub fs sub jge stc (bad) jp xor push sub mov mov sub and sub pop xor cmp stos pop (bad) xor pop push shlb adc or (bad) cmp pop call stos xor adc adc push xchg sarl jg dec sbb imul imul sub xchg push cltd repz xor and cmp fisttp xchg xlat lds cmp loopne or nop test into or cltd xor xchg std cmpsb repnz xchg mov inc sbb aad outsb pop mov push cmp adc imul cs shl movb lcall mov inc jl and mov xchg in jle sbbl xchg inc js out lcall (bad) adc jl in lds lods mov out out stos call dec jae mov pop repz mov mov jo repnz jbe sarb and xor call push cmp sub repz jne or xchg push and sub lret xor mov mov into (bad) or or mov add adcl xor imul sub add movd or and cmpb imul jne les mov je hlt mov fmul aad je fcomi or into xchg cmc scas dec or xchg sbb adc fs add leave mov cvtps2pd pushf int3 shrl popf (bad) fisub das lods neg pop ss pop hlt add stos es stc xor call dec cs in aaa mov cs mov push pop lret es dec lret bound jb add jnp adc push sti cs imulb pop shll xor jns cmp inc fsubl mov nop iret or inc enter addr16 xchg cmpl pop ret icebp ja mov push sbb ljmp push roll inc mov pop dec inc pop sub inc dec mull dec push adc add outsl sbb and fisubrl outsb (bad) mov add cmp shr outsl jne (bad) cld std rol (bad) leave xor dec push mov mov pop mov mov out xchg fstp inc in pop lcall mov pop push mov mov popf rolb xchg outsb nop sub popa aas cli adc sub jge jge cmpl jbe push mov xchg push call cld out stos out push (bad) dec xchg rorb scas xchg scas sahf push or dec imul in dec mov push adc or sub enter cmp das hlt push cli push sbb push stc xor sub les insl sahf adcl int3 aas orl scas adc out repz push into cs (bad) test in cmovae pop and clc mov in and inc shrl mov mov cmp addr16 int3 sbb out fdivp es mov sbb outsl mov pusha pop outsb dec fldl push movsl (bad) iret fnsave pop xchg (bad) sub fs scas add cmpsl pop (bad) jb sub mov cs dec mov or cmp adc and and nop push add or pop inc cmp jl pop adc cmpsb dec pop cwtl pop dec add int3 es inc test dec out mov mov incb lea popa out push das jle cmp sbb cmc sub xor dec mov adc lods sbbl xor fldenv pop outsb xchg jp fdivrl cmp sub mov and in lods lods or adc lods cld pop stc pusha stc pop mov xor aaa and int3 xor cmpsl and inc fisttpll mov std mov mov cwtl mov xor sbb xor sarl imul lds mov in mov xchg mov jb outsl (bad) mov movsb inc sbb leave cwtl inc sti in jae leave xchg push (bad) and movl xor outsb xor in test movsb inc loop ffree add sbb aas out mov sub jp or inc das cmc iret (bad) arpl jne jo sub sbb and mov push mov mov stos jo add imul sbb add ljmp or mov pop pushf fsubrp mov inc pushf gs aas (bad) dec out out adc std dec js int loopne mov dec pop pop subl scas add in push imull mov rolb in lcall adc and cmp pop bound pushf lods adc sbb sub push adc imul lret adc xchg mov push cmp call into sbb outsb jae test fwait xorl push nop sarl add dec jge or (bad) pushf clc out test aas sub xchg lret mov cltd std hlt sbbl inc and pop outsb mov (bad) mov mov roll arpl push outsb pop sbb xor mov cmp hlt js scas pushf lods mov ljmp mov sbb xor jo in mov lret cwtl pop and (bad) pop outsb and les clc xor sbb xchg dec mov lcall std push nop xchg les enter xchg cltd or sub popa xor imul outsb jbe sbb cmp cwtl imul movsb mov push cmpsb adc or ret in pusha es rolb popf out sarb push call xchg add inc or loope and inc jl (bad) push adc daa js in pop es mov ss sbb cmp push cltd adc adc loopne clc sahf push mov mov pop cmp and or and int3 mov (bad) int pop ja push (bad) jno adc cmp rcll pusha mov push or jno rcll and inc enter sahf enter sub push inc add pusha jo je sahf aas sub aas and (bad) (bad) negb push roll xchg sbb or arpl adc sub mov mov pop push mov mov xchg js movsl xchg call daa push sub and jle out dec jl jecxz inc push enter mov addr16 aad mov xor sub (bad) jge test test adc sbb cli neg (bad) sysexit lods mov js int3 jae add xchg enter jbe mov mov shl sahf mov in in popa mov lods mov mov arpl imul js pop roll clc sub ss mov adc fistpll push ret cld loopne xchg shr xchg jmp mov jmp ret addb pop cmp pop push icebp push mov imul loope cmp xchg and mov stc xchg push movsl test mov adc aad push or pop cwtl sub leave cmp sub les or xor dec pop mov xchg cli nop add xchg sar mov mov cmpsb pop lret cld xchg push (bad) fimul fiaddl imul mov mov push adc aaa fdivrs dec pop xchg mov sub push xor xorl push mov jnp aas cmpl adc jg outsb adc (bad) xor jne test loop or ret fstl ljmp sbb pop lods fwait mov pop lock rcr sbb rorl or sbb sub fwait orb aad out jne jnp gs sbb dec mov imul call pop mov pop push aaa in aas jecxz fcmovne jb loope xchg getsec lret jge push jg loope sbb negb loop sub iret or mov aas icebp cmp xchg cli inc arpl push data16 (bad) xchg in inc add push jl ja push hlt (bad) icebp shl pop (bad) jecxz bound popf aaa rorb xor cmp (bad) mul xchg popf and popa negl ds mov cmp sahf cmp xchg xchg and fcmovu xor lret pop das call repnz lock jnp mov mov mov pop mov adc add cmc mov jp inc cs pop lahf loope mov inc dec (bad) clc lods jg sbb mov sbb les sbb imul add jl and push test mov add adc inc xchg xchg cmpsb movsb popf mov mov das das (bad) mov cltd jmp lahf scas in (bad) mov data16 xchg pop clc fnstsw pop add aam pop xor xchg bound clc or mov cmp mov mov test ja popf xchg and mov arpl mov push xor xor bound scas mov adc mov aaa inc inc mov repz push sbb xor std xorb jb int3 addl cmp jg stos test push sbb xchg popf cmp sbb out push xchg fisub (bad) dec iret and and mov test sbb xor push mov movsl add je insb push std addl fiadd scas ja mov lahf insl ret jo xor nop mov icebp outsl sub sahf fldcw pop lahf and sbb scas scas mov js or jg fldenv sbb data16 sub out and stos ret fs mov lcall aam sbb jnp dec push add jle mov pop add jecxz addr16 dec popa mov in sub xchg cmp xchg push dec sub lock in je cmp dec movsb orl addl int cs add test cli inc mov pop or dec mov iret mov mov mov dec adc dec icebp (bad) mov and cmp out test and inc add mov pop mov fsubrl daa pop fldenv sbb sbb aad fmuls lods call aas xor push shl clc jl int3 jne dec pusha pop add add jno ja stos cmp std sbb es hlt aaa test push rorb jo clc inc add ljmp popf gs gs cwtl pop arpl shll xlat sub out test mov sbb enterw test sub lahf rcrl bnd cmp divl fwait outsl xlat adc out adc xchg (bad) aam ret fdecstp mov loope sub fstpl lahf xor mov rclb out je mov sbb sub vpmovsxwd pop jecxz sbb or (bad) call sbbb pop cmp cmc mov sbb jae xchg inc outsb mov jecxz (bad) flds mov nop lods dec lock xor out pop cmpsb arpl pop test fidivr cmp das adc jnp adc xor pushf (bad) mov pop repnz sbb sarb rcll ss inc mov add test xor push jno add jo (bad) and outsl inc jl jge jge or adc test push dec xlat sub cmp sub fildll into int3 in mov andl lcall adc push aaa loopne mov sti xchg addl hlt pushf jo mov lahf stos fildll jge frstor dec or mov in cmp out cwtl mov sbb andb sbb xor or pop aas sub push jmp hlt ljmp sahf shrl dec pop decb repz lods loope jg or scas mov lahf dec jbe and fdivl adc addb sti aaa and fstl cmp mov pop pop sbb mov sti mov stc and ficom push pop mov push scas inc sbb or popa std sbb cmp fst (bad) xor mov mov sub push incl push sbb adc xor aam and mov xchg dec idiv and iret mov jb sar lds pushf lahf and and cwtl inc dec xlat dec gs stos popf jmp mov out xchg aam jg cmpl jne mov push push fcompl mov out in ljmp iret lods push mov stc jbe jnp lds jbe lss and mov push in frstor mov push or pop mov mov push mov dec ds (bad) lcall loopne xchg adc faddl xorb mov inc xor lds (bad) cmp popa xor sbb dec scas xchg cmp int cmp shrl or (bad) icebp pop ja sbb mov test (bad) sub test mov clc sub push (bad) xchg inc mov insb (bad) mov push (bad) xchg pop (bad) cmp sub mov pop and cli cltd mov out jle andl icebp movzwl outsl icebp test mov int enter xor mov rol mov push or mov mov mov sbb negb xchg scas repnz jmp mov andl pop jle nop stc subb cmp in ds pop fldt aaa sbb (bad) push cmp enter pushf mov xor insb jecxz add out (bad) aad test and lods mov popf sbb mov cmp push xchg pusha adc into dec loopne fdivs mov nop addr16 jno pop mov xor jno push push std dec insb dec push and adc imul lods inc rclb cs pop and icebp jno sub fcompl cmp leave pop jp mov out in adc les or mov sahf insl xchg pusha xchg mov jne cmpsl xchg sbb bound mov std push mov mov fiadd push insb cld icebp push sub xor (bad) jmp adc sahf in sbb test cwtl push idivl cli ljmp xorb fstpt jne pop add scas xor bound in sti cmpsl sub lds adc into stos fs and lahf mov cmp mov stc inc xor push xor ljmp decl adc sub dec leave ja in out xor push cmpsb mov (bad) fildl and or adc dec test add dec cmp (bad) pop jmp pusha jg lock leave dec test popf or xor xchg mov cld mov add test mov mov xor push jge,pt (bad) lahf nop imul mov push mov mov fistpll adc jb mov lods xorl idiv jae dec into xchg xor dec fnsave pmaxub cwtl xor inc jge inc jl lods into add hlt jecxz mov lea sbbl (bad) xor mov push test (bad) jle mov out mov cli cmp inc xchg lds pop mov and adc dec cmp push (bad) mov rorl mov cld (bad) mov pop mov push js nop cmc ja push outsb pop inc add loopne push (bad) popf out jno mov adc sbb mov movsl aas sti mov lods shll loopne inc (bad) xchg inc ret lods jge jl popl pop push or das cmp mov jo dec jae or mov inc popa mov in test bound adc dec cmp jb inc ficomp sub das dec les or xchg testb jge push lods test mov push jbe sub pop xor ret adc dec pop cmc fldcw xor inc sub mov sbb imul add pop xchg mov xor lret xchg repnz std enter lret push push out add adc je andb inc fistpll sbb adc aaa inc sub ss add fdiv faddl mov xchg int3 xlat adc inc and ss clc lods pop js sbb xor in ret jb jb (bad) xor jns and dec sub outsl pushf sub ljmp sbb add loope loope nop iret std mov push push cmp (bad) loop ret mov in cmp cmp jae sarl dec xchg or dec adc inc popa pop mov add inc adc fcomi mov dec mov jnp cmp cmp jno and aad pop mull mov nop pop push outsb mov repz push cmpsb xor hlt xchg icebp inc push stos jl mov or lea mov cmp adc jl mov lds cmpsb popa push jno test sti movsb push push sbb adc in icebp movsb xchg inc mov outsb add cmp cli jne push (bad) enter mov stos dec test mov push adc fnstsw (bad) mov pop gs xor xor mov popl push rcrl dec and or ret jne or into (bad) (bad) or fdivs repnz dec lcall ror icebp pusha frstor sub mov and jl push xlat xchg mov bnd push cmpsb adc arpl xor xchg iret rclb cmpb (bad) push adc xchg daa leave rcrb pop fdecstp sbb outsl dec inc (bad) pop mov jl repz jg jl pop dec adc cmpsl mov movsl loope int imul pop sarl xor and and jl lods adc lds icebp xchg (bad) fldt out sbb xchg lods sbb (bad) test sbb fnsave scas sahf jo sub fwait iret fcmovb neg aam jp (bad) lock mov outsl jno (bad) clc push or jno mov inc dec (bad) inc stos call aaa pop mov or lock clc insb cmpsl jbe aaa dec into imul cmpsb adc mov fnop pop ljmp fbld aam pop lret iret rolb sub (bad) xchg scas sub cmpsb push cmpsl adc (bad) xchg cmp jp fdivs popa lea (bad) xor pop das ds stos loope lods nop xor lahf cltd loope adc push in cli or or mov add out sbb iret xor push es pop push inc add xor xlat xchg push push dec jnp xor lods and sbb adc push imul std push movsb bound lock aaa sub inc cld mov lods sub xchg pusha data16 loope xor sub mov adc cld pop inc js mov jl icebp movsl mov fdivrs (bad) mov mov push mov gs leave lock pushf inc ljmp jns sub icebp cmc or sub mov add add push mov imul push (bad) xchg sti js pop vmaxss adc mov xchg pop jo sbb (bad) jne mov push inc xchg push sbb out fisttp add push xchg lock aaa faddl jb pop in cmp enter mov mov or jmp mov std insl repz mov mov xor pop rolb (bad) cmp outsb inc loope ja pop stos aad pop ss or adc jmp or mov push pushf lahf push enter inc adc addr16 ret cmp out xor mov inc mov aad mov and pop dec sahf out loopne clc rclb push cltd push fdivp bound int lods outsl cmp mov or cmp add dec lods add stos mull adc sbb (bad) xchg jnp aam dec mov arpl pop sbb leave adc call push add sbb lcall pop mov sbb jmp sbb fnop ret pop xlat pushf pop shr in cmp add add stc add xchg and xchg xor mov test inc add (bad) daa and rcrb (bad) hlt mov enter jge and insl das out jp jge (bad) (bad) sub xchg jnp sbb xor pop in adc cmc push das rclb movsb stos fdivrl inc aaa xor xchg and adc mov dec int3 pusha mov xchg cwtl push js or push or inc and pop outsb fimul repz push pop add add test xor lea adc xor xor out mov out cmc or call push shrb cwtl pop aam push xchg push icebp inc lods clc repz fadds lcall mov adc dec pop nop insl ret mov pop out push inc add push repnz push xchg and out aas add mov push call jmp inc mov mov insb movsl xor scas insl dec clc imull jne int3 fisubrl imul sbb mov cltd mov mov mov bound sbb pop mov stos mov mov xchg idiv jbe xchg mov dec scas rol cwtl pop dec clc jns mov stos cmp cltd and xchg push lds mov test sbb pop mov sbb aad mov lret (bad) sti hlt cmp pop out icebp js popf dec stos ljmp fstl (bad) mov mov and add sbb mov imul cld icebp (bad) push call int sub add sub jmp aam test xlat out icebp sub push test mov jae arpl jecxz jle pop out shrl ret pop stos fstpl jecxz in sub stos sbb cltd sub mov lcall shll popa mov jp ss mov cld inc and jecxz pminub (bad) fnstenv xor ror daa xchg mov adc enter push test jns enter aaa xchg lods aad ret fwait mov ja mov mov rolb (bad) aas fildll mov out sbbb in mov mov add sub (bad) push add mov fidivrl fiaddl and mov inc mov push pop lret mov xchg fs sbb sub sbb cmp dec loopne jecxz hlt lret nop sbb sbb xchg xchg je shll cmpsb xchg lods lcall mov mov xchg push into sbb and push xor or mov negb in fwait mov iret mov inc mov sbb call insb enter out adc inc jp out sbb je push or add mov inc ds or cmpsb mov add or outsl adc pop pop push sub (bad) (bad) push xor add mov fsubrl iret xor test push lret adc cmpxchg aas inc mov lret imulb sbbl xor and adc mov cmpsl mov add or pop nop pop add (bad) in ret cmp pop (bad) dec lahf lods xchg add std cmpsb push and xchg (bad) pop push sahf pusha aaa jle push mov pop sub adc xor pusha es or lds add mov iret jge and mov clc shr sub fisubl pushf or mov int3 scas imul in outsb (bad) lods and mov shll std dec adc aas jbe sbb sbb mov cwtl (bad) xor inc dec sahf push adc lods inc mov popf ja in fistl in pop fimul inc inc add (bad) out test std xchg dec ficomp pusha mov sbb add (bad) xor mov cmc mov imul outsb aam fisttpll jmp repnz imul xor popa int xlat xor stos loop mov mov les xorl out sub xchg lret mov (bad) fucomip lret sbb mov xor (bad) xchg pop xor jg sahf pop addr16 dec jmp fnop (bad) jl jae mov xchg out ret jge dec test (bad) pop mov sarb fdivrl std pop xchg and arpl je lds xchg push out inc push mov shrb lret aad mov popa mov pop call cltd scas pushf cmp add je push pop pop add les push (bad) in cs int mov lods sbb ror pop jb pop out inc ret ret pop mov popf mov jae xchg mov push or xor add rclb movsb sbb pop or jg and (bad) std (bad) mulb jl cmc mov incw andl imul mov push fs int3 lcall or hlt ljmp mov dec popa arpl test mov sbbl lds add jae imul cmp lods ret push mov and gs mov gs pop pushf push jnp btc jae mov sbb out push cmp arpl push or mov mov dec outsl pop scas fisubl mov adc add jp pop mov push daa inc lods mov (bad) mov mov or repnz cmp push lods cmpsl mov hlt xor lods js aaa mov add pop sub mov popa aad movsl sarb jle mov stos (bad) mov cmpsl ret cmp mov or ds jne inc stc and mov aas dec iret xchg add xlat jnp pop pop ja iret inc mov adc fiadd xchg iret jnp push je insb orb mov mov fsubl sbb outsb repnz into addr16 das aam cmp and in ficomp adc dec scas pop mov sub repnz adc cmp clc fsubp lods loopne lcall xchg aad loopne dec mov rorb insl add adc and add stos cltd pop inc lock hlt mov xchg rcll jns aaa je mov push cmp jl loopne hlt pop loop fs xchg adc cmpsb loopne xor popa aam adc xor xchg push arpl in pushf and jl add push mulb daa test (bad) jge in sbb inc mov test rcr test lods mov jnp decb ljmp sbb addr16 cmp jno xchg jmp inc or icebp jge,pt xor add push insb push mov fidivl mov daa das inc add mov das movsl insl sbb insb inc xchg pop lock arpl push shll lret jo or bound xor jno add test inc fcoml dec icebp xchg xchg sbb or mov sbb xchg add xlat push cmp jp scas ja inc and pop stos jne inc dec cmp pop cmp imul clc and cli cmp inc xor add in inc pop (bad) dec and popa outsl push xchg imul aaa push push mov mov mov in mov (bad) xor aam and mov dec stc (bad) fld shlb sub mov dec jbe push sub sbb mov in pop push and pop pop mov mov pop jmp out test xchg gs sbb push xchg hlt fwait leave pop adc or xor outsl stc les cmp push lret cld mov add stc cmp iret jb inc push fcoms push add jecxz test popf sbb (bad) and sarl daa pop pop xor ja cmp xor xorl and sub pusha mov (bad) in dec cmp mov shrb pop lock mov jmp and xchg and test xchg xchg mov rolb andl xchg cmpsb push loop cmp pop ss and fwait xchg pop mov pop sti cli arpl dec sub push mov xor imul cmp mov jl leave push ret iret pop sub cwtl test adcl mov lea jbe dec fwait jecxz inc pop addr16 adc aad push mov cmpsb lods ret jae mov repz xchg icebp sbb pop xor dec pop mov jmp push jg fdivrs jecxz jp leave lds mov cs mov fldcw lock and (bad) lods xor orl es mov pop push dec sbb testb jo ret xchg data16 pop xor cmp ret loope roll data16 xchg fcmovnu push (bad) xor push andl int3 sysenter out and sbb inc aam push mov xchg lahf popa stos fldl sbb aad push mov popf xchg pop lods mov jno mov add sub subb push dec mov out adc dec int3 cmp cld jno (bad) mov xchg sub pop push cmpsl xor mov mov adc pushf lods imul cmp ret fs add lret arpl jl push pop mov fisub mov cmc inc dec or inc cmp sub out add mul sbb ja enter nop nop inc in cltd mov push addr16 sbb ds clc das cs pop xchg mov mov aas jmp mov jge and xchg in pop (bad) fmull incb inc or push jne mov (bad) push dec psadbw sub test mov inc xlat mov lds mov push lret xchg xor rcrb dec xchg lods cmp adc xchg lea ret stos jae test mov aad jecxz pop cmp jns cmp (bad) aad nop cmpsl sub fistpll adc mov sbb xor or mov jl adc add repz hlt jnp (bad) xor cmp mov out mov pop rcl pop stos jg lret or inc push ficompl xchg sub imul nop cltd cli and sbbl push sub lods jbe jg lds lret jno in daa pop js mov aas lods inc inc push mov and fcoml popf (bad) mov addl add push daa (bad) cmp xchg pop push or movsb pop push inc fistpl not mov jb jo xchg adc rorb pop mov cwtl mov lds adc cli cld dec cmpsb adc sbb sub pop sub loope popa dec faddl xchg xlat add ret out pop pop (bad) jnp dec (bad) (bad) data16 pop jmp jae mov push mov mov out stos sub xchg xchg negl inc or hlt in cmpsb mov mov xchg sub mov inc or add rolb (bad) mov add add pop add jne lcall mov aam repnz add in sub push jmp lds xor popf inc test xchg jg dec es sbb (bad) mov aaa test movsb or lods mov sbb adc push lret push xchg (bad) fsubs jns mov cmp je (bad) xor dec or push pop jmp repnz int3 lret cwtl loope js jae cmp aaa mov enter mov (bad) jbe fimul lahf pop divb lcall (bad) lcall sbb cmpsb xorb xor push roll inc sub jge cmp push mov jae or (bad) lea xor iret dec addr16 fldt adc mov addr16 sbb mov xchg inc mulb lret or pusha out pop mov and in pop lea adc cmp mov push repz xor pop adc pop mov cmc fsubs (bad) sti rclb sub xor push lds jp add mov cmp orb or decl inc jbe icebp pop ja push mull nop mov loope rolb sahf adc pushf mov out movsb repz jp jmp sub das xchg das adc negl std mov xor outsb rcl pop push out out xchg aad mov in loop das cmp mov jns push cmp cli das adc loopne sbb aas lcall xchg lock push mov rcr cmp dec lcall xor add lods and jg sub aas gs add test sbb add sti fistpl adc into xchg sub data16 scas inc test and jne movsb shr or cmp push add push mov enter lods cmpsl jb cmpl xor adc bnd dec cmp mov es dec inc lds push mov (bad) popf xor jg daa into mov shr or (bad) sub mov inc inc xchg adc inc jno test dec aad cmp push lea jg or scas btc mov xor inc lcall pop add jmp gs push dec dec dec inc insb and mov xor outsb std inc fsubr lahf xchg sub sbb scas negb mov mov insb push rolb aad dec and mov cmc cmp push dec mov imul pop cltd mov pop sbb jg jl (bad) pop pusha pop xlat add sbb ljmp clc insl inc fwait dec xchg into es pop rorb sbb fcompl imul std jbe jge movsb xor inc adc clc xchg adc dec jge call fistl xor es xor test popf sbb decl sub or push addr16 pop add sbb cmpsl andl pop inc push je mov notb push stos dec dec (bad) repz movsb lods popl and add sub dec cltd mov iret mov fiaddl xchg imul imul cwtl pop and jne sar lods jae jmp push dec shlb mov popf add je mov fmull shl push pop and movsb jne dec jp aam testb adc lds sbb push inc push dec sti mov jo iret mov imul jo iret jo lods outsl rcr repnz repz addr16 push loop inc icebp imul dec xor in sbb mov icebp icebp test and sti dec fwait mov xor test rclb pop dec stos inc iret pop rcrb imul and xor inc and aad fmulp push imul orl xor data16 cmp icebp sub push aas xchg sbb cltd pop (bad) mov jecxz (bad) leave dec dec adc sahf fwait cmp lret xor hlt xchg xor xchg jo sub out jg push nop xor sbb mov fiaddl pop push mov xchg xlat call out fimul jo jecxz stc int jmp push out rcr enter lahf clc lds pop fwait sti ret pop aaa jecxz pop cld adc push dec add fcomip dec inc lret sbb and mov les inc jle mov pop fidivl sub pop data16 outsb jbe enter imul mov aad mov int3 cmp enter lea inc ss and or cmpsb ja mov jbe and jb mov push or ret and jns cld fildl test dec jp test out (bad) sbb ljmp (bad) out and fimul scas push cmp fisttpll rorb pop rorl sti fwait int3 (bad) ja xor imul std adc mov lahf sub les test lret (bad) jno jnp dec lcall sti movsb call xchg inc mov add sbb stc outsb jno sbb mov in mov add in movsl in outsb rep iretw test pop cltd aam mov adc fimull clc cmp jp cltd imul jnp test dec daa in xchg adc (bad) jecxz flds call mov add pop jl mov scas push frstor pop stc inc test mov mov inc popl and add aaa pushf enter jns clc lods imul cmp std pop imulw cwtl test or adc or mov pop and in negb inc add je or (bad) pop outsb aad (bad) sub adc dec ss nop sbb cmp xor sbb inc inc dec sbb rsqrtps push pushf adc mov repnz leave mov sbb add mov adc push jno js aas xlat sbb into sbb pop out pop push int3 clc mov fimul mov cmpsl xchg ljmp (bad) jge incl jb out push out scas inc inc aaa xchg pop shrl xchg cli test imul mov scas mov inc into int add imul movsb mov lcall inc into movb inc lock pop and xchg jne sub (bad) and lock xor adc shlb xchg cs (bad) add mov movsl jbe xchg inc fadd (bad) or and jle pop dec inc dec int3 ret and jg add popa dec dec and cmp xor es xlat cmp sub push fs mov ret sbb add dec pop rcr mov daa inc or lods movsb dec push add fldenv sarb push mov mov bound movsb jne xchg jnp sarb cmpsl daa ljmp movsb or in stc xchg mov test sbb push mov add mov lcall jbe add xchg add pop mov hlt cmp cmp out add jnp cmp mov add pop clc cmp inc imul sarl adc leave dec sub dec fisub fist outsl arpl cmc inc mov (bad) jno stos mov fistpll test rclb push xchg out cmpl jp jns push push stc mov ret in je pop xor push dec push je inc pop dec subl or mov int arpl inc xor add pusha mov mov ja popl lret xor lds bnd add mov movsl fsubs xor cwtl nop test add inc dec xor test test sbb and movsl enter lret pop xor loope push cmp inc cs stc mov scas cltd xchg lcall repz jmp mov das insb mov xor hlt push lea js fwait iret push ror dec test cmp cmc push leave int movsl sub lcall add mov fnsave in jg jg sarl mov fiadd cld sub dec pop xchg jo or xchg inc test pop sti into inc xchg pop das sub loop mov insl mov and roll inc ja cwtl sub (bad) jns ja xlat dec or fsubrs mov movsb push ret roll cmp inc mov mov cmovl add call mov sbb inc cmp xor mov outsl pop or add mov dec es pop or out inc dec loope cmpsb dec lds sbb loope loope in mov push sbb xchg cltd lahf out (bad) fcomps jne inc (bad) fildl sub mov mov test push pusha add ret pop jns xchg loope clc inc lret dec repz (bad) jmp pop pop (bad) dec aas mov movsb jg hlt lret fnstcw loopne test fdiv outsl fmulp gs ss or dec xor mov sbb aas test mov les (bad) pop (bad) mov out enterw (bad) je push mov jb rorb push in or test pop insb rcr xor fs es dec xchg test jne lods lock cmp daa mov sbb pushf pop xor sbb outsl pop jge and push pop aaa push cmpsl dec adc jo out mov (bad) rolb fildl leave xor div mull leave (bad) pop (bad) inc fild iret dec pop pop and jno jae test nop mull adc lock mov lret push adc mov aad icebp insb outsb or idivl dec std inc mov xchg pop sbb ret inc add push nop cmp sbb call insb or or lds enter or or jns cmc inc pop std movsl mov aad outsl inc mov inc and xchg (bad) xor mov sbb mov imul iret mov push inc xor lret or inc les cmc ss adc rol push fcmovne xor out fstp push mov data16 push cs adcb lret push jbe push mov mov lcall sbb jo fisttpll dec js fwait xor mov inc (bad) int adc and cld push add sbb jbe cltd pop adc add scas gs push mov jnp xor bound push push mov vsqrtsd in insl fisttp cli xor sti test into nop mov lods hlt fcmovnbe cmpsl les jp daa mov xor (bad) repz cmp cld mov and add aas aaa mov int sbb fucomp pusha sbb jae and aam movsl push sahf lret out fistpl mov fs enter pop lea push push dec insl leave in xchg sub pop or mov sub and or bound xchg loopne lahf (bad) int3 xchg sub inc jl hlt sbb jbe jl mov sbb lcall movups (bad) sub pop pushf xchg fist movsb add test jge mov pushf popa iret ret xchg (bad) push add mov push jb and test adcl mov cmp pusha repz int push push xor int3 (bad) or or pop call sbb mov sub inc xchg or clc xor push pop jp ds outsl fidiv out xchg loopne inc repnz divl in mov or mov inc out (bad) mov sti inc dec pop shrl mov push or jnp pop cmp add in je inc ret mov add fcomp sub sbb sbb and out int3 rorl lods cmp test add iret inc sbb iret or out outsl inc dec fcmove cmp out in aas or in push xchg inc icebp int3 xor mov cmp mov dec sbb in sub adc add pop fistpll js or lcall fdivrl ljmp inc test mov ja or roll dec jb icebp (bad) sti lret sub push add or or out das stos pushf scas std pop or test add sub xor pop enter mov push pop mov je enter add test sub add in dec ljmp shll or jns xor dec mov stc push pop (bad) aas enter je jns cmpsb and leave sub cmc mov fistp push sbb or inc movsl mov add out inc jb and and jnp out pop cmpsl and and and adc pop imul mov in mov xchg inc xor add rcrb push mov cs aas pop fwait pop dec int and sahf lcall mov push clc fcomps (bad) outsb adc push (bad) jg fsubs aaa add bound fstpl sti mov (bad) pop mov jno inc dec leave (bad) fsubs enter mov in sbb mov sahf sbb jle mov rcr imul sub inc imul inc es inc jne inc or inc mov cmp sub sub loope mov and das xchg scas xchg (bad) hlt or inc (bad) mov xchg roll jae push int3 or and mov or movb pop mov fcoml sbb loope fwait (bad) in jg ret and sub mov xorb push int3 add push lret idivb mov es xor scas repnz addr16 jle xlat aad sbb lods and divb pop jle (bad) call sbb lods jecxz xor pop fdivl jg mov out sub and xor push ds xchg xor insl mov inc xorb imul insl mov aam (bad) mov push fwait push daa xchg sub and into nop jmp sarl rolb pop out test js pop aam iret xchg ljmpw pop or xchg fnsave negl pop movsl sbb je dec sub shr lcall fmull popa icebp dec mov lret fsubs mov call fistpll stc scas (bad) cmp in jbe add xor out push or je cmpsb sbb adc or mul fisttpl mov aaa orl xchg inc jmp mov adc inc and (bad) jl jmp mov push dec mov cld and sarb nop gs out jl pop and je in add jecxz jae gs fcmovnbe push scas mov or cld fsubp dec arpl ja rcl cmp add lret js insb aas divb mov add insb dec call mov stos sti cmpl rorb xor adc loope add push push cmp adc mov clc xchg sub (bad) out aaa push inc ret enter incb sti cmp push hlt cmp or or daa mov add lahf add sahf imul test lods scas sub cli dec aad dec and mov and or inc pop int3 mov and cmp cmp adc inc mov sahf dec mov testb hlt push xchg push int3 fisttpll cwtl popa fwait inc repz int fmuls adc add lcall pop mov and in mov adc ret mov sub shlb mov push push sbb xchg fmull aaa inc jmp cmpsl mov mov push (bad) loop hlt jo ja ds and mov lret cs cmp adc shr pop stos cmpsb ja nop lock inc push iret imul or in mov or jl int3 pushf add addb pop fcmovb loop inc jbe pop xor outsl nop mov icebp dec out jle insl adc (bad) (bad) and sub in bound lret jg int xor pusha ficoml jmp cmp jb in pushf sbb push sub jo or xchg ja mov push mov mov repz mov scas cmp das (bad) mov ret adc adc inc rol adc aaa jle icebp pop nop scas xchg in jnp lds dec mov and sbb add imul inc pop dec mov mov lcall (bad) shrb mov pop popf jge call inc call ss imul adc rcrl popf sub jb adc repnz pop pushf sbb aaa sub lcall div adcl dec shrb cs or pop mov loop cld jge inc imull movsb push scas pop les out gs (bad) pushf and xchg sub mov sub pop and or int xchg rcrl xor sub repnz popf mov inc imull (bad) xor add inc (bad) out sbb jg mov adc (bad) fimull arpl ja popf sub mov mov in mov sub rorl sbb lock fistpl (bad) xchg jae in mov adc cmp sub mov mov jg or and test cmpl jecxz cmp inc (bad) gs sub jp mov mov (bad) hlt pop and jno lock push mov hlt xchg mov fs sarw push fwait push loope fldl ds shrl or cmpsl jl add and add loop iret mov out dec je dec jge gs lds test rcll sarl mov int3 pop and mov xchg mov adc divb int3 dec cmpsb or test lret sub nop inc popa sbb cmc pop stos add test mov (bad) cmc mov push popl pop adc jl adc cmp adc sahf pusha adc push (bad) cmp ds lret cmp pushf pushf adc (bad) stos jno in popf mov dec xchg mov nop sub jecxz loop fisubr bound adc mov inc sbb iret push dec xchg fistl pop arpl add inc xor adcw sarl movntps call shll jns mov out push (bad) fdivrp cmpsl pushf repz xor adc js imul idiv int3 mov movsl mov popf push push or cmpsb scas fdivr dec iret mov dec add push mov mov in jecxz push test cltd lret aas jne jo dec sbb dec std dec stos mov mov mov jecxz fdivrl pop inc sbb jl loopne mov dec lahf pop sbb (bad) int fidivl test xchg push out and pop movsl test dec or push ljmp js pop sbb cmpsl outsl sbb pause jae shlb add mov insl incl loop stos jns pop test mov inc jg fdivs test (bad) ja push mov das aas fs jbe negl mov jle push dec test rcll mov push pop sub xchg pushf loop inc push cmp mov pusha mov cmp mov daa das (bad) pusha xor xchg add popa lret pop test repnz jecxz insb aaa xchg aam or jle popa adc (bad) stos or test mov (bad) mov mov push mov cmp mov loopne sbb or mov in xchg push mov cmp out iret jae push and scas xchg (bad) xchg push pop jle sub dec jbe jge stc jg popa daa push inc adc mov xchg sub sbb adc xchg sub fldl2e pop cs pop mov sti clc fmull lahf cmp cmpsb cmp mov js cmp movsb mov rorb mov popa movsb jbe cmp nop mov cmp in dec jecxz pop mov lret sahf divl adc clc mov fisttp out add jne mov cmpsl jl push dec rclb fisubr pop adc cmp mov (bad) push mov mov xchg or push dec pop ret fisub push (bad) xchg pop dec aaa fs sub or or xor inc jne push loope add push lods jecxz outsb cmpsl dec fsts (bad) push dec cmpsl aad icebp adc push cltd add sub cmp in pop sub lahf fstpl lods mov xchg push dec jge mov xlat sarb add or test pop push xor fildl (bad) mov stc push daa fsubl sub cmp sbb jl jns mov pop dec ljmp pop test cmp (bad) mov push das out ja into lret jo sahf mov pop add outsb xchg xor mov mov out aaa fnstcw aad fxam sbb mov xor (bad) js inc or pop mov lods and mov and idivl out psadbw scas xchg fmuls or int3 xchg xor adc aas xor xor xor or cmp into and xchg or xchg cmpsb loop or push add push out push jo xchg xchg mov pop enter xchg sbb rorl mov jnp xor pop sbb adc fwait data16 mov mov aam xor cmpsl xchg fisttpl int sub outsl push sub inc ret mov lret cmp jmp xor inc mov mov pusha and ja orb or cltd fsts cmp std jno stc dec imul pop lret jo mov in sub mov inc enter addr16 jo adc aaa xchg dec xor test arpl sti jo mov xchg mulb pop fidivrl aam outsb sub dec movsb test or adc jb ret dec xchg enter inc stos jmp scas push mov out sub cmp arpl sbb mov lock outsb aad loope aad push fdivr shll clc (bad) shrl sub add fcom add scas lahf add push adc sub (bad) push repnz (bad) (bad) mov add xchg popf rolb dec pop xor and aad test imul push and sbb sti scas mov xchg ds dec insb pusha xor out (bad) and mov mov xor ret pusha dec or push popa add xchg cltd sub jg sbb (bad) push shlb push stc xchg daa push push xor mov push sub sahf push mov mov (bad) sti fdivs shl les push jbe iret xchg push pushf rolb dec inc mov arpl push jo or inc push fwait mov fcom aam mov push pushl mov jmp scas in pop movsb mov add loopne add repz movsb sahf loope cltd jecxz es xor repz sub (bad) repz daa adc mov xchg push mov pop in pop adc dec or (bad) movb xchg mov xchg cmc or leave inc divl adc mov xlat mov inc icebp aaa jecxz mov sub ret sahf and fidiv lock das rcrl ficompl lds mov cmp add stos sbb rcr sub int int mov push jmp test leave adc popf fdivrs cmc push mov sbbl mov xchg adc jnp push insb inc stos dec loop daa push in bound add xchg lds ljmp xor xchg xor mov fwait repz sbb push xor mov pop popf test push inc test fmul mov out push jno addl sub add aaa jle fwait jne test movsb pop cltd lsl jge jbe mov in shll dec js ret mov ss lea out lods pop push pop push xchg cwtl imul or xchg arpl (bad) adc pop rol jg cmp push sahf ror (bad) mov test fisttpll cmp dec cmp cli jno pop jo jns or add fsubl testb xlat push inc push outsb call inc cs xchg clc sbb push les (bad) xchg mov mov xor mov push cmp pop scas push push imul mov les xlat fsts xor xor ds dec jno sbb or jmp addr16 es dec test loope cmp cs push dec mov cmp fldcw dec push mov test or mov aam pop inc mov call cmp out ss shlb scas ss add push xchg ret inc stc or lds into cmc int mov vandnps and ds mov sbb jmp mov push gs out int cmp sbb push cli rcl add cmpxchg pop mov push sub test outsl repnz fs xchg mov outsl scas mov push sbbl daa mov or idivl bound sub mul mov outsl insl jmp mov xchg jns xchg pop xor aam sti pop nop sub loope push push fsts mov add adc add xchg adc (bad) jo insl mov mov outsl outsl hlt lods into cmpsl ret or loop test int3 movsl or and incl adc aaa xchg jmp imul mov call adc ja inc xor push jo outsb push outsl inc int3 and inc or cmp pop jb outsb (bad) adc push pop fcompl out dec adc jns mov testb push adc cld xor xchg dec bound test and out push pop pop xlat (bad) icebp xor inc fwait push inc loopne in and movsb mov adc imul inc jno pop sub in stos sarl das inc pop int3 cmc addr16 mov repnz ss add ret adc jns dec fbstp ja out in (bad) lret stos dec ds lods imul add mov loop xchg sub cmp into xchg pop or arpl enter ret xchg sbb ret mov mov mov aaa loopne xchg int xorl mov call jecxz js mov or xchg stos stc outsb xchg lahf add (bad) insl icebp fcmove gs dec (bad) fisttp std jb dec push cmpsl addr16 pop or adc and loope jne daa loopne dec scas and or or dec lods faddl out sbb mov call and gs inc jmp inc push data16 cltd (bad) into sbb inc stc cmpsb adc mov in mov and inc cltd inc sbb enter mov (bad) in (bad) clc jbe dec test test cmp lock xchg cmp mov int3 mov and cmpsl in adc daa inc test inc or jl mov out xchg and scas outsb call lds les jo cmp mov push (bad) sbb mov inc outsl xchg mov dec dec int3 jns les es push insl leave push sbb push dec int (bad) (bad) add lahf fs push aam jb loope mov push push add push adcl pop xchg mov (bad) (bad) repz inc (bad) inc test aas adc repz push xchg lret or inc fsubrs loop pushl pop dec lds nop cmp pop pop sbb pop enter inc cwtl and fwait mov jne and adc mov lds test sub test inc jb fcmovnb add inc adc sbb adc movsb mov mov adc dec clc pop mov leave push ror arpl popf mov pop scas cmp rorl xor push jb ljmp fs ror mov mov and lods dec jae adc xor pop push adc dec mov test cli mov fwait jge mov pop push dec dec stc shr scas push arpl iret lcall mov push rcrl xlat jmp dec or sub jl fwait xchg stc jg sub inc mov arpl xchg mov adc (bad) dec fdivp dec lret add adc out fs adc in inc push shrl lahf push pop xor shr lea icebp adc inc adc or and push mov sahf jecxz push out sbb insb adc add fcmovnbe adc icebp in xchg sub repz and inc sarl sub rcrb mov inc cwtl mov adc sub fdiv repz pop emms inc pop pusha mov bound js int xchg push aaa dec mov popa mov fadds jle,pt and clc mov out and scas rcrl bound es rol adc fldenv xchg enter in push mov roll ficompl ss orl cwtl dec in es lret mov push out sar pushf jne jge mov jbe int3 xchg cmpsb in test adc repnz pusha shr stos mul popf scas pop jp jnp stos add (bad) jae loopne pop mov pop out roll jecxz cli inc and mov push icebp cmp xchg add rcl mov int3 jno addl adc fdiv xor jl jo inc pop jo push and sub test clc mov lahf mov pop loope jp out push mov fcmove iret push and das (bad) push in and in cltd and (bad) or and xchg cmp rolb dec ret push lea imul sbb add dec scas mov add js push imul xchg hlt sbb leave pop and pusha aaa push rol jge adc adc roll and hlt add mov sub cmp clc loope popf (bad) repz push xor shrb fildll aas xchg test mov add mov dec mov out test in or mov jb fild cmp sub pop imul insl das jbe in bound cld add jb (bad) repnz pop xor inc mov xchg inc out pop in lret and xchg mov bound test fistl jo dec dec nop push jb push inc scas lahf sbb push adcl inc out leave enter clc enter scas test dec inc mov (bad) pop sbbb push mov pop pop fldenv out and iret cmpsl jecxz mov loop outsl inc fwait cmp mov inc push movsl or pop or pop cmpsl and insl iret cmpsb lahf dec add xchg jne ret jmp xchg push add negb jno push push sti lea mov fidivrl mov fisubr xlat stos adc sbb mov xor rclb dec sbb add pop cmp mov sub (bad) or sub scas test pcmpeqw pop or fisubl (bad) add push and int3 shll adc jb lock sbb cli sar lock dec call mov mov xchg imul dec (bad) adc mov mov dec (bad) or adc (bad) fucomi xor repz rclb cwtl xchg incb xchg insl sbb fwait sbb sbb divl fldenv stos decb add lcall dec and cs jae xchg add fwait mov je sub in sub popf mov lahf into jmp and lds sbb (bad) jb imull ljmp xor inc mov push xor mov cmp test in lea jecxz and les call loopne ds clc imul iret adcl (bad) dec cmp jo stos pop mov cmc jge push pop jecxz and int3 aad sahf push jmp cmc (bad) mov inc xchg xor adc add aad ficomp inc mov test cmp stos pop lahf inc sbb pop cld pop (bad) mov movsl mov sbb push sub out iret jmp xor stos (bad) movsb cmp sbb std orl js xor cmp lds mov jns add mov push aam lock andl add ret (bad) or dec and pop into fcmovnu clc lret fstl stos cmp sarb (bad) call aas sbb pop inc push orb lods enter jae mov inc xor xchg test pop jbe sub mov pop ret arpl and addr16 testb adc sbb lods fsincos out pop pop ficomp mov or jge xchg pop cmp orl lret add cmp mov jmp into jmp (bad) dec pop ljmp pop xchg outsl mov cmp loopne stos mov xchg jmp mov js inc push mov and cmp sub das pop push rolb cmp add cmpsl stos mov xchg bound cmp mov lret xchg sti pop leave cmp push gs add push sbb pop xchg push mov mov popf fnstcw adcl jecxz mov inc stos shrb jno xlat xchg cmpsb and pop out mov outsb jmp (bad) jmp cwtl andb sub add insl sub push mov jae scas add aad mov aam cmpsl dec rolb in mov sbb ficompl push jns shrb negb push sbb addr16 and fcoms flds mov jmp fildll aas mov dec xor jl mov adc imul leave cmp mov mov adc mov test dec mov add es cs ret lock xor xchg fs sbb pmaddwd mov test loop incl cmp push inc jmp pop dec add std jp arpl mov mov fnstcw fistpl in insl adc pushf pop movsl jmp xor and xchg mov jo in lret push adc push sub sub pop or add insb add jno pop push adc out (bad) fsubrl pop mov xor nop dec out cli movl (bad) repz mov mov cmc pop xchg mov lds mov mov test mov stos in xor and push fdivrp push push jno mov mov cwtl and (bad) dec (bad) ret adc pusha xchg mov xor outsl adc or mov test jns call inc mov pushf loop (bad) mov popf orl stos dec cli and cmc repnz cs int mov mov repz imulb stos lea push mov pushf jb loopne (bad) mov (bad) sub pushf mov or (bad) divl sbb mov and inc and andb dec push jecxz pop lock xor sub cmp adc mov inc or sbb or pop mov scas lea and pop roll loopne jmp mov lds test lods fcoml outsb add mov sub clc cltd pop pop cwtl (bad) addr16 xchg ret jns sbb xchg push sti inc movsl sbb or xor mov out nop dec daa dec xchg cmpsb ljmp or sbb mov cld mov stos repnz and dec pop or jecxz in dec (bad) lods push (bad) xor (bad) dec and cmc shrl lret popa mov ret pop add outsl pop jp adc jns mov dec sti mov xchg cmp pop add scas pop sbb aaa or mov mov push outsl in jg sub fwait push jge sbbl sub bound mov icebp and jnp fwait mov ds fstps and and jne xor cmpsb push loop (bad) dec fucomp inc in xor pop rcl popf sbb or mov jp xchg iret lret xchg hlt ja ja ficomp inc mov in push push lret adc inc iret cmp cmp jno pop mov push mov adcb fcoms push mov (bad) repnz call test (bad) je xchg test call pop adc mov in push cli std or pusha push push aam sbb xor jge mov popa in jg repz cmc test mov sbb push sub ret mov cld repz test iret test xor pop inc dec fwait insb lcall call cmp pop (bad) movswl jno pop cmp rcr jne push aaa sub cltd je mov ror cs iret or fsubrs xchg mov xchg and imul sub or xchg test xchg push push aas pop sub mov movsb lods out pop cmp or rcr mov and sbb mov xor pop pushf fucomip (bad) je and pop mov and lahf mov cmp repz mov fs out dec adc mov dec pop push cwtl jne outsb fisubrl (bad) cmpsl aad xchg (bad) (bad) jbe xor add (bad) out fs out jns cmp xor mov in popa rep dec aam fistpll int3 loop cli sub dec loopne roll ret fsub pop inc push insb adc rcr repz daa adc nop xor mov scas and adc pop rorb push inc lods enter xor stc sbb in (bad) dec sub cmp sbb test loopne pushf or dec movsl mov clc pop mov imul mov (bad) adc gs clc xchg test lea adc jle call xorl cmp push cltd gs add inc mov lret ljmp shll mov mov inc inc andl mov sub mov xor mov repz icebp mov adc jge js push add (bad) das loope arpl push sub inc push pushf sbb and dec call scas xchg mov inc cmp xor mov sbb mov jb les mov sbb decb in dec ljmp outsl xor pop add mov add xchg call xor cmp cmp or subl mov cmp pop movsb out cmp adc cmp shrl (bad) xor jbe (bad) mov mov out inc mov add jno dec data16 mov mov popf cld pop jecxz and ret dec or sub int3 pop aad adc and cmp nop sub fldt js call sbb cmp jecxz insl xchg sbb adc mov jb xchg cmp repz sub sarb xlat adc call lcall push cmpsl loope (bad) sub lea xor jae mov addr16 or bound pop arpl lea sti sbb popf in mov fist imul pop icebp inc (bad) xor cld (bad) in mov in inc add dec jecxz mov (bad) nop mov add mov lds pusha call clc mov xchg cmp loop xchg inc lret aas dec xchg popa lock sahf or xor scas stos pop addr16 xchg add fmuls pop je add adc jb inc or stos mov push pop mov xor lret or cmpsl in jp std jmp inc lock xorw push push lret in jo scas int3 outsl mov mov and inc or xor mull or dec std mov vlddqu je sub imull sub jmp or jne ds cli (bad) jno (bad) push mov lods dec inc xor and add sbb push xchg cmpb test cmpsb dec ret scas in inc outsl (bad) push cltd mov (bad) cs (bad) sub pop jp add lcall fs sbb cmc jb push lods xchg fxam mov and inc xor jae and pop ljmp xchg jno push and mov imul push add dec cmc imul les jl insl lret fs popa (bad) xor xlat dec fcom inc pop mov (bad) fsubrl imul and pop std xchg popf pop imul jmp and call inc xchg xor adc loopne sub outsl loope neg xor and rcr mov call or arpl xchg xor and je cmpsl push arpl mov jle loop sbb pop lcall das push jne fwait dec pop sub fisubl test mov fwait and xchg andl daa lret and inc push mov shrb jg sti sbb inc adc test sub cwtl popf xchg (bad) mov or jl push mov sbb mov jne cmp inc xchg mov dec or loopne cmp scas sub rcl subl xor ds out int3 aaa dec xlat mov dec fcompl sahf ds lret dec cmpsl in das sbb add jle enter sbb cmpxchg in imul in int xlat adc fwait nop jle jl sbb clc lret jg cld sbb push cmpsl (bad) sahf add icebp aam pop and sub je enter fsts hlt xchg mov mov push adc cmp cmp (bad) or out pop mov adc adc mov (bad) inc adc jns movsb notl dec subb sub dec fucomi incb aaa jne mov fisubl cld sbb sahf fnstsw ljmp xorl fs sbb sbb insb cmc dec dec imul popf insb add jbe scas rclb push shr jne loope addb insl imul repnz adc jmp jmp dec scas add inc push test xchg sub insl dec movsl mov movsb sbb dec mov and mov sahf mov in push xor enter mov push cmp insl dec andl pop lods lahf pop pop mov xchg push movsb jl dec pusha into xor mov cmp fidivrl mov fisttpll xor (bad) and loop in aaa push add or pop adc dec xor mov jb ss cmp ss (bad) cmpsb movsl dec dec add (bad) scas or dec je xchg mov pushl popa ficom or adc movsl scas arpl and and pop sbb cmpsl clc inc push ret test mov xor scas rclb test insb icebp push mov jb mov push fcos and rcll out out jmp xor scas mov popa jge int3 pop mov xor decb fs mov xchg fadds add mov cli push and inc shlb mov cmp fs es xor insl add sub cmp pop add cmp and adc movsb nop add pop dec mov cmp cmc into bound gs mov pop pop mov loop je sahf outsb mov enter jns,pt lock test xor fsubrs ss hlt dec lods inc fdivs xchg jae in in loopne mov sub imul sbb jo mov test cmc dec dec or cmp (bad) xchg or out es stc xchg pop pop add cltd mov push xchg ss stos out pop mov mov add dec sbb in sbb pop cltd mov mov push cltd test cmp test aaa in ds in mov scas jg ss movsb pop ror (bad) repnz cli jo test mov sbb int add pop aas outsb mov inc leave lods inc es (bad) mov loope repz jl pop xchg ret xchg iret add jge xor mov lods data16 or pop push les inc pushf jp xchg movsb popf sti cwtl lds fild xor push dec in je push ret mov sub fwait enter sbb enter pop mov std hlt mov pop xor inc (bad) lock dec lahf mul or push or mov sbb add add push and (bad) adc sub cmpsl lock or fsubrs (bad) xor cmp jbe cmpsl decl or push repnz mov jp sarb rolb xor nop std imul mov push cmc int rcr test cwtl sbb test das push xchg outsl jo pop inc pop mov inc xor fcoml adc stos into lods idivl leave cs add pushf jno pop imul lods lret inc nop adc ja bound stc sti shr inc hlt sub or cwtl xor pop pop mov add sbb cmp xchg push inc dec or or adc scas xchg adc ficompl lods pop cmp cmp rorl mov push (bad) cmp xlat outsl jne pop lods pop mov (bad) sarb (bad) mov int3 rorl add imul repz adc outsl popa mov mov mov sti pop push out push inc cltd mov inc mov leave scas pushf jae sub xor inc jle lods push stos jbe xor jl iret movsb xor insl inc movsb push mov mov stos jbe pop sub mov xadd test lock dec insb loope xchg cli jnp inc insl inc inc mov mov xlat imul cmp addr16 into mov test and pop adc jmp cs cli or xchg lret mov bound push sub mov xor or mov mov call pop scas xlat sub inc int3 fistpl test mov fadd mov sbb or iret push cmpsb mov inc das inc out mov dec arpl stos into inc push mov inc (bad) je imul lea insl cld or vmwrite dec push pusha fiadd scas dec and inc call or lods fbld lods loop repnz add pushf js cmp and loope and xchg hlt lods sti (bad) leave mov mov cltd cltd js stc or das hlt adc shll and pushf pop (bad) add ret push call xchg jne pop cld mov adc adc fimull jle cmp lock insb mov and adc mov add jno push adc and pop out adc aad lods push scas in adc jmp inc notl mov testl or enter xor sar or pop rcrb bound jmp and sbb test jmp dec pop add mov test dec rcll aaa pushf int lods in push movsb repnz jmp mov push jno aas lock or (bad) shrl rclb mov mov enter xchg test inc cvttps2pi xchg int add mov push stos jne jp mov fwait lret jle sbb cmpsl cmpsb (bad) scas subl lods negb or inc mov mov outsl cli add call loopne mov repnz stos (bad) push and sub lret test fisubrl sub cmp xor bound pop dec mov push test and jbe push rorl in (bad) lahf pop sbb mov int add cwtl es xchg aas sub sarl xlat into pop fdiv inc or dec pop add lock jo cmpb mov lods mov imul sahf jmp in call dec ret fsub mov pop xor add mov leave imul dec loop (bad) xchg leave vmovapd pop adc inc cmp cmp (bad) adc or mov fisttpl test mov jge sub mov add popa add jns push inc stc popl dec push pop sahf mov or sub clc mov cmp adc insb xor and das push mov lods xlat iret movsb loop lock lock int mov dec mov out test fldcw cmc xchg push jns call arpl popl loop inc jb sti pop sub test cwtl push rorl adc (bad) xchg in add insb pop adc out loop and xchg adc jg inc aam sub fidivr cmp icebp imul adc dec inc sub jecxz stc xchg mov (bad) je mov mov movsl cmp inc lcall inc sub cltd daa loop push cmp test jmp inc adc mov test jecxz add push sbb add mov fistpl inc adc dec loopne dec ss xchg inc jg mov dec pop add jno rcl mov adc addr16 (bad) mov cmc sahf or mov or pop fs idiv cs mov inc cmp shr outsb dec cmp dec inc and cwtl push insb ljmp jp sbb xor jecxz pop xor pop sub jp lcall xlat mov cmpsb scas mov cmc dec dec aam cld loop cwtl push xchg pop cltd lcall xchg out test and out (bad) pop and call xor jnp jbe mov (bad) add cli push push cmp mov test cmp lock stc or push and dec xor stos xchg pop sub push xor dec loopne xlat mov loop or and xchg (bad) movsb add lods int3 movsl xchg sbb popf int3 out or xor (bad) push mov mov ds out mov dec aas inc ss std adc call ret arpl and pusha loope jns subl js and cmp xor adcl xorl mov ret pavgw inc stos pop icebp inc shl jecxz (bad) jp repnz pop fisub daa mov pop cmp jl fs mov test pop daa (bad) jno jmp adc insb mov push and ja test pushf int3 jp clc mov imul xchg pop mov jns lcall mov mov fucom sarb inc mov push or cmp adc push test mov sub push xor imul jbe,pt xor shrl pop mov mov jge aaa dec push xor sahf pop outsb mov (bad) sti lock jbe sbb xor jb sbb (bad) frstor jmp push mov cld pusha lods jo popf push dec push mov daa cmp mov and or dec (bad) xchg add jb ret add jecxz repnz xchg das sub cld cmp stos jns mov cli pusha das fdivrs or imul mov lret adc popf mov push push or or jns in mov push imul dec add adc push sub jae mov data16 mov mov mov cmp inc mov iret outsl mov in mov push arpl (bad) or pop fisub lea cmp in (bad) sbb mov jb inc jg daa lock add (bad) jns inc enter xchg bound dec outsl ret sti mov ret or fsubr sar insl lds sub inc inc repnz popf or jg mov out xor test or jle pusha (bad) mov or ficom adc dec dec sbb lcall aaa add pop movsb mov sbb jg mov push ret adc (bad) imul jbe cmp adc cmp repnz lcall rolb jle mov loope out sub icebp arpl or repnz and mov jns stos gs mov mov sahf mov ss (bad) sub lret add in sub bound inc movsl and push mov push xor popf iret inc cmp push in notl dec mov int3 fidivrl fldl2e ret adc sti insl lods ljmp in lret decb push or adc mov (bad) mov sub mov test inc stos mov xchg dec repnz dec fmuls lods jbe (bad) sbb inc lahf dec test add gs lds clc outsb daa test sub sbb addr16 cmpsb mov add pop xchg scas in lret leave rorl adc sbb clc mov std mov pop lock jae std (bad) arpl enter inc mov xchg sbb (bad) jmp mov mov inc xor xchg lret das out add cmpsl mov rclb pop add or cmp aaa js and fidivl movsb and jno lar xor dec incb addb lods cmp les stos xor or daa arpl mov lcall jge xchg movsl fcompl test inc jl inc xlat (bad) icebp dec pop popf or mov mov push xor lcall dec mov outsb and cmpsb mov pop popa jmp or outsl or adc (bad) js outsl dec adc bound add push jo,pt jg or add stos scas mov stos xchg loope insl (bad) xchg lea mov sub incl cltd cltd scas cmp loopne movsl sti adc fcoml pop adc cmc sbb or scas rcll dec adc pop (bad) sbb sub add (bad) sti pop ja push jae daa cmc imul mov aas imul and pop rolb push cmp and xlat stos xchg lods add mov sbb jns repnz cmp ret (bad) out jb flds xlat (bad) dec mov mov sbb ss xor cltd jo (bad) xor mov add xor scas cld pushf mov stos mov sub enter mov loope inc inc push add jmp add inc pop sti jb xchg add sub aas or xor sub lcall aas shlb in adcb fadd mov mov dec (bad) out mov outsb jns push shrl mov and loop leave push ret int3 mov mov inc ficompl xor arpl orl or mov ltr in shrb fsubl mov xor xor and push insb lock int pop js imul rcr mov inc adc inc push sbb mov frstor pop jne pop aas adc leave inc dec jp jbe ret movsl dec mov mov stos mov cs dec dec lock imul imul add sbb aas xchg mov sub xchg ljmp jnp or cmp cmp mov into dec xor jno push loop in pushf jg sti bound xor add add add fnstcw stc lock dec jl call inc sub (bad) int cld clc (bad) bnd test leave ret dec inc fistpll lcall lea aam or test sbb cmp fisttpll push adc or dec (bad) jmp push push int3 hlt es mov test es xchg fidiv xchg int int fild xchg rorl pop mov shrb clc sub and in std imul dec fildl xor iret inc and cmpsb mov (bad) mov loop nop clc repnz mov in or inc and daa adc jle (bad) loopne out mov stc out into daa loop and test (bad) ret xchg mov ss loopne cld ja xor inc lock cltd mov cmp inc jnp push push pop dec mov nop addb and in sub jle cmp dec xlat pslld aaa in cmp in popa pushfw mov or mov lock xchg cmpsl xchg pop inc (bad) ss jo mov imul loop jmp mov push (bad) cli ja and sahf or pop test mov xor shlb push xor jno rclb sub movsb push push mov pop stos push scas inc adc adc adc pop sbbl es in or dec ret mov xorb clc cs mov loop es or xchg outsb (bad) (bad) ds push popa movl xor or dec and rolb aas aam dec mov adc fstpl test mov mov mov cmp mov add enter in cmp or sbb add mov mov push fsubp push jnp push cmc mov lret mov fstps icebp cmp mov sbb sub push mov inc and jmp fiadd xor mov fiaddl (bad) cmp outsl popf insb or int mov inc mov pushf in nop ds hlt and enter ss jmp js adc shll mov repz pushl jmp mov fildll aas sbb (bad) sbb jmp xchg jno jno xchg mov sti (bad) dec pop cwtl jb dec das xchg in xor jne and fsubp jns or add jmp (bad) jo les negl ret push adc sbb cld jb jne sbb (bad) mov insb lock (bad) push push lahf addl sbb repz push dec xchg in mov daa or cmpl mov data16 lret cwtl mov mov in add pop cld xchg stos aas cmp (bad) jecxz stos outsb adc (bad) mov ljmp or gs fldt dec iret add lahf sbb iret int push movsl in add int3 enter adc enter mov out pop movsl xchg loop lods xor addr16 lcall hlt cmpsl mov or mov adc cmp sub mov aad or and cwtl push mov mov rcll xchg ret subl lret push out loopne mov sbb jp pop push bound inc les jno mov cltd sahf add leave ret imul pop stc stc jecxz ret into repz ljmp inc xchg mov out mov cmp fiadd jno addr16 test or fstps xchg or ds sub add je push outsl pop adc popf xor enter outsb bsf xchg push mov rolb (bad) sarb sbb cmp lret lcall or enter xchg out (bad) sbb lea dec xor sbb sub pop mov out fdivs jl loope push out dec mov lods xor (bad) pop or iret lea mov shlb daa mov mov and mov jbe mov mov loopne aam add mov dec movsl add xor lcall pushl mov mov sub jbe pushf cmp mov or fs adc loopne xor aam mov cmpsb adc (bad) paddsw ja lods inc out sub out or mov xor movsb or and aaa mov xchg mov push imul js inc pop or sub jp push clc hlt das push xor push xchg xor pcmpeqw in aam inc add sar fisubr addb xor pop or or cld scas mov xor sbb cli cltd lds lods aaa andps xchg loope cmp add or cmp mov inc into pop fs inc out std xor std inc sarl lods adc cmp out mov arpl ret (bad) cmpsl push arpl and pop (bad) dec in mov mov ret pop ja mov int3 adc lds enter mov popf pop cmp (bad) jmp fisubrl mov xor xchg call fucomi into xchg pop fistp lret fildl daa test pop aas fldenv imul push (bad) cmp int lret sub in xchg das jp mov es fdivr loope aam jg mov loop dec das shlb mov out pop sub or in and push xor add xor jmp adcl push cmp js add dec repz jecxz pop pop sar test sbb fbld mov push addr16 jno push rclb mov je mov or inc sub jmp imul test daa and fwait and mov mov pop sbb cmpsb jge mov mov lret push or inc xor mov and dec repz shrl imul add test pop xor mov mov push mov sub cmp lahf stos dec mov xor inc ds jne ret (bad) repz sahf jge jecxz pop push ret outsb dec mov and mov fbld or pop xlat jns test iret fnop push ret sub pop sbb sbb sub ja lcall pop scas cmp dec xchg push adc pusha ljmp mov push mov jns push aad jno iret or dec jecxz xchg push fcoms out xor push fdivr sbb (bad) movl sub (bad) xor cmova cmp loope mov and pop or cmp loope jbe dec lock fstpt jg xlat aam ljmp pop roll je testb xchg jae pusha jl mov mov cmpsb es stc lods (bad) pop xchg std pop daa add xor fnstenv dec mov shll pop adc xchg flds inc pop lods lods xor inc movsb jb hlt dec lret and rolb xchg not mov adc cmpsb dec sbb jecxz cmp repnz mov popa sub cmpl movsb jns and fisubrl mov add sahf push test call xlat sub jp lcall dec stos movsl pop mov outsl gs ret iret mov push cmpsb and jo out lahf dec sub cmpsb pop dec add (bad) repnz push loop (bad) push into xor cmp stos (bad) adc cmpsb cmpsb dec and cli ljmp jge add in jbe sbb cwtl in mov ret bound das push bound scas xor cmp jecxz or sbb jno hlt push test lock js imul push xor (bad) mov aam outsl mulb (bad) sbb out adcl pop xlat aam mov and mov mov repnz jmp sbb fstps push gs inc and (bad) stc sub push or dec pop cs adc or push int3 lret por dec inc adc mov jle cmc cmpsb push ljmp pushf add loopne mov xchg sub (bad) dec adc sub cli (bad) xor hlt ret aaa xchg popf fsts nop ss push jb mov es sub mov mov mov adc mov sub pop inc stos adc add movaps lods jmp and and or ljmp lea add mov mov int scas fs adc loop mov imul test pop push inc mov adc push inc jl jno aam lret jnp in add in ficompl xor cmp or (bad) dec adcl lock and sub jnp gs sbb int inc sti stos inc xchg js jb popa push cmp push imul aad or xchg (bad) repnz pop sub (bad) repz pop jno fistpll mov enter loopne daa out or insb movsb cmp scas inc push cld test push mov dec icebp loope out frstor popf arpl cmpsl xor cmp pop rorb push mov ret inc and pop mov fmuls std mov dec pusha roll pop cmc aad aad pop repnz scas rorl jnp lret sbb lret adc in xchg mov sahf gs dec pushf ss inc jle xor sbb sub in (bad) decl or mov add cli outsb into adc pop mov lahf cltd int data16 and (bad) xlat mov movsl and les sub sub push fsts lahf iret mov mov out (bad) sub inc ficom pop mov sar mov (bad) sbb xchg dec adc dec pop add inc pop faddl push xchg pop add rolb lret mov mov push rcll jnp cmp mov hlt scas std inc and int3 inc add cmp dec cmc test gs cld pop xor out push cwtl and jge cwtl (bad) xor or xchg ss xchg mov pop addb cmp push mov jg cld or stc popf les cmp test jl data16 mov pop ficompl shrb mov fidiv test mov sub pop in xchg and pushf mov push mov push jbe mov out mov out sbb (bad) icebp in or push in mov cld addr16 fwait push push cmpsl rolb push aas jmpw nop push jmp and pop adc test rcrb mov test sub mov sub pop aam pop lods korb mov sti pop gs add data16 jl sbb mov and cmc push mov in mov sbb mov cmp pop daa daa xchg xchg xlat xchg outsb imul fucomip (bad) leave jae mov rol jp adc add cmpsl lea dec sahf mov or lahf dec mov cmp inc fs (bad) fsubrl push daa mov (bad) lcall xor push push pop cmc std mov pop andl test loop not movsb js jecxz cmpl jmp loop jmp adc scas push fistpll adcl xchg lret and sahf mov test adc aam push dec mov cmpsl je mov inc insl pop xor xor add and xor dec lods xor cs pop fstps xlat mov add test loope out add and dec popa dec dec rcl pop je enter je jns std dec fstpt int pop cmp or inc in mov dec xchg fcomi adc xchg cmpsl pop mov outsl ss mov out int3 inc je add dec enter enter mov sub and pop dec test stos in es push (bad) mov xor pop pop cmpsl ret add jne pop inc jnp test bound sub sbb sub loope add lods les enter mov sbbb sar hlt xchg dec add or stc push push jge (bad) fistpl lds into aas (bad) sub negl scas adcl lea sub popa jne jbe repz xchg cmp jg and push mov repz xchg loope fstl and xor aam pop and mov loop lds and jmp fsub repnz adc inc inc xchg call inc sbb cltd pop in cmp das and push clc xor scas pop pop add fisubl lret inc sub mov mov push inc jecxz sbb jne xor dec pop mov mov add push scas orl fwait sub xchg xchg pop mov add aas fcompp js dec jne sub aas jns movsl xor movl loope (bad) sub cmpsl dec pop cmp add test and arpl bound pop inc jge,pt or mov negl rsm shld outsb insl rcll xor xchg mov out (bad) mov or hlt scas xor push cmpsl pop xchg out ja adc (bad) lods push movsl push test fnsave (bad) jmp nop aad xorb mov (bad) in and cmp cli imul dec and push enter ja jno sbb jmp js in leave aas add sbb sbb inc xchg (bad) and testl jp js cs gs mov ret not adcl fnstenv xor pop out jo nop in inc addr16 inc dec sarl mov and mov fldt jge fs jge lahf cld jae inc xchg incl in jmp adc lret sub mov stos gs push pushf iret mov pop adc dec xchg jb adc mov cmp shrb fs jmp inc jns pop adc (bad) xchg mov mov repnz mov arpl into mov hlt loope repz jg lret push enter iret and mov and and pop dec xor aas mov pop in push sbb and xchg insb sbb mov pop push gs repz sahf int3 mov sub jge fnsetpm(287 out inc in sub ficompl sub xor xlat (bad) sub sub stos or push (bad) sbb scas xchg dec mov fisttp scas push fwait mov and xchg mov cmp sbb mov jg dec fstps ret push and jnp jns aas jle fwait pusha movsb decb push jmp repz xor out mov pusha loopw addl and loopne test lea sbb into aaa int3 mov mov stc push (bad) cmp das daa fbld jmp jae dec (bad) jnp pusha mov scas lock arpl nop out dec hlt lock subl or cs icebp lcall or dec mov mov sub jb push aas and popf jle push cmp jns gs and and cld hlt and stc mov int3 and cwtl hlt in push cs scas and jnp popf incl and xor ss xchg popl imul sbb jb add dec mov jns and in mov xchg jp mov fucom imul daa fildl or pop icebp hlt jns dec fildll and repz imul xor movups xchg mov and lret testl mov xchg cmp push nop mov pop xlat inc xchg jl jno pop sub inc ret jb mov je sar fisttpll aaa dec out or xorl cmpsl and and mov out jg adc scas pop pop mov shrl jp and aas clc and pop mov jno (bad) (bad) xor out mov adc loopne (bad) loope pop pop and insb jns dec imul adc dec loop test nop xchg je cmpsb imul movsb js (bad) les sub or add ficoml xchg movsl pop ret jno cmpsl fldl and push aad and cmpsb cltd add enter dec or mov inc dec inc pop inc fstl sbb xor loop add mov jo movsl xchg int sbb cmp jbe hlt jg or mov jns jns sti fnop rolb out stc in cmpsb aas loopne sbb add mov fstpl jle fmulp jbe stc loope inc cmpsl adc xchg sbb inc and mov pop adc add xor add mov sub dec fwait lock push dec push xor fsubrl test inc or and jns cmpl and pop in pop jmp lds cli mov mov pop sub push ret gs icebp fmull jmp outsb mov cmpsl sub aam xchg sub test cs jl sub test add push in adc mov adc jp (bad) (bad) lods dec test sahf add add cltd testb pop leave pop xor sub push add or lahf xor xchg scas sub neg add mov js lret int mov inc scas mov sub jno jmp push cmp fsub and mov das cs (bad) adc push cli xchg stos gs adc jae in scas call xchg andb xchg push add mov pusha xchg pcmpgtb fwait and cltd push xchg cmp push dec and cltd lret imul inc and dec int3 fcmovnbe jecxz loop mov cmp cltd fcmovnu subl mov pop (bad) push dec dec test inc push loop sarb push int pop cmp sub das popf outsb mov icebp cmp insl cmpsb loope sahf pushf addr16 ficom mov addr16 sub sti das pop out or sub (bad) out sub pop adc in mov push adc push or jmp sbb jae fsubl pop notl adc cli jo pop loop movsb movsl pop mov dec inc idivb nop push push xor jge rorb sbbl push pop ds lahf adc subl pop je lods push xchg arpl xchg push mov mov daa pop and xchg mov sbb ficomp sahf cmp (bad) xor mov nop or cs shll push cmp test or jae inc mov cmpsb inc add sbb jg mov and aam or mov or ret pop cld stc add clc mov aaa pusha pop test cmp test ljmp clc js repnz adc pop jp jmp cmp mov pusha cld (bad) ljmp cmp lahf (bad) pop cwtl or adc dec in int3 (bad) repnz cmpsl cmp bound es (bad) movsb vpunpckhwd adc xor jne cmp push mov mov fmull rcll test jnp stos arpl nop cmp and or fiaddl outsb mov dec fdivs in or sbb xchg and push xor pop and repnz pop jbe sub push ret jp mov test jle movsl mov push mov and enter mov xchg mov pop insl mov pop shr jmp stos mov mov ret lea sbb ds cs sbb shr add scas je fs in or add ret ds mov fidivl mov mov mov std mov or add int3 insl je push add fmul cmp cwtl negb jns inc inc dec jmp or sbb movsb test cmp pop repnz pop adc pop adc (bad) inc iret das sahf pop stos xchg (bad) jbe mov xor outsb shll add sbb sbb in sti xchg mov pop scas mov jp loop mov xlat pushf inc popa shll sub call repz insb ljmp test aad cli imul int3 pushf (bad) push pop insb push and (bad) cmpsb js addr16 in pop mov stos stos push add add mov jge sbb orb shll dec ljmp push aam mov xchg lret gs inc mov outsb (bad) add sub movsb lods mov sub out std aam inc mov movsl out mov xor inc mov cmp inc jno fistp xor sbb xor pop outsl push je nop data16 mov fdivrp sbb incb pushf mull sbb mov cmp ljmp psubusw gs loopne inc outsl out mov iret sub push lret insb je sub inc test hlt iret fldt enter inc stc cs (bad) inc pop aam mov mov and push jmp fistpl xchg mov fcmovbe jo fs je inc imul xchg sbb xor loope mov sbb xor xor mov xchg mov inc add add adc sub inc in sahf js in sbb mov cltd ja lds ljmp in mov pusha mov test inc and popa pop xor in repnz pop pop in bnd jbe (bad) je xchg dec xlat add or push test leave inc pushf adc in pop (bad) cltd stc push ljmp ljmp xchg cld ss push jmp adc mov dec xor push sbb push subl push cwtl pop scas je enter xlat mov out xchg sub les pop lea addps shr (bad) pop sahf rolb lret (bad) pop or out enter (bad) test or and dec inc clc mov lods xchg leave inc xlat daa mov push in mov cmp xchg testb xchg fstpl daa dec daa inc test sbb stos dec hlt cli adc and (bad) data16 mull jnp jae jle call inc int dec and repz in popf movsb sub inc pop add lods sahf dec iret mov out jne jne xchg sbb xchg aam lret sbb sub lods mov dec or or inc xchg push adc fsubrp fadd and fstpl iret arpl sbb dec fwait inc ffreep loop xchg and push out inc dec lea in mov cs sbb leave mov xchg leave pop icebp out jne dec subb fcompp and inc dec pop jne roll inc imulb rcrl int3 adc mov jl and btc or mov inc xchg jno or or paddsw (bad) adc jg cmpsb push xor mov (bad) out or inc out fnstenv sti mov lds (bad) mov jns cwtl (bad) icebp fcoms pop add jge pop pop iret out push test xchg pushf cld pushf sti or adc scas push imul clc or loopne fxch iret in sahf sbb mov clc mul test adc pusha push jno repz movsl sbb into loop dec outsb divb or (bad) pusha pushf mov (bad) jg,pt (bad) dec xor jecxz push adc aaa sub sub and adc adc mov cli out add push scas and and mov daa in xchg adc pop adc cwtl push and nop in mov lods test pop movntq pop mov inc dec out mov mov out rorl cwtl push fimull pop cmp hlt popa dec mov mov xor adc dec jg inc push cli mov cmp in ret push inc jge mov and pop push cwtl into adc pop lea mov (bad) sarl mov in (bad) out pop psubsw rorb shr xchg inc pop sbb or push dec sbb (bad) push mov fisttpll sub or sbb dec in sbb jb mov lds aam roll xor daa sub mov ljmp push rcll mov data16 outsl adc xchg adc or adc (bad) xor jle adc inc out jne sub flds iret outsl (bad) aad pop push imul lret add push out addr16 jae hlt ret sahf movsl adc mov aam push xchg repz mov cmp js add aaa call jo movsb std sub cmp arpl ret mov leave movl cmp push cmc insb or xchg jle rclb in (bad) fisubl out arpl mov jns sbb pop or clc arpl and scas sbb adc (bad) incl aas hlt pop push bound fmull into xchg dec cs add mov lods jnp pusha or or add dec mov bound xor bound nop mov iret mov sub add mov sub (bad) mov mov or ss sbb cs enter test cmp pushl lock test cltd sbb in mov lods cs mov mov fcos cmp jge mov push xor or push scas push incl xchg (bad) and mov inc loopne dec sub xlat xor mov and sar fwait mov sub mov xchg jmp jnp sahf in loope add add sahf pop gs xor jle sub jns (bad) mov xlat mov or lds stos push pop lret les fist mov mov nop and iret jo jns into leave in cwtl mov movb push push mov lcall dec pop data16 nop sbb push dec and test repnz pop push pushf adc mov push mov divb (bad) pop ret leave jp stos jmp xor jns sbb rol int3 dec jmp repz mov xchg icebp dec add mov xchg and and mov jnp movsb call pop scas mov mov test push xchg test jmp cmp inc jecxz aas jo inc adc mov int pop pop cmp ja or jne xchg into lahf ss sahf or lods loop jae or adc pop push cli adc leave leave inc inc sbb cmpsl stos adc arpl in mov insl pop add cmp or inc and (bad) scas sub mov push sbb lahf decl mov mov stos fbstp mov sbb mov in insl inc inc push pop lods dec jp and lret movlps sub push jns vpmovmskb mov sub in sbb repz or push inc adc mov mov or cmpl mov outsl dec mov out insb test xor fimul push repz (bad) rorb repz or packssdw xor mov mov cmpl xor add cmpsb jmp pop mov pop into leave lea mov mov dec sub push iret scas insb orb mov js sub fnstsw dec xor cmpl mov adc jbe push lret imul xor cmp add adc adc out mov std inc add rolb mov pushf (bad) (bad) xchg sbb adc enter push sub cmp andl mov insl lock inc pop imul adcl mov sub jno fidivr pop sbb cmp mov gs scas icebp add sbb push sbb test jge mov rcll sahf mov icebp fyl2xp1 cmpl (bad) push stos insl sbb cwtl movsl jp cmp mov mov dec jmp sti (bad) mul leave dec mov das add dec add add fildll mov xor mov jecxz aad mov fisubl or es pop cmp push in dec lcall sub mov ss pop mov js cmp jg xchg sahf decb xchg imul mov inc pop and inc add test xlat shrb xchg dec jb xchg pop push pushf mov stc push nop cmp adc bound inc push add cs sub out push adc cwtl sbb inc mov ljmp add je or push mov sub add adc mov xor aam cltd mov mov lret cli test fucomip iret int mov add mov das rclb rorl inc mov inc pop or popf pushw xor sbb xor js scas cmp lock cltd sub insb jmp pushl add jmp (bad) aad xor shr jae fwait mov icebp mov mov sbb les adc xchg sub out movsb jns cmc mov mov or inc xor movsl aad push js adc rcrb movsl mov mov stos hlt out addr16 pop xor add mov cmp gs insl fsubrs jne mov add arpl shlb pop pop and jo xchg popf outsb jo (bad) nop daa cmpsb pop pushf jp pop outsl cmp mov cmpl sti and insb jge imul xchg (bad) fistpll jns add aas push and mov jo (bad) lods iret mov movsb adc mov clc push das adc enter arpl dec mov imul cmpsb jnp pop ror (bad) cs jo sbb popa cmp repz (bad) (bad) and push (bad) cmp gs cmpsl pop push aam loopne or mov pop fidivr lea leave push and hlt out cmp dec bnd call push and xor push jnp shrl movsb fwait push loopne sbb jl sbb icebp push repnz les xor lea cli popa inc mov or in out inc fisttp inc ja push gs test roll (bad) push xchg xchg add in mov mov push clc cmpl ss adc movsb insb pop into je pop xchg fwait pop mov sbbl inc pop and addb mov data16 imul inc sbb ss mov arpl xor cld and fistp jae sarb jbe fldenv mov jg adc rolb xor mov adc jecxz lods push add mov ret jg (bad) xlat (bad) jno and mov lahf adc ret jnp (bad) cmp cld xchg mov mov adc loop mov lcall ds cs adc sub jecxz xchg lea testb mov out (bad) dec notl mov out mov gs lcall pop out out sub pop dec hlt cmp ret mov mov sub cmpsb lret mov dec jl inc push sub lret xchg inc push push dec into fs stos mov cmp dec outsl push pop psubd cs push xor lods arpl aas jle shlb clc or std inc pop ficoml add shlb xchg adc sub dec fidivr cltd (bad) push mov scas or arpl lcall jmp bound mov cli flds push or push icebp push xchg mov inc lcall ja jbe hlt mov dec mov mov popa sbb inc sarl or sub push lret ret push push cmpsl or cmpsb repnz mov adc and jb push imul in sub gs fwait or cmc and les sbb adc push and push popa (bad) je cli rclb push push stos std movq ds leave jns (bad) sbb adc cld jle push mov push ds repnz lret lods mov push insl ljmp loope mov rcrb out stos adc sbb push push mov das inc insl dec mov (bad) je movsb adc adc or out stos ret and jl xor iret mov mov fs int3 ss dec and push stos out inc daa push fcoml dec sarb popa repz mov inc sub leave xchg cmpsl roll test jo in mov push mov pop hlt stos shrl dec repnz fcomps (bad) add les mov mov mov rcrb popa (bad) fsubrs ret lods xor mov mov cmp and clc ret dec xor or xchg push or stos push imul mov mov loopne movsb stos xchg or jae rcl dec dec dec mov bound inc lret jae ret fsubl icebp lods adc push js rcr fnstsw fcom rorb mov cmp sbb das call push shlb divb cmp int inc pop sub ja fs or aad scas cmpsb and int outsb mov fwait jb dec jnp mov add aad insl cli inc stos lahf in aas and loop cmp and push test push fmulp pop insl mov pushf sub sbb jecxz loop les shll dec mov xchg inc and rorl lea mov cmp adc call dec push mov hlt fwait jae mov bound add test lods rolb jns sar push lahf mov fdivrs punpckldq rcll pop fwait movsl mov sbb push andps cmp fdivs insb sahf mov sahf (bad) int3 mov adc cltd int3 outsl outsl outsl sbb lretw fs push mov dec cmpsb sbb sysenter jb xor js (bad) sti and les ljmp popf fmul pop ljmp xchg iret nop jo outsb jo stos lret (bad) das cmpsb xchg or pusha icebp lret imul jl ja (bad) movl fdivr clc push or test in push cld cli add cmp add insl add insb inc and cs aaa mov xchg andl or loop cmp in (bad) mov inc add cmp add dec dec add cmp jmp cmp out es dec call in pop shrl mov dec popa roll push aad mov push mov repz cmpsb dec (bad) loopne aas xchg cli outsb inc xchg xchg cltd movsl loope jae aad mov sub jmp repnz incl lea push adc jg rclb (bad) call bound repnz (bad) push movsb cmp loop das (bad) mov loope jecxz push pop loopne insb pop cs pusha out add xchg test (bad) repnz ficoml and add push sub push mov test insl push sub jge rolb dec sbb cli sub push (bad) je xchg cltd test sahf aaa jecxz dec or jb jbe,pn sti mov fs aam push pop ret xor cmp incb add mov jo or adc cli (bad) fisubl xchg xor int mov mov (bad) mov fs enter lahf sbb pop xlat adc or lods xchg pop jbe cwtl mov test adc push push cwtl jae pop movlps lret pop lea pop push lcall ficompl pop dec and xor dec mov (bad) rolb rclb movsb dec adc push in int mov sub out sub dec call aas xchg lahf lea int3 sti cwtl adc adc xor data16 inc push jnp inc shlb dec in push jecxz inc aas loopne sub or fnstenv sti adc cmp pop inc insl xor data16 sub inc lcall shl jle jg movsb push pop and or stos (bad) lret sub mov inc xchg jp xchg push pop mov mov out inc inc mov shl jp and test mov pop (bad) test std pop adc ja pop xor cwtl dec mov fcmovnbe (bad) or xchg push and xchg aad or ret jbe and cltd lods lock adc inc push stos lock push aad fmuls pop into sbb aad push pusha xor push test cmpsl dec or rcrl jbe lcall sub jo mov xchg subb ss push xchg pop movsl push or jl in (bad) cmp insl aaa (bad) push or imul cwtl enter scas push aad add inc rcr test imul int3 popa out or scas push sub outsl inc stos pop int mov inc jge xchg addr16 lahf test rolb (bad) xor sti pusha push ret pop push push mov dec dec mov lahf lods dec loop jo jb inc mov and int stc add inc adc pop data16 stos bound dec adc inc stos adc scas mov movsl and mov (bad) stc jl ror rolb dec dec mov inc aad mov addr16 xor arpl cmpsl lret mov addr16 jo arpl scas adc sub mov pop popf clc pushf les arpl and jle aad (bad) push push fild aad aas mov push pop lods inc lods pushf and sti sbb xor mov (bad) fnstcw sub inc out adc xchg icebp xor xchg rclb push ret and xchg mov inc ja je mov jno or das jg jae jne xor sub mov push mov inc inc sub mov inc mov rcll fisttpl and flds aam clc mov sahf or add and nop jne in mov cld and (bad) sbb inc ret inc leave pop ljmp std int3 xchg mov enter dec imul adc sbb or dec xchg andb sbb pushf clc hlt mov aaa mov inc aaa enter ja or cmp mov jnp cwtl mov stos and lea cmp data16 xor pop sbb hlt insb subl lcall jne rcll mov lods cmpsb push in add push sysret xor vpmacssdqh call in push fstps sbb dec cwtl movhps push cmp rcr inc mov fistl lret test mov adc xor or (bad) loopne loopne pop push daa js add jp add (bad) fisubl movsl sbb inc lea sbb pop ss cwtl dec ss pop inc or pusha inc loop loope int pop loope push jmp add stc aam out inc in or pusha pop sub mov loopne jmp lahf fistpll sub mov fdivr dec out push dec inc dec mov mov inc mov pcmpeqw jnp and inc fadds sarl pop jge pusha out je cmp add and hlt pop jp or ds add sti push mov aaa jno lods xchg jns scas sub pushf dec sbb into sub aas xlat sub (bad) sub das clc or out push dec stos pop pusha lret push jno dec ja mov jg xchg js (bad) aam shll push add xor out xor add mov test nop mov aad ret jnp or leave test subb std rcll cmp push xchg cmp and and and in and stc pop fcomps pavgw or mov xor adc push pop psubb mov jae inc mov push pop dec sub xchg sbb xchg lock or popa adc (bad) ja jecxz enter out cmp mov add xchg push jo jns pop jne sub jecxz scas ficomp inc jns jg out flds fisubl rorl mov adc movsb mov or xorl lods call pop into xor adc push pushf and ret cmpsl xchg push imul mov xchg cld mov add sub mov rorb push mov xor xchg aad enter sti xchg and pop dec pop sbb inc push scas (bad) xor ficomp mov popf imul push cmp push adc dec jne sbb test mov jmp daa sbb and mov cmpsb sbb sbb mov push movsl je mov xor xchg in scas test pop jp sub pandn mov frstor into dec adcl inc mov jecxz les cmpsl lds outsl mov test jg mov sub xchg sbb ret or cmp mov dec test xorl fsts cmp inc mov cli fldt popa incl fwait nop imul mov int3 mov dec sub test in lret sbb int xlat lods xor jmp push (bad) xchg mov or and outsb sahf pop test outsb fisubrl add jmp and adc cld pop dec jp inc test pop mov out (bad) movaps add push xchg xor mov test and cmp in jb adc imul out jle daa and fisttp push loope adc sub push cltd mul xchg pop nop sub xchg xchg jmp popa movsl test movhps cmp into jo pusha outsb aas xchg stos in dec mov test and adc sahf icebp test adc xchg int and outsl incb ret out loope fmull sahf or in rolb movsb aaa dec xorps stos cld sub sbb inc fldl mov inc push lahf ret cmpsl (bad) lahf push mov push sub rcl push fucomi pop icebp test xchg loope xchg cmp imul add or fisubr xlat cmp pop mov outsb es add idivb fldcw or and jl test xor jmp push push (bad) ds pop inc add stos aad jae push xchg in aaa sbb xchg aaa das pop loop je pop insl jo jbe mov jb repz xchg mov int3 jns jg int3 scas pusha inc js sub xchg add les push (bad) xor add adc imul repnz and mov xchg inc sahf mov inc (bad) sbb adc push testl arpl out push cmp jno pop mov imulb mov xorl push stos and sahf push mov jae out into xchg mov dec lret pushf mov sbb loope scas data16 push es cmpsb xor mov arpl popf jge,pt xor pop fistp sti cmp stc data16 addl daa pushf sbb movsl xor scas aaa leave inc (bad) (bad) std mov adc cmpsb or shll add inc mov out fidivrl sbb out stc cmp jne outsl aas push int3 loop inc fildl lods xchg ds mov repnz test pop iret mov sbb xor push lret ljmp and sub xor (bad) loop repz sub dec scas push ss dec (bad) sub je sub or fnstcw xlat mov bound (bad) out dec int3 std test out testl push inc test mov dec ljmp jge test adc out cli outsl sbb mov push lods lock scas loope mov push sub into sbb xor pop sub jo jge outsb push sub cmc popa hlt xchg int3 push out xchg int in scas mov and mov test in loopne push jmp dec cmp sub pushf mov mov loope addr16 mov inc insl cld dec jno adc stos sub bound shrb inc inc sbb or lock jl movsb jne lret cmc or (bad) cli jl clc shrl xchg movsb and and stc imul leave fadds jge popf mov push icebp pop fwait sbb xchg xchg sbb in push sub cs sbb neg cmpsb jnp int3 xorl mov sub and (bad) loop mov rclb cli xchg out cmpsb ss jge mov push fcmovne pop dec mov and mov jge (bad) xchg adc dec sahf mov mov aaa sub push (bad) stc dec test adc andl cmc (bad) xor lock adc push lods mov (bad) cld pop test xorl ds jge mov mov cmp fs lods inc pusha dec shrb or xor test push dec (bad) stos jo aam mov lahf xchg xchg jno enter enter std sub xchg insb pop lods pusha xchg dec push or mov or mov loopne pop sti aad (bad) lods mov (bad) aas iret mov imul jae xchg ljmp test push mov fstpt ret jecxz fwait mov push gs lea popf jp loop insl sub dec mov sahf into xor lods push inc inc lea push ja sbb mov scas pop out lret or pushf mov cmp cmpsb outsb cld dec imul adc lret int3 inc fcoml pop add adc dec hlt aas (bad) mov pop cmpsl in xchg lea xchg push fwait sbbl jecxz dec repz xor inc cmp xchg mov cli pop sbb orb mov jp sub push mov ret mov xchg inc inc insl mov (bad) mov mov jne sbb stc dec sbb mov jnp lret pop or invd clc mov pop cmp jecxz cmc repnz clc ja push insb sahf push dec sbb ljmp mov cmp push rcrb lds cmp inc xchg jecxz mov cwtl loope cmp neg lcall cmpsl lcall cmpsl add ds xchg or jne add inc test leave xorb xor nop cmp cli jb lret jns icebp xor xchg jno stos add std movl adc gs es jg cmpsb mov in inc push push pusha bound dec sbb inc bound jle inc or jp sub mov bound addl xor jecxz push nop gs cltd lock mov xchg mov aam adc or js sbb movsl mov add pop pop dec ffreep icebp scas pop pusha stos sbb ret fs lahf and adc (bad) popa stos lods mov mov xlat shrb repz xchg cmp sub test xor out int decl jecxz sbb rclb clc int3 push sub imul inc mov in movsl movsl (bad) dec std inc inc inc fild (bad) ret sub jge insl jge pop js rclb mov pop and arpl notl push sub and xchg mov enter cwtl add test mov fnstsw jmp mov lds push in sub mov and push fisttpl test mov xchg jns cmp xor or cmp and inc icebp arpl mov in mov out hlt sub and mov xor jns repz pop movsl lods subb dec jmp jmp push sbb sub das rorb push jb (bad) dec pop adc cmp out pop arpl jne sbb or (bad) movsb test xor lods decl xor test xchg mov rorb mov inc inc sub aaa push cmp lea xlat movsb sub mov fcomps jb inc cmp insl leave into iret in xchg in mov sub clc scas mov push daa mov fs or in mov xor mov (bad) cmp and les notl iret adc jge sub push das jp movsb lods mov fistl (bad) fld xchg jo mov pushf (bad) std pop (bad) ds cmp or ds test push frstor arpl leave jmp push stos out pushf fsubrs cs cli sbb rorb rcrl mov or mov mov dec or pop pop pop int3 jnp cmp mov in sbb add cmp mov aad rolb (bad) pop lea shrb inc (bad) mov jle in imul inc adc mov in (bad) mov xchg repnz (bad) sbb inc pop dec fstpt or push jg loop sub std jne mov and dec dec add adc lret dec sub icebp sbb inc outsb mov sub subb push jno scas pushf bound pop pushw in lock inc cmp lahf push fwait out aad mov mov mov test ret fildl lods mov gs out (bad) into push sbb cs or cmp jae lcall out mov mov movq lcall add sarb xchg out mov leave js jno test and pusha imul xchg mov add mov out enter add stc xor and jge jae jecxz mov mov popa ja cmpsb inc cmp jno dec and and lret sbbl sub mov jae (bad) movsb inc decb jp dec adc mov or decl in lea ja pop mov push lods mov and jg cmp je mov addr16 cmp and jns push (bad) and adc decb in ljmp scas cld outsb mov int3 js rcll inc pop fdivrp jb add int aaa xchg (bad) jle sbb mov int sti or arpl jle pop std xor jp dec and std ficom pop daa push imul push mov fnsave in add sub cmpsl stos enter xchg sub mov cmc sbb push js adc mov mov gs xor enter pop fsubrl ds mov out andb adc xchg push clc pop lret sub dec jns dec inc adc enter jno or (bad) cmp push jne cmp dec xor and and cmp enter adc pop mov testl xchg pop adc cmc xchg xchg mov lret and push loop add adc orl cmp stc mov inc shrl repz adc lds xchg lds or fwait out (bad) test sbb shrl push add or add fldl int3 xchg (bad) pop sbb or in leave xchg pop scas mov mov hlt sub aas dec adc mov mov je push lret mov ficom jp sub out test scas push jb stc inc inc mov fnstsw cs sbb mov or iret mov mov in adc das sbb jge leave or sbb push movsb mov mov or mov adc gs decb dec mov and xchg data16 or add mov incl pusha jae mov aad pop cmpsl loopne sbb aas in lcall mov pop loopne add push sub push mov je jp sub iret sub fsubl dec mov jl sub inc (bad) cli adc cmc js push sbb ret adc hlt aaa xor sub or jg inc (bad) xchg sub jle pop push jbe or pushf or or (bad) aam jno movsl sbb les sbb movd fist mov jl test shl xor cmpsb jmp xor leave mov loopne sub fcmovb jns jle adc jmp and cwtl add cltd icebp sub loopne stc cmpsl xor or lods es inc testb cmp out enter arpl inc cs leave inc inc mov lret mov sub ret mov sbb out mov mov addl pop mov pop popa aaa pop xor sub inc ljmp insb lock add lock sbb push cmpsb inc cmp arpl sub rclb inc dec and fwait and mov xchg in pushf push lret lods and (bad) lret fisttpl add or std in jg cmp or shrb xchg repnz rol push rcll ror daa and jge xor rcrb mov cmc pop lods stos add add push lods cmp sub loop or inc data16 inc mov jne (bad) mov pop es cmp jg es mov inc sbb cmc (bad) sub js loop pusha cmc lock lea push mov mov or xchg add cmc sub or les mov dec push loop dec fbld push and push jl (bad) enter dec sbb and int3 adc sub mov dec je aad mov or xlat and stc add popa mov pushf jl xchg lock loope lds mov mov ja xchg xchg mov mov lret in les rclb cmpsl xchg mov sub adc test aas jne xchg fisubrl stos xchg fstl push das or gs call mov std mov xchg jg cmp popf and repnz cwtl mov cmpsl jecxz add push dec iret inc in inc dec in mov call lcall out leave mov xchg xor mov sbb adc xor mov mov fisubr sub mov xchg cmp pop cmp shrb mov mov bound imul or sbb out ja lods sbb fadds lret and dec inc ja xor sub add repnz inc xor xchg push test les xchg xchg dec sarl aas xor and out shl mov call in or pop or pop mov adc pop das sbb cs push push or pop lds xor xchg stc (bad) icebp pop push add pop sbb negb mov add dec add icebp xor sbb in or loop adc xor (bad) stos and mov in inc push ret push fnstsw pop (bad) mov negl or push loope mov dec int mov jg dec jb pop negb stos push pop ret jle inc nop sahf xor test ficomp mov sti mov and sbb popa push ret sbb mov iret xor jecxz and dec push cmp xor test mov cmp cmpsl pop jo push pop sbb pop sub mov push imul adc out push adc inc xchg cs jle and pop pop lcall pushf (bad) cmc in or popa (bad) mov inc fwait cmc pop and fwait jg sahf scas jle xchg sahf ret jecxz scas imul and mov inc jno imul mov mov scas adc sbb imul pop cmpsb (bad) addr16 jo add sub mov (bad) cld jecxz test popf out adc jg lods push je subl or cmp dec push inc outsl pusha jae mov scas std rorb cmc mov data16 test xor mov (bad) (bad) ficomp jge icebp hlt xlat sub push jb cwtd insl cmp lret imul sbb in lock (bad) ss enter lret dec dec daa cmp mov ret and fs out repz pop add cmpsb jae mov fistp pushl mov bound mov enter xor lods jne inc lret cmp adc jmp inc (bad) ja adc stos mov dec fldenv lods sarb imul repnz cmp adc sub jge scas mov pop xchg clc xor pop lods fmull dec push add cmp cmp inc andb cs sbb jb in mov dec pop push shll and mov das and cmp adc mov sbb std jnp xchg (bad) mov dec push hlt and sbb push pop scas out lahf push call cmp mov div (bad) xchg sahf push xor lahf cmpsl or bound es movl mov mov mov add lods mov pop jns pop mov lret enter test sahf mov sub pop pop cmp cmp ret inc add cmp ljmp pop add mov jg mov frstor lcall jmp loopne lods fisttp mov pusha mov fistl xchg test repz jns,pn inc insb lcall dec or cmpsl ficom pop xlat lods push lret ja xlat dec aaa jne dec int3 fwait (bad) cli xor or push out (bad) xabort sbb dec pop pop dec mov pop sbb cmp mov inc leave lods xor cmp jo std ja rcr sub sub nop ds mov add sub mov je and adc cmp pop lcall sbb shrb arpl sub inc call fistp ficom mov push push cmp jle sbb xor push leave in adc xlat cmpsl jl inc (bad) outsb les sahf cmp lock outsb mov arpl jb cmpsl (bad) jbe (bad) pop mov add cmpsb add push lods hlt sub aam pop mov fldenv jnp sbb push adcl rcll mov or mov and les jp add jno mov cwtl out lea loope adc jl adc jmp dec je mov adc lods rclb test (bad) mull (bad) and (bad) mov xchg dec outsb inc ret or jp mov push inc and aad jnp jbe xchg xor pusha fcmovne pop jbe cmp cld and pop push and ds popf mov adc mov (bad) out test pop lcall test adc mov pop adc mov sub add jno scas (bad) sbb xor pop popf adc mov jg rcl icebp xchg test push jle add jmp adc and das jno js inc test scas or jbe scas out sub movsb add in cmp push (bad) shrl mov xchg sub xor mov xor insl adc dec (bad) xchg sti xchg repz mov adc popf loope sub mov lods insb lods inc mov out lcall pop addr16 mov mov push xchg lock xchg jne outsb ss mov daa fs fnstcw enter roll xchg push call add jg mov pop cmpsl fadd sub pop xlat mov ret inc pop out push add jne das jge int3 shrb fildl adc sbb jno inc shlb jb sbb jle push pop sahf or mov jl cmpsb into mov cli and sub insb dec jbe xor (bad) mov cmp dec and adc jg out cmp push pop aas mov mov jmp pusha adc fbld mulb outsb sbb mov test inc add jbe xor inc sub (bad) adc jae addr16 clc sub xlat and ficoml inc lods loopne fbld insb xlat pop loopne pop sar popf pop cmp (bad) iret lret adc push mov test test sub cmp inc push orl pop test popf cmp mov push daa mov cld pop xchg jmp add or loop push push lahf flds sbb or mov dec outsl add mov push leave fldt in scas push xor mov push mov test fwait add das pop mov sbb movsb sbb cmp add fist mov outsl inc bound das mov lret add sbb outsb add out mov sbb insb sarb int3 imull das adc outsb pop xchg cmp (bad) shll popf out mov mov lds and xor pop scas cld leave jns mov xchg out or in adc cmc and jb adc nop jg adc (bad) cmp push fnop pop fcompl outsl mov jmp push pop add or push push stc jae sub in xor cmpsl insl rcrl cli aaa mov insb dec jne inc aaa mov inc xor pop mov and mov fs repnz pop cmpl mov in push cltd sub inc loopne add push scas repz mov mov push gs (bad) or xchg aad popf fcompl fstpt int lahf push jp sub xchg and mov ret nop rolb pusha pop mov adc mov int pop sahf dec je insb mov out and push inc clc testb xor (bad) movsb into lea cwtl cli leave mov mov cs cmp lret pop cmpsl add add sbb mov enter aam out and arpl adcl enter ror mov popa in nop ja jmp (bad) inc dec lret insl and fnstsw sbb test nop or mov jg movsb fwait daa jbe pop push cmp insb sar mov push pop adc lds das xchg pop imul dec jno test rclb iret jl test daa aad out jo push jg fmul aad into test movsl mov pop test iret fdivr leave xor shrb inc mov lds or inc les loopne xlat xor mov xchg jno adc (bad) out call adc add int aaa xchg add ljmp push sarb int3 jno das jecxz hlt mov sbb imul and fildll (bad) xchg pop xor xchg lret xchg xchg jmp daa std dec clc ja cmp cwtl pop pop test jnp sarb and add xlat inc cli fcompl inc fs sub mov or sub (bad) jmp and data16 pop push cmp mov scas inc in into xchg stos pop or and mov call adc ret adc xor sub mov push mov ret jmp push jns mov cs xchg mov mov into jle add inc push and adc pop or cmp add lods and adc xchg adc inc ret jns jbe jae adc gs scas mov cld js mov lcall mov es adc jnp or inc or lahf das ret push in pop xor outsb cmp or (bad) addr16 jg xor mov (bad) mov lret ds xchg je js movb (bad) add in push ds sbb nop add sahf call dec aaa sub mov pop mov pusha out icebp adc data16 lods add (bad) xor sbb leave stos icebp mov mov pop dec es inc jmp jp insl or inc repz popa add cmc cmp and lods jmp jmp jg jl outsl bound (bad) je mov inc or jp lods int3 daa adc lods mov lds lahf xor and sti fwait cmp popa sti in mov mov popf pop jg cmpsw daa mov lock (bad) aas xchg xchg or xchg test inc mov lcall cmp sbb (bad) mov jae es inc scas pop or rcrb (bad) cmp fwait icebp int xchg imul inc cmp stos cmp dec jbe xor or dec in mov or add fimull push cs inc movsl imul (bad) jecxz xor xchg sbb mov cs or and adc mov add fstpl push divl popa in pop mov sbb cwtl loop jl outsl fldenv out lds imul push pop pop test pusha call push fs cltd fcomps inc pusha and jmp fisttp loopne mov jecxz mov (bad) mov gs pop xor mov lcall mov xchg cmpb or xor hlt int lods xchg dec aad add and std pop icebp adc out loop sarl je xor test dec jae mov jmp lret and push into in daa pop into loope std adc ds nop cmpsl or mov mov f2xm1 out aad es pop mov pop loop mov std (bad) xor movsl lods dec xor into push roll popa mov lds in or dec inc or inc cli add mov push rorl rorb je push xchg clc in pop (bad) jecxz jbe test scas and jmp cmp sub and inc or dec jmp pop lods cmp int js and sbb imul int3 inc xor iret cmp lods sbb test add jge (bad) pop mov rorb and into stc mov stos mov sti insl xchg (bad) mov (bad) and inc imull xor sub sbb adc and sub mov add insb pop scas fcoms loop icebp dec inc aad sahf int3 into lahf nop (bad) xor iret and into ja test cwtl into sti lret call mov pushf test dec mov pop iret mov leave dec mov xor cld out sbb (bad) mov xchg data16 inc xlat ss adc cmpsl mull sbb shrb push mov addr16 imul (bad) push mov adc rorb iret inc lods add push (bad) or jg daa cmp insb inc mov push test cmpsl jb mov rol dec arpl rcrb jmp loop push mov loop cmpsb adc lds xor or and sub jmp das out xlat ficomp fcmovu cltd jp inc insb lahf mov arpl orb mov rorb adc hlt add cmp push jno imul inc add cltd imul imul movntps xchg adc sub dec cmp sti js ds dec pop rolb or mov or clc in das pusha cmp fucom jae xchg mov in mov roll dec lcall dec cmp movsb fldcw add sbb pop adc into or lcall cs (bad) xor add cmp and (bad) cmpsl std std pop pusha movsl sbb pop lods adc lock sbb movsl adcb push cmpsb mov push (bad) ja add sub sub cmp push imul dec fwait pop cltd (bad) or or mov cmp mov aad ss lock inc dec inc cmp sahf mov test xchg cli and inc outsb xchg push inc dec add (bad) pushf pop or jae loopne lea xor movd pop push lret (bad) dec cmp dec cmp ss pop mov daa pop lds mov sub aam xchg inc std fdivl mov or imul xchg outsb sub pop push ret int3 dec paddd aad (bad) icebp popa jnp xor sahf dec push ret inc js jmp into mov sbb out xor mov rclb popa dec cld rcll out and mov adc outsl lret lods inc daa bound lds jmp retw lock jo bound (bad) repz insl or inc andl das ljmp pop fistl push sub pop xchg fucomip scas mov xchg std lods shlb aam lahf xchg mov aas ds hlt add adc xor pop cmp dec sub stc (bad) out out out test cmp int xor mov bound (bad) sbb xchg dec push fsubs das std jecxz jo hlt ret mov mov inc jnp es aad sub add js xor or pop inc inc jg ret popf dec sahf add pop mov cli out pushl cli mov cmp mov test mov out ds sub xor das ja sbb mov leave (bad) cmp arpl in movsb pop mov inc dec cwtl jmp (bad) fst addr16 insb rclb js je xchg insb ja mov pop adc mov mov mov bound pop aaa xor pop or orl push in je aam cmp jns int notl sbb jbe mov push dec inc push pop ja jge fbld push mov in dec int3 in inc add push cmpsb inc inc cmpsb push inc fidivrl pop (bad) jno cmpsb adc (bad) ficom fnstenv jb stos mov dec loop jbe and and gs mov cmpsb xchg push pop enter xor testb shrb rcrl jecxz loopne js sub pop adc lcall xchg aas (bad) lods mov push dec and in mov mov xor dec imul (bad) push mov inc sarl inc push push adc mov jge add aam sarl faddl cli adc mov xchg jo mov xchg mov sub icebp mov out adc sahf or inc xchg add mov jle and rcl lret jmp movsb mov testl add mov jno stos jg (bad) cmp dec psllq aad jne inc jae outsb pop imul fisub out jle xor or out ret push (bad) and push test adc adc adc sbb mov (bad) cmpsb xchg (bad) or (bad) sbb fbld mov dec arpl adc (bad) mov cwtl mov cmp mov aas out cmp inc dec dec cmp xchg and or lret sahf mov dec add pop loop icebp scas cmp sbb mov (bad) and in daa lds dec add shlb test dec rclb (bad) dec ljmp rep cli xchg push pop insb int3 inc or jae iret mov xor mov aad jne fldt mov add outsb pushf lds and popf aaa test add pop jp test inc stos mov pop loopne xor inc push cmc mov xchg incl rcrb sbb mov pop jle out sub jg fnstcw xor lcall or jp sub push or cmpsb cmp int fdivp jg cs xchg fst jl popf jbe adc ss jg imul mov xchg (bad) pusha cmc pop cmp pop lret out clc jns bound int3 xchg repnz test mov cmp fidivr and push mov xlat push inc mov xor pxor fnstsw jecxz inc push sub adc pop dec adc dec clc aas (bad) iret imul insb push lods ja jns xchg adc mov les mov sahf push fcomps push movsw js je sub push mov or cmp loop clc pop jge (bad) das and pusha push cmpsl (bad) fwait xlat ss notl pop fsubrs or mov inc add fisubl mov lea dec call hlt jle cltd pop sbb xor dec push add daa iret mov dec and arpl cmp ljmp js jmp sub divl xchg shrl es mov flds jb and sub gs pusha jb xchg hlt fiadd loopne xor mov add out loopne mov mov (bad) mov pop movsb mov sahf lods pop and js nop mov cmpb and jo lods (bad) push rorl sub inc or in xor mov dec pop fucomi (bad) loope js cltd dec sub sub into pop (bad) xlat in inc movsl mov push sub jecxz fadds (bad) xchg mov notb cld arpl sbb in imul test mov clc (bad) ja sub es xor in jg adc add adc loop clc sbb scas add jbe aad pop test mov inc loopne cld jne lods fs add test add mov mov mov or push jnp mov mov nop push js fsts cmc (bad) leave dec scas xchg repnz sbb push jbe dec dec mov inc je cmp lods fist nop jle insb push jbe out jle test inc sub jne f2xm1 shrl or icebp jbe lret jae fdivs or test cmp in (bad) (bad) fs and sahf jno mov jno (bad) mov xor mov and xor dec push in stc pushf clc fldl loopne adc xchg int3 mov inc fs imul mov xlat sbb lods add adc xchg push or stos xlat cmp and (bad) dec cltd lahf xchg push sbb in cmpsb movsb xor add out dec mov xchg mov test or (bad) in psubusw push xchg das clc xchg inc cmpsb sbb mov xchg push inc imul scas xchg mov outsb xor scas dec xlat lods lods lret inc data16 or mov fldcw dec inc aas sub xchg mov mov out lret mov mov in push iret xor push das mov sub xchg bound jp cmp lahf xchg int int3 push xlat mov iret enter push and aas (bad) and scas dec mov and xlat xchg sub dec push jnp das push jno push mov mov xor pop cli lods or push jb sub shlb sbb inc fbld dec out pop ret insl pop fildl adc (bad) pop xchg cli lcall (bad) lock fldl mov enter jge cld jmp dec test leave lretw loop stos outsl cmp xchg or dec mov xchg and (bad) and inc mov es xor push mov ret movb jno dec hlt mov stos or call sarb pop jae jmp and or inc je xor scas out test xchg outsb rcrl add int3 lock aad int loopne (bad) mov add mov imul in scas movsl sub push stos or jge data16 ret das aam cmc clc add ret xchg enter cld aad xor popa aas push pop push into xchg imul ss ret (bad) mov test test sbb pop inc and les dec sub dec fstpt rcrl movsl and sbb loope cli dec call sub adc loop lea popa orb lds int3 cmovnp outsl stos mov mov or stc jb mov incl sarl outsl and je jge fistpl out inc test in pop insl dec pop fsubrl xchg (bad) mov and stos shl xchg pop push setae push fdivrl (bad) cmp sub rclb add sub push and xchg mov stos (bad) push pop push popa lret add clc gs in add dec lock mov outsl jo rclb cli jl je pop imul sbb adc sbb rorl lret cmpl sahf inc popf outsb sbb or pop rcrb aam in inc adc and aas xor stc idivb popf dec xchg inc mov inc inc inc or call inc mov cmpsl repz addb pop insl (bad) adc cmp xor sarl xchg adcl popf stos jg mov das out negl xchg lcall lods std (bad) adc in mov xchg add loopne das jmp fwait enter jmp rolb les les jg jae incb pop dec cmp outsb arpl pop loopne push xchg cmp add std xlat add cltd mov stc add lcall jmp stc mov out outsl in sub fs sti movsl icebp in mov addr16 push loopne xor push movsl fsubl (bad) imul jae inc mov cli iret movsb fcmovu addb cmp push adc push add sub jne mov aad out inc xor dec enter or mov xchg jns mull push imul sti lret xchg cmp cli std pop sub lea jp push into pop aaa mov jo out add ljmp or das pop pop cmpsb ljmp cs or and jbe fwait mov xor inc dec aaa pusha hlt lret aas xchg jl gs mov std adc ret mov nop xchg ss popf sub sub into stos outsb xor movsl mov popf mov into es outsl cmp dec pop aam inc repnz rol icebp cmp inc push adc add sbb je cmp push das push iret jg cld cmp int sub jle mov sti testl fcompl das xchg jle xor mov cmp aas cmp jg xchg cmc pusha test jno mov scas and ja dec sub lcall mov pop cmpsb imul push or dec mov ds ds inc in subl push int3 mov and mov loop out loope aaa xchg add icebp loope xchg pusha in popf (bad) lock pop icebp dec dec cmp mov fs xlat mov ficomp mov imul jp das ret add jle or sbb gs xchg inc loopne stos cmp jp xlat fcoms mov sbb in fidivl sti shlb daa lcall push lret xchg mov negb divb fnstsw int3 push and lea push pop pushf adc sub mov xchg xlat mov xor negb stc (bad) dec into cmpsl dec jecxz cmp xchg mov lea gs push mov mov inc scas and (bad) mov add or and lds mov out clc shll adc (bad) xor push fwait xchg iret fwait lock or xchg mov jbe pop pop or aam es xchg imul mov xchg js dec dec dec fcoml mov adc jno cltd inc jl fidiv ja sti stc xor xchg fsubrl push and dec clc pop out enter aaa insb fimul cmp add jp jmp pop frstor cmc mov aad movb fstps in flds add mov sti setb xchg popa jne out cld aaa inc insl idiv mov pop ja dec ja pop popf inc popf cmp xor ja jbe pop mov add jne cli lahf jne ret mov shr dec mov or fnclex dec xlat aaa mov mov xchg test sbb cmp sub subb mov mov fidivl xchg sub pop mov je sub pushf int3 cmp jle pop fwait in xor gs dec cmpsl sbb push test mov or hlt jb xchg or dec ss adcl lret fisubl sub or into or sbb cmp push aad (bad) push leave pop movsb (bad) in mov (bad) and mov push adc int3 mov mov rcll scas bnd sbbb std cmp imull dec sbb and scas pop cmpsl idiv int mov add (bad) xchg movsl ds fist pop cltd dec xchg sub (bad) pop sbb imul mov rcr xchg rolb jo rclb cltd push pop dec bound clc xchg jmp inc nop xchg mov cltd sbb (bad) shll mov push sarb fsubr rcll shrb pop fisubr mov insl scas lcall jle inc cmp mov mov aas mov mov and mov mov imul repz movsl pop ret stos bnd add pop popf pop cs pop sbbl fildll mov clc ja enter in scas push mov xchg sarl ficompl pop xor add inc mov dec xor mov cli xchg pop mov jge push mov shl js aas in (bad) aaa stos mov lods mov test push inc (bad) cld jo pop dec adc mov arpl mov pop inc movsl lret xchg fwait (bad) lret sbb icebp aaa push pop xchg icebp shll call mov dec in adc jmp popf push std pushf ret int3 imul jne leave out out inc lock outsl xor pop pop imul mov cmp mov adc mov outsl sbb vhsubps dec loope outsb sbb cmp and inc bound lea push jns in insl mov adc inc or orl mov jg loop xorb lods test test nop dec push mov push or ja test pop fwait popf mov out scas cmpsl cmp inc jge jno push cwtl mov pop pop sarb jno imul scas mov adc jnp std jb cmpsl push jae idivl mov dec jae dec outsb ret push icebp enter lock jmp inc jns repnz jno mov cmp insl std inc sar flds ret loope jmp cmp pop aad jnp (bad) mov add push inc roll punpckhbw inc and xchg xor jae daa dec sti mov sub sub push cmp adc imul imul popf lcall and pop iret push xor (bad) ljmp push push clc push into xor lods xchg adc (bad) movsb xchg push (bad) xor push dec and daa out or cltd sahf inc popa add dec xor sub push mov movsl cmc int3 ficomp and xor cmpsl add and sti dec enter xorl outsb jb (bad) dec mov cltd aam lahf inc in test mov ss repz dec insb lcall mov xor or sbb lahf mov clc fildll pushl mov frstor xchg xchg fisttpl lea lret test inc fdivs dec loop arpl iret fiaddl pop mov pop fstpt ljmp mov pop sti std push pop or mov das shlb mov xchg xor sbb mov dec (bad) cmp pop jb and sbb jbe cmp insl lods out xor imul adc rorl pop or insb cmp or inc add push sub lock fisubr fs mov jle adc sbbl rcrb sbb test call cs nop xchg mov inc popa inc outsl in mov mov ret lea xchg push call pusha push mov insl push arpl inc into in div push mov push adc out xchg es mov enter aaa add cmp jne inc add mov mov mov das scas iret int adc xor out xchg popf xchg push jno xchg into jno inc pop pop popf mov push dec xor push fbld and (bad) xor in push dec repz imul test loope dec imul jmp stos mov cwtl orl and stos or pop out add xor jb inc xor push mov add and or cmp sbb jo xchg mov subb cs test addr16 dec test pop clc ja pop repnz jae mov das scas sbb das mov or jns repz adc dec in lods inc and mov add daa mov iret jnp ja mov sahf (bad) ss mov or xchg xchg cmp cmp inc aam adc push jmp adc push sahf cmp push xor mov ret movsb xchg imul imul rcrl dec es repz push inc sbb sub lret mov cmpsl (bad) mov cmc ja push pop sub mov adc test nop pop sbb stos (bad) sar in iret cmp arpl daa mov out push cmc jns aas scas fisttpll imul fsubp jecxz mov or out jg pop mov dec pop aaa sti in mov sub xchg int3 pushf mov mov mov movsb leave mov (bad) xor push mov xchg xchg push (bad) xchg mov mov and adc mulps cmpsl pop push cmpsl xchg mov (bad) lock mov in push rcrb leave or addr16 xchg xchg stos fstps in in mov (bad) xlat ds jnp mov popa inc cmp lahf push lods mov cmp pop push cltd repnz xor dec dec sub int repnz or fs lea (bad) lret cmp test and das xlat in mov sub pop std aad mov cli push shl mov sub sbb out mov push dec jbe xor mov std out out fnsave outsl cltd lahf add add roll sbb cmp loope mov fidivrl enter mov loop (bad) (bad) (bad) adc gs (bad) cmp pop addb jno sub xor out inc or mov aaa fmull je bnd scas out inc mov in mov nop pop std inc psrad stc (bad) xchg aas fs addr16 lods mov adc mov and cmp in scas fimul pop jp rcll fs testb and sub sub rcr add jae dec adc stos jo lahf cmp daa pop adc scas test push in test xchg add mov sbbb dec jnp add ljmp sahf push xchg ret test sub push ret (bad) popa cld icebp aam out mov cmc mov lcall or imul cs push xor ljmp out pop mov jne int ljmp mov xor fistp push inc shll scas and cmp push in fs fsubp das or sti or push jo push sub jbe jbe mov flds xor nop imul pop mov add and cltd xorl int3 jp and lcall push movsb sub push push xchg hlt loopne xor push (bad) dec xchg (bad) jno jnp ret dec pop lods xor sarb and jbe test and jns push pop jns ret int3 lods icebp std cmp xchg push cmp xor mov lds ss imul into xor dec in jge sub (bad) pop mov rcll lret xor inc (bad) sbb sbb add cmp push and jl enter cwtl and test xchg jmp neg ja or mov add int3 repnz and cwtl dec sbb cli xchg cltd lahf imull loope adc jnp aas fnstsw hlt add jno pop mul mov mov dec lea fs mov cmp clc xor push rorb xchg outsl repz test mov and push push stos je mov mov lds shlb (bad) repnz imul push xchg rorl sub popf sar mov cmpsl dec jmp cmpsl push pushf mov in (bad) sub test rcrl cmpb out (bad) push roll test (bad) mov test push decb xchg dec cmp loop mov sti push adc outsb mov out out ss push pusha inc sub out loope cltd adc push in push (bad) xor sbb imul test lret repz iret pop and data16 mov into out pushf pop mov out sbb das clc and pop je mov push cld daa stos ss mov (bad) stc pushf inc sub cmp sbb add je inc inc shrb xor (bad) sti mov outsb cli xchg mov jns mov jmp dec adc andl js and scas aas out aaa movsb jb mov add pop ljmp add test mov dec rolb jecxz and xchg adc test incl fldcw push or das mov test dec mov mov int cmpsl sbb (bad) and add lds in scas inc fwait and sti cmp add clc jp mov movsl iret inc lods inc pop enter mov mov lret sbb mov jle hlt sbb lea out pop dec mov sub iret imul fstpt je and rolb cmp mov loope sub inc xchg lds jmp lock sbb (bad) or sahf inc cmpl cmp (bad) sub add les push (bad) mov xchg mov jne mov push sbb jo fisttpl out xchg xor cmp loopne mov mov pusha popf das jno movsb inc cltd ss mov rcl and daa (bad) xchg jbe ja fdivs push sub outsl dec js sbb xchg or ss cmp dec int3 repz js mov dec dec out mov (bad) ret cld jmp fcompl je pop scas orl push into mov movsl adc push das push test pop das jmp and dec aas notl ss nop test cwtl (bad) inc adc (bad) jbe (bad) in and mov jmp mov pop pop daa cmp mov xor mov scas ret and stos jns movsb jne xchg into adc xor xor hlt mov mov std xrelease fisubl mov jne xor or xchg movsl cmp and sub push popa stos gs lods mov push xlat cli and out adc add js cmpsb adcl push outsl lds loope push cwtl cmp in jne lock pusha pusha mov in push jl dec or sub push (bad) xor mov pop out out pop mov inc fwait inc out mov sbb jno loopne cmp jns push pop dec test popa mov mov in es imul add mov lds out pop dec xchg xchg sahf jmp pop add je jle int cmpsl and and (bad) jnp push paddusw or aam pop jb mov or push add mov out xchg and mov jl stos xchg bound fsubrl push adc and popf or adc fcompp cmpl sbb lods and leave jns jne cli push or xchg ja,pn nop push push paddb mov sti les fmuls pop adc push popa cs lcall push adc icebp xor fs and popf xchg jno pop cmp ret ss adcl test pop mov jmp call push inc in mov insl and cltd lock rorb andl movsl gs divl cltd mov mov adc adc lret mov popa mov jg push (bad) jl xchg lahf sti pop shrb mov out test out leave and cwtl lock leave jmp mov (bad) shrb xor mov adc movsl call dec inc out lret jmp fistpl jg je outsb inc jmp adc std stos push cwtl or jns sti mulb lds xchg jecxz out mov sbb cmp sbbl out inc lods sub mov ljmp cltd jecxz xchg dec in or test mov xor aas dec fadds pusha addl imull std xlat sbb or xchg test sbb add insl lcall cwtl test mov pop push jnp pop cmp dec mulb aaa mov stos mov push je fcom stos xchg push imul cmpsb adc (bad) int into leave test fidiv leave cmpsl sahf and (bad) jmp mov jg hlt dec les ss nop dec xchg pop stc sbb mov in and push (bad) into repz (bad) pop ror push pop imul pop jecxz xor jo int insb add jge cmpsb mov scas shrb or cmp shr cmp push ret ss push cld xchg js mov pop lea cmpsl push std imul out scas dec mov lods or xchg xchg loopne dec jae mov jmp jl pop (bad) pop jo mov mov jp arpl mov mov push stos scas or sbb jg pop into mov cmc and lods test loopne push in pop jb sub add mov mov push jns mov dec pop xchg sbb movsl add int3 push xchg inc push add mov dec mov sahf clc mov cmp ret mov and inc push jle ljmp stos inc or cs adc cmp loopne adc imul cwtl dec or mov cmp jp stos sbb xchg rcr movsl inc out dec mov push sub fiaddl cmp cmp loope push pushf lds inc inc cli shr ficom add mov out gs lea movsl lret rcll add outsb add enter mov adc stos (bad) stos sarl and xchg xchg inc scas aas int3 pop push cld sahf jle aam cmp inc xchg aas cmpsb xchg enter mov cmp scas repz in mov jb or (bad) pop mov test jmp or mov es icebp popa pop (bad) mov mov jl scas negb push and and out mov add and cmp daa dec mov mov push jecxz push scas je fcmovnu test fcmovnb or cs xchg xor add mov in lret outsl xchg xor mov mov mov pop xor xor fwait inc jmp jae mov xorb es xchg push push or or dec int3 sbb add aam (bad) xor mov mov rolb ja pop and inc add push test test or xchg jns mov fwait in xchg out (bad) movsb and inc pop ret outsb push call push out sub cmp fist ret fimull sbb push xchg ss cmp rcll out jmp xchg out or adc insb pop mov out xchg int adc jmp xchg mov pop xlat lock pop jb add or sti fimul sub daa hlt pushf jl ret push pop jns mov jns jg add daa pop mov andl scas sbb push or push inc les (bad) ljmp sbb xor pop faddl ret faddp mov enter pop add cwtl insb inc mov push push inc inc in lods es (bad) dec mov repz cmpsl cwtl pop jmp sbb dec sarb sub fildll sub push outsb add mov int call out jae,pn mov sarb mov inc lods (bad) mov call mov or out mov int3 dec mov stos dec add inc adc fldt bound xor jle sub (bad) xchg and stos lock fldt xor cli adcb push mov inc movswl or push cmp icebp mov cmp inc xchg test pop loope pop pop sub sub lods inc pop mov cmc fdiv (bad) jno cmpb lea pop hlt pop rclb jg add fldcw (bad) bound or aaa cmp cmpsl stos lods or cmp mov xchg jnp cmp jae in xor (bad) push cmp stc push dec (bad) mov push add (bad) stc (bad) enter mov int3 or iret and call pop sub pushf lret (bad) pop xchg inc pop outsl dec push dec int3 pop xchg cwtl sti jecxz inc int mov adc movb dec mov sbb movsb adc bound mov (bad) nop leave inc jae test icebp xor mov sub icebp pop icebp mov push scas (bad) outsb fmuls add cmp jmp mov cli rclb push add xor (bad) or outsb jae push xchg sub xchg lcall scas mov loopne ret jl dec push out adc sbb dec or fistp jle test dec hlt dec push and inc sti cmc dec rorl imul aaa negl or add daa fildll mov ret hlt add xchg jne lcall mov fisub call lret mov sub xor cld lds fadds xchg inc dec dec and fcos fs insb xchg das jnp repnz cmp push add adc scas std lods sarb icebp or insl pusha sub lds sub test scas movsb mov out inc pop jl and dec sub pop loopne push inc mov (bad) mov mov mov inc jo inc popa add jb ret outsl stos dec push stc sbb jp iret enter js test mov sub daa mov movsl mov inc inc sub (bad) mov lea xor sub jne cmp dec sbb mov jae dec mov cmc jns jmp cmp ja fucomip lahf sbb inc and mov mov repz sub push stos jle movsl leave ss das jns add lret or daa arpl lret fistp mov and lret adc cmp in cmp fisttpll aam pop mov subb in sbb mov repnz movsb push out icebp movsb push int3 jnp jns mov test mov (bad) (bad) out fistpll inc fidivr (bad) xor out push imul cmp inc lock push les sub je into stos push or jb mov push lret push cmp mov test xlat mov cmp sbb nop (bad) mov in xor les fstpt sarl sub (bad) cmpsl lahf aaa (bad) or pop arpl xor mov loope add (bad) stos jae jecxz in testl xor inc lcall pop pop rcr mov pop sub mov pusha enter arpl push mov cmp or lock loop setns inc lods sub shlb and sub jb jno fwait push mov mov xorb lds dec ss and lret adc fidivl sub or stc xor (bad) roll cli ret pop ffreep cmp mov push (bad) mov (bad) mov in stos xchg out clc pop (bad) (bad) (bad) mov outsl mov pusha insl push mov push pop push adc cmpl arpl push js mov inc je fisttp out pop cmpl mull imul jnp jecxz push cmpsl lcall mov fstpt out mov jle or pop ret mov test dec gs jp and notl or adc cmpsb lret lcall int3 ja push pop mov adc rol notb out enter push cmp pop pop xchg fidivl (bad) stc cmpsl scas stos lret add out idivl adc fadds out mov pop daa mov test cmpsb sahf aad jmp sub fs fcmove pop dec (bad) mov ficoml out rolb inc sbb pop fxam push stos adc jg jmp pushf fidiv xchg test out xchg je and xchg ja sub mov mov jmp lahf stos in and lahf lahf push dec stos inc jne xchg dec sub mov sahf inc pushl (bad) fs dec jmp add add xchg xchg call xor xor ds fnstsw push dec add mov xchg (bad) jp pop add imul add std mov push jo mov cmc sub mov repz mov gs cltd pop adc scas pop and mov adc mov cli xchg pop jb pop adc pop add jne sub push add add mov pop and das fsts pop push push xchg adc stos out loopne jo mov rcll dec fidivr pop jbe in inc frstor stc pusha fs and arpl dec mov aas xor or out mov mov cld cmp dec xchg in in jbe (bad) mov lret push mov inc (bad) push adc add push jno cltd mov mov cmpsl jp les test adc ds scas mov push sbb cmp dec dec push std aad loope aaa pop stos repnz repz mov outsl sub lea in push cli das cmpsb pusha sub cmp inc push jae fimull (bad) rcr adc call sub xchg mov mov push push mov inc inc icebp sub insb mov jge aam stc dec inc inc pop xchg adc repz inc add and push out cli sbb pop ret lods shl data16 jge inc das test (bad) adc pop cmpsl jno mov stos (bad) in in sub xor jnp call cmp (bad) push stos js fucomip mov divb fucom aam dec dec and inc adc clc mov int3 xchg jnp je xchg pop jl jae dec fnstenv sti test sbb mov test (bad) enter lods mov pop add pop adc pop cmp mov js mov lcall fs insl push mov sbb dec adc pop fisubr repnz sub pusha push enter mov std sbb (bad) (bad) mov fwait sub shll and andb cmc cmpsb and notl lods xor ja fisttpll push adc icebp cmc inc ljmp (bad) loope jmp pmulhw add xor aas sub cmp or mov jl imul push and test inc xchg sub cmp or mov xor les adc cwtl fwait sbb and (bad) (bad) imul cmpsb mov lds jle push cld mov jb add inc cwtl ljmp cmp mov insb aaa (bad) jmp fdivp sub sub or cmp add jp sub mov aas or lock sub pusha push jns adc les pop mov or xor stos in in imul push lret pusha arpl inc addr16 js insb test cmpsl pop je pop xor jae mov cld test sub mov cltd xchg roll stos push or push stos cmpsb stc jle addl and arpl outsl out adc outsl sub lret adc add aaa sub int or lock push and (bad) mov dec mov sahf or int3 hlt movsl cmp aam movsl mov sbb aad or fstpl pop add popf inc (bad) or cmp mov dec movsl xor sbb sbb das jge sbb (bad) xor sarl jae mov lret daa jno xor sahf push sub or cmp test aaa ds push and sub hlt clc jmp mov lcall push or std fiaddl fistpl adc xchg or ss gs cmp (bad) repz xor adc into add popa and inc sbb (bad) jbe sub dec pop fidiv inc test adc pop cmpsl shlb inc data16 push scas mov test push arpl fwait jnp in cltd test sbb insl cmc cmc nop js ret ss int cmp and pop mov pop pushf dec add pop and push dec sahf pop cmc mov cmc push dec aas jle sti mov jae fild push pop xor cmp jecxz insl xchg jnp pop mov lods vcvtss2sd xor or data16 push jecxz and test and cmc sub jae test xchg jmp sbb pop (bad) bound push push mov jb push dec jge push arpl jge stos ds cmpps jb ss and icebp mov xor (bad) jnp and fistp fldl jmp fistpl pop jb dec repz cld in fildll (bad) cmp daa pusha jae mov xchg test lods jnp cmp lods cwtl sbb js (bad) lods jl cltd push in (bad) pop insl mov mov sbbb adc mov or sub jae xrelease notl addr16 mov mov inc daa je push add jp js sbb stos fstpt and out ja (bad) div lahf stc andl fild cli inc pop sub xor jb push xchg stos mov push mov and mov lock and xchg mov push imul xor out cmp pop sub sub cld pushf jno sahf adc add stos adc xchg jb inc mov in call rolb in (bad) js add and daa cmpsb cmp mov into pop add and imul dec call sti mov roll sbb push jecxz (bad) xor aaa cmp out adcb and inc sbb cmp fisttpll lahf inc xchg mov push fscale movsb sub pop imul fcoml das rolb jmp pop cld mov js ds popl sti out xor push in pusha insb (bad) in xor cmp das fcomps mov scas xchg or pushf mov sbb stc hlt daa in push out xchg pop jnp (bad) mov inc scas imul mov pop jmp adc (bad) iret shll inc imul aas pop stos popa imul in sbb pop cmp add push inc out xchg cmpsb or dec pop cmp in pop push mov (bad) fsubrp lret mov leave test and cmp in mov clc xchg push icebp lods mov mov movsl cld jb mov push sbb push fcmovnb aas dec xor xor sahf fldenv pop in jmp sbb xor and mov and mov mov mull cmp dec addr16 mov rolb adc jp aaa fs adc je fs push sub lea add sti jecxz and lds adc ffree mov push movsl clc cmp (bad) fdiv adc stos inc decb jl sbb add inc adc and pop push add xchg subl clc shrl (bad) mov adc mov cld clc mov and add adc inc inc dec mov sarb cmp jae sub mov fimull int3 ficomp test scas push cmp adc or jae jmp or xchg (bad) sub mov xchg mov loope dec xor ds outsb and lock mov std pusha jmp (bad) (bad) push out iret cs lret jnp dec sbb pusha add xlat (bad) imul icebp sar xchg cltd xchg ja stos es mov jecxz jns popa inc dec or test mov imul (bad) dec or iret aas pop adc call lahf jb imul mov fcmovu test adc ja fidiv iret nop jb push cmp loop cmc jmp dec xlat add insb inc dec daa test jp mov popf lods mov arpl xlat jmp fs xor xchg cmp adc ss (bad) pop lcall mov add nop mov jae lret mov stc dec adc jne inc jne gs jl mov mov pop enter and loop enter or or int fnstsw mov sbb (bad) enter popa xor or loopne lds dec sub mov mov mov xchg out jg pusha sti mov mov pop pushf fistl dec fs or pavgw mov xorb das xlat bound (bad) xor movsb xor push add or stos cmpb out leave imul or cltd in nop push push out icebp and add call and icebp adc ficompl insl shrl xchg lea das pop or adc iret sub gs loope adc jbe in cltd inc jo push pop mov xor push adc lea cmc scas in xor push and popa stos les cmp rcrl or mov adc xchg xchg jnp adcl pop ficoml (bad) fstpl cmpsb cs adc jne xchg (bad) mov inc mov add nop in jbe add sbb cmpsl cs je and inc (bad) adc sub xor xor jg int mov pop xchg call lock sbb fmull ss mov andl fidiv mov lds cmp mov pusha popf fadds fmuls add cmp push rorl in adc mov push dec ljmp mov lods sarb inc xchg pop (bad) sar mov xor mov adc push pop jp cmc loopne sbb fidiv cmp cmc sbb iret push sti xchg stos fimull daa pop mov jno rcrl lret sti mov popf jnp cwtl sub je shll and cmp scas icebp inc jge pavgb aas xchg repz sbb aam jmp test cmp leave (bad) in adc pop mov push mov js inc bound and insl mov addr16 pop ds mov icebp hlt push stos fildl stos and push push xchg xor dec imul ja inc pop (bad) js jmp es loopne cmp std daa and inc xor mov repz je inc add (bad) pop clc gs push pop stos daa shrb jle fs fcmovb mov mov (bad) notl mov cmp add int jns fstl scas xor mov rcl sbbl cld sbb outsb cmpl xchg popf mov cmp inc mov and les mov push sub popf jae xlat sub int mov cmp add jl sbb mov mov pusha in fldl mov sbb int3 aaa jmp loop rolb or xor xchg test adc cmp aam ror out jbe fsubr inc xchg cltd jb xchg imul iret add cltd cmc jmp std xlat cltd mov cmp outsl jle mov pop jo mov lds pop lahf and mov inc sub and gs xchg dec loope inc fisttp (bad) or cld push cltd imul rolb scas push mov cmp pusha cs out enter icebp dec cmp lea mov das fistl dec push push call icebp ss cmp or mov xor lret ja jge xor loop xchg add pop stos ss push pop aas iret mull sbb movsb inc push sub out bound div fwait and dec lea cmp sub notl cmpsb imul je xor pop xchg inc clc cmp or lahf leave inc add xor sbb pop mov in fiaddl (bad) mov movsb bound mov dec into mov gs cmp out subl imul pop shrb outsb jecxz adc bnd test xlat push or and mov xchg pop inc nop and add pop inc mov popa jns bound add cmpsb (bad) mov push mov pushf adc inc insb xor xchg pop mov dec inc sub xlat push aad mov hlt push push js bound cwtl sbb ds pop (bad) dec (bad) jno mov fisubrl sub push aaa in in out jno lret cwtl fdivl cmp in adc fs sub pop or mov andl mov popf add rolb pop jle int3 in (bad) adc mov lret xchg push push push cld loop cmp stos xchg add fs dec mov inc nop das xor xchg hlt sbb xor jp jl jge and jg sub mov jecxz,pt sbb sbb test mov mov sub xchg out cmp mov cmp xor and loopne arpl pop roll fildll dec notb stos aaa and mov es fsubrs jg or clc rorl in inc das stos push inc gs popa pusha int xchg pop dec mov and adc xor inc daa fldcw repz out sub and addr16 lods jle rcrb jnp gs cld aad inc popf mov pop subl push mov and cmp pusha shlb roll lods int3 lock fidivl add sbb subb sub lds xorl mov cmp fiadd and adc adc call lods lcall sbb sti pop aad push pop scas mov inc add cmp mov ficom ss and lods sbb or sub es cltd jne data16 cmc jns cmpsb repnz adc test pop push adc or or inc dec insl mov (bad) mov bound popa int sti icebp jno push cmp fidivrl xchg dec loop push rorb stc xlat es jne jg xchg outsb aas xor sbb fdivr repnz inc es andl insl sub cmp push imul movsb imul sub pop aad je leave mov mov jmp sbb fstps pusha add push stos mov aas push insl imul mov sbb and and stos and or push mov add mov sbb push adc cmpb cmp pop rcrb push adc dec dec icebp arpl jmp xchg in xlat ret nop es mov jbe aad scas push xor outsb or fsubr dec popa test outsl arpl std daa insb cmp inc or sub ds and pop jg,pt xchg jbe rcll mov (bad) add and sbb inc mov inc aaa movsb (bad) je repz repnz fucomip push daa push pop mov mov cmc adc lahf in sbb daa mov leave mov into fcoml push add fcoms fisubr (bad) inc push fcomps jmp pop jmp jns gs incl imul sbb adc xor (bad) cs gs mov stos add lods xchg (bad) mov pop pop pmulhuw inc stos or (bad) out gs stos bound mov pop and daa stos mov stos pop xchg or int3 mov add mov or subb cmpsl andb inc in jo ret pop pop mov mov daa push clc (bad) and sbb dec adc ret fldl into das mov fsubl fmuls sti imul bound pop dec cmp iret sbb and mov sbb (bad) pusha jg out ret cltd push pop cmp push sub (bad) idivl or pusha ror pop stos rclb inc stos cmp sbb stc fwait daa loopne out cltd pop push frstor movsl inc outsl inc rcl jne lahf (bad) in (bad) insb inc mov lock add inc sbb int repnz mov add cmp adc aam rclb ljmp push cwtl out (bad) out int3 mov int3 in push addr16 mov out nop test fcoms (bad) push jb dec cld sbb inc enter jns arpl icebp repnz iret add cld sub mov dec push mov in sbb movsl push sub sub movsl ret test jns mov mov pop sti ja jmp je push test cmp out test adc add nop jns cmp andb addb inc mov mov outsl inc mov sub push push cld sbbl push lcall dec pop fcmovne jl add or shrl jae add pushf lods jae and cltd pusha jecxz loope dec insl mov cmpsl je dec inc andl jge unpckhps xchg cld jmp sub jmp das xorl xor mov mov sub popf int3 or adc sbb (bad) les sbb xchg test ret lods sub rcr xchg mov sub (bad) and jge jl sarl push inc movsb movsl out inc push (bad) mov in pushf and jmp push xchg cld push outsl xlat arpl jle fxch imull pop sbb inc stos sub jecxz xchg aam (bad) xor nop pop adc cmp movsl cmp xchg pusha inc sbb jb imul mov push and std popa and repz or in mov push push push and inc in jb test and fcoml (bad) cs loope mov into rcl xchg out fsubs mov xchg pop (bad) mov mov sbb mov ja insl leave (bad) stos stos xor inc mov and insl testl sarb (bad) insb shrb xchg pop add and push mov jb sbb jge les push outsl lods dec fiaddl insl and jg inc jmp and outsb mov int3 jp add pop scas mov sahf sbb mov jge add aas xor test repz out cli test mov adc push xor pop xchg incb xchg (bad) jnp ret jns,pn repnz sub outsb mov push sub fwait dec stos mov rcrl adc out mov pop mov stos pop imul std stos subl notl and adc cli sub out lods add and lret (bad) adc gs xor adc xchg jl ss jmp cmpsb dec jmp jp mov (bad) leave cmpsb pop mov xlat fisub jb push sbb dec loop iret dec (bad) cltd mov (bad) jb ljmp movsb xor lret movsl cmp mov es out and push das cmp adc dec mov cmp lret sti lret inc insl jae addl jns call scas fwait stc aam stc out je xor imul mov sarb mov sbb push lret xor insl cli sbb pop sbb sbb jle xchg xchg inc sbb lock pusha aas sbb or (bad) out shr jae stos jecxz,pt bswap xor mov add cmp mov adc fidivl test loop xchg outsl jb loop add hlt sub clc push jno mov xchg fldcw jnp pop pop outsb sub repz mov insl jp nop pop cwtl xchg push pop pop mov push adc add fwait jmp jnp xchg mov clc or popf mov mov pop lock pop nop cs lret push or xchg sub pop movsb add hlt xchg icebp push fstp rcl in int3 pop lret pop and cmp fidivl ret pop cmp popa inc adc leave mov gs adc inc xor or lea punpckhwd stos mov mov xlat lods pop cmp rorl into (bad) clc rcrl mov push imul pop std xchg imul cwtl hlt (bad) xor xchg mov imul mov xchg ljmp jbe lock dec pop mov and es scas pop cs in push cmp in call push adc fistp pop push mov mov fdivr add jmp mov sbb push rolb jnp cmpsb adc (bad) mov inc dec adc ljmp test pop xor and xchg insl mov das scas rcl dec bnd sbb loop inc push pop repz bswap or in dec sub pop adc mov in add shrb mov cmp cmp adc xorb mov dec jp es das int3 cmpsl mov or dec popf fisubr inc mov (bad) aas push inc aam mov dec sti and mov fsubrs test mov mov arpl call mov and daa dec adc in xchg loope pop mov es orl decl add xor sbb ljmp xor sub push jp repz aaa leave mov mov dec pop test ficompl pop adc xchg xchg cmpsl fcomp pop xchg out cmpsl adc pop jg je mov xchg imul nop lcall inc xchg pop enter xor jmp or adc sub mov hlt xchg cmp mov (bad) mov adc arpl sbb mov lods int jg push aas push (bad) dec addr16 int3 add mov ss xor mov add sahf dec add stos push adc movsl (bad) lahf gs sbb cmp call jae jae lods jb enter add fdivp les mov sahf pushf ss jmp jae xchg (bad) (bad) scas mov xchg (bad) pop xchg aam xchg outsl aaa xchg stos pop pop aas fisub popl aad stos fidivr or (bad) jbe out ds xor bound add jmp stos dec mov pop inc shrb cmp xor loopne imul inc xchg cwtl mov and dec pushf adc xchg mov push xchg xor xor rol fnstcw fisttpll pop outsl mov jno ret ss in inc test outsb movsb adc and push mov leave (bad) jno in push mov aas mov je jae pop arpl push in (bad) xor jae dec orl sbb jno fs xchg leave jg negb loop cmp test add jno cmpsl repz xchg push inc push fnsave cltd movsb repz or xor fdivs xor mov inc lds cltd push push lods adc daa mov je xchg sub and ret jecxz mov jl mov ds xchg sbb xchg mov loope,pt lea fstps insb fistl fidivl lds aad xorl cmp xchg mov and mov mov data16 jp out sti lds or movl dec xchg inc pop jge mov arpl adcl rclb daa insl mov dec xor int mov mov jb mov in (bad) cmp enter neg inc jp (bad) push lret loopne adc sub cmpsl xchg and jmp hlt dec add lret fild subb (bad) inc adc pushf pushf xchg sub rorb pop aam dec xchg ds xchg int3 (bad) push rorl push mov and lret jmp mov (bad) (bad) lods or cmpl add jo stos test push dec cmp lahf (bad) and movsb mov push nop jl repz rorb xchg nop mov mov out push rcrb stos outsl add test mov mov mov push mov daa mov lret adc pop inc pop out xlat fs adcb xchg xor outsl fptan mov clc aaa pop imul sbb stos and inc lock and xchg sbb sbb ja add jecxz inc sbb lss push insl xor mov or mov jb mov push arpl mov push mov jmp mov loop push and mov pop test mov pop ret inc cmpsb xor add jne fsts loopne jmp loopne iret push adc lcall mov push cmp or mov jmp sub dec xchg sub push mov xchg icebp push adc inc addps mov lods sbb out dec push out pop imul jmp push cmp sar aas pop mov mov lcall add sbb push scas xchg adc fdivrs dec sub fbld sbb out jno out movb insl xor enter cmp leave pushf xchg push fadds movsl outsl mov movsb mov out pop inc js sbb gs nop sub icebp jns push shrl pop icebp adc xor inc mov push imul adc jo es clc mov iret pop aam (bad) aad mov das cmp pop inc jae icebp aam sti or jbe pusha repz movsl xchg in cmp sub in push or and xchg add xchg push jge sbbb mov add cmp call lahf add out aaa hlt pop leave nop dec enter mov xlat mov xchg loopne jb mov jbe loope pop jecxz and mov outsb repnz clc out pop (bad) repnz mov mov mov xchg repz mov sub jne cltd out addr16 cmpsb jecxz sbb xchg and mov cmp cltd jg fisttpl adc sub les adc or or inc dec mov xchg mov mov sub mov lret (bad) nop loopne pop (bad) jo xor (bad) jle fadds xchg roll shl jo outsb fsubl mov mov lods lods jmp or idivl sub push aas fnop ffree js xchg push or mov nop aad pop addr16 mov sbb or adc pop icebp movsb stc sbb cmp push in sub push adc cmp pushf push ficomp fsubl jge jne push rolb loop stos adc dec fldt movsb notb and xchg loopne jo or push mov mov mov std aas lods sbb jae cld arpl popa dec arpl fsub leave outsl in or dec sbb jmp lods dec jae lods adc push das fistl outsb jecxz mov mov push mov mov stos dec or mull cmp aas mov rorl mov pop add stos fnstenv into mov rclb mov mov lret xchg inc lcall sub fisubr add pop mov daa daa xchg out (bad) pop push in mov jecxz rolb jne test in mov (bad) push enter (bad) sub subl ljmp movsl iret lods mov cmp aad lret fcompl and jg cmp mov xor push rclb addr16 jg je inc or cmp clc je mov mov sbb icebp xchg mov pop das jmp dec leave dec pop (bad) sbb inc xor push mov push aas cmpb enter lods sbb jns insl je insb push cmpsl aas push imul test (bad) idivl sbb pop test lcall pop push push xchg mov icebp lret rclb mov fcoml lock lods or repnz das dec daa xor sti sub jecxz (bad) or sbb js jp sbb dec addr16 (bad) push add test sub sbb mov (bad) fdivs out push shrl sti cmp jmp in mov sub test pop push jnp jmp out cwtl and mov add push lea and mov pop out jmp jns xchg adc test mov push sbb les ds outsb stos adc imul and cmpb int3 xchg lods ret out mov (bad) out sbb push xor orl stos popa test sbb pop pop and dec fcom adc xor mov push loop adc or cli stos cwtl mov (bad) out pop (bad) cld sti fdivs test adc inc push addb jecxz xchg cmp pusha and pop pushf mov sbb push imul cmp ljmp mov mov in sbb (bad) iret leave jns shr nop sarl inc sarl pusha and insl mov daa mov inc (bad) pop xchg xchg out int mov add notb cwtl rcrl call out lahf inc mov outsb das inc cmp mov xchg stos sub out inc mov popa push in sub push lahf push (bad) in add lcall jge cmp fsubrs pop add js xlat int pop lock cltd inc fs pushf je cli mov ja xchg or dec fcmovne push pop xor jle or int3 add into mov ljmp mov add fistpl js imul xor dec (bad) adcl xor push (bad) xchg mov imul jo mov mov mov or clc insl dec or hlt cmpsl adc mulb lea clc sti mov in sub push dec (bad) lcall jmp mov call in xor adc push aas inc mov adc mov add mull mov sub iret add aam js xor inc cmpsb mov shrb aam mov xchg loop cld mov add pop mov mov movsb dec jb dec push xchg fisubr mov clc push in inc pop rcr flds mov call call fldt cli loopne mov and cmp pop mov test sub bound cmp sti mov cmp out ret jge sbb mov mov mov loope xchg lret int3 xchg adc inc sbb test and (bad) imul push sub dec cmp (bad) jp repnz inc ja cmp xor fucomp dec rcr data16 inc fwait sbb lcall cwtl jno push imull inc roll bound fcompl and movsb jl sub jbe xlat push jb into jns movsb adc cmp mov dec pop aas push loope adc pop cmp pop jae ror mov fs scas in rorb sbb jg scas stc and sbb ret cwtl pusha popa add mov pusha in xchg and pop je or in push lret dec mov mov in inc lret andl inc loop mov (bad) xchg (bad) lods shrl stos ret dec fs lock pop dec jge ss out inc in in arpl std daa stos bound (bad) mulb xor pop mov icebp mov popf inc data16 jecxz xchg fldt jp dec lret ss jbe addr16 mov dec aad movsb mov ja pop arpl push jne popa mov jo or jecxz inc out in mov push push mov jae dec leave pop pop mov imul (bad) jae cmpsl leave jmp jae sub jnp xor das push xchg pushf push aas jge cmp push js inc push imul inc or adc cmp inc push out mov cmp movsb mov adc cmp adc xchg jae mov movsl sbb xchg add adc movl (bad) enter sub aas insl mov test xchg mov ljmp mov pop addr16 cmp stc pop add sti mov mov clc into loope inc inc xlat jb cs pusha sbb loop cs and mov addr16 xlat xlat cs ret or stos sbb jne inc outsl mov daa xchg cltd lds and pop sahf jno popa in rol xor (bad) mov es sbb mov mov int mov fs sbb repnz mov push enter sub fmuls mov je cmp rcll pop mov daa cwtl mov and mov dec mov inc in aas mov ja xor push and clc jmp jecxz push xlat xchg inc inc push aaa aad ss fildl pushf paddw pop mov push pushf sbb cmpsb (bad) jo fistp or ljmp sub rcll mov mov dec mov dec mov stc xchg xchg mov sub divb adc sarl pop jp call mov xor adc ss xchg dec cld imul test (bad) mov push cmc xlat or adc mov clc mov aas icebp cwtl push (bad) (bad) ret aam cltd xor xchg push movsl sbb pop popa fnstcw xor cwtl mov inc sahf fist repz imul xchg pop je in outsb lret test cmpsb in mov mov aas push mov stc cmp mov push js xchg outsl fildll mov sub mov xor lcall add jno sub push data16 pushf lcall inc push inc cmp fdivl loope les je sbb loope and or mov adc inc cmp leave (bad) mov xor stc rol mov mov inc andl xchg pop jns pop not dec rcl ds loopne movb cmp mov enter mov cmp push jecxz push mov push sbb clc popa cmpsb in jne je cmp inc or adc mov adc sbb outsl push subb loop fwait arpl or mov dec andb iret shlb enter and pusha stos andb int3 mov inc es negb cmp (bad) cmp cmp scas mov mov push xchg out fxtract fwait inc lds cld cmpsb hlt sub cmp int jb bound sub je and mov hlt lock dec cld xchg lock mov lock shrb xchg push add stc fdivl mov out xchg mov sahf adc mov ret and cmp adc stos jg mov xchg lret lret xchg jne mov icebp imul loope,pt dec cmp jne cmp adc in ss or xchg push inc lods ror dec xlat mov inc fcomps repnz sbb cltd rcr mov popa cmpsl std ficom lret xlat packuswb mov lahf jp mov repnz or in ja sub or movsb jo repnz lods cs stos pop sub int3 pop adc andl aad jnp push add lahf adc test scas mov dec stos fisub clc mov movsb add mov dec inc repz lcall repz dec repnz js or (bad) push fcoml je cmpsl outsl pop fiaddl js loope push xlat cmp mov daa mov and push pop lds popa xor dec pop adc mov pop jl repnz pop test jle mov xor popa fidivr mov or dec dec xchg pushf loope cmp aad lcall mov pop add push cmpsb inc xor adc cmpsl cltd in jbe jg mov jnp push pop push in out cmp cwtl pushf dec mov sti push mov pop mov loope mov mov cld pop mov gs adc inc pushf inc mov jbe cli mov inc push fwait xchg or ss fmulp (bad) pusha bound int3 mov rcl (bad) xchg outsl std ss xor cmp fcompl mov cmpsl push test push xchg std ja mov jle arpl imul add or inc jl insb scas (bad) rol aas lahf mov sti push dec out outsl aaa pop jae fs or repnz xor jne mov jge mov mulb mov mov add push outsl pop or mov repz sbb sub shr xor in rcrl addr16 rolb inc int3 arpl loope aaa stos fs push xchg mov cld mov mov push and insb popf popa cmp pushf or push jmp pop or (bad) push jge ss xchg ficom push push test push scas push xor mov outsb nop test (bad) jle cmp fsubrs cmpsb sarb sub mov add popf pop mov pusha mov xor push jp dec mov push and mov loope inc mov sub cmp adc xor in mov arpl push cwtl and test xlat ljmp inc ret jecxz sub lahf (bad) jmp neg inc imul jo cmp (bad) (bad) mov pop test mov sbb inc push imul push das jg pop inc in mov inc ss call mov out lds dec dec inc test mov cltd pop aad notb xchg inc add mov dec scas dec fild cmpsl mov aaa es and jge mov pop sbb lret ret dec jecxz sub adc and sbb lahf outsb imul jno ja je enter lods sbb xor cmp mov xchg inc clc in out mov pop in push dec cwtl add xor push mov addr16 add aad inc lock movb scas xor xor (bad) jb xor sahf pop mov jg adc lcall xchg xchg and xor jne ss mov out pop and std inc fisubr inc stos mov cmpsb out test fnstenv aas inc adc rolb sbb (bad) mov xchg push imul pop push fidiv xor scas push fldl fsubr sub push and outsb jbe cmp xchg cmc mov and mov mov cmc cmp cld jbe movsl fsubrs (bad) mul (bad) xor add dec mov pop icebp and shll and xchg sahf gs pop popf ss jo loop repnz lock cmp loopne jg xchg cmp dec loope pop or ja sbb sahf cmp adc or mov cmp lds lcall jmp cld and fildl mov cmp in mov les xchg out mov mov int3 pop arpl sbb scas mov das fwait jne lcall and mov (bad) sahf adc aas mov adc shrb mov cmp sub lods into cmp cmp je lea add lahf mov sbb or jb xor jae rcrl cltd arpl push fadds dec pushf mov push sub out orl mov test call in jge mov jbe add xor xlat xchg mov xor jl mov (bad) loop imul push (bad) ja sbb insb in pop cmp pop mov lcall mov jb out and push popa lret mov push mov cmp fsubp jne into adc test and jge aam sbb pop leave mov xchg sti jmp cmpsb dec nop inc repz mov nop iret xor rcr push iret cmpsl fadds sbb lods movsb cs mov jge fcmovnu lret (bad) out jb (bad) pusha xchg jl inc lret sub pop cmp cli jns in into dec dec pop cwtl push aad xchg dec (bad) loopne inc mov icebp or dec popa andl in test pop rolb (bad) pand out cmp insl mov xlat insb sub dec int decl xchg xor pop rorl nop popl loop les mov dec add cmp jmp lret fildl movl dec popa insb insb xchg in rclb inc les (bad) divb inc jl sbb pop mov adc lahf lds test xor clc and mov push mov push mov cmp or mov pop dec dec sbb ja inc jns test out lds adc push sub popa daa int jp cmpsb in dec cmp xchg lcall push xchg out nop sbb cld push mov scas (bad) mov adc jp xor enter (bad) push mov mov jmp xor push push sbb leave sub mov push adc adc dec pop pop mov test out or fs dec or jg gs xor cmpl pusha dec stos or pusha sbb sub in pop pop (bad) push fnsave into mov lret mov pop inc gs and pop in adc rolb xor xchg loopne lock inc adc lcall (bad) sbb (bad) in jae mov xor jnp je or in (bad) mov and dec out out add inc out push aam pop cmc aaa popa xor mov pop jns aam jl add ss lods int3 mov add loopne add clc cmpsl inc mov cld into and in mov cmc cmpsb xor pop push std sub and cmpsl inc mov mov ss fmuls mov in cmpsb push add and fs mov mov lcall jmp xor and (bad) xlat je jecxz ss sarb lds das or (bad) mov shll lret xor iret pop mov mov dec (bad) orl in insb xchg int mov jns lcall into xchg push inc jae negb addr16 sub jns adc add jp test je sbb decl and inc daa in lods pop popl jmp rcrl mov sar rorl pop lods sub out bound dec mov nop out push xor sub push repnz das or testl and fs adc xor ljmp jae inc movsb sub fs cmp mov cmp sub mov jg scas sti movsl pop push sub xor (bad) or mov popa dec aam push bound xchg inc stos popa xchg sub les cmp mov mov add addl push call bound xor sub daa cmp (bad) inc cmp sbb jecxz xchg (bad) mov loop mov and mov cmpsb stos pop imul mov outsb mov sub outsb jl and loope scas inc call pop jmp lods and inc (bad) leave jns dec push ja popl add lcall sbb pop xor repnz dec dec jnp mov push xchg daa mov sti lret sub or mov push inc dec iret mov push leave sub nop stos xchg mov sti test in ljmp pop sbb (bad) pop mov add push sub xor or or mov push test stc std push dec push outsb jne popf mov es cmpsb sbb lret pop lock insl lcall stos (bad) clc jo push sub aad xorl pop pop jo mov xlat jo dec in mov cs adc int3 daa push mov lret leave mov je dec loope mov jno and loope ss jl outsb jnp outsl jb das pop fsts sbb icebp popf mov stos pop cmpsb shlb fidivrl mov adc sarb (bad) push cs cmp cmp mov daa jl fbld ss jle xlat sarl cmp cli mov jns jle dec jge scas or push pop aad test test mov jge ret repz mov (bad) cwtl dec pusha dec loopne add xchg mov pop loopne jp ret sbb and mov popf jns pop enter mov add fidivr xchg push imul mov and arpl fcmovu leave xchg int3 dec mov ds push mov inc out push shrl lret or mov scas xor sub sub je inc xor jae adc adc pop pusha jno arpl ficom mov xor mov xor and fdivl cmp movsb int or xchg push sti push inc push imul mov jecxz inc ds sub lret mov or (bad) sti arpl loop pop xor cwtl arpl xor movsl fnop mov mov imul (bad) int3 xor data16 sub mov mov dec sbb idivl ret scas cmc fstl inc xchg mov mov push es insl mov and mov mov jne push sbb jge sarb and roll int fs imul cmp nop jle xchg arpl imul mov nop mov push addr16 dec jl lds inc test test ret push stos in push pop adc push outsb popf fisttpl fdivr mov and jo sbb stos les push jbe insl and inc dec inc lahf inc es inc test lods pop out mov adc push es and xchg xor rcl rorb outsb and dec dec cmp inc rolb cmp xchg mov pushf (bad) std lret dec and xor mov pop in pop mov fwait jl ret pop cmp push xor and stos test ret sbb inc hlt sub fsubrl lahf orl (bad) hlt inc push mov mov add jp xchg adc inc (bad) lahf mov mov jae and xchg push idivb inc lods dec imul lcall mov mov or push jge fs push pop cmp mov push or xchg pop das jno xlat out or test pop cwtl dec sbb (bad) pop xchg mov dec sub push or push iret mov andb call dec loop dec mov mov into test movsb js (bad) shll cltd jbe dec or xchg push jbe mov jmp pop mov ror mov sub negb xor adc cmp mov jge fcomi cs movsl bnd pop fwait (bad) repz ds cld jmp mov mov dec add testl cs movsb pop in ljmp inc xchg and mov cli xchg sahf cmp jns mov add or pop ret mov (bad) pop jecxz dec sbb mov loopne je dec and and mov outsl mov jp sbb imulb addb cmpsb xchg inc adc icebp push outsb or sub sbb (bad) sbb pop cmc adc inc dec divb leave pop pop adc sub mov test mov loope repz (bad) mov push mov dec (bad) je pop ja xchg sub cmpsl lock pop jmp pop or cmpsb jbe fisubrl dec loope fcomps das outsl push int aas xchg inc mov (bad) cmp cld lahf xchg test push test adc and incl (bad) imul jno call jle mov mov (bad) or add and cwtl test addr16 jmp fs pop push loopne outsb jae aas int3 jge leave movsb jnp loope xchg adc jg cmpsl push popf (bad) rcl xchg and push repnz repz scas (bad) pushf ficomp mov mov jae cmpsb jmp adc mov fiaddl mov mov stos push and xor pop xchg ds pop lcall sub and fdivs add repnz add int push or and test lret lret push btl dec in enter outsw inc pop icebp aas pop mov pop add clc scas xor xchg es aam fidivr xor aad sbb in xor xchg or dec jbe (bad) xchg mov mov cltd and and out outsl (bad) (bad) sub aaa aad mov jne test notb push xlat pop (bad) addr16 mov dec mov stc jp test xor enter cmp nop sarb loopne and lea jo jl push mov in sbb adc push in les mov in fstl and xor mov cmpb mov scas out (bad) dec mov adc push jg aaa decb loopne adc and pop lods movsl dec ss push push test out arpl pusha pop lahf dec repz sti js dec xchg xor (bad) imul das cli inc sub lock mov mov popa pushf fist or push sub pop sti lcall js mov mov add inc adc cmpsl fildl and iret adc mov xor xchg mov outsb or push adc ror out scas push jg (bad) pop (bad) jle xor xlat ret jbe test or test xor out jl testl cltd adc movsl or rorb cld xchg mov into sub pop call push mov cs dec jb mov add mov pop lahf fdivrp hlt (bad) (bad) bound dec xchg mov jle ja push (bad) outsl (bad) mov cmc outsl flds sahf mov out inc dec push mov xchg pop push (bad) aad add jbe popa adc in mov rcrb sbb cmp icebp sub lock pop xor cmp hlt adc rorb xchg in xchg leave test mov sti push adc jle lret push sahf hlt push mov xor jnp loop popf mov jl (bad) aas mov sbb sarb cwtl dec jp lret ss xor shrl ficompl add lods call lods add addr16 idiv mov jmp xor stos or pop rcrb into pop testb lahf and lock pop shrb pop das sarb out pushf popa js jb cmp adc dec jecxz mov push jns or fldenv repz in call std sbb sbb in (bad) push cmp cltd xchg nop hlt push ljmp insl push sti lods aad xor enter sbb clc popf add shll jno pop or adc (bad) mov xchg mov mov sbbl sarl icebp lahf xchg sahf sti lock ss mov arpl addr16 mov imul fstps adc outsb mov fisttpl loop jo xchg push pusha ret call mov pop sbb rcrb push lock shll or xor int xchg in ljmp loope push cmp xor les mov sbb add nop imul rcrl push inc dec das movb or test or pop adc jle das cwtl inc mov adc fist addr16 pop xor das cmp icebp pop iret ror in fwait popf push es outsl cmp jp cmc loopne dec jecxz add lret fist fmull icebp lret mov jae arpl (bad) aad lea and js mov js jecxz out and mov inc cmp xlat into test push or and sbb fistp rcrb mov sub xchg test ret out cmpsl or test add in fwait and arpl in cmc xor ja repz dec loop or mov adc subl pop push stos dec mov cmp mov pusha addb mov test jecxz jno pop inc lds imul jmp inc xchg loope les dec imul sti je ret mov popf daa ds pop popl aam mov cwtl or pusha sbbl rcrl fidiv aad cld sub hlt mov lods inc push cmp lahf mov (bad) sbb lods push insb jno push fbstp xor (bad) adc and cmp push daa cwtl pusha dec mov and add test dec pop xchg cltd cmpsl hlt int3 xchg cs icebp cwtl mov inc mov fdivr scas and mov popa and iret enter lea adc mov sub loop test dec lahf (bad) jmp aam pop test xchg inc lahf push inc sub insb or test sbb sbb pop push adc insb cmp mov into mov add jle xor and jne je or and cmp pop dec mov stos xor cld adc add rclb sbbb xchg roll aas and out lock add into pop lock lock sbb (bad) xchg push loope inc arpl lods fisubl mov add paddsb push dec xor fldenv mov popf add sbb out mov lock inc shrb ljmp sub insb add mov jb mov pop les lock fisttp addr16 xchg add sub sbb fisubr cmp xchg mov lods shrb sub xor cmp lods in clc jo mov dec aam inc loop sub inc lcall xor sahf dec push or or fistpl (bad) xor stos jmp fisttp add cwtl lcall sbb fwait scas dec mov push mov out sub daa xchg add jl jae mov pop mov push aad mov popa mov inc pop and cs hlt jmp repz orb insl outsl rorb inc add pop imul dec pop lea stc or pop mov loop nop cmp or test push lcall enter shlb jp push jae ljmp out sub fnsave scas ss lods hlt cwtl mov push sub test es xor ds enter pop xchg mov cmpsl repnz lcall rol push push loopne push maxps lods sub mov mov mov adc das leave jo cmp jns cmpsb scas out std ja pushf orb mov add sbb popf adc sbb mov bound cmp mov jp enter mov mov cmp addr16 lock push test add jmp push dec jl push pusha pusha call mov decl leave out imul inc mov sub dec (bad) int3 mov nop int test xor sbb and mov mov pop das call test sub arpl test jo push and and push imulb mov add mov xor sbb mov adc cs dec inc adcl push xorb (bad) jo sti xor call cmp lcall xchg adc and add dec jae lcall ljmp iret jae push inc sbb sub jl lock in adc pop pop (bad) sbb xchg ret inc je sub pop or or xchg inc sbb shll int3 sub test dec js adc adc mov jmp stc mov outsl adc cmp scas or jle aad js cwtl xor fdivp push sahf push ror aad movsb test test lods out insb jl mov rcrb pop dec test add addr16 aam sub cmp dec jge sub add cmpsb (bad) insl adc data16 cmpsl and lahf mov mov fidivr test jns jne (bad) std sbb xor out hlt add mov push std fs jbe pop nop out pop rcr sub mov adc fcoml lret mov inc inc add inc dec (bad) adc enter fmuls lret jecxz add jecxz cmp popa std ret subl lock dec xor cmp pop xchg loopne pop repnz fcompl push mov adc lahf xchg int3 sbb sbb cmp gs mov mov cmpsb enter or rcll jg (bad) pop xlat (bad) jecxz mov add push xor sbb add mov repnz push cmp fmuls movsl and inc cmp stc dec adc mov sbb (bad) jbe lock push loop stos jo pop ret mov fnstsw (bad) adc les sti mov cld cmpsb mov pop dec ja and dec scas xchg mov jmp stc mov aam popa stos int3 and inc pusha lods jmp mov into xor pop lret xchg lret (bad) cli fstp jl jnp pop (bad) push imul pop ljmp shrl xchg fldt loopne push cmp fcoml mov mov ss pop in jne clc xchg fdivs push xor or dec leave or mov addr16 addr16 scas push int3 jl pushl xor xor push loop cwtl outsb pop or cwtl cmp sub rcrl loope,pt in cs dec push js xchg add addr16 pop xchg fidivr inc icebp sub in jo jmp sbb cmp je das sbb adc lea or and rclb jl das push adc pop rolb ret fisub ret std dec hlt pop jmp push xlat jnp test das cmp sub sbb mov jmp nop (bad) (bad) mov mov or cmp fiadd adcl push pop inc lds sbb loop pop iret sarb jns push add clc sbb dec fnstsw cmp fs (bad) cmp adc pusha aas pop je xor stos push nop jns add lret cld cmp nop es xor push lret jnp jg cmp movsb adc sti (bad) iret add ret pop sbb push mov insb dec and movq xor loop enter rol ljmp mov (bad) jl in hlt cltd xchg in sub fildl test xchg in fs push adc or jecxz ret adc dec stos enter xor in mov and push (bad) pop repz loope pop xchg jns xlat dec int popf popa mov es icebp pop fild std pop ds roll leave inc (bad) sbb dec xchg enter jge (bad) iret imulb fsubrp (bad) aas mov mov out jg fldt sub gs pop mov sti in in mov or fwait cmpsl aad (bad) dec popf pop loop (bad) ja vmovmskps push insl pushf sbb mov xlat inc push sti in fimull mov popf adcl rcrl stos xchg pushf shrl jmp mov and lods jae into fbstp fisubr imul loop in xchg push xchg jmp stos stos jne (bad) adc mov movlps mov pop cwtl fldl fiaddl xchg stos dec push sbb cli fs sub xchg fildll in inc mov clc add add cmp cmpsl fisubr clc push dec repz jbe fcoml ss aam or (bad) stc adc cmp popa or call lods repz sub leave sarl stc pop iret jp jmp cbtw sub jbe test mov mov pushf repz pop (bad) jo insl xchg cmp pop jle jae enter ds mov (bad) jo jno fdivs cmc jle mov aam mov jge xlat jp aas mov cld cmp xchg scas into cli xchg cli lahf (bad) sbb jmp mov and pop packuswb dec sub push dec daa aad clc cli orl dec mov cmp pop cmpsl iret mov xchg lret (bad) insb xor push pcmpgtw pusha inc and mov scas fnstsw cmpsl (bad) push sahf mov mov xchg inc xchg or xor movsl mov xlat leave push lcall jg sub add insb scas mov pop int3 xor sbb push out fisubr lods imul lahf pop lcall lret dec push out pusha (bad) fstps and lods pop dec dec mov mov dec jle cmp or cmc inc fs mov call insl mov pop sbb clc mov mov cltd sbb add ljmp pop mov rcrl lock fs (bad) jbe outsl in pop xor shrb cmp mov es sti daa out jne mov jp xor sbb push repz fs mov subl adc cwtl (bad) jmp jnp fsubrs in dec sti xchg or loopne (bad) adc cltd xchg stc faddp push adc xchg pop les inc mov xchg mov or lcall inc adc pop loop (bad) aaa adc add xchg mov out mov dec add movnti out out inc (bad) cmp sub ljmp mov test test xor (bad) aaa repz adc jp mov xor sbb (bad) stc pop int3 flds jb sarb and add xlat cmc stc cli je pop jns arpl or xchg nop cmpsl dec mov fs inc (bad) in (bad) jb or pop mov mov dec add push xor mov (bad) mov mov cmp push pop mov (bad) xor add cmp cltd cmp loop jmp dec mov xchg je xor sarb mov push int aas jle rolb adc mov test push scas nop mov mov inc mov pop insb and xchg jb js outsb inc jnp jae stos dec xor sti icebp cmpsb or jnp bound cmp testl mov fs ret fwait imull mov mov insl push clc sub xchg imul jb sbb (bad) mov jne paddusw outsl fbld jmp (bad) aaa adc or pop rorb push in and fwait int stc imul test ficompl and out and (bad) divb add hlt rorl fadds jp test jmp iret arpl ds lods jmp arpl jmp fistl mov sub stos out (bad) xor call xchg inc sbb insl inc stos inc xor jge inc push loop mov xor pushf add mov in add into je inc jge push push xchg lods das sub push xchg jae test (bad) (bad) imul test mov push cmpsb into push repz int3 mov dec mov pop jb pop (bad) iret faddl leave and jo pop fisubrl sub dec xor inc negb cmp cltd xchg mov dec jp sbb pusha loopne cltd jno ds mov xchg fwait pop popa push push jo fnstcw pushf fistpll pop data16 bound or add push add (bad) mov andl out xor adc dec hlt scas xchg and xchg subl lahf sbb out ljmp jns pop std xchg xor mov cmc or adc jns cmc sbb jmp rcrb xchg pop jg dec aad mov jle fwait outsl sbb sti and xchg ss repz movsb fadds xchg xchg arpl sub scas (bad) lret push or int3 push or pop enter imul jmp aad adc aad das imul ret icebp mov cmp imul adc pop sbb (bad) addr16 mov dec fnstcw mov lods stc xor jns xor (bad) in push mov clc jmp jnp imul mov mov and mov mov push rcr mov hlt dec lods push mov mov pusha ja push orb and lds inc push scas rcrb dec stos xchg test pop test inc push jmp out (bad) sti sbb cmpsl jl jmp lea dec in decl in pop sub (bad) imul xchg push les and rolb rcll fsub movsl (bad) (bad) mov flds in jo pop negb jge mov mov xlat les add add jno (bad) rorb pop push push in lods fs in pushf (bad) xchg push cmp lahf xchg loope push mov push cmpsb jl mov mov movsb shlb adc arpl add cmp mov push xlat rol sub mov inc int push or push insl (bad) scas mov xchg add scas jns adc add nop loope cmp inc xchg in add sub mov add pop outsl pop jmp ffree pop mov out incb pop (bad) or xchg inc hlt rorl cmp adc xor push scas lret mov adc dec or pusha in xchg flds dec push mov cmp jae andb enter pop pop movsb scas cmpsb les iret shll call mov xchg test rolb sbb mov add aam hlt jmp push add repnz test pushf (bad) test xlat adc xchg xor popf dec mov cmpsl cmp fld xor xchg push insb inc inc es outsl cmp stos cmpsb cli jb addr16 cmp or loop pop outsb push inc jae fs aaa inc mov repz xor mov sub and mov dec or pop pop lds cmp ss sub loopne ss pop or push push cmp (bad) add sbb inc mov push or xchg sti hlt jae stos mov add fisttp lock mov arpl leave aad push ficom es jb cmp dec and mov hlt push sbb nop cltd call cli call enter and sti jmp int3 fwait lret xchg fwait in pop adc jno cmpsb mov daa push shll fsub push xchg add sbb pop mov jmp cmpsl inc cli out dec ja mov dec mov pshufw mov in (bad) in cmpsb jl lahf xor lods leave fimul xchg aad push in movsl push imul add mov fst push pop stc outsb femms int3 mov push imul test lahf and cmc pop push inc inc mov ss or mov mov jp inc aas arpl es sub call fnstcw movsb jnp sahf pop push mov mov push es sbb (bad) dec mov pop roll or xchg xor xchg mov xchg cmp sub xchg lcall jg or cltd xchg mov les movsb adc imul rorb pop (bad) mov in movsl nop push ficom adc mov sahf enter xor gs loopne lret add arpl mov movsb test in and sbb jl add cmp andb int3 xchg jo adc and repz in mov mov lcall xor xor aas (bad) pop pushf sti add iret fucom inc cmp insb icebp adcb jb lahf repnz xchg push fidivl lds sub out and stos and add out jo (bad) adc mov gs int jb xor pop or xor ljmp jl in xor and fdivl push adc or mov mov xor xchg out and ret shrb fcoms jne test add xor mov sbb cvtps2pd cmp inc inc jecxz mov aaa mov aaa push adc into sbb cmpsb (bad) cpuid in gs pop xchg push mov add push sbb imul inc mov popf scas int fsts les cmp je dec insb pop push sub or addr16 xchg fldt test dec sbb sbbl aad or std mov test sbb mov (bad) loope jno cli outsl xchg mov les push xchg mov pusha mov sub (bad) or enter xor iret mov jge nop jp or dec mov adc jmp inc mov and es jnp cmpxchg out ja or int3 stos push inc cmc inc sbb inc imul (bad) (bad) cmpsl mov fnstcw movsb imul aas cmp scas std das mov mov (bad) fldenv pop icebp jmp jecxz hlt mov ss push daa cmp mov repnz sbb sub (bad) xlat faddl jb sbb xor rcrl adc jecxz push push push xor test lahf adc dec ret pop (bad) jo je hlt (bad) ds mov (bad) jmp adc sub or xor jge arpl jp aam pop push sbb aas (bad) mov sbb icebp ljmp or aaa cld push and lea add push xchg push (bad) mov insb mov xchg adc ds or test add mov addb lods or sub pop push xchg call cli js cmp inc mov inc decl sti pop xor fild das add jae xor (bad) jge lds mov js push pop xchg mov stos fs sub adc jmp pmulhuw cmc ja js (bad) mov lret punpckldq ss mov in arpl das lret dec jmp (bad) imull rcr jg pop leave sub push aaa xor xchg push or cs into push cmp rol sbb mov (bad) cmpsl dec or jnp lds in mov sbb dec inc mov sbbl dec scas sub ret fistpl fisub cli mov leave pop xchg scas pinsrw pop mov stos scas and cld arpl movsb adc mov int3 scas rcll stc lds push icebp xchg and js pop sub cmpsl inc mov mov mov mov imul and sti cmp fwait mov add and push mov cmp jp xchg jbe,pt add popf subb jae out jns repz pop push sti sub jmp call movsb aas xor jmp (bad) push pop fs sub hlt stc out test fwait jge cmpsl int3 iret stos fld1 test pop cli ret pop es sbb in mov fistp ljmp cli cwtl inc xchg xchg (bad) lahf loop jl mov (bad) push gs pusha aad xor mov mov test ror addr16 inc inc push mov ss lock adc mov lahf inc imul int insl add pop sub xchg aam push aam or ficoml outsb lds jo jle sub scas pmuludq or pop fsubp pop popf xcrypt-ofb cmpsl in mov stc xchg popf push mov popa inc test lock das loop or (bad) out lock fldt mov jg dec xchg xchg xor shlb cmp pop out clc mov pop jne push sub jmp or push into fnsave xchg (bad) xor adc xchg sbb (bad) jbe imul inc push repnz pop or sub sbb orl (bad) mov es gs dec sahf das push (bad) jl outsl cmp mov je adc pop adc add lock imul in test sub fildll sbb daa inc xor movsl push xor cld mov fisttpl jecxz or sar mov call lsl push ds or loope jecxz mov jnp jg jl (bad) cmp or adc arpl push imul sub and insb test repz out sub scas mov aam sbb pop (bad) push addr16 add jmp mov dec icebp dec js (bad) cmp jle inc test mov in dec cmp rclb cmp cmpsl ja mov sbb push sbb ficom test fcompl int pop pop jge je adc je sbb (bad) sahf xchg xchg test (bad) mov dec xor jle fsubs mov dec aad cwtl inc movsl ds stos imull push gs scas and popf adc mov cmpsb mov popl sub pop mov jne ret jmp sub lods mov das ret jmp cmp mov mov adc cmpsb (bad) cli pop mull les inc push imul or xchg mov frstpm(287 adc aaa call mov rcrb je movsb pop daa dec out xorb (bad) out leave or ljmp pop dec in sub and cmc int3 loop push adc dec pop and lods dec mov mov xorb pop lods fmuls lret sarl icebp dec out inc icebp addl xchg fwait ds xor (bad) orb in xchg inc lcall test jnp je aam (bad) jae clc addr16 adc dec frstor lods and fcompl cmp mov sahf pusha out dec enter adc push adc xchg xor xor lcall lods iret pushf andl mov mov addb std cld jmp out (bad) int testl or cld mov jecxz out or and sbb mov jbe mov test popa leave inc ds or add sub scas pop xchg ss xchg ror pop mov movsl lahf cmpsl arpl test mov jno out fmull imul inc ret sbb dec aaa (bad) dec cmp addr16 mov sahf mov scas or jno dec xchg movsl mov and jmp sub inc dec jae jecxz insl imul stos cld fldt ss mov push xchg popf xchg cld lret adc and psraw jp lahf dec lcall mov hlt movsl cmc dec lcall xor jb les inc push lods int3 mov icebp cld dec xchg and repnz mov xor dec sahf jno xor loopne stos mov sbb addb leave jae or jmp xchg shlb xchg pop fmull pop mov ds (bad) push push add adc repnz fxam call xchg dec mov pop add fnstcw pop and rcl lcall dec cmc push pop jge cli xor sbb jnp daa xor lods dec cmp jmp lea notb stos or ds jo fucom and loopne test sub or pop or sbb fnstenv jae cltd lcall sbb into jge xchg cmp in mov xchg sti lahf mov xor dec pop mov inc sbb xchg ret test cmp pop dec cmp outsl push cwtl add arpl adc mov mov push test sbb mov test daa notb inc jbe (bad) push aad jl cmp aam xchg clc subl dec (bad) jb add pushf daa cmp out add stc xor sahf lahf clc icebp mov rcrl xor imul sti les pop sub (bad) xchg test imul sub pusha mov iret push mov or mov pop push test js adc (bad) push (bad) and pushf or sarl sub addr16 push imul jb hlt mov aas ret dec test das imul stos lock push add loope aaa adc nop mov inc les mov sbb jecxz jae push (bad) and repnz inc jne lret call outsl or pushf or testl sub (bad) mov xlat sbb jb dec dec cli test mov jbe rcll and lock and adc fisubr stos pusha jp stos sub out pop cs dec jnp stc inc add inc jle aam mov leave popa adc test mov std fcomi pop test sub cmpsl dec shll out sub pushf call push loop or mov pop xor test pushl lods xchg sbb divb rcrb lahf (bad) popf out lock sahf aad xchg and xor cmp cmc cmp cmc ljmp push loopne jae bound shlb adc mov jb xchg pop jge xchg (bad) lock hlt repz inc and or rorb pop and ljmp fs ret mov aam mov mov nop sar pop (bad) jno mov stos push sbb cmp xchg mov jg hlt dec mov push or jle (bad) dec mov pop mov mov repnz cmc (bad) popa mov lods cmp cmp test dec xorl lret jnp or imul cmpsl pop and cmc lcall (bad) out and ja add mov dec bound dec jmp cwtl bound cmp xchg inc lahf sub arpl xchg cmpsb xchg xchg out sahf out dec mov test lcall fldpi out sti fisttpl orb insb push out in xor mov sub push cmp mov jbe xchg mov insb jle push int sahf fldl mov dec fs pop ljmp xchg jp pop jl dec stos aam jecxz rol fstpt mov inc xchg dec stos sbb xchg and push jnp js aam call mov popa jns and jo mov imul pop or push das test repz cld sarl cmp adc mov scas sub ss ljmp hlt btr push cmpl mov cmpsl jbe cltd std mov push add adc (bad) mov in cmp mov dec data16 mov test cmp adc xor aam loop push inc jg and dec push lret inc xchg pop and je xchg (bad) fwait cmp out ret mov mov cmpsb push mov fwait mov add loopne cltd cmpsb push sbb gs (bad) std mov sahf repz inc (bad) in mov psrld sub fstpt test mov int3 push sub mov adc in xabort sbb and jb mov insb (bad) dec xchg cmp mov mov mul mov stos pop xchg repnz sbb popf fisubr loope shrb add add pop pop pop push and pop das xor jmp (bad) inc jo adc add (bad) push sub inc rorl pop or cmc es movsl xlat loope mov pop and mov (bad) mov adc addr16 test mov sub adc xor inc (bad) cmpsl mov push iret mov inc cmp mov pop xlat mov cs loope in xor cmp dec inc aad outsl das adc cmp sub jmp pop adc ror and data16 lcall andl sahf sub mov pop mov sub orb xor add dec cmpsl push lds ds cli and add adc dec jle (bad) dec ret cmp mov adc cmp xchg add or push jne sbb and inc pop lea in fnstcw cmp mov (bad) fdivl mov pusha dec lods or lods fsubrs or add sbb nop push xor push dec lret sub mov inc pop and and es jae outsl xor pop shl insb or mov insb fstpt (bad) sti mov pop repz cltd das jle data16 lock fisttpl jle subb mov sbb xor aas push pushf or push adc test outsb inc stos and add pusha iret sub add rorl fnsave jge xor (bad) in cmpsb ljmp in mov push sub cs mov fisubrl fsubrs xor jo push les lahf lret push dec push movsl cmc scas xchg xor jne subb aam lret xchg andb jb inc loopne sub arpl arpl cmp repz jl pop repnz dec lods sti cmp cmp sbb test fcomp adc pop (bad) push daa (bad) aad scas inc cmp mov adc jg add (bad) xor pop mov sub fildll cmpsl mov mulb push test push pop or cld ret orps push lcall mov jg scas cli pop movsb call or lock lods or lods pop (bad) cltd inc int outsl cmp mov out xchg out xchg push into fwait add les inc pop dec mov dec jl aaa inc aad ret fwait add xchg jns lret mov out add fidivrl inc dec aad mov gs dec jo adcl mov xor scas arpl xchg orl xchg mov or loopne test cs jno mov loop pop (bad) jmp cmc pop ds sub pop mov push inc sub cltd adc outsb pop inc jmp jle sub in cld arpl repnz test aad push imul mov sti push lea mov iret adc xchg loope pop adc xor and cmp repz (bad) divb mov out call cmp insb cwtl or xorb mov fiadd push out sub inc or enter daa gs icebp inc jmp or clc popf cltd xchg push mov cmp adc fsubrs jns pop jmp (bad) rcll lea push pushf mov xchg lds (bad) pop mov addl lret popf popa push mov jne xor sbb sub cmp dec lock mov js xchg popf ljmp in pusha sti imul frstor bound push sbb cmp and push aas (bad) jbe bnd repz inc out rorl mov cs shrb leave lock fstpt out adc stos mov dec push (bad) (bad) dec out nop outsb ja,pt enter push and or mov add pop insb mov fmuls pop cli xchg cmp divb or test pop popa adc inc js icebp popl dec data16 cmp and insl push mov fisub mov push pop gs sarb xor dec cmp adc inc mov jecxz mov rolb lods fiadd das xlat in daa fmul movswl add stos mov or push push push test aam scas pop shrb test mov add adc mov enter mov dec push push pusha xlat push mov imul shl jp sbb xor jecxz xor icebp mov add mov add cmp ret and icebp in enter dec push adc scas pop outsb arpl stc (bad) cmp xlat lret push mov cltd rcrl rcl jecxz inc sbb pop pop sbb arpl les (bad) jbe and jo sti xor dec push jg adc or mov lea mov mov aas pop cmp inc das pop inc jns sahf mov xchg sbb push aam insb lret or push imulb iret rorl cwtl das nop (bad) sbb or das es mov aad mov mov pop dec loop outsl js outsb dec scas rcr mov mov sbb mov lods test sub pop scas scas add or mov inc mov pushl stos add idivb pushf pushf mull (bad) fildll lcall push xorl jp roll dec sub add pop pop popf mov cmp loop or xchg cwtl not push dec adc cmp or pop ds int push bound sbb sbb dec pop fsubrl bound dec icebp movsb and lret mov mov adc sub cld sub testb and test xor iret scas xchg outsb aam (bad) pusha push jo or mov icebp pop icebp mov enter rclb cmp test inc (bad) (bad) testb pop dec fsubr ret pop hlt pop call das jns add sbb (bad) ja jmp jb insl xchg mov fsubs loop mov and or arpl xchg add pop mov rcll xor dec cmc data16 jb fdivrl andl dec addr16 jle (bad) (bad) ror fnop repnz add jmp push test (bad) out lea scas jge push sahf addb jge in scas dec fsubrl stc jmp mov xchg push mov pushf cld bound scas test (bad) (bad) xor pop call int3 adc iret mov push xor call loopne mov inc lds dec mov dec scas daa cs jbe add into test in jae push fsubrs fisttp sbb push into mov pop sarb mov jge sub dec sbb sti ja xchg sti push je pop sbb test adc ret in js leave cmp lret test pusha lods xchg xchg ja push stos shlb cmp arpl out xchg mov and xchg sbb (bad) fisubr fstpt (bad) inc lahf imul lcall mov lods (bad) pusha adc sub push adc sub jecxz cmp loope data16 cmpsl cltd xchg stos fs ljmp ljmp inc cltd dec jmp xor test jmp ret in or push and inc xchg leave and jp mov push loop mov push fucomp pop xchg ficom jge dec adc addr16 ljmp adc jbe aam and leave jle stc push adc (bad) in call adc loopne pop imul dec push pusha stos in fistp mov test lds mov lcall cmp es cmp mov sub mulb pop inc shll xchg in stos cmp jmp mov (bad) push mov sbb adc xor dec (bad) jb (bad) stos adc mov sbb dec mov negl lret sbb bound xchg fistpll lods mov cli test jno pop test cmp mov mov xchg (bad) movsb inc adc jae pushf mov jge pushf xor in insl mov xchg std arpl sub int cltd popf xlat jb and popa shlb aaa int3 push add test shrl negl jl shll int inc mov jg pushf enter fldenv mov in sbb loopne movsb out loop mov or insb inc jmp pusha pop cmp mov mov jo mov rdpmc add xchg jmp cli mov stos leave dec fcoml repnz mov test and or movsl jle mov xor lods (bad) jnp dec cmp and mov ja sbb aad xor jmp stc inc pop or fucomp imul aaa bnd push push xchg mov push cmpsl adc pop mov jp or xor stos lahf nop and mov mov dec mov aas xor push sub lret lods xchg add movsb dec and mov xor cmpsl push popf in (bad) mov xchg test sbb repnz insb mov push pusha fbld pop fidivrl add (bad) fbstp repnz mov repz cli lods jmp xchg pop ret idivb sbb mov push dec sub jl mov and mov pop out lds add repz pop inc mov ss scas pop js aas scas push xor and lods (bad) je dec jb jb loop ljmp int inc push pop insb and mov out adc in sub stc scas mov jge xchg push movsl xchg mov mov into add in jb ss add push pop sbb rcrb pop (bad) push mov push push mov cmpsl lahf lds add mov fistp (bad) popa push jnp out push adc pop and jl (bad) fdivr xchg ret adc lcall call xor mov pop enter jne fsubrl or addb imul and mov xor mov pop jmpw and sti push test inc xor pop sub fnstsw and insl adc cld imul inc ret dec lcall ss mov test sbb adc inc ljmp fsubrl lods out mov (bad) sub pop xor pop sti add jmp mov mov fisttpll xor pusha jno pop sbb dec cmp push sub adc imul std imull fwait cmp pop outsb int cwtl fwait test mov push ja mov (bad) out push enter jmp cs stos fildl pusha (bad) xlat out push je mov dec mov cmpsl sbb push mov dec pop push cs aad iret sub call cmpl (bad) push ret int3 pop inc xchg aad psadbw mov add pop dec fcomps fnstcw adc imul int jp clc adc adcb lock mov gs xlat xor pusha mov push mov pop dec mov ss ret ret add adc xchg arpl xchg cmpsl insb adc or sbb insb loope mov jle movsl rcr sub cli mov cli xchg pop xchg lcall (bad) and cmp outsb mov push cld shlb push cmp js sub pop mov roll pop sbb inc test movsl shl lcallw xchg and or mov mov ja js jns sti arpl stos pop loope jmp cmpl and jns pop push arpl or and pop mov js or mov push dec leave xchg lcall cmp mov mov push stc mov push and xchg adc sbb sbb jns pushfw stos cltd out sarb jmp int3 and mov adc pop pop mov xorl (bad) ret in loop inc xchg xchg incb sub add (bad) aaa scas push xchg xchg inc xorl cld and in rcr jle push jo cmp iret and lcall jnp (bad) mov mov xor in out rcrb xchg fwait sub outsb addr16 orl popa mov dec inc imul pop mov inc mov push sbb sbb push lahf inc aas pop xchg (bad) leave cwtl das adc adc xor int test adc adcl cltd sahf repnz rorb push subl outsl push adcb inc aad popf cmpsb imul loop fcmovne lret jp pusha js jle lret in cltd js pop dec test dec or pop test cmp pop or mov call fcmovnbe adc divl jge data16 and addb cmp fldl ss imul lret scas ret je pop popf mov mov sbb or out aam pushf inc mov jecxz xchg mov inc cmpsb addl dec xor and ja jg push idivl mov inc mov xchg pusha ds xor movsl cli out mov inc scas pusha arpl push stc pop dec jb lods int3 jmp pop mov xor in fwait comiss shrl push addb push push pop scas repnz dec rclb push push dec adc fimull int3 dec sbb push lret (bad) sti les cmp cwtl push or lds enter lds pop cmp test push lret aas mov fcmovnb jle cltd sbb pop push loope leave lock enter or sbb call jecxz outsl dec sub mov inc sahf jp xchg lahf or push mov jns fldt jl mov jge mov lret imul test sbb inc stc dec sub pop rcrb jns (bad) mov rclb scas mov push jno int3 mov xchg test insb adc icebp in outsb fisttpl idivl inc mov sbb cmp jbe outsb mov icebp pop stos fcoms arpl xchg pop insb sti mov mov adc jmp pop cmp in jb sbb fldt scas mov insl mov outsb jge jecxz stos mov addb mov adc push int push rcrl test cwtl dec sub ds ret ficom je adc mov nop push sub es movsb sub test add out xor pop pop ss sub push mov lock xchg (bad) jmp jp sub scas xchg or insb push mov rcrb mov test pop fucomi adc iret frstor sbb pop or movl scas nop jge repnz sub ficomp add int3 je add xchg or push sahf mov push lret and inc mov stos shr lahf mov test clc jecxz jno (bad) in cmpsl out push aaa jp ljmp bound leave xor pop mov dec add push pop push and and xlat add test icebp mov jp mov aam mov adc inc in adc add jmp jg in iret ret cmpsl push mov rcll ret loop cmc jge cld (bad) stos arpl xor pop sub adc (bad) xor movsl add and lea adc aad push mov adc add inc adc fcompl sbb push lea fs sbb adc cmp shll data16 xchg mov adcl xlat mov xchg pop repz std fildll pop dec dec or add mov push add inc or pop mov xchg mov jb (bad) xor mov add pop mov addb icebp test xor pushf push cld std pop (bad) sarl icebp data16 and sub sub flds and mov std mov aam and (bad) jmp push mov test mov inc mov sbb sbb clc push aam daa push icebp test std push jl addr16 push sets jae adc add ja iret mov adc mov icebp ret outsl cmpsb mov stos test sbb imul aad (bad) dec sbb adc stc jge mov (bad) jb push adc jl sbb sbb add lea clc aaa push insl outsl inc std sub push fcmovb mov es cmp sub add mov (bad) cs stos shrb ja fdivr loope (bad) cmc xchg push xchg nop sub ds je jbe (bad) (bad) pusha cmp mov clc jne xchg je mov or fstl shlb in pop pop mov xor mov stos leave jne dec mov pop mov add push sbb pop ret notb rol cmpsl sbbb inc scas adc rcr pop sub lret pop aad out inc lcall adc dec sub fist popa inc and xchg and fildll pusha and in mov loope negl fsubs int mov mov push repnz pushw bound je dec fwait hlt mov sbb push icebp xor jne in xor call cwtl cwtl idivl in sarb push cmp cmp test fsub and inc and inc mov cld sarl mov imul mov iret xchg pop mov loopne adc call mov andb sbb add pop push (bad) in dec je cltd mov popa pop shl movsl leave movsb int mov cmpsl pop nop insb das negl popa inc insl jb mov iret mov sub leave aas pop inc int (bad) xchg inc mov scas aam outsl test (bad) pop mov inc lret and xchg xchg add mov sbb mov sbbl jbe js add push or sahf aaa pop mov pop inc jno lods jle loopne fneni(8087 lock sbb xor je pop fdivrs sub mov call loope sub inc nop cltd xchg push inc or xchg popf xchg dec cltd inc add and xlat out sub jp adc sub cmp lahf out test out sti dec sbb fcomps clc not push push sbb cmp das inc das mov inc das jg sbb push xor dec cli ds ret popf cmpsl or add les data16 jl push lahf leave lret and adc xor inc pop (bad) daa sbb xlat aaa add cmp dec or inc fwait out ljmp xor dec mov mov push pop sahf pop cmp push xchg ror xorl (bad) std addr16 jb aaa pop arpl int dec mov jne fimull das daa inc cmp jmp mov je jbe inc repnz jmp add push add lret push (bad) jns xchg nop fcmovne inc fstpl cmp mov pop movsl repnz xchg jae stos xchg mov andl les sub cmp jae in lock ds arpl pop push or sti iret inc rcll and inc test xor mov sub stos arpl adc insl push jns pop push (bad) (bad) xlat jmp push fstl fidivrl pop data16 cmpsb push push add stc je ret int3 gs std mov cmp cmp out jne and lods ljmp dec fadd cmp sub dec (bad) roll scas and jmp push mov jle jnp jg scas aad fdiv jl adc jbe (bad) xlat iret ljmp dec sbb xor or inc mov rcr imul jae jmp sbb loopne inc jle or mov sbb sub js call mov mov das fildl or test xor and lahf push repnz outsl add movsl (bad) call addr16 or negb sub dec cmpsl sbb scas mov push push pop inc inc push (bad) xor and sbb fimull sbb inc clc sbbl push push push into nop jnp,pn or scas (bad) cmc lret mov outsb jbe inc hlt pop sub xor inc xor aaa xchg jb or rorl jge in arpl mov mov dec and ret js jle mov pop lret outsb pop mov mov rclb inc aam stos (bad) stos arpl inc push es and jb cmp aas and in or cld insb xchg scas lcall pop xor repz xor or pop loop adc mov sbb and xchg or lahf inc es push sub call out lahf hlt ss mov hlt aas mov movsb fcmovb cmp or faddl inc xor sbb inc adc push inc xor sub scas xor repnz repz addr16 ja jae (bad) pop popf add sahf movhps (bad) rcl inc sbb (bad) cwtl roll dec or pop into in jg pop jl dec imul movsl insb test dec xchg lret sahf je mov sub mov daa idiv sbb adc les movsl lock add lock pop xchg inc stos out cmp bound dec lea dec fcoms (bad) mov (bad) or inc mov out daa (bad) jbe pop jae bound mov cmp cmc aad xor enter add out jae pusha jbe sub dec dec out cli adc xor jne rcr sbb xlat lahf push sbb jae and cmp movsl scas add mov cltd jnp sub fnop jp dec dec push push (bad) lret jae mov pop loop int3 sti rorb lahf push inc in cmc xchg xor das lods sbb fidivrl or adc (bad) xor fcomip (bad) pop lock jmp mov fistp cmp fbstp jmp in adc xlat pushf jl ja push jmp in lods sti hlt aam aam adc pop adc sbb dec in pusha fldt les scas hlt jne jne ss pop push jno jg or sub adc ret mov pop bound daa inc xor gs test cs dec std loop shrb in addr16 imul add xchg stos jns mov pop outsb sub scas or cli hlt pop fwait xchg cmpsb stc mov ja or sbb aad pushf sub push adc mov push and dec xor adc std icebp pop movsb lret idivl mov cmp dec (bad) add daa add jle fisubrl mov jg pop jb and insl mov adc cmp rorb ja dec mov sbb loopne and push aad (bad) dec ret in mov jnp pop rolb sub lds into in or push negl xchg enter cltd jno sbb repz add push or push mov addr16 xchg nop sarb or cmp insb imul pop jns jl mov xor mov test sub sbb lods sbb fnstenv fidivr cmpl cli fidivr sub xor (bad) outsl jl add or sub (bad) jo mov in mov repnz inc xor dec add test faddl xlat call ficom ret stos icebp pop inc inc fbstp push insl (bad) in rcll aam mov ljmp cli mov cld dec test aam dec sahf rorl subb add xor jo sbb jb xchg or add mov sub mov rcll fmull pop dec pop mov inc and iret or lret mov add adc fcoml outsl pop je iret mov xor xchg imul imul (bad) popa xchg mov fidiv pop mov imul inc testb adc inc pop std scas sub push dec cmp outsl jb sub aam and sub ret pushf dec ret stos push push loopne push movsl lods xor mov (bad) xchg sbb push fwait and xchg fdivl add pop les mov mov sti adc xor xchg fcom cltd (bad) iret (bad) cmp icebp fsubrl jg in pop push (bad) ret cmp pop fsubrl pop push lods push dec sahf push mov fs sarb lret sbb and or movsb lods inc (bad) mov call xchg hlt pop adc jecxz jle and lea sub cli repnz cli push sbb test outsb push push out (bad) sahf push push dec jecxz adc cmpsb pushf fmul fucomip sbb mov push and lahf int3 lods dec mov outsl cmpsl inc add jge adc scas and xlat aaa fstps in jns xor mov pop cld fcoms sub inc xchg and ljmp and movsl dec enter stos mov jecxz repnz test jnp lea cmp ret add sbb ret daa sub outsb pop clc mov push adc stos das mov cwtl push fwait test out int3 jns jp leave mov jne,pn ret movsb cmp daa insb fwait test pop push inc ljmp jnp add stos mov pop gs cmp (bad) add dec cmc sub cmpsl push add sahf xchg xor cmp addb mov int or movsl popf jmp int3 xchg es xchg push test lret jl mov aaa fcompl out lret hlt fldt lret or push test aad jb jo mov popf mov pop test ret inc cmpsl int adc and (bad) or les or dec arpl or add push xchg stos mov add lret fistpl pop ja xchg inc push mov push repz out mov inc sub adc cld dec xchg clc add mov xchg and sbb mov shlb (bad) mov stc sub and or cs cmpsl fidiv adc xchg enter jl mov je inc out jo test xlat insl mov aas jbe and loop inc insb mov cmp sbb mov xchg (bad) in cwtl clc sbb mov mul or aad jo repz arpl loopne insl pusha sbb sarl fldenv lret inc repnz cmp mov pop (bad) and push or pop cmp adc out std stos jne jmp push int3 jo int jb or out sti icebp sbb in (bad) fwait and ds adcl or dec iret jbe xor leave jp xchg lea cmpsb xlat pop dec pop jecxz testl ja lods call call mov loop loope ficomp and sub mov test shr xchg add sub call xor lods bound and or jl int jne outsb mov inc adc push cmpsb pushl cld clc out js test loopne push ror mov cmpsl cmp rcll fstl or mov cmpsb push js push lcall movsl mov mov in or xor pop xor push mov out mov or and aas popf push or es daa pop mov xor xor mov js jne add sub fwait adc or mov push and add pop es ror outsl or fnstenv mov dec dec mov (bad) xchg xchg sbb xor or pop mov and dec fs pop lret xorl (bad) js inc inc into in pop call in xchg arpl dec dec bound out and scas pop dec and mov ljmp data16 xlat ljmp insb mov jo pop cld xchg lods cltd or sub jbe aas sbb popa imul fdiv cltd (bad) jae push (bad) push sub xchg repnz testb ljmp rol dec jno lds sbb lds inc in dec mov lret push add push out pop call dec and add addr16 push popa aas mov jo inc xor inc pop lods pop test sub xor sahf add xorb mov sbb mov fisub pop cmc cmpsb xchg xchg and inc mov (bad) scas notb scas rcrb sub ds inc loopne fs sbb stc rolb push mov sbb mov cmp push dec add jecxz push scas adc cmp or (bad) imul dec sbb imul cltd inc (bad) movsb stos fdivrs cmpsb add add int push cmp (bad) pop mov inc cli mov mov push fwait test inc cltd cmp loopne cwtl cmc ret mov jp dec ds ror das cmpsl (bad) jno movl adc xchg rcrb icebp inc mov adc out mov xor out loop sub fs popf in or jmp loopne push xchg add cmp (bad) rcr in jb je fwait dec add scas push fs movsb xchg mov mulb negl push pop pop sub lret dec or xor mov jnp daa dec unpcklps push mov xor push and dec cltd ds cmp dec mov xor jl mov cmp scas jmp loopne or pushf scas xlat loop sub push adc push mov negl sub inc cmpsl push mov loope sub test lret in jb fwait jns mov (bad) mov popfw xchg jecxz push out lret addl adc lcall into xor scas xchg dec or adc fnstenv sbb mov lds cmp mov xor repnz pop sbb insb jo (bad) shl cmc enter xlat fcompl sbb (bad) fsubl shll mov pop out sbb mov pop test jbe fmull or shll idivl lods movsb arpl (bad) xchg add xchg xchg repz cltd sbb loop repz jge out xchg ss pusha pop pop mov jo out or mov es xor and arpl ja mov xor mov pop jo ljmp mov ljmp push jbe push sub (bad) negb sti aaa inc mov inc int3 lods sub jle ds mov or sbbb insl dec mov pop push pop or push dec testl pusha mov js popa ret cmc ret dec cmpsb xor into fistpl pop dec shlb lods add loopne sbb push int mov rcrb fs sbb int inc jno mov divl cmp sub scas push adcl xor ljmp cmp mov jge rcrl popf mov dec push lds shl pop outsl add lcall loop mov push pop jno daa adc cmpsl xor jno mov rcrb push or es mov repz sahf jp mov cli inc inc cmp sbb addr16 neg add data16 pop xor cmp fdivs adc mov loopne and xor incb cli ret outsl cltd jae bound mov roll pop push inc sub sahf (bad) mov xchg loop xor mov test inc enter mov add mov int3 cwtl jge push sub je mov xlat xlat cmp ret sbb mov daa xchg insl jle xor dec stos cltd sbb pushl sbb cmp dec stc cmpsb jae mov mov dec pop out xor xor dec mov sti inc cmpsl cmp push lods test cwtl je inc jp mov jb cmp and dec mov sarb xor cmp or inc mov mov xabort inc test icebp in sub cmp mov in fdivl imul (bad) sub lods jecxz xchg fwait push cmp lds inc mov dec xor fldln2 bound and popf lea fnstenv mov mov outsl mov aas (bad) xor add out add add fadds lds icebp int leave stc adc xchg outsb sub ds (bad) mov or stos in inc inc andl mov mov std and mov xchg xor insl jnp (bad) sub push sar sahf hlt jecxz pop xor inc mov push add in idivl or jno pusha (bad) rcrl mov push pop xchg (bad) lret lock daa mov dec mov in or cmpsb jns xchg fld iret jb sub sbb sub and push adc dec jbe stos jno pcmpeqd out (bad) push or ret daa xor cmpsb pop jl iret pop movsb inc (bad) jle push and rorl sbb mov or pop push in pop ret into adc xlat push int int3 mov mov call insl repz in aas inc push lods xor rcrl outsl pop dec mov (bad) gs fwait sub xor pop mov (bad) lock js lea mov sahf add push lret leave dec mulps bound mov and das push mov sub jge sahf (bad) sub xchg cmpsb sub add aad sub bound imul jno push out xor add mov dec pop sbb pop mov incl les lds sahf push push xchg stos pop into es mov fsubrs ret fdivl cwtl stos push lds mov cmc sbb iret inc sub rcrl and aam out add sti mov adc mov pusha frstor out add iret sti jno mov push daa leave xchg jns popf (bad) xor enter mov cmp enter push dec adc jmp pop test lahf xor movsb xor push test dec push or push mov xor xchg int3 mov outsb fistpl jo iret pop mov stos adc scas movsb push lea scas test pop xchg lea cmpsb hlt (bad) movl inc adc mov inc lahf lods cmpsb inc or insl sbb je outsl sahf pop int3 arpl adc fsubl rclb clc popl mov push (bad) mov fldenv push cmp and pop mov leave stos sbb test mov inc jo lods or mov sub (bad) clc loopne push sub or and repz (bad) adc loope loope mov shr lahf cmp sub shll fstpt pop (bad) fdivrp sub out lods test inc and leave xlat test lock sub mov dec mov dec stos jo,pt ja cmp jbe jp cmp mov cmp jmp push scas das sbb popa hlt scas lock sbb cld mov icebp mov add cmp (bad) adc or jbe inc dec pushf jae push and mov adc std ja sub insl sub out imul and inc in xchg adc dec clc mov jae xor or out adc int3 mov pop push cld shrl clc outsl enter sbb sbb aas mov (bad) xchg jge jecxz inc fisttpl call dec orb cmp push inc xchg add test mov ficomp movsb cmpsl insl push inc xor xor mov popa mov xor fucomip (bad) jbe jl leave xchg lods mov and and mov inc mov sub cltd das pop jns arpl in loopne mov sbb xor lods sbb sbb push lahf cmc cmp (bad) fwait dec (bad) adc and mov cmp jmp hlt sti roll scas push imul jne fimull jle ja addl insl out xchg push xlat mov psllw mov arpl and dec stos rorl mov xor pop adc xor pop push sbb or ret lea inc cmp dec fcompl pop insl push inc push scas or mov bound inc and in or add mov inc mov jno jmp test mov scas push mov pusha mov call mov push push das pop call pop xchg jmp inc pop lret mov rclb or cli add popw sbb icebp sbb inc hlt cmp jae cmp aaa xchg mov dec mov iret divb push ds cld pop inc cmc bound out fyl2x or in xor xor repz addb loope cmp cmp dec push dec adc jae cmp or xchg fildl add scas jns add ja out pop xor jnp enter sub enter sub push jb and inc sbb (bad) cmp mov sub bound sub xchg sbb push (bad) cmc dec push fisubrl mov dec ds mov iret loop xchg pop mov enter test inc ret xor sbb cmp jbe push push fcomps sbb (bad) icebp sbb sub out jnp adc outsb adc loop inc lods mov (bad) ficom test sbb in inc mov (bad) mov inc in add test rcll inc ljmp fcmovnu inc cmp daa sub or adc aad stos sbb cwtl xchg mov sub push or add inc xchg loop hlt jle clc xchg (bad) leave pushf mov or scas in loop adc dec cmp xor icebp data16 adc inc jb mov add movsb not scas repnz stos or mov lods (bad) or push pop push pop or mov mov push in mov fldt addr16 ss leave pusha jl mov add les jl in imul xor push or lods inc ret cs cmp sti mov repz imul rclb sbb aam inc sahf scas jmp lcall js and inc dec adc cmp popa dec rcr scas jle fsubrl loop jp jbe sahf jp xor push cmc cmp cmp les add and cmp sbb mov mov test mov es and sub out and icebp mov sbb js outsl dec push imul cmc inc and push xor xor dec dec cmc rcrb dec fbstp rolb test mov sub push cmc outsb xchg aam sub mov cmpsb jmp add inc xor stc sub (bad) std sahf cmpsb xor mov aas shr je sub js lock bound ror fnstenv hlt sbb xchg lahf dec (bad) lods xor insb loopne loope lcall stos adc mov es cmp mov push dec ret stos xchg cwtl scas subl leave adc pop and cmp xor shll hlt test test or sbb jbe (bad) (bad) mov sub inc sbb xchg jecxz dec inc mov fldl sbb push mul pop dec int3 das into mov jle in lods stos cmp cmc cmpsl add mov adc adc pop repz sbb xor pop add push jg or je punpckhwd lahf ret xchg jecxz push loopne add adc cwtl mov and imul push inc (bad) mov add sbb jne push sbb xor pusha jne loope xor cwtl js jae stos mov fwait iret or adc cld pop jae stos fadds decl addr16 adc pop in es in popf mov add xor sbb pop adc lds mov xor adcl push push aas xchg inc jle add or daa xor into loopne movsl adc dec mov mov cmp insb xchg pop sub fcoml rolb xchg je lds ljmp sbb mov jnp cs fldcw addr16 and mov adc jl test popa fnstsw xchg notb imul ljmp pushf lcall adc and xorl pushf scas lods loopne arpl in xor addl sbb sub mov add adc ret and scas push jae xchg jae inc push pop stc call and std fsubrs or (bad) jb lods mov insb sbb dec mov inc stos xchg or sahf or popa lcall pop aad fldenv (bad) or int3 mov sbb inc inc js repz push pop jmp dec cmc aam outsl aam jle clc (bad) jmp mov js jp mov cmp rclb jg xchg daa lret insl (bad) push gs ss dec mov lds push or rol mov lods dec pop adc lods leave cmpsl lcall mov xchg lds mov pop add push jb andl or sub jg sub mov (bad) push push xor dec mov in xchg push icebp inc rorl shrl xchg pushf pop jo sub cmp cmp mov cmpsb jmp inc (bad) sub mov pextrw aas cmpsl cwtl add mov call xchg insb addr16 (bad) popf insb push mov add mov loopne cmpsb mov pop add (bad) (bad) ljmp (bad) mov jecxz or jge mov mov scas add ljmp push sbb pop xchg fisttp adc xor inc sbb jnp mov flds loop dec xchg jnp aad cmp add fmul insl pop ljmp add add jg mov jne jl mov and jno movsl sbb cmp mov cmp repnz jp adc sub subl add popf push jne add cmp aam pop shll imull subb sarl mov jbe xchg stc add fldt pop push sbb inc jo sti (bad) xor mov push pop insb call mov outsl movsl pop sub push call and test xor jmp jecxz push xchg xor lock dec stos adc les stos mov cmp jle mov mov test sbb imul mov mov imul push leave xchg pop xchg dec (bad) fadds jp dec shlb mull pusha fiadd fwait sub pop lea cmc sub dec push inc lds jae fcomps clc push pop add sbb lock mov or pop pop sub and jne jge sub std sbb mov adc icebp les mov mov jle rcrb mov add (bad) clc stos (bad) std scas subl cmp sbb rcr mov and sbb mov and test scas stos sbb pop jb cltd push mov out aas insb jb scas xchg aaa push push mov mov and sarb enter rcl pop inc and repz cli cmp out or ficoml lahf fisubrl (bad) (bad) mov stos push (bad) (bad) in loopne pop adc adc jae aaa jecxz (bad) (bad) loope push mov jbe jno test loope pop std cmp scas and aad imul sbb or dec push or repz jnp jno or mov adc mov xchg das mov add pushf add (bad) adc das jnp ljmp es adc addr16 pop pop movsl imul decl cmp rorb xchg nop mov xor movsl pushw bound xor hlt sub xchg psubb jns fld daa leave xor movsl xor mov test pop push xor loop out inc sub sahf ret es jnp xchg mov rorb lods fdivrs frstor out ja out cmc cmc dec mov test mov imul cmp inc sub pop call pop repnz iret pop js pop push push add outsl pop (bad) dec push mov fcom mov xchg leave mov mov fmul int (bad) into lcall sqrtps push das mov in xlat js xchg sbb dec js stos shrb or movsb push ficom inc leave dec mov imul or cmp sub int3 jl das ss test xchg lahf fisub std inc mov mov insb push inc cli jg sub jmp into mov xchg add popa repz xchg fmuls fsub jmp push jge fmull popa xchg and fdivr decl mov mov mov jle andl aad xchg jno add cmp mov and lahf or pop test add and daa mov mov stos mov add or fisttpll mov in inc std mov (bad) in push jbe inc loope xchg pop pop test mov hlt jns test shrl pop and push push sub jmp ret sbb mov mov xlat push enter cmp mov pop sbb cmp and nop iret push cmp xchg or add popf pushf (bad) lods push cmc mov inc jnp lcall test (bad) lret adc and push sub pop aas stos scas cmp mov sbb jns repnz mov jae cwtl ljmp lret outsb jmp jo fs loope xchg ret sub loopne (bad) outsl mov mov pop add mov mov jge mov jg pushf enter inc add cs mov pop pop pop cmp sbb sbbb sbb (bad) adc mov in mov lock (bad) xchg mov add xor mov test jno icebp out movsl popf or nop clc test into dec (bad) xor shlb inc ffree lods jb mov outsl je sti movsb in fisttpll je popa and cmp xchg cmp repnz sahf ljmp (bad) xor incl adc rcl xchg test les fistpl mov test mov out cs int mov add ljmp pop pop inc or sti push gs cmp stos (bad) ss (bad) dec cmp or mov cmp mov sbb xchg daa push hlt or push cmp addl inc test and cwtl adc lods jbe pop add mov movsb or pop jne jecxz jbe push sub jge test mov ret pop jno lahf loopne imul es inc divl ss adc mov data16 dec cli xor clc bound ljmp cmp mov (bad) into pop mov sbb stos jmp js adc jecxz mov int out data16 push fistl in add cmpsb adc dec mov dec push mov lcall repnz (bad) shrl adc in (bad) (bad) sbb das sbb movsb mov lods mov mov sub out add push (bad) and xchg lret cld stos stc ljmp ret dec push inc mov (bad) es jns sub and push aad xchg scas fstpl xchg ret fchs push mov mov cmc mov das shrb xchg adc icebp cmc leave sbb pop in push push call lods in add add (bad) int gs and sbb jecxz jmp stc int out push and and out call fwait mov test test sub jne addr16 imulb in mov push mov out nop lcall into dec mov jge push cmp fistl mov or dec sub fucom cmpl xor sbb outsl xchg lock mov lock push sub xchg pusha imul mov jge lods xchg mulb xchg xchg adc xchg hlt pusha fcomps inc mov rorl test jge push pop icebp (bad) into aad int imul loopne cmpl js into xor pop pop xor cs mov adc mov repz inc insl jmp das pop jge and lahf mov mov ret ficoml add test adc cld sbb push mov or scas mov and vmovupd sahf bound sbb test push shll push outsl cltd imul inc push adc in das into (bad) fmuls mov or xchg clc and insl lds es (bad) fistl clc pop hlt cmpb std add mov mov cmp cmp sub or roll jae in pusha and fwait (bad) or daa inc fnsave ja sbb and mov out out xchg repz sub push or int3 and movsl shld inc jmp xchg jl mov cs lahf xchg cmp adc dec mov lret push (bad) jmp test push sbb mov or in stos mov mov add inc lea sub (bad) pop and daa xor and mov shlb xchg sbb scas je mov jp xor lds cwtl push repnz sbb push cmp pop inc pop bound mov rcl dec notl clc fs lahf mov inc lds cmpsl and adc or sbb adc cli roll dec push xor inc cmp add mov repz mov pop pop mov movsb repz nop inc sub fnstsw fisttpll daa mov leave int jle mov mov jg push icebp icebp mov (bad) sbb push pop push in loope (bad) sbb sub in cwtl mov imul imul icebp jns ljmp jns (bad) mov ljmp mov jbe jb xor (bad) jns mov sbb pop sbb (bad) jbe cmp mov mov inc and rcrl or loopne mov xchg in mov sub loope sbb mov sbb pop jae mov (bad) dec iret adc xor lret in lcall xor popl sub bound push jg lea adc push das and jge jmp aaa (bad) data16 (bad) dec mov mov mov (bad) sub pop xchg std sub js jg addr16 push test mov push aaa mov in xchg adc fs sbb scas shrl sbb or adc and mov jno fmull inc data16 ljmp (bad) jne xor push int cmpsl (bad) mov popa mov scas icebp mov insb ficompl dec jle std jle push inc lret arpl lods jb ds jne stos xlat ret pop test lock pop mov or rcr leave mov xchg adc je sbb test testb stc jno fiadd mov fstpl xor pop lahf dec fwait outsl pusha fistp test sbbl dec cmc lea and jmp testl bound scas insb or mov mov arpl int3 fildl enter dec (bad) idiv add insb scas jnp (bad) repnz sbb xchg mov orb pop push mov in inc shlb jmp push in cmp ret ficoml jmp std and movsl in adc xchg cmp iret mov mov jp ja arpl mov scas dec and cmpsl adc xchg ud1 outsl loop aad mov xchg xor jge dec popa mov les shl imul push fistp mov or jmp test pusha adc or lods mov jge adc jg mov bound mov mov outsb dec mov and add jge in aam outsb or mov fsubrs jae aad xlat mov in scas or jns jg mov sub xchg xchg xlat cld popf outsl jmp xchg shl cmpb (bad) jge (bad) dec (bad) pop repnz sahf cmp inc in jns sub test cmp push fistl sbb pushl test push icebp enter repz in sub es push nop cmp ds call dec (bad) mov shr shr hlt pop jge sbb jp scas xor jno pop jl js pop repnz dec push mov stos adc out jnp lods push mov adc inc negl push call das test mov pop pop push clc push xchg and dec imul pushf stos (bad) jnp mov ffree inc js outsl roll and punpckldq sahf push in xchg insb imul cs int3 jns loope sbb arpl add sbb pop ret add sbb push add cld add inc mov jo,pn dec ja adc sub loop lock stos cmp js divb aam (bad) ret mov push cltd mov shll in test pop jno aaa push aam mov aaa or pusha mov cmpsl mov bound arpl out push lds cmpsl mov sbb adc (bad) xor inc jmp fistp adc andl and push xchg addr16 test rcr gs jle adc mov mov out sub arpl frstor dec sub hlt jmp push push inc lcall ret sbb insl into mov test cmc (bad) hlt out (bad) mov je les nop mov incl adc movsl dec pop xchg sbb mull or fildl jns jle sti (bad) sbb adc idivl xorl outsb or jmp cmp das int ljmp pop daa int int3 aam popw jecxz jle adc push jl jecxz xchg cmp ljmp pop lds out popa in mov dec fidivr fisttpll pop push inc imul movsb repz jmp imul jns adc xchg fwait mov scas scas mov jae cmp rcll call stc adc lret and rorl outsb xchg cld add addr16 inc (bad) xor cwtl and sub inc outsb fldl xchg add aaa adc pop cmpsl daa test pop jle or stc jb mov ret jg sub push loopne shlb xchg sub xchg daa or popf mov cltd mov (bad) adc (bad) out mov lock push mov or ja les pop sub enter inc in sbb fstpt jno add pop stos call add inc pushf mov mov mov outsl dec mov lahf jns sbb jg sahf les call leave cld pop mov nop test (bad) mov and push adc popf mov das pop or lods xor sbb (bad) mov movsl repz mov jge add sub pop jg fisubl int3 std jg fwait test iret jle dec cltd mov iret aas cli dec adcb les pop ds push mov outsl pop stc ljmp pop aas lods pop mov mov (bad) hlt sub lcall (bad) imull and out dec mov cwtl mov cmp daa sub xor in test clc cltd ja inc xor push push push (bad) lret adc pop (bad) mov xchg pushf pop inc jae pop fcoms pushf push fisubr shlb fcmovnbe jl fs (bad) in or cmp xlat push dec test or sar push and or fildll js mov and leave mov jnp xor xchg mov aad push mov test or push mov clc or add xlat xlat mov insb fimul enter pop dec xor cltd and or dec dec push mov lret push mov mov push idiv xchg shld xor mov pop (bad) jb ljmp mov jo,pn and pop sub mov mov xchg aaa sbb xchg sbb (bad) mov sub cwtl mov data16 out xchg cmpsl ss test or iret sub je test and data16 sub pusha inc push hlt loop lahf sbb into pop xchg (bad) or push mov in out sbb cld jl pushf sbb mov ja mov movsl adc push mov pop cmp and cmp scas mov cmp dec dec cli shlb push test test and pop negb pop and jno loope pop jp push mov xchg cmp push sbb mov xchg xor nop push in push test aam sbb je mov add push add pop sub dec iret xchg inc cs cli jge sub mov fwait data16 pop cmp jp and jecxz movsb lds mov add sub mov imul aam movsb inc pop (bad) mov int outsl cli xchg popf repnz fdivs daa insl add hlt dec ds mov cld lret pop lods dec sub in (bad) loop lret adc outsl sbb stos push inc lahf inc in pushf (bad) inc and jno ret mov lods inc dec and cmpsb add push popf xchg movsb mov add jb scas cmpl sub stc push mov push inc dec ss sbb aad and pop dec daa lret aas push fdivs mov pop stos fldenv lcall stos dec iret popa xor lods ds nop push cmpxchg xor push pop mov lret push fidivr mov push pop mov (bad) hlt mov xchg mov lret cmp inc in cmp repz xchg jbe push push andb outsl jb dec repz js push aad cli mov je inc pop xor dec popa loope fucomi xor xchg fsubrs sbb fisubrl and stc cmp sahf loopne das mov loopne push dec js lret sub sub inc test inc icebp xor arpl pop push or dec fs (bad) popf bound sbb (bad) xchg lahf cltd mov lcall dec dec repnz cs inc shrb in scas in add mov or hlt xor bound pusha adc lret push add mov sub jmp pop or psubusb inc fildl ss sarl add test lds cmp test dec insb adc mov mov dec sub sti gs sti mov incb cmp mov mov dec inc mov je lods scas arpl pop rolb push jb pop mov ljmp scas adc stos dec pop xchg mov repnz xor cmpsb and pop in cmp xchg dec ficomp push mov add pop push xchg leave scas lret lock xor push lods push dec fimul insl jmp loop cld or shl (bad) cmp iret fwait aam push mov sbb in int3 or mov and adc xchg pop mov xor pop pop out mov sahf sbb xor icebp lock pushl in out sahf and and cld adc pop xor das pop (bad) stc stc movb loopne cwtl imul pop mov add push pop jl add jecxz repnz add xor push push fistpll mov jne sub out push mov jecxz test and ljmp addr16 adc shrb push dec mov icebp or dec test mov (bad) inc das jge in aad lea lahf je adc sub dec dec out int3 int lahf push iret ja aas cld lock bnd gs cmp mov sbb xchg ficom inc mov and icebp inc test and and xor cs std cwtl data16 ja inc popf ret jo inc xor (bad) jge jg jbe stc mov xor sbb jb addr16 pop cmp add adc lcall ss cmpsl es (bad) dec (bad) fdivrs mov mov shrb out mov cli outsb call aad je mov insb jb in imul cmp push pop jecxz insl lahf lods mov lcall cld (bad) xchg aad nop ret inc adc jecxz lds (bad) sti jecxz jno push sbb cmc lret loope inc test std in (bad) rclb insb inc dec and aad jnp mov jne aaa mov or xor into xor gs xor out jmp xchg loop shlb xchg lahf adc cmp xchg or js or rcr out xlat xor (bad) call test addr16 es js lcall ja stc mov jne stos js test adc mov cmp int mov shl imul add bound mov or sub (bad) pop popa aad je or sub imul rorl addr16 in aaa jb imul mov xchg cs repz popa nop lahf pop pop addb lret mov cmp mov in xor in sbb sub push stc mov xor stos mov loop popf (bad) or lods xor sbb fistp in dec mov push xchg aad out inc xchg pop stc loope sbb (bad) loop pop sub dec dec loop dec or and adc sbb test fildl mov fmuls xchg outsl push dec mov inc js stos cmp inc cmpsl push and aas mov fidivr sbb xor bnd fstl or and adc gs scas insb cmp cmpsb cli add cmp out (bad) leave push jb push ljmp sti inc dec jp push push stos mov pop push mov fisubrl aaa outsb mov fnstsw xchg (bad) and out mov fisttpll cmp inc xor addr16 loop jnp pop popf shrb sbb mov mov mov xor push (bad) jno sbb lock stc mov (bad) stc (bad) or push add movsl adc fs jbe sbb and fs adc inc out sub inc inc fldt loopne in dec cwtl mov push (bad) fmuls ljmp push dec enter inc pushf cli xchg shrb movsb cmp out stos mov test dec popf sub andb aam push out mov daa jg outsl lods mov xchg data16 push lds jae in mov jns (bad) mov rorb lock sbb dec xor or (bad) lock sub sbb icebp and add hlt mov pop test and sbb jno cmc (bad) repz insb rcll cmp push xor and and (bad) aad lret pop insl iret in cmp jno in pusha xor cld fnsave push jne and cltd jae iret lock dec sbb add outsl aam push add mov jae out bound mov jns gs cmp adc lcall mov fistpll jb int cmc dec adc (bad) mov xor push jnp jge (bad) pop fs xchg xchg xor int3 add mov cmp idivl cmp icebp cli mov fist imul popf mov dec and dec rclb in flds push cli mov pushl mov jae cli in ret leave (bad) inc pop sbb (bad) aad repz inc sbb dec or dec out add insl push xor push repz fmul xlat popl prefetchwt1 imul icebp das inc and scas mov pop xchg (bad) shrl mov mov mov xchg loop (bad) sbb jmp iret xor or sub mov mov mov push pop aad add sbb test pop jne adc ljmp pop mov jmp cmp mov push les cli jmp jge sub mov outsl xorl xchg cmp int3 loopne jl and add cmpsl sub xor mov inc add data16 out imul fdivrl adc sbbb dec dec inc xlat mov pop movsb xor dec cld and pop ret bnd jl or xchg add jmp lock inc stos mov popa and cltd popa repz mov aam imul out rol mov jge leave pop sbb dec movb jecxz sbb mov cltd push fnsave dec in sbb and sub push sbb bound std push push (bad) dec call mov fstps cmp mov xchg pop (bad) lds cltd insl push xor ret es out daa incl dec inc pop jne cmp int call lret mov lahf jbe push lea fwait sub add inc xchg and mov dec or lret jp mov sbb mov cwtl jae jne ficompl shr jne in or sahf fnstsw xor mov mov sub push jle jbe sub mov sbb xchg arpl out push dec into pop lods jae push and add and (bad) mov mov jns adc mov add dec jne jmp arpl icebp mov repz mov lods jae pop fwait mov or shrl addr16 scas test mov test and mov dec sbb aaa jp mov cmp jb in daa (bad) enter jge xchg icebp cmp rcll repz fs or xchg pop adc (bad) mov sbb rdpmc push loope xchg inc mov mov mov icebp sti add cmc negl daa jge cmpl popa inc mov movsl lcall add shlb mov imul xor test mov xchg enter sub outsb jl sub sbb lock leave dec btr lds pop in xor xchg add or mov push sub jo add test pop stos enter and in xchg mov bound cmp xchg std mov hlt mov (bad) jmp mov cmp outsb sarb xchg daa into into sti (bad) icebp mov bound daa rcrb jmp add gs repnz pop add mov jbe pop pop xor imull aas (bad) imull mov hlt sahf xchg (bad) scas mov aaa xchg loope jl and out test push mov pop sbb sbb push mov fnsave imul mov mull mov sub jmp pusha and dec call flds lds add sbb in inc lret cmpsb hlt mov incl fistpl adcl lret enter push movsb rol cmpsl lock or and jg or movsl xor (bad) xor loopne push lock dec cltd test lahf pushl sbb inc sub test jp adc push lock xchg adcl (bad) mov adc dec adc pop push pop push stos or mov fcoms imul aam (bad) inc or jp jns imull or loopne fbstp scas cltd sbb mov xchg jnp mov pop into gs xchg mov dec sbb imul mov lock adc xor pop scas out jecxz cmpl fimull mov xchg js pop (bad) rcrl mov xor ret jmp in int lods mov cmp dec lods popf (bad) stos in stos xchg lret mov or cli imul jnp pushf les mov adc adc mov xchg mov mov cmp cmp lahf mov inc sbb mov cmp fnstcw adc cmp js (bad) (bad) in rcll jae inc movsl pop dec push jmp (bad) scas cmc xor lods add (bad) adcl pusha dec lret repz nop loopne into xor dec mov add cmp daa and fldt cmp xlat sbb lock mov nop xchg add jge in jge sbb aas test fildll mov out push mov sahf insb add cmc andb std push xchg gs shlb mov bound les sub xchg cmpsb test in icebp jb or adc mov mov cltd add xchg jg dec jecxz cmp out (bad) xchg jle addr16 stos fildll push rcr fdivr and mov mov jp cmpsb hlt add pop setnp lret mov and push lods std negb ljmp popf add inc mov add jp or fs xchg adc shll repz (bad) (bad) fdivl (bad) cld paddb into cmpsl decb sbb lret mov mov pushf or cmpsb adc fs lods ret jecxz and out fcoml out fsubrs aad add mov jle outsl lock dec xor adc xchg loop jecxz dec out and (bad) ljmp sbb (bad) cmpsl mov cmpl mov sti (bad) pop inc adc inc adc mov roll push mov xchg xchg jnp mov dec jg pop mov cs shrl das out shl js add sahf fidiv adc ja inc mov in sub mov jl mov inc inc repz mov adc jo out adcb aaa sahf aaa inc lods sub xchg clc sarl mov sahf mov xchg sbb mov gs mov mov xchg stos out movsl push push loopne ja inc clc push loopne inc cld cmp inc jno ja out (bad) mov int mov int3 (bad) pop int cmp pop add sbb rcl sub push stos pop sbb mov inc inc push imul mov xor movsb movsl sbb cltd jmp mov pop nop dec mov xor mov shlb fildll (bad) mov jb repz mov es inc mov addl or (bad) pushf rorb lds mov fwait incl rdpmc xor repz fsub xchg clc jge pop sbbl and xchg jle enter push stos clc incb mov pushf aas (bad) mov lods xchg fisub outsl mov lahf inc imul lock data16 ss pushf push push (bad) xor sahf jmp leave loop cmpsb mov pop jmp sub fisttpll jns repz test add shrb sbb sti leave add pop push mov cld mov jne mov pop cmpsb mov mov (bad) inc fimul mov xchg dec fiadd ret sbb pop das xchg or jae sub shll (bad) sbb mov sbbl popa cmp aad addl xor sahf cli gs xchg xchg push sub mov pushf test popa (bad) mov mov sahf jle je mov aad mov sbb pushf (bad) or pop int xor lahf cmp mov mov insb rolb cmp cwtl xchg aam xchg hlt popa mov push stc cltd pop xchg push shl imul idivb dec dec cmpsl loop ret xchg push mov add je call adc (bad) aas sub (bad) cld push addl scas or fcomps movsb add sub stc lods mov lahf mov std ljmp (bad) dec mov je out mov mov dec add dec push mov add test bnd and xchg mov test dec pop test mov fwait pop dec incb cmp aam fldln2 mov into ljmp xchg ret inc mov nop inc pop movsl loopne inc aas jle std outsl call xchg cltd sbb adc call (bad) cmpsl adc adc adc cwtl mov pop fwait mov jp or xor jmp les (bad) jo in xchg test pop mov mov in cmc test ds je dec stc xor jns aad faddl dec dec mov lods jb mov call lret out cmpl push jl outsb or add or (bad) lock fisub cmp (bad) push call fcmovnbe aam dec sub or cs mov shrb imul test (bad) lds roll pusha mov imul outsb cli push mov mul ret fnstcw xchg (bad) mov xchg xor (bad) out cmp pop sbb addl pop cmc notb add mov xchg popa xchg sti int3 clc cmp cmp test insb adc push arpl pop std mov mov bnd jmp push mov (bad) fnstcw sbb cmp push iret push add jge addb les mov inc stos (bad) mov stc dec (bad) lds repnz shrb mov repnz adc out push jbe rcrb dec mov xchg outsb stos test aaa fcompl lret pop dec dec sbb sbb dec and xor inc xchg xchg dec pop repz stc imul rcrl das mov add sbb jecxz dec daa mov jne int inc mov rcrl sub je aas mov out pop jl pop in pop outsb mov add xchg jns imul xchg divb test gs iret int jae imul ja sar push sbb cmp rep sbb in xchg sti jns xchg imul jb and sarl das pop je in ja lret adc adcl mul xlat lods cmp mov cmp push lret and jae cli sub push lcall dec and sub into stos and cmpsl cmp pop inc xor pop mov loope push and mov cs sub out sbb push sarb sbb push fisub pusha je movb inc loope addr16 xchg ds sahf push int3 cld fdivrs jns aad mov mov addl sahf icebp pop addr16 aam inc and mov lock push stc mov pop xor push adc mov (bad) je jne cmp leave jae mov mov jb xor and int3 int3 inc addps (bad) mov loope lret or cmp outsl lret sbb cmpsl mov cmp dec sbb add mov pop inc xor xor popf das fist test xchg mov add xchg sbb out push or test adc jb inc lods jge xchg pop popf (bad) fidiv lods mov sbb add imul dec cmp mov cmc mov aam add loop sahf mov xchg cmc xchg neg bound pop mov sub sub mov sub pop adc cltd into movsl and xchg test sub lock aad nop cmp mov fs mov mov add cmp enter jl pop incb jg inc lock and leave ljmp jbe pop repz repnz push cli mov jmp in int psubw cli arpl in out rol xchg lods punpcklwd das xor or arpl ljmp sbb into mov xchg xor scas cmp push jmp rcrl ljmp jo int3 lret mov mov (bad) dec ja jge dec (bad) dec jge xchg jl mov out insb repnz ja pushf pop xchg test dec mov or daa fimull cmp sub sub (bad) stos fimull mov cmp ljmp jb jno ret lcall xchg mov sti inc leave (bad) lock stos gs pop xchg mov pusha xchg mov fst scas inc cmp int gs repnz in push imul in arpl imul inc loopne mov ds lcall mov xchg inc cmp inc (bad) and inc mov fiadd movsl fldenv mov mov pop insb nop or jbe sti sarb lea stc in or loopne mov cmp pusha out out popf movsb fcomps push ftst nop xchg mov pushf clc xchg fisttp sub stos cmp fsubrl jns movsl out xchg cmp test xor pop fs (bad) push adc call pop dec sbb ja negb mov pop jge sub imul mov pusha mov std push sbb in push or in addr16 sahf pop add dec xchg (bad) push cmove mov (bad) lock xor aad cli bound mov sub mov jp push mov mov xor fs out ja pop stos imul jne in call sbb sub ljmp stos inc and int cmp stos rcrl sbb jb ss mov jae sub ss loopne sub adc inc push stos enter (bad) mov jae lea lods jmp inc stc adc adc lods and push mov push xor fcomps mov mov (bad) pop fsubrs sub cmp (bad) sahf stos jne rcrb stos call lcall pop or sbb imul out rcr cmp popf mov pop inc stos std pushf repnz cli (bad) cmp in inc (bad) xchg test sbb nop out pop (bad) addr16 enter sub cld lret mov add push xchg cmp imul cltd mov xchg mov outsb inc mov outsl ficom cmp adc inc dec inc or dec test inc cmpsb rcrb xor out xor adc movsb std inc rcll pop mov movsb push lret iret out jae movsb cmpsl sbb add xchg pop out mov (bad) mov jmp sbb inc add clc pushw push stos dec in xchg fcoml mov cmp sub jo in inc mov std adc push inc mov lret sub (bad) out adc cmp stos cmp mulb sub imul xlat add pop frstor mov jle aaa imul es hlt aas cmpsl cmc cmp insl cmc mov sub mov cmp ds fnsave push sub mov mov and dec xchg sbb rclb jmp dec mov scas jb cld xchg jl and or jb pop cs xor roll outsl jnp adc xchg lcall sbb dec jmp test dec pop cmp popa add xor add push inc ljmp sti cltd push inc fwait outsl xchg dec scas ficom sub cmpsl jecxz (bad) xor in cmp sub push jp pushf push inc inc mov sub cmpsl push jb scas pop pushf jno inc das xchg aad mov sbb xchg (bad) cmc int icebp xor inc add mov mov out fist jle xchg jmp in (bad) mov xchg cmpsb outsb sti add or or jae scas jle mov inc mov ficom add (bad) pop testb (bad) inc push add scas lret mov mov adc xchg enter fcmovne mov add and in push add in fistpll push arpl and cmc ljmp aaa add movaps inc pop fnsave lret das mov push cwtl fsubrp jmp and adc inc icebp mov negb aam adc pop cmp or lahf inc pop or mov rorl xor fnstenv mov out popf icebp sbb jp mov sub add sub xor out jae lret lcall and (bad) push int3 sub sbb adc pop je lock xlat fcmove (bad) outsl ffree movsl mov mov repz mov push out pop aam pop jne and sbb fstpt mov sbbl rorl adc int3 mov insl flds fistpl push mov xchg arpl icebp sub xchg mov mov mov test mov (bad) mov push scas loopne arpl inc or (bad) and outsl dec pop hlt cwtl push push adc frstor and cwtl stc andl fwait dec inc cld insb popf fbld stos nop ret incl cmp mov mov mov jo repnz mov cmp xor daa test sti and cmp fwait mov movsb lret mov pop outsb nop movsl aad push cmp pop xchg bound push fistpll add sti jg test pop lock outsl jecxz pusha lock mov fsubrl ret outsb test and push call and cli mov lea out push xorl sub int jne cmp push xorl sahf std add cltd xor leave fldt adc push mov pop andl mov pushf mov pop sbb add mov fdivrl idivb dec data16 jg stos pop pop jnp fmul xor or jns cmpsb pop js xor test enter or cmp cltd jp leave dec push mov cmp or mov mov test and lods mov pop test mov mov mov adc scas ficom sub fisubl mov push sbb mov or shrl lds lahf pop (bad) mov shrl dec popa lea jl fsubrl fistpll in sbb lock ja lcall in int3 and and lret or pop jne lcall mov lods aad or iret divb add pop mov arpl and push fimull jae push jp mov lret test mov jmp lock mov imulb pusha mov rcll pop sbb in cmc add add pop jp sbb test fndisi(8087 nop jns or aaa sbb pop mov sbb daa inc iret jecxz mov pop mov push xor imul jmp pop or aas fmull push pop testb mov mov inc insb mov dec add sub push out lods rolb fcompl pop sub aam fisttp je push loopne lods inc xchg pop scas push push (bad) idivb paddusb (bad) xlat ljmp or jecxz xor inc in je xor shrb cmpsl cmp scas sub mov (bad) mov imul lret (bad) mov test subb jnp cmpsl (bad) lret rclb (bad) shr push ror popf add (bad) hlt int3 and ret xchg mov clc jb push add (bad) jmp fwait mov sbb lds arpl sbb push imul negl xchg ja and jne push push lcall fwait push les (bad) dec mov sub pop aam adc dec adc ljmp out xlat add sti push pop mov lds fsubrs int data16 cmp mov and call or jb sub (bad) idivb insl loop call pop imull fnop xor (bad) enter dec cli push lods pop rorb out jmp ljmp pop scas cmpsl aam push andps push mov or mov jns loopne pop scas mov es enter stc cltd cld sbb jae (bad) push add dec int3 cmc cmc mov mov icebp sbbb inc cmpb loopne testb stos fstpt pushf xlat daa lret xor mov lahf dec repz cmp imul int3 js stos lret std cmc jg dec cmpl xor call sbb or int into scas sbb (bad) adc xor jnp dec lds inc mov xor loopne lock lcall push loopne dec sub addl adcl or loopne push loop or imul push xchg mov cmp lret inc mov pop or pop fstl push sub mov loop sub lahf pop push inc mov (bad) jns cli push (bad) outsb pop arpl dec push cltd aas sub adc cs roll out xlat dec sbb (bad) fisubl jbe cmc xchg test fcmovnb paddd outsb mov aam pop call imul push dec out js mov mov notb (bad) repz or sar inc jp sbb imul popa xor int in jl push mov leave ret jg sbb lcall mov mov xchg inc jno xor lret pop adc xchg and scas add push lahf cld xchg jo ja cwtl in out dec mov xchg add pop (bad) sub mov insl cmp jne xor lods xor pop cli rolb cld push lea int3 adc dec mov jo ficomp cmp or jecxz iret ret daa push jo pop pushf cmc jle aaa mov or sbb je adc repnz ja or cmp xor xor mov in movsb push fnop (bad) in mov pop sbb out loopne enter ret lret mov (bad) dec push fs pusha sub fimul aam cmc jb add xchg outsl lds call je aam xchg mov roll sti pop mov push daa ret pop push fist mov fprem1 xor pop pop add movsb xor mov jg test xchg xor repnz imul cltd cli (bad) in add mov ljmp fisttp xchg dec pop fdivrl ficoml mov loop mov gs jo mov mov sahf nop adc jae jne dec mov outsl les sub xchg add jbe mov lret pop sub dec jbe ret cmp int3 loop push popf insl cmpsb fistp ljmp popf popf in dec movsl mov cmc xchg outsl into cld cwtl xchg mov leave xchg and sub (bad) loopne (bad) out sub dec mov loop xor rclb cld scas in arpl adc push add repnz or add pop popa mov outsb xchg in popf sub pshufw mov dec ret nop mov bound stc xor clc (bad) es shl mov mov aad frstor mov popa adc pusha xchg push imul repnz arpl pop daa dec mov ljmp pop popf xor xor jmp mov in pop nop jge mov (bad) xor push call imul lret push repnz cmp push dec pop push inc int mov stc call jb push xchg test in xchg rcll mov (bad) icebp sbb dec lds repz push pop add mov or jo loopne or (bad) pop fcoms mov in rcl push fstpt dec jnp insl pusha push popf xor xor pop roll xchg pop jne dec push dec stos xor loope push (bad) (bad) popf (bad) std adc mov jmp cmp test nop leave repz jne rcll ss rep movsb pop inc lcall adc sarb jp pop mov hlt ss add mov jnp pop add pop adc ds js ret mov lock in das jle fucomi inc adc fsubrs add ja mov in pushf cli add cmpl or gs enter and push inc fstpl inc dec subl loop mov std push roll out cmp stos or imul mov mov das sub shlb cwtl lods leave pop test (bad) dec aad push push push jo aaa in push xchg lods ljmp and pop add jp sbb mov and lahf pop mov sahf or shlb rolb pushf pop adc lods sbb mov aad adc jmp and mov cltd sti sahf (bad) jmp push in jg xor mov pop jns dec adc mov mov pop jno imul mov mov lret repnz lea mov inc xchg mov pop push mulb pushf jnp dec xchg jb xlat ja (bad) mov sub bound adc xchg or mov in inc outsb clc iret ret fsubrl lret cmc sbb (bad) and sbb adc iret sub xor sub shrl jne xchg pop and push adc add inc pop mov fisubr fidivrl stos inc pop cmpsl and sbb mull shrl xchg or pop loop std xchg shll or sbb ficoml mov std jbe or ret xor ljmp fsubl mov icebp sub push sbb cmp cmp inc icebp or jne pop jnp pop pusha rcrb pop pusha pop lock ja test inc pop hlt jo gs inc rcrb addr16 mov mov dec shrb test xor adc int3 pop xchg stos shlb repnz inc cltd fldcw inc jae ljmp out sbb lret stc sti iret jl ja js adc push xchg jp pop inc into rcrl mov push std inc out mov fcomps pop out stos sbb adc mov into mov jne in xchg divb cs orl icebp and pop movq cli out push pop bound jb jmp enter int3 cs mov movsl arpl mov daa outsl adc loop cwtl bound roll gs das clc sbb xchg in sarb mov mov clc sbb push inc inc adc sahf into add mov jae dec jmp sti cs mov and xchg in scas cmp sbb pop push mov popa dec fstps add ja in jg sar xor adc imul js in loopne fmull xor jl pop rclb push mov add fnop and movsl adc enter pop shrl orb pop outsl sbb mov sub and sbb xor push xchg jmp in ss mov out push int add addl popf adc push insb daa xorl pop xlat pop or loope push and mov in cbtw pop shl clc movsl sbb fcoml sub cmp pop ficompl iret pop sbb xlat add js test (bad) lods cmpl ss out inc lods das notb mov jno and xchg jle jne ss scas scas ret jo pushf mov sub fwait pop and cwtl sub jb dec mov es sbb push lret add ret pop adc mov or inc lea in adc fs mov aad inc (bad) mov (bad) jecxz mov loopne pop mov cmp aad pop add mov push mov (bad) out test cli movsb sbb test xchg and out jb ret icebp adc aam xchg cmp jle daa adcb cmpsl adc loopne xchg dec (bad) push cmp mov leave push cs jp add in jne loopne mov (bad) mov outsl (bad) out je mov cs pop test popf cmpsb (bad) jmp es (bad) mov add fisttp or cmc frstor movsl add pop icebp fsubrl jnp xchg stos dec jne mov jae lods add adc xchg aas add lods pop clc pop jbe lds ja imul test xor data16 inc mov mov dec cwtl int3 out movsb lds xchg mov xlat pop xor mov rorb mov add stos imul sub mov test adc jge mov inc sbb inc push inc es xchg lods mov outsb push mov jmp xchg in aas jb push popf leave hlt push (bad) cmp sub xor outsb or dec stos pop fs in ljmp mov repnz sahf xor fisttp and aad hlt jbe cmp adc push sbb dec sbb ds nop inc push hlt jg xor jg mov mov nop mov sbb rol lret inc fisubl (bad) adc or push adc rcrl aas ljmp pop mov outsb xchg pusha xor push dec rcrb jle mov xchg xor pop dec cli sub cld lods xchg int3 inc mov xchg test in sbb in sbb adc scas movsl (bad) repz pop (bad) repnz enter xchg jecxz lods std push xor sbb es mov into cmpsb pushf (bad) add or rcl loope pop ja in push xlat or jp aam in pop lea adc sbb enter adc and lret adc int3 sbb in jb addr16 addr16 lock inc push jae scas and popa sub inc dec xchg lock rcrb pop or push and js rep mov (bad) cmpsb push popl xor fwait iret mov nop inc mov jg cmp jbe mov inc pop es mov or out ja push and test cmp in jle xor mov loopne sub sbb scas call subb xchg jg xor lods add lret push fcom rcrl lods divb jae add pushf rorl xor mov fisubrl mov rorl jl lret sbb pusha data16 pop or (bad) mov mov adcl test imul int mov ljmp push hlt arpl (bad) cmp shrl jnp in ja xor lret xor cmpsl in cwtl push sbb jmp mov pop in xchg inc xor stos rorb sbb lods xor adc je inc iret and (bad) jb cmp lret xor cmp mov jo jae add (bad) movsb rorl ffreep xchg lock add cmc push push push fnstenv leave mov jns cli test pop aad mov test and dec cwtl insl stos std sbb pushf dec pop js pusha inc jne xchg imul xchg in mov sub mov or pusha mov imul jae jmp mov (bad) fwait pusha iret push add daa ret cmpsb test out and ljmp mov nop mov dec or or or push (bad) js clc rclb or xchg jns mov adc das mov enter js ficomp enter out scas (bad) ljmp sub inc movsl aam inc ret mov mov add pop hlt lcall icebp lods lods loopne mov mov int3 addl pop mov iret scas nop les out or inc inc adc imul xchg add dec jnp test icebp cmpsl dec repnz pop mov inc cmc es mov cmovnp mov fbld popa mov lahf mov add xchg lock cmp push lret fldt cltd jp sub out div imul add icebp jmp cmc push pop (bad) jb sbb push test call cmpsb xchg adc push sahf push loopne cld fistl mov inc jge and insb in mov pop jo or clc add scas lret cmp xchg add imul ds aas faddl pop xchg xchg dec and mov jo fcom mov dec xlat xorb lcall pop mov (bad) ja sub push push push les pop stos enter test in push lcall push inc mov or jnp mov loope pop dec pop cmp lahf mov js enter xchg cmp pop xchg outsl adc fcmovu push scas adc std gs cld aad sbb mov rorl rorb or push push loop and jno xor insb js repnz (bad) pop xor adc ret rcrl push mov sub dec cmp repnz mov popf in punpckhbw mov pop mov sbb push loop mov jmp push and iret popa (bad) jns pop xchg and je push mov add (bad) repnz inc rcl out xor ja gs add sbb test push and inc enter ljmp mov insl pop hlt mov (bad) cmpsb and jg mov cld pop or mov add mov mov hlt dec mov stos (bad) cmp cmp cmp mov jp push dec add xor in scas nop gs mov or cmp dec mov sarl lret lret cmpsl sbb fdivrs jae and insb jbe nop sub enter inc adc je daa add mov xchg int3 sti loope fdiv jg cmp dec jae sti pop dec jnp xchg lret xor adc sbb add repnz lcall dec cmp daa and jns daa out cmc pop jo push lret xor rol movsl int (bad) hlt stc fildll (bad) dec add xor ljmp mov mov sbb sub outsb daa scas popa sbb and push roll push cmp push fucom jl xlat inc lret xor mov xor (bad) mov sub stc xchg and lods sahf inc loope gs dec sti pop or adc xchg mov xor push push xor jmp cltd imull or lods mov dec sub mov mov mov test dec sbb movsb popf out sub sub (bad) or xchg sub cltd jb ror fidivl ret cli out push add mov fisubr and movsb sub dec (bad) xor enter scas xchg mov movsb inc idivb mov mov aas jl pusha pop pusha dec mov insb mov mov inc test (bad) notb xchg pushf pop ret (bad) cmp jnp xchg sbb fdivl andl int3 jnp addr16 clc sarl or (bad) bound out rolb aam adc fildl jecxz push jle,pn enter jo scas pop sarl push es lods cld sbb inc xlat out sub lods clc aad xlat daa std fnstenv jmp add push add dec inc test movsl daa pop mov movsb mov adc mov adc cmp add (bad) mov pushl orl pop ret jno cs ds push daa lcall outsb ja dec mov aam cwtl inc js adc ficom out mov xchg xor and aas in fsts inc scas add lahf add inc std xchg insb mov gs jo cmp dec sbb scas xchg xor daa dec pop xchg test add scas pop add insl dec jp (bad) mov addr16 mov nop data16 fldcw outsb mov fwait loopne push lds mov xchg cld and mov mov push shll jae mov jae push dec xor fldt mov mov (bad) fstl mov jmp lock push xchg dec or xchg ds sbb jge and mov xchg aas sub jb ljmp test push stos and and or xchg (bad) jmp pusha in push pop (bad) cmp clc fwait mov jecxz mov xchg or adc lods imul sahf inc mov inc mov or mov inc push pop lds pop push rclb xchg dec adc popf pop leave aad add lds pop aaa test jns jb mov xor mov stos les stos xor popa lret or and xchg repz aam add cmp in jp shl popf lods pop test roll xchg mov pushf adc jnp lahf das outsb fdiv add pop rcrb cltd fwait popa ja push (bad) lret (bad) adc sbb jge pop mov (bad) pop or insl adc inc jbe imul fldt jae ret sbb repz inc xchg jb inc xor sahf es cmp test std jnp xchg jo,pt mov pushf pop (bad) aaa cld jle add xor aad std in test sub xor xchg jge int3 fisttpll out int adc add mov push int3 pop xlat ret ja pop out movsl xor (bad) xor cmp mov jno test fcoms push sti subl addr16 (bad) push xor jp pop aas sbb (bad) jmp mov push (bad) sub scas or fucomi pop outsl inc pop mov jg xchg pop and (bad) mov dec stc sbb jle inc jno aas xchg stos or fs sbb das les je pop cmp and rcrb mov jnp,pt sub push add push xchg or or push mov pusha mov xor inc pop lret lcall aad mov stc xor pop iret ret into push sub adc sub pop cmp or cmpsb sarl lcall pop fsts and push add pushw mov fist arpl scas xchg mov popf adc or cld aaa adc mov inc add pop fsubs das hlt insb sbb jmp roll pop mov std push sub in loop jne or icebp mov cmpsb int3 push or mov adc sbb jae in fcom mov cmpsl arpl push jl test mov cltd lret dec push loop dec push mov sub imul in xchg pushf push xor push sbb add in fidivrl add nop lock cld popa outsl xchg es pushf ret shr imul into fimull mov je fucom sti mov mov add sti pop daa es inc cmpsl imul sbb leave (bad) mov loopne int3 js dec lock (bad) sbb and fstl fldcw xchg das add int std sbbl ficom push lcall jle xlat jg dec xchg jbe pop fs cltd mov dec inc test mov jo dec dec imul inc push out imul xor stc int3 cs test imulb or xchg lods into sub cld sub fdivrl fdivs fcom or jge cmp (bad) and aas pop cwtl xchg adc jp mov xchg pop dec mov xor adc sbb sub jecxz cmp sbb adc incb shrb (bad) mov popf gs bswap lods scas mov cli fimul xchg xchg pop int3 xor dec jnp pop into xchg shll mov xchg adc divb xor aas rcr xor or imul sbb call fisub lret inc push sbb mov arpl fisubr ljmp mov lahf lcall outsl or fwait int3 sbb jnp xlat ret out scas in push adcl out xchg push dec inc lret adc in adc enter les add cltd js adc add mov insb push pop dec lods sbb cltd clc push push inc and orl ljmp arpl dec and shll push push stos inc je push movsl ljmp mov mov mov push rorl jno pop pop (bad) sub push lahf shr (bad) inc pop jecxz out mov outsb mov je js loopne inc movsl addl push xchg xor or mov inc dec or fwait pusha jbe leave mov aad fimul adc pop icebp mov in ss loope push data16 std fcomip stc jl ds push (bad) ds cwtl or adc hlt sub pop lds cwtl dec sub (bad) cmp test mov mov (bad) fsubrl sbb push js lods push mov inc xor xor dec sub xor or and mov (bad) add xor pop jnp test xchg aad mov xchg inc dec fwait cmpsl jnp push push in pop outsl jae cmpsl lock mov cltd pop sub add test or xor das xor arpl lcall xor mov or cmp wbinvd sbb clc fbld imul mov lret ror inc je (bad) repz test jmp xchg movsb das inc stos dec jmp repz imul mov push or dec adc and xchg roll int3 mov repnz adc xor or push xchg stc jmp mov out push xchg mov aad add in push mov sbbb pop push sub arpl mov adc push scas push daa mov cmp (bad) and cmpsl js cmp pop mov and pop sbb and mulb mov sub lods adc mov fsts push (bad) lods bound test inc mov sbb cmpsb fisubl xor fidivr jle add adc test mov xchg aas jb add imul jnp pop add bsf or jnp ret adc dec cmp jge xor mov lahf in dec mov cmp in mov or repnz xor xor or pop cli pop aad (bad) and inc pop rcll push adc xor xchg sub in xor pusha and dec jle scas pop fdiv out sahf jge ds jns add fildl popa (bad) and movsb xor inc lcall mov mov outsl scas mov mov lcall js xor cs into dec insl jecxz pusha std fstpt subl lret dec adc ja xor (bad) mov or and mov adc push push sub repz repz lods fidiv xor ljmp mov in mov es adc mov mov out xor scas in mov mov add xor inc dec mov insl gs fldt repz lds rol cmc ret gs adcl les jno rolb push outsl adc ds movsb dec push sahf lods cld sbb mov aaa mov clc cs movsb fbld cmp jmp pop dec cmp mov jo insb outsb in fmul ds push out add int3 inc loope adc pop mov popf or rclb out (bad) repnz push mov test xchg jmp leave lock jg ss sub subb cli icebp mov adc mov xchg sbb scas das aaa add inc inc test mov mov dec and test stc insb jge cltd or inc fscale jl sbb ret dec popf (bad) fs fs enter sti rcrl jns das lret popa inc insb into clc notl xchg add lods sbb xor cmpl dec imul idivl loope mov jmp fldt ret push iret loopne cs iret in out test icebp push idivl popf sarl in je,pn lahf sub ljmp int3 cmpsb add xor lcall cmpsb add xchg add mov lock into and jmp loope cs cmpb aam pop cmp xlat mov arpl mov scas or xchg idivb icebp push repz cmc rcr fdivrl aas dec fwait out shlb inc xchg sbb xchg leave movsl mov aas pushf stos jb gs or cld movsb add fsubrl mov push mov xor addr16 jae cmp sbb outsl add jl xchg repz outsb cmp mov leave mov add andl xlat add pop data16 mov int rol jnp pop mov mov inc mov andl dec loope cmc jge bound js test insb xchg lods mov xchg jl pop in pop dec enter out insb pop cmpsb mov dec add pcmpgtw shll scas in jbe sbb xchg jmp mov xor push lds stos adc in adc cmp out xchg mov push xchg mov pop enter push xchg inc pop mov lret lods pushf outsl loop sbb xor pop push pop mov dec mov jg sti cltd test sub lock mov sub pop mov jmp enter in mul add sub dec and add jbe mov cmp sub dec js mov sub dec xor pop push mov pop outsl cs or adc jle mov orb push inc jae or and push jmp dec test loopne dec push es push es aas sub (bad) (bad) push sub int3 scas (bad) call std mov adc push leave fisttpll mov or mov andb scas repz pop adc clc inc sub add dec in jg inc fsub sbb (bad) push insl ja imul cmpsb popa (bad) jo sub mov mov pop shll dec cld addr16 or jmp jmp jne and fistp pushf aam sarl ret inc test push lock inc push pop cmp fcmovnu mov rol fisubl xchg jg cwtl das mov inc or int mov mov stc xchg mov cmp arpl xchg outsb pop aas or jb (bad) jnp call jnp xchg or repnz or adc push bound test pushf idiv mov ds pop pusha pop aaa xchg je sub arpl leave and mov pop mov outsb jo dec push or ds aaa mov jno das jne ja js add pop mov imul subl pop push test cmp fst adc rorl aad in rclb pop push xor push mov daa test stos movsb jge mov add gs (bad) pop dec test dec rcrb sbb mov jge mov sbb and xchg pop pop xchg aam adc push jns jge scas (bad) testl jne pop ret (bad) pop sti ret and mov xchg mov push mov add xor (bad) popa outsb add mov sahf lds cld lds push push cwtl fidivr jne jne jnp dec out and sub push aad cmpsl movsl lds and jmp loop mov jae xor mov icebp testb dec push push push jns or jb mov jge inc mov cwtl and test ficompl push into fsts add mov insl or add out jns in jl mov (bad) negl and je sub bound (bad) mov (bad) stc xor add xchg add jmp sbb int3 adc stos and lock mov cmp gs adc (bad) sarl ja inc mov out mov inc lcall mov xor ds dec inc and fiadd mov dec sbb jge fmuls lret or and xor cs cmp xlat or mov popf lret sub jge fcoml iret xchg sbb clc and test jl mov fcmove xor int repnz clc xchg mov xchg cltd sub or add test sahf pop subl mov ljmp sub sti mov cmpsb mov test xchg sbb push out loope xor out push jb cmp pop cmp enter shrl (bad) psllq aas test adc inc lret out adc dec pop ss add pop pushf dec notl mov daa pop sub cmp fwait xchg adc mov hlt pop es movsb test movsl test ja lcall out push dec fstl lea das pop xor pop outsb adc aad aas daa push mul loop inc and inc mov aam leave cmp mov pop dec jp mov or cltd rol xchg and jno sbb xorl mov cmpsb cmp push sub (bad) das sbb gs sub imul test in ffreep (bad) dec repnz insb insb jo aam pushf add xor adc fcomps sbb push and fistpll jmp xchg push bound mov mov push dec ret inc outsb sbb mov xchg movsb out scas stos or enter int inc jl mov popaw lods and add xor cmp xlat cmp fwait aad push lea jge push scas jp mov mov lds (bad) lahf inc pop sub lods repnz and stos jp insl push push push xchg daa fidivr out mov aam cmpsl jecxz outsl inc xchg les rcl (bad) jbe movb push jle (bad) test (bad) mov in jecxz adc shll sbbb dec sbb scas mov ljmp lock jb (bad) sub xchg andl lret adc cli mov loope or push pop call cmpb int pop sub int3 insl mov jp,pn outsb xor test in xchg in or scas add add test imul arpl outsl imul inc mov test aam mov outsb xchg adc in (bad) fs pop adc scas testl pop scas iret mov sub (bad) jo sbb pop jmp shll pop mov out dec cltd call addl push mov es lahf mov ja out (bad) push jg pop inc fist inc in cmpsl xchg pop jl arpl dec inc mov fwait ret mov rorb movsb pop js shll xchg insl rclb call cmp xchg mov rclb pushf fwait sbb mov and jmp adc pop mov jg insl in xchg test outsl lods jae sbb shl fidivr insl xchg lock inc sub fcoms mov cltd mov cltd or dec lds push int3 mov scas pop xchg out xlat push adc rcl ljmp stos outsb and in inc cmp fist push cmp es lea jmp ja mov fwait shll add adc fs push cmp fwait jp and (bad) (bad) add fdivs xchg mov mov enter adc dec jo dec jecxz mov push push jl (bad) cmpxchg test cltd insl bound jle and or into sbb push cli lahf icebp jmp cli cmp pop mov mov clc (bad) sub sub sub push sbb cmpsl jp repz mov sub mov jbe sub test pushf shr jno xor add (bad) adc loope cli movsl pop push xchg push inc adc push mov add mov icebp mov adc (bad) std dec fwait sub push imul xor frstor mov fwait lret and data16 pop (bad) std call jmp movsl jg xlat rol adc movsb push ret nop lea jb push sbb mov mov icebp mov hlt add dec lods xchg mov lret xchg sbb sub or test lods sub push xchg addr16 xor imul sbb or mov das lcall push push mov pop mov xchg mov dec sbb mov push repnz pop pop pop repnz out add mov std jbe mov and orb xor (bad) or test sbb push daa mov add push fs mov xchg mov in jb cmc pop jecxz pop add xor rclb add mov jg xlat inc or jbe je push mov lcall out leave js testl push mov sbb xor popf pop jge jmp pop out cli iret sbb loopne xor jbe jle arpl test mov adc repz mov es mov mov mov enter jl inc cltd jno test sbb or popf es dec xor movsb js bound inc cmp pop adc xchg jl aad insl fidivrl sbb loopne jg mov lock cmp repnz ret and fwait push sti scas loope lds adc out or int int3 jne inc repz adc lods outsl adc icebp mov movsb ds cmpsl sti xchg xchg pop js push and pop pop adc sbb push sbb sub xor mov imul sub xlat rcrl mov lds ja mov push xor cltd mov inc or mov cmp fs loope ret and jl popf aaa add push daa cmc stos sbb addl std enter ret mov mov pop xchg inc mov sarb popf (bad) (bad) out ss jecxz fucomi or fist and js mov mov add xor aas imul jb outsl dec addr16 dec shll lods inc (bad) fxch jl mov in inc fadds jl mov and and push push pop stc arpl movsb ret mov push jbe or cltd das sub push xchg push sub lret cltd xchg or jbe add adc cmpsb sar push cmp cmp mov sbb dec adcl xor in std in sub xchg ja pop push mov ret notl int lea std xor mov jge imul mov push mov loop imul jmp sbb cmp popa inc in (bad) mov push jbe jns push fidivrl insb sbb mov out xor push stos (bad) inc nop adc push jmp mov push pop sti xchg xor sbb ss sahf das push inc sti cmp push xor add loope das jp xchg aad pop test pop mov jo cli xchg cltd arpl jle xchg cwtl push in (bad) (bad) ja insb sub cmp push cmp sub inc jb and ds inc mov push mov ret xchg ds pop or push jns test popf sub cmp (bad) jbe cld shlb in out dec add fcompl out mov sub bound clc pop (bad) hlt adc mov pop adc je stc ret cmp loope sti (bad) xor movsb (bad) cmpsl inc mov mov lea iret arpl (bad) push arpl bound scas repz xor aas sub and sbbl xor adc push add es lods inc add sub test (bad) (bad) (bad) icebp xlat adc call cld insb add das sbb add push fs sbb dec mov pushf (bad) pop mov inc dec jno daa adc dec push jne inc dec test mov pop add in das jae andb mov stos (bad) fcom pop jae or or in inc (bad) cmp sbb jg and pushf rcrl cmpsl out ds xchg imul in imul add lds mov das jne fldenv mov clc or or repz sbb push lcall imul sub cs pop mov cmp fs jbe leave sub mov adc xchg aam xchg dec faddp add push mov neg ds lret or cltd or xor cltd leave pop sub add pushf inc lods mov ret sbb sbb mov (bad) movsb pop add mov or xor cmc lods loopne xchg jb add cmp jne inc fstps mov push push (bad) in fimull xchg push pop adc insb push cmp shrl std hlt cmp pop mov ja cmp dec pop cli lret stos xchg xor out inc (bad) fdivs repz (bad) mov stos or daa inc sahf cmp inc mov fildll cli and loope out outsl xchg movsl xchg cld call negb dec jmp adc jae inc outsb inc fist daa cmp aas (bad) jnp (bad) (bad) fwait jp xlat jecxz push loope out dec xchg cltd inc int3 ret fbstp add lods jno xlat insl into push insb push mov rolb aam setno pop push add imul mov or cmc cmpsl (bad) mov arpl push das repz mov cmp push gs xor sar call mov dec inc push clc cmpsb int negl pop test adc jne ljmp and or xchg stc mov andl mov xchg mov fsubs scas xchg fisubr int3 jae or addr16 pushf xchg push inc jo or mov pop cltd (bad) xor jo das or cmp xor mov es (bad) xchg add xchg cmp mov fwait xor mov ret ljmp in mov lret (bad) mov addr16 test test ljmp aad push lods cs sbb cwtl adc je sbb push dec inc in (bad) lahf dec add mov and pushf mov imul dec popa lods out mov pushf imul lds xchg or lds jle push nop data16 lcall ret cli xchg xchg fstl sub jg test stc inc mov lret loope jecxz fdivl push in and mov xchg add mov mov mov out mov sbbl aam ljmp out jo clc leave and xchg adc sub mov xchg xlat add push lret dec js inc and sbb xchg inc inc inc sbb addr16 add mov xchg scas mov add mov movl int lret pushf or xchg add xchg mov sbb lea jno lahf ss mov pop sbbl jle inc jmp pop lock mov adc mov sbb xlat pop lahf mov lds inc pusha loop cmpl insb (bad) mov leave pop addb cmp fidiv pop cmc or insb cmpsb ficompl cmp stc pop dec clc or cmp dec repz mov cmp in jo repz push xchg imull xor push sub shlb ljmp sub mov popa es je xor les inc (bad) rorb jns add insb out mulb xor fucom mov gs sub imull test jecxz cltd sub out push (bad) mov push fldcw xchg loope inc call mov test cmp sbb mov sahf cmc into and into push mov dec fisttpll mov push jmp pop iret mov sbb scas cmp cmp jb jbe repnz inc cmp cmp sub movsl inc (bad) loopne sub jle adcb push xchg ffreep std mov inc mov scas cmc xor push or pusha or mul push popa mov in mov lahf push fwait out mov mov and stos jne cmp cmpsl hlt adc pop and rolb dec cli sbb call loop orl mov and jno cmpsb mov out jge push testl mov inc add mov adc jmp mov cli adc bound sbb fsubrl cmp call pop add imul imul fisubr mov pop test je and in icebp pop fsubrs stos sub inc add cli xor push cs xchg int imul mov dec stc pop pop jb sub clc lock jne pop popl and sbb jb and je arpl ja adc dec mov hlt sbb out cwtl adc (bad) jnp and loopne ror and cmp sbb xor xor andb hlt mov mov xor add mov lock jle inc nop pop in sbb fdivs cmpsl adc xor cmp popa stos and cmp adc pop mov push (bad) lret sub lretw mov or mov sbb lods insl outsb addr16 dec lea fs (bad) (bad) stc int in lahf sahf std out add (bad) fstp and pop aaa das std lret ret pop nop dec pop xlat and fucom bound scas dec sub mov icebp jmp mov outsl push aam scas mov (bad) testl pop xor mov test dec adc (bad) popw cmp sbb addl pop nop addr16 fwait popf or pop das mov cmp fsubp sub sbb mov je ret xor es pop ljmp aas cltd mov mov int3 push sbb mov test xchg lods sub adc aaa cmp rcrl call arpl aam ret clc xor ret in cmc and sbb dec or addl mov xchg ret stc notb gs pop (bad) pop loope,pt push jne test push cld adc iret test aaa cwtl inc and fimul shr repz out jns xor pop xor mov pushf cmp test fmulp (bad) aad mov mov sbb test gs mov addr16 xchg cli cmpsb dec (bad) (bad) pop in jg and test sub cmp cmpsb push repz jbe mov mov or in fidivrl pop out mov mov xor fsubp jle sbbl inc or fild xchg out jmp mov into andl out mov adc or dec pop cmpsl push push fnstsw (bad) ret stos mov ret movsb add into xor lock xor aad test mov dec lahf test stc xlat xchg add or cmp inc (bad) sbb jp sbb scas stc pop (bad) xor xchg push dec add cld adc xlat jmp cltd dec mov mov sub cmp sbb pop arpl push daa mov (bad) xor pushf push rcrl enter push mov jns es int adc fsts inc in loop nop or xchg imul push inc es jmp jmp or fimull insl cli fsubrl jmp jp fcmovnu and stos mov mov lds test xor pop ret adc out lcall jno cmp (bad) dec cmp mov add or (bad) fsub xor sub mov (bad) dec and cmp loope repz int3 mov xchg jle cmp leave lds icebp inc test cwtl into lea pop and insb sar xchg insl dec jb xchg fbstp add jge test enter lcall fistp mov xor shlb sahf xchg loop hlt add orl fs cltd push dec mov mov out adc dec and xor add ret repz lds or outsb jl repnz inc cmp ficompl je pop imull cltd mov cld pop jecxz push lea lcall ds aaa push inc popa in mov adc mov fsubs cmc xchg in and roll cmc push mov jmp jmp gs mov lret mov lret test and int3 jp lds or cmp xchg nop sub xor outsl cmpsb mov push sbb adc xchg jo inc sbb out push popf data16 loope xor rol jle sti test fstp xor pop xlat mov cmpsb push clc mov xchg lret mov push pop in and popa mov repz out xchg jb mov stos jecxz adc jp pop popf stos (bad) aaa adc sbb jb or add pop pop xchg pop sub inc xchg push cmp lret dec decl stc push mov push adc fsubp jo mov out xchg xor inc dec or out cmp lds ss fildl fsub test and or push inc inc in adc sub cmp jmp sbb cs sbb xchg sbb shlb cmpb js xchg dec fimull push bound sub xchg (bad) or dec inc dec jg fyl2x cs mov push aad inc rorb xor inc add jmp js repz ss lds je push je xor (bad) les adc fisubl xchg js lret adc rcrb mov mov sub cmp dec sbb xor inc push cmp sahf jecxz and pop xor lcall inc adcb xchg in adc jnp xor or push stc and adc and gs push icebp pushf leave ret (bad) jmp jo sbb fldcw push push pop out mov sbb mov mov mov and xchg imul mov xor ja add lds sbb ret pop and hlt xchg clc cmp push call in test repz jge lcall dec mov jecxz pop sbb cmc cmp push add rorl inc or mov add inc adc jge pop pop inc mov mov mov push mov (bad) mov dec fcoms sub mov or sti xchg cld fucom mov fimul in xchg pop shr sub in incl pop outsl in fnstenv xor adc mov sbb fisubrl lcall aad push (bad) les cs ja sarl adc aad fistpl add lahf sbb push mov (bad) aam pop adc jbe repz adc je add inc dec test dec (bad) mov cli lods ret push mov sbb mov mov mov adc add call sbb mull jnp mov adc arpl popa jo inc in adc and push mov lods jmp movsb inc fsts jl mov int3 xor mov out xchg or not xchg pop ss jecxz mov xor inc mov shll mov cmp (bad) mov pop (bad) push fsubs test and ffree adc aaa outsb push bound xor cmp sbb loope mov sahf xor jae movsl loope insl push pop add pop push xor js adc fwait rcrb lahf mov push shlb pop (bad) jbe daa into add add (bad) call out loopne idivl imul ret fidiv scas mov adc pop outsl adc aas mov rol sbbl movsb inc std mov and out pop push add jmp movsl cli lcall dec in out imul ret or inc jmp jns cltd sahf aas inc lea leave jp mov adc lods out nop sbb test and sahf andl dec inc mov or lock fwait and out mov test jb int3 push push jl cwtl jge mov push jmp mov loopne sbb mov jno or shrb subl jle lock xor or daa fildl dec loop lods pop push pushf cmp pop lret int cmp dec dec mov or inc pop add push test adc inc adc mov sbb (bad) fiaddl adc inc sbb out mov adc cmp push addr16 push dec mov (bad) (bad) ds inc out inc jecxz jp cmp (bad) sti test lcall imul push lret mov sarb push or jo pop addr16 subb insl adc inc bound sub lods (bad) xor pushf lcall call inc push (bad) repz dec test jno sub mov jg add push jp (bad) xchg mov mov mov popl sub test jg into push addr16 mov add mov outsl jne inc ds cmp cld iret sub dec js adc (bad) mov scas xchg jne loopne fldt rclb popa (bad) call mov push push add stos cltd push icebp iret loope mov pop add aas std push sub sub hlt mov lret mov adcl stc add mov adc sub push lea and mov fist pushf jmp repnz sub into jb sub fsubr stos (bad) pop dec test cmpsb add jge sti xor test pop icebp pusha pop jmp stc mov nop daa sbb mov cltd stos stc xchg pushf inc cmp in lahf xor repz or stos mov dec jae push cmp xor addl out jnp sbb out enter sbb xor loope mov fpatan or lcall fs int3 int3 push xchg sbb xor push into jecxz mov and hlt fcompl clc dec out pop inc out daa flds les pop cmp adc jl inc test nop mov ss sbb enter (bad) insl je icebp dec lods mov in pop nop pop cmp adc fldenv je and lds jmp pop in js call movl or cmc out cli push xchg and sti cmpsb adc xor push mov xor aam outsb cmp mov ja imul hlt sub jns outsb cwtl test jge xor pop mov add sti inc adc ds fcmovnbe arpl iret and pop and push mov lds lahf test xor push repnz fcmovu or test (bad) xchg cmp popf jno xchg int3 push call push sahf jecxz adc xchg gs sbb sbb hlt (bad) xchg loope sub jle test ljmp mov push inc std out and out xor pop test pop dec pop (bad) mov push (bad) fisub jae mov xor dec js add add mov and adc inc inc loope sbb cmc xchg and jecxz mov call fs jbe xchg outsl pop push pop ret sub add push push pop mov xchg pop or lcall movsb aad pop xchg xchg jle jns ds mov and jno into test cmc in or ret out mov mov rcl sti inc inc pop sub imulb add testb jmp (bad) xchg xchg adc fmull das push test (bad) repnz into pop lods mov int3 mov sub cmp les aam xchg cld scas dec adcb aad (bad) or dec adc test dec jp dec push shrl in hlt xchg in xchg (bad) adc daa iret push (bad) jo cmpsl lock popa out xor push dec fist repnz sub hlt shrl fs nop jne nop jb rorb mov mov add stos clc mov inc push addr16 mov pop inc stos lahf divb push or int3 (bad) inc mov out insl movsb xchg (bad) sbb xchg aas xchg add stc mov loopne into lods push sub cld jnp in in movsb andl push add (bad) adc mov cld mov mov mov add push aad mov insl mov sbb pop lahf (bad) js call and mov mov (bad) xlat enter mov (bad) imul nop daa push data16 push dec int mov dec jmp push call push arpl xchg addr16 ljmp xor inc mov or sbb cmp mov ss jp shr shrl add fsubs and or mov (bad) std sub cltd jae insb cmpsb sub loope push ficom sbb adc xorl fwait jo in ja in movsl and add xor out pushf int3 push or xchg and sarl movsl loop enter (bad) push jmp or in adc test pop inc in sti pusha cmp mov and sbb in xor sahf lods orl xlat push (bad) fadd or leave je inc rorl cwtl sahf and lds js addb ja add popa cmp or sbb sbb xor lock mov pop gs dec add cmpsl mov test (bad) stc out xor inc add ss mov fsub pop stc js push lret sub fcomps pop mov xchg inc ror mov cmp mov sbb out xchg mov sub rcll jbe mov out out mov out pop sub sub mulb mov cmc stos adc popf sub or or in inc icebp jns lcall add loop mov arpl inc es jae mov ss fnsave mov add and mov std mov insl call out in pushf mov push jmp cld mov push cmp shrb ret nop/reserved mov sti pop and jg pusha ja rolb lret add mov sbb rorb popf sbb lcall repnz dec cmp test movsl pop and sti cld inc adc pop add sti xchg stos ret push add push bswap push fs adc pop jo cs inc rcll aam push iret add sarb dec or push pop sbb mov pop loope mov ljmp sub xchg (bad) lds (bad) mov mov es cmpsl (bad) std ret rorl aam sbb in pop jns adc loopne test cmc ret dec pop scas inc mov xor stc loope and pop repz aam inc ret stos clc adc movsb adc lods add push sub jb xchg hlt mov addr16 mov aaa or sub sbb dec lret push push loopne dec pop (bad) sbbl adc inc cmp jae pushf pop fwait cwtl cli inc pop in leave xor shlb or sbb mov loope xchg adc ljmp mov in dec xor cmpsb mov hlt jb sub in or xchg sub rclb aas cmpsl xor cmpsb xor sahf adc adc or mov jg imul call sbb in push sub add into xchg lods jl stc enter dec inc ret out cwtl les test add add cmp lds jp and add popa mov hlt cmp dec mov adc mov or sarl outsl jg (bad) stc push sahf cmp cmp push hlt dec cmp mov mov jae dec jmp cmp or push push mov outsb or outsl xor mov in jmp loopne xlat shrl push sbb (bad) icebp movsb sub pop stos inc pop xor push scas insl mov sbb fmulp popa lret xor icebp rclb xor cmc popa je xchg icebp fwait stos and cmp cmp popf pushf (bad) jecxz add (bad) mov fisubrl push or add sub push cmpsl mov ljmp aas test pop (bad) leave movsb fisubl push test fmul xchg loopne in xchg xor mov scas packuswb or (bad) mov inc lret xor aam enter sub or dec in out xchg dec out shlb mov aaa or inc cmc jno push xchg sbb xor mov add pop and insb test pop xchg outsl mov repz mov insb mov push jmp sub push out adc jnp,pt adc fwait cmp daa add scas hlt inc adc mov cwtl mov cmp push inc dec xchg push xchg cwtl insl lds das xchg pushl xchg jp mov bound jle pop inc insb cmc loope sub adc (bad) in andl push xor insb das sbb mov inc pushl mov in and vucomiss mov (bad) dec inc sti mov (bad) ja cwtl in sbb nop and adc les addr16 inc inc cld lret or outsb mov mov and (bad) mov sbb cmp test adc inc (bad) rolb ja pop (bad) enter repz xchg xchg lods adc repz clc and cld sarb mov cmp adc stos lahf add jmp sbb daa xchg pop out sub sub cs xchg fcom addl inc loope xor cmp ds nop (bad) or dec lods (bad) cmpsb add out mov inc push bound pop (bad) in pop mov mov test clc adc mov scas fprem pop or addr16 mov mov rclb popa cmpsb sub mov sahf cmpsb cmp nop xor into jecxz arpl enter (bad) xor aas dec andl loop or push in fdivs and add mov mov and lods lcall jg loope stos and arpl fisub cmp cmc adc dec push or je or jne fnstenv cmpsl sub call xor xchg push dec stos mov push test xor xchg and jnp xchg ss sub dec and scas push pusha (bad) in (bad) push xlat and sarb cwtl push sbbl or aas (bad) pusha mov aad cltd pushf outsl das ret fidivl mov push dec adc dec push stos call dec cmpb push mov roll xor (bad) js inc popa mov dec jecxz xchg mov push dec jg in aas sbb fistl xchg xchg loope lret (bad) fcomi lret dec punpckhdq (bad) lock insl test fwait cmp insb mov arpl sub adc xor int (bad) fldenv sbb jmp out adc adc movsb bnd (bad) hlt call out sub dec push inc icebp fadds pop cltd outsl cmp movsl sbb and in add or out mov imul pop lods sti xlat push ss (bad) mov ljmp push repz pop es es mov ss pop push (bad) movsb jl and outsb inc xor push add mov es into jle inc dec das scas sub popf jmp shr cli in adcl sbb push jo jo or iret cmpsb (bad) stc lods xchg and inc mov mov add lahf jle in mov outsl daa dec or in insb out lahf je dec jae clc add lcall sbb lock cmpsb bnd and cwtl mov (bad) jno aam std (bad) scas jnp es xor add or sar xlat out inc mov xor dec in add xchg rorb mov or repnz sub imul fsubp test and cmp mov mov aad insl movsl push inc lds fldcw lcall lret mov fmull iret jbe jne and mov xor adc push or dec and call xchg pop jge push push dec insb sbb ret movsb jmp fwait pop dec in xlat mov push nop js cmpsl jg mov sbb jp mov lret push mov xorl sbb mov (bad) or or ret xlat dec (bad) negb je mov mov scas fldl insb out or and cli pop mov jnp aaa xchg movsb das xchg into dec and call pop mov sub out or push inc lds sbbl aam fnstsw mov (bad) xor sub lods enter mov mov cmc and cli hlt add add movsl mov insl xchg push jns insb lret push or mov ljmp mov jae fsubl pop aaa shl js rcrb cmp inc imul inc sub cmp cmp pusha jge into sub mov inc mov cld and (bad) push push mov (bad) mov test add lret push jmp (bad) hlt fwait test insl or (bad) movsl mov in jae xchg gs dec out mov lock movb aas push out iret test aam in dec sub mov push xor jns out fisubl push pop gs inc into sbb lods mov rcrb cmp test daa sub dec and pop xchg inc pushf (bad) jge popa loope add dec sahf xor mov push jle sbb movb fs ficom mov dec push jmp cmp out mov sbb jne mov inc and je xchg xor sbb cmp out sub or add loop xchg pop jp (bad) aad ss cmp push jle loop in add adc lcall outsb jp cmp fcoms cmp fwait adcb faddl sbb hlt lret mov push jae adc test mov hlt jo insl popf addl pop out xchg call xor adc mov jmp jecxz icebp test mov fcompl int3 jae outsb dec or lods dec jne loopne les sub ret cmpb or and imul test ljmp js xlat mov sbb in je cmp jl es (bad) loopne pushf mov scas dec lods out cmc cmp dec fsubl push mov int3 hlt mov sbb mov dec (bad) es cltd aas sbb repz add bound adc adc fiaddl jle ss mov pusha xor aas inc pop rclb pushf stos cmp test and pop push lock out mov stc add xor ficomp mov loopne scas fstpl jecxz xchg mov mov pop mov andb inc adc aam arpl sarb add cmp lock enter xchg fisttpll or lea push jo andl daa push (bad) mov fcoml and mov gs (bad) outsb fldln2 (bad) xor xor stos jecxz lret out mov ror sub dec subl or and inc jno add je roll in xor fadd pop sub pop andl scas cs imul push in daa movsl pop pop pop ljmp jne xor mov sub out cmp lahf bound pop sar mov jo enter rorl push fwait mov ss adc aam incb push scas (bad) jmp adc push pop push and test in or stos sub insl mov loopne inc insl jo inc (bad) add jbe xchg out jbe push jbe rorl push repz icebp int mov sbb ds inc add xchg jl dec xor outsb mov loop out frstor aam xchg xchg jg sbb mov imul sub add incl sub xchg jge les fisub sbb pop mov push cmp into repz rep jbe cltd xchg fistpll adc xchg aas inc insb cmpl push push inc mov test js sahf (bad) push jg mov out mov and jns (bad) xchg mov add (bad) pop inc pushf push mov mov test add movsb out ss xchg pusha fldt or (bad) mov pop adc hlt cmc push pop inc aaa cmc (bad) cltd iret and mov lahf dec mov divb mov (bad) je repz out dec aam add jle push push in pop xor mov out jle in dec mov push leave xchg dec xchg arpl lret daa ljmp popl stos mov adc pop rcrl js pop in jle cmp and roll xchg je das sti push and adc dec enter sub fwait jecxz add jmp jecxz jle pop repnz (bad) push dec into ret das sbb es xor fldcw popa jle mov shlb cld dec imul push xchg cld outsb inc push dec jl mov mov leave enter pop adc pop lcall sub mov lret jge gs popa sbbl cwtl cli adc lret push inc lret cmp mov push out xchg sbb inc or mov lods cmp imul loopne popa xchg or push mov pop ficomp jmp js int roll test (bad) xchg out dec movsl in (bad) jnp sub stos adc lea sub push xor mov or mov cwtl add cmp fisubl call cmp and enter adcb (bad) ljmp cmpsl and sub and mov inc aad clc mov (bad) add sub cmp jl rcrl sbb fisttpll std rcll cli xchg inc jae ljmpw dec aam adc sub sbb mov aas std mov and das jl lret fadds movsb inc xlat inc sarb inc out lods js clc les (bad) xor ret and aad shll pop in mov outsb call sub ss jne jg leave fnstenv aam (bad) fiadd (bad) in xchg lcall mov adc lcall loope jb mov fstpl push (bad) incb xchg int3 dec loop or stos fwait and nop push scas int fsubr pop push sahf and test pop mov sub in or nop lret jl xchg movsb adc negb (bad) loopne pusha add int3 xchg icebp jl int3 pusha adc push jae call movsl gs jne cmp clc jo clc dec ja scas stc jo adc cmp xor (bad) aaa cmc push and outsb lods (bad) adc xchg xor push cmp lods fwait loopne push outsl xor daa lock insb pop aam call icebp ret mov jbe sub (bad) mov mov mov (bad) mov lret inc dec sub jp stc and dec pop cs dec dec lret and (bad) movsl ficomp ds add enter sub (bad) mov xor mov (bad) aaa stos dec repz popf insl movb sbb or mov cld data16 adcb xchg sbb adc jns lods aad jmp add das ud1 ds pop test push ds shrb mov xchg pop in ljmp push call jb jp jl pop mov push xchg pushw and push lods inc insl cs or iret out call jmp lret and ret in or sti push sbb and sub or xor pop dec mov ss inc ds mov stos jecxz pop inc out dec or rep je and pop sub sbb fs ror ror pop jp lret mov mov ja mov je and inc xchg and jns xchg mov mov pop pop jg ret jo cwtl cmpl ret xor and fmull inc cmpb dec jnp loopne and pop arpl sub aas fisubrl xor adc loope xor stos stc sbb mov les jg inc mov inc xlat sbb dec cmp push aam and stos push and mov xor xchg int mov pop xor or (bad) out mov and cmc pop lcall movsl js dec lods or testb mov dec mov popf mov push (bad) jno lds aas lret mov push mov jb push inc out mov and imul bound push pop xor notl xchg or mov add xlat cmp push cwtl sub loopne ljmp add pop iret jmp pop or mov sub cmp test lods sbb out icebp data16 xchg dec push adc imul sar sub cmc or jmp jns insb imul stos jo (bad) xor or aad movsl xor cmpsb test pusha cmpsb (bad) cld xchg (bad) pop xor aad jge pop and mov cmc add xchg sbb rcl out cwtl lahf jecxz rcll divb jmp fisubr sbb fcompl js mov negl or ror xor add out and xchg test sub dec mov into frstor xor adc fmul cmp popa jns nop clc fmuls ss cli rep inc add (bad) xorl std jb xlat add scas xchg lods inc mov enter pop flds clc sbb jmp dec mov xlat loope or inc pop cli hlt incl test dec std nop pop pop xor or cmc push mov sbb testb push test aas xchg in push xchg in add outsb xchg add lcall add sar push outsb mov (bad) or (bad) popa push mov sbb mulb pop call jno jle jl aas in and and notl mov call int sbb cmpsb js imul loopne fistpl mov or push je iret lahf ja pushf out cmpsl stos js fsubrl jne sub (bad) out cmp repz sbb cld cld lock sbb cmp (bad) add arpl jo cmc push insl ret and repnz sbb mov cmpsb xor mov mov outsb sub and sub ds adc jle sub pop in nop icebp es cwtl or sbb dec popa push loop mov les cltd in and pushl loop pusha mov push (bad) cli sbb outsb jp xor cmp mov sbb push lcall push and jmp push inc adc cmp add or sub mov xor inc push push ds aaa insl imul xchg sbb or mov dec outsl icebp sub add dec psubd adc cmp ss dec sbb stc pop orl xor xchg mov cli insl adc sahf ja lret fxtract push daa leave aaa out push fsubl cmc mov movsl in hlt pop ficomp out pop or inc add xchg mov or inc mov jmp fimul or sahf scas loopne jp and jle xor jnp lfs or xchg fildl (bad) mov pop cmp cmpsb mov (bad) lret cmp xor add push pop dec xchg pop mov daa (bad) je mov dec cmp xchg push lcall mov sub pop or aaa das add xlat in clc test adc cmpsl mov mov jg sub push add cmp iret (bad) lret dec sarl lock cmpl or in sbb dec cmp mov or mov outsl (bad) out or (bad) mov scas fmul sbb xchg bound dec into nop mov call inc scas loopne into mov ljmp lods rorb add in or out fs gs in gs ret vpalignr sbb push or es xchg cmp inc cmpsl xor mov ss sti lret mov and test mov pushf adc rcr and cmp sub mov cli xor mov push shl or cltd or cmp and (bad) jecxz dec mov das rcrl call or pusha mov add loope pop dec inc in stos (bad) mov mov inc lahf pcmpeqw cmp push lahf jne je fsubl stos add rclb out push pusha push pop push es in push sub mov js movsb shr in adc aas fbstp or popf mov sbb mov push lods jbe mov clc sahf mov gs (bad) and push inc push push and sbb cltd rorb jp jecxz fcoms fneni(8087 cmp and xchg test inc xchg mov adc adc inc mov stos pop and test xchg shrb rcl jae ljmp repnz or enter pop mov adc jge push outsb (bad) pop xchg or shll idivl call sti sarl push stc stc fcomps lcall cmp insb xchg bound pop (bad) jl arpl fisttpll xor inc js xor push in jp sub and ret faddl sub inc subb mov aas out je sbbb xor cmp stos out push mov dec int3 mov inc lods ja (bad) mov inc jns cmp cltd pop mov pop pop cmpsb and (bad) arpl dec pop sbb (bad) mov movsb sub sub push sub iret push mov daa (bad) scas adc inc jecxz (bad) cmc stos cmp lods xchg dec dec imul lds jmp mov xchg sub hlt ret add test popa pop cmpsl js mov sub push mov cmp pop cmc mov fdiv cltd or rorb jo pop dec push mov add add xchg sbb mov cmpsb sub ret repz inc xor mov popa mov aad mov loope aam lahf jge into lret lret mov sub shrl xor xchg shlb cmp add jnp or insl ja lahf pop mov (bad) in push imul xor xchg arpl sbb out lds in mov and cmp in jg or adc push les dec mov dec cwtl cmpsl xchg xchg mov cmp mov sub mov (bad) cmp es iret in movb mov jecxz add pop fidivr inc out pushf xchg je jbe daa xor in mov fldt lea lock fmull pop mov mov fwait stos pop popa cwtl movsl jecxz sti xor lock add sbb aas sbb sub dec xlat (bad) xor lret out jmp xor aaa pop add sti push cmpsb mov movsl in dec push lcall sahf stc jmp jbe popa push pop or icebp lock add pop sbb (bad) mov popa sbb mov pusha (bad) mov (bad) sbb outsl test pop fidivr pushf cmp inc fisttpl ror negb lahf divl aas add xchg pop aas pushf cmpsb fidivl xor aad cwtl mov into in in jb and xor lods gs jg xlat or push mov (bad) cmc mov (bad) call xchg or outsb imul sbb pop xor test xchg pop mov inc pushf outsb scas divl dec adc xchg fbld cmpsb icebp xchg mov sahf (bad) repnz sub iret push or inc pop mov cmp scas dec mov lods fs das cli mov mov xchg or mov sbb cli imul jne mov adcl mov jl and sub mov mov xor sub scas insb mov ljmp jp lods lds mov inc frstor xor popa fs lock adc dec pop bound lret in or dec std out sub xchg or cmpsb call loop sub leave ja scas (bad) or cwtl ret mov cmc pushf mov push jno xchg arpl add mov xchg and push dec ja mov or cmc xchg icebp cmp lret notb push inc mulb (bad) mov mov cmp ret and sub pop mov push and test jae out (bad) pop (bad) pushf ret fwait subl dec pop (bad) imul xchg pop cmp xor lods scas cmp dec out xchg push push pop ret out xchg inc mov fwait imull dec push sahf cwtl lahf inc movsb sub adc out or stc cli lcall test sbb ljmp jns push rcll in mov movsl push enter cmpsb lahf cmp mov ljmp mov push mov ret loop test loop jp inc mov insb daa sub pop fist mov jne cmpsb lahf sub pop jns sbb jmp call sub fnstcw jp inc inc daa push push sub xor inc pop xor xor mov loope sub xchg fisubrl push cmpsb cmp jmp je mov sub (bad) sbb xchg mov jmp divb shrb ja lods push (bad) imulb pusha adc push dec out mov push xchg mov mov (bad) fidivl jne add pusha xchg (bad) fcompl and insl fs shll in pop (bad) movsb mov sbb (bad) or mov or fidivr insb hlt mov cwtl ret out loope hlt mov fistl je cmpl xchg jmp jle test inc cmp cmp jb aad idiv je mov sbb out in cmp (bad) mov inc aam pop cld mov and aad mov insl ret out dec mov pop mov sbb repz aaa divl mov and xlat adcl sti stos sti in arpl rcll rorl inc into dec int3 jmp ljmp stc insb (bad) mov add popf push call jb (bad) lret insb mov out push sub popa clc push and clc sub jecxz cmp leave jecxz add push icebp fucomp pop mov sub dec push daa cli mov mov inc fcompl js rcr cmpsl hlt add rorl xor rol imul xor aaa addl lods xor cmp pushf dec xchg rorb jge scas inc inc inc mov pop shl xchg sub push ja xchg push add es dec loopne mov sti jp into mov pop ret inc (bad) cmp jle stos es je jmp iret outsl (bad) cmpsl imulb outsb dec std push in scas push inc dec ljmp or sub mov (bad) shrl inc mov mov jecxz jno std add jae (bad) xlat fcomip sbb mov jae mov mov mov in inc push imulb dec movsl add cmp xor mov in and jbe mov outsl stos outsb cmpsl sub push leave repnz rcrl mov idivb lea loopne push cmp jle out adc aam movsl stos std sarl add sbb adc cli (bad) push sahf (bad) outsb ret pop mov mov pop xor scas aad fcoml int xchg (bad) pop stc popf das popa out xchg notb inc inc lock imul in leave push in adc dec nop mov (bad) mov lds (bad) out arpl test stos xchg out dec sbb mov inc mov sti jnp add ret xchg jo push cld pop dec movsb cmp outsb sbb outsb hlt das mov divb imul sub mov out pop push dec inc cmp mov fsubp xor adcb adc jmp pop add shr inc addr16 mov ds cwtl xchg pop js add rolb cmpb push in sarb pop ss scas imul inc mov lods popa pop dec mov pop arpl in or or (bad) loop mov rcl lea lret inc inc out inc xchg cmp loopne shr popa mov push inc jb xchg jbe (bad) dec push push fstps pushf jmp aas (bad) or insb lods es xor cmp xor lcall lcall sub inc xchg stos mov dec cmpsl lds sub adc hlt aaa out hlt mulb add sbb mov arpl mov fs jmp (bad) jge and xchg mov into movsb pop loopne and inc pop (bad) jno inc mov cmp imul lds out inc add (bad) push mov (bad) in cmp scas sbb add add iret and add mov xlat loop fisttpl dec incl inc mov (bad) mov jae ficompl scas cmpsl in mov cmp add adc xor ds dec inc pop pushf (bad) fisub add jb adc jg icebp stos movsb and push mov lahf mov mov pop or lds sbb inc aam movsb sub adc or out ljmp mov sub mov mov popf push imul sbb sahf sahf xlat cltd and cs cmp jne imul jg insl int3 mov adc cmp (bad) cvtps2pd (bad) push insb push lcall mov test loopne dec push mov or jge xor sub inc jp jge repz das jle (bad) sbb repnz xchg xchg push js jg mov mov out sahf mov mov enter daa jb pop fdivrl rcll fstl in jp out inc in mov punpcklwd or bound fucomp mov repnz push mov fisttpl jecxz inc es dec sbb loope mov in sbb in insl (bad) add scas pop add xchg mov and mov jmp xchg (bad) push cltd pop (bad) test or add push lret xor sub lret and dec cmp (bad) pop mov sub mov mov hlt xor out (bad) dec sub outsb jmp pop aad jns (bad) xchg int3 lock stc jo dec cmpsl cmpsb ss add or imul xchg and mov or adc ficom in js daa vcvtpd2dq lahf bts jp pop das ret inc loope stos movsb add hlt adc xchg das dec fistl add cmpl out mov movsl push jge sub into mov jb stc (bad) repnz jmp pop in mov push pop mov clc dec adc mov jmp lahf cmpsl cmp in push ficoml icebp jle lds cmp std orb in add jp mov xchg mov hlt stc mov push (bad) fadds dec aad and (bad) (bad) push test lds adc push movsl jp mov imul mov out cmp fidivr mov mov into jo add sbb mov push fidivl and lods mov test push ds mov insb dec (bad) mov inc shrb sbb in and ljmp testl cmp and cltd and add mov loop out push repnz lea mov jecxz fbld cltd add call xlat test push (bad) idivb ljmp bound push mov mov arpl sbb pop add pusha adc push xchg dec fstpl ret test adc lods in daa add cs xchg jno (bad) enter pop jp lods push test pop cmp xor adc pop out jo js push xchg and cmp pop outsb mov lcall pop sbb cld dec (bad) pop loopne and push jae and mov adc mov push mov xor xlat daa jnp push xchg frstor mov addr16 xchg loop jp (bad) or daa faddl lcall outsl inc paddw insl mov out jmp mov ja and mov inc push jo jae cmpsl sar adc fildl add int3 mov cmp mov mov decb sub cmp adc mov bound je andb mov mov or inc lahf (bad) pop mov insb fwait mov outsl pop cwtl cmc cmp pop lods loopne jecxz js repnz js test (bad) insb movsl in jno clc dec dec in and femms (bad) pop clc sub in sti std (bad) pushf insb (bad) mov (bad) stc andb out push inc cmpsl push xchg xchg jae iret int pop insl dec add mov repz dec pop adc lret jb jb or mov xor sbb push cmp in aad out or ret fstp test test nop mov btr inc push cli sub mov and cwtl mov or int cmpsb lcall (bad) pop in push jp mov aaa in popa ret adcl push (bad) mov pop (bad) das push lcall xchg xchg mov sbb ja loopne jmp mov add xchg adc fsubl jne mov lea adc ja jg mov fs mov dec adc ja rclb aas or or cmp insl adc and mov repz jmp cs sub or add int xchg je jge loop mov ss dec dec sub pusha cmp xor inc aaa loop sar jecxz xlat fcmovnb (bad) fwait seto xchg icebp es push cld loopne fidivrl (bad) xchg mov cld xor (bad) in stc cmpsb adcl cmp xchg sub lea sub call mov les pop push js gs outsb push pop divl jg xchg negb int data16 ja cltd jmp dec fisubl mov and jecxz inc aas sbb sub ret imul out push es fistpll xor cld ds mov test push add adc aaa fdivrl add test cmp andl pop cli lret cld fwait xchg adc (bad) imul mov cmp stos cmp mov jle add or lret sbb popf test icebp insl lahf sub push out testb dec sub lcall lret inc xchg stos ss push pop sarl push aad test cmp imul adc mov xor and sub mov bound jl cmpsb mov ja mov adc dec popa lret imul or mov sub pop scas mov daa fistl ficomp push push lock stos leave xchg ret cltd ja xor mov pushf std aam pop jmp outsb ud2 or xor adc mull (bad) int loopw int3 and xchg xor pop mov in rorb xchg addr16 cmpsb pushw add cmpsb cmp pop mov stc out scas sub in mov push (bad) iret rorb xor dec (bad) jge mov div in daa jg fs mov repz jmp and les addr16 inc hlt or push sbb mov repnz dec outsb push fsubrs or imul xchg notb aaa and mov cmp dec jle push (bad) mov jl adc xchg mov mov or push mov jo imul push cmp adc pop mov out xchg mov push xchg add ja pop add sbb xor aad setne insl adc dec sbb cmp testb pop std jns mov mov and xor mov jge shll cmc sub (bad) jno pop or sbb add outsb jbe push jae inc sub rcll dec inc mov insl mov or sbb js rcr mov inc icebp add mov in mov pop jg or jp adc imul cmp das mov nop mov push cli pop jp das icebp decb (bad) out sbb dec add jg sahf fstl test push mov (bad) adc (bad) push cmp xor popa add xchg mov popa mov jbe or or lret push roll in push aam jno adc mov data16 mov stos dec xchg inc jecxz cmp pop std mov cmp jg mov xchg in or cmpsl fbld push sub scas cmp xchg jnp jl add rorb insb dec movl test pop jbe mov ds and pushf sahf adc dec fsubs mov or in push fs add sti cwtl sahf jg fwait and cmpsb xor pop lock cmp pop mov and xchg lods outsl sarb fnstcw (bad) xchg sti sbb sbb cwtl sbb fnsave xor cmp fwait inc xchg test (bad) cmc or xor push ljmp pop pushf xor fisttp jne jcxz mov adc loope xor mov and pushf in push push xor and int bnd mov and fnstenv aad jmp jg push jae (bad) push jns fisttpl out or jae or inc cs loopne loop cmc sti xchg xchg sub (bad) and and mov outsl mov xchg leave mov lcall pop andb fidivr dec jecxz jle dec div gs lret cmp lahf inc inc add push adc mov pop xchg sub imul jns cltd lds std ljmp sti jp rol and int3 mov es xor fisubrl adc fisttpl xor les bound sti pusha mov je mov inc addr16 jle sti sub stc mov aas stc stc mov cmp add mov enter push (bad) out xor pop mov xchg enter cmp xor data16 mov cmp sbb jno movsl inc xor mov add rolb call js sbb mov inc mov fcmovnb cmpsl test xchg mov or out stos mov dec arpl fisubl popf sbb in push cmp mov loope mov pushf mov ja xor jecxz xchg les outsl dec mov lods stos iret div xchg mov scas leave or mov dec gs and andl ret sub int3 gs pop mov xchg ret fisub nop rcr push adc adc jecxz push pop jl mov pop adc insb popa pop sbb loope push test call push (bad) add mov and cli jne sbb push cmp out ffreep outsb nop movsb and push push les scas js aad test pusha cmp ds mov repz jo pop stos sub test insb sbb sbb mulb int3 in ds pop mov (bad) hlt (bad) jb push add or pop jge jmp add or jne,pn jle addr16 js sub loop or lods loope mov fcoml adc add hlt push or ret das mov xchg imul xor jb add adc clc cmp xor push icebp fcmovnb xchg mov sub in cld xchg mov push (bad) inc std aad (bad) fistpll pushf aas fadds or cld in push mov sub enter sbb adc add push fnstenv mov xchg out pop sbb test push imulb aaa lahf pop and out inc loope int3 sbb mov adc rolb cmp gs rolb cli adc dec xchg xor and jae mov ss push rcrl and dec sub mov mov shr stos xchg repz mov out cld pushf fdiv sub adc and divb insl fisub (bad) xchg dec xor pop add jae cmp add jns pusha movl push or xlat mov mov shrb jp mov sti xor pop push adc push xor jecxz lret rcl sub push mov push stos adc mov push xrstor jmp je and push mov mov int (bad) push sahf push jl mov sbb test clc jmp roll add mov (bad) popa pop inc idiv jmp movsl jle push gs xor fdivl (bad) cmpsl and mov dec jnp add into dec xchg mov enter sub movsl pop bound jge adc cltd inc (bad) sub push fcmovnbe mov push lret pop inc mov dec std pop clc lock loopne jl loop mov sbb lret and ljmp and push jecxz ffree in sbb xor sub popa enter mov adc add test push repz mov sti in cmp shrl mov jecxz das out mov mov out jbe in xor inc repz imul mov inc dec test mov out rcll into push (bad) push mov xchg out mov xchg adc cmp movsl inc mov pop pop pop lcall xchg outsl in dec repnz jno or pushl cmc push mov mov jnp sbb incl push and or leave fstl mov add lret add gs mov andl fildll ret mov repnz mov mov fcomps and jne jle ror fnstenv popf sbb dec imul fnstcw sbb add out fwait mov stos lcall xor inc dec xchg iret sbb inc mov pop out push lret nop popf test xchg cltd aaa jge and popa (bad) jae inc fwait pop stos or jbe mov inc xchg xor sub xchg xchg jecxz mov mov mov ja rcl mov mov je inc aas pop pop (bad) sub mov xchg test jp mov (bad) arpl aam (bad) pushf mov dec sahf pusha arpl sbb stc int3 push (bad) mov xchg pop jecxz add add xor xor popa pop out (bad) test lret push fs xchg cmpsb push mov cmpsl jmp xchg cmp jp and js mov xchg aad sar out push imulb and xor mov pop mov mov es outsb mov je sbb (bad) sub lahf jecxz adc cli mov mov mov test call add test push push divb sub adc xor mov movsl (bad) sub sbb dec hlt fwait add jne mov fistp ret hlt orl mov xor aas add jge inc test sbb call dec lahf imul flds nop rcrl test jp pop bound negb addr16 dec data16 jb add cmpsb int sub xor pop xchg pop jnp mov or pop pop mov mov mov xchg xchg out popa jb das lret or jge pop push xor out mov jecxz pushf mov aas dec rcl fisubrl fisttp sub decb test imul adc xor mov insl xor es dec inc leave mov pop push fisttp lods pop outsb je inc mov loop xor jmp fiadd ret outsb mov xchg add push xchg leave mov pop stos pop insb push cmp jnp mov (bad) push addr16 dec xor aad loopne dec lds cmp or push les pop mov pop int3 clc fs and sarl sbb xchg jg add fwait pop sbb dec push ss shlb sahf popl cmp stos sti nop adc in in mov iret push data16 mov js outsl mov push mov dec dec jb shrb add dec sahf adc fstl cld sub fs add xchg in push mov lea gs sub js mov (bad) call mov pop dec (bad) cmp dec clc cmp cwtl leave into pop cmp mov test loop inc clc rep jge pushf cmpsb sub lods mov sub add dec inc insb or xor gs test or es ds mov insl das pop or sysret and add push xchg inc clc dec mov mov xchg imul daa loope jecxz push pop jnp loopne adc cmp inc dec dec (bad) aam mov mov outsl mov cmp cs xchg and mov sti das jecxz adc int3 int3 xor iret call out jmp cli (bad) pusha imul jmp add sub scas insl das mov dec push test xor or cmc and jbe mov or xor lods mov xor in in lock scas jle fmul gs dec daa pop pop push and imul or (bad) stc push xchg mov push and ljmp (bad) adc movsl es (bad) cmp cmpsb dec sub push xor mov cmp imul mov out or (bad) dec add or mov xchg aam lahf add xor sub out jae addr16 gs je repnz mov stos lcall mov adc sti inc jmp lea in jge push outsb pop add cmpsb loopne lds stos pop cmpl push jl jmp or adc push notb mov mov push popa and xchg xchg push out or cld fsubl test push scas (bad) sbb or movsl pop cmp push mov push sahf mov pop idivl xor gs iret ror clc push dec cmp push in add cwtl lods movsl nop cltd jp add jle decl xchg int js enter xchg mov adc shr aaa popa sbb push mov sub cmp or dec jmp mov mov push aaa cmp adc adc inc ja cmpsb xor sbb adc and std or cli cmpsb fbstp (bad) jnp dec push mov xor outsb mov outsb in mov hlt cmp sbb outsl push andl loopne lret mov fwait mov icebp pop cmp pop daa jae dec cmp mov mov sbb hlt pop stc mov jne call cmp sbb movsl in dec ss push cld and sub push adc (bad) mov xlat loope cltd cmp int3 fild popf cltd push jo imul das pop adc xor (bad) negl scas loopne fcoml xchg dec sti cmc push ljmp fild daa pusha fistl cs or sbb clc inc cmpsl sbb dec cmp push pusha sbb js ret mov jnp sbb sbb sahf (bad) jl push daa popf mov add popa mov and inc into scas xchg fldl dec hlt repnz cmpl mov mov jmp pop fidiv (bad) roll (bad) mov mov mov loope lahf bound mov lret jo ficoml xor out push pop cmp cmpsl lret lea cld stos notb popa adc push outsl scas and mov push (bad) mov (bad) sub push test dec push jg sbb sub movsb mov aaa enter or mov and xchg repz test cmpsb jns pop imul mov loop mov ds pop dec sub push dec add xchg enter xor (bad) cltd mov imul pop shlb clc mov mov mov jb and mov xchg lret inc out ds add adc int pop out test xchg sbb daa fldenv mov dec add outsb jno les sub mov mov add cltd mov cs dec mov je jg and es jne aam fstpt imul dec pop and mov mov jle lret dec xchg in xchg jne mov inc or sub inc pop mov push jg es mov inc sub mov adc in jmp lcall push push es (bad) rcl mov cmpsb or stos insl pop jmp push movsb xor repnz add push jnp adc scas mov subb shr icebp cmp divl pop rorl jle,pt push dec lock cmp xchg (bad) lahf mov xor test clc adc jmp xchg or stos xchg je popf push adc (bad) jg inc dec insb outsb sub addr16 mov adc pop (bad) outsl fnstsw push jp movsl and add fwait ljmp cwtl fstpt popa test jmp push leave add fistp mov scas out movb xchg mov cmp mov xchg mov mov push and lods repnz pushf scas pop jbe mov xchg outsb aas imul (bad) hlt add add cmp shrb push sub test inc cmp aad stos mov jae cmp popa cmp stos jbe mov test fcoms ljmp mov xor jns dec lret inc dec arpl dec movsb mov loope jno and and sub fisubr add pop shrb mov mov adc and adc inc jp push fcoms push jnp mov xchg adc aad push add es mov pop push mov ficoml or mov mov mov xchg mov rcrb stos addr16 sub inc adc pushf mov inc lret stos lcall repz jmp mov cmc cwtl jae insb push call stc or jns test lret lahf addb (bad) and add mov push push pop sbb ja push sahf movsb adc mov jno dec push xchg pop and adc xor or insl aam inc mov pop xlat or dec cmp shlb jno jae add scas mov mov xlat movsl mov loopne dec outsl fstpt insl sbb mov or jnp imul xor sarb aaa pop xchg inc das pop push sbb lahf jb out call test (bad) mov jmp lods and repz scas mov sbb pop repnz sbb (bad) cmp inc xor ds and sbb (bad) pop push js mov mov mov (bad) and repnz sub push mov pop out lret mov dec adc ss push push jb fisub add adc sbb ret and pusha fcompl aam (bad) mov cmp adc mov add ja jecxz push dec pusha das dec or outsb push andl add lea push pop ficom inc sbb mov adc mov les and dec push insb pop (bad) fwait xacquire dec mov jl,pn dec test dec aad dec loopne lods lahf sbb pop and mov outsb mov mov inc addr16 jno push pop sub push and dec pop mov mov xchg movsb mov (bad) add lods mov adc sahf mov enter jne fidivrl jnp movsb out adc push jle incl jns mov or jecxz dec push xchg dec idivb shrl inc sahf fidivr into sub lock or inc test lret xchg out jg iret adc int ja jp dec fnstcw mov mov cmp inc push fs or incl mov or xchg rolb in scas adc xor (bad) lods cmp push push cmpsl dec push adc fisttpl pop insl cmp les pop shrl and fimull outsb dec mov mov cs push stos jg cmp ljmp loopne mov cmc popa insb int mov std pop pop jmp xchg divb stos push addr16 out lret fmulp das push ss sbb sub sbb cwtl push inc fsts in out je clc mov lds adc test mov cmp mov out sbb cli stos mov mov mov lods cmp adc dec lods into roll mov lcall jl fcmovne push dec shl cmpl imul fcompl mov or stc cmc jp dec aas ss movsl les aaa jg movsl inc cmp push adc inc or jbe add sbb lea sbb or fld out pop inc fs mov xlat or pop push jne and xchg cs fildl pop leave lods loop or out outsl add push in add xacquire aaa add push in mov (bad) mov cli aam fwait lcall mov push mov arpl in pushf pop or push leave jb or inc mov cwtl es mov xorb outsl cmp mov inc ljmp inc (bad) fisttpll (bad) mov pop sbb data16 cmpsl cmp mov sbb in pop loope popa pop cltd outsb in sahf xlat or in push xchg jge dec test icebp dec push push das les dec hlt cmpsb push jnp mov les sub mov loopne push lret out inc or fmuls fisubl pop mov push mov imul js pop xor mov in or (bad) lods int3 jle inc adc add mov ja out jb sbb dec decb dec jg adc gs cmp rorb insb cmpb out add scas add mov cmpsb test mov push lahf pop mov adc ret jae es stos cmp mov aaa dec cmpsl push sub (bad) je int3 aaa dec fs pop pop add lds pop mov (bad) lret push xchg aaa push pusha shrl or jo jp push xor dec adc aam clc and int sub add add fnop pop cltd sub leave add push (bad) sbb add arpl xchg xlat call pop or les pop mov mov int dec push loope ljmp stos sub jae loop (bad) cld xchg mov mov lds enter inc xor xchg add xchg int3 fwait xchg ret push insb xchg rorl push dec dec rcrl insb push mov push sub xchg popf jecxz loope icebp daa mov insb clc dec xchg push in ret xchg les ljmp scas inc mov lret jns cli loopne fwait sub out mov xorl jns lock vphaddubd or test sub inc subl xor cmp add cmc ds mov cmp cmp dec jge inc ret add push add xchg or pop push mov iret or es xor jo sub inc lret test test adc pop jbe xchg sbb jbe inc lods or pop insb lcall jae sub ret xor pop lcall and push xchg jnp mov sub addb (bad) in (bad) out dec ljmp jnp out out pop sub sub mov pop repz movsl sti mov cmp icebp mov sbb movsb sbb mov jmp adc roll leave aad cmp and xchg push lds mov out pop push or dec dec gs fistp sub inc loope mov or push and cs cmp movswl test mov xchg fcom lahf lods xor add iret out (bad) fwait (bad) push inc sub push push cld div iret cs push jmp xchg pop lods adc push sub add inc jae imul or or xchg ds daa xchg push iret dec jp rcr icebp je loopne mov cmc sbb cli fldcw test mov (bad) jno sahf cmc movsl fisubl adc popf jbe and dec test sahf stos cmpsb inc movsl (bad) and mov inc loope loope rorl xchg pop jae mov in jge cmpsb pop lret aas sub fistpll mov popa negb pop cmp lods push mov pop in icebp mov mov cmp sbb test rclb lds dec sub sbb or xlat mov jecxz scas sbb stos cli sbb add das scas jo into leave negb nop gs push div (bad) lods mov scas rol jne aaa or sub mov lods fisubl test (bad) xchg int3 inc mov push lods xchg cmp movsb loop sarl stos insb lahf leave cli (bad) sub lret mov pop sahf or (bad) sti jmp stos (bad) xor pop xchg mov scas push rcl dec pushf mov dec xor shr cli popf int3 ret imul add bnd movsb cltd mov push mov add cmp rcrl scas fisub scas test (bad) cmc inc hlt add das ret popa xor cmp adc jo jmp sbb movsb adc cmp loop addr16 mov or jecxz arpl shll call aaa inc pop dec pop clc cmp (bad) jno cmp dec lret ret adc rcll loopne rcll es fs cmp jae bound enter mov mov and clc push xor jbe inc sahf out inc out ficom adc or push adc fucomi cmp cwtl cld mov pop in test sub test movsl paddsw jne inc iret aaa dec in out sbb fstpl stos dec in push mov xor xchg imul jge lret icebp je cmp mov (bad) stc outsb ja das movsl jp shrl mov gs orl push std rclb out data16 aad pop mov push push adc loopne out xchg xchg mov out push loope and pop inc outsb jnp add stos or jns outsb mov xchg fistpll inc mov dec sub inc adc xchg push xchg and sbb stos pop mov imul jno or sahf jns or and repz and pop xor push xor sbb xchg fs sar sub mov hlt or inc dec mov pop and mov cmpsl jp out mov sub add ljmp jbe lds mov hlt or fstps loope cmpl ficom add test into mov pushf sarb ret push push sti roll callw inc jmp nop lds arpl push sbb sarl call mov dec imul jno aam xchg jecxz imul sub mov jae aad roll jb mov push pop test mov das sarb adc inc insb scas jne (bad) lret popa pop pop mov int sub subl mov data16 (bad) leave xor pop addr16 mov (bad) dec imul push mov mov cmp jae sbb std xchg repnz mov jnp mov push pop push mov mov adc inc jno pop ljmp dec xor mov push push imul xchg imul (bad) jo loop imul push and out in cmpb dec cs addr16 xchg lock movnti mov and testl pop jno inc in cmp (bad) sahf xchg ret int3 cmc push call je xor sub pop mov nop dec stos (bad) pushl add sbb mov std (bad) je or cmpb cwtl adc aas xlat jne add xor loope mov cmc lods cmpsb in xchg frstor in arpl mov dec hlt cmc xchg inc sub sub or (bad) mov inc mov xor shr neg shr and mov in decb mov push jne inc ret cwtl xor adc inc push cmp push adc or icebp shll daa notl imul jb add or fucomp inc sarb sbb cli dec pop lcall or xor jne lahf pop or imul ja jecxz sub pop ljmp mov xor in fidivrl jg push movhlps enter leave test sub call adc mov jmp lods pop jo dec jae std push push repnz js mov sbb (bad) or jp int aaa aad sbb mov mov addb incb (bad) clc add rcrb or lret pop push sar int mov dec push pop in sbb bound add pop xchg jo sub dec test cmc mov enter mov fldenv push test bound cld stc clc test or (bad) xchg in dec sub add fisub or popa and es cs rolb scas xchg cmp sub cmp dec cmp and mov call pop (bad) and mov test addr16 mov dec ret dec lahf xchg sarb pop sbb (bad) loope sub (bad) mov mov xchg aad xor cmp xchg test inc bound jl test into cmp fidivrl shrl dec (bad) cltd (bad) (bad) xchg mov push push cmp mov fcomi pop jmp ficom les xchg andl addr16 movsb sub pop gs das pop sub sahf hlt call and add mov scas (bad) test cmp test ljmp fcom add ficomp test dec xchg and push push and dec push mov shl push mov ret popl jno fldl shrl xor fnsave popf xor jecxz pop rcr or push sub mov rorb mov lahf arpl loopne inc push lret fs mov xor push dec daa xor or ret xlat icebp jo ffreep mov outsl inc es mov mov dec adc jecxz rclb mov push addr16 mov movsl or out jb jns test push jae ret ss pop in mov mov fs mov pop and xchg jnp lcall out jnp mov jecxz push movsb (bad) pushf mov cmp stos in push mov sbb cmc addl scas mov mov (bad) aaa xor cmpsb mov adc or dec imul inc inc sub mov ret jl inc sbb or cmpsl push mov mov sar sbb roll and adc xchg push inc add push inc hlt push sbb adc add and xchg push addr16 in cmp pop dec mov push mov movsl mov jnp sub int3 (bad) jae pop (bad) int3 mov inc rcr aaa idivl mov pushf push inc fisttpl mov addr16 sbb xlat sub js out mov pushf inc popa shl adc shl mull push sbb int3 iret bound inc (bad) push xor sub shrl out mov movsl jne ss cmc dec enter dec push mov fdivs in test xchg and in into cmp ret aas cwtl lock push add out out leave lods and pop pop jmp enter cmp fimull jl lahf fldl adc ljmp jle xchg pop mov sarb xor out jge insl mov in or add aaa ror inc mov or fnstenv sbb mov lahf cwtl jecxz je dec xchg dec mov call jle xchg xchg mov cmp std fldenv and call sti sahf into pop cli ret jno sub test scas adc aam xchg mov das lock jecxz xchg cmp adc shlb es pop popf mov pop shrb (bad) loope adc pop into xor mov jae mov pusha cmp insb mov shl sbb mov out jmp lods mov push pop and in das jno push push pop nop mov insl stc leave (bad) stos popf lea in pop das lods xchg push repz je (bad) jns imul inc pop (bad) stos adc mov lock sbbl bound loope imul cmp or sbb sbb inc in push mov shlb adc icebp in loope xor pop mov (bad) jns inc mov iret xchg rorb cmpsb push sbb movsb loopne mov imul jb xorl and and push pop add pcmpeqb cmp pop stc lods (bad) xor repnz fyl2xp1 mov cltd jo push pop sti push (bad) push jg jns mov int3 neg stos dec cmp pop iret mov cmp addr16 inc lods arpl cltd (bad) lea jmp jg (bad) pop in (bad) xchg add push loope movsb out cmc imul test push bound sbb push cmp fs and inc rorl lds and jb loope,pt outsb cmovge or xlat aad mov in movsb outsl ljmp std int aad push dec xchg shl repnz (bad) in outsl (bad) xor aaa int3 mov fldt lods fst imul fidiv pusha in add pop ret lds mov in mov xor and inc clc iret pushf scas pop movsl test popa leave add xchg mov jo dec insb fistpll push mov mov cs test arpl add out push xor daa and test and jp lret xor mov and gs cmpsl xor cmp mov imul push jmp lods lret pop pop xchg cli adc aas jle es push and (bad) push add inc (bad) std ljmp outsl sub cmpsb jns repnz jnp (bad) xor and mov jg cmp adc sub clc jo jl push xor aad and fistl les pop pop movsb cmpsl mov (bad) hlt push dec or (bad) pop add (bad) mov xor pop sub test ds xor fneni(8087 es pop or mull call push cmc pop inc insl mov sbb xor daa dec fistpll and cmp daa data16 loope pop ror cmc test mov mov cs sbb and mov inc xor lcall movl mov inc (bad) add jnp frstor mov test rclb jns clc (bad) popl jg xchg mov stos out add andb xchg es mov test xchg mov inc sbb sarb loopne cli pop adcl movl rcr inc mov stos js cli divl lret out aam ja pop (bad) int3 or sahf lods movsl outsb ss hlt push dec adc jae movsl das cs mov mov (bad) jg sarb sbb push test fsubs int loop add mov or pop lods inc mov fsubl sub sub stos clc xlat lock sbb repnz ret jb mov mov (bad) lret push pop adc sbb fsubr pop data16 sub stos mov mov mov push dec inc insb cmc stc repnz xchg (bad) lcall and or jns bound and andl push cmp mov mov test and scas xchg adc add inc add cmc sti aam jge ds leave xor xchg cltd inc and lret mov stc and (bad) hlt mov cmp push les mov es jge fild (bad) call inc nop jp mov (bad) fwait rolb mov xor or jge in mov push mov into cmp aam lret clc inc mov add sbb pop sti test sbb in or mov insb ret (bad) pop imul jmp (bad) into dec stos push mov cld sub sbb xchg hlt mov and js pminub mov sahf adc mov mov aaa push fcmovbe inc lret add sbb sbb rcl push pop rcl push add push lcall jne lcall sahf xorl retw loopne and inc push in cmpsl fnsetpm(287 jmp aaa xchg sbb in jo out incb xor lret roll call sub aas leave bound ja sub pop std push or adc in mov repnz pusha mov mov icebp cmpsl call mov int3 or jno (bad) mul fdivr sbb inc sbb iret mov in xor dec clc dec sbb scas int3 fdivs rcrl adc out jbe out out cmp dec inc mov mov (bad) stc pushf sbb aaa cmp mov mov fldcw pushf cmp lock push ret mov pop (bad) mov (bad) call or mov loopne mov inc in pop mov sbb jmp insl adc sarl lahf aad ret hlt and adc pop bnd ret adc mov xchg inc in and mov lret mov cmp dec inc sub pushf sub ror clc out scas ret iret shlb ret mov (bad) stc push scas push jo push add pop call push mov ja insb (bad) clc in in push add jb xor mov ret int3 ret adc push dec dec jl insl stos cld pop iret test sbb lea inc adc jg and sub jmp xchg pop inc jmp adc out outsb and adc sbb inc sub sub jp or jns std retw dec ljmp mov sbb pop test mov dec in adc add stos aad lods or or sub sub jecxz stc adc js call and or adc mov shll sbb lock push sub aaa mov sahf out dec or movsl push push or sbb xchg cltd fucom adc fcomip lahf push addr16 cmp pop fdivrl (bad) mul add or out mov mov dec out dec in and into ret pusha mov lods stos cmp shlb (bad) mov lock dec aas push or shrl (bad) ss add xor mov icebp test stc xchg and fidivrl xchg cmc out stc dec adc xchg inc fwait jmp cmc mov inc in adc cmpsl fwait jle scas shr xor fcomp insb shrb mov popa mov inc loopne mov push jge adc jbe mov pop cmpsb daa dec push xor cmpsl clc aas mov mov add popf or cmc mov das xchg adc (bad) (bad) dec enter inc mov push adc aam jmp insb mov leave jmp add or xchg adc lods shrb xchg add dec mov push sub ja mov repnz mov fsubl mul int3 fcoms popa ret fnop adcl adc icebp mov cmp das orl out cmp ja test out aas pop adc dec and adc outsb pop or (bad) stos icebp jno mov out inc mov or mov lret rcrl cmp push inc outsl and pop popf xchg mov fdivrl pop mov jbe push or sbb sub repz cmpsl (bad) out out (bad) xor popa push int3 mov mov lds inc push cmp cs int3 sbb pusha scas or jl cmpsl mov in pop or add mov cltd and push mov mov adc mov (bad) ret cmc adc fidivl rclb sahf addr16 out ljmp or xchg mov mov sub lret mov xor dec stos jne call cld lret pop cmp sub and leave mov mov inc hlt lods imul xcrypt-cbc cmpsl pop aad pop cmpsb outsb adc mov test push mov jb push cmpsl push xor mov or push xchg inc adc test push fmull mov jge scas fldt mov push outsb iret pop ja pop cmp fidivr in inc inc mov movsb sub sub jl sbb and das sar cli xchg xchg sti jge mov and xchg lret jne mov sti mov (bad) mov enter sti mov (bad) mov out (bad) dec into popa pop ds loop pop sbb test and inc adc repnz add movsb and ds dec pop sub ljmp stos pop ret (bad) xor xor pusha sti pop mov insb fnstsw mov js mov inc test sarb pop xchg add pop jl mov (bad) mov stc dec and (bad) xor mov in lods xor pop inc sub stos int3 and (bad) jmp jge xor sahf cmp and outsb repnz int cmpsl fs cmp test mov cli push push dec cmp mov sub clc jns popf jns lods mov xchg jae js cmp es aam lcall mov inc pop pop xchg jbe cmpsb jbe jb or inc sahf lcall (bad) jne ret fwait lcall icebp adc sbb pop sahf cltd add push iret sbb push stos adc xchg mov xchg push fs lret test adc push daa int3 jns push inc lds (bad) jecxz int enter lods lahf xor arpl xchg fsub cmp divl inc pushf xchg into mov push outsb hlt ret jns pop test adc in pop cmc xchg test aam sub int3 cltd lret dec (bad) repz mov or fwait cmp int3 repnz out (bad) mov repz dec pop adc pop test dec cmp sahf and fisttpll pop xchg sub daa mov pop aad inc enter dec adc mov test (bad) nop push add or inc inc or lret dec or mov ficoml jp (bad) (bad) insb and movsb or (bad) inc xchg (bad) adc repnz enter arpl out insb int3 idiv nop add vcvtsi2ssl xchg jb dec fcoms and lock cmpsb lahf lret mov daa pop (bad) xor test iret call jge nop sub xor sub xlat push mov xchg daa mov inc jmp aam push ret (bad) push fcmovb aad adcl ret xor ja (bad) cmp out or jp (bad) xor add paddusb and mov imul out in outsl push js sub add fisubr sahf outsb ja xchg push cmp sub in jl and or add lods lods popf enter (bad) lock xor jns jecxz cmp (bad) loopne jo mov incb and cmp mov stos (bad) or mov xchg (bad) std dec jns xchg mov mov pushf mov pop cwtl lods clc or lret loope mov adc inc jge sub lods pop les rolb cwtl xchg repnz sbb or int3 aaa pop nop push sarl and xchg xchg and aas inc xchg sbb insl xchg and bound aaa pop and enter enter ljmp sbb jns cld ret cmpsb test insl sbb loopne sbb pop fstps mov add jmp cld sub sub fisttpll mov push sub les inc test aad fsubl mov ret outsb pop add shrl mov jecxz jns jnp inc mov insb mov xor imull xchg push shrl mov fs push fs xor mov cmp and push xchg jmp aas call push std add lret or pop or cmp repz decl mov sbb adc add les dec mov or xchg xchg inc (bad) xchg mov or adc sub call inc add pop orb movsb mov sub dec out jp xor loop (bad) dec mov mov sub mov fild inc xchg mov mov push pop rcrb imul (bad) pop (bad) lahf mov insl push sub (bad) xor dec mov mov dec pop or repz out fimul lea xor pop pop in cmpsl cmp push loope push std and mov aam fildll in jle fstl cmp (bad) mov rorl xor subb cmc dec mov fldt mov insb mov fisubl lret vcmpsd dec ss cwtl clc outsl rcl in clc mul add mov loopne xchg or adc adc ret add scas clc sbb mov xchg or pop jo or aam push push out mov sbb pop cltd lcall jns sub push imul sahf outsl into data16 inc inc daa jb mov vscalefpd and cmp inc dec ss lods add sbb xlat int3 dec in ret and repnz insb push mov xor push push leave xlat int3 or lea (bad) rorb jge xchg xchg into (bad) std inc lret fiaddl mov clc and jmp aaa xchg xchg lock decb mov jo push mov ret cmpb dec xchg enter xchg sub jp frndint js cmp mov stc mov jp (bad) (bad) call dec icebp push or adc inc adc gs sti (bad) sbb int mov int3 (bad) das jmp add push and std into pushf pop xor lahf xchg pop enter sub les jl xor aaa mov cmc nop jnp int cli fidivr das push in adc xor fnop pop je jb sbb lahf in pop and adc or scas or inc inc mov inc sbb xchg pop testb fdivrp jmp jg jb dec out neg and pop (bad) dec sbb adc shrb sub jno and js cld fdivs mov sbb lret push and xor sub adc ror jno xchg jle and sbb (bad) jmp push push leave mov jge inc mov mov (bad) (bad) mov jne pop (bad) rolb jae ret xor pop cmp cli mov mov cmc loopne adc jmp xchg in out es fistpl daa movsl aas insl mov addr16 cli fs fxch inc pop or aam xchg (bad) outsb xor das mov clc inc dec sub push inc cwtl negl lret int3 (bad) mov xchg mov mov xor test mov mov (bad) test iret mov push or aad or push stos out jns mov jmp dec or loopne shr inc push xchg pop mov xor sbbl inc mov repz ret sub xchg dec xchg pop (bad) leave inc in addr16 and stos fwait (bad) sbb std mov arpl data16 add add aaa jmp or jno or inc in sub add arpl cmpl aad nop mov mov je pusha rorl push ret push cmp mov push mov xor xor std push clc jb popf scas push xchg mov and sahf lods outsl jl jmp xor imull add or pop popf pop scas xchg fwait test lock shrl jmp lahf and sti or push movsb movsl pop mov push xchg cs (bad) jmp mov mov push mov subl fldt inc push adc int3 idivb sub out sub popf adc push push dec call das ds sub xor pop popa aam mul adc or rolb xor iret iret divb sbb test xor mov loop gs aas or lahf push jg ret adc lcall pop sub pop xchg cld stos and mov out mov lds movsl dec inc (bad) bnd push or or jmp repnz dec push leave aaa mov lcall dec jl adc push test (bad) roll add mov push mov stos sub lcall dec xchg shld stos pushf lahf and mov xchg (bad) repz lods repnz jo (bad) sbb jge or cli jg pusha ret push sub addr16 mov pop inc push loop mov aaa adc cs aam xchg lods sub mov (bad) out sub xchg in imul lock xchg mov mov mov popf push aaa pop fs add xchg push mov inc int aaa xchg jecxz ret pop xchg push pusha rclb mov (bad) push je mov data16 imul add out sbb mov adc cli pop cmpsb xor addr16 int int sub pop leave mov test sub dec mov cwtl test adc insl or stc ja enter mov or jl fwait jbe stos add das adc adc in nop loope mov inc insl mov push add (bad) pop push repz pop rorl lea push cltd outsb int3 jl je inc into mov popf fwait loope cmp adc adc pop stos repz mov in adc cli cs jno and add movsl inc in and rcr mov jmp out push xor les push push pop mov sub inc loop add pop out mov jl add nop imulb adc stc mov out rclb mov divl aad loop xchg repz pop add dec popa (bad) out insb in popl ret jnp pushf push jno cmc popf test xchg xchg in dec push or cmp sub movsb movsl pop jnp mov dec lock outsl cmp pop fimul fidivl mov cli mov enter sbb out mov lahf ret push outsl imulb je dec xlat push std mov inc rcrl stos scas jl sarb lret test lds jns stc pop outsb mulb xchg xchg xchg dec push cmp push fistpll sbb push xor sub sub jae push data16 add mov and mov lret repz sbb mov push out jge sahf dec xor (bad) aaa mov loopne divl jge out das mov and inc (bad) repz lret fnsave xlat mov push aaa sbb shlb cmp (bad) int3 fnstcw push rolb loope (bad) repnz (bad) push int3 push add dec or jmp fbld adc pop in sub or mov insb jo jno mov loopne adc xlat jo lcall push icebp (bad) adc stos stc in outsb pop sub adc loop aaa xchg repnz pusha jg into mov push fs mov xchg adc imul int3 lods adc out aad jg sar cmp aas jl pop or scas jbe repz outsb test sub push (bad) push mov out adc imul mov jmp adc sub repnz jae int3 sti insb test test inc push xchg rcl lahf add dec mov cmpsl push insb in push (bad) xchg push mov xchg je fdivs dec pop aas add sub sarl cmp dec insb ds sarl adc inc adc sub and idiv and je sahf sahf call (bad) into dec notl test leave cli jae sub je inc push ja sub leave mov fwait cmc jb add mov adc jne js pop jle xchg xor call aas jg jle pop pop and adc mov and cmpsl sbb insl mov mov mov pop dec or out add mov sub nop sbb sub mov rorb ja in inc lcall es mov sub add out adc js sbb mov xchg int3 mov sub mov mov xchg ljmp outsb jge mov cli out mov loope push sbb (bad) jo add inc es leave dec aas sbb stos repnz bound scas popa adc rcrl flds xchg push cli in add shlb and clc stos addr16 xchg ror enter lock aam cmpsl (bad) rorl cmp lcall pop int3 sarb mov enter jmp test cmp aas pop xchg mull icebp (bad) or mov xor (bad) decl imul inc add xor mov iret icebp push shr arpl pop mov fadds xor jl out dec sahf lcall add jnp je inc daa fcmovbe stos ficoml lret mov (bad) or mov (bad) movsl mov jns xorl js dec jl ret sbb outsb pop fdivl xchg adc add arpl pop imul adc mov aaa icebp dec in pop jl in repnz fcmovb out push xchg add push sbb pushf xor push mov push fs (bad) cmp push xor sti repnz jl pop out xor popa bound into lds loopne cli and pop in icebp popf or inc adc daa leave add sbb xor (bad) cwtl xor sbb out xor in mov (bad) out dec xchg xchg jmp or out push bound pusha sub or test in call fidivl and bound adc xor dec mov jo es add xor inc roll inc sbb jmp pop adc dec shl popa mov and jl mov subl cmp lods push push gs jmp hlt push inc cmpsb pop inc adc (bad) add mov push mov cmpsl cmp pop dec jb jae imul (bad) pop es cmp jmp xor loope mov pop adc outsb cmp (bad) (bad) int3 sub ss (bad) mov ds pop xchg push adc push loope mov (bad) ret into loopne fnstenv cmpsl sbb xlat mov cmp push jb je mov or std mov ss clc lcall insl lret dec ret fs mov mov cwtl rolb push pushw push pop loopne pop mov in xor add movsb sub repz push add andb push inc jnp adc jno add fmull iret dec shr cld cmp movsb gs and xlat mov push incb cld (bad) mov fcoms je (bad) rcl add mov mov (bad) jmp lret bound (bad) push sahf pop ljmp loop js fwait leave rol sbb adcl outsb dec call lods fildl xchg addl mov adc es push outsl aad xchg push inc out stos cltd add sbb push mov in push fdivs movsb pop lret xchg out dec add not mov jo int3 mov xlat fimul xchg add adc lahf sbb mov pop mov sub sahf fdivs sti cmp divl enter or cmp push (bad) int sub push jbe setae lret pop mov scas loop pushf mov inc hlt jae nop es divb add sub lcall mov clc aaa mov std imul dec or outsl jecxz cmp cld cmpsb leave cld add mov dec fisttp dec push test dec push cmp pop int dec or loope nop clc mov cmp push repnz mov inc cwtl out push xor clc fadds (bad) xor adc loope jo test cs sub ret add xchg scas add ss cmp xor iret insb pop add popa cs jne sbb push xchg or insl xor sbb xchg fwait mov add cwtl cmp mov test pop sub pop or push loope jp or and es (bad) repz stos xchg jae jle imul movsb mov pop xchg pop dec pop enter lock and inc mov adc xchg mov cmc and xor mov mov cmc loop pop pop pushf out and stos out pop cmp add push div pusha int3 cli mov lret mov mov in jge (bad) inc xor xor fdivrs dec fsubl hlt fldenv and popf rcrb sbb adc inc lcall in inc repnz imul and cmpb jno inc rcll push lahf lds aaa mov jmp xchg fisttpll stc fwait divb loop xchg or pop pusha clc cmpsb dec outsl mov fbld xor fs dec lret (bad) mov sub add and dec dec pop jbe adc adc xor test hlt fs data16 mov daa push push or sbb ss (bad) sbb stos aam jmp cmp push inc and jle push bnd push mov je mov xor pop in inc cmc push pshufw mov jae data16 movsb sub (bad) call xor xor repz pop fdivrs cmpsl outsl xor mov lds add mov add add or hlt mov fwait les (bad) int3 sbb popf jbe cltd out mov xchg fmuls mov jge dec ret fiadd pop inc in movsl push call aad push std fimul jg xor xor sbb push aas iret dec sbb dec xor enter push ret ror dec repnz inc out decb (bad) mov idivl daa rcrl (bad) sub mov xchg inc sub or inc sarb stos sub inc add mov push (bad) fimul rcll push pop push inc push dec fisub rclb sbb jmp sarb mov push dec ficomp sbb (bad) push cmpb subl adc mov loop sbb xor enter add sbb fimul pushf mov adc lds mov sbb ret cmc jmp cmc add out cmp popa repnz or testb mov (bad) pop sub ljmp lods in xchg (bad) pop jno lock aad xor xor adc (bad) iret jmp int xor or jne jb dec jne lods add subl dec push mov jne push repnz bound dec into cmp in mov mov xchg sbb iret jmp inc pop mov (bad) pop mov (bad) iret sub scas mov sahf mov pop inc lcall adc repz or repnz and xchg shl adc in and push or cmc lret mov sti lods cli je and mov inc hlt xor cmp sub call pop out daa test jg,pt sbb push fadds lcall pop enter dec shrb xchg aam and and cld inc or leave mov adc cwtl cmp sub jbe js scas test stos std aad xchg pushf out in mov push dec sbb std add lods into test pop cli adc cltd int mov (bad) pop scas imul jl or loope push or sub test das xor aam inc jbe dec adc les jl shlb xor push mov js idivb xchg imul ffreep inc jge adc mov (bad) sub insb ss cltd xchg fnstenv jl stos (bad) test sbb out cs cmpsl andl mull inc and mov inc cmp les xor (bad) shr pop test xchg roll adc cmp int repz mov lock in xor and ljmp xchg add push or out mov xorl xchg dec pop hlt mov cli cmp dec pop jp add fwait daa jle mov dec (bad) imul clc cmpl sbb pushf aas into cmp inc xor test xchg mov ss mov inc jns stos loop push inc repz and jmp and test hlt push sarb (bad) mov scas fcompl sbb lahf test xor push test push pusha add mov push xor je push scas imul (bad) adc jae fidivrl mov outsb xchg (bad) sub mov pop fidivr push cs dec mov bound adc daa out (bad) or jg imul inc dec push sub add bound cmp iret out fimull mov jno xlat inc test jecxz dec out xor mov and adc xchg adc or adc sbb push loope mov jecxz mov out add ljmp outsl dec inc xchg xorb cmpsl sbb pop adc jg int xor cmpsb xor push stos cs push (bad) popf pop sbb icebp push sub inc call mov out mov jae inc (bad) add cltd aas arpl mov xor pop fs push jns iret sbb sbb adc jg jno cli jecxz pop cmp shrb gs cmp cmpb lret fsubs (bad) jle (bad) jo (bad) icebp bound fistl mov dec daa jl mov or iret mov mov call xchg js add sub and fcomi movsl iret pop scas outsl xor adc scas sahf mov (bad) sbb cmpsb cmp mul dec in sbb xchg rcl jl and stc cmpsb cs jge pop push adcl push cmp push scas add stos cmp and pop or and mov add sub mov jne (bad) stos mov lcall in leave aas lods mov mov add xchg mov nop xlat xchg stc stc sarl xlat call in push mov dec mov sbb pop or mov cltd dec ret xchg jmp xor call mov sbb and sub mov cmp ja inc jge leave mov jg shrb or shrl push mov mov and add mov fnstcw call rolb ja or insb inc popf aam or test dec daa mov add xor aaa mov xor jl pop into sub push sub ljmp or add xchg ss adc (bad) cmpsl lock jge mov jnp cmp and (bad) mov (bad) push and ss mov mov sub add fs in cmp cwtl test fldenv mov add insb rcll scas xchg paddusb push mov mov push js,pt ja in std jle cli std mov repnz aaa dec fistp add xor loopne movsl inc xchg mov repnz add jp and pushf or adc cs add add xchg inc adc mov fldcw leave jne aad push sbb xor popf add (bad) or inc mov popa rcl xchg xchg (bad) xor xchg mov mov hlt push ltr gs sub popa xchg dec pop out inc aad mov cmc ja aad push out dec sub insl (bad) call loope data16 mov xchg dec out mov push cli lcall icebp in notl stos jg adc nop mov sub insb icebp in insb int jle stc add mov in fstps cmp lods popa mov add test mov (bad) sbb loopne enter dec ss int3 fild das push dec sbb in cli mov int3 adc enter fildl cmp push iret mov xor bound imulb (bad) test push push lret dec cmp dec cmpsb inc lea mov dec mov jp stos insb pop mov loop js pop pop sbb adc pop dec enter movsl inc lods push mov es xlat and div cmp jecxz mov sbb lahf sub test cmpsl cli pushf jg dec cmpsb push jnp inc dec out push ret (bad) mov add mov cwtl loope dec cmp mov dec negl rcrl div out cmp stc ja jb mov mov inc mov daa stc insl mov imul fadds orl jmp mov cmc inc xchg into lcall cmp jne mov dec (bad) cld outsb dec out push lds mov mov aas shrl std push mov sub xchg jg loop scas es das ficom mov arpl sbb mov data16 jecxz jno xchg mov int3 movsb in cmp or sub addr16 popa dec dec vcvtss2sd sysenter stc (bad) lcall fs dec inc mov lods sub jbe test cmp clc adc aaa push (bad) xchg push cltd adc adc cs fisttpl mov dec inc daa xlat iret flds mov es adc inc mov xor mov mov jb cs fs xchg xchg xor stos outsl cmc pop pop fstpt xchg (bad) mov push test pop mov xchg sbb into (bad) stos int or mov dec (bad) cmp push pop shlb adc adc xchg addr16 aaa pop adcb pop test lods add mov dec or dec mov call test pushf stos (bad) add mov ljmp mov dec sub insl mov or jg push out inc loopne arpl mov cmpsl pop gs jnp out fisub mov aad std dec test mov not les fwait mov sbb mov bound push push imul int shr add xchg fs loopne xor dec mov gs inc lret add dec movsl mov cmp out sub dec xor out pop test dec das mov sub or jg push pop dec loopne lock add loop mov xchg ss or and add inc shlb loope sbb push xchg push das or stos pop cltd aam mov mov adc in mov inc xlat pop or jmp xchg loop call cmp mov jno (bad) loope mov cmp popf dec cmp mov fsubl push mov lds xlat inc dec and sub add sahf fdivrl call gs xchg ljmp out cmp add fucompp inc aam inc jne xor (bad) xor in adc sahf add les adcb repnz sahf and cs call pushf mov push jecxz sbb inc and ljmp mov inc xchg aam fprem repz mov out cmp aam (bad) mov and (bad) jne jge mov (bad) stos jmp jge sub lahf popa scas push enter aam mov jb (bad) mov outsb jge mov cmpsb push leave jae push xchg fistpll scas cmp cli mov pop daa xchg push scas into jnp add mov cmpsb popf jle lret jno call xor add ret arpl (bad) mov jno sbb jne and fidiv in pop insl and lds add jae and fcmovu mov xchg int3 out les call dec inc pop pop addl xor mov sahf xchg xchg push dec xchg fcmovnu rcrl or mov xlat xor lea add push scas fdivs rorl out pop pop aad insb out push mov nop pop rorb mov push pop je lock inc xor lret repz gs in mov jle hlt xchg push (bad) je and xor (bad) lahf push cs mov push sub pop pop add jg test adc jp (bad) xrelease ljmp lahf push jl dec mov mov js add popf test pop test dec push pop jb mov cmp jmp (bad) xor mov xchg xchg mov sbb test rcrl (bad) ja daa repnz ret leave mov in movsl fistl lret push adc ficoml xor repnz pop jb jp mov mov cmp push cltd mov popa add sub fstl (bad) mov sbb jp jns xlat push shl das popf add pop sti insl fnsave xlat xor xor adc sub cmp lcall push pop jbe add sbb aad int3 sbb pushf inc sub lods lret sarl adc shr cwtl enter movsl cmp test popf add inc rclb sbb shl inc loop sar out js pushf push mov mov push push xor stc push push add into xor cmp imul xchg mov add xchg mov jge and leave rcll out push dec dec mov mov lcall mov add xchg int dec mov ret fldt int jmp and pop xchg xchg imul jle xchg and movsb xor xchg inc mov and data16 ljmp mov sbb ret cltd mov pop in jo xchg xor xchg xchg stc push out test les push (bad) xor movsl pop shll cmpl ljmp imul xor repz mov aad cmpsb enter rcrl or lahf mov test repz ds mov dec push add dec jecxz flds pop mov dec mov add and dec adc jge pop xchg jecxz ret shlb fwait rclb add xchg insb cmp and call cwtl loop or mov ljmp xor sbb xor or inc outsb and ja xchg lea cmpsb fsubrl or not cmpl push pop cltd jbe xchg movsl jp jno sbb mov mov jb lahf subl in jmp jmp test push push adc ficomp ss and (bad) cltd adc sub mov xor lock jne cmp mov clc sub cli jbe jge xor stos jbe add sub data16 in push scas pop add xor sbb push adc jp cmp nop cwtl in test stc imul mov pushf sahf adc ja in jns inc jmp and xchg pop xchg cmpsl in inc in mov call int3 pop ss mov xchg fwait in add mov sbb stc or psubusw aaa stos lahf mov inc dec dec imul cltd repnz jo int3 jp mov push mov mov xchg xchg fwait cmc shrb pushf sub mov shrl jle and sub jnp imul mov lock and mov mov les jmp inc xchg jmp and cli sub lcall inc push (bad) rorb xchg sub and out shrl ss or mov pop sbb clc outsb mov fcomps or iret shl insb imul inc or push incl fwait lods in loope push int sbb add push cld cs sub fucomip jns outsl (bad) cmp es iret into sbb lret sbb negb dec dec mov mov fmuls or pusha jb loope aaa cmp out loopne test mov inc in jge in dec mov and mov xor rorb bound xchg pushf addr16 aaa add sub pop mov mov pop sbb lea lods loope and imul inc dec cmp sbb pop mov inc (bad) repnz cmp aam leave fcmovb and adc (bad) in insl xor lahf xor ret pop repz pushf out mov lods loop iret lock jo inc shlb shrl pop shrb out subl gs mov cli lods fwait inc xchg pop jns jae push jb mov mov rclb push daa and adc aam es mov aas movl sub mov cmp orl adc fisubr jbe andl cwtd pop xor cmp shll push lret (bad) xor jne lds daa xor imul rclb push nopl rcrl bound stos and xor cmc sub loopne jb or out lea fistp pop xchg mov test outsb sub jne das lret sbb xor std outsl es movsl out mulb xchg push cld jbe into lds adc inc imul lcall jno dec adc popf call ja jl xchg clc mov bnd sub repz sbb or aas xor lahf push dec out hlt mov ret sar cmpsb data16 inc add dec aaa mov xchg or out das push into (bad) dec or pop loope mov hlt or and dec mov out int cltd inc aad das xchg mov mov inc pop lods pop inc or sbbl push pop test pop mov stc sbb mov fildll pop pop push into mov jnp aas pushf dec mov xchg dec lods cmpsl push cmp loope jl in push push mov (bad) or ret paddusw shrl out iret scas ljmp fdivr lcall sti cmp movntq cmp add out add stos pop xor jne bound cs jge ds mov adc xchg xor sub addr16 inc xchg xchg daa mov es inc in (bad) and fldcw sbb mov aam nop dec sub iret sbb or popf in (bad) jbe add (bad) incl test jmp cmp adcl adc subl dec sub jns sahf sar (bad) fs (bad) into xchg xor ljmp mov push add inc sbb daa cld movsb es or inc push and jge jge bound mov push ljmp sti (bad) mov mov out sar aas stos sub sub sti and mov jp sub pop stos pop push sar loop aas ds mov add out push cmc es es mov out or loop dec pop jno sbb sub lret pop nop add insl cmp or aam lcall cmp inc andl popf mov aad pop mov dec aam insb lret icebp mov mov xchg addr16 (bad) push dec aaa mov out mov lea pop xor mov mov test xor inc jmp aad hlt jne outsb push jmp mov mov dec add fcomps pop jno dec movl mov stos daa ds fist in out xchg lret jp pop adc pop xchg (bad) sbb ljmp cmp mov std rcl push das jbe jo xor sbb adc rorb and nop clc test mov int mov and mov cmp sub mov inc out jle jb and jl mov jle mov sub lea and leave ljmp mov push mov pop imul inc outsb push adc cmp in add jae inc xor (bad) les sbb xor enter adc popf adc dec comiss jo sti inc pop aad add mov or (bad) das pushl popf mov inc jne fwait popa pusha cmpsb add (bad) aas orl mov ss pusha push shll js scas (bad) pop stos stos in (bad) aaa push xchg adc jmp cmp fwait sub sbb (bad) popa push lret nop lcall shrb cmp lcall das add mov inc inc insb and add sarb gs dec daa sub (bad) insl arpl xlat jmp and or insl (bad) mov dec ja mov movsl jb mov mov mov jg movsb nop mov into test cld mov icebp push rorl push lock in test jmp aam js imul add inc sti (bad) xor loopne in push cwtl cmc dec jmp arpl scas mov jmp fistpl sub out xchg sub sub repnz push sbb push sti addb xchg clc push cltd pop cmp cmpl aad scas cmp push sete sti push fisubl and sbb test mov lret push in or jge lret mov add in or xor fs cli xor in test dec (bad) out mov jge jl jmp mov xchg in inc jle in add cmp ds fbld out lock ja inc scas cmp arpl push adc mov pusha shlb andl mov outsb jecxz pop inc mov ret pop cmp gs xchg mov rclb push into stos xchg push dec jae pop sbb mov inc lcall loope mov sbb mov aam cli jno (bad) pop test pop cmpsl pop imull loopne pop xchg shlb pop jmp stos lahf imul dec sbb sub mov movsl dec ja lahf enter jae cmp test sbb mov xchg adc in add ret out int repz cld lcall cmp pop mov mov mov add jne mov (bad) std push mov mov xor or jp xor mov jge push add lahf sub xchg js and adc mov lds push jmp adc movsb cmpsl fsubs js mov lods cltd mov xchg jae addl dec addl repz sbb pop mov cmpsb fist push jmp je,pt jge (bad) mov je xor push sub cmc test xchg (bad) push stc dec and xchg lahf idivb sub or add push jbe lcall in inc rdtsc (bad) or pop test and mov es lods es or sbb inc lea fmul test gs les cmp push sbb lds imul (bad) mov push cwtl or adc icebp and lds (bad) mov imul fidivl lods fld out jno out ds or sbb add insl xchg (bad) sub dec sahf push call ret stos xor add xor mov and lods inc or inc xchg addr16 in mov jnp xchg sbb in pop sti ljmp xchg xor (bad) out pop mov mov adc xchg sub test lods add mov jmp adc test xchg ror push push mov xor pop lea sbb push test mov (bad) jns pop lret mov pushf jae or cwtl (bad) jnp cmpsl (bad) cmp into mov jb imul jl or lods add gs xchg lods inc sub popa movsb imul xor or or ja dec int mov xchg cmc inc data16 mov fdivrs adc sub daa sub dec sar mov jmp shlb fldcw adc (bad) insb rcll adc mov popf enter int adc add inc jmp xchg inc mov divl jbe push mov sub mov dec movsl js mov sbb les dec (bad) ret aam sbb aaa (bad) and out jo sub inc add pop mov add push inc mov call icebp pop sahf and sbb mov inc lahf idivb test std insl mov mov add ret pop (bad) xor test bound movlps out push jne jge mov or or inc sub mov push idiv xchg xor repnz dec pop sub jg xor mov (bad) adc mov push pop cli ret pop pop fdivl testl push shlb mov mov imul cmp pusha cwtl loopne das push pop ljmp mov jmp (bad) ror clc add sbb inc out xor jge xchg icebp lret xchg xor mov dec data16 std clc (bad) ds dec (bad) vpaddd iret imul dec xorl mov push push push and pop sbb jecxz icebp mov add sbb cli xchg in les mov cmp mov out push call shrl cmp sub je fistpl imul pop andnps pop sbb add dec jle add cmp push xor mov cwtl jnp dec dec dec push xlat or nop sbb xor icebp mov cli (bad) jle dec imul jl xchg shrl xor mov mulb mov aam popl out (bad) cmp fdivl xor mov arpl fcmovnu push cld adc ljmp shrl repz int3 test xchg add or outsb and push fiaddl lods fwait cli sub loopne stos cmpsb mov or and mov in push dec cmp pop and fisubrl (bad) sahf lret cli (bad) fbld cs movsl scas lahf lock add dec mov icebp mov pop push loopne xchg movsb mov push or push fistl in enter push cmp leave sub lret mov and aas pushf into jno add stos inc enter es cmpsb xor pop inc jmp inc and call ljmp mov mov out or ret test add mov loope sub clc rorl and mov push test jnp aaa mov out adc ja jl dec sub sub xor out mov test cmp in pop xchg and mov sarl test stos sub pop mov xor inc ret insl insb add shlb ds xchg jle aam pop push adc fild das popa icebp push imul and leave test pop in add push mov and mov movsb add roll icebp inc adc xchg mov aaa fstl fidivl and mov and mov arpl in push mov push lcall dec dec dec mov xor cmpsb pop addr16 or je push sarb mov sub xor jo ss add pop fcoms pop sub xchg out (bad) iret push add sbb ja xchg inc mov jo cmc dec lret fsubp sar cltd rcr mov sarb sbb test add adc ficompl enter or cwtl xchg pop and jg push aam push arpl push jecxz push sub and xor mov addl adc or jg mov sub jae je pop adc dec aaa mov pop or sbb push mov cmpsl sbb (bad) rclb arpl enter inc fiadd ss das mov loop sbb cld cmpsl je ret fwait mov clc mov and gs jle cs push call and sahf xor or adc mov lret mov xchg mov mov mov pop add out add stc push rorb enter lret mov mov in test pop repnz dec sbb loope lock scas pusha into xchg xlat lods inc imul dec jp push mov je pushf pop lods daa ficompl jne or mov xchg mov cs dec pusha int3 sub es or xorb fldt mov cld rorb imul lahf aaa scas fmulp loope dec dec jge or daa fldcw mov in pop or inc dec mov or mov pop xor push (bad) push cmp fisubrl mov test push push lcall cmp notl aaa cld adc adc cmp pusha dec cltd cwtl push sub inc adc test adc loop hlt adc xchg repnz pusha xor and clc push test out jbe sti or fwait mov pop mov fnstcw jle dec leave jae ss lahf (bad) xchg leave or pop pop (bad) mov jle lahf rcrl call mov daa inc pop pop ljmp push scas inc loopne add push add ret sbb imul mov test stos inc xchg inc jnp xchg cmpsb (bad) out lds shlb in push pop push lods and les in pop or dec ret imul push xchg and dec (bad) out adc lock mov push repnz inc in movsl inc (bad) movb aas adc add cmp hlt js jno sbb xchg int3 jp bt push pop cwtl jmp sub mov cltd push push (bad) dec sub repnz in mov sbb cmp loopne pusha loope xor dec xor mov jl xor adc clc push js ds sbb sub test jae popa arpl leave xchg es jae lahf jno or imul fcoms decl or push loop cmp (bad) xchg enter or jns repz add insb mov lea iret test lahf (bad) mov scas cli mov fimul or ficoml test sahf jae shll cmp cmp mov push pop inc sbb sbb addr16 dec fsin mov ja push or or pop int3 mov (bad) (bad) push and aas (bad) or pop es cmp sub mov mov pop divb sbb push jg lods cmp and lock push aaa out mov outsb xchg or xor jecxz rclb inc xchg ja outsl (bad) ja adc pop sbb pop ror aaa rorl sbb dec mov divl lcall adc icebp repz loopne push in jmp and sbb push aam pop fisubr xor mov shr notb sar insl aad fisttpll fdivrs out mov test sahf (bad) daa ret clc cmp mov sub nop gs fsubs mov add inc push mov orl in inc cltd push or push stos hlt pop jp movsl dec les adc adc cmpsl call sbb outsb sbb jo sbb push outsb jae in and icebp pop lock dec mov push lahf lds mov cmpsl pop xor rol mov push ljmp push cwtl sbb cmp imul fstpl xor mov push cmc mov jecxz add ret (bad) sbb loopne in push and add jns lods arpl pop xchg xor push xor sbb scas jb in mov insb adc aas popf xchg or push add or das movsb jle pop ret out push ret mov outsb dec add inc mov imul push ss inc (bad) aaa (bad) cmp ja pop dec pop cmpl sbb fcomps pop loop add sbb mov jle add xchg pop repnz cmpb push push cwtl fnsave lea dec or scas adc aam or lahf outsb stos pusha rcl pop jbe fisubl in dec in shl sbb add out inc out adc outsl ret icebp xchg pop xchg loope mov sbb lods jae jo ret ljmp pushf mov dec mov pushf stc ds add scas shll int fwait push loopne dec cmp das jnp aam mov iretw movsl adc into and xchg into pop mov pop push mov (bad) inc hlt fs pop cmp lret ficompl stc mov sbb push inc dec mov in mov sub popa sub (bad) rcl xchg mov inc sub jo (bad) lcall jno aas mov mov scas iret addr16 and mov icebp inc (bad) mov push mov into sub xchg xor push dec test sbb fldcw cmp push mov mov in pop cmp stos dec pop test jmp or arpl cmp movsb xchg insb or cmc cmp dec (bad) outsb int3 push mov xchg and jp sbb pop jecxz sahf repz add scas dec aas push fisubl stos movsl (bad) leave push cmc push push xlat or ret test (bad) hlt repz pop xor push cs loopne or mov nop jl push ss ljmp inc inc xor jnp xor loopne into insb push push test imul bound dec (bad) mov inc lret inc dec xchg mov (bad) cmp jae fldcw dec sub push and lret cs mov scas icebp jle jne or and dec pop mov jge inc push and mov insl cwtl push and and jecxz add loopne push push lea icebp aad cld pop cli sub cmp sub sub iret cmp js lods sbb push dec mov xchg loop jns jns adc movsb dec mov sbb add pushl adc sub into pushf (bad) or imul mov jb dec popf cmp or (bad) sbb sub xor jp jbe mov dec and push sbb adc pusha pushl jns lea jbe cmc push lret aam mov xchg (bad) (bad) xlat outsl out adc adc mov xlat scas push sahf imul pop mov scas or lahf inc out movsb adc push lcall or clc xchg dec cmp lock test push mov xor fadds and stos add cmp imul jmp aad int3 and lods mov xor pop inc fisubr imul xor xchg mov and es into push js push std inc jecxz pop gs xlat mov call insl idivl jb lahf test adc sbb add das sti xchg out xor dec mov pop mov mov pop lret nop xor push adcl xchg dec int insb push mov xchg jns in jl es icebp test xor lods addl mov fisttp imul mov push lock repnz push js mov cli push std cltd fbstp loopne add movsl mov adc ret adc inc loope mov push fldz repnz push outsb lock lods lcall (bad) out rolb fwait mov fcoms dec push in popa insl dec adc scas xchg pushf inc aad pop push and js lock and sti aaa (bad) sti mov mov pop int3 fbstp movsb pop pop and xchg adc add inc lret add shr and vcmpsd sbb add mov push out aaa (bad) inc stos gs loop das scas imul sbb popa sarl add cmp dec xchg lods cmp jbe popa pop pop dec mov popf test cwtl jae inc insb jecxz stos arpl push mov mov shr sti xor mov pop or sbb cmpsb ret rcll cmp adc nop dec fisttpl test add cmp jge mov cmc mov mov xchg add dec mov adc aaa inc vpmaxud bound notl scas adc cli bound scas or sub leave ficomp arpl mov enter addr16 mov add ret add jns or lret je lods sub jmp or xchg (bad) dec mov lret dec add out (bad) repz mov mov and adc insl (bad) loopne pop push das int3 sar les in xor (bad) adc sub daa (bad) call into xchg sub push xchg imul scas mov or push notb jns adc dec test xchg call mov pop jle call sahf and (bad) pushf repz push xor push cmp jb sbb xchg push mov push cmp in repnz aad (bad) popa push sbb mov lds add (bad) mov mov inc insl jnp xchg push dec std push mov mov mov pop lock into adc push outsb pop dec lods pop push lahf pop aaa fnsave decl decb inc inc mov out aas imul xchg lods lahf xchg jle int jne sub std inc (bad) out push mov popf pusha jge (bad) cwtl cld mov lcall out ss mov xchg jae dec sbb (bad) dec das push push addr16 inc dec inc repz cmpsb mov mov int3 dec frstor sarl inc xor insb mov fisubr add xchg add in sub stos and pop pop sub cmpl fs (bad) (bad) cs and mov mov ror into mov cmp jno dec fwait imul aaa cmpsb daa xor jl rcrb and and rcr push (bad) test jmp fldt sbb sub enter js push push pushf hlt sub pusha (bad) mov sub push out mov jp je xchg test stc sbb xchg xor int je (bad) mov ret mov orl push cmp pusha mov (bad) cmp dec mov test dec jo xor add jnp dec inc mov pop cmp jg data16 jle dec sub mov mov xor fdivrs mov shrb pop fcmovnu adc aas inc leave add push ds shrl out inc adc mov xchg cmpl mov xchg orl mov je in loope orl mov and adc popf aas mov std adc (bad) inc addr16 xchg aam pop cmc notb xchg jp lea insb or lret lods push sbb cmp into pop pop or shrw mov pop repz inc lods mov nop cs mov mov mov dec or daa inc jl xchg xlat bound inc pop adc xor ret jl,pn cmp sub je mov xchg pop sarb mov dec arpl int pop cltd xor stos scas adc jp stc pusha sbb pop mov je scas fdivl lods push lea aaa push push lods pavgb sub xor xchg jecxz addl scas pop and loopew jnp ret jo cmpsb jnp mov push sub push cmpb xor (bad) mov pop mov push add fdivrl pusha cmp daa daa mov jo fidivl sbb ret lds xchg jg shrb cmp leave cmp lods sub lods push and push dec ret ret and xor sar add jnp xchg jo jmp test pop int testb add inc xor push in fs mov or int push test inc xchg rcl data16 sub dec gs inc popf inc jle xor cmp xor jne out je iret mov mov js push adc jp push movsb add imul shrl add push adc or repz aaa mov add sahf push scas jge rorl lret cltd popf push xchg cs sub cmp aas push in pop mov out in xor push lods pop jecxz jecxz and in xlat mov je cld cmp scas mov es (bad) mov mov fcmove xlat mov enter imul popa fwait jno fstps inc leave lock fnsave push dec inc daa fwait jo jnp movsb lret xchg faddl pop cmpb into mov mov fcmovb xor dec pop add icebp test add adc pop xchg mov jecxz js dec mov adcl mov dec ja xchg int3 jae jns or into (bad) mov dec mov notl mov dec and icebp ljmp mov pop adc test jns or push or inc or aaa imul pop pop repz dec xor jmp scas dec inc in scas sbb stos (bad) cli push mov ds outsl aas adc in mov inc push dec test addr16 lods push dec (bad) fisttpll sub rol cmp xchg leave ficoml or push pop jmp mov int xchg enter adc push ret pop daa jmp cmp rcrb mov xor jle xchg fiaddl inc cmp out loopne xor adc lcall xchg jecxz sbb mov mov addl insl sbb xor jns in addr16 cmp sbb mov ljmp ret mov std call adc pop int fwait dec jmp and ja xor hlt push mov ftst sahf sub xor mov dec adc xchg mov sub or out push lcall add inc inc lods loope clc mov pop out push aad pop mov cmp mov les push mov outsl or xor xchg sbb outsb adc daa add bound pop movsl inc and popa ret (bad) sub test mov test in dec data16 (bad) mov push dec sbb repz mov aas movl xor aam push cmpsl shll push adc xchg inc jmp and mov xchg inc iret lahf out faddl (bad) jmp pop (bad) xchg jno jae jbe test jbe xchg pusha inc xchg cmp lret xchg addr16 repnz mov cmp addr16 cli dec cmpsl or pop or push iret jno cld inc sub roll pop dec dec push sub inc cmpsl adc insl adc fcomps jb js cmp xchg out mov xor (bad) aaa add jno xlat (bad) xchg movsb iret dec and lfs rcll sti adc loopne mov xor adc push mov fmuls sub push push stos inc cld xchg ds ja imul or nop jp nop sahf jbe mov ds pop iret outsl andl pop pop and adc bound jbe push sub fdivrs das jp or xor push fnstsw into mov inc and dec sub (bad) loopne sub mov imul das mov cmp adc and adc dec sbb lahf adc adc jne inc sahf xor (bad) ss (bad) fnstcw push imul adc inc aam lahf cmpsb insb into mov mov add mov pop pop add roll test push and scas scas xor int cmpsl dec adc mov fnstenv ds cmp xchg and add inc mov mov cmovg insb or into and aaa fdivrl mov pop push or push fisubr fs mov decl (bad) add std fnstcw push cmpsl xchg mov sbb sbb or out jb arpl inc das fidivr insb imul mov roll or (bad) jmp mov adc imul ss add and xchg imul mov jmp jecxz adc loopne and in cmp or add sub jns dec dec jl or mov mov push je pushf mov cmp jmp cs add mov mov mov ficompl sahf cmp outsb dec push mov inc jecxz clc push jge push mov dec jp lahf movsl add movsl std mov lock int cmp in jno paddq arpl dec xlat adc test add cmp (bad) fild lods hlt (bad) push jbe loop and cmp add adc lds imul inc addr16 jg andl mov (bad) jbe mov mov push mov loopne sub sub xchg aam add pusha adc adc subl jnp enter adc out inc sti shlb outsl mov in cmpsl (bad) into push sti je pop insb aaa rclb in cwtl jp lret loopne cmp and incb mov stc xchg pop lret mov mov aaa xor loope dec xchg insl enter mov lea mov adc imul call cmp cs pushf aad stc sahf stos mov jmp pop (bad) jg stos mull sub cltd fsts dec iret sub cmp xchg loopne sub sbb jo adcb jae ficompl mov std icebp jle mov lods sub push mov lcall mov repnz jecxz aas ds (bad) notl dec test jne cmpsl enter (bad) xchg pop cmpsl jb movsl andl cmpsb int3 je mov clc int and das mov xor dec jl mov loop pop lahf int scas fildll inc inc mov popf jae xchg cmp mov lods xchg pop test int cmpsl xor push lods or es fmuls out mov iret cld xor lcall (bad) mov fs cmp jg dec jge cmp mov jg int lcall insb mov imul dec xor in and mov jno push (bad) jno xor inc jmp mov cs fcompl mov (bad) stc dec sti lcall and cmp push repnz jns cmp mov nop out popf fs mov arpl xchg cwtl scas repnz nop jae aas lods ljmp push sbb and jp or jne repz test sti add and sarb and popa sahf xlat test int3 adc xchg pop sub lahf scas ret in jmp outsl dec fild fwait sahf jae and imul jle sbb jno and (bad) repnz cwtl ficomp inc push stos lock lock repz jns jecxz rcrb sub fs cmpsl jge xchg repz test (bad) pop stos loope es lods pop (bad) jle out and dec mov adc gs (bad) adc jge push prefetchw inc fwait cld cmp push jns icebp adc sbb pop jcxz cwtl push mov pop dec cmp push popa sahf cmp pop cmpsl (bad) jno push aaa lods pop jge jmp aam (bad) jge,pt hlt call adc repz fwait das dec mov and dec push xor add dec mov (bad) cs test xchg mov adc negl push das sahf jmp andb test or (bad) mov clc fadds sbb push xor adc scas std xor push ror sysenter mov and mov es sub test jmp loope or jns push pop inc jg lds inc je es pop outsl jno or add imul xorl out and dec mov movsb mov jae (bad) mov and pushf mov push mov mov add (bad) or xchg cli hlt adc cmp push xor loopne mov push mov mov dec cmpsl jno cmp push inc xchg adc rcrl loopne lds icebp gs and and push scas inc mov xchg push fsubl pop mov xchg mov or das test mov pushf fiadd mull adc inc pop or xchg pop popl cli push sub xor call in aas jl xchg adc lret in fs insb popa jne fidiv mov xchg mov pop int xchg loop aam movsb leave add lods mov out icebp xor arpl aas in pop jecxz pop pcmpeqd mov aas lret mov and or push sub push insb int3 add inc mov and or ja stc push std js loop lcall popa push fnsave sbb and or aad into jmp and scas addr16 mov ds sbb jae add pushf dec xchg roll and int3 divb mov add sbb pusha jnp mov xchg add xchg (bad) lcall lcall iret inc add ss pop faddl in arpl jno fldenv xorl or fildll rcr inc aas jo (bad) sbb dec jecxz mov (bad) clc xchg jp (bad) mov ja ss dec popa xor xchg dec mov dec xor dec xchg and cmp (bad) mov push or push icebp mov or sbb inc pop cmp (bad) sbb dec pop push pop sub dec mov mov cmp popf mov subl sub in fwait mov mov arpl out iret dec mov jge mov mov sahf mov inc mov das enter mov test in stc mov aaa fwait cmp shrl mov mov loope repnz pop mov inc (bad) dec pop sarb cmp xchg mov jns pop pop push dec sub hlt rcrb shr insb add testl adc fbstp repnz mov test and sahf push and sub in in mov ds addr16 lahf loope,pt lret loop push mov cmp scas aad cs pop mov lcall fnstsw ret mov add adc xor loop arpl cwtl stc out out mov and fildll sbb rcll sbb mov inc sub je push adc stc out or out adc outsb mov int xor ret popf mov xchg push pop loop hlt inc xchg xchg sti dec (bad) cmovs dec sbb aad pop test xor jns adc pushf xchg sub cmp adc cs push imul sbb es sub sahf xor lods ret adc dec pushf sahf xor movl rorb repnz outsb daa scas cmp pop push ret jo (bad) pop jecxz mov dec fstpl cmp push mov inc dec das (bad) mov fistpll movsb cmpsl iret mov adc movsb into ret loope cmpsb dec imul adc pop ud2 outsl imul fisubrl cs pop cwtl notl icebp cltd lcall cwtl shrl push fdivrs out xor xchg jno in sub clc lcall pop mov fs and and adc cld jle pushf jne je xchg push cs sub fdivp mov clc cmpsb aas fisubrl int insl xchg mov mull mov out xor int3 dec fstp std (bad) mov test int3 shrb (bad) push dec (bad) test aad pushf add das (bad) and or sbb jae or jmp jno loopne lret out ret mov pop arpl stos push outsb lcall out push sbb insl pop loope xor loope in (bad) in jo jmp fnop dec inc inc std xor bound sarl push cmp mov add (bad) fs out std nop aam inc pop insl int3 sbb xchg mov call or in mov inc fbstp pop in mov dec in cmp mov mov xchg mov mov adc inc fsubrl jns push outsb xchg adc sbb call jns ret subb imul or movsb push test test cmp (bad) mov dec sub cwtl add scas mov fildl movsb (bad) jo ja xor repnz and pop add mov (bad) jg addr16 inc xor jo rcll insb test popf jbe and cmp sub sub js mov iret mov xchg pop fsubs or aam adc push pop mov sbb pop mov (bad) divl mov and xor rorl add dec cmc test lds roll xchg lret or or add scas mov out push fistpl pop pop shrb outsb jle pop mov rcl ljmp scas jne movsl mov sub mov inc rcrb push icebp clc inc and inc mov popf (bad) pop jge add xchg fdivrs xchg pop xor stc scas sub addr16 fisubr mov jns adc je test fcmovne jno pop sahf sub xchg xchg xor popf mov cmpsl imul aam add ljmp test outsl lods out jge fcmovb sahf push in ret imul mov inc pusha pushf (bad) imul mov (bad) icebp ret cmpsb scas xor xor fcoml in icebp nop cwtl ret in outsl mov in sbb (bad) in in jns iret mov out pop rcl enter rclb sbb cmp jle (bad) xchg in mov sbb mov test push popl addr16 cli addr16 lods pop clc jns icebp add out jns mov shrb je or sahf setbe out mov adc popf add sbbb sub dec mov int3 fisubr pushw fwait adc js jns cli in aad (bad) int repz lret or cmpsl pusha loopne push mov daa test xchg jnp das test xchg lea fidivl popa cmpsl mov in fcoms mov pop and into dec lcall xlat insl cmp out add les and aaa xchg stos ret mov mov (bad) mov inc and mov (bad) pop and push negb jmp iret mov jnp and cld pop gs and add sbb stos icebp call pop jl (bad) aas pop sahf mov in jae sbb aaa lret and call ds (bad) cwtl adc loop (bad) cli sar mov inc movsb dec sbb repnz push fsts mov sbb fmuls mov fist mov out adc bound xchg mov add and fnstenv xchg mov jns test imul cmp movsl sub or and mov xchg jb xchg (bad) movsb imul aaa in (bad) adc adc hlt ja cmpl mov mov (bad) out into mov add jb cmp cmp push and out stos push imul xlat sbb es test cli arpl pop xchg dec push jp sbb mov xor fiadd lods inc aad shrl es lret inc jno mov out xor in push adc adc sbb (bad) adc popf mov mov mov pop addr16 pop xchg mov pushf mov loop inc data16 fisub cmp out clc dec inc sbb xchg xor and enter into cmc pop mov push mov je jb add aam arpl push pop nop pusha (bad) hlt mov hlt dec fwait sub or inc jae or popf sbb shll jle insb cwtl jle cli inc test or mov in in mov cltd pop je insb sub imul nop pop cmp mov inc push in rep mov clc xchg test mov dec sahf or ja (bad) movsb cmp adc dec fimul xchg fiadd rorl pop aas fsubrl frndint ljmp cmp xchg mov test lods (bad) iret cmp imul leave jo sub mov sbb mov jp (bad) push mov pop cmpsl mov dec mov rcrb addr16 jno xchg sbb call aaa fucomp cmpl movsb push std jg scas andl xor push sbb popf les dec nop mov loope dec mov xor test lds out test ss jb push push test das hlt scas ljmp mov xor mov pop xchg mov in sub pop fs or pop test mov inc stc inc xchg sub icebp stos imul rcrl and shll popf fucomip fwait xchg aaa andb add imul add daa nop dec repz cmpsb cmp sbb sbb ljmp jno inc sub inc push xor ja push adc test mov fnsave xchg jne movsb mov dec push dec in sbb push inc in test pop mov or mov enter int jnp adc into and cli int3 dec das fidivrl gs fisubrl pushf xchg cmc and cmp lret aad sub jnp cmc jno pop xchg adc xor pop aaa xchg push sbb xor dec xlat fistpll push jb shrl fucomp insl pop add fildll cmpsl xor xor cmp mov test adc push in ljmp (bad) mov or pop and xlat sbbl ja mov imul lret (bad) ja xor cwtl mov nop sarl outsb es push sbb mov inc mov aaa ret mov pop mov sub mov jl addr16 jnp les or (bad) mov repnz pop mov out int and jnp push xchg js sbb (bad) ja enter aaa push int3 push sub mov ljmp lret mov sbb lods and movsb sarb mov mov popa sbb xor lcall (bad) jb inc and mov imul xchg mov push insl xchg leave mov hlt pop dec pushf ret mov xchg (bad) mov pop dec mov add cmp xor adc insb sbb rcll icebp xor jge sbb xchg or push cwtl pop ret std inc iret sarl mov or inc aas cs hlt test int3 jle mull or adc data16 cwtl orl jbe scas cmp push add sub ja fisttpl cmp arpl lret movsl sbb inc gs cmp shll mov push incb loopne scas arpl cltd pusha inc dec push lock jle inc (bad) push call iret (bad) in lcall sub lds (bad) dec mov out sbb fiaddl leave add xchg rorl lret lret sub test dec stos sbb test xchg mov cmp lea xlat pop ret scas mov lahf popf and ds sahf ret cmp cld aaa les jge hlt dec xchg push adc out sub iret jg in ljmp cwtl stc jbe outsb fs pop pop xor lock aam in push mov mov xchg push inc aad xor in jnp std movsb sbb push hlt sarl and sbb int xor mov mov insl dec repnz ficomp addl push mov sahf inc dec mov fimul pop imul notb jge jb addb jnp js or mov mov pusha lods mov push fsubrp xlat xchg int3 and dec cld clc sbb push mov push add cmp jl fistp jne sti mov jecxz std and aam cmpsl mov sbb ror sbb dec test push push or pop jnp aam adc jge loope lock jle ja fcoml sub mov lods mov jns and mov mov aad dec and ljmp std sbb lods mov data16 add sbb xor in adc loopne pop inc sbb push decl pop idivb std jg daa enter sbb adc sub pop xchg test mov lret insl cmpsl and dec add jb rol inc lahf and mov loop jbe xchg rolb popa or push mov out cmp into mov les pop xor repnz cld jmp mov push jne scas push add dec jp cmp pop fsubrp clc add into lds addl test inc scas add mov cld mov jb or xor xor in jg std and jecxz mov out mov adc mov mov icebp or mov cpuid (bad) loope mov out jno lcall into in fiaddl fsubp lods cld cmp sub dec (bad) shl xlat vpunpckhbw add inc std cmp adc sub sbb xchg lcall adcl nop fs adc out pop or adc aam lcall sub je lea or in js xor stos sbb call or into and std loope push pop rol jl mov mov cwtl in or insl cs daa nop inc pop mov mov mov mov insl push mov aas imul fdivl jle fstps sbb jbe (bad) add in roll and jnp clc hlt ds aam fwait pop dec mov pop (bad) test mov loop cmc push pop push in xchg adc jecxz jns stos int3 rorb push sub loope xchg int bound hlt xchg lahf cmp enter fcomp sbb ret (bad) sbb xor inc mov xchg dec in popa xchg mov icebp imul hlt or loop lcall cmpsb inc adc loope insl fild mov or adc into sar xor daa pop mov sbb mov or ret sbb icebp sarb jnp unpckhps jl push (bad) orl adc outsl jmp push lods (bad) insb enter or push and mov adc adc mov (bad) mov push push fs pop leave aas int ja jmp (bad) ret xor enter dec mov lods sbb es pop cld jnp icebp xchg test sahf mov mov sub adc lds push insl xor adc pop mov mov mov les push cmpsb mov outsb inc arpl rcrb int dec dec mov aad lea ret push arpl xchg ljmp cs daa mov mov adc ficomp insl push push fistpl lods mov xor push mov mov jle and adc inc sbb push lret add lret adc shrb pop push rclb xlat sbb (bad) imul nop data16 xlat aad subl outsl scas or sbb mov pop push sarl mov frstor jge push out rcll lea sbb add xchg lods mov bound mov scas fwait aas mov inc mov mov jnp insb inc es mov movsl jmp ds jmp lods inc push (bad) inc pusha add jns rcrb (bad) dec dec mov (bad) arpl pop dec adc cmpb xor repz sub roll jle add mov lods rcll test adc sbb popa sbb push mov mov iret push das add aas scas dec mov int test xchg and fs fildll out cld jg and mov out fwait mov push jmp push or push mov (bad) xlat daa loopne int3 push mov cld jle cli jcxz push adc test adc jecxz out sti and rcrl lcall std ds ljmp out push xor loopne mov sub insl dec test add jg ljmp sahf pop roll mov roll cltd arpl cltd icebp loop xor test aaa jns mov popa xlat (bad) orl push mov clc in (bad) pop sub cmp inc ret mov in mov jle test popa loopne push std or ffree jne push add or or sti repz test dec mov cmp test outsl into sarl push mov (bad) jne lret push incl pop (bad) cmp xor adc lret repnz pushf daa loopne stc pop in (bad) dec xchg das mov mov sbb negb daa fdivrp popf mov adc push pop cmpsl xchg outsl ss cltd dec dec mov in jge jo stos lahf pop lea cmp loopne push pop and mov es mov dec popa out jns mov loopne (bad) and in das push sbb mov or cwtl fwait movsb inc aad inc clc popa dec xor out xchg rcll adc jne cmp jl into fwait nop xchg xorb and in adc lods adc mov addr16 test cmp nop lret daa dec stc cli mov (bad) xor lcall mov mov adc stc imul lods adc outsb sbb adc enter or dec cmp call dec aas enter lods incb movsl mov adc dec mov push lds push mov push sub (bad) xor imul and jbe gs jg inc aam cld stos test cmp mov ficoml lret sub arpl add mov xor lret ds ficomp xor loop dec jbe xchg inc loop hlt cmpsl (bad) jns cmp fidivrl xchg push cli xor adc sub enter (bad) mov repz dec scas scas enter add jbe nop (bad) std cmp mov and inc push or xor mov and mov inc or fbstp mov imul cmp (bad) (bad) loope mov xchg iret inc cmp fs push jmp loope sahf in test rcll loop mov inc aas pop sbb sub sub jns dec add je mov rcr faddl xchg pop inc insb cs mov dec leave pusha fsts fbstp or xchg std push loop and ret gs xor lret mov pop aam into adc xor les lods ret mov test cmpl lods push ja aas sub imul sub push popf xchg dec mov push add cmpl pop fs repz mov inc rcrb insl rcrb stos lods sbb ficom addl push or mov mov adc mov pop mov ret (bad) mov movsb data16 jg push sbb jo add clc xor mov mov movl xchg lds gs mov mov out xchg cli and mov sbb rorb es pushf lea jo pop mov push push ljmp and cmp stc stos call pop fadds cmc cmp cs jae js mov insl lea aam in xchg int3 idivb jns dec fcmovu or lcall and (bad) mov sub inc loopne nop inc mov push jno call mov scas nop std or mov stc push adc das (bad) sbb aas (bad) out mov jb dec lods mov or cmp push pop pop popa scas mov pop xlat pop sbbl push fildl pop add push sbb adc sub cmp mov dec fsubrl in lock jnp out add xchg imul mov mov subl adc (bad) cmp call decl mov or pop daa lods mov sbb sub and mov arpl fistl jg mov sti movsb add popa xor cmp fistl ljmp mov dec xor loope test (bad) sub jnp push pop stos daa add leave add or clc stos sbb dec mov pop imul mov or cmp loop scas dec adc out and (bad) mov push mov dec and repz cmp (bad) jbe adc xchg lock and cld jno aam cmp aaa mov icebp fcompl mov sti mov adc add or cmc adc inc or mov popf pop aad jge int3 mov add pusha jp mov xor jl es popa cmp mov nop mov cmp lret repnz int mov out xlat mov sub fwait push les inc push xchg nop aas (bad) cmc fcomp bound loope sub lret dec in cwtl xor dec xchg sub outsb xor cmp (bad) mov sub xlat imul adc (bad) push sahf ljmp and ljmp fwait jecxz inc ja fistl sub mov push in pop ss sbb or jo leave push dec jecxz xchg adc cmp sbb mov in xor mov (bad) xchg push mov mov repnz jae aad mov fimull cs scas pop pop lahf sbb fwait adc scas in mov (bad) or mov les push cld sbb mov inc outsl cltd push mov push in daa pop xlat fimull ss outsb rorl cmpsl pop fldl and cmp or inc test mov jle mov adcb mov inc sbb pop adc outsl fwait test mul sti and jg dec popa jbe jg add push mov push cmpsb or xchg loopne aas push mov pushf ret loopne aad pop dec jge or fwait jg ja,pn jne lods shlb sbb (bad) leave dec xor sub adc mov jno mov sub adc popf test push lcall popf in insl pop cld cmp push pop sti lahf xchg fs ret aaa xchg enter fnstcw mov in nop es fcmovne push mov out loope mov (bad) dec out mov ljmp mov lods sbb xchg adc or sub mov lret jb mov add mov insl or pop addr16 mov add mov out cltd xchg (bad) mov rorb in jnp mov push xchg ljmp xor decl test jmp add lcall ss mov in jl test sub sahf mov xchg cmp pop pushl push mov cmp in cmp add and sar outsb pusha rolb cwtl sub int pop ss xchg bnd hlt xchg inc mov jne loopne push jnp add imul or mov (bad) jmp sahf dec pop bound cmp mov loope (bad) add std dec jne cmp jns imul (bad) add loope aad rol jno xor jns sbb pop jmp adc (bad) xchg and push mov jmp sub inc push leave pop push sbb lahf jnp sbb pop adc aad addr16 insl sub pop scas sub inc fxch addr16 das pop aam or push sbb cmpb aaa cltd inc xlat pop mov stc aad mov push lds test (bad) out mov and int dec pop fwait sarb and push xchg xchg (bad) sbb pop adc aam add sbb add cmp mov inc sbb (bad) push flds bound add and scas push and scas push and aaa outsb pusha subl decb insb fisubl imul int ficomp adc cwtl add cmp (bad) add push xchg mov adc out scas shlb mov jmp push aad (bad) mov icebp ljmp insb js jle nop sar xlat add (bad) loope stos sub aas les arpl insl cmp aaa lods inc pop add (bad) int3 sarl dec icebp (bad) sub iret inc jge cli add (bad) outsl or push iret push stos lret sbb ret lret test xchg mov mov add sub xchg movsl lret fidiv movsb mov loopne adc sbb fldt stc leave mov dec pop push vpunpcklbw gs mov and pop jge mov lret adc mull cltd mov mov sti jne enter jp cmp inc mov jp jl popa sub test jmp inc inc push ja,pt push or xlat pushf inc popf loopne push call jg mov cmpsl faddp mov lret mov jo cs push sahf pop fnstsw scas rcl icebp xchg in push ljmp mov xor mov inc push jbe mov sarb movsl repnz clc xchg out int3 mov int mov lret and jns xchg stos imul nop mov pop loop sub xchg fstpl das mov adc xchg inc xor add pop rcll add cltd (bad) addr16 sub sbb cmpsb jne pop inc pop arpl inc push pushf fdivs mov sub mov cmpsl aaa outsb push sub (bad) push pop subl loop push gs sbb jmp es push insb add je push rolb cmp xchg mov fstl mov test adc jmp push insl cli sbb sub dec mov and xchg push mov cli pop in mov scas lcall or out aas lods xor inc push movsl je pop sbb sbb jb inc data16 cltd (bad) ss testl mov cmp mov or mov push int sbb lret mov dec lea mov jl out inc jae push dec ljmp leave lcall scas add inc lock jbe xor cld jp or or jnp (bad) (bad) std inc ret loopne lock sbb stc mov inc or jb and inc (bad) sub rcrb sbb and xchg jecxz mov inc dec mov mov ja outsb fbstp mov add xor jnp in push push sub pop push cltd inc inc outsb mov scas mov lods pop push mov call test pop insb lret xchg in outsb test pushl inc mov xchg imul out pop inc xchg sub xchg in lock sub cmc mov jl and popa mov sub repnz adc ror push lahf inc sar fidivr sub insb les dec sti lods sub icebp test jp movsl or test lds daa rcrl xorl xor (bad) js mov push call js fcoml jg lahf push sbb aam adc xchg add sub push fisub pop sti fidivrl std iret je jmp imul (bad) mov lds pop sub (bad) cmp adc notb cmp test fwait cmc push mov xchg iret ret fadds movsb lcall enter cmp inc mov jecxz insb jae sarl insl xlat push add pop xor aas xchg lds sub lock adc pop hlt and fiaddl or xchg stos and mov dec xor mov pop push dec mov (bad) fs xlat pop and dec fidivr icebp fmuls fistl gs fnsave pop lahf in sti daa sbb xor fisttpll shl jno inc popf push sbb xor popf push sbb out mov fstps and cmp lahf (bad) loopne xchg cld fist sub cmp (bad) cmp divb and fmuls test jno test push push popa mov mov jbe repnz inc cltd shl lret push cmp mov ss xor aad pop inc mov cmpsl jp hlt xchg std inc push sub incb cld std fnstcw jbe xchg inc inc inc jb faddl nop repz jb fstps cmp fldt push inc push pop and subl jo fstps call cmp sub data16 nop sub fisttpl sbbl add pop insl mov mov out test clc and cli mov jns xor pop loopne (bad) outsl or jg sub pop stos mov pop dec and call cld fs sub add cs xlat mov js subb (bad) cmc pop or std push test mov xlat sbb xor mov push mov mov add dec mov std push stc or js sbb mov mov mov push ja sub out outsl inc jne xchg mov loop cmp push or aam xchg out mov outsl sub stc mov decl inc sbb xchg test adc xchg (bad) in enter fwait dec addr16 scas (bad) rcll lret push sbb inc jl outsl mov lret xor sarl fdiv sbb (bad) repnz rcll fild leave add mov jg cmp int dec push mov xor push add mov adc pop pop shr or call das pushf xchg or add (bad) jb inc xor pop adc sbb push cmp adc fsubrl (bad) xor inc jnp push and addb xchg sbb sub xor xor mov xorl push test rcrl (bad) mov fnstsw enter cmpsl jae push aas or std fisubrl lods into mov xchg xchg mov and fldl lea add mov cmpsb pop push pop ds scas (bad) je out movsb fstl ljmp scas shrb mull out sub stos in adc push aad push pop pop pop jne addl iret sub mov sbb push in and inc and in cltd mov jnp rorl out xchg aaa (bad) mov mov test push jmp mov jnp inc mov in jl sub stos push sti orb ds pop jg add push imul ja stc loop pop xchg push sub pop cli fdivrp fmul inc ljmp fimul add and movsl ss inc and inc push adc fsubs pop cmpsb lahf out out popf jbe mov xchg test negb cmp rol loopne rcrb and test sbbl aaa pop push dec sbb call jae je mulb inc in mov es xor jnp mov pop shr pop roll push push push and outsl lcall jns ficompl sub sub cmpsb in gs movsb xchg dec shlb cld push (bad) (bad) dec lock mov push cmp inc sub sbb aam insb add je popf out test mov mov mov push pop and xchg (bad) (bad) jne push dec mov (bad) push pop add mov fsubl mov sub enter dec out cmpsl imul int outsb pop out aas rcll (bad) addr16 js outsl pop push mov stc adc mov jl (bad) cs or push mov jle lods mov mov push in pop popf (bad) cmp std dec pop jae out jp pop fnsaves data16 jns (bad) sbb int insb lcall pop outsb movsl (bad) lret jno aad xchg push push addb cmp xor movsb mov or jne cmp pop scas pop aad imul loop adc inc pop xchg xchg pop mov (bad) fistp mov sub outsl lcall cwtl dec mov mov adc test imul ja jecxz or adc push dec sbb push mov jp xchg jno xchg push bnd int3 sub ss jbe loopne les jne xchg pop sbb pop jb fstl pop (bad) xchg jmp testl sub cmovo pop mov adc jno or jns into data16 shr or and jmp sahf inc test je (bad) mov sbb std (bad) push lret push lods jno outsb inc cmp push jnp cmp test aaa bound mov jle repz pop cld rclb test mov out fisttpll cmpsb adc or add gs sub mov pop out cmp icebp leave shll dec mov dec jmp fdivrl xor inc adc arpl ret (bad) andl mov fidivl pop push xchg cli jne arpl dec out stc xor js add jo fdivl xor push rorl cmp inc mov int aam pushf lds adc ret pop and es push je popa push push cmp (bad) xchg dec out sub jp xchg cmp in (bad) jmp dec addl sbb pusha nop push adc xchg das push mov inc lret sbb sub mov in aaa fsubrl fstl xor pop inc das ljmp push mov clc inc mov mov aam lea fcmovnu stc nop mov out aas jge push push test pop xchg pop in adc pop clc movsb xor cmp fcoms sbb lods xor aad push call dec mov dec lock les jb sub imul sbb test or mov jns in push xchg fcomps (bad) cmp push jae sub xor lret adc push add inc dec aam loop data16 aad sti scas out sub fstp jecxz lahf call in mov sub or das add rolb sbb pop pop or xchg xchg push mov es es lock adc sbb std leave jl adc dec inc leave cmpsl aad mov mov pop push add jle (bad) inc inc xchg (bad) cmc scas pushf jecxz inc inc (bad) (bad) push cltd mov push mov es adc add cmp sbb mov (bad) gs pop popf ds mov xor out mov lahf xchg cmp dec add test mov push sbb loope xlat jbe xor imul mov imul add mov mov xor jae cmpsl daa mov adcl cs pop mov dec push add (bad) icebp stos xor insl pop jle xchg push jecxz inc jae push hlt repnz ret fsubrl sbb (bad) ret aam mov cld stc dec clc sub cmpsb mov cmp pop sbb pushf sti mov xor lahf xor mov sbb sbb mov lock mov xchg loope iret jle scas lret (bad) (bad) jnp stos rcrb xchg insb mov rorl xchg push cmp jge cmpsl lret adc mov mov cltd jns sub insb icebp lcall bound fcomp sahf sbb incb dec leave xor (bad) icebp cs sub sub jg fcoml jb mov out movsl sub sub adc data16 int3 pop xchg jbe (bad) out nop cmc fisttpl add pop mov inc adc pop push mov xchg xchg leave pushf mov enter movsb arpl jns aaa roll pushf inc mov imul jne jnp push js lret dec pop (bad) mov lea (bad) mov fist adc inc stos push int3 pop sbb and int3 inc mov sbb dec lock xchg (bad) hlt sub and (bad) adc pop leave pop xor insl xor jmp imul mov jecxz pop push pop xchg push stc add fdivrs icebp pop ret popa jno (bad) mov push pushf sbb adc cmp test push cli incb js lret dec movsb pop ja jo loopne out jo (bad) jmp dec and sbb into pop mov xor mov dec dec mov hlt add aaa and lods loope mov dec push add les lds pusha inc jmp dec test pop push shrl mov mov lahf ljmp jnp xor lcall inc push test out push pop clc fucomp loop ror dec sub inc mov nop mov cltd push loop sbb je inc ljmp movsl sbb sub sbb mov or cmc dec cmpsl or sub mov rolb jl icebp insl add out repz xor jo jge mov push ja fs out jge pop adc fldenv sub call roll push test add jns ljmp (bad) or jle out ss jns vpmacsww test xchg test addr16 jo cmpsl stos inc ret je mov dec cli out jns sbb cmp nop pop into adc mov cmp add adc jmp mov mov add out inc rcrb inc outsb movsb call fldenv or sub add (bad) sbb scas cmp push repnz in int fwait mov (bad) call cli pop (bad) push cli scas pop cmp popw push push test add lods out jmp add cmp out xchg loop mov aas sub xor and xchg mov sbbl and mov jg pop rclb pop adc mov inc ljmp movsl in dec jbe,pn jae lcall mov in aam lahf push mov inc xor push popf in inc bound push xchg xchg push jl movsb sbb xchg adc stc cltd xchg stos fwait lods std insb (bad) test mov scas setne out popa insb fnstsw ss mov jl (bad) neg jl data16 (bad) hlt adc rcrb icebp clc dec (bad) movsb arpl inc mov inc inc out shrb mov add test push ja aad or xor jo inc nop imul test ljmp lds (bad) imul add mov mov imul inc and pop imul call ret ss mov ret scas mov adc xchg add outsl dec (bad) insb aad adc jae popa in inc insb or sbb lods lock testl cmpsl push xchg sbbb std inc dec xchg jb jnp pop fstp rcrl leave movzwl les or int3 mov mov repz je int mov (bad) ficom add jle mov pop lock add adc mov ficompl (bad) loope sbb sbb jg lret jb mov dec xor int3 mov sti call sbb push ja insb pop push popa je sub aaa (bad) cmp orb pop add inc xor or loope sahf mov cmpsb mov mov push int3 jg mov cmp push dec cltd cmp inc pop std lret in fistl mov aam int mov or or adc daa sub push sti and xchg aas enter nop push clc fs je pushf xor std scas mov xchg jb pop fmull data16 shrb or cwtl add ret or lahf mov xor mov mov outsb sub fwait in insl xchg inc jle dec iret loope sub jbe mov cmp cmp outsl xchg scas push add dec mov push sub enter push xchg (bad) imul cltd inc mov mov into xchg fdivl (bad) pop inc addr16 ljmp xor lods cmpsb or and std mov test subl or xchg pop dec mov push mov jp daa lret push out push push popa out mov cmp call int pop mov ds lahf mov mov or les ljmp sbb rclb fstpt loop dec add movsb sti pop sub popa fwait inc pop repz test dec stos pop push insb cmc (bad) mov repz mov ja aaa pop nop mov mulb movsl (bad) sahf sbb mov clc fwait or inc cmpb out mov ds mov mov mov cmc mov push jne inc ss ja mov into xor push adc outsl push (bad) iret out pushf sub imul mov inc jle adc repnz dec inc mov jle jbe ds mov loope push ljmp cmp push jle adc mov jb cwtl test mov out inc data16 sbb jne push mov jp mov ss jb loopne inc roll inc insl fnstsw pop clc movsb outsl sbb mov mov je leave test add jbe cld test mov (bad) xor sbb push je imul jp shll sti dec addr16 jnp pop mov or gs scas cmp or dec ds and aas push sub sahf ficoml (bad) out inc jecxz fsts dec call movsl into cwtl aaa sub (bad) aaa add (bad) out mov jge out loopne (bad) sbb cmp cli lods push sahf lds xchg mov mov push pop adc adc mov inc cld into repz or mov faddp xchg mov scas pusha nop test push push fdivrl inc cld mov scas cmp jb sahf cld movsl (bad) fisub jle ficompl add adc jl adc fadds xor cmc push popf pop xchg push cltd ljmp lods jb adcl xchg push inc sub pop or jnp adc xor lods lock or or pop pushl into or adc in das outsb into dec mov out cld loop jecxz fwait std add out in mul mov scas push xor lret xchg movl push repz jns cmpsb jo xor shl (bad) cltd jmp int3 push mov pop les arpl lret fsubrl mov cwtl dec fmul (bad) jno sub and and popl sub enter std inc jle (bad) mov sbb addl mov sbb add sbb test xchg cmp push loopne dec sarb xor sbb lds arpl xlat xchg jns pusha loop pop jmp sub mov pop sbb xor jo adc xor cmp sub lods divl mov xor (bad) adc sbb insl mov ret lcall stos add inc push mov frstor cmp js loope sbb insb and pop xchg (bad) pop sbb js mov dec jmp mov out sbb repnz jmp pop cmc nop pop outsl mov into inc dec pop (bad) mov sbb mov dec inc out shll lods insb cwtl pop push inc mov lods push movsl jle stc dec pop (bad) in clc daa ror inc cmpsb out mov push cmp es mov pushf dec imul repnz lea xor sub adc xlat dec inc call cmp fldt mov xchg clc int3 add je (bad) inc cmp or (bad) int pop mov (bad) add movsl int lock adc mov mov inc xchg repnz push cmovp jns inc andl jnp mov or mov lds movsl push std insl lods sahf mov sub rcrl xchg push stc or jae sbb pop cs scas xchg test xor adc jbe leave push roll jecxz and (bad) mov movb jno paddb int3 mov xorl lret in push add mov aas popf cld lock or scas lahf jle pop sub cld fstps pop mov and les push movsl jmp (bad) jle ds mov xchg push add pop das fwait inc jns push add fs pop xchg je jecxz mov add inc pop ljmp js out btc pop mov andl mov adc or jo cwtl and inc add dec aaa mov test fbld aam pop sbb xor add mov and (bad) cmpsl xchg loope sbb cmp movsb xor fmul in imul cwtl mov xor mov std pop jb xlat push and stc fldt xlat xchg push xchg mov sti (bad) jl test mov cmp lods sti push repnz dec or add data16 nop xor clc dec loop dec imul dec fidiv loopne mov push rcr jbe daa stos jge jp dec clc mov cmp jb pop mov (bad) xor mov in pop push je sbb fwait sbb rcr hlt popa mov mov mov bound sbb outsl popa test lret aaa adc or out pusha sub sbb leave mov jnp xor dec popa pusha adcl stos test packsswb and jns sbb pop or and test xchg lret rcl mov clc cmp shrl cmp mov faddp fwait roll cmpsl ret jmp cmp repz inc in std lods sub (bad) jecxz lods xchg das and nop xchg mov push push add add fild dec daa int shll fldcw movsl ret dec imull aas pop pusha pop and mulb popf lea inc xor sub test jb xchg sbb mov push mov pop xor mov and mov and pusha fcomps outsl cltd mov mov mov lods out ss pop inc js fidivl cmpsl das and adc mov mov lahf lock aaa and cwtl (bad) in incb in arpl pop gs bound aaa cmp cmp mov dec js cltd mov cwtl pop sbb in int mov fwait cli jb loope repnz scas cs fidivrl leave insl daa pop cmp sbbb jp mov jo leave bound adc sbb add push (bad) xor pop inc test inc mov mov mov repz and inc fsub mov cltd (bad) fdivs mov icebp push leave sub cwtl adc je mov xchg (bad) push or inc jl cmp test gs pop bound push mov mov pop sub sar adc loop sub or dec lret das (bad) mov push push and das pop cwtl mov aam cltd cmpsb jbe inc and push arpl add dec pop adc push dec xchg enter jg xchg popa scas out pop inc arpl jb xor mov pop in in shr lahf or xor jae push cmp mov imul mov (bad) jo pop add jne push int mov pop xchg mov fist (bad) loop ja dec mov and push test movsb dec xor jnp xor mov sub sahf xchg div jge (bad) lret sbb mov into in ds cmp xchg inc push jecxz iret add sarl (bad) flds mov es std push mov cmp out mov pop jo mov mov and test out fwait pop rcrb shl pop je dec add or dec fdivrp sar (bad) mov dec xor (bad) xor jne inc dec jns inc and sbb fsts push (bad) sbb sub scas inc sti daa jle cld rcll roll and sti cli (bad) and cwtl sub inc rcr mulb (bad) dec in jno dec jno mov movsl mov mov aas mov stc mov sti mov inc out mov xor mov push push mov sahf lds stos add push out aam pop mov mov test xor cmp and dec cmp cmp call fisttpll and pop iret lods lahf mov in add cmpsb fadds ret cmp testb addr16 push subb mov sbb push notb in fdivrl and daa dec test xchg stos or (bad) lret (bad) xor mov data16 mov fist push add sub outsb push fisubrl xchg xor jno mov sar jmpw sti lahf (bad) xor cs mov cwtl negb in xor outsl js sub mov cltd es add (bad) pusha xor xorb cmpsl (bad) mov jp xchg dec fisubrl or negl jg int xor (bad) imulb adc pop cmpsl sub aaa ds fnstcw and jecxz and cwtl dec mov xorl inc mov dec sub dec cltd dec jp out sub pop xor les sbb xchg jmp sbb out and mov adc mov push xorl cmpsb test pop sar push or cmp adc notb mov xor dec or and jle xor int dec push sub fldl out push rolb dec loope lods dec lcall push dec push mov sub xor lahf ljmp sti lcall pushf cmp cmpsb add aam cmp lods or sbb add repnz ja arpl rclb ljmp adc pop push je out xor inc roll mov jp mov or cwtl xor sbb inc mov inc push out or test pusha cmp (bad) pop (bad) repnz jns fcomps cmp mov pop jl shrb xchg push mov ja stc add push cmp mov mov out pop sub adc das mov (bad) jge mov sub (bad) pop ret or sbb ret out ja,pn cmp mov data16 and sbb test mov adc add cltd jl rorl les adc xor add add fldcw pop jp or (bad) mov jge aam lcall aas arpl lahf jne pop sub cltd pop inc iret call inc pop pop sub add xchg inc fstpl insl repz or xchg lds enter mov out fs and add ficom sub sub cs daa outsl loop cltd push imul shl rorb or addr16 jae cmpb scas xchg (bad) repnz push aam scas sbb cmp scas cmc stos outsb mov inc mov pop jno adc mov cld popa xchg sbb call (bad) xchg lret (bad) jbe push dec adc push outsb push sbb xor fs test add cmp aad sbb insl jne aam cli xlat inc sub mov mov ja pop repnz outsl inc fcmove pushf pop out pop je xlat stc xchg negl out mov stos test loope sub jge je stc repnz inc out mov adc push mov mov xor movsb mov dec push js fidivl inc fwait xchg (bad) cli dec pusha mov cmp xchg out sbb sbb daa (bad) std aam adc cmc push insb pop ficoml (bad) out mov sbb into add daa xor (bad) decb jl pop push insl push (bad) and lock in cli cli add mov lea and pushf enter out mov (bad) or pop and (bad) and aaa lahf and cwtl frstor je push adc enter push add test ljmp and and mov (bad) (bad) push orb or dec es cmc fldenv fwait push in inc mov jb imul sub add movsb sbb les push xchg ja icebp pop mov movsb jl fs lret sub cmp loop sub mov incl mov and jp and aas and call jno lock inc add insb or inc jmp shlb xor xchg (bad) cmpsb (bad) and push fcomps cld mov loopne jno inc jp pop pop pop (bad) xchg jl test jo adc xchg or ret out lods scas inc scas push pop adc mov mov pop cmp out fldcw xor aas xchg push inc inc pop test push iret iret pop xlat test pop mov popa (bad) ljmp sbb inc mov mov stos cmp push xor pop ja inc mov popf pop les aad es in sub xchg andb rcl xor repnz pop inc sub lods aas loope jbe fnstsw jbe jl push repz stos lock cmp jns pop cwtl or loop mov xchg cmpsb mov jo adc jb imul sahf int3 sub mov pop (bad) in add adc pop scas iret and pop pop xlat inc and ss inc sahf popf mov leave push cmp repz getsec cmp add inc pop and mov jl jnp sahf leave das and mov nop out movsb hlt cmp inc std addr16 imul pop dec insl adc jmp xchg cwtl stc imulb aas fsubrp clc mov jecxz pop addr16 cmp fwait inc cmp or dec pop repnz sti push pop jmp xchg (bad) cmp (bad) sti or jg mov mov fwait xchg pop rcrl leave pop nop loope adc cmp and sti decl and mov sub int3 fwait jno mov fadd testl ljmp in roll cli xchg fsubl scas jb push test jmp outsb add lret rclb clc sub popf cli aam sub xchg cmp xor jecxz sub lret mov add ud1 sbb (bad) mov int3 lcall (bad) std daa pop cli push jns (bad) pop bound or adc pop fwait (bad) dec xchg in lds jnp and push pushf movsb mov adc ds dec out cld push push lds mov loope push paddd mov xchg movd cld pop or sbb mov push ds mov and lock xchg or mov fimul popa mov jo or rclb jmp clc pop pop ss stos arpl mov (bad) sub xchg fcom mov push push lods mov and jmp cmp in lret in mov xchg shrb cmpsb sti sub ret scas xchg insb sbb dec nop xlat imul and push mov or jo imulb jl rorb (bad) cwtl sbb push ljmp loope repz xchg or je inc mov out dec mov scas or aaa mov and mov (bad) lods or sahf push aaa bound xor jmp adc mov enter add inc jae movsb or sbb sbb pop cld imul iret je mov pop jb dec loop mov dec xor add adc sub sub outsb push pop loop dec pop jne pusha sbb clc divl sub test sub mov mov inc cli cmp scas cltd push and or bound nop jecxz,pn aam dec outsb and daa call test arpl jg out repnz jno,pt (bad) lock sub and arpl std test (bad) jl mov addr16 and mov clc sub cmp sub fcoms lahf shrb bound jle lds cmc shlb mov repz sahf js mov jmp jbe pop mov ret dec (bad) pop aam stos xor (bad) xchg add cld fwait std in push pop sub dec pusha add out out mov add mov sub aad add pop push xor sbb mov push lea lods outsb ret loopne mov mov sub lahf imull xor lea cmp lret push in sub daa sbbl push mov mov xchg xlat (bad) jle stos inc cld pop (bad) lret enter and stos std (bad) sbb outsl lea mov pop (bad) xor pop xorl add jg inc lret aaa sub sub repnz cwtl cmpsl fisttp sub insb loope mov mov xchg jbe mov pop or lods stos dec sub (bad) data16 xlat mov loop daa popa xor xchg shr pusha call xchg imul adc add xchg pop mov or out mov cmp jmp int3 and pop adc mov outsl dec cli loope shrl xchg cmp jo scas add addr16 repnz cmpl out fsubrs adcl scas lock mov fld sub pop loope xchg mov adc xchg repnz cmp sahf adc add sbb push push adc sbb and mov (bad) aaa out mov pop das push arpl cli mulb xor icebp fiadd fcompl or inc add repz lcall cmp mov int jnp add xor inc mov jb sub dec scas sub sahf (bad) mov and adc arpl gs jbe pop sub cli mov cmc clc ljmp es xor cmc mov push xchg or incb fldl andl push cmpsl sub mov ret pop adc xorl hlt mov jne stos andl jmp icebp xchg aad cs push and jno push pop pop dec std lret stos push mov jbe jns jno mov cmp mov pop repnz cmpsl shrb (bad) mov or (bad) cs push cvtpi2ps pushf sbb mov xchg pop sub xchg sub out mov inc jg xchg dec mov pop sbb clc lock stc dec scas pop mov incl (bad) pusha fnstcw icebp cmp sbb push xchg sbb cmp jle pop inc lret xchg xchg pop mov sub mov (bad) or mov aad lods mov aad mov xchg nop pop add ja ficompl in loop mov dec pop jno mov or cmp xchg in pop cmp scas daa (bad) adc sbb push test mov pop pop xchg cmp jne (bad) and andb das inc dec scas (bad) int3 fisttp lahf jno dec fldl jb (bad) or add (bad) loop out and cmp sbb (bad) movsl pop mov ret call pushf mov mov lock pushl mov vmovntdq or dec les dec fwait cmc subl jne clc icebp jbe out xchg jb xchg ja cmpsl dec jno mov test mov lds fwait clc fisub fwait and sahf test xchg (bad) test int3 stos movsl sub and mov fs sub xchg cmp (bad) out jno inc cmp lds jp cld xchg stc push add inc mov sbb lods mov sbb sti mov jne test leave push mov or xchg sahf fild addr16 mov int je sub icebp fiadd jns cli test test sub cmp popf dec jp mov or pop mov mov mov push jl and xchg (bad) loop sub pop idiv (bad) incb mov scas (bad) in (bad) out nop mov adc rcrb and mov mov sbb popa jecxz sbbl pop and loop in add or cmpb push cmp sub mov sub jno lea adc jbe aas clc or cltd add fistpl leave jns sbb sbb inc cmp pavgw add out mov dec cltd sti in mov add jl xor jmp mov xlat mov inc pop and mov jb pop cmc lcall inc bound or fdiv lods mov aam pop jns,pn cli pop repz ja inc les dec je mov (bad) rclb and push cwtl into scas ret (bad) mov sub add jno lds adc scas jb mov mov pop insl ja fcoms out rorb arpl fs inc sbb mov outsl je mov fdecstp stos add or push (bad) call insb xchg icebp stos aaa push sub lds inc jle stos es inc dec mov sarb test imul cwtl pop in outsb push in or cmp in cmp movsl (bad) push dec dec inc jmp outsb and xchg (bad) sbb std push ret sub xor lock pop test (bad) mov mov (bad) repz fcomps (bad) int stc fsubr xchg ret jl ljmp fisub inc pop lock xchg in int rcrb fmull lock test dec es push jp inc in cltd sbb sbb movsb inc repnz add inc daa fstl adc pop scas aad test xchg sahf mov (bad) mov fdivp out fidiv and fsub das loop dec inc jle ds lods outsb lds iret sbb aad divb add fwait mov mov sub imulb repnz in xchg cmp xor push fnstenv inc test loope sub fistpll imulb adc jl and pop mov xchg shr lds xor xchg bound pop fidivrl aam xchg addr16 cld jp push (bad) or push cmp cli (bad) or jne,pn jl sub jo hlt xor rcrl test adc call mov sbb cmp mov mov std mov loope movsl dec mov xlat cmp test mov jle xchg lock aas cld mov xor (bad) (bad) push enter mov imul dec dec fwait das pop cltd test fmuls sbb test in push mov xor inc pusha cmp popf push enter (bad) fnstenv nop push loopne loope adc cmc push pop push fdivs mov push insb lret leave dec lahf dec es mov ficomp nopl xor mov jbe ret mov jb fwait loope popa pop sbb (bad) mov ret mov in insl scas lock add pop xchg cmc jno sub lcall add push mov lods test sbb and (bad) mov mov pop or gs das insb mov push dec lea lahf data16 pop sub test jecxz and adc push rcrl jnp aaa in inc xor movsb adc sub outsb int scas cmpl inc fistl and xor pop cmp pop cmp push test mov sub xchg or cli icebp sub cld or ja setns inc and mov jg xlat lret sbb jl (bad) inc sti xchg cmpsl sbb or jp out popf mov lock lret mov mov cmp test lds (bad) and inc out push imul (bad) fisttpll inc mov cmp mov pop icebp lock pop push sub call jge mov repnz stos out mov xchg or jo mov outsb push mov repnz icebp sbb add and int3 mov outsl out (bad) test mov imul neg bound (bad) outsb pop mov clc in test adc inc jmp and dec dec call out fcomps cmp sub outsb push cwtl mov insb negb or lret cs inc testl mov xchg jecxz mov repnz mov out movsb sbb jecxz and stos out in nop clc lret pop mov sbb loopne inc scas mov and jecxz and mov xchg push xor scas dec dec xchg push movsl aam daa dec add inc push sbb (bad) mov btcl xchg push mov sahf pop xor out jbe fldcw stc addl stc add inc xchg outsb mov pop sbb inc push nop sarl jp lret mov call pop push sti dec mov out (bad) call inc pop lahf pop lock aas mov inc inc add dec push test fs out adc sub add cs jae mov jecxz dec xchg xlat ffreep popa push xor test lcall gs sub outsb mov add pop gs jg mov fisttpl iret jae int arpl sti ss lret repnz xchg sbb and out test sub (bad) in pushf outsl jae pop stos loop cmp xchg lcall addr16 push add ret push xor pop mov dec mov dec mov lahf adc out mov jnp xor xchg stc pusha pop out push (bad) iret jno and or mov movsl adc adc bound lret push pop jno xchg lea add cmp sub sti adc jmp pop das in cmp mov (bad) mov mov cmp push mov jo sub mov fidiv jl test push mov add pop mov dec lds sbbb bound jno in mov inc dec xchg jbe add push pop out lret nop mov bound push sbb addb and xchg movsb loop jnp ja sbb ljmp inc adc ret xor nop jne cmp movb lds les mov cmp pop jb out lods out mov xchg in mov rcr push sub pop (bad) lock cmpsb jb clc test jmp mov cwtl pop push aad and mov xor inc cld outsl (bad) fsubs cmpsb pop lahf inc iret add xchg fwait cmp add push lahf inc (bad) add mov mov nop fadds dec xlat aad mov pop xor mov stc outsl mov adc lods sub cmp lea jbe mov fwait in shrl and mov loop xlat push test mov jae push popf fdivl mov xchg icebp xor mov pop inc mov addr16 out dec (bad) mov xchg cmpsb jno icebp scas adc xor lods sar fs mov xchg ficom mov jnp and ss mov (bad) jns xor add cmpsl stos fdivrs inc leave test mov mov jge sbb inc sub lock jmp jns xor mov push and add int3 cmp insb sbb div es jns nop dec sub adc jns pop lret (bad) mov cmp inc push testb sbbb inc mov jge lcall mov movsl cmp lock ds and xlat push mov jno cld mov inc popf jb clc ret and xchg loopne repz xchg mov add call sub mov push cltd (bad) jge sub dec cmpsb imul mov dec jo xchg xchg sarb fadd xchg in pop bnd enter mov mov das pop lret nop jo push push dec ljmp xchg xor jo jbe and fucomip into jns adc into dec mov mov inc inc xlat (bad) int3 fsub mov out pop jo mov repnz mov or shrl mov jmp add dec sub sbbb pop sub das fdivrs xchg mov test lds addr16 shrb jecxz popa jno mov and and subl adc inc xchg jl inc std push arpl aaa ja mov arpl inc ret xchg cmp lods push out sbb aaa movsl mov jbe ja fwait push mov lret jb mov scas lret std int3 pop out sub repnz dec adc stos push (bad) in into out dec fs pop jl xor jae popf ret cltd sub test (bad) (bad) out mov gs mov in and mov add mov fildll dec lds sti out pop pop jbe js scas mov sbb xor xchg outsl cld arpl cmp cmp (bad) dec cmp add mov cmc cltd xchg rcll testb jo stc test std into mov dec sub dec and mov fucomi test dec inc push push mov mov mov sub push mov test push rorb xchg cmp mov loope xlat or jmp mov andl dec xchg test xchg xchg xor lea mov int js stos scas or jno mov pop sbb add into ss loope cwtl imul cwtl jbe add push in outsl ficompl inc ja push sbb jle sbb push add adc stc popa and add mov stos je xor or push hlt stos adc gs dec out les pop pop movq jmp jge xchg out jnp fbstp mov or jb xchg dec push fstpt or (bad) push mov mov cmc push sub ljmp xchg mov inc xchg pop adc and js xchg out inc dec not adc aaa stc inc (bad) push dec retw or cmp int sub mov iret aas or dec push les inc cmp clc inc dec rclb popl and data16 sahf dec hlt ja and inc adc pop lret faddl test movsl pop or out insl das cmp lods xchg or push xchg scas (bad) (bad) arpl imul mov sub in (bad) mov ljmp cmp cli inc jmp rorb orl pop dec rcrb test pop xor bt leave ret int3 xor repnz hlt mov nop in movl xor sub in rclb lea leave out pop subb std pop mov sbb adc push lds dec jp call cmp out lods sbb faddl lds cmc icebp loop pop xchg pop mov sbbl and xchg mov push xor mov xchg add pop insb push ss xor enter sub lods push ret cld mov jge insl (bad) sbb fmulp push cli pop inc xor pop sbb sti fldl adc aaa mov sbb rolb lea bound mov sbb xor or adc xor mov lea pop push pop mov mov insl jbe xchg fisubl out dec add and fcmovbe push sub xor mov cmc ljmp je (bad) idivl imul (bad) (bad) mov adc cmp jecxz loope jne stos sbb mov inc nop out (bad) call xor inc and xor movb paddsb fisttp sbb cli out xor mov repz push jns push xor jl inc jl mov push sbb enter pop inc mov je decb xchg punpckhdq test les mov inc xor std jl jecxz lods xor gs dec scas pop (bad) aas mov nop fcoms inc (bad) movsl je int3 rclb test ret mov xor xchg icebp mov sbb pop fildl or rclb test xor fsubl aam dec lret dec lods dec inc mov inc cmp adc repnz data16 adc nop das xchg enter cmpsb pop mov mov subl ficompl je add and dec mov xchg movsb sahf ljmp adc insb stos ret fildll sub jb repnz shll notl les repnz lcall subb mov (bad) add mov cwtl data16 popl and mov outsl mov jno shrb fwait and popf loop push inc ret fimul pop mov mov ficomp mov nop scas mov pop lahf inc cmp fwait sarb mov cmp mov daa stc add ficom xor fistpll dec mov add lods add out addr16 jae imulb add xor sbb dec repz push aaa sahf imul push in adc dec inc sbb pop fs repnz mov dec pop mov ret insl lret call fnstenv mov rol inc stc push pop dec sahf stos mov inc popa call lock aaa lea mov xchg insb sbb imul ljmp dec test dec adc lcall mov loope sahf sub cltd jb push les jecxz ret dec les xor jge fwait or ficompl sbb out xlat jns shlb gs xor and jg lret and mov jns ret cld comiss sub daa adc xchg jle int3 mov lcall fidivr lock shr jno fcomi and cmpl jne std aam mov sbb and jo stos in dec in jg jecxz inc mov cmp notl push es aas test dec imul push push movsl bound or dec cmp aas es arpl mov movsl sbb arpl pop xchg mov aas push push dec or xor repnz loope divb lcall stos stos aad jge int and mov xchg ja fdivl add insl or pop push mov jno in pop adc leave jae ret push push int cld sbb mov lock xor xor in rcr sti pop push pop les iret push in push lods push pop mov jle pop or in nop (bad) cmp fcompl cmp les xchg and add out and dec inc mov aam mov insl jno loop call loope mov jae nop out mov push push shr icebp (bad) mov add dec and xchg xchg not sub imul ret add (bad) not es out (bad) mov sti sbb sbb sbb sarb jecxz add mov push push xchg pop mov and mov int3 inc cli rorb es shll (bad) cmp sbb pmuludq loop scas jmp mov fildl sbb iret std jg inc aam mov inc pop jae fs test and and out lds mov adc add repnz dec fdivrl rcll testb mov mov (bad) or mov std pusha leave data16 leave add aaa push mov fmull adc jl pop pop cs fsubr mov xchg dec icebp movsl jp dec push add xchg or jbe lea call or jno jmp imul adc push sub fsts imul push rcll or lea add fistpll add fdivp out cli or in mov (bad) push pop adc sahf insb aad or in sub ds jns cmpsl jb jb mov pop aaa sbb and pushf scas xorl sbb (bad) icebp and xchg loop or mov insl add bound fistpl popf xchg iret in add lahf aam inc scas je add popa aas mov push sub jae loopne add mov push rorb add and lods lret (bad) jae pusha fnsave xor movl mov sub jb cmp mov inc jo inc jle inc notb in fsubrs fs mov fsubrs mov dec push mov xorb pop xchg sub bound add add (bad) fisubl test pop insb lahf dec (bad) or xor aam sti inc mov out (bad) fstpt in add subb negl cli fwait push nop sub and loope jb hlt (bad) shlb fidivr mov bound pop push or jbe lret lods jae imulb pushf lock (bad) sub and add jns sahf punpckhbw jbe sbb test loop hlt das mov outsb leave pop mov mov in (bad) in mov outsb popl dec sub or xor dec pop jg movl test fisubrl sbb test cltd jg mov mov imul mov dec cwtl leave mov mov sbb adc stos and int3 lahf into iret dec jb sti icebp push push shr lcall (bad) pop sub and repz popf lods dec rcrb fstpl add in nop fwait xchg (bad) popf mov fadds mov add sbb out clc or fwait xchg and lock xchg or punpckldq mov les mov call pusha in sar sbb and gs cmp jmp sbb xchg push enter mov scas lea in lds lea icebp mov adc lock sbb pop lret gs dec cmpsb sahf outsb dec arpl ja aad pop xor bound inc cmp mov psrlq les add sti add sub fidiv gs mov mov imul cmpsb inc cmp cmpsb push adc mov mov idivb pop or jae and fmul jnp stc js adc fmuls jb or jae xorb adc imulb int3 lea fsubs in repnz mov leave (bad) stos sahf out pop nop mov xchg pop mov cli pop lds das add jge adc xchg iret xchg cmp les test inc pop out xlat and jecxz loope pushf adc jbe mov xor pop add cmpl mov and ret in mov inc das inc (bad) mov pop divb call (bad) stos aas sbb and cmc gs out mov js pop aad fild push shrl inc stos mov sbb cld pop add add cmpsb lods pop sbb jg std push add mov test orl xchg xchg jo pop push ds popa jmp mov lds push pusha or sub jp sub ds or and (bad) lds clc pop push and dec fsub mov inc scas mov call cmp sub xchg bound pop xor (bad) mov insl xchg sbb aaa lods and adc pop jecxz sar (bad) into pop mov mov jg sarb push rorb and lcall xchg lret fdivr in sub jle sbb jge mov mov xchg imul es cmp mov pop mov inc imul sub aas sbb scas and orb repnz xor xchg (bad) jbe mov ja or bound stos add mov bound std aam cmp stc cltd xchg in out and push lcall fsqrt pop movsl (bad) mov in cmpsb cld mov aas pop sbb bound aad iret lock jl sub lods mov xchg jno mov cli fsubl iret into sub or pop xchg ljmp fstpl loope xchg push lcall popa js loopne inc movsl stos mov rcl aam xchg mov sbb jp sbb cltd imul (bad) mov (bad) xor xchg mov insl mov sbb aam pop ljmp nop mov les jg cmpps (bad) fisub incl (bad) cmpsl push cltd popa xlat js mov push push mov outsl push dec into daa fcompl es push cmp mov jle int fiadd inc add jb mov adc dec inc dec push into notb mov iret inc pop sub mov pop jp sar popl inc int mov ljmp fsub in and jnp sbb mov inc add nop push push cld leave aad mov push hlt ret and addr16 test arpl push js leave cmp xlat mov ret or lea jle loope test xchg or jbe scas add test ljmp (bad) mov pop sub mov addl mov and scas mov mov push sub dec mov xlat outsb mov mov pop and mov sub inc inc sbb adc roll pushf mov push ret xchg add xchg cmpsb xor lods sbb divl dec js sbb sub jl pusha dec ret stos mov loope lds gs (bad) stc aad cmp xlat ja add psubsb and jae jle adc in add pushf (bad) mov data16 in cld cmc push inc mov jns ljmp popa push adc cmpsl imul jbe mov sbb out mov mov scas rcrl stc push int3 cmp inc cmpsl or or (bad) mov sti (bad) scas add or jbe jb hlt jo sub icebp mov jnp ljmp adc add fwait inc test push enter cmc pushf add stc out loopne sbb add xchg in sahf ds lret out jnp push cld jmp repnz inc test je out pop pop mov lahf cmp cwtl add xchg lret loope and cmp dec test js scas loop test insb out xor xor cmp and cwtl cld inc rorl pop xchg xchg out jnp insb pop push and int sbb scas out repnz jmp jno push fmulp pop xor pop xor mov in test (bad) out repz xor cmp or sub scas dec iret xchg mov out (bad) fldcw xchg insl div xchg and ds sub jl mov enter or cmp lret (bad) cld sbb pop std icebp push test movsl adcl push stos jg outsb addr16 mov (bad) loop mov cmp and adc imul cmp sub adc cli xchg mov ja clc repz push das arpl add negl lcall enter push bnd popa fmull in inc lret fbld cli xorl inc add or add jg fadds leave jb inc ja adc arpl in add xchg lods loopne mov mov dec data16 mov xchg les jecxz push andb (bad) cltd es (bad) outsb adc es dec aam popf push adcl adc xlat repz xor flds adc out xor adc roll int leave xchg rcrl leave fist je mov xor jbe movsb or sahf push out orl rorb ljmp mov push pop imul cs cmp call divl xchg xchg inc das sahf rcrb cmc xor mov adc pop test sbb pop and mov push divl mov jg inc inc ret cmp andl sub mov xchg rorl push lret sbb sti adc test test or xorl cli ljmp inc jbe or mov or js aam stc xchg and push mov shll pushl push pop dec and cmp scas lds push add mov ret push push jo (bad) dec mov leave jne mov and enter (bad) xor (bad) xlat cmpsb or pop cmp (bad) leave adc xchg jl cltd mov cmpsl mov cltd jmp or sbb mov ja aam adc in push cli jg sbb mov mov ret iret in and dec mov int3 fdivp push insb jp pop cli sbb in inc out loope outsl xlat arpl lahf fbstp xlat dec dec jne jno mov add neg push dec test xchg adc (bad) aam mov fistpll and test add pop cmpl sti jmp add inc add out adc xor sub inc xor inc inc lcall xor pop dec ds xor push cmp incl push mov ret jbe xor fcoml push (bad) mov std add mull outsb push loop mov adc jp sub sub push mov inc pushf mov repz in jecxz jmp adc inc loopne fsub clc es inc inc push fistpl or fnsave insl repz cmp add jae inc and insb (bad) addr16 fisubrl push std cltd sub xchg jmp push or cs mov cmp bound xchg call and sti xor aad (bad) add pop iret es out push sub jnp shrl push loopne xor aaa xor xchg lds adc decb mov and adc dec sub and std adc addr16 mov cmp or addr16 mov jbe stos scas mov mov cmpsb adc push iret mov cmc mov xchg test pop add daa scas lea outsb sarl mov mov rcll popa fidivrl ja xchg bnd (bad) cmp mov xor mov add jbe xchg pop fdivrs ja pop icebp addl sahf and aaa adc lods addr16 adc mov and into mov add cwtl sbbb ficomp loopne and lods in movsl out push les jns adc (bad) push mov addr16 sbb out icebp and fsubrp and mov int mov sub lret mov lds arpl xor mov int3 pop ret fist xlat mov sbb into jb sbb out jae,pt jg mov dec lods sbb push and mov xor fistpll inc and sbb fwait inc jl pop add daa sub int push test xchg xchg cli les lahf imulb add xchg fnstenv push and pop jg jle fdivrl xchg mov jmp xorl mov ljmp arpl jns mov or sbb mov mov in push int3 jbe popa rcr scas outsb or jns adc cwtl sarl or in loopne mov ds daa mov or outsl fs jo and sti in or out adc add xlat fld and mov repz out xchg popa pop les stc pusha pop lds mov outsl ficom stos iret mov arpl icebp push dec fs orps (bad) aam insl pop sub sub add nop insl icebp xor dec adc test xor adc pop fnsave ret ds and mov sub ss (bad) scas lret xchg push lds bound ja in movsl add cmp test jb sbb sbb pop push arpl les test mov pop xor sub popf adc and pop pop or sbb nop xor push jne push ljmp fcoml cmpsl dec (bad) jne insb rolb lret fwait cli xchg jmp in repz mov insb shlb xchg test pusha adc mov jno push (bad) leave jecxz dec flds jae lcall orl stos inc xor fs jecxz cmpsl dec (bad) cmc xor in ds fistl stos and inc xor pop sub mov fsubl mov or push xchg jne into add fcoms cmpsl test mov mov add mov aas push es mov daa dec adc daa cltd xor adc adc inc add or inc lcall aaa jmp stc cmp mov cmp add add dec dec jo and (bad) movsl fimull lret add cli pop fs into mov jnp xor xlat hlt ja mull mov bound sbb pop imul in sbb imul inc push cmpsb cmpb xor (bad) mov test mov lds out mov pop lea sbb jg jae mov sub rol jae leave ljmp es inc mov in into mov call loopne in jbe xor push test ret pop mov (bad) mov jb jp movsl icebp lock sarl sbb xchg pop push sbb xchg lcall popa aam repnz cli jbe,pn or fbstp js xchg jb fsts dec or sub mov or pop ljmp scas mov sub mov ret adc dec cmpsl cltd ror rorb test pop scas out gs push mov adcl jg cmpsl adc xor pusha out lds mov mov mov into icebp xor pushf lods or leave je (bad) mov jo xchg fstp popa pop xor inc dec fiaddl (bad) jmpw xor je imul mov pop push outsl rcrl insl cmp daa cmp scas jns push int3 loope inc leave push sahf fldenv mov xchg or ret imul das in ficompl add movsl jne stos jbe cmp xor inc inc sahf cmc ret sbb xchg scas pushf lret int adc xlat pop jp mov (bad) addr16 xor roll arpl cmp in mov or mov movsl hlt les in push out das mov js inc aam (bad) mov and int3 stc xchg jne repz cmp aas loop or stos ret lret inc das jo stos cmp mov and popa int3 or sub stc push mov or leave out (bad) les lret enter dec loop js mov xchg ja mov fisubrl mov mov or mov fadds ss dec inc cmp mov sub add jecxz xchg and sti daa push inc mov pop (bad) or cltd mov ds dec cmp std dec subb lcall inc gs loopne push sub pop sbb lock jb add sbb cld push imul jmp pop (bad) cmp mov cwtl enter ror mov add xchg mov mov (bad) mov fadd lret call sub outsl pusha sub fidivl inc setb rclb (bad) stc fldl xchg push incl sarb loope mov mov mov mov loopne fistl and add jnp negl stc inc mov inc mov inc enter and in mov (bad) enter bound dec inc gs int mov mov cs fsubr xor repnz cmp sub adc sub sub jge lret lods jg pop xchg cmp mov aaa das into fstpt (bad) mov icebp dec mov ja xchg xor test xchg scas sbb in push test sbb inc mov dec sub xchg jp inc cmp inc cmpsl (bad) aaa mov mov push cmp add mov test pandn cli (bad) dec imulb mov adc push jae scas xchg jp pusha negl mov xchg test test nop jmp fcmovnu into xorb pop dec stc mov sti cmc xor pop call jnp cmc jle pop stos cmc add inc sbb popa adc sbb adc int enter xchg mov arpl test idivb adc push int3 xchg push xor lock sub clc ds rcl inc aaa jno xlat push test xchg mov pop pop insb enter les push imull scas and pop movsl icebp (bad) repz add mov jns dec lods mov pop push inc push cmp mov gs dec fwait test adc jno mov repnz movsbl fs daa sbb shr scas ja sti xor mov gs xor xchg push fisub cld push sarl int pop lahf adc mov mov and scas mov shll iret fsubrl call (bad) mov fbld inc jne (bad) aaa dec negb pop in hlt data16 cmp jbe xchg mov add dec lret movsb data16 pop xchg jns cmpsl cmp test enter movsl and and popa pusha cwtl push loop lret aam cmc rcrl outsl outsb push mov das pusha push jnp pop mov cmp pop cmovg loope aaa jne mov outsb mov (bad) mov dec or loop movsl imulb nop imul insb push adc out add jle leave adc enter push cltd imul sbb out gs push repz mov inc fcmovu lea (bad) daa pusha outsb inc scas jl lahf and mov pop out int pop and ds daa mov cmp ss (bad) cmp mov hlt aam and sub pop (bad) sbb pop xor addr16 lods (bad) movsl xchg adc jmp stos inc (bad) insl mov push add xchg mov jg repz daa mov add iret daa mov dec out sbb mov xchg sub cli adc add xor nop mov out das mov sti jo pop jnp add (bad) lods aad fildl stc fistpll mov pop sbb add xor or mov je leave cmp cmp insl rcrb je adcb pop outsl push dec fdiv cltd xchg orb std outsb orb fldl rorl jno mov sub (bad) ret cmp fnstenv inc call mov dec fcoml roll xchg in cmc test jae mov inc ret mov aaa enter clc xchg add gs cmpsl and push sub movsl repz dec daa push adc mov adc ja inc pop dec js mov xor sbb ficompl mov mov outsl (bad) jne mov shr sbb push or inc or pop cmp xor mov pop int3 push fs call ja ds pop enter add mov and outsb xor xchg sub xor fdivl ret mov adc fadd sbb lock aam andl add lods push out adc mov pop jno (bad) (bad) jge dec lahf jmp sub repz cmp aaa xor clc mov pusha call fs adc xor in xor je xor addr16 and out sbb rcr movsb std scas inc iret push mov and lret loopne hlt or jne popa xchg mov out bswap shr xor dec and sbb (bad) in xor xchg imul out cmp push pop call sub and inc xor dec test sbb imul sub stos test jmp push xchg inc mov mov xchg out lret inc (bad) sbb ds outsb testl test and inc ja pshufw adc fsubrp cmp std fistpll movsb push and bound (bad) popf lcall fs repnz scas repz imul daa jle or aas xchg xor cmp mov xchg in or jl test xor xchg in jbe push pop xor mov fbstp pop popa inc (bad) hlt enter out imul sub mov in mov mov rcrl cmp jb xchg xor adc cmpsl sub sar push rorb mov movsb or mov mov xor push sbb inc sub mov nop pushf inc cwtl sbb dec test imul mov mov cmp add jecxz lret cld lods jp sbb adc sbb xchg xor sub sub pushf add (bad) rcl scas mov add jne push in stc cmpsl add not fldt mov jno pushf sbb inc cwtl mov sub push sbb adc sbb cmp nop mov adc jns jne and ret rcrl stos sbb arpl (bad) das mov popf cmp rolb mov inc mov jmp push mull mov imul movsb test xorb mov push iret add das xorb int movsl xchg pop jbe push push cmp lods xchg (bad) mov jne jns push ret or ds cmp mov inc stc sbb push xchg popf push stos mov (bad) repnz lret mov cmp aad push cmpsb sub test fnstenv fsts inc jp scas add pop xchg out jecxz inc add sub cli popf ljmp lock dec push cmp mov ss loopne adc mov into iret nop xchg adc jge mov stc ret dec ljmp lret rcll aas or or xor mov adc in sub test mov and jmp aad pop mov in pop (bad) mov adc loopne mov test cmc fsubs cmp xchg in push mov push mov xchg sub sbb xchg jecxz out icebp test dec pmaxsw adcl pop push mov dec or hlt (bad) sar jne imul cmc pop and mov xor cs inc jno cli jns xor rcl mov lods add out xchg or out mov cs addb mov call cmp or mov sti xchg nop mov mov adc push in inc in dec aas ret push incl insl test ret loop stos cmc and jbe jno and in adc popf dec cmpsl or outsl jae push xchg dec adc sub popf jae bound movsb inc push (bad) pop inc mov mov ret into insb pop xchg sbb inc pushf xchg jns push mov test inc fisubr adc sbb and jl cli mov fidiv fs (bad) cmc mov add mov xor mov icebp pop decb popf or sub movsb leave mov loop and push outsb xor xchg xor xchg ja sbb ljmp syscall mov push push mov inc pop (bad) push and mov aas test add jmp cs subl (bad) jmp mov sbbl mov pop dec cmpsl insl jae test xor push pop (bad) cld je mov jg jle mov jb std dec ss (bad) in fiaddl push dec or pop sbb jp repnz out mov add mov inc je and repnz push jb cli and minps mov les adc daa lret mov fucomip sub movsl in pop clc bound mov roll mov mov leave mov js fninit jno rcr sub pop shll dec inc dec sub in pop dec out movsb jl xor dec cwtl loope loope cwtl and adc hlt ror ljmp xchg in cmp incl out mov cld push popf fsubrs insb xchg xchg aam test add sbb push stos sbbl add icebp jnp add push lds dec xchg ret lods nop jmp push daa ds push fistpll (bad) mov inc hlt bound fs push daa bound mov jb or aas xchg das test clc mov sbb negb sub mov imul mov aas mov jno mov cmp sbb pushf adc addr16 pop push movsb dec les insb call or sub mov jecxz xchg jle xorl leave das xchg ret pushf adc aas push insb adc negb or lods adc add adc jbe mov sbb (bad) in jb or xchg xor mov push mov inc lea jae popa (bad) (bad) jg lret (bad) adc inc cmp add scas movsl mov ljmp call ret (bad) push jne push sub push inc add outsb adc mov loopne adc lret inc cmpsb movsb xlat mov add es cwtl adc inc adc lods fdivrl mov mov sbbl push popf out mov aam dec cs sub imul jmp scas or jns lcall dec inc movsb (bad) fist cld and jb (bad) and and jne sbb gs lods lea mov daa iret lock xchg jl adc (bad) mov push std mov inc push xchg xchg sub (bad) out dec je xchg pop cmc cwtl jmp cli leave cs arpl hlt test mov adc repnz cmp outsb les inc xchg mov aam imul insb mov xchg inc inc lahf flds mov outsb jle add mov out mov or pop adc aas add and (bad) mov pop shll inc mov sub jge (bad) adc xchg and jne icebp (bad) mov xor stos and lret addl add clc loopne lea in dec pushf dec sbb push push adc xchg adc sbb icebp gs mov lret cld mov (bad) jne cmc pop xor pop xchg idivl jbe push pop (bad) testb ljmp sub (bad) or loope icebp rorl (bad) negb xchg lds (bad) mov cld mov sub dec sub pop ficom pusha inc (bad) icebp aad xchg dec dec (bad) jne jmp (bad) mov jl inc sti lahf push fstpt shll fst push or inc (bad) push fcmove outsl dec xchg or adc out mov int daa cmp je imul fwait mov jo mov ror stos add push adc lret out jecxz mov outsb fsubs xchg ret push xchg stos ss insb movups jbe das lret imul lock lds mov adc popf cmp stos inc add nop push call and popl call scas fldlg2 std outsb mov dec xor dec sbb stc pop push push dec and popa std inc movl fnsave mov adc jp add pushf fsubl (bad) add and loope add ja jne das jecxz adc out insl (bad) and jge lods das fs jne and cltd fcmovu les push xor jecxz mov push xchg cmp fs test xchg and (bad) jmp in sub jmp std add push mov mov mov pusha dec pop popa cmp mov insl dec push push imul insb out pop dec int pop mov xlat adc sub mov (bad) push inc js loope mov push and in push dec cmp push cmp cmp or roll rclb xchg ljmp xor repnz je gs xor jle icebp ss sub clc mov mov ljmp cmp ljmp aaa push jmp and call xchg inc daa dec inc popf idivl cwtl cmp aas lods lret mov mov mov outsl insl lock or imul rorl sbb mov xchg enter jae mov and aam mov or mov mov cs pop addr16 adc xchg cmp cmp cmpsl lcall jb mov adc mov ret stc lea insl mov jno xor mov fistp dec lds negb mov and mov jle ret out lea inc jnp das cwtl gs cld inc jns int3 sahf jnp or jge cmp push jl sub lahf ljmp xor sbb in xor xlat ret mov adc lahf sub cmp fldenv and or push mov lcall outsl pop sub jle cltd out push mov push lods es (bad) xor mov xor mov fmul daa pushf cld adc xor ret aas mov aad dec test inc mov inc dec out (bad) mov sbb cwtl and mov cmp jnp push scas scas add cld dec loop fisubl (bad) xchg in cwtl cwtl push jmp dec (bad) sub mov or in push sbb inc lahf int3 sbb lea xor loopne mov imul push (bad) xor aam lea jb test jo lea pushf insl test pop ljmp inc xor (bad) xchg scas dec jbe dec loopne or pop fcmovu cmp data16 (bad) (bad) xor xchg push insl (bad) sbb add mov mov jne jge push adc pop mov ss sbb mov fstpt outsb in (bad) jno shrb scas incb (bad) aaa sub mov test arpl iret stc xchg adc pop cmp mov dec push dec inc (bad) xor xlat (bad) push jno and mov pop and out inc cwtl hlt mov jae jmp mov lods int3 mov cwtl das lock iret inc push test (bad) std push cmp in mov cmc stos pop push out sti ret jbe in add std adc or out cmp xchg xor sub and (bad) push fist fidivrl xor (bad) gs pop imul pop pop push ja fbld movsl pop add fidivrl movsb mov inc rcll adc sub ss adc push jbe push lds mov std out add insb (bad) mov xchg shll jmp addr16 adc fisttp mov mov mov pop add sbb std pushf rol dec xchg dec scas (bad) in push adc mov imul test jp arpl jo push cmpsb scas mov mov push inc cmp shrl lods inc fldenv mov loopne,pt daa addr16 insb mov jns insb xchg rep ja leave int3 xchg sub dec out ja lods pop sub pop jo sub mov cs xor inc fidivr pop cmp xor pop inc push and xchg fsubp add sub jno sbb sbb inc daa xchg hlt es test xchg push or jo jnp add stos push mov push jecxz and push (bad) data16 jno add xchg and out pop xchg out jle insl aam aad and mov xor xchg push add inc popf int out ficompl rorb std xchg sub (bad) pop fs out repnz mov inc mov fnop lea data16 lcall jno popa ja fwait hlt adc imul int3 (bad) xlat pop dec fucomip jecxz std lret (bad) mov insl icebp lahf inc mov test scas mov cld inc xchg sbb inc les data16 mov lahf stos and testl jp xor imull mov mov add jecxz cwtl es pushf mov stos movsb lods das or insb shlb dec test push pop ljmp jg dec daa mov cmp jmp call bound sub invd mov cmp xchg inc test jbe call call test cmp lahf sub or push mov xchg cli cmc dec int3 aad mov add popa je int into movsb inc mov arpl addr16 ret push mov jb sbb dec (bad) je xchg fnsave jge mov int cld das cmpsl lret enter movsl lcall insl adc (bad) inc loop mov push insb icebp inc ja sbb ss xchg cli sahf add mov movsl (bad) decb outsb add cs dec xor bnd imul inc inc xchg inc std add pop rcrb push enter mov push int3 inc into test call push cmc cwtl sahf jecxz call jne aad ljmp mov push test xchg movsb jbe mov mov lods in mov (bad) dec cmpsb and das insl and popa lcall push aaa in mov jae and xchg xor ss icebp out movsl sub mov nop mov fmull push dec push mov dec inc loopne cmpsb add mov sub (bad) dec fiadd gs cltd pop data16 in pop idiv push mov mov ljmp fbld daa xchg mov and jo mov lret lahf xchg add dec sarl shrl cmp xchg fwait xchg loopne test ljmp pop mov add or aas inc (bad) mov mov iret cmp es dec adc into push imul leave test sbb mov inc fbld dec push pop sub js push cmc push jg or in insl inc cld dec fsubrs in sub xchg or es sub jp jecxz push enter cmp inc cltd ja mov scas imul int cmp xor fsubrs daa mov xor aas (bad) (bad) jl mov rcrl pop test insl add sbb xchg scas shlb mov mov sbb insl add lret imull sub fwait xchg pop daa mov aas aaa das inc or push xor ret arpl js loopne shr inc call pop out xor sbb jecxz cs ret das loopne scas cld sti and movsb jns jmp xchg pop or cmp divl push xchg insb jbe fnop es stos sbb xchg inc mov call add outsb add lock mov enter mov dec sarl loopne test sbb lods mov add lock pushf cli (bad) xchg jp aam add sub pop or pop lods aam mov mov idivl and imull aam mov sbb or push in addr16 mov and lret ret mov add add mov inc sub mov pop jns push mov jge sub pop or lods aaa and fist inc jle daa sbb bound dec js repnz push scas jp pop rcrb dec repz out lods or adc arpl add cmp outsb add jle lret push xchg adc mov or or add call pusha jns jge sbb in arpl jmp jge adc jno,pt std xchg dec pmuludq fcmovnbe jp cmc jp test mov mov dec inc xchg into (bad) (bad) jno cs jbe icebp scas cltd sbb mov negb cmp scas arpl outsb xor inc xor popa (bad) (bad) push or lgs imul mov mov mov cmpsb outsb cmp into aaa (bad) test ljmp mov cmpsb xchg xchg pop (bad) pop inc js popf repnz popa adc jne mov out pop xchg xor cmc test pop hlt (bad) jp cmpsl mov push push push fdiv test ljmp out dec scas adc add push (bad) nop cltd adc mov ret xchg call shl fnop adc daa int3 cmpsl cmp jae or lea xchg (bad) cmc xchg icebp pop adc add ffree push jnp xchg bound sarl rcll pop ret dec test adcb jno icebp mov sub cli cmp add inc jae addr16 adc and lahf iret test (bad) ljmp sbb pop sbb out jg (bad) (bad) dec (bad) ja shrl mov ret sub push mov xor leave xor lea and int3 jae xchg sbb loope pop cli outsb add cmpsb mov into iret cmp loope pusha dec push call sahf or in aam push in add xchg cmp mov dec das (bad) sbb xlat mov push aas ss or xchg jl pop and mov mov adc ja push ds ja inc pop add add cmp mov sub cmp adc jg cmc cltd pop and cmp pushf pop push sahf mov or xchg push insl xchg outsb fmulp xor (bad) rol cmc or outsb xor xchg das in shlb dec repnz (bad) aam or ljmp sar push push imul jle in jnp rcll cmp add or in pop cltd pop test mov add push roll jnp add inc (bad) loop dec adcb cmp mov fs test scas repz ja addps pop add pop jge aas or arpl and adc or fbstp icebp xlat lds shl bound and xchg push push fldcw negl stos bound sbb mov fnstenv outsb int3 in in sar pop push pminsw mov test xchg test dec movsl sub orl in mov inc mov insl push add mov mov pop pop dec pop add jnp gs (bad) adc cli int3 in (bad) mov and dec jo (bad) ficoml lods or add test sub xchg inc and xlat adc addr16 adc das mov add jno xorl je inc sbb lcall add loop in mov inc leave data16 mov add cmovb gs mov mov pop std push lret and xchg dec sub rcr int stos insl sub xor ljmp xchg pop popf mov push push fwait mov cs dec jmp xchg test cmc pop or loope mov addr16 rorl sbb mov jecxz (bad) cwtl mov xchg jnp add pop sbb mov testb and cmpsl (bad) jge mov mov fs sub loop daa hlt les push pushf sbb (bad) adc mov sahf aam enter mov cmpsl and jmp enter push push ret fwait outsb notb (bad) lods push xor fcmovnu add outsb into nop fbstp sbb mov scas rol fiaddl and arpl mov sets xor fadds xchg movsl lock inc add lea mov out xchg popa rolb mov aas lods in in xor mov cmpsl std jns dec or test das mov (bad) shrl repnz inc addr16 and lods push in ja adc cmp lods rcrb pop adc or jg aaa pop fbld in mov jmp shlb push dec rolb mov insb add add pop pop ja movsb and ljmp or leave mov mov (bad) push ret or mov adc out insl inc mov inc popa mov rcl test xchg fsubrl cmpsl popa cmp push cli xchg call sub jae aas cmpsl or in fldcw push push (bad) repz mov pop inc or sbb push add sahf popf xor push cmpsl ret repz and sar inc popa mov cmp mov stos adc and ss call cmp mov dec data16 cmpsl push stc sub xchg lret and pop and in (bad) scas pop (bad) pop push (bad) pushf dec addr16 (bad) sahf mov cmc int insb cmpsl xor or test push or popf aad jp xrelease jmp push xor mov mov xor ret or sub out mov jae jno xor mov push inc push dec bound adc cmp gs push xchg mov adc or inc push movsb (bad) fld pop out dec les pop int jge in cld popf mov push inc mov pop hlt cld mov mov push pushf jbe mov divb gs in insb ljmp std out cmp pop mov jae cmc mov insl fs cmp adc in call add std push dec push and movsb push sub pop dec mov (bad) jb sbb adc fdiv push test sub fwait push rolb inc rcll (bad) push idivl mov scas or push test and (bad) je test out cmpsb add hlt mov lods jp loopne mov fisttpll test and xlat push ja jae sub add pop bound in inc mov sbb test repz mov idivb mov jl mov test mov dec aaa lcall scas lods xlat fdivl adc pop pop dec fistp jne lret mov adc jmp arpl mov push shrd dec outsl jecxz cli mov adc dec outsb or push xchg call xor and dec inc xchg in out mov xor dec outsl les rorl push cmpsb xchg or add ds fisubr (bad) test hlt jnp stc push mov test xchg inc mov fistl lods and mov cmp add loope mov das cmpsl ja sti leave test xlat xchg push sti dec mov stc test out (bad) sti repz mov test loopne or add arpl mov test (bad) negb call jl inc pop mov ret (bad) push ret call (bad) pusha cmp xor add sub pop jg (bad) lock inc mov movntq jb dec lods inc out pop pop (bad) fnstsw test add or sbb in and arpl repz and sub test iret loopne mov sub cmp (bad) lahf ret dec cwtl out push xor je cld add sbb idiv push out cmp mov cmp fstpl test sbb fildl sbb pxor sarl inc cmp fbstp xchg aad xchg sub aas pop stos dec xchg mov ss or adc lea mov out pop in push or fistpl test stc dec js sub dec and stos mov in rol (bad) and loopne push aaa jecxz pop or into pop or cmpsl dec outsl and xor iret movsl fistp add mov mov enter sub xchg in mov cmp pop ret frstor mov cmp imul dec cld fbld (bad) imul fstpl or lds mov lock test in push pop in outsl jo rcr push mov sbb inc mov adc cs fldenv dec push lret dec push xchg mov popa divb cltd dec and test cmp test stc cli aam sub (bad) (bad) or jne test loopne jnp pop call popl cs nop pop insl push ja popf enter or pop add adc int lret imul pop adc push lds add rclb inc pop add adc push aad jno dec and aaa adc dec dec and adc iret int nop clc bound hlt pop sbb jecxz sub xor xor icebp pushf push xor add test arpl loopne movsl outsb sbb iret cmp icebp jb fldt mov cmp fidivl jge imul (bad) lahf std (bad) mov (bad) movsw pushf sub jns (bad) pushl fs int3 xor bound test inc adc (bad) sub cmp imul pop repnz dec sahf rclb adc xor mov and ljmp (bad) mov in (bad) mov fldl mov mov pop stos sbb (bad) mov mov incb aam fwait sbb insl popf xor mov pop jno mov jo jle int mov sub pop inc xor int mov adc jae inc xlat leave push fs xchg and pop cmp adc nop push lret pushf inc sbb les clc fmul in push in sub cmp mov mov lret mov out mov repz fcmovnu popa fidiv pop popa outsb mov mov rcl sti push into xchg lds enter cld xchg mov pop addr16 icebp movsl sbb (bad) iret and pop xor (bad) mov sub sub mov xchg cltd lcall rcll adc pop or (bad) xchg ljmp (bad) cmc jno xchg add pop aas push xchg call dec cmp lods or out mov imul push cltd sub mov and pop or and adc jle aaa mov icebp mov pop pop push inc mov cmp mov mov or popa mov imul jle push (bad) nop aas call xor pop jecxz pop leave xor push das repnz js pop orb adc les adc fisttpl popa (bad) lret popa jecxz call fcomip pop (bad) inc and (bad) adc (bad) cs les ss into lods frstor xchg inc mov jg mov xor icebp call inc pop cltd scas (bad) dec lahf sub push stos xchg movsb loop lods movsl add mov cmpsl mov leave sub aam (bad) out pop mov ja add out add aaa stos adc (bad) ljmp inc mov adc mov and xor mov jge mov cwtl call xor mov inc jnp pop idiv pushf subb inc sub jge or mov (bad) xchg aaa pop popa imul clc test xchg mov sarl lea lock add mov inc pop push mov sub ds (bad) cmpsb fisub dec enter mov push mov out aam aad fcompl xor sbbb mov push add push bound xlat sahf adcl jle jmp test das mov lock or shll repz inc inc pushf xor loop iret pop cli mov mov dec aam mov mov jmp mov aas cltd cli adc imul div (bad) lods cmp outsb jo push inc cwtl (bad) loope push mov mov ficom mov pop xchg and xor mov sub jae stc push sti stc or dec xchg sbb cltd imull in mov push lock leave dec stc cwtl (bad) push fdivl test xchg popl data16 je ljmp dec add lret xchg lock push repz xchg lds test jg jbe and lahf sahf jmp jnp test fnsave pop cmpl std pop lahf fstpl jp and mov (bad) push push mov push jg arpl push (bad) leave test dec adc repz das ja cs push and out stos bound sidtl lcall mov mov mov sub push in xchg cld icebp es (bad) in (bad) jne sbb int3 pop cmc mov (bad) fbstp stos jp sbb mov jo xchg inc add ret xchg jle or notl pop aad sub loopne inc (bad) or xchg add mov inc lahf movl or push arpl call inc hlt mov iret ja mov loopne push jge fcmovu lods xor outsl xor cwtl pushl subb lods xor mov adc aas loop inc xor cmp js test pop lcall les clc std lods scas xchg dec jne aam bound sbb push ss mov add dec mov add out inc aam ljmp jecxz notl inc pop call adc cmpsb clc cltd call push pop mov mov jmp pop mov in sub insl insb xchg (bad) call push (bad) jbe test fwait push pop out aas pop cs jne orb add cli outsb negl int3 out lret (bad) push in fs stos pusha sti and sbb xor clc mov sbb leave js push cmpsl sbb rcrb adc and push dec jp jns call cs inc jg add rcr popf pop pop push adc or in in sarl (bad) xor dec jg clc lret sbb or loopne popf jae push cltd into and mov mov ret (bad) cli cmp jno (bad) pop jno clc xchg sub inc sbb test xchg jge pop mov ja dec cli in add movsl cli mov cmpsl mov mov xor sar rcl add std in nop adc jne nop movsb in sub dec loop pusha sub lret xchg (bad) jb stos fistl dec into pop inc sbb lods push pop call mov sbb inc xor cmpsl out xchg jno in jp xor out jae cmp sbb sub xchg daa addr16 inc xchg icebp or and cltd mov movsl xchg repnz arpl je stc sbb jbe cmp mov enter mov pushf inc loopne add mov gs test xchg mov jo out outsl mov fcomi cli mov cmp cmp out xchg push sbb fdivrl lock dec and test test xchg jbe jge and jle (bad) imul xchg push out sarb in mov or lahf jne mov mov sub sti jge push hlt inc xchg rcrl push xchg and adc stos shrl (bad) movsb aas sbb or clc mov push pusha jg stos lock sbb cmp lods fst jo jno,pt in ret int out jg pop add shlb push cmp adc icebp pop adc ss pushf test jl adc ror mov int3 and jg (bad) jmp ss or insb push pop cmp outsb sti scas ret mov insb enter dec xor inc sbb scas subb xchg lret cmpsb aad subl push pop ss popa mov scas ja in in push ljmp sbb push jno sbb jge cmpsb mov int3 (bad) jbe add sarb lcall jno xchg push sub nop sbbl cmp aad or adc mov das pushf inc xor subl sbb push enter call or add mov aaa loopne in dec pop sti lret jno xchg jp fnstenv mov ds nop sub xor sti xor push fwait sbb (bad) ja sbb mov enter ds nop ja test cmp fbstp fsubl push stc mov (bad) jg fdivrs adc test dec maxps push in sub leave and std cli test cmp lret cmp popf (bad) xor pop into jmp mov test fsubs mov cld xchg mov fstpl test hlt mov mov inc xor ja adc ficomp mov es dec xchg lret (bad) and pop idivl test bound sub repz js ret rcl pop pop lds jns adc scas repnz mov inc jae adc dec sbb xor xor sub stos xlat dec call and (bad) cmp pop (bad) xchg mov (bad) cltd cmp and sub inc sbb push mov jns addr16 (bad) hlt sub fs lea sbb add ds mov fisttpl xchg jb sbb cmp add adc add pop jl dec xchg arpl inc lcall push xor loope stos pop or mov pop aam pop out jb mov aas cwtl mov or idivl shl lea loopne test nop aas lret xor adc fstps push dec fiaddl jge push mov sbb jmp bound jg xchg fwait mov push or or lods mov pushf jno stos pop cmc adc adc jbe out pop mov add and sub loopne inc adc dec push lock mov add or (bad) aam push add mov xor push (bad) xor or scas dec jecxz mov mov enter xchg sysret push push or jl or mov push ret divb push ret cmp mov ljmp or jecxz adc rcrl xor mov sarb xchg std push push push mov cld movb loope imul push xor pop or lods xchg ss adc xchg or adc inc mov adc push cmpsl and flds in sub lret xchg xlat dec pop lock sahf xchg sbb sub inc mov repz js pop pop repnz test inc pop xor cmpsl lods out and sti sub sbb pop fcoms jnp add mov sub cmpsb pshufw orl bound test xor mov pop icebp call mov out or movsb mov rclb pop mov out arpl inc push scas xchg pop cmp ret adc or mov mov frstor insb mov stos scas and imul ret cmp nop lds ret push ds imul sbb mov and (bad) (bad) jmp cli arpl std xor adc divl aad add mov stc movsl outsl sbb pop mov add in jne shlb adc inc imul mov fdivp and mov mov sti push in xchg push sub (bad) jmp jns inc or jno cmp jnp jl or cs xchg imul in rcrb pop mov xchg inc mov lea sub and mov outsl int adc out ud2 pop lret cs jecxz mov sub ror push fcompl xadd cltd jg lea enter sbb in cmp scas adc ror dec jge test leave lods adc pop or mov cmp out jne adc test and out mov out lock mov mov out inc adc add inc scas dec mov inc adc dec jne icebp shlb push mov jo mov fcmovnb lret rolb outsb fs adc hlt (bad) jbe inc jne and xor fldl cld push mov insb hlt shrl and rcrl cltd cmp sub push push imul icebp push aaa dec push fmull arpl out aaa pop dec repz inc enter mov xor add jle int3 nop add inc hlt shr int int jmp fwait ds mov xchg shll or xchg sub (bad) and xor sbbl adc testl mov push hlt jns js cs xchg das cld test (bad) xor xchg mov cmpsb bound sbb and ljmp nop out and jbe (bad) movdqu mov ret jg cwtl jp fmull inc sub push pop xchg mov adc mov outsl cmpsl sbb pop dec icebp cvtps2pd push mov pop jns xor scas mov test lea (bad) cmpsb (bad) aad mov lock mov push xor icebp push xchg sub scas das test scas and es shll xor pop (bad) mov adcb mov mov out xor repnz xlat jns jb sbb add add movl or lea jle push xorb je xchg pop lret (bad) jns ficom adc and test push mov dec cmp add jbe call stc in std mov bnd ret dec out mov jle mov ficom dec adc cmp mov mov fnstsw mov push test or cltd sub pop or sub xor push xchg push sbb xlat push out bound push fsubrp cwtl cli jp adc xor mov pushf int3 (bad) scas adc dec fcoml or or dec (bad) jno jae jns inc addr16 loop mov outsl fisubl mov daa aaa cmpsb call push or and pop das cmp pop xchg insl inc scas and inc test jle xchg mov adc lret es adc jno jae jb sbb icebp dec pop mov aam test test xor iret jno xlat dec ja and in push cmpsb mov int3 mov cmp sbb xchg push movsl push roll inc imul leave xlat in mov adc scas adc adc xlat or xor jp dec or jne push rolb and aaa inc and cmp test and jg mov mov test dec dec je pop inc paddusw outsl mov gs cwtl pop mov xor (bad) xor imul mov ss mov bound mov xchg mov xchg push sub insb mov mov and ljmp imul mov aas pop cmp pop xchg adcb mov fcomp or mov pop shr jg push xchg add outsl pop ret fs fsubrs ret fcmovb or xchg dec and out outsl inc adc adc or dec rorb je divb (bad) aam iret and sbb cmc aam lret push add in movsb (bad) loope popa fcoms dec lods gs sub popa jnp pushf mov push in push lahf ret cmp insl jmp or fidivl add sub inc xchg add leave test inc bound push adc cmp add in pop cld adc je cmp push sbb push dec push jecxz loope or jnp (bad) adc mov insl push push jbe outsb sbb inc test in or add jmp jns push adc mov sub mov rorb dec jl cmpsb jmp cmc je xor and sbb push sub push (bad) cmp jp or sub rclb (bad) in push popa xorl xchg inc in sub xchg dec inc mov jecxz rcll and adc pop sbb (bad) mov icebp mov mov mov inc fisubr test add mov mov addr16 xchg insl shr icebp xchg add cwtl test outsb insb cli sbb out push shl sub fidiv arpl (bad) das xor sti (bad) jne adc in xor xchg icebp mov mulb push mov dec mov cmp ret and jl retw stos mov hlt jae dec stc jne leave jo mov push fstpt ljmp xchg pop xchg mov xor fnclex pop daa jns add aaa sti (bad) sub std jo out jecxz xor jle shrl add aad js fistpll inc cmp mov cld add or les jae mov push adc cmp (bad) mov cltd jecxz outsl push fs pop add ret sti cmpsb sbb out roll mov xchg cmpl xchg sub sub xor (bad) cmp sub sub sbb test push loop (bad) loopne pop cmp adc xchg mov xchg int pop sbb add or mov dec pop jg out jnp (bad) je leave sti lock pop inc jmp std imul cld stos sub sbb jno or inc jle add inc add push mov loop dec push push xchg scas lea push in arpl sbbb inc xlat or fisub or sub das jecxz adc cwtl xchg cltd mov and mov push push mov and rorl in sbb mov push mov in add fs call dec mov cmp jge push stos jl jmp add push movsb cmpsb (bad) out or and mov ss out cltd push push outsl insb dec jg mov in movsb iret out arpl in adc aad jnp pop hlt imul bound mov push push sahf inc mov xchg rclb mov push jg frstor sti xor insl pop jp scas mov aad add xchg jne je sbb sub pop sub and jne mov dec sahf add lcall pusha dec test int3 adc pusha add inc pop nop or (bad) cmpsb sub or inc cmp jle aam dec addl stos xlat loopne in add cmp mov addr16 dec fmuls cwtl rcrb push mov jle pushf jle inc inc cmpb lea jecxz outsb jae cmc mov mov aam mov adc xchg xor jmp xchg (bad) bound mov nop and jge or lret cmp out in dec (bad) nop lret jl or cmp test fdivp xor andb push lcall jmp jmp in incb xchg and mov (bad) nop mov out call lahf aas aaa in or mov inc jne dec cld pop sbb test or mov out lcall xchg add jno outsl arpl repnz jo fs dec repnz and sub (bad) pop in cmp pop and mov sarb mov push sub imul nop mov (bad) clc jle aas cmp jo xor push xor mov inc repnz jl mov mov jo sub mov push mov loopew pop mov stos ret outsb fwait stos les in mov mov (bad) fildll movsl mov jne je fmull inc inc cmp cmp jl bound lock jp dec sbb lea push nop sbb stos shlb iret mov dec mov (bad) xor mov mov jo mov imul adc sub push push inc mov test shrb repz sub inc adc xchg xchg inc xlat inc push lahf fsubr std mov push xchg aaa aam notl ja into (bad) incl repz add (bad) add mov cld cwtl mov push fstp cmpsl rclb sbb out xchg in add in jge ljmp int3 xor outsb xor sbb and insl popf loope lock jl xchg mov out dec mov movsb jne jge push dec jno jnp lret add xchg sar and add add mov (bad) mov jno mov lahf jno sbb mov or stos loopne sbb cmc dec sbb rclb aam loop add xchg or jno mov aad and xchg loope ret sub ja jno loopne ret mov xchg test sub sub popa fistl pop shlb (bad) scas sbb adc nop (bad) push sbb jp cld adc sub test int3 ret sarb gs xchg (bad) lahf sbb push pushf test xchg and sbb add xor xchg rolb pop push addr16 gs push add cli imul and mov lcall push mov inc pushf (bad) imul pusha jge mov cmc sub dec lret pop pop movsl les mov jb fldcw xor xorl insl insl outsl sbb jl (bad) sub mov sub daa sahf fistl xchg jne,pn or push mov sbb mov jnp insl push lret lods shrd rorb add out lock in xchg dec lock mov xor cli or fildll ljmp jbe add push dec inc iret mov add dec insb mov cli out sub mov add dec pop inc jg pop loop xor mov mov jcxz mov mov shrb aam jne gs xchg outsb test mov fdivs fcmovne sub stos or cmp aam in scas lret push add dec in sbb cli addr16 xchg fs or out pushf adc xchg and outsb pop jp add push outsb adc mov jns fs xlat jno std cmp bound movsb repnz (bad) mov ficoml loop pushw fnstcw sbb out and pop pop and adc cwtl lret bound sub divb cmp insl je inc cmp adc hlt js psrad jmp fwait ljmp xor aas addl pop lcall cld push add fcmovne std imul adc push iret movsb jne cmp xchg aas jl data16 outsl cmp adc (bad) (bad) dec sub inc push jne sbb leave pop mov dec fistp pop mov ds push mov sub inc mov sahf lods int3 inc outsb fcmovbe pop mov pop push andb adc xor int xor pop pop mov pop push bound jmp rorb test dec mul nop dec or data16 pusha adc fwait jl out and mov push inc lds pop add fldenv xchg jo hlt jno addr16 gs pusha jb scas or cmp fdivrl test push cmpsb xchg cs in push clc popf lret fstl aam dec xchg lret popf mov cmpsb or out mov jnp aaa pop pusha adc clc dec out adc cmpsl lds cmp lods cmp leave out sub xor cmp and addr16 inc popf (bad) push ss mov imul imul es sbb xchg mov test add mov push mov hlt popl lcall loope test jno mov notl mov repz or repnz jae popf fs in add stc xchg test aaa in (bad) pusha dec in pop bound mov xor inc leave mov ds lret das sarl pop and xor jecxz mov aad sbb jge or insl push jo inc dec sub sub sub outsb ret jle mov rcrl sub lcall xchg shrl adc pop xchg mov mov hlt scas enter mov into dec jo in push sub jmp sti push pop sar fdivl adc mov adc ds pop hlt adc (bad) lret mov clc jmp (bad) and jb outsb or xor or loop push testl loop push mov inc pop in pop iret or fidivrl movsb add mov cmc inc int add inc inc movsl jg push ror dec push out add mov sbb and int3 in inc pop sbb test out sub (bad) dec call in ljmp repnz push xor mov cmpsl and cmpsb in lea jle pop ss add lods push out mov inc xor mov mov pop repz divps in sub mov pop dec test movl fcomp out xor jmp dec sbb pop and xor stos and (bad) lock mov mov sbb dec push loope xchg aaa adc test mov int jle sbb cmp js mov stos imul insl mov clc aad fnsave in fwait in lock lcall loope mov aam cs push xchg fisttpll sbb mov jge clc nop popf lock loop xchg cld cs sub les pop rolb or mov iret pop insl mov adc aam xchg stos aad je adc xlat cld mov jecxz and push clc and cmp daa repz lahf icebp cli push sbb imul imul rclb ret xchg dec out aaa scas (bad) cld das xor js (bad) scas cmpl popa jo sbb (bad) xchg fisubl xchg and mov stos xor pushf and ja push xchg pop cmp xchg lock popf sbb in imul in pop add mov add pop popf xchg push or roll xchg je fidivr test mov je cmc fmull test jne movsl add outsl mov sbb xorl mov nop cs inc ds shlb das pop int3 sbb cmp int outsl sub cmp mov enter mov lahf out pop lret imul jg loop mov ficomp incl scas sub sub testb mov in pop dec add leave (bad) xchg out mov xor jne fucomp lock addr16 push clc or push push rclb mov out dec lds jp mov adc and out sbb xchg pop test jmp mov xchg (bad) (bad) sti sbb daa mov and inc sahf fs sub and mov push aam stc rcrb ds jg (bad) mov scas add xchg sbb inc xchg icebp mull lea ss inc xor and jb add pop mov dec mov inc xchg adc lods sti xchg pop inc enter dec adcl mov xor int3 and and out mov stc push push test sub cmp mov lods jno nop mov rolb jbe sbb jle stos pop push loope in fistpl mov imul int3 push and jb movsb pop movsb hlt test push aas jle das add call ljmp xchg (bad) pop (bad) xor enter out mov lcall jns or push jl (bad) mov add mov mov popf inc sub loop in inc jle mov sbb pusha idivl jne mov or pop cmc lds fdivr insb loope jae jmp cld out insb ds push stc mov nop clc js test das cmp je ja push mov sbb inc sbb pop (bad) jae mov int3 leave sub and xor pop xchg fidivrl adc movsb add cli movsl jge cs test push mov pop push outsl je jnp fs in or int3 cmp sbbl iret mov adc jae leave xchg xchg pusha xchg shll test push in out adc notb lock inc jmp cmp add jmp and iret sub movsb out xchg pop mov adc mov pop xor (bad) pop sub pop imul addr16 dec (bad) dec pop dec lods and lds sub call pop and hlt cli fsubs adc sbb adc push fnop cmp jno ret flds (bad) jb stos test add pop pop adc rolw inc add push dec adc (bad) repz add mov sahf push inc cltd movsb jbe in daa out mov stc push jg cli jb or inc aad js add sub push push loopne dec test out (bad) rolb imul jg inc jmp out push xchg xchg or out loop xor das jae jo inc add inc jnp dec (bad) leave mov cmpsb add xor mov aas push leave lcall fistpll add dec loopne loope lods loop jnp out fiaddl int cs mov out push and pop movsl lret or pop out lret popa icebp push and jb inc stc jge cmpsl cmp push or dec test cmp loop test stos xchg or pushf sahf push xchg pop xchg xor push or repnz push ss xor fwait rcl (bad) out test and jae sub pop dec xlat cmpsl (bad) adc jmp mov xor push repz push fstpl and inc lock lock dec and lret cmp cmpsb ds jmp aam test pop ja jbe sub mov dec xor cwtl test shr jne inc insb sbb call adc dec adc (bad) sbb xor sarl mov aaa sub aad xlat div ja addr16 inc dec (bad) lret ljmp sti nop cli enter jne pop jmp (bad) out pop pop or mov ljmp mov jns sub cmp pop lret jae inc pop scas cmc cmc arpl lods ficompl popf loop pop mov movsl dec xor adc ja add mov notl fstps mov dec stos jo aas push clc sub (bad) sar aaa dec stos add inc dec out dec std (bad) cltd add mov pushf mov xor sti cld mov push push dec cli pushf repnz pop mov rorb das ja ret in xlat mov dec (bad) cmp sahf push aad xor and hlt (bad) cmc push pop push cmpsw int push dec fisubrl or pop adc add addr16 mov xchg mov push fs xchg test pop push dec jb fnstsw (bad) shrl dec dec aam push xchg movsl or xlat and ja mov lods test inc pop mov xor xchg hlt jg popa fcoms inc popf scas add mov jns jl mov mov xchg setle dec leave lcall xchg rorb dec nop sbb popf xchg mov sahf lret je adcb out sub jg sub jb test arpl gs lret cmp pop add cmp adc jg shll arpl xor mov insl loop jmp js xchg add ds faddl inc jnp not shrl mov (bad) mov mov sub lcall push xchg pop push ret fucompp sub dec pop rorb pop gs bound sbb lcall scas cmovg lret mov ss pop mov dec push cmpsb xchg outsl movsl arpl sbb xor push leave call shlb sbb rol xchg push pop mov pop mov mull rcr dec mov int dec jmp (bad) loopne stos subl jmp ds test jnp stc in mov movsb adc jmp pop inc int3 cli xlat mov sbb rcll les les fwait loopne dec and bnd cmp pop rcll ljmp xchg jb rcrl cmp or xor scas jo sbb scas and mov jns (bad) lods popf inc outsb repz pop imul rcll jl mov inc into pushf leave nop lds js and fwait movsl or cli ffreep xchg lods aam sub add addr16 insl push push lret pop test sarb es or jp push pop fstpt xor sbb cmpsl pop rep je pop stos or (bad) pop lea jmp mov dec adc movsl int3 xchg mov mov call dec cmp popa jge inc xor dec mov lret adc into pop data16 hlt push addr16 loop out jne push jle sahf movsb xchg icebp mov jp jne lods push cmp push test fiaddl and into pop lret mov daa dec add xchg pop sbb xchg pop hlt std mov insb adc dec and mov jl xchg stc roll adc or inc ja shr enter push add sbb and push sbb cltd les andb pusha dec dec mov into jb test icebp add xor sub xchg or ja mov jnp ds sub stc sti push push push xchg pop insb cmc jne decb cmp out sub test and lods lret push arpl push out mov xor fwait dec cmp push dec dec mov adc pop xor xlat adc rcl jnp and fsubl clc shlb add adc pop sub jecxz pop and rcrb dec (bad) fsubrl int3 rcl mov dec push mov loopne xor cltd sub pop andl cmp jae add xor out fdivl mov movsl cmp pop aam imul in ds int3 adc mov or lds pusha mov cmpsl jle je imul incl aaa cli lds add sbb jbe adc jbe mov movsb in jnp call call (bad) sarb add (bad) mov pop mov cmp out subl popf mov lret inc test mov sub sbb sahf or lods out out aaa pushf xor pusha push nop dec movb imul scas mov std rol outsl xchg mov mov add cmpsl lret add mov popf loopne outsb popa inc mov int3 ret cwtl sbb enter je fstpl call mov shrb aam lods (bad) insb inc inc cmp mov cmp fidivr test mul insb mov dec xor popf sbb or xchg test js xlat mov fldl arpl pop and cmp js (bad) imul call fsub in xchg (bad) (bad) jmp sub inc jbe ja (bad) test and loop sbb fisttp cli cmp out push pop xchg jo fbld mov pop jp push jecxz jge pop mov leave int3 or lea inc lods aam insl icebp pop sti jmp xchg subl xlat into pop enter push xchg sbb mov std sub test aaa cmp ficom mov mov into mov sub roll test pop dec ds test jbe aas int3 xor pop xchg cmpl push cmp mov adc in fistl movsl cmc inc mov fsubrp enter push lock add addr16 xor xor dec jne sub iret dec adc mov mov xlat inc push sub aad jns addr16 inc cltd lock xchg xchg lds (bad) (bad) (bad) jp mov (bad) icebp das push outsb mov hlt lret cmp push call dec inc push pop mov push or (bad) mov imul mov loope add sbb or out hlt loopne aas fbld (bad) fdivrs in xchg into pop push cmp sti test out jo and sti mov xchg fstps (bad) ljmp xor sbb in pop out test gs in sbb mov sbb imul lcall inc lock mov sbb roll mov cmp aad gs mov mov cwtl jecxz dec mov sbbb ds pop cmp andb (bad) in xor ret mov in jecxz dec jbe push enter xor xor jp and pushf leave add dec xchg dec in or adc sub dec xchg in mov into movl test mov mov ja imul and incb jmp xchg pop lds loopne scas stc pushf ret sbb sub add dec scas lods out pop lds inc pop mov idivb jecxz in mov push push lret (bad) ror (bad) xor inc pop loopne outsb cli pusha sbb imul xchg test sub mov enter jo rcrl outsb mov mov mov mov fldcw lock test xlat aaa inc dec sbb sbb into imul mov or adc test mov (bad) xor or (bad) mov repnz imul je xchg aam lods pop jb sub dec mov (bad) mov mov fdivrs jbe pop movsl jle mov mov test cs stc out jne push lcall ljmp xchg cmc adc imul xor xchg inc mov mov sub pop cmpsb pop movsl xchg dec jp mov xchg fcomp xor cmc dec mov sar (bad) cld lcall (bad) inc jmp dec insl push xchg and xchg call insl pop sahf fs in xor mov cmp jl add (bad) mov sbb dec cmpsb lret xchg push and xor pop insb inc mov movsb loopne (bad) arpl sub (bad) push fadd into ret mov jae jecxz mov ja sub out pop das mov xchg lret sbb push stos int3 fisubr lahf (bad) scas push stos aaa xchg mov popf push xor push das jge arpl sbb xchg mov dec movsl cmp cmpsl cmpsb mulb shlb adc cld call or mov popaw pop in xchg xchg inc sbb in int fstps testb mov lea clc out imul inc push and xchg repz xchg in outsb mov jg pop lods mov mov xor insl inc inc mov cs enter mov mov lock rorl notl sub lret xchg jl sub stc xchg into xchg push inc xchg sbb sbb pushf out xchg popa cmp or xor and cwtl int3 cmp mov lods cmpsl xor or pop dec cmp xor or and or push xchg loopne cvtpi2ps je push dec das popa xchg insb mov xor add iret out xor or (bad) iret and dec push mov sbb xchg ret adc xor pop rolb in scas add (bad) cmc out xor jnp notb add sub lret mov mov xchg cmpsl stos insb (bad) and and push test jne neg stos in mov jno mov xchg iret stc mov cmp mov xchg dec cmpsb add mov mov hlt push mov adc xchg scas stc and xchg lcall aam sub scas (bad) lcall jmp ljmp fisttpl movsl add mov sub sub add rol cmpsl aas in xchg add mov mov mov mov push push lds mov iret pushf jg mov mov jae outsb xlat aad ret mov inc call shll or sarl cmpl sub sub jae pop mov sub outsl xchg hlt std sub mov int3 mov cmp jmp pop xor call sbb sub es lock xchg pop sbb inc push inc jg and inc cld mov mov sub loop mov add push pop push sarb sbb sbb ret negl fidivr lret fdivrs ret or fldln2 mov fisttpll and aas or clc leave orl sbb push test dec imul inc (bad) aad roll lock and sub cmp je fs sub out loop aad and fwait jbe pop xor xchg int3 mov in cmp rcl xchg fldt (bad) (bad) sub mov adc or mov or test call mov (bad) sub ja stos mov imul hlt nop mov pop out in xor in sbb shlb xor nop add adc ds add iret out bound mov inc ret jnp (bad) lret out sub aas mov ds jg mov lahf mov xchg jle cmp xchg mov fistp pop std movsb hlt jne in fidiv and push and mov imul les cmpsb mov hlt movsb sbb jecxz inc fsts (bad) fnstsw cmpsl js pushf pop outsl lret sbb clc int leave sub jno mov sub sub or jecxz and sub aas adc dec cli pop jnp fidivr std je xchg lods xor loope ljmp mov jno sbb mov fwait jbe xor sub pusha lods or push arpl adc adc xchg js xor dec xchg xchg aad negb aas jle add push pop out mov mov lock mov cmp lods (bad) push je enter nop sub xchg jno ds sub fisubrl pop jg mov mov pop pushf fisubrl xchg mov push gs std xor inc in into jp fcoml sub mov sub outsb rorl jnp jl mov adc mov sub push fwait lret xor sub aam mov jp jo lods cld mov add (bad) sub out xor sbb fwait nop mov loop lds cmpsl and in sbb mov addl mov mov test inc xchg int3 sahf in cmpsb pop mov aas sub arpl sbb in xchg outsb cmp sarl js sub xchg push mov les xor lret xchg cmp cltd sbb ss mov xchg js mov outsl outsl push jae or pop fstpl fisttp mov dec push addr16 cmp icebp mov mov jb jge mov cmp je add out inc pusha mov push mov rorl inc imul xor scas mov pop or loopne aam (bad) adc xchg xor cmp (bad) mull lahf insb test dec sub clc les (bad) divb pop dec movb idivl mov xchg lds fwait jg icebp cltd sub mov imul jecxz jp mov mov xchg loop add std subb and (bad) mov push jecxz orl pop outsl subb lcall push int3 push int3 pusha fisttp movsl out and and pop lret addr16 mov aam (bad) jo mov in outsb sbb add stc rcrb fcoms pushf leave adc (bad) fs jge mov mov mov int icebp aas push and stos outsl repnz or lds mull xchg scas mov cmp in or xchg add inc inc int3 neg adcl outsb mov in mov or mov into mov push pop mov scas shrl out mov syscall add pop out movsl push and pop cmp aad jmp ret cmp stc (bad) lret mov (bad) xor enter xorl sbb sbb fisttpl mov inc mov sahf or push cmp fistpll lcall mov out jle (bad) jns mov sti (bad) pop inc push xchg enter bts sti icebp ja int fstl lods mov mov lret xor mov cs xchg test (bad) dec inc mov fstps or jae mov adc xchg lret fldcw sub xlat lods sub sub jae inc fs int push pop mov scas or (bad) repz andl sahf push stos mov mov repnz int mov dec dec aad xchg ret add loope add sub cltd stos icebp dec dec push mov hlt lods push mov nop into pop add rolb lods sub pop scas subl sbb mov push add stc sub xchg dec popl aad mov (bad) pop cmp and mov jle pop jne mov mov cmp mov cs mov lcall lret sub fldcw mov or rcrl scas sub dec dec ss cmp mov loop (bad) mov mov lods jne clc outsb push fisttpll push std cli dec call addl fdivp dec sub sbb in fimul mov dec push add push xchg inc adc loope inc adc cmp xchg push pop int arpl rcll imul pushf xor inc inc cmc inc das cmp fmul add jno mov xchg int add jbe testl ja fdivrs mov imul jecxz (bad) xor cmpsb sub int3 sbb int3 mov or add inc (bad) jno xchg (bad) mov fwait lret daa jns call or into addr16 das fimul popf sti ljmp aad jns jb and xor sarl std je (bad) popf daa icebp sub out dec gs (bad) sub sub in sbb cwtl xchg and jecxz jmp dec je or mov adc out iret ja cmp inc mov lret push xor sub daa inc jp cli int sbb or and and pop scas mov jb stos dec adc fldl dec or das jb leave fsts in inc inc leave push add ljmp sahf frstor (bad) lret neg fidivl mov mov call (bad) xor cmp add fstpt xchg cld cmpb push sbb movsl ret jge loop dec nop push movsb fidiv cli sahf and mov mov das jl arpl push jmp jo cmp sbb pop jmp dec or push (bad) and sbb icebp xchg mov ds xchg push je dec sbb pop cld cli in scas xor incb cmpsb pop sti xor stc inc lret push movsl loope sub (bad) lret push hlt pusha xchg xor divb xorb cmp iret int3 (bad) imul mov jno adc inc pusha out jge mov std sbb loop rclb jbe aas xchg xchg hlt sbb es std adc jle dec adc pop into adc mov xchg push nop pushf fwait adc dec outsb aaa popf lods cmp add outsb and cmpb sub sti sbb mov mov int and mov mov fwait lea dec or sub pop jno (bad) pop aaa cmp pop push sub mov mov cwtl and (bad) or jmp xchg mov mov pushf js mov cs fcmovne mov dec call jns xor inc push ds jbe jmp inc sbb daa add fnstenv ret push loop sti rclb leave jbe xor inc push mov jns fldt adc push mov or addl pop repnz xchg mov fwait push ja cmp loope xchg sbb std aaa lds rcrb xchg xchg mov sbb sbb pop pop cltd test adc imul scas mov call das and or shrl inc (bad) push push xor int3 cs xchg (bad) xchg cs mov mov cmp sub and daa cmc je xchg push pop aad mov fucomp mov cmc xchg jmp or les xchg scas jecxz inc rcrl aam in jl xchg out jo jl cli and int3 bnd push jns outsl lcall cld les fs xor ljmp jno push into aas mov nop pop cmp or fnstenv inc or and pop adc jp (bad) inc adc mov scas mov popa icebp cwtl rcll shlb inc mov mov lock ret xchg popa cmp inc lods inc ret in jne jp mov xor int jg or out push sbb das shl inc in outsb jecxz inc and insb adc cmp out sbb add sbb push jmp out xchg cwtl insl int3 movsl sbb lret jb imul push pop adc lds icebp pusha push lea (bad) lcall mov jae mov mov pop (bad) addl rep lret mov mov into jp mov stos arpl das arpl test js and pushf popa mov push rorb xlat addb xchg or mov subl fstps xchg sbb sub mov cmpsl jp sub ja js fisttpll aas cmp test cwtl add sub hlt sbb rorl inc mov (bad) fldenv pop out std aam fdivrl in push hlt int cmp mov sub mov and data16 fstl in push stc fwait jb adc jo push lds rcrl inc (bad) arpl ret and mov shrl xchg jnp xchg cmc push xchg mov fstl pop xor fcompl inc dec xor dec mov jo shrb jle jb loopne pop sbb xor imul push mov out jle dec adc sub xchg sti inc and xchg cli inc jge in mov dec js sbb ret mov mov bound inc ds sti loopne xchg adc inc push and pop xlat out pop jg pop add repz ds mov xchg scas push ret aaa dec cmpsl mov fs pop movsl data16 dec push push loopne xchg jmp xlat jecxz push in mov hlt jg lods jg leave inc fistpll adc jo and sub push mov outsb and test scas adc test push int mov inc cmp or test and pop pop jp ds outsb dec add imul dec fidiv inc and inc xchg push cmpsb nop stos add ss and inc mov and adc and xchg inc cmp inc adc inc inc jg outsb leave sahf fistl or arpl mov mov push cld cmp xchg cmpsb mov cli fcoms push mov mov push jle push lock push pop xchg lock cmp xor or pop jno pop js in pop in mov mov icebp mov lcall sub cmpsb leave es pop ret cmp pop mov popa add cmp cmp gs and cs jbe loope xchg pop dec xor lret pop lods dec test fild ds mov mov test jbe sbb sub daa out mov adc lret data16 pop dec xor sub sub dec sub jbe (bad) mov (bad) mov jmp push push sbb mov in out aad cltd jns scas push imull inc lds mov add dec pop mov mov andl mov cli or cmpw mov (bad) adc ffreep pop adcb aas mov rcr in arpl jns mov sbb stc sahf mov push imul or fwait jle repz jg sbb fistpll iret jae and cmp mov xchg rcrl shrb mov popa add (bad) lret jnp pop adc xchg dec int xor add jne jb arpl ret dec popa cmp fnstsw out sub in sarl jl push fcompl push mov imul inc add lods nop int3 mov scas or lahf sarb pushw fwait jp cs inc push push mov sub test push jecxz sub inc icebp mov sarl ds imul jecxz mov popf jp incb je imul es cmpsb adc inc insl (bad) or int3 inc cwtl sti mov mov mov mov push in mov pusha cwtl lcall and (bad) cld dec cmp pop lcall jmp hlt mov push mov out inc imul lcall out aas mov inc sub xor sti orl sub cmpsl sti mov pinsrw cmpsl (bad) jbe (bad) nop lods (bad) sub fldl std pop icebp lock int (bad) cmc inc add lods cmp dec fcoml push mov mov or jns mov jno cmc iret bound mov loop out lods push add mov lods pop mov adc push pop adc mov push mov imul (bad) in fcmovnu (bad) bound dec (bad) cmp mov ret and fsubrl popf jl scas mov out adc sbb jo loope int3 sub outsl mov mov lret inc pop nop mov frstor fisubrl and adc sbb add jg dec fstps dec stos mov xor mov sti std xchg pushf cmp call jge inc xor push outsb data16 push cmpsl popf pop push lds icebp mov cmpsb xchg adc cmpsb inc and inc ja mov fstpl ds inc jl div jmp mov jne cli clc (bad) ja fcomps push mov out pop mov lret icebp leave xor int std inc dec scas mov and push scas mov fcmove arpl add inc dec in mov inc jmp add pop out dec mov cmp out inc rcrb and addb pop mov mov sbb adc mov rclb in addr16 jecxz inc loopne jmp addr16 or ss sahf cmp bnd push mov lods imul cmp sbb dec mov fxtract and and popf sub (bad) clc fild ljmp mov dec add cmpsb cwtl xchg outsl dec jge pusha (bad) and sbb jl adc repnz test pop jge push jo adc xor pop mov bound ss adc leave push loopne fstp pop cmp xchg fsubrs pop push shrb xchg (bad) mov cmp in loop lahf cmp cld sbb cwtl rol rcrl and inc (bad) aas mov mul aad pop (bad) jns,pt and xchg mov jmp sar scas add (bad) ja mov sarb scas and mov cmp std jae call in repz ss rorb mov pusha das inc inc mov mov cltd sub dec jbe mov inc fxtract pop cmp or test adc jns int push and ret or (bad) out mov dec out xchg test (bad) lret mov stos push repz add add cmc cmp lret inc or dec xchg (bad) mov mov xchg sbb je jl adc stc push mov cli (bad) in stos sbb push mov cmp data16 mov mov push or popf arpl lcall hlt and push test inc cmp xchg mov push cmpsl movsl int3 or jbe and pushf je clc (bad) cmpsb idivb jle cmovo mov add ljmp movsb jbe dec mov lcall pusha push pop testl (bad) cmpsl or adc push shl add xor sbb or dec (bad) or cltd xchg dec adc dec fldcw mov inc cmp jl,pt ss xchg jge push enter mov xchg adc mov fdivr or addr16 mov adc mov push in push scas mov jge push xchg out icebp mov cli ficompl mov mov lea (bad) fnsave lods (bad) ljmp stc ss jmp outsl mov dec and sbb movsl (bad) sbb cmp jmp push mov ja mov inc iret aaa pop int xor rolb imul and test jge fdivl ds in sahf push mov mov fbld dec push mov mov inc add fdivs (bad) xor mov cmp ret dec ret lahf es push xchg sbb enter xchg adc sub jl adc or inc imul xor popa and lret cmpsb ljmp ss pop clc mov dec sti adcl jle dec jge sub push inc mov adc ss xor dec mov cmc dec mulb insb (bad) mov or or mov int sbb (bad) lds mov (bad) cltd mov sbb pop popa popl sbb mov push inc iret into sbb dec pop movsb stos push cmpsb push add das iret dec push mov fcompl inc lcall mov leave movsb inc imul clc cmp pop and sub cmpl ficomp jge pop in sahf jb fisttp shrb pop xor mov lcall into xor mov loopne jecxz call mov insb addb mov lret push sar xchg into push inc cmp cmp sahf sub adc sub insl jl push pushf xchg cmp sub mov fnstcw or cltd inc and mov adc mov jo mov cmp xor push pop lcall mov test mov xor add je fcomps mov aaa mov mov sub dec push gs inc jns xchg cli (bad) cli cmp stc mov repz data16 mov mov pop mov cmc jp sbb (bad) pop mov pop mov bnd jmp enter insl cmp call xchg repnz and mov and rolb xchg mov mov pop insl push hlt in jne aas jo mov (bad) cli sub mov ja stos inc stos jnp popa mov data16 push adc cmp int3 jae push xor fisubr xor dec imul movsb xchg adc das pusha jnp je repz ja dec in leave sbb jo (bad) in xchg inc je jbe add xchg dec dec xlat mov aad cwtl mov inc sbb mov cmp sbb push fsts cmpsl jno (bad) je or in mov add xor sub add mov dec adc imul gs lea pop decb push and fsub xor and adc pusha dec dec cmp cli and xor (bad) push popf (bad) xchg shll cmpsl arpl scas bound (bad) jno ret mov test bound push inc ret and jb pop pop xor rorl aas ret scas mov add out and rolb dec leave loopne fldl and fidivr into add mov ljmp add xchg sbb nop repnz sahf sarb stos out repz ds inc xor lods xor add mov (bad) insl cmpsb mov adc shlb jge adc push sbb imul cmp pop mov sbbl outsb mov aad sub add dec sbb xor xchg xchg std lea int dec adc in dec xor sub dec pop or inc aam (bad) mov sub xchg inc loopnew mov push lock stos xor lret lods addr16 repnz lea adc out lea xchg sbb cld adc push (bad) movsb je add je mov mov sbb xchg in out adc pop (bad) sbb lret jnp dec and imulb fs and and adc mov mov sbb xchg shlb dec mov lret rcrl xchg dec or mov jp mov xchg inc ret (bad) push movsb xchg push or lods sahf jle imul mov lock aad sbb pop jb insb fisttp push dec leave push push fwait hlt test inc daa xchg ret push cmpsl pop fdivl es mov pop aaa paddsw loopne pop jmp hlt push and xchg rorb lret testl mov pop push sbb out (bad) sbb xor out jle jbe sbb pop pop pushf mov and xor xchg sahf sti lahf icebp pop push xor mov (bad) sbb sub sub (bad) int fimull rclb fldenv mov rorl cld es lock sbb iret push out adc add leave rcrb mov mov insb lods add jle jecxz jecxz addr16 xor inc cli test push outsb inc (bad) inc jg dec fldt test push fiaddl mov lret movsb sub mov (bad) fdivrp dec mov loope pop repz (bad) mov call mov loopne movsb and cmp and enter fldt jb test xchg mov scas test sbb (bad) fmull mov in cmp std es push and into jp,pt jns aad fdivs int lcall enter enter das leave inc inc orb lock xor insl pop sub out fst fs inc call add dec push jmp sub lock hlt mov xchg inc das mov and pop push aad push push cmc push das ficom push (bad) lea and divl inc mov loopne (bad) dec mov xchg xor fcmovnu pop add insb xchg add cmp ss arpl out rcll stos ljmp mov nop in in das push push js push pop lret and int3 xor dec adc popf jl push ljmp repnz dec test sti cli (bad) jno (bad) push jno jl mov call nop jg ds sbb add movsl sub fnstsw mov xor xor roll test mov into pop jle pop test mov or jmp fiadd push test adc subb popf mov fwait dec mov xchg cwtl jb fmuls in lahf daa xchg fbstp inc ror hlt push jne dec inc test adc movsb addr16 das push pop dec lret fwait shrb icebp dec pusha pop lret les in mov jecxz (bad) ljmp into fldcw lock scas (bad) pushf movsl sti sarl fwait ret lret xchg mov out lods rclb popf cltd adc inc and adc pusha cltd pop int3 mov es dec adc cmc adc dec push pop (bad) in inc inc xor sbb aad cmp xchg lods xchg xchg jae outsl popa roll out push outsb add sti xchg es fild push push ds shr adc mov xchg int or es pop cmp std cmp sub cmpsl cmp and out enter cmp sub inc push insb mov push add cmp cmp lods mov jle pop adc inc dec pop imul aam iret adc jbe repz xchg mov fnstsw push jb in jecxz cld jecxz adc fst loope cmc jmp test sbb jno imul adc lahf (bad) stc add inc test imul sbb mov xchg and lods jo lcall mov (bad) dec shlb pop (bad) cmp mov sub mov sbb cmp pop xlat inc pop lock xchg push movsb jb (bad) xchg mov adc hlt jnp fwait or out movsb out push daa xor rorb adc loopne cmp fs fbstp sbb cmpsl sbb add test flds mov pop jb (bad) imul cltd jno push jg mov mov jmp xchg or push (bad) lock es mov jl sbbl repz dec inc xchg sarl sbb mov xchg add pushf scas movsl jo dec mov sti imul aam in ds push inc push xchg clc pop icebp repz ljmp ljmp cmp mov sti lds adc or (bad) imul mov loop xor ja hlt jne aad sub push dec sarb (bad) outsb daa sarl test mov pop pop jge jmp arpl std loope lret (bad) sub fstpl cmpsb cmc pop lods jo fist vmovaps pop dec cmp mov fstpl push icebp or mov test lcall push mov jmp insb add push cmp or test out push sbb mov lds mov cmp inc pop pop sbb mov js mov loope hlt mov and lock fidivr sahf mov mov inc outsb xorb fmul aas sub enter and cli or pop movsb lcall push (bad) jge insb repnz js insb cmp mov jecxz jo hlt pop aas cmp push hlt out insl adc jo pop sub sahf jmp xchg and cmp push mov and mov pop sbb add cmp xchg xchg push out xorb hlt cmpl or xchg mov sub mov xchg inc jns mov shll jp xor push lret lcall jp lods jg (bad) (bad) sahf adc mov and adc xchg push clc cmp push mov cmp jae out fwait adc sub std fidivrl mov sbb dec and push insl cmp insb xor and aaa fisubr ret lock int3 insl mov loop pop add dec repz pop pop mov test cmp addb or scas stos xor sub mov push xchg push (bad) int lcall pop sub xlat mov shrb in rorl lods xchg xchg cmp (bad) icebp imul mov sbb data16 dec sti mov push inc pop xchg jp jno (bad) sbb js lahf cmp mov pusha into nop ss in lods icebp mov fcmovu jns inc fwait sbb jo stos xor (bad) cmpsb mov sahf (bad) mov push jecxz stos mov fsubrl std aam scas pop mov inc test into sub mov inc mov fcmovb (bad) addr16 ss clc xor nop ljmp loopne roll cmc and in or in push push and (bad) mov jmp add mov dec cwtl loopne sub sub in popf cld aas cld add inc or mov mov sub sub sub loope adc gs lahf xchg push pop mov adc xchg leave xor fdivrs dec dec mov fadd ret mov into xchg sti push inc out cmp lds cmp aad nop/reserved push add ljmp stos (bad) and imul je insl mov bound lds mov mov sub test jo mov sbb (bad) xor bound mov sahf lret mov xor cwtl (bad) (bad) xor aas pop sbb dec sub jmp push outsl jge rcr outsb or aas mov rolb cmp pop clc inc fildl lock arpl add mov loopne jnp mov mov fwait xchg fucomip and xchg hlt fsubrl ljmp dec xchg mov cli stc out mov aad push xchg data16 insl sub lahf (bad) hlt dec pop push repz es push add xor xchg iret lea xor mov (bad) adc dec in sub (bad) in or mov adc scas adc cmp hlt jne sub mov dec bound in push and xor xor std sbb mov movb popl mov push in or lock or xchg mov ror arpl (bad) js les and leave shl push pop leave aad (bad) out lods cld lahf in sub pop adc jne jne movsl negl or sub add ret rcr jecxz xchg jg leave lahf jb pop imul inc and pop inc sarl lods xchg bound leave mov xchg push dec sbb mov loopne imul stc (bad) cmc imul test jns lods (bad) enter mov faddp call inc sub push lock adc fildl fmuls loope jmp add mov jge daa pop pusha cmp enter push stos xlat mov out mov aaa (bad) stos add fdivrl pop mov out ret push popf mov xchg shrb testb mov jnp outsl rcrl push mov (bad) mov divb int3 aaa xchg dec dec jl andb xchg icebp (bad) inc inc shr pop mov (bad) mov test sahf fisttpl jnp mov sbb rclb xchg mov pop fcmovbe xchg fisttpll dec xor testl (bad) mov mov icebp fldl in ds sub stos mov mov stos ljmp sbb sub in negl ljmp dec clc mov out jns iret push pusha test or xlat push or int3 (bad) rcll call je jl adc sbb outsl inc fs mov inc mov jae jae movsb clc jle lret sbb repz sbb ficom (bad) xchg mov xor cltd cmc out out dec mov (bad) (bad) dec pop rcrl fcmovne (bad) jmp shrl xor mov xor repz lock xor in movsl lea fildll movsl cmp dec sub fisubr and addl and lea sahf sbb fcmovne jae adc (bad) mov mov sbb fisubl dec sbb jbe popf lahf push fstl add sahf sahf insb jb popa movsl mov xchg clc lods push ja das pop mov adc jl adc cld sub push dec stos out sbb movsb sar jl mov insl data16 test mov adc sarb hlt imul int in xlat lock lods shrl sbb and ret xchg imul (bad) leave popa cltd add (bad) mov cmp mov test add mov adc adc mov mov jae lret adc mov xchg push sarl jg vpunpcklbw inc imul aam cs mov popa xchg (bad) iret data16 sbb aad inc insl and insl jecxz iret cmp aaa clc sbb imul mov and lods mov stos sub mov push int3 push add cmp (bad) or repnz xor sbb mov fs xchg stos jae lahf cmpb jp mov aas lds dec sbb nop imul out outsb lods and out xor xor popa inc mov hlt pop mov adc jae movsl and call inc ja lds sub subb data16 repnz in iret push gs shl imul and ja add or lods push dec inc in movsl or push stos cmp lea lret enter int cmp insl dec mov cmpsl (bad) sahf pusha cmp or xor scas xor or jns xchg cs and rorb jae xor repnz sbb out adc push add dec inc data16 bound sbb fimull inc dec orl add xchg fldl (bad) mov pop add mov xor jge aad add pop cwtl pop xorl adc fs mov mov or cld mov pop mov repz push jle xchg sbb test jle jle mov adc push jmp xor xor lea imul and into xchg pop sbb push (bad) mov in xor repnz fmull push xor jbe mov xchg call je cltd out fdivl add (bad) je lret pop mov icebp wbinvd xchg lods mov aaa cmp push popf insb jno dec cmp adc push out pop push outsb sub pop or ss aad mov sbb cmpxchg push sbb jmp rcrb push mov jo push pop xor or jno xor mov gs pusha inc pop and inc and push mov subb cmp mov imul or leave mov jl xchg jl add sahf xor pusha repnz pop xchg int3 push push lcall dec sbb or mov dec push mov mov jmp gs es addb sub std xchg mov ja (bad) aam dec xor pusha das add imul pop js push test fisubrl ret jmp vmovntdq push mov jmp mov (bad) pop sbb xchg xchg enter mov or rolb fistpl mov sub subb inc mov mov cltd int jbe mov adc fbld dec push std dec lock int mov nop inc sti out jo pop clc sbbl add mov sti add mov leave jnp hlt cli add and fbstp addps mov fadds (bad) (bad) out or jg sbb out shr enter movlps aaa cld gs jo bnd jmp jno pusha pusha ret gs jmp lcall pop mov add repz pop or out push jp fildl insl dec call (bad) sbb adc and add dec ds sub lahf cmpsl adc aam adc inc sbb add test push xor and inc ja fistl cmp cltd jno test lcall xchg mull adc out dec enter lahf shlb mov cmp jmp (bad) in nop and xor sbb sub xchg sbb jbe clc int pop xchg cli dec adc or inc adc jecxz jo fwait ss nop xor dec sbb dec flds pop out mov test dec mov dec (bad) sub (bad) icebp push and jl jmp cmp sub and das dec add xor mov shlb in mov (bad) cmp idivl (bad) add lock out imul lcall xchg int3 mov xchg rcrb mov adc pop or das mull jb test inc sbb push sbb iret xchg inc in mov aad shll mov stos dec in fbld mov imull cmp pop mov xor dec (bad) lea std stc fs or mov mov xor test stc adc sbb mov rcll dec cmp pushf shlb nop sahf fldln2 ret cltd xchg inc insl lret push cltd cltd and add pushw iret rol lods pop dec sub insb mov (bad) xchg movsl test dec rcr push xchg add dec jle push add add pop (bad) (bad) xor loopne jp add and xor ss iret (bad) adc test pop std js xor ret cltd mov cld mov imul mov dec fcompl (bad) pop xchg mull mov (bad) dec aaa in out cmpsl cwtl xor stc imul outsl jns push or rolb mov jo or outsl or loopne rolb sarb orl loope or jbe jl mov addr16 jmp inc lods inc out jae (bad) adc dec lods mov (bad) add icebp jo mov sbb mov bound lods aaa leave pop (bad) fldl mov pop les add pop nop mov add addr16 jg jno push xor dec cmpsl cmpsl xor or lret lock mov xchg aam in adcb ficompl pop push dec sbb sahf jae xchg test aas aam pop or orl mov jne xor jbe add ret fmull pop or add dec rcll or pushl subl int aam cmc (bad) mov insb push call vmread add pop hlt push lret sbb scas mov je or lret dec pop push loopne adc and push fadds cmp mov dec out rorl xchg test sub pop stos inc mov into mov cmp fucom inc sahf cmp fisttpl or mov hlt mov adc push cmp push dec in jl mov rcrb lret dec push sbb insl cs add cld rcr out sub or push cmp or adc iret add jmp inc mov repz jecxz adc aam jge push xor fsts add dec mov gs fldenv adc dec jo and loopne mov out lds outsl sahf (bad) mov jp test outsl push add cmpsl (bad) cmc jl sti out cwtl out rol pop sarl iret jl and nop cwtl out jno int3 dec aas pop std mov add add test fcomps (bad) mov rcrb (bad) insb stc insb out mov pop and adc enter lods movsl pop stos movsb dec xor fldcw mov int3 iret mov sahf pop mov sahf mov xor mov (bad) xchg sbb imul adc loopne std ret (bad) cld in jbe xor dec inc xor ficompl out cs sbb adc in mov repz sarb push out push pop mov andl cmp push mov dec mov int3 xor popf pop das cs gs rcrb jo pop data16 repz sbb das in push fldl pop movb push sarb (bad) test scas hlt add push imul lahf fbstp in jg dec lret sar pavgb add imul cmp xlat test movsl fstps rcll pop xor push rol dec in cwtl pop cwtl cli lock dec xchg test aas (bad) pop add daa ljmp xchg mov jecxz jo pop fdivrl mov sbb pushf cmp scas int3 pushf outsb inc xchg or xchg cld add sti cmp scas stos movsl insl mov dec sub push dec push arpl pop push and idiv mov sub (bad) jb dec mov or repz mov ret pop pop push roll mov pop icebp mov xchg cld test sahf fs jl fimull cwtl jle xchg mov xor adc sub rcr outsb mov sti xchg push or pop std xchg movsl call loope (bad) dec idivl xchg sbb in pop lret pop xchg lret adc mov insl inc ljmp inc xchg das or scas xchg cltd cltd dec fdivrs (bad) sub and xor sbb xchg push sub jns iret jmp xlat or dec add pop shll nop dec loop mov insl adc cmc pop (bad) pop inc mov stos jb fdivrs push (bad) std xchg jno je mov aas inc imul inc mov cmc (bad) out test sub out hlt ret es imul jb mov out imul lcall pusha (bad) popa fidivr (bad) xlat out popf pop sub jle (bad) scas sub cwtl mov pop jmp jp ljmp jmp test xor sbb (bad) sti lret daa icebp mov mov pop pop mov push adc iret inc push pusha loopne mov mov pop fsub dec sub or adc cmp cmp roll mov (bad) fsubr pop cmp stc repnz bound aad ficomp pop inc jns sub fs pop fnstcw mov leave jmp sub repz scas mov jp adc pop sbb adc or mov movsl mov xchg cltd int lahf xor xchg adc mov ljmp pushf (bad) jmp stc mov pusha pushf sbb xor aaa in lcall (bad) add je and inc mov (bad) lret arpl push movsl insb popa mov adc and mov imull aam push and xchg add mov mov or or sub jns push dec mov insl xlat mov pop adc cltd inc pop aam nop ja stos jbe fbld mov (bad) dec dec or and mov rcrb mov sbb pop push pop or enter inc sbb jg add push pushf sti (bad) (bad) aam pop sarl enter mov mov ret add cmc orl and pop ljmp fcompl jo jg mov xchg (bad) (bad) jne,pn out push cmpsb fwait lods sub xchg dec mov add les insl call sub mov mov fcmove mov pop cmpsl dec inc out (bad) xor or inc and and pushf xor pop push fildll outsl mov cmp out dec jne leave popa push adc cmpsb test (bad) loopne mov pop (bad) xor push out lds mov xor sahf mov mov and scas xor enter pop scas mov ss mov inc imul notl jg or add insb out jbe xchg jle add orl inc adc mov in mov mov push add mov loope xor mov lcall loop mov sub or xchg mov sub loopne nop mov iret repz test mov test mov xlat out jge cmp mov leave mov inc dec dec or sub fs daa pop inc cmp mov fstpt test xchg jae (bad) push pop mov lock lock outsb push shl jbe data16 jns or jbe gs (bad) sub fcmovnb cmp imul ds xorb fadd lret in notb nop push outsl mov sbb mov mov xchg repz pop outsb xor cld inc nop cmp lret fadd xlat mov scas fdivr lret in xor mov loop cmp movsl fwait sbb jl jge push test inc shrl and popl jp out xor pop xchg jle jno pop mov aam lret adc arpl adc pushf xchg pop xor mov push xorl repnz (bad) push sti pop or sbb dec lods stos shr pop inc xor dec in mov pop mov pop dec or mov add cmc xchg xchg outsl pop pop je fisttpl (bad) loopne jge out jp int3 sbb push repnz lods jo add jge dec mov dec negl inc sub mov mov jbe push push pop jbe cmp xchg lds cltd pop inc cli jp or sub sub push mov push xchg inc or outsb add push test int3 push pop pop adcl sub mov mov jmp aaa daa pop mov addl mov call lods les fstpl mov push ret arpl lock push insb das add ret xchg add lahf pop xor mov movhps call sub fmull or fsubrl or or scas add in pop lcall aaa leave inc inc arpl mov fcmovbe jp mov lcall arpl iret mov (bad) fwait jmp pop out jg fiadd add es xchg mov lahf in pop and jbe ja js test add xchg negb imul sub adc aaa ret adc xchg pop inc dec mov cwtl (bad) cmp push adc pop stos push mov mov insb jecxz pop jae leave push pop sar lahf cmp incl je jecxz xchg (bad) stc push rclb xor inc test inc stos xchg cmp xchg mov cmp mov push loope in add out iret daa aam mov (bad) sub mov mov (bad) insb cmp pusha add pop and test pop inc ret mov push or decb or jae jecxz pop out jno push xchg mov push js cwtl cs mov sahf mulb addr16 pushf test dec iret dec aas mov popa orl adc pop (bad) jbe insb push fsubrl sub dec fiadd cmp pusha dec push orb gs mov mov stc ja pcmpgtw cmpsb lods push (bad) out leave outsl mov movsl fdiv cld negb jmp iret or and aas ds aam (bad) cmp xor imul push and push aas clc inc sbb or jae pusha xchg xchg or sbb sub cltd and or arpl rcr xlat divb pop inc testl pop lods outsl fisubl iret stc scas je inc ljmp movsl lods sahf or push mov cli mov jge les daa fisttpll add fildl xor in jb in cmp cltd dec mov sub sarl sub fs fistp add pop mov xchg pushf stc or aas pop mov dec push pop repz outsb xor pushf out inc jae repz out pop fwait push (bad) cmp insl inc hlt clc push out aaa out lods xchg cs ss mov dec mov dec outsl fwait pop jl jg scas push xchg (bad) (bad) sbb ret and dec add pushf adc pop fisub loopne lods (bad) push mov divb js xlat inc push lahf fistpl dec push das idivl lods mov nop and cmp imul inc jp push sahf fistl stos mov push cmp inc mov ffreep inc lret jmp add mov lods jne bnd mov and jno repnz or pop or scas inc fidiv pop push inc fdivs pushw cmpsb inc jns pop (bad) aaa sahf fmul and mov add cltd add mov cmp (bad) dec mov sahf xor pop pop cmpl sub cli push fs add mov lahf pop pop cmp addr16 pop js bnd shrb mov cwtl or lret inc in jo test inc adc mov or cld aas xor xor cmp jb cmp int xchg stc and cwtl adc in xlat cmp dec ljmp mov scas jmp xor cmp mov sbb outsl inc outsl mov inc push imul mov and lods sbb mov dec ret leave jmp inc push push test movsb pushf inc xor (bad) push pslld mov inc cmp or pop movsl jo addr16 jecxz aaa (bad) in add mov mov or mov jg daa sub xchg (bad) out in movsl imul push andb or lret mov jle ja push pop mov jnp mov sub cld pop xchg pop sub scas pop xlat dec cmc ret cwtl dec scas test xchg cmp out loope push rcrl pop cwtl sub sub dec push loope push in ds sub loopne push std nop sbb cmpsb cmpsb scas cli pop adc inc or pop jmp les cmp mov rcrb jl cli test inc and pop add add push int mov cmpl js xchg pop xchg cmp add pop add sbb lcall insl mov pop add sti pop icebp ret jmp xchg ss xchg retw jecxz decb mov scas xor and dec and jge aas sub (bad) (bad) push push loope jmp cmp movsl js xor test dec or pop mov outsl and in clc dec enter inc mov add xchg pop xor lea xchg mov xlat das add test mov jle sbb mov add inc cltd or pop push dec or mov inc je movsb mov jns cmpl dec mov and leave mov in stos ja test test mov (bad) xchg bound gs pop jge dec in jg repnz lahf and cmc pop fs sti mull pop fcmovnbe xchg jnp fwait jae in pop inc cmpsl rorl adc lds and mov sbb cld cmpsl mov mov call lcall adc sbb sbb (bad) mov call push imul dec add xor pop daa and iret cltd int fnstsw hlt jb lods popl nop out adc rcll jnp pushf pop jne test jns hlt nop jae les dec mov xor insl insb inc xchg addl shrl inc roll out out (bad) and js imul jb stos std (bad) (bad) arpl pop das or mov insl dec pop nop add imul icebp movsl push cmc cwtl xor jle cmpsl jb data16 push lret scas ds lea pusha aad add ds addl lahf movsb adc in loopne sar push add xor repnz fwait xchg cltd mov pop out test mov nop adc aam insb repz test push notl flds add orl lret aad sub jl inc mov (bad) mov pop push mov push pop mov xchg jg out test pop push jl add addl imulb sub fsubs nop mov into adc push or mov imul xor jne sbb pop pushf std (bad) xor lahf sbb imul mov mov pop (bad) std jbe dec movsb (bad) push rorb mov std xor mov daa jnp mov (bad) stc and jge mov or mov lods pop lea mov lds inc cmp and adc push js stc or mov jnp scas pusha movsb pusha jecxz xlat frstor mov cltd mov int mov call test or inc mov or or je (bad) pop add cmc lea and and fimul rorb scas pop pop xor (bad) and (bad) nop xchg or rcl inc rcrl jne lahf aam nop push xor lods dec test and (bad) pop sbb push std jbe mov das pop push add test je sbb ficom fimull sbb push negl out lret sbb (bad) fist mov mov mov push mov pop mov int3 lret pop cmp in mov jge cmp push mov sbb shl nop aas sahf xchg push (bad) cwtl or stos pushf std push and ficomp lds sub xchg lock hlt adc mov xchg (bad) imulb aad ret mov mov out and pop push lret push dec and out jmp (bad) fildl stos jp jle loop call aaa push out decl push sbb sbb add xchg aam adc add mov jle jle loopne out ficomp pop ret sub add rcr adc in mov sbb pop imul jno je dec inc pop ds sub sbb lods mov (bad) jno jae out xchg arpl xchg mov hlt (bad) or testl mov ljmp aas (bad) fnstenv int or cmc cmc aas imull je sub and es clc mov jne rcrb push and mov (bad) dec fisub clc mov out sbb push and ror call sbb pop (bad) push xlat lds shrl inc xchg xchg outsl xchg jo inc or xchg in das lahf push jae les mov repnz in pop popf (bad) ss xor std std xchg mov (bad) (bad) sub mov or adc (bad) mov enter mov jae nop (bad) cmp xor stos out rorb pop lock adc xchg divb dec repz mov (bad) fistpl jo repnz jo movsb fwait movsl fisttpl imul push shrb dec xchg mov loop jl (bad) dec push fbld inc cmp mov lcall cwtl scas add push xchg bound adc aas adc dec sbb xchg ficompl add pop cmp mov into fsub xchg adc add jno add sub sub out das adc lcall jl adc add cmp pop jg jg sub jl out mov sub or push or xchg push mov jno xchg lock mov lea xlat rorb fucomp push je dec outsb mov mov and leave leave cld mulb mov ret or sbb lds lock rcrb mov (bad) aam adc adc sahf or sbb add xor mov loope loopne iret clc inc in (bad) lods bound xor fs xor pop das aas cmpsb dec imul shrb imul imul mov mov lret dec call jmp scas stos jmp and mov dec cmp daa xchg pop loop movsb scas inc mov mov ret sbb ret lret leave or push and sbb jp daa leave test nop loopne jmp bound (bad) popa mov add pop lea xchg push dec cmp sarb jno pop test test das enter mov vpextrw mov popf mov outsl out xchg in add pop xor xchg stos nop cmp mov movsl cmp fwait mov cmpsb xchg fiaddl fisubrl dec add pop imul int3 cmc xchg das add add xor pop aaa mov sbb ds fadds jp nop inc jmp (bad) and repnz xor mov jno dec mov or adc ja mov fimull jo shl sti (bad) scas pop jo cmp shr and hlt inc or (bad) sub lea testl jbe add or psubsb sbb mov test adc xlat scas stos push add mov dec adc sub xchg push pop xchg dec cltd orb adc (bad) jg test sbb add sahf xchg data16 pop pusha cwtl shr icebp repnz frstor fdivl sbb xadd jns inc sub out je movsl movsl daa xchg xor jno xchg fwait mov ret xchg icebp sub push pop rsqrtps data16 pop push cmpsl jle or dec movsb or fwait jmp or inc push sbb adc mov sbb sbb pusha shll (bad) xor lds (bad) icebp jns aam sub out xor dec mov js nop cwtl fwait sub add aad sarb xor int xor cwtl xor call push mov cmp int3 xlat icebp addr16 repnz or cmpsb sbbb dec ret xchg cmp sbb or cwtl mull pop cld xlat xor pop adc popa into add push pop sbbl popf mov mov notb dec add ja jl xorl dec sub or xchg stos jp and and stos jae pop pop pop mov sahf je or sti add adc gs cmpsl subl scas and jne sub sub hlt nop repnz sbb fsts adc inc inc inc in pop data16 cmp addb mov xchg adc xchg movsl insl (bad) push aaa fstpt push int3 cli cmp movsl mov aas pusha insb inc imul inc ds test lock out mov lds loopne ds mov xor dec loop sbb fcom daa mov stos add jg jns mulb jne shlb jmp lock dec push loope or pusha daa push sarb aam popw fucom cmp cmp js fisttp jnp lret cmp sub je hlt fidivrl fisttp cmp mov mov cld or imul add push sbb mov stos sbb pop sub sbbl pop lcall popf (bad) icebp xchg pop pop mov fucomi jnp cmp push ret cmp inc je mov cmp sbb mov sbb hlt das stos dec sub jecxz shl (bad) sbbl xor sar addr16 mov pushf out fnstenv (bad) mov jmp push lock add xchg push cld imul or pop aad jmp and in cmp dec xor mov sub popa sub push in or out sbb imul jnp cli movsl aam cmc dec in sub in enter mov lcall mov std fmull fldenv inc sti mov mov lahf sub sbb pop test in fcomps add push fnsave sbb lcall cmp popa mov inc push sub je mov sbb mov fistpll in lret into cmp out inc lods out sti mov mov push mov sub out push xor in adc les or inc pop mov ljmp ffreep sti inc mov sahf add int3 aad jecxz out inc mov adc pop loopne push fist popa push insb in nop dec sub in aaa adcb nop cmpsl adc loope pop enter test sbb jge loope scas cwtl add jo mov daa pop cmpsl in fcompl and adc in mov pusha scas sbb fstpl pusha mov add xor cmpsl mov imul fsubs movsb in cld xchg mov sbb je pop ficom cmpsl fucomp push jmp movsl adc test cltd in cmpsl push cmp test jae shrl aas aad int cltd iret push sub lods ficompl cmc jae mov jne inc xor mov test ds lret fnstcw pop std inc imul movsb xor xor std incb in aad insb jle clc jae fmul mov push movl mov xor mov std lods cmc clc lret cmpsl add ds pushf popf data16 inc and addr16 insb ja jo mov cmp jp jmp fsubs pop and repnz mov xor loop or cmp cmc sbb aad mov jne cmc pushf jne shrl pop and out mov or adcl xchg sub loope jecxz loop test loope mov mov push push xchg (bad) jmp inc aaa aas pop pop xor es in pusha xor js insb leave js add mov fbld push dec jae inc arpl aam add or ljmp jl insl pop add movsb out push (bad) mov cli dec adc dec in outsl mov fsubl dec mov inc pop or fsts push ja out cs push xchg movsb int3 mov push enter xor out (bad) and and inc mov outsl push push popa pop sarl cmp stos inc inc mov fisttp int andl xchg cmp fdivl jl cmp cmp mul enter bound xchg pop dec mov adc icebp and scas movsl fs pop jnp pop mov fimul pusha fucom stos arpl mov sbb mov mov adc stos jnp and jg popf lods icebp mov add call fcom imul sahf jbe push cwtl xchg mov int3 imul inc inc or push ja xor sbb std stos push nop rcrl fcompl inc xor rcr dec sbb mov add lahf out dec test dec mov xorl stos mov fidiv (bad) out inc mov xor into sub ds in sbbl outsb out pop outsl push dec clc adc imul fnstsw popf lahf inc dec cmp (bad) aas cli mov loope out xor xchg es (bad) jmp jmpw mov hlt in mov test ficomp pusha sbb push test sahf je fidiv cmp mov or lret cmp iret into cmpsl cltd (bad) cmpsb mov loop cmpsb repnz fmul stc jbe dec mov sbb push sbb (bad) mov jecxz push test rdmsr cwtl js jmp sbb xchg out xor (bad) pop fsubl in xor adc pusha sbb cwtl cmp aas mov add xor popf addb insb mov in inc pop xchg xchg stos add xlat sbb jae inc fldt rorb mov orl aaa cmp dec mov shlb mov mov cmc enter daa fwait sahf push sbb lock daa gs scas into orl xor push xchg push jle sub and nop (bad) cltd (bad) repnz xchg scas adc xor movsb xchg test (bad) je pop lret mov fs test jl jecxz iret add mov inc cwtl into lahf lds mov pop repnz stc cmp pop (bad) hlt popa pop mov cltd into xor fucom and push loopne test or mov adc jmp pop push add push call aas inc adc dec sub stos xor jg lahf dec into out dec test leave pusha gs mov cmp jg xchg dec mov pusha cld add pop cld mov xchg sbb clc pop clc mov dec and stos clc mov inc mov minps rcr mov xchg jo sahf das outsl push jbe sbb push test xor mov (bad) mov movsl outsl pop ljmp push lahf pop (bad) mov adc scas lret mov mov xchg xchg loopne sbb dec lods xor pop cmpsb mov mov adc sahf add or pop sahf sarb jle (bad) in push add and cmpsb aas push cmp (bad) ljmp scas mov pop out add out rorb repnz add push repnz and (bad) sti mov fsubs mov push jb sbb or imul (bad) jl cmp inc imul pop popl stos icebp imul add push (bad) add pop sub mov jge dec out cwtl or mov addr16 mov inc lcall ds jmp mov push sbb mov js adc jne push sub xchg in jge out pslld sbb (bad) jg test pop mov ljmp popf cli inc inc or pop test xchg or jmp imulb js pop mov fimull repnz and decb pop cmp insb cmp inc adc int3 adc cmc xchg in pushf test orl jecxz into scas dec mov inc pop movsb ds aad in or nop mov out pop jmp prefetchw pop arpl add out sbbl enter cmp xchg popf mov jnp jbe inc mov jge cmpsl inc jae inc popa mov jo (bad) or scas mov and xchg pop cmp dec push inc stos jns lods test mov pop inc xchg mov pop inc or bound aad push and jns iret push ja pop jnp mov adc jmp cmp cmp outsb bound nop mov inc add sbb jbe cmp sub cmp cmpb pop xchg fisttpl dec push daa movsb test cmpsl mov repnz adcl xchg orl lods icebp mov xlat xor leave push cs repnz inc cmpsb test cld xorl adc and (bad) mov ljmp lret loop fmuls fnstenv das mov push pusha mov ffree in in push or imul (bad) loope dec jp mov in jl mov stc dec lods call (bad) jl and lahf repnz jl sbb add push outsl pop gs and nop cld aam adc inc adc sub test inc and das inc mov push aas fistpl es mov ljmp dec mov insb aam in dec repnz mov mov repz std push (bad) loopne sahf fisttpl mov cmpsl pop mov cmp lods fidiv test jmp or mov jo (bad) or and or or push xor mov inc cld call (bad) adc cmpsb out outsb sahf push aas cltd fisubl test jne pop and mov xchg outsl push adc mov dec movswl into hlt sti xor mov roll xchg pop in xor popa mov xchg out (bad) outsb push lods sbb int3 scas xchg jno lret enter cwtl loop jae nop dec push lods sub mov jle inc lock popa cltd jb test mov cmp adc inc dec push lods jmp ret lret lahf sbb xor ja imul lahf add cmp cmp stos sub mov or xchg loop (bad) sub push xchg add push push or jae mov jmp test mov cmpsl xor jp cmp jl pushf mov out cmpsb pop clc stc movsl adc jno sub lds (bad) mov mov jnp data16 fidivl dec add mov xchg mov mov mov cmp add dec stc fs loopne push nop and mulb nop call fnsave xchg lods and mov jns shrl mov mov aaa push into pand and pusha pop fdiv iret loop sti lods imul (bad) fcmovbe pushf mov pop inc ja mull and out mov cmp scas add pop je push (bad) mov push and push mov push rcrb sbb hlt test leave push push jecxz inc push popf mov lcall (bad) je outsl (bad) mov repz push xchg adc dec rclb mov fdivr daa bound inc and inc sbb cmpl xchg hlt into mov mov fldenv and imul xchg das int3 dec popf fwait lds jne (bad) std lret cmpsb and mov in pop inc inc mov sahf scas (bad) je cmp mov inc (bad) icebp push pop scas imul dec dec mov dec fmuls or inc xor (bad) (bad) scas sbb ss or jge into jl pop into mov mov or sahf pop push bound aaa scas lret pop dec js cs pop notl lahf mov cwtl push aad call imul je jbe mov (bad) (bad) negb cmpsl in push jo xchg loopne push jp adc dec sbbl lock sahf pop test das lret mov and fimull xlat jo push mov rclb repnz jno mov enter inc inc stc xchg icebp mov push inc push xor add fs nop xchg lea rcl (bad) pop loopne loope test mov lea test ja (bad) out xor test jb into lcall lock lret xor cli sbb cmp xchg arpl insl push xchg xchg ret and sti sub imul out or xchg push lret mov stos xchg fildll mov fstl iret pop cmp repnz pop scas fildl xchg pushf rcr jne (bad) mov sub inc xchg pop dec pop shrb loopne mov sub test (bad) mov popf pop dec in aam and sub push das push mov or mov test mov in arpl cmp mov sub dec jmp in push outsl dec push or mov dec jecxz adc jg push pop mov xor sub test xor mov cmp (bad) jecxz mov dec add add jmp mov rclb fsubs inc stc cmp enter fnstcw sar stos lret jl jmp mov push xor push dec cmp pop aas fwait jbe dec dec bound mov xor sub dec sub or jge sarb movsb ficom rcrb mov cmp scas mov sub xchg out adc add (bad) mov loop test hlt dec fmuls inc aad push iret jb rcrl imul xor aam inc mov bound ja enter sbb cmp (bad) lock test mov xor add xchg inc mov sbb movsb sbb xor arpl insb aad les jns sti and daa jbe adc int (bad) subb add int3 sub call pop xchg push push cwtl clc add push xchg lds (bad) adc ret mov movsb (bad) sub ret add daa mov stos sub out mov xor sub rclb lods in jnp nop stos pop rol popa notl arpl jb int mov mov aas push loope or loopne pop dec pop ret ss (bad) pop movsl fwait pop mov cld movb pop roll jnp out aas dec xor jnp in adc popa jle std adc jmp mov inc lret jg lret rol xchg movsl dec xor add dec fldenv negb cmp push fidivr jae movups jo (bad) stos jle lret xchg enter enter cmpsl push inc dec aas push lcall jns xchg adc inc sub and bound shll add int xchg outsb or movsb jle mov (bad) jae push push inc das jge,pn popa fwait mov inc fiaddl mov (bad) dec mov sahf lock xor adc pop mov jbe mov mov aas int bts pushf xor jp push js stos mov (bad) (bad) jno xchg sub mov or out xchg fsubrl xor xlat xchg adc (bad) sahf gs xchg mov in push and mov xor cmpsb inc xor in pop sub (bad) imul rorl les push adc gs les insb mov shr js and movsb dec mov add pop mov xor sbb (bad) cmp in lods xorb pusha push cld pop mov push enter ret xor lahf and jo enter shr rorb ljmp (bad) mov jno jmp sub sbb xor and jle adc and sub sbb loop mov sub push lret xor call in push roll mov xchg mov add pop nop (bad) mov pushf mov jl ret pop pushf lahf ss dec mov (bad) ds cwtl or and inc hlt sbb cmp push sub loop adc dec mov mov loope jae ss je jle lcall nop insb adc cmp jnp mov sbb cmpsl fcomps and add movsl lock xlat lock addr16 (bad) (bad) hlt mov (bad) test ja add imul rcll lods sub push and sti pop jecxz cmc shll pop adc imul inc nop dec lahf mov scas jecxz jle mov mov in pop fcoms jbe repnz test pop mov (bad) lret dec test fstps movsl push push add cmp mov push daa jg repz fmuls xchg das or sbb loop inc xchg pop test pop divb movsb adcl lcall fdivs inc sbb imul pop xor icebp xchg cwtl or jle ror js dec and pop mov inc or sbb mov mov cli xchg jno scas cmp test repnz bound xor push xlat mov std or xor test push jne sbb cmpsl adcl test sarl pop jns push cmp xchg stos out xchg (bad) outsb repnz xor andl and pop cmp push inc or xlat push mov das (bad) xchg pop fcmovnu lods add cld sub and (bad) mov test fdivrl cltd into xor in popa out ret loop daa cmpsl ret or imul cltd shl cmp leave fdivl hlt push pop push neg xchg or jbe hlt push cli sub add pop push mov and adc sbb sub cltd dec xchg (bad) (bad) enter mov jecxz xor int3 mov (bad) mov sar lods mov mov (bad) sti push jl int3 cs lret push mov and (bad) lock sub in dec and clc incb fistpl jne xlat push lock cmp (bad) bound push jge push jae jmp adc push mov call repnz adc dec cwtl sub dec dec xchg loopne inc lret fstp ret dec ret shll rorb cmp movsb and cwtl outsl mov frstor jmp lcall lret push push xor sbb pop or pusha dec xor xchg push jmp mov pop (bad) mov mov adc push (bad) rorl or push xchg jno mov stc je dec sbb xchg loopne lret inc in (bad) jne xchg fisub int3 (bad) sti (bad) fmul push lock ret sbb in mov leave lret insl in (bad) rclb int3 iret or rorl inc stos or push js cmp mov das mov inc or lock lea cmpsb mov aaa mov push push test scas mov aad pushf inc std cmp xor mov insb sbb das xor test xor jns aam xchg out fsubrl jecxz mov pop mov cld jmp mov sbb jns mov insl stos push pop jmp in fsubrs popa pop mov inc loopne jg test mov push idiv mov scas cs into repz negb and out mov (bad) movsl sbb aaa dec ja xchg jae mov clc fcomi loopne xor sbb loopne dec inc loope (bad) aas dec push ss mov sti repz nop loopne (bad) std push imul int inc imul cmp adc sub int3 dec xlat sahf out data16 mov pop imul push inc cmpsb mov sti int3 jns jnp cmp mov pop popa push mov dec mov lcall jae ss mov inc sbb jns arpl int3 and lods lds in jge sarl add jo icebp push xchg into mov mov dec mov xor push adc push xchg rol mov mul out out aad int3 js stc imulb (bad) ja mov xchg xchg loope out adc xor adc push daa or xchg or ret sub mov sbb sarl cmp and cmp enter pop popa adc adc les cmp adc cmp js lahf sbb push call mov xchg in inc dec scas inc gs mov or dec adc pushf pop inc or shl rorl dec addr16 and push nop xor dec fcomip pop cmc jb jne jo mov xchg xchg cmp jg inc xchg enter cmp or jb jp sub inc ja enter lds cmp test or mov out mov in dec jmp ja cmp arpl jb xor push adc loope (bad) in cs aam test jp in adc fistl mov pop lods addr16 ret loop jecxz fs nop ret mov shlb cmp jb clc jb dec mov jp push dec sti enter dec cmp test in mov adc ljmp jl incl hlt sti lea scas out sub sarl mov dec repnz outsb xchg fcomps add dec (bad) daa inc (bad) stos sub call jae inc mov xor fldl lret xchg (bad) cmp lock xchg iret sbb (bad) cmpsl test adc repz sbb or (bad) mov sub fsubrl nop shrl in mov adc aam pop rorb aad mov fidiv mov cmp push out cmpsl dec fwait les movsb lds sbb mov and cmp fbld mov adcl fwait xchg and loopne adc je out inc jp sti xchg adc in cwtl dec and lea and mov fs je dec orl xchg mov in cmp in imul je aad gs loope cmp rol das sub jecxz fcompl push push and push jns mov mov repz cli addl xchg cs xchg cmp add (bad) push (bad) clc mov or xor jo fidivl movsb dec (bad) js or roll sahf xchg fld1 sub jae (bad) stos int (bad) jne imul xchg (bad) push lcall (bad) mov popf in inc repnz cmp stos stos lods lahf jo xor mov shll cmc push lods adc jns xchg dec xchg sbb jg sbb push test mov es pop and adc pop xor cmpsl pop sub jne pop push (bad) into cvttps2pi or pop xor shlb int3 and cltd rol fldl sub dec mov mov nop repz dec dec adc rcrb rcr add lcall std loopne jb inc jle add roll dec push (bad) test pop push mov push sub (bad) xor jo push mov and mov mov push test dec add cli shlb (bad) (bad) jnp add dec lcall in sub int3 (bad) (bad) jne mov pushf dec mov test ret adc push mov inc (bad) mov pop mov das push outsl cmp cmp cmpsl add pop into jp lock hlt pop pop mov inc in adc push mov fwait into mov xchg iret jmp jge or sti mov adc cmp cmp push es outsl (bad) sbb or aas fsubrs mov in jg shr mov add rolb fwait inc sbb pop lahf push add lahf add aad leave sub pushf or das and nop scas push pusha cmp pop popf test mov add nop into les adc into pop and jg ucomiss sarl shrb cmc lcall stc jne loop ds mov lock and std mov xor inc cmpsl (bad) into xchg (bad) dec xor pop cmc inc test or leave or lock inc iret cmp mov insb das sbbl (bad) mov mov jge add les aas lcall (bad) dec cmc enter push dec lds in popf push sbb int3 inc cmpsl push dec sbb sbb aaa sbb mov xor sbb test mov adc cmp adc and std ret add pusha outsl mov fwait and cmp jns fs lcall out mov jge movb jge inc loope mov cwtl and push adc mov data16 jnp ret inc mov sbb je jbe sahf lcall dec loopne out add imul inc lock fwait pusha pop jo loope lds cmp fdivrs lahf cmp adcb push std xor movsb cwtl mov jmp xor adc xchg sub sarb or push pop insl ljmp jge cmp call loopne sub faddl xor xchg inc jnp cmp cmp sub jle mov xchg pop (bad) mov and mov lods stos xchg dec add popa in xor gs xchg jo out lds and cli sub xchg out out mov (bad) sbb cwtl adc cmc mov insl jae sarl lcall shll jmp test icebp mov push pop lock nop jecxz loopne push sbb fs rorl outsl pop cmc fidivr fsubp dec cli in sti fstpt lcall push inc outsb jns bnd (bad) cmp sbb popa dec cmp mov lods push jns aaa push imul xor push pop orl scas jno fisubr mov mov or sub les sub in daa mov iret roll (bad) leave pushf push jg test jno mov test push (bad) fisttpll lcall jl xchg jmp out sub jne jmp enter (bad) jae mov popf inc dec mov adc mov jg adcl cmp cmc mov inc jb das lcall or xchg jmp ficompl sarl add xor ds cmp push pop jb popf add mov xor test and push lahf push icebp xchg popa mov sbb jl dec cmp stos (bad) enter lods push jbe sbb adc bound fmul (bad) cwtl add jbe sbb mov mulb jp xchg out repnz aas stos stos fwait outsb test mov adc test dec cmc jbe mov ret cmp mov stos and mov push (bad) es lods sbb adc pop imul jbe mov add testb dec cmpsl fptan jnp inc out sbb in (bad) iret sub lea push roll adc xchg call roll jg js xor xor punpckhwd imul cmp dec push mov pop int3 sub int (bad) dec pop mov adc mov rclb mov push movsl mov xor jae adc (bad) sub cmp xchg test cmp jo lods inc mov cmp adc inc test test and mov (bad) xlat fcompl inc sbb mov (bad) mov out aas ret sti inc fnstenv test in hlt inc jmp cmp cmp aas icebp add mov dec cld cmc and adc idivl mov mov sbb or dec mov test fnop and mov dec mov mov adc loop cmp adc cmp and (bad) (bad) mov xchg lret pop sub xchg adc xor leave xor pop xor sahf push mov mov mov jp cmpsb iret xchg int3 add pop xor mov sub movsb je jp inc inc lods outsl fstpt push sub mov addr16 sub sbb inc lods subl lahf xchg xchg dec cmp and cmp or mov mov or stos inc pop (bad) and xchg cmpsl mov cld or mov or pop pushf mov (bad) jo bound mov es outsl adc mov mov add ficompl nop mov into and xchg sbb clc outsl sbb push cwtl add and xor cs into dec xchg mov fnstenv iret out (bad) outsb ljmp inc adcb push sti in rorl xchg mov fsub mov repz mov bound lret dec ret movsl enter call push lods push and mov lods sbb out jnp xchg fs pushf dec dec outsb dec aas sarl sbb jp mov fcoms outsl xchg test (bad) or test pop push jp inc call xchg sub and stos jbe jecxz mov dec xor jg push jo into push xchg sbb sarl jmp mov cli lea loope fsts inc aas test out gs sti push fistpl mov stos imul mov fisttpll arpl xchg fbld stos fwait dec mov fistp mov mov xlat out cmpsb iret enter pop (bad) mov inc lods push push mov mov lock int stos lock xchg sbb aas aad add (bad) (bad) ja sbb add xchg push pusha dec lcallw xchg dec ljmp dec loop ret pushl adc sub addr16 jg adc mov ljmp ljmp rclb pop std xchg popf xor push pop sub mulb sub pop ja test js push js lahf push xchg mov cmpsb inc xchg pushf (bad) enter xor in aam pop adc testl sahf jno sbb mov dec stc sti sbb jne pop mov lret dec mov cmc pop mov xlat inc push ds sub jl xor fsubr (bad) je cwtl stc dec mov sub xor and movsb push mov je mov fucomp stc fs addb jne movsl push in or jg outsb xor or testl and movsl pop lds ja mov cld in inc sbb mov fucom jns stos pushf or xchg cmp in inc adc xor loope pop xor testl bound das sarb lahf lfs adc add fildl cli arpl fsubs dec mov jl (bad) add (bad) jmp push loopne leave pop call popf test scas inc or push rolb popl and aaa popa scas push int3 xchg aam cs repz adc inc push add notb jp gs daa hlt mov ss inc fsubrl dec push out test andb lods xchg jp sahf pop sub ret push jg in in lods outsl add mov movsb aas jmp decb (bad) push and adc lret imul pop sbb (bad) iret es insl xor pop cld adc pop sbbl or push cmp lret push fisubl add cmp jmp insl mov cld pop andl inc imul add stc lea inc lcall insl and cmpsl call (bad) and leave push loopne push xchg sub sbb cltd dec push insl xchg push push movsb scas in int3 loop sub paddw mov pop mov rolb shld rolb mov out and inc sub pop or (bad) adc or mov dec lea cs and cmp cltd pop bound jp je ret in mov jne sub lcall es dec in jae inc lret dec aam mov jl int mov into (bad) push cmp lcall adc pop stc mov dec idiv inc das (bad) cmp pop push mov adc imul pop jo dec sub sbb (bad) mov xchg xchg (bad) jb int3 lret int (bad) ds jle mov cmp add and into jl pushf xchg dec aas fsubrs clc dec sbb clc enter adc std sbb fidivl and es addl imul sub pop lret mov xor stos sbb std or xchg ss rorl pop hlt sbb mov push mov pop pop dec xchg push test aam inc in sbb ret mov sbb adc daa cmp sub stc data16 push pop ret icebp lcall push mov loop daa (bad) jno fildll loopne jb (bad) pop mov adc hlt adc subb or or ret insb fnstenv ficom and ljmp test xchg (bad) or dec add cld lods (bad) mov xor mov or inc (bad) jb cwtl fcoms imul addb mov dec or pop xor inc and iret sbb ret push mov rolb or test addb mov push pop xchg incb or int lods cli das popa jae xor dec jno repz aaa add cmpsl mov out dec mulb adc mov mov adc cmpsl pop cli lahf (bad) jecxz out xor xlat out outsl ret ljmp ja sub call mov push loopne cli mov push adcl loope mov (bad) lret mull pop add pop outsl rclb paddw xchg push and or stos sub (bad) je dec jecxz adc sbb push adc movsl aam jno mov adc hlt sub stc push cmp addr16 or cmp push popf clc out and data16 pop rcrl xor sbb jo inc cwtl dec and lret aad mov mov roll xchg lahf push pop dec and pop push push shr jp mov lock mov adc std push fcomip outsb adc lcall cmp xchg fldt or mov adc adc mov std or in sub out dec pop xchg arpl int pop adc insl cmc add je sbb pop test or repnz sbb pop int cwtl cmpsb outsb push out sti cmp cmc fiadd ljmp sub mov push (bad) notl sub int3 inc xor test pop cli outsl push dec pop adc adc cmp ds jge loope inc nop out rcrb mov pop push jae je sahf push lret xor dec fs push bound data16 stc iret mov repz xor push and and push insb (bad) jae sbb mov icebp sbb mov inc popf mov pop mov mov push loopne or std lods or mov loop aam cltd pop jge jg xlat pusha jae popl push jns aaa or dec bound push cmp cwtl int3 push ret pop cmpl inc iret imul dec stc mov xor cmp or popf push pop or sbb push test lock pop mov adc mov (bad) xor xor xor jmp inc ss leave jo sub aad xor sbb sbb dec cmpsl es push je mov test pusha jb mov adc aam xchg push push pop push adc cmpsl xchg int aas mov aad faddp idivb pusha nopl xlat jecxz lret call in jp add das in and popa sub xor push ja dec cmp sub xchg stos jae push inc mov adcl outsl mov movsb addr16 sbb cmp out orl cmc shrl sub fiadd int xor popf aad cltd jl adc (bad) pop xchg sbb jg iret ljmp mov jmp out jo inc adc in mov cli fsub sub loope fldl jecxz xchg loop ss rol xchg andl add pop loop and mov sbb andl lcall inc ljmp adc outsl ret dec pop int3 (bad) inc rcll xor int3 sub push sub and outsl pop lcall call dec pop mov jge dec jne inc mov mov sub repnz cmp jecxz cmp loop dec xchg cmp into divl inc jns pop cs jns mov dec repnz fnop arpl bound sub pop adc ret cmpsb imul (bad) mov out call mov xchg call inc or pusha pop arpl enter or jno test pop es push int test mov test inc test sbb dec pusha lods ljmp in jne cmp or scas mov jo (bad) out jo je jle fwait (bad) stos pushl pop int scas mov fnop pop daa repnz xor mov out sarl push scas mov mov aas adc push cmp test jbe mov mov xchg xchg xchg and lret or sbb sub sbb jecxz and push movb jle mov fmulp aad inc les sbb adc mov nop add ja push sbb out or jle pop cmpsl pop daa xchg cld (bad) mov aas mov lret push adc mov cmp xor cmp xor (bad) inc out out mov sub lock mov inc cmp jp int3 outsb and xchg ss push xchg int dec cmp out popa push rolb jo jae add mov mov adcl and mov add xchg lock jae scas adc dec lds fisttp xchg lock in xchg std cld imul jb fcomi pushf jl dec (bad) stc aas adc pop jbe push imul bound and sub inc or rcrl add xchg fiadd mov (bad) loop call movb sbb adc push pop mov mov dec mov lret test stc mov sbb add jp cmc mov adc inc and adcl popf jnp inc pop sub pop jge movsb jl (bad) nop fistpl dec fnstcw outsb aad cmpsl lret pop adc add adc sbb pop push push (bad) mov je fist mov jmp scas out arpl or mov pop xchg adc test xchg mov cmp mov inc aam insl stos lahf clc add mov rolb push pusha mov mov pushf nop sbb cltd ret shrb sub rorl jbe repz into push cs cmp getsec jecxz jecxz int nop jp subb cmc (bad) negl incl jl negb sub popa fnop fwait cmpsl sarb pushf pop idivl dec mov sahf cli mov int3 sbb sub shll cs pop push (bad) cmp std mov xor shrl sbb or mov sbb shrb or and mov jae les in loop xchg mov jo or or (bad) outsl outsl fsubrs lahf push fldt addr16 jbe xor pop aad pushf (bad) repnz scas sti movsb scas add or mov push mov mov scas sbb outsl (bad) and aam cwtl and mov mov cmp test incl ret loop mov imul pshufw pcmpeqd xchg mov xchg loopne ficomp divw sbb cmpsb jecxz cmp out lds addr16 sarl jae mov rcl mov daa xor test xor repz insl adc (bad) (bad) adc fwait aaa mov popf xchg pop mov rorb pop xchg imul and pop mov js aaa aaa adc mov js add inc (bad) xchg cmc push jo sub mov in xchg mov add ss fwait leave sbb pop popa dec push mov cmp scas pop test stos pushf shlb pop adc mov pop sub and push mov add dec inc dec addr16 pop aas push je mov mov mov add insb push fsubrl ret scas stc sub and jae inc test sub (bad) out pop pop insl test outsb sti jnp call pop jbe in jb or xchg sbb mov std sub shl jmp mov cmp int jmp mov or mov dec aam inc and (bad) es fdivrp push mov inc rcr ficoml mov sbb scas loope cmp pusha and ret enter movsb gs jns xor stos adc sbb enter add sub in inc sub out add jmp add jnp cmp mov imul out popl xchg aas dec xchg dec adc in mov movsl enter stc dec imull inc add repz xchg pop fsubl ds mov mov out lock and sub fwait clc stc inc push stos mov outsb (bad) jl dec pop jno imul xchg xchg aad jl push sbb ja fwait lock mulb fisubl bound cmp pop push in cmp in pop jns xchg adc mov push pusha cmp test mov dec jb (bad) xchg and ficom outsb ror pop lcall test push scas cmp adc cli adc and cmp or jno (bad) aad popa repnz nop cltd stos mov std inc mov pop inc pop (bad) stos mov aas sarl fs mov dec dec adc rolb cmp cmp frndint and sub and ret pop push fcoml test cmp fisub inc cmp adc mov mov xchg inc mov rcll les stos pusha shrb test loopne mov adc inc dec lret sub pop sbbl int icebp (bad) and out adc orl sbb mov out jbe mov jae xlat xor mov jecxz ja mov out pop cli pusha xchg add test in or movsb xor mov xchg in je cmp xor jge dec andl mov dec popa xor xchg clc jns mov or rcr xchg outsl mov int jecxz rcrl (bad) jbe mov into test js popl iret or mov push js outsb cmp out stos fnstcw mov jle jo imull xor dec pop or dec mov inc sub xor cmc bound mov sub xchg cli pop dec ds insl mov repnz icebp fdiv mov stc or int lods sub sbb aas stos mov pop jle out jg outsb mov cwtl invd jmp fcomi mov mov pusha fcmovnu or adc fistpl bnd cmp data16 jno adc out loope mov dec insl cmp jp mov mov pusha push scas xchg mov push adc enter cld mov js adc mov int3 mov jo or and push dec dec and sarl mov sbb inc sbb push das mov fadds xor fucomp mov mov pop xchg cwtl outsb movsl sub pop inc push hlt sub sub dec sbb in jle or and shrl test inc gs jmp cmp shrb bound les mov jae sub andb mov inc adc ret mov in and and test mov les push add inc push add (bad) lock sub loopne jecxz scas cmp pop jle jno jae cmpsb jno pop mov add sbb nop (bad) mov test cwtl (bad) mov fisub push hlt (bad) rclb push cmp add imulb sub lea daa dec inc adc mov sub mov fsts inc mov or dec (bad) lret test and lea and jo add sbb jmp clc shrb xor mov iret adc xor add in fsub icebp pusha adc (bad) out sub movsl adc mov fidivrl xlat das pop inc jp inc lret jb movsl xchg xorl mov gs lcall mov mul dec int lods xor mov pop or sahf sbb and inc fistpll imul push mov sub pop cmp jnp pusha mov xor iret pop out push pop bound sti jle cmp mov std stos int insb lock pop push lahf ror jns lock bnd adc cmp cli cwtl sub clc push mov into cmp mov int orw ficom sbb popf jmp js push cld push call clc cmp pop int3 or mov mov pop mov pop dec test mov (bad) out pusha aaa fnstenv xchg or dec out shlb adc sarl repnz call sub loopne fdiv inc outsb aaa das ret fiadd sub je lock insl sub jno or add lahf lods out inc ja movl add xor mov dec bound ljmp sahf inc dec push pop lret outsl imul insb lea cltd jp shr rcrb sbb stc xor xchg cmp fidivr int or cmp sbb dec add es movsl or fwait inc dec (bad) mov cmp and (bad) mov mov add shrb loopne mov mov mov fistp jecxz adc cmc insl sub adc sub add adc and and jle ljmp adc loopne out jb,pn clc stos inc and (bad) in cmp jg jle xchg popf adc outsl and dec gs xchg mov js dec jne inc jecxz out jge jle sub stc (bad) fsubl sbb or cmp js sub sbb push in mov push pop add fidivr sub inc adc js sub daa cs xor fist popa movsl mov xchg jge,pn call cmc push je push dec sub xor call jmp loope (bad) jb dec sbb add jle (bad) lret add lea pop jae or pop rclb sub dec nop pop cmpsl (bad) sbb orb fmul jge or out gs pop addb add jns and dec dec (bad) and adc addr16 push cmp outsl popa jg mov in nop add pop rolb mov jne mov jmp mov add dec mov iret cmp cmp lahf pop gs inc mov xor icebp movsl aad or xor in je lret sbb or mov xlat cmc adc adc jmp in cmpsb or shrb and out dec clc adc or in sbb sub stos xchg in cld mov loopne jno jnp faddl sbbl sti out ds pop sahf cmp orb dec or sbb and out (bad) rol fs cli and jg std pop and inc or sbb mov test sarb pop jle outsb test add ret xchg push fsubrl int3 pop mov adc stos and out jnp fwait adc sahf jmp repnz push mov push les jg jb (bad) cmp imul jl xchg mov rolb mov loope push sbb test sbb fxch add sbb dec ljmp jp and (bad) call addr16 push sbb addr16 iret cwtl xchg movb lock jns out icebp lcall mov rcrl dec pusha add test test lock ret sub pop xchg rclb xorl mov ljmp fwait xchg scas mov pop push clc ja sahf xchg jb xchg insb stos je dec insl (bad) in fnsave iret and adc sar cld xor ficompl jno mov test fistpl sahf sarl (bad) sbb icebp xchg aad and xor roll inc lea rclb sarb or das xchg xchg mov cli (bad) repnz fwait insl xchg negl sub xorl call push or mov decl add aas mov jmp js movsl mov pop lcall adc testb xchg pop cs add jno bound dec mov sti (bad) sub jo sbb pushf popf and inc xor (bad) dec cmpsb jns mov aam iret movsb sbb repz xchg jle mov xor push frstor jns cmp mov insb or mov push (bad) es out dec or dec addr16 lcall cld sub add insb push fmul loopne or mov xor stos push jmp add push push hlt add mov lods bound add (bad) mov add out inc or adc push xchg jmp mov pop aas and mov pop push mov cli cmp mov int (bad) inc xor in sbb mov scas repz add cmp xchg inc repnz xchg push loopne aad repz lret ja rolb in roll insb out adc mov jo aaa add push sbb xor arpl cs adc rclb inc (bad) mov xor nop icebp inc cmp sub sub (bad) or out push daa push loope jae mov data16 lock or fdivrl xor pushf push fisttpl in ds mov adc dec (bad) push arpl and int inc inc mov or adc mov popf push into or scas iret test mov test inc inc add mov fistpl mov je ret lods rcll push scas nop push jb add xchg cld repnz sub xchg and jle fwait push fsubrl (bad) or jae dec xor imul or in cmp push add clc xor push lret cmp bound and in xor xchg ljmp dec xor mov xchg and fldt sub pop cli sub dec xor jbe mov cld dec mov ss ret into les aaa loope cmp sarl mov enter repz mov jo repz add inc cmpsl daa mov push push shll mov mov push in xchg pop xchg cltd mov mov data16 mov mov sbb inc in xlat ds xchg add scas mov pop (bad) mov test arpl push enter lock inc jne loop (bad) rol sbb jae mov je rolb cmp insb lods nop mov cmpl cmp jae lcall (bad) mov aad and cmp out ljmp sbb aaa dec pop shrb dec fwait por pop jmp dec push add dec enter out pop jg mov dec and ja xchg inc sub faddl in or arpl fldl mov push into cmpsb jecxz test outsl mov push std jl addr16 int3 stos lret call outsb adc test js sar cmp (bad) jmp push or xchg pop jmp adc push cmp (bad) in mov xor mov fisubrl xor jecxz out sub mov jb mov flds movsl mov cmp ljmp add pop adc lods popa mov mov inc sti sub out test jbe mov (bad) scas subb cli or add sbb outsl mov mov ficomp push xchg or jmp and cmp outsb leave loop or pop fdivl fildll fidiv (bad) daa sub into (bad) mull mov add add or push or int3 incl add sub mov shld adc dec lea scas sarl shr sbb add sub push daa divl dec lods lds add xor stc es lcall scas or mov or mov adc and imul xlat jle lods cmp test insl mov cmp push cmp mov lds out mov sbb jne and (bad) sbb lahf cld aad cmp or push stos movlhps cmpsl (bad) lahf aas or push xchg push (bad) mov cmp sub leave sbb bound imul call call cmp aad sbb addr16 mov out adc fisub xchg sbb cmpsl push push (bad) aad inc jno iret cmpsl xor adc es xor add pop insl in jb and rclb xor mov stos int test mov das cmp jb mov insb xchg std fbstp scas pop adc inc test lods cmp sub xor js rcrl test cs js scas push call dec ret daa out or inc imul or cltd dec and adc fdivp js cwtl pop mov cmpsl lock loopne lcall mov loope sar inc insl repnz loop inc xor imul mov or cmpsb (bad) cli lea aas mov add shlb push push (bad) sahf jbe fwait add xor xchg stos mov jnp ret lds and dec fistl pop sub test enter insb sub in cmp lock aas cwtl or dec scas ret in sbb mov leave rol cmp cs dec stos cmc xchg mov cmp sbb jbe addr16 cmc pushf repz cli (bad) loope push pop lahf sub mov jns out hlt enter pop push ret pop mov pop jnp xchg sbb ret fcompl add push insl and pop das in cmpb xchg push adc adc pop orl test testb cmpsl lods (bad) lods sbb adc test outsb sub inc aad or mov pop mov sub mov cmp mov fcoml out pushf fsubr lret jno cmp pop add and (bad) xchg leavew clc les xlat dec add js mov out lods lds jge cli add ds mov mov inc push xor and mov dec je pop std repnz lahf mov dec dec or fsubp gs addr16 nop xor dec xor loop xor add mov pop in aad lret dec push sbb cld imul lahf (bad) push jb inc sar loope js push negl data16 hlt jl mov in add xchg shl test gs dec fisubrl dec and (bad) cmpsl ret sub push addr16 mov mov fs push daa add jns jl pop std mov pop xor out pop mov test imul cmpsb sbbl ret xchg je xlat xchg imulb inc push in idivb lahf nop adc xchg call cmp shlb push fnsave inc sub in cld shl jecxz adcl dec cmp jp dec nop push stos repnz cmpsb sub push sbb dec bound mov cmpsl adc fcompl in push pop or loopne (bad) push mov mov mov aas jne add jne rcrl pop push push lea mov in (bad) xchg aad sbbl and and (bad) test lods cld mov cmpsb aaa sub dec jbe jbe lahf cwtl inc imul ficom xchg ret cmp pop popa jbe push in or in outsl fsubrl mov or jmp jge mov (bad) ficom dec or arpl imul mov inc mov fs inc fwait daa dec xchg xchg int3 jb fmuls call inc inc mov dec loopne in or movsl dec mov shrl adc mov jb popa scas movsb dec jnp xchg xchg lea push jo fs pop nop pop test adc mov ret leave mov fwait bound cwtl add ffree and sarl test popa xor add xchg fcom dec pop xchg lock sarl and add scas (bad) out call hlt add jnp gs inc into and push cmpsb repz outsb sbb jmp mul dec imul out push pushf add jo mov insb adc add mov nop frstor shlb js dec jmp cmp daa inc jo xlat pop jp xchg test inc aam int pop je sti and imull fisubr push lock push and imul fcmovnbe add test insl outsb fucomip cld push push pop pop mov hlt xor sub xchg or lahf pop and add (bad) fstpl mov add sbb push (bad) adcb scas aas das cwtl cmp xchg call and adc (bad) pop jp andb outsb pop fsubs xchg push pop pop fisubr dec (bad) inc or or je mov push fcmovnbe andl (bad) inc push add outsl fidiv mov cmp pop call call loop (bad) mov xor mov cld mov and add xchg xlat test push (bad) lahf xor lcall test xchg add ja pop mov les push xor jmp and jbe adc fs (bad) mov inc dec jl rcrl pop mov je xor sub mov mov iret stos adc sahf adc mov sub jbe,pn pop je mov cmp dec sub mov loopne cmp lds aad jg sub jne ret in (bad) fucomip and (bad) out adc cmpsb loop dec mov add pop andl inc pop add inc xor (bad) aam scas ds jmp mov call jno lock and add (bad) xor or repnz bound mov ljmp mov call (bad) push xchg clc pop pop mov and push (bad) add leave push mov hlt xor push push push fnstcw mov xor clc sub ja cmp xchg push sbb test jmp jbe dec pop push fcompl scas call in jns add daa push push psubb (bad) iret push cmp or or sub mov fisttp mov scas adcw cld push call sub fistp arpl cmpsl dec jae or mov xor imul mov cs movsb mov xchg cwtl inc inc xor pop jnp out cmc cmp jg subl push (bad) xor mov lea cmp cmpl scas dec jle or test int3 ret cmp out lret in cmpsl pop iret stc (bad) push lods dec (bad) (bad) sbb movsl lods xor jne sbb fstpt xchg (bad) mov or cmp cmp repz adc imul stos dec shrb movsl sbb inc jae jnp xor mov rcrb lcall push cmp mov test mov pop pop dec mov xor (bad) (bad) outsl lods gs dec add arpl cmp call sub pop jecxz jl adc cmp enter fwait push xchg jo fidivrl fmull mov sub imul (bad) insb sub ret das ficoml mov in lods adc mov inc jno mov rep or dec movsl mov push jmp sbb adc insb push jg pop sbb movsl xor stc pusha mov roll lods loopne mov sti dec or hlt jl cwtl mov lods testl (bad) sbb gs adc inc ja inc (bad) cmp div or outsl xabort in insl adc gs cld and aad faddl inc insb pop dec xor push cmp imul in push or dec mov add xchg xchg dec xor das out mov adc and push pop push pop mov mov aam test push mov cmc dec xchg inc xchg push xor shrb dec stos arpl mov sub mov (bad) sub adc mov rcpps cmp int jl xor cmpsb pop inc jns pop jmp int rcr add faddp into mov jb aad iret push and imul mov cmp dec sub lods mov jp pop xor cld (bad) loope movsb pop shll jb loope stos outsl nop dec dec mov xor add stc dec mov movsl jg fs jnp dec inc xchg test lret and pop lahf fiaddl or push jbe xchg inc aad mov dec xor cmp (bad) mov shr pop mov jbe pushl aaa push pop jnp ljmp inc (bad) mov xor lcall fnsave hlt and dec xor daa sub jp (bad) out or je sub leave into xchg push jl,pn sub test xlat les xor sub sbb xchg arpl daa dec pop (bad) jecxz inc jae popa jmp mov sbb (bad) ficom iret insb xor js enter mov je xchg push shrb or and test pop test dec push sahf xlat inc mov xor add loope mov pop popa out std or mov ret out pop movsl rcrw (bad) divl mov push lcall adc jmp jo cmp scas xchg and aas daa cmp scas gs icebp data16 enter and jle fisttpll push dec outsl inc xchg sarl outsb fild xchg xor clc cs in pop dec and emms inc mov in (bad) jns inc incl repz lret adc jb adc sbb aaa push iret fild loop out push and lods mov mov leave dec enter and mov es out decb mov (bad) push aas into push or es aam and xlat loope push fdivr out fstps inc and xchg mov pop (bad) jbe push push adc shlb (bad) pop lock rsqrtps cmp xchg or lods jmp add or (bad) xchg ja mov inc or cmp push xor dec decb test mov ja or jle das test push sti mov pop aaa and (bad) inc in out cld xlat pop icebp (bad) shll push int3 dec pop push ds sbb outsb inc mov mov push into ds mov sub pop cmp or addr16 inc add aam es (bad) fist add psubb and into hlt daa dec shlb mov sti call xor pusha fcomps outsl xchg adc inc (bad) repnz adc sub push push xor jo add inc jmp decl fcom or andl ss xchg xor adc mov hlt and out scas mov jae or add andl or ljmp sbb (bad) sub sub enter insl sbb cli (bad) das leave pop sbb addl push pop sub xor sbb andl mov mov (bad) jno lcall data16 mov lea out or xchg mov mov aad jle xlat lret dec xor popa xchg pusha add jmp orl mov pop movb add mov int3 xchg push hlt dec or aaa and push ds popa xchg repnz push xchg push test pop mov and ss jmp xor xlat out mov in (bad) shll xchg fsub jnp ljmp sahf dec jg ja repz outsb inc inc pop mov test outsb adc push inc addr16 (bad) xor add test lods lret mov pop and mov stos dec gs ss inc mov sub mov pop push nop inc imul adcb xorl push (bad) jnp jl dec mov mov out test std and mov push sub (bad) fildl cwtl cs das adc jl add jne jae add mov (bad) and push cmp jbe sbb xor mov out cmp stos imul daa faddl je test rorb (bad) inc jb adc push pop mov leave cmp mov repz movsb xorl sarb movsb mov cli ja or (bad) and out push fwait mov cmc mov pop subl jg sub inc pusha jp sbb test scas sub stc popa xor dec sub ret out cli or inc imul pop jl xor dec xchg jbe ja and pop xchg movsl fistp hlt popf (bad) in xchg mov add push mov pop jg push sarl and stc das inc xor sbb ret xor cmp call test and icebp movsb das sbb mov xor (bad) jle jns dec xorl mov add dec adc imul out inc xchg cmp shl push (bad) push push jbe shrb jmp scas mov popf mov fcoml sub pop fsubrp ja xchg imul mov sbb std mov inc lfs push movsl mov xor dec (bad) cmp addr16 push sub sbb push popa popa lock enter adc mov lock adc scas call cvtpi2ps ret pop lods mov jmp mov xchg cmp (bad) scas push mov fidivr sbb jmp mov or xchg cmp fstl mov roll adc stc mov jl mov (bad) movsl sbb cwtl inc stc clc imul movsl loope hlt rcr push cmp jb and xor lods (bad) int orb aad fldl2t push mov push mov test test jecxz inc aad jg xchg pop cmpsl push push cli push cmp add fldpi lret pop mov shll adc jnp jns lldt xchg xor jns inc push adc xor int3 (bad) ja sbb hlt (bad) mov out (bad) movlps into lods pop outsb lods lock cmp je add mov jg test add test jnp xor adc sti fcom inc jg lods cmp adc dec push mov fist mov std iret mov out mov xor or mov test xchg fldl jl test jno or call (bad) insb sahf xlat or (bad) jp pop pop arpl (bad) push xor aas push lahf push ljmp xchg jp mov lock or add adc insl pop lea (bad) adc pop cld cmp xor call cs pusha loope pop and cld sbb lock mov loope fwait mov in adc iret dec addr16 mov mov (bad) xor adc aad add mov xor sub or sti enter jge mov scas outsb addl (bad) mov mov scas cld fidivrl add inc pop addr16 push test mov sbb dec and mov mov add sbb ljmp mov rcrb xlat inc sti mov hlt div repnz push lds rorb jle test loopne ja add push inc clc cmp test jl aaa popw orb (bad) lods mov dec jbe cmp sbb gs sbb loopne cmp data16 daa lcall pop adc xor stos out push in test rcll shr or in jbe sarl jge aad gs sarb lret inc inc xchg ljmp xor dec sub jg popl pop scas adc pop xchg clc inc xor sub sub adc clc fs mov pop xchg loop push stos es mov les insl sti shrb ds sarb xchg push stos lock pop pop inc mov xor mov jp push aam sbb add xor mov test repnz call or inc add mov out ret (bad) mov push bnd xchg lahf cmp cs fcoml pop mov int3 add and xchg fmuls xchg lret pushf stos fisttp cmp test clc xchg mov outsb imul insb dec movsb sub inc neg sbb test cmpsb inc cltd xor mov mov adc and xlat jl lds mov xor push mov iret rorb fisttpll mov aam lock xor les inc xor adc xor add pop ss adc les mov out cmp push push xor push dec aaa sbb and pop fildll and mov int jo fs cld push outsb fstl pop (bad) lds lret pop fldenv pop adc out sub and cld gs mov jmp or movsb mov mov sbb and fdivrs xchg mov into (bad) sbb adc lea iret jbe into or (bad) and jbe cmp cli inc sahf xor mov and repz dec sub mov cmp inc inc cmpl mov push and push dec outsl inc mov add lret sub inc call mov popf test repz cli xchg aas jne les mov ss or fwait sbb cs dec loope xchg xchg sub (bad) cmp cltd bnd ss movsb or out sar jmp insl call jns adc mov dec and inc cmpsl stc dec addl cltd sub imul in test fs enter mov scas push lret scas and pop std popa mov add daa test mov push xchg or ror dec fiadd test call mov pop addr16 idivl jl dec push fldt divb cltd or mov xlat insl or sub data16 or ss xchg outsl fimul mov les add imulb (bad) into xor mov mov inc mov xchg inc mov push out adc inc stc xor dec ljmp pop gs cs cltd sar add clc (bad) clc test dec fwait push xchg push adc stc mov es bound jne cmp xchg pop dec popf lock mov push push pop scas xor push test (bad) clc push sbb xor pop (bad) imul and shll test pop xor (bad) out pusha into hlt es into or imul dec adc xchg movl (bad) lahf mov mov (bad) mov jns cmp lods clc mov nop sarl push sbb xchg mov dec jmp movsl push mov sbb jmp fidivr sbb pop rolb ret cwtl (bad) xor mov enter add adc mov mov mov push decb dec xchg sbbl mov mov mov jg insl mov sbb roll cmp inc mov int sbb fwait lock pop stc jnp cmp test adc pop lahf stc inc arpl stos aas stc add adc mull xor and je mov inc xor pushl sub aad aaa mov ret cmp xor loope aaa ljmp stos fwait test and lods aam divl cmpps repnz cwtl hlt lcall push cmp insb xor dec pop repnz xchg aad cmpsb lahf das mov mov push scas outsb div (bad) loope push push push ss and cmp pop fwait pusha push repz into nop sbb lret adc fsubrl dec in push into push rcll imul inc mov or or fstpt inc addr16 push fidivl cwtl enter xchg adc fsubl cmp (bad) mov outsb ds (bad) jge sbb inc push xor sub sbb sahf lods ret out and jg (bad) or scas xor fisttp shrb outsl mov in add stc inc and xor or in (bad) inc xor lret push rcrb push test xlat xor mull xlat roll (bad) divps xor out inc repnz xchg inc adc aad movsb pop sbb push stos adc shll and push jp mov movl nop mov inc imul push leave dec dec pop cwtl movlps dec adc leave or popl mov lahf enter lret bound dec loop lea les inc jg push call xor push enter push pop and jne mov enter test adc mov test fldt jge dec jne in push and cmp push pop mov int or pop add pop push je loope rorb cmc add arpl jmp mov sbb mov pusha jbe push mov or lahf sbb dec cmpsl sahf mov fisubrl ret dec or pop movsl mov jge pusha add ljmp pop xchg leave jg mov fwait push mov into sahf push lahf loop mov xchg stc mov inc push jecxz jns xchg mov mov sbb mov cs ljmp or add test adc and mov jns (bad) popf xchg hlt xor jle jae xchg pop dec stos pop jl or test xor sbb push push ss mov (bad) dec in jbe adc push repnz fiadd lock pop sub mov hlt ljmpw fcompl rcll or scas jecxz ret add cmp in (bad) in rolb jno jle fisubr sbb jbe xor sarb repz jecxz aaa aaa mov push or call adc or stos mov je xchg imul dec jge,pn lea sbb rcll sub jno and popa out addl dec (bad) or jae and aad daa adc jl add xchg fist call mov and stos aaa sbb xor daa sbb adc popa sti aad int cmpsb jb mov and or and jge (bad) jae fcmovnbe lret add cmp repz jecxz cmc or sub shrb pusha mov outsb sti icebp rcrb popa mov adc pop add lods aas push sbb call jno mov fiadd sbb mov stc jbe mov xor jnp jb cmp or mov ror sahf inc loop lret cmp lahf mov outsb push jne push and cmp jg cmp jno pop bound mov push data16 incb pop lds cmp push jae pushf or cli sahf mov into scas xchg jge (bad) aaa (bad) lods outsb add jo mov dec xchg arpl mov dec cmpsb xchg mov and ret push mov jae mov sbb ljmp pop je add sbb sub and mov xor lahf mov mov pop mov and jmp add pop cmpsl pop ja jle cltd jns pop pusha stos mov call mov int insl ret or mov mov and ja movsl mov sbb jmp xchg fstpl scas xor (bad) pop sub adc jp lds jecxz (bad) movsl scas push insb (bad) lret xchg push cwtl cltd stos sub int xor das sarb xchg (bad) push sahf and fistl lock scas and dec ret bnd adc jns pop xor into push push fisubrl sarb mov xor push xchg adc cli test leave jl jmp into or cmp test cmc cltd test inc hlt sar mov (bad) pushf pop (bad) cmp jns icebp sub lret lahf mov add jbe outsl imul jo fwait (bad) dec lock iret mov mov je fbstp dec stc add mov lret js fstpl adc and or faddl xchg add mov jo push (bad) movsb or aaa fisub xchg int3 sar jo and add mov scas sub gs jne and fnstcw sub mov nop inc fisubr loope dec xchg lahf adc clc dec mov or sub fwait arpl nop iret pop xor mov aad outsl xchg xchg enter addl push and es xor jecxz xor daa das sbb xchg or subl cmp cmc pop mov (bad) in je dec fisubl inc adc mov aad jb add enter int test in mov cmpsl subl fbstp hlt ja adc and mov in adc and xchg aaa adc dec pusha adc adc mov mov cmc inc out sbb sti mov (bad) into xchg sub sbb ret jge add xor mov jo cmp xchg icebp mov xor mov add daa cmp or lock inc pop pop cmp js incl aad scas in mov insl lret dec mov cmpsl stc push (bad) push push ret mov test popa push mov cltd adc dec or xor xchg jmp jmp mov mov out jle cltd xchg mov ret jp lock jb xchg jbe test inc icebp test into jge movsl loope cmp testl sub shrb hlt xchg rol cmp cmp repz push push les loop loopne fisubrl mov dec cmpsl ret stc sub loope scas in fisub adc sbb inc inc stos test rcr or lds xchg push dec lret push and or (bad) jecxz xchg sti dec mov cmp xchg test loop sub jae sbb push cli mov inc cwtl sub in lahf out xchg in cld xor cmp aaa or (bad) je push cmp dec pushf mov mov sahf cmpsl mov add andb pop jae mov int3 (bad) cmp inc rclb in in iret ds xor outsb fwait mov mov and push push pop insb jp bound xrelease fisubl in inc adc mov mov in adc out cmp and xchg test hlt out loop jmp out sbb int3 into pop das or aas add in and movsb pusha xchg ja popf jmp fcoml xchg mov add (bad) xchg adc sub mov imul loop xchg lods push cmpsl in push mov aas jbe pusha xchg adc push sub lahf sbb cmp (bad) xor and mov aas daa xor ljmp push and cmp daa xchg dec jbe loopne insb mov lock push mov xchg in pop or mov inc (bad) out or or and fnstsw iret adc insb sbb int3 push push mov cmp jge popa jno or push xlat pop mov (bad) test mov aaa lods xchg mov mov inc xor outsl sbb int and insl adc mov fist loopne movhps mov mov sbb push pop jns movsb cwtl jns iret dec mov shrb ljmp lea sbb shld dec jnp inc bound pop mov cmp arpl (bad) fldl and pushf clc pop and bound mov pop dec dec ljmp je mov cld xchg ljmp (bad) jmp mov lcall jne movsb (bad) not mov stos out lret into sub xchg lret pop sbb lods or ljmp jmp leave or lret pop outsb dec xor inc sahf out cld adc (bad) notb xchg test cs repz or xchg and aaa insb push xchg add fmull call dec inc xchg int3 mov sti (bad) gs cs push fstpt sti xchg test sti call push fadds sbb jns xchg arpl or jle xor dec scas xchg mov hlt mov inc pop cmp xchg call mov scas xchg shlb in movl mov pop cmp jl mov inc adc mov ljmp addr16 sbb xchg fnstcw aas out xor inc mov xor push in pushf test rclb ljmp aaa cld orl inc pop xor push mov imul add mov lock (bad) xor jne push in jb sbbl or xchg arpl push rcl sub or sbb pop mov push jle jg imul xchg in cmp test movsb fbld dec pop mov sbb popa std fstp lret mov pop in xlat fsubr leave dec push xchg inc call push mov cmpsl cltd xchg and mov mov pop dec and cmc or dec jne and jo imul scas (bad) mov call mov jle,pt push push sub iret gs les shrb stc mov mov inc add (bad) fwait (bad) icebp mov or inc add loopne push ds outsl cmp cmp push pop fcmovnbe mov imul jp movsl and outsl aam fcomip js in mov pop inc xchg pop pusha cmp xor fbld test icebp sbb adc je (bad) fistp mov pushf pop adc arpl mov jmp mov xlat test xchg cmp push (bad) loope jns ror stos xchg or push push mov inc jnp sarb aam xor dec jo dec fs mov inc test roll mov lahf adc test (bad) mov jne mov (bad) jno fisttpl js movsl cld ljmp cmpsb sti mov pusha (bad) lds or mov push adc mov loope sbb mov sub adc dec dec movsl adcb and mov lods jecxz es xor adc in lea add in inc cld das pop (bad) iret push xchg xlat (bad) xor cwtl cmp jns push lret cmpsl and cmp fcmovu outsb mov negl xlat adc mov mov iret in inc xchg and (bad) pop pop insl fmull pop (bad) sbb test test bound cmc lock jmp movsb adc fistp push xlat mov mov pop lock mov adc (bad) xor sbb mov test adc gs mov adc imul add pop nop mov xchg dec shrl jl dec imul adc push outsl and clc or sub fwait inc sub or icebp lds or sbbl (bad) aas (bad) pop leave or je push jecxz test ja jge test xlat adc inc out sti daa repnz mov or push add lock sbb fcoms pusha jb into mov addr16 xor mov mov xchg push mov jne sub cmpsb xchg inc mov (bad) bswap pop add test sarl adc mov push add inc mov push jge jo cmpl mov mov inc push cmp sub test (bad) mov xchg clc ljmp xchg cmp fldl pop xor fstpl aaa cwtl push sub push (bad) imul push mov es lock outsb imul mov pop cmp mov lret mov mov mov in cld lods jo jae mov add insb rorl jg je cld sub stc cmp push es in addr16 sbb push scas addr16 sarb sbb and push dec xchg and cmc cmp lret xor sbb pushf push add out in cmp out sbb pop ja movsb jp mov ja adc (bad) repnz sti call (bad) repnz xor mov ja nop enter loopne mov bound mov scas adc sti pop movsl in xchg dec ret (bad) or (bad) jno sbb mov add stos les xor test (bad) movsb mov jge adc (bad) repz pop test ret add (bad) (bad) stos push rcrl repnz xchg dec popf xor fwait insb xor inc clc cwtl (bad) imul ds scas mov mov test inc outsb inc xchg aas add mov mov test cmp add pop push repz fidivrl nop sub movsl xchg and mov in sub add ret pop clc cmp loope sahf stos xchg repnz adcl icebp into (bad) in or dec inc cli (bad) shrl xlat movsb dec add out orl mov jbe pop shll xchg int stos inc or sbb add adc int fildll clc fnstcw cmp jge xlat inc test cwtl hlt insb push cmpsl adcl adc dec addr16 daa inc dec stos add add clc lock add jle ss js mov in mov sbb mov mov cs or jg xor fs or jae adc jae (bad) jnp jbe sub sub xchg leave xor mov pusha scas sub insl aas xchg (bad) pushf xchg and rcr push aas pop es jae xchg xchg push and scas and shrb pop mov xor and test add push mov stos cmp ficomp push sbb mov iret mov sbb pop mov cmp pusha (bad) mov push mov push not gs fcmovnu fsubs and jae ds test mov arpl adc xor call push mov add into mov scas xchg lret pslld adc xchg mov and sbb shlb test adcb sub push dec in mov loope ret fbstp add (bad) ljmp mov sbb addr16 push push sbb adc jmp mov pusha push or add imul jle sub mov ljmp scas adc icebp (bad) jne aaa fidivr xorl leave js sub cli push icebp ss push call popf xchg ret (bad) fcomp fucomi push fdivs xor cmp mov lahf push adc sbb mov inc les out outsb xchg outsb bound cmp mov add cmp fs imul xchg aam cltd in pusha sbb cmp pushf scas lahf movsl das out adc out inc nop pusha pusha jge mov sbb sub stc cmp xor jge lds fcompl (bad) in nop repz jg fild and pop loope imul or out and mov dec nop inc dec sbb push dec cld adc xchg scas mov ja jl dec cli rolb dec jae or sbb xchg mov jo mov sbb sbb mov (bad) mov jne loopne ret enter fcomi push jns mov das push loopne lcall cmpsb rol mov mov jp daa roll dec jb mov pop imul in lcall addr16 into push jmp add or cmp or scas ss out mov lea out xchg sub sbb inc stc adc lock mov mov adc sti pop das mov mov stos and (bad) cmc dec jne sbb cld and jge jbe movsb adc mov cld cmp stos adc jbe inc jp fsubrl xchg in sahf add es scas test fs mov cs fimul mov dec pop mov (bad) call fcomi pop xor pop leave in ja mov arpl or push and mov mov lret add jmp adc push inc aad scas dec ret mov pop lcall mov cli or fldcw divl sahf xchg into (bad) sbb mov rcrl icebp mov mov popa fs jle push push out push push push push jne mov lahf push insl incb cmp std or and pop mov mov js sub aas sub pop cmp mov insb push pop (bad) adc fstl dec cld insb mov dec in push (bad) jecxz lea mov jmp bound cmp into lahf inc outsb xchg jns daa push pop add push (bad) ljmp xchg dec or in sbb mov pop ss je and (bad) xchg xchg xchg je imul dec push and mov fcmove xor adc jp xor push pop lds nop adc cmpsl lds scas adc jp sub out add (bad) jno xchg (bad) sub push daa xor mov add and xchg xor xchg push jno int3 jnp hlt cmpsb test xlat in ljmp mov les jg xchg out lods cmpl or bound fistl push inc sub int ficompl aad add sub mov jno sub jecxz lock cmp shrb gs loope insl call adc leave bound add mov orl push mov push mov ja xchg cmc enter pop inc mov cltd jmp je adc push push push and pop bound push dec cmc jmp pop xchg mov lret cmp dec insl aas pop jg js (bad) call int3 pop mov inc and xor loopne inc jmp insb cmp out xor test inc xor mov xchg ss lcall cmp (bad) jbe lcall push scas test fisub push mov (bad) mov fwait push ret jns std add out fdivrl inc mov cwtl int jo xor pop fwait mov xchg mov (bad) jb pop or not (bad) aas add mov adc pop jge mov test fldt insb decl int cmp pop das jle and out rolb xchg ror les adc adc lock les xor mov cmpsb sub inc stc add or mov mov add jmp es jb push adc and cmp repnz negl cmpsb dec sbb popf push les out in lods cmp jo imul xchg jbe test pushf push test mov (bad) mov aas test push test into sub enter inc pop add jo jmp pop jge xor inc insl scas jge int pop fist out mov inc pop sti jae cwtl push stos mov add lahf in movsb daa scas sbb mov addb cmpsl xor sbb jg add jno pop mov data16 cli mov mov insl lds xor aas lock ret in cmpsb adc lock stos shrl xchg jns cli cmpsl dec in pusha sub sbb or push in aad mov xlat xor in pusha mov push jp mov fnop or leave xchg loop sbb dec orl arpl or pop add movsb lcall adc sub scas mov out push cmpsb push inc int movsb push sahf lea rorb mov aam in mov cmp test jecxz jle jbe or (bad) aam sub xor sti lret mov iret decb dec rclb cltd sbb xlat dec xlat inc icebp push imul xchg (bad) addr16 lcall fadds and jg jne mov mov mov mov popa popa dec cli sbb push aaa mov ret sub xor cmp mov jp loopne push add cltd scas mov fistp jns mov push sbb (bad) in andl add or xor push (bad) sbb mov ret mov scas push das dec push inc test pusha dec push mov mov cmp lea ret push roll jg push pushf jo sbbb loopne sbb ds sub into mov inc hlt adc icebp aaa push clc ss outsb int3 sti pop outsb jl or gs ja add xchg ds add push fidivl xchg andb iret (bad) iret or out add mov cmp test push movsb dec and xchg push rcr adc xchg les push adcl lea push mov xchg jecxz inc mov repz nop dec xor push es cmp testb jmp dec pop addr16 fldcw lahf ret push inc xchg in or or in dec test mov cwtl clc push adc mov cwtl sub out out mov ss jnp cmp xchg or (bad) lret outsb pop repnz push enter into or xlat mov mov xchg das in dec fwait pusha xlat clc jbe cmp (bad) jmp mov cmp es dec lds or loopne test mov jmp loope test sub jne lahf jne mov or xchg adc fsubrl dec imul adc (bad) mov int shrb adc out ja nop cwtl das inc mov stc jecxz fildl out imul mov clc or push xor sbb hlt (bad) lea xor add mov sbb xchg (bad) icebp jbe sub mov mov cmc jg sub in cs icebp jns test jne pop fs jmp pop shlb sbb xor subb pop insb pop pop shl mov in addb out scas push sbbl call cmp std insb stc scas and push ss add sbb fldl cltd or into push mov and icebp addr16 mov fimull ljmp js call (bad) lds loopne jl inc jmp rcl (bad) cmp add and inc dec test (bad) and add (bad) xor and or ret jb pusha leave nop loope push and cmpl or and cli cmp xchg cli pop xor lret scas leave jmp jl cmp (bad) or in imul add pop movsl add jae and mov mov test dec outsb sub add imul mov cmp insb mov fidiv leave sub sub lret mov xor add hlt mov cmpsl out mov sub and in and mov (bad) aad scas (bad) cli cmp or mov or or in sub inc lret fisubl mov mov inc hlt push add gs in ror mov rorb cmpsb mov (bad) fst or add push das das push je dec aas or rcrb mov push stos mov xlat stos into cmp les ljmp xchg mov arpl insl out mov mov mov or and xchg mov mov flds inc cmp xchg inc mov mov sub sub mov test push push pop mov leave stos movsb addr16 cmp mov mov add sub int add loopne mov negb push mov mov ljmp aam mov sahf mov iret and cmpsl aas pusha cltd sbb (bad) xor test cmp jg jmp add je rorb out jmp xchg mov out out pop push dec mov jle and sahf lcall mov xchg and std (bad) dec test les (bad) lcall in push or std pushf iret mov outsl imulb leave test je ja das push movsb in out pop push sub in in mov cld aas cmpsb and insl sub mov inc call test push mov add xchg jle into sbb add push fwait mov inc pop enter mov lods jmp dec fwait sub gs dec xchg into and fild cwtl mov in gs into jmp jecxz or jbe xchg inc pop cmp ret and sub pop loop adc mov stc aaa sub xchg jl imul cmc mov push sub mov cmp dec sti fimul (bad) fcoml dec pop jnp stos std je bound (bad) test je mov (bad) xchg cltd push cmpsb jecxz mov xchg addb cmc cmp cmp jae inc jge clc xor fnstcw test out dec ss add out fisubl lcall aas dec sarl lcall lahf jae shr or mov mov or xchg jo ret push ret mov loop push jns xchg lahf or pop or pop cs jno (bad) xor push insl fnstcw loope ljmp insb xchg xchg psubd mov js rclb cmp jne (bad) jae mov fildll jbe ljmp pop adc popa sbb fcoml rcll cmp ljmp sbb imul into aaa mov mov add repz jmp inc enter inc lds xor rclb push ret mov xor cmp jge mov adc imul roll decb fwait and mov xchg shrl test pop sbb adc dec decl in jmp mov aaa pop fwait into enter test and push aam arpl in loop popf rcll dec mov sub push mov dec dec test fldt insb push insb ret xchg xchg loop mov stos cltd roll out popa jp in xor cli xchg and aam mov mov mov cmp daa sub rol pop jmp insl scas fs shlb aad imul pop add jmp in mov cli aaa out mov fistl les jecxz decl mov test dec add jecxz lods mov imul fsubs dec gs mov cmp icebp rclb xchg (bad) (bad) cmc xchg push xor in pop int pop scas test mov inc (bad) push push jge lcall sti sti mov sbb pop mov jne mov fwait lock adc xor movsl xchg (bad) fsts inc enter inc (bad) neg (bad) xor notl push mov inc movsl mov lock fidiv and fs cmp (bad) in gs or ficomp mov in inc (bad) (bad) jg push ljmp cmp pop lds sub mov (bad) push lahf cld jmp pop mov in lret xchg mulb pusha adc int outsl or pslld mov inc push inc dec data16 push mov mov shrb fcoml pop mov sub dec or cmp ja inc push sub lss jl xor and cmp mov jp sub insl je call or (bad) fldcw fadds xchg add in fsubrs lods push sti rcrb pop fs pop jl shll adc mov stos jnp fstpl outsl jmp mov jle std cmp dec mov jns push fisubl push jns cld (bad) pop fwait sbb std inc xor lcall fmuls push ja adcl sbb cmpsl (bad) jb daa push jns mov leave test xchg or xchg bound (bad) mulb or call lods daa or das into inc push fild push ja jl and std hlt ss and idivl sbb add xor test loop add loope sbb and xabort mov aad int3 add data16 mov in (bad) repnz lods push add mov enter jbe ss mov mov xchg (bad) repnz jge mov imul jne or aam cwtl out popa iret pop stos jle dec dec dec fwait add daa add movsl cmp inc rorb push sub push cmp bnd jmp sbb pop adc mov in pop mov fwait pop orl jp lods js mov mov sarl and adc (bad) adc pop js ds loop (bad) xor loopne xchg dec xor or sbb call fisubrl cmc adc out cwtl mov jbe add mulb (bad) xor add jbe addr16 jne xchg ret pop sbb cmp push loop pusha push arpl scas (bad) mov pop sub cltd pop dec push movsl test xchg add sbb or adc pop (bad) mov push jmp mov cmp or xchg jne pop pushf mov pop lret je aam xchg shll pushf lret pop lret push sahf mov outsl cli mov outsb gs roll push inc out dec sub test adc int and js out cmpsl push cmp mov cmp daa js sahf lret inc das inc cmp or inc popf jle mov xchg sub stos ss mov jp jmp daa push push out rolb mov fisttp add push mov (bad) dec out jno sub add dec scas mov or inc pop enter leave cs lret sub pop xchg out pop shlb (bad) je inc sbb shl leave push xor insl and lcall ds cmc cmp out stc clc sbb xor cmp mov mov or in popa add adcl dec (bad) mov mov inc lahf and test pop xor mov in push jb pop insl ffree sub dec lock ds movsl lret sub scas or and icebp negb jo into inc add gs mov adc mov popl inc into (bad) shrl andl xlat xor xchg or sarl (bad) xor mov adc push stos dec mov adc adc inc adc les jp insl and mov jge sub dec mov jnp adc lret jae loopne inc xchg sub fild aam adc mov mov pop adc pop das and iret les mov arpl lods sarb fnstcw push stos mov or popa iret cli push sti dec jp int dec leave push adc mov mov mov sbb inc enter es cld lea (bad) jle roll adc ds jae add cmp or jle icebp inc lods fldcw mov popa and and dec mov inc movsl push inc xor dec and int3 adc mov pop inc loopne xchg push pop jle jl mov mov (bad) notl jl inc cmpsl stc into mov xor je cmp pop fwait pop imul in xor in cli or mov test mov aam sarb adc loopne test fcoms imul test add aaa pusha and das pmuludq lret xchg out sar sbbl push loop data16 test xor dec fistpl in leave jge das dec pop jns das or arpl int fisubl test scas cli adc sub push cmp and fadds repnz mov outsl inc push in out lods pushf sub loope insb push xchg mov fisubl test cmp arpl fisubr insl scas inc and xor test push adc mov xchg insl or loope adc int mov out mov and movsb jo aaa pusha mov or mov imul xchg and (bad) cwtl or mov mov or xor sbb lahf imul es mov inc push jle push (bad) sub push imul or cmc adc mov data16 cs push lcall aad mov fs and scas mov lods jno,pt add out cli es sub xor ror fisttpl outsl sbb cmp xchg or cmpsb sub mov roll jg and push outsb xchg or mov adc or push pop aam cli jle pushf jb iret rcr pop into pop (bad) adc outsl xchg pop inc icebp cmp mov loopne pusha jae or in rorb or jl push inc and shl mov and and inc xlat xor inc mov push aaa (bad) iret pop mov orl add push and jl mov notl push add xchg stc shrl sub sahf mov arpl xor cmpsb mov add lahf pop xchg mov or xchg shrl pop fadds xchg rcrb idivb mov mov sbb leavew mov movsb (bad) fsubp cmpsl add add sahf xor mov mov pop aam inc jmp adc jae xor mov pop mov fiadd inc decb dec shll inc (bad) cmp pop and sbb (bad) rcl add dec scas xchg mov jge into mov cmc mov pop dec mov or pop mov nop jg push and popf stos (bad) dec arpl lods sti or cwtl add sbb jg jae lahf jno xor pop dec aaa mov pop or xor nop xchg call sahf push fsts test (bad) in das jbe (bad) jl inc ja jne (bad) out mov loopne push (bad) lea xchg xchg pop cltd push mov jmp sub sub mov pop pop icebp pop ds cmpsb push popa add imul aad data16 adc xor jmp fcoms insl xor test movsl inc mov mov mov mov push lock or sbb cmp fisubr adc and inc or dec rcr push or cmp adc mov in pop in shr cltd adc xchg sub lret or imul out add mov inc mov int3 in sti mov jmp jns (bad) lock sub inc dec std jmp mov cmp or (bad) xchg mov fdivs mov add lcall dec (bad) pop stos insl lods or push inc stos mov iret dec cmc xchg and pop and pop repnz inc and xlat add ficompl and (bad) xor dec pop adc mov in pop lods inc movl cs xchg xchg add sub rolb lods lahf out jge push push cmpsl sbb paddusb mov int3 cli into adc std mov pusha mov scas (bad) mov stos out push dec sub push dec add xorl pop (bad) fwait mov adc fbstp jp (bad) push fcoml out sub in mov addr16 cli rorl std idivb dec mov gs or push notl icebp hlt xchg ja fcmovnb jecxz mov stc movsl shrl imul in imul push fldcw data16 xchg xchg leave jmp adc add loop pop and inc add adc scas mov dec pop cmp sbb and mov loope cs jg add enter sub and push sbb sub xchg jle mov out (bad) mov pop (bad) xchg mov sbb mov cli xchg inc (bad) mulb inc sbb or inc sub ret sbb xor pop dec inc cmc out outsl stos cltd (bad) ja addr16 cmpb icebp hlt lea iret jns push ret push js outsb inc dec movsb pop and rcrb ror inc dec xchg cli inc setb mov push out lods int cs mov or fiaddl orl xchg stos or and aam (bad) aaa fnstenv dec ljmp repz mov mov add stos inc dec xchg lods lds fidivl sti lock cmp xchg dec mov jae gs xor dec cmp sub inc test jne or mov outsb (bad) aad pop stos imul or mov sbb jp jg fsubr push dec and pop adc test lea pop xchg jno cwtl inc lds movb das sbb pop movsl mov lods and gs cmp ret sub inc out xor in mov mov rclb xchg sub jl nop pop adc xor cmp je pop orl in mov and xor add sbb mov push jmp sub and jno fucomp xchg aaa xor or mov and cmp inc daa and jle sub mov sbb aad call push repz (bad) add loope or icebp icebp test fisub test cmp movsb mov out jp dec mov cmpsb clc xor adc dec popf xchg add enter fdivs jbe mov dec push out mov fild and loopne inc push fistp jne push push popa xor push cltd sub pop movsl loope rolb xchg and mov mov insl outsl shll add push dec insb mov adc jae rcl cbtw dec shll adc or adc adc push ja mov dec dec fstp sbb lret lahf out dec xchg iret pop lret (bad) pop outsl mov mov mov cmp cld and dec fistpl xor add mov mov mov inc xchg add xchg jne adc dec es mov (bad) jnp loope and rolb das jnp (bad) daa jmp and sbb add cmc fcom scas movsw cli mov mov testl aaa lret sbb sub insb cltd popa movsb (bad) loop decl stos dec push mov adc data16 je pop es cmp mov inc insl or inc std jns xchg jge fistp mov adc jecxz xchg mov mov jne xor add std testb adc pop xchg sub (bad) dec adc outsb cltd insb (bad) imul jb stos jne and jle mov repz ds adc fucomp into or test hlt xor sbb adc add loopne or scas std mov fs ret push adc nop (bad) scas fwait sbbl xlat js push divl in sbb xlat scas and add xor sbb hlt push xor jo (bad) in or addr16 jle shrl popa iret lock faddp (bad) sti je cmp mov loope cmp sub jl dec pop cmp pop and mov icebp out xchg jnp cmc inc sub into testb mov pop unpckhps pushf xor loop dec pop lea movsl icebp jns push add cmp fld sub jmp xor (bad) insl jns or es adc mov ds shl mov push push testb cmp sarl lods dec jbe push push add aas or mov mov push add mov xchg fsubl imul out jmp sbb cmp mov in jns xor cmp push inc icebp inc mov dec or cli ret iret nop adc out jl in test xchg push pop dec jno jg sub push xor or test adc stc imul cmp loopne lea hlt xor pop pop cli out sub xor das cld ffree xchg mov popa sub inc adc stc pop hlt shrl (bad) mov cmc cli cwtl inc ja mov and pop mov lods scas pop cld jb mov xchg rcr call jl jecxz popa lahf or dec dec paddsw inc stos jle mov fwait inc sahf stos cmovnp sti jno gs pop cmpsl jnp inc nop cmc pop mov repnz pop inc adc sbb pop sbb je lea stc lock ret pusha xchg dec pop mov sub mov in dec jge sbb sub jb inc mov gs mov out xchg xchg stos sbb data16 adc std bound insb push (bad) jl xor outsl movb xor cmp pcmpeqw add pause inc mov or popf je xchg mov jmp outsl pop pop iret jb mov aad enter ss mov daa pop pop xchg mov ret test dec push cwtl add mov push std subl ret stos mov jl lods mov mov jno aaa loope inc inc addl mov mov jmp or pop test mov iret stc push bnd jg jb ret xlat (bad) loopne insb pop adc arpl loope mov or mov xor pop mov sbb mov fcomps (bad) addr16 test and (bad) jo es cld pushf jno test repz lcall mov fdivrs gs mov jecxz les push pusha ljmp orb (bad) inc cmp imul adc jl rolb jl fdivrl lods fisubl pop aas iret jo sbb mov rolb lock pop (bad) aad rol pop pop pushf call jne mov or mov adc jae inc orl push daa loopne fwait jne cs jae push insb cmpsl and sub and sub imul lods popf mov xchg cmp add xlat sub mov xchg popa icebp xorl mov or push call cmp fidivr test cli xor mov stos dec cmp add mov fs adc (bad) jo test and shrb inc xor mov mov push and ret stos inc (bad) cmpsl adc push stc roll enter mov hlt out cmp mov jno cld bound cwtl mov dec add xchg mov ja xlat add jp lds lret fiadd das add dec mov in lret mov je jb in cmp leave mov push pop outsb pop adc cli xchg sti and cmp cmp cmp and das in sub imull out mov pop lods dec repnz lret int3 cmpsb mov out xchg inc iret idivl pop inc (bad) rolb sahf mov push xor and lods out dec es lods out mov pop jg adcl fildl fidiv scas fimull adc jnp jmp imul lret sti cmp jmp and imul mov test pop (bad) lock movsb jle adc int int3 dec jbe jb cmp adc out xor lcall test sti aam mov mov jp rep lcall push rorb mov or mov ret imul fistl int push sub je sahf ss (bad) mov mov je jmp mov in add cbtw mov outsl daa mov mov pop xchg jge call or inc ds mov push hlt shll cmp adc daa or push (bad) stos jnp data16 cmp (bad) cwtl mov loop lods nop jb push xlat lret jg dec dec mov and xor or fisttpl add jecxz dec in (bad) and fiadd or add ja adc das xchg pop movsl rcr loopne mov fwait lea xchg push or mov stc cltd and ret (bad) dec adc fwait cmp xor mov sub rorb dec xchg insb xchg dec add xor inc inc xchg (bad) aas insb (bad) test cmp ret cmpsl sub addr16 je mov sub mov movswl xchg jge fldcw jno (bad) cmpsb cmc or sbb push sub push pop xchg push cmp (bad) sub je cltd jp sbb ss dec loop dec incb or sub int3 pop ret push insb mov das (bad) out or xor insl out inc lock into inc rcrl mov jecxz aaa dec mov ja stos dec xchg mov mov add mov or mov pop lret pusha nop sbb cmp leave leave stos xorl dec mov mov pop sub rolb pop or dec sub test or outsl push into cltd cmp xchg jae (bad) cwtl or mov mov roll (bad) (bad) maxps inc inc lcall sub and ja xor hlt je sti mov and pop rclb stos int3 cltd jns push mov sarb dec (bad) cwtl xchg int pop in mov push and ljmp jl out cmovge aas (bad) mov add (bad) inc addr16 lds addr16 fdivrp iret dec movsl sub popa clc xchg adc ret push cmpsl jecxz adc sub cmp rcrl stos push adc mov fsubl and xor lock mov xchg add cli pop sbb stos movsb push xor mov mov imull and cmp int3 xor test imul pop inc inc (bad) sub inc or out sbb adc fs jne fistpll and insl mov lea lcall (bad) mov cs sub sub push (bad) fsub mov int3 jge push xchg mov ds lcall jo das (bad) sahf push gs mov cmp lock (bad) sub mov out daa jno push mov hlt xchg sub cmpsl pop pop jns and out xchg or adc arpl rcll jb mov out or out xchg adc xlat push adc (bad) leave loope repnz sti sbb and fstpl push sti mov cmp dec notb fcomip andb mov pop adc bound dec jo pop mov sub xchg add setb add adc fiadd push push pop lret mov adc mov in jo pop adc enter mov js jmp movsl test loopne daa negb mov jns decl (bad) push jle aad jo test enter jge je and xor leave jle,pn mov je mov push xchg cmp sbb shlb notl loope das repnz pop sbb jp arpl mov mov dec dec cmp ljmp (bad) aam mov in xchg inc into mov mov repz lds xor push mov adc int test mov sub aaa subl pop jp out xlat jo adc ret jne in push dec xorl xchg rclb enter sub inc or push xchg pop add push inc jb xchg nop pop mov idivb dec xchg adc jne stos insb mov es popf invd js aaa sarb mov sbb out push jae xlat cmp rorl jmp inc mov mov cld (bad) pop shll in loopne push cvtps2pi xchg scas js xor inc mov ss mov setae inc mov sub and sub sbb xor push mov push jle add dec mov dec loopne int sbb in push jnp in iret ret int3 test scas xchg mov loope mov adc fsub sti xchg lret mov das popa push out add lret addr16 out fcmovnbe add addr16 lea cltd fldl push (bad) or in xchg es adc jno mov push ljmp or ss or jnp outsb pop xchg rolb outsb sbb jmp mov outsl jae push jbe jb repz ja pop xchg mov fistp xor jl push or inc inc jmp fwait or dec fdivrl test jge sub lock pushf adc push mov mov daa sub test mov test cmp dec pop sbb inc cmpsb dec lret popa movsl jbe adc rcrb loope jl jo mov mov and mov pusha lcall inc in push sub stos jg movsl repnz mov cmpsb outsl sub sbb inc xlat inc jnp sub pop lods push xchg inc pop push (bad) cld adc adc jl jo jg pop sahf mov or in fnstcw out insl lods sub sub pop cld int3 mov inc lods cld mov inc or gs dec push pop fs adc lds addr16 pop jmp or xor mov jbe (bad) push lock pop popf mov push fucomi (bad) mov sub dec popa and fsubs mov loopne push inc cmpsl int3 pop out nop fcmovnbe pop arpl lret cmp imul dec sub mov inc push push pop adc rorl push lock xchg mov mov sub rolb fbld in jo test mov xchg lret (bad) lea dec shl push and adc pshufw shlb out add dec insb in fild imul aam mov into ds stos aas fwait call mov inc push sub mov ljmp (bad) mov sub sub inc aaa push imul cli sbb aas (bad) loopne or insl insb push out adc movsl int dec mov negb clc or popf jge imul fistl adc fsubrl outsb lea sub mov (bad) jmp jns addr16 dec sbb stc outsl les jno fst jo arpl mov jmp inc mov jg fsub fstps xor xchg add add adc mov fcoml subb jnp mov dec pushl movsl or push or pop lods (bad) add into imul imull stc or and mov inc dec sbb (bad) mov push jge insb gs adc mov out pop lock adc aam cmp in lds xchg mov stos cwtl lds xchg add cmp sub and shrb ljmp pop jecxz movsl sbb pop mov mov movsl lds out add test and jp mov pop jge jb in test nop pop cwtl mov push sub jnp hlt sub push push test cmp sub cmp sahf imul stos cmp pop shlb je jae aas cmp jl negl xchg push jmp add xchg test mov hlt or notb fcompl mov pop cmp insb clc popf mov movl mov mov xor cmp movsl xchg and jge adc or adc xor popa stos fstpl gs (bad) pop rcll add outsb cmovae push sahf in loope out sub enter cmp fstpt jo dec imul adc mov and and in xlat mov (bad) cld or pop jg mov mov jl loop cmc sti dec cmp xchg pushf sti jp cli out cltd stc pop jge fstpt ffree lds sub mov xchg and pop inc hlt inc cmp inc and fisttpll cs test js es xor insb cmpsb pop test inc sub mov int3 (bad) call loope mov mov or out and and xchg (bad) loope (bad) popa repz pushf dec into xlat fistpll pop and enter xchg out add adc mov cmp aad aam xchg aaa and repz shlb mul (bad) into or mov adc pop insl divb jnp sbb stos fildll jno (bad) fwait leave loop fnstsw jo rcll adc pop cwtl addr16 movsl adc mov jo jecxz pop xchg pop cmp sbb addb adc adc sub sahf cmp pusha mov adc inc imul divl inc nop and test push pop psubb lea jo frstor lcall add jecxz jae mov inc jbe push pop cmp rol loope push cli pop out inc fiaddl push in into dec dec ret stc mov cmp add insl add inc in sbb (bad) sub test jbe push mov jnp mov mov inc push mov lret in sub sub fist mov cmpsl sbb or xchg mov mov cmpsb insb xor shrl outsb outsb xlat (bad) aad push in sub test dec pop xor scas data16 fwait pop xchg jmp cli sub mov adc sbb dec int adc arpl push nop mov popa and pop lds mov adc pop cmp enter leave adcl add cmp stos pop cli cmpsb (bad) pop rol and jne dec push es jo xchg pop mov push cld adc into xor push call mov icebp cld fisttpl (bad) mov loope mov adc xor mov xor lock xchg out xchg (bad) mov imul cmp sub mov data16 incb xchg add lret pusha sbb in rcl and inc (bad) out (bad) out inc jp push ss xchg xchg push loope cld lahf jl xlat fldt dec std push sbb lahf cmpsb mov mov out out pop popa iret xor xor bound lret jl aaa stc mov cld test lcall iret (bad) dec loope icebp xor fimull popa and dec scas push jb mov xchg or (bad) test lahf dec je sbb ja pop dec mov ss pop shll mov sbb or mov sbb sbb push imul mov cwtl das arpl mov out mov or pushf cld daa fdivrs sbb (bad) ljmp rcrb aaa mov pop pop xchg push xchg pop dec push xor mov enter aas jecxz mov adc out jp cmp mov (bad) mov push fs dec jno pushf pop xchg js lcall call stos shr mov adc cwtl xchg lret push mov cmp lahf mov pop add data16 icebp mov (bad) ja jb shrb pop adc mov fstps mov hlt testb push movsl mov outsl mov scas mov popa decl and push js movsb lahf repz mov mov push mov rcrl xor stos bound daa lods jo inc out mulb mov pop push mov jae jg das cmp xor dec jl hlt sub sbb sbb jmpw into jle xchg mov jns adc enter notb les xchg mov inc pop dec jge sbb in adc push xor and cmp bound imul jns in add sub pop repz cmp frstor sub sub std add adc push cmp xor cmp scas in orl mov xchg enter cltd cltd or pushf fwait push pop (bad) jmp dec outsl clc or stos int3 cltd xchg mov sbb int3 push in fistp loop push lret mov and sub push sbb lods add xor hlt sub mov push push mov pop (bad) out cltd push daa push jg testl pop lods pop sbb xchg cs xchg mov sbb or idivb test cmp mov bts jb jge gs mov cs cltd adc (bad) mov dec cmp nop jle and cmp push popf rol dec (bad) fbld adc bswap mov pop testl pop ja daa mov mov fidivl fnstenv xor cmpsb sub adc lods pop mov cmpsb mov call out pop test test fdivs sbb or dec fbstp cltd dec loop pop add ljmp fnop movsl sbb loope cmp call dec clc ja (bad) arpl popa cli out sbb shll inc or iret jg dec and push mov mov jno lret pop addb push xchg xchg lcall orl jbe stc push testb sarl stc repz push lods cmc xor xchg add pop add dec or sbb (bad) rcrl clc cmpsb movsl fs shrb push repz jmp aaa push add enter sub jle inc (bad) movsb pop cld mov aad mov mov clc mov pop fwait push sub cmpsb mov das mov hlt jg xchg mov add lahf sarb mov lcall mov in arpl test lods incb or adc cmp imul inc sub dec pop divb scas push mov and (bad) pop mov fdiv addr16 arpl lcall test mov movsl cwtl push mov inc or sub jl xchg lahf dec xor (bad) imul popa inc repz jp fisub out pop mov lcall jno inc xor ret xor stc push xchg sbb dec loop xchg jmp cmp addl sub leave and out aad mov aad lcall push stos sarb xor cmp icebp fwait lret mov and test in int repnz fs xlat sbb jnp push mov lret jmp mov dec pop sti cmc repz mov call enter ficoml sbb jmp ja loope lock test inc lea mov imul pop mov xchg arpl xchg shrb sbb in andb loope adc fcmove in out inc mov notl push mov inc jmp dec (bad) daa cmp add inc dec aas (bad) ret adc idivl mul cmp (bad) and jo in lds out pop jle and pop jge inc dec or enter sbb push (bad) insl or mov out cmp jg push ja xchg insb add sbb dec mov (bad) mov cld push dec jns sbb in stos inc and pop ljmp adc mov js or test ljmp sbb loope ds repz adc je mov stos xor or pop xlat test sbb add pushf mov pop icebp mov call repz xchg fidivrl fwait adc stc iret (bad) roll add pop dec xorl lock pop jno xor xor enter mov mov icebp add (bad) and out (bad) pusha sbb xor lcall (bad) add (bad) adc jg fldt bnd daa dec scas lahf outsl (bad) cmp push adc loopne mov bound xchg xchg push shll dec mov xchg or push adc dec pop add jb popf hlt pushf fisttp cmp mov subl mov (bad) dec loope cmc enter loope cld gs je out cmp jnp xchg sub push sbb dec pop jo dec fistpl lahf cmp aad (bad) mov ret sti mov fstpt je in and jnp imul loopne mov add xchg rclb xor icebp lea jle xor inc add int movsb lea nop adc orl aas add (bad) addr16 sbb dec pop ret popf cmpsb test repz push dec call cmpsb adc out push push insl ret or aas daa mov cli sti gs sbb lahf xchg push das into and or (bad) mov loopne mov mov aad cmp jmp popa scas pop adc mov out sub push inc fwait aad repz test xchg cmc into sbb mov ljmp movsl push xor movsl or out xor sbb data16 pop mov jmp mov pop mov cmp orb test mov out outsl xchg mov scas mov cwtl xor dec insl mov stos dec mov jo cmp subb stos cmp lock movsl mov cmp cld (bad) loop sub xchg jl or clc mov cli loopne pusha int3 rcrl xchg sub lret mov mov sub sub cmp int push cli arpl in add (bad) mov pop jno out iret loop push (bad) or ss push sbb fsubs scas mov mov divl adc enter int cmp pusha dec out sbbb lods push test stos or mov push jg xor mov pop aam mov pushf mov hlt pop push stos je fidiv cld popa lahf (bad) push icebp out sub add mov out insb push push or negb mov je xchg cwtl xchg sbbl stos and ss hlt das stos or ret push push cwtl sbb jae mov fimul int3 in sub pop (bad) aaa imul sub leave xchg or xor pop xchg pop rcrb dec inc and sub adc or imul das cmpsl mov dec mov stos jbe push imul movsb xchg mov hlt xchg sbb lods fbld ds mov pop fistpl jno sub inc pushw jge jo out or or push jo and rclb sub pop xchg ret (bad) (bad) xchg gs jns cmpsl pop les push dec dec fildl push pop xchg loope rcrl cmp inc pop orb jmp cli jae popa xchg xor cmp push clc sti inc and mov sbb and imul dec inc ja adc rorb scas add cwtl cmp lods loope push lods pusha outsb ffreep cmp test and cmc pop cmpsl jae pop sahf jnp add test xchg rcll mov das fcmovnbe jbe std xorl bound push add (bad) ja aam std xlat movsl pop outsl sbb or xchg sbb test adc test dec mov out loope es mov stos testb or mov pop (bad) mov out lret pop mov push push mov cmpl call sbbl arpl push shll or stos insl xlat ud1 fimul call inc add cli push fstpt push outsl fstpt jmp imul add jl xchg imul mov push jbe dec sbb in jo pop loop jmp mov xchg push out je mov inc push jmp push fwait and mov pop ja inc mov pusha inc xor xor outsb xchg jg mov mov lock jno add lret leave or xchg int3 mov iret jno cmc cwtl pop scas fildl and addr16 popf movsl ja,pn mov fcmovnbe popa lods bound inc rorb xor and jno or xlat pop xor (bad) pop int and xor enter sbb lock (bad) aam mov xor xchg xor lods push add mov mov push jmp jne mov popf mov (bad) push and adc mov push sbb roll push mov sarl lock jmp sbb (bad) movsb mov in ret add in sahf js std nop and push mov push dec push cmp into push outsl dec adcl cwtl pushf imulb add sarb xor xchg inc jmp int fwait popa sub (bad) mov mov sub jnp ret rorl jns add addr16 lds test mov (bad) cmp sbb cmp push jmp xchg xor (bad) mov nop sbb scas jns and xchg pop xchg jns pop push add test (bad) mov and in cs push pop lods push jg mov xchg inc pop xchg adc inc cmpsb inc fsub cmpsb mov test sbb mov out adc lret int imul das dec pop dec cmpsl jl adc cmp int3 (bad) (bad) (bad) mov sarl int lods insb push sti sbb cli jno ror inc lods sub test mov addl mov cmp mov push sub fstpt leave add in test cmp pop jp pop xchg orl push notl ret xor fcoml dec divb inc add xor dec dec lret cmc push movsl add xchg lock popf into mov sbb jae or sub pop pushf jmp inc ds mov loope (bad) cmp cmpsb mov sub jns jno test rcl inc lret cmp sti push sub mov inc xor pushf rcl out insb test xchg movb aam pusha (bad) in mov push inc cmp out jg ds push test scas jle sub add aas out ficomp xchg test sub or dec jge mov adcb les xlat hlt stos int lds mov or pop outsb inc xchg push stos mov icebp mov out jno std or rcll pop and jmp ss xchg (bad) adc mov lret push insb outsl inc sub fwait das inc sub outsb cld stos sbb (bad) sbb lods xor xchg in mov scas outsb ljmp mov and add or das test sub xor mov cmc sahf je scas cmp xor jg mov inc and fs xorb push sub ror pop mov scas push push and enter dec xor jp data16 dec rcrb js iret and leave lret jae cmp pop cmpsb mov sub stos fnsave pop dec popa mov (bad) sahf adc sbb dec xchg cmpsb add lret stos push (bad) push xor (bad) jmp lods adc cmp cmp adc (bad) (bad) sbb xchg mov sbb inc stc sub fimul pop cmpsb stc jecxz insb cmp push arpl adc and jl mov int3 push in push sarb out je outsl pop sbb mov rcrl movsl push movl xor ja mov jp repz inc xor jg push xchg stos stc cmpsb js sti push add mov xor mov addr16 mov adc setne insb pushf int3 (bad) fcmovnu leave xor xchg popa or jecxz and xlat adc xchg adc dec pop adc repnz jle push cli lcall dec push out cmc out stos in (bad) add outsl and cs aaa cmc int jo repz mov dec and push cs inc sub pop iret jg xchg adc adc cmp (bad) aas sub daa pop (bad) fcmovbe (bad) inc push mov insb push (bad) negb cs lcall out imul lods aad test mov ret jle fwait cmpsb mov fisttpl cmpsl push and scas lcall popw popa std fld jnp push imul shlb inc sub sub dec dec inc adc sbb in int3 movsl cmpsb sahf push cmpsb sti jae fild in push jns negb (bad) push pop push dec in and hlt push or push jge xor cmp or push test out dec js xchg and xchg jg pop cli add push inc (bad) cmp mov mov lods cmp sub mov dec adc pop and aam lds bound roll or lcall hlt outsl sbb or loop fidivrl dec or in xchg push xchg arpl ss push and mov cld je,pn mov jae mov push outsl out and dec sbb and fidivr xor xchg aas mov inc ret (bad) mov (bad) in xchg popf pop inc fstpt jae es lcall xor bts daa fwait cwtl dec inc in inc add lods xchg jnp jae (bad) daa push push sub fadd insl push imul xchg frstor nop pop lret xor mov test call sbb xlat pop sti lds insl sub mov cmpsl fs mov (bad) cmc mov add or leave sub movsl mov repz mov sarl faddl mov dec and mov push push ljmp int mov hlt out xchg and in scas aam dec stc or or pop lods pop jl mov ret sti inc pop (bad) mov sti (bad) frstpm(287 je xor mov repnz xor rcr into aas or sbb data16 add cld es daa and std jecxz aad sti jg or or sbb aam es out ret (bad) movsb nop int3 and test bswap sub sbb loopne jno fcmovb sbb and icebp xchg sub push and jbe das iret or sar adc sbb scas inc mov pop jl xchg cmc ljmp mov adc and push shr xor adcl das jge ret add dec mov dec xor jns sub (bad) mov iret sysexit jecxz jne (bad) jle mov and lods mov mov cmp xor xlat dec mov mov sbb fstps fadds cmp mov cwtl cs fdivrs insb sbb and repz data16 xor lea cmpsb clc push add repnz stos cmp pop les ret roll aas loopne clc lods out incb dec dec icebp fsub aad outsl fimul fwait sbb lds enter fucomi sbb (bad) pusha and outsb dec jl aam cltd arpl hlt lret (bad) hlt dec ret mov (bad) (bad) aad loope xchg and pop leave jo xchg push dec icebp loope ror les mov (bad) repnz loope je stos loope leave pop gs out sub repz adcb mov popa clc pop cmp dec (bad) add aam lock adc adc sbb mov dec call fnstsw fstpt inc jae mov xlat rolb ss fistl jge mov (bad) xchg ss cmp repnz jge jo data16 adc pop gs insl iret adc adc (bad) fsubs inc inc mov fistpl mov ret mov subb cmp insl stc xor mov xor pushf sub loope loopne push jns sbb divb and jno xor pop mov jge or stos jnp insl fsqrt outsl aam out pop xchg xchg mov xchg iret subb or inc xlat inc and push imul stos popf inc xor fmuls and movsl dec or mov arpl imul adc stos xchg in je movsl ja push or pushf dec mov pop lods dec popf mov mov (bad) fistl jle outsb mov aad xchg sub clc cmp mov aam out push (bad) rcl ret (bad) movsb jb,pn loope pop int3 je cltd test jmp mov mov xor ja mov dec add or cmc stc repz sahf fcomp dec lret call enter xchg jecxz leave stos in jmp fmul stos clc sahf les (bad) cli addr16 out xchg cmp lret xchg andb fdiv add (bad) and pop icebp dec in xor dec pop xlat mov mov out clc mov rolb push jl nop add adc cltd jle imul jo lock pop arpl or xchg and dec push mov lret arpl repz lahf adc das pop inc mov adc and out data16 push (bad) repz adc (bad) movsl scas mov dec push scas mov mov push (bad) das mov cmp sub push mov jae scas mov out lds add and es rsm lahf enter out xchg add cltd pop frstor insl dec loopne pop outsb inc adc adc (bad) jo dec push daa mov push mov xchg mov mov mov sbb and scas mov cwtl pop xchg inc jns pop pop les sub mov ss dec mov mov push push mov mov push hlt mov cmpsl les call pop jle inc inc push sar cmp jns xor dec pop clc mov push les add imul in repnz rorb ds cs cli orb test and push fwait shll lock jle (bad) (bad) cltd xchg dec xchg dec stc ss sbb add and mov push jge incb mov aad or adc cmc stos and and ja mov fwait pusha mov lods add cltd cs orb mov pop je fldenv sub js add fdiv addr16 dec out lods arpl or or rcrl inc cli fwait insb inc repnz arpl mov xchg add fmul inc mov (bad) lret mov sub rcll mov fiaddl enter stc inc adc sti sub cmp mov xor dec pop pushf jmp sbb push repnz mov adc cmp enter cmpl clc cmp sbb loopne cmp sbb ret dec xor xchg jg pusha or inc pop mov push dec or xchg inc dec mov push mov cmp sbb adc add dec mov pop mov (bad) xchg or push pop xchg cltd int3 cld add ja ljmp mov pop mov xchg test pop sub jnp adc mov sti jg ljmp (bad) pop popa jecxz movsb jns mov (bad) cmp xchg subl popf xchg ds xchg out sub aad sbb xor adc or pushaw sub out push imul cmc cs inc lods adc xchg mov aaa xor jl cmp mov imul pop add scas xchg ret xchg addr16 imul (bad) xchg cwtl dec mov sub pop or dec xchg movsb fs sbb adc or jno jb push aaa lds or int3 cwtl addr16 mov xor idiv push das arpl gs pop clc (bad) mov mov xchg sub rol and sub lret pop cmc icebp push daa or fist adc mov push or das or pop gs into add fs xor fsubl fpatan sub iret push (bad) push xchg or jl push popa and fwait jmp xor mov arpl mov mov clc outsb mov ffreep sub insl xchg fs dec cs adc scas jmp jbe adc mov mov push pop pop in xchg (bad) loopne push xor (bad) iret xorl adc fidivl enter sbbl in fistpl test ds ja repnz dec push inc ds adc test push mov mov in and pop aaa push jno push pop ret sub scas js xor andl test mov or push lahf jmp and cmp (bad) mov and out dec hlt pop js in mov insb push sub pop loop in inc cmp in add pop pop pop mov xchg repz repnz fwait outsb fisubr lcall cmp mov adc add shr sub outsb push lcall add adc lret adc clc cmp push mov cmp aam jge outsl pop inc bound rolb sub lock in or test jns das xchg push jo (bad) out cmp adc jge stos scas enter mov jae sbb movb cmp in into sub and call xor cmp sahf sub jmp jmp cmc and xor ret xor idivl in or cmp pop test leave jmp loope dec or fs sti sub sub add test ret sbb sbb add shlb scas iret cmovge subb movsb xlat cld in out div scas (bad) aas jl fidivl bound test stos jmp ret repz out push xchg xorl popf sub cmpsb popf sub mov jmp sbb pushw cltd or push cmp mov gs mov test lret sub sbb ret push gs (bad) cmp lds and incb fisubrl adc out mov inc fstl aas stos sbb mov cmp sbbb jb (bad) sbb rolb adc xchg inc in aam mov ret push fstp cltd and inc xchg mov ficom mov sbb fidivl dec mov fcmovnbe push rorb imul imul mov and push jae jmp cwtl mov lret add in and pop push sbb dec mov out xor pop xchg jge jno pusha push push pop fxtract add add cmp mov add mov out rorb imul and repnz dec ds int3 cmp mov push mov jl mov std js jb mov insb push aad lret push stos sub push bound out dec sbb push mov mov loope roll out (bad) xchg dec cmpsb xchg mov push xor inc ss in leave xlat mov dec push cwtl lahf lret ret dec movsb lds push mov outsl dec popf mov xchg sub jne jp pop adc mov jg pop jo jno and pop pop pop aam iret xchg ds ja mov test inc adc add mov loope negl push (bad) cmp test das (bad) enter lea (bad) or inc pop inc insl fs dec shrl cwtl cmpsl repz sbb cmp pop inc lret sbb icebp pop clc stc pop fldt jp (bad) jbe outsl or jge sub add sub movsl insb jg jl (bad) loopne pop pop push dec sti int3 push jle jnp jmp inc stc or cltd daa loopne enter insl push lahf mov add cmp pop lcall cs xor popf inc pop inc mov lds inc cmp sbb es dec pop stos mov pop adc inc mov jmp mov dec lods mov and (bad) cmp dec cld jmp pavgb pusha sub fwait or stc or inc popa sbb stos in lock out adc (bad) fistpll push lret bound sbb ljmp mov bound mov clc fiaddl xchg jno daa sbb add decb or aam cmp dec cltd fstpl sub movl adcb (bad) ja fcomip fimul std add jmp mov mov out xchg and sbb pop fsubrl mov sahf ds sbb iret in pop lock sub sarl mov rolb jnp push mov add adc xor test mov loopne hlt roll lock mov cmp jmp xor push sarl pop jmp out aas aaa cltd outsl mov lret jl (bad) adc mov mov mov mov inc stos pushf (bad) mov jl xchg add into out xchg or jecxz mov adc adc push scas sub xlat mov lahf dec ffree or push repnz mov mov lcall jbe xchg lret mov sbb int mov push mov mov ret fidivl inc xorl stc push mov scas stos push push jl fwait nop rolb pop (bad) repz mov or fistpll jns imul sbb mov (bad) (bad) jle pop aaa jns or dec popa sbb cmp adc jg push jp and add in jg imul mov fs push cs mov cmp xchg pusha cmp mov pop stos test or pop sub inc push sti pop sub dec adc pop cmp stos lret adc or mov repnz or jo lret dec add xlat inc rclb call mov push push inc fucomip inc daa jmp pop in dec shr lods (bad) (bad) enter and sub (bad) or mov in je xor dec xor or fucomi je ds dec (bad) xchg insl mov cmp icebp sbb inc cmp int subl sbb stos cmp divl inc pop test stc repz jns gs popa xchg push mov jl pop insb add pop aas mov sbb add lods mov stos sub movsb jl and inc jo pop pushf push jb cmp loopne (bad) mov pushf push ljmp push cmp int mov fstpl fidivrl adc and xchg sbb aaa loope lock and add in push data16 mov add imul pop mov movsb xchg and xchg pusha clc das xchg cmpl in pop repz cmp aaa adc cmpsb call std daa sti push add inc cmpl in out (bad) aaa jbe push inc popf sbb lcall push pop jecxz sub push popf iret jl fst pop repnz ja sub lds lods cmpsb inc mov mov lret mov sti xchg and mov jecxz ds adc aad mov loope mov ja pop jnp adc cmpsb das movsb adcl and test mov fwait cmc pop mov gs loope (bad) jno movsb scas xchg (bad) xor fbstp aas mov or (bad) es jecxz fwait scas xchg sub aam mov ret lock inc aas (bad) sub mov and inc fs ret rcl jno mov push loopne add in pop es popa outsb notb insl call lock xor bound sbb dec jae lods xchg icebp test cmp je sub setne xorl fwait sub mov out out mov lea adc xchg xchg mov scas inc addb sub mov ds mov fcoms mov jb dec mov sub jge,pn push pop sarl test push scas push push iret sub stos popf lea push cmp mov inc je xchg sbb mov sub xor js jno push aad fbstp call es cwtl rcrl (bad) (bad) adc (bad) push jmp xor pop mov sbb mov lret xchg out sar in aam cmc jle xor lcall xor fidivl inc mov adc mov in pop ss repz push sub inc pop ficom mov (bad) mov and mov mov cltd pop mov in scas inc jmp cli cmp loopne or insb inc dec xchg nop ficomp dec fstpt fwait and mov jl enter add mov outsb cmpsb inc cmpsb ja outsb pop push push mov dec (bad) int or xor dec pop (bad) les popf pop add push xor pop lcall or mov movsb add clc mov mul add or or (bad) jno pop inc sub enter aas pop (bad) add rorb (bad) dec sbbl inc mov xchg (bad) notb adc adc popf xor sbb stos (bad) cltd lret or xor mov movsl adc outsb pushf xchg jecxz xor in (bad) xor rolb mov and inc daa popf mov insl push sbb xchg add rcrb ljmp bound aad xchg dec pop (bad) jno xor shr (bad) aaa push add push inc bnd jo aam mov jne gs sub mov repz sbb jp (bad) flds ds jae xor inc and or add cmpsl adc push sbb cmp sbb aam ljmp add and or dec mov rolb lea imul xor out fistl outsb into xor push jge and mov lds xchg aam setge mov aam out cld mov cmp sub cs xchg rcr mov aas popa jb add scas adc leave jb or or (bad) (bad) out mov (bad) xlat mov pop pop int sti test cwtl repnz push mov mov adc les out stos and mov or push sub inc fisttp lds stos lahf fsubrp movsl sub rorl movsb jp adc mov xorl fs fdivs adc lahf pusha loopne xchg jo ja mov lds jae xchg setbe mov fwait adc pop adc jb fsubrl xor pop cmp mov and mov loopne cmp jle (bad) shl mov stc mov adc jl aaa push jnp sub jge sbb bound mov sub inc cmp in rorl ret sub std dec out mov dec or add sbb sub add or inc jge mov and stos (bad) nop mov xchg push cli je std jmp enter cmp xor dec es mov sub fwait or or cmp jmp push or imul subb lahf fwait outsb pop aaa jnp enter adc shrl jns inc jno sbb dec into (bad) or xor xchg leave jne testl adc enter fldcw jecxz sub add divb (bad) adc pop je clc in pop cld jge mov jae icebp xlat sbb sarl enter data16 push and jmp push cmp ss (bad) pop lret iret push lds mov ret pop jns loopne dec push loopne cmc lods lahf add push imul enter mov xor mov pop pop cld loopne sub pusha rcll aaa and cmp lret xor mov mov les cmp mov je loop mov imul mov jae test mov out and outsb inc daa (bad) (bad) ljmp pushf mov lods jmp xor je jl add je add xchg test or jo cmp push mov hlt and jb sub push je jmp lock adc adc add sub lods fnclex cmp je add jns pop mov sub add (bad) sub insb inc sub gs pop dec test jge insl mov inc into mov ret xchg inc push (bad) dec das sub (bad) loopne sets addr16 cmpsb sub sahf sahf in lret pop jmp icebp jno es rcll sbb nop cwtl and stos shlb ret insl insb dec or mov pop dec lock scas js adc sbb cmc xorl mov pop sbb xlat (bad) mov es cmp in sti je xchg fdivl mov clc icebp mov (bad) js push xchg pushf (bad) lods jns pop loop xchg icebp jne or roll or add lret cmp add adc fsubp dec fstps les pop cmpsl shrb cmp inc aam orb push ja pop aam fs mov lea jnp fcoms mov das pop into test ret aam and aam rolb xchg dec pusha cmpsl out in jns ja xchg or and xchg icebp add loopne xchg xchg cli into aam inc fisttpll and adc cmp dec cli test aad aad cmpsb mov addr16 repz and ja push lods mov ret fcoml mov jno mov je test mov mov pushf jge pop mov sbb lds dec stos and test ja pop repz out (bad) pusha push jle (bad) into sub icebp icebp decb mov pop adc dec mov hlt xor iret dec lds lods xorb lds push cmpsl lahf out pop in (bad) mov push jge or fldenv push push mov cvttps2pi mov mov push adc bswap jbe pushf add mov movsb jnp enter test enter in mov into popa mov dec and cmp in adc and jb mov repz fadd inc inc hlt inc outsl sub shr xchg mov xor push out loope rcl push add aam aaa sub jp pop or cmpsb and jl mov dec pop cli xchg out movsb dec gs (bad) and dec cltd pop dec and and hlt loopne std dec cmp jnp xchg clc mov fwait enter sti fsubr in adc mov jp addl aad add xlat (bad) out testb push push rorb aad lds ljmp mov out add ds and add mov (bad) xor push adc rcll push outsb data16 mov mov mov sub pop aaa and and sub ss mov test cmp pop pushf loopne pop xchg push add xchg mov hlt pop ja aam (bad) int3 sub cwtl std mov lahf clc daa adc pop pop sub pop sti cmc and dec sbb std out (bad) es decl movsb mov nop incl jb mov cli gs (bad) cwtl and cmp lret mov xor imul adc pop jp and inc stos add sub sub sub xchg stos sub sbb mov cmp jb xchg mov fbstp sbb pushf out les or (bad) dec ja (bad) or insb jnp cltd std aam xchg xor mov in hlt push movsl and sarl pop sub and xchg js xor xlat xchg sub pop ret add cs pop push mov mov jbe pop scas int3 arpl ret push imul lods faddl out mov scas daa inc mov (bad) lcall sbb adcl xchg adc mov mov sti out mov dec outsb (bad) fistp push xlat lods movsl lea clc lahf mov xor cmp insb aas xor mov xor mov not frstor jno stc lods dec mov inc push repz xor iret test cld stc divl mov jmp xchg daa nop dec xor jecxz push push push outsb fcmovnu inc js lar push cwtl mov xchg lcall dec add mov into arpl mov icebp adc movl out arpl inc sub (bad) (bad) mov clc push (bad) movsb mov rcll jmp push test lret in sbb and lcall lret insb cld icebp mov repnz int3 inc pop mov arpl push in mov imul fdivl sbb pusha aam or inc fwait mov sarb mov shrl pop test sub mov (bad) je pop cwtl test jo andl into fwait add int3 cmpsl (bad) push cmp hlt lds xchg dec xchg cmp addr16 adc pop pop jg subb push mov lods mov push dec mov int aad loope mov add movsl fldcw mov push dec sub push inc xor cmp push jecxz dec lea xor das imul jle mov lock imul push out xor stos pop jp jp stc in popf fs lods lret out std xor shrl daa ljmp mov popf test jmp and or cmp jge cmp mov das stos and inc lock push cmpsl mov and arpl push mov sub cmp daa (bad) int pop xchg pop in call jae lret adc in cltd push push pop aad mov std das lcall das adc push push shrl jo mov dec sbb push add std jg adc jb jl push out jbe xchg push push movsl mov sbb jl sub cmpsl inc dec sbb jge adc in stos push mov (bad) jns jp mov mov add arpl scas fbstp add inc jno ret enter dec ds adc pop xchg (bad) or cmpsl push mov mov cmp xor pop jo cmp aam sbb ljmp mov mov ss pop inc inc ficompl pop jle aas add inc sbb xchg cmc aad xor in insl or dec popa inc in jns movsl push push dec adc repz xor cmc sbb loop mov scas das mov (bad) mov mov sub mov cmpb jge sahf addr16 and sti inc or sub sbb mov test and inc insb imul bound std xor mov and cmpsb insb cld pop sti das jecxz imul push sbb fadd add lock jbe addb ss aad ss mov stc mov idiv int call jl icebp sbbl mov dec lock adc aas pop mov or cmc out xor adc and nop adc insb out sbb jp mov xchg fcoms inc cli jle insb dec push adc mov adc sub mov (bad) jmp bound mov gs in add mov and fimul addr16 out mov inc dec (bad) cmp inc inc lcall xchg shl data16 adc push inc lcall (bad) lret out lahf fdivrl jae (bad) arpl shlb adc pop (bad) or in repz aam test sbb rcll int3 jo jle mov xchg mov dec sbb mov cmp rcl add je andb pusha jp lret ficomp movsb jne mov and sub stos push test pop aam or test push push je pop call sub adc xorl (bad) adc dec jecxz test lea and movsl pop in (bad) sbb out jae ljmp cmp inc dec jnp sub lahf loope sub xchg mov shll sbb nop das and lret mov mov cmpsb mov cmp push imul lods mov cltd dec sub pop jl pop cltd and xchg mov in mov inc (bad) xor test cmp jge (bad) mov imul cmpsb pop dec (bad) mov push mull push mov xchg stos hlt dec out mov push cmp (bad) imul sub add mov fistpl es mov (bad) inc xchg and cmpsb adc and icebp cwtl adc leave adc or or jbe sbb sub xchg jnp ss sub push (bad) repnz in mov jp int stos jl out mov test je cmp lock out lods cmp cmp js inc or add pop lcall dec fsubs inc scas leave mov or test movsb out icebp xor mov negl mov rorl leave arpl cmp jl push stos movsl pop pusha or fwait push in sub sub lcall leave or (bad) cmpsl inc mov push (bad) and adc icebp shll xchg add (bad) mov enter inc daa jbe leave or enter int3 cwtl iret loop push jg xor (bad) push divb fild clc and and xchg movsb adc sbb jl std sti sub (bad) aad pop imul mov fbstp ja inc (bad) jg je popf dec or xchg mov rcl cmp (bad) iret lahf jg jo js sarb jge jmp sub jle adc ljmp ficoml cs mov scas shr mov aam loopne adc dec xchg push stos std push ss sub mov cmpsl mov rcrb out sahf xor cmpsl bnd sub roll mov mov push lods lods addr16 (bad) cmp push mov inc (bad) leave sbb in mov notb push (bad) cld rorb push in loope adc jg test add xor and roll xchg mov inc addr16 mov in sbb es jbe sub lcall mov mov mov cli mov push les dec xor iret mov sbb xor insl ret fiadd jecxz dec rcl cmp ss std lahf mov cmpsb loop mov sub js mov xchg pop sub nopl push lea int3 jne fdivrl push or dec (bad) mov dec inc adc pop (bad) test mov out or or imul sbb sbb mov sbb push fs pop and dec mov mov push mov fist sbb pushf mov pop jmp ret shr add or mov fisttp jge aad push adc xor decb sbb xchg xchg push pusha sti inc movsb xchg (bad) mov neg gs xor cmpsl inc pop or in cmc pop (bad) dec or je aam jno and jne or mov test ds push daa cli sarl enter cmp and aam push push xchg cs dec ficompl fdivs pop les add cli cli lods outsl fst loopne roll pop dec dec popa adc push mov (bad) jmp xor dec inc sub jecxz push loop in hlt mov mov loope insb inc mov in inc loope vmovsd mov call les popf arpl (bad) in mov mov or fcomps fs dec lods xor imul iret dec add push jne test ret pop ss aaa lods (bad) in jne sub mov cli inc and mov xchg cmpsb mov xchg xchg jle int3 movb nop xchg dec or icebp jp dec decb adc mov or xor jp mov sbb add fcmovb int3 jmp loop sarb push push daa sub inc out dec call push (bad) movups pop adc test and out enter cltd jge lods insl loope mov mov pop inc shl andl push xchg inc icebp or mov test sbb out or arpl cld cli add in (bad) sub jle lret and lahf push and pop jne addr16 loope xchg and sbb test pop lahf leave and ffreep loop jns ljmp in pop jge stc dec es adc les clc adc insb mov mov lcall or mov mov mov ljmp jle or cmp dec push imul cli in adc xor sbb xchg mov sbb inc sub push mov cld push inc pop mov notl jl fstpl int3 mov cld or lock push movsl stos ds xor xchg pop dec scas dec outsl mov dec and mov mov mov aad jnp xor test mov outsb mull cmp clc and add lcall rorb inc and inc inc mov in push pushf xchg (bad) lods mov mov add fsts mov inc fldenv cmc into cmp push xor jmp push push mov das mov xchg in sbb clc xchg add jg stc out aam sub addr16 dec add cld jmp mov rolb inc dec daa call xchg test push xor add dec addr16 addl fdiv lds mov movsl lock xchg std js pop cmp fwait mov iret out sbb and mov cwtd add mulb jl xor xor rol mov sbb cmp leave dec cmp pinsrw out insb mov aad and fisttp mov inc and cltd xchg cld xchg add ss cmp inc xchg jg enter fwait rcrb flds and pop add xchg sub notb clc lea fwait daa (bad) push ret scas orl addb int jecxz repnz dec daa repz ss mov mov mov divl jmp add jmpw xchg addl adc sahf jbe pop js push mov cmp xchg fsubr imul sub jecxz mov int3 ror in or loopne movsb xor xor mov xchg lcall pop jb sbb lds xchg mov aad mov aad jbe outsb jae sbb dec cld cs cmp mov xchg adc add fyl2x sbb insb xor mov mov mov xchg push push repnz daa or and addb mov push faddp aam push popf add movsl mov lods aad lret adc push jmp int3 jno mov add jno pop lahf rcrb or test sahf jmp push popa xor shll jecxz add cmp insb mov in push or into call jno (bad) repnz mov cmpxchg call inc adc lahf push fadds js mov jp mov mov xor jae mov sub xchg jnp outsl pushf add jp jae jg xor stc addr16 cmc add je testb cltd fdivs enter fldl2e mov add xchg sarl test movsb or xor lds jne roll mov dec hlt push pop std cltd xchg and (bad) sub ret popf repnz outsb xor pop in insl mov jle xor int dec xchg aaa es pop lea sbb mov (bad) stos shrb dec nop out push (bad) loope imul fdivl sub xchg jbe fiadd xor mov sti popf imul cmpsl popf shl sub xor and imul sbb push stos fadds and imul xchg sar ret pushf pop aas jo dec push iret cmpsl dec mov not inc mov mov mov mov sub popa jnp pop jo (bad) aam scas data16 sbb stos arpl xor pusha mov cmp icebp push mov loope fsubl and push nop dec jl subl push aad aaa sub rorl xor mov push pushf clc fisubrl aas scas lods and (bad) out push inc adc cmp jo test or add (bad) loop into imulb jmp test adc pop xor adc ds inc adc push xor out push sub clc pop sti clc adc xchg divl mov jae push mov movl add icebp sub and dec mov sti mov cli lahf ror test inc pop hlt cltd adc inc lock sbb ljmp mov sti push cmp pop mov negl jp and cmp inc lods in pop cmc hlt xchg push jns das lahf cli or xchg or xor adc cmp outsb or sub sarb xchg cmp stc inc push int daa movsb pop movsl je pop iret and sarl push fdivrs shl test cmpl and xchg popf push popa aad out jo repnz and cmp pop shl sub fdivs cmp lret imul fwait in push mov insb mov mov movsb stos sbb cli adc fadd jle jae fiadd dec das bound and adc cmp mov and xchg mov or loopne mov fadds sahf jmp dec pop es mov xor cmpsl inc xlat movl das orl xor push adc fidiv xor cmp and das add or xchg or imul sahf pop sbb jl cltd imulb clc lock push icebp divb add pop jecxz pop dec test cmpsl icebp fwait addr16 xchg test jp jo shrl jecxz mov jae mov inc or mov test or les sbb in shrb roll in rorb (bad) loopne xor mov and jp mov icebp in ds push sub mov mov fld cmc lds imul cmp mov negl mov and lock mov popa push int sti mov pop call lret push in iret cwtl lock mov aad and call pshufw mov jl push ficoml lret jne sti stos pop hlt dec and std jmp popa jecxz out inc sbb pop dec pop sub sahf repz scas add jns push cmp mov imul mov faddl mov xor dec fcompl mov pop mov out pushl imul cmp sub sbb push repnz mov push ss xor sub jb mov mov sub pop xor out push or pusha cli push cmp call mov cwtl lods and dec fiadd pop int mov inc sarl sti mov mov (bad) aam imulb cmpsb shlb sub movsl daa ja ss cmc es and roll mov popa jp call and cmc test fs mulb add mov je loopne (bad) jmp lea push cmpsb xlat add dec sub mov cmc (bad) mov imul aas sbb push gs in test hlt mov stos mov imul cli or ljmp cld sub (bad) ret inc es xor aas push int bound enter mov xchg in lcall or pop lds pop and or repz xchg imul mov dec cmpsb sub xchg pminsw ret data16 add mov push sub mov int3 push mov sbb cmp clc lock (bad) fwait or add mov test popf mov xchg scas xor icebp and hlt movsb lock addb loopne cld insb pop imul mov xchg push add gs push sbb lahf or xchg add dec dec cmpb inc pushf ljmp enter sub out js (bad) ja lods mov xchg xor inc out js mov fistp xchg cmpsb loop (bad) mov xor cs xchg or call jg push jb or adc push sbb and in sub mov dec mov fistpl gs mov lds jge xchg pushf test jmp mov imul pop enter jmp pushf inc add (bad) (bad) je data16 adc dec mov xchg mov cmp sub lcall jns in inc cli imul (bad) fnstenv push dec pop sub (bad) icebp fwait (bad) mov aam mov mov mov incl neg (bad) notl dec cmp fdivrl adc ss add jb (bad) lahf (bad) cld push dec mov cltd or push enter xchg in pop xchg dec and jmp sbb adc and in jl sbb mov outsb and aam clc pop xchg or cmp lds pop dec inc cmpsl xchg inc cmpsb cmp das or std ret nop flds movsl dec cs enter sbb lock xchg xchg xchg movb xchg or xchg (bad) mov shll sahf pop movsl bound sbb xor jg mov push mov cmpsb fnstsw js out xchg mov aam cmp rorb in ss insl or je pop jae les test inc fdivs sbb aad pop (bad) ret subl xchg push insl loop push (bad) stos jbe,pn leave add les adc mov push fstpt jp lock add and nop into cmp jns and in movsb mov push mov fs and dec inc sub std scas (bad) adc lods ret inc jns enter fcmovu mov dec xor (bad) insl mov sub fld orb adc loope sti adc (bad) jge rorl insb roll daa mov push mov inc bound aam and or or or fwait insl in lods dec popa and mov mov lcall (bad) push push fbstp pop adc or push je jmp push into pop dec loopne mov jge sbb fwait lods jp pop insl mov shrb repnz mov ret xlat push push pop mov das std push push pop loopne js mov mov sbbl and pop xlat mov dec stos add out mov int push push mov mov jl sub mov stc xlat loop sub push sbb outsb and cmp je std pop xchg pop sbbl xor mov pop nop (bad) rep popa xchg movsl jge std sub inc mov cmc cli sbb push mov leave push dec mov addb push dec lret stc (bad) gs ficomp pop fstps pop pop ret cs sbb mov and add sub pop adc jb mov jle (bad) repnz xor and js mov inc push xchg les js dec or mov sbb fiaddl or ljmp insb inc inc data16 push inc (bad) and add out stos adcl aaa mov sbb cli (bad) jg dec into add pop push jbe mov (bad) mov cmp bound push jge fisubrl cmpsl pop mov mov and fsubrs incl js cwtl push ficoml lret and sahf sub jns,pn pop jo adc xchg (bad) call xchg push adc pop adc int bound pusha enter rcl iret add dec and xchg int xchg ja addr16 mov cmp adc aaa add pop pop jg fistpll inc clc or movb adc test pop fucompp pop adc fwait inc adc push and pop cmp ficomp pop xor add push or mov dec push lcall roll test adc push jg sbb adc cltd push jecxz dec adc adc sub push arpl xchg sub pop cmp (bad) aas jb in mov inc outsl pop dec mov or mov cmpl pop xchg mov test mov addl xor dec and imul pop pop (bad) jne mov fidivr sub mov loopne sub sbbl lret mov out sub mov pop int3 out jno dec push push (bad) mov std lret gs into and sub inc xchg repnz or addr16 add pop jmp pushl (bad) icebp test mov int3 or and inc inc pusha sahf jo inc int in jae mov ss add movsl jg sub jp mov push fildll (bad) and cltd (bad) out loopne inc jge mov stos pop ljmp mov hlt out mov mov fldcw sarl and outsb push ljmp in (bad) in pop (bad) cmp inc ss push xor arpl clc dec movsl sub mov push ret xadd jnp repz push push sbb pop shrl mov adc pop dec (bad) xor cmpsl and mov fdivrl push sar mov or int add or xor imul or cltd imul jg or sub sub lds jge les enter mov (bad) xchg or repz lahf lods push mov leave cmp rolb mov xor sub ja in xchg insb lds xchg and xor sahf lds lods dec repz sub (bad) dec std sbb mov jo movsb add and xor pop inc sti in enter sbb pop mov ss mov icebp enter push out call movsb lret lock movsb push aam adc fidiv sub mov (bad) sub cmpsb std dec dec ljmp jge sti outsl fsubr sbb dec lcall pop jp xchg sbb add and fs fisttp mov gs ja or mov push into mov push xor xchg fidivrl cmp pop aam idivb (bad) lods jp (bad) cmp test test mov enter repz jb push outsb dec xlat inc jae mov scas out das int3 adc (bad) stos pop pop (bad) mov adc jns mov pop das pusha adc out ds scas xchg jmp es push fucomi sarl sahf push insl mov xchg stos aas mov int and lcall int ficomp test rol fistl dec (bad) mov fist mov xchg mov mov inc ja movsl call sub repnz mov mov mov fcoms fs inc add sarl xchg andb xor es shrl shrl je cli cltd add sbb sbb jmp (bad) push push pusha dec jl test loope xlat or jns imul fs lret pop inc xor fprem1 add mov jge fdivs bound inc js call sub cmp lds int3 arpl sub xor mov adcl fist mov dec cmp inc stos jns xlat push fnsave je test into pop mov cmpsb sarl lock in mov dec pop adc dec push push xchg push sub scas and lcall idivb xor jns pop dec out fstpl int (bad) lock add repnz outsb dec jnp cpuid aas rorb jns dec outsb cmp and jne dec dec cltd mov mov int stos outsb das rcrl sub jae pushf das and or ja pop scas sbb jno or xchg jl lock xchg insl or fs xor pop sti ljmp fstpt dec jno add pop outsw icebp pop clc inc mov out push add add push sti push fldl pop push lret xor test sar shrl push mov shrl pop (bad) jg xor add sarl sbb es push cmp xchg mov xchg or insb jge (bad) fsub insb sbb movsl lods cmpsb inc adcl addr16 test sub xchg hlt bound divb (bad) sub iret adc cs popf movsl fisubr adc shlb pop fiaddl lds mov ret or and (bad) leave jb lea push xchg mov sub add mov pushf xchg pop cmp pop pop das inc sti orb das xchg pcmpeqb stc cmpsb xchg (bad) sti stos or lret test (bad) outsl test popf jle fs or push or loopne ss cmpsb cmp jne pop or xchg stc mov mov daa adc call aas das pop jg jge mov into nop out fdivrs ljmp xor rcr aad mov mov jo sub push or mov or adc aad pop push incb lret lcall inc sbb cmp inc mov movsl dec sbb push push mov push cmc icebp mov pop cmpsb (bad) aad mov jg addl insb popa xchg clc fwait dec sbb sarb in test or mov out movsb xor mov pop (bad) pushf xchg dec aam lcall movsb and loop xorb movsb xchg pop jno xchg and popa mov orl stos pop out stos arpl inc das mov jl enter inc mov mov test xor in std lods push fidivr arpl dec add dec xchg pushf add js pop pop xchg mov sbb loope les adc pop rcl mov sbb in and test mov or rcr and dec out dec xchg dec lock pop gs adc mov fsubl mov adc (bad) mov enter and lods mov xor mov fstps push test jle xchg pop ficom cmpsb sti les stos jl sub mov sarl roll stos pop dec sti test and in mov xlat rolb add mov mov add pop cld popf push (bad) sub scas push loope sub dec leave (bad) xor sbb gs inc (bad) mov fwait mov fdivl cmp inc pop (bad) and aaa or into popa movsl mov shr lret and mov in dec (bad) out adcb sub cmpsb sbb xor jne push xor sbb xlat and dec pop ljmp mov fisubl or pop int3 mov dec mov sub es mov push xor cmp cmpsl cmc mov (bad) mov (bad) jne std add sahf scas sub es lcall mov xor xchg cli stos hlt pop sub adc rol jmp out mov mov pop iret mov ljmp les sti imul gs pusha jg insl jbe or loope sub (bad) daa mov pop or xor hlt push leave (bad) sub (bad) mov jle ret test out push jge dec dec sub sahf (bad) cltd repnz bound or ss and xlat enter pop pop pop mov shrb repnz inc xor lods mov ljmp fild daa shl adc add dec and xchg dec sub inc sbb adc pop sub pop ss xchg ret fistp inc and fs cmp imul gs ss test xchg mov (bad) adc fdivrs icebp xchg inc push lods sub andl adc stos ret push in push loope int3 sbb adc divl cld lahf push sbb cmpsb add inc dec aam flds or aam push ret je dec lods jp xchg adc ljmp out mov xchg out mov and pop ljmp roll lea pop sbb cmc hlt movsl or das xor test mov and add push pop cli sar jbe stc jae ljmp cmpsl mov hlt or sahf fidiv out mov push jb out add popa mov cmp sbb enter jne sahf dec es xchg sub popa xchg xchg repz insl lret fdivp punpckhdq loope rcl adc push add jle mov or pop sahf ret lock scas out pop push push sbb add scas cs mov mov inc and push adc mov add cld and std (bad) cmp or jl xchg cli inc into pop test inc stos jp sub ftst cwtl enter mov jnp mov lret push sbb scas push daa adc clc clc in loope stos stos out mov inc inc xor stos jo and add aad jg adc outsl (bad) push and push lds test pop sub andl xchg jmp cwtl cmp testl bound pop lret lds cli jecxz cmc xchg inc ret int dec ljmp jne ss mov and push cmpsb dec add std test mov mov or dec cmp leave dec ss arpl loope insl mov iret call xchg js divb mov clc rorl xchg (bad) adc cmc mov repz rolb cld adc sbb jp test iret xor lods or std ret inc iret jne scas (bad) leave pop int and lods movsl aam popf inc push cmp stc addr16 aas add mov mov pop (bad) and (bad) dec jecxz jg out fcomps add xchg add leave mov mov not pushf mov bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp cwtl adc pop loopne inc enter add jmp das pop xor out dec push xchg sub jl nop and test sub jmp jae (bad) mov stc inc mov out aaa mov std adc orl mov repnz mov repz xchg push add xchg jg pop ds rcrb lret cmp stos sbb pop fisttpll pop roll je shrb sbb bound (bad) mulb cmc cmc test mov btr shl neg mov pushf neg not jmp bt sub jmp dec roll loope inc or data16 pop fmuls sahf cmp add jnp in mov loop push (bad) out (bad) inc dec push cmp cmc xor adc or hlt add mov xor sbb pushf cwtl jle leave fs push and jg add xchg clc add xchg pop cli (bad) nop add int3 rclb adc sbb sti sar pop outsl or lods ss lods sub mov jbe mov mov lods xlat (bad) cli inc mov (bad) and dec mov mov inc pop (bad) pop mov or (bad) je or pop out xchg xchg fcmovnbe leave das fcoml into out mov gs insl pop fnsave sysret cltd mov pop dec cmp dec clc lea fnsave mov stc (bad) stos jg lods aam adc inc inc cmp mov push and cmp or (bad) jae fwait cs mov jmp movsb push pop in out out dec lds imul sub sarb or jl in out jg out push clc ds sbb mov push adc xor js push xchg mov sub cmpsl push lods pop mov dec add xchg xchg add fs roll sub cmp call fbstp fmuls cmp mov or pop push imul lods push pop inc cmp xor jecxz dec jecxz mov cmp mov sbb inc cmp std add mov xchg mov sub sar mov jecxz clc sbb cmc jo mov or ret movb adc xor xchg jmp xchg (bad) (bad) cltd shrb dec out mov or fstpl push dec rorl (bad) lods int3 adc jecxz inc fwait pusha and jns outsl push and mov or in (bad) ja or pop out shrb stc mov scas mov cmp or sbbb push mov out inc mov scas dec cmp jne aas into cmp mov push jno repnz add lea inc in cwtl push orl pusha push xchg inc (bad) fnsave std sbb repnz outsl outsl mov pop imul rorb fsubl and dec fsubrs andb jns mov xor cli or or subb mov lret inc push push insl and mov imul inc mov mov xor movsb inc or test gs mov lret mov (bad) je xor test ss fsubrl (bad) ss jmp int3 xchg (bad) shr scas mov call aaa pop movsb stos jp jp inc sbb mov inc push jne xlat and lret lahf sbbl hlt push pop or shrl adc jmp das adc int popf insl test and out cmp xor xchg push xchg mov ds jno pop dec mov mov fisubl push lahf pop in add ret mov subps ret mov add ror test ret adc adc add lcall imul pushf mov (bad) jl push or dec pop std stc and and daa mov popf arpl dec jns cld jnp popa mull push add inc pusha out stc add jnp addr16 jne cmp iret fwait mov push (bad) pop pop jae push xor pop movsl repz xor mov not mov pushl stos pushf lea jmp int3 sub inc je or mov adc jns mov scas mov add mov fistl xchg jle jae bound add dec mov in or push xchg jg xchg cld in mov add repz mov mov lahf stc push or xchg mov test sbb test jno mov pusha test lods and mov jae or sbb jecxz,pn inc fucomi stos ss lahf cs stos jl out or adc aam loopne cld sub inc enter mov stc icebp mov lret xchg outsl add sahf imul mov pop add loop enter xchg das xor insb mov imul je notb roll mov xchg pop les mov rclb jmp sti cmc adc mov insl xchg ja ret push out std ja aaa cmp jg and aaa cmp dec in dec scas mov es into in jp xlat mov sbb aaa jae lea incl jp fcomps hlt xor inc mov stc add push clc sub call pushf lea call jmp jne inc xchg sbb jge sbb xchg and incl mov sub jmp mov sbb lret in test loop inc mov mov int3 inc mov repnz sbb lods xchg mov push or fcmovbe lahf fldt test pop call insl lods test test fisttp je sbb push pop scas sarb lock mov aad cmc pop mov and inc inc dec xor lcall xor xchg out or pop pushf xchg xor mov mov inc lret data16 cmp stos add div mov lret jae sub or (bad) dec cs cs inc cmp push sbb stos fs adc push fistp stos jnp jne pop rcll cmp movsl push mov adc cmp out mov dec or dec lret jp sub aad xchg jb or jp addl mov or pop cltd cltd fwait pop mov dec divl mov ss js fimull fnsave sub mov jb (bad) sbb rep adc xchg pop lods lods lock subl dec or xor pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call fbld and call jle add push push ret call lods ret cwtl movb int3 ds xor jb pop (bad) (bad) dec imul rol mov fbld xchg cld push pop cs fisubrl std fs sti cltd sub lods push das add popf push add add ret icebp (bad) lcall cs orl xor cmpl ljmp pop push mov jo add adc mov or xchg (bad) lock int3 mov std adc inc mov (bad) testl pusha jnp fs (bad) rclb je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add pop and inc adc push lcall cmp cmpsl mov loopne push dec imul adc jge adc fsubl orb jp ficompl mov mov xchg shrl cmpsb dec mov or or daa ljmp mov add daa data16 cmpsb push push adc data16 mov iret push dec mov xchg imul push dec (bad) jne add jmp xor or cs in call je fildl add and push adc cld add inc xlat mov sbb repz sbb movntps decl outsl xchg add and push fstps sarl popa xchg sub inc lret xchg (bad) jb movsb test into (bad) push and push push scas push sti push sub pop sar and add and cmpsl adc scas stc xchg jle mov mov (bad) dec xor push dec xlat or jo add stos loop addl repz hlt fiadd test pop or fmuls rcrl add out inc leave adc inc test mov insb xchg pushl add test fwait scas inc xlat cld pop mov aas addr16 ret icebp jns int dec enter js out icebp adc std lds mov or or and movsb push bound mov adc sub aam inc pop add jp sbb xchg xchg pushf mov popa shrb insb adc addr16 cmp mov (bad) pop cli xchg cld cli ljmp scas loope scas mov scas push imul das mov add cld aaa icebp (bad) dec and cmpsb ds cmp ds scas test test and jne xor mov sub xchg or loopne cmp jbe sbb insb loop test aad xchg mov inc push xchg hlt mov push or xor fdivrs idivl jl arpl jl or push rcll loope mov push lahf jp (bad) jg push repz jg and push lds ret int3 mov test test add repnz jecxz inc les sub sarb xor xor jo adc xlat ss roll sub mov mov call pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp or mov loop inc int inc and (bad) dec sub js js sbb mov ficompl aam hlt inc add and fisttpl ret push xor in int mov cmpb in xchg or je adc push jp or jns dec mov sbb xchg xorb mov xchg mov loop aam sub fbstp sub gs pop aad or sub les pushf aaa popf sub pop mov jo push sbb dec pushf dec call leave mov aam inc add shr mov cmc call jmp inc mov adc or lret lret and push push sub fsubr xor pushf loop out mov jg cmp fsts mov lret push add fwait push (bad) and xchg fsubl aam and shrl or int mov ss jbe mov jle (bad) jmp push push adc test push mov inc aam and mov sub mov dec cmpsb sub mov test idivb mov sarb subl outsl xor jl xor std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl ret in or lods mov push dec loopne jp adc dec into add jl jo xchg mov out xchg cmp or inc jmp mov inc mov sub enter xor push nop or mov les and rclb xor les mov xchg popa out inc add xlat push test pop mov cli push cmp (bad) hlt pop mov daa sahf jnp push enter cwtl aas lret lods mov je sbb add add or dec push or es nop xor fistl push aam stos lock xchg pop pop cmp stos ljmp and dec stos xchg push pop dec pop (bad) adc mov adc into sysexit jno enter into sub test insb aaa sub iret into and add inc and lcall mov loopne dec repz or sbb lods shl pop ja jns fimull lods add sub pop sbb sbb rcrl daa decb push mov das in mov sbb insl add lea pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp xchg (bad) jl out or adc rorb add les enter pushf loopne mov adcl cmpsl out sub ds dec test push sti xchg push pop push cmpsb imul das or outsl stos sbb push fisubr stos sub sbb push loope sub push jg pop push call pop cmpl lcall in loope mov pop or insb shll subl imul jns xchg imul dec mov fistpl les sub push in push test pop dec lock inc mov inc jmp jle jp inc (bad) cmp dec mov into xchg mov sbb cmp mov lcall sarb jmp push cmp popa lahf clc sub add fiadd jns mov popf nop jg adc ret inc sbb push movsb inc ljmp lods ss pusha es stos adc mov push or add lahf in xor hlt jp outsb dec movsl and js popf sbb sbb jle cmpsl es sub xchg ficom jle (bad) stc xor dec rcrl and enter xor sti or iret sub cs sub outsb xchg inc pop ret xchg mov js lret (bad) dec imul insb sbb jp dec stos test xor loope sub inc shr adc mov mov pop rol mov jge das inc repnz cmp mov xor loope or push leave (bad) call out cmp mov jecxz cmp cmp and mov std sbb enter dec pop aam (bad) cmp sub jle cmp or gs adc lea out adc inc int in mov popf fdivl dec imul mov mov xchg fisubl inc mov mov push jp dec push jne das sub xchg sub push adc out pushf inc inc es and in js add dec inc (bad) push in push adc scas xorb pop aas (bad) lods daa sti add cli adc notl pop data16 add daa mov sub (bad) int xchg stos mov popa fimull cmp inc mov mov movsb jp fisttpl add xlat add in mov loopne (bad) out cmp mov not pusha or jae fiadd jle (bad) push push ret or push inc cs in xchg jb inc sub jo inc mov clc jl inc xchg dec aas mov mov aam add add xor or pop sarb sbb cmp jnp,pt jmp jg push xchg and mov out neg jno xchg (bad) mov ret lcall fsubr pop inc movsl lret sub jmp xor pushl ror ret adc ljmp dec cmpsb xchg sub fistl (bad) jno insb pop icebp lods cltd imul mov ja cltd fs xlat outsb and mov adc call push enter push jno and lds ljmp jns and or add jmp pop jno negb aaa imul jo sti fisttpl add xor jno cmp dec lods jbe jo sbb idivb stc movb push lret mov inc std sbb pop test mov lret shlb cmc lods sub pop fwait jnp pushf and daa pop jmp add (bad) sahf and sub jne repnz pop subps mov or ret scas rcrl int3 jae rolb add ds imul out dec mov rorl icebp nop test and pusha movl jmp push enter or or rcrb shlb push lock into or xor cmpsb jnp dec xchg and fucomi daa gs mov mov into faddl out pop xor das fisttp cmc loop stos scas lcall mov cld pushf daa out xchg mov or jb,pt jg jl sbb cmpsb shrl inc into hlt cltd popa pop and fdivl int sahf cmpsl iret lret mov lds xchg hlt sub pop sbb dec ret inc scas and add fidiv mov add stos shr xchg push jne xchg outsl out aas pusha pushf lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp cli sbb insw and cmp and inc fnop ss fimull xor xchg add push movb inc daa dec scas sub push or test ss dec adc popa daa out popf sub xchg push clc or pop sub stos add lock pop jbe enter fdiv xor les int fsubr inc shl push lods jle mov fidiv sti cltd adc popl fstpl xor repnz push sbb je int mov jno or jne out xchg jnp or das xchg sbb jae xchg jbe out sub fnstenv insl pushf pusha pushf lea jne pusha jmp cwtl call or or dec mov dec lret fwait add cmp mov roll sbb and mov pop or dec mov cmp daa xchg and fnstcw in add je jp sub clc cmp lret add adc mov outsb mov (bad) jns icebp sub xchg xchg movb mov call push mov and sub movsb clc cmpsb ret jnp test and loope lret repz stos or push or dec mov cmp sub pop xchg adc cmp cmp std sub adc xor fadds adc cmpl into sahf push add lods ret in popf xchg imul movsl mov loopne cmp loop push add jnp push mov xor dec es lret (bad) fiaddl notl aad (bad) fidivrl and jecxz mov cltd mov inc push ret sub lahf xchg inc idivl adc xor jle or mov stos and xor je aaa clc mov in and jl xlat push cmp jmp xchg add decl push insl cmp mov lahf sbb xchg (bad) pop jg lea or push xor cltd not adc aad jp jle pop dec jl push mov (bad) cmc xchg push add and popf js es lea arpl xlat cmp inc clc inc js hlt gs sbb out xchg mov pop icebp iret jge xor or pushf lret ss in js stc inc aam inc clc jnp push test lcall jne lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call fidivl adc or cmp pop ret adc div add jp push mov sbb sub xchg insb add fimull adc outsl aaa iret fs scas jl das pushf push dec jae dec jmp scas orl jb dec out or mov jnp fcoms inc test ljmp cmpsl outsl ret jb sbb rol gs xlat (bad) cmp int push fsubs mov mov xor or cmp pop movsb cld push test gs fmull and inc mov lds cmp shrb fld and imul test jb pushl dec incl dec push pushf stc mov call lock adc mov jp sbb jae out jl out lock adc fistpl cltd loope cltd pop and dec cltd cmpl sbb insl xchg imul add jmp fiadd dec ss notb mov call mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret pop stos push xchg or mov lods xorl pop mov decb divb cmp or xchg xchg fwait cmp stos fsts popa or add jns pusha sbb mov stos adc mov ficomp mov addr16 (bad) mov negb add dec test pop pop inc xlat scas push push adc mov push lods cli les test rcl arpl mov insb loop pushf pop sti push daa and push ds fdivs push xchg test jns popa popa orl lods pop jmp lret leave add movsl ret mov xchg out and fwait jmp and fsubrp xor push jmp sub mov out cmp sbb scas cld cmc icebp mov add rcll fsubrs inc lret and inc in cmp dec xlat push sbb dec mov test lret outsb mov adc xchg les int pop jl into (bad) push xchg dec push insb mov inc addr16 xchg outsl xor add inc jp inc (bad) pop lds sub arpl push cmp or ret sbbl jbe (bad) mov push call adc in jmp push mov int3 or shll mov je (bad) insb add dec repnz add outsb enter popf pop daa (bad) xchg jg rorb mov xchg (bad) dec pop cmpsl fsts stos mov jg nop aam jmp (bad) lds pop push scas mov aaa mov and ret pop xor iret outsl fdivrs icebp movsb pop movsb pop das xchg sbb add sbb (bad) std jo dec dec outsl movsl inc in push mov xchg gs jo pop mov and sub sub (bad) push in (bad) decl divl fdivp rol (bad) leave mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp mov or jbe add in xchg add lea (bad) pushf pop clc push add insb mov and add outsl mov sub adc jl cmp push in or call loope mov sbb inc cli lods pop test cmc das stc push pop xchg or mov xor (bad) outsl jmp jne add inc mov xlat push jmp jb push aaa mov lea sub cmp push rcl push aas push sbb lds or out mov outsl xor xchg inc pushf sbb loop stos call sbb inc pop stos lea ja push lea call jmp or (bad) sbb or pop lret jnp jno insl sbb mov and inc stos mov adc push and pop cmp lahf jb and fidiv jb adc in icebp icebp mov inc gs xchg sub stc sahf jo aam push ja call add inc mov dec dec xchg pop pop out and jns cli js mulb outsl icebp repz cmp pop or mov add push popa mov xor xor mov jo imul ljmp sahf enter adc rcl dec fdivl es aad lret ss xorb cltd pop cmp es xor sbb das inc stc decl sbbl add call jb mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp xor decl lcall mov push pop pop notb mov push add hlt pushf jge lahf cmpsl aam push out repz cld outsl or mov sbb push ret aas imul into and mov pop aad lret into mov (bad) xchg stos mov das add pop aas or sti ljmp add pop call inc sbb into aas push (bad) mov call add je les dec (bad) cmp clc pop das push inc push jp sarb mov dec int or and jo faddl loopne (bad) mov xrelease xchg repz xchg xchg ja mov xchg inc xchg pop and clc or pop inc mov ss test sub pop xor push inc pusha jle cli adc push std repnz or mov jne stos xor cmpsl jo dec dec lret loope fs inc movsb push lds push insl and cmp fs or xchg adc scas or jp arpl das jne adc sbb pop add mov cli xchg push arpl push jge pop jne or dec std je adc test sti dec lock sbb hlt jb sbb cs mov call or out stc or cs pushf (bad) lock jl lock movsb mov jo roll sti inc jecxz cli push lods xchg clc adc (bad) lret dec pop cmpsb cmp movsl loope adcb pop sub pop mov push repnz adcl cmpb lret cltd mov or aaa out jl mov mov xchg lret cmp lret xor (bad) sub adc xchg mov xchg pop sbb rcrb pop into cmp jo jnp nop int3 jae xor dec div push inc fwait pusha fildl scas pushf seta movb pusha lea call lret flds nop or sarl sub add pop cmpsl lock mov inc lods mov push push lds push jp cmp test sbb push mov xchg cmp dec xor push mov insb test imul adc int js sbb rcrb xor or jnp sbb pop jmp sbb xor and ljmp mov adc loopne cmp in pop cwtl xor (bad) sbb pusha lret dec push fstpt cmpsb jecxz xor push mov jle jl movl dec cli pusha lahf outsb jae xchg push push mov jg in scas das sbb jno inc dec (bad) popa int3 ss xor pop pop mov lock jnp (bad) push cwtl dec mov in scas sub (bad) jno inc push loope mov mov pop mov sbb sub out dec addr16 (bad) xchg jns xchg enter mov sbb sub mov jecxz stos mov shll xor mov mov push cmpsb sahf sahf xlat dec adc cmp aas mov mulb es in (bad) ret test mov xor push mov xor sbb mov ss (bad) mov pop mov jnp call ja out adc mov sub dec sbb jge ret cs lahf scas outsb sbb jo add sub test lret sub lods or cmp pop rcll jne fisubrl mov inc pop scas xor cmpsl nop push pop lret jl ss scas xor dec mov testb sbb lcall mov loope or sahf sbb push fidivrl or xor loope movsb aaa hlt xor adc xchg aad js in pop jns pop fndisi(8087 push or in dec mov xor dec leave jbe pushf push mov push test sarb ja push movsb jg cld xchg gs dec jmp dec xchg test into sbb pop aad aad movl cmpsl loop xchg (bad) ss mov push lret loop data16 ret mov enter sahf ret insb shrb dec bound stc decb cwtl popa xchg aas fld and das push outsl addr16 imul mov movsb add dec lcall cmc mov add mov inc repz mov adc xchg or lds jno imul xchg push adc fstps arpl (bad) stos pop pop insb loope cltd xchg fisttpl xchg sbb mov (bad) xor cmpsl sub mov pop scas and mov fld jl lahf dec sti xor mov popa data16 daa into cmp sahf mov popf call xor jo cmpsb xor repnz pop add cmpsb in mov dec jno lret xchg je push xchg leave or dec scas mov lahf xchg or add inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp and push inc xchg or clc addb sub outsb mov pop nop push pop xor push xchg xchg rcll sbb stos sub cmp dec jns cmp inc ds pusha movsl add ret push fnsave into inc mov push jmp inc pop sbb pop (bad) (bad) lret jo call and or rcrb mov push sub mov out outsb xor (bad) cmp neg lods out and adc mov mov arpl lods call arpl je cmp push pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call push jle mov push inc out loope sub mov aas mov jne inc (bad) das das jno addr16 mov cmp pop insb jmp arpl mov add cmp adc pop fsubrs sahf sbb ja jp dec push hlt push jecxz mov or or push mov push inc test adc mov mov (bad) sub push sub outsb out out test adc fs mulb sub push cmp ret and pop jg sub fwait std jae nop ja adc pop (bad) pop push inc xchg dec sub inc jg adc sub pushf push sbb add and cs or in xor fsubr sub xchg loopne iret cmp cmc push sti pusha stos pusha sub dec int jno mov push insl adc or sbb iret aas mov pop add push in fidivr lods add sbb and loope test pop xor xor mov popa lods push test shll sbb insb fistp or icebp cmp cmp sbb fldl push inc dec inc push xchg je dec xchg push pusha add outsb je movsb gs cmp dec int fildl test insl iret arpl push adc cltd sbb repnz (bad) aaa daa push aad xchg mov icebp adc sbb mov dec mov outsl lret and jl xlat lods jo (bad) xorl xchg fnsave shrb test ljmp sub mov inc ror out sbb loope dec adc mov add inc add xchg scas into inc mov sahf orb push jmp jb movsl push adc cld lcall mov scas add sub and push rorb int test push and scas inc in sbb push cmp xor sti bound inc ss sti (bad) dec insb ret mov xchg jl dec inc mov inc mov inc shr cmp sub add ret int jae and inc aad out fiaddl inc xor cli dec adc test std idiv lods mov push cmp nop movq mov nop cmp data16 push pop sub xchg addr16 sarb mov push push fisubl clc imul mov inc imul fs jne pusha movb setae jmp inc xchg add inc mov (bad) rolb js dec aad daa (bad) leave sbb sub xor insl pushf jae mov dec inc cmp jp lods cmp pop mov push mov mov pop insb xchg outsl lcall (bad) ljmp add xor jmp adc mov cli xchg dec test lods pop push inc movsl pop sbb push mov add and (bad) inc loope cwtl mov xor pop movb ja sbb pop (bad) (bad) cwtl mov nop aas cmpsb inc mov add test ds mov rclb add and outsb js and add inc mov lds pop ret adc aas (bad) mov insl insl int3 and jle pusha test xchg aad dec xchg outsl add mov inc and scas pop fist scas ljmp adc std mov dec loope in es das rcll xchg ss add cltd jno xor jnp inc push popf push int pop mov sti pop out cwtl cmpsb orb lds jbe and pusha pop add popa jbe js aas jge out mov cltd cmp cmp aaa xor inc mov pop jle mov sub addl aam jns and mov in cmp push xchg lods cld jnp cmp (bad) lret dec inc or ljmp and push mov inc pop xchg push push enter cs inc cs sub mov push dec mov jecxz out mov jp or scas dec cmpsl xchg ljmp outsb xor xchg test sub stos roll xchg call ret mov pop sti xchg leave add mov mov repnz inc adc movsl enter ja pop pop and xchg aas (bad) adc add mov adc or cltd stc mov xor inc inc out push xchg jl and cmp add cltd add cs movsb or daa addr16 bound cltd jge mov dec xchg push xchg pop jns pop test hlt cwtl push push push and mov aam inc loope add sbb mov xchg stc nop jnp mov je xor enter mov dec push xor lret inc pop aaa inc push imul jmp inc jo arpl jno cmp mov xor mov add xor fild loop test pushf sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp out inc fwait or test dec and mov or js lock loopne in cs outsb into jno pop in sub xor dec pop mov or add out xor add imul in shrl add lahf ret push out sbb mov jb inc inc cmpl hlt push test mov pop sub rcll mov and pop lods xchg call or into int lahf in xchg fs int3 popl push cs fcmove cmp sbb les (bad) repnz ljmp inc popa fdivrs lock inc adc orl (bad) jge or add arpl dec add inc and mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call xor adc push push inc rcrb lahf minps jge mov (bad) repnz dec pop xor jle sbb jmp jno ja cli lret jmp (bad) arpl xchg sbb insb sub inc (bad) in ficoml mov (bad) js xchg stos (bad) notl repz pop lods adc sbb ja lret jbe and push mov test sbb call pusha jmp sub inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call fldcw insl stc femms inc outsl fs xor mov xlat jns lcall pop mov mov xchg push call cmp push mov outsl or stos loop std jge push cmp or push lods or jg or fs popf std and xchg and pop jl inc pop stos (bad) and packuswb loope stos (bad) jb inc dec inc mov punpckhbw mov (bad) mov or and lret add mov pop lock int or dec stc xor jg pop pusha sub lret fxch cmp cmp out mov movsl lcall lods dec pop push (bad) ss test shll dec rcll lods or out (bad) call add gs jp push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) lcall ljmp or inc jne push repnz xchg xchg jmp addr16 jg cltd fwait add dec lds jo add iret dec in mov lea (bad) xlat out inc adc xchg lods jne xchg (bad) lret ds or in mov aam les sub push push inc jne addr16 roll xchg cmp mov movsl movsb iret dec in dec es mov in and sub mov sarb (bad) mov out rorb (bad) dec in rclb cli or adc or (bad) and pop (bad) cmp sbb adc imul aas push cld push pop inc jle pop sub push or lcall nop (bad) into (bad) sbb dec pushl popl pushf pusha pushl ret add inc js je jb arpl jae lea orl jbe adc xchg adc cmp movsl add (bad) cmpsl pop pop push scas adc jecxz lcall sub daa nop js enter xchg je xchg ja popa scas xor pushf lcall push fdivrs daa lret int3 mov mov dec xchg push lret cmpsb dec shlb push daa push push lods mov dec push mov push xchg jecxz sbb jne cmp cwtl cmp mov mov and add movsl adc out call repnz sbb mov (bad) xor std insb nop pop cltd orl xor call sub call pushf mov pushf adc pusha bt sub movb shl pushl jmp mov or test adc dec push push fs jbe add mov (bad) pop icebp (bad) mov dec imul pusha jp inc mov dec and cmc inc pop xor cmpsl xchg jns push enter push rcr or lcall xor pop movsb cld pop repnz mov lret xchg add xchg push test push cmp xchg jne int int3 dec leave push mov jbe fs mov push pop call mov (bad) jb aas push push pop roll insl cltd inc xchg lock mov stos mov add arpl sahf sbb add push sbb jns xchg ljmp mov lea jne cmc bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp pop jl mov mov cmp sbb repz mov into test shrb mov xor ds push mov push out scas jl cli jbe in fdiv ficomp fsubs test or ds inc cmp push (bad) or aam and test and sbb adc add enter pop sti mov adc and mov pop push cmc icebp mov pop sub gs cmpsl cmp lds (bad) mov lcall and and fiaddl and xor mov std push outsl mov cltd bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp scas dec nop inc adc loop mov test cmp mov push bound mov stos mov push fistp rolb ret xchg adc sub mov (bad) fidiv ss push mov sub (bad) clc iret jnp fdivrp test lahf inc push (bad) jl and (bad) lahf ja (bad) nop ds mov inc idiv bound jb pop fdivp lahf xchg test stc icebp push lds push aas xor movsb shrb outsb es sub and mov roll and in inc mov call fbstp out aas insb jmp in pushf stos js jo jle data16 notb inc ljmp push aas jmp mov sbb jmp xor js or sub sub pushf imul jge stos outsl lods add pop pop mov les push push inc add cli (bad) lods call push mov push lcall or mov aam arpl sbb dec push cld or add sub xchg (bad) sti sbb xchg stos and jl jg adc inc inc jle or iret insl push adc adc lcall mov scas adc inc jl pushf aad mov lcall fldenv cmp jnp iret jle sbb ss jno inc mov aas pushl mov lea call jmp lret ficoml push inc test sbb push sbb in pop cmp fnsave dec test push movsb push idivb xor mov push in inc in mov jmp out push loop xchg int3 ret out pop pop test aas add cld xchg mov test sub jg or sahf out fwait (bad) int3 call adc daa and sub ja adc and fcomps push mov push xchg inc mov insb pop fwait cmpsb mov adc mov pushl fisubl mov ret cmp enter and jle adc inc hlt lahf xchg mov stc or cwtl mov int inc or adc ja sarb dec or pop ss in xchg test flds adc int mov xlat out test push mov sbb inc jae pusha icebp pushf aam sub stos cmc push test mov pop xchg adc inc add stos enter je mov push jae xor cmp xor jl out lret pusha or decl jecxz mov (bad) mov in aad inc movsb aad mov and (bad) outsl ret dec mov test sub sub jge shrb lahf sbbl push push in cld retw das sbb cltd sbb (bad) cmp jae cmp fcoml cli jle shr mov cmp add jmp in pop inc pusha xlat mov fisubl lods paddb xchg fadd mov xchg add inc lds xchg sahf rcr xlat inc hlt ret add pop pop xor aas or stos mov jno ficoml xor incb pop je dec gs cmp jb adc pop scas lea movsb mov imul push jmp pop fstpt dec pop pop mov daa pandn das push lret xchg mov or ljmp fild int3 lods fstpt dec sbb test jne enter loope push inc or jns jno pop ror test inc mov pop sar negb dec gs es cmp out fwait pop or xchg dec dec negl jno mov xchg test xor dec xchg hlt lahf bound push adc jbe push pop movsb in and loop xor push pop inc xlat and movsb inc lret inc roll mov test sahf in rcll loopne pop or jmp xchg jg and dec fnstsw call add mov sub pop rolb rclb mov addr16 xor xor or or inc and lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret repnz int push inc xchg stc or test addr16 push test and aas fstpt mov inc repz add jno add scas lret stos cld mov and or sub sahf sub or js (bad) adc mov test mov xlat icebp xorb sar mov or mov shrl movsl or inc adc jmp dec (bad) jo rcrb add and mov lcall sbb leave bound jo stc out mov into rcrl pop push cltd jl sbb (bad) ret xor icebp and xchg test xor push inc insb pop jmp lahf addr16 and dec inc jns cmp ja pop popf stos mov dec dec cs mov mov and lock or sbb mov mov lcall scas sbb rcrl ret push push test aas lret mov dec mov jns mov mov lods or popa cmp xor or daa dec shrb and xchg jnp cmp mov and mov sub mov add xchg movsb pop xor mov into sbb mov mov aad pop (bad) xor popa mov lahf addr16 dec inc mov popf insl pop push mov hlt adc cmp jno stc adc imul cmp xor xchg mov fildl pop bound imul loop jb xchg push xor stos and push inc mov (bad) dec fwait mov sub and mov sti aas xchg lahf sub jbe mov inc std adc xchg or cwtl fsubs insl fimul sbbl mov jo in cmp insb mov mov adc movsl int lahf inc outsb int add pop add push pop sarb xchg push and aam xor xchg scas (bad) inc (bad) jmp add je imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp fdivrs inc iret xor lcall loop enter rolb sub push jle test push adc fwait sarb cmp xlat fnsave incl mov mov push (bad) repz data16 popa pop test pushf and iret sbb cwtl jno das adc out (bad) icebp jecxz ds xchg aad xchg xchg loop push (bad) mov cmp xchg (bad) mov bound mov add mov ffree jl add sbbb fdivl iret mov aam mov adc cmc cmc faddl ja test adc leave sub push xchg decb mov (bad) movsb dec mov push add push cmp pop repz jne push inc popa sub cmp cmp rcr jb cli xor push call fcompl in lods and iret xor dec xlat push in ficoml int sub (bad) mov cmp out cmp sub mov aam outsb mov add fadds jecxz pop les dec ret (bad) out jbe cltd hlt or or loope push mov in sbb add out flds mov push ret bound outsl xchg dec mov pshufw cs mov cmp cli push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp xor ja sbb inc inc pop and xlat aaa xchg outsl mov dec jns mov out fdivl sub cltd mov std aaa scas or push lcall mov mov and aad outsl push (bad) sbb (bad) sbb rcl inc push sub cltd aad jnp jbe inc sbb pop aaa pop cwtl fsubrs stc push xchg js addr16 sub (bad) aaa sbb out cmp es or das js sub dec fs pop popf xchg ficom adc lret lret or mov dec outsb insl push sbb mov mov dec dec xor cs insb add pop mov and jmp jbe and sbb inc movsb iret push push insl lds test pop imul (bad) sub inc int loop pop jo cltd outsl and inc rorl aam iret stos loopne enter stc add jmp inc mov xchg pusha dec bound xchg mov repnz and sub movsb movsb adc dec xor and push rcl pop jb enter scas std (bad) jge adcl std push mov scas inc into lds ret movsl pop mov je mov test je dec mov pushf ds push mov imul mov sbb daa and pop cmpsl fs dec mov push push mov inc (bad) cwtl repz dec mov bswap lea call push cld xor sbb inc lock pop fstpt xchg outsl fisttp popf test movsb add dec mov hlt fwait gs inc mov fs nop jecxz mov jne pop mov repz shrl rep (bad) movsl push lods jecxz adc sub mov roll pop lcall addl dec pusha aam clc sahf sahf inc sub push inc (bad) cltd fsts cmpl and vcmpps adc gs inc xchg jne popf or mov sti das and scas xchg ret inc lds jne movsb mov pop hlt adc mov adc into mov jmp and das dec cld insb mov movsl int3 insb test loopne dec xor sub mov fs jae je lea bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov call (bad) imulb pop sub and (bad) rol insl fimul inc and xchg jmp lcallw dec pop rol repnz adc inc jns push dec sub je sbb mov cmp fwait dec push cwtl mov add mov sub push repz leave mov out cs jp pop sub inc mov out or clc lods push push test cmp xchg mov imulb je,pn repnz out (bad) xlat mov mov sbb pop (bad) xor subl cld sahf aam push gs stc test xchg mov aas cmp inc in or pushf imull xchg mov or lods out cli adc aaa (bad) cld adc stos fs xor mov push pop xchg je imul ljmp pusha dec in lods xchg pop mov stc adc fwait pushw insb sahf sub lock add jbe xor cmp cmp out iret in pop dec mov out and pop int xor inc mov or rcl jge icebp add mov lds xchg shl dec fcmovne icebp fimul adc xchg insb retw adc fwait imul push stos push pop mov push test or out push cltd scas cmp push cmpsl xchg mov pop outsl in adc lahf ficom lds addb jne or bound imul leave fs std std adc inc jbe in es mov sbbl xlat sahf push mov das stc sub fs adc ja test enter fisttpll dec push rcrl push xchg sub (bad) and dec or and cmp sar gs out push inc mov fsts adc hlt pop inc data16 jmp lretw ss xor pop bound dec or inc imul cmp pop lret rcl cmp dec or mov cltd inc pop inc mov cmpsl cmp push lret pusha and movsl jns pop fnop into inc jp stos add mov cmp push lret stc dec (bad) outsb ret push daa and xor out and leave jecxz xchg inc cmp push cmp mov push pop mov out mov pop cmp (bad) imul loopne push pop xor pop push aas and cmp sub (bad) xchg dec sbb add or inc inc mov pop cld leave mov lds push mov inc pop add (bad) dec sbb nop or jnp aaa enter int3 cli clc sahf jl or mov push out into cmpsb mov pop aam or clc mov ds stos and mov adc cli jmp push add (bad) gs (bad) in mov test mov insb mov mov mov ljmp repz mov push mov in sahf cmp mov add dec out xchg notb addr16 push movb out push shll mov imul dec mov fnsave jno bswap lea pushf lea call pushf jmp (bad) mov aaa push inc push jmp inc test sub (bad) nop (bad) dec jp out adc loopne pop mov lret jno sub jbe pop cs lods cmp mov das out push jle xchg outsl adc add or pop aaa mov nop mov pop jmp lret imul mov arpl bnd dec (bad) les fmull or call push pop pop sbb cli sbb jnp sub sub call out fldt cltd mov addr16 movsb pop scas cmp (bad) push or imull addr16 fidivrl fdivrl stos popf fisttpl mov inc movsb into pop xor inc dec pop out jg sub jns aaa enter or daa pop jns js mov xor xor stos pop sbb xlat push sti lods sub xchg or push pop mov sbbl das lret and andb pop jo popf fdivl xchg adc imul out xchg xor sub mov xchg dec jp jns pusha sti xchg jo mov cmpsb and mov repnz and scas aam jecxz iret je mov xchg jns and push inc pop movsl xlat mov adc mov and fmull or addr16 cmp ds lock pusha xchg call add push movsl dec fsts or mov (bad) push fstps (bad) jb cld jmp mov mov lahf mov rcrl in xlat (bad) aaa lods imul std or gs fnstenv jne adc cwtl daa mov add mov jecxz addr16 iret mov shrb mov pop mov cld xchg pop mov mov jo pop arpl incl fs sti enter inc lock outsl mov ret or (bad) xlat xlat loope movsl mov cmc in mov sub fldt pushf ljmp movsb jmp ja pusha cmp in sub jmp mov adc (bad) sbb xor out mov jno das gs ja push or imul inc xor dec lea jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call (bad) repz xor inc stos rcll mov mov ficomp out xchg xchg cmp fnstsw pop cmp push add cmp or push ret cwtl mov bound jb xchg push fistpll and cmp pop and ja push mov or inc lcall fsubl jnp mov shll jne dec cltd nop sbb insl lods dec or loopne loope jnp xor ss loope loope cwtl add dec lds pop push add jb or push xchg mov add sub cwtl (bad) jbe fsubrs push aam push aas sub popa (bad) or pop pop aam or jns (bad) push int lea push clc cs stc inc fimull addr16 dec inc and (bad) sub mov mov jle pusha dec scas sbb fistp outsl add pusha xchg ret insl mov cmpb push cmc push fwait sub cwtl outsb into insl std adc out xor inc mov pop mov cmp jne sub and jmp mov pop xor sbb outsl add add fisubr and mov scas add in and clc scas movsb les insb sbb scas and and sbb or sti sub push cld and addr16 cmp xor (bad) and stos test xlat mov (bad) push aad pop imul daa decb and lock adc popf in add sub fist xchg and and rcrl pushl add sbb adc mov std gs sbb mov outsb ret add fs lea add frstor (bad) mov aam into jge adc sbb in xchg push stos cwtl xchg js dec not adc imul mov push repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait (bad) mov push inc xchg clc push jl clc cli nop jp push test cmp (bad) and sub dec mov shlb arpl and ret sbb pop stos cmc repz das fbstp push jle cmp mov mov lahf outsl xchg mov push and add ja imul xchg adc sbb rolb (bad) push movl push (bad) in das fwait mov mov xor sub lea ss pop push lea jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs inc dec push xchg inc fnstenv sbb test cmp push fcoml in je fisub sti push cltd test push mov adc imul dec mov adc movsl shr fdivs jno lods (bad) xlat ret in ja popa rclb loop adc mov and aaa pop fstpl stos sti in sbb dec clc leave (bad) jle rolb pop adc jl stos xorb (bad) cmpsb xor dec push mov mov xlat div inc lret inc addl lds ret xor push cs test fcoms mov sub stc or out mov xchg leave mov outsl xor rep aam cwtl movsl into push jle scas and loope lcall jnp popf jns pop push fnop lock sbb and mov cli cmp mov out repz inc rolb pushf xchg mov fdivs jg iret fisubrl sti push mov sahf jbe push jge cli les or or pop fldl into push mov (bad) jl ret fcoms jno or insb dec xlat in mov aas inc sub jo cltd adc ja jae movsb or ret push sub xchg pop iret dec mov cmp jmp jmp mov ret dec fisttpll pop aam xchg mov inc mov mov insl lea mov jl ret cmp jno imul test cli fimul int mov iret push push inc nop sub popl pop fsubr cmpsb adc test add dec sahf ss insl mov push cmpsl ja cwtl jnp mov add cmp les (bad) ret pop aad xchg scas lds out jecxz iret sahf and (bad) sti dec int iret in fwait mov mov mov aaa jne push sbb pop adc repz xor dec call into dec push insl xchg xor add xor push push inc mov mov das lahf popf popf jecxz stos (bad) aaa decl aas xlat daa movl cmp inc pop xchg sbb test mov aad jae mov adc push adc mov or out sarl lods and xchg cmpsl dec jl into xchg mov pushf or push jo sahf mov push outsb scas push scas loopne mov pusha test cmp pop jbe cwtl popf pusha or mov pop (bad) xor lcall add sbb sub mov js fstpl shlb inc js pushf addr16 fs aas aas jb mov stos addl xchg call push inc int scas loop jg xchg jne jns xchg mov out pushl dec aaa das jns add xchg scas out sub cmp jbe xchg push fwait ret sahf xor in dec lea bound faddp or push or and addb (bad) jmp cli dec dec nop std add data16 pop into cwtl (bad) out mov pop outsl lods ljmp jb mov push mov mov pcmpgtw pslld push xor sbb add leave and mov xchg pop pop fldenv cvtdq2ps dec mov jo cmpsl adc and fs je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call aam mov pop push inc movsl out decb int3 fsubs add shll adc push cmp add xor sub dec mov cmp mov repz add lock jno iret ret mov rolb repz sti sub push mov aas mov stos add sub and push push test push xor arpl stc pop movsb int3 adc rol jns jecxz aad rclb aaa dec jae xchg mov cmp sub (bad) inc pop push inc scas inc jp fcoml mov je loope jmp adc and mov iret pop or daa lea stos cmp enter in mov icebp std dec sub stos cmpsb xor lods inc mov popa add movsb mov ljmp push push aaa idivb mov xor subl jg jg xchg mov int3 cmp mov jnp ja cmp (bad) lods in mov idivb sbb insl fsubs fidivrl fnop ljmp xchg and add lea je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds push jnp pop push inc mov and cli mov xchg in add jl cmp mov and add les test cmp sbb movsl insb xlat icebp sub dec xchg push lret imul pop in dec aaa dec aaa sbb pop xor leave xor cmp stos jnp nop push push xor pop (bad) jnp les stos dec lret insl dec pop rcrl insb or stos sahf hlt das int3 insb sbb mov jle sub push fimul xchg sub pop add insl adc aaa daa fsubrl jbe lods pop mov inc mov fs sbb or push cmp fistp push or fs call call movl lea jb test call cwtl seta cwtl lea call mov sahf pop push inc mov sub inc mov cltd rorl mov and scas fsubs inc movsb add push dec jecxz adc fs adc hlt jo jmp stos dec scas and in dec xor xchg inc dec mov mov test lret mov clc add fistpll ljmp inc or dec sub cmpsl leave jmp hlt mov push (bad) ss inc out sub daa fcmovb dec dec mov int3 add fidivrl jle mov fcompl cmp pop loop cmc push cmp ljmp xor mov pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp arpl mov inc (bad) arpl ss ljmp jg insl sbb jg sub mov add push pop dec xchg dec cmp push aam cmp inc js inc orl jecxz xchg (bad) out fisubr mov adc pop sbb dec sub hlt cwtl or pop lods roll push insb xchg and jb out xchg sti outsb stc add pop adc arpl stos mov mov jge arpl push cmp fistl iret mov sub fist cmp and (bad) sbb in inc sti sub sbbb popa mov cmp xor pop push inc inc add cltd xchg sub data16 inc push xor bound mov lcall jmp hlt bound decl inc sbb sti mov xor push insl fsubl test or dec adc scas mov cmp pop jne push mov daa sub xor push cmp cld or or inc lods rcll mov xchg mov nop mov movsl dec aas fcoms popf sub loop stos jle,pn pop push cs dec mov lods add loope loope fistp fs (bad) xor jecxz lods push loop mov pop push inc xor mov pop mov int arpl repz dec mov inc mov nop sbb pop (bad) cltd pop push scas sbb dec mov push mov and leave add inc fist mov fimul add movsb sbb jecxz add xchg xchg test inc gs enter pop xor or out leave cltd jmp clc ss push in jo js sub rcrb xor mov fldenv fistl sbb cmp aas cmpsb inc mov xchg push imul lods movl cld aaa mov sub data16 xor and adc jmp lea jb stc cmp call push inc push push dec dec dec cs insb add rcrb pop cmc jmp jo adc push int dec loopne (bad) fcompl sbb push je and in fdivrp push clc cmp push std xor aad or cmp adc int3 pop leave (bad) mov or mov jecxz shll adc pop push push mov test call out jmp sti mov cmp mov fsubs xchg lods jge dec push hlt sahf fisub addb add pop xchg sbb adc mov (bad) sahf (bad) mov push sub push add push es lods fs inc repz or or stos xor gs xchg mov xor cmp stc popa or jnp pop mov fs add mov fcmovnu push mov (bad) outsl loop add mov push cmp int3 pushl and jle nop imul dec dec ficoml in fyl2xp1 sub sub (bad) and sub inc mov jmp loope fs call mov mov test mov sbb or dec mov clc jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp das fbstp lret aas out data16 sbb fnop cltd ret ret (bad) ljmp fwait xchg cltd inc roll dec in or (bad) addl sbbl cvtps2pi adc in rol sub inc aas popf and sub faddl shl lds int scas mov call sub adc dec enter push loopne mov add jl stos sbb xchg or lahf es and sbb mov cmp sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call insb xchg xchg pop aam inc dec and cmpsl lds lea pop cltd jns fstl pop aaa (bad) jl dec ss adc push add mov je push sbb dec push dec ret ja (bad) xchg iret jp mov jno xor out mov cwtl decl rorb lock fdivr fisttpl mov mul je jp xchg call stc jnp or inc pop dec mov sbb inc sti push lcall nop hlt pop mov jl or fldt neg outsl cmc push enter inc rclb and sub xchg mov xchg lea rol std adc push test jl imulb lds jns inc mov (bad) xchg xchg inc rorl jge sub mov push push jae sahf or iret ret dec xchg dec repnz shrl pusha je pop mov add (bad) iret inc cli mov repnz ret or fiaddl jbe gs movsb pop sub xor inc ret mov call addl sub mov fcoms mov dec mov xor mov pop insb cld and pop arpl icebp imul hlt cmp jno jg xor mov cmp add mov dec les mov inc and adc inc add loop add adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call popa movsl cmpsb jae push inc sub mov add int roll out jmp inc pop pusha mov sahf addr16 lret stos inc leave lcall or or push loop mov inc insb repz stos leave ror repz or adc rcrb pop push lods jb (bad) imul mov js sbb out mov cld arpl jl add lret mov sbbl out jg loopne sub (bad) pop bound and jno ds or mov scas mov adc sub cmp les mov fsubr mov add shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp jmp pop mov push inc data16 inc stos dec sub lret dec xlat and call cmpsl mov jb xchg mov in fdivr loopne,pn stos sub nop rclb ds sub and loop push lret jge cmp sub mov xlat mov in or fdivl mov scas into mov arpl aam push pop aad ret push loope int jge jbe push inc cltd or adcl fidiv scas dec jl pop cmp ret scas jl movsl cld lods (bad) mov fiadd pop div jge inc fdivs nop std adc movsb inc push aas xchg cmp cli lcall jg jnp xchg mov insl mov lea je pusha bt jmp stc mov cmp cmp test pushf lea je clc add call jmp pop (bad) rorb inc sbb loopne lock aam cld add jb out cmp lcall add pop jne scas and aad ljmp dec mov sub jg add ret inc outsl out inc adc outsl leave cmc test data16 push mov push add pusha test fcompl cmpsb lock mov mov mov and lret pop mov dec cmp (bad) pop and mov dec dec jnp sbb jmp cmp xor loope out pop call or lock xor dec or or pop and pushf lea jmp jmp fwait ja push rorb inc push gs jge add repz lds imul daa jg lea xor mov jmp xor pop (bad) fs add movsl sub cmpsb (bad) mov in cmp outsl insl xchg sub sbb test add loopne xchg add sub push bound adc lret adc xlat sub mov das or jno cmp pop sub push hlt and push inc popf jo cld adc out aad jno imul hlt ficomp lret in pop jae inc dec mov test fs je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov cwtl (bad) xor xlat mov lods adc (bad) pusha int3 or push nop fs mov clc pushf pushf stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp xchg arpl push inc xchg push jnp fwait inc and pop pop pop inc xchg pop daa test imul lods pop in or adc ret jo std nop push cmp jb ret mov jae bound repz jge lret out in insb lret push adc nop jecxz (bad) leave lret push popa je inc imul jae add loop (bad) rorl inc cltd repnz xchg jecxz,pn in fstpl and mov iret das rcl mov or mov xor mov mov adc scas dec fbld jne ffreep mov mov (bad) ja adc mov push ss lods and iret push cmc in cmp fcoms loope adc popf or cwtl jge mov stos add fistpl mov movsl and ja pop int lds xor cld pop jecxz in dec sti and shrl jbe pminub jns jnp stos mov add sbbl dec rcll and cli pop pop test push icebp or inc movsl jecxz jb shrb jo test sbb fstl xchg ret sub sbb int3 jnp and and std test pop push (bad) mov aam out add hlt (bad) (bad) and add ds mov xchg sub inc les push mov push testb cmp loopne and mov pop push cs stc cmp jb inc and or test sub jbe xor fdivrl mov insb fwait stc xor pop mov int in sub sub ret xlat dec lcall push or add add or add add add add add add mov or add add not or add add mov add add or add add pop sbb add mov or std push add call or add pop add (bad) add jmp jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp scas mov cmp push inc addr16 call bound (bad) mov scas mov ficoml das mov jle aam adc cmp rcrb out (bad) insb jb inc movsb mov daa xor out jle jae jl aam ljmp mov cld xchg jno push rorl push pushf add pusha (bad) jg lods pop push xor iret daa loopne or add xchg mov icebp icebp xor lods or loop mov scas pop rol out in push add jo adcb mov orl xor gs inc mov cmp push gs push sarl mov cs fimul inc cmc or (bad) mov cmp pusha cld cmp cltd adc shr dec (bad) mov add xor push data16 add fwait sti add sub enter sub xor sub adc jns orl pop adcb faddp push inc mov jge cmp xor xlat test leave addr16 pop sbb jmp movsl popf add push pop sbb push (bad) cltd hlt imul std and iret inc mov jge xchg inc lea xor aam jbe mov sub push (bad) jmp dec jge outsl mov push sbb fdiv shrb ret push inc dec repz imul add lcall adc dec xchg adc aam and xor in cmp jmp xchg gs mull dec int3 ss fistpl ret hlt add fistpll pop cs mov std or sub in add loopne movsl loopne sbb mov lea aaa and or push test insl shrb (bad) insl lods cmp insb rolb repz leave int3 imul mov and in jb push pop mov fistpll jge arpl push rcrb in aad push sub insb mov adc xor shr jnp sti or fcmovne int3 data16 std push adc int3 jno lods clc sbb dec fmul loop xchg insb dec jbe out sbb fildl pushf xchg test push lret adc test dec or push insb adc stc inc js jae mov daa mov shrb rcrl pop mov cs sar cltd dec mov out xor push insl adc xchg jnp insl mov in outsb pop loop das fldenv lods lods mov stos mov das lea or cmp dec decl inc and fwait lods cmp push mov mov xchg ret call adc ljmp (bad) (bad) stc pop ret adc iret sbb push inc mov sbb inc int adc out pop sti pop xchg scas icebp icebp jmp add insl (bad) pop mov xchg fimull sbb cmpl mov std mov jg mov fwait in mov fisubrl adc mov repnz movsb imul movsb pop inc arpl inc stos cmp add out test dec pop mov sbbl push pop and (bad) shl mov ljmp mov cmpsb cld sub dec mov ljmp fistpll mov sub leave insl jge pop mov or pusha push pusha mov lea jae mov push pushf pushf xchg jmp insl (bad) lret push inc dec hlt fsubs lock lret popf add or gs lcall and incb xlat mov cmp or scas push lahf mov jbe and mov dec fwait dec fstl xchg test sbb dec pop mov insb ljmp xchg push std inc clc mov mov sbb sahf repz je push jns adc daa mov hlt push popf jbe fsub repz clc arpl test push sbb arpl sub mov dec dec and cs push pop inc cmp repz loope mov jge xchg out in adc cmp adc roll leave sti xor mov push inc add jbe add mov imul pop pop pop int cmp pop cmp outsl movsl and jae or test and xor pop loope mov iret mov test cmp fidivr jns aaa mov pusha sti icebp and cli loopne ret pop or (bad) xor pop xchg cli sub pop int lods xchg jl pop dec fiadd insb xchg fsubrl mov fs pop incl hlt mov icebp xor mov in mov pusha shrl xchg mov inc jecxz jp gs and pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp scas mov inc aad mov mov adc test dec mov or mov cmpsb pop pop int3 xchg pop mov xchg inc inc and jmp hlt mov stos fmuls aas adc or lds out test fldl mov dec pop lods jle push sub popf pop cmc cmpsb xchg xchg stos cli mov sbb mov dec pop inc xor or adc clc adc fiadd shufps mov sub xchg pop scas int3 bound test inc dec hlt xchg mov dec push dec icebp inc lahf add mov (bad) adc dec ret sbb adc cmp dec stc cs and movsb inc (bad) inc lcall and clc mov mov or faddl cld rcrb mov adc cvttps2pi iret das movsl adc adc pushf addr16 ret test pop or adc fsubrs pop gs aas scas cld mov inc mov lahf pop nop clc pop ds jbe xor sbb mov call je sub test dec in jns (bad) test aas inc mov enter stc pop jae xor test mov stos loop push jp popf insb call lods add push stc xchg mov outsb xchg cmpsb aas add subl mov jmp (bad) cmp cmp push inc addr16 pop lret inc test cmp add fsubp nop mov loopne js sbb cli push notb sbb inc mov lods xorl (bad) inc (bad) cmp xor push and sub aas fdivl dec lahf shlb fnsave ds enter cli sbb add xchg (bad) sbb add jle outsb mov pop shrb mov outsl in sti inc jle add and xchg loopne push shrl sbb pushf pop aam inc sbb test fstpl imul insb aas lret cmpsl cmp addr16 cmp cmp cmpsb cmp sti (bad) lret into clc xchg ja sub cmpsb pusha leave mov mulb push pusha movl pushl call inc inc push inc push dec xor cs insb add add jmp int rolb out inc pop xor sub fnstsw je mov mov outsb scas in adc insb cltd jo push loop cs pop or xchg xchg fisubr and pop (bad) and mov (bad) jp sbb int pop in leave dec int xor cmc dec leave xor jo pop push insl mov insb mov push fmuls inc (bad) mov or pop call sub inc dec lea cmp mov sub out xor js fisubrl clc cmp jmp bswap shr dec or test mov bsf or inc add jmp jb aas ljmp jns mov push sbb add xchg insl arpl mov aad fisttpll mov ss xor pop out add js (bad) jns lock std mov push movsb imul cmpsb dec mov in fdivrs hlt into popa cmp pushf leave cmp jmp lea aas mov imul ret pop outsl shrb xchg pop push or clc mov test mov arpl stos xor cmp cli cmp xchg jp cmp fdivr adc xchg mov out inc and cmp dec add dec and mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp xlat cmp in push inc mov std xor sarl push jb or jle adc dec push dec mov outsb (bad) sub sar movsl pop lahf push cmpl cmp sub xor mov addb cmp ds lds push mov xor out cmp orl sub imul loop stos addl sbb mov inc rclb and push fldcw iret and and test jnp sub sub xchg in xchg cmp cwtl out push inc int3 lret cmp clc call adc xchg dec loope inc fildl mov sub cs les addl shr aas pop leave scas cmp (bad) jb dec fcomi aas lods cld dec outsb jmp mov pop adc pusha pop or js sbb popa or or mov mov arpl dec lahf pop mov pop rolb imul imul aad and (bad) es popf js and lods test std xor fidiv add jecxz (bad) cmpb and out push stc jns push stos stc push xor leave inc xchg loop inc add lcall shlb cwtl outsb sbb cmpsl mov jp stos test dec out jg cmc sub fisubl mov insb cli es cmp mov mov in sti push push sti addr16 (bad) jns dec iret mov mov or dec and push adc push mov or sub dec xor ret dec ds dec fisub nop sub adc subb je lahf cmpsl (bad) or arpl sarl (bad) xor xchg and and repz loopne jl scas mov sub ds jmp add mov add fsub push inc xchg jbe jb inc mov jle repnz mov lods movsb jb shrb xchg incl xor mov mov push mov xchg int cmpl mov daa add loopne mov fisttpl and cli push (bad) xor insl pop push mov push arpl mov imul cs jge push sbb cmp pop dec scas jbe pop and lcall mov (bad) mov out stc xor popf mov (bad) hlt ja testb cmp mov cmp push dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp xor adc in push inc xchg outsb push test cmp daa repz and inc xlat aas outsl xchg mov xchg int3 clc adc iret or (bad) jb in sbb cmpsl pop mov sarl cld movups lcall cmp or jb adc sub add jl pop aaa mov test in sbb outsl jbe enter and ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp in push xlat add push inc pop ss cmp mov and cmp push lcall mov xchg dec rclb outsl mov xor mov movsb inc push clc mov inc pop push push sbb call push cmpsl icebp pop mov dec cmp popl loope mov popf dec dec ret popf std push pop lret sbb mov aas aam cmp adc sbb dec jecxz adc outsl xor push adc in push mov pop lcall push xchg movl inc adc jbe mov sbb push scas (bad) cmp add cmp cmpsb xchg xchg sbb adc incl mov cmpsl pop jge fiadd fnstcw jb ret push addr16 push shl leave mov or cld pusha push test into mov pop xor add jl or out aas mov sub rcll and jne rol or out adc push int repnz cmp lea ljmp adc imul adc jge sub and mov pop repnz in das mov mov pushf dec dec mov mov or xor or adc out push inc xor mov jle jle pop (bad) or in sbb sub push inc test aas fisub nop std xor mov pop iret mov fldenv loope in adc mov xchg negb adc (bad) xor mov dec shlb pop (bad) outsb dec mov add inc iret repnz outsl mov mov push mov xor aam push push xor scas out or int3 movsb outsb mov test cli daa jge and xchg xchg mov push cld popa fidiv es add enter fnstsw insb cmpsl lds dec mov mov int3 popf loop dec test cmc incb sub (bad) inc clc decl insl in out push inc mov add cmp les mov arpl cltd popa leave dec adc ret push cmpsl inc test xchg addr16 dec hlt les jns jmp mov leave std jp in test es fdivrl daa sub scas xchg or lret pop or in imul enter pushf jp inc shlb test sahf sbb iret mov sub xchg shl nop (bad) xor mov pop out mov imul jae xchg cwtl cld les mov rclb shrl stc adc nop xlat dec lcall jl adc jne pop jmp inc gs outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp dec rol push call fnop add fidiv inc (bad) xchg in test and fsubr ret mov sbb data16 (bad) pop cli roll repz into dec xorb gs or mov push dec lds push fdivrs dec int insl xchg repnz insl mov in hlt jae or int adc fnstsw (bad) add dec mov bound jns fisubr inc add push mov push aaa push pop inc add aaa cmp outsl mov cld xchg insl jne lods pop cmp into dec in scas push loope push cs sub inc mov movsl inc lret xchg jge aas jno psubsw inc sbb out inc out stos js add sbb popa rorl subl shr lods push sbb pop push mov cli mov mov ja cmc je fsubrl push sub mov push leave cld mov sbb out dec popa sub mov clc outsl cli (bad) hlt hlt call iret xchg jns jne and test (bad) aam pop (bad) daa mov aas mov rol incl pop fidivr push shlb loop test cmc js les mov rcrl sub test icebp cmpl (bad) jbe mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call or divl push inc lcall and dec fistp (bad) fnstsw add push adc push orl or jle bound mov call (bad) xor frstor dec std sub mov inc jge out sbb and ret out jb mov daa mov adc ss adc xor sub (bad) addr16 ret sbb loop cltd inc push hlt pop test rclb stc dec mov out pop leave rcrb jno movsl hlt or jne inc sti mov les or out cmp xchg jae setp stc xor sbb pushf pop rol call hlt push inc dec mov shlb sub (bad) xor push into xor aam test repz ret test dec imul mov shrl popa xchg mov jae lret xchg cmp loop add push push pop mov cmpl dec mov (bad) movsb je out loopne fisttpl add imul popa stos or dec cltd (bad) int3 in push daa or enter cmp cmpsl (bad) bound add int3 mov mov (bad) push mov fistp hlt or and cmp rcrl mov repz or in jl aam xchg shl (bad) call stc test pushl popl test cmp pushf push jmp xlat mov fwait cmc push inc jbe xor adc test data16 notb ret mov pop stos in and scas mov inc jecxz adc sbb sub loopne clc insl push adc mov mov outsb cwtl mov add aas jmp adc push jne (bad) ja out cmpb fstps inc ljmp inc fcmovbe add mov in ja aaa push popf cmpsl cmp cld test ret daa fdivs lods inc xchg jge lods mov jae scas adc cld add and imull outsl mov push cli pop aad push push inc push xor cs insb add push inc popf adc push int3 repnz (bad) xchg loopne xchg sub mov in callw leave mov xchg cltd bound cmp aad insl test pop add mov or rcrb shr mov adc mov sub rclb mov loope test push cli adc jb mov es ret fwait add mov mov or (bad) adc aas mov cltd lea scas std nop (bad) lock push adcl push cmp or jbe es xchg xchg das fiaddl or xor mov in and sub (bad) pop outsl add ja and or adc mov mov stos add mov mov or ja jg or popf in insl movsl pop mov loop jmp pop lcall in cld in jp lock out loop rol out push in into sbb dec adc dec cwtl imul (bad) and fidivr dec mov xor clts insl lods out movb (bad) push inc ret ja movsl imul dec inc outsl out or jns and pop mov cmp mov ret mov out cltd add dec mov sbb out ja mov push adc xchg (bad) cmp and out pop sbb out cmp push insb lods imul imul sub xor clc add fdivrl mov aad xor in pushl or adc jge and add sub loop repnz mov lods add call jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call out out stos sub push inc je movswl popf fldt mov push push das push lret bound cmp jmp cmpsl xchg add dec ds sarb clc mov stos adc clc jnp,pn and pop sbb insb mov or or arpl loope frstor iret sahf divl (bad) and jne popf dec rclb inc lcall inc je lods sub jae (bad) mov imull rcrb in sub pop xchg xor xor mov mov sarl mov clc jmp lea jge mov pushf lea jmp xor mov movb repnz call cmp call jmp jmp and push lods cmp pop mov push inc pop loopne inc fsubrp and add movsl xchg xchg jmp lahf std pop cltd cmp cmp pop dec jecxz imul pop mov inc mov fild hlt inc mov pop pop mov repnz xchg fidivl lock push sub dec loop cmp xchg mov (bad) pop cmp dec mov or add (bad) aas lcall call jl or mov sbb movsl fptan lahf outsl iret cmp jge dec mov lahf xor scas std cmp fdivl sbb test les mov xchg sub lea jb adc cmp call xchg fs dec repnz inc fisubl imul daa dec fstpl imul sbb or dec jg jl mov mov or in clc mov sub cmp out jl add mov stos imul mov dec adc and pushf cwtl or add push adc adc mul xchg adc into scas test cmp sbb jnp cmpl dec lret mov sarb xor pop (bad) sbb loope xchg outsb imulb jae push mov int sub daa into aaa pusha lea ja xor sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp adc push inc das inc mov fcoml adc jbe fidivrl push outsb jl dec rcl push mov sbb sbb clc cmp out addr16 push (bad) mov loopne,pt loopne dec adc sbb push out sub nop incb in add xor or outsb mov pop sbb stos (bad) pop sti lods hlt jmp mov push into and cwtl psadbw sti and mov fsubl push mov scas jns and jmp dec inc lods jb inc (bad) jge loopne enter xor push pop add add push xor shll cmpsl cld push inc clc dec scas and cmp icebp dec push lret insl out rol in sbb adc jo sub and cli fisubl mov in xchg outsb or mov inc jle or pop lock inc xor aam sub fimull mov rorl aam xchg mov inc aad repnz sahf out dec mov (bad) sub dec faddl jne movsl incl jge mov xchg cmp daa xlat add jno xchg mov xchg fs std inc fsts or jg pop sbb mov cmpb stos (bad) xor inc push test push jmp xor fsubrp xchg push mov mov mov lods sbb sahf jne xor add test (bad) xchg jle cmp ror pushf pushf inc pushf xor jmp push dec dec push inc push dec cs insb add push inc rorb jge cmc inc rcll add cli clc dec mov pop bound aad out dec inc cmp jg pop fild (bad) in sub lods adc mov (bad) and jg jg bound lahf lds arpl or data16 lods (bad) fisttpl dec cmp and or addr16 aaa ret xchg nop sarb and pop repnz (bad) das sub pop cmp mov push mov shlb test popa jns dec int pop movsb jp inc orl xchg xchg enter mov xor jp fisubl mov mov mov jmp lea ja not rol sar sub lea dec jmp sbb daa repnz inc fs (bad) testl inc mov pop inc mov pusha mov inc fcomps sbb stc or jae fist adcb cmp mov subb inc aaa lahf outsb mov push adc jmp sub repz popa mov xor mov jle imull pop push xor (bad) cwtl repz (bad) cmp xchg inc xchg xchg lcall in cs cmpsl ss mov sti lret test mov out mov cmp lock jp popa daa mov mov sbb add addl add cmc dec cmp jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp push popa and out test or scas xlat aaa xchg jg jg imul outsl (bad) std adc (bad) in fwait and mov dec es scas sbbl pop stc or bound dec stos hlt cmp lock sar imul lret mov addr16 addr16 imul push cli clc or xchg add in jle repnz stc add adc adc and out xor xor add int3 cmp fbstp mov movsb sti or inc das iret dec out in mov adc sub fsub xchg lds insl add jp scas push sub and push hlt fsubs in stos rcrb aam into mov jbe ret popf or lds inc gs jecxz pusha ljmp sbb jne push or fsubl pop xchg jae lcall or addr16 sbb lds decb mov scas sub mov test mov mov pop (bad) je (bad) decl add sti sbb (bad) inc rcl cmp mov bt cmp test cmc repnz push call ds push test push inc (bad) sub (bad) enter pop sub aam sub xchg jle pop repz sub inc loope jle or test sbb mov dec mov dec xchg insb adc shll cmpsb inc shl arpl ljmp inc cmpl cmp and mov adc in xor ret push (bad) std mov sbb jmp xchg movsl fucomip cmpl xchg test mov cmpsl int mov test lds pop roll pusha pusha pushf mov call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp push mov inc mov cltd sti sub in (bad) jle loope mov mov fisub mov sub pop scas fsub nop push xchg mov sub jae out inc nop pop lcall adc es and sub (bad) mov pop and mov popf xchg out outsb xchg enter or lea xchg ficoml cmp push xchg adc xor and jle or push cmp cmp mov dec int3 mov mov sbb arpl imul cmp jecxz adc fs pop cmpsb add mov subl sbb ss ret xchg xchg (bad) (bad) push dec inc jp icebp clts test xchg je xor jp or mov jmp push mov inc je rcll jecxz inc mov je std dec xchg repz jns jge cs pop shll pop cmpl test add scas popf xor xchg rcr mov hlt js outsb mov call ja (bad) pop xchg add adc mov lods dec pop movsl fs xchg mov jmp xchg push imul dec push add and or fimull adc xor orl xor mov inc xchg xchg cwtl jle mov mov shrl sub sub jno inc stos mov ds xchg ret xchg sbb push xlat adc stc icebp fwait ret inc clc xchg subl ret shr xor cmp repnz xor iret aaa xor push mov sbb ds cmp add add and mov mov mov push jp mov mov xchg nop push lock push idivb xlat dec scas pop sub call lock adc aad push insb testl jne sbb inc in adc test pop xchg xchg push test and xchg fcoml (bad) fildll add movsb loope fs pop jno fdivl addr16 std push ret sti add shrl stos imul jecxz pop into or cwtl ljmp (bad) in mov jo dec sbb sub jl jo mov jno mov cmpsl mov lock inc andl adc pop cmp imul mov aam sbb dec into or cmpb arpl mov xchg mov loopne dec xor xchg lods sub dec shrb les adc sub std inc lahf sahf mov xor cmpsb xor push mov sbb dec test lahf (bad) sahf xchg fs push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call mov cmovb imul adc popf jge jle lods data16 lods lds xlat jns lret (bad) xor fcom lahf and nop data16 sub cmp adc cmp mov movsb movsb mov or sbb sbb xor or insl xchg or pushf std xor cli jle (bad) ja out out repz pop push iret testl push xchg aam testb lahf loope xor lods xor aaa jb inc dec lahf xorb lods inc push in pusha incb insl sub and int inc cld js sub inc (bad) stc cmp cmp or stc or and xor lea movw lea jmp mov cmovb bound rclb and jo scas out lds or bound jl jg fwait jo les in sbb and cmp jne pop das xlat inc mov xchg stc inc dec xor aas aad fcoml push mov mov fimul adc sarb add test jns cltd arpl lea hlt push in and mov mov jg add (bad) or mov sarb mov or bound xchg add jno les dec call (bad) std sbb mov pop pop (bad) in inc inc pop xchg cmp fisubl (bad) daa mov push mov mov imul in mov loopne adc stc dec nop fcoml adc addl cwtl xchg add push lock test adc jb cmp xchg test movsb inc lahf mov adc sub out test jp bound stos push stos xor int shrl sbb loope mov pop int3 out or xchg (bad) cmp mov leave pop mov call lea mov pushf pushl movw mov jmp push dec repz inc mov mov pop mov imul (bad) icebp leave repz ret or repz repnz (bad) mov and lret sub rcrl nop lods out icebp mov or (bad) jne mov jmp jbe jmp in scas les (bad) xchg jns sti pop pusha into jl nop mov pop fs dec in gs call xchg cmc mov in push mov imul xchg pop das inc xchg cmp jbe jns mov aas jecxz push enter fild or out in jo push adc lahf in dec int3 imul or jb test pop jo pop mov inc leave (bad) fmull push mov in sbb dec lods mov mov jle adc arpl xchg mov add push aaa xor mov mov push in adc cmp out gs jns xchg addr16 jnp or (bad) lods sbb and push insl add push sub gs pop insl push inc mov aam lcall repnz (bad) xor js add push mov mov lds pop outsl push sub hlt addr16 or sbb xchg call mov adcb scas in stc stos cwtl dec add inc adc int subl daa divl in roll mov sub scas jb ret fs mulb pop dec fs or dec cmp (bad) fbld cmp add nop subl fidiv xchg push cld aaa and inc xor in fadds cmp xor push stc sub and jbe cmpsb mov pop imul pop hlt sbb add xchg sbb mov inc loopne sub jp mov lea call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp push cmovb imul jge outsl inc lret out insb sbb cmp xchg repnz push inc push sti stc mov xor jg stos push std add dec mov and addr16 adc rcll je rcrl out cmc cmp or or fistpll notl sbb dec sarb rcrl dec cli inc and inc jb mov push xchg xchg and aas push or inc out pop inc lock mov dec call add sbb push in add sub inc loop pop cmpsb add lea call pusha jmp test cmovb push cs jle push mov js pop fcoms test add xchg dec pop test and (bad) iret into fs pop xor ror fistp (bad) nop xor adc lahf jns (bad) data16 mov shll test sub out adc lods (bad) fdivr repnz push (bad) mov out sahf xchg (bad) enter sbb jp push mov xor in pop faddl mov xchg jle dec ret sahf (bad) movsl (bad) sti add enter lea call jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp xchg jmp mov dec fidivl loop mov xchg in mov mov loopne jmp mov outsl fidivl mov lock dec fidivl push (bad) mov cltd loopne incl fdivs fld1 mov cli out jmp mov cmp icebp mov sbb mov mov in mov add mov pop loope pushl mov mov loopne decl fdivs dec fidivl mov fidivl inc divl cmp call mov sbb mov xchg lock stc jmp jmp mov outsl fidivl inc divl mov loopne incl mov fst mov aas repnz cld fbstp mov fnstenv mov mov sbb mov loop mov pop loope jmp (bad) mov stos fbstp or mov pop jmp (bad) cld fbstp pop loope decl mov xchg in mov xchg lock and mov sbb pushl mov pop jmp pushl lock pop jmp ljmp mov pop cmc mov cmp repz mov mov adc mov mov mov movsb out decl mov sahf (bad) mov movsb out ljmp out jmp loope incl mov sbb jmp (bad) mov mov lock dec (bad) mov loop mov cld fbstp or mov inc repz mov mov xchg in mov stc jmp incl fdivs loop mov fst mov dec (bad) mov pop cmc mov dec (bad) mov popa (bad) mov mov loop jmp loope pushl (bad) scas lock pop jmp pushl repz mov (bad) mov sbb mov xchg jmp mov (bad) (bad) mov in mov push aad (bad) mov hlt mov xchg in mov inc divl mov mov (bad) in mov popa (bad) mov dec (bad) mov popa (bad) mov outsl fidivl loope mov (bad) (bad) sbb mov add mov fst mov mov repz fld1 mov cli out (bad) mov (bad) mov pop jmp pushl loop lcall call mov pop cmc mov fst mov aaa loop decl mov stc jmp ljmp mov inc divl inc repz adc mov outsl fidivl cmp fidiv fst mov cld fbstp mov aad jmp mov jbe mov cld fbstp push (bad) mov stos fbstp sbb lcall jmp lcall mov sahf (bad) mov fld1 mov xchg lock xchg lock or (bad) loope mov dec fidivl dec fidivl or mov scas lock cli out call (bad) mov (bad) in mov mov mov push out ljmp mov cli out incl fdivs mov repnz push (bad) mov scas lock loop mov or mov inc repz dec (bad) mov mov lock pop loope decl mov mov mov push (bad) mov mov mov mov repz aaa icebp mov adc mov xchg in mov and mov mov mov fld1 mov mov mov xchg in mov outsl fidivl mov push and mov pusha mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add add add and pusha das dec add add add imul and add mov 