pop into mov xor loopne xor outsl popf ja dec fldcw push fidiv push addl callw repz push nop jmp jmp push cmpsl xchg ss repnz push pushf das xchg ss pop push cmp js lods xchg loop lea mov push sbb mov dec push and lcall aad nop push sub mov lods pop sub sub mov dec or cwtl push sub sbb ljmp inc leave pop add fdivrl shrl jge aam dec pop adc adc stos sbb pushf in adc test lea push or sub movsl or or test dec fdivrs inc xchg mov add or repnz int add and addr16 int lahf loop out fistp dec xlat push cmpsl (bad) ss xor inc jmp out aad cmp mulb loopne jge (bad) dec adc sub xchg mov and es pop sub fimul pop movsb dec xor fs (bad) sti adc (bad) dec mov cmp (bad) lea out nop int3 inc inc inc and movsb cltd push test rorl mov mov and loop pop xlat shrl push cmpl push pop dec push cmp or pop rorl xchg sub aam out jp inc into mov jp rcrl enter pop add jnp pusha jno adc les sahf loop scas hlt mov lcall pop dec push dec mov inc fs psrlw mov out and sub cmp dec cmp lret mov pusha (bad) jg sti xchg in ljmp inc popf pop ret jg (bad) mov jg aaa lret clc je jne dec and loope or stos sub mov fwait push pop or pop push negl out inc aaa cmp loopne mov mov ss pop imul dec test pop stos or (bad) fisubl dec cltd mov add cmp or add cmc in push xor push orl ret cmp jbe ljmp insl inc mov cwtl cmp rcrb and mov imulb mov loope mov in jo or nop call mov or xchg mov mov (bad) enter pop cmpsb (bad) adc (bad) and mov pop and sbb (bad) sub xor xchg xorl stos (bad) sub fisubr into cli clc lahf cmp test pusha shrb push mov fistpl sbb fiadd (bad) icebp adc xchg xor divb jl out mov roll fiaddl cmpsb repnz out cwtl js or mov jnp cli imul aam jno (bad) repz jnp icebp pop aas cld cltd inc sub rcrl push xchg mov pop pop imull push push mov push push loop (bad) xlat mov dec and push mov jle xlat dec jle loop pushf ljmp mov adcb ds sbb lods or mov mov aas (bad) dec jl cwtl popf and popf xchg lods in xchg mov loopne xor xchg mov imul mov leave jno aam cmpsl adc inc addr16 and daa sub int cmpsl jge add pop lods mov cmpsl lds push fwait jae ret sub pop insl mov movsb cld mov sbb and sub stc cmp and sbb (bad) divl in adc adcb jb mov or xor in or xchg fimul fiadd xchg or ffree jp popf cmpsb sbb jecxz mov jnp cs fimull lea add mov fistl out out faddp inc gs call dec push xchg cltd lea xchg inc jne xlat jns adc cwtl add sbb sahf pusha push scas ss rorl xchg cld mov jle pop mov sub xor es in (bad) hlt andps ss std mov je adc ficom mov mov sahf lods or inc push xchg flds rclb xchg mov rcrl cmp aad nop repz cmp fadds wbinvd mov mov jo dec js fmul pop lods out clc dec add fwait dec cli mov or (bad) nop lar (bad) idivl rolb lret mov or stos (bad) (bad) lret (bad) mov xchg dec addr16 pop mov dec lods inc or mov sub in out cmp jns fcomip or mov jmp xchg cs inc mov xchg test inc fisttpl mov mov push sub fiaddl les lret pop push mov ja mov sbb pushf mov mov rcll mov inc cmp or sbb inc xchg add cmp dec (bad) dec lock mov and push jne xor sub sbb ljmp sti jmp movsb out mov inc pop adc jbe inc mov sarl cwtl in dec in mov jecxz push inc sbb icebp nop cltd pop pusha in xor inc js cwtl (bad) fdivrl sub mov imul push (bad) xchg test mov imul push and and je cmc les popf dec mov lahf xor (bad) hlt fisttpll jno cmp arpl mov ret jb push daa xor leave jb dec adcl dec bound pop loope (bad) shll fildl dec pop outsb rcrl mov xchg sub int sub mov xchg repnz (bad) lock mov fidivr (bad) dec push sbb popa pop sbb adc push push dec imul lods adc bswap call ficomp imul dec push (bad) in leave mov sbb subl call push and sti and jmp mov es sbb iret sub sbb jmp xchg movsb stos mov inc test lret les mov ja cmp xlat loop cld jl xchg lods push xlat shrl lret mov dec sub pop jg mov fcomps cli testb incl inc mov sbb push leave test ret mov dec std ret mov jns lds rolb xchg adc add jo push or pushf lcall sbb leave and div sbb daa jnp flds inc nopl pop jne cmp lret mov in pop mov in dec dec aaa mov or cmp (bad) leave add subl add aad cmp sarl inc dec mov rolb les dec xchg cmp sbb or fs xchg xchg mov mov repnz iret jge movsb adc data16 jo dec or loop mov sub mov outsb or notb mov js dec xchg movsl cld dec stos jmp mov dec fildl mov dec jae mov leave fs inc jb lret cmp jl xor or fldenv nop mov pop stos outsb out pop cmp add clc and adc cmp in xor jbe mov dec ret jge lods push fdivrl out loop out in stos mov push jmp insb jne push in inc mov fs xor insl int pop cmpsb fwait lds je mov sbb dec int3 call (bad) dec popa jnp out sbb mov ficompl jb sub cmpsl mov ljmp push scas insb cmp and popf test das jmp mov fbld adc call (bad) int decl ficoml out lock xchg (bad) adc adc cmp add (bad) jns mov (bad) ss icebp add mov jns fldcw sbb les mov and pop movsl jmp pop test adc jge lcall mov ljmp rclb pusha cmp add stc out or adc in xchg cmp imul inc mov inc push mov (bad) cmp cli imul lock dec cltd adc pop icebp push mov in fidivl int3 inc cmp add mov push rol add cmp loop sub pop gs sbb sub pop out and ds cmp push out (bad) mov into fcmovb push adc in jbe pusha (bad) aaa pop (bad) adc xchg cmp cmp cli mov (bad) xor arpl (bad) jmp add daa (bad) push cli cld addb xor push pop cltd icebp jmp add stos and sbb inc adc lds mov pop mov iret push and dec jo pusha cwtl add or sub lahf pop adc addr16 rolb sahf mov loop icebp ss arpl pop (bad) in pop aam sbb jl or sti sub and and or xchg js or fidiv clc imul lret int push inc sub mov packssdw subl inc in push (bad) pop pop ret lds mov stos outsl nop lea aad lock pop aas loop xlat and daa sub ret xchg rcrb into cmp inc jmp push add movsl add les xor jge add mov out pop xchg xlat mov inc cld inc and repnz push add lds or fwait push jecxz or mov leave movsl cmpsl add or les inc iret xchg xchg mov repz mov loop cli popf mov push mov cmp fs loopne fldz mov cmc (bad) or sbb mov les xlat mov pop das or (bad) cmp sub push mov sbb mov dec or and test std into xor mov mov test and imul fdivl xor mov add mov dec les pop mov mov xor call subl xor push sbb mov jg clc out mov xchg adc push inc je fild mov cmpsb jne rcl les mov sbb add aad pop (bad) test xor fcomi jne jnp stc adc loopne sbb xor xchg scas mov add sbb stos dec dec fdivrp fstl jno cmp pop lret inc aad xorl push nop fsubr xchg xchg push sbb xchg fidivl jecxz mov sbb and add out clc andnps out addr16 lcall xchg xchg dec xchg jbe test fwait mov inc loope hlt out push das fwait pop sub push out nop inc push sbb (bad) mov jns adc (bad) int3 pop adc mov sub (bad) les adc pop loope mov fwait ret ljmp cmova fsubrp aas pop cmp xor xchg test cli push mov or imull push repnz imul xchg and loope adc jne pop add or cmc dec cmp jl add xor xor xchg xor aam push loopne test fnsave mov xchg dec imul popa outsl nop sbb mov mov sbb fidivrl dec cmp dec pop mov in rcrb jl sub js adc lcall (bad) divb and in add (bad) sub sub xlat push ret loope dec mull icebp inc jmp rol xchg ds or sbb and dec and lds sbb pop rorb xchg add cmpsb adc xor out add jmp iret inc sbb popa sbb fwait rorb mov cld xchg mov rcll stc xor jno mov jns cmc jb out (bad) xor xor leave in jmp cmp xchg sub repnz gs and push sbb je dec mov mov xor aas call or adc sbb call flds xchg lock pop pop sbb leave movsb out into mov cmp (bad) sbb mov shr nop icebp add add aas popf rcrb dec fs repz inc dec and mov (bad) fbld repz mov out mov movsl stos mov ljmp int mov leave dec xor loop (bad) cmc xchg push pop mov nop fistpl sbb add inc cmp mov fsubr cltd (bad) cli jp xchg push push pop mov fwait out xchg fmulp je mov pop jl mov and sub mov test pop and hlt xor mov int mov mov in int3 lret imul sarl cmp cmp fs imul jmp imul sbb push mov sarl dec arpl push cmc sub ja cmp adc ja lods mov hlt test fsin rorl outsl dec cmp mov int3 mov mov nop std and sbb and xor test cmp test mov mov dec ds loopne jle or loopne std sub or push adc push mov repz xor (bad) inc divl testl sbb nop inc push lods cmp jo mov dec out call jge jmp jbe scas push cmc test outsb and dec stc or (bad) fcmove cwtl jl xor xchg jg mov insb xor xchg int3 mov dec xor (bad) call xchg inc push jns pushf cmp push adc lods into roll push mov cs push add or mov imul cmp imul jne (bad) dec fidivrl dec mov lret jbe pop and pop jp mov stos mov insb dec fstl sbb adc shll rolb or mov call andl gs or cmp mov pop btc (bad) push icebp stc mov and mov inc pop lahf icebp adc pop out (bad) push mov decb cmp mov data16 lret mov mov jnp and cmp insl pop hlt fs loopne int3 or (bad) popa aaa cmp fiadd or fwait scas in loope cmp jp sbb jp nop sub pop decl insb jecxz aam in bnd xorl dec in test lock pmulhw adc and fidiv sub or fsubs cmpsl js test fiaddl xchg js push fmull mov mov cltd push imul adc je sbb popa pop and cmc fucomip scas xor push lret mov js outsl call in lret sbb (bad) ret pop push jl aad sbb mov pusha es jle adc or xchg inc lock (bad) iret jno dec mov cmp sub iret aas xchg ds inc imul pusha sub inc and das inc cmp mov push xchg lea movl test push xchg mull lahf and jae loopne adc sbb add and push sub add mov xchg sub bound or imul loopne,pt pop adc push push pushl dec adc xchg mov jge and sahf sbb loop inc ss sub nop and dec nop (bad) out inc scas add cmp add out sbb loop mov insl aas sahf aaa incl sbb dec dec push pop dec into bound test dec test fimul push pop in cmp aas mov cmp aaa out imul out inc push repz ret push dec (bad) in dec je ja inc push xchg mov push push decb cmpsl call and arpl test inc push mov cmp adc push dec sti mov adc (bad) lahf rcrl sbb lret cltd imul cmpsb or dec inc jo (bad) and gs pusha xchg movsl sub mov sub jne or les or lcall xor fadds push push movsl jne fs call add xor ds scas add movb subl mov pop sbb cld mov fwait pop push or mov mov xchg cmp mov in sub fdivl mov mov add push daa xlat ja inc cmp add in outsl mov fwait xor xchg mov scas ret jp push push (bad) inc xor ja add test or cmp scas mov roll push xchg out sbb dec mov push popa push imul mov bswap cli loopne and clc (bad) test fmul pop rolb aad lahf push sti cli aas sub decl (bad) or xchg mov in arpl pop fistpl test loope sub add push (bad) jecxz cld addl fisub add mov cmpsl in or aas xor out bound into pushf or add into dec fwait or lahf clc jl std add iret repnz mov pop andb jb jle jg out jne or mov shrl xchg mov inc sbb ret push sub mov xorl push fs cmp iret xor add inc (bad) (bad) int3 xlat jo cmp imul adc popf nop iret test mov and dec mov dec or jns jns out pusha mov cmp pushf xorb loope and ljmp jne das jnp outsl xchg les inc jbe,pt cwtl fsubrl mov (bad) and sbb mov push mov xlat int3 adc imul sub mov mov mov mov aad dec dec pop mov or fisub inc dec mov jl mov sti scas ret fbld or sub popa adc sub xor cmp mov ds jl and call pop out jle xchg (bad) inc push adc sub emms sub push hlt fucomi mov xor pop mov mov icebp lret adc sbb jnp out in pop scas xchg or int3 sti lret sub pushf cmp jne push dec dec or pop xor adc imul add mov lock xchg pop xor (bad) jbe clc popa mov stos mov int3 lods jp xor dec pop popf pop ss xor xor cltd outsl jp cltd addr16 fsub pop mov repz rclb pop xor sub out push div mov fwait mov xchg fistpl and loopne mov xchg das iret and sub jae ljmp clc jno aam out xor ds inc out mov sbb mov inc test jne jecxz inc das jnp cmp cmpsl push or jmp inc push cs fbstp mov cs (bad) xlat lock push xor xchg sub xchg fisub repnz mov in in add outsl inc in dec or mov mov mov jle sahf out stc adcb es js rcll mov sahf inc cmp dec (bad) int add push adc fsubl mov out sbb aas ficomp adc in fdivrl jl cwtl lea cmp insl mov ss sbb jo out ljmp cmpsb enter ret mov stos jl cmp adc sbb xor popa subl popf cmpsl lock or outsb jno mov in jae ret jb xlat loopne inc pop stos movsl (bad) xchg or jle mov test out jo jle iret dec inc mov dec arpl jle push inc lcall inc insl xlat jno stos inc push jg sub xchg (bad) dec std inc mov mov test mov cmp pop icebp sbb inc mov rcll jge add sets jae jg insb dec mov neg ja jecxz lcall cmp idivb bound jmp add cmc or pop mov adc jo (bad) jmp int cmp push xchg enter cltd jecxz repnz jbe dec pushf scas test das mov pop xchg mov or sub negl push iret sub push push test mov fdivl in sbb iret jl bound cmp jbe fwait outsb mov push jo cmc adc pusha clc daa das cmc fstpt rcrl ret in fs push enter add int xor nop jbe pop aas leave jle es xchg aaa pusha int3 js jo pushf cmp aam mov push clc jo push cmc insb iret pop int lea int3 push mov lfs mov les push aad jne xchg push mov call enter xor sub xchg pop mov mov xor gs movsl aas in cli sar cmp (bad) pop cmp pop scas add fistp repz dec sbb sbb mov inc mov insl and mov cmp negl jns (bad) mov push push or and lods enter xor xchg cmp lcall popa stos insb xor inc movsl aaa pop mov sbb xor fwait mov jecxz jle (bad) pop pop lret or insl out int pop xchg pop jmp jae insl adc int (bad) popa xor adcb inc shrl pusha cwtl inc push add stos xchg push fldl2e dec cmp mov cmpsl adc sub add xor aas rolb (bad) mov push leave cli aas mov add es hlt pop bound xchg arpl dec dec jg and jo adc int and fcomp leave jo mov (bad) data16 leave test pushf lods inc call sub add movsl sbb cmp mov (bad) jle fstpt xchg scas pop mov pusha andl lock aas cmpsl xor or or mov jmp jmp dec mov jo xor fwait nop std mov fistp test les loopne mov jecxz mov fidiv or out mov sbb sbb insb mov cvtpi2ps jnp pop sub dec sbb fs sub or aam mov aaa jnp pushf push (bad) jle jb mov (bad) das out lock adc mov fs mov sub sbb inc jne pusha cmp push or leave adc xor inc add ficomp js pop xor or dec roll add movsl imul cltd mov repz and xor loopne out inc xchg stc std cmpsb push jne ret out mov push hlt addr16 push enter mov mov imul add lret and push add or xor iret movsl scas adc push (bad) cmc xchg lret in movsl mov adcl push int mov test xchg cmovns popa (bad) les loop pop sbb push and inc out insl add dec repnz or or sub xchg xor sbb imul lret inc mov cltd bound pop and mov mov repnz push add js lods int3 cltd cmp (bad) call and les outsl adc add xchg add movsl pop test fsubrl inc popa js test xor jle and cmp test lock fcomps add push fisubr add cmp je cli js add aad insl je repz mov popf ja mov sub push je out jb pop adc adc rorl xchg add mov xor pop fcom imul cmpsb jbe xor mov arpl cmp test sub push mov outsl or mov pop mov pop pop sbb loopne adc repz stc mov ja addr16 pusha xchg pushf add cld out jmp pop fwait or jae or cmp sub test push mov ja ret rcl push mov cmp (bad) leave (bad) ss adc cmp pop mov aad hlt or pop arpl hlt sub pop (bad) lods push mov mov loop mov jmp dec test pop nop dec cld ficompl das sub mov aam mov fcoml inc std mov adc cmp daa dec (bad) cmp push shrl push dec icebp and push xchg mov lret mov sahf repnz push jecxz xchg imul cltd pop sbb es xchg loopne ljmp cmpsl mov xlat sub les mov outsl movsl fsubl cli shrl inc pop movsl fisubr in aas stos lahf cmc stos and es sbb and or shlb pop jle xchg (bad) in jnp fbld jge pop pop test pop mov sub mov (bad) sbb jle jno inc and sub ret (bad) cltd arpl jg cmp adc cmpsl fmull push or sbb (bad) jb or addr16 and sub sbb out push adc or (bad) jnp xor fwait or inc dec into xchg cmp push repz push aad push lcall mov aas dec push into movsb fidivrl subl es outsl dec push sbb (bad) jg xchg incb jns pop dec inc push mov sub adc mov xchg mov and rcll lret test mov test jne inc xchg in out or and push dec pop xsha256 cmpsb adc call es lahf aas (bad) dec fisubr int3 push pop fdiv inc or outsb popa dec jae jecxz aam add xchg insb cmp in outsl cld (bad) out add xor xor dec ficoml das sub loopne cmp dec leave das in or bound dec xor inc cwtl and rcrl push insl xchg mov push idivb mov in ljmp jb clc call pop mov bound sub sbb jnp cmp xchg in push es cmp xor mov push adc idivb sbb es inc inc push jg mov and (bad) sub sti sbb push ss sub push addr16 inc aad cld push (bad) mov imul mov rcr (bad) cmp xor jo xchg ret bnd push and sub iret int fidivl stos rorb mov mov fiadd adc cli and pushf cmp xchg adc dec ror movsb or push scas cld es daa mov sbbl push xchg in rcll cltd das pop decl repz lret push test pop sbb in insb testb shll cmp rorl adc lcall mov and dec push das pop adc inc les test add out jmp inc inc mov jb jmp cmc out dec xchg dec mov mov push mov push push jnp orl push or jle and ja rclb and fs scas and mov insl xor push mov mov shl jb inc leave push or mov pop mov lret xor sub rcrl mov insb push rcll xchg aaa dec sub movsb lcall add push mov inc loopne inc adc pop jmp pop jno test sub lds movsb inc push incl je ss mov xor nop pop lahf pop aas mov mov add fiadd inc (bad) add test das mov fwait enter outsb fsubs adc sub dec stos lock mov dec addb push dec cmp cmp sub test dec jbe fadd iret jns stos mov cmp test in xor in dec inc mov shr lods js lcall jb mov mov mov jno cld ljmp dec rorl cmp out cmp stc cs imul xlat lea mov not fisubl negb mov push test imul sbb sbb sahf divl jo adcl xchg lret mov push (bad) cmc mov xchg outsb loop test adc hlt mov xchg dec scas stos out push es pushf jne fiadd sub leave and test add mov clc (bad) xlat pop stos nop je in adc movsl cmpsl pushf jg xlat adc ret adc jmp int3 mov lods pop push das lock jecxz mov add xor aad dec dec and dec gs out mov mov mov or hlt mov mov test xchg test mov mov sbb scas add mov mov xchg sbb sti popa leave jmp sub lcall ja in lods inc add jle inc fs jne mov and push push clc repz inc icebp xlat cmp daa mov push insl adc or das rorb push test repnz std pop dec push jg rolb sbb loop dec jg ret loop cmpsl mov mov popa int3 out xchg and aas mov xor dec adc dec mov pop push lds fist iret cmp inc mov (bad) lcall lds enter int mov icebp jp out lahf leave in cld add cltd bound dec clc loopew xchg jno jg stos fstps or sub pop and inc ds jmp ret mov sbb or inc sub jnp (bad) loope loopne or push cvtdq2ps mov add fs xchg ret adc mov xchg dec dec xchg pusha push fiaddl lret xor outsl cmpsb xor sub cwtl int jne cmpsl enter imul xor mov (bad) mov (bad) cli in insb lods jecxz rol sub les fstpl lods add pop xor cwtl std mov aas xor sub pop pop sub shrb add aad icebp rcrl push lods inc orb insb std dec ss lds das jg sub jecxz and (bad) or inc loopne lods mov jl lret aas adcb mov test addr16 imul mov jecxz pop lret dec call sub (bad) int3 and clc jbe popf mov cltd ret and (bad) xchg mov cwtl mov jmp das xor mov sbb cltd test clc dec insb sbb or inc pop push sub sahf xchg xchg mov mov sbb (bad) pop or ja into lock aaa adc add out xor daa ret lahf mov push jno push es pusha outsb or stos popf imul or idivb inc sti sarl repz rcr mov adc xchg enter inc pop or es add jge or mov xchg mov mov xchg mov xlat jmp cmpsl and fldcw mov xor mulb dec loopne and jno fs adc pop enter aam mov sub jb mov sub inc push ds pop lods mov xor repnz (bad) std push pop dec ss cmp imul icebp bound xor test inc out jmp jmp jns lods sub nop adc out xchg mov dec push insb cmp aaa (bad) mov and cmpsl lret inc push int lahf or add insl pop cmp mov adc inc jl and ret in into inc xchg sarl notb push lods call mov lds shrb fwait mov cltd std js jb push (bad) mov int3 pop lds iret pop jne imul jo adc fbld dec lods inc rolb or sbb mov lret ret (bad) dec add pop or in lahf fwait idivb (bad) adc sbb mov mov popa cmp cmpsl sbb movsb fs lea dec cli outsb push sub add faddl stos dec in sub mov mov inc addl push icebp xor dec adc xchg js orl add inc xor xchg xlat pop adc xchg sbb aam data16 pop push test pop adc js mov fisubl inc sbb and mov sub stos inc push dec sub inc jae in xor adc notl sbb pop orl (bad) or pop (bad) testb push pop loope sub jb fdivp (bad) xor fcomp insb push xchg mov arpl xlat in mov in ja pop pop add fnop into nop loopne stc loope,pn add sub gs sub (bad) sub mov jbe repz or dec push jne or fadds dec fwait out movsb std sub les bound cmp loope ja rcrl popa imul stos xor inc dec or cmpsb dec lahf push mov sub shlb sbb mov in lds fldenv inc inc lret mov inc movsb or mov int xchg xor sub addr16 xor insl stos cmpsl insl aam arpl dec lea mov (bad) cmc call ljmp (bad) sar xchg and mov xor ficomp push flds daa inc (bad) ljmp dec sub int sub push add stc repz cmp pop push xchg fwait shrb lcall mov loopne cltd or mov xchg sub lret cs xchg outsl pop lods (bad) in xor cli lods pop or xchg scas mov xor popa rolb lock es notl xchg hlt lods jmp arpl sbb cli les int3 test inc xor and (bad) dec mov addl gs je cmc and mov jg mov arpl call stos jecxz push pop sbb jmp mov push xchg in cmp sbb insb inc fdivl imul sbb push add enter pop repz cmpsl sbb or es outsl gs push sbb fist loop (bad) fiaddl in mov or dec cmp push shr pop add repz bound bound mov sub dec aas jle sub xor in js call mov stos inc add cmpb cmp cmpsb adc fs dec jmp sub jnp inc ds pop je rcrl xor ljmp in imul js xchg and outsl ss xchg repnz and sub sti (bad) pop mov fildll sti mov ljmp jecxz push insb xchg enter loopne mov xlat sub sbb imul fisttp (bad) jle pop jne dec scas stc xchg aam rcr inc addr16 aas jmp fs int3 sahf popf mov adc fistp jmp jnp mov sbb fnstsw bound aas xor and dec pop adc cld fisubl dec loopne scas jb xchg pop cli mov xchg push mov mov fsub mov add fisubrl or lds or inc adc mov mov inc dec jle and cmpsb push test movsl clc mov imul xor push fsubrl mov pop push fistp mov nop mov cmp arpl (bad) stc out icebp notl mov ss or addl cmpl stc jnp and stos cmp cwtl mov nop aaa dec ret (bad) aas xchg frstor pusha sub hlt arpl xor sub in pop xor adc fisubr sub push or jne or and cmp push pop daa fsts pop mov cmp fdivrs mov addr16 sub xor xor std mov es mov cmpl inc push and and inc stc addr16 mov mov or or pop mov adc dec out ljmp mov mov pushf cltd lahf movb push mov jmp rcll cmpsl in or cmpsb shrb xchg int3 dec lods out popf xor mov push adc (bad) jb xor sahf mov push dec sub xchg insl push sbb jmp push push enter sbb orl subl dec (bad) loop clc or inc cmp in pop jb xchg and inc xchg in mulb fnsave dec cli push jmp and push inc cmp mov je pushf test dec mov xchg push push in push fwait cltd jne adc sub in sub mov insb jnp out push loope sub in cltd inc mov fs addr16 pop or mov in into loope adc hlt push flds xchg jne test push mov fdivl insb pop xor mov inc pop jmp sub inc cmp cltd adc cmpsl and (bad) scas sub xchg push lods dec aad mov adc mov (bad) fisubr xchg pop sub in xchg xor lods push sub insl or cmpsb push mov or rorl out pushf iret int inc ja aaa cs jns push pop mov cwtl mov rorl loope test popa xorl cmp xchg into and movsl arpl lret jae cmp cmpsl ja (bad) lock lods rorl call sahf sbb inc rcrb adc loop aam test inc pop pop fcom or fsubr xchg nop adc in paddsw mov (bad) mov mov pop int icebp ljmp or into lcall imul fidivl adc push into xchg jle popa sbb dec sub loope inc mov aad xchg das ljmp or mov cmpsb ljmp shlb dec repnz shll loope pop loopne push add sub pop xor mov std dec sub ds jnp jge in ljmp ret cmp jmp pop xor cmp movsl xchg (bad) enter lock or ret sub mov (bad) aaa jae sbb in scas movsb rcrb inc sbb (bad) pop je js stc sbb inc sbb std ret int3 sbb mov pusha push sbb jno out lcall push ja push addr16 mov (bad) fsubs (bad) imul inc (bad) movsl je mov mov sub daa call sub sub mov lock ret mov push mov lock test lds mov sub fsub mov das aam push les in lods ficompl sbb cwtl nop sbb jns (bad) sub (bad) push cmpsl js xchg clc fsts icebp pop or and xor and sbb nop ficom sub scas imulb cmp bound (bad) mov sub aaa mov int adc mov pop push dec rsm insl add xlat loope popa or jb cs mov sti mov mov lea xor ret or cmp sbb sahf les call addr16 dec xor mov mov add (bad) repnz mov lea inc enter aad (bad) lret cli int and mov mov inc sub data16 ret sub xlat (bad) imul daa aas aam or inc mov test xchg pop lds (bad) mov sti es sub mov xor fistp lods or es fucomi addl xchg imul je ret lret and inc adc mov push stos mov adc idiv notb clc add hlt mov (bad) mov mov fisubr das mov mov clc outsb dec cmp dec sbb add in pop out test mov cmp push ss push je inc repz mov xchg jle dec inc out inc pop leave (bad) pushf es sbb jae mov cmp mov neg cs pop loop movsb cwtl push clc add and lods inc or xor movsb xchg push mov scas push fmull lret jl mov cmp pop rclb arpl sub sbbb (bad) xlat add es cmp sbb xor lcall lret (bad) cmpsl pop lahf and jb dec (bad) je mov xchg cmp icebp add mov add mov pop ds lds aaa (bad) pop push dec jge and in lret push mov ss outsl jl jp jno xchg mov pop mov ret mov lds test mov outsl lret inc sub mov cltd popf fldcw out pushf add shrl dec movsb scas call (bad) cmp adc cmpsb add int gs icebp movsb and movsb lcall enter outsl call das jbe daa xor mov ret cmpsb dec pop repnz xchg cmp scas jge cs mov shlb icebp pop xor jne jle (bad) shrb shrl les xchg pop clc xor inc dec scas cwtl je jb and js mov jb mov and and inc mov mov (bad) mov xchg (bad) and push sbb push rcl stos nop js imul push cmc fidivr xor out cmc pusha imul xchg pop cs (bad) mov popf jecxz lret cltd or je mov int3 push and mov out int pusha push xor ss test and repnz xchg pop arpl inc or daa push and xchg and into mov decl sub adc mov pop data16 lret inc arpl jb dec push gs push mov cli sti scas aad jle cmpsl xchg movsl and push mov cmpsl or mov mov xor inc dec movsb dec cmpsl adc add or scas push out sarl (bad) (bad) push rcl hlt sbb lods pop mov jecxz inc adc iret ret movsb aad pop push into jge addr16 adc (bad) out shr rorb dec mov sbb hlt mov xor mov sbb fdivrs shll mov jae add loope in js (bad) arpl or fsubl xchg pusha stos xor xchg mov rorl jb push imul pop insl mov stc les adc daa jo push fidiv mov mov dec outsl sub lcall outsb xchg jbe xchg xchg loopne mov push lods xorl xor test cmp xchg shrb dec xchg (bad) and test jmp push lock (bad) rclb mov sub negl push push ljmp (bad) shll pop loope jg dec jp pushf enter sub (bad) xchg pop out xor add popa cwtl or push ja push loopne mov mov (bad) pop and movsb push bndstx mov mov mov sarl xchg sub push ret cmp les adc rorl imul push mov movsb arpl cwtl test icebp push (bad) or rcll jns jecxz jge hlt mov cmp popf jmp push rcr das popf call shlb sub std sbb scas jp sarl cmp test mov or bnd ret imul nop push mov push in scas mov stos xchg mov (bad) enter aam mov sub lods mov rorl aam rorb stos xor mov xchg test sub pop adc mov mov out ja scas repz loope mov ret stos dec jnp out inc xor mov jae movsb cwtl dec mov cld pusha outsb stos or xor pusha aad movsl fiadd adc xor push dec add dec imul adc add add repz push gs push (bad) movsl adc shl inc fstpt xchg scas ret xchg sti fdivrs (bad) leave jbe insb xchg mov adc in and xchg cmpsb adc jo jae jb push inc sbb mov cli add sub add fimul pop cmp jnp sbb pop ret (bad) fdivrs cmpsl scas bound adc lret fcomi leave ljmp pop sub enter ss mov orb mov aaa cmp jle push or dec add mov fwait cmp and repz adc add int3 add add lret mov cmc sbb test dec test imul jne add mov ljmp loope xor and inc lods imul xchg jmp xor add in out test sub ds pop popa pop or jnp push into xor mov cmpsl mov jae mov mov cmp test insl out jo push cmp jge cmp sarb bound mov xor sbb addr16 push pop cltd push inc lret pop mov out jg mov scas loopne jbe and imul xor (bad) and (bad) adc xor cmc dec test pop test iret leave xchg sbb xchg sub daa xchg push mov adc and cld data16 aam push jp in push insl mov dec cltd cmpsb pop xor ds sbb dec stos call pop scas scas aam mov gs rcll lea dec movsb lds and shrl lcall mov scas or out test mov div in push pop and adc out bound xor cltd xchg je imul mov cmpsl xchg test cmp inc out mov xchg cmc or notb fidiv jbe sbb rorl jmp (bad) aam popa fwait mov lds fimul out int push pop outsl and ds das add fdivs sub mov add push pop dec fs data16 xchg fstl dec cmp daa es int3 js ja xor push or loop and xor inc test cmpsb xchg (bad) add mov not adc test mov lock inc add stc aad pusha mov jno jae mov loope jo jnp or shr push jbe mov ljmp mov inc insl js inc mov in pop lock jp jmp es jb cld or adc lea iret test or imul jns jne pop push mov sub das jae push xchg push mov outsl arpl int3 int (bad) cmpsl pushf add inc jo pushl inc cwtl loopne das adc and test stc jge jbe dec xchg bound je out xor or mov data16 xchg repz xor dec jne imul mov shlb push ret sahf push insl push xchg rorl jg insb jecxz jbe mov iret xchg loopne inc clc ret mov fistl dec hlt mov (bad) mov xchg or cmc pop (bad) jmp mov pop jb movsb lods xor jle inc mov jge sub std pop bound sub ljmp mov and arpl stos push loopne stc xorl mov pop ja mov pop scas pop xor mov mov gs dec mov dec gs xchg mov (bad) pop fisttpl les jae test pop cltd xchg in fmuls fidivrl cmpsl lods push jl mov out (bad) fisubl adc mov inc leave jae push mov pushf add cmp clc push xlat mov inc push xor dec mov push lock dec icebp imul ret shrb push pushf (bad) lret push popl scas inc mov pop sub lret test push in fistpl repnz sbb out add ret fmuls cltd int3 jp lods cmp pop push jp test fdiv mov or adc push repnz jmp (bad) sahf mov cmp cli pop mov inc sub jo sub inc push mov ret or sub cmp jge outsl stos enter push pop in push jmp int test sbb lea xorl cld jae lcall cmpsl bswap mov outsb shr cmp xor push adc jmp sbb xor push fiadd cmp ss jns fucomip pop adc test mull mov movsb jle cmpsb pusha mov inc cvtdq2ps or ss inc sub iret ret inc mov sahf sub inc jbe jl pop shll (bad) dec cmc aad in xlat (bad) outsl pop arpl add je sbb cltd nop mov outsb mov fcomip insb jge add stos ds idivl in pop lods loop lahf dec sub fsincos push mov fnstenv stc xchg in dec push dec add mov cmp mov xchg test push mov stos jo test test outsb jle or ljmp out jbe flds push add icebp fild cmp andb sti mov sub adc mov dec jecxz ficom inc (bad) fsubl mov stc lock xor into mov mov rol push aas or icebp cltd scas xchg stos pop push hlt cmp xor js xchg test hlt xadd cltd in imull imul push lods sub ret adc out (bad) adc loopne jnp or add sahf call or dec std addr16 loopne and scas and xchg push xchg cmpsb push sbb mov (bad) int3 lret fs imul mov mov push cmpsb mov jmp adc ret insl (bad) imull mov push mov push pop or bound cli ja (bad) nop pop call sub iret test loope push dec gs mov cli out adc pushf aam sub mov sti xchg xchg xchg pop (bad) aaa mov mov mov push inc cltd cmp sub (bad) call loopne imul enter xchg and scas out xchg repnz push jl ret xlat add int3 xor repz shrb jecxz add dec imul pop lahf jnp je (bad) shrb movsl xor out inc es roll fwait rorb scas pop xchg fs mov lret lods mov mov cmp movsb pop inc xchg popf mov cld push xchg out push scas in xchg mov inc sbb xor and sub push lcall lret cld std jp (bad) jne movsb (bad) imul addr16 pusha (bad) dec les je out shlb sub or sti lea inc lods push pop and xchg xchg pmulhuw mov add imul sub gs sub mov popa add shrb fcmovb sbb push and mov sub bound sbb sub loope adc mov repnz cmp ds loop dec mov je mull sbb sbb mov mov xchg loopne push lcall arpl cwtl inc std and andl push jecxz push push mov pop aaa pop roll dec inc pop sub sbb outsl pop roll xchg mov jns leave xchg xor jle inc sahf push push ss sbb outsb outsl inc repz or fsubl loope fidiv inc sub lock xor jecxz lds test nop jbe jae rolb js punpcklwd out (bad) mov mov pop ds mov mov mov clc push (bad) in mov pop mov adc or pop adc clc or (bad) ljmp xchg (bad) xor jmp jo cmpsb jmp (bad) cmp test jne and push add inc mov es movsl pushf cmp lret (bad) mov das fnstsw (bad) int fwait jne lock mov cltd xchg and out cmpsb mov dec xchg repz leave jecxz fstl xor and pop push das dec (bad) es mov sahf xchg (bad) cmc mov adc fstl jmp stos sbb in mov dec enter jp mov (bad) fnstenv dec add xor jge pop inc xchg sarb addr16 or pop jns xor lock jle and mov push push inc sbb adc mov and or ljmp imul cmp pop pop xor aad xlat in mov movsb jbe out add hlt dec jnp inc cld jno and ret and xchg jae aas inc jno hlt scas fisubl mov mov push xchg subb (bad) add repnz rclb test rcll adc mov out (bad) sub jbe xor pop pusha xchg (bad) sbb dec cwtl rol test dec jp aad das out and mov ret jno jnp cmpsb mov pop enter push xchg adcl jmp xor js cmpsb imul lds ss pushf neg xchg js push sub mov push insb leave (bad) outsb push mov jmp lcall xor fwait iret ret test push add aaa fidivr pop jbe pop test mov mov mov or div push sub pop mov rcrb cmp sti stos jae cmp mov mov pop movsl adc xor cmp sub lret (bad) cmp mov mov push int3 test xchg scas nop imul cmp jp daa ljmp sbb pop loope push xchg mov ret push popf mov nop data16 add ljmp (bad) sbb imul inc loopne jne xor imull mov mov imul mov mov dec adc mov loop popa add inc mov call enter push mov gs in pop (bad) repz push add out xchg push into (bad) mov mov aaa inc mov cs clc fcoms mov ds test jecxz mov adc pop (bad) mov fwait pop fiaddl cmp mov cwtl rcrl stos pop mov ror mov cmp aam aam dec pop adc jnp cs insb fwait mov popl stos movsl cmc push fldt mov ret and jns xor addr16 in cmpsl and icebp fs mov jne cmpb cmpsb push daa or inc and bound pushf sar pop iret out enter adc leave lahf leave fstl arpl outsl jno outsl rcl pop push stos arpl mov loope dec ds pop inc loop sbb xor dec lods xor outsb sub std xchg lcall (bad) cmpsl jecxz test adc (bad) dec pop insb mov cmp dec dec push (bad) cmpsl dec sub cmp dec dec lods jecxz lret jne (bad) cmp je popf or addl xor scas xor lcall ljmp sbb out call push inc push push scas cmp ss imul in or push ficoml mov push sub cltd jbe out jno mov sbb mov jge xor pop inc adc mov cmc loope pop andb mov pop ret pop and scas sbb cmp insb out stos sub roll pop xchg fidivrl sub push shl faddl bound dec loop test inc (bad) pop f2xm1 xchg test loope pop inc sub in sbb xchg or and rcrb jne lods pop lods adc mov (bad) loopne mov scas adc sbb rcll xchg movl repnz mov push mov or mov fadds flds leave std xchg and push test repz fmull sti test pusha xor into xchg shll (bad) in sbb push arpl cmpsb fdivl jp int3 jp movsb fldcw xor pop mov pop cli add dec dec and cmpsb and cmp pop das xchg pop imul cwtl fildl xchg sub mov fcmove jmp jnp setae test nop (bad) sqrtps scas sahf pop enter out into dec sbb jae jns mov jb add cwtl mov inc cmp shrw push inc mov and adc add xchg xchg lret aam (bad) ljmp xchg aad and push in das jns xor (bad) cmp cld dec sbb jl fcomps xor stos or mov sahf jle cli or mov mov pop mov mov adc jnp sar or bnd adc fmulp shrl or add pop mov xchg sbb insb cmp lea daa stc jmp movsl call xchg adc cs lds aad outsl enter sbb addr16 stos fs mov leave ljmp jne push inc sub mov mov xlat pop xor push inc xlat movl mov mov rolb pop lret mov jnp daa sbb push pusha xor push popa adc push fnsave xlat and mov push cmp and inc hlt cmp inc xchg push in cli fsub out popf mov push outsl loopne fdivl in push add stos xor (bad) sub insl inc nop out dec pop jmp sbb ljmp adc clc inc and addr16 jnp add gs roll mov jns mov in in movsl gs push jecxz inc push int xchg mov xchg jo push hlt sub and fadds pop pusha cmc sbbb mov mov (bad) dec loope in andl mov push test push xchg test cmpsl jecxz inc push arpl sbb rol lods xchg popf xor out dec cli sti fstpt icebp xchg pop rorb fucompp repnz pop fs and (bad) or mov in ss lret mov das push add and imul jmp outsl imul add pop cld pop add mov push cmp sbb push sub and pop cs adc aam (bad) pop dec inc clc xchg les or or cmp rcl push dec ret or adc xchg iret stos pop mov xchg jbe outsb test or xchg xchg sbb xor bound adc mov and jno sarb ret add (bad) mov je cmp inc dec (bad) call scas fs outsb push in test xor rorl pop jmp jo cmp mov clc (bad) fisubr fs outsb xor mov or push jns sti repnz xor mov cmp lds pop jo out mov lcall dec inc or mov push stos stos pop mov sbb xor adc es xchg ficom xor in loopne push dec xor ret xchg popa int pop fistl dec ret int call xor aam xchg pop push push xor es xchg fisubr rcl (bad) loope jb dec scas in xchg mov aas lret xlat dec xor adc cmp popf cmp push (bad) add (bad) push and sub mov int3 mov dec mov (bad) mov int lret jecxz push lret lock rcrl fwait or or sbb sbb jge xchg fwait mov iret in divb adc or iret dec fnop sub cmp mov dec outsb jo iret pop dec dec test cld dec (bad) (bad) call adc in mov pop js dec lea in sbb xor add lock or and push mov nop sbb mov add scas js and pusha push dec push loopne out (bad) mov xlat xchg incl add xor arpl addr16 dec push pop pop mov mov sahf push (bad) ret in lret mov dec stc movsl pop mov xchg rorl stc dec and sub mov cmp adc pop iret ss jle or es out inc mov sub lods orl push ret (bad) data16 notl movl iret mov movsb lcall jne fsub xor mov xchg ljmp sbb mov cmc pop lea sbb xchg xor lods or sbb js imul cli jns mov cld jp clc jae test push fisubr dec xor inc lods in push sub loopne cmp idivl setbe fsubrs push aad cmp xor sub loope repz out mov aad xor pop sbb cmc mov imul xlat data16 cmc (bad) popf cmp lods sbb jl pop nop dec sub mov js and mov sub mov or jb lds into ljmp and mov inc mov jecxz es scas cmp xor inc mov loop xor shrb pop jg repnz orl inc add rclb dec mov or insb sti push inc scas dec pop stos jecxz fild jl and ljmpw dec cwtl xchg fidiv or shrb mov (bad) in stc hlt pop scas sbb call cmc nop repnz adc xchg pop or xor hlt mov adc addr16 mov movsb inc je add jbe sbb jecxz push pusha adc (bad) and ret xlat call fdivrs xor out ret ljmp mov cltd lcall xchg mov dec (bad) cmp mov out add mov mov inc (bad) xchg lods test (bad) pop lea sub cmpsb and cli pop sbb push cs dec inc xorl cmp dec xor mov cs mov adc sarb pop push dec das in mov mov or mov lods xchg pop jne pop push loop sbb pop adc xchg and sbb stos fist nop leave cmp mov jae mov mov push into push xor cmp (bad) sahf arpl or push add arpl enter push xor and test test xor pop or in (bad) ret fstpt xchg dec stos jecxz adc add adc mov (bad) mov mov fdivr test sub cld mov sub out gs and rolb jne out fwait adc mov cmp xchg and xor or inc ficompl add push nop ljmp mov xor and int sahf dec or push (bad) out lret stos jmp aas cmp enter add cld leave aad lock not push jl mov outsl push xor test test iret mulb je mov sahf xchg test add (bad) xchg dec aam sahf pushf adc push (bad) stc pop or push jnp add jge add test test mov or push mov sbb or fwait push int3 jmp and cmp cmpsl xchg fxam mov aas inc sahf pusha dec into mov push sub push loop and data16 fnstcw sub or mov popa xor lds repz xor ljmp xchg jne cmc js adc lahf adc push int3 repz adc cwtl fcoml xor push mov bound (bad) cmovp pusha stc xchg stc mov aaa pop aas or jns out push sbb mov shrb xchg xor outsb sbb dec dec mov movsl clc mov mov sub outsl (bad) dec mov movsb (bad) out xor int3 or sub fsubl movsb sub adc cwtl jno add push inc jo push aaa cmp jne out mov insb inc test cltd xchg xchg bound mov fcoml cld add mov cli int3 jle push pop mov cmpsl pop sub cltd xchg insb dec xchg mov xor movsl xchg lds ffreep mov jmp sbb sbb jnp xlat xlat cmp or cs in fbstp jbe push mov mov mov pop xor aad (bad) cli out fimull movsb (bad) (bad) sub mov jp cmp inc mov xor popf stos or ror jae mov icebp pop dec cmc pop enter jg movsb and mov jge ret scas pushl dec lret add mov sbb pop push in xlat shll (bad) xchg clc mov lcall push pop dec hlt std pop hlt fist mov sub cmp cmp cltd dec mov mov out repz test bound adc inc inc cmp lds (bad) mov push daa add in or int3 and mov loop xor jb jns push cmp fistl push addr16 pop adc (bad) int3 xchg fsubl adc test lods shrl mov sbb or repz xor sub out xorl add jg int xor jo arpl std rorl insb adc xchg or outsb test push cmp and pushl out or (bad) mov movsl xchg (bad) fwait cli inc mul adc jb orl add dec mov jecxz (bad) jmp jne gs jo pop push test mov imul ficompl stos mov xchg ret mov (bad) pop iret jo push inc lret fdivl pop ja (bad) xor aam sub inc lods ds dec (bad) add ss stc popa dec push xchg add (bad) int jg gs aas mov es pop je in ja aaa mov sahf sub xchg enter xchg push xchg pop mov popa mov lods jo out pop in out xor movsb or test int push shll fildll mov xchg and test pop mov in cmp or gs push jnp call mov dec xchg adc mov cmp push lds inc jle xor xchg adc inc jbe lret popa daa js arpl cmp adc mov pop repnz test pop sub or dec out push repz packsswb inc cmp in pop loop (bad) mov je sub jmp xor sub jle push pop add lods add push out and iret lock loop mov push popa mov or aad xlat push adc notl adc out aad out out xchg nop call insb shlb mov pop xchg aaa pop incb xchg repz xchg and test enter fistl orl jb popa (bad) rcr stos lcall push mov int jne clc stos push fwait mov mov jne or jno push pop add and adc fidivl push (bad) sbb cli lret push inc ljmp rcrb je adc inc xchg add and fldl2t (bad) mov addl icebp cmp dec aam jb inc ja test insb push pushf (bad) fbstp cmp test mov push cwtl or push out cmpsl jle jp stos aad inc dec insl aas inc or fwait adc les jle (bad) (bad) sbb dec cmp pushf (bad) xor mov popa ss (bad) sub mov inc mov mov or repz shlb (bad) cwtl inc bound ljmp add xor and jo pop inc cwtl insb push fnop out pushf or pop mov lret sbb mov nop xchg ljmp jecxz and inc dec dec jne xchg imul sub push inc je pop loopne,pn fldcw adc pop stos lret jge fbld in jmp divb cmp lret stos pusha mov inc rcr sub push and mov out fs (bad) jb out mov push sub imul lret mov andl inc mov or sub push cmp out jnp push test mov xchg mov subl fcmovb cmp jle cmp adc mov push inc push imul and xchg pop lds push lock (bad) repz inc rolb and xorl mov dec addr16 hlt in mov jge mov inc push movsl ret sub push insb ja push push sub sbb push jle pop popf pushf outsl js dec out scas pusha inc ret jno rclb sbb dec lahf inc lods lcall xlat aad xchg (bad) jbe jmp mov sub xlat ret lret or adc orb inc or loope jbe jmp divb das sub lock jnp fidivl in enter push jnp push pop test and sub and xchg sbb (bad) iret call ror dec sub sub in mov push jne das xchg iret sahf scas push int3 cltd jmp mov dec adc movb jo lock inc lret jecxz loopne mov sbb jge mov pop xchg and mov xor je shll ljmp push (bad) into js data16 aaa jl or push xor fidivr int (bad) xchg xorl (bad) pop test inc mov xor movsl fnop jbe push ljmp xchg out rorb push (bad) sahf xor pop imul bound (bad) sti fwait mov fdivrl scas jns fdivrs and sbb mov pop lcall push loop sub and (bad) inc jp into scas push (bad) out dec xchg jmp pusha lock mov daa xchg add ljmp les mov jmp xchg cs or mov cmp enter xchg pop xor in fwait lods hlt movb cwtl push add jge mov inc stc push push ret xchg lock addr16 les lea sbb out (bad) test pop (bad) lret loop inc loope xchg stos and (bad) xor lcall imul dec lods sti push in lcall aaa inc (bad) repnz imul mov mov adc xchg or cmp cli test aaa cmp cltd nop stos dec loope xchg mov ja and mov pop mov mov sbb cmp arpl push and adc dec in pop nop clc sub bound (bad) xchg cmp mov or idivb popf jbe test push push dec xor mov fisttpl outsl in sbb out cmp lret shlb xor icebp push loope dec dec mov outsl (bad) mov mov scas repz fs jle add mov cmp cmp (bad) ds add xchg jle sub faddl lret sahf add push xchg inc add les xor outsl sub fldcw adc adc mov inc (bad) outsb mov push xchg cli data16 pinsrw mov jle ds push shll and or pop add mov (bad) call repnz jge or push test mov iret imul ficom and add sbb rcrb lods mov jb fiaddl loopne das (bad) xchg sbb pop and xchg or cs mov pop das sub and sub jmp mov cmp lret jle adc stos jo mov fcmovu int es sbb gs xchg ss sub add dec add clc addr16 push ficompl jmp or xor ljmp movsb push jns rolb shrb mov mov lock (bad) cmp pop hlt jp inc test push roll sbb int3 cmp (bad) scas jbe sub cmp jp gs inc mov and into stos aas shlb cwtl ret push stc mov sub jae das stos sbb mov nop adc mov xchg mov es dec lret out stos push rorl inc pushf dec sbb push mov data16 cs push xchg popf mov xchg ret rolb mov cmp ss mov enter push (bad) aas cmpsl in ret insb pop mov pushf lret setno outsb push jge jno mov cwtl add addr16 repnz and pop xchg cmp aad lcall adc mov dec add test inc and jmp repz mov pop ljmp push or and mov cwtl mov adcl mov jecxz rolb nop add (bad) sbb add mov push sbb push std outsb xchg iret sarl ror loop lahf add jle inc push gs not pop pop fdivrl pop xchg mov leave js lcall aad ljmp sarl pop cwtl adc pop pop push cmp xor out inc (bad) (bad) repz jns fs rolb jge jns mov popf test mov cmp add bound mov inc test jl orl pop lcall xchg mov push into adc lods addr16 (bad) xor loop imul mov push cld dec inc std jno mov mov nop add pushl int3 imul push fistp adc lret dec mov popa sbb xorl (bad) jae cmp cmc pop and flds nop leave mov (bad) testb push in dec sbb data16 clc bound cmpsb fwait sbb cwtl push inc sahf dec dec mov and in enter mov mov std cld ret adc push enter mov lods inc in mov xor sbb int3 cmpl out xor scas (bad) in push shlb mov out xchg mov pop mov inc jbe mov (bad) mov cs and ds outsb mov cs fwait mov pop jno test xchg sbb pop mov push aad outsb sbb je mov push das clc mov mov pushf imul or dec inc scas roll dec mov (bad) std outsb adc cs inc pop cld adc and ja clc jno pop lcall xor mov adc sub add loope push mov mov inc push sub clc aad test xchg adc ficoml jecxz popf pop fptan push xor cmc cmp adc test mov dec jns (bad) movsb ss outsl mov xchg sub (bad) mov cs mov pop mov xor add mov pop imul push daa xor incl imul mov in aas hlt js in inc clc xchg ds mov in push sub adc (bad) dec sbb sub imul int3 (bad) jle mov dec push xor pop insl inc lret mov mov adc lods out lea mov dec (bad) int jo lods and sbb adc clc push js xor xor cld stos daa add inc lock adc fldcw xor xor cmp jg or aam pop dec (bad) jl hlt bnd pop push push pop adc ret xchg pop cmp sbb rol jo mov fwait hlt mov inc in sbb pop jno stc dec pushf push sub stc push pop dec xchg mov aas mov sbb ja lds sub mov sub jmp call mov rorb sub mov js test test jnp int3 sbb mov out out push sub mov shrb stos dec mov in lret mov sbb jb (bad) mov adc popa xor and in push and mov push rorb add push jge sbb dec repnz adc ret pop ret stos pop scas inc or pop mov xlat arpl mov stos dec (bad) rolb cmp clc lcall out bswap jns ja in push faddl jmp testl je mov bound test jne lret mov les hlt loop jmp sub insl imul push inc (bad) sbb shrl data16 jp push xchg pop fidivr jg push or and aam lods xchg ljmp xor push cmc shl xchg fbld testb fwait inc xor or cmp dec mov pop mov push sbb sub insb adc sub pop jo mov add sahf jmp rol mov int3 xor leave aam add inc xchg mov repnz or sarl sub cltd aas mov cmp aad mov mov nop in cmc xor imull sbb xchg and and scas arpl push inc ss jge pop dec sub aaa xlat pop adc in xorl mov push std jno ret iret icebp flds lret cmc mov aaa mov out fsub mov (bad) repz fcmovu mov fsubs and ja shlb mov dec incl nop scas sub ret js xchg cmp outsl mov outsb and cmpsl loope dec push aam insb mov aad std adc outsb cwtl add inc add push jg outsb dec dec (bad) cmp daa fldenv inc cmpsl (bad) or xchg sti (bad) inc arpl movsl sub xlat or lods cmpsl mov test xchg inc in mov cmp pop xor scas or pop dec gs scas shll iret popa outsb fisub cs (bad) in inc fnstsw scas dec fisttpl xchg shlb mov or ret adc adc or repz push fs xlat pop mov pop push dec pop dec sbb sti ret xor mov aad cmp pop (bad) mov inc mov mov loope mov jno or adc dec sahf mov or cmpsb push je dec xchg mov pop shlb stc inc ds ljmp sti push jno mov jne ljmp inc fwait pop clc call sbb repz add push flds xchg lcall icebp dec sub mulb push add push or (bad) sub ret (bad) pop mov repz mov or lret jecxz stos inc js xor and jno or push xor sub pusha jmp dec enter insb xchg mov es cmp jnp sbb loope pop mov nop dec sub insb sub push ftst stos push mov aad jnp sbb int3 (bad) jnp sub adc (bad) cmp enter loop in test icebp pusha push lahf stos xor jnp and and pop inc push lret lock xchg xchg cmp addr16 gs mov adc insb xor enter test inc shrl xchg loop pop cmp mov mov daa xchg inc dec icebp sub xchg mov xchg dec push lods repz xor fidivrl dec clc leave mov pop push dec xor dec pop pushf sti outsb mov sbb ds pop mov ds fild jecxz xor pop jge mov sub jecxz inc add gs lret loope add add (bad) push inc inc stc fisubl mov scas inc pop jmp (bad) js cmp push shll cltd push cmc repz sub xor dec enter jp push fisubr mov cmp jl cld add aam mov cmp inc popa rcl or sti and xchg in mov cli pop cmpsl scas push mov mov loopne sti mov push push cmp jnp pop sbb bound mov dec adc sti or jmp inc fidivr push rolb xorb cltd aad stos je adc sti add cwtl into outsl fisubrl mov out test inc dec cmpsb cld aas push and push mov popl cmp rcr das sti loop sarl test pop and lret ffree lods fldz push or pop fildll adc pminsw hlt mov imul lret push cmp dec pop pop popa pop ss xor sbb inc arpl outsl jno insb lods xor movswl das movsb out fbstp (bad) cmp in enter pop repnz and in (bad) rol mov push jnp add pusha imul imul or cmp pop aam push or pop add cmpsl in mov icebp pop adc ret ja test xchg hlt mov mov fldt and sbb cmp xchg mov pop cmp loop loope lds (bad) jo subb (bad) xlat movb dec adc push pop les pop cmc mov xor xor jg popa push fcomp rorl in iret push xor aas lret push mov pop cld mov inc int fisub cmp lret xlat out jge adc movsb call ds add jnp out cld jp sbb push push fbld jl cltd fdivs jecxz bound addl or mov sbbl shrl cmpsl dec fcom mov lods cmpsb cld cmc (bad) movsl aad mov imul jns dec inc dec icebp xchg jge test xrelease sahf sbb mov jmp add or dec popa dec push cmp movsl lcall inc (bad) in mov (bad) icebp and xlat rcrb aam mov andl mov and add or mov sbb fdivrl ja fnstsw call sub sarb inc cld mov sbb aas bound cmp add in in pop xor ja xor xor in (bad) icebp xor sti repnz aaa stc xor into jecxz iret stos fstps (bad) jns add mov push cmp cld lods movsb add inc jnp data16 mov pop inc std enter and fimul in mov jnp jge or push jbe adc enter push xor les loope js adc mov enter mov fdivs push mov and ret adc or xor cmpsb push pop pop xor (bad) sbb cli sbb adc test xor pushf mov sarb data16 cmp dec jb mov das in out or sti pop mov test mov push add dec adc jmp in popa (bad) leave jecxz adc pop or into push insl pop dec inc push dec jbe incl mov sbbl or out xchg icebp mov add and mov cmc lea add jne push (bad) mov aas push sub add (bad) mov (bad) xor cmp xchg decl jbe aaa or andb ss inc lret push (bad) jge fstpt (bad) jnp rorb scas es sbb in sarb scas incb adcl jae push sub imul sbbb popf mov sbbl mov (bad) lcall xchg mov cli mov mov sbb add and adc in dec sbb das inc dec xchg (bad) call aad imul leave jle mov or outsl clc popf stos je das and mov pop mov sbb dec dec cs cmp decb outsb pop daa pop inc lock mov push mov inc es fsubrl sar dec lods push xchg adc dec pop sbb cmp or push (bad) decl int xlat dec dec loop mov (bad) gs movnti testb arpl in or inc add jmp pop add or adc mov imul mov or repnz fucomip fldl (bad) mov popf movsl jbe ss or inc clc cmpl pop pop pop and lret mov int pand add jb lcall xchg stos into std in insl shlb js test das shrl cld clc inc mov or cmp sbb sub mov aad pusha fsts and push (bad) pop loopne cmp repnz adc (bad) lock inc push lods xchg sbb ljmp std pusha mov pop cmc push sti xchg addr16 or xchg dec inc jmp pop add cmp rcrb repnz inc cmpsb outsb daa imul mov lret jnp adc cmp enter adcb lds jbe das jne mov cmpsl jge (bad) mov pop push jb fwait mov loope dec pushf sbb fcoml push test pop mov dec sub mov cmp gs push popf sbb fimull jmp movsb sub jns movsl push fistl in jbe jb shll jmp ret lea jmp xor fsts lock mov mov add add fwait nop adc cld sub add or mov aas clc jg sub or popa xchg adc sarl sbb sbb cld stos test clc es pushf add jp adc fldcw mov sahf push iret or rcll sub or negl pop sarb dec pop adc test sarb out test mov inc jp jnp mov add add mov inc dec repz cmc scas call mov repnz adc repnz (bad) xchg inc inc fnstsw push testb sbbl mov dec jle mov pop xchg sub aad test mov xor out push (bad) call test pop cs xchg sbb pop or push add adc and repz shlb out jecxz es fisttp push out add push mov rorb cmp jnp adc push int (bad) scas mov sub xor les pop enter ss push notb sarb adc lods out sub scas (bad) mov pop pop test fistpl jo dec (bad) sbb push ffreep xor popa vandpd addr16 sub jb repz popa xchg jp pop push mov test mov jnp ja bound mov outsl xor jp pop xchg xchg xchg push or les out sbb push dec add (bad) cmc outsb xchg imul inc (bad) outsl lahf test cmpsl pop jae or mov lret mov sub addr16 icebp leave fidivl pop outsb sub lahf or cwtl cmp add push dec cmp fisttp inc ret (bad) push arpl (bad) movsl mov jg leave (bad) aaa push xchg lea add dec xor loopne rorb sub sbb pop pop push fwait js pop push out mov sbb mov and movsb out pop (bad) xor test cmc cmp and movsl sbb rcll les jp bound and xchg xchg jl out jl in test sub adc sub test inc push dec xor movsb cmpsb loope stos xchg push or in xchg adc xlat jbe,pt data16 dec push jp cld inc or xchg inc loop fdivrl (bad) jne rcl jmp pop xlat xchg or roll add (bad) sub daa fxch nop int3 sub lods adc aaa stos jns mov or lods or jb int3 or aaa jge or and arpl subl and pushf test repz mov xor mov js aad lods inc (bad) cmc gs inc adc jecxz inc xor mov adc push jmp dec lret imul lock push jp inc sub ret lods in jge aam mov mov and mov imul (bad) icebp inc jmp lods add sub inc hlt insb mov (bad) cmp popf adcb lods push push jae (bad) jle arpl adc cmpsb cltd scas fnsave ja xchg xchg mov mov loope loop jno je cld daa adc sub nop mul push (bad) and imul push pop cmp movsb rol pop fbld jecxz loope cmp jmp pop pop xchg dec and sti mov mov jns push cmp dec mov sub outsb loope lock ds rorb mov mov aaa lods dec (bad) adc mov mov lret fwait jmp or mov sub jns push lret insb arpl mov ret loope dec add lea scas xor addr16 aaa jns test mov in lahf pop fisttpll loope xchg cltd loopne out movsl mov ja es lock add popf sbb add addl outsb popf pop push pop and ljmp cmp movsb pop adc repz rcl mov ret jecxz mov lods icebp aas or out ret xorb idiv imul cmp mov rol jge and (bad) jae inc aas movsb xchg sbb clc and xchg ds mul or sbb jo insb out aas mov and fisubr flds inc pop dec sbb std lea lea lret dec add sti aam setno and jmp sub jg xor (bad) adc adc or adc xchg data16 xchg decb xchg add mov jecxz mov (bad) rcrb and sbb mov fldl loop inc ret inc mov lret sbbl arpl and in ret insl test jbe xchg stc dec and push lds sub inc stc pop in and jl push dec adc and jbe ret and out loope rcr cltd out sahf add xchg bound sub push xor xchg out xor shl dec inc jl,pt adc pop inc xchg push lods out out cld fwait lock cmp in pop js jno or (bad) jo jae out push cmp mov or daa jle clc cmpsl ljmp sti fisubr push std dec mov push enter pop daa and test (bad) pop test sbb nop sbb div sub dec adc mov sbb mov fwait je cmp test sub sub mov movsb aam pushf dec and lods pop outsb cmp stc pop jne xchg sahf loop mov xor scas push and ret push mov pushf pop roll les cmpsl or out dec xor int3 mov mov jo and sti push mov push test xchg mov mov mov mov fistpl or arpl dec mov cmp std mov inc mov rcll dec mov add push add cmp add pop and nop mov cmc and rcrb (bad) repnz mov mov lcall push mov and xchg repz adc mov push jbe lods lcall stos push cmc je out and jno push js adc sub pop mov repz sub in nop loopne das lds xchg add mov (bad) sbb fistl pop adc mov stos sub xchg loop xchg or outsb and mov dec cmpsl xchg enter clc movsb adc push loope dec ret push ret mov sbb je pushf out addr16 mov aas fdiv movsb cmp mov xchg fcmovb inc push mov fs mov mov jp pop pop inc jne inc out lods enter rorb pushf nop daa pop fs (bad) stos fs mov cs cmp inc xchg adc and jbe mov add mov ja jo adc adc mov sbb je orl jecxz test dec fdivp dec pop push cmp adc shrl aas sbb insl icebp sub cmovle rcrb pop fidivl insl pop in aas enter xor sbb jns dec aam dec sbb lds dec lock push or mov std add jl cltd jmp mov pop and jno mov push test call xchg jno jno sub sub scas or sbb cmpsb mov aaa icebp xchg (bad) ljmp arpl xchg subl fstps mov mov pushf add imul push les cmp data16 icebp shlb call inc mov iret push movsl je pop dec cmp int3 pop xchg inc inc inc jnp push int mov rorb popa lahf arpl pop mov jl jns or push call push stc rcll or addr16 cmp sub cmp and add sbb jmp xor ret mov push pop out stos jge dec stos jp push jl mov mov mov gs adc sti mov pop ja (bad) mov lea sub push cmp mov inc pushf jp push and lcall fdivs fisttpl outsb stc cmpsl fstpl enter inc push push insl jp (bad) ficoml and or (bad) push mov insl repz arpl ds outsb jb mov jne mov push mov loopne cs loop outsb cmp dec (bad) loop jnp mov cmc test mov add jne and (bad) adc cwtl lds gs ret or and adc insl pusha sti or and xor sbbl out stos mov je data16 aam pop notl orl jp scas push addl push leave pop test adc mov xor pushf ss mov outsb jg leave loop push insb cmp pop cmpb fsubrp addr16 adc (bad) xor fldl aad das add or and mov movsb idivw lock push cwtl inc rcrl scas outsl add outsl stos imul movsb cmp cld in jns or ljmp add cmc in add aam pushf pushw loope cmp inc cmp cli fmuls aam test add mov mov in xchg cmp inc movsb repz pop jge adcl lcall adc sti ja (bad) in es and cs repz mov pop inc jo or outsl pop or or xchg cli or cmp adc inc in aad outsl xchg mov outsl loope aaa jmp in sahf les mov push cmp insl aas aas sub sahf cmpsb loop sbb sbb or popa xchg into in jns stos jmp push lcall jl cmpsl sub push out dec pop outsl inc mov cmp adc dec outsl push or add aaa enter mov xchg mov sub fsubrs xor or bnd dec xor ret int3 and mov add jge fwait adc ret and and xchg pop push jo (bad) ret (bad) into je sbb addr16 lods call test repnz and and loope push jecxz pop dec mov les pop mov push mov popa xchg out inc push lret repz pop imulb (bad) stos and cwtl lret inc xor mov sub ljmp mov mov cs push or mov das aas mov push jle (bad) push or adc aas aaa in push test out pushf leave pop or lods enter inc cmp cltd icebp push adc xchg (bad) out data16 sti or mov iret jnp xchg cli iret out inc scas dec mov xor in mov sbb inc jo sarb cmp leavew pop rorb mov ja jo mov dec xchg pop dec pop repz fwait dec or repz js add mov jns inc test leave jmp push or rcr sub jb and inc addl jbe cmpsb jo dec mov std fcomps fildl (bad) std jle fcoms sub sub sbbl and dec dec jge dec xlat adc shrl cs cmp adc call test mov daa push push mov xchg imul into add pop or iret cli mov ja aas dec test mov push and lds dec rcll addr16 mov push in lds fcmove loope ljmp sbb dec mov inc xchg pop nop lahf xchg push aad pop lahf out and in and addb inc das push mov inc hlt aaa xchg out push jmp int3 fcoms sbb cmp jbe and mov ja out pop orl push iret cli ret inc add pusha xor mov fmuls dec loope inc fsubl addr16 outsb push leave pop repnz in fcmovu dec leave popa push mov xor or sbb scas inc jg scas imul push in adc mov mov pop inc sub or xor test mov cmpsl cmp outsl cmp xchg (bad) jp shrb or jno xchg lahf push cmp mov in fcomip call adc movsl ficomp jecxz xor out mov stc or push lahf pop push nop inc adc ljmp and divl (bad) lret call push xchg rcl pop mov ds gs popf xchg jg or jns into dec shrl xlat adc lcall lcall or adc stos dec xchg jns les push xchg dec rorl mov sbb in aam sahf movsl push inc xchg scas arpl dec negb jmp sbb lods into mov or and scas add aam in roll fldln2 lret mov sbb cmp jl add mov popf mov lds mov out xor ret popa inc aaa push jle jge pop imull mov idivb data16 rclb js mov lea cltd sub mov (bad) scas mov mov shlb xor imul test xchg ja push aad testb ret rclb jecxz shll mov push arpl das aad mov mov pop mov jb dec mov movsb push idivl jg je lea sub mov mov mov or add xor rol and jae aad xchg ja in jl or cmc push out add adc leave sub pushf inc imul les fistp bound mov or mov aad and inc jo xchg mov (bad) outsl add lahf loop fucomip cmpsl dec gs fbstp out xchg aam mov mov ds mov ffreep cwtl jnp stos fcomps repz test mov fwait pop (bad) pusha loop popa mov fadds pop pop (bad) push leave imul jmp out test gs xor pop enter pop mov shll in adc daa insl outsb aaa inc xchg pop jnp insb out xchg loope jge stc or push and or push xor js fiadd mov iret bndstx std jnp aas push sar je dec enter mov jmp and mov push inc sbb dec inc outsl ljmp enter sbb dec xchg int cmc mov mov xlat push popa jge mov addr16 ja ja stos inc divb adc add dec pop movsl lods imul jno mov inc lcall into jge add lds sbb insl adc inc sahf mov cld pop not daa xchg jae movsl jbe ljmp sub test push sub lea lret dec mov enter (bad) pop mov pop sbb push adc jns sarl loop das stos jmp adc inc inc or mov out jecxz mov adc pop cmpsb sub sbb out adc (bad) push add xchg shl cld xor push je leave mov pop xchg mov lods sti push inc xchg out ror daa add sar clc mov dec nop mov outsl dec jmp mov pushf sbb jmp movsl sub icebp data16 jne lods adc je outsl adc daa sarl xchg xchg push mov adc inc cmp or inc push adc faddl cwtl or add sarl adc add sub jecxz mov mov ljmp test je inc movsl push fs pop adc push insb sbb daa and (bad) mov jecxz lret movsl jb pop dec xor mov cltd xor stos int3 test arpl xchg out or xor lret loopne jmp jp and mov jl mov sarl xchg sub cmpsb int add push test je test iret cwtl adc divl xchg lret mov jp imul inc scas inc cmc (bad) and or adc imull dec popf and lods cmp in add fisubrl jecxz xor cmp aad dec test fistpll pushf jbe out mov xchg jnp push xlat jne sbb mov and cltd test add in test mov xchg fistpll stos mov and xor mov pusha pop pop (bad) xor aam jns add sbb dec cltd inc lahf add out je punpckhwd push fldl jle nop pushf pop pusha cmpsl fldenv dec (bad) call xchg push lcall push scas xor cmp test lret clc mov pop mov and cmpsl outsl aas lcall jp and sahf in mov cmp dec adc (bad) cmpsl and dec dec neg test cli js sub loopne (bad) xchg mov adc sbb xchg xchg or mov (bad) addl push (bad) scas adc movsl dec push cld call mov int stc ret adc neg pop mov cmp xrelease std add inc ljmp pushf enter pushf mov inc bound mov out adc push jne xor sbb mov (bad) xor cwtl ds out jl or lcall sarb ljmp (bad) repnz add data16 push or imul rcrl enter xor xchg dec in mov sbb imul inc sbb outsl cmc lea fsubrl jns push and mov dec incl lret test icebp push cld enter test imull fs aad jmp int3 xchg cltd inc aas jmp cmp push mov jae (bad) in mov mov cwtl and dec dec sbb push rorb jecxz les std add sub add adc lret xchg cld scas inc lods test jecxz sub pop inc aas add (bad) mov push push scas lret sbb dec ret mov cmp jo out movl and and cmpsl add (bad) jnp xchg xor call push xor bound jne sub or sbb sbb sub fdivrp dec insb cld cmp pop adc adc push dec sets sbb adc into sub or pop mov lret test les lcall cmp cmp jnp mov cli sub inc stc inc int jae cmp jge insb outsb stc (bad) xor dec xor push push sbb push xchg bound (bad) out stos scas pop push test pushf mov jo rcrb test dec xor clc xchg mov je pop fmuls jmp cmc and and repnz in dec sbb cmpb mov je sbb and pop mov mov xor std cld fdivrs xchg push xchg push adc test sbb sbb jnp push sbb push cmp arpl ficomp inc dec ja xchg popf xchg jne add sub fincstp pop (bad) icebp lret sub xchg sahf push ss out xchg adc adc cmc cmc lret loop sub rcl int3 or cmp inc cmpsb sub imul inc loopne into sub mov leave mov push (bad) sub pop and jb adc sub fnstenv sbb mov inc pushf cmp int mov adc mov jne mov repz dec outsl and (bad) popa out mov pop in pop xor mov xor sbb adc rclb dec (bad) stos das adc ret or sub sub (bad) (bad) mov xchg xchg jnp fimul xor ret pop cmp cmp sub fsubp and adc dec popf fwait mov fcmovnb daa adc popa lock scas das push repnz add mov or jmp iret insb ljmp mov int daa or mov call mov sub and test out fs cmp push ss rolb inc jnp test inc loop cli cwtl or icebp xor or sahf jge jnp or or iret add shl fisubrl dec cs mov aaa cmp (bad) mov pop jp pop sub cwtl dec arpl sub adcl sub adc daa lods imul jns ret mov lea call pop scas add jns mov jecxz jmp popa icebp cld dec jl dec fistpl push loop dec pop or xchg jl cmp xchg icebp test mov ret or test sahf pop mov sub jbe mov xchg fwait rol push roll nop and mov bound ds push or std and fwait inc loope fstpt xor imul (bad) int3 adc jmp xchg in ret mov xchg out adc daa je ret test movsb jmp hlt inc sub jp popf in icebp lret int sub jae xor dec pusha mov mov data16 mov stc mov jge cmpsl jns clc icebp push dec xchg adc out mov stc cmc repz into adc sahf out sbb jae (bad) fdivrs dec fisttpl push inc and add test movsb sbb gs add cmp in lock shrl sub push push test pop pop enter shrb jmp test xor in test in xchg outsl sbb pushf push or es out adc fbld sub test jge aam pop xchg jbe loopne imul inc jle enter imul sbb nop das inc jge jmp sbb lahf mov mov cltd mov insl mov sub inc pop mov dec add mov negl fnsave jl cmp cwtl (bad) push pop pop mov adc popa jmp (bad) pop loop (bad) sbb outsl leave scas (bad) pushf xchg ret add cld sub dec mov imul cmpsl xchg pushf sub xchg add mov jbe (bad) int or mov (bad) dec stos pop (bad) push lods and ds test test les lds sbb cmp inc sbb mov mov scas jecxz fstps xchg mov push (bad) idivb mov loope jb fdivr xor xchg xlat mov in in jno sahf push or cli stc mov jp das stc mov jg pop inc fstpt inc sbb in popf mov mov sbb das or mov ret hlt inc inc icebp (bad) lea xorl mov cmp fstpt sbb prefetch in xor mov and xchg insl pop sbb mov sub ret push test pop rorl push push lahf xchg insb in jg cmpsb call jnp scas inc lods aad int3 pop fiaddl fldenv mov call test in (bad) mov int3 cmp or int3 ret call jns xor xchg push ss pop aam sub ror orl rol add adc xor sbb jmp xchg shrl out test nop xchg xchg stc jno mov mov and data16 lahf sbb dec jp and cli or inc fsubp cltd dec stc test hlt ss nop (bad) pop dec push or (bad) mov cmp std aaa icebp cli lods or xor aaa mov pop test pusha cmp jl rep sbb cli xor push cld pushf add xchg push into push inc das dec mov pop iret adc cmp ret lods nop push dec (bad) jmp test ficomp int3 mov sbb or sti int3 adc ljmp mov xor fs lret inc je xorb pop outsb push mov push inc lret mov iret mov push sbb iret pop jp inc jne pop ds pop jns push push scas jg push sarl mov add xor imul xchg addr16 xor faddl adc in lret mov jge sub sub pop mov in std (bad) push hlt arpl rorl dec lods pop mov push mov and push xchg loop mov cwtl jecxz jl push popf jns gs leave lds jns add daa push in popf jns jnp addr16 dec je decl notb mov sub loope push pop rcl fcomps stos xchg inc dec dec and (bad) dec cmpsb clc xchg pop call inc lcall lcall mov pop (bad) loopne daa or and or (bad) xchg xchg dec jge hlt lods add xor mov movsb xchg int into sbb fldl in test and dec inc cmp or ffree fistpl sub jae leave or popa push insb adcl mov icebp mov in xor rcr (bad) cmp es xchg mov cmc mov imul xchg sbbl decb xor int in jbe sahf jno aad faddp leave shll add sbb sbb dec xor loop mov mov push inc cld aaa idiv fcmovne mov pop movsb fst imul sub inc lds cmpsb fwait mov adc aad xchg and aaa inc fs in lock mov popf cmpsb into inc inc jbe pushf or inc cmp cmc fldcw and xor mov xlat jnp dec outsl sub adc fisttpl sarb dec pusha lahf add rorb roll es inc cmpsb popa ja push or dec sbb leave push cmp mov xor or jns and shlb mov (bad) fadd adc cmp cmp jle loop in lcall mov inc (bad) push (bad) xchg stos jecxz inc mov sbb sbb aaa mov addr16 push mov inc adc sarl ficoml sbb outsb aas jne (bad) xchg into pop icebp fistpll pop andb mov push clc (bad) jmp cmp (bad) jo sub stos push mov dec adc andb jo add cltd jmp hlt dec in push cmpb cld mov imul pop hlt scas jle or push hlt push stc sarl add jmp xchg adc (bad) xchg mov xor ljmp adc lods imul movb xor popl repnz mov (bad) push aas mov pop push jmp aad gs sbb mov cmp int3 nop lds push fucomip out fnsave pushf cmpsl xchg lret mov jns adc mov out mov lods test add clc repnz xchg pop fwait pop mov xor lahf xchg insb xor fldt sarl (bad) jbe loope (bad) xor add jmp in addl jo push addb dec into sub mov fiaddl ret roll dec and sbb inc jns incb mov sub outsb inc call dec movsl xor lcall insb lret jle jp stos lds in out push mov mov out sbb mov (bad) cli insb hlt jmp cmp dec fcmovnb dec push xchg add xchg pop movsl loopne repz test in adc lea test scas xor iret inc mov adc push test stc and loopne sub xor fnstenv cli in fistl mov nop push mov adc cld out stos dec (bad) jb jp test xchg test out mov fsts xchg rcll cs test aam pop xchg es mov xchg mov inc lahf addl scas hlt les in push mov jnp sub fwait jg add inc add xchg pop out lods rcr adcl add dec or mov arpl or test (bad) fnsave xor (bad) mull lahf or fwait and push (bad) popa fs pop mov les sub mov lock ds push call les insl scas mov dec int cld nop mov pop dec stos (bad) xor jb lods dec dec aas lcall div and pop loopne mov pop and mov lods cli mov dec repz (bad) xor add pusha sub jne lock cmp in jno xor pushf adc lret and adc repnz push sbb mov mov mov pop xchg xchg cmc je inc and pop xchg adc mov push enter outsb xlat cmp ds pop add inc test (bad) repz jge push mov pop xor sbb lret test mov decb mov mov pop (bad) xchg daa cwtl leave jne mov insb or jmp mov add out hlt mov push and mov jbe sub les dec mov lods sbb pop mov fsubs mov lret jbe or push std out mov inc dec repnz aaa gs bound loop fidiv cli inc in ret pop dec inc and cmp push or popf xor test mov scas popf movsb mov xor or mov (bad) jmp mov inc pop daa push mov jnp das dec cltd xchg xor sub mov mov test std lret pop push je mov (bad) cld mov pop popa sub jae sub aam dec insl roll enter sbb add lcall push (bad) scas stos fisub icebp xlat mulb daa lret or jmp jmp or stos or pop push or cld inc addb mov (bad) xor push js movsb mov insb test cli mov or insb mov jg pop jnp,pn pop push inc mov fisubl jge cmp xchg and es in mov dec mov cs lret pop inc sub sbb scas pop sti xor adc mov sbb and cli ret push xor dec sub ret mov rolb aad and pop pushw (bad) mov dec xor jb xor cmpsb outsb sbb mov shlb (bad) fcomps (bad) frstor js test and pop mov jae loopne sahf jge hlt movb sbb imul pop imul insl enter xchg cmp mov pop repnz sub fist jge inc ret jne lcall pop popf mov popf leave bound int3 xchg jb xorl (bad) dec loope rcl sbb cltd push pushf popa mov pop fstpl xchg jecxz int jmp mov rcll mov stos lahf fsubl scas ss loopne jb (bad) mov xchg icebp pop in or inc dec adc outsl pusha jecxz push dec pop cmp movsb test mov adc (bad) jl pop xor sbb xor bound ljmp jge shrl imul gs fildll fmuls call jle fcomp cli cs sar sub xchg movsl lock ret pop adc xor popa repz lock add popf xchg lret cltd jbe pop call ja mov call adc bound pop mov inc xor nop pop dec pop jmp mov adc and sbb mul aas enter mov mov cmp push dec add fidivrl sbb pop or xor jecxz mov ret ljmp sbb sti ja insl push rcr cmp cmc push inc sbb fidivrl (bad) movsb push leave sbb cmp push adc push or sbb jp inc ret inc sbb or inc pinsrw ffree ficoml or pop aaa (bad) sysret shl ret pop movsb inc jnp adc fist push mov fnsave or sub dec (bad) dec js fwait sti pop (bad) or inc test ljmp insl adc mov and ret cmp push lret aas das daa sub shrl adc por xor iret xor fdiv or popa sub je ret mov xchg fisub imul jecxz jecxz fs and mov jne jnp sub jae fist push aam pusha lahf aad adc mov pop mov jp inc jle push mov jb inc scas (bad) ja fldcw sbb stos rol gs sbb lret adc add loopne ljmp add mov lahf andb out in jg fcomi pop push cmc out inc movl mov pop mov mull inc leave fyl2x lods mov xchg jle loopne addr16 sub push jb push sub repnz bsf and mov ret ss sbb cmp insl cli sbb and sbb movsl enter push push and mov js rcl (bad) in push lods mov (bad) or mov icebp rcll fiadd push jno mov into insb mov push pop andnps cld daa fcompl je out les and shlb xor ficompl inc ret inc in sti das nop (bad) inc scas jge or sbb mov lods adc mov xor gs out cmp andb inc xor (bad) cli mov add sti jne jbe (bad) (bad) xor mov cmp retw (bad) adc inc pop sub or shrb mov mov cmp cmpsb xchg ret adcb or loopne pop push sahf mov dec ss xchg aam pop data16 xchg ret ret or out popa in lods sarb mov orl cmp outsb mov loope sarb xchg ds mov mov xor jmp xchg shrl pop cmp mov fs je das (bad) nop sbb cltd jl imul sub add int out fmull jns xchg cmpsb or xor loopne cmp fstl lods xchg cmp mov xor mov in xchg shlb scas pop pop lods outsb and movsb or dec xlat shlb or pop xchg lret push imul sbb pop outsb adc xchg out (bad) cmp mov inc push dec mov mov data16 pop mov aam dec lods fmuls pushf jmp xchg popa xor (bad) repnz sbb adc outsb adc cltd out (bad) mov pop lods fidivr and jo add lcall out rclb repz sub xchg jno,pn imul adc es xchg cmpsl stos sub leave inc flds mov push (bad) (bad) cmp adc imul push out cmp push (bad) xchg sbb cmpsl and add mov jl sarl push inc cltd ss xor out out pop (bad) dec lds aam adc push hlt outsl (bad) rcll jae (bad) mov jnp jmp popw mov in cmp pop loop test ja bound repnz hlt sahf sub sub sbb and and (bad) cmp pop mov cmp sub xor cmc jo dec dec inc sbb movsl or lods add popa push cmpsl aad sub out mov (bad) lret dec pop lock xlat mov mov addr16 jns outsb dec and rolb dec scas shll mov fidiv add shll scas rol sub dec mov int3 mov fdivrl xchg add xor addl jecxz insl aas pushf ret push xor sti dec (bad) je test int stc inc and lcall mov pop mov pop sbb add xor mov addr16 jns lcall add outsb mov xchg mov dec xchg dec jbe fwait jb ja sbb xchg pop sub push ret mov lea mov cmp out inc jo arpl dec rol scas mov negb lds aas test inc loopne jg jb (bad) in dec jmp and fwait sti gs adc repz mov adc pop xor sub pop adc xchg fldl mov loopne cltd xchg push adc int3 popf mov xorb xchg adc push int and lods scas sbb lods pop push mov jg enter ja jb xor out daa inc (bad) pushl lret mov inc sub std sahf add mov mov inc testb (bad) mov xlat dec (bad) lea adc cwtl je cmp cltd cmp ss js fisubl adc mov mov inc mov fsts pop cwtl test inc mov xor push fnstenv mov movsb outsb push les movsl movsb cmp xchg insl enter jns jecxz sub pop enter cmp in fisub imul sub xchg movd inc stos test mov repnz dec fstpt add test sbb arpl and cltd and dec rcr lock gs adc scas hlt mov scas jp cmp inc pop xor lods (bad) xor jmp lret jne xor dec dec imul push mov push inc mov popa mov and movsb pop push cld mov cs sub repz sbb add out mov stos mov je fidivl iret test lea fsts jno movsl mov and int3 (bad) adc (bad) xor loop fst clc test xchg fmul and mulb pop int3 dec lea sub inc xor aam test and hlt and pop push (bad) cwtl outsb xchg or cld je out pop lods ret jno xchg aad (bad) push adc xor insl mov mov aad xchg inc push test mov lods je mov sahf pop movl jno push fdivrl and pushl imul jne ja pop pop jb inc sar jmp pusha jns dec mov mov ja mov push pop not sbb push sub scas sub adc xchg std inc inc mov out andl xor out pop sub es jl out sub insl push scas imul les add arpl dec dec nop call test stc sbb jmp mov rcrl sbb fcompl or jl in mov jae out aaa les sub mov add out jns mov dec test mov nop cmp mov mov or or mov pop notl mov xchg enter cmp popa or sbb jno ss aam es stc sbb (bad) sbb push out push pop pop mov (bad) outsb pusha fisttpl mov lcall mov ret jae ds push xchg mov dec pop inc add lret mov (bad) fildl shrb fsts cmp test and sub and jle dec in (bad) adc adc push mov jo lods mov xchg ljmp cmp loopne xlat dec insl dec xchg inc (bad) mov pop stc out add pop add jle lods shll call decl loopne mov dec daa push aad xchg cmp mov dec addb and bound test push push add dec rorl add sub inc outsl adcb dec (bad) mov and es das js scas stos iret xchg push shrb out jmp mov lds jle pusha cmp ret pop js dec ljmp cld mov sbb ljmp in inc mov sub or mov ret daa in add or add stc sbb lret pop idivb out inc in mov dec jbe inc lods aad mov out mov jae (bad) cs dec push (bad) inc pop (bad) mov ss dec lods xor lcall jns push fmull xchg sub aas mov pushf mov adc sahf cmc cmpsl das push xchg mov sbb pop (bad) int3 in ja cltd fmul int3 fistl fnstsw xchg sbb test dec jecxz cmp dec pusha dec cmp mov pop (bad) push icebp ja and (bad) jb cwtl clc std mov sarb mov sahf sub pop incl stos insl lahf inc es jnp xchg insb push sbb sub stos outsl das cmp or movsl ds cmp jmp add das popf popf push jg in mov or sub or jne push cmp xchg inc push adc bound jns scas mov sti mov stos pop sbb xchg pop fdivp sub repnz insl sub test lretw ds pusha (bad) out mov ja mov inc add rcrl cmp mov add fimul mov out mov addr16 jb repnz cmp inc mov cld outsl jge out pop adc stos loopne fdivrs mov mov out scas adc push loop int3 sub cmp xor daa adc call (bad) jle mov or aas or and push out inc xchg push adc and jbe repz adc std dec (bad) xchg dec popa pop fidivl jnp imulb pop mov or add fildl ficompl (bad) jbe cmc ret gs ljmp inc (bad) adc mov (bad) xchg jae sbb fistp xlat (bad) xchg sub inc dec mov inc or push imul xchg shrl pop sbb arpl sub hlt xchg scas ja bound adc sti cs icebp test fs jo movsb xchg cmc jmp mov jmp loope sbb mov jne out test int (bad) mov gs out sub sbb popa inc notb sar adc mov imul cmp dec xor sbb or fisttpll sub popl (bad) idivl xor nop jne (bad) xor test hlt fidivl mov aam lcall add out lret cmp inc add inc pushf movl jmp pop ljmp adc ss stc xor or stc into inc pop gs mov dec sbbl inc out or mov arpl scas hlt mov mov pop adc int3 xchg jl mov push repnz adc push insl dec dec stos mov test xor jno fwait xor rorl pop push mov and gs movsl and ds sahf sbb int adc mov test or inc out cmp mov insl mov jg fprem1 cltd test cmp push nop dec dec (bad) stc cli pop jns adc inc xchg adc xchg pop sbb mov cmpsl xchg imul pop and cmpsb jecxz orl lret xor inc adc popa test call dec sub add mov leave xchg push xor sub iret lcall sbb xchg or fcmovnu cltd loop pop ret rcl (bad) lea adc flds adc cmc je inc inc jl data16 mov stos std adc fsubl loop jmp insl (bad) jl sbb add lea push push fist stos cld in add mov test iret mov add and sbb cltd cwtl lahf psadbw les inc repz idivl (bad) xchg leave mov imul add rorl jg call (bad) loopne rcrb insb and test xor or js leave loope fwait dec (bad) dec sbb test lds mov out out xor loopne std inc leave dec addr16 adc clc in mov ret push jnp add and movsl repnz sti andb sarb xchg sub pusha lcall inc jb xchg push inc jae and aad push loop cwtl add fwait lret test popf mov rcll fisttp sub loope add int3 iret lds vpsrlq shll cmc lret jae or test pop or out out cmc repnz sbb dec push pop cld out mov mov jmp loopne cmp or gs cmp sbb mov mov mov imul fldcw cmp int3 (bad) int3 (bad) jmp inc lahf call add lret data16 lcall mov out push mov mov sub lcall xor jno mov cmp jns pop jecxz inc inc fwait rorl mov jo ljmp (bad) xchg add into cmc rcrl out js mov loop cmp sbb jae rclb (bad) loopne cmp int3 das bound ror ret mov enter pmullw fadd pusha (bad) in or dec imul aas dec std stc mov icebp jle pop data16 cmpsb or cwtl (bad) aaa and push outsl xchg pop test ja stos leave loopne pop rcrl movb and mov in call jl sbb movsb xor xchg sbb mov lods clc xchg lret push mov stc jne int3 inc ss mov mov pop cmp ljmp subl notl inc out push into popf lods pop dec push je add mov sarb in loopne std jmp fsubrs mov xor xchg sar push imul xchg ss bound xchg and bound jno jne pop test aam jg cmp or adc add or mov mov js mov lahf loopne inc add push add xchg push rcrb sarb movsl (bad) mov pop rol jne dec adc (bad) mov jecxz dec sarb jecxz mov adc repz inc sub pop ja inc mov or push lods and push pushf sbb cld cmp push push (bad) or mov arpl test adc cli dec push adc and adcl insl push aad ja sub iret (bad) mov xchg out clc dec sbb js es push dec test iret int3 imul movsl (bad) add js cmp ja adc shrl pop ljmp fist sbb loop in xchg lahf popf flds xor ret insl repnz loopne cmp push xor leave outsb mov xchg jo xor or jp sub mov xor aad (bad) out and scas (bad) lods cltd test cmp movsl sbb cmp stc pop ss jmp (bad) jne jno nop out scas dec aad icebp nop ds ret loopne mov mov cmc ja dec test (bad) xor jmp lret repnz and xor aas xor icebp int adc les outsb cmc mov out aas aad rorl (bad) xor sahf aaa mov je add mov (bad) and scas (bad) pop mov stos repz xchg xchg (bad) xor test test sbb mov ret add cli or (bad) das pop mov sub cltd fmuls sbb (bad) (bad) mov ror jne cltd inc neg orb pop xchg pop xchg inc shlb dec mov mov test adc fidiv cmpsl leave xchg pop jno (bad) (bad) into add mov mov push xchg jnp jo arpl xor cmpsb ret lods inc mov je and mov ret sbb ljmp imul roll fdivl outsl jge popf mov cmpsb in jno push cli aas (bad) mov or mov add mov inc jno mov lahf gs movsb and mov out pop outsl loopne mov fstl in adc rclb aad ljmp sub or iret je insl cli inc out mov insb dec cmpl and rorl (bad) pop test cmp xchg mov fnstcw inc xor (bad) (bad) ss mov scas in or fidiv mov test aas pop cmpsl popf hlt mov aas imul lock adc nop les pushf fiaddl xchg fdivl cmp push pop sub popf inc xchg outsl push imull mov in mov inc sbb mov jae xor jp xchg xor repz mov jmp fildll (bad) pop push lds stos jmp fidivr add es arpl mov jecxz jno mov hlt push or jno test sahf das lahf mov sub push sbb pop push jb js outsb inc cmp vmovsd jbe xchg pop jp push sbbl mov mov jne std fldl pop fistpll sbb mov push inc push gs xchg jmp test (bad) jmp mov lret arpl sub dec test xchg jo mov nop imul insl jp,pn dec push fwait arpl faddl sarb sbb jbe pushf ret mov je jbe,pn jg pop or push popf push movsb mov jno and leave in cwtl cli xchg dec iret xor push jbe fsts cmp sbb mov repz or xlat dec xchg subl sbb rol xchg outsb adc out cmp fstpl mov das gs and fisubr clc xchg mov dec and lcall push fld1 sbb mov ss jge cmp inc jo dec mov jnp xchg mov inc xchg add jmp mov xchg lds sub arpl adc adc test xor jg sub adc sub lods in je and test stos mov push lret rorl test xchg int daa fdivrs or cmc into rcl lods jl sbb mov xor lock jmp ja imul inc mov add lret xor mov mov daa ja outsb pushw incb push out jp nop push push aad daa and jnp arpl (bad) shll sbb aad les xchg sahf je and mov or popa mov mov adc mov mov insl sbb xor (bad) (bad) mov pop stos in cmp xlat movsb xor xchg inc scas loope sub pushl fldt cld mov fwait xchg inc pop jns incb mov add inc jl inc insb fwait sbb mov cmpsl mov mov out pop and add cmpsl xchg hlt mov daa imul (bad) and (bad) mov fst lahf mov test data16 push nop mov leave mov test out je out adc pop adc adc add pusha lcall cltd loope push mov jae or cmp insl mov xor dec pop loop inc pop xchg pop negl xor (bad) mov call mov lods pop out push mov mov xlat mov cmpsl aam aaa cmpsl push push dec inc into (bad) js sbb outsl fimull cmp negl out mov sub jmp jns ret mov add push test xor (bad) dec sbb push push fdivrs adcl nop cmp jge call cmp clc loopne sahf in cmp out movsb aas and daa (bad) flds xchg test sahf xor lcall lock jl mov jo sbb fcmovnbe inc or sub lret movsl xchg cs ja jnp lods clc and es test jo lcall sbb mov mov jb std xor jae mov sbb push dec mov mov mov test or xor decl or int xchg aas test fmul outsb add aas cmp and daa std jb cmp vpunpckhbw hlt fmuls add lods xchg movsl jl or sti scas add cmpsl and test cmp adc (bad) cld pusha mov pushf rol repnz dec sbb cs loopne cmpsb dec incb call mov xchg mul push ret in jb icebp xor or sbb cltd es stc mov or dec test idivb fwait and add (bad) or dec pusha cmp cmp or xor inc inc stos cltd sahf loope sbb mov add and cwtl loope stos pop movsb cmpl mov and pop out (bad) mov pop inc lods inc jbe nop and iret rcrb dec xchg fs mov pop lods jle loop mov mov (bad) movsb pop jne (bad) loopne pop sbb mov xor data16 nop or dec sbb mov scas (bad) int3 loop cmp (bad) lea mov fcmove rclb in je jl in jg adc pushf cmpsl jnp ljmp jne pushf (bad) cmp adc notl (bad) repz mov test daa int3 cmp mov mov push outsb cwtl adc cmp mov mov xchg mov lea push jmp out and and fmuls es into or lret add mov jb xchg lock dec and (bad) lock arpl jbe adc mov das stos jb push cmp add mov insl arpl lret adc mov and shlb incl mov push (bad) sar mov adc jle or cmpsl mov roll pusha (bad) rolb sub (bad) das jb inc das push dec pop frstor les and les jmp push push inc xor icebp xchg gs cmc outsl push cs test gs repnz (bad) sarb shll push mov in xor pusha das push jb jge add pop daa pushf pop out rcrb jb pop daa mov fistl cmp (bad) jo fs enter sbb (bad) jns das push adc (bad) xor sbb cld mov mov cmpsb push jns int cmp call sbb (bad) movsb dec lcall dec lock int sti out xor lods lahf mov jecxz inc repz adc rcl out mov js sbb clc xchg xchg xchg repz jb mov movsl mov loop push nop sub ret std jno xchg push pop dec inc cmp scas push jmp je loope sbb fnstcw in pop cmp jl add aam jmp dec inc mov out cmp jo adc mov fnstsw mov pop sub sub mov cltd fucomp nop mov mov arpl cmc add push mov in ljmp xorb push imul movsl pusha sbb loope cmp or outsb lock adc test xor repnz sub mov mov mov stos out mov push stos fisttp ret loope mov push mov jecxz popa gs push in jmp dec popa loop stc sti add mov (bad) cmp lods leave imul mov sbb sbbb sbb and jmp mov mov inc int or cmp push iret jmp scas and sbb pushf push push pop adc cli bound loop xor shll (bad) out sbb es fmull jo jl leave push outsb lret insl jmp shl int3 in fwait mov and jnp not out std cli add push test sub ret or dec xor lock arpl into cmp fstps jmp push and push int3 pop ret (bad) pop xchg push (bad) int3 repz popl adc push mov insb stc xor mov leave out dec mov andl cld out movsl push ja mov xchg mov pop popf xchg pop loop add push push mov lcall loopne jg sbb sbb shrb xor jns mov imul adc pop xchg lods dec xor in push push shrl and loope outsl jns adc mov mov push scas inc fcompl adc je xor mov loope mov inc push in testb test scas in jns dec pop jbe cmpsb sbb inc mov (bad) xor push imulb nop les data16 rcll repz icebp mov jae inc es bound cmp rorl inc adc add sti (bad) dec lock in sbb adc addr16 cli into add sub aam ret add pop or sub stos (bad) je cli dec inc aam iret mov test ja mov sbb adc in aas insl inc test ds sbb adc push lock stos (bad) xor fldl cmpsl push orb call xor jno decb jne repnz je,pn mov aas add mov push pushf sub push rcr cmpsl jle popf xchg icebp (bad) cmp inc mov push into or add movsb rorl shrl cmp out xchg inc cmp mov xchg fwait bound fisttpl aaa int3 push sub lcall xorl add dec cmp imul in sbb in xchg mov or push out js jae sub jnp addr16 bound xor out or das xchg dec icebp and sbb js mov pop repz mov mov jl mov xchg je in pop mov mov sbb inc into adc inc inc dec test cli outsl les popf fld push popf cmp arpl or push aaa nop sub nop cmp (bad) jecxz adc lea (bad) add fs mov scas stos jns jecxz and cmp loop push movsl dec adc jg pop or in enter jg cmpsb dec jb cmp in inc push fldcw or rcrl adc or repz mov xlat fcomip xchg sahf mov mov inc pop scas sahf nop loope sbb inc loop xor mov test mov outsl xchg (bad) jb out add into push (bad) xor dec push push mov scas decl jno cmp mov scas insb ja in cmp pop jb cmpl xchg jmp xchg push xchg pop imul std xchg inc mov ljmp loopne jb cmp arpl das xor xchg push lods xor popa lahf lds pusha aad pop lds xchg rcrb push movsb cld into dec shlb sub fs neg mov scas jno rolb cmp outsb ss mov dec jbe int xchg fsubr add pop adc pop enter iret pop dec jo xor jmp sbb or mov xor (bad) push jl xchg js jo sbb stos inc dec mov mov lret xchg mov lahf mov pop lret lahf mov cmp fisttpll (bad) je enter loopne add push and cmp sub popa mov shrb push inc sar jne sbb dec cmp push aad push popa out fdivrl ja out and mov dec mov fadd sub mov dec or xchg mov rcr mul (bad) icebp inc push and mov and pusha sbb das xor ss inc xor js xchg or repnz (bad) inc clc pusha ja lea in cmpsb jl sbb repz pop pop call test rolb fidivrl adc cld lahf (bad) pop cmc lods out orb push loop xchg les scas loop out lea cmp cmp pop in push sub sbbl sub sbb adc mov cmc and pushf fnsave cmpsl ret cmp pop push jbe gs push hlt inc rorl push adc xchg imul push inc dec cmpsb jb mov xchg push inc sbb mov popf and add mov xchg decb bound mov cmp sbb pop or dec aaa jne adc mov sti mov repnz ja sub daa lea (bad) pop mov inc xchg std inc dec push mov xor arpl jle setge sarb sbb push mov jno aaa aad and mov cmpl inc lcall mov in inc push mov xchg out (bad) sub jl icebp push js jae aad int3 mov incb cmp adc xchg movsl jl data16 adc cwtl mov lds in jl push adc clc adc jp jbe jp test bound ficoml bound inc outsb and sub les out lock sbb push stos and xor and adc pminsw (bad) fnstsw mov lock sbb imul es push push es dec in mov xchg sbb sub dec int3 sbb add pop mov jecxz push ret mov sbb or mov and xor sbb pusha enter add idiv rol repz scas es or mov jnp add push sub cmp dec mov xchg inc lret lods dec fidiv movsl ficoml jl sbb jge mov or jnp add call sbb pop jns call sbb mov loopne add in cld push sbb jne rcrb add pop lahf arpl rcrl sti mov cmp ret dec dec mov loop add inc mov in test lds fwait xchg out push xor inc bound or sub inc push pop in or jle aam dec jecxz lahf cmpsb test xchg shr std push (bad) les push popa repz pop addr16 mov pop xor test (bad) adc add dec adc mov mov jb push pop dec loopne imul and leave and sbb pop dec cmc fadd or inc lahf push pop jno gs mov insl sbb and push push adc (bad) adc call cld arpl add xlat ret adc pusha jns mov repnz out test xor fldcw popa sub and (bad) lret std pushf mov aad and xor icebp popf fcomps mov xchg push xchg jno sbb clc in mov or nop dec test imul mov adc push mov fwait out pop lret mov mov aas adc pop xchg outsl out daa pop push pop mov lret out xor pop test cmp addr16 mov test pop lock mov std out mov gs bound out xlat jb mov aaa outsl fwait test jp add push sti ficom mov mov lods lahf cmpsb jb mov cmpsb lcall cli imul push insb cmp (bad) mulb and scas pop and (bad) xchg and les lods addr16 add out pop incl enter (bad) and inc lahf pop ja adc dec sbb xor into lods (bad) lods das dec jg (bad) pop jl xor pop pushf lods sub pop xor outsl (bad) mov out sub das adc xchg xchg cmp jge iret xchg cli push mov add rcrb aas pop in nop sub sahf pop pushf add cmp sarb or add sbb xchg jne in int add inc out sub pop xchg jge dec jp pop add (bad) out xchg aam jecxz cli out dec adc out push aad or push mov popf lods xchg push imul cld rolb dec push cli mov push mov shl sub adc daa fwait sbb cmpsl fidivr and cltd leave in (bad) mov lods inc push mov add dec mov loope jecxz lock mov aam out xchg std mov push cli push mov scas jmp inc dec scas imul in or mul pop jle out pop pusha outsb fisttpll jb int in xchg push cltd adc pop ret push jb cmp dec mov cmp (bad) sub push adc sub xchg jo (bad) hlt lods (bad) mov dec loop test or out add push mov mov fisubl sbb test xlat pshufw add cwtl or push in arpl push add mov fwait repnz icebp hlt jle movsb insb incb hlt decb xchg xcrypt-ctr cmpsl pop mov mov lock mov mov xchg cmp push adc mov cmp call movsl xchg in mov inc sahf sti dec pop je and scas mov sbb mov pop fisttpl add nop mov mov pop mov cwtl xor mov ret or insl icebp push gs mov cmp lret std dec imul and dec dec dec out mov push iret stos ret fisubr (bad) imul add leave mov mov mov push outsb or sti pop xchg adc mov cs (bad) inc fildll shrl inc xchg adc loop xchg push xor pop (bad) cmp push add mov std mov (bad) push (bad) push incl js hlt sbbl imul sbb jmp incb jle out enter sub and je or and pusha xchg mov pop xor into rolb adc cmpl adc adc inc inc pushf mov push test jo xlat aad dec jl and push (bad) stos sbb pop hlt stos outsl loopne adc (bad) shl pop xchg sbb xchg push jns cmp pop or xchg fstpt push push aaa sub mov js jns push ret iret xchg mov xchg jg orl cmpsb mov (bad) lea pop aas push mov out push mov xchg loopne push insb pop cmpsb add add inc push xchg pop mov fistl lods pop negl ret pop addr16 shlb mov in int3 ja mov in pop stos mov scas add push xor sbb sub rcll mov dec fbstp ret test scas mov fnstcw cmp push test mov and inc push popl or rolb mov add dec nop sub and jecxz sub sub cmpsl aad test or pop xchg mov adc inc dec aad cmp rcrb sub leave lret jb or cmp iret out mov addr16 in sbbl xchg in lret aaa or xor int fldenv int3 ds push dec pusha pop scas out pop xor dec arpl ss ret push pop push scas dec adc arpl ret mov cmc and dec es divl cmp mov loope xchg lcall cmp inc pop sbb hlt scas cmpsb and repnz movsb or (bad) lods test cmc jge,pt adc aam add and cmc popf je pop into jnp,pt shrb sub aam pop lds push push ds rclb dec xor scas add dec xchg fisubr pop out push repz and xchg add cmp fisubr push repnz or cld sub test inc mov lods dec jne scas stos getsec cmp roll mov mov mov aad cmp mov mov hlt push in sub push sbb adc cmp fs sub or (bad) sub subl test xor hlt aaa cmp xor stos sbb cmp notl push out jg push or mov sub stos imul jnp fisttp push cltd mov cmpsb je,pn inc mov mov adc fwait pop std cmp jmp lods pop pop cmc dec sub shrb add movsl mov stc adc inc cmp movsl call mov jnp pop inc lcall cmp mov xor xchg sarb stos add xchg imul sbb sub sbbl push les and daa and and dec push in fcmovb jecxz mov xor fstps pop cmp movsb sti or stc and outsl popf inc (bad) push sbb push sub xor xchg dec scas sbb pop in ljmp pop push lahf inc cs (bad) pop pop xor ljmp in insl mov jbe imul pop mov xor cmc xor fcoms mov cmp mov xchg movsl cli fildll inc mov mov je (bad) flds and pop dec shrl or pop cmp xor ja pop inc ja xchg imull lcall add jl (bad) lret cli jl mov fcomip (bad) or imul jb int3 jo aam roll cmp pusha sbb cld and movsl cmp xchg pop xchg adc cwtl dec fldt aaa push ss repz stos xchg pop lahf sbb test jle out into leave lret inc mov icebp push mov sbb xchg push adc inc pop pop cmpsl jns jge pushf pop ds setbe dec aam test jmp mov loope test adcl jg push popa pop out mov loopne (bad) popa jns inc xchg hlt imul inc mov in fxch das inc pushf pop mov sbb inc xor mov mov dec jnp xchg inc in je sub (bad) lret movsl jmp cmp out sarl lea fwait std cltd data16 adc lcall stos pop mov adc sbb mov xor test jo or lcall ss mov bound shlb pop ljmp pop fbstp cmp daa loop jae mov inc xchg popf xor cmp into mov jnp loopne les insb imul push cmp add loopne cmp jb hlt (bad) pushf push mov cmp mov lahf add aad xor bound outsb cmpsb pop cmc adc aam xor andl ja in dec repnz cltd jo scas mov cli push xor bound daa mov fwait sbb movsb adc push mov pop jecxz mov push pop cmp push aad pop fdivl std xchg dec xchg xchg lea ret (bad) (bad) push fcomps (bad) incl adc mov hlt nop into outsb mov ss push pushf lcall loopne jge test jmp out loope sub incb mov adc bound cmp dec fmull lea cmpsl sbb fcomps popf and inc sub stos sbb xchg sbb mov mov test bound loopne sub sbb xchg stos jbe adc stc (bad) pop out add pop and cmp daa jnp sahf and cmp cmp shrl add data16 je popa push mov cmp (bad) cmp pop xchg jno mov or repz xchg cld (bad) pop push stos mov cltd push xchg mov aam stc fsubl jb movsb mov addr16 in pop fucomp imul dec das push adc add movsb test push xor mull das inc out pushf pop fmull data16 int3 lods mov clc lock cli arpl or mov xchg xchg out and pop (bad) adc xchg lods or add push outsb shr sub cs mov inc mov aad jp xor (bad) pusha ljmp jl push inc test imul sub dec cmp and loop popa mov daa pop daa (bad) jmp sub adc ret mov adc shlb push fsubrs frstor mov pusha add js and fisubr aas dec dec jne and inc (bad) sbb push data16 std mov mov enter pop lcall pop clc jecxz bound jbe xlat xchg xor mov sbb data16 dec faddp insb shrb test lea dec fwait cmp lcall es clc sbb cltd xchg cmpsl loope mov adc pop or pop jno mov sbb jae dec nop in aaa cmc and loope out rcr cmp xchg push notl daa mov and outsl int3 lret shr adc cwtl bswap mov and enter cmc jno xor pop movl inc sbb int stc cmp in insb and cmpsb cmp scas pushf out jb dec gs rorl push adc out cmp scas popf cmpsl cmpsb jp cmp jl jb out fbld test push jo jge cmc mov fiaddl xlat mov xchg pop xor je outsl mov dec fwait sub pusha or out jno lods movsl fwait add pop adc lds dec sub xor sub or push xor cs push (bad) testl frstor aaa sarb loop (bad) mov hlt ja mov xor je jp fmull sub imul mov jg xchg adcl xchg data16 movsb mov jg (bad) cld mov adc inc or dec xchg xchg in xchg sbb stos fistpll hlt inc push or pop inc push inc fisttpl push in xor xchg inc and addr16 mov adc xchg cmpsb out dec pop sbb dec loopne stos aaa jmp cmp pusha push adc shl sub dec or fidivrl in je stos xor jle mov pushf mov out or pushf outsb pop subb je inc outsb in lods jp lods mov es sub push mov adc imul xchg mov and xor jae fsubrs xchg lea pop or aam inc mov clc arpl in ds xchg xchg mull je jb scas in mov dec out inc dec mov test ffreep (bad) (bad) jbe xchg sahf adc mov sbb (bad) out sbb stos mov push mov jae outsb mov imul fcoms dec pop std in mov xor fnsetpm(287 lret jp inc fnstsw neg mov not mov scas loopne xchg ss or ds jbe imul mov adc dec mov stc xchg add call push and lret sbb or jnp push pop mov sarl repz pop jae imul mov and int3 or outsb push push out aam fucom fucomip cld iret sbb pop inc pmulhw mov and fistpl scas les out loope in jne sub or and jno arpl sahf mov mov dec pushf scas orb sar and xor mov lods mov add jae adc sub mov leave imul data16 ja pushl push push ret push dec jmp mov aam (bad) insl cmpsb xchg add pushf out rolb dec outsb out pop xor imul and pop pop iret inc movb jns jecxz add jo sub inc (bad) (bad) sbb call (bad) and pushl dec xor dec fsub mov pushl mov fsubs push mov fisttp out cmp cmovno sbb scas jge test xlat mov jle mov stc imulb push cwtl sub jge sub shl ds and dec aam shll adcl jecxz xor add push mov stc fnop mov call out jecxz lret sbb call and ret jmp scas loope jnp lret mov or insb (bad) mov xorl sub mov mov or jo out mov dec adc jnp in mov push (bad) xor xchg loope xor lcall sbb push dec addr16 popa rorl add into das mov or push add sbb in mov jmp icebp sbb into (bad) iret xchg lret in je mov and repnz (bad) mull push adc bound repnz push pusha fcoms lods or xchg pop mov cld dec mov dec xchg shr out adc in icebp loope out lahf stc test les push push sub lds loope ret jle jp and mov cld jno mov in ljmp fisubl add dec jmp xor movsl jp pop cmpsl adc (bad) fnsave and sub cmp int dec repnz mov test rclb and ljmp and push inc push cld test and ffreep divl aas add push mov mov or sub inc dec dec arpl and and push popa mov loope,pn mov das mov jle out and mov push andb pop imul push fidivr mov xor add gs sbb sub mov push adc push sbb (bad) mov (bad) mov pop jge mov or or xchg xlat insb jbe,pn mull loopne add push sbb lahf std cmp ljmp scas std pop test pop push sub pusha mov negb movsl es mov ljmp pop loope ret mov push sbb je test ja sub sub mov scas mov sbb pop out add jo (bad) aad mov sbb dec (bad) out push stos and xor add cltd sub cwtl (bad) and dec jne pop jns,pn cld ss mov fdivs imul rcll mov pop (bad) js sub xchg imul xchg and mov jae or shrl jmp sub push lret inc cmpsb and sarb xlat jmp pop add mov dec or clc mov jge or mov int jae pop sub stos (bad) bound xor (bad) cmp mov jns ret sbb cmp push addr16 fdivrs cmp cmpsl mov stos out jg lock popf lret lahf aaa fildll or repnz movsl mov cmpsb xor repz xorb scas and push inc push int outsl adc sub inc imull lret (bad) xor out mov or adc andl jp inc push mov push sub push movsb push pop dec das cli inc arpl or idivb jnp sub pop incb dec adc lahf pop jae xchg sbb lahf pop sbb push inc or push sub int3 popa inc sbb repnz insb push inc cmp mov pop inc or fisttp dec mov jge je jmp or fsqrt mov das insb (bad) out sbb test pusha ljmp cltd push cmp cltd pop and rorb xor xor divb bound loope push xlat aas iret mov jmp nop xchg cld sbb xor (bad) sar cmp dec jo aam inc cmp push out scas into push insb ret andb sub xor mov sbb je push mov xchg mov dec loope loopne insl bound push sub dec in cmp dec in mov loope push lcall icebp cltd addr16 ljmp dec stos or jb and mov subb pusha mov inc jne inc push adc push loopne push sbb stos fcmovnb test push lcall fwait push fs cltd xchg repz cs aaa mov add xor sar movsl clc aad arpl (bad) and lock sub repz dec cmpsb aad ret idivb xchg push lods (bad) or mov jnp or dec in push data16 inc stc mov inc mov and imul jns jmp push cmp dec das out vsubps dec mov or dec das inc cmp adc inc repz mov xor and cwtl dec push inc and mov jne and stc mov icebp jg add jno sub sub ds cltd aad sub add test popf xor outsl inc mov dec mov (bad) add movsl stos (bad) loop dec enter and sbb leave mov lahf mov mov add adc jmp loope inc stos push mov cmpsb das inc (bad) fld1 add xor cmp and or mov ss icebp sub dec enter out push nop dec mov sbb ss inc sbb ret std in push xchg pop ret add adc mov push in push mov mov out insl into push outsl mov icebp outsl pusha xor js dec out repnz scas sbb add push cmp jp call and pop out mov out cli sahf xor sti arpl or sbb sub inc sbb int dec xor out xchg fiadd (bad) mov cltd adc mov push arpl pop int3 pop push and in test (bad) xor pop pop gs push rolb inc sub adc (bad) repz das cmp in sbb mov mov mov cmpsb insb sub (bad) sbb jb out mov xchg xor (bad) pop rclb pop ja fildl ss and fdivl cli js lret mov imul xor loop inc cmp (bad) push add (bad) mov jmp shrb jo cmpsl mov xchg outsb mov xor jmp les mov (bad) fisubrl mov mov test pop push jnp add cmp (bad) xor and icebp test sbb jmp pop loope movsl cmp stos rorl jne lock enter adc shl leave sub icebp fucomip jae,pt pop in shrb and push push xchg pop sbb lea rcll xchg jne insb out ret mov inc xor push aam sbb adc xchg xchg ret push mov in mov or rol or adc lods fsubrl fidiv fs jnp test repnz mov mov mov iret (bad) sub cwtl adc push popa adc add mov add jns mov repnz dec push inc jle add mov and test rcrb mov mul imul or cmp dec (bad) fbld mov in pop sbb aaa inc fidivrl dec (bad) xor sub push popf test or lods jns adc cmp jp adc or ds subl push pop lods test mov outsl fstpt mov scas mov push scas pop adc sbb daa sbb and ret sahf addl mov cmp les rorl push xchg mov or cmp mov dec jecxz mov mov repnz mov adc pop jo dec xchg (bad) arpl out or push add stc cmp mov add inc btr movsb xor div subl pop popa sbb cmp dec pop js pop out cmp pushf and mov jb cli arpl hlt xchg mov cmpb roll or dec mov and inc lret mov int rcrb sti sbb outsb and cs fldcw outsb ficom mov stos xchg shl pop and inc sti xchg les push adcb and xchg mov lods cmpsb cmp ds in sub pop jnp xor push lret push sti cmp cvtps2pd or mov pop out movd sub repnz outsl nop xchg push (bad) ja pushf cs adc iret jp pusha cmp pushl inc pop sbb jbe or jg in sbb scas inc or sub pop mov adc add add pop subb push in mov push xor stc mov fldenv ja movsb mov popf (bad) xor lea bound inc mov jnp sub adc mov (bad) es imul xor into pop divb into xchg mov cmp xor jecxz push mov rclb dec xor inc pop aaa data16 mov aas mov push xlat push push inc jl mov xchg in pop aaa xchg pop ja aaa (bad) insl mov daa mov fisttpl jecxz lods cli pop pop jecxz lds mov dec addr16 inc loope (bad) jno cmp addr16 cs lea sahf jp in imul and push or fsubl cmp and arpl jmp push lahf rolb icebp sub jecxz xlat lret push adc xor add mov or sub pop push rcrl (bad) scas (bad) adc cltd std ss push mov loop cmp ds fnstcw addr16 inc add adc daa cmp sub fdivrs rorl dec enter mov inc lds inc fstpl into cmp (bad) mov add and (bad) jp pop cltd push sahf jle inc in push mov cmp les sub out push mov test push xor fidiv addr16 fsubrs stos out popa jecxz test or mov aas mov add inc jecxz mov or mov mov out jnp pop bnd in imul and data16 dec shll lods cmp mov addl xchg fist jo les aas push aaa repnz clc cld mov mov pushf mov push imul mov inc xchg jnp shll push xor xor cmpsl mov mov nop push cmp stos pop out dec jl xor jno (bad) fldt insb pop and xor xor dec sahf push js mov lret je sub pop push cld out push cs outsb scas (bad) dec repz pop mov sbb mov stc xor hlt js xchg ret aad push or fistpl mov push das inc pop loope cs in iret cmpsl or bound out add push mov (bad) jmp aas rcl movsl adc add dec (bad) in push xor jb adc mov test mov sti pushf loop mov mov xor push pusha mov movsl dec cmp inc out js (bad) pop call cmpl (bad) jge shr mov push push xchg addl les mov sub lods jns das add in pop fisttpl xor stos ret fild (bad) cld dec xchg int lcall jns and push dec mov cs jno cmpsb mov movsl mov insl ss pop je fstpl int dec (bad) cmp scas mov mov fildl stc shlb mov je and cli cmp dec adc mov negl inc cmp or imul fldl mov fs and out imulb push jae mov jns push sub inc mov sbb das stos push bound pop loop fdivrs popf out popa cmpsb lret leave jb (bad) cmpsb (bad) aaa lcall cmp xchg sub adc inc xor dec mov aaa loopne inc push ljmp lea icebp pop enter pop cmpsl add cmpsl test mov rcrb das inc mov push push inc addr16 rcl pop jl lock cs sarl imul sub out jmp add arpl jle mov lahf push (bad) push pop jmp in pop mov mov mov push xchg out inc push xchg fwait fwait jp iret dec sub scas sti add inc pop sbb lret sub mov repz jne iret xchg in iret add jmp stc ja fdivp mov inc into xchg lds arpl xchg xor pop stos sbbb or ds jne dec adc je adc les sub cltd mov std and mov ds mov out xchg dec arpl lods jmp popa pop iret lds or adcl roll push or loope xchg imul sub sub and ret insl cmp xchg sahf movsb or lahf je lods mov lea adc pushf mov (bad) or adc xchg das mov imul jl xchg lret jb,pt (bad) xchg data16 sub mov fisubr aas add in cmp roll xor scas inc add or mov cmp jle rcrl icebp jg mov mov out pop inc push insb repz push and movq inc lock out fnstenv (bad) cmp es inc callw outsl movb sub into jle cli loop cmp or lea mov adc jg call andl sub mov xor outsl mov sbb adc pop jp fidivr ret out sub cmp les loopne in mov cltd sub (bad) (bad) add aaa repnz jmp sbb push mov repz mov out and jne sbb into fs xor into pop or fistpl cmc xor shrl inc jl sbb mov xor cmp and in add adc dec push sarl popf push fst negl or xchg add ss mov lods sahf mov inc stos fild jge leave or pushf cmp daa test cmp xchg pop sbb scas push cmp cmp push sbb dec stos imul sbb xchg arpl iret fs mov rcll adc mov mov stos movsl (bad) and mov bound sarl out add cwtl xchg scas lcall dec mov sbb aas inc int3 push in bound add (bad) pop cmp mov adc movsl dec mov mov and jno cmpl aaa push pop lahf cmpsl xchg pop (bad) inc xchg fidivl sbb jae or and ret adc jle dec fnstsw jno cmpsl or jb out push pop js jmp movd mov test add adc jecxz sub mov adc cld dec (bad) (bad) je,pt push mov sbb push inc cmp inc pop dec xor push clc out lock data16 aas xor addr16 cmp push sti push jecxz sbb lahf subb push mov add dec fs lret xor dec xor pushf ret call inc incl dec push ret (bad) jg cmp dec jns hlt imul in mov in push ret pop test cmp ss sub lea lods mov test mov pop das cwtl mov jae (bad) mov stos mull lods scas push aad xor js rorb fdivrl mov mov (bad) cmpsb fcomps ss or repz call mov lcall addr16 mov sub mov sbb int3 arpl pop pusha icebp push aam and mov ret hlt jecxz loop mov pop fwait jo (bad) in adc xor (bad) sbb ror sub (bad) ret cmp das pop cmp inc (bad) push popl scas in mov (bad) cwtl test push movsb pop cld pop xor xor and jg mov dec adc cmpsb inc xchg cs outsb ffree idiv dec pop inc add (bad) inc jns call scas popf sbb leave pop outsb mov dec push fnsave add loopne and or ja pop xor icebp jbe loopne xchg ja inc jo in push inc fimull or repz lahf mov bound aam bound lock xor ficoml scas out push daa insb js lods fcmovne roll (bad) push or lret (bad) mov loopnew jb test mov lret in lcall push xor test xor push into jmp adc jnp test and ficomp sub xor jmp insb (bad) (bad) repz xchg loop mov aas aas (bad) mulb sarb sbb mov or pushf adc mov (bad) mov xor (bad) jb xor pop adc sahf imulb mov add cli jbe jle arpl jg scas lods sarl stos fdivr call fstps leave fwait in push movsb outsb movsb dec inc repz shll insb inc xor or cmp xchg xlat pop jb fwait or mov push adc sub xchg ret (bad) dec jp cmp pusha ret mov xchg push mull lods data16 cmp xchg xor sub xor mov cmp mov sub stos into lret sar stos pusha movsb xchg and lret out int3 hlt pop divl pop leave inc pushf stc jbe ret mov push mov (bad) jb mov xor clc fsts pusha xchg push sysret mov mov mov sarl (bad) aam jmp daa mov and mov inc shlb dec rol cmove and shrb sbb push (bad) out mov jo pushl ret int3 sbb pop jno mov aas ds test imul xchg xor cld mov sub cli mov add sbb arpl (bad) pop jmp lock aas sub lea fimul lret mov add fbstp adc cmp (bad) outsl mov cmp pop jmp insb xchg push mov std sub jns mov cli (bad) mov cmp das dec cmpsb (bad) das mov or xchg sbb insb mov xor lret mov pop clc addl clc mov lcall nop and scas inc push pop (bad) add fwait mov jnp inc xchg fmull adc or stos push xchg fsts bound push adcl sub jg lcall fsub in iret and adc sub fcomi (bad) sbb jl notl call or jb mov xchg jge lahf fcompl cmp dec jmp mov push mov inc repz pop out jno cmpsb xlat add (bad) add xchg push jge cmp sub ret ja add add mov scas (bad) xchg dec in mov dec shlb mov cwtl inc mov dec pop and cmc clc xor movsb mov xchg xchg xor cltd out in push scas xor or xchg lods pop xchg mov lahf jg push cmpsl xor cmc pop mov enter jp mov cmpsl jne stos call jle xor bnd pop mov stos cmp loope push ret daa jp fdivrp int3 sahf repnz fsubr ljmp xor test cmp sar xchg cmpl pop mov sub pop push xchg or push bnd outsl bound testb jne stc add jmp jnp aaa pop lock cmp mov das sbb push je roll movsb ret sar cli out push pop cmpsl xchg mov xchg into xor jge mov mov dec jle (bad) rclb ficom adc in das popf daa test sub push lds mov sub pop xchg sub cmp insl (bad) popf push sub cltd sub add dec pop rcll pop mov inc addr16 in repz movsl repz fsts (bad) push out (bad) call adc roll xchg push leave in shrl xor lahf ret xchg inc sub sahf jmp fcomps xchg sub inc mov dec xchg pop sbb (bad) je sbb xor movsl pushf int3 sbb cld aam pop test jl mov out push adc sub int3 or pop mov push jecxz outsl inc shlb xor pop cmp pusha xchg inc sbb push rcrb inc sbb fs es jecxz cmpsb or mov std sbbl push (bad) in add imul shr cmp sub gs mov ret (bad) sub imull xor sbb subl push xor fldl push xchg das add out hlt ficoml lea mov mov fcompl fsts inc sbb movsl xlat shrb (bad) sbb jne cmp and inc jnp jg and push (bad) push sbb ljmp clc inc loope cmp data16 addr16 jl fsubrs pop sbb cld fcoml mov xor adc sub pop out mov les xor and mov xor push mov mov mov addl aad xchg mov mov dec in dec mov pop scas xchg push xlat clc scas (bad) gs hlt movsl mov or test jae pminsw popf adc out mov inc push mov push (bad) mov jecxz (bad) ja jae in xchg mov loop outsl mov jbe lret popf mov lcall cmpsb aaa cmp das xor push pop mov fnstcw test sar es sub jo adc mov dec data16 negl pop frstor mov or pusha lock (bad) mov sbb jl (bad) hlt pop mov cmc sub and sub hlt xor les adc je dec sub mov adc aad test data16 jge pop pop and mov push idiv jecxz sbb (bad) inc jg inc mov data16 clc lods wbinvd mov jae inc mov dec xor mov and mov xor pop and mov or pop fisubrl inc clc xchg (bad) gs cs (bad) in arpl ds xchg sub repz roll ror test and jbe loope daa lds ja ret loop,pt push and repz idivb adc test ret fiadd add mov sub mov sub popf cwtl inc scas cmp push inc or add sub jb pop inc imull mov inc (bad) xchg xchg push cltd add add cmp mov jb lret push cmpsb addr16 and dec xor mov out jle fidivr int3 dec and in pop mov ja dec aaa push sarl stc cli pusha xchg xlat xchg enter and js mov sbbl pop mov loopne jo push int3 aas sub daa push jecxz scas hlt inc or push xchg (bad) jl outsb push sub add nop repnz add out int push and mov rep xchg xchg xchg push push bound icebp mov adc push pop (bad) adc dec and sbb cmpsl call mov out xchg ficompl xor and jge and stos and movsb xchg or add (bad) es xor stc sub (bad) mov cmp ficom outsl pushf adc and and inc pushf daa push ljmp adc mov out inc or push test and jb lock cmpsl mov loopne lret lcall idiv pushf mov adc dec xlat test into repz pop cmp push mov xchg aad sahf jg pushf push test sar jecxz xchg jge sub (bad) xchg stos shl pop mov or push sbb pop mov sub orl adc mov imul xchg push call dec std test and sarb popa jecxz lret fldcw (bad) insb and inc xchg mov pop fnop or sti dec adc push jbe mov (bad) jno dec hlt inc add loope cli dec je icebp dec fnstcw mov jecxz fs xor loopne ret dec add xor and xor pop mov mov and test movsl pop test ror aad cltd clc mov arpl jmp aad sub cmp and xor ret stos fcomps mov hlt mov pop outsb mov daa adc mov fucom inc adc imul push gs adc (bad) mov inc mov cmp cmpsl jecxz adc shr dec mov movsl cmp push jbe sbb inc (bad) add push imul cmp loope in call out mov mov or push (bad) push addr16 pushl lods or cltd or mov imul leave cmpb dec cltd xchg or imul scas inc push call add aas adc sbb push sub daa pop or sub xor add dec dec mov dec push out test sbb pop (bad) (bad) lcall (bad) push inc addr16 lcall js push inc xchg jmp insb xchg (bad) repnz imul adc dec mov xor insb sub jmp imul in sub daa cmp pop cmp mov add and jge rorb push jnp flds (bad) lods in addr16 dec sbb mov push test ror and (bad) in hlt insl jge pop adc test fisubr daa xchg mov movsl les jae mov out push out cmc rorb push push jmp push movl push gs and mov shlb mov dec cmp (bad) clc leave and enter pop xor pusha xor xor scas push jmp ja and pop sub pop or mov outsb dec in sub mov or add sti ror repnz movsl (bad) (bad) (bad) into popa cmp cmp ficom mov xchg sti or stos cld fistl jno or sub ljmp ret sub jns pop outsl push add in pushf adc and add jnp cmpb (bad) stos adc (bad) mov and sub cld or and movsl scas insl andl in or xchg lock dec idiv aas (bad) inc pusha jnp pushf movsb pop pop hlt lret xchg mov sub pop pop fstpt pop mov into loop in jo jg nop mov xor xchg push add testl notb mov lds test inc dec jmp adc jb sub dec cli sbb cmc cmp es inc inc in pushf pop sbb sbb subl push lods in jge ljmp pop aad push lock adc dec es pop loop xchg add adc std add push in imul test xlat and fprem1 dec dec cmp insb lahf adc jae insb mov xchg outsl scas mov aaa dec jno cmpsl sbb adc ds ret (bad) push push js daa add out sbb adc add xor fsubl inc adc xor insb out test sahf fisttpll and dec es bound inc add sbb push in bound imul data16 pop stc mov pop lahf les fcomps je out add in icebp mov stos mov mov sub (bad) fimul icebp insl adc out (bad) out lods cs cmp add mov imul adc push dec enter xchg and into or dec in inc dec pop sub pusha imulb xchg cs jg mov mov aaa jp mov mov xor xchg jecxz,pn das iret scas inc sbb jns int push push nop push mov push jl std out xor je cmc aaa pop bound inc xchg popl aad std jle lds inc insb scas ljmp les xor mov popa xchg mov push xlat shl mov xor lea cmpsb xchg and in dec push cmp addr16 shrl dec (bad) or cs ret and sub jecxz xchg cmpsl xchg outsl pop push fprem1 sbb cmpsl je and adc stos mov in jmp shr xchg push pop push xchg add jle repz xor fwait or nop ret sub lods (bad) mov cmp cwtl (bad) int xlat lods fstps subl mov ja es enter push ss imul cmpb (bad) jle cwtl push lock mov jp xchg jge (bad) inc (bad) dec incl into push cmp ss loopne cmp jno mov dec cmp jge push test push int sub cltd rcrb cmp push outsl test or adc sub mull pop jns fnstcw insl arpl inc insl xchg into or int ljmp xchg je xor movsl nop sub test and pusha sub addl sub xchg in std icebp cmp mov jne leave mov rolb xchg cmpsl int (bad) pop pop in mov mov sub hlt jecxz out sub fsubrs push adc xor gs fidivr push fwait les dec push (bad) (bad) out cld icebp addr16 pop sar aaa adc sub or push (bad) mov sahf popa xor mov test xor sbb xchg add sbb divb out mov int3 lds pop in rol inc inc mov outsl pushf jae out mov inc imul (bad) out iret fisttpll mov fs outsb or jge fwait cld push cltd push xor insl pop data16 push test xor pop jp sbb pop (bad) ja mov lahf loope mov out sbb push and cmpsb sbb (bad) dec cmp insb movsb xchg addr16 xchg inc sbb push jge xchg xor fnop and rcll dec rclb aad int push pop pusha insb popf mov enter adc jp or adc into sbb pop xchg sbb daa out or push add in adc push cmp push bound sbb dec rol jmp cmp inc mov popf mov mov fwait jnp fidivr mov mov fdivrs inc inc sub test jmp sahf sbb xchg sbb test sub jno xchg ror out add imul int lea dec mov daa (bad) in stc push ror hlt pop push orl add shr jecxz sub dec lcall sub in push mov add pop adc popf mov xchg xchg push (bad) ds mov adc rcrb mov bound pushf add dec lods fldt adc outsl push popa xor cli xchg lcall mov into aas dec cmp fisubrl xor movsl cmp mov jp push sub daa push jae nop cltd dec enter or ds lods dec popf lcall js pop jp std lods sub ficoml adc popf add sub mov les scas out shl sahf lock push inc (bad) ja mov push add pop inc pop imul js aaa (bad) cmpsb lods mov mov dec jbe out outsl inc xchg rol (bad) jne push adc cmp sahf stos out ficoml mov ss faddl in aad push insb cmpsb cmp dec lcall pop mov pop pushf sbb lret mov sbb cmpsl or dec int3 lock mov xchg (bad) inc pop scas pushf mov jno out add mov lahf int3 insb ja fninit jo into (bad) loopne xchg mov insb fidivl icebp stos sbb mov dec adc lds dec fwait inc test mov leave andb cmpsb shl push outsl repnz dec pusha (bad) xor rcr push or stos inc int3 or xchg jg out xchg cmpsb out pop aad jno cmp out dec icebp sub mov fisubrl rcr jmp lcall and fwait nopl cmp add mov loop adc mov outsb bnd pop outsl jnp sahf jecxz ljmp fs ret jb mov dec imul aam mov fidivr out sub in mov sahf shrl insl fcmovnb ljmp into pop subl xchg (bad) addr16 push dec xor jg mov sbb (bad) bnd pop mov out test iret std sbb xchg shll jge test int3 gs or push xchg mov movsl mov mov xchg dec dec adcl inc clc xlat cmpsl mov jno ds mov stc in stos lret fldlg2 out push arpl xor sti aam and dec push jb and or sub ret scas dec mov mov outsl add mov stos dec push and push xchg push insb mov (bad) loop sbb xchg lock and cmp jno (bad) mov out icebp or inc mov stc sbb jp pushl and cmc loopne mov xchg pop mov faddl inc dec ficom popf aas jae push lods pop insl ds sub cmc sbb cmc jnp imul cmp das adc inc sub jns ljmp dec jecxz xchg test add sti inc js jbe,pt loopne and mov or cmpb adc ds add sbb mov fs push fild dec sub xor fstps gs inc jp mov mov and or cli jbe cmp (bad) dec imul std mov iret and scas sbb mov sub pop and add xchg std insb ljmp cmpsb call cli aaa push inc push cld nop nop sub mov lahf jg les gs daa aaa fildl dec sbb arpl fldcw cmc mov mov aas sbb push push pop or xor push pop mov iret fidivr gs and xor mov or cmp pop mov xor cld (bad) js push push mov push mov mov out inc shll mov jbe and inc addr16 or jns xchg movsl and cld jecxz ljmp cld inc or stos jne lahf les add pop dec mov jae pop cs pushf add cli std fimull lds jl push pushl stc test lret bound ja cmc dec lods adc mov or cmpsl das aaa pop inc dec jne andl mov push cmpsb inc push call out stos inc xchg lret dec mov mov mov push pop mov push scas std lods in mov push mov mov ficoml mov mov xor mov and add and cmp sub sub (bad) mov xchg inc xchg aas ljmp test scas inc sti jae fs repz mov js push rcl out loop dec pop adc xor repnz pop jmp push sbb idiv aas mov mov mov or fimull rsqrtps mov je jge jp lods mov inc fsubrs xor xchg loopne xor iret (bad) test in (bad) and pop fidivrl jbe pop rcll mov clc rorb jl jecxz testl push sub push js movsb sub stos mov xor and fildll dec add popa jne int3 mov les and and in movsb or divb clc int sbb dec xchg bound pushf mov ja xor ljmp lods (bad) jo dec jmp push and and jg scas pop hlt mov hlt cmp fiaddl xor xchg mov cmp xor insb dec sti jb xchg pop (bad) cli pop test fsubr jnp xor in mov sahf ss lds mov mov sbb in movsl in test jae movswl jecxz lret sbb adc das adc cmpsb shl mov cwtl dec mov scas mov pop cltd icebp jmp stos adc cmp repnz inc (bad) jo jmp cwtl dec rorb cmp in xor pop sub and loop stos dec add popa pop inc leave jbe fstpl mov sub cmpsb int push mov mov sub adc jbe aas je (bad) cmp dec sbb xor in xor aas test push cmp jl mov sbb cmpsl add lock push push ret inc pushf (bad) fildll and xor sbb jp pop dec mov gs mov imul test rcl sahf jl (bad) dec xchg push ja repz cli jl inc in sar lret fdivl xchg cmpl lock pop mov mov (bad) in pop jp stos rorl cmp scas js clc jbe movsb mov or push sub and add cmp orb cltd push dec push rorl jecxz in cmp pop js mov jg or outsb outsl into mov lods jno push clc arpl cmpl sarl sbb and mov xchg dec (bad) in or push sub and in push shrl pop mov scas mov pop sub sar cld sbb cwtl je mov lret add nop dec roll xchg pop and lock lods loop dec xchg lds sub lea ja data16 pop pop mov fldl xchg jo xchg add xor dec pop add cmp and add notb mov or sti xchg movb out stc push and loope rclb mov dec inc sub xchg jne lahf mov or push stos arpl (bad) xor loope fs xchg push sub out mov inc jle cmpsb imul sub sbb pop add das push pop lods js xor mov cli sbb jg andl inc pop and sbb inc mov dec or out test scas lret loopne stos or inc into sahf add es push mov imul mov and lahf jne dec fstpl inc (bad) mov out jbe jae jnp outsb add pop xchg pop stos sti xchg dec cltd movsl fimul dec popf and cmpsl inc add adc test inc jne lods pop pop pop adc pop fimull ret and sub sub add or (bad) cmpsl stc arpl in inc dec cmp push cs xor jbe,pn lods in mov leave and jge pusha pop outsb movsb mov hlt clc pop mov sub jecxz jno ret sbbl pop or fstps popa es pop fildl xchg test repz push iret add jo repz outsl xchg or mov jle out cmp (bad) outsl fs movsb sub (bad) jg lea and jecxz sbb or adc jecxz cmp popfw and add in aam mov das in outsb sarb mov dec orl subb or push das out fwait popf clc cmp xor mov xor loopne pop out (bad) sbb and jmp inc test icebp xchg mov lret add js fldl stc push iret ficoml ja xchg fwait pusha nop fbstp cwtl push shll (bad) push fdivs add jmp inc pop icebp int jl add pop fnstcw push inc pop sbb movsl arpl aad sahf arpl sub mov inc lret pop stos adc mov (bad) enter lcall scas int movsl (bad) (bad) neg inc lahf mov mov inc dec jle ficom inc add inc rcr jne or rcl std dec xchg adc pop xchg jle inc xor cmp nop rolb pop aaa sbb or pop fstp adc dec fcompl mov stos pop or cmpsb lret or jg xchg and lock insl pop mov mov movsb cmc lret mov clc andl inc nop lcall cwtl sti test push and pop jp inc nop or fnstcw int cmp sbb ret cltd data16 push dec shrb mov outsb rol push cmp aad ljmp and loopne or ret push nop in pop cmpsb adc shrb xchg add add mov mov mov lock fcoms les loop xchg stos ror or xor xchg xor das or xchg decb xor sub lea mov push icebp cltd sub fistpl jp out cwtl xor aas faddl and inc mov in ja xchg sub (bad) int or lret andl pop push mov dec mov into fwait dec stos pushf xor fldt ret xor es push subl cmp jb inc xchg mov adc sub push add setns ficomp pop push cli adc xchg xchg sbb mov mov test mov dec push jecxz div mov xchg xchg dec xchg jl ds jno fwait or mov sbb jo xchg mov (bad) xor loop and add iret or lods fidivr mov outsb lods push mov out xor dec rcrl xchg inc and push pop sbb pop sti sbb and fdivs push sahf mov mov pop or repz and cmp push push and decb inc aaa imul aas (bad) fisub dec jg mov aas pop fsubr push movl ror sbb sbb push jno xor jle test jnp,pt cmp cmp xlat icebp xor enter mov movsb xchg mov fld lcall test leave adcl das xor xchg mov (bad) xor sti popf mov push push dec mov arpl iret sbb push sbb test lret inc xchg jge cmp dec dec movsb xchg lahf mov adcl movl cli dec push cltd xchg insl lahf or inc push mov fisubl push gs stc dec in pop jne ret or addr16 in hlt call ds into pop xchg push aaa xor xor iret mov in adc adc mov aad push add jb out xchg into add push rolb jmp push mov nop sbb (bad) out ret scas fucom cmpsb mov lds (bad) mov lahf xor jl leave imul cmp jne lock mov cs shrb ret mov dec sbb lcall cmpsl xor sbb pop pop outsb cwtl popf imul or mov sbb sub mov sub ljmp (bad) movsb push fdivrl dec mov and loopne in jo das or out enter xor rclb cld lea inc jecxz jns cmp mov inc data16 mov pop or in push (bad) shll cmp inc sahf mov add xchg add xor nop loopne or iret dec rep mov cmpsl sbb lds stos aad andl fs fisttpl mov push sub stos jg test mov mov aad sbb sarl mov and jo stc mov push imul pop adc sbb xor mov push dec xor std fldl mov mov mov je cmp movsb out cmp jns rolb ret xlat xor push imul mov (bad) and dec divb or or xorb call insb jp xorl fnstcw out sub fiadd jo cmpsl cmp in mov les xchg jnp cmpsb scas ja jp xchg xchg jg (bad) mov mov mov imul mov jecxz lock inc cmpsl es dec ljmp cmc ds leave (bad) push xor int add push movsb mov ret dec fcompl pushf cmp sbb xchg popf testb mov inc inc or ss xchg mulb imul sbbl cld mov jne cmpsb imul (bad) (bad) sub outsl sbb jns push outsb xchg aaa inc sbb call xor dec mov dec and xor lock sub andl push icebp sub inc jae sti jle sub mov les sub xchg mov es ds lret test mov mov or enter jp xchg pop cs xchg bound shrl fidivl adc jnp mov mov mov lea jo cmp pop mov iret mov insl push mov pop stc inc add popa fstps cmp mov xor xorl add icebp lahf dec int push (bad) pop es ss sub pop xchg outsb xchg loope fistl ljmp (bad) mov int3 jbe popf adc xor test jg mov aam insl pop jbe es repz into insb xchg mov jle xlat pop jl lock or addr16 mov shrb cmp mov out shlb add setae inc inc lea pop mov rorb les xchg ss ljmp cmpsb adc inc add ret jle loope (bad) int3 repnz adc movsw mov pop das hlt repnz and imul or loopne mov cltd push and addr16 and stos or sub xor sbb dec mov lods adc fcompl addr16 inc inc mov cli bound pop and les mov mov adc or bound xor xchg data16 cli jnp loope subb xor lods fdivr imul in cmpsb ljmp dec cli addb xor xor (bad) mov xor lcall cltd flds lea movsb inc adc jae addr16 int3 cmp dec xorl adc fcoms ljmp pop (bad) inc scas dec repnz fisttp pop adc pop das mov repz inc outsl cmp mov outsb ljmp sub push insl or clc mov mov jmp fcoms dec daa cmp push ja es stc rclb std jno xor pop or mov xlat sbb (bad) negb mov push pop out mov dec mov sbb leave sar std adc sub inc movsb or push inc and imul imulb and and imul mov xlat pop xchg enter test pop andl jecxz mov cmp mov dec ret pop xor dec pusha jnp imul sbb jle loop pop imul loopne sbb mov sbb push movsb push lea ss add icebp loopne aad pusha jmp es into mov xor jecxz sub sbb sub sahf cmp adc fsts inc mov xchg in lret pop mov xchg (bad) pop fiadd sbbb push mov ss sbbb dec mov xor shrl xor daa xchg loope adc out ror sbb push fistp cmc fnstcw dec xchg pop arpl pop fidivrl pop fdivrp loop jp fstp lods sub push xchg fwait add (bad) repnz mov pop cmp cmpsl pop jb add leave sub ljmp cmp mov adc add iret jp xor and test in push mov pop fnstcw dec mov dec andb (bad) sub jecxz mov (bad) lret xchg repnz les fldenv jmp or mov test clc mov add pop jb lea ja icebp (bad) jno pop enter aad sub dec leave scas sbb call insb or mov pushf mov (bad) inc cmp sub pop inc lods popl xchg lock shrb insb push loopne or xchg sbb rol cld imul daa out xchg push stos add ss in je fdivl imul pop jne or cmpl cmpsl jge cld sub push repz in outsb neg sub repz jbe jno jp dec adc pop jno xchg inc subl ret xchg jo jae hlt dec push xor ret es (bad) pop pop mov sets and sbb mov (bad) lahf les mov sub scas push cld add je cmp stc dec jb adc int sub jg cmp adc mov xchg (bad) nop cmp dec push and iret out sub loope jnp std xchg cs cmp sub insb mov and cmp cld (bad) lods mov and pop mov sub cmp cmpsb cmp cmp pop repnz xor inc leave nop mov into outsb add out sub mov (bad) mov push fcoms daa sub add fcoml pop clc dec sub leave fistl or aam cwtl mov gs mov in cltd ds popf cmpsl gs jno outsl mov ror aad inc jl push int3 test scas pop ja fcomps mov pop jp ret mov mov push mov lods test (bad) mov rorb mov xor sbb pop adc sahf je sub pop popf xor mov mov lahf rolb std xor dec mov jb sub popa or dec push push (bad) or and pop fninit xchg addl mov outsl jg (bad) jno in cs lock xchg mov imul pop cli push jl ljmp loop mov (bad) pop push cmpsl imul sahf popa mov outsb push lret mov or shrb jns,pn xor rolb push repnz int3 cli ja jg nop dec (bad) xor repz xor fwait jmp js inc addr16 (bad) dec xor mov cmpsb rcll into push sbb lret aam xor add out add fimul cli movl shrd cmp sti nop xor cmp outsl fmull (bad) divb mov ret hlt dec test xchg int3 mov mov cmp fbstp pusha inc out dec insb inc aad lcall (bad) pop (bad) xor data16 cmp mov xchg push inc cmp or stos sub jp add movsb cmp (bad) enter push add xlat rcrl mov dec mov fldenv cmp pusha test bound sbb test push sub les leave fstpt sbb cmpsb loopne sti add (bad) stc fstpt sub lahf sbb sbb js sbb inc xchg imul test and shrl subl in xor stos out repz xchg cmp ds test ss (bad) repnz inc out inc cmc mov jmp mov mov (bad) push push fbstp add test pop cmp pop scas fstpt push pusha int3 cmp and push nop cld sar and and push jl test cli loopne imul mov das pop jg lods lret nop and push cmc mov mov lret adc clc xor mov in out pop xchg mov sbb cmc outsl lcall inc out push sbb scas test lret fdivrl in rcrl stos push aas mov push out jnp jecxz jp stc outsl pop test ret int3 repnz in int ret or cli or sub rorb hlt or push dec outsb jp xchg das xchg stos pop mov or jge push dec adc sbb aas mov pusha insb lock cmpsl imul mov (bad) pop hlt mov pop ja adcb inc mov mov jecxz mov add jnp mov (bad) jo loopne push test xchg jnp fisttpll shll cwtl xchg shll cli jo ret adc dec and sub mov add push mov push movsl mov push addr16 pop (bad) mov push inc testb je sarl sbbl xlat and fnstcw mov push xlat (bad) xor popl fcomi sub adc ds inc nop hlt jo add mov sarl sub push in inc dec sub ret lea ret cld adc repnz lret and pushf div sbb cld jae sti dec or test adc stc popl sbb mov add sub or mov rolb pusha cli icebp add (bad) ja (bad) repnz mov clc pop xor mov pop mov adc jnp das jne (bad) ficom inc daa nop (bad) ja add pop addr16 pop mov adc sti and insb imul cmpsb in pusha test mov cmpsb je lods xchg mov push jp mov lahf dec repz repz pop nop adc test or xchg arpl dec mov and cltd xchg push jg cmp addl mov pop fistpl hlt stc mov ror dec ss es cmp je sahf mov daa stc rolb xlat cmp (bad) (bad) add outsl adc ret pop adc (bad) lcall push xchg xchg scas and mov repz inc stos out xchg mov dec fistpll or repnz movsb xchg loop das movsb cmp mov sub repnz pop pop pop fsts push jle or add sti sbb xlat ja aas scas mov stos cmp mov in cmp sti adcl add dec inc inc mov fisubr dec fidivrl inc xchg sbb mov sbb push push aaa and adc jl fistl dec sbb sbb add adc mov xchg stos jno pushf mov cld notl dec stc xor dec (bad) pop mov loop lret xor popa fldt mov jge dec (bad) jnp xor loop,pt sub mov inc mov adc adc out push sub mov mov mov frstor jns rcr jo (bad) test xchg jl test (bad) jp aad (bad) fisubr push icebp push and adc mov scas cwtl cmp stos nop dec popf push dec test lcall push outsl cli add nop adc mov inc lods xchg jmp stos inc enter insb in xor or (bad) and jge xor lret out push mov ret xchg mov loopne aas xchg shlb (bad) jo movsb loopne loope bnd idiv lret mov cmp mov in popa push lods jp mov mov test ret ret adc jbe inc push outsb andl lret icebp je and jae fldenv cli aas inc add (bad) mov sbb and mov cli mov fwait xor mov mov jb push std and (bad) hlt push repz xor inc pop out dec cwtl cld dec xor push or das ret test pop xorl push repnz jle xor add xchg jno xchg xor cmp ja daa mov mov push cs adc leavew cmp lret pop loop xchg aaa lcall roll les cmc mov ret jnp push adc sbb popf and int jbe mov pushf or push and add jl mov pop loope (bad) xchg addr16 mov inc adc adc lret out inc cli je add mov (bad) mov negl sub sti call in test (bad) stos and cltd lock and lcall push pushf rcr pop or and sbb push movsb cmpsl ds enter fstpl ret je dec cmc pop loope and test shl fidivr sbb cmp int mov mov outsl mov (bad) pop inc mov jl stos jbe movsb sbb jo pop xlat stos pop sbb js adc xor fiadd ds cmp cmc jmp fs xchg out pop ret rolb ds push xor jo test xor icebp enter ret jp xor mov nop or pusha push sub pusha repnz test rolb stc pop jo mov adc inc adc dec int3 jno bound rcrl loope clc cs (bad) cmp cs rorb fnstcw sub insl mov int3 dec push (bad) rorl add lret inc jge mov or xchg or mov jae icebp push lret ret xor cmp sti decl inc in sbb loopne xchg adc clc dec leave mov cli fcom lahf stc add (bad) xchg icebp nop notl adc (bad) sbb sarb icebp aad add leave popf in inc (bad) cmpsb push mov mov add das sbb jbe sbb enter test pop bnd out xchg sub adc inc lea mov jnp aam bound movsl xor popw lahf imul mov je aaa jg dec div or push inc xorl jno subb and sub sbb push pop (bad) in pop sub lock xchg dec aaa adc sarl rcrl jno fistp stos sahf fidivrl xlat leave push inc pop add lock icebp jmp add xchg cli popl add hlt outsb jg adc sbb leave fdivp fsubrs jbe jns inc push mov jle mov xchg and (bad) jnp mov and lret jbe jno loope (bad) jl or out jae sub sahf fsts xchg (bad) lcall cmpsb mov adc jne jb jmp dec fdivp ret or jl aad popf cmp sahf or clc lea xchg subb loop mov fisttpl fwait dec fistp xchg mov imul adc nop cmpsl jns or cwtl jecxz push dec sub xor gs in mov cmpsl mov add in and hlt push jmp andl mov clc mov mov xor test dec (bad) (bad) mov daa out adc xchg adc nop sbb pop xor aas cli mov mov aad adc out sub negb lret push sub lret mov inc push arpl jle in fstpt xchg lea cmp adc sub cmp (bad) jo sub xor mov mov jge cmp jecxz mov hlt sbb push push aad pop mov mov stos adc add sub xor insl add imull rolb out hlt ja sti ret fistp xchg pop or xlat sahf mov xchg movsb fwait mov aad xchg cltd test push dec push mov fs cmp push jne sbb mov or pop mov add (bad) dec test push xor sub and out in (bad) xor inc gs out push xchg fsubs lret in xor aad rorb pop (bad) adc push inc push rcl int3 xlat jge popa rcrl mov mov cs loopne sub or and dec cld fsubs insl aad lret jb pop es and cmpsl pushf xor add rolb movsl (bad) cmpsl sbb movl xor mul icebp loope sarl scas fmuls dec xchg mov push ret xchg and mov push mov into int3 inc push ljmp add addr16 daa fidivrl jno mov in rcl pop test pushf mov daa cmp (bad) xchg cmp inc pop (bad) xor fsubl xor or daa insb ljmp jne into inc or xor cmovl push cmp nop dec mov mov lea lods aad (bad) xor adc scas into push sbb into fnstenv inc xchg and lods cmp fistp sbb xor dec data16 adc mov dec out lcall subl divl sbb adc hlt add pop aad jo xor stc ss icebp lea cltd test sbb insb sub xchg inc subl movsl fadds jbe mov sub xchg mov mov push cs pop (bad) sub push inc in outsl mov xor adc pop pusha dec xor add and loope ljmp jmp aas push pop (bad) and out jbe loopne aad cli sahf clc jae imul cld mov iret test js nop test mov (bad) sarl (bad) imul jl cmp sarl dec xor sub jae jnp dec lods xchg jecxz mov and cltd ret testb aad sarb jns mov adc mov xchg addr16 xchg push jle xchg in arpl movsb xchg stos into clc xchg xchg pop leave rclb and mov pop adc rcl (bad) xor int pop (bad) xor vpminub or in jl cmp cmp imul inc xor int3 dec xor inc out int3 roll inc outsb push jns cmp dec mov push inc cmpsl fwait add adc cmp push or fimull out sbb lock mov cmpsb push mov xchg adcl jmp fidivrl test jns in out repz pop pop repnz xchg add ret cmpsl jnp adc pop insl shr aam adc inc mov lcall shr jg mov (bad) in (bad) nop cmp inc shrl jno lods mov repz data16 ss icebp enter mov pop mov fsts cmp pop inc clc push movsb pcmpeqd int3 (bad) xchg dec adc inc inc cmp in stos fmull and jno push xchg (bad) ss mov mov adc lret cli add ret add mov lea or fwait add adc test lods (bad) pop in xchg xor cmp add inc fwait in popa or lods insl pop add mov stc lods loopne je ljmp out pusha xchg mov or fnstsw mov leave pop sub mov adc jno mov xchg adc xor or outsb cmpsb mov cmp test test movsl mov addr16 jg ljmp adc lret pop or push mov mov and push sarb pop ud2 cmpl outsb (bad) adc and pop or sub pusha clc inc lods jecxz pop xchg pop and push (bad) add and les es iret daa lcall add lds xor xor xor ja je lcall lea ret decw adc (bad) pop movsb cltd jecxz pop add (bad) mov dec pop aas outsb sbb and and ss inc andl add aam (bad) inc (bad) clc mov stc push cmpsl adc out push jnp add cs and into lret or inc data16 movsb mov fdivs cmp mov imull jg stos dec xor sti imul pop sahf xchg (bad) pop push dec xor fwait jae dec xor mov mov add (bad) cmpsl mov mov je mov std sbb fs (bad) aad pop icebp orl pop fimull or xchg cmpsb mov lahf lret loope popl cmp mov or int3 (bad) sarl stos loop jne mov pop gs dec mov mov push imul movsl dec add add fldcw dec add mov and xor sbb jp aas and and aad inc (bad) xor pop mov jnp jo lds jns xor jb int popf js push mov mov sbb dec enter xchg sub sbbl leave fisub lods xchg out scas rcll cmp fstps dec jmp jbe mov pop add iret and add mov add icebp stos fcomi dec movsb lahf lods adc xor pushl out fmull (bad) xchg sbb div inc xchg out sbb ja or inc es jg and push push dec clc (bad) xor js and push ljmp repnz shr loope popf push movsb push jne cwtl push pop dec std sbb add ja sub aad aas jno cmpsl jb pop adc pusha mov aam jnp in mov out dec push sahf pusha sbb fisubrl insb inc fcompl jo and push scas lods out cmc (bad) mov fsubs adc dec mov cmp adc push jbe sbb xchg out ret push cmp push repnz lahf sbb push out and inc cmpsb sub jmp jno ds jb rcl ret xchg and ja jle xchg ret aaa cli adc inc mov xchg pushf fmull xor mov cli dec cld out movsb mov jmp dec int dec (bad) push lret dec or or jbe mov xorl in fbstp adc dec xchg jge mov xchg data16 push repnz aad and lret mov dec and or test adc sbb xchg dec pop test pop inc cld lret in dec pop hlt imul mov cmp cltd hlt or xor push xlat arpl lods jmp mov xchg push jo movsl xor mov adc mov clc mov repnz out insl inc clc nop ret or mov cmp bound fisubrl dec (bad) (bad) mov cmp adc xchg pop adc push adc in bound jmp xchg xchg pop out movl mov addr16 mov imul fcmove and push jmp (bad) add lahf pop inc pop lods adc or sbb stos test xor jne in and lret xchg jp lea les xor daa pop pusha inc call scas sbb stos dec into inc sub (bad) ret dec in adc aaa sbb dec leave dec xchg mov lret stos mov and push loop fadds fwait cmp popa (bad) stos scas sub mov cmp add sbb or mov xchg pop nop sbb push rolb out call test push sub xchg loopne adc or pushf xchg gs cmpb mov push ljmp adc notb cwtl mov xor mov inc (bad) mov movsb aas push jno jg insb iret fldl (bad) jl mov fldl sbb ret or (bad) pop inc jae cmp fimul xchg xchg dec aaa sbb rorl push in pusha (bad) ds jmp aaa xchg lds xor xlat out push sbb ret push outsl inc incl insl movsl dec incl notb popa in mov data16 movsb mov (bad) cltd jp jnp dec test lcall es (bad) in das sub and inc (bad) imul or mov sbb sub lret mov out jmp add push cs in aam cmp (bad) mov (bad) (bad) dec cltd cmc into add movsb cmp sub mov out xor addr16 jns and mov aas ss pop faddp cwtl jb pop popf mov or icebp rorb adc sbb jnp cld out ss push jae pop popa gs push repz mov xchg divb inc push stos inc loope lods jmp lea (bad) mov cs jnp test add dec or push or pop mov jns lea push pop sbb bsf stos pop les outsl test orl incl and xor imul popa (bad) sbb sub fucomip rorb loop sbb daa aas push lcall push nop pop ficoml ja pusha rcrb rolb lock je xchg inc mov dec xchg imul inc loope jge ret (bad) adc push xchg lds inc xchg shl push mov je (bad) adc dec cmp mulb jmp mov sub mov rcrl lock les pop lods cs rcll mov ja mov mov jo and mov push fcompl mov inc mov nop lahf dec pop cmpl iret pop cwtl or out popa int pop jae addr16 sub jl test adc not and lds outsl xchg daa (bad) (bad) (bad) jecxz lods data16 (bad) jmp pop repz mov dec dec push xor rolb and movsl pop and mull cmp dec insb cmpsb inc (bad) adc mov add outsb cmp notl stc push jg cmp loop (bad) (bad) and jnp lods cwtl ljmp xchg lret les sub out data16 jbe ret and pop loope dec cmp pushf mov pop xor sarl loopne push ss lods (bad) or jl inc arpl (bad) (bad) cmpsl cmpl sbb sub mov fcoml jg cmp movsl inc sbbb sub ja outsl jg adc cltd rcrl (bad) pop into jge popf (bad) mov insb dec hlt pushf jae mov xchg lea cmp sub jnp pop imul fiadd rorb mov repnz ds pop pop dec in stos jp push in xor cmp add adc nop mov push jne fildl stos movsl pop push stos xchg fistp sub in ja cmp insb (bad) and jmp loop sbb dec insl pop xor pusha ja push inc rcll ds mov xchg repnz mov and mov lods dec int es sbb les ja ficomp xchg cmp imul fsts adc xor push inc and sbb lods inc data16 or xchg sti mov pop lcall outsl inc das adc xor repz inc je or pusha or sub (bad) cmpsb bound pop mov rol pop aam push jge fadds dec cmp sub mov repz ljmp add mov push in inc xchg or or and leave inc bound clc xchg xor dec fwait jns,pt ss sub clc in pop mov or sahf insl push xor mov das cmp test nop and (bad) sti cmpsb push sbb fabs cltd xlat lock pop and mov stos mov dec inc mov cmp pop mov push arpl orl lcall jmp cmp (bad) jle dec mov sbb adc sub push fiadd cltd sarl dec push adc lds jle adc mov in xor popa mov mov jbe cmpsl lods jp sbb (bad) icebp ja imul and xor leave repz out ljmp int3 lcall sahf sub js cs pop out jecxz test cmp or (bad) jbe xchg jae sbb daa xchg pop rcl aad or fdivs fldl2e loopne stc lea test fisttpl mov add (bad) xchg fstl loope je mov dec lret xchg adc ds push fs enter lcall xchg xchg lods fmuls mov loope lret cmpsb subb sti in adc mov int stos pop xchg dec lret jecxz scas loopne sub mov cmc push in mov insl push pop xor inc sub dec pop xor adc ss loop fwait cmpsl ljmp xor cmp adc icebp adc xor sbb jmp mov jge hlt inc idivb mov stos mov pop (bad) (bad) jbe mov adc dec cwtl je int3 movsl add lcall push outsb lods roll and mov mov push lock jl cltd add (bad) jp dec repnz jae lods cld cmp loopne mov decl popa inc (bad) xor xchg sub pop dec pop scas or fildl sbb loope sub (bad) jge stos lret mov test enter mov xor xchg (bad) xor xor cltd add mov in ljmp add cwtl or fidivr dec int mov repz sbb test mov lret ljmp popa enter cmc inc pop mov roll movsl imul mov or outsl dec add (bad) mov adc mov mov stc dec arpl loop jmp test xor movsl test xor pop (bad) xor push mov jbe ret add dec sub aam xchg cld clc xor cmp movsb jecxz jmp nop and daa mov jb popa pop outsl shll push xchg xchg lds pop lahf inc mov lahf ret pop cmp or sub push jns jno aam add ret sub jmp fldt xor push leave lahf sbb (bad) ljmp pop ljmp repnz inc lcall lods shrb jge add lock sub mov call mov out dec inc repz call test negb pop movsb xchg divb divw mov inc inc add pushf lds nop cmp jge xor loope fsub incl push mov or daa clc sub lret and outsb pop mov mov xchg xor or jle fsub or mov xor push jo (bad) fidivr or sub cmpsl icebp mov pop dec sub (bad) xor ds xor fucomp mov pop (bad) sbb aas push pop xchg inc (bad) lahf jnp mov xchg xchg push lret sbb cmp push jo (bad) (bad) jbe sub lods hlt into inc jo or inc pop (bad) xlat rorl (bad) pop push push clc mov mov ret int3 jnp movsb (bad) cmc cwtl je dec sbb xchg aam outsb out xchg mov adc ret test aaa fdivl adc call and adc mov mov push dec lcall lahf les sbb stos dec pop fmull mov enter pop push out and xlat sahf mov ljmp inc sti pop inc enter pop pop mov shll movsl loop or add cmp dec pop or jle sub push sub or mov iret inc lods xlat jl ja addr16 lret or les jg xchg xchg movsb mov or movsb jp adc es sbb mov je lcall arpl pop fmuls push stos xchg pushf xchg pop aam adc mov sub cmp adc jmp inc aaa jl or xorl xchg mov out mov out jae sub imul jbe pop adc lods dec pusha cltd cmp mov imul popa ja scas std cmc repz rclb movsl out out sbb push mov nop dec dec lea repnz xor aad mov das test jg mov xchg mov pop pop lods dec sbb jle or xlat xor shr and loopne (bad) out sub dec js roll std cmp adc xor push pop sub sbb pop and les popa dec lea das lret shrb sub repz or push lock dec push push in pop outsb mov data16 sbb gs lods in mov test out mov inc inc xchg pop jb jp xor sbb insl je (bad) or jge mov aas xchg and jae iret xchg dec bound shlb fsub dec inc cmpsl dec fiaddl xchg cli loop in mov mov xchg fnstsw mov test stos ljmp idivb cmp push xchg xor cmpsb rcrb mov iret sbb (bad) repz mov fsubs test or popa les pop imul pop mov sti inc mov imul nop loopne sbbl les iret inc insb rclb mov lds dec sub mov adcl (bad) popa es mov imul xor mov add mov lock je sbb dec sbb inc mov pop xor call sbb mov enter jecxz inc je mov sahf repnz cli fwait push add cmpsl pop cli sbb mov push adc arpl ret in sbb or mov pusha cmp adc mov ljmp push cmpsl push and and mov (bad) jp inc cld jns leave in or inc add stos mov xor out xchg add cmc xchg lds pop loopne jnp sbb sub dec movsl andl adcb cmp or mov pop jne cmp mov mov push dec call negb jmp addr16 pop stos pop roll iret shrb jo in jl sahf cmp mov inc lods bound push pop mov cmp mov mov add pop imul jmp adc mov and cmp call jbe cmpsl outsl insl ds dec ds js (bad) xchg stc movsb jno xchg sahf arpl (bad) rep mov pop orl je loope fsubrp push jge pop xor loope cmp sub mov sarl dec adc xor stos inc insl lods std adc popf push push xchg jb push in les and push sahf dec std sahf jecxz mov xchg mov xchg mov iret lcall sti and ss dec and scas or in pop pop out push mov add fdivrl (bad) fwait enter loopne cwtl sub fdiv push outsb jne mov inc stc mov dec dec pop in stos jg pusha imul (bad) cli dec aad repnz xor pop jp xchg xchg jo cmp loope aad sahf stos pop or (bad) rol (bad) mov mov ret mov outsb cmp mov stc jmp hlt or mov scas iret repnz in (bad) and sub aaa pop sahf xor adc adc add sbb xchg aad dec movsl jb jmp xlat and shlb inc mov outsb mov push int loopne cmp addr16 int scas ret mov and iret add push dec enter cwtd mov dec mov dec push push into sbb sahf mov ret mov in stc dec pop fwait pusha (bad) fstl sbb nop mov movb int std inc mov icebp leave push lock lcall in in dec sub movsl inc out push je cwtl dec adc inc arpl (bad) mov pop neg jl addr16 addr16 outsl fsubr insb sbb lret xchg pop addr16 fstpl sub movl outsb aad scas mov out call clc rol or pop push loop jmp imul xor mov mov mov popf (bad) nop xorl loope or (bad) ds bound (bad) cli adc mov out das movsb test or mov jb pop sbb ret adc mov aad lods ret test jo mov add jns fwait mov popf ret inc add fcoms dec sub rorb outsb cli xor (bad) out test jo or movsl test int cmpsl fnstcw inc xlat pop push imulb dec out pop into ja nop sub js xor or mov dec iret aad sahf mov mov (bad) out jbe or cmp cld ja push adc push sbb fistl gs or dec in sbb jo lods jmp xchg enter lcall int3 aaa mov lahf pop jl mov push dec add pop xor fcmovne sbb pop les fs frstor imul sbb hlt test repz sub sbb push and dec test cld push ret fnstenv mov fsubs ja mov jns insb adc add push or stos adc lods mov ss icebp jnp fucomi cmp mov ret mov sub xor insl cmp ja mov ret dec xchg xor cmc add adcl jp cmpsl push push mov cmpsb pop cmp sbb sarb scas test int3 test dec or pop pop adc mov or ret fldl lock pushf (bad) ljmp or enter jl lock jmp dec fwait xchg sbb imul mov bound in mov loope fs mov pop cmc icebp inc or orl push (bad) into fnsave mov aas in cmp in mov cmc xchg xchg jns add or mov jne sti mov inc hlt cmp out (bad) pop stc jns cwtl jp or jno cwtl les dec push mov pop cli mov lea add mov arpl inc fmuls nop pushf and jne mov pusha push xlat popf cmp jp add jmp mov or lcall cwtl imul sbb mov cmp std jne popa imul in addr16 xchg fildll ret dec (bad) sub and jmp push lret cmp pop dec dec ss (bad) sub lods sub std jecxz lods push movsl mov inc mull xor cmp (bad) push cmpsb or movb arpl test (bad) les add xchg inc inc inc mov push mov out imull dec jns sbb test or dec add cmc cmpsl idivl cmp dec cmp mov ss cltd jnp test (bad) dec imul xchg int3 ljmp addr16 cwtl sub ret int mov and ja (bad) lcall inc insl aam out push ficom das dec out push (bad) popf mov sub jmp fiadd jmp add sbb fwait mov sahf cmc jbe mov lock sub xchg (bad) jne push mov ljmp stos movsb shrl push mov (bad) push cmp cmp cmp sbb jns fidiv lods xchg cmpsb and inc push inc add data16 push push imul aam imul push rolb pusha add mov sub js jae mov movsl dec cmp repnz scas push push push adc sbb inc push dec sti adc sub mov lret pop mov xor repnz xor je inc push jne inc cmp movsb test mov xor push cmp lcall fnstcw andb outsb std cmp cmpsl scas stc add push scas sbb mov (bad) repz mov (bad) fmuls sub mov loope cmpsl add fnstenv and xor jns pop push aaa bnd pop sub insl push test or insl and (bad) jp xlat jno adc mov mov cmp inc push cmp jne outsl ret jg mov jle add and pop pushf add xchg add daa js jge ds shll sub lret add aaa pop dec cld xchg aam jns xor loope or icebp push dec sbb enter jmp cmp mov jo cmp mov frstor inc imulb sarl jmp loop inc add add nop aaa icebp shrb xor ss lret mov pop test decl cmc mov push gs xchg cmp adc jp inc push xchg sub xor cld push adc loope popa sub sahf pop incb dec sub xor scas cmp jo pop dec insb (bad) push icebp std dec rorl adc pop in push gs (bad) xor inc jp lcall mov out adc loope push loop pop xor pop sub cmp inc xchg ja inc fidiv in xchg iret xlat and lret aad cmpsb mov push xor and dec jg push or inc jo pushf (bad) xlat out mov sub pop out jecxz punpcklbw (bad) mov js outsl xrelease dec and mov pop mov mov ret (bad) xchg pop leavew sub mov mov mov sbb js sub xor dec mov in arpl movsbl mov pop pop imul xor ret jl jecxz enter xchg inc aaa popf push pop lods insl pop xor ficompl sub sbb mov xor inc (bad) ss (bad) frstor jl icebp imull mov jo aaa (bad) sti push sahf mov or ljmp cmp xchg (bad) jge sub pop fwait movsb stos mov mov sbb rcll test jle out jbe mov sbb jg in enter cld jne xorb cmp fs ja lods idivl aad push aas imul fdivl mov pop ret movsl mov fadds inc pop nop out jne insb add inc inc cltd out push lcall add sub fistp push lds pop cmpsl sub mov aad xchg pop lods xchg mov icebp shll test rcrb adc outsl cmp jecxz mov fldcw sbb or jnp std sbb (bad) push outsb and inc xor mov pop stos loop pop cli mov jno movsl adc test imul cmp je repz mov leave pop fs in pushf hlt lds movsl push and adc test movsl dec loopne add sti mov lea inc insb daa stos adc sub ds test fstpt (bad) ja lcall pop push into cmp (bad) mov lcall lret cmp hlt cli adc pop add mov data16 call xchg fistpll scas mov cmp dec and adc pop push fsubrl xor sbb ds lock stc das lahf outsb sub pop push pop sub mov sub ja jmp pop lret add mov addb es mov push sbb ss daa sbb pop or xorb ret and fisttpl int3 mov test pop scas movsl lret and (bad) mov sahf push xor (bad) lea leave push push fstl fdivp xor icebp adc jge in insb (bad) or cltd imul bound mov push out cmc (bad) dec gs inc jnp lahf mov add repnz adc adc push push outsb aas add in sbb in add mov lods call sar negl aam test mov mov adc ret movsb inc jmp arpl dec add add inc push jmp xchg sub scas repz aaa lahf test (bad) dec in fcoml or ds xchg sub jecxz dec out mov mov jae nop jbe push or out push jmp mov jl pop fs and mov paddd cmpsb imull xor xchg xchg in ja mov lret sub (bad) xor mov data16 aam aas (bad) mov dec sub out ficoml mov mov or (bad) inc add adc sub fisttpl rolb cmp cmpsb jp cmp adc mov mov push stc xor push (bad) fwait (bad) mov pop dec push cli ja or sbb fs in sbb push dec adc xchg loope jp movsl icebp (bad) in jecxz hlt adc lods xor bound jmp or cwtl je imul pop push or (bad) xor ja and fwait mov es dec lret scas dec jbe (bad) rolb push lds cmpsb mov adc xor adc cwtl or mov es jmp cmp test xor cmp mov (bad) aaa mov in ss sub sahf lret add cmc cmp push (bad) mov and pusha dec mov xchg dec test shr fwait cmp adc sbb aaa dec sub cmp dec (bad) outsb stos lret cli inc bound repnz adc pushf loop pop sarl repz jl pop test mov sub cwtl pop fcompl xchg cmp lods inc push aaa inc mov ret ret mov or xchg hlt aad rorb dec insl sbb sub cmpsb and adc xchg cmc mov sub mov xchg lock add aad push push mov movsl inc lret lds ljmp pop out ret mov sub test jno in inc das push fbstp fxch ljmp mov pop mov or std sarb dec pop mov mov push xchg inc lret add jg pop int sti aaa push adc xchg js aaa push cltd bound pusha inc outsb add adc int3 xor xor xor mov ds mov cmp daa out loopne xor mulb icebp sbb push xor cmp sbb sbb loopne pop jmp mov sbb inc in jo inc popa mov xlat inc imul adc push (bad) xchg sbb (bad) xor popf nop adc aam or mov cmpsl xlat mov pop sub mov pusha call and sbb rorb cmpsb cld add or ljmp stos std dec in mov mov repz xor dec push test jae jb repnz mov aas pop test fstps mov imul inc (bad) pop cld dec mov pushf jl cwtl mov mov mov fs cmp ja lea push fndisi(8087 (bad) iret xchg aaa fcoml push add inc cmpl adc into cs inc sub das rolb dec jnp mov pavgb mov mov push cmpsl sbb inc or fisubr xchg ljmp int cmpsb mov lahf (bad) (bad) divb or pushf mov push hlt sahf mov jge xor mov or je adcl mov jbe xchg jae xchg pop xchg mov adc or mov popf mov fwait out addr16 sti pop sub andl cmpsb pop insl push sahf repnz jl xchg jnp xor sub xor or cld repnz fcmovbe and std bound mov xchg lods cld dec push push sub in dec fiaddl pop sbb arpl dec cmp test xlat adc loop gs add repnz mov stc sbb mov mov aaa cmp xchg mov ds scas jnp lods mov loopne in adc scas fwait cmp and dec pop push and add imul movsb imul shlb sub sbb (bad) xor or jbe daa adc xchg in negl sbbb adc gs mov enter (bad) (bad) int adc adc jl mov push sub cmpsb cmp data16 jno popl ljmp sahf les and push mov leave mov xlat ss dec dec jb pop jno mov sbb dec ret xchg mov adc mov mov mov sub or movsb xchg jns imul mov jo xchg test (bad) ficom or mov or cmp std add arpl mov pop push ret mov mov out in fld mov lahf jns cmpsb push in enter stos test jb jmp add (bad) xor cli push add pop adc mov cmpsb pop sbb mov sbb out jno pop adc mov sahf sbb dec jne js mov cld jg hlt inc push lret ss pop bound cmp pop xor cmp icebp cli jle mov daa and adc xchg rorl mov xor xorb inc inc popa mov dec mov lret mov or mov (bad) cmp outsb orl jnp loope xor hlt pop mov jnp fs ficoml rcll int out outsl js outsb (bad) jl aaa sbb xlat jo fs adc mov icebp push push addb push repnz stc loopne dec enter pop adc mov cld repz aas mov jne fwait xlat sbb dec or insl mov sti jmp jle outsb xor mov lods cwtl je,pn jns xchg in mov popa pop xchg shll test sbb adc out pusha or pop ffree dec push std adc push mov mov push or add add outsl pusha cltd mov jno out mov fdivrl loopne (bad) scas call and lods jge lea sub dec test and or and jl xchg dec repz sub dec repz push push push fs pop lcall sub iret dec (bad) push test add dec push xor in push sub push dec sbb sub mov mov jecxz cmp mov xor mov outsb cmp jnp adc cmp rcrb stos and or mov or js cmp mov mov inc shll mov push cmovne pusha mov jnp lea idivl addb jle call loop fs jp inc dec ret ret mov ljmp out xchg (bad) popf dec sbb cwtl push sbb xchg add es aaa mov repnz adc stos sbbl lods mov repnz lea cmp pop sub xchg jne daa out and push xchg push mov xor mov pushf xrelease inc scas das dec jp pop sbb cli cmpl out pop mov mov pop mov out loopne lret fist sub daa shld pop and pop fs int add mov rcrl fwait sub cmp clc gs (bad) je arpl mov xchg pop pop add data16 sbb aam jne or xor xor mov mov (bad) lock mul jnp stos pop iret mov arpl cli mov (bad) fbld insb sbb insb push cmpsb (bad) inc fmuls mov mov pop fs push repnz test lock mov mov sub (bad) loopne and sbb and ds and mov mulb xor adc xchg je cmpsl jl pop mov xchg push repnz inc mov test xchg aam xor cmp pusha jne bound and xchg loope gs gs add cmp fdivr icebp and adc out popf mov outsb ds mov sub xor dec inc dec mov ljmp out adc cmpsl dec lret push shlb inc daa add pop loop js adc sub dec imul or mov inc les insl testb not add dec subb dec frstor mov add sub lea mov pop test cltd cmp mov shlb les ljmp daa mov or arpl jno stos ds je ja je mov push insb stc subb imul jl cli cmpsl scas sti push fidivr or sub lea mov mov jp xchg out push cli adc mov add repnz and inc push pop insl inc addps cltd inc aam add lahf sub (bad) mulb iret mov sti mov jle xor outsl adc (bad) ret sbb rep daa xchg das xor (bad) mov pop ljmp sahf cld mov inc jmp mov adc fwait movsb dec push push ret or jno arpl outsb in jp fs (bad) dec (bad) cld in enter nop sub mov add sbb ret jns or xor inc jle pop rol dec cmp rcll rcll xlat leave (bad) jo mov jle aad gs pop (bad) ficomp movsl mov push mov ds jb scas rcr lock mov inc data16 insl in mov mov fimull rcl jp pop aaa les sar pop and push mov movsl xlat pop sbb xlat mov sbb lret sub and pop repz add roll push adc xor push push mov adc aaa (bad) jl cmpl dec aam stc sahf sub xor dec inc cltd int3 xor inc fwait cmp stos jnp enter sub lock loopne mov loopne pop je dec cmpsb inc ja inc push sbb cltd ljmp leave cs sub lahf jo and jg cvtps2pi sbb dec and cmp popf cmp jae push rcrl idivb cmp ficom dec pop cmp int3 push fldpi (bad) jnp not jns xorl sub movsl sbb mov cmp mov ss clc das adc stos test or sarb xchg mov adc lock clc daa jbe cld cmp adc push mov repnz (bad) mov adc repz xchg push pusha sbb (bad) (bad) lret mov adcl in int3 incl inc fsubs or cmc aas mov pop dec xchg pop jp iret sbb stc and adc in mov out xor sbb aad cwtl adc leave test jmp add push test pop test out jnp dec jb push dec adc sbb xor xchg pushf rcll jmp mov fild es push cmp ficoml cmpsl mov pop pop ret lahf fldcw pop ds sub scas les out bound aaa mov rcll lods hlt mov ds lds mov xor loope fnop dec out fnstsw jg and rorl inc push stos sbb push addr16 ds nop sti push mov add xor pop xchg cmp loope scas lock dec rcll pop lret jmp or iret int mov mov push jno imul lahf sarl in push or fwait push cmp cmp adc sub ds (bad) aaa aaa test push pop push pop and jg jb push ljmp test sbb mov insb push leave pop mov std ss pop xchg lret in or movsb push mov add mov xor addr16 jns pop push stc mov ljmp inc sub add cmc in out push cmpsb push lcall or xchg push repz push dec xchg icebp (bad) jno aas and and (bad) loop lret fwait jbe or arpl xor and lret xchg test sti fcmovnbe sub dec inc iret jb add movsl ficoml ret add xchg inc sub scas popf adc mov test movsl loopne test aam xchg jg out add jo or psubb nop pushf ja cltd les mov mov ret inc rolb and mov xchg insb mov (bad) sub fs sbb outsl mov add pop sub jg je jno sub loop (bad) xchg arpl xor mov xchg dec in xchg cld push (bad) cmpsl fnop sub cmc pop mov test sahf add arpl mov lods sub inc in repz icebp or sub pop sbb jno push cmp xchg cltd jmp jg cli pop call pop loope das push (bad) sub ja addr16 inc call in mov dec adc pop inc inc push pop fcmovb (bad) cmc cmp mov xchg lret loopne aas jg sbb xor pop adc sarl sbb hlt test mov mov ljmp push xor sbb xchg add mov lods pop imulb sahf ficom dec and out nop xchg adc stos adc adc push pop fs outsl push sub fs sub mov repnz ja xor dec mov sub mov stos (bad) sbbl mov sar jmp insl scas push (bad) lret pop dec ss rorb adc pop aaa lret push adc or ljmp out inc in fcmovnu int3 and std push adc xor or push dec and add push jle lods jecxz into sahf sbb or sub or ficomp dec inc push push scas pop mov int jns mov sub (bad) jno ss dec data16 jno cmp sar out repz stos (bad) aaa adc add and fdivl sub sbb ss shrb push (bad) pushf sahf nop or dec ficom add repz adc lods insl outsb and sbb xor push pusha inc subl out xor push sub lods lods push mov imul in sbb mull lds sbb inc sti fsubrl push (bad) xor enter frstor je xchg mov (bad) sahf mov push xchg and mov jo js lret sbb shrb mov pop test test jg lods push inc inc leave inc sub pop xchg arpl aas sub loope iret in das mov and or xchg jbe cmpl pop ret push cmpsl pusha iret lcall xchg sub popf inc std enter jecxz jae (bad) or pop adc js jle mov imul push push sbb sub push pop add mov enter shll (bad) push pop out int3 inc rorb popl fild in jmp rcll push ja in loopne nop cmp xor popf xor fsubs mov sub push xchg in add xchg lcall mov dec rorl test movsl pop (bad) jne divb cwtl in mov xor jo or (bad) cli arpl or addr16 xchg loopne mov sbb jle push cmp incb ljmp mov adc jae scas xchg cmp inc (bad) (bad) mov repz lds cs xlat aaa push imull icebp push sti mov sub xchg jno test sahf in scas mov test dec movsb sub jg adc adc in dec es mov or jnp sub jae imul insb mov jg mov jns int3 jno shlb push xchg roll (bad) stos fstl cs lock aam pop lahf or mov sbb rcr add fs xchg incb rclb sbb push push xchg jns pop cmpsb sahf bound arpl jno (bad) les sbbl and fisubrl fadds xchg xor xchg mov jg ja lret jmp es add and cli inc adc inc mov sub ret or cmp cmc jmp ds fiaddl mov adc leave les imul imul cmc and out loopne mov xor inc loope pop nop cwtl ficom les dec sub mov stos pop mov sarl arpl outsb stos jmp stc adc mov jecxz xorl sbb test sarb mov jge shll (bad) cmpsb enter es push dec inc lahf mov into ret aaa push lea sbb lock scas (bad) xor xlat jne and dec fnstcw cmpsb shl push xlat dec adc cwtl inc insb popl std xorb jecxz xor (bad) pop (bad) aad cmp inc adc lcall outsl adc push inc adc inc fdivr add sub mov and cmp mov push test xor ja gs fisttpll xchg subl lcall cmp push cld hlt mov enter mov ja pop dec lock outsb lock sbb std push pusha push inc xor test mov hlt jbe jns (bad) rolb je fwait ds mov aam imul test stc nop mov shrb in xor ds jb jns shlb xor mov (bad) cmc ret cs cld and shrb aaa and inc mov cs fwait dec (bad) popa inc fstpl cmc and daa mov push cmp pop mov jmp fsin ss (bad) fcoms mov mov cmpsl sbb mov lahf add add push cmp dec popf mov pop adc fmull xor xchg in push cs push add push stos movsl fidivr in xchg aam loope sub popf loope sub lock jnp inc stos popf lock mov jbe or out push add jo movsl add sbb mov xchg and mov js jle leave cmp out push jecxz mov stc mov mov dec xchg cli (bad) pop adc lods lds jnp sarl pop inc pop xlat out cmp mov sub and add lods lret push rcrl (bad) out ret inc push jnp repz push push aas jns jg sub xchg jnp push mov sbb mov push outsb cmc mov mov xchg arpl fstp (bad) mov insl (bad) scas adc inc aas pop out sahf jmp cs dec pop outsl rclb gs mov xlat or addl sub stos jb (bad) push out idiv inc je mov les sbb (bad) (bad) sbb fnstsw lods mov push and nop stc pushf scas loopne sub or push lret (bad) mov sti push xchg popf nop xlat fsubrs in jg out or jo (bad) add gs add cmpsb insl out mov or dec movsb push adc inc pop (bad) sar or mov jo ljmp scas (bad) cmp inc pop jb negb aaa jae mov push lds pop mov iret pop (bad) adc in mov sbb ret insl cli adc or test dec mov push fnstcw mov pop inc dec jae repz scas mov mov mov and lea fstl mov pop mov cli pop pushl add insl xchg mov xor out sti pop notb dec fstpt (bad) lods xlat jbe inc pusha push mov (bad) xlat push mov jns mov xor nop dec stos add fidivrl mov mov lods cmp fldenv xor int mov mov push test dec fiaddl add jg cs jle (bad) xlat inc mov imul fistpll lcall (bad) jne dec fcoml mov dec cmc out insl out into addl out push push add (bad) cwtl ficom xchg xchg fidivr imul push sub cmp repnz adc and jle add jae sbb lahf test mov (bad) sub lods mov test jbe mov into mov enter and addr16 adc in mov aad adc fisubrl push pop aas pop stos and (bad) lret jecxz xchg add movl insb sarb lea scas jp iret mov dec mov test cmpsb fwait test and ja xor stos int3 pop inc pop cmp sub loopne lahf nop jge leave imul iret movsb inc sub push pusha pop sub imul or sbb lea mov dec and cld add enter or jg mov fwait iret mov lods dec lahf out lds shrb pop inc sbb lahf xchg in out xchg jmp dec jecxz and cmc mov mov lods xorl fidiv shll fcoml sbb mov lock xlat mov mov into add sbb adc imul daa jmp dec das xlat adc out lock scas in pop mov popf mov and add mov jmp sub xchg mov dec insl xchg test xlat fidivr adc jnp cld dec das enter jg,pn ljmp push test repz sub xor cmp data16 js repz and roll xchg sbb imul push scas mov iret movb cmp lret cmc mov sub and jb mov mov stc jmp sbb sbb mov arpl pop scas cmp daa xchg aad enter and (bad) in mov pop mov movsl popa inc int mov jae xor hlt xchg out cmp mov mov add (bad) adc out fs lods sub lret hlt sub aam fnstsw (bad) aam cmc out (bad) jno inc scas leave jo imul cmpsb subl mov jle dec xlat sub pop push or pop fcmovb out xor lret std ljmp std xor add adc stos mov push mov aaa negb arpl leave push cmpsb fsubp sbb clc cltd xchg outsl sub leave sbb movsb sbb lret xlat pop pop je out into cs mov pop jl loopne rcrb repz call call outsl lods loopne iret lods cmp push adc cltd mov cli out inc push mov mov ret das xor push mov pop xchg shl push mov mov into out out insb inc cmp pop mov das jbe scas inc inc xchg shr pop or dec je push sub mov cld mov loop lret xlat in mov fwait ret jbe cmp (bad) fucom js js popa scas fbstp and sbb test mov daa sbb lret fstpl cltd pushf mov ljmp cmp xorl lcall cmp dec push stos lahf and sbb or arpl fsubrs jge stos xchg inc sub hlt ficom mov sub rcll loop scas mov xor aaa adc mov xchg fcoml es leave das pop xchg ret pop cmpsl stc mov (bad) bound stos subl out jp mov das mov dec cmpsl (bad) fistpll xchg push and pop stos stos jbe (bad) push adc outsb mov in lods mov push cmp xchg out mov push fsubrs or sub push jecxz push ja pop in fistpl xchg dec or push inc cmp rorb push jnp (bad) mov push sbb mov enter shrl lock xchg add cmpsl lret xchg insl int3 out test inc mov shl pop jns jb mov popl (bad) sarb (bad) and sub pushf rolb sub fadd sbbl inc movsb lret push hlt fsubp addr16 dec int3 cmpsl hlt dec jno out shll xor xor lods dec mov fbld pop sub mov push and mov test mov nop push mov aas vmovaps test jp pusha xchg inc push out test mov cmp pushf outsl lret jecxz mov cmp repnz mov lea xchg push ljmp xchg push fmulp ror mov dec mov test xchg fidivl push test pop xchg dec or (bad) rolb and and xchg fldcw cmp mov insl enter pop mov sbb rol xchg jl pop dec (bad) sub insb iret push mov pop mov in bound out push mov sub and popf push (bad) (bad) stc xchg sti mov movsb inc sub add decl push push pop cmp or mov lock mov jnp pop out in cli in xchg mov and notb push movsl movsb stos push push cmp inc xchg inc cmc enter int add int or add cmpsl les xchg mov in push push daa sub iret arpl mov out cltd popa in pop dec iret js jp pop fisubrl lea (bad) cmp or push leave aaa dec add push das inc jns cmp movb mov jno inc nop aaa das jg (bad) dec mov nop or cmp pop inc out out repnz lret in pop cli lahf cltd pusha fldenv push icebp jg xchg nop rcll test xor std (bad) or cmpl imul add sub mov out inc jbe and cli xor lods and jmp pop in push lcall shrb push aaa sahf insb std xchg das or cmpsl mov out pop inc insb xor sub add aad iret xchg sub insl push inc addr16 adc pop jecxz and scas push pop ret jp and rcl rcll sub scas jle xor ja xchg orb adc fstpl add mov cmp adc lods imul push lret loopne dec dec xchg adc push add out cmp jae push mov fidiv dec sub xor ret jmp xor xor cmpsb loope (bad) leave jmp loope roll cwtl je mov test loopne decl cmpsl sbb sbb lcall das loope xchg (bad) loop fdivrs aas sbb movsb push fwait out dec xchg push pop in sbb inc mov rcrb aad repnz das jae sub (bad) fldcw cld daa loope adc xchg fstpl dec add lahf mov inc lret aad add lods insb je jno cmp movsb enter je cmp sbb xor xor mov icebp movsb clc jp (bad) jmp sbb cmp into mov mov dec loope mov mov cmp aam test add inc fnop xor adc lea xor adc cmp mov xchg xor jbe mov xchg jge push pop sub sti mov test cmp mov and sti pop (bad) cwtl punpckhbw ss js mov stos sub enter outsl mov dec in adc dec addr16 lret outsl in sub pop dec ret aad aam das dec xchg adc lods pop loope inc mov imul push inc lods in mov stos jbe xlat inc cmp hlt adc es ficoml inc or cwtl movsl mov sbb jae lea clc push bound add sbb cwtl sub subb push cmp fisubl loopne xor call adc fnsave sub push lods mov xchg mov icebp and add data16 popf (bad) sbb jne fucom mov jne jmp pop push inc stos cwtl xlat cmp test add inc addr16 xchg aam xor mov adcl sub jmp hlt push call in xor sbb push xor lret sbb stos aaa faddl or jge pop adc mov add mov (bad) sbb (bad) fsubrl popa and int sbb add jle and push inc lods push mov sti jmp mov lea loop repz fisubr aaa add cmp jge inc dec xor or xor and pop scas xor (bad) pop mov mov mov lcall xor int pop std mov cmp mov inc or hlt fldt lea xor push lret icebp loopw add ret icebp xchg add fisttp inc jg xchg lods adc stos popa arpl jp adc fmulp ret lret fsubrl daa arpl pop pop mov movsb insl and int3 jg fwait sub sub push xchg add pop mov negl into lret rcr rorl add out inc mov movsb jl mov and sbb test movsb jb data16 call mov adc scas (bad) jg sar dec xchg xchg aaa sbb mov test fs adc dec sub orb xor mov pop mov movsl xor push out sar lahf sub lret (bad) push jo sahf mov sti and mov jmp jg out xchg mov or and les out data16 insb imul jo mov add lea dec je and jne pop mov popa fcomp add stos push and outsl pop xor fcomps pmaddwd inc lret fidivrl mov push mov out xchg stc call notl icebp pusha ljmp dec test cmc cwtl imulb movsb push jmp inc and dec xchg aas sbbb inc das repnz dec mov mov or sbb fsubs lods sbb sub cltd fstpt push xchg notb shrb gs jecxz lods jne and mov je xchg mov xor movsl sti scas movsb enter push push outsl xchg sub xchg mov push cwtd cmp popa (bad) push cs pop inc scas mov aas mov test fidivl aaa sub push mov mov pop je jns inc pushf mov je xchg xchg sbb pop leave pop add popf adc aas cmp add push clc jmp push mov lahf loopne inc (bad) out push jp adc sub jo push pop sub sbb dec lock sub sbb pop psraw inc adc cmp fbstp inc push inc nop cmp xor xchg pop mov gs xchg lret mov in push insl xchg lea out xchg mov dec insb lods aas sbb outsl loop test je cwtl cmp xchg add roll sub mov ret fbstp iret add (bad) addr16 jb push or sub inc pop int3 stos addr16 cltd clc or sub hlt cmp xor or add (bad) cmpsl sub mov pause mov int3 (bad) lcall lea push flds jmp call pushf push mov loopne inc dec push shrl pop arpl dec daa mov repz movsl cmp scas insb and xlat and jne pop mov xor sub shrl inc fcomp bnd pop push call xchg dec roll sub xor pop xor mov mov inc push or dec cmp add iret incb into loope lret mov andb sbb sbb mov aas add insl xchg loopne lods shll mov or enter clc mov dec dec cmpsb imul outsl push adc aad lock cld or or inc cmp mov repnz or movsl dec mov lcall adc (bad) (bad) mov inc xor ja xchg xor and fsubrs test sbb xchg dec fwait test inc cmp add push pop xchg adc in ljmp nop hlt je faddl ror into xor or and dec jno push loope aaa test mov pushf mov je cmp mov arpl jl sbb xor pusha add sbb or insl mov cmpsl loopne push or and sbb xchg dec iret mov jp aam xor stos cmpsb int3 fdivrl pop xchg dec mov push add (bad) ja lcall or into lds (bad) jl stos or sub (bad) mov js xor cmp pop stc inc fidiv fimul pushf bound out lahf xor hlt aam into sub cmp sub sarb test fisub sbb dec or outsl cmc mov cmp push std icebp mov les adc imul in mov and mov icebp mov scas lret mov mov xchg cmpsb pop jne (bad) mov xchg nop and dec xchg mov test cmc cmpl jnp xchg pop cwtl data16 xchg mov push pop sahf or fiadd cmpsl mov mov mov pop and cmp int int mov pop loopne cmp mov push aam xlat xchg sub sub (bad) hlt add pop jg jae cmp mov popf xchg cmp mov xor aad popa sahf xchg imul push sub jecxz stos push adc and (bad) outsl imul dec jle js mov or test pushf adc and cmpsb nop jns mov add push jne inc repz jl addr16 or orb push inc dec add mov xlat in jae add pop pop inc push cmp and xchg mov push xor push pop (bad) jns test clc push adc fiadd pop subb (bad) in push ja mov jg and and fstpt push mov pop data16 dec sbb sbb sbb pusha fsubp xchg aaa mov or lcall int3 stos xor (bad) push ss mov int3 sub or push scas aas mov dec cld mov pop (bad) adcl pop jo ljmp (bad) push add sbb mov sub fistl jae daa addr16 dec (bad) or xorl pop into xchg (bad) int3 pop adc jle mov mov pop ja xchg (bad) mov loop fldenv enter mov sbb and loop dec pop jmp test fbld sub xchg in das jne xchg xorl addl (bad) out adc loopne pop mov cmp cmp ja cmpxchg8b in dec lcall in mov push or mov mov inc outsl adc jo lds lret dec cmp cmpsb lcall je add jp cwtl and in xchg arpl in loopne inc xchg stos jecxz pop fdivrl dec repz out add xchg test mov insl add push shr into jbe insb mov ds aad lods mov sub xchg jecxz and push out imul into orl mov js dec outsl (bad) call lret aas sub clc mov imul in stos fwait out aaa jo mov mov lods cli or inc (bad) out jle aaa mov xchg jge stc mov outsb add ljmp lret je loopne inc mov mov jnp xchg lods repz add push sub stc icebp and jae shrl popa data16 inc out std lock ss das sub sbb add ret ljmp mov adc cld jae sub fdivrs ret addr16 lahf pop into insb mov ret and ss ljmp jmp xchg outsb pop lahf xor orl daa (bad) imul lahf cltd mov dec aam cmp or mov imul lcall enter xchg arpl jl jg fldenv into lods push stc mov imul rcll subb add rcrl (bad) (bad) add out ds lds add and sbb lock arpl dec in add jecxz push pop pop mov cmp fiaddl pusha or enter jae xchg sbb mov imul mov loopne sbb gs in xchg or cmpsl mov pop mov jl adc jo stc lret inc (bad) sub cmpsl loop movsl outsl xor jge popf loop push xchg in gs (bad) cs imul pushf sub fsubrl (bad) xchg test mov jecxz cmp lahf push clts mov popa and stc loope push fcmovnbe mov jns pop loopne popf pop out aad mov fistp cmp lods lods cmpsb cs adc loope sbb lcall mov cmpsl xchg in arpl fwait lret in lahf jecxz sbb mov clc stos jp sbb sbb (bad) in aam cmpl jecxz sarl xchg jo inc imul cmpsb inc adc sbb fsubrs iret mov xlat cli (bad) and ficom mov cmp push jb (bad) int3 xchg ja out jl sub mov sub mov nop push inc mov and loope (bad) enter fsubl pop sub insb nop pop daa fisttp jecxz and sbb push lock pop ds jnp test out stc decb sti cld sbb adc cmpsb sub jb test inc fldt stos and aaa cmpsb or je pusha jns xor xlat cmp xchg stc test ficomp bound push cwtl out xlat inc and push popa loopne jb add (bad) lahf mov xchg push addr16 nop loope xorl fldt xor mov cmc shrb mov iret pop mov inc pop iret ja mov xchg xor sti outsb mov je pop insl adc push or ret (bad) call repnz lods adcb rcll cmp dec out mov (bad) lock shlb aaa (bad) push sarl sub push ss popf dec mov xchg in fwait mov aas leave mov insb loope and mov stc fisubr notb nop push and add dec jno call (bad) cld dec fiaddl inc rorb xchg push sbb sub jbe add push xor adc ja or test scas lods dec insb ret into mov xor mov ds shrb mov cwtl std out insl rclb lret jle jg mov cmp add aaa lods mov movsb lret xchg push leave lods mov sarl data16 das push push in loope inc (bad) push in test mov push adc cmp fwait ljmp adc add in push xor std mov cwtl push sub out xor scas push and xor ss jne (bad) sbb (bad) jae inc pop jno jo mov cmp xchg cli popf dec xor clc mov inc and cmp cs (bad) add ljmp ss push fsubrl mov aad mov or addr16 imul fsub vcvtps2dq lret cltd (bad) dec push lea mov ljmp fucomip fisttpll xor add lods add pop adc lods adc decl add aas push and xor call dec cmp (bad) xchg jl pop sub (bad) and mov arpl push call ss jno add pushf in rorb mov cmpl and mov mov loopne add xchg push nop mov inc aad nop les add jns sbb cmp imul fs les cmp imul mov mov cmc push sbb push pop out push sbb enter out test notb inc rorl das daa mov orl addr16 cmpsb xchg mov fidivl xchg push les stos cmp call sbb ret daa es lods jle movsl repnz int rolb fdivrp jae loop jecxz xchg (bad) movsb xchg repz mov inc xor sahf enter ret mov aad sbb lret mov lret orl dec pcmpgtb pop mov in jnp lods into adc inc inc es dec sbb mov popf xor jbe mov adc lods sub ret ja xor imul mov push xchg pop mull test cwtl movsl push and les out mov cli addr16 ret mul test mov push out out pop xchg push mov adc aas mov mov jnp and jae cmc fidivrl mov in unpcklps push or repz mov mov (bad) out (bad) mov fnop push clc dec fcoms cmp cltd outsb repnz adc sarb (bad) sbb daa xor shrb mov push cmp dec cmp aam cmp mov lds sbb sub (bad) adcl test xchg cmpsl mov push push pop cltd mov cld xchg mov fs push rcrl ss int3 movsb push inc inc jl adc inc mov sahf inc fnop (bad) push mov movsl cmp popa aas fs sbb fstpl fsubs lods nop movsl cmp out mov cli push add and scas movsb push xchg sbb or addr16 adcb inc jae xorl jmp pop mov mov lahf sbb stos sub movb inc js sub (bad) rorb pop in lods pop bound add lock (bad) ja out push fiadd data16 mov scas bound pop in icebp adc stos inc out sbb cmp xor lahf lcall push js push cmp adc push fstl add dec mov test fsts sarl cwtl fistl mov out jecxz jbe les jmp mov or mov mov aaa sbb jmp test je out add xor aas xchg (bad) pusha jnp xor nop dec hlt cmp je or adc out pushf out cmp sub mul jno pushf mov lcall jnp mov mov sbb inc mov mov jge xlat push dec jbe hlt xchg push mov cmp or popf movl loope adc pushf fmull sahf push leave cli lcall inc stc jbe lock xor scas sub test cmp and je dec lret sbbl pop (bad) sbb xchg sub ja inc push push repz add insl cmp dec dec xchg push pop mov test cmp insl and add into sub dec cmp and and and pushf mov push imul mov pop cmp into cmp lea pop mov inc rol (bad) aaa pop popf jae mov jl,pn pop xchg leave cltd push loop (bad) lret cwtl jle inc hlt je xor lds cmp xchg int3 je negb loopne and lea loopne xchg mov stc ljmp lds sbb in adc (bad) call shr call push cs pop es or stos lret sub fdiv mov adc aas mov push jle gs pop pop xor xchg andb iret adc dec scas mov xor movsb and je push mov leave mov je jge mov dec in popf dec test (bad) inc int xchg push pusha (bad) loopne xchg out xor js xchg frstor and (bad) jp push sub addr16 fcmove xchg xlat lahf aad jle sub sub and scas mov mov push add leave bound and dec push push xchg andb mov loope sub adc mov add cmp push arpl mov sub movsb movsb popa mov push sti push add divb mov cmp inc inc sub lret mov cs (bad) in lret pop dec fwait daa cmp push mov and and cmp pop cltd sbb sbb jge push loope sub or jae pop push jp loopne insb xor sti or icebp push fstpt aam xchg push lret in repnz jge push xor cs push jp pop ljmp lods jns jp iret sti mov imul nop imul (bad) negb dec (bad) stos pop xor push pop lods push inc jmp dec aam cwtl dec and jp xor pop mov test (bad) icebp mov and dec ss xchg addr16 stos mov pusha call loopne pop imul xor and imul sbb sarb or sub mov mov mov mov jns dec adc mov scas fnstenv mov in mov aas and repz (bad) inc cmpsl repz in mov out mov fcmovb mov push idivl fstp cwtl mov pop jnp cmp push cmp lods jl mov xor sbb pop jecxz rcl iret es xor test out pop adc ret dec pop (bad) aaa out in xor jmp dec jp mov gs inc into jne ljmp icebp pop js sti sub xlat cmp dec jecxz lock sbb pop es insb jb int3 scas add mov mov xchg cmp mov scas dec or sar push std repnz daa xchg inc xchg jbe dec jo addb push ret adc lds (bad) fisttp (bad) add cmc lret out xor mov and inc jnp cmp cmp aas push adc jl pop repz aas push cmpsb sti in dec mov in xchg xchg push aaa xor cmc adc movsb mov mov mov outsl sbb int3 ficomp and cmp stc xor hlt cmp add xor test and pop jge xor inc mov jns inc xchg xlat lcall cmp mov push in sbb fistl idiv out or mov push cmp push xchg decl outsl inc and enter mov jg test pop fdivs mov and adcl and inc sub (bad) pop pop jle shl xor cs pop pop jecxz test sbb lcall cmp lret adc dec cmovl mov or xchg rorb icebp sbb (bad) pop cmp pushf (bad) mov out jmp js hlt repnz and call mov frstor mov add dec and add push xlat cmp test jbe lahf mov in ljmp inc clc xor addr16 sahf in in fistp dec jmp mov pop out lcall cmp add sub aaa push push or ret cmc xor outsl in vandnps pop test or call arpl and ret es mov lcall mov xor mov jne outsb cmp mov addr16 xlat sbb or cmpsl xchg adc dec mov repnz pop subl sbb (bad) and or mov jmp push pop aad daa jno mov mov insl hlt ljmp mov push das push (bad) push sbb insb ds stc dec xlat icebp jnp mov lcall sbb push sbb and mov adcl insb out mov (bad) sub jo xor add jmp adc dec mov or lahf pop adc test divb or lods aam imul add push pop or mov sti jl and test sub inc aaa es jae aad mov jp inc cmp inc cmp jne repz cmc push mov push or addr16 (bad) cmp jecxz xorl jmp rcrb pop xor adc int3 jns pushl dec (bad) es sti pop (bad) (bad) adc es xlat aad pop lcall rolb call inc mov push dec cmc leave jg clc xchg iret into cmpsb roll fisubl jge (bad) mov inc mov movsb cmp cmp aad pop stc mov repz xchg mov nop jae insl lods xchg insl mov xor dec add pop and (bad) inc les (bad) mov push push pushf wbinvd sub mov xchg sub mov sub and xchg add xchg dec add xchg adc pop and pop fstps dec cmp loopne xchg imul cwtl sub imul sahf pop cmp mov cwtl call xchg jge mov in pop push int3 int3 pop into mov pusha loopne das adc mov mov ljmp lcall xor (bad) bound jle call push xchg pop lods add loopne out lcall shr sbb clc shlb mov mov sub movsl movsl mov ficompl in out fiadd and fxtract xchg rcl mov xchg rcrb push mov or mov sbb test push out push pusha fcomip sbb sbb hlt int3 jo imul dec (bad) xor fucomp movsl dec imul xor mov xchg aam call test ss (bad) or lods xchg pop lret push mov dec js shl stc and pop mov data16 dec pusha fwait lahf add stos ffreep test fistpl das jg scas int3 daa push bound cmpb push lret xchg xchg aas stos pop inc jge mov xchg inc cmpsb data16 sahf clc ret mov pop add fdivl mov and mov outsb inc icebp mov fldenv or int loopne shrl jae repnz lds fldcw popa loop inc shrb and outsb daa inc icebp lods lahf push sbb popf add les pop enter (bad) pop rcrl inc enter cwtl into sub test add adc rcrb xchg clc push loop clc add sub call jmp push or mov std inc cwtl xlat xlat test dec jl mov or aad in repz lret xchg inc xchg rdmsr mov xchg adc mov icebp les in mov pop pop inc sbb pop (bad) mov mov push lcall and pop mov or gs xor jbe (bad) or and movsl and sbbb push (bad) or or in sbb stc sbb sbb cltd sahf ss pop sub daa insl ret (bad) xor xlat imul mov xchg adc push fsubrs cmp decl into out adc push add or rcrb scas sbb xchg mov or aaa aam pop rcll inc cmpsb pop push cli mov hlt pop xchg loop or loope insb ss dec xor aaa jns loop sbb mov lret rorw pop pop adc jne repz sbb arpl loop mov cli mov jbe inc (bad) sub out cmpsl sbb cmp sub sbb jp xor mul mulb in inc out call push mov push test mov jmp push int3 lea mov pop jo lahf mov fnsetpm(287 cmovs xchg sbb xor mov or jp test shrb loope push dec add inc sub sub (bad) out aas repz call ja adc pop lret fnstenv jo sub cmpsl (bad) cmp jp or shrb xor xor adc jg lcall and mov (bad) std mov adc dec mov das int dec cmpsb or insb xor icebp xor cld xor data16 fcmovb cmpsb pushf pop sbb imul mov imul or les lock mov mul mul and mov popf cltd add decl dec jp lahf rorb mov xor push jle adc add negb ja sbb dec fnsave lods adc int3 dec dec ja inc pop sarb xchg mov ja cmp xchg je pop fmuls fwait pop out xchg push xor xchg sub inc mov dec mov cwtl xchg scas push push jnp jno jo jmp xchg jge xchg mov dec ror rol mov std lods outsb popf (bad) (bad) jl sahf dec cmpb sbb sahf mov test sub lcall add cwtl imul test out ljmp test add scas pushl cld jg pop lcall xor dec or clc dec in push mov mov stos hlt movl out (bad) jge inc mov lods cmpsl hlt and and mov cmp sub cltd dec fildl dec das cmp or push pop les pop cmc outsl push and stos fnop mov push aad lods int xchg cmpsb arpl loopne pop pop out and push scas lret aaa or jmp or sbb sub push int and mov lahf pop clc into mov cmp sub jb mov sbb fs mov bound outsb aaa iret xchg inc sub std arpl cltd inc xchg stos adc cli lret inc ja enter call add insb xchg rcrl fwait aam jp icebp je pop cld mov lods loopne and sbb scas stc add add sub dec js lcall sarb jbe int3 js lock jno repnz xor lret dec shrb pop inc fnstenv in sub test sbb fidivl repnz rolb fs shrb (bad) fcmovnu je sahf jae sub inc stos fistpl movsl je std pop cli pop lret fistpl sbb xchg cs inc pushf in jmp icebp jb adc out push test add ja jge cmp sti imul inc jmp insb pusha xchg inc push mov inc rcl addr16 jge xchg imul sbb adc icebp out jns jl ret jb lea popaw xchg pop mov ja or xchg inc mov rolb or and aad push pop xchg dec movsb jns fldl ret es mov fdivr pop sbb fnstcw add dec xor and xchg adc mov addl pop cmp fs in pop inc fsubr and mov cwtl inc cmc mov add lock adc jge pop xchg xrelease pop add mov lahf xchg cwtl sti mov gs xor cli xor adc push xchg sub sbb xchg mov mov xchg mov (bad) cmc or mov fcoms fimull jmp xor push (bad) out jg push mov jmp dec int3 stos mov sbbl push push pop fwait and popaw pop bnd adc or imulb mov mov call lods xlat xor insl lcall ljmp mov jp push lea jae subl lahf gs xchg inc cmp (bad) mov or pop je ret lret out pop (bad) mov jne inc jge enter adc popf (bad) ret jp inc repnz cltd insl pop push insb xchg pop or fnstsw xor xor sti dec std xchg loope mov push sub sub shl ret mov hlt fidiv xchg lret mov xchg repz push pop fisubr push dec mov stc (bad) mov popf lock mov add aad int loop xchg adc jnp cli and gs jb (bad) adc cmp es cs or push out (bad) repz jge pusha adc xor rcl clc xchg xor stos sub lods or adc ret or cmp sbb iret adc add loopne rorb outsl or mov adc pop addr16 outsb mov jp mov inc pop (bad) xor test mov lods push and hlt lods and mov lods jmp ret push stc push stos mov ds dec pop cwtl or jmp jecxz cmp insl incl jns (bad) mov imull or mov xor xchg fidivrl test dec jno push xchg es xchg hlt cwtl inc push int3 cmp push xchg in xor pop mov addb cmp test mov adc jecxz jb jno jecxz fsubl cltd push icebp xchg popf test pop or (bad) cmp popa das jo inc gs std sbb adc pushf push (bad) xor (bad) and inc icebp (bad) dec in fist ja jne pop int lret push dec or lret addb cmp jl (bad) and sbb jbe jno or push leave inc fcoml push mov adc jns add ds sub (bad) lock and xlat std xor and cli mov loop (bad) rol pushf sbb jo fcomp ficoml mov dec aaa mov test sbb das lcall inc add adc add mov fnop popa (bad) jb aas je nop mov fwait jns fwait leave dec addl adc sahf scas adc jg xchg cs sbb mov out pop and fcompl in jle xchg and xlat push pop lcall popf fdiv push and ficom in inc inc int shrb xchg adc jbe sub mov addb clc les inc adc out mov and aam cs and rcrb mov arpl xor (bad) xor lcall jae xor jns cmp mov cmp pushl lahf or push jbe mov and pop loope (bad) or (bad) outsl cmpsb insb mov dec imulb cltd and push outsb (bad) mov test ja scas cld push push xadd inc adc push in mov pop xchg fnstcw inc es add (bad) mov sahf movsb test push adc mov pop inc cmc cmpsb (bad) in es adc jae cmp xor mov (bad) (bad) mov inc dec (bad) lret pop lods or cmp xchg cmp leave mov pop enter cs leave sub mov cmp sarb lods dec mov lods jb or les add jp sbb ror cltd pop pop jl movsb popa ret and es jno in ja sub sbb push and xchg mov push cmp in imull (bad) mov mov pop mov sbb sub insl mov in rcrb outsb inc cli xor inc dec push push add jo xor shrb cs mov jp jge add rcl bound rcrb pop push loope add adc test outsb push (bad) fcom cmp outsb imul pop sbb sbb and ja cwtl out pop pop mov fs jle adcb loopne mov jo mov jmp sub testb dec loope sar lods shrb xor (bad) outsl lea lods test and sbb push out daa mov mov jne push (bad) cltd rorb sbb out cmp fcoms mov ja push adc add sub and mov cmp xlat sti fstpl inc xchg xchg mov pop popa mov mov sti jb mov rcr mov into cmp mov xchg sbb test in gs sub and xor aad data16 gs orl out push les aam pop and fadd loopne xchg (bad) pop negb xchg pop pop mov pop push call out jle sbb jle sub push jmp cltd or repz fsubrl sti pop loop adc pop inc mov call inc adc or rorl insl xlat dec add in rcll icebp repnz cmp insl cmc mov mov (bad) xor adc (bad) dec incl repz fs push fmulp popf mov mov push rclb addr16 adc pushf (bad) movsl imul ja add dec mov push mov mov cmp data16 lock ret enter pushl dec loop adc mov push lods push pop mov ds jmp adcl aam dec jae jbe ret outsb movsb pop rcrb cmc adc push jl mov or fwait inc rcrl jo into (bad) and inc mov or mov (bad) insb push xor flds pushf sbb (bad) jg ret fwait mov and xchg lods (bad) xor add pusha jge push xor lret movsb movsb pop (bad) icebp insl loop (bad) pop cltd or jnp sub inc push jle fsubrl (bad) int fcompl mov in dec dec adc pop dec dec jmp fwait stos jle pop sbb xchg shlb movsl das xchg push add clc ret je jmp push cmp dec sbb pop ret sti loope scas fs lret pop xchg pop out sub repz es mov sbb sub dec and add pop xor jo (bad) fmull and int mov and fwait cwtl test sbb and sti pop (bad) push rorl sbb lret xchg and loop jge jl adc push movsl add imul push cmpsl or roll push inc lock outsl lcall mov push movsb in (bad) jno iret fildl subl mov and cltd js add incb fild (bad) (bad) or dec cmp std (bad) (bad) cmp hlt enter aaa dec sbb xor pop push fimull push in xor or push xchg mov push loop dec dec push addr16 fidivl out (bad) fcomps sbb mov (bad) fsts sbb push test sub out pop add mov rep out or cwtl mov add das test and cmp fildl nop popa lock pop ss and aad adc divb adc in ret ljmp push or (bad) dec lret ds dec dec imull mov inc popa inc inc mov gs ds lcall mov scas pop xlat and sbb scas fistpll (bad) fildll lock fldcw inc in add xchg adc lcall arpl xor fldenv pop lret push mov loop mov mov loopne jg push lahf dec es cmp pop jne cmp cwtl xchg mov loop push dec adc mov fsubrl adc fnstcw pop rcl rcrl jge xor lods fidivrl movsb sub dec imulb adcl mov nop cmp mov fcoml add and or pop xchg ljmp rclb mov sub aas cli out stc test xchg or push adc xor aam push outsb push imul clc lea ds sarb dec sahf mov aam push cltd jnp js stos pop scas (bad) cmpsb mov xor popa out data16 les outsl aam outsl or or int3 shll dec arpl loop cs dec stc or jne mov je mov aad jmp lods (bad) in lods call daa jp push mov pop enter jmp push stc lea lods scas mov cltd test jp sub lock loop fcoml or push stos aam jnp addr16 cmp out stc idivl insl pusha sbb aad pop mov js insl call add arpl lcall push jno mov lcall pop sbb pushl das push xchg sub push cmc mov mov dec cld and jnp add add or push es and ret lret test dec or iret mov jb mov movsl lds dec shlb insb enter or xchg add lcall pop aad jecxz and dec jae mov push xchg (bad) mov xchg int mov jl dec sti mov xlat lret movsb cmp ficomp add cltd pushf mov dec lret lds sub xor ds fcomps shr sub xlat inc lock ljmp sub movl sub repnz inc je loop cmpsb pop std xor ja sarl imul pop sub sub pop inc ds ja fs mov push or into cmc xchg push out clc popa mov das push sbb dec (bad) inc mov loop clc cwtl fidivr xor js push imul arpl xchg js jle cmp mov mov cmp sbb push bound jecxz pop shlb sub xchg mov xor push ljmp sub fadds or shr jb pop mov push dec xchg stos dec xorb in mov out movb ficomp outsb xchg or adc shrl ret mov push sbb scas ret out push inc ss mov add (bad) xchg push pop das aaa js dec sbb jecxz sub cmpsb push loopne fdivr adc push sahf xor hlt in add mov ret mov jl repnz inc ds inc sbb mov lods bound nop outsl sub lods stc lret mov cwtl repz popa loopne rcrl push outsl cmp negb xchg xchg fs repz bound scas aaa jmp inc xor lcall adc lods jle jmp lret dec idivl or mulb cld test test push dec mov insl jno setno mov fstl sbb add adc xor cltd sbb cli push jle sub aad mov addr16 sbb inc movsb in rolb (bad) or cmpsb loop cmc mov aam stc mov out fcoms jnp and out rorb dec xchg xor sub sbb and mov imul dec aas incl test sti cwtl out cltd push cmp pop mov add mov inc xchg mov push (bad) and xor mov push mov mov repnz in or lods xlat sbb cmpsl push sarb jl sub or xchg scas (bad) pop in loop sbb push das test popl add mov push in ret jns adc sub adc (bad) jecxz mov shl aas mov pop cld negb jecxz int3 rcrl std adc sbb xchg adc test mov jecxz sti iret xor ljmp push pushw subb pop pop insl sarb std dec sbb sub or negb dec stos push mov ret mov into inc xor push lock pop in jns fdivs ficom add mov push (bad) aam xchg pop ret subl out icebp mov es ds (bad) xor xchg push and ljmp xchg sub xchg cwtl pop pop pop daa (bad) lea push cmp call outsb dec rclb mov mov jle pop es imul ja cmova push pushf repz (bad) cmpl mov jecxz mov lods and or pop andl add fstl js les dec out fsubl pop mov fsubl (bad) lock push jo std roll push (bad) mov popf and addr16 sub pop pusha push gs or lods sti (bad) push fcmovnb xchg xchg (bad) popf push (bad) lcall jge xchg mov push xchg into sub mov dec (bad) dec pop clc mul mov jae mov cmc jb and into stos adc xchg and shr subl (bad) imul or pop test xchg jle bsf dec xchg add stos and mov fadds pusha test rcrb scas sub je orb lock adcl (bad) push push cltd out fsubrs stos ds mov lds dec mov cmp int3 mov dec icebp (bad) cltd in mov or dec or pop dec pop pop daa mov outsb jle push hlt sbb shlb adc mov sbb or xchg ret jmp sbb or xchg ja add movsb xor mov xchg and dec stos cwtl jmp out sbb adc jne adc lahf sti dec imul xor repz push int3 fmuls push nop dec mov and movsb adc out cmp fiaddl movsl (bad) push (bad) jbe insl int mov jne leave nop lahf or cmp loop mov repnz mov sbb mov mov mov in push lea push fwait xor push jmp jge js in jmp add pop nop mov shll mov push rep adc ds mov ret mov jo ret pop rcrl push add fnstcw cwtl js imul sti (bad) push xor sbb pop int cli jo and add xlat out cmp arpl jnp jl sbb (bad) test inc mov xchg and and test popl cmp xchg pop cmc jne cld inc rcl (bad) mov arpl aaa cmpsb sbb push dec decl fldenv sbb popa sbb stos ds pop pop xchg test or mov pop mov xchg test mov ret adc or test outsb sbb in bound pop in jg mov xchg decl mov in cmp lods call rcrl lock cld bound jmp pcmpgtb sbb (bad) pushf fs add jmp mov mov call pusha mov nop or cmpsb mov popf lods sbb fs xor add dec ret pop (bad) adc add nop or cmp popa pop mov xchg mov ret xor push nop inc (bad) (bad) out stos dec dec enter negl jl loope mov enter fsts add inc testl nop arpl (bad) push pushf out mov push fucomp ror shr pusha iret mov and arpl out jne in jnp pop jp out (bad) jbe sbb dec push add out data16 int3 add sahf sbb out in adc pop inc cli test add ss push call (bad) insl add (bad) jb stos fldt add jl mov test enter jecxz push push mov mov sub (bad) hlt mov jne cmpsb iret pop das add xlat push aad jecxz sub sbb or enter (bad) adc push inc mov xchg in push and movsb scas and adcl imul cwtl jb mov push add mov pop push (bad) das jnp outsl lret cld add lcall insl jmp xor pop add dec dec call adc cmp xchg fistl push jg sti pop out mov mov cld xlat xchg or cli mov xchg call mov jle jecxz pop lea pushl mov and (bad) imulb test into add jg into sub leave loope mov leave lock adcl (bad) sbb fsubp loope (bad) inc push lret ljmp mov mov cs inc push push cmc pop xchg mov imul mov fcmovne scas out out jne data16 push fcmovnb out jg mov hlt xor mov sub push popa sub out mov adc sbb push cmp ja sbb cmpsl sarl pushf imul lds test lds push shll pop xor xchg (bad) and enter cmp pop mov (bad) mov add js sub push insl aas add push loopne testb inc jp (bad) fcoml outsb inc push outsl pop paddusb push mov pop xor test mov push push xor dec mov (bad) lret std push push mov das adc iret mov or adc bswap mov stos and mov (bad) fs jg mov call leave xchg sub cmp inc jb mov stc lods mov pop paddusb mov hlt mov cmpsl jl xor jns dec xchg in insl icebp (bad) or clc push jo xchg fwait mov (bad) repz pusha loop pop pop adcl ficoml aam sub imul cli ret inc aaa and lods cmp rcrb mov xor shlb loop push into adc (bad) loop mov loopne cwtl xchg icebp dec cmp cmp pop inc mov (bad) lock xor sarb mov dec mov push fadd inc push xor xchg in inc sbb loop in out lret movsl pop repnz out aad jns rcll mov mov test or adc push cli xchg mov and int3 xchg jmp stos xchg dec cs mov (bad) or jo fwait cld int pop push xor leave popa outsb jge shrl cmpsb sbb mov cmp fs in repnz fnstsw ljmp pop mov inc dec in xchg add pop icebp and pop lcall push insb loop cmpl xchg call hlt aaa (bad) (bad) dec mov cld sbb xchg adc dec scas pop andl jge mov xor and les xor xor xchg (bad) dec mov jne loop cmp inc loopne iret mov (bad) je mov sbb xlat test mov jmp into aam mov ret ret jle or mov pop bound pop dec or mov dec mov fadds enter or and inc sub pop sub sub jecxz out (bad) out lds daa fwait es scas and mov cld (bad) bnd inc clc mov sbb outsb jne loop mov jno hlt fcmovne xchg sbb fcomps fcmovbe mov popf xor imul sbb enter hlt adc jbe sbb jl xchg fwait dec (bad) iretw cmp icebp lea cmp xchg xchg or or sbb icebp pop aas push push mov push fisubr mull into fstps dec (bad) test imul out adc test fidivr pushf iret cmp add or iret jmp sbb lcall or fcoml vphaddbq sahf jbe loope hlt sbb add xchg in mov mov movzbl (bad) adc sbb sbb pop sub cmpl ret mov dec sub mov ret push loope xchg ja (bad) scas or mov cmp jno hlt cmp push loope pop xchg pop xlat add dec arpl adc jmp mov jp pop push sbb data16 cmp mov add fsubrl or push jae xchg scas hlt addl cmp inc pushf pop in inc xor sahf mov xchg (bad) fsubrs mov hlt jmp sarb jmp adc addr16 mov sbb xchg or dec (bad) movsb or mov xlat mov in popa cmp rol xor gs push hlt pusha jne jae mov cltd dec fiadd dec mov popf xchg lods and jp cs xchg rcrl mov xchg xchg pop jbe mov push sbb rcrl pop jnp add and cmp sub mov lds data16 add pop and pop int cmc (bad) mov mov lahf mov test inc and mov pop mov mov mov pop aaa xor jp (bad) loop leave add sbb (bad) xor dec jp inc stos insl popa enter mov xacquire mov out mov dec cwtl mov inc (bad) int3 jo jo and pop dec jo and add mov mov into mov pop fsubl std loop pop xlat mov sub or ljmp lret iret orl shll jno add sbb jmp xchg inc push (bad) icebp idivl sub aaa daa in arpl lret pushf imul cmpsl clc mov jns pop cmpsb roll hlt int js jno lcall adc (bad) hlt sub sbb jle or xchg inc pop shll incb mov in lcall mov xor xchg (bad) in adcb inc pop xor lret jae cmp add and das mov pop mov fxch adc nop mov pop lods fiadd sbb out xlat fcomp cmc pop leave fsubrs mov jecxz pop sub mov outsb mov stc loopne jg repnz mov mov xchg inc mov mov xor jmp fs xlat pop mov cltd push xchg (bad) jb ret sarb out jnp xchg jae lea stc std mov ds pop inc cs or das rclb mov inc cmp sbb inc dec fcmovne into and pop or repnz outsl je test mov pusha loop jmp (bad) ja and pop ret in or ds pop mov arpl add dec push into shrl and lea cmp mov xchg lahf cmc adc mov mov jbe out dec xor scas mov mov ja aad jle jo scas and fwait mov fdivl push (bad) xor xor in popf pop mov es bound push mov and sub mov mov cwtl or pop xchg cmp add jns lret repz xlat jns jo jo lods add in mov push xlat (bad) mov mov cs jecxz mov xchg lcall mov in scas cmp lcall sbb mov adc push push xor dec mov sti pop shrb sub or movsb push ljmp xchg push lds adc adc mov (bad) pop lds cmp loope xchg pop ja int3 rcl jmp cmp cmp jmp arpl out push cmpsb test xchg mov push mov add arpl pop xchg clc dec push (bad) xor scas mov xchg xchg mov push sbb sbb xor inc pusha int push xor xchg jmp scas mov and neg ja sub pop inc enter xchg pop jbe add inc mov mov leave and mov or sbb fmulp jbe jecxz or push inc adcl pop pop sbb loopne lcall or (bad) aas testl mov aaa (bad) sub jp fmull stos pop inc test mov lods popl testl rcl jl and or stos xchg sub sbb sbb mov imul cmpsl xchg outsb mov in mov in mov push lahf xor sub inc jno es outsb out int mov add lock cld call or push pushf pushf mov cmp out aaa and push pop or (bad) jbe mov lahf sbb jnp fidivrl push jmp divb jno mov or mov clc dec in pop mov jp,pn jns mov push push jno push xor push mov test push jbe data16 insl (bad) sub test insb loope inc and dec jge ljmp loopne push into sbb in inc add inc mov mull add mov dec aam out cwtl (bad) sub lret jae add lods gs fldenv or or cwtl xor sbb mov cmp sub lcall adcl cli jl lods test pop in inc insb insl jne notl (bad) call mov imul insl scas lock bound xchg pop xor adc push (bad) xchg ss fsubrp sub and out sub cmpsb movsb xor ljmp or scas xchg jle jle jno pusha or (bad) mov cmp das fdivp and push cmc repz mov sbb push les xchg or mov jb mov (bad) xor mov ss cmp pop inc and std rol into lods rorl inc repz idiv rol int3 pop lock (bad) mov add mov jne dec pop mov adc addr16 scas mov pusha fldcw xchg xchg push (bad) je scas mov pop push pop movsl sub or int3 mov xor jle xchg lret dec and push cmc jmp dec hlt mov mov lret xchg (bad) decl sbb (bad) sbb and negl adc movsl push inc mov jae xchg mov dec pop push std xchg (bad) sbb xchg mov insb pop cld mov add in adc add mov clc mov (bad) mov dec dec popa fsubl (bad) mov push mov in stc fstpt sbb push addl movsb or in and inc insb lds daa adc hlt scas pop dec or and jno jmp lahf xor insl sub scas push movsb sbb mov mov sbb jns roll stos and pop in mov loopne cwtl dec push scas inc arpl and sahf dec mov ss out sbb cmp pushf cmp pop sub ret (bad) rcll mul inc into or pop (bad) test adc push (bad) adc (bad) and pop rcrb jns rol adc dec std xchg xchg inc mov cmp (bad) je out adc adc loop or add je sbb mov add es add pop jge xor arpl ss lods mov jne int test add lea xlat aad pop pop (bad) adc call push xchg into xchg scas xor out (bad) lods jae pop inc sbb mov shll ss jmp dec dec or mov movsb cltd sti inc std lea movsl mov jae xor enter pop or js mov xchg lods dec jp clc push (bad) xchg pop mov pop xor push lea fisubl xor xor daa pop mov add out cmp cwtl mov outsb and inc fcmove mov test adc push mov (bad) aas out pusha das aam dec out xchg out cmpl mov push inc adc in cwtl lods dec push ret dec int3 cmp sbb mov add cmp in sub add jl pushf pop fistl ror jge dec and (bad) mov mov repz adc and pop mov inc ret jl ds es xchg pop xchg pop cli xchg nop lods mov mov clc inc clc mov xor sub pop add ja lcall jo pushf xor fistp and adcl mov mov js imul push xor mov shl sub xchg pop push adc test dec mov sub xor int3 fwait clc push ja aam lods idiv fidivrl enter mov data16 push leave dec (bad) xorl je xchg jmp and sub mov xchg rcll mov test push mov mov cld pusha mov adcb ret mov fldenv (bad) jmp repnz cwtl mov cmp (bad) fsubp aam insl loopne jnp ret bound sarl into cmp (bad) cmp sub lcall inc push push (bad) xor fwait punpcklwd repnz or lret fnstcw daa cmpsl rorl lock jo loop fadds jns jp and or inc or jl xor sbb jl cltd jecxz sub pop push mov loopne movsl mov cmp inc or daa lods jne ljmp inc dec and pop lcall pop push sbb les add and jns pop cmp in sti xor jle xchg dec test pop int or roll fldenv cmp add mov (bad) stos fadds mov test insb lret push leave ja jge dec jecxz jo sbb out mov jne mov fs cmp pop sbb cld fsubp (bad) or sbb out leave pop outsb pop mov dec aad cli out mov pop push pop or mov cmp les sbbl aaa aaa jg imul arpl push jno mov mov stos in leave inc sti stc jns int3 cld mov push fdivl fisttp sub xor fisubrl pop repz cmpsb sub sysret into add xor mov rorb test push (bad) shrl sti adc and sar and fwait insb fisub enter lods pushf mov punpckhbw inc xor sti cmp jmp pop dec scas xchg aas popa sub fldt (bad) aad adcl pop pop stc test lahf fnstcw lds (bad) lahf lods mov adc insl and xchg lea outsl loope in or pushf jno xchg xor aaa jnp imul mov cmpsb dec cld clc jl adc in out add ret imul jnp xor arpl dec adc fninit cmp aaa imul pop mov imul cwtl imul inc es adc mov jp mov clc mov movlps jg cmp cmp bnd imul icebp out int push nop sahf mov call fwait repnz mov xor push jmp jecxz lods nop dec xchg and mov movzwl jno enter cs pop mov dec pop jg cli cmpsb dec jp loop,pt add mov mov cld dec xchg pop adc jne fcmovnu cmc movl jle push shrl pop push jmp pop sahf mov mulps mov int3 sub mov insb mov fwait outsl (bad) mov mov out xchg outsl (bad) in loope movsl bts add add test jge insb ret cwtl mov push dec (bad) push in push push jne sbb pop dec sbb addr16 clc mov js adc xchg test (bad) sbb imul lret (bad) sub imull iret hlt call popf dec ret stos orb imul add jbe jg mov jp test cli andl cmpsl push inc cwtl insl xor push push sahf fisttp mov outsl mov in mov mov enter ret or sub push hlt arpl mov sbb popa lds arpl ret pop jb xor fisttpl cmp mov fldl dec mov fisttpll cwtl cmp pop xchg movsb adc cmpl lds popf (bad) xchg inc aas test wbinvd repnz xchg jno addr16 sahf aas push xchg lock fwait xchg xlat mov clc andb scas push sub sarl fs cltd add push inc sarb bound dec sbb mov add leave cli push push pop mov (bad) adc and (bad) jmp fiaddl out inc pop cli mov out push jno or je sbb sub xor (bad) popa data16 sti cmp cmpsl aaa iret lcall sbb add lret xchg mov insl add stos decb faddl mov inc hlt cltd das les test es fimul pop mov inc cli and push rcrl or sbb pop xor stc (bad) aaa xor outsl xchg push xor (bad) cmp insl gs xchg lret fild lock jae xchg xor push xchg or loopne shr jno ljmp fdivrs xchg mov cs mov iret (bad) mov pusha fildll mul lods cwtl or hlt inc es mov cli daa pusha int3 stos jmp pop aaa daa out (bad) insl lret jl push lret cmpsl scas mov fsubrl sahf push add push loopne mov inc int3 stos stos daa movsl inc dec lods fadds or ss and popf popa dec sarl clc pop mov out dec (bad) jle int dec xchg cmp push hlt insb dec cltd mov fcompl cmp pop xchg xchg fcmovbe xor lds mov fs addr16 push mov sbb and popf jno cmp adc cmpsl dec jnp fldenv insb and (bad) cli add cmp mov dec popf inc xor dec or add pusha pop fsub fistl mov (bad) ret js xor test mov xchg jge xor or or add push sub sub imul in add jg sub cli add xor out mov sub lret ja test adc push lods cmp jns sbb (bad) arpl jmp movsb cli outsl add lock mov pop mov or jl xor lcall sub xor jns pop out fistl aaa xchg jns pop cwtl jnp fucomi in push push fisubl movsb and daa and cmp inc sbb loope or adc js adc push stos test sbb nop/reserved jae xchg (bad) sbb inc ficomp push add outsl jl push pop mov popf std xchg data16 mov mov mov mov std daa pop and push shr std push adc aam jnp shrb adc test pusha xor pop lods and fwait pusha mov fs inc adc cwtl lods popf mov inc add mov (bad) xor repz test and sub std pop test imull add lcall xor into push jbe ret lds movsb clc sbb int gs cltd shrb in dec sbb mov inc sbb out pop insl shr push aaa out in aam test and lret jle dec pop and sahf cmp loope ds adc add or movsb cli test push mov cmp imul adc (bad) outsb jge xor mov imul fmulp ss jg mov mov sub les sbb fs (bad) int dec push jl cwtl mov push shl fucomi out inc jbe xchg xor lahf or push xorl in xchg fdivrl pop push lds mov inc jbe mov jae jl jno dec sarl or (bad) ss test push ret jns jge jns test xchg jmp dec pushf pop mov mull push mov out mov in pushf les sahf nop or push xchg lods adc xchg xor popa std mov jmp cmp js mov sbb test test mov clc jle pop mov in jp stc mov imul mov mov xchg push mov push adc push repnz pop subl dec inc aam std jnp mov or mov sti cmp xchg mov cwtl sub lods in js sbb xchg or imul rclb lret inc cmc insb sub loop mov dec daa cmpsl lock mov jo in ret in lahf nop mov movsl jmp jno ja js push lds xor xor inc (bad) adc je ljmp (bad) out out popf (bad) mov aad divb les ja push jne push clc jbe mov mov add ror in ror cmp iret stc daa push push ljmp fnstcw mov jae fist sub xchg jmp sbb mov jp call ret addr16 xor fsub fstpl push sarl lret xor out roll push cmp (bad) sbb push icebp dec jp rorb or (bad) divl insl out cld lea xor insl aaa sti xlat call inc cmp fisub cmp or xor sub jmp stc inc xchg (bad) movsb mov push rcl sti push dec dec scas icebp add mov aam mov das pop fsts mov adc pushf xlat loope mov or jg push jbe mov rolb pop stc outsb out and adc inc cmp sbb dec aaa orb mov fild addl adc lods icebp sub jg test test xchg add jae cmp add inc or sbb rcl outsb xor mov inc (bad) mov stos into push cwtl hlt pop xor lret movsl outsl mulb es test push pop xlat mov fdivl lods xchg popf adc imul inc cs xor push cmp xchg inc dec xor push retw mov sbb outsb cmp je push xor cmp out pop int3 (bad) sbb lods push and mov inc rclb clc ljmp dec in repnz push hlt or jecxz inc out mov push or sarl sub sub pop icebp lret mov dec idivl enter or mov fiaddl sub mov adc xlat jle sub fildl in xor test in and out pop mov (bad) clc ret mov (bad) jb sub lahf stos dec and aad and adc xchg cmp add xchg xchg bound lahf in cmpsl fstps cmpsl (bad) pop or sahf (bad) push xor sub movsl xchg push movsl xor in push or or sbb adc jp adc jp test push cmp xor and sahf xorb push pusha jg cwtd xchg push sti or jl loop stos jge sbb xor push adc inc sbb imul dec cld leave pusha loope sbb lret fcmovnb repz bnd fnstsw cmc mov repz cwtl cmp mov imul push (bad) and and and or lods xchg pusha jo sub mov mov arpl pushf mov (bad) push lea js fwait (bad) xchg mov es sub insl cmp cmpl fwait lret mov mov and push add test xchg xor jge (bad) mov xorl (bad) stos lret mov push mov xchg xrelease add fisubr arpl adc mov pushf fildll jle in je inc fmulp mov aam inc inc aam je cmp sbb dec popa pusha outsl loope scas movsl iret fs rolb aas lock (bad) jecxz pop mov (bad) cmp xor daa aam lret leave mov xchg (bad) mov aaa je jbe lahf adcl jg and mov cmp mov lret pop in or jae ret loop addr16 out bound mov push movsl jo or insl xor sbb mov (bad) cli and mov pop jb or pop jmp leave adc addr16 inc out std imul pushf lods jecxz dec test iret stos xchg in in arpl leave cwtl lret adc fnop and xchg stos shll push cs fildll inc mov add mov pop jae and cld cs adc cmp jno add stc iret xchg inc ja cmp or jp icebp sub fisub cmp adc inc fwait push scas movsl mov lock cmp popf bound stos pop pusha and outsb jmp out lea cli ret jecxz in lods jmp mov mov icebp loopne cmp mov shlb mov push xchg mov cmp leave dec mov wbinvd je mov stc fsubrs push repz mov arpl inc sub cmc sbb cmp dec testl and fildl popf cmp out les push cmp push in mov aad ret icebp fs scas mov js std lds lds pop shlb out pushf jbe adc (bad) xor push and out addl jecxz stos and pop push std lcall outsb les push (bad) (bad) dec mov add mov pop enter sarl jecxz lds cmc mov sub fcomps xchg enter loop cmp pusha in (bad) sub jl je add mov rcrb sub (bad) aad cmc loop pop mov inc (bad) pop (bad) pop xchg lock repnz inc add push xchg mov xor jbe pop push sarb xchg loop in xchg addl mov lods jp mov or push ret stos (bad) pop adc imul popa dec jne sub sbb (bad) out cmc add xor pop addb movsl (bad) mov nop rcll js or mov sbb adc dec pushf mov sub jo push mov sub or mov sarl (bad) mov gs lea test push jl inc in sbb incb dec movb inc cmpsl repnz pop mov adc inc cmc out mov and dec push xchg notl mov fsubrs add shrl leave outsb call sbb push mov jl pop (bad) in dec xchg test push jno jl xchg (bad) adc cmp lods adc mov inc jmp clc inc xchg add loop dec cs test cmp mov inc mov xchg jnp adc out lret mov data16 and mov adc mov out ret adc jp cmp or inc push shrb adc popf jns sbb test (bad) fisttpl lds aad mov push xchg jne scas sbbb idivl (bad) mov fnstsw lds repnz mov fnstcw mov inc sub adc cmp aas scas scas xor leave and dec or or mov enter mov add xor xchg or jns (bad) and repz icebp xchg and lods phaddubd or lods js mov push sbbl cmc jg mov mov xchg xchg adc (bad) fcmovb inc xchg xor popf inc cmpsb adc jecxz mov scas mov adc inc loop sub rcl mov sahf fs xchg in insb inc (bad) enter fimull int in imul mov cmp mov cmp loop pop test out pop inc rcll and dec dec cwtl sbb js xchg (bad) movnti fdivrl jp adc pop nop pop mov fcmovnb push idivl es ss sub or and xchg test cmp adc lods dec jmp or mov in inc adc pusha inc test inc outsl lods dec outsb cmp or inc mov add cmp pushf jne je outsb dec adc fisttpll test ficoml cmp pop sbb xor gs push push mov or sti fstp (bad) (bad) mov cmp mov xor mov dec out hlt int3 icebp add pop movsb mov lods push xchg mov pop sbb inc in add pop mov out daa cmpsl jge (bad) fmul leave dec xchg inc and ss gs stos imul sub inc (bad) mov fisttpl out xchg dec andl cmpsb xorb test mov lods mov push movsl add lea or mov inc sub dec test add arpl js jnp mov mov dec dec xchg inc sbb sbb jnp out (bad) pop push xchg into and jl pop movsb or in push cmp (bad) and (bad) out stos out es pop out lret bound mov in add mov pop xchg imul or adc sub test (bad) cmpsl or stos (bad) xorl sarl push das or bound stc cs dec aad jle xchg jle xchg inc (bad) retw mov dec ret (bad) jbe or pop or ret or push sbb dec jne in cmp push movsb mov cmp fldl push data16 mov xor add mov add and pop in pop cmpsl ss int clc cwtl mov lahf cltd shrl out jmp sbb push (bad) in dec jecxz pusha lahf lds ret aas sub sbb insb hlt (bad) xor (bad) iret repnz cmp jmp adc cld cs mov aad sti sub jecxz jp mov enter jge ja xchg inc mov fwait pop pusha (bad) or rorl mov mov rol mov (bad) mov cmp (bad) xchg loope pop data16 mov and jle jns lds fisubr sahf in dec inc cmpsl int or sbb jmp (bad) je popf test dec xchg dec sub lret gs (bad) notl lods xlat clc test xor roll dec jge sbb sbb push shll gs xchg mov into xor mov pop test add js (bad) jae lret adc xor ljmp es imul and daa jbe mov inc pop and xor xchg icebp inc jmp (bad) fsub test ljmp ja fdivrs aam mov (bad) xor outsl mov add fcmovbe (bad) mov mov jg lret icebp (bad) mov mov sarl fdivrs es icebp mov test xor cmp cmp pop (bad) jno bound stos insb push adc xor adc jge dec jp (bad) mov in pushf lds push call pushf jbe xchg dec lss jbe xor hlt fs in mov adc pop push jae push xchg cmpsb and pop xor or imul sbb gs loop mov outsb cmp insl jp daa scas rorl pushf sbb out sub mov xor jns add pop mov insl cmpsb stos mov mov cli lds imul cmc cmpsb (bad) ror repnz mov lock pop pop mov push and jecxz mov loopne (bad) jecxz pop imul xor mov mov imul and mov cmp or (bad) movsl loop push add nop inc roll and call test inc (bad) jle dec mov mov lahf xchg inc cmpsl cmpsl fs roll push fsts sarl mov push push jno xchg lret fs xchg mov jp and mov sbb jno push icebp popa (bad) xor cmp add mov in insb add je sti cmp jmp ret lock sub int3 sub jae lret mov ss pop jno sub fiadd into mov aas jbe jge jmp addr16 inc aad sarl mov mov xor push push lret js push mov les mov mov xor imul cli cld mov sti test out pop dec mov int popf int and aam jp or leave movsb imulb jle in rcrl push shl data16 mov xchg clc jnp lods scas call sub rcrb cmpsl and and mov jbe lcall cmp push ja and add mov lock arpl and jno (bad) (bad) mov inc cmpsb pop jne mov dec insb or test ss inc lock int addl cs lea push mov aad ret cs mov ret cmp push adc das ret mov mov test insb jmp or push push mov sbb jnp or mov movsl test push outsb fldt lods icebp gs push gs out xchg cwtl or mov sbb repz xchg ret pushf inc jg push cld sahf sbb ficom cltd mov or jne pop les push pop sti mov add stos into jmp mov adc mov push dec lret dec fwait jg jmp cmp and test push rorl (bad) divl cs push dec add fdivl loop test jle mov sahf test fnsave push add bound das mov mov sub decb and in jge dec mov ret in push and lock inc xchg loope cmp and aas scas cmpsl sbb (bad) fsubrs out mov sti cs dec jae (bad) or dec nop nop mov lods test shlb sbb push xchg lock outsb xchg fwait adc xchg in jbe sbb push mov iret push or stos icebp je (bad) dec mov sbb gs dec fild jne add cmc in out pop xchg mov xchg add (bad) push std pop inc imul jns add in and xchg or sbb push (bad) gs in stos (bad) jp fiadd push cmp inc int3 and push sbb inc in adc negb cld jb cltd or daa shll loop adc sti adc mov xchg sub daa stos adc imul xor dec dec popa icebp rcll add add inc pop lods (bad) pusha mov divl iret ror lcall out popf push mov rorb xchg push loope aaa mov mov sbb jge jae loopne push jmp fisubr (bad) xor mov outsb pop xchg xchg fisubl dec es push ljmp fidiv rol adc mov aad popf ret lea imul mov es inc (bad) fsubrs sub andb jl mov mov stc icebp inc mov mov cmp outsb mov add or imul les fwait int push mov push xor adc rcrb out js jl leave xor cwtl ret add push fdivrp lret inc push out or mov mov icebp mov mov mov enter je sbb pop push nop jg adc jp sub (bad) dec mov test shll jg stos leave jg cmp test jecxz adc and lcall std mov stc mov cli js sbb mov cmpsl xor xchg dec mov adc pop dec pop (bad) in push push xchg xor inc shr data16 pop (bad) sti (bad) pop add mov ret add jae,pt jg mov popf xchg (bad) es mov dec test inc cld (bad) mov stos dec out push icebp mov fs negl stos (bad) push sbbl jne mov pop add test mov xor push outsb xchg in out aaa shrb fisttp test out add std cmp sub mov fdivs sbb add jg test sbb inc xchg fdivl out mov push aaa push inc in pusha pop push (bad) and das fsts mov aam fnstcw (bad) jmp xorb insl mov or outsl inc sbb xchg in pop cmp out dec pop inc nop loop or push pop repz roll adc popf out ljmp push cmp inc mov jb jns scas dec xor punpckhbw js lahf mov mov out mov aad inc dec iret rorb lea icebp movsbl fimull (bad) cld add pop jns xchg stos push insl or add sub mov pop push xchg mov fwait jmp (bad) repz sub int3 (bad) (bad) mov mov mov mov xlat je test mov je pop imul xor (bad) mov movsl mov test dec push inc popa push lcall mov rorb (bad) xchg mov ja and mov scas inc adc lret dec out fs cltd adcl jne pop (bad) pop mov or (bad) jne es rolb mov imull xchg sub jl cmp xor jp sub lods sub lret jo test cmpsb adc mov idivb sub data16 js mov lock cmpsb arpl jl xor pop inc pop push mov incb test aas mov inc or lret xor repnz xor jmp and std mov mov icebp cmp inc xchg subl aam mov scas jp test sbb lret push data16 dec and stc xchg mov test mov (bad) imul imul jbe aad mov dec iret cmp xchg or scas int stc rcl fidiv add mov out (bad) loop iret iret pop mov icebp test cmpsl repz adc jge ds aaa push mov ds adc pusha xor jns pop sar push repz addr16 (bad) mov fcmovnu jno adc das ss outsl jb jbe mov dec insl inc mov enter mov sbb cltd cwtl stos mov sbb mov stc adc lcall insb cmp pop sub mov sub jnp mov add loop,pt movsb aaa pop sub or popf xor lods push fcoml add add repnz add push mov iret or push jl push cltd out push sti (bad) lds sahf pop xlat (bad) insb fbstp cmpsl dec adc int3 aaa dec imul int3 nop lret aas fist pop push aas lods fwait sub daa pop into mov inc xchg and or xor iret stos mov lock fnstsw pusha pop in sbbl and xchg (bad) mov movl inc insl mov les cmp (bad) push xchg outsl jnp mov mov jl out fwait pop ficom add test add inc rcl fdiv roll ret xchg xor (bad) (bad) cmc jge es and ljmp cmpsb test cltd xor movl inc dec cs loop cmpsl xor movsl fisubrl mov fdivs inc aam ficompl add popa stc xchg and neg mov pop lret or sub lds or jmp jge hlt mov or inc xor cmp scas popf popf push sub sbb loopne bound add adc cltd (bad) or adc mov push push inc leave xor (bad) mov data16 movsl inc xchg ret pop stos (bad) iret sub sbb lock loop ja and jo pop sub pop mov cmc adcl sahf clc test int3 mov adc jecxz sbb jno lea push leave pop jge add mov cmp push cltd pusha repnz sub sbb jge mov push jmp push mov jp mov mov lahf shll jo ja js hlt shl aas add sbb inc xchg insb jmp sbb and into cmc jl jns jo lret stc adc cld and bound ret mov pusha jae sti js inc sbb push pop test mov pop cs dec xchg lea rolb sbb in and mov pop mov jge mov cmp dec or mov (bad) leave inc push inc and popa in jae aad repz int3 and mov cmp sti adc mov pop inc ffree dec push loop jmp punpcklbw push sahf mov xchg xchg dec and inc mov leave and xchg add in repz inc (bad) movsb mov mov adc sbb xchg or xor cmpb out jmp dec push xchg stos push push enter mov mov adc daa ljmp or xor imul aas cli pop inc xor dec or lods cli imul or mov mov inc aad jle jp std dec lock loopne lods movsb pushf dec imul inc pop cmpsb (bad) push jae ja push insb push add iret sbb dec ret mov and int adc outsl xchg aad and jp cld enter and cmp sbb xchg jg add dec sub sub scas jl js movsb jg pop cmp ds mov movsl (bad) cld ror sbb pop mov test adc mov fisubr inc push data16 arpl jne ljmp adc cmp push xlat cmp xlat cmpsl stc (bad) pop lock jecxz in sub movsb outsb xchg xor mov daa mov sbb mov inc sti sbb add leave mov cmpsl in ss add push and pop cld sub cmp mov cmpsb cmp inc mov (bad) divl mov outsl mov cmp jb or cmp out mov push jecxz fidivrl test ret mov mov adc mov (bad) mov inc mov cwtl dec fidiv aas mov fld call cld jno std jecxz (bad) or movl ss loopne push pop fstpt jmp imul std mov (bad) xchg xchg imul (bad) insb popa cmpsl dec aas jl aaa cmp cwtl dec sbb in mov jmp adcl sahf cmpsb scas popa pop pop cli icebp sti and sbb aam xchg popa mov jne jo add dec xor lea push mov in push dec dec ja push sub popf loope xchg fldt in or dec mov mov out sbb xor std and test mov push cmp pop mov pusha dec mov addb ret pushf jle movq push fisttp lret ljmp ss cli popl mov (bad) out rcll adc (bad) leave sbb outsl (bad) jns (bad) xor ljmp cmp mov scas cmpsl inc and rorb sbb pop jmp pop push fdivs adc or sub decl ss inc ret cli xchg jmp ret bound adc fwait jns daa (bad) cmp daa cltd pop ss scas mov (bad) insl inc push jp call aaa lods push xchg shll out push mov pushf cmp adc ret test xchg cmp or xchg cmovnp mov mov xor inc cmp sbb out in ds jge cmpsl mov xor ficom (bad) or inc (bad) jae int3 cmpsl in xchg ret rol lods adc in adc aaa aas xchg mov js insb lret cmpsl fldenv and repz cwtl test mov addr16 movsb or out dec xchg (bad) outsb jnp test xchg hlt cmp and fbld bound sbb mov cwtl xor jl cmp mov push mov or push pop jmp sbb lock sti rcl lock cmp pop fldl sbb leave out (bad) xchg in fwait pop add add ret cmc or push mov inc sti mov cli les jecxz jnp inc or xchg jbe test push insb and (bad) testl mov bound cmc (bad) ljmp clc jl (bad) sub sti ja jns pop dec in jp jp in es cmpb pop cmp fcompl (bad) push jne jmp cmp out jnp orl adc out loope repz mov dec adc fdivrs sbb ljmp ret dec xchg push push dec mov (bad) sbb dec jecxz daa pop xor and xchg xchg mov repz cltd sub mov add (bad) xchg dec lahf mov fcoms dec aam or test sub jmp add pusha out push sti (bad) or dec xor push push das xlat into stos adc (bad) lret insl into scas adc sbb lods xchg jmp jne insl pop out sbb push test scas xchg pushf push add push out loope into fsubs nop (bad) xlat or mov and (bad) cmpsl pusha lret dec or inc pop test out jmp inc addb fwait sbb push inc lds in movswl les push lahf push add lock test jecxz sub dec inc sbb xor or push scas repnz dec push out adc xlat scas lock arpl outsl imul jg aaa push jb xchg mov imul aas and adc mov movmskps mov mov xor push push ljmp cmpb inc mov mov push mov sbb rcr incb lea std pop mov xchg or mov pop push (bad) cmp sarl xor lahf cmp cmp mov fmul or (bad) stc pop xorl pop add xchg std pop mov stos ds or mov or xchg lea decb push pop jmp pop push push push sti ljmp mov lcall sub pop xchg push mov mov cmp ret stos cld pop mov pmuludq cmp or jnp mov lods das push push aas mov xchg jae cmp add (bad) in or pop stc inc mov jns in mov sub ja sub push cmp add testl loopne js add dec (bad) dec pushf pop sub outsb pop push mov mov mov inc dec out stc xor dec add cmpsl or sti xchg push or hlt or hlt push js push and fwait mov sbbl std cli call mov mov adc daa int push (bad) sbb jne mov outsb sbb iret xor xchg adc xchg negl mov or jo mov inc aas loopne mull andl lret push loopne movsb icebp and adc xor cmp aas fmuls pusha lea aam cmpsl iret or add sbb mov repnz mov std mov lahf mov (bad) sti mov jb mov push and pop pop (bad) into jmp and pop sbb pop rolb cli inc out in inc jecxz dec mov aad jge jg mov xchg push push jmp cmp push aam lds dec dec mov cmp inc cmp xchg pop outsl shlb jbe repnz add out inc sarb sub fcomip aas push (bad) pop push dec in inc pop repnz enter mov test add mov (bad) daa lods das xor jno test xchg orl pusha test aad xor pusha insl add popa push stc mov das fs jge enter cmp icebp mov sbb mov pop adc sub and xor cmp jns test push xchg (bad) jp xchg pushf in orl jg in cmp addr16 push ljmp stos (bad) mov jecxz and std fs scas popa add mov (bad) in sbb push movsl test add or mov push shrb cmp xchg cmc mov test mull ror push push ss lcall adc aam sub loopne push cmpl or xchg push jb xor in scas add rsm rorl fild jp sbb sbbl add subl mov push xor mov and xor (bad) push mov out movl mov dec mov int3 (bad) cmc loop lret pop pusha les cmp scas cmc inc ret adc pop loopne ret or jns dec xchg xlat cmp mov (bad) outsb push dec movsb xchg sahf jbe fldenv jecxz js jno fwait lods inc cmpsb sbb xchg (bad) xlat mov push jge and xor xor mov arpl cltd sbb dec xchg stos mov pop sbb pop clc adc push dec aas push dec fs push adc pop pop cmpsb sbb and push mov inc jb,pt insl adc sbb jmp inc arpl push (bad) and test bound push xchg jo pop aaa pop loopne dec pop adc mov ss imul push cmp pop out cmp pop lahf pop xor (bad) sbb arpl lcall js sti adc not pop mov stos mov js xchg mov ds ret ljmp mov mov in mov int3 mov repnz cmp sub mov add pop pop push pop inc mov dec daa fstpt pop scas dec push mov (bad) dec call adc inc (bad) push push dec in pop xchg ret sbb jns push and xchg daa jb adc sub xor cltd and movsb adc sub pop jmp les scas jo test in xchg mov icebp icebp add and ja push add mov lds mov popf sbb mov popa into fwait aaa push ss (bad) mov jae lcall lods ret aad inc cli pop mov loop xchg mov insl sar out fucom mov lret cmpsb lret or test cld xchg aas lods xchg xlat xchg mov xchg or jae sbb or scas adc cmc xor jns inc mov lea mov out cmp add push mov dec add lods adc jb pop jo xchg adc mov arpl mov cmpl add add inc out es cmp xchg rclb and and imull sahf iret mov jmp mov frstor div push jge lret inc fildl and sbb rolb xchg mov jmp dec outsl out rol loop shll cli xor adc jne (bad) lret pop xor xchg mov and testl popa push cmc xchg xchg icebp (bad) cmc das xor xchg ljmp sbb ret les icebp frstor and sbb jno fnstcw inc fsts mov jp inc xor xor jns sbb mov fs add (bad) mov dec popa mov fistp js adc mov out aaa xchg jecxz (bad) dec (bad) loop out mov jae sub sub or popf pop rclb ret jbe dec add imul pop cmp jl xchg sbb or xchg mov int jecxz cmpsl (bad) (bad) dec daa movsb xchg mov sahf out xor or or aam inc repnz push inc pusha sub lcall xchg mov (bad) daa mov cmpsb je xor daa cmp push (bad) les cwtl jmp pop jge jle cmpsb jbe mov inc lret dec imul fld xor and into lahf mov jnp mov pop (bad) pusha and roll (bad) xor add pusha divl adc js ja fsubr add insb sub jmp fsubr ja or sub ret pop xor jb mov imul in xchg mov cmp ret mov arpl ret lds (bad) jae inc mov sub aaa cmpsl mov jle fistpll fstps jmp loopne dec out add pusha imul lcall sahf iret lea out in or xchg jecxz out pusha outsl sub enter inc sbb add pushf mov lea addr16 mov out in inc push sbb lret dec call out jnp lds add jl sbbl icebp lea dec add cmp adc or lcall out mov adc sub std or or out rcrl ds pop cmp xor inc push inc push xorl or push imul sbb pop jmp repnz inc push adc loopne or cmc xchg mov inc rclb rcl sub dec std adc aaa and dec xlat mov xchg push xor test push jbe pop push orl mov pop mov mov les mov jo push call inc (bad) sub xor mov jp mov (bad) xor cmp leave fwait addr16 dec and fdivs clc xchg cmpsb add frstor pushf mov mov sub add lret xor nopl (bad) pop jl,pt fstps xchg fldl inc daa aas fs sbb frstor or shll sbb fldt xlat fnop pop in sub jge enter out clc pusha xlat test stos mov enter cwtl dec dec and icebp stos (bad) ss ds sub in cmp fstpl pop cli mov lods ficoml (bad) or mov arpl mov jo inc jns test pop mov add cmp daa in pop jecxz xor data16 push sub fs inc rclb test and or add push xchg inc push out mov cmp popl cmpsb (bad) fwait sbb mov clc std out mov jmp test push sub cmp xlat fsts dec lahf jns cmc lret out sahf das hlt mov rorl fadd jb sbb pop orl int3 lods sub jae cmp xor pop pop ret mov ss inc jb mov push inc push dec and push pop mov scas sub clc jae es jg sbb push mov movsl outsb and mov (bad) mov in mov mov lahf notl (bad) mov jmp push and and popa xor mov loop adc popa jmp pop or and inc xchg xchg dec in mov xor jno jecxz inc xchg ljmp pushf ret pop mov pop and dec fisttp sbb cs fcmovnb push sub add jp daa xor xor (bad) ja das (bad) pushf inc int3 dec rcl lahf jne es nop cmp mov out sub sahf pop je xchg push jnp aad sub and push pop lods sbb shrb inc pop test icebp mov mov xchg pop out jne (bad) mov adc mov test xor xor dec loop sbb notb popf outsb insl popa loop mov daa daa mov xor push addb pop mulb fmuls movsl sub and xchg dec xchg (bad) clc jp jbe push mov pop add pop inc xlat push push int3 cmc enter jne xchg lret add push and inc jne fidivr inc jecxz in clc sbb (bad) cmp fmull cmp out test adc xor lods movsl sub push (bad) mov daa mov out stos cmp jl push jns (bad) mov inc xchg rcll pop data16 rclb call xchg imul push loop cli inc negb push pop imul mov pop push lods sbb inc mov dec adc popa lret xor push jge dec dec xor cmp mov jns imul out pusha push lahf lock add xor jne enter movsl scas mov inc lock iret out enter imull inc sti pop imul mov pop aam xchg rclb add stc shrl mov imul or out add ret loopne cmpsl xchg sub pop pop mov sub outsb push or rorl pop test cmp (bad) les dec add mov das sub lahf jb test test rcll subb (bad) push sbb push pop nop pop mov lock xlat ret dec inc shrb pop pop popa fs js pop inc int3 xor pop jnp add jg mov mov pop daa mov mov fdivs dec xchg cmpsl jnp addr16 push js inc clc ss jmp ret xchg loop add xchg push pop aas sub mov insb insb sub pop or jmp dec test sbb xlat add sbb idiv mov std and popf popf test mov vmwrite lret fmul stos enter jo cmpsb icebp jbe xchg push test inc xchg or jnp xchg std loop sbb pop sbb sbb jle push mov pusha pop mov mov cmp scas pop and jle mov cmpsl outsl popw shlb mov mov inc aad and (bad) jge inc dec cmp fs test jo outsb out or js mov inc out add sbb dec fucomp scas cltd in xor xor mov ficomp pop cmp dec scas mov test rolb xchg loope aam insl inc mov fdivr xor sarl js cmp mov sub jecxz cltd ret jle xchg sahf or mov jmp (bad) cmp xor jp not outsl jle mov cmp shrl dec xor and fildll stos mov cmp sbb cmp and jbe ret sub mov dec pop or loope mov mov pop pop pop mov add xchg mov mov jg (bad) outsb (bad) mov daa push inc mov sub jge cld and movb pop addl and rcrl adc xchg lea jmp bound jmp push sbb add mov dec jg dec jne mov pop pop cltd pop cmp les test xlat sarl repnz arpl mov in xchg cmp adc lea or xchg (bad) push push jmp jb icebp testb addr16 adc (bad) sbb mov lret leave ret hlt mov incb cmp mov rcrl add movsl sub popa jno lock mov clc sbb pop fbstp or mov es cli sbb pop jb gs xchg out push dec setae fstpt xor mov cwtl jmp aad int into mov push out or jne mov repnz lahf add cmp test cli mov cmp xchg push mov fwait cmc push out leave push (bad) jmp fsubrp aad sub mov pushf in ds push sbb xchg inc lock pop mov cwtl dec mov push (bad) call mov push push (bad) and int push push cwtl adc mov mov mov and mov outsl push pop xor lahf and in inc pop mov jne ss scas data16 sbbl cmp dec scas sahf or rorb int3 pop and pop cmp ds xor imul or jle lret outsl bound cmp or (bad) (bad) hlt outsl cld aas dec pop aam mov dec icebp jo bound je sub jecxz push and out es xorb sbb cli adc ja test cmp test push test push mov mov les aas dec gs push adcl pop ds xor aas add inc xchg int3 (bad) mov fs sub jnp or push mov xchg iret test rcr jmp shr inc pop xchg cld in or jp or aam test mov out pop xchg push cld pop push cwtl les inc aaa fmulp xchg mov (bad) pushf std and mov mov aad pushf pushf bound daa adc xchg add nop (bad) leave mov ds mov imul dec imul or mov gs push xlat loope mov icebp cli or push fcmovnb cmp cmp test sub fldt lods pop and (bad) stos add repz dec pop imull rcl dec mov jnp adc pop xor inc dec (bad) pop sub sub cld add push js std mov int3 push fildl enter inc pop (bad) mov sbb imul push xchg inc cmp mov lret lret inc rorb jne push fs in int lea jle push adc dec lods call je in ja sbb jecxz das lock call lcall fsubl or xchg cmc push repz lcall out je mov add enter sub aaa xchg shrl shlb cmp pushf and xchg inc jne and inc xchg add repnz (bad) scas cwtl int pop mov or sti sbb lret cmpsb sbb imul int dec cmp add push cmp mov inc push loope lock jo enter mov lods xor sbb ficoml cli xchg scas scas aam and fiaddl push cmp lods fwait xchg (bad) mov cmp push and repnz push dec into push jae out sub lcall mov jbe push inc cld lds push in or xlat adc into cmpsl addl cmpsl sub cmp popf inc push cltd pusha fcomps jg cmpl jae mov cld jl mov mov fs iret (bad) loope cld je inc push adc mov xor xchg adc lods cwtl rclb jo into aaa loopne sbb or inc push jb sub add scas test (bad) mov cmp and fildll xchg stos test das jecxz jno sub ret or in jno pop scas lret jnp mov in mov inc bound lods xor or mov imull les xor push mov dec mov dec scas punpckhwd mov push xchg ret push adc jp bound or fistl ret cs mov adc sbb out mov xchg jecxz sub inc out inc into xchg xchg dec (bad) push addr16 mov test fisttpll cmc lahf xchg aas dec icebp stos imul adc xchg cmovno test (bad) lods pop jo insb int3 xor (bad) mov sub ss or sbb push mov pop mov aaa stos add sbb pop mov pop sahf or jmp notl cld push pop and movsb movsl les inc adc mov je adc push push push adc arpl arpl xor xor (bad) pushf rol pop dec cmp inc jl iret or mov (bad) ffree sbb test sub outsb cld jl loope jb sub icebp xchg sbb jecxz cmp stc lahf pushf cmp push iret push or fnstsw mov mov or xchg sbb jns (bad) mulb adc outsl push sbb sti xor cld sub push lods cmp mov test ds jge lahf imul (bad) mov lret insb idivb xchg (bad) jo notl push mov in movsl bound sar in jb decl push imul out pop sub push insl std les sub mov sbb test stos jp cmp jno adc or xchg inc arpl xor shlb jnp push imul mov push (bad) popf rcll inc cmp mov xor imul mov iret or lret into lds jle jns or lds and (bad) mov xchg nop dec jae jecxz push fisubrl clc pop sub fdivl (bad) and pop push jae sbb cmp pop (bad) ss xor xchg xchg adc inc hlt mov or cltd and faddp out js xchg mov test aas jnp and mov or mov mov test jp clc add into adc jae rcll jle fs mov addr16 xor pop outsl push leave jae mov call add xor xorb push fidiv push adc out xlat cld inc and mov xchg leave jo ss cs aam shrb add push jl jo nop mov cmp sub clc mov daa ficom mov xor bound (bad) (bad) (bad) jle lods jbe jp loopne xchg test dec lds hlt out mov es aaa movsb mov fstl push (bad) aam les inc (bad) cmp adc loope xchg push mov jle popa and andl outsl outsb (bad) and movsl aam (bad) cld aam adc loope rol cld jne call jecxz lods pop fistp sub imul fistpll inc mov sub in add data16 push cmp out rol lds mov jno push add push arpl mov add jnp cwtl sbb stc fnstsw cmc jo mov movsb rclb or and and dec push add repz popa int scas sbb lods cmp je pop and in mov (bad) sbb adc lods ret scas mov rol push mov xchg aaa imul mov xor xor sahf jo xchg test sbb inc pop and in xchg sub sub (bad) notl jnp (bad) shrl jns out mov dec popa sub and enter test stc mov cltd shl gs pop push pushf push sti aas out btc and (bad) (bad) out adc js nop pop dec pop scas adc insl imul jns loopne stos dec lret fcoml and arpl iret sub arpl cmc stc fistp aad pop mov cmp setg mov mov out sub hlt add xchg mov mov add fwait notl dec dec fisttpl cld fist cltd lcall lret or fwait jae xchg or mov jno out and aas addr16 out sub sbb pop repz or cmc jg cmp lret mov dec mov test ss mov add jnp addr16 jle mov add and int3 fwait shrb jle (bad) sbb je (bad) stos ret leave std mov xor or xor sub dec scas out cmc data16 adc out dec mov push xor push jl xlat fdivl imul xor scas xchg lret ror (bad) pop lcall jns (bad) jg or push jb out int3 inc sahf inc jae in hlt enter ret out cs gs cmc in pop inc (bad) lds dec and cmpsl pop stc sbb (bad) mov sbb and push jmp cmp mov cltd in or daa mov jg cmpsl les jbe cmp mov (bad) and xor xchg repz jnp test lret xor cli mov push (bad) loope rcrl loope push inc fcomi push add sub sbb stos movsl adc data16 mov cmpsl (bad) dec or sbb cmp xchg popl jnp mov mov jns cmp xchg nop ret jmp push outsb iret (bad) lret cmp mov insb pop rolb repz into xchg and cmpsb add xchg inc gs jmp or cmpsl stos jge cmc ds daa xchg inc inc mov add in jns xchg cmp xor test daa mov and push insb jmp pop add div cmp andb daa push test xor das flds repnz jo pop mov or xchg jge cmovb cmp and (bad) (bad) std in pop mov popa es lea dec mov hlt ljmp in sbb jp dec int pop mov xchg add xor sbb sbb rcl stc negl lock dec ds stc iret mov push shrb mov cld loope inc fwait clc push xchg aam fiadd mov sub push test std repz call in cmp (bad) ficoml outsl xchg dec push jbe xor jno lahf pop (bad) aaa jle adc mov sbb push aas jno mulb mov and and xor je dec shlb (bad) xchg xor jns loopne sbb xlat xchg sub or stc orb jl les or cmp clc jb cmp and jecxz and in mov dec push mov es stos sahf jle icebp dec push in push scas ljmp out call xor arpl or leave sub daa mov int dec pushf adc lock push push call push sub scas push or sti je mov adc fwait hlt (bad) pop mov mov inc adc jo xor push sbbl (bad) test and mov pop lds mov mov lret xor repnz dec jecxz sub pop push aas dec mov fwait add fsubrl xor cld push ja dec std nop aaa dec push add xchg cmp stos jb pop std sbb jecxz pop xchg aas pop mov sbb pushf mov mov adc and xchg xchg loope sbb pushf jmp ja test pop xchg lcall inc or clc push movsl push xchg ficoml aas pop test jecxz scas dec shlb lret and std daa outsl shll sbbl scas jo sti cmp jge lret mov jbe adc sarb pop lret addr16 xchg lret (bad) out xchg movsb or mov and cltd stos cmp fwait xor and loopne or jl xchg es pop xchg insl movsl (bad) les std jnp dec mov jg aad hlt jl dec and aaa dec or push jp xchg push jg clc daa push or mov icebp lods pop mov loope inc xchg xchg adc push daa push ficom subl mov jp fnsetpm(287 pushf cwtl sti and insl mov dec mov testb sbb mov mov push mov (bad) aam iret xchg in jo add cld outsl outsl movsb int sub dec and icebp (bad) cmp negl std push jae icebp adc and mov pop popf fbld push fidiv mov scas dec mov lods cmp push sub xchg jmp push pop mov cld lods out push test sahf dec cmpsb inc and out jno int3 mov rorl add or js sub push pop mov test fs int3 pop ja jmp ror mov and mov jb jp (bad) mov in (bad) and call stos cmpsl xchg nop cmp inc popf inc adc int scas add out and mov push mov cld mov int in and push inc push sbb xchg sub je sub xchg incb and popa push jp xor mov mov xchg jo (bad) js aam mov les (bad) jle and lret push inc rclw mov sbb push scas dec sti push lea cwtl rcll dec popf jg shrl push xorps adc jae clc jge lea lea mov xor test pop test add xchg mov adc les stos mov pop mov fstps out push push loope lea fwait cwtl and add dec pop pusha inc (bad) mov dec inc push push cld or pop inc mov push icebp popl sti outsl loope mov mov mov lods jne jl stos or sbb sarb jmp imul xor jno lods push lds jg addr16 in cli sti pop (bad) aas push ret pusha xchg mov cmp cli dec xchg mov je xchg add cli clc cs xor adc push lea imul add cwtl mov pop mov rorl lds and jno inc dec inc dec icebp dec ret sub pop push repnz sbb and inc or jle xchg push dec or adc mov inc addr16 repz adc int3 mov dec cld iret inc in dec dec push sbb push jg icebp xchg lock gs jne outsl mov addb lea add loop and imul cmpsb stos aam mov mov ljmp int3 push ja mov jl imul lods mov inc hlt lret mov jbe dec out pop pop add pop mov inc jecxz inc mov es xor push fisttp mov gs adc pop jbe das popf pop cmc (bad) repnz add xor cli jl in pop aas inc push test (bad) jl pop jle lahf fbld das cli call jae out shrb ja jns inc cmp imul mov mov or mov mov mov push sbb inc pop mull mov or das scas xor fidiv lahf xlat jns aad xor mov and adc inc int xor jbe insl xchg les jp rcrl push push adc fimul or loopne ficompl test xor mov faddl in jne cmp icebp rcll pusha inc iret out and rclb lret faddl sub inc shl push mov xchg push xor lods sub adc fiadd sbb pushf and mov mov ds hlt sbb mov aam mov sti dec ds jmp loopne pop cltd (bad) push cld dec pop and (bad) call loop icebp testb xchg xor jno fisubr mov xor push and movsb cld push fwait cmc jl dec jp fidivl notb push and into test sub out push or jne mov int (bad) lods mov sti aad out mov inc mov push and pusha xchg pop jle dec pop loope jbe dec dec clc fwait sub lcall bound stos mov pop std add sbb fcmovnbe cmp sti orb decl stos dec push and adc sbb add fnstsw ss sub mov adc xacquire rep pop pop mov mov int insl sub js outsl mov push and dec pushf in mov popf pop or in and xlat daa sub pop add out rcll cmpsb mov jge mov cld fxch push xchg lcall das push mov das fs or mov inc cmp sub xchg add daa mov loope cs xor ss fwait dec test jb xor push xchg gs mov out lret lods sbbl xor aam push cltd popa std stos cmc or stc aam sbb jnp and fadds sbb adc decl add xchg add test cwtl mov jns dec xor xchg loope jo (bad) pop (bad) rcl aas push cwtl cmp sbb in push xchg mov nop pop aam jle pop inc xor cmovg mov mov xlat ja push (bad) sbb out add xor push addr16 xor fwait popf sbb fisubl push jmp xor sub clc into sbb jecxz (bad) cmp and les jno cmp xchg or shll aas sub or adc sbb xor stc and jmp fildll not popf in lock mov insl push or inc fldl out push lods jp fmulp aad cmp popa mov ret cmp lea cmpsb push aam jne xchg in (bad) int (bad) sbb sbb sbb aas test cs js test rcrl mov jbe (bad) hlt lods daa push hlt out lea xchg pop fs ss sub popf inc push xchg xchg mov mov hlt cli dec xchg dec shr mov push add cmp adc push scas jo (bad) and (bad) in repnz popa push inc adc sbb repnz xchg cmp in test adc mov add loop adc stos mov mov stc push jecxz pop mov inc inc bound mov mov xor jg fsubrs xchg imul xchg sub mov into outsl inc pop jg imull jg sbb int3 jle outsb in mov sub push mov push jg mov mov (bad) push mov imul push jecxz sbb pushf in loop mov cld insl aas mov fdiv lock xchg iret cmovg xchg je aam js xor test (bad) rcl cmp daa add pusha jae mov jno adc cmp xchg repz push xor (bad) ss sbb nop cmp cltd sub (bad) add das xor inc jmp (bad) or sti testb push adc inc out mov call imul xor inc push or shll push movsl mov and dec neg mulps aam idivb jo mov push ffree pop (bad) mov js adc xchg inc movsl or icebp loopne (bad) test iret aas cs or push and inc xor shl sbb ret fstps jp jge push (bad) gs xchg jg xchg test adc das imul push or inc bound repz inc incb outsl push imul add and frstor fnstenv (bad) (bad) add clc pop and ds xor cmp stos jp ljmp outsl lahf push mov sti faddl (bad) loop icebp xchg fmul dec (bad) jo adc inc leave inc mov sub shrb xor inc mov cmc rolb or int sbb sub inc int3 inc cld popa int jecxz push jg or add add mov sahf (bad) mov imul fsubr js sarb xorl dec movsb add in notb loop ret mov xor cmp (bad) lods xor and fcmovb jae or sbb adc xchg jbe data16 mov sbb mov pop fdiv scas fidiv loop mov xor stos jb in xchg decb scas hlt fdivr test fwait pop pop cwtl jg rorl pop xor les (bad) mov rcl mov xor in sub xor push xchg das pop cmp cmp lock push inc imul out imul nopl adc sub adc mov in std sub movsb and clc test (bad) mov std fsubrs xlat aad cwtl jne stos cmc fildll mov or cmp out into pop icebp sub je scas test movb movsb movsl in xchg lds lret mov mov and cltd loope xchg mov xor push arpl sbb sbb lret xchg in cmp cmp mov push imull jle sbb scas and mov adc imul imul or mov outsb xchg lea sbb push mov pusha dec fwait movsb leave add xchg into mov adc sub mov and adc fbstp repz inc inc decl scas fwait xor fisttpll jge roll insb jnp jl add into xor rcrl sti xorl jae push sub cld mov xchg icebp mov mov je sub movsl scas gs lods cmc lret xor std (bad) popf fwait cmp lea popa test mov (bad) mov into loope push add pop xor push ficomp clc fs cli xchg jg divl xchg xor jno adc enter mov mov clc fildl mov fildll ret in inc jl ret aaa nop and pushl mov pop jbe gs push or sti jl rclb iret xor push dec fwait cli push mov sarl adc rorb mov repnz add imul push enter cli dec dec jg jp int lret scas int3 je out cmp (bad) sbb lock mov cmp pop jae mov stc imul xor push xchg jp pushf stc stos mov je ret lods int3 push and nop pop cli in ficoml loopne push aas stos mov (bad) insl repz int3 mov push mov idivl imul movsb push ja jp mov ffreep mov and inc fcmove mov sbb mov lods shlb mov cmp or out (bad) js pop mov aam adc icebp inc das push addb mov repnz stos std dec push xchg bound jae jne jmp out nop/reserved mov push leave pop loopne clts stos call or mov sbb scas test call sbb js clc nop outsl ror into gs dec sub push fnstsw stos fcoms lahf out je xchg xchg insl push das jmp outsl aas call fcmovnbe mov mov and jmp xorl lahf mov imul cmp mov adc mov mov fwait mov clc lea pop mov sub mov test sbb fdivrl in lret mov mov out outsl push call or out lret loope jnp fcmovnbe pop mov in xor jg dec add fwait fs daa push rclb int3 push cmpsl sbb or mov adc das or mov mov push sub daa inc add shr xor gs sbb rorb vsubss add rcr inc push pop enter sbb repz and xor addr16 pop cmp mov out lock inc sbb ficom ja push test mov (bad) stos leave lds into nop gs int xor sar das scas mov xor je icebp inc jae fwait rcll add push push mov lods mov jge fs inc mov iret (bad) fnstsw sahf push subb pop mov mov jbe fildl mov or or outsb add lods fwait xchg idiv sub (bad) push les pop call enter and inc arpl or jnp push cmpsl cli sub pop add das aad push jecxz adc stos jg fisub jae xor inc ljmp and stos add movsb pop andl mov out scas and pop and (bad) lcall clc dec dec icebp xchg or stos outsb push scas push sub sbb dec xlat clc mov jecxz cmp or add js and aam sbb mov outsb or inc bound or pop xor arpl outsb cwtl sub and xor push scas jnp sub sub mov and sub or outsl jp push inc sti push cli ljmp jae dec pushf mov jb aad lock loopne mov xchg push and rorl dec mov pop add xor push xlat cmp dec bnd out dec or cld dec dec mov adc daa dec clc dec movsl pop daa xchg scas push jp mov fs repz pop test xor jne or adc cmp scas cmpsl mov std (bad) jle sbb adcl dec ljmp lret and ljmp mov cmp out inc xor push jb pop sbb andl inc in (bad) cmp push mov mov test fbld pop js mov inc xchg out and gs (bad) or (bad) adc rclb push xchg ss out fstl (bad) or dec pop mov mov fistl in fcmove (bad) leave mov pop ret or es or mov sbb gs pop sbb out dec (bad) (bad) in and test je sbb adc (bad) xchg mov icebp sti stc adc js out sahf out or mov stc leave fdivrs xor xchg mov imul test hlt shll mov push cs and pop int xchg push inc cmp sbb jge,pn loop xchg int fnsave xchg adc cmp push mov rorb mov insb inc fcoml cli dec mov sbb lahf jo in pxor cwtl scas cwtl mov lret sub andl sbb shrb xor ja in sub (bad) mov or push sbb dec stos icebp xlat xor xor bound fdivl fwait imulb in out mov mov xor lret mov rorl cmp out mov xchg pop lods leave mov xchg mov push mov adc mov sbb icebp addr16 mov or add push scas insl cmp outsb popa (bad) lcall testb dec xchg mov push mov mov sub je addr16 sti xchg cmpsl xor cmc cmp dec pushf mov xor lahf dec push arpl xor dec mov lds mov popa test pop stos in and stc mov aad js lcall cltd cld pusha inc mov and mov cmpsl lods ja mov sahf jo adc mov jle xor jnp sbb mov shr outsl (bad) jnp pop mov (bad) repz mov cmp (bad) dec jbe mov or or fisttp mov sbb stos in lds push sbb loopne pop pop lret sbb push aam enter fcmovu xchg gs and push jp add mov (bad) in fsubrl mov cltd dec (bad) xor push cli jo jo (bad) addr16 jo jecxz fs jbe ret lods mov aad sbb arpl (bad) rcll (bad) outsl xor packuswb mov and outsl into push shrb mov mov icebp push cmovno inc push add pop fcompl inc cli cmpsb loopne (bad) fwait or inc sahf (bad) push adc rcll loope ret popf cltd sub out (bad) lds jnp mov and call gs sti fisub gs nop (bad) xchg pop call push and hlt cmp mov cmpsb mov mov in sarl iret adc mov (bad) cmp inc outsl mov adc imul dec inc lods pop addr16 sub lcall mov cli out mov cmp lods leave mulb inc stos add lcall rcrb je fsubr or pop push pop mov sbb scas imul pushf (bad) notl adcb xorl (bad) cmpsb stc push insb movsl add out loop adc loop rcll aas inc mov lret jl das loope fdivrs push aam in mov mov loopne out jg clc ret jnp jle mov icebp sbb (bad) cmc pmaddwd test shll push xchg dec pop xchg sbb out out push mov push movsl pushf sahf pushf jmp jnp scas xor mov (bad) mov pop mov sbb adc mov or ds jne mov mov inc jecxz stos je jecxz (bad) (bad) repnz loope pop mov es mov mov mov rol sar cmp fimul add jmp sbb xor pop dec repnz xor in fisttp andl mov pop add mov sbb xchg adc rorl push jnp xor xor lahf popa mov loope test jb push lods adc pushf jne fs shrb aad out push mov orl hlt fcom leave dec cwtl pop dec mov pop movsb dec inc adc ss bound daa in sbbl jp add clc add push mov lock scas cmpsl in pop bound in mov jns add insb pop scas rorb cmpl in imul fistpl and cmp push imul jl mov mov leave add push jge or ljmp mov loop cld jp adc clc movsl scas scas or movsl push xor adc (bad) dec pop jmp sbb dec dec adc xor push add mov mov and xchg lea aas sbb xchg (bad) fwait mov (bad) ret subl iret inc stos ret push dec test sbb xchg and xchg mov ja dec add out dec mov test test scas icebp and and aas or cmpsb xchg lds push cmp lret adc ja pop and push inc icebp xchg loope push or cmp jmp mov insl push mov loop pop or (bad) mov mov xchg stos pop cmp sub popf fildll push pop cmpsl cli insl mov jnp fbld iret pop scas addr16 int insl lods lods addr16 jb mov jecxz and leave pop mov adc inc fwait rorb fucomip dec jle xor cmp mov sbb and add scas lods and jmp jg cmp inc pop outsl icebp sti test dec xchg aaa fiadd jbe inc jo and pop int loop repz xlat ficompl rol dec iret fldcw cli adc mov out adc mov jp sub test or or add loopne mov insl out int3 test cltd or addr16 dec pop iret les mov dec ja aam sbb cltd or lods xchg jge cmp mov or mov jbe cmp jge inc out das (bad) jmp insb mov int loope lahf loope push push push cmp jnp jne fldenv or adc pop lret dec push sub lahf inc iret sub stos and mov push xchg incb inc and mov (bad) cmp jne lret pop push fwait daa ja daa or and xchg std decl cmp popa bound adc inc pushf mov cmpsb call lret les lock ljmp xor sub ss int3 mov cmp dec inc leave (bad) xor xchg fdivs fsts push cmpsl cmpsb add loop push and mov mov aam dec xchg cwtl jns cld mov push dec mov jnp pop in xchg arpl imul mov add or inc imul xlat mov stos mov data16 push es aaa xchg dec push call xor jl fsubl xor pop iret jge pop rcrl mov jl pop int3 and push xor ret xchg add or jg into pusha repz jb push inc sahf std mov pop nop jecxz push addr16 movsb mov jecxz scas cmpsl (bad) roll jo push outsb pop push xchg mov dec pop xchg pop sbb sub cltd pushf movsl pop out and sub mov xchg jne mov pusha adc test push fnop jae push int (bad) pop jl xlat mov xor mov fimul fistpl (bad) (bad) xor lea sub pop cmp jp xchg ss fsubrl cmpsb pusha cltd dec jnp lods cmpb jb adc popa mov adc ljmp (bad) icebp dec (bad) jmp mov xor cmp push jb in inc dec outsl dec adc cltd push add xchg movsb mov mov sbb xchg pop inc cmpsl cmp es pop xchg jae lcall pusha aam popa pop mov out pop sahf mov push sub pop add sbb or data16 add pushf insb imul out sarb jns sub push je ja ljmp adc ja xor shrb push je add and mov xlat inc femms in push fistpl xchg jne add mov adc inc icebp aas mov adc push sbb jg sbb inc mov ffreep inc or (bad) fs fcmove or leave dec ljmp sub lahf mov sbb aam add and fisttp or xor popa xorl clc and cmp cld sbb xor push or and push subb pop jge je call icebp and jo out sbb lahf add jae divb sbbl push jp mov xchg mov mov xor unpcklps lds xchg outsl adc insl pop pop loop xlat xchg dec dec push ja arpl xchg subl jne insl mov stc push pop rcr jns in lods mov dec arpl and pop add sbb xor (bad) xchg (bad) lods in cmpsl inc popf addr16 and and dec jmp adc adc mov ss lods sub jnp sub pop aam push add cs shlb test mov imul mov xor aad cmp ret out fwait pusha or push cmp jae lds mov (bad) mov xchg notb inc cmp (bad) or iret cwtl jmp pop jle fadds call into cmpsb push lret inc lods push daa sub jg into cld pop jl inc cmp stc push mov mov clc int mov mov xchg jbe xor xchg loopne mov aaa lret push dec idivl lods lods sarb mov xchg adc daa lock hlt cmp xor fisubl popf xchg das test jecxz mulb pushf xor cmp pop (bad) (bad) push jp in scas inc add push (bad) iret lahf stos add sbb fcompl mov xchg in movsb cmc and xchg mov ljmp mov in nop aam (bad) cmpsb loop lret dec icebp cltd cwtl jnp das ljmp jne mov dec out add repnz mov mov (bad) data16 movsb sahf xchg pop gs in clc xchg jns fidivr xchg sub or dec mov push cs mov outsb lahf pop and (bad) loope ljmp sbb ds or pushf cmpsl and dec mov js pop scas fwait or out push mov andb cmpsb mov mov mov or lods and sub jp push cmp mov inc rcll roll sbb xchg cmp adc add test push jns add lds push jp and dec xchg sub cmp in into push gs clc ret xchg xchg adcl out scas movsb mov or inc lret mov aas ret or loop fs adc lret sub fmulp jbe popa inc xchg and dec xchg fisttpll (bad) fcompl cld outsb push sub sti pop or jecxz and jo pop pusha jecxz mov negb out cwtl rol push or push push cmc stos jb test jmp jno cmpsl sbb mov jmp outsl aad out adc mov xchg lds xlat repz inc aas and (bad) push dec xchg ficom push mov xor les nop stc gs adc daa and aam int3 mov jl jno jb mov or addr16 xchg popa mov sub sub mov cmp sub mov imul and fdivrp test mov jecxz sbb mov and inc inc mulb (bad) lods ds aas adc cli and enter test cmc inc subb add test into sbb lods cmp mov and out test xchg adc (bad) mov xchg js push xor push stos fldenv mov in popl adc jmp push cs xlat and jecxz movsb (bad) in mov cmpsl aam std pop data16 jmp and (bad) lret cmp stc xchg loop sbb ret mov xchg mov movsl sar dec and cmpsb in sub xor or mov lcall incb rep andl mov outsb in cmp addr16 mov sub jmp test popl insl es in jg mov ljmp add pop mov push sarl mov cmp hlt dec mov ret push or test xor adc aad mov pop pop adc cs divb dec in int pop adc leave mov ficompl mov por push (bad) fsubs shrl pop mov and ret je adc int js and jo rcrl fs popf xor jns ret mov mov lea cmp popa into add lds mov repnz dec dec mov loope dec push or lock pusha lcall xor inc gs imull sbb cmc xor xchg stc push and (bad) push add sbb stos shll ja imul sbb xchg sub aaa push push ja cmpsb jno call push lock (bad) lret sbb arpl and sbb pop pop in or imul insb cmp jl mov out inc mov cmovge jnp enter jbe out jmp and repnz lds mov test ds push mov repz sub inc movsl fs ja mov fwait mov decl sahf xor xor and sbb frstor inc cmpsb in hlt (bad) in aad les rol imul adc (bad) lds push fnstenv loopne xor xchg scas mov cmp pop cld pop pop mov outsb jno mov adc xor push std (bad) cltd xchg in mov push xor (bad) lock cli pop sti mov jge lock ret mov inc test sub out xchg movb and (bad) in jnp xlat pop xchg ljmp push les add aad mov enter pop out pop enter shlb add into hlt imul jae xchg pop inc lock ljmp lea out sub sbb push test pop dec inc aas and sahf sub xchg dec imul mov push (bad) aaa inc pop inc and enter mov jbe and and out mov into adc xor push testb repz dec outsl test fadd cmpsl addr16 enter and aad and xchg shl push hlt mov stos mov sbb rcr es xchg mov imul lds test das jmp stc arpl mov jne int3 fisttpl xchg inc xchg xor mov sub out cmp mov cmp mov mov xor jp test outsl repnz xor mov loope pop mov aaa mov and sbb mov (bad) xor xorb dec jge (bad) jae push jno loop adc mov jge enter popa or cld (bad) insb mov jge fs jnp sbb cmp daa in pop rorl inc cwtl cmp lahf rcrl fidivl mov stc call mov xchg mov and mov mov xchg mov insb cmc aaa (bad) ss test mov hlt xor cmc js sub cwtl push imul shl stos aam out pop mov arpl in out mov cs hlt leave xchg add push fwait mov push fwait or push cld iret push sbb addr16 loope sub call (bad) mov push sahf push mov fdiv dec repnz in (bad) clc inc inc repz cmc shrl loop cmp mov ja and (bad) mov scas cmp push pop mov xchg dec repnz fnstenv push scas dec mov pop xchg fldpi cmp test push ret inc mov dec cmp mov bound fwait loope lcall xor inc cmpsb ficomp rcrl aas pop xchg cmp dec add xchg int3 in xor pop popf xchg enter push dec sub mov xor (bad) mov push add mov arpl mov mov push inc or sbb dec hlt dec lcall cwtl out jbe xchg inc mov mov lcall ja mov fdivs cmp adc pusha lea in insb push add adc or pop lds sarl add or (bad) pop xor popa sbbl in xor outsl outsb inc lock mov mov imul jb,pt adc rorb sbb mov mov sahf inc sub lcall frstpm(287 sub shrl add adc fs cld sub xchg cmp repz cwtl cmp sub push lods inc lods add sbb or fisubrl popf sub mov ret out adc push xor lds xchg (bad) fs imul fs or out jle (bad) stos pop or (bad) fxch push jb out gs xor xor shrb leave push out popl and ficompl leave inc pusha leave enter sub mov test jns (bad) in and fadds pop sbb out inc mov call iret lock jecxz add jg mov pop jne movsl cld pop in jae lret jo or std adc and fidiv mov dec dec mov jg out (bad) mov pop rorb push out sub aam out mov push aad jb xchg ljmp push ret push cli cmp push mov test adc fsubs push sbb dec sub cmp ret test clc ja push xor xor mov lods sbb sub hlt es lds jbe fwait hlt mov pop cmp lret setle dec xor sti xor push in mov ja mulb into ljmp dec xchg mov leave pop cmpsl clc jne push test das cltd mov add sarl lock (bad) push mov add and xor add inc fs add or dec in pop pop test inc (bad) mul rclb adc or jge or mov add clc jne inc fstl jle clc cwtl mov and push repnz adc dec xchg inc ljmp push xor fucomi mov push inc dec clc lahf push lahf xchg inc dec mov ljmp dec dec adc inc (bad) push scas cltd sbb out sbb lret call jbe hlt xchg or in sbb nop mov lahf aad inc ja repnz daa test dec fidivr out mov cmpsl dec stos push push loopne aam cltd icebp (bad) aam add hlt dec add aam out xchg adc mov iret add adc stc ss add adc cwtl adc outsb fs out sbb adc inc sbb repnz es cmpl data16 or push fwait cs out rclb aad mov enter dec scas bound mov adc imul inc test xor dec es nop in push cmpsl stos js mov rolb or idivb mov rcll jl inc pusha icebp movsl loop ret adc cmpsb enter mov jg into and add popa jns (bad) stc cmpl xor pushf sub push push inc test pop push mov lock cmpsl add push push clc or popf (bad) xchg xchg mov lds jno fyl2x xor loop jecxz sub or xchg push and dec les and outsb push fidivr or or nop xor xchg lcall inc dec iret fdivrl in mov decb loope dec rorb int sbb xchg mov sbb aad adc divl ds nop gs mov xor bound xchg push loope sti inc mov xchg adc push into dec jg fucomp lods pop lods das sarb and and (bad) insb jmp push ds sbb aad sbb dec je lods subl sahf jne cmp push test mov movsb sub push xchg shlb test out (bad) loopne cmc in out ret mov mov pop adc lods andb rcrb jl cmp mov and rol arpl xor aas (bad) test sbb adc orl sbb push in push (bad) lods aas sub ljmp cmp or shld lcall pop outsl inc add fbstp push push mov out xor aas mov fmull push cmpsl mov scas adc leave push pop outsb and or mov cmp jl fisttpl push push test jp outsb sahf pop imul mov mov (bad) xor fsubrp mov add out jo test scas dec sub and dec das pop lahf dec xor subl add jns jo addr16 adc cli pop rcr fmul faddl aad mov dec pop adc adc loop xor xor cltd cwtd lret cmpsl sbb adc test in add out bound jg inc (bad) jp repnz lret iret add fistp lahf mov mov or sahf cmp in inc dec sub pop rorb inc jmp adc insb enter add cmovno adc dec nop pop mov movl jne iret sbb jae lahf repz adc xchg daa jb inc cmpsl jp push inc mov (bad) and dec hlt iret add pop sbb ss push xchg dec fcmovnu sbb inc cltd in into testb daa shlb add fdecstp or pushf cmp int3 (bad) (bad) mov push or jb inc gs (bad) or lods fistpl jno or jp mov cltd push mov gs fmul jno loopne stos cmc mov xchg and lcall lret (bad) stos pop jnp or gs jb dec push jnp adc push push cmp das pop pushf les adc outsl in loopne js or cmc aam jle add in inc in sarl xor jge mov sub jnp es mov push dec add jns xchg (bad) xchg push out push dec insl stos or das ljmp (bad) pop dec inc or sub xchg aaa out adc push inc adc cltd adc in jbe inc mov or dec cs jmp mov xlat in inc ss jnp cltd adc jl sbb repnz mov xchg jns mov (bad) movsl and add sbb xor mov xchg mov cmp (bad) fcom xchg mov lret (bad) hlt outsl mov or or movsb insb test mov xlat stos imul sbb cs inc mov jno addr16 mov fdiv add cmp addr16 sbb fnstenv pop push dec sbb cmc sti xchg lcall frstor lcall shrb cmc (bad) outsb sbb mov mov adc dec dec push push idivb dec push add jae pop icebp xor push jae out mov mov pop pusha mov cmpsb lahf icebp test arpl ds stc xor lret jns dec dec mov xchg repnz xor fucom inc lret pop test out cmc xchg in bswap xor and and cmp mov or int outsb outsl xor sub xchg mov addb inc fmuls xor push sbb jo push cmpsb imul xchg adc in lods call loope add mov out mov movb xchg pop out cmpsb pop dec sub pop pusha loopne push das cmc ds lcall pop jge pop and jbe and test inc push insb inc cmp data16 pop jp and aaa mov mov test mov dec jmp sub out stc push push jle or sub cli xor pop daa sub inc add loopne cltd pop mov imul cmpsl std jge or pop and mov jne cltd into mov ljmp loope push pop pop stc and inc dec ret in pop sub insl ja inc push cmp cmp jge int3 aaa push hlt xchg in fist (bad) scas mov out iret or mov dec push aaa dec dec js rclb dec mov mov testb std stos and push popa adc push bound imul test xchg pop push adc cltd outsb sarb lcall xchg cwtl cmp pushf mov call dec repnz push lock ljmp and push cmp adc push pop xor mov push jbe mov daa mov fldcw jmp (bad) jmp cmp add fcoml cmp mov decl lea push cmp xchg in jb mov pop insb xchg xchg sub and je sbb fidivr cmpb xchg cmp lea mov or pop out xchg fucom jne scas stc sbb fdivrl enter insb f2xm1 stos or cmpsb lcall dec sub xor sub jp pusha lahf jge mov sub movsb addl push cmp nop push push and mov cmp mov call ss push lods popa leave jb mov in xchg or mov lds mov aas xor (bad) test out fisubrl pop fdivrl adc aam aam loope data16 in pop adc ljmp negb popf aas mov or fidivl (bad) or stc dec jmp push and or ret mov nop xchg ja sti jecxz fild mov cmp add inc fadds call hlt mov adc dec in (bad) fdiv scas test sub jno cmp in out leave loop sahf imul stos jns (bad) out add pushf jae pop mov push push icebp jo xor and add outsb test jl cld sbb faddp jno in inc data16 dec in add das popf mov pusha jno jl jecxz add (bad) cld push andb scas scas cmp mov xor cmp and jg and nop out jmp sahf ret sub in shrl adc cmpsl push icebp push (bad) and xchg sub xchg lock cmp inc (bad) (bad) fidivr test test push or jbe movsb add sbb pop je cli adc loop test aam mov cltd mov mov arpl out mov (bad) push mov sbb pusha jnp sub int3 pop lods jge dec in repnz pop fbld test out add or inc push push rcrb int outsb xor test sahf repz inc out ja mov dec dec jl js inc push cltd jmp insl push cmp cs stos cmp and sbb mov mov jbe cwtl divl nop inc test (bad) add gs add ret in arpl test add or and cmc or in nop and jns jnp fdivrs xlat pop gs test inc xchg mov pusha arpl popf cmpsl jg outsl xor int repz das test xchg pusha xchg ret stc ror push icebp data16 lret pushf scas xor lds popf sbb jns lcall imul aas push arpl fist or dec pop inc sub xchg scas or jge into das add pop addr16 add leave aam inc pushf mov mov ss pop mov push lds ret mov sbb lahf outsb jne dec xchg std lret inc aam cmpsb les cmc xor xlat test hlt jb icebp jg mov adc jns rcll je or pop in sahf lods out (bad) daa push in mov or and xchg scas sub pop mov jecxz or in pop loop subb stos pop ret int3 jg (bad) xchg mov xor push stos pop sub aaa push js sbb mov cli popf (bad) cmc dec dec std (bad) iret int aam sbb push dec mov jne sbb out dec push ds leave fsubrs push fnop dec adc lahf push clc imul aad ja sub dec sarb daa sub push add inc into jne mov sarl je cmc jbe test aad rorl loop es push inc jg ss jle or dec push fs sub je shl xchg sbb ret out push stos in cmp mov pop cwtl (bad) shl test add stc jmp or call das dec push into out scas enter jge xor pop pop pop andl pop rep and in (bad) pusha pop push out es mov sub xchg mov cmp pop jge mov push adc sahf js pop dec sbb xchg ret dec out nop mov fwait lahf lret (bad) pop imul pop push push stc cmp test fcomps repz sub fdiv xor jge jle jns insl fdivrs lcall dec jmp les adc jns decb sbb cmpsb push xorl (bad) pushl loope and pop xchg stc scas cmpsl test inc cltd pop sahf sub mov xchg or sbb sbb repz pop adc mov sub xlat jecxz cli xchg fistp mov xor push je inc in jge cmp xchg outsb adc hlt ja (bad) pop jne notb jnp and (bad) xor mov cmp es imulb je dec fdivrp lock push xchg imul jecxz loope aad xchg out jae insl push aaa adcb test mov add mov decb and loope fisttp mov pushf and movsb mov test lock movsb fdivrl add cltd sbb mov mov push dec out add out pop mov stos and cmp dec push mov push or es out adc sbb xor frstor nop inc add in pop std das icebp xchg jp sub pop mov aam popa xchg incb sbb mov (bad) cmp (bad) popa or xchg hlt cmc push mov das add pop mov cmc push sbb (bad) out xchg push push cmpsl xor or test pop sti in fistl add push cltd jle cs push cli mov addr16 pusha aaa out mov pop xor mov rcr sub push push lahf xchg aam cmp jnp jmp popa data16 push in lods out xchg (bad) mov pop cld push xchg cld push cmc adc xchg sub pop inc pop ljmp lods mov mov addr16 fisttpll and out pop mov stos nop (bad) pop add loope loop sbb push enter pop inc and enter gs or lods mov push mov test scas mov pusha in sbb sbb xchg lret dec jo pop loope jmp (bad) arpl pop fcoms fs or and fcompl ret mov fnsave cmc or xor or mov sub xchg je nop push clc mov imull xor lahf pop imul lret ret inc mov mov or pop lea popf cmp das in jb sub loop,pn addr16 insl nop jecxz inc cmp sbb xchg push or loope lea sub xor dec aas mov mov adc mov mov mov xor loop dec mov es lret cmp sub mov loope mov and mov sbb jp xchg sub out sub hlt mov xor imul shlb subb xor (bad) pop rcr jns dec or pop in mov lods stos adcl lods xor negb lret incl cmp ja or cmp mov out (bad) mov dec pop xchg in and mov mov mov icebp dec nop into cmpsb pop pusha lds (bad) add or lret xor mov add mov js notb or and inc jne ljmp cmpb sarb xchg scas mov mov ret fwait jb outsl inc inc les lahf xchg in test mov aaa bound sbb jmp xchg push int (bad) popf pop stos subl cmp sub sbb or rcll mov ja sub xlat dec pop push ss icebp dec and cld std push jb pusha xlat and dec xor push push mov jo lods xchg inc aad int3 and push cmc test jae push pop in pop notl mov lcall lret insl pop in sub and scas inc fsts test push loop pushf cwtl js jb (bad) mov scas (bad) xor jno stos lcall xchg cld lods insl fdivr nop and arpl (bad) shlb jle into and and sbb jecxz jae ret gs xor xor call out and enter mov push jbe in sub shlb test test data16 mov pop lods inc fcoml insl notl xchg sub jo sbb xchg dec sub xor xchg int cli aaa mov arpl mov sub in mov rcrb in ret (bad) sbb xor xchg mov stos pop movl jle loop pop aad mov fwait push sbb push mov sbb add dec add mov (bad) das xor push cmp loopne rorb in aas inc add popa dec test fs (bad) out inc push pushf sbb sub adc addr16 mov pop lods sti scas stos and in jb lods stos clc adc inc (bad) mull jg lods dec inc push lock cmp dec pop add inc adc mov mov imul stos and stos mov mov (bad) leave arpl mov cmp xor sub out and push xchg cld inc (bad) sub leave pop aam sysenter or lods cmp and xchg out ret test in cmc cs inc pop inc call mov jns das test repz sub fs (bad) int in cmp inc les or test or mov inc push incb sub xor xorl jecxz sub inc dec divl rorl iret dec loope mov cmp jmp sub iret sbb sub lret inc xlat (bad) jns jo lea sbb sbb mov sbb push jg adc movsb or cmp sbb add push pop cmpsb inc mov dec xor test ljmp lahf jmp (bad) add pop jnp inc test dec (bad) pop out push hlt aam js jp or mull sahf pop and pop cmc icebp aam fwait mov in lods inc sbb fidivl or add xchg mov fdivp sbb clc decb or and or push cmp push movb loopne sbb or lods sbb repnz sbb xor jl mov cmp mov sbb movsl rcrl push cmpl xorb sub jns mov xor or fidivl pop mov xor cmc jne mov push bound pop mov pop sti fcomi out jne (bad) or fcmovnu dec ret fild les aaa jmp popa sar sub add sbb cs pop sbb push mov cmp inc rcl imul cltd (bad) idiv imul xchg (bad) jb pop dec add pop fstl adc cmpl iret jmp stc mov push fisttpl xor sub pop lret xchg push jge dec ljmp push stos out enter (bad) inc mov inc mov test out push and jnp or rcl xchg int3 data16 pop ja push jecxz sahf mov addr16 sbb orl cmp repnz xchg mov imul test loope mov mov push mov mov cmpl inc cmp in pushf and and jp and loop fs clc movsb sub roll loope (bad) and movsl (bad) jle aaa bound ret inc mov (bad) enter nop push js push rcrb sti or and jecxz ja adc pop movsl mov adc ficoml int inc js inc or push jnp mov out orl xchg dec mov daa stos int pop mov mov icebp ljmp roll daa mov and test dec mov push inc aam and test add jbe or sub push mov (bad) jge mov mov in and ror push lock andl sar xlat rorl mov ljmp push stc pop js ret sub jbe inc cmp loop adc fdivl and enter and mov dec shrb jno adc in inc xor sub and movb sbb inc xchg push test jecxz out (bad) aaa pop ret push in mov subl pushf hlt cmp call (bad) xor jae cmp jle (bad) lock jbe xor pop dec push jbe ja popa jge xlat or jmp out jnp imul jno outsb insl sub stc and jnp je cmp xchg in fs rcrb rol sbb dec xor jmp xchg aas jg jecxz popf mov test xlat push lahf lret mov loope stos jecxz in pop jmp outsb movl ret jo lcall add sbb rcrl (bad) adc jecxz in mov inc aad imul xchg hlt cmpsb mov in add scas or std add sar movsb add nop into (bad) fdivrl xor (bad) mov (bad) push std mov out or xchg dec outsb (bad) leave (bad) in sbb jle roll ret sub xchg test les cmp addl movsb ljmp or push jg mov divb fdivs cli inc cmc xchg outsl test aas push lds xchg push dec and lret mov rcl jg mov cltd push mov xor cs enter int in xchg inc cmpsb sbb ret xor (bad) dec and sub and mov lock cld aad mov xchg lret jns fsubl xor jle pop xor push test fidivl cmpsb dec adc decb out fdivl enter cmpsb mov ja xor cmc mov push jae push mov popf stos jns jp add push clc adc push xchg sbb neg iret leave aad iret mov mov cmp cmc inc jae mov mov adc pusha push push ret inc jbe bound popf mov popf inc repnz xchg and sbb pop fdivl inc add pop mov ja xor pop fistp pop jecxz jle (bad) fdivrs fsubs addr16 push subb mov mov (bad) repz nop inc adc int sbb es scas ret adc cmp in inc mov sarb popa enter call and hlt push mov sbb lods xor (bad) lods ret pop cs mov loop sub jbe or ljmp mov mov sub into adc and add adc mov test les mov nop add call jg push dec lahf sbb (bad) pushf pusha and mov xor (bad) fidivl ja out pop fcomps std xlat jb out lea pop daa cltd into mov pop and add movsb inc mov int lock adc push push fstpt int ljmp mov ja (bad) sbb cmpsb jp pop sub hlt dec in push fisttpll and sbb mov shr out mov insb mov pop jns fwait ljmp js and add xor out loopne inc xlat xor movsb push mov in iret mov jae cli push les mov pop jl (bad) mov rclb xchg ljmp or mov push push pop (bad) lahf es mov ja data16 and and mov mov inc cmp jecxz jmp outsl popa jl andl xor mov mov adc or inc push xor push xor test push dec enter mov push arpl int leave je clc add insl xor xchg in and xchg jo push jmp sti das (bad) and out (bad) mov in inc pop mov loope pop push push js mov mov fsubrs movsb cwtl inc mov out jbe mov ja pushf (bad) loopne inc cs sbb xchg mov imull add psllq out rorb out sbb cmpsl add nop movsb and (bad) roll dec ljmp (bad) loopne sti jne and popa push (bad) xchg cltd pushf jl pop cmp arpl pop test cwtl lret rcrb sti or xchg mov sbb loope cmpsb sub jo dec fwait mov pop popa push dec es dec jnp int3 fcmovu andb cmp std or or clc flds sahf insl pop mov mov sti xor add daa repnz mov xchg fisubrl loop leave loope int jae push insb jp pop pusha adc xchg stc dec cmpsl enter dec inc mov pop mov daa inc (bad) sub lods dec dec adc std lret out in push dec cmpl vpcmpeqw outsl stos rorb lds and int push pop stc cli repnz and scas add mov sbb jg test jnp sbb xor dec outsl popa mov xchg mov out mov inc je (bad) cmc ds xorl mov arpl shr std into mov rcll xchg or rcr pop xchg iret sbb stc nop fstl lcall adc sub push sbb dec stos pop aaa and repnz fdivrs (bad) push cwtl test mov pusha mov lret addr16 xor ror cs fidiv pop popf jb outsl mov sub mov xchg inc push (bad) push mov lock addb aam inc push sub fnstcw jnp mov jbe repz dec scas aaa sub lret int lcall add or addl dec jg or xor cmp jbe push je daa in bound ret mov cmpsl mov dec cmp fnstsw in scas (bad) test aam fwait mov jle push in jns fnstcw cltd (bad) out mov imul mov and and xchg and insl in pop flds cmpsl scas mov (bad) popf jnp jae in cmp cld lret call das mov (bad) push dec cmp sbb loop push sbb js adc push mov pop or icebp xchg pop lret outsb push mov (bad) mov inc jl pop sbb mov and xor and stc jecxz addr16 mov aad sahf or insl lret add femms das (bad) mov xor xchg adc pop push aaa (bad) xor jmp xchg pop daa xor gs push gs (bad) adcb push fiadd ja test lods insl ja xlat cwtl jno fmul dec movsl xor cmp push dec lea dec (bad) aam and out popf adc dec dec add popa test push adc cmp gs mov push adc xchg mov mov arpl pop pop xor sbb inc cltd lret lock jmp pop pop pop andl push push mov pop sbb fcomps dec enter cmp cmp jle adc sub in push jge movsb jb mov jl iret dec jg xlat js ficoml pop aaa dec test out pop iret add lret xor jmp loopne loope out pop aad cmpsb test jp mov or incb jmp pop cmp add inc dec or mov in xchg pop arpl jbe cmpsb movsb int3 push push dec mov xchg adc sub dec ret imul daa std loop cmp imul push jl mov lock jbe adc sub jle jl lcall mov lret lods icebp out xor in inc movq pop sbb mov jbe xor ja mov sub jle adc pop lcall pusha enter mov cmpsl mov push push and aaa pushf mov shl das (bad) xor scas dec test (bad) out hlt xchg and leave cmpsl (bad) insb mov dec mov cmp xchg loopne cmp test cmp xor inc in daa or dec mov xorl xor cmp out sub fidivr mov in sbb rclb rorl mov push xchg pop sbb adc ja xchg ret pushf rclb test clc or mov (bad) mov dec push stos xor in fldenv jle sbb xchg stos lret push sub es lods sub xor test mov loop int3 addr16 notb std xor fisttpll mov je ljmp lahf mov cltd ljmp aam fdivl js sbb stos rcll jae add int3 add das movsb sub jbe icebp loope or cmpsl inc cs test dec and mov scas aaa imul xor mov daa shlb int3 imul (bad) cmpsb lcall jo mov or mov jge xlat xor sub int mov xor xchg (bad) xor aad pop lcall mov std adc fs and and jns or in ret sub cmpsb adc push sub inc es test add test xchg test movsl fs adc rclb idiv pop mov push scas mov adc subl pop jl push push cmpsb adc mov (bad) jno into orl mov mov mov mov outsb ret xchg inc xchg cmc ret ret sahf (bad) jb inc dec lahf enter xchg je xchg or push xchg add jecxz (bad) jno push add sub jo in ds sahf das aad mov jnp (bad) aad mov loopne dec cmc inc and jbe ljmp aas cwtl cmp push sti fdivl aam out rorl aad lcall inc outsl cmpsb adc test inc scas mov inc push int lahf stos sub adc fsubrp js mov and loope jne pop mov stc sub jge data16 das inc idiv jne xor pop aas sbb inc jp popa or sub mov sti out push push rcrb dec sub cwtl aaa andl or std and cli stos enter ret out (bad) mov das es in repnz fisubl sbb xchg mov mov push repz aaa jno test xchg dec in out push sub pusha mov xlat (bad) jno inc out lods subl in inc mov cmpsl repnz ror push in push xchg lods stc xchg and xchg mov and or lods push stos leave and inc sbb shlb xchg sub ds ret out xor int fist lds add test (bad) xchg cmpsb mov mov push loopne xchg pop xor (bad) shll push outsl stos (bad) aaa mov mov inc cld and sub aaa ret rcl push or cmpsb lahf sub popa movsl mov loopne pop or mov mov fidiv push bound or lcall in dec pushf pop rcrl inc sti mov fnstsw lock fstps jge push daa mov fnstenv mov mulb dec lcall or mov xchg and scas or ret push bound notb fcoml sub push int pop adc test test out js and out inc mov mov outsb rcr pop sbb inc rcll and push ret inc dec push pop push or lock xor scas outsl test pop mov xlat insb dec mov scas adc (bad) mov (bad) pop dec inc push push gs xorl (bad) sbb shr push aas out (bad) mov loopne ljmp jno mov das fadds je js mov insl and adc or pop shrb (bad) inc mov add cmp dec (bad) fidivr pop je pop bound (bad) fcompl jnp icebp mov jne adc push loop inc inc mov (bad) fwait mov adc test add push mov cmpsb mov nop pop sbb cltd (bad) mov and and rolb or xorl push mov inc jo jge test jl imulb rol pushf or pop icebp test mov lds out xor in jbe adc fdivrl out popf sarl mov jmp add push lods mov (bad) ss mov jne mov and (bad) push pop js repnz push das jns call mov aam dec cmpsl sbb clc sahf xlat (bad) (bad) add or in test rol pop insb iret arpl dec hlt into jmp adc add cmp jl adc push aad inc dec roll fisttpl or inc jmp dec sahf sub ljmp xor ret mov cmpsl sub mov pop sub loope sbb iret lcall int3 cmpsb (bad) push pushf pop (bad) int xor fisubl je cmp mov enter sbb arpl xor xchg inc test adc mov insb into sarb push rcr pop xchg adc cwtl leave jno aam lret xor paddq fisttpll sub push mov cwtl dec and ret and xchg cli dec jmp (bad) xchg add mov lock cmp pusha sbb ret sub inc outsb xor lods mov cmpsl lret pop cs in push mov xchg nop pop xlat pop lret mov popf mov out add mov inc sbb fcoms sbb lock sti xchg imulb inc mov enter bound pop jno fisttpll jnp pop dec jnp inc mov xchg lret mov xor mov push inc push mov inc mov (bad) pop (bad) mov stc mov dec push enter es dec mov pushf rcll in int shrb xchg shr xchg sarl jae sbb bound pop out jmp aam lods jg inc or lcall lods std mov dec andl stos jns lahf inc insl cmp xor mov repz mov les mov addl xlat rclb push mov cltd leave outsb (bad) stc mov inc imul repz and adc cmc sbb fisubl mov xor pop cld inc popa (bad) stos frstor dec mov xchg xchg cmp mov mov xor imul int3 es cwtl sub imul out adc sti inc out dec mov imul xchg xchg sbb notb iret sub xchg xchg xchg sahf bnd mov mov adc sbb je in lret in jle (bad) and outsb jne les mov imul lret test es loope daa cs test jns rorl and iret (bad) pushf mov pop test mov fs hlt mov (bad) mov gs ret clc in add cs mov mov addl mov js push orb push mov mov sbb mov or rolb mov jge js lret hlt gs cwtl loopne mov aas sbb sbb mov sub and sti inc and cmc ss gs mov incb (bad) sub clc and dec stos push fmuls shrb dec loope push ljmp pop jecxz aam jge enter cmp mov aad pop iret xlat xlat dec (bad) cmp xor xchg jp les loope mov pop mov adc ficoml push mov jae push inc or loope xor lret fidivl sbb in out mov or mov add sbb dec mov in xor sub and int dec (bad) mov fldl out fsubp (bad) xrelease imul outsb inc dec stos pop pop dec test inc (bad) bound loopne icebp xlat xchg ljmp lcall mov push or dec loope js test cli ret mov adc push das stc rorl pop movsl fcmovnbe lret daa (bad) mov adc icebp sub je adc or int mov sub adc add shrb mov sbb sub adc mov fwait repz fmulp pop addr16 push inc inc jle mov jns test repz lods pop pop pushf mov sub pop mov push loop xchg ror addr16 or adc fsubs jo out test inc xor add inc push or out sbb dec shrl cmp or xor mov in sub pop in or adcl test xchg pop inc mov xchg xlat dec mov loope daa inc lret enter mov sub pushf add adc push jmp or jle gs loop mov enter dec cmp mov int idivl mov sub div addr16 cltd sub int lods mov ljmp push std in loope or xchg jbe adc in push xchg cwtl xchg outsl jge sub fnstsw push roll into mov and (bad) cmpsl iret fmul (bad) aas add sub test adc sub mov mov xor cld push addr16 jecxz das pop jecxz add js data16 (bad) dec push cli cltd (bad) clc dec jo push leave rcll ss lcall (bad) loop xchg (bad) outsb movsb or inc inc sub cmp rcrb jmp jmp (bad) cli add ljmp xchg (bad) and mov inc or cmc jno mov add jle inc test xor je jge adc jo gs cld int3 jno orb scas into jle adc mov call sub hlt pop imul push int cmp int3 cltd iret out mov dec cs adc push mov pushf fwait rolb pusha or mov jbe dec xor pushf (bad) scas mov sbb xchg stc push xchg jo (bad) movsb add inc (bad) call dec ja push dec into and jo xlat xlat pop mov inc (bad) or (bad) push popf jp mov test sbb popf mov pop int3 cli icebp sbb aad jge adc imul pop push test push sbb fstl and int mov sti push add (bad) xchg xor fist lcall test stos pop cwtl fstpl jecxz dec imul jns loope insl pop scas and cmpsb ss out xchg mov in sub or fcompl push xchg pop fsts and movsl aas mov push fs fisttpll sbb cmpl dec cmp jg pop or fs mov (bad) or (bad) and es es cmp jecxz push mov out lretw xchg nop outsl test subl cwtl sbb jnp roll out imul jns cltd lahf jg aaa mov or adc call loope and mov ret movsb shrl push dec mov push adc mov xchg int jmp dec out loope ds les (bad) jl xchg mov loope jecxz mov push pop lods mov inc fild jle pop fsubs and rorb jl or add fs cmp repz pop xor push pop loop jae je mov aad xor and leave mov lock (bad) jmp mov xchg ljmp rorb sbb repnz or pop (bad) mov je lahf subb pop or mov nop shlb xor mov inc jge dec or sub cli add and sbb adc ret pop icebp dec jge inc sbb push push xor pop and sub gs (bad) lds clc adc mov setp (bad) repz andl or fnop loopne xchg jae jle dec adc sbb test sub test repz pop ds inc movsl rcl sbb int3 xchg clc jae sahf and dec xor aas pusha jmp imulb jp fpatan insb cmp fldcw or lcall sub frstor xor jecxz bound inc cmp int fdiv cmpsl pushw aas jecxz pushf mov push adc pusha push nop insb fsubrs outsb nop mov lahf outsb cmc and hlt pushw adc or push jmp cmp gs in jae inc mov mov pushf pop xor clc imul mov or ja cmp int or bound push mov cld fdivrl add push (bad) stos mov ret (bad) mov repnz sub lret addr16 in dec push data16 into jne push or fmull jbe fdivrl dec in xchg ret mov pushf rcr mov sbb sbb and mov mov gs leave cld cmpsb xchg mov mov aam into stos sar (bad) fdivrs push (bad) popf ss push into adc and fadds enter lahf inc pop fwait mov mov das leave pop fcoms add out (bad) sbb adc enter loope pop or push into out add push addr16 mov fucomi xchg mov ret inc jle gs imul (bad) clc idivl mov (bad) pop rorl push outsl hlt push fucomip das adcl rol pop jo stos dec test mov lret sub push pop inc dec mov jecxz inc pop pop and or and es sti pop sahf into scas js jl call pop enter cmc mov adc imul pop lods bt mov inc shrl cmc mov bound (bad) enter xchg lret mov outsl pop sub or push stos push jo lcall cmp pop popl sti jmp data16 pop pusha push test (bad) fidivl subb mov jbe and xchg cmp dec lret mov sub mov cmp inc stos loopne mov lret mov inc stos jmp cmp mov mov lcall es xor adc jb hlt cs or mov (bad) loopne dec pop dec out sti fisttpl in jbe lds outsl inc (bad) test movsb pop mov jp sbb pop nop and xor dec sub push cmc rcrb nop aad shlb sub add loop pop aaa pop fs cmp push mov int push lock sbb ret cmpsl (bad) inc cltd pop cmp movzbl pop imul pop jnp imul mov in xchg xchg (bad) push stc xchg out popa sbb pop mov and push jecxz outsl (bad) daa sahf push sbb fisttpl pop mov popf adc sbb adc push adc xchg testl fcoml addr16 dec insb popa (bad) mov (bad) (bad) xchg ljmp cmp outsb push push add jl or scas dec shrb xchg jl arpl in jae lea shrl add or in (bad) jge xchg sbbl clc sbb popf stos fisubr test jle iret pop fs cmp push cmpsw or pop roll (bad) js xor add mov imul mov mov sti arpl mov in jbe dec adc int (bad) sub out mov mov lret pusha in cwtl arpl inc lods popa not xor (bad) adc (bad) pusha ss lds inc (bad) jne ret mov in repz inc cmp adc leave xor sbb lods test stc jecxz fxch inc (bad) daa repz fldcw cmp sbb pop jno jnp mull sub fistpl sub lea arpl movsb mov mov jne jae incl add adc dec fiaddl insl arpl ret push lahf je lea adc fist js cmp jo rorl fs add pop test lods xor pushf push imul or imul into mov inc push (bad) adc movsl out adc jnp xchg inc jo push inc mov dec xchg es pop inc (bad) popa das out push pushf hlt popa (bad) mull and sti dec adc (bad) loopne cmp sbb mov dec stos aas js adc pushf xchg push adc loop in inc sub xor cmp cmpsl cmp xor adc insb or aas push and pop inc or test rol pop mov ljmp in in inc and xor sahf fdivrs enter mov inc lret loop dec or add push insl adc popa (bad) fwait insl je pop sbbl inc push ret fwait iret xor lahf jecxz xchg pushf dec in je js hlt add push jbe out popa push call mov (bad) cli mov xchg in fucompp or inc es aaa repz out stos arpl xchg in not cmp in push jnp or ret sbb (bad) rcrb aam iret in sbb mov mov adc mov cmpsb xchg shll out xchg mov add pushf ljmp mov pmulhw or cmpsb leave jg or jo clc mov dec pop sahf icebp adc popa inc pop add jge xor mov sub scas and sbb jge push fidivr push dec lret std and (bad) push mov insl hlt fildll int cli (bad) cmp in or arpl pop lods mov in sub mov jge call movsb inc call cmp inc xor bound sahf ja mov cmp arpl popf mov inc stc loop lock adc jp jne lcall mov xor lahf das mov out in xchg iret lret xlat add lods popf insl cmpb lock (bad) iret (bad) mov xlat nop jb cmp dec (bad) arpl leave stos adc mov mov out scas lret outsb mov pop jecxz and cwtl xchg cs push lods jle ja std xchg pop push out rorl sti sub fisttpll pop jb imul and mov test push outsl mov call mov mov lret cmpsl mov mov in (bad) cmp or mov iret add push das add call imul mov int push arpl jecxz jne or xchg fdivr push int3 fldt push adcl dec adc es inc repnz xchg cmc mul nop lea or or adc sub xor je pop sarb inc or sti mov sub les jae mov inc mov incb xchg push or push mov daa sub lahf call iret shrl les inc outsl call (bad) mov pop add pop push sbb dec dec adc cmp sub insb mov add push leave add push inc sbb das mov sbb clc inc mov es mov movsl sbb pop je fucomi mov cltd mov aam mov and out xor push cmp out jae push ret or cmp enter pop cli jecxz lret mov push mov sbb stos mov loope mov xchg add mov fs sbb inc add fisttpll mov test repnz arpl push or inc daa cmp mov xor mov cmp cmp ljmp xlat pushl or mov out adc pop jecxz leave int xor bound aas out xor push fstl and jl insl jp in jg mov fwait js mov jle sahf push (bad) outsb jae fdivp xchg dec xchg pusha sub mov (bad) shlb std pop (bad) mov jmp mov and imul imul mov adc mov inc into inc inc push imul outsl lods pop ds icebp lock mov into lea and inc sti repnz fdivrl int3 cs cli faddl in add popa (bad) int sub fwait mov dec lds into cmpsl rcrb iret add cmp out ret outsl sbb lea and fs push fidiv sti inc xlat cmp or incl shlb cmp add mov jecxz,pn imul pop std pop mov add xlat lahf (bad) pushf stos cltd std fist insl sti mov (bad) dec xchg cmp lahf js adc mov test in sub lock ljmp js sub mov push pop add hlt (bad) and ljmp out ficoml jns add adcl leave cli repz mov test js fstpt adc and mov imul (bad) or jg les pushf adc sub mov inc inc mov mov popa mov push sbb and add add (bad) jecxz cmp sub repnz lret push (bad) (bad) std or in xchg cwtl ljmp pop in imul dec jne xlat dec mov sbb fisub mov bound dec sbb adc test or (bad) cmc sbb jne je (bad) adc pop jmp add jae inc (bad) mov push or pop js leave sub pusha adc pop inc inc (bad) and push ja xchg out mov pop lcall into fidivrl or out nop cmp mov jl sahf loop sti adc rcll mov sub aam push pop cmp sub data16 mov outsl stos ret lock cmp jbe adc mov notb in adc pop popf xchg mov in icebp (bad) and popa in push xchg pushf pop ljmp (bad) aaa push xchg test clc orb jne mov lds xchg stc outsb mul pop je jno cmp lods (bad) into cmc movsl push sub dec adc add jo cld jo sub cwtl pop mov ret mov (bad) (bad) in les inc fidivrl mov add loope and call cmc lcall int mov xchg cwtl inc push add mov clc test test and lret lret test lret (bad) ds push das push mov lods dec js dec push jmp je lret aam ja xor dec (bad) cmc pop dec jl jns mov (bad) cmpsb sbb pmullw or in mov sub inc jne mov jg fistl out pop (bad) out sarl mov sahf into mov aaa cmpsl insl inc fdivr nop mov imul mov (bad) mov xor dec push addr16 jmp inc stc ds shrb and cmp ficom push iret jb shl pop stos popa xchg jb movsl mov or or sub or cmp xor xor push xchg std dec mov pop fildl imul (bad) pop nop sub stos fiaddl mov mov mov dec mov dec push cmp fimul scas jg mov xor popa dec test cld pop mov jecxz sbb pusha jp lcall fbld popa icebp dec jns (bad) xchg sbb push (bad) lret push jle loopne movsb in les shll mov aaa jb outsb mov dec sbb push es xor fidiv mov enter jnp enter push (bad) mov jnp xchg dec and test and adc sbb daa call lahf push xchg fwait mov (bad) movsl mov mov jle add cmp out stos push mov outsl mov lock mov fidivrl dec mov or or fmuls inc fistl add insb jb mov fidivr nop (bad) fidivrl dec push iret outsb shrl iret adc cmp mov shrl xor lret stos addr16 and or test mov (bad) leave or mov fwait push stos addr16 mov xchg sbb into fimull in rolb int3 lods add lcall addr16 test popf jmp nop mov sti xchg int3 mov sbb insb push jl popa adc mov pop mov and (bad) mov xor rcrl imul mov mov out adc cmp and insb ja das stos sarl inc push fldcw inc ljmp (bad) ds insl xor jp sbb mov pop mov fcom (bad) jp xlat out jl inc ss inc scas mov xlat roll sti pop fiaddl mov std dec add sbb push out dec and add gs pop xchg jno xchg jge xchg cltd mov arpl push lock push shrl scas (bad) cltd mov data16 inc leave mov sbb xchg lahf xchg push and jg jb adc cwtl scas add or into loopne nop sub xchg sub andb xchg mov mov mov pusha mov mov push mov test mov test out test enter mov push fs std (bad) push pushf outsl ljmp jno insl ds lds inc sub mov in mov pop lret sbb xchg fs inc jb ret lods inc jns leave lds adc mov sbb shr out in fcomps stos inc mov jb sbb nop stos sahf ds mov or repnz mov (bad) out pop mov mov sbb pop scas or inc inc jge pusha cltd and dec sbb xchg adc aad cwtl out in cmp lret js in (bad) push adc int mov sub icebp out jmp stos mov jbe push pop adc pop iret dec outsb mov aad jbe ror xchg xor jmp add and shlb cli push add jno (bad) mov mov pushf cmp aaa jl sbb cwtl sbb sub sbb mov inc call in mov cmpsb sahf xchg mov int xchg pop addr16 movb sbb sbb aaa (bad) adc mov push repnz lret faddl add (bad) fstps repnz xor (bad) jmp sbb imul (bad) out aas es mov daa mov jb jp les jb lds lahf out into jno inc fidivrl stos mov enter out scas pop jo stc test mov push lret inc adc mov push lea and sbb int3 mov call mov and cwtl pop imul and movsl or inc inc jle insb mov mov push sub stos mov aad mov es or test (bad) cmc mov xor jne jb cltd push jmp dec pop xchg add (bad) xor test sub dec xchg in inc movsl pusha (bad) dec add lods and arpl jnp pop mov faddl sbbb iret adc sub mov frstor inc mov nop cmpsb sub cmpsl scas testb and test in xlat xor push add push stc dec dec js mov adc lret jnp out cs repnz fisttpll mov cmp ss les je scas pop xor jge mov mov or cld out das and js shr popa cs sahf add sbb out xor out movsl cmp mov (bad) xor or xchg jg out loopne add inc cmp pop mov mov (bad) cwtl push pusha lea dec and fdivrs inc leave arpl fdivrp test sarb lret mov xchg mov cmp (bad) adc xchg fsubr pop xchg inc add repz into sbb mov mov pushl sub lcall add scas jbe int3 sbbb pusha fcoms push enter repnz lods test call sbb stos push inc push testb rcrb fistpll es pop nop xor lcall xchg sbb jmp dec adc icebp cli hlt scas daa lds adc sahf mov adc mov cmp test and pop daa movsb int aad sbb (bad) test mov jmp movsl outsb test fcmovnb dec pop cmp fcmovnbe mov add inc je pusha lds cs mov test mov adcl dec mov dec mov pop jae aaa push (bad) push loop jae cmp stos out xchg bnd popf sbb xchg xchg xor cmpl xchg lcall gs mov or out sbb cld push mov mov out sub lds jmp pop jbe or mov lcall push and in (bad) mov je stos or sub jle jo add aad (bad) outsb stc and stos test jno ds sti lods sub movsl jl ret mov das ret sbb xchg sbb bound adc pop les jb dec pop and sar lods test js movsb mov push jnp sbb data16 cmpsb cmp loop sbb push lds mov lret jns pop sub clc add xchg xchg jp adcb hlt mov outsb frstor dec imul or fsubr scas insl cmp or push ds pop aad call mov dec or push jne iret pop fdivr adc lcall call jb sbb dec and dec mov adc popf sub cltd fs jae push push sbb (bad) mov daa loopne mov sub push or stos (bad) imul mov cmpsb sub mov jge push gs cmp lock loop in lret test mov dec shll dec inc push inc inc mov cmp jns mov xchg and add adcb sarl cmp lcall fsubrl push dec pop fwait cld mov bound stos dec cmp enter gs and (bad) xor pop aas adc lods jmp pop push ja pop (bad) jne (bad) mov cld jl ret or push push ljmp lods inc xchg or lods mov movzwl and jne cmp fimul andl out aam cli jp dec mov dec jmp lcall ret mov and gs fcmovnbe xor pushf outsl push pop js and (bad) adc ljmp (bad) divb shr or mov pop pop rorl sbb out xlat xor loop lds sbb add sub xor out repz enter mov stos xchg jle lods lds xchg xchg test or les aam xorl xor test add cmp popa mov lea out xchg (bad) nop addr16 orb or dec fs adc (bad) push aas mov xor pop fisub and pop or lods icebp stos xchg aam aas jne pop stos push push shrb lea pop jne ret jb sbb cmpsl in pop dec mov mov clc sub fsts loope iret mov push aas pushf pop adc adc ss pop fdivs lock pop cmp fiaddl or inc xchg cmc mov mov movsl aas mov popa test jg lods push mov arpl (bad) mov and mov stos insl arpl sarb xchg mov lahf test (bad) pop fwait cmp sti jb sub dec xchg js mov pusha js mov mov dec add adc cmpsb and mov bound push sbb mov cmp js (bad) je bound test sub movaps scas sarl pusha popa xor clc imul call pop push fxch xchg sub dec pop inc mov adcl jo cmp enter pushf rcrl in push cmpsb xlat lret mov movsb popf inc jmp mov aad aam paddb jl dec sub sbb lds aas mov iret mov out xor jge inc push cld pop pop fcomip dec les or pop icebp fldt xchg ljmp shrl jne popf dec ljmp or les or and sub jl push fstpt mov inc fwait add jne xor xchg inc or sub bswap cs test sbb inc push test add push fnstsw mov (bad) mov insl xchg xchg inc hlt jp jg cltd xchg into push mov sub fwait mov roll lea fsubrs loope js push lret mov sbb pop out push cmp inc popl xor fisub shr daa divl ret lds mov aaa dec test cld ljmp or in jnp adc rdtsc mov ljmp sub (bad) (bad) sbb negl (bad) cltd fildl mov lock (bad) push decl xchg mov out push iret lahf pop loope adc arpl adc and push xor mov gs mov xorb imul shl enter jle idivl shl in xor xor popa add das loope cltd jbe xor adc add pop jo and jne cmp aad daa jne cmpsl testb inc fs adc sub repz sbb imul out jmp pmuludq push mov das rclb std mov (bad) and aas lcall push xor sti test sahf aam xchg mov push add dec lret jg pop jg or or xor jne out adc fidivl or fstpl dec cmp popf (bad) pop and or xchg lahf add (bad) push bswap jno jle ds cmpsl fidiv jne pop adc push mov push aas lret fidivrl push mull pop dec stos or icebp rcr xchg test leave sbb jmp daa movsl sub lods mov or test inc xchg xor and rol cmp add lods ret cmpsl cli jb ljmp das and xor inc and xor ret sbb mov ljmp in ja xchg cmp je pop pop fnstenv sbb mov pop hlt ja into cld sahf leave jb test movsl int3 mov jns sahf pop mov jne mov fadds dec cmc or mov pop (bad) push or loop pop mov jg stos xchg stc mov cmc in sahf ljmp mov inc outsl aam and int xchg or lcall cmpsl xor mov mov sti outsb in aam push leave pop (bad) mov sub cwtl int3 in xchg dec mov adc pop fwait push pop jns call xor or dec push mov cmp cmpsb das lock push xchg daa and mov int3 cmpsb sbb xlat push jo and mov xor push (bad) in out or inc cltd rol je add fs pop outsl into cmc jmp push mov out add aad cmp push pop (bad) pushl push movsl xchg ret loop pop notl mov and mov js fbstp out inc out xor jle (bad) je aas inc cmpsl cmp adc cmpsb in scas jb push mov das add cmpsl jmp and dec (bad) mov inc sub push jp fidiv loop gs addr16 scas inc mov daa mov cli aam repnz out pop in rol cs in lods jge jbe pop and stos xor or cmp xor pop scas fs call cltd fbld mov pusha sti insl jno faddl mov mov mov xchg lods mov add nop mov cmp stc (bad) mov andl mov cmp test mov aaa inc and sbb xor cmp jg scas pop push jns adc dec notl pop fsub lds out dec push pop int3 mov cmp icebp andb mov in fs lods or in mov and leave sahf js dec test jo jmp inc xchg xchg jae out or int pop sub xor add mov mov mov fisttpll aaa mov jge int adc nop jne (bad) xor imul cmp imul cltd lock sti in adc stos movsl inc pop sbb jg in in sub sub (bad) mov shrl lahf fwait cwtl dec andl ret ja mov xor shrl sbb out bound mov stc test push cmp loop cltd and stos in ret cmp stos lods and gs inc jp (bad) sarb sub in push data16 inc pop mov or outsl fwait or cwtl rol pop int3 (bad) cli push mov sbbl ljmp xor outsb lods add sbb es dec mov jo xor push sub pop out int3 mov and scas inc jb daa sub inc cmpsl (bad) mov mov iret movsb ja out mov mov les and cmpsb jno and pop mov dec mov cmp mov lods add xor test and lods (bad) mov ud2 pop loopne (bad) and cs lods push aaa xchg imul (bad) insl pushf xchg decb insl dec mov pop pop push fadd test andl cmp cmpsb cmpsb (bad) and pop int mov fs aaa pop or gs mov push (bad) mov pop imul push adc xlat ds cmpsb mov sahf faddl mov insl pushf aas xlat out divb dec in jmp jp and push out (bad) lret cmp xchg lret adc loop popf repz and and jnp (bad) in (bad) lods jae js idivl mov out add add outsl loope or sbb and ljmp inc push lret mull arpl pusha jo inc out xor addr16 jo xchg shrl and cmp add js (bad) out cltd mov jecxz mov jp jnp in or jle outsb in ds jbe cmp aam hlt shrb lock push xchg mov xchg add pop pop shlb lahf rclb mov xor jle jbe push jg fcmovu lahf mov icebp int lods pop ja mov (bad) xchg lea in xchg mov add clc add mov roll sahf fbstp sub cmp int test jle pop add mov adc xlat sub jb into pop jmp dec dec sbb jmp rclb repnz adc and push push cwtl stc mov push pusha icebp pop stc (bad) push adc adc std imul mov jne cmpb gs out in imul inc pusha mov inc add mov cmpsl rorl inc addl (bad) cld or aas xor adc ljmp push push call xchg sub int jp insb subl xchg push idivl dec dec and push add jo outsb adc sub shlb orl pushf fistpl repnz mov inc popa sbb inc adc test lds mov xor insl les out dec orb push mov sbb xchg xlat xchg mov loope cmp fwait stc xor pushf pop rcll movsb jl jno xchg aad inc pop sar stos cmp nop js jbe mov inc lods jp and add pop xor xchg dec (bad) mov ds leave and outsb scas xchg cmc iret jbe sub cmp dec das loopne bound (bad) daa xor lea mov dec mov pusha inc aam mov mov sub and lock mov out fcoml mov pop sub in and leave sub aam fbstp and mov push xchg inc imull push xor and push repz xchg rcrl test pop cwtl js test and mov xor out lahf mov push insl inc sbb ret fild dec jns and sub outsl cmp lds jno mov es push cld gs in cmp push mov aas add pop int nop jl mov into and cmpsb sbbb movsl fstpt sarb inc and pop sub mov scas dec mov add lcall test aad mov (bad) hlt je les or loop lods insb push ror imul fildll (bad) aam scas mov fxch out mov (bad) mov ja std cmp push mov xchg jge inc sub mov lock aad pop (bad) fisubrl xor ja sbb sbb push (bad) sub shll cli or mov push icebp jmp inc mov mov dec scas inc xor rolb sub (bad) jmp loope,pt sbb stos xlat mov dec sti inc xchg cmp push add jmp and ret sti pop xor insb mov dec cmovs (bad) and pcmpeqw movsb loope les jno bound into and dec movl push or push pusha fstpl and fdiv add add repnz mov std repnz and (bad) xor lcall std popf imul mov out adc addl mul fiadd mov outsb ret iret mov movsl mov sub and xchg jbe mov and dec mov mov sub fcmovnb lds and jae mov sbb call out mov mov jmp jl and cwtl in push xchg sahf aam push xchg ja stc pop int cmc (bad) adc je inc movsl movsl out sarb testb pop pop jg sbb movb insb and sub lahf mov popa fstpl flds mov dec (bad) ja mov and push sub mov scas mov popf (bad) sahf or clc push loop dec mov shll add test cmpsb data16 cld ficomp int3 sbb jmp sarb cmp into cmp stos pop cmp gs cmp loope,pt lea loope xor mov loopne stc hlt insb ds (bad) cmp cmpl dec pop rcrb jno push mov mov movsl cmpsb out test fildl (bad) mov outsl add jno ja ja ret popf fwait das xor in nop mov addl lods fidivr mov inc mov jnp int cmp mov rcll pop les mov arpl xchg adc push xchg sub hlt add and out call cmp insl dec pushf int3 sbb test xchg sub push cmpsl push dec mov mov insl pop or sbb adc and aad push mov into push mov mov mov test call ret lods lds and loopne aas outsl rcll out adc into mov rorb mov sub ret jmp popa fcomp pusha sub mov mov xchg dec sahf add jg decb mov (bad) (bad) xlat (bad) or mov jno mov mov cmpl jo push gs mov mov jg sub inc divb sub aam push std ret push mov xor or xchg pushf test xchg lcall mov lcall or push cmp xor push js test adc icebp sbb mov mov pusha daa or lret xchg loopne xchg pop mov (bad) dec inc xchg addl outsb loopne sub subl xchg mov cli cmp lcall out les out push (bad) jp and (bad) fldcw stc or lcall ret add inc mov in mov push cld ja mov jbe (bad) mov lods pop add jl and sbb pop lret mov jo fildll or outsb jp rclb ret call adc jg nop inc jmp push sti stos cwtl out or outsb scas push nop jmp pop js inc popf pop or loope xor mov jne jnp daa jg mov cltd cmp sbb inc mov or (bad) mov mov xchg jp or (bad) pop xchg pop aaa idivl pop xor sbb paddd popa pop aaa add jmp out add adc xchg pop dec inc cmp mov nop jl push in clc call and stos imul lock add popf sub xor inc iret or loope mov xchg jno push (bad) mov push or aaa add loopne cli mov inc (bad) inc out shl ljmp (bad) (bad) out ds pop mov ss cs loope rol sarl popf mov movsl pop inc pop lods lret adcl lods sub xor cmp xor push mov inc push fcomps aad dec scas rcrb mov outsl push test or mov pop rcrl aas loope vpaddd push xor cli out fimul lret sbb mov sbb das mov (bad) xor mov fnsave cmpsl testl pop jns xchg test xchg repnz and lret xchg adc mov sbb or (bad) pop adc mov mov out pop (bad) jno loopne outsl clc dec pop (bad) mov sub movsl ds fs pop in mov xchg fimul outsl in jae cs je rcll jl pop imul pop jno mov scas pop mov test push xor adc in nop sahf jno ljmp mov fwait sahf sahf mov iret push cld repz rolb insl (bad) sti mov insb or call out mov jnp (bad) and jmp es lods pop dec popf stos pushf push test and mov scas js push int pop cmp ja cmp mov (bad) icebp hlt stc sub btr dec paddsw cmp fstpt pop pop mov mov push cmpb (bad) mov xchg push imul pop loopne pop scas ret adc lcall outsb jbe mov inc lods sbb mov stos (bad) push jnp adc (bad) out test sbb jno lret jae xchg repz jmp insb in popa (bad) xchg mov mull loopne clc inc mov shrl (bad) dec js,pn fwait pop das cmpsl cltd sbb cwtl inc jge int aam sti repz ljmp rorb or xchg call mov xor lods dec or xchg xor (bad) adc xlat popa icebp js or inc (bad) scas ficompl ds pminub mov (bad) xchg cmp xchg dec cmp movsl arpl sbb fadd mov stc arpl lcall add and cmp mov push mov (bad) or pop test xchg fidivl sub popa iret dec jns aas jb cmp xchg dec cwtl test xchg mov push int fwait popa pushf ret imul cwtl jp (bad) jp push retw int3 fstpt sbb mov (bad) (bad) out test movsb insb aam pop jge lahf (bad) dec imul (bad) test fidivl stos mov or fstpt (bad) ljmp (bad) test and add (bad) jg das mov xchg mov or and ret lahf ret xchg xor fnop sub push push jne mov xchg push (bad) xor pop stos sub push fucom shrl add xlat mov push das bound pop (bad) jno in and and mov mov and jns push xchg push jl mov adc ds fimul mov cmp aad call push ret lahf sbb pop lret sub (bad) xchg in lods cmpsl inc jne and out incl jno and (bad) pop or mov push lcall sbb stc push mov (bad) stos rcrl dec lods and dec pop sub test push adc arpl lods push xor (bad) mull sbb push sbb repnz (bad) lcall cli xchg pop mov imul and out std xchg lahf ret mov push int mov and clc (bad) in imul (bad) mov (bad) cmc out repz in or les fidiv ja adc cmc ss xor faddl iret mov mov dec xlat mov in add and push lea dec inc pop dec rol and jle mov adc testl mov outsb inc testl enter dec pop xchg repz loopne push fisttpl out sarl mov jbe add jmp fincstp jl mov xor popa lods mov lds aaa xor add mov jge das ja lods mov (bad) outsl xchg mov sub sbb js xchg or aam shlb jg sub (bad) lret xchg add aaa add mov scas insl rclb test or mov ja loopne std mov in dec pop push stc mov adc fnsave fist cmpsb sahf jne cmp outsl mov push aas and dec lret mov call call inc push xchg imul xor shl pop pop in add fistpl xor jb dec std inc push (bad) and outsl mov aas icebp push inc es jmp adc adc pop std (bad) dec xor enter cmp mov or push fldcw inc js cs call add js push sbb adc mov daa data16 xchg popf cltd dec xor data16 fldenv popf mov std mov mov dec shr aaa xor add xchg fprem jns mov daa pop inc mov dec jecxz jae and lock (bad) jg add and mov mov sbb xor or shlb clc icebp xor jecxz inc stos mov (bad) xor outsl ret insl enter clc stos xor mov mov in mov mov add inc push cmpl mov outsl jl ret sti aaa test and roll cmp inc add cmp xor push outsl in cli xchg in enter push jecxz dec dec in mov repnz push inc pop pushf and dec imul pop adc sar (bad) xor dec data16 jmp ds outsl inc adc int3 xchg pop (bad) in cli mov int3 fsts into je std fsts xchg fwait mov gs pop out test mov ss inc test cmp cmpl mov (bad) jae shrl push loop loopne repnz adc jmp inc loopne cmc xchg fisubr ljmp sub sub les jmp push sahf jle stc int3 call mov fnsave nop cwtl outsb sub test xorl mov push mov jb lock pop cmp je ljmp (bad) dec mov enter cmp movsb scas inc negl das rcll mov fnstsw ja scas jb ljmp cltd mov cmp out jnp fisubr pop iret xor jno inc lods jle cmp jae rorl cmp lcall movsb insl hlt (bad) aas in xor pop arpl add (bad) adc std xor mov nop shrb inc sbb adc sub outsl cmp (bad) jge dec mov xchg insb adc hlt gs popf mov jae idiv ljmp pop aaa mov xlat cmpsl push jl dec xchg icebp jl lret icebp dec and (bad) fcomp or cmp ror cmp fucom cmp push repz mov sbb mov pop divb fildl out (bad) jg popf adc popf rolb push or pop (bad) in enter xlat (bad) jecxz test jns aad repnz lret xor jne sbb sbb testl cmp les (bad) dec rolb test in sbbl inc mov ret aad pop test outsl andl sbb push divl or jle cmp mov push mov loopne xor dec cwtl jp and push push dec xor mov nop aaa loop mov insw out fsubrp push sub icebp sub ret lret or mov roll int sub ret rcl (bad) mov mov xchg sub jno test adcl jno push push pop fistp jg fdivr mov jo push sbb mov sar pop mov frstor xchg jmp je lea sti aad ljmp aas stos mov jo xchg cmp mov inc rorl faddl mov mov xlat loop cmpsl mov cmc adc mov cmp loope cs ds imul and frstor xchg std pop popf mov int3 mov (bad) clc rsm push arpl sub xor out push scas push std pop add loope negl ret int3 add mov xor not jo pop xor (bad) cld subl stos pushf lcall mov enter aas repnz cmp les sub fwait arpl sub pop mov xchg jp jge addr16 lea push jmp pop fcompp or inc ljmp push push xor scas pop mov sbb xchg test ds (bad) xchg js add test lds xchg cwtl mov in push mov int3 lods cmp ljmp cmp fsubrl pop pusha sub popa cs movsl fwait pop insb jmp mov scas push push adc mov fisub and loopne inc aas inc inc sub pop cmp mov das ror push dec daa lods dec loopne push lret pop movsb (bad) cmp out push push or sarb pop mov lock lds inc fnstcw out xchg xchg cli and or movsb lock xchg clc adc sbb sbb bswap dec (bad) (bad) xor mov or or jge jbe mov ds mov pop and jecxz xor dec fptan repz lahf mov in push (bad) xchg pop or mov sub lahf popf cmp xor sub push lret daa jmp inc daa push or das jmp sbb aam lods jg sahf cwtl adc sub inc (bad) and xor ja mov lock mov stos push push xor imul (bad) int sub xchg inc ds xor movsl push pop iret pop in lcall (bad) sub push psadbw fsubr sbb sub std sbb jge mov mov add add and sub sahf jae mov out pop push push out cmc fldenv cltd jns push cmp rorb mov add repnz pop pop inc sbb andb hlt jb lea pop cmp jp imul ficoml loop fistl out (bad) jb push mov sub in iret push test mov adc (bad) xabort mov push mov scas icebp adc mov (bad) sub sar outsl sbb pop push lods (bad) std lods (bad) aad jge jg push lcall stos std into pop mov and cli and push push or outsl mov dec pop xchg and dec mov lcall push jge loopne cmp inc sbb pop ja xor daa push cmp pop fidiv nop xor pop or jnp cmp lea mov cmpsl popa adc cmp pop dec lock dec mov call (bad) pop stos rcl add inc mov or add movsl sub mov lea stos movhpd out adc sahf push nop mov fs cmp addr16 jns lds jg xlat movl enter mov adc xchg leave jno dec hlt jo sbb mov xchg imul ret adc ja les pop dec aad push es cld mov jae pusha dec mov mov cmp cli cmp arpl xchg pand push jp cli jg adc adc lds (bad) in xlat dec (bad) jecxz clc pop add ficompl xor insb daa test xor cld push xchg fisttpl mov dec jl or ljmp sbb pop pop jno es lock scas mov test mov add cmp repnz jp aad and xchg (bad) outsl fcompl hlt lods aas cmp test shrl mov out xor mov jae xchg scas scas cmp adc ret mov test iret (bad) out insl cmpsb and push aaa pop inc shrb in lret inc loopne arpl ja ficoml cmpsl cmp adc pop std mov lret and or or pop ret lahf ss sbb into push mov lcall out fwait sub add dec clc adcl mov xchg mov dec mov fs dec cmp xor and mov pop sti sub iret xchg popf scas cld std imul pusha and cmp aad push das sbb mov xchg fmull inc (bad) lock inc dec xor jb add (bad) inc fistp popf popf pushf sbb out call pop (bad) lcall ds ds push jp sub fs xchg hlt mov adc push sub sub aas xchg stos das pop (bad) xchg shl enter jne int enter or cs int (bad) or jns cmp pop mov pop push cmp jmp nop out add cmp mov cli and and dec mov dec add cs outsl adc and jns (bad) std add xchg lret in xor hlt cmpxchg add clc jecxz (bad) in lret adc leave jnp (bad) push (bad) mov push jp cmp inc in or pop push adc inc mov xchg rolb cmp sbb mov es sbb and daa sbb adc call lods sbb inc fstp push sub push cmc leave dec pop insb xchg insb xchg sahf pusha adc cmp mov xchg repnz jle ret add hlt pusha ljmp int3 lahf movsl and nop test adc inc pop cmp roll repz imul gs dec lods repz stc jp sahf add xor ja mov xchg outsl xor or stc ljmp push (bad) mov jl cmpsb xlat push add xor push mov push (bad) mov mov fcmovb popa lcall gs insl sub and xlat xor loopne push lods pop dec jp stos and push in dec adc jbe lahf mov sub xlat lea aam les popf push pop dec in mov mov xchg add gs stos repz ljmp in xor cmp ret xor mov mov pop fnsave and imul mov push bnd bound aad mov mov add shrl jl pop cmp out add gs dec jbe push mov cs rclb ret loop cmp and xchg imul mov add xor cs sbb mov sub (bad) sbb iret pop add mov xchg aaa aad inc (bad) mov test sbb cmpb and add movsb inc icebp dec dec jle in push call and mov sahf lea cmpsb fnop push test stos inc ret (bad) jae outsb in push mov or sub out rcr sub ss in sub (bad) (bad) lods out out stos out out fimul decl popa mov addr16 cmpsb jecxz ja dec jmp stos sub das aad decb insb (bad) das jae sub (bad) ljmp push jg pop scas bound nop xor into cld arpl int jp xor jp add cmp adc jl add mov dec test xchg jp ds mov lods sub ds loop lock mov call pop js mov loopne (bad) xor xor dec cmp pop sbb lea mov mov mov inc cld (bad) sub stos and and add into cmpsl rclb lahf scas cmp pop mov jle stos repz imulb insb or call dec pop popa xchg xor push jo popf adc (bad) negb and lock inc nop add mov call push cmp fdivl inc sti and ret je test adc mov pop std ss (bad) insl mov aam xor mov in ret push push and xor stc jl imul sub sar jp fwait mov pop xor cltd jl add test int3 ret leave int3 dec ficompl pop adc mov test pop andl add cmp or sbb es outsl arpl mov js or push xor add sbb xchg adc mov push sub fldenv pop pop dec mov pop mov mov es xchg (bad) inc je jp push test fildl jne push sub xchg mov mov ret ja xchg int3 shll xchg test std xchg xor push mov dec xlat mov cld cmpsb adc imul inc out xchg cld or loopne mov fmull add out xchg mov xor out daa andb aad (bad) scas add loop xchg addl shrb jbe (bad) or and mov ret test or je popa sub out into xor daa xchg xor lcall jno repnz jb mov icebp pop das inc jno clc pop fiadd call xchg adc leave adc and jmp cmp jb cmc xor fbstp cltd mov fwait mov pop into int cmpsl je mov out les and push movsl fwait fwait lock fstpl bound add jno inc fnop into mov jbe (bad) pop or test repz push and sbb or sub mov sbb (bad) clc add and call jl dec sarb js cmp fcmovne sbb iret ds stos mov jb (bad) fimul xor xchg xor sarl int hlt push insb aad xchg test push inc sub imul cmpsb sbb test popf les fdivrs push and inc ss es cmp pop ret add jecxz,pt xlat inc lods mov and iret pop jecxz aas scas inc push out std mov xor mov aaa jl push cltd shlb loope xchg das fwait sbb in lahf out mov or enter sbb fisubrl xchg call mov inc sbb in xchg arpl sahf mov jl in outsb stc popf aad or aad and (bad) cmpsb fldpi pop and or pop jnp lock push loop xchg into test push jbe,pt arpl std or pop adc jmp xchg xor ret push sbb sub lret cmp fstps cmp pop fstpl cmc iret frstor xor in mov mov imul jl mov jmp mov or lahf add xchg mov insb pusha frstor movsb std pop mov (bad) in inc push shlb push fidivrl xor imul insl add (bad) mov sti fidivl lcall jbe fstps mov daa dec pop xor lahf mov mov movsl inc rorb out sarb bound xor dec (bad) fcom pop popa push mov mov in xchg sbb xchg mov lods mov cmpsb out or in in push es shll bound push pop gs movsb mov lahf loop call pop aam push nop sbbb frstor rcrl push lea (bad) jecxz cmpsb jns sub das std fstl rcr pop scas push sbb rcrb addl mov or or pop hlt shlb aam push fldt inc call out mov lock ret ja gs mov xchg mov ja popf into ret call mov xor adc add jbe repz mov pop out mov nop cmc inc adc dec mov add fistp push jne scas mov lcall jbe add xchg inc adcl adc sbb fnop adc outsb and bound sbb inc mov js jecxz fidivl out sbb sub mov or adc inc lods loopne aam push add cmp dec int nop adc jge addl or gs enter add mov jg pop arpl push fbstp and ja sbb hlt sbb lret pusha sub lea repz cs cmp (bad) in jge or add xor jmp (bad) cmp or jg pusha add or adc inc repz pop es mov test test shrl add cmp push loope (bad) mov fisub add mov shrl and leave pop roll out dec (bad) (bad) je (bad) mov (bad) lods xchg xor jle push cs sbb sbb add push scas cs pusha mov (bad) mov pop mov add lret out insl aad ljmp dec push ljmp int jns xchg subl jmp in (bad) jecxz jbe push icebp fsubrp cmpsl and or add and std mov or and mov cs call inc sbb (bad) xor xchg adc lods mov fadds add mov outsb push (bad) xor lret xor sub shrd push int xor pop mov add into movsl xor sbb (bad) mov out and pushf lds fisubrl outsl mov jo sub push ret out add push fs cltd inc jne and (bad) outsb (bad) fbstp das or adc cltd lock jge ror ljmp insb cwtl inc and ljmp aad test in fcmove xchg dec jecxz mov pop lds pop push pop push int enter and pop insl dec lds pop (bad) push jl mov jb sahf mov mov movsb incb xchg and lahf out out jmp roll pop popf lock or dec fcoml xchg inc fs xor rcrl leave aas aaa nop lea jo das mov mull sub and in push imul fsubl insb and xor or sub xor pop lods ds inc (bad) in lds sub mov sub test cmovg xchg add jg icebp cmp pusha add inc (bad) scas sub lcall andb adc dec cld pop mov into mov popf imull lods or dec stc dec add fadds xor pusha aam mov cmpsl adc cmp adc rolb adc insb push sub inc addb outsl mov call mov icebp dec adc mov lret xor cmp pop or add adc sub idivb scas call je (bad) neg out push cltd jae jle addr16 push jge push fstpt jmp test ret rcrb mov pop js test add sub ret sahf ss into and push mov (bad) aad jb adc in pop lock pop jno fildll xchg int dec rcl add icebp out dec adc sub in jecxz mov dec das inc dec xchg in insl and pop and gs cwtl mov xor aad fucomp loope call into (bad) je adc ljmp xchg dec sub add lods push inc aas test lds push (bad) out pusha adcl arpl pushf call test cmpsl and sbb repz in sub iret inc jmp add xor mov repnz pop in cmp dec add xchg loop mov imul pop testl (bad) xchg mov cltd mov ljmp ljmp ljmp psubw mov in aad lods adc loop xchg inc fisttpll pop sub cmpsb das push je lret mov repnz sbb js fildll test dec cmp into pusha pop pushf ret dec push mov add lret fsubl pop cltd sub cmpsb mov sahf lcall xlat out (bad) mov adc mov push cmp jg mov fidiv cmp enter mov frstor mov pop pop scas jle lret xchg mov sbb stc sub movb mov mov stc mov dec jnp clc icebp mov in jecxz pop mov aad xorb add daa and int and sti ja loope adc testb dec xor (bad) mov mov lods pop xchg cmp pop or gs insl push adc jg out pop mov enter push movsl mov popa pop scas or mov cmpsl test mov lds sahf sar inc (bad) shrl nop dec sbb xchg outsb int jp jge outsl fs push or inc add sbb jl cmp (bad) push mov adc cmpsb or nop stos inc or xor pop mov sbb cmp push xchg stos inc int3 pop push cmp push push leave ret icebp add jne loope das xchg stc sarl std pop cltd fidivrl lahf mov scas cltd imulb (bad) push push sub mov in std (bad) lret cwtl xchg cmpsb cmp repnz mov mov or push pop mov ljmp lret jns das push mov cwtl int3 rep mov push xchg mov jne add inc enter xor (bad) and xor cltd aas mov dec stc (bad) enter dec dec daa fidivr mov cld aas gs dec xchg push aam mov push jns lds fwait movsb fisubl jb in or add push aaa int3 inc jmp adc sbb sub push in xor add in stc (bad) call cmp ljmp fisttpl mov pop test push lret (bad) push data16 dec cmp jnp add pop sbb mov mov hlt cli std mov movsl add lcall je xor cld jno jae out pop adc jg in movsb loope pop aas lds pop out movsl daa dec inc mov in insb loopne loopne iret psubsw into cli inc ss xlat cmp dec fldenv mov mov inc xor pop icebp out (bad) in push jg xor in subl jecxz pop jae lea test pop loope inc loope mov addr16 cmp bound std ret test pop jb fstl ja sti mov in mov out push mov mov loope xchg xor or es push loopne dec and xchg cmp in mov and sbb fwait cmpsl push rcll flds out inc xchg fs pop sbb sbb mov repz scas jns (bad) std ja incl adc xor sbbl and std xchg or inc add cltd push fs sub pusha fimull dec addr16 xor sbb imul es movsb (bad) fmull or out pop mov mov xor dec push xchg (bad) mov ss cmp test nop test cmp mov sbb inc jb cli fs shll mov jns lret pop rcrl in (bad) and lods shrb in mov mov jg repnz mov dec xchg movb and sub pop sbb push in pop cli mov sub repz ds les dec or les leave daa sbb mov fisttpll adc xor adc outsb mov dec icebp or push insl dec or dec mov sub addr16 out sub xor mov insb and pushf adc pop jecxz xchg pop in aam push pop pop lods mov mov adc mov ljmp mov arpl mov loopne std xchg mov jnp push add xor adc mov push push mov pop pop xor int scas jbe insl cmp ljmp sub test mov add xchg mov cmpsl enter (bad) fiadd inc nop std loope std (bad) repnz ds in mov andb inc mov hlt stc jb or popf pop aam lcall loopne prefetcht2 fpatan cmp pop inc inc xor inc sbb ret shr enter cwtl mov mov dec mov add je and lret cmp cs insb or mov flds mov cmc xchg nop out mov push push adc jne sub jle ljmp (bad) daa cmp dec adc xchg cmpsl lods push outsl xlat xchg gs lcall or inc je fcompl in pop pop loopne push cmpsl les cli rorl push sub sbb mov xchg frstor sub or adc fnstsw xor xor mov push scas (bad) pop cld mov jo das inc mov or in clc data16 or inc ds out (bad) mov fcomi xor jb sbb sub ret ds jg dec and sbb adc lret negb lahf aas mov jnp scas in mov jl sub cmp dec in and and nopl push nop pop fsubl xor mov dec (bad) mov pop fcom cltd sub lods test rcll adc shrl pushf ret std test cwtl mov out mov pop movsb inc int3 enter sbb js rorb std xor push push sarb test loop je fidivl scas sub mov aaa mov insb xor inc xchg je push data16 lock daa fs push out pusha je push test shll negl pop cmp lods and enter lcall cmpsb xlat imul aaa divb sbb pop cmp pop lahf inc ja jbe jecxz adc mov ss (bad) pop out mov (bad) sub jo pushf sub aas pop mov jbe mov enter push xor loop hlt add add stos ret jp mov push setb outsl cmp out xor data16 and cli adc mov fnop push icebp mov mov addr16 mov test stos mov insb and xchg scas ret mov cmp sbb mov (bad) daa int or jno sub shrl dec xchg jp pusha adc bound loop add sub and mov push sub dec ds mov bound pop push insl push mov dec mov cltd insl (bad) in imul mov dec pop pop test and xchg adc addr16 jb and jg ret jbe loopne int test call (bad) fimul lea or pushf jmp sbb cmp in stos add sarl push inc or pop outsb stos lahf adc inc clc aas movb (bad) std fimull rcrb icebp insb (bad) jb jae sub sub or mov mov pop xor inc sbb in or fisubrl dec pusha inc cmp dec sbb rorl add mov (bad) enter mov or add insl lahf pop popf pusha dec out inc mov ja and rcrb or sbb sbb xor std inc dec mov insl mov or insb pop into sub mov xchg pushf lret xor fistp enter pop das int3 aad test out inc rcrb mov cmc mov ret sub adc (bad) xor or fbld cld jae sbb mov mov mov sub div fildll add and cmp or cmp xchg xchg stc (bad) insb cmp adc push sahf mov (bad) aad fnstsw sarl lret xchg int3 aam add adc (bad) cmp sub xor dec nop stos test dec dec enter xchg (bad) cmpsb pop lock mov je mov adc out jne dec xor pop (bad) (bad) clc ja or mov mov mov and inc jmp pusha push sbb dec mov leave add ss xchg lret inc jae ja fcmovnb sahf (bad) mov call ret add hlt cmpsl adc cli xchg movsb add cmp das push incl aas std mov shlb pop divl clc insl push cltd int call cltd sarb ljmp push daa bound (bad) mov sahf bound adc pop (bad) (bad) lods add add push xchg aaa or jge fidivrl fisttp icebp int cmp popf jb mov ret iret inc and in in push adc leave in cmc xchg cs fisubl push push mov int or test or xlat jnp repnz jns mov pop cmp ljmpw sahf adc adc je mov pop movsb sub jmp sbbl cld cmp xchg das ret xchg rorl rolb push je push adc sti arpl in getsec iret mov inc loope rol mov cmp inc xchg add pushf xlat push cli jo aas fidivl daa push iret nop stos arpl inc cmpsb inc hlt sub cmp movsl cld mov movsb mov add xlat and jp das and mov rcrl pusha push xor add out sbb inc fldcw mov (bad) add mov hlt sub hlt sbb jl clc cmp xchg add or cld mov lahf and pusha sub fisttpl xor xchg or jb repnz hlt fisubr lahf (bad) cmp add mov jle sarb mov mov cmp xor in lret dec jbe lcall (bad) or in adc mov jl xlat ss add mov popf in or and (bad) and pop call mov insb xchg pop push pop add or in test les ror pop mov mov in inc jbe out mov cmp or fcoml mov pop (bad) out in fistp adc pop xor and loopne adc mov rclb lret xlat cmp aaa push repnz sub push pop cmp mov pop xor (bad) xor ds jmp shlb dec or mov dec pop jns pop or dec sti dec fiadd mov jge push adc int3 in fcompl xchg (bad) popf push rolb fldt fstps xchg mov mov dec lods cmpsb inc xor pop jo mov mov cld test push pop int push push pop nop sbb clc enter dec leave mov lods (bad) loope inc inc mov sbb in jecxz fwait into jge (bad) push push add sub cmpsb call jl jmp out mov sbb xchg jge cld loope xchg nop sbb cmp pop loope cmp inc mov ljmp xor clc mov sub push or outsb shlb jge in adcb stc dec sub jns dec pop inc cwtl std mov outsl cmpsb jmp sbb mov mov mov je fnstenv add (bad) out add pop push lock into sub decl mov inc faddp dec jg push jo xlat leave xor iret inc fsubrl and jecxz sbb and cmp jle test je adc add mov mov fmulp loopne stc and xor test pop (bad) mov mov (bad) out inc leave xchg leave into or aas pop scas lods or ljmp pop dec mov and mov jnp adc push test push lds iret jb push push inc sub in pop mov mov cltd imul aas dec pop xor add fisttpll pushf sbb sub leave insl insb mov js cmc orl sub ficom pop jbe mov aad rolb xor in adc adc clc (bad) iret cwtl mov pop xchg sbb push push icebp inc inc dec or xor dec sub mov movsl je xor jle jns test xchg cmpsl or jmp inc jo dec jge mov cmp mov out int pop mov test and stos or in jl,pn cmp les cmp cmc insl into jmp or stos jp add xor mov sbb cmp inc (bad) push xlat sbb jne in movsl lahf aaa or cltd pop pop js xor sub popa fs les (bad) out jmp or inc cmc divl mov aam repz jns xchg jb std jp fs add aad cmp out std imul jae (bad) jle xor cmc pop movsb clc jle ds dec fwait shr fs mov (bad) in push adc pop xchg xchg sbb mov push iret aad inc pop lahf xlat pop mov inc int lcall lods adc inc outsb (bad) shll daa push sbb (bad) data16 out add jle jb pop xlat imul dec jl test and mov cmp popa cmp arpl outsl out aaa (bad) jns push xchg into arpl or sbbl jecxz inc pop sub insb scas in inc stos test dec lret and movsl jl test data16 out ds je sarb add sub mov push ret inc test jge fildll jmp xor fsub dec push add and movsb ffree aad and mov mov out dec cmpsl push sti xorb fstpt xchg stos inc inc test pop adc test lods std sub mov rcl xchg sbb (bad) repz cmp inc lock inc aam int3 mov fbstp in push add in bound and lods xchg cmpsb inc ljmp dec test fmull test arpl iret cmp xchg dec out cwtl inc jns sgdtl push cmc jmp outsb push lret outsl test push or push jle mov and adc outsb and pop ss xor push outsl xor cmp (bad) call (bad) pop aas cmp icebp addl push int3 dec ljmp mov icebp xchg pusha fcoms or adc (bad) and loope movsb cli mov cmpsb mov dec popf jge mov xor sub fsubrs in ja,pt jmp xchg imul stc or or mov and mov sub iret mov cmc inc inc pusha mov cs sbb sahf adc add cltd jecxz cli and clc out test scas stos aas ljmp stos testb push ret fwait xor in test bound out dec in addb pushf xchg fmull fsubrl addl sahf jno xor or mov jbe enter insb test pop inc rclb jg pop push mov ds fildll lds cmp ret jge and fwait cmc or sti loopne push inc fistl lea cmp inc xor aaa add fsubrl nop fisttpll pop mov pop fwait int3 lock stos popa lods mov stos cmp iret dec jg fcmovnbe adc scas xchg cmc lret fstpl jne cmpsb xchg xchg sub enter mov pusha out mov or sub andl out lea push push sbb lds xlat das jo or push int jns xor lods or sbb mov icebp cmp mov push sbb daa xchg mov loopne loope ss fsubp pop pushf add test stc sbb icebp adc xchg dec mov lcall mov mov cmpsb xlat dec lea rclb adc inc addr16 sub dec out test hlt ret adc mov mov mov frstor or scas imul sub sti sbb movsl in cmp mov or push cmp sbb jb lcallw xor inc xchg in (bad) jb mov or jno mov sub cltd mov add pop lret dec lods pop dec xlat call and loop push mov xchg aaa inc jb cs in xchg fimull jle lock bound adc sub fnstcw test dec jae push cmp push fcomps loope pop sub pop mov mov mov test insb test and iret xchg mov xor out gs movsb (bad) ljmp out into or les mov dec mov imul and pop (bad) loopne scas addr16 (bad) lods aaa dec push pop adc sbb insl fisubrl out xlat sbb frstor test pop xchg in jecxz imul in lret lods sub lods inc inc dec sub mov in repz push daa lahf stc (bad) jge sub aas or (bad) or ja or aam cmc jle js mov cld pop fwait gs and ds ljmp sub mov imul adc rcll cwtl inc jbe lret xchg inc les mov sti rorb add data16 loop jle cli or dec inc mov cmp enter and sub in pushf push enter fldenv scas jbe cld mov int3 xchg into rorl add jge mov jge clc fs outsl dec idivb xor lea ljmp push push dec clc sbb or aas sbb xor adc in repz pop jge cmp inc xor jo stos stos fildl stc (bad) (bad) (bad) adc out jno jmp (bad) cmovl xchg add bnd rorb xchg test pop pop or aad mov push add cli mov test or mov cwtl rcr arpl mov sti adc add sub push (bad) out cmp mov addr16 out cmp sbb lock flds cmp call cmpsb outsb or sar inc xchg xchg mov push xchg mov add xchg lret loope dec inc inc cmp jecxz out add or jge adc fs rol sub push outsb adc lods cmp or test xor (bad) inc (bad) in pop seto frstor movsb or and shrl mov into pushw jo or movsl lock (bad) cmc fsubr repz das dec sti xor mov icebp cwtl arpl in sbb fsubl (bad) sti popa xor dec and arpl or pop adc push (bad) test cmc test sbb test pop and push pop jl out push mov test xchg mov push cmc jecxz dec (bad) jne inc in fldcw imul imul (bad) lret iret sub test int add sbb rolb jecxz mov and push jge ret leave adc imul or sub xchg subb into mov ret enter cmp popa push lds daa mov mov fnstenv xor jo gs (bad) mov sub rcrb pop movsl adc push inc xorb aas push push push mov mov xchg xor es mov inc into or pop pop push push mov mov xor (bad) jno mov pushf sti stos test loop cmc (bad) mov inc push popl jbe or mov mov repz in rcll jge (bad) xchg rcl loop sbb cs in (bad) repz lock nop outsl pop push movsb push ljmp cmp xchg subl add mov dec cmp add std cltd jp xchg fwait mov push enter mov sub movsb dec mov sub jb into dec add add or adc inc push es les arpl test out repnz lods xorl xchg nop mov ret ret repz (bad) aaa out xor out mov sti mov and mov sub out inc popa dec aaa inc sti inc or xchg push std mov lcall mov jl inc cmpsl jb test mov rcl outsl xchg mov jns lea cmpsb cltd ljmp pusha push jno idiv adc cltd add into imul lods decl sub adc xchg test jnp and out and test stos adc jb push inc pop rorl es fsubrs inc pop (bad) jmp ja in inc push leave xor push popa ret sub push call push rcrl mov int repnz cmc mov lock dec pop xchg mov fistl shll push xor jo add repz negb mov popf (bad) insb jb outsl shlb loope adc jnp xor movsb ret jno and dec lds mov xchg insl (bad) push push aas push js loope adc lret jle call out daa xchg fistpll and outsb div jo in hlt les and aad sbb push add mov push jns test (bad) es mov orl jl cmp insl cmp mov sbb adc mov test mov sbb and or sbb mov push scas lret cmp fild arpl xor mov movsb pop cmp lret xor jns add stos loopne cmc adc xchg inc push and in push fcompl pop mov cs push into scas inc fwait and loop mov in roll xchg mov lds jne aam out or xor adc cld rcr shll jg js jecxz outsl xchg hlt mov dec adc and clc cmp jecxz inc mov push movsl cmpsl (bad) cmc add mov jg mov ljmp out (bad) mov dec sti pushf dec rcrb push adc (bad) ja xor inc adc mov hlt push or ljmp out ja sub cmp lock mov ljmp (bad) es sub xchg lahf ss gs or adc or cmpsl xor int pop mov sti mov test inc add or lods cmp lahf dec dec pop pop lcall sbb aaa sub mov dec sub push dec psadbw mov add (bad) repz pop andl test and mov leave xrelease or mov jb daa mov cmp sub push lret mov sahf push (bad) repnz sbb xchg int3 mov fsubl xor fldcw mov dec mov fadd addr16 sbb jmp jge cli (bad) mov push cmp add mov cwtl and lret das lock pop inc pusha sbb insb clc adc xor movsb adc xchg sarb jne scas movsb in dec push fucom (bad) (bad) mov mov xchg mov addb dec fs ret mov es enter pusha sub and sti repnz push mov sbb lcall xchg addr16 lds enter jl mul stos cli call jl push and movsb call push xchg jge jg out jbe aam data16 (bad) mov lods xor mov inc dec stos ret lret sbb mov xchg xchg push add sahf sub push mov cli lods xor lret fbld test pop mov out inc (bad) lahf incl or xlat adc (bad) shrb mov insb cmp add and outsb pop popf ret xor ficom clc ds int bound push push inc push mov movsw loop jnp sub pop js dec mov xchg push ljmp cmp ret jns dec push inc xchg cld mov loope (bad) je ss adc rcrb (bad) sbb push out or je dec xchg pop andl mov xor fsts push imul mov js inc push (bad) nop cmpl and dec hlt aaa stos (bad) imul and loope jg imulb lahf push jne pop and jl ds (bad) xchg and push mov es mov iret pop dec call (bad) lods cld (bad) out mov jge inc lret mov sbb out scas mov mov add je rcr mov jnp (bad) dec movsb lcall fbstp fwait push lods shl out cmp sar sub or mov pop roll mov scas mov mov jns outsl pop imul sbb test std test movsb sub fnsave and pop test outsl mov mov pop cmpsl lret cmpsb out leave repnz aam cmp (bad) out mov shlb in js out dec cmpsl xchg mov mov push jmp sbb pusha xor adcl xor jbe lds repz lods jbe xchg pushf pusha rolb fwait add repz jbe inc lret pop mov inc out shl and or call sbb stos das (bad) ja sarb iret push adc mov xchg rcrb dec xchg test jge lds xor inc jmp movsb pop (bad) lcall (bad) fcmovne push dec (bad) data16 repz push add lret xor mov push rcl insl add pop repz ja (bad) xor xor sti imul in pop push stc icebp or sbbl sub std lret jmp xor shrb sbb insl sti dec repnz dec dec outsb cmp jg aas cwtl imulb jbe mov je push fidivr pushf inc push stos push cmc or imul jne inc ficom icebp call out in push das xchg insb add mov sbb or nop xchg pop inc and push scas jae sub repnz fistpll fsts xchg mov adc pushf inc mov rcrl test cmc mov xchg cmpsb lcall mov push sbb ja out mov nop pop mov icebp inc iret or mov cmp movsl fcmovnbe lret outsl xorl shrb jle mov mov xsha256 cmpsb push (bad) repnz pop pop fdivs les mov leave dec (bad) std mov push sub lock loopne pop xchg push out in sbb mov or jbe pop aas clc enter mov lods jo imul xor sbb push in mov xor jne lea insl add adc idivl faddl and push add push lea fstpl stos insl xor mov stc push or roll mov sub jnp repnz ljmp adc inc xlat push add fs or ret jecxz dec mov or pop push mov popl fwait and and push xchg add hlt sbb mov jp mov rorb lods cmp std fwait push dec (bad) imulb outsl dec fdivs hlt sub inc hlt (bad) push inc mov dec and loope mov (bad) adc mov or aaa and push add mov movsl mulb sub dec mov (bad) pop in mov jle cli vsubpd jle mov ficompl lods arpl lds bnd (bad) repz cmp and fstpl xchg hlt xor pop mov adc in mov xchg into add aad es int3 sub sbb pop es into mov fwait jmp mov sbb mov out inc dec jo add fcoms int3 lods mov mov jae fwait mul mov xor dec mov (bad) adc inc test lret fldt mov loopne cmp das sub fisubl out sbb jecxz fwait test sbb pop jne bound mov faddp outsb xchg loop pop dec sahf (bad) mov es lds mov push movsl pushf je aas inc (bad) lea or jp mov xchg imul pop ret addr16 xor mov sbb icebp pop mov mov sbb mov push loopne mov andl mov sbb inc push in dec out or incl pop push ljmp xlat push pop (bad) jmp fsubrs pop aaa sbbl fsubs dec js repz outsl cld fs mov sub xchg repnz scas or mov sarl mov inc (bad) push sbb jbe (bad) ja or mov xor inc pop hlt fsubrs sub and loope pop mov shrl cli xchg mov ret mov cmp cmpsb js imul test dec dec adc add jle imul sarb inc cmp mov cmc std fimull (bad) fisttpll sbb add movsl ret lds in sbb stos pop inc scas xchg cld add push pushf mov jne mov mov xchg imul aas idiv ja mov int (bad) in inc or fldcw and and stos std jno sbb popa test sub mov push clc mov cld dec fmul add cli add jno fsubr inc or clc fbld (bad) fxch pop mov mov or pop ljmp pcmpgtb cmp mov lds mov push adc sub (bad) jl xchg jecxz mov push fwait les push mov rolb and mov insl xor sub inc lahf push fdivrl ret mov sbb rorl cmp stos mov mov jno mov sahf and out xchg or jle fsubs int3 mov xchg or xchg loope decl (bad) ja les push and push push sub sahf fstpt mov pop cmpsb ret or daa rolb clc mov sahf out loopnew dec sub push fwait adc test xor jecxz scas mov dec jae (bad) pop xchg mov cmp sbb mov mov xchg hlt shll test data16 push in int loopne pusha imul push out test mov xchg insl sub jmp mov mov movhps popf lods jns repnz add les and mov imul idivl add inc sub cwtl add cmp mov xchg jno or std mov popf xchg jecxz stos sub sub xchg xchg cmp push inc lahf ss test push outsb aaa das lods xor jbe in xchg jae inc stc sub or sbb sbb push cs lods int3 in nop or into ss dec das mov inc stos mov sbb or dec jmp cwtl xchg maskmovq (bad) mov fcomp xor outsl dec lods mov repz xchg test aad movsl negl js xchg outsb or adc cmp nop push js jl xorb or popf jl pop mov cld xchg push pop dec jno xor inc loope push mov adc loopne dec hlt icebp (bad) lret dec cwtl mov cmpsl rcr inc mov mov dec push jp cmp movsl adc mov push sbb out das dec imul rcrl xor adc push popa ds aam enter cmp in inc aas mulps mov xchg mov cmp test sub sbb push jae push and adc and pop pop das aad aas clc xor lcall fnstcw sti jle lret sbb xchg mov pushf scas bound cmp pop stos imul xchg add ljmp sti xor std sub jle out dec js mov rolb mov ljmp jg mov cmp mov popa lds fiaddl and mov fwait aas push add insl mov stos out jge add je cmp and fwait xchg mov mov xlat adcl mull pop and repz mov sub int3 add cmp pop je,pt shll lret rorl test pop sbb fstp mov xor xor loopne shrl rolb imull xchg les leave mov lahf and fsts pop xor outsl mov mov (bad) cmp pop cmp pop sub pop mov dec lcall add dec or mov fild movsb movsb shlb or loopne adc fwait inc xchg stos push stos xchg rcrb lods cmp pop arpl or push and sbb hlt jge das mov or je test sub xchg test mov push ljmp xor notb ss pop lret xorl repnz sti dec fstps pop or push xchg jb (bad) ja or mov bound das pop js test mov imul add mov (bad) xor mov test sahf adc add bound fistl out mov aaa mov js ficom mov shrd mov pop push xchg outsb mov leave adc les xor inc jg (bad) cmpsl orb (bad) nop int iretw (bad) repnz mov cmpsb roll or inc jno push jp add xorl mov icebp xlat and enter push dec scas in lds pop cltd xchg add pop cs mov jle sbb cltd scas cmovge mov mov cmp and push adc lahf in clc bound outsb daa xchg sbb icebp add dec loopne ja push cmpsl cmpsb adc or mov pop dec sbb iret shl sarl cmpl out mov repz movsb xor scas lcall push or xchg testb ret insb inc pop cmp stos pop shll ds aaa sub fnstsw mov sub xor fisubr add (bad) sahf ret and cmpl lods loop fwait lock lods push or dec inc addl in add (bad) in aam xchg stos popa and das cmp pop pop insb push out push jns and loop dec inc cmp xchg test jge and pop lods cmp jb cwtl lds call outsb push xor and sbb andl and test les in enter mov sbb loope mov rclb into sbb sub add jg push sub adc inc cmc or add add pop scas stc push jge fistpl sti cwtl mov adc int3 cmc mov and pop mov out sarl fadd push (bad) repz push dec sbbl clc dec lds je movsl jge push (bad) push push scas pop pop pop pop insl xor mov (bad) sahf adc and cmc dec dec push ret dec and sbb sbb stos fdivrl ret and rol (bad) jnp scas inc mov pop out imul inc sub imul add aaa outsb lea sub jmp ret ss pusha lods pop aam xor (bad) fistl mov or jbe fisubrl sbb incb jns jae xchg daa ret std lret jmp mov (bad) jle pop fbld rcr mov movsl dec push sbb sbb add std (bad) adcl dec and mov pop movsb xchg cmp push xchg xor mov dec les jecxz xchg push pop dec ret and sti sarl mov cld pop ds int xchg in sbb add popf jbe sbb jae or movsl xchg sarb push push adc fsubrp fsub test adc shrb scas jge out bound and sub (bad) out lret and cwtl lret xchg scas mov imul ljmp adcb mov sahf inc push lcall leave or xor mov jg mov pop cli push push fbld mov and cmp jnp cmp adc out sub fnstsw cmp mov scas adc inc (bad) (bad) aad scas push mov das hlt ds sbb loop iret push mov cmp jmp imul jno in dec pop dec les hlt jbe mov jmp out mov cmp cs fs in jae jbe adc xor loope es lea aad jnp mulb sbbl and lods sbb (bad) stos dec scas lds shrl adc aaa test hlt xorl mov dec cmp scas sahf dec adc sub test clc adc lods popf or xchg jns mov out xchg or es movsb pop dec inc test pusha dec stos jl sub push repz mov bound add inc test das fnsave insb jnp xor (bad) mov imul movsb xchg insl mov jg mov in adc addr16 ds and bound mov xchg inc pop and cmpsl mov shrb int test push pop mov data16 add fcompl (bad) scas pop (bad) dec mov xchg mov data16 sbb jle leave call dec sub jne mov xor out fldenv aad clc jle xor push add (bad) in pop and scas nop xor jmp sbb jmp rorb test adc xor and mov sbb cmp mov pop xchg mov add fistpl cmp repz push mov cmp lahf ffreep cli inc mov repz push incb xchg (bad) (bad) call rol pop dec jns shlb and and pop pop (bad) mov inc movsb gs lock loope inc mov sarl or adc fildll enter mov pusha inc cli sahf xchg ja fldl mov in lret jnp repz std nop cmc mov mov inc (bad) out cltd cmp dec sub cmc int inc mov jb adc (bad) pop adc mov sbb ljmp and cmc fdivrs pop test sub imul jge cltd pop movsl sub lcall out std xchg pop cld mov xchg mov jmp jp loope push cmp sbb (bad) xchg jb xor or jnp mov mov push insl push push jmp adcl xchg int push mov xchg jmp inc mov lret and sbb dec mov mov pop push mov xor xchg mov out mov cli mov mov xorl jge mov clc out dec inc faddl cs paddw or mov cmpsl push je add pop sub arpl in adc adc lods mov xlat jp sti fdiv xor mov pop cmp ficoml (bad) (bad) add xchg pop je mov es std jno ljmp dec adc in shll (bad) pusha mov ss jecxz lods and andl mov call gs int jae rclb mov mov sbb mov stos pop jecxz fnstcw rcrl out xor jle xor push lahf aam or cmpsl dec fidivrl ficomp mov add jne cmp jmp xor cld mov xchg adc jmp iret jns test lods jne or sbb add pop xchg fnstenv (bad) pusha lea aad movl push dec push cmp test test clc cmpsl xchg frstor imul (bad) test pushl rorb mov push (bad) dec add jge or inc adc into or fcmovu mov cli dec insl inc out dec and add out (bad) mov adcl push pop rcl and sti cmpsl xor outsl inc outsl xor sti movsl inc mov push aam adc add rcrl mov dec sub sbb outsb std xor scas mulb push mov push mov mov test pop sbb push test fwait sti (bad) data16 mov jb sub and push and loope push pop daa jb movsb adc inc popa mov popa dec sbb lods push out add adc xor cmp add gs shrb (bad) into sub fimul fstps or pusha jl fldl mov xlat cwtl xor mov jmp mov xchg in inc les sarl mov push or lods inc test clc orl fwait push xor ret dec stc andb jp cwtl push lock shlb push jp pop ret add lret insb jge or mov outsl (bad) and inc outsl sub dec xlat outsl xchg push and jg test sub es lock and xor mov popa xor scas push loopne mov (bad) jo mov add shlb mov (bad) mov test jmp mov xchg std gs loop mov inc or repnz mov nop cmp rcr (bad) mov pop add scas dec jp sub mov inc mov (bad) fiaddl jnp add (bad) pop jo fadds and jg cmpsb loop sar cmpsb sub or test mov aam imul leave call pusha mov xor test int les xor frstor push and rcr pop dec add sbb cmp dec das cwtl sbb outsb push mov fs jmp sub ja test aad fisubr or ss sub mov inc add enter sahf inc repz xlat (bad) in in mov test inc mov sbbb addr16 das inc or lahf fadds sbb fldt (bad) cltd outsb ja decl mov fsubrl icebp movsl xor cmc jno repz xchg call lahf cld mov xchg mov sub sbb loope fidivl std mov push add ja jl adc das mov ret pop xchg push jns and in stos in or clc cmc pushf sarb mov icebp push add jg push outsl sub xchg mov and push mov and sahf cmp out mov add cmc or test aam addr16 fisttpl cld test movsb lods in cli mov aam aad jae shl sub fldt mov pop fsubr dec sbb int3 into dec mov loope add insb cmpb xchg repnz mov pop mov inc or pop stc fisttpl fldt (bad) lret lahf adc pusha cmp and into sbb subl (bad) xchg inc lret sti jae in imul mov lret (bad) test inc lea imul lods mov xchg leave sgdtl inc addr16 or adc jle (bad) jb jecxz in sbb rsm sub dec add mov inc mov xchg aad leave xchg mov adc adc jb dec mov jnp (bad) cmp mov mov pop pop mov loope lods add jp int mov mov jecxz xchg out outsb lods test insl dec cli cwtl dec pop mov xlat rorl add lock xor aam rcr push sub jb add (bad) push jle lea js sbb dec dec aad adc (bad) cltd mov movb daa xchg jge addr16 sub xchg pandn das jge es and mov mov xor out loop push (bad) mov in pop lcall jge out and lret or mov fdivrl outsl dec jne and mov test clc repnz sub mov rclb xor fs icebp xor xor fdiv adc icebp fnstenv loope ret loopne mov cmp fdivp imul and push ja mov xor mov pop sbb mov add out clc inc xor pusha idiv jmp xchg aas jl sbb jle dec ja pop (bad) cld std imul ffree mov in enter and inc popa mov cmp pusha inc cltd push pop mov ljmp jge mov fisttpll fwait jl stos jnp inc stos subb xchg add pusha jb sbb mov cmpl jbe jl jge lret xlat aam sbb (bad) cltd loope test mov jbe rorl out sbb movsb mov clc and sub xchg jnp lds aaa pushf or pushf iret fcomip inc add mov test in cmp (bad) xor repnz pop jp add lock jne mov and cmp imul dec or and cmpsl ds xor jb dec inc mov push pop cli js aam (bad) hlt add test push xor test mov add sbb hlt clc das fcomip sbbl dec sub dec out fstpl ds inc pusha gs enter inc sub ljmp stos pop pop sub pop xchg leave es xchg sar popf sub push and jg lret sti sbb mov jg mov dec inc fsts lea or add pop xor push jo (bad) mov icebp scas stc in js roll push std mov aad imul cld aaa cli adc lahf fs mov and pop ret nop dec (bad) mov mov repz (bad) divb sub outsb popa test dec lock jg cmp mov mov push inc and arpl sub aam scas call push pusha mov sti ret cmp pushf loop (bad) adc push mov js fiaddl mov in popf pop (bad) xor pop (bad) xchg scas mov mov add mov (bad) aaa push cwtl rep jno mov cmc cmp fnstenv jle push call xlat adc sub mov fistp in in neg iret or fbstp fsubs or or push test xor inc mov or and testl imul fsts sbb xchg jnp rorb xchg out std repz mov arpl test or sbb mov mov jbe popa lahf mov scas test stos outsb and sub stos xor cmpsl adc imul sbb pushf (bad) adc mov pop shl sbb jecxz push popa lahf mov icebp or arpl jecxz add jg sub pop mov not mov add and (bad) lods es and lret mov xchg mov xor dec mov lcall ds repz jae sbb pop push insb dec cwtl or xor adc add movsl dec cmpsb enter inc and xor inc js dec jns pop mov add jbe inc jecxz lods sub aaa jl jmp clc xchg out dec dec jae xchg cltd fwait pop das test (bad) mov mov (bad) lret lods insl (bad) scas mov add lock nop jge mov cmp push inc movsl adc orl repz adc lret jge sbb jno dec mov into lds sub xchg test aam mov iret es mov push scas sbb fcoms test insb jg cmp lret cmp scas js xlat mov inc cmc cmc es mov loop int3 enter push into es pop add mov sbb add rcrl idiv add jge je jno out add sbb pop movsl push mov (bad) and imul cmp and fisubl loop adc sub and ffreep or or dec cld cmc and push stos in sbb xchg clc scas mov dec xlat jne or inc inc jmp push shr inc pop adc js icebp (bad) dec in pop lea or adc inc (bad) enter xchg jns or lods cmc fwait nop push outsb shlb mov mov jl sub test fwait and jmp hlt (bad) mov inc pop popl lret xchg movsb cmp roll pusha mov adc iret mov cli jp jmp (bad) rcrb jle pop je insb loopne ss mov mov lret jae repz mov push loop jmp mov and aaa mov mov cltd sub mov daa xchg push jo or xchg dec stos mov or xchg hlt dec (bad) sbb sub loop cmpsb lds add hlt into adc jb cld push push lods jp std icebp sub pop pop call lahf push fwait add hlt mov (bad) fistpll movsb mov (bad) int mov fucom push sbb cwtl pushf fildll fiadd and pop ss pop jne ds pop pop or (bad) adc pusha xchg xchg in mov mov xor mov xor jge ffreep sub dec das movsb (bad) push fstpl xchg clc jecxz xor (bad) jmp jecxz movsb sub xor sub dec mov repz adc dec pop add pop push shrl es jmp nop xorb inc outsb pop mov pop push pop mov sbb imul push push in mov inc out mov mov lcall int xchg icebp xchg mov lret (bad) pop add cwtl aad sbb dec jl mov mov aas dec mov aad sahf cmp mov ret stos (bad) stc test jns pop arpl xchg (bad) divl jns fidivl je insl mov cs imul outsl std jl add sbb je add fdivs mov (bad) cmp aaa das or mov jle mov inc push outsb jp or shr xor out ljmp jge ja xchg inc imul and mov pop imul pop push sbb es test (bad) mov mov cmp pop out push aas sarl cmp push inc and popf xor lea divb jl iret xor iret pop jae cli movsl jg cli jne pushf popa or xor jecxz xor mov adc jmp cmc les fistp (bad) inc dec cld (bad) jp stos popf sub adc inc (bad) mov add imul rorb xchg push cmp inc popa imull push and loop clc push aaa pop push adc cmp subl cmp lods (bad) sub int bound lahf popf cmp out loop lods pop mov xchg call imul cli inc ss fucom rorl idivl push ljmp mov subl lods negl adc pushf cmpsl inc les mov cmpsb jne push mov movsl xchg fcmovne insl pushf mov or xchg mul dec xchg repnz clc inc dec push (bad) xlat hlt sbb mov jl ss or xchg push sub cmpsl out jecxz dec mov loope lret and dec add push jmp xor add dec jb cmp cmp pop out daa int3 lcall push mov dec (bad) popa sar incl sub push mov imul inc ss sub test sbb mov inc leave pop clc sbb pop in movsb dec cmpsl rorl insl subl ds mov insb (bad) ds cwtl (bad) jnp mov mov sbb fdivrl jg jp adc fsts sbb (bad) dec inc inc jno aas mov mov ret and jns dec je sub and dec lea sbb fwait push movl inc or (bad) lods cltd pusha mov (bad) xor sbb xor xchg or rcll xor jo cmp xchg cltd fs les movsbl gs cmp int3 ds dec push cld lahf ljmp add fxch outsl sub push popf daa add aas mov int aas into mov push je add popf popf pusha aam inc adc cmp mov xor test push cli mov dec mov int mov or clc stos add push rcrl pop mov std jns xchg push mov iret jno (bad) mov pop sti ret lds lcall loop push mov dec ret xor sub sub or or push add scas and decb adc push pop bnd pop jp dec gs fistpl inc or shll mov jle xor repnz int or (bad) test inc jmp jmp mov ds lods mulb cs push (bad) mov loope adc mov and cmpsb sub (bad) xlat mov pop mov push rcll push stos and movsl mov or jl pop adcl les in or orl int3 aaa mov das movsb sbb loop scas cwtl mov mov pop sbb or lds leave pop loope mov or lods inc icebp notl inc jge xor dec pop lock push ret adc loop dec pushf mov rcr add mov stos test xor test sbb or test xchg mov mov ja cmp cmp add push cmp les pop stc and lea jnp pop jbe insl jb add mov cli jbe inc cmp and jb pushf push jge sub gs dec xor push mov jae push std addl cmp repz mov pop push es mov sbb lea pop loop aad insl sub (bad) dec ror adc jmp jmp lock in popa in jle mov sub mov mov mov mov xchg sbb call sub cmpsb into (bad) movsl push fsubs pop insb (bad) xchg xor lds jbe jge pop mov bound inc (bad) (bad) ds mov mov adc rorb pop xchg push daa mov ds les jge mov notl hlt and pop test imul mov lods or mov push inc incl into push mov lods adc lcall test add pushf cmp fsts jmp sbb jmp xor jmp add inc xor mov xor add sub xor dec rorb dec push in daa cltd lahf push into sbb jg ficompl aas int3 mov test sub enter dec jae scas pop push in test movl mov or pop cs icebp stos pop dec adc jo ja andb and mov lods lret ljmp out data16 xchg shl cmc xchg mov push popf sbb ret js jb jo ret xor jae les fs xor int3 (bad) or dec test cmp push in pop (bad) inc into pop call push mov adc dec std dec (bad) popa test insb pop les ljmp aam fwait jne movsb dec pop mov lret push jmp fnstcw aad adc sub in lods bound inc rcrl cli fsubs xor fimul loopne push mov or (bad) mov and mov jmp sbb lret aad mov cs ja pop test into push push adc jl jp jns xchg daa or pushf into sbb iret inc js pop push movsb loop jmp js mov test je xor aad xlat and test enter das mov scas lds xchg aas (bad) cs mov bound mov mov fnstsw mov mov shll fistp adc sbb mov push rorl inc mov mov into dec (bad) shr jbe cmpsb cs xor pop loop mov jg scas dec xor jge bound mov incb push shlb xor test xchg outsl fisubrl cs mov pop cmp push xchg jno,pt jle cmc mov into inc in xorl aam lahf out cwtl pusha test mov lds xchg in add and adc mov div outsb dec cltd push jg mov (bad) jae pop mov mov out scas mov sbb jecxz in sbb mov cmpsl push daa ja pop addl stc push pop lods insb cltd mov cmp xor mov dec jo arpl dec adc jo insl repz stc stc popa inc pop (bad) jno push mov es call js jecxz inc mov lock adc xchg jbe sub xlat cmovge insb pop stos dec cmp push lcall jnp movsl push push notb mov repnz aam mov stos je xchg pop push lods dec and (bad) xor popf jnp gs in and sti repz das adc aas or lds jle dec mov or call cwtl add fildl dec lcall inc aad ret (bad) (bad) fistl in pop hlt cmp ret rclb std repz mov adc imul out jmp and lea or iret ffreep xchg xchg lds push loopne pusha in or in mov and xlat incb pop adc adc stc ss dec inc ss push lods cmpsb sti mov gs sub pop jnp xor and dec into xorl pop dec inc mov and or sti sub xor and xor mov pop test xchg sbb fdivs fistpll xor or add pop ror negl or imul stos push aad aad fs jo std sub mov lods cs dec mov data16 push xchg (bad) jns nop mov push dec xchg cmp pop cmc mov fsts cld lahf mov add movsb (bad) dec dec mov or add xor ljmp and jg cli test push xlat push sub stos imul xchg push in push mov mov mov or add dec mov inc inc sbb cmpl or cmc (bad) jne,pt jnp popa in popa testb (bad) fistl ljmp fisttpl (bad) loop dec push pop sbb insb mov addr16 out mov out ja (bad) scas ja pop adc fs adc push aaa faddl ds sub iret aam fadds dec shr sbb dec xor popf xchg mov add xlat jbe,pn mov sub dec test and xchg outsl sbb jecxz bound mov lods jns or lods addb lret push xor notl lret inc outsb aam inc stc xchg pusha push es dec stos mov or jmp aam rcrl ljmp (bad) inc mov sahf xor pop dec mov into mov push xchg fiaddl fild (bad) jg (bad) xchg sbb mov test xchg pusha dec int3 jg es out ficoml push aam mov and jecxz mov xchg jno mov lret repz and lret scas and (bad) ljmp imul sub adc mov cli dec inc xchg jnp loopne imul pop cmp ss sbb mov xor xor add push stos test fwait out push or mov mov lds lock enter test mov fisttpl mov inc xchg push test in es es sbb hlt pop repz dec nop push mov arpl (bad) out push xorl js mov adc inc frstor push jbe fmuls repz shr mov fwait push inc pusha dec xor aas adc les jns jno mov xchg add and xchg int3 xchg mov test mov insl or jmp arpl mov pop mov xchg int3 xchg in popf es je xor cmp jecxz adc fstp aad cmpsb fisttp and popf out mov in jo inc lret inc cmp dec mov cmc rcll sub dec adc xchg pop imul mov cs push xchg lods rcl xor cmp lcall mov ret pop pop push imul cmp xor pop adc insl push js addr16 lret cmpsl (bad) sarl mov cmp dec pop mov sub pop ret push inc aam and fiaddl in mov add (bad) aam xor pop mov push mov mov and mov jns mov mov test outsb adc push mov loope lods xchg add fs repz sahf lea xchg fadds fldcw hlt rcl in popf aad aad in push adc mov sbb sahf dec sbb or sahf jne xor imul stc int3 fdivs xor cltd cmp repz ja inc jno in pop add inc jmp or scas add in xchg dec sub pushf jae (bad) call inc cmovns push lcall sub cltd inc fimull jp or mov add (bad) jl cmp mov and mov dec mov sbb imul xchg xor repz call mov lcall push pop out int iret jnp sub bnd pop adc dec sarl stos arpl cli in jmp mov cld adcl push rcll cmc scas ljmp out (bad) mull pop lret adc sarb mov xchg add jmp int3 and scas or es or sub dec and mov call cltd in ret jno inc mov pop xchg inc out and leave inc (bad) mov mov push addb xchg call fcomps in adc adc je push movsl xchg dec test mov lea enter in and cltd push cmpb pop cmc mull gs stos (bad) movzbl xchg pop aam insl and mov push inc dec and jl out add mov (bad) inc (bad) lock or in mov fwait and dec pop (bad) or fucomi push jb fidivrl dec dec sbb xchg insb push pop jge sar dec mov rclb iret inc xor shll and cmc dec xchg into or jne pop inc jne pop (bad) push in das rorb rcrl add jno jno les add dec mov aaa outsl cmpsl lods mov xchg mov lcall (bad) mov or (bad) mov mov mov cwtl adc mov mov shrl (bad) or subb arpl movsb pop aad repnz inc sbb cltd pusha clc loopne sub call inc push xchg fldcw arpl out imul mov push sub jae mov xchg rclb stos jne test xchg mov sub cmp adc or push rdpmc in (bad) jg int cmp inc pop mov push scas dec pop mov jbe or cmp mov or lods xchg ljmp push add (bad) mov xchg xchg or cmpsb iret jl out inc or in adc (bad) jnp jmp pop pop adc dec call fildl (bad) push push jle aad mov mov add or mov out ret stos mov fsubrs jmp stc adc mov jne test mov push aas fs ret fstps add iret bound push mov (bad) rcll stos push jns movsb pop mov pop gs lahf test push das es push jne and jnp adc je and mov insl jo sub xchg push stos mov stc push (bad) jbe out sbb adc sbb paddusb in fdivs cli sbb addr16 jbe icebp jmp test jno mov jmp outsl fsubrl aas (bad) mov mov pop in push arpl popf (bad) dec push lods xor fildl cmpsl pop push xchg (bad) (bad) pop sub sbb jns dec inc pushf jle adc and add cmc test jb mov sub daa add add mov mov cmp pop aaa mov add loop lock das dec mov push push test icebp xchg pusha jecxz mul (bad) sub add dec or in and cwtl dec nop add insl sub int jb cltd pop mov mov test (bad) repnz mov mov andl fdivl cwtl pop jb test int3 pop subb lahf or cmpsb loopne les jle xor sub or push lods fwait mov push movsb jg jne push push xor daa data16 mov pop dec cs das test sbb pushl sahf mov fidiv jnp or leave pop cld les test and xor pop ja aaa daa mov lea add fcomp popa insb sarb or mov sahf pushf xchg and xchg push outsl mov pop add mov xor push bound jmp mov pop dec push dec into or mov adc iret jnp pushf popa std xchg ror (bad) hlt aam (bad) xor popf pop mov loope dec jbe adc push add pop xor in dec push call test ficompl (bad) sbb std mov (bad) xor sti testl cmp popa loope std subl xchg and test sub adc cs inc add out outsb dec movsb (bad) pop shrb lods rol xchg pop mov sbb mov jmp jecxz push das leave mov mov jl jle mov xlat jnp cmp ljmp inc test mov imul pushf mov (bad) mov jnp push mov es dec pop sub mov and pop pop (bad) test and stc cs push jne popf movsl jle mov jecxz and jae out shll xchg rclb loopne push push fs sub xchg sbb lods pop lcall jge rclb outsb jl jg repz sbb into sub test lret pop mov mov dec inc sahf lods mov inc push push and adcb ror add sub rolb dec adc adc mov int3 movsb cld mov cmp jbe mov pusha xor inc cmp into jle das inc out push dec es cwtl ja lods inc xchg xor mov pop xor into cmp xchg push popa (bad) cvtdq2ps orl mov dec jo inc add imul ja fsubrs jne dec jo sbb inc cmp fsubrs mov dec lahf insb lcall xor dec int cli in sub (bad) xor rorl or out inc mov and test pop inc repz out scas lods mov andl jbe fmuls xor std inc push inc ja rorl dec hlt xor fucomi fdivrl mov adc mov inc sbb pop scas ret ds inc xchg nop or popa mov sub fidivrl seto icebp mov push dec inc cmpsl mov out into (bad) mov rcrl lahf (bad) fwait pop push int ret mov mov test adcb xchg dec popl fist pop addr16 mov popa push jns mov (bad) pushl sub push pop mov push testb or aad lea int3 pop sub mov jo sub stos inc sub in jge int3 mov std mov loop push pop jge es data16 sub cmp lret dec aaa and pop adc xchg (bad) or push lods ds jg int3 mov lods addr16 les andnps setl mov xor ret (bad) std outsl sub aaa ds imul add (bad) lock nop movsb pop sbb in jne mov jb xchg jne mov popf mov pop jno call sbb into push lods stos faddp outsb sbb jecxz ljmp out inc aad push ficompl repnz (bad) adc mov pop xor stc cmpsl lcall leave mov dec mov mov out or xor (bad) clc aad mov aas rcll xor out in (bad) jns jge cmc mov mov mov push and add es fsubrs pop pushf pop popf push jns jo mov mov jnp lret icebp movsb aaa arpl cmc cmc dec (bad) mov mov loope mov sahf jbe add test push shl mov scas or lret aam (bad) sub imul mov sub pop lds fidivrl imull bound movsl (bad) mov and imul dec pop dec push jns sbb push shrl lods mov or out pop (bad) test mov sub sub insl add mov out aas adc jmp xchg pushf or mov sbb jle dec out (bad) dec or arpl (bad) jge push fldenv jne pop je loopne push and aad in mov (bad) sub push dec and xor shll sti cmp cmpsl or mov jmp mov lret clc dec into imul or aad (bad) sbb (bad) pop je mull lahf loopne mov stos cmpsl jl mov cmp dec and dec sub loop sub dec inc mov iret mov inc mov popf push clc daa aaa adc icebp add rolb shr or dec fs (bad) fsubrl xchg cmp ret jnp loope in pop mov jmp add imul pop jno outsl icebp xorl jns xlat pop loop sub push cmp fdivp cmc and outsb dec fbld mov inc into cmp addr16 sub xchg xor mov (bad) je fs outsb cmp xor (bad) outsl mov mov mov aad in push xchg and inc dec int3 jne sbb sub lock call out cmp add addb lds xor sbb push pop lock pop pushf sub shlb cmp mov es mov dec mov test mov popa ss jne test sti or or cmp loope push cmp ljmp arpl cmpsb xchg push pop inc push jl insb mov enter cmp rorl js ret inc jecxz out mov jmp jg fs dec or jmp add xor sti lods add mov add test fsubrs mov cs push repnz and das mov in inc xchg cmp movsl cmp add insb pop jbe cmpsl pop cmp xchg mov neg out not mov adc jno or icebp inc (bad) mov sbbb int3 shrb rcll xchg inc pop int3 cmp sar in dec jnp dec fwait dec (bad) push and xchg inc cmpsl mov pop add ret stos mov in pusha lahf add push sbb mov adc lret rolb sub mov inc leave xchg orb dec mov shrl add fs dec shrb xchg and dec mov inc and inc inc aas mov sbb out cltd xlat sahf loope ja bound add mov aas test sub movsl mov popf mov lock push mov push clc dec inc pop out inc lock fldl add pusha movsl lock imulb push xor adc pop cmpsl mov imul cmp jmp lcall mov or xor test or jmp push xor inc jb xor daa xor fisubl adc pop mov pop je adc add mov jnp mov dec cmp daa cltd (bad) xor adc jp stos pop sbb push fs inc lret mov mov add pop out inc (bad) std sub mov inc cmp test jg adc dec and pop adc je les jno test push ja stos mov std cmc mov inc sub adc rclb inc insb mov bound jge int3 jb mov xor push sub cld xor fadds dec notb sub jnp insl daa leave or outsb xor stos ja popf out fstps adc dec scas sti dec jg orb rcrb aad jp and sbb add scas into add cmc mov in mov fwait inc aam adc aad lret dec dec in data16 mov jg pop jmp xchg push (bad) out aaa int3 xor xlat sarl jbe mov sub addr16 jp (bad) jb mov or lahf sub pop push push and mov js pop jle aam sbb add (bad) dec inc fsts leave add stos pop in xchg xchg xor movsl pushf and fmul xorb ljmp jle cmp into lret fcomps outsb sti dec or rol xor shll pop rcll mov push adc (bad) loopne and aas xlat (bad) jge jmp pushf sub mov mov imull js iret imul cmp daa int fdivrl pop xorps rolb pop outsl mov in in sub add push (bad) rolb sbb sbb ret sub (bad) pop ffreep jb insb sti daa mov adc sbb jmp or (bad) sub lret mov ret inc cmpsb and idivl icebp or mov xchg pop xor cli stc dec pushf dec mov push sbb jno add sbb inc cmp push ret pushf xchg loopne lcall sbb pop mov pop test pop pop imul dec push cmpsb and cmp fiadd cmp mov mov loope test mov mov adc mov adc out xchg mov ror fcmovu aas rcr add mov xchg movsb inc hlt rclb adc icebp (bad) std ret cwtl rcrb mov hlt and pop out inc jb insl push mov aam scas in inc and mov mov mov ret pop mov pop outsl cmp repz mov jno xchg pop mov js add cld xchg xchg mov sub fucom adc and mov iret push js (bad) movsl jg les out xorb cli jl xchg add popa add cmpsl add push jne or pop jge cmc and es mov out stos shl es jg mov mov xor mov fcoml scas dec sbb mov mov mov lods sbb cs out iret xor aaa (bad) in loope jbe push add jnp mov cwtl adc sti mov jns jl fucomip mov in gs in push xchg sub insl js cmp out jmp mov bound dec adc dec inc mov out lcall pushf xor pop addl sahf adc call and jne xchg popf jle mov adc outsb int3 addr16 sti test gs cmp xor sti and cli int3 aad adc scas (bad) adc xor mov pop inc nop push ljmp xchg loopne (bad) hlt add aad ret clc adc aam pushl or mov xor not xchg rclb pop lods in jnp clc icebp mov pop aad sub add mov xchg int sbb into scas sbb xor jmp fld or pop fs xchg in cli icebp fidivl pop jl scas mov mov (bad) pop test mov pop dec daa xor enter fidivr sbb mov jl daa sub push out insl or push mov lret in pusha mov cld lods (bad) repnz dec dec in jne adc fisttpl or and mov jmp mov mov repz push (bad) push mov test idiv sbb (bad) jnp out xor (bad) xchg mov imul lods inc lret add loope cmpb repz int jne pop lods jecxz in lret movsl dec and imul (bad) mov movsb mov inc out into divl out lahf inc adc lahf cmpl das ljmp jg mov loopne dec pusha call xchg das aad add cli cwtl pop mov rcll cltd leave xchg sarl loop divb xchg pop add stos gs or sub rorb imul dec ret sub jl ds add rclb ret scas icebp cwtl enter mov jne mov mov and push push inc sbb ds iret mov sub sti fimull stos enter scas enter shrb popf es stos mov lds or mov add int3 lds xchg pop mov into lcall lahf push repnz cmp dec xor fstpl jl aas jo and out xchg fistpl rorl push cli and (bad) sbb pop mov insl in push mov cmp jb sbb scas jnp inc (bad) divl ljmp roll lret imul inc data16 pop add aam pop push adc xchg push insl add cmc or dec xor jae sbb mov sub push sub jl ss or aad adc mov scas fs hlt xlat add je jl jno push adc ret dec rorl push add jo les lods cmpsb movsl shrb les dec push push mov or leave shrd es cld xor repnz es ljmp call mov (bad) hlt lahf cmp add aam sbb xor xchg lods out stos test cs je mov xlat lods (bad) lods es sbb push scas out push push scas js inc ficom ds pop mov push mov pop sbb aam adc add jle mov inc insl sbb scas mov fiadd test lcall incb leave pop xchg mov je jl ret cltd inc push les or lret xor test insb inc cmc mov js popa movsb mov out in outsb aad or mov rcrl mov out sub or adc or and lahf movsl add mov mov dec stos test push (bad) xchg loope fbld out fdivr pop cmp popf imul rorb mov lods add arpl repnz mov adc mov aam sbbl jo and add mov cmp outsl out out or dec xchg mov push push mov jecxz jge push sarl sbb insb insb rclb daa push cltd cmp cmp lea jp mov (bad) in sahf fwait pop test inc hlt (bad) mov aad mov popa das fcomip cmp aad mov into (bad) xor cmp out (bad) xchg xchg repnz mov out mov xchg mov mov xorl lds push test dec mov push aam and rolb sbb leave inc call mov cwtl mov data16 mulb call insb and mov pop or dec lahf and jne ss dec mov fdivrs fcomi loop push movsb (bad) mov and or jo jecxz fcoms push hlt (bad) push push ret dec sub add pop pop lret push jl adc push cmp xor push and jg (bad) cld (bad) sub jo or mov cmp lock or mov rorl cmp ds jge cmp les les arpl lods outsb nop int3 dec jne dec xlat std imul (bad) mov movl shl push sub xchg (bad) lods dec pop setg xor and jmp push mov rcrl inc fsubrs loopne sbb jg push dec adc push cmp or iret sgdtl clc ret dec add cld push rcll (bad) push dec cmp pop in fwait aaa xchg dec clc xchg popa inc mov pop mov and mov jo or push jl mov sbb inc pop les jbe pop cltd test pop movsb loop dec mov insl or jo ds outsl clc sbb mov mov jnp cmp jp scas inc je pop jmp xchg sub pop test in shll mov es pop cmp sbb fidiv imul jbe mov cmp xor lods pop test dec (bad) repz pop push sbb fadd negl dec mov push movsl jmp add (bad) les sbb sbb std repz das and pop ljmp xchg pop imul xor cmp cs jo pusha stc push cmc sub inc adc inc jnp std pop in cmp sub mov (bad) lret mov sub fisttp mov mov or pop and testl and jb (bad) pushl inc push jo push bound into (bad) cs jp sub or sub pop pop fbld sub pop mov arpl mov cmp inc pop outsb mov jl mov dec add sub outsl je stos jb cmc cmp inc mov mov bound pop push movsl (bad) (bad) loopne pop push repz cmpsb xchg cmp and sahf adc daa push xor es scas push jg mov mov aaa test jmp in mov ret insl loopne push repz repnz push jo out mov sbb nop (bad) nop orl mov push push and xchg cmpsb jno,pt in test dec sahf ljmp repz cmp sbbl mov and cwtl sbb xchg mov hlt clc je adc mov inc push addr16 clc adc out and popa mov xchg pop jle fsts cltd sub sbb (bad) push (bad) push cmc orl stos xor idivb inc (bad) and rol les fidivl xor xchg cld adc mov fadds mov sbb dec ret cltd addr16 (bad) loopne dec rclb daa inc loopne cs inc sbb in shl in (bad) sti pop xchg mov (bad) fldt insb and fildl sbb in and in push andl mov and cli shrb mov data16 enter js mov sbb mov mov ret cwtl jp aad add popf jno xchg jno mov cmc ja std aas inc xchg scas das ret addr16 mov push imul dec inc rcll sarl outsl pop imul pop mov mov ja jge pushf pop in mov mov idiv and and pop pop ja sahf loope mov mov jl pop lea pop (bad) leave pop lods jno or addr16 xchg inc bound shlb cmp insl cmp pop aas pop jmp cmp add xchg je,pn loopne in (bad) repnz int3 xchg lods pop push sti cwtl adc pusha in cltd clc (bad) mov movsb dec xchg pop add imull fucomi sbb xchg fmull lock movnti sub inc imul adc xchg xor inc icebp mov jge (bad) icebp repnz sub mov in xor nop add ss ret addr16 mov movsb leave in adc adc dec arpl or push and pop sub loopne and (bad) jbe mov dec dec mov mov repnz mov pop jae mov mov cmp mov jp mov sbb cmp xor mov iret clc cmc sub or fnsave sarl aaa push pusha sbb mov push pusha pop insl sub jne add std mov cmp adc mov lcall jb mov xchg loopne push jg or mov or push dec outsl repnz pop rcll inc flds loopne inc std pop mov lds repnz add xchg xchg repnz pop sbb mov sbb cmpsb movsl stc mov pop and arpl cmp xor int xor in outsb insb adcl pop movsl in sbb xor push pop jo out lea dec movsb mulb sub in (bad) cmp xchg sahf les scas mov sbb outsl int3 cmp mov or adc sbb aad int jbe mov or or fisubl sbb sbb jp pop loop lret insb rcll aaa (bad) dec test movsl shrb xchg lcall jae sbb mov out pop bound hlt jge or mov and arpl (bad) mov (bad) in es xor cmp cwtl xlat (bad) fistpll rcll sbb movsl inc addr16 push adc pop inc popf xchg xlat push mov cmpsl ss rcrb data16 cwtl test mov test add arpl addr16 and sbb xor out lock jmp mov inc mov xchg leave push in inc jg xor clc pop xorl fstsw call pop push lods movb adc pop testb lods loopne add or mov in mov push mov leave cmp push lret cld lods xchg fiadd mov xchg push std inc cmp push sbb cmc and repz enter (bad) mov (bad) pop and (bad) roll xor and xor fwait mov in cwtl mov pusha xchg imul mov negl aam clc mov inc cmp fimul mov cli imul sub lcall cmp sbbl dec (bad) sbb jno cmpl pop paddusw addr16 mov and mov frstor mov loopne push add (bad) rclb loope xlat adc sahf adc mov or scas fisttpll add or iret addr16 fnstsw cltd fadd jle gs jl bound xchg cltd sti lret cmp shlb add loopne lods inc xor aad je fdivs cmp int3 (bad) scas push lcall out cmp insl pop sbb int3 push mov loope (bad) shr daa test mov adc lods adc mov mov pop (bad) movsb jb push aaa fwait rclb cld (bad) mov mov jg mov mov pop (bad) adc sbb cmp add dec addr16 adc mov push (bad) not in stc add add jb aam jb call push std movl bound clc out clc add pop stos adc cwtl or xorl repnz mov or and xor (bad) adc mov fnstenv std loopne jbe jecxz push add mov test sbb lods adc ds jp jbe jecxz inc adc pop les cs daa adc jle sub dec pop stc insl mov dec push inc aam lds js pop shlb inc aaa pusha adc pop pop mov inc into icebp pop jo or sub push push mov xor mov stos (bad) dec lds inc pushf xchg rcll sub mov add adc in push repz cmpl xchg xlat dec mov sti xchg popf test lret pop lods test loop (bad) call jno out sbb jge push (bad) xchg sub dec ficomp jns mov test cmp loopne sti test int xor adc loopne xchg and cmp push xchg cltd cmp xchg add mov pop addr16 pop int in popa fs push push bound fwait mov (bad) dec or pop imul xor push push aam (bad) jae pusha les xor test out clc movsl jmp push mov xchg adc popf mov sbb daa fwait adc call test movsb mov mov mov or jl push je,pn pushf push (bad) je mov push push lcall jo and cmp popf inc mov adc out roll adc adc es stos (bad) lock fiadd xchg leave jno adc rol stos lods inc push xor pop and clc into pop mov sbb insb push jbe jmp lock test call into into lods xchg mov fistpl ret imul jo negb pop or adc test (bad) int3 ja cli inc js push sarb xchg cli jmp in mov ljmp imul loope mov fmull mov loopne pushf sub bound jl push sahf lods sbb push inc inc cltd jl mov xchg in inc cmpsb jp mov cmp fs pop es fistpll pop push pop imul mov add xchg add dec and mov leave mov mov inc push pop add mov insb js insb ret mov dec (bad) nopl in mov fnstenv mov push out int3 daa fldenv lock add mov fisubr add inc je push mov andl inc jmp cmpl enter lea xor mov out jmp lcall inc mov lea sahf mov mov fist and hlt mov jae lds loop pop mov into aam jg push push sbb nop mov arpl jno mov dec mov ljmp stc pop pop ret xchg cli shr mov xchg adc mov scas rcrl lea sbb pop inc push sub mov push cmp xchg insb cs std pop cmc mov cmp xlat sub add daa xchg cmp xor push mov lods mov push mov into cmp arpl sub xchg xor out loopne jae fs sbb and and xchg loop ret mov cs push lahf inc daa in mov loope dec xor push (bad) lock pop inc test dec mov sub loop adc dec gs pop mov dec push sub push dec dec adc jne mov sahf xchg subl push nop and das in cmp (bad) cmp xchg cmp int xchg and and adc rcrb cs mov mov rorb arpl aam daa in inc sahf pushf mov data16 fsubs mov dec push mov mov lea dec repz lock jl sti stc sbb das xor fwait (bad) into das out sbb pop xorl (bad) jb adc adc (bad) js xor lea imul inc adc gs and dec ss sub popa dec mov std sub dec sar pop out adc sub push or sbbl (bad) jns cwtl push xchg adc (bad) test jo add lahf lea data16 pop lahf mov cmpsb xchg movb xlat lea xor je pop nop mov xchg rorb bound dec inc sub jmp scas popa ljmp add rol js lahf popf jbe inc mov test push jo adc dec push (bad) sbb int3 in pop xor push cs cmpsl sub cmpsl nop sbb inc inc mov scas sbb mov cld sub push push dec fisub movsb xor adc pop aas dec push push stc lods mov ret sbb pop (bad) jne xchg std jns loop push stos sub dec out in adc jmp jb movsb fcompl xchg lret lea mov sbb sbb lea lea push lea in or pop ret xchg daa scas leave mov sbb mov dec dec loop in dec push aas xor decl xor hlt pusha fdivr sbb lock xchg leave insb xchg hlt std stc cmpsb into aad push pop mov or loope in fcoml and mov movswl mov sub xor sahf popa dec sahf sub arpl sbb xchg stos js cld aaa shlb addr16 mov stos loop xchg imul add mov dec pop insl and lahf cmp and xchg scas pop sti cld rclb xchg test dec add or sbb and fdiv adc aas cmc mov adc cli pop push ficom cmp cwtl add and add jnp cmp cmpsb mov cli outsb mov push insl or dec fiaddl jle jb xchg inc leave push jge fcomps loopne sahf adc bnd ret push mov std cld (bad) mov mov icebp pop popa adc cmp mov mov ret pop insl and scas aaa add sub sbb jbe ret test adc rol outsb jb jbe test cmp mov mov jae ss pop stos call push push imul aas xchg gs dec gs cmp xlat push cld adc mov (bad) icebp push jl enter jno dec sbb pop (bad) mov mov pop sub (bad) lahf mov loop xor inc int sub jae jge mov sbb adc fdivr in jne cmp pop inc test lods bswap add insl adc stc inc pusha in push inc dec sub loop rdmsr repz test cwtl loope dec mov test mov sbb add mov div mov mov int imul adc adc jmp jle push lods mov and dec (bad) cli xor xchg cmp in jecxz lret pusha jg jmp xor decl jnp xor inc fnsave cmp dec and iret nop les push or imul cmp repz lcall lahf jg stos push jge inc sbb mov in (bad) outsl pushf outsb hlt adc mov mov cwtl call int or jmp mov in cltd stc jne push addr16 (bad) jmp push in add xchg and jno mov or sbb push sub arpl add test xor cmp and (bad) or mov lret pop xlat mov jp push inc jns xor mov push jbe lods lret test add sbb jo xor bound mov push insb stos (bad) mov call xchg out ror jne popf and lcall adc cltd inc sbb mov or ja push clc loopne xchg popf (bad) incl arpl mov mov inc dec sar mov testl iret sub xchg les xchg mov inc cmpsl popf or push test mov cmp outsl rorl or jno inc das jmp movb push or loop divb addb lret rep add sub inc int cmp fs ret push xchg dec adc es insl push add ds aaa mov js sub jmp ret jle jg notl not push push ret xor das cmp xor add lods cmp js push xor loop out jno jecxz push icebp rorl scas enter push inc cmp stos lret cld jb add mov mov jb xor adc cltd sahf or sub outsl (bad) push jle cmp sbb adc out les mov jns mov fmull test leave mov out (bad) mov dec aaa pop aam xchg adc mov cmp cmpsl call add dec xor std rorl push movsb cmp loopne cli sbbl pop je mov cli or leave mov test xchg popa sahf dec jbe int3 jmp jns mov mov pushf lret daa or jecxz jl loop mov test or cmp (bad) fmull pop shlb loopne imul mov jae lahf sub jecxz sub into shrl rol mov mov lock ljmp mov out aam cmp cmp sti arpl sarb xchg fdivs dec mov dec mov ja dec inc sub scas lret imull jmp mov pop xchg lock aas ja cltd xor push adc lahf mov call sbb flds ss inc lret mov or and or (bad) mov and (bad) mov lea inc xchg sahf mov cmpsl inc cmpsl aad test mov add mov iret jb push push movsl out sahf adc iret mov test (bad) das sbb or pop mov arpl (bad) lock add pushf (bad) repnz jae cwtl sub xlat or mov sbb sbb pop pop lea push cmp jmp stos out fisubrl fwait dec hlt (bad) das mov cli les outsl or sub cld adc jmp xchg sbb fist or call mov jnp mov ja out inc in push mov shrl cwtl adc pop dec dec mov sbb push jmp pop inc outsl ljmp mov pop sub int cwtl test enter xor xor test mov inc (bad) dec ja sahf loope test or lret push fcoml jo jno cmp scas loope jae adc push stc mov (bad) push cmp pop lods pop stos and cwtl mov xor add movsb cld arpl outsl js push push xchg push push femms pop push or loop lret pop popf push adc shll or sbbb mov and lcall iret in mov xchg sti gs in ds (bad) fs push pushf aas cmp ds or sub stos ret dec lahf jl sti xorl mov jl jns push (bad) xchg ds cmp dec push rorb jge pop mov std mov mov out sbb pop xchg sub or lds adc cmc or jb adc and inc addb sbb cmc push cltd test xor testb ljmp lods add in cld dec roll adc int3 std dec sub jmp call in les lods jge sbb hlt repz push ss inc inc sar sub jae jnp push fisubl mov inc mov cmp shrl out mov jae imul scas adc pop (bad) jns mov leave dec insl lods mov movsb xchg (bad) pop lret outsb out push pop (bad) lods lods jo adc xchg mov or rclb jae das test cmp aam cli push cmp xchg rol idivb les inc pop sbb xor mov out dec inc add inc movsl (bad) fwait inc xchg in call sub xchg xchg push repz aam mov aaa loope arpl sbb imul mov add xor sbb mov outsl ret in push jns test test add aas xchg in jp (bad) adc mov das push shr (bad) loopne jg les mov pop lret or xor mov js sub jl ret popa jmp orl in data16 xchg and cmp loop test push shrb or sahf rcrl xor stos ret jne sub sub fiadd or addr16 lds cmpsl jo mov (bad) mov mov sbb je mov pop xor adc or outsl les cmc xor mov fucomip inc pop shll add pusha dec xor loopne mov sbb cli push icebp out mov sbb stos inc lock lret cli aad mov into inc push xchg add (bad) ljmp pusha ss xor neg or fsubrs (bad) gs mov push or rcl pushf cmp xor fnstenv mov add mov cmp inc inc stos addr16 test push push jnp jo inc icebp cltd decl ds adc push aad or ja pop int xchg fstpl js (bad) int hlt insl popf out sbb cmc jno lods lods jecxz push xchg js xchg mov ljmp dec nop and ret aaa addb and adc push lret xor aam stc push lcall pop xorl xor idivl ret leave pop jnp xlat (bad) aad pop pop or scas movsb cmp dec test lods jl lock stc lods pop mov cmp adc test ret push mov cmp jmp into pop nop loope out movsl jbe jp xchg lods sahf clc mov mov in sti int in fcmovne scas xor push xchg sbb lods dec int ret mov jmp pop ja sbb add push pop jb (bad) cmp or in fnstcw sub push mov insb sbb into (bad) dec mov mov (bad) lods mov hlt push pop xchg lds xchg ds cli cli shrl test inc test cmc fnstcw pusha shl addr16 xchg push inc cmp aam loop mov and into (bad) cmc mov pop fdivl push stos or hlt mov pop inc jle and jg mov cmp sub aaa add xchg enter push mov xchg add movsl cld fcoms daa xchg or xchg jns xor mov push sbb stos and add out scas xor lcall lret lea iret and adc mov pop inc sbb fisubrl pusha es rorl lock push sub push int3 in add mov and sbb add popf adc out adc pushf sub push (bad) loopne and (bad) test (bad) jbe popf fistpll sub out stos data16 adc xor je and imul nop inc clc cmp pop pop mov (bad) push stos cmc mov (bad) pop iret sbb cmp jl mov (bad) int (bad) mov pop and leave cmpsb popa or push push in cmp cwtl inc pmuludq or and int add iret mov mov mov mov ja fistpl sar shrb lods (bad) mov cs popa movsb sub pop cmp pop mov xchg fcomps test imul scas sub pop pop jecxz pop mov out test mov dec cmp xlat push jle mov push mov sub mov ret pushf pop movsb and cmp and push out pop test mov insl xchg xchg inc in jmp fs mov push adc push xor xor push roll push movsb mov sahf add fdivl aam add mov push daa ret sbb lods test scas mov adc out lock divl xchg mov dec and mov inc in arpl mov inc movq push jb (bad) pop jg pop outsl mov pop and scas test ror inc je and arpl out js movsl mov subl cmp sti sbb mov fwait sub iret jl dec sbb pop push mov mov lret aad fidivrl test adc test inc data16 outsl push push std mov mov push adc and popf imul iret or outsb or jbe (bad) fldl ret dec lret mov push dec sbb (bad) mov push mov sbb scas (bad) push xchg lods jb jl sub lds mov pop sub scas push leave jo ljmp jge or push je js ret je repnz ret icebp adc loop mov jb stos mov jb loope jb inc iret shl mov aaa dec movsb cmp in fstpt push mov imul sub loop int3 add add and stos pop jae cwtl cmp jo dec (bad) popa aaa xor mov (bad) push cld pushf push or or clc push outsb faddp add rcrl int3 xor xchg in enter (bad) in sbb adc add aad fldl pop jle pop cmp mov rolb icebp and cmp mov iret out ss negb in movsb cmp dec mov fisubrl push sub std nop jmp sbb insl push (bad) iret fistp xor bound xchg mov and nop test xchg jb pop movsl xchg mov inc js cmovo ret dec and adc (bad) push and orl cmp (bad) jno add push xchg xor iret xor push fstpl sbb fnstsw mov dec (bad) cmp or push mov ja (bad) cmc sub sbb jb inc jle fwait sub psraw dec xchg mov xor pusha sahf push gs rol sti push mov aam movsb lret dec shll xor push and dec mov shr push out xchg out sbb jae cld loop (bad) pop iret push inc (bad) mov int push mov cmp mov hlt insl loop mov dec loop loopne pop and cmpsl fistl cld dec jge mov je and mov insb scas sub repnz lods adc xchg in cmpsb adc xchg pop sub ds push je jno (bad) js in xchg cli push movsl pop aam test stc pop cmp stos or add imul test sbb push out ss jo imul xlat rep sbb rcrb sahf (bad) sti aad movsl mov adc push fisttpl adc es int mov inc stos (bad) jl cmp mov mov cmp cmp les gs jmp and repz sbb adc inc inc out mov xchg fnstsw popa std inc mov mov push lret aas movsb xlat push cmp push jbe inc push out dec push add inc shll outsl fisubr mov xchg movsb andb xchg mov dec and mov xchg xor stos bound xchg repz cmp pop ret ret popf push add add and push add xchg lds rorb es add mov jo xchg push cmp (bad) push jns mov aaa ja sbb mov rol ficomp adc ljmp mov leave sbb jge push int3 push sub jmp jl repz mov cld push push lcall cmp pop pop mov cmp inc dec mov iret lods xor cmp pop test mov jae fimul cmpsb dec dec dec daa cmpsb push scas repz xor enter sub loopne jae lahf outsb push dec jecxz mov (bad) pop aas lcall pushl mov push mov push push cmp pop sbb sbb (bad) or pop add adc inc fs and ja fstl pop mov jge shlb inc in pop xor cmp push sbb addl or sar addr16 add (bad) jnp jae icebp test (bad) shll pop pop lret mov faddl mov test mov shrl stos xor cmp ss movsl imul (bad) repz dec rol add dec add xchg push xchg add pop pop lds push arpl pop mov sbb (bad) xor push mov add pop hlt xor mov mov mov adc enter xchg inc xchg mov mov xchg push je dec lahf dec mov mov jp pusha (bad) xor loop out xchg push std sub lcall fisttpll push imul cs jp subb (bad) jge mov push out jne ss (bad) xchg pop sub pop adc idiv xor sbb push jno ret add fwait lea cwtl cmp dec call jmp xor jle repnz lds mov xchg xlat das add adc push xchg ss mov mov pusha insl aad mov test decl push fidivrl sbb jg xor mov add sbb stos cwtl and bound cmpsb in push mov mov sub push adc cmp inc inc adc mov sub sub sbb fnsave adc sub and mov jmp in dec cs sub mov fs and test repz add inc xchg imul rcrb dec xor dec or js push aaa ss addr16 test add outsl in or scas sub dec test iret mov std mov xor sbb jmp lods jae daa fldenv mov mov push xchg xor sbb add inc and cli inc out mov xor int ja enter or jae hlt aas imulb xor jl test fnstenv sbb dec mov or pusha mov xchg in iret xchg lret jp addr16 xor movsl test push test xchg inc mov js sub xor jp test sti pop sbb scas push icebp mov add icebp imul jns clc mov or push sub shr (bad) lock inc addl mov adc xorb xchg xchg mov hlt jp aas jo xchg jl jl mov rcl pop fcoml inc jns dec or cmp icebp je out ja dec xchg and ja mov mov xchg mov out mov loop out inc decb mov xchg ret mov das arpl and movsl and addl addr16 inc (bad) out scas and cmp das fnstsw xor sub mov mov jecxz push push in mov cmp das cld mov push or fistp mov enter pop lahf push lods xchg movl test mov lods insl ficomp add xor fmuls add pop mov xchg repz cmpsl loope sub jle ds lds rclb jmp push lcall adc push fcom xor addl leave popa push addl imul (bad) jae mov inc clc sub adc and xchg push movsl inc push loop fldt push (bad) lds cmp (bad) pop sbb pop pop das jle scas mov mov mov pop cmp imul sti mov sbb shrb xor push jne xchg ss jne pop add lahf or (bad) xor xchg sub mov and mov test orb add lret mov push test sbbl cwtl (bad) jae and (bad) mov xchg jno test sbb xchg mov add push fstpt lods dec pop fcmove incb call andb adc add xor sbb xor packsswb add sbb mov mov dec jmp mov sub adc mov jecxz xchg fwait lfs gs sbb fild jno daa arpl xor out mov adc jmp xchg inc inc in (bad) rclb jns repnz pop mov mov jne popf (bad) aaa inc shrl lahf adc leave loope call outsb mov iret cmp sbb pop out push sbbb cwtl jge inc lock cwtl inc hlt sub scas bound mov call mov and daa or addr16 jnp dec repnz out xor push rolb ds push (bad) cmc dec mulb aam push push pop mov cmp aas mov adc inc fs les data16 jno cs pop je icebp das stc mov add js aaa sti jo test and add ror inc aaa shr mov cmp (bad) sar and mov adc mov sbb xchg mov imull insb leave movsl fwait aas (bad) or enter cmp outsb fdivs mov sub call notb test xchg dec mov mov or nop into xchg icebp lods int3 push mov hlt pop addr16 clc insl push (bad) rcll ror add xchg loop repnz xchg jecxz and inc lock push push pop jae jg iret imul dec mov mov and jbe sbb sbb xor mov in jbe js adc ja (bad) pop lods stc outsb lods mov mov mov mov sub cld xchg push lcall daa xchg (bad) in stos cmp pop dec push cli (bad) jmp mov xchg lahf aas mov xor mov mov jnp xor loop or arpl mov pop aas sbb ja pop aam in cmpl adc (bad) mov push mov loope aad movsl or push mov rorl dec (bad) lcall jmp push bnd nop mov and (bad) rorb incb cmp (bad) in push add jbe jne inc nop fcomp jno ret das loope cld push add dec and mov pop adc cs fldenv les or push inc movsb or clc and gs mov or jg pop or pop loopne popl fs cmpsl lret mov and xchg xlat es imulb mov xchg lds fyl2xp1 ret mov inc push mov mov les mov mov lds (bad) inc sbb adc lret mov xchg adc mov adc push pop ret xchg dec (bad) push (bad) cmpsl xor sbb ljmp cmp pop pop test pminsw imul shl push lret out mov mov pop jl test ds mov fsubr js xchg sbb notl daa vcvtpd2dq pusha push outsl in mov rcl add push ja inc fdivrs in jg jne enter idivl sbb dec aam je jne lods push hlt push sub scas ss fild bound in fildl loopne xchg add ret sub ja mov pusha jns jnp push mov shlb sub add cmp scas mov inc push cmpsl stos (bad) xchg pop aaa inc (bad) mov and xchg imul push dec mov sbb les pop fidiv push sub inc dec push xchg mov inc pop mov (bad) movsl mov xchg movsb and pop sarl cwtl mov out inc xchg adc dec sub xchg dec mov jmp push push bound or sbb jp lahf es (bad) xor cmp cmc or mov cwtl add addl call out movsl lea lahf sti mov lea stc (bad) push movsb dec outsb jecxz push cld mov rorb lods rcrb js lret out inc xor mov cmp mov rorl push mov mov xchg or dec and lds ret ds repz or jp pop ret mov lret dec pop pop add xor xor sbb or push mov or int3 mov push shr mov out inc add and mov cmpl hlt icebp fmulp push lcall arpl je enter push jb mov sbb fmull cmp mov fcmovu jbe (bad) sub call rorb cmp pop mov sbb (bad) fcoml or push pop pusha jnp xor pop test push ljmp out cmp xlat nop mov data16 sub jle imul jae xchg test adc stc fdivr xchg pusha dec and mov fmuls jne jp cs xchg movsb mov cmp mov les test mov xchg inc in jmp outsl cmp push inc (bad) test mov loopne or pushf (bad) ficompl xchg scas inc jne movsl jle bound fs xlat (bad) xor pushl add pop ret (bad) mov xchg jne dec test loope jnp rcll add jl jo xor clc fwait lahf push (bad) sub nop push (bad) scas jnp xchg xchg clc repnz mov arpl arpl cli pop jnp stc jnp sub xor mov sub outsb adc sub pop mov ret call push push mov inc sub fstps in pop (bad) push mov data16 mov xchg pop pushl out mov outsb cwtl clc jge mov xchg shrl test bound jge pop or ret bound jp enter xchg or push bound or pop jne add ljmp push ljmp (bad) jno mov xchg adc xor mov aad in inc xor insb (bad) sub pop loop shlb out (bad) imul sti ds int push push or mov mov sub push out cmp mov pop jle sbb mov rorl cs push mov lret (bad) cmp out sti cmp lds cmp cmpsb sbb (bad) lret jl fstl mov adc xchg mov pop loopne jge cmp adc inc (bad) lds pop mov push and cmpps fsub add (bad) lret dec jl stos pop pushf imul pop mov data16 (bad) iret mov cmp or cmp daa (bad) sbb inc cmpsl ret push mov shl jae cmp sahf sub adc adc xor jl movsl inc sbb in sbb mov or test push or icebp pop out repz sub push inc xchg mov outsl jae xchg sbb fsubr inc movsb pop faddl out fistl inc mov sbb outsl pop push sbb ret xlat insb cmp dec ret xor or lret mov or cmc imul sub (bad) pop mov loop add inc mov xchg out imul enter lods adc pushf inc lret mov jno fstpl add jns es mov cli ds pop mov sahf int3 fs jno mov hlt xchg mov call icebp rorl and out scas adcl mov mov idiv mov inc jmp or icebp sarl test stc inc pushf gs (bad) dec xor inc dec add push push std stos shl pop xor fbld stos dec mov inc mov adc pop or aaa ret loopne lahf jne seta rolb out sbbb mov inc in movsl sbb mov and sbb addr16 repz add (bad) push push push pop mov dec icebp xchg cli fcoms inc mov mov mov push inc pop or and dec push loopne lea mov ss or mov (bad) adc jne push xlat mov out outsl push or xchg xchg lds push mov adc rol sub cli xchg cmp aaa cmp jecxz int3 mov mov lds dec pushl (bad) mov sbb lds jmp adc decl clc xchg adc xor loopne or cmp add gs inc inc in (bad) ljmp jge dec fcmovb mov mov add mov in pop movsb test lret xchg (bad) sbb sarl pop pop xor inc movsl movsb inc cmpsl sahf ljmp xor (bad) xor imul aas mov imul inc scas push xor xor mov clc imul jno (bad) dec jno ljmp insl stos inc (bad) mov pushf adc fisttpll pop inc divb rolb stc jmp sbb addl inc jp cli sbb push mov cli pop in repz push (bad) cmp xchg xchg push sub pop mov xor imul cmp (bad) lret addl cmpsb lahf push stos mov rorb sub push inc push jmp push out fwait sbb test decb or mov sub jecxz mov push daa jnp cmp cli inc stos into jmp add lods mov pop loopne lcall push scas test mov sub testl cmc (bad) fsubrp xor int pop gs (bad) and (bad) and insb aam orl repnz in jb adc or cmpsl les aad sub call mov add test ret leave mov stc nop pop inc jno ds fsubrp pop mov stc loop add cmp imul fisttpll leave adc dec push mov push loop jg inc sbb insl sub xor add into mov sub mov in lret xchg cmp push mov push dec es mov or mov loopne insb scas movsl xchg idivl jns pop mov xor and out adc cmc hlt clc dec lock push test movsb rolb jnp lcall in ds in xchg fcmovnu je lret jnp xor inc pop in push ljmp (bad) mov sub jnp (bad) mov adcl jns fmull dec iret aad insb pop je fsubr push scas sbb xor mov inc mov mov int3 mov pop in lcall jne adc pop add (bad) sub xor xor (bad) nop loopne mov clc sti mov cmpsb loopne push mul mov cmpsb dec (bad) mov popa adc adc jae cmpsl and push lret push sbb (bad) (bad) out cli dec mov aaa jl xchg aas decl out or cld insl rcr jb pop pushf aas xchg add push cmpsl sar push insb xchg loop add aad and ret jg xor pop fbstp inc out fs arpl mov xchg out (bad) ss pop mov faddl (bad) outsl dec sbb adc adc movsb xor mov mov or or aam fcoms inc push movsb inc jp mov or or rorl xor into xlat and or and lret mov xor data16 popa adc (bad) enter or sub scas mov mov add mov adc mov push test mov add sub mov or cmp data16 repnz dec cli clc push jge aam xchg cmp insb cmp push lods jmp mov jmp cli mov jle and dec ljmp test test test mov ret sti sarl out xor dec rolb insb mov les inc or sub ja sub iret sbb xor cs sahf inc rorb mov jle fwait xchg mov fs scas popf cmp xor jmp sub xchg add sbb mov leave cmp sbb shl sub inc in pop std push test loope sbb xchg outsl out ds or mov shlb nop popf add loop sbb das std das ds mov test fstpt out dec or (bad) lock out cld pushl fbstp xchg or arpl inc xchg jge fstpl shlb push and push outsb pop test dec jb mov jg sbb mov cmp cmpsb test sbb mov sbb adc test aam jae or popf mov repz insl xchg pop xor ljmp mov jno inc mov dec push notl mov or mov pop fcmovbe pop and xor (bad) js mov test movsb test iret sbb push enter subl sti aam int insb test add mov xor pop lock das pop dec xor sub adc pop je insl ds xchg (bad) cmp jecxz inc mov out cmc cwtl xchg cld cli stc cmp ds jno xlat out shrb ret adc jmp (bad) xchg xorl sti loopne pusha fnstenv jb pop xchg push inc popa inc lret sbb movl sub add mov imul push lret scas out ss add cmp xchg add push mov daa xchg data16 in into pop jbe out stos xor scas jp je xor addr16 add cmp es gs jne out movsb sbb icebp hlt inc cmc jb xor push aam pop push inc popf mov in push mov lcall pop push pusha xchg loop outsb imul ja je dec in lahf mov sub dec mov test dec mov cmpsl and aam inc push or cmp sahf popa sbb add shll int sbb mov cmp inc push mov pop ss ret scas jne cltd ret (bad) pop mov out into lret cltd sub test add mull out pusha mov iret lock in pop out jo jl push cmp mov sbb xor pop mov cltd inc xchg leave fist in insb aad je (bad) inc sub call pop lret pop mov icebp mov (bad) enter (bad) lea andl jbe je inc stos gs xor jmp xchg mov outsl mov imul cmpsb std (bad) jge sbb and (bad) repz in loop mov push shr dec push arpl sbb sub call (bad) in ljmp movsb push dec xchg mov mov loop stos sbb lret and mov incb cmpl xorps lret sub mov repz cmp fidivr es inc cmpsl stos xor out imul out fmull jecxz retw out mov (bad) loope mov out lret jno mov das lret adc and fimull xor shll mov add imul leave adc jmp lcall jne xchg xchg dec pop mov addl adc es lret dec jecxz add cmp sahf ja mov scas jbe iret popl mov mov jmp xor dec cmpsb lahf push push ss (bad) add push sub in movl mov inc xor paddb sahf imul sbb xchg cmpsb mov (bad) fnsave fcmovb lock fs imul xchg jne sub add divl dec jle dec jle ljmp (bad) lahf cmc nop mov jb das int3 sahf std jb js mov sbb aas xchg push fisttpll push add xchg inc push fstpt mov mov (bad) ds push jne cmpsb ljmp inc jne pop pusha roll lret adc movsb cmp out sti mov aam dec jecxz mov cmc dec rolb idiv mov pop push notb jmp test js cli add loope push mov pop imul fdivl arpl adc push mov pop out mov inc es cmovbe mov loopne leave dec sub push add imul dec pop mov or dec adc pop jne sarb jp dec inc mov gs xchg pop sahf cmpsb mov cli cpuid enter cs test dec loopne test jle daa sub in ja add out sub inc mov lods mov leave or shl std and es ljmp fmull mov mov mov jbe imulb fcoms lahf (bad) fwait gs xchg mov mov jns test fnstenv cwtl pop inc push dec push rorb dec push cmpsb mov mov notl inc adc mov pop push mov jae roll stos or xlat rcll rorl popf je or sub xor xor mov stos sahf jle add dec inc imul mov pop adc loopne jle test hlt and iret loop stos xchg mov jbe lcall xchg adc cmp and movsb fsqrt add lret pop les and sbb mov adc dec inc imul inc sub out call scas jns pop sbb inc sub movsb push or xor jo jne aad int lcall sti jne mov decb adc out fdivs dec (bad) repnz ret or jmp push call and add mov adc loop sub ss bnd pop jne cs pop aad stos cmp and push jae add inc sub lea sub push xchg test aaa push mov push ss xchg or out mov xchg adc rolb inc push testl in fistpll (bad) mov lret and xor scas lahf xor aaa aaa sarb cltd fisubr in loop pop sub pop repz loop orl mov hlt xor scas cmpsb (bad) mov notl adc inc in (bad) add mov and or lods int3 xchg pop dec mov sub dec adc test adc dec pushf (bad) mov xor xor cli addl sti xchg jp daa ret cli testb xor mov mov (bad) cmp jnp test bound inc pop movsl imul add mov and sti test lock mov je std jmp sbb ffree or jge pop and jl xchg push dec and (bad) mov mov (bad) cmp mov hlt or imul dec clc fwait in pop cs fildl mov andnps push jns test es inc dec push sub sbb adc loope xor shl outsl pmulhuw je sbb lret test cmp fxam sub push imull xorb ds enter push scas sub xchg orl inc add mov inc dec mov fldl xchg nop int ja cs (bad) outsb or xchg in loope mov in cmp jns jge lahf das pushf es dec popa into xor mov cmpsl xor enter addl negl ret stos (bad) cmp fstpt push mov mov mov orb adc das mov cmpsl jns and push call shl jbe adc shrb cmp cltd sbbl es mov pop cmc (bad) fcomip ljmp cmp roll jp lcall push insl jb or stc dec int xchg cmp int dec test mov out test pop and push or fcompl pop xchg inc or jno jnp jmp popa inc jo adc cmpsb and mov int repz insb xchg loop stc adc test sbb cltd cmpsb daa daa pop scas loopne insb xor fcmovnb push add ror sub pop push inc addr16 push ljmp int xchg bnd xchg sub (bad) inc test testl dec pop in cltd or or dec lea scas out xor (bad) cmp (bad) bound xchg mov jmp jl in inc xchg dec sbb jmp insb pop aad mov scas xchg in sbb (bad) pusha adc bound inc imul testl inc push rol push mov sahf repnz daa or cmp jbe cmp push mov rcll jmp (bad) mov fstpl shl cmp lea lret aas jl inc push pushf adc inc xor daa sub pop pop xor imul aad fldt xchg rorl in inc jp cli stos scas aam mov (bad) add subl push jns mov cmp mov dec jp dec out popf arpl add pop aad scas cltd push sbb (bad) jbe adc push dec mov inc aas addr16 aaa insl add adc cmp jno mov leave cmp add dec or fcmovnbe test mov out inc fcomps or mov in add outsl mov movsl mov pop out jno push xchg xor pusha dec and sarb sub test addr16 pop sti jbe leave inc movsb cmp in cmp push and loop ss mov rcrb les gs es mov sub test jg std sbb mov mov pop es into hlt push (bad) dec pop jcxz leave ja iret jle andb xchg shll sub in mov imul mov sub fs cmp cmc xchg mov das popa sar inc aad das mov push dec in mov cmpsb out mov jne test xchg imul mov aaa fldt jo addr16 sbb je add mov inc jl (bad) imul fwait push push or dec fmull daa xor xchg or in mov dec adc loop inc outsl cmc std idivl push mov imul mov cs sti in in es mov sbb aaa popl dec lcall std into lds ja push xchg shrl ds pop fwait aas cwtl mov or outsb xchg cmpsb mov fcmovnu (bad) add lods sbb push ja pop imul cli sub lret cld mov test adc imul pop push jle fwait leave adc pop sub in scas sbb cmp jecxz (bad) lret push and in xchg lods (bad) pop sub lret push mulb sub xor sbbl out inc clc dec or ss fstpl js cmp shrb jb icebp mov (bad) mov push fs bound pop push movsl push iret (bad) popf xchg ret outsl addb sbb popa mov push (bad) mov push ja and movsb xlat ficoml ret add jae out jl mov add dec xchg stos addr16 mov push or pop fsts mov aam clc pop dec adc cmp imul push (bad) lods xchg adc das and loop jae sbb mov pop dec roll dec pandn fldt xchg movsb mov sub (bad) ficomp mov ds push mov loopne es xor rcrb inc mov pop mov xor dec insl mov xchg fwait sahf jne popf push cmpl rolb or push nop mov or test clc mov fdivl xchg xchg std sbb test cli adc in dec nop pop (bad) icebp mov sub mov add mov inc out lahf (bad) aas clc in je adc test xchg mov lret insl xchg sub lcall ds les inc pop jl (bad) out jb jmp mov js push mov xchg sbb iret cmc inc outsl mov mov jb cmpsl test (bad) push mov cmp dec dec mov daa test dec mov and repz cli pop xchg sahf mov xchg sarb cs fnstcw ljmp jo jo mov ds xchg mov push movsl cmp mov sub movsb xor dec mov push or jnp xchg add cld add or jp (bad) xor or out mov outsl mov mov leave push roll lods and push mov cmp gs mov add gs jmp sub inc dec push ljmp cld lea and add jle fdivr push lock add xchg icebp cltd push push sbb jb (bad) ljmp add idiv xchg push (bad) ss je int3 (bad) xchg pushf push fadds xchg ja aam icebp inc xchg (bad) sbb cmpsb (bad) test call (bad) mov and or mov jp sub orl ret jns pop aas test fs or mov push xor push out push or test and loopne dec nop test mov js xor xchg or (bad) (bad) cmc inc jp dec (bad) lds push (bad) aas cmp cmp clc mov push xor adc int3 xlat into push sbb int mov lods adc xchg add mov and xlat mov dec xorl pop add mov xor dec dec repnz addr16 jae xor sahf fstl jae sbb rdtsc fwait mov mov popa cmp or sbb mov push jb icebp dec jnp cltd sbb jns push mov jb stos mov xlat jb jb dec jge hlt jnp fisubl js repz bound cld mul jns mov ja push call mov out pop nop insl sbb xchg inc cmc bound mov or cld push add loope mov test outsl iret push and mov xchg pop enter push (bad) icebp fcmovnu sub xchg xor push mov addr16 cmp xor jnp adc js jle cmp imul xlat and (bad) push inc (bad) test push in add add xor pop fsubs mov push jp movsl adc adc mov les repnz jo bound cmpsb jne mov inc movsb cli ja fsave mov xor jnp test out pop mov cmp not xor imul (bad) xor (bad) mov jge xchg out das ret mov jecxz cmp pushf enter mov sarb les mov or dec lret or mov xchg push into sub iret nop into inc jg adc xor cltd loop iret aas imul sbb and push push push jb leave xchg dec dec call sti pop cmp xchg jnp movsl and mov mov pusha sbb push adc xlat std cltd aas push (bad) or xchg roll in (bad) gs mov inc test pusha mov mov out repnz into push orl mov shrb mov mov cwtl mov cmp adc movsl jo jge (bad) imul popf xor jl int mov adc push insb push out jmp sbb jge shrb pop adc sub pushf mov pop (bad) jb lock daa loopne mov in popf insb sahf sar aaa rol jae sbb insb jbe icebp daa fiaddl daa arpl popl jge clc pop imulb xor sub jmp fistl inc lock pop incl push xor dec cld mov lock fidiv mov jb loope adc xchg das dec out xchg jg (bad) inc outsb xchg jg mov mov or jmp ja mov inc xchg inc mov dec scas push lahf adc mov sub add fcompl out (bad) mov add mulb cmp rcr mov xor lods int int mov loop (bad) xchg inc cmp push fisttpll inc sbb xchg add in stos lock test dec inc inc rcrb mov scas mov call and dec and mov xchg pop icebp inc xchg adc push dec push sub stos pop inc push rclb leave repz jp cmc scas push mov shl je fwait enter loopne jmp stc rcr pop cmpsb loop loope inc push pop test dec nop push mov push sub cwtl shlb mov repnz in fsub inc inc test call hlt ret shrb ljmp add xchg iret lods jbe mov std xchg mov imul xchg jmp jl pop xlat pop shrb out mov out pushf call test jle aaa lcall fnstcw sahf push mov dec jno add repnz sahf cmp fwait rorl in lret call cmpsl lods in sbb jno js xor mov mov add lods dec out xor mov inc xchg mov sub daa sahf imul into (bad) dec icebp cmpl negb dec adc unpckhps (bad) out mov popa pop cmpsl mov iret pop lahf loopne enter sbb repnz dec add and or imul (bad) pop add jl and dec (bad) cmp adc lret gs fistl mov xor ret and mov pop dec mov daa addr16 (bad) (bad) cmovbe stos pop xor cmp icebp pop dec nop faddp lods aam jl inc jo inc repnz lods les cmp sbb mov daa sbb sub sbb sti neg sbb or das add push dec int3 in or cmc mov sub and arpl into lea pop les mov ret lea (bad) sub push inc lahf fisttpl sub mov fdiv negl leave les (bad) pop loop or dec fldcw mov push stos and push sub pushf fnstsw mov aaa jmp (bad) cmc jns xlat sbb lahf push mov jl fdivp ss mull adc loop stos aas fsubrs pushw jle fiaddl inc pop fcompl jnp add dec sbb test (bad) mov out and repnz daa inc outsb fcomps fidiv add push arpl repnz mov fistpll mov sti or dec ret sarl hlt sbb clc je stos dec (bad) sub jle (bad) and xor jmp mov test fidivrl mov or cmc jo out pop pop aaa divb mov or imul push stc push sahf jb insl inc add mov dec rcl xchg test pop cmpsb push pop rcl lcall jle ds jle push out and push pop and pusha jge (bad) cmp test out push cmpsb shlb push xorb xlat test cmpsl cld pop aas out in mov mov iret jge sbb mov sbb sub jae or add loop imul pop jle,pn cmpsl push imul movsl add add cmp ljmp lods add or push jecxz jg shrb aaa cld push jmp adc addr16 xchg ficompl mov sarl xor jmp add shrb jmp call xor rol ljmp jg (bad) xor cwtl in xchg ret lcall mov dec leave scas or pop ss stc jge scas (bad) push xchg push mov scas mov or gs in das test jmp into aaa push jns mov arpl decl xor (bad) lods add fs out or aam hlt sbb mov mov mov sahf jbe popf add enter inc and dec push xor popf in xor jbe adc fdiv cmpsb mov push icebp fiaddl sbb sub sbb or adcb and (bad) in bound jo int inc add lcall lds cmpl sub ficom mov fimull cmpsl dec rclb adc push add dec push cmp push sahf jae push sbb or adc lcall mov iret (bad) push cld (bad) (bad) out mov push in jae mov test (bad) cmp mov inc xchg mov lahf push push faddp pushf sbbl sbb add xchg pop mov push fldenv jno sub or mov cltd icebp mov push out adc dec mov jp push stos dec push stos js mov jp (bad) inc push outsb sbb mov or xor imul movsb adc adc rcrb xor mov mov adc imul (bad) fimull es or fsubs cmpb mov jg cmp leave jno jmp sbb cmp inc iret mov mov jbe (bad) pop adc icebp sbb shll pop lcall mov ds mov add jmp lods pop fbld cmp lea or push ljmp (bad) xor cld arpl mov jnp jmp fwait jns mov out or hlt icebp ja sbb ja adc pusha je jg in cmp mov inc sub xchg jbe mov add inc add loop cltd pushf pop insb and jno mov xor xor jmp in pop mov mov into sub cmpsb inc adc je sbbl repz fnstsw cld aas or cld add test lea test outsb mov xchg adc jns sub out popf mov aad xlat movsb xor repz inc xor push mov jae test arpl int3 test pushf push sbb stc jo icebp sbb addr16 ljmp cmpb push mov inc jg or mov and repnz sbb mov jle or aas mov andl aad fcomps ja js pop jo mov mov cmpsl and pushf xchg fdivrl sub xor daa inc or imul fs pop ljmp fisub pop cli scas adc shr pop adc push andl or aas or sbb popa jne adc xor mov out aas xchg insb push insl cwtl push sbb xchg adc and push mov cli cmp and out bound into and mov repz imul sar ss (bad) or xchg mov (bad) lock test lea loope or outsl and xchg pusha dec inc gs das ljmp mov hlt sub mov cmp imul (bad) pop cmp (bad) fldl jnp pop jae pop ljmp (bad) rcrl mov std cmpsb adc mov sbb cmp add mov and clc cld in dec push imul dec loopne push rclb lret cltd inc out sbb mov xchg notb (bad) aad push in mov aam addl rcrl xor aas popf fdivrs in lods jl fs jge int3 ficoml dec (bad) fnstcw scas mov pcmpeqb push pop je stos insb dec imul push nop pop or jl les push test iret jmp lock iret loop addr16 jne aad push fildll les push sub mov xor fmuls cmp xor jmp cmpsl in movsb add cltd jle xor mov lds test repnz cli sub mov enter pop jno push inc rcrb pop xor jle daa or mov daa outsb repnz loop dec jl mov imulb lret jb lods outsl mov sub fstp pop (bad) int cltd jbe ss push imul into clc imul sti dec cmpsl jp cmc jno pop stos repnz inc fsubs jl fsubr paddd lds xor mov mov push dec adc hlt addr16 and cld and inc mov pushf and clc jp rol mov dec pop push out xor push data16 jne subl daa xchg js add in insb fwait nop jg pop ljmp int3 imul pop fsubl cmp push push dec in and (bad) push mov pushl mov outsb xor xchg xor mov mov sbb sar pop addr16 das aad scas cmp scas mov mov movsb pop (bad) xlat lret pop ja sub dec push adc sbb fimull inc and jbe cli sbb call scas ljmp pop call sub mov push pop dec sahf mov and xchg in cmp ja sub ret push mull inc push imul xor or aad lcall (bad) pop jge loop inc adc xchg jae (bad) xchg js push cmp jp sbb push cmp push loop clc inc inc aas dec pop mov dec sarl adc pop mov adc and sti pop popf fscale jne lret dec loop dec and push mov xchg dec mov sub ljmp inc xchg jmp scas hlt insb gs inc adc push imul test mov inc aas in adc add sbb push mov lods insl mov popa mov out jecxz js fbld mov and das push or inc or push lock inc aam and cmpsl xor or jecxz inc mov popa push cmc repnz lods out fstpl mov jns cmp mov dec sub lods inc sbb xor sbb dec movsb and (bad) outsb scas test lock jmp lret xchg jb lret loope (bad) into pop lea mov mov pop mov jp (bad) dec aad loope push (bad) imul lret daa xchg rol cmp rcll lock in xlat cmc jmp js mov xor or rol in or repz mov jno cmc and (bad) scas xchg add sub and je icebp rclb xlat add mov outsl fild mov jb nop xor repz dec lea sti icebp pop lahf jp jnp outsl fcoms popa out sbb pushf aam subl pop stc (bad) mov nop dec add jb pusha stos mov inc jecxz jmp das and and (bad) sub lea (bad) pop sahf (bad) icebp inc sbb int mov jo mov aas leave fs add aas les ljmp aas fxam test outsb ror pop mov scas or mov xor and adc xchg mov (bad) xor hlt mov pop inc pop xor adc out ret jno lret and ljmp aam shl (bad) cmc adc mov jns sub mov test sub cmpsb pop push dec mov mov shl jbe cmp pushf mov ret cmpsl (bad) icebp sub dec fnsave cltd cmp mov popa push cwtl ja jecxz or test movsl push call adc scas mov test mov cmpb mov insb clc xchg mov push int3 addr16 inc cmp push sbb dec les les jno xchg insb rorl in sub push pop or test vmptrst shll ds lods pop rolb arpl mov iret and repnz fmuls jmp mov lock out push sbb es test lret fdivrp ret lahf mov (bad) mov pop push dec push arpl pop aas rcrb or mov sub in mov ljmp sbb iret sahf jne (bad) repz jne sbb inc or cli pop and in imul cmpsb pop cs cmpsl add loopne lods push cs cs in xchg clc jne add (bad) fst mov pop pop xorb inc xor shr push push std inc mov fimull jecxz adc out (bad) push pop repz mov mov loope imul repz jns insb in mov xchg or mov iret sti mov cmp (bad) push xchg xor dec bound xor dec idivl repnz out insl imul pop add ror jl out aaa mov mov shr jecxz jg jg xor js mov les pushf call (bad) and inc cltd dec dec loopne sub push inc pop sub jo fiaddl sbb data16 and jnp lret (bad) jns bound out dec mov daa mov mov les daa data16 movsb outsb cwtl iret pop int leave sub popf adc cmp gs push not inc jge cmp cli lock dec mov dec jae push sub mov jno mov adc out push or mov mov insl jmp ljmp sub push pop imul cmpsb int3 jg xlat sbb mov jp xchg or cmp mov and cmpsb aaa jge mov xor into out jg adc xchg and (bad) push fmull mov add xchg ja int lods (bad) xor arpl mov pop out loop fisubl pop cmpl push das cs test aam cmp push adc push jbe adc push (bad) js out push in adc cmpb fwait mov mov fsubrl cmp cmp rclb cmp or xor jns (bad) cmc jg popf adc xor sar mov stos add xchg mov pushf imul xchg add sub (bad) push das xchg dec xor adc ja insb jnp fisttp jmp in fistp cli pop rolb stc cmp scas dec fldenv sub inc or inc ja out (bad) jbe lock ret test push add out jns adc (bad) xor pushf test sarb add sbb mov stc (bad) outsb fidivrl loope,pn mov call jbe mov test gs mov jo push inc xchg aam or add jnp int3 loop imul sbb lds outsb aam lods add mov cmp rcll inc mov jo int sahf sbb fldt (bad) into (bad) mov idivl imul xor nop out dec (bad) cli dec fsubrs fild dec sahf jne aam sub outsb xchg add sbb ds inc fmuls repnz adc sbb xchg jmp popa inc sub pop pop lea mov in jg mov imul dec adc fs and jl inc pop pop inc pusha rcrl jp ljmp add fnstsw icebp mov stc icebp shlb (bad) xchg out lods incl out cmc push push lock shlb fs into arpl stc jns call sbb out (bad) scas mov jmp inc mov (bad) cltd lahf jecxz and adc mov subl xchg push xchg inc fisub leave add outsb mov ficom sbb cmp inc add fiadd out jb into stos mov dec addr16 jl mov xor and nop cmp cmpsb adc add loope in xchg inc in or movsl cs mov mov xchg pop mov sbb add push sbb orl xchg mov or add shr inc ret arpl dec cmp and sbb add (bad) hlt and sbb fimul mov fwait xor sub pop out jp mov cmpsb dec or in popf inc mov add mov fs jl mov subb and lock cld data16 (bad) cld loop jge cld cmp jl outsb mov add ret jmp bound cs cmpsl pop adc movsl xor xchg (bad) pop xchg xor int3 insb inc mov push fistpll jbe insl push bound sbb loopne lea arpl pop js out in ds xchg sub push xchg ljmp loopne fsubr aam xchg add data16 sbbl dec cld push jg xor (bad) sbb fimull mov scas imul (bad) pop lock add inc push mov (bad) loop xor dec enter xor (bad) test out push (bad) imulb dec sub test aaa ljmp sub lds add fstl push pop cmp mov test sbb (bad) jnp and xchg lds cmp mov cltd nop inc ja test or ds pop push int3 sti cmp es add jg ret jle jne xlat mov test sbb pop jp,pn mov (bad) jo cmpsl icebp cwtl cmp sbb push or pop xchg xchg aam push sahf sbb cmp fildll xchg sar cmp xor mov out push mov lcall and jge lea jae aaa pop cmp add ret mov imul test repz je jecxz lea outsb addr16 cmc (bad) movsl mov push ljmp mov call adc adc push ret out dec imul outsb push xchg xor stc testl xchg scas lret mov js and add cli aas movsb int inc addr16 dec dec jmp and mov xchg push je or pop ljmp mov loop push ret cmpsb ret stc pop ds test das xor repnz aad stc (bad) adc rclb negb outsl add mov dec cmp repnz roll jecxz fldt dec push pop test test enter inc mov pushf adc loopne push cmp loopne pop lahf arpl mov in ror lret fnstsw inc jnp mov cli pop or jns mov das cmpsl fs int3 hlt adc adc pop stos mov hlt mov mov adc mov jbe add add or or ror adcl jns or or mov jecxz push (bad) xchg jp dec dec jbe imul pop push ficoml mov cs leave jge adc pusha adc bnd jmp push jno inc ret cltd push stos push nop and movsl push mov mov sub mov cmp lret in fsts nop (bad) sbb ficoml mov sarl mov mov shrb push xchg dec (bad) nop push das jnp outsl (bad) push imul dec daa in mov sbb stos mov les stos sub lds lret stos mov aad mov lahf ret out add adc mov xchg enter out xor lods and ds add jnp mulb add (bad) mov lods add or test mov ja leave mov mov xchg pop jbe repz rclb jne ljmp jne mov xor pop daa and xlat mov pop jb jg sub data16 sbb out (bad) mov jns jmp sub or sbb xor inc sbb and test jbe inc sahf add arpl aaa test xchg insb (bad) jmp (bad) movsl mov xor jle mov xchg into adcl arpl rol iret out gs adc in test mov sub mov test jg xor mov mov mov mov xor xchg add ror xchg or aaa pop jnp xlat test cld jns adc arpl xor je sub and dec sarl (bad) int3 adc jp jle push or aas sbb mov pop mov das rorb inc aam push (bad) test add repnz (bad) dec xchg adc mov push xor adc mov pop loop aas call test mov (bad) xor mov lret scas dec cmc testb je out cmovns out push sbb int push or inc or add out mov fmulp xor aas imul jge scas xchg je mov es fucomip jno cld idivl test sub xorb (bad) jl call mov adc mov cmp xlat arpl push sbb imul mov push aaa int3 adc ss popf cmpsb and xchg sbb in push pop test adc cltd leave stc lock fwait sbb scas adc jge dec sti or xchg xor imul push inc sbb cmp and sbb (bad) lods daa (bad) popf mov cmpxchg and fcoms jge mov jp test mov cmp sub repnz xchg pop pop sub (bad) into mov cltd xor or mov mov xor ror pop and mov je test and pop mov mov scas mov clc xchg incb inc add int3 out add lahf cli dec fs shll xchg cwtl les es lods push push out dec movsl inc punpcklbw sti inc unpckhps mov fdivrl pop into test xor push mov dec fild ljmp or lret fnstcw lea sbb pop mov sub js mov (bad) sbb pop mov dec hlt rorb inc out push and popf mov mov fwait out mov fsubrl addr16 mov cs arpl popa popf inc fist xchg aaa push xchg aad (bad) test stos mov notl pusha mov fldcw cmp aas hlt sub jne imulb mov cmp popf push pop loop add pop sbbl gs xchg in pusha push call pop test or lock cmp cwtl int adc xchg cld inc push imul ret out fidiv xchg lds xor insl gs es notl arpl ret aaa pop push mov inc lret flds cmp xchg ret pop popf mov jns sub test rcr xchg loope mov sub stc or and mov adc out mov fmul pop cmp or or mov test sbb aam popf xor push or sbb (bad) sub cmp sti js rcrb add and pop pop mov sarb sbb imul mov xchg popa adc dec add addr16 xchg fcmovnbe or (bad) inc mov and movsb pusha (bad) pop push sbb jno fnstcw mov ds sbb and sub inc repz rep out dec or insb mov jecxz (bad) mov mov xchg ljmp mov jmp ret inc popf pop imul scas fnstsw scas and cwtl xor lea jle xchg mov lea stos fisubr xor cmp notb jne (bad) and (bad) mov mov sub inc add xorb in cmpsl out mov loop insl mov xchg movl and add push out in lea dec or jns iret lcall aas pop pop enter push aad andl jl into out sub pusha push pop inc xchg mov mov or lock cld push in mov (bad) xchg aam add es ss mov jl xor mov fwait lods lock and mov mov cwtl cmp inc mov sbb mov xchg dec lahf fs xchg mov inc push lds inc jmp int xchg or (bad) inc pop outsb xor mov sarl repnz and sub lea test movsl negb inc mov mov or xor xor rep xor fisubl xchg stos add test divl jg das out lock cmpsb xor nop dec movsl dec outsl fsubrs bound pop sbb in xchg pop stc adc daa mov fistpll push push push mov stos sub fidivr sahf and pop mov cs push mov cmp xchg dec daa test jp mov (bad) dec sbb mov adc and cmc xor cmpsl andl push xor dec fidiv adc outsl jne cs arpl cld xchg dec fidivrl add add test cmp test jmp (bad) je or adc ficom incl xor ljmp inc ret mov loope popa fldenv or push ljmp jp pop mov mov popa (bad) sarl stos cmp into repz movsb xor add das pop dec jecxz popf ljmp enter fnstenv (bad) fldcw sub ja mov add fimul nop mov ret dec inc xchg hlt arpl test icebp test loop bound inc scas movl std mov jmp mov xor cmpsb pop cltd xorl ret cltd adc daa fstps cmp mov std cmp out or je int leave je mov and cmp stos popa inc xchg xchg mov mov in push jecxz popa add data16 rolb jae orl (bad) lods insl mov cli add loop xchg pop out and sub je inc xor popf mov add (bad) loope decl and lea loope lea push jg sub (bad) cmp les cmc mov jbe or pop outsl (bad) out ja inc out push int3 mov lock inc sbb lret ljmp idivb cmp movb cmp divl fbstp or (bad) pop std out jge cwtl push scas jb pop cmp je nop dec or scas sarl decl push push jae leave call and hlt push icebp pop adc mov or out psrad cmp call or xlat xor ret push lret mov jmp adc mov mov add das int hlt and sbb xchg dec stos out pop (bad) loopne sarb xor push fisttpl aas imul inc mov out movsb fwait mov push push mov jns xor pusha sti lods push and jne mov loopne inc inc adc jns pushf mov mov jecxz sbb sbb sbb mov ss (bad) dec (bad) bnd mov sbb fnstenv jne push pop add (bad) mov adc xchg cmp xchg sub jmp pop call stos xor sbb push xchg push cmp outsb sub cld xor rcr cmpsb xchg lods pop adc cmc xchg nop mov mov imul lret daa shll int add out loope inc xlat add jl rorb sub test daa repz inc (bad) ret in lcall shr mov lret jns sub loopne pop jge lret push mov lret cmp iret jns rcll aaa lock (bad) jb test and mov in jge pop sub leave pop jp xlat fs and js fisubrl nop push pop movsl (bad) jbe adc jecxz jecxz scas mov aad jne ret into mov cmc cmpsb and push xchg pop or mov les or movsb jnp xchg popa dec les xor push push push mov jp pop sbbl outsb and mov adc lods xchg sub inc inc and fldt xchg insb daa (bad) mov out pop adc pusha pushf not jno push leave (bad) ret cmpsl adc sbb sarb lock xor or loopne xor aam mov push scas js cmp xchg xor cwtl xchg push aad sub call pop ds out lds shl inc cli dec mov fcmovbe arpl sub mov scas int3 or mov adc aam and adc out mov fcoms cli repnz pop jg mov adc inc and sub movsb and rep mov and mov and sub stos aam pop fcompl ret jmp cmp int push std mov out mov mov cmpsl pop cmp pop lahf out arpl into repnz fs (bad) jb ficomp fwait and push inc sbbl dec add adc ljmp sbb sti fisubrl push push ds sbb pop mov mov push sahf sub shl mov cwtl mov test pusha mov pop and mov xlat mov add mov sub add adc lret pop loope (bad) cmp and dec adc sbb daa adc pop dec sub (bad) cmp or enter cs out test sub into mov pusha pop xchg es stos pmulhuw xor mov sub add xchg cltd pusha and xchg repz imul sub icebp dec sub mov dec (bad) in addr16 sbbl (bad) repnz hlt fildl adc ds shrb hlt dec mov stc mov sahf andl das adc dec fwait fs gs xlat roll pop aam in jo lret dec mov into ds cld and imul or mov outsb xchg jne dec fcompl push stos in test add mov icebp (bad) jae les adc cmp jg mov fcoms int3 pop push push into pop or hlt jnp icebp and rcrl or jmp pop in stos adc sbb mov mov stos dec xchg ss jle and repnz adcl popf scas decb ja test jg pop out xchg xchg dec imul cmp xchg loopne jns mov inc lock xchg stc add sbb mov cmp xor inc push jne adc aaa inc mov push dec movsb jp idivl xor test adc pop sbb movsl xchg inc (bad) sbb data16 clc es sub inc int lret mov daa pop add and jo inc and in loope faddl cmc bound das adc jno mov jmp dec popf fimull inc in sbb pop sarb lea jns (bad) cli sbb imul add mov xor fild movsl (bad) jne sbb test cmp iret sar xchg jbe sbb adc xchg pop popa clc jne adc or push cmp std movsl push lods movsb dec stc xlat mov cmp into dec jl sbb sbb pop mov neg ds stc mov jecxz,pt pop leave pop stc push lods xchg mov in (bad) idivl dec xlat sub rcll ret mov cli in loopne call out push cltd adc adc cmp data16 aad movswl sbb cmp das lret mov inc pushf xchg jmp pop or xchg xchg outsb cwtl and loopne cmp pusha push and cmpsl mov push adc clc stos in or dec adc cltd cmp ja das lds stos xchg sti push fwait rolb adc ss mov jno cmc xchg push in fsubs nop mov gs add ret pushf adc aas into inc jle lods fscale adc inc aaa xchg ret and jmp push mov inc fldcw lock daa test jmp loop enter cmp enter lea sub lret lahf stos cmp pop jmp pushf cli hlt out icebp adc aam mov xor mov sub cmp sbb sbb pop jl jmp rolb jl mov sub jmp lret xlat fwait adc data16 stos and test xchg mov hlt push mull inc dec and les mov (bad) dec pop or sarl cli (bad) jae push sbb push dec les jmp push loope jmp push popa popl outsb cs pop add or insb test xlat add movsl and pusha dec fiadd mov inc add ds int pop xlat insb xchg sbb fs mov stos dec inc jle ret cltd and push les das movsb movl jne lock fdivl jmp scas pop shrl loopne scas (bad) push push xchg decl mov std sub push xchg pop hlt add cmp nop cmp xor sbb sahf scas repnz mov movsl call sbb cwtl and inc int3 fucomip jmp pop and or clc cmpsl mov cmp (bad) jbe jne daa lds mov pop dec xchg jmp mov xchg xor xchg sarl pushf rcrl cs ret cmc out and dec mov xchg cmp je imull ret repnz int3 negb scas or push test push cmp pop icebp xor repz inc or jge dec (bad) pop xor (bad) mov aaa push dec mov push data16 (bad) inc scas lds dec in pusha pop mov leave (bad) cmc in jg xor leave cmc je or or popa test fsts das mov into jecxz cwtl mov push inc sarb stc in sub push and in out lock add xchg or rorb jns jmp inc (bad) iret lods pop repz int les fwait subl xor xorl jle dec loope mov adc lret inc lcall out (bad) pusha cmpsb mov adc fdivr aad (bad) gs dec cld sub lcall movsb and mov push push test arpl add sarb sti pop inc aaa inc cwtl jno sbb adc jle mov xor ds into mov sbb rclb out (bad) mov shrb inc movzbl shlb in pop sbb jmp insl lahf cli les xchg loop,pt clc mov push je cmp mov jno mov cmp in (bad) (bad) incb jp scas aad pop push fldt push lret js adc and shl pop adc mov les leave push out andl pop mov fwait fwait inc loopne sahf in push xchg int cmc aam fcompl add mov in ret mov movsl jns jb mov insl xor jg pop jp dec in fcomps sub mov fistpll test xchg (bad) pop jecxz and cmp je mov pop rorl sbb sub pop repnz adc xor (bad) inc inc int jb,pn leave or xchg pop das sbb push pop cmp test add pop jno loopne ret and xor sub push or loopne xchg mov push xchg flds xor adc and jl adc sub add dec (bad) xor jecxz cmp int3 pop adc inc push dec int addr16 add in movsl jnp mov imul dec cwtl rolb sbb jle testl cmp jno in andb mov (bad) je jne andl cmp pop mov xchg jg sub cld sub dec pop insl mov sub fcmovnb (bad) lret dec mov outsl ret lock sbb xchg mov divb out popa addr16 out repz arpl aas inc popf and mov jae add int shll aad icebp adc xchg mov and xor xor sub and lret fcmovne cmc pop mov mov mov stc adc cmp (bad) std jmp pop (bad) rclb pop orl or repz shll mov xchg mov add (bad) or and into lea push shlb jge dec dec ja orl push js iret fistpll scas push aam aad and add push (bad) popf loop jae pop add mov fnstsw add imul pop leave outsl add xor mov xchg jmp cmp in mov or (bad) repz dec sahf (bad) out hlt ret stc push push loope je fimul popw mov mov jmp std cld loope xchg pusha add ret mov add jnp cmpsl out cmpsb sbb lahf add cs fmull ficompl loope cli out inc push jp dec pusha inc in ja cltd das jge cld negl mov (bad) mov push adc scas cmp jne inc jl jb fmuls test aam push popa fwait shrb lea movsb outsl sbb inc insl xor fs cmpl xchg roll push in add jae adc push jns sub fsubr inc out pop add mov es add (bad) imul stos nop or repz pop push push jmp inc xchg addl repnz cwtl or sbb xor cmpsl mov hlt inc or into das aad or les int3 sub sbb cmpsb ds pushf xchg outsl jl std mov mov dec lods mov out pop test sub imulb add and aas dec lods scas jno pop call lods inc dec scas or and dec push adc push int aas xchg push jl mov or dec cmp xchg cmpl lock push lea cmpsb (bad) lods lahf inc enter xor mov and or sub lods ja lahf pop mov pop pop inc lods (bad) jo das push adc sbb iret push or push stos jg cltd jmp pop mov mov aas add stc rorl stos sti cmp lods pop sti inc mov ret sti and lcall lcall push call lcall lcall and mov mov mov mov mov fcmovne sarl mov cmpsl dec scas test push mov dec inc imul outsb in test jle push pop add pop or pop push cld mov jnp rorb idiv mov push pop jmp lahf sti loopne jp das popf and pop movsb add jno enter stos incb fs cmpsb mov dec mov cs cmp ficoml sub mov (bad) mov pop fidivr jecxz jb in cmpsl loope sub popa mov fs pop jnp shl pop (bad) sarb adc mov sub scas adc inc jg add loope inc mov jo push in stc es mov jo pusha jo nop jbe xchg push mov inc cmpsb stos adc int3 cmp stc xchg xor and (bad) aad mov or fdecstp jge mov jl and cs js or pop xchg mov inc cmp adc jge loop adc and aas ret aas fnstenv test xor (bad) clc mov cli sub add pop mov pop adc out mov xchg mov leave data16 jo sbb scas pop out and aas loop ljmp insl sti (bad) mov inc sahf mov fstl and and outsb aad lods loop in cmp cld pusha sub mov cmp add hlt xchg sub leave xchg dec xchg ds cld cmp sub ss mov loope fdiv pop cmp fwait push xor fnstcw subb xor mov (bad) sahf imul sbb mov fimull aaa popf mov push call rolb xchg xchg (bad) cli lahf jp jae repnz js xchg imul fiaddl enter or clc repz mov or out mov insl ret sbb mov mov fcompl lods xor xor ss xchg jae jne adc insl xor fs (bad) pop adc jnp xor mov mov imull mov or cmpl lcall xorl aaa out xor stc ss push adc fnsave mov jne xchg (bad) lock inc jns xchg test mov (bad) pop jecxz gs scas xor xor fwait pop mov xor lds jp pop cmpsl inc out dec loopne and sbb and cmp aam adc dec rclb adc sbb push aad mov fstl loop test ss cmp mov add mov inc inc dec lret cmp mov xchg fidiv xor dec (bad) fistpll cmpl xchg addr16 xor (bad) push inc sbb sbb push cmp fs xor shufps jge nop adc (bad) out inc dec int3 popf test xor mov cmp movsl les mov cmp jle xor pop sahf push (bad) je out cmpsl sub aam xlat xchg or dec or dec das hlt bnd lea fs mov fiadd pop or and (bad) xchg and jae sbb andl aas rcl scas popw cmp mov add lea xor dec rclb and inc pop std test cmp sub dec mov mov das dec insl and cmpsb jge inc push movsl mov cmp jecxz mov lret adc movsb enter adc push adc or adc cmp lcall (bad) insb jl movsb lahf das sbb daa xor repz jl mov test lock jbe aad das inc lahf pop cs lods inc hlt int3 scas pop fisub hlt cmp cmp lret (bad) loope dec cmove test push std cmpsb lea jg mov fsub push xchg push mov rcrb cmp nop cwtl fmull sbb in rcll shlb jb lahf mov loop out add inc inc cmpsb sub loope pop xor sub mov nop iret xchg pop int3 pop ficompl lds loope cltd cmp mov in or pop push cwtl jae es mov andl sbb or pop pop inc push out inc cmpsb imul jns out inc outsb and sbb xor jg xchg jns outsl pop pusha dec and out rorl testl cld icebp movsl push pusha inc fwait rcl mov pop in clc sbb fsub rorb push in add pushf xchg push (bad) neg and imul push inc jl mov enter add jle pop adc rcrl xor mov jo mov fsubs lcall lret ljmp pop cmpsb iret push (bad) pusha xchg mov notb lret sarl imul stc insb cmp test hlt daa and add hlt into dec xchg dec addr16 cmpsb sbb lcall enter std test add sub dec mov or mov mov mov ss arpl call jecxz jl add adc jne (bad) dec sub es push cmpsb es js xchg and jecxz fadd cs loop xchg xchg xlat into add mov jb pop clc or fdivp cli push sub into leave mov mov add sub out test inc lret sarl scas mov push idivb test adc (bad) jnp (bad) cmpsl lock jmp add aas mov lcall dec add push ret mov mov jbe and cs andb (bad) sbb sbb and cmp dec loop xacquire cmp imul xchg jmp add clc pop dec jae adc (bad) jo or call lahf jmp mov out mov fsubl mov sahf lret jmp loopne int mov (bad) cld gs or mov sbb cmc push jl jnp and ret adc rcrl (bad) fldenv and add std mov int mov mov mov fdivrl (bad) cli and pushf loopne sbb adc mov jmp inc mov test push fildll enter imul sub xchg or jge or test adc or mov xor into dec xlat cmpsb add push repz adc cmpsl xchg (bad) iret pop inc insl shrl jne dec jne aaa push scas (bad) stos push repnz icebp and into lods mov das mov xchg xchg fist and cwtl pop push pop test xchg daa jno sbb lret and scas push add (bad) jnp mov int3 adc sub sahf lret insl fsubl xchg out mov inc mov ss in lahf sub push jp idivl or mov mov in mulb insl pop int3 pusha pop push addb sahf inc push addr16 and out push or pop arpl out adc das xor out add lea fldl cmpsl ljmp jmp or sub rcr adc ret add mov pop xor and cmp jg (bad) sahf lret movsb aad pop inc mov arpl ja sbb ss arpl mov lret test das sbb (bad) lahf arpl jmp and xor pushf xchg out jp push sbb or cwtl sub js pop int decl pop pop pop push push test ja dec pop or cwtl daa and sbb xchg sbb jo iret or inc in cmp pop or outsl sbb sbb jns lock jb inc bound sub jle xchg int movsb ret add jnp rol adc adc sub jnp mov mov rcrl hlt sbb xchg xor mov mov lret xor imul xchg fiaddl xchg add sahf (bad) jb adc mov cs in xor and ret sbb add add aam mov inc inc cmpsb xchg loop adc mov jp movsb shr jno inc mov jge inc pop pop into xchg cmp sahf into cmp xlat mov sbb lods iret mov pop inc dec xor (bad) mov jg ficomp mov int3 out outsl popa mov lret scas cmpsb cmp out movsb sbb jnp push jg push mov xor mov jns fs ret cmp lea sbb movq mov jb xchg scas pop into jp gs xor inc dec mov xchg loop xchg mov addl push ja mov cmp mov dec sahf shlb out pop xlat sahf shll leave pop or ret roll repz repnz call mov idivb mov jne std stc fstl xor add mov out mov mov daa jnp loopne xor jnp mov repnz sbb xor mov sub jmp out push std (bad) push mov sub push inc inc fs cmp cli insb jmp jmp es push add loopne fcompl (bad) mov mov or (bad) dec xchg jae push push ret inc outsb lds sub adc in xchg in in orl fstpl dec xor inc shrb pop lret mov dec aas mov push adc es mov jnp pop aaa jge das push (bad) aad adc pushf pop jge pop xlat push dec mov sti bound or xchg sarb sub dec call inc or in dec outsb mov xchg leave pop (bad) test pop mov sub add and and in (bad) sub imul mov jnp xchg bound xlat xchg mov mov call jecxz pop cld repz leave ja test out es shlb sub mov in pop add xor (bad) mov pushw pop lods dec outsl shrb icebp adc int3 addr16 cmp fidivl int cs pop mov mov jno out pop lods (bad) xor imul lret fwait sbb mov inc xchg dec pop xchg xchg inc mov and or pushl cmp cmpsl cld (bad) cmp sbb out flds lock mov add add jae xlat jne xor ss inc loopne outsb scas out call mov xchg leave cld jecxz sub in pop mov stc mov sti pushf mov adc (bad) ja lea cld pushw mov add fsubrs lcall (bad) ljmp push stos test je pop pop les jecxz fistpl sbb mov xor push or int3 adc mov sti (bad) aaa push fwait mov hlt xlat stos dec nop xor or repz sub pop loope jmp xor hlt inc jl imul sahf inc mov ret add popf test or ja (bad) sbb mov out cmc push inc std cmp xchg popa xchg nop lret mov push xchg jae pop (bad) aaa and xlat fcomps jp rcll sub pop lret pushf xor es cmp push stos negb imul sub arpl xlat and add sbb or in sbb mov mov fcoms dec out lahf pop mov (bad) sbbb pop jle clc mov inc mov fdivrl lret jne adc ret pop sahf rorb push or sub movsb or sti xchg cmp and rorb data16 jb xchg cmp xchg sbb and xchg insb faddp inc inc or mov dec int3 (bad) sti xor stos inc mov fistpl nop lea pusha enter or fistpll pop aaa repnz rorl gs popa jae sbb dec lds dec push push addr16 adc incl sar rcll cmp and inc std xchg push icebp daa cmpsb cmp xchg sub je ret icebp jmp lds mov sub sbb jmp (bad) fwait ljmp les aaa cmp mov mull fnsave push loopne pop xor xchg unpcklps jnp mov in xchg cltd sti mov mov fcmovb xor jmp adc jns pop lret pop or and jno add jecxz cmpsl pop xlat ds ficoml decb xchg push mov mov clc ret pop cmp inc ds xchg bound xor int3 sub ss mov xor inc scas outsb or cwtl call clc lods imul mov mov aam (bad) cmp pop add push (bad) fild cmp insl pop stc fs lds sub add lock fadds push js jg aaa xor cltd insb fistpl inc outsb push cld ja sbb mov lret xchg rorl insb xchg cmp inc xor push cmp mov mov sti test push std adc lock into fwait xor jnp sbb mov outsb lret insl push lret shr and cmp dec jns arpl jnp add jne mov iret dec adc insb mov loop xchg into shll fsubr or xor jge outsl cmpsl xchg lock mov xchg nop imul sub nop (bad) lret cmpsl bound push push cmp mov lahf and jp fcoms mov lret and bound ja sti adc sub movsb xchg lock mov push das cmp pop into xchg fisttp adc add xchg cmc idivl push cli out push adc cld or pop repz mov jnp cld jg mov int scas sub xchg shrb mov pop push data16 cmc out imul mov push mov outsl shrb xchg test push or pop jbe jge mov int js cltd cmpsb outsb dec scas xchg out xor or ret test xlat jecxz loope sub sar (bad) jge (bad) lahf loopne rol leave add adc pop sbb mov mov mov mov incl pop rcl aam xor mov jmp and dec mov pop sbb cmpsb mov cmp imul test pop mov insb mov mov test in inc movq mov mov popf dec jo inc dec insl pop in loopne (bad) clc pusha ja adc adc je cmpsl jbe cld cmp push movsb lahf jnp (bad) xor sub cmp push jo jecxz sub cld add xor movsb mov mov cld sbb or and inc xchg pop xor cld jmp call xlat addr16 inc ja pop (bad) je xor sbb (bad) pop sub push mov (bad) sti outsl push or fcoms sub push aam inc sahf sbb dec mov jl lods mov add nop aas inc push rcl cmp vpsrld jno cmp cmpb jne xor push sub push mov jbe push aam das or add mov sahf pop stos jbe js pop pop push push insl in nop das mov and mov or lahf push daa testb ret sub xchg dec scas (bad) sbb or sub xchg (bad) xor insb xor and jbe enter and mov adc jbe cmp push add mov pusha cmp out push (bad) (bad) pop pop and popf adc aam add sub add mov cld xchg mov test lds mov sbb repnz fild call cmpsl dec xchg and mov jp gs cld mov pop test outsl cltd rolb push dec in stc push xor xor inc (bad) into or push mov mov jl cmpsb jl mov pop adc push cmp in xor int push adc inc (bad) gs jo mov push out sub mov into mov sbb sbb and cs ret sti int mov dec jle (bad) or dec xorl jne fsubr (bad) leave out inc cmpsb enter ljmp cld roll lret insb dec (bad) cmp fwait and pop adc es xchg add cli xor test and repz jae lahf loopne (bad) jb ret aaa pop shr imul pop js jne movsb cmp add xchg and mov lcall loope mov push ljmp test push push mov sbb and mov mov sbb add jno scas cmp addr16 into push add mov or xchg flds push jnp das and inc cmpsb lret jl adc int pusha xor (bad) mov push loopne cmp jne jl ret push and cltd sbb icebp inc outsl jne fimul out cmc ljmp jecxz popf movb movsb push and hlt orb jp mov cwtl fcmovbe xor xchg push sbb inc pushf ret dec fcoml enter cmpsl (bad) push push ljmp xchg stos pushf push idivb loope mov popf sub xchg fs fxch or jmp pop push pop add jecxz jae xchg mov stos adc mov mov mov pop mov inc mov cmp xor xchg bound loope pushf sub lock mov fadds xor lret mov pop adc lods sahf in (bad) mov ds add call push icebp mov mov or imul sub unpcklps inc mul add clc in jns aad iret (bad) jo scas push push cmp aad cltd push into pushf and mov movsb js xor aad adc into fdivp (bad) insl jb push cltd cs inc cwtl xchg mov push loop pop jg push pop pop lds les into inc (bad) pop or fcmove pop lcall and mov and cmpsl add pop aas push mov dec movsb mov mov in jo (bad) aam push cmp cmp aam pop pusha lods pusha (bad) mov lahf mov fs push flds sbb clc addr16 push loopne stos (bad) jecxz add inc inc cli mov cmpsl add in es xor jnp adc and aas in cmp int cld into stos (bad) aas inc fsubl adc subb enter js xlat cmp clc or lods jp sahf rcrl lret popf test jmp xor stos inc or arpl xor sbb adc sbbl mov in mov cmp or pushf (bad) push cld sub and cmp mov repnz icebp mov cli inc push cmp das inc hlt scas xchg pop mov lock lea or push test stos add inc leave sub and or mov mov mov scas jmp insb outsb push jmp or loop ljmp mov mov or jg mov clc sub xchg outsb xchg xor cmp add (bad) pusha fs xchg adc adc mov in jmp daa jae pop mov jg jnp xor dec and fst sbb loope lods pop pusha or lret adc mov imul add dec xchg push xchg popf ds test pop mov xlat rcl and flds inc sqrtps inc cmp aaa mov icebp (bad) les mov lcall fwait dec (bad) enter dec cld aas (bad) mov adc (bad) aaa in cmc movsb subl out cmc into jecxz add jno and mov aam out cwtl jno mov cmpsb mov mov and imul inc scas aam adc adc jns movsl cmp add dec sbb stos fcomp jecxz lret js xor lcall jno imul push jmp loope add repnz test adc jbe rclb (bad) push sub jmp scas dec popf das gs popa mov (bad) iret add adc mov cli popf xorb mov (bad) mov lods push cmp nop imul push (bad) xlat dec mov fsubs movsb inc mov movsl and cmpsl outsb mov cmpsl icebp out adc out std aas pop xchg icebp sbb test jnp push fnop jle call out and cmc push xchg jl in mov jmp (bad) mov in and adc mov aas test std inc xor cmc lock pusha lcall adc sbb out push mov jp jb cmp ds xchg xchg adc dec inc clc and add das dec mov pop adcl jne jno push inc or and mov inc daa cmovg lret in fist push out mov sub jo cltd ret mov pop and adc inc cmpsb sub shrb mov fwait add pop sbb jo shr mov or cmp mov push dec and arpl in (bad) mov test sub sub xor pop loopne sub icebp data16 jp jle std scas cmp test ljmp sbb xchg fnstenv xchg adc mov add xchg test jge (bad) mov mov lret inc repz (bad) mov dec dec es (bad) dec in xorl popf sub (bad) dec pop adc add jp and into or bound fistp xchg addl jne add (bad) pop pop cmpb sbb roll add xchg (bad) jge pop sarl sbb or daa sub sbb inc out frstor nop daa shrl xchg adc mov cmpsl xor cmp loope xor xor popf test xor fwait (bad) divb adc pop mov xor lret cwtl sub adc xchg jg fisubl xchg loop ret push cmc push or adc lret out sub outsl mov mov cmp xor cmpl sbb outsl xchg xchg cmp xchg adc push jb pop cwtl icebp mov adc cmpsb lods in sbb pop push inc (bad) push xchg inc xchg jmp test or repz leave inc not add mov dec inc cld test push cmpsb mov mov (bad) cmc (bad) sub pop mov aaa shll cmp sbb out insb dec (bad) mov push jg add mov rclb xchg jl jl push xchg lret xor xchg push jp pop push (bad) aas aad add jbe int (bad) repnz sub push push sub fs dec hlt daa add push cld fimul gs or dec adc jae mov adc or das mov dec out std mov and je iret aam shrb cmp or adcl adc and jbe stos push idiv sbb addr16 loopne dec or bound sti negb add ja stos fsub mov push jo xor jp out pop scas (bad) mov adc dec adc in lods test int3 jmp faddp pop xor cli inc pop int call cmc or adcl mov push stos es fwait jbe es add xor add sbb aam inc mov add cmp (bad) in cmp push lahf mov mov std bound not sub lret or inc mov add pop push cli cmpsb repnz outsb testl ljmp sbb jae je jge scas inc sbb aam fsub push dec das add mov rep cmp mov adc cmp cmp les cli add cmp (bad) (bad) jns jno notl cmp dec dec (bad) pop xchg jae ja call push pop add xchg aad repz shr mov iret inc (bad) cld data16 test xchg add and sub mov clc mov jns adc push sub insb cmp enter sbb mov mov imul loope push in fldt js fist sbb mov mov aaa adc les push mov and dec in sub mov int push pop xor push xchg pushf pop ss pop cmp add gs leave stos add rcrb add cmc fildl shlb push hlt mov jmp (bad) mov subl gs iret and and imul es xor hlt mov mov jns fmull or bound ja mov dec jns xchg xor push aam movb fstpt pushf xchg push xor out mov movsb xchg shll in push mov xor outsb notl push sarl adc test and cmp insl in dec inc cltd pop adc jo jle push out mov fdivr mov shr and mov mov imul sbb fsubs xor sbb aam cmpl adc xchg icebp adc aam mov adc dec lock rorb clc inc jne insb xor sbb mov punpcklbw xor push push and test repnz mov icebp sti stc dec pop dec add (bad) and pop jecxz sbb mov jne mov dec shrb mov or push daa add mov in hlt add loopne leave add push int3 mov jg inc inc int jns test lock data16 mov jb (bad) imul mov popf inc pop pop test xchg (bad) sbb in jns and push pop sub mov out jb setle das jne fwait and xchg push mov ret dec lea push andb int3 or scas mov lret cld sahf sar test fcompl psubb adc pop xlat mov xor sbb and or fs pop cmc sub jge adc hlt mov insl sbb loopne cmpsb shl dec rorb mov loope scas pop scas xchg (bad) negl insl or test jg push aad das mov inc loop pop (bad) sbb sub addb jl movb push add insb pop rcll pop or dec sbb mov ret dec nop fistp mov enter xor das lock loope inc mov inc and mov lods stos (bad) cmc aad xchg xchg mov fisttpl pusha je stos xchg rolb pop jmp aad mov loop std pop sbb repnz sarl icebp outsl dec inc repnz or arpl jg call push inc rcrl stc les mov (bad) mov xor icebp popa inc sub lock jmp sub (bad) call push mov add and push xchg cmpsb mov in repz icebp in out (bad) rclb or call mov cmpl into leave out inc mov lcall sub jle in or data16 adc mov fnstcw dec xchg mov dec sub mov mov mov sub push je xchg mov fsubp pop adc xchg push call loop add cmc shlb and sub lcall xor subb mov xor ja gs adc pop je outsb out mov sub add pusha or xor out fild mov ljmp push mov cmp cmpsl or and mov push (bad) mov inc push test (bad) mov jno ss ljmp into jae push cmc mov pop mov jbe cmp repnz mov stos aam jle fs daa sub aam or fs mov mov mov or lds movsb scas (bad) rcrl daa insb stc mov xor add ret std das cmc std clc pop shrb push fidivrl ds push xlat loopne in and ss (bad) jbe pop and xchg cmp lcall (bad) sbb and add push in cmp es xchg loopne stos cmpsl mov sti adc rorb addr16 int mov xchg dec dec enter inc push push lock add (bad) fsubrs in incl pop mov xchg and lret dec xor or cmpb daa mov stc jle test in js sub pop pop stos data16 bound sahf pop leave jae (bad) scas shr (bad) movsb call (bad) and push and or push out fsubs fucom sti sbb shr (bad) cmp mov adc les push (bad) or test or pushf daa adc mov in out and jp pop ret cmp mov jbe sahf cltd jnp sub icebp pop rcl xlat sbb lret (bad) push push xchg xorb clc xor (bad) or inc lods pusha sbb jb (bad) sahf pop cmc das pop js xchg nop sbb push mov out iret fiadd mov mov arpl in lods dec dec add pop pop dec push aas or aaa call icebp inc ss movsb (bad) and push dec mov je loope cmp inc push jle je movsl cmpsl inc xor fnstenv (bad) movsl pop push xchg nop xorl ret scas pop dec mov xor inc es es out mov arpl pop popf pop daa gs cmpsl rolb stc jns mov and or bound inc sub xchg outsb jp xchg int3 (bad) xor test mov cmp aad mov sub rolb inc or mov and or fwait scas mov and adc hlt ljmp pop or lea cmp (bad) out or adc add je fcomp xchg push cmpsb out inc push lret inc adc (bad) and cwtl mov add imul mov lods xchg jno ds scas loop repz into stc aas orl out pop stos stos ja hlt popa xor dec int xchg negb jae add adc test outsb sbb sub jmp sbb inc adc or mov mov movsb fstp jmp adc (bad) pushf (bad) mov movsb push mov xor div push pop jmp ret lock int3 add inc ja mov (bad) dec lods xor push fadds decb mov sbb xor andl xor and add (bad) js inc mov sbb adc (bad) lret cmpsl add movb xor mov mov jmp pop out sub ret jnp (bad) lret inc jl test inc mov pop push imul xor imul movsl mov push test mov xchg add js test repnz sub push sbb sub jns outsl fistpll inc js or in les ret aam pop loopne jp insl jns repnz into rcll int3 fimul mov aad pop mov add bound cmp out push push inc or arpl pushf rcrl xor stos add repnz mov in mov (bad) cmc pop enter jl cmp mov mov or mov fstl js je xchg jo pop (bad) loope jg pop mov xchg (bad) mov xchg inc pushf inc xchg add out repz fisttpl sbb les sbb (bad) (bad) call add mov push xor pop dec rorl mov dec repnz inc insl xchg xchg jecxz cmp je fwait add and pop push shl icebp cmp adc outsl ss or lods mov cli or jle gs lea sbb push loope out repz jg negb pusha pop add adc bound mov movl cli pop in xchg xor shl shlb outsb xor adc push jp fdivrl sahf jbe es sub pop push inc ljmp test js push in mov popf ficompl pop xchg in and jns sbb xchg inc dec movsb jno jle push push pop cs (bad) sti jp mov stos adc lret clc jp jns cwtl int mov jl,pt pop mov (bad) mov xchg test pushf adc inc add cmc les jbe cmp aas jae ficomp xchg push insl mov test pop or cwtl cmp lret and and ficoml push movsl jecxz cltd pusha jns aaa sbb ja push test adc fsubrl cmp outsl push sbb insl pop xchg bound pop add xor or fisttp stos adc pop inc rclb enter cmpsb sahf pop push sbb sub xchg mov inc cwtl aaa xchg dec or lods cmpsb push push push mov lret mov popa test imul rolb (bad) lret bts pop push in jae pop das fiaddl dec mov icebp dec sbb xchg mov jge sar (bad) mov jns rcrl into call (bad) xor jnp xchg mov add lret pop or repnz sbb mov inc add xor fbstp (bad) pop movntq (bad) xor dec xchg or lock pop xor dec add int3 xlat aaa out add jmp dec roll lret fildll jl inc (bad) mov imul aas jne sahf mov fidivr (bad) aam sti xor pusha mov or sub sub push adc popl mov fwait jno and je iret cltd imul xor pop xchg pop (bad) and pop push jne in lea add or test mov outsl mov jp inc add mov jnp mov xor or and imul loopne pop ljmp lds push sbb test test sbb xchg push (bad) mov mov mov and and mov icebp cld roll mov or popf lea cwtl xor fdivs fidivr movsl push (bad) mov sub mov add dec int3 push cltd inc add mov cmp xchg adc cmp xchg mov outsb mov gs popf inc test cmpsb lahf outsb push popf xchg dec (bad) adc je (bad) mov ret ds and xor jae in icebp add les mulb dec cmp push sti sbb push dec je xchg xorl insb push and sbb call jecxz call or push or mov sub ja pushf (bad) mov jo pop inc sbb or arpl add push enter add or sbb nop rolb outsb dec jnp and dec aaa cwtl fsubl mov (bad) push call pop cld pop adc fnsave jl (bad) (bad) call into shrl in cmp xchg popa dec sbb dec (bad) cmc pop addr16 pop mov jmp lds stc sbb mov and jo ret mov enter add dec inc and repz mov test dec ljmp enter movsb sbb xor outsl pop lods sti xchg xlat pop fcomp in jbe mov lret sbb int3 mov (bad) inc mov dec add push xchg push mov mov push js shlb xor arpl xor xchg loope outsb push int3 imul mov adcl xchg divb xor insb lahf push test jns lahf inc cltd push adc das xorl adc sbb dec imul dec pop cltd pop mov xchg xchg (bad) cmp push sub cmp inc cmpsb fild or jne adc fildll push or imul or ljmp dec mov sub mov (bad) nop nop fmuls sub ljmp inc push out adc jns pop xor inc and in divl rcr inc xchg sbb add cwtl ds aam (bad) pushf inc jae inc incb pop sbb insl scas addr16 aad dec dec aas je cmpsb adc pop outsl push jmp loopne or mov cmp rcrb push add sub lcall jg out pop lods popf dec ret dec lds adc add cmp jnp leave sar lock test cmp ds (bad) adc imul dec cld sqrtps cwtl cmp lret mov out or jle dec jecxz adc ds lods sbb rol mov pop fnsave shl adc jp push rol cltd out sbb dec and pop imul sbb dec xchg movsl cmp add inc (bad) into xchg out push frstor and nop push dec fs xorl fistl addr16 push scas inc mov vpsubw shll inc cmp outsb shrl dec lods fwait cmpl or mov jo je cmp loop push adc loop into sub or std fdivp aam mov fisttp dec (bad) (bad) popf out xor dec imul out gs pop add jbe jg in jp and ret mov dec bnd mov test inc in cmp (bad) and mov dec sub mov gs mov fnstenv pushf sub and xlat movsb (bad) iret (bad) sti mull aam ret or mov sub jecxz and std movl shl mov dec jp fnop loope fwait test (bad) mulb and push mov icebp pop orl fs push xchg addr16 into cmp lahf mov notl fldl2t cmp pop push hlt (bad) push pop fcoms xchg mov mov inc mov or xchg pop in mov cmp lret add jp sub push cmc inc ljmp push mov out (bad) icebp sub mov pop or cmp jge scas and sar jle out and mov sbb bound adc sbb add fimul mov jne pop inc adc insl lahf popf cmp call stos cmc stos movsl xchg (bad) sbb mov xor roll nop loopne jp jns lret or dec jp in mov lret jns sub cmpsb and push jne jp in mov test cmpsl jbe jecxz pop fdivl sub sub xlat dec daa adc data16 mov cmp aaa out mov jle cwtl pushf add leave out push data16 decl and ljmp js and mov and repnz jns arpl loopne test movsl (bad) in cli fucomip jns sbb lds mov xchg mov xor lret push sarb (bad) jae push jmp stc out les in sub sbb mov scas mov mov xchg xchg mov cwtl dec cs cld out adc jb pop cmpsb shll jbe lds dec lock icebp cmp add mov add cmpsb test mov or jp je sbb mov movsl outsl mov stos pop and inc mov or pushf int ret sbb sbb ljmp cmpsl jmp ret aam fdivl and mov pop ss out pop fs hlt push inc jecxz pop cmpsl test jecxz movsb pop and mov mov out pop test je xchg mov xchg test and imul insb (bad) data16 cmp push sub jl xor aam into adc mov cmp add pop rolb xor addr16 (bad) das insl popa push in shll jns,pn idivb bnd (bad) adc sarb std dec not jbe lods jbe lcall cmp xor int mov lea cld stos jbe fisttpl or sub int3 pop xchg (bad) cmp pop mov xorl jbe inc push cld mov (bad) fninit enter lods fs imul ljmp outsl out sbb repz dec or and mov ret movsl xor cmc mov sub out cmp push imul imul mov (bad) bound (bad) std cwtl mov repz cwtl push push adc inc les jge mov (bad) pop xor notb pop je xchg int or sbb mov and stos cmp (bad) mov outsl dec in rcl (bad) cltd into jb sbb jmp es (bad) loopne mov mov adc insl jne pop ret adc jmp (bad) test nop cmp bound fcmovbe lock imul add or xorb psllw adc jnp mov cltd popa stos call arpl xchg jae lahf fist lret sbb fwait cmp test adc cmp lret dec add lock xchg xchg pop mov adc push ret mov mov loope push and dec dec push adc inc pushf mov repz jns mov lret icebp mov mov mov xchg fmuls mov pop jle lcall int3 sub cltd stos jmp and (bad) popl push aas and xchg or ljmp rcll xchg xor popa lret pop loope mov stos dec pop out mov dec js xchg mov xor repz lds add wrmsr scas icebp test je out decl sub sbb nop xor test push gs xchg pop movb adc mov jp inc shl inc pusha adc addr16 addr16 push (bad) push clc mov out push push mov out mov adc clc lret mov cmp (bad) ljmpw pushf xor pusha xor xor call lods sub fstps fdiv sub mov push mov inc shrb and mov jp sub mov sub pop dec push mov sgdtl cmc xchg ret daa pop lods jnp jae add stc xchg cmp dec xor xor jae xchg mov mov imul sbbb jb rcrl clc xor test jmp push xchg mov repz xchg into jp leave jmp repnz mov ror cli pop lock rolb loop nop mov pushf imul cli (bad) (bad) inc sahf pop scas pushf dec pop mov xchg mov subb sbb mov pop movl into rol add dec mov dec iret stos cmp xor and inc aas in enter pop das les ret (bad) push xchg or add mov scas sub sarb inc mov dec mov dec cwtl mov lret sbb lods inc mov push rdpmc mov ja xor nop mov pop ljmp lahf push dec mov cmp jp in inc jne xlat std fidivrl sbb out inc adc ds mov jb nop bound fs loope mov jecxz mov jns sbb or in adc adc mov mov lret ljmp pop aad sar and jbe dec mov jo or sbb dec (bad) (bad) cltd scas cmpsb aam lar mov ret pop sbb xor lea mov cmp inc mov loope cwtl pop inc mov lcall shlb mov lods cmc dec xchg sbbl cwtl xorb (bad) dec fmul aas ja cmp and repnz and aas js inc and jns xor movsl sbb push test movsb inc dec and xchg cmp lea mov (bad) xchg sbb fild pop pushf or sarl sub jmp push jne test xchg and pop adc ret inc dec pushf mov ret gs (bad) (bad) pop mov cmp lods pop scas pusha es imul push xchg mov mov xor out xor mov push pop cmp mov repz mov jb push lcall xchg jmp cmp in inc test push mov mov cltd psubq outsl dec xchg pop es stc outsl clc cmp in add out and lods fs xchg push add dec call push jp xchg rclb cmp mov outsb insl push cmp xor repnz (bad) push pop in pop mov cld xor out jb clc pop xchg mov aam push inc test pop movsl push xchg cmp push push cmpsl inc (bad) lea outsl jo mov pop shlb cltd imul std enter add mov lock test outsb mov stos cld push fldenv xor xchg stc adc js insl mov dec movsb nop xor rclb dec data16 test sahf sbb test add pop cld rcrl dec outsl call js pop fisub aam sub imul adc sub add pusha in or sbb sub in push cmpsb xchg push rorb xor cmc adc push sub and icebp iret movsb fidivr aam int in in outsl adc sub inc fidiv clc mov push lcall dec orl lret jp call loopne,pn pop push test nop push cli or sub push or (bad) mov adc sub sti xor inc jl add rol lret (bad) mov or out rclb push mov pop mov cmpsl pop outsb addl mov cwtl and insl cmpsb mov xchg mov hlt cmpsl xor xor sbb int xchg shll mov lret stos jbe cmpsb es or xlat repz inc jmp rcr cs mov inc movsb rorb movsl push loopne shlb arpl rcll mov xchg sbb and int3 push cwtl into into cmpsl insl mov pop pop and and gs mov adc je jnp incb mov inc cmp sbb push mov jbe pop ljmp cmpsb mov mov pushf fbld in int dec xor push jl sub xor in (bad) xchg out es fmuls (bad) jns sub or stc jle xchg adc mov jle xchg jnp ja sahf fisubrl sbb jnp mov aad imul pop jl iret adc adc jle mov sarl ljmp adc jge addr16 icebp paddq dec push xor push mov leave lods (bad) das iret icebp add mov outsl dec rclb aas xor mov clc (bad) fstl xor jp (bad) insb or bound mov and in cmp push pop sbb mov jne std (bad) es xchg scas jbe (bad) cmp mov cmp js mov adc int3 xlat sbb and fadd cmp sub cmpsb fldt (bad) in cmp mov mov inc in (bad) leave xlat dec xchg mov (bad) fcoml inc mov cmpsl in in push enter mov shlb fwait jmp out out inc das xchg repz cmpsl stc out cmp scas cld lock sbb dec pop ret (bad) xor inc stc dec lea mov fildl push std pop data16 pop int3 popf pusha ficoml ljmp pop cld (bad) jae in pop inc pop inc imul cmp mov xchg dec cld jge pop mov or sub dec rcll push jbe roll enter ret aas lods xchg out jno mov stos add xor xchg mov sub jae movsl mov adc lcall adc push mov leave jns and pushf decb lock movl insb or pusha push xlat sub adc push sbb daa push adc enter outsl jbe xor add push inc rcrb adc jb push clc cli push jbe outsl xor ficoml ret sub arpl jno out call scas jb sub mov cli test dec insb xlat adc out iret dec repz xchg lret int3 push or fldl xchg cmpb mov ret jle jl test ds adc (bad) negb mov pop rcl push int3 push inc add sbb cwtl mov scas xchg sbb dec arpl hlt (bad) and rorl push jmp pop cmp sub out mov fprem outsb xor push test mov addr16 aaa lret sar push xchg push mov ljmp mov daa inc mov imul aas or loopne cs xor bound hlt sub and imul insl sub lds ret lcall mov inc add ret and rolb loopne test xor mov cwtl in cmpsl fidiv mov xchg pushf sub pop mov out jnp add aaa dec inc push dec sti pop adc cmp xchg dec mov push push mov xor out popa push dec (bad) hlt fidivl jb push in mov push lret cmpl push cmp and scas addb out sub add sbb aam mov movsl fcoml and ds xchg mov jmp mov sti add xor outsl pop movsb lret fdivrl (bad) insb jb mov cltd jne ljmp mov xor ljmp ffreep mov sbbl jo cmp pop dec mov pop jmp inc sub in dec leave (bad) pusha mov orl lea addr16 cmp cmp movsl arpl in mov jecxz arpl stos fsubs sbbl pop jmp inc les cli and aas int3 sbb movsl xchg stos xor jmp xchg and mov xlat js xchg sub mov imull jnp insl xor sub push dec cli (bad) mulb push into xchg jecxz sbb xchg cmp lea jno insl adc or into jecxz push or lock mov popa das dec xor (bad) push sub (bad) cmp adc out nop sbb bound ja jle inc inc push ljmp push imul repnz push imul mov pop test inc sub and adc fsubrs add fucomp sub dec in out sub push mov in push sbb mov stos mov daa and jbe cwtl popa sub lds jns push inc and test bnd xor in mov enter lods das mov and ss popf push xchg aam sub ret lcall sub ss data16 out mov pop pop (bad) push sub jbe mov test pusha mov mov cmpsb rcrb cmp imul mov and ss mov loope inc cmp test (bad) arpl adc push int sbb jns ljmp mov mov addb nop fadds mov orb out fstpt rcl sub jecxz cli and add jb lods pop push sarl rcr sbb rcrl mov xor jno add sbb bound lock mov and imull mov xchg jnp aas push fmuls or push into push dec push add js sahf iret (bad) loope jecxz xchg aam gs mov mov lds fsubs xor rclb sub xchg sbb addb hlt mov jle jno xor shrl lahf (bad) andl das mov push pop stos cmpsb fistp mov inc sbb push lods inc cmp xchg inc outsl sub dec xchg (bad) and aad addr16 adc mov hlt push inc sbb push popf in daa and dec aam sub pop clc insl xchg fwait adc fcmovnbe jecxz push mov and sub push xchg fwait bound cmpsb movsb xrelease int3 mov sar test ljmp aas dec push xchg sbb pop shll push push sub daa fsubrl or pop push test inc idiv (bad) idivl roll cmpl mov lea (bad) jge cli test insl sbb les je ss lock sahf inc clc pop fstpt push cmp clc test cmp push aad inc psubw loope or ja cmpl inc jbe lods les (bad) mov hlt pop stos fimul out in lods push push icebp mov adc int3 aas add sub xchg push and jnp lcall fstp adc dec fiaddl push gs xchg lods ficompl sbb mov fwait or out mov push in (bad) mov insb out xor cmpsl (bad) mov xor xchg push mov jnp mov lret icebp and add test loop cmc aad inc mov xchg out xlat jne movsb push shrb push jbe jg add and push (bad) insl loop push dec repnz imul or mov xor lret jae mov adc bound jns push call test popf in jmp inc jno,pn and mov dec outsl lods xor adc notl rcl gs push insl inc cs lods (bad) sbb mov pop xor mov fldt in jne cmp add gs bound jns arpl lods cwtl cmpsl jecxz xor test js mov js and add cmp lods in out js cmpl inc or xchg bound dec (bad) mov xlat pop pop dec sub test es and jae call xchg rcl fwait sbb or sti jb aam scas fcomps dec cmc sbb cs testl lods or and adc sub out cwtl inc inc sub scas push cmp jmp repz mov adc outsl jp or mov cmp mov testb arpl and inc jb fistpll xchg push mov addr16 jge out les clc lods pop pop or push out mov pop and mov cmp stc aad test popf out mov xor push cli fist push int3 pop icebp lock les add xchg mov mov adc nop les xor xchg mov xor jle dec mov rcl out movsb sub mov cmp adc cmp mov adc out push xchg adcl mov pusha pop (bad) sahf lret into lret xor mov sub dec jnp mov popa lahf dec incb add inc mov pop xchg cmp arpl jg andb add pop cmpl stc rcr pusha in push cmp push ds repz movsb push fdivrs enter mov push (bad) stos inc js hlt or inc stos insl or mov dec aam jno (bad) jno sahf push lods mov jecxz cmp dec jns jno push push data16 loope (bad) mov iret xchg xchg dec xor cld sub jmp push outsb (bad) mov lock (bad) repnz dec aaa mov js jecxz (bad) fmuls pop into cmp mov jp sbb lods je jno imul xchg add or outsl mov ret push (bad) pop addl les in and insb push mov movsb shlb aad add jne mov shll (bad) mov out cmp sub sub mov das and stos lods lcall (bad) data16 mov fstpt adc mov xchg imul xchg test sbb fmull lock or add mov mov dec xchg inc cwtl in adc lods xchg adc push adc mov gs pop lds frstor (bad) sub dec jmp pop test popa lods push and push rclb fidiv mov call mov jb sub fisubrl insl dec and dec pop pop cld or cmp out sbb push xchg mov pop in movsl clc int3 sbb imul sbb icebp rcrl (bad) sub jmp adc inc (bad) jg inc stos out add test push sub mov imul out (bad) out out arpl out jp fcomps fcmovnbe push repz (bad) cmp adc (bad) aad adc sbb aas cmpxchg (bad) push adc mov gs jne push clc loopne (bad) out sbb push mov in ja fldt daa (bad) punpcklwd call lahf ds cmpsb ljmp into clc add in in pusha jae jo push mov fsubrs je inc insl (bad) mov sbb outsb jne arpl mov int xchg lods add cmpsl lret mov fs jbe mov lahf xor adc imulb leave xchg test jbe,pn xchg sub push mov insl push std fdivrl int3 fisubl (bad) push imul push cmc push xor jnp fsubl add jle mov pusha push pushf xor cmp ljmp repz sbb mov jnp ss jnp cltd push lea xchg lret out orl jo jns enter xor jb fnop sarb pop sub cmpsb push sub fcmovbe mov mov sahf shrb add dec or mov lea daa loopne mov cmc or mov popa idivb mov jecxz mov mov mov pushf pushf jo out dec mov xchg adc ficompl jmp lret xchg arpl pop inc loope into jg adc jae iret sub addl and outsb fwait mov aas cli add scas cld and xchg xor rcll sbb mov ss push data16 repz or mov enter aam pop dec adc fidivr xchg ljmp jbe cmp push mov jnp mov sbb mov cmp in scas leave sub test clc or sahf xor (bad) mov inc or call jl add lods mov out test xchg mov and pop jp jne in nop test inc sbb in jp fstl fadds sbb inc xchg adcb sbb add cmc mov xchg call imul sub push mov (bad) xor out push mov push adc addr16 add lcall pop push mov mov cmp cld mov mov (bad) xchg jg es cli daa movsb sti mov imul pop push sbb xchg mov test ljmp mov jge pop sbb test xchg incl sub bnd shrb in sarb cltd or xor adc push push xchg ds xchg (bad) lea adc jo sbb inc fst (bad) std sahf pop fwait jl push into xchg pop pop data16 or add inc jo mov dec mov lea fxch hlt mov outsl or insl jmp sahf or cmp add in jl loop jne cmp ret int mov das sbb pop (bad) jne les sub divb stos inc xor mov pop and pop mov or cmpsb fimul ss and mov mov and push mov cmp pop sbb adc and cmp sbbl push dec jmp cld cmp push mov sub sbb enter mov mov pop jmp adc sub add mov push jge push push sub jne addr16 jbe hlt mov sub fwait jmp pop cld adc add rcrb push dec push mov cmpsb (bad) sbb std pop sarb lahf pop pop rcrl icebp mov stos pop adc fwait daa sbb cmp out add lahf jmp xlat movsb hlt pop push xchg ret fsubl cli push pop jns scas and push out xor arpl adc dec sbb fwait iret test mov jecxz mov addb fs cmp stos mov push pop sub and xchg push and insl sbb xchg int push (bad) pause mov out mov xchg dec sub and pushf xchg jmp or pop xchg push call inc outsb in mov sar cmpsb stc (bad) mov mov imul sarl xchg xlat rcl int clc repz out (bad) push mov dec popf push lret imul cmp test sbb scas adc into addr16 nop push mov lods shl inc xor dec sub fwait mov xchg or fidivl popa mov (bad) jle aas cltd lea xchg int inc iret lahf lahf mov push mov dec fadds enter pop jle pop sub aaa repz sub pop push std fbstp adc rolb sbb mov mov dec mov push sti and lcall push in or std into xchg bound loope adc cmpsl jae cmp mov xor icebp add push jp xor sub mov dec cmp sbb jl and cmp and push jns jnp lock jle shrl lret insb dec adc mov push ret outsl mov mov repz sub sahf fs push movsl dec xchg mov pop std sbb xor inc and xchg sub sti imul pop push cwtl push push mov cmp and and mov sti pmovmskb andl ljmp das pop jle xchg mov loop mov pop (bad) imul fsubp loopne push jle xchg int cmp daa jnp movsb xchg inc fs testb mov inc pop xor popl push mov cli mov dec push popf mov jne jno pop negb mov daa out xchg cmp divl or or mov lahf ret lahf and xchg sbb ss je insb (bad) (bad) and jne xchg xor lret lea xor xchg dec sbb dec adc jmp dec ret lcall mov aaa popf jecxz xchg mov rcll scas xchg inc cwtl ja fisubr jp movsl (bad) movsl mov pusha fs test jb pusha and sbb mov test mov sbb notb xchg mov (bad) pop sub insl arpl cmpsb push fisttp aaa mov test shl pop or and sbb movsb mov test int3 sarb fidivr sub js imul and xor inc xchg std cs clc cld pusha and bnd lahf pop lods mov inc inc and notl mov enter icebp push mov and sahf mov jo mov sub mov pushf pop jno lods and jge pop xchg mov jl aas mov xchg cmp divb mov mov nopl bnd lret push and pop xor sti and sub pusha sbb fnstsw inc mov adc cmp fstps outsl push xchg out sbb and fistl inc les cmpsb mov dec inc jl lods mov and nop cmpsl add ja es scas pop gs test pop adc mov sahf fidiv shrb ficomp push fisttpl mov lret imulb sub xchg sub scas les nop lods stc popa mov mov scas and fstp lahf mov stos add shlb xchg dec inc add jne sahf cmp and lea inc add adc in mov imul sbb cld cmp cwtl lock loope out and dec cmpsb imul jns mov das xchg arpl scas push push jno dec fwait mov inc dec bound sub daa int3 ror repnz in dec pop xlat sub dec hlt lret clc push fstps or lock out xchg je xchg loopne (bad) cmpsl jmp test ret sbb cmp lea imul mov adc nop sub mov jp ljmp sub dec imull jns mov ja sub inc jnp add mov sarl in inc jmp mov clc mov orb xchg shrb es outsb adc std adc and xchg adc add insb in xor and jle push icebp jno push xor inc leave fiadd loopne (bad) jo push pop push notb ja sbb imul aaa lea sbb loop jnp sarl shrb sbb lret ret pop and in jnp leave nop or rcrb mov mulb idivl stos sub dec and push call xor (bad) jo cmp mov out adc lods cmpsb push in xchg and imul xchg add cltd adc or frstor sbb into mov lcall mov icebp dec cmp cmc mov out or mov dec ja call or cmp mov outsl rorb xor xor sbb test shrl add sbb arpl xor xchg lahf lret jmp (bad) mul dec ror aam daa ljmp pop cmc xlat add xchg adc push cmc stc loope jae cmp scas stos loopne mov or (bad) (bad) aaa std xchg ret xchg ret aad daa (bad) xchg imul sub pop lret or xor cs mov pop sbb sbb cs pop ret push pop aas inc loopne sbb ret rcll mov push cmp jg inc out mov enter stos movsl xchg push jno adc xchg sbb xchg push and jge in xchg sub movsl fdivrl ljmp push lret xchg cmp jns stos inc in sbb cmc imul (bad) cltd cltd out rcrb in sahf test pop mov stos gs repnz std ds cld push lods inc sbb les jg inc xchg flds pop or add fs std mov push xor fiadd cmp loope outsl jb fsubrs cmp out fimull mov test adc mov in jg movsb scas jnp es dec sub and sub loop add fisubr jb inc mov push rorl int3 shrl sub (bad) xor push xchg mov xor jo sti aad xchg ljmp lret out jb push dec sub pop idivb sub stos movsb xor out cmc lahf (bad) pop xchg mov std pop gs aas jns lea in cmp jae in dec pop ljmp pushf in inc iret push fisttp push imulb das fs adc mov out sbb test or rol ret mov cmpsl lcall push lock (bad) adc fsub shl dec adc ds pop test adc (bad) push sub lahf andb fs lret mov ljmp inc xchg cs cld push adc insl (bad) jmp js fcoms andl nop (bad) jae or xor stos push lods inc or int3 orl arpl xchg mov scas fs mov pop cmp jle ud1 sahf jecxz jecxz cmp je or mov push bound push or fwait jecxz in mov add and xchg push icebp fwait lret jno insb std push stos in dec and cmp inc xchg push jmp lods pop insb call xchg xor je inc loopne lret dec dec push mov mov and inc inc adc sub ret (bad) jb adc pop repnz sbb xlat (bad) add adc mov (bad) dec call jns clc stos xor xchg mov mov scas jb dec mov pop sbb cs pop (bad) negl out cwtl cmpl jns negb cmpsb sbb xor or and pop xchg pushf ss fbld movsl shll test jl cmp push lcall xchg and in cmc or xchg jne inc hlt aaa inc jb lock pop xor cltd push inc hlt mov (bad) aaa cmpsl ret lods dec icebp sbb push shrb cli decb adc mov add mov push adc mov and inc xchg (bad) jbe adc cwtl out mov pop jbe push mov pop outsb sbb cmpsl xlat mov inc stc mov icebp outsb and and xchg test into push insb or pop stos sarb aam add xchg fwait sub push dec and cs jg imul fsubs in add xchg aas inc sub push inc sarb push xorl dec cmp out cltd sub mov dec movsb pop add inc fwait lret inc jb pop test jne dec mov pop les ds sbb or ret andb xor mov movsl sub cmpsl in (bad) mov inc adc dec in mov fmul int3 (bad) xchg add adc push xor stos pusha jp aam in fs or aaa ja clc movsb cmp lock jecxz push imul in (bad) sti xor in lods stos and rcrb fdivr push xor jecxz les inc sbb clc or jmp push push cmp les popf pop or loopne,pn and dec jge dec pop aas jl repz cwtl (bad) dec cltd cmpsb xor mov xchg pop popf mov mov data16 xor cmp ja mov fsts inc sbb lret in pop or jae mov and pop and pop cmc icebp movl loop stos mov in xor fucomp dec adc out mov dec loopne jmp cmp loop inc sahf push leave lahf fsts cmp test arpl adc jbe and jg fidivl jo or fsubrl xor lods test inc fisubr xor and mov jmp test xchg or inc sahf dec push xchg hlt pop push fimul or jne sub (bad) xor lret outsl dec outsl pop scas fnstsw dec xchg (bad) movsb jecxz stos xorb jns sub dec jno aam imul pop ljmp pop jo inc add push or mov aaa push inc movsb pop movsb notl xchg aas inc outsl fs xor dec cmpsb ss xchg (bad) sahf out push cld rcll fmulp cmp mov roll fdiv xchg les neg test push out addl loopne ficompl xor pushf insl (bad) cwtl mov adc out push push mov xor jb enter lret and (bad) test fld mov and movsl push dec mov cmp leave push ficompl das xlat cmp mov dec scas jge jno sub push xor arpl add ss jb sti cmp add push lock xchg inc cmp stos pop jecxz xor (bad) jb int sbb and mov std sub mov aaa stos sub cmp mov push incl call sti xchg mov push mov call bound mov enter rcrl aaa lds andl outsl mov outsb push xchg and and xchg mov mov xchg cli cmp daa (bad) push cmpsb mov sti cwtl add xchg add push adc stos jnp dec pushf rclb leave daa mov lret cmp (bad) test insb sbbl sbb mov lods pop ja mov add xchg push insl cmc jecxz dec sub (bad) iret addr16 xchg icebp (bad) (bad) (bad) faddl cmp lcall cmp imul push mov pop cmp hlt add std fnsave stc pop xchg sbbl mov sahf jnp int add jno sub cmp arpl cmpsb xor pop arpl add adc xchg and jl jnp add mov enter push sbb inc and mov cmp cmp sub mov inc loop push setge out inc data16 and push gs adc mov jl mov dec rcrl ret push jmp adc ret mov sub inc pop or mov push xor int aam mov push mov call mov movsb pop insb mov aad scas push cli add je les call jae clc pop and jb pop pop mov lods jne gs push cmp mov je jo leave rolb mov mov flds pusha push popf jns xor and imul mov (bad) sbb jne arpl (bad) jae mov arpl add mov and dec inc cmp and xor daa pop test sbb xchg cld les push dec scas jle jl mov pop jmp cmp push popf push mov test and or test or iret icebp push ja jmp pop sbb fs loope jge fs push push jns fdivr mov xchg push cmp test mov popf lods add mov nop push inc hlt sub dec push das push inc and fisttp scas adc rcr out enter mov mov add (bad) xor cld rcl adc adc arpl jo aad jnp cld icebp xchg or inc movl js push leave (bad) iret push fcmovne pop cmp push fcoms aaa leave xchg sbb mov fistpll movsl jb mov xlat mov popf and ret in dec xor xchg xor mov in xchg jno test jg and mov push cmp dec aad dec add mov stos or xor ljmp cmp in das movsb cwtl pshufw stos gs pop hlt adc ret rclb or int3 cld pop push jo mov push cmp cmp in ja cli ds mov out xchg gs lods mov inc mov adc dec add je jp pop idivl call mov fsubrs jno ljmp sub dec stc in xchg adc adc sub inc sbb pop jae stc mov lods jns aas lock dec inc inc (bad) xorl mov imul dec lea xchg bound aad sti push mov (bad) in xchg push jne cmp popa negl and dec ss inc and push mov dec and inc into out pop lods fimull les vmovd dec sti jge mov fsub push jne outsb enter sub lret stos cmpsl sbb fbstp hlt decb cli xchg sub push or jmp shl push movsb xor push int3 adc repnz adc dec das repnz inc sbb push or mov movsb stos cmpsl cmp mov hlt lret stos icebp ret (bad) lods sbb mov adc insb xchg das mov mov mov push ja dec leave jo das mov hlt stos out or jmp decb cmp or inc int3 in sbb pop push je addr16 sub (bad) lret and mov or ficoml mov into test in xchg hlt in inc dec and sarb push ret push repnz lds pop out push enter fdivrs in iret mov fwait scas andl mov cmp movsb mov pop hlt js sti loope add and rcrb retw addr16 test or xchg push adc or test jno js outsb dec xchg xlat aas pusha xor mov in fwait aam es mov xchg push sbb leave aaa es jo,pt enter cmpsl out decb pop into inc aam sarb arpl push (bad) jnp es jmp (bad) int leave pop push pop (bad) mov inc lret fmuls fcoml aad dec mov sub jg sub mov lock fdivl sbb jns push in sub and sarb imul cs insl push adc push repnz outsl and test mov outsl (bad) mov inc jmp fs cld loope fsubs mov mov add (bad) loope add imul mov mov pop repz pop cmp insl sarb repz xchg push out pop sbb dec out sbb jns mov push jmp adc push lods testb sahf sub pusha icebp dec push fyl2xp1 add jmp bound (bad) sbb mov inc fadds lods shlb cmpsb cmp out and (bad) cmpsl add aaa add inc aam and dec cs push and mov stos pop xchg cmpsl sbb jp movb inc push jl sbb cltd mov call loope and das (bad) cmp sbb jmp (bad) mov mov jg les push push lret xor push dec out push aad mov jb mov push scas test dec loopne int3 or mov es sbb and xchg cmc orb test rcl movsb mov cmp xchg mov adc and out imul push mov scas xchg or ds arpl fldl stc add rcll scas lea inc lock repz adc sarl xchg jne gs out lods fwait xchg pop mul mov pop jl das loop sbb push cmp addr16 fnstcw popa jecxz xlat mov loopne add out adc daa lea js imul packuswb inc xor and jb jno imul cmp xor mov dec stc fdivrs mov outsl mov sbb xchg outsb pop cmpsb rol jno inc xor sbb mov or aaa js andb jge (bad) sahf loopne sahf jae xchg push les push (bad) leave sbb incb mov iret cltd insb pop xchg das (bad) stos int3 adc push mov fcmovbe ficoml push mov xor rcrb cmp in cmp push je mov add inc flds (bad) and jecxz test in sub in push jbe xor movsb test mov mov mov dec inc inc xor cltd adc inc rclb dec mov jmp arpl cmp cld imul stos int push mov outsl jno push push loop xchg add jp inc out cmpsl push cmp test pop notb decb cwtl xor insl imul add cmpsl scas dec xchg movsl push sbb jb dec jns mulb pushf test inc mov xor bound (bad) pop jnp xchg scas sti lods rcll xchg ja lea (bad) fist adc cmp fst push push fmul dec jl inc out and iret pop lcall sub dec push sub es test pop aaa and sbb sbb push (bad) xchg mov pop mov scas cs rorl cwtl call and fcoms int jle mov xchg xchg scas xor adc in or sub int mov sbb addl shlb inc mov cltd jecxz sarl or test popa mov les and out (bad) stos mov jno fwait loop pop mov mov arpl push push xchg ret ds mov mov jg icebp fs (bad) int cwtl lret xor sbb and fidivrl inc (bad) push dec xchg lods sub add mov rolb jae ret daa lcall mov and lret mov or int xchg cmpsl xchg xor inc and addr16 push xchg test dec or adc inc mov rorb call hlt js mov cs push and sbb das fs xchg add fsubrs sub mov inc pop pop pushf testl sahf xchg inc inc jge lods sbb mov in shl xchg aaa cmp bnd cmp mov lock add addb popf push dec fistp sbb pop cld lcall cmpsl (bad) push sub mov repz jne lcall dec jmp mov push pusha mov flds xchg cmp pop psubsw dec in lahf fbld push outsl pop push arpl inc int3 dec dec repz pminub xor in adc (bad) cmc add jecxz push lds pop negb xchg jl cld jb and fidivrl cmpsl sbb cmp or ljmp push push pop xor xor insl bound imul sub xchg divl dec sub mov test andb mov outsb rcr outsb shrl iret icebp add add or xadd mov cmp cmp into mov js (bad) jae ficompl sbb int3 inc daa jb mov fcmovb jns data16 adc jns fcmovbe popf (bad) xor fnstsw jmp (bad) xchg repnz and pop imul out push jno add (bad) sbb int add iret mov inc push push mov out aam push add push ljmp addr16 ds pop dec (bad) (bad) cmp daa lods outsb cmp mov aam push or ficom xor les fwait lods pop inc mov testb lret push hlt mov sti sub shlb pop outsl cmp push mov shlb mov dec shrb mov aaa add shr ss aaa push inc push sar repnz mov dec push out mov inc add sbb or pop push pusha sub je stos jp inc stos sahf popf sbb adcb sub mov sub ss fdivrl dec loopne (bad) mov je int push enter inc jle in nop fistpll mov ret in (bad) jne imul (bad) sub (bad) in cs mov cli rorb xor incb pop test adc adc (bad) out mov mov jmp or addb cmp lea mov dec pop test jp jns mov stos test jl dec ds mov fdivs adc sub or ds xchg xchg pop lods lret mov loope aas mov dec pop fwait repnz (bad) cwtl mov add repnz mov loop orl adc test mov popa insl divb out or popa lcall mov push ljmp adc adc into inc lods inc mov ss in xchg (bad) sbb lcall xor sub cvttps2pi lcall int3 mov lods xor fsub rcr push xchg push (bad) repnz jnp pushf or pop dec xor (bad) mov mov aad mov sub xor sub xlat and pop in insl ret jno dec fs fnsave mov jns outsb jnp mov xor or (bad) and adc dec pop mov nop in mov in cmp jnp and (bad) cld cmpb shlb lods mov xchg nop in push pushf cmpsl push pop popf orb cltd scas jnp push rclb pusha rolb test inc jnp push pop nop rcrb stc and loope or roll dec je ljmp push aaa inc jecxz mov push call sub add arpl fcmovnu fisubr xor enter stos push stc sub mov adc aas dec add or dec or shll pop xchg mov test je inc aaa and dec incl js fdivs xor jl and stos cwtl dec sar mov mov xchg nop aaa xchg add lret sub test fldenv mov cmc (bad) (bad) call xchg jle (bad) ja xlat arpl xchg adc sahf ds fsubrl jo sub out loop xor fwait lea je inc inc (bad) les outsl std sbb add sbb sbb jnp jg cmc (bad) inc sub inc inc scas pop cmpsb mov (bad) dec insb pop orl pusha mov sbb sbb push dec mov cmp or cmpsb dec adc push or popl add (bad) ljmp sbb rcll jl test sub shrb jb cmp push pop jmp mov add dec (bad) (bad) mov sarl pop cmp (bad) aas mov xor leave mov int and cli lret ja mov lock js push or iret cmpsb push dec and call mov pop in fsubr imul pop mov dec jecxz stos sub dec ds inc popa fdivs add inc shll loope add test jae subl xchg out inc push pop lcall xchg in not sub xor es mov fcmove icebp mov mov das fidivl cld lret add xor loopne xchg inc jmp adc push sti rolb in pop std or in (bad) mov int cs mov repz adc inc ds jae (bad) das sub cmpsl sub or cmp sub push push inc add dec add mov cmp jno xor and xor add push stc (bad) pop call dec ficompl cwtl fnsave mov movsb popf push pmaxub fcmovnb xchg sub pusha jmp stos mov add push addl or lods adc or ret ljmp outsb cmp xchg stos mov xor (bad) push add add jmp enter inc mov gs xlat inc and pop sbb sbb xchg xchg mov and push cld aas pop ja pop mov inc pop adc scas adc lahf jge cs lahf jb das imul rcrb lods inc data16 or ljmp mov add imul ficomp xlat pop lods sub mov add cmp dec mov loopne fmuls mov stos lret fxch outsl mov std or daa cs dec repz test dec or mov xchg push xor inc mov fnstsw addr16 pop pop lret imul les test inc xchg push scas add scas les aad sbb addr16 add cmp loope inc mov loopne mov aas pop pop in and subb das sub xchg pop lods inc popa push addr16 and push xor jno or frstor mov inc or outsl (bad) pop xlat mov in adc cmpsb add ret ljmp arpl xchg sbb dec add jo dec out and or rcll dec into push push inc mov js gs mov sarl cmc dec test unpcklps add push xchg push inc loopne inc inc cltd xchg cld repnz aad scas (bad) ja xchg movsl adc or icebp inc lret aam inc leave dec dec lret fdivl in int3 notl xchg pop iret test lahf mov cmpsl pop jl add add and jb scas bound leave xchg adc adc les mov repz pop jne,pt or adc lods ret xchg mov mov jl adc inc jb in nop pop mov mov ret stos test in push inc add xchg js ljmp shrb negb loop in pop ljmp (bad) hlt cmp loopne in mov int3 xchg xchg adc jle insb lods mov movsb xor mov cmp pop mov sbb imul hlt push sbb cmp (bad) loop mov and outsb (bad) repz lds scas cli (bad) xchg cld mov xor rcl mov in je adc fwait imul icebp int sbb fnsave adc lods bound scas enter xor (bad) xchg pop pusha xor push push push or outsb sbb icebp sub fstps mov inc pop jnp movsb std test push mov cmp pop enter test xchg sub inc push inc out test add cltd mov sbb and ja sar cmp aas ljmp imul negb pushf test ja movsb inc (bad) or cld jne ja sbb fstl lods mov test in js mov pop int ja movsl je hlt stc jmp cmp ffreep fnsave repnz lcall cli push inc mov mov or stos xor ret pop dec jne rcll xchg ljmp cmpsb push imull mov fnsave dec push mov add xlat ljmp and popf (bad) or mov push repnz add js shrl cmpsb sar cmc insl stc adc mov sbb insb jecxz (bad) mov es cmpsb sub gs adc aad dec int dec mov pop jle (bad) repz pop (bad) inc jl stos sarl mov hlt out std nop xchg lcall add std ret aam loop (bad) push int out lea mov into rorl xor cld lahf sub sbb or sub rcrl xchg add outsb jmp (bad) push bound jns jmp mov sbb loop push jo sti mov fcompl mov xlat lret icebp mov fs ljmp mov and xchg mov test or sub pop imul xor jae popa cli test xor jge daa cmpsl js insl cmpl call cmpsb or sub sbb inc xchg pop xchg pop test fbstp stos lret jae jmp lahf ljmp sti addr16 std out cmpsl jb clc add fwait stos or jb lcall xchg fwait mov iret push jg test int and cld pop and dec adc dec pusha shrb cmp sub mov push pop mov mov or xor test inc mov fstpl fidivl div jp (bad) mov rcll jns lods sub int3 cs (bad) out add sbb xchg ljmp jns mov add test stos dec mov pusha dec ret push mov xchg xchg adc mov test and sub dec call (bad) adc ds mulb mov xchg dec jae xor bound add push add or imul xor mov add insl iret add inc xor mov pusha lcall or mov movsl clc xor nop (bad) lock mov mov stos push enter cld adc push lds test push xor cltd stos fsubs lock call (bad) iret jae adc outsl jl dec dec sub test out sbb sarl in cmp adc lock ret push icebp std sbb mov dec imulb notb jae adc addr16 xchg nop jo dec mov push xchg out in jno adc test add cmpsb inc js xchg int3 xor pop leave mov sbb pusha xchg jae adc jno cmpsb mov ljmp loopne js aad and or outsb xchg (bad) hlt test stos ja add gs repnz add sub loop xor (bad) clc pop push mov add fistpl jl cmp push rorl pop xchg xor mov pop mov jnp or sub dec in shrb push pusha push aas in cld push test jge add mov push and mov out add sbb aaa popf imul jg mov fcomi and rorl or (bad) fsubl mov in out dec pop movsl loop aad inc outsl cmp (bad) xor xchg jle and pop aam push fs jnp jns (bad) mov (bad) mov sahf and repz sbb xchg push mov imul inc pop icebp pop add lret xchg lock pop in mov lahf mov dec std pop inc push fisubl in shr lods jae or (bad) pop push cld aaa or jae jge dec loop push arpl loop sbb outsb lcall (bad) movsl xlat invd loope mov movsb bound (bad) dec sbb lods ljmp popf mov in add jno les mov inc jl iret mov rcrl or sahf lret push push mov jl aas (bad) xor dec or outsb nop (bad) stos out or mov mov add add (bad) jo (bad) cmp ret sti push js or imul daa rcrb mov push fsubrl sbb ret sub sahf mov adc insb adc inc sahf bnd jb and mov ljmp dec (bad) movsb add inc int3 inc add fbld or stos insb js test into jge or cli (bad) movsb add mov lock les inc xchg int xor bswap out cmp test or pusha sub mov jne mov cs adc push jns pop sar push and cvtps2pd flds lret push inc (bad) das iret push push mov bound push dec aam cmp jp cmpsl mov (bad) ja in cmp lret ss lret xchg fbstp stos xchg nop popa lcall inc mov stos sahf or js (bad) pop stos outsb mov mov cmp mov or test std mov mov aam fcoms pusha aad mov sbb adc mov adc ja int test sub shr and and (bad) in lods (bad) jns outsb mov aad mov sub in data16 add mov popf stos arpl xchg ja aaa xchg shlb mov inc cld inc xor loope cmpsl pop push mov popa fldz add sub (bad) out les add dec shr test (bad) ficomp lods pop aaa loopw repnz mov rclb lret cmp jecxz popa mov pop icebp lahf push daa test lret pop xchg xchg xchg daa cmp xchg movsb mov push js loope in ret push sub jg xor in jnp sahf rcl adc repz jl cmc mov push mov sbb xlat int mov pop rcll adc stos add cmp add out cli ljmp or xchg dec xor push and clc add pop in ss jg stos ds jns push js or inc push sub in jge dec nop push cmp fmul jo add enter mov xchg popa cmc cmp or dec (bad) fbld (bad) data16 js icebp xor pop or ds movsb and repnz jp ficom add not out mov cmp fimull pop dec test xor insl inc xchg cmp lods pop jne fstpl dec lcall mov add cmp jge (bad) movq les mov sbb push daa scas pop icebp (bad) dec in inc sub lock add dec sbb enter (bad) mov or mov hlt dec xchg adc and dec mov movsl lods adc jp (bad) mov mov sbb repnz pusha idiv push shr stos push iret loopne (bad) repz fsubs and lock in fsin leave push loope aas inc mov cwtl mov daa xor pop or (bad) fcoml dec xchg outsl (bad) je pop int sub and enter push pop je mov hlt hlt pushf fstpl jl xchg in adc inc jmp iret cmp lds and lcall xor push test insl inc ljmp sub rcrb push push lock inc (bad) adc cli movsb xor fbstp ret clc and dec xchg es xchg decl push mov testl cwtl mov ret mov sbb mov popf adc mov test and (bad) sar ret sub inc mov pusha mov mov cmpsl jae dec sub sub xor xor ds shrl scas sub adc push inc insl xor jo or jbe pop pop test in and sub xor jo arpl scas ss lret sbb mov inc inc mov sbb push fdivr (bad) scas xchg cmp insb and hlt cmp jo dec jne add cmp (bad) loopne jne sub mov fxam push inc cwtl push mov and int loopne jae outsl stos std cmp cmpsb inc into sahf mov scas or mov fcoms div rclb mov lret jecxz fcomi add ret jl enter sbb nop fisttp shll mov shl cmp aam sbb xchg dec jbe mov jmp mov faddp inc leave dec sub scas das cmp adc orb dec insl mov fisttpll and ficompl inc xor xor add fcompl rcrb xchg sbb adc add leave aad jp sbb imull xchg sbb or cmp xchg ret jns scas imul add (bad) into stc int3 pop pop fidivr mov popf jge xchg or pop and (bad) xor fsubl mov out adc mov je jge or dec push test testl imul int3 push in mov loop jmp add adc add into or pusha loop pop or add scas mov divl xchg sub cmp imul xor fdivr test add xchg jae xchg and shrl stos sbbl push pop inc mov mov pop loop xchg bound jae push mov sbb fs dec mov push xchg ss push xchg jae pop push in pop adc lret pushf out inc lods mov mov pushf xor addb pop aas xchg jg clc scas dec mov (bad) push (bad) int xor mov lea mov mov sbb out pop clc push xor xor ja pop (bad) mov ret repnz add adcb adc fnsave test data16 xlat mov mov mov aad sbb test lret mov cmc shll test fst fwait scas sub lret jo aaa mov lcall jns std inc popa ljmp cmp faddl jmp mov loopne stos sub xchg pop dec cmp jae mov (bad) out repz lods out std test jmp in add fstpt movzbl rcrb or push add cwtl sub xlat fisubr jl (bad) lds push out or pop jp jb add mov lds scas jb ljmp dec enter ds ficoml and ljmp enter cmp es cmp or mov mov xor std mov out inc jmp aaa repz sub stos pop pop mov (bad) add movhps push jns out sbb js adc bound (bad) bound lods push adc mov adc push pop and into cmp sub in (bad) lock not cmc sbbb jns gs clc mov (bad) mov loop hlt popa aad jae sbb lock adc lea shll fidivl push jmp inc mov arpl cmpsl (bad) insb xchg sbb jbe (bad) or ret push arpl in mov jno pushf lahf outsb aad cmpb hlt inc test hlt imul push sub xchg fiaddl push (bad) aaa and xchg iret mov (bad) sbbb xchg jbe or mov daa mov cli fldl mov ds scas ss dec adc lods sub jae mov xchg and jne and lods xchg jp adc fst sub mov (bad) cmp pop lds add jp cmp sub loopne or cmc dec mov psubb dec stc cmc adc (bad) fimull mov in sub dec or mov or movsl out jp or mov out fsqrt add push inc sarb xchg sub (bad) push inc movsl movsb mov lock scas outsb pop mov sbb adc imul sbb dec stos insb cs jae fistpll leave add jge inc pop adcl cmc cmp jl aam insl int sbb jns jmp hlt popa sahf rcrl add push xor pop jle (bad) mov add aam fsts xchg or push add jge (bad) and (bad) icebp jp pop sbb adc popa push fisttpl mov dec add mov das or stos (bad) mov sti sbb aam int3 dec sarl push loop lods add aas hlt cmpsl mov enter pop dec inc push xchg aad sar pop cmp jle ss std ret and mov sahf out and fwait dec push cmp mov sub or fsts roll xchg dec push mov jbe sub pushf xchg jmp addl sbb in pop push push cltd cwtl enter cmp adc xor int3 mov inc or jne fdivs or scas sub cld pop xchg (bad) xorb mov stos xchg in clc notb ret xchg movsl mov xorl inc mov adc lret dec cmp pcmpgtb les push jle rcl adc es bsr inc add imul cmpsl mov push push mov or adc in or jns in pop or jno sbb or mov ret xor push fild lcall sub jns mov (bad) test mov mov dec jae mov and dec lret jge mov mov out (bad) and cmpsl gs pop enter sub xchg mov or rolb mov push xchg add cmp fwait or pop pop push js in xchg push iret pop lret hlt jns mov xchg add cmp fsubs pop hlt xor push test sbb negl in and pop in push lock mov and das add pusha adc sahf mov ret mov and stos push sub sub cmp int3 mov lods sub lahf mov cmp sbb dec pushf cmp sbb or mov outsl adc jecxz xchg inc (bad) jno (bad) mov je loope movsb sbb aam pop push jg aas jne inc cmpsl sbb push aas mov out sbb adc into pop jb rorb or xchg lret and jno add test inc cwtl mov adc cld cs outsb in test fsubr jnp fwait test (bad) lret in nop mov push mov imul out jecxz rcll imul push mov mov xchg hlt faddl (bad) jecxz sub ret popl mov (bad) pop push lds mov xor popf xor lock repz fldt movsl and cmp mov inc fisub jecxz lods dec (bad) pushf ljmp addr16 or shlb test mov out leave ds nop fwait xor leave dec sbbl mov dec mov cmp xorl je divb fist cmp mov into fwait bswap mov and test add pop jno pop movsl and popf xor pop mov out jle orl and dec push int jmp pop repz dec addr16 jne sbb int notb xchg adc mov inc mov cmpsl jl mov popa sbb ss jmp add sub fcomps push cld push std insb aad push repnz (bad) repnz xchg push out cmpsl add push out mov mov push pop mov sar aaa push jl loope sub cmc mov inc pop mov sarl and xchg xor push and outsb rcrl iret xchg mov cmp fwait push sub and cld xlat icebp push (bad) sub dec movsl push jnp mov (bad) lods xchg rolb dec mov cmp inc arpl es jns mov inc and pusha loope aaa sbb dec adc insl sub das inc lahf sahf in pop (bad) jp lds mov and (bad) lock and (bad) lock xchg or out mov push int3 xor lods pushf dec sbbl in mov es jg,pt mov arpl and pop ffreep cmp push mov addr16 pop addr16 dec mov (bad) stos and sbb add rcrl lcall in mov fsubrs add addr16 lea fwait shrb fstpt xlat cltd push jb lahf or aad iret xor sbb arpl cmpsl (bad) jb mov cwtl and nop into cmpsl mov and pop mov lea mov jp out sbb cmpsl sub movsl xchg dec push push mov cmp sub out cmp push loopne mov gs dec mov aam adc jb loopne testb repnz xlat lahf (bad) lret add adc xor loope lret dec mov cmc add xchg pop daa xlat mov clc add cltd rorl sbb and (bad) jle add inc and dec sub adc jae or or shl sahf jne ror mov jae dec jecxz imul inc lret push sbb sbb bound mulb or dec push pop dec xor lods sbb jp aam fdivs iret sub aad repz scas jmp push int3 sub push inc stos jge or fildl mov repz and xlat sub or jnp lret (bad) xchg pop inc sbb nop pop push inc mov pop sbb dec dec mov push stos dec dec adc ss add es lcall pop or fidivr add jnp in add out sub mov pop or pop or ss xchg popa je push fnstenv aam (bad) push push sub add xor pop lahf nop inc les aas jne xlat add out stc cld call mov fisttpl inc pop scas cmp aas adcb or movsl ret dec or jl (bad) xor icebp cmp mov (bad) mov sbb mov sub imulb cmp int jge aas sub aam insl dec pop div popa scas leave dec dec and cmp jp jl push jmp lods and stos insl push test pop fwait sub sbb rep pop jp sbb out loop mov icebp outsb notl mov popa pop insl (bad) xorb sti (bad) jo sub mov add or mov pop dec scas mov add push jbe push or shrb dec fcompl fisttp jl mov test push lea push fisttp pop aaa outsl pusha aaa mov fisub (bad) push mov outsb sti mov push stc loopne mov jl push mov out mov xor and mov add iret test fucomp pop mov (bad) mov push pushf sub pop and andb push dec cmp lcall ret pop cmpsb lock dec ficom mov aad stos fwait pop leave mov mov cmp dec repnz iret outsb mov fnsave and pop mov loope pop test pusha outsb sub jmp movsl fwait inc cmp jg inc lahf loop mov add inc push fldenv xchg (bad) imul pop pop or push in jb ja or cli push cmp jnp or loopne shrl addr16 lods push (bad) jp and mov push sbb cmp or xorl jbe fs jecxz sbb call lahf push mov je pop inc test shlb pop sbb and push repnz and xchg in test mov cmpsb insl sub jmp (bad) xor ret vhsubpd push rorl bnd shlb sbb es pop fisttp movsb fcomps mov (bad) std nop mov jne or mov cmpl lds inc mov leave cld jmp data16 and out jmp pop add lret jge or cmpsb mov xor data16 testb jp mov mov das shlb std push adc jg mov dec mov int3 inc inc dec and xor sbb out sahf xor mov loope mov mov mov mov (bad) (bad) shlb dec insl cmpsl dec aaa push nop dec inc out fld1 xorl mov mov das or idivl (bad) shlb sbb mov sub lock push push adc jge mov xor add sub add push es out sbb mov xor popf jns ret fcmovbe pop nop and arpl cmp or mov in mov pusha into fdiv imul aad sbb test and aas aam push sti inc and inc and into clc call inc push inc shll nop bnd mov mov in push out imul fwait or fidivl or or movsl jmp div loopne ret ljmp in and int3 jne in fcomps dec pop xlat rorb fisubl js dec sub imul pop and (bad) xor or outsl leave aad ficompl jb ret (bad) imul out jnp sbb adc sbb xchg loope cltd aam imul out xchg jle sti negb hlt xor sbb cmpsl jno in cld add mov inc cmpsb aaa xchg fwait mov (bad) inc xchg ds adc scas clc in lret jns sbb mov pop insb repz dec and repnz and in adc pop jecxz test aaa scas mov add cld ficompl xchg outsb push je std lahf test fsubs loopne sbb push adc pop mov xor (bad) loope les pop add mov push mov lds mov mov sbb push or pop out cld (bad) test mov adc sub pop add cmp jnp jb,pn xchg outsl mov sub addr16 adc dec cld mulb je inc push scas mov ljmp rcrb mov sbb enter and pop push sbb test imul pop (bad) test dec leave and jb lods mov lock xor stc das jae push sub mov in or push mov int3 xchg xchg mov mov out pop rclb mov test push jnp in mov mov sub sub test mov hlt mov and nop sahf or mov or cwtl cmpsl cmp out lds int call repnz inc pop (bad) pop int rcrl pop pop mov and je fidivl frstor cmpb aad jle dec cmp sub push pop orl mov test push fidivl mov cmp add aaa ja mov xchg lods mov jp (bad) daa mov push int dec fdivrs pushl sub jnp cmp cmp jne add or sub (bad) push scas push jo push mov jp int3 popf das insl lahf pop cmp mov mov lock inc sbb mov ds xchg sub js adc insl adc out push lea lcall in pop or mulb les iret pop movsl mov cmp icebp mov xor cld dec inc xchg (bad) aas mov loop pop aam mov aad scas fs push (bad) int3 lods insl cs cmc jae push cltd imul mov pushf inc lahf aad push adc push cmp sbb (bad) push dec inc mov inc mov rorb insl add adc mov cmp pop divb xor xchg add pop shlb inc add rcl push rorl test loopne mov sbb xchg out inc push sub fs mov pop pusha dec lahf dec add movsb pop xchg jp sub inc lods das or dec dec jo push adc aaa scas push cmpsl pop mov mov (bad) mov or js xor sub sub mov aad (bad) sti xchg into inc fmull stos mov fist fisttp push sbb dec jno cmp mov mov adc xchg es sub lods test clc arpl mov lcall xor xor sahf addr16 loope push pop in add xor pop pop insb (bad) jo or sti lret cli mov xchg sub cmp xchg mov (bad) jbe push push push (bad) hlt std push add outsl in test xchg pushf mov cmc dec test mov sbb xor mov dec mov xchg out xchg xchg dec imull push scas push add (bad) icebp adc ret add ret sbb dec sbb aad repnz out (bad) jno xlat ss add cmp movl add and repz lcall call stos push push cmp divl (bad) lods pop inc mov vpshufhw mov adc les std cs cmpsl insl ljmp aad stos xchg add xor bound icebp and xchg mov pusha dec dec mov out jmp mov sbb xor rcll aad mov test xor mov jo dec js or or pop push add push mov add mov insl cmpsb pop mov repnz mov mov jle dec shl or inc jb fwait enter fimull imul or test add and out xor or aaa jnp movsb mov inc lret call and mov sbb push dec stos pop shr mov stos and loopne into jb sub sub xlat or dec fs lcall and mov daa dec arpl js stos xchg cmp stc xchg push lret sbb xchg rorb aas jae sub pop pop rcrb mov cli xchg js lcall clc mov sti (bad) icebp dec mov push or pop fstpt push leave addr16 xor bound mov or push insl add push lock push xor in cmp cwtl mov jnp cmp nop (bad) mov repnz pop cmc add mov repz xor adc cmp push (bad) andl push in xor mov idivb add xchg and xchg mov cmp stos nop cmpsb les decl jbe ret call dec dec loope sbbl pusha lret ret mov xchg fwait xorb bound stos mov xchg add rolb cs sub fdivl in outsl call cmp push mov cmpsb add inc dec pop or mov and in int adc xor adc jbe jbe,pn mov ret xor add xor push adc outsl xor inc movl scas loop arpl jg mov gs lcall (bad) addr16 adc shrd dec jb out lret cltd (bad) jno aas lds mov add push mov push xchg mov jmp cs aas loop mov ja push ret pop das jnp aaa in icebp rclb jmp popf fcomps xor or xchg add sub aam cmp cwtl mov pop popf cli mov push inc sub sub aas sbb jmp sub push fiaddl or test hlt cmp iret pop stos fistp inc lahf lock sbb lahf mov xchg dec mov es lcall mov imul pop cmpsb fisubr je xor adc xchg jns (bad) out push jmp lock cli mov xor mov mov xchg xchg cltd xchg mov lock push scas mov fsubr clc lea fs mov (bad) movsl cli mov loopne mov push fidiv test int3 mov jbe incl mov (bad) aam lods popf scas pop (bad) aad cmovo pop fs jo pushf mov popa add pop dec pop dec xchg out stos adc sbb movb in les adc scas add fistl cs mov loope or pop xor rorl and imulb std aas psubq add jle int push das lock adc cmp test or xchg or repnz jbe cmc lds lds add mov dec lods icebp in jbe out sarl int sbb adc mov notl mov inc cmpsl jbe dec ret in lds jne push ret sub fisubr loop test pop xor jbe stc or mov push mov out (bad) pop dec mov (bad) gs sub jae jnp fildl xchg lods adc ds popf mov mov push insb add addr16 push add cltd movsb add ret sbb mov fisubr xchg mov jmp aam insl push adc scas add push dec fnstsw movsb aaa mov cmp pop fistpll sbb xchg adc mov insl pushf mov loope mov jl icebp jecxz addr16 (bad) inc cld inc xchg dec fidiv inc (bad) (bad) aaa sub xor dec jmp mov loopne arpl lret pop sbb dec jae cmc (bad) imul mov jnp sub pop fcmovb push sbb pop inc xor (bad) inc out ja mov xlat cmp push outsl cltd mov mov addr16 fistpll xlat lcall sti lock sub mov loopne adcb xchg pusha push rcrl add scas in dec mov iret jo movsl aas xor push mov inc movsb pop repnz loop xchg cmp clc or imul inc xchg lds xchg add imul pop rcrb mov clc (bad) movsl jbe fnstsw xlat scas inc sbb sub inc cmpsl nop jno (bad) into sub or push cwtl lods jle lret mov inc ja test adc inc loopne and fnstsw lahf add jno lea or loop add add xlat iret imulb pop stos mov pop into shrb out (bad) fcompl insb xchg or xchg movsb jne scas cli aas sub int3 gs adc in out xor and pop test xchg lret sahf pop mov in leave out sub xor movsl fdivl cmp dec pop xchg mov movsb jp fldcw pop arpl mov imul pop mov jns and test cmp xor addr16 mov mov lea aad repz (bad) outsb xchg pop adc dec pop sub lds jbe or push mov inc jbe cmpsl paddd dec loop mov fistp cmp dec loop outsl leave bound cmp hlt sub ficomp and aam mov test addr16 mov fdivrs movl imul pusha inc and adc push je mov xor (bad) js mov das cmp cltd jae fcomp bound push sbbl mov aaa rcrb mov call scas add add or out or mov inc mov xchg xchg cmp test negl test xor push pop inc push outsl dec xchg jecxz mov mov push stos add js pop mov ljmp jp in ret pop xor or and cwtl push pop into ljmp outsb ljmp mov push jge pusha inc je lea inc scas mov imul nop test pusha lock pop bound cmpl test jb orb jb sub mov cli sbb out leave xor ficoml jo out dec and or or xchg stc add pop adc xor roll or shlw jno data16 clc fcompl xor jns ret sub cmc mov mov pop sbb test nop stos iret (bad) or test testb out jbe lcall xchg lcall and inc fstl push jae jecxz shrl xchg call aaa ds je push mov sahf cmpsb ljmp ret inc (bad) jbe cmpsb mov mov and jg aaa leave mov and into or push stos push pusha jg out cltd shll (bad) push push out adc inc cwtl cs jge mov pop jno scas clc and push mov fstp jb outsl inc in mov stc cltd (bad) hlt es bound mov fnstcw (bad) push or mov stos hlt xor fisubrl push loop and jne push adc insb mov shl push movsl mov jae imul push dec cmc xchg inc fidivl push (bad) fdivl cwtl dec inc add mov movsl loopne fild imul lret lds push add xor pop jge sub mov sub mov loopne pop imul add or push scas out fwait lcall push jbe or fist pop fwait and push cmp push aam jo sarb cmp decl lcall push ror loopne lock data16 mov inc (bad) shlb lcall sbb shlb test xchg das addb in scas pop hlt mov leave imul stc cmc push xchg add add bound movb cmc jae and push mov dec cltd out inc inc mov adc hlt xorb mov arpl xor pusha gs daa cmp mov cs arpl test pushf hlt add in fmull or enter fwait sbb ds inc sti pop inc add sub lahf mov clc xchg jne flds loopne push stos insl mov les mov sbb mov pop and (bad) lods push rorb adc or in mov fstps aas pop iret pop fisttpll inc rorl xchg mov aaa mov pop xchg adc aad rorb fisubr xor popf and imul mov aad mov movsl lock cwtl mov lcall test pop mov sbb loope pop sub mov pop outsb je mov sbb inc addr16 insl cmp mov xor push and dec mov cmp inc pushf dec cmp cmp fdivrs cmp adc pusha xchg dec xor repz xchg xchg fsubrp mov pushl sub imul inc repz sbb xor int popa mov add cld ficom repz outsl (bad) rolb (bad) mov jae lods aam pop or hlt inc fdivp jb stc out jmp adc icebp add add mov jb sbb lahf aam decl cwtl std aas out test lahf inc out inc jo int mov xchg xchg pop pop sub mov ss addb das in fdivrl and bound xor in jle adc mov rcrl mov test dec cld mov icebp inc cli test push mov xorl fstp js aaa cmp test cmp push sub (bad) into fldenv out jno mov insb adc call scas adc mov adc subb notb shll xor aaa adc in sti orl insl lret sbb out jmp icebp add mov scas xchg ficomp dec int3 push dec add jmp cmp jp in clc sub push hlt dec cmp fildll or push push pop fmuls xchg loope daa (bad) mov gs mov mov cltd add adc adcl pop adc xchg lds scas das push nop mov jmp in scas lea push (bad) xor sarl sti lret cmp add xlat mov dec sahf enter fwait dec adc xchg (bad) hlt mov mov (bad) nop push xlat mov push sbb sbb mov mov out jmp sbb ss std inc pop dec dec sti scas xchg std xor das dec sbb fisubrl int3 ss lock pop repz push in push sbb (bad) dec pop mov sti sbb sbbl in sub sub jnp mov ret dec lea push inc sbb insl lock (bad) in sub pop mov imul sbb ret cmp inc lea dec dec test jae mov js cltd add inc (bad) mov movsb push ss or jbe cmp jecxz cwtl xchg frstor jge push pop dec sub rorb jge fnstenv lret cmpl aaa add mov insb nop cmpsb repz inc gs dec cmp and jge or adc test (bad) in mov jecxz out inc (bad) cmpsb lods cmp jecxz jl cli xor fildll pop push inc mov cs cmpsb addr16 xchg hlt jb sbb insl add mov push sbb dec jecxz jl imul test testb jnp mov mov mov enter mov push sub jbe cmpsb pushf jbe bound sub jnp int3 stos push test mov shl lret scas clc mov mov dec pop cmp xor mov test ret jns mov out add push jbe popa loope sub pop jg sti jl dec dec xor cltd sahf mov push hlt mov adc lret push divl adc push popa pop xchg loop xor ss ret push rorl lds ja jae je sub or lret jns cmp sub insl cmp popf mov and mov xchg daa arpl dec shll lret or and and xor sahf inc fsincos sbb cmp push jg cmp js ficomp sub divl xor (bad) jb sbb data16 xlat jge popa ds cltd pushf xchg sub cli stos push mov imul pop sub dec stc leave sbb mov arpl adc dec repnz ret and enter pop jp ss test dec loope and sarl add mov insl in cltd dec push int3 jno push pop mov xchg out mov pushf sub mov xchg adc adc xchg outsl jp call shll inc subl jmp dec cmc inc rorl dec pop pusha nop lods test or inc out loopne push or push cmp push xchg jle fsubp xchg dec out rcl int dec fldcw add cmpsb xchg stos int3 enter lret js addb pop inc jp movsb stc and lods fsubs stc push mov jl add es cmp jl int3 jl mov shr (bad) mov iret push in jmp inc enter cld cmpsb aad mov sbb rcrl pop loop insl movsb jl mov cltd mov insb (bad) (bad) mov jmp push sbb lock insb jne jb adc xchg ss xchg inc cmp or cmp outsb fs mov pop mov cmp (bad) imull fnstsw (bad) and cwtl push sub dec sbb flds cwtl cs dec popf addr16 (bad) pop cs ret outsl loop jns imul aad andb jg push dec cmp mov xor push adc js fmul iret loop mov orps jbe lret imul insb movsl push jmp push (bad) roll inc fisttp push push and lahf and sti jnp fnstcw sbb jl lds (bad) dec stos dec fdivrs add push enter and sbb xor jg shlb (bad) push add scas outsl sbb sti sti sahf jnp pop push jl xor xchg aad loope dec mulb stc dec clc xchg push xchg cmp pushf sbb leave test jnp sahf int cmp and mov inc aaa xor push lea dec mov sub push mov jmp ja adc imul mov aad sbbl xchg cmp adc push pusha jg cmc push cmp inc mov pop xor sub jne or loope xchg xchg (bad) ljmp fdivs pop pop push and adc movsb ficom push imul xchg xor and jo cld jb xchg cmc and bound xchg xchg xlat aaa loop mov mov push mov cmc jne adc (bad) ds mov ror (bad) dec inc das dec push sub ret movsb dec jle sbb je mov xchg mov movsb lods mov lock insl dec lods jg adc xor rcr movl mov es aad mov imul out jb cmpsl cmp adc mov incb inc and sub xchg add lahf popa ljmp or and popf not fadds cld jne and inc aas inc pop sbb int cmpsb insl sti xor xchg lcall mov pop sbb mov cld add mov pushf sub mov pop or cwtl dec lods int3 mov push cmc jns ret int loop dec and mov mov mov cwtl test push push lea sub mov (bad) xchg dec jb sbb adcl add push dec fisttp in rorl pop (bad) pop push sub cmp cwtl arpl frstor adc lods data16 adc mov out sbb xchg sbb and loop mov ret sbb stos pop xchg lret or jnp test jp fucomp jnp push xor cli clc aaa jo mov ljmp js dec or jne repz jmp or hlt aad mov aas test push or push int idiv sub cmpsl (bad) and pop jge negb arpl cmpsb cmp lock pop nop ret scas lcall dec aam cmpsb push imul pop cli (bad) cmp pushf sub mov adc cmp clc xor pop lds pop outsl jbe mov inc jl or call pusha sbb jbe mov dec push repz xor ror sub jns jno xchg popa aas mov push les pop mov aad fisubrl mov push mov mov jge into mov fcompp stos cs fwait out mov pop cmc and lret lds sub or aas xlat push dec jmp cmp orl mov cs pop push and sub sahf fwait and push arpl test pop fstps loope xlat es mov mov arpl mov push (bad) pop int cld test push fstpl cmp ret and xchg mov pusha loop rclb push popf jb (bad) rcr xchg sub mov add mov xor cmc inc mov sub lea jl or and add loope out (bad) inc sub pop shl sbbl add aas adc pop jmp lods clc (bad) sub imul mov xchg mov xlat jbe dec inc fcom into call mov mov outsb aas xchg sti jle inc ror lods (bad) int3 in xor test jno or adc xchg (bad) cmp pop cld cmp lock mov xchg (bad) test add pushf out xor cmpsb outsb pop cmc and xchg loope xchg and dec and xlat sbb dec pop fcoml les sbb add cmp jnp nop enter and xchg jge add decl jp jmp stos lahf adc icebp popf xchg push mov sub pop cmp mov ror add ss mov ja in lret inc pop mov loopne cmp dec inc push insb cmp les sub out sbb icebp (bad) loope,pt dec or push mov or mov aas adc aas popa stos jl cmp inc push inc push rol jmp inc jmp mov inc outsl ljmp pop cmp or fiaddl sarl (bad) loope into fstpt imul jmp xchg repz hlt or (bad) pop push lcall mov jns fwait mov imul xor mov in or push fwait jmp loopne pop sbb push xchg cli push cmp (bad) inc jecxz mov fdivrs adc push pop inc lods jle out scas mov mov bound add or scas push jg sbb in jns and and fisub and cmc mov in (bad) aam sbb ficomp sti add pop jnp pop (bad) xorl push cwtl (bad) stos xchg xor pop jg int (bad) jmp adc jl cmp in mov mov dec outsb stos add cmpsl and movsl add inc jbe pop pop lods sbb lahf stos push or add outsl rclb inc add dec xchg dec adc mov nop aad push xlat mov (bad) cli in scas dec sbb test inc or leave or mov sbb enter shll hlt fdivrp cld aas nop sub sbb je mov mov jge ret sbb aas mov mov lret add dec std pop orl pop in and gs std test addb dec fstl or ret movhps lods ret dec add test dec das or xchg xor rclb push addl mov jge push gs push in jl add jmp in jge insb push inc mov mov stos cmp jp xor lods hlt test xchg nop or jmp jo stos ss (bad) add xchg pop je inc xorb in fs dec xor test out sarl ds lcall imul movsb cmp cmc mov mov imul sub xchg test push lock add or push hlt mov mov pop sub inc add push out shlb jp movsb repnz sbb rcll sub sub xor lahf movsl pop adc popf mov ds jl inc jmp xor mov rorb pop mov fld1 enter xlat pop (bad) jmp adc testl cmc or shrl mov rolb ljmp mov jns or sub mov and dec out jnp mov aad xor or jle fwait xchg pop stos cmpsb sub addr16 jnp and sbb inc ret sub mov sbb dec add arpl ja xchg xor pop sub and pop mov dec mov mov mov mov mov mul sbb call pushf push pop adc call jnp ds sub pop shlb clc fnop pushf adc out fbld jns sbb xlat pop and sub xchg into test pop arpl ljmp sbbl pusha insb dec loope add add push dec jne fs mov lea xchg out cltd test cld mov dec mull xchg sub inc mov sub xor icebp mov or xlat adc in jbe xor imul mov insb jmp andl mov add cmpsb and xchg dec dec in jmp add cmp (bad) push into bound movsb mov adc dec loopne (bad) mov cmp dec xor mov stos insl test leavew inc (bad) jg rorl fcoml xchg loopne push mov and add test repz je (bad) popf sub enter inc (bad) jo mov and push loope add loope iret flds fstps jp xchg ds fcomi inc data16 and jg popa stc pop sbb push fs jmp push push push dec je xchg test add sub aaa lea pop xchg xlat dec jnp cmp xchg xchg xor mov xchg cwtl sarl inc push ljmp insb lods push ja stos push movl and push pop nop fistpl mov jne sub loop jge (bad) mov fs or xchg (bad) daa jae or ljmp inc mov dec and int fiaddl inc jmp jb pop lods and aas add sub fs sbb xchg mov rorb mov sub push aaa pop mov inc jo fldt arpl sbb mov dec shrl enter and insb xchg inc xor dec inc dec or mov notl xchg sar sbb jbe mov mov lock (bad) out aam imulb pusha xchg aaa inc pop push sbb add and add cmc sbb push cmp jp test cs jge or std mov pop out (bad) mov out mov sbb mov push mov aaa dec (bad) (bad) (bad) in ljmp fcompl mov lock lcall xor push pop pusha (bad) push insl outsl cli neg fnstsw sbb imul mov ret lods cmp sub leave pop fsubrs (bad) and js mov iret mov loop test inc sbb dec hlt sub sti addr16 out cmc ror aaa and hlt (bad) jmp dec (bad) fmuls push fistp and shrd xlat cli fcoms inc fs sbb and lds fnstcw clc out loop mov ja push mov rolb icebp xor enter hlt dec sbb mov addb into scas movsb mov fwait shrb out and cmp adc dec das dec inc int3 aaa lods and sbb adc sub push stc cmc out insb sti and adc ret xchg cmp and cld rcrb sbb sbb sub jp add add and mov mov leave push rorl jp in or sub adc inc mov adc adc lea dec mov xchg xor xchg sub enter push call fwait fwait cmp mov push add inc call push or adc mov add rolb sahf loope xchg inc pop gs sub call cmp push sbb mov cmp (bad) mov ret mov push int3 rorb lods aad (bad) out nop out and (bad) and mov sub icebp lods int3 add and adc sti push jbe mov repz scas out outsb add push mov iret sub or ljmp mov mov scas jle out fdivrl sub xor in jns inc and jg clc xlat inc leave es adc jbe jne mov pushf cltd int testb mov pop fcomps sub repnz mov dec inc inc pop mov push sahf popf icebp xor adc cmp popa and aas movsl in adc out pop lcall shlb cltd into pushf pop sti xchg sar jb loopne dec xlat rorl push push insl sub clc mov gs nop mov mul fcomi add adc pop mov lahf sarl test mov lret je adc stos jecxz and jns fwait jge xchg nop lahf cmc dec nop cmp nop cli shl popf outsl cs xlat test fcomps (bad) or xor inc mov shrb jns cmpsl ret inc mov xor xchg add sub or jle cmc cmp mov mov fcompl pop in push test push mov pop inc repnz inc cwtl add loopne push in in pop out add pop rol push loope negl xor xchg fiadd inc mov inc cmp nop xlat aam sub addr16 dec mov adc lods scas push out aam in or or popa add mov subl mov clc fild adc jl or pop push fs jbe dec es lahf aas pushf fwait jmp test pop cld jnp loope jle cmp outsl ret jns push cmpsb andl inc dec mov je or and mov insb xor imul stc xchg sbb sbb pushf mov (bad) repz iret addb mov in add add in (bad) lock es gs hlt mov or push lret out mov push push xchg inc mov decl cmp dec dec inc (bad) jno mov ret adc loopne pop dec test pop mov mov add outsl dec inc nop dec jge pop adc mov jle lods xor roll fistp pop and je aas mov jmp xchg jnp mov (bad) mov mov fdivrl pop lahf mov aaa jnp subl insl mov loopne fsubs add jge dec add cmp jp sbb dec jle lret aad add lds mov dec stos jno movsl pushf push in and cmp inc fstpt mov pop movsl sub negl jmp add aam xchg jmp neg dec add pop int3 mov sub add cmc aam mov and lret rcr push pop cmp movsb pop lcall loop mov xlat mov pop xchg test add repz icebp mov repz push adc cli cmp mov imul ljmp sub cmp and aaa xor xchg das in in movb mov mov cmpsl and aas mov and sbb add lds add (bad) cld test or mov out daa test xchg sbb cwtl adc adc int3 (bad) inc push xor inc or fisubl lea imul xor dec inc inc push mov or outsl adc or (bad) lock pop outsl gs lds repnz clc aad aam cmp push mov pop (bad) jb pop fs int pop in sar fwait and pusha adcl psraw movsb enter jmp inc push ja jl push push xchg sti pop cwtl outsb dec push scas push pop sahf jnp or sub push cli sub insb jns (bad) fdivrs lods sub jnp call or ror je leave (bad) cli mov lcall xchg mov std cwtl xchg dec js outsl addr16 cmpsb push sbb jg pushf inc fs xor out push push pop mov (bad) pop in and pop lods data16 fs or adc inc jp out sahf sub fwait adc and cmp ss aam or push mov jbe cmp xchg push sbb (bad) pop xchg outsl push outsb cmp adc dec jecxz movhps loop rcl addr16 inc xchg std jae cmp arpl cwtl mov push xchg (bad) bound mov push jbe arpl jmp addr16 mov xchg add loope jle ret gs xor stos mov stc leave inc jmp pop sub fistpll icebp fimul dec aad lcall loopne and ss rcll test sub fcoml mov ja jnp or shr pop stc (bad) inc orl mov lea (bad) mov sbb push push stos call jg sahf push scas (bad) mov jmp and mov inc push push pushf push pop jno jl push out divl sbb jg adcb ret loope jecxz pop lret aaa shrl mov sar pop and inc lret cmp xor and push jnp adc sub mov push xor jmp fwait push mov lahf inc popl enter out mov les mov cmp test cmp and fsubp shr repz out lods xchg xor dec cwtl dec in mov push sub sbb adc jb xor push fdivs or pop xor jno ret cmpsb and clc push xor jecxz aaa addl nop inc xchg cld and or jno jno push dec mov inc or xchg mov mov xlat inc insb jnp cvttps2pi test int je out fst add sub push mov xlat es dec mov xchg inc stc in fucom fmulp in inc ss lds pop das cmp cmp ja sahf dec addr16 test es test mov bound jmp (bad) jp cld pop jnp test and pop mov cs divb inc jmp subl cs nop sahf (bad) js and cltd fxch insl test iret push test pop daa out int3 (bad) sbb fsubr mov push pop aas or cmp lahf and inc push sub dec mull push repnz mov rcrl pop shll xchg daa imul outsb inc add push mov sbb outsl or sar in gs and cmpsl and fistpll aaa insl xlat inc sub add jnp ljmp or sub ljmp add mov outsl or loope add in repz aad addl xor xor mov in decb lcall mov pop inc xor pop add je pop lods jnp inc fild or std add jmp ss mov cmp jecxz or or mov jge xchg dec cmp inc jmp arpl inc shlb mov fnsave (bad) hlt mov adc hlt fsubrl push movsl orl adc fs xor js movl mov out jmp add cmpsl add scas jne cs cmp lods popa fbld and mov jae sar in pushf test fwait dec sub insl push (bad) je mov rcrl ret xchg mov pop and (bad) ficomp or mov les lcall icebp inc inc mov pop cmpsl lds bound nop jnp lahf sub popf inc push outsl push test or dec mov das clc pop loopne adc je gs in xchg mov stos and mov or stc inc fs int lods std cmp jecxz test dec fiadd stos das pop jne cmp outsl fstpt popa and mov ds or mov out int3 enter dec cmp jb in fwait xor mov rcrl dec push outsb adc jnp enter jmp push mov cmp mov xchg inc xchg cmpl sbb adc ds and scas add shlb aas pushf push rclb pop out sbb inc push inc (bad) sbb jl adc int push adc inc pop add push push dec cmp push pop (bad) pop xchg int and xor mov push xchg mov pop jecxz mov add jg int3 lock aam xlat add mov xor xor xchg xlat push and cmpsb popa mov dec jmp daa jg push xor or mov loope lds mov push lock movsb xor enter sub stos push push cmpsl inc fcomi fwait je sbbl int repnz or mov in popa mov adc and rol inc xchg and xchg push xor into add stos int3 pop imul sbb add loopew mov pushf jg mov enter aam xlat mov lahf test in rclb sub sub jnp sbb or ds int3 in and sub push cmp or jmp jmp aad lods (bad) lahf cmp cmc cld jmp mov xor push aaa mov int cmp pop das jb bound lods (bad) enter outsb out lods mov cmpsb xchg (bad) cmpsb les dec mov jecxz xor sbb in mov or ret fnstenv xchg lcall jl (bad) clc xor (bad) adc sbb mov mov iret lods js adc dec jae pop sub sbb popa (bad) mov movsb (bad) jl iret and and and out ds mov repz jp adc call pop pop lods xchg call test mov leave mov enter pop cs aad pusha dec add xor pop loope mov neg outsb cs jae xchg repnz popa cmpsl popf popf adc fidivr jl lock lahf (bad) nop clc adc mov sbb imulb aaa shrb adc sbb mov bnd out pop mov out lods pop mov pushl add mov dec pushf out xchg ret add stos and out clc dec mov lcall pop push pop pusha jg xchg add push imul jmp in pop ret add clc cmpsb cmpl xchg add sbb ja mov test in scas mov push xchg jp mov jne and mov loopne or mov sub and jmp mov adc ljmp loop (bad) xor int3 and adc xor cmpsb (bad) mov add or ljmp inc or push jl in push cmpsb fadds in mov shrb sub jne mov faddl hlt popf cmc test pop push shrl pop ljmp lds or ret pushf test enter aad or dec pop mov pop out xchg push cwtl adc push add insb add inc inc push mov push or add ror or icebp outsl aaa inc mov outsb lock insl lds mov in sub inc adc lret test mov in pop xchg push add imulb mov mov cmpsl push jns cmpsl ss (bad) in push fwait mov pop orb sbb movsl add ret (bad) mov pushf shrb mov bswap daa shll mov pop jo outsl dec lcall pusha jg sub push in lcall insb cld xor xchg inc divl push lret and jg add out xchg or jmp mov pop popl in stos (bad) lods push pushf dec xor packuswb in nop push xchg cmpsb sarb cwtl ja lock rolb and lcall add inc int3 gs movq fcompl in cmp (bad) mov jl or sub cmp jbe hlt sbb dec test or push shlb cmp fisubl adc xor js adc jp or data16 cltd test xchg add xchg inc jg cld push sub js cmp out xlat dec into pop leave fimul inc in lcall xchg fdivr sub pop dec inc mov repz push clc das jecxz das add push mov es dec mov and iret sbb adc sub aam xchg aam push repnz fwait xor dec into repz xor orl pop sub adc jge (bad) out icebp mov jne imul repz xlat hlt hlt out cmpsl xchg int3 stos jge cwtl test insb dec sbb inc jge fsubrl (bad) inc sbbl js cld push pop dec fisubrl data16 sbb xor pop inc aam jnp mov stos xor pop je ljmp jo adc dec lcall push xlat dec (bad) push and mov xchg into mov loop inc pop and insl int cmpsb xchg (bad) pop stc enter jg daa out popf jge (bad) cmp repnz dec out sbbb fbld xor push scas push sub je cmc lret insl cmp mov mov out insb xchg pop fnstenv xor or (bad) cmp (bad) adc cli cmpsb test push sbb pop or roll scas mov ret adcb cltd sbb fidivr idivb jo daa inc imul push sbb inc mov xor mov stos cltd daa clc pop mov dec mov cmp lods sub ljmp rclb mov dec cmp popa and addr16 sar sub ficompl test adc jecxz mov ljmp xchg int mov push popf xchg repnz xor jle js sbb repz and sub sub and sbb jmp stc mov mov push lahf test call jo cmp mov fwait subl sti jno in add sub test push xchg sub push iret add pop push mov jp add dec jle loop in jns popf xchg xor push fs mov dec leave dec mov adcb add mov push push xor push jns loopne repz adc mov bound push and add iret hlt push jae in outsb sbb sub push cltd xchg outsl and xchg mov je xlat shrb fmulp mov adc pop sti inc mov push in push pop lret mov mov dec mov or test jl cmp pop or out sub out adc pusha cltd cmp push mov lods ret adc aad sbb iret jne shrb jg das jne rorl lret push mov test cmp push ret std js sub mov aam mov cmp les inc leave mov lahf sbb jle inc cmp cli jp lock out fisub mov leave fimull jmp fmulp pushw daa mov nop lock push mov jae jae ficom push adc push das mov add inc popa jp pop cmpsb aaa sub mov push outsb fs pop add xor std xchg jecxz sti shrl stos jne add daa jbe mov ffreep insl fsubs sbb or adc add sub into add ljmp sub in cmp lods cli faddl ret mov xchg cmp sub andl imul test mov pushf inc test add xor jb dec aaa leave popf mov sub mov sbb mov pop addl fildll and push ss mov rolb jne nop mov add icebp ja jb xor dec inc inc lcall mov sub sti imul dec in jp loop add divb es imull and shrl jl sahf xor fs inc addr16 jmp cltd nop aam ljmp adc push push icebp fistl std das into cwtl push adc clc scas ljmp pop or mov mov dec jae inc out lret enter out xor fnstsw das xchg or or push rclb fildll add or add sahf inc push jge icebp clc test ret dec testl mov push es rcl cmp jae push sub add xor rcll jae jmp rcrl lcall data16 jp adc xchg lret iret fstps lret nopl (bad) mov jnp cmp xchg lea nop aam and mov xlat mov testl inc mov out dec int3 imul inc repnz cmp dec xchg js stos lcall cmp rorl divl cmp push pop sub fadd jmp pop insl negl aaa mov push mov loope ret and dec loopne adc adc call (bad) addr16 inc push hlt test in movsl jmp mov out dec imul out ljmp pop imul das shll inc jl xchg unpckhps dec sti cmp mov dec and pushf call and mov (bad) sbbl (bad) bound add stos push inc fcomip imul push mov popl (bad) (bad) pushf div jge xor lahf inc cmp ror sbb pop cmp jne cwtl fidivrl mov sbb inc sbb out or push push insl xor pushf jp ficom int3 leave fs lret rol mov popa das add mov jl mov (bad) cmp inc push sahf pop mov and cli push jnp in jecxz popl adc fsubr cli js jp lea pop stos cmp push sub (bad) xor add (bad) adc push sub jmp sbb pop or mov in sub movsl cld add jmp scas test (bad) enter xchg nop mov stos lret fxch adc std or loop push fidivrl pop push pop loopne mov lret movsb clc cld outsb or mov test repz mov imul das dec xlat stc sarb push stc xchg clc pop sbb xchg pop mov mov cmp cmpsl std lods mov daa xor scas dec popa push mov sti and inc (bad) (bad) bound imul and fadds fildl fldt jmp dec stos xor lret out sbb cwtl jl sub inc mov mov pop std repz push push xorl push flds dec inc mov xor addl fldl xor je ret dec ss outsb nop lahf mov and or jno clc sbb lret scas mov fimul vmwrite mov shrb mov fstl add bndldx aam mov es mov fsubl mov mov jle and push fbstp mov lret test push push push add popa popa jge mov adc push call and movsb add test fisub push mov xchg aad push lret je dec fs jns cmp inc cltd jg sbb mov mov sarb sub les push or dec (bad) rcr and lods adc inc leave mov sbb cli inc sub mov insb xchg lret add push xlat test mov xchg mov inc push fimul js test xchg pushf mov stos pop fsubrl sub (bad) ljmp movsb mov push jo cltd div gs leave jmp in dec outsl sahf cmc pop mov xchg push stc push xor jne and stos popf fdivs aaa ja bound inc jne scas cmp xor mov test sbb cmc lds xchg push lods das xchg (bad) daa push xor cs loop adc sbb inc lea insb pop pop mov cmp inc les mov sub cmpl test pop rol cmpsb jl pop adc inc (bad) add les adc sub nop pop repz int pop imul test (bad) cmc adc lock push sub addr16 ret test aam xchg cmovb cltd mov cwtl andl xchg jp push xor in popa pop pusha les aas push cs cmp lret int imul lcall xchg jns jl loop clc les in inc inc or dec inc ss rcll dec adc pushw dec leave movnti or dec mov call stc outsb sbb fist cmp out (bad) mov imul sbb push adcb (bad) lock jnp fldt lods sbb andb mov aad xchg ret fnstsw jb (bad) ficom xor outsl pop (bad) dec and (bad) jp sbb insl mov cmc icebp xchg (bad) jb or decl mov cmp mov in fwait hlt dec sbb enter dec dec fldenv inc mov jle call add in ds in leave sub push adcl pop ret faddp mov (bad) mov addb js cs push adc test add insb incl aas ds and xor gs (bad) es and repnz (bad) popa adc cmpsb and rcl sbb arpl je fwait mov push sbb add cwtl jae push addr16 xchg imul icebp pop cmpsl xchg adc negb or sub jmp and xor jecxz and popa jns aad inc add fwait clc adc loope adc sbb mov or arpl ret inc in push inc push jecxz test pop push movsb push mov test xchg or cmpb notl std xchg repnz add cwtl or repz mov ja test fstps add dec int mov stc dec jmp setnp dec pop pop notl add pushf test movsb sbb mov pop adc add jp jne jle or lahf mov inc mov rcrl popf jno into adc push imul insl or xor rcl add pop leave cs sub pop subl (bad) dec mov add push jns mov mov lahf push lahf cs loope cmp test daa fimull out repz out in xor mov je dec xchg mov outsb sub (bad) jmp icebp cmc loope dec jne or aaa jne push scas push add mov aam pop push lock aas sub popf iret sbbb insb fcoms inc jb or xchg pop cmpsl mov divl icebp outsl movl (bad) (bad) xlat jecxz ret cltd fadds xor cli pop xor adc je sti je mov aam aad cmpsb in inc dec test push push cmc cmp je int3 mov out scas adc in into in sub cld cli lea jo in nop sub jle andb push ds flds add sbb sub lahf mov gs sub (bad) xor movsb ret rcll enter push mov push jmp xchg icebp or icebp imul push or push xchg je daa sbbl sbb sub cmp sub fs xor mov xor (bad) sub jb js out cmp (bad) mov and mov into and push dec sbb cmpsb adc mov orl mov and inc (bad) cmp adc sub mov or out xorl add pop cmp out adc es jg sbb jo inc fnstsw push mov out fnstenv mov dec mov ficompl jecxz cltd mov andl loope repz jae inc (bad) adc inc pop add xor (bad) jmp sub movsl clc fwait push mov mov and gs in cwtl inc pop sub mov add push or movl or imul xor jecxz leave dec nop pop call loopne fisubr repz xchg xor push mov xor and jno icebp jle push mov sbb (bad) (bad) out sbb cmpsl mov cs stos sub or pop xchg lods and pop xor sub rcl adc rorl xorl insl popl int3 pusha push push ret shl in sbb xor mov inc mov and (bad) xor (bad) jb std mov cmpsl fcoms mov ljmp push aaa imul jg sbb std movsl pop sub push data16 out idivl lods add jns mov jge inc xchg push xorl and test lret lahf fisttp pushf sub pop out or fistp jnp xor ret daa int icebp or mov insl and mov into or xor sarl out inc push mov jno dec jnp outsb sub xchg and pop jnp (bad) cmc push (bad) divb pop cmpl jle dec in inc stos sub pop xor jns sbb stos and inc pop mul out nop div (bad) mov pop jns fcompl repnz mov mov iret das mov and packuswb mov stos inc push loop loop scas icebp data16 pop mov (bad) cmc add (bad) xchg in pop add daa cmpsb je lret lcall sarl dec mov fdivl cmpsb jb cs and pop sbb or jae pushf in lds negb popa xor ljmp lea push jg test jmp push mov dec sbb pop sub sub dec xchg (bad) ficomp push dec jae,pn pop mov rorb push adc fldt sbb inc jg cmc adc sbb gs insl inc and loop push add call das lods (bad) mov in adc andl cmpl sub les lcall test mov mov or fisub push rorb mov divb jp fistl jl scas push insl xchg jb cs mov mov xor adc or pop out (bad) jb adcb fstps aaa dec inc jno out mov outsl gs inc mov mov (bad) js push popl pop mov aad pushf adc xchg mov push sbb (bad) pop pop pop dec test stc mov test mov and lret call and aas jne outsl imul push test push push stos dec inc xor rclb push mov repz aaa or lods lcall sub push int (bad) xor push adc dec lret icebp mov sbb jl dec (bad) and mov mov test aam cmp sbb in mov jmp jo pop pusha (bad) push xchg test fistpl mov (bad) icebp inc push shll mov pusha test (bad) pop mov (bad) lahf lcall xor fisubl in jmp xchg mov mov fs push pop test push in fwait repnz sbb fist insb hlt or ret (bad) xor pop arpl mov fisttp push mov fwait hlt mov sbb inc fstl pop mov sub mov lret dec inc xchg jne imul cmp mov into shr loope enter push pushl xchg cwtl sti cwtl loop std mov xchg out lret add xchg or dec pop adc push adc jb pop sahf jb cmp clc out sbbl mov cmp mul cwtl mov sti jle outsb dec cs xorb cld fs mov jb fsubr mov leave fmuls ja test stos pop out pop dec lock push in xchg xchg cs ljmp or out cmp dec push xor add add cmp mov add jnp or xchg lret mov push adc and lea leave push pop dec je cmpsl out jmp leave and ret sbb mov xchg inc xor test mov arpl dec movsl add ret cltd or jns lcall vmwrite mov ss mov lret out mov push cmpsb fadds loop enterw iret movsb scas out pop fiadd xchg movsl pop cmpsl imul (bad) icebp sahf icebp (bad) iret sub xchg adc xchg xlat mov xor cmp cmp mov ds mov sbbl ficoml dec sti jbe mov stos push jecxz xchg aam and add jns stc lds cmp jmp and jl (bad) pop fsubrl pop rorb cmpsl dec pop rclb xor mov mov pop pop test lahf mov pop mov int3 mov lret mov in jbe mov andb push arpl adc addr16 insl inc xchg inc jae mov ret fldt lret mov dec int cmpsl call mov sbb push jle jne mov xchg push (bad) sbb mov dec ror loop (bad) mov cwtl das adc sub pushl dec sbb sbb lcall addl cld pop add negb pop mov mov fiadd pop push jmp mull xor pop loop inc sbb pop loop popf and adc mov out (bad) enter icebp repnz pop lock scas adc mov js pop adc pop test lahf add cmpsb mov jle sub cmpl lea imul pop ret fwait jno int3 lds mov aas divl jns pop sbb movsl bound jle mov dec stos shrb mov test jmp test adc push (bad) iret xorb lods test inc cwtl mov sub pop std js std mov push jno sub sbb push push cwtl addr16 cmpsb cmp cmc adc jle lods (bad) fmulp hlt bnd jl add xchg icebp cs ljmp (bad) push in mov mov push fwait and fldl in cli inc adc insl movsl jo insl jle mov fsubrl add in pop jle lahf outsb stc push (bad) in insl insb adc les (bad) les stos shlb daa dec div out (bad) sarb dec mov rorl cld dec into and sbb lahf mov sub fstp out mov xor fisttp jns daa shr ljmp mov subps pushf mov into sbb loope xchg push mov xor mov xor mov dec (bad) cs leave add inc cmp xchg ficom dec (bad) push or push xor scas rolb out xor push and lea sub into (bad) lea adc hlt roll push inc or sbb outsb xchg movl ja test or jl fs enter jo sbb stos mov cmp (bad) push pop sub ret mov cmp roll add push xor and mov lods out or mov sub pop push sbb test jbe sbb movsl pop lods mov cld subb stc mov jno mov push mov lds inc arpl inc fimul and into in mov jp insb and cli addr16 mov jnp add cmpsb adc out (bad) push xor lahf or inc inc test imul or hlt popf push mov ljmp pop sbb jge push mov mov daa add mov xor sbb pop cmp adc (bad) aaa test sbb jno jno and xchg leave add in jb dec outsb adc cmpsb jmp cwtl mov notl inc dec mov in sub ss adc xor (bad) mov std cwtl ja mov mov jne outsb sarb std std sbb (bad) mov mov dec pushf int3 dec add ror dec loope scas out sub jmp scas jbe and ljmp ror adc fdivr loopne ljmp cmc pop test stc call mov faddl loop cmp cmp shrl rcll and pop pop ds mov xchg pop push sbb jae aad dec add test shrb mov fs test sti push jbe es (bad) aas sahf or cmc sti psrlq xor ja sbb (bad) xor push jo add lods imul imul push sbb sbb sub shrl cmp dec mov pushf jmp push sub (bad) jne arpl push adc insb adc add (bad) fistpl cmpsl in (bad) or das (bad) xor jg pop icebp or xor inc repz jbe push scas fsubrs repnz or and sbb test sub jl lret fwait mov stos shrb push cltd xor loopne ret call mov rcll loope dec lods lods lea inc sub push (bad) xor addl lea pop sub arpl repnz pop out push mov xchg jbe jl fnstsw (bad) dec (bad) mov dec insl pop pushf aas cmp pop xchg push jg mov jae and rorb jae sbb push jg das dec out fstsw sbb (bad) mov dec pop (bad) push jmp adc (bad) jp mov pop dec popf push movsb ds push loop dec and mov add mov sbb xchg mov out rorl sub mov push and addr16 xor (bad) mov loop push xor xchg ret rclb aam dec in fnstenv mov out imul loopne inc in pop in sub in or add scas icebp dec fisub daa sub mov and push cmc dec and pop (bad) (bad) mov enter mov pushf adc sub popa insb into es adc dec dec out mov mov pop test movl and jns gs jne jg stos add mov (bad) ss and fdivrs mov ret fist and in cwtl or and jno insb (bad) jne cs and push jecxz (bad) aas xor cmpb xchg rclb sbb cltd divb daa adc loopne pop sub cmp dec mov rorb sbb xchg orb pop xlat int mov outsb dec mov scas pop cld sbb test add cld adc xchg xchg xor lods jmp jo aam xorps dec popf mull jmp mov sub js mov mov js les add xchg mov imul mov sub (bad) and iret pop les push or pop dec (bad) icebp fsubrp jle js insb stos push pop mov sbb dec lods pop pop dec mov lcall mov shll out or pop insl add push mov sub inc xchg in push fsubrp inc out ljmp pop in push and jp inc (bad) aam sbb stos sub fs inc arpl pop in and mov mov pop adc mov jle pop dec or dec add pop jne xor out andl call or xor ds pop push dec inc scas jno mov jns mov sub inc clc mov push mov ds rcr mov pop cltd pop mov dec mov jg and lahf ret push jno jle dec aaa pop lahf add icebp dec dec out fidivr ret std ud1 xchg and pop lock jl add xchg movsb jbe neg divl mov out jae fisubr lods sbb inc jmp jecxz xor movsb mov lds pop inc mov cmp jns scas sbb jbe data16 sub inc repz mov pop jnp push jo popf xor rorb push mov and pop pop repnz xchg imul push xchg pop jp add jmp jg push adc jp ja jle stos nop sar daa lahf and lock lcall dec repz aaa mov daa lret out inc and push loop aad pop push push sub icebp push pop movsb enter cmp dec std into lret roll mov cld iret cmp cmc (bad) and rorb sar or scas sbb pop out mov test xchg and inc mov mov pusha ret hlt int3 shrl and (bad) loop es pushf mov ret pop sbb lcall xor pop jle pop bound leave xchg sbb or cmp pop cmp les cmp test cmp shlb sub js mov in adc push aaa leave (bad) int outsl mov sub clc dec jecxz cltd sbb fwait lcall dec rorb cmp jb ja pushf jae or sub pop insl cld push ds push pop inc pop mov lret mov cmp shrl sub mov and shr mov into push imul es and dec push push sbb cld fwait pop orl call pop outsl cli sti xchg (bad) add dec mov push stc loop sub outsl pusha push mov icebp pop xor (bad) fcompl ror std pop adc movsb adc repz mov adc fldl lods adc mov (bad) ss sbbb popa add cltd adc jnp push cmpsl in xchg mov sub imul jmp jp pop or mov js sbb or mov test or mov mov mov (bad) ja fstps outsb mov and cmc mov inc inc xchg fcmovnb lods and cwtl inc mov inc xor shll mov sbb inc or mov jmp mov out fwait xor cmc mov scas xorl mov and dec inc shrb xchg xor adc fmulp mov aaa cmc push and lods xchg lcall or cmp cmp mov and adc loope xchg jns ja outsl shlb ljmp lret aaa push dec das jmp in sub sbb or (bad) jo jge jo dec daa shrl in enter lds das cltd mov lret dec sub mov dec sbb test or pusha inc mov inc (bad) cli aas mov popl insl ja popa xchg jnp xor dec aad xor adc (bad) gs enter dec push and push fsubp xor fsts inc fxch mov xchg test sub dec lret loope and mov and pop dec iret dec icebp shr not int ror fstpl push fcmovnu mov fwait pop hlt adc repz push ret jae mov push pop inc sub or mov jmp pop sti arpl scas call add mov dec add inc pop add or push in dec dec (bad) jo mov cmp sub jl (bad) scas jne cmp stos (bad) push mov iret xchg jo cld adc pop adc int pop sahf test push sahf cmpl jne sub fstl jge jmp dec or or (bad) fs sub mov insb pop pop and pusha imul or push mov lret lcall call cmp mov mov mov data16 lock ret xchg mov js xlat nop fs inc jmp aas add cmp cld add xchg inc inc sub es cmp add pop dec pop xchg mov add icebp push pop dec pop mov test stc lahf leave sahf sbb fsubs sbb cmp dec jecxz imul sbb (bad) loope pop lods mov push repz push push xchg xchg cli shlb mov lods fs jl je mov idivl shl bts (bad) int3 in dec xchg lds aad add xchg roll cwtl (bad) lret lahf in jp rolb inc js mov sarl sbb sbb push ret push outsl mov jecxz lods push movsb xchg sub inc xor jno mov (bad) jo jne insl inc and cwtl and push push aam aad mov icebp (bad) packsswb gs (bad) je mov mov mov scas add ss movsb aaa xlat shrl sbb (bad) pop add sub push pop xchg lods xlat pop jb scas ja (bad) aas inc mov adc jmp pusha mov lea adc and jb lds movsb jbe jl push stos jl leave or icebp push loopne cwtl aad fldl mov and pop inc enter scas or pop mov mov and mov inc jne scas push fs sbb pop (bad) (bad) dec add mov and xchg mov push inc pop mov mov and inc aad sbb faddl add lret add cld enter sbb jmp ret lret pop dec or mov mov lds negl dec xchg pushf inc in inc aad cmc loope mov pop test adc das dec es loopne cmc jbe lret cltd pop pop adc ljmp and (bad) stos mov push sbb fcomip mov pop out scas sub sar out mov loope add inc mov fcompl jge lret out push dec popf pop jp cmpsl call cmp jecxz mov loopne into mov int decb xchg icebp outsl call jno or lods mov rcll sti sbb mov mov push push ljmp add cmp push xchg repz repz push ret mov xchg fsubrl jle push push jb aad xchg mov add cmp test push mov and in test inc adc out (bad) out jecxz (bad) enter aas int sbb hlt dec in push fs sbb inc push dec fidiv ret rcr sub xor (bad) aaa popf in rclb jne xlat or inc and daa adc (bad) jno mov dec jbe xor mov rol cmp xchg ss mov xchg adc jmp test inc xor xchg fnstcw fwait pop ret mov pushl dec imul scas add pop lcall xlat xchg repnz mov in fistpll addr16 xchg add mov mov cltd pop mov dec sbb add xor fdiv mov (bad) stos ss mov and add push rcll push lcall xor sti xchg pop push jecxz dec scas (bad) lea mov fs pop jno loope and insl call fnstsw nop hlt fistpl fwait nop push or leave insb dec pushf fwait gs xchg push cld leave pop fstpt inc push stos adc push ja loope push aas jae mov adcb sub jl repz jp sub mov lods add and repz add testl adc jbe mov scas or outsb jno jae (bad) enter lods mov cs xchg fdivl or leave pop add fistl scas jo dec jg icebp popf arpl data16 push mov xchg or dec int3 aaa and add les and fsubrs lods cld fwait imul mov mov clc and int fsubrs dec jg mov insl stos mov imul xchg xor imul cwtl jnp sub xchg sub enter ss imul setp shr sbb jno and js fs std pushf ficoml out pop and push mov pop test (bad) stc stc popf faddl es dec push add mov dec hlt pop mov pop repz xor xchg adc mov scas in in cmp mov jge jae jae dec adc fs cmc scas jae das sbb xlat sarb ss dec jle test pop (bad) arpl sbb jns add fwait and out js bound mulb xchg (bad) xor pop std adc rclb dec popf or or xor out in adc push pop cmp mov (bad) mov aad inc and lock clc mov jns incb stos cmp and cmp lods mov and and insb mov sub ljmp or lret sub mov dec push xor dec inc imul orl test or inc repz push add pusha mov mov sti dec or push xchg test ret cmp dec push mov adc je aas pop cs and mov xorb or jnp sarl lret pop mov leave aas orl lcall test mov ret mov mov push (bad) mov lahf in testl mov cli dec mov enter jae jbe stc aad push test dec xchg daa or inc xor or sarl pop dec and jno clc mov mov sbb xchg push hlt adc adc test xorb cltd es sub mov cmpsl sbb std and pop sbb xlat test cwtl fstps adc popf and mov or adc cmp push sti pop into add mov (bad) xor mov cltd cmp outsb jle fistp xchg jle mov xchg sbb push in dec mov (bad) shlb mov push inc negl lods popf mov daa sbb inc jo ret mov pop jge jge dec dec (bad) mov lea stos arpl negb (bad) dec imul mov mov test clc shlb pusha fcompl repz fsts sbb cwtl mov daa pushf push mov ret mov call xlat call push adc gs into nop jmp mov add mov pusha test add stc shrl ficompl xor sbb (bad) jbe push (bad) sub data16 xor jne into add pop loop mov pop pop (bad) jno je (bad) xor push sub sar xchg adc pop rorl sub (bad) loop leave loopne push out fwait ret lock aaa sbb sarl (bad) insb mov inc arpl (bad) in fs adc jge fwait lock sbb mov leave mov aas scas lods mov ficom dec (bad) out or cmp int cmc sub lods (bad) out hlt popa out ss dec inc mov push mov scas fucomp jecxz lret pop pop cmp xchg mov push push fimul ljmp and push mov inc (bad) out fistpl mov ret sub cmp test cwtl inc jg mov jnp fwait pop push mov fwait xor mov into stos mov (bad) xchg in icebp out pop cmp loopne imul (bad) pusha loope (bad) fcoml sahf fadds xlat addr16 dec mov push sub int3 mov ljmp xchg pop insl int sub push mulb inc add hlt call adc dec jl add or mov xchg dec sub add push aam push xchg pusha das int3 xor addb sbbl add dec clc add js out mov loope push mov fs jns cs or xchg cli push insl scas jecxz dec pop sbb xchg rorl xchg divl xchg je sti aad lret fadds test sbb mov and fildl adc adc and popf dec imull loopne roll sub sbb jl lods mov inc andl push mov cwtl and outsl lods xchg jae loopne fdivs enter adc pop or push (bad) iret adc in lods cmpsl mov sub fbstp mov test dec sbb fcomps nop xlat je pop outsl (bad) jp sti mov push mov inc jno push lods xor stos ds lea mov xchg sahf dec and jb mov dec out (bad) mov dec loop jae ret movsb rolb mov jl std pop lds (bad) aam incb fwait xchg xlat jmp or pop dec movsb and ds imul mov pop and inc sub lock pop nop mov mov jl out adc jl mov (bad) dec or sahf out adc xchg push (bad) jne es ds aaa (bad) jmp dec mov add add mov push push mov inc adc xlat fwait push jg out ss ds jmp cs out and fcmovnu xor shrb and jae mov in scas cmp add js or jl lds int3 mov movsb xor adc scas or les incl push mov andl inc aam fidiv cs or xor test mov sti mov iret adc stc jae and cmp cmpsb dec jae xchg jg sbb inc (bad) pop pop into lods addr16 adc pushf mov cmc loope jns arpl mov xchg rcll scas or scas sub bound mov rol xor ret movsb call cmpsl int cmc add sub jl add jmp and jnp xchg mov adc jno add repz or sub dec test dec ret xlat dec mov or jbe (bad) and sub imul popf adc inc sub dec push bound ljmp adc cmp push mov xchg in push cwtl xchg jg sbb mov orb and test or fwait mov test inc mov push xor xor das test sbb pop dec dec test enter push jns (bad) cs mov leave lahf xchg inc ret out inc xchg loope lahf lock mov lock jl in (bad) in (bad) dec sbb or jle inc dec xchg jg mov push mov sub dec lcall jg mov gs mov (bad) jecxz (bad) cwtl adc (bad) xor fcoml out std sbb sahf xchg ret and (bad) movsl lret in and lods sbb lods jns push xor adc insl adc fistpll jns mov repz mov loopne (bad) mov adc cmpsb aas jmp or nop lahf test loop lahf xchg lahf xchg ljmp mov sbb movsl jnp jno test push ljmp dec xchg in (bad) in lret insb xchg test cmp movsb pop negl andl int3 mov jmp in sbb mov jl imul and pop mov into js stos mov (bad) inc movsl mov jle mull mov add jle or push mov adc test popf jb rcrb xchg xchg inc scas cmpsl xlat popf cmp xor or cld mov es mov mov ret rolb stc adc mov clc sarb test (bad) in mov xor add test xchg or push lahf fildll shrl or loop daa adc pop pop stc jmp add xchg pop les stos insl cmpsb les xor pop cltd push dec mov dec mov mov js jmp fdiv cmpsb push mov cmpb frstor pop jne mov mov (bad) into cmp (bad) xlat jmp dec sub mov jo stos pusha enter jns fwait push cmc push push mov adc sbb test movsl jg fisubl dec mov fnsave mov sbb loop jmp dec into jmp and or inc insb in loop jb aaa xchg mov fwait xchg pop sub loop fs rcrb pop mov add push out jmp xchg loop (bad) mov (bad) dec xchg cmc jns (bad) ret fcoml (bad) loope rcl cli adc push jle dec and cli xchg push das (bad) pop push mov mov push lcall lcall (bad) fstps mov xor fldcw andl mov sbb ds dec popf cmc cltd outsb repnz repnz outsb mov idiv out push mov mov mov lea fdivr cmp pop dec stos cwtl into cmp sub lret mov test jmp xchg fwait iret popa pop mov stos push mov inc xchg sub sub mov xchg fimull cli fstps sbb cs add inc decb mov xchg nop out addr16 mov inc mov or mov or jns mov fwait jne xor pop push cmc sub out gs out cmp xchg or inc add xor pop push pop mov popa add jl sbb iret mov inc jno and test lods je push pushw xor jns xchg cmc add mov jne cmp jecxz adc (bad) xchg xchg scas gs push mov pop sub jmp stos jae sub imul sbb into imul adc jmp push pop cmp (bad) stc loop add push jmp xor fldcw xchg test mov xlat imul nop add loope lods arpl push and or sar shr aaa fmull push jo sbb (bad) ja push (bad) sbb mov test sub cmp sbb add stc mov mov lahf idivl pop jmp cs fucomi push xchg pop (bad) jle and xchg jmp andl popf dec push daa pushf sbb cli add (bad) out popa rcll cmp mov push mov pusha std sbb out mov add in sbb cmpsb pop enter fs sub cwtl mov mov aas es and fsub inc pop into cmc mov lea cbtw jno dec in and test mov lods ret lret in aaa movsb fsubl mov in add test fisubrl sbb sti xchg push repz sbb jnp test adc mov xor (bad) xchg xor jbe fsubrs call add fnsave outsl jbe test cmp mov sti cmpsb and mov fs mov rolb (bad) jns rolb movsb jns shlb fwait push push cmpsl pop mov sub stc mov pop cwtl clc nop jae sarb adc push xchg dec jmp ljmp pop mov sbb in pop or test scas push add mov imul andl cmp mov jno push add pop inc (bad) inc out int3 add xor lock pop lahf push mov stos mov add and xchg jno out mov fdiv sub push js stos xchg mov inc fiadd xchg pusha mov mov mov ret sbb pop dec ds cli mov mov addr16 push setne adc sbb popa pop mov pop pop aam xchg test sbbl int mov jne pop add jp xlat dec sub scas push sahf out add cs fsqrt dec dec add popf negl push and mov or mov xor cs xor adc cmpsl ds dec mov jp mov sub pushf rcr das pop push add add add xchg in xor (bad) ficompl xor cmpsb jl push outsb imul jae dec out sbb cmp push lret decb ljmp jb mov mov cmpsl test mov mov mov addr16 adc inc (bad) xorl orl dec sub or fnstsw dec cmp iret gs aad and icebp dec sti push and leave mov xor push lds jecxz cli mov mov inc mov xor js or fbld into jge pusha je setno push call jg out jmp push adc in stc pop aam jb (bad) adc scas jp mov adc pop jp mov mov adc adc imul test dec cmpsb (bad) repz adc cmpsb sbb test inc iret mov mov movsb ficoml cmp jmp lods inc inc jo repnz or hlt pop ret mov (bad) rclb (bad) test (bad) pop push aam add dec adc jg sub movl xor lcall out stos lahf xchg mov hlt dec sub (bad) jnp cltd pop pop das mov insb push test jnp loop or std (bad) push dec jo in subl daa jle movsb jg addb adc fnstenv test aas test loop xor addr16 or sub cmp xor test lea xorl mov (bad) test xor or mov mov cld js xchg or repz xchg and repnz jecxz bound pop mov dec mov xor rcrb inc push inc ficom ret push push out ret mov adc jmp mov xor jnp cli shll movsb pop push sbb jnp (bad) push rcrb jno out ds sub push dec push mov xchg scas inc sti addb shr daa sub cmpsb lods or mov iret leave andb daa sbb xchg add push subl xchg repnz xor and lahf int3 js inc dec inc xchg cmp pushf stos (bad) pusha jae sub jecxz add clc lods cmc xor (bad) jmp int pop cmp lods mov ret ret test push daa iret ffreep pop movzbl pop and cli mov dec loop jle fdivr pop add out sbb dec or fwait cmpsb lcall ds rolb inc ja cmpsb mov push (bad) push jl inc ljmp mov push test sub mov enter std fisubrl push loopne lock dec push pop xor xchg sbb test mov test xchg pop pop cld icebp pop pop mov and lea xchg jg (bad) rcrb cli add jecxz roll and ret jnp cwtl adc out adc sar out popf inc or push insb shr scas or cs jo add adc jbe ljmp sbb repz std sub notb jnp fisubl sbb jmp xchg scas mov leave repnz ljmp loopne mov inc or stc repnz mov inc das or stos pop mov xchg mov adc gs fs cmp icebp fildll fs push jne sbb and fimull adc ja push in por adc jmp push inc icebp xor xor xchg xor out arpl push popf jno pop xchg sub jg or mov push inc mov mov ret or mov cmp inc dec imul lods iret push inc mov aad and adc xor mov push aaa push xchg aas and jmp je mov fidivl or loopne (bad) xchg sbb xchg ja imul (bad) pop and cmp mov dec (bad) in push sub in cli inc mov mov sub jbe dec aaa adc pop rcll sub dec mov (bad) fsts pop mov or dec js push cmp inc xlat sub aas sub sbb sbb or inc mov (bad) inc jge mov jns je cli loopne cmp mov push movb sbbl loope test cltd mov addl (bad) outsl iret xor push mov or enter mov mov mov dec sub pop xchg inc add adc dec lds xlat stos faddl xchg mov mov cli fistp push mov inc push popf pushf test je push int3 (bad) mov dec push (bad) dec mov pop (bad) jge fimull pop sbb iret push or push adc faddl insl adc shlb jns hlt repz mov aaa rcr mov fsubrp lret sahf mov xor fs fcoms jno ljmp and push lea das jp std ja mov into cmc xchg imul fildll rcrb std pop cmp or cmc sub in sub loopne aaa adc add iret aas and cmc outsb xor cld das add repnz outsb pop push lods repnz ret sbb fsubl mov and out int3 push pop inc lahf jnp cmp xchg mov fisubl cmp lret sahf mov add push out ja fildll pusha xchg iret cwtl jo and fdivl or inc inc mov not testl rolb orb mov or mov pop mov push shr aaa push sbb cltd pop outsb test xor pop ljmp mov dec xor pop inc je xlat dec dec push or mov jb shll idivb xor pop test lahf push mul xchg or in dec inc xor pop pop les jno rcr inc pop fmuls mov add adc jns loopne in repnz add mov daa add sbb jns nop ss rolb sarl js rcrl jne jg stc fwait mov pop lahf pop sub pop inc rcr sub push mov ficomp jae into xchg loopne std bound jmp jg cmp push inc and dec bound xor dec ljmp pop push cltd (bad) lret lret push pop stos lret insl pop add in or mov dec sbb orl bnd and mov mov mov jbe xor mov sbb pop cmpsb add call jecxz test (bad) (bad) xor into jmp insb push mov loope xlat pushf pop or sub in cmpsb ret push pop je test pop add cmp dec xor daa fdivl pop xor sti dec insb and or or mov mov out lods (bad) mov mov popa into fstp cmp adc fstps dec mov mov pop jo loope sub (bad) insl cwtl cwtl pop pop jmp mov push icebp lahf lea enter fnstcw xchg inc out add rorb add scas mov adc cmp call (bad) sub lea dec mov (bad) fcmovb (bad) lret and out push sub or les pop mov dec sub add addr16 xor loopne dec sub push and daa dec jnp sbb push inc xor xchg sbb dec data16 mov mov xchg imul mov mov fs xor mov es xor jmp adc aam sti pop mov lahf pop or insl push sbb aas cs sbb (bad) fiadd xchg outsl std orl sub add push fwait jmp add lret (bad) aaa mov loope xor xchg jbe inc pop fs je ret mov sub inc repz imul movsb and pop inc rcrl push imul test inc jne mov pop std mov addr16 mov add and sub xchg sahf lds out jae je in test repnz pusha stos sbb jb pop sbb rcrl adc mov xchg mov add inc cmp or cwtl sub aad sbb jge daa in ljmp je ret (bad) mov cmp cmp outsl movsl mov pop xchg in jne test aas dec into rol movsb jb or jns sbb lock mov xor loopne mov sarl imul mov mov push adc (bad) push xchg adc dec mov mov (bad) ds or and and mov xchg push xor adc cltd into adc and aad jb (bad) sub arpl fdivrl and add lahf stos push ljmp fadds push xchg and and mulb push out add jo add push inc lock mov in lea loop loope push mov cli push mov dec cmp gs dec fsubl cmpsl imul shr cmp out inc mov (bad) pop push jl dec xchg cmpsl enter fucomi xor pop popa pusha push insl cmc cltd push ljmp ss mov cmp loopne cmc and mov xchg in cltd aaa dec fldt dec sub pop fwait (bad) rol les jno out fwait lods mov arpl lahf imul mov in and in in cmpsl inc mov jle adc sbb rep add in sbb mov (bad) xlat cltd shlb aas aas addr16 addr16 jg jnp jns call pop sbb or adc mov iret add sbb push mull int sub or jo into gs push mov xchg mov in stos jl shrb aaa push push cmp ds adc mov adc pop xchg pop mov adc jae sbb adc or stos (bad) dec jne jae mov ret push test aad inc jl xchg (bad) xor sbb leave fstp add inc adc loopne aam or into mov add dec js push ljmp and or sub in push xchg dec jbe jmp (bad) push popa outsb mov jbe mov fidivr inc imul sbb cmp jp push push jle (bad) in sub push push mov mov jg xchg mov inc rcrb rol in mov adc cmpsl test ljmp pop bound mov or push xchg std stos inc xor mov adc push out sub lahf or jecxz pop jle mov outsl add pop (bad) cmp pop add jl (bad) and leave scas test aad ljmp das lret mov or sti pop les xchg fs bound insb mov push iret sbb push inc mov jp push xchg pop pop mov mov jne lock adc outsl dec add or rolb mov scas stc adc lods sti clc push data16 repz xchg xchg dec ja pop (bad) lods sub pop sub pusha pop cli mov push int pop ror insb and psraw into xchg les push out or sub mov pushf sti inc sarl xor pop push dec mov pop mov mov dec or push sbb mov push xchg lcall mov push lcall mov adc pop jecxz iret lret leave cli movsl push test mov xchg roll lcall int3 test lret (bad) daa test outsb xor (bad) popf dec sub sbb and dec daa inc (bad) mov add xchg daa mov cld leave ljmp imul adc pop cmc fidivl pop int jns cmp sarb or rcrb shlb rorb test jge dec out lret (bad) mov (bad) in or lret cmpsb fistl sub fcomp jnp test fistl aam scas pop nopl (bad) mov fwait in sub jecxz (bad) fdivl insl fcomip clc in ss sbb es sub data16 scas ja outsl inc jle aas lock push jl fsubrl pop jnp nop dec cmp mov mov xor (bad) ja inc or arpl in dec outsb add jg test adc lahf test or mov pshufw fbld inc mov js in (bad) mov stos cli sub xchg xchg or jecxz xchg adc push sbb lahf pop and inc dec mov lret xchg (bad) aad pop xchg sub inc jl cli call push cmp lret cs jmp inc (bad) into cs dec xchg mov mov (bad) adc xor pop cmp ds movsl leave pop or loopne aam xchg lcall xor mov xchg mov fnstenv jno push push and shrb mov and xlat sbb cld jne and shrl mov and bound or sbb inc fistpl jbe jp xchg cmp out lock lods popf lods push push stos adc cmp jb jle gs cmp outsl inc xor jnp push and inc fs mov ds jl push or dec lahf out mov cmp cmpsb js and pop insb cwtl jmp imul lods dec out lret mov ret mov pop xchg add out add lret sub or add out imull fimul sbb ja sahf lcall mov rcrl loop jb (bad) cld or sub aam in xchg and cli mov pcmpgtd xchg xor mov stc pop fs mov mov lds sub dec iret inc gs fstpt xchg cmc add nop aas adc xor xor mov lea add push loop in jbe pop xor push in nop sti outsl jno add rol stos mov flds xchg adcl add hlt in insl call test stc pushf pop cmpsb mov jno testb inc dec popf std icebp or inc lds loopne stos lahf lods push adc jmp fcomp sub insl cmpsb je scas das mov out sbb inc div movsl pop jle sarl ljmp push mov pop pop aaa mov xchg es repz mov bnd movsb mov xlat add push dec or mov jecxz test mov inc stos xor fcoml mov xor xchg add and xor mov jecxz scas aam sub fimull and add mov cmp pusha cmpsb pop fwait sbb popf xchg inc aaa jmp add xchg test inc xchg pop clc dec and and xchg add lods jmp decl out mov test pop outsl addl call aam cs xchg push or adc outsb fmul (bad) fs inc or inc adc aad addr16 adc outsb ss imul inc mov lret mov repz les sbb pop jns int add lret and or sbb push jnp mov mov repnz movsb cli mov mov ret sbb movsl loop push jo mov test push add adc movsl jae mov sub outsl add aas xor jb (bad) mov sbb imul mov das (bad) mov ja lds xchg mov pop sub add adc jl xchg (bad) lods aaa jle stos cmp inc sbb pop je in fiadd and roll or add nop jno popf and pop xorl (bad) mov lcall mov test aam add mov cmp mov fsub mov cmc or sahf adc clc insb rsm iret lds daa push xchg and out rolb sahf int in clc push loope jae loopne mov push add push sbb xchg cmpsb mov pop adc xor inc das fldenv aas cli mov in dec rcl xor std in mov fcos pop cmpb adc rcr add (bad) loop negb nop lret stc popa aaa out dec gs lods push rcrb cmp mov loopne test dec mov test adc lret xchg mov pop mov adc xor decb in int3 push and lea clc pusha sub adc aaa adc mov jmp js in lock mov sub int3 inc sub cmp add mov negl test mov jle lods jmp fsts dec sbb sub data16 lock test xchg (bad) lods lahf push lea outsb sar leave lret (bad) or cmpsb or jg add or testl mov xchg ret and and mov ds stos sub fisubl les cmp (bad) clc shr mov mov or or adc fisubr mov sbb data16 (bad) lfs dec or cmpsb mov jge sub push xor mov inc call hlt push dec add scas (bad) and inc xor jl std mov mov mov decl movsl shll movsb popa movsb movsb in mov push sbb jge jno and out pextrw and bound je loopne mov cmpsl cmp pop mov test mov orl pop jne xchg mov and mov pop sub mov push js scas push lds pop jecxz pop dec lods aad add jmp jb pop pop shlb ret pushf lcall inc sti cmp cmpsb cmpsb cld or pop xchg cmc addr16 stos add insl or fstpt rcr in (bad) cmpsb sbb push jp sarl lods sub divb les pop jo xor cltd in testl loopne repnz scas push lcall mov int (bad) pop out (bad) scas daa js xchg mov inc sub and add movsl xchg jnp cmp jp xchg xor sub sti mov sahf insb test loope sar cmp add push loop cmpsb xlat popa xor in inc shll lock mov fnstenv mov sub cmp sub popa inc adc and add dec add fldenv adc ret mull push arpl sbb cli ja jg adc aam pop lcall test in xor (bad) xchg mov arpl inc ficompl stc int3 cli sbb xchg mov mov cmp insb sbb jo inc or dec mov imul push das data16 stc xor jl cmp xchg sub stos incb jg mov into sahf jmp and jg cmp pop mov popa jge cmpsb adc adc inc jle cmp xor dec pop or jae cmpsl in mov pop dec (bad) cmp adc aas lea cltd or jle add test or xchg mov call and clc dec arpl inc jnp (bad) mov das jge sub jle jb cli mov jl rcll cmp jl xchg stc sub jg sub bound fildll repz jae push xor pop cmp ret movsl pop in adc repnz mov outsl mov mov inc ret lgs (bad) insl rolb fmull std sub andb sub fs cltd popa or in jae push popl sahf sub or push lods fwait (bad) in sbb or xchg nop test xchg dec or aad loope (bad) adc sbb add jne pop lea jmp divl loope pop lods test insl sub jp push stc popa jle add xor mov dec outsb adc inc cmp (bad) jecxz fcoms xor test mov insb dec (bad) sarl lea ljmp lahf xor clc clc mov fstps leave dec fmull add das inc add idivb fbld pop test push lock enter insb pop fidiv xor outsl sub into mov sbb cld jns lods mov add mov ret sbb xor andb movsl or push pop mov ror cltd cmpsl (bad) (bad) scas sarb int3 or insl fwait insl scas adc jne sarb lea subl mov mov sti mov push gs sbb aaa cwtl jmp aad fidivrl popa std adcl cmp out dec sti fidiv in subb cmpb add cmpsb mov into jns pop pop inc cwtl loopne inc lock leave dec (bad) bound dec inc addr16 sbb fwait ds inc adc shll push jbe,pt adc or aas jno inc add insl push pop fucom rorb pop mov inc add push push enter leave insl sub adc jl add cld mov jp mov imul pop loope pop xor mov lret and (bad) decb lods cmc ja sub add in adc jp sahf movsb mov popl push fstpl inc cmpsb ljmp addb out cwtl jp mov das shufps mov dec and cltd lds inc fdivr push push aaa or repnz jnp insb pusha cmpsb sbb insl mov and dec and and daa test pop jae jle cmpsl adc cld push lock add icebp loope pop in insl hlt loope pushf jb leave xorl push cmpsl ljmp inc (bad) sbb mov lds mov ss into pop xor mov in xlat adc sahf je mov int mov scas cmc sbb pop std or lods xchg xchg cli inc or lods faddl arpl lods mov adc testb out into and push xchg sbb pop popf cmp stc sti cmpsb test addb push sub and cmc fcompl loopne dec aam push icebp cltd scas xchg movsl call out adc push and icebp test fdivr popf sbb incb jb adc pop fstl cmp push add push gs int3 pop jae pop mov lock mov insb jge push mov movsb push xchg lret movhps xor and dec fs bound aaa rcll dec pop xchg or stos mov sub pop imul sub fcoms jo pop (bad) cli mov push (bad) adc in cmp lds and out mov xchg mov cmp pop pop ja jl sbb (bad) or stos (bad) int3 adc movb push cmp inc lret pushf in pushf mov push sub outsb adc xor and lcall ror add inc jecxz cmc cltd int3 jne imul movsl xor lahf lcall push sbbl mov (bad) movsb pop xchg push imul push (bad) ss lds sub inc mov js test sbb icebp lret ja sub mov fwait and jns or xchg (bad) inc or sar imul repz cmc fwait pop (bad) pop push rcrl xorl mov cmp je xchg or push je aaa pop jg or movsb pop push movsb xor ss clc sub (bad) int3 out inc int3 loopne mov pushf mov add pop imul dec cltd scas push inc dec push je cmp and jp leave sti dec imul xchg sub ss pop (bad) or sbb push fisubl jo mov scas inc dec and dec cltd sub test lahf daa or jnp aam repnz add jecxz or test mov or stc cmp ret rcr into push in int mov rclb dec aam outsb aam mov shl mov movsl pop pop sbb outsl push pop or ret and into or push mov sub lock fwait jmp lock loop out mov es fadd sub and mov out mov mov sub and inc pop jne push call jne insb push cmpsb ljmp adcl sub movsl std inc xchg add test ds jbe insb mov imul adc (bad) xor jmp sbb add bsr aad jne rcrb (bad) push xor push xor addr16 and pop inc jg mov clc scas mov cmpsl int3 jo dec jnp je aam enter addl fnstcw sub xor js add pop xchg mov aaa xlat jg mov inc or xchg ds inc test add pop subl mov std push (bad) jmp push outsb loope (bad) push pop push (bad) gs notb and mov adc cli push imul fwait test rcll stos out shrb pop (bad) mov popa sub fstps cmp mov (bad) dec out dec aaa aad mov pop mov inc and hlt imul mov fstl cmc js jecxz addr16 mov xor repz cmpl sbb loope (bad) push pop pushf dec sarb adc imul pop test aam stos imul (bad) cli repnz push or (bad) das fcmovu popf inc pushf cmp cltd push jbe push pushf sub loopne ss (bad) xor adc xor (bad) jl xchg add and jns sub push inc cmp cmpsl roll les lahf sbb out jge js andl hlt sbb sbb push push out sahf jae dec or ret gs mov mov ret loope inc lods jno push fisttpl jae pop cs popf andb sbb fdivrs sahf popa leave pop fwait ja jnp inc ljmp inc mov xchg inc push cmp and rcll fstpt cmc test fcom insb and adc fwait sbb jae aas pop cmp mov rorl mov out ret aam sub insl lock clc (bad) neg out xor mov xchg xchg mov in inc and push inc mov push push push xor lcall ljmp dec lods out lret iret rol sti inc jg mov popa or xorl popa dec mov push fs sbb fisttpl mov subl mov test push push subb stos divb inc pop lods push sbb repz shll movsl mov push test scas das popl rol incl bound xchg push dec mov dec mov push jg mov xchg cmp (bad) jne lock test inc sbb stos mov mov shrl (bad) insb pop sahf xchg imul (bad) loop (bad) pop int3 outsl outsb dec fstl fcompl in data16 aaa inc jae xchg out es std xor add push xchg lods cmp les into pop adc xchg xor inc inc mov jmp push or push pop adc aad and out mov dec xchg ss repz push or into adc pop adc pop dec cmp mov push repz sbb jbe,pt iret std cmc not dec jae (bad) fistpll nop scas movb (bad) daa and fwait cli adc mov mov mov adc lret fs mov mov dec sti sbb in mov repz ret lcall inc add orl inc add cmpsl in jae aaa adc outsl fwait dec out cltd jno js push fmull idiv and inc mov dec loop and sbb daa jne sbb stc and adc incb xor add inc out fsubrl pop (bad) int js push mov out push mov jno daa add cltd leave cmp mov pop mov inc add inc push and icebp adc shrl sbb lds xor push inc gs arpl arpl add imul insl addr16 test mov cmp cmp imul jns jnp lahf cli call inc pop jg lods pop xor jecxz pusha lods (bad) ja xor xchg pop mov push test lcall adc push jmp (bad) rcrb out aam mov loopne ret sub adc int imul mov sbb xor and roll cli cs cs push loope mov mov lahf add in sub or xchg mov pop mov mov mov xchg movsl arpl push and and cli shrl cmpsb mov mov test test enter scas xor inc jns dec adc jbe push jae mov xor popf or (bad) iret sub jge lds mov out inc fs pop test cld ja notl lods (bad) fwait add addr16 dec pop adc and je mov sti fstl stos cmp lahf ret sbb imul xor xor jbe adc sbb push or mov xor mov gs inc in sbb dec adc sarb xor mov ss cmp cmp cmp das outsl dec dec sar push dec dec jl lods mov js and je add ret in adc test mov cli cmp and cmpsl in mov xlat cmc mov xchg andl push mulb mov (bad) in push xchg fmull dec jb xor subl push scas mov mov fistpl sub mov mov sbb int push sbb xor lods push cmp inc cmp pop fldenv jne stc inc cmp cmp sbb xchg fdivs jno iret in movsb test mov sti insl fistpl push aaa dec lea mov rorb push sub pop push lock push xchg jecxz mov pop (bad) xchg dec jg add jecxz mov imul fstp leave jnp ja jne stos je push mov sub pusha es (bad) shrl xchg xchg push pop add iret or aad movsl test out mov int adc aad xor gs (bad) into push inc inc xchg leave enter xchg add mov (bad) and data16 les rcr adc or (bad) adc and dec dec into add dec into mov (bad) xor cli cli inc stos ss sti push ret pop iret fisubrl dec pop pop cmp dec jns jb push add jmp sub repz or pop std mov xchg pop jle cmp and sti fs inc mov imull div pop sbb dec xor call cmp dec fldt mov pop jo nop (bad) pop xchg xchg idivl mov xchg push inc test xchg xlat or jae push mov and xchg inc inc ss pop or add jb notb or xchg lds js scas or mov loope push jno mov (bad) out loop push cs movsb int3 cld insb adc mov cmpsl testb icebp sub and mov mov sub in jnp test jns lods adc or jnp,pt cs cmp rolb stos mov pop cld adc lret enter test xchg add fldcw xchg or loope jne stos (bad) out repz pop pop adc sub mov shrl mov push push outsb push stos loop cltd (bad) insb fldcw int cmp out dec sub mov fsubrs (bad) jge (bad) sub push add mov push stc aaa and and lea and les sbb loopne es orl std mov xchg insl movsl (bad) decl adc fnstsw xchg cld scas fsubrl std or or jo xorl movsl ds jmp push jmp flds shl (bad) mov daa mov push int3 xchg mov push mov cld (bad) lods cli aad (bad) (bad) cmc test es mov mov push cltd cmp repz int adc movb int3 fisubrl push cmc rorl jmp jecxz pop inc sub mov aad push nop sub shlb or ss adc and pop stos popa in pop and sub repnz add push ds mov sbb (bad) or pop mov movsl mov aas data16 push div push inc adc sub gs cltd xlat xor idivl mov sbb xchg fild inc xchg xor flds fdivrs adc mov adc repnz adc adc jmp xchg mov hlt dec jns addb dec or and mov je cmpsb pop in in add loope cmp ljmp xor cli repnz fs negl repnz out or inc nop fcoms fadds lret (bad) xor mov jecxz jmp outsb mov cmp sti sbb jae or int dec jo cmpsl (bad) xchg nop mov out sbb shlb sub in cwtl adc aaa jl popa mov pop sti iret or sub cmc in add mov adc mov fwait insl mov shll icebp sub pop out sub cmp adc jmp insl test lcall pop or hlt adc dec fldenv cmpsl pop push ds xchg notl xor in xor setne adc jns adc movsl xor outsl pop xchg push add inc stos mov rcr xchg insl xchg or and repnz mov dec lds ret mov push mov pop sbb pop (bad) sub dec dec frstor nop (bad) outsl outsl out jae ja cmp sbb test mov shr xchg jg test jp mov xchg or call inc dec push ret sbb jne add xchg push repnz iret in adc outsl xchg mov (bad) lret mov daa std mov mov jecxz in shrl rorb xor dec ss push dec pop sub div jmp push sub or outsb repz push and mov xor lea lods jg dec jl rcll or nop jg lods (bad) lret sti les std pop cmpsl lcall into mov rclb aas mov xor lods movsl outsb mov std ljmp dec cmpsb dec out mov aaa movsb mov (bad) rcll sub pop push mov push lock in jbe fsubs cmp je xor mov iret add in cmp sbb adc add aad dec push jge shrl adc fsubrs pushf push sahf out lds (bad) fmuls mov sub add lcall shl push xor sbb das dec adc iret add enter das (bad) jle cwtl mov aaa cmp outsl jo or aas fsubrs call xor ja or fwait shrb dec push add notb push (bad) sbb loope lock add stos movsb jp jne jg lock in mov fs xchg mov dec shl in dec sbb adc dec bound out fmul into pop or arpl jp sub mov mov sbb sbb stc cmp scas jo xor hlt fldt lods repz jae mov jns outsl int3 jmp adc add call (bad) add stos int insb jne add test gs add jo xor adc loope test or xchg dec gs cmpsl or mov inc iret pusha or outsb sub pop push mov fs pop xchg scas cmp and fnstenv fldenv xor inc xchg fcoml sub orl cmpsb mov test mov mov insb icebp shl aad je stos es mov cmp xchg and test scas inc (bad) mov cli nop inc jle call popf sahf daa xchg and sbb js in cwtl ljmp push (bad) movsl int sbb pop push push pop push and add xor xchg sbb mov (bad) dec repz rcll test sahf insb cld fldt xchg sub mov jl test leave addr16 dec cmp xchg movsb xor adc jmp mov and inc cmp adc push inc cmp xor adc mov adc sub test pushf hlt in sbb imul jecxz mov lcall lods data16 rorl bound mov xor dec lods (bad) pop ljmp insb mov cmp in pop not lret arpl or mov dec xchg sbb mov ret (bad) push loop testb (bad) xchg ret add dec negb gs jns insl push jo jae mov notb xlat inc aad push ret push cmp xor loopne mov gs int jmp out popa sub lock stc fldcw jno daa inc adc and aaa sub out push add jp (bad) fidivl mov xlat iret sbb jle mov jns insl push sub add cmp jo popf into mov pop imul lods mov push sbb sbb inc inc ja std ror sub sub sbb insb cmp popa lods xchg divb fst xchg cmpl or das ss pop stos dec mov mov and je pop loope push xchg xor pop push aad in mov notb (bad) inc (bad) mov call daa cmp push nop loop js mov lahf insb ss ljmp stos xor xchg sti and mov mov jae (bad) mov fadds jge cmc insb mov push es in cmp sub jno add insl mov mov mov test mov test dec xor jo ret (bad) (bad) push xchg sub push push dec mov sub adc cmpsl mov jl mov sub in add or xchg jnp add jmp or enter pop scas xor push xor push bound or fldenv sbb add mov ds cmp and loope sti nop jecxz je (bad) stos (bad) sbb jecxz fbstp xchg adc addr16 mov or sbb jnp fsts xor dec and or jns push clc pop pop push push call inc mov pop out pop pop jge out mov (bad) push inc cli jg push dec adc jp xlat ret lods movsl in mov jle imul out pop sub add imul or iret mov fiadd or outsl inc imul pop sbb add pop bound test jle (bad) orb push or mov sbb xor les outsl stos sub rorl xor fildll shlb out scas mov mov mov pop jnp ja lcall (bad) sahf fsts test sahf mov mov inc out test sbb sbb jnp push jecxz insb pop add pop push out dec aaa aaa orb and mov mov pop add sub out sarb popf xchg imul push inc cld sbb mov stos mov les sub xor mov or (bad) jno insb adc (bad) dec sub cmp xor mov repz fildl cs sub shrb add out dec mov testl das xchg addb mov sti ja push into sub ret xchg adc sub gs mov cmp jg fidivrl sbb (bad) pop xchg jl mov imul jle adc xor and ret aaa pop and ss pop push lods fbld mov negb pusha cmp (bad) andb sub jp gs dec ljmp dec jmp dec mov lret fadd sub imul leave fimul leave dec jno movsb test rcrb xor jmp add pop pop and fsubrl xor cmpsl fdivp add lahf jmp pop jmp sub mov stos pop xchg outsl mov pop clc sub mov add xchg cmp mov (bad) mov (bad) mov sbb dec cmp and push xor xor loop jae lsl sub add mov les push les or and out dec cmpsl fistl xchg out or mov out mov jbe fs aad shl outsb cmp sbbl dec daa and (bad) mov cmp and sub rcrb adcl add jb cmp cmc cwtl sub push jbe (bad) jb xchg xchg dec aam dec aaa or fisub lcall fisubr orl inc jae aad je xchg cltd mov loop stos jno mov dec or mov sbb cld pop push int sbb mov mov sbb imul add std int lods mov imul jmp and nop shlb repz push js mov stos mov stos jge out lds mov repz inc cmp mov sbb mov cmp cmc sarb icebp mov pushf out jb jno mov inc fistpll stc sbb push leave sbb jno imul pop (bad) test push negl imul rcrb mov and int fstps jl mov fs push ljmp mov pop (bad) xor aad adc adc repz xor sbb ret xchg mov pop xlat jne pop leave adc pop cld cmpsb aad push mov mov jle outsb xchg mov inc and and mov sbbl push mov cmpsb and pop fcomps sub jg mov inc in les getsec scas (bad) or out cmc mov popa jns jecxz pop mov (bad) cmc dec sub jne or rcrl cwtl mov popa adc jl pop std cmpsl mov push jmp sub orb mov in std ficoml fidivr fsubrs std jg (bad) or ja jecxz sub into xor xlat in push xchg inc fwait outsl xchg jp std movsl sarb repz mov imul mov inc out pop and rorb xchg mov iret (bad) notb or jg pushf pop xchg int3 push and push (bad) es fs dec mov jmp shrb dec adc jmp fbld mov fbld add aaa imul out fwait lahf or inc into pop int3 shlb sahf stc dec add lcall rcl cmp push push pop mov in push in push stos in mov (bad) mov cmp (bad) pop adc sbb pushf mov xor and add xor imul je aam xlat and shr mov mov sbb mov xchg sub mov daa sar loope leave pop cmc sub xchg and sub mov mov and test in insl stos cld insl les sbb and jl out adc mov test sbb iret xor stos sbb (bad) sti add xor ret and test lret repnz in dec xchg add push dec pop push cmp imull push enter jnp sub jne xchg hlt scas jle sub imul pop mov aas jns sets ja or mov movsb jnp mov in sbb and mov cmp pop xchg dec pop mov in sub or xor inc frstor xor (bad) add pop ret add dec sbb mov add out dec push mov (bad) fistp adc jb mov sub es adc mov cltd mov push jmp test mov data16 in and mov mov dec loope mov fdivrl dec or mov adc fst fcompl dec mov lret outsb push jbe pop and jmp sbb jnp popf cmp mov mov scas pop xchg lea push out stos sbb sbb fs dec adc fwait xchg fmuls mov push xchg xchg mov or cli sub bound fcmovu cmp test (bad) hlt and fwait jp scas sti call pop iret and leave stos mov dec ficompl inc dec inc jno xchg scas das imul sbb rcr cli incl jbe xlat and out push or dec out loope sti sub inc pop pushf push data16 push (bad) leave pop jo pop cmpsw pop xchg mov sbb and push fldt es nop call xchg cmp (bad) sub push xchg mov push movsl xchg pop jg sub mov cmpsb das in cmpsb cli test stos stc inc jl add mov in inc jecxz adc rclb std jg xor ret inc aam xor push loopne dec loope mov dec lret out mov imul cmp cmp cmovns jg jb imul test les mov adc mov dec and and fldenv mov pop jne test in push push inc into inc dec inc adc jbe xor jp push push lods mov pop (bad) jo push outsl push add sub xor dec cmp hlt in inc sbb test mov xchg xchg xlat sbb hlt or out adc jecxz je sub dec scas repz std bnd scas lret or and sbb insb movb or popa sbb sbb popa aam test repz movsb mov orl pop stos (bad) hlt gs bound xchg jl cmp sbb add xor sub mov push aad shr xorl mov mov stos rclb fndisi(8087 (bad) cwtl xchg addb mov jmp xchg add scas mov test cli test aad cmp or xchg leave jae sub xor push clc pop icebp int3 std scas loop inc push jno mov ficom pop adc cltd cltd movsb rolb xchg cmpsb dec (bad) pop push (bad) ficomp ss rcrb mov sbb sub xchg xchg jl data16 xor push pop dec xchg jns into mov jne or inc (bad) jbe adc mov mov mov jecxz and fstps or fildll mov and movsb jnp (bad) aam jns xchg in in mov orb xchg outsl dec mov mov imul data16 sbb pop inc lcall jb sbb mov (bad) scas roll stc mov sahf pop mov ljmp push or push sbb les xchg cmp cmp popa push stc xor fs lret mov push ljmp inc add sbb (bad) push and pop lds orb lods mov add adc in pop push or cmp push in adc inc jle fisubl inc lahf std jb push scas negl test data16 push push hlt bound mov push jne aaa fadds xchg test jno push add (bad) ja pop add push adc stos fildl outsb cmp dec adc jns mov jmp push xchg cmc push mov ljmp insl xor and xchg add adc push (bad) mov xor xor add fist pop jmp xchg xor mov pop lcall cwtl cmp fs rcr mov lods loopne lret (bad) push cmpsb loope and int3 xchg rolb js sbb inc sti enter adc add sbb stc pusha andb dec cmp movsl mov inc bound nop push jmp out (bad) (bad) jnp scas mov mov jno add push mov xor push xchg jmp pop out dec push adc loopne aas sub jmp or add xlat movl push fldt mov push lods lcall jns (bad) (bad) (bad) incl je (bad) dec fwait sub cld lret cltd push testb cmpl mov sub test nop rcrl je aad push stos add jae imul pusha shrl insb or rcll movsl jl arpl push out dec cmpsl inc pushf popf cld cmpsl movsb (bad) mov mov std sub mov pop adc aam add mov cmpsl shrl xchg cli jl,pn mov ret ss cld cwtl dec cmp add lds sahf sbb push nop sub xor inc lret mov and aad mov cmp into dec cltd push gs and mov ljmp pop leave ss pop jo pop jmp dec mov test xchg shll sbb mov stc jl loop cmpsl jmp movl out inc mov stos add xchg cltd aam outsb add adc bound sub lcall aaa shll ss dec adc jo fcomps mulb cld dec mov movsb inc cwtl jp jg es rolb pop clc push outsb push or xor stc scas sbb push push sbb mov shll rcll int mov sbb pop jno sbb mov jae (bad) test sub cmp mov cltd pop or dec mov pushl mov lods pop sti cmovp mov add adc movsl adc into das loope iret int stc add lock push mov add rcll jge (bad) fcmove xchg push xchg fisttp loop cmp fnstcw cmp int3 cmp mov sbb pop mov pop pop pop and push cmp icebp push xor out inc cmp iret (bad) sbbl xor inc push outsb aad cmpsb daa cmp loope and cwtl daa xchg add cli xchg and inc mov xchg xchg fmul movsl mov bnd mov fwait xchg jns lods mov repz ret movsb adc pop sub push sub inc sbb call mov xchg out mov push jo mov sub sbb sbb push mov adc loop (bad) xrelease mov mov xor icebp sub cmpsl pusha fwait lock or xor daa cmp scas push xchg and ret xor sbb bound cmp or xchg mov mov loope ja outsb xchg sti push inc sahf imul and pop out push and sub bnd mov (bad) xor sbb mov pop dec dec mov push inc add cmp mov sub push inc nop out pop in lock iret leave dec lock clc lcall aam int3 mov add popa mov sub frstor dec inc xor call mov mov dec and fucom in lret jns push addr16 pop and addl and cmpsb pushf out jecxz and or mov movsl dec mov in mov sbb adc fistp cwtl cli xor push mov test (bad) shld std rorb imull or nop popf adc adc test cmp leave bound sub cli test fdivl outsb sub outsb sbb sarl std jne cmpsl bound cmp pop xchg js jb faddl cmp xor shrb and clc daa push fimull or inc dec push cli mov push daa cmp insb mov xchg (bad) sar sahf sbb inc aam mov jns ja es in rorl lret sbb shrb insb loop jl pop or cmp push std stc sbb fwait aas fwait insb (bad) ss mov mov mov pop xchg mov inc popf pusha (bad) (bad) jo repz icebp xor mov int aad pop movsb push gs int ret xchg add inc pop mov pop lret sub call jns pusha push mov pusha inc lea pop aaa adc fild dec hlt fisttpll fldenv add jb pop mov ss daa bound cmp inc xchg out mov xor repz sbb inc jns int sbb sub bound mov (bad) mov loope mov fdivs (bad) jg fdivp mov jecxz sub and xor adc sbb sub imul cmp xorb mov popa inc mov pop cli jp jno pushf adc cltd (bad) ljmp repnz sub sub imul xchg scas hlt mov push mov scas adcb jne fcoms mov addb xor jle clc jbe rol pop mov mov mov test je aas std jge stos mov scas sub pop push pop loop stos adc andl sbb sarb mov arpl cmpsb lock jmp inc ja push pop rclb add lds sub jo (bad) pop sarl cmp aaa xchg (bad) in pusha aam sbb imul mov push xchg pop mov jae push hlt mov jecxz fimul jmp je loop lahf adc dec fs sub mov push pop add fs jno imul ds ret adc inc jo das ss fnstenv jnp push repnz mov adc mov lahf sti sbb xor les jbe cmp sar and pop jecxz cs in jg mov and test fwait lret mov or gs xchg rorl xchg ljmp outsb in cmp iret push out push mov dec je cltd mov push xlat call loopne jge inc (bad) mov cmp in inc inc cmc dec push mov cltd test js divb popa push jle jb xchg xlat fnstcw add mov test fnstsw fild scas lods fistpll rolb or push std ja loopne icebp ja pop (bad) mov ret imul push popf push fwait push pushl mov pushf aaa popa inc adc dec rclb sub sbb ss mov push fwait fs push rcl mov inc or jbe mov out fcompl xchg jo sub (bad) cmpsl or stos jnp sbb sbb mov mov cwtl and or (bad) sub pop push dec int3 test jbe adc jp pop rolb outsb cmp (bad) out ds or pop mov in mov mov (bad) lahf adc mov cmpsl shlb dec mov les pop mov or rorb jl outsl aad pusha imulb enter jo pop push arpl inc call (bad) icebp or mov test jnp movsb das arpl push or dec dec jo daa add outsl sbb xchg dec aaa dec mov cmp and sbb in loope xchg in inc jno out in push roll aad movsb cwtl mov pusha in jno out lods loopne push mov fbld test jecxz inc cmpsl pop sbb xor mov sbb aas mov pop cmp jecxz mov jp aad cmp bound or jecxz outsl out ljmp sub xchg mov leave mov ljmp pop jbe sbb out addl test push lcall push scas stos push dec dec inc cli xor jnp jno or mov pop push xchg dec and inc fcompl jge clc mov sarb xchg inc jno and stos cwtl mov xchg pop in loop popf mov pop pop stc cmp lds fistpll aaa xchg in int3 mov lret hlt and das pop or out out mov addl ficom call add movsb or icebp jecxz iret sarb cmp dec cld push imul dec stc lods insl adc (bad) sti les cmp mul push and jmp int ja jne cwtl aaa (bad) (bad) lcall into mov scas xchg mov mov xchg cs sbb xor pop inc (bad) insl fs inc pushf jno dec xchg out sbb xchg sub sti or ret mov (bad) xchg in mov aad loopne in (bad) jne dec (bad) xchg out hlt inc les fst fs jmp fcomi xor inc ja push jecxz dec jnp adc repnz add and rolb jb btr pusha fwait aam pop jl out mov out lcall psllq jle xorl push pop clc adc pusha mov movsl cmp mov inc mov (bad) xchg push push ret addr16 inc sub inc icebp push (bad) aam jnp jns push jge jnp xchg sbb mov aad push sub cltd pop mov mov shrl es std sahf dec js,pt push sbb insb jge cmp out inc mov loope bound out cld mov (bad) in subb dec inc test mov dec in lret dec cmpb pop out and shll adc adc jge push xchg or aam mov add stos cli addr16 dec inc inc pop jle xchg mov xor test aam adc popf adc mov lcall (bad) xor push rclb nop xchg xor movsb inc jl mov mov adc add scas pop test outsb xchg pop pop mov add dec in and lcall sub mov jbe mov jns (bad) stos push loopne or test xchg lahf mov xor add cmpsl mov jl ljmp jae lea mov (bad) mov add pop jbe test mov pop jmp ffreep mov dec scas fs (bad) ljmp cmpsl std sbb bound jbe fnsave inc test jns cmp inc push push (bad) add testb dec test mov fstpt les (bad) adc or (bad) fmuls movsl rolb mov xchg dec mov popa jbe mov mov xor stos jne mov ljmp out cmp ret push cli cmc pop mov ret push jg es addr16 fs mov fdivs cmc lcall sbb scas (bad) sbb sbb imull xor fstp ror sub pop ret (bad) lcall mov pop cld movsl cmp (bad) adc subl pushf adc sub enter and out jmp jnp cmp adc in ret (bad) cld lods mov lret cmp sbb and adc popl divl ret lea cmp ror outsl pop outsb sub lods sbb enter adc ret mov mov cmp mov in mov jmp mov stos mov jg sub jecxz addr16 mov imul rcr iret adc pusha fstpt and jb pop inc push cs daa push sub (bad) mov xor mov jae hlt push andl icebp or movsl mov push dec iret inc in and mov pop pop mov lods lds mov in inc mov mov repz cmp dec pop js js dec dec inc mov push adc push and inc dec arpl cs mov jmp mov out xor adc inc fwait xor dec iret gs sub cmc or mov faddl les (bad) jno (bad) mov xchg fs test (bad) or imul add out sbb dec pop rcll mov push bound mov mov mov ja inc push fwait fs add jne,pn dec mov xchg jnp mov xor (bad) mulb movsb cmp dec add rcrb pop xor lret scas pop ljmp push call pop pop aas sbb fwait sbb push or inc xchg imul movsb outsb pop ficoml add sub test in rcl jae out movsl pop adc pop out call add push stos or fwait cmpsl rolb out data16 adc pop ficomp xchg mov adc stos cmp lret push inc cli pusha xor push pop test mov cmp insl jp cmp sub ja cmc repz xlat jae sti adc push lods rcrb mov loope jb daa mov mov mov and pop sbb ljmp xlat lcall dec loopne and push sahf fld1 addr16 push out inc ret repnz jne (bad) insb (bad) inc jnp scas out test push and out mov into scas jns (bad) jnp bound adc mov mov sbb leave lock xchg xchg cmc mov mov mov or cmc loop shr pop movsb daa or sti or jmp add loopne pop cmp sub or mov lret inc movsb cmp dec mov push inc inc mov es cmp sbb mov inc ret sub dec aam push call sub xchg sub jne out ret sbb sarb mov test push sub sub dec cltd les in pop js mov es xor fucom and mov cmp lcall mov fidivl shr ret ds fmul and mov mov and jbe in jle enter in xchg in aam xor lea xor ss lret out out pop cld mov inc mov int push jge pushf cltd xchg aad (bad) dec mov push push adc fldenv pop sbb pop stos sbb lea dec or push repz jmp mov aam fldt popf mov and mov and jb mov cmp inc into cmp or lret lret or hlt or dec mov mov stos lahf jns fcmovnu inc in jnp,pt lgs movsb or pop mov je push cmp adc mov stc push sbb adc sbb mov es push sbb ror mov pop lcall push test xchg or push iret cmpsl and dec jmp xchg xchg inc mov jl mov mov mov js mov (bad) adc pop pop dec and scas inc inc dec inc (bad) mov mov mov sub jp ss notl add pop loopw and test fchs or cmpl scas mov call adcl gs dec sub cltd mov loopne mov ret mov fldcw jae jmp aaa mov inc mov cli iret lods or popa cmp lods inc test stos lds cmovs jo pop push (bad) pusha jmp push push sbb xchg inc (bad) arpl mov xorl adc int3 outsb push sub push test int3 es aam dec jg pop divl imul std lcall call push stos cli out xor arpl xchg add (bad) lods dec push fcmovbe dec or jmp sub pusha mov call loop es (bad) rclb out jns mov push ss fwait iret inc dec das fistp xchg insl adc push cltd lods push lods lahf je adc lock mov jle push lahf inc test dec sbb ret ror lret mov cmp lods mov fsubrl xlat sbb mov mov xchg xchg and js (bad) lock xchg scas xor es push shr fldl push jecxz je ljmp xor in gs mov test inc xchg into sbbb sbb xor and dec je (bad) pusha mov (bad) lods mov xchg jl push aas mov dec loop jmp pop ret fs push loopne jnp insb outsb sbb scas inc lds lret jns test aaa xlat push mov and lea add addr16 push stc dec pop dec mov pop or jo pop cwtl cmpsl stos push test das fldl pop addr16 dec xor out sub ds (bad) loopne call lret jne pop ret adc ljmp pop or and stos push fs mov cmp (bad) adc push or push pop jae,pn pop rol inc cmp in xchg cmpsb mov pushf push in xchg fisttp cmp or jl rcll mov mov (bad) dec jg jge sbb or leave xor lret cmpsl pop mov xor xchg es mov inc pop cli pop rcr outsb jae movsb loop pusha or mov pop cltd adc inc in rorb imul jp push in pusha lret in xchg jae repnz pop xchg lds xor shrl movsl outsb and sub xchg imul inc and iret imul xor sub mov mov mov adc out sti int mov xor in mov jae fimul pop cs std dec mov sub sahf mov clc fcompl push mull das lea ds nop mov or sub pop push xlat sarb jmp mov pop addr16 mov es test inc gs test and adc bound iret push out iret mov (bad) mov pushw mov mov pop xchg int push sti mov push cmpsl popf ret inc and jge test xchg lods pop mov lcall add push or or dec push jb ret push mov out push icebp push pop rcl adc cmc (bad) ss cld cmp cmp jge jl sbb xor xor jmp stc jno icebp xor out into adc sbb jns xor out scas push pop mov cmpsb push repz or mul incl in or mov in lahf stos hlt stc push cwtl and repz and inc xchg and mov mov imul sarl or les pushf push loope mov ja cld jmp ja mov pop jge sbb sbb in mov out cli testb into lret mov inc inc das push push push (bad) call ja mov cmp and ret popf rcrb sub sahf pop dec test pop leave mov lahf (bad) mov cmpsb outsb xor xchg push inc sub dec mov icebp jns mov ljmp out or cli lock pop cli push inc fdivl movsb es or test sub push daa push push cmpsl sarl test jp or (bad) out xchg mov dec adc scas push (bad) int3 fnstsw push cmc cmp std cld repnz or imul (bad) mov js arpl gs vmwrite mov and insl nop (bad) repz jae fcmovnb xor adc (bad) mov (bad) outsb jno outsl mov rcll cmpsl mov push std mov aaa test outsl sti cwtl dec sbb js xchg in xor sbb dec xchg xchg push xchg mov sbbl adc dec outsb push jbe aam xchg dec data16 out sbb jb mov xchg fldl shrb add test push mov dec imull out dec sub mov mov insb sub cmp ss cmp roll pop and pop insb (bad) ficompl mov mov out pinsrw lahf push test fist mov (bad) cmp les imul add scas je jne or test sti lock jne aad push test je xor adc es icebp mov lahf clc sti xlat add pop mov xchg mov aas push add dec fidiv dec xor and clc cmc sbb test push mov xchg push lds leave pop xchg push mov pop popa insl into inc cmc das add push xlat and ret ds movsb sahf pop and or jg jnp pop xchg cmpsb jmp adc dec shlb push push xchg cmp ret scas xor inc push sub out into les push movsb nop mov repz adcl hlt and xor (bad) pushf popa je mov clc inc xchg pop cmp sarb jnp fsubrs adc push pop pop mov cs enter in outsl lret cwtl mov fidivrl jge lret jl (bad) adc pusha cmp jmp adc mov cmp in (bad) ss in lahf repz add mov push test imul mov popf push jg out sub adc sbb imul push cmp mov or push push call in arpl push nop jne lret fdivr jb xchg sub mov (bad) adc repz xor inc sahf dec and mov add xchg shr xchg jb push (bad) leave pop cwtl sub les scas aas fsubl push lds stos mov cpuid fs sbb lods and jne mov inc (bad) sub loopne sub cmp int dec xchg mov lea xor jp push nop xchg sbb xchg push sub std rol lret mov pop (bad) js add mulb xor push xor fildll sbb add or jg sbb mov arpl or pop ficomp mov sbb ret fdivrs mov push jae leave dec push xchg fsubr popl jle pop jmp cmc and enter std ds pop mov out test jae xchg sub xor cmp popa sahf fldcw xchg add dec dec inc lock popf mov jp lcall and cmpsl (bad) mov into cmpsb and call or xchg xor (bad) fstps stc mov (bad) sbb adc adc sahf jb inc mov cmp cmc std movsl pusha in sub mov cmc repnz fnstcw je jno daa add or gs dec sub negb rorl mov jae fisubr insb aam cltd jnp sub sahf cwtl rcll lahf iret jecxz popf popf add out mov inc mov cmpsb add sub pop sbb std jns aam std repnz mull cmp les mov js stos sub mov test pushf jnp aam pop test sbb es inc pop ret mov popf inc nop sbb push stc jo fstps mov push mov stc cld mov sub je shll ret sub mov cli dec sarl test cmpsl cli call jl add dec add add xchg std cli and stos mov insb xchg inc loop ret jecxz mov stos fwait nop aam daa out ja lea cmpsb test outsb jo outsl or dec loopne jl xor mov pop fstps stos and idivb lock xchg cltd loopne push fsubrl adc sahf dec push jns lock mov fadds and adc mov pop push push outsb ficom cmpsl call fcoml fwait mov in mov add jb or mov je and test dec je xor divb jne sub jns mov into push ret mov inc mov sub xor nop cmp or sti and sub je add js xorb stos jnp fcomp into sbb dec xchg jbe lret and adc mov aam shlb mov xchg mov mov js xchg fild cmp and addl mov xor mov mov outsb enter sub int pop data16 vpunpcklwd mov push sub xor (bad) mov movsl pop pop sub mov mov aad xchg pop stos (bad) or xor mov inc pop xchg inc test push and jp sbb mov outsl nop jns jbe inc mov movsb call data16 loop sub (bad) pop dec inc jae pop xor js sbb fmull push in hlt inc cli cmp dec ror mov inc cmp and sbb pop ljmp xor aaa in push or cmpsb lea adc sbb add add cmp jp mov mov not fs dec push stos mov rclb movsb dec inc push mov mov push (bad) push jbe cmpl mov je jne data16 stc popf push add pop aaa aad cmp or cwtl jge jl fistpll ret hlt pusha dec cmc mov mov cmpsb add cld jns dec scas or xchg lods and fsubrl fidivr push das cs sbb inc test (bad) sbb mov mov cmpl jbe xor and aad or dec bound jns push loopne add outsb stos pop push xchg fisubl dec mov inc fs test movsb sub addr16 pop insl mov dec sbbl pop test pop ss stc pop daa pop aad fdivrl push jge push (bad) and nop xchg mov aad add cmp (bad) cmp roll test ret jbe pushf fnstsw call dec inc jb pop pop cmp push mov adcb mov leave jmp mov cmp ret mov sbb jb outsl adc addl mov addr16 push lret mov pop pushf xchg lods add sbb cmp push dec jle int ss lret mov out mov push daa inc repnz pop push jo mov inc mov mov ret inc cmp es mov std xor das and cwtl lret dec lcall icebp dec rclb gs rorl imul mov jne dec fnstsw scas fidiv bound pop clc das inc jne xchg call lcall int std xlat mov push lcall inc mov inc jbe pop mov test push sbb inc stc pop mov mov inc das pop es or pop cmp xlat fwait jae shrl xchg sbb mov or jo lods repnz pop fimul cld (bad) push dec cld xchg cmpsb int3 jne xchg repz dec cmpsb rep jecxz sub test arpl jle ds adcl icebp pop test xor jb fidivl cwtl std sarl call imul xchg mov popf hlt xchg dec push jmp cmovg sbb out and push scas sub sbb incb fnstenv sub xor xchg ljmp xor imul mov roll (bad) in sarl repz cmp in jno mov repz arpl hlt (bad) into adc adc inc out jno mov (bad) pop jno sbb jge (bad) mov and mov sbb cld add cld out andb lret mov in jno mov pop out fistpll shrl push ret idiv cmp mov cli mov jae inc icebp les loop lcall mov cmp (bad) repz adc push add inc cmp sbb int3 xlat push sbb mov lock xchg mov push or fcompl fld lods or xchg out pop xlat xchg mov xor jne xor cmpsb pop icebp mov out add add inc lret jmp or inc cmp dec test clc mov mov mov je inc rcrb mov ljmp and aas pusha sbb fs mov mov ja xchg lods imul loopne cmpsl jecxz clc daa sbb sbb lahf and lds lret (bad) dec pop aad jnp xchg sub pop repz out mov es iret xchg sarb add mov jbe and sub push imul cmp inc add lods and (bad) gs inc inc jne push jg add outsl stc fldl aaa call dec add (bad) mov mov jp add xlat mov lock inc pop sti repz push (bad) fsubrs es pushf mov leave stc mov mov mov and or lea (bad) lret cltd or jb into jecxz pop aaa arpl inc fldt cmp and scas arpl (bad) jo cmp std adc inc push pop sub sbb (bad) lret cs mov je or ljmp sub mov loopne add jecxz int3 js pop and xchg inc nop push scas scas jecxz aad iret mov mov cmp dec sub nop daa iret inc fstl arpl mov cli add jge out cld insb (bad) cmp pusha popf addr16 fcmovb icebp fldl aas mov popa movsb dec in xchg repnz sarb cmp ss imul iret add movsl xor adc pop into insl cmp cmp loop mov and call pop dec addr16 sub or rorb mov sti mov adc imul xchg lock lcall sbb mov push bound xchg push out adc imul sub into mov insl pop push pop inc sti pop pushf outsl (bad) xchg arpl es arpl ret fwait xchg or cmp out xor repz dec idiv ss sahf jl pop sub mov xchg xor xchg mov cmp adc (bad) movsb stos jns lahf iret or mov leave cmp add fisttpll xchg sbb add or xor mov cmpl jae imul push in sar into push movsl jae inc (bad) cltd int and js aad and jcxz jmp inc sub sub lret push cli jmp jle movsl ja fisubl outsb push dec mov mov xchg or and imul aad mov pop movsb add jae cmp inc (bad) (bad) pop xlat (bad) mov cmp push mov jnp or call lds cld add in adc push fsubr cmp mov xor sub ror rcl pop push jno cld mov mov sbb mov add inc pop xor jo and (bad) (bad) lret lds ljmp push fs stos or xchg adc inc mov femms sub inc out fildll xor scas adc mov fldl xchg cmpsl test mov cmc pop xor cmp inc (bad) ja and repz adc faddl insb pusha sub (bad) push and dec mov push fwait dec mov das push repnz cmpsb jle add fcmovb mov add or jb jge mov adc push stos nop call mov out out dec popa loopne add stos sbb jle rorb mov dec mov test int add repz cli (bad) sub int3 test cmp push outsl cmp jae adc mov xchg or dec lea adc adc insl pop jmp outsb aas sub push leave clc jo nop test jae dec add aaa jns cmp fbld fadd adc cmp ds repnz outsl pop aad loope hlt notb cwtl fwait jp test adc xor js adc fimull (bad) fisttpl pushl dec movsb pushf cmp fimull cwtl popf push sbb cmp mov mov cmp sarl out jae dec or inc sbb jecxz pushf in push xor xchg lods cmp xchg sub mov addr16 sbb arpl daa leave jg loopne cmpsl dec add leave push ljmp xorl mov jmp or sti mov je outsl int3 inc jl outsb xchg jge and lods mov jecxz aam imul xlat sti adcl and cmc repz fs (bad) xor les dec aas add jecxz aas sti dec pop jb lret popf lcall cs fs xchg jecxz push jno mov push push in or mov push (bad) mov inc inc sub mov inc dec repnz push insl negb xchg mov ret ds sbb out mov sbb stc lds mov mov push (bad) xor xor jecxz stc sbb xchg nop scas ret imul pop xchg add aaa cmp (bad) sbb sub rclb imull sar push xchg out cmp adc inc inc addr16 ret es sbb and cmp aad adcl mov sti xor addl fistpl xchg and aaa xchg xor arpl xor adc out push inc test mov aaa or fdivs sub test jle push insl pop and jo push (bad) nop cmp lea and xchg aam inc inc (bad) (bad) mov dec cmpb cmp (bad) mov aad and cli xor hlt mov push cmp icebp xchg jmp loopne mov rcrl outsb lock repz dec xchg adc and popa addr16 or pop and sub adc std fs jmp mull xchg jp cmpsl mov loop in fstl test or test stos lods jp,pt and nop and mov inc xchg (bad) out pop hlt mov adc push jecxz shll inc (bad) add adc inc mov leave ja lods cmp push inc jp cmp jne add mov cmp jl inc ljmp pop mov sub out mov ja add inc push out hlt add jmp sysenter cs jae mov sub in loop inc dec jp fcoml cmp pushf mov sbb add aas fsub shr incb movb sub in adc dec inc xchg iret out pop lods ffreep popf add xchg sub es cld ljmp dec dec pop iret das add lods (bad) jecxz cwtl nop sbb push dec (bad) xor fsubrl out ret cmpsl push sub sub fcmovnbe and xor (bad) mov mov mov and aam sub and stc dec jnp pop push pop nop mov fnop add fstpt xchg jg imul or mov push shll or pop mov xchg add shrl mov mov aas ficomp mov cmp lods cmc lcall sbb push adc call pop out test sub jg jl or mov cmpsl imul stos ret out cmp sbb xchg movl xor mov in cmc stos bound xor clc jb mov mov sbb stc or mov fadds andl cmp push leave dec and sub insb cmp mov test push or stos cmc sub sbb sub mov (bad) cwtl xor add pop lock and aas int mov cmp mov hlt or fs adc test push clc sub pop sub jl in xor fistpl mov icebp aas test outsl fstpt push data16 cmc icebp mov jmp inc data16 sbb jns fmull jns add inc stos add out dec icebp popl ds test (bad) lcall mov push mov outsl stc inc cld (bad) xor popa xchg or xchg pop into movsl push bound data16 or bswap in cltd adc jo data16 adc fdivrp fisttp mov jne mov or faddl jmp mov mov xchg and stc pop fdivrl test fcmove mov into jge push das cmpsb lea ljmp inc pusha push sti cmp push aas fsubrp les xchg cwtl gs add pop cmp lods jl out dec cwtl sub sub enter clc add lock (bad) mov sahf nop and jecxz xor mov dec popa leave das mov inc lcall dec sahf jg outsb insb inc test mov mov jbe dec add je xlat pushf dec and fsubl (bad) xlat fs add gs in add push jg sbb (bad) inc and pop int3 add sub es mov and ret ja aaa stos daa test adc add pop and cmc cld mov fwait push push xchg xchg mulb fldenv mov pop mov clc (bad) lods fidivl pop outsb or cld leave scas lcall push jg or pop fistpll mov dec test test popf daa and inc test sub mov loope push mov jmp sub sbb test mov cmp test and sbb (bad) mov pop imul jb (bad) int3 or ja ljmp (bad) out cld add inc dec imul jmp daa sbb xchg mov lret xor das xchg fsubl (bad) mov adc xchg sub int mov mov orl mov mov or ja jbe addr16 lret xchg out jbe fild test xor push fdivl out mov mov or mov (bad) mov pop and (bad) (bad) popa lea and mov lea pop jb dec dec loopne inc fstps xor xchg mov sbbl mov lods adc aad pop mov dec scas pop sbb inc jno lret push pop dec jmp data16 lea call jl scas mov sti and insl rorb movsb loopne sub mov sti fcomi jle or inc (bad) stos pop inc call sub inc pop jmp push int ficompl scas flds mov scas push fdiv mov xchg sbbl mov dec add iret aam sub jecxz shrl jae xchg or adc and fisttpll and es mov in mov mov adc ret xchg or xchg inc jae popf jne mov sub fdivrs pop dec in fistpl pop insb mov popa call cmc add bound (bad) mov insb mov mov pushf mov (bad) roll ja inc sbb hlt pushf inc mov push sub cwtl test inc push pop adc loop js fdivr xchg ret ja ja pusha das push dec and (bad) in or loop adc mov pop mov pavgw ja (bad) stc cmc mov stc cmp mov lds daa sarl pop (bad) in (bad) jge dec insl rcl movsl sahf int int3 sbb mov ljmp sbb jmp jg xchg sbb aaa dec (bad) in dec xchg dec ror insb push outsb add cltd (bad) (bad) dec add sub add cmp mov cwtl imul test sbb out sub call mov mov xchg mov cld ljmp cmp adc fnsave fwait repz (bad) test hlt or sbb add add ret mov (bad) aad cltd mov xchg sub push xlat mov int jmp mov and add dec and loop xchg or mov nop lods addr16 jl ds push pop aaa stos int push cmp or mov enter fsts push (bad) xor dec ljmp (bad) pop xor or movsb insl (bad) mov jne dec sbb sbb lcall outsl addr16 stos add test in sub rcl ds movl xlat loop iret faddp dec (bad) data16 add mov pop outsb stc pop into mov mov loopne dec dec dec loop mov pop repnz sarb lahf pop lahf mov fcompl (bad) fnop jae cs test and jge push mov xchg xor push mov inc ficoml or shl stos dec mov fs movsb xor pop push gs mov punpcklwd pop stos cmpsb test in (bad) fdivl xchg mov subb push xor adc pusha arpl push (bad) mov mov imul jo mov rcll pop out ss sbb test gs and mov xor inc pusha out mov imul adc adc dec inc (bad) adc pop pushf ja aam popa aad stos imul jo sahf lret push mov dec mov mov lods dec int3 out sbb js push pop aaa aad push (bad) outsl cltd jmp fnstenv bound pop jmp cs sbb jl and pushf mov rcrl sub xchg dec pop adc inc repnz mov mov push add gs outsb push mov movsl mov fs pop je push xchg out jecxz sbb inc mov hlt sbb jbe mov pop inc aas and test enter mov int3 cmp popf popf lret mov in js push dec fwait shrl (bad) mov lahf dec sub adc jns pop push dec sahf lds jg inc out mov bound movsl mov jecxz shrb pop stos pop push pusha movsl xchg ja ja fidivr clc sub shlb in cmp sbb pop cmp jg ds pop adc fdivrl inc adc xor inc iret and shrl int3 push (bad) mov scas and stc test push jnp xchg jo dec mov mov nop inc jne adc sub ja xlat lret push jo push clc lret punpcklbw dec les push xchg gs pop xor jle xlat pop mov mov mov das push int3 out sbb jmp dec sbb cmc dec fcmovnbe fdivrs outsl xor sub jns mov lods dec push icebp xor mov movd pop pushf pop pop xor test mov out test (bad) push rolb sarl mov aaa pushf pop fwait cmp ret inc jno shll jnp adc dec mov lea movl loop cwtl mov jmp pop mulb fwait mov pop arpl lcall jle mov std nop (bad) jbe loopne repnz inc mov and sub adc add icebp lahf push pop mov sbbb rolb cmc pop xor push cmpsl push and pusha or jg dec fist sbb sub repnz mov jnp cli lcallw pop out into or (bad) loop mov out cmpsl adc in jp (bad) in pop rcll aam jp jno cmp mov and push addr16 mov xchg inc inc mov xor (bad) imul xor sbb loop sbb outsl arpl mov push lock loopnew dec mov mov mov cmp xor mov scas mov mov jnp mov fxch pop add fld or cmp sbb shrl enter pop jl (bad) loop,pn xchg add adc mov loopne pop lods cwtl fwait roll or pop mov xchg cmp mov popa in arpl stos pop and cmp mov (bad) rolb aaa pushf sti scas adc stos push add lret mov mov push jne lret and pop ja addr16 iret nop lcall daa das pop lods mov and daa xchg (bad) out ds int3 aaa fcompl cmp sbb pusha sub loope shrb sub arpl push fdivl and cli and cli ss sub push mov ret mov push ja lcall adc cmp jbe adc jne pop out cmpsb ljmp mov scas push ja pop or cmp push pop inc mov mov lea inc push push lret aaa sbb inc jle movsl (bad) lock aas pop int sarb iret int3 data16 and int lds cs dec jge push scas add sbb sahf cwtl or dec cmpsl sub movsl aam push icebp movsl lds or push sbb in mov mov inc insl cmp (bad) sub (bad) cmpsl (bad) js and int3 mov xchg sub imul vpunpcklwd fild and clc dec bound jge sbb push shlb push jns pop clc test and nop jno dec pop pop adc add adc mov sub inc pop arpl adc iret jg and fist inc shlb jb xchg roll sub jns popf movsb or in insl or iret lods or jl fisttp xchg cmpsb cwtl mov cld dec mov cmpsb inc sbb js arpl imul jecxz jns fs cmp mov mov stos ds push and and inc (bad) fisubl aas inc jbe or pusha jne pop mov dec repz in fs cwtl and mov add les xchg js cli into mov inc push dec push cld cli sti mov and cmp es pop jno arpl repz stos jb (bad) (bad) loopne fcmovnbe clc fsubl sub sbb dec insl dec imul frstor jno std pop sbb cmc fwait sub inc sbb aas jecxz ret inc push jns mov and in cmc rcl fwait popf mov das xor (bad) ss negl (bad) cmp (bad) mov cmpsl cmp add dec mov outsb sbb sbb xchg or packssdw mov jno sbb sti pop add icebp scas sbb das insl xor inc loop jp cmp add clc mov lea cmovno into mov into stc arpl pop (bad) xor call mov cmp scas mov adc mov fwait and out dec cli mov dec and or lds loop cmp test insb jmp jp fnstsw and jno outsl imul mov pop addl add lahf sub (bad) loopne add lret addr16 sub add pushl loope lret (bad) fisub (bad) (bad) aaa mov pop (bad) in mov dec pop push js repz (bad) hlt pop dec add mov push pushf mov js jnp es (bad) rol aaa gs dec mov adc outsb cwtl xchg insl loope mov in adc out imul cmp jbe push xor ds ret push sbb pop divl cmp call mov push sub fdiv push cmp mov jb imul mov out je rorl sub shlb cld mov das inc push (bad) popa lret int adc mov cmp movsb enter loope repnz jae sahf imul rcl lret enter mov xchg adc push jb pop cld pop repz jne jo mov pop rorl fnsave decl sbb movsl (bad) mov std jmp (bad) sbb inc repz dec xor nop mov jp lret mov repnz inc and push insl roll insl cltd sub dec aad mov inc out bound lea cmp cli push mov loope mov out (bad) jns lods adc jnp mov jno inc scas scas dec dec subl add or or sbb dec pop and inc aad mov sbb xchg scas ds add lret cmp lock sbbl fdivrl or shrb jmp or test mov testb pop lret popa mov dec cmp push pop shr cmp and jg jg mov (bad) xor dec cmp pop (bad) jnp out ss dec or lods adc lods inc add jl and flds lds jge xor add sbb adc dec fdivp pop add jno mov idivl xor fwait in ja js fs xchg stos adc sti ror insl addb shll fsubrs pop or lea bound pushf aas mov sbb or lret andl test fldl xor sub dec push divb xor cmc mov pop rclb nop inc mov data16 push cmp dec mov mov lods fild mov sbb inc xchg daa cli dec jnp sbb jle push lock cli inc pop fnstsw adc push (bad) xchg incb dec mov int3 push sbb fnsave fnstenv or sti sub (bad) cmp inc cmp fldcw aam ror aas or xchg add (bad) sub mov sarb std mov rolb sub adc push sub mov pop push pop add aad inc insl jnp mov loop fsqrt (bad) (bad) push ljmp xchg sbb (bad) shll ja enter inc (bad) mov (bad) xchg pop test pop aaa jge sbb xchg sbb je iret jns lock loope mov pushf jg push dec (bad) lahf push nop cltd stos xor je nop pop into js pop push pop pop dec xchg add push push cmp inc xchg mov (bad) in cmp jle jb cmp dec jne cld push jbe in popa mov cwtl xchg daa lahf push pop popf bound sub mov xchg ret ret cmp xchg xor les daa pop dec mov push icebp jge sub or or xchg icebp mov popf decb outsb ja adc sub push sbb pushf mov (bad) in sub popa je aam jns,pn mov jp gs cltd jno xlat sbb or jmp mov xchg pop roll add mov lahf sub sbb xchg inc imul lock push lods fcoms cmpsl xchg loopne add or mov out inc (bad) xor insb xor imul jl mov hlt ja mov sahf pop inc (bad) xor dec outsl push div in cmp mov xor sahf rep lret push iret cmpl adc pop push push in je cmp jbe insl clc cltd ljmp sbb iret scas ljmp mov stc xchg test leave addr16 mov pusha xchg fiaddl push pop inc imul inc adc pop pushf add out jle add xchg cmp std movsb pop add xor je push cwtl mov orb mov outsl ljmp push andl (bad) (bad) fnstsw out or stc repnz inc or lret data16 pop pop xchg dec and mov or sub sbb mov or mov add add add adc push or or (bad) stc pop lods fwait jp mov jl scas dec scas imul fcmovu cmp dec add jb push or repnz and push push lods icebp repz dec xor rolb das fs jno ss mov fidivrl dec lahf xchg jnp data16 adc fist mov push ds mov pop jno mov mov lock mov jp add loop jmp rcrl subl cmpsl fstpl ret in xor mov add into fsts mov addr16 or xor xchg pop rclb repz push in lret repnz xor loopne shll and mov divps les pop call pop xlat call add sbb mov sti add dec icebp (bad) xor enter xchg and lea adc lock stos dec adc mov movsb aam xor xor das aad pop loope out cs ja cmp (bad) jmp fwait add jnp (bad) sti mov adc imul jo jae fistl test btr and lds out sub adc or or lret sub ja js clc outsb mov jecxz xchg loop mov adc js fwait mov repnz mov lods or add dec inc pop sbb sti mov pop add call push lret sti lret inc iret inc addb (bad) ss ficoml sbb cmp inc pop mov sti dec inc or sbb mov and out inc test push sub out popa sbb aas cld int3 adc call movsb std mov push outsl jns inc mov inc mov sbb xlat and dec push loop cmc sti mov dec xchg pop pop in mov xor jge ds sub or (bad) fstl mov dec mov jnp push add ljmp loope mov xchg lret ret mov (bad) add (bad) inc inc dec dec movsl mov sbb shll mov icebp test loop mov xchg loopne cmpsb adc jae lea aas jne test lock adcl aas pop pusha test inc cmpsl jnp (bad) xchg bound aaa sbbl xor fmuls pushf gs fcoml insb mov adc jle fsubl pop or or int adc jno push fisttp rcr (bad) ds (bad) jbe movsl cmp iret push push jno (bad) mov mov aas in inc fucomi mov fildl movsl pop incl aad add mov jecxz push xchg repz push fdivrs push inc scas repnz fcoml add popf lahf push (bad) arpl jb mov jbe in mov adc cmp ret add cs mov or mov mov jmp adc movsl cli add xchg shrl aad fs cltd inc and into inc dec sbb cmp scas or xchg add push sarl push push mov (bad) int3 xor jnp outsb clc fisubrl lds mulb mov pop push pop sub add dec pop jecxz or jno lret movsb inc add ss sub jb aam pop pop js mov outsl or and ljmp arpl loope inc loop scas sub push xchg enter scas cmp stos pop shl cmc outsb ja popf ss ljmp mov test inc dec cmp and std adc inc jbe cmp jg xor add and pop or jns mov pop inc enter aam dec pop stos and nop pop and inc jmp mov fldt mov gs sti pop or mov mov fimul js adc jp les adc xor sbb add push xchg and cmpsb repnz mov in adc jle cltd fldl inc (bad) into iret mov out lea outsl (bad) (bad) (bad) aad in xchg xor (bad) adcl sub mov inc outsl mov out cli stos imul xchg cmp and xor adc add lahf mov pop and (bad) pop adcl inc test xchg push jne insb sarl inc shlb das int3 push dec inc mov test push jmp gs outsb mov stc loope mov loop jle adc pop jne adc lock scas jmp mov cmp sub lret outsl jns outsl in cld movl (bad) and mov nop cs cmpsb mov mov jne (bad) movb jns inc sbb insb popl faddl xor lcall sub inc popa mov push push notb mov enter mov sub or xlat push call hlt in pop aas es je lret xor ja test lcall out mov or js std ss outsl or xchg cmp loop cmp mov mov add add inc mulb jecxz (bad) and mov and clc inc pop dec out enter jp dec mov or push les (bad) stos pop adc (bad) and sbb lahf scas (bad) mov adc orl adc lahf sub and nop mov jmp pop xchg lock imul mov xchg ss or loope (bad) out adc xor movsb dec (bad) cld jle sbb mov repz popa push xchg and or stc call fiaddl enter cmp push xchg cmp jo adc popa loop or mov out frstor jg dec xor push and pop jbe add or mov mov nop mov ljmp mov sbb lods adc lock xchg push mov (bad) iret and test mov xchg bound xor sbb out scas sbb or mov iret pop ds movsl (bad) bound jb jno mov test mov add inc cmp sar int faddp mov adc out dec pushf loop ss test dec mov aas mov fnstenv adc xor xlat mov lret (bad) clc subb xchg sbb (bad) sub pop lcall or push pop (bad) daa adc or out lret out popf pop dec ret rcll cltd nop mov outsl lret mov les push fsubr (bad) call lret mov cmp adc add dec lds dec push jl in ret inc inc xchg fwait daa ljmp bound mov fdivrl daa fsubr icebp xchg cmpsl mov mov add xchg icebp into jb mov jp xchg mov sub frstor test sbb lret mov mov mov roll testl cmp xchg aam lods cli (bad) mov ljmp lods dec addr16 mov test mov pushl std adc mov cmp cmp xchg enter pop clc adc push std test popa iret sti stos shrl jne or mov pop pop mov outsb mov (bad) popf lods (bad) jle fwait jae aad xor outsl cmp stc cmp data16 jl lea pop xchg cwtl jecxz inc test lret jecxz outsb movsl and jne adc icebp sbb inc push pusha adc mov sub out or sbbl mov adc inc sarb cmp add (bad) cwtl lods mov out sub out loop push das fsub rcrb ss mov imul add fidivrl push sbb dec xchg mov cmp push mov or dec sub jbe fistpll jno cmp mov cmp ds xorb xchg sub pop outsl sub call fidivl inc push inc je xor ljmp fcoms mov or ja fisubl rclb dec mov xor inc adc push rcrb add jae adc es test jmp test sub (bad) movb mov sbb mov mov cmpsl les stos push sbb xchg xchg aad lahf mov mov sbb pop inc xor add test andb dec sbb sub adc pop leave fwait dec test lock cmp ret jnp enter cmp inc dec imul lret repz cld mov dec mov adc sub pop xchg xchg fcoms mov sbb and jb push nop hlt stc aaa mov das xchg insl lods mov (bad) fldt pop mov pop cs sub movaps sbb or mov sbb or out repnz (bad) xor (bad) jo push xchg cmp aaa add test mov push cmc cmp (bad) icebp sub fdivp cwtl inc std mov xor adc mov stos mov jecxz dec add xlat mov add inc in xor cmp mov pop and cmp (bad) jecxz mov stc sbb jecxz push or push add mov sbb dec adc lret cltd xor dec pusha dec pop mov cwtl dec (bad) lock ljmp mov jns loopne or xchg push addr16 xor dec jmp push daa inc add pop (bad) sbb add xor lds pop les add or (bad) xchg je call imul flds push gs jbe xlat orb bound int mov daa jno inc push add aaa testl jp xchg sbbl test mov ret mov jmp lock and push imul (bad) popl jle or inc imul pop ljmp add sub clc adcl jl,pt jns push mov add addr16 aam into insl movb push and jnp and fnstenv or inc test sbb popa xor sti or xchg xchg mov mov push addr16 scas std cmpsb cmpsb jp push sub lcall daa arpl dec add data16 cli push imul mov (bad) insb das add jns jno movsl outsl jecxz sbb mov fidivrl push call iret hlt lahf aas cmp rcrl (bad) xchg arpl outsb lods or push (bad) adc pop pop scas mov xor jae lcall cltd xor test mov mov xor outsl xor xor and arpl jne mov insl ret loopne cmp sbb test adc jmp (bad) pop std aad data16 lods stos data16 xor xor push and xor insl dec lahf divb jge test push adc (bad) fisubrl dec out xchg clc jecxz loop push mov in add aad addr16 js out scas js xor mov clc adc mov enter mov mov comiss int3 add dec in das sti loopne pop adc loope movsl mov sti outsl push outsb movsl push jno xchg xchg cmp push lcall pop lods arpl adc out sub cwtl loop add xchg loope xor push imul dec cmp mov add hlt push jno mulb rclb decl data16 and lret add dec cltd sbb sub xor (bad) push xchg and mov fmuls pop mov cmp lcall lahf imul (bad) fisubl dec mov pop mov push iret test popa into insl (bad) inc and or pop add out arpl lods push xchg cltd outsl loopne fstl cmpsb rclb je lock js int3 subl cmc dec jmp mov sbb fadds negb fdivs mov inc std mov sub xchg mov lods inc jg clc mov ret mov fistpll outsl mov xor (bad) call push out jbe add adc cli lahf popf pop out xor sbb mov or popa adc adc fmul bound ss movsl bound cmp xor lods stc inc sub xchg inc icebp es sbb (bad) add mov neg call lret test jp mov cltd test lds inc ret push ret or dec insl mov add aas bound ljmp xchg daa aad push mov fdivl push jp push add in inc lret sub test rolb add xchg push out outsb inc lret dec adc jne js dec cmp leave rorl mov cwtl popf sub ret fnstenv mov cltd icebp mov add imul lahf sub jno add rcl invd enter jb and adc ficoml mov sub lcall pop xchg pop test int imul inc dec lods jecxz mov lret nop fwait lret rcrl mov (bad) js sbb rcrl cld dec std (bad) out stc jmp xor int mov xchg dec (bad) jmp ljmp push (bad) mov sbb pop mov lret jmp je aaa and dec sub inc rcrb (bad) push test jecxz fdivrl mov mov and movsl push mov leave mov call div mov and xor aam xchg repz jl scas fnstcw push cs mov adc (bad) dec add testl and rclb scas (bad) jl test aam (bad) in mov jbe jecxz pop out sbb jnp dec pop adcl pop push movsl fs neg xor mov mov dec adc pushf jmp out bound jbe jne pop fsub jbe dec lea movsb imul mov aam mov aam mov sti popf (bad) test push dec test icebp in mov pop movsb add movsl jp add xchg jge out xlat inc rcrl xchg ja ret inc mov cmpsb add stc cmpsb adc xchg cmp sbb xchg (bad) dec scas push ret outsl add repnz test mov in mov xchg pop aaa aas push in lret jmp rcll frstor sub mov jl and xor in push mov lods cwtl fnstenv lcall push xchg leave mov fiaddl dec enter mov jno sbb decb xor lret pusha jno jne stc (bad) push scas loopne cwtl jbe imul in lcall mov adc pop mov sub cmpl jecxz pop fnstcw xor add pop sbb inc (bad) cmp lret push add stos nop je pop fiadd dec lock (bad) (bad) aad test pop (bad) jg or dec (bad) outsl jl shll or insb ret xchg or dec test or jmp inc push rolb jmp fs dec pop div movsl inc lcall (bad) cmp in outsb (bad) pop push jge stos xchg test adc push pushf xchg adc xchg cmpsl sti (bad) mov pusha shll iret and mov xchg cmpsl mov or mov test ja rcr xchg xchg add int mov xchg pusha cmp popw pop or xorl imul test in cli iret xchg js cmp pop pop sbb cmp repz loopw (bad) dec inc pop adc fwait iret arpl cmpb (bad) ljmp cmp dec sahf mov xchg inc ror in inc or mov push shlb adc out sub xchg das xchg fcompl xchg mov loop dec push daa xchg les out mov fisub mov enter xchg loope inc jg lret sbb and mov ljmp mul das outsb cmp fsubs rcrl pop jne push repz inc sbb sbb insb pop push inc nop sbb negl cmp sbb enter add and insb lret test or xchg sub jg xchg xchg or jb push sbbb loop fadd cltd addr16 daa clc cmp or test imul or movsl (bad) (bad) pop add je inc cmp pop xor inc mov mov mov iret imul ja mov and fs aam adc js ret cmp (bad) xor stos test xchg mov cmpsl jb and lcall xlat jl pushf adc imul lret ret sub ss push orb (bad) fcmovne (bad) std jp dec adc or push push (bad) icebp lds inc jg mov sbb mov int add xchg loopne sub cmc dec lds es mov pop sbb sub mov dec jb outsb icebp popa dec mov mov push inc shr mov jbe lods sbb pop sbb lahf ljmp mov rcll popf jbe cmp test mov aad xchg pop aam (bad) xor mov jno nop mov aam add push cmp mov jbe enter jg adc js test mov popf jne mov dec xchg test lcall insb pop inc iret dec mov pop pop gs sbb in gs and adc add mov sbb sub stc lret bound movsl or xchg pop inc mov and hlt shll (bad) ljmp fadds jle mov pop lock gs loopne shl hlt xor fadd int3 push and mov sub mov and push or lods sub jg inc iret push mov jg test or mov push mov lahf fsubs mov repnz das sbb ret (bad) fistpl (bad) cwtl push add mov in xor cmc in xlat cli xor insb mov mov movsb rcrl inc je scas inc add jno jle test int dec ds dec ja ffree addr16 push sub fdivs xchg xor push scas test inc addr16 add (bad) jnp popf mov mov out push lret mov sbb (bad) push test dec xlat adc test fildl (bad) inc mov (bad) lahf and mov pop pop daa mov pop jge or popf cld lock lahf xchg add xor js and dec mov inc sbb mov sahf dec andl adc fsts mov add inc jl (bad) rol rcl sbbl movsb push cmp inc rol xor out dec add imul dec cmpsb mov cmpsb (bad) test inc or in clc and ficom hlt mov sub ret sub repnz arpl lock sub js (bad) icebp in jae lahf jmp jbe ret aas dec jno movsb cs dec clc (bad) enter pushf push sub pop mov (bad) adc push hlt cmc call mov push mov sbb arpl out xchg mov mov sub decb push repnz push xor xchg push call and mov or cld stos jl cmc pop mov outsb mov test sarl cmp sub cli rclb xlat xchg ficompl (bad) neg push mov push and jg clc dec add sub jns imul ss stos ficompl dec mov out (bad) mov jl test insb popa xor sub (bad) jno aaa mov push pop cmpsl mov jne shlb push fidivrl fistpl inc xchg mov jb sub fsubl lret mov pop lock shrb leave pop push lcall sub ffreep add cmpsb pop pop loope jle add add inc sahf dec xchg pop inc mov mov xor popf (bad) add push mov fdivr xor pop shr and ljmp sub imul push std jae adc fcmovnbe mov je jg outsl xchg outsb cmp mov or mov leave pop loopne mov jae test lds sti jge shrl test cmp fxch jo ret call mov adc mov fistl xor inc jge mov jp sub xor jge cmp popf mov stos pop mov test or pop (bad) sbb sbb pop sub mov insl daa enter mov in les jl mov scas mov jb inc push imul add sub cltd cmp inc xchg or adc ret dec pop lret push es xlat push jecxz fwait cld fdivr outsl (bad) mov mov mov sub mov push inc icebp push push test dec inc test xor dec xor or leave imul (bad) std mul dec cmc sbb jno and fstl cs dec mov mov push fidivr hlt lds idivb fisubrl push cmpb sti adc enter mov (bad) fistl (bad) jbe aam rcrl insl xchg push jb popf push jp pop xor pushf bound outsl into pushf loopne add mov mov push aas sub xor jbe or lahf (bad) out (bad) loop adc bound (bad) repnz push in (bad) loop push sub xchg movsb popa mov int3 pop call nop (bad) in push (bad) rol pop mov mov lret cmpl int xor add inc adc adc pop sbb fldcw fstl xchg jbe dec sbb scas idivb cli shrb and ffreep icebp push push push mov icebp out in lods sub inc icebp mov in jmp add (bad) xor loope xchg pushf imul lret jno inc out add mov fcomps or call mov xchg int3 paddusw idiv outsb pusha aad push loope clc mov mov xor aas sti fnstcw or (bad) mov jo add pop call mov xchg mov and cmp sub sub mov test adc ss adcl test lret jmp cmp in and pop and dec cmovne mov loope (bad) das xor cwtl bound fmull or stos mov fiadd lods mov or mov loopne jb xchg and out jbe cmpsb pop out (bad) push jp push adc xor push dec push lcall (bad) pop add cmp fild pop dec push out jno sub xchg push repnz aaa repnz leave xor xor sub mov push iret test sahf cmp inc fdivrl mov xchg dec jle stos and xchg inc outsb mov sarb das fdivl adc xchg stos inc and push or push pop cmp mov aam xchg mov sbb jmp push sub push cmpsl xorb mov (bad) adc jbe cwtl out mov popf lret inc aad imul call pop sbb fsubr jo adc ret xlat mov push outsb and pop movsb je xor scas mov xor mov mov add loopne pop mov sbb cwtl gs popf je,pt pop repz push (bad) jmp pusha outsl imul cmpsl icebp xlat sti push popa cs das imul jae lods repz jecxz (bad) (bad) jae sbb sbb pop jl or sar mov into or jno pusha lods daa test fcoms adc mov jg test dec push xorl lock sub sub out xchg mov rol lock mov ret sub enter mov xor pop clc push adc inc js mov sahf mov adc xchg add cmp sub lcall pop cmp xchg push add dec pop adc add mov in outsl and or push pusha repz xchg jmp sub shll or xlat lods test fdivl fbld insb mov into stc out fldt mov rolb and loopne mov (bad) sbb loop jg pop (bad) mov out sbb fstl pop and mov fdiv adc imull sbb ret push into xor aas shlb dec fisttp cmp pop mov or dec daa dec sub xchg call jle les push mov mov mov test cmc pop outsb xchg call out jns xchg mov pop cmc jg outsb subl sbb loop push push jae es out mov cmp out int3 jb xlat sti test test pusha mov loope (bad) sbb js jno inc popa push inc (bad) or push jb push jno repz ret sub (bad) loope adc sbb adc cmc insb push (bad) jb add jo sarb das jns,pt mov xor (bad) in xlat jb inc xor (bad) mov mov cmp enter pop mov cmp mov mov js xor push push mov mov popa cli sahf mov movntq lret arpl push scas imul xchg pop push fsubr cmc mov mov sub js ljmp cltd mov pusha sahf or mov insl in jmp fmul fstps mov loope mov fstl gs pop sub mov cmp inc imull mov sub enter jp or lods imul icebp or in and dec inc cmp sti cltd addr16 pop lcall inc and scas fs push mov pop dec scas test (bad) jne inc cmp mov cmc fildll cs jmp push cltd idivb (bad) jl mov ret or out sahf or fisttpl fidiv cmpsb and push adc cmp pop push mov (bad) sbb leave rorb lahf mov xor mov cli sbb sub out dec jmp out bound cmpsb adc loop decl lods movsb inc add loope dec fcmovnbe pushf mov sbb pop or ljmp dec cmp jbe lret adcl xorl pop and jp sbb fstp mov pushf push xor adc pop add leave cmp inc push and test mov idivl cltd lahf lret mov inc fsubr mov xchg repnz inc test insl stc mov call in test incl sbb out xor inc nop push addr16 mov xchg jo int inc cmp xchg hlt ds cmp outsb and cmp cmp xchg or daa addl xor add jecxz mov and lods (bad) pop add js xorl mov sbb sub fsubs xor sbb repz cmp pushf xor push rcl and cmp lods dec orl aad push test jecxz rcl (bad) mov sub and imul lock xchg jl mov popf stos mov mov test jmp lahf loopne cltd fcoml or mov fmul popf xchg pushf mov jmp fisub scas jbe pop fildll and pop adc (bad) pusha jne jb push iret xchg andl mov jo jnp data16 in repnz fiaddl js cmpsl sbb rcrl pushf xor (bad) sub movsb ss jge fs jmp or mov rcrl adc lret (bad) hlt sub push lahf into mov adc mov jge add into lods xchg xor dec cmpsb mov adc cs mov stc xchg cli loope aad jb enter es popf aaa mov sub inc out cli (bad) pusha lret fisubl inc pop jmp push cmpsb sar cld jo popf cmp fwait sbb adc adc mov leave scas fxrstor call xor cmp ret mov fwait mov pusha push inc fwait cmp ss jle xlat xor fwait sbb push cmc in in jp,pn (bad) adc pop adc inc bsf lret sub fcmove push adc jae arpl test pop and enter enter fcmovnbe out cmp xor inc push mov (bad) sbb popf popa pop fimull xchg cmp dec cmp fisttp sahf jp or adc into call dec xchg lods lret xlat addr16 cs jo or mov add fildl ret mov les pusha or add test mov or out mov and push pop stos loopne or pop (bad) mov aaa sbb ljmp cwtl gs pop inc xor inc pop dec mov ret mov cmpsl push and push popf cltd jmp fcomps jbe pop std or stos pop inc popf dec adc int3 inc inc push jmp dec loop pusha (bad) (bad) sahf pop daa repz lods das dec cltd lds aaa push sub lods lea add xor mov aas push js mov and adc mov inc inc dec and rcrl jg push sahf outsl imul lahf out test fisubrl xchg pusha mov movsb popa dec cmp (bad) jno jmp jg es add cmpsb adc dec push gs std and push mov idivb push subps push xlat adc mov pop out fistpll jle inc les sub ds std pop std dec xor out cwtl jp push cld out mov lcall push lds out adc add and inc in pop push into xchg pop jl int (bad) lea je cmpsb cltd mov push mov sub mul shrb rcll inc sbb jmp (bad) mov adc in pop jns out xor mov (bad) (bad) push inc adc or mov ret cmp (bad) inc icebp or or pop int push cmc loop xlat rol and pop pusha ret loop repnz test fistl stc mov xchg push mov sbb jb cmp out js scas cmpsl aaa push jae lret (bad) lret movsl add mov pop pop mov mov testl xor sub jl and push repnz repnz pop push jbe mov mov xchg pop or mov xor int xchg xchg je push js cmp imul or inc or aaa adc (bad) push cmp cmp int3 popf push add push xor and push mov push xchg adc mov test icebp in aad push inc push (bad) cli jb (bad) test xchg ficompl push jmp mov dec mov push xor cmpsl or cmpsb xchg mov jl mov mov xlat icebp out paddb jbe sub rcll mov (bad) jbe sahf scas mov or jae popa and repz test mov dec inc bound xor xchg pop jo (bad) ljmp imul repnz mov mov lea arpl fucomp lods pop xor mov lock rcr stc addr16 rcrb insb add xor sub lods or lods and movsb dec fildll out push outsl lods adc stos adc xchg sub jl (bad) jae in inc sbbl dec out and repnz popf ljmp pop add mov jno jo fcomps inc xchg mov fisubrl bound shr jmp sub add int into lea add and sub icebp outsl rcrb or or stc shl xchg and pop decb aam loopne mov std test or pop jp push scas xchg xchg mov fildll sbb rclb in pop adc xchg das mov (bad) shlb mov js adc stos sbb push hlt cmp sub inc adc out mov lret mov pop popa push xchg cmpsb sarb and mov dec xchg mov dec test ret jne pop pop outsl int or ret pop pop rcr push mov pop or (bad) in pop add cmp test sbb cmp jmp insl mov in js and call mov jae test sbb movsl mov push shr push lods pop push xor (bad) stc inc int3 pop push arpl and cmp push xor insl mov lods dec dec (bad) push sub mov loopne add or es out ds shrl test adc dec outsl call jb lcall roll pop ror lds pop jg mov pusha mov lret sub mov rcr mov lock xor and mov lret cltd roll fldt enter mov mov ror insl rcrb cmc add sub push add push fwait js cmc stos or jg pop aam mov mov stc pusha (bad) push out cmpsb push cmpsb lock (bad) repz inc xor jmp fldenv pop gs repz je sbb mov in or pop iret adc pop cmp repz (bad) xor sbb cmp enter scas mull jmp fist xor mov and andb xor (bad) fistp inc in movsb xor or bound sbb pop repz bound mov fucomp jbe cmc and pcmpgtb outsb jmp (bad) mov aam mov and or inc pop sub (bad) jb xchg stos ror xor mov jns stc mov shl in xadd mov pop sbb xor dec mov ret negb daa cmpl (bad) movaps sbb mov test pop icebp sahf imul call (bad) nop es mov ret outsl into movsl movsl dec popa pop cmpsl scas pushf xchg fwait out je,pt jbe adc in enter pop inc mov adcl in mov xchg push push out (bad) fcmovnb test sbb pop out mov mov dec in loope imul ds ret lcall rol cld (bad) cmpsb push cmpl test out jne and push inc cmp dec mov pop popf add sbb xor push call sub mov aad mov mov jbe out mov aad or and imul lcall lods pop sbb jecxz lock fxch sub and adc fild rcrb jne mov sub insl stc add mov sub rorl xchg sbbl dec jae roll jbe mov inc insl test fild xchg push mov xor mov adc cli cmp iret mov fmuls mov mov or adc test cmp mov and jns leave cli daa xor xchg lcall pop icebp lret daa add jp xchg popa jae nop pushf dec pusha jb dec pop xor or mov jns adc push lret push cld pop mov mov and insb pop dec add shll fdivs sarb cmp cmc out jecxz mov (bad) jbe ret fnstenv add and sbb push pop push test stc daa lret mov ds sub aam and jno pop jbe or stos jecxz in adc mov jb negb aad mov cmp addr16 xchg fsubrl gs fs rolb mov and stos sub or jp dec (bad) pop inc push jb aam into mov adc out scas cmp sbb jne sub xor fnstcw cmc xchg push cwtl ss inc pushf sbb sub ret dec fdivs xor sbb lock lods das push fidiv ret jnp push inc sub pushf fwait and outsb jecxz add pop in mov dec (bad) push mov movsl xchg stc les popf aad mov jge aaa das push ljmp mov and lret lret stos xor mov lcall jle aad cmp and aam out cmp (bad) xchg mov push adc pop xchg loopne popf cs cs dec in jne sbbb mov ds out add nop pop fstps mov jg je inc shlb jae cmc cmp (bad) mov push nop mov hlt xlat jo push add rorb sub ret push sbb addr16 cmp cmpsb xor cmp sub cmp jb push pop (bad) xor popa inc add mov imul (bad) scas or mov inc roll js outsb sti push xor xor jo (bad) fistpll stos jno cmpsl cmpsl out clc sarb (bad) or test xor pop out pop fnstenv insb inc cmp and mov xchg mov fwait jle dec rclb pop iret ret mov jmp adc push add mov sbb sub inc test cltd cmpsb pop xchg stos gs cmp push gs lret xor adc ss add les or hlt (bad) mov aad aaa cmp pushf iret (bad) repz sub adc outsb rcrb icebp xor shrb or xchg and dec adc and cmp roll jno movsb xchg adc mov out push inc aaa cltd mov xchg in stos leave sub and cli cmc (bad) mov (bad) daa mov pop cmp xchg sub mov aam mov cmpsl in xchg repnz stos inc leave jne and add hlt sbb sbb jnp dec test idivb jecxz dec imul xchg sbb les push mov aam mov popf faddl adc sahf mov xchg jne adc mov aas imul aam cld cltd jge insb adc jl cld and scas push (bad) mov jle xchg and (bad) out jecxz popa sarb (bad) dec adc jo popf cmpsb dec out out dec pop mov mov jmp jle inc fidivrl sbb fdivs jb shlb dec mov jns ss dec hlt mov out jge out pop lock xlat inc in out in mov xor dec mov ficoml leave in hlt jno loope dec stos adc pusha and jno dec mov inc out xchg or cmp pop lret (bad) fchs pop stos lea and insb orb dec sbb mov jne pop fnsave pop mov in int inc jo xlat push jnp loop jmp leave rcl xor xor or and cmpsl sbb mov pop fisttpll clc cmpsb es mov stos clc lods jb aas dec dec or lock fldenv add arpl leave scas das push and mov dec push setne imul lea scas xchg jmp aad stc fnstenv loopne and mov mov mov mov push cli add sub push lock lock stos imul and inc cmp lds and mov or js fidivrl xchg repnz sub xor mov pop pop out into xchg out dec mov fisttpll xchg lods divb icebp mov push cs or jb mov in fcmovnbe lcall cmpsb cmp scas fisttpll mov push jp jne add cs cmp push mov je clc add inc add xor js or data16 jnp (bad) (bad) cmpsl adcl pop scas int3 push inc mov insb mov ret lret and push (bad) lock pop cmp (bad) sahf mov mov push insb subb in cld subl mov std push outsl outsl outsb adc push (bad) idivl loope jbe pop or arpl cmp adc cmpsb popa pushf xor pop bound xor scas cmp fdivr jbe outsb or mov mov add stos and mov addb nop xchg sahf jmp and inc add lret roll lods push fist add dec insb je and pop sub ret sub test xchg xchg jns popf pop mov dec rorb cmp lret jnp in pop jmp mov mov std mov or aas test push and xchg ja hlt jmp jp sbbl sbb pop mov jmp into xlat sub les neg daa das mov adc lods xchg mov test cmp mov mov (bad) lea cmpsl sub arpl mov mov adc pop lock and leave push dec outsl or jne inc jns fs push aaa push xchg xchg push hlt inc xchg ss mov dec add frndint loopne xor (bad) repnz (bad) icebp int3 sbb dec inc adc rcll in stos pusha fcmovu call push movsl nop add shlb jle out mov push mov mov fstps mov sahf jns pop fstp test push aas stc pop jae add loopne dec loop push adc (bad) enter (bad) hlt ret cmp fidiv scas cmpsb ljmp notb testl adc and sub xlat outsl (bad) ljmp cmpsl jne sbb jp push (bad) xor sbb (bad) inc pop aas jle or push sub xchg outsl add lahf adc push push jmp mov cli fs pop add stos fistpll clc or repz xchg notl cmc fdiv or add in xor lret sbb popf fcomip xchg xchg in les inc call push xor cmpsb cltd lods mov cmp mov les cmp xor into xor scas push shrl push dec ja jmp stos stos stos or cmpsb stc test push pop cmpb rcll jnp dec push (bad) scas call and mov mov cmp cmp rolb divl mov and cwtl xor bound mov push ljmp insl into hlt hlt ficoml stos jle xchg add hlt jae (bad) scas out push int jmp xchg lods into mov (bad) pop push rcll out xor adc arpl fidiv cli xor xchg mov stc or pop pop es imul lahf ja add and dec mov or mov gs pop xchg (bad) dec xor dec mov arpl dec call push movsb or call fldl sti (bad) sub add sub addl push xchg pop ret push add push roll jbe in lock inc imul adc inc adc lret loopne xchg addr16 cmpsb imul ret xchg movsl jno loopne and scas fildl ja ret jmp mov pop pushf push or jb xor mov xchg dec xchg jg xchg test xchg sub jae xchg pop ja mov lods lret sbb sbb push mov icebp fwait cmp fdivrl sbb xchg pop sbb xor das out adc sti sbb push add (bad) dec jbe repnz (bad) xchg lds jg aaa int leave es push sub lods push fstl push lahf xchg scas mov aaa and xchg int out or dec add xor ret jo mov pop daa adc lahf je xor test cld inc ljmp rclb (bad) scas ss pop in cwtl lds cmp adc (bad) test aaa mov (bad) outsb imul and jne mov or add les cmc jne add aas xor test pop add xchg sahf imul aam popa aam or (bad) aam out lret mov push aas pop jecxz cmp adc sbb mov adc sub xchg push mov and and test popa and stos mov add cmp mov mov mov out push mov test fmul lock mov jnp sarl jle jecxz push xchg pop outsb (bad) sub repz fmuls cs cmp lds mov int loop xor sbb and outsl push and adc icebp mov mov pop (bad) arpl (bad) (bad) shrl (bad) out sbb push xchg mov das scas into mov adc or inc jb dec pop xor mov jg fdivr xor movsl and das cmp imul cs cwtl fwait nop adc mov repz and cltd xor inc and (bad) test fwait test aad fidivrl sbb mov stos icebp test and enter pop stc inc mov jnp push fs xchg in xchg xlat (bad) je (bad) sbb div xchg hlt pop mov xor add sbb movsb stos pop inc xchg and xor in scas xor imul dec xor push data16 mov mov xchg xchg or xchg inc inc or dec sub adc jl or ret mov jno xchg subb enter dec push xchg adc xor xor out mov sub in push mov vmovdqa or fnstsw mulb xorl jmp cmpsb dec cld inc mulb cmp mov sbb add push pop push sbb lret sti mov (bad) push mov xor mov sub jns,pn xchg push push push mov cld iret aas mov jne mov dec xchg and pop mov jmp sahf mov mov jo ds cmc arpl int mov int mov es xchg incb mov lods out jne jl sarl stc insb xor es je cmp ffreep sub jae cmp jo xor and pop ljmp or enter lret mov shl sub test push (bad) int3 jnp fwait sti sub mov into mov mov sbb test mov jle mov xchg mov xchg cmp push es ds nop dec aaa mov or (bad) (bad) hlt adc inc aaa add mov call xor in test pushf ret test mov xchg fsts xchg push lret jmp in mov loopne push int pop movsl shll sbb mov push push (bad) mov cli sub xchg loop (bad) (bad) aad stos (bad) cli out rcrb jbe pop and insl out lret mov jg mov jge jp adc bound xor fidivr aad mov fimul jno shrl mov xchg inc xchg popa out addr16 sbb fisttp rorl (bad) (bad) repz mov addr16 out adc jnp cmp mov lods mov mov adc (bad) ret fs sbb xchg pop lcall sbb pop in lret adc jnp pop push stos or mov or sti movsb adc loope jp mov cmp inc negl movsl pop (bad) xor dec mov mov sbb or fbld leave (bad) and nop add rol xchg gs popf cmpsb add adc pop adc sub inc sub lret nop xorb fs jg stos fildl xor adc and cli mov xchg cmp or mov faddl nop das std push lods pushf and push jbe andl and adc or push xlat and es xor lods aad or es and lods leave fldenv outsb js add repz insl repz fcmovne mov fidiv call cmp or jno jp dec mov lahf fild jb add xchg xchg sbb push push xchg cli lret jne gs xchg mov sub pop int3 mov loope push sahf (bad) sbb lods jg rcl push lds int mov icebp mov arpl or fstl and (bad) jecxz aad mov push shlb xor hlt sub out in pop enter movsl lret clc dec jns rcr shlb imul xchg cmp movl (bad) div dec inc aas mov pop xor ja test movsl iret fsubrl inc test sbb popl imul cmp loopne sbb (bad) cld dec repz xor popf or adc sub dec test or data16 jno or mov or sahf pop mov xor fistp or ds jo dec cmp xlat pop xchg lods dec sbb add adc inc sahf fisttpl pop pop call fwait cmpsl fbstp and test sub ret mov loopne dec popf ror dec inc popa popf lods mov mov test je xchg mov (bad) scas push cmp out cmp mov scas inc jno roll icebp repz sub and imul jo test call bound mov and and fs jae call cmpsl cltd sub push push fnop arpl rcl sbb mov xor lea cmc jae adc iret jge xchg out dec adc lods fnstsw push out pop fstl sbb sbb jl dec or sahf lcall notb fs adc ja daa js add xor fcomps cmp stos pop sbb mov dec pop ljmp (bad) and dec outsl lds gs mov jp pop fildll pop fs sub inc pop roll cmp std loopne shrl pop inc add roll popa in nop sub sbb mov sahf adc clc repz test dec loopne repnz cltd sar sbb cld aad ret xor xor and je aad pop push mov fnop adc and jle mov inc pushf sub popa or fucompp pop push shll pop arpl outsl jne rep movsb fistpl jle je cmpsb dec enter rcrl loop jo xchg jbe dec and push jb adc pop sub xchg daa cmp pop cs push out dec es jecxz xor jnp cmc stos jl and clc loope and push xchg xchg outsl and push imul fwait cmp mov inc mov mov ljmp xchg push or mov or in mov add dec pop shlb movsl sbb mov rolb lds aad jns inc popa xchg push inc adc (bad) ljmp mov (bad) cs test mov sarl add popf sbb out mov lcall xchg pop ficompl add dec inc mov js lcall sti lods clc data16 fnstcw xor mov sbb int3 out cmpb loop stc add (bad) out xlat cmc push ficoml js sti dec into pslld repnz jmp xorl xchg insl ja fadds jge adc stos leave push clc adc cld popf scas (bad) mov sbb adc lea jle cmp sarl push cltd pushf xor lods xor adc out iret jne inc pop pop roll xor icebp daa mov mov xor push call arpl andb cmpsb inc outsb jae pop jecxz out sbb xor insl xchg dec sub pop mov sbb aad push mov cwtl jno das stos imul add xor popa or mov and test cld dec adc std jbe mov sbb mov pop xor cmc jne xlat jge scas jnp scas shr cmp add or daa adcb adc scas ret lods or (bad) mov inc lret adc jg ja mov mov jmp in add std push jbe adc js add pop mov in aaa adc lods mov ret cwtl xor jnp and mov lret movb imul (bad) push in sub pop or xor mov adc and xor mov or aas rcrl fnstsw and inc jecxz or jnp addl mov add add cli cmpsb enter adc mov out arpl and xor adc pop insl push mov mov insb lea ja pushf cs inc mov lock neg ficom adc (bad) cld mov lods shlb mov dec mov fildll jae lods sarl mov add jl inc lods dec adc jns arpl popa cmp inc cmp adc je xchg jne add mov sbb mov sbb xchg mov fsubrl push or xor xchg or mov insl imul and nop std inc push fcoms and pop cmc faddl ds insl sbb cwtl mov pop (bad) pop jp inc jecxz mov jmp add outsb mov (bad) lcall hlt mov ret adc pop mov sbb adc arpl inc mov cmp into out insb and pop jle xchg pop jno xchg sub mov shlb sub cld cmp mov clc mov inc jecxz icebp pop jne fildll sub dec pop cmp push cwtl sub (bad) sbb dec push sbb xchg loope pop or dec dec testb sub data16 dec dec icebp xchg xor mov mov fcomps or out jb test in push cmp int ficomp movsl clc mov push dec mov aad repnz ret test cmpl lods pop (bad) or (bad) mov mov jb mov or fsubs pop mov mov and lret jo mov xchg imul sarl and mov add jle pop or stos loope sbb lods ljmp or repz imul mov dec xchg insb inc rorl scas jl,pn jge mov aam data16 inc enter jbe dec pop cmpsb jo push sub pop dec sbb and cmp jle mov (bad) out stos into (bad) push dec inc js xchg xchg pop ds in or or shlb pop jne inc bound and sti mov cltd and or lcall jo arpl insl mov xchg or mulb jle cmpsb in hlt adc (bad) push inc adc xchg fstl jmp lret rcrb push call ret mov fwait daa andl (bad) mov and es ss out xor inc cmp out inc mov aad adc or cmp repz pop dec imul mull push iret jmp repz int3 mov mov outsb movups bound lods je inc xchg adc fsts rcr push cmc jnp add lods mov xchg fildll loope shrb and jns sub ret mov xchg imul test add dec dec inc jg lds jle out push cmp movsb mov ljmp jo mov push push insb sar sub das push jge jp lea (bad) pop add or int3 push imul jno mov push sbb (bad) outsb add lret sub sub rol mov into sahf js imul mov push mov outsl packssdw (bad) fwait xor ljmp je cmc pop rcr gs push (bad) mov mov pop jno popa gs sub insl fs sub cmpsl jnp mov add jle xor mov pop xchg std adc aas xchg shrb xchg inc jne mov mov pushf sub cmp cmp aas std fldt arpl lods pop cltd jbe lods xchg or jl jecxz fsubl inc mov aas test loope clc jmp loopne pop add xor out test movsb je xchg stos lods jbe jno xchg xor ret xor cmc xchg es jbe push sbb sub add loopne xchg inc xchg push pop inc loope pop lods shrb aaa jp clc shr sti fs cld and addr16 insb push test sbb sub addb adc pop fbstp je (bad) cli rcrb pop mov pushf repnz js test lcall fistl stc pop add data16 cmc mov cmp pop inc jmp imul xor cmp cmc jge or mov xchg dec movsl xchg pusha addb rolb jle test mov stc lahf (bad) out dec sti and repnz ss xchg (bad) mov (bad) jl push (bad) mov pusha inc inc cli xchg pop ret add cld decl jg mov or add sti scas add pop dec test incl add ffreep push ss dec (bad) leave out adc adc add pushf jae call add inc jecxz or inc jno add outsl lds and inc popa add jno pop pop xchg jecxz jp (bad) adc push cld lcall mov ficompl (bad) hlt sbb sbb pop jmp add lock mov pop or mov jp fcomip adc push dec out out push dec int3 mov pop jg fwait mov cs sub sbb arpl decb jg mov stc and out (bad) (bad) and pop add jbe (bad) mov mov int jne leave sbb inc sbb popa bound cs fs cmp pop mov push jl mov shrb popa add adc mov inc sti jp add ljmp pop mov sub fs loop sbb imul rcr mov lds cltd mov adc je add mov sub mov aam ja,pn lret pop loop mov xchg ret aam stc (bad) jne pop cmp xchg pop popf outsl xchg cmp dec negb (bad) cmp jl jb dec arpl cmpsl jle mov and lcall pop lcall and mov dec lods addl inc xchg leave push xchg insl sbb mov (bad) nop mov cld dec mov gs fsts je insb dec adc call (bad) xchg fildll and fs out mov loopne aam ds sbb jg mov les add jl pop sbb (bad) loop and fimul in aaa mov out jg lret (bad) dec or jp aas or pop nop or in jp jl cmp out les ds pop jecxz rclb inc (bad) jne xrelease repz add and insb icebp pop pop sub rorl cmp jge inc jae les cmp adc push imul adc pop pop int3 lret outsl test sub xchg mov (bad) roll or inc sub mov inc or jbe mov hlt mov jge mov push or inc (bad) nop dec jns xchg fwait cld arpl cmpsl call push fs inc js or mov cmc cmpsb fidivrl movswl mov pop in mov je aas (bad) rcrb push mov out inc jb lcall sub inc jb fs push sub (bad) dec jmp ja js and (bad) in push xchg mov fildll stos int3 out xchg and xchg fstpt mov inc jno fwait lods jg int jno fbld push test (bad) into das jecxz and repnz gs mov mov int mov dec stc add insb sbb enter or jle loope test es mov cmpsb (bad) mov mov xor in (bad) jecxz loop mov adc jns cmp jo int cmpsb adc scas dec shrb push loop popf mov pop mov or mov mov or fild outsb or mov jns jp out pushf sbb jns push inc add mov lods sti or jns jns push out (bad) jo xchg ret mov in xchg in stos push dec fmull int3 iret jge ljmp mov dec dec push mov iret cmpsl add mov inc es aad push xlat and sti jno dec mov xchg stos adc in push loope sti dec mov xchg mov cltd fwait mov jns insb jmp jle pusha and jnp jmp push mov inc mov and jno jo mov repz cmpsb mov inc mov mov push cmc out mov lret adc push test sbb pop lock adc js sbb sahf mov or mov repz inc mov cmpsl mov dec add aam dec mov repz outsl jl adc andb inc push or and mov adc sahf pop dec pusha sbb pop imul pop out xor mov add mov jge push xor popf lret xchg je scas into (bad) das and fild xchg xlat mov addl in jge mov add fdivs jmp ficoml cmp mov dec and mov mov cli add push gs cmc inc and mov movsl ds cmp sub addr16 orl sbb jge pop dec outsb je xor sbb cmpsb popf inc inc jb test movsb jmp icebp adc (bad) loop or xchg das inc addr16 cmpsl or pop mov mov addb xchg scas or cmp (bad) ljmp sub lcall pop xchg push pusha repz inc imul push sub inc addr16 mov add arpl adc loope sub cmp mov pop xor jle,pt lret sbb pop les xor xchg addr16 push adc cmp leave insb and mov sub inc mov rorl add sub xchg mov sub sahf pop jno pop in in push push int3 iret clc inc push out inc call (bad) es lret and or rcl aas inc push cmp cmp data16 repz push scas notl jl stos mov outsl dec repnz mov jmp test mov aaa xor test movsl mov loop jecxz sub mov cmp mov dec pop out add mov gs and adc dec xchg mov repnz orl push sub push test fistp dec jp jb (bad) in mov jne insl stos fisub icebp sbb sub out jns outsl mov fiaddl mov pop stc mov hlt sub fistpll dec jmp ljmp or (bad) cmp jb js popf adc leave cmp push jl jl cmp sar fnsave jmp inc sub in repz lret pop lret aas popw fsubl inc adc out test inc mov fistp xlat sub push xchg pushf xchg cmp repz sub rcll sub or ja push insl outsb cmpsb pop nop jbe adc push dec pop in pusha sub mov sbb (bad) fisubrl push cmpsl shrl xor shll shl sar mov sub dec idivl popa xchg fwait mov stos popf dec inc xchg shll mov jns xor sub out mov jmp enter pop ret insb (bad) mov stc and fldcw adc or fucom outsl enter mov loopne fnsave and sahf jle out std dec test (bad) fisttp pop sub adc jb xchg push pusha mov jns lcall jmp cmc adc pop xchg lret pop inc xor data16 adcl movsb dec mov and cmp inc push gs and xchg gs das in shr mov (bad) shll orl ds push insb mov dec mov int3 dec sub push fs sbb test loopne and cmp adcl adc add jmp mov int3 outsl pushf fdivrl in push add jb lahf mov test add fstpt push lea fimull inc ja inc iret iret sti sti adc mov (bad) cmp cld (bad) mov jecxz lods or fwait sub xchg (bad) pop jne addl dec flds sti or push lods pop pop push out lods mov loope or push cmovle xchg sbb sbb int sarl xor sahf test popf pop movsl test and clc popa dec add dec xorb push xchg fnsave gs pop push je push push jbe sbb jno mov roll outsl adc jns cs jle sub mov xchg sbb clc movsl cld xor pop adc cli adc jg stos movb fimul in cld ret (bad) sub frstor aas add adc xchg jp push insb lcall sub lret push mov test clc sbbb aas imul pop cmp sti hlt stos mov (bad) (bad) cmp or jne adc lods out jae mov dec xor add repz cmp in addr16 or aaa ret fs jl in loope rorb imull paddsw pop mov mov cli push aaa jae cwtl adc inc mov subb add fs insb push adc add add js and push mov js adcl std jg mov fdivs sbb stos sbb xor mov (bad) cltd (bad) mov int3 jmp int fcomps sahf xchg xor mov add addl fcmovnu cmp mov lods test jae pop pop mov icebp push les aas xor (bad) sbb jnp adc jmp fdivrs sub xchg mov fwait std mov jb (bad) mov sbb fwait es jno popl or stos clc decl push outsb adc push scas mov dec jle sbb xchg inc in and shrb lea aaa jo jbe xor cmp dec das mov or aas ret insl ret cli fldenv xor mov and ljmp sub testl je pop dec (bad) (bad) (bad) ljmp in icebp into add out ja sub cli frstor std jns insl jmp inc scas adc sbb add sti adc pop int3 adc sub pop sbb in or mov out jbe cs sbb cmpsb mov rcr mov mov je mov add popf push cli fsubr dec fcmovu push cmp sbb dec jno adc insl nop mov push addr16 mov out push cmpsb ret jp movl adc hlt dec push sbb jle and inc pop cmp test mov test ds out lock dec inc imul in scas and cs jmp pop adc cltd iret lahf xchg lahf scas leave cld jnp mov (bad) cmpsl ljmp xor lods mov and ljmp and popf cmp mov and fwait jae fs stos lods push test (bad) pop inc jp dec std das ficomp xor mov add jl,pt movsb add cmp mov cs mov popa mov (bad) cmpsl (bad) inc xor mov inc mov xchg adc mov mov xchg mov push (bad) xchg dec sbb sbb (bad) int3 pop and cmp das push divb xlat loop data16 ja pop xchg jnp xor inc je ds mov test shrb and adc fnstenv cmp pop adc (bad) test sub and sub loop or sbb sub push push and push fldenv std or ret push jno jg in add leave sbb pushf jmp sahf jecxz pop outsl mov idiv fisttpll data16 sub stos in inc in aaa pushf loope enter ds loopne movaps cmc push sub sub fs add inc mov push mov insl int xchg xchg and imul loopne cmp clc inc pop lock jmp sbb dec lret lods jle (bad) push cmpsb or xchg out pop cmp rcrl xchg in mov int add imul inc push push ficoml sub cwtl repnz sub leave lahf mov mov rclb mov (bad) aas lds push push gs mov pop mov add imul add ds pusha sbb lods jbe xlat addr16 cmp xor dec mov sub test sbb loopne lahf or and (bad) idivb xchg lret xor dec (bad) jne cmp mov jmp add pop push sbb movsb xchg inc sbb loopne and aad sbbl adc gs std ja in std ja or (bad) stos test jae imul add xchg mov pop loope stos insl les mov xchg xchg std lds scas aam repz ficom loop mov fwait rcrb dec (bad) ret mov test cmp xchg popa ljmp aad and gs dec mov insb sarl ss call outsb rorb dec mov xchg dec aam insl and in scas mov in mov push xchg add mov mov outsl push inc mov lock dec cmp xor jge mov cmp jne imul cmp mov mov scas icebp cs inc pop add inc pop inc outsl push out cld test sahf mov aas sar aam mov mov and cltd je loope adc sub imul stos pop xchg sub mov cmp push sbb xor xchg fildll pushf aad adc out gs test fwait mov scas cld jo add leave sahf rolb xchg xchg adc xchg das dec sahf out mov adc pop cli xchg clc push xor bound cmpl std (bad) jns fistpll mov jecxz fldt add int3 adcl mov ret rol and repz movsl pop mov mov in sub (bad) stos add jecxz fisubrl je nop insb mov nop dec lahf aas cmp ret in cmc les js scas rclb and or in push add pop inc gs push mov dec inc aas cmp cli hlt mov idivb icebp jmp mov and adc pop xchg fmuls popf dec xor (bad) push stc js popa insb add ljmp shr jbe out or sarl pop push mov mov dec fwait (bad) ffree lods jno mov out push inc je lcall repz clc mov sarb dec (bad) mov add push mov mov loopne and bound ja xlat scas mov lds nop add mov mov cmp loop ret sub push jnp rorl jns repz mov js sbb aad mov test bound enter add cmp adc roll add adc mov mov addr16 push or rol dec sub aas cli scas mov jns loop jp add xchg xor inc hlt push out ret rcrl adc jns push xchg js sub outsl pop cmpsl push xorl cli js (bad) xor (bad) pusha mov lcall lods std mov stc dec jle jb cmp xchg in pusha inc outsl or and cwtl sub fstl jno bound inc jb dec stos xor pop enter sbb mov jle mov arpl addr16 in jb sub nop jmp fisub push fldenv and inc fsubs mov aad dec and in icebp sahf sbb sub mov ret cmp mov cltd push test out add xchg call adc add and cwtl lods jecxz int popf dec cmp insl pop or lea int3 and les add mov sbb repnz jecxz add xor movsl and xor adc lret jp imul mov es mov sbb out orb arpl mov push insb pop insl and pop (bad) fcomps dec mov idiv add xchg push test xchg int3 sbb mov push pop xor data16 imul js xor out in push push jecxz jmp (bad) stos shrl mov mov (bad) decb mov and mov fcompp jmp mov jmp mov mov das (bad) imul sbb sub xchg mov pop sub rorl adc shll mov fs aam es iret aas jo orl scas and out xor pusha loope push mov outsb xor dec xchg test ret inc lcall sahf daa xor pushf lret cld fnstsw mov jb pop test imul sub xchg lahf inc xor loopne push aas sbb add inc insl jns xor jp std fldcw lahf out inc mov jp add inc xchg adc (bad) int insb xchg mov (bad) xor push add jae inc mov rcll mov sbb addl add mov push stos jnp and xlat lock out dec cmc rcl push rorl sbb int3 xor enter pusha cmp mov sub ficom sub mov dec in sub out cli fdivrs push addl and mov jge sub mov arpl mov dec icebp fst pop aas cmpsl xor test repnz and pop jnp scas xchg ret inc lret mov push lods adc mov inc sbb mov and ret call out add xchg cmp imul jle or mov add icebp jge xor mov xlat insl popf push inc dec mov inc add addl or bound jb inc sarb adc sbb jno rol adc push outsl or ss cmp les (bad) fcompl aam and push outsl shrl (bad) dec into cld push dec insb dec stos (bad) aas out sub ret mov mov or sbb stos jmp add (bad) icebp cmp push fwait lock bnd enter jmp or xor xchg je imul mov dec loopne mov cli push pop inc xlat cwtl js stc pop push dec lods clc cli sub xchg (bad) mov sub fstpt fstp push xchg dec mov pop pop (bad) mov xchg xchg sbb sbb fdivs adc add fldcw movsb mov rcrl movsb jb dec adc sbb repnz or inc iret scas xlat inc mov dec add adc adc mov sbb test adc insb lret mov insb ja sbb pop (bad) xor fnsave cmc cmp mov push push das pusha mov (bad) mov (bad) pop scas aas or mov mov or mov and fdivp ficomp pop sbbl cltd inc push mov sub xchg and call outsl push lret and ss push mov xchg jno and ret mov push adc and call int3 jge or outsb (bad) mov jg test mulb add stos imul mov lret bswap out jl cmp fs mov pop aaa fidivrl or sub fisttpll xor insb or pushf pop stos xor (bad) jmp add shrl xor adc test jecxz popa gs gs (bad) jae and mov repnz ds sub add lock mov sub lock scas adc lods adc test or repz mov mov or cmp sub je jnp xchg loope fsub mov test dec adc mov dec mov fdivr pop int cltd std inc jns pop mov lds repz fucom dec lock pop mov add xor not lds out pusha mov pusha inc das aam lret mov mov xor push xor lea sub call aaa mov inc push jo xor and (bad) lret and add lea jg loopne pop pop fwait xchg dec cmp decb push (bad) mov int3 int gs enter xchg andl data16 mov cmp in jl clc pop (bad) mov int3 jp jmp arpl or sub adc cmp sub lods pop test xor mov push cli push adc inc dec xor (bad) mov mov pop jnp fdivrs or mov inc in aad enter pop and sahf lcall and (bad) cli rorl fcompl test fchs div hlt sub stos inc leave cmp mov mov jnp dec mov xchg popf test leave mov (bad) (bad) movsl (bad) repnz xchg or cld push jno jl ret sub and jno push iret sbb outsb test cwtl dec rcrl imul mov cwtl sbb notb lock jecxz mov adcl (bad) mov dec ljmp push stc sahf xor stos imul aad pushf fdivrs push mov mov mov jbe adc push sub mov and mov push mull mov pusha push and adc lea mov lods lea lahf inc fcmovb mov test lods call ss int cmp (bad) dec push aas mov dec or andb fisubrl in hlt mov (bad) repz sbb es add movb loope xor fdivs js jmp fisub movsl (bad) pop cmp ja dec mov or and pop movsb sarl notl mov cmc int popa out xor iret inc scas adc jmp add int dec mov mov ss (bad) jo pop lcall and push das je (bad) pop stc (bad) cmp inc jecxz push cli mov xor (bad) xlat loope add test cmp add aam js call and out in aad jp rcrl adc cmp test inc cmp push mov dec cmp aam shl lock inc icebp das cmpsl cli sbb adc cmpsl adc sti jp xchg mov push push xchg dec ss xor popa mov imul sub in hlt or sti sbb cwtl (bad) sti mov jno mov dec inc pusha fistp sub scas enter dec or jp sbb fidivr sti sbb push pop jne enter jne cmp fstpl movsl push pop and xchg mov adc or cmpsb (bad) fwait xchg mov imul inc mov outsb adc jae loopne aad ret jae mov cmp and insl ds xchg testl adc insl lods lods dec dec jb icebp pop loopne push jmp bound mov sbb adc jmp pop jbe xchg adc dec and in aas ja cmpsl inc dec inc repz in mov pop sbb adc push fsubrl sub mov sbb inc clc pusha jns add cmc int3 inc cwtl inc add sub push arpl and mov push mov xchg sub mov scas cmp (bad) xlat fs xchg fs and jecxz push dec scas push lret inc pop and push sub imulb pop adc in rcl out lahf pop xor mov jl bound sti les out push ret pop cmp inc fistpll push mov jge adc aas jnp pop and test aad add lods add or ss bound addr16 in xchg cmc or mov mov cld dec mov addr16 ret decb sbb outsl pop std pop (bad) xor pop cmp mov shrb xchg push or loope mov inc loopne stc add push and dec shrb inc cli jecxz (bad) fidivrl dec jmp fucomp fiadd (bad) cmp sbb (bad) (bad) fidiv cmc (bad) sbb cwtl aam aad sbb jge aaa or mov mov in lea mov adc jmp mov in bound adc add xchg push push fldenv mov ss lcall adc pop mov jb jnp (bad) rcrb lods or cwtl std pop adc push les ds scas and ds stos (bad) push ret xchg mov movsl mov mov (bad) mov adc xor in mov cmpsl popa fdiv xchg or cmp fwait (bad) or pop aam cltd dec jmp aam movsl stos bound insb and lcall stos jb mov pop cmpsl jae mov adc arpl xor dec inc loopw fwait sar repnz xor daa or push stos mov insl adc jg jmp in pop sub sbb (bad) push mov push mov lock cmp xlat les cmp fild add mov adc mov dec loope pop orl mov outsl imul mov fucomi push mov pop adc xchg mov sub jnp pop ljmp cld lock test and cmp mov loopne iret pop imul stos cmp aas push xorl cmc fisubl or cwtl out mov loop jge mov loopew jmp sbb jno add push std enter and sub inc mov jbe rcrl aaa add mov leave in (bad) in aaa (bad) mov dec add xor outsb xor jbe loop ja sub fprem1 test pop pop repz lods fcomps arpl jmp and sbb call cmc mov pop stc iret movsl inc add popf in pop sub scas clc push sub adc pop xchg add in stc lcall rorb nop push movsl mov xchg out dec mov fnop adcb hlt xchg jg or mov aaa fistl mov fnop ja sub and fmull and jbe add cli pop (bad) pop aam jb inc push outsl cmpsb imul mov add pushf mov ja fxch inc add test stos popf test cmpsb jns or mov (bad) test mov add fistpl dec loopne xor test dec mov jl cmp fdivrp or jmp push fwait hlt xchg push sub cmp cltd adc enter insl stc push sub pop stos movb sbb movsb pop es xchg mov loopne scas mov push negb push loop and xor xchg outsb mov or cmpsl mov xor dec mov xchg (bad) idivl mov cli addr16 cmp jge outsl icebp int mov out lock or xor xlat fisttpl into test into fs ret mov and inc pop jnp sahf cmp dec mov sti hlt push jo rolb push adc sbb pop pop mov or std ret adc inc mov ss lret push mov (bad) or imul mov jno roll mov mov out ret cmp stos inc xlat sub dec sbb pop jne (bad) divb dec xlat sub push hlt test cwtl xchg popa mov push sti leave cld dec mov sbb cmpb into mov inc fstl and in mov mov dec (bad) push or es pop xchg or push in mov sub xchg outsl cli shl fildll ds xchg jnp pop dec xchg loop movsl int3 or add insl dec dec mov fistp outsb loope inc mov jecxz sbb jg xor pop pop std push movl mov in ja pmuludq fldl mov icebp cmp rorb cld test jnp sub ret rolb ja sbb xlat int dec pop pop and dec sbb or or es sbb inc dec loopne call dec sahf push mov xor jle gs test cld lret ss pop popa sbb mov flds jp xchg leave inc adc subl jno cmc pop outsb cmp sarl or cmp movsl mov (bad) sti or mov lods dec faddl mov mov arpl sahf cmp cmc cltd cltd or outsl adc xor jg lcall imul into test add scas shll mov aad std lods pop xor ret sub add test and mov pop and sub imul mov daa sub fdivl push lods push or cs (bad) std dec push sub clc jo sti (bad) repz mov scas ret mov stc push call jl scas jge xor mov fbstp pop dec xor dec int3 xor (bad) xor and push or orl mov push pushf cwtl mov pop inc xchg xor cmc and mov fstpt add xchg jge mov dec test test lgs dec test lret dec ljmp int3 into clc out fucomi dec stc lods push adc mov and stos scas pop fistl aas mov add xor dec fdivp xchg jp sbb pop fldenv mov mov mov imulb popa mov mov cmp jle pop lret mov adc iret or inc inc dec test mov mov sub cmp sti mov pop in xchg sbb js push dec ret mov lret aad cmpsb and mov in jbe in push dec push jb add aaa inc xchg test cli call (bad) jmp hlt push insl and outsb or mov pop iret std jecxz and dec adc pushf or (bad) or pop jne add mov lods sbb push sahf ret in int3 mov (bad) jns dec je add cli repnz push int3 (bad) ss dec cmpsl jmp push test mov scas or clc sbb mov dec adc cltd cltd xlat mov (bad) and jb pop mov fnstenv adc std xchg mov pop sti hlt aaa cmp loope ds push cmp jb sub movsb aaa dec rcrl jmp mov xchg sub adc (bad) pushf cmp iret jo adc (bad) sub cmpsl push ljmp mov push and dec icebp add dec repnz push cltd cld in je pop in (bad) jg xchg mov sub or shrl lea enter add in dec insb lods ds mov ret inc lea adc mov int mov dec icebp ds and std mov lcall cmp int3 mov in or into sub xorb push imul shl xorl test inc gs add cwtl aad stos or sub mov add pop jle fwait in into ret dec (bad) xor jge lea out cmc ret cmp fisubl mov mov push gs loopne cmpsl (bad) dec lock (bad) add jmp dec mov (bad) cmp jl dec mov mov lcall sub iret sub jecxz push addl inc inc jns jns mov xor movsb mov test cli jne test jecxz sub fs mov lea enter inc jnp or mov push cli fwait stc aaa mov xchg xor repnz pop fidivl cmp push pop add mov mull sub ret lods mov inc scas push sub pushf popf jle data16 push mov xor pop stos jns idivl repz gs lock xchg mov jns lcall mov mov arpl sbb jae mov jecxz mov inc lea pop sbb call mov iret sub in adcb pop cmp cmp clc aam inc ret scas cmp fs cmp shr mov enter repz movsl fsts in adc outsl leave pop jp enter stos fwait in pop into mov mov mov fistpll mov fldenv sub sbb pop enter sbb mov fdivl adc aaa lods mov pop fld clc ds enter repnz sahf pop pop xor mov in arpl push ret xor push in add xchg jbe lcall push ds int xor lock push leave sbb in not ja cwtl sbb sub cltd lock jne (bad) inc std xchg sub dec and jo mov dec sarl cli sub (bad) jmp (bad) mov add fsub mov inc mov mov stc dec xchg notb rorl outsl int xchg fs and xor outsl jecxz jle std push aad stos mov lahf outsb (bad) shrb mov inc mov sub inc adc and pusha xor xchg xor sub loop pop loop,pn sbb lret xchg sbb movd pushw stos sar stc leave inc (bad) ds and sub test idiv cmp adc in ss clc daa and flds push into iret jmp sbb and repz fsubs cmpsl cmp outsl lods (bad) lcall in sbb movsl jle test push mov cmpsb sub sbb mov pusha add mov adc imul inc jbe push data16 fldt or and fsub cli call xor mov rorb leave dec push xchg ss loopne,pn adc daa adc (bad) mov (bad) sub fcmovnb mov cmp repz fcomi dec xchg lea sub outsl cmpsb test inc ret loopne ret sbb inc gs jecxz dec fcoml dec (bad) mov mov ja das aam mov push in outsl mov mov jl sub fdivrl cmp clc cmp and mov in stos sbb pop mov test rorb pop adc mov mov pusha sti jno jne push imul flds xor cmc ret add sahf imul out push scas mov add lock or pusha cmp push popf mov dec or pop enter xlat stos push mov insb test mov sbb and push aad mov jne xchg mov (bad) mov mov mov out xchg sub dec and cltd repnz jmp enter add push mov fsin lock xlat lods dec popf xchg xor lods scas addr16 stos fidiv mov or push dec sti fs push aam es sub inc or in out pop cmp or jne,pn xchg and ljmp mov ss jne sub sub mov roll rep sub xchg pop push mov xchg aas lret mov daa insl and xchg jl jbe xchg cmpsb mov js scas pop stos sbb xchg adc add test (bad) imul xchg cmc out lds mov (bad) std inc lea xor clc scas sbb inc lock jae cli or je pop jl adc pop jp or jne jo sarl mov cld and int3 insb or mov nop or and je add or or mov jl sub pop jecxz fmulp xor cmp out (bad) pushw mov inc test add cmp jp or sti add jns or cltd xor xor cmp xchg xchg icebp sbb ss mov stos pop (bad) fisttp mov cmp (bad) or adc repz push loope shrb js sub call cltd sti fwait bound add push aas repnz jl lret jecxz push xor sti repnz adc inc icebp xorl dec pushf push aam and cltd (bad) call push mov mov sub inc xchg fsubrl je jns jmp sbb loopne movsw cli jo (bad) adc orb iret push mov divl cmp push scas dec xor ss adc mov mov dec xchg add loop rorl adc pop out push movl pop lea pusha dec and fcoms jecxz jno lcall fmuls call lret mov sbb cmp ret dec or lock push repz and cmp inc movsb sub mov xor mov leave lret test (bad) and dec bound les daa cmp das fsts xchg in cwtl jae inc xor inc bound mov es (bad) lahf lds mov and sub push pop adc sti lods xchg xor inc test bound inc pop (bad) xchg and and iret scas gs icebp lret in dec lods xchg insb xchg sub xor in pop mov pop lea fdivrl lea mov int or jmp loope js and mov rcrl push leave adc jne jnp xchg sbb sarb je inc xor je (bad) fcoml adc imul mov cmpb cld stc lods jg sbb xor cmp mov sbb cmpl mov fiaddl bound mul and cmp push call jl popa push test arpl mov push imul push xlat pushf js pop dec cmp daa pop pop fidivrl cmpsb cmp test aaa mov dec or jno das out sahf movsb out dec rcrb ljmp aaa std in mov or inc (bad) dec xor sar insb dec (bad) outsb pop xor add repnz sbb push (bad) movsw sti jo fxch cmp xchg lret into pop test adc ret (bad) in ret popa cwtl subl test cmc and shrl or decl addr16 movsb loop loopne fistl or pushf push fwait imul mov jae add mov negb adc repnz icebp gs adc popa test pushf mov push lret dec mov out in out add outsb (bad) xchg pusha nop lret out xchg jo fisttp mov xlat test mov sbb inc dec out jnp fisub pop jb mov dec adc dec addr16 scas mov mov (bad) sub xchg (bad) or fidiv xor adc in and mov imul or sbb outsb xor inc jne xchg popf loope mov scas xchg pop jmp lahf dec test dec sbb push into and imul mov mov cmpsl add daa xchg dec fdivrl mov adc jo imul xor mov fisubrl popa pop pop jno jns and popf and in pop dec cmp and bound xchg xor push out jle push pop out aas sbb inc nop mov inc adc pop std dec pop sbb adc inc int3 push fldl and mov rcrl stos addr16 jo test pop mov jg or pusha mov sbb dec jl jb jne sub and stos xchg push push fsubr repz mov jle clc aas int dec jne xchg movsl lds rcrl dec mov xor cmp cwtl cmp repz cwtl loopne imul dec jmp aas out nop mov addl fwait cld sbb popf ss jmp pop outsl (bad) xlat xchg insl nop mov ja jmp push sub or (bad) push aad loop stc rcll xchg jae push call repz sub int xchg test jo sub mov orl pushf inc jbe outsl pop test shr movsl push adc nop insl mov (bad) dec pop pop loopne xor or mov (bad) mov popf fnstcw or aaa pushf mov adc jmp add push mov jns sbb repnz out push xchg int sub in mov (bad) sbb int mov lds repz sbb ss cld mov lods in pop pop jbe imul dec mov call push jb mov test sub cmp test fs insl pop stc (bad) shll imul (bad) (bad) inc pop scas loopne push or xor ja pop pop mov cmp mov adc mov cmpsb xchg leave test out adc push sbb fstps and mov test push xor jmp push test or mov mov mov mov dec and sahf mov test call enter test pop pop sbb jg or inc jg push mov rorl mov xchg xchg insb out jne repz adcl adc dec ds mov loopne xor mov cmc into sub shl gs enter cmc pop cmpsb pushf test fdiv out cmpsb dec mov out dec (bad) jge subb addl mov cwtl loope cmp jnp (bad) int3 sub loope sub lret jmp bound jno jmp or xlat mov outsl inc repnz sub adc mov sub sbb movl clc inc outsl mov sub inc cmp mov push xchg nop push iret xchg imul or outsl jle (bad) repnz jp iret repz rol or cmpsb sub lock daa (bad) (bad) mov adc mov fisub sbb lds ret inc fsubl cmc pop fildl pop lcall daa out (bad) cmp mov mov push jp fist mov dec sbb repnz push sbb jg mov ficoml aaa jmp pop xchg hlt and loopne xlat fdivrs loopne jle imul and pop sbb or jo adc ret ds es hlt add pop xchg mov adc mov and int3 adcb jnp cmpsb add lret push cmp xor icebp sbb mov push aam roll into cmp js ljmp inc popa mov adc repz pop xor push mov xor in cld (bad) scas std or sbb inc push push rorl shll sub mov dec out (bad) sti adc add imul testl or pop lret in cmc inc xchg sbb mov add dec mov add sbb frstor mov sub call inc popa lods nop lock ret cmp int3 dec xchg and test add fs stc mov scas push orb mov punpckhbw pop sub adc in mov push lret scas push inc and int3 jns mov gs rcll pop inc aaa fistpl stos adc je (bad) stc lods data16 jae popf push sub mov or push lret iret fbld mov add lret lds mov test mov clc arpl fidivl test xor inc sbb addr16 sbb icebp pushf pushf stc lret jnp xor daa mov addl and inc fwait mov cli scas mov hlt aad aas cmp pop iret sti cmp inc outsl into pop inc std movsl setbe (bad) mov imul push mov sub cwtl xor into or into cld cli cli or (bad) xor xchg mov adc loopne test push add rcl call and push stos and sbb mov nop cmp jnp pop out (bad) inc dec imul enter jnp loopne xor pusha inc popf addr16 rcr fwait loop xchg mov push mov xchg push adc in lcall push aad loope inc jno mov mov mov fldl aam add (bad) xchg dec mov test pop popf inc in lea xor lods fisubr imul cmp das push aas sbbl gs int3 into out add js jbe fdivr cltd fisttpll sahf sub leave scas mov adc sbb cmp mov movsb cmc aas rcrl jle stos pop (bad) jnp push inc sti xorl js movsl mov pop arpl mov lds ja lret sbb arpl rorb repnz out fisttpl inc bound adc push js div imul mov test insb push insl insb inc ret pusha xchg subl cmp xchg sti cmp addr16 adc xor roll jmp dec jns mov pop out fistpll add lahf cmc imulb (bad) imul and mov shlb inc scas (bad) xlat fxch xor stos pop inc sbb fwait pusha dec xchg jbe inc stc jnp fwait cmp outsl push sub jp inc mov dec mov cmp pop stc fildll hlt fimul lods xor sub inc sbb dec xor dec or out mov add pop xorb pop mov and pop shlb ret mov sub hlt sti imul mov adc and mov fsubr movsb xchg cmp shrb dec mov jno icebp adc sub divl dec call and ja push add ficompl push mov push or push gs pop sub aam lret cwtl dec add push (bad) (bad) jle xchg gs pop out sar ret mov inc ss jl jno and add xchg xor ss sbb in (bad) push mov insb outsl pop nop cmp cmpsb popa movl sub mov and push shrb (bad) (bad) clc dec hlt pop pop outsl cmc arpl ficomp clc adc mov xchg into lods push aad arpl jmp insb loope sbb add mov loope fucom jns faddl fwait and and sti aaa push mov imul rcll scas mov out push cmc dec ret jnp cmp repz add (bad) lret or inc in (bad) ss dec movsb fistp push cld mov fwait pop neg (bad) mov or mov cmp sub mov jp cmpsl inc jl or jne lahf fcoms ss clc cmp sub jl adcl push inc xor jne mov push push sahf and les (bad) pop jmp inc cmp (bad) shl pop call addr16 mov jo jae je adc ja and dec sti lret out popa mov loopne xchg (bad) fbld cwtl jno mov cmp frstor ja insl andl (bad) cmp push cltd aam lds sbb cmp push mov push sbb sbb jne push aaa imul adc pop (bad) loope dec and outsb mov loop pusha pop fs sti mov mov xchg or xlat sub mov add das fist sti sbb movsl inc ret add push ds dec sbbb push sbb jne xor neg int addb shll cmpsb sub cld inc mov lods into call add dec mov xchg mov pop lods outsl pop push xlat mov xor sbb (bad) xor mov je out lods pop add pop inc (bad) jp mov lods sti and movsb dec add insl ret dec cmc (bad) cmp pop or and lods arpl cmp fnstcw jb xlat inc push sbb gs push push fwait mov adc push stos mov test push mov js das in push push xchg mov push inc lods dec outsl gs jne jno insl out pop and popf in add cmp pop in cmp lret push ficom jne (bad) fildl dec mov aam mov and scas mov test (bad) (bad) repz cltd pop push stc mov fwait enter lret inc lods pop sti das ret lea pop xchg pop pop jl push (bad) cli pop mov (bad) repz xlat cmp in (bad) clc push inc repz subl ss les jne cmpsl and and fistpl cmp es dec push enter rorb repz or adc movsl (bad) lods imul les xor iret or mov loopne and sub push (bad) loope out xchg fmuls pop out in data16 mov in adc and jno adc jnp push (bad) fsubl roll mov dec jnp,pn cmp push inc mov mov xor ja jo jne mov popf mov (bad) cmpsb enter mov repz cmp adc xchg lds and mov push icebp sbb into sub enter add sti cmp cmp cs jg jae ss fmul jmp mov sbb shrl mov cmp dec jg imull ja jl pop mov dec pop xchg (bad) aaa mov sbb cmp shrl sub int dec pop cli leave xchg dec pop inc pop add in loop inc sub cmpsl rcrb movsl mov jbe hlt jp jp iret fstpt xlat push mov adc dec or xor push inc add add jecxz dec dec popa add and or sub mov imul sbb mov pop pop mov daa in cli xchg mov outsl enter add jae push jmp push (bad) jo ret cmp lods movb mov xchg or bound mov rcl insl adc leave aas push xchg fmulp mov push pop das adc subl lahf dec cmpsl jg std cmpsb jp jmp fist sti les sahf int3 xchg inc lret adc addl mov or jl add add fcomps gs and mov arpl push sbb loopne repnz jo (bad) movsb popa aam fmuls pop loopne in aaa arpl jmp in cli mov je ss or xchg jmp mov nop xchg mov dec icebp pop xlat cltd inc scas or fimul xchg mov jnp movd jne stos js andb jo mov sub (bad) stc sub add jl scas xchg pop sub inc in and xchg loop mov mov pop sarl xor sbb sub sbb test mov lock cli pop xor cmc jae xchg ja lds jae mov lret scas icebp cmp sub and push shrb add scas jns adc fstpt daa lods iret inc loop sub sbb loop jp and pop shrl mov push test bound mov divb (bad) cmpsb pusha cli int3 and lahf xchg pop push and xchg jecxz (bad) dec cmpsb cmp cld bound fbld mov pop rolb popf std jecxz xor push (bad) and fnsave outsl in xchg ja cmp aam dec push adc xor imul hlt push pop pop jns fs outsl cwtl pop stos dec int3 mov out jns xor aam scas mov xchg adc aaa adc pop pop cmp ljmp mov es sti fwait mov loop mov pushf and fiaddl inc dec dec and (bad) mov cmp in stc cmpsl test fadds push pop rcll xchg rcrb test jmp mov cwtl xor aaa cmp cmp pushf (bad) imul stc xor dec jo mov scas mov add int3 add xor insb lcall loope daa ret cltd mov add stc test ficompl push arpl rolb cs xchg cmp mov (bad) hlt push aaa inc add dec jp xorl lea inc xor adc sub (bad) xor mov mov mov aad enter out sbb or in fdivs push test hlt xor mov (bad) push movsb sub mov sbb pop inc add lock outsl in ds or mov aas push pop stc int push mov sbb loop inc push pop push test or mov lret push pushf push dec scas sahf stos je jbe fcmovu push daa xchg sbb lds cmp adc testb mov push jbe mov sbb sbb nop jge (bad) lahf inc jbe inc hlt pop cmp jbe sub adc (bad) sarl call mov jo lea fs je mov cs jp mov cmp jg mov rcrl or int dec xor inc sub sbb fs cwtl sbb std mov mov shrb std outsb das jae cmp std sub jns pop lret jle inc js cmp nop/reserved cwtl (bad) int3 fiadd sbb je add fstp out faddl push sbb insb adc pop inc pop fcmovnu out add inc and xor and cmp in mov popf xor xchg popf or out enter push lods rcrb ss mov subl xor and test pop clc lahf mov popf pushf (bad) mov bound fs mov cli ljmp mov insl xchg and jg adc add jle pushf cld fsubs pop leave jmp pop sub fdivrl add mov push mov adc mov rclb xchg add dec mov adc hlt mov (bad) pop add xchg mov mov inc jmp xlat mov aas aaa lds push pop scas mov lret adc repnz test cltd adc jne pop mov (bad) gs hlt lcall add cmc ror (bad) in jle mov pop mov sbb iret cmp inc mov sbb jnp fwait pop out and pop insl test lds add push fldcw clc hlt or xlat shlb fwait mov nop jp mov jne scas or sub insb jae sbb pop scas mov jmp pop cmp mov mov add aam icebp ret cmp mov outsl ficomp fnstcw dec jb (bad) std (bad) flds jbe mov adc call adcb jmp jmp mov imul xchg jne insb or adc mov push imul pop push mov mov out dec (bad) mov push in icebp scas hlt pop movsl mov jns popa leave repnz les xor out xchg xor cwtl sub adc xor cld dec clc mov jg pop fs jl jbe inc jecxz sbb mov jg push test ss push scas xchg mov or mov pusha dec out jns imul jb int3 inc sbb rcrl flds push cli and lret mov or xchg sub sub fdivrl xor test push mov popa sub lods js (bad) (bad) js jge dec or movsb or leave sub jo push dec cltd stc push jl (bad) loope aad nop gs and stos add ret fdivs and lea add push movsl sbb and je add data16 pop lods test add test inc or movsl xchg ret mov push sub mov call dec push ret mov mov pop int xchg mov jns add inc outsb push in insl into stos test je xor mov xor nop negb (bad) clc inc mov adc push pop inc notb mov mov arpl sub jnp clc inc aam test in sub ljmp je lret xchg and inc dec jp cli mov and dec loopne jecxz out aad aaa mov dec in jg out lods ror (bad) pop xor mov pop arpl mov sub lock rcll lds shr xor in movsb popa mov adc aam xlat cmc call lods pop sub dec or inc loop movsl outsl cmp jno add (bad) enter iret and add mov jecxz and sarb jbe hlt jno,pn sarl (bad) push idivl (bad) bndldx mov lods mov sub (bad) pop aad adc imul (bad) cmc in cwtl sbb mov lea inc sbb sahf insl pop stos dec loopne pop dec scas lcall jl aad cmpsl insl mov pop mov lea xor pop mov xchg sub pop mov sbbl sub rcrl adc pop fbld mov mov push pop inc loop cmp pop pop ja xchg rcrl stos dec mov out dec xor pop (bad) int imul iret outsb add out cld loope jbe mov adc mov jmp jg repz rcrb mov bnd stos jno inc inc mov popa cli cmp mov test shrb cmc mov leave repz mov inc jle shll outsl mov data16 (bad) mov and (bad) popa negl out inc sbb ret fwait movsb roll int inc jmp push sub loopne xor ficomp lret fstl mov and cmp insl mov icebp push scas scas pop and and jb push mov mov cmpl les inc out ja jge xchg push fild leave jbe int (bad) das repz sbb jne jge mov and xchg (bad) rol adc rcr xchg sub mov fimull sbb mov (bad) xchg rclb mov inc stos jae inc leave and push fstpl hlt hlt ret cli lea cmc lods and iret sbb pop outsl sbb pop jge pop xor sbb outsl and adc inc daa dec js push ljmp xor mov add jecxz test scas xchg xor rsqrtps imul into inc dec jnp cltd loop xchg sub in pop imul pop xchg sbb fldcw add sti add hlt notl push inc xchg cmpsl cmp scas adc push push or out loopne mov cmp cs in pop ja hlt jp sbb xor fcmovb pusha addr16 int lods std xlat fldl inc pusha mov stos inc ret dec cmpsl sbb sub jne or jnp (bad) and stc (bad) jecxz mov imul add shrb push push sbb out lods adc jge lret (bad) loopne mov xchg mov jp sub out (bad) lret aas or push test loopne push jle fsubrs popa jle ja (bad) popa xor (bad) push sbb pop call jecxz cmpsb push movsl outsl sub mov rcrb xor inc jae jecxz mov iret sub (bad) add dec mov ficom jo insb pop sbb aad pop cs (bad) mov mov jb lret dec push lods cmp push pop jae push test sbb scas sbb push push cmpsb popa lods xlat adc jae jns jo int3 int inc ss test adc pop jb mov stc push pop sbb lret cmpsb mov imull lock mov cmp pop add imul movsl lea mov sub mov or mov fbld sub sub loope imul cmp mov mov ljmp mov repz gs sbb mov sbb push pop lds aad jg push ja pushf push mov xchg jnp outsb lods adc ret int3 lds cmpl lahf lods test dec mov jo dec pop mov push and xchg pop inc je (bad) xor lahf adc ds nop rcl mov negb test xor lret adc movsl or (bad) push mov test xchg ret inc pop inc ds pop dec pop dec rorl in loope sbb add xor loopne (bad) nop lret push lcall sti insl add enter clc jge repnz test pop call dec in popf mov xor mov cmp mov sbb sub fsubp (bad) cmc js (bad) push xchg cmpsb test mov divb sbbl xchg hlt mov pushf das dec and add lret adc and pop popf and push insl sbb cmpsl lcall pop adc or daa lret (bad) stos adc xchg test push je lahf add fwait mov in bnd loope push int3 test lea xchg mov adc pop sti push jo mov shr xchg loopne jns lret mov sub enter scas cmp mov cmpsl pop mov push push divl add pop repnz bnd pop lock cwtl leave andl shrb jl pop or sbb adc (bad) mov and push mov mov sar inc or test (bad) pop pop sub add inc pop mov daa scas pushf (bad) jo cltd push cmp add out js adc jmp jbe decl (bad) test sbb cwtl addr16 in or xchg xchg enter mov scas mov test add lahf aaa lock lret movsb iret int jae lret sahf jmp and pop xchg add (bad) push ljmp fstl andb test jbe fisttpll pop dec inc addr16 fist push jno sub cmp mov fsubrs (bad) mov es mov push cmp dec mov repnz nop mov loope jbe or mov (bad) sub sbb andl stc test xchg jmp inc lret sarb data16 pop (bad) daa xchg pop lds int3 jo sbb mov pop ficoml jo,pn repz clc out sahf hlt lods or dec ss inc repnz xchg mov mov lahf in sbb (bad) test pop xor aam sub adc mov fiadd mov popf fisttpl fisub mov enter nop jnp cs or adc mov (bad) lods jno cmp scas test sbb sub jg scas sbb mov divl mov add pop adc ret rcrl and icebp mov add shrl fisub fldenv mov adc cwtl int3 jmp sub mov lahf inc push inc pop lods lret mov or iret (bad) push lret adc repz pop push adc xchg and mov sbb inc dec xor loopne push ret sbb and add in xchg pop jns pop loop repnz adc sub mov stc (bad) pop cli mov mov and les inc (bad) jne mov insl inc repz jp xchg dec rolb sbb and addr16 push and sbb xor lret push scas dec nop sbb jb pop rcll and adcl cmp fisubl bound rol mov ljmp nop (bad) sahf pop mov or fwait loop mov push and sub data16 outsl jmp push ret rclb cmp test lods jge (bad) sub lock xchg sbb push fsubrs loope mov xchg and jnp test xchg mov mov inc mov cmp (bad) mov aaa and cwtl mov and fistl rcrl fstpt mov cmp stos sub (bad) aad scas iret lret push ret inc jle stos inc mov cld mov fisub sbb insb jne scas popa dec lcall test add mov sbbl rclb sbb dec loop dec mov hlt (bad) (bad) sub in cmp dec cmp sti mov sarl icebp mov mov push je les (bad) pushf or ljmp addr16 jg test mov (bad) push lret aad out dec pop xlat adc add fcomip or xchg dec inc push dec fistl xlat movsl imul je mov (bad) and es call in pushl (bad) dec dec das lea sbb push inc mov stos stc jo aad adc or int3 mov cmp rclb sbb in hlt sbb xor mov (bad) xor push imul mov out dec (bad) inc add inc xor jbe mov or dec popf xchg adc adc push or adc aad lea sahf sub xchg pop xor mov outsb adc sub (bad) cmp dec mov mov sti inc dec sub mov cmpsb jae scas dec jb mov and lods lea jnp sub push fcom mov pop js stc test nop dec mov and xchg int3 cld inc popa data16 xchg popa mov int jge repz dec cmp shll gs sub dec cld push shlb lods xchg mov mov cmp mov cld dec in mov xchg gs stos je into mov sbb les insb shll sub loop lods push cmc sbb pop test sbb cwtl ret das daa mov add lcall loope sbb aad pop pop in add adc out inc enter sarb push sbb sub pop jmp push pop and inc and mov outsl arpl or stos mov cmp xchg pop fmull add stos sub adc das les pop scas or sbb adc or cmpsb enter mov push cmp imul xor push sbb mov push outsb in fiaddl inc jmp mov jb mov add jg aaa jo xor into mov popf xchg rcrb cmpsl sub pushf aaa leave scas ret push jle,pn sarb pushf add mov mov jmp lcall mov popf jne mov mov ds or lods std lds pop lds outsb insl cmpsb lcall in movsb cmpsl xchg or sub adc lock lret adc and xor dec es inc cmp mov jbe xorl sub outsl pop daa movsb fisttp mov aad nop pop cmpsb push stos xchg int xor xchg or imul xor xchg enter fmull jmp test stos ret cmp xor sbb mov (bad) adc cmpsl add push dec pop mov add rcrb in stos push or cmp (bad) jbe lds sbb arpl mov adc imul push rcrb rcll push lods mov bnd or or lods sahf test inc lcall dec inc inc xor cmp adc push xchg sbb and push rcrb stos cmp cmp adc pusha repz sbb mov xor fucomip in fist in in movsb out inc (bad) dec ja cvtdq2ps sbb (bad) mov loop mov mov pop adc and adc aad xchg outsl (bad) out add adc pop pop mov sbb repz mov mov scas lock (bad) and (bad) in mov sbb jg jge mov repz sub or mov xlat test rcll inc jbe sub mov js inc cmc mov push out andl cmp dec adc rorl and (bad) rcr popa ret addr16 movsl rcrb in iret or rcll mov or push out ficoml loopne imul stc xor xor loope pop mov dec pop cwtl iret jmp (bad) add icebp xlat or sub push mov push imul jecxz xor jbe (bad) push aam ret jl sbb adc pop adc sbb mov push mov pop lods sbb idivb lea xor mov xor call pop ret push or std test addr16 and adc pop sbb mov mov out add dec push (bad) sbb jae xchg aas adc push js inc or lret and add cltd jae cmpsl notb add push cmpsb mov nop sub pop leave popf mov and (bad) (bad) cmc dec lret or adc loop fild pop xor outsl jmp inc out sbb repnz cwtl sbb push inc aam ret ss push add inc cwtl push (bad) mov push subl pop adc loope adc mov (bad) mov pop loope in inc mov movsb ss sub (bad) fisub cmp jmp pop cmp das add loop mov lret push xchg dec push (bad) adc divb sbb jbe fsubs lods mov repz lods (bad) pusha mov cmpsl xchg mov lahf fnsave push inc aad mov in rorb lret sahf cmp push popa xchg lods inc jmp push add test sbb roll xor dec test arpl in jno (bad) pop outsb adc mov arpl test xchg shrl inc lock push inc pop jp sti mov push icebp pop jmp mov pop in push lea xor cld std push add or test lret lock imul and or add mov push in (bad) lret mov aam mov aam lcall push div add mov and push mov lret repnz or out jae push mov or push movsb cmp out and lea fnstsw cmc enter mov and push or call and ja lea ret mov hlt xchg (bad) inc mov push jl int3 mov jl aas (bad) pop (bad) pop pop xchg ja mov inc push cmp decb sahf sbb dec xchg xor (bad) es jbe (bad) xor and jl cmp test push ret dec jecxz sbb push dec add mov sbb mov jg mov in lcall fnstenv dec enter or inc fdivr cwtl mov mov xlat dec stos (bad) jns sbb inc das dec add cmpsb jl (bad) cmp mulb push cld or fildl (bad) or je mov and fwait (bad) xlat sbb inc js je mov cmpsb loop sbb adc mov ja push fcoms imul inc into lret shrb pop fiaddl hlt or jnp mov je or jae outsb fnstsw mov jbe cmc mov cmp imul lea pop mov sub scas movsl das (bad) sub (bad) jl shlb fsubp pusha das xor inc pop loop sbb mov iret jnp,pn daa mov jbe sub xor xchg movsl xchg (bad) cmp shrb dec ficoml push mov scas idivb cmc cmp hlt inc and fdivl stos inc jb mov test addr16 stos fnstcw adc inc cld popa or loope sahf or pop insl adc popf outsl rorb jge dec xchg stos adc jb and xor pop add jg stc cmp xor cmp (bad) imul push and leave add ljmp mov sti (bad) xor dec or sar jae sub mov mov xor fwait call in in or mov xor dec pop and loop sub adc pop sbb cmp sub jecxz fdivrs mov test leave jbe jp jmp loopne les push pusha cmp imul rorl and mov (bad) imul jne fidivr mov xchg mov popf jmp jno ljmp enter lds mov pop mov xchg cmp inc push ds (bad) mov xor adc mov mov out lea out pop int int3 (bad) in pop xchg push lret ficomp cmp push mov sub pop push add mov pop mov pop adc pop fs mov inc fidivr (bad) int3 test lods push gs ffree mov cld outsl outsb or fstpl add fcmovb pop mov sahf or and (bad) inc add into mov lods mov ficompl xor int cltd mov push popf push fldenv cmp add mov lods insb jl icebp js,pt lahf or adc shrb jp es and sub dec or or xchg jge out jl lret xchg mov xor pop les sti mov mov pushf dec inc mov pusha fisubr jp cld jmp dec xchg sub xor mov loop popl lock lcall out shrl jae lds pop cmp fisubr call adc (bad) push adc pop adc imull or scas add pop cld mov push add cmp cmp mul cltd add loop add push inc icebp addr16 dec in outsl mov or call shr pop add dec adc cmp out sub xor cltd xlat cltd mov or ja mov fisubl cltd mov pop push cmp lahf and lds ret and mov mov movsb sub sub shr loopne mov xlat orl cmpsl out dec stos dec (bad) push leave jmp mov popf jne (bad) jo pop call in (bad) and and jnp dec es aaa mov hlt sbb inc int3 cltd mov xabort outsb inc mov je and daa fmulp mov mov in test (bad) pushf pop gs ret mov add clc movsb pop fimull adc add lods mov inc push pop nop popf pushl inc inc bound xchg add mov fcompl mov fstl pop mov push pop pop jns add cmc cmpsb or cli (bad) push insl subb jmp lahf jecxz insl lret cwtl dec insb fiadd addr16 mov test push jl or out std xorl cwtl popf aam dec jbe aad push cld push imul dec inc mov mov repnz xchg fbld (bad) mov out or stos loopne fcmovnb scas pop leave bound lret push adc or fsubs xchg lcall cli adc into dec and ficompl loopne cmp (bad) (bad) dec add push adc icebp cmp into roll (bad) cmc xchg jle test dec cmp int3 jp das cmp ficompl push jnp test xlat or loopne push push xor leave sti mov jg pop jmp jne je add mov push mov dec cmpsl xchg mov xchg test pop push (bad) cmovg sub in out mov sbb movsb lret aas incb jb js xchg movsl rorb dec and rclb xchg sbb test dec jae dec xor sahf dec outsl dec cltd lods pop jae sub jnp popa mov sarb or in pop imul push daa (bad) enter push ja sub stos and xchg js dec xorl ja loop ffreep ljmp ret mov jmp pop adcb cmc ds out test pop and mov pop add mov cmp scas xchg stos popa pop shrb inc out insb stos das jg pop inc dec es and int iret pusha loopne enter shr cmc inc ja sahf ljmp arpl push add ds xor pop pusha mov dec mov cwtl sub lods mov or das sbb (bad) mov sub adc addb lcall cmpsb shrb stos jle jle adc pop xor in test add ds cli fstps lds mov inc add jo xor mov js out or xchg (bad) mov fdivs cwtl scas mov (bad) jg sub or sub fwait pop push xchg adc daa or sti out xchg jns scas jle es cmpsb cmpsl jle test popf mov adc add jl loop lea (bad) sub xchg loope imul dec dec xchg rclb push mov fcompl lea dec in je (bad) sub outsb mulb fdivrl xlat popl shr inc nop daa orl add (bad) movb pinsrw or outsl stc jl leave and push add inc push pop hlt ss mov outsb add outsb pop dec push mov adc test pop adc call mov fild xor es ror lds ret bound jns dec fcos cmc xchg aas mov or loop dec ror lods push in xlat and subb push pop fwait lods xor in dec pusha xor ja pop loopne push mov dec sbbl xchg mov insl fimull mov jge movsb inc out inc and jmp std xor xor jns adc jnp push push ds in lock je (bad) fs test xchg push (bad) mov sbb push xchg lret mov mov pop mov pop jns push add mov push ffreep jp mov sbb pop movsl (bad) daa mov sbb arpl mov fwait sbb iret cmp shll lods dec xor (bad) jne loopne push adc outsb adc ljmp mov pop stos stos loop outsl add lret iret xor cld inc cmp cmpsb (bad) sub fldenv jno dec pushf lret hlt fnstenv mov pop out xchg inc das mov (bad) push faddl cs push mov rcrl xchg cmpsb outsl test out addr16 js jae mov jo adc xchg sti jp enter stc or pop (bad) rcr shrb scas mov push in sbb mov mov pop fildl mov inc cltd mov xor pusha cmp leave pop mov scas inc xor lds push out mov mov adc push jg push pop xchg jae lds push cmc push test cmp ret mov enter outsl call push adc div push imul xchg shr sub sbb pop sbb lret and les (bad) jns mov mov daa std push mov sub cmp mov aas rcrb mov mov insb xchg cltd (bad) out sub jg cmpsb stos mov xchg sar mov push sbb mov xchg sbb daa cmp aas adc mov push ljmp adc xor dec inc mov rcrb cmp clc ljmp sub xchg mov mov out lcall jecxz xchg fldcw icebp (bad) cmp dec in push push xor xchg sti jbe pop dec jle pop push das test pusha (bad) shlb ret arpl test mov sbb cmp jo jbe inc adc pop lods sti or ljmp or xchg lahf mov xchg ss fisub stos sahf mov das adc int adc xor xchg fistp add or inc adc daa outsb syscall mov es mov xor outsl mov js sub mov sbb adc mov adc xchg sub stos ljmp rolb mov jo aas out mov or fisttp jno add sahf std stos movsl lret outsl mov nop dec ficomp addr16 xor (bad) cmpsb (bad) jbe mov lcall adc insb mov lahf pop inc or jle sub in adc xchg cmp (bad) pop js rcl insb call out fbstp jns dec fsubs cmc mov loop mov jl and pop mov jae mov sub push pop shrl bound (bad) test insb rorl aaa movsb lods cmp aaa aaa dec mov dec mov shrl cltd je jb das sub xchg (bad) dec mov ja mov sbb mov or sahf (bad) lret mov xchg int3 cmp xchg sbb mov pop in xor push cmp sti pop mov push call push lahf dec movsl (bad) cld stos mov fistpl mov in mov mov lret aad pop jp shrl sbb loop cs out in ret pop push frstor cltd popf jb xchg andb xor call mov mov sub (bad) xchg jae adc js xchg jl leave std outsl push ljmp inc dec pushf cmp mov and inc add cmp rorb in mov ss fwait cmc sub dec jno int call xchg loop js stos jae ds adc mov mov mov mov bound inc ret dec mov iret mulb fdivr sub sbb popf sbb dec adc clc inc mov pop inc gs test outsl mov mov add mov daa mov (bad) push xchg and mov and jno xchg fldl cmc xchg int3 sahf cs pop sbb orl gs dec int out and fistl jge mov cwtl test insb mov and cmpsb bnd stos addr16 xor cld (bad) dec mov jbe and sub jg lds fcmovu ljmp push jae dec aad iret and xchg pop push cmp push and pop aaa sahf inc and mov jge jecxz (bad) sti scas stos aam lock int xchg int outsl jmp loopne push in dec lock lahf repnz cmp push and lea call and and pop inc sahf (bad) dec and mov das bound jno and repz (bad) mov (bad) outsb cmpsl jo add adc pop dec ds push cli and cltd roll lods ja xchg js test xchg daa test pop clc pop es inc xor mov cmc dec bnd jae xor jo xor mov mov mov dec xchg inc mov daa adc xlat pusha or pop rorb enter jmp scas mov or sbb pusha dec pop rcr mov test loop xchg fbstp or fwait jg icebp test sbb and sub adc and dec xor sahf fbld nop add stos adc sbb or jg jno xor mov inc (bad) icebp outsl ja (bad) adc sbb out pop les dec push out enter cld jmp add std fistl cmp in mulb adc mov mov sub xchg pop or jge dec jecxz push dec in lds mov sub add leave int3 int pop mov (bad) (bad) ret or fstp sub outsb push mov jp cwtl mov dec int3 lds cmpsl or mov lods enter push arpl xor adc pop jecxz fisttp hlt mov adc jg imul fnsave rcr push cli mov arpl scas lock and mov inc push push insb cmpsb cmpsb pop push nop (bad) scas stos es pop mov lock dec ficom add or fisubl int push xchg add test adcb adc fwait (bad) rcll mov outsl sub dec bound or pop or xchg sbb adc fwait jmp jnp pop dec in add loop push arpl jbe pusha les mov je fmull cmp mov and add test and gs rcrl inc cld dec nop push push ficompl imul dec sahf sahf and pop fmuls dec stos leave adc or push pop aas mov cmc (bad) jbe and add pop sub push (bad) std dec mov les mov sbb inc pop pushf mov add in cmp add add fisubl mov call aaa (bad) or cmp movntq out inc pop test outsb popa sub imul arpl in ret int jge test in xor cmp in pop sbb fdivs inc loopne idivl lret je in ret gs ss out jbe inc mov dec mov aam sti lcall and pusha add sbb clc idivl pop pop jb jb aas js (bad) repnz das sub dec ret test sub and jb lock notl js js cmpsb sbb xchg gs adc arpl imul inc ffreep inc mov lcall jp inc dec sbb add cmpsb les jl cltd dec idivl inc push pushf loop adc add ss je movsb xor stc or push fstpt sarb xor out popf xchg (bad) cs xchg popa (bad) mov out pop cmp insb daa fstpt push cmp xchg inc cmp outsb inc cmp mov (bad) insb sti jo mov lods add dec cli ret popa mov (bad) lcall mov add mov cmp cltd int3 mov std sub pop push movl je push adc xor mov xor xlat inc lahf clc adc pop (bad) fwait pop cmpsb xchg jbe push xchg mov je sub mov outsb cmp aas ret cld push jnp adc mov lods or or lret (bad) mov or or aam sub or call xor in jae xchg push test adc lea gs shlb ja popa aad xchg addr16 cmp cmc push xor jae inc scas xor add test and rcll add mov outsb sbb (bad) xor xor pusha addr16 jp pop lret ljmp insl sub imul mov dec aam into add sub sub call aam fwait jbe jmp fdivrp cmpb or ja dec int ljmp jo pop fnstenv mov xor decl push cld jb mov sarb jp jne jmp lret pushw or pop push jmp jg call insl and and inc test jle xchg leave inc popa or je out faddl rorb push daa outsl push cld add jae cli adc jb dec mov adc or test push popf pop xchg jmp aad adc adcb inc aas psadbw jne or sbb cli xchg lods mov jae mov repnz mov int3 les scas jecxz mov xor stos sbb into adc inc stos jmp shll cmpsl test (bad) js push adc je jg lea adc pusha movsb popa sub mov in pop jb fldcw in (bad) xchg ret inc stos fldenv in pop and or int clc mov negb mov setp test and mov xorl and ljmp fmul in sbb cmpsb push xor mov stos inc mov cmp out inc pop enter mov mov pop xchg sbb or jno insb push sub mov (bad) pop sbb cmp inc push rcrb adc loope and xchg mov pop pop icebp sub fstl sbb push rolb or cmp (bad) test push sub into out inc call aaa addr16 fsubp ds cld pop fist scas lods pop movsb fcompl pusha hlt cmp mov fisubr dec mov cmp adcl movsl test jmp (bad) adc cs mov push cmp adcl in jecxz pop gs mov xor pop push rorb mov dec inc scas test subb sbbb fwait cwtl jecxz sahf pop cmp dec or jb jmp hlt xor cmp (bad) or aad jb add push xchg or aad cmp sub bound je es push loope cli push xchg jbe push add jl push hlt ds movsb int fisttpll mov mov mov in cmp fmuls pop mov insl aad clc or in mov jo (bad) or cmp gs cli inc (bad) pop add sarb sub rcrb push lods nop mov sbb mov fstpt inc mov adc jno out test enter push je hlt xchg (bad) push pushf (bad) std sbb jmp adc iret or add pop repnz jp iret rcl data16 es xlat xchg mov mov adc nop aam dec push push dec jp and fild sbb xlat rolb clc inc jge mov (bad) sahf lcall stos or or loope xchg add insb dec sub push roll arpl es fsubrl rclb or add loope mov (bad) and mov lods js jp add fnstsw mov (bad) mov inc insb xchg arpl xchg xchg inc mov and mov lods pushf mov scas popf inc or jmp out jne mov dec mov xor jnp push pop scas (bad) push std inc push sbb gs gs or divl xor clc pushf sub mov sbb pop sbb fcmovbe push cs cmp mov push pop std int mov out loop hlt fldl xor outsb add adc lahf js in clc push cld push stos or xlat xchg sub xchg in clc mov call cmpsl jge jge les push inc add mov jg jns and adc (bad) cmp fcoms inc iret sbb mov mov loope dec mov arpl hlt sarb (bad) int3 xor xchg mov ror push push icebp add push fnsave imul add sbb (bad) xor icebp cltd out (bad) mov bound xchg (bad) inc jge cltd push pop out inc imul in sti jmp call stos loopne adc mov mov pop xor mov dec hlt leave mov mov addl arpl or jmp in fmull test jl outsl lahf push adc mov in out xchg ds negb dec test scas push stos lcall rorb divl mov cwtl imul popf adc add clc jmp add call or xor adc pop into scas lods sti sbb movsl lcall xchg scas jbe lods aad fildll (bad) mov pop in das gs push lret inc push outsl repz dec jmp ljmp push cld fcoms cmp mov xor repz lret sbb jl dec cmpsl (bad) daa inc or (bad) and xchg xor cmc fstl aad mov mov dec push mov cmpsl test ds test call fmull ss ret (bad) sub stos xchg jne movsb mov cmp enter push xor mov rcr jno xchg les jl jbe in and add dec pop mov sub scas stc movsb pusha push bound jb jae add enter mov rol mov cmp cmpl mov pop sahf insl lea xor fisttpl iret push xor js nop xchg (bad) cmp jp pusha js xor out mov jb fwait push inc and or scas push bound shr xlat inc mov scas (bad) jp dec jge in cmp xchg rcll loopne sub and out jge je lret jge sbb (bad) fldenv mov imul cmp mov fcomi or fnstcw xchg xor mov inc (bad) fbld test ds or dec sub cmc cmpsb dec and lods test mov scas jg mov in push pop hlt pop cmp lods dec lea cmp lods inc mov shrd in pop add sbb mov xchg stos pop adc sbb dec xor std cmpsb (bad) (bad) aas imul (bad) adc sbbl mov cwtl insb in stos fcomps adc (bad) jns jno dec xchg mov fisubr cmp cmpsb adc imul (bad) or sbb adc dec dec fstpt mov and lahf (bad) lock mov jge jg xchg push call pushf add xchg lock test rcl sub push cld add les add or inc push inc xor notl xchg cld mov test adc daa sub aad popa xchg mov cmpsl ds sti ja or iret or inc add mov push sub dec popf shlb mov (bad) jne scas lea fxch scas add lds lahf dec mov test rcrb jae es add stos js pop mov icebp pop xchg jmp addr16 les sub in insl push xchg insb pop jbe mov mov adc jp movmskps jge fmuls xchg inc (bad) push sub std test testl lea or fidivrl cmp nop or add lock or xor rcrl mov pusha hlt xchg pop ss mov mov (bad) (bad) mov sub aas js xchg dec push push ds xor cmpsb and insl pusha push fs jo (bad) test (bad) pusha in pop add push loopne cmp sub imul cld out int lock lea inc mov lret adc adc (bad) lret cld add inc lahf cmp jae sub mov xor stos inc inc cmpsl shll cs mov stos xchg cmp repz add ret lds adc stc sbb jbe ret jg daa mov pop cmp stc mov pop pop aam sbb mov mov adc popa adc jecxz pop adc loope mov xchg pop xchg inc outsl lahf push dec mov std jl mov push add sub xor pop loopne movsb daa mov dec mov and jge or sahf pusha (bad) mov cmp (bad) pop inc jg mov jmp dec sarb mov insb ffree iret sbb sbb mov dec jo loope inc pusha pop and add cmp adc and mov inc ret nop xchg jb xor scas and dec out mov inc add cmp into sbb dec adc mov ror (bad) hlt pushf lock xchg push in mov imul cmp rolb out out sbb lcall jo adc pop jl lret sub sub jbe out cltd ljmp xor in mov out fsubl push lea add sbb and mov sbb xor pop mov cmp dec sub test and xchg cltd pop (bad) in or fcoml shrl add jno dec pusha add mov jle dec mov cmp xchg cli fsubp push push jne cmp dec mov daa mov or mov dec fyl2xp1 lds jge xchg lock adc mov push mov xchg rorb popf iret xchg out pop sub add ljmp pop pop and cltd mov ret xchg jne fsubrl sub pop mov fldenv inc push jmp mov mov cltd das jno or jmp pop push addb xchg pop andl int3 loop mov pop pop (bad) out or shll cwtl adc xor hlt call je sbb mov xor cmp es pop test push out pop mov js arpl imul mov mov jmp fcoml xchg pop jg inc xor (bad) mov not jmp ficoml jmp jg dec dec or test jge popa out add stc sbb add leave stos shr xor push cmp ljmp cwtl push mov pop mov mov aam add mov iret sarl jne jne orl and call mov xor pop arpl xor test int3 sahf adc xor (bad) aam push dec mov xchg adc inc sub cmp (bad) sub stos dec repz bound add dec das notl sub mov xor daa clc popa sbb pop cld sbbb xchg pop pusha jle ret fimull inc mov add dec and push sbb mov sbb iret jns sub (bad) dec xor fdivs inc adc mov xchg cmpsb jge (bad) fidivl mov mov xor sbb adc stos jg test add bswap adc and and mov pop decl ss stc sub andl mov mov lea fcmovu pop insb lret mov and stos sub (bad) pop or adcl adc cmp std sub adcl (bad) outsl dec in add sysexit les pop enter fisubrl and jnp cmpsb cmp pop dec pop sbbl xor xor fstpt mov nop mov ret jnp push stos (bad) std fs (bad) jl xchg mov sbb adc movsl cmp push ja push fnstcw sub call scas in mov xorl jno fs out mov push inc sub repnz mov outsb xlat push outsb (bad) enter or es mov xchg call xor add sbb push xchg xor adc movsl dec aad mov xor and mov jl push fstl xchg mov mov add ja or lret loop std jae cs adc or cmp mov lea add cmp cld lahf mov mov gs std jae popa dec xlat xchg pop sbb sub rclb clc fistpl notb das lock stos xchg jae loope andl daa pop push loope fmul inc push push push aaa adc nop outsl clc and mov stos neg add xchg or or jo in pop call insb aaa ja mov cltd mov (bad) jne mov mov cmpsl xor jp push and in mov divl push in push popa push divb popf out pushf mov std dec and mov insl das movsl cmp faddl cmpsb pop adc negb or pop cmpsb xchg mov in sub mov int3 jb pop mov cmp xchg sbb push and fstps lods in es dec sti sub inc test xchg add in lcall aas cmp cmp add shr out sbb xor scas outsb call ret sub daa hlt pushf rol mov inc insb xor push jge push addr16 sti stos std roll cmp dec push mov jmp jae ja ret aaa mov pop in mov es jg roll fistpll lret neg cmpsl lea jnp cs rcrb push inc dec xor es push lock dec pop push scas outsl mov jnp mov enter out ljmp imul mov jp std push (bad) clts inc loop add jle popf sbb xor (bad) or sub (bad) mov xor add les xchg sarb aaa sbb dec scas push mov dec sbb loope notl pop xor xor xchg rol mov gs lock stc es pop push sub popf icebp in adc cmpsl ror push xchg xor jge push mov ds insl js lahf jle dec mov add xchg xchg fdivrs sbb into bound xchg adc xlat jns data16 setp sub push push stos scas xchg fimull test sbb lcall cmp xchg and add and add mov popa sbb and aas jp bound mov mov cmp test push xor xchg dec xor (bad) and adc mov dec ficompl mov cmpsb in inc pop push test jbe push sarl add push (bad) cmp rolb mov jo popa jge adc repnz (bad) sub repnz inc outsl xchg xchg push daa lods cltd xchg cmp iret mov adc or rcll (bad) js cmp or icebp jge mov loop jb xchg daa addr16 rorb cmp out sbb sub lea cmp fsubr cwtl adc in mov sbb mov adc (bad) or pop mov mov cltd fnstsw or cmp xor fwait loopne jle stos or pop pop push ljmp fsubs mov loope cmp jno pop push sub fnsave push hlt add stos lret mov pop ds out mov mov pusha movsb mov mov push ret xchg or or lret lret mov je (bad) xor in xchg mov jbe adc jnp cld jb add push imul push fs (bad) add int3 sbb (bad) loope pusha or cld inc mov xchg hlt dec test std bound xlat out arpl xchg mov mov jns push addl (bad) imul mov jb fbstp lods repz mov jl adc adc scas lahf into jmp jecxz in mov cmc push and gs shrb dec sbb sahf insb aaa daa and push pop popf pop fs sarl lret push popf cs ficomp stos inc scas or outsb mov xor (bad) lahf enter mov imulb addr16 cmp aam jae into fs adc mov scas lahf aad pop lahf inc jno add push inc mov lods sbb dec dec xor adc imul cmp adc sub xchg xchg lods sub or xchg xor int3 dec aad cmpsb insl in ret cmp lds mov sub lcall inc movsl das pop mov adc sub xlat mov (bad) mov mov inc add lea jecxz shll push mov add push add outsb xor pusha (bad) inc in out sub add sbb insl cmpsb dec mov (bad) sbb jge xlat (bad) sbb mov sub push sbb repnz (bad) push lods push jg sti fldz mov ss (bad) pop sub pop inc into sbb in enter xchg or push and and adc aas sahf decb jp movsb les pop adc or loope mov and adc shrl mov int lcall stos out or xchg pushf gs lret popf loopne mull sub cld inc ljmp mov call or loopne dec xchg push (bad) mov or (bad) xchg mov in jmp xchg das popf mov push mov cltd out mov or nop sti mov inc adc add and fadds out xor cs add repnz fs jno std push ja mov ret sti or scas push jle push cs inc hlt xor andl bound dec imul mov inc sub xchg push nop sub cmp mov outsb imul repz lret repz call fwait push insl lock jb scas and xchg iret inc adc push lock loopne nop adc repz addl mov repz ja ds xchg out mov imul clc dec jecxz push repz dec rcrb mov ret pusha pop (bad) (bad) adc in pop mov dec or jae jg shrl frstor pop cs push andl movsl mov xchg iret test sbb sbb je repz test fwait cli add cmp xchg pop in stos or dec outsb mov stc xor mov imul sub xchg xchg mov es jge iret fstpt add fcomps in aas lret int3 and jns xor push sub adc insb aaa in cmp ja std or sub test xchg xlat push pop movsl aas pop sar out jb,pn pushf scas push lock imul dec dec cld pop and test pushf mul iret inc (bad) sbb pop cwtl mov sbb popf add dec push gs stos adc xor stos mov mov sbb mov nop push xor xor jno push add push dec cmp call jl push daa jl push rclb mov addr16 in jbe jo mov push fstps pop fdiv popf clc jne rcll dec or aaa into cwtl mov js push daa test add aad (bad) sahf mov sbb sti xor push int rcr sbb jns arpl cmpb int (bad) stos jge leave fwait add mov xor or pop fisubrl xor and leave aam int fisubr test fcoml mov movsb mov inc gs add bound test test loopne add mov mov pusha insb inc mov inc dec xor pop cs mov mov and jne and jae lahf sub adc gs in fnop jl pop push cld inc call mov inc test jle lods and xchg inc testb (bad) mov (bad) xor xchg cwtl loopne push mov jecxz rcll mov in sub pop daa pop pushf jl mov dec shrb cmp (bad) popa push into push cmp movsb or mov rorl inc add xor outsl pop jmp mov (bad) in icebp mov addr16 sub scas mov (bad) xor push (bad) in inc movd push dec mov and addr16 (bad) sub xor sub mov mov or shrl imulb xchg inc bound scas sbb repz push out jecxz jl fwait add es ja inc fwait mov sti push xchg in add (bad) lods sti dec mov sub mov fildl sbb (bad) mov inc sarb mov idivb xchg mov jb hlt push iret inc out out mov pop push arpl and (bad) (bad) aaa dec data16 aam cmpsb jge pop ret stos mov xchg adc adc pushf clc mov jo lods sti jge cli cmp inc xor mov dec xor orl add pop pop adc enter sub or sbb rolb aaa in inc pop sarl lock jnp loopne data16 inc sub lcall cltd lods fstps jp insb xchg mov mov aam mov test xor cs test cld push sahf enter lahf adc pusha cmc ss imull test insb inc jl dec and inc xor int (bad) aad arpl lret or inc dec loope loope sub dec sbb and xchg dec xlat pop cmp mov sbb aad add out je in xchg lret test cmp lret xchg mov mov rcr pop mov inc xchg jge fcmovnu cs outsb cmpsl add js enter mov or mov xchg adc lahf and xchg stc mov loop in pushf mov loope ja ffree push pop or lret (bad) xchg out xor sbb iret dec sahf xchg inc cmc mov and inc adc and mov xchg test jb pop inc mov imul or cmp sbb sbb aas pop sbb test aas imul loop into (bad) pop icebp cmpsl hlt xor mov sti pop je repz iret inc lcall test fimull push vmovmskpd inc dec into xchg es xchg aas jge cmp xor mov pop xchg mov cwtl jbe mov movsb shrb pushf (bad) and pop xor push xchg inc mov push into std pusha mov sub insb lock out cld popf nop adc dec std cs xchg in add xor push xor out xor lret inc adc jae xchg cltd (bad) iret popf adc inc insb xor stc jbe les pop and mov mov das jmp aas sti mov leave repz pop inc xchg mov xchg sbb loop je std jmp or sub or outsb sub sub cmpsl or xchg sbb or lods jne push push mov popa ret sbb out imul dec xchg adc cmp cmp mov mov push adc fcomi pop mov in mov adc cwtl in sbb hlt cmpl fcmovnu pop addb popf and jnp fs sti or out lock cli cmpsl mov and ds popa cmpsb cmpb dec mov icebp add xchg sarb mov add xchg xor shrb and (bad) enter (bad) sub dec jecxz add jecxz pop adc jl lret fnstenv clc inc (bad) mov jo jnp adc lcall (bad) (bad) jb fldcw adc insb mov js popa pop cmp cmp out sub dec or aad push or and and faddp stos sbb faddp std lcall xchg sbb cmp enter mov ljmp mov mov dec or dec stos in and mov out mov push mov cmp out cmpsl imul shrb js inc out mov dec dec sub sub push in xchg push sahf (bad) movsb pop mov ss outsb popf call jecxz add rorl push mov lahf add inc imul mov call adc jns hlt cld sub pop movb cmc add jge iret adc lock adc sub lahf jns mov lock push sub add pop inc test test dec aaa pop notl clc mov inc push push xor imul jmp sbb cmpsl mov (bad) sub inc cmc adc inc adc jle jmp je jle insb lret adc shlb out rcrb add lret rorb je je imul jo fnstsw lods cmpsb (bad) clc push and sbb xchg add (bad) pop ja ja int3 daa cli leave ss rorb shlb hlt dec jp push out repnz xlat in insl repnz cli xor int sbb jp scas scas pop cmp push fwait sbb repnz pop ret xor xor xchg mov outsb aad ret and incb inc xchg cmc es negl mov mov out xor add jg test popa mov pop in add arpl cli jno fist or add loop loope dec dec arpl jns arpl mov fisubrl in (bad) ja ja int3 stos cs xchg mov lods mov mov cmp cwtl addr16 pop sti xor xor lahf mov fwait std subb dec xor adc jbe push (bad) jb rcrl out xchg push ret jmp pop push or loop insl movsl mov or stos fisubr sub or xor loope add and push lahf cmpsb mov xchg or aam push fldt push mov call or (bad) scas jbe sbb fisubr test adc and test push sub (bad) pop dec cmp clc inc jg pop aad icebp cmp pop fnsetpm(287 push test fcmove lods repnz cld call push adc (bad) bound xchg xor mov fucom jne mov test (bad) sub inc mov out sbb add or (bad) inc adc imul mov sarb (bad) (bad) mov add jnp shll and sti data16 inc dec inc nop xchg adc repz mov sti in in push xor sub add xor add inc shlb push scas scas leave adc inc bnd test int jle inc (bad) mov cld lcall cmp fwait iret or jle inc mov std xor xchg es xor (bad) cmp jl loopne xchg jb mov fsubs sub mov or push popf not sahf cmp pop std jge sub (bad) xor push cmc fldl mov call jecxz add or nop dec sbb pop lock xlat iret push cs shrb ret mov nop or push ffreep xor std mov js out pop dec mov xchg mov lods leave jb fs lret cmp mov iret xchg mov daa aad ficomp nop les inc inc xor arpl push mov mov mov push dec cmpsl test jg mov data16 clc cmp iret adc add cmp xchg adc or push adc cmpsb inc pop stc movsb mov fs adc mov adc add mov or dec call xchg das and int3 inc enter rolb xlat idivl out imul and in sub push clc es adc add scas enter pop push add mov or mov loop and sub mov adc mov neg dec lea mov les inc incb jne cmp out (bad) fidivr cmpsb mull lock inc into in mov cwtl sub pop out jnp daa js ret mov int (bad) cmp call pop std jl sub fnsave addr16 add mov loop (bad) (bad) lock mov xchg lea aaa pop cmp xchg mov dec cld mov sti hlt (bad) outsb repz insl sub lock dec (bad) ljmp mov pop jecxz inc jne and mov jge arpl inc es rcrl or and fcmovu stos sub mov or push lcall neg xchg push fs xchg xor movsl movsb adc pop sbb jl xchg lods (bad) and ja xchg mov (bad) adc lcall mov mov dec pop fsts cmp movsl dec test nop shl (bad) std rcrb cmp push popf fsubr jb in xor test pop pop pop add out out (bad) lea arpl (bad) fwait les sbb push inc adc test loope inc unpckhps out pop pop add int3 std or (bad) mov fcomps push push imul and push jp sbb mov lret add pop stos js jne jl (bad) idivb adc outsb enter mov hlt aam cmpsl sbb stc lods hlt je std dec xor sbb (bad) incl push jo or pushf inc pop dec mov gs aas pmulhuw repnz xor (bad) cs ss lret scas int or mov sti (bad) (bad) mov xor lds xchg cli ja in jno pop enter xor outsb push (bad) idivb lret or out dec popa icebp call mov je rcll pop pushf dec inc js nop xchg and sub (bad) xor lahf xor insb lods popf (bad) ss cmp sub (bad) repz adc popa add mov mov or mov xchg cs int3 push loop gs cmp mov movsl movsb popf jno push les mov cltd iret subb into jns xchg loopne addr16 in pop jl or rorb cmpsl cmpsl aad cmp fisubrl dec int3 rol xchg jecxz add test rclb xor fwait sarb sbb pop inc xchg scas test imul dec xor shrb pop mov add sbb stc adc enter xchg psubusb pop das (bad) and xor push mov in (bad) sahf loopne out out std mov into repnz incb push mov mov clc insl xchg fisubr stos shll negl aam cs dec test mov jg mov rolb and and or mov jg mov lea mov lahf movsl ret fidivrl adc movsb shr mov insl lea pushw aas loopne sbb insb cmpsl lret mov xor jbe pop push push lock mov jmp cmp jmp in jge adc fxam cli pushf dec or pop fwait out popa fstpl mov mov jae jge data16 outsb fidivl test xchg add and push cmp cltd out xchg test clc cld xchg leave outsl lea lods sub push fidivrl into add cwtl mov and fsubr inc fisubr or movsl cwtl jb dec adc mov pop push sahf std lea leave sbb cmpsb mov xchg pop inc mov lea mov aam dec daa or pop shrl mov mov cli rcrb gs and cmp cmp shrb add into fcmovb (bad) cmc std and adc push lret mov jecxz dec xor sub cmp sbb jae (bad) (bad) or rclb lahf push scas test mov aam orb lock push push mov int dec mov stc mov (bad) mov or add bound (bad) and push cmp mov inc stos out inc add push loopne mov jne adc loop lret gs rorl push in popf dec adc out les jle xchg jbe aaa dec lahf es dec lea (bad) push inc xchg in pop popl addr16 data16 sub jmp mov sub push xor sbb cmp negl test lcall and cld sarb jge (bad) xor mov xor jl aas std mov test cs mov fbstp das int3 (bad) push or leave inc sbb test adc dec out sub and pop push mov or adc movsl xor cmpsb jmp out sbb mov or lret add mov ret pop stc push lret (bad) lea mov mov negl bound jmp mov loop xchg sub cmp sbb xchg pushf jg iret jmp imul sahf jle dec ret inc imul (bad) in cmpxchg ret jnp iret add pop addr16 mov xchg neg fcoms int mov or xlat test cmp dec bound or lock push lcall push pop enter pusha xor iret push xor test jecxz ficoml cld in fistp jae jnp es inc xchg mov add cmpsl dec mov divb scas sti or add clc or (bad) jne add push push or pop or and rcrb insb test aad test pop test loop jno insb lcall push jns pop outsb mov enter ret and faddl loope int loope icebp mov dec fisubrl test xchg push cmpsb movsb fs mov adc sbb imul sbb mov push pop cmpsb lret mov xor mov xor out sub outsb add add inc or fmull xorl in xchg sub pop inc test movsl mulb xchg gs (bad) fwait imul lret sub cmc call pop repnz pushw cmpsb add loope jecxz jmp hlt pop pop jecxz aam jne int jo andb scas int3 mov lods sub test cmp mov (bad) movsl and pop sub pop jbe inc lret sub out inc push mov out loope ja mov jnp dec stos dec and mov test ja call pop push xor outsb and mov in pushf orl lret dec into xchg test cmc outsb jns mov mov jecxz sub sahf fdivrl (bad) cmc clc leave xor pop ss stc pop insb js sbb adc cmp (bad) mov cltd imul (bad) xor mov data16 sub scas out mov xlat pop std mov xor pop sbb (bad) pop aas aas mov pushf pop fmuls and insb shlb jp sbb repz lods stos sbb sub mov inc pop xchg arpl inc sbb mov cmpsl arpl cltd mov adc mov mov inc insb fildl out cmpsb mov lret dec xor data16 (bad) dec inc push dec add es dec in pop ret push bound loopne in fmull enter adc cmp or pop jnp in out outsb fcmovbe dec cli outsb inc sahf popf out pop out lea dec cltd mov mov insb inc sub or jnp daa xchg xorl fistpl xchg mov leave (bad) cli mov dec fs mov dec jb cmp dec mov and test popa sub push sub push mov fwait or test mov pop aas pop sahf call into addr16 push lea insl push fst mov xor cmpsb std das clc pop es inc mov inc lret inc test fldenv adc mov (bad) scas inc rol lea push fsubs lahf dec jp and jno pop and pop sub mov sub mov inc add enter xchg hlt dec cmpsl sub jmp lods pop xor xor mov jp mov mov adc out testl cmp ds inc mov (bad) movlps movsl addr16 call adc ja adc fcmovu movsb cltd movsl push fild dec mov sub cmpsb in bound rcll stos loope arpl and adc lods mov out jo dec jb push (bad) icebp adc shll sub in (bad) in rcrb xor push inc cwtl inc ficoml sbb lcall sub mov out push jle dec in jbe std mov xor andl push mov out dec add cs jl jmp jno add aad jbe push stos subl and outsb push mov lahf sub adc sbb jmp xchg fdivrs lods loop (bad) or push data16 adc pop test aaa or mov xchg insb pop lret mov insb pop mov loopne xchg and loop jg cld fucomp icebp jp fidivl andl mov iret mov sub faddl sbb mov scas gs inc mov adc xchg dec jns imul xchg bound faddl cmp js push addr16 rol push (bad) aaa outsb mov jo outsb bound adc in out sbb jg push cmp xchg cmpsb sbb pop pop jecxz inc (bad) fs xor add mov arpl sub aam jge and push sub sahf mov xchg inc sbb and inc sub gs loop pop lock rcll mov call (bad) lock ss int dec cwtl cmc lret xchg sbb shr jge stos int in aad and inc nop stos add and shl psubsw mov lret es je std ret jnp mov inc add add insl jo and rorb mov mov movsl inc cs mov and mov (bad) gs push int and loope xchg inc mov push push pop aas pop mov xchg ja xchg mov imul nop enter mov out cld pushaw leave jl sbb xor ret stos std mov xchg fstpl jecxz and or push ret or pop cmpsl mov and inc lret and pop xchg lret dec mov mov and mov cmpsb jno imul loopne ja into xchg adc mov mov popa gs fstsw lds test mov imul out jge ret mov and in loopne ljmp mov std mov fcoms mov cmp inc jb xchg sbb fs outsl mov dec xchg fdivr scas lods xor leave sbb inc nop push or jnp mov push daa or mov cli dec test and mov js jg jmp mov or data16 fiaddl (bad) sarl add jno xor (bad) pushf inc js pop test movsb sub jecxz cs clc lret test jae dec pop push mov (bad) lcall adc sbb jl rorl in popa cwtl arpl ret dec test aas (bad) dec ljmp mov dec xor adc xor xor cmp inc bound cmp loop cmpsb psrlq das int mov dec pusha mov insl mov cwtl mov push inc or mov sbb repnz jae xchg dec sahf dec dec mov test cmc ret loop lret cli and push cmp cmp lahf jge push mov cmc ja push sub add rcr pusha inc add aaa add imul fistpll je sbb fcomps adc dec rol xchg xchg push xchg mov dec sub fsub mov ds pop push mov mov lahf aad jae pop mov fldt iret mov dec iret push fidivrl mull (bad) lock jo mov js clc jge call sub mov outsb pop mov gs xor pushf sub mov aad int jp sub push iret jmp inc sahf mov jge push rcrl xor xchg gs xor dec adc xor sbbl inc xor inc mov imul mov jnp push sub dec loope cmp je rcrl (bad) loope cmp cmp cmpsb or sbbl (bad) mov sbb add push pop in mov push jge sub xchg sarl add xor sti in push sub dec push cmp sbb inc push sub sbb dec sub lret pop and in xchg nop add sub jge outsb insl adc jno pop int3 cli mov jbe mov jl mov sbb and push adc mov outsb mov sub or jb addr16 stc fdivl out push dec mov loop jne jnp mov adc scas xor mov pop (bad) int3 (bad) mov outsb xlat lods mov push add movsl jge loope dec push hlt add xor mov popf int3 maxps dec mov mov mov sbb cwtl push imul push in mov pushl pop ret je jns in sub js pop lock ljmp jp adc sbb and int popf xor jbe into or and icebp mov shrl xchg cmp cmc jecxz jne jo mov mov dec inc sbb out mov mov mov paddb ja inc ret stos add call imul inc jnp jmp or pushf (bad) sub subl (bad) push xor fwait sbb mov loopne scas or dec pop mov xchg cmpb jge jp int loop in scas fstps pop mov imul loop mov jnp repnz dec daa and xor xchg imul and pop xor aam adc icebp adc pop mov sahf inc cli push test loopne in add push adc inc fdivs cmpsl lds enter stc ret fs sub jns pop (bad) (bad) leave adc xor (bad) jle arpl mov push and cltd ss mov xchg mov cltd mov sub mov push pop mov clc mull mov frstor pop pop xchg adc inc mov push xchg call fmuls sbb addr16 aaa outsl lock inc aam sub jmp lea cmp clc push sub rol sub mov mov arpl mov sub sahf push pop out aas pop mov mov xor push cltd out or xchg mov push lahf or mov int stc hlt lret test (bad) jne addl xlat mov cmp dec cld div mov and cwtl pop sub cmp or or das jno daa aam test out dec push stos jecxz pushf imul icebp aad test mov cli js add pop cmp add inc jno and lcall sub mov mov into repz aam loope,pt loopne mov lock jo sub or xor lret idiv lcall shll mov inc push pop mov repnz mov mov dec mov inc mov add dec gs (bad) into lahf mov jg pop jl lcall ret out fcmovnb sahf dec push fdivrl cmp imul (bad) jg loopne inc xor mov mov rcll dec adc pop add inc mov sbb call xchg push cmp mov and lcall iret aam fadds mov loop xchg icebp mov bound imul pop in test inc inc inc sbb loopne stos inc lea jge jo mov mov jne pushf sbb dec dec push sbb mov or fwait sbb push adc dec pop sti in cli lgs xchg pop xor mov mov ja (bad) xchg pop mov pop fs leave or test fidiv push aas mov jge loopne bound mov dec inc push sti popf lcall sbb call (bad) mov adc add inc rep arpl xchg cmp sbb xorb push into jno icebp stos fs push add pusha jle jno cmp fdivr mov repz out ja inc ficompl dec divl into mov sbb fwait (bad) fwait or aas cmp popf (bad) les (bad) iret imul jno lea aad or mov mov xor hlt cli pusha leave jp inc jle lds xlat mov inc adc in mov mov inc jne pop out push dec xchg jmp jg outsb stos call dec cld push out leave scas mov mov rclb lret jmp jns,pn fstl or mov pop mov inc and xchg rclb cmp movsl mov repz sti inc add aas orb or ljmp fxam (bad) cmpl push jl cld rcl mov cld mov sbb adc sahf dec iret fxch push loope testl push jl in mov loop sub and xchg ljmp addl push rcll in mov pop adc leave xchg fldenv pop dec xor (bad) faddl shrl push sbb sub nop rol inc sbb cltd mov (bad) in lods push cmp add mov pop mov mov lock lret dec dec nop jae aad js movswl ja jns and jno cmp ss leave or insb (bad) jae fcomps test inc roll cld out iret cmp out pop push inc add push cld mov movsb push push out (bad) jmp mov mov jg divb lea out bound push (bad) pushf insl dec rcll inc sbb xchg test lahf mov or gs rol pushf xor ret insl sbb push and sbb aam mov cld aaa xorb or std sbb xchg sbb jl stc pop push jns add xor mov ljmp andb lds loopne xor idiv inc xchg mul push mov push (bad) out je sbbl fnsave repnz loop cwtl icebp sbb or cs and hlt mov (bad) mov movsb dec mov mov clc add sbb hlt fcmovnbe movsb jge cmpsl mov mulb xchg cli mov int3 cmc inc es mov es mov in shll xor hlt mov push inc xor mov sub cmp pop das scas orb scas xor pop push cmp or stos repz mov pop (bad) fistl xor xor (bad) mov xchg fisubr inc mov into push cld cmp imul inc js test vsubpd out push adc insl cwtl dec in push add ficoml outsl sub out ss dec cltd jb out test int3 pop les inc xchg mov test fsts (bad) mov icebp add mov mov mov lods (bad) jge sbb sysret jl sahf daa dec pop aam sarl pusha jns ss testb (bad) lea cmp jl or sub sub cli xor mov mov mov aad sbb faddl ret adc adc arpl lcall les test lret es sub xor lds ret add divb les test xchg dec imulb sbb in mov orb mov inc lret imul dec movsl fiaddl aas lods mov jns push fidiv into lds cmp add push (bad) out pop or cmp sarb xor or leave add (bad) cmp mov aam xor cs cs lods imul hlt pop fmul dec sbb (bad) (bad) in or inc leave rol xor imul xchg cld mov divb push mov loope lea fisub (bad) dec std add jge inc ja cmc sbb xchg lahf xchg and test dec xor and push pop sarb ret cmp pop dec in lret sbb xchg cmpsl rclb mov test lea pop mov and fcompl sub inc jle aam sbb xchg loope mov mov mov imul (bad) adc sub mov sti xchg jo rol or inc call test scas dec mov pop adc outsb loop sub jae cld or sub loopne loopne leave mov xchg mov lock adc xchg adc add lods add loopne aam adc pavgb fist in aas jmp pop test das mov or mov xchg int mov push jno inc enter jle adc and mov xchg sbb ja xor insl roll cmp inc jg sti fnstcw push imul fmul xor iret negl sbb test lret rclb pop lds repz and mov or xor jno aaa mov ret ret icebp add inc xchg inc dec outsl (bad) scas jmp xchg pushf in ja mov (bad) call sbb cmp insb mov xchg repz sbbl pop rcll push cwtl push cwtl push call push insb xchg out (bad) sbb sbb or push icebp cmpsl pushf adc (bad) fildl xlat outsl sbb lods pop xchg or and (bad) scas xor std cli fadds lock jge push mov jno mov xor sbb (bad) adc enter and iret jmp push bound pusha push hlt dec (bad) cwtl mov sub cmp push (bad) or add insl pop and stc test cmpsb (bad) dec mov sub xlat adc icebp addl mov fnop ret test clc mov inc dec insb sbb int cmpsb aam cmp or (bad) enter push jbe dec mov fidiv fldl jecxz ret xor jg dec add push jo pop sarl clc (bad) xlat fcomip push mov lea xchg mov lret or dec or dec mov pop xor stos sbb jbe fisttpll inc mov in sub add popa mov or and add mov cld jmp imul jbe stos mov insb enter cmpsl mov test inc sub xchg out jg cmpb imul lods inc in sarb sbb mov xchg dec xchg sub cli lods inc test xchg cli push repz xor stos dec cld lds add imul in outsl mov pushf test test xor lock int3 test call ficomp jnp sbb test pop in icebp loopne mov faddl xchg xchg mov and out xchg jns cld je xchg mov inc neg dec jno mov pop mov cmp js cmpl adc call xchg mov push (bad) dec icebp sub pop jecxz mov test jl (bad) mov adc jno (bad) sbb mov lods inc mov mov and loopne pop or mov shl test pop mov ret mov mov jb imul sub dec sbb dec call lret sbb movsb stos cmpsb orb lods in aam fnop sbb adc mov ja fwait mov fist cwtl lahf mov (bad) (bad) fdivrl (bad) int mov stos pop mov movsb out dec xchg xchg outsb mov clc or push negb and pop fisubr adc xchg dec push dec or scas mov repz mov (bad) mov inc cmpl sub sbb bound mov adc xchg sbb sbb fs mov pop push mov pop and sbb aas cmp mov cltd les cli inc jo push adc mov sbb fidivl jl in cmp jbe mov pop xchg test inc add push cld push std test inc dec jge movsb pop int3 sub adc push movsb shrb das push call mov cwtl cli dec loop out inc out mov add mov insb out pushf xchg es aas imul mov repz es push bt lcall das mov fisttp movsl idiv les xor insl out ja das test neg out imul incb cmpsl rolb mov xor adc mov (bad) mov into xchg dec xchg outsl fidivr inc sti (bad) aaa and jmp jae mov xor or in lret gs sub mov addr16 fwait fwait cwtl dec lock or loope mov push dec test sbb gs sbb cld jecxz cli inc pop in add out push mov je inc mov lcall rclb std loope and int outsb xor test decl ret popa push shrl ja cs add into popf std pop aaa pop pop xchg adc xchg lahf sub xchg jnp lcall outsb jmp (bad) outsl mov (bad) call pop jae ret inc or push or lcall dec lcall imul inc outsl adc mov js push decb adc cli jg idiv shrb lock int3 cmp lods jo int xchg pop out xor sub mov sub lods (bad) and repz mov mov mov sarb pop cmpsl shrb je add adc mov cmc sti adc xor gs dec xchg pop push ljmp push dec inc stos dec jno mov adc test add fmuls inc sbb lea inc dec mov sbbl into or push enter sub mov inc cwtl inc lcall scas and sub in std lock movsb adc xor dec idivl pavgw imul xorl je popf ret pop mov xchg rcll adc sahf push inc mov (bad) jb add and imul js jge jl imul in inc outsb or ret push popa push xlat aaa xor in fiadd faddl mov fiadd ljmp and or pop (bad) jne pop fwait push mov jno xchg or and std mov adc jl mov jno cmp sti and sbb pop loop fdivp adc lds inc mov push sub or xorl fwait or test fsubs imul cli mov lcall cmc xchg dec mov addl lea in jae out pop call lcall xchg sbb movsb push in mov push pop pop sub int jecxz mov imul imul je mov movsb lret add call pop fcmovnb jp repz cs mov xchg add fldcw lea adc mov nop xor cmp or arpl fwait aad aaa xchg cmp mov (bad) push mov andnps xchg xor xor jno mov sbb outsl adc add xor jne inc push daa mov imul mov ret out mov lcall (bad) lret je mov cli and repz or pop scas inc sub testl scas cmp lods push out add jg xor movsl dec and out push jl adc loope (bad) lods cmp loop jb jns push push inc adc mov rcrl hlt or js xchg orl sbb adc push icebp sub or insb adc iret lock sub push idivb in lds cmp and jbe jno xchg xorb push inc sbb adc xor adc push mov iret shrb sarb xor mov jne stos inc negb jae mov pop inc repnz fbstp gs aad aad mov jmp out loopne dec out gs xchg cmp mov repnz cwtl dec fidiv (bad) icebp xchg dec in cmp jl les adc add push or pusha xchg sbb divl mov cld rorb fild mov adc call test mov aas sbb aaa lret pop mov ret popf lds ret int3 xor cmp lods xlat fdivr mov push das gs mov and cli jmp (bad) frstor cmpsb xor dec testl or fidivrl scas lds or in xchg mov mov lea add je inc xor xlat movsb cld xchg imul pop push std pop pop and add fs sub sbb dec jmp inc outsb mov ret pop add sub push ss lret jp jb fidivl inc jle sahf xchg fildl push or fcoml (bad) in rolb test (bad) repz xor loope sbb nop out roll es cmpsl push stos xchg add outsb subl jecxz jne or adc mov notb and mov cli push jns ss jl push sbb cmpsl (bad) lret mov out aad xchg mov dec cmp sub mov bound sub mov sub ret aaa popf cwtl aas dec sti xchg xchg pop lahf (bad) scas sbb pop pop aas scas rorl cmpsb test aad lods inc jmp (bad) ja and fs fstpl inc cltd imul and push arpl xchg les bound fcomip jg ror notb jns loop lahf lods lock dec inc xchg push adc pusha std fsubrs imul testl inc mov mov cmc lcall or iret pop cltd inc xor cltd cmp leave push js mov add xor loop mov jle cmp fidivl jns leave test pop jbe sub push icebp xchg pop fldenv sti sub jnp popa inc (bad) lret inc sbb xchg sub out dec aam sub out les daa outsb sub mov lods jo fs lods enter push mov ret pop cs pop int3 fcmovnu and cmpl xor mov stc lock out in mov rcrb xchg mov push in pop scas inc minps pusha aam lcall (bad) es fwait aad and push movsb push inc lods adc mov xchg sbb adc push cmp xor scas jmp fmull cmp xchg dec xchg push repnz aad sbb in clc mov enter mov jge mov dec fnstsw aas imul scas and push pop mov fdivr jl stc pop pop or xchg pop cwtl push repnz hlt mov lret xchg je push fxch xor popf and popa or xor in inc movsl mov (bad) mov insb inc ljmp nop xor frstor xchg jb push mov cltd pop push clc fisub adc lds out in lret or jl sub bound mov sbb insb fs or cwtl hlt mov hlt sarl mov mov pop mov movsl pushf jne,pt ds sub mov hlt mov (bad) cmc sub jb (bad) fwait (bad) idivl dec add pop add out (bad) test pop enter sub jbe addr16 xor scas push cltd sub test bound out push or sub jae inc jl daa ss xchg inc repz sti pusha and or and adc pushf jo and sub push cli mov add ss or fwait std xchg adc add xor push pop sahf sbb das and stos xchg pop jbe and call leave push adc push sahf mov adc or inc xor cmc and push mov fisubr fwait add mov and add aaa jl pop loopne xor inc pop lods mov inc ljmp (bad) outsl test cwtl push test fcmovnbe cmp mov and mov dec addb cwtl pop cmpl jno cmpsl inc pop cmp imul and leave adc sbb cmp lock ficompl xorl jnp mov push or mov in xchg sub test lds inc dec push mov mov rorl (bad) movsl xchg aad inc push incb in xlat dec fdiv push pop and sbb lea ret lods xchg mov or popf or add repnz pop negb out scas inc int3 insb dec pop mov xlat cmp xchg xchg or cmpsb fldenv (bad) mov jge mov pop mov push push cmpb mov in stc push in xchg movsl push hlt test rcrb mov mov cmp xor and fadd movsb mov mov dec dec sbb inc movb push sub fs jl je popf xchg xchg js pop pop nop sbb push std jecxz fdivl rorl pop fs push pusha sub test cwtl adc jne inc nopl notl cmp outsb rcrb mov add jnp nopl loopne pop xor cmp mov frstor imul sbbl pop mov enter data16 mov notl cmp mov pop mov in mov push xchg cmc lret mov mov sbb add sbb xchg (bad) sti sbb (bad) xchg lret sahf mov push mov sub jecxz push mov mov movsb xchg arpl lods in sub xor sbb (bad) shll in ret add dec fidivl and into fbld cld jle int3 cs xchg (bad) insl xchg addb mov xchg jg arpl mov mov mov sti loopne cli jmp test sub jae lods ljmp fdivl stos xor pop test and in inc pop mov (bad) popf add movsl orl lds sahf xor inc inc (bad) mov out push andl scas adc mov pop dec or mov xlat mov lahf cmp int sub cmp inc cs pop push or test jle scas fidiv jl dec mov and pop adc iret or jl and jb addr16 push ret mov push aaa popa ja push out inc mov neg or sbb cmp sbb or test mov mov outsb loop sub xor pusha es mov mov push out ss dec femms xchg repz sub jbe xor jp addb fmull push mov mov add int3 and jle test cmp jmp or push repnz shrl jnp lret es inc lods or add pop lcall sub jl sbb xchg ficompl lret sub dec sub pop and cmp lcall xchg pop dec cs movsb lods lahf jl inc sub insl push xor or push leave mov sub popa hlt sbbl sub fistl jecxz imul push jo fnstcw shrb loop test les cmpl jmp jmp ret push and movq daa dec or sahf pop mov xor test ret add ret or mov adc xchg xor jmp mov push in shll pushl sub fbld lret pushf xchg call adc pop and popfw lret cwtl adc jl adc incl or jl dec arpl std es (bad) stc cmp gs jno add adc and jae push adc xor dec pop or cli jecxz lret xor into rorb cmp dec test add or xor push test mov ret mov imul enter movsw out pop push dec shlb orl push pop sbb fstp (bad) jb les xchg push loopne or scas mov xchg (bad) jne add stos std fs insb stc fsubl (bad) dec cmp mov out xchg xchg dec (bad) cltd mov jg loopne jno adc xchg bound mov jmp xchg xchg pop ljmp pop pop xchg adc call xchg jns repnz adc clc jp sti aam add popf and loopne mov jnp mov cwtl xchg dec mov lods push and add cmp sbb dec nop and scas mov cmc jno fistpl sbb fdivl addr16 nop cs ljmp xor (bad) imull pop mov or mov add (bad) test jge,pn cmp xchg push movsl add pop mov daa (bad) cld sub dec add or pop rcrb fidivr repz cmp xchg cld les inc and dec je fwait leave enter pop mov (bad) mov xchg in and call or pop test sar sahf test xorl insl jle mov cmp clc aad lret ret (bad) (bad) push iret iret movsl xchg sbb mov lea sub mov pop stc lahf enter inc sub pop daa and inc jp xchg dec pop sbbl sub xchg out daa stc mov (bad) jne jle clc sub mov inc sahf jle scas roll sbb rorl rorl inc inc pop add sahf out fisub test popa cmp into (bad) daa in cmp adcb lods push sbb pop push mov cs cmp movsl pop clc insl mov popf mov pop inc xchg xor jmp mov daa cwtl inc popf (bad) and movsl int3 repnz insl inc adc dec scas mov imul sbb jmp out test xor push mov or mov movsl jmp xor or xlat push repz lods mov adc sbb lds or (bad) sub test cs rorl pop inc xchg xor clc pop hlt lret enter negl mov into push movsb test daa dec add (bad) push aaa jnp pop xchg jle inc ret xchg cli out adc cmpsl (bad) inc fisttpll call mov aad loope mov out insl outsl inc call sbb loop (bad) jno jl movsl cmp push or cmp xor add inc fmull inc xlat jecxz lea je hlt icebp cmpsl loope ret shl nop jg inc push std xchg jno sub shlb mov and call add loop daa stos insl xor mov push jo jae lock or sbbb cmp mov add cmp scas aaa cmp in jo pushf das out pop out cmp ret lods imul cmp mov jne loop clc and mov imul test in test (bad) clc mov std (bad) scas fwait mov pop inc ss push int inc fisubl mov push pop ss xchg stos in jmp or cmp push scas adc repnz pushf pop out inc dec jns dec or add inc shlb add test iret push add or xor push ficom and les mov outsb pop push in es add inc out scas aam inc and pop adc cwtl adc add outsb pop outsb popa nopl and push and and ret mov xchg jb push clc out dec (bad) fsubl popa leave pop les fabs pop sbb andb in push jge jbe imul fucom scas xor push out fcompl into pusha xorb sub (bad) xor aad mov movsb nop in (bad) push test ja push mov int3 test push xor sbb mov shlb mov push mov sbb jne jo mov jbe dec mov jb ret jns aaa js dec jo xorl movsl adc cmp xor jmp add imul sbb lcall mov or jmp adc test addr16 mov sub inc (bad) mov lea sbb xchg test das shrb int3 push js pop jno mov push dec enter cmp and inc jle dec jo push dec inc pop adc push sbb mov jbe je pcmpgtb (bad) in addr16 aaa xchg mov rcrb add imul scas nop iret jne mov cmp idivb stc call ret mov shl cmp mov aaa loop enter adc outsb sub fdivs or (bad) ds jno push (bad) inc lahf adc dec xor (bad) sub xlat sbb cmp dec jge lea scas cmp jns or jo mov lret inc (bad) repnz and out mov or jmp mov jbe mov inc leave in add cli sub lods jmp or adc jno mov inc push call xchg je addl sub push aas dec sub leave jl adc xchg inc mov mov pop jl jnp aam rolb (bad) icebp js loop mov in or dec push inc xlat mov je nop fisubl cld lds xchg mov mov push push add xchg inc cmp cmp repz mov stos mov sub mov frstpm(287 jp pushf shr stc mov pop cmp cmp mov mov push imul idivb add inc fisub sub adc rcrb push dec add int mov inc rcl addl loope xchg ljmp or lret ret mov push jae fsts mov adc lock fildl movb outsb scas mov popa adc pop inc lods movsb xchg xchg (bad) mov (bad) int inc mov xchg and daa pop cwtl mov fcoms sahf mov (bad) mov rcll outsl sbb push xor sub sbb jmp mov jb or cmc sub sti xor addl (bad) sbb fbstp adcl out int test (bad) pop push mov movb jmp or loopne shrl mov cltd (bad) pop mov outsl fmull sbb rep in ds mov test repnz stos aam popf (bad) mov movsb add add sbb lods sub (bad) mov cmp push ret push je xchg ret jl loopne push pushf hlt in lds and and test lods (bad) or mov scas xchg inc adc sbb nop cmpsb push bound mov arpl sub into (bad) shlb ret aaa repnz cmp and lods sub adc add jecxz fmuls pop int3 scas fs mov inc inc sub insb cmp xchg lcall pop inc or (bad) idivb push dec sbb call xor add xlat iret adc out pop (bad) jl mov push das jo pop aam mov lock jmp mov ja inc cmp pop aad jbe sbb push mov xchg movsl pop cmp or sbb fisub pushf cmp mov enter push jbe sbb out nop test fstpl fwait out icebp jbe mov stc pop ret pusha mov daa mov mov cmp inc lods or in (bad) xchg jl or mov int3 mov add xchg pusha adc jne (bad) into in xor (bad) adc mov rep pop pop add jge mov popa jmp add push fisubl fs imul sub lds mov in sub xor stos lcall popa dec pusha hlt pusha dec mov push cmp adc mov std icebp push in mov pop mov (bad) into xchg xchg dec sub sti int outsl push fistl std sub jecxz mov add call add jns (bad) in jmp and leave and push jbe ja and mov dec lods mov or and mov in pop daa jns ss jmp insl je or xor test jmp lcall lods pushf ja push jl adc ret jle cmp mov sub xchg adc lcall add mov adc xchg push adc lods outsl mov adc pop adc jmp lds sub mov lods xorl das sarb loopne je jg inc lret sub mov idivl div std sub jmp dec sti mov (bad) call iret popf inc pusha mov cs enter cmp adc or pop insl xchg pushf neg sub outsb (bad) push or lods pop test fstpt ja cmp cmp out cmp bound add push dec xor jbe das dec stos (bad) scas ret dec cwtl xor nop lcall jae and out adc hlt push or stos (bad) loopne mov xchg bnd or cltd ret add out push jae adc fcoms jb inc or fcoml rolb (bad) movsb fnsave dec in pop cli pop subl (bad) sti bound lods mov pop fadds sub aas insb push pop pop andl push fsubr push movd add cmp fbstp fs add cmp push jne (bad) push jge gs xchg popf sub outsb call adc xor xchg jno push dec or sahf mov repnz movsb sbb jae pop mov push mov pushl or lock pop push mov popf mov out pushf ja pop fsubl or mov xor ljmp xchg dec push cmc sbb das jno stos (bad) jae xor divl or adc mov and stc movsb dec int and dec jle mov mov cwtl fimul jo push adc lds fucomi jge arpl jmp pop xor jo xor mov aaa dec lcall sti out and sub insl loope inc nop mov cmp jmp loope xchg imul xorl shll (bad) dec shll jns pop enter imul in test adc into push movsb fs (bad) int3 (bad) mov (bad) fstps scas movsb jbe leave call cltd outsb stos mov or sahf push into push add mov pop push or cltd pusha dec cwtl pusha scas shl mov daa dec aas je inc adc add lea push mov sbb push insb icebp rorl push pop mov insb loope inc call das cmpsb cmp xchg aam lea inc inc fs mov fucomip fucomp jmp js cwtl mov iret sbb rcrb scas mov mov lahf sbb scas add add and stc xchg adc fildll pop dec daa test mov jns pop jb push xor lret push jns or lret lea daa or insl test xchg push dec stos mov std fdivp cmpsb mov pop sub (bad) pop inc cmp mov add (bad) pusha and add pusha add jno dec (bad) push mov inc cwtl cmp cmp inc repnz dec das dec lds lods test jno pusha ja pop ljmp fcmovnb jle lcall daa or adc stos push jne out push test jae leave daa xchg sbb loopne sub lahf nop lods xchg add pusha mov sbb cmpsb jns add mov loopne jns (bad) mov mov insl out mov repz dec push loopne pop and in andl dec sbb mov lods fmul mov xchg loop mov inc pop out mov mov cli mov or movsl sub (bad) sub sub mov xor push test call mov out cmp jbe insb and pop dec lods inc (bad) or or lea inc hlt pop jae push cmp ja roll popa je push adc std push cmp fcompl fs out lret (bad) sub sub mov add dec outsb jecxz and add daa mov scas add (bad) lods enter loop dec fwait cmpsl fisttpl dec mov leave mov int add sti in xor stos aaa add fimul sbb push and sub hlt adc jge out add call pusha mov pusha and fs mulb lret aas sub movsl out gs cmpsl mov sbb jecxz ljmp rcrb stc dec icebp mov ret lret mov cmp aas imull mov xchg fnsave pop leave jno cli arpl mov push mov jp shl or push cld adc push cmp cwtl clc mov and ss cmpsb jp fmuls dec scas pop in (bad) daa movsl pop std cmp scas sti xor call dec ljmp jl cltd xor icebp fdivrs inc sub jle and andps loope lods and adc or sbb xorl lock orb aaa sub repz add gs sahf outsb adc push mov mov add dec adc test daa sub inc add hlt outsl adc pop jecxz cmp mov cmpsb fbstp repz int3 xchg dec shll ret int sbbl pop mov les cmp pop sub xchg xor add push mov iret sub arpl pop lahf dec push aam insb lret inc ljmp cmp hlt mov push aam imul adc out mov lcall jp mov and inc dec fwait jne into repnz loop pushf pop enter mov mov push pop repnz imul jle pop mov add inc repnz movsl xchg adc inc test or jl jns lea lods std roll add adc int outsl sbb outsl (bad) mov fcmovne jnp sbb call and ret call hlt movsb mov insb movb pop lcall sub sub pusha mov movsl ret lods mov jne stos xchg mov out std mov enter push mov ljmp daa pushf sub xor bound fsubr fadds mov popf es mov jecxz add loope pop js adc (bad) aaa jb jb and dec xor loopne test mov mov test repnz test push sbb inc fcmovu cld sub sti or ss fs outsl sbb dec push inc and insl jo dec dec bound cltd rcrb cmp jno das mov and cli pop mov fs or push cs cmp mov and cmp popf in stos (bad) gs imul push xor testl lcall scas sub es xor aaa (bad) pop (bad) adc push js cmpsl jl rclb out (bad) xchg jne jno sbb push dec sub xorps push sbb xor push rorb sub insl test mov adcl jge adc cwtl (bad) (bad) or sub sbb adc (bad) aaa adc xchg ss cli mov arpl xchg mov push data16 sar ja shl or aad xchg mov pop cmp mov xchg ror scas push orl mov push pop negl pop jle lds xchg dec inc xchg and out xor (bad) imul sub inc pusha add push add clc fisubl cmp jecxz cltd sub dec mov dec xchg das pop test lea pop jmp push cmpsl mov fstl movsb scas in imul jmp dec aam mov pop and sbb gs adc xor arpl lods inc sbb shr rcll jno mov xchg sub loopne xchg mov mov or outsl in int dec es jp icebp inc lock bswap int dec pop and pxor inc movsl xor es cmp push dec (bad) fisttp sbb dec cld mov insl sahf daa sahf xlat dec testl std xchg dec lcall xor xchg aam xchg sub or push lock sahf sub pop push addr16 xchg sub pop mov cmp out gs cmc inc outsb inc mov xchg aam pushf jbe mov lea mov dec into jbe inc cmp jg pushf iret sahf sub push lahf xchg lret push (bad) sbb inc call mov or loop mov xor (bad) pop push imulb inc adc ja push mov or out sarb dec mov mov fdivr mov loop jmp rol lea cwtl mov xchg cmc test es xchg dec inc scas das jns test sub pop lds out add push or dec or inc test cmp lds pop lea scas or push dec xor call insb imul cmpsb sub mov (bad) xor stos add movsl js aas daa out mov not (bad) mov movsb arpl or stc pinsrw jbe (bad) xor adc or mov pop (bad) cs roll test ds dec lock ja pop pop fmuls (bad) outsb rep sbbl push or mov movb mov mov (bad) xor mov lcall loope push or stos rcrl jo sti push fistl imul inc jp lds pop aad inc mov packsswb and loopne in inc mov addr16 sub add and loopne pop ret push test mov int3 call jmp aad into clc cmp mov add jmp ret push jbe subb sub repz lcall cmp in dec cmp push (bad) cmc test pop mov je bound cmp fisubl sbb sbb outsb ret lods (bad) and mov add cmpsb fistp cli call mov mov push dec in fidivr (bad) iret inc inc or ljmp jmp int and xlat fisub outsb rcrl fwait gs test push mov dec (bad) cmp dec std stos xchg out mov sbb lret cmp jo mov (bad) cs jb mov mov jbe jl pop int insb push (bad) (bad) out sub lret add lods dec pop bound jecxz add pop std xor push gs push test icebp in xchg aam jl dec xor leave cmp das mov (bad) aas scas les fisubr fwait pop (bad) jne or ss cld mov daa daa and ja icebp ret in mov fcmovu cmpsl repz pop ljmp jmp jnp jg test js fucom jp outsl push stos lret imul aaa sbb inc leave inc ret gs and xchg jbe sub roll aaa jmp jnp popf les loopne mov clc mov jp lds jl mov cmp or jecxz,pn jne aas lea pop stos jge push js inc cmp lret es push jmp aas clc data16 repz jnp mov loope imul int sbb fmull test push ret dec or push jge xlat sbb mov sub push jecxz add jmp jo,pt and std and mov sbb xor or sarb test mov test adc add sbb sarl rorl push inc sahf add (bad) cmpsb cmp pop mov jnp add fbstp mov add lock mov stos push cmpsl or negl add addr16 pop pop sbb pop movsl test in call xchg mov mov inc push fnstcw aas scas push (bad) xchg arpl (bad) ljmp gs sbb sub sub mov call dec repz inc (bad) aaa in jne rcl dec fnstcw inc xchg cwtl pop and (bad) mov insl aam fisttpl lcall fnstsw lods xor scas pop xchg xchg retw sbb push iret (bad) cmc popa loope std clc pushf jns mov mov (bad) and imul mov ret or xchg rolb xlat push or xor cmp mov sti mov mov ret into dec mov in fcoms imul hlt movsl pop test sbb mov (bad) aaa mov mov mov shlb leave cmp lret test sbb inc adc dec rcrb sbb jnp xchg inc cmp sub test jl cltd xor xchg test pushf ljmp pop fiadd loopne cs lea adc cmpsl mov stos jo aad (bad) scas lcall mov stos ret cmpsb outsl xor push xorl shlb adc lcall jl xchg mov test xor bound pop fsts lret sub xchg or hlt aas and into ret push outsl mov jg imul js dec rcll out sub les rcll (bad) movsl push adc lea mov out cli sbb movsb lods aam xor xchg rol dec xchg fcoms fsubl add pop xorb push add xor hlt shrl mov js lcall imul fdivr (bad) repnz (bad) (bad) dec mov fistpl shll out jmp mov rcrb adc add cmp inc test sbb dec mov or aas shl and jecxz test aas dec push int test lcall add xchg in inc jne les mov push cmp push shr push (bad) repz out ret pop jl fcoml insl add insl lret sbb popf pop enter inc mov shrl cmpsl mov mov adc arpl popf repz test inc sub xor icebp faddl insb mov inc rorl or lret popl nop jae jno bnd rol xchg mov sbb aaa jge jo addl mov out loope ret mov std es lahf adc lret dec mov imul xchg mov mov mov push and xor cltd cmp jecxz les cmc jno divps add dec inc mov call dec xchg arpl inc cwtl push dec lret add xchg (bad) xchg dec jmp andb mov jge out xor bound cmpsl out aas fstpl les lea nop inc push xchg subl aam in in dec adc aaa call xchg outsb mov pop sub andb test sti xor (bad) (bad) in ficompl mov test clc into jbe ss inc test pop ror cmc mov lret jns sbb imul lret sub imull test mov std adc pushf jle mov sub pop cmp push pop lods sbb cmp scas stc out jae enter aas and cmp jle push scas pop push cmp loope and push jne pop in stos movsb jne inc lock jo xor lods and sbb jbe jmp loopne,pn pop call dec adc loop ret test mov lahf fild or jns dec xchg je jle jecxz ljmp ficoml mov js imul inc xchg cli jmp sub decl adc aam insl sbb mov addr16 cmp push aas cmp (bad) fiadd jle sbb jge jp cld mov add stos inc sub cmp push xchg popa cmp and push jb fcmovb cmp jo out and out int3 fcompl adc aad insb scas scas frstor das mov add mov rcll and mov fisubr sbb fstps aaa jge cmp inc lods cmp enter mov mov nop in mov (bad) into ds stos inc pop (bad) insl movsl adc pop xchg fildll cs scas cmp add test test push sub out bound fimull sbb mov mov pop cmp jb lahf push inc push mov sbb dec clc ss test jp (bad) (bad) (bad) mov or pop jns popl in fcomps pushf and movsb push imul gs or fs call sbb imul jae mov and fdivr adcl lock rol push inc fwait add cmp loope add in jb mov lds fwait xchg sub je jo or aad jb mov sbb sbbl loop into xchg test jle inc pop and dec (bad) repz jbe nop inc les jnp (bad) gs js mov fs outsb push icebp sub out ficomp out clc pop ret sbb (bad) roll dec mov push ss (bad) out or mov mov leave leave push test mov addr16 or insb insb (bad) outsl fisubrl mov pop jle imul xchg cmp in (bad) adc mov add mov in movsl popf mov into push inc mov imul push bound aad sbb mov arpl rcrl aas dec mov dec fldl jno loopne test inc jnp mov andb push mov add testl xor lea cmp cli mov cmc mov dec (bad) popf inc bnd xchg jp jo cld ss pop xor testb xchg insb mov movsl jnp pusha cmp dec jge xor hlt sbb and fsubrl inc shlb rcrl cmp inc lret lret mov jo pop xchg xor stos xor adc and dec and xor sbbl cmpsb xchg push mov sarl adcl stos cli test iret fnsave adc jg (bad) fidivr movsb mov dec add addr16 es into scas inc pushl aas les and push stos jge add ljmp mov cltd jle jecxz add stos test inc imul (bad) mov rclb add mov push mov (bad) out mov xchg nopl repz int3 sarb insb sub orb inc mov xorb (bad) sbb in mov aas daa mov inc or jbe ficomp push in dec aad or into ljmp mov mov fucomi pop cwtl les in adc and sub jnp sarb int3 shl and push popf sub sbb mov jl or jbe (bad) mov push pushf inc xor cli (bad) mov enter aas cmp sbb rcrl (bad) hlt int jae adc xor fisttp repnz lock xor xchg imul int xor frstor bound lock nop stc sbb ja xorl cs cmp jne data16 loop jle int3 cld add movsb loop push test or cmpl and inc cli shl xor in test std call dec repnz xor aas add inc xchg cmp cmp stc sbb in mov mov cmp int aam xor test movsb cmovg dec push ljmp stos imul sbb repnz ljmp loope loope sub jge pop jb mov ffree out outsl jp push or aad (bad) aaa inc adc mov je repz outsb and aas js leave xchg out mov jno inc out sbb jae,pt ds dec mov lods pushf rcr cwtl data16 das lcall hlt (bad) cmp pushl add jno outsl dec pop cmpsl pop (bad) ficompl popf xchg pop adc scas (bad) jno test into lret adc xchg loope lret mov sbb push dec push cmpsl shlb add push add (bad) jne jb lods jo jno out out push in aad aas insl (bad) mov or xchg pop icebp xchg mov (bad) es mov (bad) fucomi push ds cli push sub int fdivl and xlat pushf in loop into adc fstps jecxz dec sar (bad) mov gs or insl cli test aad ret jo mov mov xchg icebp xor clc and movsb cmc loopne push inc repz dec jne push sub into mov jae xchg arpl pop xchg in roll adc mov fnstenv int and mov pop lret pusha sub inc insb adc stc (bad) jno out les mov adc fnop push imul dec dec int3 or pop cmpsl into push ljmp xchg inc ss cltd or or in mov fs push and adc (bad) not icebp adc enter cmpb xchg or adcb iret jg sahf (bad) enter sub inc out mov push (bad) icebp ss (bad) mov std cmc int3 out ret lds push sbb sub clc push fsts loopne loop pop rol and xchg sbb out aam out je cld test lods stos cld fucomp imul cmpsl (bad) jl pop (bad) loope insb stc (bad) jne arpl cli cmp xchg sbb adc xchg xor mov sahf (bad) (bad) dec push inc inc sub or leave ljmp outsl (bad) xor jo or xor xor add (bad) out and jg jmp ja or pop aam add cs in pop not and lcall mov ds insb pop add adc jp fstpt call push add xchg push sub lds xchg mov mov call mov mov mov ret into leave lret mov pop fsts jmp shrb mov lea mov inc cmp mov (bad) ljmp shlb jae push pop cwtl repz movsl pop lea mov loope pop add push xchg inc pop pop pop inc pushf enter dec or arpl lcall pop sub add dec add sahf or inc xor mov inc cli ljmp jle pop sbb enter jns sub loopne pop add mov dec pop aaa shrb fistl inc push or sbb imul lods je pop xor sbb push add je pop and jmp jecxz stos mov push pop sub int3 xchg je inc ret sbb sbbl add xchg mov add jns into mov clc in or leave or inc fwait adc mov pop jge and push dec cmp mov sub or mov dec mov (bad) lcall sbb xchg xchg sbb sub add aad paddd in call stos scas mov mov xchg pop cmp cwtl imul inc in addr16 sbb xlat dec fisub adc mov inc dec in cld movsl push or test pop jp js jbe push imul adc adc inc lods test out icebp mov lret jle jecxz movsl lods fild in jle adc cld lret jl ficompl mov outsl and dec icebp mov or pop dec aam repnz cli add mov shrl push in mov or lret cwtl add in sti mov jno inc repnz cmpsb mov and loope jae fisubrl clc cmp jg shrb xchg cli cmp lcall test push mov ja cmpsb add in mov dec pop iret sub jae sub test adc pop insl (bad) stc pop push dec data16 jno rsqrtps lcall cmpsl (bad) jbe stos imul jo shl and aas mov cmpl push and push pop enter scas or pop ds test sbb xchg dec xchg jl pop push xor sub in faddp xlat cmpsb mov push cli leave pop out fldenv repz popf std dec sbb (bad) sahf in ds clc sbb enter clc sarl cmpsl dec mov mov push sti divl pop test cmp inc iret jp xchg and dec dec adc cmp (bad) or ror sub mov fsubrs in push (bad) cmp inc cmp jno push (bad) xchg ret or cmp js test or jecxz mov stc lret xor dec insb or in bound rorl xor sub rcll push jae adc jo push test arpl aas in mov adc push test dec push stos (bad) pop adc or pop jne dec (bad) repnz fwait dec and xor mov and jp cwtl and js js aad mov add add outsl jns sbb stos xchg cmp and bound mov (bad) cld jge cmp dec test jge jg es test inc or mov (bad) xor pusha cmp scas ja lldt bound fnop jno mov sbb sub inc jo cmp sub mov in mov push xchg xchg inc call mov movsl bound insl mov mov pop push mov aad lahf pop mov pop in pop xor inc cmp inc rorl (bad) jb in pop xor sbb sub lcall jne pop push aaa inc jns inc icebp int3 movsb xchg (bad) jo adc mov add add push pop mov jecxz fwait mov jle jg lods ret mov push mov and popa fidivl mov sbb xchg or seta mov push loopne (bad) int3 sbb (bad) pop inc mov inc add (bad) adc mov cld insb into inc xlat xlat repnz xor jo fstpl adc push fildll shll sub rcr lcall add orl fcmovnb (bad) jbe sub ret and rcrb xchg cmp scas mov sbb xlat mov pop cmp (bad) lret imul xor add imul shrl ret and jg xor xchg dec adc push adc lcall pop xor aad (bad) cmpsb add (bad) jb add cmpb sub xchg (bad) mov int dec xor push jae pop test push xor jno push inc fs aas xchg mov pop pusha xchg xor aam push jae pop mov mov divb pop mov (bad) aam mov xorb inc out mov mov cmpsl sti jb inc movsl imul aam sbb sub pop sti push inc pop cld xchg xor les cld clc xchg xor shll ljmp in in lret and push mov or or outsl scas cmp (bad) mov jmp daa and cld insb mov mov fcomp je movsl pop loope sbb xchg xchg cli lcall and cmpsl pusha xor fidiv dec jb dec ficompl fdivrs jo divb jb cs push xchg xchg or push sbb sarb loope mov push jmp loopne (bad) dec aaa cmpsl push arpl cmp icebp push rcll jp xchg negl xchg pop mov cld mov dec jge cltd pop test pop popa shll pop imul fimul sbb hlt pop popa jmp jno daa pop lcall imul data16 mov and push mov xor push in adc sbb cli jne clc sub aad jl dec (bad) xchg popf mov mov inc adc jecxz push dec loop sti jns mov dec sub dec or cmp lahf into nop leave sahf jg adc sbb mov jo (bad) scas pushf adc stos enter mov jne mov popf test (bad) pop rcr nop repz adc leave sbb push adc js xchg mov sub sub push imul cld lods fistp cmpsl dec test shll scas or sub xor and sti sbb movl add movsl rorl loopne sbb faddl insb jne insl dec dec movsl fidivr mov insb mulb jle xchg cmpsl inc in xlat lods adc lds pop sbb sbb sbb pop sub fldenv outsb jmp push or stos push lock jp notl and cmpsb cmpsl int or and fstps and push repnz jp push pop sbb jae mov add cmpsl cmp inc sbb xchg sbb pop in inc popa pusha add xor aaa add mov mov push jns sub in into lea push dec sub lods inc jle pop popa out cmp (bad) insb xor pop dec push shrl scas lods pusha loope stos test movl gs mov sahf test push adc fwait xor out lock insl outsb cmp mov sub aas sbb ds pusha loope and cmp icebp inc in pop inc in or std loop,pn movsb lret (bad) ror in and stc (bad) in jp xchg insb push xor je dec fwait inc call xchg sarb push inc aaa dec lret out inc repz push and mov loopne ret scas sub pop test sub pop repz xchg xor mov fbstp popf (bad) enter icebp mov add jge and mov pusha gs push jno or decb mov ret push mov inc arpl test push dec push jae jnp or push aaa adc out daa push add cld mov out clc test inc fidiv xor mov cli push scas pop pop test es dec xchg cmp cmp aas and repnz jbe jl int3 in js mov mov mov in (bad) (bad) jb xor jo adc (bad) cmp lea or add insb sahf inc ret lods push (bad) pop out pop push rcrl into test jg cmp inc shll frstor in and xor xchg (bad) leave adc mov inc xor jae fcomp mov mov mov mov jne pop mov push adc mov clc pop das negl push (bad) jne adc adc fdivp adcl xchg (bad) repnz sbb fsub outsl xchg adc rolb and ficomp insb sbb cmp push stc rclb add xchg mov cmp push push push add lea (bad) mov adc idivb add fstl les adc push cltd add sbb pusha mov cmp jns ret sub dec adc cmp je test gs cmp loope arpl push adc sub or mov jae fistpll (bad) mov dec jb cld inc sti push mov roll cmp sbb adc mov dec adc enter dec mov adc add daa jmp ljmp outsl xlat jnp lods aaa (bad) xor pop imul inc or fisub xlat lcall mov dec mov and sbb xchg or test and pop xor or cmp ss in movsl dec push jno dec pop (bad) dec pop sbb (bad) les faddp inc loopne mov xchg lea insb inc sbb and push dec lock out inc into popa test lds cs mov pop outsl and je xchg jle int pop nop adcb test add loope outsb mov mov sbb sbb push je js pop sub xchg sti jmp dec jns xchg bound cmp pop int3 inc push add gs pop jb hlt push add fiadd lock mov or dec ljmp jne insl push aad in cwtl mov or jns sbb in or and dec ds leave rcr and and xor push pop or mov arpl jb mov push xlat popa les lds jbe jge push xchg mov jno or fcom outsb sbbl or arpl arpl xor cwtl dec dec mov push mov push ja sbb mov or push xor jns mov fcmovnb add movsb mov lret out dec scas push ljmp sub mov out xchg aad call sub push fmul and jmp xchg mov cmp push jmp je mov inc (bad) loope (bad) call fisubl idivl mov gs mov push jmp test xchg addl fisubrl mov push mov mov daa fnop cmc fwait cli sbb push jg ljmp cwtl fadds push jne jl jo cltd pop aad pop outsb sbb insl or push xor push mov (bad) fcompl arpl mov xor xchg cmp xor xor jle call fwait test mov (bad) or push adc jb fistp jg sub imull dec mov call mov sub lods sub inc insb mov hlt push data16 scas inc fildl pop jae popa fdivrl lock stc pop sbb push dec sti pop stos mov incb (bad) push dec inc nop jl sahf je add mov xchg lods push or repz xor sahf rcr fisubrl push sbb push inc push cmc mov pop jge nop cmp int3 cmp jmp pop cmp nop sub cs push cwtl mov repnz movl lds push dec aam cmp arpl push jbe jge test mov push cs cli push je push dec arpl mov cmpb popf xchg xchg (bad) sahf test inc pop pop lods pop xchg dec sbb fldcw lahf in mov push or (bad) jae lock cmp outsb out jmp mov (bad) out pop call push int3 inc mov push loope das lahf pusha or push (bad) scas sbb cli pop (bad) pop (bad) xchg out mov lret cld sub mov xchg mov lea mov stos mov pop and (bad) (bad) or push pop inc enter leave fstps and (bad) adc pop and out sahf dec xor pusha call rcl call dec pusha adc add cwtl scas jno and xor adc rclb or mov sahf sbb movsb mov xchg sbb rcrb and and aam or lods into out xchg push dec sbbl dec mov out (bad) jb adc cmpsb ret dec push dec jp dec bound dec adc aam or xor iret and lcall shlb cmp sti inc int3 jnp inc out sbb fisubl mov mov dec jl xor sub int call clc lcall inc mov loopne mov mov loope jae pop cmp (bad) int3 mov push test adc jmp jp sbb inc arpl test xchg clc or fnstsw mov mov fwait jecxz arpl cwtl push xchg cld gs cmpsb sbb lods cmovs mov or int rcll fs lret adc jp add scas es ja cmp aad pushf push leave scas cmp sbb adc je sbb int xchg jp adc mov outsl mov sbb jg or mov fildl popf adc jns dec sbb mov mov add fdivs lahf out or dec adc push add mov lds pusha jno push or aam push inc add (bad) pop mov add or dec sbb sbbl mov fidivl iret insl mov mov xchg scas inc pmulhuw sub out xor pop xor jmp mov and sbb mov mov cmp std add (bad) push int stos and pop cltd add mov adc out movsl pushl repnz mov loop jo or insb pop rorb sub mov lret mov pop mov cld pushf mov sub sub lods jns (bad) dec scas test out pop adc divl adc dec xchg pop xor mov (bad) pop or adc mov and les cmp mov cmc jge mov push ret cmpsb or insb clc jecxz adc cltd dec xor mov mov xchg fcmovnu inc jne stos or repz cmpsb or (bad) lds vpmacssdqh sub (bad) xchg lahf sub cltd fadds xor push xchg inc int cmpsl mov dec ljmp or in mov lgs dec out scas xchg mov xor sub add jge mov loop into sub insb aad lock (bad) imul popa out loop add pusha mov sub bound push (bad) xlat mov mov and outsb fmuls fbstp scas pop icebp mov and out mov mov mov mov jbe push dec push mov loop pop or and gs or and fildl outsb add mov arpl sbb mov std into jnp mov es jbe clc les push repz jns loopne ret and mov sbb sub mov dec mov andl adc gs loop xchg iret or add mov pop jno xchg and loopne add mov jmp insb (bad) jmp inc mov in out inc sbb lds icebp int mov (bad) imul mull mov jbe push aaa jae in mov mov push mov jg sub clc inc pop push xor fwait lcall insb jl call outsl lcall test cmp push xchg data16 lods divl imul mov test js jmp outsb xlat inc inc rclb dec repz lods test leave scas pop mov push daa cwtl mov daa mov call gs dec sub or sub xor in sbb insl push out sbb mov inc mov dec mov jp push ds jo push (bad) push (bad) imul jp and inc push andl out xchg dec aas bnd int3 inc popa sbb push sub iret movb ret mov sbb mov test dec xchg push aas in or mov pop adc loope jg fisttpll sub in adc lock cld xlat mov jp or imul loopne cli test mov inc lock push fistpll jb xchg iret je mov xor aas xchg js (bad) (bad) pushf sub in ds pop rcrb ret daa jo sbb jmp enter xchg sub xchg and stos add iret arpl xor and or repz push ja addr16 xchg mov stc jnp mov add imul outsl dec insl xchg clc mov aam aaa sarl div aad jle push pop push ja fist mov sub fnstcw sti stos call sub popa into sbb mov cmp test push mov jmp add xor cmp pop (bad) out mov test adc mov push cs daa dec dec pop loope jmp mov out mov xchg dec add and mov fmull pop xchg pop mov test xchg adc or mov pop test xor adc cld or mov rcrb sbb or xchg cmp data16 cli mov loopne mov pop out xchg push (bad) mov ret mull xchg idivb (bad) loope outsl mov stos out scas sub loopne cmc leave jae and pop jns fadd pop popw repnz stos mov pop stc dec repnz repz test rorb sbb lods repnz dec repz fimull cmp jne or mov mov lret stos pop adc jl add lcall (bad) nop mov int fwait (bad) jbe mov jp push mov xchg leave lods mov insb adc push ja (bad) pop test leave push sub add dec das cmp push cmp pop pusha js stc cmp fstpt clc cmp dec lods fmul std (bad) mov cmpsl shr mov and loop cmp (bad) sbb xchg add insb push ljmp movl icebp lret mov out popf jbe adc shlb mov sahf dec out cld mov aam pop addr16 sub xor or repnz cmp mov adc cmp dec dec mov rcl push jge (bad) lock xlat add xor and es mov imul dec out jl or bound push pop ds fnop in sahf popa insb repnz mov xchg int3 dec ss push dec loope ss cmp (bad) (bad) inc jns daa fidiv pop (bad) push stc cltd pop jl jae push pop flds and mov je pop lods out pushf imul mov sub dec cmp or (bad) or sbb hlt cmp adc imul repnz loop and jle dec fist into adc movsb xor mov ret sbb pop lock rorl ss incb pop js stc or add popf or rolb cld test popa cmp push inc arpl and outsl shr outsl iret and out mov cwtl sbb pop repnz movsb sub clc mov xchg xchg cli push push negl loopne repnz jg or mov push ja sub mov mov jmp ds inc xchg cmp in or sti shlb jno ja sbb dec fidivl add adc stc pop test gs shrb scas fsub mov push or xor movsl or jmp repz sbb iret cli xchg lcall pop jno fwait or mov mov stos addr16 mov xchg xor mov xor loopne push in sti movd add test or add test nop dec dec out and xor xchg jp jl dec push pop and and jns clc pop fchs movsl rclb mov adc push lret lods lcall out push jl dec pusha xchg cli lock data16 in adc or xchg push fisttp pop push xlat lahf out adc mov jno pop test mov lods dec mov sbb xchg lret (bad) (bad) pop sub hlt dec loop push mov sub adc pop adc mov in adc xor movsl imul push lea push stos xorl pushf popf adc dec je push mov and (bad) mov pop leave xchg ds pushf fmul or jle test movsb dec mov in add notb mov (bad) lock jmp sub imull mov fcoml push xchg dec cmp xchg and mov leave ret mov add cs and or repnz icebp out mov aaa in mov sbbb imul cmp and les mov div xchg dec add push adc push push jp lods or cli outsb aad aas mov or xchg aad icebp cli shr pushf lret test xor lcall rcl inc mov push jecxz jmp push lahf mov sub cmp cltd clc (bad) (bad) mov (bad) fmull inc mov and popl lds add xchg xchg xlat mov (bad) in scas jae push xchg xchg sarl adc into out jbe sbb rcrb inc inc mov push xchg movsb out in stc ss pop and mov xor in frstor jmp push xor movsl dec mov sbb adc lods jnp rorb push xor loop mov or dec bound add repz dec dec mov xor adc inc mulb mov inc xchg (bad) inc bound out insl idiv mov movl cltd sbb pop cld imul stos inc jmp adc xchg (bad) dec xchg ret mov cltd icebp out frstor movsb mov popf dec push ds mov sarl or into push sbbl dec shl clc mov sbbl adc xchg lea xor jae xchg xlat je jmp sub sbb data16 in or or cwtl mov cmpsl ds inc daa xor dec mov xor adc enter pop (bad) dec push cld mov pop pop push jmp adc cld and mov leave adc add mov popa push xchg cld xor loope stos roll sbb add (bad) std daa sbb xchg out das lcall mov jbe sub sbbb repz push (bad) (bad) idiv movsl mov pop scas jne lds in mov dec mov ret adc dec xchg mov pop orw jbe sub aam pop jo sbb imul arpl fadd cmp jns pop popf jge add or pop (bad) xchg int3 aad imul mov jo leave test jecxz,pt fisubl pushf lods mov jb or loop out std dec adc (bad) jbe sarb mov and dec dec adc and mov push and pushf and and jmp addl aad push xor scas push mov in outsl orl cmc andl dec stos in mov je in mov cwtl xchg pusha in addr16 lcall xchg pop cmp jns fs imull cmp jae dec xchg mov lea inc pushf test nop int3 popfw sub inc push call jg imul sub sbb arpl xor xchg (bad) xor lods insl xchg lods mov xchg or push lret jle lods jb add (bad) movsb lock ret ret jge popf mov inc push and aam out bnd dec or sbb popa dec dec daa mov popa inc sti fcmovnu and int3 jp popf mov inc dec cmp mull daa jae cmp shr iret sbb pop movsl mov adc (bad) xor in xor adc add lret les jne jne jge aaa mov ja int cwtl lahf andl das insl (bad) ja add stos (bad) leave js ja inc inc mov and shr inc cwtl int3 and mov stos adc mov and jbe and mov mov lea cwtl mov dec out lock lret mov inc ljmp dec adc mov (bad) jae jno mov push pop dec stos sbb jns jmp out bswap gs adc loop sbb push pop adc dec inc pop cmp jle xor xchg cmpsl les dec push (bad) (bad) aad xlat add xor sbb (bad) out das sub sbb in mov es insl and push pop ljmp mov mov dec stos (bad) call cmpsl mov and in rcl and pop xchg lret inc ljmp les sub aas jp sti mov sarb outsb dec cmp int leave pop mov push xor push mov mov call fcmovbe jo rol cmc or enter mov fcomps lods sti test jp icebp cmc xor iret xor in int push pop (bad) jnp inc (bad) divl ss mov pop xchg add daa inc lds push stc iret int3 je fwait pop int (bad) pop xor fwait mov fisttp iret jo (bad) imul push push flds dec pusha popf nop push push cmp mov fwait call shr sbb fisttpll cmpsb out inc jmp jge jp (bad) ror cmc fistl jle pop mov repz dec out and loopne cmp add cmp loop shlb mov mov fnstenv notl add mov push out xor lahf in test out sub int3 cmpsl dec dec cmp ret xor data16 adc ljmp push or cmp out js jns std ror imul loopne ret inc jge,pn and xchg inc push jae (bad) pop cmp and jl cmc fistl xchg or ds dec jb das mov jg cwtl xor add aas xor add and (bad) iret insl or in mov sbb pop (bad) sbb sti xchg mov jno cmp push mov mov rclb mov daa jecxz lret mov pop out js leave fst or stc std jb addr16 loope adc jl xchg insl cmpsl adc in jns test pop jne sub fs adc xchg sub push out test cmp rcrl jns jge aaa clc fcmovb dec xlat mov (bad) sbb (bad) fldcw and roll outsl test and (bad) cmp sti dec mov xor pop out push inc cmpsb xchg stc pusha out inc mov popa in push rolb lods dec inc out and fnstsw lret out cltd jo or out inc pushf cmp pop (bad) mov test pop fs add mov popa push pop xor push mov pop sub xor lcall jo jge cmp (bad) jge add stc inc stos sbbl push (bad) dec inc jg xchg mov stos (bad) ss imul xchg aad int sub loope sub movsl adcl scas test mov iret push mov jmp mov shrb cmc xchg or mov in jae fstl pop mov dec jae mov sti repnz cmp mov (bad) mov cltd popa es leave jle jmp fdivrl loopne,pn mov jle cwtl cmp and cld inc push or jmp test adc cmc add push jb imul cld addr16 in (bad) rcrl push lock pop repnz (bad) lret xor sub pop adc outsb add xorl inc mov jns aam sbb mov pop fidivrl xchg clc lret xchg push es mov out jns xchg movsl xlat sbb and lret popf xor fistl and jb cmp xchg rcl pusha outsb (bad) push in xchg and inc adc mov int3 out push stos shr push pop mov or addl insw dec push lret out add push xchg test ja ja aad or xor (bad) mov jmp movups stos jbe aam (bad) cltd inc mov xchg fldenv and and xchg insb shrl inc sub pop cmc push add in aas ljmp test mov jge and ds dec in adc lret iret insl div pop arpl fidivl dec rorl fadds xchg ds mov outsl sub push arpl repz imul mov ja jle xchg pushf mov push faddp sub inc sub jns pop add mov xor fsubl mov and cmpsb push in mov dec lahf loopne rcrl mov xchg scas dec sbbb sahf pop cmp addl test mov xchg movlps test sbb shll arpl or lds jle mov sti in addr16 sahf (bad) movsl pop std ja mov xchg push push sbb int3 scas mov je cld shr loopnew lret cmpsb in stc xchg and inc mov push (bad) fist sbbl xchg adc fyl2xp1 imul insl mov int inc cwtl nop sbb xor mov (bad) rcll xor sub mov test sbb cld jecxz xor xor cmp push loopne push pop arpl loope dec or mov adc push test gs cs adc (bad) imul and push mov fcoms push (bad) lods xor pop nop mov pop xchg dec jp push adc mov ret inc movsb add mov xchg insb stos (bad) mov cvtpi2ps dec push sbb add lcall push xor aaa cld jecxz popf and js iret mov in into cltd in lds imul test mov (bad) fdivrs fbld jle mov mov ret mov dec and rolb clc push fsubrp or xchg mov cmp dec data16 sbb and mov aaa (bad) cmp (bad) push adc jbe test push cmc bound xchg imul xor insl gs xchg mov shll movsb pushf int adc or fbld les push ret mov dec int rolb or xor ljmp and mov popa push pop jle jp ret mov mov lcall adc lret mov pop jns sti cmc lods aaa fnsave fist ljmp lahf jg push add push fimul xor add mov rcr fmuls mov rolb jecxz loopne mulb movsb cmpsl icebp inc fcoml cmp call cmp pop ljmp mov sbb mov xchg inc in fwait cmp in dec sub xchg lret fldl add mov pop and out lret adc jle fdiv ss and dec dec scas push or xor push mov inc mov sub mov repz jmp and mov enter add mov pop lds shrl xor js aaa jne lds (bad) sbb dec scas pop cmp push cmp pop fldenv cmpsl add jge je loope xchg jno imul pushf sbb outsb in daa movsb movsl xchg inc loope mov lss add cltd mov inc js fnstenv xchg jns out dec sbb pop lock xchg dec dec das andb inc repz cmp lods stc inc andl inc inc mov mov mov out xor loop mov jg cmp push (bad) xlat mov aas sbb xchg sarl jns out cmpsb out inc xlat jne ss adc pop push xlat adc cmp push movsb ret rorb arpl jmp rolb aad nop cwtl les je push dec mov push jo xor and sub lea jge lahf jecxz lcall mov adc cld cmpsl xor mov test shlb mov in or into adc jl jl sub test lds lret fs shr sbbl add sahf ficoml flds jae lds and dec loope gs jo jecxz push aaa add pusha and xchg popf cltd test and imul and addr16 aam push mov mov ljmp xor (bad) pop adc fisttpl mov mov rcrl (bad) loop inc adc push mov pusha add mov mov jmp cmp or shlb repnz xchg or push sbb std mov iret test lea das movsb inc bound inc (bad) out movsl or adc stc pop lods movsb stos out xor mov (bad) out pop and push outsl fildl xor pop stc pushw mov jns mov cmc mov jo pop add rclb roll stc fistpll (bad) outsb mov (bad) xchg push mov sbb test (bad) imul pop in pop (bad) dec or ss leave repnz insl test daa jl repz pusha mov inc cmp lds stos push pop fsts cmp xor pop xchg bound dec shl or add cltd jmp sub mov (bad) scas xor fdivl pop adc sub ds sti or jae sub and lods iret mov test aad cmp in inc pop (bad) dec lock dec adc dec lahf addr16 pop mov push (bad) aam xorl and rorb cmp loopne add rcr push imul and add jle fistl cmp ljmp mov mov lds xchg mov pusha pop fstpt sbb (bad) jecxz mov add (bad) push into xabort sub aad and in rcll outsl jno (bad) test pop popa int3 add pop push imul or lcall popf mov mov in fcmovbe dec sbb loop sbb fwait pop pop mov addb mov cmp fs adc rcrb lcall cli inc paddsb push nop test pop mov orb mov lods xchg mov movsl aas jo jb jae pusha cs cmpl push add dec (bad) int sub push imul lods xchg daa cmp jle ja testb pushf pop xor repnz pop sti cwtl adc loop add or out test adc pop out mov push sbbb mov cmp sbb pop aaa cli xchg dec fcmovnbe pop push sub std mov aaa cmc loop scas lock sub sbb test hlt sbb sub mov mov outsb xchg lds stos pop and outsl sbb push jge or and dec and popa cmp lea push fld1 clc inc sub xor jg add orb lahf sbb xor add fsubrs inc js pop sbb sbb adc mov jne hlt sbb ss dec mov pop insb sub jmp imul loopne (bad) mov lea das mov inc lea or cmc ljmp call pop pushf jmp cmp push rcrl fcoms cltd mov xchg mov mov lock jae or cli popa push (bad) mov mov cs or mov sub push call pop dec mov dec movsb sbb popf cs cmp out dec scas fdiv push add mov xchg xchg sub xor repnz xchg and stc sub xor aas int3 mov mov dec adc testb jo inc dec cmp cld mov mov outsl mov (bad) rorb pop fnstenv movsl mov mov addl cmp sub xchg adc mov jne arpl xor and sub mov fcomps dec stc add dec push jae jg jbe mov jmp pop movsl push push popa pop dec ret xchg in stos xchg mov xor shrb loop adc add (bad) dec inc sti pop push push std mov std add test cmp pop hlt or sbb push dec ss inc fildll aam pop mov out stos sub jns jnp dec add insb xor (bad) pop mov imul mov jne xor mov out (bad) adc jnp sbb jnp fnstenv sbb insl dec xor fwait cltd sahf cld clc (bad) out xor stos mov rorl sbb dec mov cmp in loope adc xchg int3 pop and fstps or sti push cltd dec xchg aad pop shl sub out jecxz mov aaa out push xor xorl in cmp pop lods lcall pop shlb jns xor dec push out pushf fldcw incl test jbe dec das std scas fistl sub cmp ret fnstenv mov leave push shlb decl add cmp pop pop scas out (bad) bound les mov add cmp dec out out outsl out sbb test pushf out subl dec (bad) dec jecxz in ss enter pop mov lcall push push lods ret movsl in cld call jp rolb cmp out insb sub and repz subl out or cmp arpl das loop adc ss daa fcomi enter hlt dec sbb out jl movsl cltd mov jno dec movsb push ret insb push lock cmp sub das and inc inc in fdivs aad lahf fsub call (bad) gs ss mov popf mov sub ds out popf or and daa add or fimul out jg sub mov inc jo loop push push shrl sbb sub lahf js call mov imul rorl mov and xchg imul sqrtps add test in xchg pushf mov mov popa fidivl jmp out fisubrl push dec (bad) loopne pushf cmp cmp loopne flds jmp iret adc jb adc dec faddl repnz ret mov push xlat sbb xor sub pop cmpsl pusha test jnp mov mov cmpsl dec and jle fsubrl mov mov push sub sbb mov daa sbb adc outsl xchg push sub xchg out xor and cmp mov mov dec and nop sbb ljmp xor scas in or dec cmc push push stos sbb out test and inc push dec mov cmpsl add lret (bad) or les ret xor cmp or or stos pop js inc and loopne iret mov sub xchg (bad) jnp out xchg sub ret jo cmp and ljmp push loopne call fisttpl loopne pop clc inc gs (bad) aam popf ret jnp shrl pop cwtl xchg pop div mov in mov sub dec adc push and jl loope add lods aad aaa xchg scas push test mov in enter ja rol (bad) jmp sub and enter xchg (bad) or dec test mov pop push ds (bad) lret fsubl push dec push (bad) jmp test mov cld subl lods dec cmp jo sbb jb cmpb lods daa xchg xchg jmp xor xor js add mov (bad) std fstpl cmp sbb scas mov xor addr16 mov mov sarb jecxz or push test xor out jle push jecxz (bad) aam fsubp inc stc mov rcll or xor jnp test xchg nop es push jl cld sub inc jns mov adc les xchg push or xor mov test add adc clc (bad) and inc js in dec add imul add and mov push int3 sub xor mov pop sti push loope jne aas (bad) addr16 pop adc mov mov inc test pop mov adc pop cli add ret mov fdiv xchg pushf and out pop mov push hlt outsb mov push out mov sbb les jno push lods test xchg sbb pop inc cli rep cmpsl stos loopne dec inc aas jl icebp xor (bad) lret push int mov and and mov dec mov das movsl dec cmp push ret add and (bad) stc pop jp jo aas imul jl lea mov dec das (bad) mov orl fiadd xchg sbb add cmp (bad) cmc inc loopne fsts jae data16 add sub xor fadds xlat xor in cmp pop imul dec jae dec popf enter daa xchg mov pop loope mov push lahf sub (bad) cmc xchg jae xor inc mov mov adc adc aam je fmull xchg lret orb pop into cld sti pop mov out lret mov mov lcall mov pop testb xchg daa in inc lods mov pop lock (bad) gs repnz cmp fwait xor stos repnz fcomp fisttpll mov aaa mov mov mov ss sahf pop data16 shlb push clc ss es cmp xor lahf add jmp cmp sahf fidivrl cmp pop inc adcb mov add aaa sub mov outsb inc dec push push sbb and sahf push dec cmp sbb jae fnstcw mov add out ss rorl sub in (bad) (bad) cmc or incb ret sub xor call je dec jnp cmc sbb imul (bad) adc mov sahf and stos pop arpl lods loopne dec jb push rorl and shr or inc cmpsl cmp add sub popf into add pop dec xchg and jl jnp or aaa xor gs in pop push add dec in xchg inc insb ret (bad) std aas mov jmp jecxz mov insb push jno add stc pop mov fimul ret add jb fwait sti lcall rcrl inc push clc int3 pop std les je sbb mov (bad) mov xor pop cmp outsl sti xor pop outsb pop lret sub lcall stos and outsl mov cld (bad) xor inc pop add movsb pop or loop bound data16 add jnp aas push pop add sub pop lret mov rcr fcompl scas dec inc (bad) jno call mov fs jg (bad) leave pop xchg enter iret pushf (bad) cmpsb fs fidiv imull inc testl cmp or mov pop sub jno repz sub flds (bad) loop mov dec loopne adc repz inc jecxz dec adc mov inc or ds fsubl pslld jno add imul js xchg cmp stos add cmp out pop lea outsb push data16 push test jecxz xlat sbb cmp lea das cmp cmp mov cmpsb out sti or xchg in fs inc cmp or movsb push cmp (bad) jbe inc cmc (bad) cmc xchg mov fisttpl mov cmpsl pop push mov jle xchg aad ds rorl movsl fs (bad) pop lret cltd pop xchg or lcall sub loop mov aad cmpsl repnz sbb push xchg mov push mov loopne pop andl (bad) icebp (bad) hlt pushl add leave jae imul les scas movb xchg sbb out dec mov sub push fwait in dec cs xchg mov fdivs arpl add loop sbb and insl push in pop dec xor enter xchg rcll sbb add xchg loope mov mov gs push jle dec pop xchg inc outsb addr16 and push xor lods mov pop xlat mov je cltd aaa lods pop xchg dec mov std out inc ss aam sub jne aad and outsb loopne jno insb iret fidiv in adc js sbb xor jb adc mov inc inc push lods leave es cltd mov jne xor punpckhwd (bad) and test hlt shlb or sub or inc cmp js or and mov sbb inc pushf dec in adc orl (bad) jns jbe fistpl push push pop pop fidivr pop dec stos dec mov cmp and inc and mov mov sbb sub jo gs pop add ss inc mov scas out ss outsl mov popw fs movsb lea sbb sub inc sahf into hlt sahf pop int or sbb xchg mov clc pop mov pop mov cmc jbe pusha sub and jg testl pop gs add sbb jge sbb fnsave enter mov fs aaa clc hlt test test mov pusha xlat pop add jg mov fs cmp inc (bad) and sbb cmc sbb adc adc (bad) ss push jle sub (bad) adc push dec into inc out jae dec pop adc and dec in sbb push pop mov jns dec pop add push pop dec shrb fsubrs (bad) mov repz jbe mov sub mov pop fldcw mov dec pop xchg cmp xor cmp mov call fdivrs test test sahf popf pushf (bad) repz outsl notb adc xchg mov push cmp and int jnp mov lea push lods fcmovnu imul jns es and adc cmp orl mov mov (bad) jnp cmp cmp mov (bad) dec jg aad mov cmpsb push ljmp gs cld mov add inc addl dec cmpsl cs and sub xor mov aas test mov mov sbb js xchg xor cmpsl subb and inc mov cld loope aas stc xchg (bad) mov negl jae dec cmp xchg pop and mov insl pop xor adc (bad) push dec or add pop fisttp sbb dec xor mov xor inc scas iret das sbb repz pop enter aas xchg test inc clc mov dec divl stos test popa and jbe iret div pop mov mov test xchg lahf jle cmp std xor push mov (bad) std cmp popa sub push imul (bad) roll add lcall jge sbb sarl pop xchg inc push dec xchg push movsb adc inc fstpt outsl stos (bad) je divb adc mov cltd (bad) call xchg mov add adc (bad) mov mov ss dec and pop mov pop je jnp dec sbb xor cmp fsubs (bad) pop add sub xor (bad) mov cmp jge xchg cmp (bad) xor jnp shlb sahf pop inc mov sbb push push insb xchg push sbb jne ja nop cmp pushf mov js add in mov fs mov mov aas cmp cs lcall dec and dec stos in inc std outsb pop cmp and mov inc lret test mov in cmp clc pop add cmpsb xor mov adc lods add ljmp into and push arpl pop sbb (bad) jnp jge,pt pop inc add notb sbb arpl out dec incb jne jecxz xchg out adc push js loop pop dec les or sub (bad) dec ret outsl lods out pop into (bad) aaa cmp ret dec xor iret xor adcl mov cli mov or add jne fcomps ja xor test addl popf js mov xor test push sarl pop mov outsb sub xor xchg jge fsubp and push pop outsb test ja stos das pop jecxz pusha xor or fdivl pop in push adc mov cmc clc adc sub dec rorb jne inc xchg push movsb xor mov outsb dec clc loopne (bad) mov (bad) mov bound jmp xchg dec xchg ret mov push jecxz cmp (bad) jmp lock daa sub cmp sti xchg or ret ja (bad) sbb dec inc aad repnz fiadd dec popa rolb (bad) (bad) inc lds jb sub adc test lcall cld push cmpsb das xor adc sub outsl inc sbb add pop imul or and jo stc stc jae shlb xchg xor shll cmpsl stc add jbe push mov gs sbb mov repnz push stc add jge lods hlt push and popf jg imul rorl or add in movsl adc jg cmp add adc stos std jg push aam mov mov pushf out in (bad) loopne jae pop push cld pop clc cwtl data16 call imulb add ss adc pop add aaa add jno xchg fs loope xchg pop add and inc aad stc inc das pop sarl and ljmp movsl iret (bad) or fmull and push sub popa mov and (bad) orl pop pop push jmp mov aas jns cmp sub imul loop,pt lcall lods push test add (bad) scas stos add insb mov pop dec push mov pop leave xchg (bad) xor and dec mov mov inc cld jbe es cmp cmp test push out pop pop movsb test in push cmp pop in pop xchg test addr16 jb (bad) bnd std jmp enter sti loop das dec in xchg leave out push cmpsl (bad) pop test clc push cld and sub add push jo sub leave xchg pop (bad) fisubl (bad) rol inc push push or push sub into (bad) subb mov sub iret decl fwait jl sbb inc mov mov cs test adc (bad) jmp sub cltd pusha and push divl lret pop test jge push inc (bad) cmpsb mov inc and mov rcrl lock add jecxz dec aam sbb dec clc fstpl cmpsb xlat adc fisubl adc outsl adc (bad) insl lods (bad) iret into lahf cmpsl jge adc or mov fbstp lret mov int mov jnp (bad) mov add pop shll ja dec jbe jnp push loope cmp sbb (bad) insl ja vpsubb xchg cmp mov repnz add sbb or mov or xchg fadds stc (bad) test xor aas mov aaa int3 out adc in (bad) aad data16 ss xchg imul ds daa xchg lods jb or push imul xchg ds in mov dec sbb imul leave jmp dec adc add lcall popf adc xlat loopnew pop in arpl mov fwait lret mov xchg push mov ret xchg inc aaa in sub mov jp push xchg (bad) mov mov and xchg xor (bad) jg xor push jecxz adc xchg in loope sbb push lret and xor jge cli inc hlt sbb sub stos or test test aaa dec shrb ss fs sbb cmpsb xor scas lahf test in cmpsb mov jecxz fildl aam (bad) mov jb movsl das es xchg int or movsb outsl mov xor dec sbb add fisttpl add dec out or mov jno sbb mov or iret mov jae aas push push add inc jmp cmp aas cwtl mov mov jecxz iret mov lcall std lret (bad) rolb add push mov gs (bad) aaa inc fisttp or xor stos aas mov jmp pop stos sbb lods pop pop daa cmpsl out in pushf xchg mov outsl dec out outsl insb ja (bad) test pusha jge cmp xor inc jno dec lods or dec mov add xchg mov add xlat cld test inc sti xchg push js lock xor push stc pop int3 pop ljmp mov add sub fidivl ret iret mov ror test mov rolb lahf pop roll push xchg out jp test xor gs inc pop pop pop dec xor mov fldl es mov out sahf outsb call xchg insb push fsubrs mov pop stos adc icebp (bad) jns push scas xchg pusha mov mov into jns mov jmp sbb cmp mov cmp lea mov or cmp aam mov into pop cmp jns jnp rdmsr pop (bad) mov jbe cmc push adc xchg cmp jb cmpb adc cmp xor adc xchg cmp nop rorb in dec in ljmp int or fwait mov outsl dec pushf inc lcall mov into xor lahf inc push aaa aad cmp mov pop mov cmp mov sub mov jg pop jbe fs jns adcl sbb xchg xchg mov add popf jmp into push xchg sub (bad) into sbb cmp jl dec push mov or add bound movsl lea fcoml std pop mov (bad) mov jmp or aaa push pop mov and cmc cmp andl cmpsl pop add stos push (bad) mov stos xor test mov ja dec mull xchg pop inc pushf add cld pop addr16 mov cmp (bad) cwtl bnd scas pop insb ret dec ror jno dec lods jnp adc and mov jo div lret test jnp and dec and or or (bad) ret ds pusha adc pop sbb loope xchg and fstl mov push mov sar aaa dec ror js mov adc dec push mov cmp cmp mov and pop scas add inc add les push jne jae adc sbb xchg aam (bad) mov repnz xchg push pop xor lret push mov sub cmp mov push xor cli sbb sbb jb fmulp int3 fisttp sbb ret mov sub aaa mov sub loope xchg and aaa mov pushf lods cs xchg (bad) and push jb lret xor int lods sbb ret and lock std mov xor dec xor pop out sub sub dec test insb push mov lret test and popf test fwait imul aas dec sarl push cmp repz add aas dec leave lret inc xchg int xor jb fistl rcrb movsl adc int sub xor inc adc or jle aad fmuls inc sbb sub push es push notl cs stos xlat scas mov fwait jg mov insl add mov loop fcmovbe cwtl cli cmp clc push sub sbb pop xchg xchg mov iret jp mov or mov jmp adcl pop in dec cltd dec push gs mov sub aam call movsb mov xorb pop inc xchg xor fildl daa xor gs add push icebp cmp mov and jb mov test push mov mov out cld (bad) in aam inc int js or jmp push push xor movaps sbb (bad) call sub xchg cmc call and enter dec jle,pt test std test ret push adc sub jmp pop pop gs adc out aam scas test jecxz cmp (bad) std das xchg aas inc mov scas cmpsb or cmp mov inc daa movsl lds cmp andl mov cmp add scas pop aam sbb pusha push ds or test (bad) stc inc inc sub jmp mov push les daa mov add ja or xchg loope mov xor das addb ja pop or fdivs xor push vpsravd mov mov outsb pop sub mov push jnp in inc or (bad) idivb xor xor (bad) and xchg cmpsl loop je movsb jmp pop int nop ret inc inc std sub jb xchg push dec insb lds mov outsb dec push sbb rclb ret sbb aaa xor dec std ja inc push sbb int pop aas lock loope es xor sub adc imul jne xor bound cwtl xchg std pop mov xchg stos pop fwait cltd out aas cmpsl inc inc mov xchg fldl enter int daa sbb or cwtl push fstl sbb ja pop and mov fldl xor dec stc mov xor or sbb insl and icebp arpl cmp dec test mov and mov test jnp test (bad) cmp mov mov inc std outsb pop out aas repz sub jns and adc out adc insb sub sub shll out and arpl push rcrl push (bad) fildl mov jae mov pop add dec je dec (bad) push adc popf repz pop mov insb inc fimull or and push xor sahf fwait mov pop in inc jecxz daa clc or aas inc xchg xor nop mov cmp cmc ja cmp cmp pop cltd fsub rorb rep sbb jo (bad) pop inc jle mov jae mov or or pop mov push (bad) nop aad jns dec push sub mov outsl ss hlt push xchg fdiv lods inc popa mov scas push cmp and push mov add scas fisttpll xchg add das sub and mov lahf (bad) je out mov js add sub mov sub fsubl int3 cmpsb xchg lock sbbb icebp into add xchg out or das pop mov lahf mov xlat pushf and adc loopne test add out loop out mov ret or cmpsl test add stc add jne fwait sub push adc sub gs lea (bad) iret xor (bad) lret rcl dec (bad) out fstpt push and mov jecxz out ljmp test subl and jnp push xor fcompl loopne jne daa cmpb xor rolb outsl fstpt stos xchg jl xchg mov loop mov repnz pushw stos adc mov lahf outsb fcompl lods sbb cld push jae xchg aas push push push test in dec pop loop cltd popf push xlat stos or pusha jg jb push dec repz aam loopne and sub fs cmp out sbb lods lods fwait shl jne mov imul ret jp enter adc in dec int3 mov neg dec dec lds add lock out pop in movsb fldl ss cmp xor mov or mov loopne divb test add pushf pop nop fdivrp sub test out or mov (bad) scas sbb ja or xchg xchg rcrb loop incb push (bad) jge xorl aad (bad) cld icebp into mov mov mov stc (bad) jl js aaa out mov jbe mov push xor inc or cwtl xlat xchg movsl (bad) dec repz sbb or in inc mov incb fsubs cmpsl push or in ljmp scas (bad) inc (bad) fnstcw xchg push jae inc jle out (bad) cld pop pop mov cltd cli and loope pop xchg cmp (bad) out and jl sti push mov sub mov jb lret adc icebp mov mov popf push sub sbb pop jnp fwait xor mov (bad) or fidivrl sub inc shr in lock movsb sbbl lods in sub scas adc sub aas push mov mov ja insl lcall xchg pop rorl inc int3 lcall dec mov out inc sti stos mov leave add (bad) fcmovbe imul cltd or mov dec xchg inc jbe repz push mov sub and nop sti fisttpll stos push (bad) jae ds dec push push hlt and sbb adc mov pop (bad) xor mov sub (bad) fmuls stc sub hlt xchg inc push test cmc in (bad) jnp or push clc adc jle aaa insl cmp imul mov pop pusha cltd dec mov jg jp pop pusha adc inc shrb pop outsb in add ror loope mov or sub cmp push out jns lahf inc mov cs xchg fstpt (bad) add sbb dec notl repz jp jne jge or jl push mov xlat into pushf xor jle xor adcl test jne push dec inc (bad) cmc sub mov scas int and push mov mov aaa dec repnz xchg fsubrs mov pop sbb mov mov jne mov sbb dec add xchg cltd imul popa dec les push dec inc pushf icebp mov add sbb jbe jae aam pop test cld jb (bad) imul mov mulps cs outsb into cld jl push and sbb mov repnz in repz enter cmp mov das inc lods push pop mov push xchg push mov jns mov mov xor sbb mov dec or xchg push das cmc pushf sub pop dec mov push adc and fistl cmp and push (bad) repnz inc (bad) imul push add addr16 int jae push adc xchg lock stc aam pop lock or jne pop mov pop cmp xlat mov imul adc jp mov jg ret add addb test and pop aad dec xchg or sbb push test sub pop in xorb stos pop into jbe mov insl les mov leave pop pop lds in xchg push push test insb or adc push adcb dec xlat push xor jmp xor lahf xchg fcoms inc lret push jmp addr16 mov stos iret cmp dec xchg lea dec mov enter add mov testb sbb in add jl mov nop xchg or test or fidivl lock xchg cmp add pushf leave xor (bad) pusha sti jae shrl ss push lock mov sar sahf pop add mov sbbl pop cmp shll mov in ficomp lahf pop lcall mov jle cmpl pushf es push mov in sbb loopne mov decb lock cltd pushf sbb fimull insl xchg test in add aaa nop jnp xchg sbb inc outsb enter insb inc cld jae,pn jnp fstl push mov repnz mov outsl mov into jae pop dec repz push rcrb rorl add or stos mov (bad) xor les cmp sbb nop pushf addr16 ret xor in aam aad mov subb sub int es mov mov mov ljmp repz dec xor das ljmp dec xor cmp fdivrp scas loopne sbb sub mov andl loope bound add leave lock dec push xchg inc fisttpl lahf inc pusha icebp jmp xor jnp ds stc sub mov enter inc fcomip mov dec addr16 movsb push mov dec pop fidivrl mov sbb sub fldenv add mov cmp popa sbb dec test addr16 sbb lcall nop xchg jp cmp jecxz fwait mov xchg rclb invlpg cld loop mov ljmp inc mov pop jns iret or enter pop loope mov jne adc cmpsb sbb sbb cmp mov push push outsb xchg push outsl cmpsb (bad) insb data16 or and dec iret inc sahf jl mov lock jmp data16 dec sub cmpsl xchg jns fmulp xchg fwait pop das cmp data16 iret jecxz or pushf sar (bad) cmp mov xor sub pusha push out repz lods sub cmp xor fwait jge and imul cld mov fistpl xchg ret mov push cmp mov ret xchg mov and repnz movsl test mov cmp mov in adc popa mov dec mov cmpb cmp mov sahf inc cmpsb sbb sub sub daa sub sub xlat xor int cmp inc push mov jno incb imul out jo les loopne (bad) bsr outsl loope jle movsl mov int or cmp add mov enter fdivs adcb inc sub neg iret xchg loopne add adc fmull into loope dec flds loop adc add rcr data16 push mov cmp out sbb mov or sbb mov jge inc mov test out outsl cmpsl out or jb pop pop or xchg jno push cld icebp pop cltd mov mov test dec repz cmpsb sub sbb test lds push out js (bad) pop scas jns enter mov lret adc scas scas xlat xor inc outsl inc insb mov or into hlt or sbb and cmp aad or sti push stos push insb ja in pop lcall mov sbb clc xchg xchg movsb int3 loop addr16 xor or div adcb in inc cmpsb stos aam int pop sub jg dec dec leave pop push push clc std or (bad) mov cmp in mov clc or je fwait jmp mov jp dec cld mov cmp mov xor mov lahf xchg in add jne sbb mov scas lods cmp dec fisubl (bad) xchg data16 dec hlt js enter pop mov pop dec popf aas push adc xchg mov pop lds aad inc popf jnp les add inc sahf imul cmc xor in xlat mov lods sub or jge xchg mov adc push sbb cmp stos xchg and lret add jns sub xor stos or mov cmp mov dec adc jecxz fnstcw adc xor pusha push cmp mov xlat (bad) mov dec stos nop imulb adc inc adc push dec in xchg imul insb sbb cli repnz and and icebp and jp pop les jno cli pop xor xchg loope bound les pop out add pop sar xchg xchg das daa jl ret movsb push push test sbb insb sub lcall stc xchg jno sub fsubp inc fldenv popl push dec xlat mov (bad) outsb xchg fisubr push jp addr16 cmp iret jbe cmp (bad) adc (bad) stos fnstenv divb mov fcoms in in mov push xor push and mov mov sbb test fild mov mov loop pop mov cmp mov outsb add mov mov popa adc dec fucomp lret jno cmp jae cli cmp adc sbb mov jne lock je push jo lahf cwtl push lods jmp adc push outsl imull icebp xlat sub jo inc popf popf xchg pop imul sbb dec das mov cltd cs ss mov dec mov in mov dec (bad) pusha leave je ret adc outsb pop (bad) pop mov push (bad) lds sbb jl dec fs mov imul and sbb pop or jecxz xor ja negl sti push ror sbb lds lea outsl dec out mov addr16 mov lahf push scas cmp (bad) mov push out repnz scas adc scas sbb repz cmc pcmpgtb pop test mov int3 jnp mov (bad) pop cmp jbe out aas mov add dec inc jnp add dec adc std sbb repnz jmp pop jnp pop je idivb mulb stos push push lds inc pop data16 fildl fild (bad) xchg enter lock adc adc adc sub xchg mov test pushf adc arpl add jb pusha jp,pn dec adc in xchg mov lods repz lret dec cld ret sbb ret sbb lock jecxz add jecxz test sbb imul je jp das mov jl xor repnz add mov mov sbb jae pushf adc xor stos mov push add cli fcompl mov fisttpl scas jl pop loopne pop dec test fwait sub dec in rcr add mov inc ja sub adc sub jecxz xchg repnz test in jnp mov and out jo jo add cmp das outsb xor test cmp adc mov data16 xchg mov jecxz (bad) xor sub cmpsb lret iret fdivrp mov cmp push das mov test dec xchg cmpsb push stc mov daa xor scas hlt sbb lods lcall (bad) dec sbb cmp xor fildl sbb pop ja aam pop jo cmp inc (bad) pop dec adcl adc loopne incb pop xlat mov mov push imul cmp iret jae jl xchg and jb movsl push push push jne sub xchg pop or mov (bad) call (bad) out jl cmc cmp iret sub ret adcl out xchg dec xchg mov fimull mov pop int cwtl push inc jg ljmp les fildll loopne inc int3 lcall add cwtl dec bound xlat inc mov cltd dec or inc cli sti clc lret mov xor sbb call mov mov push or mov repz sub mov mov sub mov lods cmp pop movsl inc add aas stos xchg inc call cmp xchg (bad) pop sbb cmpsl (bad) or mov ljmp push adc mov (bad) mov lds pushf mov pop sbb js hlt je je (bad) sti push nop dec ja loope cwtl pusha sbb shr in imul dec inc xor mov fstps xor jo xor outsl in shld fs dec insl and popa mov sub fwait (bad) fdivl mov jge imul mov mov ret sarb movsb stos push mov mov mov cld adc push or and xlat mov insb stos xor add hlt mov out imul mov sbb and inc sub pop dec and pop sbb cld mov push out test sar inc pop stos mov push sbb mov dec jmp cmpsb push std mov or cmc out cmpsl loope push jg mov mov mov cmp push adc pushf outsl call in xor fs mov and pop mov das fcomi jnp push int3 mov add dec inc je lea mov sub jp cmpsl jle pop insb fdivs add push mov (bad) sub dec ror xchg push dec dec pop xor aas jecxz xchg shll sahf cmpsl inc mull into in adc leave test sbb lds pop jge les rcr mov (bad) mov or ret out aaa aad mov loopne dec jle adc xlat js sub mov std (bad) push test mov (bad) jnp sub roll hlt pop mov hlt pop sbb sub and dec mov jb loopne outsl (bad) cmp mov jmp out aad or pop aas mov push es dec xor ret inc dec sbb js ss cwtl jbe cmc pop mov movsl cmp pop jno aaa jo mov lcall fs cmp mov inc push mov xor mov (bad) lods repnz xchg dec repnz push cmp leave in or fcmovu rolb dec lods ret repnz mov jmp cmp pop cli adc or inc jbe imul jo and pop xor sbb sub ficompl sub mov jp scas or and bound aam aaa outsb jb mov and add cmpsb int js (bad) push mov jbe outsb pop mov sti pcmpeqw jno sub fsubrs sbb mov stos fistpll loope fwait (bad) mov decb jbe sbb (bad) push inc sub cmpsl movsl pop sbb jbe inc lret jmp insb xchg insl inc mov jb ret and (bad) inc mov pusha addr16 shll adc mov out jmp imul es mov cld mov dec push add or fwait mov inc leave and push fistp test or mov cmpb lods inc out mull fldcw ficom icebp fsubrs rcrl in xchg loop fdivs or sub mov lods jle in push sub inc fisubr xchg loop rcl xchg jg adc jbe aad mov mov adc cli sub push out inc push int and ffreep icebp or mov inc fisubr mov ljmp movb ss repnz popf (bad) adc cld mov xchg push push and add andl or stos adc bound adc out sub dec jmp bound out hlt pushf (bad) inc sahf adc sbb xchg int3 aas cmp int3 (bad) jo mov cmc push sbb mov stc int subb cmc inc jmp cmp mov jl aaa (bad) adc push jl ja icebp cmp push ja and xchg jns jns cmp and and sub mov push mov jle pop inc mov nop (bad) jnp out pop sbb adc and inc dec pop data16 test sbb add sbb out adc pusha push pop mov outsb cmp gs nop jno arpl adc test adc iret mov sbb lcall add mov sbb scas lcall pop cmp cwtl stos sahf jbe (bad) leave dec icebp mov adc add xlat mov lret or dec push es das mov mov sarw cwtl and pusha mov aam mov addr16 je test mov test loope add imul mov clc ret add lcall sub mov (bad) call rolb pop ja scas addr16 iret jae jmp mov sbb pop jns dec lods in aaa bound hlt mov pusha (bad) call in xchg or je xor add mov (bad) jno mov mov mov lea inc jl sar and lods xchg xor fs std inc sub clc ljmp dec (bad) iret test sti xchg dec stos cmp rcll cwtl sub mov fucom mov sub push pop cmpl sbb jmp and dec adc sub js jne mov subl popf shll inc lcall jle push adc xor xchg mov push or dec dec es addr16 or or or sarb or rorl iret inc or mov in out popa inc or adc icebp rcr outsb mov or fcomps rorb push lea jmp test out push pop aad cltd psrlw out (bad) mov cld jge jne ss and cmpsl into jbe jne cmpl jp mov sub pop jns repz mov xlat flds sbb mov test pusha inc mov jns jbe enter push push loopne add stos jo push push fs push scas bound inc xchg jne scas cwtl out cmp inc dec sub xor adc mov adc mov lea mov rcr mov out data16 dec pop push aaa int3 inc inc in and decb xchg sbbl (bad) xor (bad) int3 push out xchg mov pop jnp,pt test xor mov test pop imul insb data16 (bad) loopne add cs insb bound (bad) push jae test inc add mov push in gs push adc xor jg cmp out insl enter iret idivb lcall enter cmpl pop in lds clc (bad) or sbb std and pop lcall add out and mov (bad) push test pop jp push xchg bnd lret cmpsb dec mov push ss dec xchg andl mov aas aad adc stc iret cmp je aas dec loop xor ljmp inc movsb add repnz clc jbe xor dec adc lds cmp iret sbb nop test insl cmp daa dec fidivr jecxz sbbb test sub xor js scas punpckhdq dec inc shr and jg mov pop std imul popf dec jae mov pushf mov pusha sub fmul or jge (bad) jmp mov pop jl mov bound mov insb push (bad) mov (bad) jo insb call sub add inc mov lods cmp dec bound aad lock dec inc xlat scas add orb es mov fs popf popa fdivs push (bad) mov inc mov lcall in xor cs rorb test sti into cli cwtl or or and jno and sarb push js adc xchg jle rdmsr sub (bad) xchg sub mov fidiv fsubrp xchg insb mov in pop jns (bad) cmp sarl mov xorl adc inc inc inc rcr outsl addr16 xlat fs test xchg push fcoms std mov and ret stos lods (bad) int xlat push xchg data16 sub mov mov sbb and xor loope cmp pop pop xor in and nop iret xor sub push ljmp adc mov gs mov sub dec and sti call and arpl mov pusha (bad) leave mov aad pop xchg dec enter jecxz sbb (bad) je add sub or cmp or mov xor ficom fmull mov push fnstcw xor js aaa lret cmpsb push xor cmc (bad) sbb cmp jb jg pop cmp jae inc in insl in push sbb mov gs cmp xchg (bad) adc call ss jno addr16 sahf pop sub incb data16 push xchg xchg int3 push je (bad) mov imul ja maxps pop add test mov lcall fucom out sbb roll inc inc mov dec sbb popl push (bad) pop and test sub sub jns fcoms pushf push and dec dec and push jmp mov and jmp out push inc adc insb data16 mov xchg pop pop out data16 jno in jnp sub add sbb lods push stc aas jne adc ficom pop pop hlt cmp xor mov jge aam inc mov fs fisub fistl adc ds repz cmpl imul mov and loope push inc push push std es push dec xor lret (bad) dec data16 mov and ror sarb cmc out jge lea test in jae add (bad) cwtl sbb mov sbb (bad) xor pop pop (bad) inc and pop out stos enter pop dec mov mov sbb fisubr aaa xlat push mov xor and scas lds int add js pop jno les mov mov push add sbb pop enter leave pop jg mov inc test cmp js cmpsl fnstsw jg dec mov insb gs shlb mov subl ret jae xchg or call rcrl mov jae scas out das sbb roll out fsubp cmp add or or shrb xchg sub cmp vmaxss inc and mov test pop scas add xchg dec lret jg fimul xor nop dec push mov push xchg stos adc dec out insb notb enter rcl adc xlat imull xor mov sub mov or icebp push imul arpl jae aaa add inc sub mov pop mov or lods lahf ret jo pop add data16 or mov mov pop imul or xor adc jp fildl cltd fwait xchg or test jecxz cmp sub jmp pop mov clc stos cmpl fisttpll shrb push std xchg iret cmpsl in pop stos test loop pushf test sub insl lea (bad) fidivr daa mov push je aaa mov ja imul lea jmp add jp inc (bad) jp outsb mov adc imul sti pop dec pop call sub push xor jo int push jnp mov (bad) push arpl push lods je jg ljmp andl inc pop sub jg or enter push and inc test (bad) jg in pushf adc aaa ds cmp xor outsl cmp and pop xchg cs ljmp push fs cmp loopne inc jge mov inc lods or in adc add dec inc mov sbb push hlt xor cs dec jnp and jno push cmc jne jle and lret lret cmp jo es push popa int3 mov gs cmpsl adc pushf push ret ret in mov adc rorl jo insl rcll or shrl jecxz stos aas rcrb popf loop mov lods cmpsl sub jno std xor int or fwait sti in (bad) aam mov jns and (bad) push dec cmp pop dec mov cmp popa mov push cmpsb stc mov jnp in xor repz add fdivrl call fcmovnbe sub jae je nop fwait call dec outsl cmpsb mov sti sahf ror stos jno push push pushf lods jb dec aam hlt xchg mov ficomp push stos ljmp nop nop insl mov (bad) aam xor jl xor mov nop add insl mov dec add xlat mov scas sbbb cs xchg cmpsb cmp mov lds xchg jbe or push push scas icebp js mov push dec gs dec (bad) sub mov mov mov call inc and pop es lahf ljmp movsb cmp (bad) ret or adc lahf dec jecxz aam stos orl outsl inc push xor push int fdivs mov jecxz sub xchg xchg jecxz dec inc mov xchg loopne iret and icebp mov aam jbe push or adc (bad) mull (bad) adc push loope inc cmp lods mov cs inc sbb dec (bad) fadd xor out xor add hlt fidivr insl mov inc dec out bound addr16 xchg cli cmp xor mov cmpsb jle and sbb test dec cmp push mov enter int push cmp out addr16 cmp gs js pop ja in inc lock (bad) jo lds jb dec faddl or and iret or mov pop (bad) sub lods cwtl cmp mov fist jo stc jge lea sbb nop jnp adc int3 adc mov repnz data16 (bad) (bad) mov je cwtl pop lds stc fstpl fistpl cmp sbbb adc sbb mov mov mov add pop and cmpsl pop aam (bad) dec pushf pusha push dec lds clc sarl sbb addr16 push mov xor fsubrs xchg mov mov dec int3 or dec mov adc pop sub pushf mov and icebp or pushf lahf bound lds repnz mov andl mulb testl mov adc out adc jnp jp cld lods pop aam dec enter push inc sbb jo outsl xchg push jns xchg subl add repz dec bound je xorl (bad) pop bound mov or jp lcall xchg aaa (bad) mov lock fiaddl fldenv dec scas fs and cmc fs jmp aas sbb outsl add test mov or xchg bound xchg push aam (bad) push mov jnp or cmp mov rcrb ret call fild into sar fs cmc jae push pushf and outsb int3 leave push pop insb mov pop pop cmpsl mov cmp sbb aam xchg cwtl dec sarb and in arpl mov mov lahf ds test xchg sti mov add xor push rcrb dec cmp int and and cli mov out xchg jle inc mov sahf xchg arpl cmp sbb push xchg repz icebp pushf inc inc sbb std jg sti sbb add out push push stos push lods (bad) jno stos adc int into sub imul mov or add iret jmp std pop inc sbb mov shrb and popf add jmp test sarb mov adc addr16 sub jbe xorl arpl in outsb add mov addr16 call cmp pop sub imul aam imul repz mov xchg ficoml xor push fild cmp pop push fsubp jl and push call inc cmp cmp ret mov inc int adc adc push imul lock roll sub outsb enter lock mov aaa fmuls aam enter icebp jns and push sar adc or xchg fadd cltd jecxz add xor pusha int3 push aad mov dec push stos mov push inc aad jb and xor inc jne lods mov mov dec inc inc lods mov mov sub fwait lds mov jge int3 xchg sub pop les mov enter pop mov xlat dec xor js test pushf mov adc sahf jne jecxz loope lea incb or ds (bad) in bound jns (bad) je or inc or mov mov jbe mov test cmp movsl aad cmp push (bad) mov xor and dec rcrl test dec sarl imul nop mov je xor mov and adc mov repz and sbb xor int3 faddl lods andl fs int jo sti fdivl shll incb dec xchg nop xchg add mov int3 mov add aaa fwait add push fidivrl jns pop subb popa sbb ret sbb sysexit cmp pop xor pop dec xchg push lret mov stos pusha and repnz or jmp cmp adc clc fidivr daa subl mov cmpsb push xchg jl dec pop fisttp mov cmp mov lods lret pop pop pushf int3 mov pusha cmp mov fsubl je xor sbb dec jnp andl sbb pop test (bad) jbe pop adc insl out mov or add and shrb cmp out inc (bad) xchg jbe aad push push xchg push mov and cld movsl int push sbb movl push (bad) push ret les cmp (bad) in push mov sbb mov ljmp mov adc aam ret xchg inc xor sarl sahf jns push mov in lsl int3 in xchg jne push outsl inc sbb push out mov loope or cmp lahf push dec sbb mov cmp out or idivl push jle (bad) sahf jl dec or scas or push int3 push adcb xor repnz mov icebp stc jp loop fbstp sti add mov lahf (bad) mov aaa pop mov popa xor mov sbb clc xor and arpl push jge frstor negb push inc test push cli mov xchg aam sub sbb je xchg xchg dec shll loope (bad) scas dec arpl rcll mov adc std xor add cmpsl mov xor mov hlt repz loope sahf aas xchg retw divb mov idivl aam ds (bad) jecxz (bad) push cld (bad) and jbe js xchg mov push push std cmc jns adc (bad) mov mov lcall fbld subl fnsave faddl (bad) xor mov jmp ficom and cmp icebp sarl int repz xchg xor ss add out push push mul sbb arpl xadd sbb xor push mov mov lret or inc sub loope fisub in subl jmp fsubrl or std fisubl insb popf pop xlat adc enter js popf (bad) dec jg idiv imul mov gs into pusha out popf ja cmp out (bad) jmp jmp outsl cmpsl mov dec clc lahf ja (bad) xor xor push popl jp xchg xlat ss lret add xor sub xchg xor fimul inc pusha shr subl movsl push stc and dec loope das mov mov cmp das xor (bad) (bad) mov ret pop addr16 cld (bad) mov mov push repz sub insb fistl adc sub (bad) enter mul add mov mov push stc sbb shrb lods (bad) movsb lcall stos (bad) push inc int fisubr xor push mov cmc lcall push jge in jecxz push lods cmp add add fnsave test dec pop test jecxz call es lods (bad) mov xchg call cs scas xchg mov dec jae and ficom cwtl xchg mov pop in jns mull shlb adc xor orl and inc inc xor pop inc push sbb mov and xchg enter fwait inc dec inc rcrb test jne cli ja fstpl imul orl push fistpll or fidivl xchg ss sarb ljmp dec stc addl adc add popf xchg in mov adc push dec or inc imul dec adc sub or add add out in (bad) enter call hlt dec mov mov mov jge outsl dec loop mov push lods stc cld pop and xor call cmpsb nop jge mov iret sbb push xor aam pop cltd xchg and pop mov pop orl stc jb push inc pop mov lods lahf xor sbb imulb dec cs jno jb adc and cmp iret pop sar cmp mov add (bad) lds adc mov pop pop mov nop icebp outsb adc add clc mov cmp and rclb ret je jmp dec test sbb cld das or jmp insb sbb int mov dec push jns inc imul jg ds cmc lods ljmp pop rsqrtps pusha aaa jo (bad) mov outsb or sub and ljmp xchg mov pop inc jno mov jo pop pop stc dec mov sbb leave in stc ret int3 ret sarb xlat ja cltd dec outsb push mov imul jg dec add sahf arpl in loope mov popl loopne ljmp bound fsubp xchg in sub xchg or cwtl cmpsl in pusha in arpl add into adc lahf icebp loopne pop (bad) mov out pop out sahf cmp push xor xchg out or mov xor std test xchg and pop push sub pop jnp or cmpsl jmp stos out aam aaa adc shr xchg fistpll addr16 lret cmp xchg adc and movsl scas call xor jmp jecxz jmp lods pop add popf loop push popa mov stc mov mov fisubr mov push push scas cld loopne js hlt add mov mov ja jae jno arpl daa push lahf out mov push inc mov (bad) aam test or pop mov ss push dec cltd or jnp pop or adc cli in and popa orl fdivr insl cld (bad) outsb or jns inc loope push xchg push dec cmc mov cmc adc pop xor shll inc xchg jmp sub ret mov lret cld and popf dec lods xchg lcall leave xchg cmp sbb push mov inc mov mov inc fs adc lcall fidivrl jl cmc inc fmuls std (bad) and stos loope cltd adc sbb inc xor or xchg adc xor jo cmp jge push add inc lods dec push sbb and das push pop out add xor les or test sahf cmp mov int mov stc adc push xchg adc pusha mov incb sahf into add std lahf movsb mov sbb in and int3 xchg dec mov cli cmp (bad) jge loop pop jae mov imull cmp lods lea sub mov pop and call dec mov stos xor (bad) in out xchg dec test xor movq into (bad) jno mov add push jb cmp dec mov out mov (bad) roll and push xchg xchg aas add xchg scas aas sub dec mov fisttpl cltd test xchg or dec cltd cmpsl cmp mov xor test push out inc add stos test aaa outsb movsb mov or adc jbe jns (bad) jne mov dec push mov fs mov pop mov clc test fdivrl jns rclb inc cld (bad) imul scas bound test fistpll shrb cltd sbb sub dec fcmovu enter popf dec arpl xchg loop jl ljmp pop push dec out cmp mov fs adc mov (bad) int and lods adc lods je adc cmp adc sub call test rclb inc inc pop sbb js fdivrl loop xor aad mov cmpsl xchg cli cmp dec mov push adc mov imul mov sti sub cli inc loopne rolb negl mov push pop ret mov xor out jg or mov dec sub popa jbe fwait add scas (bad) jle in mov jle mov (bad) fsts mov push inc pop cmp push mov sub insb ror imul sbbl mov inc and jmp data16 sub and xchg or mov inc push cli out push mov subl push stos fbstp mov xchg jg out bound sub lods pop lcall int pushf sbb dec fs push dec adc movsl dec jmp aad insl xchg cmc movsb (bad) pusha adc jo inc cmp fmuls xor mov jno push push frstor test pushf adc fidivr fldenv xchg insl lea cmpsb aad imul mov mov pop pop adc inc inc xor sub clc shlb dec push fiadd lret (bad) jnp dec lods xor mov je test xor mov out dec movsb jo xor dec push rolb xor in push scas insl iret xchg or sbb pop lret xchg mull mov sub xor xchg jle mov mov daa mov and jmp push test fiadd sbb iret int3 test test cmpsb (bad) sahf shrb inc inc xchg inc push test push adc popa mov popa shrb das xor add dec shr enter daa sbb out sbb dec ret ret pop fstps jne nop dec pop sub adc jecxz jecxz cmp fmuls js cwtl lea cmp mov pop push pop fnstcw in adc shrb add testb pushl sub adc xor mov sbb mov and je sti pop subl loope loop roll inc xorl xor aaa jb lock sbb bound insl mov enter mov pop jo sub (bad) jmp in lods mov xor xorl fisttpl jae aad es dec test notl dec adc sub jb sbb enter repz and addr16 cld mov in jnp dec arpl outsl mov insb in das push bound fucomip jle (bad) (bad) dec lcall flds push (bad) and cmp ret sub or lds jns test jle icebp xchg pop mov inc (bad) sti pop (bad) fadds pop into cmp int3 sub jg xchg mov fidiv pop loop lcall lds sub push jge movsb or and sub in daa movsl cmp jl cmpsb lock fcmovnbe ret cmp mov mov hlt mov movsb push ret mov ret aaa ret std outsb jno test fildll cwtl test aad daa adc ljmp movsl and imul dec push out dec sub or (bad) jmp sub mov test (bad) rdmsr ret repnz lret inc mov mov daa bound xchg stc dec (bad) (bad) in push cmp pop add pushf dec addb je push ret in mov push sub imul stos call insl mov or and push test xor push ja mov push es pop nop mov dec loop mov loop cli pusha sub ficom add add loop cld jge aas dec and stos dec outsb xor sbb adc mov insl mov test sub adc iret sub sub imul cmp and cli pop imul xlat (bad) popf sahf jno or mov mov ljmp lods fcmovnb and cmpsb and (bad) or jnp xor cmpl insb or enter scas outsb mov mov rclb test mov ljmp into xor sub popf adc ret inc sbb rorb jle lahf push mov add jge push mov sub push cmpsb inc icebp sub push adc inc clc out test cmpl fdivrp cltd xchg stos jle or bound test decb stos push imul popf adc stos dec sti jbe push lods (bad) xor push das jno jmp test shrl sbb cli pusha inc aad mov aam out cltd es (bad) inc cmp ja imul pusha pop loopne ret sbb mov dec pop imul test out xor jae enter sub mov shrb sbb or sub and loopne fcoml imul cmpsl inc mulps cmpsl sbb push sub lds adc es push xor cmpsb inc inc sarb shlb and lods mov dec xchg xchg out or in andl jno loopne stc cwtl adcb mov iret call int3 xor stos add int3 iret or and mov cmp inc inc iret sbb sbb cmp aas rorb imull lds jl cs insb xor sti jmp or in or xor lcall adc cli dec test icebp aaa test cmp push pop xchg stc std or or adc pop pop test xchg test push pop adc sub cmp fmuls enter mov mov sarl out adcl xor cs aam (bad) loop push jecxz adc fisubl pop mov enter test scas (bad) xchg icebp mov nop xor arpl mov adc stc push sbb stos (bad) hlt inc pop fiadd xor jbe sbb lcall mov mov push fistl stos adc scas cmp jno push mov (bad) leave test push rol enter mov call daa pop or mov icebp int push push out (bad) xchg nop jae xor rcrl out lock into lock cs shld psubd mov and int js outsb imul ret pop aaa fwait inc mov leave push int sbb push into in fsubl std cmp insl ja rcll in test (bad) jns test js sbb mov sub call pop and adc xchg push add cmp jmp push ljmp mov dec adc das daa jo jecxz js faddl scas pop adcb movsl jl imul rcrb cmp xchg mov or int3 dec ficomp pop clc aam cli es mov sub pop mov cld cmp mov mov adc dec out sbb (bad) aam mov xor xchg aas jne add pop cmp xor xchg xlat mov sbb push in bound and (bad) sbb push mov ljmp lcall imul scas outsb mov mov out subb scas outsl xchg adc popf jge pop rcll repz stos inc lods pop out and dec sbb addr16 mov es push mov inc jg arpl lahf fmull mov lret mov sub pop mov pop jo xchg push dec fldenv popa (bad) mov int3 sub mov inc ljmp push (bad) cmp inc jl test mov insl in or in scas js xlat lret jae das xor pusha jecxz xlat and js or dec xor jbe data16 scas dec shrl shrl test lock sub fxch sahf ljmp mov int3 add ds add movsl cmp pop cmpsb inc aad jmp loopne out fldl mov cli sub push stos or gs jle mov ja xlat inc adc js jmp cmpsb lcall je xchg icebp dec mov clc mov push fdivrs pop out jbe out mov xor sbb fucomip (bad) repz xchg cmp test push arpl mov adc jns cs (bad) lahf mov or lahf xchg lcall je jp mov insb test jb mov mov xchg xchg clc int3 pop jge sbb lcall push adc icebp dec sbb out (bad) mov data16 cmp (bad) mov jge sbb imul xor sub popa cmp mov mov or pop cltd sbb in bts xor or scas jno lret pusha hlt icebp icebp add adc sbb cmpsb test add aam pop push pop lods lcall imul loopne pop cmp movsl int3 mov aad mov add mov or ljmp lds push in int mov adc mov leavew add fsubr push pop mov (bad) popa aaa rol push (bad) (bad) push stc lea or sbb sbb out arpl les or in mulb or mov or decb popa mov sbb scas add xchg ret push push push fisttpl xchg std mov push in push out add inc adc mov mov les fldcw fcmovnb fildll sbb iret decb and stos in push and mov test mov popa addr16 out mov cmp ds hlt pop aas xchg sbb loop scas sub (bad) stos ret out pop (bad) jne sahf repnz mov add xchg add or icebp imul icebp nop jb push mull mov pop inc (bad) in pop dec push das insl and rcl cli cli lcall and xor push jne cmc pushf push push mov fldcw push xchg sub imul inc inc jno into pushf sbb mov pop pop adc adc popf addr16 popf leave stos mov imul in clc mov jnp add rol dec nop dec out mov mov lcall ja lcall daa test fadd cli jg fbld mov aaa sbb cltd andb scas lods sbb add out cmp andl loop push push aam fbld insl dec cltd jne stc and icebp sub loope push cmpsb icebp scas (bad) mov pop sahf lcall lret fidivr (bad) jbe cmp (bad) mov ret adc js test push or mov loop sbb mov iret ret lock and lcall pop or add xor (bad) and loop xchg nop mov loopne imul ds int dec xchg movsb loope cmp sub push iret test add mov mov or stc dec xchg push sbb or aaa scas mov ss cmp test daa and out cmp push add cld daa pop ficomp jecxz gs mov scas jg inc adc repz mov or or aaa test ret insl imul ds lods scas ror das aas movsb imul dec cmp fwait sti adc gs sahf or cwtl repz add pop fldcw push mov mov and loopne inc adc sbb lds jecxz sbb (bad) mov loopne nop out aad es repnz sub mov pop xchg mov movsb imul or adc pop movsl xor stos inc cmpl movl jmp pop cltd jg daa adc or dec or enter stos (bad) sbb rclb lods mov mov les sti fwait push (bad) loopne add iret scas mov push shll push scas sbbl xchg in mov mov das popa or fiadd cltd xchg sbb cmpsb mov insb inc jae rol xor adc rcrb (bad) stc je sbb jne mov insl int3 jae icebp mov jmp jne add mov fwait nop test sub xor jl xchg stos insl or jecxz push dec add ljmp sub xchg (bad) dec cmp mov das fnstenv inc or out shrb pusha pop test sub gs cli cmpsb daa mov and inc cmp lret or stos outsl ja push inc imul add in push aas stc adc and fsubrs and mov (bad) jbe pop out or add xchg loope xor sbb and leave lcall lods pop ret stos add (bad) popa into jae push jp add jg and jle (bad) lea int3 fbld push fwait mov add mov (bad) inc mov inc int dec xchg loopne mov je test inc and test stc add loopne cmpsb add xor sbb and add push mov jmp into out call adc pop push imul lret mov lahf ficompl push ljmp cmpsl and and xchg push push add inc push icebp inc gs (bad) pop pop mov xor sub outsl add out sub lret cmp jne hlt bnd xchg sub mov pop pop mov push mov pop and loop mov in xchg addl sti push sbb nop cltd shrb cmc js mov mov jae or arpl mov jno push divb dec (bad) mov add out loope mov pop mov into stos movsl adc (bad) mov test mov add test mov jl cwtl cmp cmp repz jb test add and and sub int mov test push addr16 mov nop and xchg into stos xor into push imul inc icebp mov inc fsubl mov pushw jo pushf out xor ljmp test xchg xchg in insl (bad) lret sbb enter and repnz adc xor cmp in push je xor cmpsb mov and pushf out das cld out out pushf nop in push dec je nop add scas aaa (bad) aaa fwait shl into mov cmp and movsl mov mov or sbb fstpt rorb out sbb mov iret mov push push dec sub and xchg mov adc push lods enter jne jbe int cwtl and cs mov testl mov jnp jnp jne insb fstpt test xor in push nop push stos daa (bad) fisttp ja dec mov pop xor loope mov aam arpl fmull jns mov fnstcw mov pop push lods pop inc pop push jbe dec or stos mov jns enter pop adc enter lds jecxz ds fsubl daa js pop icebp (bad) xchg (bad) mov mov sub insb push mov ficomp ljmp call stos jns push inc xchg adc loopne lods lret push mov sbb and in lock sbb ds and std arpl ficom xchg jnp xlat add stos fcomps pop add aad mov sbb xor fdivrl cmpsl ret imul jl jl stos stc ja ja out test cmp sub cld test inc popa in xchg div std ror fiaddl adc adc movsl sahf int3 add push dec fstpt pop les cmp cmp xor fbstp adc push jno test (bad) ja mov into call xchg mov mov xchg (bad) cmp jne aaa sub jecxz mov push es adc in call mov imul cmp add mov popf jae,pn mov sbb xor es xchg das mov fwait mov sbb imul mov ds jmp imul xor xchg dec mov cmpsb sarb mov cmc dec jae lods mov out xchg mov mov (bad) cmpsb xor pop push loopne stos ljmp or in xchg dec dec xor hlt (bad) push add mov xchg inc sbb icebp mov pmullw sub das test cmp nop aad sub aaa ds in push fidivrl loop sbb fisttpll lret pop mov xchg dec fs call inc lods or (bad) stc js insb aas aaa (bad) jae subb sub xor scas push loopne xor xlat gs mov cmp leave rclb ret sub mov pop stos subl xchg inc (bad) lahf sbb push out shlb sub adc dec push arpl fmuls mov (bad) inc jl mov jge fisttpl subb in adc (bad) mov pop dec xchg dec lock mov push dec shrb xor and push xchg and data16 outsb subl add ljmp das mov dec and add test pop dec cwtl jne movsl dec pop cmp std mov out faddp in pop push lahf push mov call sub mov mov daa pop gs rcll xor pusha and dec mov daa inc repz in pop lds mov push push and pop pop (bad) loop jne in lods je fs sub cmpsl mov sub jle xchg outsl jecxz jne mov fsts adc popf lds inc mov movsl or stos mov push repnz pop js enter inc xor push testb aam adc jo jo fs out sub out das lods (bad) and sti add out dec call pop or jge test stos mov push (bad) cmpsl jb sar lods sbb out movsl jae dec add jg into dec and imul mov mov clc xor ljmp adc and icebp xchg xorb push int jnp rcll data16 add xchg jle sub lahf faddl push and push sub or in inc adc das in in leave cli xchg mov out sub jle sahf adc mov scas js mov repz pop daa push gs push enter jg xor or movsl mov jl data16 mov shr add xchg (bad) in iret popa outsb popa jnp or lret and mov gs cld cmpsb jle addr16 movsl dec les xchg mov jg mov sahf movsb jmp cltd jae add mov cli in xlat or cmp (bad) in jmp pop enter mov mov iret mov xor and and (bad) push jecxz push repnz sbb jmp in pop fs ror inc and jp (bad) dec push push rol pop in mov pop iretw cltd pop test in outsb sbb (bad) cltd or xchg dec mov jns cmpsl jmp das mov jmp cmc incl jae icebp mov push inc add mov push or in lret inc inc inc sbb aas mov inc xchg inc xor pop inc jbe dec clc movsb mov insb repnz (bad) jg test adc fsub mov scas call xchg pop mov adc loopne or addl mov pop aad out and daa sbb adc hlt inc ljmp stc aad cmp xor mov (bad) sbb fs (bad) cmp dec fidivr jne push sub cmp xchg jns inc sub jb lock adc lcall lock lea lods cmp hlt xchg xchg jp cs mov outsb jg lahf inc adc pop dec clc add in inc bound mov and mov jp cli data16 mov pop fldcw pop cmc add clc push lea mov and rcll lea test repnz insl mov les add aaa dec sbb xchg xchg dec adc aaa imul add cmpsl lcall or in xchg and xor or xchg dec loopne ret push mov mov lret stos repz xor pop (bad) mov ja (bad) sbb mov push popa ja push repnz xor mov and jb in mov popf push stos push jle movsb jo adc add dec jbe mov popa pop loop outsl pop mov fwait shll enter dec test pusha stos pop xlat scas inc mov pusha fidivrl jbe cmp std fild popf orb or mov cmp add nop jae pop mov out lods fmull lea enter fwait sarl clc and adc aam ret mull rcrb ljmp (bad) loopne push aaa or imull xor push repz je jge mov xchg nop cmp dec divl jle pop xchg pop (bad) in shlb xor stc sbb and push lock scas bound cmp cmpl jno repz (bad) (bad) jne orl sbb jecxz xlat inc (bad) sbb out lahf jg mov xchg aas ss push repnz in pop movsb outsb es fwait jo jne loope cmc ss mov inc sbb lock test and push sub lcall mov int3 mov adc mov jle icebp add rcr mov pop lock xorb xor xor aad mov mov inc cmpsb pop ret fwait leave jo popa rcr push clc xlat ja mov std add add adc adc mov lahf loop or mov dec int ret popa cmp dec hlt push push aaa add xchg add xchg lods jae,pt (bad) sbb (bad) (bad) push arpl push jae inc call pop mov in mov cmp inc sub mov and test imul cli movl test dec xchg cmpl xor bound cmp js pop insb pop in call inc xchg mov cmp jmp fisub jb or push push ret push movsl inc out lret push add inc mov (bad) jns addr16 push and and ret into fsubrl xchg dec add sub lods xchg bound dec pop and lahf dec jo cld push add add iret enter mov test xor cltd fmuls mov fidivl cwtl ret fsubs and je pop sub lds pop js mov or mov std jmp dec add rcll icebp mov dec xchg dec sti pusha pop xor jnp push add out xor outsl lds inc enter xchg jmp popa add pop xor andb movsb stos test cwtl sbb lahf xchg xchg lock in xchg jnp dec outsb sbb aaa daa jecxz sub rep dec lea xor push popa (bad) ss mov outsl inc jb add lods leave sahf cmc stc imul (bad) mov sub jns loopnew mov pop pushf or int3 in mov pop sbb adc jae xlat cmp and outsl stc cltd out cs xchg xor mov adc enter fldcw shlb mov jle mov lahf jnp jl,pn mov xor pop lret es jo add mov aaa xchg int3 add mov shlb popa gs xchg cwtl xchg pop fsubrs test sbb adc sbb push pusha ret push sub stc mov cmp je xor cltd dec test xor mov or bound mov cmp out das cmp in ret outsl dec incl cld adc fs push test add or gs sub scas inc shlb insb bound shlb fwait inc lret fildll stos int3 sub add sub jae ja add and adc stc rcrl outsl ja repnz je dec pop leave rolb lock repnz (bad) call or (bad) fldenv cltd mov out push icebp cmpsb loope inc add sub and gs sbb dec mov xchg push js int je mov scas xchg enter stos (bad) fs lods pop pop test lahf jns push sbb push or and scas push (bad) jge hlt mov mov xor cmpsb jae sub cmpsb mov nop (bad) jg mov std js pop pop pop ds rcrb dec adc imul cmp mov and imul jne outsb movsl mov cmp ljmp sub jnp xor jp pop push xchg xor dec subl xchg outsl (bad) pop inc adcl (bad) sub cmpsb cltd mov jae fnsave sbb add push stc xchg dec cmpsl rorl inc jecxz (bad) test and jne jle push adc inc xor xor lods test inc adc mov rcrb cmc push scas inc test jae test dec lret inc add mov lret sub sub lcall mov stos (bad) test dec into jns push or xchg movsb out jl mov adc out xorl dec jle inc (bad) jns inc add fildl mov sub js nop push fdivr add and enter adc lret cmp cmp add mov inc dec jmp sti hlt add pop mov push dec inc inc (bad) mov (bad) popa sbb bound xchg repnz add aam cli (bad) ror pop mov mov mov mov leave (bad) loop pop test jl or aam or cwtl jne jge push lea ret mov or mov sbb jne imul rorb inc sub rolw (bad) and loopne dec aam add xor pushw or mov jl aam jne dec cmp mov dec add loop cmp push adc cmc add add call dec or adc scas adc lods mov ret scas lock idivb ret lret dec (bad) std (bad) (bad) fsubrl cmp sub aaa outsb xor and arpl test cmp cld lock mov sbb pop mov xchg mov inc adc xor lods lahf divb (bad) test sbb iret pop pop xor gs (bad) and mov adc into add repnz cs add int3 arpl cld push xchg push into and cmp jmp test mov pop stc repnz push push mov sub pop shrl in outsl lods fdivrs stc (bad) mov mov test mov repnz jbe push lods cmc or pop loop dec jp xchg mov dec insl int adc mov fldcw (bad) mov stos lcall mov aaa fmul scas mov shrb lahf sbb sbb cwtl inc mov imul jle inc and adcl sub in aad ss cmp add je data16 cld insb repnz dec pop sbb mov push loopne shl push push nop xor push gs cwtl cmp push out das mov test shrb adc jo loop mov sub data16 scas pop inc lcall mov hlt fcomp xor daa popl pop inc ficompl (bad) cmp mov jnp js jg push add fcoml stos call mov mov and pop (bad) push jmp cld test cmp sub or add push xor aas jbe subb sub lret clc (bad) jb push enter lock or (bad) mov xchg inc inc mov sub lret outsl add pushl outsl aam push and cwtl cmp xlat aaa lock fidivr xlat into setl lret rep adc sahf lds (bad) inc xor mov adc or mov push xor dec push call xchg mov pop push mov in mov lahf fsin pop add in jp test clc movsl sbb mov mov popa sub inc movsl jmp mov mov in cmp mov loopne nop xor pushf adc add (bad) lock je imul sahf inc cmp ljmp sub adc mov out loope stc xor ja cs movsb rorb pop xchg jo jnp pop and lock mov xchg dec rorb repnz xchg or push out cmp adc stos ret sub inc mov xchg push fistp mov pop adc xchg xor loope roll arpl and inc xor jbe dec in push out dec in lock mul int adc ljmp repnz or jecxz add inc adc dec mov lret icebp cmp in sub shll push jnp in mov xor push outsl (bad) out (bad) lds aas sub mov or outsb (bad) mov push daa dec jecxz pushf sbb cli xchg (bad) mov insb xchg mov enter into int (bad) jne loop stos push sbb movsl out negb cltd lahf jae mov mov outsb popa mov and mov push insl cs xchg and mov inc in cltd mov fucomp sub int lods jno roll repz mov das mov aaa adc fs adc add cmpsl icebp mov pop arpl sbb dec jae loop shll mulb inc lock (bad) mov lods fcomps test pop test mov aaa outsb mov aaa pushf xchg push add push xor mulb xchg cmp popf mov adc insb (bad) ds cmp jmp dec xchg jbe cs out mov jb sarl into out rorb (bad) lret add call mov pop jo xor cmpsl mov in fwait js jle data16 outsb push or clc xchg int3 xor out std mov or ljmp mov sbb sbb repz mov cld sbb in mov mov sub das ja fidivrl les ds aam outsl sbb inc das (bad) jns arpl imul lock movsb out push lods lret andb notb (bad) out pusha adc ljmp insb popa outsb cmp jb jmp in jnp fmull das cltd xchg lea adc pop xor dec loope jp,pt mov cmp dec pop fcomp fisubr adc outsb adc and (bad) loop pop mov jmp pop cltd (bad) in jl aad stos clc into sub sub aas add ret xchg jb aaa f2xm1 mov in add jecxz inc loope pop fsubrs (bad) sub arpl jl dec popa jmp loope add rcl pop push arpl xor (bad) aad js inc xor fidivr (bad) (bad) (bad) xor jecxz add test dec daa lds add fimul adc out xlat mov enter adc insb push aas out mov loope cmp (bad) fcoms push adc mov and jns pop test adc push pushf mov dec adc mov into or cmc jg das cmp and push ret movsl sti push outsb ret out mov sub mov bound add js,pt mov xchg lea pop (bad) lods out outsb repnz aam test push add sub stos push cmpsl xlat xchg sbb (bad) push fimul int3 push cmp stos cmp push or xchg fsubr push insb mov cmp dec roll sub push ss jnp loopne jg mov sbb test ljmp mov je fwait cwtl xor mov mov sub sub push int scas ds sub fld or and lods inc popf negl mov shll pop dec out dec ret in stos xchg sub out mov cmc cmp iret fdivs mov pop mov inc cli sub ljmp add jnp popa cmp hlt stos mov imulb cmp cld fwait test mov mov lods sub repnz scas push push outsb push jnp pop (bad) pop flds xor push inc clc ja ss adc add and popf adc mov jl jecxz and and mov loop jns lods jno mov lret sub mov mov mov stos dec int3 jno xchg mov leave add sub add ret mov pop xor xor and outsb outsb inc lret mov loop fcmovnb sbb in outsl pop pop pop bswap divl xchg cld adc xor jge or lahf or fidiv xchg cmp mov add adc or fs push pop int3 out and jecxz cmp inc insl mov xlat adc imul sbb xor cmp dec xchg sbb fwait mov jb jne mov mov jge out cmp or fcompl sbb cs fcompl dec and arpl add inc dec aam stos pop data16 inc inc or scas rcrl cmp pop dec xchg or jle popa sbb loop push loopne lret xor nop fs inc daa dec inc inc shrb lahf jecxz adc mov popf sub cs sahf inc xchg test addl cmp jmp inc jle daa ror fstpl jg mov dec dec addr16 cmpsb xor push in xchg (bad) hlt push dec dec stos adc stos clc jle push (bad) mov jge cld pop sbb jne sub (bad) ja les push fidivr inc mov and jae (bad) mov gs dec fisttpll and (bad) repnz divb nop std pop pop cmpsb sbbl mov sbb loope sub (bad) call call cs fldenv (bad) jbe lcall sub sub dec lock pop scas or adc push cmc lcall mov mov sub push dec jae test (bad) test xor mov fbld and addr16 js subl xchg mov mov pop mov loope lods addr16 mov inc pop in data16 adc jg aad mov lea scas mov ret xchg cmp jnp inc repnz mov sub sub scas test xchg and call ret lea roll repz mov repnz insb lock pop imul jge imul subl push mov mov negb jg add xor cltd adc iret push shrl sbb fistp adc pop lret jge clc push aas cmp add lods dec and and xchg add sub mov leave (bad) cmp and cwtl sahf jne sti xor push arpl xchg orl enter xor push movsb ljmp mov push and cmp out ds cmpsl popa mov xlat clc push mov mov inc sub iret stos icebp sarl mov pop or aam adc call add xchg jg test ds cli mov daa inc inc out xor daa mov std fldcw ficompl stc mov xor cmp or test mov cwtl mov leave daa fisubrl repnz adc cld sub or movsl inc cmpl cmp pushf fmulp bound pop pop fcomps sub push fucomp mov jg mov das inc out push mov ret sahf pop popa lods cmp sub data16 jno out in (bad) loopne xchg and xor dec or test push jle ljmp inc cmp dec repz (bad) sbb xchg iret add xchg jle push movsl mov es xchg js shll mov loopne jmp fstpt aas popa mov loope lret iret pextrw dec cmpsl cmove ss mov and lods outsl inc decl fisubrl pushf cmp jmpw dec mov lahf pop ljmp sub and mov test test stos pusha jae xchg push pop adc into pushf add or rcrb addps jbe pop orb lods rcll mov cli and jb sbb out add lea inc movsl nop jecxz and or int mov pop and into mov cmp in pop sub or stos frndint (bad) loopne or xchg ljmp mov mov repnz fiadd ret enter mov cmpsb out lcall lock inc icebp out call add jmp pop sti cmp jp in and leave aaa ljmp adc subl mov xchg scas or lds jmp fiaddl pop and incl adc mov cmc cmp cmp and xor adc mov je jno pusha daa sbb (bad) ror or sbb repz adc lret sti mov sub xchg fistpll pusha rorb jo push xchg sub sbb out in lret loopne sti repnz std out adc fisubl pop mov mov add push xor cs out mov addr16 jns imul push fisttp mull flds or iret sarb add pop xchg push cmp stos lea jmp cwtl push xor arpl aas (bad) shlb cmp call mov insl mov js mov movsb addr16 sub dec mov popf cmp daa sbb push inc fdivrs sbb test mov sub push push pop es pusha int or int3 clc lret mov scas jge jecxz inc rorb je addr16 or mov (bad) or sbb lret (bad) jp and sub add (bad) pop enter std mov mov dec push in xor pop and popf sbb and or lods in add add xor dec mov mov or (bad) imul enter loop stos cmp pusha xchg movb movsb cmp (bad) pop mov mov sbb jp dec mov and (bad) jg enter sbb mov gs mov xchg hlt pop insb and lea xchg jb dec sub adc pop (bad) pushl push lahf cmpsl xchg xor push cmpsb pop dec iret cmp add ffree mov pop je loopne pop xor sbb jecxz test (bad) lahf dec jae out push mov call mov test cwtl pop pop popf mov cmpl ss call movsb and lcall mov test test sub dec jbe jns adc dec out push test ja adc ds test jmp lods movsb dec cwtl (bad) xor sahf outsl outsb cmp push adc jmp xchg pop push test es cmp sbbl xchg leave and mov sub enter cmp dec and sbb fwait lahf int3 in mov mov outsb (bad) pusha repnz xchg xchg scas dec aaa sti inc jp sahf pop dec pop dec mov pop push or orb fwait lea and add cmp jmp inc int cmp push rcll xor pop or jle lods jecxz ljmp or mov popf lds sbb cltd lea incb es incb outsb xor add cmp outsb sub add add and mov mov test adc cmpsl dec jl pop fnsave mov clc int aad mov push das rolb inc jge inc adc fwait push push popa in sub jne movsb arpl ss hlt sysret or sbb loopne xchg xchg inc popa and dec (bad) cwtl or dec adc push icebp mov fs in adc cld xchg movsl adc mov xchg inc stc dec sbb leave out out shrl pop mov and dec clc inc sbb adc inc cmp mov inc push nop movsb (bad) rcr or cltd into movsb xor or xor test adc outsl push push and mov or les mov loope enter adc inc adc in notl mov add idivl scas pop lea xchg pop arpl adc in xor xchg out xchg sbb lcall push jle es inc gs push push add mov (bad) jmp mov pop push mov loopne cli and add mov sub sub lahf (bad) pop lcall sbb daa and sar jbe adc jmp fild push iret andl mov sub lahf lods cli inc add mov mov hlt jne je inc sti mov hlt mov nop aas (bad) pop das mov cwtl jge shll mov adc ror es xchg mov pop cwtl int mov jbe nop insl lods jmp gs mov in shll jns ret inc sbb dec xchg dec into xor pushf aas xchg aaa mov mov hlt repz (bad) push lea push sub xchg fstpt subl push rcrl xor mov cmp movsb out lret cmpsl adc dec pushl dec or sub pop sub mov cmp push test dec bound std and pushf pop cmp push ficomp push mov loope fcmovne leave test adc jmp mov or gs pushf xchg xor das mov cmp ss pop pop out mov fisttpll pop inc or xor arpl lcall sub lds sar xchg in and and std je mov jp fcompl cmpl cmp mov (bad) in mov dec fdiv xchg ljmp addl mov push cmp nop xchg or inc inc pushf cmpsb pop and mov cmp xor cmp inc and imul adc mov mov out mov movsl sbb pop and test mov scas clc arpl fdivp adcl push mov roll sbb xor cmp dec cwtl push inc lds cli adc jle movsb (bad) jns pop mov loope mov mov fstps mov pop jl mov xchg mov pushf xchg mov int3 decl pop (bad) cmc and mov sahf mov push (bad) scas cmpb pop adc test push jns mov inc jecxz idivl xor inc test ret pop movsl arpl sarl enter xchg popf sub inc insb or ss add fbld jne (bad) dec das jmp jb outsl dec and fwait inc jg add cmp repnz movsl in or xchg rcrl inc sub fwait adc adc ds and pop push sti sub mov or cmpsl test leave (bad) pop jno and mov lret ret insb jmp fdivrl movnti stc dec enter cs js popa xchg cltd pop stc cli inc sub jle movl test adc jnp insl lods sbb out jnp jg ljmp outsb gs test loop out aaa lds jae dec fimull pop jno rcl int jns xchg lret fsubrp lret popa in inc int3 addl dec cmpl ds pop cmp cld hlt and notl pop call jns cs mov (bad) fsts clc loope lret xchg xor xor and ja fmulp pop paddusb dec in mull cmc push jge aaa xor pop insl aaa mov jge lds in loope fsubl sbb xchg outsb sti push jo ljmp mov lods add daa cld push mov adc xor or data16 (bad) arpl and add in xchg adc mov fdivrs mov push cmpsb stc sub stc daa push push inc xchg mov mov imul std pop movsl mov push (bad) jb dec or std mov mov push pusha decl cmp dec shll mov and push decl xchg arpl je dec aas inc mov mov popa notl mov into adc mov or mov adc adc in test pushf pop mov mov scas cltd ret jl rcrl jp test fdivs or sti (bad) std jp (bad) jmp rclb jp adc das call fistp mov sbb cmp (bad) adc lcall addr16 bound notb ror add sahf xor adc lods mov sbb sub pop mov xchg rclb mov cmpl cwtl lods sub lods loope dec mov imul mov jnp nop sbb lahf jno sub out loopne aaa gs (bad) lea sub scas scas hlt dec cmp cmp sbb xlat pop or cwtl (bad) (bad) inc mov xor add lea dec out (bad) lock mov inc movsl adc cmp jecxz pop test fadds das mov mov cmpsb jp inc (bad) int (bad) mov test pop xor mov push jnp mov lret ds xchg push sub xor mov scas push xchg add push dec pop push inc clc inc (bad) mov nop mov into or push adc mov or mov xchg inc (bad) dec xchg imul push ja cmpsl xor lret mov out sub pop jecxz hlt (bad) mov outsl mov push and fidiv fistp inc push ja xchg daa in push stos icebp adc (bad) jbe adc xor inc xor mov pop cmc mov inc rorb rorb lret (bad) jmp dec lcall xchg ds inc jp pop dec jle push xlat dec pop xor jg jne aad test bound cmp pop (bad) mov in stos or mov int jo jle test push or xor adc ret mov out cmpsl cmp mov pop mov mov sbb inc fsubp jp sub inc lahf clc js mov and cli leave fisttpll data16 rclb adc (bad) jge popa and pop mov stc pop shlb pusha sti pop add outsb fstps in jae,pn fidivr sub fwait jne mov int cltd inc (bad) sbb mov pusha roll pop push xchg push js aaa scas mov jp std lret (bad) cmp faddl out clc cmpsl jb dec xchg dec imulb mov xchg gs jmp xchg sub and or das andnps hlt push pop scas adc (bad) mov fidivrl pusha fsubr cs mov inc jnp (bad) js lret idivb inc inc mov push rcl push jmp jmp pusha rol mov xchg neg stos xor pusha fisttp scas call jnp cmpsl in fisubrl dec mov jge js insl in jle cltd decl sub out repz insl and pop pop aam mov jecxz negl int sbb sarl je aad int lods jp dec xlat mov push pop mov sti aaa mov or cs adc (bad) cmp dec maxps xor sub cltd stos cld into fdivr inc jno out loop sbb in mov les mov add jmp hlt dec ficomp inc adc xor pop push (bad) sbb pop dec loop xchg out add int3 cmpsb adc ljmp cmc out loope dec outsb ss dec lahf pop and stc repz insl aaa jg (bad) mov mov cmpl call bound push std sbb jb or xchg roll fcmovnb cmpsl sbb out push stos push pop mov cmc sub (bad) jle or inc andl jmp lretw add or cmpsl addr16 add mov pop out mov push mov push add iret dec mov aam loop sub sarb mov sbb mov inc jbe sbb mov stos push fs mov int cmp fs scas rcrb mov outsl outsb into cmpsl test mov fwait mov jge outsl pop dec scas mov test inc and push push (bad) outsl aas jecxz inc loop dec xchg stc in sbb jns inc pop int3 xchg adc mov jno in int mov adc jno mov stos (bad) cmp int xchg or js adc inc mov mov loope dec dec daa push stos push lcall fisubl add loop xchg sub push gs mov lret mov clc jecxz sahf (bad) popa (bad) and and test pop pop icebp lock (bad) mov mov sti cmp mov (bad) ljmp stc dec leave push cmp int and push fwait adc or xor mov sub mov fwait mov mov xor pop push outsb mov out inc xchg pop outsb aaa (bad) pop insl fs int3 inc xchg sub insb stos xor test jb out adc outsb push aam idiv fstpl and scas sub mov arpl xchg sbb mov mov fwait jbe inc sbb add xchg push ret aaa pushf adc int3 mov or dec dec out aaa int repz lret (bad) nop fidiv scas lret dec dec mov dec inc inc test sub push push addl inc mov jo loopne pop lsl xor fildl ret cwtl stos sub cmp lret mov mov pop xchg std push jmp inc push inc mov inc (bad) xchg test repz dec ss enter xchg or jle push or add mov adc inc pushf dec pop pop sbb or and mov jl jg gs dec cmp mov repnz mov outsl lcall adc xor cmpsl fdivl cmp nop add shlb add call (bad) dec adc xor cmpsb loop pop adc jns (bad) xchg jecxz aas fsubs lahf (bad) call or popf test rcr inc dec sbb fmuls push or orl (bad) addr16 cwtl pusha jecxz fdivl imul scas js and scas sub sbbb aaa inc arpl mov mov sbb inc mov movsl call lret outsl imul test mov aaa xchg leave mov adc fidivl mov pop cltd pop fwait sbb mov lods jl mov push iret inc pushf cmp or adc rcrb xor (bad) out outsb jp cmpsb sub popa setg addl int3 sti addr16 nop jl add mov cmpsb ret les ss leave mov sub mov ret stc push push js leave pop bndldx test inc pushf data16 add push jmp jle stos outsb and outsb cmp push (bad) mov mov mov mov inc int iret pop xor shrb scas fwait push mov cmpsl pop xor or dec push clc mov mov push movsb imul inc arpl (bad) pop and xor in xchg xchg (bad) test pop je ss dec jne stc dec inc mov repz out add imul sbb or out ljmp imul inc pop int3 pop mov xor ljmp ret pushf stos sbb sub jecxz xor ss lret and movsl js mov lahf cmc cmpsl enter pop repz aaa lret xlat insb sbb nop jmp adc test xor fldt push ljmp daa aas sahf cmp lret inc sbb int and andb xchg dec mov sub mov inc sub std dec data16 fwait nop aas sti popa or push imul pop cmpsb xor ljmp ds xor dec push and inc xchg das push push sub (bad) mov push mov inc popf inc sub popa push sub int3 adc dec cmpsb jno insl xchg jmp (bad) jne in sbb mov push cmp pop stos rorb sub mov out (bad) mov loop xchg push imul lods jbe cwtl jl int3 jns mov (bad) (bad) lods clc mov fisttpl sbb dec scas jne inc cwtl jns idivl sbb lahf xlat pop sbb jne push or imul push inc je in mov jae repz cmpsl ret iret jns lcall inc or push loopne (bad) pop xchg ss cmp jne sub or popf sub xchg push in xchg mov sbb jg push out xor pop sub cmpsb xlat aam sbb push mov insl stc lcall lock aam pop jns pop test push push rcll addr16 sub bound cmp dec clc mov xchg hlt pushf or xlat lret xchg popa ficompl mov inc mov dec mov test or lahf (bad) test xchg fisttp popa and pop sub adc xorb push aas mov cs jnp and mov or loopne repz icebp imull inc jo fsub cltd daa cli push sahf rcrl pushf sub xor pop daa mov push cld fildl adc or adc jge sahf mov cmpsl push sbb stc mov mov jo cmpsl sbbl lahf or addr16 mov stos divb jne int or and bound inc fwait xchg push sbb add jmp ds lods nop nop dec leave jmp add sbb jg xchg bound xor cmp outsl mov pusha fisttp push test stc mov (bad) push mov sub mov jb lea dec ljmp pop lcall jecxz mov cld std or sti pushf pop mov sti pop aas cwtl sub push bound or arpl pop mov dec pop arpl fisttpll dec lods push test popf and and idivl lock scas dec outsb and cld adc arpl je outsb arpl push pop leave mov pop mov lock adc fistp mov and in cmp jno jbe cwtl (bad) and test xchg sti jl pop pop adc cs test (bad) push mov or push pushf shll dec push (bad) out pop fwait inc fisub hlt lcall and inc mov xchg fdivs fwait aam out ret popa push and or mov lock pop pop push inc inc mov fcmovu pop dec test push pop repnz or cmc push arpl xchg idivl or mov imul and test pop add in out sbb loop mov push orl mov jg dec jg (bad) sbb pop ds and daa ds aam jb pop cmp mov aam movsb mov jbe add andb xlat jno and sbb xor hlt add in insb scas (bad) xor fild lock mov fnstsw mov push dec pop xor adc loope stos sbb xor ljmp and sub rclb sbb scas adc jmp push sbb mov add arpl push jbe inc test cld mov sub hlt cli out mov data16 fnstenv pop adc cs sub dec mov (bad) (bad) test sbb call stos adc in mov dec push in js cli inc ja jno or sub cmc and or adc int3 add dec cs jg ret jge das movsb mov add sbb scas leave lock ja out pop aam xchg cld xor ja sbb mov push aas lahf push les repnz lea (bad) mov cltd inc lret and daa mov loope jns (bad) movsb inc das pop or xchg test ret shr push orl pop jne test leave mov lock push pop and cmp out (bad) mov cmpsl cmpsl subl mov mov jmp iret jle or mov or push mov std or das mov xor or faddp fsts pop push adc jbe rorb and mov mov cmp cmp sbbl inc push dec jle push icebp xchg inc inc fisttp imul xor cmp (bad) mull ret sub movsb pusha jnp mov jl std jg cmp push loop add sbb xchg push ja cltd xor pop mov mov nop push mov popf or lods cmp fadds or mov cmp imul loop fisubl fcomps js jns and push mov xor push lcall and mov sbb xchg and addl mov lea jp sbb repz mov pop mov (bad) or jnp xchg cmovae psubq or ret test sahf sub jnp jns in add (bad) dec repz dec dec fistpl cmp cmp lahf push shrl popa (bad) dec ljmp jl inc mov xchg pusha mov mov in sub in (bad) jae popf ljmp ficompl push mov loope dec jle insl rolb sub dec jp jbe lods test jo fwait push (bad) xchg jns sub iret inc xchg dec xchg test popa ficompl push out aad scas (bad) jbe jle add inc repnz inc cld push cli cs pop (bad) out and jnp mov push and test inc pop jmp mov lcall mov mov dec test mov clc add adc add fsubrs add std cs hlt popf bnd faddl test push add sbb push mov test inc add pop push and out loopne push mov ds push test aas aad cltd test shrl and push scas xchg fnop clc inc ret mov cmp push dec adc jmp push int jp inc add cmp mov push lahf jnp lret jae jnp imul xor jle xchg fwait sub outsb add into xorb xor icebp faddl sahf aas pop dec popa mov test out add mov sub add and mov ja push push xchg (bad) push stc (bad) dec js cmp push or jmp lods in adc ja shl testb int mov jae lea pop imul frstor popf das cmp or test out sahf and inc add cwtl mov inc push inc in arpl dec in jno jae push pop (bad) and in cmp mov (bad) negl inc (bad) sub enter lds arpl adc (bad) out fimull mov adc pop inc fnstenv pop inc pusha sbb pop pusha fidivrl mov push inc mov pop in dec cs mov mov push xchg lds adc std pop or stc pop (bad) scas leave sbb aad mov in jmp mov add cwtl pop repnz jnp shrb cld jns addl xchg push push js pop jmp imul call lock pop lods sarb adc pop rcrl outsb ficomp jno repz ljmp lock jg insl ja inc rolb mov jb jno sbb pop push push cmpsb inc mov sub push adc pusha sbb enter or test add cmp cmpsb stos pop jecxz adc cmpsb pop cld sub add pop jle jnp test cmp jo movl stos jb cwtl (bad) and mov stos pop xor lahf push cmpsl test inc adc inc cmpsb push push and sub ja into cmp mov (bad) mov cmp les or je mov ljmp ret imul or lahf xor imul addr16 xor mov sub leave call in mov scas xor xor jge add sbb lods xor lretw in ret jg cs test lahf (bad) cmp mov xchg mov lret test dec sahf leave xor add inc mov (bad) stc sar pop mov cmp rcr in mov (bad) (bad) cmp icebp pop fisubl rol out jmp mov push mov push sub sub push clc cli outsb or dec and leave dec (bad) mov stos je add mov sub mov sti rolb int loop push sub xchg popf jmp (bad) jbe inc xchg ret add (bad) dec js or xor leave jbe dec xor rcll imul add into push push xchg pop test sub cmp and addr16 mov cmp push lds decl pop sarl lret mov pop icebp nop cmp pop (bad) push enter sti mov inc cmp adc ss daa adc (bad) loop pop cld and push or sub (bad) ss jb fidivr dec pop pusha or push pushf out mov pop hlt int and int mov lret cmpsb push jmp jno outsb fucomi and dec mov cmp shl outsb and mov mov nop fstpt push fistpll aaa cld mov ror addr16 repnz (bad) mov and push cmp or or mov or lret push dec sbb mov ds mov stos out cltd (bad) jecxz jg xor enter or stos inc pop xchg outsb cmp dec inc stc je sub (bad) pop push and mov iret xor mov cltd insb das mov stc push in frstor ror mov pop movsl aam sbb mov icebp je mov repnz mov mov rol adc imul xor mov xor in pminsw in jbe mov inc push add imul rol inc andl fistpll push ret inc inc lcall gs call test mov inc or jg (bad) clc add mov push pop ret push movsb shll xchg and rorb xchg enter mov rcl mov scas hlt inc cwtl pushf dec dec bound scas repnz mov loope mov dec xchg icebp add lods jae aas das (bad) sub outsl (bad) jno popf aam shrl adc fcomps das or sbb lods fisttpll sbb jb sub inc stos jne xchg pusha mov sarl in aad cmp pop fstp fldenv cwtl inc shrl pop xchg cli outsb (bad) jl jmp js push (bad) cmpsb mov and sub push lock aam jle dec xchg jp imul jmp popa fs and mov or push push dec icebp xor fsubrs into ss fmull js ret imul mov push or sti (bad) pop pop push xchg jnp fdivrp cmp testb std add cmp enter arpl leave movsl xchg jb xchg stos xchg imul sti iret jg in insl xor adc ret xchg lret push cltd test sbb sbb nop jb add ljmp mov inc mov mov adc idivb cmp in cmc fcmovnu std jp push inc mov out sub pushaw xor sbbb cmp jecxz fsubl xor aas lcall dec cmp in mov pop out inc dec jne lds idivl out orl xchg lcall call xchg mov call push or in das rcrb pop xchg (bad) xor cmp cmp add movaps sub jo sbb cltd sbb cwtl (bad) cmp jo mov or pop hlt fwait jmp sbb sub ret dec je sbb mov jecxz sub out (bad) pop gs mov lods mov shrl add cmc xor arpl (bad) mov test push dec xchg mov pushf jb,pn addr16 xor popa lret rcrl pusha xchg push sbb sub test mov sub cwtl pop and adc sbb dec mov cmp (bad) mov (bad) notb call push pop xor sbb xor push mov jnp dec fadds sub dec mov push sbb sbb rorb fcomi jbe and jae (bad) mov pop dec js rcrl les or mov lock cmp outsl cmp sub int3 xor stos call dec leave mov cmpsb mov lods pop ret xor adc push dec dec repnz sub (bad) xchg and sub repz push inc stos mov and jb push cs cmp xor ljmp xchg push jns loope and jmp xchg aam or imulb dec push fiaddl jmp aaa jb inc cmp scas stos fisubl fs xor in loop sbb pop push and dec fs (bad) jle cltd push xchg insl mov and mov out es in in test push shl xor addr16 push xor fldl pop dec inc ds std test pop sbbl sbb test (bad) fwait out sub cltd push push jne lcall mov fist bound out imul inc push (bad) xor jb and add push loop adc mov andl pop xchg adc pusha ja rcll pop sub xlat ds rorl mov pop ljmp test mov cs fmulp push icebp mov scas xadd push push jp imul fwait push mov sahf add in pop mov mov mov dec jg nop dec repnz jmp std mov popa push in (bad) stos xor (bad) fadds push testb in pop mov add dec pop jbe push das add sub shlb jg mov outsb mov cmpsb iret or mov (bad) cmp sbb pusha movsb cltd xchg adc popf paddb sub addr16 and jp repz dec pop mov stc add mov add jb jno push sbb and iret scas js and or xor in mov sahf aad aas (bad) mulb mov fisubr inc mov dec cmp pushf outsb and pusha ret (bad) jl jle sahf ds sarb stc inc in push jae mov xchg and mov xor dec adc (bad) stc cmp pop jbe addl ja dec hlt mov call add or cwtl (bad) xchg hlt scas aaa nop mov and or cs pop std and cwtl adc jae ret outsb pop inc aam inc mov cwtl addr16 pop (bad) lcall and rcr repz rolb out xchg cmp (bad) push adc add cmpsb inc xor js lds stos std cmc cmpsl and push sbb inc cmpsl xchg xor lahf sub cmp movsb jb cmp ljmp add dec jno mov or mov hlt xchg jne and iret or js inc mov sahf fcmovbe adc add or mov sarb dec adc xchg cmp mov gs (bad) in mov xor pop lock xchg call gs sbb sbb cmp int and shr lea mov jbe cmp and mov jno jb or fcoml lret mov xor jo pop faddp inc into cmpsb jb (bad) pop jne lock sub fwait mov bound mov fnstcw mov (bad) in cmp es push fs add enter pop push mov shr jg test sub pushf jl inc add lcall fsubrp pop into xor mov jg jns outsb repnz aad test (bad) mov mov outsb fnstenv stc (bad) out jmp mov rolb xchg cmc add pop mov add gs arpl cmp jl out mov std out fisubr xor cmp cmp xor enter sbb (bad) mov sub loope mov test inc sub out cmp sti pop stc pop loop es ret mov cmp jo out cmpsb jecxz fst adc sbb loope sub jl mov addb outsl add mov in fsubl pop mov int3 mov or push pusha mov adc push xor pop (bad) jnp je inc push sub xchg jl and cmp mov es (bad) call ds pop aad ret jns data16 int3 shlb fdivr pop incb test mov jg cwtl push push fxch shr mov insl movb int3 int jb mov sbb cmpl jb xor inc lahf inc xor sbb mov imul inc outsl emms (bad) mov iret add xchg decl stos popf xor lahf jnp mov test inc mov adc inc cmp jg sub jb enter pop stc push fidiv data16 jo test mov push popa bound leave xchg mov inc jmp in pshufw and (bad) (bad) mov xor pop add fisttpl cmc xor (bad) (bad) rol repz cmc add push int aam dec mov and inc xchg mov cmp out test and (bad) lods loopne enter in test or xchg dec fwait ror into pxor out inc jge xchg mov push sbbb inc jle sub push lcall dec fmul fwait xlat lock aad and sub push ljmp stos mov and out push fidivr mov and aam mov jp out sub dec inc adc add roll fisubl test mov mov and sbbb jmp mov vmovdqa loopne sub xchg jg xchg dec in add ljmp (bad) lahf fwait xlat push and bound pop mov sub ljmp fnstsw cmp pop mov mov inc pop aaa jb cmp aad clc fnstsw mov dec jae cmp decb mov cli std xlat sti or jecxz cmp add cmc mov lahf pusha jne fucom sub nop jle and mov and out push stc call jno movsl add push fldcw outsl or mov xchg push scas xor cs sub pushf mov jae mov dec insb jecxz scas mov (bad) mov je jne loopne leave lret jecxz out xor cmpsb jnp notb js jmp insb fisubr add fildl jp sbb jne insb xlat adc xor js pop rorb and pop repz insl dec imul in mov sti inc ljmp xchg movsl dec pop scas cmp fist ljmp shll ss rcr jb jle xchg test rorl cmc and int ror je shlb aad cmp cmpsb sahf loope,pt jbe ror cmp je cltd dec outsb mov test xchg xor cmpsb (bad) outsl repz mov insl popf repnz icebp and push test push lods cmp ret (bad) xchg push mov into xchg cmp ret push dec xlat cs jo sbb jne jno cmpb out movsb nop lret xchg push mov or shr nop push pop push mov add out cmc loopne sbb aam ja mov dec in add push int3 cmpsl sti loope xchg mov xor jmp into nop in mov daa stos ffree iret adc cmpsb cmp cmp fstpt inc (bad) inc cmp cmp adc (bad) adc push aas mov xchg faddp sbb sub mov loop dec (bad) jle loopne aad (bad) cmp xchg dec jne addr16 popa dec cwtl int or jge es push ja xchg or hlt stos or insl fistp call iret ret aaa xchg push mov cwtl mov (bad) or (bad) fstpt and fstpt mov mov daa cmp jecxz rclb sub or mov cmp hlt imul mov movsl repz jmp (bad) cltd loope adc popf pop (bad) js pop shr push stos out jo (bad) fisttpl popa out adc outsb pop lcall cwtl sub ret aas or push push sbb push aaa cmp jecxz push cmp lahf (bad) icebp shrl es das mov aad add mov add mov (bad) cmpsl (bad) aad fdivrl call scas xor (bad) popa mov (bad) scas scas inc je popf out or mov fist pop add xchg je sub sahf xchg cs insb dec ja adc clc pop imull popf sbb stc mov out lret dec cmp pop shlb xchg insb add dec iret bound xor fs repnz std mov cli push rolb mov push dec dec mov xchg stos xchg mov adc (bad) outsl pop std jle aas lahf fsts rorl dec sbb dec pop adc ret mov out and sbb pop sahf movsl js dec ljmp mov pushf jno repnz and dec dec or pop bound cmp adc iret jbe fnstsw sub xchg rclb stos xor in cmp jp test test js es test mov inc jnp std pop insl scas pusha stos repnz fwait sub push sbb pop push popa cld rol mov ror mov cld jmp aas out btc pop das inc loop call mov mov (bad) push cmp rcrl cld mov xchg mov pop fdivl xchg xor aaa imul imul xor test lret jae daa push xchg ficoml dec in xchg and stos or mov jmp jg and xor fdecstp push push and and sub (bad) cmp aam insb dec sbb dec xchg sbb mov jo mov test imul leave call mov pop jnp or xchg (bad) sbb test cltd jecxz in imul fstpl fcoml adcl fwait insl pop pushf insl add xchg addr16 jl inc sbb mov call and push and jne,pt adc std pop stc cs mov add mov mov std les and mov pop lret nop mov lret push js jno test push sbb sub (bad) and insb adc stos outsl loop push fwait das movsl shll test repz popf adc jl and cmp mov jmp push mov out sbb pop push pop mov sbbb inc xor repz in push lock push or push xchg xorl je lret or stos xchg inc xor inc or add adc or dec fdivl lods cld sahf fistpl lea mov (bad) dec push add mov push (bad) mov in and loopne cs push je lea aam sub push lods xor jge xchg repnz add mov push leave out jp pop and int3 mov cli gs das js sar ret cmp dec popa ret dec pop xlat pminsw cmpsl mov (bad) dec jbe adc mov mov sbb cmp (bad) dec push jae mov and sub outsl and push and pop mov out std fdivl in (bad) in stc xlat jmp inc arpl mov out roll push xchg jns inc std cld (bad) jmp paddsw push divl insb ret dec or call leave sub decb inc mov shll pop aas mov xlat xor es insl aaa xchg pushf xor outsb shll pop cmp icebp test outsl (bad) mov xlat push stos mov test pop ret adc pop add jne into mov add sub mov add jl (bad) xchg aas icebp test cmc aas fcmovnb fs pop ret pop pusha sti push or jbe mov mov mov sub push cmp cmc hlt rcr cmpsl pop dec push mov mov fsubl rol mov pop xor mov mov jmp mov imul cld pop fistpl lea xor cmpsl pop aas shrb or aad jp enter xchg push or cwtl or jae movsl mov (bad) hlt push jp (bad) daa dec std cmpsl jae dec or iret int lahf enter push push movsl adc or cmp sahf lret loop test pop das push mov add pop mov arpl iret cmpsl daa xchg aas jns cmp iret xchg aas ja sahf test rcl (bad) int3 push jecxz jbe push jns mov mov fistpll addr16 lods xchg sbb insb fisubl pop lcall stos in (bad) xchg jae pop ja hlt aam xchg call mov loopne daa into movb mov inc pop push sub fcompl sbb jne inc push inc fcompl cs lahf hlt adc xchg test aam lahf mov out pop cmp mov inc aaa insl ret (bad) (bad) dec mov movsb inc or jbe leave js xor sub adc leave and inc mov pop fisub or arpl inc sub ret and jb lock outsl pop icebp or xchg test mov or lods (bad) iret push cwtl add imul sbb pushl push push sbb lahf lock xchg mov repnz xchg or xchg push out add dec pop or inc sbb mov adc imul jns (bad) mov push adc sub cmp adc icebp dec (bad) into loopne arpl data16 mov pop out jmp mov cld mov mov fbld loopne dec xchg push call push cs fisttpll imul mov addb push push loope lcall out je insl (bad) rorl int3 inc adc and cmp in popf fwait pop ljmp mov fstpt mov mov mov mov cltd mov dec cld jmp inc movnti lcall (bad) mov pop push in jbe dec xchg mov and ljmp test add pop push in mov out arpl adc xor inc mov sarb shll dec dec xchg mov mov popf int3 mov insl push fcoml xchg outsb stos sub pop mov jle das and and sbb aam jno popa adc (bad) jg adc xor pop fisubr mov lret mov mov mov add pushf shll lcall outsb je or aas sti pop lods inc test add mov sbb out stos fwait pop pop notl sub cmc adc pop jb push js (bad) leave flds adc sub cmpsl add insb stos cmc pop push add clc jle mov adc daa xchg lret xchg psubd push loopne add stos repnz sbb popa test xor rcll mov sbb jl mov cmp push out je jbe int3 negl arpl rorl cmp sahf sbb push test scas sahf stc cmp sub mov mov btr mov popf in (bad) mov add push ja lods stos sub and push and sar je jns inc xor out push push ljmp ffree (bad) mov push dec cmc inc adc adc pop jecxz pushf jnp ja pop fbld add fs jnp test lock push leave (bad) hlt and push mov push iret xor in cmc fiaddl pushf scas (bad) push inc cld or push fisubr push sub and nop cmpxchg dec or cmp cmp or and push sti xor inc ret movl xchg fs and push add cmpsl testl push jle xorl test push in sub pushf in rol cmp xchg repz mov pop push mov mov aam xor sti jne cld ja daa push stos push gs sarb mov xchg pop mov call mov pop stos mov adc push mov out mov push lcall ja or es pop jmp sti mov (bad) (bad) aad daa je fstl loop call cmp in int3 xor add pop int xchg jno pop adc inc call adc sub arpl cmp es lds repz xchg ffree cmp outsl push cli adc stos mov cld inc xor test stos sub aaa insb sbb lods call mov push pop sbb sbb add ficomp daa push sub es xchg jge repnz pop loopne pop adc sub jecxz dec push pop mov cmp or inc push pop hlt xchg sub mov cli jg pop jbe fdivl jmp popf cmp mov incl in pop mov lahf cli lock and outsl repnz xchg into mov or xor push jle dec adc test jbe ljmp jmp push in mov daa fs leave inc cmp mov xor pop add out loopne or out ret xor imull sar sub sub xchg movsl out and sub mov xchg xchg pop and call pop in out lds jne insb sub es mov mov lret sub fsubr inc dec sub loope jne and jb lret sbb add andl out jl nop pop dec mov dec cs mov add gs addr16 (bad) mov mov jp add shrb xchg jle js pop sub jp clc and insb lock aad adc jno fisubrl xchg das sbb or mov dec add xchg cmc jbe ss cmpsl jmp sbb rorl popa (bad) je jg sbb xor push inc push add out jae add addr16 mov inc jbe idivb push dec sub call lahf and mov es inc cmp dec xorl jo pop xor sbb xor xlat repnz das mov or inc cmp push ljmp adc adc cmp add clc and mov pushf adcb (bad) pop lds cmpsl call roll repnz xchg fucomi lahf xor jl lods inc aaa lea (bad) imull jp (bad) popa mull rol sbb stos (bad) cli ret dec sahf pop sbbl iret sbb ret pop lock mov mov add leave loop sahf popa xchg out fiaddl mov jnp ss xor daa pop mov add imul fdivrl (bad) imul sub fnstsw dec aam aaa lea mov cli inc push and (bad) jne xor mov out (bad) mov mov lods loope xchg push mov inc xor pop mov les imulb xor divb movb inc or add cmpsl cmp xor loope jp (bad) adc cmpsb xor push push repz push icebp cs loopne ja or xchg lods dec ficompl xchg jle arpl in jmp and insl adc xor jne jecxz xchg (bad) repz mov or outsb fsub adc xor adc sub mov jb test mov sbb lahf (bad) es jo push push cmp (bad) mov mov and xchg sbb mov lcall fsubr ss int ret sub and negb or cmc xchg lds and jecxz lret aaa xchg xchg lret mov cli mov cs les and dec xlat dec rolb popa mov push lods les pop adc add xor out (bad) es (bad) insl add rorl repz ja xor xchg sbb rorl add imul les push mov data16 lods pushf sarl jmp in pop lahf clc mov loopne enter pop jecxz movsl icebp (bad) enter aad (bad) push inc ret ljmp in mov sbb sub cmp xchg scas mov lret mov push stc and add daa and jo stos jbe jmp mov push push mov inc ljmp cltd lahf movsb movsb push mov repnz sub stos pop scas imul ss cmp push dec gs outsb cld xchg into outsl inc fildll stos loopne stos dec fimul popf rcll fsubl outsl daa or addr16 xchg xor xchg pop das lahf scas and sub sbb inc xchg enter jmp jbe pushf push data16 pusha mov sar cli mov ficom xor adc test cmpsl ljmp add cli mov out fbld xchg inc dec mov inc pop mov mov outsl out jg (bad) es pop shufps pop das or pminsw push push fwait pop test push xchg jne mov loop pushf or pushf daa inc push mov addl cwtl xor jecxz pop mov add insl fdivr lret test cmc sbb (bad) (bad) cmp dec xchg adc fs inc adc pop cs insb cli (bad) lock inc pop adc sbb xchg (bad) inc and mov out subl (bad) repz rcl imul push cmp iret sar sbb cmp inc pop or int3 sub jp or scas xchg lahf aam mov mov leave dec jb push iret test stc xchg mov sub xchg ret jnp push incb out mov int3 mov and (bad) cmp lret and stos fist out xchg push std cmp sub int fisubl and bound (bad) pushf mulb jnp in je xchg inc xchg std adc lods pop xor in pop dec aaa add stos pop lock stos pop (bad) cltd data16 frstor push cmpsb xchg stos and pop inc stos lods sti sbb mov test add loop out (bad) mov repnz sub shll mov inc bound addl adc push push and fisub lcall sarl jl xchg xor scas inc add xchg fiaddl in jl outsl push inc xor jp and lock in sub inc out lods mov mov jno xchg sbb push add fsubrl iret movsl cmpsb data16 cmp loope fildl stos push fcmovnu adc lret or inc outsl mov aad mov data16 ljmp fistp push es sbb je adc mov jp ret or xorl add out jl out shll dec in (bad) nop or jmp aam mov lea adc cld scas push inc es aaa lods in jge or sbb sarl repz mov movsb mov cltd fldenv popa cwtl adc pop or cmc test (bad) or ljmp xchg or ret movsl xor aad iret or sub push inc mov cmp adc push das xor inc inc sub adc out test inc (bad) xor mov xchg xchg test jb clc push ss popa insb bound mov aam dec add ljmp cmp adc rcl mov les scas jne call fs mov loop adc add (bad) std fidivr stos scas int3 movsl lods loopne or add push mov mov repnz and rorl mov jns jle gs add out fstps mov inc inc pop test add push bound outsl sbb loope push (bad) sbb cmp lock cmp testb or out mov xchg mov into je xchg add icebp icebp xor pusha stos (bad) lock (bad) rcrb mov mov sub jmp sbb stos mov xchg clc push imul je icebp jp inc imul mov insl ja push fnstcw xchg inc mov or jae mov xchg cmc xor adc jbe in adc xor or fs inc push je test mov fs loopne xor cltd xor cmp mov std icebp xchg push cmp dec cmpsb cmp fldt les dec or or test inc push call loope push or ljmp in orl sbb xor pop out pop scas mov xchg lret dec add mov inc push sbb jae dec movsb outsb ret (bad) mov popfw mov cld xchg fisttp outsl lret xorl insl inc add daa sbb adc pop inc push clc adc into xor inc dec out (bad) xor add sub insb jmp mov pop andb jae test neg outsb adc mov icebp push subl imul jne ret dec mov fistl lods lods lods aas les mov lret xor mov leave mov aaa mov or dec or jp push fsubr (bad) push adcl xchg sti xor cmp push fdivrs jbe and test xchg out repz xchg mov sahf adc push mov js mov xchg loop mov out insl pop sub cmp add je shr test adc xor cmp les mov out sbb dec daa pop notl ret dec loope fcmovnbe inc daa out mov adc repnz cli inc insb or jl loope inc lds aas pop cltd dec push enter adc xor jns fwait aaa adc pop cmp sbb adc sahf loope xlat leave cld jecxz fdivr out sbb inc mov sub cld and jne mov pop mov push aaa rcll xchg sti mov xlat out xor in psubsb cmp cmp lcall sbb rcl popf mov shrl in in pop cld sti test mov dec jae xlat cmp jns xchg mov sbb sub cmpsb sarb hlt (bad) aad ds sarb out ss or imul jecxz push out gs or mov lds mov out pop insl and icebp xchg sbb sbb stos pop ret xor inc inc (bad) data16 outsb dec lods cmp cmpsb inc rclb out outsl jle xchg loopne imul fmull sbb inc lods out xchg (bad) mov push les aas sub sbb add add loop rorl cmpsl pop mov jne out imul fs xchg mov or mov call std popa push das mov out das fcmovnbe js cmpsb mov into xlat dec jo inc fsubp sti out pop das sub cmpsl xchg mov sahf add movsb lret loopne in in scas sbb stos xchg push sarb inc add rcr sub stc loopne push and ljmp loop lret outsl in daa and xchg jne mov adc push dec cmp mov and mov xchg cld cwtl dec mov sub sub das lahf xchg in or je lods sbb jnp adc cmp xor loop jp push inc inc cmp lods out pop lods push pop fnstsw insb or les mov xchg mov pop push mov dec jo sti jbe call js jle fwait mov jle pop je lock dec xor pop test out xor xor pcmpgtb leave fadd (bad) and scas jno push das std inc mov pop xor xlat jae jp or inc aad scas test sub dec out xlat ror lcall imul hlt das pop test xchg sbb pop or jne rcrb jecxz mov sub and cmpsl stos pop nop jne lock or jle mov lret fnstcw mov cmp sub in stos xor shlb stc sti mov and (bad) lea sub sub inc cld xchg out loope jg inc cld push xlat insb icebp bswap or loop sbb faddl or outsb mov push jne and inc ljmp es or loop xchg popa das jns leave xchg jbe in jne dec dec mov pop fwait mov ret dec add sbb roll jb cwtl or in push (bad) sar fisubl insl sub fild pop sti or inc sub push ret shr icebp push or sub and cmpsl xchg (bad) cs xlat mov setne sbb fcoml jg xchg cmpsl rcll gs dec jnp mov outsl mov lret es loopne out cmpsb mov mov pusha lret enter lret push xor scas (bad) adc mov jbe sbb pop lret jp lcall imul insb pop cli jae (bad) jo mov xchg jno in repnz mov popa sub cmpsl or cmp fs jbe js in push dec cmp xchg adc fisubl daa outsl sub jbe test gs mov inc or xor xor inc lods jecxz jbe cmp popf leave sub jae xor jecxz mov sbb xor mov inc push daa leave js pop mov sbb cmpsb and jne jo ljmp cmp aas push mov push push lods in sbbl cmpsb adc push jne shrb std and aad cmp cld lock sub adc test sub fisttpll mov daa repz in push lods mov cs cltd sub fldt jnp icebp sbb adc mov movsl mov mov (bad) pop or jp je pop stos cli shl xor sarb push xor push mov cmpsb xchg mov mov xchg push push sub imul mov sbb adc incl or inc push sub gs repz push ja jno outsl popf inc cli shrb mov loope nop in xor jo enter add push inc insb pop jno daa fmull movsb pop out negb pop repnz or outsl ds mov test xchg std loop in ret pop insl mov fbld insb roll sbb xchg mov add lidtl jmp fsubl aam cmpsb fwait push popa dec mov int jns dec movsb inc xchg push mov jmp jne cld cmp xor push push sbb (bad) push movsb jmp ss adc cmpsb int in mov sub jl jne push and sbbl in push lea mov cmp jne cs andb xor insl aam adc jmp xor fdivrs mov sbb popa dec daa hlt sub inc or or mov shrb stc mov es mov sar lcall xchg mov jle ret jmp ret sub dec sete sti hlt xchg xor sub mov xorl xlat std sarl inc cs cmp mov xchg cmpsl sub push pop mov dec mov aas shrl sub xchg out aas andl inc out out mov push or push je cli xor sbb dec orl pop adc inc je cmp out faddl scas add sub jb ja mov popf int inc push mov stc ss loopne mov jae stc inc pop ja and sahf hlt enter mov ret movsl cmp inc clc popf pop xchg mov (bad) jle inc (bad) dec fnsave lock (bad) jmp ljmp jp sti jne es ret or or jno and sbb mov sub pop inc pop cmp dec mov ja roll and push jo mov stos dec movsl inc out pop dec pusha mov mov pop fiaddl jmp xor outsb sarb mull fisubrl lcall test xchg icebp sbb and or xor mov aaa and xor mov adc dec xchg sbb xchg clc jb and jge mov fs mov orl nop out push ret ss xchg daa mov mov out mov inc out sub pop ds inc add das push stos dec sarb push idivl pop inc clc ljmp mov imul push (bad) push hlt jmp mov pusha sbb popf jae dec sbb or daa iret test repnz pop out xor sub popa jecxz add lcall (bad) fs (bad) mov lgs mov popf sti xchg call bound xchg jp out fbld mov gs scas dec frstor divl scas jns into shlb aas imul inc sbb loop add pop dec lods add (bad) mov dec mov insb jb loope out jge pop cmp jo push jle sub adc cmp fistpll push mov and mov lds mov andl xchg out lds jg inc xor das ret aam mov and mov hlt adc fidivl add movsb or lods fisub mov scas xor das sbb repz mov (bad) lret ret pop cmp shr pop in cmpsl cmpsb jle mov (bad) roll out inc mov outsl dec mov mov sub sbbl popa and andb out scas mov mov and jno shrl popf cltd popf sub or (bad) cmc sbb rep hlt sti push xchg jge out lret ficomp add cld inc and in (bad) fstpl in push dec into imul add fadds lret xor push mov fs add in xor mov (bad) lock push xor xor aam mov lcall dec lock or sahf arpl out data16 sbb mov iret idiv hlt inc je pop mov sbb jbe repnz sub pop inc sarl adc lock flds and mov bound scas push arpl add jne dec (bad) in lods pop sub pop push or and nop sar call sti pop cld call je sub push inc lock xchg clc xor lahf xor in dec sbb loopne jg add data16 push push jns fiadd jbe scas lret jne pusha enter or jae pop sbb inc sub and out push mov sub mov add cmp lods lcall inc push mov frstor lds popa loopne out outsl sbb pusha lcall repnz dec fwait and in stos mov jnp sub push pop rorb stc es xchg adc cmpsb mov fdivr mov sub sbb int3 adc sar pop es cmp jmp (bad) xor mov lods push push cmp stos add fisubrl ss aaa pop repz mov mov or rolb clc out push adc inc jl cltd (bad) fs (bad) lahf bnd mov rorl jns aam pop test push cmp je leave movsb add in imul mov sub sub mov adc mov notb (bad) sbbl sub (bad) sub (bad) test (bad) int arpl push xlat imul scas out inc jecxz add inc inc out xor inc outsl in mov xor hlt in jl dec mov stc pop push imulb out out xchg out (bad) fild xor enter mov pop and in sbbb push mov jmp ss (bad) gs call mov insb jo or aas (bad) pushf daa fbld ljmp in je sub mov push cmc cltd cmp jp nop pop clc idivb adc imul jge mov movsl dec mov iret addl dec mov loopne fxch pop mov inc sbb pop jge std (bad) out test lret test es cwtl (bad) mov (bad) ja and andl jl mov negb dec push in pop cmpsb or rcrb stc mov rcl jbe jl push popa je cmpsb and je pushf mov mov fsts popf push jne in arpl ret inc dec xor add std subb nop mov mov leave ret lret xlat cmc adc test jl (bad) mov lods add jg ss bound push and rcrl mov mov lcall pusha rcrb loop jecxz jbe jge (bad) dec test imul movsl das add inc or mov popa aad mov gs int inc cmp repz mov mov jbe mov roll stos and xlat push (bad) pop fsincos aam pop fstps int3 sti pop (bad) adc inc (bad) outsb push lock cmp insl xor (bad) sbb adc push shl loopne call mov push jns pop cmpsb add out xor cmp xchg ljmp hlt in mov int cmpb ja cmp xchg pusha sub insl dec cmp push or bound mov pop fimull cs lret sbb push add lahf push cmp jo aaa jbe ja sub imul mov mov (bad) push mov push mov divl stc mov dec cmp cwtl out cmp and cmp jge (bad) jle subl xor mov movsl cmpsb rcll (bad) (bad) or std sbb (bad) cli mov push test (bad) jmp mov and repnz scas mov jmp mov add xchg test hlt arpl popa xor jg outsl add lds cmpsl addr16 repz cmp in adc mov fstl (bad) (bad) or in arpl ret mov xor add sbb nop addr16 cmpsl jnp push movl sub xchg out lahf adc or cmp pop in xor arpl aaa xor xor out mov out fcmovbe outsb es adc fcomp jne sti mov call cli ret cmp rolb jp mov pop add cmp jl dec sub mov xchg call mov lcall orb (bad) dec adc popa roll add xchg add or sub in dec cmp mov add ljmp cltd inc (bad) notb pop dec inc mov cmpsl idiv pushf outsb out out jno sbb imul mov lahf sti sbb inc or js test (bad) insb jg mov push sub sarl mov das insl imul mov (bad) xchg inc dec cmp mov loope sbb mov cmp mov stc mov in fwait into insb dec add insl mov mov ljmp jle jle cmc mov imul or cmp pop jecxz shrl mov inc outsb sbb lret je jns in xor shr xor aam out xlat fs fsubrl push outsb lret loopne mov int3 add jae sbb ret sbb mov sti jbe jb jge out gs cltd imul add push dec test jmp leave jns sbb les movsl dec sub ret jp in xchg jo in ret jg mov data16 xchg std pop (bad) lods ss (bad) cmp jl sub and ss ljmp scas xor int jae fistpl (bad) fdivr pop push cmpsb mov fstps in mov fistpll jg dec xchg and popa insb test out mov xorl roll lods jne jbe jnp mov mov push dec je popa jbe int3 inc in mov andl cmpsl cmp fsubrs or (bad) sahf mov ss mov iret or mov xor int xchg in push or daa rorl in or lock pop js outsb (bad) aam mov out push cs les mov arpl aam jle cld movsb cmpsl sahf mov outsl mov pusha mov out mov inc icebp (bad) jb,pn lods outsb push fsub clc fimull jp aaa clc and push repz bound add fisub jb jmp dec dec adc loope addl and jae inc jecxz mov fwait sbb pop jle test cmpsb cli loopne icebp cmp nop fisttp or push insb adc js in adc jl jmp mov cmp push adc jp aaa mov shlb and rolb pop fsubr (bad) jo (bad) mov and or leave stos mov cmpsl es jecxz std leave movsb push lret popl (bad) or fs add aad cld mov or into orl fs mov xchg pop push int (bad) push scas inc fcmovne mov cli xchg xchg int3 iret out jne leave addr16 cmp mov mov add insb scas pop xor jno mov cwtl jbe xchg into int3 in popl out cmp push (bad) mov inc stc jbe flds and lds adc (bad) pop lcall lock dec (bad) test aam repnz mov adc lods mov nop mov (bad) ljmp jmp sbb mov pop jle and sub xchg fisubl loop push (bad) loopne rol xor push pop lods mov jmp pop cmpl xor mov or icebp mov xor inc int3 out push push leave and xchg push shll jo xorb xor dec lock or fsubrl cwtl mov out adc scas and mov push icebp test mov xchg jle lds fistp add addr16 sbb aam dec xor (bad) and adc dec cmp mov cmp aas and dec pusha in and inc bnd xor (bad) and xchg inc (bad) aas scas xlat push pop pop cwtd jecxz das push mov cmp ret push or data16 mov (bad) lcall or std fcompl mov rorl sbb jae and das jnp aad sbb xor (bad) pop inc sbb test sarl push inc and (bad) dec push inc sub push lods js inc out pop je addr16 sub int3 mov pop push xchg mov push std pop lret ret loop adc dec adc and dec roll pop or mov iret cmp add and and dec insb fisub aas outsb xlat mov dec add lock out loop jg lods enter xor jle or inc arpl or xchg ljmp out test cmp sahf sarb push ja jae hlt pop mov into inc dec sub pop pop (bad) (bad) test mov pusha pusha aaa je (bad) outsb sub (bad) imul mov out inc (bad) push lahf mov adc inc cmp (bad) imulb pop add rolb xchg mov pop xor test or (bad) icebp divl xor push jbe jae pusha outsl test inc lcall scas jb jmp (bad) out loope das sbb dec jno mov xchg outsl (bad) and btc imul inc les loopne mov imul bound push pop jl pop mov pop sahf and movnti (bad) scas sarb jb or fsubrs push das fsubrs dec (bad) pop outsb add push mov pusha push imul mov add xchg idivl jl fdivr and js (bad) mov (bad) xchg mov sub outsb dec pop dec adc (bad) (bad) cmc fwait lods stos adc mov out gs push mov lahf mov out inc movsl cmp pop mov add rol out outsl or (bad) xor mov out out push sub lods stos lret add popf call xchg lcall pusha setne inc xchg xchg pop into ljmp repz ljmp inc aad cmpsl mov lock adc pop cmp loopne out mov dec fs rol sub lahf iret ss jp mov push cmpb scas (bad) into mov adc insb cmp mov loopne lret push stc in and and xchg adc dec xchg in aam pusha push sub imul push loopne add fsubrl cld sub mov lahf push not loop xchg add rcrl outsb mov aad jns in mov mov incb mov stos subl xor in mov repnz shlb sti cmp push pop dec or add insl out mov dec clc fisubl push aas mov and push or (bad) lahf fsubrs (bad) or jns ds xor mov inc loopne cwtl ret mov lock push cmp and mov mov mov call out xchg jl adc in lahf cmc out es dec add outsb in lret es pop sub dec (bad) nop adc sbb in xchg lret cmc or or xor pop sbb cmpsb xchg and push adc incb push pop cmp stc mov mov jle (bad) xor add (bad) mov movsl fld loopne popa je xchg dec in int (bad) jae addb pop fstp cmp sbb loop and arpl es sbb add pop rcll out mov xor xor mov cmp push sub les pop jp leave movsb add push mov xor loopne pop adc dec mov mov pop cltd adc push jmp das jg sub and (bad) call cmpsl test js fimull mov jle shlb inc fnsave jbe dec inc pop push outsb lea arpl repz dec mov push std dec scas push ljmp (bad) mov xlat cmp sub pop push push cmpsb cwtl bound (bad) dec call and pop xchg dec push inc callw in mov (bad) xor int3 stos mov call pop pop aad stc push aas lea addl cmp test andb std out (bad) jne xchg ret pop in in (bad) ficom xchg lcall fbstp jbe lahf sbb arpl and push mov int pop jo mov sbb add mov cwtl push inc xor (bad) out inc cmp ret das (bad) xchg push es add add or pop jbe inc mov inc lods test add movsl bound mov inc mov mov xchg mov scas sti sbb imul add jbe pop xchg add scas mov sub aam int3 jle lahf cmc sbb sub lret mov mov pop dec (bad) cmp fmull xchg addr16 iret out out fisubl outsb jl insb in push dec dec dec xor les gs xchg out cld outsb dec ds fmull in jne lret negb xlat jns mov test pop int3 lret pop xlat orl fisubrl testb push lret add and and insb dec cmp ja in test lret add lods fmul mov push mov clc jl sti daa mov xorl (bad) mov cmp lods cmc cs xor xchg in sub bound xor adc push stos shl out xlat js push subl cmp push lods xor into mov pop cmp dec fmul inc dec clc addr16 and add inc adc mov jg inc dec clc imul popa test add inc inc inc fdivp imul (bad) pop cwtl jbe add mov imul push rcrl aam shlb dec mov (bad) sar inc fs (bad) lret pop and mov push push test add scas cltd movsb dec mov mov pop in xchg (bad) shrl pop gs outsb xchg cltd lret xor mov jae je mov mov leave in sub (bad) addr16 (bad) (bad) fisttp jl jmp (bad) jmp pop mov push mov xor push lods scas jmp popf leave inc loop inc mov (bad) xor mov js test ljmp and fidivl add sbb push (bad) pop pop pop in push mov imul adc in lcall movsb push fucomp (bad) pusha lods fs inc mov (bad) scas test inc notl jbe in cmp jge or push out adc fstpt je or pop adc mov mov mov stos aad lods (bad) mov iret xchg push pop xchg xchg aad sbb (bad) jns cli cmc nop sbb (bad) call mov push mov sbb jmp jns dec cmp (bad) add loope or jmp lea in fwait ret and mov adc mov outsl lcall cmp mov pop outsb jne or jno sti mov xchg int3 movsb (bad) outsl inc adc cmp (bad) aas mov push iret push or popa ljmp outsb mov int cmpsl insb cmc shlb cmp fildl insb add push xor and je cwtl fstps jge cmp sub clc enter pop and add adc lea rclb push movsb sbb daa inc sub (bad) dec cmp add sarl xchg jle cmp inc (bad) sub cmp jns dec mov cmpsl xchg xor xor out dec mov stos pop outsb pop in push xor cltd jbe push test dec sbb mov sub push in mov not pop and repz xchg or or push jle jns movl add not fsubl lcall mov jle daa popa inc mov loope int add (bad) mov mov xor sub rorl sahf in mov mov popa lahf pushf add icebp mov mov clc fimull xor inc pop icebp push sub or cmp or pop push jne mov fildl leave insb insb inc les add inc hlt repz es outsl mov test jnp adc or sub cmp rcrl and cmp mov add push fcoms cli xor and sub loopne dec leave popf in enter aas push sub enter lods dec hlt jmp cmp xchg push fsubs add pop pop data16 inc push xor out adc imul or lods jns cli (bad) cmp arpl int3 xchg cmc mov lods jg jp cli xor jg stos push daa pop inc out insb dec test out push jl adc cmp cmp mov rclb dec cld stos pop hlt mov mov adc and jno repnz fdivrs cmp mov imul leave inc repnz jo dec enter negb pop pop cltd push push cmpsb pop sub sub push faddl jle xor xchg es cld daa outsb jnp lock icebp pop scas data16 lret sub lock pop push or pop push outsb into aas push dec xchg aad pushf jb loopne cmpsb mov dec mov shll test pop iret inc outsl pop sub in push mov pop pop adc xlat movsl xchg mov out xor negl pop jge (bad) aad push mov popa sbb rcl data16 lret (bad) mov dec inc fwait lods imul dec iret mov nop iret and xchg and lcall cltd lods xor push inc icebp or adcb cli mov fucom or sub in imul arpl enter cmp push and sub dec shll cs inc xchg das sbb out push mov sub adc xlat cmp aad psubd sbb adc mov add adc or sti adc adc loopne popf xchg push imulb sub mov lods ja sbb or lock outsb gs into pop lock or movsl (bad) lret jge mov pop gs or fndisi(8087 push loop inc mov pushf incl enter in fisttp mov pop sbb nop sub jge mov movsb loopne mov sub nop xchg pop sub pop mov rclb xchg sarb sbb stos sub sub cli jo (bad) mov push addl ds addl cmp bound or jo push ja or push push pop inc ret dec and imul loopne outsl cmpsl dec lea scas in int3 jg ds sbb push aas dec stos ret cmp push pop sysenter pop adc mov and scas cmp stos or fsubr stc push push out mov pop popa or sti sti rcrl adcb scas popa mov inc ret pop (bad) test fst nop stos or and jno xchg and xchg das add jmp jp je and mov fcmovnb lods jne mov ljmp push roll mov cmp aas outsl inc xchg adc std xorl add fwait sub cmp push testb pop das test xor push mov cmp adc aas jnp push xchg cmp mov push clc xchg dec inc inc jne adcb jge call test out xchg aas outsl sbb inc sbb out imul int3 jmp mov pop and sahf leave test ja pushf add dec lahf push mov incb outsl mov insb push std inc sbb (bad) pop xchg xlat js cmp test popw js (bad) mov jg xor xor mov fwait std cmpl call scas push hlt cltd into or addr16 jbe insl fsubrs jno xchg and popf or frstor inc mov ret test mov xor daa lcall rcrl adc mov enter out jge pop int3 shlb in (bad) hlt pop pop ficom pop xchg mov pop cmp pop and (bad) jb jp jns std mov pop dec push loop jbe int adcb add clc jnp xchg add sbb shrl sub (bad) cmp jns into mov cmc cmp repz imul popa addr16 push jo leave sti pushf out mov xchg lret in repz cmp adc cli test fs in dec in jecxz push sbb repz mov icebp lock jecxz xor mov and shrl jp and add out lds xchg cmpsb out push fistpl mov fldcw add aam dec loopne les or and pop sub mov frstor fwait je adc xlat inc mov and pop xor mov adc lcall arpl push clc loopne inc sub mov in pop lcall push xchg jle rep cmp daa push cwtl dec repz into sub ss pusha push cmp jle xor sbb add xchg xchg int3 sbb xor les xor out ss jnp mov cmp (bad) gs adc pop jl inc xchg jno push clc and inc lods push inc and insb inc scas add out popf gs dec int3 pop (bad) or push das stos jle mov std repnz ja adc (bad) aaa dec inc scas push mov mov scas pop jp rcll out xor inc cltd (bad) and xchg push push gs bnd xor (bad) jg imul stos xacquire lock and out lods mov and mov out lock xor sub push xor lods es popa sbb xchg cs adc adc jl rcrb xchg ds add popf dec jp sbb in orl stos lret ss dec rcl inc sahf adc pop addr16 jne mov mov test dec lcall jg mov sbb mov minps push cld lods jb std sbb mov leave pop or fisttp adc nop push inc xlat movl dec sarb adc test lret daa or dec jbe or adc xchg out ret sbbl imul rclb insb jbe std les fwait outsl lock sbb sbb and lret stc jmp lods dec add or out jle dec push lds xchg push sbb pop int mov xchg jge and lahf inc mov jecxz xchg les or jns sar popf xchg jg sbb sbb mov test (bad) and push add and mov int3 rclb jno mov cmp mov insl outsl pop mov push ret aas inc fstl mov jnp sbb sub inc inc jecxz jg mov pop hlt loope stos sub sub adcl enter sub lret (bad) aaa pop sub fiaddl ds (bad) pop jl ss jbe sub js jmp mov xchg cmp adc push sbb in sbb mov std pcmpeqd setno repnz pop std sbb xor (bad) (bad) dec pushf xchg dec test inc mov arpl lds hlt lret loope pushf jge data16 mov insb bound inc sarb mov bsr dec insl sub push sbb push push lahf test adc shlb add mov pop mov fimul lret in insb jl into out mov pusha xchg (bad) mov fmulp (bad) mov mov jno ret push ds inc cli sub adc adc sbb (bad) sbb repnz cmp stc in addr16 dec jge test pop cltd or mov sub arpl popa insb xchg fldt jg jno bound hlt decb add gs mov inc xchg mov mov push add push dec clc stc xor lret sbb stos stos sbb xchg ja or inc xchg lods fldl sub fsubrl outsl mov outsl pusha inc mov cld scas pop icebp xchg sbb gs jnp mov and neg test fsub (bad) jae repnz add push or aam or sti out jne cltd int fidivrl pusha cmpsl push cmp xor out mov test xor xchg and push jmp in push aad adc movsb sbb xor xor loop mov js (bad) ja pop addr16 xchg in xlat inc inc xor fnop insl mov arpl adc daa adc mov jo ret icebp int3 xlat push dec test sahf and call loopne jl (bad) int3 fstpt add dec mov pop ja inc adc call add and jae mov mov xor or xchg nop lods stc fstpt mov and xor ret leave jge decl dec ret mov push clc cli mov mov jle test leave test and lock pop adc rcrb int aas dec inc fsubrs xor hlt pop loop enter adc xor xchg (bad) mov aam sub pop fnstenv in mov bound cmp or loopne jl push xor icebp add js outsb mov push mov loopne mov push push pop insb rcl mov xor scas adc add inc cmp jecxz push stos mov (bad) dec lods into jle jge sub lock fnsave fidivrl imul jg mov xchg cmp ljmp lods push out mov pop mov sar sub pusha mov add test inc cld push add rcll xor lods cmpsl inc int3 add gs cld cmpsb cmpsl jmp setb mov js fistp jne outsl pop sbb daa push les leave int xchg xor mov in das jne and cmp mov adc and lret mov cs fwait inc push jle imul jno or pusha gs int3 icebp jp sub mov fistl pushw out fisttpl inc cmp dec adc in sub add fstpl pop and arpl js mov cmp xchg es hlt adc inc fidivl addr16 mov insb and daa insb hlt arpl jne jb adcl mov dec mov mov neg dec ljmp push cmp push dec sub push cmp push fdivrl shll xchg scas aaa and dec sbb cmp lahf and dec mov push popa adc push mov pushf inc adc jle and or jnp lods ret lods sub xor (bad) and adc loopne sahf pop add jno and sub xchg push mov fwait loope dec mov stos and and push out sub xchg mov jmp int3 xor sarl scas cli or movsb scas jg fidiv adcb (bad) pop xor xchg pop inc or popa in leave popa stc and enter or cmp fisttpl mov pop lock rol dec popa and test in cmpsb xlat (bad) jo sbb enter pop xor sbb inc ret add mov dec jb inc sbb loope pop negb decb popf stos ja ja ret in push xchg loope (bad) lods jne xlat pop mov add inc insb js clc out jno cmp push mov sbb outsl repz dec xor xchg andnps (bad) cmp mov ja nop cmpsl jle or inc std jae (bad) scas cli or lret adc xchg popf xchg aas xchg insb js leave inc sbb sub (bad) xor arpl outsb cltd in in cwtd pop adc sub icebp xor std pop icebp test cli push leave sub push fsubs sub add dec jle pop xchg mov push lods push jno jge aas fidivrl xchg adc (bad) das mov mov mov cmp out sbb xchg lcall cld dec sub insl pop push adc in (bad) dec lds lea lods pop data16 xchg imul hlt and jae (bad) loope loopne or fsubrp arpl out dec mov mov cmpsb jp xor fisub movsb (bad) dec pushw inc push inc movsb or repnz sub push mov int3 xchg lret or bound dec rorb push mov sbb test stos pop popf sub and mov faddl dec out mov pop shlb pusha push or push test js in arpl enter ljmp add push mov and movsb fldt mov ret add bound xchg jmp rcrl and xchg andl test fbld cmp lock xchg in jl and xchg insb hlt inc fsubs popa out xchg jo or jnp int jg and cmpsl mov xchg lahf dec inc dec pop bound gs cld pop jge aaa aas jb pop popa fdiv mov jns sbb pop xor stos xor popa cmp push scas xor jmp sti lret aas mov fiadd mov push jbe and loop mov aam das sbb and cmp iret sub push cwtl dec xchg push cmp nop xor outsl pushf or xor enter ret std push mov leave mov inc int jne mov dec cmp xchg stc mov je ret mull xlat mov pop les and imul jno pop add (bad) xchg push inc sub mov add mov mov push push push aam add xor xor push (bad) xchg pushl lea dec xchg popf jns mov jae sarb push loop fcos jp outsl out call bound xor jo push sub cmp xchg push mov mov sbb xchg es mov adc cmp inc mov (bad) push enter inc cmp mov enter test inc jae rcrb jg aaa clc push in loopne mov cli inc adc in mov fs scas test mov push mov stos ljmp scas subl imul push lret mov cmc stos sbb adc fwait daa or mov sahf ret sub mov ret in fmulp es shlb jno xlat lods sub and adc test dec mov pop iret dec fiaddl cmpsl imul pop addl stos aas mov test lock add add jnp mov inc and fwait arpl inc cli popf into push fwait or pop sahf fwait out fsubl nop mov in pop stos mov (bad) hlt adc push incb inc push sub into aaa jne cmpsb adc jecxz mov pop pop scas jbe lahf xor sahf push sub (bad) and jns or mov addr16 cmp mov or push mov hlt outsl xor mov fidivrl or xor mov push mov adc scas xchg scas jno and dec es mov and or loope jnp mov test aad or lods add add js std in or or pusha enter sub test test ja icebp insb je data16 mov sbb mov (bad) rol or mov stc mov inc add mov movsb or sub lea insl roll mov shl pop sti xlat dec pop add les xor xor shl adc lcall mov in pop mov cli sub mov call data16 mov cld sub push xor add dec add (bad) loopne lods mov xor adc push aaa cmp js push cmp sbb xor mov pop push jp jne adc mov mov inc aad loopne ret jg int imul sub mov cwtl mov inc xlat mov fidivl push mov out xchg icebp add fisubrl pushf cs aam xchg das cltd rorb pop add dec cmp ficom ret dec insl lret lret test sti pop fdivrs int3 lahf (bad) add jmp xchg cmpsl popf je ljmp fs xor xor fildl call fmull int3 xchg or scas adc and dec push aam push sbbl push nopl fnstsw (bad) jle sub xchg ja add cld add gs jne rcrb sub dec in sub inc sbb mov ret jb bnd xchg sub cmp add and int nop mov mov and cld bound adc out mov stc mov cmpsb sub test or add mov adc dec sbb std stc sti or pop ljmp loope pop dec dec jnp,pt popa push lcall sbb fwait inc (bad) rcrl sar mov sbb subl sub fmul jae push lret ds push les in jne jl jmp fwait sub (bad) movsb push add inc inc lcall jmp nop xor inc lods mov push (bad) push repz neg stc in pop push iret and mov scas ret mov aam push jbe cwtl xchg loop cmp cmc pop imul xchg (bad) mov ljmp push popf sbb xchg or ljmp adcb pushf or das (bad) jle inc cmp lret in movsb adc mov loop xchg adc adcl test mov xchg mov das aas xchg and movsl mov scas lods aam es inc dec (bad) pusha pushf pop dec add sub out daa out mov xlat insl nop push sub dec mov dec lret sbb jg sarb push adc sub addl dec inc jl adc icebp sbb sub xor mov lock in adc negl cmpsl jp lds xchg enter iret inc mov dec mov insb sbb push into cmp inc or mov pop stos xlat sub rcll jne xor or rcrl roll or gs cmpsb (bad) movsl insb nop out repz dec push test adc daa sub jge scas int3 xor ljmp (bad) or xor mov sbb fsubl out xchg loopne (bad) lock (bad) out push cmp js and (bad) mov xor adc dec clc nop mov lods ljmp aam outsl mov das sub nop cltd push or out in jg push and mov jne jge lret movsb pop sbb or (bad) cmpsb dec icebp jns mov daa dec leave pop aam mov xchg int mov movb push jecxz mov jae sub test addb mov iret clc int3 popa movsl mov jp and call mov dec pop pop cmp pusha dec add and dec (bad) jg adc fwait pushf in sub outsb enter mov push int dec loope mov stc dec inc lock (bad) mov cmpb push cmpxchg loop pop lock mov test mov pop ret push mov jns std cld dec xchg jle jnp and in cli and mov push sub scas jecxz dec (bad) fstpl sub (bad) xor aaa pushf xor and cmp pusha xor in add fnstsw bound (bad) or jle mov stos xor jge or stos in mov lcall sbb mov sub mov test mov adc mov pop xor cmp lods test out movsb enter into (bad) sub mov xchg out loopne inc lods pop icebp insl mov xor scas enter push test inc xchg mov inc mov mov push inc dec xor lea test sar (bad) sub ficompl rcr decb scas or loope jnp and jbe mov sub or add cmpsl sahf cli stc pop xchg shrb andl (bad) lret jmp ds add in mov lcall sub jb,pt jg loope (bad) xchg xchg aas inc jno fwait pop pop lock pop leave es cmp jmp js inc out loop sti scas push (bad) in cmp cli jge dec sbb xlat fsts inc jecxz loopne push lcall scas mov push mov sbb idiv cmp icebp out sub or mov (bad) iret inc add les bnd xchg cld in sub mov popa xor enter mov dec aas mov jno mov dec sbb rcll repz and fmul sbb or jae jns push or loopne sub xchg in cmpsl sub add fwait inc outsb lret inc jae in test or jecxz imul out fildl or xor dec add xor add jle mov lahf jp add sub push lock sub or fwait aas cmp ret or test (bad) sub or xchg pop das sti or cmp mov xor lods adc stc and jp sbb mov dec fistpl or sbb cs stc sub stc cmp test rcrl out arpl xlat inc sub jne repnz dec lahf sahf dec pusha mov mov pop push mull lds mov dec inc jg push dec prefetcht0 adc (bad) mov cltd fcoms pop pop inc loop out adc lods fisub (bad) jno testb aas xor in (bad) xor lret loope jns jbe outsb jbe jo ret test adc mov push push lods add dec push xchg mov jg mov and lea std outsl cmpsl popf push clc test xchg inc dec push js out dec ljmp rorl push je sub int3 inc mov in inc out dec push push push xchg lods push mov mov (bad) pop es mov into lock das cmp (bad) fwait int dec repnz (bad) dec sarl adcl fwait mov leave ss mov pop push fwait mov cmpsl mov cmpb push insb add xchg shl or mov inc gs jbe add lret cld sbb push pusha jne sbb rcrb les jl cmpsb mov push not push mov push cmc dec jge adc repz ret leave jns jge jle xor sbb sbb sbb je inc adc popf sti cld gs or fwait sbb bound ljmp jmp sub mov xchg add or je (bad) lret cmp out decl mov fs pop mov mov test or cmp movsl sbb lret fwait sti cmp stos (bad) cmp dec mov in and call mov xchg xor xchg das dec jae pop xor pop je clc sub incb out mov adc mov fstpt shrb stos cltd (bad) mov ds scas mov (bad) cs add xor scas cmpsl dec jae sub xor inc lds lea roll mov aad xchg cmp mov dec les push lret sbb dec es jb imul adc push mov mov fs mov dec aaa sarb into out adc lahf push addr16 sub repnz bound sbb and cmp insl fcmovnbe bound rorb mov push (bad) adc (bad) mov (bad) sbb gs dec scas sarb test pop push dec das pop call clc dec fmulp jnp fidivr sbb cmp fistl (bad) push and add or adc cmpsl adc (bad) imul pop in or jns fucom cmpsb loope add lsl inc aad and addl (bad) add pop call xchg xchg jecxz jle je iret xor xchg cmc jo cmp or push sbb iret pushf xlat sbb push push xchg dec lret in jno pop nop je pop inc roll mov xchg push (bad) not cmp rorl scas and out push roll pop sub push adc pusha dec test sub movsb dec pop arpl mov ds fild orl mov loop hlt cmp sti cmp (bad) das adc sub int jo lods test vpacksswb mov xlat dec mov sbb jle fist cmpsl mov fadds das mov cwtl mov push cmp negl jbe jb (bad) mov jge sar shrl jbe lock jnp jns cmc addr16 add into xor inc iret imul sub clc add mov hlt (bad) cmpsl xor xor xchg pop adc pop lcall push lahf gs shrl push leave push lds lcall sti pop fisubl push (bad) addr16 jnp pop add out push test jl pop fsubrs push jae push xchg repz out adc int3 in daa call push (bad) and pop popa leave cmp sbb fs mov js jo arpl loopne icebp lret cmpsl fidivrl adc jae in mov in int sub adc and lahf repnz push int3 inc mov pop mov dec pushf pop outsb inc jl mov daa fimull repz aas rolb rclb cltd mov cmpsl pushf adc fldl inc lret cmp inc dec fcmove add jno in pop aas dec mov sub jno aaa adc and or sub (bad) mov pop or or repz je movsl jge jo sbb lds xchg sub insl rolb gs loopne (bad) call lock sahf and fmuls push add inc mov or cli cmpsl fs adc adc mov enter ljmp cmpsb cs sbb dec mov and sbb lds ss push mov lcall xchg jmp mov call lock jecxz rorl mov (bad) cmp push push je movsb ret out jb popa sbb std or int or shll xchg mov adc popl gs jbe loope cld cmp lock ss es daa jnp into mov fwait aad ss mov and in data16 add xchg aas xor mov out sbb cwtl inc sub and ja push out push call mov rorl add fisttp into (bad) pop outsb sbb xor mov je jg arpl jae xor loope dec push movsb push pop or and out repz mov pop lret outsl dec fidivl pop sbb scas pop add xchg shrb xchg aaa jns dec cld jns fisubl addr16 jns lds pop xchg xor repnz xor test inc add dec mov lcall jp adc dec mov xor scas pop push (bad) gs lock xor lods mov xor pop imul mov and aaa sbb sahf add scas (bad) dec push pop or bound lock pop cmpsl dec sub daa push lods shl test cmp ficoml cs xlat in push pop scas bound jnp and out insb sbb sbb pop enter lret pop sbb xchg hlt mov cli jp push mov lret scas jecxz ret dec mov imul push lock cmpsl xor insb mov jbe popa (bad) (bad) pop sub inc adc loope cld lock push dec stos int dec xor jl lahf inc mov cmp or test cmpl fsubrp dec lods daa (bad) rclb sbb pop inc jecxz jo iret mov loop push jecxz sbb out leave nop jno jb sbb loop dec iret inc imul sbb xor pop mov sub fwait xor sbb pushf (bad) call imul xor inc (bad) cmp mov inc cwtl xor outsl xchg ficom rorb xchg xor out cmp popf xor (bad) aam ds push push or push aas jmp imul dec test cmp add (bad) lret and orps int3 and mov or and bound stos and push jecxz sub (bad) xor outsl add cmp add sbb pop adc into xor aaa icebp dec imul jo into dec xchg pop loopne mov hlt rcl jecxz or rolb lock sub repz in mov les add pop pop push pop pushl dec fsts imul es je push dec daa xor (bad) lcall cmp cmc cmp mov adcb push pop mov push jnp cmp cmp mov icebp call fwait outsl xchg xor in xchg repz (bad) push push mov or pop mov cmp out or repz fxch idivl push (bad) mov add mov shl xchg mov lcall xor call lahf push inc pop test and sub push push pop fistpl mov xor push scas movsl sbb cmp (bad) add jmp mov jl cmpsl shrl or mov in test fiaddl cmp inc push mov imul push adc jo in mov (bad) jecxz aam in mov out pop loopne adc out int3 scas inc fcomi js,pn (bad) sbb div push or aaa fucom xor test pop shrb out push mov push into add or sbb inc ljmp int xorl cmc push scas jecxz ljmp xchg xor icebp or (bad) loope xchg (bad) xor pop addr16 pop dec nop cld cmp inc sub lfs popf jge cwtl xchg call hlt dec push loope add xchg ja xor add mov test xor and loopne stos xor cmc push sub in pop notb pushf or push popa dec dec cld popa jnp test imul pusha jns push ljmp lods lock bound jb dec jae jle jnp (bad) jecxz add ret lret inc pop (bad) (bad) mov push mov daa gs xor popa adc (bad) lods push jo rcrb and lret ljmp add mov clc cmc sahf repz jbe roll out pop mov dec pop loop and mov cmp nop rol sub jmp loopne or fisttpll and mov sbb lahf jmp roll adc and mov pop xor adc jno jl sub test loopne fimul insb (bad) mov mov sbb mov mov test add (bad) pop push jne xchg out lods xchg adc popa andl pop out mov push call pop dec mov or pushf and gs mov inc pop fnstenv jmp xchg dec jge lds push xchg fidivrl loop pusha gs sbb and cmp dec daa scas sub and xchg ljmp loop fcoml jmp and ja nop movsl jns fimul cltd movsb add dec sbb pop fdivs or jp fistpll xor in inc inc add daa idivl lds adc inc cmpsb daa dec mov or mull jmp stos or adc sbb lahf mov cltd stos inc pop cld outsl pop outsb mov ja mov into sahf sub xor pop push incl inc mov inc pop stos jne dec push jle dec jbe push ror xchg adc jmp mov xor test into insb cs lea push iret lea adc pop jae xchg pop andl xchg ds mov xor (bad) jno or mov pop das fidiv je insb xchg xor dec stos xor cltd leave arpl mov (bad) pop mov in cld xor jnp jmp sahf xor lret and out pop test das mov in jle or movsl adc mov movsb jle jecxz push pusha add mov aad mov dec sbb adc rolb jp lahf push in insb cmc xchg mov out fsubl cld (bad) jle mov and fmuls add mov (bad) push push and mov add mov dec jle inc mov cmp jb mov daa xor mov mov inc (bad) xor fdivrl in mov fsub inc jnp jmp ret jo jg jle das xor test cltd push mov xor jno out jmp sub mov clc insl cmp repz loopne adc jg stos mov test lcall pop sahf xchg sub leave jns lds icebp xor jbe scas jmp push inc iret les adc push sti xor cmp push test push xchg loope xlat pop and or jnp jp in pop shrl arpl mov test jnp dec fcoml push cmp adc inc nop test rcrl pop stos cld lahf iretw jns pop push sbb repnz decl or stc insb std mov pop subl xchg pushf mov dec dec lret (bad) ja (bad) mov call or add stos call push cmc bswap es lgs cmp sbb in sub cmp mov mov stc mov add sahf jp cmp mov cmpsl dec add (bad) or scas mulb inc push fdiv jle addr16 cmp inc std lret enter sti and fist mov push mov addb push mov mov sti mov out (bad) mov mov ljmp sub jmp pop lahf cmp xlat mov push push enter push xchg pop movsl imul loop test fdivl lds and fs mov (bad) cld in out lret mov xor test es fimull or in outsl adc jl sarb and sub jl,pn dec popf out add add dec clc je in sbb addr16 int3 cmp jg pmaddwd lcall insl sub xchg inc cmp adc pop in mov fadds push ljmp sub dec (bad) jbe inc bound hlt ficom xor fs push aaa mov mov leave fcmove push cld xlat inc je test shr mov out push in dec or movsl std idivb lea jp outsb mov sub clc lods aad popa xor dec daa lret sbb ds pop pushf pop shlb pushf sub fs mov dec mov div cli and leave pop sti fidivrl dec (bad) jb jno push cmpsl in (bad) sub (bad) nop inc push gs ja stc inc out inc ja push das jae push mov mov xchg in pop bnd and adc add hlt rcrl mov lcall insb jno and push cmpsb call hlt dec leave test outsl cmp insl aad sti mov out stc (bad) mov push pop inc pop xor fnstenv and xor cld cs xor inc xlat adc cwtl cmp andb stos stos lock sub les jmp popa jge xor xchg icebp inc jle cmpb pop outsb aaa cmp (bad) adc add popf push adc xlat dec cmp movsb mov xor les aaa jbe fdivl sbb imul test movsbl push mov jnp pop clc and push inc add test cmpl jp lds (bad) out loopne stc cmp jae mov repz dec jmp jbe rcr std aam leave pusha mov jne dec test rorb adc or mov shr jle daa add xchg mov test inc (bad) xor les ljmp movsl clc xchg aas lret push imul jae dec xor insl and adc iret jae mov sub out scas sbb out (bad) out call icebp (bad) scas sub outsl sbb addr16 dec aam xchg or inc cmpsb rep ds and jno or outsl int3 or or .byte dec add add add add add add add push enter add or add add inc add add add add add add and add add and add adc add adcb add push add add and add adc add addb add cmp add sub add add sub add xor add or add rolb add add adc add outsl adc add and or push outsl push add or xor add or cmp add add or sbb add sub add or or cmp dec loopne and and adc loopne add sbb add adc and or aam sub or mov push pusha adc and out inc adc push adc sub pop and dec adc and dec pop adc adc and sub adc sbb sub adc sbb sbb dec loopne adc pop dec sub adc sbb sbb dec sbb sub adc sub or adc adc adc adc adc sub add adc adc push rcrl pop pop adc adc pop pop adc adc or mov or or or or push adc or or adc or or adc or xchg and rolb adc adc adc xchg adc xchg popa data16 adc adc xchg pop and adc adc adc or pop or sbb loope sahf adc adc xchg pop les adc adc or adc adc or xchg pop ficomp adc adc or adc adc or xchg sbb adc adc or xchg pop dec pop pop adc adc or xchg pop cli pop pop adc adc adc xchg sbb adc adc or xchg sbb adc adc or xchg pop negl adc adc adc xchg pop adc adc or adc sbb adc adc or or or adc xchg pop sahf adc adc xchg adc adc or sub or push adc push xchg and jnp sbb data16 adc adc xchg pop sbb pop adc adc adc xchg adc adc or xchg sbb adc adc sti mov pop pop adc adc or or or pushf pop sahf adc or xchg pop fistpl adc or or or or rcrb adc adc sahf adc and sahf adc adc xchg adc xchg popa sahf adc or or or xchg and es sub or movups setne sbb scas rcrb adc xchg pop push bound adc or movups setne adc xor sahf adc or and (bad) lods pop adc adc adc xchg pop or adc idivl sbb pop adc adc movups setne and cmp popa sahf adc adc xchg adc pusha sahf adc adc adc or adc or or or and cmp or xchg pop or or adc xchg and pushl popa data16 adc or or or adc adc xchg and xchg ret pop sahf adc or or or adc adc xchg pop adc adc or or or adc xchg and (bad) lods pop pusha sahf adc adc sahf adc adc xchg adc sahf adc adc xchg and cmp or or or or xchg popa sahf adc or or or and sub pop sahf adc push xchg and test pop pop adc adc movups setne or or push adc xchg adc and loop add pusha sahf adc xchg and sbb jmp or push adc or sahf adc and adc adc adc adc push xchg pop or adc adc push adc push xchg pop adc sahf adc or adc adc test sahf adc adc xchg adc xchg popa data16 adc xchg pop adc or or adc or adc xchg and out push pop sahf adc push adc push xchg adc pusha sahf adc adc xchg adc or fsubrp pop pusha sahf adc adc xchg adc adc adc xchg pop or adc push adc push xchg adc sahf adc or xchg and out push pop sahf adc or or or or xchg pop sbb adc or or or adc or or or and sahf adc adc xchg adc sahf adc adc xchg push bound adc or xchg popa sahf adc or or or xchg popa sahf adc adc xchg adc pusha sahf adc or xchg adc and pusha sahf adc adc xchg adc xchg pop sahf adc setne mov or xchg and fdivr pop adc adc setne rolb add pop adc adc adc xchg and sahf adc adc push xchg pop mov adc adc xchg adc or std pop pusha sahf adc xchg pop sbb adc or push xchg pop sbb adc adc xchg sbb adc or or adc adc or or or add adc and adc adc or or or xchg popa sahf adc or xchg adc xchg pop sahf adc adc xchg adc adc or or or imul adc adc xchg adc sahf adc setne xchg add add adc or or or or xchg popa sahf adc adc push xchg pop mov adc adc xchg adc adc setne pop std (bad) lcall adc adc or or pop adc adc adc or adc adc or or or sahf pop sahf adc or push xchg and add pop pop adc adc or or pop adc adc or or lcall adc adc or or adc adc adc xchg adc adc or or pop adc or movups adc push adc sahf adc adc or adc adc or or adc xchg and sbb mov sbb adc or or adc and add add adc or adc xchg and adc pop sahf adc or xchg and pop adc or xchg pop movsl pop adc adc adc xchg adc adc adc adc or xchg and (bad) lcall adc adc or xchg and add add adc adc or or or xchg pop sahf adc adc xchg and add adc adc adc xchg and pop adc adc adc xchg and add add adc adc adc xchg and (bad) (bad) lcall adc adc or or or aad sahf adc adc xchg and (bad) (bad) lcall adc adc or or pop sub adc adc or or pop inc pop pop adc adc adc sahf adc adc or pop ret pop pop adc adc xchg sbb adc adc or or and pop adc adc or adc adc adc or xchg pop repnz pop adc adc xchg pop cvtps2pd adc or adc sahf adc xchg pop hlt pop adc or xchg pop out adc adc adc xchg pop out pop pop adc adc or xchg pop pop pop pop adc adc or xchg pop out pop adc adc or xchg pop or adc or xchg sbb adc adc xchg pop ficomp adc adc adc xchg pop daa pop pop adc adc adc xchg pop or adc adc adc xchg pop cld pop pop adc adc movups setne or sahf adc adc xchg pop negl adc adc adc sahf adc adc xchg pop std pop pop adc adc adc xchg adc xchg popa data16 adc adc sahf adc adc sahf adc or adc or or or adc adc xchg adc adc xchg pop adc adc adc xchg pop adc adc or or or adc sahf adc adc xchg adc setne sahf adc adc adc adc xchg adc pusha sahf adc xchg and and loop adc or push xchg and dec in pop adc adc push adc or sahf adc adc xchg and (bad) sbb pop or adc inc lea pop sahf adc adc xchg and leave cli popa data16 adc adc xchg and outsl lock data16 adc xchg and dec stos stos pop adc adc adc xchg adc or es pusha sahf adc or xchg and (bad) sbb pop or or or and lods pop push pop sahf adc sub adc or or xchg adc movsl or adc adc xchg and mov push pop sahf adc sub adc or adc xchg sahf adc adc adc or or or adc adc adc and mov adc or adc xchg adc xchg and dec stos stos pop pusha sahf adc adc xchg adc adc adc xchg pop stc pop pop adc adc adc xchg and mov push pop sahf adc adc xchg adc and pusha sahf adc adc or adc or adc jne cmp sbb adc adc or or adc adc adc or adc adc or xchg pop bound adc or xchg pop sti pop adc adc adc xchg sbb adc adc or or adc adc or xchg sbb adc adc adc xchg pop stc pop pop adc adc adc xchg adc adc adc or adc adc or xchg adc adc or adc adc adc sahf adc or lcall adc or adc xchg adc xchg popa data16 adc adc xchg adc adc adc sahf adc or adc or adc xchg and sahf adc or or lcall adc adc or xchg pop cmp adc adc or xchg pop lock pop adc adc or xchg adc sahf adc or add adc adc or xchg pop ss pop adc adc adc xchg and (bad) lcall adc adc adc xchg and in pop sahf adc adc xchg pop cmp pop adc adc adc xchg pop bound adc adc or xchg pop jmp adc or setne bound adc adc or xchg sbb adc adc or setne bound adc adc or xchg pop jmp pop adc adc adc setne out pop adc adc or adc adc adc sahf adc adc setne bound adc adc or setne adc movups sahf adc adc sahf pop inc adc adc or push sbb push adc sub add push adc adc adc add push sub add adc add push add add add adc add dec sub add rcrl pop pop dec loopne or rcrl pop pop dec sbb or sub push and popa push add push push dec pop pop or add add add push push or pop or pop aaa rolb add add add add pop adc or add add or xor add add add sbb or fs sbb add bound add pop or adc or pop or pop adc movb add add xor add add add add add inc xor sub or or sub push pop maxps pop maxps xchg add sbb add and sub pop pop or pop pop or add iret sub add popl add popl add add add popl add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or mov add pusha sldt and add add nop pop add and jb outsb addr16 add add add and add add adc add and dec inc add add add sub add and outsl bound add jl add adc add and dec inc add add add and jb outsb addr16 add add add add inc insb outsl bound add xchg das add add add and push add add add inc add mov add cli and add add add add adc add adc add dec add add add add add add add add add add add add add add add add add add add pop add add add add add add add add add add add add add add add or add and add sbb add and add pop (bad) xor add add add add (bad) jg add add add add add add add add add add add add add in push add add add push in push push add xchg add add add add add pop loop push add in or (bad) xchg add add or or adc mov mov or push add or or add mov or add add or pop push add jbe push add adc adc push add xchg add add inc adc add test add adc adc add adc adc add adc adc add adc adc adc adc adc adc adc adc adc adc add adc add add adc add add adc adc add adc adc adc add adc add add pop adc add push push add add adc add add adc adc add adc add add adc add add in push add in push add adc adc push add add stos adc adc add add adc adc add add add adc add add adc push or pop adc add add xchg add add add mov add adc adc add mov and push add adc and in push add arpl push add add lds in push add pop ss push add pushf push add add push add add add add add add add add add add add add add add add add add add add lock add add or add add adc addb add add add add add add or add add add add add pop add add or add add add add add add add or add add or add add add add or add add add add fs dec add add add adc dec add add add add cmp add add add push add cmp add add add sldt cmp add add add add add add add add add add push addl add xchg adc jae xchg add add xchg adc clc or cwtl add add or xchg xor sbb add add fild xor clc or add add add add add add push add add push cmp adc xchg pop add add inc add pop add add add add add add add addb add xchg add add lea add add add add pop add add add add xchg add add ds add add add add aas pop add add add add add add add pop add add add add pop add add add add add add addl add add add add xchg jg add add add add add add imul add add add add add add add add add add add add pop add add add add pop add add add add add add add add add add xchg add pop mov add push add add add add loopne pop add add add add add add add add add xchg add add add add add add add add add add add add add add add add add add add add add add pop add add add pop loopne add add add add pop out add add add add pop icebp add add add add pop sti add add add add add add add add add add add add add add add add inc pop add add add add pop add add add or push add adc popf pop push add add push pop add add add add add add pop add add add add pop add add add add add add add add add add pop add add add add pop add add add add pop add add add add adc int3 add add add add add add adc jae mov push add inc pop add add add add add add add add pusha pop add add add add inc pop add add add add popa pop add add add add pop add add add add add add add add add add add arpl add add add add adc mov ret add add adc xchg or add add pop add add add add adc popf pop out push add push adc xchg pop in add add pop add add add add add add pop add add add or add add pop add add add or add add adc jmp adc push add insl pop add add add or add add pop add add add add add add add add pop add add add add add add add add add add add add add add add add add add add add pop add add loop add add loop roll jg inc add add pusha add add inc add add inc add add inc add add inc add add inc add add mov add add add inc add add inc add add inc add add inc add add add add add add or mov adc add add into add push adc add bound (bad) add add add add add add inc add fwait adc add add imul add add add add add add jg sub add ss add adc or jg add add adc adc jg add add adc jns or add jg inc add sbb add add jno jns dec adc add add add add inc add jg inc add jg aam push add fiaddl add adc add add adc add into add or push adc and cmp dec adc push adc jne ja push add test add inc add fiaddl add add mov mov add loop mov add or imul mov push xchg add add inc add add push push push add adc adcb push or jg inc add push xchg add add add add push xchg add push mov push inc add add pop add push add pop leave push mov add push or dec pop into add push jns arpl pusha add add mov jno adcb push cltd add add inc add add add mov add scas add add cmpsb add add into add add dec add add dec add add add add add add add add add add add mov add add dec add add pushf add addl add add add pushf add jg jg jg add add pop add add add add add add add add and add add add add js add adc mov add add push add add add add add add add push add mov roll adc and push pop push xchg push mov mov push add add add add add add add fiaddl add pushf or xor add add add add add add add add in add add add and add add add push add sbb add add push add add pop add add pop add add mov cmc dec dec lahf aad leave aaa cwtl data16 scas pushf push push xor push int adc jbe push fcoms xchg movswl jo fs roll insb test shlb pop clc sub cli aaa push lea lahf or lods cmc mov xor outsb sub dec jnp and xor mov es insb push push dec fndisi(8087 (bad) sarb mov mov jecxz mov push push push test xchg into ds mov xchg xchg add or (bad) jg add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or or add add add add add add add add add add add add add add add add add add xchg pop add add inc add add xchg pop add add push add add xchg pop add add push add add cltd pop add add push add or add add xchg pop add add pop add add cltd pop add add pop add add cltd pop add add pop add or add add xchg pop add add pop add add xchg pop add add popa add add xchg pop add add add add xchg pop add add ja xchg pop add add jnp xchg pop add add jnp cltd pop add add test xchg pop add add xchg xchg pop add add mov xchg pop add add mov cltd pop add add mov xchg pop push add add add add add cmp xor add add add add add add test and pusha add cmp jle pop add add add add add add add add add add add add add add add add add add add push add pop add popf add add add movsl add add add add add add add add or mov or mov or add sldt adc mov adc mov adc pop add add add add add add sbb mov sbb mov add add add add add add add add add add bound outsb outsb gs cs add gs arpl outsl jb loopne mov movsl loopne mov test mov loopne mov mov mov (bad) mov mov mov mov mov mov mov (bad) mov mov mov (bad) mov mov mov loopne mov mov mov (bad) mov mov loopne mov mov mov push imul jb je arpl gs gs xor cs insb add mov (bad) mov mov mov loopne mov mov loopne mov mov mov loopne cmpsb loopne movsl loopne movsb loopne cmpsb (bad) mov mov (bad) mov mov mov loopne movsl (bad) mov mov mov mov loopne mov movsb loopne mov mov (bad) mov mov mov mov (bad) mov loopne cmpsb (bad) mov mov mov loopne movsb loopne cmpsb loopne mov mov mov mov (bad) mov mov mov (bad) mov mov mov loopne cmpsb loopne mov loopne mov loopne movsl loopne mov mov mov mov mov (bad) mov mov (bad) mov mov (bad) mov mov (bad) mov mov loopne mov movsb loopne mov (bad) mov mov loopne mov mov loopne mov mov mov mov (bad) mov mov loopne mov mov mov loopne mov mov mov loopne mov mov insl jae outsl jb imul arpl jns je insl add mov loopne movsl loopne mov mov loopne mov mov mov mov loopne mov mov mov mov loopne mov mov mov loopne mov mov (bad) mov mov (bad) mov mov mov mov (bad) mov mov loopne mov mov loopne cmpsb (bad) mov mov mov loopne mov mov loopne cmpsl loopne mov mov mov mov mov loopne cmpsb loopne mov mov mov mov loopne cmpsb (bad) mov mov loopne mov mov loopne cmpsb loopne mov mov mov mov mov mov movsb loopne mov mov (bad) mov mov (bad) mov mov loopne mov mov mov loopne movsb loopne mov mov loopne mov mov mov loopne mov mov (bad) mov mov mov (bad) mov mov loopne mov mov (bad) mov mov loopne mov mov mov loopne mov mov mov mov mov (bad) mov mov mov loopne test mov mov loopne mov mov loopne mov mov loopne mov (bad) mov mov mov mov (bad) mov mov push jns je insl cs imul inc outsl jb jae inc outsl jb add (bad) movsl add mov loopne movsb loopne mov mov (bad) mov mov loopne movsb loopne mov mov (bad) mov mov mov loopne cmpsl (bad) mov mov mov mov mov (bad) mov mov mov mov mov loopne mov mov loopne mov mov add mov mov mov loopne movsl loopne mov mov (bad) mov mov mov mov mov mov loopne mov mov mov (bad) mov mov loopne test mov mov loopne mov mov loopne mov mov mov mov mov (bad) mov mov loopne cmpsl (bad) mov mov (bad) mov arpl add je jns dec gs outsl fs outsb outsw add jae gs cs gs arpl outsb add je jns outsl imul add jb inc insb outsl jae outsb addr16 jbe outsb je jb jae loope lods add outsb je jb jae inc imul imul addr16 (bad) mov loopne mov mov loopne movsb (bad) mov mov (bad) mov mov (bad) mov mov loopne mov mov loopne mov mov loopne mov mov mov loopne mov loopne cmpsl loopne mov mov mov loopne mov mov loopne mov mov dec jne je arpl je gs gs je add jbe imul imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul outsb fs outsb jbe imul mov loopne mov mov mov mov loopne mov mov mov loopne mov mov mov loopne mov mov mov loopne mov mov loopne mov mov (bad) mov mov loopne cmpsb loopne mov mov loopne test mov mov loopne mov loopne mov mov loopne mov mov (bad) mov mov loopne movsb loopne mov mov loopne mov mov mov (bad) mov mov mov mov mov mov loopne movsb loopne mov movsb loopne movsb loopne mov mov mov mov loopne mov mov loopne movsl loopne mov mov (bad) mov mov loopne mov mov (bad) mov mov mov mov (bad) mov mov loopne mov mov loopne cmpsb (bad) mov mov loopne mov mov mov mov mov dec inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add add jb addr16 mov mov (bad) mov mov loopne mov mov mov mov loopne mov mov loopne mov mov mov mov loopne mov mov mov loopne mov mov loopne mov mov mov mov loopne mov loope mov gs bound push gs insb jbe inc jbe outsb je jb jae loope mov and xor and xor loope movsb add jae gs cs jb ja outsb add jp inc add je push arpl gs outsl fs (bad) mov (bad) mov loope mov (bad) mov loope mov (bad) lods add imul jns je insl cs arpl imul arpl loope mov (bad) mov loopne mov loopne movsb loopne movsb loopne movsb loopne mov mov mov loopne cmpsl loopne mov mov mov (bad) mov mov (bad) mov mov mov loopne test mov (bad) mov mov loopne cmpsl loopne test mov (bad) mov mov mov (bad) mov mov loopne cmpsb loopne mov popa insb jne push jns gs mov loopne mov mov (bad) mov mov mov mov loopne mov mov mov mov mov mov mov loopne mov mov mov mov mov mov (bad) mov mov mov loopne mov mov mov mov loopne mov mov loopne mov mov (bad) mov push jae jb outsl outsb je outsl insb add je jns add and add je push imul add mov loopne mov mov loopne movsb loopne mov mov loopne mov mov mov mov (bad) mov mov mov loopne mov movsl loopne mov mov loopne mov mov movsb (bad) mov mov loopne mov mov add je imul add jae gs cs outsl outsb imul je outsl outsb add insb outsl jb loopne test mov loopne cmpsl (bad) mov mov (bad) mov mov mov loopne movsb (bad) mov mov mov mov mov mov mov (bad) mov mov loopne mov mov loopne movsl loopne mov mov mov mov loopne mov mov mov mov mov mov mov loopne mov mov mov mov mov mov loopne mov mov mov (bad) mov mov loopne mov mov mov loopne test mov mov loopne movsl loopne mov movsb (bad) mov mov jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add mov (bad) mov mov mov loopne mov mov mov loopne mov mov (bad) mov mov mov (bad) mov mov (bad) mov mov mov loopne mov mov (bad) mov mov mov mov mov mov mov loopne mov mov mov (bad) mov inc jne je jb dec outsb outsw add jae gs cs insb outsl bound imul add mov mov loopne mov mov loopne test mov mov loopne mov movsl (bad) mov mov mov loopne cmpsl loopne test mov loopne test mov mov (bad) mov mov mov loopne mov mov loopne cmpsb loopne cmpsb loopne mov add je popa jo loope mov (bad) lods add (bad) mov (bad) mov loope mov (bad) mov loope mov (bad) mov loopne mov mov mov loopne mov mov (bad) mov mov loopne mov mov loopne mov mov mov mov loopne mov cmpsl loopne mov mov loopne mov mov loopne mov (bad) mov mov loopne mov loopne movsl loopne mov mov mov loopne mov mov loopne cmpsl (bad) mov mov mov mov mov loopne mov mov mov mov mov mov loopne cmpsb loopne mov mov (bad) mov mov mov (bad) mov mov mov mov loopne mov mov mov loopne mov mov mov mov mov mov (bad) mov mov (bad) mov mov mov loopne cmpsl loopne cmpsl loopne mov mov loopne cmpsl loopne mov mov mov mov (bad) mov mov mov mov loopne movsl loopne mov mov (bad) mov mov inc jo inc outsl insl popa imul push imul loope movsb add (bad) mov (bad) mov loope mov (bad) mov mov loopne movsb (bad) mov mov (bad) mov mov (bad) mov mov loopne mov loopne mov mov (bad) mov mov mov mov loopne mov mov (bad) mov mov (bad) mov mov mov mov mov (bad) mov mov (bad) mov mov push gs imul jae outsb gs cs jb jo jb imul insb imul push gs imul add je inc gs jne je inc gs jne je loopne mov mov mov loopne mov test mov loopne mov mov loopne cmpsl (bad) mov mov loopne movsl loopne cmpsl loopne mov mov loopne cmpsl loopne mov mov mov loopne cmpsl (bad) mov mov (bad) mov mov loopne mov mov mov loopne mov aaa xor xor aaa xor inc aaa cmp inc xor xor cmp inc xor inc cmp cmp inc xor inc inc xor cmp cmp xor inc inc xor xor aaa inc xor inc cmp inc inc inc inc cmp (bad) mov mov loopne mov mov mov mov loopne mov mov mov (bad) mov mov (bad) mov mov mov mov (bad) mov mov mov loopne cmpsb loopne mov mov (bad) mov mov loopne mov mov mov loopne test mov loopne mov mov (bad) mov mov mov mov loopne mov movsl loopne cmpsl (bad) mov mov loopne mov mov loopne mov mov mov loopne mov loopne mov mov mov loopne test mov mov mov loopne cmpsl loopne mov test mov loopne mov mov mov mov (bad) mov mov loopne mov mov loopne mov mov mov loopne mov mov mov loopne mov (bad) mov mov loopne mov mov mov mov loopne mov mov loopne test mov add mov mov mov loopne mov mov loopne mov mov mov (bad) mov mov mov mov loopne cmpsb loopne movsb (bad) mov mov mov mov mov mov loopne movsl (bad) mov mov mov mov loopne test mov loopne test mov (bad) mov bound outsb outsb gs add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul jae insl bound imul outsl outsb inc je jb bound add imul jne add jae insl bound gs jb jo imul imul jae gs bound imul imul jne jo gs dec insb fs jae inc je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound jb fs je je jb bound add jae insl bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound outsl jo jb addr16 jb bound add popa add arpl gs outsl js inc outsl outsb je imul je outsl insb add outsl outsb add insl outsl jb push je gs insl add jae gs cs dec add add jb outsb add jb popa insl add outsb je outsl insb add jo jb jae push outsb insl popa outsb popa addr16 outsl fs arpl imul bound add jae gs cs arpl imul push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add xor xor sub sub gs jne arpl jb,pn jae jne arpl add popa jb push jne je insl gs gs jo jb add imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add je xor inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add fs add je inc jne insb jns jne insb imul insl add je dec outsb addr16 add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul outsb je xor addr16 inc outsb je jns outsl imul push jae add imul insb add je push gs add jb inc insb outsl jae outsb addr16 jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae outsb add outsb je popa outsb fs gs popa fs dec outsl popa add jae insl gs popa jns jne add je add je inc outsl jb gs je insb add jb gs je insb add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 jae je dec popa insl add jo imul add outsb add jne je insl inc je jb bound gs jb jbe fs dec popa jb push push gs bound arpl imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je popa je add je dec popa insl add outsb je imul jae je dec insl popa add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je dec arpl add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push outsl inc jb popa jns dec inc outsb jne gs bound push jns je insl cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl inc gs popa outsb imul jae jne arpl popa insl gs jae je inc outsl jb gs je insb add je push imul imul arpl jns dec outsl popa add jae gs bound addr16 inc jae gs bound inc gs bound arpl gs inc jne outsl push imul add insb outsl outsb gs bound inc outsl outsb arpl add je popa je add outsb arpl outsl outsb imul outsl jae add popa add gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add je inc popa arpl outsl insb outsl jb pop push jns add outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul outsb fs popa jns jne add popa bound imul jns gs inc gs js arpl imul insl bound push je imul fs push jns je insl cs gs add jo outsb add je imul gs add je outsl insl popa imul inc insb insb outsl ja jb jo jae je inc insb imul add imul inc jb jns add dec bound data16 add add add add add add sub add add add add add xor sub add add add add add add add add data16 dec call or or add or add add or or add add or mov mov mov add or or add add or or or or mov or add fldt mov inc test xchg shr add add or add sbb or or add or add or or or mov pop push sbb mov add adc add or or push add sbb xor and add add add adc sbb adc and add adc add sbb and sbb sbb adc and sbb add adc add adc pop add adc sbb sub or or sbb sub push or add push add add push or aad cmp adc add push add xor push or add push add xor add push add add push push add add or or add sbb push or add adc push add add adc add or add add sub add adc add sub add or add add add add adc add push add inc add or add push add add add add add add push or add adc add or adc add push add add adc add push add add or add or add or sub add or adc add push add dec push push add adc push adc push add add push add add push add push add add pop or add add add add add adc add push add add or add adc push add add push add add push add sbb push adc push add push or or add adc or adc add push add push or adc add push add popa or or add push add add push or add add add or add adc or push adc add adc or adc push adc push adc adc sbb add add add add add xor xor xor xor add add and xor cmp xor xor xor xor sub arpl xor xor add or jne outsb outsb gs add add add add add or add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add adc jo jb addr16 and xor xor add add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add and add adc add add add add pop add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add add add sbb and pop adc pop pop wbinvd or or or or or or or or add xorb add sub and push add add add add or add sbb sub add lidtl add add pop add or or push pop add sbb add or add pop add add or or or pop add or or sbb adc add add movsl add or or push adc add addl or adc add adc pop add sbb sbb or add xorb push pop or adc adc or add or sbb and sbb adc sbb sbb or sbb or or or add push add pop pop adc push push push or adc sbb sbb add add cmpb or adc adc adc add add cmp sbb add add add add add add or or or push add push add and add sbbb or or or xor pop pop or or or xor or sbb and add subb push pop or adc or and sbb or xorl sbb adc push pop or adc or and sbb or sbb or adc and add adcl adc pop or adc or and adc sbb or cmpl sbb and adc or or sbb or or push add and sbb adc pop or or or or inc or cmpl add push push push or pop or or or sbb add adc dec or or or or sbb pop pop or or or sbb or pop or adc or add adc sbb cmp dec add mov and add adc pop or push adc push or inc or sbb or add sbb add adc and add orl or sbb pop or or or or add sub sbb sbb or or sbb or or sbb adc or adc or and add pop or adc dec or or sbb add adc pop add or or adc pop adc jo (bad) lods dec mov int3 sub add stc in add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc cs mov clc mov adc mov adc mov adc mov adc mov adc clc mov pop clc mov sbb mov sbb mov add lock add lock add lock add lock add lock add cli lock pop cli lock or lock or lock inc cli lock pusha cli lock popa cli lock (bad) cli lock arpl lock fs lock gs lock data16 lock addr16 lock push lock imul outsb jecxz add add add daa add add add add add add add add add outsb add add add add add dec add add add add add add add add add inc add add add add add add add mov add lar add add add add add add add add addb add add and add add add add add add sub add add add add add add add aaa add add add add add add sub add add add add add dec add and add add add add add add sub add add add add add add aaa add add add add add add sub add add add add add add aaa add add add add add add sub add add add add add add add and add add add add add add sub add add add add add add add and add add add add add add sub add add add add add push mov add add add add add add sub add add add add add add add add add add add add sub add add add add add add dec add and add add add add add add sub add add add add add add add add add add add add sub add add add add add add aaa add add add add add add sub add add add add add add add and add add add add add add sub add add add add add jbe add add add add add add add sub add add add add add add rolb and add add add add add add sub add add add add add add or and add add add add add add sub add add add add add add push add and add add add add add add sub add add add add add add aaa add add add add add add sub add add add add add jge add and add add add add add add sub add add add add add add add add add add add add sub add add add add add add add add add add add add sub add add add add add add lds add add add add add sub add add add add add add push push add add add add add add add sub add add add add add add pop push add aaa add add add add add add sub add add add add add aaa add add add add add add sub add add add add add add push add aaa add add add add add add sub add add add add mov aaa add add add add add add sub add add add add add aaa add add add add add add sub add add add add add pop add aaa add add add add add add sub add add add add add add aaa add add add add add add sub add add add add add dec or and add add add add add add sub add add add add add xchg or and add add add arpl arpl add add add xor add add fisttpll add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in (bad) jbe or add (bad) sbb (bad) mov dec push int3 inc mulb pushf pop stos jo add popa xchg push jae leave push xor mov idiv mov dec cli push add insl pop jmp subl hlt sbb xlat cli aad pop and or mov and sbb pop jmp cltd push stos aaa cmp outsb fwait mov mov cli mov xchg fucomp test pusha cmpsl aas test lcall iret inc mov jle in inc inc jnp aaa cmpsl or mov or dec popf leave aad out pop out cs sbbl adc inc ja mov pop punpcklwd ja inc (bad) push mov xchg push and bound (bad) enter (bad) mov or push mov jb lea dec ret pop daa push mov pop jmp in push fs push loop jl jmp or inc sbb repnz jae mov mov xchg outsb xchg xor andl sbb add in movswl clc insl xor lret adc mov aad js mov outsl push adc scas ret outsl fwait and inc sarl aam adc adc cwtl mov scas dec lret jbe add out jle,pn ret and gs xchg push cmp sbb add test push imul negl or pushf lock outsl jg into pop xchg or cs adc adc or in add scas insb sti xchg xchg inc add mov inc adc in mov push mov movsl mov nop inc outsb cmp mov pop jle or cmp push int pusha mov je aam inc jne cmpsb pusha cmp and adc or jnp lods pop fimull push mov mov (bad) stc loope add lods and jecxz fwait mov inc push sub cmp sub iret or test xor adc sarl insl ret sub cmp cmp push push imul dec mov mov bound (bad) std push stc inc lods sub std lret pop or cmp lods fwait mov jmp aad jle mov sar lock or ror inc pop es inc xor aam xchg pushf mov mov out inc iret cli fistpl sbb ss sbb or mov or popa push adc sti xchg lret outsb add push call aad dec xchg das inc ljmp lds addb mov inc outsl cwtl je movsl cmp mov sbb mov into mov repnz or mov or lahf test out fdivl xchg testb push fsubr xchg mov xchg scas sub push fs jp fucomip negb in xchg sahf rcrb inc imul hlt in lahf (bad) stos mov pop les scas sahf into dec gs jp ficompl add xchg out adc xchg or enter inc sbbl scas fcoml dec movsb sbb xor rolb add mov sbb cmovae mov lock les mov (bad) cmp fcmovnbe aas gs adc imul cmp or jmp ja or jg movsb dec push xor adc lcall push dec jp mov ret popf dec adc pushf and dec sti inc scas xchg fdivr lods xor mov and pop inc jnp pop mov add iret movsl xor fsubr sub cmc sbb jno and push enter (bad) lods ret pop adc hlt pop jno or and and mov rcrb int inc push jae cltd loop iret push insb or cmpsb scas movsb (bad) xchg faddl mov pop out xchg fmuls xor pushf sti pop xchg cltd pop jae cs stc aad pop scas jb jg in (bad) sbb (bad) cli inc mov notb cmpsl sub fnstsw jp or mov mov dec jecxz fsubl sub cmp sbb cmp repnz dec sub das push or mov decl or and jnp fnstcw cmp ss push mov push jnp loope push push lods pushf mov mov cmp cs xor js test fdivrs and (bad) in dec mov xor pop fwait int add and aaa adcb sub testl adc dec mov fucom sbb push mov lahf subl in sub add sar xchg push sbbl insb aad popa stos dec add sti sbb add adc ficompl inc pop aad adc in outsl (bad) mov inc jo push loope and in xlat out mov lret mov push sub fisttpl mov iret fstpt inc push jp or fsubrs (bad) push add mov mov pop xor push pop sbb mov sarl lret dec imul jae scas push call lods dec xchg arpl jns cld call subl and xor (bad) repnz lret mov dec (bad) mov sbb daa rclb mov mov call jl jo xchg jge cmc fistpl scas imul mov in lods imul (bad) fimull push sbb dec cmp (bad) dec (bad) cmp inc jae fldt mov or cmp jae repnz inc fisttpl mov adc loop fildll mov and sbb inc mov shrl and or leave div cmp mov or push xor mov out pop inc (bad) sbb xor jae push mov pop lock fsubp fstpt mov or jno jbe cs mov xor add and lcall scas lret cld in mov cltd mov enter std sti subl cmp sub lds icebp cwtl fcomi dec pop mov (bad) or loop out test loop (bad) dec push das xchg mov (bad) mov (bad) push cmp pop (bad) in push fdivr dec mov xchg xchg mov jae xor rcr aam out sti gs lret insb clc bound insb shrl pop jne xchg push add int dec adc jmp mov cwtl mov in repnz or clc stos adc popf xor fwait and out adc rcr dec sub jne mov jge addb cmpb mov cmp cmp std bound aad push pusha mov fmuls pop push adc in (bad) push ret add adc and push inc mov ss aaa sbb add (bad) negb testl pop imul sahf xchg lods imul mov nop jnp aad pop (bad) movsb jbe cmp addr16 fisubrl push sub add andb scas insb repnz pop daa rorb push pop pop sbb fiaddl fadd (bad) xchg (bad) aaa mov test sahf mov popf or push sub or es adc and sbb xor mov hlt xor xchg push mov lock lea mov xchg sbb outsl stos (bad) lcall xchg in imul je fdivrs jg lret outsb pushf aad xor pusha inc xor fmuls stos xor mov adc ja and lea jne in fild sti mov sbb jg add pop test push inc enter cmp (bad) cmp ret call popf cmpb cmpl das outsl inc and test adc push xlat (bad) aaa xchg pop lahf xchg aas sbb and jne push and xchg ds cmpsl jns sti into out mov cmpsb xchg jle scas test adc testb jnp pop in es nop mov mov push inc push bound scas xor push leave or movsb sub fadd fdivrp or aam xchg mov sub mov dec push fsin movl inc imul xlat movl fisubrl sub mov imul mov push ds fistpl and imul mov push ljmp jo mov push cmp jb fwait mov dec xchg in mov fdivl movsb add pop (bad) jae pop mov ret clc daa int3 iret ret xchg xor sub or sub lret (bad) popa and into cmpsb loop push ljmp push pop mov xchg jl orb lcall jo jg imul inc sar dec (bad) aas out jae mov lods sub push adc dec imul (bad) pusha imul push lret aad test js push jne and daa fwait gs sbbl lret outsb rorl pcmpeqd pop and stos dec dec or incl adc jecxz stos xchg std mov loopne fcmovnb push jp pushf and loopne dec add inc jb test rcrl ja dec jno into dec ds dec push sbb and push push jmp daa addl pop repnz pop adc cld cmp pop add or mov or cmp test ficoml fbld xchg fwait imull ret imul push les sub (bad) mov jo dec or mov pop mov add cmp push mov xchg (bad) xchg mov jne or bound sbb inc mov dec rcl scas push xchg adc add lods inc mov fisttpl scas fwait mov dec cmc lret (bad) fistpl sub or repnz cs fcmovne cmpsb jne mov or dec bound mov and clc xlat and outsb jg imul test jnp and mov cwtl pop add lahf mov aam dec (bad) addr16 or pop mov fcomi test adc jmp lahf daa add mov inc out inc xchg pop addr16 add sbb mov dec sbb xor ds cmpsl movsb in (bad) pop fistpl sub pop push push lret jnp iret dec push jae sub cltd fidivrl rclb lock int mov (bad) mov jns sbb pop adc mov sub int ljmp fcomps adc push das push lret sbb dec mov insl aas push push mov push inc jae int ret and movsb adc mov add jp sub xor jnp popf cld imul insl dec cmp pop (bad) adc mov sub xchg add pusha sbb dec xchg cltd (bad) mov jns push mov cmp mov inc pop js mov aam dec mov add movsl jecxz lahf data16 mov (bad) mull lods inc fs orb (bad) std jle push xchg out leave cmp push cmpsb mov sub inc std push push (bad) push adc je xchg test dec outsl sub mov xorl (bad) inc dec movl iret mov bound sbb dec xlat out adc lods jmp push shrb xchg into jb pusha inc pop xchg pop cmovg jns xchg cmc xchg add in mov inc pop data16 xchg fldt dec jnp aaa push jecxz lock out dec add inc sub hlt cmp das (bad) mov cmc pusha push fldpi sbb and (bad) mov pop test notb nop cmp mov push cli lcall sbbb jg adc movsl mov sub pop push arpl xchg sbb mov aas icebp dec sub iret cli inc jl clc insl jge sub jp mov push adc mov mov aas jmp mov mov fwait das push pushf fildll push icebp in insb pop movsb jnp hlt ds rcll inc in lock in in cmp daa mov sub cmp cltd and dec inc or mov stos cld sbb xchg xchg pop dec lds xor jle stos push jne cmp xor loop and pop or pop cmp mov pop sub mov jo lea call dec pusha lret aas ficompl fiaddl jb and mov outsb in push cmp push outsb test mov aaa dec adc add cmp out pop stos mov xchg cli adc inc fbld jge and cmp mov subl adc push pop lret cld and hlt mov in lds fldcw mov xor repz xorb movsb daa fiadd pop push popf movsb jae inc je roll push xchg ja inc daa fcoml (bad) (bad) add ja (bad) data16 lret adc xchg scas pop mov cmp jmp mov mov mov cwtl xor repnz mov fisttp mov mov add call lds pop add imul jl stos cmp xchg jne push addr16 dec push sub push pop sbb cli pusha in mov out rcr fcomps dec ss mov pop sti sbb ljmp push dec daa fs roll icebp lea sub ret adc lret inc mov ja ret mov (bad) jge push inc scas pop jp insl jle fcmovnb sbb iret sbb (bad) xchg mov mov or das push fidivl or cmp sti mov sti leave in cli cmp and dec or push or and lahf int3 mov mov scas mov repnz sahf mov sbb and dec or push nop test push pop (bad) mov gs inc pop pop mov aam test leave daa mov mov pop jmp js sahf lret in sbb add jae add test fwait scas push repnz inc data16 jns add sbbl cld gs fadd ret jne push jae outsb outsl jl ja pusha mov xchg cltd lret addr16 aad testl xor or cmp pop dec pushf in jb rcl xchg pop clc and out xor lcall add scas push testl sahf (bad) dec fwait aas inc mov subl ljmp xchg ss mov mov std out push mov lock cmp fcmovb dec sbb add fnstcw dec enter and rcll xchg test leave or call sbb and pop and adc mov pop roll adc sbb lea sub pop dec aam mov test in mov mov les enter mov push test in pop repnz int3 enter ficoml pop pop and xchg test inc fdivrl and mov jp lock push jbe push pop lods clc insl das jl popa mov fwait test ja inc scas or or (bad) fildl and add test pop mov aam xchg enter fbstp lods je and enter push jp sbb and dec sbb sbb or (bad) jg enter dec adc lret sub cmpsb xor stos adc sub fidiv jecxz test js xchg in add fsubr incl popf mov (bad) xlat xor daa es stos adc dec adc inc mov mov in (bad) (bad) js or or dec fdivr xchg imul out xor sahf mov rcl (bad) test mov mov int inc popf xor adc (bad) mov mov xchg cmp lcall scas pushf bound movsb cmp or fisttp stc pushf (bad) xchg mov insl lret lret mov mov (bad) (bad) icebp pusha pushl mov jb sub mov cltd push frstor lret addr16 xor out dec dec es test cmp adc mov lock cmpsb jmp cld adc outsl out popf jnp fsubs fimull lret cmp fiadd push dec and dec int3 aam mov and mov push out bound inc psubusb ss aaa js pop inc out leave sub lret jp,pn inc sub dec cmp and vpmaxub imul jmp dec movsb cli mov add add lcall es sbb xchg arpl inc aas cmp pop ficoml adc aad cmpsb addr16 mov or sarl and repnz jmp adc icebp mov in fdivrs and (bad) cli (bad) inc dec iret lahf dec out jp ret sub mov push inc xchg or lret (bad) out cmpsb mov fcoml dec cmp imul adc aam fwait stc pushf out sub lahf stc stc cmp aad das shrl loope insb push out stos dec aad test xchg ret dec and iret int cmpsl pop sahf mov fcoms je xor and xchg lods movsl mov push xchg out mov arpl cs movsl mov xor mov sub mov mov clc mov in jle mov je les es mov js lahf mul fildl dec dec sbb out push lret test xchg sbb push imul lock (bad) sbb adc and and fwait cmp js or lret test cmp sub dec pop jbe int fisub aam arpl ljmp mov call sbbl fnsave or mov pop loope mov jae sbb repz rorl rorl (bad) jno je or mov dec loop fs push out stos sahf push pop sbb imul and push adc das out inc pop shr push and es sub insl shlb cld (bad) idivb or pushf add fwait add ss insb mov sub sbb mov iret xchg jns xchg xor inc sbb jge outsb adc sar mov stos popa scas int nop call fwait or js cld scas dec fcomps aaa test xchg xchg sub inc lret or aaa jge repnz push pop sti sub push sub pop ljmp ret js repnz js roll stos mov and dec lret sarl cwtl adc pop sbb cld inc aam cmp in xchg jge xor jg int3 sarb mov sbb insb fimul rorl test adc fdivl out test cli ret pop mov inc mov rorl cmpsb enter fstl lcall loope bound and neg lds fldl add mov repz sub (bad) mov jp in mov (bad) and pop enter movsb adc push pop stc adc test ret jmp cmp sbb mov bound jbe stc pushf imul movsl cmp (bad) hlt cmp jno (bad) popl roll js pop jmp xchg mov aas mov (bad) mov add jge imul sub int3 nop lods push sahf mov loop in pop out jle push pop inc mov inc ret es adc mov out das into xlat mov inc addr16 mov sbb jns test inc (bad) fmuls mov dec out test pop mov jge mov fmull xor sub xchg lods jno xlat leave mov xchg cmc iret xor addr16 lods jnp jle orl int3 jns xchg pop sub (bad) iret pop adc stos fs test into and stos fldt push push fnstenv rclb add or jne inc mov hlt out sbb repnz dec pop (bad) lea and and cltd xchg inc pop movsb mov inc cwtl mov jo mov rcrb mov cmc jno jge mov xor mov xor fisttpl push fidivr jo fild call enter jmp and out lock aaa lret (bad) mov mov mov add mov pusha pop mov dec jns jmp clc mov inc xor cltd xor adc mov ret or aas out mov jns inc fist inc ja mov movsl adc shll inc push add pop shrb or sub dec ret mov xor push call jp stos ljmp inc xor aaa xchg xchg rclb cmp xchg jns sbb mov inc mov pushf (bad) xchg mov lods dec jns sub sbb sub cmp stc imul movl and std loopne test (bad) in les lcall sahf xchg outsl dec jp popf lret jl inc call inc inc into outsl mov ror xorl std mov aam into dec xchg (bad) adc ljmp (bad) mov (bad) adc jmp test movsb arpl (bad) or jmp adc xchg and ljmp jae sub imul inc add cmp in arpl push scas ds ret stc push inc dec mov call push repz lods imul mov mov iret or enter sbb dec inc mov mov lods mov cmpsl ja or and push xchg jo mov in fnstenv dec pop adc inc gs inc je mov pusha gs repz dec repz cmpsl jne ds addb dec test pop sbb rcl inc popa inc xchg aad push inc mov xchg mov or ficompl and (bad) aam dec xchg mov aad jge in mov dec dec lret popa sbb (bad) mov add xor push ret sub stos mov outsl add lea dec jl incb xchg stos dec push fldl pop mov or pop popl lret add dec xor js push jmp loopne push dec adc les shll call leave pop and repz mov into mov lret rcrb mov loope into mov jns adc jne push add or mov jo adc xor stc add imul pop mov inc jb leave sbbl xor xchg add clc (bad) test push mov lcall loop cwtl add sub lds lea es xchg pop inc mov mov xchg andl in lahf mov pop pop leave jmp push inc cli sbb dec ljmp mov mov jmp mov call and les loopne mov add add outsl xchg cwtl xor jle fsub mov inc fcomi cmpsb pop cmp fidivr xchg out sti dec dec call inc jns movsb add jbe popf push pop mov aam sti bound dec cmp mov pushf xor push ja mov pop sub inc rcrb xchg lret cmp scas es adc sbb stc xor cwtl inc cwtl scas sbb imul call inc popf sub les add sbb push shrb mov cmp (bad) lods cmp stc add xor pop adc mov gs test mov inc jbe push in je dec lods lcall mov sarb imul lds imul fs mov (bad) dec pop (bad) xor (bad) cld and mov cmpsb xchg (bad) lds pusha mov push inc cld lods scas adc mov ja aaa js push cmp imul inc dec xor data16 mov push sub std adc jge je into push xchg movsl hlt jnp mov push push lret lret jmp mov les sbb lret jge insb ror clc call clc imul arpl sbb (bad) fs push add sahf mov and or jecxz dec lock inc mov and mov adc xchg xorl xlat jbe insb sub mov mov xor out mov popl outsb es popl movsb outsb roll push ss test lods insb sar push subl mov dec pushf mov (bad) (bad) xor push clc xor pop inc adc outsl lret sub pusha mov call (bad) insb fisttpll push popf xor mov sbb fimul decb test repz pusha sbb sahf pop xlat or ret push jecxz (bad) mov pusha cmp adc imul insl int3 jnp pusha pop push xchg outsb fbstp adc in jo jle insl xlat dec add loope dec scas fs sbb mov push scas mov out iret lahf lods mov jmp xchg cmp dec test ss mov (bad) push nop and out lea inc add mov mov adc sub movsb pop xchg je jg mov addr16 lret push movsb jl inc cmp dec test and cmp int mov xor js std adc aas pop push adc mov pop lret push xor push aas sub xor add (bad) into fild adc (bad) cmp mov sub mov adc push lds push pop ss jno fildll addr16 fsubp scas jp push inc xchg (bad) hlt mov outsb and cltd add movsb dec std les (bad) rcrb inc jbe xor cmc in int3 stc jo jno xchg adc sbb gs in call in mov sbb jge sahf xor cmp mov cmp pop push pop loopne (bad) out test cli hlt mov ret test shrl insb xchg and mov pusha push and sahf push repnz pop sti jbe fcomps int3 movsl jne inc pushf mov and cmp add (bad) movsl push cs (bad) cld test and dec rcrb out xchg push mov push jno xchg pop imul xchg pop fs and fs dec repnz lcall or fstps mov inc into repz lcall sub sbb (bad) xor jg push pop mov jbe inc jl mov mov js arpl xorl adc or aaa xor push sti dec std mov aas mov or (bad) push pop push sbb sbb pop sub xchg jle or jl mov inc adc cmp mov hlt mov (bad) clc test movsb (bad) xchg into mov and into mov out sbb ja ss repz or inc jbe xlat popa add imul push add and sub add mov sbb lods push dec mov lods fiaddl js pop inc movsb loopne adc in lds pop out clc aam jo icebp dec push cmp rol xor jl orb xor sub popf test xor aas push jmp jb call cmp pop mov sbb bswap xor (bad) ss mov test mov hlt and jb lods out adc mov sbb (bad) ja psubsb in repnz push jo xchg (bad) cmp stos sbb loop (bad) mov out (bad) mov mov mov and js mov clc lods inc aas inc and (bad) fwait cli imul sub sub (bad) sub out xor mov fdiv jl pop add mov sbb push sarb ds shll xor and cmpsb nop sahf sub and aam xchg test iret ljmp and aaa fldenv sbb les es pop ret pop in cmp scas mov insl jo fnstsw sahf call push in test and add (bad) push loope cmpsb out popa xchg lods addr16 inc xchg subl xchg movsl or mov mov rcll push xor mov sub mov pop mov add xlat mov cmc adc lods xchg mov pop ja mov int3 cmp mov push sbb clc sub sbb push sahf dec sbb gs xlat mov bnd ret sbb daa fsubs lock divb fstpt daa js mov aam mov fild test es adc push and inc mov sbb bound and and mov popf dec call outsb test cmp fs mov (bad) lods inc andl iretw xchg scas or push ret sbb leave aad sub loop into xchg movsl ds das out mov xchg mov (bad) ja aad gs fst or lcall scas test incl mov and sbb pusha daa xchg sub imul cli pop mov pusha pmuludq repz pop lret les (bad) sub dec sbb cld pop dec cmp pop pop inc jae mov (bad) fldcw push and (bad) clc sbb addr16 xchg adc (bad) push lods int3 mov cmpsb xchg inc cwtl unpckhps (bad) and mov movsl leave xchg push stos jnp mov mov (bad) mov sub push (bad) mov sti cs mov pop mov mov imulb dec and in xchg dec jae and mov push adc add add jle sbb pop push mov xchg or fistpl aam adc imul dec in xor hlt (bad) fucomi lcall push popa lods inc xor lea test nop or (bad) fsubrl adc sbb add popa test daa and dec mov jmp shrl jmp sbb mov or cs jmp enter inc test in jp rcll mov dec mov fs adc xor sbb in jnp dec cli push xor adc sub roll mov jnp call or sub mov mov fidivrl push in scas inc test iret stos aaa in and sbb xchg sbb sbb fs mov cmp out add xor les adc push pop mov insb pop mov sub jne sahf sbb enter jnp arpl sub cmp lea andl inc hlt sub out (bad) push jge outsl dec dec jo jne loopne xorl rolb fdivl rcrl cmpsb scas mov sbb jo dec scas in addr16 sbb in pusha cmp fwait xor rcr (bad) sti add jle jg xchg sbb xchg jne ficoml loope nop jbe cwtl inc pop dec out mov mov push mov pop or xchg cmp adc dec das inc xchg adc push (bad) in jl sbb test stos pop jg lods mov mov les mov andb or imul movsb pop pop loope ja dec dec dec adc push imul mov jge lahf pop add outsb movsb and lret cltd mov enter out fdivl into xchg jmp lods sbb leave (bad) sbb push jmp mov or pushf mov arpl pop mov xchg cmp xlat sub repz xchg pusha mov std dec mov call dec mov push adc push adc jnp mov in testb sub sarb aad ja pop (bad) jnp jns pop lahf lods push loope stos out aas jo aam movsb add inc clc sbb jno addr16 mov mov popf or subb (bad) or cmpl jl imul rcrl adc insl movsl push gs mov or out or fisttp rcll aas lea test pop stos iret sub mov les fildl jbe ret test in (bad) rol iret stc and div xlat fistp cmp mov mov jb repz flds andl fdivp jp jae and gs adc fist iret imul xchg add adc in sub (bad) (bad) icebp rclb popf xchg cs dec loopne mov clc mov dec popa mov jge mov jnp test xlat sub cmp in ds sbb rcrl and mul xor xchg gs xor adc pop mov jnp outsl test iret mov jecxz inc rcrl enter insl hlt mov stos lock and add test es inc push inc (bad) or and mov pop mov insb mov mov sbb jp jp ret pop push popa mov das jne mov add aam je gs mov das clc sti xor mov dec pop mov lods movlps sti out or data16 imul push jbe pop adc inc or cmp xlat xor lock inc push enter loopne sbb adc dec lock inc cmpsb pop jbe mov icebp mov jno pop subl std rcrl xchg push daa call lret add stos mov and and dec fwait mov fwait ja fwait jmp mov fistpll in ret lahf xlat das lahf xchg mov xchg push mov les subb xorl mov mov jge xor dec cli pop mov pop xchg jmp aad xchg adc ret das in invlpg xor mov rclb jp les enter fwait sbb mov sbb movsl data16 lret add rorl out roll dec jae mov into add popa sub (bad) fstpt mov enter test xor popf jne cmpsb pushf push aas xchg mov push imul dec (bad) or jno mov int fistp push xchg or dec loop lods xor nop dec mov dec and pop rorb inc mov jns fsubl cmpsb fwait adc (bad) xchg cmp stos repz fimul pushw cmpsl cmp and or add adc or xor fisub or adc jecxz (bad) jge dec mov lods iret loopne cmpsb test ficoml adc hlt mov jno cmp icebp mov cld mov mov jecxz pop loopew ljmp in push std mov push out or bound aad mov pop adc pop push lea pop test adc sbb shrl sar cmp sbb inc push mov icebp loop outsl sahf and sub sub mov cmp mov into or mov mov mov dec push test xor arpl or sbb mov pop and das addr16 or dec sbb mov push rcll dec lock mov push push es add sbb ret mov (bad) in das dec rolb xor mov je mov sub test rolb icebp test push xor or in into das sbb in gs xor dec icebp mov or lock ljmp mov adc sub push jne pushl in or sub test in cmp repnz out cmpsl mov mov jae push adc mov divb maskmovq mov jo stos pop ficomp mov sub adc mov in (bad) fldcw movsb pop adc mov sbb jecxz sbb mov jp imul mov mov and mov adc sbb adcl aad or pop lea orl inc jg xchg iret jmp pop lcall mov lret add inc out lcall lock cmp jne dec and xor int3 adc cmpsl sub subb fbstp pusha push jne xlat movsl fnstenv add or adc sbb cltd jg ja leave pop jb xchg test mov pop or sub mov scas lcall (bad) xchg cmpsb shrb rcrl out loope pop dec inc int3 fistp gs sbb movsl in or js push mov lods lods stos insl push sub sub push arpl xchg dec xor sbbl pop jg (bad) lods mov mov std repnz push repnz xor cltd std jno pop sbb jp fisubrl mov push mov outsb js clc mov sub popf push test pushl inc push mov insl shr outsl insl imul loop lock sbb test iret rorb sbb ljmp cmp add repnz mov and gs rcl fsubp loope xchg int3 sbb push loop xchg je and lcall adc sub cmc dec movsb sub mov push testl sub sbb pop add (bad) xor mov dec xor and lea roll adc shrl mov lds sbb jl movsl pop cmpsl sub (bad) in outsb jb,pt cs arpl mov pop adc xor mov repnz inc cmp hlt pop (bad) cs arpl xor add or (bad) cmp sbb adc out push push pop rol fcmovbe push dec adc add adc hlt fistp sbb std lret rcll sbb nop push mov and adc (bad) xor pop pop rorl leave xchg (bad) push jecxz data16 adc inc sub cmp cmp xchg lcall stc and cmp ds sbb ret jns add lret je pop xor xchg xchg push pop sbb pop add jle lcall sub cld fisubl fimull cmp shrl xor clc push aas push pextrw js mov fisttp in xor inc std mov push mov mov xor fsub call inc leave and cltd jbe or and sbb and stos adcb out and dec dec sbb xchg jo popa test sub sub push and sbb jmp repnz xchg bound ss pop and sti inc out adc rclb cltd divb out and repnz shrl addr16 cmp fs or sbb popa int jecxz push xchg fiadd scas inc lea jl ss shl pusha push xor sbb lret std in jne sub pop sarb cmpl and dec int cmp jnp (bad) adc out or fdiv lea (bad) add adc ja pop mov pop arpl imul sub icebp mov in xlat xor imul addr16 add pop or cmp sti outsb cmp loopne (bad) rcr movsb mul xor cmp in jg mov sahf or xor mov and shr and mov test std shr fbstp imul xchg or mov in add (bad) aad out pop mov arpl ret scas fnsave test mov push test or lds icebp and xchg xor pusha mov add arpl inc js in aam pop sub ret out aaa mov or scas mov cmp insl pop test pushf mov mov push add dec or les fsubs and addr16 xorl jnp sbb hlt fdivrs cmpl push scas pop (bad) xchg xchg jecxz,pt inc scas lods ret and rcrl or and adc pop or scas (bad) icebp cmp pop fwait sub push sbbb and insb cmc cmp pop mov pop cs mov xchg pop mov mov insl repnz cwtl std lret mov inc sbb lds xlat lods fucomi push stos sub xor andb inc or sarl movsl mov cmp lcall imul jp dec aaa dec fldl jmp sub jbe mov sub fsubrl mov insl dec (bad) and add loop mov cmp cs adc push lock xchg js clc cld sbb xor pushf aam mov adc (bad) jp fidivr rcl xlat data16 movsl and sub movb (bad) or sti pop leave sbb add or xchg ficoml into sub dec xlat ret (bad) xor fwait (bad) shlb and mov xchg inc sahf test ret push jbe xchg or sub jb std pop test out in fsubs fdivs or add stos out (bad) cmp icebp fwait iret mov and dec ficoml and divb dec shr aaa aas xchg test mov pop (bad) xchg aas test sbb xchg enter lahf (bad) dec stc push data16 loopne test ret inc jecxz xchg pop jno lds fmuls popf nop jmp lea pop jae xchg sub stos cwtl das int3 add outsb inc scas out lock pop sbb push mov or faddp cmc push add dec mov outsb or mov rclb and js sub push or pushf sbb push fwait rolb repnz sub imul mov adc jae aas cmpsl lds pop sbb lret mov or mov cmp rep lcall jo cmp or sub repz and (bad) mov jmp in and jne test jbe jecxz mov movsb movsl sti pop pop add lods (bad) mov cmp repz xchg dec or mov pop add nop (bad) push mov les mov adc and or loopne cltd test dec in (bad) jbe pushf cmp gs pop (bad) jle jge cmp psubd mov or cld fisubr enter xchg adc out cmp inc jmp mov mov ja movsb sbb inc mov fldcw enterw push sub add int xor rolb imul and enter shr sbb iret push das xor rclb repnz sub jb push pop lcall aad lods test add push dec lret jl rcl lret or (bad) and into aas push inc xchg jmp and fldcw stos lock jg pop nop shll es cmp ret jl aad sbb mov and cmc or and xor mov pop xor jo (bad) sbb stos hlt push stc push cmp shr xchg test das mov sub or inc jle cmp fdivp aaa xchg dec lahf sbb repnz and fs dec adc insb inc mov popf add pop (bad) and mov (bad) aad xchg adc mov je insb jge and subl das popf adc loopne sub sarb stos pop fwait xchg (bad) inc in inc adc or sub movsl popa ret jo mov es and or pop iret lds daa xor mov js cltd mov daa imul lcall lock mov inc adc sbb sbb fildll jae mov (bad) mov and inc je (bad) add adc mov dec lds cld sti or jp and jg push and dec inc xchg pop repz jae pop int ret push mov add jp out in and mov push cmpsb outsl jge mov xchg jge hlt jnp out xor or sbbl mov push xor dec call push fidivl ss inc mov inc adc sub fildl (bad) dec pop xor (bad) adc dec shr das cmp mov popa mov fs dec mov add adc cld push jbe lahf sub adc push lcall rolb call nop scas add and das push (bad) aam stos push sbb or inc sbb jmp (bad) xor jbe or jge ret loope stc add roll jnp pop inc movsl push fstps ds mov and dec icebp pushf xchg fildl push insl addl cmp test icebp insb (bad) xchg fdivrl or pop (bad) or jp mov aam add mov cmp loopne and aad push add push jns mov and loopne data16 ret mov popf inc cmpsb inc push cmp xchg add movsl push fistp cmp lahf repz mov lods or repz mov add mov inc out out enter aaa add aaa jne lds (bad) (bad) cmp or mov push dec cs popf flds fsub fiaddl test div sbb sbb stos pop mov ljmp neg ss add and mov lret inc dec adc sbb cmp lahf push (bad) fcomps pushf xchg fsubrl les mov mov add aad loop sbb cmp mov jg out dec stc lret mov cli inc push jl stos push repz inc ja inc or pop aad fwait (bad) mov int aam aaa cmpsl mov push int3 adc gs sbb sbb pop push scas xchg xor xchg fildll inc mov ret cwtl jae dec sub mov cmp mov es adc add ds inc adc fs sbb sbb pop jmp imul jl mov bound inc shll push hlt out aam sahf lock xor and insb lahf adc aas scas std mov mov mov push and fmuls ljmp jne mov jp pop loopne fist lods popa dec dec out clc dec (bad) aaa fwait popa js push adc lahf pop imul mov rcr aaa jmp dec mov xor mov xlat push pop (bad) xor xchg and xor ret xor std loop xor cmpl into push push scas lea (bad) inc push inc push hlt adc mov rolb iret inc xor mov (bad) das inc mov sub xor inc ja and int3 out loopne jle lahf mov pop or scas inc mov inc scas mov into ror pop xchg and xchg mov in or inc push stos aam dec mov ret fwait inc sub loopne jbe ja repz jae imul xchg mov lret hlt inc inc cmp es stc clc add mov enter sbb out popf icebp mov cmp dec sbbl inc movb lds imul (bad) xchg cmp ss cli into cltd fisttpll addl aad fstl sub cmp add pop aas je fdivl jmp fildll (bad) and sub (bad) fisubl nop sub push sbb push sub jmp lea push (bad) cvtps2pi repz cmp or cmp xchg jle mov cmpsl sbb sub aaa pop sbb aas sbb cmp loope faddl hlt fcomip sbb fldenv cmp push je cltd mov int xchg mov mov inc std popf (bad) arpl hlt mov mov mov cli leave push (bad) inc pop scas leave into jo inc mov ret xchg and mov push dec inc mov add loop test mov inc cmp mov xchg xchg ds orl pop adc mov xchg sbb cmpl pop mov xor std fcmove or cmp stos (bad) rorl push add mov sbb xor repz or (bad) lahf xor or es lods adc xchg cld and in subl int inc mov or iret repz pop jb cli dec cmp fildll xchg mov pushf pushf movsb (bad) jmp xchg adc hlt outsb lds mov xchg out xor dec gs mov roll inc test adc sub cmpsb (bad) lret push aas xchg mov stc mov push or (bad) cli dec cmc mov gs mov mov add sbb xor andl aaa mov rolb add pop stc cmp je clc push add fstpt jl push shrl lds sub xor adc push out loopne ret lcall outsb enter gs (bad) xor sbb add push lods pusha sbb mov fdivrl xor jge lret fdivrl arpl leave shr call in lock stos movsb sub push adc orl sub cmovne test inc pop sarl push mov mov jg leave sub xor mov bound scas test sbb cs out pop cmp shll imul scas scas mov inc mov add xlat es lods push inc or les push call dec or shrl mov push push aam dec jnp inc loop fdivl ret mov in fcmovnbe (bad) out cld test cmp mov adcl ljmp flds insl repnz mov outsb stos push pusha and dec hlt (bad) mov imul and mov cmpsb mov cmpsl sarb (bad) mov adc mov ret xchg aaa pop sub xchg int3 cmpsl loope (bad) xor (bad) stos adc add xchg and arpl cmpl adc jnp cmp out xchg and jne xchg fisttpll mov outsl jae,pn mov cmpsb push pop popf push stos xchg jo stos mov xchg add cli cmp lock or fs add add test in cld mov pop les jl notb jbe lock loop dec ss and push cmp mov pop push loop add rcr xor pushf iret push fimull sbb jle pushl js push sbb imul xchg xchg (bad) xor lods xchg or dec lock mov sub dec xlat pop add xor xor dec sbb pop add or movsl sub rcrl adc pop add or aaa stos sbb icebp stc mov int3 jge jmp jge mov adc ret fwait lahf sti js pop iret movsl hlt mov fldenv add andb push imul pusha test jo cmp xlat ror mov push or cwtl mov negb ret jmp fldpi push fwait xor xor lret int3 dec sub scas scas pop mov mov add and or mov testl dec (bad) js cmp outsb sbb xor imul jne mov das (bad) mov rclb arpl inc daa lods xchg lea inc or ss inc pop cmpsb or dec sbb outsb and loop insb out mov pop leave lret sub jo data16 inc aad repnz or imul mov mov and loope (bad) jb bnd cli lds insl pop orb popl icebp sub dec lret jle test push jnp inc mov pop adc sbb sub std and fimull mov push push xchg ss loopne ret int cmc pop pusha aad lret bnd shlb mov and shlb cmpb aaa lds (bad) dec push imul cmp (bad) lea adc repz xchg jnp mov test xchg jmp insl sbb sbb cmp in jno xchg add je xchg lret cmp dec out sbb mov daa mov call xchg insb mov dec (bad) out or dec fstpt int jns inc jmp mov pop xor jl scas mov mov (bad) test imulb pop mov push mov cmp dec cmp (bad) js addr16 jmp mov ds mov lret cli pop fs xchg mov jle cmpsb jo insl pop cmc (bad) sub scas xchg insb inc fadds mov imul loope stos mov mov mov clc clc cmp xchg inc imul push iret add in rolb mov dec dec out xchg insb aaa and jge push addr16 aas rcrl inc pop (bad) sbb pop push ret lahf push sarl out push mov add popf popa dec into ror fwait add dec (bad) out push jae sbb jp (bad) xchg adc cmp xchg scas cltd adc mov and adc jmp frstor test inc mov add jl cwtl push sub pop push lock cmpsb arpl adc sti psubsw sbb aaa add aad jle or nop sub push leave mov imul inc push mov push clc das push loop mov sub jo icebp cli test nop test fsubrl imul and (bad) int3 cmp add sub scas test lret mov mov loopne loopne cld stc pop ret mov aaa or lds sub sti pusha subl pop jecxz fimull dec pop push add xchg inc jl cmp iret xchg pop cmp insl or je loop or cmpl ljmp rorl adcb (bad) not gs add les test jb push inc in xchg ret enter cmpsl mov push gs movsb mov push aad aam push lods ret sub pop pop ss ficompl movsb adc fstpl sub (bad) or cmp imul or sbb mov cmp out mov es out test xor lcall xchg insl je adc les ds inc and adc in js fyl2xp1 fwait cs test test push inc sub pop in adc movsl pop lret jo test aad mov daa scas cmpsl jle sar call pop ds dec pop and mov fs adc xor fwait hlt popa out push xchg aad sub ja repnz (bad) stc hlt adc inc fsubrl jp (bad) hlt or xchg (bad) jo es xchg xchg je sub or add add cmp dec jecxz pop sub mov fist das mov movsl ror insl pushf or mov (bad) add push (bad) loope pop xchg mov movsl aaa xor in fmuls cmp in aad dec sbb (bad) shrl mov adcl lock pop mov rol cmc (bad) gs inc pop and cmpsb movsl dec xlat mov and mov pop (bad) jae push mov pop cmc xchg pop dec dec cld inc add imul sti idiv cmp jmp sub jnp or (bad) mov addr16 xchg dec (bad) stc fldt push in jne pop sbb mulb pop add push inc jnp repnz or data16 mov dec (bad) shrb or lcall jne (bad) jg mov or rorl jnp repz dec or addr16 jne jnp in imul dec pop inc repz lret push (bad) push cmc pop test aad movsb mov js adc scas mov push pop out icebp gs movsb jo jmp es or cld push fwait inc inc xor dec bound mov ss sar pop fcomip mov adc bound xlat pusha jg out fs iret ss sbb insl scas ret or xlat dec scas add jbe imull (bad) dec push sbb mov popa and mov or hlt xchg cmp jg data16 sub xchg fmuls (bad) gs stos xlat or mov cmp (bad) xor loop push mov push insb mulb cwtl icebp dec add (bad) mov pop loopne insl cmp subl fsubrl xchg cli insl push (bad) stc fs mov pop daa fiaddl rcll dec popf xchg loopne mov jge daa jmp xchg xchg lret mov push imul loope shlb and add aas inc (bad) mov repnz push ret xchg dec cwtl or push push adc sub mov aas adc push bswap mov mov rcr daa sub mov fwait enter sub loop lock jnp je add adc xchg jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) lcall jp scas data16 add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) inc es test das (bad) mov (bad) xchg in lcall xlat (bad) idivl por cmp or pop ljmp (bad) dec imul jo loop dec dec mov scas stos and pop js insb shrl pop out mov fwait jb push cld stos pop gs or xor cmp imul pusha cmp xorl dec nop mov xchg ja in or lret js in adc push mov inc cmp inc int3 cmp xor (bad) in repnz lds xchg jecxz sahf sub dec jnp daa mov mov stc inc push push pop (bad) pop pop dec aam cmpsl loop (bad) or insb (bad) xor pushf sbb shl or push sbb pop (bad) pop cmp and inc sub xor roll movsl mov xchg pushf push cltd sub lods xorl push leave and ss xchg sub mov and or mov mov test push loope add lods popa adc repz pop mov add fnstenv fdiv xlat test mov jg inc aaa xor mov push inc mov jg enter in dec ficoml mov shrb lret xchg xchg cmp call lahf arpl mov jle sbb test or arpl pop mov push xchg inc xchg xor std imul sub xor pop mov imul outsl repz sub mov xchg jl mov daa cltd out inc clc cmp int3 jb add loopne pusha pop xor mov bound daa test cwtl inc jae (bad) xchg xchg dec jo sbb (bad) fwait bound jo xor into lcall inc and mov test std jo pop and add rol jo push mov xchg mov outsl divb lods pop cmp out push mov lods jecxz jp stos out lods ret popl lods fbld mov jmp insl aad es lret aaa fcoml adc add insl cmpl cmp and xchg aad jbe ret add std lock fcompl sub cmp xchg cmp sub pop (bad) loop neg add ret or js pop pop jecxz pop loopne out inc and jg in cltd ds jl mov decb adc aaa or fwait (bad) xor push dec mov mov inc and in mov push iret andl pop pop sbb test in neg sbb push adc fcomps imul sub mov in push pop sub mov xchg add aaa add aam insl dec cli xor cmp lea ljmp push outsl pop ljmp xor cmp sbb mov mov and jo jmp pop out cmp clc lea sbb imul xchg insl les cmp xor push lds in mov std (bad) mov mov sbb jg pop imul ror dec pop mov push andb in das cmp iret faddl rcl lret dec ror jb dec xor sub lretw pop fsubrl mov call xor xor sub push pop lods mov dec mov mov aad pop cmp fistpl or pop xor xchg ffree mov xchg stos push in ljmp xchg dec sbb stos sub popf and cmc inc jnp jle xchg cld or stos lcall mov mov scas inc popa mov xchg data16 and fsubrp inc test pop push pop rcr push add jp popa or adc cltd push fsts int fninit xchg addl xchg jl sti cli ret jmp jo jge mov mov orb fdivs jno in fcoml test xchg test mov mov pop mov dec loope pop lea mov ljmp fwait jp mov push mov fnstenv or push and int lret mov jg jg xchg mov xchg sbb fdivrl scas mov fistpl cmpsl cwtl mov pop cmpsb nop scas mov leave and mov and jns pop (bad) and ss stos add lret iret loope sub mov iret int jns in xchg or xchg or and je mov sbb hlt xor pop dec xchg xchg xor cmp push outsb outsb mov jb loopne sub mov nop cmp andl mov popa xlat out rorb icebp sub xor jge xchg push imul jb sub mov je jl shlb aas pop ljmp mov push mov mov mov mov nop xchg jnp jb jnp out out test add jno hlt jmp into loope adc inc lods mov push pop inc mov cltd push nop (bad) into xchg mov xor in outsb loopne pop or push pop and cmpsl sti out inc cmpsl xlat ret test push mov shrb rorb jb fldcw xor pop rcll jle sbb subb adc ror fwait lds pop push movsb xor mov popf (bad) ret cmp mov xor imull jns xor rcll sti jbe arpl xor push popa jmp into sarb scas out (bad) or cmp adc ficom mov rorb mov inc adc sub inc out cmpsb cli js out mulb dec push mov dec sahf in sbb cwtl pop mov repnz inc cmp or repnz mov mov insb sahf adc push jl fimul sub int ja dec nopl test addr16 test xor cld (bad) call xor lods ja jmp cld adc sbb cwtl push xor shl xor or fisub ret sub inc dec repnz fwait adc daa cwtl xor add push fild jnp,pt mov dec push mov mov (bad) out xchg adc cmp nop fsubrs push inc stos or ret imul mov add fwait rorl lahf jg in pinsrw add into mov mov pop outsl pop jb jge xchg sub dec aas leave mov test xor daa xchg (bad) mov mov xor mov mov mov lea imul (bad) xchg cmc jecxz dec rcrb rcll js (bad) mov mov daa or std dec pop (bad) mov jbe fmull inc fbld jle stos cmp mov pushf cmp pop xor jb out mov imul sub inc enter insb sahf push adc or mov je lahf hlt lods das call hlt lcall or jp mov jl push mov xchg shlb popf orl addr16 or loope pop mov xchg pop cli cmp sub xchg adc (bad) iret mov jb xchg add and cld sar int mov test sbb xchg lret inc (bad) pop dec pop sub fs mov insl pushf (bad) cmp inc scas jle movsl sub or lods and push je or int dec cmp dec cmp aam add xorl cmp or and ljmp rcl aaa push (bad) lods sti xlat imul imul push mov jp notl lcall mov je xchg cli adc orl sbb in jmp xor pop std dec iret (bad) mov inc stc pop ljmp mov dec imull push jp sbb inc out clc push fildl xor idivb enter cmp or je inc addr16 bound andl inc test cltd inc fwait xchg addr16 fwait ret imul jo icebp mov (bad) loope addr16 adc out mov cwtl dec in stos ja (bad) rcr xchg dec inc mov loopne mov pop call xchg and or leave aaa xchg xchg test jbe push hlt cs std loop insl xor sarb xorl add mov imul (bad) xor fldl jle pop data16 mov jb lds mov nop sarb sub inc rcll lahf pusha leave in xchg push mov lahf push mov mov mov rcl inc add jns mov mov arpl jns repz fcomip les ret rcrb ja lods pop add mov test inc sbbb ds push in mov mov and lock ds aaa (bad) push in mov push xchg (bad) adc das cli (bad) iret cli cmp add push mov mov pushf stos sbb lods gs jae add add ss sub add jae subpd xchg add adc out mov or sub cmp fwait jmp mov jle ret dec fisttp lea bound (bad) fcomi test out imul es push cmp and clc cmp jnp jecxz negl cmpsl ja (bad) jmp das mov mov sbb lock roll cmp mov into mov xchg or movsl inc popa scas jnp mov push push adc dec xchg lea inc push pop ret and out sti push jecxz out (bad) mov or fcmovb gs and xor and or ss in cmp fiadd and or xor xchg and adc (bad) sti (bad) push inc or sbb cmpsb movsl inc pop out inc cmc pop out in ds stos lret ficoml out imul insb jl jecxz jo (bad) mov outsl out das push in ret sbb subl lret mov fcoml insl lahf dec test ss je popa daa lahf pop mov std jbe xchg xchg dec pop adc out mov xchg popa into adc mov sahf and add push cmp pushf xchg sbb mov cmpsl stc cli lods (bad) jp or scas (bad) or pop adc sti into xchg test mov lock xor push mov sbb cli leave arpl faddl popf pop mov dec pushf push cmp xor adc jno jns clc fs addr16 ret sahf int es cmp (bad) imull clc nop jle rcrl pusha mov sub je insb sbb sbb push inc and imul add jne inc negb in in xchg imul imul paddd lret mov cmp inc jbe das fs mov out mov sarb out mov in mov sbb dec test inc jp push jno mov adc xor out ja add fsub in outsb das lock insb add sub sbb stos outsb and and sbb cmpsb mov ret mov mov pop mov jecxz outsl in mov mull fisubr xor cmp stc mov cwtl rcll popf mov ja aam and sbb sbb xor cltd mov adc push sbb in arpl ljmp lds shlb jo jp scas mov mov jnp and jb push xchg imul mov xor ficompl sub aas push fs out xor (bad) dec ja addr16 jecxz arpl popa xor cli sub jge mov mov mov rclb mov or (bad) push mov mov jge daa add add mov sbb lcall sbb mov bound cmp jbe adc cmp adc fcom adc xchg movsl cmp movsb leave mov add dec and add push imul xor in outsb mov pop gs rcl repz ret shr iret mov pop mov inc int mov in or cmpsb fisubl pop js inc cmp xchg fwait xchg and lret push cmp cmp push (bad) stc and repnz iret pop mov add cmp je out mov adc mov and stc frstor int3 jmp pop je sub mov andl dec ss xchg inc dec and cmp mov mov insb addr16 mov cltd int add inc rorl pop or mov insl popf jle xor sub push (bad) xadd aas ss sbb andl lea mov adc jg out ds into mov pop or addr16 aad dec ljmp cli xchg std add lock es xchg xchg sbb xchg xchg add ret jnp insl das nop adc fucomi mov scas sbb sub adc out scas pop jmp sbb iret (bad) adc sbb xor dec (bad) xchg in aad xor xchg jnp outsb enter sub repnz js cmp jbe shrl adc movsl test xor mov mov inc test or cmc cmovs mov in pxor outsl stc pop mov data16 rcll pushf lods mov or sbb push insl cmp xchg xor enter jecxz jmp aad scas sub sbb lret and lds (bad) dec sahf fisubrl (bad) mov and cld in rcll cmp cmp shrl jne idivl mov arpl sahf pop push mov jb das xor lea decb pop push inc xor xlat stos pop lret das imul aas subl xor js pusha mov ss dec arpl out jle mov mov insb aam movsb bound stc or insb stc dec aaa adc cmp aam sub push mov gs jae mov sbb lods popa enter fwait and es jae adc aaa sarl jle cmp and test int dec int3 fbstp aam movsl aam pushf mov dec or aam push mov loop sbb cld outsl stc pop sbb xchg imul fcmovb movsb xlat adc imul mov out lahf test mov icebp jo push movsb pop adc cmpsl sbb loop popa adc push cmp push cld mov hlt cmc fs popf sub sbb add int nop push ja jmp sub adc push dec insl mov pushf pop or imul cmpsl pop xor pop adc in mov leavew jbe rclb adc mov dec push movsl xlat mov inc int3 sub ljmp add adc xchg mov add pushf mov outsl mov ds jg sub in jge sub jns or and lcall mov imul mov ja aas add push lock shrl sbb mov dec movsl jns addl out scas xlat in js test adcl sub adc outsl hlt mov xchg mov shlb data16 ss mov and popa stos push add xchg mov imul rep jo push loop mov add mov mov sub aas sbb imul or in mov mov inc repnz lods dec sbb test movsb jmp xchg std jae (bad) in aas out pop xchg test rorb xor bound and inc adc inc pop loop jge in dec lret sub outsl movsb dec sbb test rcll icebp fwait daa repz and jnp xor fwait mov lds ja jecxz mov push jecxz out dec cmp das sbb data16 mov fistpl adc push jbe push cmc (bad) xchg jb and ss push test test ds (bad) pop mov fstpl addl mov andl jp push dec lods nop pop pop ja bound sub test mov sub dec mov pop lahf mov mov sahf pop mov push imul ret pmulhuw adc xchg outsl setnp int and addl mov adc fistpll inc mov in mov add mov (bad) adc xchg (bad) cmp mov repnz push mov add mov mov int fnop sub xor push scas push js inc insl push mov mov xchg adc (bad) aad lcall add popf mov push int3 stc cmp pushf std cmp jb pop enter popf fdivrs dec mov mov ds imul inc adc loopne xor and lods and lcall add lret adc jno add inc (bad) addr16 add jl aam std jnp aam adc (bad) lahf mov lds sub pusha xchg mov xchg and sub int3 mov addr16 push push inc pop sub lock lret sub pop cli movsl add mov loopne mov mov sti mov jmp lcall ds loop push xchg sbbb push mov cwtl dec fdiv divb out (bad) mov cltd xor pop adc xor ljmp popa mov lcall inc add push xor mov jno aas pop mov pand cmp fdivrs adc inc imul stos mov jg pop push cmpl push out vxorps push pop pop int3 push stos mov ficomp lret lret xchg insl push cmp push xchg jl dec rol fnsave bound push es leave xchg js push idivb add sti in xchg cmc lcall jne cltd dec cmp xor scas xor add enter mov imul icebp mov frstor push jmp or dec ret pop outsl cltd ret out cmpsl jmp push cmpsb ja adc sub adcl popa sbb out adc cmp add cmpsb jae dec fistp addr16 mov or cmc jl pop xchg adc push shrb pushf cmpsl insb insb adc inc sbb sub or sar test insl pop sbb mov pop inc arpl jge lahf xor (bad) addr16 shlb dec or (bad) cli sbb lcall int movsl lods shll repnz sub popf xor mov xchg movsb pop subb stc (bad) xchg iret inc nop repnz mov hlt lcall scas pop in sub out aam (bad) xor cmp popf jo push mov mov pop arpl insl and mov loope xchg dec ja test mov cmp mov sub fcomps xchg jnp pop sbb lods or pop cvtdq2ps (bad) fs pop cmp xchg aam jle mov notb dec lods mov (bad) mov xorl enter mov mov add sbb lea or scas adc pusha xchg gs repnz dec mov popf ret push mov adc leave cmp pushf adc mov dec nop aas pushf pop or and cli test xchg mov jnp fs dec arpl push mov sub and jb (bad) sub pop ror mov mov stc push clc jae call sub jecxz lock out imul push out push cmp mov (bad) mov mov (bad) outsl or mov mov iret cmp inc daa int3 or lcall mov pop test ror imulb shlb repnz sub jmp iret popa push rorb or mov repnz dec in lea mov divl (bad) out sub add in cmc cmpsb push mov mov outsl pusha addr16 loop mov cmp inc aaa fcmovne xlat aas daa jae lods xchg ljmp nop std adc or testb jge popa inc es pop stos push insb loope,pt ret ret dec sub push test pop push enter outsl icebp movsb mov push mov es sub hlt xor cld xchg je add xchg fmulp mov daa ret mov hlt in inc fisttpl pushf jecxz xchg cld loopne cs (bad) mov add and jo (bad) cmp push push out add add cmc pop xor push lds stos inc nop mov inc cmc lods fisubrl dec js pop mov mov stos movsb fcomip add loope push movntps sar push and in cmc orl sar pusha dec adc add sub std negb imul int3 or rolb mov enter mov frndint movsb fucomp jo ja (bad) pushw xor push jmp ficompl in jns cmp sub dec aaa (bad) hlt ret inc dec test xchg (bad) aad add lret popf (bad) mov pop fildll cmp cmp scas (bad) ljmp fldenv mov jp mov jae outsb (bad) jo repnz pop jmp mov xlat mov add rclb mov lods sub xor loopne in add icebp sub mov or cld jl mov sysenter xchg out (bad) mov faddl jae cwtl data16 addr16 push in cmp jae adc mov xchg jp add cmp arpl dec pop stos ret out mov popf cmp shl ja add xchg and repnz cmp xlat inc hlt in into loop je sub in or repnz call push insb stos xchg (bad) out sbb cmpsb mov mov xchg data16 jae shrb (bad) xchg in out xchg mov jl xor aas cli rcrb loope and add mov daa add sbbl fldcw jp jo mov mov xchg xor test and mov xchg adc (bad) cli mov movsb jne cmp ret fcmovnu addl mov or and lret loop cmp popa fiadd cmp (bad) push incl pushf out test mov imul inc add test push cmpsl scas loopne out mov xor mov int3 bound ret andl adcl mov jo mov mov cmp push stos jl (bad) leave fwait inc repnz mov dec mov or or cmc flds and cmp add dec dec movsl mov lahf scas pop push adc mov out inc mov nop pop das adc movsb push jge aam or pop and in es push daa stc mov fs out or cmp cmc xor (bad) scas or dec ret pop sti xchg or mov inc xchg cmp outsl push add dec sar ja fs jo xchg mov adc xor pop ss cli repnz adc sub hlt pushf mov mov jl lahf (bad) mov adc add cmpsb sub (bad) xor jge cmp cmp test int (bad) jo (bad) divb add lods dec cltd mov cmp xchg stc insb sub push (bad) fbld inc rorl mov push or add push jge shl inc stc fild fstpt addr16 mov inc call push inc xor rcll (bad) std push cld (bad) lock jmp stos fstl in sahf or cmp jmp inc cli sub inc mov pop enter dec (bad) sub dec outsb lock sub pop sarb mov and add push mov std out int jno xchg mov push sbb es xlat add and fadd into xor inc dec sti cld add pop or pop add mov xchg dec dec insl roll movntps mov ficoml arpl xchg fdiv inc ja js xchg or (bad) adc or dec cmp pop pop adc ja in dec rorb mov (bad) jns cmp lret sub xchg push popa mov lods in pushf nop out and dec add jle xchg mov push mov daa rcll jp push scas rorl mov xchg sbb loop,pt mov adc (bad) mov xchg loopne es mov ljmp jge pop push bound adc inc fdiv je mov bound and sbb flds add xor imul mov stos repz inc sub in add push in jp add push xor mov push push out pop scas push fcomps fs nop out dec or jb xor (bad) (bad) xchg xor fistp add fadd sbb xchg dec push int3 mov fdivp stos mov inc ss fwait xchg ss arpl push mov lods add lcall mov loope cwtl dec fsubrp mov xchg movsb adc mov cmovle dec mov into inc insl rolb or int sarl lahf popf repz xor (bad) adc hlt sub or mov cld sbb jns rcll or idiv sbb mov (bad) incb push dec imul aad aaa add cmp inc push (bad) (bad) mov in mov pushl test movsl fisubl mov and pmovmskb jmp mov mov adc mov add imul adc mull sti imulb jl mov lret mov jl inc iret cmp bswap xor and lahf bound jo dec outsl and stos push pop or fiaddl xlat cmp xchg hlt (bad) test inc data16 out and pop push mov mov insb mov das call loop xchg divl push inc sub mov das inc in fmuls loopne dec push pcmpeqw fbld jo stos lahf (bad) sbb ja pop mov outsl dec jb lret mov push push xchg out out cmp js cmc pushf push fiadd add xor inc xor sub push pop aam ja sbb jecxz gs mov gs loopne mov jae push leave cmc aaa out repnz sub js (bad) adc icebp cld addr16 (bad) lds inc mov mov and or icebp inc xor jl jns inc or add xchg lahf pop mov call adc (bad) lret insb inc fmull mov into (bad) push add dec out clc subl sub fstl xor js (bad) fsubl js xor daa hlt inc fwait lret or test add ficoml dec inc cmpsl aam mov sbb ret mov cs mov xor sbb pop pop mov mov push cs testb aaa cmpb mov (bad) (bad) sti arpl jns push xor bound mov or xor in mov icebp cmp xchg hlt fdiv sbb jnp add cltd scas and push (bad) pop inc mov jle scas mov test scas cmp fisubl push test ret push cmp (bad) fdivrs sbb dec mov popa jae adc rolb jp xor lahf inc lahf scas push mov xor test aad or sub xchg movsb adc sti insl mov aam icebp and and inc adc xlat jnp xchg cltd aam mov and shlb faddl fs dec fsubrs xchg fsts js and sahf mov sub xor inc push inc mov or icebp jnp or cmp sub insb push (bad) mov aad sub adc pop aas test push es xchg mov inc jo lods xchg jge bound cltd sahf lods pusha and ret sbb in cmp or sbb jge xor shrl cmp inc inc adc cvtps2pi inc dec ljmp push lods (bad) enter dec mov in (bad) cmp sub dec je jae in int3 es subb mov inc dec cmp insl inc ret movsb mov cmpsb mov enter mov scas sbb sub daa les pop sbbl test xchg movl mov xchg mov cmpsb push repnz xor movsb and dec clc pop cmpl inc mov icebp lcall sub xchg pop fidivr sub addr16 add mov xor sub fcmovbe (bad) push adc mov or xor inc sub add in fidivrl imul int jmp hlt push jnp mov sub adcb sub (bad) or mov sbb adc inc shll (bad) mov (bad) xchg inc ja pop stc bound mov jl iret mov jbe mov jle xor adc cmp push adc outsl or sbb add mov std test stc cmpsl stos movsb (bad) fdivs fstl lods aaa mov push outsb cmp repnz data16 adc mov jb aam push cmp out cmp push mov or push push fs push ljmp test sub add add popf pop sub fbld and clc arpl scas adc bound nop int mov mov mov jns inc add adc dec xchg pushf mov out xchg (bad) xchg mov pop ss push lds sub push gs sub bound mov nop movsl les pop (bad) hlt leave inc inc dec stos pop lea fisttp mov repz xchg mov jmp or shrl jecxz rclb divl push insl mov aad push cli jno sahf (bad) xchg or lock mov and hlt jp sbb xor outsl je and aad test lcall jg ret (bad) hlt pop shrb sti mov adc aam push ret cmp mov sti sbb cld sbb xor (bad) inc mov mov xchg mov iret jp pop xchg in add and xchg jno xchg push (bad) push (bad) dec stc inc push or iret fldt xchg dec xchg inc loop pop push xor mov xor push insl dec mov pop cmp mov stos sub and (bad) (bad) sub fildll mov jnp por xor sub cmp fnstsw call faddl pop pop imull pusha mov ds (bad) sub adc test mov orb inc and fiadd jp loopne pop les divl data16 xor mov scas (bad) icebp aad add out xchg movsb pop pop xchg push mov mov scas sub push insl adc mov mov jnp jbe fidiv stos mov outsb add int ficom mov xor js sti in jle in mov add imul out xlat cmp into rcl (bad) into test sub sbb inc cltd push xor lds jl fmuls and sbb push cmp fs mov cli xor cmpsb fidivrl xchg into movsl fmuls sahf in push pop or pop fs push test mov rcrl push pushf mov jg cld sub cmp cmpsl out movsb call inc stos pop aam arpl xchg push xchg adc jecxz or (bad) mov das aas dec adc cmp incl cmpsl dec xchg xchg outsb test imul add sbb mov rcr sub (bad) sub fdivl rolb nop mov add jbe mov inc sub in jne and fcoml lods (bad) push lods jb cmpsb push aas lods lret aad pop jne adcb push mov or and jnp mov jns sub (bad) out xor arpl repz add jmp cmp fsubs pop xor (bad) fstp pop adc das fcmovu out test inc mov jb xchg arpl out jecxz push jg push jg ficomp sbb movsl xchg addr16 jns push or jo ljmp dec (bad) sahf test dec jl jl std test mov ret mov jae xor cld or lret loope scas inc add mov xchg sbb stos dec dec scas mov jo dec mov (bad) xor sub push sub xor add sbb dec and stos cmp push lods js inc outsl (bad) cltd out jge inc (bad) cmp xchg xchg push jne (bad) pop jmp xlat (bad) icebp je test andb push int3 mov cmp in or scas cltd sbb sarb rclb pop leave clc add incb mov mov mov in and mov jbe lret aam clc jb pop add cmc dec xchg iret sbb cmp and push (bad) add sbb out leave jae iret jae cmp dec sub pop imul je int3 lea cmp scas (bad) scas sub sbb xchg inc dec mov push xor scas ficomp inc hlt add test les push in fildl scas xchg mov test dec mov mov lahf movsb lahf shlb notl and cmp pop adcb sbb ret out cltd mov push pop jnp stos jno add cs arpl cmp mov jle xchg lcall mov mov sti js movsl pop jae sub (bad) mov clc bndldx aaa std and popa cmc inc cwtl push cmc sbb xchg mov dec (bad) call or jnp push add movsl test xor add adc mov push lret roll aaa pop push pop jbe adc rorb pop repz xchg cmc cmp out dec (bad) jae popf mov lods test xchg fcmovbe in (bad) push fcomps push inc int3 test dec xchg les pushf push lcall sbb push rcl sbb scas push fwait adc inc cmp mov sub push and outsb push push fcomps cli jl sbb add ficomp xchg test or adc movsl lock shl lret sbb or jmp rorb cli push cmp es xor push loope imul push and and outsb out mov test movsl leave or sbb loop sti mov add out sub inc xor mov add std mov loop and xor push scas pusha rorl sbb stos pop adc cmpsb outsl jmp and dec xchg adc jecxz sub (bad) pop and pop mov mov loop jb xor push push pushf inc adc sbb jmp mov adc mov ret xor xchg or cmc fsubrs add mov mov popa arpl sbb in sbb js enter mov imul cmp pop adc (bad) jecxz lret movsb rcl cmpsb dec stos popf pop popf and dec push das (bad) repz andl movaps sub push inc test movsb xor or ljmp addr16 mov jecxz lods lods pop pop jne jae lahf adc ss aam arpl sub ss ret fsubrl push inc xchg test mov pushf data16 xor or insl jne or dec dec cwtl sti jmp dec jae ficoml and movsb push in cwtl test imul bound mov push cltd dec jne cmpsl jo add mov mov stos jmp xchg pop scas pusha push out daa add scas mov or jl mov mov push xchg mov push fstp fidivr jp sahf cmp mov (bad) scas adc mov fimull jmp push cwtl das xor cmpsb aas out lods xlat jl and repnz movb inc or repnz lret roll sub cmp sbb nop push mov xchg inc outsb jo loopne sahf nop sahf jbe push push mov out push les int3 adc mov cmp sahf adc mov lock (bad) jg (bad) mov sbb dec inc roll ja push mov xor stc sub les push idivl inc (bad) in dec mov jns jmp imul inc mov loopne push xor lret ror dec mov add pop aaa lds jecxz sbb mov mov mov cmp sbb addr16 mov mov repnz ss (bad) mov ss dec pop lcall pop dec mov pop adc push or lret cltd loope push imul fdiv jbe fnstsw clc outsl xchg lds fistp cmpsl nop cmp fcompl lret sahf or test and and icebp pop into dec or jns pop loope xor data16 cmpsb negb aaa out rorb adc lcall mov mov jl addl sbb xorl aad test leave and ret pop mov (bad) xor scas fwait in jbe fsts xor in sbb inc dec jp push or push cmc or adc cmp in dec sbb add mov mov mov push dec xchg adc xor rcll lods les xorb adc div out or or mov lret addr16 jns jge mov loop cltd mov fmulp loop sub insb xor cmp pop jne push and lods les test es mov in bound adc mov push xchg jg repz push nop fistpll ret popa cmp mov jae lahf mov fnstsw in mov mov int mov fwait sub mov int les and lea fs popf rclb xor or adc push sarb out stos lcall rcrl sub test push add jnp mov (bad) insl out push sbb lock pop dec enter xchg xor ficomp and mov aas sbb mov mov sub gs or jge cmp or sbb enter or fldcw insl xchg out iret in js outsl mov sbb je es mov outsl je push and sub sbb or xchg outsl add loope ja pop pop loop sbb ret pusha dec fldln2 mov imul pop jecxz mov xor cmp test (bad) xor call sbb out sbb mov push loop dec outsb jecxz pusha push inc lret ja adc scas sub jnp xchg inc repz jo arpl sbb cli (bad) stc xchg xor bound pushf test add into push gs out pushf dec xor cld aad add push adc mov inc sbb mov pop mov imull dec lahf out stc sub and bnd rolb int (bad) jns andps sti das sbb mov add cltd call mov movsb jp pop loope push inc inc stc cli mov outsl testl and loop sahf (bad) int3 push jnp pusha fstps mov inc add mov aas xor inc into jbe jbe rcl add repnz test sbb call pop push or lds pop pop fild sbb lds (bad) jg sti xor lret xchg add sahf fnop fwait icebp shlb dec out cmpsb inc cmp sysenter daa and push jbe sbb xor mov add inc inc sbb mov lret repz and add jbe jecxz push mov ret jne sbb test in outsb sbb sub fcompl test pop jmp (bad) std push addr16 jno leave mov mov sub xchg push std sub adc mov movsl dec sbb enter int mov int3 adc (bad) in enter scas in sub test cmp push leave mov aad mov jbe lock repz imul (bad) xor aam rclb ffreep xor arpl sbbl cltd dec (bad) out test incb jg test imulb ds in jns das pop js movsl rcrb jnp inc pop mov fnstcw (bad) push dec dec lods int adc fcom outsb adcb xchg negb out dec test shr xchg sbbl mov cmpsb and (bad) and mov inc (bad) fldcw dec sbb sub pop mov xlat rcrb mov daa (bad) mov push jmp iret jo jnp cltd pop stos in mov and fdivl pusha clc fnstsw sub xchg push mov cmp xor mov mov fwait push xchg stos je hlt sbb test aam mov mov cmpsl xchg cmovns scas ds mov loope jmp in cmp xor sbb sub inc pop mov add js pop pop (bad) dec in pop outsb mov xchg les shr std das mov inc and sti sub test lcall mov rcll (bad) imul dec jg push divb lock in iret xor (bad) mov cltd orb fsubrl push or or loopne int mov and dec int lods xchg iret and and out dec fildl sbb sti fild jb and mov mov clc (bad) outsl jl leave xchg cli push into movsl pusha addr16 in mov mov shr fyl2xp1 and test loopne mov adc jecxz ret jg test pop xor jb mov (bad) movsb js push je lahf mov les sub pop addl or aaa mov std clc ja add sti aaa jb cmpl aam and pop gs sahf jl pop adc push lahf push sbb (bad) mov jo and loopne (bad) pop pusha call or je mov cmpsb pop rorl push (bad) mov mov hlt cmpsb sbb adc dec push divb cld fldt or jp jmp leave sar xchg xchg push xor xor lock xchg adc sar in scas inc mov pop in aam pop out cli in xchg hlt push mov ret test mov mov xor add mov inc inc inc xchg test sbb push dec in and bound outsb aad test inc in subl cld xchg dec mov inc pop roll loopne in gs xchg or xor jb mov sub mov lods (bad) int3 stos movsb fsubp inc dec jle mov fildll in in movsb ljmp jne pop dec dec jns push mov inc lret addr16 xchg insl insl pushf push or mov rorl sbb test cli pop adc mov test pop dec rol (bad) divb mov fmull or inc daa and and jnp out mov xor xchg mov push sbb sbb (bad) rcrb mov jns xor xor xchg cwtl add scas gs sub xchg scas xchg jl (bad) (bad) xor (bad) pop fdivr sbb out hlt jns inc sub in mov cmp (bad) mov fmull test xor sbb push shlb rcll mov add jnp xor in (bad) ljmp jg stos lret jno in mov cmp insl xchg xor rorl push sub sar cmp lret xchg push xchg or add push sbb sbb scas test enter les push push fnstcw pop arpl adc iret cmpsl out fsincos mov xchg and push fcmovnu sbb scas mov scas iret loope imul test fisubl mov dec add loope mov dec stos and loop pop das ds (bad) bound pop fmull and xor dec in add jl in and loop sbb cltd sbb fisttpll push jo int aad repnz dec dec cwtl je (bad) out pop movsl mov imul add and cmp addb xchg fwait (bad) xchg fsts test push dec lock lods cmp adc movsb add fs xchg cld sub stc mov mov lea out xor sbbl xchg out add outsb es mov jp clc notb ja fdivrs cmp dec cmp jno loope and sbb gs fildl pop xor mov loop xor scas inc mov pop lods cld lock lods pop dec lods mov es mov iret sbb lcall push and in mov shll xlat adc dec xor (bad) mov (bad) push cmp pop inc bound insb inc push fcmovbe cmpsl jle and lcall clc xor ss pop jg stos push in addr16 fidivl imul ffree jbe dec xchg xor add nop sahf pop mov adc mov jno (bad) test jg jle or adc dec dec pop sarl insl int3 je pusha jmp and pop or iret das insb sub roll xchg cmp aaa pusha jecxz xchg mov xchg push das push je sti call lea push or pop sub add out mov adc int3 and jbe (bad) into push (bad) scas mov sub jae adc mov ret in negl outsb jo repz and aad push sahf test mov sub in aas mov aad in scas sti lods dec test jmp pushl or inc or add adc loopne into add mov pop jle push les dec xchg int3 xor dec and dec scas insl out sarl dec mov dec sub cmp insl sub in and sub lods insl sub imul in scas imul adc or clc ffree scas notl mov inc mov jle hlt xchg mov fs int3 daa into mov jl cli push fldcw aas aam js xor push lods add into cmp ja leave insb nop std mov push cmpsb jo cmp fcmovbe lods ss push arpl or pop or lods mov mov lret cmp lret push imul jb dec jmp mov in inc movl or test sti sti sub aad in lods movsb jo mov or cmc mov sbb testl pop mov sub mov xchg mov hlt mov imul xor pop add adc in cmp clc cwtl loopne insb jnp mov jbe fisubl sbb push sbb pop mov int fsubrl fdivl sub das xorl mov lret repz (bad) mov mov cmp ja in ja fsubrl ret lret sbb loope aaa sbb arpl nop sti lock sahf fildll ret mov inc adc dec fs jl xchg sti push aam dec push dec push cmp addr16 test sub push sarb out negb push loop fbstp (bad) repnz push in out mov cmp aad adc adc fldl adc in ja xor (bad) and mov das or adc leave add inc ja movsl jp scas and mov xor adc cltd pop pushf mov sub xchg loopne jns lds imul xchg sahf pop loop outsl sub lods subb adc mov push lock pop mov mov adc push mov mov lret mov xchg jne sbb pop xor mov and dec inc adc (bad) sbb inc mov movl mov loope xchg mov (bad) out and shrl sysret int pop cmp sub arpl push fldcw inc out pop fsubl rorb xchg cmp std shrl (bad) inc add fsubrp xchg mov (bad) push addr16 lcall (bad) in lods orl or xchg or repz add loope pusha dec dec jo xlat nop dec add mov inc pushf inc dec xchg jl jecxz es movlps cmp jg call inc sti adc lret pop pop sbb cmpsb mov test test (bad) pop mov rolb pop add or ds mov gs fildl (bad) mov movsl sbb (bad) divl loopne or or xchg hlt jbe out xchg jne cmp xor cmp mov xchg pop sar dec aaa loop in std mov in cmc pusha xchg sbb jecxz je push and and outsl fdiv inc inc gs inc sbb mov push int dec call sti mov push pop inc xchg or fwait xor fisttp insb arpl mov xor jle scas loopne icebp jne lret jp (bad) push mov outsl xchg dec push mull in fxch addr16 xor pop sbb add psubb es data16 cld fwait cmpsb cmp pop sbb aas and pop es punpckhwd lock xor jne cltd sbb add fcom shr jnp jmp mov stos sbb fidiv mov push mov inc mov fwait mov cmc sbb lods enter stos xchg inc aad mov or mov push test cmpsl (bad) sti adc fsubrs adc pop add add dec sub xchg repz sub in sbb xchg sub rcll nop mov fucom xorl ret loopne mov sbb call ret jmp and inc mov or xor mov mov jns sbb addr16 xchg stos inc xchg aaa icebp sub lock adc xchg in repnz (bad) xchg out mov imul cmp in fwait in movsl sbb inc adc jb sarb sub (bad) xor adc cmp in test pop jns mov mov push lods dec sarl dec cmp out imul pslld add sahf addr16 outsl push ficoml ss jle jp pop cli jmp mov pop dec mov arpl (bad) out push in pushf inc sbb adc or inc imul stos xorb push jo push push adc mov mov mov mov lods (bad) fidivr xor lods xchg orb and addl stos mov into add flds out xchg jne fstpl dec cmpsb test mov dec jg mov sbb jno scas pop and fisubl popa hlt pushf xor cltd or imul push fdivs adc xchg ficompl cwtl mov repnz push mov jo pop and sub out in mov adc dec aas jmp jg jb add pop sbb js pop rcl jle out mov je xchg gs sbb jb inc flds scas mov push cli sub mov and adc (bad) dec inc jns lock mov xchg mov cli inc cmp fimull icebp push pop pop push pop insl js pop aas js aad inc push add cmpb xchg in (bad) dec jg adc pop test pop xchg and ret (bad) outsb inc fsubl xor mov sbb cmpsb add dec pop dec dec rorb (bad) add ja mov add sti mov gs test cmp jno xchg push mov cwtl (bad) icebp addr16 cmc (bad) popa imul sub enter inc dec loopne movsb inc ja test fistpl pop ds pop push xchg in push mov sarl hlt scas (bad) mov cmc dec pop mov push add sbb mov lods movsb mov fiadd jecxz mov rcr insl ret mov lods lahf and push sbb daa pushaw add adc lret pop sub xor in les stc fs or cli out into xchg mov mov aad insb mull jecxz es fstpt xor inc mov negl imul fisttpl mov inc repz sub cmpsb cmpsb sarl icebp hlt cmp fdivrl push push adc dec mov mov lahf cmp lock mov jle fidiv dec cmp jno dec mov xchg call or adc jecxz jmp xlat fimul inc int3 add ficoml fmul push dec sbb sub jle test xchg mov xchg lcall jbe cwtl mov stos lods mov aas stos or mov cs dec push fnop gs cli test xlat dec sub out dec sbb push pushf inc sub jo ds and sbb xchg decl arpl xchg mov jbe mov addr16 fcmovbe push loope adc inc mov jle std cwtl sub out push insl incb or xor and cmp stc cmp lods daa mov out js push movsl mov (bad) xchg loopne roll pop out cmp lcall xchg jns enter andl mov push add push outsb mov shrb (bad) pop movb vcvtps2pd cmp mov cs fnstcw stos sub xchg lds (bad) jle xor je xor les xchg test or pop sub cltd imul xchg pusha loope fistp sahf mov fs mov or (bad) cwtl pop lock push push and inc inc add xorb out mov jb in test dec dec cmp pusha push aaa mov xor jae outsb lcall iret insl dec jae cmp cmp inc push mov cld call std xorl (bad) dec pop mov data16 dec lea jne imul mov call in outsl pop loop test rcl jmp jl fwait stos fdivs outsl mov pusha xchg ret sbb sbbb mov lods pushf ret and add shr and mov sub hlt pop jmp clc in rdmsr sbb dec scas inc xchg sbb xchg (bad) mov jne daa jae lahf sbb pop loope popa cmp mov mov es inc xchg lahf rcrl (bad) hlt outsl add (bad) ret sub insl (bad) fnstenv sub jle popf sbb push inc in push das ljmp add gs mov rclb (bad) push push and nop (bad) aad jge jmp in jp mov mov mov push add lret xchg insb ret fidivrl mov jmp sbb pop push stos add pop cli cmp inc div inc adc mov shlb dec jle mov iret (bad) jno test nop pop mov and jns mov mov and orb rolb lcall jmp pop clc stos sti push push fildl and cli jo das rcrl cmp enter js push test repnz cmpsb and mov cmp (bad) ret sahf sub adc cltd pop outsb gs sub faddl xchg sar adc ret pop sbb pusha sahf lock cld xchg scas scas fmul jae fcomps xor fcomps push into or add cmp subl scas jp outsb nop fnstcw add or outsl nop clc mov and stos daa (bad) cmc lods fidivr bound jns push push jg lock aaa outsb leave (bad) ljmp jo push jg pop sti pusha icebp xlat loop in jp imul (bad) fidivr in inc (bad) mov xchg repz out sub repnz cld ficomp adc repz dec subl inc (bad) xor loop into push sti inc mov sub jmp and (bad) inc sub je ds ja xor sti roll add lret loop xchg insl fcom scas in adc lds lock in cmp adc inc lock cmc aas pop xchg cmpsb pusha xchg in pusha sub lcall test outsl add dec lcall testl lods clc jmp sbb dec stc sub xorb mov mov sarb in xchg xor mov xchg xchg dec dec mov cwtl lcall and sub pop push stos (bad) cmp out and add daa mov pop inc or aad xor push clc adc xchg mov sub shll pusha mov movsl stc decl cmpl icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop (bad) aas add incl or cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in (bad) jb or add adc jnp addr16 (bad) cmp (bad) jge mov pop aad or (bad) push dec cwtl jg sub dec add or mov mov lock sti in or sbb loope in cmp fs jmp callw div xorb (bad) scas ds cmp cmp mov std push outsb mov imul sbb pop xor adc mov xchg push int and movsl cs test movsl stos std nop inc sbbl sbb out push in or aam xlat data16 clc popf add addl mov daa jno mov mov mov lret and cmpsb cmp mov loopne fst cld push mov cmp cmp jae mov jo push imul out cltd mov inc paddb aam sbb push dec adc outsl mov icebp push fldcw jae inc mov imulb push cmpsl imul inc push push jp faddl jo (bad) mov lret xchg ret jo mov pop das das (bad) fidiv rclb dec aaa nop mov orl or inc fcoml xchg cmp das add cmp pop lods (bad) icebp das xor das outsl lods nop jp mov jl stos mov pop jns imul xor pop aas xor rolb or (bad) popf ret insb push insl fcmovnbe lcall data16 push sahf (bad) xor (bad) pop shrl loopne fistl pushf (bad) push jp movsl aad outsl xorl dec push adc jmp cmp mov imul xchg outsl dec mov daa cwtl cmpsl mov jge dec mov repnz sti out and adc add pushf or inc push fild pop js repz ds jnp stos adc add out mov mov arpl mov stos addr16 pop or xor mov call das add cli xchg mov jns push and xchg pop int3 std inc cmc ja and mov or sub cmp popa out adc push ret or fstpl xchg sbbl jle lds lock (bad) mov cmp add xchg loope cmp out and jle mov (bad) and movl fcoms fstps rcrl popa or lret cmpsl pop jp lret icebp lret (bad) sub sbb push dec jns fisub stos dec or dec mov mov std mov (bad) dec xor scas sub push lahf insb sbb mov adc cld push ret add int jno je jno mov jb stos adc pop icebp inc xor jae mov shr fsubrs pop pop ljmp xchg lds fbstp or pusha xor in xor adc adc bound push bnd xchg pop divl fwait popf xor xor sbb rcr aad loopne mov dec pop jmp inc mov outsl add pop scas pushf js xchg mov jns jae nop lahf pushw mov jb test xchg or (bad) mov outsl and pop in fldl mov out jnp int cmp roll pop out idiv arpl sub or mov pop pop ss (bad) push and jae mov add leave addr16 sbb push stc insl insb or xor pusha and inc sub (bad) mov jno out sub ret pushf sahf or test clc repnz jle dec pop leave fs mov push and jl mov pop mov pop pop jns mov aaa dec sar pop add cli xchg jmp mov mov mov mov inc ret pop aad (bad) ljmp out lea hlt cmp lahf push jge jbe jnp mov push dec cli inc mov adc neg aas incl test sti test and pop pushw roll jp jno nop test xor mov dec push dec pop lret pop xchg sarl loope jg repz es popf int3 scas jle sbb daa data16 and cmp sbb mov mov cltd (bad) repz icebp loop ljmp xor ret imull inc lret pusha (bad) sub loopne xchg mov pusha repnz ljmp jnp push shll xor sub cmp stc xlat popf add mov jle jb jg aad or cli test insb hlt es out outsb pop sahf push cli adc lds sub and and dec ror jg jns jno lahf jg mov scas fisttpll pop mov lret adc imul nop jnp fstps jmp mov mov mov xor dec repnz in push cmpsb jne push cmp push push push or mov mov rcl mov cmovns imul cmp insl stos xor daa (bad) sahf cmp xorl jno out dec cmp mov xchg (bad) stos sahf jnp loopne adc in sbb fucomip dec popa hlt mov push mov dec adc lret lret enter inc popf sbb xchg sub jl xor add add adc xor cmp arpl xorl aam loope cmp inc add negl and test add outsl sub icebp test aaa xchg add fdivrp dec mov push mov xchg pop pop out das (bad) mov pop jmp sub enter clc or cwtl pusha int xchg (bad) xor (bad) ret xchg xchg xor fisttpll mov in mov jecxz pop mov jl leave push inc ljmp inc mov leave inc or cmc pop scas mov leave into or std pop and std rclb cmp loopne ds popa imul pop daa (bad) jb repz xor lcall dec or repz mov scas (bad) int push xchg fs mov lea inc mov mov add jg push cltd adc leave out adc xchg adc fdivrs mov data16 xchg jae out cmp les aas bound jno rcll les inc sbb cld les jnp dec (bad) loopne inc hlt inc ljmp cmp insb (bad) mov call push sub repz pop fsubrs fnstenv daa xchg gs pop push push xchg fidiv dec cmp stc mov dec mov mov push adcl xchg inc lds mov cmp es scas imul and push add sahf mov addb cmpsb pop sbbl add jge adc call dec sbbb (bad) insb cmp adc jne aaa (bad) mov push pop inc fadds and inc jo frstor mov daa cli arpl aam dec jbe mov std test addr16 js notl lea (bad) scas jl out cld jge imul jl jb lods mov mov or mov fsubrp or inc divl cmp addr16 stos insl xlat xchg mov jns test or adcl insl xchg push sbb pop adc pop pop and out int3 in pop mov adc mov add pop mov mov aam fimull xchg push push and jo cwtl test loope dec or nop sbb xor fimull in out lods push cmpsl loopne movsl fstpt ret nop sbb ficoml mov cmp cmp xor push in pop pop in xchg mov clc out call xchg nop scas dec mov xor pop push push movl mov scas mov in or xor sub arpl mov inc shr dec pop sbbl shrl sbbl ja out lret cmp pop rcrl or loope (bad) test imul orl or sub popa sbb mov xlat int jecxz mov in mov popf iret arpl jnp call insb sahf jne stc xchg sub push xlat movsb jge fiadd pop out xchg leave das ret cmpl je push cmp dec clc addb jl cmp add or int3 fistpll aam or mov les pop pusha enter xchg in or daa fdivs push sub push dec xchg ja adc (bad) jg leave dec mov (bad) pop imul (bad) out mov push jae adc mov jae jecxz les cmp js inc loope xor clc pop gs outsl lods push fidiv dec adc mov sub mov mov cwtl jl fidivr sbb push or pop mov mov xchg inc jle push ftst inc test fsub pop mov mov data16 xor jo adc mov sbb insl jo cwtl fs adc mov jg jns sbb into xor insl sub lds fstpl mov (bad) rcrb adc jne dec loope dec daa fistp push loope push rcl jns mov sbb push int (bad) jl adc mov (bad) jmp ret mov mov cltd mov out dec xlat sub mov repnz into hlt lea adc loope adc lret dec lcall cltd shrb xchg dec dec mov adc or pop pusha fnop or aaa negb insl sbb push cmp mov jns mov mov pop push (bad) adc add cmpsl jecxz pushf push test es das jmp cmp and xchg dec lea fwait xchg (bad) cld mov mov sub icebp iret jmp lods repnz dec lods daa daa pop pop les jl pop movb lods xor add loop inc pop inc mov and int mov lahf fcompl jg push inc jg test sbb mov dec sbb outsb mov jne int in int3 lcall stos dec cs xlat or out xor jno,pn or scas mov ret ljmp out xchg decl ret popf subl ja cltd lahf lahf in adc adc xchg and push daa dec inc mov xchg and sub sub and xchg aaa cmpsb pushf fstps or das inc jle movsl jle jge cmp int3 test dec or repz inc loope or jbe fisub (bad) in loope pop cmp stc testl push cmp mov jne int3 sbb and in and push (bad) stc mov xchg out xor ficoml xchg ret es cmp xor rcrl mov insl mov add jp cld fidivrl nop push cwtl mov sub pop es jge jb sub or (bad) xchg inc aas dec bound or data16 inc adc (bad) mov or add ja nop nop mov es mov lret out out sbb daa mov push popf int sbb and (bad) sti mov mov lcall js xor movb and ret mov inc insl stc dec inc out daa push rorl jp (bad) cmp (bad) test notb adc fnsave pop inc insl in out mov cmc pop jne in (bad) push mov enter jo fmull inc lods adc mov cmp (bad) or jle cmp dec call xor test jecxz mov sub mov add shll andl or mov pop icebp adc sbbl mov test cmc call cmpl daa fidivr mov push jbe cwtl sub pop call adc popa pop dec mov in fiadd or in xchg scas add jnp into stos sahf cmp cltd adc adc test adc lret and push (bad) cmp hlt lcall mov add pushf test xchg adc pop int3 jb sbb push push outsb in pop or push push andb mov pusha and je (bad) (bad) or mov jb mov sub out jl,pt add lock bound cmp lcall mov push lret out push adc xlat orl rcll negl push mov mov sbb lock xlat clc lcall dec xor add decb scas or lods sbb and call dec out jecxz push jecxz std mov stos ds sbb cmp mov cltd enter das jo in sbb xchg xchg mov daa ret sahf xchg and dec push jg,pn sbb mov movsb xor popa jp lods dec enter jb inc (bad) (bad) mov jmp xor pop add ds mov dec ljmp pusha (bad) aad inc adcb mov cmpsb cmc pusha or mov adcl pop into add dec and xor mov imul mov mov pop sbb add jge js iret push out mov pop int3 fdivrl mov popf scas aam imul sub lea and je out testl add fnop cmp add jae std pop enter mov jecxz mov popf mov scas ja mov cmp hlt cmp sahf dec lret loope clc (bad) jo add or je mov or add ret and scas das hlt imul std pop add pop test and cmp pushl jnp sub push pop dec jmp dec xor add pop clc adc loopne mov gs push popa jo rorb inc ret rcl cmpsl and call fild jnp je fidivr mov mull jg inc mov cmpsb test cmp and fist jo,pn jb xor adc repnz gs lea pop push push cld xchg (bad) cmp das mov popf push pop fildl stos scas aas sbb loopne or inc arpl sub mov mov repz push push jns sub sbb lods add scas xlat mov jg lea out cmpsl fwait mov psubsb jmp fidiv movb jg call cmp aad xchg popa aam repnz mov lods pop movsb ficom cmp jne and adc cmp ss xchg imul xchg pop inc int3 es nop call and cmc or cmp sub xchg dec lock ror mov jge xchg jle push inc scas mov cmp pop icebp add cld mov inc dec repnz push fstpt repnz cmpsb fisubrl xrelease push or stc pop jb mov int3 rcll add sahf mov dec mov nop imul or aaa dec xor mov xchg sub lds pop and mov int3 sbb cwtl cmp addr16 imul jg mov jne out test lds xchg xchg int mov xchg in mov aam std xchg adc xchg rolb inc xchg popf cmp jbe ret sbb sub jg mov rolb sbb loope mov repnz in add lahf arpl pop push clc lods shlb inc push fcomp es movsb gs leave testl pop aad loopne sbb out loop jge push cmp and inc push push adc pop stos xorb into dec loop dec jg cmc push rclb call pop movsb rcll sub cmp push adc lods push loop cltd dec cmc adc adc insl mov fldcw pop testb das and sbb pop add loope sahf jbe cwtl outsb clc mov loop inc jne sbb cmp push nop addps test sbb inc lahf lea mov sub je (bad) jae or (bad) in adc adc push out pop repz or ret jl cmp rcpps inc insl cmpsl js mov mov and xor hlt (bad) jno,pn leave rorb inc sti xor mov add in jmp hlt cmpsb cltd inc mov sub (bad) dec sbb aas xchg inc cmpsl add cmp pop int3 sti fisttpl adc repz in cltd xchg and int cltd mov insb push sbb xchg sub dec pop push call loop inc clc sub (bad) mov xor jmp adc dec fwait clc ret lret jne lgs xor or je dec outsb inc ret add insl les sub mov mov or add mov andb je into sahf test sbb dec sbbb adc js or xchg or loope inc or mov cli negl xchg (bad) fisttp and xor sub or stos pop movb push lds mov test orl push adc sti lock test test sub rcrb sub aas mov cs loopne aad mov sbb cmpsl stos xlat xor push mov clc dec lret mov mov push cltd (bad) mov fmull jnp mov mov out mov mov popa movsb mov sbb adc scas sub inc in mov leave sub outsl ja flds pop or leave repz fisub push icebp dec ret fistpll jg mov and sub pop fmuls int pop aaa rorb int3 addr16 movsl mov stos cld jmp outsl dec jno adc cmpl not push mov (bad) mov push push xchg and scas js jb call sbb cmp jb mov jmp jno popa sub pop mov je js cwtl sbb stos fcomps inc arpl popa out mov push mov push dec pop mov lahf je jle je loop popf hlt ss mov outsb je xchg mov pop cltd push (bad) xor bnd les mov mov dec (bad) cmc clc jp adc sbb (bad) fucom int sbb add jle or sbb jle xchg jae scas idivl enter pop inc push stos mov cmp adc xor fldl jne ret xchg ret xor mov lahf push mov jecxz cmp addb imul and fimull fcoml jle js pop mov (bad) out cmp inc in sub stc sbb mov sahf dec stos jne adc aad sub or pusha push outsb dec jecxz mov lods rcl loop incl pop int pop push cld mov fwait stos adc icebp xor mov cmp sti loop pop mov lock jnp imul push push out mov mov inc xor sub adc mov sti mov jl lret dec std icebp inc aas clc sub mov or repz ds and or (bad) xchg out cmpsb xchg mov jge inc pop inc out jle sub pop and (bad) xchg sbb jno shrl inc xchg gs repnz into fild xchg test or jg or cltd mov mov add (bad) mov sbb sbb loop mov outsl outsb push fdivl out dec cmp loopne or cwtl adc mov sub pop loope lcall and ret ret in cmp xchg mov jbe adc push sbb inc sub dec roll (bad) icebp pop pop pop push push cmp or test gs sub and dec inc and mov add or loop fs mov icebp or push fs mov or je push and test sub mov leave mov hlt dec sahf rcrl inc mov out inc mov pop stos movsl cmc nop inc pop enter mov xchg mov cwtl nop cmc test stos add ljmp aas (bad) sub in sbb and loopne xchg stos iret icebp nop or xor stc jge mov fwait pop daa iret inc push jno fidivl pop sti and ret inc xor jle stos mov or or mov push repnz and cmc push mov or (bad) ja mov es aas xchg or scas test inc fldt push js mov (bad) rol lods cmp add dec cltd std push mov cs sbb loopne mov sarb loopne js adc push push mov adc loope mov ficompl cmpsb dec cmpsb icebp push scas clc popf pop sbb inc xchg mov stos cmp cmp mov insl mov scas fmull sbb std data16 scas ss (bad) push xchg in insb xchg out sti sbb mov mov lret jle gs outsl pop mov push ficompl inc stos in jg mov ffreep push test insl and fnsave mov push and cmpb mov lret mov (bad) into jle sub ljmp lock sbb or and pop cld mov xchg dec jg fistpl sub mov sub pop mov int3 push add imul inc inc (bad) or iret loope mov test sarl fmul pop std rorb push loopne adc inc xor pushf fadd pop loopne jecxz mov leave outsb rcrl jns mov push or add cmc sti (bad) std pop stos xchg fsubrl pop aas pop jns push cwtl push das rcrl outsb addb xchg jmp leave adc dec js adc fwait adc sub mov (bad) mov sti jl pop dec xchg or dec addr16 cli outsl push fucom std mov dec add or nop/reserved fadds fldenv (bad) add cltd xor popa les mov add stos inc push test scas lods sbb mov in pop xchg adc scas fisubl scas sbb sub and ss add out mov xchg pop and inc dec movsl jnp outsb mov shr stos loop ret and inc pop mov jp je sbb and ljmp adc mov es adc adc pop add out cmc push fisttpll push lret pushf dec or inc add mov daa fstpl aam xor ret jne pusha popa lods xor ret fisubrl mov inc shr push cmp pop inc adc outsb xchg sti jbe sbb push xor clc mov test mov mov xlat and add jge adc icebp f2xm1 repz das lret (bad) pop ljmp lock sti lods add jo je adc add js xor cmp inc or sub jmp xchg mov xchg (bad) fsubl rolb pop sub dec enter divl pop jno cmp ret fldt test pop pop fs add es lods aam mov pop fstpl es lea pop sbb lods test dec cs icebp (bad) jecxz dec pop (bad) aas adc inc jnp add enter mov enter sbb addr16 xor dec daa enter xchg std in sbb outsl call stos xorl cwtl lods push jbe shl or sub repz xchg fmul mov xor loop jmp mov cmp lcall fnsave and mov dec lcall xchg mov lret xor add lret cld repz call cld aaa std push data16 std call lret into xor lock jb add mov das je mov int or imul xchg pop xor std sahf pop xor dec movsl cmc dec add push repz mov sub out stos pop adc sbb mov or and daa pop push movl ret fiadd and in cmp mov jmp popf movlps mov dec add jmp addr16 sbb shrl mov cmp or out jno (bad) pop inc test pushf mov pop rcr loope add jns movsl rclb imul popf fnsave pop inc repz and xchg xchg hlt mov test sub (bad) repz leave mov imul rcll inc jbe sbb pop mov mov faddp jae fs fdivrl scas or or pop inc gs fs jge and cmpsb insl (bad) js movsb ret cmp cmpl adc pop mov cwtl push outsb cmc mov and xor sub fs daa sub (bad) into and loopne xlat outsb add mul clc dec fistpll push xor xor repz cmp clc stc push (bad) cmp pop and nop dec mov mov scas push jo cmpsb test sbb pop xchg pop pop ror inc mov les mov mov daa repz fbstp mov mov xchg aad xor call or (bad) cmp fidivr xor and pop aam or lcall test add sub xor dec ja,pn fstl push jno cld pop inc mov iret mov lock mov mov sti iret sub mov je std repz cs decl mov cmp xchg and sub mov in xor leave push sub lds mov xchg rcl out test xchg std pop fstpl outsl adc repz xchg or pop lods sub sbb push js lea std bound sbb jp cmp mov cmpsl push es mov inc mov int3 pop cwtl jno jns and mov (bad) test or jne,pn outsb add pop insl add mov adc ret cltd test lea lods dec sti (bad) in inc dec adc adc lods out int ja js pop stc aam push arpl sbb jl (bad) pushl push fwait pop lahf mov sti loop mov sahf jmp xlat sbbl (bad) mov xorb cltd mov rcl dec pop insl fidivrl mov sti lods dec scas add xlat ja push pop mov jecxz pop das push sub test sub shll jne dec repz jge insl and jne jno rorl aam stos push leave stos daa iret jle push mov jmp test bound adc jae daa les pop (bad) (bad) hlt or imul imul pushf mov in mov das or repz sahf adc pushf pop std pop lret mov jmp mov xor xchg dec das inc ljmp pop sbb xor sbb popa std inc and out clc dec sti out mov aas and cmp jmp cld lcallw loopne xor cltd pop jb mov jecxz decl sbb mov pop xlat into out lods mov and and and aad dec cmp outsb aas sub cmpl imul iret inc mov (bad) (bad) idivb jne mov or push and xchg into scas mov xchg mov sub movsb xchg imul jmp sub outsb or pop (bad) ja repz loopne jmp mov movsl sbb int3 push jno push adc or push (bad) or xchg mov jmp and mov jbe iret (bad) jl mov mov test add cmp fwait (bad) ljmp dec adc flds call popa iret jmp in dec sbb xchg aas sbb inc insb aam adc or mov pop loopne pop int3 (bad) mov imul adc fs jno hlt mov or adc lcall and popf mov xchg hlt jp push ljmp stc dec push bound sbb add int pop adc inc adc das int scas pusha sub sub sub bound mov rcrb fdivl cltd shl rclb xor jecxz stos sbb (bad) aad inc push sarl fistpl xchg mov cmp into fisubl sbb cmc gs or sarb call in jbe dec and movsb out (bad) cmc movsl sti push pusha jmp test (bad) xor scas push or jb xchg mov jp loope push mov push test mov xchg repz jnp jae cmpsb je loop push inc test xor push mov addr16 mov xor andl jp jae das test inc pop cmp into int3 mov mov push (bad) jns mov imul sahf pop xlat pop dec movsl dec aas (bad) xchg cltd orb and push push pop or cwtl push out or push cli cmp cs inc mov arpl push addr16 fsubs repz fistp pop jno ja mov sub jno (bad) testl fisubr jnp push inc pop test rolb dec jl in and les (bad) xor cmpsb fwait movsl pop or and shrb rcpps insl push in aad mov push roll mov xchg fsts push sbb int loope roll inc push mov sti les mov mov add outsb pop push ficomp fsts mov push icebp jbe and xor xchg add xchg test xor xchg add mov push ljmp stos outsb adc and and mov in bound insb jmp outsb xlat pop je inc add js,pt insb pop pop out jge je xor sarb fsubl xor mov imul call and gs data16 inc (bad) not mov or inc repnz shrb xor enter jecxz das add push and lds xor ljmp icebp lock mov adc pop outsl inc pop xchg jge mov mull mov xlat xor ljmp dec sub clc dec push dec es (bad) frstpm(287 push and mov lds clc dec scas mov sbb inc scas sbb mov lret lahf das add jno push push fwait mov cmp sahf mov (bad) dec fmuls pop lock pop cmp cmp lret or out inc js in inc push jecxz pusha dec into cmp cmp or divb imul das xlat movsb addr16 ja je and mov mov sub pop dec ja xchg add dec inc shr jle sub imul pop jbe and adc inc sbb in xchg pop mov xor sbb pop or not popf or cmp mov sub adc jo stos out loope jne mov hlt mov mov pushf cmpsb test inc pop mov les call lods cmp test dec dec push pop daa (bad) stos (bad) fwait mov push lret cli ret imul jb fistpll sub xchg inc in aaa test dec cmp repz fs lret push addr16 inc mov (bad) pop pop add xchg out mov or js lea jbe adc out leave jbe pop adc push xchg mov push jmp jnp push push sbb cmp mulb movq mov sbb adc imull dec mov loop lcall adc mov loop movaps jns pop mov loope jne dec xlat mov push pop les (bad) adc pop out pop in or mov es inc loope xlat jle mov cs enter push sub mov mull test es and mov pop xor (bad) dec inc dec mov inc jo jge hlt push jle fiaddl rolb push loopne imul mov enter je out push fsubs xchg pop mov jmp push xchg insb mov xorl adc stos inc push cli push das sbb cltd or xorb ljmp pop ljmp (bad) das mov push cmpsb dec adcl or xor faddl push fwait mov pop mov jge js hlt add jns daa mov adc lcall xor mov (bad) and rcll gs mov dec sub add icebp notl sbb rcl aas loop fcoms add inc sti je fmull bound adc jge sbb mov xor inc lea xor ret sahf rol pop inc sub xchg aas xchg jp (bad) les dec inc sbb mov jne lds and or mov jae or into jns adc lcall push and mov dec push pop int3 sub inc sbb adc mov cmpsb mov xor es subl jne sub cmpsl icebp popl sub and int3 (bad) in mov lahf add (bad) outsl dec je (bad) or pop popf into int3 test push cmpl dec (bad) lcall test add movsl xchg mov int scas pop std jbe,pt pop sbb packsswb jnp prefetch mov sub pop mov mov cmpsb pop and les push cli lods xchg inc sbb jg adc in imul xchg push sbb cmp inc mov mov mov lret xor pop les into dec lock in sub inc stc lcall movl int3 into jmp pop ret or and stos pop xor push cs dec mov (bad) int cmpsb cld sahf test xor xor dec scas pushl int or cltd xor or in xchg dec push or mov pop jae enter out mov add leave mov xor scas mov (bad) mov clc push xchg loopne adcb xlat sahf (bad) movb les mov mov inc insb sub adc cwtl scas (bad) pop add iret leave cmp mov jmp fnsave pop cmp cmpsl or jge jnp outsb or bound fidivr (bad) je (bad) rorl out xchg cltd jno xor sbb xchg insb sbb sbb or cmp (bad) inc cmp dec pop sbb jg cmpsb test add out (bad) sbb lods test outsb (bad) loopne sub cmp push fildll repnz dec or and add adc mov xor pop lods fwait cmpsl dec (bad) leave cltd int3 fwait (bad) repz pop imul cmp xor dec add inc fwait push test int hlt dec mov jmp inc xor adc andl nop add mov icebp mov jmp (bad) lock (bad) or xor adc add mov push test cmp (bad) lret mov mov mov add mov adc out jp icebp mov stos mov bound fistp push sbb jle jge clc xor xchg mov mov clc and sti dec and fisubrl sub push insl mov mov pop sub jno dec int add mov lds jo das and das push rclb scas pop loopne sub roll shll inc out clc sbb push ret cmp dec negl mov cmp cmp test (bad) je cltd or les xor mov vpaddusw outsl adc push mov push sahf dec mov jmp sar and call (bad) fwait les jle cmpsb icebp call jno mov and mov xor sbb jg and stc pop mov cmc sbb dec sub push mov rorb cmp ja (bad) (bad) fwait push pop dec out es sub cwtl int3 lds push mov mov stos push ljmp push xchg in iret std push push in popf mov mov fistp adc ret inc or xchg pop push int ds xorl (bad) push das add int3 and xchg push cmp adc (bad) and or jne xchg sbb add imul mov shll jnp mov lock xor xor xor out add cli or lret (bad) cs cltd or in loop or (bad) sbb xchg xchg or dec push hlt sub popa (bad) (bad) push stos push (bad) rorl push out dec mov ss in add cld pop andb add int dec mov sbb lret cmp and push push clc rorb and movsb outsb cmp (bad) js test mov pop xor add adc push aas shrb lea mov and lcall add divb adc loope push (bad) sarl pop inc dec imul hlt aam je rorb xchg dec aad in loope scas sbb cmpl xchg imul push ret (bad) fisub push mov dec pop and or jne subl stc (bad) add fild test aam jl in mov outsb sbb and test movsl (bad) nop sub pop ret inc pop dec add stos add cmp fldl mov outsl xorl cli call jae mov pusha cli fs inc xchg mov sub fs dec fistl or inc mov (bad) dec sbb in stos loopne cmp les popf loopne or jae push dec sahf jo out enter in cmp fcoml sbb out mov push mov jo inc mov sub lds out sahf push add ds mov movsb cmp loopne pop xchg (bad) (bad) xor je xchg mov adc (bad) shr jo orl ret int3 fs jb and stos sbb xchg pop (bad) cmpsb in pop js data16 cmp mov out sub stos or cltd cmc insl xchg in ljmp ret push (bad) insb lods fisubr cmpsl insb pusha adc cmpsb mov inc std dec adc cmp xchg push mov xor fidivrl fs lock int in scas enter lret cmp test cmp test push (bad) sbb mov lret nop push sub divl aas test or movsb sub cmp or adc xor outsb jp lock fbstp pop ljmp popa es xchg jbe inc sbb imul push cltd mov lcall gs dec jnp adc repz scas jns push pop aad mov sub pop and push add dec sbb sub mov pushf adc cs or add push mov fdivs mul xchg icebp hlt or sbb aas cli loop lock fwait out dec cmc int cld cmpsb jge insb out sbb int and sbb fmull loopne jae ret iret lret mov scas jns shlb call mov or cmpsb and test mov outsb pop out cmp test jo pop in mov call mov push (bad) lock lret ss sbb push in mov into sub mov adc rcr rolb xchg xchg add lods arpl inc push adc cmp dec cs add ja int into mov insb outsb push mov data16 or push lods pop (bad) inc xlat inc insb jg mov loopne cmc int aad add dec (bad) scas cmc xchg jne push andb movsb adc outsb push scas xor sub stos dec mov dec xlat in mov sbb xor jns fdivrl mov stos jg dec pushf mov pop js push push xor mov scas int3 lds adc lds mov stc xchg mov mov xlat aad mov jmp gs movsl cli add repnz icebp push mov fsubrl mov dec das push std push lret movsl sbb mov jbe xchg js jge cli (bad) lock or movsb pop inc mov dec aad fsin sbb xchg mov std adc cltd cmp cltd outsl ss push sarl movsl fdivrs stos icebp push rclb add (bad) lods push jp int3 mov les insl int3 or mov inc rorl xor and push sbb out xchg or xchg pop xchg lret mov push repz lahf xor jg lea mov xor inc inc pop and mov insl push std cld (bad) xor and gs adc mov xor xchg les (bad) jae adcl mov adc or add sbb dec push in outsl ss imul movsb lods mov hlt sub enter fs je jecxz lock pushf ds mov iret arpl jb lods adc pop test mov out jl and sub or push mov mov bound or loope inc sbb sbb cwtl xchg push sbb cmpsl jo jg sub mov push fildll leave add xchg sub in ljmp sti dec push add mov (bad) call mov gs mov sti jle sub scas push icebp loopne ret sti pop or rclb mov in (bad) fildl sub cmp dec mov inc test pusha dec je cwtl in rorl xchg jp lahf (bad) js sbb in cmpb cmp fsub ret and jmp xor divl ss sub call pushf xor and add xlat pop pop pop jle push scas (bad) mov pop pop mov test xlat xchg (bad) dec sbb dec movsl cld pop lea clc cmp enter (bad) bound mov jbe addr16 int3 jmp mov sbb adc jne insb pop xchg adc test and out stos jns nop push mov inc xchg adc addr16 aam test aam inc js push in imul (bad) xor mov in fwait mov cmp andl jmp mov xchg push push add adc les or aad pop xlat push sub mov (bad) push mov sbb fstpl sahf xchg adc test dec ss scas frstor ja add rol sbb scas addr16 push cmp leave insb (bad) hlt cmovp aad js pop inc jge or (bad) sbb in push push fiadd jbe add sub fdivs sti xorl and add (bad) pushf xchg js mov xor push (bad) (bad) or adc ss mov fdivrl lret xchg mov jle cmp out or mov rcr js (bad) xchg pop push popa push (bad) or aad into arpl sbb cltd loop mov repnz stos adc in push subl sbb mov sub js hlt sbb stos and push adc jmp (bad) fisttp mov fdivrs sbb mov das aaa pop test (bad) call icebp popf sbb pop sti push pop enter es aad cmp in stos int3 js scas (bad) out cltd sbb imul pushf pop push ds mov (bad) imul adc repz test inc dec xlat push stos addl sbb icebp bnd icebp repz daa mov add sti mov adc push ljmp inc adc cmp jl,pt mov cmp mov nop (bad) loopne mov test dec mov add cli pop inc adc or dec data16 nop adc push fbstp mov dec cs ds sbb mov dec cmp outsb aas cld dec ja jne jae aas cmp cmpsb popa fcoms fldt fs mov or fsts add pop pop xchg lret arpl pop add jnp ret rorl movsb cmovne iret lods call (bad) lcall lcall sub roll xlat sbb rcll pop cmc loopne or test xor dec or xor jnp cmp xchg add (bad) icebp fidivl pop inc cmc pop pusha in push leave mov mov fistl lds or or cmp sbb xchg push outsl divb adc repz loop lock stos sub add gs rcrb xchg adc pop inc sarl gs scas loopne in jo pop push les cmp add xor fnsave imul gs add cli js adc adc jl jl mov jno xchg push jmp loope mov cltd inc mov test andb xchg cs ss mov sbb adc xchg (bad) ret int pop out pusha xchg aaa sub mov movsb sub sbb push gs or push pop dec cwtl frstor xchg negl aas dec xchg xchg clc sbbb inc or data16 adc sahf les push insl stc (bad) jecxz inc or bound xor imul (bad) out test inc jo scas push push (bad) adc mov adc jmp jp xchg movsb xchg (bad) icebp dec mov lahf add dec stos in cmpsl (bad) fsubl push jg in and mov repz cmp lock cld sti (bad) stos xchg mov mov test inc adc jge cmp stos cmp daa movsb nop xchg adc scas mov xchg cmp (bad) jecxz cmpsl test outsl pop imul arpl mov stos in das popf add mov ds ds and out or mov add inc and mov loopne pop aam inc push jbe rorl cmp ljmp fcoml mov (bad) divl repz push test divb xor (bad) xor lcall mov xor es in movsl add xchg add (bad) mov inc pop hlt or jecxz adc pop push sbb cwtl add stos inc ficompl jnp adc clc adc mov dec fsubrl add movsl dec adc cs movsl pushf ret mov iret aam pop sbb jns inc mov test xchg xor cmp xchg push stos add out leave inc lods and xor fsts mov stos mov push (bad) clc add ljmp sarb cs movsb xor cwtl je sub fnstsw cmp push scas rorl mov divps cmp (bad) jge xchg dec jg in lods xchg int dec add fsubr inc jl cli sub inc lcall pusha mov mov fsubrl sbb test test lahf fcompl (bad) push pop bound pop addr16 pusha sub outsb das or inc push ljmp fidivl mov pop jge sarb jnp pop out jb cli ret xchg mov sub and femms pushf mov mov inc jp outsl scas hlt cli ja,pt je xchg mov or notl cltd or mov sub sbb int cmpsb fstpl mov sbb mov loop mov fistpl sub jns stos or in mov push mov inc add add push fnstcw sbb (bad) icebp mov dec pause cs mov adc lahf mov adc push idivb sub cmp adc arpl jne lds movsl mov push xchg scas lahf mov inc adc out dec notb outsb mov jne push sahf mov roll mov lret into into (bad) or stc cs das cmp testl sbb and scas out sbb adc and adc ret rclb pop imul addr16 lar loopne push fisttpll rol repz sbb sti or push test sub pop clc pusha fsts inc mov and and repz pusha jp in roll ljmp cld cmp mov pop pop inc adc jo xor jmp orl sub repnz js scas mov adc xor jne add push fnstsw fwait stos std mov dec xorl stos and in inc jnp cwtl add lgs loope adc jnp jnp add jg xor pop dec inc pop outsl push xchg sub lahf lahf loopne lods sub test fisttpll test jnp jmp inc pop inc cmpsb sub sub xor clc mov or xlat aam icebp loopne mov mov dec mov (bad) repz jb mov add inc popf imul mov popf je lret test dec lods gs rcrl xor push fxch movsl scas mov aaa adc pusha push (bad) cld outsl mov sahf xchg cli jmp push mov mov outsb sub (bad) fsubl sub add dec imul adc sbb into loop scas cmpsb rclb mov rcll in test sbb iret ret das cltd push push (bad) pop pop pop jge dec movsl sbb mov repz sti cmp addr16 scas out mulb cmp dec mov ja insl dec std (bad) jno mov xor cwtl pop dec mov xchg popf aas pushf push pop push inc jecxz leave cmpl in es mov shrl xchg mov imul call cmp enter daa cmc xlat sarb jle mov inc sub es loopne ss (bad) mov xor lods xor movsl pop aas jns sti rorb cmpsb repnz sbb mov stos mov mov mov test push aam pop les loopne sti pop ss insl aam sbb cwtl adc loopne adcb pop mov pop push jnp shr fidivr les dec xor and mov daa and dec shl fs pop mov and (bad) std in enter sbb pop imull mov mov inc jmp paddw adc add ljmp (bad) jg movsl scas leave mov xchg cs jg sbb mov cmp cmp rol push sbb push fnstsw push shll insb (bad) xor pop jae ljmp ret add test or sbb sbb dec lahf or outsl nop fs cmp mov mov fdivrl pop push cmp bound jg std lds les jmp and xchg adc mov sub test and mov inc stos bound add outsb clc ja push mov or mov and jne pop cwtl repnz gs fbstp fist or es sub or jge data16 push in in jecxz loop xchg xchg fnstcw add std mov in in clc sub lock adc sbb ret (bad) dec xor scas sub add ljmp xchg arpl scas mov mov adc adc repnz ljmp push sub aas push lcall push mov mov and add jb call inc negl sti mov push jbe pop inc pop xor inc addr16 clc mov mov or xchg jb push inc adc jno jmp and loopne sarb lea in imul mov (bad) mov push jg xchg loop cltd and idivl shrb movsl xchg pop fistp pop imul inc roll push ljmp jge fsts cmp sbb inc sub aas jge inc out mov pop addr16 aam sub popf lea jbe mov mov inc or fstpt jmp fdivrp or jne adc test sbb pop (bad) loop dec or push rcl cmpsl popa push jle cmc out (bad) jge mov cwtl jns mov dec cli repz jns or fucom or aas (bad) xchg leave jle jns cs dec data16 inc xor and xor inc adc std out in out out rcrl lcall popfw xchg jo fxch std adc sbb jge add cmpsb add imul jne popf push jg (bad) (bad) inc mov inc (bad) loope mov mov cltd jne dec sahf cwtl sub arpl mov lret xchg or and out pop in test cmp cmp sub enter lea faddl push sub imul push push push addr16 ds test es aaa fldcw adc gs ja xor inc lahf fsubrs mov fsubrl pop or in pop xor add outsl inc jecxz lods dec rclb popf xor call jnp test or or and adc add add jmp les sub enter mov pusha movsww adc in pop in sub cmp inc xor scas daa xchg stos inc nop sarl stos cmpsl xor dec adc shrl mov adc pop stc (bad) push xor sahf and mov sub xchg in sbb or leave jb loop dec inc sub (bad) pop lock fidivr and pop lea (bad) push sbb pushf adcl test jne cmp fdivl pop jno andl jo clc mov sti ljmp js fstps mov adc mov adc cld cmp aaa push mov jge lods iret leave mov divl aas jno cli jae outsb decb in fmull ret pop mov std es pop lcall xchg gs movswl and (bad) out add jmp shrb out in mov mov loop,pt shrl mov test aam add pushaw in enter pop and movsl xchg je lea popf sub dec sub push out (bad) ficompl mov push xchg cmpl lahf icebp ss mov fsts lahf cltd xchg testb jp xor mov push (bad) es iret lea imul sbb es movsl popf dec std pop sub jo (bad) aaa std ret inc xor or loopne jecxz mov and jbe (bad) xchg ret addl sbb ds imul push mov cmp scas subl movsl hlt jmp bound mov movsl or movsb cs in (bad) push in dec cli lods (bad) mov pop sbb dec pop pop cmp or sbb dec xchg outsl fildll mov icebp mov xor adc cmp or mov ss js aad cmpsl (bad) push mov mov sbb add push insl subl mov jb aad fs add or outsb fnstenv jbe test lds fcompl mov fadd sti inc cmovns aam cmp punpcklbw xchg cli aaa sbb mov push aad leave (bad) ss push ljmp jge (bad) xchg adc inc xor mov push jge stc jo arpl leave fnstsw (bad) cmpsl hlt mov rolb nop inc sub popa addl inc rolb ret sub mov or add lret les cmpsl (bad) aaa push stos mov or daa push fwait xchg lahf out loope sbb shll adc cltd push loopne mov jle mov or mov call xlat pusha stc flds into mov ds in cmp or (bad) sub pushf mov pop jno push lds cwtl mov or add idivb xchg lds movsl pop pop (bad) stc cmc sbb outsb and xchg inc incb data16 iret push xlat push popa fisubr in mov scas fisub sub fsts test in test addr16 mov and inc pusha or mov cmp (bad) jno pushl and sub mov xor sub es sbb mov or jge inc sbb lcall dec mov xchg out movsb iret lods dec cmp cltd pop lods inc outsb mov stc cmc fildl jne cmp adc push popa (bad) jae inc jle push das popf push enter pop mov mov push aaa or decl ret or sbb aas nop cltd jp inc repz popa push mov dec (bad) pop push xor dec and aam inc xlat cs lcall cmc leave mov shrb add adc mov sbb add pop add fwait movsl sbb jae jp mov popf push mov mov repz xor dec insl lret push pop arpl sub in push faddl mull add xor cs aad aaa push lahf lods add ljmp pop sub lods inc inc sbb int3 and pusha (bad) sbb repz shrb push cltd in decl cmpl icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop (bad) aas add incl push loope push xchg add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in fadd bound adc sub mov stos (bad) (bad) insl fucomi (bad) adc enter mov leave push add outsl add imul adc jge push ss in int3 xchg daa jns dec lea inc std ret xor jns and roll (bad) xchg pop mov repz adc push add or add pop sbb and in (bad) jbe,pn iret jnp dec dec adc cmp sub std cmpsl jg mov into ss and rcl imul call loop fdivs cld xor repnz xor je fildl adc in out or rclb addr16 lahf pop loopne clc xchg das dec aad in xchg sahf sbb ja stos pop xchg int (bad) hlt scas aaa xchg mov sbb sub sub add sub fwait leave fwait jmp imul repz cli pusha push mov shlb inc lods jb popa outsb idivb mov sbb dec add xchg lcall rcrl in push clc imul stos aam fwait and xchg fiadd mov rclb jb mov mov je push fcomp (bad) mov cmp aaa inc js mov aaa mov pop pop (bad) xlat push mov jnp adc pop cwtl mov mov rolb (bad) pop std xchg ja mov outsl or pop rcr notl inc pop push inc sbb std push xlat adc negl fcomp ss mov cmp add push mov sub jno add dec xlat (bad) dec adc sbb add jmp xchg loopne xchg pop sahf faddl leave push fwait test sbb fs xchg mov mov dec mov arpl dec push mov test hlt les outsl (bad) cwtl mov jg push push fwait (bad) mov mov lods es fcoml repz push inc xchg mov sbb pop arpl ss je scas push addr16 rolb mov ret clc xor cmp fdivp xor sbb mov or lods mov mov cmp jne sbb clc stos xor xor int imul bound pop inc shll fadds mov popa clc jle inc mov xor cmpsb out idivl addl jle ja loope faddl das (bad) and pop pop pop sbb pop inc imul jmp sbb and loope push push mov add fstpl out sub pusha jae and sub mov push mov int in push pop shll gs cmpsl addr16 divb lcall sub fstl or outsb pop js (bad) and sahf dec push push je das js push loop jnp repz ja cmp mov pop cmp or dec dec nop dec xchg test js imul scas mov negb inc mov fs jne repz mov sub jbe jo test xor lcall (bad) movsb sub push movsb push fdivs (bad) aad les dec dec loopne insl xchg and mov lcall and xor mov xchg dec sbb addr16 fbld add mov rorl jmp mov push (bad) ret pop push add jnp and inc out jl cld das sub and fldl cmp xorl mov mov jnp jne lret ss rcll jo xor mov jmp fbld sub or lods sbb xchg hlt lods in mov xchg and lret not cli xchg fxch xchg insl jnp fcom or sub stos test pop mov and lahf and fnstenv xchg add test out jno adc xlat and and aaa xchg lcall addl or scas hlt sahf lods lahf insb xchg stos cmpsl dec loopne int3 dec add jae pop loop (bad) add aaa pop sbb lds and xor (bad) clc xchg sbb xchg mull jl xchg xchg inc and cmp push mov xchg jle cwtl push mov fist jbe xchg mov aas ret jp test test mov movsl push sahf dec xchg aad or clc add add xchg outsl push xchg (bad) xchg pop fldcw mull mov enter xchg inc test mov cmp cmp in cmp mov (bad) jne fsubrl sbb aaa or int3 xlat repz imul loop xor stos pop mov aas cmp ss setge leave rorl sbb mov add cmc add push (bad) xor into mov in ja scas fcoms pop fwait ret cwtl cmp jge mov test (bad) outsl shr shlb pop cmp int3 je in and ret ds push mov dec pushf jle xchg or fcmovnu aas stos xor xchg add adc loope jmp sbb jle shll aad mov sbb (bad) sbb cmp call jno jae adc clc xchg pusha lods cmp movsl inc jp sbb pop jno push adc test mov pop fidiv or jg sbb (bad) ljmp sub sarl mov or inc roll test (bad) stos xor fs push xor and in sub or mov clc in push fldt (bad) push adc negl imul loope inc (bad) sub addl push imul (bad) in xor ss (bad) fstpt lcall mov inc out imul jne call pop repnz add dec mov fs ret sbbb add incb out add add push icebp sarl push imul ja nop mov jbe mov fiaddl inc negb pop push sub popf (bad) add popf sbb insb movsb scas mov inc repz es jg mov ljmp push jge testb mov jge insl xor push lcall in outsb xor (bad) add mov xor gs push dec mov bound pop movsb xchg cmp addl rcrb rorb mov iret lcall cs push pushf xchg pop cmovge int3 loopne jb dec push test je punpcklbw lock cltd sub jg popf into fsubl aas popf inc lcall add mov sbb stos adc imul cmpsb xchg mov es sti xchg pop pop fdivrs scas lea (bad) imul cmpsb xor mov add sub scas imul add es enter clc pusha cmpsb in outsl mov or rcll faddl movsb push lcall mov andb outsl pop adc inc jle add mov scas outsb mov ss into test add fst scas sbb sbb cmpsl jp cmc inc loopne push pop mov out xlat arpl mov fist arpl (bad) inc xchg lds or xchg sub out push fnstenv sbb stos add mov xor add pop xor pop pop add stc mov add mov cld lea iret add mov inc xchg jb pop ja mov fwait in neg xchg push push push fwait adc lretw cmc ljmp push sbb jge daa add adc pop nop push sbb fincstp cld bound shrl adc push add dec (bad) sbb imul pop movl sbb jg ret fsubs sub xchg jge clc mov xlat add mov sub sub dec dec repnz fisttpl (bad) push pop adc je push fstpl mov mov xor lret inc les das lret ja xor or (bad) in (bad) clc fs jge or sub sbb xor jno push mov pop push sarl inc insb stos sbb xor and sarb test add int3 add mov mov adc cwtl push push sbb pop adc cmc (bad) sub fwait cli sbb adc xor sub (bad) leave jecxz leave pop mov pushf fmul dec push dec popf pand jo ds fisttp cld imul mov ror xchg xchg or cmp mov (bad) es mov ds push add and es push jns daa xor dec fnop in movzwl stc mov xchg rcll push inc sbb and lcall jae shl sbb dec jp jp lock rep push xchg bound sub mov pop mov cmp hlt femms push enter pop gs mov pop nop out std je push mov inc xchg or inc mov sub lahf push enter pusha xchg xchg cmpsl sbb push adc sub fsubrs xlat inc xor and iretw and imull lds jno (bad) jmp daa iret mov adcb ret mov cs aas popf andl pop out xchg cmovge and xor adc les dec add pop cmp imul sbb jl lds cmpsl lcall mov sar dec mov in xor jnp rolb lret cmc sub dec fcompl inc scas cwtl (bad) jno lcall sbb adc pop (bad) arpl gs movsb bndldx icebp aam push ljmp cmpsb in es xchg jge mov js pop dec stos (bad) mov leave pop pusha loop andl pop sub scas push imul scas xor (bad) je fist test mov jge sub subl cld dec jne repz adc shrl insl xchg dec inc outsb pusha stos insb pusha rorl negl mov inc nop scas xchg lret orl aaa sbb fistl bound addl mov cmovg icebp aaa adc xlat mov iret xchg dec mov add sahf mov dec daa addb fcoms cmp aad jge xor ds mov pop outsb cmp cmp lcall ret or push xchg iret push cmp shl jns arpl pop mov sbb push xor loope cmp into sbb inc outsl scas popa orl iret and sub push (bad) (bad) jmp int mov mov movsl mov pop inc mov push loop fsubs cmc bound cmc scas addl test mov aaa xchg lods movsl sub loop cmp and jge sub jmp jae mov pop imul xor pop in xchg mov dec add rcr dec sti gs lea cmp mov lods into xchg dec daa xchg (bad) gs xchg aam daa mov mov imul mov adc xlat mov (bad) scas xchg cmc pop cmp dec ja repz lods in and mov xor ss mov mov mov inc jno xchg es push xchg xlat rcrl andl pop in vpmulhuw cltd inc push push leave (bad) mov aas das lds dec cli (bad) lea sbb mov xchg adcl sub movsb icebp daa inc fisttpl pop push and pop test push inc call lods cld pushfw ss js enter inc adc ret pop adc mov in cld je mov jge int3 inc decb adc imul push das es dec xor mov cmp cmpsl ret dec mov pusha inc (bad) mov js loop cmp add pop fs jge dec jg in push jbe call or test aaa subb aam xchg mov mov cmp pop mov int les lods dec mov into sbb cmp inc lods sbb dec add fbstp int3 add mov push imul sbb dec ss fnstcw in jp call mov add jl negb cltd fucomp mov (bad) and lret outsb stos int3 push rclb mov mov xchg sti mov pop lahf outsb shr aad mov cs insl mov cmp cld aad mov inc and jbe aaa ja js push xor dec xchg push push cmpsb push repnz les mov loop push jp pop xor leave ret stos sarb aad sbb and ret push fcmovnu pop fisttp lcall movsb cmpsb xor mov or push push mov cmpsb and and push lcall mov stc into inc in cmpsb push pop cmc scas and add (bad) aad add push add leave cmpsb mov outsb mov pop repnz les incl ss xor add push push loop or fwait dec mov data16 xor fcomps fcompl pop std clc and (bad) pop jge stos xor xchg call dec (bad) std adc pop nop test std popa dec jno mov fimull mov or push mov imul outsb add fiadd xchg arpl sub pop lods sub jns mov popf dec dec jp bound cmp mov sub push cmp jle xor jbe dec cmc mov les jl (bad) ficomp stos dec dec cwtl sub outsl ret cmp pop test jl out add popf xor fdivr or mov xchg jo or seto mov push (bad) inc add xor dec sub and push xor lret sbb jge ja jg inc scas fmul cs in mulb iret mov cwtl and inc pop inc push sti (bad) popf movsl xchg mov lds ja dec adc fldl xchg cwtl pop popa fld (bad) fsubs cld lret mov mov add mov jns push pop insl out mov popa xchg inc jecxz xlat push divb shll scas dec lods or lret mov cltd pusha mov jle stos xchg push aaa dec shr icebp mov sub push add sbb cmp nop (bad) adc lods cmc adc cmp push mov lea (bad) es lds mov ret mov loop aam rcll loopne mov (bad) cmp clc daa (bad) or dec mov cs push jmp xchg mov ret sahf enter movsl mov mov stc int3 movsl arpl imul ret into add xor xchg inc dec scas mov in add mov jae vpsubw cmp mov dec insb sub movsl jle xchg add jbe mov sti inc and negl insb xchg inc jne mov jl sbb mov call push jbe jns inc sahf push in dec lea or pop addr16 and dec cmp ja pushf push or dec sbb lret pop mov pop mov push sarb (bad) call lock cmpxchg inc pop ljmp cmp jne fistl cmp xor push aaa jp dec shrb mov jbe and fidivrl fidivrl pop hlt pop mov lret xchg sbb idivb cltd fbld or jl or or loop sub inc cmp jnp sbb cmc sbb xchg shll (bad) xchg mov or ficomp push js xchg add cmc (bad) in pushf clc aaa (bad) cs cmpsl (bad) leave cwtl or (bad) xchg imul mov test fisttpll pushf xor mov (bad) sar arpl in jge adc sub mov mov (bad) cmpsb pop and inc sbb mov push or adc test mov aad cmp dec add in dec inc pop cmp call sahf ret mov imul dec mov sub jmp mov js cmp jp loop mov outsb js (bad) or mov adc adc fucomp ret mov mov adc sbb ss or add or cld jle inc pop out and and sbb inc aam mov push cs cld pop adc (bad) jecxz inc repnz lods jmp adc aad xor insb xor sub mov mov enter or cs iret out mov loopne mov idivl scas (bad) mov jle add (bad) push jbe ja jae sarl aas dec into lea adc jle cwtl test push mov shr or or arpl jle cmp test stc (bad) test (bad) jle and mov fimul sarb hlt aaa (bad) jns xchg mov adc ret test and xchg add out ljmp cs pop int3 add push lods jno dec lds movsb adc xor and in mov pop push pop or and fist push sti mov fiadd mov jb jmp xor push cmpsb dec test rcll pushl int cmp mov scas inc in insl mov repnz in hlt inc or fistl add in in imul jg xchg ret out sbb push sbb aam in or mov sbb adcl popf mov mov fisttp mov sbb ljmp mov pop incb mov repnz push cmpb adc inc popa adc xchg std les out lods test xchg in jnp insb fsts inc mov (bad) mov xchg stos adc jo or add call sbb or mov mov jns repnz loop and pop inc in mov out repnz pop push add cmp xchg sbb xlat push mov xchg daa (bad) jmp call add loop jbe ss ss xor push ret and xor jnp adc scas (bad) sbb jns ret xor mov sarb lret jmp test popl jnp mov push add jp xlat mov dec sub mov lret sti cmpsb mov imull add sub int pusha push dec lock xchg ret movsb mov pop push fistpl sbb ljmp mov xor jge lret movsb jae dec (bad) or sub int push mov jb gs mov sbb sbb stc clc jne iret aas outsl jge jno and test dec imul jle push cwtl dec add mov jmp pushf add sbb outsb and (bad) jo sti fs sub es (bad) push imull bound ss push jle jmp popa imul fucomp int3 les in movsl bound leave insb mov sbb jge or jmp mov idiv imul icebp mov pop lds loopne idiv das stos cwtl push popf inc adc cmp sbb addb or cmp push xor xlat repz dec mov lods lcall out dec fimull fsubrs push mov stos adc addr16 pop add pushf push push push cs jne push or jae mov adc pop mov cmc lcall popa lret inc sub xor push add rolb dec and repz jae lahf test mov cmp sbb push repz jecxz stc pushf cmc sub xor mull mov jne xor add push ljmp push add sub pop lret push cmp dec xor stc scas (bad) xor inc enter push (bad) jo test or pop (bad) dec add mov xchg ror clc idivb lea sbb and sub push mov jle rcrb hlt lret push lods add ljmp xor add sarb dec lock mov push arpl (bad) mov sbb daa adc lods out shrl and sti and (bad) dec sahf sbb jmp mov fcompl ret add mov (bad) arpl adc jg mov sub adc or gs loopne cmp sbb cli pop fcoms mov xor pop das cmpl push sahf jae insb xor pop daa xchg jmp mov cmp fldl mov bound aaa (bad) mov jb jae fcom (bad) sub mov xchg lods and jo jbe repnz jle clc in jp out xor mov and jl loopne ja popa fs cltd gs fsubrl inc push scas orl stos mov adc lcall lea add or adc dec adc inc add adc out je dec xchg sti push jmp lret pop fisttp pop call dec inc stos insl sub cmpsl pop std sti mov shr sub daa cmp ret addr16 sti mov (bad) idivl adc pop lock xchg outsl mov mov cmpsb inc aad adc pushf dec jb sbb aad dec dec ja cmpsb xor jae push sbb pop pop pop lret jno adc les push insb push les je cmpsl mov pusha cmp pop scas cmp addb out or test sub faddp ficompl sub out (bad) aaa je add xchg les lahf gs or cltd les shrl hlt mov mov push repz (bad) daa xchg jg test aam mov pop mov (bad) mov inc pop sbb and mov pop sti cwtl stos adc mov or cwtl sub xlat rcr push cmp in sub cld cmp push insb lcall popa int3 jg mov cmp fcomi and push aaa adcl and mov cmpb pushf (bad) (bad) fldcw fwait ret pop jmp jge aad push bound (bad) or pop aaa inc cmp vpsubsb in (bad) int pop test jl,pn cmp dec push pop xchg arpl cmp inc xchg xorl xchg mov (bad) icebp mov sub ret fstpl xor inc sbb (bad) movsl orl rcrb sbb dec and les sub sbb in jb jae addr16 lods sub dec xchg push ss push or cwtl fcomp xchg dec enter add push jne sbb dec negb (bad) jg xor lds call mov fwait pop add mov inc (bad) mov outsl sbb sbb push mov or jnp sbb daa mov rolb sub clc and int jb aad ret mov jne xchg adc cld test fiaddl xchg xchg pusha into xchg sbb stc daa xor dec into dec hlt dec sub push sbb out mov mov js ja mov mov xchg jg add jmp fcoml cwtl pop lret pop call push rclb jge imul cmp add push xchg aad outsb add dec or sbb fistl jl pop test lods scas adc or addb pop jo sub fidiv repz pop (bad) je and mov (bad) iret shrb ja insb xchg mov xor mull pop xor ret sub pusha loope dec jle adc push mov mov inc (bad) ss mov js ja adc mov lret or bound imul sbb mov pop in dec (bad) repnz mov idiv in repnz mov xor pop test cli in inc and fcmovnu mov cmc sub add cld cmpl fisubr or sbb test or xor mov inc xchg dec lcall mov xchg idiv test jmp pusha adc rol into push nop jmp xchg out test cmpsb mov cmp sub mov rorb pop jns mov in jno sbb stc pop int3 (bad) mov jne,pn outsb scas mov (bad) fnop sub xor sbb outsl and arpl dec jno stc inc pop adc ss cs (bad) xor mov addl ret mov outsb sbb fs jle jg roll xor fiadd movsl movsl out pop (bad) push and sar das jnp in aam or push outsl sub into test (bad) movsb stos xchg cmp cltd (bad) cli push test pop or sub push cli pop fadds scas out mov call (bad) shl fadds add in sub lods out xor mov dec das cli dec inc cmp into or cmpsw inc into scas fs andl dec mov mov jg lock adc inc das lahf (bad) cmc (bad) test push xchg and lret cmp dec push mov mov sahf ret mov sub test pop loop xchg sub lret iret rclb cmc adc pop sti or cli aam mov mov mov orb xor lods test push sbb std das inc or out jb and sbb ficomp or xchg dec sahf sbb push sti xchg inc mov mov cs arpl mov pop popf insb out push mov mov cmpsl es dec pop popa cld pop fnop mov mov loop test xchg inc fcmovbe jp pusha arpl xchg sub les je mov mov push mov dec jl push pop (bad) cmpsl ds into ja pop mov push rorl adc push inc or std sbb fistpl add outsl and (bad) push mov pushl jl sub dec (bad) dec or repnz lret push and jb (bad) outsb insl daa loopne sbb mov mov out cmp adc rolb jecxz add lock xor pop pop jg mov push outsb mov xchg mov sbb (bad) jmp jbe pop dec xor add mov cmpl loope rorb cmp data16 call fcomps outsl mov repz fildl mov add jg dec mov mov push or fs add dec adc cmp aas lret lods inc int sahf pop push das sbb dec sub add sub xor ljmp (bad) sbb push mov sub xor lret cld dec out sub stos pop jbe dec stos inc and pop (bad) jbe idivl pop push mov add test mov inc mov cmp (bad) cmc mov nop pop scas dec push cmp or repz mov push insl cld (bad) out call and lcall sbb test dec ja scas jl or xlat xlat fstpl push mov xorl sub mov mov mov mov jno out xchg sub adc aas inc fstps xor int cli cwtl cmp mov aas hlt mov sub loope mov xor outsb jbe scas xchg insl mov jnp jge jle sarl dec push or fstpl cmp test jo stos std rcr shlb fmul and mov jb addl pop jbe mov std mov mov sub xor jnp insb fcoml scas ret gs push and popf xchg in shll and xchg inc in or fidivl mov mov push adc (bad) mov lcall in jecxz jle sbb ret (bad) popf in pop iret mov out cmp and xor mov pushf (bad) call inc cmpsl aam or ss decl das mov mov mov loope fstps push xor mov into subl adc sahf dec xchg je push imul call adc int sbb xor mov popf movsl push lahf lahf sbb dec push pusha mov xor loope xor in cli or mov int mov jbe push enter mov jbe out dec inc notl mov fisubrl mov or cld ja sbb jl mov (bad) push aam sbb push popa inc push mov push bound jns push cmp aad movsl mov movsl aad inc cmp xchg lea fisttpll jo faddl mov cwtl adc add ret jbe cltd pop and jmp jne mov xchg or jge pusha or mov mov pop mov mov je lock jno ret sbb incb je cmpsb aad jecxz loopne xor aad cmpsl jb outsl dec insb (bad) out daa stos sub push and or push ja (bad) fld cmpsl inc sub int scas sub xchg xorl fisttp loop hlt popf lahf sub in jo mov or sub fisttp pop mov das add add xor insl dec cs jl test out insb jge pop dec mov cmp out inc xchg aam cmp cmp cmp xchg jecxz xlat push loopne cmp insb inc test mov xchg js xor in adc jne push cmp mov cwtl addr16 dec repz cmp push fbstp jns mov inc and cmp scas mov addr16 lods cli int3 inc in push clc movsl sbb push sub mov xor cmc cld dec lock inc xchg xchg andb dec je scas and mov arpl icebp mov data16 fisub mov mov bound out cld dec mov mov ficom (bad) push mov cli sbb adc and fucom jae (bad) insl loope xor xlat and mov scas imul xor push insl shlb mov mov dec xor out addl xchg or std cwtl sub gs call dec adc cs mov aaa dec cmpsb aas ds dec push cwtl xor sbb lea sahf sub movsb push repnz mov dec push jbe sahf jg stos mov pop jne jo int3 ret fdivrs mov pop fwait mov fwait pushf sbb sbb cmpl test xlat (bad) lret inc and add jae jmp jmp fisubr sahf test aas cmp cmp adc jp ljmp fcoms jb pop fisttpll mov mov iret rcrl lock int3 jns fbld leave and xchg jge lret jno fmull daa scas (bad) frstor xor push jl cmp or jl pop leave push mov stos movsl xor inc sub mov mov cmp sub or out xchg pop mov push push mov jbe inc and inc mov push mov cmp pop adc fimull mov inc or scas jo inc cld ficompl and pop cmpsl aas adc mov mov mov mov fcoml cltd addr16 stos std xchg adc xchg sub outsl (bad) cmp pop push mov js and cs xchg flds fwait inc lcall pop lret out fsub xor sub and cmp leave and or pusha mov nop (bad) mov mov jmp daa cli xor mov inc addr16 mov daa ljmp cs popf jnp loope adc mov pusha mov pop scas inc mov (bad) loop aam xchg mov mov mov in leave push jl mov pop test ss pop mov lea add lea push fstps idivl dec jbe mov sub mov sbb push fucom js mov out seta adc cmp icebp jne cmc (bad) or mov shrb aaa push jle xchg addl sub dec stc sbb mov test mov dec int3 es inc cli loopne xchg std addl in pop lret cmp scas pop mov into mov mov xchg lahf push pop mov dec xchg je jno sbb and add jmp xchg (bad) daa pop mov fisub jns (bad) mov fcoml xchg xor shrb loop pop pop out fucomi clc icebp movsb aaa das jmp (bad) cmpsl inc into xor in mov outsl mov push cmpsl cmp push dec jno orb mov test stos iret jle add sbb fdivr sbb stc addr16 push mov pop pop ljmp into pop adc mov ret and push push push daa sub sbb push pop sub xor push test std in cmp fisubr xorb lea sbb xor cmpsl adc int mov push xor or call fs xchg ja mov insb movsl repz in jp popa out inc sbb lds lods pop ret adc (bad) cmp mov and xchg cmpsl push fs jae dec push lds std test lret mov push or push xchg jns fbstp sub jl outsl and ds test fstpl push mov and iret insl cmp (bad) pop xchg push inc sbb in or sti cwtl jmp push outsl je mov nop sbb xchg dec jp scas xchg subb cmc sub cmp or mov repnz cmp inc sub jmp mov je repnz scas (bad) dec insb mov pop rorl pop ror rclb xchg xchg cmpsl push test jbe or andl xchg fmulp (bad) pop repz jb mov into lea inc or jbe lea cmp xchg or sbb arpl pop (bad) xchg aas fxch daa iret adc mov sbb js das xor adc icebp pushf (bad) jle call cmp xchg lahf icebp sbb push notb repnz mov push fwait mov adc lds aam sub xlat sub cmp sub xchg ret lds sahf mov mov sbb sahf mov sbb and jns fwait insl xchg fsubrl push fsts inc out roll in xor in insl leave (bad) arpl loope mov add into lods sub xor push xchg or xchg dec in push test addb (bad) fucomi out or add std into test insl xchg xchg pop push mov (bad) (bad) into imull mov loope mov mov and cs and xchg mov xchg push xor jne loop xlat dec mov jge shrl jg add fsubl push ljmp cmp ret gs fidivr repnz popa xchg push jge fbld ljmp mov xor add push jmp sbb mov mov sti (bad) jo or sub mov xchg test nop jne sub sbb inc mov add jae xorl out or cmpsb fs repnz scas jmp mov lcall fstl adc cmc in push rcl (bad) ja (bad) icebp sahf lods repz insb jae mov push inc cld ja push jecxz pop incl imul push call imul out pop dec dec in pop call fwait rorb xor incl cwtl stos xor mov lods stos leave xchg les icebp push jb mov int test fdivl jg sub aam (bad) data16 push sahf and xorl rclb imulb pop xchg pop xor ficom out jmp andl sbb aam sbb sub mov inc imul rol xchg push imul adc fistl sub inc shl adc movb sahf xchg xor pop xchg sbbl and (bad) loopne ss mov out jmp dec mov mov cli cmc js pop inc jg aad adc hlt cmp or fbld lret lock sti mov push mov jecxz inc cmp mov scas xor push jae and ffreep (bad) (bad) jno out dec and test push pop lods (bad) push bound cli push lock mov cld aaa mov std inc push add test pop push rolb dec notb orl notl ljmp inc push xor lret in mov jmp cli (bad) xor add pop (bad) and ficom pop dec jbe inc loopne fsubp sbb test inc ds fldenv jo cltd rcrl ret and sbb sbb data16 xlat leave push repz out xor fimull es jge lock adc fbstp pop test push and scas push pop outsl mov in jns add insb dec leave add and push mov push pop insb and inc pop sbb lods loope in mov ds (bad) stos scas sbb test scas scas cmp jae mov bound add push lret hlt ja cmp mov push ss lea call dec inc pop sub (bad) mov gs pop loop mov pop fs ror cmp lods icebp add push xchg push addb sub push call call lds (bad) sub dec jmp insl push xchg imul adc pop mov cmp mov test add mov push out into mov call push dec inc push cli fimull pop jg add stos cmp imull add lret xor imul rorl push cmpsl aas aas jae xchg add mov jo adc sti dec je movsb ret cmpsl mov cmp push mov inc mov loopne rclb test sub in mov mov stc idivl iret and pop out and push pop xor (bad) pop in sarl adc aad inc ljmp lahf cwtl xorl sbb pop pop jl clc jne ret add mov mov push sbb testb cmpsl pop pushf and inc testb pop outsb popa add shrb push and dec sub add in lcall call jbe jns and call dec or cltd (bad) jnp jo mov insb cmpsb fwait xor xor inc inc or int sbb aam cmp out xchg sbb inc fimul lds mov cli fiaddl adc fisubr mov fmulp rorb mov addl or mov stc add sbb je add jl pop fcompl add xchg (bad) repz xor adc mov dec lahf jae aas inc inc push push and call or cmpsb icebp inc xchg or sbb pop mov out in fidivl xchg sbb mov add out dec jl inc repz aad ja mov cmp push fldcw jmp mov push dec or push (bad) jnp add or dec jb orl adc push arpl std pop mov mov mov cmp push int3 xchg push adc scas jbe mov out adc jl mov adc sahf ror xchg js cltd push xchg adc inc into jae adc mov aad xor inc cli jae mov mov mov sub fisttpll ret or sbb ret enter jle das xchg addl hlt cmc xchg ret mov xor loope outsl imul xlat sbbl mov mov inc int3 mov xchg (bad) mov test cwtl xchg mov jne cmpsb mov cli rcr out sub fwait mov pop aas iret jbe aaa mov xchg jmp mov addr16 sbb mov and fs jns sbb add cs lahf and mov (bad) push jmp or iret jl in adc data16 scas and repnz (bad) jg cwtl in adc xchg loop xchg pushf sub daa dec xchg sti xor cmp sub loope repnz cmp cmp bound addb or and sub scas mov sub cmp jmp aam xchg mov sti pop clc aaa and lcall dec sbb outsb in fbstp and test mov imulb ret leave inc xchg or sub and and lds or sub jl lock jecxz pop mov sub daa inc sbb mov inc mov imul test cwtl inc popa mov xor stos mov adc outsl jge aam dec xchg fistl fstps mov cs loop and out xor aas insl jmp shrl lret stos repz ss push in mov mov xor mov in jge mov adc jne out (bad) int3 idivb sbb push in mov cmp pusha insb dec inc pop dec jnp lret popa mov jo sbb sbb in imul scas decb ljmp loopne cld mov dec mov xchg add push fsubr xor push push in cmp jae mov insl and xor adc movsb es jae inc or stos adc add push lea femms mov outsl fwait sub jecxz mov lock and imul xchg dec adcl and add cmp jp ds popa arpl jnp push in mov mov out add mov push sarl rcr dec out jbe int push mov and mov das mov mov dec movsb popf loope imul pop add mov jae divw mov and cmpsb sbb movsb or xor push push cwtl pop or aas push push aaa mov andl int3 mov dec test pop lret xchg mov ja ror cmpsb lret nop adc xor int3 dec outsl pop fdivs push mov inc xor (bad) mov jp xchg xchg cmp push dec jp or movsl add push jecxz fs mov lret lock fcomi or xchg lods push cltd jmp (bad) adc aas sub (bad) iret sub cwtl ficom cmpsb mov js xchg jp mov cmpsb and jp bound push xor stos sub mov pop test mov sbb int cmc mov (bad) jle cld cmc dec aaa push fs leave cmp inc mov mov mov push sahf mov lahf outsb lcall xor cmpsl dec sub xchg jno push (bad) jns jo xchg icebp jmp push xchg daa stos jo das jbe lock adc insb stos test jb push jne add cmp sub stc xor (bad) loop mov sahf push mov (bad) popa cli mov fstps mov xor mov mov jno mov jbe push push xor mov dec adc daa nop and jmp std pop jl stos jecxz fsubl negl mov arpl fidivl sbb out shrl lret sbb nop lcall out inc aaa jge mov ficompl (bad) mov pop test push les push jle lahf stc sub sbb mov je jmp pop les fistpll jnp insl addr16 cli mov jmp inc (bad) scas popf push daa js insl movb js test add xchg jge adc (bad) sbb lods (bad) roll cld dec push sbb xor mov arpl jnp (bad) mov pop mov ljmp pop lcall (bad) scas mov enter mov into fwait pop lcall jno jbe xchg gs mov adc shrb push in dec push cli adc ss shr or jno jns,pt inc sbb ret pop dec mov xchg mov sbb mov je rcrb fimul cltd data16 xorl xor scas sub shll dec ficompl xchg mov mov pop inc xor pop insl fimull test enter inc push ds addr16 stos hlt (bad) lock imul pop or (bad) add test sub nop push inc push push xor outsb push push mov sbb pop push push (bad) sahf mov add aad ficomp xchg ja mov leave jg fdivl sub pop cmp cmpsb fs push clc push adc push clc pop mov rcr mov xchg rcrb out push xor movsb iret adc xor pop sbb fbld xchg fidivr (bad) into jmp push movsl rorl repnz and test test int es pop fnstsw mov movsl repz loop dec sbb (bad) push adc lods inc dec and mov jb loopne dec sub mov daa and sbb jno dec movsl jl xchg aad movsb scas cmp sbb gs jge pop add or jle adc mov div xchg xchg in cmp arpl xchg or stos in or fsubs mov (bad) pop xlat jle inc pusha sbb cmp loop sti dec jns and jb aad mov arpl in fisttp xor outsl lods mov sbb mov mov jle xor fmulp xchg xor loopne leave xor data16 mov xor mov stc pusha cmpsb fucomi sub inc mov inc cs rcrb scas or lahf mov mov xlat cltd push bound and add mov popf xchg inc fsubrs jnp mov aad pop outsl xor sbb and loopne mov movsl inc shrb aad outsb scas out repnz sahf push cmp fadds clc dec mov shll pop push or sahf (bad) daa in imul mov mov fcoml pop into push jnp sub xchg pop mov mov sub negb jmp or mov mov stc (bad) dec inc jo mov (bad) js,pt pop lea cmp xor mov loopne lods mov es test scas cmp adc repz int3 mov push out in adc fiadd sub ss hlt sub push in ret pop shl adc into lds jo pop roll cmp repnz outsb mov inc pop lcall sbb (bad) cmp mov hlt popa jmp or bound fnsave mov jb cmp mov ds addr16 xchg sub add xchg push mov jb sbb lahf and and test js xchg xchg push mov iret xor dec sbb cmp icebp lea das data16 push lcall cmpl cmp pushf icebp scas inc jnp jne stos dec mov out sti pop gs aad inc inc and pop mov pushf lret dec out ret (bad) xor xchg pop push pop sbb sbb mov push mov idivb jecxz in sbb repnz repz push dec push xor xchg imulb pop pusha adc mov xchg push cwtl lret rorb popf dec (bad) nop (bad) mov stos les jbe sbb js imul and sbb cmp mov mov loope mov icebp js dec imul call negb xor xchg in lods movsb cmp test loope push ficompl popf sbb mov dec cmp inc sbb dec in mov or mov lods mov dec or sbb push outsb mov push shr push pop add push int3 pop xor ja stc lcall or mov js aam fild fdiv lock aad cmpsl jecxz mov loope ljmp xchg pushf and test scas pop push fisubr jle add (bad) jno enter cmp jmp sbb dec mov xorl xlat cmp into ret loop push sbb (bad) mov adc in mov mov repnz mov clc lret scas rcr ja loope aad cltd lcall sbb pushf js cli cmp mov xlat cs shrl mov sbb jge (bad) ss fsubl out sbbl push lret jae and and sub fisub dec pop ja adc xchg cmp xor aam xchg mov sbb dec push out dec push mov ja mov add gs fildll lock scas or ret push cmpsb out roll adc fmuls cwtl call daa jne jno test rcll xchg sahf cmp dec jae int3 adc cmp push and hlt xchg push and in pop push mov or in rol mov mov cwtl insl xchg repz adc pop and test ljmp xchg xchg aam jno lret js sbb add xlat mov bound les inc hlt int3 shll movsb cmp (bad) pop mov lret mov scas mov pop and xor lcall cmp in or pop adc add rcrb into ja fstp mov orl push jge ja test inc mov lock ss loop lock push iret bound in scas int3 (bad) fs mov sbb push jl sub out call sub lcall push xchg pop int and jae jb mov imul stos and jns movsb xchg movsb data16 ret fldcw jp push mov xor xor cmp xchg not fildll out or leave aad loope mov ficoml xor bound mov gs (bad) iret lea jp or dec xchg and (bad) or xchg insl mov adc movsl je test ret cmpsb imul sbb les dec xchg mov and icebp test jne mov and dec push lock in aaa add pushf or jl scas push adc push daa xchg mov fs adc dec dec mov cmc and and sub lock add adc hlt push cmp fidivr cmp jo out jle (bad) and out mov lds dec cmp inc vmovmskpd mov mov loope jns add imul test jle sarb add push out into movb daa pusha outsb out mov push mov inc mov push mov xor int3 adc sti int mov pop lock cld mov in fdivrl push sbb inc leave pop adc add outsl push outsl xchg dec lock neg ljmp push cmp jge jbe aaa ja rcr sbb sub fistpl xchg push sbb xor lds or popa jbe fwait push repz mov jo cmp jmp jbe push call inc int xchg das stos clc cmp cmc pop cli dec iret jb ss push sub jmp mov pushf push xor xchg cld call pop pop ds sub or (bad) cmpsb aad add ret xor mov xchg aaa scas mov fsin lods hlt jo mov push (bad) dec stos sti sub jmp imul cmc nop out push push inc mov xchg adc sub push test jae xchg fs or or xchg fldcw mov xlat daa add jb out mov out sub cli push hlt int3 sub sbb cmovno push pop sbb xchg cmp sbb sbb and test mov pop mov or mov and call cmp test dec add bswap jl jo orl push outsl xchg lret pushf cmc mov sar sbb aam insb pop sahf jo sub jmp lea aaa inc bswap lods add addl les cmp lahf std dec fs arpl aaa data16 movsb pop mov sbbb mov push fistp add jl imul fstpl (bad) jo jl inc xlat pop xor aas nop sbbl jmp out or pop or cmp in add sub dec add xchg stos mov out mov lods movsb aam ja inc xchg push add sub jns fisub jmp cli rcr aas and pushf bnd ss and fistpl stos ds push in imul add hlt sub jle xchg jb inc dec ret xor cmp pop dec jo sub dec push jne adcl lahf aas push xchg fabs test (bad) icebp inc (bad) fwait test and ja movsb mov xlat (bad) push movsl inc adc enter shr (bad) xchg sub and js aas out add push push pusha xchg xor aad push lock subl xchg jp sub fwait jno push insb mov push push pusha jl sarl aas push les mov xchg xor pop in mov repnz fist push and mov and pcmpgtd mov cmp mov testl cli mov std ud2 jge jae jge pop inc add std jno std push in adc add sbb test xchg popa or aaa mov mov (bad) nop (bad) int3 add dec sbb mov jle xchg jp and cmp lods jnp pop fsts in inc sti push mov sub fcoml (bad) sub mov or sbb push sbbl and dec jne icebp jle fs mov or enter cmp je fst pop jl inc pop loop dec mov out ds jg sbb (bad) lods ds sub jge rolb fs addr16 sub or ret das stc sarl ja xor ds sub outsl xchg into cld pop lcall mov adc adc aaa and ss mov dec jbe pop dec imul pushf inc psubq ljmp mov outsl test pop sub xchg cmpsl xchg jecxz cld sub sub test jno es fs xor and pop adc add xchg (bad) ficom dec outsl (bad) inc xor iret jl dec push mov xor fisub out (bad) aas imul pop stc stos and pop xor (bad) inc xor sub ds or jbe pop movsl repz sbb popf and call mov outsl hlt adc lock shl xchg xchg push std mov dec ss pusha mov push rorb in lea add xchg mov pop cli popa xabort push xor or out scas bound ficom adc shrb adc mov enter sbb adc sbbl jmp xchg cmpsl push sub mov leave jmp jl mov insl sbbl pop sbb xchg incl add js jle mov dec sahf mov (bad) fcoml leave and mov push lods repnz adc push inc subl mov mov (bad) shrb inc outsl ret mov cwtl inc inc mov movsb lcall sbb pop pusha out jne aas addr16 sbb lods jnp pop adc mov daa imul mov dec pop (bad) arpl fisubl adc bound add jg fldl add fstpl loopne mov sub adc inc and sub cmpsl pop std xchg sub repnz ss out and sbb lods jmp cmc pop add inc push hlt dec jecxz stc cmp cmp xchg sbb xor dec mov mov cwtl icebp push cmp jg lods daa xor out icebp add fcmovbe mov adc mov xorl loop (bad) nop rol int3 fcmovnu mov xor insb add jmp clc and mov xchg fisubr (bad) add xchg subl jmp sub inc jb dec in dec xchg inc cmc (bad) lahf out dec add lods cmp push negb sbb mov imul (bad) cmp aaa jle pop out mov push dec or jnp (bad) pop mov and jns mov enter cwtl out movsb and xchg cli cmp mov jle mov pop lahf arpl jb scas clc dec pushf fs jno adcl xchg (bad) stc lret fs fisubr mov nop (bad) push adc seta mov push idivl and je imul push rclb loopne xchg (bad) mov lahf lods icebp mov push xchg loope xor cmp jne pop mov scas push pop xchg push enter xchg sub (bad) test adc addl cmp jno mov mov add stos imul ja lock lock lahf sbb or in or push mov addl jne iret jl jl pop jns inc or jmp hlt clc sahf stos fcoml lods je mov aaa mov jnp push add ret mov clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz decl sar movsl pushf fstl (bad) add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ss add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec lret dec inc inc push js in fadd bound or and aaa mov fucomi fdivs mov (bad) je int3 aas jae mov jae mov push mov add add data16 outsl clc ret ret roll mov pushf push mulb adc arpl dec mov ds faddl mov in out arpl push adc push sbb cmp push xor stc mov dec cltd xchg jo jmp daa (bad) aad mov cli sbb iret mov sbb vprotb and pop jae popf addl xchg mov jle sub call shrb call pop xchg ss xor push adc sub stos add into cmp sbb mov inc or cmp loop pop adc movb bound mov int3 mov test sahf inc cmp inc sti inc and loopne insl movsb addr16 sahf jo mov cmp xor xchg cmp sbb int sub pop arpl repnz mov xor aad fnsave xchg addr16 pop push push loop dec clc fwait mov sbb imul enter pop push xchg mov (bad) jl push jae xchg lods jg lods or adc test mov arpl icebp adc pop fisubr lock add data16 loopne and xor add adc or pop cmc (bad) inc out xor iret mov jmp outsl data16 mov sbb lret mov movsl arpl (bad) push mov and mov jne cwtl mov inc mov addr16 xchg inc jnp adc rcrl inc cmc pop xor fdivs test sub std jns out jl push imul push adc mov stc das es (bad) fcmove jbe xor mov sbb scas mov mov mov jecxz sbb call in xchg hlt test repz lock popf mov add mov and bound lds ds cmp subl in inc inc inc aam dec lods mov adcl jne xchg or sbb or inc and dec ret sub (bad) xor cmp pop jle pop xor shll scas or les outsl and jb xchg jge std lret jnp jo pop stos mov jb mov mov jo fwait pusha push add sbb cmp add push adc in cwtl loopne rcll test jnp and imul stc int cmpsl ja pop imul fistpll push push adc fs fsubrs call pop repz pop add adc sbb test mov sub mov fdivl ss jne lea sbb inc fnclex test mov jnp dec add or gs ja cltd adc (bad) cmp mov jmp mov (bad) loopne push and ja lods mov or mov pop jge lret sbb add (bad) daa and test cmpl pop sub mov mov or roll mov cltd ja mov (bad) sub inc mov push jle mov out mov dec std mov lods lds cli xor (bad) out or fwait outsl jmp push ja jge cs dec cmc and adc and dec cmc mov adc in inc ds cmp in movsb sti fcomp popf es mov mov out dec lods mov es les pop fdivs push cmp inc fadd jle mov inc pop imul decl xchg pop in test shll sub jns and testb scas or jl dec cmovp or icebp pop shlb cwtl cmp cwtl dec pop scas aad dec sbb bound mov add pop add cmp fwait int fidivrl jns sub rcll cltd lret les mov js mov xchg out pop mov sub (bad) mov jge addr16 aaa (bad) pop (bad) mov rcrl scas push and cs mulb arpl ret mov fsub dec dec add lcall imul lds ljmp mov xchg fwait jns push push push sbb or dec add shrb and repz cmpsb int (bad) dec push cli xchg jmp pop ja sub aam push lahf loope mov out and xchg icebp push test (bad) test cmp leave in jmp sub inc aaa xor in and test or movsb dec (bad) xchg mov dec stc mov bound push lret fbld cwtl nop cmp mov cmp js pop mov cmp xchg test rep push idiv xor pop sarl jge xor xor hlt xor or lret mov pop les (bad) and mov dec lock call mov adc sbb cs into jmp cs test mov adc in ja sti inc mov cmpsb xchg jae inc push (bad) (bad) out gs fwait into xor mov inc mov dec stc enter push les fidiv pop pop and lea cmc je pop test inc mov push shl push sti aas and mov xor pop fsubl add cmp idivb sub and inc and mov pop jae sahf add popa (bad) repnz push dec (bad) nop sub inc (bad) mov addr16 js (bad) cmp insb aas incb in push (bad) (bad) sbb sbb ror push std push inc andl cmpsb jb sub pop inc xor xchg cmp mov adc (bad) mov and ds inc repnz mov fdivrs jge cmp dec mov pop cmp mov push push outsl movsl mov and xchg pop imul js cltd insl pop popf cltd mov loop test rclb pop rcl shrb std fildll das and or push xchg add jle (bad) xlat xchg andl cwtl jp bound jl sbb pop adc jecxz mov lret push sbb cmp pminub lret lods ds scas lds jge ds lcall cmp in cmp insl pop adcl dec cmp fs sbb adc dec lret lcall movsl insb add test gs out mov push and aam sub in mov test sub lock popa cmp pop xchg mov in xchg cmp lock pop sbb mov or cld or mov (bad) inc leave (bad) cmp lods out add jl adc iret push mov test add push mov dec inc adc cmpsb mov xor sbb mov mov hlt jmp pop xor out leave scas bound (bad) lahf js sahf sub fisubl js (bad) lods push fnop test subl sbb imul xor adc sub xlat and iret dec jge mov es xchg imul dec out sub xor dec push adc push les ss out jnp arpl icebp sti mov repnz jle jecxz jo ret pop gs sbb (bad) push cmp out jae mov mov lods or cltd cmp sbb inc push mov xchg int3 jl adc (bad) repz sub pop lock xor leave (bad) mov rclb cmp push sbb lock dec push fdivl xchg and repz inc or shr push push mov dec clc xchg test jo cmp iret in outsb sbb dec sub out push hlt lods and cltd les cli test rol bound loop cmc loop xor mov das mov leave shrl xchg lahf add mov xchg fstpl fldl inc inc call mov pop gs add push mov mov or pusha test leave mov mov (bad) cmp pop popf push je mov mov sub (bad) iret (bad) pop iret push shll adcl scas (bad) mov dec ja orb xchg mov mov sbb test sbb lcall test loope xor and call popa test cli pushf loop insl add xchg fistp popf decl cmp pusha push mov adc mov xchg data16 fistpl lret (bad) insl std push lret inc lret test lea dec mov fmul test enter lcall jno fwait test je imul mov lret push insb mov add inc mov pusha jecxz movsl gs hlt das ljmp insl pushf sub jle rcll scas sar sarb test add iret mov scas mov pushf mov add fisttpl adc rcrb or jge (bad) (bad) mov cltd push push mov pop xchg fcmovb sub mov popa ss lock idivl pop adc xor add sub mov fist lds movsl pop push insl (bad) (bad) xchg add jecxz sub dec sbb cmp lods pop push inc mov add imul inc pop add stos scas in xor mov fcoms jnp push dec scas pushf je xchg movsb push xor cmp xor mov xchg sub xor mov repnz daa lret lds mov movsb inc and rorl dec or ja ds in pop scas or xchg push scas ja inc cmpsb je xor adc pop xchg mov pusha xchg or pushf call dec add and mov aaa (bad) mov inc fwait inc pop pop add iretw dec dec (bad) mov mov rcrl addb arpl push rorb in loop jo or inc cmc cmp push nop lahf sub loope lcall movsb pop sti mov clc (bad) mov or add bound fidivr jns leave cli (bad) or add dec mov movsl iret cmp sub cli stos popa pop jb incl push add push dec lret dec test xor leave outsl xor or popa sub shlb vmovupd jno gs jne sub rol lret lret sub sahf in xchg jbe adc jnp inc (bad) in int3 adc sub push adc and pop ja stos sub mov fildll xchg into mov and fcomi in or xlat push test xchg (bad) stos fcomi cwtl adc xchg mov ja test and mov mov ja jae scas xchg push test test test rcr ljmp jge test lock imul xlat stos sbb dec mov in daa inc aad xchg sahf das test cmp mov and dec lret jne pop jg outsl scas je inc sub jnp ja xor sbb inc or xor or jmp sahf shr add mov insl sub js sahf lods lahf rcrl movsb fadd and mov xor (bad) push xchg xor mov fistl mov xchg fs or fsubrs test pop dec mov fwait repnz or cmp movsl cs sbb inc push roll jno aas (bad) push and mov repnz imul out pop loope fs test mov addb push loop mov iret and arpl iret pop sbb adc loope push (bad) (bad) and and fsubl out fisttp mov ljmp xor movsl in inc or idivb mov rclb jb pop jbe adc movsl fwait and aas fwait xor sub flds cmpsl (bad) ljmp inc in sbb jle xlat cmp cmp push rcrb loopne out iret or adc cmp loop divb test jno stc (bad) int (bad) (bad) xchg insb sahf movsl and pusha mov sbb xchg cs fsubrl xor sub dec or pop xchg cmp das and or xchg repnz cmpsl or cltd hlt test fnsave (bad) and or jl ret jl mov mov orb into mov loop out (bad) loop int dec and push repnz jle test xchg (bad) sub dec stc mov in les (bad) ret (bad) mov mov jnp cld call sub jmp push popf dec cli jne push xchg pop cld fsubrs cmp adc sbbl andl icebp rolb push in dec popa and pop (bad) jmp sahf lods fldenv js cmpb mov jl int3 psubusb mov pop xchg sub or lods mov sub jge (bad) mov xchg lods mov repz into or cs ljmp in mov or adc pop jnp push inc (bad) mov fstps cmp in sbb xchg add stos jo xchg mov mov mov ret push cli rclb xchg movsl xor mov xor ret outsb rcrl (bad) aam cltd mov cli repnz cltd hlt pop jmp adc and push cmp and mov ret loope xchg push sub das inc dec call mov inc cld adc popf mov sub lods sub lds sbb (bad) adc fstl loopne adc xor inc inc fwait dec xor xchg movsb dec jo andb insb sub mov pop cs lret mov push ja push mov dec fisttpl ficompl sahf bound dec in inc mov mov js jmp inc ljmp stos mov push rcrl dec leave push pop pop stc shl sub adc xchg lods insl call fiadd sti pop push or cmp out mov xchg or fidivr jp in sbb out mov arpl sub cmp in sub popa mov mov pop mov lods and pushf movsl inc push fiadd xchg cmp ret leave add cbtw push (bad) (bad) movsb mov jp inc lods xchg mov xchg adc mov dec cmc mov gs gs add rcrb mov inc jnp push push xchg sub adc subb sbb rorl and lret mov or pop cld (bad) jae add jp rclb stc out lea sub outsl dec idivl iret out add jmp dec sub pop sub ret mov jno repnz stos fisttpll cmp imul in scas mov jg (bad) jb adc mov mov test push imul movsl add fs fiadd cmp rcrb aam pop inc sbb sahf sub stos pop (bad) or jp cwtl iret je mov scas test cmpsl mov mov in pop mov push xchg lock push cltd mov insl mov (bad) lods pop xor pusha sahf stos ret push in lahf (bad) dec scas inc lock mov sub (bad) out shlb cmp sahf jmp cmp adc xchg notl mov jge mov out inc xlat xchg outsb dec ret sti popf add movsb cmp adc pop nop loop lea daa mov negb inc or sti repnz mov pop and push pop bound inc rcrb pop idivb sbb xchg jno ds adcb aad das cs in add cmovo mov jle jp lret outsl and xor pop addr16 insb (bad) xlat xchg (bad) xor dec dec jecxz push out mov mov jmp mov mov add mov mov dec sub fisttpll test mov or add movsb stos pop (bad) lea adc (bad) call fcmove lahf mov (bad) mov xor and scas xchg xor (bad) imull nop mov add insl or outsb adc in insb (bad) das cmp jnp addr16 mov cltd xlat es imul and add and lock in hlt loopne icebp loop ficom fs dec xchg jge cmpsl jle pop pop lock pusha add cmp sub add jbe mov aas je jmp xchg (bad) je arpl and inc xor das mov fstl loope cs dec pop sub movsb mov (bad) test enter mov or lea pop and repz lock clc (bad) mov ss xchg flds rolb enter mov into inc flds cltd leave rorb and das dec stos cs faddl add aas mov aad pop popa adc lret jne jg roll adc fnstsw pop scas mov mov inc ret (bad) cmpsl inc movsb cmc movb cs ss imul int3 movsb and adc push mov out cmp mov stos popa scas lods xchg add mov xor cmpsl add jecxz adc cmp cmpsl sbb outsb and or and adc pop fwait ds push popa call bswap push xor divb pusha (bad) dec mov mov xchg mov icebp lret iret loope pop push pushf insb xor xlat adc fsubs es push ljmp jae push out shrb xchg pop cmpsb mov or lds mov mov leave imul push sbb inc cmc mulb inc pop and push pop adc shrb mov sub cltd fadd test iret popa cmp xchg in sbb cmc mov and xchg jne lea loope lcall lock cmpsb aad cwtl jle into rcr or (bad) cs cmp leave in push cmc mov cwtl inc push repz cmp mov sbb xchg xchg pop pop (bad) push test pop inc push dec leave push adc (bad) push mov dec pop imul jmp (bad) adc fwait push scas jno jno shld bound mov adc mov sub stc add lods push cmpsb cld pusha xor cltd pop push xor aad mov sbb mov clc clc push push icebp (bad) or push adc xor pop pop sub ja dec cwtl mov pop fadds jecxz out js pusha adc and pop jl mov orl movsl or xor loop add mov fdivrs cmp pop inc outsl sbb stos mov xor sub stos jnp sbb cli jnp xor shrl gs sbb clc mov cmp bound cmpsb fbld bound inc mov sub adc (bad) sub subl pop arpl sub jne pop push sti sub sbb out cmp pushf pop movd stos inc mov inc jg mov xchg nop dec mov and push cltd pusha dec in arpl mov in xchg jmp inc push jnp daa pop push push jp adc mov and repz sbb lret cmp hlt and sbb add xlat (bad) mov cmp push movsl adc push adc stos ljmp rclb in ljmp das and test cmpsb pop mov xlat mov add and jae xor jl mov (bad) test mov or repz mov aas cmp maxps andl icebp jns and fsub mov aaa inc fstpt jne loop stos scas mov ret (bad) cld mov setb popl (bad) mov stos lock mov mov out fs cmp cmpsl pop sbb cmc push lds mov xchg iret xchg cmc pop popa dec or mov pushf (bad) repz (bad) aaa sub fstpl pop repz jecxz cmc jge push fstl subb xchg or int lods pop inc jle lods por (bad) dec mov push add aam mov add int3 or fdecstp stc xchg xor cld scas std pop stos mov out adc outsl sahf jp adc movsb mov clc mov cmp and loop outsb pop mov shrl xor stos push adc les xor add jmp cmp push pop ljmp (bad) pusha mov mov ja sbb cld sub ja es ret xlat jae js add jl rclb pop pop jle cld jo daa shr inc repz jbe (bad) imul fucom xchg xor int ss (bad) mov lods repnz mov mov js push ret in pop sbb adc inc lods arpl inc cmpsl loop (bad) out std bound mov mov (bad) jmp sti adc call es mov stos lock pop scas xchg (bad) div mov dec ljmp rolb cltd icebp pop add lods pop les stos mov outsb out mov mov push inc mov push mov pop jmp push cmp js ret xor mov sub test inc sub xchg insb and xchg pop cs inc popf add lds lea cmp idivl call stos sub jno int3 sub lods sarl aad scas sbbb (bad) mov repz cmc jno (bad) add inc adc jmp mov movsw add push movsl sbb cmp xor (bad) mov xchg jno or movsl add popa out sub fcmovnb mov into inc sub mov lret dec test xchg jmp add mov sub sbb mov cmpsb mov into mov fisttp xchg cmp mov or dec test in fs cwtl jae aas add lock out sbb outsl mov xchg and outsl sub pusha je mov xchg pop call in pop pushf xor inc add dec mov icebp and dec dec sub out cmpsw test push fildll stos mov jge add inc lods jecxz loopne mov repnz push outsb jo mov sub jb sub adc in inc mov cmp (bad) sahf orb (bad) cmc inc cmc jp ret outsl daa mov outsl mov rcl add mov push mov add aad int push insl push lahf fidivl rorl inc add pop das mov iret fdivrl xchg arpl pop ficomp movsb sub loopne mov call stc out cmpsl imul mov out push (bad) je cmpsb in mov sbb loop mov mov dec xor cmp int3 sub jns lret lahf cmp cs ret test inc sti pop jnp mov pop ret fadd jb jae sub repnz roll test jg (bad) xor mov mov insb cs add sbb cltd mov lea add lret push adc jmp subb pop pop jae insb xchg pushf pop ja lahf movsb cltd push lcall sbb stos js or notb sub into scas data16 mov push data16 mov pop mov js fdivrs enter iret ret xchg fucomp in std outsl cmc jns mov pop and sbb xchg fimul push push cmp pop mov loopne lds add mov xchg mov jns ja xor roll lcall push push fs sub and imul scas xor je sub cli cmp (bad) mov das mov lea sub push adc into dec pop inc xor mulb mov cmp clc push xchg cmp mov mov gs mov out mov test out add in mov sub xor aad xchg (bad) imul aas jbe xor sbb xor lret and push push mov cmp into fmuls sbb aas je repz sbb loop or in sub out in xchg push lods sarb mov mov or fimul stos ss jg or jmp pop mov (bad) inc out dec insl movsl mov mov add (bad) (bad) sub cmc insb push xchg ret or inc in pop aam lea pop and lock into jns mov sub cmpsl sbb pop lcall out out xchg pop mov (bad) jbe hlt sbb sub inc gs mov sub lret pop push xor (bad) pop mov xlat cmc shlb adc inc sub enter push jne jl mov inc loope jb loop inc lock or ds dec sbb pop nop mov ja push add mov divb dec ret arpl inc push hlt mov push and ljmp mov push scas mov xor push pop cmpsl dec cli daa int3 sbbl and call pushf fcmovnb inc mov std ret mov and dec xor inc lock cmp sub dec or cmp jae lock das jg xor xorl in scas push adc and sti sbb es xchg leave jl enter xchg stos xchg xor jp push sbbb push xor xor mov add sahf push cmp ljmp lret xchg ds sahf push or or mov dec or iret sub clc jmp push push jae inc jp adc cwtl mov push (bad) sub adc mov push or repz pop aas and jmp xchg dec xor jno insb popf das mov cld and mov xchg xchg (bad) or ss stc mov inc cmc cmp bound test lret dec insb pushf (bad) mov inc jmp insb movsb mov in dec adc add jnp xor and inc jne stos mov pop xchg add jbe ljmp andl pop sub or out dec xlat pushf scas hlt xchg addr16 ret sar pop lock pushf mov sbb xor push stc mov jae push jp int pcmpgtb insl mov rcrl insl jnp dec scas repz int3 dec aad test or fstl loopne add call and lret and dec mov push pop fmuls out xchg jecxz push cwtl lods iret cs adc sbb mov jle (bad) out pop push fsubr leave loop mov push call jo pop sub xchg incl and jle fisttp fildl out (bad) add lret call out mov add rcl ss mov mov pop adc movsl sub (bad) pop data16 push dec lds in loope adc inc xchg ja repnz in ret mov or cmpsl std das xchg pop add rcrl loopne jbe jp ds cmp (bad) loope into inc pushf jnp dec pop push (bad) icebp dec sbb jae dec lds jno outsl aad cmc or add push jae and xchg or dec push fisub cmpsb mov gs jo stos mov mov scas std es pop (bad) jns add xor aad mov sti push mov cmpsl dec cmpsl dec (bad) mov sbb mov inc adc xchg mov in mov push or push lret xchg out mov daa adc mov xor das out inc cli jge clc out loope pop dec imul mov addr16 mov sbb inc or mov jle fmulp cmp aam cmp push and sub xchg insl xchg aaa (bad) in into mov inc jmp or test sub adc (bad) fs cli mov inc mov xor mov sub sti lret (bad) ficom add (bad) rcrl cmp loop push movl pop cltd xor sahf xchg jns sbb dec (bad) sahf lock fild in mov icebp dec insb hlt cwtl sbb in (bad) icebp into mov sbb es xor arpl stc sub sbb inc adc ja jp sarl xor fsubr fisubr fnstcw mov mov push push aas sbb rcll jle daa aad mov popf mov (bad) xchg adc cmc sub and pop xor test mov push ss inc call data16 sarb pop jno shlb ds cld jb roll inc cli out push stos xor (bad) cmc movsl jne mov into mov dec push push jmp pop cmc mov icebp jge lods aas jp push sub inc cmp cmp mov lcall add cmp loope jl test sbb fwait movl push xchg rolb mov es cmp sbb mov xor inc test mov (bad) xor addr16 std insb adc sbb mov addr16 (bad) sti jge inc mov adc hlt xchg test arpl inc frstor (bad) jg or adc fmuls push bound sahf xchg mov jnp cmc mov inc aaa push shrb sbb popf hlt push roll jne mov popf stos sahf or rclb inc stos xorb clc addb or test push mov rorl jmp lods pop lods xchg mov fbstp push dec inc adc jge mov add xlat outsb loop mov mov sbb mov jl fnstcw js shl andl leave std mov push out push push stc xchg jecxz push ljmp movsl ss adc pop jl push jmp mov xchg rolb stos sbb and scas mov lret sub imul into fwait xor push xor movsb mov mov pusha loopne int3 push xchg nop aam pop add (bad) push xor mov xchg cmp mov jo inc lahf pop test pushf movsl inc fidivrl cmp pop lcall mov popa das js imul (bad) mov enter and fimul or push mov pop pop fdivrs adc (bad) mov ret and lock adc lcall je stos xor xchg and test (bad) cmpsb ficom xor mov dec pop jns pop sub jns enter push bound enter cmc push cmp mov sub xor jns ret rcrl cmp inc pop pushf iret gs data16 pop es out add outsb inc scas pop mov mov add pop stc aad jmp xor add mov or adc push or leave test and (bad) mov iret jne test mov mul xchg cld inc dec insl test jmp outsl cmc or repz leave rcrl mov lods bound jno fldl2e mov fwait cs pop out (bad) data16 repz xor cmp out sub into mov popa adc sub push adc xchg xor jns faddl stos add push sbb lret inc mov pushf clc xchg jg pushf xor aam pusha xlat push jbe dec and arpl sub jp cmp pcmpeqw sbb outsb mov je jnp jo test loopne fs jge jmp and jecxz sub je rorl xchg fdivrs (bad) movsl fcoml aaa (bad) lret dec in movsl out scas (bad) xor cmpl mov push pop (bad) jne mov popf mov adc pop jb scas and mov (bad) lcall sbb leave ljmp data16 mov in mov mov sbb push jle or cmp subb xchg adc sub loope xchg jnp ljmp je sahf xchg cltd adc mov sub in ret pushf insb adc loopne push xchg sbb adc pop inc or mov into lahf sub mov or (bad) bound iret dec rorl lret jb xor lds je adc fisubrl pusha adc jnp enter jo push push pop scas cmc push (bad) jae hlt jmp dec lcall mov mov inc pop mov jmp and jno iret sbb fldcw fucomip call sahf (bad) mov repnz push jmp mov ds insb mov xchg sub ss mov pusha cmpsb mov add mov rcll mov sbb lods outsb push sub or jle ja xchg jae inc sahf (bad) mov sub popf push xor dec dec into imul outsl cltd push add (bad) jno sbb lcall and pop out (bad) xchg xor loop lods jbe jno push int3 xor sarb xchg lea aaa or sub sbb and repnz in push sub idivb fs mov xchg test cmpsb jae cwtl pop jp into test pop pop mov out jecxz jnp mov hlt pop adc je aas pop jmp add or in xor push mov mov mov mov add out into ret in (bad) sbb das mov push rcll std test das gs dec aaa fwait adc lcall aad pop bound lret inc lock cwtl xchg or xor fidivl mov push subl test sahf mov rcl xrstors lock mov daa push sub jo adc out push xor cmp adc and cvtpi2ps xchg fimull mov sbb mov inc js and mov sbbl ficom sub pop pop movsb repz ljmp mov out test ret dec fs lcall jl sbbb dec xor mov mov jl inc lret pop loopne (bad) mov lret xchg enter mov mov orl push scas lret sbb (bad) fstpt mov out iret hlt ss (bad) pop les repnz js lock mov xor stc or lds (bad) mov push outsb iret test popf movsl xor imul js cmp lea stos cmpb fdivl mov push mov jecxz mov mov (bad) mov fadds push into mov mov jno mov lahf adc push fsubrl sbb arpl fwait or out pop pop movsb push (bad) mov or sbb stos (bad) jmp jo cmpsb push jb mov fbld in inc ror dec rcl (bad) adc add aam adc push dec sbbl dec push cmp repz xor cmp hlt mov daa jns xor jle pushf es cmp cld je jp pop test test sarb adc outsb adc xor mov sbb cmp sub fiaddl (bad) jg pop (bad) clc cmpsl xchg inc mov in call aas cmp stos bound lcall clc pop in pop in dec imul repnz jns into mov lock inc xchg push mov imul or nop out xor and andps orb pop jge flds mov and or or cmp mov jecxz xchg fisubl and cmp loop inc sbb mov jp jg push and (bad) stos lea scas pop jg movsb and jmp xchg push out mov adc mov lcall push mov pusha test out push adc insb ret in frstor sahf jg std xchg shrb aas sbb xlat adc pop out pop pop pusha push add jmp sti lock jb sub repz inc jo sub ficoml aaa fistl dec push repnz cmp sbb mov daa mov fidivl fs hlt icebp lahf push cltd xor mov fimull jge fstpt stos mov pop fisubrl or pushl lcall stc fidivr shlb out cli and add lret mov cmp sti (bad) sub sbb mov bound lds pop test push outsb lret imul push mov add xchg aas push aas movsb fisttpl mov push int scas jle ds pop pop je sub sbb dec (bad) mov sbb pop std mov insl je or mov adc jl push stc mov cmp or xchg sbb popa jecxz pop insl imull xor xor jo pop dec mov mov pop jne fucomi imul ds inc push fimul xor in jl cmp sbb aam movsl mov icebp add mov mov mov fcoms sti jbe jge mov mov adc mov push xorl adc xor jp inc ret (bad) lahf popl repz daa mov (bad) repz push and sbb sub nop push push and pop fimul push jle add dec cwtl cmc xlat push and stos movsl shrl xor sub xor add (bad) jb inc bound pop hlt out jb sti ljmp xor or ror and cmpsb xor ja repz push leave inc fstpl mov je imul mov and test inc out xor pusha andb mov aam sub sbb mov std fsub popf adc out out dec sbb push lods mov hlt push adc aaa cli xchg dec rorl lock jp stos (bad) jae pop mov out mov push adc scas lea call into mov (bad) aaa push pop mov sub hlt mov xchg xor in jns jnp push cmp pop stc stos (bad) mov xchg mov xchg add sti lds cltd arpl cld arpl dec test dec mov push jbe lahf test clc xor mov rcll pop adc mov dec leave xchg ret js flds or in imul inc popf int3 lret fnsave mov fincstp je scas push jnp imul test mov jl jnp cmpl js or jne or stos or enter push pusha jae iret fdivrs jmp fucompp popa sti pop fwait test pop arpl outsb pusha push aas push (bad) repnz mov mov leave imul pop call dec fsubrp insb fs clc aas lret test xchg stos xlat inc int jns ss cmpsb lahf pop ljmp shll scas push push out mov rol mov aad gs sub xchg add xor (bad) xor andb xchg hlt sbb addl push in xchg imul loop xchg hlt adc pop lea xchg js pushaw in in aaa cmpsl mov inc mov pop or sbb xchg or jo loope scas dec insl stos pushf xchg ds push mov xchg popa xor mov xchg or pop jne ret fcomip loop hlt dec dec rclb aas add push mov mull gs ja test sahf cmpl (bad) sub pop ss xor imul cmp test inc test int (bad) dec (bad) fucom inc dec jge ds sbb sahf push sbb or xor aaa lock fstl dec and push repz mov add call fcompl inc mov cmc mov ficompl or jnp mov dec lds movsl inc jle je jp mov sub inc jbe sbb inc fs fmull cltd gs lods iret imul ret jle test mov stos (bad) cmp mov push xor jb sbb dec scas mov adc rolb jmp and hlt aas mov ret xchg in fidiv (bad) sbb call dec mov xor and mov and daa or outsl push jecxz stos sbb pop sbb loop movsl enter xor jnp int3 and adc or cmp js dec jge scas imul add icebp cld outsl js daa xchg lds sbb sbb (bad) jg jns add cmp les fs jo dec or jp stos popa sbb lret push fidivr scas ret cmp aad mov mov jmp cmp dec scas or rolb mov aad push mov fidivl sbb sub outsb outsl xchg scas add lods inc (bad) pop mov and and popf xor pop in testl idivb in scas xchg fmul inc leave mov inc (bad) addr16 int3 inc jo mov sbbb sbb lds or test pusha jp jmp (bad) pop cmp sub add xchg jbe pop and out xchg push aad test and cltd rcrl inc dec imul jb pop mov daa fdivs imul pop xor xchg lcall jmp pop adc jl notl je jecxz (bad) popf add call cmc or lea cwtl and add int3 stos mov fcmovnbe xlat mov gs into push mov popa jne dec add jge jno pop mov cmc mov xchg fisubrl push adc lods shll or jg lahf (bad) dec hlt and inc in lcall jle inc mov push adc mov pop mov outsb shrb mov cmp xor cmp fisubrl aas ljmp cmpsl cli sti xor insb xchg test fdivl imul cmp scas sub sbb inc add xor xchg (bad) jnp pop cld and xorl fisttpl adc mov xor jb or popf movsb adcl ja into and cmp mov xchg pop ss pop ljmp out imul divb test das push xchg loopne das cwtl jns pop loop and mov mov add out daa mov dec or cmc sub xchg sarb add xor test adc sbb mov dec (bad) sub lcall and shl jo insl out aad lret out jne add add stos jle sbbb jno mov and out into test fistpl repnz sub inc sub cmc mov push or adc sbb notl scas cmp lret popa ljmp add cwtl cmp add xor and lahf pop fisttpll mov push xchg push mov dec mov outsl sti pop push xchg (bad) daa (bad) and add lods stc es xchg fistpll loope loop sbb ficomp mov es dec out jge (bad) fildl xor roll mov daa pop cli mov dec adc rorl inc adc fld adcl int3 (bad) mov addl int3 dec inc mov xlat ficompl cmp mov adc pop xchg adc push insl ficompl lahf sar jns pop pop push sub outsl (bad) push sbb in ds mov cmp data16 jmp push hlt inc push popa movsl lret fistpll cmpsb mull mov das movsb ja xor or maxps push xor shr dec xor addr16 outsb lods jno xlat inc push adc popf insb mov and insb xchg jecxz std out push xlat jmp xchg (bad) stos outsb ljmp and ret movsb cmpsb mov cmp (bad) lret ds xor xchg jg mov int stc (bad) fisttpll (bad) jno sub xor outsb push int3 push sub je in adc add loop pop xor and xchg ja mov lods popf enter out sub (bad) pop adc inc divl xchg (bad) in mull mov push aas pop cmpsb clc mov lock pop sub in pushf (bad) sbbl dec mov mov addr16 loope dec adc cmp jl mov repz ficoml mov xchg xor aas ds push outsb mov inc xor test jno movsb lods outsb add lcall adc fcmovb test sbb sub in pop sbb (bad) into dec repz iret lock push out loope test popf rcrl jl sub jle adc daa push jnp sub inc inc mov dec loope scas loope scas ja (bad) movsl mov cmp jmp int xor sub mov fmul fimul orl xchg bound mov test ja mov mov jno inc hlt cltd adc mov xchg cmp addl out mov mov or dec xchg iret ja sbb movsb out out mov push add in incb inc lahf and cmp fstpl mov dec mov push push fs or or jp inc arpl ret sbb fcoms lods test add enter test addr16 cwtl add xchg push sahf sub inc outsl cwtl in cmpsl xchg aas shrb call hlt cltd js and xchg fs mov pop lahf cmp xor rclb shll mov mov or sbb cmp loop inc sbb out mov sti hlt push ss ss (bad) enter mov stc push xchg jl pop (bad) push ja push mov xchg ja mov sub outsl fdivrl int3 xor aaa push jnp mov pop sarl imul adc fs lret cmp mov pop ja jecxz lret in dec test dec lds and mov fwait mov adc pop mov xcrypt-ctr cmpsl pushf jle pop pop pusha xchg icebp xor rorb pop and mov js pop and adc cmp push shrl int3 push insl mov jnp dec fs cmpsb loop mov mov addb test in mov pop add rolb in mov pop arpl addr16 and mov jmp nop push aaa adc (bad) (bad) (bad) xchg mov pusha push sarl inc xor imul ljmp push jb xlat ds ret dec cli mov sbb fwait mov mov je ds pusha outsl jle and stos cli packuswb sbb fimul mov jno pusha sub mov test jnp (bad) mov outsb popa and nop inc sub psrlq or pop mov (bad) cmc aad and lahf ds pusha psraw fidivrl in in mov push test rcl lods out es or mov mov jle jo sbb push mov xor xor int adc lcall icebp push xchg repz and lds and xchg dec sub mov mov nop mov xchg dec aaa mov sub jp sbb addr16 xor aas cs push movsl xlat lcall fisttpl pop mov xchg ret adc imul (bad) jns add xor outsb mov mov fs jbe inc mov cmp mov shlb pusha insb and jns pushf mov bound fisub sub mov (bad) mov xor mov mov (bad) incl rclb sbb insb pop adc cmp or push ljmp lods (bad) push push subb mov cmpsb stos in inc pop jp push lcall out lds pop cltd mov mov or imul loop pop jecxz push push enter in or dec out mov aaa mov and loope ljmp and xor iret inc repz sub jmp test arpl scas jne push push mov (bad) iret sub bts (bad) adc fcom aam mov add push xchg mov int sub (bad) mov sbb fwait imulb xchg hlt mov fsubrs xor fisubr jg cmpsl cmp fs cmpl xor loopne jns inc cmp lret loopne cmp cs xor jge fnclex xor mov repz add push outsl iret les and (bad) mov lret icebp jnp sahf cld icebp cmp cmp jnp jo or push mov inc gs mov push lret and jne int3 jns in test adc cmp (bad) es pop fwait push pop loope mov rorb xchg in inc shr push jle fnstenv mov xchg pop rcrl je and je mov mov loope cmp mov cltd (bad) bnd out test and sub inc mov test xor xor in add dec mov aad xlat iret sub pop jns mov or imulb scas or int fisub lcall add pop or ror out movsl jp sbb push andl mov inc or cmp or sub icebp in aas sub adc and mulps cmp gs inc and pushf add push add sub sbb cli mov pop ss movsl dec jae repz mov jecxz outsl and or cmc popa es mov rolb cld (bad) sti adc div cmp (bad) pop and push popa cmp int mov insb roll imul sub jecxz mov dec fmuls mov sub pop pushf dec sbb loope pop daa sbb ds movsl test fwait pushf xor ds xchg js add or les fidivr aaa dec adc iret mov stc xchg popa and arpl outsb xchg and mov int adc ja xor gs push xchg shlb mov lahf imul arpl xchg fisubl xor icebp imul pop (bad) pop jo out ud2 add (bad) pop (bad) out cwtl ret and leave pop or mov gs cmp adc cmc fcoml mov mov es mov cld rolb fxch push fsubrl dec dec lods jb jle sbb push mov out dec mov sbb negl push pop mov cmpsb push into fnsave and insl mov aam sub aad fbstp stos push push pushf dec pusha xchg inc por cltd adc js stos push clc dec cmpsl xchg aaa pop jmp into scas adc sarb out pop ljmp inc jo or sub jge ljmp in dec repnz les push in pop movsl add ficomp mov cmp cs int push negl cmpsl decb pop cmp sbb pop mov xor sub sbbl enter lcall dec addr16 or jmp (bad) jbe mov rorb (bad) cmpsb imul dec sub (bad) jnp addl aad lahf les mov aas (bad) icebp (bad) push data16 push xlat jl jl data16 xor jmp fnop in shlb cmpsl and out (bad) mov cmp push dec add andl fwait adc push mov sub shl xlat loopne insb fcoms movsl jne aad dec jnp ja enter mov out mov stc mov fmull scas add jle mov cld sahf (bad) int3 scas and adc insl mov sub dec out fs pop xor aad mov mov xchg mov stos lcall sbb dec aad dec sbb pop push repnz lods dec and mov popa fnsave int3 iret cli mov lcall pop imul popa fldcw int (bad) stos cltd cld int3 movsl sysexit decb inc out mov sub or inc jnp outsb pop mov dec xchg mov les add mov int xlat or roll add stos jecxz or pop cmp or pop dec push cmp (bad) data16 lcall inc (bad) (bad) nop ret sbb mov out lea mov (bad) adc les jmp aaa mov inc ja fsincos cwtl mov rorl movsb push clc sub dec inc mov xchg test mov lret call clc popa dec sbb (bad) lret rcr dec int (bad) xchg fs movsl stc sbb in je cs frstor inc jg clc inc lret xchg inc cmp stos mov notb (bad) stc clc cmpsl int3 push call xchg outsb push cmp or pop pop mov and pop movsb movsb lret imul add mov addr16 mov jae mov mov pusha or icebp out xchg lock inc out test les sbb (bad) dec test add sub fcoml add xchg mov xchg pop ret out jmp xor xchg push in fsub adc xor lods lahf rcrl push xor push test (bad) negl xor add pop inc xor push cmp pop in mov out stos jp fbstp mov enter repz insb add xor cmpsl xor icebp inc enter gs push lock push inc add xchg adc pop fld adcl adc iret mov in inc test scas sarb in (bad) jmp cmp push leave xor je dec pop mov cmpsb sbb sarl rorb inc jmp xchg xchg mov iret sub js lcall jp (bad) sbb stos pop jae dec jge pushf push push test dec mov insb sbb inc cs fs (bad) in or (bad) mov pop in pop fldenv sub daa notb cwtl mov fdivrs mov punpckhbw (bad) mov sbb inc popf lret testl push jg add scas bound inc (bad) or mov xor pop dec divb fldcw push dec xor out in fidiv insb mov add xchg int jge push mov stc aam cmpsl loopne rorb mov and adc rcr test fistpl ret pop fs sti jecxz das pop mov dec divl xor add and mov jns dec inc mov out jecxz or fbld pop adc xchg shrl (bad) adc aam (bad) movsl sub outsl outsb (bad) jge xorl or icebp cmp adc dec inc in jl mov push xorl mov daa adc mov imul xchg loop cli mov gs std xor inc shlb sbb test sbb cmc push dec mov fld ret lock data16 or mov sub xlat std imull jmp out jbe (bad) pextrw sub leave cltd out inc inc ljmp add sbb sbb xchg loope int3 stos mov mov ficoml mov mov cmp mov scas les mov jg mov adc push jmp clc inc dec std notb pop pop aas call sub mov add (bad) mov rcll add sti (bad) dec xchg mov mov dec leave jae,pn mov divl inc ret sbb jl sub xchg push sbb flds mov dec stos addr16 test movsb inc mov dec std sub (bad) int pop push arpl cmp test test (bad) repz mov and test push jns dec lret and adc dec xlat push jns fiadd ss loope out push jae fs cmp pop xchg (bad) js ss aas les lods push mov loop mov (bad) movsl pop fildll in outsl xor aaa pop pop inc gs rdmsr add sub or imul ret xchg push js rorb and push cmpsl arpl lret sbb jl and or out pop pop cwtl mov scas mov sbb pop mov mov push loopne dec ss jbe pop xor daa mov mov mov push mov mov fs or dec jae in pop test pop add and mov and sahf mov loop shr in cmpsl mov mov fwait mov xchg mov aad jae or inc pop je (bad) sub cmpsl cmpsb stos and movsb xchg fildl push add movsl aad jl out mov inc es and (bad) xor bound pop addl movsb dec or inc pop and mov add jmp jae jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop (bad) jg add pcmpeqd clc repz add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in (bad) jbe or mov sbb insl mov jno mov (bad) fcompl jg push stos pop or adc in incb mov jg es mov sbb (bad) mov xchg or jbe imulb or mov pop mov sti mov jne cmp imul mov and xchg rcll test lahf pop inc pop daa aam and push cmc jno imul cs in sub xlat xchg in addr16 cmp push jl dec stos and jb icebp xlat pop fwait mov bndldx insl inc into pusha hlt pop arpl outsb arpl xor clc int mov es sbb arpl add stos adc adc ret popa enter inc test das insb fucomip push clc xor nop out data16 arpl dec pop outsb insb lea leave pop sub xchg mov sahf xor fnstcw shrb xor imul xchg stos stc cmp ret sbb sub push pop inc pop adc (bad) xchg (bad) adc shl adc add es scas xchg movsl mov ss cmp add ficoml or cmpl les mov sahf mov inc xchg or flds aaa mov loopne push out cld add (bad) test mov fwait aam and cmp and xor push nop push inc and insb cmp rcl test arpl aaa leave shl mov mov sbb pop mov clc mov addr16 jp adc mov (bad) jge jns xchg cmpsl xor lret xchg js adc and inc adc pop (bad) ss ja ret test xor push repz sub lods in cmp addl outsb stos push pop jne inc push (bad) out les mov test in cmp add inc push sbb add or pushf xor inc add (bad) lea xchg sbb sbb loope cmp rclb mov out push outsb ds (bad) in fnop lds test push mov jmp daa mov dec roll mov insl ss (bad) mov sub js sub cld mov enter std fldl (bad) cmpsl (bad) cmp (bad) and in imul mov sarl imul add cmpsb mov enter xor fistpll jg fwait add xchg jg sbb stos das add pop lea fdivrs in lock ret inc aam stos dec push mov mov mov in js loope or sub mov test jp mov bound and mov sub es ret fistl sti mov add ret testb jp pop mov iret idivl push and jae cld push (bad) cmpsb cld pushf nop push push dec xor or mov out jle es imul iret inc out lods mov cmp add pop scas push test test pop sbb add sahf cmp cmpsl dec movsb (bad) sub sti xchg push mov dec icebp in cli xlat xor xor sub cmp dec mov shrb loop test data16 xor inc notb (bad) call shlb andl mov bound cwtl adc jo inc ss pop dec lds sbb shrl push xor rorl xor out ret fisttp imul test xchg xchg mov inc or test push xchg and jge dec pop fldl in push leave jg cltd mov mov jmp pop je leave jl xchg xor mov inc and fsubrl test jp cmpsl cmp push mov aad das out cli xchg mov push or sub sub mull aad movsb out or leave cmp and repnz fstps sub dec inc xchg pusha call push sub in divb pop xor std imul (bad) stc nop push xchg push add in fbstp nop int3 lds inc test jnp (bad) push jp bound dec iret adc inc ja leave arpl dec pop push sbb mov jecxz (bad) adc mov (bad) insl jmp aaa stc rcr pop pop lods mov repz sbb jae inc popf bound inc subb fidiv jne jnp enter mov or mov mov fnstcw inc gs outsl mov hlt fistl xor clc imul sbb testb or mov out and aad repnz cmp mov and mov mov pop mov and lret cmp or add imul and pop push test ds aaa rcr jb push sbb imul ret hlt mov and call xchg fcomps test aas or sbb arpl pop cs fidivrl inc imul and pop pop roll sub inc inc adc jle mov mov out popa loope rorb adc mov pop add mov mov movsb xchg or jb xchg sub insl popl imul popa mov push push mov pop or mov popl and push push jae push adc push nop jne,pn outsb sub or cmp mov imul adc xor popf mov loopne mov and jl pop (bad) out (bad) mov mov add mov sub mov pop mov jns lods inc movsb mov sub stc and jecxz jg xchg out mov xor bound cmp mov pop addr16 cmpsl mov cmp mov or jmp xchg pusha dec inc clc add scas popf into ret (bad) xor cmc and cmp daa xlat cmpsb dec sub je pop pop dec sahf xchg or mov mov jns xor call aam ss or (bad) icebp cmpsb jmp in repnz pop jbe or adc xchg xor pushf movsl pop dec imul push ret push dec pop and add jo pusha sbb pusha push mov fsubrs mov imul arpl popa jo (bad) roll xchg push jecxz sub into xor addr16 out xchg movsb movsl sub arpl and std cmp push (bad) test pop push inc push dec add loop and push (bad) clc sbb in hlt ljmp pop loopne das fsubr shrl daa sbb aaa jecxz aad cmp dec addr16 out push (bad) cmp out inc incb inc cwtl ss inc mov popa xlat mov loope lds mov out jno mov mov sbb arpl shrl loop sbb adc push mov jo stc mov adc mov or add push scas push mov add pop push xor mov sub xchg pop xrelease or mov push js roll clc or add scas xorb arpl cmp adc pushf jbe cmpsb mov lock mov cmp es sub inc sbb in adcl mov and mov bound cmpsb ds push pop iret scas sub push pop lahf cmp (bad) aas lahf cmpl addr16 add xor (bad) jns addr16 cmp repnz cltd sub ret imul mov fcomps jno inc cmp (bad) jmp test vunpckhps incl cld add (bad) dec imul (bad) je repz sub movsl adc bound inc mov arpl lods push xchg pop xor pop jge jge cli fildl jnp cmp cmpsl je sbb lods xchg mov mov sbb mov jae lcall pop (bad) mov push lods xchg fwait insl ret inc and cmp xchg pushf pop out sub ds mov and popl xchg push test rorl push mov push jo pop out add or dec mov mov jge push adc push pop jne mov xchg pop cmp sbb movsb xor add push (bad) cmpsl cltd or mov nop aaa push or aad popa into mov jae and lods cmpsb cmp mov pop sahf sti daa lock xor lcall sbb loop adc js push rorl cmp lds mov cmc movsb adc ret imul cmp ds sub mov jl push mov daa pop and insl int loope lret xor sbb aaa roll into push xor aaa inc pop cmpsl subl push imul loop jecxz insb push rorb fstl push lahf pop mov les leave sub clc into push and dec shl sbb mov push out xor mov jbe cwtl pop mov xchg fwait stos inc in jne push jno idivb mulb mov or loope lea xor test xchg mov adc pop and orb gs and jne push jmp mov inc dec lock sbb (bad) xchg rcll sbb mov (bad) lret sbb int jnp repz mov ret dec (bad) dec sub ljmp mov pop (bad) scas add icebp mov mov sub scas xchg stc (bad) or in inc in mov fs sbb sub scas ljmp xor (bad) cmc push cmp adc adc jbe sti in ljmp mov xorb mov scas push sub inc sub in push aaa fstl or dec outsb push popa dec xrelease or dec mov and daa mov adc rcr (bad) pop push (bad) push ss cltd fs pop movsl or sub js in loopne mov es adc xor push mov lods es pop mov adc loop int3 lods or adc mov in testl testl mov into sbb adc ja push xchg cmp cltd jmp xchg fistpll xor lds jo jecxz jle cld stos and sbbl fcom sbb lds cmp sub mov ja cmp cs push push cli push scas pop mov ljmp ljmp pop xchg fisttpll les push imul notb jmp inc push sahf aad fdivs lcall rcrl jmp ds (bad) mov int pop aad sbb fisttp add jo xchg pushf mov cli jb dec dec scas sbb test sbb add (bad) out test adcb imul out mov test adc dec pop loopne mov xchg aas mov fcmovu (bad) xlat pop fcoms add fcompl xchg fcoml xor or fdivr aad xchg jnp ss in pop xchg sahf push mov mov and pop test in inc dec adc dec xchg call jecxz iret inc xor or dec fisttp subl adc add add imul mov aas and jmp push lahf and mov outsb and sbb adc xorl inc jnp (bad) ficomp mov mov lock fwait jne bnd mov xchg xchg (bad) jp int add repz sbb mov xchg lret outsl test inc std sub scas pop inc dec (bad) std dec (bad) lret mov mov xchg lock ja and adc in xor pop and out mov lahf lods xchg outsl adc rcll and movsl aas lock xor or (bad) loop gs ret ret or jmp mov mov bound sbb mov push stos pop cli test sub inc das sar outsl pop in dec flds pusha std into cs lea jo test adc push inc fs daa sbb jle sub add sbb inc adc or jecxz out fildll jbe add jge jle jnp cmp xor jge (bad) rclb stos jg sbb add (bad) ljmp popf pop sbb and and hlt mov xchg or int3 xchg je in int fcmovu sub jg mov (bad) ljmp sti rcrl lahf lods sub mov xchg jb and mov mov xor or or sub mov add push lds xchg xchg dec data16 add xchg or das cmp imul xor rcr jl nop push in pop cli pop inc int3 hlt sbb mov mov cmc stos outsl jns cmpsb ret jle jle enter dec push jg idivl push incb add and cmp mov xor cld outsl out pop push ret and int3 out add jmp xor pop pop pop cltd xchg mov sub xchg test and (bad) mov adc rorb movsl hlt (bad) jo fsubs inc adc jae sbb mov ds scas jg add cld rcl xchg imul pop jg add adc nop gs mov (bad) stc xchg cld aam repz aas jnp pushf dec sbb pusha xchg outsb int3 inc mov loop es popf push dec pop xchg or add add dec xchg mov push cltd nop fstpl dec cmp pusha in rorl inc sub sbb (bad) xor dec adc call push and cvtps2pd les sbb inc vminsd fdivrl dec xchg dec (bad) ficom and dec lret ret or add adc xchg xor std das fidiv mov mov call stc sub test and xchg push cld and movsl pop adcb das es pop jmp mov mov jo cmp adc cmpsb mov push jp cltd dec and test bound inc mov in xchg adc xor sbbl mov inc loopne and mov jmp mov inc mov inc sbb scas out lods (bad) fsubrs or push (bad) add jns jmp cmp jp pop mov fwait fwait add adc addr16 movntps lea (bad) push mov xchg and mov adc fisubl and mov cwtl and (bad) sbb pushf or cmp mov mov pop icebp repz insl jb and aad sarb enter sbb xchg cmp scas das jg add sub icebp stc push loop aad cs jp ds dec int das sub (bad) mov out dec cld mov lds iret into or bound mov sbb sbb sbb or inc xor insl mov in dec loopne xlat and dec ret test test or sbb minps lcall sbbl rcll stos cli xchg push mov out jge pushf test shll leave lret sub loop jne bound ja inc dec (bad) stc roll pop pop ja jmp adc or lods sahf mov movsl in adc xlat icebp je xchg mov and mov xchg in call adc cmp je mov repz movsb shll or inc xchg (bad) jae add push pop fidivr push repz mov movsb mov fcmovnu xchg add mov enter dec fsubrs cmpl adc inc lret xor lods xorl mov scas (bad) iret scas pop cmp xchg les lods dec ljmp push cld adc fisub ret dec sahf in push or rorl push fisubr add pop ljmp inc jno lock repz cwtl mov jl push jne sub std push mov sbb mov cwtl add movsb add cmpsl fwait jae sti sub aam sbb xor xor out cmp inc dec jae pusha dec mov (bad) jp in jnp sti jo int sub fwait jbe popa dec xchg and pop cmpsl stos or pop cmpsl mov xor jge jmp hlt hlt jno or dec sbb pop ret jo mov sub cmp dec mov push mov popa icebp push or test test mov pusha pop lret jnp push aas test cs (bad) lock sarl inc xchg and push fwait ljmp ja sbb cmp (bad) cmc jecxz stos mov xchg hlt cmp imul inc ljmp jmp enter cltd out fistpl loopne pop les aam fnstenv mov mov fs jnp mov jnp rep paddd pop xor push pop (bad) fstp aaa movsl mov out rorl inc and xchg lret or imul cli fcoms xor or jo push in jns xor xchg mov xchg insb dec (bad) pop adc pushf jmp mov add and jo add aas test pop mov ljmp int3 inc sti sub xor mov fstpl lods daa test push lods loopne sahf sbb lahf out js int out (bad) push pop popf and xchg out popf pop in pop or pop ror lret rorb imul or fdivs rorl movsb inc mov pop enter aaa inc (bad) xchg pop je push leave mov cwtl aad adc dec jno xor pusha cmp inc imul pushf add lret sub imul xor fidivr scas movsl lret (bad) js scas push fisubrl jge sbb fmull cmp rcl loopne imul daa loope xor lea mov push and push adc icebp pushf iret sbb daa cmpsb (bad) mov arpl popf add cwtl adc sub xchg xchg (bad) cmc or out sub xlat mov push aam inc xchg pop inc imul cmp ret jl shrb mov push xor loopne jo clc imul ret pushf lock xchg in outsl stos test cmp scas add xchg mov aam mov inc push adc cmpsl imul ret lcall push pop mov jns or sti (bad) and and and in cmp mov dec or cmpsb fdivl call out lods fisttp mov icebp lret xor test mov sbb nop ljmp jno flds push mov ret sub pusha jae and jne je pop rcll in stos push fimul sbb je inc pop mov (bad) or inc and mov mov jle jb ljmp dec and out xchg mov arpl inc mov lods mov scas adc mov mull adc inc shll arpl stc push mov push outsb das rcl jno xchg sub adc cmpsb out enter adc inc shll add outsb movsl fwait inc lcall jl mov mov mov sbb les movsb inc pop ds mov shrb fimull jbe inc pop adc daa mov into xor jp xor and call fnstcw mov cmp xlat push jg lods xor enter add loope int3 cwtl scas outsl ret loope daa and inc pop ja stc mov in cmp pushf or sbb popa sub xor add jnp pop cltd shlb loop jns sbb pushw fildl lds repz add out scas ret outsb scas add gs pop lret sub xor mov mov out loopne andb xsaves mov mov cli test in jmp push loop and mov mov inc jns jecxz pushl mov loopne gs mov shl or cwtl das and xchg stc xor test (bad) hlt inc mov xor mov sbb and iret cmc adc mov je xchg sahf add cmp (bad) or (bad) aam jge (bad) cmc in add mov rolb aaa or inc imul xchg sbb (bad) in lods jb imul loopne (bad) mov dec xor fist aaa mov neg icebp xor dec and in push icebp and push jbe sub jo jo mov or mov jmp out mov out adc mov loop cmpsl lods jg hlt adc xchg mov push adc dec mov sahf adc dec xor iret sbb lahf pop roll adc cmp and ljmp lods mov pop in das lods cli adcl push int3 ficoml mov push adc jo sti push cli das add mov ja pop fnstenv rorl fiadd mov sub cmp test push and inc cli ljmp jo xor sub pop (bad) arpl inc push and in outsl (bad) adc jne fs ret fcoml outsb fsubrl xor out inc ljmp push xchg cltd xchg repnz adc mov dec shrl fidiv add lods mov gs and fsts add cmp addr16 xor lds fildl call insb int3 int3 dec incb divb (bad) jg (bad) repnz xchg xor push push inc mov inc push fiaddl (bad) jmp cmc sbb les mov pusha and inc push cmpsb inc lds push xor jge subl xchg outsb push sbb sbb (bad) repz xchg jb fisttpl mov xor gs out xlat mov sbb cs pop mov lds or mov push cmpl mul adc push cmpsl xor repz dec sub xchg mov and stc (bad) xor js int3 scas leave xchg sti mov xor call xor leave cmp scas mov mov push inc push add mov sbb mov sbb ret movsb xor pop movsb in lret call ja push cmp out jg xchg je bound sub sbb push movsl mov cmpsl inc bound mov pop arpl jg fcompl add aam mov mov push movsl pop arpl sub sti push fldenv sub call fsubl aam or pushf adc xchg es out or fstpt mov add lods pusha jno or or imul xor mov fsubrs pusha out sbb lret loop inc hlt stc push add (bad) mov mov mov cli inc lahf push cmp dec test inc mov movsl push scas mov movsb push nop and das pop inc push mov mov aas jl sub (bad) pop xchg push repz (bad) sbb fwait lret rcrb outsb or sub into sub cmpsl outsb pop xchg shrl push inc aaa pop out mov sbb sub push or xchg lret sub jge jnp inc inc and mov sbb into decb pusha inc xor std aad mov push ljmp push std push xchg call push jb pop or inc mov push pop out add int3 inc xor pop js lods sahf (bad) fs mov push test inc ja fildl push jp pop pop cmpb and inc xor fwait adc loope and mov repz xchg test imul pop xor ds or out xchg test sub ror adc push rol adc jo or adc sub and xor divb insl insb orb rcrb sub ljmp cmp (bad) aaa push nop cmp enter or pop nop insl rcr jns mov lret and lods iret dec mov pop (bad) fwait scas (bad) mov sub or xchg popf cmpsb mov xchg xor add lret test ljmp xor mov (bad) movsb xor aas push inc push mov inc add pop fdiv fwait je aam idivl les test and lret in aam mov mov fcomip cmp mov xchg aam push fldenv mov mov pop inc inc and sarl lods jge mov sarb dec mov jns push sbb sub iret out jo add lods cli sti mov xor lcall or addr16 mov jle mov xor in mov fidivl or mov push or mov pop xchg (bad) xor fsub xor mov scas cmp jns xorl daa lcall addr16 and stc dec in dec push jmp ja rorl pop mov inc js and scas and fcomps or cld xor ljmp popa sbb ficom push pop mov fucom push sbb sub cltd mov mov add sub dec sbb pop mov sub add scas ja test jl stos adc or mov mov lcall jae add dec jmp mov or mov stos dec cmp out pop popa cmp sbb and cmc je inc mov xchg in mov push inc mov cmc jl push xchg mov ds jae lahf xor scas push sti inc (bad) cld pop adc cmpsb dec cltd mov enter movsl mov imull je pop mov adc xchg lods and xor sub jbe fmuls jno (bad) jmp xor add add out nop mov es push pop sti fist cmc jne in sahf (bad) pop push pop mov push in imul test test scas (bad) in dec ds into andl and xorb inc jnp loope arpl xor push mov les mov jae pop or mov bound pop aas rcl cltd (bad) xchg (bad) mov mov xor (bad) leave push mov pusha xchg lcall popa mull aad roll lods inc sbb (bad) int3 mov add ret xor daa insl fistpl jecxz lret das mov inc push mov pop in shrl pop sbb (bad) mov cmp mov cmp add lret lods ss int3 scas fnsetpm(287 movsl jmp mov mov scas xor pop pop mov aaa jno gs and push les xor nop jp inc pop cmp out ja lret mov pop push int pop repz mov sub std aaa mov in adc jae sub jg movsb add mov daa sbb jb in push mov pushf (bad) (bad) icebp (bad) xor mov out jp hlt dec and jns lock push mov mov cmp test jp repnz mov jmp jne push and test cmp push add int xor sub stc xchg in jp fidivl lock mov (bad) cmp js in and out je push dec (bad) into xchg mov inc fadd ds mov (bad) dec dec out or sahf dec mov cwtl imul negl movsl jmp (bad) mov jle pop xor and xchg xor or dec push pop sbb (bad) fsubs in cld mov push movsl iret scas pop dec movsl out scas add inc arpl jmp xor out xchg das cld cld test (bad) sbb push mov push mov int3 xchg mov test sbb enter iret sbb cli rcl sahf sub das sbb test xor fs pop fwait xchg jl sbb call (bad) push xchg leave jnp cmp inc xor push adc or aam insb push push or mov or (bad) out das das pop jb inc jo push inc pop ja inc adc pushf addr16 mov xchg mov pop insl pop cmp add cs jl inc stc gs js (bad) cld jp fdiv cwtl pop mov xor ljmp sub arpl xchg es ret xor (bad) adc xchg push popa lods xchg repnz adc das aam add xchg mov fcoms or cmp insl arpl out call xor enter sbb orb outsl lods ret jo je (bad) dec xor push mov stc (bad) pop jae xchg pop jl pop push add insb pop sub daa pop and in mov mov push popa mov test cmp enter (bad) mov inc mov mov fsts mov ds xchg fsubr das dec and pop push pop outsb cmp jne push lock jmp inc inc mov popa loopne aam cltd fwait push fild fnstenv fwait std ret imul jecxz mov adc test mov sub dec or inc push lcall pop jecxz add adc out loop pop loope xor lods pop mov sti push mov je (bad) mov jp in popf or adc jne orl (bad) cwtl std xor in mov sub cmp and mov dec repz or xchg push push lcall jp repz lock and or pop jae nop sbb inc ret sbb cmp mov inc in (bad) stc fisttpll insb out push inc bound gs popf mov enter dec jp nop or in xchg lods (bad) jbe lcall jnp mov aad adc in repz je loope shrl push inc or inc fcoml negl jp pushf pop jecxz xchg arpl pop les hlt cli mov ds xlat xchg std xchg mov cmp lds mov adc inc mov fdivrl rcrb popf pusha in push pop rcrb jmp imul add (bad) dec mov sbb sub rorl mov xchg add imul insb fcmovbe and push call data16 pop push fcomp divl aam dec int jle mov jbe ficomp lods mov (bad) fnstenv lcall inc out inc lods sub jl pop and enter js inc adc pop fidivr daa cmovl sbb faddl mov fwait (bad) lods test pop add mov push xchg es add pop in inc mov push add mov cmp mov xor cmp lds imul sbb rcrb jp mov pushf aad inc push adc lea (bad) mov inc ja fucomip loopne dec sbb fsts sub inc jae icebp sbbb pop lds cmp pop das rorb add dec (bad) mov pop or sub (bad) push jecxz and rcrb and inc mov repnz adc push out int3 dec iret or popf dec jge jne roll push jae inc cmp sub dec sub inc and mov adc es cli (bad) lcall xchg push int shll nop out lahf stc sub mov inc out inc out push jbe test sbb push mov push insb es xchg pop jns inc cwtl mov mov dec pand push cmp mov add pushf fmul sbb sub (bad) shlb cld cmp int movsb pop and sub push in sbb adc push in aad push xor push (bad) mov and std push in repnz (bad) jecxz dec dec sub in dec sub aaa shr mov rcll ret add adc adcl out dec add mov xchg sbb rorl xchg xchg or loope outsl dec dec inc clc mov jnp ss sub bound pop or and bnd cltd sub push leave jb push incl jae mov push ret into int xchg add sub pop leave out stc fnstcw sbb out dec lcall loopne insl rolb push inc popl and mov and fdiv sbb out sub mov cmp repz ds cmp lret mov dec mov jle iret clc iret outsl sbb mov lea (bad) repz or adc fs inc or ficom pop cmc ljmp (bad) jbe dec (bad) in mov test ret inc dec data16 or cmc call cs cmpsb xor andb push sarb inc sbb out cwtl dec lret and jp or push divl add sbb pop mov xor sar dec push pop outsb pop mov movsb adc nop push js push sbb cmc lods push sbb mov ljmp cmp out dec rcll stc xor push int3 adc fwait cmpb cmp xor imul icebp pop mov mov (bad) xchg pushf xchg xchg mov xor das lods sbb mov add jmp adc push dec adc outsl xchg bound lret daa cltd cld mov mov nop pop adc gs xchg es scas scas paddusb cmp ret xor jecxz popa fisttpl sub in push imul mov xor lahf fwait mov mov push sbb stc mov mov in add popa sbb mov cmp cwtl pop or sbb adc mov cmc sbb push insb arpl pop ss cmpsl or (bad) cmp and push dec lret sbb into pop jecxz sbb rcll mov mov mov xor add xor popa pop mov jbe jle stos in mov mov dec aas scas hlt in sub cltd sub fs je jle aaa xchg cmpsb lea pop push cmc int3 jo mov push imul pushf fisttpl mov dec aaa push scas push cmp dec cmp push lahf popa rcll sbb or iret imul pop dec mov mov mov mov popa inc xor xchg fsubrl subl dec pop aas jo xor movswl push int jbe push in shrb pop mov dec adc pop sbb push mov fcomps inc cli inc mov leave and mov jmp aaa xor in arpl daa adc inc lret add dec popf dec daa dec push jle jns mov push lcall fmul jne out lea sub in dec sub pop mov sbb (bad) imul mov cmpsl mov cmp mov mov imul jl cmp (bad) lea sbb or (bad) jg pop cmp scas mov lret pushf xchg sbb xchg push jne outsl sub in sub stc (bad) icebp and inc fadds cmpsb loop fwait test loope or jle,pt dec lcall popf mov push imul mov repz lahf pushf out insb pop outsl cmp mov ds arpl jp or jne and out or mov mov popa sahf add clc xor arpl lahf mov (bad) in or stc adc dec xchg adc xor (bad) cmp imul adc out mov xchg add jns and adc insb pop pop xor call scas into ret adc fistpl rorl push leave dec (bad) xchg dec mov cs dec xlat cmp (bad) int jg sbb dec fsub push das sub pop dec xor rol inc add lea cmpl inc and sahf pop fnstsw inc push inc out test mov push repnz jmp fsubs xchg test push mov and jb mov xchg sahf pop adc stc movsb jo stos mov jmp ficomp mov ja jle add pop sub xchg mov mov sbb sbb in cwtl sahf cwtl push add and sub ret mov pop std nop negw sar cmp cli push inc push push jp push data16 loop test mov mov lahf lret hlt sbb or cwtl mov sub or jae adcl sub push icebp nop cmp mov cmpsl cs push (bad) cmc in or ss xor xor push pop push cmp fldt cli mov mov movsl dec xchg jo push dec pop es push or dec mov sahf addr16 xchg fwait test push ret and and arpl sub icebp movsb adcl pop scas cmp nop dec out rcll scas mov cli out pop xchg inc sbb or out mov xchg jnp sbb aaa jge pop imul mov nop inc dec xlat out les loopne pop arpl sub frstor push arpl repnz xor test js pop dec jno in inc xchg and add inc ret push rcrl jp sub and nop les xchg stos adc shrl sub daa dec jge test push push add jb or adc cmp xor adc cmp aam lods lods or mov das aam lahf inc cmpsl jg or (bad) add add (bad) push dec out sub jne out stos xor lea mov jb lret out cmp mov repnz dec aam adc xorb addr16 lret stos into es adc in scas dec add dec push iret xchg push (bad) cmp adc loope dec rcll push rcrb (bad) int int mov pop and (bad) fildl cltd add es aaa push outsl out aad fidivrl es xchg cld pop shlb adc sti inc sbb sbbb pop mov movsb or (bad) (bad) dec shrl and xchg imul or xchg mov cmp (bad) xchg mov fimul (bad) insb sti dec and movsl mov testb mov cmp sub cld (bad) jl gs out dec data16 or and dec pop xchg (bad) out lds and in mov dec lods pop sub add sub sub ds lods pop or lahf xorl (bad) jns imul push ret jo push cmpsb (bad) mov pop mov push add mov test and stos dec (bad) jb jae out in mov xchg mov pop movsb dec pop and jns add aaa popa cmp mov pop les dec fwait pusha jo mov sbb mov in xchg fstpl data16 mov loopne sbb push into mov (bad) xor icebp fdivr clc cmp xchg stc lahf leave ljmp adc inc inc jmp sbb sbb pop in mov cmp adc lahf and sbb test sbb das xor push data16 push mov daa push mov inc pop xchg faddl loop sti sbb mov mov insl jecxz mov pushw (bad) fstpl inc dec inc add sbb fsubrl and mov pusha enter (bad) bnd das inc (bad) inc pushf or cltd push xor fcomip mov fnsave xchg cld lcall pop out pop dec add notl ret cmp cs push fisubl adc mov sar (bad) loopne pop jne xor xor xor mov jg xchg dec mov lret jae lods push dec cmpsl outsb nop pushf in sub mov mov xor outsb testb lret mov aad into stc fidivr stc and add popa jbe cmpsb sbb cmp mov sub imull lcall movsl sbb popf in pop idivl pop lahf or sub xchg cmp jge fdivrl sub mov cmp outsb test test dec jecxz cmp sbb adc stos dec cltd jb (bad) bound adc movsl mov sbb ljmp add cmp loope and xchg call mov in mov fildll jp loope and or pop test xor sbb inc adc daa inc add mov movsl std cmpsb lret lds sahf fisttpll push loopne pop test jle xor dec (bad) loopne arpl in js jl mov sbb jecxz hlt fs call jg jo cmp call test in loope pop int sbb std repz add fisttp imul sti mov (bad) or pop add sbb mov fs mov inc adc jmp orl mov sub sbb clc xor jle mov push adc je lcall repnz adc cmp adc jmp mov push mov mov fwait push xchg xchg jb mov jg dec jp and adc loop loop pop push jae imul andb (bad) insl mov ror call dec xchg jmp popf aad int stos or ret outsl push out mov int lahf lock add (bad) lds movsb mov dec fwait jecxz clc into mov sub push xchg jae push imul adc sahf jbe push push cmp sti lret dec scas jne ret pop mov lahf jne sub lahf adc cwtl cmp (bad) lcall jbe pusha mov sbb jle mov dec rcrb xchg mov fisttp xchg xchg add pop mov xor jnp out nop add arpl dec into xor push repz ja fwait and es cmpsl jl mov lods xchg test add jp jle (bad) stos mov mov out (bad) leave mov mov jno xchg test or add aad adc dec or push mov cli mov push mov mov inc xor pop xor andl cmp lcall insb sbb pop ret (bad) mov xor std loope sbb mov dec cmp movsb jnp enter and ss xchg mov sbb int cmpsb xchg loop lea sub out lods outsb test test mov addr16 xchg push aam inc jecxz add jmp and dec mov iret inc sbb fdivr pop test jp outsl pop je xor inc or inc push nop jo ret mov push push inc sub jecxz iret out (bad) popf dec jl nop test bound repz je jo mov loopne lcall mov xchg dec fsubrl lock cs gs xchg movsl xor xchg xchg xlat push pop stos fist mov mov into fstl in testb std loop and mov out lahf sbb cmp adc ds mov cs push dec cs push cltd inc repz shlb sub or or xchg cwtl jnp insb popf stc push inc and dec mov jecxz mov (bad) pushf pop stc add pop jmp aam fistp in push data16 cs pop movsb dec mov inc cli xchg mov shr jp ficompl mov mov xor mov fstpl subb mov std inc or pusha mov xchg out push in dec mov (bad) dec cld push add insl sub out xor add (bad) cmp push popa mov xchg pop inc iret mov int3 xchg out aad lret jecxz jp mov dec mov cmp add adc mov es mov sbb out sub ja in stos popl push xchg jno (bad) cmp jecxz push adc pushf xchg stos cmp data16 lods lahf mov xor leave and xchg shlb pop push into inc je fisub add push adc xchg loop add xor jle and mov mov lret cmc (bad) xchg fadds mov shrb lahf jne loope inc or mov test inc adc or mov insl aas and ljmp (bad) mov pop and cmpsb fwait mov sbb iret mov mov das add sar xchg mov pop iret hlt sti dec (bad) mov scas xor xchg das cmp mov push jl mov outsl mov sbb sarb fldt fs pop popf dec scas jl stos das fld mov js mov push das gs dec gs cwtl xchg sub fsts cmp mov in or xchg call mov dec ret push es push push icebp jnp mov xchg outsb sbb mov xchg repnz jg mov cmp ret adc pop mov int add adc aaa dec push xchg dec clc dec pusha les xchg ds mov enter sahf jnp adc cmp insl and push xchg push xchg push test lret clc adc mov into sbb sbb loop jp dec xor fisttp loop out (bad) shl adc int imul mov out pop xchg push inc cli inc mov sbb cwtl mov jle mov and cmpsl dec mov xchg sub mov jp fs cli inc xchg inc (bad) sbb jno dec std mov mov xchg jmp adcb add ss out ja adc cmp push push pushf xchg push leave out sti xchg (bad) icebp (bad) xor add or scas jno dec jb ss inc inc sub insl mov shrl ret pushf fstl ret dec mov dec outsb xlat repz mov aad hlt sbb ret testl add cmp or movsb mulb xor pop pop jle push in imul (bad) dec xchg cmp mov pop test sbb push xlat mov pop mov xchg jge lret jmp sbb jbe dec sbb ds jge or lock (bad) xor loopne sub int sahf (bad) fstl inc jbe xchg dec lea and push mov ja rcr fs sub fwait icebp rolb jg jl repz bound jge mov or nop xchg cwtl fiaddl adcb push dec test notl outsl mov testb and arpl (bad) movsl mov stos mov mov push shrb dec cs loopne cmp stos sub test adc dec mov mov add clc rcll inc push movsl xor pop cmp sub push gs and or popf mov push xacquire fbld orb adc into push incl dec xchg mov cs dec loopne jmp fisttpll jnp movsl xchg mov lea pop int3 imul cwtl ret (bad) aad xor outsl mov sbb xchg mov add mov inc jle jmp or mov outsl ss xchg test fdivrl adc cmpl daa int3 add sbb mov mov fwait mov dec sbb ja mov fnop jl push and mov hlt idiv ljmp sahf cli and adc imulb and pushf jnp sbb cld push inc add ret leave aam lret adc jnp out into mov dec and pop sbb push adc enter ret lcall test test dec mov pop (bad) mov xchg xchg pushf push mov arpl es das sub xor into lods sbb mov push dec aam mov clc fstpt push jb sti sbb mov addr16 imull xchg adc cmpsb dec sti ljmp mov enter pushf jmp jge frstor in pop lret adc and cltd mov mov ret arpl xor popf lods and push adc pop xchg leave lret xor jmp mov mov rol xor leave and push push les out mov mov ret in (bad) jmp pop test fcomi or pop jge add cli not push js jnp loop push test xchg mov jl sbb fldt mov xchg dec mov cmp lret xor outsl mov or repz cmp aas fwait sub imul fcoms push or mov cmpsb cltd adc aas gs cltd pop orb idivl mov mov jne jle pusha stc xchg inc mov movsl imulb fstpt sub add jecxz pushf jne,pn leave jbe ret rclb rorb mov xchg xchg or lahf outsl (bad) cs xorl call test push gs inc jno jo jae xor imul iret or sbb sbb imul push imul insb cmpsl pop in movl or test cltd push aas and mov adc pop imul popa aas mov mov sbbb lcall cld push aaa cmp pop push test leave cmp jg dec testl flds call jae dec xor (bad) mov mov and xor call hlt xchg or xor lret mov cmp imul push xor (bad) mov mov ja cmp mov mov ret pushf roll arpl mov pop cs mov add or mov push mov stos ss in pop mov cwtl and sub and lcall push es (bad) dec mov fsubrs adc fidivr sbb mov mov imul stos dec dec insl mov xchg lcall imul fildll pop sub test in or testb outsb push std nop leave into push rcll push add fnstenv lods mulb test inc clc es mov push ds lods xchg (bad) mov mov xchg orb sub jg,pn adc adc add cli xor adc mov (bad) ja jmp push xor gs xchg (bad) or aaa xorb repz (bad) dec call rolb sbb rcr xchg push clc jmp mov xor jno mov clc xchg dec sub sbb out inc mov jo dec adc xchg jns jo dec dec hlt test stc sub inc sbb jo (bad) clc jo faddl pop dec mov xchg pop lock out and bound getsec lret mov mov and call test or imul outsl jl mov mov aad dec loope test test pop jns sar (bad) xor sub inc imul cmp movsl idiv push pusha sbb int andl pop (bad) ss lea mov insl lds mov dec xchg lea mov (bad) fbld inc fidivrl aas xlat inc dec lods jno add jnp inc je dec popf push inc mov stos fcomp jno or push adc (bad) sbb lock jbe rorl decb fidivl repz fidivr lods lret xchg xchg push sbb mov mov mov push push inc movsb sub orl sbb jg cwtl sti xchg mov test xor ljmp mov leave inc subl jae adc push enter cmp sub or (bad) int std mov cwtl mov pop mov imul mov mov cmp sub jnp adc mov xchg andl sub aas mov lock outsb dec pop sbb stc fmull loope fisubl iret stc push ljmp lret xchg insl into dec mov mov or jl loopne push jbe scas sbb loope sbb mov scas or pop scas mov jbe out jge aas out xor into push cmpsl ds inc cltd addr16 mov adc adc adc and in adc aad aas mov test push sahf push sbb loopne popa push pop cld clc dec (bad) mulb (bad) lods add sub movsb pushf frstpm(287 xchg inc inc aaa push dec loop sbb lods mov stc movsl mov push mov mov mov xchg fsubs cwtl sbb nop faddl adcb rorb xchg mov (bad) std stos dec mov mov xchg mov jbe sub movsl xchg sbb cmp inc inc pop dec mov lcall dec push jmp aaa jne lcall movsl aam and adc cmpsl adc test jnp xchg fldcw in repz push sbb sub outsb mov and lahf inc sub jno popl movb mov mov test aas adc push stos repnz ret xchg jmp outsb lret lcall test daa mov sti jnp add fwait scas repnz inc repz iret (bad) stc xchg and pop jg inc add iret mov popa subb les leave mov decl pop xchg xchg dec push adc iret ja xor push sbb repnz add test movsl clc cmp dec (bad) (bad) push or adc xchg sbb std inc mov push jmp das sub ret repz (bad) lock ret cmp push mov xlat jns pop leave subl xor movsb xor stc sbb push and out push out iret jle jmp mov adc xor (bad) dec loope push xchg gs pushf sti lea dec lods push mov sbb daa pop lds pop arpl cmpb or addr16 sarb cmpsb lahf adc js mov add icebp pop or mov jp sbb pop jbe popl jmp push sub ja push mov sub mov fadds sub imul ss mov movsl popf test (bad) push and idiv dec cltd mov aam dec push xor sub data16 and xor mov xchg test fcmove (bad) pop aad xchg adc outsb xchg aas (bad) mov int3 jns cmp pop shll sbb xchg sbb xchg lods sub clc and scas fist add mulb orl (bad) dec lods mov (bad) aad and xor movsl pmulhuw jns mov orl mov nop mov and inc dec push idivl inc cli dec xchg lret in int3 loopne gs sub das cmp in outsl adc adc jge xchg in scas cmc out adc ror aas pushf push insb cmpsb sbb stc es jb and js (bad) testl xchg jmp and xor arpl mov pop testb sub enter or dec (bad) in jge dec cmp mov sbb add nop add mov das pop mov (bad) mov (bad) dec cmp push clc push jbe (bad) enter addr16 (bad) and push xor lcall out scas xchg mov fnstcw push ret adc (bad) outsl xchg mov imul fs leave test and addr16 xorl or dec loopne add iret inc call jp push jmp call loope int ja dec push pop push pop pop mov cmpsl int3 jbe hlt pop outsl sub jl and js mov ret xchg add dec das movsb xor js jns sub mov cmpsl pusha push xchg test mov mov add mov mov mov jle stos pop stos mov mov aad mov dec xor fs outsl out pop (bad) out repz sbb iret mov sbb xchg push in fisubr loopne sub jmp mov stos push rcrl xor push subl lahf outsl sub popa xchg arpl cmp pop pop pop roll sbb fnop aam pop and js (bad) js jle dec xor jno push shll mov js movsl in ret ret jnp inc mov sbb sub imul pop orl in push pop sarb dec scas daa inc cmpsl inc push arpl addr16 (bad) out sub pop and imul jp inc stos test mov cmp call or or enter stos dec jge out mov ret fimull addr16 pop andl mov or mov repnz test push (bad) out xor (bad) (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp call add aas inc pop fcomi cs jbe add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) bound adc sbb mov fdivs (bad) sbb jl cmp std lds add jmp enter cmpsb orl pop sub mov jno mov and sbb push sbb xchg out test and cmpsl xchg cmc cmc rclb in int pop daa add jmp aam inc sbb nop pop ficoml in mov lea out or pop nop add jbe pop jno sub lock insl cmp xchg push push sub mov cmp out xor push push xchg xor cli sbb mov pop rcrb leave ljmp mov inc nop aad adc add loopnew push jmp imulb sbb insl sub push xchg ljmp jo stc sbb xchg sub add jno and aaa mov cwtl in test mov mov sbb xor inc xchg jbe pop bound dec pop push xchg loop out (bad) loope cmp adc into mov insb dec jbe pop mov ja outsl dec jne mov pushf lods int dec fbstp xchg fucomi jmp scas aad jae pop sbb xor cmp test or push fcmovbe jb cmp in jae add js and inc fcmove inc pop cwtl imul push push movsl or out inc pop dec pop dec cli and les jmp imul arpl out and leave dec mov adc rolb stos into cmpsl xor mov addr16 xchg dec aad int3 lods mov add repz sub or pop adc fcoms xchg cli fsubs int stos pop push jle daa daa scas push scas mov adc push ds push adc jno (bad) pop data16 mov enter and and nop (bad) xlat iret jnp sub pop jns adc out outsb fldenv or js imul add jmp sub int3 jmp repnz sbb mov fisubrl movsb rcrb test (bad) std cmp dec mov xlat loop enter int or jns pop les sbb inc mov sub jns repz or je adc scas (bad) lret ljmp sahf xlat (bad) popa add jno outsl sbb outsl dec rclb repz mov pop mov sub mov dec mov pop daa sub rcrb out sub fwait ret and rol addb (bad) xor pop dec adc in or mov insl cmc cmp mov ja cmp mov mov test push fsubrp inc xchg lds in rcll mov fs adc test push adc in add mov or sbb outsb and push mov and (bad) je sbb data16 iret xor and js ret test sub je in mov push aaa popa lret lcall push cmp and jae fsubrs in dec jae mov lcall sub mov ret lods add sbb pop sbb or xor pop push xor std or loopne out sub test movsl and test cmc and jnp (bad) pusha stos adc xchg sbb loopne mov in dec mov in push in xchg int pop aam popa faddp mov jb loopne pop pusha push frstor dec push mov neg sub sti outsb or (bad) cli or fs pop sbb pop js sbb jmp (bad) jbe pop mov shr ja add and xchg push or lods inc repnz mov and and mov std sbb ss sub and sub pop sub cs clc popf jnp xchg addr16 xor ffreep arpl mov or movsb push (bad) cmp outsb fsts xlat rcll sahf outsb fldl ficompl lea rol popf jnp testl xchg xchg dec inc xor in xchg mov inc push out rcrb sti or pop int outsb adc repz mov call adc pop push (bad) js xchg mov inc jmp mov stos mov out roll pop sub adc pop xor jge lret scas out movsl jg cltd bound clc int3 addl or and out push jne or push ja (bad) xchg mov sub jle mov ljmp dec div std (bad) in aaa lock lds push xor dec mov jb mov pop inc (bad) mov xor adc (bad) mov jns in ret pop test cmp mov jge jl negb js fldt jl je test into out int3 dec popf jno popa dec xchg xchg push and cld gs cwtl pop stos add scas mov mov hlt aas xchg inc mov xor ret and out dec lea pop pop movsb or mov sub pop and test fsubrl sahf in bound adc out mov test mov jo ds push dec dec repz mov leave les cmp adc dec jecxz and xor aam push or lods or xchg lcall dec mov pop fdivp mov mov shll leave mov call push xchg sarb add pop and mov stos xchg jne add mov shrb dec pop mov pushl dec je insl dec shlb pop daa mov in inc aad sbb sar call leave jge add insb icebp cmp cld xchg lret nopl and (bad) (bad) and insl pop jg xchg inc dec add out leave fdivr movsl fnop cmp sar mov les out cmpsb adc pusha and mov outsl push frstor mov lods movsl lock sahf sub outsl pusha out mov sbb xchg pop jp sub in mov fidiv pop cmp ds or sub in mov sbb int push (bad) mov jge or add adc add push es add xor das xchg andl push push inc stc das negl ja int adc dec mov lds lods lods mov in add enter popf cmp jbe inc das movsl out pop cmp popa cmp fisub popf adc movsb jbe xor and inc add loop cmp mov push jl imul lahf pop dec or int lcall push fdivs dec cwtl jns pushf loopne,pt xchg movsl popa in xchg lea sbb movsb add aaa (bad) mov mov dec dec adc ficoml cmp sbb popf mov outsl leave movsl out cmp add mov pushl cmp int3 sub jnp xchg add xor sbb fldcw aad and aas push push cli fsubl mov pshufw inc rorb addr16 lock or fnsave jmp push push jns movsb jnp jae jbe js inc pop shrl jb mov jne pop sub shrb mov xchg ss lea pusha pop add push xchg and pop push lock jmp roll cmp pushf cwtl fnsave popa outsb cmp jnp fmul (bad) xchg popf jnp jb xchg fldl stos cmpsl stos push ljmp dec mov dec jne jmp leave loop push jl jns sbb dec clc (bad) mov jge mov dec adc sahf jbe mov sub xor jb dec mov fxch mov cmp repnz mov push fistp mov dec ja lea jmp loope sti dec mov push pop mov dec pop clc rol popa leave and outsb insl xchg and mov adc insb mov jmp (bad) in cltd push mov hlt fwait sub cwtl mov or mov gs outsl jo popa popf push int3 mov iret inc mov pop les data16 iret es stos or (bad) xor test (bad) mov jp jge sbb daa lret pop push sub mov adc fidivrl pop dec (bad) mov inc aaa jnp sub jne jo push mov hlt xor je dec push jle cmp cmp fwait out sub xor xor dec mov xchg adc cmp cmpxchg es arpl call push ja and outsl xchg popa mov out dec pop (bad) fwait out jmp out test test mov mov and mulb and icebp lock xchg in mov pop das shl mov fistpl xor fidivl mov cs js xchg mov push fbld jmp dec clc cmc (bad) inc add sbb sti hlt xchg sbbl push (bad) je cwtl sub lcall xor cmpsl bound mov jns daa outsl mov (bad) sbb lods and adc cmpb fcmovbe arpl (bad) mov pop fsubr int xchg dec (bad) mov mov fld lds mov mov scas sti or test sub jns andl js pop push push dec sarl adc jmp ffree test jb push add dec ljmp sub sti ficoml outsl pop adc scas mov sbb outsl sarb (bad) into dec gs pop movb adc out or dec pop test sbb js loop scas subl leave shld sub imul push movsl dec pop sbbb loope mov adc sub add es loope and lock cs cmp (bad) cmpsb jb lods pop daa test add popa pop mov inc sbb sahf ljmp jne mov push outsl arpl push (bad) cmc (bad) loopne (bad) mov pop sub and mov popa loope (bad) stos jns jae mov test ret xchg idivl xchg push subl jp mov rcll sarl (bad) jp xchg sarl lods push fwait push jge add pop bound mov imul sbb dec or sbb fistpl movsb fsts movsl or xor out push lcall xor aas adc jg in test push shrl ret (bad) push (bad) movsl cmp ljmp mov in lcall push dec fwait dec testl outsl xchg mov sbb jae in wrmsr outsl cs xor sti pop sbb and and arpl fldcw lds pop adc (bad) or lea cmp stos jb adc movsb int3 (bad) repnz popa sti adc xlat loop sub in xlat adc in imul cmp or mov mov rcrl ret add fcoml push dec push stos cmp jcxz xchg xor mov fisubrl inc lea mov pop imull out mov repz int mov cs mov sbb (bad) test in and iret out popa dec dec loope cmpsb jae mov and fsubp cmpl test cmpsl sbb xor loope or fs xchg ljmp or add add lcall pop js xlat popf cld sarb inc (bad) lea rcrl fs hlt mov mov std push dec and lahf push cs fidivr pop jo rol popf stos je inc dec and xor mov arpl daa in fist sub lahf test loop out xchg xchg adc xor aam andl ret daa ja fimul jnp sub and or and ret (bad) arpl (bad) ss in iret inc mov dec and les jo rorb mov push (bad) dec test cmp cmp (bad) sub mov dec mov scas int3 fwait bound pop (bad) movsb add icebp and cwtl cmp repnz adc lret pop insl push pop pop jno lahf jbe in cmp adc dec iret mov or push ret mov push cmp imul push das inc cmp rorb mov push cmp test mov jno movsl dec ss push loope jl addr16 cmp push mov push (bad) cmp out scas enter movsl icebp push push or pop push dec sti call lods sub fistpl (bad) (bad) je jb inc enter lds xchg push xchg push dec ret repz pop (bad) adc and xchg and pusha in dec mov mov les les test inc int3 or pop mov sbb mov das hlt test or or adc and jae hlt mov scas xadd add in jle lods push mov sbb mov sbb add cmp push xchg flds outsl sbb outsl pop (bad) (bad) xor mov mov inc mov jno addb lock cmp cld inc jns pop xlat rorl addr16 je mov and mov in pop mov aad dec outsb mulb rcrb xor mov add outsl (bad) (bad) ds test repz data16 loopne pop imul lea out and movsl sbb jnp leave dec xchg jbe xchg inc cmpsl inc out jbe daa outsb in pop add and mov icebp sahf pop jns xor xchg and out dec pop xor jbe push cs (bad) std mov js or inc inc adc xor and mov test mov popa inc lret push push dec int3 fcom add push add push adcl fwait shlb xlat mov repz and sbb shlb out or push arpl test and mov xchg iret ljmp jge lahf into iret pop (bad) pop lcall pop push ret pop outsb mov (bad) imul sub pop aas pop ret mov in mov mov xchg jne mov fdivr and sbb inc ds sbb rol mov or jns pop stc out and push es jle adc xor jl mov test int3 aad movsl adc jbe notb or out sub aas cmpsl (bad) fcmove mov (bad) in testl insl jl mov rolb pushf sbb inc push popf enter (bad) sbb xchg inc mov hlt arpl mov (bad) adc jmp lcall mov mov pop in out clc bound jle inc or int data16 testb sub iret push dec add sbb lret xchg sbb mov and lahf jmp sub sub test negb push ret repz fst inc insb pop mov mov push std pop loope dec scas mov (bad) lds aam lods mov (bad) dec pop jo in sarl mov movsl mov adc sbb mov out and aad orb pop inc sbb fildl xor and (bad) loope xchg loopne aam in lea dec (bad) (bad) fsubrs aaa gs fpatan leave js jl mov dec (bad) bnd pop sub xorl fcoml inc aad cmp cmpsb jg dec out test mov lcall repnz or js int3 std adc aam cmp fmul js sti push jb repz popf pop arpl and cwtl cmp ja cmpsb rcrb cltd or insl xchg push and (bad) adc xchg (bad) or int3 sti add inc enter sub cmpsl out (bad) mov stc scas divl mov push push pop xchg pop push cmovp movsb add (bad) (bad) sbb push mov popa xorl cltd pop push fcompl scas jp sarb clc aad xor sub dec out sbb mov scas jae push mov and inc or cmpsb out cmc mov pop pop cmp mov pusha stos stc movsl mov xlat pop sarl sbb inc mov fwait and stos popa pop push inc nop (bad) imul sub mov cmpsl shr fimull and sahf xlat jo mov loope aam cmp inc arpl xor test and aas add dec sub orl xchg mov test popa xor pusha daa rolb leave fcmovu pop dec mov (bad) sbb cli and adc xchg es sarl dec aad out test daa call loop mov bound mov push push inc imul enter or jp fld add int3 aaa pop inc jbe arpl (bad) dec aam sbb das imul mov sbb clc adc insl mov cwtl mov leave cld iret mov popa dec sbb ret shlb xor adc mov dec mov (bad) (bad) movsl js cmpl add ljmp scas fbld insl jb cmp adc aam cmp or cmp cs xchg and gs push sub jmp and sub lods pop pushw lds data16 in mov insb pop jmp mov (bad) cmp inc xchg or mov test mov sub out or cwtl dec insl es or out scas idivl fcmove fiaddl dec and repnz mov jb mov or xchg mov mov sub sbb add push and xlat cmp dec adc out inc mov jae pop call les in xchg mov and add push das add mov push cli adc push inc jge rolb sahf jnp mov iret enter and mov xchg ret enter movsl idivb lea fiadd dec pop fisttpl rcr pop jnp stos inc sub jnp add or mov adc cwtl mov int3 icebp sub xor sti inc pushl pop daa mov cld push and dec push sahf loopne mov aas call push scas sarl cmpsl sub sub mov lcall ss lret mov aad sbb sbb arpl gs inc dec call push xchg fdivrl xchg (bad) dec adc mov (bad) cmp (bad) stos xchg fildll pop fdivl mov and cmp call ficompl dec pop or out mov sub movsl je inc lods mov scas cltd sub call pop xor test gs sti (bad) fidiv mov aas mov push inc jmp xchg leave nop push inc stos dec pop or cmp xchg faddl repz xchg lret inc pop loopne cmpsb adc pop pop and mov xor fbstp out push addr16 testl and push push cld adc xchg mov in inc pop xor pop or enter gs xchg ficompl in movsb negb cwtl lret in test sbb test mov test daa and lret dec add neg push fildl insl sub jae xor adc or or cmp and push push in out sbb lcall loop inc pushf fimul fsubrs shrl dec mov idiv mov mov mov mov int pop iret pop mov fidiv sub adc jp pop cwtl pop xchg movsl fwait loop roll mov jp push les pushf pop les fstpt data16 sbb fidiv or mov mov jp jnp push sbb xchg (bad) dec jecxz jmp mov adc (bad) xchg loope mov pop ret rcrb cli rcrl lcall rcrl cmp pop je ja fisubr nop dec mov xor push and xor inc xchg ret push jbe mov add mov sub pop add rcr ljmp cwtl repnz mov bound adc jno mov adc dec icebp mov push imul out and sub cmc lds in pmaddwd adc mov or popf cmp mov out out std dec mov or cli jmp push jae arpl das mov mov pop lret rclb jo push mov push cmpsb pop push shll cli mov ja lret sub sbb sub jle add jnp in or pop stos or push mov sbb push ja mov aad cmp (bad) aaa popf xchg xor gs insl (bad) bndstx adc test pop xor fcoms aas adc nop pop jmp push pop clc es cmc lret lret test pop push pushf adc dec dec xchg jns and clc std insl adc mov jle out inc js sbb aas mov mov xor lods pop add mov sti fldl2t pop fldcw mov je xor in mov pop leave xchg rorl inc mull adc xor lods fst jne pop xchg add mov cmp shlb push cmp fisttp cmp test movsl fwait dec jnp (bad) addr16 push cli and push adc mov mov pop repz add lret xchg jmp and push xchg insl ret cwtl idiv (bad) aaa sbb cld sbb ss lahf lcall inc mov (bad) mov dec pop pop scas (bad) or icebp mov aad lds sbb push lds sub test pop (bad) cmp mov dec push push mov inc sub insb lods (bad) divb ja pop adc adc mov fnstcw je daa sbb mov jg cmpsl jp (bad) xchg xor scas (bad) fcompl xchg dec mov fs scas popf jae mov (bad) (bad) adc int3 cmp int3 addr16 add mov int3 or dec mov nop sub mov mov outsb xchg loope fdivrl xor movsb mov (bad) aaa (bad) jne (bad) fsubrl out push popf mov bswap push iret cmp bound jge in cmpsl out and adc sbb cmpsb jbe dec aam (bad) sbb fistpll loop enter pop stc andb ret ljmp mov lret push neg cmc idivb mov push mov shll popf inc jns pushf mov fwait pop repnz add push enter inc stos rcrb mull outsl les vmovhps mov xor es sti loop lret mov outsl sub xchg out iret mov bound addl cltd xor dec pop add pushf movsb jbe push push aad sbb (bad) fiadd jne pop pop arpl cmp arpl jo sub fldenv ret ret jp fisubl test add mov adc test popf push cmpsb and dec vmread xor mov cmp mov and adc loop cmp clc stos iret cmp inc les xor repnz jae cmp xor lcall ljmp and add fwait (bad) mov in mov (bad) out loop clc pusha or hlt jl das into rolb cmpl cs sub aad stc xor ds fadds and fdivrs xchg pop jne gs push ljmp fwait stc and mov mov add push jno cmpsl mov push sbb (bad) xchg xor sub mov cmp lret dec hlt imul cmpsb inc jb ja jno pop xor lcall and push sub loopne aaa int or ds and pop adc leave dec sbb push inc out sbb in in cwtl mov out fsub cli pop push inc add push xchg movsb push cmpsl ja mov movsl cmp arpl or stc cwtl jne jne icebp mov jbe push repnz stos cmp shlb nop xor repnz push out scas lods xchg hlt push dec psubq rcll push notl roll pusha pop les je pop das mov leave and cli inc cmpsl bound js add out pop sarl (bad) cmp nop cmpsb jmp rorl fmulp inc gs stos push movsb neg sbb divb fcoms xchg movsb rcll ret cld mov xchg or cmp sub mov (bad) repz xchg pop pop dec dec cwtl mov dec and int lods xchg loopne es lock mov mov decb hlt scas jnp push cmpsl mov ret mov and insl imul dec repz out inc push lret scas push or mov cmc adc jb mov cmp and cmp adc addr16 xchg rorb insl sub lret push in sbb xchg cwtl sbb nop xchg scas lahf (bad) data16 jle push ret lods mov mov loopne xchg push jns imul xchg lods push mov dec mov cmp mov aaa sub sub push mov pop andl push cmpsb lods jg inc lea mov std cltd and (bad) sbb jnp movb std mov dec stc adc (bad) and out lods cwtl fstps add repnz cmp popa mov and sbb adc jno xor cmp push pop xor out out push dec push push push push adc (bad) hlt dec add popa enter xchg movsl es sbb mov adc inc scas jmp sarl les sbb test clc jecxz in xor pop jmp jge (bad) or inc sahf jb mov cli adc pop sbb andb daa stos adc aaa fldenv or (bad) push out jns loop lea test inc (bad) into dec lret out or fcmovbe adc dec push test adc stc pop or movsl dec sub lock daa mov add je nop or sti insb dec pushf arpl lahf outsb test xchg in jbe adc add inc int3 fcmove repnz pop decb or ljmp pshufw inc (bad) icebp loope (bad) bound jbe and fsubl jo test inc inc stc xorl mov jl gs lahf jmp xlat push ja sbb xchg jp fdivrp adc mov pushw in shl sbb push jge pop cwtl jnp push inc jecxz cmpsl xor or push (bad) in ss (bad) repnz lods cs add addr16 dec and insl insb xchg sub test insb sbb push sub add inc pop jo jnp xchg out sti inc enter push jle push out or jb push mov (bad) into outsb and iret cs fdivp xchg out mov hlt fnstenv minps jmp ret adcl mulb sub ja push dec push mov (bad) push xchg lods and in addr16 mov pop xor (bad) movntq out repz scas adc jne popf sub or ds and popa push adc xchg mov jp mov lock popa mov insb adc minps sti lret nop mov mov mov or inc pop ret jae xchg mov test jne mov lret cltd popf stos pop dec (bad) dec je mov imul jb cmp and xchg cmp sbb es sub push adc insb enter push xor or hlt nop in rorl cmpsb xchg xchg mov fmul aad lods outsb sbb xchg dec ret dec pop cmp in mov movsl xor adc jno jmp mov sar into gs inc ss out shr std stos or std (bad) mov xor sbb int3 inc adc call push mov bound add adc fdivl stc aam pop jnp pop sti fistl dec jbe jecxz xchg pop sub jle dec mov (bad) stos mov sahf mov sbb cmp sub xchg or icebp stos xor movsb add enter mov xchg (bad) cmc test data16 mov cmp cmp (bad) adc fsubrs mov in fsts sbb pop mov xchg push bound or dec pusha outsl pop xchg negb pop js sub sub add mov inc addr16 mov insl dec rorb lea sbb push cmpsl sub inc mov mov rclb mov rclb or xor xor lret out nop xor stos hlt std mov pushf (bad) (bad) outsl lds pop in mov xchg xchg lret rorb mov inc cmp adc dec cli pushf cmp jae aas xchg push pusha outsl mov test xchg dec jnp jmp test ja fstps mov inc cwtl (bad) ljmp call and push lods sub xchg or scas fimul pop nop pop pop and or sbb test and je test cmp and mov nop dec cltd into pop cmpsl insb add sahf jl iret push mov sbb mov adcb xchg xchg xor cmc aas dec ret sub jbe and inc insb inc mov xor (bad) sarl ficompl ret xchg lea xchg push cmovl hlt pop (bad) adc xlat outsl daa push sti repz clc jo fs lds shrb push inc jae pop (bad) pop mov pusha mov movsl dec pushf xchg repnz cltd mov push (bad) int mov mov jo adc cmp cmp mov das (bad) (bad) jmp pop mov or and fbstp lahf mov outsl inc mov jmp jge sbb cli inc mov push push dec lea jb in adc cmpsl add sub stc test imul cmp aaa jo int icebp cmp sbb in fcmovbe out pusha push cmp (bad) cwtl repz outsl pop popf sub and or and lock mov and jno jge (bad) aas and sahf sub mov adc cmpsb roll aaa enter jo cmp (bad) lock and push enter adc vcvtss2si imul mov inc mov push xlat fsubs popa sbb lods aas xchg pop popa lret inc dec cltd lcall inc push fcmovb pop adc jbe add clc lret lds mov add adc push mov lahf xchg jmp (bad) dec pop fist push fdivr or inc adc pop and addr16 cli mov test or (bad) icebp test pushf enter cli popa mov ret outsb fidiv sub rorl out cli mov adc jl or and (bad) cmc push mov sbbl ss lahf iret pop scas mov aam daa dec pop sub push lods cmp ljmp sbb test jb (bad) insb hlt pop push popf test int3 jb xchg inc movsb in adc pop repnz fsubs (bad) sub lock imul add adc pop pop les (bad) repnz rorl call movsb or xchg xlat lcall jb into ret xor mov fcmovu ret sub xor xor adc xor inc jns inc cmp jb scas loope sub and dec dec and push sbb push imul loope or fsts add jl push or adcl xor ss cltd add fnsave or xor or pop out outsl shll mov pop pop repnz push pop cmp clc sub pop sub pop out add xchg adc pop cmc out lahf pop mov adc dec inc cmpsl std xchg rcl aas mov xchg push add icebp loopne outsl mov stos daa xor in cmp sbb outsb and sub sbb stc imul cmc xchg ss inc imul cs or xchg or loopne sub sbb orb mov inc sbb pop or bound inc scas mov (bad) push push test pop aam mov rorb (bad) mulb push imul orb sbb inc das shrb fmuls push bound cmpsl jmp xchg mov test dec xor (bad) icebp fisubl xorb inc cltd mulb insb adcl adc fs fwait xchg ja mov cltd dec (bad) out sbb stos cs xchg enter subl lret add xchg mov pusha int (bad) mov mov sub imul addb xchg stc sbb adc cmpl push cld stos cmc imul sub adc jecxz xor arpl inc mov test cmp int xchg test xchg sbb xchg aas in mulb mov movsl push test lret jle push in dec ret mov inc popa cld mov push stc mov je fwait movsl cwtl lcall push outsl ljmp daa loop xor cmp fucomp arpl pop inc pusha aam sub arpl mov jmp or inc add enter and ret rorl push mov pop jae ljmp (bad) ficoml fcmovu xorl add adc mov icebp xchg cli ljmp sbb hlt fwait pop xor mov (bad) mov inc inc sbb mov and shrl pop jmp pop mov mov js push xor stos js lds jle sbb pop pop mov inc js pop lds test loop into inc mov stos ljmp aaa mov pop dec dec movsb lea jnp pushf push loope xchg je xchg mov pop or sub lods in fs int3 and jmp dec aaa xchg aas add fisubl cld imul ja add pop mov fldenv jne add aaa push addr16 mov imul (bad) bound xor mov mov xchg lods insb or and and mov jns faddl lock (bad) mov adc idivb movsl jl pusha in pop xchg add sbb mov stc es xchg (bad) dec ljmp test pop cmc clc imul and jne outsb outsl pop jo sub and sub (bad) rcrl pop icebp and adcl loopne push cmp mov pop daa mov gs dec push sbb fwait es into es jb bound fsub imul (bad) (bad) pop lea leave cmpsb mov xor adc mov movsb sbb jl imul pop mov jecxz sub adc outsb arpl and jnp mov shrl mov cmp popf and xor lfs popf pop mov stos sbb jo mov fmul cld daa xor js lret jbe adc or jns jp repz push and dec mov pop test outsb lock imul lret mov sub cmpsb xor fimull shrb mov push in jnp rolb adc test (bad) pop daa cmp mov sarl out icebp cmc inc cmp stos inc inc std sbbl mull dec lret fildll fildl push outsl fwait test aad scas jb mov inc mov xor or push clc mov (bad) fcmovnb aad adc outsl jns xchg lock mov (bad) xchg pop in mov (bad) ds das jl add inc add (bad) lahf jmp fsts rcll sbb out and adc loop and mov push (bad) or fs push jmp cmp add add in pusha add sub pusha dec push icebp ret push es in push (bad) jno sub stos sbb aaa sbb test inc pusha mov push push ret mov push repnz adc or (bad) ljmp pop aam jg outsb sub mov lods popf into and aaa ds adc mov test mov and insl fdivs sbb negb mov mov arpl mov adc outsb arpl sti mov push into push inc mov addl mov dec sbb and sbb shlb pop jl sub mov fcmove dec call insl and sbb (bad) cmp add and sbb fisttpll mov add ljmpw adc xor xchg sub stc leave mov ja addr16 into adc (bad) add cmp pop (bad) test cmp imul subb jne (bad) popf xlat xchg rol push or jnp adc daa inc faddl push jb ss outsb imul bswap test push inc sbb in mov fdivrs xchg adc bound push jge xchg push or sti cmpl mov mov and adc gs sub dec cltd aas pop xchg jne loopne dec mov inc rorb cmp movsl adc dec mov (bad) cmp mov inc mov pop call data16 jne int inc cmp jne adc cld ret push xchg push or aas push add test mov dec inc stc lds sbb pop test or push hlt mov movsl mov sahf sub push fisubr and pop fdivr push les (bad) mov push pop jbe loopne fldt cli mov pop arpl in sub adc lods cltd fcompl mov fsubs int3 push je or (bad) orl sub xchg lds ja push and rcll sbb jecxz in push imul fneni(8087 push adc sub insl mov div push fwait or add push mov add push dec mov loopne ljmp jmp test lock repz pop mov push add imul or cwtl mov rolb test sbb ret subl (bad) negl mov cmp ficoml ds dec loop dec int3 int3 add sub push jle inc out push or push jo fisttp and pop out pop nop mov push push sub push pop icebp dec imul sahf inc adc inc test movsl loope pushf sub pop jg sub jecxz jmp jecxz ljmp dec and outsb cmp repz daa out and iret sbb mov test dec jmp icebp mov (bad) mov jns push repz mov nop outsl dec test cld fwait dec insl mov fwait popl sbb cmp dec cld cmc dec jno test loopne mov arpl jecxz xchg scas hlt loop fcmovne mov mov push insl adcl mov xchg arpl jmp push pop std (bad) ds es mov xlat dec push adc sahf (bad) fneni(8087 (bad) scas add cld mov mov or pop movsl pxor vpaddq mov mov (bad) or and icebp rolb bound (bad) pop les xchg ret test sbb push je fisttp or mov push xor stos ret mov xchg pop loope jne or and xchg pop ja cmc pushf mov test es (bad) ds adc push das std sti ja or jmp jno xchg jp jmp and aas mov test ret shll sub daa test out dec imul mov clc insb fisttpl sti pushf mov and in jo outsb sub cli inc or lret subl out xor (bad) pop jecxz add sub pop mov xor jp xchg jae cmp shl lahf outsl popa aad inc aad imul mov xor mov rcrl insl repz cmp inc lods cs inc movsl test out or fcompl xor (bad) (bad) iret add (bad) jno push fxch lods push out bound mov cmp jae add push mov lcall push bound ljmp imul inc push ss mov popa adcb cld or loop pushf out cli xchg out fbstp ficomp imul mov cmp cmc sub push cs and (bad) ror mov push mov ret cmp push aas mov cmp dec cmp dec ljmp xchg fldl shlb xchg jae outsl jl jle cmp or mov cmp nop jmp jb nop xor sbb add jne or sahf lret adc mov (bad) ss sbb les (bad) dec scas cs cmp loopne lret mov fs sarb sub fs pop rorl (bad) mov (bad) mov int3 dec dec lret cmc mov jl push or fisubr fisub loopne inc fcomip rcll imul stos pop pop jne fisttp arpl popa imul cmp ss (bad) mov inc xchg push sbb push push aam scas add mov sub sti iret cli ds cmpsl sbb popf fcoms out xor bound jg inc dec cli and aaa stos inc out pop jl imul or adc add dec cltd sbb cmpsb repnz stos pusha add inc lods adc push sbb fnstsw mov sti jg adc or push imul xchg inc loopne sbb jns mov roll cmpsl (bad) xchg imul push xchg popa dec or xchg dec mov or dec cld jno leave adc insl fmul xor or (bad) aaa add stos fidivrl aaa test xor xor xor push or pop shl cmp sbb push lods pop push js in mov cmpl (bad) lods leave lds (bad) mov ror inc cmpsl dec rol ffreep ds cwtl out mov and adc jne fs nop std repz out or std adc ja sbb add xor sahf cmp pushf jno and xchg xor jno push ds jge add cmpsl sub stos add fisttpll ljmp (bad) pop into cmp repnz movsb aad (bad) mov dec dec imul js xchg xchg and cmp dec int dec popf pop (bad) es test mov lahf scas (bad) xor cmp test mov sub (bad) iret int mov xor sub mov add sub mov ffree clc mov mov ss or sarl in insl incb movsl inc dec orl ljmp xchg shrl rolb ss into sti push sub loopne,pt lods xchg sbb fwait jle gs pop fnstenv cmc push into lock test add repnz push mov (bad) pop xchg (bad) xchg cmp fnstcw mov imul stos mov add loope adc sbb mov loop in mov ret xor cli mov insl mov fldl out mov imul mulb mov add test sbb (bad) lcall sub pop sti push dec lea ds sbb fbld int3 shlb sub mov jbe popf and imul int3 sub sbb fadds (bad) pop pop sbb mov pop sbb negl arpl mov jmp loop shr xchg jecxz jns jb ret sub xor adc adc aad cs sbb cs aaa (bad) cs mov (bad) xchg xor inc jmp jge lods or dec int or mov dec xor add rep std lret lahf int3 and pop jo (bad) fistp jb xchg and or fld xchg inc jb inc adc xchg cmc push fisttp fnstsw rclb sbb sbb jmp imul into call xlat push gs (bad) lock mov repnz insb mov cmpsb push cmp test js insb icebp insl push inc lea test mov (bad) rep in out lret jge mov sbb inc jecxz cmp lret sub cmpsl in xor movl insb and cmpb jle scas pop pop xor mov cmp shll out cmp test mov jne and pop xor (bad) jnp cmp loop int3 jg je iret pop mov popa fidiv dec rcl push mov jp out fstpt fld xor mov push lock and adc sub mov out sbb and out mov jno mov movsb (bad) ret scas cmpsb inc add or sbb and (bad) iret dec cli or add outsl or sbb sbb sbb rclb push xchg and inc pop mov push dec inc and icebp into mov fs jbe jns inc pop lods xor out sarl daa fld fwait addr16 or test lret inc jnp aaa fdiv cmp out sti pop test dec psubb je loopne cs cmp lock inc cmp div xchg (bad) (bad) jbe js xor push (bad) int xchg (bad) mov mov lret xchg mov clts into lahf dec daa xchg scas test push inc gs xor test push repnz pop push push stos and leave inc fistl push add xor jmp or js fstl int xchg jae stos addr16 xchg sub fldcw add ljmp das push push ss int3 push aam mov mov mov mov sahf iret loopne sbb add fdivrl mov pop pop add test dec bound xor inc inc cmpsl xor insb (bad) inc jno xchg sarb dec rcrl cmp sbb inc xor or and rcr ja fdivl push sbb and (bad) fstp movsl xchg fsubrl sti subb loope add loope push je push in mov mov and add outsb aas adcl lods lahf (bad) mov mov stos or and aad jmp add test aas cmp sub cmp mov adc dec jno lahf (bad) rcrb stos movsl jg lret dec mov pop loop push std test add adc pop iret sbb (bad) dec dec hlt outsb in jecxz or pop adc sahf aas std mov mov xchg int sbb lret jbe mov lods outsb jns jge adc mov in cmp xchg inc js cmp sti pop in aas arpl in (bad) movsb cmp iret cli jp stc es insl xlat pop js mov in sti test pusha jns (bad) xor mov jnp in inc imul or and sub inc imul inc jo (bad) ja aaa shlb mov lahf enter call cld cwtl push dec in arpl sti icebp or sbb (bad) pop sbb xlat outsb rcl xchg cmc jmp nop fldenv xchg and push xchg jmp add leave mov iret mov outsb push adc xchg jle mov mov jl lcall shr sbb das jge dec imul imulb push mov es enter aam push setbe mov jecxz fsubrl jnp sahf hlt push push mov xchg mov mov imul sbb inc jge dec int pop adc mov or inc pop cmovns xchg lods sub add cli cmp loopne mov pop adcl xchg call push and hlt (bad) notl xchg test pop mov mov add cmp (bad) cmpsl call adc pop iret pop sbb enter in (bad) div or lahf jp adc mov adc bound sbb (bad) ja aam jg je push out movsb out mov adc add fnsave cmc rcrb rcrl mov jne cmovle (bad) or in and lock fwait and jp jo cli xchg fwait mov or cwtl xor rcr sub fld cmp sbb cltd ss xchg jno nop inc or lahf rorb ds cwtl and xchg call popa les loop (bad) and pusha nop in mov lret sub mov mov out testb lods adc add cli sti inc decl cmp insl ds mov dec cmp jb sbb vdivss scas mov adc ss and mov pop outsb addr16 jbe gs (bad) mov icebp xchg dec andl mov mov xor adc lea gs insb fs lcall push mov jg push fdivrl dec or lret push sub jecxz xchg movd ret xor leave sti das outsl or fsubr imul fsts and in insl mov mov movsl xchg jl pop enter inc mov inc add inc frstor into dec cmp neg pop mov push or std xor iret fisttpll ret mov (bad) mov in adc (bad) shrb (bad) add jnp ja dec ret loop pop mov loopne or sarl leave fmuls call dec push xchg sub mov subl cmp mov sub sahf push lds jl jl,pn std cmpsl roll push xchg xor or popa adc push stos lcall adc dec inc lods loope out adc sub pop push mov pop out push out mov jecxz and sub jnp enter xchg mov (bad) sbb in cmp push repz and aam dec addl ret mov ja or or add andb lods sbb in sbb mov ja adc xor mov ficomp xchg in cmpsb mov mov push sti pop rol pusha rolb adc aad jae (bad) in movsl jno inc ja test jl push add adc std cmc sub loopne movsb pusha jle insb int3 xor mov in fsubl aam lea rorb mov pop es out sbb or (bad) jmp adc xchg jecxz adc sbb mov in clc mov jl pushf mov adc mov dec popa dec push jo insl cmp and adc out mulb inc jg testl out cmp jle pop in xor push lods pop ret pop repnz jae aaa ret daa lret adc inc rcr incl inc test aaa sbb jge ffreep jecxz xchg movsl mov inc sbb mov addr16 imul or testl mov inc lcall mov cmp pop push jecxz js int3 in jecxz clc jge add dec sbb dec aaa es cld and cmp xchg das xor xor testl mov mov dec sub cmc nop push test xchg js jl movsb in mov jle push bound push ja movsl pop or mov push cmpsb mov inc jle inc push xlat fnop mov into or inc and inc out loope lahf mov and stos fsubrl (bad) in sub lret push aas test inc cmpsl sub mov push xchg dec mov or lock cmp push pop cmp faddl andl pop inc pop pop add out in int3 fs add mov inc mov fldt pop mov cwtl push loopne sbb xchg add or push rcrl adc out add popf xor movsl into cmp (bad) test xchg popf std inc test add or inc jbe pop lds bound jno popf ja mov mov jno hlt push mov jle mov lock push enter std lcall aam cmpsb or push test inc test fisttpl mov sub cmp dec out sbb xchg cld stos cmc bound insb sbb mov ss mov loop jecxz into jnp mov sub into mov cmp add je movsb enter jne popf imul pop xor loop cwtl jge gs dec mov sub int sbbl repnz in repz test cmp lret cld (bad) mov mov out bound or cmp insl cmpsl cmpsb in or repnz jns sbb and mov pop cwtl call out in lods repnz and and mov fmulp push add gs push popf mov sbb fistl fwait pop jo leave fdivs dec add fbld sub nop xor mov shll jmp jle (bad) mul mov icebp fmull cmpsb mov sbb mov mov dec or pop lret jno pop popa xor (bad) push cmpsl inc mov add pop xorb adc les jg shr jnp enter fnstsw mov inc dec xor mov add cmp mov dec add dec es cmpsb imul out add xchg nop int in push into or data16 cwtl pushf enter pushf lods outsl jmp sbb push in or rep aad cmp aam mov sub mov outsb or pop adc mov int fisubrl push lock inc push push shll sbb mov sbb cltd add lds fs and mov dec mov sar mov mov inc pop aaa xchg and lcall mov cwtl mov jp int mov sbb mov pop inc arpl jb (bad) dec fldenv pop das jl insl add push sbb xchg scas fiadd cmp jge test push adc inc imul scas leave stc and sub xor dec jmp imul cmpl jae inc out sub insl fldt mov jp,pt push mov ret test mov mov and ret add adc cwtl push faddp sti push push pop mov test stos pop arpl in sub inc jmp mov jecxz stos push arpl fsubs jp add push fistp push push sbb push dec addr16 adc gs cld push inc insl xor call out mov cmpsb and (bad) and rol adc mov icebp jb mov outsb (bad) in push out bndstx int mov xor dec jmp rep mov fidiv xor add xor xchg sarb lds movsb cmc mov adcb inc int popf lea (bad) sbb fdiv lods sbb mov xchg fldenv xchg std pushf push xor jne or push cmp mov xor cmc (bad) scas outsl (bad) and sbbl je inc loop loope imul xchg cmp add dec scas xchg or and inc nop sbb sbb adc (bad) dec mov test aaa add mov jne fstpt sub xor mov pushf push or mov or mov pop mov pushf jnp pop cmp fucomp cli inc or clc aas int3 mov das outsb movsb es (bad) je xchg push adc push cmpb mov add mov xchg outsl ja test je sbb mov and adc sub jmp loopne mov sbb idivl (bad) or repz inc loope push lea in inc or (bad) pop sbb and scas or leave or mov pop xchg and or add imul add add sub in mov sete testb cwtl xchg push outsb lahf jg pop dec pop jp cli rol and insl mov add cld mov out and fldz adc das dec jmp sahf idivb int3 (bad) es stos lcall xor pop dec xchg dec xor dec push (bad) lock lret sbbl mov or std repnz sti sbb ss push aaa jge pushf xchg or push sar or jno jnp jno jp xlat sub xor xchg or adc sub inc pop jne cmp adc jmp pushf pop jnp add ret xor arpl mov xchg (bad) inc pop enter xchg (bad) mov out lahf shrl lods mov jo or cmp lock xchg and adc lods jg jno and or inc aam mov push sbb add stos shrb mov push lds push inc stos push and adc lds hlt xchg sbb jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas (bad) aaa add incl ljmp roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in fadd jp or xchg xchg movsb (bad) (bad) mov (bad) test adc push roll idiv sbb adc out cmp xor inc jp add mov jp adc or add jecxz jo ret movsb pop cltd push inc xorl inc add push and test insb ret ljmp xlat or pop pusha rclb jae xchg pop cmc (bad) (bad) mov and xor lahf mov popf add popl xor inc mov and daa xchg test jg adc sbb adc sub daa pushf sbb or add lret sbb lds cltd mov out sbb mov (bad) jno mov das enter arpl icebp (bad) dec stos js jecxz fmuls mov popa hlt mov ret and cli aad mov xor lods lods pop ss sbb mov icebp jmp imul jmp mov cmp dec sub ljmp iret push sbb test int pop addl mov push fidivr dec pop dec outsb ja in push out fcompl lahf rclb push xor inc das hlt out pop mov adc test pop cmpsl dec add adc in call fstpl pop out or adc pop xlat push xor aas addr16 outsb mov stos data16 mov add (bad) cli push dec or mov mov into loopne jns cmpsb stos ret cmp nop pop mov push into sbb sbb loopne stos and sbb cmp repnz jb pop (bad) and push imul movsb loop pop cmpsl popa lock mov sub jnp das addr16 jbe into daa stos push fsubs lock les push repz sbb push cmp ret adc or (bad) sub or jge pusha push jecxz movsl (bad) lahf push xchg push push push jl test mov fistp out fwait dec sar mov clc jae mov movsb fwait movsb std cmp orl in and mov pop dec cwtl xchg movsl (bad) mov out orl ret jns outsb imul and inc outsl sub in sbb outsb (bad) fldl fnstsw in pop or add leave sti test inc insl loop cli cld cmpsl xchg jo xor cmp push sbb pop jg push std mov cmpsb sbb mov fmul inc xlat cwtl out dec ret int3 (bad) repnz adc and into sti andb je mov rcrl test inc lods sti or scas ljmp mov lcall test inc sarl lahf ja mov adc xor loopne pop ret sbb sbb add cmc jle pop xchg sbb ror push and out mov (bad) mov nop mov ret or das scas cli imul push jns jle inc jmp fdivs or push cltd pop xor je fisttpll aam or jo sub xchg les or push scas inc jle aaa bound xor insb enter mov hlt add mov mov push lret bound and xor (bad) imul push jns fistp inc add es xor adc xchg test gs test jo cltd inc xchg (bad) iret lret insl lods mov pop cmp push jmp movsb imul jle in xchg mov sub jp dec xchg adc lods sbb cltd addr16 bound pop pushf pop pop push mov mov rclb sbb call xor mov xor lsl mov leave push adc lret cmp sbb mov and rclb cmp lea fwait test xor dec out pop (bad) add sub js jae mov xlat loope push aas mov push mov inc push movsl divl inc pusha or ja cmp je add xor lods addr16 dec cmc clc cmp arpl adc test pop arpl arpl leave jns mov scas sbb psubsb mov popf push sub jno mov psubb pop push jl (bad) out subl mov outsb dec xchg mov (bad) adc mov fadd fsubrl mov add and and pop daa and addr16 and fistl dec inc add loopne xor and leave mov or mov sbb push or push shll cmp (bad) jne cwtl dec mov jno nop xor sbb mov rclb push shr adc push inc enter and fsubrs and xchg jp test jmp mov pushf jae jb fadd jb in leave (bad) out test ds pop mov or imul and imul ret dec pop fmulp movsl outsb mov lods sub es mov mov lods jge add fwait sbb fnstenv int addr16 vrsqrtps call jecxz lahf jp (bad) jecxz movsl cmc cli jbe mov pop scas adc jns fadds cmp scas mov mov js mov gs dec pop mov stos or sub or lret sbb fucomp mov loope insl test sbb cmp int3 ret inc lcall pop into (bad) nop dec outsb aam xor lds push (bad) xor push leave pop js adc sub ret imul je outsb out cmp push sub adc test and movsb rcl ds pop jge xor iret bound mov inc sub or inc ficompl mov insl fildll pop pop mov xchg rcrl mov cmp shl icebp cmovne inc popl pushf mov fwait jne add jo fcmovnb pop fdivl sbb xchg pusha lret sub cmp xchg or xchg ds addr16 lret mov (bad) mov pop and sti cwtl dec lock xchg or in test movsl push ror mov fwait jnp mov leave inc in imul add mov xchg rcrl xorl mov inc push sub shr mov xchg and testl push ljmp imul fdivr jmp mov pop and int addr16 je test push sub addl test loope mov sbb sub pop cmpsb repnz inc ds pop clc cmp rcr movsb (bad) or dec inc or test roll xchg fst int3 and roll test cmp xchg xchg icebp jb sti mov sti aad cmp test dec push loope xor mov push lret sbb jmp jmp pop push rorl imul loopne sbb bound ret push test push xchg add cmpsb dec inc fadd pop pop insl cwtl inc cmp xchg mov outsl fwait lret gs dec jno nopl popf cmc cmp test jl pop test inc sbb (bad) ja ja push jl imul ja sahf loop add lea scas mov clc (bad) js mov xchg es js jl mov jo lods movsb add push push shlb mov in mov repnz dec xchg insl or pop push (bad) aas inc push out lret ja iret push sub mov cmpsl mov cmp ret loop cmp loopne xor xor jno movsl push ficom roll sbb lods (bad) xor pop scas cmp mov add imul xor out or out fs xchg lahf fildll mov mov pusha and pusha push int3 or sbb test cmp lods sbb mov mov pop lock jns xchg test inc jmp pop dec adc pushf frstor sbb inc bswap mov out lock movsb jnp setb xor cltd inc rcl mov int mov adc out inc sbb repnz cmp mov xchg mov xor jmp sub xor adc jp dec lret and dec and loopne js jne xchg sahf xor sbb mov rolb sub mov sub aaa rclb xor cmp xor xor loope sub or xchg nop enter imul sarb pushf and bound popf pop cwtl and (bad) mov jl hlt or leave popa test xor fdivs imul arpl lock jge jae sub shll sbb les subb push dec in cmc pop push stos sbb iret (bad) cmpsl xor in or js mov push aam sbb cli and dec fabs push jecxz in in stos addr16 nop cmc pop jae add lds not pop mov std mov mov pop xchg xor push cmpsb dec jmp in loop pop jbe aam (bad) pop cmp push lock int (bad) hlt and dec arpl stos sub mov movsb jbe fwait movsl fldenv mov insl cmp or push mov sbb inc ds sbb in (bad) (bad) (bad) xchg and fs mov lret fimull cwtl push mov leave ds (bad) cmp cmc cmp cwtl adc lret insl popf xchg test mov (bad) sbb rolb xchg pop clc sbb (bad) pop repnz mov icebp scas and push ss pop jmp (bad) jecxz pushf inc mov mov das stc test cmp fld pushf daa sbb xchg fdivs xor xor jae jnp data16 mov fisubrl movsl and or loop jp cltd pushf jb mov sbb or outsl push xchg test add cmpl test jp divb add inc fild pop cmp popa testl arpl pop jp cmpsb out push cmpsl cmpsl jns and add sbbl sbb movups insb test dec jbe inc fcoms int (bad) fldcw jnp decb sahf int3 scas sar rorb (bad) loopne add call cmp ja and icebp push pop mov push xlat mov jb mov mov push push rolb addr16 scas mov mov sub and inc out cmp cltd xchg adc mov mov mov (bad) adc push sub and and scas mov pop push mov mov (bad) cwtl dec (bad) cltd xchg stos xor or cmp call inc push nop nop out stos push (bad) clc insl lock and and and xchg sub stc lods mov movsl cmp cld xchg nop aaa leave imul jns xor jae and ja sbb add ljmp adc xchg jnp jg rclb out jecxz push and xchg cmp or add (bad) jb insb cmp sbb sbb add xor aam daa rcll adc (bad) sub in test mov sbb rorl ljmp andl pop xor mov (bad) jge mov (bad) jo fbld sbb into add outsb imul out add mov fwait dec cmp jb push pop add int sbb inc jg cmp sub sub cmp jmp add (bad) lea mov jl jecxz cmp inc rolb pop test pop mov test sbb lock pushl mov xchg jno repz sahf popf daa stc pusha mov inc adc xor mov cmp add and push push pop int3 insb mov enter ljmp arpl mov push (bad) popf (bad) sub push cmp sbb js shll pop hlt push dec loopne push mov fisttpl jbe daa pop jne fld stos inc cwtl xlat sub mov adc aad pop xchg adc fdiv mov je jb js pop test sbb xchg repnz sub or xor aad cltd sub xchg les addr16 push jge enter pop sub mov hlt jge sub fwait jp ljmp dec xchg cld cs xchg faddp cmp std fwait adc scas mov dec mov jge aas (bad) cld call cli (bad) sahf xchg out in mov mov shlb pop addl or dec jg inc fbstp jb test ja adc push xchg lret (bad) xchg lret push sbb cmp push adc xchg jns mov (bad) mov test es fiaddl cmc mov repnz outsb pop pushf dec jnp mov call (bad) jb inc adc lret rcll and jg cli sarl mov inc shlb (bad) repz inc repz jecxz clc aas jae jae cmp stos cmp aam sbb mov (bad) imul mov movb and sti test add push mov push mov mov outsb aam jae jns push mov cmpsb les call pop mov enter mov xor mov push sub outsb push je cmpsb cld dec adc dec test push pop aaa fmulp sub dec enter fldt adc mov cmp in mov gs xchg sbb test cmpsl std push push push test adc or mov cld cmp inc ret fadds sarl cmpsb jne adc or (bad) mov repz sub repz push xlat pop gs roll dec jo sub mov mov ficompl mov std popf and in (bad) aaa lcall jle sub test (bad) test jbe inc and mov mov leave push adc push icebp mov (bad) in daa cwtl (bad) mov sub ss data16 or incb and fadds pop rcrl ficomp mov mov es mov lret jmp mov fnstsw (bad) (bad) cwtl fldt insb adc addb pop jmp cmpsl jmp xor add and pop mov mov into add dec jns pusha sbb fiaddl repz cmp add cmp inc push jmp pop mov pushf (bad) mov stc fldenv lea lret push lds and xchg (bad) mov scas enter mov pushf (bad) nop aad repz fsubp sbb push sbb idivl hlt jmp aas repz jge jle cld mov inc add stos cmp add inc jge lret leave inc jmp xor xchg mov out jg pop jae adc lret push or ds add pop adc ljmp hlt sti xlat or mov sub lods push sbb loop jmp push sub mov mov test mov cmp inc in xchg sbbl out aaa dec sub xchg cmp fsts cwtl dec add push sbb lods flds inc rcrb ljmp into imul outsl movb fs add push push lret dec in mov test push inc push call mov cltd push addr16 call test rol dec out cmp mov addr16 dec sahf xchg aas mov or cs mov data16 repnz xor leave jnp insl pop sti test popa xchg cli imul (bad) popa adc mov repnz mov insb cmpsl fdiv pop jnp mov xlat inc cli imul jnp mov int3 ret push clc rclb pinsrw daa bound loope pop mov adc push xorl jb cli lock push xor movsb and sub bsf mov mov popf daa cmp imul pop mov jb mov push test sbb repnz pushf pushf test inc std sub dec addr16 lds (bad) scas subl mov mov out imul inc das sbb (bad) ds std xchg inc mov les push cmpsb inc lods inc or sbb fcmovnb pop pop in push lds ret fucomi loopne inc sbb adc rcrb pusha sub hlt or popl add sbb imul daa xchg popf dec mov dec jbe add mov pop repz cmp sbb pop mov adc fwait and add outsl pusha cs dec adc xchg rorb add sub push jg test push (bad) out mov mov sbb insl cmp addr16 sahf push and push aam mov add adc jg inc xor push cs or xchg and aaa cmp std (bad) addr16 add and jecxz outsb or sahf pop pusha in iret mov mov sub mov je xchg test sub push dec sub in push cld pop loope mov fdivr int3 lea popf mov inc repnz xchg adc jg,pn mov ljmp ss insl and and stos and mov mov aad xchg fdivl jl andb (bad) jmp sbb loop cltd push out js inc loop test cmp dec mov test nop int fildl inc push mov ss notb aad xor jg mov in dec sarb mov cmp cmp push bound js test insl popf xchg addb sbb (bad) and in rcrb cmp (bad) daa xchg repz test aad jl dec fstps enter push push mov loopne jbe fistl mov mov push sti ljmp stc mov dec fcmovne pop pop incb pop dec inc rcrl scas mov sub ror jl cmpsb add inc pop fwait sub sub shrb shrl dec (bad) mov mov lock pop xor andl mov push enter push lods lret sub jl sbb mov (bad) aad jns into mov mov aam mov push pop sub mov push cmpsb sarl in adc xor inc test sub xchg movsl xor mov pop jmp ficom dec call fisubrl inc or outsl or add or xchg and pop pop sbb inc jg into stc adc popf test mov sbb loop fsubr sub jmp daa sub dec dec stc pop pushf adc into add movsl and (bad) inc leave loope or or add push dec lea dec lret inc (bad) or pop call inc jmp xchg imul xor xchg cmp icebp les lret loopne jnp sbb xchg and xor adcb cmp sub adc pop push rclb gs dec or hlt push adc mov push jb mov dec loopne iret rcl xchg orl loope scas cmc std pop or sbb flds sub jmp mov pop xchg xor dec (bad) mov xchg mov xor stc xchg mulb pop or xchg push icebp sbb aaa repz fwait sbb inc sahf mov imul int3 repz mov mov (bad) jne xchg lret (bad) into popf int3 sbb mov in fildll mov mov mov lock int les stos xchg insl jno xchg loop xor mov sub and mov mov je lret sbb das mov mov push cmpb mov cmp fldt fstpl jbe jg fcmovne (bad) fimull push out outsl ljmp sbb mov push xor ret into add mov xlat xor jg lea lcall dec ret cmp in or add pop jge dec pop test int3 out mov push imul or pop ds outsb adc ret mov and and sub dec shrl xor fcmovb pop mov insb mov mov shr in add jge test scas subl outsl pop imull xchg das xor ja aam stos fwait jno sahf inc data16 in fld lahf loopne cmpb cltd aas pop das dec inc cmp movl lahf lods or add jne repz (bad) fnstcw das add test pop mov popf and sub arpl sti js cmpsl test nop dec sti pmaddwd js jl mov cmp mov int xchg imul xor mov or inc shr repz addr16 mov pop jle add mov xchg ret (bad) xor fiaddl in xchg (bad) sti fsub cmpsl (bad) xor push push or in dec lods lods mov out add mov lcall jne add fisttpll dec xor or shrl pop adc shr adc cs sbb mov fmull jecxz (bad) cmp xlat push xor mov xchg (bad) cmp sub aaa pop xor or in js push out test arpl mov adc data16 stos and hlt pop cmp out out jle addr16 out mov xchg repz lcall push test scas push adc add popa cld push adc call jp pop push mov sub adc mov inc mov fwait lret lret into mov repnz jb mov adc sub mov jne inc shrb pop or adc cmp lea pop dec cmpsl inc outsl mov dec es (bad) sti jbe sbb inc adc and rclb insb mov imul lcall into cli sub xchg loope push sub and adc stc mov inc lds mov jle nop pop les push push clc lret insb mov or test xchg or ret cli dec ss mov cmpsl lods sahf dec dec and mov pushf push lock (bad) mov imul sub mov fwait jbe (bad) or lret gs inc pop jmp test leave stos in push xchg sbb ds cmc mov or mov sbb out jbe imul call add gs pop sti push mov lahf mov notl and xchg adc stos aad (bad) in cmp popf xchg ja pop mov fisubl int3 add (bad) (bad) xor (bad) cltd imull repnz lcall adc cmc scas xchg outsb sub sbb sar rorl clc pop fbstp jbe mov pop lahf (bad) jno loop (bad) mov jo shll imul push (bad) and sbb insl lret rorb xchg loop adc cwtl add and pop jle das push mov push sbb xchg aaa sub sarb jo jae sub popf imul sbb jmp ja pop xor mov sti (bad) cmc xor jecxz in repnz xchg popf pop stos fptan cmpsl sbb jae je sbb movsb outsb out loopne push fcmovnbe adc fcompl mov xorb std adc pop inc xor mov into xchg xor and push loopne repz arpl sbb fld adc aad fild pop (bad) sbb sbb aad lea gs sbbl iret rcr pop sub mov push test dec rcl frstor (bad) shl aaa mov hlt sub loopne jl mov bound rcrl xor xor int3 pop and jno int mov in xlat pop add cmpsb dec enter dec xchg daa test popa das adc and in cmp in adc js push jecxz testl (bad) scas int daa fdivr test dec pop (bad) fwait cmp ds fisubrl pop scas adc int3 add add adc rcrb insl gs sbb cmp out jle sbb adc lret lcall mov cltd and or jo or jae int into jecxz cmp jno imul mov shlb mov das scas xchg ret das outsb pop jb cmpsl push mov inc cmp test imul loop dec xor mov in push cmp mov mov xchg jp imul dec and and rcll dec dec sub xchg (bad) add inc xor xor (bad) mov mov or xchg jb dec xor inc test mov mov into push cmp cmc (bad) out out call iret inc (bad) lods xchg xchg fwait xor lcall push pop fdivrs mov or sbb push jp push or mov int xchg push xchg push stc aam data16 adc inc or cli mov roll cmp arpl cld cld mov mov jl jecxz imul cltd xor test inc frstor push lahf mov pop xor mov pop or cmp ret (bad) push mov sbb add xor aam dec fmull mov xor mov or mulb mov outsl jp in test imul mov mov mov xchg mov or iret push jge jl pop neg rclb mov mov (bad) mov cmp lret pushf mov mov movsl push lret jl lahf jecxz cwtl sub xorb in mov fwait sbb insb mov mov decl push sbb inc jnp and mov push aam push dec ljmp ffreep inc loope fwait and jne movsb mov adc in adc insl jmp in mov fsubs sub ja mov dec or ds adc cli inc add xlat pop aam sub cld push pop lock mov inc popf sub dec pop sbb (bad) cmc gs pop rcr lods jo out inc push lds inc dec movsb imul mov js clc hlt cmp fyl2x sub mov dec frstor addr16 fsubr xor inc pop mov test in xor dec loopne xor aad jae lock les xchg xor gs (bad) jmp xor cmp lock imul dec test jnp or jp cmpsb (bad) scas cmp test and loop xchg push dec mov adc mov pop popf insb mov ds int3 or cmp and negb insb dec inc jp jmp pop xchg lea inc aam pop sbb js mov decb fisubl (bad) sbb add imul sbb sbb (bad) ret adc shrl mov cmc sbb mov dec xchg faddp test cs add daa pop aad shrb push add gs into xchg mov jns pop ret adc int3 pop ret adc movsl popa jp sarl xchg (bad) jge sub insl lds mov mov fwait (bad) aaa repz das mov in cmpsb imul mov fs popa inc stos mov sbb cltd lcall xchg or sbb push ror ds fwait push pop (bad) pop scas imul orl (bad) pusha push popl and int3 es push jb pop mov xorl lcall and adc (bad) addb adcl mov call xor mov movsl mov movsb pop js pop xor sbb enter sbb ljmp dec movl inc lahf push lret dec mov adc cmpsl xchg clc (bad) popf mov sahf pop in nop aad int3 adc push push (bad) (bad) jns xor stos hlt mov loope inc ret mov cmc jle loope,pn ds push cmp xchg mov xor outsl add pop into add add dec jne mov ljmp idivl aad jge and dec aaa mov mov je or cmpsb xchg mov idivb push or fildl loopne mov pop pop push lods stos pop xchg sbb and ret xchg (bad) out sahf dec and je decl idivb add pop pushf pop fbld sbb call jo ds xchg mov out dec ret cld xchg mov dec or mov mov mov mov and cmp mov push ljmp mov movsl and mov add mov data16 bound cmp pop fwait or int cmpl sub mov pop cmp pop or test push loop scas ret add movsl dec push mov mov and out cmc pop push cmpsl shrl inc in fidivl xor ret aad icebp mov sub inc leave cwtl icebp lcall gs fcoms xchg ror jl stos pushf lret insb rclb xchg xchg sti ljmp lods mov inc pop xchg xchg push lea (bad) pop sbb lock (bad) jne rol (bad) xor mov je mov pop xor gs mov ss mov call pop std scas sub pop rcll cmp mov pushf lods out loop test pop mov leave mov imul sbb dec xorb cmp sbb aam inc xor push cmp cld adc xor imul dec std fwait gs imul fadds add inc or test fs cmp add fistl pusha cmp push lods push mov ret lea outsb cs popf cli dec mov mov add rolb add dec mov subl adc fbstp jl cmpb ret jg (bad) aam xchg pop sub jbe add pop into and inc shrl sub mov loop imul popa aas push jo pop lret lea adc ficoml push and or stos mov sbb (bad) arpl cmp mov jmp lods les cld push orb repz loop jle push sbb jp aam xchg test in xor and jo cmc jo xor mov mov imul pop inc sbb pop sbb in icebp and jmp fsubrl push (bad) popf pop test push pop push movsb cmp dec mov inc dec mov mov jb gs push pop push loop lcall push cmp add add rcr adc and int lods je (bad) push bound fldl shrb xchg jecxz outsb mov sti and mov cmp dec jnp jo jg lret repnz push outsl mov movsb (bad) mov jo cld ret inc jb sahf xchg or pop outsl pop jo xor out sub aad into cmp push xor sahf fstps inc cmpsb outsb bound fmuls jg and test mov (bad) sub inc pusha mov nop in (bad) sbb fstps test add inc jmp mov popf dec mov xlat rolb sbb les lret push icebp (bad) cld ds xchg out push jecxz scas mov lods mov lcall sti inc push cli push loopw inc repnz cmpsl decl or jno jmp sub mov daa (bad) add jecxz leave xor inc xchg and mov (bad) xor jl loope orl push adc das lock icebp rcll loopne cltd mov mov xchg popa fidiv cmc lcall dec outsl xor std leave push rcrl push popa jbe dec repz xor inc sbb iret loopne add imulb arpl (bad) (bad) mov and push add xchg pusha xor clc dec out pop sahf xor in movsb outsl or adc mov fldcw stos enter shr loopne xchg adc les inc inc pushf setno inc jns or xchg dec iret sub mov bnd mov pop cmpsb inc mov sbb iret dec and popf test enter dec fnstsw inc or in jmp fnstsw mov (bad) sbb jae sub mov jnp and je es dec lods mov xor inc stc pop dec add jb adc insl sbb push (bad) mov xor xchg ds movsl ret push daa int3 mov push rclb xchg clc mov test sti daa sbb ficompl sti inc jbe jae pop xor scas cmp cltd ja jnp rcll adc mov push jo outsl add mov inc adc hlt (bad) jae ja scas cwtl pop cmp inc fsts jl les dec mov jns cltd dec xor sbb push add inc call mov ret lahf xor jp pop ret push idivb insb fisub jns outsl mov jb in in cmp mov xchg divl pop mov test sbb mov lods outsl lods inc std (bad) (bad) mov (bad) fbld xlat cs jns adc cmp push movsl das xor inc or xchg cmp addl pop push mov dec mov aam sbb int3 js pop jns pusha mov arpl push adc push test push (bad) pop mov jbe sbb (bad) dec stos and jnp inc inc sub (bad) clc je jmp sbb xor pusha ljmp int lods rcll push fcmovne incb cmc sub loop cli ss (bad) lea and xor clc orl push je sub cmp popa inc mov pop mov push insb lcall inc jecxz rcrl (bad) clc cmpl lahf mov or addr16 pop jbe in pop jnp std fldl rorb rorl cmp add mov jle das xchg les stos jle pushf sbb mov or imul inc leave mov jp and xor and int3 cmp push mov jecxz test push aas lods xor sub dec cs xor ljmp lock shlb inc or mov xor inc mov fadds ss push dec push cmp adc or xchg aad int fs sbb jbe dec (bad) mov cmp fiadd in mov loop mov or sub push loop arpl movsl mov adc gs daa addr16 or push mov jne data16 jo add gs sub ja inc aas jg jle mov dec je xor dec sbb das das inc cmc jbe push or movsl pop pop cmp stos pop dec dec push xchg or xchg fldl pop push test xchg aaa jns xchg int inc test mov jbe insl popa test outsl sub add mov popf movb ret xor enter mov je scas in scas (bad) js cli cmp jb ja mov cmpsb dec movsl push out inc adc inc inc and fisubr and push sbb cmp jmp (bad) jecxz jnp mov cmp ficoml adc dec dec pop inc test push jbe jb jg loopne dec sbb pop mull loopne cwtl daa xlat fsubr hlt nop mov ret or dec mov out xor or adc inc mov inc inc mov sbb cmp lahf mov clc pop shl es lds aad xchg jno mov (bad) pop dec data16 sbb cmp dec push cmp gs pop fucomp arpl arpl sbb xor repz mov jb outsl hlt cmp call xchg pop or adc lods mov imul pop jb mov and fsub lods xchg xor ja,pt or mov fsubs movsl ret stc push push sub sarb and dec push leave or cs jle shll mov fimul test sarl sti popa add add popf or cld add mulb xlat mov cmpsb xor xchg ja jae mov fcmovnb dec push fwait (bad) push (bad) adc into popa push out xchg int3 mov dec or sub hlt push aad ds mov ss xor ds or test mov inc push (bad) mov xchg and (bad) lret aaa inc adc mov in pop dec add push and hlt dec sbb addr16 adc lahf arpl (bad) imulb fistpll fstpl push push das out adc into push jb popf mov outsb or out dec xlat xchg dec or icebp pusha or xlat push jecxz test rorb es repz dec push xor add ljmp dec jmp dec (bad) mov xor dec pop xchg jbe dec iret pop lret xchg loope mov jnp shll mov subl std cmp xorb push sbb xchg in jle int3 roll or push popa sbb mov movsb aas mov jg lods dec (bad) mov stc das xchg mov mov lcall test jnp push push push pop lahf outsl xor xchg push leave push sti pop inc data16 xchg adc adc insl jmp outsl push stc pop lds es push jp lret enter sbb xor push sbb cwtl jbe jmp dec outsl dec daa cltd nop mov jp mov and icebp cli dec add dec ret pusha rcr sub fmuls sbb sub and mov xchg ljmp or aas cs pop pop rolb mov scas nop xor adc leave std fcoms aaa fildl and mov mov or xchg mov adc movsl push in sti adc jns sub cmc pop mov jmp lea fistl push dec sub cmp loop sbb mov (bad) jmp or jle jo ss inc cwtl loope dec cltd rclb inc push mov es out std jecxz loope hlt jae sbb add sub dec (bad) lret out (bad) pop pushf loopne jb sub or bound dec dec mov jae call shlb and pop jp push inc addr16 dec inc pusha call test into jp ljmp adc cmpsl fisub aam insb pushf aas mov (bad) das fcoml aam push pop pop mov mov popa cs test rcrl add jae dec js dec mov add neg aaa pop sbb lret icebp out ds test fwait lds scas mov pop iret fnsave sub test cmp call push push cld mov (bad) sub pop dec (bad) jg push (bad) (bad) pop test xchg dec adc lock inc mov xor enter xlat test jge (bad) into pop sub repz out gs imul and imul mov sbb cmp ficoml jmp xchg stos xchg adc aaa int3 cwtl dec movsb cmp sub gs sbbl pop call enter movsl loopne ret jp enter into xor mov repnz or sub stc push (bad) mov inc pop popa stos pop notl outsl decb insl movsl movsb xchg or (bad) out xlat add jmp bound ss xor fimull outsb in pop push jae arpl jae jp imul add xor ficomp xchg popf popa in outsl jle (bad) xor (bad) mov jmp aad push inc stos push xchg inc hlt and sahf aam cmpsb xor roll inc imul sahf dec sbb dec inc and outsb dec cmpb outsb mov fwait lret pop mov push jg or daa adc jp lds inc aas out fwait push sub or outsb dec xchg mov sbb lods hlt pushf sub cli mov jl out enter or sbb fistpll pushf lret or inc mov lret inc mov aaa cmc or loopne mov push (bad) push int sbb test lds jo mov or pop int dec fwait js scas rcrb cmp imul arpl rorb fistpl inc addl mov repz ljmp inc subl ret (bad) out mov cmpsb sbb xchg mov in and mov out loope or (bad) cli imul ret and aas out outsb adc loope add push fisttp push sti shrl mov add jo or (bad) rcrl test xor mov xchg ret mov aad xor fldl insb cmp mov push cli mov pop jbe jnp inc jno int3 imul sbb outsl pop aas sbb (bad) or in int stc jb mov ret pop mov inc aam outsb ja out loop push mov mov mov jge cmpsl xchg fdivr inc sub xor outsb dec repnz push les jno adc inc fnop xchg xor cmp push out mov pop movsb mov in (bad) mov out adcl bound pop lea movsl ds repz (bad) push add dec xor mov jns mov mov xor xchg incl push sbb sbb pop cmp rclb and or xor cmpsl cmp push dec cmp push insb movsb mov dec arpl jae (bad) adc cmc (bad) mov dec inc pusha mov adcb adc data16 pop fs iret pop or daa dec andl push push sahf rclb push xchg gs jmp jo sub loop adc frstor cmpsl inc and push cmp xchg ds sbb (bad) mov cwtl je gs scas addr16 call es mull insl test add pop ret or push push adc in dec sub dec mov cmpsb mov sub adc das xor testb movsb push (bad) testl inc add hlt (bad) loopne and movsb test and pop pop mov inc lcall mov dec jg,pn fsts enter stc push popf ffree pop pop mov imul add loop pop dec popf jle das mov cld sub xor dec fs add xor jno,pt lods (bad) pop sbb mov outsb add sub cmp out pop rcl and lods nop ret add pop sub mov pop xorb sbb ja ss or and xor adc loopne daa loop mov inc mov and in xchg mov loop jecxz xchg jbe fwait push mov adc repz mov add repz pop or mov mov sbb or imul inc int imul pushf mov mov dec mov mov dec aad add mov sub and jmp nop jmp ja arpl fdivrs push mov mov lods lahf sub icebp iret push (bad) jae ret mov xorl sub aas fidivr fs sub jmp pinsrw pop push pop adc js dec sub ja addr16 xor cmp jecxz xchg je out push mov xchg or inc jp rorl push incl push movsb inc dec push mov out xlat push add leave std stos (bad) push fcoml imul clc mov dec rcrb icebp lods iret mov adc call xchg inc stc imul push xor push fidivl bound testl add shrl or mov imull dec fwait lods cmpsl and cltd pop lcall or mov mov testl or sub (bad) out outsb sbb (bad) (bad) xchg add dec decb hlt das (bad) aaa fwait and push les jg inc loopne push mov push mov jne ret mov push lods loop pop inc inc fistl cmp pop popf jecxz push in outsl push cmp pop aaa pop sub cmp inc test (bad) push and mov and sbb popf push lcall cmp loop fdivrl leave std insb mov fisttp repnz (bad) dec scas es push dec gs mov (bad) cmp mov in adc icebp or movsl sbb adc je (bad) jno es cmp inc rorl mov pop loope jnp lds mov iret push into rorl mov lcall push push mov inc pop mov inc xchg ss jae sub ret div loop fisubr xchg xor call and add mov cmp pop pop jbe xchg loopne int and enter pop xchg mov xchg insb aas mov in dec enter inc in cltd dec es in lock (bad) or iret pop mov das jne mov repz jecxz mov xor mov icebp test lods or adcl mov sub fyl2x mov hlt xchg jl pop mov (bad) mov std cmp aaa pop dec (bad) xor loope push aam pusha enter adc mov xor xchg cmp in cmp cmp imulb adc mov outsl insb scas sub loop imul mov es aaa jo mov adc fldenv pop jne movsl lock cmpsb sub pop xor xor xchg mov out mov jne jns ds add aad out ror (bad) adc loope push hlt jp lcall mov dec inc or sahf push adc xchg clc aaa imul les fstpt mov test sbb punpcklwd (bad) sub sbb fimul cmp scas test mov pop cmp lea push push xchg mov mov add fnsave stc and or in mov adc sub sarb fimull ficoml imul jle iret shrb adc inc push mov cld js mov test cmp push pop jmp dec sub cmpsl or lods mov ds inc into push jne or xor mov shll jle xor mov xlat cmc icebp jmp ljmp jmp jno lods mov fs (bad) daa repnz arpl jae lock es dec (bad) arpl dec lods fcmove sarl or cmp imul sbb lods cmp jb repz out xchg stc fdivrl or lock jbe shl fbld push mov js cmpsb jnp std loope mov sub pop jl sub fimul adc sbb dec jno push fwait push outsb add and xor jp pop inc mov cmpsb pop out cmp xchg xchg mov fnstenv inc sbb punpcklwd push cs outsl test rcr inc out sbb aas stos fmuls push aas jl sbb lds xchg lcall or mov jno xchg imul icebp popf aas movsb cmc movsb jae pop mov and inc scas mov cmp fisttpl add inc cmpsl and arpl add sahf xor push add and ljmp cmp mov out mov xchg ss jae aaa outsb xchg adc xor sub es xor dec jns and or fwait (bad) imul push outsl mov inc jb (bad) xor inc rcrl daa jge ss mov add mov idiv sar cmc popf fistpl mov sub add sbb sub aaa inc hlt dec jb sub outsb pop xbegin cmp jg push push jmp xor fs mov mov cmc inc or adc mov cmp or js and add subl sub lcall les mov rcll out jge outsl sbb jnp les add cmp xor xchg cmpsl and loopne jge adc mov add gs out xor in (bad) not rep dec pop mov in ret ds stos mov jl out lcall jns lods mov cltd fwait mov mov lret test insl out mov sbb xchg fldl pop dec mov add popf inc and xchg push repz lahf test in xor int3 push push test loopne std stos dec test mov pop fsts inc ja add xor inc adc (bad) cwtl or mov aas xchg data16 add sub cmp mov fs pop adc or lds push das jae stos (bad) pop xchg cmp outsb push adc test and outsl jle xchg icebp hlt and ficoml cld (bad) ds lds xchg mov push fisttpll xor inc in popa jbe cld cmpsl ret inc add in push ror test push sbb ds sarb sbb scas cld jb scas cmc daa mov push in cmp dec and cmp aad out (bad) mov (bad) in cltd insl das pop fisubl inc test cmp fstl mov mov loop mov ficompl inc lret cmp (bad) jmp enter fwait (bad) xor jb jge test outsl scas fadds add sbb xchg jbe ret ret xchg nop push nop sub or (bad) ljmp or daa mov repz daa jne inc inc mov sbb leave sbb cwtl out stos not jae cmp shl clc adc pop test rolb sahf aaa int3 repnz xlat scas fistp (bad) iret arpl xchg lods (bad) jge dec mov arpl hlt mov es xor push and xor xorl cli jbe cmc je jecxz add mov loop cmpsl cmpsb stc xor or aam or aaa and add mov shrl in fistl cmp scas mov jnp cmp mov mov mov xorl push sub out test pop test int and sub movsl sahf and fwait loop sub (bad) mov and xchg mov xchg mov sahf inc push pusha outsl push xor cmp jne lock in jl mov adc xchg mov pop and ljmp cmp addr16 sub xlat push mov pop jns push addr16 pop cltd mov fwait imul dec mov push jb movsb ret out fcoms adc add add dec test fcomps daa rclb in xor je push jecxz xchg sbb gs dec (bad) into (bad) mov inc mov shlb mov lcall add das aam or aas add repz add clc adc pushf ficomp mov fs push pop push mov out mov add outsl ret ss cmp cmc mov mov stc out imul pop sub mov ret ret outsb and inc inc bnd ret insl mov jg (bad) int fsubr mov es or and mov xor and loopne mov lock shll ja cmpsl jle inc loope shl inc pop mov pop inc mov xchg push xor jne test (bad) daa jo push push mov fadds push push push xchg clc jnp adc std push and test rcrb and mov insl pop sti sahf or mov mull pushf pusha in fimul aaa je in mov insl fisttpl adc and sub gs es fisttpl outsb gs jns ja sub (bad) jecxz rolb push int3 int3 scas dec jb imul in or shrl jns pop int3 scas sbb jns enter mov addl sbb divl in xchg mov add movsb movsb mov call fstl push sub insb mov xor sbb adc adc mov gs adc adc ja add out cmp sbb out cld insb push subl jns and pushf fisttp ds sbb bound btc jo leave int dec lcall cld emms cli inc into (bad) xchg mov (bad) fmull sub gs stos mov rorb mov ljmp repz cmovb and push cmc cli ret adc mov add pop inc push jb sbb and jmp daa popf push divl insb xor add cmp add aaa cmpsb sub push jl or outsl les fimul rcr sub mov dec lods movsl jbe rorb movsb or sbb lock adc and inc mov inc xor xor data16 outsb xchg addr16 sbb push and jp mov push (bad) aad insl je sbb sbb std pop add sar in popa mov clc dec outsl pop pop imul sub lea (bad) or aaa sbb pop jae test clc lds add fwait add sbbl inc (bad) mov cmp (bad) aam fwait fs jl mov dec pop fstpl add inc jnp jns push call jecxz mov and outsb xchg sbb push xchg jle ljmp (bad) mov pop addr16 je fldenv push or int sarl test cltd (bad) hlt daa push movsb mov loop in lods adc and or popf mov sub into pop sti pop sbb imul fsubrl or xor int3 lods cltd insb mov mov mov mov loope mov insb fild insb cmpsb cmc out in sbb and pusha push xchg or enter inc cwtl mov cwtl push cld es add jne xchg xchg lods loop ror int3 and loope rorl and pop pop daa cmc cmp inc addr16 dec ret pop arpl repnz sbb mov test insl push out cmp sbb add in ljmp adcl pop clc out pop fisub sub rorb scas cmp mov out adc sub sti sub xor sbb shrl shll xor adc push fidivr pusha add iret loope sbb and and les adc in mov xchg sbb lock mov leave and mov adc xchg movsb stc xor loop mov cmc ret mov imul imul jge ffreep inc or mov mov mov mov cmpsl inc das insb xchg imul mov or mov dec jl mov gs (bad) mov inc jg mov or jecxz pop jbe dec mov das dec mov jo xlat inc jmp mov mov pop pop roll sbb lods outsl (bad) negb add ss mov iret xchg xor shlb outsl je adcl loopne and les clc lds push ret inc test sub pop insb and sub push mov mov in xor out jle mov mov pop mov fsubs push adcl xchg dec lea lahf or mov jbe hlt fwait into movntq and jp inc incb inc sti cli sbb stos ja sbb jle (bad) ss scas dec push push scas fidivrl jno xor mov loope insl (bad) fcoms (bad) sbb lods add xchg repnz mov adc inc push loop scas mov (bad) pop jmp jg (bad) insl dec test addr16 and popf mov push fdivp add enter and (bad) mov xor ret in popa test movsl les cld adc inc mov lock imul jmp mov push xchg xor cmp jns cmpsl pop adc cld into cmp xchg sub popa sbb fidiv pop pop scas insl cli idiv jp out mov cmp adc (bad) xor inc movsl dec and seto inc sub push jb out adc mov mov in imul or mov mov lcall imul insl ret movsb cld cmc insb dec pop inc and repz test jl mov sbb stos iret roll pop std insb xchg jbe stos adc aad (bad) jg insl adc es adc mov sub fstps scas mov mov push add push xchg or fmul pop cmp add adc jne cmp or jle add ffreep mov clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz decl sar mov push subl add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) bound or insl pop lea lea mov cmp addr16 out push in inc mov add les decl mov adc jae js,pt es les ret pop repz scas leave out or jge lcall lds adc nop cmp inc or mov or in fs inc push es xchg mov add jge inc (bad) rorl or test sbb pop xchg das dec pop call repz dec daa mov xor lods clc roll mov ss aad jp call push clc (bad) mov ds inc adc inc inc cli mov jl rclb aam (bad) sbb jle divl nop inc sub lods sub push bound les or push adc push cmp jg sbb mov icebp rclb pop sub call sbb repz and xor push into push dec lcall pushf push xorl sbb movsb mov xor xchg sbbl sub out les inc loop,pn pushf cld sbb (bad) enter dec cmpsl ret or ljmp ret inc outsl sub jecxz mulb inc sahf (bad) cltd xor out mov xchg xchg inc inc clc shrl jne pop insl sbbl ficom pop xor xchg outsl jmp lea cli push or insb adc inc (bad) mov cs jl dec sbb and mov int push ljmp mov aad xlat push insb jmp mov push inc out mov std sbb push hlt or jmp add xorl xorl mov jnp cmpsb and loope ret ss pop cs int sbb sbb fst test mov add dec mov sti lret hlt or repnz addr16 cld jo pusha (bad) or cmc pop cltd add push and xchg xor pop push fstpt or jo loopne sti jmp adc je or cmp in out push lock ret mov test clc sbb movsl ljmp xor dec out (bad) test lahf int3 test mov sbb (bad) mov loopne xor jno cmp aad push sbb (bad) insb xchg jbe push inc dec adc outsb pop stc push mov cmp cmc push pop pop ljmp call mov and fwait add into aam add test jge in jbe lods pop shr pop inc movsl xchg out mov and sub jmp std xor push mov test lcall or xor xchg out and es cmp inc test sub popa xlat ja into push imul pop pop inc int adc fimull rol xchg jge jnp aad inc xchg mov jnp iret sbb leave push popa (bad) sbb pop jb (bad) loopne es lahf xor mov repnz insl mov pop mov fdivl xor lret mov xor sbb pusha jecxz xchg xorb sub cs mov dec push jo jge out mov ljmp orb pop shrb sbb not pop aam cli push push mov mov jg push int3 loop mov pop sub pop or xchg pop iret bound add ret sbb nop es gs xor fldt sub mov xor mov outsb or sbb hlt sbb out imul (bad) pop outsb ja sub fadds xor addr16 fldenv or gs push scas (bad) pop mov add dec in lahf pop (bad) icebp outsl push mov mov mov xchg push imul stos mov popf pop jne and add cmp add mov imul fisubrl addr16 push mov ret mov loope or jecxz scas dec mov cmp mov xchg dec pop xor punpckhwd addr16 mov stc iret mov in out aad mov mov mov fwait movsb push mov cmpsl mulb inc add cwtl gs (bad) int (bad) jnp or loope cmpsl pop cmpsl push sarb lcall pop jmp jo jnp daa icebp cmpsl adc out jp pop mov movb inc stos mov je movsl rcrb lahf inc mov push cmpsb and inc ret loop jno xchg arpl sub fistpl push scas in cs call in pop fadd fistp sub push add jmp or mov sub add cmpsl mov outsl mov xchg js mov mov jbe hlt jns aam pop call and jge (bad) ljmp insb pop out (bad) pop pusha mov sahf in test adc roll or es lret jmp add pop in add jl cmc insl shrb fiaddl inc adc test xchg into pop les divl ds dec sbb add enter insb outsb cmp lcall mov sbb and popa (bad) sbb movsl das add pushw dec push inc xorl (bad) xor nop loop jge adc mov imulb push lret push adc jae xchg lods sti jge xchg rclb fdivrl movsb pop (bad) pop sub movsl jmp jae push dec iret dec cmpsl push dec leave stos les sbb dec or push aam popf mov mov sub test movsb nop jge dec mov xchg insb or mov mov cs inc data16 (bad) push mov pop adc mov aam fs xor enter xchg fsts neg ficomp push stos loope enter ret cs popa fistp scas leave clc adc roll mov pop xchg fdivs jns push pop lret dec insb push or xor xor icebp mov out pop mov dec adc cld sahf jp inc aad rcl jl outsl cmc jp test popa mov pop mov cmpsb leave xchg xchg inc test cmpb imul mov lods xchg pop jecxz bound inc fistpl mov fimul push mov seta in mov fs mov outsl rcl ret sbb cli (bad) repnz in mov jg sbb js aas popa mov test adc mov jno pop xchg jnp add or jge aas aas jp push adcl call inc push out adc (bad) in adc or or in scas lcall movsl mov mov (bad) xchg data16 lea test (bad) xchg (bad) addr16 add adc iret cs push (bad) jge and jge or leavew rcll xchg iret mov push xchg push loopne jo ficomp rolb jnp call or push sbbl inc mov cs jg jne inc or pop ret xchg cli push xor (bad) sbb pop or in mov aaa int shrb scas lods or (bad) lods dec jnp stc loopne lret sti arpl add pop jp aam push dec out daa jnp mov xor (bad) lcall aad xor push push xor sub sbb push arpl lds mov sarl clc push jmp cmp pop cwtl pusha lds mov push add insl mov dec call mov adc or scas es (bad) in imul pop cld insb dec jmp leave add push cli adc imulb test sub in push fsubs jmp or out fisubr (bad) sbb fdivl jne cmp sbb inc dec repnz adc mov xchg rcll aam xchg jmp mov cmpsl mull imul cli mov push clc jbe and pop cld ljmpw lock sub and push dec push repnz popf pop insl clc cmc and fstl jge cmp fisub into xchg pop testl jl sub mov cmp push aad inc xchg xor inc iret xacquire dec push jmp (bad) out pop fsubrs jo jb cmp bound add out jmp mov xchg adc cmpsl xchg popf dec je or loopne lods addl lea (bad) scas pop aaa sbb cli pop inc push cmp loopne (bad) int3 or dec aas shrl sbb adc in pop ret add outsb idiv cmp mov int3 ret push xlat pop xchg inc mov test and and sbb test packsswb scas les push xlat fldenv inc mov mov adc popf sahf and and fiaddl les jmp pop jp xor cli and push popf mov addb sbb arpl jle test xchg and cmp scas cmc out xchg pop lcall adc dec cmp sbb add pop xorl push xchg mov xchg mov xchg in inc jle mov mov dec add mov xor sub mov dec jno pushf mov adc pop mov out test push pop dec sbb mov dec push ret mov push stc pop imul push (bad) pop pop test (bad) outsl sahf xor stc in mov and and lods lds add stos les pop cmp cli jge cli out cmpsl mov add aad cmc mov add fwait jle sahf xor push jecxz push dec push repz dec insl mov insb cwtl clc dec popa lods lcall ret add stos les inc in stos jge mov cmp inc loopne mov (bad) mov push pushf insl fcomi push jmp repnz jmp mov or xchg inc pop push daa (bad) cmpsl pusha xchg jmp jno jno jbe sub leave in loope mov inc leave jle jmp jmp push push sbb mov sub pushf outsl gs je leave das push sub (bad) mov add je push cwtl and arpl adc cs fidivrl inc hlt aaa cmp les cld rolb jecxz fs jnp je and adc mov mov jno clc aad dec daa mov mov sbb mov dec in std les ret and shrl loop jl dec ret xchg shlb adc push aam mov ss unpckhps and imul xor push aad (bad) aad jecxz sbb imul fidivl xor adc js add sbb popf fsubl pusha sti push pop add mov in (bad) test mov (bad) and cltd out popf adc cli sub enter lods cmp in xchg repz xor subb scas fbstp repnz stos mov mov inc repz out pop fildl dec cmp xchg test xchg and (bad) sarb cltd add jmp lock or sti push ljmp fnop push jmp fldenv sbb mov pop ljmp cmc hlt lcall lock cmp inc inc cmp into loope xor push in hlt sbb cmp pop cltd sub pop sahf inc fnop imulb mov rorb mov push pop fs mov (bad) jne daa pushf adc fistl and xchg stos lret pop popa dec mov int3 incl adc ja lock push daa idivl pop scas cltd or lcall test jmp pushf lods dec cmpsb dec mov adc cmc fs pop fiadd movsl jmp jno pop repz test inc rcr cmc sbb imul repz xchg dec push xchg cld rep sub push and pushf cli cmp pop sub sub adc out insl cmp xchg (bad) mov cmpsl mov push mov dec xchg cmp mov mov outsl aaa ds jp jg jbe in or inc repnz les mov out stc pop and push stos jb push pop xchg sub jle ret in add sbb movsl cmc pop scas rcr sub (bad) jo loope ret ljmp push inc movsb (bad) sub push dec dec or iret xchg scas lods push mov out insb clc jns add and jg (bad) sti jge mov fsub aam aam in out ss clc nop push jns std xchg lcall aam mov xchg xchg loop andl sbb aam xchg sub lods xor imul mov dec mov mov inc xor and add sbb movsl int3 subl fcompl dec lret sub in adc push bound movl or pop sbb out xchg lds hlt lock aad fbstp xor pop aam jl rorl idivb stos ss imul add pushf mov xor adc rcl xor fsubrs add dec cmpsl adc into arpl jae (bad) call mov (bad) mov fiaddl cmp pop xchg sub add xor movsb popa push fisttpl mov adc ret inc cmc dec xchg dec sub ss hlt mull in pop cmc fnstcw cs mov popa dec mov pop xorl movsl jne mov push pop mov data16 jnp ljmp mov std add nop das or mov mov imul pop inc inc cmp xchg in aam inc stc push scas and dec (bad) int dec push pop jmp mov movsl cmp loope aaa lock jl and inc push mov out mov and insl xor fldt jge das inc pop adc popa imul dec sub add xchg daa add inc sti ljmp or xor addr16 lods pop adc int3 pusha xchg sub cmc and push std add insl push mov jecxz pop loope arpl sub les xchg dec sub xor ret mov inc bsf pop nop add mov sub pop pop mov sub push and (bad) mul jnp addb cs imul ret push and (bad) aaa pop and imul (bad) adc ss mov jne bound push daa dec xchg nop xchg push ds dec imulb sbbl mov in push (bad) sbb sub pushf call xor cld (bad) xor adc idivb dec test mov add (bad) mov jo push mov inc orb sub rcr push add ja cltd es gs and mov stc icebp dec inc lods pop imull scas int mov mov lret xchg or push xor pusha dec jl jns cli lods mov cltd cltd inc jle or sahf inc xchg adc aad jbe push push addr16 out lahf lea out test mov test sbb push out sbb mov xor cmpsl mov popf mov mov imul xchg addr16 mov mov xorb mov popf fucomip mov stos (bad) ret lret or jmp lock test iret fstpl xlat repnz sub sbb test pop es ss sarb cwtl mov xchg notl jnp mov cmp dec mov xchg and inc adc and sbb or ret inc inc inc out xor sbb lods adc out dec pop xor mov add push xlat xor sti inc repz jecxz andl aaa lret mov cmp aad pop leave std ljmp push js mov pop dec aas jo jne push sbb pop enter or or je movsl pop arpl sbb ljmp test call pop jns les push or movsl or clc push into pusha sahf inc pusha xchg push adc pop (bad) jbe nop xor into ret xchg jae lea imul (bad) dec scas mov fist call mov dec shll (bad) push dec lahf sbb adc mov leave sub or mov nop fistpl es cltd jnp pop lods jno sbb cwtl jbe fdivs mov sbb lret push mov or inc adc adc push into xor jle in add std xlat adc jne bound jp jmp stos mov cmpsl and nop mov jp sub push bound push outsb pop pop fwait xchg xchg and aad jno xor in hlt in clc sub ss push xchg jle leave xchg mov mov and push cmp scas mov fnstsw lret dec mov inc call mov push scas sub xor data16 jne mov lahf sarl cmp mov mov test clc stc lods mov dec add push pop add in pop mov pop mov xchg push pusha cmp test int out cmp cs out addb push jbe (bad) jns inc aam push mov or cmp das xor stos add mov push aas sub cld fstpl shr mov fnstsw cmc cld out pop (bad) adc adc fidivrl jnp xchg lock pop shrb sbb dec outsl ficomp (bad) xchg in add int sub enter xchg cmp pop das adc movsb push cltd js xchg push cmp push dec in lock add lods jbe or cmp aam sbb adc lds jnp inc or sahf push repnz add xchg lret jge push enter cmp mov or mov fnop sub mov (bad) movsl jbe mov jmp out dec jp lods inc and js ljmp pusha xor dec les mov adc insb int xchg cmp (bad) test bound out jg pop jg xchg or xchg es cmp sbb jb mov (bad) repz mov sbb sbb pop mov adc out mov ror jne movsl push imulb xor (bad) xor popf cmpsl into cmp (bad) ret add stos div aam or jmp jns rol popf jg (bad) fistpl divl xchg cmp aam (bad) pushf (bad) dec (bad) setg dec outsb or lock xchg ja popf mov mov cmp icebp insb arpl jle jno push flds push dec cmp mov push adc daa (bad) jmp (bad) lahf scas aas push cld mov push push sbb ret mov sub jo test (bad) push movsb push imul in call add arpl mov push out push inc sbb cli sbb jmp lods sarb std stos jg mov add stc xchg jns inc jbe addr16 repz js cmc (bad) cmp (bad) leave push rcr jmp les cmp sbb arpl ror mov stos imul lcall adc dec inc push mov mov outsb fstp in (bad) adc add push lcall mov cvtpi2ps and sbb nop call adcb (bad) xor lods and int3 fistpl mov divl mov mull out iret jb add push xchg leave cwtl or sbb insl sub fwait xchg (bad) (bad) mov dec cltd or gs push xchg mov test mov xchg lds mov insl insb aam sbb insl clc pop xlat imul pop test data16 mov aaa (bad) sub pop push sub xchg dec cs cli adc push pop loopne pop xchg xor dec lcall cmp or push mov mov in (bad) aad test (bad) jnp in mov xchg lock rclb mov test out push shr inc push leave loopne push pop sub xor xchg test cltd insl clc ss pop (bad) push push fidivr sbb sub push pop fdivs rcrb inc add pop aas movsl mov (bad) je adc int3 xor adc and xchg sbb cmp mov dec lock push add leave inc out lahf push in daa jmp jmp mov xchg stos pop xor rcr outsl ret push lahf lahf mov aaa fcmovne sbb jecxz mov fsubl lret jmp scas or (bad) pop dec xor or data16 and lock gs ffree mov jge loop fsubrp jp test xchg and mov mov mov mov loopne or arpl dec addl xchg lret push xor insb xor pop ffree cltd lret rclb loope jg (bad) ret mov insl jnp inc pop ljmp jge std mov jns outsl enter pop (bad) mov int3 jmp lret xchg add jbe ljmp cltd add pop cmpsb (bad) lods stc sahf dec and inc xor mov imul inc leave mov cmp xchg pop or lds (bad) out pop out jns xchg xchg and call cmp fdivs xchg dec popf pop dec mov lret mov push daa lcall cmc dec repz jecxz aad out or loope hlt or and sbb test mov insb (bad) rorl popf das sub fs ljmp pop adc ljmp push add sub xchg aas out mov add repz jge push xchg repz mov dec jnp sti (bad) popf cmpsb cmp (bad) mov popa in icebp test pop and (bad) jne out dec mov jno push dec cld sub (bad) cmp sbb in call cltd xor fcoms xchg scas mov ja pusha test jb jge cmc sub sub test dec les and fcomp dec (bad) jns mov adc movsl decl fsubrl push sbb movl movsl (bad) hlt cmp and jg bound and into test scas mov push and lret roll ret mov cmp add sbb ret enter sbb repnz hlt or gs pushf mov pop imul push addl insb popa outsb sbb dec scas mov pop in push test mov xor inc (bad) addr16 (bad) sbb fcoml loope das jl push or mov fldenv (bad) stc push sbb stos mov test pop pop push or call or dec ret shrb (bad) aad mov sbb pop int cltd out dec lret mov movsl and clc sub addl add shrl test fstpt pop rcrb xor mov add aad pop pushf pop add cwtl int cs imul adc in movsl pusha mov aaa cwtl ja sbb sub jno push dec push idivl and mov and lahf fild mov hlt out fistpl pop pop (bad) imul fnstenv jae test std lahf pusha mov les sub stos and nop pushf sbb mov mov cltd mov cwtl gs in jg adc lret push mov ljmp cmc mov mov mov and sub mov fiadd divb aas or cmpsl fcomps xor in xor push adc addr16 shl (bad) mov mov subl dec (bad) jo das mov jg inc hlt dec push pop daa adc pop fwait (bad) add (bad) dec xor push test mov mov nop xchg push add loope imul xlat popf mov xchg pop add in mov xchg fisubrl shll aaa mov lahf and leave fiadd and sti fimul loope and xchg pop push inc stc int leave fs jae (bad) jne in pop sarb (bad) mov mov int3 or jnp stc cli and mov cmpsl std sbb cs adc xlat mov ret aam (bad) mov addr16 fsin sub mov lock xor cmpsl mov movsb test inc push or bound aaa stos lds inc repnz push jb mov call mov mov inc mov sbb push jnp sbb ja or lret in xchg in pop pop mov push and fmulp jno jno push push dec call test pop jmp mov jmp scas rcll cli cld mov in push sar xchg and dec mov out pop push cmp jno sub cmp mov test adc notl xor repnz inc call and adc adc lret fimul jl dec mov xchg js jl mov scas and pop sub repz lret mov pushf pop mov cli rorl xor cltd (bad) enter stos mov leave adc loop push and pop add test inc sub mov test or mov pop or ja xchg cmp mov aas jge push push test xchg dec and icebp mov aam aad sbb out mov push imul inc adc std push ss mov cmpsl mov fsubs xchg push fdivl in or adc jnp imul inc mov mov sbb ret (bad) insl mov lret dec add push jnp mov cs mov popf pushf movsl ss xor insl xor add stos das mov sub inc xor jne icebp xor inc loop nop mov aad mov repz xchg sbb out lods inc fnsave popf and mov dec test (bad) aaa test icebp (bad) in mov or dec aam pop jp fimull cmpsl pop add pop iret dec pushf pop clc lock jae or cltd in sub xor pop rolb or into subl mov add pusha fcomi and fsubrl out test sbb inc jae call add ret fs adc ficompl dec es orl dec cmpsl cmp stc xor jno fisub scas cmc insl push adc sub push ror inc into fnstenv push dec add mov into ljmp mov mov adc ret loop mov aam pop add dec pop aam push pop jmp add jle aaa jnp,pn lret jbe imul sbb pop lods or jb jge sub and push leave out std cmpsb pop js inc cld sub push push push pop sub lds or adc fnsave fwait sbb fldl movsb and mov test decl mov out inc call (bad) stos int xchg or (bad) mov inc cmp dec (bad) sub jb loop mov inc mov push and cltd or add sti xchg movsl sub jae fistl xor setbe sbb pop jbe jae pop cld or mov ljmp call dec pushf add pushf leavew mov mov fstps jg (bad) xchg in inc data16 cmp and ret and icebp cmp pop mov arpl rorl aam push cs mov nop mov push sbb cmp (bad) mov dec mov ror clc subl lret adc outsb popa jae or jne cltd xchg xor cmp or fnsave loope imul mov mov rol (bad) pop ret sub xchg inc pop ret pmaxsw sbb adc sub bound addr16 dec sahf jnp cmc add push adc adc cmpsb mov jno xor push sbb push loop sub add mov fldpi push adc ret push fwait movups add sub inc loopne inc orb mov rclb out add add out pop push inc add aad or loope sahf cmp fwait sub mov lods aaa push xor and push mov loopne pop fwait and shrl adc nop jg inc loop data16 in sti lods (bad) jno mov (bad) pop das and lods icebp mov xor jecxz jb pop lret pusha pop adc fs andl test xchg jge inc lcall sub sub jp mov rorb stc inc lock mov push rclb int3 inc adc add or and dec xor clc sbb or mov adc push jo add mov xlat sbb int3 je jecxz mov pop ret xchg sbb add mov stos add enter jl fwait insl push subl mov loop inc mov sub sub and sti xor or mov test (bad) rcl test jmp xchg dec push dec into sub jns sarb xorb adc ret dec and ficom and dec dec sub sbb sarl xchg and addr16 imul pop dec es fbld sbb les add mov add xchg movsl or xor mov scas ds adc sub loope and adc cwtl xor repnz push push adc lods in sbb mov popa leave cmp xor cmpb mov iret push mov xor cmpl mov dec and test mov dec movl aaa dec sub adc pop jno adc mov or popa stc push mov data16 loopne add mov lds in jo cltd and orl sbb dec xchg or imulb mov sub mov rolb and dec gs fs xor scas movsl out push fiaddl (bad) push popa ret lret pop in ror loop add xchg push jmp mov xchg and loopne les inc (bad) or je and and jae push adc scas sub inc lret mov cmc push frstpm(287 aaa xchg sbb dec lods outsl gs lock xor mov jmp mov test sbb movsl add mov (bad) inc xor insl (bad) stos sahf pop (bad) sarl push (bad) inc cmc dec xchg fiadd mov cmp pusha mov lods int mov add ja (bad) jns ljmp in sbb loop mov sbb sub cwtl cmc dec jo loop imul mov imul and gs mov jne test jge adc movsb outsl stos out lds aas (bad) jne inc push cld leave adc jp xchg shr push dec lahf pop dec nop addl cld pop sub or pop jns fldt insb inc pop cmp lret xchg popa xor lods adcb aaa lahf sbb clc xchg pop sub lds push rolb sub (bad) jo loopne sub mov dec in scas cld or pop out cmp cmp pushf pop dec jmp xchg jae pop and jecxz add sub adc cmpl adc repz dec mov jb mov inc mov pusha sbb mov test mov stos lods adc sbb xchg bound sbb mov push mov cwtl outsb insl sbb insb (bad) xor pop or stos je test mov cs jae je pop xchg mov roll in and arpl scas addr16 nop mov mov push xor insl add or dec sbb fildll xor adc push pop cmc add jo shlb scas push pop daa mov repnz add test or aam xor adc scas (bad) xchg out dec ret xchg mov sub jle add jg mov xchg dec pop jae cltd mov sbb xchg mov int stos adc mov mull lret cmpsb stc aam js mov ds mov mov push scas sahf sub mov inc std push or icebp pop xchg xor jo pop inc inc xchg clc ja add (bad) and sbb ret ss fcompl dec (bad) int3 outsl test mov xchg inc or sub iret lcall mov or mov fs or cmp mov insl les add pop pop cmp imul xchg mov les dec dec push hlt xor mov xchg les or (bad) mov outsl mov mov xlat (bad) fistpll adc jmp int3 pushf imul xchg and (bad) and dec cmc popa jno cmp test fs pop sub loope sarl jns je rol test sarb lods inc xlat iret xchg lret js mov mov sahf adc loope vcomiss ret xchg jbe mov jle mov xchg pusha or aaa icebp cmp fcmovnb push push xor inc fiadd lods ja in push bound orb mov push leave and cmp clc mov push add addr16 sub mov leave xchg enter movsl pop xchg fbld dec cmp std jge fwait adc push sahf cmp cmp mov cmp fsubrl shll decb std jno fisttpll sbb lods jmp iret cltd cmp ja inc mov sub xor mov xchg and ljmp imul lds jmp sti dec je xchg rolb out xchg ja cmp cmpsl push xor mov xchg lret mov pop shl and clc dec dec push mov ret add out adc jae add xor sbb lret lods cmpsl and sub insb insl sub pop sbb add mov pop in sarb adc icebp sbb or fbld pop push dec bound sbb es fld or fisubr call or cmp out inc rcr adc mov sti fstpl pop xchg loop sbbl in cld mov icebp pop sub mov ret sub push fwait outsb fcomp int3 aad scas cwtl dec es jge cmp mov clc das gs push stos daa push mov jge les mov into stos xchg mov mov xor add cli cmp stc mov adc subl out cltd inc jg mov outsl mov lret clc adc jb xor mov dec nop movsl insl ss jb add pushf movsl lea rcr and (bad) iret fidivr cltd lahf pop daa mov mov ljmp repnz jmp (bad) ja cmc sub jno mov push cvtpi2ps pop dec add or enter int jne jo lcall jae leave adc push aas inc out push cmpsl xchg pop lods repz push inc push fadds ret mov int3 sbb into aam push in add dec adc out call cmp outsb push xchg cli push pop add fist cwtl mov xor push nop enter dec adc std les mov sbbl pop out jg nop jecxz outsb adc movsb lea int gs out pop mov add cmpsl gs sbb ret int sbb cmp fwait xor shr pushf inc cmp adc mov fwait push cmp ret cmp xchg test sub push inc and cmpsl mov cmp sbb add int cmpl mov fst pxor push vrcpss jbe mov (bad) gs in dec ror xor (bad) lods mov xchg es fstpt clc insl jne out xor pushf in outsl test loope pop dec popl dec sbb mov pop dec jg push push test mov roll mov pushf in pop js jnp and sbb push add adc and (bad) fdivs outsl or rol mov cwtl inc test lods push mov dec sahf cli outsb fld1 sarl xor add jno push cld rolb sbb leave dec pop test mov adc outsb sub xchg aas pop jno jle sub and jle push pusha dec inc int3 jne lods adc nop jge sub mov jg dec adc cli inc push out cmp inc inc adc mov xorl push mov insb andl lret outsl add mov and jnp fsubs sbb ja test adcl xlat fmulp or xchg out push xor out into xor push lods fwait movsl arpl imul ljmp vpunpcklqdq repnz jp (bad) cld push cmp (bad) push int3 movsl mov sub stos std call inc and cmp inc mov out inc sti mov cmc or cmp ja ss shll adc shll sarl cmpsl sbb mov or cld lcall pop sub repz sub enter fwait sbb mov insl push add mov test or mov cmpsb push inc jo data16 fist daa adc iret (bad) mov pop push out ret sbb repnz pop or mov outsl arpl pushf cmp in xchg dec inc imul inc xchg rorl jp (bad) and es lahf pop das adc clc fidivrl clc jge xchg adc in pop aam add pop push in repz (bad) xchg mov cmpl jno dec lret mov xlat adc popa nop add test je fimull insl inc xor test shlb rcll and and adc repnz lds lcall mov lea pop pop inc sub gs push insb into jb adc data16 out push cmc mov ret push sub mov (bad) jb ja bnd mov (bad) xor aas dec pop jns (bad) jp dec xchg cmp mov cld jp mov dec data16 lret sub jo fadds adc jne insb mov enter icebp inc test (bad) repnz sub and popa fistpll and xlat loop (bad) mov pop xchg dec dec jb sub in and cmp push xor pusha mov pop stos cmp imul add inc push cmp jnp and (bad) leave aam or inc xor jg je clc push pushf in sbb mov call call push jge mov adc dec pushf bnd jb mov dec repnz pop test jp adc or iret loop xchg xor outsl lods mov lea jb push mov xchg push and fsubrs xchg (bad) fsubs into clc mov add xchg or sbb pop or sbb push lds (bad) xor pop iret jge dec loopne jns adc and rorl test or push call pop adc std sbbl idivb movzwl arpl mov lret jae icebp stos jge mov ret insb jne iret and sub into or jb test jno cmp movsl cmp xchg inc mov jb popa xchg rcrl xor lock xor push nop and sti mov pushf pop ss insb mov fimull ficomp enter fwait pusha popa xor adc xchg inc test js xchg out sub jnp test int3 dec test icebp cmp fildl jmp pop pop and pop sarl sub cwtl sub frstor js lock test ljmp pop ja xchg sti pop stc mov push ficomp pop jg cltd push movsb inc sub test jl jl sahf loope fldcw lcall arpl sbb jnp cmp inc loop mov sbb nop in out fwait mov or inc stos and ret xchg dec cmp sub into daa sbb jo rorl lds inc sbb dec clc xor mov les and clc mov xlat push popa sbb mov fwait mov fsubrs scas repnz aaa repz int ret sbb fsub (bad) mov dec push jecxz loopne push mov scas ja fcoms fcom sbb test pop jge sbb jmp in xor or in leave nop cmp addl adc sbb mov icebp sub je mov sub imul leave sub push sbb cwtl push lds and fcmovbe popf in shr aas das push cmp stos sub sbb inc je lcall int ja jecxz jle fnstsw mov lret je fwait add icebp jb int3 fisubl (bad) xchg xor hlt cltd mov mov loop dec cli mov xchg stos gs mov fwait inc movsl scas sbb scas fwait mov jbe,pt das or lret dec sub divb (bad) fsts jbe pop into jb fcoml mov loopne mov or push outsb push push repz enter jl mulb mov dec lock scas sub les add jne mov push dec mov xor test mov cwtl (bad) push repz cltd iret adc enter cmp inc dec and push sarl iret ffreep adc ret xlat popa lock movsb shlb xlat hlt pushf pop fisttpll leave stc mov pop (bad) andl (bad) (bad) fwait adc push sar dec cs push push pop lret push pop jl xor nop es popa mov jnp xor aaa mov inc icebp fistpll add in cwtl ret mov inc pop in lea mov movb xchg hlt sub dec leave mov dec dec dec sub int3 in cmp and sub (bad) cli into es sti adc lcall (bad) xor aam or clc out inc or add sub dec js push cmpsb movsb jns mov dec or xor or scas pusha mov mov icebp sub (bad) lods pushf out and popf iret ficomp (bad) sarb push loopne sub sbb sahf adc jecxz sbb cld addr16 je in jae add pop lret ds ror in pop loop adc pop fsqrt xor std cmpsb ljmp and mov shll fmuls adc mov insl sbb jmp fmuls shll cli mov xor in outsb cmp mov bound add insl jb push add jge dec dec sahf push push rclb cmp fistl dec jle popa rcll cltd inc jnp mov xor cli test repnz mov push pushf enter jno cmp mov and add test js mov fnstenv mov ds xchg cmc into lds scas (bad) dec xor adc add pop jg adc jne sahf aad xchg jge,pn jp lods stos lds xchg mov inc das lahf inc jecxz mov add ret ret lret dec add cmp xor add cmp scas dec test dec or insl sub addr16 and aad or sti lods rcrb mov loop mov in pusha adc mov sbb ret cmpsb dec lock mov jmp int enter jmp arpl ret pop leave fsub daa lcall cmpsl leave pop andb and or sub xchg mov xor sahf pop sbb (bad) xchg clc xlat (bad) and sub adc add in pop push push addr16 jae int3 dec adc pop in movsl cmp mov sbb xlat js cmp xor fdiv inc ss inc test inc mov dec (bad) popl mov mov pop xor test in scas or in das inc fwait ret mov sub cmp rcpps lret cmp xchg push jns les push clc in cmpsb sbb enter and xchg dec mov scas mov sub lret xchg inc cli cmp (bad) je pop lea add mov fldt ret (bad) in mov ret mov sbb mov in mov in es jae push adc mov push jmp rcr inc lret sbb in sarb mov adc and pop enter (bad) sbb mov ficompl bound iret addr16 add pop push (bad) ja push (bad) sbb repnz xchg push lret or push add or je (bad) clc jp sbb pop mov fstps adc mov jge xor fs or scas mov mov pop fbld lcall hlt cmp xor xchg sbb jno pop mov je jne insl push mov out loop fcmovu pop mov xchg adc adc lahf into add ljmp or rolb mov in dec scas inc xchg adc out repz stc cli pop sbb lods cmp call adc mov or int (bad) xchg outsb sub mov nop mov adc scas stc sub nop daa mov outsl mov push pop dec popa (bad) fldl sbb arpl hlt or jne cmpsl sarb inc stos pop push and ret out out xlat pop mov ret out cli (bad) arpl ss mov mov test xchg xor fcomi mov xchg add out dec mov and pop sbb push push (bad) gs sarl mov stos rcrb gs aaa mov mov jg stos nop mov mov fstpl inc dec xlat sbb sub sbb and mov sbb adc push icebp sub lock es push sub gs inc fnstsw xor jl in aad pop sub push mov idivb subl je popf test xchg mov push mov adc push lret outsb add loop and pop into mov lock imul pop sbb xor scas jle fcoms lea out mov inc das rcrb fmuls pop add cs fistp ss in jbe xchg xchg cmp xchg xlat cmpsb in test xchg add jbe push jnp mov and sub pushw loop out pusha daa sub (bad) push sub notl jmp insl sbb in mov call xlat out cmpsb mov sub sbb repnz std orl sbb mov cmpl pusha add out sub pop sahf add sbb fisubrl lret rorl jns sbb lret or lods mov pop int3 push push push or lods pop lds sub cmp lods sar ret mov xchg cli cmc (bad) imul add and stos mov (bad) imul lcall mov aaa mov pop add inc fcmovnbe insb loope pop in stos inc nop lahf hlt in ficoml test je jle cmp test stos imul cwtl es mov mov lds test aam jae jge mov add movsl test subl inc out inc mov pop xor (bad) jo cwtl fldcw fisubl jp repnz pop and jns mov add fdivrs dec inc (bad) jle and mov and out test jecxz inc xor and xchg mov jg (bad) push mov add (bad) (bad) in cmp js ss (bad) jmp jo iret dec (bad) mov add mov fcoms fisttpl repnz push adc mov movsb pop sub and loop (bad) lahf adc push dec and jl ret int3 mov scas push push or clc in push negb loopne dec jle stos xor or sub xor cmp lods push sbb dec hlt mov mov xor sbb push shrl out pop adc push xchg inc int repz arpl pop lcall js shrl je or xchg (bad) icebp daa fs adc lea push push scas arpl xchg repz xor mov jl,pt (bad) ja aam lcall test fstpt jmp jnp mov lret (bad) aam fiaddl mov scas add or inc jnp pop cmp push popa fs mov shll cmpsb sub fadds xchg xchg lock inc mov mov stc mov fs lods jb loop cmp mov icebp inc dec repz outsl shl cltd jmp xchg cwtl push and jmp out outsb pop sub mov and scas mov movsb mov es sub xchg dec bound shrb arpl popa mov fcmove sub pushf xchg enter cmp jge mov fadd mov rolb xchg push (bad) (bad) dec sbb jo mov (bad) or add sbb or add scas jg or sahf in add popa adcl fs into data16 fistpll and and std inc mov movsb jbe mov nop sar sahf loope xadd sti test loopne scas push (bad) mov sti push mov in dec stos xchg adcb jns hlt sub scas add and popf sbb popa jl data16 pop ret jg push xorl scas xchg cltd push stos push in xor dec inc in es test movb or adc ret cmp and xor cmp fdivrl jecxz dec mov adc into sbb outsl in xchg push ret mov sahf mov stos push adc mov orb mov dec ljmp leave inc icebp js outsl les xlat xchg and jbe stc test inc pcmpeqw lock or ret xchg jmp leave lock fisttpll nop in lods into sbb cltd mov aaa and add cs das lds xlat roll hlt mov mov cmp mov fimul jecxz xor (bad) dec jg out push (bad) push mov mov sbb add jnp js iret bnd mov mov xchg push xchg hlt sub aas push daa bswap nopl icebp fwait ret loope sub fnstenv xlat insl sbb pushf or out jp mov cmpsb jl mov dec (bad) je lds cmp jne adc sub push push sbb mov jb les into cmpsl (bad) fstps fwait dec lcall xor arpl imul mov add leave imul mov pop xchg cltd fmuls out jecxz cli sti cmp push sub add cmpsb add adc mov lcall pop je pop in pop xchg imul fst cmp arpl mov xor outsb les and iret xchg fdivl fistl fldcw mov fcoms dec sub inc mov adc add aam repnz pop sbb std lock aam outsb sbb sbb dec or jmp lcall xchg ficompl mov xorb (bad) imulb iret ret mov imul pop js pop cmp inc nop ret stc push cmp cmp xchg jno xchg push adc jp pop test jecxz sbb push push xchg xor and js jno arpl mov pop jno xchg outsb rcll inc lret lods xor addl jb mov int pop mov sub movsb or and in ss mov (bad) sub popf out and dec out mov inc sub and adc mov js jbe push and ficoml xor xchg push inc push sahf mov divb push imul rcrl lcall dec pop jmp nop insl mov and sbb push ss jmp push bound ret andl outsl scas cld xchg mov stos pop push xchg daa (bad) dec push xchg or sarb add test (bad) sbb (bad) stc add mov data16 mov rorl jb repz decl jle xor fdivs ljmp fsubrl push dec cmp movsb push outsb pop pop add gs insb int dec dec xchg dec cmpsl arpl ret mov (bad) (bad) cmp ljmp sahf mov jne mov or mov mov daa loop adc xor mov insb sti stos pop je xchg lds cwtl mov pop ljmp push cmp or xlat (bad) cmpsl in jecxz and sti pop cmp mov add mov pop outsb dec cld cmp sub add repz mov xchg mov push (bad) adc sbb pop iret cmp xchg cltd gs mov mov hlt out (bad) in cmpsl push and mov sbb jno pop (bad) adc into mov in cmc or sub movsb fwait shl and or mov orl sbb jbe xchg and lahf inc cwtl mov scas mov (bad) repz and mov lock ret out test pop lods add les enter fiaddl out in or loopne push test adc and fildl outsb add (bad) repnz leave mov xchg (bad) push jo pop mov repnz and sub inc push test jo dec push scas es jmp cmpb xor fnop cmp out xchg movsl shrb sbb test out push int call test xchg in (bad) mov testb push fstpl adc pop fsubl inc pop addl mov and ljmp out mov into mov (bad) dec or aad fwait jle loop fldl jecxz aam test mov lods adc test xor inc pop dec in imul shr push adc fbstp pusha ret dec xchg sahf jbe shrl or xor cmp leave (bad) xor fs aam iret sbb aaa daa and mov dec imul loop jle mov test ds (bad) xor out and push add cmc xlat sub (bad) mov mov scas aad xor std mov aaa pop movsl cmp mov jmp int3 cmc mov or mov cli and inc cltd inc sbb xchg movsb dec xor and je js das shr stc or add dec add fsubl cltd push dec cmp pop sub lds std js std sbb scas add (bad) adc mov jnp cmp jne stc mov inc and dec test adc add mov rcll inc fldenv lea pop out aam or inc adc pop add mov stos mov jl (bad) daa in insb (bad) iret fistp es sub or fcompl and mov std enter push add cmp mov leave cmp sti sub insw push inc mov (bad) pop xchg (bad) push daa add (bad) jne pop pop cmc jmp cli cmp jae aam add cmp mov movsb push lock xor out sbb sbb movsl sti push jae xchg pop js lret mov ja (bad) clc cmc pop call add cmp jmp and push mov mov insb sub mov xchg pop in gs xchg loopne push in fsts add js cmpsl jo jp fimull inc lods imul addr16 in inc sbb sti dec stos mov imul and or stc adc ficomp ret or fs pop sub lret xor outsb xor ljmp lahf cmp (bad) cmp sbb sbb adc sub and movsl xor movb xchg or xor mov in sub bswap fnop mov cltd out loop jmp mov cwtl out (bad) fldenv sbb cltd es std mov jle cmp xor adc repnz jo inc xchg push pop shlb jb xchg sbb inc mov mov les xchg jle add or cmp pushf mov adc lea xor mov inc xor in (bad) cmpsl test pop mov mov hlt and xor test les pop mov pop mov int3 sub fnstcw lret shlb aam fist (bad) in add mov fwait icebp or es and pop and xor xor mov jbe fmul cwtl gs stc les mov out mov add pop cmp test and inc mov jo mov stos mov or mov arpl xor stos mov adc xchg insb fidivl sahf aas imul orl push cwtl mov (bad) cs sub mov push and test fcomps mov mov pop pop int std std xor lods xchg pop mov fbld (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz daa add jg pop cmp popa mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in fadd bound sbb dec lds mov mov mov data16 xlat pop roll xor add gs cltd in mov scas rclb mov jmp jecxz push push gs jmp and inc je in cmp ljmp inc mov mov jecxz dec adc jmp jge inc mov pop mov mov test stos fcompl insl fs lods and mov pop or xchg sar pop mov mov cmpsl xchg sbb and sbb mov (bad) xlat dec out jp sub inc loop inc in fnsave mov cltd or xchg jae and lods aas xchg les jne mov xor lcall jae popa sahf push sub notb lret mov lock mov (bad) cltd fist xchg leave stc loop inc pop sub gs rolb cmp shlb add xchg repnz in inc cmp popf xchg bound scas pop push push dec add outsl cs cltd push xchg pop cmc test movsb mov aaa lcall mov xor (bad) cmpsb sub ja jmp cmp cmp test movsl movsb lcall out inc sub pop add (bad) arpl jecxz xor mov aam xchg fwait lds or adc sbb and in sub xchg nop jns dec adc pslld (bad) push push push cmpsb jns in xchg (bad) jp xchg sub popa movsb pop xchg ljmp mov jp les mov mov xor cmp dec test lds stos cmpsl fldl (bad) addr16 inc push or out cltd and aaa iret jns dec mov div and mov lret mov pop rcrl inc out sbb push fidivl xchg stos adc les in adc in mov nop jb jno mov sbb test jl or or subl push test fwait cmp push mov inc mov and (bad) dec xchg dec cmp inc lea fisttpll (bad) sub mov es pop mov mov loop mov ficoml (bad) cli push dec fnstenv idivl xchg lret pop lock lret aam lret jbe xchg lcall lods adc mov (bad) rcll test data16 aam aad es mov ud2 aas les lret pop ret mov push xchg scas xor push add in push adc in movsl in iret ret push in add pop push sub cltd repnz test xor inc imul xor mov sub dec adcb mov mov add cmp xchg or cltd adc out dec push inc lret jmp or fyl2x adc fildl mov iretw fucom xchg ja mov xor std in std add into jbe dec jno pushl xor ret (bad) fnsave stos and pushf pusha adc imulb out cltd cmp xchg ja out stos add nop out int movsl mov add stos inc adc cmp icebp test cmp add sbb scas or arpl icebp fs push mov jg fcmove lea (bad) adc mov stos mov xorl shrl jg dec lea addr16 mov hlt jb mov xor xchg rolb repz mov xor sti mov xlat clc js push mov xchg add in dec sbb push in sbb dec lods pop pop pop mov xchg in mov int3 and out js loope aad addr16 fs cld aam adc mov dec fwait dec xor and (bad) movsb sub (bad) cmc (bad) dec inc add ljmp fninit test xor imul mov and and cmp mov and inc adc inc cwtl and into ret mov mov pop into roll inc je mov mov loop in dec ja hlt mov pusha xor rol cs outsl xor nop mov lcall inc cmp xchg cmpl mov jne hlt scas nop sub mov aad fwait scas lret mov lock sti mov insl int ljmp inc into xor jne mov dec mov push lret pop jno movsl (bad) mov (bad) mov pop imulb leave or pop ror push xor (bad) rclb lcall cmpsb push (bad) or test scas (bad) ljmp mov sti mov imul std fstl notb out jne xor jo lods movsl mov outsb fild sbb loope rcl js roll stos jecxz jns arpl sub adc outsb xor push cmp mov mov js xor stc int3 add mov ss out sub lcall xchg xchg (bad) je movsb cli pop nop pop dec repnz ret mov lea xchg or adc out mov mov mov (bad) mov cmp popf aas fdivrp in dec leave shrl insl push and push mov dec mov hlt stc jge and rolb jl xor mov fsubrs push xchg sbb iret test mov pop loopne fidiv insl (bad) xor or xor rorl pushf jp leave pop std or fcomps jne pop lcall rcrl cmpsl push jnp aad sub or arpl ret into mov (bad) cld xlat inc (bad) (bad) in mov lds lea sub movsb sub dec push xor jg cltd dec aaa mov loopne pop and stos add sub sbb frstor in xor pop ljmp ds shr cmp aad dec jle inc cmp mov sbb add nop pop push jge mov push cmp push bound mov in mov ds sub xor adc stc arpl jbe std dec dec pop call push cmp mov (bad) lret add or ss push arpl sub add popa (bad) rorb cmp xchg test jns lret xor rcrb pop inc mov pop mov push pop je in sbb pop mov popa add (bad) cmp push pop push sbb push adc stc in imul xchg leave divb into sbb inc aad fbld push hlt aaa mov jle mov gs cmpsb inc in aad jno lods sub add insb pop push std add je cwtl inc fadds (bad) or (bad) add dec faddl and mov repz jle fimull out (bad) push pop push loope gs xchg jb or mov test add mov pop add fldenv rcl xchg sub (bad) addr16 xor sub sbb push cmpl ja push xchg pop pop adc negb lret popa stos jns (bad) xor incb pop (bad) sub gs add repz pop pop ljmp pusha xchg mov pop ror inc das jne (bad) adc xchg (bad) das inc test test or cmp jo hlt adc insb out pop inc mov cmpl sbb js cmc cld ja mov (bad) mov jo mov repnz adc pusha push addl daa cmpl dec ja lds aaa push mov sahf (bad) lcall or inc ds in and adc hlt (bad) jb fistpll (bad) lcall sti rorb mov das xchg xor lock sbb in out add cwtl push lods adc mov std bound lret enter cltd push gs mov int3 pop inc aam sbb mov repz and mov mov pop popf shll sahf dec (bad) divb gs movsl sbb sub hlt jbe data16 pop int3 lods in jge aam fucom sbb loope rcll adcb in mov out jg mov push jb jne add push xor es sti mov add fisub cmp and pop xor sub insl movsl mov dec out mov sub scas mov imul data16 cli mov rorb addr16 pop mov mov jle fdivrs dec mov inc mov movsl sub (bad) dec nop insl xchg or arpl mov test mov int3 imul sub jg jnp or inc pop in fcompl inc inc repnz jae mov test mov pop xchg icebp pop adc enter push repz adc jl mov xchg jg (bad) jg cmc roll mov pop and xor dec pop cli pop pop cwtl add xor rorl test enter (bad) pop out fdivl jp out jnp pop cmp imul test xchg leave lea push xor jl imul test jbe mov aas mov gs cltd call mov out rolb in sbb push cld enter test aaa testb cld sbb inc cld push add mov mov xchg out sub fwait rclb dec mov rolb pop (bad) (bad) divl xchg call or pop push cltd cmp sbb lcall xor add dec sbb cs sub or jns dec (bad) jge test cld leave out push sbb jp inc fildl add jle pusha and repz stc aam cmp add and in xor add mov pushf (bad) xlat or or add out rorl fidivrl mov add cmpsl rorb xchg ljmp test push inc and imul mov mov (bad) into push add inc movsl dec add repz ror je mov jle lock xchg xor fidivr cs jge (bad) lea jne xchg fld cmp push daa sbb pop adc pop (bad) call test jne pop loop je ljmp in xchg repnz out or push dec mov jg xlat cltd pop scas psrlq cltd jmp dec xchg cmp loop or push inc in and xchg push jnp push sbb clc mov add jge lea dec clc gs xchg mov lods mov mov or ja loop ljmp cld sub pop cmpsb int inc out mov push sub mov mov mov test mov mov movsl movsl out add int popf xor mov imul sbb sub cmp stos sub inc loop jmp jbe fistl (bad) js dec mov xchg and xchg inc mov inc and jge mov pop popf inc addr16 movsl push int3 sbb xchg ficomp test cmp int3 adc pop xchg xor jmp jbe xor insb xchg push xchg sar dec and popa loope or aaa loope mov push movsl sub rolb mov or xor out jp add mov and add jns and jo adc inc push in sbb out mov pop inc cli pop out mov push aas (bad) mov int3 add push inc insl clc jp scas sub push pop aaa xor fldcw sbb insl test fidivl pushf cmp mov or sub sub inc mov mov jecxz lea mov and addl or in int outsb push pushf test xrelease mov cld sbb fwait es mov pop jecxz ljmp lcall xor sarl jle push ret mov jbe,pt dec out (bad) xlat sbbb push out sbb sbb test push push cli scas or xchg sub inc push xor loope (bad) pusha ja mov in cmp mov sbb and incb ficompl lret mov testl mov lods inc lods pop fadd inc stos inc out and lds xorl push and out stos cmpsl adc mov or lea adc cmpsl jo popa cmp scas stos and ret arpl dec ret xor lea int3 (bad) mov lea mov lcall sbb test mov test (bad) aaa xchg call fiadd fdivrl aad push pusha fisttpl inc adc data16 pop push adc lret or je and adc ss jae adc mov inc mov inc mov pop idiv jge stos cmp mov mov fwait lds sti mov ftst fldcw and and jbe dec jge aad (bad) cmp adc inc sbb push stc xchg jno (bad) lods and aas int3 jno incb lahf hlt aas repnz icebp adc sub mov fnstenv std sub cwtl dec mov mov push lret mov movsl dec shrb mov in negl in je sbb xor (bad) fdivrs fmull clc add adc std sarl dec add fs (bad) mov icebp int3 ds outsl clc pop jp and pop xor inc out push adc pusha pop mov dec call stos popa add adc mov clc ret cmp mov ss mov sbb test gs cmp jnp (bad) lret mov popa pusha xchg mov scas xor mov push xchg adc and fisttpll fwait push push cmpsb sub xchg mov dec sub mov push mov pushf dec xor sbb enter ja xchg icebp iret or (bad) jno int outsl lcall cs arpl shl pop rcll push mov and jb sbb mov sub mov test pop push repnz imul in cmp ret call sub es lea fsub mov icebp sbb imul add inc jp sub ret cwtl inc fucomp aaa push leave insl and fwait int3 sahf roll xchg gs mov xchg mov lret pop dec sbb out out into push pop shll dec xorl mov cmp cmp addr16 insb jmp fiadd inc int3 sub add insb sub adc test gs push lahf mov mov out arpl add push arpl loop sub aaa jne fldl2e mull xchg orl pop int3 add mov mov aaa int outsb inc and xchg arpl push stos jae push xchg push stos test daa or dec xchg adc xor les ja jns cmpsb mov dec rolb dec mov dec pop cwtl pop push xchg cltd addr16 repnz jecxz add adc sarl adc loope push fldcw xchg notl std jmp add jb cmp leave aad iret in inc mov aam ljmp and fwait sub (bad) (bad) cmp ret add hlt jbe mov out pop fistpl mov add cmp stos pop rcrb cld dec popf scas stos push push daa and insl push inc loope xor push ss notb mov leave cmp or cltd push mov or jns (bad) jg dec fwait inc je divb mov imul push adc and mov je std mov ds inc fstl mov inc and jbe popf lock mov sub add in out and test mov fisub sub inc sub (bad) mov jns test scas pop mov jne jl sub insl and adc and adc faddl (bad) xlat lock lea sub jp sahf push outsl negl xor push inc ret jg push inc inc into test aas shrb std pop repz pop sbb aad (bad) xchg dec cld sbb notb dec mov test lock test xrelease frstor rcrl push daa inc test mov jle xor lret sub imulb add andl (bad) (bad) in mov pusha pusha push mov int mov or xor add mov lock cwtl jnp lcall xchg or in xchg popf daa out adc add or mov fist insb pop repz leave pop andl jg ja and mov daa sub cmp out daa inc sbb mov push xor sub popa mov mov mov add mov hlt cs cwtl mov (bad) xor aad jno xchg lahf inc adc xchg jecxz (bad) cltd movsb sub aas xchg xor cmp xor in mov movsl pop push gs sub je stc outsl add clc dec adc cmp call pop or mov addr16 mov sbb (bad) clc in cltd or ret inc and fistpll pusha xor sti xlat mov iret jecxz btr lahf mov pop push popl cmp ja inc mov repz xchg xor popl jle int3 insl or inc adc sub sub fimul aas out imul dec mov pop repnz ljmp dec ret sti lret leave outsb mov adc int3 daa sub sub mov subl call sti adcb sub mov leave and stos mov das incl (bad) mov pusha mov push jae add adc adc push push mov jo or hlt mov sti pop out ret inc mov repnz or dec inc xchg jle out mov addr16 mov pushf sbb jb ljmp adc sti lock out mov es xchg (bad) mov inc dec mov aas lcall in mov hlt and add subl insb outsl fldl leave sub mov xchg add fildll ss mov xchg negl cmp lods stos add add or out lods inc push gs lods sub xchg aas testb push mov xchg dec xor cmp pop xor pushf jmp jb push or (bad) stos jg sbb pop scas in sbb jno dec mov mov mov lds push sar mov out loop mov loope mov pop in mov stos sar insb pmullw push mov data16 js mov int jno lcall mov jp or popa xor rcrb insl jp mov hlt dec jge mov seta xor out cmpsb sbb or jge jg pop sub ret lret aad das adc mov lcall sahf push aas hlt jne mov stos xchg insb stos lahf jnp xchg mov jb jo ljmp fist (bad) mov xlat enter pop cmp rorb pop xchg mov xchg aaa sub (bad) test sbb fdivrl lods jg cmc dec mov clc inc enter or push mov lock out std adc insb inc inc lahf sub pop aaa (bad) xchg jno sbb cs cmp push iret lret mov push pop repz cld mov xchg scas je aad int xor lds dec insb test or mov popf cwtl test mov out fsubl rorl divl mov push sbb loopne movsl cmc xchg pop sbb pop cmp cmpsl in outsb call pop call add mov sbb push xor sub mov cmp aad rclb push sub jmp push cmp mov and rorb inc (bad) stos aas lret out pop fs fiadd adcl mov aad sub jl and mov mov mov pop stos jp inc or aaa push into mov data16 movsb outsl jmp andl jno inc cmp insb cmp add fidivl mov outsb out shrb sbb nop mov mov in sarb sub jbe les jb,pn outsb jae xor mov jo cmp lret cwtl and mov insl and inc sub in push add mov rcll push and jo dec xor (bad) in mov dec mov repnz adc cld stc xchg mov adc add adc ds xchg adc mov mov lods mov add (bad) mov call mov add rclb outsb or cmp insl movsb insl push jge das idivb sbbl xlat jp jbe push and sub fmulp sub dec cmpsb (bad) add pop mov test mov call lcall pop ja out mov adc mov or test push bound xchg xchg outsl push rorb leave mov xchg mov pop and test enter ret sub add fwait sbbb xchg aaa jp inc (bad) (bad) pop insl (bad) xchg into mov inc aas mov (bad) mov adc out jmp mov mov outsb add mov cmp repnz addr16 push les outsb (bad) mov aas xor jae ror pop lods movsb xchg cli xor or pop lret or jle hlt stos sub push jnp js lret push adc xchg push iret cmpsb or test mov jg ficom sub xchg mov cli and mov push cld mov mov imul sbb call je pop xor jo (bad) notb fs dec fimul sub cmp mov dec push or mov (bad) (bad) stos and arpl cmp xchg xchg in mov or xchg push jl jle pop cmpsl inc jo jne outsb add aam mov and stos mov pop mov jge int cmp je jae cltd lret das mov dec inc loope push xor lea fistpll leave mov (bad) xor cmp push ftst testl lcall mov adc push and mov jl fdivrl cmovb int movsb adc mov nop je outsl mov movsl pusha divb subb pop add cli out add std xor or cmp out xchg popf xchg xor mov add add pop jo cmp or lret cmp cmpsb into ret adc popf movsb loope add fwait out mov cltd inc insb lds adc and aas mov push mov xchg leave lea push andb fwait mov dec leave inc push ror lahf xchg sbb iret les sub ljmp loope movsb fisttpll inc push cwtl es jl sbb jns push jl xchg push fnsave push fmulp popa adc pop cmp mov lods imul pop in push adc dec sub adc dec sbb ret or dec int3 mov dec loope dec js jmp push lods sub mov mov js sahf (bad) rclb xchg push leave loopne mov ja out ja fadd out imul dec mov rcll and inc clc stos movsb je movsl jge testb jg adc jo xor clc and adc cmpsb dec in sarl cmp fidivrl leave xor cmp ljmp jo or mov lret inc movsb imul sub push cmp mov call (bad) sti xlat mov sbb push adc (bad) lea aad std jo call pop mull and (bad) in jle push and loope ftst and adc bswap dec inc and inc push jbe xchg sarl xchg (bad) ja dec push not and cmpsl pop shrb sbb xor nop mov push adc cmp jnp fildll xor aaa (bad) loopne add data16 imul and pusha or mov xchg sbb lods add dec mov lock repnz dec add fdivl dec addr16 cmp scas pop movsl mov inc mov jecxz je adc fisttp dec decb xchg inc rorl cmp adc mov push sub clc out hlt clc jmp pop xchg mov inc and fsubr cld adc mov outsl xor fs xchg mov test aas ss mov mov push adc and add sbb mov sbb cmp pop loopne mov cmp (bad) cmc lcall sub or push divl mov jp jl mov ret cmc xchg adc lds hlt lahf dec push jo js push xchg xlat in mov cmp pop or (bad) bound out cli inc or or movsl dec cmc jle fst and xor cwtl ja lcall test cltd adc (bad) sbb in std cmpsl xlat loop or loopne inc mov mov insb loope mov das and mov nop or and pop xchg loopne xchg jmp out inc les xchg lahf popf stc cwtl lods (bad) pop push add cs hlt xchg fucom mov dec loop sub test dec mov fs and mov (bad) pop enter pop add inc rcll pop xor (bad) mov adc fsubl dec je fxch xchg jp xor push fsubrs push xor cmpsb ss dec cli cmp push mov hlt out inc insb add mov in cwtl sub shl repz xchg jecxz jp popf mov movsb jg (bad) or inc sub fild fldcw inc dec push jge and cs adc inc xor cli xor sub sub lods and xchg xor push jle (bad) mov sbb and mov and inc ret fcmove dec jg outsl pop out arpl and or xor push xchg (bad) rol test mov idivl ss mov clc xchg xor loope cmp and out aam fucom or fiadd jne std pop fnop push mov dec pop scas or jg xchg sub xchg iret adc imul aad adc lds data16 cmc or inc add stos xor lret fwait mov push sbb sub ss (bad) jmp add gs dec push cmp mov mov mov stos inc push jo mov inc xor jp out sub mov stos jne dec mov stc test and pop adc das in push cmp xor in int3 cmp dec pop cmp mov or fisubl lret sbb sbb inc xchg (bad) fsub insb mov dec mov aam pop (bad) mov stos sbb jl outsl add jo mov lods cmpsl movl sub in outsb push shl cmp movsl (bad) or sbb pop jmp xchg rcll sub push fdivl imul mov or ret subl mov jne add fistpll push je xchg mov cld sarl cltd or aaa inc inc fimul daa aas lret mov ss adc xchg inc clc mov adc jge or and int or call cmp stos (bad) mov adc fcmovnu pop lcall or jmp dec push jg xchg push adc push jne push mov cmp lret addr16 aaa icebp mov dec pop (bad) sahf cmp dec clc js add mov push push push dec adc fnstcw mov pop repnz adc pushf sbb popa push insb pop scas movsb sbb or stc push sub xlat insl or enter pop divl bound js dec je sub cwtl and and pop and mov cmp aaa mov cmp jge insb inc idivb jecxz or adc cmpsb xchg in mov enter es jnp jno ds mov mov fwait push push mov xor test jns mov pushf daa icebp lods inc xor fstpl enter xor (bad) ljmp lods lods xchg or test push and lock sub testb push mov jecxz ds lock mov les lds pop inc mov dec aaa mov mov inc outsb sbb rorb in into inc mov inc arpl nop cmp sub (bad) (bad) rcll xchg adc pop xchg pop or imul mov mov dec in mov add cmpsb and inc fstp test jae popf adcl jb ret push mov inc arpl scas ret out icebp cmp and lods jbe xor sti outsl stos adc dec adcb test dec lcall cltd add mov xchg cld mov bound mov adc lret out cld pop es lds mov adc xchg sbb out test cmp lcall cli scas xchg cltd outsl cltd pusha sbb mov mov je cmpsl mov xor inc ret cwtl and push sub (bad) rcll les inc jo lds fbstp shll imul or xchg cmpsb pop in int3 lcall les clc jmp xor pop loope jle pop leave mov pusha mov cltd mov imul mov pushf xchg jle int3 jmp arpl data16 ficompl cmpsl adc sarl lret dec imul out mov in dec je sbb jmp (bad) mov push addr16 push (bad) jnp or inc push mov mov scas insb data16 out cmp imul cmp roll push xor jno xchg mov outsl int jb jns xchg in mov xchg adc mov test mov add sub test icebp or scas fistl nop mov sbb inc in adc jnp aad mov pop mov inc or aam stos push or cmp ret test rolb je clc sub xor aas ss lret repnz daa bound sbb fwait popf jmp add xor insb aam inc cli pop pop sub push enter cmpsl mov sub jg sbb sub andl dec sbb ficomp outsb shrb (bad) pop inc lret rolb fisttpl xor fcmovu stos imul stos mov cmc cmp out icebp mov pop sub push int3 rclb popa loopne xor push push lahf std jnp jbe loope jl movsl jp pop (bad) jge xor xchg xchg pop cld lods pusha test outsb jno (bad) out and sub sahf cld or stos fs shlb add (bad) test cs jb or js mov jae std data16 pop or sbb test sti (bad) pop jne mov adc sub aam notl loop pushf xor cmp add imul fs xchg push jle in xor xor leave ss into loopne or insl fnstsw mov cmp ja outsl loopne inc push pop adc sub dec or mov (bad) hlt repnz pop fnstcw or in push pusha mov ljmp mov test enter fist push fimul lahf xchg mov and (bad) sub inc rolb pushf stc mov aad sub (bad) mov (bad) dec arpl (bad) cmp (bad) mov and shrl xlat mov adc mov push lea dec dec (bad) jmp push lcall jnp lcall and outsl xor inc in mov cmp xchg sarb jbe movsb push and pushf xchg mov mov movsl mov in in gs jae sbb xor xchg xlat xchg xor and inc nop in fwait xlat jnp and cltd dec inc shrl (bad) xchg pusha mul sub sbb popa pop xchg ljmp push dec xchg idivb pop rorl jge fwait push and sbb mov xor jmp inc mov cmp mov inc or (bad) cmpsb (bad) out cmp push ja inc or clc arpl test call pop pop sti int3 dec push gs lret imul cmpb cli xchg lahf xchg dec stos insb jecxz and xor pop jbe aad gs repz push jbe (bad) lea sahf daa xchg mov adc (bad) pusha mov js nop mov (bad) dec ret sub mov hlt xchg mov pop js insb sbb cmp pop dec hlt das xchg sbb adc in push or dec xchg js push mov and test cmp lods cld loop fiaddl jp sub mov mov and js cwtl or rcr inc stos push ret subps inc sbb pop mov js jg mov cmp jb ficoml sahf imulb push negb sub jmp xchg and fiaddl ficom mov ret sub paddusw fldt fisubl or mov iret xor add push push cmp scas and and in inc ret inc add or (bad) into mov hlt xchg or js jmp inc test pop scas mov pop nop out mov ss adc xchg mov or mov std xchg adc popa and and sub test push push lock jne lahf cmp shrb mov insb dec pop add aas mov mov cmp inc sahf lods out out (bad) xor add (bad) lcall pop mov xor aad mov inc pop and sub aad push fldenv test dec cmp movsb mov sahf mov jg xchg bound ljmp or xchg xor or add jbe cltd xchg xchg out xor mov cmpsb fdiv push push outsb frstor je push ljmp sti (bad) jae push mov pusha popf fstpl imul lods les pop dec or mov xchg in adc roll hlt mov shl mov (bad) out jae aaa scas cld push in loope mov adc push xor push cld push pop hlt cmp sbbb sbb cld jmp jne jo jae (bad) mov inc ret test test push mov add leave insb mov out dec xchg movsl mov and nop out sub ss xchg arpl mov iret insl repz (bad) adc pop mov pop jno xor add maskmovq imull fwait mov insb sbb cmpsb jl cmp imul int3 dec test jg lds push cmp mov icebp cwtl dec push pop mov cld xor mov imul data16 inc out and push into sub in pop jl add xchg mov mov repz cmpsb jecxz mov push push jmp add data16 ljmp fwait mov inc cmpsl xchg and cmp lea xchg sub dec push lret push decb decb lock xchg mov (bad) (bad) or and and std push sbb lret inc add mov outsb xchg jl test mov outsl dec add cvtdq2ps push pop jecxz cmp push pop sbb mov out add out lahf push sbb imulb out data16 neg push cltd pop xor push and sarb mov scas enter icebp adcl sub in jl fisttp stos inc or xor js inc lea gs lds (bad) nop cltd mov xchg test pop push pushf es popa (bad) dec xor stos push rorb fs add add inc pop jmp cmpsb out fstps cmp mov ret int mov imul mov xchg cld int3 sub test dec xor daa sub xor int3 lock (bad) or xchg sbbb pop push xor add in bound sub sub mov decb dec repnz push sub cmc icebp cmp scas mov loopne mov test mov (bad) addr16 inc mov push out adc outsl dec daa (bad) adc ret inc mov inc scas leave pop repnz jne (bad) clc in out sbb xchg into and dec xor inc push imul insl inc add or and dec cmpsb add cs rcrl push lods mov sbb lret xchg cmp stos cmp add push mov cmp add mov pop or xchg mov test mov sub or stc (bad) aaa repz adc pop dec std shrb fisubrl jecxz sti cwtl jl mov pushf mov into test test pop adc inc mov fisub jbe pop ds fisubl cmc mov mov fisttp dec scas icebp jns xchg xor dec mov sbb or mov (bad) mov popa xchg mov or pop testb nop nop mov mov xchg rcr das jo cli scas fdiv shl add xor es (bad) jle jns inc cmp push sbb pop lahf pop dec fmul adc (bad) jnp outsb or ds adc rorb inc stc mov leave lret sbb scas inc sub add xchg pusha roll push mov xor mov sti ret xor add into call adc out fstpl fimul or cmpsb fwait pop jae imul mov mov inc sub int pop int3 and sti mov fildl call lods mov imul int and lods ss or xchg outsb xchg rolb xor adc fcmovu push dec push mov pop (bad) push test pusha jp nop cmpsb cmp pop sbb pop loope add mov xchg jno int3 jb aaa pop pop inc push jge,pn and jl lret mov (bad) or sub add or xor lret inc lahf push mov clc push pop mov sub sub pop pushf fwait mov adc cs aam fisttpl push add xor imul repnz lock mov hlt cld lock xchg jae sub fildll lods sub xchg push push sub push adc add and loope sub or imul loop cmpsl mov jno and outsl test mov sbb mov pushf xchg sbb xchg xor ljmp xor xlat lahf jae out mov aam repz inc dec fs cltd push clc and cmc jno icebp pop ja pop mov ret call in inc insb movl inc and ss cmp gs movsl mov andl inc adc aam mov or dec jb mov subl imull out xchg cmp cmpsb arpl and push mov mov mov jl out dec pop rcl mov push jns sti inc les and adc lahf mov data16 das rolb fadd lret data16 dec lret ficoml jo repz push aam loop (bad) mov sub je fldenv shll dec cltd icebp loopne push jnp cmp ja sub nop mov movsb js push movsl pop jns pop aas lods sub iret (bad) gs movb loopne mov out pop sub and out das (bad) pop loope and cld repnz cmc mov push out xchg sub pop cld sub aas pop xchg dec out loop loope or sbb push sub mov incb sub out movsl jg mov mov lods insl dec gs dec sbb jb gs xor pop sahf pop mov pop mov stos adc dec mov sub test test testl or call scas pop int inc fcoml xor inc mov mov mov fisttpl popa or daa movsl sub add pop jp out or mov dec ret clc notb push push fisttp pop test pop cmp jno sbb push lds lock jnp add cwtl add pop xorb fcoml cwtl inc sub xor push mov movsb and jb add inc xchg mov adc xor adc sbbl inc inc mov cmp sbb inc xchg cld jns das mov pop lcall aas lahf lds or jae insl lods pop sub in lods jp dec dec add std inc ljmp in pop fst or insb rol jmp xchg sub outsb mov ret inc insl add push scas cmpsl or inc cmpsl lea jmp (bad) lods push pop in push inc aam loopne repz lods adc mov xchg jge mov mov jmp dec imul aam pop sub std stos mov lret outsl mov aam mov fisttpl loopne mov scas bound mov fisubl add outsb (bad) mov adc xor inc fistl push pop dec add jecxz (bad) lcall cmp adc mov int3 push arpl es xor fist jnp mov xor lea push test push sub cli push (bad) sbb (bad) dec js dec push and or push sbb stos xlat (bad) lret mov fstpt mov mov es (bad) xor add imul adc mov cli or clc pushf and sub pop arpl xor sti jp xor mov adc jl push imul nop inc mov mov mov pop inc imul cld clc lods ret jo in imul stos sub (bad) mov arpl push icebp ljmp jmp cltd inc daa cmc and push ljmp cli dec xor and pop adc mov loop pop mov test pop xchg mov dec ret sbb (bad) int3 cmp syscall dec lret std mov mov addr16 jae push ss push inc mov scas outsb sbbl push dec out repz (bad) mov sub and push mov mov push jle jae xchg mov sahf mov mov shrl xchg iret lods sbb les mov lret dec pusha mov pop jbe push push ljmp add lret fdivrl lret inc pusha add std fiaddl jle push sbb xor mov loope xrelease loopne clc push negl mov mov pop sub int3 dec fidivr dec mov popa mov imul jno adc faddl xchg pop and jne or clc sti repnz xor push ljmp adc imul mov cmp hlt fnsave jns push mov rcl es xchg out sbb add dec dec mov pusha adc mov jno (bad) mov sub pop cli in pop xchg jmp enter sti dec shlb inc push pop movsb xchg movsb push add jo jb cwtl or mov add add rcrb mov outsl les mov pop xchg push push imul pop and cmpsb insb inc lods xchg pop int3 mov add pop (bad) pop lods cmp or gs outsb inc bound or pop repz sub sbb jns and in push scas daa push (bad) hlt inc cwtl xor xchg push mov push mov xchg cmp nop sub mov jo popf mov or jmp cmp sarl jb (bad) jbe shl jp popf popa les pop cmp or jno inc hlt in loope outsl adc sbbl movsb das cmp iret inc mov leave shll mov ja loope loope pop aas push jmp push out nop into ss xor mov or add out mov mov call ljmp mov sub dec mov fsubs aam dec (bad) xchg adc push (bad) in pop xchg or hlt aaa push mov orb xor xchg fnstcw insb mov mov push loopne mov rorl je jbe xor push fwait pusha ja mov fsqrt pop xor add pop andl (bad) mov xchg add int push rolb (bad) movsl es in int3 and (bad) in jecxz push add cs fidivr neg push inc imul jmp inc and insl in repnz enter push ret or pusha pop negl (bad) mov aas add insl inc and js jmp or sbb mov out insl and arpl sti mov ja xchg fcompl mov arpl into jns ljmp into adc lcall cmpsb js lahf cmpsl aad dec fwait int sbb mov mov pop loop aas test clc adc push (bad) faddl mov push repz sti dec xor fsts stc test popf mov mov xchg xchg mov mov push mov in test sbb mov les push or xchg pop data16 in das fstps or cmp mov cmp or sarl push fildl cmp push sbb fisttpll sub push cmpsl or ss ljmp jns ret lods dec add and fcomps dec sub push fstl loope push imul pop jne (bad) and (bad) dec pop mov lret fs jb dec sub push imul jp les adc mov icebp shrl cmp std fxch jmp cmp xchg in fnstsw cltd enter shrl fildll into xchg xor adc jg std std push xor push cld cmc and hlt (bad) mov sahf bound out mov inc sbb push xorl and mov jbe (bad) sub adc clc jmp subb push aaa sub jmp dec adc shrl cld leave fs xchg rol ret imul or stos ss dec mov mov insl inc mov gs scas (bad) fadds loopne fistp rcll test inc aam test dec mov jno jo cld xchg mov and hlt stc sbb das xor push xchg (bad) test and mov jbe imul pusha mov cmp xor xchg std out jp je pop dec mov in pop setb movsl pop (bad) adc es mov (bad) adc and sub lahf jae,pt jnp (bad) xchg hlt fs sbb push mov sub cmp mov sti pop cmp sti or mov xor out xchg add adc pop insl xchg in (bad) mov xchg call pop xor repz popa cmp or test inc test xlat push inc out xchg inc xor pop cmp or cmp das sbb nop sti or mov or shlb cs dec sti (bad) stos adc in jle daa or in fdivrp sub mov mov mov arpl in daa cmpsl push pop notb aaa sbb sub jbe or lret cli lock add loopne neg push jmp clc pop gs cmc xchg out stos adc lock mov rcrl xchg sti cld out push repz cmpsl pop sub xchg sbb or jg in xchg (bad) aaa sbb mov sbb es movsb jl ficoml loope add in and (bad) and mov popf insb lret clc fadd xchg inc ss enter ss popa push shr push in xchg lret or and hlt sarb add dec inc and in cmpsl pop mov sbb jmp mov or cmp sub adc pop dec (bad) in sti lahf cmp repz or das loope lods sbb and xor push adc sbb cwtl (bad) xor inc adc mov cmp and mov enter mov mov rcrl cmp mov imul sub lods fmuls sahf cmp dec popa mov repz in or lret cmp imul in subb inc mov and bound ljmp (bad) insl push dec jmp sub push seta xor fnstenv cld aad insb gs or insb jno inc pop xor movsl dec sti mov ret push pop repnz inc dec aaa xlat aam jne aam xchg sub js (bad) fnstsw xchg lret sbb dec test (bad) rorb (bad) mov fwait pop imul scas jno shlb adc ja lcall lods push cmpsl push xor out or es jo dec adc icebp and adc mov jo addl icebp stos adc push add cmp clc push iret mov inc cwtl int3 (bad) fsubs test xchg cltd pusha hlt add rorb leave dec ljmp pop xor mov dec rcr arpl mov cmp mov movsb call leave jo sub mov shrb test xor sahf out dec insb mov pop sub lock dec (bad) push sbb add shrb sub (bad) lret push int3 aad push and or push or and push imul mov into mov fcomi jle cmpsb lds sub cmp pusha bound lret mov or testb rorl (bad) push mov adc sbb fsubrs push (bad) stc pop popa and push pop outsl js adc (bad) xor xchg into and and mov out fidivr (bad) mov insl pop adc mov fidiv arpl mov pop jnp test and jne imul mov mov mov cmp popa mov inc stos mov inc lahf loopne loop das inc insl jl cli pop mov int xchg mov fmuls mov mov repz ficoml jne ds movsl out ficoml enter and push cmc lcall lret into mov aad pop sbb rorl fnstenv adc insb mov pop inc test out lock push popf es stos cmp mov push xor lock cmpsl sahf icebp out inc cmpsb or inc sbb mov xchg dec push pop xlat jge push mov enter inc cmp sarb or in xchg scas pop and mov jmp sub fcoms pop lahf cmp leave sarl adc pushf neg or mov xchg fs xchg or fdivl adc hlt outsl popaw adc jecxz (bad) mov mov leave push push fisttpll idiv jno mov inc iret les cld aaa xor mov repnz xchg mov mov das push mov mov xchg push mov das mov mov mov pop fucomip push or in mov movsl test jns pop setg xchg push or fbstp xchg les sub push mov sbb push fildl cmpl sub shl andl stos repz outsl sub out add and popa cli roll push push sbb push aad cmp push mov (bad) lret into inc dec jb dec jp jbe mov daa sub js lods cltd insb adc cmp sub mov pop mov stos imul lea jg mov or cmp fdivr addr16 mov pop cmp pusha hlt push cmp insl adc mov in push mov fbld sub jmp rol popa mov jo xchg loopne call ror fisubrl negl bound inc ret aas pop or (bad) mov ss xor push sbbb scas test in (bad) mov scas add mov mov jnp adc (bad) aam jo clc mov les sub idiv test imul mov icebp cmp mov ret jecxz into sbb mov xor int nop popa enter in jle sbb pop xor mov mov clc ds inc mov inc (bad) icebp das mov add inc dec xchg dec mov pusha mov stc test rcl out xor inc aaa dec xorl pop cmpsl jmp in and jno test and movsb hlt mov adc imul arpl mov jmp mov add or adc (bad) loopne out (bad) outsb fmull sarb mov add lea imul out (bad) in dec std in xchg jecxz loopne mov iret add mov pushf arpl lods and lret or dec cld inc shll or push pushf push or scas (bad) iret push fdivrs mov cli lds dec sub and ror repnz mov fdivrl xorb int3 xor dec cmp dec sub cltd cmp outsb dec mov movsb ret icebp out aad adc xchg insl pop arpl or pushf jmp imul icebp dec inc dec ror lret test pop fidivrl adc pop cmp mov inc pop jnp jae jnp xchg pop push push inc stc mov fnsave call icebp jne mov (bad) adc cli stos xchg pop mov inc xchg mov mov mov xchg popf jge pop add aad inc out inc dec rclb dec sbb sbb pushf add stc pusha adcl xchg mov cmp inc and jae stos cltd xor imul cltd fs lret add push inc jb gs cmp adc xchg jge sbb loope mov pop xor push sub jp sbb je mov movsb and lahf jae inc popf loope lods mov fwait cmpl sub enter pop in jo pop jns inc mov jle xchg jecxz jne adc xchg stc jne push mov pusha lahf fstpl dec mov sbb imul clc xchg jnp jns mov jns xchg add jmp out xorb inc mov sub cmpsb pop pushf in pushf jb pop mov add or push push pushf push lahf adc (bad) ffree sarl inc movsl in loopne xchg cwtl jno mov dec gs ror adc fsubrl int3 je fcomps stc jmp lahf scas jno daa fadd and jo add (bad) fisttpll push fwait lds das insb inc dec scas mov inc loopne push adcl inc dec (bad) jno js fstpt mov aad movsb lret jmp shl lret xchg mov insb or ds pop lcall pop clc mov (bad) jb ds in cs pushf pcmpgtd push mov jp (bad) outsl or loope (bad) mov add sbb (bad) repz sub imul sbb mov add outsb es mov xchg cmpsl and movsb jge xor mov mov sbb rolb das (bad) mov dec jp adc out ja enter cmp cltd shrl dec xor pusha adcl out mov mov sub pop cmp icebp add sub pop jns cmpsl movhps lret push or sti push pusha xchg daa cld clc scas xchg outsb sbb mov lcall fs dec cmpb inc dec dec dec lock repz add aad mov push out ret adcl (bad) push or stos pop mov mov mov (bad) leave js ficompl test fucomip lods and xchg cld adcl adc outsl inc out cmpsb cld outsb mov push stc std and jp jae jbe sbb pop jno test push mov dec gs repnz scas cmp int3 int movsb pushf mov shrl mov cmc fidivl movsb gs mov cmp shll inc push or ret cmp push cmp lret pop add daa dec pushf loope clc inc in out negl hlt das cmc jge add sahf push insl push hlt dec push sbb in cwtl sahf mov in mov hlt mov lods out cmp aam aad mov dec pop icebp inc les cwtl (bad) pop fsubl inc sub jle adc adcb scas mov and loop xor lds sub jne push loop xor testb push adc addr16 fwait insl punpcklwd sub sbb loopne outsb add inc out pop lock aam jecxz call fcmove les mov ds arpl mov out inc jmp inc test mov js mov sbb lods fimull cmp adcl mov jle inc xchg adc popa loop cli or and rorl jecxz inc inc insl dec cs add push sbb into sub test mov push inc fcompl movsl mov pop jbe jae pushf mov shll lods in mov orl mov out and mov pop mov jb sbb repz cmp fistpll movsb push xchg dec pop in xchg insb jp pop jl fdivrp xlat dec rcll jle ret jo dec cs repz aas mov mov dec sbb ffreep mov clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz jmp add incl inc mov mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) bound adc mov (bad) push (bad) (bad) mov fcmovne fdivrl pop xor pop jg pop add jp clc jg adc (bad) (bad) or or outsl clc jno popf xchg aas mov xchg dec test daa pop dec clc sbb push in fsubrs xchg xchg mov adc xor add and mov addb sbb jno scas lods call sub test jbe int push and or pop pop jb mov mov inc iret imul xorb fnsave sti iret dec inc pop sub fidivr xchg shrd jbe out out iret aaa push cmp mov arpl inc sbb jae scas in cmp pop jb mov add jae jbe push adc fcmove dec rcrb sub xor stos mov pop xor inc gs mov fnstsw cld mov jecxz test cli mov sub icebp mov mov shlb dec push lock in push adc mov sbb inc xchg inc clc push push fistpll mov js mov add mov pop cld jae dec xlat push cmp sub mov call arpl jl lcall add aaa fimul addr16 jbe xor cmp push loopne jl add add xsha1 cmpsb or mov and xchg mov pop cmc jge xchg shl push insb ror inc cld ret jp out imul sbbl testl pop fnsave inc js and test jne pop mov and fcoml fs dec sub or scas inc jns popf cmpsl or test fs (bad) int push sbb xchg repnz in jo into jae xchg outsl loope iret jne push daa and jl movsl fnsave mov add dec mov dec mov inc stc xchg xlat aad sbb push mov repnz das notl pop addl dec add sti mov pushl lahf loope fisttpll (bad) pop cmc or xor xor daa js pop xchg xchg dec mov aam fs in xor mov inc xor push nop (bad) inc mov lods jmp mov popa or sbb xor iret icebp negl mov push pop ljmp jmp add int int lds xor ss jle fbstp ss outsl int3 inc inc das mov imul cmp fmull mov jle shrl inc pusha mov jnp add (bad) mov sbb or repnz sahf cmp popf sub icebp lods repnz sbb (bad) pop fisub jge shl xchg aad mov mov cmpsl adc stc inc pushf test sub inc daa (bad) aas cwtl or pop xlat xor jmp inc inc hlt scas and imul aam sub inc inc ds mov xchg ss push lock movd sbb lahf sbb lret pop mov push iret test lcall (bad) xor mov sarl xor and jecxz mov jge mov push inc mov fnsave mov fild stos (bad) lock clc loope xchg add dec cmp int sbb shr int3 jl int3 test lods sarl decb sbb add pop hlt dec xchg int fwait lds int xor inc xchg clc arpl pop shrb bound adc pop punpcklbw daa inc pause out inc testl sub (bad) mov pop into jle cs dec jecxz aas mov push add mov mov push out fisttpl mov or fcmovne pop ret divb lret shrb rclb lea jo push and dec jbe dec aad xchg ss or jg ficomp dec fldenv js xchg stc adc leave xor mov cs fld adc jp push adc movsl mov fst out jecxz push je stos pop and inc jecxz and adc (bad) sbb sbb mov sbb repz imulb and fbstp loope sub lock pushf lahf popa sub fs inc fistpll mov es adc and xor push jge scas mov das (bad) out test lock insl stc push xor aad popa pop (bad) or cmp adc mov pop cmp call or dec scas pop inc pop inc jge andl and ds jmp nop push push je sti sahf dec mov mov ljmp mov lea fldl xor push sbb jb outsl test mov xchg popf incb dec sub dec popf into push xor sti adc test aaa enter ljmp daa xchg and cmpsl mov (bad) ljmp jno mov jge aam pop insb sar popa out xchg push pop test sbb out dec aad repz push or jo xchg movsl repz push aam xchg mov or ret rcrb repnz fiaddl inc stc cmp arpl add sbb imul cli stc inc pop ficompl push mov mov xlat pushf add sub push vdivss sub outsl nop lods incl popa push outsb iret sub mov in leave cmp adc movsb sahf cltd es mov (bad) fadd aas cwtl xor cltd push pop mov stc xor dec adc mov out mov (bad) jl fmulp inc or xlat int3 mov adc adc mov cli hlt xchg mov mov loope mov aaa pop adc outsb dec jbe and pop std out aam jnp out arpl xchg mov ret inc fisubrl push mov xor fisttp loop and icebp cmc sub push icebp sbb inc in or jl andl xor xchg push xor mov loopne xchg out sub add pop loop cmc std push mov adc leave xor mov inc jne mov mov ja sbb mov cmpsl xchg call stos sub inc push cltd add jns mov testl mov daa sarl imulb push lods or jb mov xchg je jge sahf xor movsb jg cmpsb add dec jne lods jg fstl bound rcrl push sbb jmp or leave pushf rclb sbb mov or (bad) mov and das lods (bad) cmp fidivr mov mov lahf js frstor repz out xlat cmpsb ds inc rclb lret mov or out pop inc out sub push adc xlat jmp dec repnz cmp add sbb scas pop dec cmpsb shr out movsb push sub pop into push and insb jno mov jae decl xor xchg xchg adc jp leave inc and xchg pop mov mov jecxz push mov and repz mov pushf dec or loope clc dec dec cmp and stos and pop loop stc sbb or mov (bad) fiaddl jo xor jmp adc xchg sbb insb mov mov fmull (bad) jnp imull sbb sub sar pop leave mov dec dec xchg and lods mov mov xor mov orl pop or dec enter mov pop subl insl decl loop inc (bad) daa pop jle push or mov je pop int mov mov xchg imul cmp in jp or fistl orl pushf cmc es scas mov sbb sub mov outsb (bad) insb test psubb inc fsubrs (bad) push mov xchg mov xchg xor popl daa dec stos ds scas sub sbb adc adc shl xchg mov pusha ss insb dec pop sbb dec xor mov sbb popa or add pusha mov add pop les aaa push cmpsb sti inc lcall clc das jmp stc inc hlt popa lret loopne mov push psubsw jne adc insb mov aam mov or aas xchg (bad) fstl sbb push (bad) imulb in stc ficom pop call and sub dec push mov lock cmp xorl add and jnp adc cmp jae (bad) hlt arpl sub or imulb fmul sarb sub (bad) cs movsl cwtl mov add pavgw adc jmp adc jmp jmp or push mov pop fidivl adc ss int icebp dec adc lods xor inc (bad) sub lea cmp xchg mov push dec mov or and fdivs scas fwait sbb mov popf push fsub mov xor pop shrb aad notb mov mov jbe aam push in jg jns inc xor mov sbb std andl dec push ss add xchg add iret pop mov adc fs add gs adc add stos dec loopne dec mov test xor cmp pop stc mov aaa xor fwait outsb leave sub (bad) leave je rorl fmul dec movsl adc jle cmp xchg mov cmp mov js sub dec xchg adc add js xor add push mov movsb or mov lahf or or xchg fs mov je mov stc dec aas or xchg or lds mov dec jbe cmp adc and mov (bad) lcall andl mov mov (bad) mov or loopne in rorl adc inc adc (bad) or nop adc loope jge ss shl outsb jmp dec ds sbb inc sub (bad) stos inc add mov idivb (bad) dec inc inc adc sub add xchg mov pop jb (bad) xchg int jns pop lock cltd jbe pop adc test or xor fldl out lret lds sub cld add inc imul cld aam dec je mov dec and es nop xor xchg mov (bad) out leave pop inc push mov xor xor inc sub jnp enter jle jns sbb cmp mov je out rolb jecxz sahf ljmp arpl cld sarb cwtl outsl ret jno imul or insb or inc (bad) jae clc push dec mov xchg adc icebp or dec imul jo mov mov xchg cmp lret cmpl rcl aam cwtl fidivl adc push cmp pop jge cmpsl adc (bad) outsb daa es ja out add outsl inc loop xadd or mov (bad) xorl repnz lret mov repz lock or pop sbb or sti sbb dec dec aam and jmp sbb inc dec fcom mov or adc jno dec icebp inc fnstsw pop mov dec mov adc mov or je jno insb roll xor inc inc pop and out sub and rolb push push adc icebp aam repnz (bad) xor or and out fyl2x and in es mov shrl cmp mov push std addl repz iret repnz fldenv dec sbb imul push xor outsb repz lods add xor dec xchg loopne lods push adc (bad) pop jg jmp mov imul or sub xchg or mov loopne cltd fsubl movsb inc test mov cmp cmpsb cmp mov jae rcrb sbb fcos and or outsl cmp jmp ja mov je mov (bad) mov xchg xchg sub ja scas out in push loope gs mov int3 or xchg roll inc xlat cmc and jge dec xchg or jmp mov push or aad jge dec push jle hlt pop inc std ljmp pop imul addr16 loope xor adc repnz call mov (bad) loope bound movsb mov mov inc out cwtl je sbb add dec lds push mov outsb pushf jbe sbb aaa push das inc nop mov shl out into comiss (bad) mov jne push mov jne out mov cwtl (bad) lret sarb dec jo mov xchg xchg and addb adc pop mov pop mov mov in inc rclb xor jmp inc sbb bound (bad) sub rcrl scas sbb xchg push xchg out jg stos aaa sub inc (bad) and jmp hlt push lahf pop cmc mov std (bad) jae sub (bad) je sub cmp mov sub ret in pop mov xor (bad) mov and cld xchg add mov adc loope cmp cmp jecxz arpl (bad) fisubl and cmp dec push lods decb mov out xchg lock (bad) hlt lret lret js push call lock mov inc shrl mov push sub or popa adc bound lock inc inc add into mov clc mov jno dec mov imul cmp pop adc setae in jb ds ds mull or inc outsl mov mov lock ret stos lea icebp push push or shr dec inc ljmp nop call push lret (bad) cmc sub sbb pop adc stos mov pop leave rclb xor cmp fadd adc pop int mov xlat (bad) mov insb imul std jle adc sub (bad) mov stos jle push add xor cli gs mov std sbb jne arpl inc dec cwtl cmp mov adc imul sbb mov shrl fs sarl (bad) jle lahf cwtl mov push or xor data16 rclb cmp arpl sub sbbl orl mov adc shr sbb adcb fadd movsb add pop call xor mov clc sbb stos fwait lock mov aad stos jmp mov xchg sub loop pop cmp push fnstcw push sub pop adc aaa pusha in icebp fist fbstp movsb adc sub ja in mov or sbb jnp push inc ficompl mov sub shrl and or and xor cwtl leave pop mov or fild xchg or xor movsb and or call adc dec mov stos nop push int popa dec adc pop aad add jno popa cmc outsb int3 push pop push mov cwtl je mov sub mov or pop es leave xchg pop loop,pt lods sbb adc cmpsb imul mov push sub xor push mov in push rorl cmp adc mov adc mov sub test scas shlb outsl xor sbb adc (bad) mov je mov (bad) mov mov imul das dec (bad) and mov sbb pop jg pushf es pop loop and pop inc adcb jge js call adc notl pop push mov xchg inc xor jae push push or push jge (bad) out cmp mov in sbb push stos loop sbb and les inc lret xor faddl lock inc fadd outsb movsb das pop mov aad xor ficomp jge ljmp shrb jb sub js cld fmuls into mov out call jns xchg mov pop jmp int adc xor pop ret mov mov sub dec jno inc fcmovbe xchg std cmpsl fimul cwtl cmp mov sbb lcall rorb pop or das sbb or mov testl test xchg or insl icebp cmc (bad) or clc out or insl pop or (bad) icebp cmc sub inc aaa (bad) dec pop pop mov insb dec (bad) jbe push jno je cmp xchg hlt outsl insb sahf pop dec ret mov data16 inc loope loopne (bad) in mov rcrl repnz jg fsubs out (bad) into push add push lock repz out cli mov loop fild (bad) or mov sbb cmp popa mov test arpl mov and mov nop cwtl jl,pn in jmp int mov popl inc pushf shrb ja add and leave mov loope arpl daa xor into add mov test pop ja sbb sbb sbb fiaddl xor out enter dec dec push pop cld pop (bad) outsl into fldcw pop pop jge dec mov add pop ja inc lret jle stos push test icebp scas lods mov push xchg loop enter (bad) dec scas inc imul das (bad) sbb addr16 pop pop or je mov xchg mov mov xchg in sub out repnz loope (bad) pusha data16 dec xchg inc hlt fsts push stos jmp push inc add icebp ret dec push movsb shrl xchg push push adc pop mov (bad) sbb lea ljmp push imull lock inc (bad) or in cltd icebp jmp add dec les dec shrb jbe in jmp lods cmp cs dec das mov cmp mov xchg xchg push scas sub clc xchg xor pop call outsb jg inc adc jmp pusha or int3 outsb out add inc lcall mov ficompl pop (bad) push adc dec rcr pop scas mov in inc movsb es jg xor push mov fildll or inc shll xchg loop call in addr16 push xlat mov inc out pushf mov mov pop cmp mov std xor loop mov jg jnp dec test rcl repnz add in jge scas subl cmc stos addl xor mov inc iret into pop mov (bad) mov ret push push int sub or hlt sti mov dec sub outsl iret out test mov aad scas dec push ljmp xor add cli sbb xlat movsb xchg mov pop mov addr16 pop pop hlt (bad) cmp cmp aaa (bad) fstpt cltd sti cwtl inc aam xchg pop mov and ret add xor (bad) inc adcl cmp cmp (bad) leave mov iret push popf (bad) push fdivrs inc sub push fildl fwait cmpl pop cltd or insl jge arpl cltd inc and fs (bad) jnp jmp cmp push loop jecxz pushf stos ljmp repz daa inc gs push loope inc mul xor in fisttpl rolb insl mov (bad) pop insl outsl sbb bound xor adc xor push movsl int jl mov (bad) fs add stc dec lret loop pop repnz jg add into add cmovns cmp pop push popf sub sub pop add scas jnp or sarb mov xchg lock (bad) mov xor fsubl mov pushf jmp mov jmp xor ret lods dec xchg xor hlt aas lds hlt inc addr16 dec stc adc add imul fdivr stos inc insl sub in xor cmpsl fnstcw xor cmp leave (bad) jbe cwtl mov mov mov test lar cmc mov shll mov cltd fstpt aas and es aaa out mov mov sbb or pop aas xor cltd insb adc into mov add es dec jmp adc or sub jae (bad) ss mov jnp adc cmp sub push mov sbb aaa mov je mov sbb adcl nop adc lods into mov cmpb jo cmpsl pop jmp out sar aas inc (bad) js std pop inc enter pop dec test jle lods cmp or mov push call cmp and incb cmpsb pop jl sub mov xor pop loope stos sbb ljmp cmp adc adc insb mov div xor into and and jp pop cltd in dec lock int movsl dec dec in imul leave js jo stc dec sbb (bad) pop mov hlt or mov sahf pop loop fwait mov push pop insb mov sti mov or insl jle jb bound mov and aas fldt mov xchg adc mov push cli sub cmp dec pop cmp icebp push inc (bad) jle mov lods sbb ss xchg adc pop add movsb sub test and ja sub inc jo (bad) fbstp mov lods scas fwait jmp int3 aas adc mov and jmp aaa pop cmp pop (bad) ljmp jge test addr16 push sub mov jge jmp imul insb fst aad lret add mov aad mov push sub cmp dec lock xchg scas lret inc lahf sbb (bad) xor xor repz or sub nop jae lret lcall int fildl ja rcr jle ja imul dec lods or pop add inc push cli or repnz jp imul rol mov dec in lahf mov gs repz pop pop xor push (bad) lcall xor xchg or bound lock pop mov dec iret mov inc ror ret cmp int ja imul add int xchg addr16 pop roll jmp mov je jmp or mov dec pushf mov int3 (bad) mov mov cld repz jne sub mov pop rcll test xor ret test bound imul push adc lods xlat lock add outsl mov mov popa mov inc jns sbb sub clc pop out adc adc sbb (bad) in push outsl xchg cmpsl and stc jbe js jle jns repnz inc pop or je pop dec xchg aam enter in loopne mov add out inc ljmp sub loope add (bad) pop mov lret jg mov call movsl push ret out mov jnp xor fcomp les pop loopne imull xchg mov arpl jns pushf inc movsb inc inc insl ds notb std push inc dec cmpb sub mov push mov aam lods and fimull in mov push adc or xlat idivl push or add mov jp pop in fwait nop cmp add testb call push push loope outsb cmp aaa ja jmp insl nop mov jne cmpsb lods stc lock push or (bad) mov stos cwtl push (bad) sbb out movsl dec scas push inc fdivl mov jp (bad) cmpsl pop sarb mov out bound xor jmp shufps push int cmp aas int3 inc xchg cmp cmp mov scas pop xchg rclb adc (bad) into movsb mov loop loopne cltd inc fistp adc int3 loop push loope test outsl xchg imul sub lahf (bad) pop mov mov ss movsl adc mulb bound movsb call dec mov ljmp mov in andl fs mov jecxz sbb mov jge jecxz dec mov insl jae or xor mov xchg orb jl mov mov lds sti jle ds or mov scas xchg cmp sbb xchg rcl loopne pop adc cli sbb enter shr push mov xchg mov mov movsl xor divb in ds mov cs js testb fcomps inc adc sub rcll out dec es jne jne mov mov (bad) jb inc movsl cmovae pop xor cli mov stos inc jae pop (bad) clc test stos jl out lds mov loope mov dec sbb mov or vpsraw loope pop loope and dec adc fwait mov or pop out imulb lds push sub int3 and lret test add fsubl add mov xlat ljmp scas out ss cmc adc sub cwtl push aad jp rolb lcall jg adc sub mov ljmp or test (bad) or popa sbb out sbb aad cmp and mov (bad) fidivl and mov ficoml lret mov push inc sbb add out or repnz pop shr les push pop ljmp add push movsl inc jle lahf sub mov dec fcoms pop cld (bad) xchg push pop and mov or pushf (bad) adc and sub fsubr enter and sbb scas mov sub lea lret jbe cli js pop cmp cmc xchg mov cmp push or daa outsl aad mov push leave hlt enter jp movsl mov icebp jmp push inc pop insb movsb pop pusha dec sub rcr add mov cld dec mov scas push mov xchg aas push jnp mov mov (bad) mov fisttp dec shrb inc jns fildll inc mov inc lcall (bad) xor add cmc mov das mov dec test nop mov and mov cmpsl xchg or into jle or dec push popf add sub hlt or hlt push pop cmp out cmpsb sub xor imul clc imul icebp loope out xor mov pop cmp add xchg lods out cmp mov fistpll jo dec in or imulb cltd push into not jae dec and roll scas ret aam inc hlt jbe jecxz and pop mov adc repnz fcoms dec add adc arpl sbb xor xor mov jecxz dec adc add test cmpsb sbb sub fcmove add xchg cli daa xchg (bad) pop adc in orl ret in movsl nop jl mov jno push cmc gs mov ret push repnz mov cmp push and pop int push inc es imul sahf xchg xchg lods mov stc xor dec fcomps xchg lock mov enter push mov fsubrl jl pop int adc in je pop jl mov xor idivl xchg sbb aas xchg adc adc push iret lods test sar push add inc mov dec cmp arpl repz add pop and sbb les xor lods out add (bad) pushf push shl and xor shrb repnz cmp dec cmp clc (bad) call pop adc mov into arpl and les js leave (bad) gs pushf inc adc lcall jae scas in inc or xor inc in pop into dec bound pop imul cld mov fcmove clc mov sub dec aas lock lret adc movsb inc push jle test mov pop inc or cmp mov std xor push bound cs mov lock pop xchg push jg mov inc pop imul pop or xor jl sbb xchg pop dec loopne ret push pop sbb (bad) pop notb mov (bad) ret jbe cld jmp xor cmp or pop adc dec popa lret cmpsb jge inc aam cmpsb sbb push cmc dec mov dec fs shrl std sub inc jmp jmp jecxz xchg cmc insl and loopne add pop fldt jge cmpsl mov push out sub xchg lock xor fwait lahf outsl imul (bad) out fistp mov pop lea or xor mov je andl faddl into lcall mov push push cmp or and jno stos outsb mov mov test pushf test shrb jmp jb (bad) aad adc int leave jmp dec lods cltd inc sbb jmp (bad) mov leave inc pop adc or dec in inc loop sbb pop out and adc and dec dec push ficomp (bad) or sub cmc (bad) out int cmp data16 sub lcall pop xor pushl pop aam pushf idiv in test inc int3 jno repz sbb pop cmp clc sbb testl push mov dec push jbe loop push jno adc jne xchg mov or (bad) sbb sahf sub or dec out or cmp cmp cmpsb push adc lahf mov mov pusha jmp fidivr test inc pop pushf dec lea lahf pop repz ss ret in gs rol call sbb pop ss xchg (bad) push scas push fdivs ficomp rcrb cmp out imulb jecxz sub xchg add mov call push or je xchg xor es icebp movsl cs in pop push sbb dec jae xchg jb cmp jo dec addr16 loop cmpsb (bad) cmp lret xor inc insb aas retw clc inc mov cli sbb aam cmp idivl adc aaa inc dec dec inc (bad) cltd cmp sti mov mov xchg imul and orl jns push xor ljmp fidivrl mov cmp aam sets jl jl mov cmp enter xor lock or test mov mov js iret mov fisubr ja push push mov or stos (bad) stos rclb (bad) inc mov mov jp sub jg sub pop lods xor jne adc lret xchg xor cmp mov scas cwtl mov stos xor scas orl push mov sbb cmc cld rcrl mov pushf cmp icebp fisub and push jo push jne dec in cld jne out mov mov dec orl mov lret mov dec repnz in jno mov sbb xor fdivl data16 xorl clc or xchg cli movsb cmpsb or imul jg,pt cmp jnp mov insl lds pop jb jnp cmpsl mov mov scas test popa sbb in loop mov mov ja xchg daa lahf (bad) mov xor sub mov inc jne and push loope data16 (bad) sub dec dec (bad) mov pop cmp push add xor (bad) (bad) lock mov ret loope leave mov pop loopne cli incb mov shlb push dec push mov fildll ljmp cmp mov fidivl loop sahf add sti cld adc mov cmp imul pop bound aad add push imul dec bound xchg (bad) and xor leave out add pushf xlat js stos and cltd cmp and test mov les nop sub pop bound mov imul fwait xchg imul shl push dec das pop adc je out inc inc and movsb and jae lret into (bad) mov cmp out (bad) xchg xchg inc dec lods cwtl mov mov cltd lret ljmp jns cmpsl test cmp negb mov je stc mov push mov cmp jg sbb bound mov ficompl mov movsb lock sub cmp into dec cmp fsts cmp sbb stos add cmp out es adc js arpl xor pop pop inc inc pop dec (bad) aam cld dec mov push dec fs insb add stos aas loopne push aas push mov sbb sbb clc fistpll lods cmp ret jno sarl or cli out xchg and sarb js in pop xor rorl test aad xor mov fimull mov cmp inc pop adc inc rcll ficompl sahf sub fucomi lcall (bad) inc mov lret test mov cmp mov jp sub cld adc sub or push mov push test incb or mov es ret lret jecxz pushf aam mov add push add das cld (bad) ss fisub fcmovne xchg icebp and push mov push in sub bound sub xor pop dec mov imul gs movsb cli fsubrp and dec icebp jp mov stc pop jmp mov mov sbb sbb and stc scas pop popf ljmp fsubr mov les loopne outsb push stos int3 inc repz or jl and mov fnstcw or mov fs test fstps scas stos imul mov mov stos data16 mov movsl push lahf popa pop push pop inc xor outsl cmp cld rcr les xor jo outsl std push popa bound push inc pop out cld lret mov pop fs addl and pop cmp add mov lahf ret xchg and call adc aaa daa adc js cmp inc mov repnz into push (bad) ror test pop movsl aad arpl fdiv push cmc out push (bad) cmc pushf or mov stos adc jnp sub pop pop jbe call dec stos dec inc mov sub setge inc (bad) out aad inc scas dec repnz add inc arpl jge sbb fwait adc int aad pushw jns pop jmp ja push cmp jecxz lea xchg ds call mov mov adc push sub stos lcall das outsl cli mov mov scas in jge or sbb pop inc jl or dec xchg mov in pop push pusha inc lods xchg cmp jno stos fidivr push ret enter or push inc dec cmp sbb push dec jecxz mov push pop push push negb lret sub mov and add nop scas mov fisub mov mov rep ret rcll std clc stos (bad) out loope mov or (bad) dec out bound test and mov mov or cmp mov mov pop movsl mov popf fistl cmc xor pop jle add clc iret int3 cmp movsb loopne aam jmp test mov sub fcomp pop clc dec ds push iret stos loope outsb shl insb push sbbl mov ffree js add call out or pop in cli push (bad) dec addr16 lea pusha xchg mov movsl fldenv cmp outsb cmc push movl imul add adc fisttp cmpsl repz movsb xor mov mov mov out lahf mov jp mov lea pop xor out and xchg mov push xor mov sbb push inc mov out sbb mov shrl call out xchg cmp push adc xchg imul lcall ss inc (bad) and scas or inc mov xchg lock sahf sbb in cwtl jecxz cli repnz add xlat in mov xchg jp lods cmp lock xor and aad inc and std in push xor mov lea mov shl imul mov push push lds ja stos sbb roll cld test loope outsl call pushf jne lcall out iret pop sbb icebp rcll ljmp fnstsw and mov adc outsb pusha into imul in rcrb stos (bad) repnz mov dec dec (bad) aad jecxz xchg push jae ljmp and push lea aaa cwtl sub fistp mov in fwait aaa mov clc daa pop xor add xlat adc push int int3 and lcall push movsl xchg inc jmp adc (bad) ret pop ja scas test mov outsl xchg in sti jne hlt lret inc (bad) fcomi (bad) outsb (bad) pusha sub or xchg push mov push lcall test subl or or and pop lret movsb (bad) dec lods loope adc jo (bad) mov das sbb inc inc je scas (bad) mov mov push xchg sub fnstsw xchg mov xchg xlat cwtl adc inc ret repnz scas and pop lods add out and leave popl call hlt mov pop repz cltd pop mov adc cmp lea lds ret repz xchg fidiv insl (bad) aad mov add enter push shl test in adc imul lcall add sub movsl repz jno inc pop dec add insl scas clc lods lods mov (bad) repz call xchg xor pushf lods mov adc scas mov inc mov lods mov and push imul mov leave and xor pop mov jg out inc subl sub andl dec push push pop mov ss push xchg cmp sbb stc ret mov pop or jle push ljmp xchg ficomp cld ret test fs or inc adc pop scas das push xchg cmp dec add jno popf and and mov cmp shlb and xor popf fistl stos jge add (bad) stos icebp test and andl sti mov in push mov addr16 outsb mov test lods mov mov add arpl dec mov pop test loopne mov lcall adc lcall pop shrl sub jl inc lods rcrb shrb pop mov ret leave adc ds mov pop mov sub mov mov add push sub mov daa (bad) jns aam (bad) mov scas loopne imul adc rol das imul dec daa and mov pop clc mov (bad) enter adcl adc repz and mov test clc call lcall sbb sub jo sub lods outsb mov stc insl and in fsubs repnz mov js (bad) jae inc arpl lret and inc dec inc ret shrb stos inc outsb push xor movsl imul mov jmp cmp add aad mov jp jno jbe jbe mov pop inc sbb push (bad) jae sbb adc shlb ret (bad) cld fsubr sbb js inc mov xor orl pop in cmp jmp or and fdivs mov or xor rcrl xchg (bad) imul push mov pusha jecxz repz (bad) and jp nop push cmp sub shl mov dec loop jge push sbb and imul (bad) rcll mov xor cmp sub xor popa lds out push xor jo adc fwait das add push lahf dec jns or testl and popa pop xor ja or mov mov (bad) rclb les mov jne iret pop mov adc xchg sub push push dec (bad) push sub jmp jo cmc lahf pop add jecxz pop adc icebp mov les fdivr loop inc push mov push mov push mov mov and (bad) lea or cmc stos mov inc cmp fs scas and rolb sub (bad) xlat je mov xchg xchg and ljmp adc xor inc adc out and dec notb ficom movsb mov jne fs push pop ss lock mov insb cwtl dec cltd sub or cwtl lahf mov pop clc aas pop xor jae cvttps2pi jae out lock add outsb fmuls mov int jmp es bnd ja (bad) jnp mov mov ret fldt dec jno bnd xchg bound (bad) dec mov sbb aaa sbb insl xor fs mov hlt lods adc (bad) ljmp adc cmpsb sub mov dec aas dec mov pop mov shr cmp mov test loopne idiv mov in popa pop lock cmpsl sbb aam in aad lods mov mov mov xchg in or or sbb jp push stos les data16 bnd int std mov nop vmwrite std jb xchg inc gs xchg pcmpgtb test push aam cmp cmp dec call sub mov (bad) pop cmp and mov add das sbb pushf jb mov ret jb mov cmpsb mov dec push loopne loopne cs sbb fnstcw xor sarb lock xchg (bad) push cli lds ret sub push jae leave xchg cmp lret sub pop imulb pop fs dec lea sub lret xchg push gs loop dec lods out push mov and jno adc dec inc cmp mov sti xchg in dec in jnp iret rol das xor mov lcall pop and lret xchg xchg xchg sbb call xor mov or shlb out (bad) aaa jge lds xchg push push or mov dec jmp negb adc mov push adc sbb in lcall mov sbb xchg fimul push dec xor jle scas jb adc std xor or cmp idivl jb mov and mov mov fidivl dec pop scas xchg fdivs push daa mov mov rcll aaa test aaa xchg je dec mov or mov jb dec and into or pusha (bad) test mov sbb xlat mov pushf sub sub fwait jbe popa das xor xchg mov aas jecxz pop sbb (bad) cmp outsb mov xchg dec or xchg push sbb inc or cwtl jns (bad) test cli jo mov add adc xor (bad) or fstpt sbb push xchg xor or mov pop ljmp cmp cmp inc (bad) mov mov clc sbb pop pop jp inc fsubr inc cmpsl aaa cmp jne jo rorb pop xchg cli fisubr push mov adc addr16 cld lds push inc mov mov dec cmp pop push jb mov mov sub adc sub sbb outsb pusha enter and xchg add cmp loopne lahf mov mov xchg inc incb cmp ffree cmpsl dec (bad) xor mov sub nop push mov test hlt iret subl mov jg mov fsts xorl (bad) mov ffreep scas sbb or je or cli mov or push mov mov popf jo dec xlat arpl lods mov repz push addl nop jae scas jo sarl xchg pop cmp jmp mov jp or sti (bad) mov (bad) jbe mov (bad) aaa sbb rorl cmpsl (bad) and repz add clc std push ror call sub jnp xchg push mov (bad) cmc inc mul popa sbb in jno insb leave dec mov je mov xchg iret out push cltd mov or notb jns and inc popf jb into gs repnz clc cmp dec xchg pop lock push pop pop add mov mov sub lds fnstcw jge fcomp xchg rolb and xchg int3 add and mov imul addr16 insl add add and test jne ja jnp ja jmp ret mov and jbe cltd scas andl js lret inc loop xchg push test dec pop pushf xchg popf mov push lret test cmc bsf adc mov outsb call fwait push dec movsb cmp iret and mov stos mov aas adc lret sub adcl fsubr jo subl movsb jno cmpsl repnz scas es lock sub fs movsb dec jno xchg je movsl jns,pt std adc nop xchg pop adc (bad) iret movsl fistp pop imul sarb add jge stos (bad) leave push stos (bad) sub movsbl call gs mov adcl mov jmp cmpsl mov xor pop int3 lods shll aam fcmovbe add cmpsl push imul mov int3 cmp mov cmp adc xchg xchg loope jl (bad) push loopne test clc lret ficomp rcl mov cltd fldt out pop sbb or frstor cmc or (bad) push mov test ret mov ror adc or addr16 jp sbb ds into lea push push sbb mov scas movb bound push mov mov and (bad) and pop fwait push lret xor rorl add test outsl lret fstp sub xchg sbb dec sub repnz inc sub es arpl icebp pop pop (bad) push xor inc fwait push xlat leave shr aas sbb jnp lcall mov mov mov test popa cwtl test insb (bad) shrl push pop cmp shrl cmp inc pusha mov std lea outsl push outsb enter out call xchg fwait xchg fstpt lret paddsw push leave and dec test (bad) jmp ja out adc xchg mov add cltd cmp fmuls loope add dec into into loop sub or mov fidivr push je insl gs push addr16 mov (bad) jne mov clc inc aas nop mov bound push sub loop int sub (bad) out jae mov add mov or sti shr xorb sbb push cld sub jmp push jecxz and mov loope add push cmpsb out icebp push mov aaa xor fsubrl test cwtl mov jnp cmp xchg aam jge std cs inc push inc (bad) divl pushf loopne add add es nop mov or inc inc fsubrs xchg icebp movsl inc outsb mov mov loope les mov ljmp and out out jmp sti lret lds push xchg xchg adc orl add stos xchg sti and dec pop push imul push int3 mov push stos inc (bad) xchg sbb (bad) sbb in mov lret lock insl loope push lcall cmp fs imul mov nop ljmp xchg into (bad) or sbb fsubl mov sub push test push frstor icebp aaa stos or mov sub test xchg (bad) arpl (bad) xor sub mov adc cli mov adc lahf mov in (bad) clc mov xor jo cmp adc clc jne xor mov xchg imul (bad) idivl dec mov aad out mov call mov cmpsl arpl call mov jp mov dec mov xchg cmp xor dec pop xor (bad) fwait ja mov pushl cmp test or ljmp mov sar mov addb jg insb daa cmc xor es mov cmp imul jno inc loopne in mov or push pop sub cltd jecxz xor add decl in mov add ss mov dec xorl test shrl cld loop mov (bad) push in cmp rorl xchg mov loop add (bad) sarb lret movsl arpl aad mov sbb pop xor ss jg adc mov adc imul pop incl jno xor fnstsw cmp roll or xchg xchg pusha sbb xchg icebp fcmovu ja mov (bad) xor push mov mov test adc popf out sbb xchg mov nop (bad) and cli dec fldcw test and xor xchg inc xchg push jo leave fcoml scas jp test aas pop jge push fcmovnbe pop out cli pop js nop idiv ljmp push push das in fsubl push dec fistp pop les mov push push cwtl mov sub sbb sbb stc insl insl out repnz (bad) push xchg rcll lahf ror pushf jecxz insl and lods inc shlb mov test in jbe stc push lds xor (bad) (bad) dec (bad) (bad) pushf cmp mov jns dec test mov fmuls mov fldenv loop jp jno jmp cmp pop inc xor xchg inc add mov es jmp stos loopne jo dec aad adc pop lcall and dec xor fistpl inc loope ret je dec inc inc dec adc jecxz or es popf add repnz mov outsb mov mov mov add mov jnp outsl or add inc jno xchg sbb mov mov or (bad) pop lods mov inc imul xor js xor pop sarl dec sub xor lock (bad) xor negl stc xchg in js fdivrs inc add mov (bad) (bad) sub push repnz push mov xlat add sbb jo cmp mov negb pop xlat loop push add popf xchg jae add loop je xlat or imul jb sub jg les lret pop or ret pop das scas mov lcall hlt sbb mulb (bad) or fdivs jle jg mov or dec out add lret mov adcl xchg or mov jmp fcmovnu fwait add insl adc in stos mov int cmp (bad) push movsl push adc jmp scas shl dec popa mov mov repnz lods (bad) xor mov add jg jge add movsb in je int mov popf jmp mov jbe rcrb pop push sub (bad) xchg fmuls add cmp push test inc scas and xchg jp daa dec inc xchg rolb sbb pusha inc in xor adc outsl mov (bad) dec xchg push leave or jg xchg mull jp sub fldl push inc add sub push jae xchg dec into sbb ds add pop jbe stos test fsubr mov mov push dec ja leave xchg out lock inc aas test nop push cmc sarl sarl jnp imul (bad) xor cmpsl and inc mov nop popl (bad) xchg jl xor cs das adc mov push xchg dec xor inc repnz inc xchg cli push (bad) cli scas sbb insl cmp outsb jns sub push inc xchg call (bad) aad xchg jbe in push adc lahf cmp mov rolb nop inc icebp xchg add jno sbb movsb cmpsl roll sub adc dec sbb jge cmpsl aam repz test stc cmp orl cwtl data16 xchg loopne add cmp loope loope mov inc mov test push lock outsl push pop push dec mov scas (bad) enter (bad) ficompl push mov cmpl rolb nop xchg mov inc (bad) (bad) pop cmp jns into cmp sub scas push and lods jne jne sub xor lret xor ret cmp sbb xchg out movsb out outsl (bad) fldt jecxz cmpsl test dec sti int add mov or stos (bad) push xchg (bad) adc and jbe inc pop inc pop pop or pop or cmp mov and mov and aad addr16 mov rcll or sub lea mov dec dec (bad) xor xchg cmp adc sub add fldcw add xlat fnsave xor loopne mov jecxz insb push sub cmp dec xor lea jnp push dec (bad) fnstcw or aam inc clc mov gs fcompl fistpll imul iret dec icebp cs mov jg aaa int or imul cmpsb cmp xor dec xchg push test jecxz ret adc iret insl push loop fsubrs push mov or mov inc sbb sahf aas jg rorl repz inc cmp negb dec stos add jl sbb bound repz add scas dec loopne mov enter add jmp cmp mov mov test nop clc sarb fdivs xlat adc mov sbb adc mov and mov push push lahf out orb sub int test dec xchg lea test stc lods outsl fistpll dec adc pop (bad) fadd sub dec mov inc sbb cmp sbb leave lret sbb jnp mov sahf adc cmp add (bad) lods sti add or cmp xor cli in leave gs inc xlat inc subl cltd out xchg lea cmp sub rorl cmpl cmp xor aad lahf bound enter sub push fs mov sbb fnstenv loop fs xor pushf and loop mov scas test add jnp lret xchg mov add inc sub pushf sub outsl popa and dec (bad) adc fdivrl mov sub push push push lcall test inc nop sbb ljmp cmp xor sbb leave dec adc mov int add lret pop loopne mov mov je cld mov dec lret pop fnstsw cmp xchg inc data16 data16 or pop adc add andl fs add mov arpl test iret inc inc cmpsb mov and xchg mov dec stos fcomps test es pushf mov fimull jb mov (bad) sbb out bound mov sub xchg jmp mov sub flds gs fimull xchg jp lds sbb dec imul loopne gs xchg lret adc pop xchg ds adc stos sub daa cmc std adc or in jmp sub int fisubl pushf in add jbe,pn cmc inc xor pop pusha cmp dec ret jo roll (bad) mov inc pop shlb pop jae jmp or pop loop sbb les sbb cmp mov mov std in and sti sbb mov test mov fidivl jns aad push bound repnz (bad) xchg testl push xchg out and push shll mov cmpsl cmp mov insl jae xchg mov pop push adcl mov fisubr mov into mov sub int3 outsb cld lret (bad) psllq (bad) pop inc popf sub es jo iret (bad) mov and adc hlt lret ljmp ret push rcrl mov mov push adc das xchg call nop mov lahf dec (bad) leave mov lcall addr16 (bad) xchg sub (bad) or push stos out cmp mov mov sub cmp jle popa push pop dec and rcrb xor push les lock xor out sub mov mov push dec add push aam idivl and das cmp movsl imul je push ss lds jmp popf cmpsb and mov dec dec icebp sub lret inc (bad) push dec xor pop mov fbstp out call and jmp mov sub outsb jae mov pop pusha ljmp xchg into scas pusha jo (bad) fcompl xor adc sub (bad) in das jle push adc or mov pop sub repnz jmp push ds sub push or stc xchg cli and xor test dec adcl inc ljmp sbb enter fdivl add scas mov inc dec cmc fwait in and mov inc (bad) lods pushf std dec ljmp push pusha mov (bad) mov out hlt push mov es and xchg mov xor insl orl mov inc add xchg aad inc adc lcall scas mov and gs ds xchg and cmc insl jl sbb cltd dec fnstcw sti dec dec or dec adc icebp aam or testl jl push sub mov roll testb (bad) cmp icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle outsl add incb sbb out mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) jbe pop sbb adc mov (bad) (bad) sub adc xchg jmp sahf xor cmp jp clc mov fildll jmp adc jb in sbb dec jge mull mov loope xlat add inc or pop out dec stos lret inc xor or lock aam inc loopne pushf mov ds sub pop rorb sbb cmc jl xchg call xchg movsl sbb push xchg and fstpl sbb and hlt movsl adc xchg cli std mov int cwtl ds mov cld pop xor sbb cmp pop lods out stos das pop in pop mov sbb sti daa mov xchg lret insl lret pushf repnz stos fdivs test xlat int lods mov pop mov cmpsb adc xchg aam sbb mov xchg xchg mov jge scas lahf inc scas test jb in mov adc push or pop sub mov (bad) jge out inc inc cmp and xchg imul add mov inc sahf jnp add lcall pop add dec pusha js dec rorb das dec adc sub push xchg pop std xlat fild (bad) stos adc hlt push pop pop pop mov and aas insl xor pop imul subb xchg enter add mov gs das orl stos cwtl lcall negb xchg rorb sarb dec cld inc notl stos shrl aas dec bound pop cmp int dec mov and jb insb test and push out in dec out xor sbb sbbl mov jb dec pop clc sub scas mov mov cmpsb insb sbb cli icebp cwtl (bad) lock pop imul aad cmp xchg in loope jns xchg or ds push cmc movsb ficompl adc sbb movsb mov inc (bad) adc je xchg xchg jmp stc aad or xchg pop adc int dec rcr sbb xor fneni(8087 cwtl mov xchg repz ja test xchg jno pusha test mov add xor mov push mov scas imul pop mov push and dec mov pop in dec lods lcall pop inc mov sarl xchg and fsubl subb bound dec xchg inc loope xchg (bad) mov stc cmp push aad sub lock mov cmp or bound insl lret cld pop loopne push out std loop inc adc lods push into (bad) in mov fidivrl pop xlat aaa pop lret push or mov fidivrl fsubrs xchg das sahf adc mov push scas stos jle and cli adc push mov mov sub in loope lahf je out xor adc (bad) mov int fidivrl fisttpll aaa fucomp loope xor add pop push sbb cmp dec pop mov (bad) adc jns and call mov jmp adc out comiss call jns cli mov push sbb cwtl xchg pop fwait repz cs adc andl divb add mov in dec lds inc xor (bad) push cmp or out loopne test adc loop pop ret jne dec dec ffreep pop jne xor mov stc pop dec retw sbb xor stos lock lret or push mov aas pop imul xchg ljmp mov shrb xor sbbl gs shll (bad) aaa mov adc fnstsw (bad) and lock dec and push mov loope or lret int3 pushf (bad) mov aas and orb lahf mov pop lret fsubs mov lea inc je mov cld ficom (bad) in pop js inc in shrb xchg xchg pop mov in outsl mov fwait and movsl jecxz repz gs dec fisubrl jmp daa dec iret ret les jmp cmc sbb iret aas xor int idivb je scas or loope ja and inc jo in pop imul aad mov aas scas decb sub jecxz push js add or clc pop xchg pop imul mov (bad) push das mov insl add pusha pop mov mov mov mov (bad) enter int jno or sbb aad inc add fs dec pop incb and cmpl push mov sub or testb in ss push jl andb pop jle scas movsl mov iret jb push pop pop pop ja in xor dec mov inc fprem1 or js xchg frstor mov xchg xchg push inc jnp shlb jb out ss aas aas mov (bad) mov dec fwait add mov das sbb xchg dec xchg bnd mov adcb (bad) js sti xchg clc pop fdivr in push call lods cli pop sub cli jb adc pop leave push out ret or xlat pop test and (bad) xor enter ljmp xchg int3 jmp and in enter fisub xlat xchg xchg sbb cmovb sbb clc cwtl sub add or xchg nop enter xchg (bad) and adc cld mov into shll mov insb push (bad) out cmp xor mov (bad) int3 sub fcomp or fldl add out inc sbb jge enter mov ror fisubl push ret hlt cmc mov aaa sub sahf sbb xor pushf cmp adc or dec xchg dec lcall jne (bad) addr16 xchg sub ja and outsb mov negb ret jno in stos js cmp scas cmc dec adc call mov sti mov sub jg inc push into jae and pop cmc xchg gs cmp jo pop cmp sti aas out xor test outsb lods in or lds clc pop nop xor stc xlat jns (bad) les add jb std les cmpsl jecxz cltd lea pop lds jae and xor pushf xlat jle cld les es mov (bad) (bad) sahf lds inc push add sub sarl xchg sahf mov adc loop mov sub mov out push bnd inc push out push lock arpl mov pop jno and std and shrb sbb xor and jle mov (bad) pop ret in xchg dec adc pop inc shr jg lret push mov xor jnp insl mov test mov call mov cmp mov push xchg out sub call and sbb dec cmpl and scas cs arpl cmc lods stc jg xchg js xchg pop dec scas insl and cmp jge out (bad) mov inc xchg cmpsl jne leave (bad) mov jmp inc flds popf push jp xchg xchg ret adc xor push mov shl mov lods imul sub bound lret fcmovb das dec pop hlt in xchg enter sarl or xor mov movsl sahf adc sbb gs add stos jno hlt popf lock xor pushf dec push mov or add xchg adc sub sub mov jno (bad) in pusha in jmp or test pop sub mov cmp and nop push fndisi(8087 jne lods (bad) (bad) xor mov in sbb cmp addr16 xor movsl push adc lahf daa push xchg jmp cli out or daa mov pop jbe push prefetch push lods (bad) xor add push mov aaa out das pop stos inc loope rcr and mov repnz jns mov ds loopne test mov sbb rcrl or cmpsb mov loop pop and sbb push jmp add sub and or mov adc sub sub sub pop mov dec jb sub cmp stc mov ficoml pusha shlb mov add scas pop adc mov jmp das sahf aaa jbe imul inc fisttp jno js icebp mov or cmp xchg jns pop pushf pop cld je fidiv test repnz inc in lret mov push and cmp xor add adc mov sbb jge stos adc (bad) inc xchg sahf rcrb cmp sub andl (bad) and (bad) sub fldt shll (bad) fs cltd mov inc es stos test xor xor mov sub insl cmp and sahf cmp insl push mov sbb sub lock add cmpsl inc movsl pop in xlat movsl ficoml mov cmpsl or ret sub push (bad) fidivr xchg out or out loope dec mov push inc lds cmc leave hlt mov add or sarl loop sbb sub (bad) inc nop lcall jns fidivl ds out nop jnp cmpsl and cmp pop lret pushf adc push dec outsb ret jo call das (bad) int sbb movb (bad) ljmp sbb pop jae mov mov inc rorl sbb cmc jp fidivrl xchg or xor enter push mov stos insb lret mov pop mov addr16 scas mov jne mov scas fist dec dec sub add (bad) cwtl (bad) jp sar pand mov dec pop out dec add dec xor aaa arpl mov test je incl or and push mov imul in sbb jmp fwait xlat lods fdivl js cmp dec fwait out lahf aad fs mov cmc leave mov cltd xor divb je xlat sti push repnz xor ljmp jmp push repnz xchg clc lahf ficoml cli scas add loope ds jne add (bad) fstps inc test push out push pop test je dec push mov and sbb mov mov adc pop popf cmp dec and adcl dec sub (bad) les rcrb mov mov call out add push cli movsl aas cmp xchg fwait clc ret push (bad) ja sub (bad) xchg and mov dec adc out or cli bound nop mov enter shll int3 pop mov cmp out jns mov scas add rcrb xor (bad) cld rcrl fistp lahf add xchg inc cmp dec mov xor add fwait inc inc push cmp push xchg aam mov jg push cmp out mov lock mov fiadd pop mov pmulhw push test arpl jl inc add pop (bad) (bad) stc cmc inc inc subl cmp bound mov mov cli comiss popf imul pop xchg loop jg mov adc pop daa jle and mov mov and or lock adc repnz inc (bad) xchg mov loop inc pushf sub mov jo cwtl inc or lret addr16 dec (bad) jne or cltd push mov sbb push inc adc add packuswb pop add jb,pt dec xchg (bad) xchg adc cltd ljmp aad sbb lds pushf ja data16 mov fsubrs lcall add das pop inc push mov mov jge adc and mov and jne xor and lods sbb adc inc dec cld push arpl lret decl ds xchg adc cmpsl pushw sub jle fstpl cmpsb imul jno fldenv xor lea mov cs jecxz sub or mov adc sbb xchg es ror cmpsl cmp sbb fdivl adcl jge xchg and add (bad) je ja push inc xor pop xor (bad) push ret lret mov cld push xor cmpl inc std and mov (bad) mov insb leave mov xor je xchg pop lcall loop lea scas cltd jge insl pop dec pop ret push out mov imul scas or ljmp sbb inc sub pop scas lcall push fild jae popa jns (bad) push adc call mov fs xor popa mov enter lods loop add out add inc push movsl scas mov das repz push xchg in ds fimull (bad) mov stos sbb push test iret rclb fsubr divb cld outsb xchg daa lods stos ret cs push (bad) fidivrl cmp xchg jae dec mov and sti mov ficoml fstp daa push xchg xchg ljmp mov add jo sub push cmpl aam lahf mov shrb ret jo lock aad adc or or cmpsl dec movsb jns std lea or xchg in inc mov sub cmp (bad) mov sub aas arpl jg jmp sub cwtl aam xchg stos out cld mov out loope test stc rol pushf dec fnop leave repz fldt xchg je test xor xor sbb mov andl cmc testb stc lea sbb pop jns les int3 cmp push in maxps mov fwait cmp lods (bad) cwtl fild cltd dec out lahf dec mov xchg lods mov fistp push push mov or mov mov mov dec in lea sahf pop sub add aas int3 loope pop push mov lret loope das pop rorb sub movsl lahf jne xchg mov div or mov sbb or sarl pop adc mov mov jle test fwait (bad) mov sub aaa enter adc scas aam daa mov pop dec dec cmp ja mov movl cltd xchg lahf mov push add xchg sbb or and push add and test fs mov sahf (bad) fwait aam push jae fimull xchg pop scas xorl sbb and mov jg test inc call lret hlt pop aaa outsl into call sub xchg push and jg pop or pop cwtl xor adcl xchg push (bad) jge std outsl data16 les cltd push and push in lahf xchg cli les xor and add mov and dec push inc jmp ds jns mov out addl inc inc jb xor int3 ss dec jnp iret in jg into leave adc mov dec subl xor xchg std dec xchg pop xchg xchg scas out cmpl mov ljmp adc sbb dec ret insl xor or int dec pop loopne (bad) mov push movsl divl fmuls fild pusha dec flds into adc sub jecxz dec rol leave mov scas push sbb cmp add lcall aaa bound or lock sub inc out rorl or mov cmc iret cmp cmc push es movsb lret gs repnz dec pushf pushf add pop pusha or data16 scas cmp lock das fs pop jne dec pop pusha ret jg cmpb add das add rcll or jp add xchg jp jg jbe add mov adc (bad) jne sub mov dec jo ss lea push mov adc outsl bound mov ja and sahf sbbl scas int jmp mov adc or lcall mov push iret call mov jb,pt cli sub imul (bad) out (bad) stc inc stos and xchg (bad) cmp or jae jae jle cmc pop push ljmp in popf std shll lret mov jne (bad) into mov repnz outsb mov orl pop and mov mov into or push mov mov mov repz pop ja cmp cmc out out xchg neg mov adc and or int mov ljmp inc (bad) nop roll jo lods in jae pop pop cmpsl imull mov dec les (bad) xor jae jbe insl sahf stc out rcrb je stos add shlb fdivl test mov inc push push xchg push or sbb and jge cmpsb repz cld add jae lods inc ds fdivl popa cmp xchg leave and add outsb xchg xor dec push fmulp mov (bad) mov faddl mov int add pop jo out test jg jecxz sbb addr16 add push xchg mov mov xor sar jge cmp cmp jl (bad) fldl (bad) mov push es dec or jno push inc stc push into idiv cld aas xor nop aam test inc inc jnp push stos add insl and xchg ljmp dec mov xchg mov fs push ljmp dec jmp movsl mov xchg mov les aam imul icebp insl push dec (bad) jl dec mov daa imul push sbb ret add in pop insl mov popw jl movsb or push fnstsw pop mov jle ja stos out dec cld jl mov mov loope ret pop ret lret inc sbb cli adc and nop (bad) push stos xor cwtl inc popa arpl pop pop test inc (bad) cltd jge outsb pop jmp adc cmp dec outsl add mov jle aas sbb sub mov shlb call sub cmp jmp and xlat (bad) in jb lahf and xor lods add pop pop movb test mov fwait inc xor stos adc inc pop popa adc cmpsb xchg fldt fistpll xchg mov cli jl mov cmp cmc lahf add test std cmp jmp outsl movsb movsl mov cmpsl jp push clc dec mov in jo aas std inc xor inc pushf mov mov and dec flds test pop negb cltd into fdivs nop loop sarb sbb push xchg rolb adc or hlt ds push cmp cmp jmp adc mov out ljmp test mov xor sbb push (bad) mov mov pop jb pop mov (bad) lret jge inc ljmp ja jle scas arpl jbe lods ljmp lods mov sub mov ret (bad) pop xchg clc jne push cmp dec xchg outsl inc mov shl aas jne inc cmp scas (bad) add imul arpl gs dec sahf fdivs adc stos in mov outsl pop iret sti ss addr16 sbb hlt sbb or lock mov sbb std push jge sub je,pn dec xor adc popf fadd ja sub mov push adc sub fiaddl sarl xor inc out pop pop mov sbb lock mov daa addr16 pop psraw xor clc stc js fcomps pop mov and mov push fwait mov mov add pop lret sbb dec jnp,pt loopne push insl jnp add push dec mov add subl repnz lock cmp je fimull sti sbb bound aad jp imul imull cmc xchg insb adc insb jno in cltd push sub cmpsb pop or jne repz out mov push cmpsb cmc outsl jbe jecxz dec jmp pop add divb inc cwtl ret (bad) jg pop or xchg or pushl push les leave daa cld add adc aam insl sub test icebp fstpl inc fidivrl push std jns cmp outsb (bad) cld push and stos cmp mov dec or mov (bad) or fadds repz adc mov cmc outsb pop clc pusha add loopne adc push stos xor mov fwait pop dec sbb xchg pop ds inc sub aaa cmp icebp inc outsb insl out jo lock push mov add dec push pop jne and ds paddsw (bad) mov mov fisub and ret mov inc xchg js xlat (bad) in cs gs xor fdivp mov inc pop sbb sbb jns div (bad) xor jbe add dec xchg push and ds adc sarl cmp pop jnp lds outsb mov mov sbb sub mov push sbb mov dec aas insl add add mov sti pushl roll shl mov mov mov lds pop cld cmp loope dec add sub push mov pop outsl fnop lock cmp mov pop outsl outsb je and jge mov sub jo loopne out dec ljmp insl andl inc jno aam lea rcrl in pop dec ja mov sub pop sbb loopne sbb fwait je sub sbb pop ret cmp ds pusha jb mov xor aaa (bad) jo das jp insl aas mov dec or lods cmpsb pop or and mov adc cmp mov xlat call lret xor out dec mov ficoml xchg or dec xchg xor lahf add adc push jg pop outsl push add add adc test jmp (bad) repz pop fstps pop or sbb sar inc inc add fisttpll out mov cwtl and mov mov push aaa cld pop lock fs clc mov add ja mov add and mov xor adc enter movsl mov popa pop jmp or cld dec ljmp out pop hlt and jae sbb sarb stos xchg jmp aas jecxz xor jnp aaa sub mov sbb dec jo push jle dec mov popa add pop cmp (bad) mov xchg mov call mov xchg lcall and xchg push or idivb jae sub mov insb sar (bad) in xchg cmp lret xchg fldcw int xor mov or add add xor sub xchg cmpsb stc adc or mov insl mov (bad) cmp mov xchg push push (bad) xor loope mov sbb call js xchg jmp lret mov mov dec mov or sbb (bad) xor inc mov in jge jnp push loop js mov and mov inc sub mov mov xchg lahf dec mov imul int cmp in cmp (bad) jo ljmp xchg cmp push std int3 adc into (bad) fstpl mov cmp and jg add test push push or or fwait adc xchg (bad) in sbb lock enter (bad) xchg iret sbb fs lcall loopne les mov xchg mov push push pop sarb sbb fsubrl cli in add sbb stos mov ret push bound and loope adc xor sqrtps adc movl je mov pop jmp inc push daa leave mov xchg push adc jb ret stc loope in movsb push inc inc sahf stos in pop mov dec je in push dec or mov and jp in dec cwtl loopne inc inc ljmp adc (bad) xchg nop pop mov clc push inc out sub imull mov testb mov les bound sahf push push std out jno cld repz push loop pusha out jl popa dec sti fs ja lcall orl adc out mov mov stos push hlt mov fildll xchg in in leave std insl add cmp pop or aaa addr16 sbb arpl or int3 mov mov cmp dec out jne sbb sbb inc adc mov int dec leave jp mov leave and hlt and iret mov xchg push or aad jl rcr mov stos xchg fucomi cs dec add jmp mov (bad) pusha (bad) or inc adc outsl jp mov or add je mov cwtl sarl fs ds ss jp jno outsb in test pop pushf dec sbb (bad) int3 dec orl bound test push xor repz ja push or (bad) scas fiaddl push in cmp fisttpl mov push push or push in and jne fstpt push or jmp jo cmpsl pushf jge and and dec nop mov test dec cmp inc fidivrl outsb mov push inc cmpsl lret mov es loop cmc fld inc mov (bad) dec jbe stos daa jbe xchg xor leave test or into pop ss ret add and mov jae adc (bad) cmpsb mov and inc fbld sbb std repz xchg ss xor ja movsl xchg (bad) mov sub fidivrl (bad) leave addb pop mov mov pop cmc mov imul xchg repz movsb fadds push fs inc mov push sbb js cli or ficompl cmpsb arpl in xor push (bad) xchg pop (bad) sub inc dec sahf push sub lods mov sub pop jo pop les pushl inc bnd push fstpl cmpsb jg mov test inc dec adc sti jmp mov sub out mov loop repz jmp pop movsl pop fs outsl movsl aad mov or cmp lret loop sbb idivl es mov clc add and xchg xchg push sbb out jecxz das mov push cmp pop fwait sqrtps push scas jns dec inc inc jnp push int3 in xchg (bad) scas pop inc jmp mov inc and mov lods rcl mov add movl cmp icebp movb das cmc (bad) adc insl push bound lods jle imul mov fiaddl pop adc pop int inc fcmovnu lock jmp sbb and outsl xor jg inc lds fiaddl test xor sbb lock sub add in mov push add stc aam dec ss xchg mov mov mov inc push jg jbe mov xor push push das add lds outsl outsl arpl ret lods fstpl cs mov inc xchg jle fisttpl jne outsl outsb clc pop pop xor push cmc xchg shlb pop sahf adc les sub scas jmp push inc loope cld rolb test pop xor cmp mov push addr16 mov mov jg in mov out jnp pop or in jecxz xor sbb dec sub fcoml mov push flds push sahf or xor icebp sti pop sub dec int3 punpcklwd dec or outsb lcall adc scas clc popf idivl cmpsb mov jb cwtl pop (bad) mov mov mov or (bad) repz pop pop pop sub mov dec mov (bad) add xor cmp sbb or rorl je into test add sub or mov cltd mov lahf gs aas daa shr or ret xor adc out arpl es fcomps repnz (bad) xchg cld xchg int3 pop mov push inc sub cltd repz jp push and mov subl andb xchg imul add push jno fwait mov sbb dec rcr enter and add bound subl and inc ret jg cwtl aam lods es mov scas xlat inc int xchg inc push and sbb adc add cmp push jg mov hlt lret rorl sbb push and push fs jl aam cmp and and xchg fstpt pop mov and sahf xchg (bad) xor lock nop mov pop popa jae adc adc push jg jb lahf dec mov mov xorl push (bad) aas mov mov mov jp adcb fsubl pusha cmp mov outsl arpl xor lahf pusha ret int xchg mov loopne les push dec shrb imul fstpl sahf jo (bad) xlat leave adc mov rorb shrl dec pop fisttpl mov addr16 popa pop add mov dec jl xor pop arpl or lcall adc (bad) fwait insb je cmpsl mov push dec (bad) xor mov xlat mov in scas dec pop mov adc cs iret mov hlt add sahf pop inc iret lcall mov imul aam (bad) mov into das and sub pop inc jl mov jnp dec ljmp das add aas lock (bad) jecxz pop jecxz fdivr jne sub test fwait cmpsl lea jge arpl inc cmp lcall test and lock ja add push (bad) movsl push out dec jl adc xor call or or adc in aas xorb flds or pop pop xchg hlt inc dec push aaa int3 sbb lahf subl add leave into mov jns (bad) shrl test (bad) (bad) lods jl arpl xor ss dec out iret lock push mov or outsl (bad) mov sub pop xchg inc popa mov sti dec hlt rolb in dec test jmp xchg dec ss jecxz shrl sub (bad) loope (bad) cld pop loop pop mov (bad) sbb dec int3 cwtl imul jbe mov mov pop ljmp stos test dec push loope or push pop and mov (bad) roll lods test cmc mov xchg (bad) cmpsl jb or sarw ret cmp shlb cmc fcoms (bad) dec xor gs fnstsw hlt outsl and push and adc push (bad) mov rolb (bad) mov pop ja and in divl loope pop xchg dec cmp mov cwtl fildll stos outsl adc mov fmull push mov popa movsb lcall lcall adcl adc push sub icebp cmp push jne pop jbe (bad) cwtl je sbb cmp je xor inc insl jle clc push movsb inc pop hlt xchg xchg je pop pop cltd out cltd push xchg push in xchg jbe push movsl hlt nop call lods dec xchg clc sub test fwait loopne jb or addr16 mov mov and jno pop test mov ds sti mov jecxz add inc ss and addl js xlat push outsb and push loop,pn cmp push mov aad mov sub add in pop fnstenv lock cmp cmp ja inc fs xchg aam pop xor add cli dec ljmp call ficompl push (bad) cld ret mov hlt cli or fmul mov sub pop mov pushf lods imul gs mov addr16 rorl ds int3 insl pop mov add cld mov pop jmp jne sbb and insb (bad) pusha mov test aas lds push xchg or and lds mov mov pop sub and mov or fstpt xchg addr16 add imul dec fs add fsts sbb je xchg cld pop out loop dec and mov vmovaps mov in pop jle gs test gs in cmc sti lds iret mov adc mov mov adc push mov xchg fimull sbb std fcompl or daa rclb sub es or sbb mov dec neg in daa je dec addr16 insl xlat lret test fstps xor sar test pop mov lock push cld shll jle lods push gs frstor lahf push loope lods std iret jge in mov imul scas push inc sbb clc lods push or mov out (bad) mov jmp imul fbstp inc fwait or mov jae pusha cmpsl cmp fisttpl ret aad dec jns push or pop lock std jb pushf xchg divb push or enter xor in (bad) jmp mov sahf cmpl inc mov mov pop mov jno mov stos inc push xor ss lret ss movl xor scas xlat dec pop push push xchg les js js cltd mov pop xor in mov jecxz xorb jge inc jo cmp push xor push jge adc std inc mov pop dec lds mov xchg loopne mov nop push xorl popa cmpsb scas xchg sbb (bad) sti push mov and (bad) cmp cmp notl test adc push and lds shl jnp dec cld dec jbe sub pop pop (bad) ss aad inc pop out lea and sahf icebp adc mov mov dec pop data16 and jg cmp mov pop in mov jb in push mov out or clc (bad) xchg mov inc adc lea je arpl adc dec icebp push adc ds push aam cmp icebp cmpsl mov push inc xchg or (bad) ror sbb sub sti test push in ret sbb les mov aad (bad) dec std lea mov mov out mov fisttp (bad) aaa stc mov js mov loop pushf cmp sbb mov adc mov ret ljmp inc jle (bad) mov adc into outsl sub add sbb sub fsubr shrl sub inc inc pushf lods and dec sti and cwtl sbb in mov (bad) ja or aas cmp xlat mov mov rolb test mov cmp adcl ficomp lea lods pop test outsb jbe (bad) mov cltd push out xchg xor xor out pop arpl sbb mov push xor cmp dec xor fmuls loopne mov ljmp test andb sbb jmp push mov cmp dec cmpsb repz xchg xchg or (bad) pop aad fiadd inc inc mov (bad) popa pushf or addr16 inc pop mov fbstp add hlt fs nop sti jnp push and or and fidivr cmpsl cli sub pop aas jmp out roll xchg ret inc jg xchg jp movsb cmpsb mov dec movsb dec loopne out xor sbb adc inc adc flds movsb jbe adc adc psubw les and gs mov add jne jae jmp xor dec loopne xor out mov test les mov jmp mov repz add cmc jb test imul jns pop repz fnsave pop ds xchg mov repz leave mov cmp aad (bad) rolb xchg or dec pop inc xor in fadds mov and sbb mov aad adc mov aas test pop popa lret ds push iret adc sub sbb push pushf push inc push hlt mov sub mov notb mov cmp lds sti sub inc dec out mov rcl fmull in mov imul (bad) jle stos lods sti pop sbb xor sbb pop mov add je sub dec dec lahf subl mov cmp cmp sbb int3 andl lret push cltd jbe jge (bad) cli (bad) pop mov cmp outsl fistp cmpsb mov (bad) repnz imul inc cs shll jb mov leave fs mull outsl outsl xchg mov sahf repnz push cs jnp inc ss xor repz cmp xor push inc add sub rorb inc rorb mov add push or dec lock stos ss and lods cmp mov cmp shld push stos xor sub in sub js adc lods push cmp addl aad xchg and sub cmp pop adc inc xor int3 lret js pop orl clc xchg popa adc les xor push push ret ret ds test sbb mov sbb mov js sub loope sub decb adc loop xchg cmp xchg mov movsl and and cli dec xor sbb add mov into dec xchg xorb gs repnz scas cmpsl outsl loopne add sub pop cld std mov add popf pusha cmpl mov mov (bad) fidivl add repnz int scas xchg stos inc push lcall or pop xor dec outsb add or xchg pop dec dec dec cmp mov lods sbb sarl fdivl mov xchg mov subl or adc rcrb loop mov sbb or mov xchg (bad) pop xor xor cmpb jecxz stos cwtl jle scas loope aad outsb mov and pop and mov inc add xchg js repz cmpsl push data16 or icebp movsb adc or fimul xlat mov mov (bad) adc xchg push add mov cs mov cmpsb or enter movsl push mov movsb (bad) adc ja loope xchg (bad) (bad) icebp jg jmp jg jg cli das jne mov and xchg stos dec mov js pop push xchg dec inc push dec sbb sub out and or inc (bad) mov xchg std aam std cmpsb jb cmovne xchg daa mov mov sahf pusha pop mov ficomp xchg mov adc cmpsb (bad) icebp mov and fldenv push dec scas or inc inc (bad) mov lods mov jl mov out popf lret jl scas andl cmp stos aam loope es scas fwait lods rorb push dec lea add or stos lods adcl and sahf push xchg add xchg faddl cmpsl mov movsb int out or clc ret aad push gs pop cld ds jle cmp cltd pop jnp loopne fnsave in lahf in xor rolb fsts cmp movsl cmp negl and sbb xor jecxz fidiv cwtl xchg dec push movl mov addr16 stos jne call push mov sub and jns int jge pop jne arpl lcall push adc test lds (bad) insl ljmp fbld add shr and adcl bound fsub sahf adc loope mov mov jp leave and mov lds and mov mov mov xchg ja jmp jecxz outsl dec or inc sahf pop pusha movsl and sub es sub clc xchg scas imul fdivrp mov popf imul mov mov je enter test xor xor xor mov icebp jge mov or sahf lcall mov lahf or (bad) roll xchg fsubrp test cmp push shrl and lds sbb stos ss mov add mov repnz lret ret jecxz cld iret aad sub dec xlat icebp jb test mov and hlt sbb rorl sbb sub std mov outsb flds add or ljmp pop xchg pop pop pop imul mov dec xchg lret mov push (bad) out fs ret adc mov push sub or sbb (bad) mov pop jmp dec outsl cmpsl push mov pop sbbl das fidivrl xchg adc pop pop pop bound sub clc clc ss dec pop push lret mov pusha sbb std fsubs mov ds arpl test notb dec push iret stos iret sub mov and mov (bad) push sub jge in scas cli jg arpl sub add shl mov pop cmc andl push cmpb jo and xchg clc clc xchg outsb add repz inc mov pop inc stos in (bad) je sahf push pop out mov or xor dec shlb fdivrl adc sbb insb jns fcmovnbe cmp outsl xchg inc jge cmp out lret xchg push (bad) (bad) jae adc pusha mov test shrl xchg lock jecxz imul xchg (bad) cwtl pop shll adc lcall and lret (bad) mov cmp push popf data16 adc xchg movsb sub addr16 je cmc cmc aas loopne hlt sbb in (bad) insb movsl call mov movsl into mov insb push arpl pop cwtl (bad) ds and in xchg cmp int sub and pop (bad) (bad) mov mov mov ret push inc ret push cmp or or lock pop add inc test mov lods scas jb sbb and push inc out dec dec pop xchg test or cld mov fdivl and pop in fsubs in mov push sbb adc rol mov test shlb xor add inc sub ja mov in repz mov dec push mov lahf int and or push in bound mov dec pop and ret jb js mov ret push and iret popl mov jl pop lods jmp insb dec inc mov (bad) mov xor jecxz inc mov aaa enter popa jnp fistpll inc mov je cltd fcom jne cmp pop adc mov pop clc push or or in out mov add (bad) clc fildl cmpsl mov ljmp or mov and sub repz lret xchg jmp imul push cmp mov js xor xor clc dec inc (bad) flds push push inc push dec loop (bad) dec sub sahf in add sub xchg dec pop nop rclb fsubrs jmp aad mov loop and jmp dec sub clc loope jne imul int3 cmpsb and and inc movsb hlt hlt mov sub (bad) sub cltd (bad) aaa mov shlb xchg mov movsb or sbb sbbb mov nop push pop sub addl (bad) mov movsl push movsl call shrb fs ret pop xchg add inc (bad) aaa ret aaa fildl aas mov fdivp jecxz add dec dec test cmp inc mov mov xchg mov pop lds mulb mov popa mov gs inc or loope dec ret push mov sbb inc xor cmp cmp jo imul pop pop int cmc adc xor fnstsw mov std sbb xchg pcmpeqw movsb jo lahf (bad) aam xor mov push and ret mov idivb mov sub rolb addr16 mov push sbb test jb gs pop (bad) mov ss mov or pushf jecxz fimul mov shl ret (bad) mov pop jo mov loope dec sub mov shll mov push mov imul clc sub cmc inc int3 jb mov out loop xchg adc popa hlt cmpsl or lret scas jmp lea sub out sub xor dec xlat sbbl lret cmp daa scas mull sub movsb es cmc repz jns pop andl pop add mov addr16 mov (bad) sarl xchg fsubrl fiaddl aam loope push fsubs ds or ds inc daa outsb data16 movb insb enter push mov push lret out movsl push push or das repnz sub into adc xor incb fdivl push adc sub std mov inc (bad) jp sbb add inc pop mov in mov sub js hlt add lock arpl shll (bad) xor sbb push data16 xorb shr rclb movsl fldenv add xchg inc sahf loopne sbb mov xor jae cmp gs cld lds inc cld and sub js adc shl cmp add jae and or scas jns mov lahf fwait pop sub lds jge push lea rcr inc sbb out or jo dec cmpsb out push push out out aaa cmc fdivs rorb and lock sbb std sbb (bad) jno cmpl adc scas stc hlt insb arpl lds sti test insb xlat inc sbb int3 add mov jno inc rcll jmp out popa in (bad) mov cmpsl xor inc (bad) inc inc push lds jg stos mov test out imul iret loope cmp dec call pop (bad) inc pop xor into jo (bad) or dec imul jnp add jne mov movsl push les jno jl popa jns in jo out sub les ljmp (bad) outsb sub cltd in xor add xchg sbb add xchg stos iret fldt repz adc pop lahf and xchg rcll push adc add ficom sti out mov cmpsb adc hlt xchg dec fidivr movsb jns shrb sbb lret scas and cmp lods adc xor mov pop xor and subl cmpsb add lcall stos rol test lock lcall sahf xor and test mov loope out adc xor inc xchg dec inc pop pop movsl enter lret das movsb (bad) aad (bad) and sar in scas (bad) idivl cmp dec jns,pn adc sbb dec sti add cmp sbb sbb cli das jne jge adc or (bad) repnz aam stos xor lea push cwtl add pop test and orl mov and int cltd ja dec sbb stos cmp sbb jl mov repnz iret pop push cmc popf hlt sbb adc (bad) pop fnsave popf aas pause dec es ds jo (bad) ss (bad) ljmp popf cwtl mov sub lret jns imul inc xchg inc int cld js imul jge mov movsl dec xchg (bad) dec out mov jbe adc dec lock and fdivrp shl repnz into gs mov add xor mov push sti lahf adc xor stc jbe or fstl adc hlt cs xor xor ret fdivrs jns out add inc add inc xor cltd add push mov je mov and cmp push push or loope mov xor iret bound sbb sub iret dec dec (bad) and test cmp pop mov adc push call mov push mov cli pop lock inc mov inc stc mov fidiv insl pop (bad) push je ret mov out or or xchg lret push add inc (bad) sub inc addr16 dec adc mov hlt je sbb imul fldcw imul mov fimull cld lds pop add or jp movsl lahf pop ja int divb int mov mov and addr16 ds dec mov cmpsl pop dec jp pop lret aas or jecxz adcl and into ficompl inc aas cmpsb cmp addr16 adc mov daa inc fdiv rcrb dec arpl shr ja mov xchg fldl insl push cli lahf push popf xchg incb ljmp jae ret push in mov call aas inc imul test inc out mov xlat rolb sbb sub adc js imull xor (bad) popl sub testb int insl leave cmpb cs mov or pusha cld stc and pop add lds xchg repnz xchg dec mov pop lcall js je out ret or je pop lds dec xchg and mov rolb xchg pop jne pop xchg and cld lods xchg insl xchg js push cmpsb test nop test dec cmpsb pop add mov fs mov cmp dec adc loop add jp,pt jmp xchg inc fmull push adc mov add out xchg xchg lods lcall cmpsl test out in mov scas xchg data16 xor jmp clc jns nop scas mov aad add pop sahf ret cmp jl outsb jl sbb repnz pop jp pop xchg lods fildll sbb or mov mov sub mov cmp pop xchg lock jno mov ret (bad) mov ljmp and mov dec lods imul sbb ja mov pop mov lret aaa fistl loopne clc cmp push bound divl pop arpl inc test jp outsl repnz xchg or mov xor mov cmpl jge fdivl xchg dec fsubl int xchg fsubr adc es fwait ror stos cmp cld jmp mov nop (bad) ffree push xchg pop mov aas shrb fsubrp sub int3 and es sub jbe mov mov popa and test jae sbb adc into sub clc sbb adc fnstsw leave mov sub xlat add jge das cmc or push push lahf sub lock adc sbb loope fwait xor push popf and ret fisubl and add jns mov xor add and sar aad movsl aam in mov cltd call cmp (bad) rcll aad std inc test mov insb inc sbb movsl pusha mov xor (bad) adc xchg and add lds fdiv sbb cmp fild lock call inc dec mov (bad) mov insl lods insl or into cmp push pop gs stc sbb or adc ja cmp mov adc test cli mov fs mov xlat (bad) outsb pop stos adc repnz scas loope cltd mov rolb dec test jmp out lcall dec cmpsb divl cmovl push sub lock push aad movsb push sub push lea sbbl push xchg pop (bad) xor out in mov lock (bad) cld inc (bad) cli mov lahf pop jmp gs adc mov out inc and jmp inc aam loop and insb push fisubrl adc cmp inc aaa mov pusha mov sub xor push xor add lahf lods sbb mov test push pop xchg add scas stos clc les f2xm1 pop dec lods addb pop arpl fdivrp push add add or mov testb cltd cld jae popa jecxz xor es call hlt dec and xchg sti loop mov mov jecxz and or (bad) neg jle arpl jg out xchg sub pop fisubr bound bound lods adc dec insl stos repz pop cmp mov orl jle mov out and in push mov mov cld add and or mov jo and test nop (bad) jno inc repnz xchg sbb xchg aad xor cmpb daa daa repnz xchg jge jmp scas inc lds sub sbb jns dec sbb ret push cmp cwtl sub (bad) jae inc push mov push or inc jbe sub xchg mov cmpsl rorl fldl add jns sahf xchg fadds adc jae std sub dec push or (bad) xlat jecxz test and xor cli dec scas les loopne lret push ja cmc (bad) ret jl out orb sbb movsb xorl adc (bad) xor ret icebp push fxch stc sbb and cmp inc dec insb daa push fwait js push add outsb inc imul fnstcw iret pop les out jecxz lock sahf dec push xor out lea into fistpll aam mov lahf and stos mov jnp and mov push xchg setae sahf xchg pusha rcl sub inc cltd pushl sbb xlat push push add jns outsb inc mov xchg adc pushf movsb popa mov stos xchg mov test dec mov ficomp cmc jmp popa cs (bad) shrl dec aaa es les pop lahf jg cmpsb cmp les fwait sbb mov xor inc push xor pop hlt sub sbb js mov inc test andb imul addr16 (bad) rcll cld push imul jl sbb in mov cli subb out jns (bad) ja pop inc add outsb mov push cmp jl orl cmp mov aam aaa cmp test rorl jne and or in repnz cmpb mov sub stos daa inc dec pop mov inc outsl or cs mov cmp fdivrl push aad nop js mov loope mov ret imul insl add or mov daa push out fs rclb jp arpl icebp pop xor pop adc xlat std in fldenv add push mov popf add xchg cltd and aad jg les push std into (bad) xor lods xor or js xor xorl add fadd lods lcall push mov xchg fdiv arpl sbb rorl int mov push push push sar sbb mov xlat outsl cld push insb or or adc cmp dec jl mov push mov sub (bad) movsb negl xor pusha and mov fisttp fcoms pushf add (bad) dec les jnp pushf cmp lahf adc in stos fldl sbb sbb fldl2e push movsl mov pushf jo jb sbb fdivl sbb sbb xor mov cmpsl sti fildl mov ljmp and dec add fs fcoml (bad) mov cld mov mov or fxch stos popa daa jne xchg jecxz xchg cltd (bad) mov push fsubl imul xchg jmp ret loopne nop mov xor movsl (bad) divb push jmp loope shll std movsl cmpsl dec repz repz or mov sarl imul (bad) repnz mov das mov jle enter xchg fnop add mov sbb adc lods pop arpl xor stc xchg test test mov sbb pop jmp push mov cmp loopne xor sub push dec pop dec mov or leave scas mov pop shrl cmp pop jmp xor inc jne jge popa xchg and adc aam inc push adc clc jle fsubs fldcw sbb jnp imul std cmp mov xor test hlt mov scas out add sbb fsin cmp ja loopne xchg cmp sbb stc jnp clc movsl outsl add inc test lods js out fcoms subl cld das xor xchg xlat jae cmpl inc orl leave mov mov int mov flds outsb stos xchg jns jb cmp jne cld xchg insb mov popa xor ljmp add lea repz jbe pusha push out ror sbb push out mov cld jbe jl lods ficoml leave outsb add xor xchg lods into xor pop (bad) stc inc or ss mov pop xchg repnz xchg and mov push inc or fild lret popl int lret cmc inc repnz addl mov cli cmc jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop (bad) jg add push jl notl (bad) enter add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec iret dec inc inc push js in (bad) bound sbb mov (bad) mov rcr mov out push int3 inc mov add and add out adc and lret clc sbb sbb mov pop mov inc push pop aad add xchg mov out pop push mov sbb in xlat loop jmp cmp in inc aad fstpl das lds arpl and shrl (bad) fisubr pop push adc xchg mov ret jge sub ror repz push int3 aas fmuls mov repz out ja xchg jmp lds fabs push sbb cmp mov aam adc xor pop mov popl pop test lret mov ljmp sub pusha stos movsl cmp mov loope mov aas pop je (bad) mov sub jecxz mov je enter or mov fnsave mov sbb inc xor sbbb ret fidivr jb sub int leave sub or mov mov xor mov mov daa or sub repnz xor push and or mov jecxz int3 xchg sub neg push jmp adc fisub xor scas adcl add loopne addr16 adc jne into mov int3 mov jo cli xchg xchg setge add lds jno fadds and push mov sbb inc xchg sar dec and in push int frstor mov std ja fcoml cmpsl (bad) (bad) sbb cltd test inc addr16 ljmp mov pop mov push cmpsb outsl lcall test ficom mov movsb adc fcmovbe or xor mov fistpl std cmpleps xor ss das rclb mov xlat cmp out mov scas xchg in mov pop popf push jbe loopne mov insb xchg mov (bad) lret mov (bad) call add fmul imul fidivl (bad) insl ror inc inc mov mov add cmp inc inc jl gs (bad) pusha hlt (bad) sbb into mov stos fidiv lea data16 mov jl es mul adc ss lea jmp popa lahf test outsl adc sti lds xchg addr16 push lret out fwait dec xchg mov adc jmp cmp pop inc mov jae rcrl movhps push xlat (bad) pop test dec push or cld outsb sub mov inc jl pop mov int adc icebp int3 jno addl rorb ret dec xor nop ljmp rorl mov xchg insl fwait mov (bad) in or mov xor aad xchg fist (bad) jns shrb lods (bad) scas dec pop lret or adc or pop das jge mov fmuls xchg lcall (bad) fwait sbb push jmp cmp and jne pop insl adc out repz shll cmpsl cmp ss xor int3 mov xchg js not cmpsb outsb lcall gs lahf mov mov xor cmp dec pop mov ja jne lods call mov xor or pop and (bad) or adc mov inc pop xorb jg cli xlat in fiadd push jnp mov pop mov lcall pop enter pop dec lods (bad) push inc lahf (bad) add lods xchg in or aaa stos and add (bad) in aas sub adc test ljmp xchg test les and rcll andl std mov imul popf dec xor daa and xchg push call imul and sbb iret call xchg fildll xchg in xchg in (bad) icebp ret xchg or rolb les sub test pop mov pop mov add gs cmp pop dec inc fwait xor mov mov push ss sahf sbb pop mov xchg cltd (bad) push lret mov (bad) push js pop pop mov xchg lahf mov sbb mov scas rcrl loop mov adc or adc cs repnz dec aaa into push das jl sbb incb je xor xchg in mov in push or pusha sub xor or stos sub test in adcb pop adc sti push insb sub lret ss repnz xor mov pop push aam dec mov jno xchg lahf (bad) testb test cmp and stos dec jno and ss cmp test jl mov xor push jno aad stos push jns sbb bound inc cld mov mov mov cmpsl or rcll lods and add pop xor (bad) enter cwtl inc add rorl lahf scas mov arpl repnz jle outsl in shrl mov push daa cltd cli push mov out icebp dec cmpsb int3 push lods mov rclb gs (bad) aad mov cli adc aam jno dec jg pop jae mov sbb jns fwait into scas (bad) push cmpsb movsb cmp mov and fs dec lods mov stos pop push xor in or cmp aam mov pushf outsb adc push (bad) mov addr16 pusha pop push or inc orb jle ss jb jo lahf ficoml or sbb mov lea push xchg mov dec data16 popa xchg mov xchg inc in and mov jbe mov repz sbb ror mov jne mov add neg pop push cmc adc sub fisubr xchg pop stos or push inc cmp imul push inc mov aam aad or adc bnd jp sti cmp loop cmc lods fsubl ljmp fldenv (bad) sbb push xchg mov lcall adc cmp or dec mov test adc lds sbb insb les xchg dec add (bad) xchg xchg outsb xor outsl cmc pop stos fldl outsl jbe add ret mov in add popf bound sbb movsl sahf outsb movsb arpl cmp mov lret mov out push adc cmc sbb mov lea pop out insl add mov bound jecxz xor push lods xchg push dec testl popa imul sbb xchg leave lods imul mov cs (bad) ss add dec fld push sahf insl pop dec mov lock push in lret sub dec cmp testl call dec das or das into xor sbb xchg repz enter push loopne pop out fild and loop lret aam cmpsl hlt pop js nop lret sahf mov pop fstps or shlb dec adc ja lods lahf adc sub scas fsubrs add testl xor push xchg movsb pop cmp dec out xor pop cmp sbb dec and cli dec mov cwtl inc mov stc xchg inc mov ret ret add adc jae xchg mov and leave jp xchg mov sbb in jmp xor int3 xchg mov (bad) jnp call pop js pop xchg cmp cmp adc push sbb decl (bad) repz sbb stc loope xor jno xlat pusha daa into push in mov js ret sahf orl loop daa push mov adc fmuls pop inc sub push and pop mov dec sbb ret add popf or adc and fcmovbe or int3 loope mov mov jae pop or or inc dec pusha sbb mov insl sub xor dec out in mov fldcw dec iret mov or sbb or pushf in xlat pusha push xchg xchg sbbb pop pop jle gs xchg aad scas lret loopne (bad) jb je dec mov sbb dec add mov (bad) dec sbb iret jb and cmp repnz fildl lret or and popa sub cmp int3 xchg outsl xchg dec aaa mov mov hlt jnp inc xor sbb or xor xchg jge aaa xchg cld mov or push sub in or bound mov cmp mov out leave fnstenv clc popf adc cli and inc rcl pop movsl int3 xchg push sbbb jbe push in sbb sbb (bad) mov jg sbb jle xchg xor and cmp nop inc loopne mull xchg add mov inc cmp xor loope loope ret daa cwtl mov fnstcw mov call daa movsl mov fnstcw sbb lods fidivrl int outsl loop sar mov add xor test sbb pop mov or ss out scas call inc push lahf jg hlt hlt lds mov scas push sahf (bad) inc call test adc loope jp fistl outsl icebp mov mov dec xchg mov jo push movsl (bad) cmpsb repz xchg pop icebp xchg fisubrl les jecxz into push movb (bad) pop mov les iret (bad) jno lret dec and xchg mov mov ds addr16 jl iret out mov xchg cmpsl notl jl popa xchg xchg mov add mov and sub adc das fiadd test pop test cmp adc cmpsb enter sub mov dec es lock lods push adc mov sbb sub lea (bad) loopne mov mov mov addr16 inc mov dec loop cmp mov xor nop add push lock (bad) sub sti addr16 or scas sub dec adc mov in pop lahf inc mov pop mov (bad) pop add cwtl jns jae sbb jo adc adc pop pop mov cld cltd push fsub xchg fidivl insl popf xlat mov mov ja xorl inc (bad) mov mov dec xchg addr16 dec push inc xchg cmp add jns push lea mov add jge lods xlat ret dec hlt fwait jo xchg or dec lds lods (bad) (bad) fadds or and repnz or out add repnz into movb mov add mov xchg xchg out je das add add push adc daa sub ja sbb cmc (bad) xchg sbb inc pop push add icebp mov sub sahf add icebp sti fcomip (bad) (bad) mov add cmp cmp mov jmp cmc cmpsl jle jno ror pop fcmovnbe adc sahf xchg frstor add adc rorl cmp jp test inc push int3 aad lea out add hlt jns mov xor loope mov sti mov dec mov mov mov fnstsw push test loopne cmp sbb ss xor mov scas mov adc xor mov mov mov xor and test adc daa push gs xor push nop dec cmp mov fcomp dec mov mov pop cmpsb jb and (bad) je faddl ss push out inc push xchg xchg das xchg cmp mov pop jecxz pusha lahf test mov in out and stc cmp js (bad) aaa outsl (bad) mov pop insb mov mov inc xor dec pushf dec ljmp enter inc in pop subb mov popa jmp dec pop clc pop mov je outsl push out inc rclb out mov and mov pop ja ds and int xor into add fildll adc xorb jle jnp jl push int jne inc pop test scas pop adc mov push inc out jp mov push ret sbb test adcb shll mov negl push iret cmp xchg sbb lcall call adc mov mov gs les pop adc cmp fcmovu sarb sbb jbe jae pop sub cmovle addr16 jbe in (bad) ds test aam imul dec repnz jne addl or jg pop dec cmp mov (bad) pop add cmp movsb jmp dec mov pop cli mov aaa and popa sbb inc xor sahf aam push mov addr16 ror sbb lcall (bad) mov lcall jo aas mov loop fadd mov (bad) mov gs adc lcall (bad) bound iret push xor mov jbe enter inc push nop xor cltd add push gs cwtl jb into cmp movsb negb jnp push push or cwtl lcall shrb int cmpsl dec xor sub incb pushf lods xchg cmp loop test xchg push pop mov fldenv pop pop adc repnz inc and shr mov enter jno xchg repnz data16 xor xorl decl int into ret xchg sbb mov das enter pushl xchg lcall push pop loopne fs in add xor fisubrl xchg pop inc mov xor shlb push lahf ss jmp test bts xchg cld push cs mov lahf cmc dec add rol lahf jmp add bound mov adc inc push mov push je int lods idivb pop cmc cli cmp lret dec mov push ja int3 in sbb sar mov jge int3 push (bad) test ret xchg dec xor lds push or (bad) iret mov sbb or roll sub mov push mov adc imul loopne or mov movsl loop lcall mov mov xchg outsl ds rol (bad) dec sub lahf (bad) or cmc icebp ficompl shrl xor fistpl lods mov adc movsb movsl sbbl dec adc fsubrs push mov rorl dec imul stos jg mov cli jbe add pop mov call cli jle xchg movsl fs int3 ffreep push fstpl iret pop lcall jne push loope and xor or sbb and cmova popf test addr16 std lea push (bad) int3 mov and aas cs (bad) mulb hlt pop adc push sti stos pop pop sub push mov outsb dec xor jl bswap jno sbb inc hlt stos in dec dec ret daa sbb fisubr arpl mov or hlt les cmp stos pop push hlt icebp adcl dec mov in das lcall popf jg loope inc (bad) jno test mov cmp aad fs push pushf jns mov push xchg xchg in jl (bad) pop in int3 jo push ja repz push sahf sbb loop xor xchg mov (bad) mov popf mov adc (bad) sti xchg data16 into sub jge outsb mov sub out loopne insb nop repnz cltd adc popf inc mov sub and adc push test and push fldcw out dec cs repnz jo add test ss repz ret (bad) mov push je,pn and dec inc push leave push outsb dec stc outsl and mov sbb out fcmovne fs inc mov or pop gs divl push movsb cmp cmp fnstsw mov out jo mov cltd mov insl sub cmp sbb imul push cmpsb andb xor adc fsubp int3 bound mov mov fucomip or cld add cmovo cmp lock fistpll sbb mov mov mov xor adc mov daa andb movsb adc popf and (bad) push mov inc sti (bad) test shrl mov push sub add xchg pop scas mov lahf dec stc jmp push mov xor lret and mov rorb scas movsb mov cld nop push and ret outsb adc xchg jbe insb pop test mov rcl mov xorl aad jo and pop inc push pop adc rcr inc popa sub scas movsl jl lock incl push dec int3 or aam mov mov (bad) mov stc push push icebp xor insl clc mov test jmp push mov jle (bad) push and mov pop loopne mov aaa ret dec andl mov or jg xchg repz lods xchg mov push and negl pop push jns adc aaa pop push sub sbb pop dec mov fldcw mov call or std (bad) add xchg pop stc imul sti nop mov addr16 xlat dec scas aas das xchg sub or mov xor jl fsubp mov lahf add push adc ljmp ja scas cmc (bad) mul mov xlat ss cmp cld pop mov roll (bad) cs stos in mov stos fmuls adc mov int and or cmp cld inc jecxz out int ret (bad) in movsl shlb ja xchg inc subl xchg mov or sbb jno cmpsb mov rcr loop mov jbe sub insb jmp sbb rol mov sub inc fadd (bad) sarl mov cmp movsl stos adc dec xchg inc pop mov jg repz arpl test aaa das fld jge cmpsl sbb (bad) repz lds test cmp imul lea js mov mov out fwait scas in lods scas dec ja es aad test dec dec sub lea mov aam in jp push mov out ret cli cmc add and data16 jecxz outsb cmp and sub or fisubr icebp lret es lods jnp push xor and mov pushf push inc je mov mov cli ds mov lds sbb arpl les mov cmpsb push aad outsb add or enter repnz imul (bad) stos jne cmpsl lods cmp sbb ss xchg jge xchg mov cmpsl test cltd out adc xor pop sub mov jg pop or insb push movsb fisubr inc jg or jle xor mov leave push mov mov idivl add pop xchg mov ret icebp andb add cmp cmp sti in in outsl lahf ss stos sti lret and (bad) popf inc or push pop scas jmp add mov mov popf fsubr (bad) psllw ja out and jg std sbb int mov or or outsl cmpsb xchg loop xlat push sub fcoms dec pcmpeqb pop int mov and lock sbb jne pop outsl (bad) xchg push sub (bad) mov (bad) out inc clc mov lcall pushf adc (bad) fadd jne push (bad) sahf pop inc sbb dec mov (bad) repnz movsb lret push je push or mov adc mov in jnp cmp jo lock dec jb lret push mov repnz cmp dec add ret sub in jnp mov mov sbb movsl push xor lcall imul mov outsb (bad) or or ret xor sub mov xchg aaa insb mov xchg movsb add imul cli mov dec jmp negb pop fisub pop xor add add sbb pop (bad) pop test outsb scas pop icebp mov test fs in mov es mov mov adc push cwtl lcall lods cld sbb sub movsl jecxz (bad) mov repnz inc negb pop mov lret adc int3 fistp out inc aad mov popa pop xor fmul xor fcoml pop call push or mov cmpsl jge jae dec mov adc cmp sbb or std push jecxz push lahf fdivl loope sbb and inc xchg sub fwait cs mov jg mov sar xchg push (bad) stc (bad) dec and push sub gs sbbl pop push mov jle dec and addl dec faddl mov cmpsb je dec in (bad) testl push fidivl shrl lcall pushf mov cmp inc inc enter push fdivrl add mov push negb xchg jle (bad) (bad) mov push adc loopne subb xchg shll sar orb sbb dec pop incl mov sub call cmp fs push mov add test dec sahf inc pop lea imul jb (bad) adc xchg lods stos jg mov cli lret aad add ja loope and outsl push sbb or stos push or jb call aad test dec mov (bad) call mov loopne push stos xor push xchg lods mov outsl loopne lods loop sub or lahf lock xchg loope mov sbb xchg cs test xchg xchg enter add mov mov mov sub or mov dec jo ja mov xchg and out stos jb imul andb imul push aaa mov stos fistpl loope adc imul push push (bad) jmp in iret push push push mov cmp mov pop and cmp xchg repz pop cs ffreep mov jb mov cmpsb push lret push mov repz cmp xchg xchg je xlat cltd mov loope ja add mov pcmpgtb lret int aad jg repnz cmc cmp dec out pop mov xchg or fdivrl test or jecxz lea dec ret out add fldenv cld mov call loop aaa fiaddl sbb push xchg jb mov xchg ret iret sub pusha mov std std dec in inc mov jb loop mov add adc cli lds push ja jno test fidivl sub sbb xor mov mov mov lcall xorl push and stos (bad) movsl and int3 loopne dec ret mov pop jmp cld lods loop andl iret test cmp fldt adc fdivl add xor in lds mov xchg mull cmp xor lods out cmp aam dec (bad) sub or in out (bad) xor lds mov dec dec xchg (bad) cli (bad) push sub inc loop icebp mov btr cltd adc mov repz out repz into arpl lds insb pop jmp mov cmp mov mulb sub or push mov pop cmp mov scas jbe mov cli mov mov inc inc dec add inc inc daa cmp sub lods pop cmpsl insl ds stos outsl out imul mov or or push sub cmc call or push lods dec adc jmp pushf jge lds mov out mov push jbe ret sahf jo ss and aaa mov pop fsubs dec xchg je push xchg add adc cmpsb ljmp popf xchg sbb push jecxz adc insb test push bound (bad) scas (bad) dec inc or aas mov (bad) mov popf cmpsl repz mov ds push mov fsubl pop in xchg in mov aas and push push jne xor lret outsl and (bad) sahf loope add out inc mov pushf cmpsl negl push xlat dec pop sarb test jns notl xor mov inc icebp loope add add xchg xchg int or fstps inc loop jg and cs sub pop ret ljmp push push leave inc pop loopne inc pop dec dec (bad) pop pushf xor fsubrs ret outsl inc ljmp fild adc mov cld leave outsb xchg jp mov sbb arpl fstpl data16 test scas lahf dec or jns mov xor push pop outsl jnp xor mov lods dec popa dec adc imul sub mov lock aad (bad) jecxz shrb js movsl out addl outsl dec cltd aad or dec jne add leave leave lea pop ljmp aam inc fsubr dec pop add popf mov or (bad) mov rcrl mov add push pop xchg cltd in test hlt push fstpl rcrl pop inc nop sub push lock bswap sub add (bad) and jns and inc mov mov gs push mov jae fidivl lods dec pop movsb add or or sbb int mov (bad) pop add lahf mov (bad) jmp repnz enter jecxz outsl mov lods add dec pop push inc mov dec xchg sti mov rcrl dec mov outsb (bad) iret add dec xor mov jb sbb test (bad) insb pop test push lahf sti jg xor inc lcall jecxz xlat std push sbb ss sbb sub repz into (bad) mov (bad) xchg push cli sub push jmp lret (bad) mov sbb aad mov lea sbb test mov jnp or loop in aad fsubrs adc lods daa fmull pop pop jge leave dec cld movzbl cli xchg inc loope add das (bad) jno lods inc xchg loope jno mov shr test popa int jl adc (bad) (bad) dec loop in in bound jnp sbb inc aam sets adc imul sub les xchg icebp in pusha rcrl jae es std fisubl (bad) ficoml icebp xor sbbl add pop (bad) fwait int mov clc and sub inc (bad) ljmp test mov xacquire leave xor jbe in mov add cli sub pop cmc mov cmpsl int3 aad out add sub xor push mov scas sbb shrl loope insb sbb js xlat push pushf cmp ja inc mov roll sub xchg and sub pushf dec jns out pop and adc (bad) aam jae or cmpsl sbb adc sbb lret bound jecxz or dec orb jo ret jae sbb lods and gs insb jno mov jb dec jle (bad) cmc mov into idiv movsl mov (bad) mov inc pop cwtl insl push add jp push stos jnp mov jae ror jbe cmp push stc add sbb inc adc es adc cmpsb ljmp loope and mov lods add lea aad aas test sub cmp mov bound or mov xchg mov loope insl leave adc ret inc adc add pushf push ss inc inc fld cli sbb nop fsub add int3 or mov (bad) aaa outsl ret cwtl mov mov jle dec mov or xlat movsb adc pusha arpl push lret (bad) mov or repnz sbb xor stos iret xorl popa mov mov mov shrb scas jmp out inc mov lods (bad) rclb es sub mov enter cmpsb lds jp jnp push mov daa or inc and icebp pop mov nop mov mov out test aam in mov sarl data16 add ficomp inc dec pop leave cmp inc xchg fldenv loope push popa cmp xor cmp jp jge stos scas (bad) sub add ljmp outsl ja jg push das jnp cmp inc adc fild in leave in pop enter cmc das addr16 daa mov push dec lea leave sti fwait stc mov jnp add test loopne notb insl je inc incb and cmp out cmc dec outsb test jne setle sbb (bad) pop xlat sarl in insb mov dec mov xor sbb pop sub std cmp or ja cmp add rolb fs out insl dec cltd xor jb jno sbb inc sbb leave push sbb push movsb mov push cmp jge negb mov pop mov mov icebp fistp fwait aad in mov cmp push rolb popa cmp xor lcall aam xchg cmp dec and xchg xor adc xlat ja push int3 daa rcrl mov or xchg xchg mov (bad) cld cmp out add or ljmp sbbl shrl mov mov xor mov test or (bad) xlat int3 sti xor mov or test aam xor adc in scas mov (bad) lret sbb dec jne test (bad) out shll pop aaa mov inc loope out mov and sbb fs loope or test ja dec mov push lods orb pop xchg lret mov push repz (bad) or sahf ljmp dec arpl mov push xor mov fnstcw jecxz mov dec xchg add sti call sbb cmpsl imul inc enter int3 (bad) js pop stos int3 sbb sbb dec psubsb arpl and and push or pusha stos jmp ljmp jae push stc fwait in or fist xor sub cmpsb jecxz sub jnp ret adc dec cmp imul repnz pusha stos sahf mov loop lcall mov push dec in sub int3 mov add push push test cli pop stos dec dec (bad) adc jle lods mov (bad) jbe lock push cld loopne mov lods fldl mov xchg push push push push sbb sub sbb inc cmpsb insb movsb or outsb xchg jle leave test stos sbb cmpsb (bad) mov ss xchg cmp cwtl and xchg push xchg jns ficompl inc xorl sbb sub adc iret jnp (bad) push dec insl fmull repz test in shrb cmp rcrb data16 sub pop mov dec inc mov xor jmp push mov insl dec movsb and xchg cmp aas addr16 test fdivrs jns into test mov stc push lods mov lcall dec cmp ljmp into mov stc xchg push xchg jne push int3 insb fdivrp cwtl mov or outsb mov xor insb sbb roll ret lahf sti arpl stos mov (bad) push aad loopne (bad) in ja movsl add push push lock negb inc sbb mov dec enter aam xchg cmp test xchg (bad) in adc cmpsl inc dec mov mov (bad) fmull ljmp sbb fs inc push fucomi outsb inc push sub fdivp jmp repz out rol lods test jno pushf loope int push cmp fst jle mov nop movsb cmp sbb dec mov jo xor daa push add xchg sbb dec pop movsb aas arpl lds xor add mov iret adc jo std jp sti das push iret inc lahf and roll mov and lret pop call mov les adc adc or loop mov ret jmp jnp add les cld in and mov sub and add or ret xor orb cmc cmpl (bad) lret enter push lret vphaddubq sbb adcl inc add dec sbb test push and nop mov pop xor imul inc mov mov mov mov icebp sub mov addr16 loopne clc loop test shl imul push dec mov (bad) mov mov mov jmp sub leave fbstp rcrl mov jbe sbb pop push add pushf cmp xchg push repz sbbl aam (bad) sub inc iret mov cmp shlb sahf sub push outsl mov out in sahf loopne pmulhuw fadd fmul pusha push lret fwait cmp outsl inc inc lcall imul and and mov test xor jb sub xchg sbb pop mov mov data16 and (bad) fucom stos cmp sub scas rcrb xchg dec xchg dec arpl and flds mov popa cmp ret inc mov call imul mov (bad) jecxz les fwait push adc and jecxz sbb add mov nop cmp mov mov int3 push jbe jae mov stos insb jle or enter mov cs sbb jo aam cmovp mov push cmp aam stc je adc sub mov (bad) popa or (bad) jbe mov ret sbb ljmp adc iret and jno sahf mov or adc gs adc push xor cld mov or adc xlat sub add out lcallw mov or sub js movsl addr16 mov mov lahf popf push aad mov mov or sub rclb es loop cli sub dec call sti popa popa aam jo lea loope loop es sub in lock nop or je fistpl cmpsl xchg in shlb ss aas dec ret movsb push in shrl ffree out leave cld dec push sti jne jge sbb pusha sub xchg mov mov es shrl jb mov mov int and xor push out adc inc cwtl pop stc andb (bad) push mov pop adc les aaa test arpl mov xchg add leave test xlat add and inc jbe adc imul das inc push sub sub pop in rolb push outsb push mov sarb ret dec cmp push aaa jmp sub lds add and dec or out rolb fstps cmp mov mov lods lods jmp push js lock out fs insb cmpsb outsb mov enter scas push add je and shrb repnz mov jnp lock and sbb mov int hlt jns out in call mov subb les inc out pop xchg fs repz negb (bad) jno imul lock shlb or clc cs into xchg stos xchg dec sub xchg test dec outsl movb mov dec xlat xor imul mov cli sub sar shrb cmc jns (bad) icebp sub jno (bad) sbb into lods add dec ljmp icebp and xchg daa pusha bound in lock lcall sahf cmp lock mov xor inc stos loope out mov aad jae mov mov sahf sarl mov mov out rcl into pop and add das jl jecxz sarb fcmovnb xchg gs sarb (bad) push jl aas xchg jp xchg imul mov mov movsb mov in inc jnp cmp dec ljmpw jp bound and loop (bad) jne adc pop (bad) push andb or int xor jno push movsl mov push pop jns jge push cmp loopne pop loop cmp dec sub add push out ds mov stos pusha pop and mov push xchg in pop cmp stos jmp loopne fsincos xchg push mov inc leave dec test jp jecxz and dec dec mov xchg ja inc dec sbb mov sbb add mov push int3 mov iret push dec cmp test push push mov adc xor sbb cld sbb mov sub xchg mov ret jge mov js les ret add sub adc dec stos jo sahf (bad) pop ret jecxz and dec js sbb push scas into mov test clc jb add ja mov push cmp dec imul inc cmpsb mov and add je mov das adc inc imul adc mov push and repnz (bad) daa addb dec stc push shll mov push or lret add sub add sub movsl out sbb in push addr16 out fs enter pushf bound lret sarl cmpsl test dec std ljmp push xchg test push je (bad) or dec push bound or jno mov inc lret out jbe sti repnz or adc negl xchg xlat ret jp push std in pop add adc mov fnstenv inc out pop (bad) jl cmc sti and dec clc cmp sbb pop lds aas jle cli ficom int into adc adc xor (bad) rorl fidiv jecxz enter mov scas movsl nop push stos data16 imul xchg mov pop imul dec shrb in fsubs dec mov jecxz xor or (bad) jbe adc jl insb xchg xchg sti push and ja in shrb (bad) outsb mov je cmc fnstcw or cs pushf pop add pusha sbb loop jo cli mov cld xor arpl or cmp inc cwtl cmpsl add mov cmpsb mov cmc adc cmp scas lock iret (bad) cmp cld das gs adc pop fist add inc jno mov dec pusha cltd mov mov aas inc xchg cmp lods pop mov mov sbb push xchg mov leave sub mov dec pusha lcall sbb jl adc cmpsl jae adc add and cmp outsl loope and inc (bad) xor icebp push imul rorb fcoms lods cmp cmp icebp outsl lret push dec jg insl adc in stos dec shlb mov jmp inc mov inc scas pop mov mov ljmp je inc xchg jns fidivl or push jnp ror push rcrb cwtl jle sub loop adc cmpsb jge stos das push adcl ret outsl push test outsb xchg shlb adc push insb test lret cmp lods adc je mov fwait scas insl out dec jb scas add lds inc cmp lahf (bad) mov mov inc cld sti (bad) cmp or xor sub movsb jnp or outsb stc ret aas sarl mov lods stos pop or scas mov fwait jnp sub add or mov or dec fisttpll ret test mov pop push sbbl adc inc inc test sbb jns lcall push enter bound cmp mov fldl lcall int or mov mov fisub enter jp enter mov pop jg add fistp rorb cwtl lods (bad) sbb mov push adc cwtl insb aas cmp mov fisubrl xchg xor sbb push sbb ss add mov das (bad) cmc outsl cmpb aas cmp pushf jns decb inc call push hlt mov out xchg gs fs pushf dec push hlt mov mov lcall fidivr xchg push (bad) cld ljmp movsb push push jns jo or test mov pop insl dec (bad) aaa inc mov hlt data16 jno test aaa jl es ja inc iret pop jo aam inc shl shll lcall cltd test andl ret push out lds add repnz jne adc dec sbb push inc out xchg or pop std out lahf and jecxz insb divb sbb cwtl jmp cmp cld aaa test mov ss nop sbb cmp enter and and sub adc xlat fcomp jmp icebp ljmp insb nop stos stos aaa and sar inc repnz jnp iret aam dec cmc sarb inc mov rorl jmp ficoml hlt and (bad) cmp pop xlat jmp ficompl test movsl lods lea add pop fmull and and fidivr addr16 out inc (bad) adcb mov ja and ret mov sub les add xchg xchg push pop insl aaa dec push int add rcrl sub add test pavgw push sub (bad) data16 mov or int3 sbb pop adcb rcll stos outsl out icebp testl fiadd pop lret mov sub cltd into push fild loopne bound xor push adc rcr jmp cmp xlat sub lea sarb hlt xlat out rcl imulb mov dec dec push stc scas pop (bad) mov jg int3 mov and mov stos push dec data16 pop mov dec cltd ret icebp sbb sbb mov or xor inc arpl stc rorl mov sbb sbb and dec add or mov mov jno (bad) not xor test subb hlt hlt arpl sub je sbb (bad) sarl lods mov sub aam (bad) or sahf mov push stos test out xlat movsb push jns leave mov add cmp notb es cmp adc inc sarb or push dec sbb lock enter dec (bad) int3 jne push mov mov aam mov mov (bad) out mov inc dec sarb cltd sub outsl pop sbb rcrb pop scas cli lock lcall xor cmp mov pop push (bad) insb test mov iret xor push jl sub mov pushf jo cld test paddb sub out test rep jecxz dec ss fsincos adc adc sub xlat sub cmp scas mov dec pusha bound iret jb out mov outsb mov inc xchg sbb sub js cmp xchg inc loopne xchg into dec test enter sub add in or repz js and enter jne hlt sub pop data16 aad or int3 adc mov xchg outsb push psllq test and sbb add (bad) lock cmp outsb lea adc pop arpl inc insl insb push lock lret insb repnz test xchg add mov dec stc jge test data16 outsl daa imul movsl ficom in call popf scas mov pop enter enter into cwtl insl loopne pop clc dec ror icebp mov push pusha lahf or lds or lods movsl push test inc sub xor call test call fldcw ret in aam jns xor insl mov popf mov xchg pop imul push adc lock aam pusha dec mov out or sbb loope (bad) into push imul aam shll loopne sahf xor mov xchg scas mov scas mov adc pop gs jns inc sbb stos insl int das call fldenv xor sub or call jo sbb in pop fdiv mov xlat push icebp dec call mov mov pop push enter jle lods repnz sbb inc push mov std lret jmp or mov pop ret (bad) xor data16 in repnz lock (bad) js sti int3 xchg jno (bad) (bad) jbe cwtl xchg (bad) jns,pn sub pop ss xor xchg std sti add flds arpl mov cmp mov int3 ja dec pop aaa fild push pop fdivr push cmpsl add jnp push jbe imul ffreep cmp (bad) enter adc loopne in rcr mov int xor popa test jne sbb xchg sbb pushf arpl fwait add sub les xchg lock leave jns loop negl (bad) pushf (bad) int push inc xchg fadds mov or xchg xor stc xor in jno jae clc sbb sarl movl adc push sub es lea lods scas inc mov (bad) in jo sub test insl es xchg add mov and pop xor jo mov sbb cli in add negl push inc pop mov jo xchg inc or mov lret rorl push add xor cmp mov in pop (bad) push dec mov push pop aam push or inc mov sahf imul imul mov aaa leave ficomp sub lods (bad) push fs jmp lret cltd arpl dec mov or jbe mov sub xchg out fcmovu addr16 and xchg or xchg rcrl sub ss mov jg add jns lods sub dec int3 dec jmp aad stos jae xchg add sahf insl lret xor fnstenv pop jl mov int3 dec das lcall popa dec adc fildll xchg mov fldcw mov cmp jns xlat jecxz xchg iret fisubr mov insl cmp xchg jmp popf jge jmp clc lahf mov roll or clc xchg mov and (bad) xchg fwait std (bad) dec jb xchg mov jb pop xor pop fstpl mov rep dec dec push in std xlat jmp mov rcrb (bad) jo sbb icebp cmp dec movsb jecxz sub xor add int out push pop loope repnz iret jns repz out ret mov xlat cmp dec inc sub and xchg mov mov ret xchg scas xor mov outsb mov dec sti xchg int3 out jns scas fidiv mov xchg xchg inc pop clc inc xor jmp mov aaa jno pop fucompp loop mov cli xor pop (bad) push or rol jb pop into mov dec mov stos mov mov mov pop dec fmul lcall cmp jg sub into add mov cmp xchg pushf test mov sarb sbb jns test in rclb ljmp ljmp inc frstor fldcw mov lods nop pop into mov dec decl sub jne movsl pop push xor popa in mov xor ljmp mov nop divl into popf push lcall or mov (bad) shll push fnstenv mov pop icebp or (bad) into (bad) lods jbe dec dec sbb xchg inc clc or ret cmp cs (bad) popa push movsl or cs push or icebp lcall rep xor sar mov in jno push and ljmp cltd out mov aas lods pop aad sub add push mov repnz jp movsl not out repz xor daa repz xchg jecxz addl loope sub mov ja jbe (bad) imul (bad) adc sarb adc cs insl sbbl push iret cld mov mov sub rorb movsl test xchg fdivr or jb and nop adc stos in clc imul inc negl or stos shll roll dec pushf push jge (bad) out test jle mov out pop js lods mov xchg sbb out sbb lods es cmpsl jp inc fwait sub std iret pop in icebp fsts pushf lea daa jl pop popl xchg test dec push hlt cwtl bound add mov jbe cmp or and push pop fwait push leave ret lahf jne inc xchg dec adc add xchg int3 aad (bad) dec xor lods lds adc sub repz in mov xor enter mov adc inc push cs jecxz add push pop outsb lea (bad) lcall ljmp test ja mov adc test sub jl (bad) int3 (bad) frstor push cmpsl mov dec inc jmp (bad) mov xchg jp jno nop inc jns call test add push inc cmc outsb dec fdivr bound jge shrb dec loopne add xchg stc call jmp leave sbb movsb pop mov movsl hlt pop sub mov rcll cmp arpl aas or test add aad sahf dec out mov push add test mov jns dec inc dec (bad) jecxz adc (bad) inc xchg insb arpl mov das insl insl xchg cmovge jl jno jb sahf mov (bad) dec (bad) and cmp std jle fxch repnz sbb (bad) mov cld stos mov insl mov mov repnz jo sti or es lods cltd test or jp movsl push mov xor ret and sub in fndisi(8087 xchg cmpsl cltd gs (bad) adc adc ss inc jb out fisubl push nop nop clc addr16 data16 add lret (bad) sub js je jg pop (bad) jl aad es xor fstps leave notb cmpsb sbb add incb sub add xchg mov ds daa (bad) or xchg (bad) aas idivb repnz jg leave lcall push pusha jne test js cmpsl pop repz xor xchg je fisubr sub jg inc bound dec shr and sub ret dec fwait and push cli fwait sbb pop lods inc sbbl and mov sub mov popf test pop mov shrb pop xorb outsl mov sbb adc ficomp xor leave xlat (bad) cs fnstcw cld ret mov fstl push rcl cmp sbb mov and and adc ss orl and jle cli repnz sahf mov cmpl pop sbb push int3 out xlat hlt sbb xor xchg jp pop xor psubw stc fcomp pop sbb jg inc inc in mov test sbb mov popf icebp sbb inc clc rol fcomps loop mov mov dec lea mov mov cld inc ror je or xchg mov test add cmc cmpsl add dec icebp loope xorl sub mov inc (bad) xchg inc sub test mov xor jbe repz inc xchg loopne cmpsb ljmp (bad) jne dec hlt adc mov jmp sub add push jo or jnp mov (bad) jne sarl mov cmp arpl out cld xor jae shrb lret int push ja cli jo jne mov pop add mov mov sti pop call fucomip xor fldl cli jge fbstp xchg add (bad) leave or ret mov sbbl jg fisttpll int repnz mov xchg les pop xchg daa in orl movsl sbb inc data16 (bad) cwtl pop pop and insb mov ja pop daa jno cmp dec sarl or sbb cmp xor js dec dec scas int jnp (bad) fcomps mov push mov ds inc cmp decl adc rolb xor push dec lret testl xorl cwtl ret jle mov sub and sbb xchg inc mov pop shr inc dec pushf xor xchg dec stc out psubsb dec xchg pop xchg adc and mov xchg test iret rorb imul dec cmp cmp adc jno mov mov xchg mov sub fcomp xor dec int3 push test imul movl mov xchg ret xchg mov nop inc ficoml mov es loop and lock pop inc push js mov fcmovbe dec das idiv mov dec mov xchg xor xchg in adc je mov lods mov aas sub adc sbb ljmp rcr pop outsl inc notb notb movb cmp jno inc (bad) in xlat sti jl or inc in cld inc loop xchg into jmp jns ja hlt daa insb xchg jg xor andl (bad) jle sbb ljmp jge repz movsl sbb popf jb test ljmp int (bad) inc fildl mov push fnop enter mov inc mov inc jp popa push (bad) jg mov in cld outsb in negb adcl ljmp jecxz xchg fadds pop pop pop cmp jle mov sti mov inc mov jne shrb rcr rcll rcll cwtl xor add std pop (bad) shrl push push repnz rclb out sbb lock sbb mov jno pop jg dec jecxz jae and pushf jge mov les pushf pop lcall (bad) pop (bad) pusha out fstpl out in dec sarl (bad) xor or sub jno fdivrl sub mov cmp ja test dec loopne fsts pop in call mov sub sbbb in xor test add daa xor jno jns dec xchg aaa add out fwait sbbl and mov aam mov xchg lea sbb test inc into or cli lea cs rcll jl fsubs adc testb int3 (bad) ljmp mov arpl rol dec mov jmp mov mov in xchg lret pop into (bad) jge mov fidivl ret aas std jo je xor pop ja jae bnd push lock or cmp subl popa adcb xchg mov jnp aam xor pop hlt jno fldl xor cld lret xor (bad) cmp lods sbb cmp aad das mov jbe push fwait orl sahf imul jns subl shufps cs test outsl mov repnz pop mov inc sbb sbb cmp std loope pop lcall add pop ljmp imul push out sbb js lods fnstenv mov rcrb aaa push sub fiaddl mov cmpl xchg movsb test jmp sahf in xchg movsb ljmp lret mov fcmovbe insl mov dec ljmp mov and adc insl sahf movsl mov das lods mul popf out ret sbb pop xlat xchg shrb xchg movsb imul pop stc (bad) push out mov in add pusha (bad) mov and mov sbb aad pop inc daa scas pop inc (bad) pushw nop pop cmpsl nop push and push je mov fnstsw mov xlat mov int out cmp scas inc mov int3 xchg lds mov xchg dec push dec mov xor outsl and push dec add test add xchg nopl ss mov mov mov mov sub cmpsl and in negl xor ds insb push jnp push jbe mov fs push sahf push pop sub enter dec add ret inc xlat faddp or popl add loop xchg push aas in mov inc mov test xor scas (bad) fstps lds xor jnp andl or scas mov sar dec cwtl inc or sbbl icebp or mov mov adc dec inc inc les movsb cli dec or push divl (bad) lock out sub subl (bad) sarl and in push addl xor mov cmpsb (bad) fidivr mov icebp (bad) fldcw cld lods inc xchg inc or insb sub dec jns pop rorb addr16 lahf fimull or aaa cmpsb inc add or aas imul cmp sub mov adc mov scas sbb sbb jp je (bad) mov adc inc mov xchg push int3 dec stos ss xor dec inc cltd add jl or adc test lcall push std clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas (bad) aaa add incl arpl dec popa or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec enter push js in (bad) inc cs test das mov insl (bad) (bad) insb (bad) cs out fidiv add icebp jnp call adc ljmp loop cltd data16 pushl mov das ljmp xchg inc xchg pop out cmpsb mov mov xor sarl shrb mov imul and sub mulb add out sarl in movsb dec xchg sahf aas lret mov push movsl stos dec pop xchg pop rorl push jb fldl outsl push icebp sub (bad) aaa jge xchg and cli lahf insl js lret xorl pop xchg nop sub push (bad) dec dec add loop inc mov fildl stos xor iret pshufw das cmp pop dec pop pop mov mov xchg test and insl mov push push add or cmp mov sahf xor lods pop (bad) push mov mov inc adcl xor icebp cltd mov dec js daa test outsb mov pop insb or mov xchg test repz xlat test stos insb (bad) jno sbbb inc mov xchg test gs stc aas fmul stos sbb stos mov sub (bad) mov loopne mov pop in cmp inc sbb sub (bad) enter pop std inc jns adc pop cld jg sahf loop,pt dec push outsb pop pop adc mov xor je inc dec fwait repz push push les jne mov mov (bad) pop outsb jmp cmp enter mull sub insb mov stc pop dec cmp xchg xor sub jae cmpsl mov xchg and aaa popa and mov rcrb pop fs jbe js jo sahf xchg fdivs sbb xchg mov pop lods sub inc fsubrs push jno sub pusha mov addl jge insl fcoms xorl dec (bad) mov lods mov mov inc mov xor enter push dec xchg dec jnp (bad) mov les pushf xchg dec adc idiv push out and dec (bad) popf shl and xchg and out cmp or pop lea outsb in adc adcl icebp adc adc inc xor mov inc push mov outsl inc push lea dec mov daa icebp sub dec aad mov jl and push int iret aas mov bound adc test dec (bad) sub xorl insl cld lea imul dec push subl imul xchg dec divb bound inc mov cli dec xor ljmp rcrl rolb in mov icebp sub das shl cli jae imul mov cmp aam icebp in js lahf or xchg test stos hlt cld mov lock mov aaa aad sar adc mov push lods pop addr16 nop inc movsl mov mov mov (bad) mov jb addr16 mov sbb mov xor xor push fiaddl movsb arpl push in push int3 add mov idivl dec mov imull movsl fwait (bad) pop push pop mov jp movl mov pop and insl xor xchg xchg sti outsb mov cmp pop jb and dec aaa imul int fiadd inc insb jecxz fdivs outsl imul cmp cltd rolb movsb inc fwait aas int3 fstl pop xchg out mov sub inc cmp outsl pop xchg popf mov mov push and lret jo aas jne scas outsl mov subl orl cli mov stos loope iret mov (bad) out (bad) dec or mov inc and pop pop cwtl iret pop repz fdivs xor sbb jne addr16 dec jae stc pop xchg aaa popf mov xor push mov add sbb mov push or and and gs mov fstps mov mov sbb out aad xchg mov xchg lds ss mov push imul and add mov inc cmpl sbb rorl mov jg fmulp nop outsb addr16 xchg fdivrp mov addl xor (bad) jmp into cmc lret (bad) and mov in scas adc mov xchg xor cmpsb mov leave jmp incl and leave and addb sub push pop cmc adcl and outsl (bad) pop lds ret arpl nop ror mov mov leave cmpsl jns add mov lock sti sbb sahf int mov lods lds sbb in sub fisubr cmc scas adc fidivr fist stc leave jecxz dec rcll rol lcall js mov adc add sbb lea dec mov dec out stos rclb adc sub in mov pushf or xchg pusha ljmp cs test imul and lret add or adc daa and mov sub hlt out jae data16 cmpsb in fild push fisub movsb out lods ret and adc jge or jae test push push xchg cmp push adc dec mov sar ja add int push add repnz dec and (bad) and xor popf xchg mov ds pop or or ss test fcoml pop inc sbb dec and lret pusha in push inc inc clc push mov push mov ja cmp jmp push mov mov jns shl icebp cmpsl fcoms int dec les jbe fistpll sbb cmp call dec fs ret mov add movsb xchg xchg mov imul rolb es dec jno jmp and xchg sub cmp jns inc mov or or loopne popa xchg (bad) (bad) mov xchg in push pushf sub sahf or sarl add movsl lea test je hlt pop mov adc lds cwtl adc pop cmp xchg xor push hlt xchg ret pop aas fimull data16 cs sbb fs mov add adc push push icebp pop ljmp shlb sub or sub (bad) dec push pop cs cli mov rol mov mov or aam sub cmpsl scas subb lock jo popa mov sub add or leave inc sbb insl je pop ja mov dec adc pop push cwtl mov sub cs cmp xor popa dec lods bsr dec cmp in aas mov xlat enter pop cmc dec xchg lcall nop mov inc or arpl cs rclb jmp jge inc dec jbe out std xchg shrb out lds add notb pop je cmp dec inc cmpsb sbb repnz fdivrs dec test mov test (bad) adc adc jge notb and or push lahf repnz inc fadds and add cli in add jo adc pusha movsb xor stos sub fs out cmp lods pop inc roll cmp jmp inc loop push imul or jns bound lahf in pop jmp adcl inc jle jmp mull lds loopne pop iret insl int3 jg dec out lret lock sub loopne and fcomip push cmp sbb mov adc cmpsl int (bad) jmp xchg pusha call fdivr cs push xchg out and mov dec (bad) cltd pop mov mov add into pop mov movsb add cmp test (bad) gs sbb jecxz mov push mov sbb jl mov or insl adc sahf jmp mov fisttp stos into js ljmp test lcall iret lret sub addr16 rol mov or pushf test into pop out push fmuls adc test nop push js inc adc jl stos jae inc rol and adc and mov sbb aad cmc jbe cmp xor ret data16 xchg add fmull loopne,pt iret sti add popa jns jp out movsl jo sti pop insb inc out push ds lret pop (bad) mov andb cmpsl out lcall fwait pop fwait jg pop mov in jne in movsb insl sbb mov sub hlt in (bad) mov xor lds cltd mov cmc das inc xchg stos or mov arpl xchg jg popa repz push and dec push fmuls aam inc cmp rep inc call call push pop pop push cltd adc dec dec sbb push add adc xchg sub push mov mov jo popf push xor aas mov mov stos mov lret xor or test sub ljmp xchg (bad) pop mov insb mov lcall jno push icebp pop xchg aad add dec aam xor stc push loopne add push bound jae aam (bad) cmp push movsb outsb imul aad xlat into fisubl pop pusha cld (bad) sub lcall xchg stos into cmc cmp mov jg sub dec dec mov scas jmp xor daa stos fadd mov jno (bad) scas iret cwtl mov bound lock (bad) hlt or loop and out cmpl mov push dec or push roll sti in jo jl mov add mov in es xlat pushl mov or mov fildll popa push int push int3 pop into aas cmpsb cmp sub xchg mov fcoms out ljmp add xor xor sahf xchg sub adc pop add mov pop imull mov add jmp add cs loop mov into dec fs sub xor xchg mov xchg scas fisub loopne sbb xchg lret data16 les sbb jmp jecxz sbb add in jno xchg push loop adc and mov adc imul fidiv pushf outsb push add or fistpll jl jecxz insb jo add xchg inc sbb loope stos push cmpsb lods or daa std jge mov jns (bad) frstor inc outsb loop jmp sub mov div rol out pop sub lods or fnstcw mov sub repnz pop and mov mov loop scas aam (bad) pushl pop les jg cmp cmpsl xchg ja scas je fildl jp fsubl jbe (bad) push sar in fs cmp (bad) mov mov repnz insl enter push lret add aam adc push mov aad std pop pop sub (bad) repz mov test add divl jb inc push xor jno mov adc xchg pop push mov push out mov repnz dec add aaa cmp dec ja adc clc add adc xlat aaa imul mov nop fldl mov iret mov arpl (bad) or dec in mov inc xchg inc sbb sub xchg test sbb or mov push lret (bad) or fld and or out arpl mov test jb rcll xchg push adc mov mov dec dec mov xorb out loope pop jecxz cli mov insb test push sbb hlt pop cs xchg imul lahf inc push addr16 leave push mov and mov push sub (bad) pop pushl push imul lcall cmc ljmp jnp (bad) jae adc jmp insb stos jg test dec loop xor (bad) push mov (bad) dec jp std aas mov push pop cmp iret popa jnp cltd (bad) mov dec fs push fistl roll mov inc mov dec int jns (bad) sub sbb lret pop mov cmpsl mov sbb mov sahf inc push pop cld or mov jl jno rclb lock mov or loop dec mov lds inc xor pushf inc cmp push sti mov cmpl ja mov mov jns lcall daa or pop lea fwait jo pushf sub mov or mov repnz (bad) dec pop mov loopne pop xchg push shlb rep or int3 adc ss lret inc jbe lret out xchg sbb jge movsl pop outsl pusha jnp sti add ss or mov test inc (bad) cmp das in xchg and or push outsb jle loope xchg lret push ret sbb adc (bad) mov test add pop dec ljmp cltd int3 sub mov ds or cs loop idivb aad in rclb daa or imul mov jmp inc (bad) mov jle sub rsqrtps mov push lret insb xchg cmp movsl in cli xchg mov in cmp or and and mov mov dec pop inc mov inc mov hlt cvtpi2ps out mov or in loopne ret inc pop mov out pop xor jnp mov inc pop lret cld js sbb in cs test fisub in sbb cltd arpl imul inc push sbb push imul test push lock xor inc lock mov add and je xchg mov jge sti sub cs test mov ret mov sub mov (bad) jns shll pop pop sbb push or jl loop cs sbb pop test (bad) cmc in insb dec pop mov loopne ret and xor push adc mov dec fwait sbb cwtl call mov hlt (bad) iret gs andl cmp jnp int (bad) aaa fs cwtl std sub jb cmpsb or add in mov mov fwait lret sbb jl out jecxz aaa in or adc ds lret jmp cmp and pop mov fmul jge shlb adc cmpsl adc stos loopne dec dec pop mov mov rcll (bad) or sti add push cwtl inc xor jge push (bad) sub mov pop or loopne xchg lds fs fildll xlat push cmc and add jmp mov mov xor insl icebp xor and xor bound adc lock sarb mov test mov into or cmp adc inc test xchg pusha cmp bound xchg pop mov inc loope adc sub faddl frstor leave push dec ss test push mov jb cltd fstps push inc jo pop pop iret cld sub imull mov xor or mov lds out les mov adc xor arpl test and leave push mov lret shr mov lods mov pop xor aad (bad) mov pop push ret js add das shrb ljmp outsl xor adc (bad) stos data16 xor ret dec jnp cmp (bad) loop sbb aas push and int mov pop mov pop or mov hlt (bad) cmp and lods jo xchg add scas sub xchg sub mov sub add and pop test push mov jae fnstcw mov das orb jle xor aas ficom mov ret push cs xchg movl lods jg push pop mov es push or stos or mov adc dec jno cs xor mov jo mov stos popa mov mov out mov (bad) data16 jnp iret xchg sub xchg aas mov mov push mov mov pop inc pushf dec mov int3 mov lods loope dec leave inc sub mov (bad) mov es lret pop bound std popa push loope ljmp (bad) mov push push mov test xchg outsl or fs xor jp fnsave stc movsb xchg int ljmp fdivrl pushf push add rorb ret pop test ficom rcr aas test and cmpsb jg daa xorb icebp pop mov pop int int in out int je push jl push add jno inc push mov push gs movsb lret sbb pop loop xor mov adc jb and and xchg inc jmp aad inc in movsb mov out dec fistpll xchg movsl and jl push xor in jmp lea mov addl cltd dec ret subb sar (bad) cmp in (bad) and xor ret leave jg mov xor subl movsb xchg loope,pn mov inc push dec adc dec cmp xlat mov jbe jne rolb add imul popf jne xchg mov pop clc movsb ljmp call xor xorl ret sub lcall mov add (bad) push repz add loopne insl test ds xlat ss gs fnstcw xchg mov xchg scas mov sub inc daa jnp lea aad push adc lock in pop bound xor (bad) mov xor arpl pushf and ret arpl cmp mov das mov sub dec push rcll jnp lcall test addr16 cli cmpsl cmp dec add xor ja std sub andb lret pop daa sub cmpsb lret cmpsl dec call ljmp enter jp rclb mov add out jns in (bad) jecxz push mov rclb (bad) fildl adc repz xor cmp cmp imul shrl jnp fwait rclb sbb cmp f2xm1 iret loopne dec dec push dec mov mov sbb xor fcoms dec xchg sub jl ret xor mov jae xchg xchg mov aas xchg enter and loop pop jg mov push pop mov sbb lea gs lods pop iret data16 jp fs rcrl cmp push or mov adc int aas mov pusha arpl xchg xorb inc adc xor sub jns mov test repnz push and out gs lea sbb add fdivs pop in enter mov xor mov push cmp sub leave sbb lret bound mov test inc jmp mov dec mov rol jl inc push mov and and (bad) mov inc cmp jae (bad) mov mov jle jae push sbb pop movsb adc je mov mov icebp and jg lods push repz int mov lret std sbb fs in xchg mov sbb test sti outsl xor lods add add mov mov adc xlat pop and dec dec mov out xor stc lds repnz pop shl cmp out add xlat inc outsb lcall ss pop push inc dec aad pop rorb out add insb cld pop std lahf sahf mov (bad) push inc xchg (bad) xchg arpl mov push add idivl and cmp dec test out loop sbb mov fnsave fcoms add into fisubl fidivrl (bad) repz lret sub push icebp inc dec sahf adc adc jnp sub inc jb aam imul push sti test cmp shll mov js cmp ret outsb jb pop (bad) hlt pop dec fwait mov clc divb outsl sti xor call adc mov test mov pop iret and lods das les or push lods pushf pop sub shrl xchg push add je inc pop ret push xor mov push sub pop subb aas mov mov push daa in je lret add cwtl enter ss xchg scas cwtl push push fisubr xchg push popa scas dec leavew aam cmp and pusha dec pop inc movsl mov xlat mov jg xor adc sbb lods das sub mov pop or mov push bound lds and xor push sub popf shrl adc pop mov inc fcompl inc int3 add test xchg mov and mov (bad) je lret lcall je dec xor in xchg (bad) rol sar dec jno push cmp push xchg inc dec mov pop mov stc clc test push arpl dec mov std xchg lds push aaa sub fstl in dec hlt add lret aas sub in fsubr cmp adc leave sahf inc nop inc sbb push xlat repz mov inc and cmpsb adc inc aaa stc adc add mov nop jb mov inc push mov ret mov call sbb xor sbb (bad) jno inc les jno fisttpl in aaa (bad) icebp int cs inc nop aas jae xor (bad) mov ljmp push mov mov out jmp mov mov xor test push test dec sub xchg push inc inc fdivr mov and dec hlt scas sti int movsb sub push mov divb arpl out (bad) aas aas jnp mov add sub mov pop mov dec into loope xchg test sub cmc adc (bad) je mov mov notb aad inc loop cs xor inc xchg pusha xchg mov mov cmpl adc dec or add jle popa inc and mov cmp xor sub and sub pop sbb repz sbb dec mov cmp gs push dec jns xchg enter aam fldcw mov stos xor nop pop mov sbb test xor dec xor test lcall pushf mov out pushf mov jmp inc pop rclb cmp and nop xor rcrb sbb cs mov mov mov fmul in jmp jmp lret push or insl sub cmp xor mov cmp out pop inc sti or adc loop add add sbb fcoml and lretw add loop mov mov popf scas adc xor cmpsl mov (bad) out dec cmc push fcoml mov data16 and lods jae enter int3 xlat dec jmp adc cmp dec push jmp sbb fsubl (bad) (bad) push aas cs adc push aas jne and cltd sbb dec into movsb mov mov call pop in inc add sahf std sbb push adc es mov jne sub sahf pop (bad) cli inc sbb into sub jmp cmp xorb mov xor add add (bad) aaa lods loopne dec aad (bad) rorb push loop push adc sbb xor xchg adc iret mov push cmp das aam jne and out push test imul popf lock js jne pop jbe mov and xorl push (bad) or roll sub or pop xor xchg mov mov pop xor jns push pushf sbb sbb push ljmp or lods jno fstl xor sub push add push or nop test (bad) cmp repnz add jecxz adc aas jl add push aaa cmc leave (bad) (bad) mov scas inc inc cld ret inc dec xchg out dec out sbb or aad xchg push es test lds dec xchg inc sub sbb iret call pop incl xchg sbb xor mov mov adc dec cmp fbld roll lret stc add jns adc and mov lea enter add (bad) pop jecxz,pn loopne add (bad) cli push or rcll xchg cmp cltd mov inc xchg in mov outsl (bad) in pushf into jecxz fidivrl sbb enter subl pop loopne dec nop in lock out popa cmp sbb mov dec or andl cmp int adc scas xor notl ds and push add out push cwtl mov sbb xchg ss lcall mov and xchg into inc (bad) push pop (bad) xor xor dec fsubrs in in fimull iret sahf fsubl lahf fwait or xchg jl (bad) insb int mov int3 and icebp inc jo cmp mov call jmp ds xor adc mov idivb repnz call fcom (bad) push repnz prefetch push cmp jno xchg sbb or loopne mov pop adc pop arpl outsl lods add out fdivr jns pop xor mov (bad) mov lds sbb lea shlb iret mov xor dec and dec mov fisttpl and out cmp xchg test wbinvd push xlat call adc pop nop dec call push pop addr16 dec roll pop push out jno push js mov sub (bad) mov add sub divb ljmp popf mov pop cwtl lods or rcrl in gs ror fs nop sbb mov push ljmp jae pop push adc loopne jecxz hlt sub push sbb pop xor insb and lock jmp mov addr16 xchg mov stc fstl xor mov out mov pop mov (bad) xchg xchg mov icebp dec xchg mov jl pop and (bad) adc add lock lods incb add push add or hlt jp in jge sbbl cmp cmp and or adc repnz ja or insl sbb mov adc and mov dec push or fisttp pushf adc push hlt mov js cmpl push test pop and js ja fstps sahf cmp push mov sbb ret or stos or xor mov lahf xor xchg es and dec mov gs xor or (bad) testl sarl xchg (bad) mov test icebp or iret jnp jle test and inc in dec test and ret xchg xchg roll arpl sub and pop rcrl jae mov outsb xchg cmpsb mov sub add dec std inc jne xchg es in jb inc out push push aaa pop xchg loopne mov gs fnstcw iret test aas push loopne push push push xor jns push incl jae,pn lcall xchg or jle add jns xchg js fisubr and pop rol outsl lea and or cmp rcrl jnp or iret xor sbb and (bad) sub es adc add (bad) fnsaves cmp push xor stc (bad) ja push fstps scas or push mov sub sub out ret cmp loopne xor insb into out in jbe xchg shrb adc cli sahf cmpsb cmpb xchg mov lods mov addr16 push hlt imul push in loop or cwtl (bad) pop enter dec jmp inc dec jecxz nop jmp iret int3 fmul call xchg loopne jbe leave sbb ret stos mov and mov xor inc ss icebp and or je loope and cltd dec cmp xchg jnp inc or xor aam inc (bad) mov aaa in push sbb push mov out add in into sub mov sub mov fcomps loope xlat xchg push sub add nop pop hlt aas adc and ss idivl mov jmp jnp inc mov jae jle mov pop mov xchg aad dec nop add jbe pop insl popf pop adc pop pop jns push add ljmp popa psubb aam lret call and sbb repz mov pop fistpll out dec (bad) lret stc stos sarb lret shr test adc dec jbe fisttpl iret sahf jb jbe mov arpl cwtl jmp pop push mov mov mulb jecxz and addr16 pop mov ds cmpsb lock mov stos lea cmpsb loop sub loop pusha in sbb mov clc lcall loope pop push xchg adc in jo or xchg loop and insl mov lods imulb inc push loopne in cmp jg mov imul pop stos jno mov pop cmp les (bad) in dec adc sub sub mov jb fs push add mov repz or (bad) roll inc push cwtl and mov arpl jp inc notl mov in dec mov gs icebp inc adc loope shrl enter test inc push bnd add jecxz sbb repz push nop les cltd sub daa outsb sbb and cmp out fsubrs xchg cmpsl sub pop pop xor nop scas (bad) xor popf xor or and push pop dec xlat inc mov pop xor pop jl sub cmp xor leave repnz or xchg adc aaa test js push fndisi(8087 aaa jmp in scas cs ret fsubl mov pop stc adc push fistp scas test aaa xor fild mov pop aam shrb (bad) jne xchg xlat sbb push xchg (bad) jecxz out mov or cmpsb pusha mov ljmp jecxz adcb mov dec mov mov movsl push subl sbb push bound divps add (bad) pop mov mov mov cmpsb mov clc push mov out scas mov sbb (bad) lret push jmp (bad) repnz lret aam pop mov loopne test push out push push sbb fist jmp lea mov js and push ret cld sub popa mov sbb fsubl arpl or pop mov adc push (bad) addr16 mov add xchg jne push (bad) cmp push xchg test mov sub adc into cmc jle andb sub or mov leave cmp jno nop cmp add mov pop arpl and dec shrl sarl sub test adc mov bound cmpsl lret insl idivb cmp or data16 outsb or insb xchg test adcb push pop add jge stc pop jle jg sub xchg sub or or roll cmc mov js add ret mov lds dec popf sub fs dec jbe daa push push loope fildl and xor mov xor call cltd jmp js inc mov mov add test addr16 cwtl xchg out cmp pop fucomp xchg and xor (bad) and icebp fcomps call dec cltd test call sbb inc cmpsb push stc sbb inc sub fisttpl jmp xor adc (bad) mov sub pop insb mov pop pop mov insb xchg shrb shrb push test out fcmovnbe fiadd xor insb dec mov test out inc mov mov ror fs daa push incb and ja add call jno repnz jae jb stos and adc mov and mov xchg movsl idivl inc sarb (bad) aaa and xor push das push scas and jl leave jp ljmp test push inc ficoml ja loopne mov daa lcall xor cmp and out mov cmp mov mov (bad) sbb inc or loope cmpsb fsubl dec jo inc xchg shrb pop and push mov ljmp push push mov cmp repz scas mov pop push lahf push inc lock mov movsl cmpsl push xor dec and (bad) out xor cwtl aad cmp movntps cld sbb adc call scas out testl jne shll iret xchg aad sbb cs adc pop cmpsb dec mov sub test lods mov cwtl pop inc imulb cld add aas push cmp dec ret adc outsb mov and insl insb fimull js xchg ret sbb push add sbb jg repnz inc es push xor aad stc cld mov dec xchg scas cli sbb add cmp imul test inc add pop cs and loope lods xor mov inc aad xor adc xchg (bad) int3 jbe jae into jbe dec nop add jg out xor lret xlat (bad) sbb lods icebp (bad) ret adc cwtl push test fdivrl add repz and push push movsl in pop jle push movsb adc pop idiv push xchg pop xchg jg cmpsb push (bad) xchg movsl mov inc (bad) push mov inc xchg repz xchg adc xor out icebp testl daa pop ret add rclb mov mov movb daa mov mov adc mov push adc (bad) out out and sbb xchg aas and aam mov lret push js shrb fstl enter stos sti scas jns dec repz vunpcklpd loope,pt dec add mov sub add add add pop mov jmp xor xchg cli imul dec pop lret jne mov data16 clc jo cmp push and out in out adc idiv (bad) faddp or test scas lods out mov in jg cmp or push das les sbb scas decb mov rorl xchg imul test scas cwtl cs (bad) in movsb stc xor mov inc and out mov mov cmp (bad) xlat and dec rorb stos ds pop bound sbb (bad) fsubrl fild or jne xchg movsl mov mov dec add add add adc pop into mov aaa int or ljmp xchg inc sbb cmp arpl mov sbb aam sub pushf sub sub sbb es xor mov mov sub and push adc jbe mov test cli fnsetpm(287 shr inc sahf mov sarl push test xchg pop jb iret cmpsl gs mov lods xchg mov pop shll mov jnp cld mov add pop jl aad jno pop jae dec mov mov xchg pusha aaa jo jmp arpl cmc addr16 (bad) movsl inc lock js (bad) cmc inc mov push fisttpll icebp and dec int pop movsl pop sub into xor mov pop cmp pop cmp inc lret add mov cli std or lcall (bad) out cmp aas rcrb and inc xor dec (bad) outsl (bad) lods ret cs (bad) sub bswap test push (bad) jmp mov stos ret xchg js jne stos (bad) cmpsl iret and mov inc push (bad) lods scas sub icebp xchg and sahf cmp insl push cwtl cmp inc pusha inc lods add xor loop or orl or imul or (bad) lret pusha xchg add jo (bad) out xchg and pop jge in jb pop add test mov jns xchg inc std inc int test test fsubl mov aad dec jns icebp xchg test jle adc sti jmp imulb jl jmp jp cmc mov push cmp push sbb mov dec dec daa jnp jmp insb mov push dec sub mov jbe mov inc mov jbe int (bad) mov or or and loopne jmp mov inc push mov pop xchg mov cmc jg mov mov loopne fwait dec inc test rcr adc (bad) enter fdiv imul fldenv (bad) popl daa shrl push or out inc xchg movsb pop mov and scas cld sub push sarb or fadd aam mov jbe mov into inc jg shr insl xor mov sbb xorb rorl inc out cmp mov fmull bound sbb lods pop adc mov nop and imul mov dec jle dec test fcmove sysenter adcb pusha ficom imul in xchg xor (bad) ja pop cmc xchg inc push mov fcomps fdivl hlt or inc bound mov daa mov or jb xor loop subl sahf dec inc xchg push pushf xor nop stos jno sub mov add cmc pushf pop push mov push mov loop add sub xchg pop adc (bad) ljmp notl repnz leave xchg nop sub adc (bad) leave fbstp mov js or add test pop lahf push jg sbb (bad) std (bad) mov ss insl aam sarl sbb loop pop xchg sub (bad) push mov in repnz dec cmp je out adcb jnp lcall add sbb cmp cmp cmp (bad) out pop int3 decb cmpsl aas popa fldcw cmc or sti insl stos jg nop mov xor clc lock xor or mov loopne dec pminsw add pop add cli les mov mov daa jae inc out test jmp popf nop daa pushf add out repnz lret push inc mov jb rclb out fcmovb xchg and inc outsb adc cmp fldenv jge bound popa lods and in push (bad) (bad) jbe mov pusha sub mov push ljmp clc test aad fld pop or dec sub dec push insl (bad) push mov xor mov adc jg loopne mov xchg inc push dec in sbb sbb icebp les dec inc hlt mov (bad) xor test test sub jmp hlt cmp loope,pt jo cld mov orb faddl popf inc inc and (bad) pop jl xchg outsb int xchg test (bad) icebp cmpsl stc and out jp mov sbb movsl jl mov fldt push mov scas inc bound inc cmp sub cmp cmpsl mov fsubp in js repz and inc jae jmp jnp xchg cs dec fwait in mov inc dec test bound jne inc sbb adc mov jg push xchg push fcompl inc loop and lods in xor cwtl fisttp loopne pop aam mov pop lret (bad) mov int popf adc jne repnz ret hlt fcompl jl pop popf mov fwait movsl sbb xorl add adc mov repz push ss popf push sub add loopne inc sub shrb xchg dec into iret push fcom push xchg mov mov jle dec fisubr cli pop add cmc xchg scas outsb mov testl sahf loop push sbb add aaa hlt push inc shrb fsts cmp sub subb jecxz loope lods test xlat imul mov std loopne sub inc insb nop outsb push push inc lahf inc xchg ljmp les test pusha mov (bad) pop mul jecxz jae lods aaa mov das fisttpl adc adc fidivrl inc cmc pop sub shlb in xor sub sub jecxz mov insb (bad) out insb fisubrl push xor (bad) xor adc push stos pop push add jge push stos repz push lahf mov mov (bad) aas mov je (bad) cmpsl jae xchg daa jl movsl aaa cmp cmp fs ja in and ret incb pop lods stos rclb popa lock mov push (bad) aaa loopne repnz dec loope addb insl ret stc out dec inc leave add test inc cli leave sbb jp mov in je cmp cli dec pop jb,pt stos mov jno sbb and adc aas data16 pop cmp or je test jae xor dec cld fadd fisttpl jno data16 sahf into mov jg dec ja mov (bad) cmp fldl addr16 pop and popf test pop lcall push mov lret in xchg cwtl sbb sbb pop xorb push mov cmpsb rcll loope push int3 les mov cmpsl push cmc or mov ss dec push mov jg dec sarb dec push or int3 xor lods or jns (bad) mov push mov (bad) sbb mov jno dec cld push push push push adc inc popa ret push mov repz (bad) xor xlat and cltd xor arpl xchg xchg aaa scas mov ret (bad) mov xchg or jecxz addr16 pop xchg mov rcrb cmp jg jge dec (bad) mov ljmp sbb es cltd or or push lret lock les add ret dec insb outsl insb rol iret xchg sbb pushf jae jb sub dec adc insb dec xor jl mov inc push enter mov add bound es data16 (bad) ret (bad) out (bad) jp sub in mov fcmovnu bound loop iret cwtl les adcb mov enter sub out xlat mov jbe outsl lret (bad) xor mov hlt mull pop sub scas in sarl movsb pop mov pop mov mov and cmpsl pop cld push cmpsb mov repz push sub mov mov sbb lods adc jl push adc mov sbb inc (bad) out cmp imul xor in cltd ss and or test mov imul es mov sbb dec fidivrl fnstenv mov sub pop sbb imul jmp (bad) fisttp in scas int xlat mov push mov mov pusha pop pop add stos mov mov scas jge push cs push jbe jns (bad) sti cmpsl gs jg adc mov lcall dec sub movsb add lahf pop das push dec cmc mov xchg fwait loope loopne jno loopne push and mov outsl sub jnp js gs dec mov ret push mov inc out (bad) sub call imul imul dec inc ss jecxz scas xchg bound sub and mov xchg lds nop repnz ss sbb fsts and test and fsubrs aad outsb dec popl cmp xor jbe out mov lahf scas dec lret sub cmp jmp jb movsb cs sbb inc xchg scas test adc (bad) rcrl mov xchg insb pop pop sbb std xor pushf jae mov (bad) ret xlat jb mov sbb lahf xchg dec or cmp arpl pop ljmp mov sbb jb lret mov push out sti sbb cwtl inc rolb xor and dec lods lret nop mov mov hlt cmp fcomp sbb gs xchg mov inc lds pop inc and aas adc ljmp inc cs or cltd ss adc xchg sbb cmpsl inc clc ds incl mov cltd lahf adc imul sub xchg dec adc inc push js mov mov aaa dec mov inc aad xchg inc and stos push fnsave push jg mov pop and cmp lret js xchg mov nop repz sub mov call jns jecxz mov push push (bad) movsl aam mov pop mov lds ret hlt adc xchg sbb sub dec les les enter push or ds ss jmp sti rorb sbb (bad) cld push data16 les sub cmp jns pop add xor out xrelease and xlat pop pop lods out jae repnz lret pop xchg cwtl js test insb lock mov les cltd (bad) and push jmp mov xor rcll jne dec push aas sub push out insl (bad) sub or adc aaa cmp mov or xor jecxz lcall repnz aad aad xchg xlat out fidivr jecxz pop addr16 dec popa or add sbb adc nop imul repz pop nop into (bad) push push pop mov inc push adc mov idivb sbb cmpsb das cmpsb and adc adc push fsubrs lahf test push cmpl mov push mov sahf in xchg or jp aas mov shl mov mov adc lret sub dec or xchg jo xorl fldl inc mov mov ja mov test fnsave bswap push sbb fdivs pop hlt ret sbb lret dec xor je push mov xor pop lret pop (bad) mov cmpsl fstps jb push sbb push jae fisttpll cmpsb inc sbb dec sbb pop or std push es hlt jae stos hlt nop je inc fcmovb (bad) adc out outsb jb pusha push mov sub arpl jo mov xchg cltd pop dec loopne sti xlat bound pushf cmp lea lods inc lahf iret fcmovu ljmp dec (bad) mov icebp jns pop ficompl lds dec and popa loopne mov adc out (bad) outsb dec stos stos int xor cmp cltd pushw mov icebp jns loope arpl ss inc jbe add add push add jecxz jne sbb cmpsb clc dec fidivr push fs test pop dec dec or pusha push xchg leave xlat mov cmp push mov lret inc mov sbb pusha mov ljmp mov adc stos test fisubl or clc dec xor rcl fsubrl or stos scas mov cmp movsl stos jns pushf into ljmp or xchg jg shl and xchg aaa (bad) ss iret in push scas cmc mov scas data16 push dec clc jne add xchg pushf daa call mov fdivr jno xchg (bad) (bad) out dec mov push mov movsl in jb cmpsb inc cmpsl bound inc push pop test adc call sarb mov int3 rclb out (bad) xor adc jne les jns int mov adc fiaddl pop push (bad) icebp outsl sbb jnp and aas jns add in and pop roll stos push add xchg (bad) push pop push popa or in rcrb (bad) std (bad) leave ret cmp jnp iret popa outsl stos xchg rdmsr adc sbb mov pop dec mov or pop mov sbb sub xchg xor mov addl sbb push out jnp sbb test cmp mov fs fstpt or in adc mov subl sahf cwtl dec add sbb nop mov test icebp xor iret call insl aaa aaa outsl add push (bad) dec test xchg shlb in test (bad) mov ret sbb aaa bound repz xlat pop push mov sub push loop negl xchg stos xor or push repz fmul iret mov clc idivl std mov cmpsl int3 mov inc mov daa rcl jo sbb out movq int repnz adc pop cmpsb cld cmp xor repnz cmp sahf out push ret sub push inc mov mov insb or ljmp add push scas mov imul sahf pop xchg je jecxz inc movsb cmp push mov dec sahf or push imul (bad) lock fs xchg xor iret sti xchg inc mov pop sub push inc adc aad fcom cmp and jg mov adc jle outsl into jg enter leave divl sbb adc jne aad (bad) ss cmpsl loop fnsave cmpsb repz fildll xchg test rorl stc dec fstpl mov fbld pop (bad) cmp pop push sub pop sub pop mov inc movb fsubs push nop in xchg xor in cmp ja jge ret nop (bad) push dec scas cmpb insb jnp xor fnstenv (bad) icebp mov movsl jmp leave imulb xor inc push lock rcll test je dec out aad loop (bad) mov inc testb das add vmwrite mov inc sbb fstpl mov and and jecxz insb stos lcall je ret mov punpckhdq mov stos test adc and pop sar push fimul lods lahf pop mov das popa fdivrs jl es cmpsb sbb xor leave mov mov pop xchg fsts outsb out jl push out mov pop xorl cltd outsl push sub push aaa das cli dec mov mov mov push mov sub add bound or aaa push or or mov push daa inc sbb pusha add push xlat jle xor lock shll jbe xor pusha cmp aaa out ret adc jecxz scas shrb sbb sbb jae adc cld daa movsb push or es sub xor int3 pop pop lahf orb ror push push out sub xor mov (bad) mov push mov ficom test clc repnz test ds fwait mov js rcll test jno leave pop push mov fwait jmp pop mov sahf jecxz cmp add push fcoml rcl push inc add in loope out das (bad) mov jno aaa sub out je popl push loopne sti les mov push into cld sub xchg repnz fistpll push sub lcall pop push rcr mov inc mov pop lods sahf cld cmpsl movsl sub fidivr xchg fadd in in jae icebp cmp int3 loope adc sahf std (bad) js jns jne push pop sbb outsb stc xchg xor cmp call jno push pmuludq les mov je adc stc mov ret and jg andl cld out xor jnp mov add add roll es fsubrl aad pop shlb sub lods pop (bad) jnp jl jae test mov jle mov cmc fnstenv out aam dec pop xor clc fimul ss fsubrl aaa (bad) jnp fisttp cmp mov rolb popa ljmp pop std test out inc in mov jne lods mov xchg inc (bad) push arpl inc push lret loop xchg and mov inc mov mov push sub out (bad) dec jo leave test je,pt js clc mov lods loopne aaa fistpll mov out (bad) push push xchg (bad) xor stos or and insl lcall push push push pop leave mov rcr jae hlt hlt scas dec loopne je add jge inc call jns lods lea mov mov aam jae xchg mov popa pop dec mov push xchg sbb pushf imul and cmpsl or push (bad) and sbb lret test pop xor iret fiadd jp cli ds fs ret adc pushf (bad) lea add loop fadds and popa loop mov pusha repz sbbb or hlt add hlt rorb les js dec mulb (bad) cmc jno xchg popa dec jb adc imul or sbb push or sub aam aam inc mov jmp test pop or data16 popf pop or sahf xor pop je enter jp mov or clc (bad) push pop and ja mov and inc xchg pop sti aas xchg pusha (bad) xor movl lods mov mov into mov mov divl or jae lods dec xchg push fstl cmp test leave cli popf push jecxz mov push push sbb fwait (bad) cli insl inc jo cmc sbb loope (bad) mov insl mov in or dec push scas divl movsl add loopne ss out scas mov je ret add fwait rol repz jp lea push mov lret jle pop fmull xor out fsubrs cmc jg ret movsl cmp pop dec and pop (bad) mov lahf pop sbb cmp add fnsave loope sub sub test ja lret ds push icebp aaa sub mov xchg push jbe pop jnp in sbbb xor push xchg (bad) out add ret fwait push push dec sub xchg mov adc and insl out sbb popa jb xorl lahf int3 or into sub adc add cwtl je andl iret and push dec and cltd pusha aam add ret jns jns sbb dec stos mov mov mov jecxz ljmp mov pusha pop jmp jbe cmpsb lahf aad sub push pop mov mov mov aam and sub push loope cmp inc popl loope push jo mov mov xlat add test inc aaa movsb jmp ja cld nop sbb stc sarl xchg popf or aas test lahf dec scas mov xchg cmpl fdivrl sbb push popa sbb inc cs aas loope insl mov (bad) (bad) sbb fcomp aam out inc aad dec or movsb xor mov xor mov mov or mov cwtl cmp sahf sbb push aam mov mov jg mov xchg mov orl mov sti mov outsl and dec scas lahf addr16 sub cli test pop xchg (bad) xlat repz or movzwl (bad) stos inc jle into lcall pop mov std push imul andl (bad) rolb cmp jecxz xor movsl ss mov enter dec es xor enter adc rcrb adc out jne and rcl shrl mov cmp in and sbb cld add scas cltd adc xchg mov push mov and fnstcw cs adc or pop popf (bad) push (bad) mov dec stos cmpsb out pop pop insl les pusha and insb repz mov or xor jp add imul jle cmp and jne adc dec adc xchg inc bound inc inc adc leave not ja fiaddl mov pop xchg and sbb (bad) mov int3 insb addl fidivr sub cmp jb push jae cmp int mov jns xor sbb and mov xchg neg jnp sub pop arpl daa push mov out adc shrl pop cmp rcr mov mov fnstenv sub cltd xor xchg in scas aam repz out ret or popf orb (bad) jge mov push lahf arpl mov aas pushf jb or inc jg mov mov inc mov mov mov mov cmpsb dec mov sub lods (bad) popf (bad) push jo sbb fistl lds sahf lahf sar cmpsb sarl and mov and jmp (bad) pop mov out mov push jnp cmp fstpt call mov imul imul xor paddq cmpsb mov cwtl sub jne fdivrs repnz jb mov push mov xchg sub shl mov push mov add add sbb or out in push ds negl ret cli popa jo dec stos cmc decb jnp add test lds jge xchg js push and mov jns xor lcall add nop jb cmp lret inc adc mov insb sti test test dec roll scas mov fsubrl rclb mov mov in pop call xchg fcmovnb inc inc xor push shlb pop mov rcll xchg add shrb shr lcall clc clc mov rcrl push addl negl xchg jae out add and push xchg lahf jle xchg adc sbb or dec aas or pop (bad) jb rcll sti outsb movsl fmull int stos js rolb addl push add std add xlat scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov incb dec or add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec iret dec inc inc push js in (bad) jbe or ja mov mov (bad) cmp fdivs pop in test (bad) scas fwait or (bad) xchg arpl mov lock ja movsb and jp iret mov adc cmp mov pop dec test or xchg push pop dec leave mov push jp push sub clc scas or es mov pop les mov push jg call or jo push fwait out cli cmp mov and add pushf jp xlat sub and sbb mov pushf pop leave jo notb and aad repz push add cli sbb fdivl sub mov push pop pop push mov (bad) cmp xchg and pop push and orl pop int3 (bad) pop test into notl add mov mov mov ret mov xchg shrl sbb pop out leave push jle xor out mulb xchg fimul dec and adc mov mov leave clc xlat pop adc lret pop es repz xchg and xor out imul mov add fwait adc repz leave mov jb test insl push mov jbe add andb out (bad) dec imul sbb out aaa icebp cli pop xchg mov and mov push xchg pop popa mov push stos cmp (bad) mulb xchg in popa pop fmuls (bad) push and test jbe mov rcr insl test or insl imul mov cld out imul and fistp sub pop leave inc adc mov mov pop sub dec adc dec jp les (bad) ss pop or (bad) xor cmp data16 fcoml push in popa ja mov mov in mov inc mov bound sub jae cli mov ficoml sub add cwtl mov xchg inc lcall xor push dec xchg mov xchg mov or ja repnz xor mov or push repnz sbb orl push loope ja pop xor imul dec pop adc pop cmpsl dec xlat aad fbstp into nop mov lahf stos jae push dec jmp add test cmp aam (bad) gs cmp jb (bad) fmull lods jl mov adc out mov inc fimul in test pop xor cmpsb inc mov adc out mov xchg sahf dec lock push in aas sbb cmp enter xor fsubrl test (bad) outsb and aaa xor add xchg fs inc notl jmp rclb loop popa sub and mov pop test sahf add and in xor xchg jg cmpsb add xchg or mull je stos add add idivl cmp aaa loop mov cmpsl cmp mov (bad) cmp pusha int shl inc sub cs fwait adc les inc data16 loop push cwtl push ja push ficomp and test addr16 imul fsubl jp ficom and adc push sbb push mov cmp xor clc mov inc fbld inc sub ds outsb cli xchg jle mov xchg fucomp hlt shlb jae sar imul push add ret push cmc pop shrb sub cmp sti adc inc sub fstpt imul pop mov and popf call cmp ds in xchg mov stos je cmpsb add push aaa (bad) in jne xor push lcall add mov aad jmp cmp sub test add mov imul dec sub js imul xor fstsw inc or jbe adc xorl mov sub (bad) out adc xchg iret xor pop mov shl pop push out loopne gs div dec adc outsb les pop and lods jmp ret pop stos std jb std int3 or int3 sarl xor nop add xor mov mov jno ret cmp or lcall lahf sahf push jns cmp ljmp arpl scas xchg sbb cmpsb mov mov rcll fsubr and xor dec mov xor dec mov call std cmp or dec or call repz lcall movsb stos adc xchg dec pop fwait rolb int push sbb lahf dec lock mov lock xchg xlat mov jge lret lock jp add test test (bad) out scas push (bad) or gs cmp pop arpl rcrb ljmp inc fs ret ja xor test lahf push mov xchg mov enter fisubl push clc jbe roll mov inc stos mov fdivs shr sub lcall xchg repz lcall jl inc icebp imul out adc iret mov xor hlt inc cwtl loop pushf into push outsl sub stc (bad) pop testb outsl ss in (bad) hlt inc sahf xorl push sub cmpsl inc mov pop adc mov fisubl scas mov sub or punpcklbw pop (bad) int3 out (bad) sub pop push mov lods push dec inc mov and loopne mov pusha loope movsl push sbb push das or push add bound pop gs adcl (bad) scas scas push (bad) (bad) sub lahf shrb fcompl dec stos enter xchg icebp cmc pop and xchg add sbb cmp sbb mov (bad) mov jp push outsl mov out cmc sub ja icebp add mov imul xor mov sbb pop mov aaa insb push xlat pop inc aad sti mov les (bad) mov rcll lods into adc and fldl out push insb dec dec jp clc lea jns,pn ret sub subb mov aam xor test (bad) jge imul lcall int3 (bad) scas stc jo ljmp jnp add xchg movsb inc lret in je mov test xor and daa imul push call jl add call hlt mov iret movsl mov xchg (bad) mov dec jno es ja cwtl (bad) mov cmp add lahf mov movsl repz loopne (bad) repnz mov mov mov lret enter scas xlat je out ss mov lcall addr16 in rol mov sub stc mov inc xchg dec push add pop test mull into dec loop loope or aam fsubrp ficomp das lea push jo popf xlat ret jge (bad) loopne das repz pop inc xchg cli fwait hlt push xchg pop push mov ret mov imul aam clc fisubr pop dec ja out pop test jo xor lret ljmp push jb mov mov jp ds fistp call inc or outsl mov xor cli push xchg js push push pop fwait ret mov ss imul add test mov jmp dec add in das test ss mov mov xor into test push out adc mov enter stos ja call pop or sbb dec outsb push cmp (bad) repz pop lahf repz jnp scas xchg sarb lea inc (bad) fsts sti ja mov (bad) lock add pop test cmp cmpb sub xchg jecxz xlat sti insb hlt add pop fsubs add dec and lds push bound mov dec into scas ds lret mov lret stc pushf mov push jns out pushf scas fimul sbb xor fwait inc push adc push in and shr test push xchg lods fidiv lds inc add dec lods and ds fwait adcl push int mov jg adc cmp aaa inc in iret cmp sbb (bad) dec sbb cmpsb cs mov add fs es adc insl enter icebp mov cwtl push sahf sub push leave test imul inc inc test or fdivl popa mov pop xor sbb pop pop mov inc or add adc enter mov adc add addl mov ret jno lock fistpl call pop push fmuls mov test push (bad) out in push lret pop push repz dec in mov mov or repnz fildll adc ja jbe sbb adc add fistpl and dec xchg gs loop or andl pop mov jns iret ljmp pushf lods shrb ljmp mov lock fisub push stos adc arpl enter mov push daa inc jo lds repnz cld mov xchg dec jns push cltd xor xor mov mov cmpsl movsb sbb fist sub adc push mov push imul lock pop test test xor loope negb aam lahf scas and add ret cmp out pop je (bad) xchg gs (bad) lret rolb mov push in pusha adc cmpsl (bad) movsb xchg pop out sahf pop out in sub sub scas add push fst iret jno cmpsl and lret inc and mov xor rorb push and xchg stos mov fwait rcrl (bad) push sarl gs stos icebp or mov enter lahf or sub jle or jae push and outsb xchg popf jle mov jmp fwait pop xor scas ja inc loop add mov push clc cmp ret pop inc xchg cwtl pop push pop mov test (bad) into into and int3 test repz add pop xchg push dec out pop and push add (bad) ror or or xchg and scas mov add jo push or js inc js xor bound out subl pop fcoml xor jge ret inc (bad) leave addl lock pop in xchg pusha mov xor outsb in rorl test outsb xor pop mov sahf (bad) mov push inc sti lret sbb imul xor mov imull mov jge sahf sbbb ja pop divl pop std pop testb mov (bad) jg mov cmp pop test push add arpl jmp (bad) sbb ret aam xor and inc dec aad lcall cmp mov adc sub xchg pop add das hlt mov (bad) in add or add cmpsl and call outsb mov call inc mov push mov adc mov js hlt inc xchg push push cvtpi2ps enter es add or pop adcb cmc mov pop test lods xchg pop testb arpl push lods sbb lret loope (bad) add xchg loop jge outsl sbb ret into minps sub mov cli dec fucomp or pop cmovb push stc pop xor (bad) loope and or jb mov mov push dec (bad) sub push mov fnop andl pop pop test cli xor dec or and ss sbb push dec (bad) push outsl jae cld cmc jmp or or lahf fwait cmp addb lock movb clc flds addr16 scas mov popf xchg stc push or xchg (bad) fs in bound mov mov mov rorl iret and xor adc xchg test mov pop lret sub push jg cmpsb push cmp sbb rcrl data16 or push xlat mov call dec cmp inc push test lcall iret fistp cmp jecxz std (bad) lahf daa pushf out insb mov push enter pop jl fs pxor lods cli pop pop jo pop lret fdivp clc add in aaa xor imul jge or cltd adc jns and loopne mov pop icebp ds mov jnp mov ja popa popf shl dec or inc lods leave mov add cltd stos jns and les fucomi cmp divb andl pop in xchg xchg in lods fimull outsl and cmp mov (bad) cli sbb inc dec or xchg pop cmp aas mov adc fs ret idivl sbb push iret sub inc bound push mov bound and push int3 mov add xorb xor (bad) es add mov cmp iret int lods es fisubl test out and gs add push fbld (bad) fildll das sahf inc sbb jb push adc lcall and jge aam (bad) mov dec (bad) lock inc mov mov xlat xor sub (bad) cwtl dec ljmp (bad) repz aam stc lcall pop fstpt call sbb movsb repz xchg sbb mov movsl inc mov divb inc dec pop or int3 jecxz xchg pop (bad) lret mov cmc sub jnp inc push dec cmpsb test push inc mov cmpsl dec pop aas cs mov inc xchg add add int3 ss mov clc lahf mov dec pop or pop insl push frstor mov scas pop sub rolb ret xor add popa jmp mov adc mov xlat jecxz sbbl ja lods out and xchg gs add mov or xor dec cmpps xchg outsl cwtl adc (bad) fwait dec movsl aam push stos fwait mov cmp out sarl jne (bad) xor jns mov add aad pop leave insl arpl sti cmp es fstpl test pushf sub sahf lcall xchg or sbb lret in push inc (bad) xor sbb subl into mov les out adc jo ret test sub stos add cmpsb cli lret scas addr16 cld dec pop mov fwait sbb mov dec gs mov les cmp and mov xorb out push pop jl test dec cmp push fcoms fimul (bad) or cmc push lock aaa (bad) sub mov inc lods call shrl jecxz jecxz add inc xor xor mov in mov xchg xor pop push int3 sub xchg mov dec clc or jnp pop jmp xchg lea mov mov clc mov dec (bad) push pop add enter jl jp push mov xchg push popf adc insb sub in sub rolb adc xor (bad) jmp push adc ror mov mov sbb cltd loop sarl sub in (bad) icebp cli and inc push imul insl pop repz (bad) imul cwtl xor aad jbe test imul cmp inc inc mov mov iret sbb aaa mov jne sbb add cld mov mov stos sti pop mov fwait push dec sbb int3 test and inc mov mov mov pop add ss adc mov and xor outsb pop push inc mov sbb lcall pop mov inc sbb sbb das jp push mov cmpsb add repz mov pop jle rcrb dec pop sti xor repz fldt cmp lret aas inc icebp inc mov mov ss cltd imul out sbb hlt jbe and adc push pop mov jbe arpl xor push cmpsb outsb mov jg enter out in sbb xchg lahf or insl jmp test cs (bad) mov mov lods mov mov inc push xchg shlb gs cmp and or pop lahf or nop jb mov nop or fisub cltd lea pop mov and shrb jo dec jecxz push ss clc das enter daa fcompl adc daa enter sub mov cld lret mov loopne jge add adc jmp je test in outsl sub cmp adc inc pushf xchg scas aam and and das add imul pop aas add nop or (bad) and sbb and leave lock pop dec (bad) outsb pushf ret addr16 xor mov imulb push and je cs and daa jbe add push cld or les mov xor cld push adc loope les pusha xchg sbb cmp fimul cwtl scas leave es sti add fildl imul jae rcrl push jg xchg push nop sub jbe jmp cmp lcall sbbb pop fcompl sti pop lcall and and pop mov fdivs inc inc (bad) imull icebp pop push push hlt stos mov stc stc mov mov lds add push aam add push sti pop nop sete adc lcall xor pop sbb subl adc inc inc fs push push and jl sub xchg insl jle cmpsl push add push int3 mov int3 fs sarb int3 stc sub and lret push js imul xor cmp sahf jle sti xor bound xor inc cs pop shlb push rcll nop jno ret sahf sahf mov inc xor aaa jecxz or cmp cmp bound dec cmp jl adc in adc push nop arpl test sbb rcl and test mov inc shrl sahf jle pop cmp mov inc outsb ja,pn sub fnstcw jecxz pop add mov dec movsww xor inc adc negb push mov dec gs inc in cwtl and adc addr16 sub xor lods dec movups hlt pop in mov enter sbb pop pop lods or mov loope jne pop insb (bad) insb jae sbb and js subl pop out fbstp pusha mov xchg adc lcall mov je std test adc mov cmp cmc aaa xor adc inc dec ficoml sbb mov mov dec dec push inc jnp test or jo xchg xorl and sub mov xor arpl jg pop mov fdivs xor add xchg pop (bad) jbe cmp cli push xorl push repz loop adc xor xor or aad ret or xchg jae jns nop mov jnp lods pop test cltd jae inc jnp or or clc lahf sti fidivl mov xor shll jp setge xchg inc pop push (bad) xchg (bad) in fidivrl cld add ja cmp jle jne mov push es mov inc fmull cmpsb je adc cmpl pop push and sbb sarl push pop out sbb inc sbb daa cmp ljmp jmp lret stc push adc (bad) xor les cmpsl push ror das stos mov out dec loop push dec xrelease mov xchg jbe pop pop decb jecxz sub rclb sbb clc iret push adcl cmc xor hlt out mov ljmp fldcw inc or mov sbb sbb lds fsubl repnz aas inc sub (bad) enter iret test lock add sbb decb mov cmpsl repnz loop or add ficomp sbb loope test cmp sub gs mov mov fsts inc inc push xchg test addr16 lds pop negl mov popf test jnp and jbe popa icebp jo dec call movsl mov jns les xchg mov insl or xchg jns popa (bad) lahf (bad) repz jmp cmc in lods jb repnz sub lahf dec cmp imul cli jo mov sahf cmp sbb popf dec pop xchg data16 out add xor xor das jmp test and pop scas rcl ficompl sub ret clc rcrb out ret test lock xchg or pop movsl out in mov xchg inc push cmp mov aam pop ret mov imul mov mov inc and loopne fcmovnbe dec icebp notl movsl call pop mov pop rcrb inc daa rol dec sub ret inc insb mov das ret adc push repnz adcl fstpt xchg push (bad) jmp hlt sbb (bad) (bad) mov inc movl push rcrl jge sub cmp fnstenv outsl inc lods adc adc repz add (bad) jno mov ss jg loopne adc jno dec lret fmulp cmp bnd repz sub (bad) jg (bad) (bad) iret jl mov inc xor movntq sub mov dec popa mov xchg in movsl pop pop dec cmp faddl jno out cld xor add mov push js enter dec dec xchg (bad) pop push ficom (bad) ja cmpsb mov and xchg ja fidivr out mov int3 mov stc jne xchg pop xchg (bad) adc push jne pop ficomp pop push sub insb jbe adc lcall test cltd bnd sbb cld cmp jne scas jb leave pop clc sbb sbb sub lcall addr16 cltd sbb mov fs in mov fs sti ror mov cwtl mov (bad) dec aad cmc adcl enter daa out dec pop mov pop adc sbbl dec jle cmpsb cwtl mov sbb fbld outsb adc pop cmpsb pop sbb cmp pop inc push iret push lea aad divb cmpsb insl gs xchg mov hlt dec je jbe sbb shl xchg cmp fcomps sbb clc push sub repnz ds push outsb lret cltd jle shrl dec mov mull inc lock adc jo adc mov push (bad) sub sub fiaddl pusha outsl cmp pop cmp and xlat imul outsl push cmp fdivr test test jp (bad) imulb pop dec inc push xchg mov enter xchg lods mov sub jle test jg (bad) push outsl sar cmp push (bad) hlt cld fsub mov xchg (bad) pop mov adc aam insl push and lret (bad) dec hlt inc inc push mov push stc push stc lea rol (bad) dec or (bad) dec xor xor xchg repz popf adc mov rorl mov sub gs mov fwait pop xchg sub dec fwait or lock fs std aam xor add rorb out in adc jmp lods sub cmp mov adc or test outsb xchg add and xor sub pop fist pop sub aas push insb outsl lret and dec (bad) aaa cld dec jb lret sub pop out sbb inc sbb aaa or mov popf rcr mov push or pushf stos jne push pop push fst test lods push in jbe mov cmpsb sti (bad) adc clc push daa cmp mov ds arpl push test inc and xchg dec cmp and mov out sarb xor inc sahf push out vaddsubpd adc ss mov negl dec xor inc mov and pop cmp pop sub sbb adc mov loop fnstcw dec jl cmp fildl jnp (bad) sbb or jnp out push xor cmp leave icebp (bad) jbe xchg (bad) lock mov jb add push mov mov cli push mov dec lret push outsl subl sub xchg bound js pop mov xchg add push mov inc leave sti pop mov and mov enter or pop add popa scas sbb pop lods enter popf push push stc cmp fsubl cmc cmc push xor pop xlat xorl mov lret cmp ss inc xor mov loop jb ja push and in sbb jge jnp addr16 loopne ja jl mov cld pop scas mov aam call xchg mov sbb and fwait imul mov outsb mov lock and nop add fsts (bad) mov sbb loop xor out cltd pop js cmp and das mov sbb mov inc pushf fcoml sub shrb mov push mov outsb sub (bad) push fwait and clc adc ss dec jle dec (bad) mov arpl adc fisttpl add and adc mov mov aaa iret xor cmp jge xor push mov pushf lods dec movsl lcall xor push cmp in xchg (bad) das cmp push pop jg inc pop sarb sub xor dec adc mov push xchg push xor das or call in cmc insb adc mov cmpb movsl ret inc and imul mov das xchg aad repz push and divl sbb dec in push pop and inc adc (bad) mov (bad) mov jo or leave push mov dec int3 push sbb mov xorb (bad) mov jae repnz ja scas mov or mov mov jecxz mov out dec and sub jb mov das mov jle scas adc into cmc call adc adc (bad) xchg and inc pop inc (bad) lea cmp fdivs insl mov mov add xchg cbtw cwtl lods push in insb inc sub rcrb fwait xor inc or push push cmp xor ds inc or in or and xchg loopne and push xchg mov lods loope xchg push xchg cltd push jno pop out xor inc push in xor xor and ret movsb mov pop mov lods lret cwtl mov sar js inc insl stc push (bad) rcr lods in cmpsb ret jp jecxz mov xchg xchg pop xchg or mov lret repnz cmp rorl in mov push push push mov push fs cwtl stos outsl sub pusha jo pushf inc push rorb arpl or int3 leave cmp xor jge xchg sbb jns (bad) pusha push out imul aaa outsb pushf adc jp pop mov push pop sar rol cwtl mov mov cwtl in dec clc dec mov push xor xlat ja add jb pop mov ljmp call (bad) mov and mov sbb in and out mov mov add rcrl sbb jmp outsl leave fstps in or cwtl jmp jmp fdivp popa push mov mov movsb popa jle and jmp mov push int dec repnz f2xm1 mov mov (bad) lock push fucomip scas movsb adc (bad) repz push and out out and mov mov scas mov leave xchg icebp push mov out imul push inc add fs leave (bad) mov push out sub mov call or fistp mov sub mov jne (bad) add lret in popf jl push mov fdivp into cmpsb xor xchg sbb mov mov out outsb adc sbb lock pop in notb inc inc (bad) mov and inc out aam push push scas rcl mov mov jo xor sbbl sbb push shl sub sub mov mov jns push xchg aas bnd test test jb aad and stc (bad) sub push push (bad) sub shlb in out xchg xchg test ror sub sbb cmpsb cltd xchg jb mov fs int3 js lret fmuls insb pop int push mov out xor mov sar push xor dec adc notl cmp pusha out jl push inc movb mov pop sbb hlt into add sub dec pop adc out es ss dec insl mov or cmpsb movsb inc sbb xor pop (bad) jo and iret rcr sbb int3 fwait in or rcll mov lds cli inc mov and push (bad) loop mov ret repnz jle fisttpl mov push cmpsb (bad) gs das mov sti pop xchg sbb (bad) stc ret xor rclb leave cmp jp jbe dec sub mov rol xchg aaa xchg dec xchg andl mov (bad) xor sahf push popf test xor xchg xchg into or (bad) mov pusha lea dec xor ret pop and sahf xor cmp out out lea cli and pop sub mull and xchg insb call xchg pushl xchg xchg or inc and push call mov rcrl and mov sub and mov js (bad) dec and stos lods fisubrl cmp imul cltd or adc out test add rcl les mov pop test incb insl dec andl je pop iret xchg mov jns xor sub imulb mov jmp outsl push mov pop aam pop inc sub into inc mov add scas xchg push dec pop push sbb mov sub mov xchg xchg stos dec xor test adc mov pop fldenv lea mov stos push push add jmp adc cmp hlt pop xchg pusha rol insl or mov add xlat add out jnp aam mov cmp sbb (bad) push adc sahf mov enter jne dec (bad) ficom mov (bad) sbb testb addl fldt sbb cmpsl fisttpll add nop xchg mov or es dec int3 dec xor loop mov dec mov cmc sub faddl ljmp jo mov add test popf sbb pop adc pusha test jl sbb dec daa roll lcall outsb lock pushf push lods jp in insl pop das stos or mov out dec sbb shlb lret daa push repz es cltd pop inc sub scas jge cwtl loop scas in xor inc cmpsl jecxz jbe inc (bad) push adc xchg cli (bad) mul sarl aad sbbb push push or adc arpl jl dec inc lcall iret mov xor and pop xchg inc es leave bswap mov mov (bad) fwait dec or push scas mov test fucomp adc aaa push pop dec nopl jmp mov push sub mov or shl fldenv jecxz pusha lret cmpsb push mov jge int idivb xchg lea aad repz xchg insl sbb and xchg movb jg ret pcmpgtw or adc push jns mov arpl leave loope or ss cmc mov iret rclb out cmpsb or push in xor add clc dec (bad) mov (bad) enter inc cmp test mov or je mov jle mov push rolb mov movsl int3 dec clc (bad) mov sbb dec mov cmp lods lods scas aad xchg sarb rclb test mov jns cwtl cmpsl cmp adc fcmovu xchg adc mov lret je in es xchg jne stos repz lds pop jnp aaa out aad mov mov mov into roll dec or mov and int fwait jbe and lods lods fsubrl mov les int pop xchg and cmp push jmp mov add dec mov fidivl xchg (bad) or scas sbb rorb dec push hlt outsb mov inc iret cwtl adc dec fbld xor outsl cmp adcl pushf ret ds mov roll cld scas pop pop jge mov (bad) fstps lods std xor cmpsb pand add push sbb jb or xchg cmp in ret mov daa push sub sbb loop (bad) lods inc jl push cli in addl (bad) sti adc mov sarl rcr lock mov sbb push in and insb adc push (bad) push sbb mov mov sahf mov xchg mov cmpl inc int outsb adc ljmp (bad) sub aad cmp pop mov aam lods mov sbb or insb dec stos inc pop jle jp inc xor int dec sti stc cmpsl push aaa dec adc sub loope out pop popa psubq shrb loope push (bad) jmp fs jg testb int3 sub xor sub pop sub popl int mov pop adc mov cmp dec sarl out scas (bad) lock ds adc int3 push movsb lock out fldl xchg jecxz lock lods adc mov add out dec (bad) jmp adc inc test xor xorl push cli mov cld popf cs aaa cmp jle addl lcall jp mov aad xlat add pushf mov enter cmp leave sub add pusha jecxz sub pop adc cmp adc inc push dec out pop fiaddl icebp inc mov or jae mov scas jecxz pop xor and or test mov (bad) push mov stc ja sub jg xor sub test inc jmp mov insb cmpsl jne test jno popf jnp jl jbe cli push mov aaa mov sub ret dec adc aad sbbl push popa shrl leave addr16 imul cs outsl jecxz fimull stos or aaa ja xchg pop or int dec add in mov hlt mov inc push leave enter mov outsl fstps jb xchg mov xor push cmp or lret roll mov stc xchg (bad) lret push mov lret cld notb popf loope (bad) ficoml mov mov xchg dec (bad) inc xor mov pusha ret mov xchg lods add lret adc fistp mov dec add add loopne mov dec dec jbe (bad) mov pushf movsl adc out sub es arpl fmull mov xchg mov ljmp inc mov sbb mov scas push jb fdivr and in (bad) mov lock xchg repz cmp flds (bad) ss pop repnz rcll out je std jo (bad) xchg push sbb (bad) imul les sbb sbb aaa inc sub repz dec or inc repnz (bad) loop dec aaa xor loope mov leave leave xor mov adc inc btr stos dec hlt mov jno mov mov sbb aas inc outsb cmp pop sub pushf ds xchg bnd nop dec mov xchg add add cmp adc inc mov (bad) rclb mov (bad) mov (bad) adc and mov inc push (bad) movsl sub push push (bad) mov dec cltd push fmuls iret sbb es iret pop inc (bad) hlt mov jno and adc outsl pop push add in sbb sbb dec jno lods shr je pop ret andl lcall jne jmp shr (bad) movsb push mov add cmp or js je xchg mov (bad) or push mov inc push movsb or xor shll pop lret mov mov mov je sbb push dec xchg cli (bad) repz and das fisttpll test adc lea rolb icebp enter fwait cmp inc fisub jmp (bad) xor cltd pop mov or stos rclb push test sahf fs gs test mov mov cmp cld lods jg ret sub mov and pusha jmp adc scas or add lods xor push ds into lcall cld in std stc cmp and addb mov inc (bad) inc (bad) repnz and test loope lcall or lahf dec sti js xor dec push sub xchg idivl jne fisubrl inc pop push and sbb stos mov jo pop sub and lods jmp xor cltd sub sub fwait xchg daa fdivs fistl (bad) lock inc (bad) pop sub mov lds push jnp in xor cmpsb sub fsubs mov push mov xchg loopne push and dec sbb adc fisub (bad) int3 cmpsb dec jns jno mov jmp outsb mov push dec loope jg notb sbb ror daa hlt fldcw lods push js cmp into or jg sub loopne aam jp inc pop imul mov aaa orl (bad) call dec ja mov sbb nop shr push push jo push fist mov daa sub sub divb je inc push aaa or xchg xorb and xor xor imul sub aam push mov lret pop mov adcl mov mov mov lds add (bad) (bad) das xchg rorb popa in sahf mov movsb iret out add push fistp lret ret add jne pop mov insb stos popa jge pop sahf dec jecxz das roll xchg xor subb push scas sub aad push mov jns inc cmp repz stos cmpsb arpl std fiadd (bad) pop and pop dec sti or lahf je imul les xchg js push mov je in push sbb imul cld je and push jbe mov mov mov popa jbe addr16 add stos jno dec jp jg xchg jle idivb xchg lods sub loopne push push pop lahf jb jae mov cltd xchg and out imul out jg sub xchg (bad) mov add ljmp in pop push adc and divb out ds pop push sub or loopne mov mov mov lcall test enter cs dec mov or adc cld daa xchg jmp push fldcw cli cmp retw mov and mov mov pop pop jo aaa push push pop fprem fstps insb into xchg imull mov dec inc adc ret xchg xor (bad) (bad) idiv movsb pop addr16 xchg adc in lds mov mov and sub push jne jno cli stos pop lcall jmp adc inc cmc addr16 repz pop mov cmp js (bad) sub dec fidivr jmp pop daa fwait jmp dec adc push xor int fdivp jae nop or dec dec mov sbb xor inc cli test mov hlt aad add jae or adc rcr ss pop repnz mov aam xchg ffreep push sahf push push (bad) packuswb or or xchg es sub jmp xchg jno,pt sahf xor imul mov or pop fs gs push fisttpll mov fnstenv (bad) dec les add adc inc movsb mov jp rcrb imul in cmp insl pop loop shll sbb inc imul dec mov push pop rcrl inc (bad) cmp jb and je xor cli adc cmpsb adc stos and rcll cs sbb (bad) xlat lods insl xorl sbb pop fdiv dec inc jg mov and insl dec dec out sbb ljmp sahf mov mov or fcomps push adc les lret (bad) movsl das and decb mov iret xchg (bad) in cld loop out jl test insb or pop sub sub dec sub push or push pop mov cmp cmp js xor fwait int3 sub cmp xchg addb (bad) adc fisttp popf test cmpsl std dec xchg js daa xor push test fwait insl mov inc int3 or jmp sahf mov pop mov mov adc mov add jle in mov adc jl lods shrb mov sub aaa int3 aas dec scas iret inc pop popf fldenv out add rolb and std lcall mov mov xlat je aas add stc roll jne fs loope or frstor das pop lods sarb mov in clc stos lret lea jae insl or into cltd inc sub dec pop push aad mov add cmc loopne push mov and mov jb fst sarl pop negb lock aaa sbb mov xor rcrb shl mov cmp outsl sti add pop aad adc push cmpsl xor aaa out rcrb mov iret adc cmp ret out sar xchg mov and divl outsb int movsl push mov pop stos xchg push leave inc mov ljmp (bad) mov dec cwtl xor push mov jns jb xor inc cwtl test les push cli jo cmp pop pop sub cwtl fcom and (bad) sbb fiadd out pop inc xor dec and loop or call sub mov sti sbb sahf mov xchg popf orl mov rcr lretw jb arpl sbb push mov insl mov xor sahf xchg mov cli mov div aas fs jbe xchg or popf lret mov fs (bad) and (bad) (bad) gs test mov ss int mov (bad) repnz jo xor pushf add mov jno arpl enter test add aad test inc out push fisub test xchg sbb push cmp xor shrb gs pop xor and bound jnp xor iret aas jno and arpl mov jno jl ja scas jl pop popa rorl pop lahf js scas (bad) mov jnp push jp test pop jmp test in pushf inc cmpsl push ficompl ss pushf sub hlt xor loopne push mov mov nop in es mov sub loope in mov stos insb jge (bad) imul and out ja jns into sub add call andl add (bad) scas and mov mov jnp ljmp pop push cmp mov imul sahf mov aam shll pop sub insl add sub sub mov add mov inc outsb jne jae dec aad repnz sub inc ret rclb jg jne push xchg xor loopne popa ja,pn leave ret mov push mov gs (bad) add js fsubrl out leave mov sbb scas rcrb cmovp sub int mov adc inc inc jmp jg add insl je pop in sbb outsb (bad) lea es lahf movsl movsb jge sbb dec xor jne leave outsb jl add shlb shrb dec jb xchg int xor lock xor lcall imul sbb add push cltd push xchg nop and cmpsl jp jle test mov sbb xor and cmpsl les (bad) mov leave or leave mov and adc (bad) adc pop adc xchg xchg xchg adc xor cs sbb cmp jns aam (bad) mov sub test daa sub test out sub xchg je xchg ljmp lods call movsl movsl popa xor movsb pop (bad) push lret push jb loopne in xchg add xchg dec nop lahf push nop mov and pushf in mov dec pop or sub jb pavgw push loope add imul insl dec pop adc es (bad) add mov and pop or and dec and jns mov add inc test fimull sub (bad) cmp jmp arpl dec mov push inc pop dec loop xchg mov push jbe mov dec pushf mov and ljmp fbld mov dec je ret test or push pop mov test stos pop cmp sub in ds jmp push inc push xchg lock xchg or das cmpsb mov and xchg mov xor or leave sub inc add lcall dec cltd imul sub mov fwait notb jle cli mov push xor dec xor sbb mov fs ss mov lods xchg or sbb aaa fstl ret clc dec js jns jl sbb xchg dec aaa cmp aad sbb push cmp dec mov aas inc orl scas xorb (bad) xor dec aas dec ds popf sarb add xchg sbb mov idivl mov xor adc mov xor out std add sbb xchg pusha test add xchg add aam aaa mov push xor xchg (bad) jne jbe scas ljmp aam sbb cwtl in adc fcom or aaa stos push movsl jae push int xchg push and loop jle ret aam sub loope aaa jl fwait adc pop loopne pop into leave adc in or add mov adc adc sbb or mov mov mov sub cmp fisttpl inc fnstsw or or lods sbb and dec mov ds movsl and dec arpl pop hlt mov pusha ret mov cmpsl add lcall xchg push dec dec dec (bad) outsb lock pusha jno cmpsl pushf stc mov inc pop sete pop sbb jo gs push jl leave pop pop push nop xchg data16 mov lret pop leave push test cld jnp mov fistpl xchg ja dec fsts adc mov stos jmp lahf scas mov jecxz mov adc iret popa sbb inc dec sbb incb dec hlt jle xchg andl pop adc jne mov cld idivb fild and sub mov push fidivr mov xor (bad) dec outsb add mov jecxz xchg jbe or cld hlt sbb out jle jmp add add jle sahf pop xchg pop jecxz cmp sbb imul add mov inc push popa cwtl hlt xchg jno xchg iret es add shrb (bad) je push pop push aaa push push xor scas jmp jns or push and xorl std push into in lahf add lretw repnz xchg lret fdivrl fs sbbb lock rcr fldenv dec pop sbb mov cwtl sub mov shlb sbb lock rclb arpl enter call jmp pop jg xchg cltd and int3 xchg movsb or push ret jl aad adc mov pop push ret and stos sub std or mov in xchg add mov jns insb sub fwait inc arpl xchg repz and xor inc pop dec sbb hlt jge into (bad) in cmp or call push (bad) adc push mov sahf sbb mov insb pop jae inc mov testb sahf add popa jg movsb jne xor fstpt mov xchg jno fisubl push loopne and jns std add lea push cs insl dec psubd mov cmpsl stos repnz sahf lods push cmp sub fsubs lret sti iret mov push ret xchg cs dec jno cltd int3 stos lcall hlt push lods mov jle mov test and repz imul fiaddl push cld push sbb mov push sarl xor fsubp sub cli scas xor push mov mull int pushf and jl inc jae movsl ficomp (bad) xchg ret and cmp mov jnp mov sub fiadd or ljmp daa popa mov repnz lods cmp scas loopne std cs notl dec movsl push push jae stos or es loop cwtl jle lods add notl ret lods fimul mov or push mov icebp jns jne sar es in mov rorl stos pop xlat leave out add sbb inc pop add push mov or push fdiv mov fcompl pop sysenter xchg leave les fsub cmp faddl or mov stc int les test or push jge stos sti xchg adc test fisubl clc push dec adc mov mov xor scas jae sti inc mov xchg out pop jmp xchg mov (bad) rep jo xchg pop es in inc mov imul pusha push ficomp mov jge int add xchg add test std sahf and cmpsl ret mov xchg addr16 aas outsl sbb out dec int pop cmp xorl mov scas (bad) cmp arpl fisttpl aam stos clc cmp and rcrl lods pop pop inc js les mov sub add vpunpckhdq mov lock cs adc xchg dec jbe sub pop out aaa repnz add jmp jle mov icebp popf mov add std ja ss rcrl push arpl jmp adc push int3 icebp pop cmp push pop jne mov gs sub popa add testb jns sbb mov mov or lahf adc pop out test sub ja stos jns sbb xor and pop dec data16 unpckhps insb gs pop (bad) imul push sub and dec jns arpl insl push mov arpl scas xchg rcrb rcrl test add ss inc xor mov mov push xchg inc or cmpsb mov fmulp es out insb inc jg sub call mov imul mov xchg mov aad adc add xchg fidivl xlat push add xchg sub mov rol pop and cmc lock mov lret in and sub insl push mov mov fldcw lret xor sahf and leave je sub mov cmp movsl jg vandnpd push mov cli sahf or inc test pop (bad) xor and fnstenv popa inc adc push and orl dec enter inc fidivl jns out fcomps ss loop pop out xor in scas (bad) mov lret mov add repz jnp shl ja dec mov sub leave loope aaa leave sub mov mov jbe mov jnp mov push cli inc adc add loope lods aam je jl mov (bad) cli fwait sbb xchg adc mov sbb push fcompl pop mov in imul push pop inc adc dec mov mov xchg je test (bad) mov pop call mov and xchg adc mov push add lock mov ds pop mov or loopne sbb fcmovne sbb adc mov jbe jp arpl arpl jns mov add out or xchg roll outsb inc mov loopne cltd push aaa aad in push dec (bad) add addr16 sbb sbb imull out xchg jbe push rorl pop cwtl adc push add fisttp mov and lcall das loop adc xchg add insb jns mov jb pop int inc or in pop xor adc pop mov push into jae ljmp outsb loopne ror adc mov xor sbb out pop cltd and aaa testl jb ljmp cmovge mov add adc pop insb movsl xor (bad) jnp fdivrp mov and popf push push inc imul mov dec inc mov cli inc push or js ret iret inc scas sbb mov adc shl les sbb test add das push jge in rcl mov in adc xchg dec les mulb mov nop das out xchg or (bad) dec jbe (bad) fist mov pop mov sub push dec xor mov scas pushf mov sub adc xchg xor inc dec fidivl pop or xchg jp xchg pop mov loope push and jge push out push sti lahf ret scas cli fucomi rcrl dec pusha xor sbb sbb lret add jecxz sbb decl inc stos sub mov incl adc fs jnp scas (bad) cmc and xor (bad) jg xor hlt xor add fbld jmp movsl jne movsl adc push mov pop out andl add popf neg jmp int sbb adc (bad) jbe lods cli test cmp enter push push mov cmp cwtl stc outsb mov out ret mov xor xor ljmp add cli and sub jl mov scas inc pop pop or pushf shl insb arpl sub loopne ljmp adc jl inc (bad) xor scas push dec pop iret jmp aas popw or pop scas jo test (bad) jo jecxz jne cmpsb bound push dec les xlat xor xor lods xchg mov adcl ret jo mov adc fistl push rcll sub mov and iret xor lret jmp xchg fbstp sbb addl imul sub nop stos movsb aas and inc clc push popa xlat (bad) enter adc mov pusha mov or cmpsl jg cmp add dec mov push insl pop lret inc pop into pop push jae cmc aaa test ret data16 mulb mov insl movsl jg pop dec and mov pusha push pushf sbb cmp sbb pop pop ja clc xchg clc mov (bad) rcll xchg aas pop inc push mov cmp nop cmpsl pop les mov pop inc adc ljmp mov aam aad jl mov loop xchg gs stc (bad) cmpsb cmc loop cs inc inc mov push pop mov mov pop pop sbb aaa (bad) dec or sub mov xchg push dec and and fldenv inc scas lcall sub shrb aas (bad) cs xor push (bad) fsubs lret gs in inc cltd or dec cmp jl arpl jmp sub xor aaa xlat jecxz shll sahf sub xor add sub jle mov or push sahf dec (bad) push add incb push mov pop sub mov lock add mov dec lods popl xor push pop mov mov inc sbbl sbb clc js add mov mov dec enter movsl ljmp mov test push xor inc jbe cmp jns jg pop test mov repnz aas enter fdivrl sahf xchg nop lret lock shrl xor in jbe dec xor ret jnp mov push cmp add stc jmp cmp popa push sub pushf cmp push jecxz imul lcall or aaa mov fwait cmp mov sbb xchg xchg loop xor jb add int3 jnp xchg cld fwait cmp mov scas cli shl dec pop and js and sbb popa movsl jae ret ret nop sahf mov inc in dec adc jbe and aas sub repz arpl pop mov adc add std ffreep mov clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz decl sar repz das pop add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec enter push js in fadd bound mov movsl sarl lods fdivs mov fwait adc daa mov fildl out cmpsl call fnstenv flds sbb loopne mov inc jecxz (bad) popf or xchg adc push mov cs adc cmp aas pop add imul repz ret or cmp dec push negl xor hlt pushf jno xor sbb dec imul imul ss inc pop pop cmpsl out push stc sub std fisttpll pop dec mov hlt sbb ds or jge dec test cwtl jg add test shrl imul inc mov xlat xor inc mov dec xor aas hlt jl lret sub or jb int3 push mov dec mov gs lahf popf ret inc nop cmp insb (bad) imul mov (bad) mov into jo xchg repnz add xchg rcll std cmpsl ljmp test inc divl rcrb int3 xlat xchg das xlat sub sbb mov pop retw bsr shll ret and gs jl rcrl cwtl cli jmp dec pop pop repz lret push nopl or adc clts mov cmp push aaa aam daa jnp jle ss test jp pusha mov (bad) loopne sarb jnp lret push xchg add mov fwait lahf loope imul pop pop iret inc daa push add pop insl and jle cmp in arpl xchg lret xchg repnz xchg xchg in lods mov test repnz jbe and xor ja ffreep pop (bad) call pop mov xlat cs (bad) dec pop jl xor mov sub (bad) mov ss mov mov mov aad sub aas pop outsb push nop test add sub pop push or mov stc iret sub mov and cmp hlt test scas iret and mov xchg aam insb jns add mov repz xchg jmp and repz (bad) mov scas outsb test jb or mov out fldl arpl pop test lret xchg lds clc add ret mov or and adc popf mov jmp into insl fisub leave loop in adc mov jge aad (bad) cli fidiv stc insb push mov inc add in aas xlat inc lret add insb sbb call mov call hlt out in xchg mov inc adc jno push cltd out mov addr16 scas in jnp jl lds dec push pop imul push push sbb adc gs cmp mov cmp mov (bad) push mov (bad) or loopne mov cmp add fdivrs jl fabs out jne rclb dec push dec jg push loop xor fidiv xchg les dec push cli push inc fimull in aaa sti in and and xchg xchg (bad) adc je mov and inc scas lcall pop mov pop cmc lahf xor jne sahf test popf xor pop add outsb nop clc movsl es xchg mov or enter jp sti and bound setge lcall or pop and xchg addb clc fisttpl cmp jae popa jno push or jbe test faddl clc pop cmp fistpl movsl insl loopne adc loop enter insl lahf stos or leave xor sbb std xchg repz pop rcrl mov aad or jbe insb in jnp stos enter out outsb (bad) sbb adc fistpll cs add xchg jno xchg dec movsb arpl jmp lds jg (bad) ja ljmp mov cmp inc leave pop test pop mov lock cmc sbb imul testb std push clc adc mov mov into mov andb sub mov inc xchg and push cmpsb xor push xor mov mov cs add inc cmp mov add aam xchg or insl mov outsl jbe outsb jp cmp add loope out mov pop lret cmp lods aad out and push iret ss jns and jge push jb int3 pop inc add jo xor pushf add or inc lods pop loopne stos jmp cs cmp mov into aad lahf mov mov fidivl pop jecxz inc adc movsl mov push insb mov and or imul pop fstpl xchg lahf call mov mov cmp icebp inc lcall push negb adc mov jnp pop pop and pop popa add inc sbb jl movsb mov mov mov push (bad) push lret (bad) lock cmc stos sub or pop lahf adcb sub dec inc push pop dec adc into das enter xchg faddl les push insl mov mov arpl clc neg mov xor mov movsb push gs (bad) pop imul mov clc dec fs out arpl leave jnp push in mov mov push push sbb xchg popf into and dec fdivr fisubl jle or les loopne (bad) jge pop repz pop pop mov aas jnp fs cld jmp fnsave push int3 mov pushf fidivl dec or inc clc push xchg pop pop adcl jo das iret xor jbe add movzbl ljmp out test es lea movsb or (bad) hlt lds scas xor mov hlt xor push sub pop jae or mov or fdivrl add xchg xchg mov sahf and adc hlt xchg xor jmp bound push nop mov jb lds scas imul lahf jo and jno aaa or push xor xor mov negl push loopne pop mov repz mov in int3 arpl jle lcall imul rcll or adc rcrb ror cwtl dec adc je push notb scas incl (bad) dec sti dec pop xchg jg gs and cli xchg in mov (bad) dec add mov arpl or sub arpl inc in imull jne sti adc and push jns push (bad) xor scas out xchg or enter mov roll lods mov jne inc add push stc out jns mul stos mov jns daa mov (bad) (bad) jo pusha xlat inc sub pop stos stc repz sarl popf popf mov push mov mov ficomp es inc and push sbb popf aam sub mov xor push mov pop adc shrb stos ret sub sub rcl repz stos out imul movsl cwtl (bad) mov and jmp movsl mov sbb mov and fcmovb mov and cld clc popa jle ljmp dec or (bad) inc cmp dec (bad) pushf icebp dec rcr jp das or shrl pop inc cmp flds in mov fistpl shlb fsubrl sbb jns or and push inc push xchg lret cmc outsb imul bound jae fwait inc xlat jmp pop inc push movsb add mov test pop fadds es inc orl dec sub adc fiadd add nop aaa mov xchg add xor out aad repnz mov and cli xchg out mov (bad) enter out jle pushl (bad) fbld sbb hlt cmp sarl push call jno add xchg xchg pop xchg or sub outsb or xor add popf jbe dec imulb lahf or in sub sbb es das js sub add xchg fldl mov outsb mov cmp mov add imul stos push xchg jbe fimul addb jnp mov call out inc rcr dec outsl orl hlt ror shrb xlat lock cmc mov sub mov and daa push fist jle (bad) mov (bad) sub mov int es and inc insl dec aas ljmp mov xchg loop mov rorl fimul mov inc push xlat sti jmp jge cli mov jnp addr16 bound loop push gs mov fisttp cltd mov jb pop and addl int3 xchg xor adc mov sbb rolb popa push fadd xchg mov into sbb cltd inc rcrl ss mov inc add nop (bad) fwait xchg insb repnz mov in sub icebp push adc xchg aaa out arpl jb int adc xchg push stos or jae and and rcrl dec cltd pop adc mov popa mov adc push xchg js,pn mov arpl jmp sub (bad) mov clc insl imul jo xchg mov movb stc pop clc cmc out mov notl inc mov xlat and js popf iret sbb fldcw jnp jmp and scas jns out xchg xor es cmp sbb fisub push jecxz inc stc push ret dec adc bound lods push je imul pop push add mov ljmp pop mov xchg dec stc fxrstor pop cs xor push sub int dec nop cmpsb movsb lahf mov push ds inc adc push dec mov add imul dec out dec push xchg mov add adc xchg dec xchg hlt repz adc je bound sub (bad) in push loope daa scas adc push push mov rclb dec ja jae lds fld inc cld and outsl jmp xor and call push lret movsl (bad) out push pop xchg lods test dec into shll adc call sbb out das out mov sbb mov push mov xlat ret jecxz test cwtl gs pop shrl cmp jns mov out int3 xor cmp fistp les popf ljmp mov mov loop into sub lahf pop out lods xchg push mov mov adc jbe outsl sbb push jmp xor hlt loope and jecxz xlat ja inc fldl shr jge mov sbb out add jns icebp dec mov or push xor sub enter xchg jecxz dec insl mov (bad) sbb jle sahf test cmp cmp mov repnz adc test popa (bad) fidivrl cld xor aam adc fwait cmp orl mov outsb loope dec mov ret je xchg sub xchg push xchg scas in and out add aaa xchg sub dec ret arpl stc xor dec adc and jae fs add xchg out sbb outsb aaa xor push sub push fwait mov (bad) mov inc cmpsl add and push aam loop or xchg test data16 and xor push cmc dec dec and rorb pop fistp lret inc aas in stos loopne cmp pop mov int3 inc pop push negb test fs jmp lcall push bound pop mov inc cli mov les and add push or push or dec mov (bad) adc mov cmp inc xchg out push mov into inc xor aaa bound dec and mov pushf sub adc push mov xchg aad test outsb xchg stos cmc loop in sahf popa push ficompl cs push jns enter ja mov stos jo (bad) dec add push push fpatan mov imul fsts jb jo mov fadds iret nop bound mov mov jns lea std dec jae sbb jnp fstpl mov insb and inc jmp lret popf jns dec push inc incl arpl mov out loop mov loopne popf cwtl or testl mov shrb lret mov jecxz push loopne movsl out pop das mov xor inc cltd ljmp xor mov dec test aad cmp jne mov and adc mov cld in push rolb jnp fs xor jle lds int rcll jae dec cmp sbb aam int3 ds scas aaa sub dec stc adcl aad xchg imul ds je jo faddl loopne ja mov mov aaa pusha int3 in cmp int xlat adc jecxz enter jg jecxz xlat in cmp xor pop adc gs test pop or sarb xchg sbb test mov frstor je rol loopne iret js pop add inc inc ficoml (bad) lret cmp outsl ljmp lret in dec dec mov fidivl in push icebp mov out and cmp (bad) into or mov lret mov ret mov mov popa dec jg xchg mov and repnz insb add xor add mov (bad) mov stos mov and adc subl xlat rcrb pop and cwtl fwait dec xor push and (bad) sbbb and mov cmpl or pop xlat es push out or xchg loop push push sti pop push sbb jae xchg jge mov and movsl fsubrs fiaddl mov sbb iret lds mov adc dec jmp out mov cmp push mov in pop cmp (bad) lret push sbb xchg inc xchg lods divb clc mov push add int aas mov sub inc xchg stos xchg push test or push or aaa cmpsb jmp jmp or sar adc cmp clc mov jnp,pt pop dec es loop push ja xchg les xor sbb pop out movsb cmp (bad) mov xor push std lcall int3 enter les (bad) jae xor inc fbld divl jmp int3 inc xchg and adc lods out or insb cli mov mul add and mov pop sarb cmp cmpsb xchg lods mov pushf aad add mov xchg pop sbb add push movb add xchg mov mov iret imul lods repz push xchg lock lds add out inc sub loope lea jb aad xchg push inc aam test mov loop push pop popf cmp pop sbb (bad) stc push mov (bad) mov (bad) clc cmp lock xchg and sbb jns lods imul cmp xchg mov div out mov mov xor cmp ret fsubp inc loop and mov lods aad or movl xchg sbb sbb pop (bad) mov mov add xchg jge aaa xlat stc movlps jp push mov sahf adc or out (bad) (bad) mov push mov in sahf add mov ja pop sub mov fisubr push loop cli inc mov int dec mov jl jle add mov add and sub push mov aas dec xchg es adc mov les pop (bad) sub jns cmp cwtl mov pop sub jo pusha pusha fcoms sub or int cmp out pusha stos xor xor lods dec vaddsubpd xchg shrl subb or out sbb test jge aad adc test mov movsl leave dec flds jle (bad) stc jne push cmp xor or daa add int3 jl fcoms jl push inc hlt inc jl push test push and out in loope inc cmp pop bound les pop cltd xchg xchg sub leave xor lods jo test and insb pusha adc jb daa aad lds fcmovnb fstpt xchg ret lods or sahf sbb xchg sbb push adc lret mov xchg xor fdivr ret mov jp xchg or pushf pop pop lds test std gs arpl popf and lds in aas repnz pop xor (bad) jge inc loop std fadd inc pop adc in mov flds push mov adc sti popa mov and shll mov in pop test ret shl fsubrl sub inc jge mov nop add jl jp in pop xchg outsl and cs ret lret scas push lret jbe loope and lods clc iret (bad) mov int3 push push or or lods fs xor in mov pop int3 dec (bad) dec xor xchg movsb iret into pop aam xchg out push add and fidivr mov jecxz pop into pop push push xor mov mov inc roll sarb je pop movsb pop add adc sarb rclb cmp lcall push xchg movsb mov out mov repnz jbe (bad) mov mov bound cmpl xchg testb cmp daa arpl xchg mov fs xor pop pop aas ja jle outsl lods and xlat xchg mull or icebp mov xlat jmp test dec cmc mov push fimull jns and es or push sbb stc scas cs push and xchg aam in sbb fsubs ror cmp xor (bad) negb mov hlt in add sti xor pop ja jg add push xchg xor adc xchg test fstpl push xor mov pop or and pop fidivrl jne sbb xchg pop adc cbtw lods adc (bad) sub mov mov repnz sbb jle (bad) push jg cmp icebp out out scas dec sub adc aam cmp mov and sbb lret sub inc push and push push imul cmpsl insl sub outsb mov inc dec push jmp aad dec inc test ss hlt insb loop mov (bad) dec (bad) int3 aam ljmp mov lahf insl roll mov std mov js mov sar ja push insl outsb pop rorl leave adc cwtl leave inc test cmp sbb pop test mov mov dec mov push xchg outsl addr16 sti jbe xchg jmp sub cmpsb jo lret aad xchg int3 outsb cs fsubl pop inc aad adcl fistpll pop pop add (bad) and enter mov fildl sbb cs repnz es in pop jnp jle fidiv pop jge dec push and dec jmp sbb push and push push xor enter jp mov jl,pt lods fistpl mov cmp (bad) xchg dec dec ds push sbb push insl stc rcrb dec inc (bad) loop lcall sahf lahf movsb mov pop inc add sub cmp pop mov out dec jg (bad) jne mov test jge mov imul sub fcompl dec jne fstpl cld jl shlb inc jno in jb test arpl out mov pop mov nop push mov sub loope push movsl xchg jnp and push cltd and jo pop call stos mov jl (bad) dec jno xor (bad) adc mov inc mov js fmuls and aam lahf pushf cltd mov lcall sbb jbe loopne push adc imul push or jmp fcoms movsl cmp mov xchg insl push xchg mov fdivr dec or fwait sbb mov push inc int3 sub dec adc je cli dec shrl sbb test mov ffreep roll xchg add push xor repnz aad pop pop push cmp aam pop sahf mov adc ds cwtl jno pusha xchg movsb mov popf call mov xor sbb sti sbb ss lock or pop mov movsb lahf stc int pop and lods adc push jnp jle cmp cmpsb push insl mov call hlt and in icebp and hlt push out pop adc cmpsl xlat mov (bad) ljmp cltd addl mov push sbbb aaa sbb inc mov jo inc dec fldt jg sti mov cmp sti push mov cmp movsl and arpl push xchg loop dec lds lret lea in fsubrl das out jne inc add push inc cmpsl jmp dec (bad) push inc jmp xlat sub add mov nop (bad) pop fldcw dec add mov jp std mov mov jne jge out or cli test call clc mov mov aam loopne add adc test cmp pop xchg nop mov lret push (bad) jecxz mov ds lea pop sbb loop push sub loop popf repz pop es data16 sti mov stos mov push dec loop aad psraw (bad) dec imul sbb sarb mov inc adc push inc (bad) mov ja sbb add add punpckhwd pop xlat dec pop enter fwait xchg rcrl jne scas add pop dec es out xor xchg add xor sub lods jle (bad) xor lahf jb in jns sbb test sbb test mov dec and imul sti cld inc imul lock inc jne movsl mov daa or cmpsl das mov cmc in jge inc pop push loope xchg fwait dec das dec xchg ret scas je mov in in pop mov dec and in aaa mov (bad) aaa cmp mov sbbl mov pop insl (bad) mov xor and sbb cs ljmp std adc sbb push cld xchg pop shrl jno xor popf mov iret in test jns pusha popf mov jmp out rorb (bad) jae jecxz in push push inc cmpsl push orb (bad) out jmp pop imulb (bad) in outsl cmpsb or xor mov xor or push in hlt mov sub inc ljmp mov stos adc jcxz mov jns push inc inc testl int push mov addr16 lret fiadd mov and jg call and sbbb pop push js sets sub inc ljmp sub push ja rorb sbb sbbb push or inc dec inc (bad) out dec dec pop dec inc mov mov or cmc add inc out and outsb and xchg hlt mov jbe lret outsl xchg hlt into (bad) mov xchg insl xor lahf jb movsb dec scas and sub sbb push push push dec mov sub pop stc aaa sbb lods jp cli ret sbb inc andl out inc or push loopne pop ret lods dec mov fbld xor dec mov stos xchg test fldcw mov cmp jb (bad) (bad) fdivrs repnz or scas pop sub sbb xchg aas mov dec or add addr16 xor dec cmp divb das pusha lahf or fbstp inc mov call lcall pop jecxz dec sub push sub ret clc cmp (bad) push cmp sbb je xor inc dec sub mov stos shlb jp add insl call cs pusha jnp or das xor mov add (bad) xor ffreep test hlt xor jne dec pop sub fistp popf push ror test jnp test imul add sbb add cmpsl addr16 cmp arpl fisub je add andl pop lods (bad) or mov jnp xchg jns loopne xchg pop aad sub lea dec test or push rcll data16 dec xchg mov cmpsb push jecxz cwtl lods lods aam add cmpsb fcompl subb and mov dec lahf pop sbb xchg in fs sahf mov push mov fnstsw push xor and gs sbb inc xchg aam mov into cmp adc scas jp push lret mov push std add lcall fmuls cli or mov fstps dec push ret sahf sub xchg mov or sbb jo mov push cmp sub cmp inc test push outsb jecxz ja mov adc icebp xor dec mov (bad) xchg sub out movsl movhps cmp inc or aad popf mov je (bad) dec stos loopne pushf ljmp cmp pop int3 mov hlt hlt push icebp sbb jbe and (bad) mov int or sbb push notb arpl in jp testb sbb adc imul jle stos xchg lcall add and int3 push cs adc cmp pop and push sti outsl xchg sub mov popf mov aaa in sbb cmp negl clc cld es jb push xor cmc inc daa mov add mov imul xor fisubrl pop stc cmp lds popa pop mov xchg in nop dec xchg int3 push add shrb cmp jg test sub inc (bad) (bad) int3 jne test lahf (bad) dec fisubl leave mov add dec not out mov jecxz (bad) nop inc push es imul dec push or mov push mov jl (bad) cmp outsl sub pusha push pop loopne cmp dec adc pop jbe push inc sub adc int outsl pop (bad) jns ret jp aaa xor ljmp cltd push jp add inc inc mov data16 call imul nop pop movb xor mov dec bound cmpl test fiaddl les mov push cwtl ret dec xor aas push outsb js mov in or (bad) aam pop xchg sub sahf sbb pop xchg jge movsb (bad) mov push add leave sub or rcrb mov fidiv (bad) out movsl bound fstpl pop mov imul mov ss dec mov xor cli cmp mov ja push test cmpsb cmpl pop test sub mov xchg mov test jmp (bad) les inc stc lret stos (bad) (bad) inc sub ljmp inc js xchg (bad) cmp xor lcall movb push sbb pop and sub sbb sahf loop pop pop push flds inc mov sub lds in jno fadd lahf pop stos xchg in repz and ds push test xor enter mov out cmp addr16 pop sbb mov jns mov pop xchg lret pop out int or adc in lea adc enter sahf cmpsl jp sbb and fisttp fldln2 neg lods cmp fs pushl ja insb iret mov xchg cs inc ljmp push dec mov in push xor mov lods xor jp out push add push bswap mov pusha cmpsl jge mov pop cwtl out out ficom push inc push into cltd cld hlt imul mov mov sbb fwait dec mov sti into in mov jge xlat and sub (bad) pop mov sbb xchg jge (bad) lds jno mov clc ja cmp (bad) cmp adc push cmc and xchg in xchg add js jmp sub fs ljmp xor lods and in nop dec xchg aaa sbb sub out in pop pop inc sub inc sti popf push stos stos xchg mov pop ret sbb mov mov lahf push pusha movsl out adc push std inc xor cmpsl pop push inc mov mov in jg jp fsubl aad in lds (bad) (bad) mov repnz dec mov jl adc lods notb popa nop dec test repnz ljmp aas xor into and insl or cmp cmp inc fwait xor or push lock pop int3 (bad) mulb ret mov mov fidivl aaa outsl pop lcall insb call (bad) (bad) xor movsb adc lods jecxz (bad) test out idivl aam xchg ja (bad) xor mov mov jmp push xor and inc pop mov xchg and mov jp push pop sbb cmp aaa testl out mov popa mov lahf xchg out popf mov pop lret (bad) jg adc xchg sbb cmp lds adc mov rorl je ds adc cli pop movsb pop rcrb mov inc insb xchg aad cwtl (bad) sub cmpsb loop push xchg xchg cmp xor cmc jge into fs push in aas testl scas and jns and cld js icebp xchg pop xchg inc dec push or inc out fisttp notl inc mov lret (bad) in movsl mov pop push shrl ficoml mov popf mov std fisttp jbe decl dec dec popa xor cmpsl push dec pop into outsb and cs push outsl add mov sub dec es jne xchg vandnps es in cmp sbbw aas push mov xchg push xchg sub pop xor (bad) scas push in dec xchg pop lods pushf mov add test inc das insb test mov fist cmpl jo rcrl sbb sub std mov mov test cs or mov fidiv hlt jae lret decl mov movsb add sti mov push pushf shrl jne push cltd xchg scas mov imul (bad) mov dec sbb inc scas fdivrs (bad) xor sti sbb popa jl popf jne xor or push decb and xchg call and cltd ja mov push push sbb xchg adc scas pop enter mov xchg sbb xor cwtl pop sbb inc lret pop sbb push mov (bad) mov inc rcrb jecxz add xlat lahf jne ljmp sbb jnp out cli jno push inc xchg shl in adc stos fstpt inc shr push popf iret push cmp or push outsl aam or (bad) mov xor pop (bad) mov jge lret mov pop nop push mul icebp push outsl jg lds and cmpsl sbb fsubs aaa in mov outsb inc scas mov xor pop cmp pop or mov int pushf cmp lahf out (bad) lds add sub into jg xor pop pushf push or pop xorb sub and (bad) xor jle xor jecxz push jnp mov mov jg (bad) dec ja das mov add or cmc jo mov mov add mov scas (bad) xor scas lret xor sub push int mov xchg adc repz call xchg or push jnp out jp fbstp xorl add mov addr16 fdivrl lods imul dec inc adc stos pop icebp leave mov jnp je ds cli (bad) jb mov rolb jle inc inc insl int (bad) sahf out sbb data16 xor arpl mov cltd mov xor flds js add push js jns stc in or and inc dec and mov (bad) faddl ljmp cmp iret clc jo mov test mov jmp addr16 sbb xchg mov (bad) dec lea jg mov enter sbb ljmp jecxz std jmp imul cmc xchg js cmc xchg divb pop push lds push adc sub into dec rorb xchg aas (bad) dec repnz mov inc (bad) stc arpl xor (bad) push jp cmc cmp jp in mov mov push loop cli add pop dec cmpsl push (bad) xor mov inc jge mov push in ljmp fimull push mov daa pop jmp fcoms lock or adc cs sub mov arpl lcall mov out pop popf ds in out add sbb mov test pop out mov es push jl idivb mov fisttpl sub test mov adc cld pushf insl cmpsl mov cmpsb in call mov pop push sub jmp mov dec mov movsl jecxz add (bad) hlt xchg lcall sub jmp not mov sbb push inc sti inc ja mov popf jge sub sbb shlb add pop dec push and cmp dec ss loopne jae repz xchg adc loop or jl fsub push mov mov cld movl and insb out and test leave inc mull fs mov aam or stc test xor and fwait sub (bad) cmp pop and mov inc cmp sbb add adc ret sub lock (bad) push dec inc push sub sahf jns stos insl cld clc stc add insb inc loope icebp add subl mov pop cmp je (bad) mov xlat pushf loop jecxz push ss loope mov mov loopne mov xlat sub icebp aam adc outsb test xor xchg lcall jb pusha sub pushf lcall ret aad cmp test mov dec pop inc inc scas cmc inc lds adc loope stos out popl int jecxz lahf mov aad ret push aas xor xor mov xor mov and dec push divl insb int3 mov push cmpsb jno push push cli mov xor pop ljmp xchg pusha mov stos fyl2xp1 jae pushl sbb mov fsubs push pusha insb (bad) push js mov sub xchg out sbb stc mov movsb shr add add ret std inc sbb cli xor jl pushf (bad) lock jp imul sbb xor xchg pop adc push adcb mov push pop mov mov movsb sti adc sbb cmp aas (bad) xchg popf popa add push inc into pop addr16 fs adc clc (bad) adc dec flds sbb ret adc sub pushf xchg mov push mov push ret shlb rep xor cmpl outsb inc mov mov mov hlt fincstp ds mov lcall xchg loopne mov mov lods (bad) je jl loopne out in sbb (bad) into pop arpl push lahf xchg pushf shrb cmp data16 lret outsl clc and aad jno inc mov jb push mov xchg stos xchg insl shl in jp sbbl and sbb cwtl pushf cmp nop (bad) sbb jl inc xchg adc xor movsb or and test in add test and pop daa into imul mov in mov jge repz dec dec mov pusha (bad) cmp idiv pop or pop and mov and xchg shll das xchg cwtl lods mov xor dec sbbl nop (bad) mov inc fs inc mov push mov jp lods push mov sbb pop jle push bound and imul mov loop je ds mov mov in daa fiadd jge or xchg jnp jbe das mov dec out adc fmuls mov adc pop nop dec aas enter jns adc jecxz lret pop push xchg rol pushf push call or pusha lock or (bad) dec sbb orl inc mov and and daa xor push jae and into lods movsl xchg (bad) mov push in cmc or popf pusha push test push insl setbe adc stos inc xchg in mov mov mov xchg mov fsubs xor ds push (bad) mov pop add scas (bad) dec pop hlt pop (bad) cmc pop cmp and sub lahf lea jo pop (bad) stos mov out mov lahf lds inc mov jge jecxz bound cmp fwait dec stos add jne xchg mov inc lds dec test or mov rolb push jae pop stos push inc int pop stos push stos mov mov and push mov aam xchg cmpsb (bad) imulb jbe fxch fsubs fiaddl in jmp mov stc push out dec outsl call sub sahf lret sub mov xchg jl shll lds out and int3 lods into mov add arpl ficomp in add xor in jl cltd mov daa jge iret movsl push out push ja,pn ret xlat mov inc mov sbb fwait xchg cmp jo out aas aas out enter lahf sti sub loop pushl and les dec stos cwtl push sbb jmp sbb cmp cmp inc push mov rolb push sbb mov push adc in sbb rcrl inc rcrl movsl adc and bnd gs mov push mov add (bad) mov cmp or cmp add sub fisttpl push das xlat in inc pop or xor adc push cmpsb jae outsb mov dec xor push lods push cmpsb cmp in jbe mov not pop pop dec ljmp bound and mov stos push jo dec jle cmp xor rorl mov ror shr pop aam pop pop mov repz push dec xor les adc and mov outsl xor shll repnz xor jae mov dec mov les js int3 inc cld cmp test sbb lods jg (bad) mov fiadd (bad) mov mov add insl aas stc xchg cmp cmp aas (bad) xor inc (bad) ret jb inc (bad) in mov xorb jnp test mov or test js xlat popa pop and cld aas imul repz in arpl mov cmpsb jns or das imul cld roll cli xchg and mov (bad) sti stos mov sbbb shrb hlt mov mov cli test lret (bad) int3 or pop cmpsb sbb pushf xchg sub roll ljmp add into into out pop (bad) ds lock movsb lret dec cs imull stos scas xchg mov (bad) data16 je adc cmp pusha push xchg movsl or popf nop or jmp dec in sub movsb fstl add scas sarb sub mov mov inc xchg loop jmp loopne ljmp and jnp mov iret push sbb fs or cmp repnz pop cltd repz xor dec hlt inc cmp call rcrl std lea jne pop lods dec ret ljmp icebp int3 ss fnsave lods popf xor in cmp pushf mov mov or fwait cld fsubrp push test add clc mov bound enter iret sbb std (bad) sbb xchg in les call loopne jge scas in xor outsl mov mov lea adc pop int3 and hlt jge mov pop ljmp rorl ret xor pop inc outsl in stos into sbb mov or ret sbb inc xchg push jb mov jne (bad) fistpll sti xchg push bound adc outsb testl sbb add mov inc ds js call cmp cld in mov sbb (bad) out cld (bad) lea mov pop xor dec pushfw xchg mov and xor ss mov out mov inc ljmp jg call xchg mov sbb in jmp pop push clc popf cmp js notl outsb dec andb mov ret jmp push stos pusha sbb push jno scas test jmp (bad) fisub xchg adc xchg (bad) lret cmpsl sti xchg pop sarb daa xchg pop cltd fwait inc inc push inc js lock cwtl enter mov fldt mov mov out (bad) xor push xchg pop outsl inc mov repnz or incb xchg aam leave lahf xchg pop out add mov aad hlt mov std mov mov jp mov and insb or bound or cmp sub push ss in mov or and (bad) dec ja adc cmp mov loopne scas adc inc shlb or roll and enter movsb ja or fwait stos pushf cmpsb dec dec push fmul dec lods or jl std lods shr mov xchg fdivrs jle mov pop loope sub mov faddp inc bound movsl add pop cltd dec shrw loopne cmp outsb insl inc test (bad) push adc adc push out out xor scas xor loop cmpsl xchg (bad) jae jge les push pop les mov push cli push sub mov mov or jo test lret jnp lock in fsubrl bound jno mov push cmp aam and dec fwait loopne jnp,pt adc ljmp jb cltd sub pop jns lea outsb add out jno cmp stc sbb mov push fnsave popa jb cs nop stc push inc xor mov push repnz cvttps2pi out cmp fsub sub addr16 add sbb sbb push cmp scas movsl push jno dec pop (bad) subl gs test into mov dec sub stos stc rclb iret mov cwtl sub (bad) dec fcomps push and or testl aas jle bound push add scas ljmp std dec lahf cld push lea insl fidiv add inc sub fidivrl mov bound dec clc push sub mov outsl scas cmc adc (bad) out and push adc stc test aaa int jmp pop call pop pop repnz jbe jg loop fsubrs xor and xchg adc mov sub mov leave sbb pusha pusha sarl pop push imul mov das mov movsb sbb fs jmp ja sbb xchg into mov daa mov push jcxz scas shrl popf int3 mov dec push push shrb jne adc mov stc mov push mov mov pushf ss in fbstp mov jl lea add pusha les mov std data16 jbe dec lock xlat in push pop xchg addr16 or mov xlat mov add push pop xor int insl lds test or push mov rolb into ret popa pop enter rcl in jmp xchg sbb mov inc inc dec xchg cmc fistl adc mov sahf rcrl and jno clc sub pop js pusha pop pop mov cmp add and xabort sti (bad) or jns xor push xchg loope js ljmp jbe (bad) sub cmp mov xlat jb jae mov lock mov popa and fstps pop mov gs outsb std add xor movsb outsl xchg in xchg or pop shrb sub es (bad) aad pop jnp test mov mov es pusha dec (bad) test rolb sub out sbb (bad) out mov pusha lods inc xchg xchg push mov cli lea mov mov xchg icebp lods jge push add int3 push jns gs (bad) inc mov out add in divl jmp mov ret inc js push adc add jg adc or mov jno pop sbb add int3 rorb cmp jo lods imul and xor rcll incl call sbb imul mov jl xchg jl pop sahf enter push jne mov push cmpsl cmp mov mov adc dec aam push pop inc inc dec pop mov inc mov xor xor adc jno and daa out mov jp aam or inc xor push test or cmp insl in enter adc pop adc push sarl and test xor xor add popf rclb cmp mov in pop loopne lcall loopne (bad) scas in rolb xor mov loop push popa imul pop movsl pop movsb dec and mov add cmpsb cmp (bad) xor jecxz dec xor in mov cmp xor adc jnp and out rcrl in std ret test orl adc inc mov mov mov pop xchg dec fisttpl sbb inc lods out pusha insb push in jbe mov mov sub push and fidivr add pop hlt (bad) (bad) inc (bad) pop cmp insl sbb andl sahf or sbb test lret nop and cmp cmp mov dec aas fisttpl xchg (bad) ret jp repnz sbbb cmpsl mov xlat js jnp xchg dec sarb shlb popf jb scas test test ja push mov mov cs push xchg dec rcl daa repnz mov loopne (bad) clc xlat inc call lahf scas loop fs inc sub or repz sahf lret test mov xchg dec push xor inc mov fistpl cs insl jl fldt cmp sbb xchg fcomip data16 cmpps movsl repnz (bad) dec rolb xchg sbb sub mov psrad std xor ljmp cmp repz sub inc leave inc xor jp popf ret xchg jne mov lods mov mov mov pushl arpl xrelease dec fdivr jo (bad) cmpsb sbb mov icebp cltd xor repz and jne jae pop dec cmc neg mov test (bad) mulb into sub xlat pop sub mov gs sub and lahf inc sub and cmp notb movl xlat push adc fcmovb cmp cli fisttpl mov push pop es fisubr xor nop rol xchg sub out xor lods loope pop movsb movsl data16 lahf cmp int in pop lds stos and mov repz xor in ret and repnz mov add mov add in and cld mov lds mov push insb add jbe call push movsl add dec out pop inc xchg cmp pop mov cmp or cmc sub jmp jl shufps test inc (bad) inc mov mov mov lret insb pop or movsb pusha pop out sub dec push mov xchg mov push movsb cmp mov push ds leave fwait sti es test int3 std mov adc (bad) adc or mov and pusha mov cli adc mov in fs adc daa mov lcall xchg sbb std cmpsl mov cmp stos adc fucomi sbb in jnp or mov stos pusha jmp add mov insb adc pop movsl and mov (bad) sub push xbegin insb and movsb (bad) jg loopne sbbl push fildll pop and ss ds pop dec pop mov add add mov mov mov pop test sbb gs test test outsl into mov imulb (bad) mov adc xor pop push insl jp or adc pop pusha sub push ds xor mov jge insl rcr popl negb in test lods adc repz jbe jmp fist rcl (bad) imul aaa dec int3 jno lods test mov cmc dec and lock cmp cvtps2pd (bad) int3 std imul cltd jl or ds xor adc inc xor mov (bad) xchg imul sarb in negl clc cmp lahf jb out push jp pop jbe jbe adc sbb sub movsl test pushf pushf in cwtl dec fidiv pushf out (bad) sub xlat out icebp jne lea mov xchg es mov jns mov pop lock mov dec push ja ret into sbb nop gs pop repnz push shrl xchg enter add das xchg outsb xchg cmpsl test insb inc or cli pop and loope sbb mov in outsb out lahf (bad) mov jne cmp dec mov push lods dec (bad) fs dec aam ficom pop mov pop popf idiv loop jae mov xchg scas shr in jl pusha sbb ret daa std xchg and mov gs es popf cmp inc stc xor test in sti imul inc mov rol sbb aam or (bad) in shr sbb jmp xchg data16 incb insb add in packsswb sub inc mov pop dec xor stc fbld imul mov mov stos mov add test fisubrl stc jp push insl aad jae enter add hlt jbe aas dec mov testb or imul mov cmp and dec (bad) ss and es mov push loop (bad) dec or or rol mov stc hlt adc gs mov outsb test imull out lret pop fisubl mov fcomi in cmpsl clc test fildl fwait mov sbb adc lret mov rcr and aas push mov and jl or push and push mov sbb mov mov loopne lret aam popf jno out cmp or insb inc leave inc hlt mov repz (bad) xlat sbb push dec mov cltd popa shrl insb xor sahf jb movsl aad lcall mov mov inc jbe or push xor addr16 or fldenv int cmpl adc daa popa mov adc fbstp aam adc repz aas and pushf jp add divb add sbb lock orl sbb mov subl in adc jmp or cmp sbb cmp (bad) insb fist lods mov and into adc jae les ljmp in pop data16 addr16 pop jae cmp loope add stos push lret pop xchg cmp leave loop addr16 mov jb test aaa and xchg jl and (bad) pop stc inc fcmovnb aaa and js mov sub ds xchg dec ror inc sahf dec xor jmp adc cli cli jbe xor test xor push fildll repz into leave fmul fimull push out outsl xlat jp sarl clc ret cmp cli sbb push push (bad) int lcall leave xchg push xchg popa mov test pop fstpl fnstsw push dec cmp sbb add call push out inc lds mov lods scas add mov iret jg pop xor lcall xchg repnz sarb sarb sahf jmp nop in xchg mov jne cmp jp adc ds shll sub fisubrl jmp and jae cwtl sub adc cmp test adc jns pop inc idivl fs cltd cmc jle repnz cwtl mov add jle cmp mov mov into out mov imul lds add pop xchg push test jne jnp mov mov test test sbb gs push stc pushf lcall add xor jne pcmpgtd and pushf addr16 (bad) xor pcmpeqw inc lcall data16 cltd sbbl aas add dec inc call std popa inc push pusha cli pop ja aas rcrl pop fs dec adc rol (bad) or mov adc xchg ret push mov pop cmpsl inc aas ja jne clc bsr in (bad) jmp nop xchg pop mov xchg incb nop jne sbb nop mov mov jecxz es push ret test xor fmulp adc out (bad) ljmp sti in lcall stos sbb jne not orl call lcall ss popl mov fisttpll mov sti sbbl (bad) mov or insl cmp mov fwait bound cld cmp stc jae fs scas push adc and and and stos cmpsl xchg loop inc clc xor sbb fs adc mov repnz ja sub je mov je repnz sarb test lea addr16 add adcb cmpsb mov rolb jge outsb dec sbb mov leave jae subb add (bad) fldl mov js inc popa mov outsl sbb ds lret pop outsb stos imulb aam insl inc insl xchg (bad) sbb push lcall xor xor dec outsl out roll into in aas push inc imul loopne xchg pop mov jge pushf jno inc call jno add je push pop mov mov jae jnp repz out add jbe cmp mov into pop lea fsubrs scas btc (bad) mov ret outsb mov sbb das fs push and and ficomp mov pop jb xchg cmp orl loopne arpl out lds add mov jo mov add popf decb push pop stc pop loope pop xlat inc pop rcrl (bad) mov js xor or or sub cld jge loope mov out scas mov and jo in clc mov aad mov dec aas push adcl lahf xorps leave mov leave ds mov je or (bad) push jge fwait addr16 (bad) cmpsl or xchg and sbb mov ja or mov push dec and enter adc repz sub add jno xchg mov push fldenv mov push cmpsl rcl popf mov pop xor mov negl out push loopne addr16 cmp dec sub pop push pop mov add pop nop push xor test fistpl in or aam add xchg out outsb sti fwait jo xor btr jnp mov push das test add sbb mov (bad) daa in mov lods inc daa icebp sbb adc push scas int cli stos ljmp inc in (bad) mov ret push inc les out pop imul (bad) inc sarb out push mov and lcall int3 pop mov dec stc movsl and push test sbb xor jnp mov mov cmp or xchg repnz sahf clc lret test sbb mov sahf (bad) mov cld imul mov iret jle jecxz adc mov adc (bad) or inc out sahf inc push test stos jo scas stos stos out mov or and subb outsb xchg test cmp fmull nop xchg out stos mov (bad) pop dec add jbe adc imul or repz inc repz inc and outsl inc push sub jae es push aas xor gs imul mov dec loope mov adc or sti mov (bad) mov jb jae daa out (bad) adc in xor bound and dec jbe fcoml in pop and mov sbb xor insb ret mov lods and aam hlt flds cmp adc lcall xchg xor aad xor int xlat xchg push push or lret sub out test loop and sbbl pop ficom mov gs pop jg jb in mov js mov int3 push mov mov sbb fnsave movsl xchg or push fist je inc push jecxz sub push outsb xchg xchg or mov add push jecxz popa add jg sysret adc pop (bad) dec cmpsl icebp mov imul popa xor sub jb into or adc jmp outsl test insl rcl pop pop or rol or out mov push (bad) lods scas mov loope xor out add bound hlt out add lock int3 mov ds fs movsb jno faddl xor stc aad sahf add movsl jb push fistpll lods pushl hlt jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov adc lock in sub aad mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec iret dec inc inc push js in (bad) jbe or add fistpl fdivs mov fistl mov dec push int3 inc divb aam push out add mov sar out and repz mov cmpsl cltd dec inc movsb cmp int3 mov mov insl cld jp mov mov xchg mov and pop out aam push mov out inc add flds ret push lcall movsl pop or pop cmp fadds outsb inc aaa push sti pushf (bad) dec iret out cmp (bad) divb xor mov stos jbe push ja adc sub adc loop mov negb xor add gs sub jp pop (bad) dec dec push xchg stos jb inc push jnp leave out cmc test jnp lahf lcall arpl jl,pt and nop or xor mov xchg je lret jl mov cmp (bad) mov int3 xchg jae roll xchg mov (bad) pop push mov push sbb sbb push mov cmp jg or js push xchg xchg mov nop stos dec loopne inc lods inc call js (bad) mov xchg cmpsl nop adc ret pop mov ss mov push jno out movsb push fisub jne add dec ldmxcsr popf cmpsb push or ja rcr out or jp dec enter out cld and ja and addr16 cmp xchg gs sbb and sbb push cwtl fst pushf fwait mov mov ret and push out jbe loopne cmpsb mov popf push sbb mov (bad) call rcrl rep pop and xor mov mov pop js push inc jge jno mov daa aas or mov xor jg xchg and mov dec in xchg clc notl inc clc push push jle dec inc repz scas push pop add mov xor sbb cmc add test (bad) icebp mov inc cmp js ret cmp dec xor pop lods adc inc and dec jl stc mov sub fnstsw sub insl xlat or mov movsb xchg imul pop push xor insb lea xchg cmp les cmc dec dec push add or push adc pop push imul mov ret lret cmp loope das ja push repnz xchg in out mov ljmp push mov fwait add jne jo push js cmp adc addl (bad) xlat outsl xchg div sub fnstcw ja mov daa cmpsb arpl inc ja or and into clc xchg jmp xchg bound mov lcall popf stos xchg aaa lea xchg das mov test sahf xor sbb mov cltd xor cwtl xlat fwait rol mov sub icebp bound (bad) jl and xor lods loop outsb aam fldln2 outsl fistp aad mov mov jns mov mov or and sbb jns xchg hlt xor or mov add test mov inc mov mov shrl ss inc repnz xchg and cwtl cld into push in jo rorb inc jecxz daa cmpsb lods inc (bad) adc insb mov push inc jecxz repz dec insb loopne mov aam pushf cli outsl cmp add mov outsl icebp das int3 lret cmp hlt pusha adc in xor push hlt xchg cmp jno movsb in add cmpsb (bad) cmp sub sbb popa repnz fucomp or frstors pop out mov mov rclb hlt arpl imul pop cld dec jecxz inc xlat xchg fdivl mov orb sti movsl ret xchg out mov inc loop dec push out xlat insb shlb sub xchg adc (bad) fcomps add (bad) push push sbb adc and dec cmp ret fs xor ljmp shll repz scas int3 sbb pop cmp push add imul dec dec fidivr popf mov sub sarb inc lret icebp adc sub inc and push (bad) arpl sub or and out inc out movsb call xchg and (bad) aam and outsb in clc outsl sbb mov out repnz sub sbb in outsb inc xor test push adc cld cltd hlt sar and and hlt jecxz,pn in stos outsl loopne adc inc xchg lret sbb fwait mov pop das push xchg push mov aaa add add sub test cmc das scas inc dec int sbb inc inc test xchg into into repz push jne jecxz outsl add cmpsb aaa into lret in sbb loop mov test xchg arpl xchg data16 test in adc cmp push lcall sub jg (bad) mov pop mov fildll push aad jbe iret cmp jo xor inc add mov test add loop icebp xchg push pop jbe inc rcrl (bad) aam inc mov mov dec pop dec xchg data16 cltd adc mov fcompl mov iret loope (bad) mov add cwtl imul fisttp adc mov sub mov mov lods add jo mov mov push and (bad) adc xchg mov fmulp repnz addb (bad) push mov loop adc jg and loopne xchg mov fsubrl dec in in dec std push adc dec xlat pop pop leave daa mov and and stos fmul call xchg push aam daa les jns movsb add xchg or add lods add arpl ljmp adcl cmp mov mov pop mov pop dec out add xchg xor dec sbb lret (bad) dec cmc lret cmp cltd ja int sbb sub sub clc cmc sbb fidivl arpl nop jle sub dec cmpsb out mov sbb ja loop dec cmc xor sub (bad) and mov pop scas ss repnz inc scas sbb nop jne xor fwait sbb imul and sub fcomi push or pop fdivrs mov outsl call pop and cmpsb sub mov (bad) adc (bad) ljmp mov insb mov (bad) and js mov dec sub xor pop jb je jge data16 pop imul adc cmp loope sbb xor and in out jmp std pop ret addl sub fnstsw stc xchg arpl inc mov sub outsb subb sti and xchg xor mov dec outsb push aad int3 sbbb or mov pop sbbl sbb imul xchg mov movsl push dec jo mov push loopne fcom xchg push inc ss call pop loopne in (bad) cmp add or popf pop lret mov roll sub sbb in stos cmp pop push mov popf mov mov in xor or pop icebp jbe sbb nop sbb inc movsl ljmp lds stos cmp mov jb or out dec mov adc inc xchg repz in mov (bad) mov sbbl lods or inc or (bad) dec mov call inc mov push and pop fistp loop in inc push cmp pop push popf mov out (bad) ss mov adc lcall (bad) imul arpl sub lods lds data16 stos mov xor mov push inc pop lcall push movsb push int imul dec (bad) sbb mov dec cmpsl jno cmp in cmpsl pop push cmp cmp adc dec pop sbb adc adc adc mov dec repz out dec (bad) push movsl mov cmpsb cmovbe mov sbb sub and shll inc xor out or pushl mov dec adc cmp orl pushf push or and fs pusha add loope call cli in dec imul (bad) js xchg pop inc mov stos ljmp js sbb or ret sub test mov xchg sbb (bad) mov lock cmp jle mov jle (bad) js xlat mov pop mov mov lcall (bad) push jecxz xchg or neg aas lods sub fcmovne cld nop or mov push cwtl sbb or sbb scas fldl push leave movsb jmp inc inc xor inc adc outsb std or xorl icebp cmp out cmpsl (bad) imul push adc or add push sbb push insl inc xor sti jp mov lret jae and jbe add jmp xlat (bad) movsb mov push imul mov imul inc mov mov mov pop inc dec stos pop mov je push and mov mov inc cmp cmp fcmovnb cmp xor in ds sarl and (bad) adc pop mov insl cmp inc pop (bad) and push dec inc stc add cmp dec addr16 insl mov sbb out sbbl jbe stos push mov xor ss out rolb xor mov mov jg pop mov mov or nop cwtl xchg rorl push xor stc rcrb xor inc movsb js (bad) jge fs insl addr16 outsl xlat ds jb mov inc and mov dec hlt bound xchg pop (bad) movsb mov int int or mov sub sbb sub aad pop cmp add das sub imul jnp inc or xor cmpsb cmpsl or mov lds mov movsl pop cli adc lcall push push mov push cmp pusha or push xor fwait repnz cmp and (bad) jnp movsb cmp mov out adc and fsubr movsb cmpsl rolb sub stc mov sub incb fdiv push jo pop cmc add or dec pop or in inc cmp sbb test and jbe cmp insb leave cmp (bad) std in sbb sahf push sahf fs add sub cs fs out mov fistl pop cltd loope cmpsl jmp std lods fldt add xchg fwait xchg mov xchg in lods (bad) notb ja out cmp adc insl fildll rcrl push fstpt aad jmp icebp mov push xor dec test jno mov inc sub rcl ret (bad) push sbb or (bad) je inc dec add jp shrb add test xchg adc mov and dec xor bound pop clts nop sbb icebp insl lcall addr16 or cmp loope mov cld aaa or idivl xor dec jb cmc scas push cmpsl jb adc es mov add and inc out cmc popa and aaa xchg (bad) into mov test xchg das or jb sahf add sahf test mov (bad) xor rcl ror scas daa (bad) mov inc arpl adc ds jbe inc ja fs sbb in add sub jmp ret aas push fdivp mov jg aam ljmp push push inc jns cmp (bad) loopne adcl adc adc inc data16 xchg xchg sub mov lods negb loopne jmp stos les (bad) je out xchg sub andb dec sub js mov push xor mov stos movsl jno out dec push (bad) xor mov push jo or sub mov fcom mov std sbbl jo cmp cmp jbe rcll mov jo repz aad mov mov cwtl ret imul ja push sahf xorl aad add jo fld jmp push cmp arpl ret ret mov mov imulb insl cli inc gs mov mov lret cld test pusha cmp mov loope xor dec mov inc sub inc pop (bad) in xor push or (bad) adc sbb aaa in cld pop addl ficom jbe ret neg imul loope and bswap fdivp (bad) push cli pusha pushf outsl out lds push popa insb sbb xor xor sbb mov je out std mov push dec loop add sub or adc sub fadds pop lods and mov enter pop loopne sbb sub mov std and frstor daa sub sub ficompl sub pop and cmpsl sti aaa or stos ds sbb xor dec sbb js cwtl dec cmp jns aam or jno std mov movsl cmp sub sub jae and or mov cmp cwtl add add xchg jno call dec ret in or jg jbe loope loope,pn sbb stos arpl xchg repz in mov lcall lods inc dec dec pop call movsl fnstenv and jb xchg test dec add nop sbb push sbb pop xlat sub adc adc cmpsl packssdw fstl cwtl adc cs add int3 xchg sub push jnp bound ret adc push dec int push dec scas xchg inc movsl xchg test in outsb fimul push sub test mov lcall sbb and jmp pop std xchg add push ljmp ret add push shrb add enter lods rolb ret jae and xchg std and (bad) cli jne movsl fsubs imul ljmp scas lods mov lret jmp (bad) pop cmpsb dec ret movsb pusha incl frstor inc ret out push and movsb xchg (bad) xor addr16 hlt mov mov add ja or das sub fsub pop imul stos ret paddusb dec push jmp (bad) xor xchg ret lock out fcmovnu lret lret add mov mov (bad) (bad) repnz dec cmc sub cld test call dec adc daa call xchg mov pop mov xchg push lock lds pop mov (bad) adc stos test and jmp scas fbld mov xlat inc jnp mull mov cmp push sbb pop rol insl (bad) stc jecxz and lret inc jl test jae outsb xchg (bad) icebp dec pop push clc mov mov pop jnp add cmovp mov push pop inc or frstor cmp add push mov decl pop cwtl ds mov jne push popf fildl cmp jo push cmp mov rorb push or or pop add xlat out sbb add dec movsb loopne cmp fs dec lahf fdiv fnsave push imul es and aam pop push aas loopne lret inc push xchg (bad) push sti jp ffree mov je dec (bad) cmpsb outsb or les loopne dec pop popa jbe dec mov xchg inc mov push mov sub jne sub mov sahf dec clc les add shll je dec inc scas push cwtl (bad) cmpsl int3 pop pop aad xchg or fdiv enter sbb and cmp cmp lods sub lahf mov mov dec ret xor insl insl ret scas enter aaa outsl mov repnz fnstsw stos cbtw cld enter xor ja lea lret shll xchg or pop jg mov mov fsubl pusha movsb pop add cmp mov and sbb cmp and mov dec pushf addl xchg lods jg push cmp xchg adc fdivrl mov jge sbb fwait mov add mov xor cwtl add jb adc cmp (bad) jp pop repnz ss xor (bad) outsl or loop pusha mov les adc icebp jl test push inc jge xchg xchg dec (bad) cwtl jg add repz imulb pop add test lret and push or lea ljmp in jbe xchg cli ljmp into and push and xchg jmp xor xchg popl test mov loopew int out and push cwtl mov fnstcw push dec sub rcrl iret stos rcrl fcomps sarl and jp dec insb jmp aas jbe cmp mov xchg cmp dec mov mov add negb std (bad) lds xor push xchg cmp rcrl sub xchg xor sbb dec add outsl and push sti mov mov xchg aad movsb sbb rcrl dec push popf pop pop mov iret inc test inc and xor or cwtl outsb (bad) (bad) out push lods mov add push loopne mov mov lock mov fs data16 (bad) xor pop mov sub mov mov cmpsl imul jbe ds test mov mov loop out data16 sbb lods mov cmp out negl push out (bad) ja pop or ss mov mov mov leave out popa stc out sbb in mov (bad) js and mov push in inc mov popf fistpll lock pop add mov cwtl cltd in popf jg jge loop cmp daa pop cmp dec xchg nop sub test sub pop insb push stos prefetch or (bad) cli cmp imul fs mov push jle pop repz (bad) xchg test and mov subl cmp cmp pusha iret push jmp dec inc push mov pop xor sub dec test inc imull scas test decb fildll fsubl sahf pop jns mov mov jo inc mov sbb js sub jmp clc fwait inc push aad jle cmpb jns pop cld js mov lods pop stc jge gs xor dec xor mov mov (bad) loop add fwait mov mov dec cmpsl out cmpsl (bad) (bad) jne cmp pop sbb cmc (bad) push into push repz cmp lret dec adc (bad) adc imul sub mov lods dec lock sub mov rdpmc mov cmp test stos push icebp fcomps nop fdivl adcl cs mov (bad) push cltd scas inc inc sbb xor inc fimul jae fstpt ss sbbb adc mov fldcw mov pop mov or in xchg jmp xchg (bad) movsl inc sbb clc jns dec xor in hlt leave test cltd cmpsl ss stos (bad) insl pushf insl rorb sub shlb mov cli in in aam cmp lds mov push aam popa and push leave cmp out bound or out push outsl mov inc data16 imul inc aaa or adc popa jg into push mov inc shll sub mov and mov test inc jno cmp mov in (bad) scas cli mov inc pop outsb adc call mov mov lock and mov mov push roll test sbb sub sub dec mov cmc sti mov pop push ss dec jp xor insl sub imul ret sarl (bad) lods cmp lahf cmpsb inc pushf bound loope mov aam dec dec pop inc jp or adc pusha sub jp,pt and ret adc mov cmp aam dec jl fisttpl int xor rorl lahf imul jle ljmp lods adcl pop stc iret in sbb xor jge ret adc cld mov cmp pop ret stos nop stc adc jp add rcrl js (bad) mov outsl pop out pop inc das int pusha jl push jp jp jl andl xchg mov repz cmc fimul lock dec inc jecxz lods add jl lahf mov inc push push cmp push hlt jnp in stc idivb jmp or call hlt jbe xchg ja scas out popf fcmovnu int3 scas orl loope or and movsl insb mov and ret inc or dec (bad) cli pop mov xchg fisubrl sbb and leave mov sbbl adc out xchg je adc adc stc dec push push mov mov push xchg add ja movsb sbb dec sub dec xor int pop jne iret jg add in out in pop dec add add aad jp jae das or mov and lea add mov jl jp sub cld gs aad lods mov inc adc popa adc orl test or icebp rolb cmp mov fstl insb mov stc data16 testb jmp out test cwtl insl (bad) movsb leave nop fcomip inc imul (bad) mov ds or mov dec test mov jecxz dec ret gs jnp dec popa add xor mov cmp jg jecxz (bad) nop test nop add repnz rorb lods clc outsb mov mov nop xchg or lahf in mov repz sbb and mov mov jmp pop and hlt imul mov adc cmp lret test jmp jecxz mov scas hlt fwait insl pop test dec jge push imul pop mov xchg dec cmp xchg test test push sub mov mov hlt (bad) mov movsb xchg inc loope sbb aaa push ss (bad) pushf in jecxz loope jecxz xor add out xchg insl or cmp push cwtl sbb mov ret dec jns xor int3 pop or cmp test nop adc mov pop daa jns adc lock push insb fcoml mov das xor xchg cs and xchg iret in or shrb pop mov xchg lcall negb mov inc into ds mov cmp mov sbb iret pop jp mov push loopne hlt (bad) cmpsl xor gs xor jo pop push jmp daa adc and dec loop hlt test and in sbb mov (bad) push in int or mov insb or inc pop pop mov mov xchg sub lahf mov dec test (bad) push push adc xor mov out add push and or and inc out incl mov adc mov cmp dec sbb sub xor inc xchg cmp lret sub sub adc jae mov jne iret test cmp jns daa dec mov test pop sbb test loop imul add inc dec imul loopne shrl xor dec or xchg add sub ja sbb test mov setge jle jle enter movsl rol das inc jg repnz stos loope mov xor inc inc jmp inc in adc das aaa imul sbb (bad) aaa sbb movl outsb pusha (bad) lea mov lcall jne fwait scas cmp pop inc push mov std hlt js mov in (bad) test out in push inc mov inc cmp mov mov (bad) nop adc add dec ljmp sub addr16 push mov jno out sbb popa jge xlat out cmp or dec mov sahf jg orl push in (bad) stc aam sti adc imull xchg iret fldt add jecxz sub pushf push pop xor push mov rol or out rclb mov stos mov pushf fsubrl in add mov (bad) jmp iret or (bad) popf call adc cmpsl fcmovne push pop stc inc pushf lahf lods jle scas ss stc nop xchg hlt jns sbb imul xor mov sbb push pop js fisttp int sarl cmc pop int3 daa cli xchg cmc push cmc push adc jno hlt fcompl cmp pop pop (bad) add push inc or jl pop jle adc pop add dec sbb or pushf (bad) jne mov sti lea stc xlat xchg stc leave mov movl mov into or inc mov dec lods adc (bad) lods rcll aaa push andl in arpl mov stc aas (bad) xor test ss lret cmp jno mov xchg adc dec ja adc std add jp cmp push jmp push cltd inc fsubrl in scas mov xchg inc push mov jns sub popf or push lock mov add or lods xor add sbbb jl sub xchg jg aad cmp cmp andl int3 jmp pusha cmp jns rclb dec out and xor jge sbb hlt dec insl push mov adc inc not dec gs data16 dec or insb movb mov pop pushf mov push (bad) xor xchg imul mov mov repz mov cmc fwait bound mov cwtl xor pop pop sub inc xor aam dec enter cmp pop icebp mov and and jg (bad) lret mov push push ss inc icebp xor lcall popf leave es cmc xchg test jne adc jp jge cld leave lock in sbb xor movsl outsb mov lods jnp movsb pop xchg stos xor push push xchg (bad) jo fnstenv adc movsb out orl cmpsb push ficom pop push push lock in ret iret add (bad) (bad) out cld imul iret xchg mov clc add loope sbb inc test pop cmpsl add pop lock add in mov orb loopne dec or sbb loop mov outsl ja divb add sub fadd insl (bad) aad mov clc fnstenv cli dec rcrl xor aad mov je push xchg leave in and sub cli (bad) mov mov add les std (bad) popa sbb test mov mov ds and push fdivr push sahf xor popf dec lods add (bad) data16 push mov or cmp push and sub mov jmp pop cmp insl repz jmp cltd mov pop fstp xor jg push mov push pop or aam scas stc sbb sub scas mov xchg pop jl cli fmul test and xor inc call cltd jno sub lds push ret push mov cltd inc inc adc jl cli divb iret push mov stos cld test add arpl out fsubrs imul or sub add push pop xorps sbb iret sbb add fldcw movl fsubl fnstsw sub add pop sbb sub xchg fstps pop call dec sub mov outsl push add push and insb push stos mov adc add xlat xor sub dec outsb xor xchg sbb and mov adcb pop lock inc jle sub test out cmp lret mov cmpsb ficompl jle dec sub xchg fidivrl shl repz add das pop hlt bound test cmp adc test loop jae mov add or cmp and push negb lret (bad) jl pop lock enter push adc rep sub cltd aaa imul add cwtl push mov pop dec ds mov mov loope pop add xchg scas stos and sahf call (bad) cmp call mov cs and push into or fcomps or push fildll sbb out mov pop inc xlat or push fst out pop adc (bad) ja cmpsl mov add mov fldcw fs adc out in leave sub pop pop lea daa pop insl (bad) loopne dec jns int3 out pushf ss and cmpsl pushf dec pop add fimul je repnz imul fidivl mov aaa jge push pop decb das inc (bad) (bad) icebp push push push mull stos cmp movsb mov lret xlat frstor rclb mov popf (bad) sbb rorb (bad) rcrb xchg xchg lret aaa push (bad) outsb (bad) cmpsb ret or hlt xor shrl jnp push cmp push jbe jge outsb sub negb mov pop lods enter or sbb inc outsb cli or roll sbbl lods jne mov outsl add jbe adcl addr16 sub aam popa fcmovne jnp imul dec inc repz aad pop xchg test movsl sbb (bad) scas add insl pop aaa push sub repnz and mov sub dec mov leave dec xchg xchg dec dec (bad) cmp push loope add cli push jnp xchg mov addr16 or (bad) icebp (bad) jne faddl adc and pop lds hlt pop cwtl dec inc pop sub xor lret xchg out pop das ja addr16 sbb mov sbb mov pushl in add sbb fildl jmp xchg push or mov mov add and (bad) in aam out (bad) sbbb sbb inc fxch out movsl add or or inc jp inc lahf dec out seta aaa xchg pop std cmp and pop in stc or sub cli das lds dec das arpl (bad) es call imul ss push xor addl arpl push (bad) cltd test popf push stos or aad xchg (bad) push negl pop shlb jno in jl negb sbb fstpl (bad) sahf shrl mov imul insl idiv out cmp repnz or sub or outsl int3 inc gs sahf pushf sub scas mov xlat ficomp (bad) rcl je sbb dec pop es pop lods (bad) cmp frstor lds test aam or adc into int3 aad hlt and sub xlat cmpsb aas lea aas mov lcall outsb push or enter stos imul mov mov pop add xchg or and lret lock ret stos or and subl mov dec cld std not sbb decl vmovups cwtl test pop jbe push js pusha dec rcll mov lds test or cmp jge add das adcb rclb sbb lods xchg inc out mov and mov mov mov fwait push loope int sarb jne test fimul push mov nop fucom stos sahf xchg in mov and out pusha fnstsw fsubl pop dec arpl mov (bad) cmp jge cmp dec fwait movsl jae push in (bad) mov in jbe jne bound add dec lea or mov lods mov push enter add xchg dec in int nop add ret xor dec and stos leave inc pop inc scas pop fwait bound xor bound cmc arpl in pop jbe sub popf mov xchg xlat inc push dec lret das incl sub mov xchg insl push mov or sub fldt xor enter lock fisttpll xchg lcall popf xor jecxz aam lods or jg rep out sub sbb push in sbb mov in jbe gs or aas into jge and jne inc jle inc mov mov adc sti shll pusha jne (bad) mov cmpsl ficoml aam mov sub repz mov xlat pop mov xor in int cmpl dec push lock aas dec push mov cmc shr mov jnp call mov push int rolb xor (bad) dec mov (bad) pop popf mov and fisttpll adc jae scas ds mov jmp repnz aaa js ja push sbb xabort into fildll les or (bad) push js in shrb icebp lock scas adc cmpsb dec bnd or (bad) cld (bad) and cmpsb inc mov and test cmc pop scas adc scas cli cmp jge lods call inc out in test xchg mov push movsb addr16 div inc fmul cmp push jne ss imul sub mov mul arpl stc inc out stc jecxz movsl fs loopne push and dec adc add das lret inc add pushf jle lea pop mov cmpsb ljmp test addl push pmaddwd and sarl ljmp push sub inc in xor pop scas std cltd mov test xchg lahf daa push popf popf stc je icebp pop fdivp out jmp push jge add int ret je out rorb insl cmp movsl js sub and or mov add inc push sub add movswl xchg mov mov in jmp fnstsw insb adc inc neg les es ret sbb xchg pop adc xor popf js pushf shrb movsb xchg pop imul or js adc jae cmc adc je or fs fcomps mov pop cmp xor mov inc mov add add or lods lds adc in test add cmpsl test mov je xchg cmp xor out cmp outsl (bad) pop xchg aaa push dec cmc add sub inc sub jmp cli inc cmp (bad) ficoml mov sub mov add sbb ljmp test or out cmp aam in repz pop mov loope pop iret cmp in loopne fdivl and div or fs push ljmp sahf and inc test pushf pop stos popf test ret faddl cmc and adc faddl xor sahf or and mov pop popa xor fidivl push ret hlt arpl mov push pushf ss mov rcrb adc (bad) enter int mov mov pop inc (bad) in ret mov jp mov movsl sbb sub cmp icebp sub xor in and popf dec push dec push mov mov jg fistl cs movsb lret inc xor (bad) mov aad jae mov jle out lret imul or out lods xor mov push and test xchg sub sub dec stos fnstenv mov in xchg sbb shr lret imulb iret add loop movsb das jo pop repnz cmp xor mov test or cmpb dec enter incb xchg bound loopne mov sub mov or ss test xchg das or out pop sub fdivrl fstpl mov movsb sub inc aas scas out lcall aad jb fwait add int dec mov stos adc fidivrl loop jg cmpsl pusha out pusha das cmp mov mov sbb test roll (bad) dec and jnp test stos pop icebp popa movsl xor push int jnp fisttpll jge sub fmull imul xchg test popa (bad) in jp sbb mov aam jb loope in inc in (bad) in mov insb fdivl sub cmp aaa pop and cmpsb push xchg imul inc mov xchg xor push cmpsl sbb rolb je pop outsb mov mov mov inc aas stos or pop jns add mov mov pop rorl mov pop dec or push sub (bad) repnz in xlat dec cs ficoml andl js mov fsubl sub daa clc mov pop outsl arpl pop cmp jge push out shlb inc jle cmpsl xor (bad) mov jb insb cld pusha and sub or jnp inc xchg pushf int jne inc jecxz mov cs aam or jns ret outsb pop shll sub enter mov pop jmp pop add mov mov jg ret xor or ret out sti cmc (bad) test xor les ja pop push nop out add insb adc add sbb add (bad) and es jg jb push negl cmp loop dec loop jno int3 mov (bad) and adc std xchg cmpsb push mov mov mov in push (bad) lods mov mov adcb inc mov add dec adc adc lock (bad) mov sbb popa es push fsubrp popa rorl mov mov insl scas xchg jge lea ljmp mov out ljmp lds jmp fcomps addr16 stos les stos cmp orb aam iret sar xchg mov mov dec lret pop jne scas mov lods hlt ss lcall fnstenv push cltd add popa psubq aam cs pop js or cli in movsb mov dec cmp aam xchg int fistpl push lds cli add pop enter fnsave pop (bad) cmp stos je mov mov dec iret pop loopne push out dec push sti (bad) into adc pusha push or adc ss stos pop sbb sub subps push dec int3 dec jl lods mov (bad) and mov mov inc push pop push adcl ret dec cmova xchg cwtl xchg jecxz mov loope xchg and xor cmpsl mov fnstenv mov jo xor into int mov rolb sub pop in pop xchg xor xor jg pop pop in sbb mov jo bound add lret imul dec add pop jno pop mov cmp int movsb xchg mov in push mov pop cmpsl jb xor jns in (bad) mov fnstsw outsl rorl push lcall inc in inc stos push inc push pop xchg add test add pop inc jmp push mov adc jp mov sub push jl cltd lret lret ss mov mov hlt test cmp dec inc mov shrl add jmp push push or push adc rsm pop ljmp and lret jg pushf addr16 repz mov imul sti xor pop mov jb stos adc adc std cwtl sub jge dec loope xor iret int test inc push popa lds int stc cs int3 insb mov mov xor dec enter sub bound pop cmpl in outsl jle loope and mov ljmp sbb out arpl cmp addr16 add popf ret arpl mov daa pop cmpsb or push dec or xchg or and (bad) das ljmp mov aam push leave imulb xchg rcr outsl pop leave mov xor cmp call push (bad) or cmp jecxz dec jno add lods imulb xchg in sub mov add test pop cmc sbb leave jno js push inc jecxz,pt push mov cmp lods adc leave push loopne test lret out iret dec sub and lret loopne (bad) shll sahf push call cmp outsb cmp push jl mov mov mov aad aad lahf out into sub xchg or (bad) mov imul xor pusha dec pushf lahf dec outsb inc push sbb out leave in (bad) mov inc gs popa lods jbe mov push and pusha mov jne jne adc jmp cmpb mov dec lods sub cli gs ss iret cltd lret fstpt pop fwait ljmp cli pop mov outsl inc (bad) dec lods sti sbb shlb sub push and lea pop pop sbb push fmull loope pop push in or call xchg jo mov add ror push xor cld test addb dec (bad) xchg jb ljmp sahf pop jo sbb jg dec sub cmp sti mov add jno popa loopne fdivrp jmp mov (bad) or andl xor mov sbb or pop insb jmp or in notb cmpsb xor gs cmp lea fdivrs add adc push add mov mov pop lahf dec decb cmpl roll movsb movsb jo xor dec repnz fs dec test repz cmpsl (bad) subb cld adc pop in test mov add pop cmpsb aas fcoms fwait out divl movsb (bad) imul mov sbb add out inc in lret cmp jne into leave jmp (bad) js push in inc inc jno add sub cmpl (bad) aaa popf ja stos mov lahf dec mov ss into into or bound sbb gs mov aad cltd inc mov jo (bad) pop dec pop mull mov rorb outsb jns aam adc mov pop push outsl sbb and or imul shrl scas dec xchg push mov dec xchg lahf cmp xor lods pop add loope pop mov xchg ljmp out push ret jge or fnstenv lret adc pushf mov pop cli daa mov and idivl cs jns test dec mov nop (bad) sbb fadds jnp scas dec xchg in mov mov mov inc sub and add pop mov jno mov pop enter repz sbb and shl xchg repz mov push ljmp test sbb bound (bad) jbe sub std inc imul xchg (bad) pop xor cwtl inc adc cmpsb inc jbe and lods popf push xor js push sbb cmc enter and dec int3 fwait xor sbb lods insb stos and cmc jl xchg clc test sbb mov sbb stos and ja pop mov mov cld shrb push mov call arpl xor outsb jmp gs pop fldpi lea in frstor xor pop adcl repnz jb cmpsb push lds int3 cli jg or mov jnp mov push mov ss and and mov sub repnz mov and sub and jp add mov fidivr pop dec push and or push mov mov sbb popw popf test repnz or in ja daa jne add ljmp fsub das jne push cltd dec insl rcrl add cmp fwait mov test cmp (bad) cmp jl push jbe das into or pop rolb xchg inc stc popa sub and fucompp out or inc dec jns outsb dec dec iret jns imul shll int3 emms pop mov fisub inc cmpl cld in imull cmp mov outsl scas mov in dec jg jb,pt or or dec (bad) mov sub (bad) ss pop xor jmp test pop cld push test jno les icebp add add push add insl clc lret repnz sarl sahf cltd popa push cmpsb xor icebp mov pushf sahf dec push ljmp mov xor test repz pop divl mov push insb cmp xor push mov jge daa loop aad (bad) push mov cmpsl xchg leave jecxz xchg fisttp addr16 insb pop push and popa inc pop scas (bad) adc pop (bad) inc mov cld ja flds pop add jo ret mov pop int and data16 cwtl jb adc sarb bound mov leave xchg testb and int3 stos jne jge mov push and lock roll movsb (bad) cmpsl jb fdiv hlt xchg js cwtl ss scas lock lret sub stc add mov arpl scas movsl and xor mov push (bad) push jg jbe out mov jecxz sbb ljmp lcall movsl mov pop out jb jecxz xor insb xor inc xchg push cmp out adc sbbl pop push mov (bad) (bad) cmp push into jns pop hlt out pop int3 lahf jno (bad) js sub cmpl push adc inc imul adc pop ljmp push scas imul pop lds cmc loop dec imull aas cmp jne jbe scas dec loope out push (bad) add xlat push xor jae mov cmp jecxz clc or push insb or cmc jp (bad) mov enter mov mov in mov push adc repz pop mov jmp fsubrl xchg (bad) mov subl xor lahf aam std stos cwtl jnp sub call push andl jne mov mov stc dec jnp dec test pop jne fidiv (bad) shll addr16 or cmp out adc mov lret push jle loop call imul (bad) fnstcw add cmp je add mov test into push popa cli ficom scas sbb add fdivrl cli test dec xchg ja sbb negb add cwtl or enter dec (bad) lahf (bad) (bad) jp and and pusha repnz sub aad sub icebp add xor pop ret cwtl ret push lock loop ja xor ja scas xchg cmpsb bnd (bad) or insb nop cmc push (bad) call out cmpsl addr16 cmpsb dec mov lahf mov and xchg add or faddl push aam loop adc in mov ds sbb adc loope test popa push fbstp jbe int3 stos data16 test push cwtl dec iret loope je push sub mov or jp mov mov repz mov sub mov jo mov into test adc cmpl ljmp mov mov adc loope mov mov lea mov fdivl outsb lret out out xchg int sub (bad) jo mov dec push sub or movsl lahf in or xchg or hlt dec test push push inc dec mov push mov sarl ss leave add push mov dec mov dec jge out loop mov mov cli (bad) ss (bad) add (bad) dec push aaa insb pop jns addr16 ret (bad) lock jae lods lcall ret nop sbb add aad rcll jo stc in icebp xchg lret sub mov xchg cmpsl fs dec leave imull outsb push jns xchg push jb shrl pop jno ja sbbl xchg outsb jle test ljmp lods clc pop nop lcall pop inc in (bad) ss mov mov xchg jo aaa test jecxz popa jge xchg (bad) sbbl or aas loope push pop xchg loop aam mov popf push das or lcall pop mov fimul pushf xchg xchg xor cmpsb imul fnstcw cmp mov adc and lret popa pop mov and jmp sbb jne mov (bad) sub lahf cmp cmpsl push push in or inc xcrypt-ctr cmpsl fcmovne cmp scas and jmp mov popf adc iret fnstcw adc stos push mov scas outsb jns fs jns or adc cmp mov pop dec movswl lds fsubrs lahf jg sbb stc and mov sbb call (bad) pusha jae popa inc out mulb or sbb pop lock add test xchg jns mov enter fs addl adc mov ja sub sub les lret lock jl mov add mov int push rolb dec int cmp inc mov div lock jle dec nop fimull insb imul inc xor hlt inc push movsl les mov jle jg dec daa loop (bad) dec inc mov gs cli subb aam lods addr16 sti in lcall lock cmp std roll test adc and jno loope (bad) arpl pop popf or push cs dec fsubr or push (bad) je scas pop xor and adc fisttp or popa sarb pop xchg cld push (bad) pop mov or js adc lea xorl aad add jecxz sub popa (bad) scas and ret ss int3 in mov fbstp into xchg pop mov mov push dec jns jl dec mov outsb fldln2 sub inc cld neg test and fs mov sbb es rclb xchg movsl aas iret push cmp fimul fs popa xchg outsl xlat rol loope loopne js pop push int3 add jl xchg loopne jle les adc fmull cmpsl and sbb sbb mov add test movsl cmp jle lods jnp add faddl aas lcall adc jnp jo mov out out movups (bad) hlt stc aas fdivrl fwait stos aam and int movsl adc outsl mov mov aas inc xchg mov mov pop push or mov cltd cltd pop js lods dec outsl pop negb hlt dec push rcll cli lret je or sbb mov jecxz inc jbe pop cmpsb push jae test push mov frstor hlt mov mov lea and mov (bad) bound push into or dec lcall xor xchg sti jl adc stos xchg mov inc jnp dec mov add add fild cmp (bad) and fs iret push add mov mov jmp lret ljmp (bad) mov out (bad) jg push adc mov adc mov movsl fidivl in xchg cwtl adc or pusha lahf xchg (bad) repz lods lea iret xchg xchg add add lds pop popa lea arpl test in xchg mov lahf enter mov cmc scas xor andl (bad) push add pop push (bad) pop sbb or fsubs xchg add inc cmp mov pop gs addr16 cmp dec mov ds sbb jecxz sub xchg pop (bad) stc inc ss mov std mov clc in add add mov es lea aaa cmpsb imul and adc negb xchg and iret ret ret pop dec adc lcall adc push mov pop pop mov js mov out adcl insb das cmp in ja scas lret mov pushf ljmp leave mov mov cmpsl mov mov mov push and sub pop push cmp kmovb out fs cli xchg pop jo mov xchg movsl push addl mov ret bound xchg js mov push mov (bad) dec mov inc sub (bad) xor (bad) jmp or jmp cltd add fcoml push and mov lahf xor (bad) jmp mov das bound mov xchg adc sub inc add in popa mov xchg scas sub cmp and stc dec hlt imul xor push stc xor inc out ret fs incl xorb (bad) cmp (bad) ja rol repz jno stos outsb rcrl pop xchg adc in cmc insb dec iret mov rclb jnp dec or mov or cmp loopne inc jg daa test cs mul push mov xor cld cwtl movsl xchg mov push sbb sbb lds and cs mov xchg inc mov xchg stc push dec mov cmp cmp or mov mov or and add or ret pop flds aad and pop and mov sahf lea pop outsb shrl (bad) sub out loope clc pop mov sbb pop shll push lock push push imul das loop test mov es inc dec fisttpl jnp inc push lret dec pop sti push enter negl and or jmp jae push mov pop js adc test rcll mov push fnstenv jg mov mov xor sti mov cmp mov rolb cmp pusha insb dec lret outsl shl insb ds pop cs sub movsl lret in test or mov or dec orb push loop hlt sub xchg jo xor inc jl xor test mov cld sub fiaddl inc shld or imul loop and cwtl jmp loop dec mov mov jle aaa aaa mov cmp cmp inc pop xor fisttpl lcall xchg aas shrb pop push addl pop pushw xchg int3 je add add shr fiadd lret jbe pop pop or mov sbb loopne ja subl pusha jmp out add leave dec ljmp mov push pop and or lods bound test push std pop sub jnp loope dec and test lcall dec jg mov cmpsb les into std test sub sub add gs movsl inc jp mov jp or aad push test rep mov loop cmp mov mov dec add sbb scas adc dec jl cmpsb xchg add push movsb mov mov ds or adc stos movsb test inc or add clc fwait mov rolb jmp and (bad) or jmp cmpsl cmpsb add adc cld push jle cmpsl psubusw je sub jmp (bad) lock xor daa movsl roll xor fnsave mov push or push lock jno adc fwait jmp add sti or out test jne out mov sbb (bad) loop call cwtl lds dec movsl or push xor (bad) mov aam push pop mov pop pop or and and pushl shll test movsb sbb dec jg sbb pop decl pop xlat xchg movsb test scas in sub adc je stos out inc ret and jg xchg (bad) aad cs cmp movsl ja std mov (bad) sbb mov imull test push sub mov (bad) jb and (bad) les fmul adc loop jae imul sub jns in fist and scas ret (bad) push push test mov daa out xchg lea dec mov (bad) adc gs cmpl repnz in pop lock sbb jle shll js and dec loopne ror and add divb mov aad mov icebp sub shrl and out xor mov push (bad) cmp xor (bad) shlb mov cltd mov push lods dec test mov push popa jmp cltd mov inc cmpsb add sub inc xchg iret sub xor cmp adc inc adc xor stos sbb push mov xor js push cwtl xor sti mov push movsl xchg sub jle bound mov and roll pop dec sbb dec adc hlt imul adc sarl push fcmovnu jg mov adc xchg or std jmp test mov or rclb outsb mov mov movsb gs clc test inc hlt in dec data16 (bad) (bad) xchg sbb sub mov mov incl inc and js mov add jge cmp clc cmpsb lcall jp cmpsl fisttpl mov mov pop cmp xor xor push lock xorl lcall dec sub in add call mov lret inc cmp push lods adc xchg (bad) pop or dec cli (bad) mov cld clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) lcall add mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in fadd bound or insl pop sbb mov mov fucomi fsubr fdivs xor mov sub inc cld push lock jg ds push mov clc jae sub or pop jle (bad) test jl cmp xor das lret loope inc push or inc test and out mov jb inc fcom lock stc cmpsb addr16 das mov mov or jmp ret xchg mov mov ficomp shrb bound mov xchg lcall jae pop ret mov add xchg addr16 add dec popa xchg push xchg mov (bad) mov call jp add add in cmp (bad) iret dec mov cmpsb push pop dec jbe dec incb lds mov mov mov fisubr jecxz lret push dec push sub icebp or cmp (bad) cmc in cmp jne lcall jno mov add push pop lret adc xor fistpll mov pop or test and mov dec jge jno sbb mov sub inc test cmp and movsl mov test sbb jl cmpsb pop jno cmp jns leave repz aam fcmovbe std cmp fiadd jnp sahf inc unpcklps ljmp into out rorb pusha sahf dec pop pop les sbb je pop rcll jno dec dec (bad) add nop push daa push into sti xchg cs add aad jl cmp outsl addr16 loop mov lods fstpt sub cmp imul mov lock xchg or sbb (bad) xchg adc sub (bad) in mov cmp subl sub stos fbld test add sahf jne gs (bad) inc push mov in sub mov pop and mov mov frstor inc daa mov in into lods pop dec pop stos mov sbb xchg xchg in ret inc mov xchg loop into popf sbb mov adc jecxz xor rclb push shr xor roll ljmp pop lahf adc in sub mov xchg addr16 scas jge push lret lods cmp xor mov cli mov xchg jmp inc push sbb lods fnstcw push push dec test sub mov loope or or test cmpsb xchg xlat fwait ds cltd inc xchg rcr adc jae shrb and test xchg push cmp sbb fisttpl test sub xchg jl mov cltd sbb or mov shr or rclb aas popf mov outsl mov xchg push lods xchg sbb or test jecxz lret mov repnz dec or ds push call sbb inc pop test out adc (bad) mov jp fist ret pop lret xorl xor add movsb stos bound sbb push (bad) dec lods push lods scas cmp fcoml push shrl jecxz (bad) mov push fistp insb cwtl fstps mov ds in inc xchg adc push dec cmpsb jae xor and dec mov in pop inc inc aam dec sahf mov mov fwait mov mov sbb mov cmp mov pop pop adc repnz mov out push dec pusha mov dec das push inc bound and jp add movsb aam jnp adc jmp xor dec cmp or test xor mov mov fcompl push aas popa pop pop mov stos xchg fidivl sbb aaa es dec sti xchg in and mov fdivl pop rcll (bad) or fmuls (bad) in aad sub pop mov rol mov dec lcall sbb dec push ss sub mov es ds jmp das (bad) les mov imul aas out shlb pushw cmp pop fs xor jns out mov (bad) aad jl xchg mov testb mov cmp push loop lret push push push mov mov xor stc mov popa dec shll or mov dec sub fwait icebp or les xchg mov icebp xchg negl scas aam lret cli fstl jge outsl repz cmp adc fucomp imul push cltd mov add (bad) jl dec adc mov lods (bad) flds shll mov cltd lock test push mov sti mov ja adc jb jb add inc jns nop js imul sbb imul mov cli inc dec xor xchg mov pop push pushw push cmc mov int3 loop std cmp and mov add jo add int sbb dec sbb xlat imul mov xchg cli loopne xchg mov xchg fdivs adc cwtl cmp or ret sbb and cmp add push test cs cmp or (bad) adc cmc ljmp or jp dec mov pop ret sbb out imul mov dec xchg cld stc dec pushf test jmp sbb popf xchg into dec lods jns push mov jne mov pop outsl jge idiv xor int3 and or xor mov xor dec lret sbb jmp and inc dec jg bnd aam inc (bad) lret xlat jo dec frstor movsb jl int sbb mov push jb int3 mov pushf mov inc pop add (bad) jmp fldcw nop sbb cmp xor mov pop sub fcmovb (bad) cmp (bad) loopne insb fisttpll xor arpl iret out mull ror push shlb add in fwait mov insb lcall jmp sti arpl jbe jecxz pop mov xor add arpl in xchg aas cmpsl fwait lods mov mov rcr sub mov sbb xor mov add adc xor jp lret mov out xchg pop jno xor sub or test das push xor mov and test test xorb jne mov scas xchg ja outsl cmp ljmp lods sub rclb pop js out push sbb cltd clc push aam dec js test add in inc xchg movsl (bad) call inc sbb imul jle pop adc dec movl push int3 in pop lods sbb add icebp xor inc enter imul pop push and mov inc push in push fldenv push sub inc into adc xchg ja dec push fmulp jne push or enter incb dec movsb loop imul popa jl xor xchg xor cld lret (bad) cmp push scas sbb inc sahf push and mov arpl add test test pop out iret push stos ljmp sbb (bad) push jb fstpt dec test push xor jge fucomip add negb push cmp jbe sub cld jmp icebp clc jmp stos lcall popf (bad) out sub adc and dec xchg (bad) sub call mov push mov (bad) idivb shr and aaa rcrl pop idivl mov pop fwait push cli lahf mov cmpsl aaa cwtl ret aaa mov cltd fwait hlt js hlt arpl imul enter repnz (bad) in dec bt and jge add pop std pop dec cli or (bad) lret inc cmc mov push insl fisttpl pop jmp or mov outsb lock dec into dec sbb daa cmp jmp sub xor lahf mov gs push fdivrs push sbb cltd mov cmp (bad) rol add js out movsb push mov xor dec in inc out pushf cmp outsl xor stc in hlt aas add jbe ljmp mov xchg mov push pop mov dec aaa or push jne stos xor adc inc imul sub mov jb xor xchg addr16 push incb enter jns sbb mov add jbe mov adc xor jae fs pop test les mov (bad) mov sahf fcmovnbe repnz (bad) jp mov dec push xchg lods lcall mov cmp sbb jle and test pop imul ss adc mov test pop ffreep mov mov or aam icebp push lods sub and gs sbb sub sub daa push leave xchg jl jb sbb sbb sbb or adc and (bad) xor xchg pop mov (bad) cmp cwtl (bad) popf inc inc xchg mov rolb sbb adc mov cli adc xchg add ds jmp repnz mov out push mov push incl jno dec inc push xchg cmpsl push sarl std adc das xor sub js js push sarb pop test call xchg je rorb sub es fcoml mov sbb test fldenv cmp push xor push popf out inc cmpsl and adc ljmp dec cmp les push sub sbb add mov imul int dec sbbb add pop adc cli push pop sbb insl sbb cld mov rol sub ljmp ss xor jns ja test stc push sbb sbb pushf cmpb pop sub dec push (bad) mov mov frndint add cmp (bad) inc mov fs cmpsb rcll call dec add stc pop imul rcll out inc arpl mov adc mov jl (bad) call (bad) fidivr ficoml imul mov fidiv aas movsl sbb mov sub jne stos jns clc imul push loopne cltd cwtl cmp ja arpl cmpsb or aad push xor subl iret xor bound sbb sub pop clc mov lcall sbb enter sti xlat les sbb pop (bad) xchg cwtl js mov fcoms cmp (bad) mov jmp jnp jge fistl lds inc pushf stos mov mov push cmpsl push (bad) and jecxz imul adc sbb cmp jnp,pn jg pop jge cmp imul call mov out and xchg int3 (bad) (bad) fwait (bad) xlat jp call sub jg out (bad) push pop in jecxz xchg in bound mov (bad) (bad) test insb or add mov jmp sarl or in (bad) fs ret dec ret jp ret mov sti add push lret pushf sarb ljmp and je pop push mov fs jno jae pop outsb aaa add push inc and imul sbb cmc pushf (bad) into test sub and das pop push and (bad) fiadd imul push fnstenv jmp jnp sub out mov mov inc in insl cmp jae add sub cmp int sbb dec loop pushl bsr pushf sub dec fdivr lods jnp pop ror cltd mov mov jae push sub adc pop mov cmpl mov outsb push nop test jae repz (bad) mov fucomp sbb and jecxz inc jle xchg xor sub into leave into fisubrl ss jecxz scas loop jg fistp push push stos jecxz mov jae insl adc fdivp sub dec mov pushf inc hlt dec jg das pop mulb adc push out std jge push loopne or and lea jg sbb ds out mov sbb loopne shll pop mov pop je pop adc mov pop push addr16 in xor add and pop jne fdivs mov addr16 je add sbb push insb scas arpl sub mov pop and pushf inc cli aaa or push push repnz cmp mov stc stos lods inc mov (bad) and cmpsl frstor test negl adc (bad) rolb (bad) xor adc push dec push jnp ss sub mov ds and xor ja or shr sbb enter jle adc ret xor nop or cmp sbb mov mov scas pusha ret arpl mov fistpl (bad) mov push mov cmp data16 add cmpsb les adc inc inc adc jecxz in jb xor loop push iret xchg lds and loope sarl mov xchg les daa test dec jbe or and pop icebp and sub cmp jmp lcall ret lahf (bad) mov jbe jb mov gs sub les jmp jb dec cmp jae movsb mov lcall or gs lret je push or dec xor data16 shlb popaw scas gs imul dec xchg dec out or push mov jo shl inc dec lahf fs popa adc cld (bad) mov insl sbb clc cmp add inc add fs call pop sub jnp stc jns sbb cld loopne cmp cmp dec sbb push in push int3 dec dec (bad) push jae in imul push test mov and adc push sub xchg (bad) or test lods pop (bad) stc ficompl lock mov xchg cli push popa xchg and sbb or sar sbb push nop fadd cwtl jmp stos jp xlat ljmp es imul (bad) push insb push and repz icebp xchg cmc inc stos push arpl fsubrs out (bad) mov adc jmp in popa push (bad) shlb fistl push and or cmp fldl push mov push fildll mov fdivr dec jno (bad) jb adc mov cmp scas add stc inc aad adc mov cs push push adc loope fwait insl xor or xor int3 or pop ret mov and or rolb mov add (bad) in sub mov aaa pop mov hlt sbb fdivs pushf mov inc in cmp (bad) xchg mov add pop inc dec add adc add loopne shll jb fnstenv jae mov cwtl sbb jecxz cmp insl in repz fnsave (bad) or cmpsl dec leave daa loopne lret sbb jl mov ljmp inc pop jnp ret adc dec test sub test xchg jne (bad) out dec pop pop popa mov and in pop arpl into mov push xchg fwait jecxz xchg xchg cld xchg fildl sti addl sbb push sub loopne lock popa aas push pop sub ret test (bad) lock push xchg xor fnop adc ret sub sub lods fildll data16 dec jne cmp mov pusha movsb sahf (bad) cld jl adc xlat add stc lods loope nop stos pop aas fidivl pop cwtl sbb sub pop mov jo getsec mov inc int3 lret ss sub lock lahf bound dec (bad) jbe (bad) aaa and in out mov loop adc or or pop ljmp orl inc inc dec cmpsl sarl mov jge pusha ss add sbb test gs xchg ret pop test in xchg sub popa push pop xor pushf aam lea or stc push insb add dec movb xchg lret icebp lret (bad) sbb push sbb orl scas fst icebp repz lret xlat xor push rorl aas sti aad cli cwtl shl xchg hlt xlat sub sbb sarl icebp sub jae mov jo int3 (bad) mov push fiadd xchg insb add shlb sub mov inc lcall (bad) pop cmp adc xchg and mov (bad) dec jb jp and movsl data16 lret stc mov aaa adc cmc out mov mov push sub dec xchg jne scas popf (bad) dec cmp dec jge,pt sti cmp xchg cmc lock xor jae add arpl mov pushf inc daa xchg nop mov mov mov pop dec leave test mov cltd jbe mov mov xor xchg xchg loope inc xchg rcrl add jecxz inc xor mov add mov movsl sahf push stc (bad) popa inc cmp mov push cli outsl pop add inc scas mov mov cwtl sub js mov sti jg xchg fcoms dec xchg cmp cmp or mov adc mov dec fs add pop jge inc shrl orb inc loop lret adc or fstp fildl lods (bad) (bad) push cmpl in add cmpsl sub fwait mov repz adc and jg int lret xor in arpl cli mov pop push jp das popf cmpsb and ss sahf mov dec push cwtl gs jge fcoms mov mov lds lea pop or mov sarb insl imul test mov arpl sahf xchg mov xchg mov imulb subl cmp shrl xor xchg mov pop inc dec dec xchg cmp movsl push inc (bad) pop inc daa sbb pop lods loope jo fdivrl orl mov jo nop ja pusha mov lea and jge mov fdivs add test (bad) arpl push (bad) mov mov (bad) jbe fcomps je aad add push sub jns fdivr xchg adc adc xor iret add out xor push ja ret iret nop int3 fwait fwait sbb sub pop mov popf jae aad cmp jmp jo inc jne insb xchg push dec adc test sbb dec add add push push insl add imul sti test xor and xchg pop in pop adc in out push mov mov pop and push (bad) mov ret jnp aaa les fst push and rorb mov xchg cmpb and cmp cld or arpl sub in sub pop adc add (bad) cmc loope popl int lahf inc or cmp aaa push pop mov pop adc cmp xchg xor sub dec and shll xchg adc add minpd adc push lock push out add in mov nop xor test mov xchg xchg stc mov (bad) inc testb lea outsb (bad) and in pop inc pop aad push lcall out jge sbb enter inc test daa add loope and aaa or sbb sahf mov pop or js shl in and out jecxz aam mov jne jb (bad) inc sbb jb sub jb mov mov adcl sbb dec add arpl push lock xchg je or incb sbb fildll rcrb jae test push adc fwait add roll pop pop inc pop pop idivb cmpsb sub cwtl rol cmc ss sub ret sbb pop ljmp sub out loopne jb sarl xchg dec pushf cltd test mov adc jge (bad) and dec xchg ret pop fstl cmc std in (bad) mov xor mov push fiadd cmpsl cwtl cmpsl lods mov popa push mov jl xlat jl js or push adc inc cmp aas or or dec out fisub shrl pop xchg loop ret imul movsl add ret adc push cwtl push in sarb out sub out push fcmovu mov lahf dec iret (bad) adc mov repnz or jmp or (bad) jmp jns scas es movsl inc fmuls ja push xchg xchg push rcr imul add int mov in test ds mov repz lea mov sub imul adc dec inc dec and test roll and es or jb xor mov jb xchg iret xchg or js imul fdivrl outsb xor cmp dec out adc mov xor or mov (bad) cmp add bound pop xchg cwtl mov mov das sbb push mov lcall fidivl inc add rorb sbb stos push jns call xchg cmp push push jnp and bsf (bad) idivl test mov sahf or jp jp js mov mov hlt lods mov jno inc push loop or and jp or mov adc cmp repz and dec test or sub (bad) and icebp sbb sub cmp movsl jmp int3 push inc jecxz push sbb dec mov inc outsl adc rorl mov jae daa push outsb push (bad) mov pop pop rclb loope jg sub and (bad) mov dec adcl inc enter mov nop mov aaa xor inc sub inc inc dec sub test repz in dec into imul add rorb ret fidivr lods xor jo cmp push push pop imul cmc subl inc xchg pop (bad) arpl jmp movsb cs inc outsb lods repnz std push inc add (bad) in jl adc mov or (bad) cmc sbb mov add inc adc lods loop mov mov repz mov repz scas fcoms test cmc outsb fwait xchg leave xchg je adc push (bad) hlt scas (bad) out xchg mov sub and outsl cmc insb add sbb sub call mov and and or mov add stc push adc and pop mov inc xor decb lds jecxz inc sub lret insl cmpsl inc push mov into out dec in xchg jl mov cltd mov push inc jp imul or js outsl add std movsb pop inc jmp and pop rcrl or push xchg ret cwtl aam cs sub lahf fstpl ret lds cmpl mov mov cli (bad) xor dec dec mov mov fldlg2 (bad) or sub fnstenv inc xor (bad) and add push and int3 cli pop dec out shrl xchg clc push (bad) mov mov push sbb das jnp (bad) push insb (bad) int sbb icebp inc push mov adc dec pop mov mov mov or xchg movb push cmpsb cmpsl cmp sar adc js add test jl dec mov mov lods cmp pusha cmovp inc mov sub imul xor mov popf cwtl push jp lods negl movsb out iret mov jl cmp jno,pn je dec je lock test fisubrl lds aaa or adc and fucomip popf xchg cmc data16 xor and mov mov dec out test xchg scas nop sub arpl orl ficompl std stos rcl loop mov loopne xorb pusha test sub pop ret jns push or sub xor inc pop jp pop mov aas lret std mov call popf xchg in ret mov lret scas (bad) mov enter imul (bad) in pushf icebp dec pop ret sti push rcl and incb mov leave lock std pop fdiv adcl add add mov jns sub call sub mov inc add ds and pop aam mov jb mov jnp adc lods mov jge bound jmp or jge xlat lret jno xchg jmp jae xor sub cmpsl imul cmpsl mov dec sbb (bad) pop inc in (bad) mov dec sbb clc fs xchg test test std mov inc sbb inc or imul jmp lahf push mov inc or in add fsub mov stos or enter mov push xchg movsl jns aam add imul mov cmpl mov ljmp push mov push and pop adc sub add rclb data16 in cmp mov cs out cli jge int3 jae xchg add cmc imul aas (bad) dec xchg push (bad) dec mov push cmp int3 test pushf xchg xchg fld adc orb mov pop xor (bad) jl (bad) mov jnp in fwait mov pusha cs fist mov idivb js inc mov lahf mov notb out (bad) iret insl and imul aaa mov jno xchg int3 cs xchg mov and fmull test lcall pushf fcoml insl xor sub (bad) xor push idivb inc in sbb out pop cmp add mov cmpsb (bad) fcmovbe push xor cmp xor inc xchg fistpll lock das loop popa cmpsl mov cmp pop aas setns aad xor jecxz jae xor jbe xlat mov lret shlb lret (bad) popf lds ds cmp sbb into sahf or test inc add bnd sbbb inc xor addr16 imul pop xchg push lock jmp cmp push stos add imul pop shl jl add xor cmp cs xor enter push mov mov sbb xchg rolb enter add jae lods jl std pop mov shl mov fsubrs push scas stos data16 dec out lods out cmp xchg mov push lock rcll call jp scas cmpsb inc stos mov or mov mov push shrb sub lcall add mov movsb ja adc (bad) aaa sub fiadd subl movsl push xchg test mov test cmpsb add notl loop mov outsl es xchg stos ljmp cmpsb xchg shrb sahf sbb adc or push insb mov jmp icebp xlat mov and cmp and (bad) int and cmc add js imul xor cmpsl jmp ret lret ret xchg bound (bad) repz aas les or inc and dec sbbl dec dec das cmc adc int3 test aam adc dec lahf sarb sbb xor xchg mov std push (bad) pop (bad) rcrb ljmp sar int3 mov jmp mov insl fs scas nop mov jnp jno daa xchg lcall jp hlt jecxz or popf mov popf pushf cld xchg ja cmp in push into cmp mov pop pop js jb cmp jp je cmp insl nop (bad) cmp hlt jl negb ljmp fwait (bad) and xchg sbb sarl add mov loope mov or sbb or sub daa dec add popf push dec and cmpsb mov xchg and push mov mov sbb mov fdivl jecxz mov jg je out dec mov xor mov das push mov pop pop pop adc insb xor cmp dec xchg xchg add movsb push add jmp xor jecxz or adc xchg pop jbe fldenv ret and sub fs sbb div (bad) cmp sub xor mov cwtl or pop loope xchg mov push jo mov or ljmp int popf jb jmp bound inc test dec test and sbb push shrb out idivl sbb or jbe cmp lahf pop dec ss push lret mov (bad) stos push mov cmp mov ficompl cli bound mov lods das and cmp (bad) pushf mov arpl in push ss aas bound dec loop cmpsl xchg or pop cmpsb mov add xchg inc out pop mov outsb in mov add (bad) fs test xchg (bad) xor popf out (bad) (bad) pop faddl stc icebp cmpsb subb jle add fcmove cmp dec pusha xor outsl std push loop pop mov aaa or sub divl loopne ret addr16 js xchg lcall jno movsb cmp sub or lods lods scas xor dec push les push push push les lods pusha stc sarb insl xor int xchg xor and inc bound push cmp sub cmp aaa mov jmp adcb in xchg mov scas push cmp mov push loope jmp xor cmpl xor lock movsl xchg add add out pushf mov mov jge lods sub pop sub gs out xor xchg fldenv mov or inc jbe jmp in mov and pop lods mov repz rcrl jmp push inc adc mull mov pop push imul pop imul mov push ret jne mov mov dec jbe das mov inc sti xchg add add mov sbb xchg and sub inc fdivrl xchg jns or mov (bad) push xor sti in jmp jno lds mov add mov stc movsl xor add repz mov jl adc push jae lock jb mov in jl cmp dec and pop movsb jns icebp bound sbb aam mov outsl sbb sbb push out into fisubrl imul pop pop test sbbl sahf testl xor sahf rclb cmp xor push jnp cld lahf andl xchg xchg cmpsl aas arpl add fsubrs in adc adc adc int adc arpl sbbl stc (bad) loope mov icebp sbb or pop (bad) dec pop sub imul dec roll pop fs mov into loop lret and jg sbb jmp roll aam xchg (bad) test pop leave mov sbb popa xrelease mov sbbl popf movsb jecxz sub (bad) cmp mov push (bad) and fs ss gs mov cmp inc jbe push sbb aaa sub mov xor movsl lds jp (bad) bound add and notb ret push mov stos sub mov stc mov rorl sarl dec cmc inc imul sub sbb and int3 je es sub pop xlat pop xor cmp mov int dec fildll lahf lahf mov add dec test push push rcrb jecxz addl in repnz sbb lret fdivp push pop subl (bad) aaa nop shl sbb fwait mov andl sahf addb mov cmp inc stos rorb mov rcll loop cmp mov pop or mov cmp sbb sub adcb (bad) jbe jmp dec cmp sbb cmpsb shrb pop push fnop push repnz das inc fdivrl (bad) lret fild aaa push (bad) mov lahf sub pop mov ja into out repz inc mov inc loop xor inc cwtl mov sub sbb jl (bad) rorl (bad) mov stos rorb cmp pop adc pop lret in xchg in mov jl mov scas or xor enter test inc mov loope stos scas cs mov lds std dec jno jb jo in sbb popf dec ds dec push ljmp dec (bad) mov jmp and lahf sbb (bad) imull jl xchg shll or cmp adc pop and mov adc jb nop jp hlt xchg aaa gs js cli mov data16 rcrb aam mov xor dec pop push or mov lahf push push ss pop insb out pop mov mov mul sbb mov mov adc mov orl stos xchg push out mov pop or into fstl mov cmp mov sbb mov mov cmp ret add mov inc scas jl ds in mov mov mov cmc sub lods (bad) (bad) test js sub icebp push push loopne stos cmc nop in sbb jecxz das test (bad) xor push jle jmp inc pop mov push std popa pop mov loopne and sbb cmpsb fimull dec pop insl cli inc jbe xchg popf inc (bad) sub lea inc in pop shrl and out shlb aam test aad jne daa ss rclb popf (bad) fxch inc ficom int jnp push pop push fmull pop jmp dec inc out lods mov imul lods dec cmp insl ja inc jbe inc xor fisub dec outsb xor and test outsb push dec mov add fs mov add loope xor adc cli test sbb or cmpb lds and mov and and daa adc mov aas or insb andb outsl out cs int ss adc leave mov mov push jmp lods and jle leave push cmp cmpsl mov xor (bad) jge or cli dec push mov rclb popa inc (bad) dec nop aam jp cmpsl add js arpl dec jge or cmpsb sbb sbb test add ret add adc adc mov push inc cld je loope mov xor jge icebp imul mov (bad) xor add inc mov rorl xor xchg mov (bad) in add xchg and pop fidiv ja adc dec inc push mov fist (bad) fcomps and dec call mov es addr16 pop lock lds or push sub mov push adc mov ret idivl or scas push dec in lods mov ret nop push sarl xchg xchg (bad) loope adc cmp pop aas mov outsb inc and xchg xchg incl (bad) das fs lods pushl pop (bad) mov sbb push (bad) or cs js inc mov pop mov xchg mov pop test push lock fimull lods mov and cli pusha jo std stc mov xchg aad cmp insl movsb js enter push arpl cltd pop or mov inc or popa nop sub push sbb cmp popa insl xchg sbb fcmovne or mov loop repz fadd repnz jnp stos pop xchg or pop stos es push adc inc std pop fcoml fmuls minps pop pop subl sub mov mov cmovns movsb and ret (bad) xchg add movsl add mov lods sbb repnz lods (bad) xchg dec sbb inc data16 cmp sub imul mov cmc mov hlt subl mov jne loop xchg mulb stos std popf inc and inc test add cld mov fidiv (bad) xor jo mov cld cltd (bad) pop ffree xchg cmp (bad) jmp jae out data16 int3 push push sub mov adc adc pop scas iret push pusha add cmpsb inc push loopne orl xchg mov pop xorb aas mov dec negl aaa xor imul mov pop lahf stc add inc arpl icebp and push rol fsubr cwtl cwtl fdivrs mov in jnp push jne adcl icebp cmp xchg pop lds std cmc or popf lds jmp inc outsb jl or loope int3 mov jbe jmp sbb mov or add in popa cmpsl push lock mov ja fcom lods inc push jg loop inc and cmp xlat adc or push fs sti ss xlat and mov jmp sub les dec pop add lods pop mov sbb clc sub and ret stos nop inc or mov dec xchg (bad) and add into scas xor xor int3 sbb jb xchg scas sub test dec clc jns out mov inc mov adc pop sahf mov aaa mov inc dec pop inc leave jg lret cmc inc scas xor jne jmp inc in into push shrl add or sar stos jl mov dec fsubr mov mov mov std pop jl (bad) repnz pop insl sbb mov lods loop bound sti cli lret xor pop mov inc xor ficompl mov pop mov adc mov xor xor inc sahf outsb xor add les xor mov inc std xor and js popf inc push test stos pop pop dec cmp add in push lcall aaa mov mov (bad) scas xchg dec jp test inc push scas fwait cmp test into cltd or bound cmc loop adc dec (bad) cwtl std pop addr16 pop push pusha cld fild shlb cmpsl mov (bad) sahf repz lret pop push inc inc mov (bad) ret (bad) cmp movsl push cmpsb inc out fnstenv pop sqrtps adc negb ljmp jecxz lea inc add inc xor push paddsw and jl cmp addr16 test mov jl test outsb xlat xor stc or movsb cmp es and lock fmuls repnz test fisubr cmpsl test and adc (bad) fadd pop dec pop mov inc adc push xchg mov lock cmpsb nop and sub sbb cmp pop test pusha mov movsl cmp mov mov (bad) adc jecxz arpl push mov cwtl pop repnz mov call inc inc mov pop adc (bad) (bad) mov ficom cmpsb into popa ljmp out scas adc sbb push xchg out or add push lock pushf mov push xchg xor imulb loopne fstps stos pop jb insl lds outsb stc mull and aad (bad) cli mov jns je les inc das inc out test das das (bad) test lret adc jecxz lahf std sbb or push mov add jne movsb pop xlat ffree fstpl pop ja or (bad) cmp pop (bad) sbb psubq push shll lock and inc arpl sarb add cwtl inc mov imul mov inc je xor into dec mov cmc sbb cltd push inc cmpsl sbb mov pop jmp insl xlat sub cld lcall nop sbb dec les pop fwait cmpsl (bad) aam pop cmp adc sti in test jmp outsl or push pop sbb adcl leave (bad) int mov xchg loopne loop mov push jns jb repnz (bad) mov hlt lret cld ss adc scas notb xchg cmp dec data16 pop adcl cmp sbb sbb les jecxz aam mov xchg sbb pop mov sarl outsl out adc out xchg push xlat popa (bad) adc xchg cmp mov xor sub mov xchg lds popf xchg adc cmp ljmp xor push int3 fdivs shl in bound add cmp sbb push int clc lock movsl xlat sub push xchg mov lea fldt outsl pop add add mov cmp xor sbb iret sub sub jbe push imul hlt mov lret add and and mov lret sbb lods add pop or adc dec mov lmsw adc sbb pushf xor subl push (bad) ja jns push fcoml lods jmp lahf cmc fadds sbb scas fdivl mov and into jns arpl pop dec hlt je inc mov or and imul and push inc ljmp int push pop sub sub stos test sub cmp pop (bad) mov loope xor add inc shr clc sahf int3 movsl and mov jg mov je lea jne arpl jno ret sub cmp ja cmp cltd adc (bad) xor add adc mul das sti mov repnz repnz mov xor mov int3 (bad) or ja cld pop inc sbb jecxz lret add adc cmp aas repz es inc push test add sub pop aas xor gs es cmp xchg push and enter scas inc xor sbb in pop ljmp lods push push jecxz cltd add xchg lret add push mov ds sti mov mov jp adc mov cmp or inc mov mov iret mov jno das aaa loope push dec push lds fimull and mov xchg push pop sbb xor mov jmp les mov jge and jb (bad) mov fisub sarb and sub (bad) and mov mov sub or jo iret xor push stc mov inc shlb inc or (bad) clc xchg xlat mov fimul stc cld arpl lea cmp sarl sub sbb fwait xchg xchg ret jbe mov push iret shrl mov idivl iret mov fstpt xor inc dec push out popf xchg xchg orb je sub ror lret pop mov and xlat negw fcmovne insb push mov scas mov add scas pop push nop repnz mov (bad) (bad) jbe test test fdivs fisubl int lahf sub inc xchg mov faddp mov aas add inc loop inc push mov pop in es xor push mov add jbe mov rcll jbe insb or gs push fdivrs std cmpsb inc pop push imul mov inc pop adc ljmp sub mov repz pusha mov push and push (bad) lock push xor push cmp stos adc test cmp fs push mov dec mov jmp sbb adc and dec rcll mov (bad) (bad) ja shl push icebp cmp push sbb repz lahf jecxz add pop inc add inc mov into mov mov dec and fadds movsb xchg sbb jne loopne add sti inc xchg xor add or (bad) rolb cwtl fwait in adc dec sahf cmpsb js jno lahf test mov mov mov sbb pop xchg cwtl aas xor hlt xchg lret xchg std ja cltd xor and dec push divl pop movsl pop das fadds icebp xchg jae push lods (bad) mov fcmove negl sarb test aam andb jnp jns jno lahf sub mov mov loope xchg out add mov inc add es stos sub jmp (bad) xchg mov jb mov int (bad) sub lret dec es sbb or push inc sbb ds fwait push sarb push imul fs ret mov xor xor mov fstpt xor xor jmp ficom sub add nop shl sbb xlat xchg or out hlt icebp sub add fiaddl outsl mov (bad) in xor mov sbb lods pop dec fwait scas dec xchg pusha push fisubl sbb out scas ficomp hlt mov mov sahf aaa lret cmp lea mov data16 xor mov loope cmp clc fiadd jns lcall scas xor xchg sbb xlat dec fadd push test clc mov cmpb leave insb mov cmpsb fsubs add cltd inc mov cmpsb mov imul adc push popf xor outsb out ret sbb pop test fwait in icebp (bad) popa add (bad) fdiv dec out lahf pushf out fxch dec jbe test lret mov and push shll cs cmp int mov xor mov push hlt add pop push stos lcall mov out popf test mov mov lahf ret loop and jno outsl nop xchg std xchg movsl mov mov and jle xchg fs sti mov pop icebp mov notl (bad) ljmp cmp sub mov data16 xchg and xorl fwait scas test and movsl add rorb cwtl mov popf jge mov pop inc jecxz test (bad) jnp and add push xchg pop mov push rolb scas hlt std std sarl adc cmpsb mov dec cli sub (bad) add call and (bad) cmp int bound (bad) mov divl je and js jb popa add insl lahf push call pop cwtl cwtl outsl cmc mov xchg xchg cld addb inc outsl aam das sbbl ret cmp negb incb cmp xrelease push sub fbld sub inc rcrb es add jge cmp dec add incb aad idivl cmpsl (bad) jecxz mov lcall orl pop pop mov cld push jl in lret in outsb lcall push jmp push add sub fwait movsl vpmuludq sti push add fistpl icebp push mov loopne add ret cmc inc fbstp pop xchg cs inc mov or (bad) xor mov jp push lods dec cmpsl pop jle into fsubrs xor push (bad) cmp aad adc int jne int stos adc or orps idivl je or mov (bad) gs icebp lock in add jne in frstor push jl imulb stc mov outsb jp (bad) (bad) ds cltd je je lret add xchg negb push mov adc inc lcall adc std adc pushf add xchg insb dec sahf lea adc or lahf fcmovnb repz imul jno lock xchg (bad) cmpsb and push rcrl sahf jnp sbb pop int jecxz rcll das bound mov and cmp ror icebp scas dec icebp fild xlat inc ret mov ror pop jb in push jmp push cli sub xadd sub cwtl les xchg cmp mov andl ja hlt mov ret mov jle (bad) jns fwait shrl insl roll (bad) cli lret (bad) inc lds lods gs push (bad) fldl or nop add xchg rcl mov inc mov inc push in sub icebp dec js movsb mov push test mov bound popl icebp mov jnp and pop fiadd inc xor mov adc je mov and xchg inc es jae push pop sub cmp push cmpsl sub je inc cmp pop jmp fcoms push call insb mov mov insl dec orl pop pop jg jnp dec stos xlat add xchg jns adc mov push nop outsl arpl adc pop pop jo push xor (bad) jns mov and loope mov test cmp xchg sbbl scas repnz push xor pop rclb aam xchg dec mov out lret inc pop ljmp sub cmpb and insb inc mov scas push ret fidivr push or push data16 add ljmp pop popa cld mov ljmp int3 outsb sbb cld lock inc leave sbb or xchg cli cmp sahf dec sub inc jle push dec stos push jne and shll jmp mov loope sbb test mov (bad) sbb inc inc lea mov push in adc cltd ljmp out lcall jne xchg lahf in dec mov or pop hlt add inc lahf fist jle,pn mov or rolb mov mov call and cmc add pushf or or ret inc (bad) xchg out cmp jno mov push js data16 test push push nop fistpll cmp sarl aaa test add or dec inc bswap test movb pop add jbe ficom xchg (bad) jae fisub mov mov je or (bad) push sbbb shlb mov pop sti or in or les and bound in lcall jle sbb (bad) cmc sub inc push cmp sbb xor cmpsb inc cmp inc cmp fnstcw imull in aam (bad) imul or insl or dec add push adc call int loope repz inc cmp push cli in jns mov pop add add je xlat cmp call ds sbbb (bad) pop jecxz movsb dec out stos fdiv sbb jecxz (bad) movsb scas movsl mov xchg mov sub push fwait (bad) movsb dec cmc jge loope,pn (bad) arpl (bad) mov jge sub mov adc loopne push stos das inc repz mov data16 lret fwait sub mov enter mov movsb lcall add pop pusha pop lods test loopne ds lret aam das mov mov and sub lods and sbb xlat sub cmpsl icebp or dec subl nop int3 or push ret addb aas cmp rorl mov jno dec mov jmp daa lret cltd xchg nop adc cmpsb xor fldcw adc scas inc lock wbinvd add sub hlt insl pop out aaa stc cmc mov (bad) cmp pushf and dec adc lock mov dec pop dec pop (bad) xor add icebp hlt rorb pop inc mov mov push data16 orl pop cli ret iret dec stc jae push adc int unpckhps mov int3 scas test jl sti fbstp fucomip sbb push int3 xor and pushf ljmp pop out in into sahf ljmp dec xor or xadd mov jle clc mov and fwait not pop push bound mov mov (bad) fcmovnbe daa test dec imul idiv dec jecxz shr popf jl sahf mov inc stc or ja push lahf (bad) nop lds je sub test scas out push cmpsb xchg lahf (bad) dec sahf cmc sahf xor cli pop cmp imul ret lock repz movsb hlt and push movsb xlat rcr pop jp test cmp pop ret add call bound aas xchg push pop mov iret aad sarl (bad) pop pop adc ljmp inc lods icebp mov lahf lods jbe out cmpb (bad) iret test mov push pop pop sub ja fbld std insl stos push inc in mov lods push cmp cmp xor ja int3 jbe dec cmc sub es fisttpll mov in lock xor push mov ljmp enter faddl ffreep mov divl xor and int3 mov and rcrl dec daa movsbl popf scas iret loopne jmp dec fsub insb shrl sbb arpl icebp adc aaa stc sbb repnz cmpsb add sbb sub cmp lahf xchg xor ret (bad) pop and test inc push in mov and cmpb cmpsb test scas iret popf push mov lret cmpl mov (bad) repnz aas dec popa pop aas fildl fist xchg add jns in pop cmp stos cmp popf dec sub lods or push mov scas lods adc ret fs cmp in inc imul xchg aaa in and cmpsb lods dec js mov inc stos mov das sbb in cmp test jne icebp ljmp inc mov arpl add popl mov mov jecxz fucom jbe cmp stos subw adc lock fnstcw adc jo int sub imul pusha mov sbb mov testb or push repnz lret inc jmp mov pop adc add sbb adcl sbb push movsb jg je data16 cmp sarl (bad) cwtl dec mov mov insl rclb fsubrs push sbb inc dec iret adc add jmp xor das clc jmp imul stos aad inc cmp or or cmp push sti mulb insl xchg xchg scas pop xchg aaa inc test xchg push mov xor jmp sub jnp cmp mov inc sti lods das lret sbb mov (bad) (bad) daa pushf mov sub lcall loop test mov push xchg vunpcklps stos jns dec pushf movsl adc fwait lods (bad) xchg icebp jnp push xchg xchg data16 cmp push cmp iret cmp mov mov out mov je fldcw ljmp add inc pop sub cmp stos lods mov pushf push sbbl jbe dec lahf arpl lahf or xchg jne lret sub jnp push adc pop rcrl aad loope cwtl lea lcall inc lds xchg pop clc and movsb sbb adc sarl dec mov pop or sbb outsb pushf (bad) cld add in cmpsb cmpsb test das or lds cli mov imul pop jecxz dec pop mov cs dec and (bad) dec cmc push dec js add cmp fistl xor mov sti jmp fisub pop cld xchg or mov add cwtl sahf imul jp push push push pop push scas fdivrs adc flds sub and dec gs dec movsb lods cmpsl outsb xor enter xor pop push (bad) cmp cmp fs xlat fidivrl out inc sti loop into fmuls mov push inc xchg adc mov lods loope inc rcrl cmpsb mov outsl cmpsb mov loop dec sub sub movsb xchg inc ds xor add cmp mov cmp inc pushl cmp sbbb das xlat lahf mov fmull inc adc out popa daa fstl pop or std gs jmp ret hlt jl and mov sub ret and (bad) mov popf mov cmc xchg ror mov mov xor xorl iret lahf sbb push cs cmp cld xchg xchg or lret fmuls and call mov aad dec sbbl (bad) stos scas insl pusha jge aad imul bound cmp pop jno imul sbb pop xchg pop outsb xchg fstl add mov aad in jae repz insb dec push dec inc es xchg inc push (bad) aam ljmp out in aaa mov hlt std (bad) and imul mov negl stos popf sbb adc test imull in pop pop leave or lea jne je daa push adc subb movsb scas dec aas jbe xlat mov jne out xor sub mul cmc xchg jle mov stc iret mov (bad) loop sub out addr16 push inc xchg pop add shll fisttpl in mov out push shll into fs cli mov jge inc sbb xchg sahf pop test push popa aam (bad) mov push adc fs ss add cmp xor shl inc mov cld pusha out ret test push testb cld (bad) pop call xor mov lret aad xor add dec inc data16 mov dec sbb pushf (bad) jb pop mov lods adc test lds mov add jge (bad) sbb movsl popf cmp mov das push aad call ret loope or and mov out daa mov aas loope scas xchg sbb cmp add and idivb (bad) ror jmp movsb fild fs ss add ss jb movsb fs out mov stos stc xchg (bad) jno into outsl inc pop mov mov sbb pop sbb call push ss sahf mov and adc scas aas pushf pop in adc mov sub mov js hlt mov mov sbb xchg mov xor cli mov push jnp repnz dec xchg dec out xor sub test push in cmp (bad) (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle incl cld pminsw xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec into dec inc inc push js in fadd bound or (bad) sbb insl (bad) repz mov and lock fwait stos add lods sub jno in xchg push cltd dec into loopne loop xor jmp fiaddl mov mov test and dec mov mulb scas adc and insl sub push shl loop iret xchg lcall loope xor inc mov adc sub mov sub dec inc popa xchg mov jg pop dec mov cmp mov mov test sbb daa inc out loopne lcall cmp test fisubl sbb push clc fcomp out out xlat adc fsubp push jl cmp mov mov push and ds (bad) repz xchg xlat sbb popf and outsb rcl les sub mov out mov orb jnp jmp lahf add popfw xchg (bad) pushf push hlt outsb jno adc add ficom inc inc and (bad) pop sub inc fist mov or out lds push ret aaa rorl scas xor out shrl dec repnz cmp cmpsl sub or loope mov sbb mov imul sbb iret (bad) adc or or hlt mov out mov daa push sub (bad) pop sub add clc push add push loope icebp dec data16 and out (bad) xchg in int cld fimul add xchg subb out scas pop js into adc ss (bad) inc sbb xchg push push cmc jns xor ss lods aad lock mov sbb icebp push sarb out aam daa mov ljmp pop adcl insb push mov pusha (bad) dec jg or adcb or ret sbb inc pop push stos call cmp cli pop jle and in mov lods and les inc inc (bad) mov (bad) aaa dec aam (bad) fild cmp push dec push int3 shl mov test pop push pop mov fisubr bound jl pop dec or aam out imul popf aam out test pop push rcl mov push je jae inc push mov push cwtl pop (bad) fdivs jns lcall cld xchg inc lds fsubs je pop cmpsb rorb ficom rclb sbb jle cmc sbb testb cmp cwtl jmp nop lea push mov mov pop inc stos call fisub ret jl pushf imul sub mov ret fcmovne cmc orb add in sub inc test mov pop fcoms movsl inc shrl aaa fistpll jb mov dec push loop aam fadds mov lods jbe lock cmpsl in mov daa or scas idivb iret aas cmp pop xchg sbb and push adc push pop arpl pop mov rcrb and rorb fmull lods jp mov inc cwtl imul push cmp mov sbb fistp xchg cld (bad) hlt and shll rcrl repnz pop (bad) popf or (bad) cmpsb movsl sub pop lock push pop icebp leave cmc dec test inc lods aad ds mov loopne pop xchg mov mov jnp orl lods repz jecxz push push bound enter and cs imul cmp mov lods lds movsl mov and sbb adc lret inc pop xor les jbe sahf xor je adc dec mov xchg jo and adc sub fbstp inc repz (bad) (bad) cld dec mov lock out int3 in loopne (bad) lret aad sar cmpsl pop mov (bad) mov push dec aad mov or push xchg ret (bad) jle inc ret jnp mov xchg decb es and in dec ret jge jecxz cmp and stos ljmp cltd cmpsb cmpsl and mov xchg fstl sub mov hlt shr sub scas xchg outsb jae mov push fcoml adc popa xor incb data16 sub add sysenter aaa (bad) rcr add jecxz dec cmp stc jp orl imul sub int3 jl push jecxz nop dec lcall ljmp aad mov test bnd fmull iret pop jnp std mov xchg leave jb jno add push add push mov bound or decb mov mov and sbb push adc jmp data16 outsb or scas adc (bad) mov (bad) hlt (bad) repz fldcw lcall int jle out mov cwtl mov dec mov inc xor lret mov popf cli imul pop push mov rcll sbb and outsb cmp scas sbb into fstpt cmp sbb and sub out ss divl inc hlt jge dec sub pop dec adc inc and lea sub dec outsb adc inc lahf pushf sbb xor lcall call ss mov inc mov insl push jo negb addl pusha jmp je fmull pop jle imul push in push mov cli and and adc mov mov movsb imull mov push in int imul mov imul lcall mov ret mov icebp inc (bad) lock cmpsl sbb stos mov mov mov ret jns pop xor (bad) loop fsubl cs out loope cmpsb pandn movsb inc xor gs xlat (bad) stc out enter push loopne hlt and jae mov in ljmp lock jg scas add lock aas jge out mov adc out shrb push (bad) repz dec dec in sbb adc bnd cwtl jge add sub inc xor xor lea add or xor xchg mov dec adc and outsb pusha sbb add test sahf push dec leave pushf sti xchg jno in lahf fwait xchg pop mov mov adc pop bnd push pop mov jno add cltd hlt test out (bad) repnz pop stos adc xor scas push in inc orl cwtl add ja mov adc aam pop (bad) cmp add test sti psrlq jp or mov js test ret push daa cmp ret jmp insb xchg imul dec sub dec (bad) push sahf lods loope jmp leave lods or or insl push insb cld adc add adc pop sub xchg push aaa out rolb fbstp mov pop push fwait jg or leave adc ret test fiadd inc mov sbb lods inc icebp sbb bound fcmovnbe mov adc repz push outsb cmpsl icebp xlat mov cmpsb push mov mov daa cmc fs rcrb cmpsl mov adc jmp jl jp push mov mov jle inc aam pop in fldln2 repnz ret outsl test mov inc add add xchg push lods loopne mov insl cmpsl lods mov stos insl mov mov inc mov and int3 cmc push loop sub pop mov stos cmpsb ljmp nop add std xchg xchg test jmp cwtl or dec push push dec jecxz pop jg scas daa outsl dec jo (bad) jle sbb jmp and pop shr sub push test xor cs mov fist mov in mov cmp inc cwtl xor les frstor ljmp daa (bad) jl out cmp mov shlb scas cltd repnz and outsl rorl mov or mov in (bad) adc lret cwtl nop adc xor sbbl dec cmp dec push push cmpl arpl imul mov cmp std mov in into cld int3 cmp rcr int3 push push sbb sbb add cmpsb push xchg jmp jno pop cmp bound mov sub (bad) movsb jle int3 ret fdivrs data16 in pushf xchg mov add lret and (bad) push sbb adc lahf in add fnsave jno mov mov std cs add xchg fadds jae jg inc shrb lcall push into lcall cmc rcrb and jae mov lock mov mov (bad) mov xchg insl aad sbb add xor sub jb aaa outsb cwtl aaa out push push insb stos iret mov fdivs (bad) movsl daa dec mov loope xchg xlat cltd push gs mov jnp ljmp mov loope cmp arpl sub subl push add fdiv int3 xchg data16 xchg fadd fbstp repz mov add daa mov jecxz iret cmp xor cmp inc mov leave sbb std outsl (bad) push and sbb adc pop mov ja push mov adc mov mov mov jbe shll lea fisttpll cmp in pop mov out sti and cwtl mov jecxz outsb es xchg mov dec pop adc outsb and push dec fs dec into xchg pushf sub sub jmp cltd push data16 jno pusha mov add aas sahf ljmp cmp data16 xchg pop pop in pop cmp fildl pop loope mov aas inc xchg dec nop repz pop add jg mov loop clc xlat call xor inc pop mov cmp pusha or dec shr insb mov xor xchg mov mov mov dec repz cmp aad add cli aad enter pop gs sub lret rolb adc pop dec insl fldcw cmc mov push (bad) leave dec test outsb mov aad add fldcw mov sbb shrl or sbb pusha test or xchg sub (bad) cltd clc adc inc iret jno fldenv jl das dec movsb stos movsl and jle xchg out jae xchg inc jno sti pop mov inc sahf lahf inc jne mov add fldcw xlat lret rcr dec mov mov loope lock xchg fadds pop lods adc sahf fsts aam enter add scas into xchg or jmp insb popf dec shll pusha shlb outsl insl (bad) push leave ja jl push sahf mov dec je push popa sbb pushf adc (bad) or pop loopne pop add inc sbb mov dec dec jmp push pop jo daa pusha movl jl insl addr16 jg cmp or adc mov pop xchg aad mov dec dec lock add jg scas gs test pop out add ja (bad) repz adc push test scas inc cmp xchg jae add int3 mov scas dec call inc push adc jp and mov mov xchg stc stos xchg push push sub sbb fs loope aad dec xor scas sub sub test or cmp (bad) mov xchg mov aaa xchg dec mov in dec push sub int sbb div fbstp cmp dec and push mov jb sub stc je push cltd inc inc mov test push fidiv mov cltd daa fisubrl xchg lock aad jbe shrb movsb push out lock ljmp mov in pop out push ja push cs lock jo push sub pop insl push loopne add cmp aam ret sub (bad) fidiv mov out imul cmp loope sub dec addr16 outsb xchg leave add mov (bad) inc inc lods fistpl sub je lea clc les mov fnstenv imul sub ret and mov mov fistpll lahf test sbb lret mulb inc imul in loope lret jmp adc test leave imul rcrb cmc push mov fisub pop mov cmp fimull dec jbe xor xor mov cmpsb imul ja cwtl in repnz fnstenv cld mov inc adcl xorb pop (bad) sbb imull push movsb jle sub and cmp inc notl adc adc dec insb or clc xchg int3 push push mov loop in xor dec test cld push mov xchg xchg mov cmc inc mov pop mov fadd (bad) out test mov subl jne andl sahf fdivp stos pop jb fsubrs call push fcmovne arpl shr iretw mov dec fcoms push jae stos pop pop xchg iret mov int3 xchg scas xor xchg add mov scas mov rcl fdivrs push mov ror movsb pop xor es shr push rorb and (bad) insb pop das lret data16 mov adc nop push bound pop mov in loop push dec mov mov cmp test inc adc xor xchg mov push adc imul xchg (bad) aam push cmp mov mov adc dec (bad) std cmc adc lods cld inc js faddl mov sbb aam xlat bound xor ss push mov inc pop lret js imul push or push test xchg jae repnz jmp pop inc mull sti dec xchg out fcomip dec cli mov iret sub adc icebp push xchg inc aam cmc and fs (bad) nop nop mov call adc sub (bad) cli frstor jae (bad) repz mov xchg sub mov pop pop movlhps mov adc cmc dec das inc imul frstor lea cmp push and insl movsl pop test in div fild cmpsb mov dec inc cmc jb add push loope mov cmpl mov pop imulb lea mov mov icebp mov les movsl out bound lock test mov scas push stos push test xchg ret cmpsb xchg divl insb jno rorl bound das push xchg xchg and adc adc out sbb sahf dec xchg jne (bad) sbb push (bad) inc (bad) enter pop pushf inc fcomp sub push outsb loope (bad) xor in (bad) cmc sub (bad) xchg or mov add imul push nop movsl inc popf cld sub sbb jmp push xor fldl jae jle push cmp cmpsl cmpsb sti pop hlt adc or sub cmp pop nop iret cmp int3 mov inc loopne pop (bad) insl pop add xchg icebp jo push xchg push xor inc add adc mov loopne mov xor pop fcoms repnz mov adc lock inc push push iret add pop mov loope,pt pop call ret bnd cltd inc aas dec dec cmp ljmp pop ljmp lret and std cmp clc and xlat les dec jmp icebp in inc inc adc imul mov push sub jmp shlb cmp dec xchg out clc add dec add stc mov std (bad) leave into ds cltd out in and or adc test lret (bad) movsb sbb shlb lret outsb pop push aad sbb orb lret lret and mov sbb push mov or outsb leave ja imul xchg imul xor inc ss or xchg jns ja jmp daa mov int3 adc mov and mov xor adc xlat leave scas loop adc mov jo icebp imul andl repz or ja cwtl mov add cltd decl adc rcrl je mov (bad) and inc jne loop dec in pop std or fdivrp iret push lret xor aad stc inc aam push cmpsb cs aaa lods pop aas or adc stc pop jnp aaa or dec mov lret mov bswap hlt sub push cmp adc lock (bad) and mov sbb aam rorb cmpsl add (bad) xchg (bad) leave jae xor dec sbb lahf enter bound lahf and fwait test mov push and repnz leave call les inc fs sub dec out aaa mov popa loop xor inc fsubrs repz and dec mov xchg fstps xchg outsl (bad) cli push into lahf mov enter in inc push mov mov aaa add add xchg and cmp xor ficoml out xor pop ds nop mov inc sbb loop xchg cltd mov mov jp pop lret cltd xchg ss ds clc and adcl hlt push outsb and sub ss test inc add clc sbb (bad) aaa add mov ret leave fwait popf cli test pushf loopne jae push mov mov jp mov aam out push mov roll xor xchg enter dec movsl lahf ret orb jmp leave push orl loopne mov shl push jbe cmpsb out movsl mov jae mov enter enter xchg cld adc cmpsb mov xchg push pop mov stc (bad) mov dec (bad) aam fsubrl div xchg sbb sub call insl insb mov sub ret sbb xorl and adc cmp cmc pop push push mov imull cmc xchg mov pop stos xor push inc xlat inc adc cwtl mov mov ret sub repnz cmp fildl mov pop out adc cmc sbb cwtl (bad) mov and mov jne push push out hlt insb fwait movb sti xchg sub cli sub test mov mov lea cmp rol shrb cmp je cltd fildl xor mov fs xchg cmp and cld (bad) sub push sub iret add in lret xchg (bad) enter adc insb aas pop roll aas inc iret push popa dec out mov mov lcall jae (bad) jg loope inc mov dec das (bad) testb jae jne ss sbb cmpsb mov fidiv xor pop mov mov (bad) out popa pop xchg mov add insb mov fidivl cwtl mov jbe mov and rolb and (bad) push jmp mov dec xor pop mov lret and mov (bad) jbe sub dec push test jns gs fs aam ret adc sarb dec xchg (bad) fstps pop insb push in xorb mov jg fstpl adc mov test mov fldl frstor push xchg inc pop in (bad) ja cltd cmp inc or sbb mov xor mov mov fwait xchg xchg xchg aas push inc fbstp push enter scas add xchg and xor mov dec jg cmp mov test add fs mov outsl or arpl adc ret xchg mov xor jno enter dec fidivrl (bad) ss push mov push (bad) adc adc (bad) rcll adc pop je mov lahf cmp xchg jmp push dec arpl aas or mov adc sub xchg xor add movsb mov push dec and pop sbb test sbb cmpsb xlat mov das pop mov movsl cmp xor scas std sbb bound mov cmpsl out add or scas mov insb jecxz jp push xchg mov aaa inc rolb xor rorb cmc in push cs cmp cmp dec lret addr16 adc das push es pop call or xorl lret pusha js inc dec fmull lret xorb adc call sub or stos fsubrl aam rcrl jno lods mov push movsl inc push lods jmp es adc out in fcoml cltd stc ss mov fdiv aam icebp sarb jmp mov add icebp pop xor (bad) (bad) sbb aaa xlat hlt fistl pop test dec sbb xor test inc lcall pop jle mov sbb jns pcmpgtd sub imul mov sahf cmp xor lcall hlt pop in mov into add jle dec vpmaxsw out in ja loope or mov (bad) in sbb mov fwait pushf xchg sub repz add xor mov add add ficom lds dec xchg sub arpl sub mov cmp push push xor or nop cmp (bad) push dec outsl fcmovnb and push and ret out push lods scas data16 mov adc int xor les out adc push dec push jne les clc cmpsl lret test aam jle sub clc addr16 sub mov push scas jb jecxz insl sahf sub jne xlat mov out adc jecxz cli mov adc scas mov call mov xlat pop xlat sti sti mov jae and cmp xor js das inc pop pop add jb sub dec push in mov test int3 sub aam int3 mov pop cmp mov jmp push and adc cmp cmp jmp loopne ret ljmp add mov std pop sbb adc loope or pop (bad) mov and dec inc loopne test xor jmp out adc cmp sub scas jmp imul dec (bad) out jb jns dec out in mov ficompl outsl lret addr16 pop arpl test dec jp icebp xchg dec sub xchg in fnstenv aad sbb jecxz jns push sub pop pop notb jge jge out sub sub rorl xor fcoml mov mov loope or sub mov sub cmp aaa movl dec mov adc cld sbb dec jg (bad) mov inc pop xchg push (bad) sbb and sub imul shll insb adc fsubrp mov add out imul shl sbb test stos add cmc push push cmp jge stos cmpb imul in lods and lret adcb adc mov jne pop mov dec push imul push xor out mov inc or fnstsw cmp or and dec xchg rorl cmp outsl jb cmpsb add sub lret test in push xchg clc or lods jo sbb mov and jb mov repnz push push decl pop (bad) and std scas jae aas sarl fwait or cs jmp xor popl mov and push dec add das ret mov icebp fstpt mov dec jbe clc ja int3 shr fcom ret pop rcll jecxz and leave sub pusha outsb mov nop je and das sub cmp out cmpsl cmp sub cs pop cmp adc loop cmp shll pusha mov push sub gs outsl aaa xchg dec pop and mov int3 xor jecxz arpl ljmp das add jecxz lret pop lahf mov aam add mov push pop bound icebp push xchg fdivrs pminsw sub cmp pop adc lds jns sbb push jge,pn jle pop push imul push test mov cmp into cmpl test (bad) mov push repz adc das pop pop adc in rorl ja push scas mov sub jecxz or pop cld insb xchg or loopne ds clc movsl movsl scas test or je mov fs imul pop jbe (bad) pop ja insl test mov mov cs fadds outsl inc andl shr push push mov sbb inc mov dec fwait and push test inc sbb and jbe jno cmp xchg fidivrl (bad) push inc xchg cmp daa sub out adc push out push out call sarl or sbb mov xor (bad) xor negl icebp (bad) in add mov rorb addl jge popa outsl hlt jmp ja icebp mov dec xchg je and pop push mov shlb adc pusha pop addr16 (bad) sarl mov int adc or iret negl mov jp push jecxz adc (bad) cmc push pop inc movsl push hlt or and and out xchg mov mov test test cs jg (bad) jno outsl into and mov xor clc leave push jecxz mov mov dec cmp aas xchg ljmp mov add pop mov enter cmpsl dec ret (bad) (bad) es mov nop dec jne push xchg (bad) faddl or xlat into ret insl leave push and pop ds (bad) push arpl jb push mov dec mov lods cmp or xchg movsb les pusha test cmpsb adc mov rcrl cmp sti fcompl pop and inc stos cltd lahf pop cmp idivb sub jecxz cltd fimull jne xor int3 fwait lods sti inc adc in sbb add je push and sub ret pop push (bad) (bad) jo add push ret and pop add repz sub stos in cmpsb rcrl and lret xlat test dec xchg movsl cwtl loop in fbld fcom xor pop jmp in cmp fcomi fld sub xor pop xchg mov stos pop lea rcrb jge mov adc sub imul or cli inc dec jmp lods mov xor jecxz int3 sbb roll out arpl xchg sub ljmp lahf idivl xchg cmp cmpsl data16 mov mov lcall sarb adc add into test outsl pop sub jge adc jmp (bad) sbb lds (bad) and jp push cmc lock outsb xor mov pop test cli sahf test xchg or or xchg repz outsb push add pop repnz in lods adc ljmp sbb adc js fdiv repnz and sbb push sub sub add ret cmpsl scas xchg in movsb jp mov sarb arpl xor outsl lea jmp jb mov notb scas or inc cmpsb (bad) jg mov push jle push mov cmovs pop les inc sbb popf push adc and mov (bad) mov mov jge push inc inc out adc and gs repnz adc insb or jbe je pop ret dec lret xchg cmp enter pop adc call lret cmp fdivr sahf dec xchg xchg hlt (bad) and lcall test xor or inc aas pop or cmp adc addl cmp ja cmp ret jl mov pop std cmp lock xchg ror mov xor outsb aad ss dec (bad) mov sbb jmp aaa int3 sbb jmp lahf fisub push fwait mov jbe and insl (bad) fmul js ficoml pop dec out or div loope sbb adc sti punpckhbw aam dec push std dec in std push sub mov sbb sub fimull cmp ret movsl xchg sahf xchg popa test pop lock div jecxz jns mov out outsb fwait rcrw xor clc aad clc xor dec jge jge xor sti mov push ficomp mov mov inc add bound cmp push push cmc or outsl xchg testl out sub inc lea adc push xchg xor (bad) fldenv xlat (bad) (bad) loop jb adc test stc rcl dec adc lods xchg das mov inc (bad) nop pop je cmp and xchg movsl xor add push pop jg push out mov (bad) leave mov scas lods jl mov repz fldl xlat cmpsl sbb cmp (bad) iret movb sub lds xchg fs sti (bad) pop mov mov jb jne jnp cmpsl dec pop (bad) pop imul aam jo pop or aad sub jnp push jp stos incl and push flds pushf mov cs cmc out movsb jle aas inc fs pop pop dec and in inc cli xchg pop inc into frstor jbe idivb jg movsl xchg pop cs aas sbb cltd loope mov mov (bad) jo sbb loop shl int or pop idivl or das pop and lea pop fwait (bad) jne jg test into push pop sub lahf (bad) xlat cmp shrb cld push cmp fdivrl mov mov aaa push sub jb fisubl out add fnstenv into inc out inc aam mov add int3 jg mov fs inc mov adc jae jg sbb in jge (bad) ljmp cltd dec out rcrb testb push xchg inc push adc inc jg pushf pop lret add fnsave sub pushf mov sub pop cmc fstpl loopne push push stc xchg jge inc or mov push in int3 js cwtl mov stos sub sbb adc mov repnz jmp xchg das mov sub out mov (bad) jns cltd ljmp aad inc cmp fisttp out into js loopne dec jbe mov cmp mov fstpl fnstenv lds ja ss (bad) pop jmp sbb fcoml and inc int3 fwait sbb xor jnp or mov sub loopne jmp mov sub subb mov jo pop jns xchg cmovae nop (bad) pop ficom mov add jns cmp addr16 pop cmpsb subb push jae lret mov jecxz lods cli pop iret fsqrt jmp sbb scas sbb inc mov scas jb shll mov mov push cld das push std cmp xor cmp stos pop pop fdivr sahf mov mov push push mov inc mov mov insl xor inc and jno sub inc frstor orl sbb jb cmpsb inc stos inc cmp lds orl bound dec mov loop in fwait xlat sets mov dec sbb mov push ficomp insb adc repnz xor ret test add andb outsb xchg out and test ret push (bad) sarb mov push add dec add jle push and push or test pop add cmpsb loop xor jp adc or fiadd ret sub push adc lret mov movsb cmc jle cmp in mov xchg inc pop xchg mov jo pop sub lock jnp pusha incb pusha pushf popf stos dec rcrl rcrl ficom or inc ficomp add test cmpsl (bad) (bad) jno ja mov (bad) pop dec pop out je cmp out sbb roll mov xchg lods push fmulp movsb in mov mov fs test (bad) dec push adc push int3 xor insl jl fcoms (bad) inc hlt pop faddl cltd fwait dec cltd daa inc js pause inc insl jmp or inc cmp lret push inc addr16 loop and lock cmpsl jl or inc test sti outsl fdivl loopne insb and scas fs push jae inc pop and sti dec push dec push add pushf ficompl sbb ror cld and lahf xchg cs mov jmp call fisub mov jo push outsl inc sub subl sahf loop xchg (bad) pop (bad) jns push xchg add pop add or cli jne xor mov adc add or jns (bad) adc pop xor ljmp mov xchg leave xchg mov inc jbe adc mov add cltd and xor cwtl or data16 mov mov dec pop scas lahf inc inc arpl shl mov xchg jo stc fmulp and lret inc je cmp jae enter cmp inc pop shll and dec cmpb jno cltd jne cli fsubrp sbb fcmovb ds ror cmpsl (bad) hlt mov jg fs outsb addr16 mov pop outsb iret mov das jb xlat adc gs xchg imul pop xchg mov inc std dec lret or lret mov push inc inc (bad) leave dec out fs clc in icebp xchg mov aaa fsubrl sbb jg test inc sub mov lret dec fldpi clc nop xchg push lock in adc cs mov jmp (bad) lret test (bad) aam out push ret xchg jns ljmp popf icebp cmc nop icebp cli insl fcompl jmp ficompl scas rorb or inc or outsl mov mov xchg jno out and rorb mov sbb cmp fiadd jo (bad) cmp dec mov mov mov dec jg jnp in dec cmpb in xchg adc adc into inc xchg sub adc jl xor add outsl adc rcll loopne fsubl cmp fwait adc insb mov call adc cmp movsl repnz mov (bad) stos inc inc nop xchg xchg add je ret xchg ret lret jmp cmp stc add sarl sbb sbb repz mov cmpsl adc repz mov sbb pop fnop hlt dec cmp mov mov jnp lds test ss int daa push mov aam gs pop rorb mov and ret imul (bad) ja push jns jns aam fisubrl jnp dec mov pop fildll jl add shlb fdivs sbb xchg lahf icebp out int or scas stos jno bound lea adc aam cmp and jo inc jmp inc pop cmpsb roll sub pop add mov fcomps push lahf mov mov mov ficom test loope mov movsb fwait sub sahf cmp clc (bad) ds fdivs push packuswb cwtl pop xor mov adc pop test cmp mov (bad) mov outsb sahf inc subb rcl xchg out inc mov mov add mov sub mov arpl cmp loopne lds incb (bad) das cmp pop and into test imul pop and pop lahf sahf sbb mov push dec shrl negb mov jecxz push repnz adc dec dec mov cmpsb push and and fsubl loopne jno out pop jge cmp xchg aad mov cmp ss ja fwait mov (bad) cmp fstpl lcall or sub mov aam loope fidiv xchg xchg mov or repz cmp xchg mov das push dec inc jo mov lods jge outsl mov nop or mov or push scas sar mov mov xchg dec ret push loopne push push push xor sbb dec xor dec fldt mov out xor pop fcmovnu add lods jmp leave aam orl and mov sbb cmp mov fcoms jo aam repz push pop xor inc cld mov pop lods daa xchg or xor and mov cltd aad out das into mov sbb xchg push lds fcomps sbb mov mov cmp or jle inc or dec mov dec add mov scas insb addb push jne (bad) les pop inc fcompl mov sub add les fldcw call push movsl xlat xchg cmp push outsb jne push outsl xlat fstpt sub jnp push out adc fcomp (bad) je adc mov xchg fstpt mov repz xor dec gs pop mov pop cmp addr16 jle jl mov (bad) mull cmp push lods push add and (bad) stos sahf xchg xor sub mov pop test aad push pop mov add imul lcall dec cld popa dec test (bad) adc jle adcl pop jno loope sbbb and jle dec stc push or push lods lods fldl hlt and or cmp sbb or popl out xchg sbb orb (bad) or push pop cmp xchg (bad) cs popa push xchg push and in mov icebp mov aam test cmp pop mov icebp negl or fidivrl lea jl ret test push pop test fldl adc fs mov out iret out ja (bad) sti xchg and ret push in add xchg in std repnz lock (bad) in add cmp jle cmp aad xchg inc addr16 sbb lods mov repz (bad) mov pop in push dec call outsl rcll cmpl in pop int3 adc sbb ds stos loop sbb xor pop (bad) outsb dec mov sbb scas dec pusha movsb imul mov repz jp addr16 pushf jg and (bad) push test ja aad test out arpl scas aad cmpsl jecxz cmp push fucomip jne imul push push mov dec push fmull imul fldcw out fstps lahf mov pop test cltd inc fimull aad mov ds pop out shrl leave jnp push or je aad pop xor or mov aas scas pop mov daa jns xor mov mov xor cmc or sbb fdivl push pop push push jnp insb test (bad) idivb mov stos sahf cwtl dec out out rorl pop out aaa cmp cltd or icebp pop sub fs sbb loop sub add push lods daa data16 js inc and pop (bad) mov leave push adc cs adc sub pop inc xchg lds sti push cli (bad) ss adc pusha aas lahf pop mov sbb inc rorb loope jno ja mov test mov pop popa fsubs xchg dec loopne and lret jle fmuls adc (bad) and cltd jb mov push jp ljmp orl xor into mov adc mov sbb xchg movsb jo jae add (bad) xchg cli imul das adc leave cmc pop scas mov cwtl into adcl in ficom xor repz mov popa lods cld xor jns push es mov mov xor or inc clc push loop leave aam mov mov rol dec js sbb call pop inc sbb pslld sub mov cmp cmpsb nop mov jno xor iret xor sub xchg iret daa add push jmp pop push mov mov lret dec fisttp pushf xchg jae shrb test and loope jle pop (bad) dec leave and mov div sti xor mov test and rorb enter ds jo dec in bnd adc pop mov dec jns mov cmp int3 shr adc sar or push xlat mov sub stc jne insb dec cli aad stos (bad) andl das mov mov or cmpsl daa mov test cmpsb mov sarb xor dec test scas mov cmp test pop push sbb clc insl or fidiv xor and lods jb (bad) and test sub shrb stos (bad) stc mov mov jne and inc cli xor xchg in jmp incl pop xor stos sbb daa mov mov mov inc (bad) mov lods mov push mov lea mov (bad) mov hlt (bad) ljmp out add cmpsb cmp rcl mov lds push push xchg push jge cwtl adc loop sub rcrl add mov pop mov cld inc mov jne (bad) cwtl mov cmc push adc js ja xor or bound ja or sahf mov jns pop push fidivl push add xchg fadd lcall push (bad) jns (bad) cmpsl ret jp fiaddl push push popa push fcomi or rcrb iret (bad) and jge fwait insl stc pop push fdivr mov and cmp and clc add mov cmp dec dec fucomi xchg or push cmp fldenv inc push push pushf add mov in xor and push xchg cmp sahf insl lcall iret push popa cli cmpsb xor movsl push mov pop sub mov (bad) aaa imul mov inc test dec ret in dec dec cltd jp loopne or andl inc mov push hlt adc loop jle in and cmp inc add iret jg jns (bad) jo fdivrl (bad) notl push cmpl dec stos sarl mov mov add mov arpl jmp jmp pop inc cs into or mov mov cmpsl inc pop shll cmp adc pop aas mov pusha inc js aas out push stos adc mov push jb sahf xchg push mov into cmpsl fucomi cmp add mov adc adc pop dec dec dec push out push data16 adcl sbb sbb rorl ja xchg cmp jno (bad) mov je jecxz mov add loopne ds push mov scas fldl cwtl cli lret jg faddl mov lret xor sahf lret fsubr adc stos das scas sub jl stc sub cmp out push cs aam pop push pop fidivr inc out push ret mov hlt sub push das xlat testl dec and xchg pusha dec fimull dec in push es ljmp outsb cmp (bad) adc fucomp movsl into test xchg push sub lcall push fcoml jecxz sub jp push lcall dec int3 sub iret je mov jo ret (bad) cli pop pop xlat std ror and icebp jae pop lahf mov jl xor shlb ss int and pop lock stos jae lods (bad) mov mov mov mov repz test stos les test and adc inc aaa (bad) aam imul lods cltd jne outsb ret cmp mov shl ficom xchg inc pop dec in sbb push ficom push mov (bad) mov mov cwtl jecxz arpl pop push mov mov nop mov pop sbb ss add lret (bad) repz loope add mov cmp lret pop or js cmpsb dec inc out das dec add inc push adc xchg push jae insl rcr and sub ljmp inc mov push cs mov pushf rorb aam cmp in inc es jp cmc lahf aas push push addr16 and sahf gs inc mov pop sbb jne sub adc pop mov mov sbb and pushf les aad xchg cs pushf ss or daa dec pop stos out sub cmp leave fnstsw xchg imul mov mov or adc movsb pop das js push mov out or lahf mov pop inc ss jno xorl sahf out xchg lahf aam mov push lcall fildl cmp sbb mov shll iret xor (bad) jmp int3 (bad) inc (bad) xor adc add (bad) jae cmp outsl in pop pushf into mov fwait les or (bad) (bad) leave or aas loop xchg mov daa cli cmp fldl push popf push jb (bad) xor rdrand sbb aaa mov loopne icebp jl lods jl scas jne pop and sbb in mov cmp ror jmp in xor mov mov or subl mov lret es pop ja push jae jecxz pop xchg scas mov std loope xor insb mov les dec mov rcll iret rcll mov cmc or adc xchg jb pop sbb (bad) mov jb imul mov pop scas xor lcall cmp jnp pop adc add mov sub push nop (bad) ja add test movsb loop movsb sbb cli clc fidiv aaa repnz or cmp dec dec xchg inc adc lea xchg lahf add xchg push lods loopne clc lock cmp and (bad) into rcl pop jmp pop (bad) addr16 xor rcll sahf lcall stos jmp ds pop stc cli cmc pop mov enter bound add (bad) adc in cltd (bad) cmp or adcl shl cmpsl ret data16 fwait lcall hlt outsl cli ret jno (bad) mov inc je pop outsl and outsl mov nop lods xchg lcall rolb dec mov push add cmp mov aad fiadd pop fiadd mov cmovg repz arpl inc cwtl inc adc add repz cmpsb and loope outsl mov lock rcll jno iret adc sbb outsb jbe lods push mov add ds pop xchg mov int cmpsb lea xchg out movsl rcll addr16 add jno add cmc xchg push or scas stos data16 aas frstor add outsl test fnstenv (bad) fimul ja pop pop push (bad) xchg test and jbe in (bad) loope aas dec pushf stc mov rorl aad jecxz inc jmp mov push ljmp cs push stos stos lea dec xchg cmpsb inc xlat push push lock add pop sub mov sub leave cmp dec loopne outsl xchg fildl jbe mov push not add movb xor or (bad) shl mov inc out je push gs mov scas jecxz sub orl add mov aad mov and xor xchg push inc dec adc or insl xor mov and jne (bad) mov cs daa xor pop push loope and adc in ret adc mov add call cmp xor pop movsl cmc xlat jg push es lcall or loopne fcmove and sub pop xor pusha jmp test fdivrs (bad) adc repz dec xchg cli scas sub sbb push fs mov add mov insb outsl mov ss mov xchg mov pop sbb (bad) and (bad) fsubl ljmp mov int cmc nop ss lea mov pop xchg mov adcb or fldt jnp lods pop not (bad) mov xchg or mov lret pop dec push js mov in loopne mov add xchg fcom lahf add fisubrl scas popl mov jo inc add jbe bound addr16 sub cli pop mov stos add add pusha pop pop dec dec jne neg cltd scas push insl add add lret fs jno,pt xchg out inc dec mov in scas xor (bad) je xor cmpsl dec out mov pop aas mov and adc jl inc hlt dec outsb ss in nop pop clc fwait stos insb jg out push mov (bad) leave popf outsl std test fbld or push scas xor pop pusha imul in adc mov popa sti mov xor (bad) sub test pop mov push rorb mov cmp leave mov or nop (bad) ja dec into pop xor ret ret std push pop xchg ds sbb psubsb rorb (bad) mov ja outsb dec sub mov rcl (bad) in mov cmpsb adc inc int3 sbb (bad) lock or pop clc sbb (bad) dec lcall shll bound pop mov dec add xchg jl inc xchg fistpll add out push repnz xchg sti imul out mov or cld xor (bad) imul leave and scas push (bad) icebp call int3 add fsub outsb lret shrb ffreep sarb mov pop insb push test and mov xor pop or and rol test mov inc mov lahf jmp jmp sub repz insl fisubl fs arpl dec fs cmp in xchg arpl push xchg cmp sub iret xchg dec push adc lds aaa fcompl icebp aam cmp or jb mov push adc aad mov mov cmp shlb jecxz cli ret loopne int mov aas xchg mov mov dec movsb inc xor pop out (bad) jae cmc sahf cli out hlt add repnz jl jae dec ds push or repz jbe dec mov icebp xor and mov and jae iret into jle dec xor xor jge aad sbb int jae push test lcall test jb or mov inc and mov lcall mov in int3 mov rcl daa pop sub into or lods sbb mov pop inc inc push add loopne cmp imul cmp int3 adc stc rcrl fnop inc sbb shrl addr16 cmp sar scas scas fisubl (bad) aaa shr sbb aaa stos pop clc cmpsl dec mov imul inc (bad) lock or cltd andb outsb push outsb testl (bad) pop dec mov loop jb,pt cmp stos xchg cmp sbb jb (bad) lret mov into or mov cli rcrl sub stos pushf lea jns loop out rcll mov popa mov sarl lea popa jmp sub cmp add dec jnp imul xor outsb mov pop test loopne inc push lds inc es loop lds (bad) mov push xchg (bad) rcrb ficom dec popf pop sub rcrb lds mov shr mov lcall stos mov pop cltd jmp popf das shrl mov out or inc cmp ja xchg dec mov aam xor jnp xor inc std bound jnp jae mov (bad) push cs lret fsts stos mov push or or aaa jne dec mov mov ret mov push loope dec lret mov adc rorb ret jne,pt push pop cmp aas in cld and sub sub xchg mov fwait popf fadds sub adc cltd (bad) sbb lods cmpsl xchg jae push pop movsb outsl cmpsb pop add mov leave (bad) and xchg loop mov aas aas imul clc imul fstp test jg jbe cmp orb or fnstsw test mov or and mov pop inc int3 sub fsts push pop mov jo orb inc fucomp scas and mov sub pop jbe jo (bad) ja and in pop int and std or xor mov push and cmp icebp in out dec dec test aad pop xorl lods test mov (bad) xor xor rorb insl negl pop enter pop inc dec add push out jp inc daa arpl imull jle pop xchg icebp (bad) out ret lret mov pop push push rolb inc xor push test lds sti jno xchg push arpl mov and sbb mov pop decl add into push push push mov mov jecxz xchg sub (bad) ja inc int3 cmpsl gs mov lcall sti int sub int3 fwait sub and lock mov xchg ror cld jnp out iret jb push or sbb add mov fwait mov mov adc and ss inc pop xchg push sub pop mov shl pushf adc sbb sub jae cs lahf fdivs pop xlat (bad) cmp and mov jecxz inc mov jb enter or addr16 out push xlat jmp icebp mov jmp dec insl adc in dec cmp aas pushf sub add out xor fimull or or lret pop in pop addb inc and sub rclb mov dec mov xor movsl pop cmp pop jp cmpsl pop mov xchg fist jbe ds or mov inc cs xchg scas data16 mov es in dec xchg fmull test movsb mov mov mov lods inc mov repnz cmc bnd sbb ss xchg (bad) xlat push lea stc cmp fdivs mov insb cmp stos or imul fwait mov fs sub in lcall sbb ret jle mov xchg xor into fadds cmpsl stc adc mov inc mov in adc mov fildll inc imul xchg fistl ficom iret seto dec loope test pop jp pop les fadds sbb movsb insl dec adc cld sub add aam xchg inc fsts movsl pop inc std aaa mov dec fs addr16 loope (bad) lock jle mov xorl add gs stos pusha ja dec mov test (bad) and cmp je jne mov and test decb enter xchg sbb add mov xor pop fnsave push jl scas xor mov movsb cvtpi2ps mov loope movsl fadds and repnz outsb xchg (bad) xor cli inc scas cmpsb mov xchg mov mov lret jnp repnz fsubs xchg dec or cltd std and sbb fildl ss push xchg mov mov shlb pop pop les addr16 jb fisubrl inc decb stos test ja nop into pop daa fwait mov inc int std xchg sbb pushf in das rorb cmp xchg add packsswb mov jge pusha sbb mov cmp mulb jo repnz xchg jb lret adc mov les jmp add xchg into outsb pop push out roll push inc inc in cs push fwait mov insl sahf cmp lock inc js jbe pop and push sarb sub jnp mov inc mov sarb pop idiv fcmovu sahf and sub mov flds sub push scas sbb push sub cmp dec (bad) xor inc push xchg sbb mov xchg xor pop stc push in add mov daa xchg dec xorb mov add xadd jp jns sub faddl mov mov cltd sub add xchg xchg mov fisubr fstpl dec data16 test test cld adc (bad) loopne pop adc into fmull and pop fisub mov add movb in mov ljmp pop (bad) fnsave mov lret push dec push dec mov pop sbb pop test int add mov dec jmp jecxz dec sbb jl gs fs lahf and daa adc ret (bad) mov cmp mov xlat xor es incb mov lods sub hlt sub std add sub push out ds push push arpl (bad) or ds insb (bad) jae add arpl push and and dec out inc pop (bad) in add or sarb dec pop adc pop loop call mov (bad) in ds jmp nop stos out or sbb add mov mov in mov xchg adc dec sbb jmp dec jbe push or test mov jmp sbb repz dec test push enter inc jo cmp stc faddl popa lcall jle inc inc pop mov and test add push mov jo xchg scas cmp jg imul repz push addr16 lret mov dec aad into aaa test push cwtl out sub cld mov sbb cmp xchg jp or lea mov push (bad) cmpsl dec lods push pop out les mov dec jo add lret outsb jbe pop sbb leave ret mov les dec xchg loop js sub in cltd iret int mov push (bad) fwait (bad) cmp xchg out test xchg pusha out test ret pushf push add outsb mov jb in mov divl call jle cli cmc jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov call add incl jp hlt std pop (bad) mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec into dec inc inc push js in fadd bound adc test test insl (bad) fldt sti jbe inc pslld mov add pop sar dec iret test sub call pushf fbld jge mov test fs out pop out cmc out push cli loopne insb (bad) or iret sub xor dec popf (bad) cwtl fisttp jge mov test mov cmp cmp jecxz adc mov cmpsb or dec mov dec hlt rorl jecxz std jb ss lret sbb push test aad mov call cltd mov sbb sahf xacquire sbb mov in ds outsb push lret jae cwtl pop adc push sbb xchg mov lods pop iret pop or xchg sbb pop fcmovbe insb (bad) repz lea jnp leave push mov (bad) mov sarb (bad) push and stos sbb or inc (bad) ljmp in out fldl jmp (bad) adc xor cwtl outsb sahf xchg outsl mov lock fmull xchg mov cld scas jo test insl cmp xchg in or test in jnp ficompl sub (bad) cmp roll int pop mov push pop push or rcll das iret stos mov loope in push xor es and add dec mov inc jbe das sahf loop nop insl je pop fs daa imul movsb out pop (bad) jecxz js imul sub cltd dec scas rcrw mov lea pop dec sbb add mov lock xor push das xchg xor out jne (bad) repz mov and sbb lahf pop fimull push fmuls dec in es ja sub popf popf pop xor sahf aas cld sbb add mov and or push dec (bad) jmp insl repnz dec aas cmp jno mov xchg cmp mov mov shrl dec lods push jnp pop pop pop xor push inc mov test inc or jbe push mov dec int3 and xlat insl out pop push jl dec stc ret xchg dec data16 rolb inc ror pop and hlt movsl jno xchg lahf (bad) aaa movsl push or dec inc xor xor ret rcl xchg push jbe push and jp adc in subb test and add jb cmpsl movsb and in xchg ljmp sbb xchg fldt pop shrl out mov out mulb test lcall dec mov divl mov adc mov fild sahf push push adc f2xm1 bound daa mov sti jl repz inc mov mov xchg (bad) mov pop divb sub mov loope les cmp mov fwait push mov push icebp loopne jl hlt aaa rol jne rcll dec mov add test and push sbb frstor (bad) push and xlat ss jmp out fxch jl xor out xchg sub pushf mov dec add ret cmp and dec fcoml fs sub xchg imul mov lcall and insl sti xor xor adc dec sbb cltd jg lods adcl mov jge adc mov out out ljmp xchg mov ljmp dec loop sbb cmpsb aaa stos mov fcmove notl scas (bad) leave int clc lahf sarb iret out addl add js call push rcl fisttpll push rcrb pop clc fidivrl sbb (bad) icebp test imul pop sahf mov mov mov mov jnp std fs rcrl repz mov lcall call sbb inc call sub inc mov jecxz cmp stos js mov fs xor cmpsb sti xchg mov jge (bad) negl enter mov cmp xchg lcall adc clc stos cs pushf (bad) into inc scas mov pushf xchg jg in divl test repz jmp cmp pop dec mov test stos cltd xorl pop and push mov icebp and outsl daa shr ffreep loope dec pop imul or xor pop inc mov inc jb push je xchg pop jp mov ja mov aam mov or in mov mov mov jge fs mov and aad lcall jecxz xchg adc xlat jmp (bad) ljmp ss das and fmull stos lahf xor stos mov fs aas push sub inc jbe aas jb jl push int3 out rcl outsb xchg (bad) xchg call int3 pop cmp xchg push inc or pop xor push cmc ret mov jp inc add push add dec cmpsb xor xor sub xchg cmp xor push jge fnop jb mov mov dec mov in dec rorb in mov nop pop xor nop repnz adc loop cmp mov mov dec pop movsb loope (bad) inc outsb adc cmp add jmp cmp pushf or sub movsb mov xor (bad) xor stos xlat pop mov lcall and sub outsb out push and (bad) rep cmp pop sub repnz cwtl leave sub sarb mov fwait sub and dec daa test and repnz xchg and and fwait jmp adc mov stos dec push ljmp dec sbb stos jnp add roll pop push jmp je mov sub pop xchg xor gs jmp mov sbb stos jns pop mov jnp leave or in dec (bad) idivb inc push or (bad) lcall sarl rolb dec mov sbb aad ret sbb dec std dec add lods aad mov mov mov sarl cltd and xchg out jmp inc sti push hlt inc dec inc inc cmc or ret or pop and nop add stos (bad) xor pop outsl icebp lcall (bad) jle shlb sti sbb dec in test lcall sbb (bad) insl push je hlt mov or pushf test or add pushf push pop nop test inc jb cmp mov xor xchg shlb cli add inc mov js jmp sbb in mov rcrb cmc movsl xor in rcrl jae imul and xchg mov adc repz mov push mov stos adc cs into jl adc sbb jo mov cmpsl lea xchg inc rcrl iret sbb sti jle adcl jbe daa imul jo mov int out xchg jb push jp and xchg loopne ja leave pop int addr16 movsl jo (bad) mov lea pop imull mov jns jns cwtl arpl notb loop mov jb arpl mov xchg lods scas mov jae icebp mov mov dec sub mov mov cmp xchg pusha mov (bad) xor and popf icebp pop iret sbb sbb ss movsb mov (bad) xor mov stos and adc stos outsb xchg out push ds xor aam xor adc add mov mov stos cmp cmp xchg xchg inc xor pop sub in gs outsb jnp lea sbb (bad) aad lahf cmpsl aam gs sub inc mov sbbb jmp clc shl xchg push push add sbb bound add loopne or repnz push mov or in arpl jnp mov pop in mov dec lret jg imul dec pop jmp mov mov sti repz mov adc add add (bad) scas pop pop jno and sub and jns mov mov (bad) scas jnp inc dec or fldenv mov adc push xor lods dec and pop xor sbb sub mov inc sbb call or (bad) stos mov (bad) mov fcomi addr16 inc (bad) jmp jmp push xor divl ss test outsl push sbb xchg (bad) hlt cld add icebp dec loop stos (bad) pop inc cmpb mov in iret sub pop jmp movsl hlt mov push (bad) popf lods imul jnp clc (bad) push repz xlat xchg adc push decb inc pop les (bad) mov jno push push mov jle jnp out insb inc dec rorl and lcall sbb inc repnz sbb cmp push xchg or enter mov mov sbb cwtl imul or xchg (bad) pushf lods mov fist std imul aaa xchg aas (bad) aaa popa mov sub clc and loopne fdivl das xchg mov mov das movsb clc iret sub ss push xchg int3 lahf inc and sbb xchg iret xchg or arpl xor sub into inc push clc lret out cwtl mov push loop xor out enter bound mov data16 aam jg jmp jg bound icebp mov jo sub mov inc aad aam stc adc jae dec xchg mov xor out sbb test imul fwait and movsl xor fistpll out lods sub add xor sbb fwait xchg dec cmc pop push xor pushf dec lea cltd xorl add mov mov jbe pop sbb adc mov xchg mov xor lock aaa pop mov repz jl inc inc int xchg (bad) fidivr ljmp sub in rcrl or cmc fwait push roll mov inc imul mov cli mov jg inc repz int loop jbe sbb lods sahf jnp (bad) and mov mov cltd jae dec add xchg scas fcmovbe ss ficoml adc mov call into into lcall jnp ds int es ret mov sub adc mov notb push dec rorb or dec fwait inc pop test jge xor or icebp in push pop add arpl sub pop scas inc xor mov xchg sbb adc enter adc scas (bad) andl xor mov dec jnp or adc outsl arpl adc adc and xor (bad) push stos ljmp outsl xchg jmp pusha jp pop mov lcall mov imul inc mov jg mov insb jp sbb mov inc fwait sub sbb insb mov cmp std les gs dec call popa in testl mov adc mov dec test cmpb mov lcall addr16 jae push out das and xchg ret dec data16 mov inc dec decb fadds jae xor xchg xlat push bnd lahf adc jl (bad) pop lock cwtl cli mov ret and mov inc sub dec xchg lahf scas xor rorb pop aad stos leave aad mov dec and xchg insb test mov adc stos cmc inc loope mov lret addl leave push mov dec add cmp mov icebp inc add mov cld push or in sbb arpl xor push or mov roll jae jbe xchg push int3 lret fcmovne sbb in dec push mov inc pop pop mov pop pop add adc das icebp out fistpl in scas iret std sbb jl addl sbb (bad) fildl sarb xchg sbb cmpsl cmp inc jae xor xchg jnp push pop decb in pop pop outsl stos mov sbb jb mov mov notb mov fcoms ds daa jmp test inc xchg pcmpeqd sti mov add addr16 divb jo stos jp or sbb ffreep (bad) jle aaa xchg cld shrl repnz pop fcomps (bad) cmp sbb pop push push sbb lret out and bound xor cmp enter loop xor out lcall mov or jmp into cmp push mov jo and (bad) push pop in push xor jle je push sub push xor addb inc popa inc cmp in cmp arpl data16 aam test stc test rorb inc imul xor mov call mov shrl lods loop mov or pop pop mov xchg lret scas sahf add std insl push (bad) or scas imul jp sub adc repnz fbstp stc push stos into inc sbb mov in jmp enter aas sbb adc xor hlt popf data16 mov or movsb sub sti jnp push dec jns sub inc xchg popa in jp enter leave cmp adc ds int in cltd hlt mov lock mov (bad) mov mov cmpsb (bad) mov mov mov push mov lds repnz sti jns mov sarl push divl mov mov je or (bad) aaa cs cmp fs adc mov push fmull lret push cltd fist lret inc mov ds jnp inc stos jg push aad shl and adc adc pop mov cmp out icebp sbb lods add test fwait movsl rorl cmpsb pusha ljmp sub and push (bad) inc mov sub mov unpckhps fs cmp cwtl fiaddl push push push pop ss popf jp adc add mov or lods cmc mov test inc mov push mov sub xor pop fbld sub (bad) jmp xchg sti loop xchg push out rcrl testb or cmpsl loop mov mov mov adc ljmp bound sbbl push je xlat cmpsb push ret lock mov or mov clc inc sub fdivl fimull sub or push stc out mov sub jp (bad) popa inc jle rcr dec adc mov push sub push or mov adc or nop subl into cmc sbb (bad) jne ret sbb jge (bad) mov pusha jmp add dec data16 pop outsl push or xor push cmpsb inc and pop cmp cmpb add pop mov ljmp push jmp in mov lcall xchg jb inc fisubrl push testl push adc sub adc cwtl sbb imul sahf inc dec (bad) dec sub inc fcomi (bad) adc dec jmp mov sbb adc shl popf xor nop imul or and jle xchg mov aas test inc insl sub inc or push insl cmc or insl jo push popf das cli inc (bad) and mov or pop aam aas cmp xchg sbb inc adc mov mov gs cmc mov and stc jmp push add inc (bad) mov leave nop (bad) (bad) pop (bad) out jecxz inc pop in xor bound cmpsl sbb pop pop lret or push (bad) (bad) mov xchg mov loop push cwtl mov jns subl fninit cwtl push call es jg cli xor imull popa mov cmp or sbb sbb int3 mov add jae sbbl outsl push mov dec clc mov fucomi push in and xor inc jno mov stos mov cmpsl push (bad) pop pop mov cld lods insb outsb pop xor mov out mov (bad) sarl push and sbb (bad) jo push xlat xchg adc push (bad) or and enter jmp (bad) push pop stos sub sbb mov xchg (bad) je and push mov sbb icebp ds pusha and popf movsb cmpsb dec (bad) jge sub scas clc xlat arpl mov enter fwait jns dec inc xchg lret fmull into enter mov (bad) cltd movsl jae outsb pop icebp gs icebp xchg das jne xchg mov jbe (bad) lock out cmp pop int lods cmc (bad) inc je int3 fucomi jecxz rcr adc sbb das stos nop stos ds mov (bad) es jg shrb rorl jmp (bad) mov hlt mov lods dec pusha shl push jnp insb lock scas inc sbb lds sahf gs or ljmp push fcmovnu loop fwait (bad) hlt lcall insl enter dec fs fucom inc repnz pop mov inc std cwtl push push jge or jl jecxz mov rorl stos stos xchg in jmp sbb adc test into sbb loope inc or push and or gs or and xchg xchg cmp jl xor int xchg push jb push fs lock push jmp fsubr push push (bad) mov lea push fisubr andl add stos imul data16 test pop mov push aaa mov fwait mov sbb push and repz daa pop int and pushf dec int3 jge icebp mov out (bad) lock jmp and dec fidivr inc stos loop mov clc movsb adc fnstcw push cmp je inc popf jbe and pop aad insl je incl outsb lds into xchg mov mov js pop cmp push pop mov and int adc sbb pop xor mov test inc stos adc mov sbb addr16 fsubl adc inc add inc sbb mov or jge sub and add xor mov movsl mov mov sub daa shlb mov dec xor mov mov adc adc sbb xchg or push int aad and pop jo and int3 and pop dec lret xor mov test dec add addr16 aaa in sbb jns mov stc pop adc push push add push jnp sub stos test inc cmp push sub test arpl mov das xchg pminsw mov shrb xlat outsl lret popf and xor call sbb fcompl cmp aaa loop adc out pushf mov cs pusha push inc ss sbb add repnz aas scas inc mov inc and ret jno out mull add mov mov xchg mov or ds mov push (bad) jl xchg push pop lret pop jbe pop (bad) loope lret (bad) mov mov pop adc sbb pop stc push sbb aas inc mov loop scas sub outsb lock dec cmp xchg jg and xchg dec push popa bound outsl pop dec pushf jo je cmp pop and lahf lods adc xchg cmp adc inc cmc insb fcoms stc mov adc mov add aad (bad) (bad) mov push loope mov push xlat pop scas dec nop xchg jp dec jno lahf stos lds imul lods insl (bad) and push gs sub mov in xchg jnp mov movsl (bad) out daa mov in xor repnz cwtl push outsl leave gs mov jl xchg fsts push lret jl cmp dec mov mov (bad) jo das jp mov cld movsb sbb dec clc jb xor pusha mov jne jmp push mov (bad) mov outsb inc xor stc pop push add cwtl pop jnp stos mov adc mov push std imul sbb pop outsb mov add out adc lods jl (bad) xlat mov xor (bad) out sarb jb mov imul cmp jne loopne xchg leave scas (bad) push bswap push jbe push popf xchg mull xchg mov rorl sbb insb (bad) loopne movsl int3 fiadd lret fwait (bad) icebp sub leave imul in ja hlt jmp jmp pop dec int sarb push jns mov divb test dec lret fnstcw push xchg jb out lods adc mov mov adcl mov jle cmp push pop pop outsb dec leave ss lea call fmulp fnstsw ficompl loopne lods fcoml test cmp xor (bad) xor cmc push and into lret or push idiv pop mov pop pop aad insb push mov sub loopne inc sub rolb cmp add clc mov jb push jae stos cmp dec (bad) lds out or dec es int3 in inc push jae xlat sbb mov test push xor pushf jge lods dec xchg cli es lea mov cmp movsb mov test and stos cmpsl les out aaa adc inc pop jne sbb push pop cmpsl clc inc jle aaa outsl (bad) dec outsl and adc push pop dec fs jmp push sbb (bad) dec repnz fldenv fisubrl sub sahf jae push push enter arpl imul repnz mov mov in jno push test push cwtl lods fldt mov adc sub sahf sub movsb mov and test into lret mov scas (bad) pop test push jne jb out lret push jnp adc pushfw pop xor (bad) add push pop test insb dec clc enter jbe js push repz sbb rol push insl insb jo jmp orb (bad) aad xchg xor push jl mov inc sub push mov mov orl pop sbb outsb mov cmc jp rolb sub push cmp mov cs jg aam das push cmp xor shl sar ret shlb add adc iret mov cmc lock sbb loope push or mov icebp mov sbbl jg push xchg lods imul es pusha icebp jnp es enter xor jecxz in cltd nop xor int mov (bad) dec stos in imul ljmp push mov repz movsl push in push int3 sbb sub pop push xor push loopne aam inc (bad) loopne in das in xor sub xlat nop imul mov jbe cmpl (bad) adc pop xchg lahf fidiv mov sbb push jge rclb aad dec jb inc xchg xchg popa fwait lret mov mov jmp inc or daa mov sbb test loopne adc add mov ss insl and sahf xchg ds pop movsb sarl sub stmxcsr mov insl push sbb ret repz inc movsl add mov fldenv aad daa xor cmc cmpsb push inc lock in dec imul (bad) jge pop pop dec aaa jmp cld js out cmp arpl inc mov fnstcw or mov aaa les push mov mov inc aam inc repnz sbb les inc call cs and (bad) mov xorb ss xor adc dec insb pop jge (bad) cmpsb xor xchg hlt out mov jo xor adc iret or movsb xchg insb push outsb mov ja jns or push paddd push add call adc popa sarl jmp jnp rcrl out cmp lret scas in ret lea jge nop jg sub adc fisubl fdivs stos mov mov inc into jo repnz pop push repz adc cwtl sbb enter or movsl cmp aam sbb or mov ss dec (bad) shrb add push aad mov add insl std aad xchg dec mov jno sahf push push stos sub stos mov mov (bad) scas add lods stos movsb les cwtl call adc lcall mov sub add pop xor xchg insl xor dec lcall clc repz repnz push mov fsubs push fistl sub jns iret hlt or popf inc cmp or lcall fmuls mov mov mov xor cli adc out pop fwait fs push pop jge in mov inc mov dec xchg (bad) neg pop mov jge jbe out mov sbb imul jecxz into leave jmp ja int ror lret cmp xchg xor cmp inc sbb lock xchg or inc inc and add iret cmp in inc fwait cmp inc or push movsb insb adc fnsave dec mov jl jo bnd xlat ljmp out mov mov xchg dec jle cmp jmp cmp les push loop push mov test add jae fsubrs mov rcr push or or rcrl inc push mov add mov ret enter pop push or imul pop enter out push inc in into sub mov cmpsl sbb mov rorl pop (bad) mov test jmp outsl idivl or or scas mov shrb test cltd and or push jb paddsb (bad) adc dec or (bad) sbb pop mov and sub cmc test jo cmpsl push push xchg clc (bad) mov dec lret mov push fisttpl xor and jge imul push addr16 sub mov fnop sub lcall lea repz and dec (bad) (bad) (bad) xorl dec jmp in jge mov or outsb fidivr sbbl out sub ja and cmp dec adc push pop pop or rolb cmp aad std lret cmpsb inc js test pop cmp xchg xchg aas mov fbstp jle shll fidivrl lds cli sub ret xor pop xchg in mov jg test mov lods lods in (bad) mov int (bad) das (bad) add xor aad cs lds test jne jae xchg sub or sbb or cmpsl lret mov push adc test sub push lret fdivs pop pop and mov ret dec inc jmp sub and pop andl and push inc sbb repz not icebp mov test pop or lret sarl mov add adc lods sub push fmuls mov lret add push push jp in xchg dec mov mov jnp dec mov pushf pop add push dec pop (bad) mov dec (bad) add mov mov xor ret or (bad) dec imul cmp test jg add sub and cmp nop sub jbe sbb xchg pop mov fisttpl or jb in inc pusha hlt loop,pn jne in (bad) adc lock xchg fsubrp add (bad) scas ss lahf lret shl adcb inc insl popf jle jnp in mov mov shrb shrl xchg stos inc mov imul add sti pusha push jmp nop adc mov icebp lods enter add andl add fdivrl stos push lcall lods mov jecxz arpl add das pop mov out pushf out jo lods cli cs push out mov dec call mov aam sub (bad) xor dec sub in xchg sub (bad) sub repz dec lret mov ret jns push aad icebp popa fbstp sbb inc lret inc rcl (bad) xor mov cmp (bad) lret sbbl inc scas or movsb out push movsb std pop pop ficoml sbb pop sbb fwait dec in js jae gs std out jg je ljmp lret xchg xchg sub scas imul adcl xor mov lcall movsl sbb pop mov dec dec imul into lea repz xchg dec jne sbb jl popa cmp dec je repnz cvtpi2ps stos leave out dec push sbb mov mov xchg mov lret mov nop in lret xchg and cmp outsl xchg sub xchg push or mov pop or xlat mov les add sbb dec xchg cwtl cmc inc out test xor jb rcrb cmpsl mov xor hlt cmp sub mov jg push fstps push into test ud1 aad addr16 mov ljmp loope dec mov xchg or (bad) mov dec jp ss ja cld ljmp outsl nop sub push xchg loope imul das icebp mov fisubl daa dec xor cmp fwait out jbe ss fisubrl outsb cmpsb cmp (bad) xor test loopne jecxz loopne adc mov jmp sub sahf xchg cli push mov pop dec adc lahf lret adc jmp push out pop ss push adcb sub cwtl in lods cmpsl adc aad sbb stos dec xchg add cld cmp mov (bad) pushf sbb mov (bad) mov sti mov lods xor faddl pop rep mov xchg and mov mov mov pop mov xchg pop mov mov sbb hlt xlat push es add sbb stos dec shl std or jl mov cmc pop test je ret daa lret scas inc call xchg xor push jne cmp dec inc aas dec lcall and fwait and cmp jg loop out repz pop repz call mov ret xor push sbb test cmp or mov xor add or mov cmp mov add sub mov push lods adc and fbstp insl adc xchg fstpl out add adc pusha sarl push movsl daa sbb sub add mov cmp lahf mov loop add pop mov sahf adc bound leave cmovbe es or dec or jmp out xchg test fistpll cmc cmc xchg pop lock (bad) movsb xchg (bad) xchg xor out popa cli into push out jnp mov push aas sub xchg sub jns scas clc lods popa pop (bad) push pop sub and nop dec mov imul add pop mov (bad) jns mov push lret jp adc adc std mov cmp lahf es int3 push or inc loope aad jb out into addr16 jno in xor inc dec push repz sub dec fcomps int3 dec sbb leave push das jo out in ret mov jb inc jle ljmp setbe cs icebp and pusha jns in cmp lea and xchg mov push xchg lea inc pop pusha (bad) push pop pushf cli xchg lock jne repz sub fwait imulb xchg add xor and pop fistpll xorl inc test aam ret jo and adc push jmp mov mov test push fs sub and sbb ret in sub add stos loope add dec jno mov imul ret mov or add ret adc sbb lret scas inc mov lea mov mov fwait insl xchg (bad) and lret or inc xchg mov or insl sbb sub push fxch iret pusha cmp ja in mov lods in bound push sbb inc shr les push cld clc add add push mov test sarb stos call push xor mov mov jno or shr xchg cmp xchg in add mov aaa pop mov and stc int mov fist outsl jmp inc pop dec cmp mov insl jbe or push pusha nop sbb adc dec xor test (bad) repnz mov aam push lods das xor sti loop rorl mov pop mov shrb add clc mov outsl dec jnp fdivs or push xchg xor (bad) mov push mov pop inc push test pop jb (bad) movsb int mov mov adc jns pop pop nop inc adc pop fbld mov lahf xchg mov mov jecxz push push loop pop fistp mov (bad) repnz out jle hlt repz sti adc cmp mov adc push aaa das jl gs in adc xor or daa jno (bad) mov outsl fstps fisubl lret dec dec push stos and pop jmp fisub aaa lods xchg loop leave insb ror pop mov (bad) repnz push inc aad dec addb jmp hlt inc dec xor mov int3 bound mov mov test mov jo or xchg lahf stos push (bad) inc fmuls in push shll (bad) outsl jp (bad) xor xchg or sbb adc dec jo and cmp or push dec fwait outsl mov push mov pop add into inc add idivb sub cli in or ljmp adc add jp cmp mov js push leave inc adc sbb and mov and mov inc sub pop sub mov pop arpl sbb ja adc lock test fldt push test cmc cmp test xor loope cli xchg rolb fs mov add ja lahf popf fdivrl mov test sub ficoml ret rclb adc add mov lahf scas add adc repz ljmp or mov cmp xchg mov int3 xchg pop or xor loope imul mov orl fwait movsl lret pop call add loopne and cmp in add insb mov in arpl loop shl cmp mov lret xor js test push (bad) insb mov mov mov pop jle es push loop dec std int in loope sub outsl jbe pop adcl repnz adc lea sub outsl enter fucomp sub mov cmp popa jg pushf insl ror jmp or stc hlt cmp (bad) int bnd movsb scas paddd fisub in hlt mov xor cltd loope xor xchg xchg push ffree lock add dec ss push pop mov push mov loope fnstsw sbb hlt imul pop adc (bad) sbb jmp lret pop sarb mov rcl cmp int out pop subl xchg icebp pop mov xor xor loope outsb pop fs into add rolb mov pop je in mov (bad) dec popf movsl pop imul inc repnz jne fmull mov out xor or popa addr16 data16 inc clc clc or into fisttpl xchg push xlat (bad) jns dec test imulb push (bad) sbb cltd in sub jp shrl push cmp fcoms (bad) in xor lret iret xchg mov leave mov push rcl mov mov lods iret sbb loope push xor outsl cmpsl push mov inc hlt add mov mov out or push and add (bad) ss add dec mov dec mov mov arpl inc push push add push cmpsl adc call lahf sbb dec inc ss je fnstenv cwtl and mov pusha xlat xchg rclb jmp cmp leave sub ret mov inc repnz (bad) mov out daa shrl mov (bad) in mov cwtl or pcmpgtd xor pop inc xlat sbb push xor jmp fwait inc stc cmc fdivrl cld adc sbb xchg cmp fistpll fnsave or inc sbb mov dec sbb andb ljmp fdiv movsb stos xchg add inc aad lcall pop psadbw in adc (bad) xchg inc push adc inc or cmpl cmp mov cmp or in xor mov jns xchg test in push and push outsb fwait ret pusha rcrb outsl imul mov rcr (bad) push notb rcrl pop daa fldl out and add dec (bad) push push cmpsl or ja cmc mov add aaa cmp decb fisttp mov stos adc pop xor js mov xor les mov aaa (bad) daa dec jmp sub add mov xor lods mov xchg call mov mov xchg mov enter scas test fmuls fs mov jmp and pop repnz xor pop (bad) pop lods dec test or pop fdivl in movsb movsl movsb xchg fiaddl push dec dec cwtl push fcompl cmp dec xchg push fbstp movsl jbe sbb sbb xor stos scas mov aaa insl push jne jp std inc sti repz cmp and fdiv int3 and sub daa inc sub dec es adc popf pop sub fldenv mov cmpsl (bad) dec inc or stos jle push stc push xor adc cltd cmp xlat inc lea push inc sbb xchg (bad) ljmp (bad) push adc les stc ss push ret inc sbbl lcall pop (bad) pop hlt aaa sub cmp sti sbb sub fwait cmp sti je cmp xchg int sarl stc fdiv xchg mov push mov push lret ja lahf jmp sahf push insb sbb fdivs addr16 jne inc push mov jle mov jns dec mov fiaddl pop ja adc push fist lods add mov lock outsb cmpsb mov frstor je pop gs (bad) adc (bad) add rorl inc or rorb fs ret sub push or in mov outsl lods movl sti sub bound je mov or jl pop fiaddl icebp jmp adc cmp fstl subb testl scas stos (bad) fxch and gs dec sbb insl adc pop push add push mov push sti fwait cmc loop jecxz xor and rolb loopne inc fidivrl test je ret loopne add sarb les xchg (bad) jae mov cltd call jno xchg mov lds outsl jne sub in bound js push add sahf add addr16 pusha inc pop (bad) stos fs test cmpsl aaa mov nop jl mov js int rolb push std test and jnp jb decb push imul in sub lcall mov das mov and ds add je movsb insb or cmp fs mov sahf popf mov pop ret imul (bad) cmc sub mov mov mov mov rorb pop mov jnp arpl lcall mov dec aam pop or xor sub cmp out cmp mov mov inc (bad) xchg (bad) dec jo les loope add pop and ja pop popa push addr16 je mov mov mov dec mov ret in sarb loop inc mov (bad) imul les xor mov jo or movsl mov jge,pn scas (bad) dec adc cwtl and pop int3 mov outsl cmp cmp pushf mov xchg sbb pushf test aas mov data16 push cmp ljmp mov sub out leave std mov fs jle and in and lret sub aam in adc notl push pop fisubrl ror pop gs add xchg aaa push movsl or hlt add sub dec in data16 push popf das pop std inc push in fcoms pfpnacc mov sub setns jp mov xor aaa sub pop sub mov pushf mov stc mov lcall in inc push sbb and xor and dec ja fwait test push mov loope ss out int3 jmp popa scas js (bad) mov popl roll jne bound (bad) xchg jecxz xchg loopne add pushf fs lahf aas cmp shr in pushf iret ja cwtl lock xchg pop pop or xchg lods mov in inc mov push mov dec and arpl lds cmp pop movsb cmp xlat sbb subl ret jne scas repnz fs cli xor xchg jmp add out cmpsb add nop pop add test stos push mov mov loop cld push xchg xchg int aas in add pop pop insl xor sarb divb jo cmpsl pop iret push inc and cmp mov lret dec push or xchg xlat clc sti adc inc xor or addr16 hlt sbbl pop stos push mov xorl inc lret dec add or push insb ljmp lahf cli pop jnp and dec loopne jmp dec test push pop rcrl cs pop into popf test scas jbe aas sbb sub pop int3 xor es outsb jnp jne push jo sahf pop sbb imul dec sbb pop cmc inc mov adc xlat xchg pop or stos cmc sbb iret (bad) sub cmpl mov mov stos out (bad) mov adc jnp push sub mov enter stos xchg sub pop adc inc pop mov aam aas dec test cmp fidivr ja movsb out push js sbb jno mov fildl dec cli sub or add lret pop push sub inc push loopne cld sbb sbb add lds aam dec mov pusha xchg int3 adc (bad) scas push jb pop cmpsb dec imulb test cmp xorl lret ss fsubrl (bad) sub xchg in cmp aad (bad) fxch cld out cmp sar mov push outsb iret pop fldenv and or in mov sbb aaa pop xor popa pop addb lcall mov mov fbld (bad) cld adc add push mov pop (bad) add push (bad) dec xorl cld test mov cmc idivl jnp adc outsl xor test mov jno fcmovnu pop scas cmp test mov dec jp push cld jbe pop sbbb push loopne mov ja jge inc or cmc sti push aas mov les fistl sub or dec mov adc adc lahf sbb cs push jecxz ss mov inc pop icebp lret mov and xchg or lcall lret dec stos add add cmpsl sahf pop out les nop setp pop push pop int xor fistp dec adc aas fs and repnz loopne sbb push scas xor sub jne adc mov xchg loopne dec xor scas jb or das pop jnp xlat adc aaa xlat (bad) sbb mov and adc outsb pusha sub data16 push addl scas ds aas mov int3 mov push mov jmp inc pusha rol jl sub pop sub mov out mov insl lcall (bad) notl cmpl decl push adc xchg push mov iret push cli dec dec push lds aad xorl and in popf stc or out in pushf sbb popa sbb aam pop movsl jg and (bad) mov notl jle ljmp add outsl mov ror imul add (bad) jae xchg sti xchg cwtl orl add sbb js dec pop outsb ret ret add lret inc insl ljmp push add ss (bad) fs and insb outsb and les dec fisttp mov inc push mov cmp aad or stc lods xchg addl jnp js ficoml jno les lahf divl stos sbb test imul jae adc ror popa movsl mov dec xor sbb lds mov lahf pop mov fs pop cs std sbb jp clc gs fisub or inc rorl pop in inc push lret sub out (bad) mov leave jecxz ds xchg cmp dec pop push xchg cmc and aam mov faddp push fidiv mov test sub mov repnz ds dec scas and mov or mov call imul xor and imul jle les jnp dec push or hlt xchg pop sub jb push in (bad) lret cli sbb les aad mov mov repnz lds rclb rcrl add data16 fistp mov out pusha (bad) jmp mov sarb sahf sbb fisubl fidivl and ret xor ljmp pusha fcompl test and bound sbb movsb jo jmp inc mov push push fbld sarb andl test fsubl stos pop out (bad) mov out movsl das and ret lret pop data16 push and enter jne negb dec rcrb fs xlat push inc push int3 imul or cmp std test add mov lcall jl pop jbe enter or and ret adc fldenv pop int aad xchg add adc call xor js stc dec inc cs lcall aaa idivl (bad) mov inc hlt std jb imul push fwait out pusha out push inc sbb jns or stos pop outsb mov dec xchg mov cwtl jmp mov sub lahf fiaddl in incl mov das loopne int3 push add inc xor xor mov in dec out or nop loop cltd or out popa add push leave ljmp jge (bad) loop ljmp sub pop movsb add insl cltd iret das outsl stc (bad) scas sbb pop pusha push in pop cmp cld (bad) fimull iret pop push aam mov lahf fildl dec test loop mov push rolb mov and cs ficompl ret jecxz cmp in add (bad) cmp mov outsb xor out xor pop int3 fnstsw pusha out loope sbb out mov sub xor mov jl jno sub xor ja mov lock fldt xchg sub push int3 cmp stc sbb je in stos jo xlat iret (bad) mov pop jecxz rcrl out fwait lds jo movsl pop addr16 jb dec sbb cmp gs test inc inc sbb sub mov gs dec pushf pop xor mov pushfw cmp test mov mov mov out mov popf ljmp dec movsl outsb mov mov fstl inc add adc push fcomi pop xor jmp daa cmp sti dec sub repz sahf jb dec ljmp and mov inc mov test add and and mov movsb cmp rcrb dec hlt outsl inc mov outsb sbb fs jb mov lods pop adc pop dec xor in sub sub mov repz ficompl aam loopne lods aas inc mov pop xor mov das out int notw orl movsl pusha sti pop and arpl jg and pop daa lods sbb repnz sahf or mov aad sbb popf cmp mov xchg xchg cvttps2pi fild cmp xor mov out jge jle sub in sbb js fldcw es movsl add inc movsl arpl cmpl mov fcmovbe sbb inc adc imul fmuls sub mov mov or loopne js in mov inc push sub les movsb cmp and jg xor push in cmp inc mov sti sbb leave je sbb cmp sbb lret mov hlt push sub mov pop push daa mov mov mov lcall mov movb pop sti es mov push sbb ret daa fcoml iret lret mov mov add xchg push adc add repnz pop or or inc mov xchg insb cmp inc sbb test cwtl push sub xchg inc push cmpsl (bad) dec out mov sarb out pop outsl fimul and mov in aas mov int3 inc aad cmp and cmp lds add loopne xor cmp outsl int3 inc mov inc hlt lock icebp xchg aas test adc hlt cmp out xchg (bad) fdivl cwtl add xchg dec cmpsl icebp movb fadds icebp push xchg xchg imul fcmovbe sbb inc mov scas pop ret pop jmp mov cmpsb mov fsubrl lods and cmc mov jne popf jo jne xchg jno cmc sub pop jo cmovle ljmp xor arpl es inc pop adc leave mov loope push dec ret aad mov xchg mov pop jnp push inc xchg sbb or fcom xchg inc cmp (bad) cmp cmp stos loopne dec mov pushf pop ja cmp xchg xchg (bad) mov push push xor loopne xlat mov (bad) push lret (bad) mov or bound or push fnstsw push push add jb sahf sub fcomps jle push sub (bad) add jecxz or adc push sub push rcll test fdivp test clc add fnsetpm(287 mov mov xchg xchg adc sahf mov adc adc mov (bad) push movsb or ficom stos arpl jo shl inc dec jp (bad) mov sub fisttpl cmpl (bad) outsl dec or test pop pop sbb int3 add push xor cmp adc inc jle sbb icebp pop fwait cmp das out push cmpsb xlat ljmp out sti insl jecxz aad mov sti push rclb gs add out mov or imul roll push imul ljmp pop xchg mov push pop stos push test add inc sub jae mov fistp out insl (bad) iret pop xor leave scas inc cmp icebp je and sbb aaa mov je push lods or je or repnz mov std pop lcall daa push pop je mov inc insb jo inc aam mov mov rolb xchg push fadds cmpl fimull mov cmp push mov xchg dec xchg and test push pusha dec test (bad) popa adc (bad) cltd aad dec dec lea sbb dec addb clc sub lahf sahf jb xchg inc (bad) push pushf leave mov je pop push add adc cld movsb add jb xchg out xor in push xor mov (bad) aaa hlt push mov call test icebp in popa or enter std in inc in xchg mov xor jle inc inc rolb dec scas or std add pop in (bad) je xchg insb mov std sbb xor xchg inc push jb pusha in in xor dec sbbl inc mov push jae jbe push mov andl pushf rcll ds mov call ret fcoml arpl pop push xchg add mov jnp lods hlt pop xor scas xor sbb lods jnp lcall daa inc or scas xchg in daa jno push mov cwtl jno ss lods mov les andl test jne xor add mov or mov arpl js xchg dec xchg push lahf cltd xor es add xchg jo sbb xchg pop cli rolb push or dec stos cmp add in pop stos adc sub popa pop mov out sub test mov in cmp mov push push jbe mov test and lea cmpsb and jg movsl cwtl sub outsb mov test xorb dec lock or or test jo sub xor ret leave push xchg mov (bad) imul clc xchg or out sub fcmovu aaa cmp loop inc imul out outsb mov repnz ds clc sahf clc or addr16 mov ja in and xchg xor das xchg mov or sub lock mov pop fist fcomip adc dec sbb mov add test sub add push pop (bad) jno mov jecxz gs aam jl rcr hlt mov sbb push adc or mov in scas sub sbb lods xor jg pop pop pop shll push xchg std inc push fisubrl enter adc mov xor test dec ret mov jb daa out cmpsl pop mov ss ror gs mov cmp pop push mov loopne ds mov pop fnop cmovne out aas roll into loopne fcomip loopne and push or jae insl (bad) int3 and lret sbb loopne (bad) xor cmc (bad) xor adc imulb pop lea push insb adc and scas int add out pushf mov cmp jnp testl push addb pop xchg inc test xchg sbb in rcr pusha mov leave add adc movsb lret push dec inc adc es fcompl push push fnstcw lods aaa pop sbb push fs cld push cmp xchg fcomip inc sbb lods xchg loopne js scas mov mov pop out movsb scas pusha mov push jne ss lcall and ret pop dec push mov decl and sub push sub push or ljmp hlt xchg mov xor sbb popa xor fstpt das pop fnsave leave in lods and add inc jb and pop testl sub add adc dec out aaa popa outsb mov pushf hlt enter (bad) popa xor insb dec push inc outsb jae rorb cld roll or into add or mov fisubr mov pusha inc mov inc cld mov es jmp scas or imul ret lret cmc int int3 gs (bad) and jl inc pop push and in pop fldenv push movsl (bad) rclb push popa pop mov (bad) pusha fisttpll jns stos pop lcall sub (bad) out jmp jne cld ret decb mov push mov sub mov inc popf push inc out fcmovbe xchg sub dec mov loopne mov loop aaa aad jb ret lods jne in (bad) int3 xchg stc pop test or dec aam mov pusha and jbe jl adcl xchg int pop mov push lcall std rcrl inc inc mov cmpsb or mov shr adc std fistpl inc add repz sbb push inc (bad) stc xchg inc nop aad dec pop hlt stos lret mov cmp ret cmpsb bound pop mov pop and mov xchg ficompl add je sub ja push test int push addr16 push mov xchg cmp fldl insl stos nop scas or mov rolb adc rorb jo,pn das push lret dec popf pop xchg (bad) mov stos ret adc popf popf mov dec pop movsl lock adc sbb fdivrl sub or test sahf sbb add jns adc pop (bad) std imull imul testb lods das (bad) rolb lea cli inc mov sub dec shll adc repnz in push pusha xchg xchg mov and cs pop mov xor mov jmp imul scas inc loope (bad) fstpl cld xchg sbb insl cs fildll xchg in xor lock daa xchg sub mov fsubrs adc or adc push inc dec pushf jmp je sbb mov std and inc stos loopne loop fcompl sbb sub dec pop jb stc sub inc mov cmp ds mov sarb rcll mov int xor lea and repz add inc sub xchg aas sub push cmc movaps repz data16 (bad) sub into clc lcall leave and aas sahf ljmp cmp jg test jl mov aaa gs jbe cmp push sar cmp (bad) (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle incl cld psllq inc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in fadd bound sbb mov mov mov je (bad) sbb sbb adc pop push insl or adc out xchg jmp jmp pop mov cmpsb xchg leave cld data16 insl (bad) jno scas xchg mov fldenv (bad) pop ficompl fstps test cmp fcom adc movl scas xchg sti idivl fs mov jmp aas int pop mov xor es mov cmp rcll shl or je push out jnp jbe xor jne aam mov sar jmp push cmp scas xchg mov lcall into and push jle sbb fnstenv sahf inc xor cmp jmp jmp lcall inc inc lcall cmp lods fnstenv (bad) (bad) or aad jnp pop cmp (bad) or fsubl fisubl sbb sti lcall pushl cmp adc (bad) shlb sbb push mov aad add pop imul (bad) dec repnz popf dec (bad) lock mov mov mov mov mov divb repnz mov jb mov xor adc or fstpt inc mov cmpsl jo xchg adc ret push pop jmp adc sbb mov mov mov scas rorb repz push cmp rorb inc jnp dec mov pop ds mov lock test sub imul cmpsb and adc inc mov fwait sbb xor in cmp dec movl adc push jmp xor jns push cmp mov sub shlb imul imul xor lret xchg cmpsl fstpt jmp mov mov aam fisubr inc inc push push jnp out cltd (bad) push jmp jg push scas aad lds jecxz js imul mov imulb loop loope lock js cmp mov insl sbb (bad) mov push daa gs mov mov push and lock add loop lods pushf inc xor jae das mov sub sti lahf xchg out xor daa adc idivl mov push rorl mov hlt aad dec arpl add xchg mov mov mov mov dec pop jmp scas mov mov add (bad) in mov (bad) cli push fldcw mov and fidiv mov pushf popf dec and in fmull push (bad) push add add mov or ret mov jnp lock inc mul je jl pushl mov sbb cmp sbb repnz pop lret (bad) addl repnz sbb mov jp cmp imul jmp pusha sub add cmp movsb popa scas and mov aam xchg repnz gs ljmp outsb les test xchg test dec or xor mov push inc push sub fdivr (bad) aas sbb pop sbb dec (bad) mov push mov (bad) dec xchg loop fldt test xchg xor add or mov and lcall bound xor scas lret div cmp mov lret lret cmp pop retw out jne ret pop mov or push xor jl into pop enter fidivrl pop shlb sahf adc pusha mov mov (bad) cmc scas inc sub xor je lock in das test and popa adc jl xlat cmp mov shll add in and leave pop push popf shrl sbb push sbb cmp clc jle xor mov movsb int3 jle jbe scas in xor in mov cmp dec mov xchg out pop sbb das nop xchg mov fldenv bound stos imul inc or mov add xor or inc mov adc ret mov pop insl (bad) cli int3 cmpsb adc push adc cs lock mov shlb or lea sbb mov outsl sbb test pop pop ss fdivs imul sbb orl test imul popa jne and dec mov and mov or jns pushf pop adc mov (bad) sub adc popa lds pushf jecxz (bad) icebp test movsb lock aas test and ret aad or xchg xchg mov imul aas xor mov xlat and mov mov cwtl inc add cmp push pop pop nop pop rolb pop or in xchg popf mov movsb or aad mov enter adcl (bad) out outsl int push xchg fist hlt inc push mov lods std (bad) xor movsb xchg or pop or cs push (bad) inc js xchg xor add adc add popa mov sbb jmp jp outsl adc cmp inc pop loopne mov test lock and ret movsb or xchg mulb stos ds cltd aad push data16 notl std jp mov jnp pop (bad) pushf in cmp pop push rol jns daa (bad) push mov cltd push and jmp fidivr push add imul cwtl mov jae push imul cltd je insl mov arpl push int3 pop (bad) sbb dec push xchg out (bad) fsubs mov stc push jo pop mov mov sbb sarb sub adc inc add xchg lret xlat jg mov xor adc xchg jmp into mov push das rorb repz mov xor mov mov gs mov mov mov lods arpl pop inc xor pop mov movsl ret mov xchg rorb pushf cmpsb push jns lock push sbb inc jb mov mov xor push les cmp sub push cwtl mov scas cwtl jge das ljmp into adc jg mov or popf jl push in mov dec iret out push aas in sbb adc int3 rcl jno loope xchg add and adc add movsl ljmp ret cmp add repz mov jnp sbb lahf data16 mov jne iret ficomp jae and adcl sub jecxz nop out cltd mulb xlat cmp jno cmp (bad) push test mov out jns mov jl daa pop add test jle jp and jg sbb sub xor jge xchg stc (bad) adc inc cmp fs push out xor mov lea jl inc nop jo cltd mov mov loope jbe xchg adc push add imul insl inc popf imul sbb rclb cmpsl movsb mov and cmpsb or pop adc adc cmp stos gs popf mov and or cmpsb pop and add push xor mov push pop and fcmovu and inc jle inc sub and enter mov in xor aad pusha gs addr16 mov aam mov push dec repz xlat mov sub jo xor repnz pop inc jmp fxch xchg mov popf mov or orb int3 xor or jmp scas loope faddl (bad) fwait dec adc mov xchg mov (bad) lea loop adc mov movsl insl hlt xor mov xchg movsl adcl sbb dec and outsb out pushf clc xchg out dec fsubrs and mov mov in mov mov js xchg cmp add mov add or int3 cmc call mov inc xchg outsb lea and test push in xchg decb iret xchg inc andl gs movsb sbb movsl and mov add mulb mov push (bad) dec stos mov lods xchg popa lahf sub or lods jg inc push pop dec adc addr16 test mov xor mov inc pop repnz xchg movsl fiaddl pop and das mov mov jecxz or and mov aaa sbb push dec repz and sbb mov dec cld inc and xchg mov or dec aaa xchg lret pcmpeqd shll insl repz lret cli ret out imul jb xchg fldcw mov loope dec gs iret add pop inc xor rcl xchg ficom pop test push cmpsl clc push jle bnd (bad) jmp sar fildl stos mov adc dec test add ret mov les ljmp hlt fcoml jns jecxz add sub dec add sbb sub dec mov xchg cmpsb sbb aad mov inc pop lret movsb jl loop aad test ja jno lods adc pop (bad) (bad) jnp rorb popf stos (bad) mov fidiv jmp and scas addr16 cwtl in aam in insl xchg xchg dec ljmp popa xchg inc xchg sbb sbb and jb pushf jl shrl jb fnsave dec mov cltd sbb cli add cs out jno test add std dec pop xchg inc les repnz jl add mov xor int3 dec ror sbb pushf pop push popa xor rcrl xchg xlat add (bad) jns sub fisttpl inc add xlat xchg jmp cmp inc sbb cmpb mull pop lds mov sti imulb js inc and inc out (bad) cmp dec jge sbb jl jge xor in sbb ljmp out dec adc mov inc xor push in jmp dec jg sub imul push push int3 and fisttp ljmp or out add ja mov jno std xchg into cwtl push pushaw fdivrs inc test jg loopne jns,pt jecxz push xchg push lret addl and lds mov mov (bad) movsb movsb mov add or sbb xchg mov adc cmp pop sbbb pop sbb ljmp or adc sarl xor jo mov or dec and xor dec mov dec push pop rcll repz cmpsl or pop adc rep push mov shrl mov mov int3 cmp dec adc cmpl cmpsb pop xchg jp dec aad add inc xor cmp pop cli adc dec xlat cmp and mov jp inc mov add fs hlt mov hlt jnp or jge inc sbb das cmp mov jl mov sbb cmp scas mov pop mov push pop sub pop xchg pop loope xlat sbb pop mov (bad) dec push clc dec adc int popa inc xchg lret lcall inc dec dec lcall lods icebp mov ret je loopne (bad) aad (bad) iret and stos fsubrp add imul sub cltd sub adc call pop arpl adc cmp int3 inc and xor xchg ret test (bad) int3 sub outsl ja sub cmp mov fstpt out dec push sub mov add dec add jb adc es movsl fcoml sbb mov (bad) leave daa imul mov lods jno repnz repnz sbb add add mov pushf adc shrl adc out dec dec pusha or mov hlt xchg push mov mov faddl cltd fist add jle mov pop (bad) ret and in or jle jp sub nop jg popa mov icebp cld fildll mov sub mov lds outsb or fs sti les cmpl adc add mov adc js,pt pop push arpl mov mov rep fs pop mov adc shll and rcr mov dec lret jg mov lahf clc stc hlt add cld or in and mov movsl repnz clc mov mov xchg popa sbb adc mov cmp rclb in repnz cmp inc and scas cmp (bad) rclb leave mov leave divl lds lock in mov arpl xor hlt sub sub je stc ret xor das push or sbb jecxz mov dec frstor aas or loopne icebp js lret push push int inc mov mov lods stos repnz arpl xchg pop xchg xor clc dec leave jae fs mov cltd stos pop fsubs movsb iret out lods adc lock aas add and outsl pop fistpll popf mov hlt cld push subl jmp addr16 sub inc (bad) (bad) iret outsb mov mov lods lret inc mov and jge jne mov ret cs jb imul jl js das mov xor pop dec scas cmpsl push cmp js leave adc jno mov testb sub pop pusha pop or jmp dec mov scas cmp cmpsb pusha mov pop icebp fstpl lea mov scas push bnd push push xor pop or out ret rcl out (bad) xor jo scas cwtl and fidiv in push jecxz loop sub adc jns xchg push enter outsl inc jbe xchg test push daa add mov cs inc (bad) (bad) in inc rol test mov dec jecxz daa imul in pop jg and mov inc cwtl sti movsb mov jge,pt xchg dec test rcrl xchg ret popa sarb lods xchg enter xor test sub inc jno or xor sub stos jne ret mov sbb aas outsb scas fisttp mov in or (bad) sti aas in out sub cmp fistpll pop cs mov jbe cmp enter in faddp dec inc (bad) (bad) pop dec xlat push mov inc add ja and sbb sbb mov inc shlb push pop out pop popa ds fisttp or mov movsb aam inc hlt sbb aam mov lahf (bad) mov addr16 sub pop mov dec std (bad) xlat mov ja mov movsl push mov and and inc (bad) in mov dec adc shl in dec adc jecxz mulb mov mov cli fsts dec jae jae fsubrl fs add std jno out jns loopne,pt aaa xchg push push dec imul notl sub sub ret and mov jae mov mov mov clc test aad push xchg cmpsl adc push outsl fistpl cmp add xor xchg scas push push mov sbb mov mov mov fidivl push dec rolb clc adc loopne fwait rcl cmp pop dec pushf fldt sbb push pop adcl pop or mov loopne pop mov aaa into mov fisub and and sbb (bad) movsb out adc cs or adc adc add inc in (bad) loopne fcomi push aad lods repnz jnp in out cmp push lcall cmp in (bad) testl inc cltd outsl ds jmp push aaa movsl cmc std aad jnp push and sbb push outsl (bad) ss mov dec (bad) pop icebp pushf cli adc push fwait aam (bad) dec push and (bad) mov aaa repnz xchg push xor mov (bad) in jns repnz or mov add inc or add fsubp push lds movsl jl arpl addl cs mov test or std fs mov jge je repz mov adc mov insb lds adc in ss inc cmp mov inc das pop loopne mov js add int3 repnz aam pushf adc push cmc pop ret xchg outsb inc mov in in push outsl aad adc out in xor loopne insb pop (bad) jo sub fiadd cmpsb (bad) in mov cmp mov inc jg nop sbb mov mov insb push push or leave gs dec xchg aas pop cmp aas sbb test pop je aam (bad) out cmp add jle,pt mov insb (bad) or pandn mov cmp inc pusha cmp iret lds xor push dec loop cmpl xor pop fwait push je jecxz sub adc jge push jnp jae dec sub loopne,pn xor movsb dec sbb icebp and and aaa rcrb fsts pop mov dec lock hlt (bad) out mov cmp mov enter aad and and out pop sbb or loopne xor xchg cld xor loope out lods push push inc daa push push pop int adc push push lock sbb (bad) lret outsl addr16 sti sbb add xchg (bad) out rclb pop movsb add pop dec in mov or in mov scas and sbbl sub jnp sbb pushf and xor mov mov inc mov jp jns pop inc stc stos sahf mov icebp mov pusha data16 scas les je in push jns cs es push imull (bad) push dec hlt adc mov mov lods (bad) inc dec stos pop outsb sub mov gs cmp stos jns push int dec outsl test jns jb pop rorl xchg jno loop and ja sub pushf (bad) imul mov js pop lds lock imul push add add aaa fisubr inc gs cwtl xor ss int3 mov sub (bad) jge popa xor testb jle lahf or stos nop out push jp pop sub out (bad) cmc int3 cwtl iret xchg pop jb push xchg add jl sub loopne lods mov and test push pushf xchg mov mov xchg clc jmp mov mov dec sbb sub or push outsl adc mov pop repnz sub push adc mov shr lds pop scas shrl push std jno test std flds xchg sub mov scas adc jb mov mov inc (bad) push addl adc xchg ret test test jp lcall (bad) sub (bad) (bad) ljmp jae jle (bad) movb aam scas das popf leave lcall pop and fwait pop in aam clc add test xchg je inc mov pusha (bad) gs test push pop movsb sub or aad in xor fsubl pop stos mov mov pop mov mov xchg outsb mov lds popa pop cmp enter insl fbld xchg sub lock scas adc ret aaa pop rcl cmp cs mov shrb dec cltd sub icebp mov adcb pop push fldt jp sub adc stc cmp imul mov dec mov mov addr16 cmp mov leave adc (bad) pop stc sub add insl (bad) mov jp cs push repz ss or inc xor dec daa pushf call pushf lock loope sbb xchg inc aad inc insb pop ljmp mov sti es push nop jg std gs ljmp fs mov jb fwait jnp lods mov sbb aaa rcrb ljmp jo out sbb sarb xor fldl mov mov jl xor rcrb mov (bad) adc push inc sbb dec loope and xchg inc outsb cmp fsubrl jmp lcall ja sbb xchg push adc pop jl stos (bad) jl jae xor insl cmp push xchg jg jno mov lcall into lcall dec or dec stos lods push loope mov mov (bad) fcomip jo sub flds ljmp mov inc roll push dec xor xor adc pop push es es xor jae insl mov sahf or and js or or sub lcall pop sub jg and mov sbbl jle and sub dec push inc inc cmp xchg ja cmpsl js sub fnsave or dec aaa sub sbb mov mov shrl sbb mov mov or aad int3 mov cli mov sub stos jbe jns sbb jp xor int3 fbstp mov cs xchg loope out pusha push jp cmpsl push dec sub mov pop int3 jmp aad imul std dec cs in sbbl sbb fadd xchg aad mul scas fisub enter mov jo mov fnstcw popf pop cmp jne cmc sub ret fistp or and repnz adc dec or pop cmp sbb push into push cmp out pop shll cmc lock mov pusha in sbb jle stc std xor rcrb (bad) or dec cmp repz jp mov and add inc xor mov cmp cld sar xor jnp mov jl mov push dec or jno sub sbb lock inc xchg lcall (bad) jo jb or push or call fidivrl ret inc jmp xchg arpl jmp push ljmp adc pop mov rcll inc jne and cmc adc mov add stos sbb dec repz out adcl (bad) daa push inc lds rorb jl mov fnsave lea fsts mov outsb and dec jg mov out xchg mov sbb (bad) (bad) loopne xchg arpl scas mov mov add shr loopne cmp pusha inc sub fistpll mov inc push cmp ss arpl sbb cli scas ss mov ljmp outsl pop xor fisubl dec imul sbb notb xor fidivrl leave fisttpll mov lret jmp xchg mov shrb dec loope imul testb adc bound rcll cwtl mov mov sub push test ret fild pop inc ja (bad) mov push sbbl mov xlat dec int3 inc rcrl fnstcw dec xorl sahf mov mov (bad) xor cmp add xchg mov cwtl jbe paddusb mov or loop or dec jl sub push insl repz mov inc mov in popa ret lahf xchg idivl rcl or icebp lods xchg mov into (bad) xchg fistpll xor out rorl mov insl sub lret xor lcall adc in sti dec cmp dec sbb sbb gs in jecxz push pusha iret jge fstl bound (bad) cmpsl sbb add mov jecxz push mov inc and sub loope mov mov std sbb add mov sub cmp mov shl bswap inc sbb popa cmp jo mov xchg pop add xor aad add mov inc inc (bad) je repz jns int lcall xchg mov mov cmp inc mov mov icebp not xchg mov sarb sub call cmp cmp pop mov or cwtl xor inc fidiv cli roll xchg cmpsl and jb mov into mov sbb arpl dec mov repz adc in dec (bad) aaa test mov repnz (bad) push cmpl cmpsl cmpb addl nop pushf mov add mov adc ja int mov (bad) outsl push and cmpsb loope cs insb sti and mov xlat mov mov push pop pop add mov imul adc cmpsl xchg inc (bad) into int push cli mov scas repz pusha cwtl dec push lahf push add icebp aas arpl out ffreep stos cmpsl sbb lcall icebp inc cmpl and fsubl outsl fmuls mov jo mov rcl out ficompl mov notl push dec in push loope rcrl mov jae imul rclb xor inc ja lret cmpsl in es sbb rorb hlt mov cmpsl mov pop or pop hlt cmp push jmp dec lret sub into adc mov std add sbb sub pop sub mov repz add inc add in xchg js sbb inc insl insl pop int jno fwait cmp mov outsl mov stc push mov push jecxz in or jmp ja jnp bound mov test ds scas cs hlt push inc pop (bad) mov icebp pushf jne mov push dec lds push das cltd ror xchg cwtl dec sti xchg xchg pop pop stos jmp (bad) cmp fwait or int3 push inc or xor or jp cld mov dec jmp mov cld add (bad) int3 pop xor call loopne and inc test stc sti iret (bad) icebp hlt sub add add push xchg jo mov lahf jle rcrl mov cmp mov mov sub xchg jb sbb xor inc addr16 xchg rorb faddl xchg jno add mov xchg or sub mov roll (bad) sub xor mov (bad) sbb cmp jne push mov mov in fs rcl sbb dec lods test mov mov mov xor iret pop adc xor dec das cltd add fcomi dec lods stc mov cmp dec test mov loopne push jle pusha mov add xor add mov sbb cwtl fidivrl xchg clc outsl outsl pop loope cwtl mov add addr16 pop (bad) in xor mov scas bound lret jnp push aaa iret inc mov add xchg sbb add hlt movsl adc dec xor xor adc and scas outsb sub aam les aam lods sbb mov repnz xchg xor mov or fisubr stos jo push out clc lods sbb add mov (bad) cmp cmp iret jno test outsl ss push data16 int3 dec sub xchg rol js mov cmpsl xlat dec popa pop dec enter mov xor inc mov cmp push int3 cs lea inc xchg clc sub push mov adc add and notl mov cli fs test insb push scas fwait int xor mov mov mov notl mov mov ret sub pop sbb hlt push outsl push nop xor push adc mov fs sbb push (bad) in mov loopne sbb data16 fldl jae sub pop data16 mov push jl cmp or pop popa cmp sub je imul xchg fistpll sub inc test adc cs int jp sub push imul bound inc xlat push cwtl pop jno loopne les out adc cmp insb dec dec push lahf aaa les fs (bad) mov sub rcl fadd loopne xorb push js aad mov mov inc call ja adc lea and jbe dec sbb pop xor loopne xlat xchg jle (bad) leave xchg insl push outsb adc pop lods pop xchg inc adc imul sbb (bad) and shr (bad) lock pop xor adc repz pop mov lock sti bnd cs xor push (bad) dec add inc call cli push push not cmpsl add push icebp fxtract xchg rolb cmc xor sbbl lds inc mov lods rcll jae sbb cmp cmc (bad) pop popa xlat repz dec sahf incb mov jns out and push hlt jae shrb into insb dec xlat adc xchg int icebp xlat scas pop test (bad) leave mov add cmpsl sti scas xor mov cmp sahf ffreep xchg daa mov sub xchg imul add nop daa push icebp je push sbb pop cs inc mov addl insl cmc xchg add enter outsl and xor mov sbb test and add or and push inc xchg pusha push jb nop sub and stos cmc imul clc or aaa stos aaa ret xor sub je popa xor xchg mov pop jb xor cmp cmc in (bad) jne mov imul cmpsl loope mov jo xor push add jno sub jg lock push inc add push xor push roll jb cmc lea xor js in test push xchg addr16 push test int3 inc sbbl sbb lcall and jg andb adc int mov in or int3 (bad) sbb adc ljmp call lret leave mov clc push mov jle xlat inc dec pushf or xor cmpsl lods mov lahf sbb xor jmp dec push call or jge aam cmp push adc mov adc cltd pushf bound (bad) movsb lods inc jecxz punpckldq xchg xlat dec mov xchg or aaa xchg xor xor push or sbb popa jne sub imul js mov (bad) mov dec cmp pop movsb or pop int (bad) xchg and pop mov fsubrs repz push push cmp ror dec ja aas jo aas jmp mov xor outsl mov mov enter dec xchg icebp repnz lret sbb jg xchg pop test rcrl pop xor sub iret imul and pushf (bad) push enter mov nop or dec mov mov mov stos xor cwtl cli repnz insl insl mov into xchg sub fdivl mov adc pop inc lahf push sarl jbe and or cltd mov sbb daa (bad) rcr or and popf mov mulb out js xor ss sub push out push xchg push xor les sbb ret sub cmp pop inc push adc lcall ds lret or loop push imul in xor cmp scas scas mov divl out jmp outsl lcall aas fstpl inc rcl adc out leave pop sub sub sub std dec mov fcompl mov das add pop cmp ss lret mov sub xor add leave fistpl push pop (bad) into push xor xchg dec lds or add cwtl cmpsl divl jge push inc lahf cmp cmp daa outsb adc jecxz stos push scas cmpsl xchg std stos inc call add stos fisubl mov fwait pushf shrl or je stos inc enter jo clc inc xchg clc in mov or mov popl ss icebp enter xchg xchg jg mov lcall push inc push mov call in stos (bad) sub push push insl push data16 neg mov xlat rcl push ljmp lods dec mov inc mov adcb shll ds out pop mov fwait xor mov inc mov pop add or addr16 popf fwait xlat add mov dec push dec hlt push loop and inc rcrb cltd fimul push fiadd pop dec divl fist out mov mov fdivs fsub sahf in in mov adc xor shrb sbb lods (bad) pop or xor cli xor or xchg out es daa jae mov scas inc ljmp inc leave sub mov ja nop (bad) jbe cltd ja xchg sbb nop/reserved data16 push in sti dec in jle insl outsl pop rcl xor mov shll outsb mov test or movsb dec jnp push sub lock stos dec cmp out cmpsb xchg ret movsl ret adc push pop aam mov cmp xchg icebp cmp push clc jne sbb test iret inc sub jno jecxz lods in jo pop inc jbe (bad) ficompl jno cmp fdiv cld and mov jl mov xchg in (bad) icebp inc cwtl test or xchg xchg adc aad xchg dec cltd and adc out pushf xchg xorb stos shll scas ret insb jo and mov sub loope cld cltd les dec xchg fcoms (bad) jnp xchg loopne sub adc in mov dec repz mov sbb sahf gs insb test inc add sub scas mov push push inc enter add shrb ja xchg jne arpl mov pop and sbb mov xor sti (bad) es xor sub insl cmp mov lds pushf mov inc jne ss xchg mov mov std mov sbb or ss jl xchg xchg lds cli fcmovnbe fcoml jge xor adc (bad) fdecstp and enter xchg add test rolb (bad) test mov adc sbbl cmpsl lods jecxz sub mov mov sti inc xor or xchg lret adc ret dec xor fildll xchg jl add mov pop in add sub cs and in jbe jno xchg rcrb add test test hlt dec sub lret in rcrb (bad) xor dec pop push push dec or and and push sbb jae sub push cs jmp nop loop aad push sbb insb push mov loope dec mov inc push sub and push mov jbe xchg std test adc mov push sahf in (bad) mov xchg xchg sub or scas cli fisub and jle out mov enter mov lret ja mov dec sarl dec insb test cmovle stos lcall sbb pop inc ss sbb addl fildll mov push mov and mov leave sbb aas mov pop aad ret in imul nop loope adc dec aam pop sbb icebp dec sarl mov add push mov xchg in lock push dec out js push stos insl notl nop or jnp cmp inc inc enter cmp jmp dec aad cmp jge sahf scas fisubrl addr16 jbe mov lahf push inc add cmp call imul fstpl rorl add xor xlat (bad) repz scas cmp ffree xchg int insb stos in mov iret mov and dec push out repnz push popa mov (bad) dec sub gs mov mov dec pop xchg clc mov jmp xchg cwtl mov mov pop mov pop pop push pop push cmp sbb stc pop mov bound mov cltd int3 push push mov rol loope repz mov or jno cmp jo and rclb xor lahf or pop sbb xchg jle test loopne popf jmp mov fs call (bad) dec (bad) enter mov pop daa xchg push repz add xor (bad) inc aam mov imul cmp add fst sbb lods cmp adc adc cmp jmp lcall out mov pop mov leave pop inc add out xabort pop fcmovu xchg push xchg mov mov shrl fs clc int cld and inc adc jl iret lea mov cmp fdivl xlat test pop and push out out dec int jbe data16 loopne dec mov or fistl out rclb movsb adc pushf xchg add sub pop jecxz cmpsl movsl lret adc mov mov pop stos xchg jnp test aam test mov lds jo stc add stc mov rcl lock test shl inc shrl std aas mov mov cmpb add sti mov icebp shr and call cmc inc sbb sub mov test insl ret int3 push insb in jo insb subl push push scas das jnp pop mov loop pcmpgtb sbb xchg xor cmp dec cltd xor jge outsl dec push lock xchg lea push loope adc push jmp mov xchg pop or rol dec dec add jg bound mov push icebp jae lahf mov cmp jb stc (bad) mov das lret inc ljmp push mov push mov cmp adc in and subb repz mov or mov lahf loopne lock out (bad) pop cmpl cmpl jl int3 inc movsl jns mov pop dec dec loope jge dec cmp sti sti push xor jg sar or lret jo test jo xor clc sbb push push add out data16 in sub mov push pop aas sbb mov push pop pushf out dec mov nop mov xor fldenv (bad) in or (bad) push inc mov negb imul sub dec push xor lcall imul aam lcall mov mov stos mov (bad) cmp (bad) in or jge popf cmp push cltd add pushf and notl lods bound movb push mov sub push insl or mov adc dec movsb pop (bad) jo aam shrl inc jle std in inc popf and xlat dec call xchg or dec dec scas in mov jg nop mov sbb lock push push mov int (bad) push cmp mov aas je sub cmpsl aaa and in std or xor add mov xchg mov push loop pop cmp stc pop sub sub adc adc (bad) hlt xor dec inc jp imul out mov outsl std cli push out cli sub lock inc and xchg and and orl jnp xchg sub xor xchg test sahf jmp inc out and push mov sub pop xor iret stc scas and iret (bad) fldcw inc lahf dec in out inc mov scas jle pop jbe out int jmp mov and cmp sbb notb mulb addr16 (bad) jmp cmp sub inc test jecxz xchg inc cmp lea aad push ss or mov jbe adc add inc xor jne iret jecxz fistpl adc pop lcall (bad) aas loope cltd sub cmp les fcomi or add pop sbb dec popa (bad) mov mov pop movl stc test lods and push or push (bad) divb cmc pop stos adc popa outsl mov inc jmp cmc fldenv out or cltd aam cmpsl dec xor movsb hlt call lcall jae xchg xlat mov into jl sub ss mov cltd add lods dec xchg mov (bad) pop xor movsl loopne pop add rcll push movsl and fwait sub stos js pop xchg shlb out icebp imul inc pushf mov push imul push sbb cmc test xor jmp adc movsb fucom rorb addr16 (bad) add dec sub rcll jbe xor xchg lahf cld sub sbb arpl je hlt pop mov sub shll call dec out pusha nop cwtl lock (bad) in pop cmc adc mov addr16 and jno ds push sbb es das out sarb sbb bndldx mov mov sbb mov cwtl hlt fstl mov jbe es lcall jle in and cs scas jns push scas push push imul sbb xchg pop inc in sbb scas pop dec iret loop test es mov aam int bound adc jnp in loopne mov add pop mov imul mov mov ss call pop sarl rcr push loope es out pop add cmp ret fcoml push fwait lahf add xchg mov (bad) call out fisubrl js push iret rep lahf imul mov lea xchg movsb sbb mov lods sub inc daa popf sbb pop xchg lock out pushf inc leave ljmp jo clc nop popf sub cmpsb pusha ljmp aam lock xor shrb mull decb mov movsb add lahf dec inc frstor xchg rcl shlb stos cmp xchg or aad inc popa mov xor lods cmp lock lock inc test js xchg daa cltd cmp mov push (bad) mov cmp lea repnz (bad) sbb dec aam aam inc pop lcall xor push lods mov mov xor pop mov and mov inc push aam mov fdivs pop mov sub cld fwait jae pop push xor pop xchg sub stos pop test inc pop xchg lods jl mov push jo lret mov sbb dec test push lret lcall rcrb outsb mov and sti in jmp xor test push and insl test mov pop insl out test mov push adc mov (bad) ss mov test stos int sub push sub xchg jmp xchg mov jecxz and sub js and mov arpl int3 xchg ror (bad) mov mov ds mov mov jg testl ja scas enter push in orb sbb in fistl insl fwait or jnp aam loop (bad) jge popf pop xchg push mov pop push add sahf adc adc sub jbe jmp pop dec clc jnp xlat pop imul mov adc cmpsb xor sub dec fdivp loop fmuls lahf pop cltd leave je ljmp inc adc xchg xlat fcompl push sbb jl dec mov cmc jne dec push int xor push test or push dec sub mov je (bad) outsb or xchg fildll mov sahf in orl mov fs mov mov test enter enter xchg dec jg mov inc pusha scas jmp outsb push mov pusha lods stos int (bad) add call xchg pop mov lods lret bound xor add or dec mov xchg std inc xor bound lods xchg loope push es (bad) and mov (bad) js insb sub aas arpl out jle bound lods shr (bad) idivb stos sahf mov dec mov or incb adc sub je xor jno add ja int3 cmp fiadd int test and mov sahf sbb das cmp cmp pop xchg mov movb andl inc lds mov pop adc fwait leave dec push ret jge jecxz push les mov inc add notl (bad) fs enter add fnsave mov in hlt push pop and jl ljmp adc add sbb in js push inc push test out dec cmp mov inc push cmpsl push dec jle pop stos jecxz ss fwait adc test or incb into aam mov dec and icebp lahf mov jbe adc lret ljmp das xor pushf fstl aad rclb jne test fwait ret leave dec mov jnp sbb xchg pop iret mov dec jne mov pop (bad) mov neg jl jnp int3 fnstenv push jae pop or loop roll call ljmp je aas sbb lret inc addr16 cmpsb popf cmp cmp out shrl xchg pop imul and rcrl xor inc aad and pop ljmp stos cmp add hlt aaa ret insl xchg xor sti repz pushf insb aad lock add jae push mov daa decb jae dec mov call push in xchg push cmpb jno out sarb and ja fmuls and push sti dec js icebp xor sub pop jmp (bad) adc in inc push add aad mov sub jge adc dec jne lret fisubrl push xor scas popf xor pop gs dec jae push rorl xor push mov push or ret test imul lods mov cld pop lahf idivl (bad) adc popf cmp adc or in les xchg xlat push leave dec mov addr16 int3 test dec mov jecxz repz stc into pop inc cmp pop jge xor nopl sbb xchg int3 jne mov mov mov outsb and dec or push mov mov fwait cmpl cmp (bad) and dec xchg insl and or mov mov call mov mov es xor fisubr lea jno les call jmp push scas aam (bad) scas jmp mov xchg push ss xor imul and adc gs adc pop ss dec push in dec jns jecxz dec pop inc fwait mov scas jge sub sbb lcall or sub jno mov int3 lds mov lret loop int3 sub insl mov and stc sti inc adc popf das rclb ficom jmp pushf imul mov test push clc cs loope shlb enter out mov sbb lcall mov jecxz bound sbb stos sarb push mov mov pop ret dec rolb bound clc mov adc adc faddl adc or sbb ror and dec out adc mov mov out mov rep (bad) imull adc fiaddl sbb scas shrl cmp pusha push (bad) mov sbb pop scas xchg jns inc sbb mov std jbe repnz insl popa cmp pop mov mov ja das and lret lret loopne bound and xor pop mov enter push xlat sub dec scas sbb mov or cld sbbl out mov sub lock sub dec sub lcall mov ffreep and ret mov fnop outsb fsubs lahf add arpl arpl dec mov (bad) cmp add jnp negl push movsl inc or mov jno (bad) cmc mov sub out sbb movsl inc scas xlat fwait dec outsl cltd or cmpsl mov scas in xchg and or ret fcomi mov mov pop jg cmc mov inc cmp lods add sbb cltd xchg stos dec js push aaa fnstcw xchg lret test test cmp mov pusha sbb sub ljmp and mov dec lret or mov xlat push (bad) pop rclb xor test negb in jl push sbb pusha push adc int and mov xor mov cmc ss inc movsl xor andl push adc psllw in cwtl enter sahf dec outsb scas sub popf cmp xchg sbb xchg jle cltd imul loop pop sbb mov mov sbb pop les push imul sub into mov push test stc cld inc (bad) jle bound (bad) pusha mov mov adc sbb lret cltd iret push out sub gs (bad) push xchg loopne and aas lods push call and rcll fistpl cwtl bound repz sub push lahf fldenv repnz mov pop dec mov adc pop pop xchg (bad) lahf mov cmpl sbb lcall mov rcrl mov mov hlt int mov mull inc (bad) rclb cmp xor stos aad and push out popa test xchg aas jmp stc ljmp ret inc add jo jmp aas loopne leave ljmp mov mov mov mov or fcoml sub fistl mov or mov adc test sub cli or or pushf mov jne and and inc push jo xchg lods pop mov imul sti ds inc out ret dec mov mov cmpb mov movsl jp in mov movsl icebp es test ret dec rcrl add cwtl (bad) adc call and fwait xchg cltd aad ljmp mov rcll jns,pt fwait inc cltd jg jnp pop pop push test pop xchg fdivs negb add (bad) jnp bound outsl hlt cmp jne imul int pop dec ljmp fmuls stc mov adcl push es cmp test xor fisubrl outsb mov sub adc repz mov frstor cmp lds push xor cltd pop dec lods inc ret cmc (bad) addr16 les push jp loop cmpsl mov push mov arpl gs dec push ret icebp mov out fild jbe aaa rolb enter mov jge xor sbb iret (bad) iret cwtl jge leave out push xchg loop out jle mov sbb xchg div iret in sbb or pusha jg xchg mov mov xchg into call mov xchg fbld mov xchg jle pop sahf cmp mov cmp rcl icebp push adc push movups mov push pop arpl arpl arpl aas test sbb fnsetpm(287 sub mov inc lret push (bad) in push xchg testb pop subl sub mov xchg insb imul mov or nop mov lcall sub aas push rcrl jge adc jge cmp push cmp fmul xchg pop jo push push das jmp fwait dec or mov xchg inc jbe jge fdivl dec rolb jo sub push mov push jne dec push inc out or jmp jg cmpsb popa sub jns mov pop xchg gs mov xchg gs mov fcompl mov and fs scas rcrl jle mov lds push xor or ror out lds hlt xlat (bad) xchg sbb or mov imul ds ficompl shll out pop pop repnz mov adc mov cwtl sahf or and outsl loopne push push and cmp mov loope xor loopne or inc ljmp leave sub mov out and adc push pushf jnp pop incl mov mov add fldenv sbb dec xchg push inc iret dec mov into mov fs sbb inc stc sbb xchg test jp or pop mov and (bad) orl jl fs (bad) xor and add fsub pop jl in dec cwtl arpl add (bad) (bad) es jne push (bad) enter mov cmpsb outsb cmpsl in arpl push dec mov mov jo sbb insl jns mov scas mov xchg sbb inc mov (bad) xor jecxz adc fs and aas push outsb dec in sub xor inc rcll hlt (bad) mov lds adc mov jmp xlat dec scas and mov pop mov mov faddl repz lock mov sub pop mov pop ja (bad) jae push or pushf pop mov sub inc es mov pop cmpsb push jb pop les lods popf cmpsl inc dec popf lret or je fsubrp loopne mov inc mov jle mov mov push push push lods cmp and mulb or push ja mov jo loopne cmpsl mov add inc pop scas dec pop cmp sub cmp hlt jp pop out pop popa adc test cmp roll loopne xchg and hlt sub adc cli xchg adc add xchg push (bad) loopne das jle bnd jle (bad) dec (bad) pop mov dec loopne cmp mov ja in (bad) lea sbb pop xchg push subl (bad) hlt pop lahf mov push scas loop out das lds aas mov in aas dec ret cmpl mov aaa mov inc jne in sahf and mov in cmpsl or sahf mov subl xchg mov cmc sbb adc mov sbb movsb mov lds mov nop std mov cmp xchg push ret (bad) js sar fmuls lret or cli pop cltd adc push je imul pushf xchg pop cmp bound stc sbb xor adc or jge dec ror cmp imulb dec push push mov mov jbe call xor push mov into ret jecxz lea clc rcrb push mov adc movsl dec fdivr movsl stos lret cs cmp imul sub jbe push or loope es fdivrs jno dec adc inc lea pop pop jecxz lods mov ds mov and pop out test popf xor inc dec loope jo dec stos sub (bad) mov sbb pop sahf out fmul rcrb fdivr or push sti jnp adc push mov data16 sub add adc lahf inc jmp movsb or fstpl lret (bad) hlt jle pop jbe clc jno repz push xor xor sahf stos gs fs add out std stos cmp mov jmp push mov xor fldenv std mov outsb arpl inc sub test push fidivr pop jl add mov jno xor pushf mov enter scas jbe cltd adc aas (bad) daa cmc mov jo out mov push pop xor mov and movsl lea xchg sbb and and jno in stc (bad) mov inc inc mov sub mov mov mov int3 repz dec clc testb pop fsts lcall ljmp jecxz add sbb (bad) mov addr16 imul xchg lock es call sti data16 aas in fucomip xchg adc adc sub add test (bad) je sbb xor std loopne out addr16 inc arpl xlat lods gs jae sub cwtl arpl lea popl cmp or add mov cmpsb fstpl notl in add or adc sub inc mov adc inc mov xchg xchg scas sbb or loop mov pop movsb sub aam outsl in sbb and jecxz (bad) push lds pop ljmp or mov rcll fisttpl hlt or push push jecxz xor stos inc prefetchw or mov pop push jnp stos mov push jg pop lahf movsl dec (bad) dec add lcall stos idiv pop movb popf lock test jno pop xchg jge jge mov ljmp leave (bad) pop push dec es es out cmc ror (bad) es sub sub gs mov cmpsb push stos (bad) mov jb mov mov stc into sub pop xchg sbb out add mov fsubrl mov jp adc dec enter inc sub rcrb xchg sbb inc fstl enter push inc (bad) mov lods xchg aas xchg stc mov push mov mov xor aaa nop fidivr loop xchg push jge lods pop and iret sbb sbb mov jecxz out stos xor je adc in pop lds rcrb fs jmp push out adc sbb pusha call clc std fbld (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz daa add jg mov lds add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec enter push js in fcoml and sbb jle (bad) mov (bad) (bad) cltd pop lds push add or push (bad) or movsb out mov test loop mov jg jae jle lret shr je inc add or lahf inc iret push sbb sub sub stos dec xor push dec mov mov iret lea xor out bound jg mov fiaddl (bad) mov divb aas cmpsb out aad shr out (bad) lock add jl inc mov adc jg push cwtl mov pop in subb (bad) shrb lahf outsl push psubd or xchg or inc mov je sbb mov cs adc xchg arpl jge pop pop repz (bad) loope nop fdivl cltd sbb cwtl (bad) popa aas sub ja add dec push xchg sbb ljmp repz jo mov cld ss mov dec mov pusha cmp (bad) sarl shrl mov scas jbe shll movsb xor and fwait movsb push jb cmp lret in mov idivb aad mov adc in mov or pushf cmpsl (bad) repnz jb dec jns sahf and call int3 pop mov xchg (bad) sub js pushf test jo lods dec mov rcll mov mov cmp jg std jb lcall hlt ficom hlt les xor (bad) jno arpl xchg or cltd inc ljmp movsb mov add mov je inc int add movsb cmp cmpsl jo dec sub sbb rclb cwtl mov loop and sbb or movsb iret and (bad) pop xor inc iret sbb cmpsl mov adc jle shrl mov call gs jp inc cmp push add sub loop mov sbb gs arpl (bad) in pop inc repnz mov lret xor dec inc outsb sbbl cli cmp les pusha dec cmc jae lcall movsl lock adc adc lcall loop aaa lock subl sbb data16 loop popa jle dec push (bad) sub ja push popa fildll xchg rcr adc adc cmp pop mov jge sub stos inc incb lods cmpsb aam dec push xor jp fdivs lahf dec in cmp jns hlt fadds repnz pusha cmpsl outsb mull cmp scas movsb fnop loopne lcall mov in cltd or push mov xlat pusha jp and inc push xlat addr16 cmp stos mov fidivr pop mov xchg push sub (bad) mov stos lcall out sbb or fisttpll stos jne mov jge mov mov loope xchg enter icebp xor lods or sbb int addl cmpsl cmp sti leave adc mov sbb cmp adc adc ljmp xchg pop insb and arpl sub jo movsb fnstcw pusha dec and or pop mov shrb je and and aas iret mov sbb imul inc xchg and cld adc lcall mov mov fsubrs in xor dec dec test int pusha rorb je lret inc lret mov jb push sub sub (bad) in (bad) cmp mov xor loopne clc sbb mov fldl mov lahf ds or lods mov add arpl mov ja sub xchg or fiadd inc inc push jle mov and outsl insl loope fdivp sbb xor mov jle xchg jmp ret gs fdivs scas cwtl or xor repnz (bad) sub inc mov sub lods cmp xchg outsl cmp sub (bad) pop aam fdivrs sbb pushf out (bad) fnsave pop xor pop loopne cmp shr inc in mov ficom xchg jp aas mov test xchg mov das dec mov les inc int fldt les sti lea mov aas lret out in mov push mov push xchg adc lahf popf jge notl pop andl lods outsb push push dec arpl movl mov ja int xchg fild mov imulb mov insb dec ss pop dec jmp mov rcl sub into into fistpl scas xchg je inc or inc repz mov push outsl int3 sub push xor insl jb movsb dec popf xor push repz divb popf fidiv sub arpl sahf adc mov mov jae iret add cmp (bad) imul inc or dec sub iret and aaa or pop mov (bad) leave jmp jo pop out jp stos jle fsubrp xchg scas add in xchg or lea dec sbb scas cwtl push jbe cmp dec inc add fmull (bad) loop sub in enter pusha dec popf xchg sahf cltd xor xlat addr16 mov inc mov lds and ret scas movsl and in sahf nop mov adc idivb adc mov leave pop pusha xchg lahf adcl ret scas into inc cli jl inc sub push pushf or cli jecxz xchg xchg cmp mul push pop icebp pop in add gs pop cmp add faddp cmc fiadd shl in inc lcall xorl dec mov sbb idivl hlt add pushf sub and lea loop fstpl sbb push sub fidivr lds das lods xor decl aaa (bad) out inc jle out addb jns shrl push pop lods xor dec int loop mov ret daa data16 pop pop out out mov sbb icebp add in mov (bad) cli xchg inc test inc adc incl inc icebp (bad) fwait roll sbb dec imul lods pushf lret adc jns (bad) mov pop sarl and mov cs out push jp add popa add insb int3 mov sbb lcall nop (bad) btcl imul es xchg repnz dec es cmp push or mov int3 pop cmp sbb scas bound xchg xchg cmp mov pop std aaa cltd movsb jg sarl cmp out aaa inc push jp test pop dec sbb fiadd or jle ljmp xchg add push dec sbb mov cmpsl fmul inc outsl ret mov cmp stos xlat jge mov inc or fisub mov cwtl mov ds imul adc xchg mov mov loope out sarb pop (bad) cmp push (bad) leave jae push mov ss jl rclb int3 (bad) adc xchg push scas jle xor jno clc xor fs cmovg dec repnz mov mov scas adc (bad) push fs xchg xlat add pop fldt push and pop rcrb scas pop inc cmp pop mov inc aaa lcall sbb testl jb lret mov scas cmc pusha stos xor adc gs (bad) dec push pusha std sub adc mov lret push into fbstp and arpl movsb or fsubs test cmp loope pop aas aam ret dec int3 pop sub lods push fwait arpl add dec push mov hlt in fmull (bad) or (bad) xor bnd push cli clc test mov sub popf (bad) mov push cmp fcomip fsts nop cmpsl add jecxz nop fstp push in jb mov and je lock insb xchg fadd cmp xorl mov in hlt daa sbb pop repnz adc mov out rcrl (bad) jp pop pop (bad) jns dec dec int (bad) fcoml pop or push hlt adc dec inc rcr xchg pop xor gs jne cmp push sbb loopne sar enter jns pop pop push popa mov pop add (bad) push push aaa test push mov pop or mov ss dec fwait push and mov fsubrs inc sahf aas mov xchg inc sub icebp pop lret mov outsl push mov mov push mov bound cld movsl cmp lret mov push sti mov xchg pop jmp in add lds je aas inc iret cmpsb inc adc shrb rclb mov aam out push movsl push xchg sahf dec outsl ja jmp sub add repnz xor adc xchg pop fbld cld insl jecxz das mov addr16 (bad) lds testl dec pop sbbb int (bad) fldl fidivrl (bad) push int aas lahf in pop or mov lahf ljmp push pop mov sti fistpl push adc cmp inc lods dec xchg imul cmp cmpb jb cltd scas cmc pop adc push mov mov adc lcall js imul ret insl pop sbb jne insb mov dec (bad) xor mov cs std inc insb aas imul rorl mov sahf push fnstsw adc icebp dec mov int push cmp ret push addr16 jnp stos push decl lods lret sbb cmp or add aad cs ljmp ret push mov cld jl icebp (bad) aaa repnz (bad) in adc fldl mov inc mov push or andl dec (bad) sti xchg lods mov enter cwtl pop add enter jmp mov jg mov lds sbb cmp xor sub push jge push add xchg push xor push add stc repnz nop popf or (bad) fisttpl sub xorb aaa out cmpsb inc test shr in fs cmp adc outsb rolb fdivs mov lea fsubl ja ljmp out pop aas test jo xchg inc int3 cmpsl xchg (bad) sahf repnz inc sbb mov ds scas cmp loop sti dec insb sub xchg cmpsl and or sbb shrb pop inc shlb inc xlat add loope cwtl mov xchg add xor addr16 lcall mov pusha imulb (bad) shrb sbb aas andl pop sbb dec popa fnstsw and lret cwtl (bad) mov fdivr xchg mov mov push dec xor mov pop (bad) (bad) mov jl and cmp sahf push flds int3 (bad) pop mov push mov lahf adc pop mov sub sub adc cld xchg mov cmp push add push and xor push pop or adcl xlat ss aam cmc (bad) (bad) aaa js pop and push dec adc out lcall lret inc out jle scas (bad) gs nop pop loope call sbb pop dec rorl add cmp jecxz add add sbb jge sub mov (bad) xchg int shrb push in nop cmp outsl loopne dec cmpsl and mov and xor inc jecxz imul and xchg dec sbb pop ds leave mov leave pop das (bad) xor xor outsb inc add mov jle push imul sbb cld sub mov enter lea dec lods or sti test mov (bad) out outsb cmp mov not (bad) jnp (bad) repnz pusha scas hlt (bad) fdivrs loopne sbb add popf adc pushf xor adc fmull mov mov add movsl pop cmp mov pop mull xor jo fsubrl cmpsb pop movsb mov icebp add inc fidivrl aaa out push push aam popa movsb loop or es pop scas push mov aad push aad dec sti scas rol cmc inc cmpsb jae sti inc cmp scas push into les adc sbb and scas and aad add cld xchg ds stos xchg xor push mov sub mov lock lock mov into add std push jo ljmp mov inc and pop mov out push inc and pop fstl fwait addb mov mov sti les adc pop jb call mov mov pop lods imul mov out repnz stos cltd cmp sbb or lcall add push cmp mov fsts ret nop fistl push xchg fs mov lock inc jb or pop mov jle std or hlt enter or test jnp test xor cwtl xor test mov in fsts xor sub xchg es cld sarb cltd std cmpsl sub or (bad) mov inc xchg jmp out jg push sbb cltd in pop outsl sbb xor rorl jno jb loopne push popa shr push data16 frstor stos lods les out xor sub mov cmp push xchg test push out js les stos sbb (bad) mov arpl in aas jbe pop test icebp pop inc sub mov cmp sti ror jle push jle jmp xor mov int3 cmp cmp fwait pushl insb mov jne ret dec xchg dec dec mov enter aas (bad) jbe pop jae aaa mov sti xor or xor insl dec mov mov rcrl push adc mov shrb (bad) stc fmul jecxz add adc cmc mov pop dec loope jne cld cmp out lret test aas mov sbb lods je inc mov sbb (bad) sahf or js fbstp push movb inc mov or adc or rcrl in sub sub push mov pop scas mov nop dec js aaa jns rorl sbb std pop pop mov sahf repnz mov int pushf or (bad) mov rolb inc adc inc fcomp call push pusha insb les adc sbb enter stos (bad) sub and push or clc inc adc addr16 adc popf adc jle mov jnp jge std mov adc dec cmp and dec dec pop fadds sbb loope xchg mov (bad) jae pop push or mov nop sbb pop (bad) mul or mov mov nop aaa fldl2t or and inc push nop ljmp insl (bad) jo xchg and gs or cmpsl aas aad inc lcall jl cli dec jae inc sub int3 mov repnz sbb or inc inc adcl cld mov pop stos mov inc ja sub pop cmpsb adc pop mov jp mov pop cld es cmpsl jge inc pop xchg pop outsl lock into pop cmp bound push fistp inc repnz outsb mov in in clc imulb sbb mov in dec push int fwait jecxz cmp xlat daa jne in (bad) sti dec cmp test push bound dec jl mov cmp mov ljmp cwtl shrl in xlat xchg pop jb push fnsetpm(287 dec lret lret fadds push popa je push imull incl mov popf mov adc push test xor lods imul ss push loope sbb outsb loope mov cmp dec mov adc adc push sbb (bad) xor dec int3 rcrl nop push and loop add leave lods sub mov shlb fldt mov (bad) std lods push aam pop lods inc fwait es std pop enter and mov lock push push js and popa jge sti test iret das loop stos psubb mov mov xchg mov pop stos mov aaa pop fsubrl daa (bad) jg and jae adc popa stc sbb lods sti icebp es xchg mov icebp xor pushf mov lock jno dec js xchg aad cltd stos xchg push xchg addr16 les (bad) stos add ljmp hlt jge loop lcall push test ret and test insb inc jo out test fs cmp push add into and inc mov ljmp insb add in xchg sub pop sbb int3 mov or arpl pushf mov fnsave sbb xchg pop xchg cmp incb imul scas mov jl pushf ljmp jns and (bad) inc lcall (bad) xor jecxz or jle lock cmp int3 add stos or rep andl clc cmp aaa jne add push push icebp mov ja clc xchg leave mov popa jge mov mov (bad) or inc bound mov xchg imul sub rcrl mov cli jno mov lea out out push div adc or bnd sarl test mov xor hlt push xchg sbb xor (bad) out xchg pop test add push xchg (bad) ljmp bound xchg mov lret adc in cmp lds or mov fsubrs add gs or adc ficomp mov inc push fdivl xchg (bad) pop jg jne gs dec fiaddl (bad) outsb out xchg inc pop mov icebp ret ss jns inc cmp push ja fwait repz inc outsb daa sbb jno rcll into ja sahf test add aad jg add jo ds sbb addb imul jnp xchg frstor push mov gs mov lods data16 mov and repz mov fwait lret adc rolb pushf jo ds (bad) in incb stos insl jne jl jo gs xchg jg sub imul mov leave xchg mov xchg or imul and ret dec sub jle lods mov mov movsb fimull cli outsb (bad) and sub lea ret repz push pop cmp mov repnz jmp data16 insl mov sbb loope movsl test repnz inc inc popa jno jle jle mov sbb stc cmp movsb pushf xchg cmp rcrl stos sbb pop lret mov push pop out lods rol mov stos pop xor int3 imul and cmp shrb or sbb inc clc sub aad cmpsl and popa sub jmp out xchg out stos jmp cld mov fsub jl sti pop xchg fmuls add outsl mov mov icebp jecxz sbb test lea mov pop jb jl popa js adc xlat pop clc bound je cli add popf pop and or jo pop ljmp movsl jg arpl aas rcl (bad) (bad) fs pop icebp mov sbb sub test cmpsb mov jecxz mov (bad) test mov jl xchg popa addr16 mov lea orl stos aam sbb inc test sub loope outsl test sub inc sti mov iret hlt dec and loopne add inc push jo outsb add xchg adc (bad) adc sbb push mov sbb gs xchg sti sbb repnz inc adc add test mov rcrb cli mov aas mov outsl inc fnstcw std pusha ja push jle test mov inc sbb call inc enter rcrl cmp sbb lret pop in and jge sub mov cmpl sbb out pop mov in and adcl loopne cld xor jbe pop jne out stc ljmp mov sbb cwtl nop pop shr inc pop test data16 lahf add mov xor mov mov ret xlat inc int and cs lahf xchg icebp inc dec es dec loope ljmp test push (bad) mov add lea iret mov mov xor jp push sbb xor inc test cmp xor cmp (bad) adc movsb mov test cmpsb pop repz cmpb fstps sbb push pop mov enter (bad) enter push cwtl ja push pop addl ret mov add or daa cs mov adc push scas into push rorb pop add fsts aaa in out xchg pop sbb xchg cmpsb stos jne loopne xchg pop add pop outsb test (bad) push sub cmc aad push (bad) mov push ja arpl lods fldt inc xchg mov add jp or out icebp cmp jge push lahf adc rcrl ss aad mov inc xor cmp dec push notl mov push fild push xlat sub rorl rclb xor mov xchg into cmp mov push pop stc mov xor push push outsl scas daa add aad adc sbb cmp or mov pop or out addr16 ds adc cmc add push (bad) popf mov xchg pop lods (bad) das lret into jne and jg jbe pop sbb aad js xor or sub fwait inc mov popf and decb or sar cmpb ljmp in mov cmp mov int (bad) lock addr16 or cmp adc fiaddl jo nop gs cli test (bad) rcll cmp into mov xchg pop inc lods mov sub aad lea xchg out iret outsb jbe push aam add mov iret xor or mov outsl fstl and insb shrb aad xchg clc push lods lahf mov lret sbb popf je leave dec jmp cmp lea lahf test mov (bad) hlt (bad) inc lret or xor mov vmovlps dec cmp lret and dec fisubl cmp lret mov out je mov jb data16 mov leave rorl xchg add pop and push fcmovu mov les add mov std xchg lret jo in hlt mov jae arpl mov sbb imul add test pop test test out call push aam push test sub push jle jnp out cmpsb mov dec std jbe ret add cmp aad jne mov repnz jl in inc pop dec js imul mov sbb inc xor data16 mov icebp arpl pop jns (bad) add hlt mov daa pushf in popa sti leave sub mov push dec xchg dec mov adc mov aam sbb and test xor das and xchg addr16 repnz jnp mov add push xchg adcl aam inc mov and hlt xor test pusha popa fidivr or pop or mov mov cmpb (bad) cmc mov test jb fisttp xor (bad) loopne and push cmp fmul aaa nop shll inc dec jo imul in and pop dec inc push mov xchg cmp test shl adc sub cld cwtl mov mov pop jp cmp (bad) mov sti dec and das push and mov gs mov (bad) dec stc push inc (bad) adc fsubs sub jns cld add (bad) xor jl fldcw jb pop clc mov insb or jg jl subl (bad) jmp mov loop fist nop (bad) cmc insb jmp pop jb dec jno or and or sbb mov xor adc add or fucomi loopne push pop ds adc cs jg iret mov xor or stc iret xor cwtl lods push dec and cmp test push mov xlat rorl mov sbb les pusha push pop jno movsb (bad) jno arpl jne ja iret inc addr16 dec pop pop shl icebp lcall add mov movsb dec add mov pop mov mov mov jo insl fwait cmp mov pusha cmp push je xor rcrb scas cmpsl mov jge cmp dec cmpsb lods cmp loop xchg fdiv mov pop sbb data16 jecxz cs (bad) ss (bad) enter rorl adc xor je sahf sbb cmp lcall movsl pusha mov sti jne pop rcr fldt daa out dec in pop jne call clc mov mov cmp aas arpl push xchg gs dec xor jnp mov iretw shrl or out ret cmp ljmp int and pop mov outsl in repz pushf sbb mov pusha mov fldt jl in xor enter shlb jg fldl mov pop pop fidivrl mov jno xchg pop mov mov xchg cli mov cs cwtl lods int daa scas popf xchg (bad) jo jp xor jmp cmpsb aas (bad) sahf bound mov sub mov daa fs int3 ret push cli fstpt xchg aas (bad) cmpsl lret int3 inc or mov cli int3 cmp rcrl ficomp shrb mov leave and cmp aad cmp cmpsl mov pop or int out mov imul ds pop nop outsb scas or ret pop add mov and inc leave hlt pop jge aas das in pop out mov data16 dec fwait (bad) (bad) jp and dec mov out inc stos lods data16 arpl adc (bad) pop sbb adcb popf xlat and sarb movsb fadds scas or jge (bad) hlt inc push loopne incl rol (bad) mov negl hlt mov xor cwtl js add add imul mov call rcll pop add push xchg fimull push cwtl or fcmovbe cmpsl mov adc sbb in iret xchg pop fs xchg into movb sbb xchg ds or stos mov adc lcall xor stc xchg sub mov in mov inc into ret (bad) pusha add mov out adc push cltd scas add sbb push enter mov xor sbb bound dec mov and mov fs cmp nop add push in ljmp cli sbb sub lret (bad) mov adc adc cli insl push jns movsl cltd mov add btc cli mov adc add cmpsb jmp jnp or loopne test stos aas inc scas cmpsl mov and lret jg out dec jmp fcmovbe enter ja xor movb (bad) ljmp sbb int3 (bad) (bad) mov adc pop ljmp addr16 idivb push stos (bad) sbb jno lock jbe daa cmp mov cmp sbb in lahf cmp mov fwait cmp jo (bad) addr16 mov xchg dec dec or dec loopne mov xchg fwait xor add or fisttp or idivl (bad) pcmpeqd repz sub incb xchg and pop add add sub pop iret (bad) cmpxchg aas mov iret sbb (bad) cs int cmp add jmp xchg sbb std rcl jno sub cmp data16 sti js clc outsl mov xchg mov stc dec sbb xor aam pop adc cmpsb or (bad) leave xchg xchg in adc dec mov lods pop lret icebp test fildll or rorb pop jmp sti xchg add cmp mov cli pop push sbbb jb add mov clc jmp pop cli xlat cmp mov jecxz mov mov js (bad) sub movsb scas shl sub lods add lods dec add inc sbb sbb aas scas mov (bad) push scas repz fwait jb push xchg xchg sbb inc iret cli sub xor pop mov add loop std setae mov out xchg arpl call out adc les lods jb dec sahf jmp fisubl int je adc or xchg andb xchg mov adc aad pop sbb add (bad) dec aas (bad) cmp std sbb fisttpl js push cmp jmp out pop push mov cmpsb jmp jg imul insb (bad) in mov push sub (bad) lods jecxz jne jnp lods leave cli pop out jmp mov and adc xor mov lock fistl jge xor in mov (bad) test adc cmp sub fisubrl and add ret sub dec fbld fdiv lret outsl or addl add fsubs cmp mov shrl mov sti mov sub inc or subl jp pop repnz push pop xor je cmpsb sbb pop ja bound mov mov xchg jle pop mov and ret sub dec pop push pop lods mov pop test sub pop fwait mov jnp push xorb stos xchg mov mov aaa xchg and (bad) jnp mov jmp sbb push sbb mov jno push lret mov lret lahf in aaa push loopne sbb sti loop push mov vpaddsb pop cmp repz push inc aaa out nop fnstsw push inc es jae call (bad) nop jno popf pop add test (bad) xchg ljmp adc push and cmp ljmp lahf ret (bad) dec cmpsl (bad) loopne mov and push dec jnp ret inc fisubrl dec mov sbb out and cmp iret mov int3 (bad) adc test (bad) mov jecxz and sub lea pop xchg sbb dec sarl ljmp jae addr16 fwait mov (bad) add or mov add and cmp or test mov add push add xchg sar xor scas sahf jno fbstp lahf fcmove sbb sub add jnp mov scas cmp insb aam rolb mov mov sbb loop pop jge push push jecxz inc push das mov xchg jb dec jmp addl adc xor sbb outsl mov add cmc insl mov lds inc jb push sti leave mov (bad) cmp or arpl mov pop mov movsl (bad) add lods dec test fisub pop adc js lret xchg adc push adc sub fpatan add mov popf jge divb xchg dec sbb xor cwtl rcll pop ret mov or lods stos cmpsb mov xchg and or inc or xor cltd or xor (bad) imul test (bad) jno cwtl in loop jmp fwait mov pop sbb and or std js mov jbe inc nop ret lea sub xchg jg xor cmpsb mov cmpl test mov test sbb inc ret mov iret jne mov sbb xchg or xchg lret daa or jbe sub ja xchg icebp cmpsl shrl lret (bad) xlat je or stc fistpll xchg dec insl mov fcmovnbe sbb xchg mov ds mov cmpsl loop jno adc testb rorl mov pop jns push or fdivrs sub repnz cmc lds jle and mov leave mov cmp mov lods loop jmp out inc bound mov pop and mov adc aam dec pushl pop sbb jle push push std (bad) cmp movsl addr16 add sub std movsl inc jle push fdivrs ret fdiv xchg jmp sti add leave nop push (bad) push push adc outsb pusha or adc mov stc lahf ljmp lahf insb cmp fwait dec add dec dec (bad) cmp aas xor jl pop inc pop push mov dec addr16 (bad) lret data16 push pusha sbb ffree inc std sbb xor mov stc mov scas enter push and dec pusha les mov sbb out (bad) lods loope test mov stc mov dec fldl mov xchg int stos dec (bad) pcmpeqd xchg inc shrl ja push dec clc daa and jns adc xchg or push mov loopne sub sahf in push sbb sti mov fild lret je xor fidivl push mov add push inc iretw andl cmpsw loop movsl xchg cld sarb mov push jnp sub aaa jns mov pop in lods imul js ret pushf cmc add mov repnz jo adc jmp sti and jbe push pusha cmpl arpl jmp mov push cli fcmovbe mov inc or sbb in (bad) ja stc lret add inc mov (bad) (bad) mov insl lret mov (bad) (bad) mov mov arpl pusha idiv (bad) ds add lret and mov stos cld int push sub mov add icebp mov pop jge sub jo test sbb fistp sbb pop and sarb movsb andl out mov mov or cs je lea dec call inc or mov pop sub and sbb cmp pop (bad) aad mov jg (bad) sbb inc stos aam rol sub stos mov rcrl xchg mov mov fstpt cld negb inc push popf add lcall cld repz out lods adc stc xchg iret pop or pop mov sbb lret ret insb xor (bad) add mov inc sti es repnz out cbtw in xor adc dec pop stos cld out out dec jo repnz mov mov scas loop sbbl add xchg jnp xchg cmpsb (bad) xchg out mov jo inc cmp push jmp mov or lds mov lret xchg jg or out add xor mov cmp adc inc xor cld push shlb nop sbb out push add out sahf repnz or mov and das inc jnp pop adc jo push andl loop std jecxz mov xchg push cmp arpl sbb xchg push mov lret push hlt test rcl jp jg jp scas int mov and pop ret sub xlat data16 movsl push mov push (bad) in xchg int3 and ljmp jbe mov fs in pop orl xor mov dec mov mov (bad) jmp mov out test push sbb jbe pushf inc lcall xchg jns scas insb out rolb std cmp adc or pop mov dec aam stos xchg push xchg push mov mov ret repz insl jg or dec sub mov (bad) std jb mov shr mov rclb push divb lea cmp sbb (bad) inc jmp addb lock std leave hlt insb rcrl or fnstenv jecxz xchg ja mov sub push addr16 scas aad je out lea mov inc xor ja push pop test out dec jae jae adc (bad) cmc inc push xchg push pop push in and adc inc mov rolb and fstpl or lcall jl ja xchg cwtl lahf mov pushf xchg (bad) es xlat pushf (bad) jne or mov pop mov in push insb push pop cmp shr lods inc xor pop mov jp arpl mov imul lea (bad) (bad) (bad) cli test insb sub add ja popf imul mov push mov fwait dec pop ljmp fldl mov mov pop cmpsb cmp mov pop cwtl call (bad) inc es sbb ss mov ret pop jb sahf mov rorb or pushf push push daa sahf (bad) (bad) leave cmpsl je,pt sbb xlat mov xchg fwait xor das add mov mov stc fild in xchg mov sub ret mov loop cmp dec aaa or out outsb ret or imul mov jb xor rcrl sbb test inc loop (bad) adc (bad) aad pop (bad) in mov icebp popa (bad) fsub stos inc xchg sbb movsb and out add rcrl cmp xchg nop jecxz adc movsb push and pop movsl sarb lods sbb xchg stos push pop outsb xor cmp cmp add and popa mov mov outsl push sahf shrl sub mov mov or pusha cmp (bad) xor fldl inc and enter std inc lock ror push pop and xchg mov sbb push (bad) sub jno cli movsl movl sti out jb cmp lret enter call cmp pop mov scas imul arpl push mov mov hlt (bad) negb and jmp cmpsb mov or ja jl push test cld sub xchg stos outsl sbb insb test adc mov outsb pop aaa cmpsl or les popaw into mov sti push jp ret cmp adc adc rol ja dec mov ljmp push jae push mov or lret iret cli clc xor cmp (bad) lock adc jnp sub push sub into mov fdivrs jl (bad) xlat sbb adc push aaa mov popa mov pop pop (bad) pop mov inc pop stc cmp ficompl pop push mov in inc lock outsb xor cmpsl in mov cld sbb sbb add (bad) adc fwait insl ret mov stos jae test push ljmp cmp repnz clc mov push hlt outsb jp push mov inc in dec mov lea test fcomps out pop pop jae inc mov fstps mov xlat jbe dec jo faddl ds orb pop dec enter sbb sub aaa mov or cmpsb sub cli jae xor jne lret xchg adc mov mov mov adc aam xor jge outsb dec (bad) rorl pop js sbb adc ljmp ss or shr inc imulb fdivrl test (bad) lods movsl movsl pusha xor fstl fwait shrl das pop xchg pop fisttpl out orb gs in dec stos addb pop pop outsb dec sub bound aaa jmp fwait add push sub movsl lahf (bad) xor inc push sti push lds out movsb and aaa pop mov pop adc jmp xchg xchg fildll aas push add push fbstp cs or jo xor ret cs cmp push cltd pop insb das ret add das mov mov imul mov mov dec mov push (bad) mov mov out cmc lods push sbb xchg xchg (bad) daa push or xchg jmp lea js aaa fcomi ja and pop mov dec in and lds lret test lods icebp repz cmp cmc push movsb add (bad) and sub xchg cwtl stos fcmovnb jecxz fwait cltd mov pop mov call je cmp repnz imul add xchg aas push and je add fisubl jae in (bad) in leave pop jg or xchg imul mov leave loopne cli mov (bad) nop out jg sbb out aas inc mov and movsb imul outsl rorb xor xchg inc adc inc out and lock jmp cmp mov cmp add imul or out push jnp xorb sarl or fbstp in push pop arpl pop in mov sub jno aaa test push (bad) xchg inc je push push (bad) popf imul or fild dec inc adc pop xor xor or movsb loopne (bad) or adc xchg jg xor lds es fdivrs hlt nop xchg ret mov push or mov stos cwtl mov push fistl stos mov enter mov in faddl sub out dec pushf test push fbstp lea cltd dec xchg dec ret cmp or mov lahf ret mov cwtl jmp pushf (bad) fist pop cmpsb fstp gs jmp jbe enter in xchg dec or repnz pushf add xor shlb pushf xchg andb out aad adc fdivrs cmp sbb rol dec je xchg aad addr16 sbb addl js pop add cmp mov or cmp aad sbb scas (bad) mov pop dec sub movsb in or (bad) push dec mov dec mov fs lret mov stos mov pop push jns repnz adc and or xlat enter arpl xchg mov scas enter sub pop sub dec lds sbb inc jnp sahf sbb mov and add sti es rcrb nop cmp in cld mov lret mov addr16 (bad) cmp (bad) arpl inc mov adc pop mov adc insb das in lcall adc xchg jo push scas into rorb or cwtl mov pop rolb jl mov repnz add push inc out mov cmp movl mov popa add andl xor jnp xchg movsb je pop lret fsubr jge xchg mov sub pop jbe stos inc hlt (bad) aaa test sub loop shlb jb or jmp cltd call dec sub add inc add adc andl iret fs and in push and ds mov and andb pusha mov jl jbe adc das (bad) fcompl ja fs shrb jb mov and mov sub (bad) cmp icebp mov push xor xchg inc js xchg insl adc xchg cmc aad dec mov add pushw jmp ror mov ret fsubrl (bad) xchg or push xorb gs lods mov sarb mov test pop inc pop fwait out inc cmp cli push lods (bad) mov pop sbb jne mov cmp mov scas pop or cmp sahf push in stc mov popf ror or int popa insl arpl inc loop popf (bad) mov dec push jge test leave fucom xor fstl cwtl mov testl shrl lahf lods ss xchg adc pop push or pop (bad) lock or lods movsb cmpsl sbb push pop sbb inc pop outsb into xor jo lea data16 xchg push aad push xchg mov fistpl rcr stos or xor lahf inc dec lret xchg xchg or push pushf scas aam and cmpsb imul fist dec mov mov fstpt fldenv pop jno mov fist add xor sbb and pop fsubr push and sbb mov fldl2t cld fldenv adc lds ss dec jnp mov bound imul inc mov jo dec and mov cmp jge mov push fmuls fldt push pop fadd dec (bad) cmc repnz xor lds jbe pushf mov adc es push pop and test add js addl jmp and insl jmp push add iret ja aas aaa scas jns nop push add inc cmpl enter fstps loop rcrl lea mov ja or loop push lds rcr repz int3 cmpsb sub nop sbb cwtl pop lret orb sbb jbe test adc cmp es mov ja gs aas jle mov js inc popa ja insl dec fwait dec nop scas jge in imul (bad) mov ficom fwait xor aaa add push mov imul push jp mov ja mov push or test jge mov cwtl js and mov lret dec mov stos dec gs jae mov mov imul faddl pop pop mov xor xchg dec ja nop jmp fisttp push insl iret pop mov rclb push pop lcall and sbb insl into mov lock incb push movsb jl push dec push sub fs (bad) test sbb cld aam jno lods imul mov inc std push mov add push inc xor call mov lret jmp mov std xor flds or lock dec push hlt (bad) lret arpl inc inc inc lds data16 mov (bad) cmp (bad) daa xchg fstl (bad) jb ss fldcw out sti push jo inc or push enter pop mov test addr16 stos pushf and fidivr push stos jmp call mov xor or sub push int3 jae lock repz or mov pop insl insb xchg ljmp mov dec imul fbld inc sbb mov stos jg,pt ja and sub out jo scas and outsb sbb rcl lret incb jne sbb dec push mov rcrl pop sub stc imul cmp cmp test imul test jb movsl mov (bad) (bad) adc leave popl je pop in adc mov cmp add rcll mov lods fldcw mov ja sahf xor (bad) test (bad) movsl mov pop push sahf pop pop movsl cwtl cmc inc dec pop (bad) jmp mov (bad) fstps push repnz (bad) lods mov sbb movsb cmp xor dec popf insb loope outsb mov mov xor mov mov call (bad) data16 shrb (bad) or push aas sub bound mov xchg push lret cmpsb cmpsl and (bad) aam sub fstpt dec sbb cmp jne jbe jge lock ja mov test xchg inc mov sbb stos mov or pop shl hlt fidivl cld push das leave pop jbe into pusha sbb sbbb sbb xchg dec (bad) int3 pop push xor repz mov jne outsb jo das mov mov mov aad loopne rcrb mov inc outsb aam int push je sbb push dec lret push and divl sub nop sbb jl and in popa test fcoml add dec mov inc xor repnz mov sahf aad push scas lock xor nop movsb aad lods (bad) jo scas and out pop and jmp mov pop sub sub xchg into xchg popa popa push (bad) mov fist scas lock xor lret out xchg sub in jmp hlt mov adc pop (bad) fdivr pusha cmp xchg mov pop adc xchg (bad) out mov negb pop sub push es dec inc sahf int adc cs in imul adc sub notl daa adc lea andl jae push mov mov insb test aad jbe adc into lahf dec das jmp ret jo out push mov jecxz (bad) mov push mov and jl pop sub jns inc dec out adc mov mov pop mov mov pusha icebp popf xchg mov (bad) jge fs std fnstsw popf test jnp outsb test hlt arpl jp dec jmp mov mov in fimul add in jmp js daa les push adc xchg adc jne jb lds fs jg ljmp imul fs jo loop xchg es js jg insl js xchg and adc arpl push cmp repz movsb lret xchg rcll je push jne aaa ljmp std xor adc jb cmpsl sub lret sub or js (bad) addr16 sub dec popa or ret fcompl push xor xlat or adc pop xor jae push and into jns call rolb inc push flds sbb fisubl and mov sahf fisub or inc in inc stc xlat lock inc aaa pusha and cmp rorl out loope push xor push xor jno pop gs sbb xchg (bad) push cmp mov jno pop cmp dec enter xchg xchg mov inc (bad) scas jns or scas std xchg out mov rcrl faddp (bad) jno dec in rolb cmp sbb xchg mov dec mov push cs into (bad) rclb aaa pop das pop or cmp lret lds xor aam repnz repz movsb subb mov cld loope rcll (bad) mov mov and stos shll xchg (bad) (bad) pop pop mov cmp push sub mov test pushf insb rolb sub inc rolb sub mov daa sahf mov lds int3 mov pushl push jp,pn jo arpl mov enter fabs sbb mov (bad) fistl rol enter mov xchg mov adc not and jo lret lcall xchg sbb push or pop xchg mov addl inc fildl lret jb imul add or and xor push sti lcall push fild mov mov cwtl push lret leave mov jno add push addr16 push bound inc mov ljmp inc cmp xchg xor xor pop dec mov popl mov loopne ds imul ja xchg xor lcall pop (bad) jae adc mov mov dec xor repz push stos lcall ljmp and ja (bad) repnz loope (bad) fnsave aad push in mov ljmp and mov mov ret pusha cmp xor mov cmp inc fldl ds popa add and adc cltd in xchg js pop popa jne movb push je pop jmp xchg cmc (bad) das fisttpll repz or addr16 outsl or loopne lcall cmp mov dec push scas sti repnz jo int3 mov scas (bad) sbb adc les add std cli mov sbb int movsl cmpsb xor pop loop sahf ds add shll mov fbld jl dec mov stos addr16 scas roll xor jle test mov test mov rcll xor in xlat and xor cmpsl lret cmpsb stos jp stos sbb out ret push dec push push div add or aas mov popa push push adc pop jno or and cs mov mov mov jb in fnstenv popa jg cld test scas popf jl adc shlb iret shlb sub sbb pop push push aad sbb pushf ja pop or aam outsl add sbb jmp fisubl fdiv aam push fistpll outsb imul sahf xlat adc fdivrl in xchg lds (bad) jbe icebp inc mov sbbl sub lods lds sti push out leave add inc test lods mov dec test or test divl push insl movsl mov adc or dec stos and leave xchg rcll or add popa xchg ret mov lret mov repnz jo test cmp pop out ret pop stc xchg adc fisttpl push ret sbb adc push push (bad) sub popa popf mov mov shrb adc jle jo adc cld adc sbb cmp mov in push dec jle jo mov test das mov mov enter dec xchg shrl push test xor rcr adc fsts xor adc xor cmp gs repz cli adc pop lods inc out pop jnp jns inc loope and js jle stos jg,pn xor xchg stos stc pop arpl (bad) ljmp jb mov pop pop sbb test cwtl inc mov aas insl push dec sbb sbb push adc and outsl xor shll mov rol aam xor fimul fsubrs js cld (bad) fcomps push xchg imul cli scas leave popf and imul mov push lods fstpl sbb nop cmp icebp imul enter out inc xchg gs movsb pop mov jg and mov rolb js insb in icebp or cwtl inc pop mov es push pop loop fwait jmp imul mov sahf cli (bad) sbb ds dec mov jae push jmp xchg xchg ret dec out orl push cs pop cwtl jne inc in and jb cmovbe test (bad) xacquire int xchg jmp (bad) jae pusha int3 scas mov pop (bad) xor xlat cmpl or iret xchg js out or das adc adc aas push push lahf inc add cmp xchg adc jne mov inc test mov or out push mov in jno fiadd lods push fisttp mov pop (bad) (bad) fbstp (bad) lret pop sub and add aam into dec xchg push jecxz push loopne jl push sub (bad) xor movsb aam cmp push jbe imul cli int3 pop mov fs jmp jnp lds add imul push sub (bad) or aaa (bad) mov nop lret mov sbb and mov sbb xchg insl mov dec loopne movl and loope cld inc jp adc mov push idivb jmp sub push fistl push popf dec push popf cmpsb cmp mov cmp cmp lods vpshuflw mov shrl mov arpl out je aad sti pop cltd ss scas ljmp mov mov divl test lret enter fs xchg in sub or fnsave int3 scas arpl int aad sub data16 into push fdivrl fsubrl jecxz and sub test pop jns sbb insw adc ljmp shr mov sbb or adc dec mov (bad) (bad) hlt pop xchg push cmp stos cmpsl (bad) adc sti pop aas movsl cltd hlt dec outsb insl lods (bad) inc xchg stos add adc inc xchg hlt cmp das ud2 push ljmp jae cmp xor arpl (bad) jno push addr16 imul pop divb sub out sub push into fs or repz mov dec daa mov test sbb jbe leave jg jno mov fidiv loop push test or mov add jbe xchg mov ds pop stos mov adc out mov bound (bad) stos inc mov test gs or mov and add cmp out mov mov dec lods jnp inc add imul jae ret mov leave in pushf test xchg dec inc faddl pop add andb xchg ja sbb pop ret pop add and fsubrp mov xchg insb cwtl dec ja adc xor or sbb pushf scas xchg mov mov cmp scas mov jb jmp add jge dec push inc jb cmpsb into jmp jmp mov clc mov fmuls call inc call clc scas and xlat mov push and fistl push mov sub int3 add insl xor into pop mov dec pop mov or jp add adc adc hlt jp nop enter stos cmp std xlat mov add jns outsw das pop jge pop stos xor mov mov and dec fnop scas lods mov iret jo lods sub test sub xchg es fdivrs or mov arpl and xor sub cmp pushf rorl xchg ret insl test pop sbb sbb sbb popa sbb add dec out test sbb cmp pop xrelease loop xchg out stos in daa iret frstor call sub (bad) aad outsb dec mov cmp mov sar fiadd jg negb pop bnd adc sti sub sbb (bad) jge imul xchg dec fwait or inc sahf jae xchg sti adcl insl rcll pop stc sbb inc js paddsb xchg sub in sub (bad) in and call mov cmpl cmc adc fstl popf mov push (bad) lret lods movsb cwtl mov cmp and imul (bad) jl jl,pn jmp scas fisttp lcall test lea mov push xchg mov call pop lods (bad) xchg popf inc dec imul push std cli cmc jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov incb or ss sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in fadd jp or add mov (bad) mov (bad) fucomi cmp iret cmp sub pop mov pop add mov cmp mov sub dec aam nop call loop out and pop sarb push inc (bad) xchg inc (bad) cmp sbb rol std loopne cltd nop jp and leave push sbb ds xor mov repz push and and lods adc loope jecxz in repz adc and adc pushl xor pop pusha jns,pt push cmpsb or rorb popf pop clc mov in scas adc adc mov xacquire or lret mov and es or inc push xchg test fild pop test fucomp sbb mov dec or (bad) movsb mov mov sub push mov add test sbb jae popa xchg sub dec mov adc enter mov xchg pop fsubrl stc stos cmp push dec adc aaa push imul in in fucomi jge cmc loopne std in mov mov leave aas inc lea mov mov ds (bad) lods cs jns xor popf push jg das cld stos in loop xchg lret jbe lock dec shrl pop nop pop inc (bad) call (bad) xchg shlb lret test mov lds imul mov xor sbb cli mov loopne loop fnstcw lea (bad) call rcll pop mov ds into (bad) stos bnd xlat dec push imulb or push mov stos arpl cwtl adc loope sar into or jp mov jbe imul gs out push push sbbb pop in movb stos lds ss (bad) cmpl bnd jno cmp in nop mov arpl leave mov cmp cmp mov shll add push stc xchg dec and jbe inc jmp clc sbb insl dec stos cs cmp xchg in cwtl push jmp movsb jnp adc std fwait inc (bad) daa jge enter push sbb jb jmp ret std int cmpb mov les inc adc pop sub inc sbb mov jbe adc pop dec push cltd xchg popf fidivl mov cmp sahf popl add sub mov add add je test sub lods push movsb popa sbb ret xchg xchg mov xor pop stos rorb sbb xchg xorb aas hlt sti lret rorl cwtl cmp out lods mov popa jne push jo adc roll ret test jl (bad) jne das sbb xlat clc push dec mov cltd aaa mov movsb jo mov in xchg stos inc popf jne fdivs (bad) mov inc inc (bad) fstp add repnz jge jne lock mov into mov xchg loopne (bad) or jb enter lods sbb imul pusha cli inc cld mov dec fsubs outsb sub test stos push push sub ret mov std xlat xor dec jb data16 iret aas rorl stos push rcrb push dec jge jae (bad) jbe lods xchg inc ja lods movb out mov cmp cs test cmc out fisub xchg jecxz inc and lret mov pushf in xchg and cmpb je add pop dec jnp pop cmpsl jbe fidivrl fwait (bad) mov lea mov mov out aam dec jb movsl sub aas int3 sub xor int jne add inc mov faddp int roll das mov xchg xchg cmp cmc jo inc push cmc push mov and dec push mov pop add lret dec push leave pop outsl in test mov insl aam (bad) imul das ljmp movsb mov or sub fwait test cwtl aad (bad) jg mov pop in sub jmp jmp and loope fucomi lods aaa mov add rclb stc adc out mov repz shl repz jmp (bad) or adc (bad) cmp mov or insb shrl out and in enter sub addr16 sbb test push in lds mov mov in inc sti test cmp and mov fnstsw inc repnz fistl jmp clc push div popa or mov mov add je jmp fstpt sub jecxz cmpsb (bad) out aas mov mov mov or (bad) pushf sub andb ljmp call push inc cltd xchg outsb (bad) inc lods cmp test into int push out mov mov cmp sub (bad) add in lret pop popf in add xchg movsb pusha jno jmp mov mov dec (bad) push inc adc insl and jg pop dec add jge ja add jns mov inc popf mov pop sbb add adc arpl (bad) aas push arpl push or cmp add lret mov jae cmpsl jp dec dec and nop jno and sbbl fcmovb pop mov cmp subb pop jo jmp bndldx movsb cmp and call inc lahf add loope fs mov jnp jg xchg jecxz push aad cwtl sub sub adc or jns ficompl mov in popf pusha call nop repnz xor dec (bad) data16 loopne into pop mov into xchg jbe push sub in mov pop movb sub inc rcll ds dec fnop xor stc inc lret and lahf cmp mov push (bad) jl incl or stos es movsb data16 iret insl fisttp adc xchg arpl mov inc jno inc xchg sbb mov fnop inc aad jmp push cltd or push xchg mov sbb and push aas jae jne dec sahf jbe sub movsb pop int3 stos cmp test mov inc fcmovnb cmp mov jno jmp xchg jl mov or xchg and loopne das out jnp xchg pop dec mov xor xchg and mov or (bad) daa mov adc mov jg jbe add ss jb popf or jg mov xor (bad) rorl mov dec jo lret lret les and pushl adc shlb jmp fdivs sbb mov imul jl push stos insl add pusha inc call cmp fdivr jnp push mov cmp push adc outsb fsubrl mov repnz dec cmpsb mov dec in jae jo push dec push cmp enter addb sub mov sub call jnp jmp push insl jge out test xchg loop out ret call js mov test es jecxz nop pop push mov ds fsts arpl mov std or mov inc cltd jns bound in push xchg mov mov loope jmp lods jecxz daa xlat xchg inc and call cmp stos es sbb inc jmp inc xor fcmovu pop (bad) int stos push mov scas arpl repz mov or sub xlat out push adc outsb xlat sbb cmp cs and pop inc mov mov lds inc push cmp cwtl xor rclb xchg aas and dec push fadds xchg pop jns js xchg xchg mov dec pop icebp lock cmpsl jle cmpsl fistl push mov (bad) out push fimull outsl dec jb xlat mov or adc inc xchg aas push cld xchg sub cmc push pop and add xlat aas sbb jb xor or mov movsl jb push fs push or pop test movsl insl cmp mov xchg std dec bound (bad) mov (bad) ja and idivb ja lea lcall adc push (bad) out stos mov mov pop mov test lock adc hlt sub adc mov sti ret and inc in repnz mov out cmp test mov cli jbe and (bad) rcrb push cs (bad) js sub lods andb adc mov fwait insl daa xor mov xor int lock inc push lret sub int int3 in mov ljmp popa leave inc xor nop inc jp aam mov ljmp fwait add cltd mov dec pop mov cmp bound dec jnp (bad) ljmp cld mov data16 pushf cmp mov pop std jnp or (bad) lret movd or xlat and into adc mov ljmp out jo icebp fs out ja jmp mov popa addl loop mov mov aam pushf mov sbb call xchg xor in cmp xchg cli call hlt test adc loop into mov dec test jl in nop movsl aad mov fs pop out jecxz and icebp ret stos mov dec lods xchg pop imul dec mov xchg movl imul sbb sti xchg (bad) sti sbb cwtl and xor leave icebp dec das cmpsb sub scas or fidiv jbe pop fstpl test fdivs stos out dec add push push or or iret imul fsubr test xor pushf (bad) je imul mov into fwait add mov lock mov aaa cmp ret inc sbb int3 stos push loopne (bad) stos (bad) cmp repnz enter cli lea ljmp mov sbb mov stos sarl sub xchg arpl (bad) cmp sbb dec clc in mov out bound mov daa cmp push dec push rorl inc pop repz out (bad) sub mov sub pop xor addr16 mov (bad) fnop xor and sahf xor int3 jmp dec pop ret jecxz stos out and jecxz cmpsl inc dec shrb pop dec xor out pop and imul sub inc xor cmp xchg fimul and xor repnz stos stos jno sub pop jb cmp push and clc xlat mov jae test push fwait mov sbb sti in push xchg sti inc pop loope sub repnz inc jbe call xchg adc lds and lea data16 icebp iret xor mov jge (bad) mov (bad) xchg sub (bad) mov adc inc in aaa push pusha (bad) icebp mov cmpsl (bad) cmpl xchg sarb ss xor mov sbb rclb jg and or xchg and pusha pop inc loop pminsw outsb inc imull scas into shlb inc add lock and fdivrl in (bad) clc push xor add add mov insb inc push sub sub vandnps jle or push mov es mov or cwtl out or sbb push (bad) aaa xchg sub shll inc int3 nop repz out test repz scas mov mov jnp xchg (bad) cmp add push stos int3 mov xchg dec frstor mov (bad) rorb (bad) cld das xchg pop fimul aaa hlt icebp push ficompl xchg fnstsw fist aam push js push pop (bad) leave pop mov loope cmp shl sahf inc adcl mov ds clc push (bad) lcall push sub xchg add (bad) and pop xor mov xchg mov (bad) jae push pop test stos arpl adc repz and jb (bad) jl stos out sbb xchg std xor cmc push and xor std stos push jbe add jg fisub jno fnop sub pusha push aas cld mov push stc shlb ret lea dec loope mov (bad) data16 out lds mov jmp jnp pop adc xchg and mov bound sti xorb inc mov movsb sub fsubl and sbb fcoml aas nop out xorl (bad) cmp sbb fwait inc add fdivrs pusha clc scas or clc add dec push lcall pushf sub dec daa dec sub xchg sub aad rcrb call rcrl ja (bad) xor flds mov ds sar and or lcall add ficom (bad) in sub or mov and xchg mov jg pop add call lret icebp cld sti pop adc int3 cmpsl addl dec pop inc nop cmp and xchg inc cwtl rcrb xchg sbb in mov jl out add adc pop dec lea sbb (bad) inc in sub mov mov xchg push in pop cs (bad) sbb pop loopne mov sbb rep jmp ret cmp movb adc imul push dec cmpsb xor mov or push idivl pushf iret lds xchg push je sbb sbb shlb outsb fdivl add jge in fstps or dec mov cmp push jecxz push pop sbb aad inc xchg scas (bad) lret jp jmp xchg mov (bad) hlt pusha dec das leave mov insb stos test push dec pop dec dec adc ds push sahf fnstcw mov mov fadds int3 cmpsl out movsb in hlt cmp mov xor adcl je or xchg enter push lds jmp imul aad movsb cmp add shrb outsl jns out cmpb ret dec gs hlt cwtl adc (bad) or stos xchg scas mov push xlat push loopne scas addr16 ret cmp pop gs push pop dec lret ja xchg lods repnz xchg mov enter sub sbb dec test in sub xor pop (bad) mov sbb (bad) cmc pop jge stos mov lods push fucomi cltd test dec sbb xchg jle (bad) lock lret cmpsl dec int jl,pn sub mov ja and pop dec mov into jne xchg rorb lret jp pop faddl dec test adc cld push mov roll loop outsl add jae out test sahf orb lret fsubs ret rcll leave arpl inc (bad) fstl sub pop jg jge xor fldcw jmp dec adc adc shr adc fsubr or mov dec jecxz mov lahf fs addl sub pop mov and push lret sub cltd jnp jg,pn jge sbb clc pushf push int add add popl fimul addr16 push (bad) pop imull pop jg pop shrl int mov pushf mov das fstpt and dec jp pop push in dec shll imul fidivr lock sub xchg sub jbe dec sbb push movsl addr16 inc xchg adc xor jmp lods dec sti mov fisttpl push pop pop inc pop mov outsb jb push js or pop cmp jnp iret xor mov inc arpl mov xlat iret fdivrl call inc in mov cld in xor fstpl sub mov adc xor pop fwait mov into popa imull push pop mov loope int3 or out jle in add jmp in push out jmp sahf test jne enter add or xor jge loop dec add jecxz xchg cmpsl subl xor mov inc add xchg repnz mov shll mov jecxz sbb lahf ficomp xchg imull addr16 divb xchg popa pop repnz ret movsl push mov jb pop cmpb mov jo call sbb or add inc push outsb enter adcb pop and testl sub or mov push mov ja xor ja jp xchg fnstenv inc shll insb xchg outsl das pushf rclb or sbb jns push lock popf or mov addr16 cs xor jnp push push jb or ret cmc ret pop mov inc bound xchg or inc push inc loop push inc rcrb incb jmp out lds add ss push adc addl in xchg xchg (bad) loop mov inc insb adc aad jp adc pop rcll adc mov es fcmove fimull jmp pop sar xchg xchg xchg (bad) and pop pop adc adc call repz into es lea loopne inc xchg xchg xor popf sub cmp aam inc int cli nop and pop aam push test subb jo xchg inc add sbb insl jl mov cmp adc xor mov dec aad xchg repnz (bad) out xor mov fs xor mov inc pop out lahf sub lea movsl sub cmp lret jecxz roll fnop fnop lods push adcb mov gs or xchg mov mov xor test pop jbe jne push mov cmp jo fwait out out icebp ljmp cmp jnp jmp std cwtl into cld push ret or xor aas adc mov push adc stos mov repnz ret jmp movsb std xchg jb and push and nop pop jmp push das xchg jbe imul push push dec pop pop lea pop pop clc (bad) je xorl cli pop mov and fbstp cli (bad) fwait mov call popa sahf add mov lock dec adc cmp push adc sarl fadd in push add incl dec lahf std xor (bad) cmp inc inc dec cmp subb jae inc mov jecxz out stos fs imul cld nop add and rcl sub roll inc fildl sbb xchg (bad) push insl stos mov push movsb je gs (bad) cmpsb xchg jbe inc or jbe and mov dec and (bad) in cs cmc xchg ret fwait mov imul ret test or pop xchg xchg mov jno lods aas es cmp push sub test push push or je inc cmp (bad) cld pop xchg int lcall inc push mov cmpsb dec test add jmp push subb nop mov hlt xor orl sub xchg jo test comiss pop test xlat sub push mov mov xor mov mov fprem1 inc pop xchg lods mov stc add sbb pop repz int lret adc mov xchg and or out addr16 cwtl or ss push gs fs fimull xchg insb rol cmp cmc mov mov push xchg fisttpl (bad) mov lods test sahf ffree sub into xor int or pop test nop cld clc aas rclb jb lock dec pop cmpsl out mov sbb sbb nop lret push cmp jb lcall sbb inc fnstenv sub xor test into in push ds stos lahf mov sti outsl fmulp xchg xor cmc scas ljmp jmp jp and aad imul loopne mov or call fldl data16 sub mov lock dec test push aad cmp cmp arpl pop xor jo daa jno push lret movsl or je lahf fs sti (bad) in fidivl dec mov fmuls xchg test lds mov dec mov test (bad) lods xchg dec and ljmp sbb mov add pop lcall jo mov inc adc rcl push push inc lods scas lods fs push (bad) pop lock pop pushf testb adc lea cmp ret repz inc push fwait (bad) cmp add pop (bad) mov enter sub popa jae lcall sar mov add loopne and or shll mov lret add pop leave add mov subl insb lods je in popf pop loope outsl mov mov or jno sti inc mov adc ss nop or push (bad) (bad) clc pushl inc or and push mov sarb sbb inc das je and mov adcl psraw lret sbb mov pop jae int or in push in inc (bad) stc push in psubsb imul (bad) sbb inc mov repz add in fidivl sbb test add ds xor gs cmp mov add aam xor repz cmp xor rorb cli sub es (bad) dec add jmp js mov sub enter inc push fistl push mov xor jns xchg pop adc pop int3 insb cltd enter mov jge adc ljmp popf mov and popf add xchg lds inc mulb xchg cltd push scas insb jl lcall adc test adc dec fimul in mov fbstp sbb jns pop outsb adc pushf shrl jg mov push jo cld or add sub mov and jns,pt xlat jl test adc sbb divl sti xchg add pop scas xor sub jnp push jbe repnz fnsave insb inc xor outsb scas mov aam push push push mov add sbb inc push inc mov lcall ficompl out in sbb xor dec les stos testl loop lods lret push sbb inc mov insb gs adc pushf hlt xchg in stos test cmovge clc test mov cmc lock out xchg out and jae ret in mov ja cld jo push dec mov sub dec mov out dec push xchg sti or (bad) ror loop mov ret lock dec repz (bad) sti stos icebp test cmp ficoml (bad) sti cmp mov fnstsw outsb add and outsl or xchg jecxz fcomip hlt or sub outsb outsb mov cmc ds out mull pushl gs sub (bad) fild jecxz (bad) out lret xchg in out in jo jmp dec mov orl push mov nop adc xchg mov mov scas and and sbb aam loopne nop lahf in inc std mov jmp add outsb sub push scas daa pop dec jge ret into adc pop inc mov fnstsw inc insl mov dec in and xchg mov inc ss repz enter scas xchg pop clc mov dec jp aas jns enter sub mov mov sub cmp sub or repz aad pop jne inc cmp test jg fldt mov pop xchg aam dec popf cmp outsl pop call pop sbb sahf in fistp and push imul test jmp sbb sub data16 fistpll inc push test mov mov dec cwtl mov adc cs call mov mov cmp sbb ds pop iret pop ficoml (bad) and daa aam cmpsb sub pop push stos mov sahf mov insb inc push pop mov and test add xchg pop sbb fnsave push jns (bad) fadds stos fwait insl cmp cmp movl out arpl aad cwtl jp int3 ja pop push lock cmp jb insl fs in (bad) jl enter repnz lret push xchg ror pop subb dec les xor lret popa movsb iret add test push xor imul out popa jns cmp (bad) jno out mov inc pop pop mov mov xchg mov ret mov mov push test out movsb sbb mov adc pop loope mulb inc xor mov ret scas push lcall lret adc loope aad xchg adc test mov adc fs faddl imul mov or mov enter pop aaa mov sub out hlt aad int3 pop imull sahf (bad) xchg sbb imulb (bad) push ja cld pusha xlat mov shl xor pop call data16 push mov in daa std ljmp adc inc xchg pop push je push inc dec inc fstl int3 arpl mov cmp (bad) add lds test mov sub dec rcr mov mov xchg mov xor and or shl pop ffreep inc dec dec rcl mov ret fcmovb push ret incb enter shrb fcompl sub add pusha add rcll push add sub inc in in std stos roll mov ficom mov rclb push xchg pop enter xor xor mov int3 clc scas pop or push stos and imul sbb aaa aad add xor outsb shrb imul push lahf mov adc pusha add les rcr je sbb mov in data16 xor test data16 cmp lret loope cmc loop int3 rcll adc xor push psubusb mov aas mov lahf stc iret dec stos cmp cltd lds jp sub or lahf js push jle add pop (bad) jecxz subl outsl adc push jb and and lock push or out jns cmp add aam lcall in out fldcw adc (bad) idiv ljmp jae into jg sbb or scas lock dec pop and in mov lret push jno add xchg mov cmp ret xor pop adc ljmp jns aaa mov sub sub sub xor inc add jmp push (bad) and sahf aaa dec xor jl pop xor lods rcrb sbb adc ja or sti icebp in dec lea in (bad) repz push xchg mov jbe mov sub push arpl mov dec cmc repnz or jns dec xor arpl pcmpgtd or dec add mov jp daa pop adc mov adc fcmovnbe push cmp arpl dec movsb xchg mov notb or leave fistpl popf jmp stc insl rcrb in fsub dec in xchg sbb cwtl fdivp dec je push lcall loop ds cmp mov mov rolb cs or xor repnz arpl test sbb ret cmp push jle adc mov popa jb dec pop jecxz icebp or into and in sahf mov push cmp mov (bad) cmp sub lahf movsb jecxz or (bad) mov lcall pop dec xchg dec jle adc pop mov scas or xchg and es pop scas cmp out mov lcall sub stc push es or pusha push outsl loope jb (bad) xor and fs sub (bad) xchg jp stos mov cmp and push inc push sti sbb inc jnp jbe pop or out inc sbb add insl mov ja sbb faddl inc mov pop and dec lahf and leave xchg loope aad push mov in lahf jg stos imul outsl dec in pushf push leave shr scas imul xchg ss inc pop cmp lret outsl leave nop xlat test mov pop (bad) xchg imul rorl arpl inc pop jae rclb cmp dec insl xlat push push das popf nop (bad) rcll jnp test outsl mov insl sahf fcoml sbb daa push fstpl lock or sbb jo jge or dec sti imul cmp aas mov push or xor xchg std mov xchg fildl adc add addr16 jge adc jae (bad) pop outsl adc test sbb adc mov jne (bad) in enter cmp insb sbb insl stos xorb or mov std dec add loopne jne xchg dec mov add xchg sbb fisubl sub inc aaa jmp fpatan repz rclb insb out or call xor push pop into aad ret mov jns mov mov push dec shl stc cmp in outsl dec sub push jecxz jecxz push rol xchg mov loope mov cmpsb (bad) xor outsb fwait push ret inc jp xor xchg xchg xor mov hlt (bad) out or mov mov lds out sub in xor push lahf mov cld sqrtps xchg mov js js inc mov jp add pop push push negb xor cmp jo sti int insl adc push or xorb jg jne test inc movb popa fldenv mov dec and mov jno scas xchg ret and mov outsl inc ret fisubr test push stos clc push jo (bad) fstps cli xor sub or sbb test mov cmpsb dec loope and out add dec sbb fs cmp lds inc rcll out xor mov movsb int3 mov aad sbb sbb daa xchg xchg lock neg insl xchg xor int3 dec dec lods mov addl xchg icebp pop icebp enter jmp push ja daa inc push cltd orl int3 cmp fnstenv jnp jno pop test sub push cltd lds jne lret inc fimul add and stos outsl (bad) sbb jge cmp out in cmc jno push mov sbb popf or ljmp jb pushf leave mov push ret call mov stos testl divl lods jle stos fs arpl mov imul lea sbb mov pop (bad) jae rolb jne in mov cmp dec aad inc ror xor mov dec jl addw shrl pop inc sbb mov mov cmp pop shrb imul and push inc sub push push fdivrl dec pop or insb jge jecxz pop out xchg lods mov stos push jge push push push clc in jge dec sbb dec loop rolb es sbb jbe cmp mov call cwtl aas and inc inc or cmp push pop jg mov cmc insb fdecstp add movsl mov je roll mov xchg push inc cmp loope xchg xor and scas ret aad lret sub lret cwtl mov or push ss and sub sbb add mov loopne cli mov loope adc mov pop stos in insb adc pushf inc lcall lods aaa or mov das and cmp xchg push pushf push cmc add xchg das inc push stos jnp (bad) (bad) data16 daa xchg or jns arpl les ss dec pop inc jns test icebp jnp mov (bad) fstl pusha std push lock push lea jle cmpsb jns push mov push lock push addr16 sar push je mov (bad) jecxz mov fs cmp popa mov cmc lret test mov xor pop pop and int clc dec jge loope sub jnp jo loopne push jno mov ljmp sarl mov cmp adc fiaddl (bad) (bad) imul mov xchg repz mov mov xchg loop fnstenv mov pop inc je mov xchg lods mov pmulhuw pandn mov inc sub or mov fiaddl cmp stos xchg cli lods push jns or sbbb (bad) adc and mov xchg fsubr sub mov pop nop mov cmp sub or push sub dec sbb inc mov cvttps2dq push mov sbb jmp fwait aad xchg idiv (bad) testl or push sti sub pop push or dec pop sub pop dec dec nop daa push and cs mov fcomps push push out in (bad) xlat xor es leave jl sbb les fist jecxz pop xchg sbb pop push sbb movsl cli lds pusha cmp std pusha mov insl or cmpl xchg into jo nop cmp stc hlt jo cmpsb (bad) mov xchg xchg jbe roll les movsb imul sahf mov add stos inc clc iret mov aas scas mov lahf ljmp sub mov push stos push cltd loope sbb sbb inc test popf mov sub addl push adc adc cmpsb cmpsb adc fwait shrb push sarl mov insl xlat push repz out cltd lock int ret out pop ss mov js call mov pop mov flds stc mov ret push loop mov idivb out ret test xor dec inc gs xor cmc testb jbe ret iret xor mov cs cwtl leave xchg (bad) jae xchg xchg push int3 test movsl loope adc and into mov inc imul pushf les or mov jl dec (bad) loop cli jne inc dec xchg bound and and inc adc pop test lods inc add sbb adc (bad) adc sbb insb loopne push mov inc sub ret into adc (bad) mov or push in mov inc out repnz or pop mov lret imul xchg in mov pushf lcallw jo jo rcl test or into adc in sub push lds fisubrl mov jmp addr16 jge sub ds (bad) mov mov pusha adc dec ss dec mov dec push scas sbb xchg and add movsb pop rcl fisub xor jmp xchg push in pop ljmp in rorb cmpb testb push lret xor shl cwtl (bad) push sub dec mov sbbb cmp out inc in pop test addr16 lods xor imul out (bad) into test xchg add mov mov pusha push push (bad) dec and pop fbstp stos jg push test stos adc or aas push loop loop push inc jp in sbb rcll push (bad) jne pop imul aaa clc cmp push fs mov in out aaa imul in push mov sbb or movsb es mov test dec shl pop mov ret inc adc sub dec imul lock popa faddp mov add rolb and je (bad) (bad) cmpsl out icebp fidivr xor mov xor lret sub scas adc jns shl ret shll xchg mov xor sub pop call xchg dec dec ja adc scas add jae jle xor iret (bad) fwait cmp cmpsl (bad) jno mov mov int cs mov push and ret push (bad) in aam push adc jns or sti cmp xchg int3 les (bad) int3 movsb push unpckhps (bad) in fidivr inc adc (bad) aas sbb pop out les mov adc dec sbb and jmp lods push addr16 cmp sub sbb adcb or aas clc fwait cli es es xchg xchg int imul mov (bad) or jmp inc loop or mov sub xchg jle cmp sbb dec push xor (bad) sti push stos sub dec fwait inc cmp sbb sub loop test xor sbb adc pushf sub leave sub out addr16 add mov int or push inc ds shll sbb rol aaa xchg mov xchg xchg sub jo ucomiss or sbb xchg notl hlt stos fstpl cmp int3 dec mov adc fdivs jg push fidivl add lret and fistpl and imul sbb inc bound jmp xlat or dec add jmp sbb sbb ja jge and jmp dec rcll test push xchg cltd into or adc jecxz in (bad) pop std jne and js jo repz pop mov or add ret jb popa (bad) add sub push movsl outsl repz mov jmp popa enter fwait sbb popf dec and or mov (bad) leave lock mov sub dec cmp cmovno push mov movsl addr16 cmpsl das xchg mov adc sbb or fdivrs (bad) and shrl xor fimul mov and mov jae add cmp and aam movsl inc inc fsubrs outsb or pop push repnz ja loopne push xchg les mov ja adc jbe lret (bad) sbb cli je fwait dec fcoms sub aaa mov dec (bad) xchg xor inc and mov call inc mov clc into gs xor lds stos ret idivl (bad) scas rcl outsb xor ljmp pop jae and pushf dec xchg xlat push popf sub test cmp push movsb push loop jae sbb or les cmp push lds arpl cmp sub (bad) popa lods les xchg roll roll in or mov mov push addr16 (bad) iret call mov push cld fisttp getsec shrb push dec dec imul jae inc mov mov sbb les push cmpb lods lock cld in jg icebp mov push scas arpl and xor aaa enter mov xlat dec stos addb shr sbb dec (bad) xor (bad) sbb mov mov inc test ljmp pop (bad) icebp sbb (bad) dec mov bound fwait add mov imul and push rclb pop jmp fdivrl jl jb (bad) fnstcw cmpsl nop cmp cmc inc mov lret test sub push dec mov aad xchg mov sub pop lcall xchg test dec inc enter push call aas or ja in inc push fidivr enter inc out cmp mov bound lret les mov sahf push popl lods sbb jb insb cld insl scas pop shrl popf mov lods sbb test ret int3 jne mov push ret incl in rcrl inc bound pop clc ds pop mov aaa loopne rcr ds cmp sbb sbb jno test xchg fistpll stos mov fdivl jae xor pop (bad) ja sbb cltd outsl lret aam cmp cltd add sbb (bad) xor out loope xchg adc aad sbb ljmp push jae dec call xchg addl cmp test adc call pop cmpsb and in aaa dec (bad) mov leave mov xchg loop pop jg sbb cmp jne into (bad) enter mov cmp jnp mov fwait and cli xchg add xchg nop arpl jo das (bad) insb jae ret jbe ds adc in inc inc movsl mull inc cmp mov je mov jl popf pop je mov push mov mov xchg mov mov out addl or lods inc arpl arpl sahf fnsave xchg in inc xchg in fsubrp or inc fcmovbe sub mov loope cli or mov movsb call cmp rolb cmp popf inc push and testl ljmp lahf push cmp ja push mov push push nop pop add daa pop inc push mov into mov rclb andl (bad) in jae iret lret sub xlat xchg mov je xor push lcall pop dec (bad) sti cwtl sbb add stc fcmovnb in in sbbb mov mull jl sub mov pop inc dec out cmpsb or push sbb (bad) mov (bad) jge push pop repz and int3 jbe lods popa sarb sti and std and jecxz (bad) (bad) stos pushf inc xchg inc jne push push sub fistp mov js int3 enter ja mov lock jne in inc sbb and pop ret addr16 mov xor movsb into cli push dec sahf iret jno xchg es sbb add bnd and daa out pop push mov pop sbb mov inc lds add and es popf (bad) pop dec (bad) in jg popf mov shr mov leave scas add lock das push mov ja push pop jp lcall mov and stos pushf fildl or or xor popf inc fs or push mov adcb jnp xor mov xchg (bad) lock leave out shl pop adc je mov inc cmp inc dec addr16 xchg pushf pop sub je or xchg xchg sbb dec pop cmp xchg jecxz roll fmuls dec mov mov cmc push aad in and or jae leave jmp js addr16 xor jns dec out and cmp sar lret add lods call pop jae aas sbb int3 lock lods pop rolb into pop pusha inc ss cmp out in mov les imul lcall (bad) aam cmpsl rolb movsb sbb push jns mov incl xor mulb push jmp pop in sbb cmp les cmp cmp inc or pushf stos test xor pop and ds jbe inc daa repz fisubl xor out lret jg dec mov in add cmp imul jp xchg mov in stos jmp repnz xor xor adc int3 outsl mov roll pop cs push imulb mov cmpsb test jb insl outsl fsubp in addr16 sti in jno lock shll mov sbbl xor in pop inc les aas insl xor aam mov inc pop mov mov js adc mov test mov popa movsb xchg into es aam mov lret sub shll mov xor sub xor cli jl nop aaa js in aas addr16 lods stos inc adc (bad) int3 orl dec sub movsb insl push les jmp int dec gs repz jne stos xchg xchg ja mov fmul arpl aad jnp mov pop jnp adc and cmp xor into or fbld out outsl aad mov jle xor in xor mov xlat xchg inc sub scas mov adc xlat ficompl pop out popf mov xchg ja lods call sti cmp je movsl je or sti mov test mov push jns jl push (bad) jns inc adc ja cmp mov and repnz rcrl dec (bad) jo (bad) aam es jge,pt cltd push mov push mov adc cli test repnz and das (bad) lcall push xor inc int3 pop sub inc push sbb adc mov fild hlt ret dec and xchg xchg jp jmp mov cs and call scas leave (bad) cmp test mov adc jne inc cmp iret or pop jmp mov fsubr dec push sub out add icebp pop stos add mov mov pop jae mov loop in push pop cltd dec ljmp cmpsl lret out dec out sub xchg inc xchg shrd dec pop add xor sbb into sub cwtl shr xor jnp and fisubrl xchg sub ljmp inc mov jg xor cmp repz imul (bad) lods insl ficompl lret pushf mov inc jl mov loopne mov sub sbb pop stos gs (bad) or movsl (bad) fdivl loop in inc scas xor sbb test daa rorl cmp pushf test (bad) adc mov loop and push xor push jl test mov jae mov movsb jb or shrb popf xor or pinsrw int fsubr jge popf imul and or mov jl jne das sbb pop push lret gs aas xor movsl xor div fwait inc out cmp enter icebp fstpl out js pop aaa mov cltd bound jle fs xchg sahf pop ljmp xchg adc mov psubd pop or cwtl xchg push sahf fiadd mov arpl cmc bound pop mov pusha enter out subb xchg cld cli sti jo mov adc (bad) lods push dec jnp in call mov mov sti mov sub cs adc push dec mov mov aad push test sbb das add jg imul jmp add js (bad) mov fidivrl inc pop fsubrs xchg mov in mov mov cmp out mov push xor popa pop aaa lods sbb inc (bad) jns pop notl idiv and or jge xor cmpsl mov mov adc insb inc mov je jno and stos fsubs inc imul or or xor fcomps mov lock pop int or or je ljmp push add mov pop lea push pop inc push int3 popa or sub dec or xor mov (bad) subl lock sub fistl sbb mov leave loop mov pop mov mov out mov pop fild fstpt lds xchg xchg lahf and mov jmp test jge xor mov push les and stos inc xchg pop add pop aad jl push push add pop ljmp xor push or push mov dec hlt xor stc jmp xor lret jae mov dec mov pop gs jb push ss outsl add in adc aas in popf ret hlt push mov gs nop mov movsl mov mov fwait mov test enter xchg mov inc loop or jle lods push adc in orl and lret in mov add stos sub adc mov or into cmpsb ja imul leave inc ja dec in xlat insb dec xchg scas add push pop arpl (bad) mov lret xchg call lea test aam and (bad) loop sar dec jg xor cli jns incb cwtl xor pop add in fistl (bad) inc mull mov into sub jmp xchg movsl ret (bad) jl pushf jns addr16 mov cmpsl dec push cltd dec mov in insb decl stos (bad) cmp (bad) hlt cmpsl ljmp and mov sub dec or mov test mulb enter xor xor add cwtl xlat int and mov sub mov lahf inc test inc fldln2 loop loope test mov mov cmp jo inc or push inc adc push push xchg loopne jo jle loop out xor fstps mov push push xorl sub aaa sbb jmp xchg mov lock arpl cmpsl pop int fxch stos dec leave jae aam (bad) lret popa push xchg cs dec ljmp mov nop add mov sbb pmuludq jmp lcall popa inc arpl nop int adcl jmp mov les subl lea dec add enter ficompl movsl mov stc push clc stos shlb sbb repz (bad) fildl cmc fs (bad) fcmovnu jae (bad) dec test sbb movsb in stos in cltd out pop jne stos addb (bad) aam les mov movsl pop addps std pop dec cmp arpl outsl add sub in dec xchg sbb xchg adc mov mov pop xchg pop data16 or xor adc mov lods mov into addr16 dec inc xor push mov mov in xor das adc jae (bad) lahf cmp insl mov imul mov lcall insl jb,pt push test mov out xor movsb jmp and sarl and nop nopl dec (bad) jbe ljmp xchg jo lahf xor push jo bound mov lea mov das cmp jmp mov add xchg xchg mov data16 jne ss xchg pop dec insl jno mov pop sub in in pop mull cmpsl push (bad) cmp inc pop and xlat mov mov inc (bad) lahf addr16 incl pop sub in inc aas insl and fadd push imul pop pop mov (bad) es cmp sbb or add pop nop jmp pop cmp jle mov loop jns sbb mov insb dec adc scas in sub jg test in mov rcrl fsubrl movups (bad) mov xchg (bad) jb sub ret cld or out popf adc (bad) js mov imul mov sbb cmpsl lcall es mov ljmp mov jmp fwait add inc iret pop adc cmp mov fisubr (bad) jp lds xor lret stos (bad) sbb shrl js fucomi aaa movsb cmp jno fisttpl pop or lea xor sar mov loopne enter rcr push inc sbb out xlat imul gs lds or lea nop (bad) pushf add push push daa outsb sarb and xor xchg sarl pop xchg sbb inc xchg and inc movl xchg (bad) jae movb and xor sahf cld es test adc (bad) std test enter mov mov cmc ret xor scas js lods adc aaa mov jmp xor vpmaxub push jns cmpsl in cmp jae xor scas sbb int3 sbb stos cmp lea cmp out jne dec jne fstpt leave cltd inc imul icebp fstpl mov pusha ja das pop push and xor fldenv rorb mov mov pusha test ds cltd and or push insb popa popa xor push andl or out insl sub xor adcb je cmc and (bad) (bad) pop roll mov clc or sbb incb mov xchg insb sti movl adc push mov sbb sbb out xchg add jns fwait xor fnstcw xchg adc mov pop addr16 or shrb inc push mov mov pop out dec repnz sti (bad) imull mov push je daa or cmp leave adc mov add movsl or int3 cwtl push icebp addb add cmc xor dec jp cmp push jns addr16 add out lea out pop imul sbb pop clc dec inc (bad) fiaddl mov pop xchg pop (bad) mov pop jecxz push or mov ret mov fldcw mov xchg in cmp jo mov lea lock dec sub jmp stos and (bad) xchg xor bound or dec nop jg mov and shlb mov dec cli or mov dec outsb fstp shlb mov popa xor push sbbl adc push push dec xchg sbb or ja dec insb push adc push and outsl loop lods in cmpl repnz fsubl mov cltd ljmp jg clc lods out test xchg jecxz test pop lret xchg fwait dec frstpm(287 lea jmp fcmovnu ret xchg push negb mov dec jmp fisttpll sub mov mov push cmc ficoml adc pop jg and cmp mov leave int push cld dec mov les jle xchg das out js lret lock arpl leave mov xchg mov jb bound xchg mov sbb jp mov in aas aas dec push lock sub shr sahf (bad) push arpl xlat push bnd sub dec stc fsubrl inc ss test inc mov leave (bad) dec loopne cmp sbb cmp and aaa fbld jns adc and aam jge sbbl pop push push data16 ret push in movsl rcrb inc loopne push jns xlat mov and and mov xchg scas cs dec cmp mov in or mov and sti les or aaa loope les ret sub fcompl mov cmp shrb pop repnz mov fwait mov cmpsl inc inc mov jbe stos jle scas pop mov mov iret inc rolb dec div jbe mov adc jno lret fldenv push xor lret dec cmp add cmp and fwait push js xchg pop cltd xchg rcl push sub imul dec popf sub shlb push inc and pop inc rolb sbb inc inc cltd shlb xchg xor fidivr xor mov pushfw mov dec les fs inc divl inc fcoml rol adc in push clc cmp test pop cmp cli sbb inc add mov out add jnp int3 cmpsl mov and sub mov fs mov xor lahf mov push lcall fwait mov mov loop imul fs mov and aam dec mov add cmc jae jl out add mov dec xor xlat mov add mov sbb mov popf (bad) movsl push inc push add jg dec inc sti arpl mov mov mov fdecstp lock mov jp mov fildl mov cmp dec sti jmp sub loope push (bad) hlt int3 adc ss cld xlat sub add into lea sub cld outsl adc mov outsl loopne cmp sbb xchg xchg stos lcall cmp xor bnd inc test sbb cwtl mov lods cmp lods sub xor sub mov ret cmp or movsb push lea adc movsb test xlat or mov (bad) mov and mov xlat jne idivb (bad) jnp xchg scas cmp xor scas add mov sub sbb pop sub notb imul mov add adc and sub addr16 test pop rclb inc mov mov add shr adc cld out gs (bad) jbe sbb mov sbb xchg test ss into ds and ljmp cld and add cmp and xchg aaa jg add in bound dec add xchg sbb mov push push inc jb lea out cmc arpl sub mov or outsb inc jecxz jle cmpsb mov es andl cwtl jno mov add outsl or mov sarb dec xor mov mov int sub enter dec loope fsubs pop sbb in jae out push pop push jmp cs cmp push dec mov or inc je mov xor test scas or mov decb leave xchg push add fsts adc adc stos or push xor jno out pop xchg test inc xlat addr16 jae pop adc call pop sub stos sti (bad) mov inc ljmp cmp out and dec pop arpl out data16 aas inc lods cwtl (bad) pop sbb sub mov or jnp aam mov sub push flds and fidivrl add inc mov imul out das stos mov inc (bad) out ss loopne or inc aaa or mov es sbb mov test jmp adc push (bad) scas pop sub jmp jb xchg pop bound xor xchg add outsb inc push (bad) and cmpsl sahf int lahf mov outsb xor mov rcl loop mov cmp scas or mov test cmpsl push add ljmp out call aad pop xchg pop xchg push nop lea mov lret pop bound push daa lret ffreep mov cli cmc jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp decl add add rcrb mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa dec add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int3 dec inc inc push js in (bad) inc andb mov fistpl (bad) xlat (bad) jae push in mov add mov mov adc sahf (bad) and inc mov xorl dec fadd cmp pop xchg jns loopne stos cli xchg mov push dec mov jb jno in mov pop adc adc mov pop inc pop xlat adc int dec jmp rcrb fistpl fldcw cli ret add xchg (bad) mov cwtl std lods outsl add das lret sbb and pop scas jns repz out in lret je fdivrs stos or sbb jne push sbb pop mov sub dec mov sbb pop call into mov sbb jecxz push ret jbe out mov repnz and (bad) push jg and loopne (bad) or subb push ror int jno lds mov sbb pop xchg sub out jae call in jno dec inc loope xor pusha outsl xorl cmc mov lods addl (bad) mov insl sub loop popf fmuls add adc lock in or mov cmp jecxz hlt out cmpsb mov (bad) lock femms cmpsb mov fdivl daa les cmpsl xchg es repnz inc push xchg (bad) ss in ret repnz call stc in lock loopne pop inc jg sbb (bad) scas mov inc adc xchg fldenv (bad) inc fs aaa add es jmp (bad) push cmp push mov and mov dec andb or insl insb jl jp push jl mov xchg sub fildll mov or xchg (bad) cli dec mov push mov inc stos lods push xchg or adc jl in aad in or mov std or stos xlat in xchg sbbl leave or cmp adc and push pop xchg loopne imul out clc xchg fnstenv je push js insb iret (bad) jp in mov push pop not int3 add fstps repz xchg insl jnp lods add pop scas shrb pop fisttpll or fucomp xchg hlt fbstp ljmp add xchg nop xor test pop cmpsb lds jle xchg jno out subl jb and sbb cs orl mov or cmpsl adc ss pop shlb sbb int pusha data16 add push in out jns xchg push rcrl movsb dec sub pop (bad) jp dec out les jnp cmp push orl add push insl fs lret pop add inc sti sbb movsl sub push xlat cmp xor pushf (bad) hlt dec hlt add push push jo ret das insl in and cmpl sti (bad) or mov inc ret mov xchg sbb inc adc popa je dec xchg xor sbb jg adc inc mov mov xchg mov lahf mov inc inc lret test mov push xchg dec in dec cmp pop ds dec inc inc mov mov inc mov push lahf into ficoml and cmc xor ret mov andnps jnp push xor inc test out test test stos or adc cmp and mov lods fidivr popa and adc mov xor pop sub inc push out and addl cmpsb popa add mov push adc xor push xor in ds push imulb scas ret mov clc outsl mov lcall stc sub es andl mov pop sub lds bnd mov push cmp cmp inc out jecxz ss push sbb mov repz xor mov (bad) push pop jae mov (bad) repnz mov add cmp orl outsl dec xchg pop mov negl cli fldl cmp sarl sbb cmp cmpsl (bad) xor int call mov test mov sub pop mov jnp jb rcll fmull orl cltd rcr push mov inc inc mov das push ret pushf pop jecxz sti xor jecxz xchg aaa mov lods les xchg fildll sbb mov mov cmp sub repnz mov repnz icebp jnp jmp push push jb and loopne out aam add push rorl out int3 add jae lds test xchg scas aam cld mov and push xor outsb pop adc sub inc dec pop fiaddl push inc shll jge,pn push jb stc mov jle sarl pop adc movsl push sti out jb mov pop mov outsl aaa jle jb imul int3 leave xchg insb cs das push inc jae in mov dec icebp mov adcb adc pop mov jno inc fwait push xchg lahf lock inc in adc bound inc inc sub jae test xchg lret push gs rcll and jge mov sbb ret sbb mov ficompl fs xchg cmp enter sbb dec imul mov ss sub mov fildll xchg cmpsl xchg jbe jns in icebp ret sub push pop jnp jle pop xor gs inc xlat into xor inc pushl push hlt mov lahf mov and pop xor cld fildll mov cmpsb popa fwait jmp or push push sub lahf pop and jp aad pop xor mov dec cmp mov and es dec int pop adc push test dec cmp inc ror (bad) rcrb sbb cmpsb add fs fcmovu sub data16 sbb adc push sub scas mov push fptan push rclb xchg xchg pop lds rcrb cmp incb nop jge mov repz adc inc jl clc jo sbb psubw in push ja mov test pop test in aaa mov ljmp ret add or xchg jae lock clc lret stos mov (bad) mov push loop pop mov shll arpl xor sti pop dec std into jno in lahf mov mov sub jb test add shrl mov mov loope push xchg inc jl movsb pop ret rolb jo xchg lea pop xor sbb divb and adc cmpsl (bad) cmp movsb (bad) shr mov xor xchg cmc mov fwait loope pop cmp std popf xchg aas inc in cmp ret mov jmp cmp jo out pusha std push test pop je mov xchg (bad) xor pop fsubrs cltd adc lret add loopne pop jbe lock ret andl xchg or arpl and sti insl and arpl xor aam mov leave aad sbbl dec out (bad) movsl jbe imul mov mov cmp inc jnp mov cli cmp xchg add jno (bad) and cmp xchg sbb xor insl push loopne loopne pop lods popa mov int orl push repnz addr16 adc (bad) sbb add daa outsl sarb and mov inc in dec movsb (bad) inc insb mov outsb icebp das shlb adc notl xchg dec fcoms pop xchg (bad) sub hlt nop out push jp shrb inc sub scas mov jecxz pop sub jge add imul add xchg jle lret or ds adc mov div cld jbe xchg adc mov scas leave cltd scas push and cmp sbb xlat mov pop bound enter and cmp les pop add jge out xchg sbb leave xchg ljmp sarl sbb xchg push rcrb outsb mov outsb sbb or pop push jle pop push push cli or inc jmp leave xor mov adc sub jb sbb jmp out stos ror jecxz fsubrs pusha xor adc inc loop faddl outsl jl sub fcmovbe pop test inc popa (bad) add sub stc mov mov xchg movsl es mov xor jns xchg paddb xor movsl (bad) repnz mov outsb xor mov ja out movsb cltd mov aad repnz jecxz imul xchg insb inc in scas out push scas lea lret aad mov pop out dec xor push fildl jp add ja scas mov lret dec hlt lcall inc sbb stos adc pop sub and jg repnz shlb lock out push leave sbb mov roll mov (bad) add and dec mov inc test mov and (bad) or (bad) add stos add push xchg jbe stos aaa pop add inc sahf cmpsb xor adc inc xor xlat insl cmp bound dec mov int ret sbb jb cli jecxz stc inc scas jge fmull mov pop xchg adc movsl xchg leave jmp shrb fs add mov or inc loop push pusha sub lods popa push mov pop jg (bad) mov pop imull (bad) (bad) inc cmp mov daa add inc fildl aam add mov sub fdivl mov ljmp push xchg ret jnp jo rorl mov xor and lret add test fistp loope sbb push xchg insl lds pop sbb imul in sar imul mov sub out dec fwait mov (bad) daa mov jnp,pt ds xchg scas arpl pop dec xchg pop mov fwait jb jne sub or xor jl adc dec mov (bad) lret sub lret cmpsl negb push mov call (bad) notb arpl pop mov sbbb lea inc or leave iret movsl pop and (bad) ss mov dec lea aad aaa fstps jp enter adc fmuls adcl lods adc xchg pop negl lahf mov adc pop ret fisttpll clc mov push mov rcrb xchg xor lahf push lods les jp into cmp cmpsl test (bad) call jp sti fldenv xlat dec mov pop jb ficom pop fsub fstp inc mov mov andl and jecxz jae add scas mov jecxz or mov les add xor in mov jno pop es mov scas add ljmp and cmpsl inc (bad) repnz shrl xlat push mov push mov outsb pushl nop scas in pop les icebp aaa sbbl sbb rcrb jnp sbb jmp divb dec fld mov inc int3 and pop mov and fadds sbb pop pop mov sub mov mov mov nop ficoml push imul pop lock std std xor cmpsl pop push adc std push inc inc mov sbb mov ljmp push in icebp inc sub enter jns xchg cmpsl in cmp or cli int mov mov push sbb jl and dec mov adc aad jne xchg loopne std mov lds test mov scas fstl cmp stc xchg pusha push fisttpl repnz jecxz mov sub ljmp and mov add loope add fisubrl pop popf shrb pop insl mov push inc rorl sti xchg loope and test mov pop mov or lret in pop divb lds es mov mov (bad) mov mov inc mov jno jne mov sub add mov (bad) mov hlt push loop mov into push inc jnp pop jmp pop push hlt add test pop push pop add fnsave (bad) xlat orl ljmp mov add sbb negb vmread pop adc xchg out out scas add lret sub xchg jmp sub add aaa inc or fldt push ljmp adc sahf fwait cmp inc lds pop mov cmp mov outsl add pop jmp addr16 sbb or mov mov mov xor aas mov or cmp nop dec mov cmp mov (bad) cmp aaa cmc xchg iret adc adc dec mov add mov sub mov xchg or movsl cli icebp sahf cmpsl add mov out pop call icebp push outsl pusha pop in cmp out sbb (bad) shlb mov xlat mov ds lret lret xor mov push adc aam into jno leave shrb mov sahf mov (bad) testb adc push xchg mov mov mov arpl cld iret (bad) je cmp jge mov mov push data16 into in fistl mov leave popa movsl inc or push mov (bad) nop or es in repz pusha jp imul inc fidivl fldcw ret mov lahf fidivr fadds push enter adc adc xor and pop or lods lods xlat sub push mov mov pusha notl adc scas data16 ljmp repnz mov dec std xchg sbb cmp in inc pop inc adc mov call cltd cmp pop (bad) ja stos push mov int (bad) ds out movsb shl mov xor pop inc hlt adc pop and scas cmp mov sbb jne sarl sbb lret outsb mov test scas inc repz int3 (bad) test (bad) jo ret inc nop popf into jbe jnp mov xor nop dec push inc dec in mov dec test js sub cmp xchg incb call test insb inc ficom lahf ljmp adc pop push scas ss pop shr push xchg push mov mov arpl in mov (bad) push jmp mov dec push mov adcl mull cli inc xchg clc pop mov sbb dec mov nop add data16 sub movsl out aaa adc cmpb jg cwtl cmc in scas dec aad mov bnd arpl iret jge ljmp bound dec push mov sub dec pusha jnp movsb imul sbb (bad) xor popaw inc aam daa lret xlat xchg das mov lret adc inc cmpsb in and (bad) and pop lahf lahf (bad) mov and push push sbb jecxz fiaddl sbb lea jecxz std adc test xchg push clc repnz cli imul ljmp mov and adc ds mov jmp sub mov xchg inc jmp popa xchg jmp jecxz test fstpt aaa inc mov jns rcr mulb rcl mov and push shll cwtl pop mov and mov lods jecxz sbb push in sub popa push out fmuls cmp xchg add lods rorl ds sahf push ret push or inc ret je js test jge into ds cmp adc ret pushf and sarl xchg lahf xchg fldcw lock stos popa jle cli scas int mov sub xor pop outsl push shl fisubr push stos xchg sbb mov sbb lret pop sarl clc lcall ja push clc test add cmp pop gs sub stc (bad) lfs leave pusha lds loop dec mov mov push out setne test in jecxz or cmp fisttp bound or lret out psraw enter mov inc (bad) mov sub fmulp jecxz out push xchg push dec fs (bad) ss (bad) and enter ret adc je dec cmp mov lahf loope pusha sbb pop lcall cwtl iret ffree ret (bad) mov scas aad dec sahf cmp mov and lret add or mov mov dec mov dec dec xlat dec or push int inc outsl insl aas ret repnz sar aam cmp and mov sub out rclb (bad) xchg mov (bad) push jl mov stc jb or stc ficom or scas cli sub push jp inc ds shrb jno scas xor jmp inc sbb xchg and loope movsb mov in fwait fs sti sub (bad) or stos clc shr popa xor jno cli mov ret fwait cmp add adc scas pop test mov dec daa (bad) push push jno xor or xchg xchg andb mov (bad) cmp mov aam sub xchg shll jae loop jae add mov fwait inc int3 pushf outsl (bad) pop mov fsubp insl dec xchg cmp bound fimull adc push sti sub test pop and cmpsl fwait fwait icebp push add mov or mov sti or scas xchg dec inc test pop push mov dec aas mov mov xor fwait pop aaa out jbe inc sub icebp mov inc subl jnp pop inc add dec mov fcoml pusha jb cmp fs (bad) aaa mov jno frstor xor or addr16 fs sub cli fucomip jnp lea adc cli test mulb in and pop lock es mov push mov jle ret or add or push pop xor xor jno out xor mov adcl add push add in mov sar pushw xor adcb adc ficompl mov cmp sti rclb sub jg aaa loopne inc jmp pop inc pop (bad) int mov ret aam cmpsl loop scas mov mov in push addr16 and nop scas xor jo dec sub fdivrl sbb je fnstsw lret test mov call dec push xor lahf push fwait dec inc and ret and movsl xchg pop clc mov pop scas adc mov rcll mov (bad) in js rcrb pop xor lds inc hlt jae inc cmp inc repz aad add mov sub mov movsb jmp in or adc loop (bad) jnp aas pop push and add into pop or scas inc mov mov mov cmp fs mov adc or and or xor stc push add xor loop or xor xor jne lcall (bad) insl fsub xor enter (bad) fmuls jno repz cli cmpl stc and mov mov iret mov js pop imul movsl int cmp sarb rcrb das cmp inc sub mov push mulb and and nop dec sbb mov outsl sti adc push xchg push add cmpsb pop std xchg ss pop scas sbb xor mov push or imulb pop (bad) out fldenv popa movsbl imul test rorb or or ss pop test fbld js and jecxz,pn in pop push out out xchg adc push inc out xchg adc or or fisub cmp push loop mov pop mov arpl xchg (bad) jnp data16 sub push sub jae pusha jnp dec dec ds dec xor add test sahf fs lret imul stos std sub mov stc dec jl std neg or xlat mov inc sub call popa pop jns aas xchg das mov xchg stos jno andl hlt or xor nop into (bad) (bad) rol mov in push aaa pop std cmpsb push add xor mov push movsb pop mov add push in icebp jecxz jl and pop lahf xchg push (bad) mull aam outsl or mov in not pop cmovbe test jmp bound mov jae mov ror sti notb pop jns out add jbe xor pop outsb mov cli cld loope adc test and arpl mov sub push inc loope fnstsw mov pop pop inc mov daa dec js adc xchg dec push adc fcoms xchg sbb pusha js (bad) pusha ja mov xchg mov pop cmp pop les maxps (bad) sub lahf aad fwait or jns mov push mov (bad) decb cmp jbe and sub cmp or pusha pop test std adc adc mov push inc notl sbbb loope inc or (bad) aad mov inc mov jbe jp cmp aaa call pop and outsl mov aam lock mov mov int3 push cltd adc dec gs nop mov cmpsl fisubl enter enter sbb inc loope test dec cld (bad) icebp xor cmpsb lds nop ja ret inc push aad shr das out icebp andl sbb repnz add in stos imul pop pusha addr16 jg mov inc mov fldt jmp out pop jp insb (bad) into xor scas jg je repnz inc sbb cltd fiadd (bad) push push repnz add stc mov xchg sub fmull dec sbb add inc outsl stos popf mov jl sub push fsubrl outsl pop mov mov scas popa fcoms mulb loope gs pop pusha (bad) mov jge gs adc lret fstps mov push cmpsl rcr mov adc in dec test sbb call ret in loop inc mov into pusha mov jne pushf mov std aad inc add jne cltd and add aad xchg dec idiv notb xchg push idiv out mov pop test and push stos mov adc mov pop cmp adc in iret mov (bad) jg adc jns mov rolb lds mov mov out inc sub mov (bad) xchg std hlt aaa lods fldl push aaa and insl mov lock lea stos je call lock or call cmp daa jno add push pop mov push rcl pop or hlt jge sbb sub and in xorb imul bound cmp mov test mov popf (bad) cs sbb clc dec daa bound inc jmp sahf in pop adc sub dec mov inc sbb bound and flds (bad) xor pop cltd sub sti scas mov dec adc fs movsb inc cmp and or jp daa mov ret fs or fdiv jmp (bad) shrl ljmp adc dec cwtl add in les jp and jae push jns daa inc lods pushf ljmp cmp sub mull leave and xchg mov sahf add lret or push push maxps pushf add fistp lock mov pop jbe fwait xchg mov jb out test and or push bound mov mov cmp orl mov stc mov cmp icebp daa pop cmp jb out movsb sbb push (bad) sub mov or xor add in (bad) mov mov nop pop int3 adc lea inc jmp aad fsubl fildl arpl ljmp js mov cmp xchg cli push inc pop xchg xchg stos repz or fsubrl (bad) mov outsl jae lock adc cmp fdivl mov xchg mov fwait lret (bad) jae neg jns loope mov mov cmc push cmp mov xchg and xchg xchg sub xor mov inc dec ja jp pop fistl mov mov pushl dec rcl mov xor mov push xchg cmc (bad) xor and xor sbb or int ret or pushf jno or out outsb nop push mov xor xor shl in std mov outsl add and xchg dec inc xor adc pop and dec cwtl out pop out xchg sub xor cmc mov sub jl xchg inc test inc jo add mov mov test or cwtl (bad) stos pushf ljmp cs jbe xchg pop mov push adc nop loop xor cld jl jecxz sbb mov cmpsl (bad) mov cmp sub sbb push daa ljmp inc pop cmp mov xchg lods xlat ficoml mov roll push or add lods pop inc cmc jmp lea adc push fwait dec dec (bad) stos sti pop gs mov in push adcl das adc xchg loop xchg (bad) cld jbe das jl and je xchg nop mov cmpsl shll fnstenv pop pushl mov pop cmpsl jno jno mov (bad) mov mov out int cwtl mov sub insl sub or scas and add pop lea testb mov scas jae fidivr sti lret out lret sbb icebp lret cwtl xor (bad) xchg fisttpl bound jns lcall aad mov cld dec sbb and lods inc add ss cmp xor loopne sar std lcall cmovs orb mov rclb lods inc icebp andl cli inc insb sbb mov cmpsl sahf cmc add dec js and loope mov mov (bad) hlt aas inc and sahf sub or mul clc jae push jg mov fcomps cmp (bad) movsb fistl cmpsl (bad) cvttps2pi aaa outsl adc or hlt jp ficom xchg cltd imul push mov adc icebp fisttp aad xor inc cs mov adc push cli inc ja out adc cmp add inc (bad) push fucomip loope clc or xchg cmc cmp outsb sbb into lret (bad) orb nop jno sbb data16 daa idivl xchg mov mov mov jbe xor xor daa jg dec loopne mov dec cwtl mov inc je fbld pop fnstsw add sub (bad) sub cltd jg out mov mov (bad) lcall dec push aam sbb sub loopne xor push sbb xor ja in ret add xchg fisttpll dec push enter lods jg xor in fidivr sub jne into (bad) fwait mov into push mov add outsl mov xor mov xor dec cli adc dec in enter xchg sbb push cmp xor loop or jmp and lock mov inc pop shl xor rclb lahf inc fidivl cli sub lret das adc or pop push les mov push movsl pop cmc andl js call mov aam loope adc insl mov cmp sbb or jle divl jle mov (bad) bnd jg jno out out sub and mov shl je mov lret orl pop rorb inc cs sub mov pop lcall jo gs dec imul cwtl push jmp pusha sbb jno (bad) data16 rolb sbb enter fidivl scas loopne mov mov sub add pop hlt push and jo adc push ret adc fnstenv mov outsb push or adcl sub (bad) and dec inc cmp mov popl stc ficom inc sub jg dec sbb sti mov (bad) daa inc push mov push jmp inc out jbe es or movsl cmpsb xchg test jno jg jg call sahf out pop sub int sbb fstps mov lds fnsave repz pop inc fldcw inc arpl mov rcr rcrl (bad) lret push mov idivb xchg dec xor pushw or mov xchg xchg or ret lock (bad) out paddusw sbb mov pop jno sbb xor mov out pop cli add fsubrs sbb jbe call cmp pop adc cmp mov test pusha adc jg push fstl dec mov stc (bad) aam pop fnstsw push shll add mov xor out jmp push push cmp ss js imul xchg fs pop sub push xor test enter pop in or (bad) jmp mov cmpsb jecxz adc fldcw sbb nop ret jg cmpsl push add lret and sbb inc lret (bad) aas insl and sti pop cmc pushf inc arpl xchg add ljmp jge inc push out push cmp sub mov popa fsubs rolb push lret js sbb lret dec ds xchg adc (bad) xor cmp imul xchg std cltd sahf and inc adc push mov mov pushf pop leave (bad) fadds jmp adc out pop ljmp dec xor sbb cmpsb pop out pop fisubr bound xchg std pusha pusha fwait lock jecxz out test sbb js inc jns outsl mov jno sti add and icebp std loop pop cwtl imul fisub or jg ss jmp cmp cltd ja repz cmpsb mov jecxz mov cmc (bad) jb adc inc push or int3 test xor jbe test orl or mov adc cltd sarb or popa shlb push dec dec xchg loope sti (bad) cmc mov loopne ds sbb test push clc adc pop mov and and clc imul add or dec jno testb xor lcall or xor jo or daa ds dec (bad) sahf xor lock out push inc fs push in mov xchg cmp mov das jae jmp xchg sbb and xor lret cli cmp divb jmp arpl sbbl sbb jne test nop in or ja movsl push push sbb pop mov push push aad leave insl movsl popa test test jb inc adc les incb gs pop and das xor std xchg pop adc in fwait (bad) inc out movsb test loopne sub dec (bad) lret mov sub scas cmp jl pop out xchg movsb int push iret mov xor push (bad) pop xchg jae mov add pop cmp in fcmovnb jge outsl sub mov out pop adc pusha stos adc mov or and sbb in pop sub xchg jae pop aaa (bad) add sub outsl shrl dec es cmp loop (bad) mov mov es dec mov xchg sub xchg add mov clc cmp cli jecxz mov imul insl mov (bad) fwait es jl or pop les dec jl notw dec inc test mov test mov es movntps fcmovnb cld or pushf pop int inc rclb repnz xlat out mov adc lcall add or mov shl mov arpl subb and mov int das dec addr16 loopne inc insb popa arpl fidivl int xchg adc jecxz iret dec xchg insl pop cmp mov repz mov dec push pop in mov das sub (bad) xor xchg cs ficomp rcrb test loopne push push add insl jecxz loopne in clc sahf (bad) xor xchg imul mov bound arpl xchg jl jno sarb insl sarb jns loope mov mov pop or gs fdivl inc rorl mov test jp aam (bad) arpl testl je jg lret cs adc mov sub push pop inc dec (bad) lods aad imul jg jne lea adc pop ds mov add sbb sbb cmc bound adc xchg xchg and pop push sub leave lret enter pusha or inc stc pop sahf cs in repz mov mov and mov daa sti mov inc jl out xchg neg adc or mov mov mov jae (bad) pop and cs xlat jge and stc cmpsl lret sbb jns dec pop jg ds fstps dec inc adc dec xor mov or adc jge mov mov or adc sub cs dec mov out lret mul (bad) push lret lods mov adc in sbb xchg (bad) std repnz jbe and xor mov gs (bad) sbb ss dec adc js int3 iret xchg loop enter cmp pushf (bad) adc fcoms inc and inc mov mov ja arpl xchg int pop ljmp push divl movsb mov je dec mov and push sub xchg ljmp stc addr16 xchg adc clc sbb push add sub dec (bad) dec les pop iret stc xlat mov arpl xchg lock xchg xchg icebp xor cltd lret loopne out jg fildl cli dec xchg push inc repnz sbb (bad) jp pop addr16 btl cmp jmp inc mov cmpl (bad) adc and mov inc add jp loopne push mov jnp xorl and les movsl out push and das out sbbb fwait push ja push or xor mov int hlt jnp pop enter mov inc pop pop notb or pop das jmp inc (bad) mov xchg adc mov dec bnd lahf in idivl xchg (bad) in call rorb outsl cmp icebp outsl mov mov aad aad inc nop push push jl daa aad imul mov or jge push cwtl out mov in push mov xor int data16 jle (bad) mov lcall and cmp dec mov adc (bad) or cs adc pop sbb (bad) enter xlat xor sub mov idiv mov (bad) adc push and pop fwait cld add and jmp jne ret mov push mov jae ss and mov dec jmp dec cmp mov and lea lahf mov test inc cmc inc cmc shl in out les jnp popf jbe jbe rolb leave outsb pop imul std int3 cltd cltd out mov jl jbe push pop pop dec int3 mov jae jecxz adc mov fildl lahf (bad) lcall add push or dec cmpl mov push xchg cs sub (bad) or rorl enter mov ret pushf daa fnstenv and rdmsr xchg mov gs mov jo mov gs mov js lret shrb jnp dec out popa sub out (bad) jb add fsub ljmp and es ja,pt add jae (bad) dec mov add push or imul xor and (bad) (bad) mov push jl xor icebp dec (bad) push imul pop shl sahf pop enter (bad) cltd add iret inc pop les mov jmp in adc add repz and jge lock pop cmpsb cmc paddsw out lods mov mov pop in dec nop fild xlat dec pop lcall mov (bad) int3 insb and pop and mov (bad) (bad) rclb setge pop rolb push imul imul mov pop sub adc enter pop mov punpckhwd push cli or inc jle sahf stos leave or fbld xor int loopne pop fiadd jnp imul nop lock (bad) push pop push add pusha scas inc lret cmp xor xchg jns xchg loop cmpsl scas outsb ds aas incb push sub lea mov jno shl (bad) and pushf pop notb mov and sub js lods in rorl lret fwait add add sbb xchg pop push xchg mov cmpsb inc iret xchg int3 mov or xorl test (bad) dec pop mov int3 mov (bad) push dec sahf fist stc std dec inc add pop scas or adc and dec push xor stc mov fildl jg arpl ja add sbb push jl add sbb cwtl test (bad) xchg cmp into ret or push icebp adc ljmp xchg jl fucomi jae xor movsl adc cltd and mov lret mov xchg data16 loopne push jg enter sahf mov ret sbb fstpl inc push xor std in adc pop jbe push dec xchg mov xchg dec stos push cmc push push std insb pop fwait bound pop sub or ds std xchg jp fistpl mov adc ficom sbb xor add mov into push cmpsl jns jne and pop mov add inc fisub pop (bad) lcall daa push popf aas or mov in fiadd cmc adc dec and cmp pop aaa pusha sbb lea push dec cli (bad) repz pop push ret dec inc push sahf insl sbbl in (bad) mov push cmp adc mov bswap repnz sbb orl add aam mov (bad) sti imul incl setnp xchg mov dec (bad) loope stos das push or mov sarb pop lock inc xchg push ret cmp loope pop loope mov cmp xor sub lret or gs pop icebp xor jecxz ss jne (bad) fs pop call icebp mov fcmovnu cmc pop push cmc popf push rorb cmc sahf jecxz (bad) repz or or add out inc subl push jmp ret icebp cmp stos mov js pop lahf mov ljmp xchg xchg rorb addr16 mov xor jmp pop cmpsb push jmp out out (bad) scas or shr dec les or clc mov into mov mov popf jp loop scas fdivrl mov add (bad) add jmp add imul sbb mov sbb xchg cwtl popa fstpl imul xor push (bad) cs test cwtl repz ss inc pop mov repnz jno stc sbb into pop nop pop xchg jnp jbe pop or in rorl push push mov movb jb pop fwait sub push in or inc sub add push bound and insl sbb ficom in test int3 stos push or jae jnp jge push lods gs out in mov outsl xor loope fistp mov cmp popa int3 xorb sub or or call push mov fdiv daa fwait pop cmp jge mul incb inc cld xchg gs fildll adc mov (bad) icebp xor data16 repz lret cwtl popf ficom sub push lods sub stos jle push and mov (bad) cmp cmp or pop call push pushf cmpsl and jg push aaa pop push leave aaa ret fcmovbe and fstps and cmp pop jbe outsl mov or bnd mov push sub add or test loope (bad) jl cmp push into dec add cld fnstcw push je aaa int xchg add xor pop jmp int3 adc popf aam movsb rclb sub mov fcmovnu sub inc in test enter sub add mov cld add fldt clc sbb out mov aaa cld sub test push pop loop xchg (bad) xor or mov cs and dec xchg test ret inc mov xchg lods (bad) mov in std cmp inc mov xlat outsb mov sub fidivr sahf push movsb cs pop (bad) pusha imul inc aas repz and fdiv lret loopne (bad) js xchg mov stos jl cmp mov dec xchg movsl add cmp dec inc push xchg pop push lods insl stc shll js mov cld fs inc jmp and js leave cmp lods rorl xchg ds push adc pusha int3 add scas mov lret sbb add cmpsl hlt iret shll out (bad) jmp loopne pop iret (bad) push push xlat cmpsb cmpsl lahf push inc dec or fisubr clc pop pop mov xor cmp js out mov test clc je sbb fucompp sbbb lock mov add jle adc lods pop or rcll inc add das fwait int inc fidiv fnstcw xchg or jae fstpl add push pop outsb cmp scas das pop mov xor pop stc xlat sahf (bad) mov enter test in test mov sbb dec scas es in push mov cmp lret hlt pusha test rorl data16 js sti call (bad) fadds lret nop adc (bad) aas fwait mov out lods stc movsb mov sahf scas lret rclb stos lcall sub sbb inc into jb lods insb push lds fiadd mov orb jb xchg lods add cltd orl iret cmp ljmp ja insb cmp sub xor mov movsb aad sub xchg call mov jle and (bad) mov call fisttp xchg stos sbb das add pop lods data16 xchg jns pop hlt imul gs arpl add mov ss roll enter adc das add nop movsb sbb movd xchg xchg push cmc xor loope pop mov addr16 push mov fcomip cmp leave ss mov mov xlat sarb pop rolb lods jno inc mov and mov dec and pop ja shrb dec insl adc and and test mov js (bad) cld cmp fldl mov in cs test mov inc push shlb test fisttpl or add sbb sub loopne imul mov dec lds lea les iret outsl mov sbb xchg in cwtl popf adc mov aas xchg fistpl mov dec jle lcall imul imul xchg pop xor fstps shrb sbb pop bound inc push mov add (bad) xchg cmpsb (bad) fwait ret test adc mov lds adc pushl xor icebp aas inc xor cmpl xchg rcll dec pusha jo jbe pop out js xor mov lret sti mov mov add mov hlt iret and mov imulb lahf sbb insb (bad) mov pusha dec ror fdivrl xor mov pop mov int inc push adc sub cli das push sub stos inc (bad) shll sub xchg sbb and xor add rclb outsl cmp sub jae push push mov mov jnp dec and sub orl mov into dec push push jg jl imul or add stc into call cmp iret xor fildll fadds adc xor into sub fcompl lea jg fcmovnbe fdivl fildll push fldt out inc repnz incb scas push pop sub lods aaa jge popf test xchg adc cmp popa (bad) rcl push and iret iret push add inc cltd jl sbb adc and mov mov adc inc sbb lret lock nopl mov (bad) fdiv (bad) dec fmul ret test mov (bad) sbb dec in lret out sbb xor (bad) test rcrb repz mov ljmp addb xchg jnp lea mov ret and sub mov mov lahf sbb and lret mov mov gs mov aas sub sub mov sbb mov jmp xchg adc add inc cltd cmpb cmp dec loope es stos enter insb in mov jmp and jns jecxz in sarb jo sbb adc adc mov push jns or sbb nop leave and and outsb push lock adc fidiv xlat xchg loop mov stos adc sub dec adc das jno or xchg sarl aad insl adc pop pop icebp push adc cmp gs in cld dec lcall (bad) repz xchg push lods push mov cmpb pop dec jb jno or or inc mov add dec imulb or push int3 xchg dec mov sub sub mov sti push bound (bad) fbstp imul scas mov pushf and js mov jne push sbb ja or leave xor fisttpl enter movsl dec dec mov fsubrp pop and imul je push out sbb lret lock andl icebp fmul xlat cmp jle push cltd mov test pop cmpsl mov cs cmp jecxz inc stos (bad) cmp (bad) inc add xchg out ds or fnstcw outsl pop (bad) push popa lods fwait xlat cli mulb inc in sarl dec (bad) stos jno aaa xor fstpl test lods inc out inc sbb xorl pop inc lahf sbb jae daa mov popa jg scas add mov lods and nop or xchg ficom scas je push sub or jecxz orl sub in mov rcrl adc sub pushf xchg pushf ficompl pushf aaa stc (bad) jl xchg sub stc adc mov inc out pop mov stos std push imul and push test loop xchg and mov fwait add imul cmp sbb sarl jl sti scas fmulp sti mov dec push mov mov push pop popl gs loopne std arpl or nop pop dec repnz dec in sub out mov mov das jge jl es add xchg int mov imul xor dec xchg and hlt fcmovnb inc mov jecxz cmp and insb test or mov and data16 sarb aam mov inc cmp sahf add pop add fnop inc int push aaa jp cs mov cwtl (bad) sub and insb decl in cmp push rclb xor test inc adc inc mov jno or jl fcmovb and mov sbb jg mov xbegin insb sub ret loope mov fstl aam sbb lahf xchg outsl clc or insb fiadd arpl lcall jp and xchg icebp cmp (bad) int3 sub mov and mov push jmp inc push inc pop xor mov jnp pop push and jno fadds aam repz adc repnz sub mov (bad) pop scas mov push adc jbe clc adcl sub fisubrl daa and pusha in iret pop xchg fidivr adc push pop jg icebp cmp jp lcall inc sbb mov xor test cmove mov ret icebp (bad) dec mov (bad) sbb jo add into rorl push cmp dec sbb xchg push mov sub cmp rclb ss movsb jne mov cwtl mov imul adc mov call fwait lods mov out addr16 adc sti iret nop fwait push lret mov mov rorb in add int3 dec popa sub cs adc push les pop (bad) (bad) cld lods fldl lds adc fisttp mov std out in pop sub ss or imul out mov jle nop loop das fs pop mov sbbl ror xorl cmpsl push test ljmp jne je aaa xchg inc fwait (bad) arpl sub pop imul fwait cmp hlt xor mov inc inc push xchg aaa fwait sahf movsl clc xor push mov mov dec fcoml and insb mov jmp xchg ret arpl adc or arpl sub jne stc add lret mov js add add cmp icebp enter xchg les out insl push popa fcmovnb sti xor xchg je nopl sbb mov pop sub aad sub mov cmp je imul or mov popf inc insb (bad) loope cmp mov mov inc or dec lods (bad) aaa inc mov cltd arpl (bad) or cltd fs pushf orl scas (bad) jno xchg xchg std loop xlat pusha rol push mov sti lea out jo sbb jbe cmpsb sub lret leave cmp stc dec into mov mov xchg push loopne popf pop dec ds add fsubrl dec pop stos lods xchg cs dec fnstcw sub cli arpl adc out jecxz pop jmp cwtl aam pop push sub insb pop rcll jmp loope arpl movsl jg (bad) jp pushf add adc test xchg dec sbb xchg and add sahf jmp rorb and call jo dec sbbl mov add fnstcw mov fistpll xchg aaa mov cld hlt xchg mov mov dec call inc xchg cld dec inc add jp pop fnstcw inc xchg mov mov cld enter clc jo leave push mov xchg test dec (bad) mov (bad) push inc sahf test add adc pop jecxz fisttp inc xchg jg popf adc sbb mov iret (bad) popf (bad) (bad) inc addl pop push divb mov lret shll mov movsl out pop stos and (bad) fxch push mov fucomi cmpsb dec sbb neg push sbb cmp movl xchg int3 ljmp cld and add clc int3 mov inc adc pop add inc xchg mov imul dec je or inc push gs rcrb mov xchg pmuludq fiadd xchg cmp dec xor jmp cmpsb jae push outsl inc pop cwtl jp cltd test pop mov sub daa sbb rcrl sbb xchg setbe inc jmp lds dec xor lds std sbb pop ss cmp mov jl roll bound jge sub loopne mov xchg (bad) negl xor and addr16 popa xchg roll aas pop mov sbb mov mov ja add mov incl jb imul addr16 hlt or dec cmpsl push je ljmp (bad) cmc scas ficompl mov dec xor cwtl mov xchg fdiv gs fisubrl sbb add inc push lds pop fcoml mov sbb sbb add cmp cmp sti xchg insb repz int jo popf clc or test test scas mov call dec sbb push aaa inc leave jge xor daa leave adc out sub pop mov inc fsin out lods mov mov jne pop mov jl inc orl cld sub test jno jae xlat (bad) bound jne das stc (bad) repz adc push pusha movb dec cmpsb sbb adc popf mov or jbe and mov and cmp cmp dec xor loop pop jae bound repnz xchg sub xchg inc in add mov inc popa (bad) lods aaa into push in dec jno test fimul jae or (bad) cld jae mov rcrb mov into adc mov pop iret or or jle push call inc ret and scas sbb push jno push or or cli mov enter aas out cmpsb maxps push subl xor dec cmp rcl and int3 addr16 mov inc cld aas dec push xchg hlt in add fsubrp insb jne and cmpsb inc push inc pop add inc inc push sub stc lods fiaddl test jnp mov xchg adc ficom fcoml push pushf sbb je xor movl or jg aaa pusha mov sbb enter sub cmc in sbb dec mov ds je cld cmp outsb call flds rclb loop cmpsb jne (bad) (bad) mov (bad) cmp (bad) fiadd shrl loopne and sbb cmpsl cmpsl ss mov (bad) (bad) (bad) in mov mov jne push mov ret arpl and jecxz mov mov test (bad) (bad) and divl (bad) mov int3 adc pop mov jecxz cmpsl pop loop push repz and push mov gs inc xor mov jp cli mov (bad) cwtl inc inc leave repz hlt push fmull inc mov dec test sub jge insl fimul testl ficoml nop xorl rcll pop mov insb sub test mov sub mov adc sar pop fcompl dec cmp icebp pop jge cmpsl leave add or sub pusha pop imulb inc lahf lcall and jle addr16 fcom add imul mov mov (bad) fistpll pop pop mov iret or pop mov xorl xchg fucomip dec push fidivr fidiv lock aaa mov adc ss gs jl in dec jge arpl push adc subl sub jp out ss aas sub pop clc dec dec xchg mov movsb mov das rcll ljmp jo and movsb dec scas xchg adc jnp mov les jge stc adc cmp movsb hlt out outsb fildl ja out dec (bad) jbe in add dec mov mov or adc adc ja xor sub out shrl jge lods aad mov add fcmovnb imul mov cmp in and xor scas out (bad) into pop lods adc ds or mov mov out xor sahf ljmp test mov sub int and es adc mov repnz outsb ja fist inc mov call unpckhps mov dec clc cmpsl lea jo adc dec sub sbb add popa push inc add xor (bad) cmp mov lds mov mov mov cmpsl xchg test jp add mov add and dec stos outsb rclb clc xor test lods adc rorl inc sub std mov xchg mov xor lret push adc cltd outsl dec fldl daa shlb fsts loopne lea inc mov mov repz lret test dec add fs (bad) xor xchg sbb out mov ficompl ret iret cmp fimul aad mov ficoml xchg repnz fstpt repnz jo xchg or push in or cli jo int3 push jb jle cmpsl pop lahf add add jns stos into pushf lahf scas push shrb addr16 add inc repz sub test shrb in inc rcrb or (bad) aaa or add mov sbb dec (bad) add xchg add mov or gs in sbb and mov cmpsl scas dec (bad) mov inc jbe aam or and cltd adc mov or rorl sub add leave inc dec push movb cmp jg xor test sbb xchg dec push dec mov cmp ljmp fs es push arpl call lock mov ret mov jo cmp mov jae mov mov stc pop loop arpl ljmp adc insl lods adc adc imulb test sbb sub push dec jnp add loopne mov jmp xchg lahf adc call imul jae add lds pop jg ficomp mov mov cmp aam pop jb pushf inc xor lods ret xor sbb mov add fstpt lret jb mov mov jmp push and std dec xchg imul pop lcall hlt (bad) scas mov adc inc sub push clc fbld (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz adc lock out aaa fdivrs jecxz aad add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add xor push js in fcmovnbe jbe or jbe fdivs (bad) insl mov (bad) (bad) cwtl xor idivb add dec or and push das inc mov push push outsl movsb mov fisttpl sbb or (bad) sti loop sub cmp sti ljmp dec mov jb mov fcos pop mov xor jno les arpl in cmp push or (bad) mov cmp add dec jmp imull and iret gs stos (bad) cmp jp or adc out sahf push jae outsb mov add dec xchg iret lods aad in out or repnz stc push std cmp pop push add lods test aaa push stos sbb test (bad) push push cmpsb (bad) jg mov (bad) lea aaa (bad) mov dec out jbe js hlt pop dec pusha test mov cmpsl mov ret add xchg inc andl push push adc notl push fwait outsb cli cmp imulb nop mul add mov push xlat arpl loop inc jo in rclb stos or cmp cld mov jb or ds pop pop lock imul aas push mov mov int cld pushf or insl adc stos mov push xchg xchg jns jge or add (bad) adc push lods and xor test jle andl rcrb (bad) in (bad) cld dec jle subl das das iret cmc (bad) mov ffree test imul mov repz pop mov (bad) std std lds push jg jae sahf push lods (bad) push iret out or repz aam jl lretw lds dec push cmpsl adc out jno pop sti daa lock rcrb cld mov mov lret xor cmpsb push sbb addl mov scas icebp sub inc movsl data16 iret pushf (bad) popa out pushf jmp cs pushf mov sbb jle mov add push inc pop and imul sbb repz aaa fiaddl mov inc pop roll adc and fwait add xchg xor dec xor out gs mov stos scas mov js xchg test xchg dec negl sbb pop add xchg adc ljmp mov out idivl fsubs jb pop out test popf pushf call (bad) stc inc xor out test movsb push push inc out xor xor xchg fisttp popf ficoml out sub jecxz add inc mov int add int fsts int inc ljmp mov movsl into mov aaa loope and pusha mov mov jne test gs mov jne jns sbb inc stos mov int3 mov sbb sub cmp outsb or stc mov test in inc pop dec pop adc xchg dec fimull fldl xchg call cld add pop (bad) icebp mull and (bad) in dec push nop cmpsb ds jnp iret xor pop arpl je out mov fs fmull xor fsubrl mov cmp push jmp stos or fcomps mov sub dec divb cmp (bad) fimul push push out dec xlat out xor cmc ret bound aas cmp aas fistp out ja push lcall loope pop mov testl push rcrl lahf push les (bad) sti xchg stc fist pop xor fstp jmp in outsl sbb hlt xchg insb xchg and pop sbb or fisubl pop fisubl jns fwait mov (bad) nop jge outsb mov aas adcl sub cmpsl std add clc push fsubs js je xchg adc cmp jge fidivl jle (bad) adc ret shr or push cwtl mov jp ret lods mov loope or mov add cld fildll jo int sbb adc fildl aam xchg jle (bad) xor cmp daa add fldcw test inc leave mov pop addl int3 test (bad) jl popa aaa je inc xor movsl sub mov and sbb add pop jecxz orb and test push test (bad) es sbb sbb aad in fimul inc nop dec inc xor xor add inc xchg mov iret (bad) mov adc add and popf pop inc sbb in inc ljmp dec mov fmull sub sub or xor leave or cmp arpl gs and mov sbb adc loop pop (bad) enter (bad) mov lods (bad) cmc in fstpt and mov (bad) out ret adc out inc rcrl mov popl ljmp gs in mov pop jnp loope xchg nop rcll jns test add jl sbb jb and in fildl scas nop in sbb in (bad) push pop mov xchg jle lods int sub jl hlt jbe cmp adc js xor jl flds outsl test cltd xor jle aaa mov dec dec lahf fdivrs pop pop push scas jns insl adc cld loop jnp dec xchg jecxz add pop js adc mov sbbb pop pop movsb out jns xor push cmp push xorb sub jmp in rclb repnz sub xchg inc out leave and mov je xchg jecxz inc mov test lods (bad) int sahf rorl push lret xor jg add call scas movsl mov mov repz jb shll mov leave lock mov fisttp push fistp insb repz scas lret xor lcall add mov aas push jb orl push cmp shll mov shlb push iret sbbl pop sarl dec push xchg or cmc lock sub add sarb or mov in ljmp xor inc lea int dec addr16 dec or enter incb popf loop sbb push sbb insl sbb or push inc gs mov test pop jns jne xchg sahf inc movsb in fdivr test movsb out xor ret xor int bound xlat lea pop dec dec and inc negl (bad) dec (bad) lret imul enter jnp in sbb mov insl cld mov gs rdtsc adc adc mov lock mov mov push inc fs push popf aad mov js ret out add addr16 cmp inc mov ret (bad) mov out lcall cmp xor dec outsb ja dec sti mov jmp pop fldt imul mov sbb (bad) jb pop js or jo sbb adc test (bad) pop xchg adc sarl xor push xlat mov dec pop mov rolb inc lcall push lea adc pop (bad) jo dec ljmp dec cmp fldenv scas sti mov ffree addb xchg mov (bad) je shrb scas or insb mov jmp sub cmc sub mov in sbb dec out pop fimul and jecxz sub fwait jge js inc inc jge hlt jb mov jmp leave aaa lret std je or (bad) popa xor mov sub sbb (bad) adc cmc test xchg ljmp mov fcoml adc repz dec mov (bad) mov jae ret mov mov push mov outsb pop jmp out cmpl dec pop and ficompl int3 inc inc stc js cmpsb out rcl or push popa sbb mov (bad) sub in movsl adc sbb pop (bad) data16 into sti aad jle mov mov popa arpl mov pop hlt divl or fdivs add xor jb xor pop xchg push mov cmpsl js (bad) and and cmc imul data16 hlt push into cld push cmpsl insl andb fldl inc push test lcall cmp frstor adc fisubr adc lret dec (bad) les insb hlt out jle icebp inc inc iret addb push ja faddl dec lahf cmp inc rcrl xchg or mov xchg js outsb mov test adc frstor push movlps out push daa push fucomp dec sub arpl mov mov cmp test push xchg fdivrl or clc push lods adc jno jg dec xchg lahf rcrb sub adc stc mov mov repnz test mov jnp imul in mov aaa push idivl push (bad) incb xor fsubrs and sub push xor out enter cmc ljmp add bound inc lret lods add aaa stos test clc (bad) xor mov movsb out insb cwtl std je out out xchg lds (bad) lock sbb data16 xchg xchg out sbbl push add or roll fimull cld jo jecxz int cwtl push adc and bound push cmpsl int3 out and inc push jnp popf lcall or xchg out (bad) je fstl loop fldt dec gs mov jmp xor sbb test inc push std inc ss arpl sub jl xor push subl xor cmpl dec addr16 fist add inc xchg pusha out hlt xor out jne out lahf dec xchg cli les jnp int jmp hlt push repz pop sub pop adc (bad) idiv lcall fisttpll pusha ret sub inc shrl inc sub (bad) mov jmp rorl mov inc mov xor cld cs sbb adc test (bad) mov mov imul clc enter repnz fist adc out mov jecxz test push adc into or ret inc mov jp or dec jb mov aaa fldenv test insb or pop push sar fwait std bound cmpl cld jno repz fdivrs inc sbb pop adc enter cmp cmp orb jle daa lods stos in mov scas daa out xor hlt add pop in aad add lret pop stos sbb loopne jno jl adc jl dec les aam cs cltd (bad) fisubr mov mov jecxz sbb movsl sbb sbb mov adc js add movsl call and (bad) and jmp addb jecxz mov and out shll pop jo mov push orb adc xor scas and xor dec pop push leave roll mov inc cmpsb lret inc call ds mov push arpl mov pop inc adc and sbb push and xchg rcrb sbb cwtl sub push jl in hlt xchg mov xor push xchg (bad) sarb arpl xchg das and cmp pusha dec gs out fwait pop mov jl jp and add sahf xchg pusha sub movsb gs jl pop lods sahf popf fbld jmp pop xchg insb cmp frstor pop dec stc movsl and xor movsl or nop sbb inc vunpckhps pop cs insl add gs pusha ds mov inc enter cmp lea add stc jns push out vcvttpd2dqx ds dec lods pop cmp pop xor pop bound add ret js cltd mov xchg mov add inc mov mov mov (bad) imul addr16 jae and mov add je cmpsl (bad) out dec mov fstps jo mov mov mov add jno loop ds in fdivrs outsb in cmc out inc xchg fwait cwtl push xchg push aaa lods ja lock ret cmp test das sub xchg es sbb cld aam mov sub push and imul mov push pop adcb jo xor or cmp sahf cmc xlat or dec inc sub out fwait imul leave fcompl in or jmp out fwait xor jae aam outsl adc mov pop orl xor xor inc shr pop cmpsl lods lahf sub or sbb scas sub (bad) adc xchg arpl xchg sbb cmp movb mov jl mov (bad) push jnp jmp call push ds and mov test icebp loop xchg cmp hlt arpl dec lcall xor decl inc xchg xchg or out je mov in cmp mov stos or add loop fsubr sbb in and adc adc fsubr mov jp add ret shrd das outsb sbb xor andl mov scas jmp gs dec ret pushf xor xchg pop xchg clc dec dec push cltd push dec test push lcall push repnz lret pushf (bad) xchg mov dec jno imul xchg mov lods dec cmp popf faddl sub or adc lods pushf fiaddl out movb xor imul andl popl cmp loope jae sub jns (bad) repnz xchg and mov test push adc sbb jmp adcl (bad) push ds pop mov insb mov sub xor sbb cmp lock test or test aas loop notb inc repz movsb arpl cmpl test inc les stos xor xchg aas pop and cld lcall sbb add pushl and gs or xchg scas mov movsb cs sahf jge fildl and pop outsl scas add pop dec cld lahf loop and leave ljmp int das inc mov mov aad adc mul nop incl and cwtl sbb hlt pop mov jecxz inc aad repz daa lret mov sbb adc jmp mov xchg cmpsb xchg repz dec mov dec pop in popa pop in insl sti ficom inc call daa loop xor inc (bad) mov in insb sbb (bad) sti sbb std out nop ds fidivr add (bad) dec jl mov push add push jbe jle push xor cmp sbb test in inc mov cmpsl push xlat mov or call hlt ret sub cs in xor inc popf (bad) icebp rclb mov mov sub aad sbb dec (bad) fild or aas cltd push mov out push lret jmpw xor roll mov loop adc inc out adc or aam pop (bad) lret popa dec loop into nop (bad) ds jmp adcb inc mov test xchg in outsl cmp sub add std lahf jb lahf xchg out es dec dec inc xchg outsb push pop outsl frstor cli jle or mov cwtl icebp movsl repz inc in sub outsb pop js inc mov mov imul mov mov outsl add mov xor cmc dec cmp insb push out aas xchg ret cmpsb and jns dec add inc pop sbb out gs fild stc insb push push jg push lea (bad) mov scas jmp imul cwtl pop pop mov enter dec xchg shll jecxz shrl cmp pop adc dec fstl leave sbb ja mov out jae sbb cmp mov sbb mov or rorl cmp scas xor push push push fidivr lock out and xchg push mov xlat push dec ret pop pop fsubrl sti nop jle cli mov loop daa lcall fisub dec xor pop out pop pop in xchg pop stos pushf (bad) fisubrl jnp push call stc mov mov mov jo in pop xchg sub xchg popf stc stc cmpl divb cltd bswap push inc push (bad) dec int3 adcl jmp mov (bad) call or jb add outsb lods jmp fiaddl ds (bad) and and sbb mov rcr imul push notl pop sbb gs inc jnp mov pop int3 cli mov push pop mov (bad) mov pop lret scas lds pop push fdivr sub cmp aad icebp into mov test xchg mov or aam out mov mov mov std cmp add sub in sti jns shll mov test xchg int std cltd xchg dec adc rcl mov pop inc cmp push mov add in push xchg mov into or pop mov push (bad) dec jle adc in daa (bad) sub sub rep jp inc cmp and inc out xchg les pop ja fdivs pop lret jno sbb repz scas push xchg pop sub add loope pop adc adc jne lods lods cmpsb in push push jmp repnz xor inc js (bad) fnstsw adc mov dec adc or outsb push andl mov cmpsb dec pop mov das sbb (bad) jmp stos lret cmp lahf out out pop movsl movsl push inc or pop faddp or and mov mov xor rclb sbb add insl shrb sbb mov mov jns fs in sbb cmp mov insb mov pop rorl stos jmp mov into cmp movsb cmc cmp adc dec xor jl outsb sbb ret ror jbe xor mov push arpl xor mov arpl stos push mov jg cwtl xchg mov fbld es fwait in iret mov push mov les jmp xchg in mov nop jns out (bad) pop in arpl (bad) pop mov or das push test jns pushf aad push ffree jno push inc cmp push dec xchg jb mov mov add ds or outsb (bad) ljmp pop push (bad) mov aaa and stc call test inc xchg mov push popf dec fwait add aam fldcw test or ror out (bad) and out inc leave jb icebp xor xor and das or xor mov ljmp adc mov inc (bad) stos cmp lret in pusha rcll out stos sbb outsl mov xchg (bad) lds lock mov out pop and js nop inc cmpsl loope adc fs adc fstpt dec and dec aas in pop sbb push push inc fs and cmpsb cli loop xor dec pop lret sbb cltd sub xchg cmpsl xchg pop out jb outsb ret hlt data16 adc push add lret lret jae inc ljmp mov divb push mov imul ja insb ljmp sahf (bad) iret or or fwait cmp push scas jmp fnsave xchg push (bad) sbb sbb and cmp cwtl mov int3 inc jecxz shrl sub in inc out xchg enter aas mov push (bad) repnz dec aas clc sub ljmp (bad) gs (bad) sbb cltd cmpsl fcomip add sbb ret aaa inc push cmp pop std sahf jne (bad) pusha jb sbb out jmp cltd xor aad adc and (bad) jmp mov test pusha push iret push stc (bad) aam dec mov gs scas push enter jb iret sahf jmp mov xchg js inc jns ja sub xchg xchg cwtl mov icebp cli push test movsl inc dec xorb jne adc push fstl ret cwtl pop das arpl xchg mov aas push aad lods mov jo inc popa cmp add sub dec mov lods popa sbb (bad) or data16 add dec jecxz add stc test cld mov and xor add ret sbb ss rclb js mov aad adc xchg ja je inc icebp scas xor (bad) loope ja mov loopne cwtl inc (bad) adc test push leave push je mov movsl mov icebp lahf roll push xchg mov sbb inc pop (bad) lret loope adc push dec aam or fldcw push divb pusha loop lret (bad) enter sbb and xchg mov es cmp mov or test push addl movsb adcl pop gs cmp ret out data16 repnz adc and pop test sahf in rcl xor popa mov bound inc leave out sbb js cmp sar fisttpll dec imul ret cmpb repz pop pop and mov stos and push jb addr16 inc push jbe adc lea mov mov jle gs push (bad) xor pop (bad) gs insb sti aam jle sub ret lods mov cmp mov or dec in dec es outsb and pop jne mov std cld inc or push lahf cmp mov push imul in notb icebp mov push xchg (bad) sbb cmp add orl xchg add mov mov cwtl lds dec pop (bad) jg push push lahf in fwait je sbb add mov pop test data16 js or pop inc xrstors jno push add out fnstsw pop jns out adc mov test push inc ficomp addb sbb nop mov mov xchg rorb or iret push insb movsl mov push pop lret popa test add fidiv call and cpuid xor aas mov adc xor (bad) mov push xor sahf insl mov mov xor loopne pop lock faddl mov mov (bad) or dec fildll lret imul test outsl jno xor xor inc mov fs lret aam push mov xchg gs jg out adc lcall mov pushaw pop cmp sarl add xchg xchg mov sbb iret rorl imul repz rorb (bad) loopne mov (bad) mov cmp xlat push into jecxz push xor rcrb mov imul addl mov sub jns lods mov mov bound repnz (bad) mov in ficoml cld insl (bad) rorb call dec cld scas and mov iret cmpsl sbb push jns pop sti loope jae sub ret mov loope (bad) and daa mov clc test push fcmovnbe inc mov mov sub not (bad) cmp sahf mov (bad) mov out stc std cmp gs daa hlt cld imul into cmp adc xchg movsl inc orb fmul test outsb out fsubrl arpl xchg js int3 arpl lea inc int xchg test adc (bad) (bad) fdivrp (bad) clc pop in inc iret (bad) adc jmp in mov ljmp dec lret lret inc xor mov pop xchg ljmp bound add mov imul neg mov jbe mov or xor xor addr16 dec outsl outsl imull rcr loop mul xor repz cld ret sbb pop or insb roll push gs test or lcall lods adc insb mov fstpl cmc ret (bad) mov or push xor aad fsubl into ss ja (bad) in mov mov jg aas roll loopne out mov xor shr enter xor mov lcall sub mov jae push (bad) je cmp adc pop sarl cmp aad mov mov add (bad) aad js movsl outsl js dec mov mov cs jae pop out xchg add mov jge cmpsb jmp pop jecxz pop test out jecxz sbb xor (bad) xor xchg leave xchg sub stos pop (bad) inc cltd pop (bad) mov addr16 mov imul jmp aad cmp call mov sbb cmp clc mov (bad) cmp outsl dec xlat jl xchg fucomp outsl movb mov les lahf hlt mov dec push jno inc cs addr16 sbb js scas fisttpl and stos leave adc sbbl outsl test mov scas mov xor add cmp adc stos gs sti loope rcrb or pop leave loop inc push mov popa fbstp loopne pop jo mov mov pusha and cmp enter test cmp popf adc inc jp adc jbe push add and in cmp ja dec push mov xor xchg mov push lea mov jmp dec hlt (bad) dec inc adc enter push fwait add int lods test jge jp cmpsl jmp aas pop jp jle inc xchg jo ljmp adc jb sub push aaa rol xchg mov mov mov pop sarl cld cld dec sbb xor ret pop enter mov and xchg lds pop sbb mov or ljmp push (bad) pop mov lahf mov pop push cmp pushf daa pop push sbb xlat stc push movsl lcall mov dec cmp test push mov outsb sub cld into js out xchg into sbb out xchg xchg clc jo fistp (bad) (bad) push in push inc repz std push daa add bound push enter fildll insl push mov call test insl ja mov push jecxz icebp mov push mov push mov mov mov je mov mov inc dec dec int3 hlt mov subb sbb cmp cs inc add fisttp mov int3 mov lods adc popf lea add rclb xor or inc inc std adc scas mov lahf imul dec call sub xchg call gs pusha (bad) cmc xchg add sub lods mov and rcrl mov dec jle adcl stc cmpsb and imul jmp xor jne mov mov cwtl lods das mov adc push repz mov std (bad) roll push loop jg jg pop sub imul loop push xor mov mov mov mov jle ret rcrb cmp pop jge sbb sub push dec xchg stc cli jns mov (bad) xor sub cmp xor sbb negl mov addr16 push out mov ljmp push (bad) sbb jmp loop sbb ss cmp stos cltd rcrl fcomip lods and das cmp loopne arpl cwtl cmp cs and icebp sbb sub (bad) dec cmp mov gs mov pop mov cltd fildl shrb (bad) or xor test rcll int jns or maskmovq negl sub lea mov xor dec pop lahf (bad) in push mov sub mov lea and leave cmp mov pop enter xlat inc xchg dec repnz mov stc inc push lods out pushf daa sbb jo mov jno mov mov mov fcomip stc test ret cld xor shrl in sbb (bad) jne lret nop jne mov dec mov adc (bad) sbb cmp dec push mov lea pop repnz add test es mov mov popf leave ljmp out xor data16 enter xchg adc mov es lret pusha out xchg in stc or inc (bad) inc out insl hlt imul data16 (bad) fdivrs outsl out (bad) jne rep (bad) xor xchg add mov push add mov pop hlt pop jne sub out add jmpw popf nop (bad) mov daa jne jle pusha mov les out pop stos ficom sub call xchg decb cli mov cmp sbb push mov icebp cmp mov xchg out or and cmpsl imul fnstcw xchg lods adc lds mov cld cli push dec mov sbb lock lret ljmp sbb push enter xchg mov mov xor mov mov icebp xchg push jnp dec dec lods imul mov outsl lret xor dec (bad) sahf out arpl cmp in add pusha mov popf jl push inc adc mov pop arpl dec jnp pop or push adc adc xor jne (bad) xor push (bad) xor xchg push fsubp inc out and adc dec imulb test xchg repnz test xchg or movsl sub add sbb cltd mov lock dec push inc dec xor lret push aad dec pop insl loop push inc cli out hlt or aad cltd sbb push jecxz mov (bad) in xchg mov pop cmpsl push mov adc inc dec cmpsl mov lea ret outsl mov sub int3 xchg outsb add jae mov push (bad) in sub mov ljmp sbb dec lcall stos mov sbb call xor lret sbb jmp or jle loope sbb mov pop enter das xchg adc inc in sbb pushf ret scas jnp pop clc jg push sub pop xchg push ja lock add lock cmpsl jno (bad) add data16 add push (bad) fistpll ficomp (bad) into repz and add push xchg out jnp pop adc push mov fs (bad) mov movsl lahf cmc cmp call adcl mov bound jl and push jns sbb push jmp (bad) cmp jmp pop xchg dec les dec adc loope nop aad mov es mov sub pusha stc pop rol cld test inc sub cmc mov mov pop movsb hlt (bad) imul cmp fwait and call outsb jmp jae fwait mov pop xchg xchg movsl clc fidivr mov dec mov clc mov stos addl push mov (bad) ja add xor data16 push jl fwait add bound pop jns bound stc ss pop push xlat or (bad) sbb sarl jnp rcr pop mov sbb lahf xchg cmp sarb push lds push add cmp dec push lea jle jbe cmp lds fildll aaa or (bad) popf adc adc and loop adc jle cmp (bad) mov cmp mov cs arpl lahf fwait mov leave cli into neg rclb dec sbb repnz mov push or fsubr lret xchg inc sub andb push adc jmp sbb xchg aam xchg xchg fstpt sub mov jg int3 sbb xchg loopne sub fs xor cmpsb dec mov test outsb cmp pushf stos sarb ficompl les fisttp test test out in pop jle fsubp mov cs mov mov icebp popf push movsl aaa inc ret jmp cli icebp xor pushf fldt popf xor adc xchg dec push xor hlt outsl mov mov das stos lret mov cmpsl (bad) mov mov pop push xor mov lea ret rorb mov negl pop sbb add add cmp mov and inc sbb xchg sbb dec jl,pn adc movsl sub push loope mov (bad) mov cwtl imul in scas dec gs mov mov push gs sub xor push sahf push pop inc jbe push jecxz add mov inc xlat sub data16 flds or sub mov imul pop mov mov inc jle in fdivr test inc repnz dec in xchg enter mov inc cmpsb jl xchg push ret pop ss add test (bad) pop push jbe movsb adc inc scas into xchg arpl mov inc lods cli push add sbb add mov ljmp push bound lea push push push mov sbbl insl pop jle mov jns sub sbb add xchg adc leave adc lahf or sub in mov adc aas outsl scas bound loope in sbb js iret jb,pt popa in pushf dec gs mov and ret xchg sub mov addr16 ret or and in inc pop sarl inc and dec and cmpl repnz jecxz out mov push call dec in xchg decb pusha lock ret push or scas jp xchg mov pushf arpl dec mov and out mov fidivr xor adc stos sbb pop dec jmp into push xor repz ljmp ja adc lret inc mov aaa pusha sub adc lods out pop (bad) iret jle xchg push lcall xor mov imul movsl add mov outsl nop lock scas xchg or loope mov dec loopne and xor add sub loopne dec out cwtl mov add (bad) fistp aas push (bad) mov jb,pt adc scas sbb mov add mov (bad) or ficom mov mov repz leave mov insl inc xchg jns ljmp cltd aas mov rcll cmp add pop cmc pop es pmaxsw inc pop push out test inc imul mov xlat mov call js inc add (bad) mov jl pop sahf rcl pop scas clc ja sahf in sub push jecxz or popf repnz adc xor dec adc (bad) cmc scas (bad) pcmpeqd outsl dec jmp ss enter sbbl or shll repz xlat mov pop (bad) jo mov inc in lret push jecxz les or lock mov or sbb aad out and lock and xlat inc and leave dec xchg cltd mov (bad) stos and jnp ds adc fwait in add imulb cmp push and sub mov test fstpt cmp dec loopne pushf and mov fist mov push pop fcompl fidiv inc mov lock mov sbb in imul popf les fstpl inc rcll adc cmc push jmp shr (bad) flds dec push sub cli adc std pop push out imul xor lret sub fmuls or mov int push push xchg stos stos mov xchg and dec (bad) cli (bad) out mov jae mov (bad) push out mov mov insb adc enter dec xchg test mov cwtl push add push adc push inc enter iret dec or adc pushf mov xchg dec das mov pop sbb push or repnz ret call pop inc fsubrl popa xor daa push and pushf mov in repnz cli mov ffree adc push movsl je fcoms (bad) in push aad sub jmp jnp pushf ljmp (bad) jl and mov movsb ds dec ret outsl (bad) dec addr16 sbb cmp inc decl jno or and cmp daa pop popf lret icebp test popf add and inc loop mov pop xor incl add push lahf xchg imul ds xchg xor hlt les insb pop (bad) out or xchg mov (bad) std das inc push mov enterw fwait mov jle loope cld (bad) pop loop stc or ret (bad) jmp jb lods js pop outsb cltd add movsb ss jl lcall push pop bound das (bad) (bad) jb sti mov in ds cmp jo dec sub not outsb in add sbb push rol mov (bad) repnz dec xchg (bad) mov imul cld mov ljmp addl (bad) aad pop sbb sub pop cmpsb mov out and stc jecxz lods fild mov mov dec add mov sbb and xor call fistpll or es or lret xor (bad) pushf js rcrl mov scas int dec jno arpl mov mov inc ja push mov sti cmp es (bad) fcompl int xchg lods call mov cmp cmp cmp andl sub inc jne outsl jbe hlt pop loop xchg mov push xchg (bad) imul test inc lods push arpl loop pusha xchg enter jb popf mov sti ss ret and mov pushf stos shr lea add nop js mov in aas add jmp mov push jo sbb gs std in stos adc sub bound subb (bad) lret sub xchg in out and test mov pop pop mov data16 push test push sub sub dec adc aam sub jne (bad) (bad) push fabs cmp cmpsl mov jae adc dec rorb mov outsb outsb sahf mov cwtl arpl clc adc push aam in push and movlps xor jge popf shrl aad pop cwtl mov dec rorl outsl xchg daa call jecxz xor lcall loope add js cwtl js fldl das mov mov dec inc and dec xchg std clc xchg mov scas rcll aam jae xchg test iret sub add (bad) sbb mov dec cmpsb pop test pop ss push rorl pop jbe mov mov div rcll xchg cltd or movl pop stos mov mov lods mov mov jne push stos dec hlt cmc jb repz pushf inc std test dec clc push imul xor add mov into nop xor movsl in pop or or aam xlat adc dec pop mov dec sub lock pushf cmc pushf lret mov lods aas jno mov sbb pop and sbb int3 in sarb addr16 je pop jl xchg loop cmp repz mov js in xor and mov fs mov pop insb enter in cmp xchg adc bound int3 lock clc (bad) dec lret loope fmull sub fnstenv jb xchg int mov idivb cmp loope arpl repz imul jne dec inc xor js add ds fs fsubs scas out lods hlt add lock xlat mov dec fwait mov push xor out lret mov mov mov mov sub add mov shl mov out mov xchg cmp cltd stc lods cmp (bad) fbld xchg sub dec jns add xchg je daa xor push sub cmp bound nop inc jecxz jae pop lock and dec push sahf addr16 in push (bad) dec divb loopne dec cmpl out aas out loop pop aaa (bad) push lds xlat push les stos add xchg push dec test call and xchg addr16 not ret push push cmp sub mov jne fbstp cs in dec adc clc mov in stos push push fmulp (bad) xchg aaa mov stc jp hlt or and cmc pushf mov mov iret leave into jae push (bad) dec adc cmpb mov dec cld mov cwtl pushf test mov test insl dec push rclb dec shrl inc cwtl xchg cmp xor sar jne pop fnstenv fistpl inc (bad) xor shll (bad) xor ds enter pop sbb dec icebp lcall rclb cmp push jecxz pop add out pusha andb test adc rclb (bad) and lahf or aas pop cld sub adc sub xchg loop sub imulb add dec xor adc add mov mov insl out push pushf stos xchg jo jb sbb and into pusha cmp jnp movl add inc fnstenv das enter xor fimul addr16 mov out pushf mov dec test loopne jg jecxz or cmpl inc popf in jmp xor dec cmp mov jo sub mov sbb jmp xchg int jge loopne mov jge idivl jno stos push in rorl jmp pushl sub xor adc mov imul (bad) mov (bad) cld dec in out or lods push incl popf add xchg xchg dec jmp push nop jne dec ljmpw repnz xchg push repz dec sub jge in and stos (bad) xchg cwtl (bad) shl mov xchg jmp outsb insl lret mov sbb lds cmp dec (bad) jg or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or incl add pop lods xor push callw add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec leave dec inc inc push js in (bad) bound adc insl mov insl (bad) fisttpl fdivrp mov cli mov mov add sbb (bad) fldt sub pop mov lds call jno inc pop mov fsubr dec enter pop pop jne ret int3 popf jle fcompl xchg xchg rcrl dec sbb sbb sub and pop and je loope xchg xchg push in repz push test fwait ret ss mov cmpsl lea push mov jnp outsl sub movsb ficom push iret ss iret jbe pop pop pop aaa in out pop or cmc sahf call je loop sbb (bad) mov imul icebp lcall (bad) xor movsb sub btr ljmp scas mov pop jnp out push outsl test sub sub mov add rcrb gs push push scas mov ljmp adc test pop ljmp mov cmpsl jecxz mov sub and sbb sbb pop fisubrl sub fldl2t mov mov mov add dec jbe push xor mov mov sub test enter mov pop fildl cs mov out cmp xor fwait mov int inc mov loopne mov inc cmc sbb sub sub adc repnz les jmp sbb jmp xor xchg add pop mov cli mov leave cld push dec int (bad) pop pop sbb sbb mov idivb xlat sbb shrb enter lahf mov sbb adc (bad) pop push std divl in andl (bad) bound add pop mov push cli shlb cmp push adc out inc (bad) jno push sbb dec push mov mov push out and pop and push bound ret clc xchg repz das shl sbb ljmp ss pop fadds mov jb fidivr dec mov lret sub movsl xor xlat test jmp inc mov pop sarb imul cmpsl xchg (bad) cli ss ja xor mov pop imul mov icebp pop xchg fisubl push cmp mov int3 pop rcrl push and adc imul imul sbb (bad) aam das sub or std insb lahf shrl mov aas or fnstcw adc or fcompl (bad) xchg adc push add add jp scas mov or sti out stc rclb out add cmp lock ds dec sub pop pop jl ljmp jecxz insl js clc mov cwtl sub xchg dec mov in mov xchg popf inc repz repnz and mov ret loope aam (bad) lret dec cmp lock cmp inc mov push lret popa mov inc (bad) jle arpl mov cli add push fisub inc mov sbb imul mov adc adc pusha movsb (bad) (bad) mov cmpl out adc shlb mov mov sub cwtl xchg je (bad) push movsb ficoml add scas aad dec movsl dec pop xor mov xchg xchg (bad) push mov in push sbb ficom out ret push arpl inc (bad) fdiv cli push imul pop jl and add out fbld push sub (bad) mov mov repnz xchg fwait cs mov nop into mov into push inc xor push (bad) movsb addr16 loop push cmpsb jne fwait xchg imul and (bad) mov jp push subl mov mov xor mov mov into ljmp push mov aas (bad) out sub sbb add addr16 popf popf test negb stos mov mov hlt jecxz inc inc pop test push sbb or dec lods push inc rcrb pushf lds mov xchg (bad) outsl fwait dec jae pusha mov sub push cmpsb mov sub sub and pop out int push aad mov movsb pop inc dec (bad) (bad) push add pop in cmp (bad) lret ficomp adc cmp es aaa test stc mov test popa jle or clc (bad) or jb loop rcll or xchg daa bound ret popf subb stc and adc loopne push leave stos xor add dec (bad) cmpsl (bad) loop les ret ret call (bad) mov mov jns outsl push test mov mov mov inc scas fwait sub jnp jg das pop xor push scas mov jns fsubrp test mov or (bad) iret les pop hlt or and push xlat repnz mov lods adc cld push inc cmp fmull jmp imul fxch movsl js pop push lods lods into popf data16 xchg dec add push fdivs push mov aam mov (bad) cmp (bad) ss enter test sub sub xchg (bad) cmp mov mov (bad) leave out mov inc mov fdivrs and push daa fisubl or sub sahf jb cwtl push jecxz arpl xor mov xchg leave cmp xor in into stos add inc js aad lods pop pop sbb std bound pop popf adcl aaa push test push mov movsl aam or push repz in outsl scas dec xor inc xlat mov arpl icebp pop xchg ficom cs mov lods xchg xchg rclb clc adc ficomp dec dec stos push mov lods (bad) lea aas mov sahf pop aaa and pop mov out sub cwtl fwait cmp push dec dec add pop fcoms sub movsb adc add test das pop mov sbb adc pop sahf loope daa jbe iret jle dec sbb mov stos in idivl jg sbb mov jmp call lcall add add imul insl push sbb das xor std inc aad (bad) fistl mov icebp xchg sub push xor test sub sahf mov js sbb pop sub pop pop or gs xlat sub pushf mov cwtl xor push xchg sub out (bad) icebp sbb scas mov pop xchg inc movsl jmp xchg xor and or adc test or push sub scas add inc mov cs fnstsw lahf cli aas ljmp (bad) ja push call dec fsubl push and popf jmp mov adc shrl pusha sbbl jmp pop mov xchg sarb cli outsb sub cmc sub (bad) (bad) testl pusha daa loop sub pop or jmp outsb adc add test xchg cmpsl xor test push stos and fwait jae ret pop jp sbb out cli and cmp adc (bad) ss js push cmp jl stc jp lods mov mov mov fstps adc in adc aaa movl pop mov cld jbe daa lock cld cmp cld (bad) lret (bad) inc cmpsl sub dec ljmp fs fisubl mov jmp fmuls stos jp fdivrs inc sub add stos aad inc mov scas fldcw repz mov mov data16 aaa fsubrl faddl mov or pushf jecxz jb sub or fldcw push pop rorl mov jns cmp test hlt (bad) dec loop movb icebp sub inc and mov sub fs dec jo mov xchg in and jbe stos outsb add sbb sbb lock shrb loopne push cli sub push shlb inc adc (bad) fs sub inc xor inc in dec mov mov pop jl unpckhps dec jae mov daa mov adc add lcall push jb mov nop pop rclb cmp lock jae aaa (bad) bound daa ljmp ljmp cmp xor fldenv mov sbb push and test aam sbb or mov jne pop dec cmp fbld jne (bad) mov push lods pop pop pushf nop mov stos ficoml scas out movsl enter mov jp bound or adc mov mov fist pop fmul rcrl xchg iret sub daa enter or jl mov push loop aad jae jno lcall pop into mov and mov mov insl (bad) cli flds push jno lret scas ja int3 ffree fmuls fist xor and fs loopne jg adc sbb sub jns push idivl jg sti lret sub jae xlat mov fstps sbb dec in sub mov jae adc in cmp jo push daa dec (bad) jmp orb andb inc or or adc jns push bound and fnop xor clc xchg daa push or pop out jle test cmp test aas (bad) cli dec scas popa sbb push jp ja scas adc mov (bad) mov sbb (bad) lock dec push js xor ret inc pop fmull push adc inc adc (bad) ds push cld iret cld adc xor fiadd sub xor push movsb inc arpl mov jg push cld test rcrb mov (bad) clc aad shll fisubr dec and les add push pusha lods mov enter gs fbld jbe push test popa xchg adc pop xchg in cmp aaa push iret cmp jo push cwtl imul idivb inc mov repnz adc lret pop jmp xor out sbb icebp add pop add push sbb mov mov pop incb adc jmp adc adc pushf jge lods sub es fcompl mov iret mov mov mov fsubs push xor sahf rclb es movsl mov mov pop lock adc sahf cmp and jo repz cwtl test testl mov popf out sub lds or sub sti insb popf mov mov outsb push mov pop ds xlat ja lcall mov inc mov inc xchg jnp outsl dec xor sub cld cmp xor cltd cmpsl popa push sub or stc mov xchg mov dec mov ret mov pop dec cmc dec mov pop sbb fwait or dec mov xchg pop mov or loope and or cs ljmp pop stos add bound inc push jo repz loope add push ljmp leave (bad) jbe lods out leave dec enter lods mov arpl lret mov pop inc aad jb and (bad) movsb adc mov xchg fstpl jbe dec push outsl dec cmpl ret fnstcw inc ds mov jg mov out xchg lds pop or loope pop roll lea pop pop leave je push or fcomps jmp cmc or adc in jae push (bad) lahf (bad) add into xchg xlat and subb pop cmp push daa lods mov cli movsl or insb hlt dec pop push repnz pop dec lret inc mov stos xlat xor (bad) xor aad popf xlat stos jle test hlt lods xor mov mov sub and add dec enter dec (bad) sub rcll daa loop call mov ss xchg and mov lahf mov dec fcom adc jno jle xlat je or outsl out lods cmp cmp clc adc lret inc int cmpsb (bad) (bad) aam test sub add aaa aaa out mov add or sahf pop inc clc dec cmpsb gs test fbstp ss or scas fdivrs loop,pt fstp sub fnstcw cld ljmp in fstps decl stos push mov dec lods cmp rcl and add inc test dec push inc xchg add das sbb push scas sbb pop in shrb push cmpsb or (bad) (bad) xor jmp lcall cmp push pop es stc js xor mov pop aas jae mov pcmpgtd sub jl adc sub jmp push cmp lds or testb jmp inc fbld out stc dec or int data16 or mov xchg add mov das and xchg cli pop adc sub push rolb test lods (bad) and xchg mov cmpsb sub jmp add pop mov fsubrs sbb dec sub lock fstp lds adc inc sub repnz cmp (bad) (bad) dec mov pop adc arpl cs mov stos arpl xchg sub aad mov and into mov lods (bad) sub imul and adc cmp pop outsl pop scas in arpl add sbb dec out cmp dec scas cwtl mov dec lahf push and dec mov mov not lahf fidivr rorb push int3 dec in lret in or addr16 in push adc dec movsb aas fmuls mov adc sub insl mov enter mov cmp lcall xchg pushf and or (bad) or fnop sub jmp lret (bad) ret add and das dec lds push addr16 inc (bad) es sbb fwait sub xchg sub lret mov adc xchg nop icebp xchg mov jns cltd jo (bad) fdivr sbb jo lahf push jno sub nop xacquire movsl insl mov or cli xchg inc das (bad) fdivs mov jle outsb mov cltd (bad) mov jno in fs popf dec pop mov enter or in cmp cmpb sub xchg and dec add jmp ret xchg js sbb sub dec rcl movsb lods and push push push mov sbb xor add (bad) aad adc jb or push cmpsb in xchg mov xor lahf xchg and mov lret mov pop rorb imul jp fmuls negl fmul xchg loop sub insb cmpsl mov in push cmpsl mov aas xchg inc ss mov repz and in sub and mov in push inc xor sub sub loop jo xor add (bad) jns pushf push sub (bad) fiadd dec (bad) adc out nop mov add xor jecxz mov mov sbb xchg jae lret inc push cs ds ror sbb add neg cmpsb or mov ljmp dec sahf insl jle and xchg aad cli int jle add popa push sbb dec shrl mov sbb out out or fdivp sbb inc or test sbbl in lcall xchg xchg arpl mov jge enter pop pusha fwait mov jmp mov or cmp jl sub mov push dec addr16 pop dec (bad) jo out cmp stos inc fdivp mov lret nop scas dec cmc lock pop pop loope pop inc dec adc data16 sub pop lea jle icebp lahf dec call sbb repnz test fwait or test icebp int3 test sub fwait insb sbb repz out fisttpl cltd lahf ffree adc mov arpl mov loop and mov dec cld ret in sbb inc dec inc std jmp add addr16 out and add sarl push (bad) sub push and xor adc rolb imul (bad) clc cwtl push jecxz hlt xchg adcb out aad fwait cmpb jmp jle lods pop out dec xor icebp insb and fdivrl mov pop mov add aad inc mov dec add imul sti dec repnz imul sbb xchg pop (bad) cmp scas sub fwait sbb lea repz out xchg jmp lret fsubp stos jns jmp adc xor repnz in fsub lock sbb cmp cltd leave stos inc jecxz cld lods xor mov sub xchg je bts pop pop insl dec xor dec das pop add xchg sbb pusha mov or jbe dec (bad) aam adc stc out push sbbl rolb sub xor lods jns movsb mov pop push insl insb push loopne popa out out and movsl outsb fmull adc cltd bound das cwtl jecxz rcrb out outsb sbb push int3 lea stos push pop pop (bad) repnz int dec mull or es popf pop jne or jmp inc andl shrb add (bad) sti push mov pop or xlat jl sub xchg mov into icebp push outsb cmp rclb mov loop enter in popl mov dec jecxz xlat mov push mov (bad) orl xchg cmpl xchg ds cmp push fisub test (bad) js fs cmpsl ja xor fucomip rcll arpl leave xchg xchg inc xor or mov or stos gs jno inc sbb xchg cmpsl jno in leave push mov fidivr inc (bad) fsubs ja and dec lahf push cmc scas mov mov dec sub jne rcrl mov rcll jno sub push cld iret cmp jo adc cmp rolb nop jbe in ss bound mov (bad) std sbb out (bad) in jmp sbb mov xchg out mov scas sbb outsb adc movsb cmc ret jno scas nop scas sbb xchg imul jne mov mov or and mov mov (bad) mov mov ret push cmpsb jle (bad) xor dec xor and (bad) mov adc lret mov fcomps add ret mov and push aas and mov mov pop jne ret mov push pop dec (bad) adc xlat lock cltd xor jg test push and and dec push lds cs (bad) and xlat or fdivs push pop loopne leave mov nop pop cwtl sbb cmpsb add add jae xor inc fsubrs sbb loop push rol sbb add push push dec outsl fisttpll iret fnstsw mov sbb xchg mov mov jl xor test cmp imul adc popf shlb ds mov je stc dec aaa push push out enter mov xor orl sub aad sbb cmp dec pop gs hlt pop xor push cmpsl sar (bad) fmull inc (bad) inc sarl add mov mov xchg scas adc push arpl mov lahf adc fwait dec and cli (bad) sub mov ds sbb in rdmsr (bad) nop and pop (bad) loope mulb cmp and jg in xchg faddp int3 test or out int stos mov inc fmulp outsb jns lret shl fdivp and mov jb add loope cs and out inc inc xor sbb lds pop mov mov rol push mov mov and sub cli cli and out or mov jae nop gs mov sbb test mov lret add and xor inc movsbl xor pop push mov mov adc push sbb mov pusha arpl callw adc cld aam call out xchg and mov xchg cld inc ficom stos imul clc les jle xor notl outsl jno pushf sub jmp mov fs ss dec mov lds mov cwtl sub cmc aad pop (bad) loope scas pop fcmovnu fsubrl inc xchg es fsts ret push pop aas mov mov xchg ret (bad) sbb dec pop out out insb push lds jle cmp adc mov jo push xor cmovns ficompl clc mov lds (bad) cmp xor and ja fidivl cltd cltd movsb inc out cs ja call push pop icebp or xchg adc xchg sub les dec dec in adc les (bad) xchg inc push dec inc jb sbb (bad) clc jmp dec ficom dec lcall test lock jle repnz aaa and xchg call lahf and out pop add bound movsl insb and lods out fsubrs std stc fidivl loope pop push sub in ljmp enter jnp sbb pop push pusha (bad) in in fst xchg lahf fsubl test loop sub cmp and push xchg jno out movsl add in sbb add stos xchg (bad) bound pop jo sbb push insl psadbw jb in test mov das mov aad pop lods je sbb nop es dec mov mov (bad) mov in data16 mov or imul and mov sub hlt jns adc add push fs (bad) (bad) xor inc xchg jp imul pop sbb insl or pop inc and sbb nop inc push leave ret mov (bad) or cltd xor dec stc nop mov inc lds in mov stc idivb sub pop (bad) dec sahf pop xor sub inc adc jb pop fwait cltd cs mul add in push pop jmp mov push stos and dec movsb pop xor icebp jl repz movsb dec xor jp je daa lock clc push jp adc out push jle jl insl cmp ss (bad) mov push sbb jne xor sbb lods jge (bad) out add in lock cwtl loopne rorb ficompl lahf out mov fs cld jnp (bad) daa jb jge fs (bad) pushf adc dec in pop mov mov mov stos and push cmp movsb push dec adc push xchg gs test add dec sbb push or scas shll mov ljmp push rorl rcrb into (bad) mov mov adc popf std jmp rclb rcll inc popf add mov vmwrite add cmp xchg add mov cmp inc xor xchg pushf lret pusha loop stc inc dec or lods and adc mov popf ljmp popf sub cmp jno pop dec popa ret (bad) loop push in inc inc ret sbb inc cmc mov icebp jmp jnp ja pop and cld inc jne dec (bad) xchg imul pusha pop inc xor aad jnp and outsl loop add clc lods pop cld imul mov cmp xchg xchg mov sbbl pop (bad) lret addr16 addl xor add cmpsl pop mov movsb inc push loopne movsl repz pop sub dec les mov sbb lds arpl fwait push and push jne movsb insl and aas fmul ds popa mov add mov or aam sbb sub in aaa movsb xor pop jo out sub lret test ja aas mov and not fmul cld lcall adc dec test sarb loop pop or sbb sahf fwait lret lds test sub fistl lret xor sarb fnop mov xchg pop outsl mov cmp arpl or andl or mov xchg (bad) push repz add sbb aaa mov popf out push sbb jb jo test sub stos or cld scas pop fldenv cmp fld (bad) in imul (bad) cltd cmp js xchg inc les test lcall fimull xchg (bad) jae and cmp cmpsl and ficomp xchg add mov stos jo in call xor ss lods adc push pop xlat cmp dec cltd sub cmp inc sub xlat movsb dec mov shrb xchg insl push cmp fldt jmp add fsubr and lods gs xchg push inc mov and lahf lea xor movsb daa mov pusha mov push dec push sbb ja pop jno mulb scas xchg inc outsb or pop inc mov xor dec fsubr mov mov enter mov jmp mov test pop test mov out (bad) cltd inc out cmpsl sub xchg fcmovnu inc ret lcall leave gs lahf hlt and inc inc loopne lea mov push (bad) dec dec nop jecxz (bad) sbb out fnsave dec pop mov pop xchg cmp daa fs enter cltd pop inc sahf scas ja dec xchg fisttp pop mov cli cmpsl aas call cmp addr16 movsb (bad) lret jno ret lea out dec adc cmp inc and pop pop mov addr16 rclb or stos adcl and push outsl add push inc fcomps xchg out jno jp add adc cld xor cltd loope es sub mov or (bad) push (bad) mov out (bad) and fstpl pusha xor pop push jp out xor push add add lret cmp sti lods jmp sbb adc mov add xchg inc insb push xor (bad) jge inc scas out or jle fstl add xchg sub mov mov (bad) out cltd aad loope mov dec aaa scas push scas mov lret pop mov inc fwait insl jecxz mov inc outsb movsb inc movsl daa fcmovbe mov jnp fdivs dec (bad) (bad) sub jge (bad) lock dec bound lea shrl fcompl test cmp inc je add dec (bad) cmp popf cmp andb adc mov dec mov inc and int3 sub mov pop icebp sub daa mov cmc mov dec lock jl,pt loope pusha gs jb mov and or loopne cwtl xlat sbb stos stc pop out lcall int fidivr psrlw xchg lea adc add and and and mov jge movsl in mov pop xor add jecxz dec jl das xlat cld jno divl pop xchg loope fsubrl rcrl icebp imulb lahf scas enter in xchg fcmovnbe mov dec or movsl jecxz mul xor out sbb outsb shl rcll cltd (bad) mov mov faddl nop inc shll add imul in pushf pop aas out mov jp add mov and mov cmpsb add imul cltd mov test jmp dec mov std adc out adc inc xorl movsb mov cltd mov xchg and into mov push mov or push xchg pop sub xchg pop push add in pop add fildl push pop dec cmp arpl jecxz cmp out outsb dec adc cltd mov ret loope mov rcrl or sub popf cld and jo mov or lret fstl cmp mov lock outsb mov fsubl and ret push into sub movsb push xchg mov int3 push inc or cmpsl add xor xchg lcall mov mov lea and out dec (bad) jb xor pop sub inc push data16 inc mov inc jns push mov jmp mov insl mov fwait data16 adcl loop mov fistpll cmc cmc mov mov and add cmc js xchg stc add push ja in es fidivl notb stos test and fisttp jmp stos dec sbb xchg out test ret push jo sbb dec out dec add out cltd (bad) ss stc xorl les nop pop inc out ss jge jmp push mov and leave sub push (bad) lcall mov lock icebp das jno jne dec mov lahf pushf inc or ret inc lahf test pop and sarb aas pop pusha sbb daa adc int add ljmp or ja data16 out xlat inc mov adc daa push jns aas mov push (bad) mov rorb repnz test out pop xchg nop cwtl sbb and fsubp pop mov jle fnstcw add insl xchg aas mov add (bad) mov stc add mov adc pop push ds xlat inc popf jnp jmp mov icebp jp clc pop cs hlt cmp push stos outsb jmp ss leave ss call (bad) dec add xchg pusha (bad) lods xor imul fildl push clc ds nop popa jecxz mov das pusha inc jecxz hlt sub push jle jae rol xlat xor imul inc into push dec sub sbb add cltd mov pop mov push sub addr16 outsl xor xchg les mov enter in pushf inc not jl pop mov xor cli pop cmpsl shr into mov mov lea and test inc jecxz or or (bad) int idiv xlat push push arpl or repnz gs out popa mov cmp inc cmp dec jecxz jnp out gs xchg mov mov outsl mov sti (bad) int3 lea rol mov mov sbb clc fcmovb inc out mov sub je xor mov adc lahf rcrl cmp roll xor pop in mov dec daa pop or xor add cld fwait (bad) in int3 mov push dec adc adc mov jmp push xchg jecxz cmp rcr leave add lret ret cmp inc xor xor lds fwait ror xchg mov sub iret mov popa cmp mov test adc or loope stos sub in daa pushf add mov imul scas pop sbb sub inc mov hlt push mov cwtl mov lock stos nop or scas movb andl or mov bswap push out and cli (bad) lock cld movsb fsubrs xorb add add jge inc mov add mov cmpsb les adc mov push jp sub pop lock mov pop mov push inc call jmp imul rorb in scas ret jle orb sbb sub fiadd mov sbb sbb inc sar and cmp dec lods mov push push std imul jecxz cmp xchg push and movsb mov popf out add insb es in sbb pop (bad) xor add xchg fdiv jo inc sbb jmp sbbb sbb (bad) jae push sub fcoml aad dec aaa movsl mov sub scas scas int scas dec sti test aam loop xchg outsl das push cmp fmuls sub call xchg pushf jae push cmp xor outsb bound (bad) dec fsubs loopne mov insl adc pusha mov mov mov xor or jo add (bad) mov xor js pop lods test cmc mov lods xchg arpl xchg xor mov mov faddl mov mov adc cwtl push les addr16 enter loopne cmpsl mov leave out in mov sbb fsubs int pushf imul dec and mov fcomi in mov fcmovu mov test bound adc xor mov rcr jns das inc out jmp scas movsl ret loope ret aad push out inc jns clc or push mov mov sbb lret (bad) and ljmp fiadd sarl sti pop and push sbb adc lcall jecxz mov jecxz mov and adc imul lret iret (bad) pushf call enter fcomp shr stc xor in mov stc sbb sahf or dec dec rclb add mov adc mov mov (bad) ficomp jns das mov (bad) cmp js inc out or fnstcw or leave in (bad) xor inc mov cmc and test pop icebp int3 loope shl sub insb gs movsb hlt (bad) in test push fimul adc mov std push cmp cmp leave or scas jg add cmp stos fwait and dec in out dec xor pushf add scas (bad) cmp out cmpsl daa ret mov (bad) repz inc mov mov in addr16 pushfw pop inc push int3 fs add repnz enter adc mov stc inc mov mov adc cmpl dec rcrb pop push mov repz jne loope ds std jle dec mov lahf or call pop pop aam (bad) or push add scas sub push xchg pop pop fisttpll test jae (bad) in icebp cmpsl dec or bound xor mov push je mov pusha pusha sub add shlb lahf nop movb (bad) aad sbb fsubrs lea jp jo mov pop xchg je pop jg dec xchg mov daa push rorb outsl fsub dec test insb mov int loope jge or shrb aaa pop inc mov and imul popf adc push ret pop mov aaa pusha jne or rorl sahf inc in leave push or test mov stc jae xchg in mov in push push or add outsl fbstp or movsl lea jecxz push cmpsb fistpll mov popf push gs (bad) in in or repnz and cmp dec je or (bad) and cs or xchg push cmp pushf inc adc jne bound rolb mov ret hlt stos xchg sahf inc clc mov adc test pop leave outsb and mov or jge test push sbb pop jo add jge push je pusha push std and lahf cmp mov mov out mov cmp push mov jb fldcw std adc and sbb test fwait icebp cmp stc inc out (bad) shll xor push movsb imul insl xorl jo dec fcmovu and loop and aas mov pop cwtl test jno pop ret pop jmp mov jg jmp loop sbb dec xchg jp mov add sbb jbe sub push xchg sbb shlb int3 pop push mov mov sub jmp ret aas stc cmp ss xchg and jp push (bad) (bad) popf sub xchg or fbld inc pop lock jnp jmp call dec imul mov cmpsl sbb aaa cmc jnp jmp inc lea in cld cmpsb jl out add call fild mov sbb test jg xlat outsl and cmp sti sbb add outsb outsl mov cltd data16 ja jo fldt loopne pop movsl mov outsb fistpl mov scas inc cwtl jo or pop sbb enter sbb mov stos repz dec mov mov dec ja add inc jp fsubr out mov mov outsl ds ja mov aaa shrl scas pop dec loop repnz pop dec dec popa frstor push mov fmull test in int pop mov xchg das inc shrl cmc cs dec negb sahf or (bad) cmpsb inc jne sub sub sbbl xchg and cmp add dec dec ds jmp jno or jo mov test jno sbb iret in push cs adc rcl or test xor push arpl pusha dec jb pop mov aas lods xchg sub cli into sbb sahf adc mov (bad) ja ss insl dec jge (bad) fwait jmp in (bad) mov scas inc ret mov push or subps fcmovnbe lods ret int out ret sbb push jne fist pop jno cmpsb jge lret cmc jecxz ret push push push or (bad) fsts loopne or test jnp mov inc mov imul mov out gs das in rolb lea repnz out push test dec and mov test push movsb xlat pop lcall test mov pop lds sbb std cmc inc pop jp sub cld (bad) cld pop mov aas push or jle (bad) jg or xlat xorl pop mov cmp push cmp aaa adc and sti or pop ret stc movsb lock xchg out sub cmp sbb jmp loope in sub fbld out sub mov bnd mov jmp sub lea in ret mov dec imul mov push or mov sbb or pop sarb imul loopne std sub inc dec mov stc pop add cmpsl aaa or pushf add jecxz nop add (bad) jnp push jbe xchg loope lret loope int (bad) divps fldcw imull dec gs sbb (bad) aam xchg xchg xor lret xorl push in mov and pushf aam (bad) adc leave mov pop repnz cmp cmpsb (bad) mov sub xor xor cmpsb cld xchg pop inc fistpl push push aad xchg mov (bad) mov mov pusha scas dec cmp out leave jl mov mov pop sarl adc dec fdivrp xor call sbb mov push push xchg into or popa jne mov ss push add scas jle pop or call pop inc lods jne mov fist pop int dec sarb outsl addr16 xor int inc lret add daa pop push cmc push out ret in call pop push push inc push (bad) es xor outsl loop addr16 ss sub idivl lret dec test add pop or stc push fmul aas cmpsb jmp in push jae leave and sahf psubd mov les test add mov fisttpll mov pop jno jo dec xchg adc xchg ja cmpl xor xchg adc xor jp dec cltd fisttpl icebp (bad) jbe (bad) fdivs lahf cmc push add ja mov das push xchg fdiv aad fimul nop rcrb mov inc push or leave in pop adc scas mov mov cmpsb data16 jge or pop push ljmp mov and push leave sbb xchg dec pop or (bad) std hlt jmp adc movsb andl mov into mov mov rorb mov inc cli (bad) cmp jge add mov and cltd loope mov ret in je jno sbb arpl jg out arpl outsb loopne push ret fwait adc mov lcall inc sbbb test flds insb popa push jnp fldenv in or sub cmpsb hlt mov loope in push adc jmp icebp mov fsqrt push xor add (bad) std mov adc lahf out in jmp push in ljmp je fcoms push xchg push fadd mov call mov and jnp fs pop divl (bad) mov fcoms (bad) adc pop dec cmp scas add push out push cmp iret stos loop repnz sub icebp mov sarb mov push sbb and or sbb in outsl movsb push lcall push inc outsb mov xchg inc int3 push and fadds xor scas mov (bad) push cltd xor push xchg out mulps les inc dec daa jmp nop mov stos leave imul and mov xor jae cmp push xchg jne inc clc rol cli cld inc (bad) pop rolb push mov icebp inc sub jno movsb xor (bad) mov jl divl jge lods sbb shrb imul jmp dec push inc pusha lds popa and popf bound xor ljmp imul adc nop jae (bad) or push flds xor ret mov imul xchg xchg cmpsl push inc push mov in (bad) cmp test popa xor (bad) neg aaa in test mov ja or cmc fnop jo popa test mov xchg aam nop or cmp repz adc enter cmpsl or das ret out in mov imul xchg (bad) cmc add mov (bad) je bound incb rcll mov in out mov iret or ret fstl xor cltd or jge lahf test dec jb sahf in dec push lock mov pop popa pop sti jp sbb adc xor cmpsb scas mov mov mov dec adc lret int3 lret jbe jle push ljmp jl dec sub lahf mov ffreep jge pop mov orl sub jecxz lds pop inc mov jmp sbb pop jge cmpsl dec clc fsubrl out push popa cmpb push insb pop cltd imul and xchg and pop xlat cmp sbb lds push cltd push and scas mov mov jge fxtract push movsb movsl push xor in mov insl jne mov das jmp jno dec scas ljmp out xchg xor mov repz adc fdivs dec or mov cld xchg ret movsb popf pop sbb cli adc push pop imul jl mov mov mov (bad) cmp sub lcall addr16 push cmc aaa lret stos aam xchg scas test xor (bad) int3 cmp imul int xor arpl addr16 js pop jle out or sti ds aad inc xor dec sub sar lret xor rcrl mov jne add ret inc or stc jbe sub (bad) push (bad) cmp pinsrw mov mov push mov mov (bad) dec mov outsb in mov xor rcll cmpsl add dec mov imull cmp sub push int3 shrl dec sti push into push xchg ljmp imul mov rolb mov mov dec out lods rorl xchg test pop lcall lods xor imul lods adc cmp dec ret stos ror mov insl fsubs jae xchg cmpsl ljmp dec add daa and cmp ret cmp rorb push (bad) loop cwtl sti and mov int3 xchg lea addl imul dec out mov sub gs rcr push push rolb or pop and add sti pusha sahf sub jp loop xchg dec xchg jle shrb jno aaa sahf and icebp xor add iret add or cmc out sbb mov ljmp jmp or fist inc pop add or stos mov in sahf lcall push inc stc and jae adc mov jo mov adc adcl xor xchg addr16 std jne les stos out mov pop in rorb add push cmpsb mov push mov cld sbb sub (bad) icebp int3 stos fidiv xchg xlat pop jecxz fwait idiv arpl and pop mov or stos or or mov sub mov lret and stos lahf or rolb test test sbb sbb xchg xchg inc and out push pop adc dec xor inc (bad) sub in outsb popa test adc push xchg add addr16 pop adc push sbb cmc cmp mov jae add leave xor idivl jecxz out lds adc adc xor jg adc jbe movsb movsb push adc pop stos repz in xchg or (bad) cli ret cwtl push add cmp das scas or cmc cli into cmp in push or icebp out std mov icebp or cs inc cmpsb (bad) enter mov adc jb ljmp jae pop or in cmp inc pop mov sbb pop xchg test push lods into inc pop or sti bnd mov ja outsl mov leave pop repnz std push xorl int3 iret fldcw imul jecxz mov jnp mov lods ret push or xchg dec mov pop cmp jbe push stc mov (bad) iret xor push clc adc pop test mov pop and mov mov push inc xchg push xchg or aam cmp test jb dec test mov pop (bad) out scas sti sub stos adc xlat (bad) inc lds mov xchg stc sbb js in rcrb jecxz push cmpsb fsubrs lcall out add test jae push dec jmp add push addr16 dec cs loop rorb (bad) mov jl loop scas jns mov cwtl out enter adc aad stos mov fcoml (bad) jmp adc (bad) cmp push or inc adcb fcomi jno not nop cs jne xchg add inc lret cltd out add and loop mov cmp jno or mov in (bad) xor shll xor pusha cmp sub jno cmpsb jne mov xchg xchg push or push mov adc shll mov in jnp rolb in stc (bad) gs fistp repnz sbb hlt lret mov fs adc sbb int cli or popf movsb adc mov sub loope scas xchg cmp or in ja movsl stc xchg inc and fisttpl add mov pop rclb pushf or pop push test stc pop inc add cmp pushf mov push mov mov and pushf or fiaddl fneni(8087 jns mov push sbb movsb js pop mov lahf sub mov ret xor test cwtl outsb mov add mov mov xchg lock into sub rcll mov mov dec mov je arpl dec push ja xor pop xor xchg movsl xchg pop and or aaa or inc cmp repz push popa loope adc imulb dec and leave add or mov les mov (bad) (bad) push xor push jle,pn or dec mov aaa adc cld out cwtl dec jbe arpl inc jecxz pop loopne lret pop inc (bad) lock fidiv and ror jl rorl scas adc daa push push out bnd dec pop stos icebp testl in sbb sahf xor arpl aad lahf js adc lret xchg rolb adc lret cmp outsl push and lret lret push fucom roll inc sbb add adc jnp push pop cs pop cwtl mov jbe fwait (bad) insb or pop pop pusha mov lods movsl (bad) dec xor (bad) jg leave lcall pushf sbb sub jge lods into leave in jne dec roll mov xor push pop (bad) out add pop stos xchg addl and dec push stos xchg clc out xchg rorl jne xor imulb int hlt mov push repz inc push repz cld (bad) mov xchg pop dec repz cmpsb enter cltd mov pop les imul mov xor push popa pop pop xchg sbb lea cmp cmp xlat push test fist loopne fistpl sbb sbb mul aaa xchg dec xchg (bad) mov insl mov data16 cltd divl lret inc movsbl inc mov popf outsl or push xor xlat hlt xor mov imul pop sub (bad) ret mov popf and xchg repz pushf not push insl sub xor icebp dec xor sbb loopne test (bad) jns jnp mov jb push iret and and aad aaa test mov je inc fisttpl rcll cmp (bad) adc aad arpl aad mov ret in leave cmp mov aad mov je jecxz cmpsb sahf into pop sub jne sub cwtl xchg lahf push push ljmp sub pop push sub mov ss pop cmp (bad) cmp pop aas aam in or add les lock nop pop rol aad xchg popa sub nop jne push mov xchg xor add mov cmp scas setp gs sub fcomps aaa sub inc xchg sub arpl push popa dec push and fs push fnstsw xchg mov inc xchg sti (bad) push hlt int loopne sbb mov aas notb aad and pop (bad) dec dec cmp mov loop mov or inc idivl jo pushf stos hlt dec dec xchg ret dec das mov xor push shrl or and mov (bad) pop mov sub push or mov in in rolb js push mov add push sti (bad) scas out pop jns ds cwtl push pop jno jge push lea jle mov dec popf in (bad) addr16 (bad) cmpsb push cmp push std stos stos lea cmp aas out cmpsl inc pop push sbb sbb aas xchg mov aas pop imul in mov push out pop push ja cmc repnz mov xor (bad) mov ss and je scas pop sbb repz negl scas adc xchg xchg hlt xchg adc shrb sbb adc sub xchg xor xchg xchg push cmc das or fldenv or aaa lock pop inc pop mov pop adc jp and cmp aaa mov ret mov sbb mov adc xor mov gs xor pop femms (bad) call out setne cmp cltd mov roll mov rclb test and jns nop mov mov and xchg cmp addr16 mov cs cmp inc mov in (bad) adc (bad) out icebp add lock clc mov pop pop (bad) mov addl adc push jmp (bad) dec test ds imul xor mov mov sbb dec lea imul movsl fldl pop mov xor cmp add jg in push push pop outsl cmp out cmp or xor inc stos clc dec cld clc clc test je cwtl lods dec inc adc dec cmp inc and int3 dec jecxz mov into push push and lods test push or pop fldt imul xchg pop inc in xor icebp mov pop dec sarb cs mov sbb dec push or mov fs data16 movsl pusha cwtl test jle insl call jbe (bad) pop xchg adc stos mov xor imul loopne mov inc daa inc test mov fsubs xor push fbstp test adc push xor mov mov jne aam ret test stc lret fwait out (bad) push lcall leave inc pop in loopne adc inc popa mov add enter pop pushf lea lret sbb lods inc (bad) fs cmp out jno push dec pop les inc mov xchg jns lahf sub dec push push sbb mov mov fsubrs sub add mov dec jmp mov pop mov mov lods daa xchg out push stos pop xor xor pop push lods push (bad) mov push push orb lret leave lods fcmovbe lds out (bad) test lret ficomp push mov repnz out jae pop sbb aas jns in jecxz addr16 adc fildll in lcall and xchg andl push or jle int fistp xchg mov loope je inc and bound outsl push inc jnp push test out xchg push xchg xor mov xchg (bad) jmp aad mov (bad) sbb sbbl mov pusha div leave inc mov lock out push mov sub lcall sub sti hlt and and xchg sbb jno xor sbb mov sub aad mov repz xor dec lea jae mov push in nop jns or in mov sbb cld dec push clc arpl inc (bad) pushf (bad) xor inc jo stc test mov pop mov pop arpl dec lahf cmpsl outsb xchg mov mov pop scas insb sub aas test jo jl icebp ljmp xchg mov or mov je aam and push icebp cmc push push inc push pop insb fsubl add out js pop jne cmp int3 (bad) sbb es push push dec test loope add cmp sbb or pop insl ret push test shll mov xor out push fildll inc jl jns push imul fstl xchg cmpsl jecxz mov dec sarl lret push push and push lahf ja je lret loop xchg xor int3 jmp nop cmp int3 cmc jl (bad) insl mov sbb fsubrl xor xor imul or push dec stos push (bad) popf pop jbe mov cs rcr xor mov inc cli sbb stos adc inc in xchg cmpsb xlat xlat lock push cmp shrl mov sarl lods push scas dec flds pop or inc or inc or inc sarb hlt cwtl sub mov mov aaa imul data16 aam mov cli jne mov mov fisubrl popf mov xchg cmp mov sbb stos mov sub cli mov rcll xchg pusha lea les xchg mov test jle mov imul outsb lods push add inc mov or pop and and push icebp xchg xor ja testb je cmp int3 mov fwait out jge out inc push loope pop int dec xchg dec pop aam bound data16 ds loop mov mov mov xor push sub or lcall int jae sub fwait rolb out fidiv test cmp (bad) fadd das arpl loop aad ja push or (bad) xor je imul stos mov stc std and cmp cmp ljmp push jmp das lcall push std fistpl int push aas inc pop stos int3 icebp out and ret inc or pop roll mov out jg movsl lods mov mov sahf in sbb fwait jg pop aaa push push (bad) xchg test lds mov addl leave mov divb clc sub test insb pusha sub in dec div pushw or inc jle lock movb mov jmp adc mov ret imul rcrl inc outsb pusha adc cmc mov mov pusha outsb push pop cwtl or or out push or sbb testb out popa loopne push ds adc mov popf and sub je frstor scas inc mov jne out fistpl sti fwait xlat push inc sub pusha ret jae out lret push rolb subb in rcrb xor or outsb and sub jp push sub mov arpl and jne aad dec add lcall push sub (bad) mov xor out imul mov mov push sti popf scas cld xchg xor mov test mov add jo cmp in sahf sub loopne (bad) mov pop jp and xor test rorl pusha push data16 loope shrl jnp inc outsl or rorl mov pop xchg mov ficomp lods out outsl push mov xchg mov xchg clc cwtl inc (bad) mov dec imul jp push hlt stc insb xor fsubp rcrw adc int push nop dec mov in sarl jo pop repnz icebp jnp,pn sub nop and iret mov pop push xor xchg and cltd loop mov (bad) (bad) jp pop push pop (bad) je pusha pop mov push mov stos mov daa fldl test loop movl outsb mov mov or faddl mov pop sub js aad xor lods jo push in or cli adc push sar add adc jnp in ja mov (bad) mov sahf addr16 cmp addr16 mov sbb in fs enter into cmp adc andl std clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas (bad) aaa add incl cli add push jmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec into dec inc inc push js in (bad) jbe pop xchg xchg das jbe mov mov adc mov fildl mov fldt jge jns jnp imul cld das jecxz (bad) loop subb sub or test xchg push lret test clc or dec nop leave pop mov add add inc xorl xchg dec js jge (bad) mov pusha mov stos (bad) jne test hlt les punpckhwd movsb mov pusha std push movsl fmuls (bad) dec in mov pop stc or mov test jp int3 push lea scas add popa xor pop (bad) and sub pop cmp (bad) repz sub sub mov and clc (bad) sub cli jo cs cmp and sub xor imul mov insl jb nop dec xor jns xor fidivrl xchg pop xchg dec cmp inc add out jp add or mov je add aad out push dec mov xchg xadd mov and push ret aam insl xchg (bad) int3 push fsubrs loop cmp aam jno repz xchg (bad) addr16 inc pop or mov push test stc out xchg hlt sub xchg (bad) adc xchg sub outsl popf orl cwtl outsl andb jbe int inc mov mov gs push xchg mov imul mov test mov imulb mov es int3 out aaa sub jo jmp mov lea adc stc gs insb (bad) arpl (bad) mov jnp orl clc mov and das andl (bad) xor mov cmpsb jmp popf and ret cmpsb in mov push rorl scas jae scas jns mov inc cwtl mov iret inc jae maskmovq testl push sahf xlat xchg dec mov jg jecxz hlt popf inc and rorb push cmp cld adc cli in scas adc add jae xchg jns les cld pop mov mov push cmc (bad) popa mov jbe sahf sti and mov push ds xor rcll adc aas cmp ret (bad) mov (bad) sub cmpsl and and add sti and xor sub in fsubp aam lods gs xor int3 add mov adc push add scas jns adc mov imul adc xlat rol cmp inc mov inc andl or (bad) or lock cmp stc mov es mov fldt ja mov xchg sbbl in testb loop andl aas push inc movsb popa dec sub jmp out xor inc cmp mov inc pusha xor and mov les (bad) fs mov sti or sub inc jecxz mov lods imul cs daa push jno into (bad) fisttp cmp cld push fdivrp call pop adc std add test std sub adc push mov (bad) imul aam and shrl sbb mov repnz rcll enter clc data16 or xchg mov inc sti adc mov loope mov xchg cvttps2pi and std stos int3 sahf inc pop call lret stos sub loope mov and (bad) jb adc pop aad movsb repnz mov cwtl popf xor mov jne pop adc xchg inc inc pop sbb lret cmp xor xchg scas mov iret and mov pop mov cs cmc into shr test fs mov mov mov inc cmp nop fistpl (bad) cmp cmpsl fldl lds outsb jmp xchg cmp inc fisub jge inc adc lret xor fwait std leave jo aaa js repz sub pushf test mov bound into or inc aam mov lret insb ja leave cmp lods lds mov cmp rcl decb xchg mov mov xor insb push shrl or andb and mov mov je popa jecxz inc push xlat popa hlt pop out fdivrl aaa mov insb xorl int jecxz and repnz xchg pop xlat pop int3 inc (bad) cmp push adc cmp (bad) shrb jns out inc loopne xchg lds negb mov cmc rcll pop and dec mov add mov es adc (bad) pop inc shll movb push mov adc xlat pop (bad) in push add xlat lahf ret or adc in fcmove dec (bad) push lret mov mov xchg and inc jmp bound cmpsb add cwtl leave imul out mov jb and fdivrl gs xchg or dec repnz into jbe repnz sub push ja lret mov insb mov movswl arpl push hlt mov ja adc sub dec movhps stc cmp into rol dec xchg adc sub nop adc xor (bad) push adc mov mov (bad) repz insb mov stos test jae cmp xor inc fildll fbld mov dec out pop dec xor cmp (bad) xchg into cmc insl sub leave xchg mov adc mov xor push incl cmp imul mov sahf repnz fisubl sub sbb negl push cltd stos and xor shrl jmp sub (bad) inc sbb cmp les ja les out outsl xchg into inc movsb or pop xchg cld enter add add mov jne call or xchg mov sarl sub lock aaa inc clc inc icebp sbb cmp js scas sbb push jns loope cli dec clc xchg push jg jae or sti and jb mov pop jae pop addr16 jmp lds (bad) leave notl sub mov pop test popa adc jg jnp mov jbe adc xchg jle push fidivr lods push sbb and shrb hlt cli sahf fisub or mov push (bad) call jns cs out add lcall inc sbb mov ret jge xchg mov adc fnstenv mov bound lds jle jo pop scas xchg sbb inc loopne mov addl leave fcoms subl fbld mov push test test adcl sub dec jo shr mov mov cmp mov lret (bad) pop jg (bad) mov es cli stos out sbb xchg les pushf imul cli xchg mov xchg xchg inc imul inc cmp xor adc test ljmp mov push push scas ret cmp (bad) popf cmp cmp cli push pop lcall movsb inc sbb sbb adc stos xchg out or fisttpll insb or or push sub lahf pop sub scas repz aaa or mov ds dec push cmpsl in fprem1 out mov popa push and repnz add jbe std in xchg inc data16 fucomip add mov cmp frstor test cld notb add and jo in imul or out dec inc and push jns pop clc fisubl mov push cmpsl sbb (bad) fistl fnstsw sub mov or add mov add cwtl mov pop mov jae sub fcoml out fwait movsl inc mov mov repz mov or lea add scas pop cmpsl pop pop ficoml add jl cmp popa jb jns jns bound fistp (bad) push jmp cmpsb dec push pop popf ret js jecxz sub incl out les call repz jmp fwait pop sbb jae fldenv mov dec cwtl test mov dec aam loope ret sti into pop (bad) int3 pop scas jnp jbe push test lock jae dec pop mull sbb mov incb jmp and lds pop dec loop mov ror in arpl inc and lock xor xorl push adc mov add mov fnstcw out int cmc (bad) aaa (bad) ljmp clc mov imul mov clc cwtl gs jl jmp (bad) or hlt inc inc lcall and push das or fwait stos fs add xchg dec sub mov dec jne (bad) into cltd loope cld rorb loopne addl ds dec stc leave sahf push or int3 xor ret int pop sub out aaa leave sub dec fidivrl mov cmp rclb setns iret adc jne adc mull faddl ret pop dec mov lcall mov xchg int3 adc stos shrl adc test aam jo xor push mov dec dec or cmp pop ret sbb sub (bad) push jmp jge pop stos (bad) add xchg aaa inc push outsb popf pop mov pop aaa and idivl xor sahf or jp jns movsb xor dec jb,pt inc and lahf fidiv and sub imul add in orl cmp xchg cltd dec sub xor push notl mov fdivl in hlt enter push shrb jecxz jbe and and pop daa or lock mov push sub mov and test nop into shl mov mov xlat and push ja and and movsl xchg js loopne mov mov in sub and fsubrl pop cltd jmp add xor push les sbb outsb hlt pop pop cs pop stos insl sbb cmp pop gs in xchg push iret jbe pop dec mov pop (bad) xchg mov loop push sbb mov mov popa or xchg test (bad) cli in cmp jns inc pushf lods fsubrl or sbb stos xchg mov mov mov jl push out mov insb in and inc fdivl fldenv adc xchg pushf lret xchg bound cmpb sbb pop (bad) mov mov call movl fcomps push jns cmp push mov fdivs xor mov push pop bound rcr jne push test arpl mov adc insl les add xchg jp mov iret cmp pop cli repnz jbe mov push ret out cmp (bad) fdivr or sarb loopne xlat (bad) pop loope lcall pop push dec dec iret shl (bad) fmulp imul clc xchg (bad) xor mov cmp or outsl loope cmc lea sti leave dec jo jbe (bad) into cld sbb push inc mov mov jne cmp fisubr vmread insl jecxz inc aam scas inc ds or push sti mov sbb add cmp pusha cli (bad) sbb push mov subl or dec xchg mov and rcrl sti sbb xor push xchg mov xor nop cmc pop outsl xchg jl enter push or (bad) rolb mov jno sub or mov mov cmp cmpsb loop mov les add mov xchg or out ja dec outsl xchg daa jp fisubl aad icebp fiaddl xchg insl push loope das fcoms fwait inc push rorl pop inc mov mov mov mov rol push (bad) dec (bad) lret in imul lods dec and pop test jg add pop outsl outsb stos iret test es add jae inc xchg stos pop rcrl inc das sub xor out out pop jg hlt mov fsub mov sbb loopne insb mov sub cmp popa sbb xchg pop mov dec stc add in jb dec cmpsl (bad) mov xor mov mov mov jle sbb js mov in push rcrl (bad) fistl test lods dec fdivs ret out pop lds pop in sub imul xor inc lret mov stos mov sub jb aas xchg vpaddq cmp lahf iret cmp js insl add out shll stc cmp mov fdivr mov lea mov and fldl and ljmp and dec jmp je sub lahf rclb xchg push rorb outsb adc mov jmp in fimul and add adc pop scas sbb mov mov mov fs insb data16 jecxz or lock repnz mov add icebp and cwtl jae pop dec fcomps mov add inc xchg mov xlat aas jae (bad) xlat jae and test insl jno (bad) ljmp sub test (bad) xor and out test (bad) jne ss fdivrs js loope stos xchg adc add je loop push es (bad) mov lock mov jnp stc jno adc lods xchg jg es das sbb and dec dec pop fs xor sub (bad) mov cmc mov xor dec test xor pop add loope push sub sub cmp dec jns sbb inc mov outsl imul ljmp mov mov cmovno pop outsl pushf inc stos xor jns and and cltd inc loope mov icebp out push push push mov or inc pop lcall dec bound xor (bad) adc push sti mov xchg in adc mov adc hlt or leave pop inc inc mov add in stos enter in and nop push dec outsl pop push into pop xor ror mov out dec (bad) jl imul adcl jne mov sbb (bad) lock lahf je lods (bad) jo fiaddl movsb mov into jb fwait jge mov dec iret sub mov sbb js mov int3 pop clc push pushf jge hlt in inc xor xlat inc rclb test mov shr ja push cltd mov or push popf adc sub jge push push lret fidivl (bad) call cwtl jae notl mov mov ret dec or or aam sbb addl xchg inc adc sub mov inc popf and mov cmp jno cmc pop pop fs arpl (bad) insl xchg inc and enter xchg sbb aam inc (bad) cmc dec mov mov push pop or fdivrp test (bad) repnz fisubr jne dec mov xchg sbb cmp pop mov jns push (bad) mov xchg pop (bad) and daa dec into icebp add push push or sbb adc fcmovnbe fs xor into or dec int and push jg icebp out xor outsb xor push adc nop jnp fiadd ret out rcr dec in imul or xor hlt pop dec fdivl xchg sub add rclb push cmpsl sub sahf mov cmp lahf cmpsb sub mov sub fmul shrl sbb lods jecxz push push repnz push (bad) xchg sub jge cmp mov xchg pop gs outsb loope das add ret cwtl mov mov add cmpsb jo test mov imul mov jge inc and (bad) xor mov les xor cli jo mov mov add jns (bad) in icebp ja mov adc push cwtl nop and or jmp xchg push (bad) lcall or cmc bound ss (bad) cs xchg aas mov test pop jbe lods icebp jp rcl mov mov negb ds pop aam lret int3 fucomp orb getsec (bad) pusha bound enter xor add jp adc inc mov jmp fistpll out mov fsubr stc add mov dec sub clc jp dec add outsl xor inc mov lahf cmp pop cmp push add sub stc push mov out test icebp popf pop lret loopne insb mov cld aaa aaa dec pop mov aas aaa dec addr16 adc jp aam sbb and jbe add pop ds pop imul sub cltd sub in icebp repnz adc adc push loop,pn call xchg cmp jp adc out (bad) out or mov pushf decl shrl cmp test xor jg mov mov xor xor clc enter sbb xchg test into cmc sbb (bad) jbe pop sbb rcrb inc pusha sbb mov mov lcall (bad) push leave xchg and std stos mov repz or inc cs (bad) or cmp fld xor icebp adc pop add mov sub lret (bad) or mov inc div mov push xchg out mov sbb push dec cmp mov xchg out je std xor outsb aaa adc jmp es jl jl adc stos mov daa lods dec pop mov mov cmpsl movb dec mov sarl lcall or addr16 dec lret pusha inc xor arpl outsl add pop fs dec pop aaa aaa dec ja adc or insl inc jo out js add in loope jl or dec aam mov (bad) (bad) adc call (bad) gs imul movsb push cmpsb pop add and mov xor xor jae mov xchg pop jmp addr16 rolb (bad) jle adc sti jne mov sbb dec mov jl addr16 out push add pop jbe stc rcll pusha jle into dec rcl dec in int3 sbb lds mov aas xor xor mov jb push pop fiadd or xchg cmp jp push mov (bad) repz inc hlt scas mov jecxz push add shlb fs or cmp fldcw lods jecxz (bad) sub aaa push mov xchg fidiv call and xor push sbb pusha sbb idivb jecxz xchg pop push ret int and pop or test andl push push jb adc sarl xor jae movl mov enter testl dec lods dec inc cltd enter sub fdivr aad call and jo std (bad) insb sbb mov mov jbe push fwait mov jmp dec (bad) call xlat rcll insl mov adc sahf mov mov xchg mov pop scas adc jge sbb push fldt mov mov dec xor dec pushf (bad) pop iret xchg daa pop popf fiadd mov stc dec adc and jge clc lcall lret and out push (bad) jmp cmpsl sbb call inc jae pop data16 mov mov ds ret xchg sub sti dec xchg (bad) and jo dec in adc mov orl cmp addr16 loope movsl js mov rclb addl rcrb testl ficom xchg or pop jb mov rol sub mov and rcll jg in in mov push xor lea imul pop insl sub push xor into andnps dec add loopne mov mov adc sbb stos cmp js out aas inc xchg movsl loopne sub mov mov ljmp ds push pop push cs (bad) and mov push loopne into scas lea fstpl or and dec aam pop sbb or xor ret xor sub in cltd scas ficoml push push imul pop inc mov push divb and jns aad repnz movsl mov jge call and adc push mov push test mov adc mov icebp jle insl mov dec jae aam fwait jmp je pop fstpl fldl jbe mov fidivrl (bad) sbb inc in out inc scas inc add pop sbb add push addr16 xor addb push fwait in xchg repnz stc clc scas scas hlt xchg (bad) notb iret and insl (bad) xchg cs pop mov leave (bad) mov out push inc insl inc notb aam lods jo sbb cmp out roll push push jne es pop and jb lods imul cmpsb fwait pop push sub iret xor xor orb sarb xor dec push pop ret clc xor add out ds push ds test sub std add test inc and cmpsl icebp js cld mov or and jb addr16 sub or xor hlt dec xor mov ljmp ret add loopne and aad lods andl sbb xlat les mov dec xor je jo orl cmp mov add dec lods (bad) ja xchg mov dec mov repz test lods stc les insl daa stos mov mov jne sbb (bad) int jecxz stos mov adc adc fstl jns mov out arpl xchg jne sar insl jecxz (bad) or mov loop lahf js fnop push in and push sub jb fadds mov pop icebp das lods add and cmp addr16 movsb jne mov adc sub mov add (bad) pop lods ret xor push jge shll sbb out mov roll dec or mov or mov fimul pop adc psubq hlt orb loope pop loope mov or jo xor ds cltd push pop jmp adc mov pop jmp xor and in fisttpll cmp movsl dec dec stos push hlt cmp cmpsb in cmp (bad) dec and (bad) mov lea sub cmp sub je jle mov push jb xor cmpsb gs push jg jbe xchg mov fs mov aas mov mov cmp (bad) popf push and pushf or push es add ljmp stos ja mov cs psrlw icebp out sbbb (bad) xor dec add into in mov ds mov daa inc adc nop add pop sbb xchg test sub mov mov xchg push clc mov jne cmp cmp pop dec mov push xchg lods mov jb fincstp ror (bad) (bad) dec cmp jle xchg mov stos mov aad clc rcrl mov ret test into gs push stos in insl cmpsb cli mov mov mov ss sbb ror jp test dec xchg mov dec movsb xor xor sbb int3 repz cmp int3 mov fwait in inc (bad) inc jg imul adc jo scas mov mov xchg sarl adc cmp imul (bad) (bad) pop or cltd adc out jmp pop mov bound pop xchg shrb pop andb push mov (bad) adc subl jne aad cmpsl add push or js gs movsb push imul scas cltd push cmc add (bad) je enter lret into push mov mov push aam mov pop xor rolb push inc add outsb dec or jecxz lods scas pop pop sbb add and pop dec mov or jbe cmp in (bad) ljmp mov mov sbb int3 inc outsl pushf loop (bad) lock lea xor mov call es push stos xor fadds orl bnd cmpsb jmp jl (bad) mov add cmp mov nop in popa pushf adc test fsubs jae pop (bad) xor or fcomip stos insl ss lret out sbb int3 fscale test adc out cmpsb dec add jmp loop inc mov push and mov cmc push or adc adc or mov addl xor jbe popa int3 hlt pushf insl dec lods pop cmp pop (bad) or in popa hlt hlt xchg lods pop (bad) ficompl loop push or test lcall sub bound inc cmp cmp mov imul pop or aaa cmp inc push and mov xchg repnz fabs cltd daa sti adc pop int3 add arpl push inc cli adc xlat inc cld divl fisub cli out pop stos vmaxss xor pop inc push lret pushf or loopne shrl add into fs fadds push sub iret in popf out popa in cmpsl dec cmp loopne rclb mov subl dec ret jp testb inc (bad) les mov mov xor inc scas cltd stos and call rcll or add jge fld adc mulb fbstp inc jl mov loopne inc in ss push adc (bad) jg (bad) mov mov xor cmp std mov jb push enterw mov loope inc cmp cs popf or add gs push pop push in mov jl pop int test mov ja leave aas loope mov pop mov mov ficompl lret rorl in dec loopne cmp not rorl xchg mov push ret or pusha mov xor and lret adc lret cltd mov xor hlt or int push jle fs adc std out lahf xchg or aaa gs addr16 into cmp nop test pop dec mov and jb dec mov lahf sbb push push negb sub ljmp cmp int or (bad) xor clc loop fldt stos add fidiv mov lock or push mov jbe jmp daa mov adc int3 out imul pop test lea pop mov rcll pusha stos add add or fldcw pop popa repnz pop sub mov std cld outsb cs or mov idivl sbb cwtl mov fdiv subl dec movb fldenv negb aaa aad jnp pop and pusha sub aas or gs cmpsb mov dec popf pop test xchg mov pushf pusha push mov test ja hlt jmp mov adc pop jo jg stos push scas mov in fsub arpl fisttpll push loopne mov test jle adc pop and add adc dec cmp loop out sub jno dec sub cli call sub and add mov mov (bad) jg outsl cmp sub lock into ljmp je xlat mov adc push pushf lods test or jg enter mov add push fwait mov jge or lret push xchg sti xor fsubs js roll mov es outsl jmp (bad) sbb int stos push int (bad) in ljmp mov stc mov sbb dec xor pop mov popa imul pop inc jmp pop in scas sbb cmpsb fildl adc dec mov out and movsl roll xchg inc adc cmp xor fisubl (bad) cs push push or mov aam and call add cmp xchg loop and inc mov or clc mov bound or lret cld sbb fldcw subl pop cmovge jae and loop jo in xchg xor insb lock cmp push mov fnstenv add outsl xor lods outsb pop sub negl dec cltd mov inc scas sub ss iret ss push dec les rcl jl xchg dec jge (bad) jle imul mov push cmp js xchg mov jne mov and dec pop pmulhuw adc addr16 insl pushf fdivs stc sub mov inc pop xchg inc jno pop enter inc dec imul sub and jo pop add xchg fmuls push sub mov imul out mov xor mov mov repz pop jns std outsb outsb pop jbe imul jnp rcrb dec sub sub in pop fwait mulb js rcrb sbb push dec repz insl xor or test push and push add push bswap test mov lods push dec jne mov cmp in mov pushf cmp sti cmc mov xor leave aaa and jae dec mov pop repnz pop iret sub push cmp mov xchg sbb push pop pop (bad) int and movsl jmp in enter mov adc in inc mov cmp jne cmp inc dec cmp scas (bad) pushf push mov testl cld cmp test (bad) cli test fs mov in jg roll fmull mov pop arpl push sbb arpl inc dec mov push js inc sbb add (bad) mov loop push xor fsubrl dec jecxz repnz les (bad) (bad) mulb jnp loop movsb outsb add dec or mov xor out and stos and inc mov pop mov fldl fistpll inc sbb pop xchg lock sub iret mov (bad) push adc aas fisub dec inc lahf mov clc dec jno ds pop adc xchg pop mov and outsl loopne sbb mov cmp mov movaps dec test int3 or dec fimul fimul jmp or lods leave inc push or jl sub pop dec (bad) mov sub or stos mov incl fisttpll mov pop int3 lahf jg cmp fist mov ja sbb pop or push xchg fisttp out adc stc imul dec cmpsl sub ret sbb add fs (bad) cmpsl stos cmp mov and jg cmpsl dec sub push ljmp mov in popf jbe scas insb mov jb fisttp jp sbb cmc mov mov (bad) mov mov scas int icebp inc inc push (bad) xor sbb mov into add in jb adc jbe dec (bad) js in gs and in inc push push (bad) clc pop dec cmc push jo dec add out scas pop add loopne jp sub sahf adc jmp sbb inc xchg cmp xor lret iret add mov leave xchg rorb (bad) xlat (bad) imul (bad) mov push in in xor xchg ret xor out imul and lds dec push push fwait jns xor push push aam das addb add xlat adc mov movsb dec inc add or fs cs dec outsl cwtl insb nop xchg mov cmpsl jne pusha mov les and (bad) (bad) and ds lods jge mov outsb repz inc loop push xor jae popa hlt sbb sub push jo lock inc mov in js inc mov pop sbb xor lea pop inc dec into clc xchg xor adc pop stos nop insb sahf loopne mov push or inc (bad) mov or mov sub cs xchg push xchg andl xchg lods in ficomp and xlat mov and and mov cmpsl and (bad) (bad) xor dec push enter stc or cmpsb cmp sbb lock adc jne fcoml popa out ret jge or and pop inc mov adc mov les xor jno fistpl or mov lcall add dec xchg mov jecxz addl movsb or add dec in fmul jge xor dec je incb sahf int lods mov inc inc cmpsb inc scas mov adc inc (bad) insl aaa ljmp ljmp sahf aaa jb xchg cwtl sbb or pop aam into dec xchg imul sbb cmp shl xchg or dec jo aad xchg pop cmp cmp sub dec out lret fs sbb lahf outsl hlt sti repnz dec jns ret push cmc sarl (bad) and imul imul adc nop mov push cmc push sub stos in xor fwait jns fcompl lcall dec mov pop jmp and ds pushf fnsave adc lret movsb insl sbbl sub imul pop sbb mov sbb xor jae iret sbb jns inc or push sahf xor inc pop xchg mov out rcr sub (bad) in lods les aas sub icebp push add in jmp mov pop cmp adc xor pop out scas aam xchg jl jge sbb push shll repnz movsl pop mov andl or pop lea cltd (bad) aad dec js jmp mov stos repz outsb rorl pop insl loope andl fiaddl test (bad) paddd add inc inc aas stc dec push dec int3 rclb addr16 mov xor mov leave and popa xchg push icebp lahf mov clc es sub inc and sub clc adc pop cwtl mov mov push adc jnp mov xchg cli xchg cwtl xchg test mov jge imul mov and mov int3 sub xchg fabs call (bad) jbe cmp and add fldt jmp and insb xchg push sub adc fadds (bad) sub fwait push sti mov pop test dec data16 mov fdivl out and push lods and stos adc lock lods mov adc js in sahf and add add movsb scas mov xlat nop call movsl and test mov push dec leave mov ljmp inc jl inc push push aas xor jmp fistl out popf hlt mov rolb rol ret fcompl xchg adc cmp cwtl xor xchg fisub loopne rclb imul aad sub jp ret xchg push pushf inc push das aaa (bad) das jne mov add fisubl rorl test xor imul jmp lods testb adc lahf outsl mov fucomp lock or (bad) or sahf mov fist cltd inc jecxz js mov or test dec adc call sahf mov mov sbb fcmovnu leave add jne push xor sbb pop jae rcrb xchg pcmpeqw pop jb movsb outsb popa addl fcomps pop push sub ds jmp cwtl iret push mov roll sub in ljmp and ja mov aas daa cltd cmp mov lea jp or out jle inc sahf fs pop sbb fldl aam cs outsl test jl dec shl lds jmp sub mov sahf dec ret pop mov cmc lret mov cmp insb or stc (bad) mov fwait repnz insb sub mov inc lods mov add (bad) or addr16 jl mov mov loope fisttp jo cld sbb dec push ljmp out pop movsl ja push stc cmpsb scas xor sub jge jge cmc adc inc or add xchg fcompl adc push and loope add jmp loop or scas jl mov add push dec push cmp xchg int3 mov mov cld in mov pop ja mov mov pushf xor stc cmp les cmp lret xlat test cwtl adc pop mov and xchg pop je jbe leave das or inc mov popa test or mov mov sub rcl adc mov inc out mov push in js fstps ficom push xlat aas outsl (bad) inc push je mov jo push and cmp cmp push cmp je movsb lcall lahf and sub pmulhw push push out cwtl and fstpt repz or sub in pop test sbb mov pop mov mov dec data16 cli lds ret jmp jo imulb insl aad mov dec ja adc push pop cmp inc inc lahf mov sbb pop or mov inc cmp fisttpl sbb mov xor shr mov jecxz pop int sbb xor lds fdivrl mov mov dec jle adc idivl mov imulb imul push scas push (bad) mov xor add gs and fild xchg sbb insl test iret pop (bad) aad lret lock or xchg in mov push and inc insl loopne data16 mov clc and mov add fidivrl loope cmp mov cvtdq2ps cld dec cmc (bad) mov push mov mov and mov je xor rolb adc xchg mov punpcklbw inc fimul push aam popa into clc mov mov xor inc inc out outsb cwtl dec pop jne hlt sub repz xor imul ljmp int3 in bound xchg test cmp xor (bad) adc and (bad) pop adc and adc xor add insb cmp sbb and jmp es mov leave sub or adc sbb push pop test iret out test cmp xor or adc clc mov (bad) jmp mov cmp inc cmp or dec adc pop jb dec divb nop dec clc or and test mov mov jle xor shrl mov imul dec cmpsl daa jo cmc xchg push outsb dec mov xchg mov rcrl dec test push or fistl add and sub aas dec out xor leave push xchg je jae mov push pop cs js push iret xor add mov lahf mov mov jae push sub xchg xor xchg mov mov dec aad adc pop push cmp jmp sarl push imul cltd jns mov pop mov jmp xor jno sub and mov je jb xor popf adc ficompl xchg inc pushf lret (bad) cmp xchg xchg imul sub inc rorb xchg fwait scas sub lock cmp jge or sub push rolb mov xchg mov js cmp push movl and (bad) out lahf push adc lret mov cltd jb aaa xchg inc sub out fsubrs cmc popa in and and lret sub mov inc xor and dec pop ret ret lahf popa cmpl loope mov pop dec stos idivb mov xchg std lcall xchg mov ljmp imul repz test stc mov fistpl pop sub test in add sub or jle xchg out sbb in jae sbb sbb ret push adc sahf dec cmpsl lahf jg dec and xchg je inc cs out adc ret jne dec clc test insb mov inc in push stos inc cmpsl movsl cwtl mov pop pop push cmpsb imul rorl leave pop cmpsl xor sub sti (bad) dec inc inc shl lcall sbb or jno inc mov mov push fisubl adc and pusha sbb xchg dec in jne pusha sbbl or fs sub movsl sub push add icebp mov mov nop outsb or add sbb mov nop test cs inc dec xor (bad) xlat adc (bad) mov stc iret inc xchg or aad mov jge add test cmp fstpl addr16 and cmp mov dec jge (bad) sub xchg and popf test lds jbe and adc lods or aad push lea add mov xor jmp xchg push adc fadds in push or hlt (bad) push (bad) div mov sub in push sbb push mov push mov fucomip arpl xor lret mov out jbe out push dec outsl fstl out iret mov mov insb and jg push push (bad) sbb sbb sbb rolb dec mov call mov daa cmp sti jns push or arpl adc pop or mov das adc xor xor jns fs and je mov inc or sbb xchg jecxz xchg es mov mov and scas movsb xor lcall xchg sbb mov sbb pusha xchg dec push jo ljmp cmp (bad) dec jb jge ss ljmp fdivrl jmp or push aaa cmpsl cmp and and out (bad) out and (bad) addr16 mov ljmp dec mov adc push fisubr jmp ss cli pop rorl aas xor push pop pop fnstcw push cmc adc mov cli jbe into xor xor shl call xchg aam lds imul push pop ficompl test cmp pop or inc xchg mov jmp imul dec arpl mov enter push xor inc inc xlat pop jecxz push clc dec scas fildl sub bound sahf inc add roll stos cmp dec push or cmpsl lret sbb push lcall push dec (bad) pop jo and and (bad) lock test jo int rcr adc xor dec test mov dec loop or adc sbb std dec cltd cmc sub imul adc xchg sbb mov mov jne xchg enter call pop dec js sarl fnstsw roll jmp mov cmpsb or es hlt and lock mov push inc pop inc mov mov or sbb loop and dec and lock mul inc jbe sub cwtl fcomps xor push cwtl jnp lcall inc (bad) push aaa das mov add scas pop in test mov into and pop and sub stos mov sbb ss stc add jle xor arpl sahf pop jecxz jmp out mov (bad) mov mov aas pop aam dec adc cmpsb inc push repz outsl mov mov shlb dec xchg in inc or pop hlt xchg pushf inc fisttpl out lret cmp gs mov lock push dec data16 mov outsl les cmp pushf adc out sbb and enter sub fistl sarb icebp cmp pop inc xor sti in push jo loope (bad) sub sahf xchg cmp push data16 adc ret jl dec femms hlt dec sub pushf mov push or (bad) lret and pop jp (bad) lcall shrl jmp testb call dec pushf push pop cld sbb add or pop mov xchg xchg push cmp call aaa pop stos (bad) xor add movsl dec add out imul jns (bad) test mov into pop jae fcompl mov or sub cld ret cltd test gs jecxz add ret pop sub nop ficompl in adc mov cmp je fsubrp pop nop (bad) mov stos sub iret les inc push ja inc cmc ret dec inc jp out jp repz jae aad pop mov inc inc sub lods mov push dec jae push xor dec xchg xor (bad) sub and pushf pushl adc cmp sbb ljmp les out (bad) in adc jle lcall in cmp sarl shlb hlt mov stos cmp pop or enter pop xlat adc jmp push mov les push ljmp jl inc adc dec out lds xlat lcall xchg pop inc into sahf rcrl subl out push daa stc cmp mov mov adc mov test out jb push repz jae xor rcrl cli ret sub adc imul adc mov aas xchg or push movsb dec pop cmpsb xchg jo jae mov out insl lahf shr xchg cs add pop repz adc mov shll push cwtl insb mov mov jp js sub add lret jns lods mov daa push in aad gs leave or jb pop lret (bad) ds sbb aas mov pushf jg adc outsb repz in jae sbb cmp imull mov pusha and loope ja das je xchg cmp sbb xchg jns negb dec xchg push arpl mull inc rorl nop mov fimull push arpl fidivl loopne or popa jl nop cmpsl int and cmp add mov mov rclb aaa xchg fcmovu fbstp clc pop pusha or shrl fistp xor call mov std and jno fistpl add mov (bad) xor inc leave inc ficoml not sub dec scas call adc dec cmp and cmp std sarl scas jge push mov dec cmp rcrb and sub adc insb imul mov xor sbb in mov js adc xlat movsl mov lcall enter push xchg jno hlt lea mov lock jp (bad) mov jns inc popf xor imul and mov xor lods mov lock mov es hlt push clc push pop lcall test imul (bad) push push call push addl push fldcw or repz movsl in jno lret jo lea ror dec pop mov mov cs inc lock outsl out sarl lret dec push cs (bad) iret pop inc dec mov mov adc inc xchg sar jns fcomp clc push xchg mov xchg push loope or (bad) xor jmp arpl pop ds jmp mov mov pushf inc push ljmp div sbb cmp psrld fcomps jl jne fwait pusha fmull lds sub setns fist push std (bad) lret jle jne jae mov pop loop or (bad) scas insl or jno add loopne sbb jecxz insb out xchg push cwtl ss add xchg adc gs lea jmp and xorl loop add jmp imul movsl jl push lock notl je jg mulb icebp mov test jle rorl fldl2e push in sub dec imul into push subl cmpsb xchg sub outsb and test mov les dec pop xlat pop cmp stc cltd cmp adc ljmp outsl insl mov push xor out fistp scas aam rorl jge cli les adc mov jne insb lods js inc jo xchg sbb mov (bad) jl push pop insl (bad) pop xor and fiaddl and clc push push movsb sahf enter aas jnp pop mov adc movsl std and sbb popa hlt lods test repnz pop js mov add into mov jmp aaa mov jae negl mov or addr16 xor mov xchg mov imul push mov dec and push scas sub sub scas sub jns (bad) jp fldl pop repz mov mov sarb cmp fdivrl ffreep fwait cmpsl leave cmc and stos dec or mov leave xor add push ss jno and lret ds out add aam pushf jne je adc sub adc cmc inc std xchg call push insl cmp cmc (bad) pop rorl insl repz mov xor je cmp pop push inc xor fist pop cmovle shr cs mov movsb dec data16 (bad) mov xchg xchg bound addl js notb or jb pop lret xchg xchg out js (bad) out (bad) xor call cmovne int3 or jns and imul or insb scas repz fnop and mov xchg mov jns jge loopne iret daa lret (bad) mov add jle dec xchg nop pop mov or add adc (bad) dec inc dec ds mov sti mov cltd imul cmp es (bad) lret fwait add rolb jnp mov xlat rol inc push dec inc js,pn cmp adc movsl into (bad) not (bad) pop and out xchg add xchg mov inc imul jb dec scas test call repnz pop and stc and add sti aad (bad) cmpsb loope mov xchg jb xchg arpl xchg sub push mov pop mov add push test or js cmp mov add mov into dec dec fbld icebp xchg adcb popa xchg out stc mov or adc cmpsb adc nop xchg into out jne loope adc (bad) fisubl hlt test push aas insl cli sub lcall push push pushf mov xor mov xor inc lds xor xorb push rclb repz xchg sbb dec lcall mov pop ljmp lret inc pushf push adc js mov repz jbe inc push jecxz call push repz sbb fild (bad) popf sbb mov inc adc lcall inc fsub or push xor sub dec jo push ja xchg xchg dec bound sub adc sub dec arpl lret xor out movsl and push in repz add xchg sarl out xor sub xchg cmp or mov ja jp mov outsb movsl adc (bad) xlat adc movsl inc pop jmp dec aaa adc mov cwtl mov mov nop xor jg mul push lea stos loopne xchg enter sub ficomp jl (bad) outsl jbe sub bound adc pushf sbb mov sbb stc or ret inc pop notb loop inc aam setp sbb push jb xchg ja (bad) sbb mov in (bad) jecxz fcmovbe inc sub cmp iret or (bad) bndstx cmp cmp xchg dec add shrl jle push sbb xlat adc inc in cwtl enter ret arpl into (bad) sar lock insb out xchg inc rorb or jb xlat and add out mov mov mov cld fdivrl notb sbb pop jnp cmpsl (bad) sbb jbe gs bound xor ds or push push push mov xchg les in jmp out in (bad) xor sbb pop dec jb lods les les addr16 aas cmpsb outsb mov push mov jo out into lds push je xor ljmp movb dec imul cmp sbb mov lret lea dec or rcll in xor mov cmpl rorb or add mov pop push (bad) insb movsl insl xchg rclb mov mov xchg push mov mov cmpsl sub push stos inc mov mov ljmp pusha js or mov xchg cmpsb shll imul icebp stc pop dec sub ss pop xchg lahf sbb sub out les inc jl rcl fnstsw hlt das into das repz adc test jg fidivl popf sub push fldl daa sbb sbb pop adc or sahf sbbb mov sub int sub dec fs (bad) xor mov cmpsb and mov xchg adc xchg popf sbb in adc push dec add sbb fwait push or ret leave sub ja loop sub push idivb scas in mov inc mov popf lds test adc (bad) xor cmp loopne jle xchg xchg mov call or inc test cmp into iret cmp sahf mov mov adc repz int xchg imul mov mov and lcall enter sbb rcrl cli icebp int into (bad) arpl (bad) test sbb cmp adc in xchg rcl pop mov jmp call fwait cmpsb imul movsl aam push jb dec cmc loope fildll adc and cwtl icebp jl das aam adc aaa cmp sbb sti add mov fmuls xchg sub roll je pop mov jp fs inc lods cmp dec mov popa dec push jno xchg mov xchg inc dec mov test fistpl and fldl xchg imul mov sbb push inc dec sahf mov inc enter mov sahf stc sbb scas push bound push jb (bad) mov fisttpl mov insb and mov cmp xlat lret xor adc pop imul test mov inc cmpsb lea nop addr16 ljmp adc pop leave jbe test mov or mov mov inc pop std push (bad) inc push sub pop fwait adc and mov fiaddl xchg scas test xchg cld jle cmp sbb out mov stos sub outsb dec xlat js rep pop or jne sbb stos jge (bad) mov movsb test shrl insb jecxz scas jg sub push idivb test mov iret adc outsb iret inc fldcw ljmp gs inc loope test mov mov xchg jp adc les pop dec cltd (bad) cmc (bad) mov mov push (bad) repnz lret cmp in cmp and xor xchg xor bound je lret nop test push pop and xor push mov movsbl out adc or push push aas stc mov stc mov loopne xlat push or shrb jo aas shlb outsl cmp sub out push mov inc push push inc leave fisubrl sbb aam roll sub cmp jl inc and arpl push inc jae (bad) leave pop out inc or jmp adc cmp mov xchg loop inc pop add (bad) shrb pop rclb dec lret mov and xor ljmp dec mov icebp mov pop pop pop into sarb (bad) jecxz mov int3 xchg mov mov or mov data16 and imul mov cmp dec sbb jge daa test std xorl mov fwait cmpl ds mov rorb push mov inc and or pop dec jno xor enter es imul ds jo jns jb add mov sbb ret icebp xchg and adc gs push or push mov mov pop loope hlt popa dec sarl mov repnz xchg push push pop jns call (bad) lea push vcmpps outsl incb mull enter loope insl pop jno es inc fisubrl jg mov inc inc ds mov pusha inc cmp sub fistp data16 push xor jl fsubrl or test adc pop sti sub sti mov ljmp inc or sub ret out mov insb fcomp ja cmp sub and test stc fldenv xor jbe xor addr16 dec sub lahf fbld std inc dec aam test fcoml lret lahf jge (bad) int3 ljmp sti and mov and mov pusha pop call mov sarb jb mov call std fwait mov cmp xchg lahf sbb jg jo outsb sbbl or mov adc cs mov adc mov xchg mov rorl mov jl insl cmp push push add pop push std clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas (bad) jg add pop loopne mov inc fs dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ss add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec lret dec inc inc push js in (bad) jbe add lods fdivs dec lds mov (bad) push ja scas mov (bad) pop das sbb adc iret sub out das gs push inc mov jp pusha les add mov outsb addl out out jg sbb loopne movsl and lods mov jmp psubw cld cli out ja push cmp outsl inc or (bad) xchg xchg and push inc fistpl imul in (bad) pop je (bad) js cltd lods add ret pop je inc jl (bad) adc fidiv pusha and dec rclb jns push xlat mov dec cmp add mov mov lea cmp push mov ja cmp pop lahf test in xchg popa cmc sbb ficom call dec jg xor ja in call pushf testb mov xor lret jl lock push add push mov jb mov adc xor pop repz aam or cmp jmp loopne lds lods imul int push out dec insb mov inc call mov xchg rorb and xlat mov sti adc arpl (bad) adc or push mov mov lock pop inc outsl mov jae pop add test push in xor mov inc inc add in test adc xchg xor mov xchg popa mov ret push mov inc sub lret clc lea cmpb pushf leave outsl or fstl jo mov aam jns (bad) push mov xor lret cli mov mov mov xchg icebp push inc ret insb scas push mov fist jmp add lea xor dec xor test minps mov ds and loope jl stos mov dec repz mov and repnz cmc xor lret xchg test adc sub cmp sub xchg aaa mov mov adc jnp push xorl int mov in jl jmp sub xor xchg mov lret sub and or adc nop in mov mov cs mov jbe cmp jecxz adc mov mov cmp iret stc adc repnz pusha btc insl mov (bad) mov repz adc cwtl sub adc pop pushf pop dec push out repz push sti xchg test in out imul pop lods jg mov cwtl xor pop sti inc repnz mov rclb jns xchg js and adc outsb js pop pop pop mov lods fs xchg fnstenv add pop push out int pop fcoml mov dec jne add (bad) mov or push xchg (bad) lock test pushf imul bound mov xchg (bad) xor adc outsb shlb inc and int in outsl notb arpl (bad) mov (bad) lock popa iret shll xchg push movsb dec lahf ds popf les xchg adc cltd clc or adc neg xchg inc push test mov int3 imul je push (bad) and add and jg lock add cli cmpsb dec dec hlt mov mov das fucomi dec add out and in cmc lcall stos cli jge inc clc inc jbe push jle mov in inc hlt add movsb adc fsubr mov jecxz and lcall insb lds push adc stos pop inc xchg add or adc in and pop in lcall xor shrb xchg pop cmp stos mov stc scas scas fist hlt inc add sub pop cs iret fadds xrelease mov sahf fsubl lret fnstcw mov jo notl push sub jmp or mov xchg mull jae mov cmp mov into ja pop jecxz roll pop and int (bad) push test jo jge aam mov xchg mov mov xchg pop cli pushf outsb (bad) sbb mov out pop mov das (bad) inc pop or or dec mov dec sbb loopne in cld hlt ds mov outsb lds mov fmuls inc sahf imul sub cld imul mov inc mov jl inc xor add mov inc sub ljmp shld jl (bad) push mov imul popa out movsl int3 ds fildl jbe iret (bad) idivb xchg (bad) xchg test scas pop xchg dec shlb or adc ficom xchg test movsl roll push stc loop pop cli imul pop jp xchg jae xchg out xchg scas lret jne cmp fwait and cli and jns pop ds enter dec push ss nop imul shl arpl pop js sahf jne mov pusha cmp cmp in daa jecxz (bad) xlat xchg lods stos insl or xchg arpl lcall loop xchg inc scas mov or xchg fcmovnu daa jg (bad) adc push sarl call je scas add and push scas and pushf pop test jle repnz xchg movsb scas xchg fildll and adc or bound inc (bad) lock mov mov pop cld lahf insl mov mov lds cmp out mov push arpl mov fistpll adc sahf stc xlat or xchg or jne (bad) push inc ljmp or mov inc push cmp jnp push dec mov mov ret cli pop ds movsl adc sbb cltd popf (bad) into scas jmp add mov mov inc push enter shlb cmpsl pop in fstp es cmp dec (bad) or mov lds inc mov cmp lods das hlt mov jne insl or add aas mov inc xor dec mov mov inc (bad) sbb add jae addr16 sub pop je xchg xor movsb popf inc mov and push xchg shll push xchg adc fs aad mov fsubrl aam sahf insb test push cmpsl mov fs clc aaa leave adc sbb rorb dec mov cwtl xchg fbstp and push fbstp push mov arpl mov ss pop ja jne decl cwtl jmp das aam (bad) lcall push cmp cmpl icebp insb add cs mov test imul stos pushf add jne (bad) xchg xchg in sub out call ljmp addr16 jmp out movsb jae imul or lods add dec sub clc dec cmp dec daa inc jno mov adc adc xor ja pop pop mov jge mov jp xchg xor insl sarl rcrb mov xor push push push sbb movsl sub push push cmp sbb leave cmp lret mov cwtl xor mov adc rcr and xor push xchg aaa xor mov lock fs out or jmp stos nop insl imul aas sub clc xchg sbb lret into mov jecxz es das call cmpl hlt enter dec jno nop test adc sub adc mov and cs ret call dec and mov stos dec sub mov enter xchg je jmp imul dec jbe mov addr16 mov cmp cmp inc fwait jno inc fildll xchg scas mov sub xor (bad) int mov mov lahf cltd insl cmc sbb sub test neg test adc shr fisubrl out rclb mov test into xchg dec insl push jno iret jo lock andl lds pop sarl mov rorb inc pop cs lcall fisttp dec repz cmp sub orb pushf enter push adc (bad) adc imull mov in adc and out push dec stc in push jl lcall insb cwtl cmp add mov fmuls inc lret fisttpl jbe inc push cmp outsl test sub jno or cs mov jne sbb sbb jne xchg ljmp insb std outsb jae fcom mov out int3 mov cmp sub orb fisttpl cwtl clc jo in xor sbbl xor mov mov and loop mov add test dec cmpsb leave (bad) mov lcall xchg in lcall mov mov and imul push jb fwait xor pop adc daa or imul iret ljmp pop sub push and lret rcll xchg sbb pop jge and lahf jae push jmp xor adc repnz (bad) int3 dec repnz cwtl (bad) mov jmp imul js xchg xor add jge ljmp pushf adc ljmp lret xor repnz adc pop sub mov adc lret out lods arpl es mov or mov mov jae cld mov (bad) in pushf cwtl out mov jns fcmovnb sub inc cmc pop jbe les adc sarb xchg mov pop cmp pop xor sub imul lods (bad) jo dec xor sub pusha mov popa pop fwait jne ljmp (bad) outsl and dec add xor sbb dec (bad) outsl inc mov push inc inc scas add cmpsb daa sub pusha mov mov sub dec stos jo inc xchg bound or xchg inc mov imul mov icebp mov xchg arpl fs cmp add mov std dec clc pop pop ss (bad) lret (bad) leave cmp call (bad) ret ds repnz jns ds enter das sbb movsl xor inc cwtl or push jmp and or or mov sbbb fidivl add xchg push pop in data16 loope adc xor add imul ret xor repnz push in mov sub and mov dec adc fs pop in jae insl dec mov dec jns push ficomp sub adc lcall std add or aad cmp add clc lock in das pop inc rorb sub or lds shlb scas mov hlt mov enter sub ret addb adc xor test sbb shll sub sti out movsb xor inc mov pop fist loop dec mov jno xchg adc cmpsl add or dec xchg bound pop and dec pop xchg cmp test es lcall mov or sub imul push stos mov aas out mov stos in sub adc dec les (bad) and jno testl sti cmpsb rorl add (bad) insl push sbb (bad) inc mov push fxam pusha mov mov in sub adc clc cmpb sub mov or lock cmpsl popa sbb sbb mov and sbb sahf jle push scas pop jbe scas cmp or pop test or cmp enter cltd mov out cwtl leave outsb sbb je xchg es mov sbb out jne js fwait mov repz sub mov xchg ljmp or das sub lcall pop pop mov mov xlat cmp xchg xchg mov add cmp aam pop push ret lret and lahf inc xchg je outsl stos mov (bad) xor jmp call fwait add popl rcrb out cmpsb ljmp or scas mov jnp in icebp lcall sarb dec out xlat int jle pop push dec popf jle int mov cmpl lods push pusha xor fnstenv clc sub xchg or outsb sub inc mov test and call adc and jmp leave xchg lods mov cmp add loopne pushf adc fisttpl imul clc stos ret push mov adc lahf sarb nop mov mov xchg out mov dec and sarb lods ficomp hlt mov cli outsb cmovge (bad) pop and test lods imul cmp ljmp imul jno mov mov add (bad) jnp popf add push xchg ret mov iret loopne or cli imul inc push jmp je pop (bad) mov xchg xor and stos std dec jle xchg arpl mov sub pushfw pop inc sbb out pop jl andl dec and jae inc xchg jo or into mov sub out mov cmp jl xor inc xor je int mov jbe rcrl dec jecxz cmp mov sbb add xchg sub clc fmulp (bad) das aad add mov fbstp loope push pop or loopne sub xchg mov jle mov cmp pushf addl ds (bad) inc dec sbb sarl lock jb dec fwait sbb mov pushf gs push (bad) push rorl outsl dec xchg mov ds out jae sbb jns jbe (bad) xor lds sub in mov (bad) hlt fwait mov push push addr16 or mov das std fisttpl rclb sub aas push out loopne jge (bad) sar hlt lods jl cmp push imul out lea sub or mov test loope sbb in stc xchg ljmp inc clc jb cs (bad) das sub xchg jge push jns xchg xchg les arpl (bad) ljmp or lcall xchg or cmp push and xchg int3 mov xchg and pop enter or test scas ret adc push cmpsb je stos and in cli inc mov xchg test adc leave addb cmp xor add adc sub jl or mov ficompl rcr mov jo cmp push or mov lea or imul push std inc pushf cmpl adc lds (bad) xor cmp sub fimul sub aam ret fldt in sub push arpl movsb stos cmp lea lahf lods pop cld fs mov lods or and cs push in fdivs nop andb std jmp stos xchg ret insb mov pop mov jbe mov (bad) in scas arpl arpl cltd cwtl mov push add cld cmp sbb sbb jb lods call or loopne jbe mov hlt clc adc adc inc or push (bad) call pop pop test movsl pop ds gs loope,pn popa cmp clc dec ret add pop mov xor and mov outsb std (bad) notl xor sub dec popa jg mov cmpsw sbb fs out hlt xchg fistp mov call lods sub bound push inc mov mov (bad) loope push jmp add adc mov into jns pop add lea test mov aas pusha mov (bad) loope fildl pushw test add cwtl icebp dec lods mov mov sub adc lods adc nop pop cmp and rcr pop loope out jnp loopne fwait add jge (bad) inc stos xchg and cli push imul aas mov jl dec lods gs mov bound push (bad) hlt push cmp mov pop pop neg and fs negl jo out add push (bad) or mov (bad) loop mov fisttpl and xchg inc inc inc cwtl in inc out rol xchg cmp add jecxz xor jl imul jo mov jmp cmc xchg movsl mov jl xor repz (bad) jae in out add sbb imul inc pusha movsl push or push cld jge sbb ret pop mov ret movsl and jns lods lcall dec mov sub push call js mov sbb cmc cmp push (bad) xchg popf mov jae xlat add mov and xchg jo les adc push out jbe out jns add test add sub push sub lahf and mov (bad) push or xchg xchg mov sti xor xor pop dec dec mov jne mov mov not push jg scas outsb dec pop push dec ficomp pop mov cmp (bad) insb push dec ret cli fst lret or sbb add outsl das jno mov ror cmp cltd movb testb int3 cmp bsf jmp mov jp pop add jecxz xchg sahf stos adc gs (bad) incl mov cmc mov xchg ja lret aam sbb out pause ss mov lcall mov or fnstsw xchg ljmp mov ljmp pop jecxz dec mov aad dec inc xchg jae nop icebp sbb shlb clc pop sbb jl pushf push stos aad xor hlt shll jnp mov fdivrl sbb xchg lods and imul std loop fiaddl outsb cmp mov and mov xchg inc js pop les test add dec lret pop in dec (bad) mov dec cmpl dec sub dec int cmpsb mov mov movsl lods insl out int add jno ljmp clc (bad) jns push ss sti test cmpsl test inc stos jecxz loope (bad) push out adc xchg push xor sahf add mov or adc and outsb sti push mov cmp aaa push cli lods or push mov adc xchg into es mov pop test out cmpsb ljmp adc cltd lcall stos sub stos hlt push test cmpsl arpl sbbl sub cmp and clc mov cltd lods jle inc iret loopne or loop jg mov cmp sub je mov jb arpl rclw push mov in add pushl fs add pop es pop dec (bad) xlat sti daa push fsubrs sub (bad) aad xacquire dec inc or inc ds movsb into jge push dec sbb sbb fwait xchg cwtl in rorl test dec xchg (bad) jne int jmp orl popf sbb and cmp nop inc or and inc loope add ffree sbb pop inc adc jmp data16 jl stos fmull add popa xlat and adc fwait sub insl or in xchg imul xchg mov mov cmp sbb pop xor adc pusha add loopne insb mov insb test lock jecxz xchg or cmp inc inc mov sub sahf sbb push xchg push stc push inc dec and mov js out sub jne stos popf (bad) cld arpl cwtl or and loope xchg sbb inc fs mov dec (bad) dec adc movsb jnp mov fwait ja fwait (bad) int mov inc rcrl dec mov fisub stos jo fisttpl ret adc sub lahf ftst cmpsb jbe outsl lock xchg sbb lock sub popa inc xchg dec xchg and adc inc and insb shl fistpll mov cmp je inc shrb pushf xchg adc insb ret jecxz int in mov mov gs dec mov out lret (bad) xchg pop and and mov mov (bad) (bad) sub lds sub xchg outsl ljmp pop sbb sub repnz stc or outsl ja cmpsl inc lret push xchg inc ss inc int push or les scas popf mov loopne ds push fist xchg dec ljmp lds jo call sbb add jmp xchg sbb lcall rcrl jo and bswap jne sbbl int3 imul pusha faddl fisubr xchg mov inc nop mov popf call inc cmp mov cmpsl fwait mov pop dec xchg cmp push add jge popa je nop push ret loopne cmpsb xor lret (bad) xor cmpb stc out ljmp xor pop jp adc nop xchg iret lds cld xchg (bad) mov mov push sbb pop cmp adc test jmp mov loopne jne and jg cmc aaa sub insl or xchg clc xor mov cmp btc jle sbb mov cmp xchg adc mov sti mov dec sub mov sbb inc inc push pop les es mov fisttp jb push or jne adc push es lods fwait xor xor jg jno aas cmc (bad) xchg lods mov icebp pop movsb mov add repnz pop pop mov dec lock (bad) push push roll or sbb cmp and jns cltd and inc jmp mov or rcl xchg mov adc xchg hlt xchg mov sbb or and pop (bad) dec dec lea call xchg pop dec call call dec push outsb mov jbe or adc (bad) dec add hlt int inc iret les les add mov sub mov mov xchg pxor sbb mov out lods lcall rolb push add xchg xchg pop pop dec (bad) dec jp fwait sbb fmull mov push cmp pop adc lock test or dec cmp jg and lds jmp (bad) mov popa jb pop sbb mov xor aam push movsb cmp negb jae jne loopne mull mov repz jg out adc inc xor xchg repz xor and mov xchg add (bad) fmull pop xor (bad) dec and jno daa (bad) (bad) push adc mov or push mov inc (bad) stos (bad) popf dec xchg push dec adc mov jge sub (bad) (bad) cmc cmp xchg mov (bad) or repz idivb lcall add int push stos jno das push repz mov fisttp scas mov in inc ds sbb out mov loop mov es repz mov mov cmc or sahf dec xchg xchg mov (bad) sub sarl mov cmpb lret lcall lock adc jmp xchg push dec mov in out rcl in xor jns push lret jle xchg imul xchg mov add negb cmp mov std mov outsb aas mov pop ds mov std lret ljmp mov push pop mov lods push arpl mov iret pushf cmp sub push int pop jo mov adc test es mov loop jle movsl and ret in dec mov or stc mov fstpt ja dec (bad) sub push inc ljmp icebp fisubrl notb cmp fiaddl inc xchg in push mov jns jl lcall add cmp dec test into xchg xchg lods hlt mov xor sbb std adc popa cmp cmp jno mov aad and pop pop es xchg in leave mov imul push jmp sbb mov mov stos lret pop adc push pop push lods push xor call arpl stos repz scas pcmpgtd cmpsb mov push insb cmpsb pop mov fstl pop (bad) aad mov inc jb sbb cld and jae or inc xchg lea push inc lods push pop js adc lds emms pop (bad) mov inc stc xlat movsb jle cmpsl in outsb subl in rol cli xor pop sub fdivr sbb dec imul es sbb cmc cmp dec (bad) fisubr pop addr16 out popfw cmp sbb jb shl adc push jnp push fistpl xchg insl addr16 cmp jg sub cmpsb sbb ja mov push push lret mov mov shlb nop cs add push mov pop push push insl jmp sub orb into fnsave cmpsb mov add lods scas jnp sbb push inc push push push jmp xchg ds and push sti mov out push aam leave outsl mov jl jmp data16 popa xchg and mov and pop pop idivb and jns push sub icebp mov (bad) push call and ret test mov scas inc sbb cmp fildl xor out mov fcmove sbb sub in sbb shlb fsubl jmp or addl inc outsl jge xchg fistpll or pop sbb iret mov cmp cltd (bad) out js jne dec and push ja add jge push push mov adc hlt push outsl jmp (bad) xor es nop xlat xchg xor dec jbe or mov (bad) jg and pop in dec ret mov inc adc scas mov push data16 push (bad) daa sarl clc jo mov push pop fild lcall mov jo loop mov call test rorb and leave les lret sbb dec or cs pop push fs in inc orl add mov shr or icebp fcomps xor aaa pop std sub sarl roll fxch jb in pop cs cmc add dec mov test sbb dec mov les addr16 aam cmc mov adc faddl push test adc sub sub js sub inc cmp adc jp lock cmp sbb stos arpl inc enter mov push or jo adc shlb adc idivb loop outsb movsb add (bad) cmp pop fistpl int mov ret xchg lahf xor test mov rcrl test cmc in mov call punpckldq int (bad) cmp or mov mov add dec cmpl int scas in idivl sub push scas inc cwtl mov sbb psllw mov jg pushl jecxz and xor sbb inc jo repz in sbb out push popf bound sub sbb mov xchg aam push xor shll ds add scas cmc sbb mov aad sahf daa (bad) das leave insl pop and cmp jmp mov test das out enter adc imul arpl xchg int3 outsb or jecxz jo jl imulb sbbb ror cli sbb daa repz xchg faddl or pop decl mov xchg mov and pop cmp xchg mov xor mov imul or or adc inc mov insl mov xchg adc inc jg movsl and add in jns sti push test cmp insb dec or jns mov pop pop dec push lahf xor push (bad) fidivrl add nop (bad) cmp dec cld cmp icebp and jp divl mov adc fsubr jns push arpl inc dec xchg cld sbb mov daa popf sub adc imull scas mov mov lret push inc (bad) fs mov xor cmp pop cmc cs in and mov push aad inc data16 lds push fwait sarl mov push or rol mov loop cmc into sbb loopne and xchg push push cmpsb inc mov inc sbb pop cmc mov lcall push mov aas movsl xchg bound inc inc je jle stos (bad) adc je pop divb xchg aas (bad) pop (bad) cmp push push mov cmpsl sarb cmp xor lods fstpt scas xor popf out jge push movsb inc into pop (bad) jecxz rorl pop mov sub fnop mov fs or cmp mov leave xor jecxz sub movsl push in and stc mov hlt popa cmp add insl out xchg fimull inc fistpl dec inc adc dec dec push sbb pop cmp and scas push xlat inc imul jo mov inc orl pop jle sub xor ret xchg xor out and lret lcall aam mov mov jae adc test jno sti rclb rclb sbb mov ret out cwtl push sbb iret ret loop jne xchg fsub loopne mov inc daa fistpl and mov jle jmp pushf push arpl and cmp cmp pop out cmp aad int3 (bad) jb mov xchg mov shl and mov and ja fcoml mov sub addl stos or lahf jbe movsb insb jmp adc into in neg inc mov aaa jb popa decl mov jg addr16 jl and mov mov ja jl push dec lret mov pop scas pop add mov popa cmp jns push pop xchg flds cmp and dec outsl lock mov mov mov sbb jno into in divl js fnstsw fwait push sarl pop out cmp jbe xor clc add push xchg es push jno in mov cwtl clc es test or repnz repnz pop test mov cld sub call cmpsl sbb cmp sbb or push (bad) jo mov cmpsb jnp (bad) and sahf jb in xchg mov stos cmp cltd add mov test push shr daa mov inc out mov cmpsl es pop xor imul xchg mov inc popf add rcl popf test and (bad) (bad) fldcw xchg adc loope and inc scas lods jne cmp xor sub pop inc mov adc (bad) scas and xchg adc xor inc ss ss dec sub push mov pushf mov aas pop out (bad) cli shlb enter loope mov jo pop push push xchg push sub push pop pop jmp cmp test mov mov pop pop add sbb pop push pop out xlat inc (bad) xor sbb out cmp mov jg stos das imul cwtl jne push loop mov insb verr pop sbb gs adc jmp dec daa (bad) xor xor ljmp pop xchg loopne inc repz test pop pop lea (bad) loop mov aam or imul xchg out ret sub rep loopne add xchg mov int push xchg pop insl ljmp inc xchg fwait (bad) cmpsl adc gs leave daa pop xchg sti jmp cmp (bad) pop jp mov jo outsl int inc jg jb mov fsts and jns fsubrp stos pop arpl aad inc mov bound test int3 call push sbb adc loopne and jne mov dec jae stos int3 sbb mov std adc cmpl mov xor mov pop fisttp sti arpl jmp repz hlt ret (bad) push in push mov aas ret je rorb movsl add roll push imul cmc mov and hlt jbe mov mov insl sar into add (bad) outsb arpl pop rorb mov jle cltd mov mov sub fcmovbe mov pop push lret mov adc jmp cwtl pop aad icebp adc repnz inc dec test xor insl pop arpl sbb mov (bad) arpl xlat sti (bad) cmp fwait xchg in rorb out or pop cltd andl cltd and scas fdivp lods call add stos insb jae dec addb mov hlt test rorb xor dec inc sti xchg pop cmp lods adc mov loope lcall add xlat xchg fbstp mov inc and xchg mov stos rclb lret push (bad) cmpsl mov add cltd xchg mov cmp lcall adc shrb xlat mov fidivrl pushf jns push scas fild aas mov cmp cs xchg sbb dec sbb or jl inc xchg inc or xor inc xchg sub rorl (bad) rcrl sti jb outsl mov neg lahf pop mov mov inc pop cmp loope mov fsub pop add popf in mov in or cmp je or mov dec pop aaa add notl xlat aas or imul add sub in push insb mulb cltd jle sbb mov add outsl and outsb and into pop js pop in std xchg adc scas lock mov push ret sbb adc lret pop jmp mov add test adcl xor inc subl xchg (bad) sub jle arpl cld xor lock sub movsl and or xchg push jnp data16 out mov out nop insl mov in dec es jg pop xchg subl outsb pop sbb push fstl mov int xlat lods and jle inc rcll cmc movsb int3 ret outsb add xchg dec fildll loopne jecxz jge imul xor out (bad) sahf lds push pop cli fwait pop js repz outsl jb sub dec movsl js pop bnd sub push decb mov iret push mov lahf sbb inc not mov les jo (bad) outsb rcrb rol fild cmpsb sub add jns sub push and cld adcb xor enter xchg fwait in dec fcompl mov in pop repz pop push cmp cld loope cmp aam pop dec aam test nop push mov pushf jno daa stc jno stos cmp lds mov aad pop dec outsb xor incb loop add aad int3 jle mov (bad) test or cltd repz stc orb fs cmp repz in movsb sti xchg mov fmulp or das adc pop lea xchg or sub (bad) pop pushf outsb into rcr outsl mov loopne mov push cs dec loop test push mov xor in (bad) dec mov scas xor dec rcll mov jae or loopne add mov lods dec mov sbb fdivl hlt rcrb xor lcall push out call and xor mov ret and or mov sahf pop mov cmp imul pop fsubr pop inc in inc jecxz in jl arpl dec es addr16 jae push push mov push (bad) lcall sahf xor cmp and test rorl mov dec jb insb ljmp sahf aad mov mov ret cltd ret sarl iret jecxz push sbb gs xchg fs pop xor mov addr16 mov mov push xchg mov jmp mov rcrb jge add es lods dec int3 mov andl push xor mov add cld dec inc stc (bad) or les rcrb iret and sbb daa imul lcall insb pop (bad) pop loopne mov mov add out ljmp cmpl (bad) mov daa dec sub lahf lret in notb ror notl mov lock cmp dec pop fidiv ja fistp mov pop popa ss mov inc outsb and pop fwait inc pop dec cli xor loope test out cmp loopne mov insb sub add aaa add ret inc and adc xchg movsb adc xchg jp cwtl les pusha dec or lret dec lcall fistpl pop add xchg enter faddl sub inc (bad) dec das mov maskmovq negl popf push mov vsqrtps mov stos and xor lea pop loopne fnop lds fbstp jnp push lods push ja add outsl imul xlat (bad) fldenv shll (bad) jb bound jg sbb jge dec xchg push arpl xor and xchg dec shrb ja mov inc nop mov xchg or shlb pop cmp cltd jg out add adc (bad) cs loope jge cmp dec adc pop push iret add ja into lea pop out adcl jmp push sub icebp inc mov adc push sbb xor xchg sub mov in lea mov pop dec in xchg jle (bad) and stos (bad) dec and iret lret dec pop out push xor sub jp out sub jmp xchg imul xor cli aam int3 loopne xchg cmp fnop repz test xchg outsl ret jnp sub cmc and ret int push arpl hlt and and jge push cmc push insl push popa dec jmp mov popf and pop cmc cmp cltd dec (bad) pop push mov mov xchg mov out mov insb bound lret nop push leave outsl cmp push or and scas mov mov loopne mov adc mov mov dec jmp sbb xchg xor ret fldl daa repz inc ss jecxz int sub fnstcw jg and test je es mov bound cmp add dec sbb (bad) jbe dec sahf scas pushf roll pop xor add hlt cltd bound xchg and enter push cmp add mov sub mov cli das ljmp cmp and push out addr16 daa orl jnp (bad) inc or mov pop (bad) int3 cmp fcomip mov test jae jo aad cmpsl lcall inc jecxz stos and rcr jle sub push push add inc test or mov hlt (bad) fs pop fisttpll sub add jl pushf pop push dec push testl push rorl dec sbb xchg in fcoms pop jg mov in and and dec ds cmp (bad) bnd cmc inc pop lahf js jecxz mov dec xorl repnz or adc ljmp fs mov pop stos dec inc repnz out adc jns iret mov adc repnz lcall enter or xchg add sar mov pop push xchg in (bad) pop cmp (bad) int3 out xchg add or fs and mov or or and sub jno cs and mov cmp jle adc fstps call mov add jle std scas cmp les insl adc inc cmp mov xchg jle cs gs pop add in mov (bad) and mov pop ret sbbl push add or shll mov xor inc ret testb jbe push xor cmp and push sbb mov cs jge dec repnz push push sbb mov pop dec ds aaa push pop inc ss sub jecxz add insb adc call sub push pop push pop aam adc (bad) sub gs sbb insb mov add stos test cmp xchg and or sti ret or test xchg (bad) jmp cmp mov add and cmpsl adc sti xchg pushf mov xor fmull jns dec or in xlat xchg dec outsb jmp xchg push fild cli (bad) es push push push cmp pop add scas jge pop test popf or xchg imul pop test mov cli push xor xchg jae ljmp (bad) shlb inc adc dec mov or lods (bad) sub sbb push fstps jo inc dec les in cmp scas outsl out fucomp jno xchg mov iret and (bad) movsl or adc inc pop imul sub dec daa lretw mov test xchg sub es pushf imull out or xor push dec fidivrl xchg xor (bad) pop aaa adc cmp add stos out dec je lret adc push (bad) aad fwait lcall push mov outsl mov xor sub mov sbb add gs cwtl aam pop (bad) add and cmp and (bad) mov loopne cmovnp mov into add cmpsb aad jb popf xchg cli and into inc sahf push xlat popa (bad) pop lcall pop (bad) hlt mov fisubl push push jae roll xchg dec adc ja fsub mov adc sub out out lds arpl mov shlb popa pop cmpsb jp or xor mov movnti sbb and push and xor jg adc or mov cmpsb gs sbb dec fidivr daa subl cmpsl inc push fmuls cs xlat ficom fisubl xchg mov adc lahf stc xchg out outsl and daa mov sub jb les add std sub pop loopne jle rclb dec mov push (bad) in inc stos (bad) aam daa push dec fiaddl mov push add lahf idiv jle jno mov in les shrl sub jae mov jle rorb push push add fwait sub dec mov inc bound rclb andps mov inc jae adc adc test jle in ret fcompl dec add js mov and sub push gs push pop jmp push mov mov jno adc loopne ret in popw insb pop aad dec cmp add cmp cmp pop pop ret test gs out enter decl in icebp (bad) ja gs sbb out mov or push xchg push movsl dec cmp dec push xor mov mov sbb jmp cmp mov adcb xchg sub loop fsubr lahf (bad) js icebp test loopne add push aas xchg mov mov dec sbbb jne ljmp cmp sbb jge mov mov jbe jle mov adc or xor pop inc data16 ficompl call inc out pop in aaa outsl mov add pop add loop lcall or xor cli inc rclb sbb adc test jmp movsb daa add clc or fsubl jp sbb std cmp cmp mov dec lret aad mov sbb dec fs sbb std mov rcrb push out mov lods imull push jo daa xor (bad) addr16 mov fiaddl mov popf mov cmpsb inc pop pop mov insl sub lahf fsub or (bad) outsb and mov mov fisubr mov out pop lcall pop out dec loope ljmp daa outsl xor aam jne add popa lahf jecxz aad lret or loope xchg mov (bad) add sahf pop (bad) popf int3 (bad) and les mov xor lret out fnstenv and test outsb (bad) (bad) cmp and lea inc inc xor int3 repnz xchg call jmp inc pop (bad) (bad) ss pop pop lcall dec jmp test out dec adc dec stos push scas xchg repz movsb pop jmp and push rcll sarb (bad) out mov (bad) ror leave mov ror cmp push std xor xor pop cwtl jne fstpl xor cmpsb mov fimull rcrl pop vmwrite loope dec clc inc scas rcll xor cmc lret pop lahf mov mov add jp into mov sub xchg add inc dec loop cs gs cmp cmp fwait mov jne mov scas inc shlb leave dec fldenv xchg xlat movq lods repnz pop mov push rorb imul mov out pop lds insb and lds call icebp push add push (bad) out aaa aad mov jle adc fadds and push sbb loope fcmovb cmp mov push les out fnop roll sbbl sub paddq cmpl imul jne out (bad) jne mov inc inc in imul mov repnz jns cs inc cmpl scas push in push rol sbb mov sbb mov or mov mov aas jb fbstp cmp jl ds add jnp aam sbb pop cld in xchg dec mov in call shr sub aad push sbb lret add sarb mov fildl sbb lea jae xchg pop movsb stc pushf pop iret (bad) sub mov dec jbe int (bad) xchg ficompl xor sub sbb mov dec nop inc dec add cmp jge cmpsb daa sahf repnz mov inc repnz push mov sahf push (bad) out xchg cs dec aas fnsave jns pop aam sbb dec icebp pusha (bad) and and mov in and inc sti sbb lods (bad) mov pop add repz xor sti sub push lods pop inc fdivr mov mov pop mov and jmp cmp movsl jb popa jl (bad) or aad lret mov inc sar leave jns lds aas std cvtpi2ps aaa in outsl addr16 jnp adc insl fisubr dec push (bad) jae test or daa sbb test (bad) jmp xchg call outsl int leave clc mov sti mov jp movsl jnp and xor fstpt (bad) push push ja out aaa cwtl sbb push stos inc adc test cmpsb add int3 xchg mov in cmp sti xchg mov or ret mov xchg mov rcll pop adc sar pop mov test (bad) xchg jge inc (bad) sbb aaa push iret mov (bad) mov mov push xor jmp mov cwtl lods mov push cmp sbb gs mov push push ljmp sub aas outsb add out sub push fs rol nop outsb enter sub stos mov insl imul dec jecxz leave jle ffree pop jge add movl inc (bad) in (bad) mov push dec lods add popf push add nop orl les js pop pop pop roll inc out ja bound push pusha and xor fcomip aad jle adc sbb cmpsl adc lods xchg sub enter lods addr16 (bad) and mov lea in in das out (bad) std out iret mov dec push sub (bad) fsub popf lcall pop (bad) and push dec je lock stos push lods push out shrl pop cmp es sarl mov aas mov mov out fild sub or lret movsb pop movsl lahf xchg xor inc add sub cmp and or cmpsl insb loope (bad) lods or stos mov movsb je mov mov cmpsb cmp mov inc push push cmpsl inc mov push lcall xlat insl sar dec sub push nop xchg (bad) pusha test fistl dec sbb dec fxch addr16 movb sub out loope xchg aam out mov mov pop imull fs dec cmpsb cmp jnp xchg addr16 push loope stc pushf movsl xchg sbb test mov lds push (bad) jle div sahf in dec int pop stos jno xor movsl xorl int3 sbb sbb mov (bad) xor mov rcl and in cmp mov xor daa sub aas scas push jb lret jecxz xor xor xor xchg inc orl push cltd test lahf xlat mov je imul insl inc push mov inc pop or lds gs pushf cmp or enter das sub sbb jmp (bad) sbb fucomp xor lock cmp add mov mov fidivrl cmpsl xor fcoml inc arpl add pushf out cmp cmp cmp mov in sbb inc orl mov push dec pop xor adc cmp xor lods sbb jns test test push nop es inc push cmpl mov adc loopne pop in mov test cmpsb jl pop xchg and aad adc sti jae imul es out popa int3 mov or sub mov ret inc rcll sub cmp movsl outsl jo mov cs (bad) fcompl (bad) pop cmpsb xchg enter and mov fnstsw cmp loop bound xor mov out or jmp xchg pop cmp scas mov (bad) (bad) dec mov mov dec push aam fsubr cmc std or repnz push fs fidivl mov fs mov jecxz jmp mov enter clc jmp sub (bad) (bad) push cmp das int3 dec imul fmuls fldt sbb jmp lods inc inc add lods imul lcall jmp std sub stos pop mov (bad) push xchg pop dec jp push cltd push cmc fdivrl or cmp xor (bad) js sub lock inc and pusha popa mov adc mov sub imul js pop sbb pop jne or and pop mov xchg push pop ret push lahf jl and push (bad) jae mov xchg fnsave (bad) sub jno lods imul fdivs mov ss jnp push adc xchg mov insl pop inc shr adc adc enter aas and mov outsl (bad) jl test add outsb xchg pop mov push (bad) out fisubl add rcll fdivrl mov push pop sahf pop or aad mov aas lret es aad cld mov aas push loop dec std into jmp cmp add popf aad gs sahf jo out push sbb xor lahf add (bad) leave mov int3 mov cmp or add pop mov movsl add push add (bad) push out sbb push mov mov shrl fdivrl inc subb fisttpl rcl sbb push inc adc xchg push dec sbb jg mov xchg mov es push mov or std sarb mov jle jmp cwtl push out and sbb movsl jno rclb out (bad) cli xchg aas sbb fisttpll shlb jne (bad) mov dec shrl rcrb xor sbb hlt addr16 incl sbb or add aad int mov xchg dec fisttpl sahf jecxz or (bad) icebp (bad) stos sub cmp cli ss lahf les ja imulb popa sub xchg insb cwtl aad push inc call sti lahf icebp and add lret mov or dec xchg mov inc aad xor add adc push fmul data16 xchg cli xor out cli sbb insb dec addb pop push sbb das add ret dec mov mov sub (bad) lcall (bad) mov jne subl pushf mov ja adcl cmp ficompl xchg add mov mov and (bad) jp clc jbe mov or xor mov pop je enter adc cmpsl xor jno icebp xor cmc test mov in ljmp mov mov adc cmp jcxz xchg inc movsl jge sti xor int fldt stos sbb jne adc xchg mov das (bad) lret daa mov push stos push adc mov pop sbb imul lcall push shrl cs mov dec jmp int3 cmp les pop lods test push pop dec mov push mov jo cmp mov jno ret mov lret and scas and inc das pop das lret rcr sub mov js or aad (bad) sti push mov and push pop mov je xchg add movsb lret in outsl and mov jl fwait xor movsb push push faddl jnp lret repz popa cs (bad) adc mov pushl mov std roll sbb jl cmp (bad) mov std icebp sbb jg inc sub clc divb pop adc xor das jno and dec jo test movsl mov sbb pop pop fwait arpl ds gs sub fild mov andb cmp mov call cmp sub paddd push jg leave add cmc test dec es jge mov dec ret sub jne mov dec pop inc ss ficom mov mov lahf cmp aaa sbb hlt xchg cld mov add add fiadd cmpsl mov mov mov mov out jmp push ret lret mov mov xchg scas loope xchg fistpl dec cmp icebp push in jo push jbe cwtl enter icebp sbb dec or cmc inc mov movsl movsb adcl mov fwait (bad) mov aam into mov jge cld mov ret shr in mov lcall jnp lds xor and clc inc out lahf fcoml dec movsb fdiv ljmp dec cmp sbb sub nop mov aas nop je or xorl mov jp jge or jmp inc xchg push es adc lahf sbb sub mov adc mov scas mov adc pop cmp into enter mov push scas xchg ffreep popl (bad) sti xor fsub sbb repnz xchg cld and cmp fisttp out jg ret mov and adcl adc insb or jb cmp aaa or add cli pop mov int lahf sbb or jp add jmp or std dec cmp (bad) cli push and iret lret (bad) shrl outsl out sbb jo iret or scas and fdivrs xchg push sbb inc pop push pop shll loope in subl fdivr sahf xlat adc in push mov xor lret pop pop mov lods mov call fbstp adc add ja cmp adcl jo popa cmp sbb lret aas lock xchg push in je inc pop and xor mov lahf pop mov xchg xor jns cmp xor shrb inc repnz and sbb stc outsb jae jnp or stos jno divl push push dec out xchg inc lahf aaa aas lret jl mov mov (bad) cltd pop nop jecxz fisubr test or daa negb dec sbb addr16 pop mov scas (bad) outsb nop sbb push arpl rorl in push adc mov nop push push add lods iret or ror sbb dec mov enter jmp jo lods imulb xor inc cli pop jg out out add xchg orb mov xchg mov and insb sbb inc in int3 sti testl push sub dec sub loope push push movsb mov inc pop pop add repnz shl mov dec mov flds ret mov test cs aas les mov pusha cmpsl and push subl xor and rorb xchg dec (bad) mov push xor mov jno adc hlt hlt mov lcall push pushf dec outsb jae push loopne add cmpsb sbb cs rcr mov sub mov in cmp sbb (bad) add (bad) lock jnp sahf into mov jmp jae jmp leave js rolb adc subl mov fwait pop imul es pop or adc (bad) jl dec loop add clc mov xor lea fisubr out (bad) int cmp daa push test nop xchg pop (bad) (bad) push rorb sbb push dec xchg adc push or outsl mov mov inc and xchg test pop fisttpll adc hlt and jae jns jecxz push mov andb or icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle incl cld pop pusha lahf sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add cmp add mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec int inc inc push js in fadd bound adc test mov mov jno mov (bad) dec fucomip cmpsl call xor add jle clc pop adc fwait stos mov push jb cmp jb sbb ja jl cmp out arpl out outsl pop fcomps dec (bad) pop jmp lods push arpl pop jbe xchg mov pop and jnp mov sub inc (bad) (bad) lea mov xchg int (bad) mov icebp pop nop fs outsl cwtl lahf mov dec mov add push inc sti fcompl sub cmc cmp jne jge rcll mov cmp les dec push cmpsb adc cltd scas mov or mov repnz test int lea aas push gs xor test out mov mov in xor or inc push pop (bad) sbb mov (bad) aaa xchg mov mov jo ds pop mov add (bad) mov jecxz sub cld ret test je lcall xchg pushf fs xor xchg aam stos (bad) cld (bad) xchg jmp or lret mov lods (bad) into pop (bad) dec pop adc push movsl rorb pop in imul data16 imul inc stc push mov and jb das mov cmp push cmp push outsb sub (bad) mov dec mov push xchg sub add jg or in dec popa or in adc shlb ret aaa mov popa pop fidivl mov jg aam inc out loope xor (bad) mov mov sahf iret in dec xchg jns push imul cmp ret mov enter bound mov cltd adc repz push fiaddl std inc adc mov lahf mov cwtl adc imulb and outsl loopne inc leave fwait rorb sbb add push repz sub fistl cmpsl leave rcrl jl adc int3 dec outsb ds sbb rcrl inc and inc leave jl sti dec push mov sub or rclb xchg mov mov lods mov cmp push js inc xor adc fdivrs rcr mov xor mov mov dec and aad fisubr mov sahf popf addr16 push mov xor loopne push jg subl fs arpl ljmp xor fwait sbb inc jae lea fs fcomp mov into mov pop sti pop xchg stc out fcoml ja scas pop jb or sbb cmp sub push xchg dec (bad) cmpl mov (bad) jae dec nop xor sbb mov ret push jge sbb sub imul fucomi sti cmpsb arpl xor hlt sub test xor aas nop pop (bad) into into sub icebp scas cmp mov imul mov xchg lret pop fstps jge jne cmp fcomps (bad) inc je pop outsb jp pop cwtl pmaxub insl out xchg std daa inc and lock (bad) and xchg or add pop and cmp or fwait cmp push loope in js int int3 mov rorb movsl pushf sub dec repz cli (bad) lret mov mov push pop addr16 mov jl movsl sbb or pop push xor sahf push jle inc inc push pop cmpsb iret lcall dec and dec js adc cmc ja repz mov inc xchg and mov push add inc add jns std repz into fcompl mov pop push push xor or or sub pop xchg jle dec es ds jmp jo iret mov shlb std lock inc and adc sti sbb pop pop aas pop ret sti clc and jbe jne pop jb cmp gs mov ljmp mov aam enter fwait push sbb cmp sbb push or sub mov (bad) mov xchg aam xchg pop ds mov pop and adc idivb xor dec cmp add je sti sbb loope (bad) (bad) mov inc out cmpsb xchg push and jg mov or pop jne scas xor dec xor (bad) dec aad adc testb insl lods lret sbb lahf xlat xlat aam pushf test mov (bad) jb inc pop test sbb cs out sbb jno aam jno fnop loopne mov popl lock pop stc xor jp cmp mov dec aad bound dec mov push gs jne (bad) mov lea popf sbb inc inc js,pn fdivs push movsbl dec lahf push test pop xchg add dec lods adc push xor aam and adc insl lret jns xchg push or int3 arpl and sbb ret cmpl adc js movsb xor shr jno stos mov pop push or add cld or lcall pop mov cli push push fldcw addl dec add fisttp add call or aas test add aas mov add test pusha stc fbld (bad) fxch out ja enter pop (bad) mov and les ret and adc rcrl adc xchg test in add sbbb outsl adc push pop in std mov call cmp mov outsl loop std repnz push cltd xchg and pop xchg stos xor imul xchg cmp (bad) cmp jmp stos push inc inc sbb mov adc movsb ljmp stc add cmp (bad) js xchg jg nop pop mov push xor xchg jne out fiadd ret jge xchg xchg cmp xchg ljmp sahf loopne mov insb jmp xchg cli repz lahf lock cld fstps ljmp stos add xlat inc jne (bad) stos movsl dec push mov pop notb sarb xor or cs jecxz stc xchg jmp pop add mov mov fsts out pop test dec push dec cmp rcrl sti ror or sbb addr16 les repz incl fildl (bad) sub sbb lods inc mov stc jb mov cmp xchg xlat mov incb rcll sbb pop cmpsl ret sub or fsubs test inc sub test lret xchg xor sbb mov mov mov pop scas popa mov std sahf mov jae addr16 xchg addl movsb pusha xchg ss xchg imul outsl int3 push aas nop in inc push je clc mov pop push dec pop pop in cmp sbb mov std aas inc sub lcall hlt iret cld xor mov aam pop aas sahf les mov sarl cmp push jnp push push fdivp jns das insl cltd or lahf and xchg mov xor std or popa or inc push jecxz sbb mov pop xor test insb (bad) mov mov pop mov xor mov stc (bad) push xlat mov pop lahf test lods inc xor imul fisttp push mov xor dec sbb movsl adc stos mov pop xlat in fist mov aas mov adc fdivl outsb sub and adc rclb (bad) cmpsl stc or (bad) movsb dec inc into fdivrs dec in xor dec imul jno or mov push jge xchg jle jl sti mov inc sub cli test mov xchg inc dec push add jecxz dec outsl imul sub sbbl sbb enter mov add lods xor jnp sbb orb fcomi pop (bad) aam fistp inc sbb in mov lods (bad) lcall push mov xchg mov lds fwait sub imulb mov mov pop xor xchg mov or adc punpckhdq and pop inc cmp dec and push push mov in jnp,pt fsubr mov roll (bad) mov fistpl and (bad) int cli cmpsb mov xchg stos jmp out or cmp inc bound pop mov jle jnp loopne ret repnz jmp lods hlt fstps sbb shlb xchg push sbb (bad) lock mov popf lock pop fisttp push dec mov jmp mov xchg xor pop mov adc rolb push mov xor sub fdivs inc lcall sbb in enter push int3 adcl cmp sbb cmpb jg aam movl cmpsl xchg jns mov rclb test (bad) into lahf or fsubl in mov incl psrad xchg enter and test cmp sub cs or popf xchg dec xchg imul imul sahf mov jns sbb cs push call add lret lret insb push mov stc mov rolb sub xchg mov mulb and scas ja bound push leave jae push call mov call aad in cs jl pop and push pop adc dec cmp lods mulb pop sti lcall daa test xor std or or dec jnp outsl addl ror js mov scas mov sarl push movsb xchg movb inc mov xchg in jge or nop fstps scas arpl daa fcomi push push or xchg lods cmpsl dec jno lcall sub mov add dec or xor cmp pop or in cmp sub cld inc mov mov cmovl (bad) mul pusha or loopne push (bad) xor cmp inc nop jecxz xor mov pop pop dec xor sub mov mov lret daa xchg sub movsb sub dec xor stos dec mov aad (bad) stos in push cmpsb out pop cmpsl flds pop iret call mov lahf shr inc push fistl stc fstl in out mov movsb jecxz and xor lods test xchg repnz adc dec push xchg popa fdiv push and scas nop (bad) cmp mov dec jge repz adc cmpsb push xchg out xchg enter push imul (bad) jbe pop dec (bad) repnz test sbb fsubl loopne sti mov hlt pop stos push and lds in and mov lock mov jno jge pop jno push stos mov addl push cmp sbb mov fistl ret cmp or frstpm(287 jbe stos mov nop leave xchg mov ret stos dec rcrl mov shll test inc pushf xchg xor mov daa enter adc icebp push push pop pop std cmp mov aad dec mov inc ret sbb test push mov in test shrb cmpsl jae xor enter adc sarl sbb in repz into push xlat sbb xchg or jnp imul ds js inc cltd jnp pop rorb add data16 add into or push push cwtl mov movsb les sar jb lret jne,pn jle sbb pop add fyl2xp1 mov sub sbb sub rclb in (bad) loopne pop mov adc xchg inc incb sbb jb jmp mov or and fs ret push push mov scas arpl fwait bound or loope mov mov and lods push pop xlat data16 xchg push or repnz les lcall pusha cli jne push xchg mov inc push stos data16 mov hlt xchg or into mov xor and cmp mov push test push mov jecxz push pop xchg or pop cli in inc sahf sarb (bad) fistpl scas pop pop test push pop lock test hlt loopne into jg cli in or jmp push and popa push sub jbe mov andl mov rcll orb ret not mov scas add loope out dec xchg sbb sbb outsl ss ret cmpsl cmp in and xor dec sbb xchg mulb fldl sub sarb lock inc adc mov (bad) jecxz sub xor out (bad) mov test pop mov sti xor jae jb aaa fnsave cltd mov (bad) jl or or dec dec clc and insb fstpt mov in mov xchg sbb clc enter or adc jno add (bad) ret xchg fstps xchg (bad) cmpl stos push mov pop jg mov test dec and fmul cltd cmp xlat jp subl lahf jo,pt outsb (bad) dec inc faddl xor iret (bad) mov xchg stos inc and negl pop aas mov js inc cld push sbb leave mov mov popf iret sub pop imul cmp add add ret clc add dec sbb pop xchg dec sub shll mov sbb push dec (bad) in cmp xor mov mov (bad) sbb (bad) incl inc xchg or jb sub xchg push add icebp xchg and push (bad) pop mov nop sahf cld in jne push push lret mov adc sub dec cmp fbstp jb pop xor adc adc xchg cs in mov std jnp dec lcall jb mov cld nop mov stos adc jge mov imul js xlat mov enter mov jl push adc call pop in add cmp ljmp sbb mov ja dec cmp mov inc jecxz,pt sti or jbe int3 (bad) jns adc mov jb ja repnz int mov lret jbe mov in or das fnsave shrb adc fidivr enter pop imul jmp cmc fadd fisttp movsb adcl add ja mov inc dec ret fiadd jge pop fyl2xp1 add (bad) cwtl push push cmp jbe pop std mov stc cmp cmpsb inc in inc add bound push xchg rolb psubq ret cmpsb stos aad jmp nop pop movsb lods setbe das hlt mov pop (bad) enter and mov movb imul bound scas or fidiv jp inc jo add sbb fbstp or data16 rorb aad jge xchg test adcb jbe cmp pop dec pop cltd inc sub sti mov (bad) lret fxch xchg scas or xor decb push xor dec lcall shrl push jns pop lahf ror in sbb xchg cli add and mov dec xchg int3 and push pop adc mov sub (bad) cltd adc arpl mov mov sbb fwait nop sub aad mov and insb and daa rcrl and mov int3 loope arpl dec jecxz fs cld xchg fwait pop inc das aas inc or adc loope xor loopne shll stc mov mov mov add ljmp mov (bad) xor popf pushf mov sbb sub push lock fs ret add mov leave dec cwtl adc inc sub sbb jg cltd sub fnsave sub imul inc dec dec jecxz push gs sti push mov jmp test cmc push mov mov call call lods pop mov lock ffree mov sarl aam jp repnz (bad) pop lcall xchg jecxz xor cwtl mov xor lds mov int les movsl dec incl push enter loope (bad) jno es movb js push loopne xchg loop daa mov out repz imul (bad) cmp imull jb push or cmpsl xor jmp inc mov pushf mov es add inc inc repnz mov int (bad) aaa cltd call push out sbb or xchg out movsb daa sbb xor sub test jecxz imul inc repz gs pop movb bound inc jo test inc inc mov in push dec sahf das repnz std lcall cmpsb sbb aad daa mov push sub sti movl mov mov cmpsl roll add lret mov jno cwtl cmp adc cmp mov out mov lret es stos mov mov xlat add fmuls cmp fidiv jae insl orb ss rcll adc xor into jle icebp out scas pop pop xor and xchg and mov popa inc xchg fsubrl lea lods inc mov xor insl jl jo pop and cmc jne insl inc shlb or cli mov add aam (bad) out mov popa fsubp pusha pusha jge inc mov jne iret jge,pt aas shrb stos jle sbb clc jecxz mov and js jno kmovb out xor data16 push iret mov cli mov int3 call aad lea sbb loop push les cwtl stos jp je ljmp cmc sbb imul xlat pop daa xchg mov (bad) repnz cld jp pop lahf rolb out ficompl or and xchg fcomps sbb jg ficoml inc popf es aaa (bad) ds pop xchg adc subl and add dec int3 clc sbb sub daa roll xor hlt mov adc mov test adc bound push and popf mov mov sub xlat sbb stos jnp sti nop add pop mov adcb imul mov mov bound mov fild pop loopne pop mov sahf insl jmp add ja and mov push insb mov lcall mov push std xor sbb xorl sub sarb test fdiv xchg pusha fdivrs out shll loope cmp push lock ficom xor cwtl out adc (bad) xchg out scas jle (bad) mov or mov stc in fdivr jl mov mov and (bad) daa dec in sub xlat or add ret dec mov jne call mov xor sbb jmp nop jge add sbb xor movsl lds fdivs push and xorl cmpsb xchg pop lock int3 push lahf jle mov sbb sub xchg mov and ret mov pop mov cmp adc out mov stos mov adc imul mov lea arpl sbb cs pusha inc pop inc mov arpl dec or jp sbb inc inc sub cmpl data16 inc gs cwtl movsb adc int3 xor sbbl add (bad) lods sbb aas mov imul in stos adc pop sbb bound test (bad) mov push les mov jns xor ficompl cmp lret cli loope movsl mov incl xor pop clc sbb cs dec mov (bad) jae je lret mov mov fdivr pop jne mov fwait adc ret jb divl jle push out pop mov cmpsb repz lret or push les jl (bad) fcoml mov adc aaa lahf loope and bnd jge jb pop pushf mov xchg rorb out repnz (bad) fmuls imul push add mov or pop fidiv push mov out loope test mov dec loop loope jnp imul fcompl or mov xor aad (bad) psubd sub je lods jl push push arpl mov insl xor les inc in and ljmp xchg inc dec fwait imul leave fidiv fsts in add pop es out test fdivs mov cmpsb lock aad fs loop cmp or xchg lock add dec mov ljmp mov inc mov mov cs mov sub fwait mov or pop test sahf mov adcl roll test rcrb popf mov shrl pop push jnp xor xor mov pop or lock movsl out mov xchg sbb aas fistl jmp mov stc ljmp ds mov adc sub adcl jle dec push xchg daa repz aaa push dec or lock adc (bad) sbb xchg jae sbb (bad) scas (bad) and cmc push sbb mov jmp xor lahf and fistpll cmp pop dec dec push cmp xchg fbstp pop xchg xchg adc daa lods inc adc cld xchg test xor fwait pusha mov sbb es ss aas inc insl cmp pop mov mov sub stc adc scas push sub dec les sub lahf maxps aas add or aaa sbb icebp cmpsl pop push leave sarb movsl aaa mov pusha mov push repz mov mov out dec xchg prefetch or fistl mov sbb xchg fwait add mov insl adc (bad) scas inc inc jmp cld mov mov scas and sub pop push mov test stc cs out lds test add lods repnz jne pop jmp dec hlt rcrl jne test les repnz pop aad jo mov (bad) and scas dec or outsl mov adc pop and mov pop jb and cmpsl adc jp leave and clc xchg lea mov ret pop jae cmp shll sbb aam mov nop xor mov (bad) lret dec sahf jae dec ljmp jmp xchg xor fwait mov mov xchg out xchg idivl dec add inc leave mov mov fxam and ljmp movsb std cmp rolb push orl stos iret inc stos mov mov (bad) outsb fsubr push out pushf jbe ja adc or mov cmpsb arpl sub in dec cs dec mov std mov stos cmp lea (bad) jo pushf fnstenv ja icebp (bad) stos inc fnstcw dec dec xchg mov push outsl (bad) test dec push pop jle jo adc dec jnp jne dec popa add push sbb dec mov jne out cmp sbb push insb in jge popf adc in jb jns aaa push arpl ret add stos dec xchg ss sbb sub scas aas dec jle jmp iret mov cwtl stos scas test mov push inc jnp ret jg (bad) aas push inc stos inc out and mov shrb mov mov mov push movsb mov popf mov clc push dec mov mov pop pop jbe dec insl jmp mov les das outsb and stc jno xor das mov xor les add xchg (bad) jmp insl cmp xor cmp or movsb lret fisttpll mov jo push repnz push iret sarb sbb jae aam fdivrs in adcl imul les xor (bad) xor jbe ret xlat xor daa mov out mov mov fadd loope and ja mov popf mov int sub lret mov fisttp shrb mov push push cmp mov pop mov adc aaa addr16 ret nop mov loop add fsubl jle jne pop inc xor jo out sub inc outsb mov lds mov sub iret jge mov pop mov and sarl arpl sbb es mov mov shr pop bound test xchg pop pop add ret leave push dec jle icebp les loop mov test divl and pop hlt cmpsb icebp lret adc popf mov inc pop push adc xchg mov mov push nop xlat rolb out lcall push add cs lods adc in xchg call sub lds cmp ja cmp fsubrp out cmpsl addr16 push inc or dec test repz int3 dec xchg pop cmp pop je dec cmp sbb repnz inc in int aad js ljmp add cmpsl mov xor cmpsb jmp cmc push adc fwait pop pop push push xor mov (bad) aaa test mov mov mov mov int3 fs subl xchg iret jo mov movsl (bad) roll fwait ljmp outsb pop rcr xchg sahf push sub clc adcl fsts int or aaa or aas mov inc xor xchg insb pop and stc push (bad) scas add lret jno cmp ja cmc pop (bad) and jge sarb xor mov (bad) and movsb incl push daa fadd adc adc sub into popf rolb clc inc daa stc es notb rcrl add jo xchg jbe ljmp cmc adc sub scas jnp adc call idiv fcomi cwtl or cld outsl (bad) mov fsubl cltd pop dec push xchg iret je ror aad ret js loope jns add adc (bad) lahf and (bad) and jns jns decl sti xchg sub je scas cs add out enter mov test push ds jne insl add xlat inc insl xchg cld stos mov mov dec sbb loope mov roll mul and das push or jne xor pop cmp fdiv cmpl xchg sbb scas mov test fldcw jns das ret leave mov rcll push cwtl leave fstl pop cltd push bnd add push xchg jmp mov push sub mov cmp ffreep push arpl out mov lret add stos xchg cmp dec cmpsl pushf jp mov cltd in cmp testb fstps pop sub ljmp out js xchg nop ja fimul pop inc mov pop dec jns fbstp jbe or imul pop pusha or icebp mov pop mov dec arpl cld gs arpl mov or inc pushf push push mov shrl das push xlat andl loop scas mov cmp enter and test mov inc dec jmp sahf fisubrl add (bad) xchg es jp lret inc push stos lret in ja jno test adc int cwtl mov push xor aam cmpsb and stos addr16 dec push les mov icebp xchg (bad) repnz nop add ss rcrl (bad) xchg push loopne (bad) add jge insl imul sub fmuls test mov push push and mov loopne movsl push pop jge add mov mov jle mov push cli (bad) in mov ljmp in lds pop push ja jb and outsb mov mov sbb sbb sbb lods lcall je movsl xor xor pop adc repnz jo pop pop std fimul and sahf cmp pushf sbb loope int3 js mov imul xchg sub insb add push mov push clc push shrb fisubl pop (bad) arpl and xchg rolb test std arpl and pop cmp cmpsb and popf aam sbb pop sub add jle fsubr out inc jns sbb dec xor mov and push (bad) push (bad) mov fidivr sbb xor jb xchg jle sub push aad pop sub repnz xchg add js xor mov cmpl inc inc adc xchg aad sub sbb rorb lahf das outsl aam icebp xchg (bad) cmpsb outsl hlt jne or mov out adc or cmp xchg (bad) fisubr mov (bad) mov imul fsubr mov inc cmp cs idivb repnz sub mov lcall adc int les callw push call adc xor inc cmpsb popa dec pop clc xor ss aas loop mov call push or fmulp rcll and fmul stos add icebp xor jl xor push jg mov sahf xchg dec test into lret rclb daa sbb or int3 lock pop popa inc in lcall mov cld (bad) push sbb cmp xor xor ficoml xchg and jecxz dec jae mov fwait nop dec push inc rorl mov cmpsl xchg cmc mov sbb mov mov push (bad) jno out jne aaa and jae push push roll and mov test and js lock adc jo daa fsubrs add jecxz push or fadd mov mov into aad add je imul adc loopne ret ds fidiv out addl add and jb xchg rcr mov lcall or popa dec aaa or xchg or push enter mov xor mov jnp,pt mov mov mov cmp mov mov xchg xor pop pushf cli sbb jle xchg lods in mov in ret xchg lock (bad) mov add dec cmc aam (bad) dec adc xchg icebp push add xchg pop sti dec pop and mov aam mov cli jmp cmc into dec or loope xor mov dec bound adc shlb lds nop (bad) mov pop push inc jnp or icebp push stos dec jle call sub and data16 jb pushf cmpsl and jne mov push decb xlat add jmp add sbb jns sub mov cmpsb cmp test fadd sub mov js cs cmp flds push cli mov addl (bad) jne sbb push pop xor jns std sar or xchg gs std loop addr16 outsb js popf pop icebp fidiv and xor dec jo adc and insb outsl jb test test push lahf inc je or arpl and mull jno repz popf outsb nop push pop mov pop (bad) sti mov xchg or or enter fidiv sub call jle dec xchg and sti inc je mov fstpt push pop in lds adc or push inc adc pop mov xor or jle outsb test movsb cmc push inc mov arpl jge bound es pop idivb (bad) pop in inc mov data16 add xchg test fdivrl popf inc xchg push mov stc ficom mov je lods inc (bad) push loopne add enter call lretw fadd dec je and mov (bad) mov arpl add push int3 sbb and (bad) mov add mov imul cmp xchg dec lods andl adc (bad) int ret xchg sub ss adc jge push mov les mov rol inc push add jo sub jns jno (bad) pop pop ret dec shr pop mov fwait mov push and push fisub pop inc cmp mov pusha bound mov out sbbb dec push sub mov push push sahf das sub jno in push leave xor cwtl adc test xchg push imul ljmp sbb xchg hlt popa fstpt adcl dec adc inc fst outsl jmp mov push adc pop mov inc cld test sbb pop lret dec insl jmp out repnz out and jg,pn and push push push mov arpl sbb lret hlt xchg and fidivr adc fsubrs or adc and pop test inc mov rcll push adc mov lahf or xchg jg adc and cmp xchg push and rep mov fnsave xor fldl2e arpl add (bad) cmpsl mov jl or (bad) adc in sub loop popf mov nop outsb inc push inc js mov mov xor cmpsb insb decb inc adc jb xor adc inc es mov adc fld1 xor scas xor mov gs sbb push (bad) out int daa dec lret cmp rcr jge jecxz push popa test cs out sub cli roll aaa jo loope popf ljmp dec jae movsl scas mov mov push in out or jp push (bad) sahf aad mov call jbe int3 lret sub push inc add mov cs stc orl jecxz xchg pop (bad) leave ja pop into ret popa cmp arpl mov insl sbbl push jg leave nop xchg pusha loope lret jo and mov push pop mov lcall mov jo enter lods fbld aad add loopne xor test je cmpsl mov mov mov push cli ret lret sar dec inc dec add into cld aad sti dec jle cmp pop in dec icebp lods or (bad) jp in or mov sub or mov mov stos mov addl test incb and mov jns push aaa and mov sbb loop dec aaa pop ss cwtl cmpsl mov sbb jle push jns gs jo xor enter inc xchg enter mov mov or pop xor dec (bad) or pop test (bad) pop mov int mov mov gs stos insl fidivrl add push shlb or rorb inc and pop cmc pop das xchg push push mov xor cs mov (bad) push enter pop cmp test rol mov leave adc and call test xchg mov mulb pop sub pop sub loop addr16 xlat ja mov pop fimull pop push and jge xchg and test popa mov sahf jnp test fsubs adc push imul pop fs xchg arpl mov mov xor or add adc hlt test mov je mov add jo sub dec lea fwait cltd or push jge and xchg xchg jne imull lds xchg cmp daa xchg sbb push dec popf dec insb push mov mov jnp push mov sbb fildll adc leave mov sbb pop in mov subl push jmp outsl ror push popf or insb data16 call daa cmp jle loope mov (bad) in cmp int3 std or inc pop lods int3 into call andb push enter cmp (bad) push add xor ficoml and mov jg dec cmc jecxz rol icebp cli sbb cwtl inc xchg inc jne jp in push pop dec pop out push jne sbb pop xchg psubq dec adc sbb inc or js mov fadds and xchg dec icebp sbb leave in out scas xor pop pusha test jge in ret aaa jnp xchg mov adc aad inc out pop mov popf jle stc stc cmpsl adc and add jge ret out xlat std popa sarl test cmpsl dec scas mov popa (bad) cmp jo xlat in jb scas fiadd mov lock push push (bad) fdiv ret pop push inc dec jae aas mov add imul xchg cmp mov add adc fildll mov jmp or mov sarb out std ds lods ja push mov push xor push clc insb shll xchg notl aas sbb rorl jg arpl pop lods aas sbb pop mov mov stos (bad) xchg and pop push (bad) jb xor out mov dec int push push add or pop int3 std stc lret bound std sub aas loopne iret cmp or cwtl loop mov xchg sarb xor hlt jns cli mov xchg cmpsb clc lret push mov pop pop sub mov xchg mov scas rclb lods jne mov (bad) adc add xchg int3 imul cmc adc xor ret xchg mov mov mov xlat push xchg js push pop imul jns pushf lcall fisubr dec sbb xchg xchg loop pop addl outsl dec adc push jae jnp adc cmp xchg ja jb mov sbb rcrl in cmp or cmp and sub sahf mov or outsb sbb and cli fildl leave sahf outsb shl xchg out jae mov lret test div (bad) push sbb cmp (bad) lret aas repnz push jo popf in mov fdivr scas or mov inc mov ja popa cmp cmpsb inc cmp rcrl repnz lahf mov test xor pop jecxz jge adc jl pop cwtl repz mov addl cmp add leave ret cld xorb or ret pop mov add jne add bound sbb adc gs call fidivrl cld or test cltd pop jg aam push (bad) sub insb fldpi pop pushl ss mov jg in pop stc jmp cmp or dec mov iret push xchg push mov cmp repnz dec xor xor mov xor call sahf mov lock cwtl or aad in fisub (bad) xchg fidivl add aaa xor test sbb adc lods dec mov jo mov mov xchg daa cltd popf bound scas push mov cmpsl lds jg iret outsl nop das mov sub movsl out mov fs add pop dec rclb cld sbb test cmp out scas push fdiv mov in and cld inc into sbb mov pushf xchg or mov ds stc fild push push cmpsb mov sbb fucomip mov (bad) cli in dec pop dec mov in xorl pop cs cwtl inc pop gs mov addr16 test aas ret fsub fcmovnu sub add loopew popa add mov pop test js (bad) xchg pop mov xchg and addb es xlat or xchg mov pop mov xchg loope imul push xchg int sub dec enter jg nop or mov add popa scas dec jb (bad) pop adc data16 cmp jmp mov inc sbb imul xor and lods test xchg fldl xor ja in xchg push lret xchg rclb mov mov fwait xor movsl fwait (bad) js dec cmp mulb xchg mov add push add popa xchg jl popa sahf into xchg sahf fdivrl add fwait adc arpl lea jge stc inc rcl in es sub fisubr pusha push lods in ret clc mov jo lahf mov push dec idiv mov fmull add dec dec dec xchg push sbb popa rclb aad les xchg ret push mov push cmp jo inc lds sbb push mov incl xor sbbb fstl dec addr16 shl popfw mov pop mov cmp cmp or jg popa popf inc in add (bad) int loope mov xchg jl lods pop cmpsl mov test push out jmp cltd aad and inc pop mov push (bad) int and push sti fs sub cmp ret cmc or repz test sarb sbb loope dec xchg jecxz mov imul push js cmp push std sbb test mov sti test or pop mov inc aam cmp (bad) cltd cmp sahf fadds fcmovnb inc sti in fcompl dec jge and push mov push push (bad) les mov xchg aas xor adc fistpll dec cmc sbb pop and push or cmc push fmuls mov cmp subl inc outsl dec sar aam and imulb sarb insl xlat cmp cld xor sub cli into jg out cmp sahf jge mov pop into push inc jp pop mov mov in es gs push push add mov out push rorb sub scas cmp pop sahf jecxz cmpsb decb xchg scas lahf or fidivrl fs adc mov mov lods enter std dec dec inc pop cmp enter mov sbb fwait pusha adc loopne or xchg f2xm1 cli lret vpcmpeqd adc mov cwtl aaa push push movb dec add push pop es fiadd fist inc lret fadd push and pushf je inc in rcrb jae and jecxz jg mov fsubrp jecxz adc popf rcrb xorl popa sti jo js nop insl cmpsb js mov daa add mov arpl sbb mov pushf fidivr rcrb mov std jae rorb enter pop or sbb fldl mov sub fstl mov test adc lods icebp (bad) jne lret dec xor cmp xor clc jp mov sbb jl add (bad) cmp mov repz (bad) enter pop push lods push int mov lods leave xlat mov push dec xchg rorb repnz loop push pop cmp mov divl pop rcll rcrb (bad) xchg and add xchg (bad) test iret andl test jb hlt sahf jns adc lods inc jle push ficoml es js push fisttpl pop ret push cmp pop (bad) loop lret sub gs ja and daa aaa mov into add adcb jb push out les clc cld xchg xchg jecxz push aam pop adc das add inc movhlps jns xchg fwait (bad) mov lret daa (bad) mov sbb icebp pop popf mov jae push jp xchg rcl mov and or mov adc mov cmc outsl insl mov sbb xchg call jns pop pop icebp dec (bad) push push jns add and add adc stos xchg imul pop mov dec mov pushf push int3 jp xor (bad) mov pop cs jp add or repnz push (bad) or dec sahf add xor insl push xchg sbb pushf cmova jnp outsb push out and (bad) call fst fidivr orb rcrl push cmp mov mov sbb out or fildl jmp dec out jg mov pop or sub cmp xchg mov cmp push repz loop xorl out cmp leave lret jg or cmpsb lods mov (bad) lock pop and daa js or iret cmp mulb adc push cmp das fist lret sahf inc pop mov (bad) stos shl mov cmc push leave in xlat mov lret dec popa sbb adc lret xchg in push es cmp add stos xlat mov call adc xchg stc dec std ret test push xor mov push and inc cmpsl fcmovnu sbb add mov int repnz int3 pop cmp mov imul xlat mov stc lock sub xchg and outsb xor out lcall add (bad) push and cld test stos xchg xchg daa sbb dec ja xchg or int3 inc mov test pop inc andb js test roll dec cs pop inc movsb das adc mov mov mov xlat mov push addr16 add adc gs sub inc sub or fcompl push enter mov cmp pop xor (bad) jno cmp adc xchg aam sbb lods outsb push jecxz and stos pop dec add and mov nop cmovo inc scas std aad cmpsb lods jbe add push ja xor or int inc adc aaa out xor mov mov fs stc jo stc xchg fldt dec jb inc push je test xchg or data16 mov dec add mov lods out (bad) insl popa jb mov es (bad) mov pop xchg fcomps mov mov std imull jno mov fstpt testl daa je xchg cmp mov stos and mov aas xchg (bad) insb scas pushf (bad) ficoml dec (bad) xchg lret outsb aad mov push and out fistp dec clc stos cmp jno cmp pop mov xchg jns repnz aam pop push std mov pop cmp in inc insb ja mov xchg mov mov sub mov out lahf inc ficom mov ja or mov sub jo push cmp out sub dec (bad) out decl sbb push aam mov lahf int3 ss xchg inc pop xchg (bad) lret (bad) divl xlat cltd sub scas push int3 push les (bad) xor xchg sub movsl pop push xchg fldl cmp jmp sbb outsl cmp scas das call addr16 test mov pop (bad) push adc push jno jns loope pusha mov jno adc jecxz nop mov inc adc in rclb les je fist in fisubl lock out (bad) mov inc cmpsb sahf int3 xchg repz in pushf bswap jae mov sub bound orl jns push cmp ret pop sti mov ss ja adc jecxz dec mov mov cmp test scas ss add sub cmp jbe fs fstp lods jae loopne sbb pop push mov (bad) sub or inc mov and cmp xor pop pop mov jbe pop test in scas jb sbb adc insl testb push cmp mov rclb aam pop dec int sub dec cli jge outsl pop cmp mov xchg sbb nop movsl out push cmpsb bound jae mov mov iret push call (bad) push inc out (bad) xchg mov pop push xchg mov xchg bound add and cmpsl xlat mov sbb inc sbb sbb mov leave mov jge outsb sub pop fadds push bsr fstpt addr16 xor ss cmpsl (bad) lods sub cli or sahf adc test push addl push sbb lahf sbb jp xchg movsb dec lea jmp sub outsl ret ja repz ror mov ret cltd jo sub ljmp loop rcl pusha in mov xchg (bad) cmpsl sub push mov inc lahf mulb inc out jne and outsb push popa sti test movsl sub fbld pop fcmovnu lock nop sub popf movsl les jp rclb into int cmpsb iret loop out mov jae enter dec dec movsb cmp push sub push jbe rcr or cmp dec test jnp mov test pop mov pushf andb std and test stc fldt mul and mov cs negl test dec icebp cmp rcrb into in mov cmp jp ss repz js cmp fnstcw movsl mov test mov loopne xchg push arpl daa inc cmp mov aaa vrsqrtss fldl xor cmp xchg clc lcall push lea cli rolb lcall test push dec mov inc cmpsb insl test mov pop out sbb xor test jp lcall cs divb cld jo outsl insb adc iret xchg dec inc pop (bad) dec je or push add mov ljmp lods sub add adc mov sbb les in imul mov popl sub in or and rep into mov mov dec jp push mov je lea mov fisttpll jnp xlat repnz xchg lods jg das cmc pop out pop popf lretw (bad) aam loop test mov (bad) adc sub push push add (bad) dec inc cmp (bad) pop std adc add push push pop pusha adc cmp jne or or fisttpl jns cltd cmpsl rcrl fild mov push fwait mov mov jle cmpsb aas sbb mov in daa add push add cwtl mov cs setle test movsb cmp es sbbl loopne stos jb inc (bad) pushf jmp mov divb movsl push mov out lret enter push mov (bad) inc fcmovnu mov pop push pop and fs (bad) call fs test cmc jmp cmp mov rorb cltd int3 into outsl pop mov idivb lret inc xor lock jg adc lock (bad) movsl or scas inc jnp xchg popa pushf lret lret pop dec stc out popf outsl aas (bad) jo push lods cs push ret das pop js inc icebp in dec ret jnp inc push insb enter xor adc mov push mov int3 mov jle inc mov xor jb push mov insl popa jo in push sub dec mov or (bad) repnz pop cli pusha addr16 pop (bad) inc repz sbb cli out mov sbb xor xchg xor adc push xchg scas or bnd scas cmc mov fwait push outsl cwtl clc nop jb scas mov inc pop add in adc cmp mov negb cmp lds dec in out xchg data16 jg lcall push fildl pop cwtl gs jo mov dec lds addr16 aas out and mov mov loop inc loop sub xor roll and push je out js mov iret or call movsb pusha push xor (bad) (bad) xor xor lods push inc inc sub push push mov fcmovnu movsb mov push push test test dec (bad) and stos mov mov lods sbb push push sub cs mov inc mov (bad) enter js sarb enter xchg cmc and fs pop push pop (bad) mov dec xchg jne je ret mov xor adc fcoml rcll test add imul int rorb mov into lret mov call adc (bad) ss add js test push lods negb mov stos out sbb mov add daa dec pop ljmp outsb jg jmp (bad) fist dec out bound and pop je push movsl pop fidivrl in dec mov xor cmp pop aad add fnstsw mov cld test mov xchg jns in leave pusha mov push jns pushf in aas popf movsl or test in xor xor mov and push mov jae js loope jp orb adc mov dec add pop repz mov adc mov jp and xor and scas mov stc lea cmp mov cmc or inc pop pop addr16 sub or ret lock fucomi cli scas push inc xor notb sub xor and fnstcw xchg cmpsl adc out (bad) dec add mov mov unpcklps scas push into bound or test mov cmp dec or sbb out lods in lahf sub ret jnp or stos aam fidivrl (bad) mov das sbb jae adc (bad) in out sti xchg fcoml jl fmull mov sub jecxz loop lock cmp push arpl out test insl dec fldt outsl mov les pop (bad) pop xor jb enter inc push ja aad (bad) dec hlt jne inc inc insl lea adc jnp call xchg adc sahf lret lock sub mov arpl gs out cmp shll mov pushf adc pop or add mov outsb (bad) mov (bad) jbe fcoml into push xchg imul loopne adc stos sti divl rorl cmp pusha dec ret mov xor sarb (bad) loopne xlat cli nop daa sarl sub or std add addr16 pushf xor scas jmp rorb loop test lahf jnp popf push and nop addr16 mov ja mov sahf loope mov xchg push mov (bad) xlat adc mov and movsl or jmp in ss cmp push xchg mov out lret xchg pushf (bad) push pop lods (bad) push push adc sbb pop outsb dec mov xor jmp or add rcrl sub mov ljmp int3 imul cs and repz adc arpl or lcall out and or pop jo repz xor iret push nop iret js stos loope insb neg and inc mov xor fwait sub sbb imul push mov aam fcmovnbe outsb or pop and test fisub out xor inc jae push xor push movsl dec ret (bad) and movsb hlt loop mov xchg jns mov inc lods loope xchg lcall jecxz cltd cmp lock cmp or push mov cmp mov inc mov mov push mov (bad) repz xor and sub sbb jo pushf bound out mov adc outsb (bad) leave lds xor mov test int inc xor jge lds in test mov cmp xchg pop (bad) int3 fcmovnbe into nop inc or adc pushf (bad) adc dec fwait push stos outsl mov test addr16 ljmp loope fisubl test movsb ljmp adc sbb bound pop xchg test inc sub divb loopne fidivrl dec push pop es mov mov insl xchg std jecxz jmp out inc movsl dec sti negl push ja mov sbb (bad) mov push bnd jmp xor fld cld out cwtl jg mov sub loope xchg sbb fldenv mov push pop daa mov popf mov bound dec scas mov sbb test dec mov jnp inc lods inc test adc ja lds xchg xchg adc scas pop addr16 jmp test mov out lods dec daa sarb inc sbb (bad) mov mov pop xchg mov xchg cmp mov xor cld inc xor jo adc xor int xchg fidivl sbb lret aad out rcll lds cli stos xchg fild test gs insb mov sub repz cwtl mov jmp or repz jns mov mov jne lea inc insb pop xchg mov cmpsl push mov mov (bad) call sarl fiadd xchg icebp mov and or cmp orb pushf and jg xor cmp mov in dec push xlat sahf jle xchg inc cmpsl mov iret inc je fisubrl rolb pop xlat pusha test stos fcmovbe (bad) push sahf in das loope (bad) xchg or jne ss cmpsl dec sbbl and mov enter (bad) fs xlat repz push arpl out mov std mov xor inc xchg pop leave ficompl add xchg in push push pop and mov enter (bad) das xchg ljmp movl cmp push shl and jmp movsl cmpsb cmp mov and std lret sub mov and xor xor xchg js sahf pop pop outsb (bad) cltd (bad) in in pusha jno cmc jno lcall mov mov aas (bad) popa mov fistl adc push jl jecxz adc hlt les aaa js pop lret mov xchg test inc xor adc mov or jp jb inc iret mov mov cmp jno pusha push mov jae (bad) fldt inc mov dec push mov scas pushf fimull popf loope adc jg sub and pop pop push lcall jecxz aad movsb mov lock adc int stos dec stos ja jge add call cmc ljmp jb (bad) stc lea scas sub gs lahf mov lods outsb test push adc mov push ror push (bad) vsqrtps data16 (bad) pushf addr16 outsl xor and push daa lret loopne lds jp adc clc or cli icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle incl cld bsf ljmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ss add add or or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec lret dec inc inc push js in fadd bound or lods mov lds (bad) bound sti notb and adc inc cld push lock test pop push mov push pop emms and jno test jnp push mov mov hlt popf mov jecxz mov pusha dec jge or mov (bad) in jns int3 in xchg push push das aam (bad) adc adc sti pop scas cmp jnp fcmovu aaa rcll jp aas popa and inc or nop sbb (bad) pushf cltd push or ret or (bad) aaa ljmp andb or cli sbb sahf std inc test pushf (bad) icebp daa push nop aam jmp add cli (bad) (bad) rcl push jg in mov (bad) dec shrb xchg pop insl (bad) mov in sub or jo in cltd ja outsl (bad) pop test push and (bad) and fneni(8087 mov dec outsb pop pushf aaa hlt sub push das mov push bound pop rdtsc dec mov jmp iret xor inc sti outsb xchg sub pop xchg adc mov sub clc jno mov mov ret lcall xchg push arpl push mov and (bad) jo mov sahf inc test repz ret outsl and outsb daa xlat test mov outsb pop pop push pop lcall imulb inc adc (bad) sub cmp cmp push (bad) scas lret pop pop aad xchg cs iret xor loop pop or sub jbe call mov jnp mov sub ja test adc mov cmovbe in sbb lcall scas inc stos inc mov mov jae (bad) mov inc fisttpll rol dec inc jp out xlat xlat mov lcall repnz cmc adc les (bad) sti jne clc jns daa (bad) repz sbb insb rclb insb add push hlt pop pusha cmp (bad) cmc enter jecxz pop inc (bad) adc ss push sbb pcmpgtw pop stc inc ja xchg fadds push out arpl xor loope (bad) repnz mov pop and adc ret lahf xor jno push cmp leave push out pop lds rep mov call mov adc mov dec cwtl ds or stos test and das jle aaa int cltd cmp pop xchg jbe jae cwtl adc inc pop jg mov push arpl jmp sahf pop adc out js repz add add sti add mov and cmpsl je insl icebp (bad) icebp sbb or repnz xor dec sub mov pop dec xchg mov xchg xlat ja mov inc add pushf cmp pop lret mov pop push inc mov sub or ja jp idivb dec mov add test fs fwait jge icebp in and mov pop and fnstsw push add dec sbb dec fisttpll ret mov sbb fsubs add jae jne stos cmp jmp imulb aaa jo stos mov std sub push data16 mov inc clc mov fs push pop aaa loopnew in jne jp xchg in xchg (bad) je,pn dec pop mov add test stos iret lea imul or mov dec aad rcr xor rcll sub sti repz repnz test lock add rcll jmp repz aad pushf std mov dec outsl xchg jns andl mov xchg pusha inc lahf pushf lock leave les aam xchg cwtl mov mov jae xor xor and fistl inc sub or mov (bad) (bad) fistpll (bad) clc imul sbb push inc iret in jge (bad) xchg adc int3 lock pushf fdivl cs jecxz xchg movsb dec cmp in lret sub mov cmp es loop jp in mov xor cmp orl imul lds cmp or mov pop xchg xchg shll adcb repnz push push sbb push push pop js xor pop sub push pop rcll pop cld cmp mov sbbl das out mov add adc or pop adc aaa and mov or insl pop negb in mov clc dec push inc push mov xor jle repnz pop pop loope or stos and ja cmpsl out and call out div or test dec lret sub inc jp cmp push mov xor mov (bad) pop sub push pop or popa xchg ljmp mov pop cmc inc ret lahf and pop mov lea out mov push out out and sbb fwait inc lret insb xor jns xlat in cmp popf sub mov pop ret xor test and dec out (bad) fcom push sub stc loopne out es push sub add or jmp pop outsb dec ja imul inc xor adc gs in jo push inc dec pop mov or push dec int3 pop xchg and add adc andb xor adc std jo (bad) adc and insl and or fwait ds ret (bad) lret adc mov imul xor pop sub mov call lock sahf mov adc mov and loope cmc push stos or std (bad) pop add cmp cmp repnz mov xor sbb inc divl mov xor pop sbb repz or aas out sub cmp jae jp (bad) into insb subl mov sub cmp pop rol (bad) out jmp and je sahf mov and sarb test int3 sbb push fwait push dec sbb and lea arpl scas jns,pt out push dec leave nop das imul test sbb push mov imul out xchg push in pop je dec in sbb mov loopne fs fstpl xchg or icebp and lods push mov fimull mov and loop ja mov jge dec push adcl mov pop push es lahf aad shrl cli jno cmp adc test push cmp sub jb mov in push xor cmp xor fsubs xor push pushl lods pop outsb adc loopne mov test das andl test loopne fcomps push mov jno mov sbb lcall mov loopne (bad) xlat fistl mull iret push sub sbb sbb iret pusha ret js and and pushf xchg cmp dec jp xlat and insl mov ljmp dec insl stos mov add cmp insb pop xor mov jbe dec inc push call push ret aas aam xor lret js lea es mov test add pop jp push cmp dec mov push mov add hlt xor inc inc js loop push and inc mov shlb cltd pop imul jb not pushf jae lock mov inc push add mov mov mov mov push stc addl push ret les (bad) mov (bad) in fcompl push fs aas addl sti mov lahf test fisttpll inc arpl add xchg push mov xor sbb in loope pop decl pop push sbb sahf xchg or mov pop push mov adc andl shrb mov adc xor iret into fdivr shrb add dec inc cmpsb (bad) dec adc inc or scas jg cmp sbb call aaa imul rclb jge mov imul sbb sbb dec push fucomi lea inc mov adc jne loopew loopne in ret std popf and (bad) les or xchg mov cmpsl faddl jg dec adc outsl dec push cmpsl xor cli aaa ret mov xchg fisubl add pop mov mov push or xor mov rcrb push mov mov pop imul add lds gs popf jne cmp dec vucomisd cmp xchg add in fadd cmp xor and in popa in mov fstps inc cmpsl je sbb jnp xlat (bad) rclb push jg lods mov xchg push sbb lcall adc sbb inc call or mov dec mov jno (bad) mov stos leave outsl shll mov insl test movb movsb jecxz adc test stc jecxz loopne int xor inc jno mov cmp xor arpl fmull cmp ja xor mov mov and pusha cmp dec cmc push iret cmp adc mov outsl push jbe jne and icebp mov mov imul cltd lcall ret (bad) jl fsubl push jmp pop mov pop movsb dec add add hlt pusha or push ja hlt enter mov das mov push cmpsb sub push cmp adcl xchg pop in add das mov fnstsw (bad) movb scas push lods and loope cmp xchg sub jmp xor bnd push cmp out or lds in cld inc ds pop push out pusha push mov mov shll (bad) cmp mov mov inc or icebp xchg jns scas cld movsl addb sbb je dec fist stos and and xlat add (bad) jo fildll dec test movsl (bad) cmp jle dec xor jb repz imul xchg add mov ljmp or jg aaa decl outsb out sub push xchg addr16 cmpsl ja fisubr movsb adc lock jae fidiv andl dec lret in dec mov ret mov sub add jle add cltd pop xor jp xchg push cld cmpl lret into mov or (bad) push jns sub mov pushl mov mov cmc in mov nop sahf sbb or mov mov xchg out pop lcall cmp aaa ja popa lods bound sbbb xorl sbb cmpsl mov pop push dec fmuls sbb mov xchg insb stos test sbb les jo inc push xor ret test add enter sub sbb repz mov shrb push dec push lcall pop sub jno adc iret icebp xor test xor test hlt mov adc mov push repnz aaa addr16 dec lea out xchg (bad) testb jecxz pop negb mov mov add in lods add and ret adc fwait outsb jg ret push repz xchg mov inc jae sub dec js cli mov into iret shrl dec xchg adc xchg xchg add push popf push or mov pop add scas data16 push iret xchg int in push inc push sbb jnp mov mov mov xchg insl mov dec les aad sbb or in pop and and xchg sbb xor or lds xchg movsb (bad) push pusha inc push mov jo xor out or je sbb xor xor repnz fsubs jns aas loopne popa xchg xor stc int3 add sbb or lock loope in xchg aam mov pshufw imul jl ljmp cld dec int mov (bad) xor pop adc inc jnp add jg mov daa jmp push dec test jp jns mov mov cli orl mov xchg js outsb std mov mov mov adc push sbb add sbb (bad) cmp rorl add push dec jnp xchg int int3 push inc xor sub cmpsl icebp icebp mov jae and ss stos repz add andb jg scas (bad) fstpt push sbb imul punpckhbw adc inc (bad) enter rcll push (bad) outsl push xor mov sbb pop xchg imul xor cmp nop lcall cmp mov cld cmp cld adc jne mov ss clc popa cs fdivrl je lret push lea repnz cmp aaa cmpsb int3 add mov mov iret mov dec mov push or cwtl cmp daa mov cmp and xchg out add dec jp adc (bad) cli lahf in adc sbb repnz mov mov mov rclb out scas push pop inc push push cmpsb mov (bad) jb shl push mov leave inc aaa mov mov jmp adc pop (bad) pop mov cmc fadds addr16 pop add (bad) cmpsl insb and test cmc movsl int3 sbb lret pop out mov ret mov dec inc push cmpsl push push adc sbb xchg (bad) jnp cld scas cmpl add push xchg sub sub push loope fsubr mov nop mov xchg or mov cmp cmpl xchg in mov aas xchg inc pop dec mov cmp xchg fdivr addr16 cmp pop jg cmp les inc sub in pop inc or push popf dec stos outsb xchg bound sbb inc mov fistpll lods sub imul adc (bad) jne out dec loope,pt mov xchg adc test push aad add les data16 lret (bad) mov fisttp dec mov xchg jbe fnstenv loope push mov insb daa cmc iret in cmp cmpsl push dec adc adc xchg pop shlb push ljmp and (bad) xor dec push movsl sbb push (bad) cmp iret popf push mov pusha xchg dec push out fdiv or arpl ljmp call int3 jp,pt or pop mov in mov cmp push arpl stos pop scas jne adc pop pusha lock adcb lds jne lock fdivp lcall aas mov adc xor int3 iret mov and add mov ss cs fidiv in xchg push add add sbb imul jae lahf imull cmpsl push imul xchg jno xchg lock fisttpl dec lea jl inc mov adc pop insb popf stos inc ljmp and cmp pop std jbe xor add or push mov enter cli ljmp adc or inc sub or sbb and cwtl jae cmc mov movsb add lods xchg (bad) mov or push pushf clc jnp stos and push sbb pushf xchg cmp xchg and add fisubrl mov sub call faddp push sub test insb outsl aam lods imul notb jl jg jmp inc add leave repnz sbb xchg int rcrb cmpsl adc or gs cmp mov jne push adc mov jne pushf inc and cmp pop mov lods jecxz push pop and bnd daa cld outsb aam test dec shrb idivb cs arpl sub push subl inc add sub jecxz and push or sahf sub pop pushf sbb in bound addl mov inc pop sahf mov jmp in or jno xchg dec jg push (bad) int3 adc das xchg xchg imul mov pop std faddl mov pushf xchg mov or es mov out rcrl pop mov call adc cmpsb push inc movsb es mov push bound xchg stc jne mov ja aaa or int mov fdivrl sbb dec lods or lcall push cwtl and pop inc push scas jmp out fistpll mov (bad) mov test xor outsb mov int3 push ja ret in out mov mov jge shll mov mov cli push (bad) hlt and dec cmp loopne call jb das xlat adc dec mov push ss icebp leave inc mov les cltd mov xchg push mov scas test aaa ret mov lcall loopne inc pushf push add fcmovu js cmp aaa rcl adc rorl xor fldcw pop int jb lret mov sahf pushf out sub test sub inc mov nop adcl rorb call std sar add data16 jae movsb lcall daa dec pop sub sbb fstpt jnp (bad) dec lods mov sbb cld dec xchg adc xor mov jo cmp sbb add aam je xor (bad) jne repnz or adc pop push ljmp stos adcb in jp mov push shl outsb cld inc mov das push pusha xchg scas icebp test fiadd ffree aam dec in inc xchg scas data16 mov mov fnstcw sti popa mov repnz cwtl ja mov fild and (bad) inc sbb or lret xchg in cmp sub xor xchg pushf (bad) js sbb and sbb jp rorl and mov adc jno push mov push mov aaa pop dec xor pop aas lds inc mov sub mov push cmp inc push mov push dec test and xchg mov aam inc push test repz xchg push mov or scas stos mov outsl outsl in mov adc pop mov push es icebp leave in xchg inc jb scas and loopne push dec push das add loope sahf ret sub xorl push das (bad) cmp push gs icebp gs sbb das outsb xchg inc repnz mov xor cmp dec pop pop icebp loopne dec aam cmpsb push stos imul sbb fnstenv mov xor ret adc fcomip pop cld mov popf sar sbb pop jb or cld mov or mov sti mov loope jno jae cmpsb ljmp xorl lock or add nop imul imul mov mov fnop xchg jnp push ljmp jno inc and roll jle dec pusha lahf mov (bad) sbb mov xchg sbb inc and in movsb fbstp dec leave iret push fsubrs sub mov dec scas jle fdiv inc cltd pop daa xchg rorl xor out cmp int xchg cmp cld test int3 cmp pushf adc out sub fs repz mov add dec fcoms test inc xor push test xchg sub inc jg lods rcl adc mul jns,pt cld iret xorl mov ret loope sub mov (bad) int3 push repz in lahf leave out and push ss add mov push and pop dec pop orl sarb mov and ss mov mov flds sub push push faddl xor loope rcrl jle movsb dec sub mov push lock outsb mov aas test mov scas in (bad) in loope test dec mov scas xor clc sbb mov dec mov test cwtl movsl mov jo (bad) jne ret push pop push push push push fsubl cmpsb xlat mov stos fildll cmc jo (bad) fnop icebp xor cmp inc jbe ret mov mov out lods push xchg push iret cmc daa rorl out inc jp out jnp gs in sbb mov sar jp or add mov cs inc inc and aam cmp and xor push inc outsb lret push or out xchg fwait cli adc aas xor dec dec dec cmp mov push (bad) jl lcall in dec call mov inc mov rorl pop in roll and sbb push adc je mov shlb imul push mov adc movlps inc mov lea test fsts leave or add cs jp jno pop xor xchg adc push movsb pop inc cmc xchg dec pop sbb int adc cmpsl sbb xor sub dec (bad) outsb mov orb mov or (bad) cmpsl ja sub add xchg xchg add lcall sub inc jle fbstp pop repnz mov and icebp repnz imul loop push inc je cmpsb xor jne pop inc sub push cmp pop xchg push mov insl jp mov sbb mov xor sub dec jno cmpsl mov mov ja xchg mov repnz ljmp (bad) or into in push or push cmp loope sbb dec pop insb or cs mov and adc (bad) mov arpl imul nop orl (bad) lock add xor jno jecxz cli inc ret pushl inc cmpsb cmp arpl imul dec pushf jnp mov adc cmpsl mov insl mov dec loopne xor dec sub (bad) inc sti push (bad) rol aas int mov pushf xor scas fnstcw inc out mov leave fistp (bad) push mov xchg fisttpll pop mov add jge (bad) and mov imul jns mov sti js or mov fsubrs jle movsb (bad) mov adc idivb and es push push xor aas cld mov das push jne pusha xchg outsl mov xchg (bad) cmp mov dec and insb mov mov lods mov (bad) setne dec enter imul or xchg ja sbb dec sbb sbb aaa push xor mov movsl nop jg callw nop data16 mov jne (bad) jmp sub bound std enter mov movsb pop jge dec inc jecxz jns cmpsl es daa mov xor lea imul in in lcall add lret mov jecxz mov mov xchg ljmp addb pop xchg add cmp and cld mov dec adc sbb pusha xlat (bad) fwait cld pop mov sbb fs cmp scas inc mov adc add or aam dec ds rcrb mov dec andb loope into rclb mov add cltd and fnsave xchg shr insl out mov aad icebp sub mov mov pop fstp sub jb cltd loop fsubrl mov sub sbb mov ret aaa clc push fcmovnu jle std stos out sub imul jmp lods push jle lahf andl test pusha sbb popf mov leave mov shrl adc les ret insl xchg pop dec fsubr int3 mov jnp fcmovu pop cmp sahf jnp sub xor pop xor pminsw mov ror xchg pop leave xor mov js lds jb sub xlat and cld call pop mov lock cmp cltd aaa insb (bad) fidiv or cmpsb sub xor pop and cld (bad) aaa adc inc inc mov imul scas sub or sub stc pop push inc movsb jle arpl xchg fsts dec std testl cmp jbe push addr16 aas stos imull or pop ljmp pop (bad) push mov jb push sbb (bad) xchg jnp cld push leave cmp jl mov and std cmpsb (bad) int3 bound sbb lahf gs subl push lea shlb sub fsubrl pop xor and xchg inc and test cmpsb test out pop repnz stc bound mov sub mov mov adc (bad) in add xchg and cld fldl pop movsb inc fildll (bad) ds adc or xor mov mov fisttpl test add aaa push gs ljmp pop pushf jb scas inc push sbb mov push sub dec mov fmul lea add adc aas popf das lret xchg xor jecxz mov inc cli mov jns outsb or pop out pop push imul push mov xor mov mov xor aas sbbb outsb (bad) push sti movsb add (bad) pop (bad) and inc sti pop sbb mov rcr inc cmpsl imul mov mov xchg mov arpl mov aad push ss (bad) repnz inc jno pop add xchg insb mov std lea bound add or jnp nop push insl jecxz mov adc addr16 stc jecxz mov jno in inc cmp cmp call pop and mov dec data16 cs jp xor pop inc push xchg cmp sti addr16 mov mov mov jbe fidivr mov es pop stc lds and mov pop insb aas lods xor adc or jb cmp outsl gs adc fcoms inc addr16 ss add pop xchg jne cmp or pop xor outsb mov out cmp and (bad) sti push pop jmp fldcw pop jnp mov jns inc push add out xor imul es pop sub lds xchg jmp pusha inc sub push test push ss movsb push mov add inc repz iret in jmp jb fdivrl add and scas mov and xor sub sbb in test adc in loop dec in ret pop jp xchg test cs xor push add lods mov std pop ljmp aad out insl add push push (bad) into js jnp andb fwait or xchg js leave push movsl inc or or fidiv xor pop lods stc ss jl int fistpll push stc gs jo adc rcrl xlat xchg sub aad lods call jge popa movl cmp inc dec sub idivb inc mov ljmp pop pop lret inc data16 fnop xor pushf lock dec std mov (bad) cmc cmp aad mov jecxz out jecxz ret dec std sahf cmp mov pop pop mov push mov cmp (bad) shrb jg imul not psubsw cmpsl pop aam push adc stc push xchg sub (bad) data16 mov and jno in sub loop test cmp xor lret mov push inc mov stc sbb aas sbb pop (bad) pushl mov mov mov outsb ljmp lret cmpsb pop nop les sub icebp lods movl (bad) bnd adc sbb lcall lods inc outsb gs push js test mov jecxz (bad) imul fisttp mov arpl xchg or xor ror push sbb cli adc mov repz and (bad) fldenv sbb and adc bound lahf push cmp insl outsb cltd scas sahf mov xchg repz fwait out fmul jno and scas pop cltd je pop lcall and jb sub movsl test add mov sbb sub adc sbb test jecxz js roll mov movhps cmpsl mov fwait (bad) imul imul cmpsb inc fcmove xor jg jae sahf mov rcrb stos lea js repnz and push jle push bound arpl adc mov mov cmc xor js and mul iret jmp push (bad) xchg xchg out les shr jnp sub cwtl xchg movsb push aad arpl sti iret and adc repz (bad) (bad) jmp mov sub dec inc nop adc pop jg lea cmpsb test repz std movsb push jmp adc (bad) (bad) lods sub stos jp dec push jp mov inc mov lea dec (bad) xor xor xor jnp pop repnz aas ret nop add pop push xchg (bad) pop pop bound into stos mov mov pop dec sti (bad) mul cmp in mov (bad) cwtl cmp ret (bad) scas dec out rcl mov aas inc cmp shl cmp dec movsl lret mov cli xchg adc stos out mov adc push rorl mov and add test fadds dec mov mov stc push sarl loop gs cli adc adc cmc js hlt mov sub xchg push or xlat test cmp fisttpl cwtl pusha mov sub js and pop test or rcr adc jno mov addr16 daa test test into mov in inc mov shlb xor lock cmc jp dec ret iret fucomip inc or push add dec imul in sbb rclb add lds lsl outsb mov mov xchg pushf sbb fisubl leave repnz inc roll jno outsb insl sub mov push cmp cwtl (bad) mov mov mov (bad) movsb and xor testl roll lea outsb arpl outsl dec shlb xor xor rolb fldt mov jle xchg cmpsl push test cmp and pop arpl add sub sbb notb add mov cmp mov out dec mov outsl xchg jns (bad) jb pop xchg or cmp orl mov fisub orl mov xchg (bad) repz fdivs cmp dec push call aas mov xor mov xor mov and mov fucomip pop and mov mov jmp xchg mov lcall mov int3 dec dec pushf rclb pop fcomps cmp bound jle mov sbb inc sbb mov push jns cmpsb clc clc inc and mov push push jnp,pt scas das ss mov outsb inc jbe push dec mov jo pop mov icebp orl and in jle dec mov sti aas gs jae xor mov sti iret add insl cmp push es inc fiadd movsl xchg aad inc cmc (bad) or loop nop dec sarl data16 lock and cmpsb std jecxz mov pop push xlat or aaa cmpsl (bad) repnz mov not es add imul in adc scas push movsl test xor loop and iret std rorl mov cltd push jo lods int3 outsb nopl lods into subl pop sbb cmp push cltd aad push push xlat fcompp fldenv test mov sub lret push lods jecxz adc fs subl xchg fimul dec jg and pop in hlt jns arpl push hlt out xor adc (bad) xchg cmp mov test imul add sub shl cmc lods push andl sbb (bad) or push rclb stos fsubrp das nop mov push cmp stc shlb sbbl cmc les inc or iret notl imul arpl and addb out sbb push aaa adc fiadd repnz addr16 dec std xchg int or pop jo arpl adc xor (bad) cmp stc (bad) dec adc repnz sub les pop adc mov mov xchg (bad) (bad) adc fistpll ret jge pushf shr push cmp pop movsl sahf inc and aam fwait stos sub gs and fisttp outsl nop stos leave jecxz ret sbb aas rcll push adc lcall clc cmpsl push out mov (bad) push inc test dec or stos mov data16 push xchg xchg push mov divb mov add sbb and adc test mov sbb adc icebp inc dec mov into sub sbb into xchg mov pop nop jp add fdivrs ficoml pop xchg popa out lods pop not inc lret jno pushf std pop dec pop (bad) pop add ljmp dec dec inc push xor dec or je aaa mov out cwtl xchg mov fsubs in out push cmp sub sub out mov jno rorb add jbe stc fstpl cmp cmc (bad) cmpsl cmp adc sbb repz add mov cmp sub popa xchg iret push roll ret movsl lcall mov lods cmp push or add push dec movsb int je push pusha insl dec stc push add jae mov adc and lods mov jns aad scas shlb mov (bad) insb dec imul push repnz lret pop jg or out aam xor mov mov pop daa push sbb bound rcrb ficompl fsubs enter cmpsb (bad) enter lret cmc jbe imul mov inc xor fwait cmpsb pop cwtl cmp fisttpll popf mov xor repz xor or inc pop mov scas clc xor js mov fsubs fisubrl sbb test cmp mov jae fisttp int3 out cmpsl lcall icebp dec adc das mov sub nop sub mov cmp test mov push movsb popf cmp stos mov bound mov fistpll cmc addr16 mov or mov popa sbb arpl dec jno stc data16 insb sarl sub jecxz int push mov or in (bad) push jge and xchg mov mov push loop dec gs or inc jb xor lods jg pop aad outsl and adc incb inc insb inc push sti push push mov mov jp adc (bad) ror addr16 ffreep sahf pop or inc mov jnp or es js ret nop dec mov mov insl and movsl js jbe (bad) leave rcrb mov stos xor out push add xchg lea push sub leave push dec test mov stos jo cld mov and add jge lds or and ret lods sarb sbb adcl test loop and inc ds push (bad) lock stos jae pushw xor mov movsl popa pop dec cli jp lods (bad) ds hlt pop inc lret mov subb stos xor lock shrb dec sub iret (bad) xor cmp mov (bad) or sbb pusha lods cmc add and push pushf xchg fnstenv pop and dec push cmp loope fild or jb jnp jl cmp jge aaa int3 std mov jo inc scas push cld aam pop outsl mov sarb sbb xchg adc adc cmp inc push mov jne cmpsb sbb xor ret pop xchg mov sub fimull jns test inc sbb push sub inc shrl daa or test or inc or icebp lahf popa jl lret jb aam out push and loop pop decl icebp jb daa pushf nop or cmp add enter cmpb sub ret mov mov push fstpt or clc and push xchg fnstsw imul sbb neg sti inc cmp (bad) in in or (bad) lea inc dec adc out cmp pop les scas mov mov fsubl cmp lock pop add inc mov sbb xchg scas inc les call mov dec push jb xchg hlt sti jg mov enter and mov xchg aam cmp fidivl inc lods scas icebp or fldl sbbl int3 scas shll popa jo movl rcrl cmp jns aam loopne ret popf dec and rcrl push cs (bad) cmc mov sub enter nop or test mov cld or xchg add in lock mov push add fisubr test inc adc fdivl ret and rcrb push repz loope pushf push mov jmp addr16 dec dec jg push js int cmp lret femms add gs xor fldenv and inc jecxz fidivl mov movsl aaa roll outsb (bad) push pop sub adc adc rcrb push nop (bad) popf ret lock xor inc mov jne jb dec orl pop ljmp mov scas (bad) fs cmpsb jae jmp (bad) int mov xor test jmp xor inc lret js cwtl mov fsubl or push stos arpl push and inc push xchg test incb hlt push xchg pop push aaa push jae adc in out fcompl mov dec jbe xchg add add sbb les insb xchg movb push jl in cwtl push mov xor (bad) xor into or subl and add pop scas push fmul rcr pop arpl xchg sbb into mov es add fimull (bad) hlt mov jl fst push mov imul ret mov ljmp push lcall lods repz fdivr or int3 and (bad) or loope sub int cltd xchg mov sbb add cltd dec jp sbb cmpsb push sub pop adc mov pop add sub jb in or ljmp (bad) mov sahf jno ss cmp lret (bad) add and imul pop push dec add push sbb loopne rcrb sub bound adc jnp lret movsl xchg mov adc imul out push sbb dec cld (bad) pop ljmp pop aaa sub sub loope cmc xor scas bound push ljmp add cmp cmp push pop cmp mov add inc jb mov shr outsl mov incl (bad) dec cmp je mov dec push (bad) jbe mov push xchg ljmp xchg sub cmpsb xchg bound out dec shr or dec cmp mov bound (bad) mov mov cmp lret push ja xor out (bad) les cmpl and adc and mov test jp inc xchg jbe lcall pop cmp push lds stos sahf cltd pusha sbb ret pop add inc mov push add movsb shlb fwait dec xor sbb sbb sbbl sub inc lds mov (bad) jae popl outsb in xchg out or add daa js int3 xchg icebp adc icebp pop ja nopl cmp and xlat sbb lcall pop mov mov xchg sub cltd and inc pop je sbb jbe pop jmp scas pop mov sbb lcall xchg sub sbbl cmp push jmp jne and pop inc dec sbb dec jae jge push pop repz xchg les repz cltd mov ficompl test jbe xchg dec push push loop sub jecxz mov xchg xor pop ljmp imul cmp adc pop xchg mov fisttpll pop mov out sub dec and sub cwtl mov and bound cld or (bad) push push icebp add (bad) mov pushf movsb sbb or es push dec aam xchg and lods jl dec jb mov fucom inc leave in cmc dec cltd (bad) fisubr sbb fildl ja fwait and shl lds xor fmuls stc adc bound jge (bad) lods inc cmp in push ret gs xchg (bad) xchg xchg sti inc mov or pop pop int rcrl jne hlt xchg add inc sub dec data16 and sub pop aaa mov mov xor mov push sbb mov fisttpl (bad) sbb movsb das jo dec xchg mov push scas mov or in adc cld dec jge stos pop sbbl xor js lret cli mov enter stos lds ret dec adc lods lahf sbb ljmp xor xorb stos cltd or jne mov shll xchg mov rcrb stos cmpsl inc sahf ds push dec jb jns cmpsl leave das pushf sbb lahf mov jle dec rol arpl mov mov add mov pop iret push cli xor fistp jno jbe jne outsl es enter mov push adc add sbb bound push (bad) push cs jge jle push xchg cmpsb pusha cltd ja lea je jl jmp adc sub dec adc xchg in jp leave adc add rclb iret add iret loop dec ret aad data16 dec inc cs push or out cmc inc add shll mov lahf ljmp mov out fnstcw or stos sub xchg mov adc enter (bad) adc or jbe jp lcall pop inc negb sbb aaa dec inc sbb negl fisttp mulb xchg mov data16 in add in cmp jmp test call sarb in dec ja je addr16 jae jmp sbb fcom pop repz xchg ret cli cmpsb jg sub mov out test in sbb dec lods xchg xor cmp mov add xadd stos sbb jecxz outsb std mov add fisubrl pusha sbb popf test mov stc pop cmp mov stc fistpll mov movl mov add insb jo sbb push mov popa inc addr16 mov loope pop mov js inc mov icebp fmull xor fist mov into pop push dec in testl push cmp mov andl jns cmc jge cli movsl fs mov mov call inc pop rolb dec dec pop mov inc (bad) les fistl mov (bad) rolb dec mulb scas push fisttp sahf outsb mov fisttpll lret cli jmp hlt xchg aas imul mov jg fnstsw stos or push xorl or push test testl je sbb js jge icebp std xor inc and dec xchg rorb mov movsb int and cld test mov cltd ja fistpl mov outsb flds test into push push jne pop dec dec add aas or sub xchg push jge aas pop xchg jb cs (bad) xchg lock cmpl lods lds js mov jbe adc clc loopne ror add mov sbb insl push push mov xor outsb pop cs inc push xchg adc sub stos fisubrl push repnz push das push mov ret mov inc mov fcoml mov ds (bad) lcall push xlat mov fidiv push mov js inc aad lahf xchg cs mov lods xchg jl push xlat inc aaa test or pop loope or add pop pop mov lret hlt dec pop jne sub sbb sub popf jns call inc enter mov adcb xor xor dec movsb mov stos (bad) cmc loope jge lret fs ss lret out pop jecxz iret std lods pop sbb and les jl jnp inc das lret cmp and adc xor ljmp je fidivr jle test dec lods dec (bad) andl out mov mov pop xabort int3 lods lret rcrl sbb mov sbb outsl test out pop mov sub jmp repz out stos mov jo pop cwtl cmp xchg mov repz dec mov ljmp push daa pop mov mov adc mov into mov push mov jae scas pop (bad) lcall shr pop sub stc fs mov lock sbb xchg fistpl adc sub cmpsb cmc adc dec xchg and xor (bad) jl rcrl mov push loopne sub imul sbb mov jo in jb out xchg popa repz iret adc jecxz fcoms push pop or in cmp or je sub push outsb pop mov bound pshufw pop int addr16 sarl pop adc test dec in notl and out test js jns inc xchg fwait sbb js sbb popf cmp mov lock imul scas test das fst jmp push push cmc mov dec aas xchg sub mov mov or push aaa enter adc xor and (bad) ret xor jns sti mov cmp lds fstpt inc mov inc popa mov add mov push sbb into xchg popf lret pop xchg xor jg dec (bad) enter xchg test sbb shlb fldt sub (bad) jle lods mov cwtl pushf lds mov mov ret cmp adc mov sbb hlt and xchg mov ljmp xchg jb lea gs arpl dec stc mov mov cltd sub inc ficomp fisubrl dec lcall cmpsl (bad) pop rorb sbb xchg push es xchg mov js xchg jecxz gs inc jo popa inc ror repz pop xchg inc mov movsb neg cmpsb mov jmp jns xchg lock mov sbb fbld sti sbb stos int cli xchg cwtl aaa push jno mov sbb (bad) jne fcoms push cmpsl xchg inc lds mov in pop imul dec push mov lret xchg jbe lea andl mov pop arpl pop lds sbb stos xchg sub sub sbb mov repz mov loop lds cs jl pop iret pop jmp fimul or iret movsl cvtps2pi int3 push cmpsl cld shrb add push or push mov jo lods ret pop push leave or movsl daa cwtl (bad) mov js pop punpckhbw ret cmp jle pop fildl fwait mov and int3 mov ss add push or or xchg aas mov add (bad) mov xor icebp dec dec jno xor js inc sub stos pop and pop les xor cli movsb into mov inc roll mov ficomp dec mov icebp jo dec and dec jo mov negb or push pop pop inc cmpsl push iret and iret (bad) mov popf and leave stos flds mov dec rorb push fisubr pop push sub aam push jmp fisttpl inc mov leave cmpsl jae pop pop push sub lret pop faddl lea call xor cmp add jns ffreep pop xchg xchg test push aam push cmp jnp cmpsl clc incl inc pop cmp lret int3 xchg push dec or xchg adc mov insb or js repz adc ja or mov pop mov inc fcoml dec xchg test adc dec fcomi sbb out pop cmpsl repnz xchg lock daa repz sti lds sti jae mov mov fisubrl in add push mov aad dec adc popf out dec xlat push sbb test repz add mov ss inc xchg hlt mov fimul outsb pop ja dec stos (bad) (bad) dec pop adc cmp push or int int3 adc mov test dec xor cwtl ficoml push fisubr lods sub and and cltd scas fld fucom ss and and jle sbb add outsb mov rorl jecxz leave sub repz xlat js adcl xchg sti lcall mov pop je sti xor (bad) sub (bad) ss push aaa loop ljmp in or iret cmp pop adcl or sbb fisttpll mov and sti icebp aas xor sbb popf push ja test sub xchg insb shrl and stos out mov (bad) jne iret jp sbb sub divl out in sbb jbe and addb stc rcrb or mov out sbb test inc xchg fsubs jnp lret (bad) jo out xchg dec test aam in inc fcmove popa inc dec add or stos popf push cmc lods cwtl sbb add xchg fsubrl mov add lods adc push mov imul pop arpl lahf xchg pop mov int3 push push int mov arpl hlt ret push pusha fimul (bad) cmp aad (bad) outsb jns lea fdivrl scas pop mov mov sbbb push pop insl cmp dec jo or or ret or push cld sarl fs xchg (bad) cli outsl stos xor pop loop adc into lret and xor je out fidivrl xor push pop push mov lea adc inc (bad) fsubrp jo jns fild push (bad) mov lea inc xchg ret (bad) mov xchg sub fistl jo or insb out sbb stc jae sub lcall sub sub xor in xchg mov dec pop pop cmc cwtl sbb stc or mov pavgb popf loop add add inc xor dec mov xor jmp sub xchg pushf ret and fnop (bad) mov bound and dec ja sbb enter pushf movsl mov sbb cltd sub pop mov mov repnz inc or xchg popf cltd mov call adc stos not int3 sub andl rclb sahf xchg cmpl pop mov inc and inc imul mov imul add bound mov jle or test pushf jno popa cmp push xchg cli (bad) (bad) xor mov inc inc paddb lea int testl push repnz imul mov xor pop pop hlt je insb jecxz and sti pop orl int insb push dec jecxz and out xchg mov xor icebp sub test mov mov sub lods std inc adc sub xor pop scas ret stos push xor in adc jge mov les push jnp ljmp out cwtl sbb cmp sbb dec test divl aam mov int loopne cmp cmp into lock dec mov inc push (bad) lods push mov mov pop jmp push insl test (bad) cwtl fwait rorl dec and and dec aaa ret cmc push lock cmp adc cs jae adc cli scas mov pop or jp inc mov (bad) iret and mov out das inc and lcall or (bad) movsl enter cmp pop or clc aam mov lock cmp (bad) jmp fiadd aam push push xor dec sbb jo in push mov ja aam jmp push dec stos hlt mov neg bound xchg and leave (bad) jo dec mov add stos jne mov mov aam les insb cmpsl ljmp cmp cld jo call cmpsl daa sub aad pop cmpsb stos and les in and jno mov sub mov push pop pop mov pop aas or cmp xchg mov mov call sub in pop in sbb mov cmpsl jbe lret mov mov fiadd jg lret loope ds cld push add test mov or (bad) notb lcall dec xchg xchg bound leave mov rcrb mov jl cmc and out xor out mov add fnstcw mov fstps popf daa shr stos sbb mov pop inc (bad) aaa sarb out daa leave pusha pop lahf pop push xchg fcomps mov xchg add cmc xor adc and sti push push sub cmc adc mov xlat (bad) std cmp (bad) push das jmp pusha hlt js add shlb gs fnstcw insl adc mov sbb lods cmp push mov xor inc (bad) pop cmp pop mov add pop push rcll dec ror dec dec lahf mov js shr push mov loopne lods and inc mov add jnp mov stos ficompl push movsb and inc ja pop push cmpsb mov push aad pop xchg ss cmp enter sbb push jae pop loope imul cs adc imull jl in push xlat lds mov push cs mov dec scas push or xor xchg cmpsb dec inc aad add cwtl adc dec add mov shlb lret mov std lods inc gs jo cli jl ficompl mov jl xor sbb js cmpsb cmp and aam mov add std popf pushf and out xor nop xchg sub sbb push lea push sbb scas fisttpll (bad) lods inc push or (bad) cmpsb xchg in leave fistpl imull scas cmpsb xchg jp shr sti cmp xor adc xchg and mov pop mov (bad) ja cmc mov dec aad sub cmp mov pop push mov flds icebp xchg add (bad) clc dec lods ds pop xchg mov call sub mov (bad) xor out cwtl push or fisubr and (bad) insl sub dec pusha popf cwtl sbb pop faddl jle adc loop and cmp cmc inc shrb sub cmpsb sbbl (bad) mov insb xchg inc sbb aam (bad) setle scas mov leave mov jmp sub stos ja (bad) popf adc xorl push fcmovb or adc xchg test and (bad) gs outsl into pusha pop jnp xchg repnz aad push cwtl popa xor je leave xchg mov jp lahf mov sahf jnp add int3 iret push xor adcb xlat mov mov adc mov bswap mov rcrl mov push adc push int3 ret jge cmpsb std les out jnp ss push enter popl jmp ficomp lea mov (bad) fbstp pop bnd fistl sti pop test lret std pop das sbb call fdivs (bad) mov xchg pop jbe incl (bad) out (bad) in sbb mov stc data16 cld fwait mov leave push ljmp adc mov xor sub leave lcall jnp mov sahf mov push pushf mov push sub pop (bad) out pop scas pop sbb and je ret iret push cmp add enter add cli inc dec aad clc into jmp stos jne adc push ss inc jne loopne mov (bad) lret sbb movsl jle test lock push and or adc nop fxch iret out jp jbe and je lods push sub mov push add or das and adc mov push test pop add inc push mov and in lods mov and mov iret dec add in pop lahf loopne movb dec stc lock cmp je jnp mov add mov and loopne data16 sub sbb jbe fsts inc dec lock mov sbb mov xchg jge movsl (bad) adc out jae inc int3 adc jne test daa jo orps int mov lea mov movsb add push mov jmp imul fwait iret push mov loope push outsb int pushf clc sti icebp lods fcomip pop and jmp dec insl dec out ret jbe xchg pop test jg sub stc lea lods mov adc scas ret ret in sub je jne add cwtl shlb pop out cwtl push pop pusha jecxz test std jo push push push add inc xchg cmc jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov jmp scas pop mov add aas xchg xor roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xor mov inc or add or add add add pusha or add add cwtl ja add add jae inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add dec lret inc push js in (bad) bound adc insl (bad) (bad) mov jae sub and daa neg push add (bad) out insl xor sub mov push mov mov mov sbb and (bad) xchg cmp xchg dec and cmpsl mov ss popf stos lret in pop cmp mov rclb js inc in push test jne or push cmc xor ret jge add imul or mov inc mov mulb stos out mov cwtl mov dec jb test pop ret jg inc cmpsl or cmp iret lock dec int3 and adc mov cwtl addr16 outsl or xchg and rolb push cmc es push push sub and mov inc gs cmc xchg fldl xchg mov rorl xor mov xchg inc and out sbb add sub das clc scas dec shll xor inc outsb cmc repz movsb add rol (bad) or (bad) in dec sub xlat test jmp push push clc std cltd or imul fldt ja mov roll inc stos push outsb sti add xor cltd les mov mov icebp xor bound insb sub dec cmc test adc lcall or pop cwtl jae adc jo cmp adc jle adc popf xchg repnz das mov or out adc push sub inc cmp add adc scas and movsl pop scas adc mov (bad) bound das icebp add test xchg sub dec (bad) repz sahf add push pop inc dec xchg or or loope (bad) in jae push mov out jb mov fs inc dec jl test call pop cmp clc clc daa jge (bad) mov (bad) add in mov push shr jl insl mov (bad) int mov rclb pop jp cmp inc jmp xor scas fwait gs mov iret mov and dec dec imul push loop,pt cmp add hlt (bad) rcrl jmp cld mov out rclb cmpsl cmp and scas mov pop aas scas aaa loope dec mov sub xor cmp mov cmp or ds add inc int pop jmp xlat sti cmp and popa push xorb int3 movsl stc sub pushf mov sbb xorl jg mov xchg sbb dec jg mov add je mov xor push inc adc (bad) cmp or (bad) aad lods jbe pop sbb test popf pop nop xchg fisttp push pop xor pop adc inc cmc sbb jmp cmp jbe sub inc test lret jne std jne fcoml jge jmp dec jns mov add repnz repnz mov xchg dec cwtl add cmpsb sub int (bad) xor adc in jl mov clc dec lods icebp pop divl push add or push jecxz cmp inc mov mov (bad) pop push stc xchg cmp stos cltd dec into pop std xchg je mov scas out add pushf xor push sub lods popf mov mov (bad) aas je sub dec idivl adc andl nop (bad) clc adc fstps adc fild mov push sub xor sarb sub aaa mov push fldl ja add or mov nop iret pop aam lret and cwtl out outsl dec xor xor pop (bad) arpl fildl mov push popf mov jns dec aam xor push cmp test dec xor lods imul xchg add rolb pop jl scas dec mov int3 (bad) idiv out (bad) iret and movsb xchg cmp test xor repnz data16 outsl test inc out xchg out lret push adc adcb cmp pop aaa cmpl das dec stos sub inc enter outsb mov push mov scas pop loope das sahf xor lret push sbb pop sub mov insb ljmp or rcr push sbb ljmp dec mov lock clc aas pop (bad) cmp lods xor push test dec lock stos shl push shlb xchg (bad) jmp insl sub arpl cld outsb push (bad) dec adc int3 xor stc fmulp cs fmuls mov mov stc dec adc xchg sbb into clc (bad) sub and add adc jae insb out out add cmp pop aam xchg aad scas xor movsb stos mov pop mov mov or mov and jo jmp mov es out fnstcw push or scas icebp mov sbbl test push dec sti movsl mov mov jo in pushf stc addl xchg sbb repz and pop js enter icebp int shr rorl adc cmc aam mov pushf mov mov jl inc adc not dec and sbb ds lods insl push out ss adc mov pop xchg ss js movsl rcrb jns lock sub popa cwtl pusha xor or push cmpsl and cmpsl es adc test mov adc loopne into lock cmp ja adc push sahf negl cmp mov test mov push ret cmp pop cmp lret jg inc mov (bad) push (bad) jae xor jo lock mov pop stos das out sbb and test cmp dec gs adc and cs xchg test or mov int3 push or jb inc movsl cmpsb mov movsb cmp inc mov add (bad) mulb dec aam push sahf stc sti dec mov test lods mov (bad) mov adc cli outsb fsubrl xchg add sbb ret add dec mov (bad) cld int3 cltd cli loopne mov dec jp leave flds dec push mov mov add and lret orl ret cmp sti and lds inc and add js cmp clc push jb stos (bad) cwtl jno pusha xorl jnp or popf push xor call stc push push xlat xchg cmpsb or xchg pop faddl cmp loopne lods jp pop jp cmpsb mov or out repnz pop dec (bad) jnp push fistpll pop flds adc jge jg jns mov mov sub cmp loope push push xlat test adc dec (bad) aad popa std call lock jo add mov push and call fs fsubp mov repnz xchg jmp mov andl mov add inc xor lahf popf bnd jno fisttpll out ret inc addr16 pop cld push fist cmp sbbb jl pop or sbb and jns and push jne sbb mov inc cmp addr16 int3 xlat js aam push out pop roll cmp mov enter xchg mulb or sbb je jp js mov mov or mov jmp xor inc imul out xor out test iret cmpb push ret mov (bad) cmp xchg jg into loope mov pop jnp push imul sbb xlat push fidivl (bad) or mov incb cmp out (bad) jb sbb pop mov mov cmpsb jno pop repnz push (bad) mov mov mov fisubr inc adc jl and test push xchg ds je push test (bad) pop xor and inc jae in mov in or jb nop mov ds notl lret stos paddw aas test dec (bad) sahf sti out jbe add push push outsb sbb lea stos push cs into ficompl xor lret addr16 inc sbb or scas xlat (bad) test inc movsb ret lret and and js in int sahf in push (bad) leave mov inc les xchg xchg fyl2x mov out and rclb pop test mov lret or push adc mov cmp das ljmp jne mov jne stc cs in aam pop pusha adc jae out pop mov inc call ds dec jp jb add sub and dec leave test jo je scas inc lock dec mov clc sbb pusha jne out movsb sbb xchg jp push fsubl mulb jge jge push repz stos call fsubs pop and sub and fwait sbb dec xor inc and dec hlt stos lock cmp push jne xchg xor xchg xor enter xchg or inc inc ss cli fstps in dec sub push pop cmp out movswl call dec out stos or dec jae push test mov sbb fstl add add push cmp mov test lods xchg jae xlat pop cmc imul cmpsl enter fisubr and push push pop add lahf push lahf pop and cli movsl ljmp jmp xor and jle sub shrl aaa repz add orl push (bad) xor cmc popl xchg sub sbb mov dec push or es or lods and jmp sub fwait xor addr16 js lret loopne sub rorb fsubs cmp sub pop push rorl dec (bad) fisub adc es sahf lods adc (bad) mov or mov movsb cli mov rolb mov pop in aaa jb pop popa xor cmp lds movsl dec cltd cmpb mov insl jg mov mov push sahf pop rolb ret and out and mov testb push out mov push xorl (bad) aad loope lds addr16 stc repz push xor xor xchg fs and xchg inc (bad) push push das xchg int adc adc mov push mov xchg cmpsb or mov mov sub leave add nop fildll mov sbb ss lret repnz in negb jp ret jge pop sbb cmp pop insb (bad) xchg imul lret and sub in xchg jge lods or add aas xlat jne (bad) jne sbb push xchg inc lods ljmp mov test sbb outsl adc push fs nop xor mov or and sub and mov xchg arpl aaa lahf lahf cmp (bad) push and and bound add std xor leave cmp loop je fimull or sldt (bad) std xor xor imull mov aam cmpsb test mov (bad) int js lods loopne arpl out dec out xchg sbb mov rorb aam lods and sbb ficomp aaa lcall add arpl mov clc mov (bad) mov cmp mov loopne adc std test xor inc and pushf retw add mov push fldt dec xchg xor insb pop (bad) decb fnsave stc in cltd add sbb xchg mov pop push repz fisubl push les adcl aas pop mov int mov adc test nop dec and mov xor js push lods frstor dec in fsubs loope ror jle add pop or testl xor mov mov neg sbb loopne dec mov mov clc pop out cwtl out pop mov mov and test divl movsb mov jnp leave mov fdivr repnz dec jns and movsb xchg (bad) mov sbb inc pop lcall jg inc std mov or inc mov jmp inc andb fmul test adc sub mov dec mov pop xchg call in and in add add rorl xor mov or jno or and lret cmp pushf push imul push dec jg jmp lret xchg out pop mov loopne fsubrs sti pop cmp sub dec jno cmp fwait (bad) mov pop popf mov insl cmp cmp adc cmpsb jns callw inc jne cmpsl jbe por push add push adc scas dec xor mov stc aam mov mov sub push mov (bad) nop pop pushf outsl gs daa cmp sub add (bad) jmp dec in std adc jl mov pop pop into sub outsl jnp pop push push pop cmp cltd popa xchg inc push inc test dec stc call mov stos pop cli fdivs mov xor stc jecxz mov push sbb mov or mov dec xchg push sbb adc inc clc bound sbb dec xchg data16 adc in int3 ret inc sbb xchg test int shll mov out ret lcall and pop into mov and pushf sub sbb (bad) and nop outsl enter inc rorl clc xor loop stc pop ret int cmpsb pop insl fldl mov mov test fisttpl xchg xor daa enter mov mov mov mov je rcl add in push test dec dec push mov cmp mov loopne rcrb dec fmull push add and (bad) aam inc orl jle fwait cmp lahf scas and push das mov jge aas std pop jbe inc xlat dec push xor dec sub int xchg mov mov rolb push scas ficompl lods aaa pop sbb (bad) test mov push mov subl mov lds cmp jge (bad) stc pop sub loop cmp inc mov push popa cmpsl je std rorl adc mov dec sbb dec iret jecxz shrl mov out std inc rorb sub jae scas mov imul push comiss icebp mov mov mov mov andl es in sub dec sub jno mov pop ss adc lcall ret pushf inc scas arpl cltd pop js jae sbb dec scas fwait and roll adc jae jp fsubr adc cmc lret and push mov jp insb dec test test push jl mov in sub push sbb pusha out addl mov rcll jp pop inc cmp pop addr16 rorb inc pusha xchg jge push pusha call out cwtl aaa movsl xchg call popf outsl or mov les and mov decb and push lock ss xchg add jb mov adc lock jecxz scas cltd cmp in jecxz insb mov pop iret sar push sub pop xor dec mov pop popf rcr mov lods add rclb std lcall or sub mov jl jae adc enter pop and fwait jmp pop xlat punpcklbw sarl out (bad) mov cmp int3 add jg push bound sub mov (bad) xlat stc shr dec nop and loop fistp hlt ljmp int3 mov in xor mov xor push out xlat ss and mov add dec imul stc mov pop into pop mov pusha out pushf into ljmp inc jmp mov pop push mov xchg xor sub and or fcmovu cs test out add xchg and xor rolb (bad) aaa es mov mov scas xor loope jo lahf incb aaa fwait push insl mov mov (bad) repz add pop call dec insl aaa and loopne add xchg lods xchg in xchg and popf inc (bad) ja mov aad insb aaa iret outsl (bad) roll imul and cmp cmp out nop add sahf sub pop adcb push and lret mov push pop fstl or dec mov repnz xor loopne mov dec mov mov mov (bad) jmp xor push xlat in aas test or mov jae int sub fidivr aaa cli push cmpsb xor mov adc in daa pop and cmp hlt and xorb iret xor push inc out add add and jmp push clc push mov (bad) jbe repz mov call (bad) mov xchg dec aad sahf jg xor outsb test or pushf xor or ljmp dec inc adc jg push adc gs push adc xchg pop mov or nop hlt je std sahf jl push add jp cld add not jne in jbe stos xchg pop fwait push pop and sub int out cwtl jp push jne lods inc faddl jno jp or mov jne clc adc (bad) cltd jl insl or inc adc inc aas sbb sub add fwait ljmp pop pop xor out fsub or outsl sub ss je lods shlb gs dec cmp and jne inc pop and cmpl loopne mov push icebp or cmp push js loope addr16 push mov leave js sbb xlat mov or ljmp jns adc stc mov lret dec jecxz jo adcb mov vmread scas rorl popf mov jp cld cmpsl cli jns int3 sub inc pop dec mov repz stos pop outsl mov sbb in cmc inc cltd adc test jmp xchg pop ss xchg fsubrs cmp (bad) xchg fidiv mov movsl (bad) (bad) dec mov cmp insl sbb lods ror int3 inc xor in jnp mov or mov push out add pop inc stos lret jge (bad) fiadd dec lret fisttpl fs add ss sbb cmp push scas cli jge push mov jmp jl in lret (bad) pop xor push lret and xchg mov and addr16 (bad) mov cld (bad) xchg inc xchg push pop cld and inc movsb xchg push xacquire imul mov (bad) lock dec int3 cwtl (bad) daa test inc repz dec pop push in out out clc dec sub pusha jge adc cmpsb jge sarl add mov imul (bad) fbld dec jp jne fidiv bound mul pop (bad) pop cwtl sub fcmove and xchg cmpsb lahf adc jle icebp sbb and cs push inc mov cmpsl nop pushf push mov cli dec xchg sub push mov sub dec daa sbb scas jp push add lret insl add jp out outsl push dec fistp and jecxz sahf push jge push stos aad scas in sbb push or ja imul cmp shrb js int stos (bad) jbe jmp xor out dec cmp movsl pop or ss das (bad) pop xor int lret mov popa fnstsw dec pop rol lea adc or add or xlat mov in loopne and sub xor movsl notb and shufps pop fwait mov pop mov enter push (bad) dec or xchg icebp and xchg and out xchg pop imul in or scas pop mov xchg pop negb pop test cmpsl cmp and mov jl sub pop sbb and sbb push and mov gs arpl jmp nop and inc adc rcrl js inc (bad) push icebp popa push pop out or dec mov push (bad) call or sub bound and shr mov push push mov mov test inc mov jecxz ljmpw aam call mull mov nop (bad) ficomp mov ss cmp push xchg js sahf xchg dec dec inc in adc push pop clc push insl (bad) repz push xchg pop (bad) hlt adc neg icebp test lret icebp mov ds add jecxz out or sbb sub adc and cmp and nop xorb das pop (bad) and mov inc fcmovb loop in cli xchg dec inc inc mov (bad) loop xchg adc xor add out iret daa inc mov and dec push xchg shll push xor mov jmp into ret gs (bad) jp arpl sbb add dec rorl jp mov mov add icebp loopne mov push imul mov int3 fmull fiaddl fs adc adc in in mov dec rcrl xchg test adc loope jb inc push pusha sub add std pusha clc outsb shr pop mov mov test lcall mov movsb lods sahf int3 mov aam fs (bad) add loopne jae lcall mov mov lahf lods mov das cmc iret mov mov aam and mov fildl (bad) rorb xlat sti push mov out mov inc and out ljmp enter (bad) xor lcall les iret sbb or fbstp test or mov not pop stc dec fldenv mov pusha mov data16 test aaa insb fldl fidivr stos jl bnd inc stos mov mov orl xor xchg cli pop hlt (bad) scas lods sarl mov in imul idivl fwait in lcall inc out cmp push pop adc adc int3 dec jp jne imul cld push sub cmp mov lret mov ljmp (bad) sbbb dec into mov xchg sub xchg ss fstpt popf pop std jne pop fdivs xchg xchg cmp pop dec repnz sbb mov popa leave mov in paddq stos fsubrs fsub test mov jns cmp or pop xor in (bad) or mov jns notb cmp js in adc dec out call (bad) adc fwait xor pop ss out mov lcall push or sahf daa push xor pop iret sub arpl mov aas fsubs out jnp rcrl gs fcomps cli inc mov repnz je sub insl mov lcall mov mov cmpsb pop (bad) jg in adc loop ds pop inc cmp add fistl or roll push in insl mov xor cmp or sti pop (bad) push or dec mov mov cltd mov rcl or pop shrl (bad) jbe push daa roll mov dec idivl inc out or (bad) fidiv mov cmpsl (bad) jp add push sbb sti (bad) jge mull mov push xor or popf cmp push (bad) mov sbb jns scas jecxz (bad) in jl fwait insb rcll shrb add ds inc andl decl mov lcall cmc out or in push mov sub mov movsl xchg push fldt mov jbe pop aam xchg inc insb xchg addr16 pop std sbb lock notl loopne cld inc in fistp mov in gs xchg sub lret jmp cmp dec xchg lock pop loope je push or dec insb push jecxz ja fisubr jle test inc (bad) js or sub pop cmp repnz and imul loop inc dec popf jl loop bound xchg push rorl inc in xlat sbb mov sub pop test loop adc shufps out mov and in jmp lahf lods lods testl push cltd and jns inc fsubrp loopne xchg push fwait lahf cmp je in jmp mov xor mov push es add add mov mov and mov cmp adc or lret add sbb lret inc add jae inc mov movsb xchg lahf pusha push sbb sub (bad) rcr inc cmp xchg pushf icebp mov leave mov cmc or push cmc and and enter mov bound mov cmp and pop leave lods movsb push push add (bad) movsb mov test icebp sarb pusha arpl je sbb push (bad) in xlat jmp ss sub ds (bad) cmp sub xor add adc iret icebp lds mov add bound test and cmp sbb or and mov push mov pop (bad) hlt test jl lcall sahf mov xlat in dec data16 ja or mov sbb and gs push xor bound ret pop repnz mov in scas adc jmp leave imul es mov jns lods pusha mov inc popa rcrb push fld add cmp push pushf bound pop xchg lock cmpsb cmp cmpsb xchg cmp add xor (bad) aaa sahf pop or loopne vpsrlq mov test mov lods mov nop mov ss mov cwtl je mov jne sahf rclb sbb jecxz pop push stc cltd in and adc enter jmp clc lods or jno sbb aas mov loopne lcall mov fnstcw pop pop xchg inc mov push enter dec fadds push mov rcrl rep test out xchg mov pop push mov adc cltd aaa clc or lock mov jl jp fildll dec jmp lock in fcomps fisubl cli insb sbb hlt xchg pop mov sbb xchg arpl pushf int3 inc add inc jp stc pop add inc mov loope pop outsl dec sbb ja and aam cmp jno pop dec mov inc jecxz daa push or fwait sbb pop inc inc out in out movsl mov mov enter push jns xchg fwait adc sahf sbb popa cs int3 outsl loopne shlb push push push dec insl clc popf mov mov or rolb add jmp xchg out push fiadd cmp jmp xchg xchg aam jne xchg dec rclb nop gs xchg push dec jns insl (bad) shll adc pusha adc mov ss inc mov sti jp xchg xchg test repnz mov cmpsl imul mov insl push adc jg addl pop fnop inc inc pop jg cmpsb mov adc mov dec pop les notb dec pop in (bad) jg loope pop sbb out loop sub repz xor fucomi ret push daa or jp inc and pop mov xchg pop addr16 addr16 into sahf test sbb jb int sub nop (bad) mov popf rorb push into jns push sub dec imul fcmovu mov scas (bad) cld xchg xlat movsb pushf dec add dec (bad) outsl lock stos cmp cmp (bad) mov push out and mov lea popl mov lea and or das arpl jae add movsl subl jmp insb in stc insb repz mov push bound cld mov push les sbb call fmull (bad) outsl and fcomip lcall scas cwtl hlt stos push or enter imul mov clc and mov cld push imul enter sub (bad) or lahf pop in movsb push ds loopne and sbb sahf cmp mov adc ss (bad) das repnz insl sbb mov test mov imul iret fwait lods fs inc jp jge cwtl fcoms sahf pop jne push cmp mov pushf mov (bad) add out mov gs xor insl stc popa (bad) adc push gs or andl stc xchg popa pop cli xor subb cli xchg pop (bad) lcall lods aad pop xchg aas jp bnd push mov and fcmovb xchg nop out mov adc dec jmp enter mov dec mov mov sbb jae and xchg (bad) fld outsl jmp fisttpl pop movsb mov mov pop rorb add sub push pusha (bad) out xchg mov xor xor xchg les adc adc mov xor dec push sub pusha (bad) jns cltd mov aam ret pop pop pop cmp sub fs sbb jg lret stos jmp fcoml dec movsl adc out movsb inc adc sbb (bad) xchg lahf insl les pop popa jns fnsave mov inc (bad) popf das add ss (bad) insb sub and (bad) add dec or cmp xchg dec mov aam cmc loope pop inc or adc add cmp sub dec test loop data16 pop jno stos push nop movl bound cmp jmp (bad) or sub push outsl mov push call mov bound ret pop and (bad) (bad) aaa xchg mov pop push cs cmc stos inc (bad) stos sarb push or call cmpsl xchg xchg dec cmpl jmp rcr sarb and pop cmp out adc push insl jmp xchg mov pop or mov cmp fisttp divb cltd inc or sbb push pop loop push xchg mov pop dec loope (bad) mov mov cmpsb pop out flds push jg add aaa clc mov pop xor fisttpll xchg fiaddl sub out fs les sub outsl sub in jg jne inc aam push icebp sub pop dec mov mov mov sti stos add sbb fnstenv (bad) xchg jl aad push repnz fwait push (bad) inc sub add pop mov mov jno testb jle push lahf and data16 push mov scas or test cmp push jns xor mov out sub mov in shll cltd (bad) hlt and or pop dec and call out jecxz mov pop js sbb test dec dec or fnop stos mov and pop mov push mov aaa jne pop repz dec xor popf jecxz dec cmp sbb adcl jbe repnz es mov xchg pop pop dec out sbb jp push push aad clc stos loop inc stos push in frstor arpl hlt mov dec icebp mov dec mov sbb adc push adcb icebp xchg mov shrb inc adc mov ja out sub imul add cld stc adc scas mov lock xor dec or mov pop cmp hlt pop xchg jns clc pop jecxz jbe pop in jmp decl lea jno jp sbb add ret push testb out (bad) movsl mov outsb or pop popf (bad) xor aam cmpsl aas call cwtl outsl sbb xchg mov enter fdivr loope stos mov pcmpgtb pusha mov inc pop xchg lret fcmovu loop cmp inc push loopne cltd fiaddl roll or jns les sbbl jl xchg js insl mov push in adc stos jge sbb insl cmp dec cmp inc or imul pusha cmp sub repz sbb and pusha pop adc in cmp mov out sub in adc push lea inc cld mov sbbl lods adc roll inc inc cmc imul repnz aaa lahf in cmp repz enter pop xchg xchg sbb movsl outsb pop push sub adc fdivrl adc orl popf and in jb and pop adc dec jl,pn loope iret xor test int xstore-rng cmpsl add call adc dec dec lods jo add pusha adc pop xor or aam insl mov and lods shl insl or insl mov mov int3 and mov mov test dec daa jne repz mov cwtl sbb adc popl insl test pop xchg jno cmp icebp jp inc in fcomps dec pop dec push sti mov loop adc stos xchg outsb inc push ljmp cmpsb push mov ret dec push cmp ss popa cli sbb cmc mov aaa mov loopne out dec pop xor xchg or pop mov mov in mov jecxz fwait ss cwtl dec lcall sbb sbb mov jg cmp jl fnstcw ret xchg push pop mov or nop in push vpmaxuq aaa pop xlat (bad) aas xchg leave jbe sbb inc and call push in dec sub adc dec pop test mov fbld dec outsb mov fistpll jns or stos sbb roll sbb mov sbb jnp mov and out inc inc sub inc rorl xchg bound pop jge pop cmpsl mov lods leave ret pop lcall dec adc subb daa int mov mov push jle rcrl jle jo insb cmpsl jle out lea push push push rcrl push and pop sbb adc inc mov add loopne cmpsl xor and rolb icebp push jle or sub cld jmp add mov cwtl enter jp pop sbb lcall fnstcw outsl adc (bad) rclb out cltd iret dec outsl sarb test aas mov lret or (bad) in cmp imul push adc mov bound adc dec push add push pextrw dec pusha xor jb cmp push int inc or mov pop call inc push in subl jno (bad) sub mov sub hlt mov in gs cmp inc lds ljmp sbb push add popa jecxz fstpt push test push enter adc cmp pop xchg add jb push lds in daa mov pop cmpsb sub jnp negb iret repz jle ss out ja mov (bad) pop mov mov ret fdivr ss add int or call dec mov shrl mov test xchg movsb jp xchg pop fs popa push stos lret call decb stos adc lret pop scas push sbb adc faddp loope test call rclb (bad) out and dec and xor pop (bad) xchg es inc inc jg in add mov es leave mov sbb (bad) lret cld dec cmc cli mov cmc (bad) out sub dec mov cltd in lock arpl mov push pop (bad) cmp pop push insb daa setg adc jo inc push out or sahf jo test mov mov jnp test sub repz addr16 loop pop gs outsl mov inc orl jp push xor sub push xchg inc sub cli pop mov mov sti mov test incb adc mov push sub sub call push mov clc sbb addr16 loopne clc jns sbb std xchg pop fnstenv push sub lods dec jne mov ljmp or pop cmpsl xchg xchg dec mov or xchg jb jge lock xor mov in loope fdivr cmp mov nop gs flds shr push jno mov push jl jecxz inc ret in mov cltd pop adc out fstps jle push ret gs addr16 xlat jle lcall push mov das aas lret (bad) dec (bad) add xchg fcomip cmc sub pop les fstl pop loop (bad) and es and inc cmc sahf mov test sbb xchg sub (bad) repz lahf (bad) movsl das rcrb mov insl das inc stos or and int3 xchg add jl mov push mov mov pop ret repz (bad) mov in lahf dec jae dec push enter int3 mov jecxz nop adc sbb (bad) nop in popf gs jle xchg or inc shlb fdivrs (bad) mov int3 es push outsb not aaa mov push jmp int lea hlt adc js pop inc jmp sahf enter sbb or scas out pusha xor insl push je xchg mov sub out rcl mov ret push sbb call inc jle dec insb inc std aaa outsb pop scas push mov pop xor jae jmp sbb clc lcall jmp sbb fcmovnu cmp (bad) xor lock add cmp in gs jbe xchg adc mov cmp jnp cmp fmul loopne sbb jl gs sbb popa fisubrl pop pop fistpll pop (bad) and mov xor gs cltd fildl fcoml fldenv loopne fldt xor aad imul idivl inc jns int mov push cli lret (bad) cmp and aaa or mov xchg mov (bad) stc sahf xlat xchg andl dec inc mov xchg push cwtl mov dec jmp cmp cwtl mov mov xchg sarb cmpsb ucomiss inc leave mov bound fwait out (bad) jns mov push pop in mov cmc dec cmp rcrl jnp push xchg out push dec inc iretw test idivl movsb je (bad) push in cmpb cmp (bad) notb (bad) aam mov mov jmp (bad) mov cmc jecxz xor data16 or clc sbb adc cmpsl push xlat imul imul pop insb mov jl scas cmp mov lds sbb or je push popa cmc fnstenv inc add test mov and xchg into push mov (bad) loope ss cmp pusha and out mov inc push sbbl loop das and cmp rorl push cmp pop dec mov stc das subb in loop or sbb cwtl icebp ror dec add fdivl jnp ss into mov mov dec sub jecxz imul xchg mov sahf xor int stc pusha inc movsl sbb rcrb movb xor push or lds fcomip fisttpl (bad) jl lock pop bnd test and out popa repnz push adc pop pop call sbb bound jg sbb cwtl daa xchg outsb push xlat jp (bad) mov cmp js cmpl jl repz sbb dec ja cmpsl xor or inc test pop push mov je int3 cmp and add mov jno int3 push ficoml fwait xchg cmp (bad) push arpl adc mov fisubrl or mov xchg es repnz mov (bad) dec test hlt pop bnd (bad) ds call (bad) ss rcr jno repz lds cmpsb (bad) and push xchg insl jg into out xor sub pop in sahf (bad) or das sub add cltd ret xor sbb inc sbb fistpll xor pusha mov mov pushf arpl outsl jecxz out in push in jecxz xor jge in pop mov punpckhdq pop jecxz sti test pop es inc and js pop sub repnz mov es xor and icebp iret jecxz inc sbb in dec sub add sbb movsl inc out xor xchg (bad) iret out dec xor inc jnp lds inc pop stos mov xor je push inc dec add scas rolb pop pop adc or jmp fsubrs addr16 outsl sbb pushf adc (bad) mov mov xor (bad) xor xor mov or lret fld1 iret mov pop fisttp aas push insb sbb mov xor movsl andb sar out mov add push (bad) push jl and adc nop push movsl push sub jp sbb dec inc clc mov outsl addr16 shrb adc mov mov data16 xchg add mov sarb or stos stos mov incl sub es mov mov mull rclb (bad) (bad) js int3 add ror add adc aaa dec out mov (bad) push (bad) fildl icebp mov (bad) repnz lea fstpt and or je jp jnp push jg cwtl data16 mov cmc push das cli in mov push fwait xor jp sub leave outsb icebp or lahf jbe jecxz and push push mov test popf jecxz (bad) repz xor ja lods (bad) mov sbb aam mul insl inc imul jne sbb dec push hlt xor mov and ljmp sahf ret lock std xchg test push fwait outsl mov bound leave sahf es jns repnz fs faddl nop cmc outsb pusha loop lds enter adc fistpll sti imul sub popa add stos jp mov add or (bad) xor jge cmp mov pushf xor popa jl push arpl jmp lahf mov fmull test ret mov fbstp mov scas pop xchg out mov pop push in aam loope lret pop sahf mov sbb stos jno mov mov data16 push sbb xchg pop xor imul inc sti scas (bad) cmc cmp cmc aas leave dec push cmp jno outsl hlt and rcrl cmp xchg loopne cmp test sub int (bad) xor addr16 nop in int pmulhuw pop lods push push imul xlat int3 (bad) cmpsb mov pop stos scas lret (bad) insb imul pop loopne mov (bad) sub std iret into mov and sbb out (bad) jo add daa scas and inc mov jne imull jp movsl push push das or sub jge lret imul adc mov jp jecxz xchg or pop shll pop or pop pop lret cs lahf xor vmovd jge ja repz mov cmp cmpsb fstpl and xor pusha shr and ret lret and dec dec jl cltd mov mov xor ljmp cmp lea jbe jge rep inc add ja fcompl cmp jmp push jecxz movsl or add cmpsl xor sbb fs pop xor push mov sbb jle mov mov pop xchg pop js int es jge mov aaa outsb sbb xchg (bad) xor sbb push js push rcll mov mov mov adc aaa mov add jo or (bad) xor or mov xor xlat nop push (bad) mov add jbe test cmp push stos (bad) cmp dec or pushf shrb push scas dec push std sti pop jo pop orl cmc cmpsb addr16 dec clc push rcrb movsl cmp jl scas ljmp push es add in cmpsb sub jp xchg inc or loop lods adc push mov and fsts repnz jecxz outsb loop push adcl adc push or stos pop into push cmpsb mov maskmovq testl dec push scas pop mov push int inc push js les push pop adc outsl cmpsb jge (bad) mov (bad) inc mov lods idivl inc in jae or (bad) scas xor sarb in lea fdivs jo ss push in aaa and push xor cmp test push ds jg,pn aas outsl xor out jecxz jbe aas xor sbb cmpsl xor fs and pop cmp ja enter pop mov cmp and nop cmp xor or jp sti fcmovnb enter push (bad) lods add cwtl int3 fdivrl xchg push pop xchg inc popf pop dec test js push push mov and arpl add xor xchg lcall push push mov xchg xor rorb les loop inc xchg rorl cmc or out xchg aad xlat sbb loop inc and out ss in sbb dec inc test ljmp in daa movhps cltd je add frstor and stos jbe adc daa mov jb mul jp mov push sub jns push mov lcall (bad) outsl cmp pop sbb jmp sti outsl cmpsl aam leave adcl jmp fiaddl adc xor in xchg mov std cmpb sarb xchg mov sub imul jb data16 jbe in shrl nop popf nop xchg fstpl mov loop cmpsb pop test int je sbb std inc xlat andl and cwtl dec pop into jnp insb cld lret icebp fistl dec imulb and addl sub sbb cmp xlat test xchg out sub loop inc cli inc jle inc repnz fnstenv jbe cmp aaa leave arpl jg fadds add stos dec sub hlt lahf and and adc inc pop test rep jne lea (bad) mov outsb cmp mov mov cmc xor cs jg xchg add fisub jbe sti imul pusha add and pop aam or ljmp xchg push pop pop push or dec adc icebp xchg fmuls mov das or stc test test sarb add lret cmp aas out inc cmp inc lahf insb negb divb jmp and hlt call pop pop mov inc mov stos stos jae adc and dec mov mov and sahf fistl and or inc mov popf bnd sub jp xor jno cmp insb adc push sbb (bad) aad insb in in push jnp ret jb sub pop mov jne jae pop xchg xchg gs enter aas inc add sbb mov xlat mov lret push mov or aam mov mov sub scas aaa inc in mov mov xor add xlat test dec clc outsl dec cmp pop inc aaa (bad) fmuls xor mov icebp add je aas (bad) insl mov adc mov sub xlat outsl xchg cs push loopne shrb rclb inc inc pushf push (bad) pusha add hlt dec in push mov ds out es fcmovne or sbb push imul stc pop jge push bound add fs (bad) jno ds loop jmp lds test and mov loop push mov mov popa xchg imul fidivrl and outsl jle outsb xchg outsl jno fild mov pop jae scas std push dec fdivr test or dec hlt movsb (bad) out in movsb mov es leave and lock xchg sbb in lock fsts mov sub xor mov ficoml (bad) jno jmp loope xchg les xor jne decl sbb and mov xor std sbb (bad) mov or pop mov mov mov insb rorb ljmp pushf pop imul xor mov es push daa cmpsl add xchg push jmp outsl mov jo xor xor clc bound dec enter test push shl xchg pushl and std stos xchg popf mov (bad) dec xor inc mov mul dec add divps out dec imul pop mov dec dec fwait adc sbb jle daa and mov fidivr (bad) pop jp xlat cmc cltd rolb jle and fadd mov xlat inc adc pop (bad) mov jmp arpl fnstcw mov fldenv call dec pop popf pop fstps mov xchg imul jge mov jns in enter ret lea adc popa pop adc cli sbb cmpsb dec mov data16 mov jbe test mov (bad) mov out cwtl fistpll imul jl subb mov adc mov jno xor js sbbl test cld fistpll aam cmc pop test xor add les andl pop mov cs std ss mov pop push gs insl mov aaa dec loop xchg xchg jge daa inc fcomps xlat jnp or (bad) cmc repnz lock out dec and and xor es jecxz aas lret lock cmpl ss adc in jbe xor arpl add mov mov stos out adc in in sbb in and mov xchg das dec cmp into sti aaa sbb sub repnz mov (bad) pusha int3 push idivl mov xchg mov icebp xchg jmp jecxz adc jecxz and sub stos out shrl icebp das sbb adc xor add sub addl push sbb ds out rorl loopne call aas pop imul mov popf cs out outsb push xor xchg (bad) int3 ret jge stos sub jmp ss sub jnp add mov inc fadd test stc aaa fstps sbb stc ficom in lds and mov cs sbb push in jle jl aad lret push push call repnz mov outsl lds idivl stos loope dec pop aad outsb nop ret ret or fldt lds loopne xlat push jb jb outsl xor or daa pusha (bad) cmp push pop outsb mov add test mov push mov jmp cmp xchg lock bound push sbb sub sub nop push iret out add mov push push (bad) lds adc nop bnd xor rcll rcl pop shlb cmp ljmp jne inc xor insb mov push lea test mov xchg add arpl imul shrb (bad) jo call (bad) jmp in sub add add pop popa mov paddd pop in mov add xor sbb or mov pop stos push mov sbbl loope es fdivl jmp xchg daa xor fistl (bad) subl fs mov scas std push dec jno push and sub sbb mov ret cmp clc xchg (bad) mov push mov push movsb mov jge arpl xlat loopne lretw (bad) mov pop (bad) inc dec sub inc and fs adc mov lahf sbb outsb mov mov xchg sub fcoml popf mov in xlat jnp mov pop or out repnz icebp insb (bad) enter mov andl out jbe cmp fiaddl inc push mov cmpsl and and sbb (bad) xchg lock call faddl scas ljmp ss cmpsl jae icebp cmpl push fstpt aam fisubr lock sub in loope aad inc in loop aaa cmp repz call fldenv and cmp (bad) dec int3 pop fdivrl pop xchg out mov sub inc lods ljmp cli arpl fcomps cld fidiv xor loop ds fs inc aaa dec into inc cltd cmp xchg (bad) in sti lock loope and pop addr16 or pop adc mov (bad) lea enter xchg outsl fiadd push pop test pop mov and arpl orl pushf shr xor daa lock out pop cli je pop por popf sbb mov adc mov test js into scas (bad) std jle xchg sub sbb sub addr16 (bad) cwtl in es in jp xor jecxz pop cmp lods or cmp mov jmp outsl icebp into dec push mov imul (bad) jl in cmp mov pusha mov jno adc gs mov pusha iret lret outsb shl dec dec pop add stos dec imul fiadd lea lea inc popa imul inc test testl add sub mov jbe mov xchg or pop gs pop jne outsb (bad) jae cwtl movsb push sub adc mov (bad) out inc xor pop xor pop imul cli aad jl jns mov inc push imul jl xor cmpsl mov pop jg imul adc push jl inc mov mov je movsl rcll lahf xor add inc ja jno rorb fdivs or xor mov push or pop push xchg inc sbb push rclb mov pop jo sbb add pushf aas mov ljmp jns arpl pop jnp ds scas xor pop xchg inc nop pop mov lea push scas xchg hlt nop lcall sub lock mov mov mov xchg dec lds aaa sub or cltd lock sub out or fdivrs cmpsb xchg xor xchg (bad) stc test lret push and mov push lret mov dec std (bad) mov lret inc (bad) pop cmp lahf or xorb dec or out pushw stos daa scas shrl cmp sbb adc cmp inc mov test vunpcklps fmull mov mov sub pop imul and aas mov fldl jp loopne scas cmp lret repnz nop (bad) xor jnp jge divb dec ret imul leave lcall jo dec data16 jle adc lods fstpl cltd jp clc data16 addr16 into jecxz imul stc push dec adc xor ss sbb xchg jg jecxz sbb loopne aam imul lret lods (bad) jmp shlb jecxz push jp xor sub add inc aad xchg inc pop call stc cltd (bad) mov and call sbb adc lahf mov popf rolb fidivl test testb jae mov lds mov and ds xchg fstpt inc ficomp stos push jbe pop add jmp xchg xorl aaa jb popa jmp xchg inc gs out inc add mov inc inc jmp jecxz sarb int mov les and sbb mov stc mov lock sbb inc outsb sub insl add outsl test inc or push xor fucomi rclb ljmp adc in nop cltd adc jns (bad) cmp or arpl inc jg push cli (bad) decb les inc in mov pop sbb rcll inc jmp cmpl movsl add aaa insl push (bad) mov stos and outsl dec bound add jno aad cmp jo xor pop sahf fldcw mov push mov pop sbb mov out cmc dec in lods mov iret add insl pop gs inc pushf gs pop fwait mov imulb jne push (bad) add lea mov fidivl enter push jecxz push cwtl pop movsb ds sub sbb push mov iret add xor adc jns scas or push sbb clc out sbb out jae,pn loopne or xlat das mov dec iret fwait push nop push adc dec ret xchg xorl add mov mov xchg mov adc popf out in int adc xchg mov cmpb lods in xchg insb inc test test cmc jb outsl imul pop popa add out loop or lea int3 xchg mov xor lcall orl loopne push js xlat push fnstcw arpl data16 mov or jle test or mov push cwtl cmp loop cmpsl loop bound push loope mov test jo fs out int3 xor push mov imul mov or pop mov outsb test mov mov ret ss jl enter lods hlt mov sub mov pop sbb or sbb mov dec in and jno jmp fidivl icebp lret jns pop pop lock jns adc dec loopne xlat aaa mov mov in mov xchg jmp cmp ds int3 xchg fist sbb repnz ret mov pop xor xlat leave xchg sarb (bad) scas push (bad) arpl aaa test ror shll xor outsb inc mov adc imul adc pushf dec jno jbe es test dec sbb fbld (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz adc lock mov xchg jo sub dec inc dec inc scas inc pusha (bad) or push add add adc add add jmp 