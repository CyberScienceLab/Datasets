xchg pcmpgtd push xor sub push bound orw mov adc add inc or data16 push data16 ret or je or data16 add popfw dec push pushw add pushw add data16 xchg pcmpgtd outsl push mov ljmpw fwait or xchg xchg push data16 add or xchg pcmpgtd inc push mov pcmpgtd loope dec and and sub xchg mov or data16 dec insb push data16 add test data16 xor push data16 mov data16 in out push inc xchg pcmpgtd sbb or data16 imul scas lahf or add add add add cmp pushf dec add add add adc test add (bad) push dec add push add dec add dec add imul imul insb dec add dec add dec add dec add insb dec add insl dec add dec add insl dec add insl dec add outsb dec add dec add dec add outsb dec add outsb dec add outsl dec add add dec add outsl dec add jo add jo add dec add jo add jo add jno add jno add jno add jno add dec add jb add dec add jb add jb add jae add jae add add jae add jae add je add je add dec add je add je add jne add jne add jne add jne add dec add jbe add dec add jbe add jbe add ja add ja add add ja add ja add js add js add dec add js add js add jns add jns add jns add jns add dec add jp add dec add jp add jp add jnp add dec add add jnp add jnp add jl add dec add dec add jl add jl add jge add dec add dec add jge add jge add dec add dec add dec add jle add jle add jg add dec add add jg add jg add orb orb orb orb orb orb orl js dec add orl and dec add dec add dec add (bad) dec add (bad) dec add orl orl orl orl orl orl test push test jle dec add test incl add dec add test (bad) test add dec add dec add xchg fadds dec add xchg cmp xchg pop xchg lahf xchg mov dec add dec add xchg add dec add dec add dec add dec add dec add mov push mov push mov mov imul dec add dec add mov jmp dec add mov sbb dec add dec add dec add dec add dec add mov call mov push mov sub mov pop mov jb dec add mov mov dec add mov in dec add mov adc dec add dec add dec add dec add lea mov dec add lea loop dec add lea adc dec add mov push mov insb mov orl add mov fisttp dec add (bad) add (bad) add dec add dec add (bad) add (bad) add (bad) add (bad) add nop dec add nop dec add nop dec add dec add dec add dec add dec add nop dec add nop dec add nop dec add xchg dec add xchg dec add xchg dec add dec add dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add dec add dec add dec add xchg dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add dec add add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add dec add dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add cwtl dec add cwtl dec add cwtl dec add dec add dec add add cwtl dec add cwtl dec add cwtl dec add cwtl dec add cltd dec add cltd dec add dec add dec add dec add cltd dec add cltd dec add cltd dec add lcall xor dec add dec add dec add lcall rcrb dec add fwait dec add fwait dec add fwait dec add dec add add dec add fwait dec add fwait dec add fwait dec add pushf dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add (bad) repnz dec mov add add add add add add add cmp jae jae popa arpl add and inc add add add add add add je inc add add add daa inc add add add es add add add add add es add add add and add enter add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add dec add add add sbb add add add inc add add add and add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add mov add add add add add add add add add add add add add add add add xor add or or add add add push inc add jo and (bad) decl add add add add add add add add add sbb lods sbb js add addl add lea add push gs outsb imul arpl outsb add inc imul xor push add add inc imulb cmpsb imul addr16 push addb add add add add add sub dec add add add sbb dec adc scas scas inc lea jbe add add movsl cmp add add add sub pushf add add add add and add add lock add (bad) (bad) incl add add add dec add add add add add add add add inc add add add add add add add add add inc add add add add add add dec add add add and inc add pop add add push and add (bad) (bad) incl add add add add test fs add (bad) (bad) incl add add add sbb xchg inc add inc add add add and add add mov pushf dec add mov add pop inc add mov add sbb pop add add add add and add add mov dec add (bad) (bad) incl add add inc add mov add add add sbb add fcompl inc add add add inc add add add push inc add add add push inc add add add push inc add add add push inc add add add pop inc add add pop inc test xor inc add add pop add add push and add (bad) (bad) incl add add add add pop inc add push test fs add (bad) (bad) incl adc cmp add in inc add add add push test hlt and add add add adc cmp add in inc add add hlt and xor add and add add inc add add add add inc add add add add add inc add test adc inc add add add add and add mov inc add test xor add inc add add add cmp inc add add add and pusha push test dec and add inc add add add add push push test push and add add add in inc add add sbb xchg sbb or inc add add sbb xchg sbb xor inc add add sbb xchg sbb pop pop inc add add sbb xchg sbb test inc add add sbb xchg sbb lods pop inc add add sbb xchg sbb aam inc add add sbb xchg sbb jl dec add push (bad) incl add add add fstpt mov test lahf or add add add sbb inc add and add add add add add add add add add add (bad) (bad) lcall add and add add dec sbb add incl add add add sbb (bad) (bad) (bad) ljmp add add and add add test (bad) add incl add add add inc add (bad) (bad) (bad) call add add mov add add add and sub add add add (bad) incl add addb add add sub inc add (bad) (bad) lcall inc add add add add add add and (bad) incl add addb add add dec jns insl popa xor add jo jb addr16 push jne arpl imul insl outsb popa je outsl outsb add add imul arpl add imul leave jl testl mov add popf insb or pop mov and cmp adc outsl push cmpsb imul addr16 push push lahf pop jle and stos sub shll cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add insb and add add add add add add add add mov add (bad) (bad) add dec lods xor or stos add xchg dec jo imul je outsl outsb xor repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg inc arpl gs arpl add add dec lods xor or stos add xchg dec popa bound xor add gs xor add pop add shr inc nop repnz decl adc mov mov jmp sbb dec adc scas scas inc lea jbe and push xchg call mov push sub add or add imul gs xor add add adc gs outsl outsb jae insb gs jne jae jb outsb outsw add add mov and add and add add add or je jmp push mov call jmp add add add add gs xor add add add jae outsl insl inc jo add add es add inc add add sub dec add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul sbb inc add inc add add cmp add add add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add mov es add add inc mov add or je jmp push mov call jmp add add add inc outsb jne push imul sbb inc add inc add add push mov add or je jmp push mov call jmp add add inc push dec inc dec xor cs dec dec add add push add add gs je push imul jne push imul dec daa inc add add add pop mov add or je jmp push mov call jmp add add add add gs add mov daa inc add add push add add add add or je jmp push mov call jmp add add add add add add add add add add add add add add add add add add add or add push add popa add arpl imul add add add add popa add imul imul popa add add add add add je imul jp add jae cmp add add or add dec add jns add xor add add adc add dec add jns add imul push add add add arpl push add jp add add add inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs bound add add jbe popa dec outsb push popa jb pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push popa jb imul pop jbe popa push popa jb jne add jbe popa dec xor jb add jbe popa inc outsb add add pop pop jbe popa push popa jb jae inc jno add pop pop jbe popa dec xor popa jb add jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa dec outsb push je add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa push je inc insl jo pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add or or dec xor pop adc outsl push cmpsb imul addr16 push imul leave jl testl mov lods xor or stos add xchg je add inc add add push add popa insl popa xor or imul inc add add (bad) (bad) (bad) jmp add imul mov add or add testl inc add add add add pop add je outsl outsb xor push add add je outsl outsb xor add cli lar adc add add add add add je outsl outsb xor push add add je outsl outsb xor add cld adc incl sub add add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or adc add add add pop or inc arpl gs arpl and push add push add add push popa add adc add add add add sbb add push outsb add add and add add add add push add gs xor add push add gs xor add clc or push adc add add add add push add gs xor add push add gs xor add es movlps add add add add push add insb gs push add or push inc push loop incl add add dec xor add repnz adc scas scas inc lea jbe mov shr inc nop repnz decl xor or stos add xchg dec cmp add or add add jo jb addr16 or outsl je add add inc add mov je add add add add add add add add add add add add add add add add in mov jbe (bad) aas and lds sub jne add clc mull adc mov dec out es insl pop shlb roll push sub imul test push fidivl adcl (bad) data16 jns imul (bad) jno push push ret dec xchg int push cmp call daa jp stos mov stc fucomip xchg xor push cmp mov xchg addr16 std sti mov (bad) xchg pop fldl xor dec loop das ljmp int3 add mov cmpsb int3 dec lret inc in or xchg fadds xlat icebp jne jb mov rcrl lods pop repz jmp push dec iret hlt test es sbb pop push mov notl cwtl popa repnz aam (bad) mov fdivl pop std dec and mov mov cmp cli jg pop and lea scas and outsl dec out mov loop mov shl xchg repnz imul sub xor sbb push push call add dec mov sar and fidivrl aad and or add jl hlt scas jo out cltd add mov xchg and xchg jns lret mov lret push test adcl jle dec sub and addb loopne pop mov ljmp xchg test mov push aas insl mov (bad) out xchg popa or pusha jns lcall test out xlat sahf jnp jo xor sarl or and in adc bound push movsb dec aad movsl and sbb and lret dec inc mov or clc pop xchg fnsetpm(287 loope stos hlt lds ficom sarl in pop gs enter (bad) icebp repz jge divb cmpsl loopne sarb jne push jnp,pn pop mov repnz sbb es jns mov jno inc sbb xorl stos xchg ret stos add mov jge inc xor mov mov inc or pop pushf push insb cmp xor xor (bad) fwait (bad) fcmovb lret nop arpl rol mov and mov mov xlat xchg dec fistl int xchg or cwtl pop cld or push fsubrs sbb push in movsl mov out test xor loope sti mov mov add inc cmp jg ljmp ret sub outsb mov (bad) cmp (bad) xchg jae in lock imul dec dec je in push (bad) push mov pop xchg cmp jmp scas adc push jno setg aaa std add popl das les push jecxz (bad) ss mov sahf sbb mov cmpsb sbb mov dec push rclb inc decb stc aas inc push lea enter shl into fs add clc stos sbb mov mov das out pop mov in jno les aaa (bad) ret jg lahf pop cmc mov adc cmp pop sarl mov sbb pop cld insb test cmpsb push sbb loopne repz xchg jl ret arpl iret mov outsb outsb lock pop hlt loope out mov lret inc shll push xor mov xchg loopne pop xor inc sub inc sbb adc sbb mov jle cwtl and inc inc mov add jnp inc in jbe inc andb mov fadd push push imul jmp push or jge (bad) sub data16 jg push fbld push outsb into imul push mov subl rcll insb mov or sbb out pop js cltd cmp shll popf jp outsl jae fnop push jnp mov and jecxz cltd sub ret out add out dec pop jp sub mov repz shrl jnp imul in add (bad) jae push adc dec inc popf jmp mov mov jl iret outsl in fildll cmp jns icebp mov pop jmp cld sahf jg lock aas mov xorl rclb in clc popa rcrl xchg test mov and jge sbb xchg inc cmp adc xchg rcrl cmc cmpsb in jmp or aas stc daa push sbb ds fistpl lret or hlt adc mov dec mov sbb xlat sahf mov iret and ja loop pop das xchg outsb push pop add pop inc add xor inc ret sub jmp pop pop arpl xchg lahf inc in add stos mov fsubrl aad and ljmp push mov sar and lret and leave add imulb icebp push sarl xor loope push aaa pop int jb cmp int3 out pop addr16 test cld adc or sub loopne or sub in jbe sbb fs into push mov dec dec adc xor xchg lret lea aaa ret push aad dec leavew popa dec push sbb sbb xor stos xor shrl ss and shlb stc push push push or arpl pop repz cmc fnsave pop in add or mov dec fucom jecxz lods testb inc (bad) mov lret sarb mov pop gs in mov mov int hlt mov xor insl or insl gs mov insb lahf js xor mov ficompl iret rcll aas xor imul mov jns jle dec out bound fstpt lret les out in or cwtl jg xchg jo gs loope movsl std or jne xchg xchg or push xor inc cltd inc lret aam leave outsl adc sub sub dec sbb repnz pop (bad) fucomip push xchg fcom jge jmp (bad) jb mov and out cmp xchg pop xchg xlat sub fsubp jl push pusha cld mov fwait insl xchg adc outsb imul jle lret push pop or push inc mov rcrl in jg pop jno cmp push jae adc dec hlt mov popa in (bad) loope sub in (bad) repz mov xchg pop pop sbb mov cwtl lock xchg or int3 mov rorb ret xor les add push inc or mov adc cs push not in jge iret int xchg loopne sub sub sbb fbstp lahf sahf sbb loop loopne mov and bound repz fwait xchg fs cmp lcall xor jle lds mov mov push push cmp test out das fisub insl in (bad) daa xor push arpl test inc xor stc icebp mov pop sub iret pop cmp mov ljmp dec push adc xchg (bad) aaa mov lcall movl mov test call pop cmp nop test (bad) sub incb add fs add mov xchg fstl xchg or aad aam out or push xchg jno cli cmp jnp rcrb or and test fadds cmp mov daa pushw xlat lods lcall pop push mov and in in xor push cs cmpsb mov jo outsl inc mov mov xchg xchg add repnz mov lods data16 cmpsl scas mov xor ss test jg mov stc negl (bad) hlt loop push flds sub lahf inc (bad) sub rorb lds test std jae mov mov es dec loopne mov mov xor iret (bad) mov lahf xchg push xor sub xchg mov xor jae sarl scas rcrb pushf or mov pop add xchg pop in jle out rcrb fdivs add dec and cltd mov lods xchg pushf cmpsl test jge movsb xchg enter mov addb mov stos sbb imul push fisub andl addr16 sub push pop jbe adc add in ljmp sub lret cmp sbb dec bound dec aas inc xchg inc mov jmp std jb aaa inc shll mov lds inc call jg dec xchg jp dec es pop popa mov fsubl mov pop lret dec in push push (bad) sti add dec cmp push and nop pop or rorb movsl pop jne xchg cmc in cmp stc shlb lcall int js mov add repnz pop loopne pmulhuw (bad) dec mov arpl pop (bad) pop es fs cmp or test rcrb and xor xorl add movsb or adc xor mov repnz loope fsubl ss gs jbe push mov stos dec inc out out mov std pop fwait jl in and jne mov pop push push push jge cmc pop iret pop xchg cmpsl bound add hlt xchg jns inc cs jp sbb push inc pop or cwtl dec push jae xor fidivrl sbb or scas shlb repnz fs push out outsb cmp fcomps aad sbb mov adc or xlat push cmp lods xchg push imul jle jecxz sbbl pop pop (bad) (bad) mov push inc repz arpl xor dec xor jnp out pop aam iret pop mov inc pusha push dec test sahf jle loope stos movsb lds loopne in push pusha les xchg inc dec inc jo call ficom mov int3 cltd jnp mov push repz mov dec fsubrp push xor lret inc cmp test outsl add pop test jbe hlt cld les add fcompl das jge inc loope cs js mov add dec xor in or (bad) mov mov (bad) je pop xorl pop ljmp sub xchg xor jg and sbb (bad) int dec negb sbb sbbl mov rcrl and hlt cmpsb xor sub or rolb push movsb enter push adc insl out inc push scas scas xor jo cwtl or icebp (bad) adc addr16 stos jno insl inc cld pop mov mov cs test sbb push adc mov dec cmpsb mov jp xchg bound add inc mov add js inc jmp arpl mov aad push dec push dec dec jmp fidivrl jb (bad) mov cmpsb and movsb int inc scas adc rcl sub push xchg leave addl outsb xlat adc push call push xor dec jg pop adc fsubl push jae mov pop adc dec add pusha loope dec mov sub iret std sbb mov and mov sub cmp jmp bound roll out mov lret fcompl mov js test in xchg out mov hlt into xchg test gs mov jg cltd push les shrb mov movsl rol (bad) sbb jbe jno popa lret stc mov dec pop inc fcmovnbe cmpl and (bad) mov or push rcrb add lods icebp mov mov fs daa cmp and sbb xchg fcoms (bad) mov or lock orb fsubp fidivl inc adc mov outsl shrl cmp sti cmpsb cltd xchg ja pop jne addl mov push scas sub sbb pushf movsb insb ljmp es sub jns sbb xor mov and xchg jb mov xlat mov mull jo cmp enter cld mov repz cmp xor hlt std dec fidivr jbe inc cmp loop add jne cmp hlt popf dec sub and dec cmp sub pop mov jno cmovle mov lea sub jecxz (bad) in xchg pop or aam sbb cwtl clc stos ds mov cmpsb or pop sub cltd mov jmp scas ret adc jle lahf mov xchg dec pop dec (bad) xchg mov sbb pop mov test sti imul mov dec (bad) fild stos fmul jnp shr arpl iret mov outsb mov pop bound scas push pop je scas dec add add popf cmp jne stc mov aas sbb adc sbb fs roll add test mov jbe jnp inc in pop jge (bad) mov xchg (bad) fwait push imul jmp xor stos sbbl gs jg insl fisub add mov push xchg xchg add push sub (bad) mov or sub sub test mov pop pop sti fsubr dec (bad) int sarb in jbe adc mov clc and arpl aaa dec pop xor sub movsl call sbb sub out add sub repz lods cmpsb test or shr push cmp jnp (bad) xor push add dec jb ljmp inc mov into fwait cmc cmp jmp mov and cmp popf lods lret icebp jns icebp mov pop jmp cld loope mov lret mov sbbl pop sbb mov pusha push lcall fucomi test leave xchg int3 inc and rorb push pop xchg dec and bnd jae fsts mov rcrb cmp addr16 (bad) (bad) cmc push lock stc daa sbb (bad) fcmovnu push leave mov dec mov pop push dec repz aas sahf mov xor xlat iret mov andl loop pop jb outsb push mov ds mov jp dec js insl rorl outsl pop push popa stos sub inc arpl nop lahf add insb cmp out icebp ljmp enter stos jg mov jne dec adc xchg mov xor lahf add pop mov jg mov cmp hlt lcall inc (bad) lea mov (bad) aam insb sti add cmpsl xchg pusha lret std jmp pop loop test lock into and (bad) mov jge js push ljmp inc daa fimul (bad) aaa sbb mov xlat and insl sbb cmp or xchg sub jne (bad) push int push mov notl and xchg and call sbb mov movsl insl dec insb aas xchg lods mov ret mov xchg je mov mov dec test stos mov fsub lea dec xor sbbb jnp mov div lcall fimul ja inc fcmovne sub int3 add vpshufhw lahf les cmp sti push cltd sub sbb jge inc andl outsb or mov dec inc sbb pushf sub xor imul fs stos mov (bad) popf mov (bad) fcomps jae pop ljmp adc fcmovnbe scas gs lahf add inc push mov nop cwtl movsb sbbb cmc mov js nopl test test in push push ficompl andb cmp sub pop sub adc (bad) bound mov lret jecxz (bad) inc enter (bad) xor pop sbb add clc dec cli jne in cmpsl imul cli outsl adc mov clc lock in out jle dec inc (bad) jbe inc and sbb xchg and arpl imul loop or idiv nop jge (bad) lret dec cmp dec and pop push int3 into or pop jb xchg bnd mov xchg jae imul scas test push movsl sbb fwait dec and loopne adc loope add push and popa je aaa out pop xchg xchg movsl inc sub push or xor jge sbb jnp sub ds push cmp xor mov insl xor es push mov test aas jmp mov mov pop cwtl jns ljmp (bad) imul push push jp icebp pop lret push mov aad cld inc jg lock mov adcl dec cmp (bad) insl and sub incb into stos int mov stos popa in cmp cmp aad roll adc add dec in mov xchg sub stc test jno cwtl jle sub fisubrl mov push inc lock pusha mov cld mov cs loop pop rclb movsb and mov movsl mov (bad) cmpsl mov insb lret fstl jmp jne (bad) jo xchg inc inc inc insl pop in mov jg mov fnstcw mov sub ljmp scas mov xor (bad) jae cmp imul adc jb icebp stc rcrl repz push fcoms sub adc ficomp out pop or test idiv or sub pushf les in mov iret jno sbb mov dec dec out adc cmpsl adc jecxz sub lret out xchg das and aaa and scas pop aad dec ret leave add repnz pop in jge stos shrb ror fwait xlat mov ds mov (bad) mov out xlat cmp jl out pusha test les stos add imul sbb fldl lods push (bad) in aas into and out mov add dec cltd jno jmp in not mov int hlt out aad lret or pop rcll fnstcw mov movsl das icebp (bad) cmp cs je (bad) mov xchg jns or andl ds add pop lcall inc jo daa xchg pop repnz fcmovne shlb rorb lds jp push push mov test iret fs push dec in mov cmp jns jnp adc jecxz and outsl fnstenv sbb jmp (bad) call and or or adc jnp and add or or or adc arpl or mov add or add mov or (bad) or jns cmp cmp mov in or or or or mov or or or or or or dec or or or or xor cwtl or or or daa or or or or fimull pop or test mov or or or or or or or or mov imul dec or or or or or or or or pop or or mov or cltd or or js or lret or or or or or or mov or or or or or or or xchg or or or dec or or or or or or or or or or or or and mov mov push or or or or or or or or mov or or or or or inc or or or or or or in bound mov or (bad) or or or or mov jecxz clc or or jle ret or or or lea movsb or or or or or or or or or or insb or or or or or or or mov or or lret or or or jg pop or mov (bad) fisttpll jb dec or or or or or aaa or or or or or or or or or or or or and lea js adc das or adc daa or mov or or or iret or or and dec or sbb popf or inc or orb or or (bad) or or or or or or or adc clc or or or or or or or stos or or or or or rorb or or or or or or or xlat or loopne insb or or or or or or lods or or mov or or or inc or or cmpsb or or pusha or jo out (bad) cmp (bad) or or or or js add orl test or push or or inc or or decb icebp or mov or or hlt or mov pop or or or or or or or pushf or or or or or or or cmp lcall or or or jecxz mov mov push or or or or or or or fisttpl xor jle int3 or leave or cltd or or or or or or or or or dec or or or or mov push or or or sbb add imul rorb mov or or or or or or or push or xor dec or or or or or or or or or or dec or or or or or or or or or or (bad) or or or or or or or je cwtl or or or or or or or or jns lock pop or or out or or or or or decl or or or lea ret or aas or xchg or or or or rorb or or or or pop or or or or or xchg or or or (bad) or or (bad) or invd xchg icebp or or or or mov scas or or leave or or or or jmp or or or or or or xchg or or or or or or or or or or or test sbb mov add orl xlat or or or or pop or or or or lods or or mov imul or or or or or or sub or or pop or xor or or or or lea mov or or mov or or out mov or or or or cmp arpl jo mov daa or imul or lds push or or or or loop lret or mov pop or inc or or or sub or or or mov enter jb int data16 decb pop or or or or or pop or or sbb or xchg adc (bad) mov and (bad) lods or orl or or jne pop or or or out or or inc or ljmp or or lcall or or or or or or in dec or or or or (bad) or loope pop or (bad) or cmpsl or or push or or or mov rorb or (bad) or or mov or or or or or or decl mov sub std or or or or or or sub ja rorb inc or or in xchg or or and pop or popa or or arpl push or or cmp pop or or das or or or or or or or cmp rorb or or (bad) or or fisttp adc inc or or or or or or or or or or or or decl fisttpl leave or or or repnz or or or or or or or or or mov mov mov cwtl or imul adc pop or or or or or scas or or cmpsl or or or xchg inc or or or or or or or or or push or or or decb xchg or jge fisttp jle pop or or or or or xchg or or or or or or or and or or or js xlat or or or or inc or or or or or or or or mov or or jge push or or or or or or or or mov or or lcall or or sub or out mov inc or or repnz or in add loope adc mov sti or or or or or or or xor insb or adc hlt or or lods or ret or or or or or or or or or or or cs or or or or or or or or mov (bad) or orb or or or or or or stos or mov lahf or or inc or or mov or or or or or or or or or or or or or or sub daa or sub aas or mov or or or or or or or rorb pop or or or fisttp stc or or (bad) or outsl or or or or or or or or mov or orl or or or or or or or or or sti or or or or or or or or std adc push and mov stos and mov mov dec pop pop pusha outsb mov ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fbstp mov bound xchg or out xchg push inc (bad) ds mov sub inc sahf jmp push xor lds push xchg test (bad) stc adc sbb sub add bound (bad) mov int3 sbb adc ret fnstcw jb sub sub test ljmp jne loopne fiadd dec iret ja or ret add dec popa outsb inc rorb cwtl aas sbb cmp fcmovne xor cmp fs xor cwtl add mov inc mov mov pop inc rcr jp dec and mov jg push adc add nop cltd add inc inc enter sbb sub push test (bad) sti sbb rcrb pop es xchg xor lret sbb inc dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss mov std push dec dec lods lahf mov mov nop int mov iret fwait aaa arpl ja or jecxz ljmp popa outsb inc rorb cwtl aas dec mov push xchg lret xor add fildll fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne add lock or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add add xlat add inc leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor add (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or add mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add sbb sub add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov add repz pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja add add cs add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov add (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rolb add or cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg add push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret add add je bnd fildll fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec add mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov xlat dec in lret dec cmp int lock push shrl pushf mov loopne (bad) adc scas popf pop jae in fsts dec fisttpl mov stos fbld (bad) stos mov lcall push in xchg mov int3 lea add in xor cmc rcr (bad) ss imul pop or dec test dec (bad) fcomip mov xchg sub aas add and int test push adcb cli es cmp add push fabs mov add cmpsl leave repz gs pop rorb mov fild fildl pop pop stos sbb fistpl mov xor faddl mov mov jne add mov adc dec sahf cltd aas enter push mov sub dec data16 pop jl test cmp jmp inc rcrl sarl cltd nop fidiv sub push sub fprem pushf xchg ret stc sub lds xchg js out or jecxz sbb aad pop xchg xchg pop std push mov sub js inc icebp rclb cmpsl loopne ret (bad) or pop std sub outsb aad cmc or ret das rcrb xchg jns or push (bad) sahf cmp js add push add add add ds pop clc mov (bad) repnz popf pop push sbb add in mov sarb loopne subb mov mov imul mov mov std movsb cmp repnz movsl sub sbb pop les lret sbb cmp loope cmp stos std dec lods ret int lret fwait inc jno mov aas or inc (bad) sti adc pop test (bad) mov bound repnz fnop in addr16 xor popa pusha ret es sub in jg lds adc xchg sbb mov jg shrl mov movsl ret (bad) loope leave std sti clc popa xchg (bad) push enter mov mov cmp mov mov lea inc xchg scas (bad) lret fwait rcll and sub add sbb or pop aaa outsb xlat xor loope dec pop pop ret inc sub insb aad ret mov fcmovu (bad) jo pusha push or aas repz cwtl or popf gs xchg out test rorl push jbe add cltd int cmp sub lret fwait mov mov inc leave js out pop mov out add testb lea out mov sysret mov push pop cli and xchg fdivr (bad) pusha mov neg jne and or push rolb dec movsl push sahf cmp ret mov in call outsb cld inc push mov push pop pop jno jae jl mov jl mov ret jmp push lahf cmpb adc dec add adc push fs push icebp (bad) je xchg add xor call enter cs sbb inc mov sbb aam mov mov pop lock ret fnstcw sub repz mov je popf in clc add cwtl or xor lods jecxz mov out push or pop jge inc push cmc popa xorb xchg dec shrl pop (bad) mov sbb mov jne push shll enter mov pop je and mov mov (bad) xor mov inc xchg adc les imul fdivrs jp or sub lock loope push dec pop aas out sub test enter xor lods mov out mov int3 inc xlat sub jb fnop out cmp loopne cmp pop daa mov mov jmp lahf cmpb mov mov scas enter dec xchg arpl xor dec lahf fdivrs cmp loop lret pop enter in xchg enter pop mov rcr sbb add lods fdivrl pop lcall lock mov or rorl lods mov mov push or imul xchg jnp mov mov mov push mov sbb faddl sahf out dec jmp sbb inc orl mov xor push mov push imul imul add push jmp mov fistp ss gs adc (bad) ja pop adc jae les pop dec mov mov cmp repnz jae test mov xchg mov ret mov outsb inc dec sahf sahf gs mov cmp push dec dec mov or push fs (bad) outsb dec test test pushf cmp adc in jp xchg mov mov and pop fmull enter xchg es push mov jmp xor shlb cmpsl cmp (bad) mov dec mov cli rol data16 jae stos and loop popa xor movsl inc pop gs notb jg sub pushf out fisttpl (bad) cmc rorl jge call outsl stos adc mov sbb in mov and je repz or icebp or add icebp fidivrl push scas in mov jae dec cli jns,pn or inc out jl test push outsl iret push roll adc inc jecxz jl ret lahf je lret pop jmp pop ss movsl dec sub dec jo xchg ljmp push mov adc scas iret fwait or xor out ret adc ds fidivrl fiaddl daa fstp or (bad) pop insb pushf div pop push jle (bad) in push out mov popf dec push fs clc and cld lods (bad) jmp add jne sahf adc js outsb mov into pushf push (bad) call add aad jl jmp outsb push sahf clc daa dec xchg cmpsl in aaa sbb adc popa movsl add gs notl jg sub jmp push lret popf cltd mov add pushl push dec ret lods jecxz jl bnd sbb xchg outsb fs je pusha mov data16 jne (bad) pop out sub xor dec pop dec or pop fistpll lea xchg in jmp dec pop ljmp das xchg inc mov xor xor jg mov test (bad) jne stc lock add fcmovnb inc out xchg dec sub sub dec (bad) and xor cmp xchg int fmuls add outsb enter daa lds inc ret mov leave test rcrb aam clc lret pusha inc sub das pop push fs mull fdivrl sbb xor rcll cwtl stos aad ja jae lcall sub xlat jmp (bad) (bad) mov pop lret push imul das inc bound add xchg orb call out jae and push dec cmp mov mov inc mov (bad) jmp push mov popf mov dec dec arpl xor lods pop pop out mov loop mov sbb or int3 dec gs cmpsb lcall xchg add pop adc sub fdivr stos imul mov pxor out in mov jno movsb imul dec (bad) cmp iret jmp pop movsb jae jp pop icebp and cmpl ficom push push vpaddusb jmp mov test repz daa jns sbb push dec or sarb cwtl push dec hlt and lret mov jae fild xor inc int mov cmp mov fnstsw fidivrl cmp push mov rcl call mov xchg loop orl xor call add in push (bad) test in test (bad) std and inc pop std push sbb loopne push out mov inc ljmp mov cmp sbb pop mov cmp xchg or xchg mov lret xchg and dec dec adc sahf lds test popf and pop les mov sbb adc xchg stos adc repz fdivr scas cmp mov loop pop add pop fidivr push int push mov cmp iret in add fwait aaa call or push pop mov outsl inc inc iret jmp cmp cmp jg insb jne jnp sahf fwait push push pop mov pop in jne xchg pop jb mov loopne xor rcr stc sbb jnp iret xchg add call jg fbstp and sub movsl data16 data16 lcall psubsb ss add adcl sysret test cmp cltd cmp loopne cmp or andps mov repz or ret mov inc outsb inc xchg int3 pusha pushf pop dec mov push xchg lret xor in push jmp adc in jne xchg cmp into icebp mov mov mov lods push mov mov jg push and adc nop xchg ja arpl xchg lds leave repz lcall or cmpsb push xchg jbe add sbb adc ss sbb jne mov mov push in pusha and jb xor (bad) cmc or cmp ret fsubrs out mov add add mov push xchg lret mov jl fildll adc or cltd jl gs mov dec out dec xchg push cld rcr and mov std fnsave push push mov fidivrl nop pushf add fwait pop addb fwait sbb jge in and pusha push and adc xchg fcmovnb cmpl lret sbb nop into test popf mov sbb nop ljmp scas xchg fs xchg mov into lea rorb adc out mov repnz iret out lock ret lock dec adc mov cs in mov pop jg fld (bad) dec inc imul (bad) jb aam (bad) lds mov jg inc inc mov lahf stc cmpsb roll xchg sbb ret dec stos hlt and dec inc pop xor popf aaa jecxz btl xor cmc jecxz mov jno aaa arpl notl mov lahf pusha aaa xor lret adc pusha data16 test inc ja sbb mov push mov jns in pop and jbe in inc or mov dec jp clc stos cltd sbb (bad) into or stos scas repnz and pop cmp pushl mov inc mov in adc inc pusha stos dec bound fsubrp sub stos xchg sub jg xor pop mov or mov adc sbb addr16 das pop or test ds rcrb or xchg lret pop out cmc jae xchg lock dec cmp or int3 mov test fiaddl jle xor rcrb aas cmp out mov (bad) or pop sub dec scas repnz xchg rcl sti aam or lock fisttpl fldl dec adc adc rcrl shufps push adc mov cmpsl inc add or jmp dec pusha outsb movb pop dec pop fidivl cmp push test and gs dec in adc fwait or pushf aas or lods push loope inc roll xor sbb or xor jp xlat dec loope sbb mov aas int inc inc mov mov insb (bad) (bad) mov int3 sti sbb jp dec push rclb pop dec mov loopne cmp insl call sub mov mov scas (bad) xor mov into lea inc rorb adc xor xor add xchg fisubr imul cwtl or inc or mov lahf lds test clc enter mov test or pop dec inc (bad) stc sub idivb add push mov xor js inc clc daa stc dec into mov sub loope sub cmc ficompl mov test pop cmp jmp fwait addr16 or adc out aas (bad) cmp arpl pusha or mov xchg fist insl cmp xor call jp cmp mov dec fidiv jg xor mov fcmovnbe cmp movsb arpl fwait jle cmpsl dec pop shl add aad daa jb lods sti jb outsb les dec add stos sbb test sub cmp dec mov dec jmp cmp inc lds jmp sbb mov inc in push movsl es cmp xchg sbb lock insb je cmpsl sarb push xchg cltd decl dec cmp cmpsl xor xchg (bad) (bad) (bad) mov sub adc fidivl cmp cpuid cmp push mov or fisttpl add sub sbb call ret lahf jb xchg add and dec (bad) mov add stos sbb mov in fs jne xor inc or pop inc dec push sbbb xor in addr16 sub xor shlb sbb sbb xor jg push push out scas lahf loopne or push sub add or repz sbb pop xchg add inc es int3 shlb out stos xchg in in hlt add (bad) or add add sbb fcoml popl and cmc add repnz xchg push push data16 fistpll jp or dec int3 mov mov popf cmc aam mov lds jle ret add lret or cltd aas dec mov fimul (bad) cmp nop ret stos imul (bad) cmp ja in add mov pusha in repz pop lret inc scas jno clc stos out dec icebp outsl mov cmp imul add loope push test pop (bad) xor pusha xor inc test test nop adc les mov jmp stos add lcall jbe test hlt (bad) sub addr16 ja push movsl es cmp out pop scas fadd add cmp sarb xor dec es push fs arpl mov add mov pop adc xor mov pop inc mov dec in fnstenv jnp cmp jg adc (bad) sbb test or mov inc mov in loopne out popa push sub ss push ss sub or call jne pop push daa pop (bad) int js cmp pop ja int inc inc decl test icebp aas mov enter xor lods push in dec iret pop inc or repz mov or dec sbb test mov je mov (bad) arpl pop sarb cmp or arpl lods mov add mov leave test xlat lahf xchg cmpsb jl xchg sbb clc fldt mov xor xchg push mov scas js fs xor cmc push add push loop pusha and mov jnp aas add jl in or dec mov jb inc mov aas bnd pop es pop mov test (bad) cmp inc cs popf inc imul mov mov (bad) sub cltd dec cwtl mov nop mov in nop pushf push push stc in push push dec (bad) out repnz sti mov test cmpsb push nop enter nop fildl push mov xor xor (bad) std (bad) mov fucom aaa jl rcr out out fs inc push fistpl push ret xor daa insb inc rcrb fnstenv inc mov push pop or fs inc mov adc cltd adc dec mov in sub mov push jne pop ja out and jg fld dec dec inc imul mov jmp jp add mov jnp pop out stc test inc insb pop pop in cli leave push ror test std enter arpl out andb mov rcrb sub dec or faddl dec insl add xor popa pcmpgtb enter int mov cmp jno dec mov lds jbe clc fdivl js push shll pop sub xchg pushf add sahf leave cmpsb xchg xor fsubr cmpsl popa pop inc mov (bad) rcl repnz (bad) test push and loopne outsb hlt inc dec repz andb fucomip pushf pop ja push and (bad) mov negl push std shll mov push loop cmp cltd or out lods mov add pop bound adc mov imul add mov or test arpl ret dec or lock or test pop lock jb rclb dec sbb arpl mov fwait sahf cmpsl sub jmp pop mov inc pop ja or ret jmp frstor movb mov aas and insb sub lret jge mov push pop into jmp pop incb inc pop test repz pop lods fdivr and movsb mov dec negl adc push testl mov pop pop sub mov iret inc hlt xor add enter into sar ss rcrb in mov rcll mov loopne cmp and inc mov into fwait aaa arpl add add add add or roll dec or inc xchg sbb sbb aam cmc lret xor out cld loope dec data16 cwtl or out mov adc mov out adcb lea je dec dec (bad) and jle fld in inc imul je loope call mov jle and dec rcl in dec fcompl cli xchg mov push pusha inc jge sub jno cmp bound or mov mov (bad) jae or repnz nop push pop pop cmp inc inc iret out (bad) popa repz push xchg xchg mov mov loope je xor das loope xor mov xor fcmovu jp imul mov jae dec cli das xor adc cmc cs inc mov mov pushf xor gs pusha jmp mov in iret add out outsl ret inc (bad) and (bad) mov movsb jg add sarl loope or lods dec sahf fmul fs cmc lods pop push adc push rorb adc push jae mov shlb popf and fucomip lret insb xchg movsl out insb dec ret clc stos sbb mov in or scas enter mov enter pop push push and leave dec in jmp inc mov cmp inc inc leave js out arpl popf mov jno mov jle in lahf xor adc bound pop stos fmuls fmull mov jb xor repnz icebp sarl cmp xorl fstp and dec push icebp inc jg repnz enter mov add (bad) sbb mov sub xchg mov pop xchg fnstsw fsubrs loopne push leave mov shr cmp lcall sahf addl roll lock pop mov sbb jnp mov outsb ss aam dec lret push sbbb pop shufps fwait or add mov fildl (bad) cmc (bad) mov lcall sbb aas aas mov (bad) out xor sub sbb jae loopne (bad) xor dec outsl fmull sub pushf mov pop xchg sub sbb scas stos cmp mov shll pop inc xor add call lock in add mov (bad) xchg sbb jnp lods add sbb lods xchg push jne cld loope push mov call cltd jae cmp pop sbb push jb or mov pusha dec mov fdivrp xor mov cmpsl sub dec lret xchg es lcall inc mov push mov and jo pusha fwait call xor fucomp sbb sbb jmp jmp mov sarl insl push sar fwait push xchg jecxz rol call dec sub sbb inc pop mov lock test test ss jae cltd jae xchg cltd mov cmp xchg mov outsb inc nop jecxz ret fidivrl xchg inc mov mov (bad) mov pop xor lock adc fnstsw or or adc jne pusha fnstcw and xor movsb sub mov adc (bad) push ror sti push pop sub (bad) sub sarl insl jmp inc xchg jecxz rol call scas cmpsb mov inc daa popf mov mov adc popf int movsb fcomps mov add movsl es aas enter outsl fiaddl (bad) mov push (bad) dec ss dec mov mov daa add pop pop add rcll mov fist (bad) pop pop cmp push frstor or fs addr16 jb mov sub mov jnp rcll or jmp mov mov clc leave ret sub dec adc push cmp jmp cmp insl rorb ror out sub mov sub movsl dec pop hlt dec popa insl test mov ret add imul mov and arpl mov pop popf mov jle xor andl jmp xor call add sub mov sbb sub repz fnsave adc cmc inc dec mov mov add dec mov mov cmpsl mov test lds adc lcall add ret sbb in loopne out sub jg mov loop hlt imul mov cmp ljmp jne inc shrl mov aas je push pop idivb and sbb dec nop add lcall sbb cmp push or pop mov push sbb add test xchg pop cmp in shll xchg mov pop push pop int fist push (bad) call jg dec test popa outsb sub or jecxz add add inc mov push mov mull pop push icebp push (bad) mov sub mov cmpsb adc jmp in mov ret inc icebp mov fstpl mov xchg adc xor push xor mov dec leave repz mov jmp lock cltd xlat lock mov fildl inc and sbb or push movsb in xchg fnstsw out adc sub pop (bad) push das inc addr16 dec popa cmp dec xchg (bad) xchg aas dec pop into pop xchg lret cmp cmc (bad) sub xor and sbb push mov inc mov xor ret je adc lock jo push mov mov inc jb pop mov cwtl andl sub dec dec and inc dec pop dec mov push xchg xor adc push dec mov arpl (bad) test inc scas adc iret fwait pusha or push add ret dec rorb jo mov dec mulb or gs fistl mov or mov pop inc roll (bad) jmp loopne inc fistpll or in nop xor sbb dec push pop enter push cmp mov stos es cmc (bad) push mov pop cli add sti and repz in mov call cltd icebp mov arpl js jp ret add dec out mov xor mov or xchg (bad) ljmp sbb push out in inc or mov sbb pop aas and mov sub cmp lahf add movl add shrl cmp mov xor (bad) (bad) ds repz test adc xchg sub push mov daa sbb daa sub or mov into fwait aaa pop sub arpl cs aas stos inc in inc rorb lds iret mov jnp les fist imul mov cmp addl in adc lods fist ja outsb mov jmp mov out mov cmp pop pop jmp lret ss xchg mov inc mov add cli add pmaxsw push outsb (bad) enter test movsb test outsl std xor aaa arpl cmpsl cli pop or dec popa outsb lds stos xchg xchg mov pop xor mov (bad) or push xor lock int pushf mov test or cmp incb and or mov adc test adc and jne (bad) addl dec xor cmp mov inc add push pop sub insl and sub push outsb sub test popf push xchg mov std (bad) insb inc shrl loopne pop sahf push hlt sarl mov jnp inc xchg pop bndldx mov xchg fwait dec icebp jo xor sbb cmp int3 dec or inc sub lods mov push bound adc mov lods and movsl sub mov mov dec or jp enter adc sub xchg (bad) inc xor (bad) xlat mov test pop cmp mulb aad jnp add mov nop xchg sub xlat lds jbe lret sahf sarb jmp cmp inc cmp std iret pusha and pop mov adc pop mov into test or mov mov xchg sub push pop xchg xor cld jmp and jnp mov jo push gs xchg xor lock loope dec (bad) pushf xchg aas xchg fisttpl bound lret sbb mov cmp test enter or mov push mov add xchg cld dec popa outsb scas (bad) xor cmp jl mov out push push fistp mov into xor ret inc dec mov in pop inc rcrl in mov imul notb fxam jg rol aad cmp fnop jmp lods or or mov sbb flds cmpsb popf mov xchg and sbb fneni(8087 fsubrl mov dec dec mov out or (bad) fisttpl psubd lods sub lods (bad) and lods or cwtl mov dec insb (bad) packsswb pusha ljmp mull dec lret xchg int mov sbb ret std xor xchg (bad) jne (bad) cmp stos cwtl mov xchg rclb gs push sbb pop cmp aam test cs dec movnti mov push add jns lds ret jo sbb sbb mov mov and mov mov test mov push je jg dec pop test dec (bad) cwtl das dec mov add arpl jno repnz stos jnp xchg jle gs push add add clc xchg mov lret cmp jp clc and leave cmp mov cmp shrb inc ret inc pop idivb outsl inc scas repz repz dec loop mov stc not subl insl rcr mov sti and repz xchg aaa bnd mov and and adc loopne inc repnz or inc pop sbb and int lret (bad) lea jmp xchg and enter (bad) mov aam or sbb pop cmp clc mov cmpsl dec cli push sti adc mov dec push jmp dec add add pop mov rcrl sub push or outsl cmc cmpsb push cs add dec inc xchg dec sub mov popf push sbb lock push mov stos ljmp add fwait aaa call or test rcrl mov push mov js mov mov mov arpl (bad) mov or push sbb clc jo int test cmp dec mov lock stc loopne dec jb inc popa lds lods jge pop xchg mov lock rorl test dec sbb aas insl aam je popa imul rcll xchg (bad) sub xor mov cmp jb mov inc rcrb outsl dec mov inc sbb cwtl ljmp mov out mov and cs pop and mov scas mov outsl fs sar loopne push mov pop outsl pusha in fs pop pop pop push mov mov mov add mov lahf stos int3 add xchg fistl out push push inc inc pop add pop (bad) xor jnp push or je inc adc cli mov lods sbb rorb addr16 into jo dec sbb into (bad) js repz xor dec out mov xchg (bad) xor dec mov dec aaa rolb lock in in pushl call pop sub mov out mov (bad) sti mov cbtw xorl movsb sbb adc daa cli into stc sbb xor xchg adc daa lret sbb sar mov mov cmp jp (bad) jae test mov ret cmp sti les cwtl push xchg leave repnz sbbb xchg pop ss or xor hlt mov xchg pop repnz add mov les mov in (bad) and mov adc rclb jne pop sub xchg stos mov repnz cwtl lock sti jp pop std idiv xor add or sub inc lret xchg jo mov fcmovne inc jne lock mov or fild xchg jno arpl lcall or push and lahf mov jl cmc insb movsl inc push mov jecxz repz mov insb sbb in add push xor mov (bad) arpl sub mov jg ljmp fmul jmp pushf (bad) xor xlat add (bad) cs xor add mov (bad) sti xchg js adc ss xchg sub push sbb loopne imul jg dec add pushf mov cmp mov add dec popa cmp cwtl cmp loopne (bad) jnp int data16 psubsw push inc fs je jle in inc mov and inc rorl add dec inc sub pop jg nop je jb sbb push gs (bad) orl and jno aam push lock stc sub outsl jp push push sub inc lret xchg push adc push imul test inc movsb pusha push xor hlt push jbe mov ret add ret or or scas push repz sbb movsb dec mov push lret mov mov sbb mov inc mov mov test jle mov jmp fs cmp inc inc inc mov (bad) in add xchg mov add pop in rol test int outsb jb inc mov lods mov int3 aas mull loopne or jmp pop addr16 loope ds sbb stos cltd aas shlb pop xchg lret sub mov and mov mov iret in (bad) jbe mov aam xor jp test cmp sbb pop jg stos andb cmp sbb or lods arpl dec jecxz inc into cmp push or pop cmc cmpsb push xchg jo add pop mov xor add aaa ljmp or rolb mov iret fwait pop arpl lret xchg (bad) cmc rcll sbb dec out adc shl cmp bnd push daa repz cmp jp leave add dec icebp in (bad) js mov mov jge cwtl add cmpb and xor add adc sbb xor xchg push jb arpl cwtl sti pusha inc into cmp iret adc nop shrb pushl clc imull test push iret sarl mov or lds xor sub push sub lea jo add (bad) fimul fstpt out push xor adc cltd adc dec mov in sub mov pop aas in mov jg xlat xchg mov jg sbb pushf add push sbb xor stc call jecxz sbb aad inc inc scas adc push push or lods movsl andb mov xor in jo xchg or jmp sbb sub mov popa popa rcrl out add cwtl mov adc pop stos fbld mov out mov xchg loop rep repz popf push push sbb lahf jne enter es push jg fist mov jmp jmp pop pop push inc int cmpl jnp push jns jl arpl movsl inc ret xchg add aaa stos xchg and mov mull inc test dec jmp mov lds gs fyl2xp1 gs shlb ds cld add inc ja mov xchg pop jmp adc out (bad) mov pop pusha repz popf pusha ljmp js cmp fs pop mul in shr mov clc xchg add and adc ret sbb and call outsl (bad) (bad) jo or dec scas (bad) and lret outsb sti test shrb popf mov mov xchg dec xchg in lret iret fwait aaa pop outsl setg sarl cmp lods mov insb je cmpsl adc push xchg inc ja mov mov or xor fs mov adc and test xchg gs bnd push rcrl pop lock leave pop adc arpl fucomi jmp into test popa ss adc add jecxz xchg lods lock adc push das push sub push ret ds cwtl into cld mov inc push nop mov cmp dec idivb sub clc push push dec push repnz roll dec mov lret xor or jne das dec add icebp bound hlt jae ja fucomp inc scas aas sub add repnz je adc lock (bad) jb fistl push nop mov lahf jp pop xchg lock or xor cmpsb add cli jp fildl (bad) jae out inc lret fdivrl popf jge sbb subb iret enter push cli mov scas cmpsl cmp inc rolb push clc mov lahf daa data16 pcmpgtb fdivrl in aam or sbb adc jae add imul les or push loop dec outsl clc mov jns dec push cmovnp and into (bad) xor inc popf ds or loope,pt push and es repz mov and stos mov xchg mov in add jp push fisttp dec inc mov lea dec mov pop sbb incl int3 jno scas lret imul out sbb leave adc aas xor fs ret stos cmc dec in (bad) loope push xor xchg nop inc (bad) in in shlb mov arpl dec dec nop mov mov icebp or push or pop jmp arpl mov and dec adc push jle mov xor (bad) jmp mov pop xor adc fs das cmp lret sub (bad) push data16 out dec ret mov push pop out xchg out test fiaddl push sub jmp insb bound andb push add mov (bad) pop je into fcompl icebp adc sbb call sahf stc and or sbb lods push test adc xor jno sub clc mov mov sbb dec fisttpll cli lcall outsb xor xchg out daa mov into dec mov cmp push jae negb mov lds fsubrp adc inc xorl outsl dec movsb jmp add add adc xor nop mov call stc loopne cmp inc leave lock mov loope jle scas into adc mov pop stos shl and std push dec jle inc inc pop pop lock out (bad) (bad) int js js xchg aaa arpl xor jl mov cmp cltd pop sub das fcoml jg jne xor std gs ret fnstenv xor clc and xor fisubrl jno or push scas enter sbb mov aad sbb add insb in movsb arpl inc add test sbb sbb cmpl daa cld push sbb and fistpl orl pop jnp fnsaves push jb mov sbb push pop mov cmp jae push ljmp aaa dec bound mov pop mov mov repz int cmp push lods sub shlb push mov imul pop inc insl das mov inc ss mov aad cmpsb pop cmpsl push into popf jo pop std int xor insl and ljmp test imul mov shll pushf adc mov dec ja (bad) adc cmp fwait mov mov xor inc incb stos jg adc inc add xchg xor jb lods jmp rorl rcrb test and xor loop cmp movups test popa push mov add in mov dec jp testl add mov cwtl cld cs mov mov cltd push sub stc xlat mov push sahf xor call fildl stc in jmp push insb addr16 and repz in ret mov adc cmp outsb dec inc ja (bad) jl bound xchg inc mov lcall push mov mov push jns rorb aam push loopne xor push aaa (bad) adc test and rcll push lret mov imul test ljmp pop loop jne pminub add inc scas xchg repnz sub sub add imul inc pusha out jg,pn repz push jne sbb call and (bad) ja cmp mov mov fwait addb nop cltd inc add movsl fpatan lods hlt sbb std cmpsl mov int3 dec push inc fs and push fmuls mov inc lret inc mov pop or xchg rclb dec pushf loop cmovae lahf jne mov scas (bad) mov sbb dec mov mov lret sbb push adc pop add call xchg mov cmp add or shr inc lcall push repz divl adc (bad) lock xchg pop shrb push fidiv in dec ret mov jae fs fs add aam fadds sarl ss mov dec cmp push or pop add (bad) lds add mov ret outsl (bad) fidivr mov lods iret mov cmpb cmc les cld out pop ljmp scas cmp dec call xchg fwait mov mov stos sbb clc pop aaa push or outsl aas mov pop xchg jmp (bad) in or jmp test jb loopne dec pop fcmovne mov (bad) in push and cmp sahf lcall lds jnp roll add inc pusha ret hlt ret dec fwait loop or cs (bad) xor xor push scas flds hlt adc out in jmp push outsl addr16 and mov adc jg adc mov es inc jo cld inc xchg xlat pop push pop outsl aas mov mov lcall add shr mov xor lea aad mov push jo push lods pop dec aas jmp sbb nop cld xor std or adc and sbb pop jmp ds fistpl cmc or mov xor in jp xchg jnp lock imul inc pusha out push jae repz mov jbe imul in sub cmp cwtl repz inc mov pop or insl out mul add ret enter sbb xor push sub jno loopne movsb ret push or insl add push dec cmp rolb or dec push ret xor sub negb dec stos adc cs cmp fistp clc outsb sbb jo stos fstp cmp xor clc call lahf pop add cmpl scas inc pop jle (bad) xor insb pop loop or std cld mov xchg lock push aaa xor cmp stos adc cmc pop hlt shr (bad) ss xor push sub jno loopne movsb ret push or insl add push aaa insl test (bad) jb cmpsb rolb cmp aaa lret jp cmp jl xchg fsubs jb or add cli popf sbb mov int movsb ljmp xlat lea jle (bad) push movsl leave sbb push adc mov nop ja (bad) xor cmp xchg fwait mov mov xor incb stos jns xor inc mov nop xor mov pop shrb push fbstp insb jno ret lods inc push (bad) in inc and cmp lcall add mov aas aas mov jnp lret add les test iret scas add pop mov cmp (bad) into movsb imul pop (bad) rcrb push jnp mov cld add das lds adcb inc jecxz mov lds mov inc sbb leave add aam mov movsb roll hlt das push inc je (bad) in pop and cmp ljmp mov dec or iret pop cmp mov notb mov and out cmp movsl adc ja inc cmp mov movsl imul or leave test mov lds dec push repz sbb pop jecxz xor xor sahf repz jbe sbb xchg test adc and mov adc inc pop mov call mov movb ja pop imul mov or pop nop mov xor mov adc scas cmpsb test dec or or cs (bad) xor mov enter mov stos fstp cmpb (bad) lret xor push daa cli push repz in mov xor dec mov hlt int3 movsb or push cmp pop cmovbe xchg xor adc mov js mov mov mov pop fldl movsb xor gs mov pushf pop or xchg inc ss lret imul inc test jo xchg push push add fwait pop mov call mov ss adc mov test pop xchg add xor jbe jbe add add data16 xor shrb es mov std xlat xlat out mov or lods or xchg mov lret lods shrb mov sbbb adcl mov pusha iret push gs (bad) addl dec xor inc out cmpsl popa pop inc rorb xchg je xchg sub and inc pop cmc and mov sbb add mov or clc into inc push (bad) fwait sub enter enter lret push insb fcmove sub push push aaa jecxz stos enter mov ja in inc add sub mov out cmp xchg stc push and pusha bsf lods mov in push je xchg dec (bad) das (bad) mov pop iret jo (bad) dec cmpsb cld mov add add pop jmp pop data16 dec fcomip rorb scas jecxz add sbb in xor mov test pop mov jne orb aas sub mov jnp push das out xor outsb push mov loope mov pop (bad) mov push lds scas imul dec fisttpll push orl sub push adc inc jno mov or pop cmpb adc adc sbb mov adc push cmp jae btl (bad) or push stos xor arpl push and mov ret mov into and or mov xchg lret jecxz insb imul arpl fisttp mov mov (bad) mov push jnp mov add mov add jecxz in pop cmp nop test insb push add jo fwait mov or not adcl add (bad) outsb push outsb ffree cs cld push ret out and sub in lock insl aam stos insb popf movsb add or and fsubrs push push movl lret jo jne shlb and xor push (bad) ljmp popa dec mov in push in fstpt jne adc out sahf cmp xchg mov push mov movsb push mov inc inc mov (bad) aad inc in ja popf pop (bad) jo add ss lret sbb xchg sbb jae inc push loopne mov mov sub cmp repz lret aam adc jecxz fldcw xor test mov add cmp adc je jns (bad) pop xchg push fs mov dec in mov cltd or cmp inc rcr push shrl mov or add xlat fistp mov xlat jno mov lock aad sarl cmp lahf ja mov ljmp adc in fild jb and fstp (bad) mov sub mov nop inc jg or iret mov mov fcom stc jle inc icebp popf xchg inc fdivrp js repz out fstl add mov (bad) mov xor add mov xor aaa jae xchg stc xchg mov fistpll and xchg mov xor (bad) xlat jo xor cmc das pop (bad) jb adc lcall cmp addl adc call dec test nop sbb (bad) mov adc out cld pop xcrypt-ecb cmpsl lret mov mov outsb (bad) aaa lret dec push sahf inc jp mov jle insb push mov mov enter (bad) stc (bad) lods dec xor mov push cmp negb sbb cwtl sbb fcmovbe loope lret leave lret or jp scas and int ljmp cmp sahf scas push jle,pt in adc inc (bad) lock ret push fstp and test xor cs not sbbl es dec inc repz sbb cli or adc or and inc xchg rcrl adc mov aad push fcmovne mov ja scas test add ficomp data16 cmpsl popa lahf xchg cld dec ss js imul arpl ret dec fwait loop adc jnp,pn aam xchg stos push enter mov cmpsb sub or addl xor push jnp inc ds dec jmp imul in daa jb xor test jp inc cld inc scas iret pop push pop push daa mov andw inc dec in xor adc jg icebp test mov sbb dec cltd cli mov loope (bad) cmp test fnstcw lret adc inc jp jp enter leave (bad) sbb xor (bad) sub push subl xlat mov ret adc sti mov push repz sarl addb inc dec add add lds push into inc insb or jo add add push inc push jl mov inc mov loope fnstcw mov mov mov and cli mov add in xchg cmp mov fidivr xlat xor test jmp das pop ret add push dec prefetch aas adc lock test lods nop nop sbb in imul data16 es jl cld (bad) sub cmp xchg xchg mov mov jp push add adc or cmp pop xchg roll std xor lret push les jp jb loopne dec cmp into mov jae sbb and loop aad std stos insl je popf mov or xchg (bad) push mov lods ljmp jp xchg fisttpl dec pop leave xchg cmc xlat mov push fwait xor in add mov and rol out sub pop add in jbe bound into xor je cwtl dec jae xor ljmp in mov in or cmpsb ret xor push (bad) cmc aas lods push leave cltd lret ret rcrl mov and cli mov pop gs in cmp mov push (bad) les inc movsb aas cmp ds xchg test adc jle,pt in adc lock mov test dec stos nop nop sbb mov inc int3 daa jecxz push add andl add mov bound mov xchg ret add lret xor stos jb sub inc mov xchg xor or inc rcll int3 js imul mov fld1 mov add in add mov mov shrb dec xchg leave (bad) jae add add jno sbb cmp ficom int mov mov mov rcrl mov pop push arpl movsb xchg adc cmp inc dec inc jecxz lds aas fcmovu fimul test inc scas fistpl adc and movsb in sbb shl ret jecxz jae test push cmpsb cwtl in mov mov fistpll sub fs push frstor sub jbe mov addl fwait cmp sbb mov clc in je mov in jmp cmp xchg out lcall out or sbb js push inc jg dec ljmp sarl lcall pusha sub mov out call add push xchg addr16 popfw dec push sbb into jae adc inc mov xchg sarb call pop lret rcrb pusha in pop push loope mov dec cmpsl push or inc sbb jns call cmpsb push scas js add icebp leave push sti and sahf jmp jne xchg loope mov out int nop cmpsb into fwait mov fs cli mov scas cmpsl push lea xchg pop push xchg mov cmc arpl pushf lock dec mov dec lods or xchg sub test rorb test inc mov jg xlat xchg mov pop lret rorb mov adc (bad) movsb call sub repnz sti jp iret jno out cmp in push cmpsl fiaddl outsl xor inc out add daa push sbb in or push add (bad) jmp enter pop ja pop push xchg mov pushf xchg mov ds cmp int fisttpll (bad) icebp jmp dec lret in push lret test push cmp adc mov pop lret mov stc sbb lods popa jo dec push cltd push and sbb sbb dec inc pushf add pusha loopne inc mov enter scas fcomi cmp ffreep pop (bad) js pop outsb adc (bad) lret sbb aam mov (bad) xor xor shlb dec aaa arpl lcall dec movsl data16 hlt adc fisubrl xchg rcr xor nop push subb stos mov push leave arpl mov mov in or jnp in je mov add xchg adc push sub jge mov push add inc mov adc (bad) sti fwait (bad) ss sbb fistp jmp jne stc loope shr push daa mulb xor icebp dec xor lods pop or rorb sub loop pop pusha repnz jecxz push mov push push data16 push (bad) mov inc xor mov pop int and pop cltd jge cmp mov pusha mov insb push xchg test (bad) ret mov push xchg and call insl jp roll sub jnp dec das push dec cmp xchg aas addr16 xchg jg push jo out cmpb inc outsl in mov stos cmp add add cwtl outsb mov sub xchg lret mov jo fildll fs fistl insl dec sub pop cli das gs mov add add out rcll jle clc jbe and mov dec (bad) push and fildl jl fs mov test push shl adc rorl leave repz jns dec enter xor aam mov pop in repz mov sub add pop fcoml jbe gs cmp pop jp out jg mov sti push jmp rcrl and inc outsl (bad) fimul mov sub jle jae xchg ficompl test xor fnstcw cli outsb js push lret fwait lods push mov push push daa mov mov or xor push sub sbb xchg lods jae lahf test rolb jmp sub adc xchg push aam stos push pop add add mov mov imul xchg fs lods push push stc xchg adc cld outsb (bad) js mov arpl and push mov icebp sahf dec in mov call jb loop in dec hlt outsl add scas imul imul cmp (bad) fldt mov sbb pop jp insl cld out js aam fadds jecxz cmp in sub inc dec (bad) in insl lahf or and fistpll mov scas cwtl stos test or lock pop adc dec sub jmp sbb movsb pop sub pop jmp femms sub lret dec inc mov sbb pusha pop outsb xlat mov jbe push js in jo cli fisttp xchg sti sub scas rolb sub aad cmp insb ja xor fdivr out jl out insb popa sub mov or mov add cmpsl sub out mov mov xor pop xor popf inc jbe nop lds dec dec dec decl xchg adc imul or xchg jg (bad) dec add push and jle xchg popa mov ret pop nop outsb jno xchg cmp out out loope mov or cmpsl mov pop cmp (bad) ja push dec sub jb dec add pop ret push fstpl pop (bad) ss or push nop out scas cmp ss jns inc inc cld jmp test stos push repz out push rclb cmp std pop cltd movsl les mov or aam scas or stos adc mov or xchg (bad) aaa (bad) jae push cmpsb stos sbbl mov pop jl jg jae jbe push add int mov xorb ljmp inc scas ficompl mov sbb fwait (bad) dec loopne in sub push lods leave nop pop dec xchg out add xor aad push stc xchg sbb ja lret mov aam insb ret mov push aad stos int call int mov ret jns sub mov data16 push icebp pop jecxz ljmp push pop cs wrmsr mov cld lods clc mov xchg xor rcrb xchg or xorl add or out pop xlat mov push (bad) dec lds push jbe enter lret and xor and and addr16 ss mov enter clc out stos pmaxsw imul push fwait adc cmpsl jge push (bad) or shrb repz stos push xor into loop xchg mov push insb sub fist cmp out xor (bad) dec out pop scas addr16 pop fild mov mov test sbb cmp std mov clc call mov clc imul xchg adc stos clc jmp jge lock mov das ret addr16 cltd jg xchg jbe ljmp sub push jno ret mov or insb je push mov fidivl sbb fs mov jmp test dec shl adc mov pop leave mov incl mull test or sub jno and pop imul imul inc (bad) dec dec aam mov push xlat out ja mov (bad) js or add add stos xchg and push add popf mov mov jo sub outsb push ja dec out addb dec cmpsb sub clc push js push clc lret stc xchg js fildll mov or in dec xorb dec icebp aaa daa add inc push fnop jo pop aaa dec out mov fst adc mov popf sub push sub imul jecxz test xlat aaa outsb pop ss jns push lret xchg inc (bad) xor mull jno adc xchg ss or lds cmp push dec cmp (bad) add js xchg gs gs dec pop dec test loope faddp mov cmp jo movsl pop addb in pusha inc cwtl scas enter cltd ret sub mov lds das push mul inc inc enter inc jmp psraw jle jno fdivs mov movsl les pop ret ds mov shrl add int clc orl pop ja push lods jge repnz popa outsb xor dec mov daa fimull insb cmp js stos cs ss sbb pop add xchg cmp cli icebp push call dec jle cli das insb inc add lcall dec lods mov pop (bad) repz inc call jle xor dec xchg push mov and sub or pop mov rcr jo mov loope stc fimull sbb jne push and mov jg dec outsb xor mov mov add mov dec out addr16 sbb xor xor dec test or sub test jmp (bad) add mov aas pop cs pop jg pop push neg sbb popa (bad) jb call mov sbb les mov (bad) xor and ss (bad) mov jnp loope add mov scas lahf int faddl addr16 cld and cld push aaa xchg or adc enter push sbb (bad) lcall lds add sub xor fimul push cmp push fdivr mov frstpm(287 mov out sbb in jle ja jmp movsl int orl ljmp sbb jb mov movsl popf jo push dec mov test (bad) insl and pop dec jbe push add xor aas push xchg cmc or test mov out cmpsl fwait daa arpl ja or test outsb inc rorb fnsave dec mov push jg sbb jno repnz insb mov or in inc fstpl leave jmp inc push push outsb loopne and dec (bad) hlt and push pop call (bad) mov rorb loope mov enter or sub outsb test pop jmp inc xor sub sub mov loopne pop pop in and fisttpl dec sub xor lahf ss das ret cmpb ds cwtl or out popa nop sbb mov ljmp mov insb adc pop lahf and jnp test frstor lds loopne mov enter clc movmskps mov shl and add shr mov add mov jp jns in lods xchg sahf stc sub ret flds pop mov (bad) xchg stos pop (bad) imulb adc mov mov (bad) mov pusha lahf fstpt or cmp mov fadds repnz push xchg popf mov xchg fucom divb dec mov or mov shrb cmc test fdivr and (bad) aas push repnz and push aad push push (bad) int3 subl hlt stos movsb mov test ss gs xor push inc pop mov mov mov pop clc andl in rcrl jae or ret mov dec dec (bad) adc cmp push test jmp sti and jecxz jo add mull or (bad) ljmp loopne jmp rorb xor and nop aam xor inc or add sub mov adc out mov fdivrs cmp inc dec pop xchg push xor or out cltd cmpsl jmp cmp inc xor icebp jno outsb cwtl add or pop stos ret leave mov mov lret pop cmp mov sbb lods rol mov ret and push daa out push cmp std sbb enter iret (bad) scas inc stc in mov cmp mov push subl push dec (bad) push and xchg xchg jb lret sarb subl (bad) enter outsl dec pop dec inc sti data16 jnp add mov xchg lods dec push (bad) pusha leave add mov test sub sbb push pop jg popf mov popa test add add mov jno (bad) jnp cli push scas das or dec popa cmp inc xor pop cmp xchg lods mov xor push out and cltd or mov mov mov aam sub test test xor lds loope and pop cmp mov cmp sti nop out and adc stos jo out pop inc mov inc inc sti and dec jbe inc jmp cmpl jnp and mov hlt cmpsb jle test lcall jg ds add xor iret insb mov inc mov enter aaa and sub mov addl mov sbb jmp ret mov add xchg xchg adc insl stc xchg pop push add adc jl add adc and pop mov pop fisttpl fwait cmp lds ds les dec je add in scas jno das (bad) icebp cmp popa pop rcrb cld test push sbb or mov mov jge bnd sub arpl out xor imul pusha lds push adc mov jae outsl fs loope divl add jg stc inc pop call into jmp imul leave js mov loopne (bad) xchg leave adc xor sti jo mov push pop stos (bad) je ss push ret dec cmpsl pop mov push test cmc and sub cli into fwait aaa xor mov in jg xchg imul loop out mov xchg mov lcall leave insb in mov sbb add jne inc mov adc push and mov loope sti cli xor push push push lock push fldcw arpl xchg stos xor repnz imul push xchg lods lock insl and ret and cmp orl adc mov pusha cmp or addr16 inc add arpl pop lods sbb outsb inc dec test lcall enter ja sbb xchg pop aaa dec fs lods arpl sbb push addr16 push jbe push push addr16 and fucomip cld lods xor mov and movnti mov jl movsb popf int adcb mov cmp mov sbb stc dec cmc cmp fcmovne sbb and lret xchg push iret ljmp out sub orb pusha inc outsl xor lds imul or fcom fidivrl sbb sbb mov mov insb ret jno,pn jne xchg cmp cmp inc rcr sub xor test mov cwtl insl pushf jl push push mov pop cmp mov pop lahf movb jge mov sub mov (bad) sti sub mov ljmp jno mov fistl out daa insl jbe mov push aad mov inc adc (bad) mov jbe inc insl inc rolb mov xchg pop in push xor dec outsl lcall xchg mov mov pop inc (bad) xor (bad) and mov pop jg xchg pop sub imul out adc call or repnz jbe (bad) out push test out stos lock push push daa frstor sub pushf and repnz frstor rcll fwait mov dec add jbe lret sahf rolb les sub ret neg stos sub pop lahf fnstenv cmpsb repnz mov jmp xor (bad) rorb sbb out leave cmp rorb fisttpll mov jmp das movsl lret push inc mov ljmp jns jp into (bad) hlt pushf pop aas xchg fildl cmpsb jg sbb fmull and movsl shr dec push (bad) jmp adc movsb sbb popa in or cmp sbb ljmp push out pop out and enter jne inc mov test rolb add add or jp inc and dec pushf addr16 mov jge push cmp loope push adc jmp movsb mov pop enter in stos pop push test (bad) lcall add mov sbbl cmpsl pop mov jb fadds movsb mov pushf mov movsl add outsb ljmp sbb enter jns push and out push sub into pop es dec dec adc fiaddl gs icebp push es rcl cmp fstl sub (bad) movsb call push sub push (bad) add das nop sbb sbb mov sbb cmp std mov jae stos clc mov iret shrl push mov out mov add in lahf push mov arpl shrb loop xchg (bad) mov xchg cs pop incb inc pop popf inc mov in (bad) xor test fist inc pop aaa (bad) sbb nop scas ss xchg adc sbb mov stos and iret inc xchg enter lea sti frstor cli sar add ss jns or sbb cld inc (bad) sub ret mov mov int3 sub outsb jae enter push inc xchg aaa sub aas dec popa in sbb dec mov push sbb es int ja add fs fistpl dec test test adc outsb jbe cmpsb mov clc stos jns dec dec push inc jg das cltd sbb fs nop adc mov mov sbb imul sti into dec cmpsb clc mov push pop jecxz idivl outsb pop and push dec push addr16 mov sub inc xor inc mov imul jge pop jb mov lea push xchg lret sub xchg lock in push dec cli into test pop xchg loop fbstp pop push push outsb push mov mov gs push imul mov fnsave push jmp mov fmull jnp aam leave adc cmp shll add or stos xchg scas jle dec jo movsb call pop jnp (bad) clc push pop pop rcrb fwait mov jb mov sbb mov rorl pop aaa mov and insl xor ret in push dec inc aaa mov or (bad) add orl mov repnz push cmp hlt cltd sub adc outsl stc cli sahf push fisubrl lods arpl xchg stos pushf icebp repz fcoms mov push (bad) sti xor mov imul jp sbb adc fistpl fimull out or jno xor jp or sbb ret cli pop xor lods stc or cwtl mov add lds in push and inc test lods xchg dec cmovns or xchg or and rorl in dec and call je pop pop pop push inc int cwtl mov dec sarl or jae dec stos xor xchg lcall fst inc pop adc push push add pop arpl std notl mov sub repz fnstcw mov ljmp push add add int cmp aad sbb jmp (bad) adc push dec pop popf clc cmp ret xor icebp cwtl hlt jo pusha cmpsl (bad) dec or std jno sbb dec xor popa outsb (bad) push jmp pop outsl inc scas dec inc mov cmpsl stc or cmp sti cmpsb push lods pushl push xchg fistl ss jns xor pop xor push sub sub enter and adc popa aad movsb dec sub sub jo jge cmp ret mov fwait bound sub test mov mov mov push les jp dec mov mov (bad) scas dec push gs cltd adc cmp bound roll or vstmxcsr sti inc jo sbb ss mov cwtl xor scas cmpsl movsl xchg pop mov and nop scas push aas push xchg push lea or lods xor cmp idivl mov repz mov outsl mov and rorb add pop push add inc data16 es jbe xor mov jbe adc cmp mov sbb pop jnp test push mov insl dec adc das cld ja mov xlat jne adc mov mov mov mov adc mov aas push nop push daa repz int cmp movsb xchg cmc jg pop stos in fs test dec enter xor lahf (bad) pop cs mov inc iret jmp rol rcl hlt jno jg inc jbe cli inc adc (bad) or pop or imul mov sbb fmuls fcmovnb jl mov mov repz sub jae xchg adc (bad) je nop movsb call push xor mov dec cmpsl icebp clc add push inc ret mov mov xchg adc pop and addr16 cmpsb xchg cld add cltd fidivrl xchg sbb xchg adc cld pusha add popa aas adc dec cmp adc ja,pt jns sbb insb dec lret xchg (bad) (bad) xor inc int3 icebp inc (bad) jecxz test sub mov lea jbe mov and mov arpl in adc push scas aad cmpsb lret pop outsl inc scas arpl repz xchg shlb insl loope stc cmpsb and ds push test lret jne inc cmpsb icebp stos mov int3 (bad) cmpsl cmpsb loopne mov push daa mulb jg gs aaa arpl lods pop sbb outsb ljmp pop mov ljmp add add data16 loopne mov cmp sub das test jo in faddl clc and je or imul xchg pushf adc or adc inc (bad) cmp sti jp fwait scas sub (bad) int3 testb mov lret sbb jae xor call fsub imul jae outsb pop hlt jmp jp pusha outsb inc push xchg cli mov cmp pusha push fs mov push leave test push xchg pop push mov or and xlat push loope clc and add lds jnp push push repnz jo adc xchg data16 jb gs aaa cmp cltd sbb push add repnz push (bad) (bad) pop mov fs ret mov sub push add aas pop lock insl rorb data16 addr16 jmp mov cmc jg xchg pop mov xchg pop dec dec pop enter or dec imulb (bad) sahf fildll jmp xchg pop dec loope push (bad) mov test inc rcrl aad loopne stos cmp daa lcall lods dec inc imul (bad) fildll lods daa rcll xor fsubrs mov inc sbbb dec mov out push outsb jae sahf jmp mov cmp jne lods sub notb jg insb jl cltd jae xchg cltd mov inc or mov test cwtl aas dec mov mov mov jo popa mov (bad) aas push dec (bad) jno sub (bad) aaa sub mov test mov ljmp fistpll pop imul in ljmp push iret inc dec shll pusha adc (bad) sti xchg jo clc lret lea jns repz add das and hlt adc sbb adc lds ret add jmp mov insb out lret push xchg lret dec cli nop out imul (bad) mov cmp test aam rcr sub mov sub sub lahf adc js stc lods daa call ret cli (bad) roll push (bad) xchg outsb test or pop jmp add cmpsb sti and setl shlb push mov add sete ljmp popa outsb inc test negl dec xchg lret and in pop outsl pop xor add add ja test or (bad) loop (bad) sar mov mov lret mov mov and insb jg ds lret rcrb add movsb (bad) ret lret lds xor add jns jo xchg sti sbb push ficomp dec adc push jle mov insb pop push daa mov test (bad) hlt or popa xchg or ret add or adc jg xchg inc aad pxor int mov mov repz sub fisttpll hlt scas enter inc mov adc lret pop in or decb stos adc iret inc xchg inc scas cmp mov cmc cmp push and pop pusha inc push cmp lret dec cmp or and mov movsb push daa notb push xchg mov cltd adc mov test jl jno popf fcmovne les mov test ret cmc fnstcw out cmp push and clc pop dec int das jo inc mov jg cmpsl inc rcr sub pop adc in inc mov (bad) jmp mov jnp mov jmp call inc leave repz add pop jmp es fisttpl fldl dec adc push iret scas insl jge pop push daa pop (bad) (bad) sarl clc (bad) fwait aaa loopne push stos adc add adc aam mov enter lcall fild xor fs enter xchg cmp ja dec mov leave pop inc xchg pop enter mov or fadds sbb cmp xchg jns pop pop xchg pop inc leave jo add mov and pop jmp aas xchg push inc pop xor sbb push ss push push push jnp mov std lcall fs lcall sub test adc rorb insb ficomp mov mov mov psubsw mov pop or in inc add ljmp xchg add lock xchg nop dec sub flds outsl arpl inc icebp (bad) orl mov iret inc lahf jno aad push mov ds and push pusha inc aad sub cwtl cmp js sbb pop pop (bad) out pop leave fwait mov lcall or ret add jnp cmp orl push cmp xchg xor pop gs mov cltd or add add fdivr sub test fimul jg xchg adc adc loop movsl call dec fwait sbb sbb or and lock xchg fildl cmp lret sbb cmp scas lret mov push push daa idivb loope fist pop ja into es xor pop dec mov (bad) mov pop ficompl push iret mov sbb cld fisubr mov insb cmp rcr pop dec dec sbb fdivr mov xchg mov test push or fs add sub jle mov scas sbb mov (bad) jb dec add sub xchg les pop push push out inc pop arpl ret or jns pushf in add add lret sbb dec popa add stos or ret rclb mov cmp out push mov mov mov inc add jmp jnp jmp mov sahf shlb pop adc mov xchg movsb cmp call (bad) leave repz lahf dec das icebp or push sub mov pop test scas in jge mov int3 mov jo push fnstsw and int call loop jecxz lcall mov pop das mov in mov pop xorl pop gs orl cs mov in test bnd jnp in or enter pop mov adc sub sbb (bad) iret inc inc bnd fwait sbb pop test stc cmpsb inc nop adc gs push mov repz or cmp cmpsb shll inc roll adc les movsl out push mov adc cltd aas dec jecxz cmp test and ss cltd loope cli (bad) mov lcall mov and add xchg inc scas cmpsl sub movsl xchg adc mov fisttpll (bad) (bad) (bad) jo fwait lahf dec xor and rolb je and clc inc mov jmp stos adc and jnp or xor mov ja pop (bad) pop mov dec loop dec nop jecxz sub dec xor pop adc inc jg mov sbb mov sbb mov xor cwtl or inc outsl cwtl inc or loopne inc sbb push sbb xchg sbb inc fistpll pop imul call movsl xor iret ljmp inc pusha push dec (bad) aad sbb jecxz push outsb jo mov lods fs loopne cmp sub int leave pop sbbl ret gs popf xchg (bad) or sbb push cmp int pop hlt adc repz mov out mov (bad) mov test lcall adc in rclb jg mov xchg cwtl xor movsb imul inc (bad) dec dec inc xor stc jp iret xchg scas jl xchg je (bad) or add mov cltd jb mov jl sbb gs mov jge (bad) fldl or lahf pop mov inc xor add or or sbb pop xor cmpsl nop enter mov gs jne in cmp test mov pop mov xor scas cmp jge adc out ret adc add mov movsb imul inc (bad) ss aad (bad) xlat out (bad) inc cs test or dec lea sub in rorb mov test lret or aaa xchg data16 dec add xor rorl cwtl rclb pop ljmp mov pop add jl gs aaa sub mov fidivrl jae (bad) fcomp mov sub lret loopne mov push sbb lahf mov push inc lret leave repz push popf jge or loope popf lock mov push roll add fs and inc cmp imul mov test fs mov xor add jmp iret mov dec cmp (bad) mov push mov pop mov cmp cmpsb mov add in inc pop xchg push mov sar and xchg test push jo pop cmp mov in adc rcrb imul inc cs pop adc insb jecxz xchg pop and dec hlt in dec das pop cmp push dec pop daa out sub xor lret mov cmp les in xor or out pop push cmp adc ljmp add push mov xor and arpl add mov sbb imul mov or pop xorb cwtl mov psubsb ss add push sub sbb sahf cmp push iret stos fld dec scas call add lds ficomp sub sbb repnz cmp insb je cmpsl inc cmp xchg cltd decl dec cmp adc (bad) xor jne dec icebp add iret push aas mov repz add int aas ljmp in sub jle push cltd mov pop cli mov imul inc mov xor movsl rcr clc jle das push and loop pop (bad) (bad) clc leave stc shrl shl adc (bad) dec cli enter or or das pop mov std roll mov xchg push pop pop xor add mov out mov inc (bad) xor jne das cmp jbe or push (bad) test pop jo loopne mov inc mov sub add imul fs mov stos mov clc cld aad rclb in hlt decb sbb mov sti ss addr16 dec cmp test cmp outsb std and out xor bound sub pop sbb mov push xchg dec mulb js fbstp aas xchg (bad) out idivl lds xor (bad) mov pop add orl sarb sub push pushf roll icebp add imul ss mov pop das or xor adc cmp mov call cmpsb sub add add inc pop pop mov or xchg ret jmp fwait mov test sarb scas sbb xchg insl or sbb inc loopne ljmp std es bound loopne (bad) inc and sbb in inc cmp cmp mov mov push push aaa mov and ss (bad) jne ror ja pop sub add dec sub adc scas shlb addl andl add insl cli in push push mov mov sub push add adc mov fwait inc or ret push test (bad) or cwtl outsl (bad) cmp arpl mov xchg out adc mov sbb dec cmp mov movsl adc (bad) scas out sub ficompl adc push in pop pusha aad mov adc xchg jae inc sub xor dec jb dec test rolb aam add fcmovnb inc mov xchg push sub cmp pop jmp lock adcb aaa adc xor arpl mov cmp mov inc mov and out mov push push (bad) out adc mov xor es or xor sub ficoml loop cmp jo (bad) repnz sbb pop cmp xor jl adc sbb sub cld out mov cmp push (bad) add add mov aad repz in adc arpl shlb pushl xchg adc stos dec in push (bad) adc das ret cmpb xor rolb repz inc mov rclb insl sub xor add pusha dec test int mov xchg es cmpl fsubrl mov mov mov (bad) pop cmp (bad) je movsb call inc leave jo mov jbe sub cmpsb call lret or dec push sti sbb sub call loopne std scas hlt sbb inc andb leave xchg jge cmpsb out xchg je imul cwtl aas sbb push xchg lret cmp jne dec mov fstl cmp mov jns clc test scas lahf mov cmp gs xchg lcall fist push dec leave repz mov cmovp ficomp xchg fistpl imul imul repnz add add fnop pop sub daa push aam data16 imul mul decl stos dec dec dec out sbb xchg leave xchg icebp pushf lds xchg loop or pop cmp hlt push cmp push lcall loope inc push push jbe cmp cli mov inc xchg pop jg xchg push xchg mov jle pop cmp adc add in inc mov stos addr16 inc and and cs repz call je mov add inc pop mov int3 jl daa mov xchg xchg je inc into stos xchg push fs insl or test sbb in xchg adcb lods push xor xor loopne lret xchg and iret loope mov xchg mov add mov in adc jle icebp inc xchg nop pushf add aas call add cli xor add inc add pushf cmp arpl jb inc mov jecxz iret jg pop dec jbe leave push and mov mov test (bad) jae iret lret lock mov ret add inc push inc dec xchg fs mov aam push (bad) sti and jmp (bad) pop out mov dec jl test sarb mov sbb fisttp mov aaa lds xor xorps sbb cli popf xor outsl dec pop dec cli cmp pushf (bad) int pop stc cmpsl xor cmp jo call divl cmp inc into jo stos pusha mov sbb call loop jno cmpsb out das dec decb cmp iret or cmp bound cmp test xor fidivr mov clc popa ljmp dec ficom ja add lret sti mov push lret repz xor lahf sub gs mov dec cmc mov mov jnp mov iret (bad) addr16 into lock or mov adc or in jns das adc jnp xchg sub call lret or inc xlat push dec add out xchg call imul divb jmp sbb mov cmp mov rorb xor xor jae or or jnp add sub push movsl fldt cmp ret int3 pop fcmovnu jno cmp fwait das in and les repnz stos in std mov push inc in sbb mov sub rolb pushf bound add xchg arpl rorl cs add sahf mov sub lds rol dec push jnp fdiv mov loope dec mov cmp xchg inc out data16 xor rclb sub cmp push aas (bad) xor fistp lcall xor sub mov and jbe hlt inc jbe jo loop mov mov or sarl fdivs mov jno jnp in jmp adc mov xor cmpsb pop (bad) dec jbe mov xor jo rol js icebp mov sbb mov rorl mov cmp adc sub and ljmp mov xchg xchg xchg addr16 xlat pop xor sbb cmc mov arpl add xchg lock add aam mov and jnp popf xchg pop fxch cmp sbb mov and fisubl pop mov outsl inc pop pop dec sub sub cld inc xor gs mov dec pop adc mov inc outsl mov test outsl mov adc dec data16 jle repz stos or mov mov xchg xchg fprem1 dec jle adc call jae pop pop (bad) xor mov (bad) rolb movsb pop lahf mov xchg inc (bad) push sbb fisubr dec jns sbb or shufps and and dec and pop call mulb push cmp out dec inc aas out jp mov jns sbb adc hlt ljmp icebp mov lds sahf ljmp mov mov push aas pop or fldl jmp mov mov (bad) fidivr iret inc fnstsw or sub (bad) push sbb sbb and sub nop fwait sti xchg imul or mov test cld fiaddl mov lahf data16 mov push arpl mov lcall xchg vpcmpgtw into dec cmp (bad) push test addr16 inc mov mov xchg xchg push mov jg loop lahf mov fs sub inc inc inc addr16 sqrtps lret (bad) dec mov mov cltd and std mov xor ficomp (bad) pop and sub pop inc into ret out shrb xchg adc dec (bad) je cltd scas mov (bad) xchg pusha mov imul cmp sbb xchg mov pop xor pop or fwait xor aaa jb shrb std gs and adc mov jl lea dec ss in dec adc add rcrl push notb push movsb dec sarl dec mov pop cltd rorb dec ret ficompl or jns hlt inc (bad) repnz sti cmpsl stos (bad) std data16 cmp inc jmp cmpsl cmp cmpsb pop (bad) dec lock mov mov data16 mov jns push or ja push icebp mov leave repnz out and cmc mov lds dec insb sub pop add cmp jmp adc mov xor pushf call lret add sbb (bad) cmp gs xchg rcl jns ds test add cli mov rorl push das enter inc mov imul jecxz mov (bad) scas cmp sub adc push jmp popa outsb sbb mov sub rorl mov hlt into iret xor (bad) inc mov mov daa sbb and mov imull das xchg sub adc (bad) mov sbb dec xchg mov cmp sub xor push mov and cmpsl loopne add lret cmp incl xor out mov jne jbe std xchg mov lds rcr pop jae jne cmp or jno clc leave fsubrl xchg test mov add add in inc cmp movsb adcb lret sar test lcall enter rcrl ss sub int push fistpll leave inc scas stos in pop ret dec adc jbe clc mov icebp xor add xchg ss sub ja add repz sbb sti int lahf xlat mov and sub dec push test mov lds xor add mov xchg and jmp in mov cmp adc out js fsts inc inc jmp pop xchg cwtl mov clc rcll in mov jp jnp mov aam dec mov pop dec icebp xlat leave daa mov int test pop clc sahf mov es push int aaa xor jge test add imul adc adc stos xchg mov std dec xor mov (bad) aas sti loope mov stos ret jmp nop sub mov call cmpsb imul test lret pusha pop and push nop jge test push pop mov bound cwtl cmp lret js cmpsb jne jle insb mov adc jnp mov aas pop sahf cmp jbe inc fbld inc ljmp xchg pop lcall repz cs dec pop dec sub mov ret jne inc andl push sub negl dec (bad) xor fdiv mov push adc add fwait add inc push insl js jae push aaa cmovno loope sub add mov lea add add fnstsw xor xchg cmp test sub jmp jbe xor sub mov lods lock mov std dec mov mov iret or xchg lds mov mov dec mov les sbb jae insl fs or imul cmp addr16 ja arpl or cmp jne inc (bad) push xchg dec jae sub ja inc insl and cmpl insb fst mov and jo and mov ss sub push xor repnz (bad) (bad) cmc rol int jnp out mov inc inc (bad) mov mov hlt jecxz xchg lock xchg cmpsl xchg xchg mov adc adc add pop cmpsl mov clc and add fiadd add addr16 xchg cwtl iret ljmp mov inc fnstsw inc nop dec push sbb sub cmpxchg enter mov (bad) adc pop push daa push pop dec inc movsl adcl cmp pop ss jbe sbb es push mov mov jmp jmp adc dec lret xchg jl adc adc icebp loope sbb mov push adc shlb jb pop popf mov sub fistl into rol fimull stos jnp iret inc lahf jno inc inc in lahf stc cmpsb scas (bad) sti sbb mov sub xor mov mov jecxz cmpsl xchg mov jl rcrl lcall mov add dec add aam push mov unpcklps mov imul xor push int fnstcw das dec sbb pop mov (bad) in shr ljmp push push (bad) out jl fisttpll mov int es pop ror mov xor jecxz icebp or ss and mov and shll fistl and mov aaa mov push push xchg out or push mov das sub push test mov and sbb xchg daa je jp ret out mov out pop (bad) sub adc (bad) sahf cmc sbb movsb sub nop popa jecxz pop pop imul inc xlat dec in pop jl daa push (bad) cmc in iret pop decb jl add cmc (bad) mov cmp outsb adc mov lret xchg lods push dec test add add iret push imul mov xor comiss sbb bound jge imul rolb in enter and jnp repnz push and inc inc imul imul lds mov add test in and mov cli mov cltd sarl pop cmp ret jno hlt fiaddl jbe into sbb leave fld push clc arpl sbb jae daa (bad) inc lret dec adc push jle imul out orb bound dec cld js mov and (bad) repz aas and (bad) call scas mov xchg dec mov sti iret (bad) add dec bnd in inc pop movsb jle xor lds mov ljmp aas pop pop jmp fyl2xp1 loope test in js mov mov enter adc mov mov xchg call test insl iret xchg mov cmpsb cld mov mov xor stc out jl fsubl cmpsl sub adc mov add mov jns pop mov lret xor mov mov push cmpl pop int fwait stc sbb jb adc mov inc jl das cld xlat push mov pop clc (bad) sbb xor push outsl dec sbb gs imul push inc (bad) push xchg fiaddl pop data16 aam jnp sub push dec xor cmp jne (bad) fwait mov incl aas lret push ja inc es push nop sub xlat dec outsl cmp movsb add jmp xchg (bad) add out mul or aas out inc ficompl push cmp loop stc sbb movsl sub sub mov shl xor lcall push sar adc sbb rcll out adc add sbb shrb sbb inc mov sbbw or pop sub mov jbe xchg mov into lea rorb pop push dec mov push movl mov jecxz mov int3 dec fsubl test (bad) and scas mov inc mov cmp call inc shlb cmc dec in jle push cmp sbb or loope xchg mov push (bad) push mov cmp xor in (bad) mov ljmp addr16 sbb pop jmp sbb cmp insl enter add out or pop push xchg pop add in mov in inc ret hlt clc loope in popa xor cmp sarb cmp sti out fildll loope lds dec clc pop mov sbb dec in test fiaddl and cmpsl mov dec cli pop das cltd fldcw dec inc (bad) stc in xchg jmp daa sub push inc ds or jb mov xor jmp push or xchg adc lea out int3 push inc pop pop cmpsb ror push fmuls scas rolb cmpb pop hlt jmp mov inc pop insb je cmpsl adc push xchg mov cmc arpl xor bnd jne sbb inc mov inc rorl adc shll inc shlb pop mov adc cltd pushf add cli (bad) addl add dec rcl in adcb sub or leave das pop push and sbb dec icebp sub stos sub mov test popa pop ja xchg push test aas sbbb shrb inc outsl fstpl out sub pop aas in test sub jmp sbb push jmp aam cmp test test mov or fiadd mov movsl ret xor jmp pushf push add or cmp and jecxz les std cmpsl push (bad) jbe in ret insl and mov ret lret sbb aas dec mov add (bad) pop stc push inc pop shll push bound pop jns jmp xchg popa outsb movb pop inc add jno (bad) and mov out fs push stc jno (bad) out movl add add add aaa sub lods in outsb mov xor pop movsl push enter sbb adc mov sbb push gs xchg lods imul call call mov sbb push popa cltd push dec sub lds insl les repz movsl jno xor cltd pop cld push inc hlt loop aas hlt mov xlat ja ret lods sbb xchg sbb cmp icebp xchg into dec lret ds in or dec adc (bad) addr16 inc mov insb jb or insb or xor and mov test bound cmp jp lock mov out ja movsb pop (bad) js add xor lods repz mov and hlt mov fs inc insb pushf lea pop and add add add in jne icebp pop or dec lahf cmp (bad) pop ret or outsl mov cmpsl je push xor in outsl out cmc pop mov lods or ret inc (bad) mov mov movsl sub add sub mov add movl loopne rcl bound adc loope sbb adc aad in add icebp mov mov push daa idivb adc adc scas into sbb mov inc xor andl adc mov xchg lock pusha dec xor int popf pop clc jnp dec adc mov cwtl je adc jae cwtl sarb xchg (bad) or add icebp jo jae inc mov cli fiadd mov add add test lock leave insl and push scas clc jns fdivl jo shr test movq inc push icebp adc je push jecxz add imul dec ret popf xchg mov mov mov xor frstor lret pusha lcall decl jnp jo mov in test pop mov mov cli mov push xlat xchg mov xlat jge iret scas rcl ret fistpl mov dec pop jecxz xchg mov fistl insb scas inc les aam cwtl jb iret stos mov cmp stos mov xchg (bad) jae daa ljmp pop jmp popa outsb lods mov (bad) aas xchg (bad) popf fs popa or push outsb dec out aaa jecxz xor test (bad) cmp inc jo les jmp add cmp fstl shrb cld cmp sar xor inc jge lods and cmpb push shlb lahf das pop lods lock add notb ficomp ret inc cmpsl loopne cmp in cmp push dec pop sub aad jo push push mov fnstenv insb je cmpsl and push xchg inc jg push xor mov mov and or adc (bad) and add jp jge add scas lods imul imul call loop cwtl add pusha int mov fcoms sub xor repz adc in mov cmc jmp mov push mov cmpsb mov and jge push shrb push stc movntq std and mov lret add mov add and test sti aas (bad) mov sbb push cmp xor pop xor out xchg jp or cmpsb dec outsb imul sub in mov loop,pt mov mov pop scas sbb in push mov mov setae std and mov xchg (bad) sti sbb pop mov lret sbb loopne sub enter cmc mov xor cs cld pusha fidivrl fcmovnb sub adc mov jecxz mov insl sahf inc lock jbe imul mov add mov lret out dec xor pop call mov movsb lods lahf adc or cmp fscale push lods arpl inc mov xor jge push jp lods cmp dec popf jo pop std add add sti sbb inc pop adc add cmpsl in cmp add out or leave or fwait aaa and pop jle (bad) je mov dec rorb (bad) mov fadd lods push ret iret loope ficomp mov or std pop (bad) or dec mov inc jp loope push xlat fidivrl test frstor inc mov adc stos scas and sbb add popa xchg mov sarl or xchg jb sub sahf call sub (bad) mov fcoms mov mov mov pop inc (bad) fucomi outsb aad and mov dec add sbb fcom xor insl mov fwait int out int3 xchg sbb mov mov outsl scas jne cmpsl push xchg daa (bad) jns cmp inc add add ss jg adc and pop cmp lods adc add lds lcall lock or inc (bad) cmpsb push add and pop ss inc (bad) jae dec xchg lods dec popf xor jbe scas test inc xchg add iret fwait pusha mov int sub xor popa outsb adc insb sbb mov arpl ret push mov push dec sti into loope jge mov xchg cmp pop fdivr jbe clc mov mov pop cld rorb jmp xor mov dec data16 mov fsubr dec jecxz out cmp call add fcmovnb inc ret push sub add pop lcall lock push inc fiadd mov mov sbb sub add sarb add movsb pop xchg lret sub insl mov add xor loopne test pop cld mov pop rorl test dec jp test in loop in and mov jbe adc sub lds fimull jl leave fwait mov mov mov (bad) test in lods add add adc fmull dec lcall cmp inc mov icebp aaa out sub cmp dec movsl (bad) rolb in pop mov xchg lret fisttpll pop out jecxz mull xchg xor mov sub inc push sbb jne in mov lcall stos scas and sar sub pop lds and and cwtl push fsubl jns call int3 popa nop adc jecxz insl pop les mov sahf cmpsb mov add std add call pop sqrtps add insl push xchg aaa arpl daa mov lcall mov pop and push xor inc icebp nop outsl cli imul outsl xor lret sbb cwtl arpl mov xor jp stos ja pusha lahf sub mov and fdivrs int3 xchg pushf (bad) dec cmpsb mov inc leave mov mov sti push jns scas dec push jle sbb pop imul mov aam scas jno dec mov outsl cmc ret out stos xor sub mov ja xchg imul rorb in aaa and push (bad) das int mov jecxz cwtl divl lret xchg lds int imul pop mov mov cmpsb xor stos lods push mov stc (bad) jmp shll shr (bad) iret sub out mov std inc pushl mov add lock dec push (bad) inc dec add pop jecxz stos outsb aas repz mov loopne outsb dec push dec or ljmp ret in pop hlt jmp xchg dec xor lods gs out push add mov outsl and sti xor add aaa dec fstpt in imulb idivl mov cmpsb dec push pusha jp clc stos mov xor xchg pop jg rcll adc mov add jmp dec out inc inc xorl lret test xlat lahf jo adc adc add cmp xor lret dec stos add and call loope mov int mov sub pop rcrl fs daa into dec dec dec std lret fldl add add jmp cmp enter inc sub mov and push and xchg cmp mov cmp mov pop imul xchg stos sarb xor fdivs pop ret stos stos dec mov push mov sub sub sbb testl stos js insb cmp mov scas ja xchg imul rorb in aaa and push add int mov jecxz insb divl mov (bad) cmc int3 fild push jp adc sbb dec xor (bad) mov ja mov pop (bad) call ja nop add lds sub cltd xor dec pop add add xlat aad das push xor inc mov xchg mov pop stos (bad) jno ficoml adc pop or add add int shlb enter pop ja push es (bad) jmp out dec rorb inc dec imul add xor push ljmp inc push xchg inc jo enter (bad) jnp rcll ficom or mov jl stos and cmp outsb xchg xchg and idiv sub repz sub les add sti dec push push leave sub inc lret mov cmp mov or rcrb fs cld push imulb popa add sub (bad) cltd aas enter sbb xor (bad) (bad) loopne xor je push push adcl mov repnz int3 fist ja movsl inc enter and (bad) stc clc ret adc pop sub dec cld iret (bad) in hlt adc jnp out lret leave jo push cs cli cli rcrl add das dec push xor xor loopne cmp (bad) xor bound inc inc fsubl add ja and xchg cwtl mov mov xor bound lret push mov test mov xor xor pop test sti jnp jnp out fdivrs xor inc add xchg cwtl and pusha test idivb rcl xor mov xor xchg lods lock cmpsl insl and ret cs dec dec adc mov iret xor xchg shufps out addb adc fs imul mov cmp ret mov mov jg fdivl in adc xchg lock sbb xchg xchg dec add test jle push ljmp pusha cltd xor pop fist fsub pop ss (bad) stos sbb push and sub dec dec xor jecxz push stos jp sbb scas popf push jo popf xor jno dec sub add popf mov pop inc mov out addb mov je,pn rcrl imul loopne out decl mov lahf (bad) xor cs (bad) repz pushf imull repz out das lock mov out int push arpl clc jno ficomp aaa (bad) or mov xchg cwtl cmp into (bad) mov sub and xchg rclb (bad) iret jo cli dec mov push inc repz addr16 mov jo cmpsl insl mov loope js sub add add sahf (bad) icebp inc xor cmc movsl sbb sbb xor das pop addr16 sbb outsl dec jmp dec (bad) out call test inc data16 sub cmp xor sub push data16 loopne mov mov jle cmp xlat cmp cli (bad) push add adc jns inc inc cltd cltd xor sbb jg stos push mov insb jb push xchg mov jae jns mov add or mov lock mov je lods pop jmp icebp jg out sbb add xchg pop psadbw dec testb ljmp fnstcw cmpsb adc jne lods mov inc pop jge jmp xchg cltd jae in or es (bad) mov or sub mov jmp sbb (bad) orl inc xorl add add mov mov leave jg add mov and sahf std push dec xor aas pop xchg mov ret fsub mov sub lret mov sub (bad) fcomps lea dec xchg lret leave jno in out in or mov cmp mov inc jo sub pop rcr stc sbb mov or cld addr16 pop dec cmp or cmp movsl call or mov test ja xor cmp sbb clc inc mov and repz dec mov insl xor (bad) and sbb jnp fsubr and cs (bad) xchg je inc stos or cmp shlb (bad) xor pcmpgtb popa or and repz das pushf addr16 mov add add int mov clc test mov cmp (bad) shrl jnp rorb fs repz in dec pop test sti jp pop loope (bad) jge sbb pop insl and pop dec jbe leave push push lcall sarl inc lods adc xor out ret out xlat cmc shrl test dec popa push loope or adc lods les xchg aaa stc in pop pop mov insb dec and cmp repz mov add add mov es (bad) cmp pop dec push lock pop cmp xchg imul mov push jecxz pop push bound aas add cs mov call imul jo fadds (bad) jmp or aad push pop int add int aaa out repz (bad) rolb add add jl jmp xor movb pop xor cmpl push fildll dec push aaa mov pop jbe xchg cmp dec or stc sbb movsl sub xor cli int3 test pop cmp ds (bad) mov movsb call add (bad) mov inc js pusha stos sub outsb pop push pusha cli leave push (bad) je push rolb test jl adc lcall xlat lea int faddl jno aaa arpl lret das (bad) cmc rorl lahf mov xchg push nop pop outsb fnstsw push sbb jmp jp sub xchg cmp insb add pop xchg mov jae dec cli imul mov dec lods mov or pop addb inc jecxz inc les mov add add cmp mov mov mov xor lods push push push mov gs pop push daa mov lods dec jmp fbstp pop ja into es pop je cmp into dec pop sbb (bad) xor xor lods or adc xor data16 cs sub int and xor jo lds and pop hlt xchg or pop dec cmp add push call or pop sub push or iret add jmp jnp mov fnstsw dec adc push jle xor mov notb or enterw daa (bad) cmc rcll mov subb mov insl add xor xchg lock lcall iret loope and mov (bad) ljmp mov push mov add mov push aaa lds sub fld hlt dec inc imul int movsb imul inc (bad) cmp js arpl dec rorl subl push (bad) loopne add mov xor scas add hlt mov xor test xchg jb push xchg pop stc (bad) fnsave sbb std mov inc pop cmp std inc push icebp xchg daa jecxz mov mov jmp dec jmp mov inc mov enter dec and mov scas scas mov loop rcrl (bad) dec pop out xorl das sub or outsl jb push (bad) sti sbb iret roll sarl xchg test sbb popa jne loop mov es orb outsb pxor sub insl pusha cs cmp roll add popa out aas and mov mov rol pop mov sbb mov mov cmpsl mov cs inc pop lahf mov mov sub cs daa xchg or push loop lcall or int pop inc inc leave repz push jbe sub mov adc add daa mov and bound lret sbb pop mov mov loope data16 comiss sbb pusha sub dec fimull negl xor adc cmp adc cmp (bad) out daa mov fdivrl and add loopne in test rclb sub mov mov or pop cmp or sti cmp rcrb dec mov push lcall pop enter mov loopne out add mov ds xchg pop push xchg mov insl ss (bad) jp nop mov lcall push fmuls out orb je popl aaa mov xchg ja mov out xchg ss test mov mov jmp rep roll (bad) cmp sbb shr (bad) (bad) in loope rcr jp sbb rcl and mov inc outsl clc mov and sarb jno inc mov xor movsl shr clc outsl jo loop mov xor ss sbb dec fcomip faddl divl daa mov mov clc int3 inc into (bad) xor cs cmpb in xor subb push xchg xchg insb int3 xor js test ljmp dec sub cltd xchg es lock dec aam or popf mov cld add add dec push sub mov rorl mov cwtl int3 imul mov mov mov js rclb cmpsb inc xchg cmp in ds fildl out mov xchg jbe pop xor shlb (bad) xor int dec (bad) push mov imul add jae pop insb je cmpsl mov push xchg cltd incl dec cmp sbb mov sbb and inc jo lret cmp shrb mov mov imul fwait jo (bad) push mov inc xor nop int xor xlat addl lock inc mov mov mov and (bad) sti sbb or sahf daa (bad) popf repz mov sub cmp jg jp add pop cli pusha loop dec push das sbb xor cwtl aas (bad) cmc xor roll add add bnd sbb xchg or je mov cld mov cmp outsb insb add pop xchg mov jae dec cli push notl push mov add adc add xchg sub mov jle in hlt jp stc and std xor jnp pop ss cmp xchg or roll (bad) fdivl and (bad) out mov iret out or xor sub ret mov or cwtl insb sbb mov arpl and fs scas mov inc xchg inc je dec add push aaa sub fnstsw and or lcall (bad) mov clc leave repz cmp xlat orb icebp sahf stc cmpsb popf inc fistl add sbb ret inc mov add pop rcrb clc push push jg sti lret inc fidivr or and sbb pop ffreep lods aas movsb mov lahf fwait fs adc js pop scas pop cmp cmp xor mov (bad) fisttp cmpsb ret adc mull lods mov sbb pop jg inc cmp or sbb sub or int3 inc jecxz jge in pop jns stc sub insl mov rorl frstor or imull xor pushl fcoml lret inc push dec sahf cltd mov dec inc add hlt stos mov imul ss sbb add xor mov in pop (bad) imul mov lcall jae fsub loope loopne pop jg nop dec sub inc lds rolb add push pushf add loope xchg sub mov insb inc dec mov inc aas add (bad) movl test pop stc and mov mov loopne outsl dec dec (bad) notb add and mov adc movsl mov bnd xor in inc out fwait aas dec out es dec mov pusha mov pop xor pop pop inc cs mov inc mov cs xchg je dec inc or pop jg sub xor cmp movsb (bad) test ss mov add add stc cmpsb push cmc cmp mov jnp push addr16 xor aaa jl stc fdivrs inc mov lock sub dec or xchg (bad) test ja (bad) repnz push jnp jle cmp add add add mov push lret test outsb xchg loop push outsb or push sarl clc and mov fwait das cltd shrl dec inc roll or insl pop (bad) into sbb mov (bad) out mov mov les add leave push sbb test sbb js cmpsl insl cmp daa pop mov adc fwait mov rcrb dec jnp mov aas lods jno out push dec cmp int mov xchg pop mov dec ret clc xchg cmp adc sbb push xor and sub inc outsl icebp inc fild mov aam out adc divl mov add test inc adc loop sub push or jns pop jmp fisubrl (bad) out pop dec xchg and sbb push dec mov sbb (bad) repnz add push pushf or movsb das fwait aaa push cmpsb xor jge mov xor mov jno lret jo pop out push and sbb bound fdivr popf lock mov sti (bad) repz fiaddl ficom ja int enter sbb push aad aad jnp (bad) jae arpl (bad) adc mov daa or les jp sbb mov outsl cmp leave movsl daa bnd sahf adc add lock test xor jl mov xor adc lods push sbb or push jmp cmp jne (bad) aas adc cwtl mov cs emms dec test pop or inc shlb loopne pop xchg and pop outsl arpl or pop sub inc xor xor lret jecxz shr add mov cmp add jg push outsb dec sub inc (bad) cmpsl mov (bad) out mov mov call leave not cmp jb or mov fisubr cs mov mov paddusw mov push adc fsubrs bound sbb aas cmpsb mov pop fildll hlt in jle mov cmc push push lret xchg ja test test or mov cmp into adc xchg jnp daa (bad) clc mov xchg jo push idiv push lds mov xor test inc gs sahf push mov jg stos daa incl mov xchg mov push shrb mov fildll gs mov pop and push cmpsb push adc mov xor jp cmp out dec in sub movsb addb adc sarb push in xchg lahf inc leave jle inc dec pop mov add ds jmp pop std outsb pop push in leave push ror sub std fcmovu std shlb arpl out addb pop xor or ja mov roll aas pop in jecxz cmp sbb mov push les bnd pop das jmp loopne xor push jne dec stc add (bad) lret push in ret adc lods mov sub movsb addb mov sbb arpl mov data16 jecxz jle add lahf je push les and push mov mov adc push jle mov sbb pop xchg fcompp pusha and add fldt pop ja cmp stos std clc dec popa ds rcrb jns xchg lret push jnp adc xchg lock mov out mov cmp xchg movsl jno lods inc aad jp jae in mov jae dec cli and xchg push sub push lcall in in xlat orl ds jmp in and lahf stc and jge sbb lock push sbb rcrl jno popf xor sbb or mov xor mov icebp or dec inc add aaa xchg sti outsl or call scas mov mov cmp inc sbb push ljmp dec out inc adcl (bad) sub shll xor add rcrb dec pushf add and bound outsb sub insb test es cli outsb pop xchg loopne fiadd jnp sub jmp idivl dec stc push dec out cwtl leave add outsl aaa or ljmp cmpsb sub clc push inc jl xchg lret int js fildll mov test cltd or inc jo les das and lret adc cmpb push test mov clc pop push mov mov mov pop adc lret int jecxz lock add ss and jno cli fildl pop ss sbb rcrl mov movsb lcall jg cmp dec pop aas xor rorl jmp xchg popa outsb enter gs mov clc push lds inc lahf xor push jmp xchg push and or inc or mov add and out lea (bad) ja ds lret ret jmp int adc xlat xor rorb in fimull gs mov jle in or stos xchg jno pushf sub aas mov and aaa sub or pop lcall ljmp mov (bad) or stos std cld dec popa jecxz lock cltd jecxz xor lret pop add and dec pusha (bad) popa insb in lds pop aam and inc gs loope popf (bad) pushf cmp push push mov mov test insb dec add enter dec dec (bad) add xor or jb insl ret (bad) call mov and push adc and cmp cmp into adc mov add mov jp push and cwtl aas sbb aam jle xor icebp cli std es and lret add test das mov inc mov push jp clc and inc dec push aaa push push dec ljmp adc out xchg sub mov adc jb (bad) fidiv jp gs leave stos dec in sbb repnz outsl mov sbb movsl loopne outsb hlt inc xchg hlt adc in pushf outsb pxor in (bad) cmc shll jmp cmp sbb and push xchg mov lcall or or sub fdivl xor cmp repz mov or or rorb dec push (bad) xchg adc cld std adc lcall cmp outsl in mov test ss gs push inc imul add mov sub sub sbb sub push jnp fdivrs es cld pop data16 repz mov cmc jl inc cmovg inc dec dec adc jp cmp push (bad) sahf xor out cltd loopne pop add jge (bad) faddp int3 xorps cmpsb adc and mov stos cs add repnz jmp into call into insl push iret inc dec fildll in sarb stc and jo int3 push in cmc and rolb jno add mov sbb inc int3 shrl add mov in jns pusha and pushf aas dec out xchg pushl je mov lock dec push cmp loope ss mov xor jo jmp adc mov xchg add add scas xor movsb sub dec inc adc cli xchg mov movsb adc jl adc mov cmp sti jp ja jl movb ds mov insl fst inc sahf std stos mov je (bad) loopne mov in fdiv adc jg sub fs repnz add dec xor dec sahf out (bad) mov xor jg call loop out dec fs dec cmp test fsubp test rcrl dec jmp mov cmp enter inc mov adc aad std jb mov mov pushf dec daa fisttp add stc cmpsb jle stc sbb clc leave sti sbb and inc fistpl jle xor es or or sub arpl mov pusha das dec mov mov xchg das int3 pop pcmpgtd add add mov xor cmp sbb int3 dec pop jae stos cltd test out cmp adc mov data16 (bad) pop ret pop cld sarb aas cmp lcall add inc into inc mov inc jecxz jge in mov or stc sbb clc fs aam jnp repz mov mov mov mov ss jae mov mov or test xchg mov ret cmp bnd sbb lock fisttpll xchg sbb jno scas adc aaa sub in mov pop int fiaddl lds sub add pushf sbb mov pop pop push inc in std popf clc xor mov dec and add andl add cmpsb pop sbb test ljmp mov out fwait roll iret fwait mov outsb add enter sarb xor test aas dec out pusha push mov sub cwtl hlt fwait loopne aad jmp popf movsb adc in dec pop dec mov pop fistpll aaa (bad) sbb mov xchg cwtl sbb push int3 mov push adc jl adc xchg cmp (bad) jp sbb mov add cld leave push ret lret sbb fcmovu dec fbld cmc pop sarb mov or fnstenv xor lahf cltd mov popf mov adc pop stos or inc fdivp fptan jl fistpll movsb ja mov insb push and cmp mov psllq cmpsb test (bad) jae in jo sub add adc add mov nop pusha (bad) jb mov mov jbe mov pusha xchg test add mov xor stos mov aaa sub or pop clc xor cmp jae aaa lahf cltd mov sub sahf add dec sahf out (bad) mov mov lahf lcall pop scas cmp fistpll mov dec test test cmp test pop addb in add lds das cld roll add shrl or into dec repz inc jecxz jp out pop inc pusha je push cmp push (bad) fmull pop mov xchg and lods xchg imul aaa and or pop stc xor or add aaa or cmpb in dec inc sbb adc mov add push inc mov fwait ja mov insb ret and xchg cmp xor std jge jecxz aas mov enter inc add xchg cwtl xor pop pop sub leave adc lahf jno or pop inc nop adc shrl add sub in pop (bad) int3 in dec addr16 (bad) pop and adc jmp sbb dec or cli test sarb xchg inc xor sbb dec cmp int movsb nop out pop xchg lock xor gs mov sbb adc mov lods popa mov push cltd mov ja add xchg cwtl sub xor and sub stos repz js add mov movb cli outsl (bad) xor ss adc cmp jp pop add add and mov and sbb imul jbe or popf mov adc sub mov inc fisub mov out fs xor push out lock call scas in lret lods (bad) adc xchg add and jg ds lret sar push jmp and mov mov jno out add mov scas dec cs sbb clc int push fiadd (bad) fmulp pushf cs mov mov mov ja sub stos mov sahf and std dec popa cmp repz (bad) sahf cmp sbb iret mov mov pcmpgtb hlt (bad) enter cltd outsl cld imul adc pop lret movsb rclb int mov jne dec std sahf (bad) jno jmp arpl xor loope (bad) push rcll add call lret into inc jecxz push pop sti jp pop shll add pop pop scas (bad) je pop jbe push lret jl idivl pop push mov mov cltd mov jge hlt dec popa outsb xor popa out cs aam cli lret icebp loop loop in xlat arpl xor mov pop clc js mov inc fsubs rcrl (bad) mov or or sub push jns sbb nop lret ja xlat add dec jo jbe mov je add (bad) mov pop jo pop std mov lock and fiaddl nop in scas jno dec mov jmp xchg inc push xchg sahf cltd mov incb mov movsl xchg rorb lea dec mov mov mov jp loop and add scas les sub in jge push repnz mull mov mov mov sub dec outsb lea inc cltd cltd xor sbb jnp xchg mov dec jge or xchg xor lods push pop std push and or dec mov jmp jae or pop cld mov jl and das shlb push xchg dec mulb dec fsubr fildll in cltd cmpl or inc or mov mov frstor cmp push fwait push push repnz movsb add pop push (bad) loope adc xor inc stos repz in sub add loope stc cmpsb jl jbe loope pop dec dec daa aaa stos ret in das inc std push dec jg jne cmpsl xchg lock out test out addb add add icebp cmp and jecxz lcall cmpsb sub clc push insb pop push cmc lret aad js fild fldenv add enter out in adc push mov aas popa xchg and lods cmp jg adc mov adc icebp and enter pop jge test test xor fild neg insb pop icebp out inc jg lret sbb imull pop push mov adc (bad) jae or pop (bad) jmp rcl cmc rcll outsl inc repz scas push or frstor ja out mov xchg mov jp sbb push out clc and insl mov jp push lret sbb nop pushf mov cmp xlat adcl add hlt jl test or jecxz cs pop inc push mov lret jno cmp adc loopne push pushf call adc inc mov inc adc daa inc or test in add popa cmpsb into mov add xchg cli lret mov cmp jne loope test (bad) cltd or sub mov or sub mov scas mov sbb mov aad pop adc jmp dec leave cld mov sbb jns nop jge push (bad) sti xchg js pop and sbb xchg and ljmp popf xor jecxz sub (bad) popf movsb add aad aaa xor sarl cmp outsb das shl cltd ds xor push movl cld fildll xor fcmovnu dec xchg mov pop adc out lods mov add add or push sbb jne in mov (bad) lcall and cld adc cmp push popf add dec (bad) lret (bad) repz dec jecxz stos jle inc adc or xchg mov add ss xchg cmpsl lock cmp jnp cmp ds and or data16 lds arpl enter cwtl aas sbb push jg int mov pusha mov add mov mov out mov fnstenv das and mov ljmp pop add cmp sahf lcall push lahf jmp push xor test (bad) xlat jbe add movl sbb and cmpsl loopne imul push int pop adc loop pop add or inc aad dec popa in mov rorb js xchg and pushl rep shr mulb push cmp enter jne cld aas arpl cwtl repnz nop adc into stc and cwtl rcrb adc fldt cmp in push xor popa or sbb mov pop push pop ret pop (bad) sti sbb les outsb fst dec fcomip or mov xchg stc and sub fwait jno pop cli and mov out pop rorl aad sbb fucompp stc bnd dec loop gs mov cli adc vshufpd mov sbb test mov addr16 popf ss cld xchg dec out jmp sub pop adcb jo cli pop bnd add scas xchg inc dec pop fwait jmp syscall push mov pop int3 jge popf mov movsl test sub (bad) ljmp xchg jbe xchg out cmp ffree sub inc dec jbe bnd fistp pop (bad) sbb cli xor mov sahf inc adc mov mov icebp mov pop pop mov je das out in mov jae dec ret add mov mov pop pop push inc mov in push add xchg mov rolb ss mov sti mov roll (bad) data16 rolb adc divl cmc inc inc ret inc test cmc scas jg or xor int3 (bad) pop outsb adc dec mov mov mov push mov inc lock mov movsl loop cmp cmpsb cmp push aaa int ja cmc mov wrmsr in push mov lcall fisttpl add xchg jbe iret jge sub add lret cwtl inc cmpsb push (bad) sti repz mov lret dec xchg push sbb loopne outsl dec sahf pop or add cmp aaa arpl and cs cmp xor rorb cwtl aas enter orb and js stos fs in test sub jmp sbb sahf inc pop pop inc data16 out stos loop aas pop sub or inc add fnstsw jge sbb jmp (bad) xor push xor imul loopne stc xlat or pop stos push addr16 sbb in mov jle fmuls out inc mov lret (bad) push movsb and or inc adc add stos push mov xlat scas aad push sbb mov sub jmp pop mov xor inc test push lret mov dec lods das adc and or aas (bad) sub (bad) test nop xchg inc or lods xorb call inc leave cltd cmp popf jbe sbb test ja outsl push (bad) jo pop das xchg fisttpl sub push push xor mov stc and incb ficomp icebp jge cs add dec popa in mov sbbl mov adc mov pop xor or xor int mov gs cs xor jecxz clc adc shlb in mov loope pop stos lret xor out imul xchg loope inc popl cmc pop adc mov mov outsb push adc je mov mov add (bad) jmp jg mov mov das mov insb cmp cmp or xor push loop repz jmp push and or (bad) sbb repz and add std jo movsl and mov push test (bad) leave aas shll xor cmp ljmp pop repz pop inc pop dec fmull (bad) or mov mov arpl rorb xchg lods aad sub out xlat adc in fist mov push mov sub test mov out jp cmp arpl sbb mov sub in cltd fisubr in inc sbb shrb xchg jb mov add push xor jecxz jno xorl mov arpl push loope push or mov xchg sti jg mov sbbl jnp mov xchg push mov cltd test imul das pop xchg sbb jnp and mov inc insl fyl2x neg pop xchg cmp stos jle fwait mov add xchg pop jne jo push daa je test test jo lahf (bad) or and dec (bad) xchg int sub les iret sub mov enter hlt pop imul xor test repnz xlat les stc icebp addr16 xchg mov dec xor enter push repnz add xchg fwait or addr16 and dec mov adc xchg mov les into addb iret or xor pop add loop mov imul gs bound mov pop popf mov or movsb in inc rcr jp jle decb push pop repnz cld inc mov sbb xor push leave repz xchg cmpsl sub leave adc out cmp shrl sbb pop imul es (bad) xor cmp (bad) icebp cmp and mov addr16 arpl push inc aad and lahf outsl pusha outsb pop dec lea ds loopne mov xor fildll fs fdivs mov push fnstsw mov mov or inc push fdivr jb cmp scas bsf insl adc mov push adc andl scas dec into dec mov mov lahf test xchg add sbb mov xor in add inc mov ja pop push daa push push or pop (bad) call pop movsl fwait or iret mov xchg mov sbb push xchg mov js fist mov outsl shrl lods movsb gs dec loope in xchg imul fnop inc iret dec rolb sar sar aam push mov pop cmp movsb push (bad) mov (bad) sub (bad) (bad) sarl and aam sbb aad sbb xchg and dec (bad) bound mov andb or add fwait aaa or xor ds lods (bad) out push rorl push (bad) pop mov add cltd int mov push cmp adc out pop incb inc pop std ret mov rcrb hlt ja cmpl xchg js push fstpl add add add js js les sub mov or in mov icebp inc nop adc sti shrl (bad) and xchg mov pop (bad) mov popf mov or pop outsl cmp into fwait mov sub decl call lcall lret stos ret fistpll lock mov clc data16 push inc dec lods aaa test fs popa ret jne lods arpl xor add loope cmp iret call mov fcomi shr add mov (bad) js or mov inc and push dec jmp loopne mov lcall sbb inc in jle inc or fs pop dec pop xchg aas inc mov fcmovu ss icebp bnd xlat out add dec mov test loope sub mov inc pop mov scas loop fdivr jb call fdivrs push lods xchg adc dec mov push or fidivrl push jns cmpsb clc dec dec push inc (bad) loop insb push mov cld sbb dec movsl pop pop dec mov movsl loopne hlt inc outsb jo jg in test jbe xor ds dec popa outsb xor ss aas dec lds (bad) pop mov sub int3 dec mov pop test dec out lds out inc movsb leave call das addr16 out sahf imul jbe enter sbb movsb test nop cmp xchg popf ja xor imul xchg dec cmp dec int3 add stos stos jb mov xor jnp add adc (bad) jmp (bad) xor ss mov je gs faddl mov adc jle out cmp pop fildl leave xchg mov pop sbb sub jg scas mov mov fs and xor cld imul dec jmp jmp pop pop in lods mov jmp lock or push xor std mov daa mov jnp xchg jno dec mov loopne cmp or fwait aaa call (bad) (bad) mov xchg sub mov xlat cmp ret lods shll sbb roll push imul popa lods imul xchg adc lock mov loopne or jge push add mov stc jo pop aas add add aaa cmp xor test and leave jg add (bad) mov sbb std push lret pop sub mov insb test jne mov dec fist arpl pause or ret mov stos sbb (bad) mov ret add inc movsb lods xor js jmp mov pop clc push mull loope aas leave pop rolb dec dec clc and lahf jg xlat xchg xorb lcall xchg lds inc dec mov aas test lret outsl ds fistl faddp lock dec (bad) fmulp or popf mov sub inc add andb aaa or and dec dec ret add stos push inc hlt xchg mov fidivrl xor add push pop int3 fs test or gs cs mov sbb test pop cs pop jg add aad call jmp and (bad) add cld mov xor add (bad) sbb sti dec push push ss pop dec sub lds mov mov out or ljmp mov in or dec test rcrl aaa sbb aam jno int xor xchg repnz loopne in in mov test push cmp adc jne pop stc (bad) fidivrl xchg and jo scas enter push lods lods pop dec in sbb jmp push dec mov jg in aaa movl xchg jnp es clc pop stos sbb scas mov xor mov cmp fadds addl add lcall or test cmp mov dec shrl js aaa or fs mov and cmp mov in test sbb jne in mov cmp loopne pop jg add jmp cwtl jo pop loopne lea enter mov inc push add cmpsb push (bad) (bad) and mov pop stos shrl sbb arpl jne xlat mov mov adc call jge or jbe xor shl jg mov clc pop adc push jle bnd lds femms or test pop popf mov aas arpl rcr and dec or int3 popf mov (bad) clc jl mov outsl clc adcl mov fstl add add jns jp mov cmpsb push dec mov ss sbb sbb inc pop pop xor std ficoml cmp call mov stos pusha std sub data16 ja dec (bad) lods add sub lods pop aas dec cmp ficom add fistpll (bad) jmp cmp jne add dec sbb cmp lahf or add aad dec inc imul add pusha hlt push inc mov and imul push mov xchg mov push pop ja mov pop xor in int mov cmp fwait pop (bad) jmp xchg jbe test shl ret xor inc push dec (bad) jae repnz es sub in test cltd or sub xor add (bad) add pusha xchg in scas enter pop (bad) js inc imul add pusha enter inc inc leave mov sub xchg shlb add push (bad) cmp loopne mov jbe push xor xor cmp cmp or iret lret out push sub jmp mov mov shll mov or push cmpsl cmpsl jmp cmp inc sbb pop in (bad) mov lret cmp (bad) cwtl lock sub xor scas enter pusha je mov pop cmp (bad) lret xor out aad lds into inc sub inc jecxz dec or push dec dec js sbb pop pusha inc sub add jae loop jns push and xlat add lock mov sarb cld add or fstp gs push push (bad) ficompl xor aas jecxz xchg mov int3 jmp cmp or adc xchg xor insb dec push aaa imul in or mov cwtl add movsb call sbb fistpll psubsb xchg sti cmpsb push nop lods xchg js sbb ss adc pop cltd cwtl inc imul popf into out (bad) xor stos fmuls mov adc lret jecxz mov cmc (bad) push mov mov push xchg lret xor push out daa ss sbb sbb mov cmp mov in test test sbb pop clc inc inc push hlt xchg mov mov sub nop call movsb add test adc add fldenv stc cmpsb popf add add add or insl and (bad) lret sbb aas insb test popf in lock mov out jno mov mov or dec test arpl xor test imul bnd aaa fstl fs pop movsl bound push ds inc fcompl movsl lds xchg daa pushf clc and enter jp push and adc nop pushf jne daa push xlat mov inc inc mov mov mov (bad) sti sbb sbb add stos adc pop rcr arpl and mov popa adcb or jg sahf (bad) int in pop ja or ret add mov adc adc inc jge sbb test xchg mov insb dec (bad) jno enter sub jne out pop inc push sbb iret jnp addb add xorl cmp xchg dec add ss sub pop outsl xchg leave ss jo xlat pop mov test sbb mov dec push xchg fildl jae daa pop or lret sbb mov mov jg sub out inc or and add and lea nop aas dec loopne mov arpl mov mov addr16 test jge mov jne jb fs (bad) stos bnd pusha jmp push aaa mov mov xlat inc in mov pusha mov mov sti jp pop std lock gs out push leave sub scas xor mov push jnp inc pop arpl out or xchg or jbe sub lods sbb movb push sbb cmp jg popa mov jno loop aaa int3 cmc lds fcmovnbe (bad) call loope lods or loop push mov mov and add jnp push aad push fisttpl jl leave push inc mov jle in rcrb and jge pop sahf lock mov lret dec adc push jle xor and sub jmp into (bad) or daa jnp imul decl test cwtl aas mov dec imulb mov test lock jl mov mov and scas mov outsl fs (bad) jno adc fwait jge nop pushf add lds and mov addl dec push inc (bad) mov daa push mov add dec das inc pop or and lock cld and mov dec iret fwait mov inc insl mov cmc and mov xor add cld cmpsl rcll ret cmc fnstenv out cmp pop mov (bad) mov pop loopne cmp repz js or mov and xor jle push cmc xor sar test outsl hlt add movb test popa push push jge test test dec xor push push jmp aam xor sbb fidiv pusha movsl adc mov push popf push aaa arpl pop jbe or mov fnsave enter sbb mov gs sub fs pop iret into xor fbstp and push fidivrl jno cmp leave arpl cmpsl pop jg sbb add pop icebp in outsb stc or jmp xchg sub lds mov movsb jnp ljmp pop daa mov repz insb mov push mov sub sub sbb lahf mov push push daa idivb jmp fwait push ljmp aaa mov dec stos sbb lret mov ret add and lret mov jmp dec lret cmp mov inc jo les repz xlat test add adc push (bad) adc xor dec lahf mov lock mov addr16 xor (bad) (bad) jp gs sbb jle in or xchg je or push dec mov sbb popf cmc out or ljmp mov xchg or dec jbe and negb insl sbb xor add mov lock dec gs add int imul test (bad) jmp and xchg loope and or pop leave cmp dec fbstp gs mov xchg mov inc dec aaa cmp pop inc pop and push dec pop fwait jmp push pusha std push xlat lret sbb push idiv and mov scas sub setnp fidiv call mov ret add dec call jecxz cmp xchg jl repnz fildll xor dec rolb add popfw pusha push sbb aam jle dec out cmp xchg stc shrb or adc jnp mov push call adc sub xchg lods sub (bad) leave (bad) ficompl leave push ret notl ljmp dec test mull xor mov orl cmp fadds cmpb mov lret jo adc mov fstpt insb dec mov lods mov inc fidivl mov pop aad and enter xchg xchg and roll sub xchg imul adc xchg stos mov addl dec mov fldt sub jnp dec adc push jle shll mov mov xchg mov (bad) call subl cmp dec jbe adc push ja add stos xchg pop in push cmp mov jns jne (bad) cmp pop insb sub pop scas mov add sub scas dec decb aam dec sub repz add add cli ror dec cwtl mov sub rorb dec push inc (bad) popa int3 arpl pop ss lret xchg fcomps lcall jnp scas lcall jae ret adc mov cs call mov jp cmp xor xorb (bad) dec mov inc mov and aam cs mov insl jmp in lods (bad) enter xor lcall lea sub cltd xor lahf jne aam inc jmp sarb jno cli fadds adc xchg fmuls adc xchg mov add and aaa xor sahf pop sub cs push jb xchg xchg mov mov jg xchg add mov dec lret cmp test add out (bad) aas lods imul mov dec lods adc jae scas mov scas mov add add jl adc mov or mov add xchg xchg jnp es clc mov mov ja enter mov scas ret icebp arpl push dec pop aas call fidivrl push pop ljmp sbb inc xor mov enter aaa push mov xor pop and cmp mov in test pop mov pushf rol mov test jle adc jmp mov and cld leave push fnstsw scas dec cmp je ss sti sbb xchg add ss adc or inc fistpl jle xor (bad) loope add add xor sub das (bad) test loop mov int3 cmpl mov in decl xor aaa int3 cmp imul cmc pop xchg xor pop (bad) in inc xchg inc pusha lahf sbb daa popf cmp xlat enter adc (bad) imul (bad) lods loope int3 add xor dec dec out sti sbb in adc adc jae xlat and fdivrl popf jge adc cmp test int mov nop sub cmp popf mov adc and aas pop mov add dec es repnz aas imul imul cmp das popf add das jl inc mov popfw push push sub adc mov scas mov (bad) int inc imul (bad) jb call inc inc pop inc jecxz inc test mov dec xchg out rcrl sbb data16 iret cs ss test scas jbe in jecxz,pn pop and fmuls pushf jmp pop adc pop hlt push push cs xchg dec popa outsb (bad) mov pop mov push adc je,pn jbe out push sbb xor mov lret imul (bad) aaa clc and or fwait scas (bad) mov rcr (bad) mov jmp movsb out dec lds mov dec sarl test pop jl jmp std and add aam sbb and aaa xor shufps push repz sbb jg sahf js xchg ret add stos or cmpsb add jnp mov xchg jbe mov cmp rolb jae inc stos repz xor lahf (bad) lea movsb fnstenv popf enter int3 in mov pop cmp movsb jmp rorl mov repz dec pop nop xor mov cmp ds lea mov inc pop notl jmp loopne mov push or jle mov push movsl es cmp inc sbb mov cmpsl jo push xchg pushf add cmp lret cmp mov cmp mov test notl jae out aaa lds aaa sti imul pushf addr16 mov in js xor mov das int jecxz out pop add pop inc stos push addr16 fwait push (bad) std test mov out cmp mov int stc jecxz pop or arpl loop not cmp test sarb jp fistpll xchg or sbb sbb ret or adc cltd pusha jne (bad) pusha addl xor fidivrl mov ds mov push test lods push enter roll cmc sarl out scas iret adc movsl (bad) sti fwait sarl push inc inc lret push outsb jae and dec test shlb out daa mov mov mov jmp fwait mov test sarl inc adc inc nop insl outsb aad mov mov xchg and (bad) icebp pop into dec lret cmpsb xor fdivrp int3 btr cmpsb adc and lock mov (bad) xor jmp cltd pop xlat orl jae xor push add add add dec cmpsb push dec mov pop outsl pop mov push mov xor adc push jle mov mov jmp fidivr sub aaa loopne pop cli mov add hlt sbb aas (bad) cmc mov mov or pcmpgtb jno,pt push and cmp mov mov out rclb clc and aaa lds dec inc (bad) stc mov add mov pop ret cmp inc push mov pop rol pop mov (bad) mov xlat test inc mov imul add mov repnz dec adc js add xor arpl lcall mov or insb je cmpsl cwtl cmp cltd fs out lcall push into dec lret aas push and data16 mov fmulp pop inc roll add push testl in xor shlb xor sbb scas jno pushf add push mov dec xchg adc (bad) out (bad) jmp lock pop mov xchg ret aaa call jg and push dec cmp mov loop lret cli lods sub lcall xor mov or out (bad) in mov xor xchg aas push xchg lcall push das mov lcall aam and xchg fsubp adc mov cmp mov ja dec fstpl adc aad dec inc imul add repnz inc lds dec or jecxz mov adc lret add or and mov inc sahf or bound inc and adc cwtl lods comiss adc movsb lahf (bad) cmp add add add out mov hlt sbb xchg inc outsl test fs pop mov push lret arpl mov rcr stc sbb sbb dec inc push jg insl or mov jmp shlb cmp push (bad) jb jnp inc lods adc ret add push (bad) mov sub sub lret nop jae inc mov loopne imul jg jnp mov fnsaves incb mov cmp mov int3 inc xlat sub cwtl inc imul fwait loopne loop icebp dec push data16 lret dec sbb flds loope mov movsb sbbb adc lahf sbb push popf mov outsl sbb xor repnz push lods leave xchg sbbb add call cld jns in xor jle pop xor jnp sub mov sub mov cltd mov push cld add movsl jp cmp arpl iret lahf cmp lock xchg test inc into dec lret cmp sub xchg out pop bound in lret pop (bad) xchg pop stos jns dec dec push cltd push push mov xchg pushf sbb mov dec loop or xor sti jp pop aad sbb scas in push outsb ret lods ss adc and mov sbb fiadd mov or cmpb in dec inc lret aas (bad) cmc mov mov jns mov xchg lock popa pop add mov adc dec mov in lret pop (bad) xchg pop stos jns dec dec push add cltd push push mov mov imul adc iret call pop js pusha test inc nop adc xchg ds pop les push xor mov jne out scas mov test fs inc popf xor mov mov xchg mov xchg push xchg pop cmovp (bad) xchg insb das mov ljmp loopne loope cmp sbb mov cmp mov in test test jae mov aas cmp aaa lds cmp lret (bad) mov movsb call sbb (bad) dec pop test cli ret add push ss sbb (bad) ss cmp inc pop pop (bad) dec adc out ljmp movsw and ja mov sbb add xchg jecxz das aas dec fiaddl inc fiadd into int lret mov out setnp int3 out xor dec inc sbb jne dec icebp insl adc jle sbb insb clc and mov pop outsl adc fnstsw ficoml mov jge sub pop dec xor inc out cmpsl popa pop inc ljmp xchg inc xor lahf add and sbb popf mov mov or mov iret fwait fs xlat sti jnp es add mov sbbb add leave lahf mov jnp out mov (bad) loope int3 dec lret cmp inc dec cmpsl jne dec cmp mov mov pusha fidivrl insl fcoml ja in xchg or xor pushf adc xchg sbb clc (bad) arpl ret dec or mov pop inc cmp sti sbb xorb and add add cmp pop xor sbb and inc xchg and jle inc jge dec adc out in enter jecxz mov adc or pop adc fs dec inc dec fsubl mov faddp rcrb (bad) mov imull out push aas sbb and jns jg fstps stc test dec idivb mov pop mov (bad) pusha push pop jl lods lock jbe fistl jae sti and dec scas mov cmp ret lock imul outsl enter imul addl lret xchg mov int3 lea xchg pop insb in movb pop xchg lret xor js sbb repz mov adc test (bad) sub hlt je test xchg mov mov ds (bad) add sbb mov arpl push psllq pop mov sub dec sarl std testb popf lds push pop add ss push aam nop and push std xchg daa fldcw lods dec sahf movsb adc shll fldl mov jecxz and stos je add insb (bad) and movsl mov je pop pop dec out dec lret cmp sbb iret loope inc (bad) mov or cltd mov or orl sbb xor cmp mov out pushf mov mov sub xchg lods mov (bad) pusha loopne xchg cmpsb fwait cmpl push (bad) cld ja pop mov lcall jne test lock faddl mov (bad) call or ret push je imul mov jge push inc inc ja mov add lcall rorl (bad) in jo xor inc mov sub jo mov jnp and lock scas mov xchg (bad) push outsl testb bound jge mov mov sbb sub pop jmp xchg insl and jb rclb jmp in dec daa pop cmp int js adc sbb and sahf add les repnz (bad) cmc rolb mov push lret sub xchg lock test sub mov pop cmpsb mov aad (bad) mov mov and push jg fstps mov adc nop int3 (bad) pop das mov enter mov dec jns leave int adc jb cmc roll pop mov (bad) mov push ret cmc xor ljmp sbb add nop cmpsl sub mov data16 mov pop push lret dec add fidivrl xchg popf popa pushf dec cld js push aas pop ss sbb push clc adc nop pop push out repz mov mov mov popf into sarb sbb push lock lock mov (bad) dec in mov inc inc cmpsb sub dec out insb mov mov add or stos sbb inc dec icebp push push ljmp mov push push inc ret (bad) xor comiss sbb pop imul pushf pop inc dec popa outsb inc fwait addb cld push cmp sarb xor cs pop pop jmp insb push and (bad) loop xchg btc lahf add or cltd loope jno xor mov mov mov adc and movsb add mov inc inc jg rcll adc push js adc inc loop (bad) push pop or and pop (bad) jnp jns jg popf call leave add fiaddl dec fldl dec daa adc pop lret fcompl (bad) jbe je mov outsl lcall (bad) in incw xchg in mov adc fild lea stc pop dec cmp xor adcl jl adc pcmpeqd jecxz sub xor xchg mov out mov mov adc aam in adc xor xor imul xorb pop pop addr16 cli js jl lds push (bad) mov mov or aad mov outsl lcall jno cmpsb add (bad) fsubrp pop fstps jne pop inc push push dec push mov xor leave cmp pop addb pop and adc adc or push (bad) les inc cmpsb in hlt pusha mov loop lds xor stos sbb inc ret scas xchg or jne add lock and lock iret adc or es jecxz add and pop mov (bad) jecxz cmp nop inc jg gs js fistpll mov aas mov out mov adc add ret in inc call jne pushf ja dec jmp gs jg fstps adc jmp or idiv loope les test dec in pop fildl mov and sub sbb pop mov loopne jl and jns add add add fstpt cltd mov xchg push sub std lods add fiaddl mov loope in mov (bad) aas xor and mov clc and test lcall push push sub push jmp dec mov add push fnstcw mov lock push xlat in ja pop jmp mov sqrtps insb sbb fcoml jl jne pop push daa (bad) mov mov pop hlt jmp decb outsb push dec out mov lret das (bad) fisttp jecxz repz loopne xor stos leave and inc out sahf add stos out js lea fs and pop pop jmp movsb test inc sbbb add add enter jle jnp push inc mov out and out sar adc imul lds mov nop pushf cltd insl mov push inc xlat mov test cmp push (bad) stos std jo icebp mov xchg jbe push in add push adc mov pop sub push add scas jae rclb dec push dec (bad) imul and mov pop xor in pop movl scas inc adc push add cmc xor mov popf push movsb setno xchg xchg sbb push xor shrb (bad) loope es out inc (bad) out xor xchg jmp ljmp adc cmp xor cmp lds inc cli jno shr (bad) aas mov shrb das push jl test pop push sarl notb frstor (bad) aam adc cld movsl sbb adc pop arpl test popa jmp add mov (bad) js or ss xchg test push dec mov test fadds add fcomps or inc (bad) jecxz loop push sbb push scas sub (bad) int leave jno in jmp (bad) fsub sbb and (bad) repz rolb jne test mov clc cwtl rclb xlat adc fcomi dec xor jmp hlt dec lea inc inc jo mov mov inc adc jge out rclb sbb dec pop ss ror arpl std aam mov loopne cmpsl xchg xorl fcoml sahf add add push in sub nop andb faddp es and nop or xchg lock mov in test jle cmp mov in and outsl dec lods dec jge jg das cld push hlt mov sarl pop lds dec pop push (bad) jbe inc jecxz jae aaa inc out sbb aad leave sub jle in aaa aaa stos xchg jno or fs mov sub add leave or aam jmp cltd (bad) cmc rcll test aad mov (bad) xor add out push loope int lret das dec fstpl dec adc mov das and in dec xor aaa lds jg push xchg and cmp fwait nop pop test pop sub lds inc push jbe inc jecxz inc test fistl insb dec add call sahf xchg fldt mov xor std push (bad) cmp test pop pop adc pop mov cltd mov ret les sahf xchg mov clc into rol lods push xor lock pop push mov jmp push out mov sub out dec sbb inc mov fist ja mov enter adc fnsave xlat repnz scas pushf add mov hlt sbb rclb imul lea mov outsl in aam xchg dec pushf (bad) mov sbb test iret sbbl mov scas sbb mov inc jmp enter jg sbb pop xor xchg mov pop cmp cs mov cmp sub add and mov xor int3 cmp jle fucom inc out movl (bad) dec mov imul mov test cmpsb fwait inc xchg sbb ds push pusha inc sbb inc vzeroall cmc ljmp jge out ljmp fisttp lds cmpsb dec rclb outsb inc dec xchg in add xchg pushf aad js fsubrl ds dec test popa popf in (bad) mov test aam aad notl test inc sbbb and add jne ret ljmp mov sarl inc lods sbb test add dec sar stc and lret sbb imul es dec jmp lret xor mov movsl or dec push repz popw ret add add mov mov (bad) and repnz loopne ja jmp jne (bad) aas mov or stc sbb jg xor rcrb dec in sar mov test mov (bad) lds xchg js out imul cmpsb push inc aas adc sub add ss sbb jbe cwtl (bad) dec dec int3 adc (bad) aad push pop int add jo xor fisttpl xor loopne out aas dec mov sbb bnd adc call mov adc daa (bad) xchg adc mov mov mov in xchg adc adc dec (bad) ret sbb mov mov in leave in stc cmpsb inc add fcmovnb inc (bad) fcoms or dec xlat and lcall lock inc mov fsubr cmpsl fwait lock ja or xchg fwait dec add (bad) test xchg cwtl pop dec ja mov lret repnz (bad) fbstp lar shrb add jmp sbb mov lods mov subb es push mov pop outsb lds fimull jl roll (bad) xor adc ljmp cmp ds lea cld mov add inc mov mov cmp rcrl fs push add cs jmp shll das enter insl sbb aaa xchg lret xchg outsb js mov dec mov fs xchg xchg mov sbb push insl mov jmp repz cmp enter stc lahf sarb add shll call sbb call adc dec scas inc or ljmp fmull pop ss sbb jbe sbb and pop jecxz cmp pusha aam orl pusha and (bad) pop ja pop sbb popa outsb adc (bad) mov pop ficoml es mov sbb jp push adc pop mov fs cmp xchg xchg dec mov (bad) pop pusha rcrl in mov inc ljmp (bad) mov xchg ja jne js mov (bad) xchg stos clc push repz fcoms cmp pop jmp mov jae push aam (bad) push mov sub inc or add cmp fwait ss (bad) icebp sarl pop ljmp dec lahf mov mov add fimull mov lods mov out mov inc pop push mov adc rcr notl int3 pop ja xor int3 imul out (bad) stc push lds subb jecxz jge sbb mov dec outsl pop jmp out sub xchg and mov jb stos gs btl push fs ljmp cmp cmpsb out dec jbe sbb adc or push int3 push xchg sti fcomp pop add pop pop mov cmp insl add or stc sbb lods call hlt movsl movsb adcb xchg fs push jmp dec shl add xchg jbe into sbb jb (bad) fiaddl cwtl cmpsb fistl int3 inc sub fisubrl jge sub sbb add and mov sbb fmuls out out insb push lea xor mov ret add sub sub jp or xchg lret jo rclb jbe mov dec test outsl cld stos imul mov shrb imul outsl scas mov int adc sub pop pop push loopne lods push adc xlat add lret mov sbb sub (bad) (bad) ja mov inc repnz addr16 jbe push dec fisubr lock mov inc mov inc push pop pushf cltd mov aas push cmc mov inc cmpsb (bad) mov mov dec inc ja mov das jmp cmp fdiv cmp out gs or sbb push insl dec adc (bad) adc fcmovnu mov movl add push rclb xchg cmc add cmp jg cmp and test cltd movsl xchg loopne push push push sti fs mov lods fimull repz cmp in pop pop fwait push sub xor xor decl and aas dec cmp mov test cmp inc xchg mov sub pop cmp push rol cmc int3 fistpll in movsb fcmovnbe (bad) cltd clc and insb sbb mov mov cmp jmp push mov cwtl jle adc push push insl popa pop stc cmpsb xchg add jb push xchg addr16 jns mov in push and lock jb adc sub xchg arpl and mov cld add movsl pop sbb out aas adc jl je icebp ljmp dec mov stos cltd or scas mov inc mov cs mov dec dec inc and pop jg popf cmp mov test pop pop sub jp (bad) dec shrl mov dec mov push inc cmc mov xor adc arpl aaa jl fcmovnu outsb out inc mov mov mov ja or fmuls inc rorb adc pop sbb outsl scas inc jg xchg fisttp xor fsubs cltd jl push test in inc in jp pop or pop scas jb jne sbb mov cld and sarl test std inc adc call outsl movsb (bad) lds (bad) bound cltd in sarl (bad) in ja xor (bad) xchg push mov mov fst cltd repz rorb pop cmp aaa jl mov fcomps inc mov lock xor or xchg (bad) test ja out lret mov (bad) xchg fistpll pusha adc (bad) fs jp cmp aas int movsb pop mov sbbb mulb dec mov enter hlt mov inc dec aaa and fdivrl mov (bad) sti jb mov mov ret lret sbb fmul mov loopne imul orb arpl (bad) jae or inc (bad) jecxz xor mov repnz mov out outsb dec out aaa jecxz mov sti ljmp das in sub mov push insl js ja in or sbb push mov pop mov xor sahf add cmpsb xchg xor lock ss lods push (bad) stos lock xchg fisttpl and jae push dec shlb scas sub les mov das (bad) inc scas test iret fisttp xor inc fwait addb cld adc setae inc xlat sub decb mov dec mov stos cltd or nop aas nop dec loop mov pop pop mov aas gs sub int mov lea adc cwtl sbb pusha aad mov ja xchg push sub mov mov cmpsl push (bad) jo sbb jmp dec sub std nop idivl repnz mov inc je adc mov popa outsb inc rolb jb pusha mov sub pop mov movsb sbb add add dec stc in fistpl (bad) jo inc push push jb sub mov (bad) jmp add cmp mov imul mov decl inc dec jb mov jp xchg stc lods push mov insl and shlb inc pop sbb or movsl add in cs stos pushf (bad) sti comiss pop jb adc adc jmp popa test icebp aas sub xor add dec push out push in pop jmp int3 in add lcall insb push dec jge lret lea push out mov scas mov movsl lahf or jno sahf adc inc or lea sbb cmp dec mov mov stos and insl and push fisubr and mov call sbb jbe out cmp comiss pop add mov cltd mov ret les sahf xchg mov clc into enter movsl xor xor xchg lock inc mov sub rcrl xor inc mov aas mov repz push repnz inc jg notb fxam push sarl arpl das popf fisttp push inc dec leave repz add cmp adc add daa sbb (bad) xor lods push mov lods sbb push xchg or ja push into fwait aaa arpl aad jo inc ret mov rcll mov lahf lcall aaa xor ja pop mov adc sub sbb cmp push pop int push cld ficomp enter inc fbld (bad) pop cmp mov hlt mov inc mov sbb add loopne jb push xchg xchg sbb les outsb scas lods dec sbb push sbb or loop push mov int fdivrl data16 xor pop imulb stos or cmp sbb cmp pop repnz mov out in dec mov pushl jecxz (bad) hlt mov jbe inc pop cmpsl jb cmp mov sahf insl mov out stos scas sub lahf sbb mov push fcomip mov mov inc jmp fld sub int pop push mov pop in pop aas stos xchg je clc fistl int sub or pop clc mov (bad) jae movsl or arpl sbb jg dec jle int3 movsl (bad) (bad) cmp mov cmp cli sbbl pop movsb dec lret out mov ds adc out in add pop jb pop fistpll (bad) add push sub mov (bad) sbb xlat mov leave inc jecxz jnp push adc xchg cmpsb jl jbe or push fisubr (bad) mov bound addr16 add aas int mov iret out xor nop sub cmp popf mov adc out sbb mov ficomp movsl nop adc push out aas cmp mov mov mov push movsb jbe stos lods mov mov pop dec (bad) cmp mov fnstcw push outsl arpl sub mov mov add xor sti dec ret mov ss int sub jno ficompl popa movsl inc cmp dec or or lahf jae (bad) pop sbb mov add mov jecxz push (bad) mov test es xchg pop mov stos mov loope mov add mov in inc pop (bad) sbb jne dec repz lock int3 add pop mov cwtl popa (bad) jb sbbb iret cmp lods movsl xchg movsb push (bad) enter xchg fildl push mov xor js mov fistl mov shufps pop adc jg mov enter mov cmc jle xchg mov xchg inc sub std sub sbb mov or stc fwait loopne ja jmp je (bad) aas test fisubl rcr adc mov and xchg or aas call fsts imul cld mov sbb mov pop (bad) sti fwait add xchg aam movsl aaa stos xchg cmpsl jmp lahf addr16 dec mov out je mov mov or fwait aaa loopne push and les push dec mov push push std lret flds sbb fild mov push cltd or lcall mov pop inc roll das (bad) jae scas ret jle push push (bad) in xor dec lahf push jmp int3 mov mov xchg cltd sarb aam ja xor (bad) test nop imul popa inc popa rcl xor js mov fcmovne ljmp sahf and xor (bad) enter cmpsl scas into push inc ret lock inc rcrb mov test push lret dec and bound push lock (bad) mov lret cmp or sbb mov add inc lret mov jg sbb or xor (bad) cmp inc cltd or xor cmpsl pop pop test sti hlt jmp mov out add aam cwtl cmp andl sub loopne hlt jmp lahf jns scas cmp fs lret jnp cmc rcll outsb inc nop pop (bad) les jg mov mov dec push sbb sub sbb (bad) mov push (bad) xor sbb rcr jp clc jg mov and seta mov xchg adc jmp movsb call push or cmpsl popa pop inc xor cld lock (bad) repz fisubrl jge das lret sbb arpl das pop and adc stos mov enter ja xorl stos dec inc lock xchg mov int cmp std lret mov xchg pop xor add lret xchg int mov push aaa dec adc pop sub push ljmp jecxz mov lds aas xor mov jmp add inc into pop mov inc jecxz jle in jo pusha push int3 push lods out xchg or and push popa inc or lret cwtl cmp pusha aas pop dec jg ja test add xchg iret fwait inc pop cmp jbe lret sahf sarb jle sarb aas (bad) cmp arpl fstpl je fucomip lret push insb dec sub js in mov ret jae xor fninit pop dec stos cmp in xchg test dec loop lgs into call mov cltd jne movb arpl lods dec ret rolb pop aaa stos xchg and add ret xchg std push lret jl ret in and pop mov jmp lcall or inc (bad) notl ds test and (bad) jne repnz loopne mov sub lret jg mov int3 pop add cmpsb adc fbld inc dec push aaa imul mov pop cmp lods mov push mov mov cltd jne add repz jbe stc outsb sbb push ss sti frstor dec jmp and mov fs mov aaa xor and decl jecxz in out aas (bad) cmc rcr or je cwtl js and mov sub out (bad) out xchg add rcr jp cli jno push dec gs repnz jg fstl cmp push pop push (bad) rol pop (bad) leave leave int repnz push aad fimull push or push ss ret jne push jecxz test jl push lcall jle mov push dec shr lahf dec int mov ja mov lret (bad) (bad) inc inc jle sarb clc int3 dec xor je lods shl push aas xchg (bad) out divl mov cltd add (bad) mov inc aad mov pop inc mov cmpb and aas pop sub sbb sub sub jns cmp pusha scas (bad) movsl mov adc enter rcll rolb mov push insl cli fild repz mov sub jae cmpsb and or or fs cmpsb push repz or ret mov xor insb iret xor cmc faddl std enter push insb out push mov repz cltd (bad) add cmc outsl fidivr roll les jg xor nop pop mov sub out jp xor ret fstpt into mov dec lahf das sbb adc in fwait mov call outsl xchg clc clc dec lods pop enter call add test and dec push test cmp in inc push in fcomp fidivrl mov or and out mov (bad) dec pushw lcall test push sbb aad add fistpll push mov cwtl lret fprem aam dec test test idiv hlt mov test shrb adc jo xchg nop mov sbb loopne sub (bad) lahf mov add imul push inc mov add push pop jae or das inc popa fs dec dec xor jp cmp push (bad) rclb mov loop fs xor and push mov repz add aas gs fnsave sbb push idivl adc (bad) sbb lds cs (bad) mov mov sub add clc cmp pop lods add rolb popa mov gs mov sub call fmuls out push inc adc sbb push scas cmpsl push in rolb push push sbb push push xchg bound loope test lahf jno (bad) mov inc mov mov push dec rcr sub mov jg ficoml mov loope pushf add out gs push xchg adc xchg loopne pop rol ja sub xabort xchg xchg fiaddl scas outsb xor adc idivl push clc push inc imul int flds popf fs cmpsb push repz cs mov xchg add dec addr16 subl jns (bad) pop jo hlt (bad) fisubr sti adc push addr16 mov cmpsb in inc pop (bad) ss stos test inc ds jg push test mov shrl adc lea mov iret leave repz xor add ss lods push (bad) xchg sbb jp lea ss jns cmpsl lret sbb dec mov popf shlb stos sbb imul data16 xor pop (bad) aas mov dec ljmp decl xor xchg lret and push sub and test test dec xchg pop ds cmp (bad) sbb mov (bad) xor inc add xchg inc mov bound outsb fisttp idivl mov push push out iret adc dec out ret xor loop dec adc push dec xor lcall add or fwait aaa out sub ret add (bad) pusha call sbb jnp jno cwtl dec lret or pop xor or xor (bad) arpl shl mov in test test sbb xor (bad) clc push push mov outsl clc subl pop cmpl iret fstl jp or push dec mov xchg sahf pop divb int3 test pop test mov jne (bad) pop push mov out addb add int fs inc fwait aaa call add mov mov xchg adc pop movhlps mov mov xchg xchg mov dec jo (bad) insb dec sub lock mov in adc stc lods fdiv aaa jae scas mov paddd sub fsts (bad) aad adc cmp sbb jl push insl fldenv pop xchg add inc pop xchg and xchg jae,pn xor dec mov outsl sub enter lcall push cltd mov xchg mov nop popa out mov fs xchg rcrb jb add mov stos push hlt imul (bad) xor (bad) (bad) hlt test jle aas xor jae inc dec and rcll mov out mov lea dec inc cmpsb add jmp sti push cmp (bad) popf addl or mov ret dec sub push imul test iret fwait mov outsb gs nopl gs ljmp aas dec cmp sbb ds jg rorb arpl ljmp mov repz ljmp jae fnstcw sbb lods sub (bad) cmp fisubl jb mov cmp inc inc leave test pop inc jbe jp push adc daa cli push sti sbb mov sti and pop jge mov sub xor or stc jecxz into mov in imul inc cld add mov cmp cmp or inc mov gs gs lods dec dec test je xchg popf adc add add repz or pop fstl loopne adc (bad) push pop adc cmc mov jmp in (bad) xlat jmp mov push inc nop sub xchg mull in ja sbb rorl pop sub jae mov and mov mov mov int mov mov ja int3 imul pop pop out inc dec inc daa repnz pop lcall mov lock xchg jmp lock jae lea add cltd sti mov je fidivrl xchg and and pop jg imul repz imul fistpl dec and stos ja xor sti jp popf stos dec inc push sti sbb clc data16 jns lods xor jbe lret jl sbb fs mov lock or jp ja bound popa add xchg pop outsb fbld mov mov adc mov pop xor push cltd mov enter movsl fidivrl aad push out pop in rolb cmp das mov lret mov in (bad) repnz cmp cmp sub adc jge cmc stc dec jle sbb pop cmc cmc iret adc nop nop sbb mov lea dec adcb test sub fwait aaa xor and roll add dec in jecxz cmp ret lods push or push fwait loopne cmp xor cmp enter sbb and test push inc mov fldenv cmp jb je add inc lret repz cltd not jnp mov int3 add test jecxz sarl pop shlb nop int (bad) out loopne cmp movsb notb jg sub jmp fidiv ljmp cmpsb sub loopne mov inc push out cmc xor lods dec lock xor xor or jmp sub add jno mov movsl ficompl fnstsw gs in fldt adc push notl stc adc cmp aad insb (bad) xlat call inc lcall jmp inc clc and pop lds mov mov push aam mov loope xor sub hlt adc jg and fs mov cmc jg xor popa aam rorb (bad) mov cmc je push ja loop xor mov mulb das cwtl dec mov faddl add jecxz scas inc scas adc loopne js pop cmp cwtl mov loope sub adc jecxz mov into adc (bad) sti sub pop sbb sbb push outsb jno dec arpl test call pop punpckhbw pop or call inc push jg cltd mov xchg push pop xor xchg mov incl push xchg lret xor js push sub fwait loopne in in inc test mov lds aad and add dec dec push dec (bad) push cli aam aam mov xchg jns xor nop adc add enter insb jne jp push jnp push scas sti pop sbb les hlt test stos sbb test shufps mov clc leave test xchg ja sub bnd sarl test mov add mov ret (bad) std les dec cmp in cmpsb cs lock fnstenv sbb popa jne inc jo les loop cmpsb int mov sbb push mov stc enter adc lds leave mov sub (bad) lods pop inc scas sti adc (bad) leave push rorl dec stos mov cmp jne (bad) pop push pop adc fwait shrl mov imulb mov rorb adc push jae push imul out scas pop cmp jae out cmc pop mov add or add clc and mov push mov loope adc and inc adc xchg enter out mov inc add outsl push pop xchg add shrb sti push stos xchg sbb in mov sub fsubrs inc mov lock ja or xchg (bad) test ja iret repnz repnz test pop xchg (bad) xor dec outsl fsubl sub mov xchg push fstpl fldt lods or mov shrl pop inc dec int mov jmp lock add mov (bad) sti sbb xor ss les rorl cmpsl pop xchg and loopne xlat mov or adc fwait aaa loopne dec repnz jg pushf pop je cmp sbb out aas adc jmp xchg xor movsb dec mov pop cltd xorb dec icebp sbb iret or insb sbb pop lahf test icebp gs in add sarb into fstl cwtl sbb pusha aad addr16 push push jne (bad) mov repz pop mov adcl adc subps dec adc adc push mov insb jb xor imul data16 xor pop jg sub popa jecxz adc fdivrs test incl cmc mov jne loop cmp jno hlt out (bad) cmp xor jp jae call enter inc add dec xor mov movsb imul movb sbb cmpsl popa pop inc ds sarl mov rorl and dec lods mov xor lock or sub xchg cmp cmpsb out jae das iret addb lock rcl add xor mov (bad) xchg jbe mov sti adc inc fs jp inc rolb push test aas inc jg notb fxam jo pop push lcall jb xchg pop mov jne das jl shl mov xchg pop fild fcmovnu fs icebp out or fiadd out test gs pop jge mov (bad) fwait aaa arpl dec ret les ror and push lahf mov mov pop mov insb mov dec xor (bad) xor in adc stos xchg cwtl aaa jo inc in cmp fxtract test mov lcall adcl sbb ret lahf stc sub add out cli jns push lret sbb add add enter cmp jae movsl cmpsb pop jno or sbb lds cmp pop jl insb jge popa jecxz or outsb mov xchg dec cmp repnz and pop mov enter jne (bad) cmp cmpsl fildl push aaa cmp mov lods or fnsave push push sub pushf adc sbb add add inc into test push mov inc mov (bad) jo push push leave and es sbb or and incl mov or sub fwait aaa call or imul or mov push lret pusha jb push mov pcmpgtb mov fs test (bad) ss dec outsb iret inc fcmovnu jp clc lods mov push adc adc add pop cmp adc mov loopne add push xor ds cmova rolb sbb (bad) xlat push mov (bad) jo sahf pop js inc cmp imul test jge fldl popf sbb arpl or jg idivl ret enter mov dec mov mov xchg push in or xor xor sbb pop popf int3 inc mov int3 (bad) adc or jns jnp les cmp and cltd xchg sarl jmp scas call push add sub mov jne adc imul adc or ss fidivr repz mov mov shlb push jb ss push or dec xchg sti inc popa outsb das rolb cmp je sbb data16 add add adc dec test leave je iret mov out mov sub out mov imul add pop rclb adc jo jmp addb mov add xlat lahf je xchg xchg stos lock mov mov jns push lret sbb xchg dec ds mov lock mov xor aaa or xor pop jg sbb dec popa jecxz and ds dec mov xchg adc or cli jb fildll mov out mov shl pushw jbe mov pop adc lods mov popf sbb mov mov xchg adc gs xlat orl fwait sbb sbb das inc add cmpsb popf sub dec and (bad) call test push and mov cwtl add test pushf shll lcall inc and rolb jecxz rcrb mov (bad) mov cs jnp pcmpgtb sub mov jbe dec mov push pop jne add insb movsb mov mov adc (bad) idivb add jns adcl call dec adc incb sbb xchg fs loop jge xrelease jle gs es or add xchg iret fwait cmp mov rcrl push fisub pop jbe adc push xor jecxz nop idivl test jp push test fsubrp push fdivrl adc jp pop add jl mov enter push mov inc stos mov andl mov adcl je mov in pop cmp lods dec mov xor aad pop xchg push and xor nop mov adc xchg out movsl fwait pusha xor pushf aaa ret add push push mov repnz and (bad) sub js sub lret jo in mov cltd xor sbb xor inc mov (bad) nop test fnop sbb enter popa mov pop mov add movsb call (bad) push repz orb stc into adc sti sbb clc add mov fisubr psrlw std lds out iret fwait mov rcrb sub popa in sbb (bad) mov push sbb test fild pop mov frstor add gs pop pusha adc mov xlat mov std repz xor adc adc outsl leave loope fs decl nop mov mov mov cmovno adc jbe push jae cli rol push jmp ret jne push loop test jl adc pop mov insb dec ljmp (bad) ja (bad) fbstp cltd or add dec cmp mov or jmp mov or xchg jbe mov nop iret sarl jns sub insl jns cld xor inc rcll int jbe loop cmp jns sbb dec ss lcall movsb call inc cltd sbb or lock test fisubrl and pushl mov push pop mov enter pop fisubrl mov add xchg js jl add shlb jb loope sbbl pushl rep sarl pop xor insb vpunpckhqdq push (bad) int3 in inc or mov aas daa push cmp in mov mov clc mov mov jo fs mov inc stos repz mov inc clc aaa xchg cmpsb jg popf xchg inc xchg sbb sbb inc pop inc xor std lcall scas test test fwait push (bad) cmc rcll jmp aas hlt sbb aas daa mov (bad) out int inc bnd aaa jno fs pop lahf mov negb out xchg jae popa jne dec call (bad) stc pop fist (bad) mov scas movswl jmp sub jo push outsl lock movsb das push mov mov mov add add add jge mov xchg inc int3 sbb imull inc jnp cmpsl pop mov mov inc (bad) sub jmp fdivrp pop data16 dec loop add stos or cwtl clc push outsb push repnz in xchg js fildll (bad) xor or or add or mov rorb clc and aaa lds loop pop inc (bad) shrb jmp mov mov fsub (bad) scas cmp cmp shrl pop ss rolb adc sahf jp insl sbb daa pop (bad) lds fwait aaa loopne dec and pop movsl mov fs shlb jb loope mov mov push mov insb data16 or lret cmc add add add clc and cltd insb rorb sbb mov jnp mov xor mov cli adc leave cltd xor or jnp mov bound inc cmp outsb clc iret push push fiadd andb dec fucomip or add jnp ljmp push faddl mov stos push adc das jnp (bad) xor sbb pop insb in xor out pusha pop popf mov outsl push das (bad) in pop mov in add dec daa add pop lahf mov mov ds mov notl push mov lods (bad) cli mov push popa xchg cmp inc mov fstl (bad) fistl mov jo mov mov fadd push addr16 fisubl dec xor aaa loopne mov into stos dec les mov or xlat outsb push ja dec xchg add xchg add mov xchg cwtl clc push add clc lret addl mov fdivrs dec aaa jmp loope adc jne xchg fstps enter add push lret (bad) sub nop pop lds mov enter mov lock aam movsl xlat lahf test inc fisubrl fisttpl lret sbb add sub jae (bad) stos loop,pn or (bad) lahf xor rcll cs (bad) repz pop dec dec jmp dec mov push jg leave mov movsb nop dec test movntq out and adc pop add ret fidivrl lods fsub aas mov das ja xchg push pop mov loop in jmp test xchg mov or mov jno ss lods push movb add add scas add mov lret nop cmp testl xor int sar fwait pop ja fnsave or dec popa xchg sti arpl (bad) jmp lret outsb jns mov push sbb pop cmp inc sbb adc jb fwait dec out inc pop push fsubs pop (bad) dec loop es xor and mov popf nop pushf mov mov (bad) imul ss adc jmp jb push xchg lods lock add das push sub push ret in cmp xor hlt cmpsl mov movsl push or addr16 inc add arpl cld mov je test test pop push (bad) mov ret add and (bad) xor cmpsb decb (bad) mov test addl and and add fdivrs cmpsl repnz mulb inc cmp jb xor or mov pusha stos rcrb jp jae ss jns pop lret sbb mov cmpsl ret jmp in lahf or or lret xor pop jae or sahf aas pop xchg xorb or ja jmp pop fdivrs cltd or cmp push outsb or push sbb jne pop jg dec (bad) lcall mov sarl ror sbb pop sub add or mov sbb sub inc jne rolb sbb clc leave clc sti and xor lods add and in mov in or inc cmp pushf cltd mov mov cmp jb rcrl add pushf aas dec loop mov mov xchg pop or aaa mov loope or mov fcompl inc mov dec pop cmp data16 inc xchg (bad) test mov jmp movsb loop in pop out pop inc mov push test data16 dec in sub fildl insl rolb push dec xor ljmp push je add sbb aaa push mov inc or ret add rolb outsb fadd ds je bnd pop lret loopne fnstenv sub gs mov and mov enter jmp mov out mov add dec and add push and jns,pt insb test data16 cli outsb clc fistl pusha inc add sub cwtl cmp js sbb pop pcmpgtd adc or adcb or les cmpsb out das das stc dec popa cmp data16 mov ficomp adc mov mov mov aam test cmp inc fdivrs xor push insl hlt adc mov pop cmp add outsl int gs xlat lahf xor jmp add sub pop jmp sarb fst and mov xor pop punpckhwd inc ds pmaxsw cmp leave jns add mov call cmp adc ss mov xchg pop xor adc lret xchg int mov arpl push mov mov mov and add or or cld push add add int (bad) push ret (bad) movsb call inc lret repz jnp or arpl out mov inc xchg stc je lret sbb pushf inc (bad) icebp or rcrl int add into fwait aaa call (bad) cli cmp add xor rcrb sbb sbb lret into or (bad) fsubs dec lret xchg es or das mov (bad) pop xchg pop test push mov push push enter adc mov imul sub mov jecxz call fnstsw fistl push test iret push outsb jb and loopne aas addr16 je mov jl movsb add ss repnz icebp sarl test shl arpl mov clc inc movsb add add add lock pop mov fwait loopne cmp mulb sti mov es dec pop jg fist pusha xchg aaa mov and aaa fs xor jmp pushf mov jo sub stos incl inc lahf jno add mov ds cmpsb push dec mov push mov psubw leave cli shrb sbb lahf pushf mov pop push daa mov xchg (bad) jmp bound rcl cmp jbe mov add (bad) mov pop fcmovbe xor mov sbbl cmp and insb mov insb mov jns jne (bad) jae movsl mov leave pushf xor loopne mov enter out stos scas icebp aas ljmp arpl push pusha hlt push inc mov (bad) adc sub mov imul mov shrl or xchg sub add pop xor sbb (bad) cmpsl (bad) push test jns (bad) fnstsw cltd mov cmp add movsl jp sahf mov cwtl aas dec jmp mov or sub jae mov decl mov mov dec test add pop lahf mov jecxz mov test shr mov push mov or ret (bad) dec lods popa xchg dec dec lret jecxz repz mov das arpl popf xchg dec loop or xchg and or mov call cmpsl or ljmp nopl hlt jmp (bad) cmp or push cmp jg movsl nop pop mov out xor in pop clc mov iret adc flds push aas xor adc sarb rorb pop test shrl lds add fs lds adc mov push lret test jp pop cmc das push xor fisttpll aam inc ljmp or and orl mov int mov aas pusha mov mov push scas cmpsl test push fucom sar rclb mov ljmp cmp or dec icebp sbb bound enter pushf rclb fildll leave scas enter daa mov imul add mov icebp push adc mov je repnz mov mov mov push dec fcomip insb mov scas mov imul or add and out sub dec fisubl xchg dec rorb mov (bad) (bad) arpl pusha add mov dec arpl pop sub mov xchg mov jns add sub in mov (bad) scas (bad) lea mov negl adc les (bad) daa inc xlat add inc inc push and jno ficompl sbb pop pop sbb push nop push add jmp or push mov (bad) jp mov arpl lahf cmp js lods pop setns jbe test loopne push inc lcall mov pxor mov aam jbe shlb jbe repnz pop ret adc lret stc or fdivs push cmpsb mov outsl lcall enter (bad) sbb push xor xchg or jg repnz ret pop shrl cmp jb mov fmull sub clc mov push mov add enterw xchg iret fwait mov lds ret add xchg aas adc xor fadds shll or cmp cmp xor mov (bad) mov sbb push jmp push jp into clc mov addr16 ljmp jae scas out jp xlat dec in fiaddl imul leave js mov or xor sti cmpsb push jle sbb loopne or aad or mov xor mov (bad) (bad) fnstsw insl (bad) cltd aaa arpl sarl and nop jmp cld sahf xchg movb pop dec dec out bound lret xor jns loop jge xor insb dec and add test aas mov out adc adc xor aaa jae xchg fs adc push sti out jl mov stos das inc xor pop mov sldt cli xor imul push jb,pt fnstenv shlb aam mov mov loop jns push and mov sti ljmp xchg jl sbb inc notl dec inc cmp fsubr ret pop (bad) mov dec fistpl lahf pop and push out inc add mov fbld in xor push push mov fadds call lods out lods les inc cmpsb and inc mov mov cld int3 push dec mov push insb ret fsubl xchg mov cs xor int3 in dec fwait mov add sub hlt loopne dec add cmpl dec add sti inc jmp or mov pusha xchg (bad) jmp sbbb mov xchg or (bad) add dec fwait jb lods test mov lea dec lods mov aad mov or sar pushf add pusha loopne (bad) cmp mov loop pop iret pop pop adc pop jl jbe icebp insb sbb (bad) jo lret jno cmp (bad) cmc loopne mov out or pushf pusha (bad) icebp aaa or and call mov test sbb incb xchg lret cmp xor addl inc xor jne inc jo ret ret mov movsl fdivrl enter lahf movsb mov xchg cwtl sub das or mov stc call ss sub outsl cmp repz sti ret jb and loopne cmp test and or add dec xlat test add jnp hlt daa mov cmp mov inc rorb int (bad) mov push std loop cmp (bad) mov cmp bound test and jecxz cmpsb stos or ja leave lret mov fistpll sub mov mov inc inc mov mov mov popa push ds sbb pop ss xchg in aaa in test push xlat sarl daa imul fwait aaa loopne push sub lret out mov js andb ds cmc enter into push xor out pushf dec popa jecxz test cltd or loope loop aas fcomi mov or orl icebp dec sub push add lahf mov arpl aaa mov inc cmc es mov add add mov loope shr or add mov mov (bad) push jge mov mov mov sbb mov repz sub pop dec cld and sub scas dec popa in or rclb sbb pusha and or or xor fdivrl daa test (bad) test dec adc xor fnstcw jne dec (bad) sahf rcrb fs loopne xlat add jb cli iret arpl xchg xor es shlb arpl enter out xlat mov pop scas sti cmp mov popa jge loop jns dec and mov xlat xor pusha ret add popf loop pop sti leave lcall out xor jo sbbl mul or inc popa rol hlt in inc cld loope sbb xor add rorl scas inc jg cld in pop and push pop cmp loope xchg inc stos inc leave repz ds push xlat out int lock test xorl int pop add and cmp fiadd int inc jle mov dec movsl mov les hlt sbb mov dec mov outsl cwtl (bad) pushl jae push ljmp xor insb and leave pop popf test mov lret loopne in rcr icebp cwtl adc hlt inc fild mov mov sahf xchg test cmp ss pop sbb inc iret jb test sbb mov fs (bad) je sahf jecxz icebp push mov mov push in test xchg ja ljmp sub mov xlat jbe les add out dec rorb ffree (bad) cmc les movl mov loope aaa dec popa loope cmp gs mov stos pop inc push push dec (bad) lret loopne push ljmp dec xchg rcrl lret shl out nop pushf cmp insb dec jge mov ss dec jl test popf lahf stc notb ds xor mov dec xor imul test cmpsb movhlps out cs or ljmp push pop dec lods push xchg push or pop mov and push jle (bad) cmp dec sbb pop fcmovu adc cmp ret cmp push lods add cmp sbb pop cmp fs or mov adc xlat jns jp or jle or add jg (bad) clc or adc dec mov adc dec arpl aaa das and pop mov popa jmp sbb pop cli js jl mov int3 mov out aas and jg xor (bad) sbb pop xor jno int test push mov mov xor mov addr16 xor mov push and mov rcrl call push jo xor add pop cwtl stc cmpsb push dec mov and clc leave adc and lret fdivrl popf xor adc enter test por fwait mov ja add jl jp sub sti in pop enter cmc dec int3 push inc scas sti sbb push push out cmp xor (bad) test inc dec loop (bad) jo out sub test test sub add xor jp adc sub mov int3 test xor xor cli or add fstpt leave and add popf xor in cmpsl outsb das in add data16 sub aas xor mov imul lret shr out or cmp imulb js lcall in dec test xorb dec icebp xor clc aam adc insb in mov fidivr jae int xlat fnsave movsl das rcll popa jmp add xor sbb dec push mov daa push push faddp fisubl sub jbe test jae addr16 or sbb aam ret ljmp (bad) rolb dec loop push mov data16 adc mov cs js and loopne xor xchg lea out (bad) mov mov pop inc rcrl leave mull and push push mov fadds call mov push mov inc inc dec or sub xchg mulb or sti sbb adc stos xchg mov pop dec mov xchg xchg mov insb jle pop aam xor mov and add push mov mov stc pusha push sub xchg pop xor push dec lret xchg int xchg push cs push mov or rcr jp jne or cmp push lcall and enter or pop mov mov jno mov jno jmp shrl pop sub cmc mov ja dec xchg fcoml mov imul sub xchg test pop mov scas ljmp mov or int sbb imul cmpsl test (bad) into pop push aaa mov in pop daa mov mov outsb sbb orl pushf or leave pusha in xor dec lahf push lea sti enter inc ds fld push lock dec mov mov sub (bad) pop xor sarb ret stc std and jbe push xchg pop sbb stc clc and je insl in dec dec jecxz aas dec or push xchg lcall push aas pop mov push dec lret out mov add imul cmpsb cmp push aaa (bad) jae sbb jg add in aad add add js pusha jb arpl xchg xor pop xchg jns call cmpsb push nop lods xchg add and outsl xor lcall xchg in dec fwait xchg cmp or cwtl lret or ja lahf sarb xchg sti imul jnp xor insl push loope cmp cmp mov loop xlat push mov lods or mov pop test xor les push addr16 push arpl xor dec lahf mov lods and mov lret dec iret or pop mov icebp out icebp cmpsl test pop cmp jno rorl outsb adc push lods or in dec dec push xchg jmp fidivr ljmp cli pop out jae test push jae enter je mov insl add add repnz pop xor cmpsb cmpsb data16 mov mov cmc fiadd pop mov stos or ja loop xor adc adc add pop rcll lock push lds and jp insl mov xlat sub (bad) ds int mov push mov jecxz push out orb outsb pmaxsw and outsl pop jmp cwtl pop je cmp into xchg repz jno sbb mov repnz mov fwait loopne (bad) enter sbb adc aas mov fimul push ficomp and fildll mov movsb hlt (bad) jg mov mov das lahf sbb jb pop aam cmp (bad) jo inc jecxz jle push xchg ljmp lock and lret cs ds in aad mov mov add bound and add repz pop cli test sarb xchg dec xor addr16 mov inc outsl js fsubrl and xor cmovle aas jecxz int3 push or cmp clc lods imul fwait cltd roll cmp rcrl js sub push and rcl mov shr xlat push cwtl mov cmp rorl iret lcall pop mov and in mov fwait movsb (bad) movsl cwtl mov sub ret mov pop dec mov push lahf inc cmpsl test or push cmp int3 cmp pop and cmp xchg jp sbb neg clc and stos mov and cmp xlat xchg movsb xor push fisubl call xchg add push mov inc inc inc mov ss push jle push aad cld cltd cmpsb push dec mov xchg sahf push dec or lea inc sbb mov xchg mov sahf cltd mov mov out ss xor dec dec sarb fcmovb ds in imul jno (bad) std imul jmp and jge add pop and mov xchg lock in jge cmp xchg test in mov lods outsl loopne push jno (bad) rorb dec mov mov adc (bad) cmp fcoml push aaa and and xor jmp mov outsl lock push dec out and sbb ja add out jae cmp or adc pusha imull xchg dec xor fcoml repz fdivrs dec xchg mov add pop jge dec stc adc or stc sbb jle sarl push repnz scas pop dec xor sub pushf addr16 out (bad) cmp jmp mov mov sub dec ret jae mov add add (bad) nop (bad) repz mov or pop xor cmpsl mov movsb dec fimul adc mov sub lcall push xchg lret fimull sbb test and lea add popfw dec push sbb enter enter repz or jb sbb aad mov test pusha xchg (bad) leave push and jae inc or sbb pop adc xor inc (bad) clc leave stc js aad in or adc pop pop jne lods sub inc cli add add repnz iret xor pop insb je cmpsl mov jg bound out (bad) cmp (bad) iret dec lret out mov mov mov adc push adc jno in mov push test jle add (bad) sbb cmc or rorb and movsl (bad) lock lock xchg fmuls mov ret and std cmp hlt lods or insl mov rcrb fs jb mov and cmc mov cmp push dec cmp int mov loope cmp mov push enter xchg dec cmp mov mov jae mov lahf push sub cld fwait push pop dec out cld adc int (bad) xlat jmp push inc jecxz aam shlb dec outsl pop add add stos ret scas outsb aaa jno pop (bad) cmc fdivs cld pop (bad) out push (bad) arpl ljmp aaa loopne inc and out mov pop out outsb inc inc iret out movl negb out mov pop insb xor lds lret test pop (bad) ror addl hlt jbe std mov outsl cltd add cmp in ret repz call rorb jb (bad) dec call lret jo sbb push mov sbb and nop cli push or (bad) or push jmp or imul out mov test (bad) pop insb in (bad) in push sbb xor cmp (bad) adc pop xor mov jmp add movsb into icebp (bad) gs aas lret xor push lock fs pop cmp xchg pop lds cwtl cmpl call data16 addl inc (bad) sbb xchg push pop inc outsb in dec xor xor hlt jge stos stos push push in (bad) mov pop hlt sub lods pop (bad) dec xor dec out mov pop fsub sarb insl mov xor cmp movsb repz inc mov popfw dec push fdivrl cmpsb stos or ja stos mov fild imull movsl xchg popf mov rcll and sub jmp pop std pop xchg clc xchg test add pop xor call repz xor dec sti nop lds add jg dec jbe les or sbbb fcoms repz pop int3 mov test sub push mov mov ret sti rorb jae cld fnstcw cli mov je scas pop xor dec add (bad) shl pop (bad) ffree inc iret lods outsb xor call cmp dec mov push push pop and jp,pn dec adc push jle mov sbb (bad) repz into and and cmpsb inc and nop mov pusha adc mulb add jns (bad) push das sbb push and mov pop popf or dec adc dec jecxz mov notl mov movsb inc or dec sub cmpsl sbb or enter shrl mov or jb loope jle in add xchg hlt add cli mov cmp jle xor (bad) jae cmp bound (bad) dec ss shrl into or fs lds daa and add mov ret lods push mov sbb push cmp push dec lret xchg ret loopne mov jne mov push les sbb push aaa imul stos xor lcall out xchg ret mul dec cmc test xor sbb xor add loopne inc (bad) test test out dec sbb push cwtl dec lods sub mov mov lds or imul xchg pop psrld mov push xchg dec idivb hlt jl xorb inc lock pop sbb in adc call mul cmp jns hlt add add (bad) pop mov cmp adc fs addr16 jns dec cwtl andl or jno popl adc add insb ret push ss adc inc adc push dec std sub mov lock xor mov jmp popa push sub push movsl es cmp or add sub cmc sub and test adc imul or popa gs mov dec loopne cmp (bad) mov and mov imul pop jge or sub push sub loope push mov aaa push movb xchg mov mov lds dec mov xor stos adc inc sbb fmul mov hlt test dec in xchg push cmp xchg jo adc lods les into test add in mov movsb mov push mov add out xor test cltd or jmp or mov push push pop aas daa push jae out fnstsw pop das inc mov imul lcall cwtl cmpl mov mov test adc add jmp adc push mov fistl pop imul jecxz leave movsb leave pop lahf lret xor scas or inc (bad) repz insw push lahf push insb jge mov xor (bad) push daa sbb dec and mov pop popf cmp dec adc dec jecxz mov mov push mov scas hlt mov sti cli push push mov out jmp and aam fcmove push sarl scas xchg loopne aam (bad) mov stos idiv add push lret pop pop push inc push mov (bad) xor clc jnp mov xchg sbb mov cltd mov pushf pop je cmp jns jle adc cmp fcomp fidivrl out fsubp or aas fnstenv pop jne cmp mov add (bad) push lahf cmpb inc std cltd cmp (bad) mov hlt inc inc fcmovnu cmpsb xor add out rorl imul jo mov add repz cmp add cmp pop call mov rcl push daa imulb jb mov jle mov repz add subb add cwtl fisubrl or push cmp push imul data16 js icebp rorb hlt jo ficompl aaa (bad) add paddd pop lret shlb pushf mov out pop into aad fnstsw mov sub stos idiv int sbb ret cmp xchg and mov jnp pop iret mov and cmpsl push pop decl mov add adc push jle jmp sbb outsb mov fs xor mov or xchg mov and inc test pop mov and sbb push mov xorl mov and mov imul pop jl or sub push sub jmp stos xchg movb inc cld xor adc sub int3 stc cmpsb jmp rcll loope sbb fdivrl loop jnp mov xchg or or sub out lahf xor lods les jl insl in inc (bad) push mov ljmp mov add add incl repz daa pop out bound ds fs and mov adc in pop ret (bad) fdivrp sbb mov icebp inc fild mov mov sbb jge adc cbtw cmpl lods scas test fsubp (bad) jb dec add sbb in sub in sub mov lock or imul cld pop out mov lea insb in (bad) in push sbb xor cmp xchg ss xor mov ljmp sub pop scas bound stos mov inc jle jge pop push in mov rolb mov roll outsl in push jno cmp mov fisttpl dec mov mov sbb inc adc add and jp mov rcll xchg stos dec out pushf xor cmp cld enter and inc xor test roll insb mov mov ljmp insl vpminsw mov loop mov xor insb sub pop scas xchg lea lcall bound adc xchg cmpsb daa sahf mov add sub leave shrl jbe fdivrs enter cmp adc sbb inc push add vpaddusb in hlt mov clc push push daa (bad) lcall mov cmp mov push movsl es cmp mov and push or (bad) ret neg mov mov pop pop out test mov cltd jl test cmp and (bad) xor lds cltd (bad) xor cmc jb sbb push add add into (bad) jb sub or sarl mov into aas jecxz (bad) adc push (bad) pop movsb ret lret sbb fimull mov push daa mov pushf inc outsl mov xchg aaa push dec xor mov lods mov inc sub cwtl aas (bad) cmc cld cmp bnd xchg stos pop jmp fs data16 ret mov inc lret xlat mov loopne das xchg jne cs adc add loop (bad) (bad) hlt pop aad sub sbb sub mov mov cmp shrl popf adc inc push stc aas push inc orb das inc pop pop cmpl mov xor stc daa pop (bad) fistpll popa out aas sbb rcrb lret jecxz jl add add and or iret sub pop int xchg sbb jo mov fadds xor and jns and pop testb movsb mov stos push sbb inc lahf jno or frstor insl dec les rclb mov cmp jns xchg cmpsb and cmc shll cmp or jecxz mov pop sub notb jmp jns loop fcoms call insb pop and (bad) pop adc pop insb push movsb dec fisttpll fildll or aas lock das push outsl arpl mov cmp leave xchg dec mov imul jbe sbb cs clc leave sub mov jo push xorl sub xchg arpl ljmp fbstp into cmp (bad) int3 pop push inc mov insb fidiv and mov addr16 xor cmp aad int3 dec mov pop and xor cwtl pop add push adc xchg and and xchg mov stc (bad) xchg and orb loope sub cltd xor lahf jb shr call rcl jb inc popa int3 push in cmc les add in lret xor sti cmp std xor ja loop ja or outsb ljmp mov mov imul fstpl gs pop xor leave or aas aaa sub or popa fildl (bad) cwtl add out lahf push add cmpsb cltd movl add inc subl add push leave repz adc in icebp sbb ds mov arpl mov mov mov sub xchg and jnp jg pop cli and mov push bound int3 inc cmp es push movsl xchg or imul xchg mov mov jg xor loope cmp imul mov fcompl lahf push cmp push cmp fnstsw pop cs pop jg pop (bad) mov xor nop lret imul pop pop push jns mov cltd sbb mov push out pop xchg mov outsl fst scas sbb push (bad) cmp nop lock mov jg dec mov iret jae sub xchg push scas adc mov push push cli lret sbb push lret xchg mov cltd es add add inc adcb jne mov pop xchg and inc in out mov es push movsb sub out in mov adc sub stos aas dec aas addl sub test push test cmp inc xor pop add icebp movsl adc les pop mov mov cmpsl loopne inc mov or repnz pop dec push sub inc adc dec popa push cmp add nop cmp mov bnd mov xor xchg lea aas mov inc shl add mull mov push sti (bad) push push mov fdiv call je subl dec pop inc or setle cmpsb popf mov pop pop test leave push sbb dec in push int push xchg icebp les mov testb sbb iret call cmc decb je popf in in pop mov rcrb cmp out and xor jbe fs lahf sub sbb and fidivrl and enter jg ja hlt inc lods add hlt stos cld adc cmp into call push inc mov cmpsl ret mov xchg xchg sbb shlb inc outsl and lret dec jo loop (bad) shrl pop push daa loope int3 int mov movsb and add xor add pop dec aaa call push inc lods xor cmp in pop sarl jno ja lea push mov in inc in jp das rclb loope jp mov pop (bad) aaa call xchg push mov push cmpsl nop pushf mov scas and add mov aad mov add aam or jmp gs add daa aam jnp xchg xor inc fcmovne push out stos lock in sub xchg lcallw push mov subl cmp xchg pop mov push dec ret fcomp and imul ds mov pop and adc mov pop (bad) add xor (bad) sub inc sbb nop arpl sar push (bad) add sbb insl js jmp inc pop push pop ret inc dec pop fwait jmp xchg cmpsb loopne pop lahf and pop lea add pop cld push pushf popf cmc es mov mov es push call mov cmp mov sbb jmp adc and fisubl jge imul pushf inc mov test and jge (bad) xor call or and jbe jbe xchg das push mul (bad) nop fnstenv outsb es push mov mov stc jnp mov inc mov push vmovhpd in cmp je adc loope pop fdivrp std cmp or bound dec pop sahf adc icebp xlat and sbb sahf (bad) push cmpsb xchg (bad) dec clc pop inc add cmp sbb inc (bad) int3 inc out xor or movsl int3 fisttpl in mov mov cmp fldt and mov push mov and push add or ret jmp mov mov hlt cmpsb test mov fldpi inc das cmp pop dec movsl xrelease lret jo jnp mov mov jg stos xchg loope mov lds dec push sahf push xor lret movsb jae mov xlat jne cmpsb fidivl pop dec leave js out (bad) imul xlat popa out or test (bad) notb outsl nop push je test push jns dec and ror jno bound inc pop xchg pop push or xchg pop arpl sti int mov dec xchg xor sahf add test dec loop lea sbb (bad) js vhsubpd pop mov sbb adc test xor setno mov adc cmp icebp mov mov dec sbb sbb loope jo lds xchg xchg (bad) jo sub leave jge fs sub xor sbb in and in sahf scas out fwait adc mov fildl fs inc es loopne jb stc divl sub inc push lds xor mov adc cs seto xchg add or sbb mov aas mov out jmp test js fdiv push (bad) push dec scas sbb orl dec or clc mov int3 xor and xchg (bad) lret cmp lret cmp pop jge xchg int3 mov movsl lret pop dec jge pushf sahf sti scas dec inc xchg test scas stc mov fs es movsb push fucomp dec jne imul inc and cmp mov or ss pop xor jecxz mov enter sti mov pop push lcall popa sub push adc jecxz ret mov mov sbb push dec btc sbb js sbbb call push sarl push insl js sub push (bad) fdivr sub mov mov out jns sahf cmp xor je,pt out (bad) out pop push sub aas nop mov dec cmpb inc decl sbb inc lods out dec (bad) cld pop ss and mov push xor fstl and jg or xor shr inc in aas push cmp inc sbbl stos imul mov pop mov shlb dec outsb arpl mov and jno mov inc loope data16 ds out das adc popf or or idivl mov mov pop push xchg xchg test cmp add mov xchg dec pop scas xor mov push nop mov add je jmp inc scas dec push dec in (bad) cmc push mov inc aaa fwait mov xor les punpckhwd inc cmp pop scas mov or cpuid jg aad mov lea sbb jecxz xor add shr lock test int hlt push int3 jle in mov out jno xor push movsb ja addr16 xchg (bad) mov int3 xor mov and xor ljmp test inc bound cmp push push scas lods gs sbbl je mov mov cmp cwtl sub pop mov scas rorl inc jbe cmpsb outsl into in xor (bad) hlt mov push jg test repz jmp jle out andb jne arpl xchg xor data16 add mov clc jae aaa lret mov int3 (bad) xlat subl mov xor sbbl sub test ljmp xchg cmp mov and aas mov pop sub testb adcb test in pop mov nop or sarl push mov pop pop (bad) cmp dec jo ja mov and fucom movsb mov ficom roll jns pusha add aad inc sbb mov clc sti jecxz (bad) push pop popf into push jl cwtl cltd adc mov (bad) cld mov mov (bad) ja fcmove pop xchg cld add mov jge call sahf loopne sub sbb sar ja fwait xchg ss jae pop xchg jecxz xchg (bad) sarb add add jae mov (bad) cmp ss sub add mov jg cmpsb lret fsts call adc rolb and in sahf sbb sbb push push test adc jge das insb or iret push pop dec lds push in pop pop push (bad) and fmuls or clc popf mov jg or jecxz push popf into decl dec and mov pop aas xor fisttp leave mov xchg mov imul and fldcw pop xor and pusha add js mov or ficom pop jb shll adc cltd iret mov push (bad) mov lock jle sub fsubs mov xorl fistpl leave lds dec xor pusha mov add adc push stos icebp and jbe stc loopne pop pop cmpsb (bad) lahf jp arpl adc jb or push pop dec clc aam lds jae dec push in test jle dec lret cmpsb lret cltd mov int3 or mov push fnstcw mov push (bad) sub sub cmp pop mov cmp in ret pop or adc mov push push fs and ja pop cltd sbb mov enter aas jp icebp xchg test data16 jl cmpsl out stos cmp js mov xor (bad) dec xchg rorb cmc jne add (bad) adcl jae mov sub cmpsb lcall nop mov mov add lcall pop popf addr16 xlat loopne jecxz movsb mov outsb cltd jg pop jbe mov jle mov nop cmp or ret insb je cmpsl test fmul ret mov push fs xor xchg or jl jno mov or mov out dec jg mov jae push add xor xchg stos dec cmc cli xchg mov dec mov inc leave mov sub rorb sub in movb pop std push dec shlb adc push mov (bad) out aad loop or or (bad) sub sub aaa cmp mov inc sub cmpsb cwtl aas sbb lret mov mov mov cmp rol mov xchg repz sbb pop xchg jbe test in jl pop jg xlat add mov sbb xchg adc add subl mov or jg ljmp mov fwait (bad) nop pop xchg jecxz mulb xchg iret inc ja jbe ret in xor inc lods xchg mov xor cmc mov or cs not or xchg cmp xrelease mov aas dec mov xor addl rcl mov imul sbb mov andl and das mov pop lahf mov cmp lcall jl daa cs dec lds repnz dec pop dec int test pop cmc and mov inc pop xchg notl cmpsb inc xor push dec jmp loopne mov lcall lcall or inc (bad) repz mov dec mov add jnp xor stos jp dec mov jle test pop popf in mov and in cwtl ljmp cmpb cld rcrb pusha (bad) xor nop fwait jbe xchg pushf push fimul add xchg add in jne jae fsubp pop xchg xchg mov and xor pop mov das mov stos sub in int subl aaa arpl sbb call pop int cs arpl jae push xor xor xor insb and add loope sahf in in sbb xorl outsl dec mov sbb inc in loope roll mov int mov lods gs popf add pop ret mov push add aam fsubr or cmp pop xlat sbb insb add ljmp or movl retw mov sub das ret add adc mov add daa adc push jae out cmp (bad) leave pusha jns xor daa (bad) mov test out and jnp sahf mov out popa cmp and inc xchg out ss xlat adc call cmp ss jge clc push cmp pop aas xchg loopne mull xor popf pop loopw mov (bad) outsl mov xchg inc (bad) sbb jg scas jecxz mov int xchg sub lret pop xchg pop and pop adc push pusha in inc ljmp cmpsb cld shrl dec iret fs dec sahf fisttpll pushf mov mov fldenv inc repnz mov add in nop stos ss fwait mov loopne cltd pop dec add and mov push mov jo dec decb xor repz das pusha jp cmp loopne fildl pop movsb clc cmpsb mov fs cmc fsubr into push jg out gs or mov out lahf aad rcr dec sbb mov loopne dec sbb cmp or sbb out pushf cmp dec push ja mov into mov jb iret cmpsb mov fwait lahf jmp loope pop mov cli movb adc lret ret lret jns outsb shll pop jg pop sbb addr16 repnz jns push sbb pop jbe or mov rclb add push dec pop inc aam push cmpsl fwait out sub push mov pop outsl jle stos lock mov pop out sbb add out es pop inc cld lcall imul dec mov xchg gs mov arpl cmpsb lods mov in mov fimul adc ret inc mov add jnp pop jp (bad) stos lea sarb imul inc push fadds adc add mov mov sbb stc cltd ss out mov dec popf int3 xor cmpsb dec inc decb outsl stos xor je fild ds call fdivs int3 mov push fiaddl cwtl ljmp popf inc jmp (bad) fisubrl mov imul cs fadd or sahf add mov lcall stos (bad) push insl insb xchg fisttpll mov popf mov sub mov add shlb cmpsb imul hlt shl mov in hlt aaa dec mov xor cwtl out in pop sub in sti pop add movsl cmpsl pop xor and adc int3 jge shlb out push jecxz (bad) xlat loopne popf gs (bad) dec sbb inc fcmovnbe xor jo pop movsl push (bad) xor pop sbb push push pop adc xchg loope aas popf mov pop jecxz js fdivrs mull xor add out ljmp int3 mov test jecxz aas dec ja (bad) loop pop sbb mov mov jbe pop add stos sub repz mov out jo xor jnp adc mov mov sbb dec int dec sub xlat adcl rcrl (bad) pop in outsb test lahf add add out mov pop les mov in cmpsb sahf out add and hlt cmp mov adc jmp arpl sub int3 (bad) aas in popf enter xlat mov fstpt xor mov jecxz repz mov insb sbb out (bad) mov les dec sbb inc sbbl mov enter jl push mov cmpsb lds outsl into addr16 adc jl stos cld repnz imul (bad) sub mov mov lcall bound jne les mov mov data16 inc dec mov sahf aas adc jae addr16 je add iret mov mov pcmpgtb xor dec ret xor dec adc or and add loopne popa jo dec push cltd insl mov sub es out pop cmp cwtl push gs test dec dec sub xor js jp ja fwait push (bad) stos xchg mov outsb and push mov lret dec adc push jle or push mov js (bad) jae cltd jae pop cltd mov cmp scas ret push rorb jo or pop jne mov lock dec gs stc push mov adc lea cmp int3 xor movsl in pop cmp cmp clc dec in loop cmp xor movsb addb or fs mov inc leave jle mov mov (bad) sti jb push fsts dec push outsb jo and test xor pop mov or xlat and icebp or sar aad sarl test mov mov dec shrl js push out aas je xor jno xor dec aad in outsb mov stos cmpsl mov (bad) cltd dec mov mov (bad) clc insb push mov sbb jmp jg xchg xlat (bad) mov lcall ret insb cmp nop jne repz adc sub sbb sarl push pusha or aam mov xor xlat pushf push xor out mov enter cmp dec repnz adcb sbb std dec fwait out in push push push push mov mov loope pop mov imul mov stos loop sub test jbe xor cmpsb decl lds sbb mov mov and or xchg mov dec inc aas jg pop and jnp repnz pop mov pop xchg cmpsb adc ret or xchg out (bad) mov nop lock cmpsl loop div (bad) xlat pop outsb cmp cltd adc mov aam sarb push dec fimul pop movsb gs pop lods inc xlat add lret out mov pop scas mov movsl rolb mov jo jecxz mov hlt mov call aad add mov shl dec das aam adcb stos jo mov pop pushf (bad) rcrb (bad) mov pop popl cmp dec lods pop call sbb (bad) jge aad dec sub and mov jmp jle iret pop sbb ret adc xor mov out repnz sti test or mov jns sbb and or dec or ja idivl sub push mov add fcoml mov add push or in inc popf pop push push pusha icebp popf jl mov pop inc aas adc add outsl cmpb add mov xchg into imul mov test rcl movsb fimull mov dec or fsubl sub lss lahf push jnp fbstp push fwait (bad) lock pop jmp scas icebp into adcl jecxz (bad) xchg cltd dec adc push pop sub ret pop xlat sbb clc jle push and or lahf and shll mov popf movsb ret shlb mov mov cmp inc loopne pop pop xchg mov or mov test cmp jge insb pop movsl mov add add into testl repnz pushf int3 ja clc mov xor fdivrl insb ljmp mov jg in cmp daa or dec xor adc jno mov in mov pop push roll cmp out dec into xlat (bad) pop sub add push mov or js mov (bad) leave loope pop mov or pusha or ds mov add pop xchg fs std out rorl push sbb cli lds fxam lods mov cmp xchg lods (bad) das mov jno push pusha sbb cmp mov add aas jbe xor mov daa xlat mov mov mov dec les aam inc fsub mov mov mov or mov mov aas add jb icebp ret clc bound add pop mov or out es dec jp mov sbb insb adc hlt subl mov mov fnstsw fadd mov mov lret bound mov (bad) std sbb inc popa and fidivrl stc (bad) dec push (bad) fsts orl in into inc iret jnp aaa lret sub enter xchg in lods and pop jbe push jnp bound fsubr ret repz inc adc fs or mov aam push xor js mov outsl xor inc hlt add sub out clc cmp adc movsl add mov aas add test sub or pop add arpl add into pop dec (bad) jmp sub push mov incb sub mov sbb dec inc or (bad) cltd in in inc roll cmp cmpsl sbb data16 xchg loop inc push dec ficoml and lret sbb call pusha scas aad dec (bad) jo inc repnz imul or sub fdivs je insb inc ret outsb jne bound bound adc push adcl inc fnstcw cmpsl xchg xor xor out cs push scas push dec aas xchg mov pop jp scas int3 imul mov (bad) movsb push jne in mov inc popf scas imul xor fimull lahf dec pop addr16 dec pop out dec loope movsb mov xchg clc inc add dec xchg arpl pop into cltd (bad) aad daa enter add push mov imul lds cmpsb mov (bad) jno push (bad) std mov mov pusha ljmp inc nop add mov cld push fstpt cld setae and (bad) mov jne loope inc int cmp daa and aaa loope cmpsl mov scas push inc fwait subl clc mov dec or mov mov popa test mov pop adc out adc push popa mov pop cmp xchg into adc rol add out and (bad) or push xor mov sbb ljmp sbb sbb pop xlat mov jns gs das shr data16 mov lret dec pop sbb dec push in and jae sub xor dec in ficom sti cmpl pusha mov lret and imul fcom (bad) cmc arpl jmp fs faddl es orl enter cmp cmp mov pusha adc stos jg neg sbb push xor push aam fildll xchg cmp adc out stc dec push (bad) hlt add nop (bad) push les sbb jo push iret mov and mov xchg fwait mov mov jge mov xor pop out (bad) ficoml sbbl cmp (bad) inc out adc repnz cltd in cltd out data16 xlat xor icebp int3 mov pop fstp aas pop sub sbb sub mov rcl jge fmulp mov pop mov add add ss lock (bad) gs fild mov movl lods fdivrl fcomps (bad) xchg push les in andl jecxz add push xchg ret dec aas in popf enter mov lock je pop pop in xor cmpsb push mov mov loopne sbb orl pop adc fwait and mov sub push sbb jns xchg sub jns mov pop enter mov pop xor aaa pop xchg rol sti sbb out rorl and or in mov insl mov or add sub xor mov (bad) cmc roll repz rorl cwtl imul lret aaa bnd sbb imull ds faddl add subb xchg subl xchg sub aad pop mov cmp sbb sbb hlt insb cmp ret adc rcll xor xchg lock push insl jno stc cmpsb inc cs sub mov shrb inc xchg cmp or sar sahf icebp xor xor lahf out sarl cmp aas xor dec out mov rcr fcmovb mov xchg cmc loope pusha dec mov test iret sub or cmpsb cltd dec shrl js clc pop out in inc and movsb adcb inc fs push dec add mov add mov inc adc jne pop push or inc lahf das push daa jae out and lods xchg and mov jne out imul je sub add add sub ljmp xchg test std dec mov (bad) jae ret xor lods sbb and push rorl (bad) cmc jne call test sarb leave pop mov or mov enter sbb jl mov sbb add scas add xchg iret into adc inc dec pop test mov xchg push loop mov push sub jp fcmovne push dec cmp mov mov fs aad add insb enter xor or dec (bad) cli xchg xchg xchg mov xlat dec xchg les jl jg sub xorb and push insb sbb push rorl popa add imul aas ljmp arpl fisttpll add into test popa mov fstpt xlat push nop lret dec mov loopne jae cli sbb repz add mov sub push push daa mov test mov outsb or dec xchg mov (bad) cwtl aas sbb cmpsl lods ret mov test cmc adc mov xchg cmp jge dec mov cmp fidivrl je xor dec dec sub or xor inc shrl ret push push pop sub sub inc leave repz or hlt (bad) mov sbb push mov xor adc into aaa repnz notb shlb enter psubd lods cmpsl and push aaa sbb int ffree dec out cmp mov mov int3 cmc mov lret xor add add adc scas imul dec push cltd rclb adc shll sbb fs mov inc lcall pop repz int inc daa (bad) sti xchg inc sbb pop sbb inc sahf and jne xchg loopne mov mov xor fs inc sub or pop psrad dec mov add in add out jecxz dec mov pop test ja mov mov pusha gs push push pop test fnstsw pop stc lahf mov ja mov test adc xchg daa xchg imul pop cmpsb cmp or xor push divl daa xchg shlb sbb inc pop arpl popf inc xchg ja sub or icebp ja xor lahf adc dec dec out adc out and jno cmpsb (bad) ficom sbb sub addl xchg push push orl or lock addr16 add xor inc xlat inc loope pop jle movsb pushf mov enter push test jmp sub je sbb pop push xor stc aam mov and add sub jmp fisttp dec addr16 or cmp lea and lcall shrb xor jbe push sub xor fisttpl xchg mov pop add mov mov das outsb ficom lock inc mov pop hlt popa pop aad mov cmp sbb (bad) and (bad) add sub dec and inc test dec scas or add add insl inc imul mov pop push xchg pop imul sbb xchg andb aas mov xchg mov cmpl mov mov mov mov int icebp mov xchg push pop mov ret and cmpsb jg mov inc cmp mov jno add mov sbbb jb pop push jmp mov mov pop jbe movsl ret mov cs cli rcrl add ret pop loop std cmp cld xchg cli repnz push push pop xchg iret icebp aaa xor sbb loop or add xor adc cmp cmp cmp xor and enter jmp mov xor ljmp mov ljmp sahf sbb mov adc fldt popf fild xor inc cli xor stc call (bad) adc inc (bad) xchg xor ss sbb jmp pop lods mov aaa repnz loope lods xor pop xor out push repz (bad) cmp adc jae cwtl aas rolb lahf dec les sarb loope push loope mov push dec adc je cmp xor fisubrl mov pop mov cmpb push aad cwtl fimull adc xlat subl jno dec cmpsl or lds mov mov nop and and xor mov mov mov ljmp sub jmp int3 mov sub add xor adc sbb (bad) jne repnz (bad) cmp dec mov or sub leave push push jnp clc enter dec and xor xor (bad) push cwtl lock outsl pop xchg and add adc loop jmp jp sbb mov js sbb lret aaa stos xchg push adc xor jmp cmp add jno arpl add mov popa sbb mov cltd aas dec mov pop enter imul sbb pop mov mov out mov cltd aas or cmpsb cmp push aaa aad gs fidiv jg fist lcall popa and inc adc mov or int3 push xchg cmp and out mov add xchg and dec mov loopne mov bound jae daa data16 cltd aad and mov jae jecxz aas mov dec bnd movsb nop cmp xchg lock aas fldenv loope adc in inc or mov push test or and je pop sub (bad) adc push sub mov push gs sub fistpl dec inc nop mov and sar push (bad) cmp add gs sub dec adc adc aas mov insb mov or daa mov xor pop mov xchg mov push pop mov push shll pop lret mov cmp inc add dec pop xor cltd test jbe in inc mov fadds fbld sub (bad) mov cmp add scas and leave dec pop mov int or (bad) dec pop enter sarl mov test and lahf stc sub pop outsb pop popf inc push ficomp fst popf repz test in dec push jmp pop call pop fcmovnbe (bad) jae (bad) and cmc rcll cmp shl pop (bad) mov jp sbb ss lret xorb imul sbb imul (bad) daa sub mov mov (bad) rcl cmp fstl cwtl sbb pusha aad jmp or mov push aam ja pop call mov ret cmpl sahf cmpsb stos lret sbb aam mov shll cmp fcoml iret add iret andl sbb pop call insb iret aaa ret sbb add mov push adc mov sbb cmp sbb out mov popw cmpsb js std rorb mov mov stc xchg inc testb adc pushf pop inc sbbl inc shl and (bad) movsl mov stc stc dec popf jo pop std pop pop push mov stc (bad) jne mov xchg push pop push mov pop imul jmp adc cwtl pusha ljmp cmp sti sbb sub xchg shlb imul (bad) (bad) lock xchg pand icebp xchg mov sahf pop cld test pop xchg leave xchg ret cmp test or sbb mov mov inc dec pop pop mov loope or jecxz inc mov sti mov xchg sarl add adc out adc fldl dec je jl aas add pop mov outsb sub loopne incl (bad) out cwtl adc mov (bad) cmc lods pop inc xchg pop ss and pop (bad) mov es mov fnstenv xchg mov xchg inc fs aad mov repz add (bad) jg pop pushf push xor ficom xchg aam scas pop fcoms add roll aaa iret inc lahf jno out cs xor orl adc fidivr push fst mov cmp (bad) pop ret negl push dec sub cltd xor jp test add dec mov cmpl ret push xchg lret icebp or xchg (bad) xor data16 fstl repz test and (bad) cmp pop xchg cmp rcrl pushf jmp jmp push xor sti jp mov sti sbb clc pop xchg (bad) stos lods arpl std push mov int cmpsl mov add sub jae inc sbb sbb rolb or adc push cwtl aas dec pop notb jne cmp pop xor scas mov repz and or inc mov sbb lahf sub mov notb xor fstps adc ss xlat orl push jg in cld jle push sub inc mov ds sub dec into (bad) div lock inc mov jmp jae mov pop cmpsl inc aas std dec popa xchg hlt sbb je cmp pushf add es in cltd ja mov insb cmpsb mov mov icebp mov mov adc gs clc mov enter jmp cmp in adc cmp js ret jb imul scas xor mov (bad) jp cmc in das nop sahf stc sbb pop ss pop shrb lret sbb lahf mov mov or mov iret pop mov fs ja or ret les arpl in or cwtl clc int ds xchg int3 xor mov fildll mov insb dec inc loopne jne inc je adc xor xchg (bad) or fildll mov cwtl inc rolb xor nop mov jmp push call push ss rcrl inc pusha stc dec ljmp mov pop ss jns fs sbb dec call pop punpckhbw or add or xor fbld jg stos stos decl jecxz xchg hlt sbb sbb lret sub pcmpgtb add mov mov xor xor clc mov cmp pop jg mov adc js dec lea lds repz sti jp pop cmc int3 add mov sbb push mov lret dec adc push jle mov (bad) mov fmuls insb inc iret jns jge fwait aaa arpl jmp cmc roll repz or sbb dec loopne aad lret xor cli and cmpsl fsub add xchg xor mov mov add mov push ljmp jl sub mov inc xor leave nop pushf push gs mov lcall jnp add out sti cmpsb push nop xchg sbb cmp (bad) clc icebp out jge sub sbb push iret mov jns push sub lods call adc fs test pop aam mov nop pop punpckldq dec mov xchg lahf xchg insb das mov pop sbb xor adc xchg mov mov jb and popa or mov enter and push lock lcallw int3 jmp or pop sti je sbb add xlat lahf stos das push ficom add inc adc iret mov sub call loopne outsl mov aad inc pushf clc iret fwait xor movsl test je cltd jecxz enter aas (bad) cmc xor push mov (bad) test and cmp push dec loope iret movl add add icebp sarb clc and pushf sbb lahf sbb mov test leave nop pushf push fisttpll jl roll mov cmovp aaa cmp (bad) xor xor sbb aas fwait dec adc push jle or and (bad) mov cmp xor ret add dec adc or dec cmp sub pop mov xchg lret jge inc mov adc adc mov movsb bound jge jecxz fdivs push (bad) fldl sbb pushf int pushf add (bad) fwait ret mov mov lods push xchg mov pop jmp pop ss in xor inc or lods aas iret push ljmp mov leave sub data16 jbe les int3 xlat (bad) mov mov dec enter imul test adc movsl cld push (bad) (bad) cmp push xor and mov dec or fild inc pop xor sub add aam lds mov in sub in shr or sahf push push push aas and push ret std push leave inc xor testl test int ja pop add pusha scas scas mov dec push push mov lahf push jae cld into jnp adc mov (bad) mov push cld push fwait xchg push sub adc jb cmpsb mov inc push pop sub fwait jge ffree repnz rcrl repz scas mov add push mov or ljmp add sbb sub xchg stos ja subl and inc pushf pop out orb in inc (bad) aas out push pop add xchg push xchg ud2 or xchg jecxz xchg dec xor inc adc inc pusha mov (bad) or xor lock ret mov fsubrp int3 iret das out push inc pop lea aas xor outsl adcl mov xlat lcall scas inc into (bad) out ss mov push ja mov stc insb hlt sbb pop add fistpl std push dec push addl std testl pop sub xchg dec pop fcoms and into mov mov cmp mov fisub jle je movsb sub fwait jp fs stos mov sbb sub out adc mov add add add and cmp ret sbb xlat aad fstps inc fistpll dec outsb sbbl outsl mov inc adc sbb cmpsl rcll push clc (bad) jb sbb or mov mov in int3 loope in or push xor mov or and stos mov pushf mov aaa rol xchg add ret push scas cmpsl movsl popa inc rolb mov fwait dec mulb jns mov xchg fnstsw inc lock push mov fist push cmpsb cmp push xor scas dec loope mov and push jg add dec ss adc insl icebp sbb adc inc rcll enter xor in jnp fneni(8087 pop mov incb push (bad) adc and sub inc shlb aaa pop xor cmp (bad) int pop mov in adc into cmp add xor inc xchg pop sbb push jae sbb ret lods (bad) cmp mov jecxz pop cmp jl sbb xchg arpl dec add dec mov loopne mov (bad) jp lods xor mov dec sub out jl fisttpll mov sbb or in clc sub jle arpl mov rclb xchg stc cmpsb popf xchg jmp inc xor aad ret and rcr xchg inc ds test scas jno loop jnp mov mov test les shll or dec push out les into into mov mov dec in or pusha jns insl lcall es dec stc adc xchg in mov adc mov lret hlt stos loop jo std cwtl lds insb out jp sbb (bad) fmuls rorb cmpsl ret in dec pop push lret push fidiv adc push iret push mov shrl sbb fisttpl and push mov jecxz shll xor pop mov popa cmp aas shl fcom (bad) mov mov xchg fidivr inc lock cmp inc adc (bad) movsb mov mov lock jo pop mov inc hlt push inc fucomi mov mov pushf int3 mov fwait pop sbbb xor sbb adc sub adc pop addr16 and and sbb popf mov out push inc sti add cmp addr16 add xchg cld adc shll push cmp fcom ret and push jmp insb sbb jno js (bad) aas mov outsb adc push push outsb (bad) jae mov add mov xchg sub popa das lods fisttp lea mov cmp test sbb adc fisttp add fwait jmp pop and push pop repz stc stc (bad) xor call andl outsb adc mov out mov mov dec test add std sbbl or mov pop fsubrl popl lock ja sub sub mov or push in clc sub jle mov push insl cmp lret xchg inc adc xchg sub out dec jbe push cmc imul mov pusha lcall rcr jo (bad) xor dec out adc out add std lret test je fistpll mov aas mov out mov leave aaa sub mov adc mov jae addr16 cmp fsubrs jle add pop outsb mov movsb arpl inc mov jle push popf in adc mov dec mov push mov xlat push mov sti ret (bad) xchg inc lds int3 ret mov cs jl mov jecxz shll xor pop mov popa cmp aas shl fcom (bad) mov repnz loope jo mov in pop (bad) clc xchg in xchg aam jne xchg adc lock movsb cwtl loop mov cmp repnz inc pop mov sub jmp das lods lret or bound dec mov in adc stos inc dec in dec push roll (bad) cli les pop cmc faddl test negl adc popf sarl inc aad xor pop xor adc pop insb (bad) sbb jno lds and or ret test mov and sbb test fsubrp adc inc stos jmp xchg sub and add xchg and es xor xchg mov xor add int shrb mov sarb psubsb clc xchg jb push nop xchg cmp ret push mov cmp scas notl xor xor lock scas sub fstl xchg std mov push add hlt xchg pop insb je push mov pop push pop repnz dec add jecxz sbb (bad) and dec icebp cmc lret xor (bad) lea loopne aas mov and inc in gs add add mov mov sbb or in clc sub jle xchg adc mov fistl sbb fisttp adc scas (bad) mov imul repz or inc add fldenv adc in push addr16 or inc dec rorb enter cmp sbb pushl rep shr lret jo mov jp push mov xchg and imul dec (bad) mov xor push add pop outsb mov movsb arpl inc mov jle push xchg in adc stos inc dec cmc dec push roll les xchg repnz dec jbe ret std sub repnz lcall mov sub pop cld js movsl xchg je jne adc sbb jns movb gs add icebp bound lds jge (bad) movsb mov mov lock jo mov outsl outsl hlt push fs sahf cmp add int3 mov cmpb pushf out pusha xor jge dec xchg out adc mov dec mov mov out int3 loope mov mov push adc stos mov pushf mov aaa rol adc cs push scas cmpsl mov inc rolb mov mov mulb jns (bad) (bad) loope js mov std lea stos xlat in or mov or cmp (bad) mov popf mov hlt push pop fucomi mov cmp movsb call dec leave repz lods (bad) cltd sbb mov dec scas cmp xlat (bad) push mov ret test adc scas (bad) mov imul out repz or inc and mov call andl outsb adc mov out mov mov jmp arpl lea sbb lods add xchg popa cmp mov xchg adc cmp lcall (bad) pop cli mov cmp mov dec test imul xchg mov sahf fildl push inc inc and ja std cmp idivl and cmp pusha (bad) xchg gs fdivs (bad) xor dec out adc out jl lret test pop mov sbb mov cmp lahf jbe jae mov xchg stc xchg lods lret lret jp sbb (bad) fmuls add (bad) xlat rorb sbb repz dec pop js add ss push fidivl sbb mov shrl inc ljmp ljmp lds jecxz shll xor pop mov popa cmp aas shl fcom sarb repnz loope je mov cmpsb lret pop mov cltd jmp jmp push adc lock movsb cwtl loop popf mov xor mov mov jmp das lods ret or bound dec mov out pusha sub dec add mov test pop cmc faddl test (bad) mov loopne mov int or (bad) popf rcrl iret fwait mov and sbb push and repz cmp fcom ret and push jmp insb sbb add clc jno jae (bad) aas mov outsb adc push push outsb (bad) jae mov xchg stc fstpl repz inc mov add sbb mov lods fisttp lea mov cmp test sbb pop mov fisttp inc sbb fisttpl cli and enter sbb pop cwtl movsl (bad) call andl or cmp rcrl insl mov bound test dec inc sub lods add fcmovnu jp xchg pop xchg ss jg add adc add test rclb in mov leave and ss popf and mov mov cmp pop sbb xor jmp xor adc sbb add fldenv adc in (bad) arpl or xchg imul jo jmp aas sbb lret pusha out mov pushf mull enter lcall mov sub push mov addr16 cmp fdivl pop jg ds fdivl nop lret mov xlat orl inc mov xor scas inc adc ss popf sub mov mov lock fsubs cmp push push xor fsubrs mov jecxz adc imul ret push jb in inc rcrb decb cmp ret xor scas sbb xchg and test push mov add inc pushf or pop ss cwtl lock fs mov sbb adc fstl cmp add cwtl add orb jo scas add add rcll fdivrs pop cmp sub xor test faddl mov idivl stos test jnp mov inc into cmp pusha fnsave pop mov sarl or jnp cmp fcom ret cmp xor xor popf or xchg mov sti jmp icebp lret test adc ljmp pop fucomi mov mov enter repnz inc inc cmpsb and pop mov lods int pop (bad) cwtl cmpsb fcmovne (bad) and push mov and sub dec jmp loopne outsl repnz decb xchg pusha mov mov pop movsl xchg imul addr16 pop aas fstpt cmp and inc mov cld dec mov jecxz pop cmp jl sbb popf pop clc pop xchg mov add rcll leave jae cld add mov hlt add pop pusha loope rorb mov sbb or in in jmp xchg mov mov mov dec std fwait shrl and pop imul inc jae jp mov scas jno dec shlb (bad) lds adc mov mov je imul addr16 and les sub sahf out scas int3 dec mov mov inc mov in jb leave push aas xor cld xchg lods push mov xchg lahf add mov adc pusha lds test (bad) fwait mov test js inc xchg loopne lldt rorb lock ret ds push push cmp icebp fcompl stos (bad) adc lds sub sub sbb add push mov scas out cmp fist inc pushf mov pop insl lcall dec jo repz mov pop push xchg push insl pop fbld dec lods inc jns cld rorb imul add (bad) mov mov cmc add lahf cli pop imul leave ficomp jge mov rcrl cmpsb repnz addr16 and xor cmpsl jl mov mov and repz adc add ret lods std (bad) fs push xchg and add dec fldt lret ret and push dec adc mov das and mov aaa mov push negl push (bad) lret jmp jmp xchg into inc jecxz cmp push insl in push pop add dec in jno and insl and (bad) lret in aam lock mov lock (bad) pop push mov mov adc icebp cs cmc shrl jno aas hlt lea lods push movsl nop jmp xchg lock jnp sub sbb (bad) mov lods stos mov sbb xor ficom (bad) jmp cmp mov push fimull jl roll pop in sti jp mov push out push mov push out adcb inc in dec stos mov rolb push daa testb xor mov jns mov mov add xchg pop nop mov push jg popf fimull enter repnz mov dec lret push pusha dec loope adc dec xchg movsb pop xchg xchg adc aaa lds dec inc add jnp outsb mov pop imul lcall inc jbe cmpsb gs setl pop fwait jmp inc rol lea push adc and and fs insb test icebp aaa out lock xchg cmc jl push pop jbe xchg mov outsl ja out push out mov bnd out or mov push cs data16 lcall out adc movsl sub mov loope mov adc cmp xchg and sub pop pop pop into rcll adc loop insb stos sub jp or inc mov call adcl cmp cmpsl pop lcall fidivr (bad) and sbb cmp sub pop jno cmp lods add prefetch sbb ds or or xor outsb xor movsb mov mov test ja and lock into push mov mov mov gs leave mov movsl fcmovnbe dec aaa dec cli xor dec sti scas insb lahf in xchg push inc add ret jl pop scas add sarb fdivl mov mov inc insb js lahf jae imul add les adc out aas sarb (bad) inc arpl fildll and mov and mov lds lret cltd (bad) icebp cwtl hlt jb pushf mov lods add push push push sub inc cltd cmpsb adc scas adc push (bad) shr mov sbb inc jbe and add mov mov pop in das add pusha and xor jb dec mov push sti cmp lds lods dec sahf leave les addl cmpsb jg nop imul aas dec mov add lret cmp js push mov and fs js sti adc addr16 lods add outsb pop push mov enter dec sub or mov mov push js or fwait scas inc adc dec roll rcrb cltd enter ja ret mov ret scas outsb adc std inc mov imul sub xor ret ljmp ret add sub fsubp sarl sbb loopne data16 lcall xor adc rorl adc mov adcb adc out mov ljmp adc push xchg rcrb mov jge xchg cmp or outsl inc iret inc lahf jno or lea cli rcll add jo adc pop (bad) nop stos inc jns xchg cltd mov mov into fnstcw add gs arpl (bad) fwait clc add dec repz push (bad) cmp je mov mov xor dec and in add adc sub loopne xorl fcmove (bad) pop jg push mov adc popf sahf scas sarl fwait mov add xor inc dec sbb pop cmovb repz cmp push mov sti ret mov out jecxz inc cmpsl loopne cmp notl shlb fwait aaa or (bad) cmpsb dec push test loope aas hlt insb inc mov loop add insl sub xor insl cmp int3 out push sub cmp insl add cmp fdivp pop fs mov inc scas enter inc inc mov lcall rcrb test iret inc xchg lock shlb inc xor push imul bound dec (bad) push into in dec xchg cmp fidiv mov iret sarb imul test aas dec mov adc mov insl cmp int3 (bad) hlt mov stc ret pop incb xchg rorb repz sbb pop lahf xchg add jmp jp mov xor inc cmp add adc (bad) int dec inc cmpsb int3 xor push pop ret inc dec pop dec popa lahf mov add mov aaa nop jge dec mov and mov mov dec xlat fwait aaa arpl push inc movsb dec rorb add and and in add ret neg cli cs lret pop fs xor je (bad) in gs xor dec cld loope (bad) or movsl inc rcr jp mov ds lods and and jmp movsb arpl por mov (bad) lock iret lahf push fimul ds les push jl cs faddl mov mov daa imul das out sub sbb mov imul push cmp sarb and pusha out push and mov push adc mov add repz pop lret xchg and popf hlt test cmpsl inc dec cmpsl cli jmp jno int3 cmpsl xchg gs mov add mov repz inc dec aaa cmp fadd and xor cmc cmp fcmovne sbb test inc mov repnz mov aad mov inc fildl ljmp mov jbe cltd test cwtl aas (bad) cmc (bad) fcom (bad) mov out push pop repz inc xchg mov push test adc cmpsl (bad) aas mov and rcrl aad loopne xchg adcl cmp rcl jle iret ret stc sub jo xor imul add xchg lcall push jbe sub jno dec mov cmp addb adc ss repnz pop shrb inc dec inc jmp xor cmp int (bad) jo (bad) dec cld add dec (bad) xchg mov aam pop (bad) xchg cmp loop mov adc ja cmp push imul subb stc push xor outsl pop dec test insl inc jge mov mov dec scas inc inc push pop ret inc dec pop fwait jmp pop ss sbb inc pop add or lods or out fmuls out addb pusha (bad) xchg mov and ss dec inc jae cwtl dec dec cmp lods add mov dec xor add inc sbb jns (bad) mov push loop mov pop int das test pop dec in fdivs pop lds mov push sbb pushf add in pop (bad) cmp push xor loopne inc inc jns lahf stc cmpsb popf addl inc xor sahf cld mov adc outsl enter test lock out call xlat jae sahf jae outsb pop cli mov lods sbb fs das into jo pop sbb or sub stos push out cli outsb jo sub movl mov pop inc mov adc test call cmp mov pop jbe gs sbbb lea lret inc jnp push add xor cmp jl push mov sti push xlat lret sbb push fsubrs mov mov out dec (bad) stos jl int3 shrl add call imulb ret add fcomip (bad) std cmp push dec lods fcom ss sub jbe xor dec test cltd in xor mov jne add cmp and aas pop decb jg jg push push loopne neg test adc xchg jg cmpsl push or gs ss shr adc stos and ds mov add stos xchg test push jnp cmpsl pop dec movsl cld dec mov push loop or (bad) (bad) sub jbe (bad) mov je jle adc mov push xchg lret push cmp pop (bad) loopne xor push sub dec jle jge test and mov or aas cli push inc mov in outsl arpl sub cwtl and call adc adc sbb in adc das dec in inc dec mov pop icebp cmp fisttpll dec into cmp push call lods shrb xchg mov into (bad) ljmp mov cmp xchg mov jge lock push loop and mov in gs fld mov cmp jnp insl ror and adc out or movsl cmpb cmc dec in sbb jmp push dec ds jle sarl inc test mov fmull xchg mov and inc mov rolb fcomps xchg (bad) xor pusha cmp outsb das roll pop push pop xchg lret shll lock pushf imull sub arpl inc mov test inc jmp outsb pop jnp jnp popf mov (bad) clc fcomps xlat push sbb in jb (bad) xlat roll (bad) aaa cmp mov into cmpl (bad) mov (bad) clc mov andl (bad) call pop and jge jg inc mov pushf cltd fnsave out mov insb je cmpsl cmp push xchg mov cmc arpl xor repz jne (bad) mov sub xor and adc dec xor fdivrs push mov sub push outsl into mov rclb xor iret push es sarb inc mov cmp add clc leave sub sbb nop sbb mov ja pop xor stc xor add stos dec out cld pop hlt popl xchg mov arpl in inc out lcall mov cmc arpl arpl test loope in (bad) mov test mov mull push fstpt add push mov xchg adc imul iret adc in mov test add add cmpsb pop (bad) cmp std aas xchg fiaddl mov jns sub sbb push sub xchg adc jg pushf cmp push and mov scas sbb sti sub imul lret js xchg inc xor imul bound inc lds sbb fnop and mov add icebp or cmp fwait adc enter mov dec dec xor das jne inc mov shrb mov mov pop cmp out xchg and nop test push xor push lret add out clc into loope mov pop sub repz inc sub arpl push cmp add popf mov xchg enter pop xor or push dec in sbb mov push add pop loop and jge add out lea or gs xchg lcall gs ljmp movsb push loop sub aaa push mov bound dec scas in add mov clc leave jbe je imul inc (bad) mov lahf (bad) mov pop add les bound pop in outsl mov fwait mov mov mov mov out push xchg mov loope lret jmp mov (bad) jmp and addr16 add cli (bad) out fadds sbb or insl pushf sarl sbb xchg or cmp xchg test sbb dec sbb jecxz or jno loop jne (bad) mov int mov mov fisttp pop imul add add add jae inc aad inc cmpsl pusha jns insl xchg bound jns dec test xor aas lods jge iret mov scas jle cmp or mov hlt push pop sub divb mov push lahf ja enter mov jne xchg mov shrb mov outsb scas pop cmp out xchg and sub lea mov jb and dec ds call icebp mov xchg mov les into lea insb int sbb jns sbb es mov outsl xchg jp sub bound cmp dec and xchg pop pop stos jne test fiaddl loop lret ljmp mov pop inc mov test push add clc pop (bad) aad enter stos xchg clc and push aad and pop jmp cmp fbstp (bad) imul scas or xchg ret jns pop cmp and stos mov sarl or daa lds cmp jl jno xchg xor fcomp fidivrl cwtl int test pop sbb jl and lret sbb xlat xor or rorb insl mov mov hlt push pop aad (bad) mov lcall mov call push or jecxz int3 es call jmp inc sub push mov lret push inc stc mov aaa data16 hlt sbb mov (bad) call (bad) out and stc and sub or cltd ds mov lahf popf mov insl and push aaa lahf in adc sub (bad) scas jne jle in push outsl adc jb aas add and or lahf and sbbl loope add adc mov out rorl clc arpl hlt mov xor jmp lsl xchg xor pop dec andl lods add pusha sub hlt push cmpsb xlat cmp insb adc call insb fiadd shl js inc ja,pt jle push fildll dec leave xor inc ret sub lds test rolb sti out fisttpll fist notb fucom inc out pop pop test movsb pusha int fimull jl roll xchg add mov pop jb xchg push (bad) nop mov push inc sti cmp pop aad lret jnp adc pop (bad) dec sub xchg xlat pusha sub hlt pusha push sub mov les into mov mov mov ss bound lcall jle push in pop and or popfw dec pop sbb andl pusha and jbe inc fistpll push outsb mov pop mov stos out sbb inc xchg inc scas inc adc dec jmp and mov dec outsl les pusha stc leave push adc daa inc frstor (bad) mov and or mov subl mov cs adc jp ror and push mov repz cmp pusha pop cli data16 cs xor in inc roll pop add std cwtl popf mov sub lret pushf data16 hlt jecxz ljmp mov fildll add ss idiv and push ret test inc jge outsl add add lcall pop ret icebp cmp push mov loopne lcall and mov popa rorb aaa dec (bad) push xor insl dec jge mov jecxz push cmp in add cmpsl (bad) hlt mov mov mov mov imul addr16 sub scas and adc (bad) in sub jmp mov jg test xchg sub in test popf mov aas cld out cmpxchg movsl daa lock cmp xchg mov mov inc stc lods pop or addr16 jbe ss icebp pop jns mov rclb pusha adc or mov xchg bound jno lret push sbb hlt xor push inc movsb and mov mov dec push pop jg lods push xchg inc cmp dec data16 pop pop shlb mov (bad) lds mov in orb push mov aas adc (bad) out inc cmp fdivs je inc faddl stc mov sbb test fbld out jl lods jno ret mov les into lea mov leave lret mov jecxz je or js es push pop xchg inc mov inc decl test jns stos stos lock stos lods mov lcall mov out nop ret cmpsl sbb xchg xor xor call into jo adc popa setae sub shrl int push iret stos and sbb xchg cmpsl jno adc inc rorl xchg xchg and mov jp sbb cmp aaa xchg jge incl mov inc cmpsb cmp push aaa sarl cwtl test (bad) scas movl scas dec imul cmpsl lret (bad) xor pushf mov mov cmp push clc xchg notb push dec scas adc mov andl dec pop dec cmp lahf fsubl sub pop fcompl clc cmpl adc cmp aaa (bad) push daa pusha aaa std ja pop insb je cmpsl mov dec jl movsb ja inc push fs inc mov pop or xchg jecxz and adc and fistpll dec ret jmp inc pop dec inc movsl rcr cld in movsl pop stc mov add xor mov stc jp leave stos dec data16 out mov leave daa sbb (bad) xor jle inc and mov shll (bad) mov pop (bad) jno xor or adc out rorl xchg pop mov or movb push jnp fadds mov push add jecxz sar jo inc faddl push cmc cmp jbe push mov add pop int pop mov nop push dec rcl add enter mov adc or add daa mov daa popf and ret imul jnp xchg push out inc das cmp push cmpsl imul (bad) push mov scas call dec jns repnz lret push cmc (bad) das push push dec pop xor (bad) pop or pop daa in dec push movsl pushf or mov daa xchg imul rcrb pop cmpsb movsl mov add mov dec cli xor imul pop dec imull inc pop adc inc pop mov clc fistpl adc cmpsl loopne cmp iret pop xor dec out lcall jae push jae aas outsb xor enter push cmp add xor iret adc gs outsl cld out dec mov orb adc jl out lods ja mov scas mov test sbb pop xor popa ret les je ss psubsb ss int test je add (bad) (bad) and inc mov and cmc ret rol out xor out sub dec cli les lret mov jl push (bad) cmp xor jnp cmp call add scas ret or or (bad) aas mov loope adc mov sub pusha or mov in in rolb addr16 xchg pushf add add gs loop stc or inc jmp sub jno sbb fsubrl dec repnz pop fdivr inc push xchg loopne shll stos adc loopne adc pop repnz pop cmpsb xor cmp (bad) bound or and push adc insl call pop (bad) and dec stc in fsubs pop mov test xor lret or out jl dec in jmp addr16 call mov jg bound loopne jl bound push scas pop push add mov cmpsb and inc pushf adc push fs add add adc fstps sub mov (bad) pop mov pop mov ret rclb mov inc std aas frstor insl xor lds lret jg in inc mov loop and jge stos sub jno inc fistpll ffreep mov mov push pop lds stc (bad) fstpl jecxz addr16 loopne inc xchg mov xchg inc test popa adcl jns add push enter mov mov pop xchg push and (bad) inc push mov aas jg into mov mov ja data16 or mov xor dec fwait movsl push add sti cltd cltd pop mov les gs fiadd mov rcl ret test and xlat add int arpl mov inc add add add psubsb clc (bad) jl (bad) fnstenv or out popa test negl push je pop lahf mov jecxz lods in cmp sub mov fwait and je jne mov or pop popa rclb dec xor std sbb xchg lock pop arpl nop mov or jb jo jmp xchg fidiv in lret popf enter xchg xchg aas add mov incl push (bad) (bad) mov test movsb orb repz fisttp call les cmpsb push sbb push dec xor (bad) sub or pop push push mov jl (bad) jae cli push fs xor repnz sarl pop (bad) xchg xchg mov ret imul inc (bad) mov jns out push push cltd loopne loope test cmp div sub xor add xor mov nop dec arpl insl jmp pop jg push push sub push loopne ja shr push sbb pop enter mov (bad) lock cmc cmp fcmovne sbb aaa stos xchg scas scas ss test mov push shufps ret push add movsl pop sbb or imul enter sbb je fld mov push sub sub aas mov sbb aad movsb jmp enter inc add imul pop in addr16 das enter dec (bad) test jmp clc pop dec (bad) clc leave stos jns fidiv jbe inc xor shrl lcall or xor fistp mov mov leave movsl lahf xchg das rorb sub jg (bad) mov jg jle (bad) rcll hlt pop and cmp loopne bound dec dec test pop stos cltd cwtl aaa jae dec loope fs xchg fnsave xlat mulb cli cltd iret ret or roll xchg add icebp mov jns adc out ds xor push and and inc mov cmp push daa negb (bad) fcmovnu imul out jae imul sti adcb cmpsl nop xor xchg pushf mov and add cmp mov aas sbb ljmp movsl add pop lahf xchg push mov ds adc jmp int3 (bad) enter out test iret inc sbb int ret add push pop cmp std rol mov lahf imul dec (bad) or pop pusha gs pop push or cmp sbb xor mov repnz faddl adc inc pop or push dec xor cmp dec lret mov aas into lock dec adc push (bad) shll fmull test xor stc cmpsl dec xchg and inc cwtl push cwtl pop test sbb sub jecxz or fstps cmp cmp xchg push pop and leave push jg aaa test js mov fisttpl mov jge movsl dec outsb jmp pushf inc std and idiv add int3 bound into mov cmc icebp or xchg mov push adc mov int3 xchg mov stc je sub adc cmc sbb add pop sub test movsb sbbb (bad) jmp xchg (bad) dec and fs inc dec sarl fdivrs and add loop scas adc (bad) push push outsb fucomp in leave (bad) nop int fsubl scas rorl gs icebp adc das (bad) cltd mov cmp cmp jmp aaa hlt sbb pop and mov adc push imul clc iret loope sbb dec fiadd pop xor lcall aas ljmp mov pop dec cmp sbb pushf jne jecxz jmp lds mov cld mov mov shrl out jno les out scas mov and push mov loopne mov mov or shlb (bad) hlt es sub scas push jae in lret lods pop insb je rol (bad) popa mov or mov push push out lods lret jo dec adc (bad) mov adc and sub jp inc and and ja addr16 adc (bad) add sbb inc call inc addr16 js in std pop push mov push push (bad) and xor or in add or dec cmpsl jbe adc dec or dec or push mov pusha jns insl xchg bound daa xor aas loope mov mov mov push adc fildll mov or out jp adc ficoml cmp add imul lahf sti testb test pop les imul (bad) mov jbe leave push and mov add movsl fwait movsl jecxz mov cmc cs cmpxchg and test mov mov or fwait loopne fidivr out mov dec adc xchg out scas sbb mov push insb rol stos imul stos stos inc jae xchg and mov leave dec dec inc jecxz adc js add jae or insb and inc or pop out test xor jne,pt ljmp or jle in mov hlt in or ds test subb xor mov or push mov imul mov add jmp bound in dec cld sub push arpl outsb aas popf mov add mov clc push push mov pop cmp nop adc lds test inc jecxz les jp adc stos xchg add sub mov jne sbb cwtl repz mov and mov mov notl jg jbe div mov jnp outsb add pop ret push adc movsb pop cmp sub pop jno jmp mov adc mov push xor lret ds insl fisttpll and and cmp sbbb mov mov mov cmp mov jp xor loop cmp les cs stc leave push xchg push fdivrp rcrb (bad) xor xor jo push sbb imul push aam or test rcrl cmp xchg lret push xor add mov mov (bad) dec in push mov jno test sbb mov in lret jle fucomp pop out (bad) cwtl sbb add jb jb lods cmp add or mov std cli add dec pop xchg inc xor rorl ss repz mov cmpsl pop mov and jge xor (bad) mov jecxz pop inc popa cmp xor fisubl mov iret ret daa mov pop test out mov out mov dec and push ljmp ja cmpsl mov push pop pop repnz adc mov dec (bad) or adc jecxz cmpsl rorl adc and in lods jg decl aaa inc sbb add daa movsb out (bad) out mov fidivr mov cltd fnsave pop movsb adc jg les cmp push jle int lret xor dec mov (bad) adc iret cmp mov jp mov mov (bad) lret inc push xchg in xchg xchg inc pop shlb pusha in inc mov sub jle dec dec jecxz mov cmp sbb ret mov jne (bad) mov fiadd imul aam or mov mov outsb xlat xor pop jns jle jl push xor add add dec mov fmulp ret xor sub out adc out cmp addr16 sub ret xor mov cli push lock mov and fsts jecxz add pop out int jne xchg push out mov adc or aas or shrl sub xchg inc xor fcom push inc add cmp js aad repnz repz lods push test decl mov andb xor adc cs xchg jmp mov mov xchg or (bad) mov leave xchg insl sub cmp xor jbe aaa mov lcall xor pop rorb call in lock mov and push fdivl xor inc fild nop pop inc test roll ds xchg push mov cmpsb xchg add adc lret nop mov enter ds adc in subb daa and popf outsl push je mov movsb adc in popf enter ror ja xor or std cld pop fildll add xorps or xor push cltd or add in lret (bad) pop mov cmpb stos inc jg cs (bad) add pop sub mov sar arpl inc (bad) mov mov sub push (bad) lock clc mov popf repz clc shlb ret add and mov mov cltd mov add les push inc int3 repz or xchg mov mov xchg dec and add lea lret loope push (bad) xor dec mov dec add push sub push es mov popa and inc adc push mov aad adc push pop inc add fcmovnb inc lret movntps inc (bad) dec pop lss add xlat movsl pop int add daa push ficompl stos xor add loope addr16 ja int inc lret fstps or insl cmp xor gs mov dec pop mov push aaa test jnp loopne mov pop push frstor or add clc pop (bad) cmp iret inc dec in mov jp sbb mov lds add cmc sub sub sbb jp adc xor repnz ss push xor lods pop pop sahf pop loop inc add shrb fs mov jmp and enter inc cmp test inc adc lea mov pop xor aaa (bad) adc push or push gs sub jl xchg stos mov sbb adc push jns test out cli xchg mov push mov fwait nop cmp sbb cmp pop arpl jmp pop mov mov rorb int3 movsl push push fwait mov sarl clc xor and aad or push out aaa jo cld cmpsb test or add jmp inc cmpsl mov jnp call in cmp out inc fist mov pusha aad sub inc push rcrb inc push insl cmp mov mov mov cmp mov decl mov test adc fstps mov or mov jg dec or jmp dec popa outsb movb outsb fcompl dec call fisub (bad) call out xor hlt sbb roll (bad) nop mov pop in add cmc fdivp cltd fdivl gs nop mov notb pop sub fwait mov fsubs xchg dec push addr16 ds mov repz inc sbb stos adc sub fsts xor enter xor out fmuls inc add inc adc dec jp rclb pop or popa outsb inc rclb mov cmp (bad) js fbstp int3 xor add (bad) js es mov aaa cltd gs and addr16 pop push repnz dec jae shr xchg and dec xchg icebp movsl sub loop in dec test into mov xchg adc add mov (bad) pop in mov mov pop mov (bad) and pop mov xor movsl rcrl add xchg lahf push add xchg rcrl mov fisubl pop pop pusha sbb scas bound xchg shrl mov repnz fwait cmp inc js (bad) rcl in xchg mov in mov sub adc jl scas sbb clc loop in jp jecxz out popf dec sbb mov (bad) xor imul mov dec cs mull std push xchg adc sbb scas xor inc and xchg xchg ja xor stc js dec push add or in mov arpl inc aam pusha cmp or mov jecxz adc aam pushf loope ror into inc mov xchg jne daa jle movsb subb sub pushf inc popf mov out imul xchg add dec mov ss insb test arpl fisub sbb mov lock fdivl adc out and (bad) and loope popa ret repnz pop push stc dec hlt sarl ret ss add cwtl push push fldt xor push cmp cmp loop cmpsl mov cmpsl fstpl push es push retw mov mov ret scas aaa mov out mov jb add sbb xor and jge sarl sbb or adc jne enter xor imul scas mov icebp pop ljmp sub push add mov inc cmp bound inc and mov out out mov adc fildll mov fnstsw add add icebp insb fwait shll cmpl and addr16 mov jp fadd sub inc ret inc push or xor sub xchg add mov mov in mov add stos cltd and and add inc sbb mov push mov or pop mov roll aaa jnp (bad) leave gs out cmpsb cltd inc xor js xor adc lods lcall (bad) out inc mov push cli mov cmp sti cmp mov jo pop xchg ret (bad) dec sbb xor addl xor add imul and mov push xlat pushf lcall dec sbb inc (bad) mov adc int3 cmp inc test ljmp (bad) cltd in js pop add in (bad) or int xor (bad) clc orl add xchg cli sub xor mov int3 jp push xchg mov scas pop jb and es xor cmpsb leave adc add inc ror call fwait inc add and stos (bad) push pop inc fistpll add lods xchg sbb cmp sbb das gs add push std push inc imul ficomp xor movsb test jnp mov xchg ret pusha fistl out inc stc mull jns push dec (bad) jecxz popf clc ljmp addr16 jp jns push outsb or inc jmp sub mov fistp pop cld lods hlt enter mov lahf or adcb test inc inc pop call add cmp dec xchg js pop adc inc clc inc dec xchg hlt fldcw mov jp sub call cmp int jg insl xor aad sub sub xchg repz imul aaa jmp jecxz push data16 mov scas mov fcomps jecxz (bad) push out xchg aas mov mov xor pop mov call dec xor sbb orl jecxz mov and and pop popa push fs lea in mov xchg dec enter mov mov add xor cmc pusha adc mov sbb pop and ja adc fmull mov divb in pop cs aas pop mov movsb xchg or add dec mov cmp and ret outsl mov fiadd pop lock mov lock dec (bad) xchg lds push xor mov add and ficoml ret lea sub (bad) test pop mov (bad) jb rorb xchg imul loope pop xchg mov out in inc arpl or pop pop mov mov scas xchg xchg or dec negb jno mov imul hlt jl in stos push fmuls sti jb arpl divb std push dec adc out mov in mov add add pop fwait pushf notb shl pop lret pop mov jecxz test dec lret popf inc inc in scas pop sub jge fucomi push add mov rep bound jmp xor out jle jne adc lret out or lock inc fsubrs lcall rcrb popa mov fisttpll sub jge (bad) pop shll fistpl int xchg jl pop inc mov test cmp cltd jge xor or sub je or push or out stos jno jge jbe (bad) popf int3 cmp lcall cmpsl pop iret mov decb imul adc divl mov and or leave lcall sbb scas push add push and shlb ds pop rcrl push and rol (bad) hlt out mov dec add xchg sbb mov test scas (bad) fs mov add add fadds push pushf aad dec add fsubs gs adc fisubr pop pushf int3 mov stc push dec mov pusha test and or cmp stos push loopne lods jecxz or or push pop jns push mov divb dec shll std mov stc push mov push insb or addr16 mov pop dec jne pop out mov and and mov pusha push movsl and test jno xchg pushf clc add sti sarl int xchg fldt loopne clc lret push dec pop inc mov jmp xor roll jg push (bad) stos and testb add int3 dec mov and dec pop stos pop mov push fcos push test lods mov dec add jo xchg add cmpsl pop dec lods fwait imul stos sub enter inc stos (bad) sbb adc incb mov push ror ss xchg (bad) adc aaa push push inc insb push inc setno (bad) fadds mov mov jns jl or cmp enter mov and xchg fldcw lock int3 pop lock inc sbb push xchg ret enter xchg (bad) sub mov mov adc (bad) and fwait mov popf cmp mov mov loop mov pop sbbb inc xchg call push (bad) out stos sbb cmp pop sarb push loope in pop stos pop cwtl mov mov insl enter sahf add (bad) adc test popa scas sub cli std jbe push add sbb repz sbb negl adcl dec idivb and fistl mov fldenv clc popa inc pop imul add (bad) sub jl sub (bad) mov inc sub or (bad) imul test test and jbe (bad) das shrl pop cmp mov popf lret pushl faddl rclb xchg cltd mov push repz cwtl mov xor adc ret out mov and adc aam in dec dec enter stos sbb imul pop cmpl std pop (bad) fmul sub xchg mov out test jae pop out mov pushf inc mov dec add mov int loop cli sub or cmpsl lods mov add sbb add xchg xchg cmpsb dec adc cmpsb add lea dec (bad) cmc lock mov imul mov mov rcr lds cwtl xchg mov fsubl xchg mov adc inc pop movb imul (bad) mov aad pushf lds xor dec ljmp iret outsb mov aas scas test and dec (bad) jmp inc mov xor xlat (bad) sub (bad) fdivl push push dec imul jbe or jecxz test clc push pushf pop stos ds or cmpsl dec inc sbb xchg dec fdivl and lret int3 jl sbb sbb loop jg xlat jl (bad) sub (bad) inc out fdivrl sub or jl xor adc add inc and and das test jae and dec clc (bad) mulb pop inc jae jo popf fsubs mov pusha xor std adc adc test jmp mov adc mov push mov in or push mov inc lock cs cmc jno inc xor fisttpl sbb mov sub in jecxz loope fcompl hlt dec imul arpl cltd cli mov into leave jbe sti fsub xchg mov shrl stos std ret sbb cmp lea mov stos adc nop add jge movsb xor (bad) (bad) adc cli mov push or cmc ret add clc hlt sarb pop fbld mov jle fsubl pop je mov add add add add fwait mov subl mov dec movsb inc mov jmp xor inc dec jp imul in es mov mov and xor (bad) xchg test call cmpsl dec xor fimull xor mov das adc out push movsb cwtl in and mov pop pop mov dec mov aad das dec push aaa mov lret pop jle inc sbb and fstpl movsb push pop daa pop mov dec and cmp (bad) cmp je ja xchg jae imul pop popa cwtl sbb mov push sbb xchg shlb les insl push (bad) mov stc adc std lcallw imul aad mov xchg into add ret xchg es lds push insb jmp mov jecxz rolb pop pop push aad repz sub imul lds xchg fucomp sub push jecxz inc sar ja aaa rorl add cld lcall inc inc loop push mov sbb int3 sti or aad dec test mov mov mov leave jle test andl xchg xchg jecxz in add push mov pusha pop pop and push push (bad) mov add jl fs pop sahf (bad) fidivrl jmp xor cs lret xchg mov call mov scas rclb mov pop jo loope (bad) mov mov fnstenv cmp scas (bad) loopne add jbe add cmpsb pushf mov and cmc lods mov sub stos bound repz mov inc (bad) mov lods int icebp hlt or adc jp xor and sub xchg sarb cmc mov mov dec in push mov subl cmp fcomip xor sub dec out (bad) fstps cmp int or dec cmpsb iret xor mov (bad) sub fistl mov adc aaa mov (bad) jmp xchg adc sub pop lds xchg add in inc das mov xchg sub das jno jp sbb in test cmp pop into xchg mov mov jge imul mov sub dec xor cli fistpll repnz ret stos sub std roll add add cs xchg add jnp jge mov xor xor shl pop sahf mov lock xor or enter or faddl mov sahf sub rol dec (bad) shrb int pushf loop push lret pop pop aad mov inc mov and add dec mov into mov dec sub ds sbb jle and sub adc ds dec (bad) jo xor push fildll fs lock cmpb sti cs inc jle mov dec fsubrp loop pushf call lds xlat mov into rorb mov mov jnp mov rolb dec das mov cmpsb xchg out inc lar and nop jb mov push gs cmp xor aam jno sarl out inc inc enter and xor add jo ljmp mov ja jmp mov push fcmove gs in cmpsb out movsb or sbb inc jecxz sbb test mov lret shr or mov or push and push or nop xor push sbb dec addr16 cmp xor in mov (bad) (bad) sarb test sbb outsb and enter movsl mov popf mull test lds and jg dec jb pop outsb xchg cmp ret stos aaa int3 icebp test and out fsts div ds mov pop mov ficoml or dec scas jecxz pop and xchg icebp dec cltd xor add sub pop test cld mov ret mov repz add inc jnp inc cmpsl aaa bnd cmp add pop imul ret movsl rcrl imul (bad) inc into sbb jb rorl dec mov into ret push push mov int call inc xchg cmp dec jl outsb insl lret adc shrb or mov arpl pop cld bound inc push pop inc fnstenv dec xlat neg push movsl aas and dec sub xchg inc push out repnz insb fstl jbe aam stc rolb lds pusha inc xchg out inc jb jno (bad) mov mov adc sti push mov adc or xor jo dec mov mov ds mov cs in pop sbb jbe test jae push imul stos cmp pushf sbbl not popf mov pop jb popa inc jns add add xor cli ss pop mov mov dec or xchg sahf fs or sub mov or mov or xor ja pop sbb jg inc lock or sbb mov sub test std iret sub sub adc cmc roll ds jecxz (bad) mov adc mov mov mov add adcb or inc inc ret daa and enter dec popf call pop adc adc xchg xchg jp aam loop mov loopne inc jmp (bad) hlt adc lock xchg jmp mov in gs test xor inc mov sbb es mov mov imul or imul pop neg lea out aam push ret ljmp lods mov push and ja sub mov dec test daa not and dec movsl xor movsl (bad) mov mov cmp in or les cwtl pop sub dec pop mov enter inc fistpll sbb insl lods mov pop sahf adc sub or jg xchg gs sti sbb jmp mov pop mov mov mov sbb xchg into xor or pop ja or push je pusha imul cld ret push (bad) lcall jle (bad) ficompl push push aas xor cmp jne (bad) in cs pop jbe jmp sbb mov es dec popf inc imul cmc in pop loope addr16 add sbb cmpsb mov bound fsubrs cli xor adc mov les xlat mov popf mov sub add pop mov cmp adc fs rclb test in push pop xor movsb and cmp xchg lret pusha jns cmpb fdivs lret pop mov fbstp std fs pop in lea or es adc mov xor push lock cmp ljmp or aaa xchg and pop xchg insl rcll push cmpsb jo or int sarb (bad) jecxz pusha pop loope clc or (bad) aad push fstps inc push hlt adc sub cld xor jno or in fwait arpl xor add (bad) fs jecxz lret je and cmpsb xchg add outsl mov aas dec mov sbb hlt imul or (bad) mov mov mov mov and push les pop lcall cmp pop cld mov ljmp in jb fst fldenv add jne daa fwait aaa arpl mov add push lret js sub pop cltd sbb xor mov ds pop xor mov mov repz and (bad) clc insl or xchg in cmpsb or sub xor dec fwait daa gs or ret incl mov xchg pop xchg daa inc dec sbb in dec mov (bad) outsb add xchg pop add out cmp mov xor je mov loopne push icebp cld loop popf adc in subl xchg add mov or sbb push test jmp fidivrl dec inc mov cmpb push mov and add ljmp pop fdivrl insb add mov and rorb leave ret mov mov dec mov push sarb dec mov ret (bad) loopne pop ret add ljmp jp lock jge lock addr16 hlt pop and mov cltd or aam add jecxz stos jle or cwtl cmp sbb pop push daa dec mov rorb fs scas test dec (bad) mov iret inc xchg mov add mov sub mov outsb and xchg mov sar push push xchg repz mov lds push push xor jae repnz and cmp in push mov inc ds inc mov lock mov scas add push leave stos sub das test jnp sbb mov aam inc incb (bad) loop mov jnp iret xchg mov push dec pop ret adc jnp or sbb ss addr16 jo movsl movsb inc fadds pop rcll shrl push cmpsl daa movsb bnd dec xor rolb ja fldt adc dec adc xchg mov cmp jbe cmc and push pop cmp notl cmpsb jbe pop sbb loop adcb scas push aas fst xor ss adc sub cltd add add pop or mov fmuls push lock sbb pushf stos mov shll cltd jo rol xchg push movsb not mov jb ds push xor and adc fsubrp cmp jge add int3 pusha cmpsl lahf pop mov mov mov movsb xor pop or addr16 xor scas in add call mov mov (bad) popf or jbe fisttpll in movsl aad mov mov pop imul test jns arpl ljmp sub lret sub fidivl stos int xchg pusha arpl stos ss popf sub in mov jbe ljmp inc mov mov xor iret cmpsb xchg into popf xchg mov push icebp testb pop stc movsl add es mov push (bad) xchg (bad) xchg and mov sbb fadds repz sub add jno jg or mov add in cmp js je sbb cli fwait sbb ljmp and nop dec mov sbb lock rcrl sub pop jge (bad) xor add push xor (bad) dec mov lcall mov fs xchg lock cmp rcll mov cmp sarb dec inc shr outsl out movsb push or lcall scas pop jae in aad mov scas stc hlt mov pushl jmp nop lock xchg xchg pusha mov and pop iret or xchg lods mov je jge mov add (bad) ret pop enter repz cmpsb and popf jmp ja mov movsl ds jnp xchg out addr16 dec sbb jmp push fst jns stos pop and (bad) add gs out pop xchg cmp jmp ror jae dec mov lock adc stos cmc insl lods cmpsl push jae push cld add js loope enter cmp out fucomi lcall pop push in aas sarl cmp mov adc push xor jmp pop pop cld pushl xchg hlt sbb sub pop cmc pop cli in xor fwait sbb sbb in jnp ljmp inc push leave jbe pop fmuls mov push cmp xor movsb push xor (bad) pop push hlt stc bound or add xlat xlat sub (bad) loopne xor mov mov pop insb pop (bad) cmpsl (bad) mov mov push push xchg and push loopne xor cmp mov and add and adc movsl mov sub pop dec popa outsb inc cwtl enter mov (bad) mov insl xor cmpsl divl mov insb push imul std dec pop xor pop inc rcr and nop test add dec sub movsb mov mov push jns mov sbb outsl pop pop adc lds leave stos repz pop pusha push gs sti sbb (bad) mov xor ds loop mov sub xor or jmp fwait aaa cmp cmpsb sub sbb rorb cwtl addr16 mov pop inc fildl aaa push fs imul movb and loopne or dec cs add pop jecxz mov add stos scas arpl xchg adc clc adc add cmp mov (bad) cmp cmp (bad) sti sbb jnp mov and lret sbb bound or cmp jg xlat jae daa fwait aaa arpl mov sub rclb xchg loop jg push fwait ja scas (bad) lods ret push push in movnti bound out xchg and push mov ljmp mov pop clc fwait (bad) lret xor push mov add test cmc and das xchg into in xchg shrl sub add push sbb sbb adc cltd (bad) sbb xor push pop test sbb popa dec pop in or add add aaa cmp decl outsb daa fs roll xor repnz test xor arpl (bad) imul jns push inc aad sub sti pop ret nop mov (bad) push xor das cli icebp inc test loop cmp aad and (bad) ds push test popa popa jle push xor dec insl (bad) sbb jo icebp sub (bad) lahf (bad) in cmpsb lock jmp cmp jle fisubr add xchg repnz and sbb lea cmp out addr16 push lret inc bound pusha dec icebp push jnp and pop or add leave je adc insb cmpsl sub cwtl adc mov and dec popf mov test daa jp movsb and mov addr16 rorb pop mov or lcall add add pop mov dec ds mov sub push xchg data16 les add ret imul jbe out inc rcll ds and ss jnp popf and scas cmp ds inc fwait addr16 sub test (bad) addr16 dec sbb cli jg mov out push jg mov subl pop push movsb and pop into test cmp (bad) in mov push test mov icebp aaa push test xchg mov adc ja hlt mov or push aas dec in in inc lods sub push inc and dec mov pop test inc mov jbe inc push (bad) (bad) cmp shrb xlat imul mov aas mov cmp xchg adc adc jmp cmp add mov jecxz pop add jge aaa idivb adc sbb and movsl mov mov jge movsl and mov push dec sub or or inc stos xchg (bad) in push and ja je pop xchg mov (bad) adc jo enter xor out mov jg dec rorb mov push int3 lahf push sbb lods loope xchg inc push insb dec pop jge pop inc movsb addr16 add movsb push ret in inc int movsb pop add or orl movsl cmc (bad) (bad) sbb xlat fcmovb (bad) cmpl jo sub subb orb xchg popa aaa and mov (bad) fidivrl movsl loope xchg add mov push xchg movsb push cmp popa pop inc sub lret push inc lock in xchg out inc pusha divl repz insl ss mov adc js mov mulb stos shrl insl mov dec fwait stc fnstsw out out cli push mov int sbb js sub je cmp mov inc dec xlat and mov (bad) in pop lds inc or mov gs les sub negl out lock jb xor sbb ds and xor mov insl jnp inc jb,pt popa test push xor mov jne cs popf xor dec rolb lods decb (bad) cmove clc push pusha lcall daa xchg sbb shl mov sbb aaa insl xor inc jp mov imulb push sbb add inc pop adc call in insb popa adc sub jge cli fwait sub jp sbb ret mov xchg adc fisubrl les cmp push adc repnz jnp mov xchg lret incb pop pop adc add mov cmp in or mov lods sbb test xchg sub mov arpl dec loop xor aam push into out rcrb inc jp adc adc sub lahf lret iret and mov mov add rcl dec (bad) jle fnstsw fwait enter je pop mov push mov lods lcall test gs mov jecxz imul add mov push fisubr iret mov aam sarl mov add inc ss xchg xlat repnz and fisttp into loopne jb mov add and mov mov xchg outsl ljmp js lret xchg xor lods dec out xchg insl es stc (bad) mov fdivl loope daa inc xor movsb mov jne cli shrl pop xchg dec stc in adc lret pop push mov xor or mov inc jne dec push jae jp adc nop push mov aam ffree loopne shlb jno sbb add inc shlb int pop ja scas int3 mov movb xchg int3 xor or ret jecxz mov insl jge xor ja push xchg pop popf in ror pop lahf mov cld idivb inc xchg push pop inc push ret sar cmc dec add add xchg push fwait aas or mov xor fadds pop adc popa pop lret sbb ret xchg (bad) lock jno ret mov call add cmp push add cli sahf bsf jne cmp mov imull or fimull sbb pop hlt xchg inc scas adc outsb in (bad) sub mov mov in incb cmpb push push lcall and push test push pop pop rcrl inc out sbb loop mov cli push jge dec adc fwait jns xchg cmc aad nop aad fcoml dec flds lahf xchg jo mov pusha xor and cmpb pop arpl sub shl addr16 push jno psubb pop into fcmovu dec mov mov and mov arpl mov xor pop call mov dec jbe (bad) pushf stos aam fcmovnu or dec add xchg dec xchg insl add fildl cmc cmp lods stc sbb jno mov push cmp pop std mov add divl cwtl ljmp dec mov lods das loope adc sbb lret inc fwait out mov push xor jp jb mov cwtl or es popa sbb scas xor xor add das sbb popf addr16 push jns xlat out fadds and mov shrb and mov add xchg push and sbb xor lcall sbb mov (bad) daa aaa adc or clc out hlt fldl add jbe fistl xchg rcrb xchg movb xorb jo xor mov cmp inc fmuls popf pop cli stos push push mov adc test out sbb vmovdqu int sbb adc pop out mov dec cmp mov pop leave cmpsb mov and aad sbb lods lcall faddl sub push pushf and insl push (bad) roll xor aas repz mov jbe pop call sahf mov xchg cs fldl mulb mov sub enter mov mov push ljmp dec insl sub xchg shlb (bad) xchg shrl sahf dec out shll and mov outsl jecxz cmp add mov pushf shr loopne test mov imul arpl add ror pusha leave xchg je adc ljmp shll loope fcoms mov lods add add es push bndstx std aam sub imul and add or popf aam daa fwait push addr16 mov sub mov (bad) jne mov mov roll sub xor into dec sbb (bad) cmp adc fwait push inc scas xor dec cmovs pusha stos pop jb push pop add xchg int3 jge lds in or xchg arpl addr16 dec mov dec jns xchg cmp adc or scas aas mov mov jp mov (bad) mov or fcoml pop push mov sbb loope xchg fisttpll jle clc inc (bad) adc inc push pusha shl and nop or mov add add pop int3 enter pop push out xchg ret daa (bad) or dec add xchg push and out mov push jmp sbb das xchg loop je adc in ficoml jno (bad) and nop inc in std negl loopne fstpl push sti push cs push jge push mov xchg adc xchg push inc aaa mov (bad) lahf cmp or div mov xor and xor stc xlat ds add aam into push and dec mov mov test jo jp ds dec mov push push cmp xchg pop push (bad) repnz fcmovnu sbb or sbb jge (bad) lahf xchg xchg repnz or cmpsl fstpl add pusha cmp stc cmp push xchg int3 lahf out push pop dec push add insb nop jbe jp leave popf lock cld cmp jbe xchg add sbb sub and sbb and and or mov jne fbstp or push sub push push test test inc rcll mov aad fildll or pop (bad) sarl out cmp lea and or bnd or sbbl mov mov fs mov ss lds dec outsl dec outsb cmp mov (bad) pusha out je jge out ss dec inc das jo sbb inc loopne (bad) mov testb cld pop inc or fstpt push jecxz aad outsb js sbb xchg mov imul cmp fbld bound data16 jecxz xchg popa rorl inc sti ds push push mov clc or ficoml imul or iret movsb mov loope cmpsl mov cwtl mov xchg lods push fnstsw sub xor cmp arpl enter cmp shlb in xchg xor iret inc in loope sub cmp ljmp push mov inc adc cmpsl in xchg rcll sbb fsubl cwtl and popf lcall jp (bad) aad and jg xchg mov mov mov xchg orb fildll lea xor dec sub cli push fwait test cltd jg mov sub cmp call in addr16 and out jbe daa jmp rorb leave xor add add jbe cmp sahf and cmpsb push xor adc add add loop rcll and xor fcmovnu and out cmp jns inc hlt lret jg out pop dec shr mov xlat cmp js adc and cwtl xchg cltd lods imul xchg pop xor mov mov pusha jno icebp repnz fwait lcall xor cmp punpckhwd ret adc movsb lea push pop addr16 inc sub dec add repnz inc lcall punpcklwd sbb dec out fnop scas jge mov sub mov aad mov xchg push ret pushf mov icebp (bad) cmp dec mov mov mov lods jno adc fwait mov stos or ss addl test out sbb insl jg lock les jle push push aam cwtl icebp dec mov xchg dec andl lcall sbbl repnz cmp sub iret lea iret jae inc and pop lock (bad) lret lods out fldenv ljmp jnp xchg cmc pop xchg lahf mov inc or pop dec mov frstor and js xor mov lds movsl jnp imul arpl js lcall test in lret int3 lea aad push jbe cltd adc loope hlt mov stos mov mov (bad) loope adc stos push daa inc (bad) mov mov inc sbb push jnp xchg or and inc aaa out loope and adc add (bad) negb das and xor shrb mov mov pop imul add cmpsb aad lret mov jl cmp mov and mov out cmp loopne sbb lret ret in imul or and ret aam in xor fisttpl cmp mov iret xlat sub (bad) cmc sar inc into outsb jecxz and pop stc loopne lods out fwait sub pop add stos xchg lcall mov pop gs jns fstps ret sahf fs lock dec lret fucom inc shll leave jno shlb mov jle ss xor pop dec ja sbb xchg dec jle ds mov sbb pushf out pop subl inc xor inc cmpsb nop scas faddl aaa fild add add das cmp cld (bad) inc test dec test inc xor imul mov fs jecxz insb add mov int xor jg sbb (bad) push ficompl and xchg jmp xor mov or jns in jbe and mov xor outsb xor (bad) stos imul lock jnp inc and fs pusha sub js adc inc sub inc inc (bad) out dec mov mov xchg imul mov add mov and icebp popf or xchg adc pusha rorb and pop mov mov xchg xor lods mov loop test sahf shrb icebp jo add dec idivb sbb adc xchg les push inc mov imul add add stos iret ficom adc push pop mov push clc lea shr jmp jle pop ret xchg cli aad push xchg addr16 cmp fs shrl lods das jo mov std and ds inc in ret cmpsl jno cmp mov xor inc xor scas stos dec (bad) jno loopne jmp cs sbb loopne (bad) jp add repz xor mov scas push lret sbb push mov xor mov sub cmp dec mov jno imul xchg lock test adc push fistpll jecxz jp out aam and rcr cmp inc mov or jne xor pop cli jnp scas in sub (bad) hlt pop rorb add add sbb icebp jmp dec dec mov outsl jl inc nop pop mov xchg out sahf pop push pusha minps sbb mov cltd out dec shrb decl mov or enter mov fistp push jns stos mov and leave cltd fs push ja lret aas ds out stos xlat (bad) imulb cmp test inc (bad) in push (bad) cmp stc stos adc push jmp enter into test (bad) test stos sub (bad) (bad) sbb loop nop fdivrl sarl jg dec ja (bad) in adc in into xchg jle ret mov mov push ret xchg outsl addr16 xor jnp test add mov fisttpll incl mov pop mov pop cmp popf in testl jb xchg (bad) mov add mov cld sti ds jl cmp scas sbb bound (bad) testl in sarb fldt je jge mov sahf jge cwtl in mov xor loope or hlt call or imul out add fbstp out jns jmp mov mov jae lods repnz push jecxz cmp sub sub sub in mov sbb fs push ret adc and pop mov mov into pop adc ljmp lret push cld pmaxub mov out rclb mov mov ficompl pop dec int add sbb lods mov in bound add and push push clc mov or int enter dec cltd fcmovne mov add std out push test sub adc (bad) scas in adc inc lahf call sub lock ret sarb add jbe cs hlt inc pusha mov out jge lds sbb dec (bad) in push imul or fcompl inc mov sub and (bad) jnp dec mov in pop xor adc xor push pusha (bad) mov and lea inc add sub mov iret sbb mov ss je clc test jecxz fisubr (bad) scas rorb dec into das xor pop cmc (bad) pop fwait mov mov mov and xor sub mov mov jmp daa nop jmp aaa add add clc (bad) lods jbe jp inc sbb mov into std dec popf ret movsb sub js mov or repz test in mov lret rcrb pop lahf cmp (bad) pop addr16 jecxz ljmp aad pop jp mov mov lcall (bad) fdivrl push inc mov ljmp inc xor pop loop xor loope xchg cmp push add cmp outsb bound std outsb or sbb jmp adc jle test cs mov xlat push jae mov sub stos lret jnp aam mov or push aas cmp add in (bad) mov repz xor fs aam cltd sub lahf stc and xchg mov or push jge dec jo iret mov gs xchg loope push cltd ficompl add pop dec and flds roll xchg push loopne je cmc cmc loope sbb mov xchg push aam (bad) mov add xchg push add nop ljmp arpl stos ja js sbb imul jmp movsb hlt inc lcall xor les insb pop add sub jle and divb jae test xchg sbb cs out into insl adc cmp mov loop or jns or or mov into mov jbe xor dec fs xorl popf sbb (bad) sahf and add and jl sub jmp mov add in daa push inc test push cmp int xchg shr data16 lea jge enter adc mov stos loop into bound insl sub mov arpl cltd mov test cs aas jno clc ficom mov repnz call sub sti loop cmc fldt push outsl jns fiadd xor mov xchg or cwtl lahf cmp and pop dec mov int cwtl xor push (bad) dec std dec daa cmc jns (bad) xor stc fnstcw cmp jmp stos (bad) movsl pushf jge sti mov push mov js sub shrl mov sub mov aaa stc (bad) sti cmp jnp or nop pusha enter push dec mov mov add (bad) es lret mov insl mov fbstp xchg std inc dec mov movsl mov mov in (bad) and xchg arpl (bad) btc sti push and loopne push fucomip xchg (bad) push addb push popf out mov js mov fbld fdivrp mov push repz ret jns test mov arpl xchg fwait iret jae lds inc jg lea and push xor and xor (bad) (bad) mov cmp addr16 jb stos adc xor or mov mov cmpsl insb sub jl xchg lds mov popa xchg (bad) loope orl jl fisubrl push loop pop cwtl inc aas stc jae push sub jp add mov pop rol aaa addr16 mov aaa cmpsl or ds xorb mov push cmpsb xchg jle inc mov es fsub xlat aas stc gs imull cwtl add insb mov inc or in out pushf int3 in adc outsl jb xchg test mov or jno push sub in addr16 xchg inc daa cwtl xchg dec rcr data16 mov (bad) loop,pn dec mov movsl stos stos hlt ret push dec int imul out aaa add in sbb sahf test sbb mov push jmp test mov and mov or (bad) mov xor loop or jne or add push test push mov negb pop jne push lods dec cmp mov dec dec sbb insl inc add add mov mov push (bad) aaa out in xchg sub les mov push scas dec and fwait sub das jge xor adc push xor loop adc loop sub or cmpsb in ret add push fxch pop or and outsb jne adc jne mov cld jae jno pop push ficomp pop hlt cmpsl dec mov push stos rcr icebp scas cli aad pop mov or mov sahf test lock pushf (bad) xor in jge fldenv sarl ror nop or or les lea sub xor aam leave cmp loopne in pop out enter xchg jnp mov mov inc dec xchg int mov stos add (bad) sub inc cmp sbb jo in sbbb add mov test test mov jmp (bad) dec xchg popf loop push jecxz sub add add xchg (bad) xlat mov xchg imul lcall xchg fsubr repnz sub test roll sbb insb imul adc sbb sbb xchg lret xor (bad) xchg insb orl jne movsl push scas sub or stos cld xor pushf or xor cmp insb int mov sbb mov jle and arpl iretw mov push rcrb loope and or jl inc adc lcall xchg stc leave xorl push rcrl and and adc and cmp in xor out mov repnz scas test lret icebp movsl mov idivb push js in add decb inc enter test add add (bad) sbb inc test les ss out fs jno push or xor cmp inc or ds stc jle or add jae in jns pop sub jl lcall stos jae daa push sti sbb cmp push sub add fiadd (bad) pop scas gs sbb push jnp sub mov jo push xchg inc lcall push xor pop icebp mov sub js rcr mov pop fbld outsb es andl rcrl popf sbb xchg ret add push xchg repz jo rolb and jmp mov cmp or add icebp mov jecxz and or mov mov sbb mov sub inc push xchg inc and fcoms sbbl push pop add lods xor dec cmp in cld pop mov mov (bad) scas lods out push mov test mov fwait into jne jg jbe cli cmpsb ret scas bound pop push sbb xlat subl ljmp xchg mov ret ja cmpsb mov sbb sti or fnstcw mov dec cmpsl (bad) mull imul mov sahf ficomp cmp pop jle inc push sbb fildl mov mov mov shr xor imul rcll and push dec test out pop subl xlat mov sbb shlb dec adc jno xchg mov xorps add add dec xor in sahf gs or cmc sbb mov pop jae jp ljmp lcall enter jge xor xor (bad) and push mov cmp inc repz xor add sbb lods or jl rclb sub fmuls sub in sbb sbbl jns push adc dec cmpsb or and jb sbb cld fcomps mov (bad) mov div dec popf insl mov movsl mov cld lahf rcll loope mov sti pop lret sbb and (bad) scas push jnp jmp add orl lds flds fldcw enter (bad) pop inc mov xor (bad) out pop add lcall add add dec dec ret xor pop cmp enter or mov popf jns jmp mov repz jmp popa mov lret fcomps mov mov lahf mov (bad) or rorb sti stos mov dec sub push sub ss mov pusha mov inc les lcall push frstor adc subb rorb mov mov and fcmove mov call ficomp push test les mov sub inc dec in scas sub mov cmp cwtl sarl push (bad) lcall lret enter pop sbb icebp inc in or sub push or (bad) ja and add subb xchg sub mov mov mov inc push sub jae scas lds mov ss pop sub ja test sbb xchg xchg repz movsl cmp leave test cmp lds push and sbb dec les hlt std (bad) inc sub adc mov mov cli mov js je jmp aaa insb pusha jae movsl inc xchg add mov cld (bad) aaa add mov lods xchg fbld mov dec jb js ficoml pop xchg pusha aam or inc cmpsl imul lods xor mov fwait push nop sub outsl (bad) add ja add pop icebp sbb push aas cmp imul jmp aaa add pop xor out xchg into cmc xchg adc add movb cs out stos sahf push or mov inc mov dec neg nop insb sti lock fnsave sbb out outsl mov xor insb pop xchg leave fs ret mov mov mov push lret xlat push mov cwtl int mov loope insl sbb mov inc inc stc xor sbb cmp mov lret pop lea cmp pop ds and xchg fiadd aam jle xchg push adc lock or dec subl rorl ja mov push int3 add or fpatan jge sub jg fucom lcall jo cmpsl inc cmp sbb out ja hlt and ret int into pop xor aad (bad) rolb add add bound dec (bad) mov pop imul mov dec leave xlat sbb out jns jbe cmp lret xchg mov add mov xchg dec bound push cmp stos rorl shll add and or in cld aad push pop cmpsb cwtl orl mov clc out lds out out mov (bad) mov test lcall (bad) sbb xchg xchg dec dec idiv dec or cmp fnstcw mov addr16 jge sbb outsl push push dec and int3 pop stos pop mov test out and stc test sbb daa aaa mov dec pop xchg (bad) stc ljmp outsb adc rep add (bad) mov lods push mov cs add add fildll and lock push adc sub sbb scas das jbe xor dec or lea daa sti add iret mov add dec cmpsl stos popa jno push adc and dec push outsl xor je (bad) mov js sbbl cli daa sub and faddp hlt push sub imul into (bad) ljmp imul xchg hlt sub jmp aas movsl jle (bad) jnp cwtl adc loopne dec scas outsl rolb out repnz out frstor push mov xchg lods lock in (bad) inc inc ret cld adc cpuid popf push lods ficompl xor stos inc out fwait add pop push xchg test (bad) ds leave lods inc sbb sub add cs mov int test in and icebp mov cmc add dec jne scas enter jmp cmp popa bound out jo pop jo icebp cmc stos orb dec sub arpl popa movsb and jmp fisttpl insb mov xchg xchg je or push sbb test insl jae insl dec lret jnp mov mov fs xchg sahf push add lret add loopne mov test xchg inc mov fidivl push (bad) mov mov mov and push add cltd dec mov push (bad) dec push sub lock sub sti addr16 stc xchg xchg adc cmc rorb xor ret pop sub pop pop scas xchg add rorb cmp aaa sub or or inc pop or addr16 mov and sbb nop out faddl add add out cmp pop iret mov aam out cmpsb in (bad) mov in lods cwtl jmp cmp pop adc cmp xchg dec mov mov or pop test xchg push (bad) std or leave pop sbb test dec lods push scas pop adc pop pop add dec fisttpl jge scas (bad) lods mov mov subl xor popaw sub sub mov sbb test mov xor inc cmp push test addr16 andl repz (bad) cmpsl pop out call sub jb cmp fcoml insb scas andl xchg arpl inc sbb inc mov (bad) push mov inc lret inc stos jmp jmp dec add repz lds (bad) repz fidivrl pop icebp insl add adc nop outsl inc ficoml out in mov ljmp xor loopne hlt xor push sbb stos arpl dec mov jno or and dec mov xchg inc and jo cmpsb jle jb add fmull imul insl movsl xor and out fs imul mov cmpl cmp idivl jbe clc or (bad) (bad) fwait mov les mov cmpsl mov ds cmp ja daa pop pop aas dec ss lcall mov movsl inc xor push setbe movsl fdiv xor dec divb pop jmp cmp dec cwtl add insb inc xchg jge aad adc fistp stos xchg lods imul std xlat lret jmp pop cld call aam add xchg jg xchg inc mov push shrb cli inc inc aam insb and jne aad push inc lret out (bad) leave mov cmp (bad) aaa xlat xchg aam movsb mov fs sahf and sub ds insb popf outsl rolb and cli and sahf pop mov imul dec lea mov jmp pop (bad) dec inc dec fimull push insb cwtl sbb dec sub adc sbb orb call dec xlat adc lock out fs loope jp xor bound jmp jbe push and rclb clc xor (bad) jo and dec mov sarb sbb into iret pop call add add hlt push jg mov nop hlt push sub add or cmpsb and outsb pop jp aas mov jno pusha stos pop or js push xchg mov icebp cmp in cmpl mov lcall stc dec inc (bad) sbb xor jl insl jae ja push dec fldcw movsl jecxz cmc xchg hlt xor sub or jo mov int cli push pusha fs xor repnz insl mov xchg lods fild clc inc sahf inc icebp (bad) iret inc sbb test aad fldenv flds notl in insb and arpl adc mov push pop dec mov adc out popa aad mov or je pop mov lret int3 mov dec xor cltd mov sahf cmpsb movsb sub mov jo aad add add imul jecxz mov sbb xlat cs sub aam jge scas es ljmp mov scas add jecxz jo adc cltd pop sub xchg and or dec clc leave imul aas std add int mov dec aaa mov cmp aad push and test mov xor cmp inc outsb rol lret scas jne cmpsb std mov fildll jl adc pop add dec arpl jg dec xor test call adc ss lods repnz into iret popa fs xchg jae cmp vpcmpeqw hlt push push (bad) xchg push das cmp imul push pushf sub mov dec movsl or mov imul cmp jnp insb scas jmp adc and cmpsb jno mov leave jne mov mov aad out (bad) xchg pusha js inc test ds stos loope cli test push mov mov jbe ss xchg sub inc mov out or imulb push pop mull mov das in sbb inc or test jne push lds inc inc mov int pop inc mov pushf xchg adc mov rol push (bad) out xchg add popf out stos jmp and inc mov mov jne loopne adcl lret mov push push out mov push test pop dec push push jne,pt and mov inc sub jo in js (bad) (bad) cmp sub sarb sub add fs cmpb mov mov add xlat stc (bad) inc in jnp pop xchg dec sub cmp dec bound gs (bad) mov or xor sbb cmpsb mov xchg xor push sbb in aam and push xorb or cltd hlt js cli pushf pop je scas jmp xchg xor sti adc enter aam stos out push jnp ds (bad) xor ljmp jmp lret mov push das cmp add xchg in push enter ret in or idivb rorl jl hlt pop push repnz and daa in pop js dec inc pop or decl lds pusha mov mov (bad) bound mov lret aas bound and ret xchg ja push inc enter (bad) and test pop imul mov add inc mov mov dec xor xor push rcl negb out xlat nop dec mov lcall test xchg dec add add and xchg and add jb js mov test enter inc shll jo mov and jb or and cli pop fmuls mov and lret inc mov mov (bad) push dec and in aas or (bad) or in mov sbb mov sub cli lahf xorl and in xchg cwtl sub xchg mov push call pushf sub inc adc jns dec mov or mov in adc popf arpl pop std mov popf decl add add jge in mov movsb pop pushf jp and out jno add pop imul add aad jle push aaa jo mov or mov pop (bad) jl icebp sub xchg sub imul mov out pop rcr icebp pusha shlb sbb out mov cmpb ffreep rclb subl cwtl cltd cmp int std nop rep (bad) xcrypt-ctr cmpsl cwtl rcl mov xor addl nop cmpsl jge push lcall subl inc xchg fs push pop or outsl leave adc andl imul inc rorb cld popa stc pop lods sbb les out dec inc loope je (bad) jmp pop add fisubrl aas mov and add hlt mov lret mov push jmp mov push sbb or and dec pop nop xchg dec sarl pop add lods push inc movsb inc mov adc inc nop or ffree (bad) imulb repnz ret push xor cmp and push rcrb out arpl ss inc mov push xor in test insb popf pop jmp and jp test mov jl push cli jbe imul push ret push add xor and aad fisttpl outsl sbb clc das imul jo fisubr xor test push jge sahf js mov cmp sub xor mov jl leave jns add rol mov les into out jne jno mov (bad) mov add add adc jp cmp gs mov lret pop cli adc xor or daa xor fdivrs mov jo rcrl push and sbb (bad) xor mov sti adc pop xchg in or in pop inc in push bnd push push xchg and idivl enter int inc pop jo xchg lret fiaddl jae pop lret hlt mov cmp sub mov xor pop dec adc bound lods fs fisubrl test jne sub jp aas jbe mov or xchg into in push fnstenv stc fwait popf xor pop and mov sahf pop aad inc addr16 adc sbb pop jb adc imull sbb xchg fwait adc mov lcall iret popa pop add neg rcll pop enter clc fstpt or xor push not adc mov les jns sbbl (bad) cmp pop in daa out mov push dec aaa (bad) mov scas sub mov cmpsl fs add faddl adc sti nop jne jp (bad) mov fdivrs add jecxz pushf cmp or add cld pushf jmp lds fisttpl bnd sahf vcmpps xor rorl mov push cmpsb pushf in sbb sbb jbe clc mov or inc dec mov dec addr16 jbe lret and inc mov int3 (bad) repnz mov mov pusha inc dec outsl jmp xor call out jg fstpt repz or cmp repnz rolb xor sbb ljmp sbb jns jno mov xchg cli addl es ror bswap cmp es mov ja cmp jo (bad) xor jmp jns test mov mov (bad) cld sub aad cmp dec mov jns jae push aad outsl pop sbb push das sub out insb mov or loop sub push daa mov and sub and dec lret (bad) xchg ret cmp shrl pop inc icebp cmp pop shr cmc mov in jb xchg mov arpl andb fsubr xchg dec push jmp pop mov clc and and inc jecxz add mov imul pop dec cmp fldcw add fucomi ss imul xchg addr16 stos jg push adc insb xchg push inc jbe and dec jmp pop mov es ljmp cltd movsl cmc in sbb cmc sahf es jae cwtl pop sub stos divl neg insb cmc sti ss hlt gs sub dec fcmove mov (bad) arpl lods adc push pop (bad) jb lea icebp out enter jl (bad) popf mov mov incl jge xchg jl jmp lods add sbb add mov adc add cmp insl add das sahf add shrb ss mov cld adc sub lret cmpsl and xor fistl mov (bad) dec xor jne fwait arpl inc mov push push fs shlb movsb cmp cmp xchg push add add clc sbb pop call push sub mov es lahf in pop out pop idiv xor and push mov cwtl stos add clc xchg scas xchg jg sbb (bad) enter jno sub mov mov out jge repz inc outsl cmp outsb xchg popf xchg insl in jb aas sahf jne (bad) push jmp outsb repz cltd iret icebp push sub mov (bad) (bad) imul into je sub xchg pop pop jo xchg dec cli jmp int (bad) jne cmpsl cltd xchg call lea lods out sbb mov xchg cmpsl jbe cs mov inc jo loop lret lret movsb mov sub shl adc sub or inc shrb aas iret push dec cmp xor xchg dec xchg fsubrs sub add loopne popf cmp das inc mov aas mov test jp dec push jmp ds pushf gs cmpsb dec cmpsb pop bound shll (bad) sti xchg inc mov fxch lods inc daa pushf dec lahf pop or push je outsl jge (bad) fldcw xor int mov sbb jl xchg jle fist pop (bad) (bad) push into faddl gs das sub sbb psadbw mov icebp sbb iret jne out (bad) icebp ret push inc mov jbe xor mov dec fadds pusha stos dec xor imul es rorb sub mov int3 lods hlt mov mov lods add dec jmp gs inc mov mov aad cmp lret push mov mov mov jge sub pop scas sbb (bad) ja test add lock dec or pop inc inc (bad) ss in mov mov insl and inc or dec rcr fstpl pop or mov test ljmp xchg xchg fstpl popf cmp or into xchg pop add mov out dec and arpl cwtl call inc shld pushf push mov lock push or mov mov and lret or xor and adc hlt scas icebp aaa jg jl mov pop sti xchg mov push push (bad) sub jg xchg sahf dec mov enter dec sbb adc xor nop push in repz dec ror ja jg push pop xchg fidivl cmp xor mov in sbb add or test enter jne mov add xor in push xor mov int3 fidivl sahf outsb push adc int mov and mov cmc outsl adc lea mov outsb rorb dec (bad) pop cli push pop push add jne (bad) jb lds cwtl js push sub fistpll repz xor mov jle mov push ljmp aaa jns mov (bad) mov call movsb daa mov dec orl mov in push or jl clc subl inc jnp loopne push and adc jo pop inc test mov xor xorl inc stc pop nop/reserved dec xchg inc (bad) xor add decl cmpsl ljmp sub arpl daa jge (bad) cld je dec push add inc addr16 outsb mov lods push or cmp dec dec mov cmpb pushf jg pushf or das mov mov push in into xor mov push mov (bad) cmp popa dec lcall dec inc nop jbe mov iret adc pop movl xchg sahf gs xor pop pop addr16 bound sti inc xlat sbb xor dec clc leave push pusha cmp nop adc (bad) popf andl scas cmp cmpl jne dec jle lret jo jb movsl sarl jno nop test repnz fsubs scas push mov negb movsb fsubp cmpsb inc lea mov ficomp int test push ret das xor pop out mov pop stos push jnp add add add lret xchg push mov in push xchg fldl (bad) mov push or sahf test inc inc icebp mov test aaa add adcl add mov xchg xchg push inc arpl jmp jnp cmpsb ljmp (bad) fstpl adc push into jo sbb in movsb xchg xchg or push fmulp dec pop cwtl xchg mov es push popa lcall notl adcl inc sub data16 aas (bad) fcompl out (bad) jge dec int3 mov lods add dec push test adc out xchg mov mov add aaa mov rcll aad mov sbb mov jp cmp jne dec dec jmp add cltd add hlt jno adc ljmp xor dec push icebp leave add rcrl and adc mov rcr add add insb sbb mov jo pop dec mov adc hlt or aas mov sub sarb fsubs jecxz pop sti pop divb or test lds in enter clc push sub cld or loopew cmpl push inc lock pop sub iret aad xor push xchg xor addr16 test and cmc xchg jge push sub sub fmuls cli add and out xchg cltd xor xchg xchg int addr16 in int shl imul into nop mov stos fsubl adc add inc adc (bad) mov in decl adc cmpb xchg sbb (bad) imul pop aam dec lods xchg mov inc pop xor das aad icebp pop lock xchg xchg and fistpll idivb loopne and pop jb push push push and jp hlt decb movsl mov sbb cwtl fnsave jns jnp add jmp xor dec dec (bad) pop inc and jp cld mov sbb lea adc sub xchg imul lods lahf xor (bad) xchg int3 mov inc or call cltd in lds jmp dec test movsl addr16 dec popa push mov pop inc xor mov test mov mov cmpsb icebp shll mov repz addl add jp lret out sub add add dec and stos movsl mov imul cmp rol adc cmp icebp ljmp push inc sahf mov add test sbb test mov jl fcompl rcrb and sahf faddl in jo mov out and adc cmc or jnp dec test into addr16 adc in imul mov xchg jp xorl nop scas ficomp push add xor mov push xchg (bad) arpl into dec push repz frstor xor movsl inc mov inc pop call (bad) rorl rol push adc and xor aaa jne or mov cmp sub jl add xchg xlat or out sahf cmp add push repz clc lcall xor aas jge,pt xchg mov es adcl (bad) enter push xor jae and test push xor insb fs cmp fwait (bad) call mov (bad) xchg push push clc outsb sbb xchg rcll out sahf shll in cwtl push xor cmpsl add sahf cltd mov lods pop stos lahf xchg bound popa daa cld jmp push sbb cltd lods push adc add cmp adc mov popa aaa inc jae rorl jecxz das inc mov je loopne xchg mov aas or sub test sbb sbb cmp mov arpl test out divl pusha jmp dec pusha outsb mov and cmpsl xchg stos ljmp mov mov je pusha daa mov rep push je cmpsl pusha push push add adc popa sahf inc rcll or andl (bad) sbb push in xchg jns mov stos (bad) call inc js mov or stos aas cli dec dec bound popf sbb sub out xchg and leave stos gs inc js sub stc or adc jge pop mov mov mov scas insl movl es add xchg xor sahf dec cmc xor icebp inc mov in pop popa insb mov aam (bad) loop pop ret pop ret sbb lcall mov sub cmp xchg push add popa lods fsts fidivrl inc ret mov inc sbb mov pushf sbb out inc mov pop or push cmp add add das mov add mov push and xchg mov arpl sbb iret push icebp lret fmul inc pop push or xor cmp inc and mov jg lods lods xor inc xor aam enter cmpsb add sbbl jo into dec push fs pop cltd inc adc xor mov jp mov outsl sahf jl mov fwait push (bad) gs inc cmpsb jge jo mov divl sbb xor and popf or loope mov (bad) and push pop mov sbb repnz les mov adc stos cmpsl adc movsl mov les mov mov mov (bad) xchg loopne pop sbb jnp ficoml xchg inc add hlt xor add jg dec scas cmpsb push push fisub movsl xchg mov cmp sbb xor mov insl sub fiadd sbb loopne xor sbb xlat call or (bad) negl (bad) ja inc fwait iret or loope mov xor push xor jle jecxz cwtl das add stos xchg notb cs loop xchg or fisubrl mov fild icebp cmp int3 xchg and insb out mov or xor mov add inc stos mov fstps pop rolb ljmp and jns cmp mov and rclb aad and adc mov push btc loopne mov aam in out pop lods out adc and out notb sbb cmpsb enter add cmp push lds pop jmp adc mov cmpsb jns add loopne mov mov popa inc cld dec mov daa push xchg in mov inc in ja jp cli std outsb and xor sbb (bad) jno dec cld add sbb sti popa xchg clc movsb sub out cmp ret addr16 outsl out lods icebp push in adc and jmp fistp cmp das inc flds in mov bound adc lea movsl xchg sub mov sbb mov inc push sub stos cmp stos popf mov iret iret rolb test js sti adc add icebp mov push call idivb ss adc (bad) pop mov mov add add ds mov stos enter sbb loopne xchg rorl std ror inc add into (bad) rclb or pop cmpsl imul adc sub adc and jle test xor cmpsb push in outsb pop push lahf mov xchg lock fpatan sub dec jp stc cmp es (bad) fbstp mov scas jno call inc int3 xor shrb and dec arpl sub (bad) sub dec pop outsl pop cs loopne sub in out and idivl repnz es iret pop mov (bad) mov dec mov cltd or add int aas xchg lods push push stc jbe sahf add mov (bad) jb add add out arpl lcall xchg push jno jmp fs jle iret jmp jbe sub sbb add push mov xchg loopne sbb xchg push pop xor pop mov cwtl mov dec (bad) mov aam cltd mov jge lea nop adc adc movl sbb in lret sub adc es mov cmp cmp repnz movsl imul xor dec adc and sub fxch ja add cld or cmc cmp mov pop fistpl popf push aaa pop mov hlt aam mov subl out sbb flds inc aaa push mov cmp mov adcl add add xchg aas pop (bad) out (bad) (bad) ja inc pop mov cmp nop sbb jb adc mov push fsubrp fdivp ss mov (bad) xchg das xchg test aad sub adc cwtl lret jae jo lcall sbb xor dec in and rclb sbb call in xchg adc das cld adc xchg pop pop enter test pop aas cwtl inc xchg or add push lods fist nop jbe jg int3 dec mov rcl or shr cwtl xor sbb sub adc push inc sub xor ret push insb xchg add fistl stos jp push dec arpl or loopne jge stos das dec icebp mov mov xchg in pmovmskb cmp fstpt les mov jb fbstp and add add inc cmp mov add (bad) repnz sar js and push cli add repnz mov lret notl loopne lret in add push mov xchg out mov dec mov ss mov pop jae or loop add das rorb push mov ret lods pop add cmpsl shrb cli dec lods mov cli jecxz fnstcw bound dec push je sub push movsb jo inc sar sub lds push adc aad push and mov lods sti cmpsl jnp jne xor (bad) jmp std mov push mov cmp mov or iret mov adc es lods int lea out xchg scas mov stos nop push adc adc add add lahf jl add adc cmp cltd dec jns adc sub fs dec pop xor mov push cli aas mov outsl mov mov out data16 mov jmp (bad) into push ss mov call dec movsb push xor sbb sahf sbb cmp add jne addr16 dec and repnz aad cmp mov cltd jle int3 mov inc sbb packuswb imul xchg add cs jmp fidivl iret insb aas (bad) and add scas xchg cltd leave xchg inc sbb or into ss daa sub jecxz aaa inc push mov scas jae jecxz xorl leave or adc add add jg lea popf std fistpll test adcb mov adc xor sbb or les mov pop or call pop xor movsb dec adcl enter sbb arpl dec jle jno out adc test insl int mov push sub stos inc sti xchg mov lea mov xchg fcoml adc in out mov lea int3 dec mov mov lret xlat dec nop lcall movsl ret inc dec pop bound pushf out push gs mov xor jmp test daa shlb adc fnstsw in pop xchg push mov sub (bad) mov addr16 jno ja mov rcrl lods mov add add add cmp inc cmp jl jp mov in push outsl jb sub fidivl js pushf push mov sahf ret xchg and int and add or ffree add jb mov sti pop cltd addr16 aam (bad) jg pop mov loope enter sbb and out (bad) xor nop cld popa pusha jecxz test out push movsb jmp into cwtl loope outsl mov inc ret and jne cltd cmp xchg xchg cmp push xchg jmp popa and es icebp ja fdivrl mov dec dec sbb cmp insb mov in pop std adcl mov xchg pop dec sub lret out sbb lods mov mov ret std mov inc pop ss jno test adc test test inc dec aaa inc lcall add mov cmpsl jne (bad) adc or mov loopne pushf xor pop cmp sbb bound mov jns lcall sub xor pop push loopne je mov ja scas xchg inc cmpsb rorb jns lret sub mov jmp pop (bad) out addr16 ret enter aas fiadd lods insb leave add insb adc loopne mov dec (bad) insl and into ljmp sub inc stos jnp mov sbb xlat xchg cwtl sub insb repz or outsl jl test (bad) mov hlt mov flds xor push std pop insb andnps mov or inc insb loope sahf loop pop stos adc push lret bound mov mov sar add fwait ret mov fs in enter mov stos sahf lods mov flds repnz or in shlb cmpsb popf call int3 sub popf adc jae jecxz adc mov lahf sti push sub inc icebp fcoms mov mul insb clc addr16 adc cmc test mov and les push adc dec int (bad) mov out mov lea jnp jle mov into aam xor and pushf mov add sarb jbe addr16 mov and rcrl mov lret xchg cmp adc dec bound iret lcall aas insl push sub (bad) das jnp xchg (bad) je fidivrl cmp mov mov adc jge (bad) dec mov cmp sbb cld or fiaddl (bad) add and ss icebp mov (bad) xchg out jbe pop cld mov stos xor cmpsl cmp (bad) arpl xor pushf icebp pop repz cmp adcl sub mov jecxz fidiv sbb mov jno imul xor sub push cld leave push or int xchg mov and std es sub andb jl test mov push out outsl leave fcoml adc sub pop mov jae mov jg je (bad) mov xchg xlat in adc inc add popa sti imul and sbb pushf pop sub in movups and (bad) cmc int3 outsl mov cmp nop sarl adc sbb xchg mov adc ljmp loope arpl int add stos ror cmpsl lock shrb mov push pop loop ja je fisttpl pop loop and outsb xor mov push sbb aas (bad) outsb fisubr in pop out lret fwait cmpsl pop and sbb pop (bad) int3 lret mov sbbl inc jns jb or jbe and mov dec mov xchg pushf fisttpl inc add in test inc inc fmull data16 dec push push push icebp outsb mov test sub push inc inc push sbb in dec inc outsl (bad) dec push dec fldenv jbe mov scas add xchg fwait subb xor les adc mov mov (bad) (bad) aam lret mov cmp popf push in (bad) icebp out xor push mov loopne and cld cmp dec xchg inc add add insb int (bad) arpl jmp push test jge int dec out adc icebp or (bad) int pusha mov xchg int rorb fldenv in loop mov into or and jp xor (bad) js sahf shrb nop pop stc outsb fs mov xchg or inc mov jl pop mov call mov xchg mov mov inc mov ret (bad) pop int mov or mov loop movsl add lock xor pop adc (bad) jl cmp out cmp out fwait and cmc jge (bad) js and and gs mov xor insb cwtl popf inc add repz mov push popa cmpl mov adc test imul add xchg daa lock fist push lods nop int dec mov mov sub adcb add push stos sahf decl (bad) cmp cmp dec mov lret cmp xor bound cmp pop aam dec cwtl and out out jg jnp iret xor ficoml fstp adc shrb fstl jae sub mov enter insl jge enter js lea add sahf scas in in call or cs sub aam in ja mov cmp or fmul mov mov es push rclb rcrl sub adc push cwtl xchg not jbe jns xchg ret add (bad) jle xchg xor out pop inc fisttpll add fmuls pop data16 sbb fwait outsl jmp inc stos add jl lds mov bound cmp pop inc adc pop or lds sbb lds ljmp push and fs pop leave add add dec addr16 dec dec cmpsl xchg std sbb inc mov sub jno push mov outsb mov lret jns mov mov mov xchg sub ja xchg sar xchg ljmp mov pop add push jl xor pop pop int3 jp sbb sub pop test jmp or insl cli and out jne mov mov orl (bad) std add mov in repz sub pop mov jb js fucomp (bad) adc or dec cltd push (bad) mov add add jle xchg dec pusha sbb xchg leave lods lret mov pusha gs stos out pushfw rcll jmp inc repz in pop ficoml (bad) xor and cld adc and inc dec imul shrl pop fwait cmp cmp xchg pop icebp je mov fldl sti or adc ds outsb xchg add sbbl (bad) mov fwait dec xor pop dec cmp push push adcb hlt repnz adc gs inc xlat dec inc pop aam (bad) outsb dec jo and lret lcall icebp lret add repz xchg stos repz int3 push jg sbb hlt bound xchg push and out adc scas loopne popf mov mov mov add add add test cmc (bad) mov jg addr16 mov ret push lret xchg sarl mov push repz fisttpl lcall fbld add notb mov dec inc inc xchg xor pusha enter aas mov xlat scas jnp cwtl es mov sub and divl push int jl jl mov mov mov (bad) sti jmp pop stos vpshufd cmp js aaa gs xor cmp sbb push ds xor in or xor or sti dec movsb stos rorl insl not cmp testl mov and jg push loop sub clc xchg scas fidivrl jg mov pop mov adc aas outsl xchg xchg add mov cli aaa sub sbb jp inc mov jg aas lock test push add cld fdivp mov sub mov cmp test push xor ljmp stos add mov mov sub pop cmp adc (bad) sahf push cwtl mov push push mov xchg dec inc mov pop imull lret neg mov jno (bad) aaa sbb or imul lods mov jo shlb mov cltd jns pop sbb mov bound mov inc (bad) mov icebp ss (bad) outsl xor jne mov adc dec xchg ds leave xchg xchg sbb pusha jnp jo push arpl ljmp incl in sbb clc add data16 or in inc dec aad cmc jbe jo pop push adc outsw push push push ljmp hlt mov bound pop shll mov jl bswap jl push mov cmp imul cmp sub arpl aas cmp push lds xchg std jne or sub aas pusha dec pop or jmp jmp out mov add lods shl mov add dec inc stos mov ret push aad out in pushf lock xor inc add xor mov push popf repz mov imul mov jp dec pop pop popa adc lcall sbb fistl push out ret iret in (bad) lock ret pop inc ljmp ss int3 fisub dec je mov fwait xorl mov daa out add pop stos xor sbb xor popa push cs int pop jl test test pop ds jp aas add sbb scas ljmp push in mov xchg add rcrb fdivr dec mov lock dec mov sbb movsb pop aam test mov (bad) std imul repz movsl ja sub inc or push out pop fwait out imul aas sbb in xchg dec fsub stc push inc das add cld sbb jns sbb movsl call lret ret ja mov pusha xchg or or hlt pusha xor xchg in push popa and inc jae xchg dec mov mov pushf ds adc (bad) lret aad pop aad ljmp lret mov sbb cwtl sbb inc (bad) js xchg fcomps add fimul popa pop or fisttpll mov daa jo cltd jge push jne mov inc lock ja pop xlat stos out out jle jg arpl stc mov rcrb sbb div test shrb out mov jmp out stos dec dec in scas fwait jg mov dec fcmovbe ds mov ds inc sbb mov mov sub jne sub add popf (bad) pop jecxz in lock movsb fs sahf push dec daa dec lods push clc mov rclb (bad) sbb or sub nop cmc lods dec loop lds (bad) inc rcrl lea sub scas xchg or add cmpsb or and cmpsb and or pusha das or inc repz add add fs std sub mov out or sahf jle xor mov fmul int repnz jmp jge push (bad) dec stos int3 xchg pop jne fidivr inc aas (bad) popf jge pop inc mov fwait loop lret xor push xchg mov adc cmp movsb outsl push dec jb mov jg mov mov inc push shrl fwait (bad) testb sub mov sbb aas pushf add sbb sbb mov xor or xchg jp pop call test int3 test fistl (bad) (bad) xor xchg in adc or ret cmpsb icebp push fwait push loope add insl scas loope dec hlt sub jb push jecxz pop cltd mov add push push repnz es add add mov pop enter cmp xchg pop scas movsl lods jo data16 scas mov dec stc or fwait or xlat jl mov jmp adc repnz jmp (bad) push cwtl push dec sbb stos xor cmovb pop sub xchg fisubrl repnz pop and scas mov out es xchg repnz arpl mov add pop sbb ficompl movb popf mov sbb xchg xchg sbb out mov dec int3 mov repnz (bad) xor xor xchg lods add loopne icebp or cmp or mov inc jne mov push pusha adc ss in hlt sarb ret jnp in repnz cld pop andl sbb add pop cmp dec jb fwait inc jmp jns iret jl xor or mov (bad) mul inc out mov or insl dec mov jge lcall push jo ret int adc sub sbb lea push and jb xchg das push dec cli leave outsl push cmpsl xor (bad) nop into fsubrs js jb adc mov popa mov lahf pop and loop shll rcll cwtl mov mov mov cli enter cs push pop jne or sub cmp int3 sbb push jno mov into and pop mov cmp js inc nop sub jb jmp aam inc mov data16 pop xorl fsubrs jle sbb mov cmp into sbb daa outsb add pop rcrl sbb notb inc mov inc push sbbl mov push les repnz in repnz fwait dec jmp push adc iret lahf mov in clc cld das clc and in push inc pop dec pop out cmp popa iret xchg lds insl mov (bad) lret dec sbb sbb repnz inc shl ljmp jecxz dec cmp mov sub sti pop push mov xchg pop sbb or adc in push aaa lret stos jg jb sbb lret out xor pop mov dec (bad) in outsb sbb mov push aas bound test lods stc xor leave rcll test (bad) (bad) loope ret insl adc push and adc scas aas push out sub mov push test fisttp and les jno cmpsl lcall mov jle lcall add (bad) mov out test mov add inc popf or orl xor xchg outsb add jno mov mov popa sbb inc in xchg or (bad) fnop xor data16 loop jo ljmp addr16 cmp iret push xor push sbb sbb addl xor sub sub xchg stc inc push push cli sbb js xor or cli mov jae sub jecxz jno cmpl aam orb cmp (bad) add sar mov shr test js dec pushf rorl bound sub jo mov xor add add repz mov inc adc lcall int mov cltd jecxz pop pop jmp jp mov push push xchg xor jb and cmpsb (bad) mov pop cld jns jb mull shrb adc pop std inc jbe cmp add enter outsb pop push mov or inc cmp mov xchg pop or dec xchg les adcl aaa mov sbb xor bound jbe cmpsl clc icebp mov hlt pop rol mov (bad) xchg loop jecxz mov aad int (bad) and je enter fiadd sub insl sbb outsl mov xchg (bad) mov hlt loopne dec lret sbb cmpsb lcall push imul test cld movsb (bad) repz es fsts sub aam out pop rcrb mov add add (bad) int3 lahf inc fwait mov mov imul out inc cld xlat (bad) lahf ret sbbb lods pusha lods imul mov hlt jg iret pop add jno iret into pushf rcll (bad) fisubrl mov es cmp mov imul mov outsl inc pop loope push subb push xchg cmp mov aaa jbe fstp cmp mov jmp cmpl fmull lock outsb dec and or (bad) ficomp push jecxz out adc jb ss or roll pop mov push sarb cmpsl lret xor fbld jo sbb cmp movsb into jle mov fidivrl push aad mov cmpsb popa fsub lahf (bad) mov mov and lcall add push cmp add add notb jae and ja dec or dec scas adc fiaddl aas je jmp xlat fnstsw lret stos scas aad sbb jnp pop push xchg jae add xchg imul cmpsl pop fwait pop sahf inc insb sub push insl cmp jg cld sbb and sbb test xor sub (bad) adc scas xchg cmp xchg repz insb dec mov daa sti sahf out mov notl pop sbb push sub push lahf outsl lcall repnz ljmp in gs (bad) fisubr cmp push inc xorb inc icebp and mov loope hlt pop ret push inc adc and test das sbb jle sbb (bad) cmp push pop mov lods mov (bad) fsubrl fdivs or push mov add jbe repz lods mov fs jp sub subl xor pop (bad) pop adc insb test adc mov pop mov in leave push aas push jbe stos sub xchg xchg dec aas testl jp adc scas xor add divl cs ja fiaddl sub jecxz mov mov push mov daa out mov stos mov aam cli dec movsb xor je xchg xchg ds inc lods mov out fwait arpl mov or (bad) roll jnp sub enter pop sub push mov mov movsl mov sbb sti jl inc or ja jp pop or push mov jnp std inc sub pop fidivr popa inc movsb faddl mov ret out (bad) or push outsl push lds jo pushf and ss movsl mov inc and fstl popa daa mov jl xor lret jae pop out stos push fild cltd mov or repnz out les sub pop mov push pop sub mov push idivb jecxz xor sub inc pop iret mov cld hlt or aas cmc pop or out (bad) mov cmp pop iret cmp push push loopne or adc xchg cmpsb out sbb cmp lds sub sub xchg sbb mov out xlat or inc daa mov mov jle cmp ret xor mov push pop jmp pop aaa mov rorb lods inc ja jp (bad) mov clc pop mov push add add fistp hlt adc inc push and add dec gs lods imul dec (bad) adc test sbb rorb scas cmp fstpt mov shl cmp pop push push aam fsubl sahf pop lea daa neg and xor jo clc loopne pop cmpsb add dec outsl mov ret xor cmpsb enter dec (bad) (bad) jmp out xor push cmp repnz jae outsb xchg jno adc push insl push xchg loop sbb lods es popa stos xchg jl jne sub shrl outsl pushf dec lods sbb jne out fimull fmul aad aaa icebp add in enter aaa push add jle pop (bad) mov (bad) inc mov mov xchg icebp dec fs inc cwtl (bad) mov adc push adc push imul mov pop fdivs pop pop jp sbb lret arpl (bad) mov ljmp aas and pushf xor mov outsl test repnz or pop jo cmp mov repz sbb or pusha jae jno adc pop mov enter aam pop notl decb jecxz shrb fsubl cmpsl loope pop sub lahf (bad) jle cmc dec lcall addr16 cmp notb stc dec fld xor mov add jne nop sbb mov add sub bound int3 xchg lods (bad) (bad) daa ret inc das mov lcall adc cmpsl cmp mov aam push clc mov mov mov jnp jnp add add das out (bad) dec xlat pop in sahf int adc (bad) daa xchg aam cs mov push call in mov sub push cmp push mov xchg add or adc push imul inc pop lods mov mov addr16 mov (bad) mov dec xor jcxz shlb mov jp inc pop inc add ret cmp fstpl sbb faddl out mov xor mov dec js sbb or pop jae popa (bad) je add arpl lods or out xlat test ficoml cmp inc insb pop loopne mov jp stos or dec fldl dec (bad) aas scas sbb cmpps out mov (bad) or or popf out xchg les xchg mov add add add add cltd lahf shll jo sbb mov mov out insl and push mov gs mov stos or aad pop pop cmp sbb or aas pop int inc cmp sbb sarl pop mov push dec inc or push iret ja dec mov fcoms add cli daa cli pop popf ljmp aam pusha and sbb jns mov pop mov push lahf inc repnz (bad) nop jge les sar inc sub xchg jge add sub adc mov sti mov cltd orl jl mov push jl add test iret fbstp add cs into sub lahf aaa loop add sub dec push add add clc dec test scas dec lahf icebp sbb inc pop xor stc lods push push xchg cltd mov xlat lahf sbb std aam pop xchg call cmp aam xor rorl mov aad mov aas jle inc es pop pop enter push mov call imul cld leave add (bad) sbb mov cld mov inc test addr16 pop imul mov (bad) xlat dec mov mov or xchg sub adc xchg aad mov pop xchg stc inc and lret push sub add xchg fistpl (bad) movsb jns sub cmp xor jo push fisubl jge in repz lds popa cmp pop adc push outsb pop enter mov out or pminsw hlt lea dec adc dec inc jne fwait (bad) xchg mov xchg and (bad) sub pop xor imul push xor xchg sbb or adc faddp cltd sub jmp adc aaa decb ret out pusha jg jecxz xor sub fisubr sti test pushf pop jae cmpsl mov jmp sahf mov cltd insl outsl add outsl jl cmp lcall xor sub inc jge iret outsl les mov xchg ja in xor adc dec adc daa and pop (bad) lretw mov inc imul dec push imul scas sub jle push loop cmp or xor fwait and stos fdivrp sub inc cmpl inc in mov and add add rcrb push inc icebp xlat nop xchg pop mov inc insl adc inc dec cmpsl int3 xchg stos loope ja inc xor mov scas in mov sbb add mov push sti in push shll dec inc lods mov test cmp mov jnp mov jg daa jae enter cmpsb into cmp daa fmull out fs lahf add int3 (bad) dec fsub add ljmp xor scas cltd pop pop add pop fcomip insb dec jo and or adc add push and adc (bad) mov mov jnp in inc adc pop mov mov lret dec inc push mov inc movsl mov cmp clc mov fcoml xor add add mov aaa jb (bad) pop les cmp pushf pop push add sub cld cmp cmp popa sub int aad mov push add jge sahf jnp pop push push mov jp add pop jmp pop into enter adc cwtl jecxz roll cmp add sti lahf dec icebp lds lret jle (bad) out test cs jns mov or stc daa sub addr16 dec dec sub pop push daa jbe pop cmp repnz pop cmc or repz or mov imul scas popf stc imulb mov xchg cmpsb (bad) outsb lea add in jae jecxz and pop dec fwait dec cmp and sub in aas xor push or add insb (bad) rol cmp inc jmp test pop or das mov scas xchg add or mov daa push vcvtpd2dq pop iret sbb xor pop lods pop mov mov cli dec das faddl pop dec cmp ljmp mov adc push or into xlat lock jecxz and sub lret cmpl mov jp mov hlt loope xor fdivl mov popa rorb inc and pop xchg mov inc jmp pop repz imul pop mov jge cs push jg or (bad) lret dec setbe pop pusha jb add mov (bad) mov leave pop lods clc xchg dec loope xchg lea pop repnz push cmc fldl fcomip adc sbb in es sub add mov cmc adc ret pushf xchg adcb sbb add add inc loop sbb xchg ss (bad) xor xor je ja cwtl push push insl cmpsl rclb mov add out push adc mov and aas jo and jne fdivrp (bad) mov mov and imul cmp dec mov lahf xchg jg mov add test aas dec or and xchg cli test out nop dec into shlb add stos icebp mov cli pop xchg lcall xor xchg fnstsw jns and rcll mov mov add in sub movsl adc pop pop imul (bad) imul add add dec jne jge rorb icebp push sbb add add psrlw hlt and rcll sbb lahf test cli nop (bad) xchg repz movsl call fcompl ds les cmc loopne mov call add and xchg jmp mov adc repnz cmpl mov ljmp xor pop xchg sbb xchg inc and callw je in push in or jo push cmpsb sar clc stc daa jge and add inc loope xchg mov jecxz sbb stos insl rclb andl loop add and sbb fcmovnu lret test or dec cmpsl roll mov call inc lret in daa sbb pop mov scas add add add add lds xchg icebp enter test fwait sti jmp sahf inc ret lahf push and jno ljmp sub cmp fnstenv pop dec jnp inc push push push (bad) cmp sub lcall test push push les push test jb in add mull sub pushf mov das add cmp call daa (bad) jne inc jo loopne pcmpgtw mov es cmp outsb outsl dec repz push dec test lcall inc jbe inc jns mov jge inc std call dec jle pop rcrb sub fisubrl dec js mov push adc xlat and push mov pop in adc out mov add nop mov mov add je or ja ljmp nop imul add icebp mov inc cmc cmp xchg mov jns ss cwtl je scas adc mov add xchg pop jge add cmpl and mov lcall jge cmpsl (bad) and cs bound data16 push cld jge mov or and ffree test (bad) adc mov push pop xchg inc xor ficom mov jp (bad) fdivrp es jne (bad) lea lods imul or repz cmp lods ret fsubl pop rcrb into jnp movsl loopne xchg push and mov mov cmp jb add cmpsl cwtl lock ljmp sub fs xorb cli out test pushf dec jb pop in pop sti test pop stc cmp jge adc sbb push lcall nop adc lret arpl sbb or sbb pop xchg data16 inc clc repnz andl jns dec jb mov push scas jno outsl pop divb sbb push scas cwtl adc test popf lods sub jno in push dec xor mov xor aaa test pop cwtl sahf sbb push sbb cmpsl jg,pn das inc lock jno push dec (bad) pop xchg into and inc into inc add repz iret adc aaa xchg aas mov in lock test xchg mov call arpl int3 pop adc push sub test or bound jg stc xlat push les test lea mov jbe mov ja cwtl dec mov push cltd xor mov add or mov pop jnp add xor repnz loopne insb xchg fsubrl sbb jno loope add xchg xor (bad) or mov dec inc arpl inc mov cmpsl fstl stos jae xchg pop xor (bad) js movsl loopne mov pop sub (bad) xor out cltd shr push fcompl xor movsb js pop idivl mov pop fwait loope ficompl out add xchg dec pop scas mov insb or ljmp inc addr16 push sti test mov adc enter int3 push repz movsl xchg fstps repz mov (bad) jmp cmp fdivrs inc out push (bad) jmp jo adc shufps pop lahf cmp add daa mov ja sub add pop pop add or je inc sub rcll cmp es push in push fistpll ss iret dec test sbb ljmp xor cs add mov into pop out lea jl add xchg mov loop mov fsts inc cmp ss jl and jp lret bound mov lahf jmp push inc dec xor test push inc xor iret scas mov in adc mov sbb ficoml mov mov clc or add ljmp insl arpl rcll lahf in cmp push dec frstor jle lahf cmp dec fwait mov aad fnsave out cmpsb decl sbbl mov or jge in cmp sub xchg cmp add add aas fwait scas add mov nop sbb mov or xor push inc mov cli and sahf xor pop jmp mov and dec add iret test push lret aas jecxz js cmp xor push inc bound std mov cmp dec sbb sbb jl aam cwtl scas fst jo sbb nop cltd ret add nop test std add (bad) pusha (bad) lock sub in push sub pusha cli mov mov pushf int3 enter dec cwtl pop sbb add das jns push repz cmpsb xchg cmp inc pushf les les imul repz and repz daa scas out std shrb cmp fcmovnb adc aas jmp sub cltd add add in xchg das data16 sub stos and incl cli mov jnp ss add lock inc cltd dec add or inc jns jecxz jge icebp or xor jp pop sbb mov into loop scas push pop ror cmp test mov das push lcall into sub jno in and xor leave sar pop out fwait dec jle int mov mov sbb jecxz cmp xchg addb arpl dec addb popa dec or add push jge mov repnz ret jp xchg aam and sbb lcall (bad) addr16 nop mov inc fwait sbb pop sarb jecxz leave nop lret mov mov add cmp jo scas fcomps loop loope fmuls add (bad) daa mov (bad) xchg ret or ror gs ret pop jecxz aaa dec imul lcall sbb lret nop/reserved stos or inc inc notl mov adc xchg cmpsb xor jae inc loop pop ficoml mov sub aad add xchg enter mov inc xor add outsb movsb (bad) push (bad) mov add mov movl pushf outsb ret sarb sub inc add push adcl clc add popa mulps aaa (bad) jge mov mov or and lock or add cmc rcr dec or mov loop jmp add jb pop gs add jbe mov pop cwtl xor stc cltd pop jmp jge mov cltd sbb dec jnp sti daa cmp lods pop out stos or mov int3 ljmp mov xchg sub xor cmp pop int3 push test cli popl mov std xchg out cwtl das mov repz stos aam stc cmp aad dec movsl js dec jp stc and sub call sahf sub cmpsb adc sti jae sub push xchg test mov push iret xor mov stos sbb stos ret mov xchg pusha in (bad) mull arpl stos ja push push cwtl fs sbb js dec out repz cmpsb and push mov inc jl (bad) xchg mov or dec mov add test fwait lock ret push dec cld xor stc ja in repnz sahf (bad) test mov lods dec push faddl clc inc out xor mov (bad) ds sbb lcall lock xor jmp aam shll push neg cmp jb je or mov sub loope inc cmpsl xor xor sbb repnz popa loopne mov inc mov sahf fidivr sub insl fabs fidiv mov adc pop dec pop cmp sbb xchg sahf lock cmp clc dec addr16 iret dec cld (bad) inc dec and bound sub int fsubs std mov inc dec je jno inc lods mov mov mov loopne sbb push mov mov mov cmp outsb xor adc lods push leave out and add int3 aaa mov lock sbb cli lods dec and mov xchg xchg adc fs lret sbb fidivr loop out xor nop outsb sub dec lret arpl pop xchg mov xor and bound push push out mov dec hlt (bad) divl pop mov and mov pop push mov shr movsl outsb adc stos jle sti dec mov and lret mov dec (bad) push sub out subl pop (bad) in jo or push stc mov stc jmp and lahf inc xchg lods sbb jl nop repz pop adc loopne xor nop (bad) movl outsl fldl ja add mov iret test jne jbe,pt xchg adc mov xchg or rclb ss daa and mov imul sub insb xchg add fistpll sub je idiv nop cmp out sbb adc cs pushf mov pop sub push mov lods add pop sub add inc jo pop test sti mov mov pop adc cs fidivrl dec sub idiv rcrb sub pushf inc xchg shll test jl ret rep dec sahf loop jne dec out mov jb cmp js dec sahf dec arpl (bad) jle push sbb repz (bad) sub gs push fldcw outsb cld xchg cwtl sahf stos and mov je scas push lods imul push frstor add je cmp cmpb dec repnz mov jo out xchg xor into cli pop call pop xor es fnsave or pop mov or out scas add adc push ret sub addr16 mov pop mov enter inc mov lcall inc js lcall arpl stos sahf lret sbb xor idivl xor mov lret dec js movsb mov addr16 inc jbe push adc mov (bad) mov daa stos jae mov mov sarb jecxz mov out add fidivrl aam test pop pop addr16 icebp and addr16 ljmp outsl rcl aam dec test outsl fbld lcall imul dec push aam xor xchg and xor add jmp sarb adc adc data16 pop bound sahf pop imul lods (bad) mov xor ret sub lds lds aad xchg sbb push rorb push mov mov in dec inc mov mov stc adc add mov push add adc cltd sub frndint arpl nop hlt mov enter repz push in popl push xchg mov sti popa push jl scas xor arpl das jae imul mov daa bound out xchg fcmovu jns clc js push shl scas dec roll cmp dec adc sub dec in jecxz ds test mov add and xchg movsl add scas das pop pop push cwtl dec lds inc hlt lret sahf xlat push sahf mov add mov xor sbb inc aam int3 push pop jmp pop daa lds cmp sbb out jmp push loopne divl nop mov xlat dec loope rorl imul ja ror fwait push repz dec cltd mov pop aaa mov out jp ret push sbb adc sbb mov stos sub lret cmp movsl decb nop jge aad scas push orb xchg xchg push mov inc sbb int3 lods mov cmp in ret or lret cltd inc leave xchg pop xor mov mov pop loop cwtl xchg pop in (bad) mov inc or enter push fmulp nop pop jnp (bad) sarl and addr16 dec aas inc les jo shrl add icebp out push sbb jle adc mov dec xor push cmp fnstenv pop mov xor les push daa or in pusha inc sub fldl call mov pop js dec jl fsub xor pop mov mov test adc jns xchg pop cs pop inc inc bound ds jl mov into xchg and jl scas dec fwait test sarl inc dec push stc aam movb lea inc cmp or mov clc dec ficom mov inc int mov leave loop fwait push inc mov cs fsubrl mov loope (bad) je hlt pushf pop stos lret lret xchg sbb xchg add std mov fwait inc mov mov cmp mov add adc js push add sbb sbb xor pop mov fwait jecxz adc pop in sub scas jecxz jmp adc add push push mov std jmp or push int3 sub jmp cli ret mov or sub jns lcall fwait push loop fcmovne pop mov cld (bad) repz int sahf in incl mov test mov push icebp fstpl jecxz sti inc inc cmp int rcrb cmp sbb mov add js push sbb mov dec mov pop xchg xchg loopne sub daa repnz cmp daa mov mov (bad) fistl inc jmp insb clc jo imul add pop icebp pop mov jl std lahf mov jns jmp sub mov mov pop sub pop inc popf jecxz mov add pop and cwtl jnp pop lock inc test sar mov push dec mov cmp fmuls sbb jmp push lahf inc mov xchg xchg inc push push ss neg dec jo dec push aad sbb cmp out jle and fwait sbb pop xlat out dec jg sub xchg pop push inc push jae enter into fldt das xchg inc jbe adc imul cmpsl push popa jl loop adc leave nop lea test stos pop add cli je pop or cwtl inc and cmp loopne xchg scas or je pop lcall and mov inc sbb jg dec (bad) icebp cwtl xchg adc sbb (bad) imul gs jno add inc xchg sbb xor xor outsb mov push add add xchg je mov pushf maskmovq mov imul (bad) lahf dec and out dec je sbb aad cwtl notb add out and dec sbb stc movsb xchg mov dec mov jmp xchg cmpsb lock jge fistpl aad mov xor loopne (bad) mov pop add clc outsb jno push or icebp mov fnop sub push mov nop bound cmpsb jns push (bad) hlt mov nop (bad) mov inc lds mov int3 (bad) and push sahf cld mov nop xchg hlt aaa xchg (bad) push cmp or xor sub inc mov pushf sahf push scas xchg pop nop dec sub add dec adc loope shrl ljmp dec jne jo inc jmp iret jp outsb aam int3 add inc push daa notl mov xor in aas movsb pusha push loope cmc mov out ret inc lods movsb push loope jecxz lret xchg inc sarb mov enter lcall rclb pop mov daa lea mov xor pop insb cli sub xor xchg jp xchg mov shll test xchg mov daa mov mov xchg sbb hlt adc or and es out sbb mov cmp sbb jb xchg inc fdivl xchg shlb xor and rolb or add (bad) leave sbb and ljmp lret jp leave ss pop adc and jbe (bad) xor sbb xchg pusha push xchg mov rorb xor pop popf xchg popa dec addr16 pop xor test test push xlat stc roll lods and fwait int3 test mov je ljmp gs dec pop dec xchg sahf and xchg hlt repz imul adc dec mov jmp push mov hlt enter popf out in mov jg sub in push ljmp mov sbb cli (bad) sub (bad) cmp mov or mov (bad) push sbb enter inc gs insl jg sub lock cld out push mov adc ret sbb idiv pushf loope jnp xchg xchg pop jg ffree cld enter movl mov cmc add add into (bad) iret mov (bad) rcr lods cmp pop xor inc push ja fimul lahf int mov adc adcl adc loopne add or in (bad) mov xor in fdivrs pusha loopne push shl mov inc pushf and adc cld jmp inc popl xchg add (bad) jae repz jp add movsb fisubrl jns xchg mov and fcomps jmp clc jnp mov fs sbb pop cs decl out dec loop mov inc and cmp adc mov (bad) sbb mov cmp mov push sbb les add jo repnz mov inc jnp decl push xor pushf jbe test imull jns,pn xor hlt out (bad) mov (bad) mov cmpsb (bad) rclb negl pop scas bound pop lods repnz inc dec cld aaa inc xchg push mov inc (bad) out sub xor out jp leave or (bad) out lock push mulb fnsave add dec jmp mov and xor stc push fcomip xchg aas adc lods jae cmp imulb mov inc push xchg mov lahf sub push mov mov or xor push or push and out or or js inc aad shlb (bad) jle lahf nop icebp std adc in xor clc into mov xlat cmp adcb inc gs push test xor outsl hlt xchg repz dec rclb pop xchg out lods dec aas fidivrl loop out pop addl cmp sbb xor lcall pop insl (bad) add mov add xor xor add in repz (bad) ja iret sbbb mov xchg sti lock jg sub push cmp loope xlat test cwtl enter push mov mov ss push push in sub pop dec mov fisttpl mov mov xchg jl pop ret sbb mov jp test sbb imulb lcall fildl pop (bad) inc xchg push xchg xchg (bad) (bad) mull lock fidivrl xor imul dec sahf scas out pop pop sbb xchg inc pop push jbe xlat sbb subl fwait ljmp mov pmaxsw fidivr mov in icebp fstpl jecxz popf insl inc pop lret or xchg sbb fdivp sti lods mov or mov loope rcrl jl rol add scas sbb aam xchg inc ja jl movsl add jmp nop or leave mov and xor fimul sub ja mov mov cmpl cltd inc fisttp cmp jge mov rcrb adc mov or push lock jae rorb and and pop lea xlat xor xchg (bad) jl sub and lea lods push loop stos pop xchg fidivr outsl cwtl push addr16 mov or jmp mov aaa and lods xor inc inc cmpsl ds adc sarb push ja jno sarb fildl adc push fbstp ror daa stos mov daa jl mov (bad) fs mov inc jp outsl test mov add add add mov outsl xchg xchg data16 mov or out xchg mov xor pusha insb mov stos stos xor out das cmpsl mov xchg push pop pop push insb pop jo mov push sbb mov out in or xchg out aad mov je push out cmp dec mov or jmp sti mov imull repnz cmp (bad) xor dec jg jle push loopne xor sub cltd or adc and addr16 shrl push xlat je stc xchg imulb enter ret mov push cmp mov push cld xor cmp sub xor mov aam bound xchg mov lret test push out mov push loopne (bad) push dec dec and int3 or dec fwait or stc adc repz repz adc push mov lcall int adc xchg rcl lods pushf cli or outsl jbe add mov cltd jl sbb dec dec add mov shlb bound cmp xor daa jb jle push fidivl mov stos mov loope fbstp pusha sbb test divl pop xchg push lods out clc (bad) (bad) enter and icebp jbe divl push cs dec leave addps sub shrb push not mov arpl popa sti push pop pop (bad) cmp jno callw mov adc bound out sbb push (bad) incl jg ljmp sbb sub cmc ret aam stos lahf add mov cwtl inc in mov mov and imul loopne aaa aaa mov mov gs cmpsb inc sub inc inc pop pop cmp dec in ds (bad) mov jbe flds test (bad) add rclb in or mov mov add adc xor dec and insw test movsl xchg adc in push xchg clc xchg out cmp push scas test ss add subb sbb testl call (bad) ja cltd into pop hlt mov stos repnz dec data16 aad mov stos int3 sub pusha jnp sbb inc ret jp (bad) pop fwait mov call lahf aas add imul mov jns rclb xor hlt xchg lock push inc das push mov xchg mov add (bad) jmp ret lret or out xchg mov ret lea sbb jae outsb and xchg imul test test in mov test xchg ret imul push push out sub arpl arpl sti push std cmp add stos das sti adc push add std or hlt push mov and (bad) sub ret mov cli mov shr shlb and mov rclb jnp test xorl or inc pusha loope loopne sub movsl movsb fldt push sbb adc xor xor hlt or mov ljmp xor cmpsb loopne mov and es aam in inc jne leave lods pop sbb inc paddb rclb mov add add mov push push (bad) jb mov cld sti (bad) mov xor cmp xchg (bad) insb mov ss pop jnp xor xchg xor in sbb mov cmp (bad) fildl pop (bad) jb adc out popa clc scas xlat mov adc (bad) push outsb add jl (bad) test ss (bad) mov mov pop mov and (bad) aaa daa mov loop stc xchg mov xchg sarb adc aam scas movsl pop incl iret inc add mov dec jmp pop je loope mov jbe and sarl cmpsl sarb fwait (bad) lcall shrb xor jo int3 shll outsl daa adc mov jns fwait pop pushf push stos iret add cli pop lock xchg ljmp mov sbb jbe mov sti jge nop jmp and pop enter (bad) xor and add fcoml pop or ss dec push enter xlat js test mov lahf push icebp shl das fidivrl test inc pop lcall pop sub cltd sti dec mov pop and fs fiaddl int3 inc add dec icebp cli (bad) (bad) and sbb jns mov mov pusha jmp pop loopne or cmp sub pop sbb xor cmp out clc xor popa test pop jno jnp dec repz pop lods mov mov shl cmpsl std test and test es arpl sub lahf pop mov dec inc in push test add insb sbb fnstcw sbb push jno les lret bound in daa imul mov nop cmp or jo cmp daa leave std mov and dec xchg mov scas jnp mov mov pop stc cmpsb sbb mov scas mov int3 cltd and mov (bad) int insl sub fdivr jbe popf repnz aam stc subl adc pop cmp out and pop loopne jno cs dec ljmp sti mov ret daa faddl sarl adc icebp add mov push inc or inc in pop jno mov mov push sbb or xor stos pop push mov sbb repnz aaa pop dec cmp add and cmp addr16 xchg pop jg js rorl int3 mov call out pop dec push clc push xor nop daa adc (bad) sahf mov mov inc loope icebp pusha lret mov inc xchg gs push test dec push mov int sub or xchg mov push lcall inc sti in aaa cltd ja jbe daa fucomip gs loopne iret mov push pop fs cmp sahf add cli int add fcmove sbb in mov add bound (bad) popa mov cwtl push cmpsb adc lds sub repnz (bad) jb pop add lods imul sbb jmp xchg push jno mov lds loop pop pop and test nop (bad) int3 (bad) push mov adcl repnz and lcall jns push test inc cmpsb aam inc pop pop jmp pop xor iret jecxz cmc mov mov lcall jg dec (bad) idivl add test or cmpsl leave sub (bad) std xchg jecxz enter mov cli scas in push and or mov int3 or jge and inc xor sub scas scas mov push iret (bad) mov fcmove fwait nop ret xorl mov enter mov leave mov stc into xlat scas sahf aas fildll (bad) and imul inc lds cmp (bad) nop cli scas xor sub pushf gs ja adc repz jnp push mov das es adc dec in popa adc dec in pop inc xor cld test mov ret push jno pop or loopne sbb fs (bad) lret cmpsl (bad) mov xchg xlat add sar addr16 sub or rorb push cli xor mov aad cmp xchg cmp pop push lret scas cltd pop add adcl pop mov enter data16 pop std repnz fdivl inc (bad) cld in mov test lcall dec or fwait or rol inc push inc cmc inc xchg ret dec mov sti lods mov push lock repz mov cmp imul mov cs or push addr16 inc out stos sbb insb or xor sti aaa sarb data16 sub jecxz dec lods adc ss stc cwtl je pop (bad) pop xor add test leave pop push mov stc xlat lret pop lret dec xor int imul ja shrb pushf push jno dec sub hlt mov iret xchg mov sub sub push not inc mov arpl das or mov cmp mov fcomps lcall push cmp xor sub into or lret fwait add mov stos mov pop or movsb stos lcall (bad) test test test add cmc or jg icebp xchg pop popa int cld inc dec scas ficompl cld push or sbb sahf xor add insl pop inc data16 fnstcw (bad) ror sahf sar sti fidivrl push sbb or cmp mov fstps add push lahf add fstl mov fisubr mov mov insl decl or data16 stos and pop push sbbl stos das repz addr16 in dec pop jb (bad) xchg xor sub pushf xchg push push pop pop adc call inc sbb jno or (bad) jle jl leave stos cmp pop inc inc cmpsb push pop (bad) xor adc push and adc add sarl sub mov mov movsb jno syscall (bad) adc xor lods sub lods and dec lahf insb scas sbb fildll pop icebp mov jg push jo jp mov pop jns stc hlt xor pop cs or jmp pop daa dec lea mov and pop xlat xor push lcall popf mov int les movsb mov xchg mov sub sub jno shrl xchg aas sub add jl pop sub (bad) mov adc sbb push pop gs mov movsl (bad) inc ret movsb je inc insb ja push pop jb mov pop and cmp rcrb pushf out add lds test (bad) (bad) xor inc cli test mov (bad) mov and dec add sbb adc mov or cmp out sbb push xchg dec repnz in arpl dec rcrb jno adc cwtl mov loope out or movsb pop inc xchg push in xor jge add push jne push stos stos divb mov mov in mov aam jns mov imul mov bound add sbb fsubp pop jns cmp (bad) dec inc inc aas loop pusha jmp popa xchg (bad) lock lods dec push and adc hlt aam cmc jmp dec xchg test into call jmp or test mov sbb and in xchg xchg sub sbb repz repz das xor call jecxz test push xor (bad) pop in scas sar mov (bad) mull shlb pop push mov push popa mov out mov dec outsb test sub daa adc push sbbl lret adc jno loope lret enter lods mov in daa and in jl adc sub test shr out jbe cmc pushf pop mov sbb add add jne xor je (bad) (bad) xchg fimull lock scas cmp mov stos cmpsb fistpl pop push inc arpl xchg rorb fildl or lods insl or out das inc cmp pop push fst fnop int3 test das jno pop daa (bad) adc into jbe jle daa imul lea (bad) in xor pop addr16 pop fstpt push ds sahf push jge cmpb dec push out pop jne push or push sub pop outsl inc sbb dec (bad) int fcoms mov rcl push cmp sub mov stc movsb jne test xor xchg fildl add xor jbe mov repz sub adc sbb cmp mov into lds push ret ds cltd in adc cs push divl pop movsb xchg mov xor (bad) daa pop and repnz sar xchg fdiv in and inc ja (bad) mov aam mov into sub out iret stos lods mov ficompl jae (bad) in mov push xor repnz adc sahf jecxz jg cmpsb (bad) or pop mov xchg jbe insl or dec lret popf push hlt mov rcl test js cld pop scas cmc add lret ja mov or (bad) xor mov (bad) lock mov bound in arpl int3 mov (bad) (bad) cmc scas rcl cmpsb and inc pop aas (bad) iret or jbe fist inc or insl jl pop mov add stc shll add nop test lods jg rcll push into (bad) xor xchg pusha add movsb ja sbb sbb jnp jle mov jmp das insb orl or and inc lods aas out (bad) mov int3 adc cmp sub imul or push sub rolb jmp loop or add sbbl sbb inc lret and ljmp pop add test pop cmp cld pop sub je fs xor add xchg pop pop push sub adc stos cmp inc aam imul jne repnz scas iret out jb adc arpl (bad) dec cltd add pusha add ss and in popf decl push xor pop pop mov mov cmpsl sti jecxz cmp cltd aas lods test push cmpsb pushf rcrl int3 data16 sbb mov ret sub cmp inc stos hlt repz lea adc jns xchg hlt dec xor xchg mov mov movsb xchg xchg and je lret int adc lock mov jecxz cli (bad) add out (bad) jae loope sub cmp inc mov mov add loop adc dec in inc mov mov pop std int3 inc jmp xchg jmp xchg jnp popf fistl add add fmull pop andl fsubl cmp mov insb xorb lods sahf xor lods push jo xchg push popf ret call lcall pop pop xchg adc or icebp sahf repz shrl jg lret mov and sbbb lcall sbb inc sbb sbb sarb fs inc fstps adc cmp adc loopne mov mov lret mov les lcall cld ret rcl adc in jecxz jp in push pop sbb lds js xchg bound push out andl jbe je xor jp mov and push (bad) jle add loop (bad) mov push mov fcmovb or inc push loop adc int3 mov in je jbe into or stc mov scas mov roll mov in pop push xchg repnz push sbb jne (bad) push popf inc xchg jb adc add add aam xlat outsl aas jmp inc lods jno repnz cs jo sbb test inc sbb push cmpsl (bad) jle movsb lcall pop dec jg push (bad) repnz je ja xchg push pop out cmp adc adc es test fistpl sbb xlat pop inc dec adc adc inc xchg adc xchg mov push and push (bad) repnz jecxz cmp add mov lods lods adc in xchg sub push ret adc cltd jecxz mov jnp in addr16 lret adc into test jo (bad) mov scas jo pop bnd popf aam sbb push adc or imul or jae cmp add lods push mov or icebp and xchg or lret stos add mov out (bad) dec popf push xchg or mov mov leave (bad) cmp test xchg push mov cmpsl push mov mov scas sti pop lahf cmp stos cmpsl or mov ret pusha mov push push sub cmpsl in loop stos in sti sbb sub sbb fmuls mov or js jg and cmc leave mov mov mov lcall inc in jne stos pushf and dec iret test repnz cmp pop (bad) and inc leave and das fdivl pushf mov call mov loope xor shrb sbb lea mov hlt sub jle mov mov xor mov cmp mov addr16 idivl sub mov add add loopne lods mov out add mov int3 dec inc (bad) and or dec sbb jmp std nop jp in popf push xchg jnp mov (bad) je inc cmp dec loopne fstps push out bound repnz movsb sub dec cmc jns mov inc in mov add push cs push cwtl sub adc cltd fiadd loope adc dec mov cmp out jbe ja cmpb xlat iret cmp hlt ds test cmp sti in sub dec out push jns mov mov clc in mov pop leave adcl rol fldl mov add sar adc pop out push mov cmp xor ds cmp scas test add lea mov pop dec mov sti push daa fistl (bad) daa lock (bad) in jne rorl and mov sub adc sub push pop lret subb test fs add cmp negb and mov enter shll nop outsb dec mov div loop cmpsl in mov faddl or mov cmc and lret scas and out enter out sbb adc lahf scas mov inc pop xchg ljmp mov rol js push dec xchg xchg mov popf adc add inc pushf mov cld fstps push mov xor gs aam xchg cmp scas cltd cwtl xor jmp and mov pusha test (bad) add ljmp into ljmp add add daa (bad) mov push (bad) stos arpl mov cs fisttpll mov mov dec push lahf inc inc mov xchg test mov or xor pop jo or mov js dec (bad) ret cwtl cmp imul in mov aas shl test rcll gs jcxz popf push (bad) out dec xchg mov (bad) lods ss add sahf add push out xor dec adc test aam sbb sbb mov in roll stos jp popf ja adc xor xor jge mov fidiv je add nop test or xchg or in cmp and imul or xor add add add mov cmp push in or mov fstps xor andl aad rcrl mov dec jmp adc dec pop push sub adc pop mov mov xor int3 and pop and mov pop sub xchg push test pop sub add cmpsl push pusha into and rcr gs int int in bound add fwait out adc aas sub mov outsl or pop in fisubrl outsb roll js pop sbb ret ja,pn and or out scas mov dec iret in pop jbe jl inc mov not xchg lods pop push sahf (bad) movsl sub sbb fs push aas rorl sbb sub push or xchg out aas sbb add and das mov repnz dec les in sub jmp jns dec xor cmp (bad) push ss xchg loope adc xchg cld xchg inc das jne jp mov sahf imul gs add inc mov cwtl lcall lods dec and aad or add jge adc imul and cwtl lcall adc sub loop enter aaa mov std stc add xor es cs cmp cwtl rcrb (bad) int3 aam scas mov cmp aaa cmp testl in lret xchg inc lret in fucomp ficomp popf push push enter sbb mov call movsb mov pop xchg xchg pcmpeqb ficoml repnz xchg mov push inc sub push pop push lock add (bad) call pop (bad) xor pop xor inc add xor jle insb movsb pop mul xchg add and gs outsl sub insb mov xchg insb jo out imul jmp push call or stc cs and jae jo lds aaa xor jecxz rcll jg cmp in aad ss jp pop mov aaa mov pop cs sub stc xor mov fiaddl cltd jb fild ror xor cmp dec dec bound add stos orl or int3 mov jbe dec mov pusha cwtl push inc lcall inc mul push dec jns lea xor adc xchg fidivrl add data16 inc test scas decb mov adc inc clc add pop fisubrl repnz xchg pop movl int3 adc sbb or jb insb out cmpsb xor outsl push sub rolb pusha xchg dec (bad) jo mov outsl add dec ds fisttp in xor ja pop mov rcrl aad adc and push popf push enter mov push mov rcrl dec fwait cltd lret push cmpsb mov ja jae jmp cmp notl lock jnp and or out pop lods rolb in imul (bad) lcall notb out cmp or imul dec mov sub divl loop mov fucomi ret dec pop cli xor push (bad) adc sub ss int sub push push (bad) fiaddl test and cwtl jg xchg leave push (bad) std jns test sahf shll aas std out fsincos fdiv and fistpll xor cmp adc jl repnz dec rcrl xchg mov xchg test (bad) (bad) mov inc inc and (bad) or cltd dec xchg dec xor or iret xchg aad xchg xor push push pop dec dec sbb mov sbb inc xorl cmpsl jge mov pop inc aas mov mov dec fisubr pop (bad) jno pop sub lret ret aam adc jae popf lods or rcl jecxz cmpsl cld pusha out in xor adc xchg scas add mov adc sbb add push inc movsl (bad) adc push fs (bad) std leave gs and lret inc push stc mov xor bound popf cs ficom mov loop stos in push cmp loopne xor xor pop push subb js popf pusha cmc ss ret push pop inc outsb mov push push js mov stos mov enter pop shrl jbe divb xor mov sub popf jge ret jl leave push roll nop sbbl xor pop fwait pusha sbb clc imul inc inc fiadd icebp es xchg pop push jle js (bad) (bad) aam insl repnz call push fldl hlt inc test and shll scas out sub jmp daa inc xchg add stos xor add add mov cmpsl pop add inc jge movsl lret add xor mov lahf loopne push bound jno lcall (bad) es and or call mov iret dec and and (bad) in inc ficompl pusha rol cmp pop push std rcrl mov test movsb ljmp add push sbb cmp (bad) fnsave xor or negb adc fcmovu mov into sbb mov push sub push (bad) outsb fldcw pop clc fistl (bad) inc test ds insb xor data16 int3 jae cmpb out add dec loop mov jge cltd push mov sbb push in das ja arpl sbb in lds dec and in daa div or mov pop push and mov lea jb repnz cmpsl add rorl rorl lcall fisttp mov mov inc jge xchg cwtl lods or outsb (bad) aaa cli sbb sbb fld cs mov roll sbb jb aad cmp (bad) mov pop imull xor mov sub fiaddl push repz sbb popl inc dec cmpsb addr16 sub lahf adc jb in aaa mov lahf jg std lods in jnp lods xor fdivrs out adcl imul xor inc push push sbb cmp ret xchg rorb xchg pop adc push inc xchg xor mov jno add ret in mov adc (bad) ret movsl sub out add add mov xor pop inc sbb lcall xchg push mov xchg pop jge sar movsb imul outsb adc cwtl mov mov mov insl inc call inc les out dec mov xchg aaa inc cmp xor lds push ret push out push movsl cmp out sub jle push jp jnp or jb gs push scas in cmc inc scas rcrb add sbb push aaa pop dec inc xor insl repnz pop call mov or mov adc getsec in xchg mov call jb imul push orl out xchg xchg mov test ss loope cmpsl pop mov icebp aad or iret mov imul mov mov xchg xchg fmuls cmc aaa out add xchg sub aad add adc ret ljmp call fimull or sub jecxz lock or sbb xchg mov test rolb push sbb (bad) out call sbb lock xor add mov xor or cmp rorl scas insl adc int3 aam pop and cltd mov lahf iret pop or mov adc ja in mov (bad) mov adc xchg sbb cmp lds or jae xchg clc sub addr16 dec sahf cli mov call fwait xchg loopne dec outsl push push sub loopne mov lret add test jl jle cmc fbstp fisttpll loopne aam sub pop inc stos in push shld movsb jo and es add inc jl sbb aaa movsl ret ds nop mov and vaddss lods jecxz fcomp stc dec and add sbb mov imul dec dec ds hlt or popa inc insb lods adc movsl js negl mov inc stc vpaddusw pop xorl xlat sbb or jb lods jns mov ret ficompl fdivl push pusha sbb sbbl xlat pop xor mov test xchg adc inc dec mov add push adc lcall mov dec add lods stc aaa ret call (bad) dec popa mov (bad) out inc jl test inc mov adc adc push stc pusha or or insl sbb test inc add mov aad aas movsl testl add add xchg (bad) aaa pop outsb leave inc push dec fistp popf mov test sbb fwait and sbb mov divl adc sarl mov add dec loope adc push popf mov in jae jne mov jo ret idiv push (bad) and cwtl inc xchg pop iret sub rcrl (bad) mov subl push inc cmpsl aaa test and shll test stos inc cmp (bad) cmp int fcmovnu cmp xchg outsl dec mov popa lcall push sub cvtpi2ps push jle jbe xor xchg cli mov aad inc imul mov fisttpl sbb xchg sbb jle pushf iret outsl dec repnz xchg mov (bad) aam cmp push mov push dec add pop addl pop std das imul dec jp pop scas adc ljmp dec mov rcll loopne mov (bad) adc ret in push push loopne mov jns ffree mov test icebp pop fdivr xchg add adc or fnsave outsl pop lcall mov loopne jg (bad) mov insb mov sbb push and nop cs (bad) jle push lods jb sbb mov xchg ficoml mov (bad) and push adc hlt and int (bad) (bad) xor push int3 xor mov inc cmp bsf push or fs sbb ds pop scas mov iret icebp (bad) mov add loopne dec add mov daa pop or jns test pushf or shrl push mov scas sbb movsl add add xchg and jecxz dec (bad) cmc lea mov lcall sub out sub dec not add sub std pop jno push dec sbb lret adc or cld cvtps2pd adc sbb push dec sti in jg popa and test sub pop aas cmpsb cmp mov mov stos mov lea fbld fidiv insb in mov dec in inc xchg fldt and pusha data16 push jge or test sbb cmpl mov aas ljmp les mov js jg ds test add push loopne and sub addr16 dec andb lret cwtl out xor iret dec mov xchg add jmp imul dec lods into pop ss inc ljmp inc outsb pop pop push out stos stc movsl add mov dec mov stc xor outsb mov stos clc ljmp cmp paddw loope sbb pop xlat jle push (bad) push push es daa jmp insb dec cs or jo test hlt sbb fadds cmp dec (bad) xchg dec clc xchg daa xor adc das sbb hlt fprem1 cmp mov decb mov push or movsl aas idivl mov push stos out push sub mov pushf in pop push stos insb hlt add jmp in mov ficoml ret xchg lock lods xchg bound sbb xchg notb rorl shr cmp iret push jle (bad) cmp push gs xor sbb idivl mov jmp jno and (bad) xchg mov ja sti out scas sbb dec (bad) jno and call cmp jle mov out mov ds ja cld into xor enter imul lcall jl cli sbb jb testb dec xchg in sahf popf jbe (bad) (bad) xcrypt-ecb cmpsl dec dec pop fwait addr16 or repz dec test jl imul loope push mov fnstsw push push stos sub xchg icebp lea sahf mov clc xor out add in cli loop pusha pop adc and inc xor ja push incb loope,pt inc pop dec cmpsb into or imul ja ja shrl aas push test mov fs jle,pn cltd (bad) hlt add xor test popa cmc shll test and clc cs movsb or mov cmp jo,pn inc loop lcall add add arpl fbstp pop mov fld xchg mov movsl push mov lcall (bad) dec inc test dec arpl pop aas loope mov sub cld daa rcr dec or sbb jne shlb out dec cmp jg mov dec adc cltd (bad) adc dec imul (bad) xor pop (bad) cs in mov add inc add movsl fnstcw cmpsl jl fsubrs sub in ret sbb pop sbb lea mov adc sbb bound lods adc pop insb (bad) xchg sbb in and or cli adc bound add imul fdivrs and cmpsl add cltd sti sarb jl cmc xchg fidivl mov sti test jp lods addr16 add stos inc add and dec cwtl dec sahf ljmp xchg (bad) movsl (bad) jecxz push das loope jbe push adc daa sub loopne add mov jl jecxz xchg sub jb push cmp jmp cmc pushf and jp mov rolb dec cmpsb mov mov loop shll sbb gs sub loop push push call xchg cli fwait dec sub loop jae sti sbb pop incb push sub movsl test mov lds add fwait sub sbb (bad) push hlt mov lods daa inc inc popf cli jb mov test add inc ljmp jnp dec cmp mov (bad) cmp lret imul adc outsl sub lret sbb sub scas sub jbe add (bad) and cmpsb aaa addr16 pop sbb loop into lea nop push subl jle in and xchg out adc adc rcll idivl cmpsl pop add push jp mov or pop jmp pop test sub push sbb sarb clc or pop lods dec mov fdivs push inc imul cwtl cmovge lods int jecxz xchg mov jne pop mov dec out mov xchg add mov aam enter scas mov push inc lods dec inc add and sarb std lret negl pop out jg out popf aaa enter dec mov sbb sbb mov fdivrl add lods jns stos pop cld jo jecxz inc cmpsl mov dec int not jno jb aad add mov push test push mov add std dec enter sahf popa je js gs or addr16 hlt fisubl les xchg ljmp or mov jecxz sub push push jle pop dec push movsl cld fwait xchg push inc pop (bad) and cld inc dec mov std jmp and lods inc (bad) imull pop jnp jecxz mov jg movsb xchg stos mov xor out xlat lds outsb mov mov sub push dec pushf pop xor lea push jb sub icebp jb xor inc in push and jno les or mov adc sub mov (bad) push enter lcall xor push jnp and lock (bad) push test ja (bad) xor cmp add add xchg push outsb push cwtl mov ret mov cltd pusha int3 mov mov dec jb dec aas add in or scas clc outsl adc ljmp jmp mov inc inc out movb xchg adc or leave sub xchg pop pop jle,pt dec adc jbe mov add lahf adc dec insl xchg je and sbb inc lret and cmpsl stc sbb push mov push fiadd in sbb icebp loopne loop sub xor sub test pop ret (bad) ljmp iret into test pop mov push mov test pop rorb stos or cmp jo rep sti (bad) xor adc pusha outsb pop xchg popa in stc cmp ljmp and add add add push inc decl mov scas xchg idivl pop dec je mov sub sub xchg and (bad) push or fcomps (bad) cltd mov pusha stos mov jp inc insl add pop sbb (bad) mov enter out xchg mov pop (bad) add aam push das (bad) pop daa pop in and into or js icebp and jle stos sbb aaa test sar mov pop xor cwtl xlat (bad) fimul nop mov rolb mov mov jecxz mov xor mov gs adc mov js test pop sbb lahf stos stc enter rol nop fstpt les test add sub inc xchg xchg pop test fldcw fnsetpm(287 add outsl add data16 or add jbe fbstp cmp fiadd loopne add push jmp and pop lods add imul jmp add pop das jecxz jge mov dec movsb xchg adc cmp test mov pop mov xor mov xor mov es xor imul gs sahf test push out (bad) leave jbe cmc inc mov push subb aas popa cmp mov stos stos mov pop insl ja inc repz sbb jo inc push jge pusha xor jl pop lret daa mov sarb mov mov iret shrl lock pop aas xchg ljmp out mov or adc pop int3 push pop mov push cmpsb inc mov jnp test and out adc bound cmp enter dec jmp sbb push lret xlat sbb jl cmp jecxz movsl or sub push xchg cmc pop mov sbb push pop cld sub scas movsb out pop hlt sub lcall aad popf mov aam popf push fsubrl jns jo mov mov mov inc out orl int push jecxz jecxz nop outsb and xchg pop push jb sub aas ja push mov aam mov sahf sahf (bad) shlb mov pusha je lods cmpsl inc adc dec mov lds xor das mov sub xchg sbb push xchg xor xor fsubl js mov xchg xchg in push adc inc cwtl or lcall xchg xchg test pop or pushf daa mov sbb sub divb xchg jns das in push sti xorl scas pusha xchg adc insb fwait jne jns out sbb inc fwait out pushf int xchg stos xor xchg cmp inc and add call xchg outsl lea loopne jmp dec movsl sbb clc pop xor mov cmp lea das pop mov ret sti leave xor fisttp inc adc cltd or aaa mov mov or fildll add adc jle int3 push dec data16 sub pusha aam das nop sub pop pushl pop cmp das popa xchg data16 pop popf repz add lcall cltd outsb inc jg dec adc xor pop mov fidivrl (bad) mov cmp or in pop subl mov fldl add jecxz or cmpb cmp sahf push (bad) add mov mov or repnz cmpsl fdivrl jg jp std test xchg pop lret mov stos lock loopne or inc daa test mov or arpl mov push ss fcompl add test mov dec (bad) pop and mov insb repnz add sbb mov lret imul shl shl add cwtl in orl call fild dec fsts xor outsl push ljmp in jb ds ss cld (bad) mov ds cld aas pop sbbl sbb xchg lods test lcall mov mov or add add jge fsubr jbe int3 cmp cmp adc push aad inc scas dec int xchg gs adc jl xchg ljmp jb jl outsl loop jl jecxz add push addr16 (bad) mov lock jp xchg inc int or cld sub and lock jmp les movsb mov std arpl push mov or out cmp nop pop mov add js fsts imulb cmp call ss call sbb jg fdivp or xor jne push lds add andb sbb stc test (bad) and lods jmp cmp andl jmp or jle cmp pop test push aam ret hlt fstpl lahf bswap mov add add adc add fnsave bound jns mov sub movsl bound jle sub cli or xchg negb movsb mov lods lcall lods sub inc mov mov or popf jge mov xlat lds roll imull push (bad) cmpsl mov std cld enter lods and in pop dec fdivs arpl (bad) pop test lret lcall out xchg shll jge lds inc fiaddl pop sub cmovge jl xlat scas and test outsb pop call pop pop jmp shlb pusha outsb xchg jbe push (bad) dec sub mov ret xor (bad) fstpt inc sbb addb dec sahf pop pop pop xchg pop cmp in ret hlt mov rorl stc add nop outsb fcmove (bad) jp inc call imul add hlt sub ds in ds cmpsb mov inc cs or movsb leave push out xchg fnstenv insb or push xchg pushf sarb mov mov (bad) arpl xor dec mov (bad) mov adc fstpt lret mull sbb ja sub pop dec imul mov adcl enter shrb and adcl iret mov adc pop sbb inc imul mov xchg gs mov pop sub xchg dec or xor mov stc mov inc push (bad) insl loopne sub fisubr xchg dec inc loopne push scas test cmp ret lret incl jae mov je adc call pop sbb insl add add push leave mov in add repz mov nop sub mov mov sbb cld jle in xchg cmp ljmp lds add xchg pop fsts test iret scas push pop das mov dec push inc mov sbb cs jnp call andb or mov mov push push imul out (bad) push jae cmp xlat outsb mov pop rolb sbb push fsubrl xchg jne,pt push xchg xchg mov sbb mov out fdivrs test cs lret test insl (bad) idivl cmp jmp and cmpsb (bad) insb rep out leave jp sub pop fldcw in jb mov mov xor sub mov add add stos test scas sub jecxz nop mov loopne jecxz sbb xchg sub xor js mov ljmp xchg in jge or outsl inc mov add dec push fmull scas xchg int fcomps lcall cmp int3 add xchg (bad) test lret jmp das and mov nop mov push and sub mov sub movb sbb aam adc add xor and xchg mov sbb cli dec inc cltd int dec pop jno into jbe mov mov sub sbb cmp jno sbb popa mov rcl mov cmp push imul add loopne xchg mov insl jecxz ficoml sub mov mov aaa pop or xchg inc lret jp add add aas lods aaa dec fs pop pop mov adc add loopne dec lock data16 rcll inc insl aas das xchg pop ja (bad) jae jmp mov repz inc fdivr fs cmp gs cmp and xor dec cmp push sub call shr stc cmp loopne stos ret lds cmpsb xchg inc xchg pop mov xor and out js das xchg bound sti pop movsb push xchg (bad) push adc jb sub icebp adc out jmp xchg pop adc mov sbb mov lea cmc (bad) out fisubrl sbb pop stc js mov sbb ficomp stos mov inc fwait sbb das rcrl out adc jecxz enter out xlat or call fsubs add xchg pop mov repz pop enter fs jle imul fs daa je out inc leave xchg or pop sbb mov jmp out cs lods cmpsl or xchg add dec xor insb jne (bad) cmp flds sbb fs rorl pop lods inc jae out inc jge test sub int3 mov mov jmp mov iret xor ds sbb arpl cmc nop mov dec outsb mov dec (bad) xchg movsl and adc fistp inc fldl2t fcmovnbe mov mov aam adc mov sbb dec movsl sub inc fcoms adc push add das ret xchg fcoml push pop fistpl clc repz sti es inc jb fnstsw test pop cmpsl int add rclb dec dec je outsl sbb sbb xchg sub mov push call out pop jge mov jno jbe mov inc lcall sub pop es jno mov pop bound xor movsl (bad) xor test test movsbl xchg mov sahf in mov mov pop adcl push das lods je sub dec and dec cmp inc aaa mov jge loop add mov mov push ljmp pop lods xor outsb imul inc out dec inc mov dec (bad) jmp sub ret outsl lods pop push decl enter callw dec dec daa cli mov (bad) stc in jmp sbb pop orl (bad) push xorl add add jg jns jbe pusha aad inc pop out es pop pop mov xchg cmpsl sbb aam int3 sub adc outsb cmp in mov and dec fnstcw fcomp jecxz pop jbe fwait and enter cltd jb rol out inc jp es add add cmp cltd jnp jae cmp push mov jmp (bad) mov cli jmp add sbb xchg xchg inc test ja cld mov and dec in push sarb out push mov hlt outsb loop nop sub aad dec out cli and andl iret and dec sub xchg in fs mov sub adc add xorl dec adc (bad) and in pop adc jmp xor pop fbld xlat push push push jl add add imul cmp ja call xchg (bad) mov xor test test pusha les sub gs or jmp jb imul push jge out std aas arpl (bad) jmp dec push jmp imul xchg dec ret fwait icebp jg test and adc popf jge (bad) push (bad) mov inc xchg outsl dec mov xchg xor movsl mov push dec fnsetpm(287 jmp inc rorl rclb lods fbstp mov jno mov imul pop enter (bad) xor jb loopne subl ljmp aam sbb or flds sub jmp adc push push cmp or mov add add mov jecxz add xchg arpl imul sbb in jnp xchg sbb fldenv add lahf xor cwtl roll in xchg mov rclb stos jl add (bad) insb cli mov adc xchg mov jl mov and loope ljmp bound rcrb jge xor push or jecxz mov repnz mov insl sbb fiaddl jns inc xchg pop inc in xchg test xchg xor push fcom cmp push clc call dec popw lcall js mov mov sub xchg lock clc inc (bad) xor mov js cmpsb mov jle test adc aad mov lcall jo out mov sbb aaa loop sti arpl push adc popf adc add inc aaa test lahf iret ljmp loope mov mov js dec adc sbb push cmpsb sbb ja popa sahf mov out ds jns lcall sub test fsubrl pop xlat outsl pop mov int mov into movsb cmp aaa or pop or shrb js,pt xchg insb xor mov fwait mov sbb adc xor push loope,pt test fidiv out lds dec dec aaa dec fwait jmp jnp gs or aad sub push sub outsl test nop repnz add add mov mov mov sbb hlt fwait (bad) int repz push mov fidiv inc xchg test mov mov jb pusha scas push add pop push in mov mov mov lock test test add leave std nopl fdivrl xor scas pop cli (bad) push mov in in stc insl js sub mov (bad) ss pop cltd decl push mov mov xchg inc push out or fwait mov push divl arpl push ljmp pusha fnstsw dec push sbbl cmp dec es mov xor inc pop inc mov in mov out push ljmp js daa test sbb dec dec ja cmp mov gs shll outsl adc add xor cmp mov sub add out mov cmc dec mov mov sub sbb push sarl cld aam add jmp add mov in dec out (bad) jp dec into pushaw repz test test in dec sbb sbb enter (bad) and xchg insl stos jl lea sub cmp cmpsb sbb jo incl sarb adc pop popw das mov pop mov fstp cmpsb in jbe mov xchg divl mov push jl push gs sbb int3 mov in dec test jecxz inc sbb (bad) mov mov cmp xchg cli fs fcoml pop pop adc xchg sub loopne and pop fidivl cmp push ja pop lahf xor movsl (bad) cmp pusha fwait ss pushf cmpsb repnz jge shr adc cmp imul out clc xor lret push adc or arpl lea add add add sub mov push sbb shrl xor push shrb in pushf decb mov lret ret fist sbb scas cmp sub dec jecxz mov sbb (bad) cld in addl lret subb adcb adc xor cmp xchg (bad) into xor xchg lods xlat push jo xchg cmpsl xor ljmp scas xor push jns inc stc push mov subb adc fnop outsl fsts loope popf xor push dec cmpsl imul dec inc popf pop dec (bad) or (bad) xlat jno adc in stos xor jg pop mov inc stc test pop adc or fbstp fisttp jns dec xor pop inc popa lahf xor xchg lock ss add and pusha (bad) les icebp notb sub adc dec imul ss jb cmp jmp sbb dec mov add mov (bad) cmpsl fild ja sbb inc ret daa xlat rcrb mov into popa test dec mov in fidiv ja rcr jno or xchg movl push mov popa into (bad) idivb (bad) out xchg aas jecxz pop or and sbb out and mov fstl sbb adc fisubl jp test xor pusha cmc ja sub ds push add add lcall ret ljmp ja (bad) push adc add inc aas or xchg ss arpl icebp cmp xchg and jne repz std aad pop mov out or fsub (bad) aam pushf push rol xor movsb jb mov inc insl pop insb xchg xlat jmp and mov inc insl cmpsl hlt (bad) cmp lods shll or xor inc test loope (bad) int3 daa loop mov pop (bad) cmp mov sub mov push push icebp test mov adc outsb fstpl dec add push flds popf adc push hlt loop (bad) cmpsl mov (bad) jo dec lods add int3 lfs sub nop mov daa shrb dec or lahf pop in dec lds sub add cmp imul data16 out and pop pushw cltd loopne cmp add inc pop (bad) sbb ret icebp call mov lock xchg pop mov sbb (bad) les in jp shlb clc dec imul ficoml stos mov xchg cmp adc adc rorl xchg mov bound add fwait ja in and push cmpsb inc (bad) add cmpsb inc adc jo adc lods test sub test hlt or cmp gs insb xchg xchg sub or mov test stos dec mov movsb xchg mov ds add inc (bad) push lret adc je shrb enter push ja test les sbb lret push lret xchg add adc rclb repnz pop sub adc imul dec imul ja es imul pushf xor std in or in push mov lret mov mov cmpsl sbb jo stos mov pop xchg (bad) fs ds loope insb ret push pop ljmp push xor mov roll cltd in push push mov lret fwait xor test sbb mov push subl fisubrl insl mov mov fiaddl fisubl popf fistl aas inc push mov jecxz lea or and fistp push fmuls pop or jmp or daa xchg xrelease sbb cmpsl clc cltd icebp mov subb jmp dec pop scas mov fdivr loope mov jnp lods jns mov push ret insb loopne push dec outsb shrl or ret inc inc fmuls sbb jne (bad) scas insl adc and jecxz jp data16 loopne push mov pusha rol and daa ffree (bad) (bad) and aaa ret and jnp leave cmp fs pop mull xchg xorl aaa insl jo insb (bad) dec mov fstpt out scas pop in mov and push inc inc pop std loope aaa jl mov sbb adc fcmovnu jge push mov stc imul xchg mov (bad) pop push mov push (bad) out les xor in push dec sub and lahf mov dec jb aam lret sbb icebp pop and out jno sbbl out inc sbb jg and adc imulb add pushf scas mov add add dec mov mov daa imul loopne jns pop cmp es add test lods arpl int (bad) lahf hlt lds das fstp cs lock sbb fcmovbe ss adc push pushl mov add outsb pop add lods xchg push adc push pop loopne adc pop jle mov dec dec mov or icebp pusha pop fs sarl pop sub and push enter pushfw rol mov icebp scas outsl pusha push pusha pop xor xchg jmp sub (bad) push mov loope cmp jnp xchg int3 inc lock loop cld xchg mov push mov cmpsl lret mov lret xor in xor popa test or test daa imul lcall sbb adc and movsb add scas jbe daa test mov push inc or and int movsb dec cli out in ja sub and sti lea movsb push out stos sub push shll mov add cltd pop jnp (bad) imul loopne insb adc (bad) (bad) stos cmpsl jg push xchg mov mov xor rcrb push add adc jle repnz aas dec out mov out lea push mov dec arpl pop imul out sbb ret mov imul shrl (bad) adc fs pop xor add push pushf mov ljmp add in or pop js fist and bound hlt mov imul cmp and inc inc arpl sbb add in lods sbb cmp pusha scas sahf push pop (bad) ret mov mov jmp rep lret sub (bad) lock mov popa pop jae and mov xchg shlb clc or push xor mov hlt dec into cmp je push cmp mov lahf mov jo mov xor xor incb mov (bad) xor mov dec fcoms push adc pop mov cld pop push mov or xchg lcall shrb push in sbb sub xor mov mov mov sbb jnp pushf aas in movaps pop mov xor sub test jge xchg sti fdivrl xor outsl push aam out gs inc adcl add sub inc pusha or (bad) xor push gs sub xor inc xor xchg mov sub mov sub insl pop xchg mov or xchg lds pusha inc bound mov dec xchg xor lcall ret test not sub pop pop std or sub jecxz and mov mov cmp mov stos jg clc sub dec jge fwait jbe aam xchg movsb ja xchg fistpll fsubl dec js (bad) push dec inc cwtl adc rcrb (bad) cmp cmp in aad lods add icebp push nop test bound pop out pushf imul fild dec (bad) mov test add xchg or hlt and (bad) jmp cmpsl pop xchg outsw es mov xchg mov pop dec ljmp add mov add sub jecxz aas outsl sub xchg add icebp jge xorl pop fs (bad) daa cld test pop sub sub push xchg loopne and enter push bound xor push adc sbb xor add loopne cmpsl mov sbb xchg scas cmp and (bad) arpl sbb push inc cwtl mov (bad) (bad) loopne add mov inc adc adc repnz xor cmp mov mov insb push dec divb cwtl dec sub aad sbb push jmp in add jl mov xor pop fcompl mov push add add andl clc lea add add inc mov out push mov pop pop mov dec pushf add aam sete inc xor popa dec mov ss and push out xor dec (bad) imul fldt fist add jae incb in and mov les out push imul adc lods cli xchg dec aaa fistl sub int3 aas mov or sbb (bad) loopne rolb (bad) cmp outsb fidiv dec (bad) mov jp mov pop repnz jg push daa jp sbb xor or test jl (bad) gs ficomp push les xor pop push jne jecxz inc mov cli test jge add jmp jae test add test pop lock pop in mov fsubp jno add add lock popf push mov cmpsb xor stos fdivrs movsb add arpl clc sub push in testl xor and sbb push ljmp sub rclb pop outsl aad mov subl inc jns sub inc and (bad) ss cmp ficomp int loop scas jo push scas xchg pop push in ret lock dec enter pop dec or lods lahf aas out sbb dec orl xor stc call fsubp mov pushf lods add adc xchg adc add sub je scas jge push je pop and das outsb or aaa pop jp shrl and movsb (bad) (bad) push cmp push jl jne pusha cmp cmp mov cld hlt loopne jecxz add add add push mov (bad) in and and push add (bad) flds jmp jg (bad) dec jp jb sarl pop in in mov enter jmp mov ljmp jmp fwait add or jge ficomp mov mov cmp mov test sbb xchg adc (bad) mov push out pop into stos nop sub cmp popa std mov (bad) aam les (bad) fmul clc movsb nop insb out dec xchg test xchg (bad) push rcrb roll ficompl inc xor ret push test pop push in lcall cmp outsl inc mov mov aas pop mov sbb dec mov movsb xchg pop popa icebp test push pop (bad) incb (bad) jae scas adc jecxz cmpsl or aad popf add pop sbb adc bound xor inc data16 movsl cmpsl loope xchg lret mov lret stos ja sbb push pop rcrb inc lock adc adc jb subb mov and scas out popf (bad) or jecxz (bad) fbld lret xchg cmc xchg xor cmp outsb lahf ja mov (bad) pushf loope call inc iret mov out or sbb ds jge jmp jb inc adc xchg hlt or cmp inc icebp push pop cltd jge popa or xchg (bad) aaa (bad) imul jmp lea xor in adc jbe add int lods cs sti mov (bad) jl in scas mov and xor les rorb les push cmp ljmp in rorl mov xlat xor jno sbb fcomip std (bad) jp xchg push sahf cmp ss mov stos jecxz,pt inc fidivrl cmpsb jbe mov bound sub mov cmp (bad) in inc lcall inc jl push jecxz in addr16 mov in aad push push ss scas push mov subb fstl les and sbb mov pop push fisttpl hlt lea lcall xchg movsb es cld popf stc cli sub mov loopne mov pop or sbb scas mov and mov fisubl pop mov test xchg inc stos call adc jmp (bad) mov jl cmc (bad) cmp (bad) (bad) pop lret mov imul (bad) (bad) rolb stos enter pop fistpll sti jnp dec push insl mov imul cmp cmpsb cmpb fidiv cmpsb and adc idivl mov cltd incb adc les mov sbb mov fcmovnbe mov pop cmpsl and int push jae jno,pn sbb sbbl pop ret dec rcrl xor push (bad) out jne jne movsl (bad) fst sub mov fmul enter aas fildl sub test sbb nop fidiv fwait gs pushf inc mov mov inc lds push cmp loope inc sub outsl add cmp xchg mov sbb mov mov dec aam movsl ret or scas scas mov stos xor insb pusha jl or das mov mov pop xchg pop int3 mov add sub jno xlat in in in mov and dec mov int3 and js icebp mov xchg mov hlt daa push in xor fdivp and inc test repnz push cmp sub pop cmpsb pop fxch dec push xchg mov fiaddl pop push in jmp fs int3 int3 inc sbb out rcl sbb jg mov adc jns cmc mov or aad lock inc imul push bound cmp mov add jl jnp mov mov rcr adc out fldl push and movsl or or cmp fisttpll aad add mov inc gs mov imul mov dec int3 sbb fwait mov push dec popf mov fisttpl add xacquire imul push add fcmovne ja jnp bound mov ret dec sbbl sarb mov (bad) int pop fbld and mov pop lret (bad) mov lcall mov pop flds pop pop sbb cmpsl imul nop mov xchg cmp xor jg inc es (bad) cwtl add movsb push sub jbe popa stos xchg lods or pop cmpsb mov imul stc fsubl (bad) xor mov jb jnp pushf add adc fisubr sbb adc imul test fcmovne sub or fdivrl xchg inc idiv pop inc ljmp cmc xor cs adc rcrb cltd sbb mov mov rolb das and mov pop mov or inc inc sarb fisub sbb and xor xor scas (bad) call andl xor ret stos dec cltd push fsubrl stos test out sbb push xchg mov les xchg cmp aas loope add arpl push jnp inc dec insl lret jne adc jb ja hlt loop and jmp dec daa (bad) adc sarl ret xor movsl mov pop aas sub (bad) in sub (bad) jecxz jle out mov sub mov push add add mov mov xor loopne test xor dec leave std jno dec movsl sbb test mov fsub iret loopne cmc flds lods add add fsubl iret int3 adc sbb pusha push pop xchg inc aaa xor lods inc test mull daa push insl repz xchg dec in lock iret bound jg add push sub fs (bad) pop sub dec xor fstps stos fadds or sub mov in xchg sbb mov out xchg in cmp push sbb and adc cli out pushf les xchg mov xchg jmp lods arpl rcrl cmp leave push ret ret jecxz cmovnp xor in lea cmp pop mov push pop ljmp inc sbb inc data16 add sbb mov movsl lret or jp lcall sbb lcall add loop inc adc or add ss (bad) and sub xor std dec outsb sub imul call jno and xchg dec push sbb out into je mov and out mov jne in jmp add push sbb fnstsw test cmp mov push mov mov push add push (bad) or sbb and aam sub mov cmp xchg sub lahf loopne aam cwtl insb cmp fisttp ljmp and mov (bad) mov and dec xchg adc ja or (bad) mov cmp leave mov test in popf lock sbb mov xchg out mov jne ror scas pop dec pop ret xor pushf pop pushl push sti je inc aas push test cmc sub add cwtl hlt xor mov mov lods fildll mov push push mov jmp mov (bad) sub out dec pop lds xor jecxz aam jns cmp push and int3 rcrb cs push sahf xor push aas enter sub inc jno mov ficoml adc inc dec (bad) or ret pop in addr16 xor pop rolb adc cltd pusha aad dec sbb pop fwait popf decl clc (bad) mov cld sub icebp and clc sbb lret subb es rolb stos sbb rcll insb (bad) (bad) cwtl icebp scas (bad) mov (bad) bound jae dec movsb xor xchg out and mov clc xchg pop stos shr lock lea cmc gs add movsl sub mov std jg xchg lret iret xor mov xor jg fdivl push mov mov xlat in aad pop push aam sbb mov sub nop xor jge lcall or (bad) push iret and or mov xor outsl inc jg,pn mov pop xchg cmpl mov pop leave pop cmpsl (bad) lods inc icebp adc jo sub cwtl into lods add cmpsb (bad) lock sti mov mov fist imul push data16 ss push shll int3 std icebp orl jbe scas pop cmp cltd in adc fimull push dec mov xor xor pop pop je and sbb cmp or dec dec push xlat dec push test mov add mov mov xorl mov jnp xchg dec lds arpl shrb lret pop lahf imul bound add or gs outsl cmp adc xchg adc and adc jg add xchg sbb fistl arpl xor pop ret adc inc in cmpsl mov sub xchg lahf adc lock movsl sub xchg jmp ficomp stos mov pop int push and jb daa lea (bad) (bad) (bad) sub push mov pop jbe push push ljmp lret xchg mov in popa mov ds icebp arpl push push sahf int3 ds fsubrs pusha into mov aas mov or mov xchg addl or fchs (bad) bnd pop out or mov jnp fbld inc pop pop add popl pop jmp mov xchg ret test mov xchg cmpsb nop mov insl sbb jmp inc mov inc pop sub je jb rcl aad rcll xor or cli and xor sti jg pop addr16 mov in lds jbe mov or test xchg pop (bad) adc sub inc ficoml inc cwtl test cmp and into sbbb fbld fild adc cmpsl xor call sub stos push bound pop lods cmpsl sub jae in push inc test iret into push push xor lods enter adc addr16 (bad) inc stc loope mov ss add push pop out (bad) out subl add fistpll add add mov bound dec inc popf dec hlt pusha data16 fidivrl stos cli pushf fidiv imul cltd sub xor mov xchg lds jnp out jl sahf pop lcall adc jno and pushf stos (bad) popf je cmp and in dec inc mov pusha rcrl cmp int3 adc shl leave (bad) mov mov cmpsb push aas pop push scas (bad) xor arpl jbe mov dec add cmp sti push xchg out ffreep cmpsb inc gs jb mov into dec out movsb dec stos sub ret les sub enter gs andl inc jge sbb sbb (bad) cmp (bad) outsl subl (bad) stos popf xorb inc das mov or push dec rcrl pushf popa lods pop fwait ss loopne inc cwtl mov add or lahf or lds jg dec mul in gs das into sub lahf cmp sbb aad mov xor std jns push ss movsb mov pop stc hlt loopne,pn or decb fwait jge mov mov (bad) and cmp sub decl sbb mov mov imul (bad) rclb in in pusha sbb lea inc xchg in repnz adc or mov xchg and sub lods popa or mov ss rclb sbb addr16 and xor decb lea push hlt adc in jge cmp push ja lods enter sub sbb out pop mov pop sbb add dec out jg les mov in dec adc xchg add shrb mov lahf add mov rorl scas mov in movsb jnp pushf bound jp inc aad add addr16 fimull in addb jge dec decl adc imulb sub out fldcw and pop lods in push jmp xchg mov push cmpsb pop imul sub xchg (bad) insl fsubrs bound mov sbb into push lods mov imulb inc inc mov test jnp (bad) push cmp clc (bad) lock inc sub cmp (bad) jae bound pusha mov xor push push movsb push fimull aaa jle outsb adc push aas addl mov xor fldcw add mov xchg adc inc js xchg pop data16 mov push lcall mov jmp aas or bound and fwait test push mov push scas fs cmp adc xchg ljmp xor xchg xor test push popf pop aaa inc lret repz jns xchg dec jecxz sbb and pop xchg fadds loop setbe jecxz jecxz mov out pop or adc inc jb sub mov lret fistp aam outsl lcall lea or or dec (bad) adc inc das and pop mov outsl dec (bad) jbe cmp test xor xor arpl movsb hlt jp lret mov jb add mov mov outsb in js andl and mov or call repz loop pushf cmpsb test (bad) adc jo ret out cmp jno push aas sub sub stos pop mov sbb push mov lcall mov (bad) ja adc adc sbb test adc lods push test xor cld loop jno (bad) pop adc popa clc add leave adc jmp lahf xchg jnp pop xor pop xor pop imul in sub mov xor int or test push cltd int3 mov sbb mov or add adc push std or jmp out xchg js repz dec lods cmpsl lcall fxch aam mov sub jge pop cld roll add add repnz inc ret (bad) lods pop cmpsb mov ss fimull fcoml push xor fidiv loope mov lods jo adc mov mov sbb mov fidiv dec mov and call add or jmp daa inc adc out inc in andl and mov fadds fisttpll xchg rolb movsl cmp andb mov shlb cmc out jl dec daa test icebp popa lahf repz mov aam test test fistpll pop xchg mov hlt xchg add xor lods xlat subl push mov inc xlat data16 and or ds cli sbb push pop xor pushf enter pop jle add add xor aam mov ljmp mov sbb ss inc jns pop push inc push mull (bad) jnp out sbb add adc sub out mov (bad) int3 cmp rcrb in bound mov xchg popf and loop xchg int3 test jmp sbb je das dec bound sub sub xor dec push fxch (bad) movsb clc or mov in or sysenter sti out shlb add jl jb pushl lret (bad) push sbb cmc lret jns out iret mov nop in in pop adc lock sub insb and fadds xchg jp push loop push xlat dec sub ds cmp add popf gs jo in push flds add mov fs mov push xor cmc test add inc add jp stc mov push cmpb xor lahf es loope jg pop insl jnp cltd add mov stc jne and add jge lcall std cwtl inc test data16 xchg xlat mov add xchg and pop nop aaa jge xchg mov xchg (bad) jne sub push or and dec flds in in out popf jecxz mov stos mov andl data16 mov xlat push sub fildl jns daa mov inc (bad) unpckhps sahf push mov pop test gs sub rol out arpl icebp popf xor jae add push je and adcb nop adc xchg add add pop lock sahf cltd push jmp or loopne inc test clc int mov sub adc lret add rcrb ret stos pop nop xor add (bad) out pop roll outsl xor stc and pushf push (bad) icebp outsl fiaddl outsl inc add in scas and lcall out (bad) pop les sahf xor xlat test js inc xor popf insl lock sbb mov sbb imul xchg pop fildll cmpsl xor das imul xchg xchg daa push (bad) jmp mov (bad) adc (bad) xchg notb inc cmp mov mov push cmp adc sub cmp test add cld mov or sbb or mov mov mov sub and fdivr sub xor add clc mov jmp jae daa jge in (bad) adc adc rorb sti mov push loope push sbb out push mov and (bad) xor out cmp pusha fmul (bad) leave push xchg aas gs and fbstp and rcrb into les adc jecxz jae mov mov test rcr push lds and add fidivrl test popf movsl aam and (bad) and fsubs pop popf sub out or add cs lret xchg rcrl ffreep scas xchg scas cld mov movsb imul add add or js leave mov push cli inc cmp add es int push jae add lar cmp popf sub aaa inc add mov xor sbb shll sub lods test push dec dec jb xor or nopl push icebp flds and inc ja out mov lock fsubrl gs inc jnp enter cmp outsl fadds gs xor stos lock jecxz cld (bad) sub sbbl push icebp fisttpl or ret cmp pop push jmp adc mov xor fmuls lods clc jmp or call popf or cmpsb push (bad) sti sbb pop ss xchg and lret sbb push dec add add loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp jmp movsb call inc leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push add add pop xor cltd xchg cltd sahf movsb test rol rcl fneni(8087 in lock sti add and sub cmp dec jle mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add sbb aaa cmp push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos add int3 rcl fsub out repnz add or pop sbb daa sub aaa add push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt add sti add and inc inc dec push push pop pop gs jne jg test movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop push orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub cmp inc inc dec push push pop popa insb jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and das xor add inc dec dec push pop pop imul mov test ret enter fucom call add add adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov ret lret fsubp call add or daa sub inc dec push pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add add jns test mov mov aam (bad) jmp add push adc push and xor ds dec dec push add imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out cmc sti add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb add add mov mov aad loopne ljmp lldt sbb sub xor push push pop pusha gs jne addb mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov add add fcomp jecxz in repnz std add or daa sub inc dec push push add push (bad) mov cmpsl lods mov mov xlat fsub add out repz incb or sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad add add in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je test mov mov aad loopne ljmp adc xor push push add imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add add add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov ret rcl add loop in repnz std add or sub dec dec push pop pop arpl jae jle mov movsl stos mov rol aad jecxz repnz add push adc cmp inc dec push pop arpl js xchg mov ror xlat fsubp in repz incl aaa inc dec dec push pop popa insb jno jl xchg lods mov mov add rol aad jecxz repnz imul test scas mov mov (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps push and das xor add dec push push pop pop gs jne jg mov stos mov mov aad loopne ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add addb movsl stos mov mov (bad) fneni(8087 out lock add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov rol aad loop icebp clc incl daa cs push pop gs je orl mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add loop in repnz std add or daa sub dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or and cs ds dec dec push pop pop imul mov scas mov mov fadds fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add add add daa sub inc dec push push pop bound je jle mov test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fndisi(8087 out lock add or push sbb and add xor push push pop pusha gs jne jg mov lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov add ret leave into rcr fsubp jmp add push adc sbb cmp pop pop bound outsb jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add add insl jb jge xchg lods mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add add test add rcr fsubp jmp add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos scas add iret aam (bad) ljmp or adc xor cmp add arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas add push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add add or sub inc dec push push pop bound jb jl mov (bad) xchg lcall mov fcmovu in jmp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub add xor cmp pop pop arpl jae jge mov test mov mov add loopne jmp idiv add and cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push add add pop pusha imul addb movsl stos scas mov mov fcmovu in icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa insb jno add mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul orl test mov mov fcomp jecxz in repz std add or sub xor aas inc dec dec push pop pop add jne jg mov stos scas mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov add ret leave into rcr fsubp call add or sub dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp add mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa add jb jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add fsub out icebp testb add add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fnop out lock sti add and inc inc dec dec push pop pop gs jne jg mov test rol iret aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or add add sub xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp add std add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and inc inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec add add pop pop add je jle mov test ret leave into rcr fsubp call add sbb es push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec add pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov lea lods mov mov rcr fsubp call add or sub dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge mov movsb test ret leave into rcr fsubp call add push adc sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rol rcl fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop popa outsb jne orl mov (bad) fucom popf cmpsb lods mov ret lret rcr loope in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add or sub inc dec push push pop popa insb jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov add int fcomp loop in repnz add or pop sbb es cmp inc inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub call or das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or add xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add add and sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb mov lods mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das add xor aas inc dec dec push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave add aad (bad) ljmp lldt xor dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl je jle mov test ret enter fsubp call add or sub dec dec push pop add add insl jb jge mov test (bad) leave into rcr fsubp call add push adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp lldt das xor dec push add gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp add add fwait mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add popa data16 jno jnp xchg mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov add add mov (bad) in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl mov scas mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul xchg cwtl lahf movsl add int fninit jmp pop push adc cmp dec push pop arpl js test movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add add adc xor cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc das xor dec push pop pop fs je jg mov test ret enter fucom call add or pop add cmp push pop add outsb jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov test ret leave into rcr fucom call add or add add sub aaa cmp dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push add imul (bad) xchg cltd add mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas add inc dec dec push pop pop imul nop xchg fwait mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) add loop in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop add bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge add (bad) mov cmpsl lods mov mov add fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) add lock sti add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov mov aad (bad) ljmp adc pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and sub xor push push pop pop fs je jg mov test ret enter fucom call add or add xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov add fcomp loop in repnz add or pop sbb daa sub aaa cmp dec dec add pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop add je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad add add (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jne test lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl je jle mov mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or add push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub add in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) fneni(8087 in lock add add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) jecxz out repz incb or add xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub add push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock add or adc xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add and aas inc dec dec push pop pop add jne addb movsl stos scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop fs je add lcall mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae add orl test mov mov xlat fsub out icebp idiv add or pop sbb daa xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add repz incb or sub dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg add add mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and add xor dec push pop pop fs jne jg mov test ret enter add in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul (bad) xchg lods mov mov (bad) fsub out repnz add movhps daa das aaa ds dec push pop jecxz cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov xor aas inc dec push pop pop insw jae jle mov test mov mov (bad) jecxz out repz incb or sub dec dec push pop pusha imul addb mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec add pop popa imul addl mov rol rcl fndisi(8087 out lock add or add adc xor push push pop pop gs je jg mov test ret leave into rcr fsubp jmp or xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov scas mov (bad) int3 rcr loope out adc sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add fsub out idiv add pop and das xor ds dec dec push pop pop imul add jle mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp movhps and sub cmp dec push push pop pusha imul ja (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop bound push (bad) mov cmpsl lods mov mov enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jle mov test mov mov fcomp jecxz in repz add add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl add enter fsubp call out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov (bad) lret rcr loope in icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and add add das xor aas inc dec dec push pop pop imul mov xchg lcall mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc add dec push push pop popa insb jno jl xchg cmpsb stos mov mov add fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push add imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl add add jns orl test mov mov fcomp loop in repnz std add or and xor cmp pop pop bound jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg add add lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam add in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa push (bad) xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov add add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or pop sbb and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 in lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp add jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub xor ds dec dec push pop pop arpl imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and add sub xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl add jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add add push push pop pusha imul addb movsl stos mov mov aad loopne ljmp pop sbb aaa cmp inc dec push add add popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas add rcr fsubp call add push adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push pop pop arpl jae jge addl (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push pop pop bound add add add jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr (bad) jmp incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul (bad) xchg lods mov mov into rcr fsubp call add push adc push and xor cmp pop pop arpl jb jge xchg add xchg xchg popf mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or adc pop and das xor dec push pop pop fs je jg mov test add mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa insb add jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr loopne ljmp unpckhps sub aaa ds dec add pop imul cmpsl lods mov rol aam loope jmp idiv add or push add sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incl unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl scas mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov roll fcmovu in out hlt stc incb push adc push and xor add add inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb or adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad in repnz add or daa sub inc dec push pop pop bound jb jge mov mov mov loop icebp clc incl or sub aaa add add push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle test mov stos mov add add iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out add clc std add or sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno ja (bad) xchg cmpsl lods mov mov xlat faddl loop in icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insw jbe (bad) xchg cmpsl lods mov mov xlat fsub out idiv add adc sbb nop mov enter out hlt cld add adc pop and inc dec push pop pop add jae addb mov mov add lret fucom jmp or push sbb sub aaa cmp pop pop bound jb jl xchg mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret enter fcmovu in out hlt cli incl add add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fnop in lock cli add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb add sub add add ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add add jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and dec dec push pop pop arpl jae jle mov test lret rcr loope out idiv add sub cmp dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov ret rcl fucom out add clc incb or adc push and sub dec dec push bound jae jge mov test mov mov fcomp jecxz add hlt stc incb or adc pop es push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl add adc das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp add incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec add pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or sbb aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul add fwait mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop pusha imul addb mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa add cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in repz incb or adc push and xor cmp pop pop arpl js xchg mov mov add jmp push push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb add nop xchg fwait mov mov aad loopne ljmp unpcklps daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub add cmp pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop bound jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test add add leave iret aad (bad) ljmp unpckhps pop and inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lea lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add out repz incb or adc push and xor ds dec dec push pop pop arpl jae xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out add idiv add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop gs jne jg mov lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and add xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub add push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out hlt cli incl lldt xor cmp dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov scas mov mov fcmovu in jmp cmc sti add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop add outsb jae jle mov test mov mov (bad) jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg add mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in add idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out add add idiv add or pop sbb aaa cmp pop pop bound jne jg mov xchg xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add pop or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add sbb cmp pop pop bound jb jge mov lods mov mov fadds fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop gs jae (bad) mov pop push adc and cs inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp call add or sub xor cmp pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom out repnz add or pop sbb daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov add add fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jge mov mov mov fcomp jecxz out repz std add push adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor add dec push pop pop gs jne addb mov ror xlat fucom out repnz add cld add or push sbb es cmp dec push push pop bound jb jl xchg lods mov mov (bad) ljmp or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul ja addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb add rol rcl fneni(8087 in lock sti add and add aas inc dec dec push pop pop imul nop xchg fwait mov mov aad loopne ljmp unpcklps pop and das xor add inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fildl loop in repnz add or pop sbb es cmp add add dec push push pop pusha imul addb movsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 add in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound add insl jb jge xchg cmpsl lods mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli add pop and cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg mov mov xlat fsub out repnz add push adc push and sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp in hlt sti add or push sbb and inc inc dec dec push pop pop fs jne jg mov test (bad) fnop out hlt cli add push adc cmp dec push pop bound ja test mov ror (bad) fsubp in repz add adc and cs inc dec push push pop pusha gs jne jg mov test ret leave into aad jecxz icebp clc add sub cmp inc dec push pop pop gs jb jg mov mov rol (bad) fucomp repz add push push sbb inc dec push push pop gs jae orl mov (bad) int aad loope in icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop pusha imul addb cmpsb stos mov mov add fneni(8087 out lock add and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and sub aaa cmp dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc sbb cmp pop pop bound outsb jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push add pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsl lods mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle add mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge mov cmpsl lods mov add mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt cli add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) faddl add loope jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or daa sub add popa insb jno jl xchg mov mov fsubp jmp add push adc push add and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc pop add aas inc dec dec push pop pop insb jb jl xchg test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound insl jb jge mov test (bad) leave into aam fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop imul add add jns test movsb test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test add (bad) fneni(8087 in lock sti add and cmp dec push push pop pusha imul addb add add mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add and inc inc dec dec push pop pop gs jne add fwait mov mov add add (bad) lret rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc xor cmp add push push pop bound jb jl xchg lods mov mov rcr fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps add and xor aas inc dec push pop arpl jns mov mov ret enter fiadd in out hlt stc incb push adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsb stos scas mov mov aad (bad) ljmp or adc das xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul orl test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add push or push sbb sub add cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg add mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop add imul add stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov ror fcomp add out cmc cli add pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) add ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov rcr fucom call incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or xor cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and add xor dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or and sub add push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 add jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push add imul addb mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jns test mov mov (bad) jecxz out repz incb or adc push and xor cmp pop add pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop imul nop xchg lcall mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp idiv add and inc inc dec push push pop pop gs jne jg mov movsl stos mov mov add fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add push or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz jmp add push adc sbb and das xor aas inc dec dec push pop pop imul mov lods mov mov fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl add (bad) aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub inc dec push push pop add insl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb add rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add int fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) add lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp add cld add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add add sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in out cmc cli incl pop and das xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae add mov test ret enter fsubp call add push adc push and sub dec dec push pop pop bound jb jge xchg stos mov mov aad loopne jmp cmc sti add and aas inc add dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp (bad) xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov ret enter fucom call add or sub dec dec push pop pop fs jne jg mov stos scas mov mov fnop in lock sti add and sub aaa cmp inc dec push push pop bound jb jl mov test (bad) iret (bad) fucom in repnz add movhps inc dec push pop arpl jnp mov mov (bad) lret rcr loope icebp clc incl push adc cmp inc dec dec push pop imul mov mov ret fcomp out cmc cld add adc and xor inc dec push push pop insw jne test mov ror fsub out or add and xor inc inc dec push pop imul mov mov loopne lock incl push adc cmp push pop popa push (bad) xchg sahf cmpsb lods mov ret lret loopne in repz incb or adc push and add dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb mov mov aad loopne ljmp adc xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub add in repnz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into rcr fiadd in out hlt stc incl push adc push and xor ds dec pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop imul add jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub cmp dec push push pop popa imul ja addl mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul (bad) xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg add mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov stos mov rol rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg lods mov mov int3 rcl fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz add add push adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp in out hlt stc incl push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add out repz std add or daa sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad loopne ljmp unpckhps pop and das xor add dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sbb and sub dec dec push push pop bound jb jge mov test mov mov xlat fucom in hlt cld add adc and das xor pop bound js or inc dec dec push pop pop imul lea lods mov mov inc push pop add outsb je addb stos mov mov aad loopne ljmp unpckhps pop and das xor aas dec dec push pop pop imul mov scas mov mov fcomp add call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es jg mov stos scas mov mov fnop in out cmc cli incl pop and das xor ds dec dec push pop pop arpl rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul orl test mov into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov rcl fndisi(8087 out icebp idiv add and inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec add dec push pop pop imul lea lods mov mov xlat fsub out icebp clc std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add jns orl test mov mov xlat fucom out repnz add or pop sbb sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add or daa sub aaa cmp inc add push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg cltd sahf movsb test (bad) lret (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas add into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat add jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas add push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno add jbe addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb and sub dec dec push pop pop bound jb jge mov add add ret rcr fucom call add or sub dec dec push push pop bound jae jle mov test ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add test movsb stos scas mov mov add (bad) in out hlt stc incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in jmp icebp idiv add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub add cmp ds dec dec push pop pop arpl je jg mov test (bad) aam loopne ljmp adc sbb sub cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add jns addl add stos mov mov aam (bad) jmp add push adc push and das xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb add mov stos scas mov mov rcl fsub out icebp idiv add or adc xor dec push pop pop imul nop xchg lcall mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg add add rol rcl fneni(8087 in lock add add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fndisi(8087 out lock sti add or adc das xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add add (bad) jecxz out repz incb or sub aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov fcomp loop in repnz add or xor cmp popa nop fwait mov ror aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov (bad) fneni(8087 in lock add or push sbb sub add cmp dec push push pop pusha imul addb lods mov mov add add in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop add imul mov scas mov mov (bad) ljmp adc das xor dec push pop pusha gs jne addb mov mov jecxz icebp stc add movhps daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb mov cmpsl lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov add fsubp add add out add cli incl unpcklps pop and inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or add add sub cs aas inc add push pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul test (bad) xchg fwait mov mov aad (bad) ljmp adc das xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc pop and das xor aas inc dec dec push pop pop add add add jae jle mov test add aad (bad) ljmp unpckhps pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor aas inc dec dec push pop pop imul mov mov mov fadds (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov add add lods mov mov xlat fsub call add or and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insl jb jl xchg mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and cmp dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov stos scas mov add add (bad) jecxz out repz incb or das xor aas inc dec add pop pusha add jbe addb lods mov rol rcr (bad) in hlt pop outsb jbe test mov fucom jmp clc incb and xor cmp pop imul xchg lods mov mov fsubp jmp idiv add adc sbb cmp push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das add push push pop pop gs jne jg mov stos scas mov mov fcmovu in jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov add add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb add mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs je add fwait mov mov aad loopne ljmp adc add xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push add pop and das xor dec push pop pop fs je jg mov test ret add iret aam (bad) ljmp unpcklps pop and cs add inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push add imul addb movsl stos mov mov aad loopne ljmp add push sbb and inc inc dec push push pop pusha add jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub aaa cmp push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add bound jb jge xchg lea lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha outsb je jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov add add leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add add cld add add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop add and das xor ds dec dec push add gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec add add pop pop arpl jae jle mov movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol iret aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out add sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret (bad) in out hlt stc incl push adc push and cs ds dec dec pop pop bound jb jge mov test mov mov fcomp jecxz out idiv add adc and das ss popa push mov mov rol aam loope out cmc cld add adc and xor cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add add push adc push and xor ds dec dec push pop pop bound jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg xchg xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push pop pop data16 jne test mov push sbb cmp pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl add (bad) aad loopne jmp cmc cli add pop and inc inc dec dec push pop add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test ret leave into aam fsubp jmp repz incb or adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcl fucom out repnz add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad fucomip out cmc cli incl add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add add add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop or sbb es ss inc dec push push pop popa add jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec push pop add insb jno jnp xchg movsl stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno add mov stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jbe orl add ret enter fucom call add or adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jl xchg mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov rcr fucom out out repz incb or sub dec add pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push pop pop bound jb jl xchg lods mov mov add (bad) lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) in out hlt stc incl unpcklps push and add xor aas inc dec dec push pop pop gs je jg mov nop xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out jmp cmc sti add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop arpl jae jle mov test mov mov xlat fucom out repnz add cmp dec push push pop gs jae orl mov ret rcl fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor add dec push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and xor inc inc dec push push pop pusha gs jne jg mov test enter in hlt sti add or sbb sub aaa ds dec dec push pop pop arpl jae jns test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb add scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec push push pop bound jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov add loopne jmp cmc sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add and xor inc dec dec push pop bound jbe test scas mov (bad) int fsub out icebp idiv add or push sbb sub cmp dec push add popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds add push pop pop imul mov mov mov fcomp jecxz out repz std add or add add sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg mov scas mov mov fcomp jecxz out repz incb or sub cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in icebp sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add fsubp call add or sub dec dec push pop pop bound add add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps and xor cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add add sub cmp dec push push pop pusha imul addb add nop xchg lcall mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul test movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop add insb jb jge xchg lods add lret rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul (bad) mov stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov cmpsb stos mov mov add fnop in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp add cld add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in in icebp testb add add add cld add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom in repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb add inc dec push push pop popa insb jno jl (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add or adc add and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or sbb inc dec push pop arpl jp mov mov (bad) (bad) data16 jbe test mov mov in repz add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec add pusha gs jne jg mov add (bad) aam (bad) jmp add push adc push and add sub xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp mov sub cmp push pop pop arpl add test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) ljmp push adc push and xor cmp pop pop bound jb stos mov rol roll xlat fsub out icebp idiv add or push sbb and cmp dec push push pop pusha imul addb add add movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound je orl (bad) fcomp in icebp idiv add mov rol jecxz sbb xor inc dec push pop pop outsb jbe test mov (bad) out idiv add sub cmp push pop pop outsb jbe test mov fsub jmp or xor inc dec push push pop insw jne test mov fsub jmp stc add movhps inc dec push push pop insw je (bad) mov mov fucom in repz add movhps and inc dec push pop popa push lea mov ret fcomp out cmc cld add adc and xor ds dec push pop arpl jns mov mov (bad) int3 rcr loopne in hlt cld add adc and xor ds dec push pop arpl jns mov mov (bad) lret rcr loope out idiv add or xor inc dec push push pop gs je orl mov fsubp in repz add adc and xor ds dec push pop bound js xchg mov ret (bad) jmp push adc cmp push pop pusha outsb jne orl mov (bad) (bad) jmp movhps inc dec push push pop gs jne test mov mov in repz add adc pop daa das ss bound add mov mov (bad) lret rcr loop add cli add adc add add sub aaa ds dec push pop arpl jns mov mov ror xlat fsubp in hlt sti add adc and xor aas inc dec push pop gs je orl mov (bad) int3 rcr loop lock daa cs add jno orb mov ret fchs out idiv add sub cmp push push pop fs js test lods mov ror xlat fsubp in repz add adc and cs arpl jp mov mov ret lret loope out idiv add sub cmp inc dec push pop arpl jns xchg mov ret xlat fsubp in hlt sti add adc and das ss dec push pop fs js xchg mov mov (bad) out idiv add sub add xor inc dec push pop pop outsb jne test mov fsubp in hlt sti add adc pop daa cs pop bound jns xchg mov ret lret rcr loop repnz add movhps inc dec push pop popa imul popf add (bad) iret (bad) fucom in hlt sti add adc and das aaa aas inc dec push arpl ja orl mov (bad) lret rcr loope lock push or xor inc dec push pop pop data16 jg mov mov ror fsub out idiv add sub cmp push push gs jb jg mov mov ret fcomp out idiv add sub cmp push push pop data16 jne test mov ror xlat (bad) out cmc cld add push sbb cmp dec dec add push pop gs je (bad) mov mov (bad) lret rcr loope icebp clc add push push sbb inc dec push pop popa push mov mov (bad) lret rcr loope out idiv add sub cmp dec push pop insw je (bad) mov mov (bad) lret rcr loop icebp clc add push push sbb sub cmp push push pop insw je orl mov ror fsub out idiv push or xor inc dec push pop pusha push lea ror fcomp out testb cmp dec push pop insw jne xchg scas mov rol aad in repz add adc pop es push pop popa push (bad) xchg popf movsl lods mov ret lret rcr loope lock push and xor cmp popa push jg mov mov (bad) icebp clc incb and xor inc dec dec push pop gs je orl mov (bad) out idiv add adc and xor inc dec dec push pop data16 jne test mov rol (bad) fucom in hlt sti add adc and das aaa ds push pop pop gs jb jg mov mov (bad) into (bad) fsubp in cmc std add adc pop and inc dec push pop popa push lea mov loopne out idiv push or xor inc dec push pop pusha outsl jbe test mov (bad) in repnz incl or xor pop popa imul popf movsl lods mov (bad) lret rcr loop repz adc and xor inc dec push pop popa add jp mov mov (bad) int3 rcr loop icebp stc add and xor inc inc dec push pop gs je orl mov (bad) int loopne in repz add or xor inc dec push pop pop data16 jne test mov loopne in repz incl sub cmp push pop bound jp mov mov (bad) int fsub jmp cli add adc pop es bound jns mov scas mov (bad) fnclex ljmp and xor ds dec push pop imul mov mov fsubp in hlt sti add adc and das ss dec push pop imul mov mov (bad) int fsub jmp cli add adc and xor cmp pop outsb jne (bad) mov mov (bad) int add in icebp clc incl add or sbb sub ss dec push pop pusha push mov mov (bad) jmp idiv add or push sbb sub xor push push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incb or adc push and xor cmp pop arpl je jle mov test mov rol rcl fcmovu in out cmc cli incl sbb and inc inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound add add js orl test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae (bad) mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push add push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov add add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov add fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push add gs jne jg mov test ret add iret aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) faddl loope jmp idiv add or push sbb sub xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add push push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fildl loope in icebp idiv add or push sbb sub cmp dec add pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and add sub xor dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha outsb jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec add pop pusha imul addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov xlat fsub out repnz add or sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov stos mov mov aad loopne out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl add (bad) xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov loopne ljmp adc xor push push pop pusha imul addl (bad) (bad) out idiv add adc dec jno jg movsl stos mov mov fsubp jmp add push adc push and xor mov (bad) int3 roll (bad) call add push adc push and xor ds dec add pop pop imul (bad) xchg lcall mov add add iret aam (bad) jmp or adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb and sub inc dec push push pop bound jno jl xchg cmpsl lods mov mov fcomp loop add repnz add or pop sbb daa xor cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl push je jg mov test (bad) leave into aam fnop in out cmc cli incl adc das xor aas inc dec dec push pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul ja addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc inc dec push push pop popa imul addl mov rcl fucom out repnz add or pop sbb sub cmp inc dec push pop bound ja xchg mov rol rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add or adc sub cmp dec push push pop pusha imul addb movsl stos mov mov aad add out lock add or adc xor dec push pop pop gs jne jg mov add add stos scas mov (bad) lret fcmovu in out hlt stc incl add adc das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop add push jne jg mov test (bad) leave into rcr fsubp call add or and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out cmc sti add and sub cmp add pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl add int3 rcl fsub out repnz add or pop sbb aaa cmp push pop bound outsb jae jle mov test (bad) leave into aam add add in out hlt stc incl unpcklps cmp dec push push pop pusha gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 in lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock add add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov add fcomp loop in repz std add or sub xor ds dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and add dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc add add pop and add xor aas inc dec dec push pop pop imul xchg cltd sahf mov mov fcomp loop in repnz add or pop sbb daa add inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne add fwait mov mov aad loopne ljmp unpcklps pop and das xor add dec add pop pop gs je jg mov scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop add imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno add mov lods mov mov xlat loope in icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov add (bad) aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp jmp add or sub inc dec push push pop bound jb jl xchg add cmpsb lods mov mov (bad) fneni(8087 out icebp idiv add adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp incl pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into add (bad) jecxz out repz incb or sub xor dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and add dec push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop rcl fnop in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg add add mov rcl fucom out repnz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock add or push sbb and inc add push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test add add int fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb mov mov aad loopne jmp cmc cli add pop and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp add cmc incb unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb add add sub cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add push or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and xor add add dec push pop gs jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push push pop pusha imul addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in add cmc cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 add add jbe orb mov ret lret loopne out movsb mov ret sbb aas inc dec push pop arpl js orl test mov mov rcr fsubp call add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop arpl outsb je jle mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov add xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add add daa sub inc jns test movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad fild out lock cli add pop and aas inc dec push push pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and add add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je add lcall rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and sub inc dec dec push pop pop arpl jb jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov rcl fndisi(8087 out lock add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom out repnz add or daa sub ss inc dec push push pop pusha imul jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul add add orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl add enter fsubp jmp add or sub inc dec push push pop bound jno jl xchg add cmpsb stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc das xor add dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp pop pop bound jb jl xchg stos mov mov aad loopne out icebp idiv add push adc push and xor cmp pop pop bound jb jge xchg add add rol rcl fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out add clc std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es ss push pop popa insb jno jl xchg stos mov mov add add vaddsubps fnop in out cmc cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and cmp dec push push pop pop gs je jg mov test ret enter fucom call incb or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop imul mov scas mov mov add add fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and sub xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa imul addb cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jle mov movsb test ret leave into aam fsubp jmp add or daa sub inc dec push push pop add insb jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop imul mov lods mov mov (bad) in out hlt stc incb add add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incl pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add add adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and add inc dec push pop pusha data16 jne test push das cmp inc dec dec push pop pop arpl jae jle mov mov es cmp dec push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop bound jno jl xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop popa imul add add jnp test mov mov aad (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb daa sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addl add add movsl stos mov mov rcl fneni(8087 in lock cli incl cmp inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov fsub call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add rcl fsub out icebp idiv add or push sbb and cmp dec push push pop pusha gs jne jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom add out repz std add or daa sub aaa cmp inc dec push push pop popa data16 jl xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock add and sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop bound jno jl xchg cmpsb stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam fsubp jmp add or sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or add add aaa cmp push pop popa imul addb movsl stos scas mov mov flds (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl jae jg mov test ret enter fucom out repnz add or pop sbb sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub add cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc cli add sub cmp dec push pop ret fchs out repz add or daa sub aaa cmp inc dec push push pop add insl jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov add fucom out repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl add orl test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fadds fsubp jmp add incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb cmpsl lods mov mov rcr fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr add in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop imul mov lods mov mov fcmovu in out add sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push add aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and add add aas inc dec dec push add gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz incl push adc push and add dec push pop pop imul mov scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push add add arpl jae jle mov movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es ds dec dec push pop pop bound add jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae js orl test mov mov add fucom jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop bound jb jl xchg lods add int xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov add (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov xchg popf mov mov xlat fsub out icebp idiv add or add sbb aaa cmp push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov (bad) fndisi(8087 out add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc sbb and inc inc dec dec push pop pop fs je jg mov test add rcr fsubp call add or sub dec dec push add arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) add fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg lods mov add xlat fsub out repz add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or sub inc dec push push pop bound jb jl xchg add ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 in lock add cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add add or push push and xor add inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 add in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc add push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor cmp inc dec push push pop pusha imul jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop add aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add push adc sbb add cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jns test movsl stos mov add (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add outsl jne jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp add add bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl scas mov mov aam (bad) ljmp or adc das xor aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loope in icebp add std add or daa sub add cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov flds loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov add add scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add adc pop and das xor cmp dec push push pop pusha gs jne jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push add das xor ds dec dec push pop pop arpl jae jle mov test mov add mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop popa insb jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov flds (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock add add or push sbb sub cmp dec push push pop pusha gs jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push add das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor add inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add push (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov stos scas mov mov fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add add pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov aad loopne ljmp adc pop and das xor aas inc dec dec push pop pop gs jne addb lods mov ret fcomp out cmc cld add adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or add sbb es cmp dec push push pop pusha imul addb add (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub xor add dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push add bound jb jge xchg cmpsl lods mov mov (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pusha imul addb mov stos mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov cmpsb stos mov mov aad loopne jmp add lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl mov test mov mov aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) add ljmp sldt add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge add movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or and xor ds dec dec push pop pop arpl jae jge mov add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound add jge mov test mov mov add int fcomp loop in repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul xchg xchg fwait mov mov aad loopne jmp cmc sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov scas mov add (bad) in out add stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov rol rcr loope out idiv push or sub xor ds dec push pop arpl jns mov mov ret fcomp out idiv add and aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop add jae add add orl test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov add add stos add lret rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add sbb and xor inc inc dec push pop arpl jns mov mov fucom in hlt cld add adc and xor inc dec push push pop data16 je jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or daa sub inc inc dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec add pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha data16 add add jne addb movsl stos scas mov mov fcmovu in out hlt cli incl lldt das xor dec push pop pop fs je jg mov test ret enter fucom call add or sub dec dec push pop pop bound jl xchg lods mov mov xlat fucom jmp movhps inc dec dec push pop arpl jns mov mov mov rcl fsub out repnz add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add int3 rcl fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop bound jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out add icebp idiv add or adc xor push push pop pop gs jne addb movsl stos mov mov aad fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop add jo jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc add and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcmovu in out clc incb or adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods add int fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc add add pop popa imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs add addb movsl stos scas mov mov fcmovu in out hlt cli incl pop es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp incl pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl add jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov add (bad) fneni(8087 out lock sti add and inc inc dec dec pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl add mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc das xor dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle add movsb test (bad) leave into rcr fsubp jmp add push adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov ret rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push push pop pusha imul addb cmpsb stos mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs jne jg mov lods mov mov jecxz repnz add movhps and dec mov icebp stc add adc pop daa cs bound js (bad) mov mov rol rcr (bad) jmp clc incb and xor inc inc dec push pop pop data16 jb jle mov mov mov fsub icebp idiv add or add add push sbb sub cmp dec push push pop add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl (bad) inc inc dec push push pop popa imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec push push pop bound jb jge add popf mov mov xlat fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov add fneni(8087 out lock add and aas inc dec dec push pop pop fs jbe addl cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec add pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc add add pop and aas inc dec dec push pop pop imul mov mov rol lret rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg add mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and sub inc dec dec push pop pop arpl jae jle mov test mov mov fsub out add repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad add out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add and inc inc dec dec push pop pop gs je jg add movsl stos mov mov aad (bad) ljmp adc add add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov test ret leave into add (bad) in out hlt stc incb push adc push and cs cmp add add dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add adc xor dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop add add add jne jg mov stos scas mov mov (bad) in repz add movhps and xor inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul jbe addl mov rol rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg add add (bad) lret fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add rcl fnop in lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov add rcl fneni(8087 out lock add or push sbb sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or add xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repz incb add add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push add imul mov mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps and das xor add cmp inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsl lods mov mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb lods add int xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pusha imul add jo jnp test cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli incl push or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl lea add add ret enter fucom call add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop fs jne add fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp push add push orl test mov mov (bad) jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) fsub out add add icebp idiv add or push sbb daa sub dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop jmp add or sub dec dec push push pop bound jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz out repz std add or sub cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr loopne jmp cmc sti add add and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno add mov test mov mov fcomp jecxz out repz incb or sbb cmp inc dec add dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lea scas mov mov fcomp in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov add fsub out icebp idiv add or pop sbb daa sub dec push push pop popa data16 jno jl add add mov mov xlat fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub add in repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es xor cmp pop pop arpl js (bad) mov test mov mov ret enter fsubp jmp add and sub ss dec push pop bound ja test mov fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound push (bad) mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg add (bad) int3 rcl fsub out icebp idiv add or add push sbb inc dec dec push pop bound ja test aad loop out hlt sti add unpckhps and xor cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov mov (bad) into aam fsubp jmp add push adc add and das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom lock cli add pop and aas inc dec push push pop pusha add jbe addb cmpsb stos mov add mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs je jg mov mov fnop in lock cli incl pop and das xor dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into (bad) fsubp in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg add cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop bound jb jge xchg lods mov mov rcr fucom out repnz add cld add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test les lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov stos mov mov aad loopne ljmp or add sbb and sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fucom call add push adc sbb xor add ds dec dec push pop pop add je jg mov test ret enter fucom call add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add unpcklps pop and das xor aas inc dec dec push pop add pop arpl add test add mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and xor push push pop pusha gs jne add add mov test rol iret aad fild out lock sti add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push pop pop arpl jb jge mov mov mov xlat fsub out icebp add std add or add sub dec dec push pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl mov test mov mov add enter fucom out repnz add or pop sbb daa sub add cmp push pop popa add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov (bad) add jmp add push adc push and sub dec dec push push pop bound jb js orl add ret enter fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg test mov (bad) leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test mov fcmovu in add cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add push adc push and add xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp dec dec push add add arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul add add mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aad loopne out idiv add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov add mov fnclex call pop or sub cmp inc dec push pop pop bound jb jge xchg lods mov mov aad loopne jmp cmc cli add pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock add and cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp jecxz out add repz std add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc pop and das xor ds dec dec push pop pop imul mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add push adc push and cs inc dec push pop pop data16 jne fabs call add push adc push and sub dec dec push (bad) jecxz lock add unpcklps pop and das xor dec push pop pop imul mov scas mov mov fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop add outsl je jg mov add (bad) leave iret aam fsubp jmp add push adc push and sub add xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha insw jb jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha imul addb add rol rcl fsub out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rcr fucom call or sbb daa das ss mov (bad) fcomp in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul test movsl stos scas add rcl fnop in lock cli add add add pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop arpl jb jge mov cmpsl lods mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov ret rcl fsub out repnz adc sbb add sub inc dec push push pop popa insl jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cld add or push sbb es cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock add adc and das aaa ds dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc add and cs ds dec dec push pop pop add add add jns orl test mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub inc dec push push add insl jb jl xchg add xchg xchg pushf add mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg test mov mov ret rcl fsub add in repnz std add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul (bad) xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fildl loope out icebp idiv add or push sbb add inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop add insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add incb or adc push and sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fnclex out repnz add or pop sbb es ss inc dec push push pop popa imul addb add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter (bad) in out hlt stc incb or adc push add add sub xor ds dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) add lock add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or and sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and add xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc sbb cmp pop add imul add js orl test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sbb cmp pop pop bound je jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb add mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rolb int3 rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov add leave iret aam fsubp jmp incl pop and das xor aas inc dec dec push pop pop arpl je jle mov test ret enter fsubp call add or daa sub inc dec push push pop bound jno jge xchg lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out add in repnz add or pop sbb daa sub add cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out repz incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc add pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add add adc xor dec push pop pop fs je jnp test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop bound jbe addl mov rol rcl fnop in out cmc cli add pop add add cmp dec dec push pop pop fs je jg mov test mov mov fcomp loop in repnz add or and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop popa imul test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha add add imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push add gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb add int3 rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test vaddsubps fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov fcomp add call add or sub add push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc pop and das xor cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push add push and das xor aas inc dec dec push pop pop imul mov mov mov aad (bad) ljmp adc xor cmp dec push push pop pusha imul addb mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop arpl jae jle mov test iret xlat fsubp out cmc std add adc and das ss dec push pop gs je orl mov fcmovu in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb add mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and sub xor push push pop pop gs jne (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul pushf mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp (bad) xchg lods mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test leave rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov add fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop add imul mov lods mov mov fcomp in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or and cs add ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb add vaddsubps fneni(8087 in lock sti add and sub aaa cmp inc dec push push pop popa insb jno jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound add jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt add add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add mov rcr fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds add push pop pop imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge xchg lods mov mov add add add add xlat fsub out repnz add or and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub cmp pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop add je jg mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov loope out add incl or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fneni(8087 out lock add or adc xor add cmp dec push push pop pusha gs jne addb movsl stos mov add fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb es cmp inc inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add imul addl mov rol rcl fneni(8087 in lock cli add push or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and inc dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add scas mov mov fcmovu in out cmc cli add pop and aas inc dec dec push pop pop imul xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub xor push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov add add aam (bad) jmp add push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov add aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec push push pop pop gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fildl add add in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add add unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov (bad) fsub out lock add or adc xor dec push pop pop fs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc add dec push push pop bound jno jl xchg cmpsl lods mov mov xlat fsub ljmp adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fsubp in icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop fs je jle mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pop gs je jg mov popl xchg fwait mov mov aad (bad) ljmp push adc and inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push add push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov add add jecxz in repz incb or adc sbb cmp pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or add add and xor ds dec dec push pop pop bound jb (bad) mov mov (bad) int fsub ljmp push sbb sub cmp dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add add into aam fsubp jmp add or daa sub inc dec push push pop popa insb jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle add mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs je jg mov stos scas mov mov (bad) in add add out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov add fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg test mov mov xlat add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or sub add add aaa cmp push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add or das ss dec push pop gs stos mov ret lret loope lock push push adc cmp dec push pop bound je addl rcr out hlt sti add push adc and sub dec push pop pop data16 jae addl mov rol rcr in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push add sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds add dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jnp test movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec add imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and cmp inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 add jbe addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov add (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop bound jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb add add scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fldl in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec add pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and sub xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fsubp call add or daa sub inc dec push push pop popa insb jno ja (bad) xchg cmpsl lods mov mov xlat faddl add loop in repnz add or adc sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out cmc cld add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fndisi(8087 out lock add add or push sbb sub xor push push add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl or adc das add add dec push pop pop gs je jg mov movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or sub inc dec push pop imul push push adc pop es dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp add out add stc incb unpcklps pop and cs ds dec dec push pop pop arpl jb jge orl test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps add sbb and sub xor push push pop pop gs jne jg mov test add lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor add ds dec dec push pop pop add jne jg mov test ret leave into rcr fsubp call add push adc push and xor cmp pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push add add arpl jae jge mov add ret enter fucom call add or daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs ja addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul add test mov mov fcomp jecxz jmp add push adc push and xor cmp pop pop bound jb jge orl test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov add add mov mov fcomp jecxz out repz incb or adc sbb cmp add orl test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne addb add rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fsub out repnz add or sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add in repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov rcl fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out add idiv add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad fneni(8087 out lock add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa add dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or add sbb es cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and add aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec add pop popa insw jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add inc inc dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb add mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop popa insb jno jl xchg mov scas mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push push add pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov rcr fsubp jmp add push adc push and xor cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat add jecxz out repz std add push adc sbb cmp push pop popa insb jno jl xchg stos mov mov rcr fucom out repnz add or pop sbb cmp popa imul add xchg sahf cmpsb lods mov (bad) lret rcr loop icebp clc add push adc cmp dec push pop imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop pop bound jb jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop imul test movsb stos scas mov mov (bad) jecxz lock cli add pop and das xor ds dec dec push add imul mov scas mov mov fcomp loop out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb lahf add rol rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcmovu in in icebp idiv add daa cs fnop in lock sti add and cmp dec push push pop pusha imul addb cmpsb stos mov mov add lret rcl fneni(8087 in repnz incl movhps sub xor push pop popa push mov mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp pop pop arpl jae jle mov stos scas mov mov fsub out icebp idiv add or sub dec dec push pop pop arpl je jg mov test (bad) leave into aam fsubp repz add or push sbb es ss inc dec push push pop bound jb jle mov stos mov mov (bad) fneni(8087 out icebp idiv add add daa sub dec dec push pop pop imul xchg xchg pushf mov mov aad loopne ljmp adc sbb sub add add inc inc dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add or daa sub inc dec push push pop popa insb add jge xchg cmpsl lods mov mov add add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb add unpcklps push and cs aas inc dec push push pop bound jae jge mov stos mov add fndisi(8087 out icebp add idiv add push adc push and das xor push push pop arpl je jg mov lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul xchg xchg pushf mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or add sbb add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov xlat fucom call add or xor aas inc dec push pop fs je orl mov loope lock push or xor inc dec push push pop data16 jne test movsb stos scas mov rol rcl fneni(8087 in lock cli incl pop add inc inc dec dec push pop pop gs jne jg mov test (bad) leave add add fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) loopne jmp cmc cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa add js (bad) xchg cmpsl lods mov mov xlat fsub out repnz idiv add or pop add cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop arpl jae jge mov test (bad) into (bad) fucom in repz std add adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps push and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov rcl fsub out repnz add or push sbb es add aaa cmp inc dec push push pop popa data16 jno ja (bad) xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha insw jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg xchg pushf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov add add (bad) lret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) jmp cmc add add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov xlat fsub out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add add cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc add push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt sti add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb and inc inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop add das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jge xchg mov mov xlat fucom out repnz add or pop sbb xor cmp pop pop arpl jae jle mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop add add push orl test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in add stc incb or adc push and xor ds dec dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub inc dec dec push pop pop arpl jae jge mov lods mov mov xlat fucom call or sub dec push pop (bad) into aam (bad) jmp add unpcklps pop and inc ret fcomp out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov ret rcl fucom out repnz add or and sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp jmp add add adc pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub dec dec push pop add imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec add pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul nop xchg lcall mov ret rcl fsub out repz add add pop pop es scas mov ret leave iret (bad) fucom jmp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp add push sbb and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop add push (bad) xchg add cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec add pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul popf mov mov fcomp jecxz in repnz std add or daa sub inc dec push pop pop arpl jae jge mov test mov add aam fild in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge mov cmpsl add enter fucom call add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb stos mov mov (bad) fneni(8087 out lock add or push sbb es cmp push push lret rcr loope out hlt stc incb unpcklps push and cs ds dec dec push pop pop imul mov nop xchg fwait mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec push pop pop fs je jp test movsl stos mov mov aad (bad) ljmp unpckhps pop and xor push push pop pusha gs jne addb movsl stos scas mov mov fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha add jl add mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov ror xlat fsubp in repz add adc and das aaa ds dec dec push pop pop fs je jg mov stos mov mov aad loopne ljmp adc add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out in repz std add or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aad (bad) ljmp unpckhps pop and inc dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop add imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha push orl test ret leave into aam fsubp jmp add unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge xchg add add lea lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addb mov mov rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl je jg mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov roll add add int3 rcl fsub out repnz add or pop sbb cmp pop pop bound jae jge mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp add cld add or and xor ds dec dec push pop pop imul mov mov mov fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp add add add pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc add pop pop arpl push je jg mov stos mov mov aad loopne jmp idiv add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpckhps pop and add add dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov add (bad) in out hlt stc incb unpcklps pop es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop add add add je jg mov test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz std add or and cs ds dec dec push pop popa imul addl mov rol rcl fsub out repnz add or add push and xor ds dec dec push pop pop arpl je jle mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl pushf mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jb jge mov test ret leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add jb jge mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul ja addl mov ret rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb movsl stos mov add fcomp jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov mov mov aad (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add add push or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne hlt stc incl unpcklps sbb and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc add inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb movhps and sub cmp dec push push pop popa data16 add jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jns test movsb stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul add jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec push push pop popa imul addl mov ret into rcr fsubp call add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods add add int fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul test movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb and sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out jmp idiv add or push sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jae add mov test ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc and inc inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into (bad) jecxz out hlt stc incb unpcklps pop and das xor inc inc dec push push pop pusha imul addb mov mov loop icebp stc add push push sbb cmp inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov add add test mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge mov test mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add (bad) jecxz out repz incb or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp inc inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add pop or pop sbb daa sub cmp inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad add in lock cli incl and inc inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle add movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec add pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp cli add adc push and inc dec push pop arpl js xchg stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add pop or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg scas mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add insb jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and aas inc add push pop pusha imul addb movsl stos mov mov xlat fucom out repnz add or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg lcall mov fcmovu in lock add or push sbb sub cmp dec push push add insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop gs jne jg mov test add add aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fadds fsubp jmp add push adc pop and inc inc dec push push pop pusha gs jne addb add rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov test (bad) leave iret aam add in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add sub inc dec push pop pop arpl je jle mov test ret enter fsubp call add push adc sbb cmp pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jge xchg lods mov mov xlat fsub out icebp idiv add add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps push and add add add ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rolb xlat fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push add pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc sub cmp dec push push pop pusha imul jl xchg stos mov mov (bad) fnclex out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb add jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc xor push push pop add imul addb movsl stos mov add (bad) fneni(8087 in lock sti add and sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov (bad) in out hlt stc add add pop and das xor dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp icebp idiv add or push sbb sub cmp add pop popa data16 jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa add pop pop bound jb jge mov movsl stos scas mov mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jl orl test mov mov (bad) in out repz incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add pop pop bound jb jge xchg lods mov mov rcr fucom out repnz add or daa sub inc inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call pop or push sbb es aaa cmp inc dec push push pop popa imul test mov (bad) in icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jge add add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb add inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add push or push sbb sub xor push push pop pusha imul add fwait mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop bound jb jl add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub add push pop pop arpl jae jge mov test mov mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb es aaa aas inc dec push pop gs jae (bad) mov sbb sub cmp push pop pop data16 jne test mov mov jecxz out idiv add unpckhps and das xor push pop bound push jns mov scas mov ret aad loope out hlt sti add or push sbb cmp inc dec dec push pop pop arpl jae jle mov test mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp unpcklps push and add add cs aas inc dec add pop pop fs je jg mov test ret leave into rcr fsubp call add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec add pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lea lods mov mov xlat fsub out icebp idiv add or push push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov (bad) xchg lcall mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc add pop pop bound add push (bad) xchg cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg add movsl stos scas mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je addl mov rol rcl fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas add iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds add add loop in repnz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add add adc sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge mov test add into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and add xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop add add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub add push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb add movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov nop xchg fwait mov mov aad loopne ljmp adc das xor dec push pop pop imul mov add add into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov add fucom out repnz add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fiadd in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp testb add add add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and add sub xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop gs jne jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno js (bad) mov test mov mov fcomp loop in repnz std add or daa sub inc dec add push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov add fcomp jecxz out repz std add push adc push and sub dec dec push pop pop bound jb add add (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or adc push and xor ds dec dec push pop pop imul mov sahf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub in icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp add mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add pop popa insb jb jl xchg lods mov mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into add fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or sub inc dec push push pop bound jb jl xchg test mov mov xlat fucom out repnz idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor push add insb jno jl xchg stos mov mov (bad) fucom call pop push push sbb inc inc dec push pop gs je (bad) mov stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fneni(8087 in lock cli add and aas inc add add push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec add pop bound jb (bad) mov cmpsl lods mov mov rcl fucom out repnz add or pop sbb aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul mov lods mov mov aam fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl add js (bad) mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es ss inc dec push push pop popa data16 jno jl xchg movsb mov aad loopne ljmp adc sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl je jle mov test ret enter fsubp call add or and xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov fneni(8087 in add idiv add or push sbb sub cmp dec push push pop add je addl ret (bad) lock adc push and inc dec push push pop fs jp test movsl stos scas mov mov fcmovu in out cmc cli add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov add xlat fucom out repnz add or add aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs js addl mov mov mov (bad) jecxz out repz incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call incb push adc push and xor add ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov (bad) add in repnz incl pop and das xor aas inc dec dec add pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push add gs je add test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jno jl xchg lods mov mov xlat fucom out repnz add or push sbb and sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov add xchg cltd sahf mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or daa sub aaa cmp inc dec push push add push (bad) xchg lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov add mov rol add xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa add push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add (bad) in out hlt stc incb unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop bound ja test (bad) ljmp sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jge xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc add dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or and xor cmp pop pop bound jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add jp test movsl stos mov mov aam (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push add imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg xchg fwait mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test add add (bad) jecxz out repz std add push adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp add jmp add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fildl add out lock sti add and inc inc dec push push pop pop gs jne jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop imul lcall (bad) int3 rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add add add das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul (bad) xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor cmp inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp testb add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop add push jne addb movsl stos scas mov rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov add lret fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl add xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out add sti add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test add add enter fucom out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov add aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop pop bound jb jg test movsl stos mov mov aad in repz add adc and xor sbb sub xor incb sub push pop popa imul pushf mov (bad) lret fucom jmp or adc ss pop arpl ja orl scas mov ret aad jecxz out repz incb or sub cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add add sbb es cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz add or daa sub aaa cmp inc dec push push pop insb jno jl xchg stos mov mov (bad) fndisi(8087 call xor inc xchg cmpsl scas mov rol roll fchs out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov nop xchg lcall mov fcmovu in out hlt stc incl unpcklps push and add xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add push adc push and xor cmp inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add or sub inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or sub dec dec push push pop bound add jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt stc incl unpcklps pop and add cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp jmp add push adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp add add push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push add gs jne jg mov stos scas mov mov (bad) in out repz incl unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop gs jne addl mov rcr fucom out repnz add add adc and xor cmp pop insw je (bad) mov mov ret (bad) fsubp in icebp idiv add or pop sbb es dec push pop pop arpl je jle mov test add mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fild in lock sti add and inc inc dec push push pop pusha imul addb lea lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge mov test mov rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fiadd in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub add cmp push pop bound jb jge xchg test mov mov add (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or add sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub dec dec push pop pop bound jb jge add mov mov (bad) in out hlt stc incl unpckhps pop and cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sbb and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp add push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jae jle mov test ret enter fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec push push pop pusha gs jne jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul ja addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov nop xchg lcall rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul (bad) mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps sbb and inc inc dec push push pop pusha imul addb cmpsb add stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fild in lock sti add and inc inc dec push push pop pusha imul addb test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha gs jno jnp xchg cmpsb stos mov mov (bad) faddl add add out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and cs cmp inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fsub out repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcr fucom call add or add add sbb cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop popa imul addl mov mov xlat fucom out repnz add adc pop daa das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and es cmp dec push add pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne out icebp idiv add or push sbb and inc inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl imul add test mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg mov mov rcl fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl outsb je jle mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov add (bad) int3 rcl fsub out add idiv add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test add iret aam (bad) ljmp unpcklps push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub cmp push pop bound jb jl xchg test mov mov xlat fsub add out repnz add or pop sbb es ss inc dec push push pop popa add add jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out cmc sti add and aas inc dec dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fldl jecxz out repz incb add add or sub dec dec push pop pop bound jb jge mov add mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov ror fsub out idiv push push adc cmp push pop pusha outsb jne test mov mov aad (bad) jmp cmc sti add and inc inc dec push push pop pop gs je jnp add fwait mov mov aad (bad) ljmp unpckhps pop and add add pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add movsl stos mov add loopne out cmc cli incl unpcklps pop and cs aas inc dec dec push pop pop imul add movsl stos mov mov aad loopne ljmp adc and cs push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop arpl jns orl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or add sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out in repnz incb or adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc add xor push push pop pusha add jbe addl mov rol rcl fsub out icebp idiv add or push sbb sub xor add inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov (bad) in out cmc cli incl pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fcmovu in lock cli add and add dec push push pop pusha gs jne addb movsl stos mov mov rol rcl fneni(8087 out icebp idiv add or adc xor dec push pop pop gs jne jnp add mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa add add jno jl xchg lods mov mov (bad) fndisi(8087 out icebp testb add or pop sbb daa sub inc dec push push pop bound jb jge xchg lods mov mov iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop popa insb jb jl xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov add add scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or sub dec dec push pop pop bound outsb jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov add (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg scas mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fneni(8087 in lock add add add and inc inc dec push push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov xlat fsub out repnz add or add sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and add xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc add and sub cmp dec push push pop pusha data16 jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa xor ds dec dec push pop pop arpl je jle mov test mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs jne jg mov add add scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc sbb es ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov add (bad) lret fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock cli add and aas inc dec push push pop add imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loope jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jae (bad) mov test mov mov fcmovu out cmc cli add and aas inc dec dec push add gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or sub add sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp clc std add or daa sub aaa cmp push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add sbb sub cmp dec add add pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov flds loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc add pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or push sbb and sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop gs je jg mov nop xchg lcall rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop add je jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg stos mov add rcl fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fadds add fucom call add or and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsubp call add push adc pop and xor ds dec push pop imul mov sbb and das xor aas inc dec dec push pop pop imul xchg pushf pop unpckhps and cs push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps sbb and das xor aas inc dec dec push pop pop fs jo jnp test movsl lods lret fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub dec dec push pop pop arpl imul xchg pushf mov (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs add jne jg mov test (bad) lret fsubp in add stc incb push adc push and xor ds dec push pop pop data16 jb jg mov mov mov fsubp in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec add add imul mov test mov rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) leave into aam fsubp jmp add push adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg mov mov mov (bad) fildl add loopne out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc sbb cmp pop pop arpl jb jge mov cmpsl lods mov mov add fldl in out hlt stc incb add push adc push and sub xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret rcl fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc sbb add sub cmp dec push push pop pusha add jnp xchg cmpsb lods mov mov (bad) fndisi(8087 call or adc das xor aas inc dec dec push pop pop fs js test mov ret lret rcr loope out idiv add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add add mov aam fiadd in out cmc cli incl and inc inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop popa imul addl add mov rol rcl faddl loop add repz incb or adc push and add aas inc dec push push pop pusha data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addl mov rol rcl fsub add add in icebp idiv add or push sbb es xor add inc dec dec push pop pop arpl jae jle test lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or add push sbb sub cmp dec push push pop pusha imul add cwtl popf mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov fnop in lock sti add or push sbb sub cmp add inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out repnz std add push adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out add idiv add or daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas add push push pop pusha imul addl add add rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov movsb test (bad) aad add fcmovu out cmc std add push adc push and xor ds dec dec push pop pop arpl jae jge mov scas mov rol rcl fneni(8087 in lock cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add cmc sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) add lock add add adc das xor dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and add xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and add add xor dec push pop pop gs je jg mov test ret enter (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul ja addl mov rol rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec add pop fs jo jnp test movsl stos scas mov mov fcmovu in out hlt stc incl adc and xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs jne jg mov test add lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp dec dec push pop pop arpl jae jge mov test add rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl add add int xlat fsub out repnz add or pop sbb daa sub ss inc add push pop bound jae orl (bad) fcomp mov mov fucom jmp cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add adc sbb inc inc dec push pop pusha insw jae jg mov mov mov add aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg mov mov xlat fsub out repnz add or pop sbb es add inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jb jge mov rcr fsubp call add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jb jge xchg test mov mov fcomp loop in repnz std add or sub add dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add add adc xor push push pop popa imul addl mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne ljmp adc xor jae jle mov test mov mov fcomp jecxz out cmc cli add and inc inc dec push push pop pop gs jne jg add movsb test (bad) aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle test movsb test (bad) leave iret aam fsubp jmp add push adc push and add xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test les lret fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop bound jb jl xchg lods mov mov add add (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add add adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop imul nop xchg fwait mov mov fucom ljmp push or mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat faddl jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lea lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp idiv add and inc inc dec push pop pop arpl jae jle mov movsb stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add ret enter fsubp call add push adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add and inc inc dec push push pop pop gs jne addl mov mov xlat fsub add in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov add add rcl fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fildl loop in repnz add or pop sbb add inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out add icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in lock cli incl pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp cmc sti add and sub cmp dec push push pop popa imul ja addl mov rol rcl fsub out icebp idiv add or add add sbb es cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or sbb and xor ds dec dec push pop pop arpl outsb je jle mov test mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and sub dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add and inc inc dec push push pop pusha add push jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs jbe addl mov rol rcl fneni(8087 in lock cli add push or push sbb sub cmp add pop popa insb jno jl xchg add xchg xchg fwait mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor add push pop pop gs je jg mov nop xchg fwait mov add add rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) jecxz out repz incl pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or add adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) ljmp unpcklps push and xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out cmc cli incl unpcklps pop and das xor add cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub dec dec push push pop bound jb jge xchg lods mov add xlat fucom out repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb xor ds dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and sub xor push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc add add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound push (bad) mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb add mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub add push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov ret rcr fucom call add or sub inc dec push push pop bound jb jge mov mov add leave rcl fsubp iret loop mov ret fabs jmp or xor inc dec dec push pop imul xchg mov mov fsubp lahf test (bad) leave into aam fsubp jmp pop or daa sub aaa cmp inc dec add pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov rcl fsub out repnz add or push sbb sub cmp inc dec push pop arpl je jg mov movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp add push sbb sub xor push push pop pusha imul xchg scas mov fsubp add add repnz add movhps and sub cmp dec push push pop pusha imul addb movsb stos scas mov ret fcomp jecxz out repz incb or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov rcr fucom call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 ja (bad) xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub call add push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop fs je jg mov test mov fcmovu in out hlt stc incb push adc push and xor add add add dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps and inc add push pop pusha outsb jbe test or sbb and inc dec push push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound add jge mov test mov mov fcomp ljmp lock add or adc xor cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out repnz add or add sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul ja (bad) xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push add inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jl xchg lods mov mov rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec add pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov scas mov add add (bad) in out hlt stc incl unpcklps add and aas inc dec dec push pop pop gs jae orl mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg add enter fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test ret leave rcr fsubp jmp add stc incb or adc push and xor ds dec dec push pop pop bound add jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add clc std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc add push adc add sbb cmp push pop bound jb jge xchg lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub add cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc push and xor add pop pop bound jb jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb js orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push add pop pusha insl jb jge mov test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub call add or daa sub inc dec push push pop bound jb jl xchg scas mov mov fcomp loop in repz std add or sub inc dec push push pop popa insb jno jl xchg mov lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov add leave into rcr fsubp jmp add or sub dec push pop pop data16 jne orl mov (bad) int3 aam jecxz out repz incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs jne jnp test movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out clc std add or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 in add idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb mov lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret leave into rcr fsubp call add or add daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and add dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec push add gs jne jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jno jl add mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add push adc add and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop imul add add mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec push push pop insw jne (bad) mov mov ret lret fucomp lock adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb lods mov rol rolb add fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) add loop in icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fnsetpm(287 add or add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp sbb cmp inc add push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz add add unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb sub dec dec push pop pop bound jb jge xchg mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs inc dec push push pop pusha imul addb add add lahf movsl stos scas mov mov (bad) in out hlt stc incb sub cmp inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or adc das xor aas inc dec dec push pop add push je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop gs jne jg mov test ret enter fucom out add clc std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop add jo jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor add dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in add ljmp push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods add into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fsubp jmp add add add adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz std add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt sti add unpckhps pop and add add aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add add jns orl test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jge xchg mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop arpl jae jle mov add cwtl sahf mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock sti add add pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test leave into aam fsubp jmp add add incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp in repz incb or adc sbb add add add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jns orl test mov mov xlat fucom out repnz add or sbb daa sub aaa cmp inc dec push push pop popa insb jno jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol int fcomp loop in repz std add or sub dec push pop pop imul mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or add push and cs ds dec dec push pop pop arpl jae orl test add add enter fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out icebp idiv add or pop sbb es cmp dec push push pop add insb jno jnp xchg cmpsb scas mov rol rcl fneni(8087 out lock sti add and sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) out repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp add out hlt stc incb push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in ljmp adc add add inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and add xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and add ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) in hlt sti add adc pop es push es out sti add movhps es cmp dec push push pop popa data16 jno jnp xchg stos mov shrl cmp dec push pop popa insl jb jl xchg lods mov mov aad loope jmp idiv add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp adc sub cmp dec push add bound jb jl xchg add xchg xchg pushf mov mov xlat fsub out repnz add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop popa insb jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa add jb jge mov mov add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test scas mov mov fadds add in out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pop imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out add cli add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and add add dec push push pop popa imul ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock add or push sbb sub xor push push pop add add add add push jne addb mov add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jno jl mov stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fsubp call add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov rol rcl fneni(8087 in lock sti add and aas inc dec add pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov add add leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop fs je jg mov add vaddsubps fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom in repnz add or daa sub dec dec push pop pop bound jb jge mov movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu add ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli add add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out add cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or adc sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb push adc push and cs add cmp inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and aas inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jae addl mov rol rcl fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne jg add cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop add in icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov flds loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add sahf mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jmp cmc cli add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and sub xor dec push pop pop gs je jg mov test les add lret fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge orl test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add sbb and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp jmp repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add push adc push and sub dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and inc inc dec dec push pop pop fs je jg mov test ret leave add aam (bad) jmp add push adc push and cs add inc dec dec push pop pusha jb jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and aas inc dec add add pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc sub cmp dec push push pop pusha imul addl mov ret rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub ss inc dec push push pop pusha imul add add addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc das xor dec push pop add push je jg mov test (bad) into add (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge mov xchg popf mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcmovu in lock add or sub cmp inc dec push pop imul mov mov ret lret loope lock incl push push sbb inc dec push pop pusha push lea mov mov (bad) jecxz out repz incb or adc sbb add cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub aaa cmp inc dec push push pop bound outsb jae jle mov test (bad) leave iret aam add in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl add add jae jle mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa imul addl mov ret rcl fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec push pop popa data16 jno jnp xchg movsl stos mov mov rcl fneni(8087 out repz add adc sbb ds dec add pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test add mov mov fcomp loop in repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul orl mov aad loopne ljmp unpckhps pop and cmp dec push push pop pusha gs jne jg mov movsl stos mov mov aam (bad) jmp add push adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds add add loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jb jge add mov mov xlat fucom out repnz add add or pop sbb es ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out add idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fucomip out repz incb or adc sbb cmp pop pop bound jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fsub out repnz add or pop sbb daa sub add xor cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa add pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pop gs jne jg mov scas mov mov mov (bad) in repz add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add adc pop and cs ds dec add pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push push add push add mov test mov mov fcomp loop in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov rcl fsub out repnz add or daa sub aaa cmp push pop bound je jg mov stos scas mov mov fnop in lock cli add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz incb or adc add and das xor push push pop pusha imul addl mov rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fsub out add idiv add add sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa insb jno add mov test (bad) leave rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test ret leave into aam fsubp jmp add unpcklps pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and add add xor push push pop popa data16 jl xchg test mov mov (bad) jecxz out repz incb push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl add loop in repnz add push adc push and das xor aas inc dec dec push pop pusha imul addl enter (bad) out repz incb or adc and xor aas inc dec push pop gs jae orl lret jecxz repz nopl sub ds dec pop lea mov (bad) int add sbb and jne mov test (bad) leave into aam fsubp jmp add or sub xor ds dec dec push pop pop bound jb jge xchg add mov mov (bad) fneni(8087 in add idiv add or adc xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec add pop bound jb jge add mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test ret add iret aam (bad) jmp add push adc push and xor cmp pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into add fcmovu in out hlt cli incl or adc xor dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb add and sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub xor ds dec push pop pop insw jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds add push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc add add push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov test mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov add fcomp jecxz in add stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne add mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fucom call incb or sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl add fwait mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov (bad) fsub out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec dec push pop pop arpl imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov add add rcl fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or sbb cmp push pop bound jno jl xchg stos mov ror xlat fsubp out cmc std add adc and xor mov in hlt sti add adc and das ss popa push mov scas mov rol aam loopne out idiv add adc sbb cmp dec dec push pop popa insl je addb lods mov mov fcomp in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov aam add (bad) in out repz incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop imul ret rcl fsub out icebp idiv add or push sbb add sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and xchg cltd sahf movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg mov rcr fucom call add or sub inc dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg scas mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov add add (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in add clc incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat faddl loope in repnz add or and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add add push sbb es ss inc dec push push pop popa add jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop data16 jno jl xchg scas mov ret lret rcr (bad) out inc push pop pusha insw jae addb stos scas mov mov add add (bad) jmp add pop and aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add add unpckhps pop and das xor dec push pop pop imul mov scas mov mov add loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop gs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and add cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out in repz std add or and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add or sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub xor cmp pop pop add outsb jae jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne addb movsl stos scas mov (bad) lret rcl fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul add jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jnp xchg cmpsb add int3 rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne out idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jge xchg test add add enter fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave add aam (bad) ljmp or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad fcmovu in out hlt cli incl unpcklps pop and cs aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or add sbb cmp push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock add add pop and das xor ds dec dec push pop pop arpl jae jle mov cmpsl lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa add dec dec push push pop bound jb (bad) mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb and sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul jl xchg cmpsl mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor add push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov add (bad) lret rcl loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae add mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add adc sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and inc dec push push pop pusha add jbe addl mov rol rcl fneni(8087 in lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat add loop in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa push mov test rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor inc dec dec push pop imul xchg mov ror aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub xor cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg mov mov xlat fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop out repz incb or adc push and xor ds dec dec push pop pop add add outsb jae jle mov test mov mov fcomp jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out repz incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in add stc incb or adc push and cs ds dec dec push pop pop add je jle mov test add lret (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov add lea lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das add push push pop pusha gs jne jg mov movsl stos scas mov mov (bad) in out hlt stc incb add pop and das xor ds dec dec push pop pop imul mov add lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb daa xor cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop arpl add jle mov test ret enter fldl in out repz incb or adc push and sub inc dec dec push pop pop arpl jae jle mov test (bad) leave add rcr fsubp call add or sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop imul mov mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov add fucom out repnz add or sub xor ds dec dec push pop pop imul add stos mov mov (bad) fneni(8087 out icebp testb add add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or unpcklps pop and cs ds dec dec push pop pop imul mov stos scas mov mov flds loopne ljmp adc add add xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall (bad) aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz std add or daa sub inc dec push add arpl jb jge xchg cmpsl lods mov mov rcr fucom out repnz add or add sub dec dec add add add pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in repz incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov (bad) in out hlt stc incb or push sbb and inc inc dec push push pop popa data16 ja (bad) xchg lods mov mov xlat fucom call add or sub aas inc dec dec push pop pop imul nop xchg fwait mov ret lret loop repnz add movhps and dec push pop pusha push mov rol (bad) fucom in repz add adc sub cmp dec push pop gs je test mov (bad) lret rcr jecxz repz add push push push es push pop arpl jp mov mov fucom in repz add adc pop daa das ss lret in cmc std add adc and xor inc dec push mov add adc and xor inc inc dec push pop insw jne test mov (bad) in hlt sti add adc pop daa cs add fs je orl mov ror xlat fsubp in repz add push adc cmp dec push pop bound js xchg mov (bad) int3 aam loope out idiv add adc and das ss bound js xchg mov ret ljmp daa das ss bound jl mov mov loopne out idiv push or xor inc dec push cmpsb mov fsubp in repz add adc and cs pop arpl js xchg add xlat fsubp adc and mov (bad) into jecxz icebp idiv pop imul test lods mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jno jl xchg add add rol rcl fsub out in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add or adc xor push push pop pop gs jne addb movsl stos scas mov rol rcl fsub out repnz std add or sub xor ds dec dec push pop pop imul addl mov fcomp jecxz out hlt cli call push sbb daa sub dec push pop addb lret loopne out idiv add or das xor push test scas mov mov fucom in repz add adc pop es dec push pop pop arpl jae jle mov scas mov ret add lret fsubp jmp sbb sub dec push pop imul js orl test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor inc inc dec push pop bound (bad) xchg sahf movsl lods mov (bad) lret rcr loope out idiv add adc and cs arpl jp mov mov mov (bad) int3 rcr (bad) in repnz add or push sbb sub cmp add pop bound jb jl xchg lods mov mov xlat fsubp in repz add adc and cs popa push mov scas mov ret aad jecxz icebp add clc incl or xor inc dec push pop outsl jbe (bad) xchg test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub call add or daa sub inc dec push push pop bound jb (bad) mov mov ror aad loop out hlt sti add adc and cs push pop popa insl jae addb scas mov rol rcl fsub out repnz add or sub xor aas inc add push pop popa imul addb cmpsl lods mov mov fneni(8087 in icebp idiv add push adc push and das xor inc inc dec push push pop bound jae jge mov add fucom add and xor ds dec dec push pop pop arpl jae jle add movsb stos scas mov mov (bad) in out hlt stc incl unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push push pop bound jb jge mov test mov mov ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or add daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat add jecxz in repnz std add or daa sub inc dec push pop pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg test mov mov fcomp jecxz out hlt add push or xor inc dec push push pop bound jno jl xchg cmpsl lods mov mov fcomp loop in clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) out idiv push or sub ss inc dec push push pop popa data16 jno jnp xchg add cmpsb stos mov mov fcmovu in out hlt stc incl movhps es dec push push pop popa insb jb js orl stos scas mov mov (bad) in out hlt cli incl adc xor cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg mov mov fcomp jecxz out idiv push movhps test shl ljmp and xchg sahf test mov les mov ror fcomp out idiv push push adc cmp push pop pusha outsl jbe test lods mov mov (bad) in repnz incl daa add add ss insw jae addb lods mov mov (bad) in icebp idiv add or push sbb sub cmp add pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop add insl jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul add add orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg add movsb stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc sbb aaa cmp push pop bound jno jl xchg xchg xchg fwait mov ret rcl fsub out repnz add or pop sbb sub inc dec push push pop bound jb jl xchg lods mov mov rcl fucom out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov add add fcomp in out cmc cli incl unpcklps pop and aas inc dec push push pop pop gs jne jg mov stos mov mov aad loope in icebp idiv add or add sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out cmc cli incl unpcklps pop and add xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz add call add adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop add outsl jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push add sbb and sub dec dec push pop pop imul (bad) xchg lcall mov (bad) jecxz out repz incb or adc push and xor cmp pop pop add outsb jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec add pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb add cmp push pop pop arpl ja addl mov rol rcl fucom call or sbb es push pop pop gs jae (bad) mov mov rol aad add in repz add adc pop es xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fiadd in out hlt stc incb push adc push and das xor ds dec dec push pop pop arpl jae jge mov mov add ror fcomp jecxz out add cli incl and sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec add fs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec dec push pop pop bound jb jge mov test mov mov (bad) in add out hlt stc incb push adc push and add aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae add mov stos scas mov mov (bad) in out hlt stc add or daa sub inc dec push push pop popa insb jno js (bad) mov cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add unpcklps pop and add add cmp dec push push pop pusha imul addb movsl stos mov add (bad) fneni(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps sbb and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add push or pop sbb daa sub ss inc dec add add popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop add insl jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec add pop pop fs je add test test mov mov fcomp jecxz out repz incb or adc push and xor cmp push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov add ret leave into rcr fsubp call add push adc sbb cmp pop pop bound jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg add add ret rcl fsub out repnz add or sub inc dec push push pop bound jno jl xchg lods add int fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov int xlat fucom out stc incl unpcklps push and xor ds dec dec add pusha gs jne jg mov test (bad) lret fcmovu in out hlt cli add add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps and cs ds dec dec push pop pop arpl jae jle mov cmpsl scas mov ret lret loopne out cmc cld add adc pop sub ss popa push xchg mov mov in repz add adc and xor aas inc dec push pop arpl jns xchg mov ret lret loope lock push push adc cmp inc dec push pop arpl jns mov mov vpmullw in hlt sti add adc and xor aas inc dec push pop gs je (bad) mov mov (bad) int fsub jmp cli add adc and das aaa ds push pop gs je orl mov (bad) int fsub jmp sti add adc and cs pop pusha push mov mov fucom ljmp add icebp idiv add adc sbb cmp pusha imul addl mov ret rcl fsubp ljmp push sbb sub ss dec dec push pop arpl jbe test lods mov ret lret rcr loope lock incl push push sbb inc dec dec push pop gs jae orl mov (bad) int fsub jmp cli add adc pop daa cs bound js lcall into aad in repz add adc and xor ds dec push pop fs jae (bad) mov mov (bad) into aad in repz add adc and xor aas inc dec push pop gs je orl mov fsubp in cmc std add sub cmp push pop pusha outsb jbe test mov ror fcomp out add idiv add sub cmp push pop popa push mov mov (bad) fabs jmp push push push and inc dec push pop bound ja test mov ret (bad) fucom jmp cli add push add push and dec dec push pop insw jne test mov (bad) out idiv add sub cmp dec push pop gs je orl mov fsubp in hlt cld add adc and xor aas inc dec push pop data16 jne test mov fsubp in cmc cld add adc and xor inc dec push pop pusha outsl ja xchg mov ret fchs out idiv push or xor inc dec push pop pusha outsl ja xchg mov (bad) lret shr lock add movhps and add add push pop arpl jns mov mov (bad) lret adc es ss dec push pop imul mov mov (bad) (bad) call add sub xor pop pusha push (bad) mov cmpsl lods mov mov rcl fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and add xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 in lock sti add or push sbb sub xor push push pop pusha imul int fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec push push pop popa imul addb in lock cli add and cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in add or adc pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push pop pop arpl jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub add add cmp push pop bound jb jl xchg test mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec add pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jge mov test mov mov xlat fsub out repnz std add or daa sub inc dec push push pop popa insb jb jge xchg stos scas mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop add imul mov mov mov flds (bad) ljmp adc xor push push pop pop gs jne jg mov movsl stos mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or adc xor push push pop pusha imul addb movsl stos mov mov fucom jmp sti or xor cmp dec push push pop bound jne (bad) mov lods mov rol rcr loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol add add (bad) fneni(8087 out lock add and sub aaa cmp push pop popa data16 ja (bad) xchg test mov mov fcomp loop in repnz std add push adc sbb xor aas inc dec push push pop popa insw jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pusha imul addb cmpsl lods mov mov xlat fucom call add and aas inc dec push push pop pusha data16 jno jl xchg lods mov mov xlat fsub out repz std add push adc push and xor cmp pop gs jb jg mov mov mov fneni(8087 in lock sti add and add sub xor push push pop pusha gs jne addb movsl stos mov mov aad loopne out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec dec push pop pop gs je (bad) xchg test (bad) leave iret xlat (bad) in hlt sti add movhps inc dec dec push pop imul nop xchg popf mov ret lret fsubp jmp stc incl push adc push and xor cmp pop pop bound jb jl xchg add add mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jns orl test mov mov xlat fsub out icebp idiv add or pop sbb es add cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov add mov aad (bad) ljmp push adc push and cs ds dec dec push pop pop bound jb jge xchg lods add int3 rcl fsub out icebp idiv add and aas inc dec dec push pop pop imul test movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp cmc sti add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into add add add (bad) jecxz out repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) add lock sti add pop and aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp xor cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc das xor dec push pop pop add je jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov add (bad) aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jae jle mov test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec add pop bound jb jl xchg lods mov mov aad loope add icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul je jle mov test mov mov fcomp loop in repnz add or daa add dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg add mov mov aad loopne ljmp cmp inc dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp clc std add or cs inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp add add cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz add hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp notb cmp inc dec dec pop pop bound jae jle mov test (bad) lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jl xchg mov ret rcl fsub out repnz add unpcklps pop and das xor inc inc dec push add push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound insl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp add or pop sbb es cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl add fwait mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp push pop popa insb jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha imul addb add add mov rcr fsubp call incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test add add rcr fsubp call add or add cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb test (bad) leave into aam fsubp jmp add and sub dec dec push pop pop gs js xchg mov (bad) int fucom dec push nop xchg lahf cmpsb scas mov ret lret rcr loope out idiv add es dec push pop pusha data16 jae addb pop bound jb add xchg cmpsl lods mov mov (bad) jmp add push add das xor aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov add test ret leave into rcr fsubp call or adc sbb cmp push add push orl test mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop bound add jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov stos mov mov add aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jle mov add ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov add sub xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push add bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push pop pop bound outsb je jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul orl add mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov add xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov add ret rcl fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add push or push sbb sub cmp dec push push add insb jno jnp xchg cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad add out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs add push pop pop imul mov scas mov mov fcmovu in out hlt stc incl or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb add add unpckhps and inc inc dec dec push pop pop fs je jg mov test leave rcr (bad) in hlt sti add adc sbb aas inc dec push pop pusha push lea scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push add daa sub ss inc dec push push pop popa imul addl popf mov mov xlat fsub out icebp idiv add or push sbb sub cmp push push pop popa add add jno jnp xchg stos mov mov aad (bad) ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or adc push and xor cmp pop add imul mov scas mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl je test add mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor add push pop pop imul mov stos scas mov mov (bad) in out hlt stc incb or adc das xor aas inc dec dec push pop pop imul mov movsb lods mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc sti add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov aad add out icebp idiv add or push sbb sub cmp add pop popa data16 jno jl xchg cmpsb stos mov mov add vaddsubps loopne add icebp idiv add or pop sbb daa sub ss inc dec push push pop xor dec push pop popa push mov scas mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp add jmp add unpcklps pop and sub xor push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul xchg sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test vaddsubps fnop in hlt sti add adc sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop add popa imul addb movsl stos mov mov aad add out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into aam fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp adc sbb and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl add fwait mov mov aad loopne ljmp unpckhps add and inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb inc inc dec push push pop pusha imul addb movsl stos add rcl fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov test mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret (bad) in out hlt cli add adc push es push pop popa outsb je addl (bad) lret rcr (bad) in repz incb or sbb es cmp inc dec push pop pop insw je (bad) mov mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc add dec push push pop popa data16 jno jnp xchg scas mov mov fnop out icebp idiv add or sub add dec push pop pop imul addl mov ret rcr fucom call add push adc push and cs aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fucom call add or sub dec dec push pop popa imul orl stos mov mov fcomp jecxz out repz incb unpcklps pop and das xor inc inc dec push pop pop bound jae jle mov stos mov mov (bad) fsub out icebp idiv add push adc pop and das xor aas inc dec push push pop popa insb jb jge mov stos add lret rcl fsub out repnz add or sub xor push push pop pusha imul test cmpsb stos mov add sub aaa cmp inc dec push push pop bound jb jge mov stos mov mov aad loopne ljmp adc sbb es ss inc dec push push outsb jne orl mov (bad) int fucom in idiv jmp and das aaa ds dec push pop arpl jns mov mov (bad) int3 aam jecxz icebp stc add adc sbb daa das ss dec push pop gs je (bad) mov mov (bad) fninit ljmp push push pop insw jne orl mov ret fcomp add sbb xor inc dec push pop pusha outsl jbe test lods mov rol add int3 rcr (bad) in repnz incl daa sub aaa cmp inc add pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec push pop arpl jns xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul add pushf mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz add or add add sbb daa sub aaa cmp inc dec push push pop gs je jg mov add inc dec push push pop gs jb addb scas mov ret leave rcl fucom jmp stc add push adc and das ss pusha outsb jne orl mov ret lret or and xor aas inc dec push pop gs jae (bad) mov mov fsubp out idiv pop push push sbb inc dec push pop bound jp mov mov (bad) fnclex ljmp and cs arpl jp mov mov ror xlat (bad) out hlt cld add adc and das aaa aas inc dec push pop arpl jp mov mov fsubp out idiv add sub cmp push pop pusha outsl jbe xchg mov ret add rcr loop icebp stc add movhps es push pop popa imul lahf cmpsb scas mov add int fucom jmp sti add adc inc dec push pop bound jns xchg mov (bad) int3 aam in repz add lahf mov inc dec push pop lea mov fsubp in hlt sti add daa xor inc dec push push pop data16 jbe test mov ror fabs jmp movhps daa das ss dec push pop fs jae (bad) mov mov (bad) fnclex jmp push adc cmp push mov dec push pop add jno addb mov ror fcomp out cmc cld add adc and pop pop gs jb jle mov mov rol rcl fndisi(8087 out icebp idiv add or adc sub xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne test mov mov (bad) jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jl xchg movsl stos mov mov aad loopne ljmp lldt xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in lock sti add and inc inc dec add pop pop gs je jg mov stos scas mov mov fcmovu in out cmc sti add and add dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb test mov mov fcomp in out repz incb unpcklps pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out cmc cli add and inc inc dec push push pop popa add jb jge xchg cmpsl lods mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul add add movsb stos scas mov mov fnop in lock sti add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg mov mov (bad) in out hlt sti add and sub cmp dec push push pop bound jb jge mov test mov mov fndisi(8087 out icebp idiv add or daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov xlat fsub out repnz add add adc xor push push pop popa insw jb jle mov test (bad) aad loopne jmp idiv add or pop sbb cmp pop pop arpl je jg mov stos mov mov add add fcomp jecxz in repz incb or adc pop and das xor aas inc dec push push pop pusha imul addb cmpsl lods mov mov xlat fucom out repnz std add or sub xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsl stos scas mov mov fcmovu in lock cli add push adc sbb cmp inc dec dec push pop pop arpl je jle mov stos mov mov xlat fucom call add unpckhps pop and inc inc dec push push pop popa insb jno jl orl stos scas mov mov fcmovu in out cmc cli add or push sbb daa sub dec dec push pop pop arpl jae jle mov test mov mov fcmovu in lock add or sbb add and (bad) out repnz incl push adc push and cs inc dec push push pop gs jae orl ret rcl fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock add add add add add sbb pusha imul mov ror fsub out cmc sti add push adc ss pop fs ja test movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs jne addb movsl stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov stos mov mov add fsub out icebp idiv add or push sbb es aaa cmp dec dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jg mov stos scas mov rol rcl fcmovu in out cmc cli add pop and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov fcomp jecxz in repz std add add adc pop and aas inc dec dec push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add push adc pop and xor push push pop pusha imul (bad) xchg stos scas mov mov fneni(8087 out lock add or sub dec dec push pop pop arpl je jg mov stos mov mov fcomp in lock add or sbb cmp inc dec dec push pop pop gs jbe addb test mov mov fcomp jecxz in repz incb or sub xor add pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out idiv add or sbb cmp pop pop fs add jp test movsb stos scas mov mov fndisi(8087 out repnz add or sub xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub ljmp and das ss inc dec push push pop pusha imul (bad) xchg test (bad) lret (bad) in lock add or push sbb daa sub cmp pop pop arpl jae jle mov test (bad) lret fndisi(8087 out repz incl and sub dec dec push pop pop fs je jg mov stos mov mov fcomp jecxz jmp add unpckhps and das ss test stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loope in icebp idiv add or pop sbb aaa cmp pop pop arpl jb jge mov test mov mov fcomp jecxz out repz incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop out lock add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb cmp inc dec dec pop pop arpl jae jle mov test (bad) aad loope jmp idiv add or push sbb es dec dec push pop add push orl test vaddsubps fneni(8087 out lock cld add or pop sbb daa sub aaa ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in lock cli add pop or sub xor ds dec dec push pop pusha imul addb cmpsl lods mov mov fcomp loop in repnz std add push adc sbb xor ds dec dec push pop pop fs jne orl leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add add rcl fnop in out cmc cli incl unpcklps pop and aas inc dec push push pop popa imul addl mov ret rcl fsub call add unpcklps push and cs ds dec dec push pop pop fs jne addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound add jle mov stos scas mov mov fnop in lock add or xor inc dec push push pop insw je test mov ret xlat fucom jmp add adc xor cmp inc dec push pop pop bound jae jge mov test lret loopne sub dec push pop pusha outsl or sbb sub cmp inc dec push pop xchg lcall (bad) int3 rcl fsub out icebp idiv add or xor inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz unpcklps push and cs ds dec dec push pop pop arpl jae jle add movsb stos scas mov mov fcmovu in out cmc cli add es push pop popa data16 jb sub adc and add cmp pusha outsl jne orl mov ret lret rcr loope out cmc inc push pop fs ja test stos mov mov aad loopne ljmp add add pop and cs ds dec push push pop gs jae (bad) mov mov rol aam jecxz lock incl mov fsub call cmp push push pop gs jno jl xchg scas mov ret lret rcr loopne out idiv add adc and cs ds dec dec push pop pop imul addb cmpsb stos mov mov aad loopne jmp idiv add or pop sbb daa sub aaa cmp inc add pop pop arpl jns xchg mov mov call or sbb sub ss dec push pop gs jae orl add in hlt sti add adc sbb cmp pop gs jae orl (bad) into aad jecxz icebp clc incl or add xchg mov ror aad loopne ljmp or push sbb sub xor push push pop pop gs je jg mov test (bad) lret fcmovu in out hlt stc incb push adc push and sub xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fsub xor dec push pop arpl popf movsl lods mov xor inc dec push pop pop gs jae (bad) mov mov (bad) lret rcr loope jmp or push fnsetpm(287 jmp clc incb adc pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fsub out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov add fcomp loop in repz std add or daa sub dec push add imul cltd lahf xor aas inc dec dec push pop pop gs jne jg mov scas mov (bad) lret cmp dec push pop popa insl jae addb and dec push pop fs je orl mov (bad) iret xlat fsubp in cmc cld add adc and xor inc dec push pop pusha outsl ja xchg mov (bad) int3 rcr jecxz repnz add adc and xor aas add pop pusha push mov rol xlat fsubp in cmc std add sub cmp push pop popa imul lahf cmpsl scas mov (bad) into (bad) fsubp out idiv add sub cmp push pop bound jns mov mov vpaddq in repz add adc and add add cmp push pop pusha push (bad) xchg sahf cmpsb scas mov vpaddq in repz add add sbb sub cmp push pop pusha push (bad) xchg sahf movsl lods mov (bad) int3 aam in repz add adc and xor inc dec push pop pusha outsl ja xchg add in cmc cld add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) int fsub jmp sti add adc and xor inc dec push push pop outsb jbe test mov ret lret rcr jecxz add cld add adc and xor inc dec push pop pusha push mov mov in repz add adc and xor inc dec dec push pop outsl jbe test test leave iret aad loope out hlt cli add unpcklps pop and das xor pop pop outsl add jbe test mov (bad) lret fucom jmp or adc xor dec add pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps push and cs ds dec dec push pop pop arpl add test mov mov fcomp jecxz in repz std add push adc sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out repz add add unpcklps pop and xor push push pop pop imul addb cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add (bad) int3 rcl fsub out repz add adc and xor inc (bad) cltd mov rol aad loopne jmp cmc sti add sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add pop and cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub inc dec push push add insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec add pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound add jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push pop pusha imul add xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl orl test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb orb test add leave into rcr fsubp call add push adc sbb cmp push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg scas mov rol rcl add loopne jmp cmc sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps sbb and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr jecxz lock add add push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop add jne jg mov stos scas mov mov (bad) in out hlt stc incb or sbb and add xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test mov fcmovu in out hlt stc incb push adc push and xor inc inc dec push add bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or adc push and xor ds dec dec push pop pop arpl jns test add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push add bound jno jl xchg mov mov add ret rcl fsub out repnz add or pop sbb daa sub cmp push pop pop insw je orl (bad) int3 rcr loop lock incl push push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov rol (bad) fucom in repnz add adc push and dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out out repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock push or push sbb es add cmp pop pop bound jb jge mov add test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and add dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and xor ds dec dec push pop pop imul add test add leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor cmp pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push popa data16 jno jl xchg lods mov mov xlat add jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub add in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov lods mov mov xlat fsub out icebp idiv add or push sbb sub add xor aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub add cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov ret leave into rcr fsubp call add push adc sbb cmp push pop bound jno add xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno add mov lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) in idiv add or pop sbb es ss inc dec push push pop pusha imul add add test movsl stos scas mov add (bad) lret rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc cmp inc dec dec push pop pop imul nop xchg sahf movsl lods mov rol rcr (bad) in repz add mov stos mov mov fucom jmp stc add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb ja (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop add insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub add cmp inc dec push push pop popa insb jno addl mov rol rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jne jg mov lahf movsl stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb es ss inc dec push push pop popa imul jl xchg mov mov fcomp jecxz out repz incb or adc push and cs ds dec push pop bound ja test mov (bad) fnclex call add idiv add adc sbb inc dec pop fs jbe test mov (bad) int3 rcr loop lock push push adc cmp dec push pop imul xchg mov mov jecxz icebp idiv add ret lret rcr loopne out idiv add adc and das ss dec push pop arpl jnp add scas mov (bad) lret rcr loop repnz add adc push and dec push pop bound ja test mov (bad) fnclex jmp or sbb sub cmp inc dec push pop add jg mov mov loop repnz add adc sbb sub cmp dec push pop insw jne test mov loopne out idiv add sub push pop arpl jns mov mov add in cmc std add adc and xor inc dec push pop pop outsl jbe test mov ret fchs call push push push and dec push pop arpl jp mov mov (bad) out idiv add sub cmp push pop popa push mov mov in repz add or sbb sub cmp push pop pop outsl ja xchg mov (bad) lret rcr loop icebp stc add adc pop es cmp dec push pop outsb jbe test mov ret lret loope out idiv add or xor inc dec push pop pop data16 jne orl mov sarb cltd mov (bad) int3 rcr xchg scas mov ret lret fsubp jmp clc incb daa cs bound js add add cmpsb lods mov ret or sbb sub aaa ds dec push pop imul mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound push (bad) mov test mov mov fcomp jecxz out testl and das aaa ds dec push pop bound js mov mov (bad) out idiv push or sub cmp inc dec dec push pop pop arpl jae jge mov movsb test leave iret aam (bad) jmp add push adc push and sub dec dec push push pop bound jno jl add mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push add gs jne addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add add sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp clc incb or sub xor ds dec dec push pop pop arpl jae jge mov test scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and xor ds dec dec push add imul mov scas mov mov fcomp jecxz out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz incb or adc sbb dec dec push pop pop imul mov scas mov mov (bad) jecxz add out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and das xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push pop pop imul mov mov mov (bad) in imul mov add add fucom jmp cli add adc and xor inc xchg mov fsub jmp stc add push adc cmp dec push pop arpl js xchg stos mov ror xlat fucomp cmc cld add adc pop es dec push pop arpl ja test mov ret xlat fucom jmp cli add adc pop es push pop popa imul lcall int fnclex jmp pop push adc and xor aas inc dec push pop arpl jns xchg mov mov fsubp jmp clc incb and das xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound add jl xchg lods mov mov aad loop lock add adc push and dec push pop pop outsb jne test mov aam (bad) jmp add adc push and dec push push pop insw jae addb lods mov mov fsubp ljmp adc sbb cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat faddl jecxz in repz std add or sub dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl add unpcklps push and cs add push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul orl test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub add xor push push pop pusha gs jne addb mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jb jge mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop add push (bad) mov cmpsl lods mov mov xlat add jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave rcl fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add mov test mov mov fcomp jecxz out repz incb or add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop out repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or daa sub dec dec push pop pop imul mov mov mov (bad) in out hlt stc add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha gs jne jg mov stos scas mov add add aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jp test movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub add out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push add add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp add dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) lret rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl add jns orl test mov mov fcomp jecxz out repz std add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop add outsb jae jge mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repz incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add xchg xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb add rol rcl fneni(8087 add in icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb lods mov mov add rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop bound jb jge mov test (bad) leave add aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out repz incl pop and das xor cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in add out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc sbb and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs add dec push pop pop gs je jg test movsl stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl mov mov (bad) fneni(8087 in lock add or push sbb sub ss pop imul test adc xor push pop arpl jae jle mov test (bad) leave add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov xlat fucom jmp cmc sti add and sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor cmp add arpl jae jle mov test mov mov fcomp jecxz in repz add add std add or sub push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call incb or adc das xor dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg test mov mov xlat fsub out repnz add or push sbb add and sub cmp dec push push pop pusha gs jne addb movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and add xor push push pop popa imul addb movsl stos scas mov mov loopne out cmc cld add adc and xor inc dec push push pop outsb jbe test mov (bad) lret rcr loope out idiv add and aas inc dec dec push pop pop fs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs cmp inc dec push pop imul mov add add ret enter fucom call add or das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul orl test ret enter add in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or xor aas inc dec push push pop pusha imul addb mov mov (bad) add loope jmp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop arpl jns mov (bad) lret fcmovu in out hlt cli incl pop and aas inc dec dec push add gs jne addb cmpsl scas mov (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc sbb daa sub xor cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor dec push pop pop imul mov mov mov inc dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add add push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov add aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp add pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fildl add add out icebp testb add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb add push adc push and cs add inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push push pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and inc inc dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out in repnz add or pop sbb add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov mov ret enter fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push push add add imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb add mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in lock sti add or adc xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos add scas mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov add (bad) jecxz out repz incb or adc sbb and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop add outsb jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jl mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa add aaa cmp inc dec push push pop popa insb jno jl xchg add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push add pusha imul addb movsl stos mov mov aad (bad) ljmp or adc xor dec push pop pop gs je jg mov stos scas mov mov fchs in lock add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov ret (bad) fneni(8087 out lock add and inc add push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl add add mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl push adc push and xor ds dec push pop pop imul test cmpsb lods mov mov loopne in hlt sti add push adc xor push pop popa insl je addl mov fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out add repnz add or push sbb add dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push add daa sub aaa cmp dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or add adc sbb aaa cmp push pop bound insl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push add outsb jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor add pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub add aaa cmp inc dec push push pop popa insb jno jl xchg add (bad) int xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov nop xchg fwait mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec add add pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl add jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound add jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb add inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add or and xor ds dec dec push pop pop imul mov mov push jno jl xchg stos mov mov fnclex jmp je addb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor add push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub xor dec push pop pop gs je jg mov test ret add into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul add test (bad) leave into aam fsubp jmp add or daa sub inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae add mov test ret leave rcr (bad) in cmc cld add adc and sub xor dec push pop popa imul addb cmpsb stos mov mov aad loopne ljmp cli incl and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop add imul addb movsl stos scas mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos mov mov (bad) fneni(8087 out lock sti add and add aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out add stc incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov fcomp loop in repnz add or daa sub aaa cmp add push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test ret leave into rcr fiadd in out hlt stc incl push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne in icebp idiv add or push sbb sub cmp dec push push pop pusha add add imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jns orl test mov mov xlat fucom out repnz add or pop push and sub dec dec push pop pop arpl jae jge mov add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl imul (bad) xchg lcall mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov add (bad) fneni(8087 out lock add and inc inc dec push push pop popa imul addb cmpsb stos add mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jb jl xchg add enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call incl push adc push and xor ds dec dec push pop pop arpl jae jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret leave into aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam loopne ljmp unpcklps pop and das xor add inc dec dec push pop pop imul mov mov mov fcmovu in out add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp adc add cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl (bad) xchg lods mov mov (bad) fucom out repnz add or add pop sbb aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add unpcklps push and xor add add inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop add insl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push pop pop add add jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jae jle add mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test add add rcl fnop in lock cli incl pop and xor inc inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and add dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock sti add and aas inc dec dec push pop pop fs je jg mov test ret lret fnop add add ljmp adc das xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge add mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add add daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and das xor aas inc dec dec push pop pop imul mov lods mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and das add add dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or and xor cmp pop pop bound jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop add add push je jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp push pop pop imul mov mov mov fcomp jecxz in repz std add or add das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl add mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop add arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov add add mov aam (bad) ljmp adc pop es push pop bound ja test mov fsubp out cmc std add and sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp pop or push sbb sub cmp dec push push pop popa imul addb and cmpsl jo sbb push dec mov loopne cmp or mov iret fwait aaa arpl ja or ret add dec popa outsb inc rorb cwtl aas dec mov push xchg lret xor push fs xor cltd or (bad) mov inc mov mov pop inc rcr jp clc and mov jg push push mov pop cmp nop pushf add lds leave repz add mov (bad) sti sbb pop ss xchg and lret cmp push repnz outsl imul cmp cmp mov test test test cmp test mov test test test test cmp mov cmp cmp test nop test jmp test test cmp test test cmp test test test test xor test cmp cmp cmp test nop test test test cmp ret call test test cmp test test mov test test test cmp cmp mov cmp test nop test test inc test cmp test test cmp mov test test test test test mov cmp cmp cmp test nop ret pop test test test cmp test clc adc test test cmp test jmp inc lcall sub push test pop push dec shlb xchg xlat fcmovbe ljmp aam mov idivl aas jmp pop xchg and xchg (bad) (bad) incl jmp ret jmp test test jmp test test test cmp test pop test cmp cmp test cmp add nop cmp test test cmp mov cmp test cmp nop cmp mov inc test test cmp cmp test cmp nop cmp test test dec cmp cmp test cmp nop cmp test test cmp cmp dec test cmp nop cmp test test cmp cmp test cmp dec nop cmp test test cmp cmp test cmp nop cmp dec cmp cmp test cmp cmp cmp cmp cmp cmp cmp xor test test cmp test test test cmp test cmp cmp or test cmp cmp cmp test cmp cmp cmp cmp test call cmp cmp cmp cmp cmp cmp test cmp cmp push cmp cmp cmp cmp test cmp cmp cmp test jne mov cmp cmp cmp test cmp add cmp cmp cmp cmp mov cmp test cmp cmp add cmp cmp cmp cmp test call cmp cmp cmp cmp jmp cmp cmp test cmp cmp pop cmp cmp cmp cmp push test cmp cmp cmp push cmp cmp cmp test cmp push cmp cmp cmp cmp mov cmp test cmp cmp call cmp cmp cmp cmp test pop cmp cmp cmp cmp cmp jl cmp cmp test cmp cmp mov cmp cmp cmp cmp sub test cmp cmp cmp mov cmp cmp cmp test cmp sub cmp cmp cmp cmp call cmp test cmp cmp mov cmp cmp cmp cmp test push test test cmp cmp cmp mov cmp test test test cmp push cmp test test cmp test push cmp cmp test cmp test push test test cmp test cmp call cmp test cmp test test jmp test cmp test cmp cmp pop test cmp test test test inc cmp test cmp cmp test push cmp test test test cmp pop test cmp cmp test cmp inc test test test cmp test or cmp cmp test cmp test xor test test cmp test cmp mov cmp test cmp test test cmp jne test cmp test cmp cmp mov test cmp test test test cmp test cmp cmp test dec cmp test test test cmp dec test cmp cmp test cmp dec test test test cmp test dec cmp cmp test cmp test mov test test cmp test cmp cmp test cmp test cmp cmp test test cmp test cmp test cmp test cmp nop test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test xor test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test test test cmp cmp cmp test cmp cmp test or test test cmp cmp cmp test jne test cmp cmp test test jmp test cmp test test test sbb ffreep sbb jge bound movsl stc std outsl popf adc movsb inc sub cmp iret repnz test jne sbb cmp cli mov stos call clc js xor insl into cmp dec mov xchg jecxz mov jl lea inc fstps push gs pop (bad) and scas push popa (bad) push imul and dec (bad) fs (bad) add mov out nop repz add push jno sub (bad) aad sub add (bad) in cltd fistpl fimul inc (bad) xor inc lcall fcoml sbb push dec shlb xchg xlat fcmovbe ljmp pop aam mov (bad) sahf out inc jmp push cmp test cmp mov cmp test test test pushl test cmp test test test pop test test cmp test cmp mov cmp test cmp cmp test mov test test test cmp push test test test test test mov cmp test cmp cmp test mov cmp cmp test test mov test test cmp test test cmp jne test test test cmp test mov cmp cmp test cmp cmp cmp jne test test test test pop cmp test test test test mov test cmp test cmp cmp mov test cmp cmp test mov test test test cmp test add test test test test cmp mov test cmp cmp test cmp mov cmp test test test add test cmp test test test mov test test cmp test cmp add cmp test cmp cmp test lods test test test cmp test je test test test test test add cmp test cmp cmp test mov cmp cmp test test cmp jne cmp test test test test mov cmp test test test cmp cmp jne cmp test cmp test cmp mov test test test cmp cmp push test cmp cmp cmp test pop test test cmp cmp test push cmp test cmp test test push test cmp cmp test cmp push cmp cmp test test test push cmp cmp test cmp test push cmp test test test cmp push cmp test cmp cmp cmp push test test test cmp cmp push test cmp test cmp test call test test cmp cmp test add cmp cmp cmp test test ret idivl aas jmp pop xchg and ffreep sbb jge bound movsl stc std outsl popf adc fsubs icebp iret repnz test jne pop (bad) cmp cli mov stos call clc js adc into cmp dec mov jecxz mov jp lea inc fstps push gs pop (bad) and scas push popa (bad) push imul mov mov fistpl fimul inc (bad) xor daa inc lahf pop mov push adc aaa pop lahf shrl fs jno push xor pop pop jno jp outsl fisub insb cld getsec add cmp add pop pop insl sti pusha inc jo dec inc data16 jnp push mulb insb call pop pop insb call pusha inc add inc je lahf (bad) stc lds inc xchg mov push mov fstps or jnp dec leave dec (bad) fs lret mov push lock repz add push jno sub mov aad sub add (bad) in cltd fistpl or xor inc lcall sub push test pop push dec shlb xchg xlat shr mov mov aam mov idivl aas jmp pop xchg and ffreep sbb jge bound movsl stc outsl popf adc fsubs icebp iret repnz or adc sbb cmp pop hlt (bad) call into inc or daa mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov rorl or fwait xadd or jge sub daa (bad) (bad) lods and or lods fwait xadd or jge add lods mov or fadds sub (bad) pop inc not or fadds sub (bad) hlt mov jl rcll sub daa (bad) outsl mov (bad) or lods xchg cmp mov pop inc sub mov jecxz cs or daa mov hlt mov dec (bad) hlt mov sbb add daa (bad) mov (bad) or pop add daa mov stos sbb (bad) or (bad) (bad) or int3 stos ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds push loop or or cmp sub pop mov xchg arpl pop (bad) or (bad) or push mov push aas (bad) insl sub lret mov add or pop pop sub (bad) loop add or add daa pop mov es or daa (bad) hlt clc movsb or mov fldenv mov or daa (bad) hlt mov movsb or mov fldenv fnstcw sub jle cmpsb adc sub (bad) loop daa (bad) or lock push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push add incl push sbb (bad) or push push lock sub pop daa (bad) mov daa (bad) or test jmp es repz push rolb daa (bad) cmp scas pop das sub (bad) andb incl daa (bad) push (bad) mov or scas xchg pop shll inc xor cli sub mov push and or and mov daa (bad) push rorb sub xlat or push cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 cltd inc addr16 mov jecxz and or and incl daa (bad) push sarb or scas xchg xor push (bad) or fisttpll test (bad) or (bad) or and sub pop mov es or or or xor mov (bad) or or or sbb sub pop mov es or or or insl push sub pop mov (bad) or or or jno sub pop mov es or gs or jg or daa (bad) or fildll repz cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs repz ret sub (bad) mov mov or inc ds xor (bad) push pop fidivrl loope rolb push repnz outsb or daa (bad) (bad) insl jg pop add (bad) push js stc push sub aas and daa (bad) jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge push mov jge lods xchg push stos (bad) add xor or lods xchg pop push push leave or iret stos or daa aas test fsubrs ret jl sub mov stos (bad) add (bad) aam sub and pop rcrb push stos (bad) add in aam sub pop rorb or lods stos pop test daa andl mov or daa mov mov daa xlat or jo in es or inc adc daa (bad) loop or adc sub (bad) dec dec movsb jmp pop jns addl in or daa pop inc jl aas in daa (bad) popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov popa inc dec mov mov sbb or xchg xorl cmpsl out xor rclb or daa (bad) or and or adc daa (bad) adcb int3 xor (bad) or mov popa sub popa sub or addr16 and adc mov dec (bad) pop mov jp mov daa mov int mov fadds hlt push fadds or leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave cmp (bad) leave mov or (bad) popa sub orl (bad) mov daa (bad) sbb pop dec jl xchg dec jmp ja sub (bad) subb dec cmp (bad) xorb xor test pop aam jo jno dec sub sbbb xorb aas or or or push (bad) out movsb adc test shrb test movsb mov out jno jle jl sarb test daa (bad) movaps pop xlat notl xor mov sbb (bad) or sbb inc or cmpsl aaa sub pop cmp imul inc js pop sub (bad) adcb repnz out (bad) sub insb scas cltd add aaa push lret (bad) or daa (bad) or into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop into aas loop push loop pop (bad) or cltd cmc xlat fsubrs (bad) fldcw hlt mov add or cs aam (bad) or push fdivp pop sub inc daa mov jle fsubs or daa push repz push mov fsubrs loop cmp or fwait add mov or jge std aad sub and cmp sub mov int sub mov popa int sub or jge inc and inc pop sub mov ss (bad) push rcrb sub daa (bad) loop es or xchg dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push addr16 dec push push loop cmp or jne xlat fadds or mov or jg or daa push repz andb (bad) xor (bad) push rcrb xlat fsubs hlt sbb push popa push daa pop add out pop inc daa pop lock in pop mov fadds add adc or int3 addl inc sub (bad) or push rolb xlat mov or daa mov or fsubs sub (bad) popa sub hlt mov scas push stos sub (bad) popa sub or fsubs sub (bad) hlt pop and and in jg pop dec or (bad) or xlat push shr or mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov push mov mov fxtract pop jae jle fsubs hlt sbb adcl lods (bad) sub popa sub hlt pop add jl lods addl xor pop sub pop sbb lods pushf or inc daa pop sbb in or daa mov add mov xchg mov repnz jne test sub pop pop and in jg push repz push mov (bad) insl jno lahf insl stos (bad) jbe lods cltd sbb rorl sub push mov daa (bad) or sub sub (bad) andb add (bad) push rorb xlat fsubs hlt pop and fldt sbb or lods xchg adc (bad) or jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov jge push jb mov dec (bad) popa sub sub xorb orb pop mov fadds mov daa (bad) mov xchg (bad) or lods cltd bt aad add aas int3 xor (bad) push shrb hlt xlat fsubs hlt pop and fldt (bad) sub dec or daa mov or dec (bad) sbb daa mov hlt sbb inc xchg sub (bad) (bad) lods xchg (bad) or inc ja sub (bad) subb or push lret add sahf pushf daa (bad) or xor or jge xlat fdivrs test daa test popf xchg (bad) or lods addl shrl scas lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea jae lea (bad) popa sub cmp or je xchg cwtl daa (bad) or daa test xlat jo popa sub andb sbb insl incb sub (bad) or je xchg cwtl daa (bad) or daa test xlat jo popa sub (bad) ret cmpsb adc pop mov daa push enter or addl xor mov sub mov sub mov mov jg sub xlat jo loop xor or (bad) popa push ja mov mov fadds or lods fwait xadd int sub dec fnop sub sub decl sub push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push mov cmpsb push andb sub daa (bad) push shlb hlt xlat scas push mov daa (bad) andb hlt clc scas xchg addr16 loop ds or xor lret aas daa (bad) push jp fwait addr16 push mov daa mov popa sub popa sub popa sub sahf lods daa (bad) or daa sarb lods fwait xadd ds fstp sub and (bad) xor or push (bad) xlat fdivrs test daa test dec (bad) sbb daa sub mov xlat adc sahf test (bad) or mov xlat or daa pop inc and push sbb popa shrb hlt shl or pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test je pop test pop rol or jg or and fldt imul xadd or jge pop fnop sub sub rorl sub pop and in clc cmpsb imul sub (bad) add andl mull daa (bad) (bad) mov pop inc sub lret daa mov cmp dec push or daa pop pop and in clc lods fwait xadd ds fcmovnu sub sub or jge in fcmovnu sub sub or scas push mov daa (bad) subb (bad) sbb daa pop mov (bad) or xorl mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov jo mov (bad) (bad) shlb inc or daa xchg mov movsb imul sub pop mov (bad) or sub sub (bad) ss cmp sub jmp sub push add movsl xlat or sbb daa (bad) adc sub sub (bad) ss mov aas leave sub (bad) cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) fldcw cmc (bad) sbb (bad) cmpsl daa (bad) or sub sub (bad) ss pop jmp sub push jg sbb or out fs push mov jmp inc jmp sub push add pop xlat or sbb adc sub sub (bad) sub (bad) mov mov cmp or daa sarl dec xlat hlt mov dec aam sub sub nop inc or daa sub data16 xlat dec (bad) popa xlat fadds arpl daa xlat mov nop dec or daa sub mov or daa cmp or dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec mov fs dec rorb sub mov xlat nop inc or daa sub call aam sub sub nop inc or daa sub xchg sub xlat lods push mov (bad) aaa (bad) stos (bad) add lea hlt xlat scas sub or je cmovo (bad) or fsubs hlt sbb inc cmpsl sub (bad) (bad) shll (bad) pop inc sub (bad) or nop push or daa pop push and in mov dec aam sub sub nop inc or daa sub daa fimul sub repnz popa and inc lahf sub (bad) loop daa (bad) or jmp sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb out sbb mov es or xlat hlt lahf mov popa mov daa (bad) xorb cmp mov or daa aas push aad sub lods addl adc stos in fcomps adc or mov mov xor (bad) or aaa pop dec pusha scas xchg sbb xor or fimul sub push lret sub pop and pop es out fcomps lahf jmp movsb push add out push lret push aaa and mov adcb int3 sub (bad) or sbbl cmpsb adc sub (bad) arpl daa (bad) or daa orl xor (bad) or daa rorl sub push or ja dec cmp adc or scas push push stos into aam jmp daa (bad) dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop dec outsb popa nop mull daa rorl sub or daa and or jg mov daa (bad) or cmp or scas push push add push loop es (bad) xor mov mov xor insl adc mov mov daa (bad) or lods xchg aaa stos (bad) jg lods fwait adc test or jge adc jne push enter or test fadds jecxz lret sub inc daa mov or mov pop xlat jb (bad) out lods stos pop mov ja hlt mov scas xchg inc (bad) xor mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov jl push mov sbb xchg pop imul imul inc sub daa (bad) pop xlat jb pop jle xchg pop sub lods mov sub pop jae lods xchg pop mov data16 or push rolb and daa push ja sub sub popa sub popa sub arpl daa (bad) dec jle addl pop rep out popa sub jl and daa xchg jb pop xlat jb loop daa (bad) or push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor push out xor scas cs sub (bad) add daa out mov scas lret out insl stos pop (bad) jle inc pop (bad) inc push repz push (bad) and or movsb aas or int3 push lret adc daa push (bad) mov and mov stos out insl out and js movsb pop or rolb daa pop jbe scas sub sub popa sub popa sub arpl daa (bad) sbb addl cs sub aas sbb daa (bad) push mov daa aas loop daa (bad) push test daa fisubr daa (bad) subb pop xorl push aaa and mov inc cmp (bad) push rclb and sub sub ret fmuls mov pusha push lret cmp outsl fsubs int fisubl or lods or daa addl sub mov loope lret (bad) jg scas leave dec stos out loopne loope sub icebp (bad) or iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret jecxz,pt iret adcb cmc test daa mov movaps push int jno mov xlat jb hlt lahf (bad) or fadds or jg xor push int and push and mov sub sub pop xlat negl test daa mov or (bad) popa sub orl aas in daa (bad) push stos pop xlat jg int3 shll dec sub jge adc adc pusha push xor push and sbb out mov sub dec daa es dec stos out mov daa mov das sub (bad) or mov aas cmp daa (bad) push mov es or (bad) or xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd xchg addr16 cltd into imul daa lea sub (bad) popa sub (bad) cmp daa sub inc daa mov or daa pop mov (bad) or daa aas shll cmp jbe inc ja sub (bad) subb ret lret fstl sub (bad) sbb daa out pop and sbbb aas aas xchg loopne cmpsb cmp cmp (bad) (bad) jge out mov cmp pop jl xchg xor mov or out push and mov or scas xchg push sar or movsb pop cmovs inc push sub lea sub (bad) xorb dec das sub (bad) insl mov xchg out sub mov (bad) daa mov sbb and aam ljmp or pop and daa (bad) (bad) mov xlat or popf (bad) imul pop xchg adc (bad) or cmp add jae or lods lret cmp dec push aas or daa (bad) mov orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl orl sub or daa (bad) andb daa mov daa mov or daa out dec lods into mov and (bad) or daa mov movsl adc or int3 xlat push mov cmp dec daa (bad) (bad) jge pop icebp test daa pop pop or xlat or daa pop dec jo rorb daa push pop pop or fwait sub in and mov and sbb daa xlat shll clc aas mov push pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop lods jno pop pop mov and and cmp jns test mov movsb adc lock mov xorb sub aas jle movsb adc mov outsb jle cmpsl stos add mov add xchg das sub pop lock daa test dec (bad) sbb daa xchg fadds sub (bad) push mov and dec mov iret inc loop fadds inc inc mov pop push inc push scas or xchg xlat pushf (bad) or daa sub rclb or daa (bad) imull daa (bad) andb sbb mov and sub subb jecxz in cmp fsubrs jle inc movsb cmp daa aas mov daa (bad) jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo pop lods jo jl hlt xlat dec mov jecxz lock jnp mov jns dec mov sub (bad) (bad) fdivrs sbb (bad) jecxz les hlt push test inc andb mov inc push scas or mov mov fs movsl jg push movsb fs daa ds lock dec dec push xchg jle push mov or sub pop pop dec mov jg inc mov jns daa ds dec push (bad) bound xchg fs dec mov or fildll repz cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs cs ds fsubrs inc pop jb dec push andb cltd insl jnp mov inc dec mov hlt xlat imul outsb jl movsb outsb dec inc (bad) jecxz (bad) sub push xchg jns inc mov outsb dec inc xchg jae iret fs addr16 mov insl push mov pop daa ds leave fsubrs inc pop mov inc mov dec jno jns push mov gs mov loop daa (bad) or dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl dec insb arpl sub fsubrs inc pop jne js dec mov inc push mov dec daa ds lret fsubrs inc pop pusha mov imul dec pop mov push daa ds int sub je jg dec mov pop inc push mov dec daa ds neg sub xchg fs dec mov dec imul adc sub jnp mov outsb pop push xchg dec js mov or cmpl xlat pusha mov insl pop mov outsb js mov or int3 add xlat movsb outsb dec push mov pop dec mov pop push orl xlat arpl outsb pop ja fs inc movsl js dec mov jae push (bad) loop daa (bad) or outsl dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov dec inc mov inc shrb insb inc mov dec data16 inc push mov pop dec mov pop push (bad) jecxz icebp sub jle movsb jg inc mov outsb dec push xchg jae iret paddsw fcomps bound mov push data16 jecxz hlt sub jle movsb jg inc mov push push xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha mov sahf xchg pusha jecxz iret sub jg mov dec dec inc mov gs daa ds fsubrs dec pop inc mov dec jne inc push mov inc push mov dec daa ds fsubrs dec dec push xchg inc xchg outsl dec push mov pop daa ds fsubrs pop dec push xchg dec movsb bound addr16 push movsl or testl outsb dec push (bad) jecxz shrb imul inc dec mov jle bound jecxz repnz imul pop inc nop bound or sbb hlt xlat jo bound bound jecxz repz imul dec outsl mov dec dec mov rorb xlat je dec pop inc mov dec arpl fs pop xchg jae daa aas (bad) sub (bad) xlat hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or hlt sti or rclb sub pop sub (bad) jecxz cmc sub pop dec mov inc adc or leave and xlat je jg dec mov jns inc mov or xchg add xlat jne push popa mov (bad) cli fsubrs pop inc inc mov push sub mov outsb pop imul inc imul hlt jl movsb inc dec mov dec ja fs inc movsl js iret test xlat fcoms addr16 je jno daa ds fsubrs dec dec push (bad) outsb inc push xchg dec orl sub jecxz sbb adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds adc ds aam hlt lock or xor mov fs pop test push mov jae sub pop dec push negb test dec mov jns inc mov outsb dec push (bad) sub mov inc push mov addr16 add scas inc dec pop divb or mov inc mov push gs mov inc push mov bound mov jle push mov pop jno jns dec mov gs mov je ds and je outsb inc dec clc pop dec inc cmpl pop popf outsb push or or loopne hlt xlat add xchg push jnp hlt push and arpl mov inc or rclb xlat and or iret (bad) xlat fcom or daa ds fsubrs or daa (bad) jecxz cmc sub sub (bad) or jbe hlt xlat daa (bad) or iret js xlat fcom jecxz int3 sub je mov dec or mov pop push mov inc dec mov pop daa ds (bad) fsubrs pop dec inc mov sub scas sub mov fcom fdiv dec push (bad) jecxz aad hlt adc (bad) xlat fsub jg push (bad) jecxz cld sub sub (bad) or in es xlat fst or iret mov add daa pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) pop (bad) mov mov jbe enter jnp (bad) loope add test aas cmp pushf pop jecxz fcomp pop inc cmp jno push mov pop jo leave dec mov inc mov sahf andl sbb mov (bad) jb popa lds dec pop xor sub xor int3 xchg xor pop lret mov pop add jg xor lahf out pop fnop fnstenv orl add es movsb mov dec xchg popf lcall pushf mov sti subb mov mov mov jo pop and dec mov outsb loop cmpsb mov aam inc sub jl fs or xchg sbb repnz ret mov xchg fimull jae dec (bad) lret and push and roll jb lock cmc aas mov xchg and int inc inc jg int3 in pop pop lods test adc push cmp out fsub mov popf and sub xor push movq test mov adc push mov addr16 aaa ret scas sbb push inc mov icebp mov jae or lds jmp adc (bad) cmp jl out (bad) cmp mov push sub (bad) outsb lret or dec pop xchg push loop lods cmc fldl mov jle (bad) in fbld inc lret rolb das hlt dec pop jno repnz jmp ljmp repz mov jp or push lahf mov inc cs (bad) iret rcll aam push lods cli push les stos addr16 mov mov and inc xor dec (bad) lods mov add fisttpl sahf push outsb clc lret push or xor lret enter push fs sar dec jo mov cld mov fcoml iret inc pop inc leave xor rcr sub cmpsb push dec sbb movsl mov test aad lahf call add rcrb xor and cmp xchg pop sbb mov sbb sub mov cmc push fbstp sbb xchg push out gs xor lret push push (bad) dec mov rcrl in jg push jno cmp insb jae mov jl cmp adc xchg dec popa xor and orl pop sbb popf (bad) lock arpl mov int3 mov iret dec (bad) ret ja mov mov movsl ret int icebp or inc loope inc cmp mov (bad) xor adc insb (bad) mov test out sbb sar lods cmp pop jae (bad) popa int3 (bad) gs mov mov and bound fisubl inc shlb mov jne jno pusha insb dec daa ds mov mov jp inc les fbstp jno mov mov sub add and sbb cmp xlat mov mov push js xchg vmwrite mov xchg into loop lret mov xorb ret std jle cwtl mov push in lcall (bad) pusha iret call scas lret inc inc pop or ljmp (bad) jmp sub js sbb rcll inc out dec xchg adc cs adc int and xchg xchg shrl cmp pop mov xchg push pop cmp xor lahf xchg cmpb jo sbb jl enter arpl test sti fwait adc pushf gs fdivrs cmpsb negb in loopne jb push out add lret sbb mov test mov rolb and sbb add (bad) dec ds xor cli xor cmp or mov jl push ret inc mov aaa dec add xchg add and sbb inc xor and push orl les inc idivb xchg repnz dec fsubrl rorl lret pop adc repz mov push and out test in arpl mov or push inc mov jb cltd sub lods gs fiaddl test inc loop push mov pop sbb jl sbb mov lahf les clc push or sub stos and in insb in popa pop and andb cmpsb sahf outsl push xor movsl fnstenv cmp pop or push xchg dec mov nop pop sti cli cmp stos (bad) outsb aam jns in xor iret pop outsb (bad) mov dec idivl fs test xchg sub mov jne inc and fiaddl pop lcall scas push mov cmp mov xor mov mov and repz xchg mov adc push dec cmc sbb scas sbb stos xor (bad) negb sub mov fsubl push lret push stc and pusha hlt test fcom mov enter or mov lcall subl js outsb ret sub in jmp jmp inc aad inc sub shrl xor rcr cli pop push mov insb add repz fstpt in and dec rclb imul ret jae ret mov lods ss push inc es mov adc mov stos pop int push pop mov call or sub jbe mov popa jne pop push push test iret adc ret std inc in push xchg adc ja call pop fcom scas push cmp sbb lea mov mov xor mov (bad) scas and push pop ljmp rcr jl sbb popa out pusha daa sub mov pop in dec inc xchg imul pop cmp sub into lods ret movl stos add pop pop mov cmc data16 (bad) mov clc ja insb adc mov add xchg add pop aas dec mov das aaa xor xchg inc xor pop inc lods mov sbbl inc fwait lea push jg mov jns dec test pop cmp fstpt adc in mov (bad) xor push int3 leave loope fadd sub aam dec mov mov (bad) mov std pop (bad) rcrb cltd test push jno fisubl out cmpsb mov xchg cs mov jp sbb ret notb repz jmp call and jmp push pop add imul notl pushf outsb xchg mov scas xchg xor mov adc jg lret imul out adc xchg mov lahf mov jge ret ds mov cmp repz mov adc lea xor sti sbb cmp mov sbb cmpsl jmp mov test movsb fdivl lods (bad) into and mov add or js (bad) shll add fisttpll cltd testb aaa push and xlat mov test clc stc push sub hlt je cld fistp and int leave movhps pop inc push negl mov xor add movsb enter lret push movsl mov add lea add mov xchg jnp jno mov je pop and icebp jb mov push sub cmc xor jg sbb aaa div (bad) jns in push mov aad lock push fcmove sub int3 inc rcll (bad) addl stc inc ret imul les cmp add aas sbb jmp mov sub sbb add jmp loopne pusha or xor pop loop jns push dec out xor sbbl dec rclb jp das into lcall data16 (bad) mov sbb inc nop cwtl xchg cmp test cmc pusha xchg xorb ja lret loop mov test and pushf push sbb inc stos in fnstcw cmpsl cmp sub pop sub adc out scas stc loopne mov roll push inc int sbb mov jne mulb cli out in ss shr mov sbb dec jno les cmp ret fsubrl pop push mov outsl dec xor add mov jns and pop push mov push enter imul dec mov (bad) dec repz dec lret rorw mov icebp call mov mov fwait insb call in xchg add aad test js cltd lcall or popf xlat pushf int3 jae (bad) mov stos push dec and cmc gs inc push mov f2xm1 mov add mov lds sar leave mulb jmp push push in fiaddl ret loope jg push andl add shll mov das add sub clc aad lret cmp (bad) mov or jnp xchg arpl add cld mov mov ljmp sbb xchg mov (bad) movsl pushf or test push mov jp jg add jge sbb bound addr16 mov pop nop dec mov sti mov into push les xchg loope shl (bad) cmpsb pop or ror in pop jbe xchg (bad) or mov mov mov js je push jl (bad) cmp push sub jl and mov adc sahf gs xchg sub shrl xor ljmp push jle inc push movsl aas outsb or xor ss int3 sub icebp frstor sub jno data16 xor out mov mov (bad) sbb mov fwait cmp fisubr jae cmp adc cmp push jge cmc sbb dec addl add hlt je,pn inc ret pop jnp sbb push cld hlt lds fisttp in mov aas jae or fisttpl scas repnz mov mul push aad cmp xchg sbb push xlat jg adc imul in pop pop push cs mov jle les nop/reserved add hlt clc je adc divb sti jnp add insl out pop aam rcrb sub (bad) lahf push loop mov fisubrl mov loope pusha push dec lds arpl ret lcall push xorl jp aaa insb es adc ss xchg mov dec fistpll push xor xchg inc cmp xchg data16 std cli into les cmc pop lds push idivl pop loope xor roll popa das mov or psubq in lret mov or test mov xlat lock jno mov jne pop sbbl push repnz jmp push dec aaa repz sub outsb jg fstps pusha fnstenv nop cwtl pusha fiadd icebp sbb repnz pop cld insb and dec xchg lahf pushf xchg cmp lcall and mov outsl outsb out pop pop loope mov mov xchg inc daa ret bound notl popf jne in push mov call mov iret clc ljmp fisttpll cmp push and lods jo out cltd hlt cmp add dec mov lret add push cmp in pop and lea pop mov pop iret push mov push xchg push add (bad) push orl or out test stc out pop sbb cltd cmpsl or into (bad) sarl out xor mov or and jecxz mul bound push adc cmp in lds sbb mov push daa and leave or dec pop nop push repz lret adc (bad) fs ds std sub mov mov sub hlt pushf lret xchg and repnz pop ljmp jne icebp mov inc sbb xorb rcrb stos clc xchg ret test (bad) mov jl inc xor mov stos mov inc or cmp out mov (bad) insl nop fldenv xchg ret mov and sar dec outsb adc (bad) xchg ficoml int dec (bad) (bad) jb push xchg or pop sub movsb push dec sbb mov dec sbbl jmp sub ja mov and aaa nop dec xor jmp jo ret sub inc fs mov scas cmpsl (bad) cmp jb leave sbb xchg imul dec enter push lds loope test cmp ljmp and jno mov mov clc (bad) mov inc inc loop (bad) xor pusha or sbb (bad) out cmp in test int mov jp jne gs or pop out dec popa inc fist stos sbb push test bound mov pop xor cltd mov ss push jle ficompl sbb mov pop dec js pop xor (bad) icebp sbb push mov test movsl add fbstp test aas ljmp adc add insl out lods push rep inc in scas push loopne mov shll es imul aad xor mov push xlat mov rorb pop adc sbb sbb and inc xchg mov add mov jne inc addb xchg data16 xlat mov mov mov cld xor test loope sub arpl mov xchg call inc add (bad) sub imul or pop dec push sbb cmpsl pop ja cwtl cmp ds sti shlb pushf jns outsb jb (bad) mov or pop mov loop push out jge dec mov and pop mov and (bad) clc mov cwtl imul bound push in jp (bad) xor add dec jb ljmp inc js mov hlt outsb jecxz fisubr cmp jns pop mov lods lea call pop popf jle out and ja mov xchg sbbl pop push jg mull pop xchg in fs roll xor mov jl sbb xchg inc or iret das loope dec out kandw mov popa test mov cmpsl in dec loop lods sub mov sbb push xchg mov leave fld or push pop aas dec repz sbb xor add mov andl xchg (bad) push pop pop add inc divb add xor sub outsb call push pop push sub insb add cmp fldt aam shl pop out scas stos jg mov xchg inc dec lea xchg xchg fwait test jns fistpll cmp adc mov or mov not mov push js idiv or (bad) pop or sub pop ficomp arpl jmp or cmpsl inc mov adc out push mov and aaa rcll push gs cld dec push dec hlt pop pusha xor stos das pop (bad) sarb lcall pop mov fistpl push push iret or bound repnz xlat je sbb in mov or or mov cltd std imul fwait and xchg mov insb push shrb mov dec movsl xor mov daa inc insl repz or push lahf ja xor imul std fidivrl xor fistl or and inc add rcrl cmp (bad) and xchg mov adc mov stos mov pop mov sub push and dec outsl and sub sub xor push cmpsl fcoml into inc pop inc leave xor mov sub movsl push dec sbb icebp popa mov test aad sahf call (bad) jno mov rcrb xor out or in pop jmp movsl xchg mov sbb out mov mov fwait in nop inc xchg scas dec es pop cmp sub int ret xor into orl pop test pop push divl hlt test mov sub das divl imul cmp mov mov jns xchg add loop mov pop sbb popf (bad) lock arpl mov lret mov iret dec dec sarl xor movsl ret int3 sbb loope inc cmp mov (bad) xor lret enter ret mov test stos rol dec mov scas call fisubrl cld lcall jae sbb test or xchg pop pop pop out movsb add mov sub loop cld jns pop add dec pushf add sub cmpsl les fldl2t aam and imul jmp lds mov mov notb imul into cmp lret push jns icebp pop mov dec jg aad cld inc jne lock aas mov adcb sar xchg dec clc out sar dec gs add mov pop mov pop pop mov sbb cwtl or loop dec dec iret cmp rol daa (bad) jg and popf dec adc or pushf mov (bad) ss in ffreep iret fidivl sbb inc cld insl repnz ja add and xchg imul int3 push sbb pusha inc push cli fwait data16 movsb mov (bad) cmpsl lret jle jmp adc or je shrl std mov dec scas dec adcl push or dec push or aas das daa clc icebp into ds fstpt ljmp lds dec push xchg mov lcall sbb inc test das xor add pop call nop cmp dec xchg insl fs jo sbb inc dec adc int3 jecxz cmpsl push inc xor movsb sub jl and pop push test dec ret sbb cmp cwtl stos xchg outsb and mov fdivrl insb rolb push push aas push push xorl pop int inc mov jno mov es adc imul sti fidivr and jmp (bad) xor push sub mov nop inc mov add icebp mov fnstenv mov insb std ljmp icebp decb cli (bad) mov cmpb fildll ret push jb xor (bad) ficompl xchg sbb xchg mov or or cmp or jo and mov mov iret mov pop ret testb sub push mov call xor jae mov scas lahf sbb xchg or add jne popf in jge out (bad) mov adc push adc and xchg cmp (bad) or sarb ret cld push int3 stc sub inc adc xor lock (bad) in (bad) adc test std stos jno insb add dec fnsave inc sub not (bad) leave adc mov dec bound popa sbb inc mov call arpl mov sar rcl push or (bad) out or cmpsl inc push mov jns jle dec xchg push fimul push (bad) mov es pop mov push (bad) dec in or cmp dec int ret nop and into loope call push xor dec jg push adc cwtl daa push jae mov pop adc dec add pusha loope inc mov sub mov sbb jne pop ja and pop cmp or test and pushf xor and or add sub push or mov push adc xor mov loopne fsubl xor stos jbe out mov mov inc pop in fisttpl mov and sbb test cmp pop push into push jl hlt pop mov rol (bad) sbb jne jno popa lret stc lahf mov pop inc fistl and jb,pt or fxch sbb data16 adc scas arpl loop cmc fist insl cmp or lock lods cmp push sbb nop push pop xchg sub jge ret fwait adcb push pop and fdiv divb mov xor mov push mov pop pusha sub imul stos into les lea and mov mov xlat mov mov nop enter mov jp push mov mov dec fidivr jbe inc cmp test and jne cmp repz ret mov add loopne das call cs or add mov add lahf das mov mov mov (bad) jae push (bad) pop inc dec adc stos push dec repnz sub jg and xor sbb pop fdiv push (bad) sahf mov xlat mov pop loopne pop pop xor lods lds inc cmp fs in pop mov and (bad) movsl xor mov mov push adc xor inc xor lods and and push add insb je add push add add add add and add add or test add add add adc add add add add into or add add add add add add add or add add addb adc or adc or adc adc adc add adc adc push sbb add sbb add sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor inc xor add adc dec cs add or dec sub adc add dec sub add add push sub add pop xor add add pop xor add push add add or pop cmp add or pusha cmp add push add adc arpl adc arpl adc arpl add add add push add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add and pop inc add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub adc add sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push inc add insl dec add outsb dec add outsl push add push pop add jb add jne add jns add jnp add jg add andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov mov mov mov mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb lahf add movsl mov add test cmpsl add lods cmpsb add mov add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add lock add icebp lock repnz add repnz repz repz add cmc testb idiv add clc stc add stc cli add sti sti add cld cld add std std add std std add or or push add add or (bad) fldz out neg call adc adc or (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock push xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg into mov mov mov (bad) xlat (bad) fsub loop out stc std std std std std std xchg mov mov mov mov mov enter mov shlb rcl rcl (bad) loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl mov (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol push test pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div out out stc nop mov (bad) fcoml jle mov call div out out out not mov rcl or outsb outsb outsb imul div hlt out and notl enter test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe shr fcoml mov jb xor cmp loop jmp sub outsb js (bad) fdivrl test lcall xor mov call outsb outsb outsb imul jle test pop jb xor inc ds idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor cmp inc inc inc imul test mov mov mov xchg cltd cltd lcall cltd lcall lahf lahf lahf lahf lahf lahf and mov cmpsl stos mov add add add add add add add add add add add add add add mov lcall mov xchg mov xchg stos xchg jnp mov xchg scas popf test mov mov mov mov mov popl mov mov inc add daa add pop xor add add (bad) gs add add pop xor add add adc push dec sbb je and add sbb dec add or insb dec push add sbb push and add ljmp je and outsl dec push add push and xchg add jae add sub add cmp add sbb push daa add xchg jnp add (bad) incl dec sub add xor push int add xor nop jbe add jno cmp daa add xor add add lods sahf xchg add (bad) incl hlt hlt testb jbe add dec push add jecxz add jbe add xchg mov jge cmp sub mov mov mov mov add (bad) add std incl out out icebp add or add in add (bad) lret jae add mov shrb add or pop adc dec xor add adc add add cmp add pop dec xor loop fild call jle add cwtl addb mov add cmp add push and andb xchg add and cwtl mov out out out add jmp add in in add cwtl jle mov mov sarb xor mov scas add adc xchg add mov testl lock out add lock lock aad add cwtl add iret leave add inc add mov push mov pushf add lret loopne aam in loope std cld incb mov mov add mov add andb mov mov jo push add sub xor and and and add inc cmp jae push add mov lods add fmul add inc add test mov mov stos add (bad) jbe popf mov jg add add dec add cmp cmp xor jecxz ret add fcmovne add xor add jg arpl add sarb sarb add lds add fxch add in add in in ljmp add jnp add inc add push add mov mov lods add sarb fcmovnu fiaddl out out div testl cli sti sti add mov nop add jb pop push inc add movb rcl add lret leave add and add aad add loopne add ljmp stc cli stc add push add sbb add and sub and and adc add add add daa and pop push push add lods lods add iret into add out add hlt hlt add rol add push add loope jecxz in out jmp jno rcl rcl aad xlat fcomp fcmovu (bad) (bad) xor ret (bad) (bad) enter int3 int into iret (bad) mov mov mov mov (bad) xor stos stos lods lods scas scas mov mov xchg xchg xchg xchg cwtl cltd lcall mov mov xor xor nop xchg xchg xchg jns jnp jge jg addl insl outsb sub xor jae jne ja pop pop pop pop pusha popa bound fs dec dec dec dec push push push push push push push push pop pop pop pop cmp ds inc inc inc inc inc inc inc inc dec dec dec dec sub xor xor ss sub sbb and and es sub sub sub movups adc adc sbb sbb add add or or or add (bad) incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add jmp add je add adc add aam add push or add add add add mov dec add addr16 add (bad) incl add add add (bad) (bad) incl add add add add addr16 add add add add add add add add in sbb (bad) (bad) (bad) incl add add add add addr16 add add add add add add add add enter (bad) (bad) (bad) incl add add add add (bad) (bad) incl add add inc add add inc add dec add inc add add inc add and add dec add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl push call movl mov add jo mov movl movl movl push lea push lea push call lea push call mov lea call movl cmpl je jmp movl call mov movl lea push lea push call mov lea call movswl test je movl call movl lea push call lea push lea push call lea push call mov lea push lea push push call add movl movl movl lea mov call movl or test je movl mov add jo mov movl movl movl movl movl lea lea call lea push push lea push lea push call movl movl lea push lea push call mov lea push lea push lea push push call add movswl test je jmp movl cmpl jle jmp jmp movl movl movl push lea push lea push call mov mov call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl movl push push push push push call push push lea push call mov call mov mov movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push call call movl push lea push call push call mov push jmp lea call lea push lea push lea push lea push push call add ret lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf mov (bad) (bad) (bad) (bad) (bad) (bad) pushl add ret add popf or ficompl or cli popf or or or mov sahf or sub or cmp or dec sahf or jne add pop sahf or jo or mov or cmpsb sahf or mov or enter ficompl add in or repnz or push lahf or adc or and or ss or inc lahf or pop lahf or fs or sbbb add add mov or lret add lahf or loop or clc lahf or push mov or and or mov or pop mov add je or (bad) mov or pushf mov or mov or and add shlb add mov add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop pop jbe popa inc outsb add push bound popa jb imul popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor add pop pop jbe popa dec outsb inc jb outsl jb add push imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo xchg add jbe popa push popa jb jae inc jno or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa dec xor jb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec outsb push je add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add pop pop jbe popa push popa jb jne add pop pop jbe popa push popa jb outsl jo add push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 