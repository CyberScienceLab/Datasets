int3 cmpsl lock xchg stc (bad) loop xor or inc jb loopne cwtl sbb sbb enter sbb leave call hlt psubusb pop lods push jnp pop cmp sub movsl scas or stos nop xchg repnz or scas adc jno xchg (bad) xor movsl pop mov lcall and mov es movsb or mov mov hlt adc insl cltd inc (bad) inc sub cmpsb push sbb mov popf movsb enter std popf mov push inc sbb into inc xchg sub xchg or pop insl cmp push bound jp mov pushl inc dec rcrb pop jbe jge jae dec cltd hlt popa inc getsec int3 rorl mov dec xchg xchg lods cmpsl xchg jle adc (bad) hlt and mov lret loopne lret addr16 sub pop pop sbb push adc stos xchg pop dec xchg or inc add dec int3 fcomip (bad) fisubrl add and sub mov out xchg jae jbe mov sbb jnp popa imul and sub inc mov add int3 cmp pop xlat das pop call jecxz orl cmpsl push inc xchg cmp cmpb adc xor sub lret dec fldcw bnd and jp cmpsl adc imul fmull test test inc jns shr call popf es (bad) mov lods ja jae dec ret arpl xor push jl lock mov and xchg pop pop gs adc xchg inc icebp in xor aaa outsl jo,pn scas inc out jno sbb in test inc pop insl and enter add cli out sbb xchg pop inc mov sub xor inc call mov inc jns cmp fcoms cmc cmp mov lret sahf adc cs sub add adc xchg sbb sbb mov fsubl sti int3 jmp mov mov loop xchg cmpsb lods mov cld cmc fcompl mov dec gs cmpl jecxz lock dec add sbb push cs xchg sbb dec adc dec xchg lret inc and xor arpl sbb jle xor xor jns (bad) cmp cmp sub outsl nop mov sbb imul loopne scas das sub xchg arpl sbb ret mov cmp out hlt pop sahf cmpsb aas push mov and scas in ret fnstenv (bad) popf idiv ss sub mov shll or aaa cmp test xchg insb xlat mov add xchg les mov ljmp ja mov dec push push bound iret mov nop mov dec pop sub mov clc jg out repnz gs adc decl imul xor popa jecxz loop cs mov xchg jmp mov incb repz inc call pop dec data16 pop pop push (bad) int cwtl addl nop jle addr16 ss pop cmpsl std in jae,pt and repz jno stos xchg mov loop inc and fdivrs add dec sub cmp cmpsl les xchg push bound arpl negb imul ss mov mov xlat lods fdiv gs sub xchg repnz jne pop push les add icebp adc push inc repz add mov xor add mov sbb leave es push in movsl std daa inc enter xchg xor iret dec aam push out pop dec imul ret mov jl lea inc xor shlb frstor mov mov xchg sub repz xor mov xor inc dec mov loopne lds ret mov push stos adc sti rsm and xchg jne push lea stos cmpsl movsb and ljmp stc push mov in pop cmpsb xchg xchg jbe cmp xchg sarl test rcll mov aam ss dec mov pop sbb mov pop pop mov jge iret mov dec push aad outsb xchg xlat (bad) movsl sbb xchg lods pop nop sbb outsl cltd xchg gs in and cltd pushf pop out arpl jge lea je out push in divl add ret sbb sarl mov mov dec test mov int sbb lds pop mov pop dec mov dec jl sbb out jbe pop outsl adc mov pop shrl and adc xchg push cmpsb add sarb aaa sbb jne fwait shr repnz ja mov mov les test jns or outsb sbb and or xchg (bad) movsb aas xchg mov cltd inc xor fildll sub dec loop sbb xchg test js dec push jno aad dec dec fidivrl ljmp fwait xchg mov out push mov or xchg mov jb add test lret outsb sahf push aaa xchg sbb sti out push jnp sub pushf clc xchg fwait les push pop les icebp pop in inc and dec sub ror sbb mov mov sbb cmp or dec data16 push in insl mov test insb loop xchg push ds mov loopne mov insb push push pop pop ljmp xchg push imul stc aaa out stc mov xchg stc and imul pop imul sbb pop in or (bad) call pop jno flds repnz mov sub outsb (bad) aaa addr16 inc mov pop iret rcrl inc push jmp pop inc mov mov ret xor and ret pop sbb fidivrl mov ret mov push xchg cltd fcmovnu shrl ss mov bound pop repz inc stos fwait popf stos cmp sti cwtl pushf jno sbb jmp mul mov mov insb sub clc mov jecxz xchg adc stos xlat cs xchg sub xchg inc out jno int or enter stc dec sti mov xchg mov xor aad mov lock sub push outsb (bad) cli in cmp sti xlat mov mov mov outsb sub hlt sti add fnstsw stc and xor ljmp pop push in bound ja mov dec in cmp push lea jmp adc stc and pop cli les test mov mov push xor mov dec dec push pop mov lock adc cli insl les ss jb push fsubrl dec imul cmp outsl lods outsl cmpsl cmp ss xchg mov and mov iret jmp and adc popf push (bad) repnz sub and or cwtl pop movb sti in adc sbb bound add push pop or cli push sbb mov push lcall cld mov (bad) sahf or je mov mov dec std movsl int3 lods sbb clc imul jne pop inc and xor cmc ret js (bad) test jbe fstpl pushf cmp std adcb push sbb jb sub outsb sbb enter dec fnstsw pop push push addr16 push mov lcall inc loop lock adc clc (bad) mov arpl adc inc loope and push fcmovu test cmp push pushf xchg sbb iret pop jbe or mov daa andl cltd jmp test decl mov or cwtl std jne inc xlat js dec jmp stos sbb mov mov call jmp jp (bad) loop pop scas lret xor inc push push in in inc inc push xlat and cmpsl mov add enter cld mov lcall mov lcall pop and cmp and sbb pop add pushf inc jbe xor sbb mov repz lock clc loopne mov out mov pop add mov nop (bad) jge ljmp add sbb mov (bad) mov test ss imul imul cld aad jae dec ds cmp add xor pop mov imul jb and and cs insb pop int add (bad) lea cs xchg outsb sbb (bad) sub or pop xlat cmpsb js mov sti cmp loope push iret popa push sti mov nop popa push loope lcall pushf ja iret push mov pop test hlt mov jmp ss or xchg mov test dec imul jno mov movsb (bad) and mov pop mov ficomp or xlat or or pop rcll add lahf mov jecxz xlat andl mov into pop jl repnz mov inc push adc mul frstor xor mov popa mov sub sahf mov popa mov punpcklbw or in pop arpl in out cld mov jg adc lods (bad) jp jo mov push out and mov mull repz mov jge cmpsb cmpl rcrb pop and orb lock loopne xchg fcompl enter popl cmp pop inc xchg jae sbbb push mov mov inc lock pop push notb adc jmp jge xor divl pop or je push jmp push sub mov cmp out (bad) dec ja fcoms inc je push xchg mov fisubr ds bound lods cli push shll add adc cmp xchg dec sahf push ljmp xor dec or pusha adc inc and lods and icebp inc cwtl mov xor (bad) loopne mov fstps push or and ret movsl int push cltd fwait leave inc enter sbbl das jae jb popf dec pop in scas mov test pusha das push call fsubrl nop cmpsl arpl mov jo adc rcrb imul mov xchg and sub jle sub pop dec sete add cltd (bad) lock ljmp in dec loop nop xor mov or (bad) mov pop push in xchg les fisttpl rolb fdivl jp jle iret mov out jae imul dec sub nop xor jbe out mov xchg mov lahf pop and or insb jle (bad) mov add dec mov xor fsubl loope mov rol test mov leave sub (bad) cltd xor push push test and daa sar push or scas (bad) loope fstps mov cmpsb jecxz jo nop xchg pop ret mov sbb lock push lahf int jle lods add and jbe push or mov fimul (bad) lcall mov or gs mov xrelease pop xchg mov xor mov fwait sarb mov jae cmpsb jb popf je mov mov or arpl in sahf call sbb xor ljmp rclb iret jg sbbl jge and dec and stos adc mov aam pop clc cmc test push leave fldpi sbb pop aaa mov daa imul and lret js in out test (bad) repz mov fildl or repz ds add mov xchg pushf mov cwtl sub sbb jnp stos fisubr aam mov fldl rclb enter stos stos mov jl push mov data16 int3 cmpsb add push mov and fcmovnbe adc jge xchg outsb push stc xchg jg incl add roll mov shlb out inc mov addr16 fucom je or xor test aad adc or adc out mov mov fnstcw rcrl sub sub (bad) iret les mov xor icebp fcoml push es aad jp ret out rorb shrl sbb call out mov jge addb inc out or (bad) cli jmp xor daa inc jne fild xor xor fild xchg xor xchg and adc mov sbb fwait test addr16 push out neg out stos (bad) adc inc mov scas test dec adc lret xchg xchg les fs fs mov inc loop mov fistpl adc fimul hlt add mov mov xchg inc adc xchg loope lahf lea xchg das outsl and es outsb adc imul mov cli inc (bad) xor lret fnstsw or arpl mov rep fnstcw sbb fcomp and dec cltd imul mov inc sub stos fld jae imul ret adc dec cmp or push mov dec sub dec or lret mov add mov repz movsb lret or ljmp fildll in arpl pop mov test aaa and inc mov cmpsb lock xchg lret outsb test adc mov movsl mov rclb outsl (bad) loopne cmpsb orb jb adc imul je sbb push fistpll rcll aad call mov test fdivl scas push (bad) push sbb lret sahf jle xchg push push mov push mov jno push je in hlt ret mov dec cmpsb adc out or out inc sub out nop mov dec xadd xchg cmpsb je sub or testl pop mov cli pop mov movsb mov popa pop shrl cs adc or in inc jno lahf add cld lahf je test ret lcall iret lcall sub lret into fistp mov mov inc fsub imul imul dec lcall xchg (bad) or mov push arpl ja or es leave inc fisttpll jecxz lcall scas mov xor mov or repnz mov lahf jmp inc clc jge or jae (bad) repz adc data16 inc inc call aaa shll movsb jecxz hlt push push push jnp fs test pop or pop sbbb out adc repnz loope (bad) test mov adc mov and xlat (bad) ljmp pop pop adc xchg mov add pop out push or pusha jbe adcl or stc xchg fdivrs ficompl jge stos xlat push lahf bound fstpt test pand adc inc mov fwait and adc mov jge mov (bad) xchg push jmp out sbb xchg imul leave loope imul add in (bad) out divb lods xor push cmp xchg inc mov sbbb pushf or ficompl popf xchg inc xchg int xchg outsb push jns out lock outsl movsb pop in sub mov jne (bad) cwtl js insb pop cmp ljmp (bad) xlat lahf das push decl push mov push cmc jge xor cwtl rcl adc cli fdivl pop int3 jae cmpps stc fstpt scas fsubl scas mov cwtl pop jo xchg ja cmpl push cmp in mov xor push sub and sub mov adc pop or (bad) notl dec cmpsb iret xor mov push push aas or adc cmp mov outsb pop xor push inc xchg mov jg xor arpl stos or flds push pop in (bad) xor lds sbb xor mov jno outsb push arpl sub jle xchg dec leave and ljmp repz cltd push fcmovne mov mov lods sub sub add adc xchg sbb sbb pop mov pop sbb roll and lds gs mov or pop sbb push hlt mov adc add sub push mov je xor jg insb div jnp andb cmpsl pop cmc outsl js and insl and stos mov sub mov xor or shl mov and loope pop daa arpl loopne and jb out scas scas fisub int or cmpsb scas cmc or stos sbb jmp fbstp lret pop fwait and loop mov popa mov jp int shlb xchg fsubrl sbb iret push mov pop loop aas shrl jno and mov lahf sbb sbb jb push mov dec dec std idivl mov sbb stos mov fiaddl pushl and rclb add mov or mov sub sub mov fdivl (bad) scas lds movsb in mov lods and add jmp xor or xchg jg,pn push mov and xchg mov lcall mov sbb ljmp imul loop push (bad) and push xchg add ficom dec js (bad) push dec jle adc insl shll rclb or pop adc cmc inc and nop gs lahf mov pop cmpsb jp sbb ljmp inc or aam and add and scas adc roll push (bad) mov gs repnz add cmp int3 xor pop ljmp jbe add cmpsb xor (bad) hlt dec incb jno inc sbb inc sti lret jg and or (bad) pop pop jl jb cltd mov xchg push fsubr add push pop imul xor adc or sahf and jo inc cld cmpsb mov push cmp xchg cmp in clc jge in xchg and mov cltd push adc or mov sbb cvtpi2ps add mov cmp pop fsubr sbb pop (bad) sar sub xlat or jbe pop int aas inc push mov push fs or add xchg loop jb pop ret push mov movb in in iret mov mov cltd inc mov or mov dec roll adc xchg (bad) sbb out jecxz jl jnp inc mov out sub and pop fistp mov scas or xchg scas fdiv fadds les or cmp mov sti inc mov mov xchg push faddl fs jno loope int3 adc dec push inc adcb pop in icebp dec repnz jne push (bad) icebp repnz xor fidivrl pop xchg dec lock in xchg push daa bound adc mov scas mov add pop inc dec or fist fildll cmpsb lds lods daa xor mov stc enter pop int gs cmp mov jge mov jbe and into imul out push (bad) fbstp jg outsl or jo ret sbb jmp jne jmp jle xchg push (bad) shll ja jne mov inc adc pop jmp leave cmp inc test mov cltd iret in jmp push or ss clc cld jmp (bad) fisub aad pushf and or cli scas jne clc mov mov enter inc xchg sti sbb mov pop mov push loope push xor mov mov sbb jb insl test test sbb jmp and je rcrb std sub ret hlt jbe sub pop pop inc pop mov enter out mov push mov push xor add adc push sub jg mov rcrb jne push dec outsb or js sbb pop and aad pop mov sbb (bad) cmp and sti sbb leave mov jne add pop movsl sub mov xchg lret add mov aad pop push stc fidivr inc ret push adc xchg xchg nop mov dec mov ljmp mov xor pop insl cltd push loopne cmp rcr dec insl lock and xchg stc push jge mov and xchg dec or insb psrld sub (bad) xor dec lods mov or push lods (bad) dec push and or cltd add push jmp aas sahf and lock fsubrs xchg push faddl mov pop and test mov mov cmc (bad) daa add push cltd iret popl cmpsb dec repz xchg xchg mov data16 mov push jne cmp mov push or jae and leave or or shl es xor loopne or or (bad) mov mov out push jbe aas (bad) je sub pop outsl and ja (bad) nop stos aam add idivl out mov cmc sbb adc fst lock inc testb sar arpl stc dec push icebp ja hlt inc cmpsl pop add cmp cmp mov std es test mov (bad) mov int iret iret adc push ja shlb pop mov call arpl mov sbb xor sub jecxz xor lahf mov xchg mov xor adc test jo fildl mov mov daa mov fimull push pop xchg push sub sahf adc das outsl push (bad) push push clc sub mov in xor dec (bad) ja ret loopne (bad) out xchg dec pop xchg in xchg dec xor mov addb fstps cmc and ret inc mov inc aaa les in dec add cmp push add loopne into pop mov repz loopne xor scas aas push sbbb aad and out enter ret lock push cwtl mov cmp sbb push cmpsb fwait test ds mov cmp mov cmp push idivl jnp lcall add movsw popa sbb mov sub pop mov fisubl xchg cmp pop mov sahf inc xchg mov pop adc dec xchg ret ljmp rclb lret sub pushf cmp push jg outsl jle lods lret (bad) imul lcall ljmp pushf rorb push hlt pop pushf les imul xor je sub jmp mov int f2xm1 push fistl loopne scas (bad) in pop or xchg xchg divb rcrb or jp in fimull insb andl (bad) and jl movsl es mov push jne scas orl shll mov sbb std cs push popf fisubl push dec lods cld arpl push pusha cmp jae adc imul dec sub ficom add jae (bad) dec mov add pop icebp cmp nop icebp repnz (bad) inc xchg popf imul xor jbe mov pop (bad) lahf jecxz mov push adc pop out pop sbb dec hlt insl jo lods add stc mov inc popa push push rcrl pop int3 add sub adc test mov arpl inc dec inc jne scas or mov dec pop xlat pcmpeqw mov lcall movsl push push lahf or clc insl negb jp jo mov xor sbb sub or movsl or mov or inc jne mulb lods mov or leave (bad) cmc sub popa rclb xchg fimul inc mov mov jl (bad) jle in cmp mov cmp (bad) fildl adc xchg adc sahf aaa cmp mov mov pop (bad) fiadd push lods sti arpl movsb inc push mov mov pop jno jg mov xor xchg in mov mov rcll pop loope add xchg fsubl dec fs scas or (bad) push daa out out inc nop jno sub cmp test cmp xor lods xchg cmpsb or outsb pop lret loopne out xchg mov jg add and (bad) mov sub and or or cmp jmp jnp xor int int and sti out pushf stos adc xchg jmp cmpsl sbb fptan xor ds dec ljmp movsl pop into adc enter cmp dec xor pushf and push outsl mov push and fs aas outsl test loope jecxz fucomp (bad) sbb repnz sti sbb push jge aas rcrl daa jb pop inc inc dec dec push inc push js sbb aam and testl mov and ret sub jmp mov ljmp mov repnz and aad (bad) (bad) ret stos int3 adc inc push cmpsb in inc (bad) jg aad stc addr16 ret push fcoms ret mov jns scas and mov loop (bad) int3 fs (bad) in roll adc es push test adc out cmpsb in jnp jae in inc jns xor outsl xlat out bound jae es je adc mov idiv aas mov push mov jecxz daa push insb inc arpl rclb iret pushl xor bound jne adc (bad) call mov sbb cld pop lahf test cmp orl faddl popa test lahf insb xchg push lret mov sahf cmpsl setnp call dec cmc in pop xchg in es pop ljmp ja bt push or fcoms insl push arpl adc cs jb add scas bnd sbb pop into (bad) inc (bad) insl nop movsb dec jnp sbb lds fucomi rcl jecxz sbb pop hlt roll or test adc jmp int mov xchg inc fcmovnb outsl loope xor jge jo lods std daa dec (bad) xchg iret add xor cld pop cmp loop outsb dec dec cmp xor jno fnsetpm(287 or lea (bad) push (bad) fdivrs jge inc and bnd (bad) sub sub (bad) repz cmp cmpsl lret fadds xor mov pop (bad) jg sbb scas fiaddl adc xchg fisub (bad) jg icebp insl (bad) dec insl gs ret sbb mov sarl cmp popf nop jl je (bad) mov into pop gs mov aaa sub push lahf mov pop fs arpl jnp jnp in test shl (bad) inc push pop sub fild dec test aaa shl pop adc aad sahf fnstsw lock out test mov fisubl jbe xor pop pop push enter enter faddl cld mov mov sbbb push jp xor xchg jb cmpsl test (bad) stos cmpsl jle popf add ret pusha test rclb test jle imul sahf add lcall jo mov ljmp cmp decl xchg pop icebp out xlat std aad (bad) push inc cltd lret fidivr je push loope lahf imul and (bad) in or lods sub aas out (bad) fucom mov mov jmp in rcll (bad) rol sub or sbb movsl sbb mov jp out cmp sti int jnp mov aaa movsl mov fcomps inc daa outsb sbb std adc mov and sti sub inc pop cld xchg xchg cmpsl jno add xchg aad pop sbb scas div xlat in int3 cmp jecxz jle or mov fcompl push xlat das dec mov mov pop dec or inc clc pusha call mov adc es daa add ja dec lock cmp outsl mov in mov adc enter aas jae or mov imul in dec jns xchg jnp xchg jg pusha (bad) mov xchg sub cmpsb lret pop mov movsl stos mov stos insb sub jmp or repnz or push jae,pn inc lret cmp and popf lret sub xchg sbb aaa push ret or push xor adc bound lock or popf or push mov mov andb mov (bad) gs push insb (bad) mov rcll mov sbb fadds cmp xchg fwait sti add cld sub xor inc mov in xor jno sub sahf push rol pushf cmc pop push hlt cld stc pop lds imul mulb xor dec fcoml jmp fnstenv or dec lock add mov push inc or lods cwtl fisubr lret bts ja xchg fcmove xchg or add (bad) out add ds add pop shlb dec pop xchg push stc aas adc mov pop int aam jae jmp das cmp dec pop stc xchg test popa push push stos test push sbb sbb xor in push inc rcll test sbb aaa leave push mov mov push es (bad) push inc outsl push das in pop out push lcall mov call rcl xor aam aam mov popf mov cmc add push cltd cmp int nop dec rcr and into or out dec add push js add sub ret adc pusha adc (bad) or test pop shld fild (bad) movsl pop mov dec (bad) jae pusha push add jl enter bound xor nop cmp cld push test das (bad) es jle xchg loope (bad) sahf daa push push dec cmc shrb aad sbb ret mov push idivb aad out mov loop mov lahf jg rcll aas jae xor ret or stos scas fildll into pop push or inc fsubs mov mov nop mov lods jns mov roll push (bad) clc jmp inc fiaddl mull cmp and enter mull (bad) out outsl ret es in push xor add dec (bad) sub (bad) (bad) mov dec inc lock cld rcrl push fs push sbb mov arpl jle cld cmp and add outsl ja scas rcrl sbb daa add fwait (bad) push sbb pop shrb and mov jle dec scas lods jnp inc (bad) movsb (bad) stos dec ja es dec mov and pop mov add movsl sti xchg fistpll xor mov lret icebp mov add xchg mov popa jbe mov es ret std mov into popa jnp jnp xchg push sub notl sub loopne outsb int3 iret arpl xor adc sbb out ret imul dec out push loop int3 pop mov lcall inc pop jae pop sbb cmp inc or push in cmpsb or roll stos jle add lcall push xor or ds or push js das sbb in cltd and or loope pop inc out cmp (bad) xor ja mov add mov stos in lods sti inc cmp (bad) lret inc in std loope enter imul mov inc add jecxz or lahf sbb pushf add sbb inc iret int jbe fisttpll bound sub in xchg cmove lds inc pop loop movsb mov lock inc xchg jle fistp xchg scas push add xor daa je inc xlat jbe repz (bad) jl jg clc mov mov stos aam mov mov pop sbb cld mov mov sbb lea push flds mov insb test xor add push sbb pop mov mov inc xor adcl clc lock shrl adc and popa jns sub (bad) xor (bad) jmp jne inc test xchg repnz fnstcw outsl enter jmp or data16 mov adc xchg inc mov adc push cmpsl add (bad) fsubr lods sbb xor cli es mov dec es adcl adc adc out add (bad) xlat mov dec adc jg,pt (bad) xlat aaa mov add mov push outsb imul jmp sub ss cmp scas in dec or jp cld std mov imul test dec ret nop (bad) in push syscall arpl or jmp call xor outsl add push scas pop (bad) data16 dec (bad) sbb mov inc cmp dec xchg and xor mov aam out add sbb cmpl dec mov inc mov or mov outsb xchg stos mov sub out mov xchg jge scas mov std cmpsb adc mov test cld pop mov cmpsl jne in icebp cmc mov into push test stc adc xchg xchg sub sbb ja loopne adc sti cltd test lds je outsb jg das mov push mov (bad) ss les push inc xor lahf inc scas pop fwait mov xor sbb pop jl (bad) push in (bad) lock xchg add aad sbb push push pop and cmp aad (bad) js jae (bad) and push jecxz xchg sbb (bad) adc (bad) mov popf ja and push pop xchg xchg jmp sbb in lahf jg outsb insl adc adc scas incl cli cs adc inc int3 cld repnz inc mov inc les test push clc sub leave inc test pushf arpl mov ds pop sbb fstpl adc daa fwait mov mov leave xchg mov fmulp pop hlt push icebp pop lret xor pop xchg jp jo or dec and insl rcr (bad) mov cmc fistpl pop lret or shl cli in pop push mov out push dec push jmp pop xor sbb mulb int je mov cs subl add push shlb jns push andl (bad) mov int pop movzwl aaa in cmp push fwait pushf loope pop subl sbb sbb shlb push lods imul push dec mov or and mov les add sbb test push add mov stos jnp xchg sbb cld mov test repz cmp jl fcmovbe (bad) xor sahf popf inc addl sbb cli sbb xor inc sahf xchg mov xor xor pusha sbb das test push xchg mov js dec or fwait xor in jp push dec push sub nop add daa cmp test stos jo jnp mov enter cmp push dec xlat push mov fs mov mov pop jge call jg mov ss outsl cwtl sub ret sbb jnp sub xchg fs stc and push mov push aas imul sub sar leave add push ret cmpsl enter push sbb pusha xor sbb andl push js dec js jo jno jle (bad) pop xor cltd jecxz in insl out inc push insl (bad) jg int3 mov sbb ret cmc cmc mov ret in jecxz cmc inc dec add movsb aam cwtl push jp int3 xchg mov loope clc sar dec pop jne sahf mov or rcr out mov pop decb mov stos add mov inc incb fs nop (bad) sub cmpsl xor fnsave xlat sbb xor fstl and xor push adc mov test pop (bad) es fucomip fldl dec leave lods sub ja inc fidivrl adc sahf rcrb icebp add cmp out aad inc js add mov loope xlat outsl mov (bad) sub cmp fstpl mov or clc mov fisubr pushf fiadd jmp dec jb enter outsb scas addr16 sub in xor fisubl inc aaa fidivl es sbb jg jg mov adcb testb lds lahf or lret fisubrl xchg adc xchg test jl es lret mov push int3 popa sar clc dec push add add xchg push fdivs xchg lcall ret xor cmp push or imul bound dec jecxz imul xor and pop test xchg into lods dec add subl adc dec jge mov adc xor cltd push xchg pop sbb imul cmp sbb fmul jp dec das mov xchg lea out jg jl stos test jge add fisttpll std testb es aam lret cltd aas inc mov ds cltd test mov lods or inc sbb jns adc fistp lea outsl mov ss int leave xor lret push mov sbb insb add in std mov addr16 or enter mov jecxz xchg sub fwait add sarb pop jg mov xchg lock lea int3 dec cmpsl pushf scas aad bound jae mov lahf lret lds pushf daa inc push out ret push sub arpl ljmp push xchg cmc dec sub mov mov into fdivr add xchg fisub pop jmp roll nop or out imul cmp cmp daa push push jg mov xchg adc int3 jecxz movsb and pop dec inc xlat adc cmpsl jo lock nop xor adc ljmp cltd das notb xchg sbb xor sub call add pusha test jo mov (bad) dec jp jge lret cmp sti iret jns dec ljmp scas js inc xchg aas ret ljmp fwait xchg movsb out sub subb pop mov dec jnp jg add adc (bad) sbb fs mov mov test or dec mov scas out ds lret dec outsl fild (bad) pop xchg fstpt test inc jmp movsb ret or dec fadds dec insl inc pop jne lds or mov out push xchg nop xchg add outsl popf ja (bad) xor push adc mov mov push add sub jb mov ds movsl lret mov cs dec push in adc cmpsl stc (bad) mov sti pushf inc rorl into sbb push ret pop sbb jmp jge pop idivb pop sbb jmp ret (bad) outsb mov orb psubb sahf inc sub pusha mov mov pop cmpsl inc sarb lods or add cmpsb xchg div add decl popf lahf xchg xor add cmp add mov push adc addl sub fstpt subl adc push arpl das sbb pop test push xchg push das add clc pop subl leave pusha jb adc test bound cmp (bad) cmpsl les sub mov add push lock jbe movb push mov push in rcll jb pop sti mov dec call inc xchg jns (bad) xchg sub add repnz add cmp push push std push dec bound or push sub and mov lds pop xchg push xor xchg jns mov push push jne cmp mov test frstor sbb push and loop mov sub pushf sti inc push push xchg jmp and xchg inc icebp adc xlat inc adc data16 jae jge mov xchg inc lcall cld pop repz and jl leave mov aaa test push sahf ljmp xor jns bound orl cs pop pop addr16 and or dec lods add xchg aam jge sbb push stos popa mov inc into inc jae repz pop push clc fwait nop rorl in and iret repnz inc jg icebp ret aam icebp movsb je nop shrl (bad) icebp aam fist movups dec jle mov test nop out mov xlat mov pop push popa dec inc sbb push jns repz sbb add lret pop push das (bad) mov lret pushf adc lahf jp js (bad) push inc rorb addr16 ja adc outsl addr16 or and scas sub movsb mov jl mov ja mov cltd mov dec in add shrl fucomi pop pop adc mov lcall leave lock movsb in xor loop (bad) lahf in pop sub pop xchg mov or lea inc test add mov (bad) mov in mov mov sbb (bad) mov push mov dec add jne insl ret ficomp sahf sbb mov (bad) dec cmp (bad) scas cmp adcl mov aas mov mov int mov (bad) enter aad lahf imul adc inc repz mov xchg fucomip std sbb or mov and ret sbb mov push dec insl loopne imul call mov dec sbb push dec xchg xchg xor ja jecxz mov pop pop sub cmpl into lock out fnop cwtl mov aaa pop inc repz dec xlat sbb pop pop push stos sbb int3 test negb ret mov push xor and sub repz xchg sahf push rcrl neg je fwait adc mov pop adc in stc outsb push insl dec and rcll adc jo xor inc mov and aaa arpl cld sub sahf push loope dec add add fs pop cmp add mov movsl lods cmp pop cmp cmp loope mov test popf ljmp inc sub push cmpl mov xchg inc push jmp loop (bad) mov push aad dec cwtl xorl les xchg jle shlb mov jmp (bad) mov inc inc out cmp shlb adc jnp sub inc add cli arpl int3 addr16 lds push jmp addr16 fbstp cmpsl pop sub loope loop jnp inc mov out fistp xchg cmc aas xchg mov xchg push insl arpl pop adc or dec mov sbb int fldz jl outsl in mov add mov pushf dec fimull dec aad (bad) adc mov cmp incb stos icebp mov inc mov or stos xor leave add (bad) cmc and jbe decb or xor and jne aam mov mov jmp movsb cmp mov enter push nop add popf data16 push ret jne shrl push push cld mov into cld int inc add lahf mov dec mov inc ja test xor outsl add or in push or cld mov sbb mov add or jmp daa mov ret add dec fisubr (bad) sbb insb lock call mul dec sarl dec adc inc call arpl xchg push (bad) sub ja sbb pop or cs pop mov adc push pavgb cmp mov sub pop lcall pop test xor rcrl lds sbb lret mov repnz (bad) roll jmp inc lods ret lahf push inc insl xchg jnp push xchg jl dec sbb jge idivl or push mov jl push push and dec dec cmp ljmp loope or fbld mov jae cmp mov jle pop or imul loop mov adc mov push fisttpll cs ljmp mov xchg sti not pop dec out outsl ret fnop xor pushf add in cwtl repnz out push (bad) jo paddw xchg dec jno,pn sub xchg int ds (bad) jmp mov loope cmpsb and cmpsl imul push inc iret adc es iret jb mov dec cmp add fsubr jp cs add sbb (bad) fistp enter or mov ficomp out mov or test or in jmp or cmp push out out rorb inc cmpsb mov and jmp (bad) ljmp enter movsb xor inc lret mov xor stos cmp rol loop in lcall scas xchg movsl sbb sub dec (bad) sarb data16 outsb (bad) outsl shrl (bad) lods and jmp jle sti cmpsb addr16 leave sarb or imul xchg cmp adc test add jmp push daa xor push and int inc sarl pop (bad) rorl pop lea daa sub mov (bad) insl push cs loop sar loop cmp insl scas movsl in xor mov je test mov pop call ss (bad) mov aad nop sbb in imul (bad) scas lea imul push icebp mov pop sbb sub and adc inc cmp sbb mov ja fnstenv cmp cmpsl into sub sbb mov cmp push jo stc xchg in pop std clc (bad) cwtd loope mov pushf xor adc stos out aaa cwtl leave dec test pop mov aam and mov add (bad) sbb lods adc addl movhps ja aam sub leave ja mov popf cmp dec scas mov cld add fnop (bad) fwait in mov inc dec aam lcall lret cmpsl cwtl clc dec add mov inc mov dec xor add js loope adc sbb lret pop into jge sbb xchg mov jo push ficompl jle stc pop push adc jbe or mov xchg inc mov sub xlat add aas jecxz pop sbb mov jae jne sub gs jmp jmp iret jle inc nop bound fnstsw inc daa mov cmp vmovaps sarb lea and pop add aam mov rclb cmp (bad) adc inc inc ljmp fsubrs xlat pop dec (bad) hlt cmp cmc int cmp push mov cmpsl jl pop mov cmp shll pop jnp dec fldcw pop scas and cli int mov mov cmp aad movsb jl sbb pop xlat lods inc out add push repz push es adc es xor les sub clc push jg cwtl adc cltd sub add ret sub outsb cltd jne ret leave (bad) out js mov jp xor and xor imul insl mov jae xchg lcall mov cltd into or stc shr (bad) push or jnp jmp dec mov add pop pop pop aas inc sub (bad) stc jne pop out inc (bad) adc jp pop stos sub rol hlt or push ss stc add mov fwait add (bad) std dec (bad) push lds add scas pop popf pop rcr push jne mov iret or dec add inc rcrl cmp bound jnp bound lds popa sub (bad) mov push rcrb mov cmp xor decl insl gs jnp jecxz add adc movsb mov (bad) lods sub push push test shl adc aam push push or mov bound lock das pop loope movsb fcmovbe jecxz les or arpl ja out out jmp cmpsb jns aas xchg mov nop mov jle and outsb jbe sub sbb sahf add mov pop pop inc je int int adc movsl popa jno push ja lods fsts cmp and mov and cmp gs mov sub push lahf es leave inc add loop les inc cmovbe dec std insl daa pushf negb out xchg inc scas lret mov outsb das sbb int3 fs idiv loope,pt mov test cmp lea (bad) in jno,pn xor scas sub scas inc fmuls insl je call xor xor test mov push cmp in xchg aas insb push xchg int es sbb lock jp icebp (bad) mov cmp and mov xor (bad) insl (bad) jp out jg mov cwtl add ljmp adc xchg test lcall push or jp pop nop cmpsb pop cmp xor cli push mov pushf je or lock test dec fdivrs test mov sub and out xchg xchg mov fistpl push add mov ficompl sub adc inc adc xchg push jbe jl mov orb cmpsb je mov iret xorl addr16 mov push xchg cmp push mov cli cmpsl outsl lahf mov je push mov and or adc aas jge iret pushf aaa pop mov sbb cmp mov mov xchg in (bad) into lret sbb adc mov (bad) out sahf push outsb mov inc dec fstl popa xlat lret iret sti loopne mov hlt mov push ret adc mov xchg jb inc inc inc out cld imul dec test sub pop loope sahf stc sub (bad) sub lea aas aam in lret aaa adc fbstp das xchg jg bound lahf ja sub sub ret mov insl lcall sbb adc call mov es or repnz clc push xchg jb das fstpt mov mov adc (bad) sar cmp lahf insl xchg movsb in jl rolb lods adc lahf inc orl sub stos push jl xchg and push jae xlat popa ret div cwtl arpl pop add push jge mov dec rorb mov lds jg popa jnp and jo js adc call sub not xor cmp dec scas in in test adc divl xorl arpl bound jp lahf mov and ret mul jo ljmp mov push insl enter aad cmp call push jmp mov stos add ret inc mov mov mov pop mov xor inc aaa mov rclb movl (bad) sti pop aaa lret icebp jae dec inc adc (bad) stos fs test mov jo mov push stos mov mov pop fistl mov inc push imull lahf out mov mov sbb mov fiadd out jecxz mov fdivrl enter mov repnz lcall sbb xor addr16 adc xchg xor sub subl fisubr push ljmp cmp push ja sub mov dec or adc cli cmp mov js dec cmp adc jecxz mov data16 xchg les jbe (bad) and lahf sub aas xchg cmp jg jns push js cmp cltd push jno (bad) lds push int loopne iret fcmovnbe mov test jle jmp jge or ret inc xor jl or in sbb mov pop push adc or push pusha movsl adc fs jo push dec sahf (bad) mov repz xchg and mov fdivrl or jecxz inc jge outsl xchg xor das shrl out pop add jno leave pop jae lock popf jnp out add pop jnp stos sbb adc movsb subl nop xchg pushf repz ffree pushf pop push cmp aam test (bad) mov data16 scas std jno into xchg out call popa fist (bad) cmc push fcompl mov fildll jg pop sub cmp xchg jl inc inc jle rclw mov mov push fwait mov scas mov jbe aam mov scas (bad) mov fstpl or jbe hlt in push cld push adc (bad) mov inc add inc in test cmp xorl xor dec stos and sub dec je decb sar ljmp mov jg dec int3 mov or lcall mov cmpl add stos aam test aad pop and sub nopl stos mov adc je push jge ret iret fiadd (bad) mov je push loop pop ds xor lcall jg,pn add push or lds jnp test xchg adc jno lds cld add or mov bound or addr16 mov int call loop imul out ds push sub mov mov mov cli les mov jmp push sbb push addr16 fdecstp push xorb fcmovb sti xchg dec xor inc or fs rcll push xor adc stos cltd cs loop sahf mov xor pop or int pop scas pop aaa repz clc mov ja je xchg fwait mov ljmp aad mov popl and adc lock cmp enter fwait stos xlat inc sub rol adc leave ret adc rcrl xchg (bad) outsb into ds out xor sbb sar and mov fdivrl ret inc fs fisubrl mov pop jo faddl inc push imul mov test or stc aam cmpsl inc push sub jp neg mov mov lea mov (bad) stos jmp fs popa out jle lret mov jl imul aas push lods push sti (bad) xchg or xchg cwtl aam xchg dec push push mov (bad) mov cltd dec gs jo (bad) xchg dec dec inc unpckhps es movb xor sub adc adc mov sub push adc cmp imul outsb dec leave or test add dec and js cli pop sahf cmovb icebp mov sbb jae cwtl iret inc lret cmp cmpsb xor mov push outsb stc cmpsl inc inc rol stos cld into aas sbb add add in (bad) pop test popa (bad) fldl xchg outsl add in into pop sbb lods dec ret pushf fidivrl js je ds add lds jb add pusha les (bad) icebp add or cmpsb dec add popl lcall outsl lcall xchg xor jge and cld iret or fs and imul jbe mov rcll pop mov jbe push fldenv js aaa jle loop popf loope clc mov test dec test jmp and or inc sarl push scas fsubr ret mov adc repnz popa fisubrl (bad) jmp xchg ja cwtl push sbb or jl cmp lret sarl cwtl lock sbb aad sub notb je rclb inc fsub inc or and xor mov cld dec les movsl push notl cmp or xchg cli xor outsl stos sub mov adc lock lcall cltd bound cs int add es fwait (bad) stc or xor movsl adc pop pop ja sahf fdivrs mul sbb outsl iret (bad) cmpsb inc cmpsl test movsb adc xchg mov sbb repz rcl (bad) inc jg and mov xchg adc cmp in daa imul mov dec sub fcomps sbb test sti pop movsb xchg sbb pop mov jmp cmpsl push pop lods setge subb jne shlb add xlat jecxz insb push (bad) xchg dec scas inc ja pop pop dec xchg loope push icebp or std lock fs sti adcb push stc inc pop fisttpll adc mov add (bad) or mov pop sub cmpsb push pop test inc leave mov jae jns nop mov sub mov mov inc adc adc xor insl movsl in cwtl mov mov lock inc sub mov mov cltd dec adc lods mov and xchg xchg (bad) (bad) cltd sar in push jp roll mov repnz mov cwtl xchg (bad) decb repnz xchg gs das lock jecxz ds ret inc repz jo xchg (bad) mov sbb sti in dec lods cmp andb mov jnp jno gs mov xor imul xchg into jb xor or stos fcompl das xchg inc pop pushf jnp push jp xchg jae adc (bad) inc cs lock cmp pop sub lcall neg (bad) in mov imul inc jbe mov loope jae inc xchg scas fisttpll sub cmp adc cmp lods add (bad) dec pop mov int3 std inc add ret test and ljmp dec mov mov iret xchg rclb imul mov mov ret ss lahf and lret mov add sub add pusha sbb jbe (bad) rcrl adc inc mov shlb xchg test add sbb or nop push push (bad) sub sub mov push add adc (bad) xlat in lods add cmp xor mov ja pop ret cld ss les enter sub jae rclb pushl ficoml sbb push stc xor sti cltd out dec jo lods fxam pusha and imul dec in mov out leave cmp sub inc data16 adc (bad) jnp ret aas gs lahf mov pmaddwd inc xor xchg ror fadd xchg sar xor xchg iret adc xchg sub inc fidivr cwtl mov dec movsl int cwtl bnd (bad) leave stc cwtl xor ror mov xchg lock sub outsl cmp sub ret push loop in popf aam repnz cmp fwait pop jecxz xor add (bad) sarl push (bad) cli push pop sub cmp mov pop lret outsl enter imul pop mov cltd sbb sahf xchg inc dec sbb iret dec int push test loop mov test das test dec inc add mov mov fs aaa cwtl mov xchg dec mov and inc push fwait rol ret test ret jge (bad) in (bad) pop xchg cmc idiv lret adc jl pushf mov and ss lods xor or mov push pop mov enter out movsb daa jae imul and dec fucomi jp inc mov fisubrl (bad) sub (bad) sbb (bad) mov push inc out testl push std (bad) sub and iret cmp fstpt inc sahf pop leave stc fisttp and loop pop (bad) adc pop ds sbb gs sti cmp (bad) jbe out lret ds das cmp fwait push push push fwait lds and cmp in push mov pop idivl pop cmp mov je mov clc lahf dec loop mov test cmp dec cmp test rcl add lcall sbb mov sub lea add mov cmp sub jmp dec stos mov xchg sahf decb test imulb cs jge xor dec push sub xchg (bad) dec fiaddl push sub dec mov add or (bad) mov adcl push dec daa or (bad) test cltd dec loop popf das mov popf stos cmpsb push add or cwtl cs cmpsb cmp es cmc sub mov mov or add and (bad) fwait arpl jge xchg xor jmp xchg out jp les fdiv sub icebp into test xor adc repz add jne insl mov or add xchg mov mov cltd jnp pop adcb (bad) pop ja push dec int sbb es pop sahf call jecxz das loopne add add pop mov mov dec pop imull or inc pop add movsb stc jo in add push into (bad) pop mov ljmp imulb scas mov jae dec mov cmp insl (bad) imul jecxz pop mov enter outsl sar fsubrs insb out psllq popa nop jp pop cwtl mov jl aad push aaa lret and cs xchg xchg (bad) cmc jae inc les push jp scas repz or jp sbb dec test ss cmp jo jge add imul mov clts mov inc push daa test mov (bad) pop enter jle pushf (bad) dec loop or pop sub lret inc stc lods add popf ljmp stos mov aad inc in xchg and jecxz or push push add jnp mov sub and fldenv push mov xchg mov sub pusha xor sub mov push jle xchg ret pop sarl mov sbb in jmp dec stos add pop pop cmp pushf fs cli xchg jno inc sub xor lcall fmuls push mov pop outsl aas xor push ljmp push out cmc mov inc sub push cs inc mov adc fnsave mov int3 jge add sub mov push jmp jb add flds xor aam dec jae fnstsw int3 sub cwtl dec or int3 es sbb push cmp push xor add cmpb dec add or adc out out (bad) mov push adc xlat inc adc push arpl jp mov push fcom movsl repz sbb mov sub lea rorb sub dec jne lahf xchg jns cmc push xchg test out decl rep jmp jmp push push rcl rorb sbb lock test sub out in sar repz xor xor push (bad) rolb sbb xchg mov adc and mov and fs sbb in ss das or sub cwtl push jmp loop sub fwait in xchg dec movsl xor add pop mov dec fidiv repnz aas xor nop (bad) hlt or repnz in pop cmp jg push mov test jae add dec inc cmp sbb scas adc ret cmp les imul daa xor inc fldt inc fsubs jbe out jl test fimul fcmovnb and dec sub cmp mov mov jae in in in cmc sbb mov lret adc bound loope adc mov shl loope push mov mov call pop lea out xchg jno push into add lock ret sub mov das push (bad) fmull mov sub stos pop add cmp hlt clc add jo mov mov xor push (bad) outsl add mov ja loopne dec movsl loopne mov in mov pop movsl mov and mov imul jl movsl adc mov xor insb cmp ja xchg xchg or test mov out inc stos xor outsb clc pop and ljmp addr16 adc leave mov stc cltd pop xor sarb mov push sbb aam iret pop clc fsubr add adc test xor fdiv dec and sar mov test fnstcw adc adc mov or inc jns imul aad leave pop mov int adc xchg in adc xor ret cmpsl or les mov lcall jae arpl pop jo mov jmp aaa repz sbb inc popf sub leave sbb mov lea xor sti fsubl mov jb mov dec ja jns lcall out aas xchg lods sub jle add repnz aaa cmp orps in in mov and lret insl aas pusha dec cli sbb cwtl in loopne jae,pn rcll mov push aad inc cmp arpl loope clc xchg int3 mov stos rcr xchg adc lahf in or adc xchg jg clc pop lahf mov adc cld adc rcr and or and stos fstpl loope out stos xor sbb stc sub (bad) mov pop sbb addr16 das jl repnz gs data16 add test or or aam div and push fcmovnb sub cmp sbb adc imul lret xor cmp jne adc or xor loop jo and mov out inc leave out aad lods jmp or ror jmpw shrl push xor push test xchg lcall test aaa add arpl push jge scas sbb leave inc add pop mov stos jecxz pop dec loop inc inc fsubl xabort inc clc aam in stos divl cli int fcomi sti in stos jnp pop pusha push jo push popa enter xlat xor jge lock or es ljmp jbe sbb out cli inc adc push sub in lret (bad) dec pop push pusha lods movsb scas xchg push lret add lods dec rcll sub test aas jp fldenv dec mov add fisubl scas xchg jge push (bad) push in push fcmove dec mov sbb imul cs mov xchg (bad) sarb aad add add imul dec aas int3 je sbb mov jle cmpsl jnp aas fwait lods icebp lret mov or rolb adc cmp cwtl dec push push jg int3 gs mov hlt lret cmp sbb cwtl jle enter pop push in sub out jb cmp fsub fnstsw aad mov push lcall adc mov leave sbb stc xchg and fdiv stos push pop cld call in leave fsub and leave mov push sub lea push sub nop imul push sbb xchg mov add lret jecxz aas jl inc or inc jge icebp and mov shrl leave das cld loope (bad) scas mov daa mov mov sbb inc xchg jle mov scas repnz xchg je notl mov rcrl and cmp mov repnz add cmpsl inc pop mov aaa imul sub nop mul ljmp scas (bad) outsb aad lret test or sub clc lds (bad) and adc inc repz fbld sbb inc adc adcb jbe aam in rcrb pop sar mov sub ds test addr16 das inc mov lds mov jg mov mov and (bad) xchg xlat hlt jl (bad) enter movsb jo mov lods fwait mov fsubp cmc xor (bad) movsb push fdivl jns (bad) sahf les add outsb je inc cld mov adc jg push mov stos lods lret aam cmp imulb cltd pop sub (bad) lock pop imul pop movsb and mov cli and xor loope mov mov dec out rcr lock cmp out sub dec dec imul lret push out out jg (bad) push push cmp addl fistl mov xchg daa notl jmp add test sarb mov inc and into lahf iret shlb lret lcall fnstsw pusha xor add push mov das fs test mov pop dec sbb push aam cs xchg and cli mov repz scas dec adc jae and pushf xchg sarb rcr add dec lods mov repnz fdivrl divb movsl (bad) and cmpsb sub inc mov cmp cmpsb mov stc dec fwait jp inc (bad) dec repnz (bad) and mov inc cmc xbegin notl call ret jns fistl and push int3 jmp jnp jmp aaa push loop aaa mov fcoms mov iret (bad) stc sbb pop cmp and fildl (bad) mov sub push push imul and sbb cmpsb js mov sarl xchg jno inc adc mov pop xlat shrb mulb (bad) mov fsubrl xchg ljmp inc and push daa push inc push mov pop cmc jae adc mov dec into (bad) rcrl xchg pop movsl cmp leave xor inc dec leave cmp rorl inc (bad) jno out dec or mov xchg stos dec test mov cmp mov fldl2t movsl pushf leave loope add pop loop flds stos gs dec mov adc and fdivs pop out in xchg add add mov scas mov bound xchg jl push cmp sbb jne jl cmpsl (bad) cld and rcll inc push adc jle aas sbb mov mov popfw mov xor mull xchg lahf lea cmpsb aaa adc adc loop outsl (bad) jne mov push enter ljmp mov call aas sub mov push mov adc jb out pop xchg imul mov push mov add in movnti or pop stos fs xor xchg mov aaa and stos sbb shll das (bad) xchg xchg ss les inc out insb sbb pop pop sbb and das mov test mov out add or xchg mov mov mov aas cmpsb add dec pop sbb mov lods sbb lret enter scas mov int cltd negl xor add fsubrs gs add mov dec je sub (bad) shr mov jae jo fbstp jbe pop mov adc xchg les or outsb mov or pop pop dec loope inc ficoml inc data16 (bad) imul or adc add cli add xchg xor mov push ja jecxz jecxz cmp icebp sub lcall enter push xor test cmp and out or out add psubsw stos inc push sti push adc in add mov mov out loope push cwtl lods mov cmpl (bad) icebp out push insl inc inc arpl jo adc mov sbb mov mov adc stos fnstsw loopne adc sti jge inc in mov cmp es pop push movsl andb fildl cmp add adc loopne sub jmp push mov xchg add in mov fdivrl mov imul lods lcall push (bad) sub fcompl leave leave fisttp and js add push orl cmp fdivrp pop aas int push lds test in nop test imul xor test fmulp lods adc mov cltd lcall mov xchg cmp popa shrl dec push incb js mov data16 mov sbb mov out inc icebp out lret push xor jo jl fwait adc jno (bad) loopne jbe ja jae cmpsb aam dec mov cmp xor inc cmpsb (bad) cmpsb inc ret mov inc fnstenv rclb xchg (bad) ret xorl das in push sbbb fbld add loop mov pop jg repnz bound jns adc enter movl add shrl inc into aaa add addr16 es ja and xchg sbb out and jno fs clc f2xm1 aad inc imulb daa lcall into mov and scas aad fisub pop mov pusha stc pop in push ret stos fiaddl shl jmp dec cwtl xor or iret and in and imul aas push pop push (bad) out (bad) cld adc sub leave xor and dec sub shrb mov sti (bad) lcall jmp push xchg push pusha in outsb cmp cs cmpsb xchg movsb dec iret pop lret in jp adc hlt sbb mov imul test mov mov push push adc xchg pushf mov jge mov jae jnp xchg es mov jae lret sbb push mov jno cs xchg icebp mov loop sbb pop insb adc sbb fisttp lods push sbb push fist jmp lcall jno divl lea pop into scas inc pushf mov dec pop jge ja in mov mov ss loopne mov jmp hlt aas int3 pop sti in pop sub lret sbb jge repnz sbb repz scas nop stos fmuls (bad) ljmp dec inc jae pop mov insb (bad) in int3 xchg icebp leave cwtl xlat mov out mov mov or lret cmp pop insl cmp dec daa iret pusha xor add mov mov ret sbb popf mov movsl ret (bad) repnz jmp (bad) jns popa addr16 sbb imul pop cltd psrlw out mov jo jne pop and out dec jb test test (bad) cld (bad) lahf cmp aas loop ret pushf inc mov icebp xor les out movsl adc hlt xchg fs enter in pop out outsb in xchg adc xchg push fldcw sbb jecxz mov lahf lods sub addr16 mov dec or fcompl sbb lock bound into mov dec mov adc les sbbb lret xchg bound cmp ds push les pop ret pop jecxz dec arpl shll jbe enter sub icebp dec and mov adc mov sarb int and xor cmp nop call dec mov and and cmp cld mov and cltd adc pushf lds sbb mov (bad) jecxz mov jnp sbbb inc (bad) push push (bad) push and xchg ret (bad) mov cmp (bad) movsb xchg inc scas jmp push imul aad lret loop xchg (bad) xchg cld mov movsl jne movsl arpl lds inc popa inc dec pusha in jmp arpl add xchg lahf jge lcall push cmpsb adc cmp mov test icebp mov ret es icebp xor xchg xchg repnz xchg and mov ret ret insb loope rclb arpl mov in pushf dec sub jb rcll add iret adc in cmc xchg pop xor push in and test cli aam in inc xor (bad) jne push inc lock in mov lret iret in dec add mov and add test ret int3 xlat imull sti ret jbe jnp mov (bad) ljmp and or jnp xchg lahf lea xor pop push call xorl mov daa lcall popa (bad) fstps es mov or push pop call jbe or pop dec cmp jge jns sbb rcrl movl jnp jp mov pop stc (bad) imul sahf mov jl or lods ds ss in push cwtl jnp lret imulb cmp icebp (bad) lahf dec pop jecxz adc std lcall sbb sub out mov test lods xchg push fdivrp cs jmp xchg and (bad) jg sub (bad) xchg jl inc outsl inc mov dec pop aaa jns xchg add or jecxz mov aad test sahf (bad) jg push je es std jl cmp add in fldl (bad) dec xchg ja rep mov push scas aas cs mov jmp outsb mov les mov repz ficomp xchg jecxz adc or ds test in fbld aam in std shll mov pop (bad) cmp rcr sub les inc aaa xchg in mov into inc movsb cmpsb or jg rorb dec orb dec pop inc adc add push into or dec xchg notb mov inc cwtl sbb loope mov lret mov inc das push xor mov enter dec xchg mov adc outsl imul cwtl pop repnz inc (bad) imulb mov loopne shll xchg jl jo addr16 adc lods mov add mov stos and sub jle or sbb cwtl sub mov inc int push popf or ret inc sub popa gs addr16 les stos xor mov sbb inc (bad) xlat stos loop mov add outsl mov jbe dec adc add dec jno mov and divl jl xchg mov dec sbbl xchg push inc mov fist daa lods sar clc sub add jecxz das adc insl xor and fcomps sahf or clc xchg xchg lea jg popf dec xor xor cltd pushf leave pop test inc pop in fld xchg sarl mov and fiaddl hlt mov mov clc cs pushf jl sub scas mov jle scas int3 jg jmp imul fsubrl shrl cmpsl in icebp imul sbb adc mov add gs sbb cwtl lods push cmpl jne test dec jmp sub pop sub inc dec mov stc or (bad) (bad) int and aad jne aaa aaa stos adc mov and and push xchg adc pop (bad) push imul adc cmp pop stos push mov sbb rcrb xor or ja mov (bad) les jg adc mov pushf lcall jne push faddl sub or outsl add pop out sub mov dec std in xor dec mov and cmp fnsave pushf jae lahf pop pop stos in xchg pop in sub imulb sub xchg lret dec xchg stc imul dec bswap sahf insb pusha sub ret sub adc jle pop leave lret jae mov fs movsl cmpsl mov in sbb jnp pop inc pushf enter sub lds outsb sbb push mov arpl pushf pop push bound or shrl popf cli mov push (bad) jmp fwait jecxz mov inc add gs dec loopne addr16 mov imul xchg pop sbb insl inc int psubusb or push icebp cmp xchg sub daa mov stc call pusha (bad) cltd (bad) push popa xlat xchg lods int3 mov jne mov inc cmp xchg sar inc jbe cmp jle nop loope mov adc mov jnp fnstenv lea xchg notl push mov lds mov fstps aaa bound shll mov insl (bad) in out mov pushf pop push push fwait jmp cs cmc dec jg out (bad) ret lods adc outsb fistl addr16 sub pop or mov xor sub xchg js inc in cmp pop and divl fldl dec xor nop xlat inc lret movsl sbb rcrb push aas dec mov mov fldenv in out jb pop in std xor add cmp in stos repz jae pusha fisttpl pop push stos es mov mov xchg cmp and daa cli add push sub fucomp out adc ss mov addr16 in data16 sbb dec jnp int3 jo pop andb negl push fisubrl outsl sub and loope iret iret out xor arpl dec popa or or cli cmpsl xchg cli cmp xchg (bad) sub rcl cmp mov xor mov into jl mov je xchg jl and popf push faddl pop pop stc jnp inc push pushf jno push pop xor adc leave sarl lods (bad) dec dec cld ret push enter fdivs lcall push dec xchg pop dec rcr pop inc cli mov aad rclb mov arpl xchg pop test adc xor cld inc or gs dec mov pop sbb jge shr or or mov rorb add cmpsl xchg mov scas and inc adc fiadd mov aad pop mov add aas cltd fwait mov pop js mov mov cld lcall inc push das mov or sbb xchg sbb rcrl mov repnz ret push xlat cmp pop je out aaa rcrl xor or sbb lret adc ja pop jecxz add adc lret (bad) iret jecxz push loopne lret sub hlt (bad) jno aad cld test or in gs inc mov and dec pxor ds mov lahf cli push xor lods cwtl adc add (bad) push aaa jns cmpsb xor ljmp push mov enter jp adc (bad) sbb aas sbb and dec or jb in dec loopne cmp or push arpl mov xchg icebp adc push pop xor imul test push pop dec pop push add in jmp ds in in pop cwtl or mov mov movsl sub xor dec cmp jg mov ljmp mov stos mov inc mov movsb iret jl cwtl dec loope out add push popf out mov out jecxz inc popf scas scas lods mov (bad) add call and jg mov xor pop push sbbb outsl and shrl jg loop js jp pop sbb leave lea push adc mov cld xchg aas call or loope icebp cmpsl call imul push mov xchg pop xchg mov pop loope mov mov pop push out pop imul in dec mov imulb jnp repnz stos icebp fwait add (bad) xlat push xchg scas add or mov cmpsb sbb jg jge pop in xchg daa cmp std jmp pop sbb int3 in add pop ror add xchg mov sbb jne xchg call ret lock syscall stc enter xor es jp ret mov adc retw stos inc pop test outsl fs insl enter in push mov aas adc (bad) mov or jmp repz cmc ja mov mov shr dec add and fwait sbb push idivl cmpsl (bad) and xor nop dec aas xlat mov stc dec adc mov cmpsb mov clc shl push mov (bad) or dec mov clc fwait jmp lcall mov mov mov mov pop jnp test pop jecxz mov push into pop js rcrb out mov adc dec inc dec push adc addr16 and jecxz aad addl jle int3 sbb aas push repnz daa push mov mov pop adc push push add movsl das xor sbb vpunpcklqdq lods arpl lcall sbb inc loopne sarb pusha (bad) sti pop stc mov pop das repz mov imul test sub hlt xchg cmp mov arpl mov jmp xor addr16 das and push push inc scas addr16 jbe xor mov jecxz xor aas or shrl mov jns loop es test mov nop call mov andl jno out mov xlat jo sub iret cld lods cmc pop push mov ja jo loop movsb jecxz mov dec push cli sbb and dec mov fist aas dec add ljmp loop dec cltd push imul add cli (bad) pop xor aas js add dec sti insb jge int in nop jbe dec dec jmp push lods cmp xchg in xchg jg and or dec xor sbb push xchg fisttpl ret inc (bad) xlat js sub mov arpl ljmp in shl loope cmp faddl xorl cltd mov js inc xchg test or add in push mov sbb jae mov push xor mov xchg aad mov push add sub mov daa or inc repnz lahf shll mov jb or pusha mov int3 cmc dec in cmp icebp or int3 xor (bad) (bad) repnz loopnew xlat js cmpb add dec outsl xor push int3 sub lods add dec mov sbb push mov iret sub mov out fsubrs aaa xchg xor (bad) and cli pop and push push jmp movsl in fbstp mov in and fs cmpsl mov lahf frstpm(287 mov into xchg in sub enter addr16 mov adc test pop mov cmp push dec movsl mov push add insb addr16 push xchg jae es push mov popf adc jecxz repnz inc mov mov std or mov xor popa imul test mov call mov sbb xor lahf call cmpl inc lret (bad) fwait shlb pop jbe movsl sar push adc shrb lea cmp out into dec lds sub pop ret les sub sub xor or into xchg xor outsl outsl mov jl shlb frstor xchg push sbb jle fsubr aad mov repnz pusha and repz add (bad) jnp cmc mov jns fdivp sub (bad) cltd ja mov mov xor and sbb std outsl scas xchg ret repz sub in pushf push sar jmp outsb sbb call or and pop sbb fidivl add push sbb inc jmp mov popf cs xor rcrl lea jo jnp mov sub fsqrt repnz mov arpl out dec das adc sahf xchg jecxz push js or xchg sbbl lahf sub inc out fnstcw jns (bad) mov lret das and scas test subl mov popa pop jle mov test add aas push lea xor pushf out outsl pop pusha cmpsb mov sub jno pop push in sub push int3 cwtl ret sub imull movsl cwtl aaa pop (bad) xor mov cmp xchg xchg jmp push lcall push test repz jns dec and stc (bad) stos xchg mov (bad) test adc push adc adc fidivr roll inc cli or ror iret pop (bad) test and pcmpeqb popa mov add bound fcmovb and cmp bound pop (bad) sub fldl ret xchg xchg xchg add sbb cmp rol jp clc jmp pop inc adc jmp out pushf jns daa rorb mov cld jge cs ret xor cld jbe xchg cmp fwait stc sbbb pop dec xchg inc imul mov and frstor or cmp test fsubs cmp pop jle or push cmpsb adc pop push add inc ss ret jl jl arpl cwtl jo or or pop jl push fcoml add fcomps and xchg scas push in mov cmp hlt (bad) out fildl jo ret fistpll insl xor dec push hlt cmp cltd inc in mov stc mov xlat insl test data16 cmp adc mov shrb cmp push adcl mov sbb mov repnz fisttp pop movsl xchg popa (bad) loope dec mov (bad) (bad) mov jns jp pop push and popf xor jl ror sbb pop pop xchg xchg test ljmp add push pop adc jae outsb lods mov lahf pop lea int3 mov ret fildll fsubrs fsubl dec push sub xor dec ljmp fs out push mov roll (bad) fdivrs pop pop rolb mov bound pop push push push movsb pop lea add jecxz and sbb xor mov loop daa sarb push arpl adc aam or leave and stc inc fisttp cmpsb movsb xor dec (bad) aaa xchg and push mov outsb jae icebp pop (bad) scas sbb loop ljmp pop enter arpl xlat cs xchg lods adc dec sbb push stc xlat mov cmp mov aas daa cltd daa pusha jecxz sbb (bad) les or sub lret inc push mov sbb (bad) mov cwtl jecxz stos or roll test lahf pushf movsb cltd dec lret es jle add aad in add and loopne xlat or pop push mov dec leave dec mov sbb cmp mov int lret sbb sub push data16 push in dec add mov xor cmp mov inc cmp dec stos loopne mov test mov jns dec imul fcom loopne mov jge stos aas dec lods inc add add sbb xchg mov and xor inc cli xorl sahf aad pop sub in xchg adc scas xchg imul gs insb repz mov pop arpl adc fdivrl lds int aad push iret fildll jp,pn jns,pn xor mov adc (bad) jo sub add sbb lods (bad) adc divb scas jb,pn xor jecxz mov jns out sub fisttpl adc xchg and or or add stos (bad) inc mov add add (bad) xor rclb stos iret roll inc mov dec data16 xchg icebp test add sub cmp lahf arpl lods dec mov (bad) (bad) lea clc push test daa aam ja dec pop cmp mov xchg sahf mov (bad) imul jae es add lcall pushf jae mov loop,pt imul and pop cmp lret or pop push inc lock jns cmp cmp jne dec test jno in fstl push pop jno std sub aas cmp test loopne stos sub adc xor inc lods jb dec mov cmp xchg aad jbe icebp popa test sub cmp arpl inc and arpl jmp mov fldt mov std cmc call xlat xor outsb stos cld sub call fstpt mov jb sub in cmp xor xor es enter mov adc jg outsl and cmp lcall adc mov xchg dec dec pop fnstsw or clc aaa shld sub or (bad) mov dec mov mov inc idivb xchg cmp pushf rolb push push xlat cmp enter testl (bad) cmc shll in inc pusha mov and pop and push je out pop test pushf mov sbb call jno lds subl xor aaa and jbe (bad) in (bad) or loopne cmp dec mov fwait popf push lds int stos imul call xor pushf sbb add in mov out jecxz xchg enter fstpl bnd int fldt out mov cli in (bad) in cmp lods adc fidivl loope mov jne adc sbb je jnp inc enter pop pop inc les test into add sub xchg or mov mov js rcll mov js repnz mov xlat pop pop cmpsb mov xchg dec sbb add lret mov push xchg xchg addb (bad) sbb outsl je push gs (bad) sbb imul mov adc in push mov popa push aaa jecxz sub je push sbb push push inc shrb xor incb ret jp xor cmpsl cmp push push xchg push xor data16 call mov fcmovu or xchg pop inc cmp dec push nop lods mov je out aaa enter mov fmull repnz or or les jbe and add xor jo xchg push out clc or inc stos xchg mov mov (bad) sbb jnp lods lret inc xchg xor mov fdiv hlt ljmp pop nop fcoms pop pop mov adc sbb xchg cmp mov das fisttp xor inc aam in xchg cltd (bad) and (bad) jb mov cmc dec repz xchg jnp cmpsb out gs int (bad) push leave cld fs lea push repnz dec xor jns sbb push popa or int3 xchg push sbb int3 pop add ret int3 (bad) mov xor xchg mov (bad) gs dec pop sarb push push (bad) mov movsb (bad) dec cmc popf ss lock lahf mov mov test out pop add mov mov jp fwait addr16 push push in jge fdivr push (bad) dec aas adc lret in rorl mov jo jbe or ret (bad) cs push (bad) jae pop addl inc jo mov jmp clc scas push xchg out (bad) jae fs mov icebp pop mov jge adc fcoms lds in push test (bad) shlb cmp fmul icebp push jo aaa sub jp pop aad dec sbb push push enter ffreep test push xchg jg dec (bad) repnz pop aad sbb out sbb jle inc mov out sbb fdivl (bad) mov sbb pop hlt daa xchg jle add dec xchg je xchg xor mov daa out sbb and xchg add and mov dec push call mov pop sarl mov sub nop pop inc or mov ss ret mov sahf fldenv pop ret sti outsb dec dec inc xchg inc (bad) sbb mov mov repz fnstsw insl ret ret dec cmp xchg addr16 notl or aad jmp hlt xchg (bad) not jne in rcll into negb repnz lock cmp repnz pop sub sub pop popa lea call and (bad) les gs or adc sub push sub xchg incb into sahf shll and inc into insl fs add pushf dec and lcall les out (bad) test mov scas test enter ss imul mov outsl hlt in sbb cwtl mov or pop mov cmpl and les sahf xchg loope adc lret and xchg ficomp jge xor incb cmp sahf jg out notl jbe in push mov fstps adc jno sub push pop and cs int or inc test loopne,pt pop sbb arpl sub jb inc insl mov sub ds ja cmp push xlat mov inc clc loop sti rorb mov push jne in sbbl jle dec outsl ja aaa sahf in xor into loop aaa test stos push and xlat mov xchg pop mov and jl mov imul shlb lret mov dec mov mov fwait es or sarb cld rcrl and pop pop mov (bad) push sbb mov mov xlat mov lods sbb pop adc adc xor pop sub xor enter mov ret data16 pop jecxz jge cmp rcll dec cld dec inc arpl mov pop or sub jmp sbb dec out cltd mov aas sbb es das ret jae dec sbb out scas sbb and in pushf lods push (bad) mov (bad) xor arpl lahf fimul cltd jnp mov pop dec inc mov xor xchg xchg mov and mov rep or and sub addb sub flds ja push in xor out jb enter imul or push stos and cmp pop adc std pop lds mov data16 ret xor fildl notb jo and xorl add sub xor mov sbb arpl in faddl mov inc mov xchg (bad) sti dec leave jae leave mov es mov xor data16 pop in xor cmp adc cmp addr16 ljmp xchg aad jnp sbb or imul mov fisubl push ja scas push out dec lahf adc call sbb inc dec into push jne xor rorl dec jmp stos hlt or (bad) test pop stc loop insl ret and idivl mov dec sbb bnd jmp xor push jmp cld xor jecxz mov adc in ja xchg ljmp or lret aaa mov mov lret js jno cmp push setns out pop pop adcl ret aam out inc jge scas pop mov mov insb out jae int inc shrl or cmp jg int3 inc gs sbb or mov test jne repz test xor popf jl cmp and push jp aam jns sarl lcall mov test fcmovne ffreep pop stos gs lcall mov cmpl test push adc lea add sbb mov inc jecxz fisubrl mov mov pop outsl sub lock xchg jl lret jae sti sub cmp xchg outsb jo cli pop mov js and lahf xchg sti arpl ds sahf inc mov mov push cmpl enter or and adc sub int3 mov bound sbbl inc push es mov cmc sbb jl js and adc mov sbb fdivs aaa dec push jl lods lods fwait jl pop mov push adc adc mov and (bad) negl iret test xchg xchg xchg jecxz adc movsb push xchg call subl movsl outsl sub ds shrl in jnp repnz push pushf mov and push xor add mov jo loop iret xlat mov sbbl xlat adc ljmp inc sub pop (bad) pop lods aas shll enter ds movl iret (bad) xchg mov mov jmp lahf rcr test sub (bad) (bad) cmc rclb lds and cmp divb fiaddl ja imul xlat es pop cmc lret cmp mov mov sub mov dec and mov or cli xor adc mov scas jge push popf js lahf hlt test lcall pop mov and lahf cmp inc xor pop sbb inc dec scas xchg out or inc lahf xor mov pop in dec xchg mov mov adc stc (bad) cmp lea aad jbe sarl jno aam mov and je add push jge sti call push daa scas jp popf dec sbb imul jbe jg stos pusha outsb and leave insl sbb orb dec outsl mov fmull cmp cmp ret push dec enter aas rclb dec mov xor xor inc dec push cmc insl scas sbb jge xchg out test call mov popa sbb dec pop ret int3 mov mov cld xchg frstor iret pop pop les mov sub push in movsb lahf add jae adc aad inc mov or adc movsb sahf jp fstps push xor insl mov push and ljmp pop fdivrl rorb add fwait es or ja rcrb loopne int3 jbe push call push clc (bad) call jbe lret popl nop mov pop mov pushaw push fwait push scas mov adc faddl bound jge je shl fidiv fstpl mov push xor sbb out xchg inc or test cmp add and add cli outsb jmp ljmpw test cltd pop cmpsl ljmp enter xor loop shrl dec outsb add (bad) cmp (bad) daa stc inc pop or xor cmp sti cmp fstpl insb xchg inc mov and insl add mov nop push cmp (bad) sub inc jo xchg imul ds xlat or or cmp inc dec inc icebp fs adc stos jecxz lods cmp inc dec aas dec addr16 imul pop jmp popf lods fucomip ja push sub mov rorb jnp xor jp mov mov xor jo push cli add cmp xchg mov mov fistpl cltd out adc sub daa pop cmpsb mov (bad) dec out push pop dec lock fnstcw ficoml fwait mov data16 or xchg cli (bad) adc cmp pop lds inc ret jle adc stos sub sbb test mov (bad) dec mov mov push sbb mov scas pop jno dec push mov dec cmpsb scas push outsb cmpl or inc pop out iret cmp xchg lods push push push roll push mov scas jmp stos cmp lock cmp lcall aad (bad) nop (bad) xlat mov lahf int3 (bad) mov inc dec inc lock test das jge out out mov xchg xchg add inc pop aas dec xlat es daa sub cmp fcmovb out xor mov push xchg pop pop mov outsl cmc in inc cmp (bad) fstps (bad) (bad) lock (bad) out lret orb fsubl jne (bad) je mov cmp pop pop push in (bad) out ja push and push xlat nop mov test xlat aas jl jmp cltd sti sub xlat popf mov arpl (bad) ljmp fstl imul repz pop adc (bad) int3 mov pop ss int3 es sub inc mov or mov repz dec xor mov cli pop pop fdivrp and push mov fcompl sub addr16 jl (bad) test movsb insl sbb sbb popa jle in ret insb test and shl inc lock pop insl sub sub es xor lock fs mov mov insl rorl stos jle mov test data16 outsl xor add push cld popa outsl mov or (bad) mov clc (bad) mov pushf sahf or dec ret jnp and pop into int3 hlt ljmp stc stos push pop pop test mov arpl rcrl insb mov lock ja es push cmpsb cli loope sub mov ret mov add bound push xchg xchg stos add lcall sub imul or sbb outsb push push jmp repnz or pop test xor fisubr mov jmp data16 pop inc in sub jo xchg out mov dec xchg sbb icebp aam adc jle adc jae xor mov dec pushf (bad) pop pop adc push dec dec xor push imul mov int test mov push cmc sbb bound pop nop shll inc mov add or and popf pop fmuls out iret pop pop aam xor out test push gs test fldcw inc addr16 fdivr lods mov sbb pop pop or sbb or cli mov dec into jecxz int3 xor pop (bad) push push (bad) and loop jne mov pop out mov ss mov or (bad) jmp inc xor cmp (bad) loope fwait sub pushf sahf or sbb in or ds mov push dec sbb inc xor xchg mov sahf out cmovl movsb jecxz jl cmp xlat and out jns aaa adc (bad) icebp idivb repnz jg or push adc out inc cmpl jne inc ucomiss lcall inc xchg xor ljmp push test xchg loopne mov lret sahf lcall sbb out in xchg sbb xlat ds add fmull xchg jno lds outsb xchg sub mov lods addl scas xchg mov mov mov jmp gs int imul ret enter dec aaa fisttpll dec syscall dec dec pop nop ret sub fsubrs (bad) xor mov push xor sahf pop xor out mov sbb mov les fiaddl pop cld cmp mov lret push dec mov outsl jl or cmp stc xchg pop gs icebp sbb (bad) cmp xchg stos cmp push lds push adc pop mov stc cld cmp fildll sub ljmp test mov int3 fcoml popf ret stos dec lret dec fxch ret int3 outsl inc xchg ret jmp in out pop xor jmp fdiv or mov mov stos cwtl ret sbb lock adc (bad) stos cli idivl adc ljmp mov pop xlat xchg xor jo fisubrl fwait inc and lret lock repnz pop mov and push push or dec pop xchg into mov or cmp scas aaa (bad) aad pop std mov mov add ss pop lret jno pop ss cmc inc pop pop mov ljmp mov iret sbb xor xlat inc addr16 fidivrl sti popl insl in and rcr add push dec icebp or test xchg adc data16 clc adc jnp movsb pushf (bad) xchg imul rol es mov gs or cmp loope jg jo loop pop out rolb rorb push scas (bad) popf adc push movsl fwait (bad) popf (bad) aam push in sbb addr16 cmc dec mov fcmovnb das je or jae push lret add (bad) (bad) push jge in mov adc lea in dec les adc cmpsl and push (bad) mov xor mov popf sahf jp pop (bad) mov pop inc sbb clc adc and jl mov clc in ss nop je cli movsl fnop push clc inc cs push test xor out push (bad) push cwtl push out jno pop rolb xchg bound notl out movsl push push outsb add ja mov adc sub cmp push mov insl lahf inc mov dec and or lahf mov add testb mov nop loope adc mov and lods pop imul jmp jge scas imul out cmp (bad) cmp jmp scas and add jmp cmp fdivs xlat dec push int mov (bad) fistp inc fistp xorl lret mov hlt inc pop sbb mov ret mul xchg mov addb scas out cmp jno cmp sub jle dec jge or das arpl mov mov cmp add push jo int3 enter ret dec or movsl adc or and jne cmp xor jecxz sub and adcl or dec inc sbb je (bad) test adc mov fsubl iret vmwrite (bad) xor mov inc ljmp lds push cmp mov pop jno cmp hlt mov sub push cmp xor jl mov std or push insb mov or xor pop sti pushf cmp (bad) jmp jg dec imull mov mov sbb ret cmpsl sbb adc fldl2e or mov add int dec mov xchg insl jbe xor and enter cmp movsb sbb mov mov cmpsb clc addr16 inc cmpsl cmp movb xor jne cld cmpsl push add in pop test pop sub inc cmp mov hlt jl and mov fisttpll mov lahf rcrb es call jbe lret sbb pop fnsave dec jmp xchg fwait pop pop cld js loop movsl mov adc push into ret jmp xor mov lods (bad) xor ja adc mov (bad) xor cmp scas scas xorl adc rcrl lods into or push sub pop outsb mov add dec idivl mov mov sbb mov or iret test repnz sub (bad) lods push adc mov dec lcall clc fcmovne fmull dec or je shll pop (bad) xor mov mov ds sub push pushf divl jecxz aaa or jne inc sub jecxz dec dec adc sbb push jl dec jg rcrb (bad) dec mov inc sub insl dec mov pop dec and and dec and or mov pop call frstor ja sub pop cmp pop sbb lea out out stos dec add fcomps sbb fldt and aam addr16 (bad) cltd pop cli lret mov sub pop fsubl leave bound mov sahf shl iret sub je pop mov in xor fdivrs call jb mov movsl hlt out sub adc movsl mov dec dec out call inc test pusha xor fisttpll cs divb test aas fmull loop sub or mov jb ljmp lods loopne mov std mov cmc shrb mov jnp sbb xchg push adc sar in pop inc dec pushf clc mov mov mov or lea xchg repz mov lds xchg gs int3 shrb or arpl outsl xor in dec push int3 nop jp add pop pop arpl push cli jbe xor or add and out mov daa add idivl xchg cld shll sub mov pop test dec fisttpl jae mov push sub xchg insl lcall jg mov lods lock divb sub stc mov test data16 push pop mov mov orb inc lret ret lds pop and stos adc pop pop cld and jmp cltd clc sahf cs outsl mov outsb lahf in sbbb inc ret jl setae cmp mov or xor mov pop orl push shrb adc mov insb sub dec mov int arpl sti mov repz pop jecxz jg adc jae mov mov mov xor jp fwait dec (bad) decb fwait icebp xchg adc rclb arpl leave or cltd imulb dec ret pop sti aas jmp imul xchg imul je or pop ret push arpl inc imul sub add mov pop (bad) mov fdivr dec cltd sbb in lret movsl jno mov dec roll inc cmpsl push mov ljmp lds inc push lcall push or xchg in es sbb push push jne shll jge jo stc addb mov loopne push movsl loope test idiv scas call cs dec inc bound inc adc adc or push std inc stc loope stos xchg stc cli xor sub pop aam or je in int3 nop mov jge mov imul lret outsl scas rcr popa pop mov push cmp mov and pop mov push rorl jecxz sbb outsl lea adc arpl jne pushf (bad) xor gs push pop cli mov sbb and mov dec fstpt jg jecxz fstpl imul test mov scas xchg mov insb or inc (bad) hlt inc and cmp lahf out cmpsl or aad mov int3 xchg fimull imul aad bswap mull fwait int3 testl sub into push mov adcl dec rolb mov push mov and repz xchg cmpb stc lahf jae xor push jo add or (bad) push test outsb lds xchg aam popf in in cltd dec hlt pop mov pop daa hlt and jecxz decl pop add push hlt stc clc mov fs cmpsb in mov (bad) jo push cmpsl dec cli iret ds adc scas in (bad) add adc mov fiaddl pop lcall imul jns jp mov mov mov outsl rcll clc mov call ss jbe fdivs mov subb mov sbb (bad) sarb xchg cmp test add pop jns mov mov iret scas fistpll add add int3 in inc jno je sub rclb push aaa out jge dec sahf and sub ljmp add movb adc xchg and shrl mov jne dec out imul add sbb movsb adc jno push cli push js sub stc (bad) push cmp es sbb push hlt das add jmp imul jmp aad sbb inc enter lahf popf mov xor sahf mov mov stos gs (bad) jl,pt int subl sbb cmp (bad) imul mov movsl fxch int3 stos cli xor pop movsb inc adc mov xchg nop or pushf add adc cmp pop jg scas add bound test xchg push jne push ja sub or mov add imul sub add fstpl addr16 cmp stos push and xchg idivl lds mov in and loop dec in pop mov sub aas aas iret mov and dec mov adc mov push jb xor shl stos inc xchg out jns xchg xchg rorb scas mov test stc fsubrl (bad) adc es js xchg cmp pop jo int dec pop aam mov jg cmp push pop xchg ljmp lret sbb jns out xchg loope inc icebp rolb mov and cmp push jns das inc loope sub xchg jmp aad add fmull xchg xchg or cltd push test xchg xchg dec lret cmp leave call hlt ret iret (bad) sti test lds das inc pop addr16 mov int3 pop push sub insl dec mov sbb aam fisubr sub pop push out cli cmc loop icebp pop cli mov clc movsb mov xchg addr16 xchg mov mov aaa mov pop cmpsb adc pop ljmp and test rcrl mov mov jle jp cs push mov fbld push wrmsr pop mov inc clc ficom sbbb in adc (bad) jmp in jl or adc mov sbb mov (bad) jl sarb call mov dec adc pusha les out into in push jmp mov cmpsb dec aad or js sbb lods fdiv push movsl lret imul sar leave mov aas adc adc lret rcl stc test cmpsb out push sbb std pop jmp jge shl jne push orl add xchg leave lahf pop es lret pushf jl dec js (bad) daa mov imul les pusha mov dec push adc push fwait cmc aam dec and scas push aas pop and jne adcl jmp xchg out lahf and sbb ror std mov cmp iret lea sub pop or aas js (bad) jl scas repz sarl test xchg sbb sub add inc negl jnp sbb pop dec mov mov aas cmc aam pop rorb add nop jne ss insl pusha jns push scas sbb outsl push sub push push orb jmp inc or data16 in adc repnz (bad) out inc mov mov push fwait sbb xchg (bad) fldl xchg sarb jmp add (bad) fisubl les scas outsl lds xor push jle jl push in push adc lods ret test mov stos loop push std pop lcall arpl jns inc lcall pop push xchg cmp pop adc scas lcall aad fwait jge stos lock movsb push cmp js iret (bad) insl dec addr16 cmp jne lock fs cmp lret dec out mov mov jg inc mov xor call mov mov insb push (bad) xchg pop pop mov xchg (bad) mov out sub jle mov or mov idivl nop fwait lea gs sbb stc lcall sti xchg ljmp jae push pop pop iret bound mov mov fstpt ljmp lock in lahf repnz mov sub popf xor xorl and scas out inc imul lods xor sub test sbb pushf or xor out cs mov pop faddl sub push bound cmpsl stos inc aad pop loopne rcrl loope dec adc push dec push mov out mov cmpsb mov mov and fidivr cmc push and jmp mov out mov xlat int3 sub loop pop ret inc (bad) jne xor gs popl mov mov inc sub inc sbb (bad) xor std ljmp cld lret and out push inc pop or icebp loopne dec cli push movsl rcll mov aas sbb mov push adc cltd test (bad) or jge (bad) sub (bad) incl scas loopne out sahf xor enter sub nop loope fwait mov andl shll and fidivr or mov pop cmp cmp les std sbb mov addr16 and adc popf xor jb mov (bad) lods (bad) inc or enter insl lods adc imulb shrl imul insb sbb sub and fcompl add sti icebp add push je js jmp gs adc push es aad loope xlat xlat jl fldt add repnz repz and push lods xchg and sbb jp pop xorl mov mov mov ss movsl sti call adc inc fmul lret mov jbe adc shll cmpb and sbb dec or int adc pop lret (bad) into xor xchg aaa ret and xor add or xchg into xchg mov mov (bad) adc dec pop jns out scas cmp es cmp scas dec aas fsubl xor dec push xchg jns jnp int3 lahf mov jbe push mov lds sar sbb jecxz jo dec add push add in insl sub jg fisubr test enter aaa fildl leave xchg mov add mov xchg cmp popf loop lea hlt push data16 xchg pop int mov lock lods (bad) adc jb cld in rcr fdivp popa test dec ss (bad) adc mov adc pushf adcl in lods push push add dec (bad) dec sbb mov (bad) jno pop cmp pop out cmp fsub push cmc push lahf adc and shlb mov ret adc sbb inc sbb inc mov ret stos pop repz cld rep or rcrb outsb jne rcr mov mov insl or mov rcl leave mov pop xor xchg (bad) lea (bad) sbb (bad) adc jg and outsb ja mov into add insl call cmpsl loop and cwtl xor enter pop xorl sarl push es mov or nop mov xchg in xchg fisub cmpsb cmp movsb xchg out scas inc sbb push mov test fiadd (bad) in lds shll out jl pop imul sarb adc push pop push loop loopne sub (bad) mov ds and inc push and out les sub cmp xchg repnz aad rsqrtps sbb xchg cli inc pop lcall mov aam adc int3 mov imull xor sub xchg lahf rol sub out bound mov aaa mov movsl movsl fwait and jge cmp stos or pop xchg xchg nop leave movsl or in mov dec jmp xchg test arpl pop xchg pusha cmp fs gs cmp ret lahf mov les sbb movsbl sbb cltd sbb xor arpl push or int fwait and or cmc inc out xchg xor xchg out pop fimul cmp std test je dec out lret cs and scas adc aam jmp xlat inc cmp add xor cmp imul clc sbb push push divb sahf inc loopne loope xor xlat enter cmpsl mov imul out mov fcompl push sub fs rorb push test aam sub repnz fldenv insl addr16 jle pop pop addr16 fidivr dec and pop xor dec sbb lods xor jae jne js pushf mov notb cmp into mov jge xchg mov push int3 hlt adc mov out adc fs mov dec fwait push inc and nop and push or std and arpl repnz popf jns mov mov popa imul inc pop insb repnz and arpl rorb push movsb dec (bad) repnz ljmp mov adc cmpsb addr16 in inc push data16 call je jg pop and push mov mov test pop sub insl push xor add inc cmp xor and or cs pop lcall ljmp sar push das mov in or out das push lahf cmp cli xchg lods (bad) mov test imul inc jmp movsb mov imulb enter mov adc std int3 xor (bad) mov icebp lcall (bad) lcall cs sub mov xchg dec jne xor mov add push mov add and in and data16 xchg addr16 add jg cwtl ds sub add push mov xchg lds and or mov rclb dec sbb in cmp pop cli jle xor mov shrb inc fbstp rorb mov bound cmp (bad) sarl xor cmpl dec fsubs cmp int and mov loope and outsb fwait (bad) je lods and xor push pop xor mov inc mov in fs test xchg fwait in or sub dec fsubr cmp out scas test rorl cmpsb or jae xchg jno pop adc mov jmp add add ret dec adc adc out (bad) mov or popa xor or or enter arpl sahf shl and pop sbb test cmc push pop outsb jle int test sub dec mov aad cmp mov mov cmp shrl jns xor out add aad cld push push pop repnz mov jae jo dec push xchg sbb int3 sbb jae out add sub push arpl push mov mov in sub fistp add cld outsl in fs jo imul lcall adc jp push negb loope les xchg and jp pop xchg inc sbb push sbbl cli cmpsb incl dec icebp inc mov mov adc fs in test adc pop imul stos leave ret xchg xchg int3 int jmp xor xchg mov push insl cwtl xor stc in lret jae or sahf sub test sub mov xor addl sahf mov cwtl jne xchg stos daa jg dec lcall notl or push lcall pop lods cmp sub xchg outsb (bad) loop xchg jnp gs addb or pop scas push (bad) rorb adc mov adc mov push push sbb popf int3 lret loope fistpl add and les pop in pop sub loope pushf mov sbb add sub lcall out cmp mov xchg loope (bad) jns loopne pop mov call out loope cli inc mov add inc pop out insl xchg dec mov xchg and inc lods or push cld stc adc pusha aam sub and dec dec cmc inc dec cli pop lods outsb std or mov icebp or (bad) iret cmp and out fsubrs sbb mov leave rcl sarl or es or cmpsb and mov push dec es mov pop lock outsb or mov rcrl dec sub dec mov aas in mov mov sbb in scas fidiv std sbb outsb dec popa test pop mov call sti inc es jge mov popa repnz test iret (bad) pop mov add dec mov pop (bad) mov pop jle cmp xchg notb enter into popa aas enter inc inc aas xor cmp mov pop sbbb loop sahf cmpsl push push lock lahf mov (bad) test sbb aam xchg or mov add ds inc call insb or ds ja je lret int3 jle movsl or fimul scas loopne mov mov cmc in lock jg pop jno pusha xor sbb daa test xchg cld ljmp xchg outsl mov mov loop mov lods stc xchg int scas mov arpl das shl jo lret in cltd push sbb sti (bad) in mov adc outsl xchg cmc daa popl dec push adcb stos mov inc bnd into stos clc clc pusha imul clc mov jge movsb insb roll mov add lock movsl cmp xchg test popf pop ret push repnz cmp jne mov in cmpb xlat mov sub dec out mov pop and icebp cltd dec xor dec xchg outsb sub aas hlt mov jg sbb out mov test or mov arpl out (bad) daa pop cmpsl gs cmc jb mov push fwait xchg repz mov inc xor mov ss sbb test mov out out mov lret in iret cmpsl icebp jbe test add rep adc mov divl sbb leave sahf pop andl inc in (bad) sub stos in cmp push stos icebp cmp mov sub push jb mov mov das push push mov sti leave sub movsb outsl cmp xchg mov sub pop adc dec xchg jo fwait rorb in jae aam dec push xor add out inc dec in xchg and jge cmp jb xchg insl out sahf (bad) fisttpll cmp cmp ja int data16 outsb iret xor or mov bound sarl push cltd jb add out lret sahf je aad sub pop mov test push push inc mov mov mov and mov aad outsw xor and outsl xor ret insl in (bad) mov mov rep shrl cmp cltd into daa fist lock add adc sbb push pop movsl push inc popf mov loope and das ficomp and (bad) sbb lods xor inc sbb movsb sub inc mov es dec out mov cld ds adc out lcall cmp rorb enter icebp dec shrb jbe sti push cmpsl cmp (bad) repz jbe push jmp (bad) lock xchg or add repnz pop adc push pop push aaa enter test pop cmp or pop es fistp movsb (bad) mov lods movsb cld inc (bad) insl pop mov cwtl loopne rcr aaa lock xchg and pop (bad) sti mov in es fwait out pushf js pop adc mov xchg sbb jne addr16 inc fdiv (bad) mov push sbb aam fwait sub testl xchg adc flds sub stos mov fwait std ds std in and push mov nop sbb pop mov ja fnop movsl in dec jbe movsl pop xlat pop or repz xor mov clc shr pusha sub mov outsb push shll ja cmp add dec sub inc dec push xor adc or and inc imul repnz sub cmpsl fcompl inc cwtl mov sbb xchg jmp pusha (bad) xor or pop addb (bad) jl clc push fwait loope in jge add cld cmp pop inc pop mov sbb fs pop pushl test stos mov or fs push mov jmp inc mov jae jecxz clc mov mov mov and fs ja out xorl cs rcrl adc repnz push cltd test mov test setbe jne insb adc scas xchg sub cmc sti je cmpsl mov popa into inc xchg jp mov cmp nop mov xchg mov xlat mov or mov mov xor xlat sbbl mov test fdivr vpackuswb mov vaddsubps ror jecxz push daa (bad) (bad) sub add mov fsubrl call lret xlat dec pop js lret xchg ror push in xchg xorl adc sbb add xor mov mov aad (bad) (bad) and inc dec xor xor jne lods loop stos hlt xor pop xchg ljmp xchg pushl fcoms lea jbe pop or jecxz (bad) std and outsb (bad) and lahf sbb xlat bound xchg pushf push sub jge ficom fsubl ds ljmp dec dec sub inc sbb sahf mov pop ret fldt or xchg loopne push add mov dec addr16 lock in mov push lea shrb (bad) rcrl xchg mov dec push popf enter pop or fmuls xchg mov xor mov es add xchg sbb inc gs xor les das sbb negb mov sbb in lods adc dec add push pop cli mov sarb neg jae lcall jbe or pop outsb pop repnz es mov xchg dec pop dec mov adc jl mov dec pop sbb ja les fcompl lds iret lret fs and arpl arpl jo aas cmp stos sub (bad) inc cmp dec js xchg add outsb mov (bad) pop jmp xchg scas dec jo out data16 repnz vmwrite sub xor sbb xor insb sbb pop mov push decl adcb dec jbe daa mov pop cmp sub (bad) jbe jo mov in es test or iret dec mov arpl xchg hlt jns cmp add fisttpll mov rcll fs stos test aaa les das lds pusha cld out push cmp bound pop stos pop dec fucompp enter mov (bad) xor pop movsl add push push mov push sbb lcall iretw (bad) mov shl out mov mov in jg (bad) push loope mov mov jp mov dec mov mov mov inc dec mov pop arpl dec jnp sub mov add xchg mov insb push xchg inc out js movsb or data16 rcrb in xorl test sub xchg cmp mov push and add js (bad) adc sbb (bad) jae jnp xor (bad) or push add sub pushf in ss lahf add fcoms mov test insb sbb aad add (bad) scas ss lret sbb pop dec xchg cli and mov cli pop or das sub mov pop daa enter dec pop pop jbe aam xchg lret xchg mov pop adc push sub cmp mov lahf and mov pushf mov sub (bad) mov xor xor sbb lods cmpsb lcall dec inc testb cmp or mov mov push mov sub cmc mov lahf stc out cmpsl xchg arpl mov les and mov sbb or (bad) sbb fmuls add jbe std in mov xor addr16 xchg adc and lea pop xchg fcompl push sub repnz ret fildl xchg inc push adc pop int3 or push lret (bad) sub mov insb xchg stos outsb pushf pushf mov add fistp jb push shlb mov jbe mov xlat test fsubl push stos mov or dec out addr16 je and mov xor jne jbe out jne mov je out dec in aas repz cld icebp xor mov push lock jnp jns pop arpl mov dec mov scas insl or push mov and push in sbb mov mov and pop (bad) push dec push out inc mov sbb out pop or sbb mov sbb lods xor stos xor mov fistl frstor or fsubs das pop cmp notb dec decl out adc pop out decb icebp arpl int scas jno outsb psubusb rolb shll subb les xchg clc jae repz shlb sub dec xor push out sub test sub stos and jge adc scas xchg fsubrl clc sub cmpsl jnp sbb mov xchg sbbl bound push adc push insl pop pop cmp stos mov dec cli loope es loope pop add jmp inc cmpsb mov stos dec mov ret and add lea out dec out cli jno xchg mov lea and and jbe hlt (bad) jbe pop jecxz sahf outsl out jae mov cmpsl jne mov in (bad) mov leave pop lcall mov dec mov nop cmpsb push cmp je add shll dec adc mov iret lock jns scas aas into loop int3 mov lock movb loopne xchg xor in pop sub fdivs test add in int3 mov xchg jns pop clc pop popf rcrl sub lods jno pop sbb mov cs xlat shrb test jns ret and lahf int3 stos inc cmp xchg loope scas mov in xchg sbb push loop adc clc push xor adc xchg clc add push pop fwait push (bad) cmp sarb inc repz stos mov stc aad lcall lods add stos pusha mov xchg push push adc leave xor inc enter mov add adc sbb insb inc inc gs mov push jno ret add mov aam loop push or adc pop pop pop test mov inc cmp repnz sbb lret cs sub fiaddl ficom push jge test cmp sub adc sbbb mov fcmovnb jo pushl cmpsl or push pop xor frstor (bad) ror notb lods fs out cwtl add (bad) sub movsb loop lods pop sub sbb mov lret jns fs mov out inc daa cs pushf sbb sbb dec (bad) or scas xor loope mov push xor in jl sub xchg mov leave and mov leave mov cmp cmpb mov and push mov bts frstpm(287 push dec mov mov pop lods mov adc inc mov and test bound movsl jnp decl push repz fildll into andl pusha xor add mov jge jge outsl jecxz lods (bad) sbb lods shlb inc adc loop add jle jg mov outsl inc xchg sub hlt cmc out test jecxz jg hlt xor mov cmp xlat pushf ret push movsb adc ljmp pop jae nop push mov or ret data16 (bad) pop mov lahf sub push fs jb ret mov (bad) negb mov pop (bad) mov add mov mov jl adc jnp jle xor mov mov imul adc mov dec sub lahf lret sub inc lret sbb outsl ja imul arpl popf ret ret jns jl adc add jae push in sahf or jp out mov out jmp xchg test insl repz inc xor xchg mov ljmp (bad) (bad) mov mov pop mov xchg es dec add outsb outsb mov stos cld iret pusha and push and bound inc mov out cmpsb (bad) jecxz test clc cmp or push mov rcrl int3 pop sbb inc movsl pop leave outsb mov push mov jp popf xchg inc xor push xor pop sbb push mov test int sub sbb and sbb push fistpll xor jl (bad) sbb push inc into sub jae xor int xorb or mov jl imul popa pop inc movsb jb movsb push mov test or cs nop pop fdivrl lea add cmpsl xchg stc stos imul pop rcrl (bad) pop loope xchg popa mov ss dec fs das imul jo sbb (bad) ret xchg adc popa jo cmp push daa push insl aam xchg add cli mov mov (bad) mov in notb or push pop out sti jae push pop (bad) push pop push ret and sbb pop inc cmp movsb ficoml mov jmp std lock xor test xor leave sbb xchg push jecxz imul mov call fistpll popl inc gs cmp lock jb sub pop popa stc mov fs movsl repnz jle arpl aad aaa rcr fwait sbb stos lods out mov cmp jp arpl je dec sbb fisttpll sbb lods mov xor jo sbb sti (bad) mov aad xor out add notb repz aaa adc jo dec mov inc jg sub call iret add sbb xor aam or mov ret das sub jb jnp mov mov hlt jge mov mov add mov push jbe xor out int3 dec pop push mov insl (bad) jae mov sbb inc add xor into in xchg js sub stc jno shlb add mov sub xlat inc incl sub jmp das lods das xchg and icebp mov mov or mov inc shrl andl lock rorb (bad) ja add test mov push (bad) ja clc cltd mov adc (bad) fimull adc pop arpl fs call stos lret mov jl xor cmp dec sbb lock gs in cmp pshufw mov mov clc mov xor mov lods in loope lock cmp push shlb sub mov testl mov lods lret cwtl dec adc inc inc movsb orl iret loop iret add jae fbstp leave inc (bad) mov pop dec pop xor call imul add lds inc pop sbb mov jg out and adc mov shlb lret negb (bad) pop cmpsb pop (bad) jge,pn inc pop and xor mov xchg (bad) pop shll pop in push sub mov loope inc rorl mov data16 xor dec push pushf leave (bad) push (bad) add int xlat jns cmp out jb adc maxps mov xor enter push push jmp and gs idiv pop jmp mov popf xor mov ja push icebp cmp xchg les fsubl test add lret pop mov dec scas in jmp sub cmpsb (bad) push or inc mov repz dec xor jns mov (bad) icebp jns mov nop dec inc jae inc cld adc mov cmpsl (bad) subl mov mov pop jmp fmuls push les sbb mov out cld mov lret icebp loope cmp add ljmp sub mov jg clc jnp cli rol mov fldenv pop in or push cltd sahf je mov inc jne movsb pop add mov push push mov fwait sti mov sbb jne (bad) sbb pop aad or mov fdivrs out push xchg call js notb cmc xor (bad) sti aam xlat jo pop cli imul iret mov cmp ret mov mov cld fldl icebp arpl gs fsubl test fucomip out xor gs ja mov xor cld push sub scas dec mov pop sbb mov xchg icebp jae pop stos fsubrs in movsl and gs inc adc js push cltd sub push ds into and sbb leave (bad) out xchg xor mov dec push xchg popa mov xlat addr16 cld jns imulb mov mov int3 inc dec mov out aad shll dec dec call imull pop adc icebp add lret push and aam push mov or or ja and add stc xor dec nop or fsub sub int3 popa inc dec mov loop mov lret add arpl enter adc cli dec push lock inc fisubl nop aad cmp mov clc adc dec aad ret in test xchg loopne ret and into outsl mov cmp sbb fstl xlat jecxz xchg dec sti cmp mov sub add xchg idivb pop fdivs fdivrl loopne mov sarl pop test std cltd js push inc pop lret adc ror outsl adc mov jae repz and outsl mulb xor dec js adc xchg push aam mov sub std dec xchg cli pop jmp mov (bad) pop aam sbb xchg xchg rcr or int3 cmp out les movsb cmp jo aam push or addr16 push movsb out push ja loopne mov movsb xlat adc inc aas dec or scas cli ficoml es jnp inc stos cmp je (bad) cltd insb faddl adc sbb cwtl ss je add loopne,pt lock loope add jo jns aaa and dec dec sbb xor sti add fdivl roll jo movsl xchg in (bad) loop aaa enter fsubrp rorl fdivrl sbb adc cmovne mov cmpsl das cli std xchg xor icebp sbb dec je jmp or or shrl and and pop out (bad) fnop mov xchg lods sub dec fs or stos jae insb xchg out lret arpl stos cmpsl mov int3 loope out (bad) jle inc in dec hlt fsubrp inc (bad) (bad) lods mov xchg mov xchg adc xchg dec cwtl jb sbb dec sub std adc loop and stc inc arpl push and add ss stos jmp lret insb pop (bad) int out addl lret je out jg inc shlb test imulb mov js sub or arpl xchg stos inc xchg push (bad) les jmp cmpsl sbb lcall scas ds sbb ret nop imul mov and dec xlat lret (bad) xchg lcall cmp push dec adc lock lahf inc test icebp cmp mov data16 loope movsl mov push add sub cs stc clc mov leave es mov sub daa (bad) push push es cmc mov test data16 test arpl mov cmp inc xchg push in inc xorl int inc dec lcall mov out cmp aaa ja les add mov cmp hlt aad int3 pop adc adc inc xchg fidivrl pop cs imul js shl ds add sbb and inc (bad) mov bound data16 arpl push ja lds xchg lahf cmp mov loope sahf mov cli in and cs (bad) adc iret mov scas hlt (bad) aam sub lds pushl addr16 adc cmp (bad) loope inc lock xchg cli mov loop sbb inc push xor ret and pop xlat jecxz mov ss cmp sbb std ret pop cwtl jle inc fadds fisttpll ljmp adc mov sbb inc inc bound push lahf and cmp int3 jns repnz fcoml fsubp cwtl hlt mov add in ja ss mov hlt xor cmp jae repnz cmc mov cwtl push mov mov lahf insb mov xchg call imul test fisubrl clc and and aaa cmpsb xor add pop jp rcll xor inc sub enter sbb fsubl repz xor push dec adcl cmc out das sti mov adc dec lahf or or sbb push push (bad) sbb lods aam (bad) mov mov out pop imul mov or rcrb push dec test loop sbb notb inc fstps lret lds int3 test mov aaa fbstp test adc loope cmp loop aaa sbb mul test (bad) jge sti movsb jne push xchg jno pusha pop lds mov dec ret mov jle jnp (bad) in mov js movsb mov jo ret jb movb adcb insl mov data16 in xchg cmp test jbe push push fistpl or lock leave sbb cmp test icebp xchg or cld lret cltd push xor and in mov sub adcl ss jle into mov sub sub mov push enter in sub std stos push aas jle mov fs loop (bad) mov push push pushf xchg sbb test leave repz push mov cs test or xchg cwtl imul sbb in mov lods mov dec cmp mov (bad) sbb push or cmpsw flds mov add or mov jmp and jo,pt xlat dec mov lret xlat lock lea test jae repz fnsave lods mov inc inc mov or cmp mov xchg addl add adc mov in inc stos ret xlat push jp repnz rcll out add shr jae adc inc cmp scas popl push es aad push daa mov mov movsb aas sub xlat push mov imul jle cli xor or xchg test lods test cmp xor call subl out jb cltd push cmp fsubs cmp in adc mov adc je pop jne mov or jmp push fidivl call lods ds fwait push push ss add std jmp movhps adc aas jbe inc gs lret inc fs les adc sbb jp ror cmc loopne jne cmp bound push loop xchg sarl dec pop pop add cmp add or psubsw aas (bad) cmp adc inc push xchg push xchg or add cs inc sub xchg add mov insb lahf mov test in lds and push cmpsl mov and xchg mov jno cmp xor cmpsl cs cltd xor cmc fistpl mov dec (bad) lock sbb mov cltd js dec inc ja dec int3 jle cmp inc fistp and pop je push cli pop add (bad) loopne ss pop mov cli sub mov jl in cmp xor mov mov fsubl cmp stos dec movsl inc push arpl xor push mov mov mov arpl xor bound rorl sub mov scas mov pop pop subb inc (bad) in add mov or unpckhps push icebp les lret aam repz rclb lahf mull mov sub jmp adc and popa xor mov fdivr sub and std test xlat test mov call add das lret rorl sbb lahf scas mov jmp inc pop push inc incl das ficompl inc xchg cmp int hlt out push xor popa outsb pop push popa hlt cs jmp fldt ret add pop mov outsl jae push push xchg pop adc jns cwtl loope out bnd addr16 xor fsts pop pop enter mov push insb bound ret popa out pop mov push fadds or xchg fwait lret dec rolb idiv push or jne pushf xor pop adc inc xchg xor test mov mov scas fistp mov ljmp sbb into sarb (bad) stc lret xchg and ret mov in sarb les lret cmc cli push lock cmp aam pusha jge sbb inc repz push adc sub rorl lret fs lock xchg push mov in adc mov ss fnstsw lods movsb out and out out mov sahf adc mov push lret cmp dec cmp repnz cltd inc dec cmp sbb sti sbb inc ljmp decb sbb mov dec adc daa mov mov (bad) xor in aad adc ret mov repz pushf (bad) mov imul jo adc lds pusha hlt push fcomip adc imul sub xchg cmp clc and popa sbb leave sbb pop xchg mov mov push inc out test xchg aaa lock cmp dec xor pop sub jg,pn ret adcl hlt xchg ss sub scas int3 mov int3 xchg fldl add adc es dec inc pusha inc stc push scas mov mov add popf pop push out adc dec xor cld push mov shr jl or mov sbb adcl mov xor sbb pop aam std icebp cmp xchg aas das stos lock mov inc jp cmp clc loopne enter enter cmp mov iret jne lea bound jne pop in cmp mov push rorb ljmp fstp ds jbe shrl shr xlat pop inc mov (bad) int3 jb ss aas sbb jae femms icebp jl xchg xor les outsb adc imul jo mov adc fdivs and data16 add and xchg movsb or test jno imul inc andb leave fbstp xchg stos push jle rorl mov push jecxz inc roll adc (bad) pushf aam in fst adc jp int3 mov cmp insb cli and ret cmp shlb movsl inc fstpt mov and push aaa ds mov cmc roll rolb mov push xchg mov lods sti cmp loope lahf cld mov xchg insl and mov dec ret xchg xchg or fstl in mov xor xchg jns lcall aad out adc mov lods aad into add inc ljmp mov in mov xchg mov push js dec scas jge inc xchg push mov xor test fisub dec mov mov jne mov (bad) hlt divb xchg test adc adc ss lcall pop jns mov pusha cmp or std scas push cld sbb ficomp push pop int cltd jno ret adc insb (bad) int3 mov adc mov mov dec adc push push enter call jl rorl pop adc clc lcall shr cmp ret out mov test inc push dec stos fwait or mov in mov mov ljmp movsl (bad) mov mov das ljmp mov insl mov mov sub lcall fstp mov ds outsl roll mov mov fiadd outsb jns mov sbb (bad) push andb cli movsb mov ret mov ficompl subl lcall arpl and xchg cs inc xlat sbb and das dec xchg jl pop out mov push dec test adc arpl lret mov dec (bad) fidivr xchg mov das je inc bound mov xlat or aad daa outsl and mov fistpl dec nop orl ljmp adc repnz and clc notb xchg cmp call xchg imul xor add xchg cmp xor cmp dec fistpl jnp out (bad) xor out ja mov xor dec dec fwait and test push sbb gs test mov add mov jo dec cwtl xchg pop (bad) popa or or adc xlat lods fnstenv mov cmp cs cmp fldl jnp call test mov push jge in push pusha ret pop loopne mov rcr (bad) xor faddl leave adc in ljmp ja insl leave jp lock (bad) jle dec jle pop std adc (bad) fcmovu movsl rcrb (bad) int xchg xor sbb das push or addl dec outsl sbb mov and call jno leave cmc scas pop cwtl cmp dec or fildll ljmp and (bad) scas aad sub (bad) sub and aaa (bad) ret add adc jo out cmp pop aad pop mov inc push cld fdivrl and push dec ret push sub push xchg add or aam sti cmp sub inc ss jnp add adc pop mov cmpsb mov adc adc test lods enterw sub adcl xchg or xor mov loope aad jge mov sbb push loopne or and xchg ror push mov cmpsb insl jbe mov emms bound orb insb daa adc mov mov pop mov insl repz nop notl add aaa (bad) sub pop xchg adc inc mov or push jnp sti add sbb cmpsb adc fucomip outsb cmpsb dec or ja aad in das test lea sub or or je xlat test pop loop sub enter stos ss sub sub pusha dec mov inc (bad) (bad) jb mov push mov cs add mov dec fwait mov movsl out ljmp rolb (bad) ja js mov fsubs mov cs repz adc not cwtl lods mov movsb pushf pop add mov pop adc cmp ja dec lahf into mov leave movsl pop cwtl fimull insl lods je leave sbb stos outsb sub sub std adc sbb xchg sub idivb cli push sub (bad) jg jmp push cmp pop mov ljmp xchg mov sbb mov inc out xchg rolb cmp hlt xor cwtl arpl lret jmp sub push stc push jmp rclb xchg pop movb push adc lds jae fsubrl cmp xchg fisubl cmc push or pushf pusha and mov xchg inc test sub sub (bad) sub adc fadds add lahf cwtl scas pop je (bad) in inc push fadd mov enter out push (bad) xchg std leave xchg inc inc adc ret fs (bad) xchg mov xor push in add popa push adc (bad) dec jle stos pushf push add push out shrb mov inc fs adc (bad) ss push push xor std and insl adc clc mov aas dec pusha sahf mov mov cmp jns inc pop andb negb mov loopne add imul inc ss jle xor fmul int3 jnp push adc push test lods scas dec cmp lods jne int jno fildll enter cmc movsb ljmp dec push rclb sbb vshufps call ljmp and push jmp mov push jne push add push cltd cmp pop addr16 scas sub in dec and test call aad push add mov test cld lock mov cmc cmp loope scas inc xchg insb push cmpsl enter add cld inc fsubl jns iret mov (bad) dec and popa mov std xorl scas daa (bad) fldl rcl in sahf icebp out pop clc cmp jp in insb lds mov cmpsl dec sbb sarl popa push int aam mov xor inc push jecxz jecxz inc shlb jnp mov sti jmp xchg clc scas mov in popf out inc xor imul dec je pop push or push mov (bad) mov inc (bad) int3 pop or push pop outsl jmp sub mov or hlt rcll (bad) mov pop iret mov mov pop rclb add and xchg inc enter test jg mov lret (bad) adc jg inc es mov imul sbb cmpsl mov (bad) iret scas push or xchg call xchg inc pop xchg cltd sbb pop test fisubrl cmp dec jmp jge mov loope mov fnop cmp push and rolb fwait dec mov mov sub mov ss fistpll xor or push orb and push inc pop inc mulps cmp cs mov xchg sbb andl mov inc les in std cmp or ja mov pop pop dec dec xor add (bad) or mov adc popf lea rcr dec push loope push jns push pop lret cmp add inc mov ret std nop insl movsl pop cmp fistp pusha dec sub dec jmp add mov ss push or xchg mov test inc insl pop out mov ror cmp lahf sub mov sub cmp adcb rcrl movsb xor js xchg mov dec fadd pop fisttpll fwait inc adc and or cli push lds pop dec mov adc lods sub (bad) sbb push out out (bad) les sub sub jge leave push mov jb mov cmp out and repz cli mov lods mov dec dec orl mov xchg or js repnz sub xor fadds and cmp mov sbb cmp int pop pop repz nop mov xor cwtl and push (bad) dec lods inc xchg (bad) jae jecxz les lahf dec jge push inc push mov (bad) dec inc push xchg push push or add pop cmc sbb cltd push add mov subl dec arpl push or xchg sbb lock xchg fmull xor (bad) pop clc push mov sbb in loopne mov movzwl dec mov rcrl stc inc pop cmp inc test daa inc mov mov adc outsb test repz add or js imul mov xchg adcl dec data16 movsl notb je add cwtl das iret cmp mov jge mov or fldenv rorb jne outsb fisub imul int3 repnz pop (bad) push push lea mov in imul xchg or pop fucomi inc roll stos aas (bad) cwtl or fst sub test inc dec ret insl fisubrl mov mov adc sbb repnz xchg mov cmp outsb xor xor dec insb jmp ret xor loopne pop outsl (bad) addb pop pop xchg push (bad) lret jae xchg mov div cmp cld rorb inc leave fstpt arpl (bad) in loopne sub or inc mov adc movsb and iret xchg fsubrs lods lret add push out mov mov repz mov xor mov out xor xlat adc jbe adc test imulb cmpsl test test aaa push int insb fistl outsb or xor jp (bad) call (bad) loope adc lods cmp and dec repz push push lods sbb (bad) jnp add test int3 lods enter mov int3 dec xchg mov into jp cltd push dec (bad) mov stos mov ret lret and lods mov dec pop (bad) or mov stos mov mov xchg adc test scas loope clc mov jae push adc add sbb mov push inc sbb repnz xchg scas or jnp (bad) aad int3 adc lcall outsl push cli adc jge mov fmull xor fstl lret inc push mov mov daa adc xor das sbb push cmp mov cmp and and push sub icebp fldt (bad) mov xor xchg mov lret in xchg pop sahf and pop jb sub mov leave xchg dec lods in add into fldl aam add xor decl out push mov mov and mov fisubrl out mov mov xchg ret xchg imul aam lock ret (bad) xchg call xor mov and pop hlt test cmp sub xchg cmp pop cmpsb pop sub mov and (bad) push imul (bad) nop xor out mov push frstor mov outsl (bad) incl je stos jmp xchg mov or pop jecxz and cmp mov ret ficompl aaa movsb sahf adc cmp scas push fsubrs mov xor mov (bad) sbb adc mov in iret hlt push xor insl sbb dec and inc aad (bad) mov add aad cld std mov pop push or enter add push (bad) mov cmc sub lock push lods ds cwtl test cmp imul sub popa nop xchg inc xor push repnz add push mov jne (bad) aam fnstcw cmpsb js (bad) mov push sub jle ljmp sub minps (bad) notb jb xor cmp mov out lds cli add mov push dec lods repnz cmp subb mov add xchg daa dec orl (bad) bound xor rcl ja lea ficomp test xchg and mov fadd add pusha xchg fwait cmp (bad) dec cmp repz scas ljmp outsl je or push mov lahf mov loopne outsb sbb cltd aam out cmp in cmp std mov jns outsl mov mov or adc xchg ret rorb pop lahf lret sbb mov jo int3 lods mov sub jg or fidivrl lods dec lods mov jno xor mov cmp bound les test mov loop adc mov push ljmp and jmp push shll sahf fstpl mov push (bad) sbb inc push ljmp xchg subb mov scas and dec lock mov cmp inc cmp test in jae mov leave lahf out iret inc jae stos adc inc pusha or mov cli je mov mov (bad) mov daa clc mov shr imul xchg sbb pop popa cmp push int jno inc pop imul ret push push push fiaddl rcl push aaa sbb int sbb dec (bad) mov fild xor in push xor popa (bad) jmp ja xchg mov or add insl stos rol mov pop mov and (bad) xchg mov rclb xor ljmp js rcrl xchg (bad) repnz xchg int push in add dec js or inc sbb jp icebp sbb ljmp lds in jmp mov push movsb pop xor dec dec hlt jns jnp xchg dec stos cmp (bad) fcomp int call fidivrl js pop sbb out rorl add mov cmc pop and fwait data16 es jnp cli stos iret inc xchg fsubrl sub repz enter xor cmp pop aam dec imul movsl hlt fisttpl test test mov lds or int sub add pop cmc fisttpl push push jnp test mov xchg jecxz out pop je imul lea and cvtdq2ps cmpsl test into dec add xcrypt-ctr cmpsl sbb (bad) mov mov dec push (bad) mov insb hlt mov mov jmp fisubl mov cmpsl and fwait sbb (bad) test inc dec int (bad) lret dec push shrl sub sarl arpl mov or sbb or jo pushf mov in (bad) inc icebp sbb divb (bad) popl sub sbb fcomps (bad) lahf lret call cmp movsb rcll in popa jle or push test mov imul mov rcrb jle popa test push fst cmp repz mov std xor cmpsl push push cmp lds jno das imul enter xchg loope ja mov (bad) (bad) push iret test es push test pop mov sbb or test jne lret in movsl insl mov push call mov xor adc stc addr16 mov add dec inc jg loopne (bad) jo push mov ja js sub inc push adc jne ret incl cmpsb push popf push and int3 fsubrl fstl sahf das (bad) sti lcall mov (bad) xor cmpsb jne scas sbb adc fisubl sub lods cmpsl sub xchg aad and adc pop cmp cmp mov lods and mov pushf fisub mov ds in insl xor jp rorl xchg dec inc outsl out pop loop pusha xchg fisubr cmc push nop jg inc test pusha loopne cmp ud1 pusha mov mov insl fsubr and xchg and lock push fwait sahf sarl mov out test xor sbb jmp cmc sub out mov inc int lahf pop inc mov ret mov xlat insl insb mov cwtl gs xor aam mov (bad) cmc inc (bad) loop arpl lahf add aas mov pop dec mov shrb insl adc adc adc mov xlat or xchg fst mov mov mov (bad) jnp inc ja out aaa add js xchg dec push adc std jmp daa pop int in mov mov mov call in arpl jno popl in mov cmp pop in jle pop fmul je ds ret std sbb clc mov setp adc ja hlt adc pop and in out jmp push xchg inc pop dec cld lods jb popfw rcl add (bad) loopne sub test sub and into int pop out xor out xor xchg mov or add pop adc out jns push mov sbb jmp outsl mov mov cltd jecxz inc push push aas mov (bad) xchg cmpsl lock idivb xor rcrb xchg inc push mov (bad) fbstp pushf cmp stos test mov or mov add xchg pop stc add mov xchg stos out mov arpl mov insb push add adc ja cltd sbb adc lea sub ficom dec fsubl lock add in fdivl out jne dec adc out adc add fisttpll jnp pop jecxz out adc cmp sbb jmp push outsb pop mov insl insl sbb stos int repnz dec inc nop mov and cmp push dec cmpsl pop jno mov data16 dec rorb popa (bad) rcll movhlps adc das mov jns xor pop xor fistpl and idivl aas stos int3 dec jb int add testl mov cmp push jge push aaa sbb pop add in in add popf xchg push xor aam jae mov cld scas jno,pt insl addr16 aas or scas call aam mov jecxz int inc inc pusha push sbb dec lea in aaa outsl inc push pop imul push bound loopne popa cmpsl movsl jae sarb mov adc icebp mov pushf push negb pop cld pop cltd dec inc push cs mov data16 test les lcall adc and ficompl sbb pop xor imul jl ret xor lcall mov cli std sarb ja and or outsb add push push cmp or inc je aad repnz push cltd ret outsl mov inc add sub mov call and inc jge inc cmp lret sub jmp scas cmpsl cltd add push xchg (bad) aam mov sub mov pop mov stos (bad) push (bad) adc and cmpsl and addl add push dec push xchg lret sbb rcrl add shrl xchg sbb out pop (bad) jmp jno xor fcomps pop sub mov push mov mov pop movsl add mov mov push sub ds (bad) and xor pushf sbb popa ja mov push pop test dec sahf sub jno aas or xchg movsl imul cltd lock mov sahf notb or jo xor and (bad) shrb mov cmc pusha xor mov adc push ret loope xchg loopne dec xchg sbb lods orl adc loopne (bad) and (bad) and inc (bad) rcrl lret xchg dec scas jmp and pop push sbb mov ret mov das stos mov lds ret inc pop subl ror push push add test fwait es adc cmp sbb cld xchg fdivs rclb cmp mov adc fucomp adc sub sub add fs mov push arpl dec cmp out stos mov push xor dec xor pop test push fisttp out cwtl dec jl test int jno xor dec xor es dec push cltd cwtl pushf xlat mov inc mov adc or jns js cmpsl xor pusha push in inc nop add xchg aaa jb inc mov mov jo adc loop jae adc imull std inc pushf xchg out and xlat in add lods sbb or stos xchg sbb jecxz fs jbe ret cmpsl scas sahf pop xor test (bad) fidivrl (bad) mov sbb std sbb mov inc push scas mov dec stos loop addr16 or adc adc mov lds addr16 aaa (bad) lods jl and mov pop inc test add cwtl mov psrlq xorl xor inc iret mov dec adc stc movb sbb fnstcw lret adc xchg xor test mov xor movsl out dec in (bad) cmc push cmp (bad) rclb hlt ds xor inc push sub xor push add loope outsl es xchg jne je or in jg loopne lea inc lret xor aas xor lods and jns int3 stc (bad) push add xchg sbb and mov or daa xchg pop shl mov jecxz repz repnz pop (bad) fld pusha or clc (bad) xchg enter and pop shrb dec inc push jnp pusha adc fsts jle pop jmp xor jnp jge jnp mov push pop scas mov test mov iret xor orb out pop mov push and mov mov test or fst xchg pushf push pushf push and adc dec lds dec sti test cmpsl xchg jno,pt stos xchg insl pop repz mov jmp sub cmp test std pop fnsave dec dec jmp repnz push int3 mov das call mov (bad) pushf aaa dec jbe add xchg add idiv ficoml sbb sahf adc cmc fcomi (bad) test les adc sub mov nop sbb out ss rcl xchg jl movsl push dec jp dec push dec xchg or jne and js mov loopne or fistpll jnp mov mov cmpsb xor nop aad mov dec shlb cmp addr16 stos mov inc or or mov lret xor lds sub ret inc sub xlat add mov fistpll push xchg cmpsb lcall test les loope repz hlt test das fsubrs xchg pushf out (bad) (bad) mov xchg cmp inc insl push insl ror jl in mov andb dec leave xchg xor (bad) clc in xor mov push or subl push ret cmc cmp and incl sbb in cmp and sarl insl sbb ret fistp ficomp or (bad) sbb push dec hlt xchg ljmp inc jcxz dec or shll xchg les mov (bad) adc inc sub jg fucomip mov sub xchg cmp mov sub test out insl mov jno jae imul mov pop std xchg or in lods mov push out ret leave imul mov cli sahf out push xlat pop cs and dec lods sahf mov xchg pop bound sbb dec (bad) out scas jne cltd dec and push gs inc fldt pusha or lcall jecxz jle push xchg (bad) scas dec int3 mov mov cmp xor cmpsl jno mov ja jne push test int3 js pop or dec ds push es aaa push repnz xchg mov sub xor insl cmp loop dec mov jb inc jp jle mull xlat push or jecxz jne iret pop stos cmp jle inc xchg insl ds add jae mov jmp faddl movsl add fmull sub pusha mov repz sbb jecxz fldt adc jbe lcall stos lock xor xchg or pusha xor outsl jb sub xor add push xor xchg inc ljmp and scas leave push push pop (bad) (bad) mov fcompp push and bound call std (bad) fimull xlat aam push fdivl and dec jp (bad) dec mov and cmpsl sbb push aam lea xchg lods inc in ret stc ljmp jns mov rcrl aaa fsubr inc mov test inc mov iret rcl out sub add mov xchg in call xchg test inc outsb mov lret or jnp shrb push adc push mov mov mov mov test dec std cmp xchg pop pop ret lock arpl adc adc (bad) popf jg lods cmp mov mov adc scas xor iret in notl mov jno mov sub cmp push push pop std lea mov jno and addr16 xor hlt into fdivl lret pusha or sahf mov int3 pop add xor adc fdivl scas ret sbb in add in das push or sub rclb dec (bad) repnz sbb and mov pop inc lock dec sahf push pop cwtl mov fwait loopne repnz push inc out sub rcll jmp pop cli stos or (bad) pusha int3 stos mov jmp repnz inc je jecxz push mov pusha mov xor jno mov loopne mov mov jmp push stc jnp push iret mov test arpl mov dec (bad) xorb popa fnstsw mov xlat outsb add mov adc aam jle jmp xor xchg jno rcll jp addl lret xchg sub sbb out aaa xchg leave mov mov or mov push xchg lea insb fimull xchg outsb popa pop test or test add jo add mov ja add add mov pop cs daa mov push lds (bad) rcr rorb repz sbb mov add cltd xchg (bad) jbe inc mov call and push xchg jg in outsl cwtl and or mov fistpl cmc movsb out pop out popa adc sbb push xchg or mov imull and cli jge mov xor cltd lea dec flds sub ficomp mov xlat movsl pop push (bad) mov out (bad) fwait pop jne push push jecxz inc fdivrl out inc push inc shll and mov test insb movsl mov movsb xor ljmp je popa loope xor imul mov icebp nop dec jecxz pop xor (bad) punpcklwd mov or push and sub out cmp jecxz cmp sbb dec xchg stos (bad) je lahf in lds cld fidivl call push pop adcl std sub fs mov pop push lods (bad) in gs xchg sti dec fcoms push sub dec pop shr fcmove inc ret sti sbb mov push or pop lret or (bad) xor mov es cmc popa jae add lcall js mov int (bad) bound lahf xor data16 and fildl pop sbb xor ret mov jp xor stos movsb sbb sub add mov dec dec sub inc cs int ret sti and adc fsubrl fisttpl adcb xor (bad) jp dec fsubrp mov and push fmuls daa jle xor pop repz mov cmp sub addr16 inc stos in out mov cmc mov scas sub jg icebp fnstenv (bad) and sub aas test andl lock push mov inc pop movl push xchg mov pop and push cld (bad) xchg sub in stc (bad) cmpsl lahf ss mov push test outsl subb inc and hlt xchg fcoms nop in jo sbb add add jne cmc fidivr cmp and (bad) push dec xor arpl push bound jl (bad) dec daa insl xchg mov int3 lds lcall test (bad) invd loop xchg push inc or out mov movsb data16 rcll data16 add mov (bad) je setnp sub stos je in daa sbb je daa mov mov stos or and xchg jae add mov or push (bad) inc fsubrp cvtps2pd rclb cmp add jmp mov xor cmp pusha test push push jbe in xchg jge lea add (bad) hlt lods xlat inc adc daa (bad) lods gs scas mov gs mov pop lods mov clc shrl repz lods sub sbb sbb movsl (bad) jb sub or inc sbb or or add xchg out pushf xchg cmpsl push sbb jbe movsb push ss jmp fidivl pop pop inc pop (bad) in (bad) xor mov rorb mov cltd rcrl icebp (bad) push dec cmp test mov fnsave incl inc movsb rclb mov xchg outsb insb cmp orl lahf outsl mov mov xchg pop pop cmp pusha dec in dec cmp pushf xchg push or stos lock or aaa mov xchg adc adc (bad) pop jge xor mov xchg sub dec sbb aaa mov dec inc rcll mov jmp (bad) mov jno sahf jmp pop test mov repnz adc mov fisttp lock jne in jl sbb (bad) (bad) lret notb adc jnp push es inc jp cwtl popf lds lods faddl mov inc nop jns fisttp mov adc mov inc or jae (bad) dec push sub mov cmp cs xchg sub push testb mov rcll mulb ficom out insl stos jbe (bad) adc lods (bad) es test in pop rep out cwtl inc paddb mov push loope lods fisttp jg clc mov (bad) mov jle bound xor addr16 bound xchg push pop into mov and cmpsl pushf popa mov pop iret mov pusha mov (bad) loope or fmull ja xchg (bad) cs xchg test sbb lahf loopne inc leave fcoml mov pop pop stos mov addr16 and dec imul lret out fldpi leave leave adc mov xor sub add mov in aad aam cmpsl sbb stc enter mov inc or clc pop xchg mov mov (bad) mov in fadds testl mov mov mov or fs aam adc jecxz mov or lods pop lret mov pop out inc std mov out dec aad jae pushf scas cs or leave rcll pop mov sbb mov idivb jge addb mov fisubr cli mov inc lret daa add sub in popf lret mov mov mov (bad) sti xor stos aad ljmp aas repnz in div stos mov fisubl repz inc (bad) and mov int jp mov push push loope and mov out fsubrs loopne test (bad) push stc aas inc mov mov or xchg test cmp push insb pop add or ljmp sarb mov lods mov or ljmp mov shrl hlt rolb dec or mov add mov lret xchg inc stos mov subb xchg mov popf in mov mov adc push fnstenv (bad) or xor jo or rolb testl movsb sub pop dec test (bad) lods (bad) stos scas popa int sub mov (bad) lret xor addr16 pop movhps dec adc sbb jb out xchg fdivr or add dec mov repnz xor cmp int3 dec adc mov adc inc lahf sbb in mov jno (bad) dec push rep (bad) jg dec cwtl lcall mov xchg out push adc sub and adc sbbl jl fs fsubp mov clc fistpll mov jg jge mov stc and std push sbb nop int3 jg fsubs sahf add enter call (bad) out push pop loope dec lcall jg stos jg dec insl pop cmp addr16 sub push and mov fs jns into mov sarl xchg cmp sti out repnz movsb xor sub cli daa and pop mov cltd pop sbb xchg movsb mov cs (bad) out ss mov adc rol xor (bad) scas scas and mov push xor jnp sub xor sub in cmp or int3 sti xchg jmp xor inc jno cmp mov in pushf shlb mov pushf pop xchg or insb test (bad) dec xor pop in rcrb loopne add jb fstl push mov sub inc lret mov es movsb sub dec fdivs stc ret arpl mov movb push and js (bad) in fwait dec nop mov ss (bad) popa dec jne outsl pop jbe das dec dec or ja add cmpb in insl or in ss xor fnsave xor inc fisttpll into or jne mov push scas inc cwtl psubb arpl pop shlb adc int out lcall cmp push jmp dec xchg push (bad) es int3 sub cmp or push arpl xchg js das xchg cs pop mov scas add dec stos insl cmpsl loop pop adc fnstcw mov or sbb sub pop mov pop jecxz fdiv and inc test xlat in mov rorl sarl (bad) inc movsl mov jo inc dec mov inc xchg cmp andl test adc add lret sub add ror mov imul mov dec push gs stc fcomp pop pop aaa or push mov adc jno dec adc lea mov push inc mov (bad) pop pop lea cmp add sub in jnp push mov ret jp leave ror inc push adc fdivrs mov aas inc add push dec mov dec mov cmpsb mov jg lahf sub sbb add pusha lahf pop iret cs fbld js sub enter inc ss sub push pop jmp pop pop push out movsb sbb repnz jne lahf push js cs fisttp sbb arpl sahf stos and notb sub js fucomp push (bad) ljmp cmp or mov (bad) jmp mov pop add add aad data16 cmpsb ret mov (bad) or mov sub pop mov enter pop (bad) sub xchg rorl test jge jae,pt add mov mov push inc xchg dec mov outsl out dec sbb dec lret dec xor mov mov out inc fisttpl nop call loop xchg movsb and mov test adc outsb (bad) in fnstcw sbb push data16 xchg call mov mov outsb fiadd idiv sbb enter xor fcoml mov insb arpl es mov mov and mov add ss loop into lods mov or popa jae cmp dec into fwait dec insl repz in sbb xchg xchg test sbbl sub mov (bad) jno mov inc ss loopne jmp ss cmp mov mov cs test jge xchg jge,pn and adc maskmovq notl or sahf or xor inc mov das or ja scas bound cmp push ljmp int3 insb and js push daa inc push cmp jmp outsl mov jle jmp insl sub xchg lret arpl mov jno mov test in mov (bad) in adc push test std aaa sub insb call cld in fs and rcrb inc mov jno adc push sub mov out mov push in adcl scas add out arpl inc (bad) notl dec inc jo sahf mov mov mov outsl pop adc push push leave jge lods push cmpsb fistpl arpl sbb inc imul xchg aad ficompl jo mov mov in aas aad sub leave push gs mov fiadd or xor (bad) int cmp popa loopne mov xchg cli and jmp jg (bad) mov dec cmpsl add xchg stos pop movsl cli popa pop pop cmp pop xchg call (bad) mov (bad) mov outsb lahf sbb lahf sub inc flds push add test and cmpsb mov loopne,pt insb mov sub es mov shlb cmp lods xchg in mov inc cmpsl cmp aas psllw ret lods mov cmpsl adc inc int jo movsb push inc push mov add jle pusha clc es sbb push mov cmpsb loopne dec movlps and mov test aas pop daa sub sbb mov mov arpl ret xor iret sub aad pop bound mov pop js xchg jnp push je mov push sub fisttp lret inc scas and lock sbb xor mov arpl inc pushf jno xchg xor idivl int3 pop leave xchg dec sub push out cs xchg or daa imul dec push ljmp cltd repz jp or in push js call loop adc cmpsb or insb add or pop and xchg sbb fwait les push sahf xchg push test (bad) movlps ljmp add sub data16 jb scas sbb jmp sbb popf movsl jns push xor jle pop mov dec adc popa arpl jecxz push stc inc mov push and std or and pop xchg psllq lea mov movsb cmc dec sbb mov mov incb cmc out cmpsb out clc insl inc mov mov test pop add aad mov sub (bad) mov (bad) (bad) enter insb cmp inc add and out adc jb fmuls loopne pop popf xor out cmp scas mull xor insb inc bound les fs lahf les dec xchg cmpsl xchg fwait pop jbe pusha xor sbb pop test and ljmp hlt loope mov pop cld adc scas fucomp push add movsb popa jae mov iret imul (bad) jle ds push fisubr mov fdivl hlt in or dec addr16 push bound aam stos add sbb inc xchg pop xchg clc add insb loope gs (bad) cmpxchg xchg cmc in loope lods lret and inc ret daa out and cmp (bad) fistl dec pop insb mov fwait int3 mov sbb lahf ret fisttp adc pop cmpsb xchg mov ret subb mov sbb outsb lret into adc lahf movsb movsb lods popf pop jae je je jge mov int ud1 jl pop (bad) jo (bad) mov sahf cmc cmpsb in mov lock mov add inc lods gs ss fnsave outsl gs scas mov popa or aaa pop adc arpl iret cmc pop jno xor inc fistpll mov rcrl into in push clc pusha lods xchg pop and adc fs enter add xchg mov sub pcmpgtd aaa xor jp aam (bad) enter clc sbb push push rcrl sbb mov out (bad) push and out (bad) repz test jb mov nop sub mov push push stos lods rcrb mov ret push test xchg ds fnstenv int mov addr16 (bad) sbb fcomps jnp sbb pop and jge inc das jae pushf dec push pop sub (bad) call add pop jo insl cmp enter fstl (bad) pushf add pop stos aad aas jmp (bad) popfw cmp mov (bad) xor cltd mov imul mov mov cltd xor inc jae and imul mull ljmp into jge cmp cltd sub mov (bad) mov (bad) std mov into xor test sub push xchg scas xor sbb sub mov insl adc cli jae mov ds push aam cmp jle ljmp inc mov ljmp mov pop iret rorl jl push xchg pop sbb sbb lcall daa cmp cmc mov adc xor mov and (bad) sarb in jle cmp lret movsl or aas popa inc out and fiaddl lret sub clc pop sbb pop (bad) sbb and dec sbb stc add mov inc cmp lcall add mov add jb (bad) cmp push shll add dec mulb push bswap leave xor push sub jecxz xlat jb repz push ja and lret fldcw out aad push (bad) (bad) and fisub jnp call push cmp jne aaa (bad) insb int dec je imul stc mov imul add out mov pop xchg out out xor pop xorl mov faddl sub in and imul adc jo adc arpl jge or aaa in stc mov mov jae cmpsb xchg and popl and xor sub cmp jno xchg lock inc jbe sub or cmp (bad) cmc cmc in and mov push mov repz out faddl inc scas in call cmpsl icebp (bad) jge add bound jb pop pushf jmp test cli pop aas cmc repz push in push sbb (bad) dec test mov xchg adc xchg xor mov lret arpl and popa sbb dec imull cmpsb inc mov pusha dec dec mull push pop subl xchg push mov dec mov inc adc int3 jns loope pop jecxz cmp mov sub pop xor lds stos iret fldt (bad) lock ror inc and mov mov sub out aaa scas inc stos push lods in dec xor and out cmpsb sub xor popa pop mov imul test adc popf lds cmp out mov clc fnstcw sbb or ss arpl dec or mov shrl adc mov inc jae dec stos pop xor (bad) sbb dec imulb unpckhps sub lret mov push adcb sub das xor mov and jecxz lock mov or mov and add xchg mov cld cmp mov js mov pop jmp pusha add jae and or push mov out or mov mov in mov das mov mov push push pop mov rolb insb (bad) mov out (bad) cmp jno loop push or imul dec in imul sbb push adc inc shl rcr mov and dec sbb or sub sbb ficoml out int3 jne aaa xor test or xchg sub push add leave out cmpsl in test xchg (bad) inc fdivr sbb stos lea (bad) jo dec repz jne push (bad) mov sbb (bad) clc js ds mov std lock std lods dec shrb push (bad) xor dec fnsave lods aaa int mov sub lds aam hlt lahf gs lods mov jl call enter dec insb sti mov push jmp mov enter lcall testb dec sub pop inc aaa cli sub (bad) fnstcw fwait mov mov addr16 push mov mov and dec (bad) into stos insl sub push test cmc ljmp jb jo mov lret cmpsb push pop cmp rol or xchg mov dec mov (bad) adc lcallw mov jl pusha rcr aam movb (bad) (bad) xchg scas jb sub out push leave inc clc lock push test fwait adc pop pop je add mov add out imulb mov pop mov mov xor jnp ret mov movsl out jne jnp imul sub and adc mov mov jge arpl (bad) hlt or stos mov inc push ja jge cmpsl mov push decl sbb inc lahf leave ja shll dec mov xchg jbe data16 std pop xchg lea (bad) xor jns push loopne mov pop (bad) or loope adc mov lcall rolb push pop repz cs fistl push ljmpw add mov add jo sbb xchg dec fstpl out clc in pop jg xor sahf mov (bad) ss aad movsb cmpsl inc outsl shl sub adc xor mov sahf pop subb inc mov dec (bad) adc imul popf sub sub mov imul movsb ljmp xor xor hlt enter sahf pop mov repnz lods ds aad push mov lcall cltd inc aad imul xor imulb push mov jne test mov add adc or (bad) aas sbb mov popf mov adc mov mov ss jns dec mov dec scas mov cs loop pop jecxz or cmp int and enter xchg fwait add jge jle pusha mov enter fbld xchg mov out stos sub andl sub outsb push jne movsl dec and cmp mov jb iret arpl data16 test mov pop jge mov and fadd fidivrl ret adc out pop ja jmp xor (bad) mov imul mov sub in movsb ret add mov std cld in out sbb xor and xor xorl push shrb inc push pop cmpl add cmp stos cwtl bound dec xchg test mul mov leave cmc dec inc fcmovbe fsubs cmp ret imul fdivrs inc xor or (bad) fisttp or sbb or into (bad) out mov int3 dec pop test add nop inc jno jle xchg sub sti mov ret sub xor popa (bad) pop or mov cmpsb pop in jno sbb arpl pop adc dec xor push or iret and out and add (bad) mov jno ret cmp mov pop jo and xchg dec stos push mov cmp fimul and xchg sub mov mov dec sbb pop or pop icebp aaa sbb test sbb jle mov aaa repz roll dec and lret mov and pushf mov stc insb enter xor das jmp xchg in lahf xchg xchg mov cmp jmp shlb out ja fmuls mov mov sarl aad pop pop adc jecxz iret cli ret aam negb out cld pop pop aam in std pop addr16 ja out cmp repnz les movsl mov xchg push stos call mov sbb out ss mov or movsl sbbb incl in and lret xchg and pop (bad) fisubr aaa arpl repz push push stos jl push dec sub mov xor and daa lods flds bound fbstp out sar ss ss pop repz push loope aam adc decl cmpsb push adcl pop adc stos adcb loop ss jae inc sbb cmc sbb in imul inc data16 in push dec jo cmp pop insb (bad) insb cli sbb sub jne loop nop jns xchg cmp and and jp xchg adc outsl pop xchg push push push mov inc add cld xchg mov sahf ljmp (bad) mov jb shrb push sbb jmp jmp popf cltd cmovle xchg xor stos mov push stos jge scas jne subl xchg mov dec fistp pop or fild cwtl cmpsb js mov je mov mov push xchg ret push popa imul das sbb adc pop xchg mov loope push pop jbe cmp pop seta repnz (bad) inc insl icebp push bound pop scas push leave imul inc loop sub mov rorb loop popa cmp fstpt ss ret (bad) fnstcw mov jo out xchg jne push pop ds mov repz cmpsl iret mov mov xor jmp js jmp mov jg jge pop ljmp cmp xchg mov cli sbb subl (bad) (bad) sub lds jp sub mov mov or fs mov inc mov xor loopne mov pop pushf or xor mov cmp sahf loope js cmp adc sar ds jns mov imul or xchg (bad) mov ds daa out (bad) lods push popf mov cld adc pop imul (bad) xchg test repnz dec inc xchg push jmp imul mov std rcrl enter xchg adc pop and out add lcall jge pop jmp lds pop cltd add jne ret (bad) jnp cli ret jnp jno jmp in clc jae out jbe mov popf test call int3 adc xchg scas subl pop adc fcoml and jns dec mov call xchg adc inc fdivrs loope fwait je in dec pop and lea add xchg mov jbe jmp xor clc aam xchg mov movsl movsb idivl cltd lea sbb cld inc fmuls dec mov mov mov push jg cwtl push adc stos sti pop cli imul addr16 lock sbb jo sti and push (bad) jbe mov dec mov mov or lds lods jg rcl pop mov inc pop pop inc mov popf ss int push inc ljmp pop mov mov xchg mov jmp sbb fimul fnstenv leave (bad) js adc sahf push add jl inc dec int add xor inc and emms jge dec loopne cwtl mov pop fidivr stos mov repnz cmp inc pop and and lret out rep aas ljmp push pushf les add push push cmp stos jg je cmc push fcom cmp out jp int3 sub scas mov arpl mov cmp pop loope and lea scas js jnp dec push push (bad) adc inc mov sub dec dec out pop imul mov sub insl mov repnz push js push push sub pusha lods pop mov pushf push fisttpll push adc xor cmp push movsb lcall mov jbe fildl add push adc sub rorb je sub push mov nop cltd jns ret divb sbb cmp jg ljmp sarb mov cli loopne,pt popf call pop test and push xchg jnp or push test jge jae sar jp add xchg jl jns cmp push mov scas pop cmpsb pushf push inc adc (bad) hlt or push popa mov test xor add cmp xor or fstps push cld test inc jno push push xlat inc ds fildll push mov dec inc clc and sbb push repz xchg xchg jle scas push cmp xor adc popa xchg pop mov mov add cmp push adc inc data16 iret xor jge and inc push (bad) pop into adc push cmp leave dec jo (bad) mov icebp sbb stc mov jp xchg test lret sub add ss in dec fistp pop push pop push jns sbb int aam lret addr16 or adc fidivl jnp movsb pop mov cmp sub sti mov sbb imul and hlt fs add mov notb push cwtl xchg sarb mov pop in in in cmpsb dec loopne cmpsl mov jle mov pop test dec fwait inc in jbe je push xchg fs dec aaa add mov sbb xor ds (bad) mov push add pop jnp lea jmp ret into jb and and rclb mov dec into pop arpl mov sub rorb mov frstor xchg xchg add out jmp cmp push mov das (bad) loope in and mov jbe xlat stc inc mov sbbl cmp sbb or mov pushf push xor mov ror xor ja and loope fild lret (bad) in test and adc stc push divb cli imul in arpl adc out mov movsl jecxz rcrb or dec mov std jmp mov (bad) jge jecxz jle sub mov scas xor lea les insl aas jmp mov cld dec push stos (bad) push inc sbb gs cwtl call mov iret dec clc inc sqrtps jl add inc cmp ja and lods imul mov (bad) dec sbb push cmp or mov bound mov cld mov sub movntps cmp dec push std jae int leave bound cld or mov xor mov and cmp xor xor xor mov xor push sahf push sub aam xchg int3 jp into jb mov or repz and nop out mov mov cltd and aaa (bad) cmp adc jmp repz push repz mov and stos xlat xchg pop ja lods cld push dec pop sbb lock arpl xor push (bad) aas repnz std lods inc or lcall fucomp nop xchg pusha inc xchg aam xchg scas pushf and or sbb mov add jecxz mov mov push lods add sub aaa adc pop aas dec xchg and dec les inc mov lcall leave stos jl mov inc push inc punpckhbw mov ds pop cltd mov dec adc mov pushl or mov lret pop xor pop es aas lea imul loope mov cmp sub or sahf mov dec push and divl xor aas add push add sbb push push sbb pop xchg push lock jns mov add out (bad) dec dec jmp pop sarl mov aam pushf int3 ljmp pop je xchg jb fbstp ficoml cltd jp pop arpl inc imul xor cwtl cs aaa aad cmp loope lock fsubs dec test stc inc and pusha mov xor cmc movsl push dec fs dec repz fistpll mov xchg lea or cmpsb fstl push ficoml mov jns and mov stos ds mov lahf sub and push mov xor and pop dec movsl lcall incl out and sub mov jo sbbl lds jmp cmpsl mov and int insl sub into gs out push jp xor ret sbb cmp dec xchg scas mov (bad) mov xchg fwait sub and sub and clc push xlat cli xor mov pushf mov dec and push sti addr16 out xchg test aam push dec (bad) jo jbe cwtl push adc or ror lret or add cs fildll int inc add adc xor adc jle hlt cmp test cs nop xor jb loopne aad add call fildl (bad) xor cwtl lret push popf (bad) cmp (bad) lock data16 inc mov mov mov in (bad) mov mov jg jl in adc cmp xchg mov hlt daa add cpuid jg jne push mov mov mov cwtl fldt fs push lds mov inc cmpsl xchg lcall dec stos repnz adc xchg arpl pop fisttpll sub jne pop shrl xor push lcall sbb leave xor jae push xlat std mov xor dec movsl mov stos inc test call (bad) mov imul fcmovnb nop mov xchg sbb sub fisub sub repz test mov rorl movsb addr16 push test faddp ret (bad) jno test mov jae inc dec movsl outsb xchg mov push push test sub loopne es sti lods sub mov cmp sarl imul cmpl jge inc daa push pop gs xor inc pop in cmp or sub mov jae sbb repz je push add stc pop jnp inc mov xor xchg jmp push mov shrl add mov cwtl dec test stos sub cwtl mov inc sbb fst jle orl ds fisttpll aad adc xlat popf dec bound jb cmp adc add mov sti xorb cwtl stos lret cmp int3 lds aaa out test and xchg ficompl call or and inc (bad) sti out add mov js and adc js add and in xchg test sbb mov loope out mov sub imul clc mov sbb mov nop fisubr pop in and add and xchg mov push inc jnp dec xchg cltd mov pop mov insl out mov loope stos out push xchg mov stos bound aam repz test ret dec cs jno test jne push or xchg in sbb add and adc pop pop cmp push jb or mov and xchg add (bad) ljmp out jo adc enter sarb adc add sbb pop mov xchg fsubs mov mov adc push add frstor push mov lret nop add xor lret mov push ficoml and sub in int3 in aas mov dec adc mov cmp mov sub inc push fs dec test roll loop lods sub dec and xor xor cmpsl and xor fdivs movsl jo dec inc dec test mov ja arpl push inc xchg push scas dec cwtl push pop jns lods mov pop addr16 sub (bad) jmp dec out rolb (bad) mov pop sbb ja adc pop rclb push adc adc adc outsl push or push jo and jp ljmp adc ret es jno push lret leave shrb imul add lahf (bad) mov xchg pop fdivs sbb xor or cmp loope mov pop and and fmull (bad) adc push call sti cs rcr dec insl dec out mov aaa cmp pop and lds fistpll cltd lahf es nop cmp hlt (bad) jmp inc jmp cltd in leave hlt scas pop cld adc adc jbe jns insl lea jecxz adc pusha sub mov icebp jbe cmpsl cltd dec fnop sub fs divl lea aaa imul outsb inc xor mov inc mov repnz ljmp sub aas js mov pop dec bound and clc pop std int3 jge mov mov sbb jns push dec fadds lahf cmpsb js or pop ljmp clc pop pop ljmp stc sbb adc jmp mov xchg adc and adc aas int mov sub out sub in fs add rcr cltd mov lahf adc or out adc js mov mov std cmpsb scas fnstsw mov add aam shrl sub mov push push clc jl repz test lds push fnsave fnstsw ja scas jle pop (bad) cmp add dec and rorb lock addr16 fnstsw fs je xchg mov repnz adc lea push mov imul fisubrl out lock nop (bad) (bad) mov adc fwait clc xor or pop xchg sub push and ret push pop cmc pop cmp test or mov cmc jmp icebp xchg ret sahf jno adc dec add mov cmpsb lret xchg outsb test xchg les adc sub and xchg clc sub xor or outsb neg mov mov dec pop dec shl pop leave sbb jns in icebp inc lods adc sbb adc fsubp arpl cmc cmc add fidivl (bad) neg add int aaa push push mov movsb popf loope or add jp sbb fs fstpt test repz (bad) sub inc aam fs and sbb scas and add orl cmc jmp imul mov add inc mov xor sti push dec stos cmc fwait mov imulb dec jo mov dec sbb lcall rclb push pop xor in cmp xor popa shr fcomip mov adc inc xor sub mov inc std pushw ret ss les cmp xlat subl cld xor sbb cmp inc xchg mov xchg test arpl cmp cmp lret mov jl jmp or cmp (bad) das sbb popf test inc out xor mov mov pop jmp aaa push xchg push sbbl inc fstps xor aad pop gs arpl xchg cld sub test mov cmpsb or daa movsb int add cmc lods dec loop push fcoms or mov cltd iret icebp cmc cmp daa ret mov push rolb add in add push arpl movsl ja in shr and js ficoml inc sub cmp push xchg adc add pop clc enter inc mov pop dec aas xor (bad) not fwait mov (bad) clc cmpsl push sahf dec gs ljmp aad pop pop pop (bad) arpl xchg jo mov iret cli in hlt mov dec idivl jnp sbb call pop repz jmp scas notl adc and mov jns nop cmp sbb jae and pop and (bad) ret leave subps xchg or clc jecxz ret hlt jecxz (bad) or pop (bad) pop insb test hlt rorl cs arpl jecxz outsl and int3 div and sub sbb pop push es ja cltd pop xchg jns mov aad jle push adc cmp and jecxz je int adc sahf and into mov aas dec inc pusha mov int3 (bad) lcall lds jge (bad) out jg mov jne jmp (bad) cmpsb sti or es ret mulb test push jae lcall adc mov test lea jbe xor cltd mov scas pop push jmp lods stos or sbb ret cmp mov push adc ja stos aam ret out in aas int fisub cwtl rorl dec jae addr16 cmpsl push mov divb mov or mov inc inc jmp bound xor (bad) icebp stos mov pop stos out jo insl int3 mov cld call pop ljmp push stc adc cltd cmp sbbl shll inc and (bad) lock sarl mov mov rcrl cmp lods aas jg xchg mov repnz aas lret popf pop sbb div mov add sbb movsl pusha pusha mov ds insl xchg outsl aas mov xchg xor movsb scas jbe sbb pop add in out jo cmp pop pop psubb or inc es or out and cmpl sub mov inc aad and xor sbb mov xchg test cmpsl int jg lock and ljmp jae and mov sub or sub std mov stos int mov add and pop std aam mov pusha cld pop jl mov mov insl nop enter jecxz add jg and bound fsubrl cmp ss mov and inc lea bound fcomps jecxz hlt (bad) cmpsb hlt xchg arpl fsubrs mov or movsl jl les xor fsubrl ror xchg pushf lea pshufw jnp cmp loop ret call lds pop push or bound mov jl jae cmp ja sbb in lcall fwait js inc sbb decl clc imul aad mov in adcl add mov test fs and mul sbb sbb out xor pop jp cmp jl (bad) in adc mov cmp dec jg push or and loope jb dec lds jecxz lea inc cmpl and je push inc ret dec ret add out cmp cwtl dec (bad) out or mov in movsb xor into xchg push rcrl sbb adc inc adc (bad) mov es aad adcl dec inc hlt pop push aad pop cmc xchg je ja sarb cmp aas les cli adc mov sub insb pusha mov push mov cmp aad mov outsb sbb cmp and sub cltd jecxz enter sub xor aad or aad jo mov out in stos sub mov aas lea adc pop out dec das les pop cwtl (bad) int3 mov sti arpl jl outsl js mov jbe test push sub rorb bound push mov clc aam cmp xorl xchg cmp shrl in aam adc mov dec repnz mov popf aam (bad) je imul inc repnz jns loop lahf and mov pop outsl cmpsb (bad) out mov push aaa test in iret sbb pop aaa aam jle adc daa aas aaa and xor sarb popa xchg mov sub mov mov shr aad inc lcall imul fisubrl stos push jl mov mov movsl stos jecxz les fnstenv mov cmp adcl loope jge fmuls sub repz pop jno inc sub jmp adc push das sbb push jle add pusha push mov mov gs mov outsb dec cwtl xchg lahf fisttpl push mov out cmc rcll icebp (bad) mov scas adc jl xor push xchg popf add mov rol mov (bad) mov sbb pop sub or dec lret cmp xchg lock fnstcw lds enter ds xor movl and fs or in jne dec ficom lea push nop test mov jge mov (bad) lret (bad) jecxz cmp pop push enter (bad) mov xchg pop sub sub out clc mov fs add dec pop lea sub dec xchg leave aad adc sub in push or insb pop loope pushf xchg mov loope push jae std inc jmpw je lea imul fcomps jge push cs call cmp mov das adc test aaa cltd enter push rcrb xchg data16 nop aas mov or cmp mov push aas mov (bad) jae push mov (bad) outsl xchg (bad) divl js cli xor out adc dec jo incl and mov in daa test jmp inc or aad sbb bound test mov or fcomp jl pop jmp adc je sbb imulb imul cmpl sbb adc jae add fisttp mov rol jae push pop int xchg or cmc mov dec jno or (bad) or or and sbb daa inc stos loope push loope xor arpl notl and and mov jo test std and xor mov or into mov popa inc push mov cmp inc mov inc sti add mov pusha xor ret daa lcall push cmpsl mov scas jp dec movsl outsb dec dec (bad) ds popf cltd sub cmp or push (bad) push add outsl scas je pop mov fldenv mov std out sub sahf sub rol xor fs mov pop addr16 push mov adc insl enter xchg faddl xor pop cmp test jg aaa adc inc xor int3 jno pushf mov mov xor sbb aad sar or cmp mov mov rorb or cmpl enter aas cld jnp add push and pusha jg lock xor pop add jmp lods dec les push xchg pop fimul test cmp pop jae and lcall icebp stos addb or lea jno std mov je les inc jl lods cmp push or mov int3 sahf sbb rorb int3 mov out test arpl adc popa stc rcll fcmove sbb mov pop inc cmp out icebp ljmp cmp daa mov mov xchg repnz add mov cmp sbb aam ds push mov ds mov aas jns xor mov cmpsl jge mov jle or bound mov mov pop bound mov adc shr (bad) les popf out pushf xchg mov dec lods into inc and (bad) jns mov in sbb cmp jmp ja adc mov xor jmp mov aad in call insb xchg stos scas and loop mov xor lahf mov sub in dec cwtl les enter or addr16 push inc nop and std movsb push mov (bad) mov fsubrs jb arpl inc lret into outsb mov pop sub inc xor dec (bad) mov insb xchg test outsb lea push adc adc mov sbb lret bound int xor mov enter and cmp movups mov xor daa outsl jnp fwait insb or xchg fsubs dec pop mov ljmp orl sbb jl inc mov addr16 mov data16 fistpll jns in mov mov movsb addr16 scas div fsts jecxz xchg and inc data16 xchg pop push push shll jle lret gs jmp mov mov dec inc int3 cmc mov push insl jecxz cmp scas pop and out outsb notb out rol sbb jo leave movsl (bad) rclb rcll sub adc mov out sub (bad) mov ret imul mov sub inc repnz lock cmpsb aas shll pushf jnp sbb sti icebp cmp jo call and (bad) popa jns mov pop fincstp inc pop (bad) nop jnp adcb push jbe pop pop sub fadd ret icebp adc lods pop lret popa fxch daa mov and fisubrl arpl jno loopne sbb call cmpl divl fwait xchg iret inc dec cmp push sarl jmp jecxz jecxz movsl lea and pmulhuw or and pop stos jae popl hlt and mov sbb jp movsl dec jnp push ret mov cwtl sbb shll push popf jne ficom jge gs cltd ds dec out cmpsl das cmpl gs fidivrl int3 sub stc rclb and dec inc nop sahf ret xor push jl fidivrl (bad) xor jb push daa dec pop pop ds pop push push jb add xchg cld and scas xor add xchg dec mov inc xchg and ljmp push xchg add xchg adc add jg push jecxz cmp aam sbb cmp and dec sub in or js sbb sub das adc xchg (bad) sub fsts or ds mov inc in push inc mov or dec je jno cmp or movsl inc xor insl pop push arpl (bad) xor (bad) and cli xchg daa loopne repz adc stos cld icebp (bad) cmc cmc dec mov loopne pop jg ja (bad) out sbb push dec sbb push (bad) mov dec imul push cmp daa adc lret mov ss add movsb jmp movsl sbb mov dec pop add cld ret adc daa shll insl add es mov cmp cltd and push scas add jno mov xor sbb or fpatan cmp jge mov fisub push test add stos ja xor dec sbb imul ja cltd sbb movsl outsb ret dec ret into jmp imul fist jecxz xor push dec test jae xor push adc mov mov ss mov addl jecxz imul out rclb mov dec sahf (bad) fisubr je sbb fistpl out xchg xchg pop mov aam aas cmpsb mov push fnsave mov pop enter mov jno dec jp push jle in insb xchg pop and sbb js mov iret popa or loop lcall ret cmp mov popa fsubs sar icebp sbb pop insb cmp leave jmp repnz pushf sarb cmpsb adc mov sbb and ljmp cmp jecxz xor iret cld out andl push cwtl aas push in push xchg ds jne in xchg test adc jbe cltd dec (bad) mov lret es xchg cli pushf dec fs or mov and fdivs add lods fbld test adc push les mov jmp sarw cmp and xchg cld mov mov mov sub push aas jns (bad) jb mov jo daa in clc aam call jo mov sub pop sti jbe push and test mov inc out ret push jno xchg scas insb movsl xchg ret xor sbb addr16 je stos sbb iret jl cmc xchg arpl test mov add aad inc outsl ss mov sarl jno popf cli icebp fwait jl test pop mov xor dec adc add cmc sub jmp adc pop stos das jbe add pop mov loopne mov sub (bad) hlt or pop mov push rcll inc push mov outsl dec xchg pop mov fsts xor (bad) cmp out lods xor fdivrp mov test mov mov inc gs rep ret push mov cmp xchg mov loope jl scas fwait mov xchg sahf mov bound int3 mov out test lods add into pushf lock mov xor xchg xchg aam (bad) xor xchg jns test or mov cmpsb xor add jmp sbb lea int3 mov cmp add sub push sbb cmp rcll dec dec or mov insl lret push pusha inc mov scas aas call cmp push and mov addr16 sub lret or mov stos mov jae out add fcmove adc push sbbl dec (bad) sbb test cld call cs cmp add mov pushf push fucomp es mov sarb add lret repz mov movsb loop mov test (bad) xor aas cmpsb (bad) or lds js cmpsb add stos sbb test icebp test adc call (bad) fisubrl mov mov (bad) add pop sub and aad cmp mov pop ret mov xchg (bad) xor mov sbb xchg cmpsb leave aam cmp in pop nop iret jp mov jae jle jp adc icebp add xchg jbe in push lahf imul pop push fisttpl lds cmp inc in adc ja mov addr16 mov das lods test sub mov push cli jbe std pop add xorl cwtl sbb arpl sub mov xor adc jecxz std inc push jbe pusha (bad) sahf or mov subb mov xchg xchg mov imul and xchg imul xlat pop and inc les jecxz adc adc fidivrl xchg jne add mov and jl push lods xchg or repz and pop or hlt (bad) incl cwtl pop push inc sub mov movsb push cmp into mov arpl xor and lret xchg inc xchg pushf lods mov daa test adc fisubr fisttpl cld sub mov xor or pushw mov jo add icebp jecxz lock mov jno cmp aam inc lods loope out adc testb mulb fs sub negl (bad) xor mov adc stos pop sarl js jno and jbe jge mov lds add leave push mov jo push xchg insl imul out pop xor adc pop push into jmp lldt cmpsb and cs rclb pop xchg xor cwtl insl pop fisttp xchg ds sahf fcmovnbe (bad) (bad) mov fistpl mull roll add in fwait xchg scas mov sub mov mov sar dec jns int dec lods mov xlat mov mov mov lock pop repnz lea lock mov jmp icebp int (bad) insl lea dec pop int3 repz movsb mov cli (bad) (bad) lret lahf insb sub cmp xchg ds test int3 aaa push xchg je mov clc in std fimull xor push lcall insl cmp sar mov (bad) or add (bad) scas jbe add pop mov imul lahf mov (bad) ljmp push imulb ret (bad) xchg test leave lds mov push fadds jno (bad) fucomip (bad) push push xor insl pop push inc icebp dec paddsb das in lds sub or int mov jecxz add adc sbb cmp xor std (bad) sub or mov mov test push adc pop fisub jge jmp test and es cwtl int3 icebp mov out xchg and pop fnop je add sbb jmp movsl jo push mov fadd stc dec xor aas loopne enter push mov push movsb hlt mov hlt test ficoml scas or and leave gs xor rclb sub imul adc js adc xchg mov test aaa in iret sbb mov repnz out mov add icebp xchg pop sti insb jae sbb add pop inc rcl std adc mov arpl xor xor mov cwtl (bad) dec xor adcl out dec adcl push fcoml inc push ss xor jp cmpsb cmp daa pop push les adc imul daa outsb xlat test gs fldenv imul xchg mov (bad) repz cmp fidivrl mov fldcw xor dec test out dec mov dec lods push xor enter pop sub popa push mov into sub jno add clc xchg xchg sub cmp adc jp cli std dec test xor pop mov stc mov jl imul jg rorb lea fcomps add mov cmp mov dec loope push lods ror addr16 mov pop ds xor lret fnop jb inc mov jno dec leave push jae negl or push movsb lret dec imul jl inc (bad) imul rcr fs sti fwait jge outsb push jbe ficomp jo orb jg jge test pop test es and mov test hlt arpl fcmovnb hlt mov shrb xchg adc push pop ret test clc mov push pop dec or sbb js adc inc push push mov mov lahf dec mov sbb mov mov inc bound lods sbb cmp mov mov xchg loopne mov stc mov mov sbb mov xchg inc insb cld testl mov xor push jno (bad) xor mov popa or sbb movsl lds dec adc sub mov jb hlt sub test jbe pop xor fcompl int3 sarb fnstenv cmp jno into push je mov call rolb push popa cmp outsb sub jmp push call cwtl xchg adc mov bound xchg mov jecxz mov jno inc popa mov push das imul push mov push into dec cmp pushf add mov dec lea jne test fiadd cli cmp aas (bad) xchg mov jmp rcrl add arpl das xchg mov sarl clc (bad) push jne sub aaa fisttpl into pop mov imul mov iret loope and mov cmpsb sbb les cmp pop inc adc cmp and (bad) call pop fadds lcall repnz jo mov ljmp xchg and das lahf pop mov mov pop ljmp mov fdivl cmpsl pushw xchg (bad) lret inc push aas dec aas movsl and clc clc mov inc in sub jne imul or push lret scas xor mov mov xchg cmp mov dec mov jmp repnz int cmpb outsl and test lea negl in pop sbb dec loop jbe movsl (bad) in jle sub in and mov jl (bad) sub leave pop xor test lea mov inc pop dec lea xlat sbb dec loop imul push aas pop xor clc mov inc jb pop sbb push popf call jg jns cmp sub add inc adcl xchg xchg iret jp mov lret xor add (bad) aad (bad) cmp fidiv dec pop imul repz into popa outsb cmc fstpl aaa enter outsl (bad) icebp rcrb ss fwait cmp sbb add rclb std xor push (bad) pushf leave sub xchg fisttpll mov pop add mov insl fistpll and es push and adc mov mov setns rep add lock test inc mov sti repnz push andl mov inc gs lret adc cmp sarb clc lea xchg xlat nop cs xchg mov cmp mov xchg and lods aaa je or (bad) xchg and and dec les out xchg loop aaa in xlat dec sbb or cltd fs mov or cmpsb mov jge jg dec mov ss fiaddl adc (bad) sahf fistl ret dec imul sub (bad) push cmp dec push mov in add add decb mov dec inc push fiaddl (bad) fsubl test pop test hlt dec (bad) or push adc inc mov (bad) sbb sub jp pop scas xor sbb mov xchg mov pop in mov fdivl adc add add inc cwtl mov pop gs test aaa cmp lods lods pop add icebp inc loop movsb es movsl xor call sub dec ljmp sub mov mov sub mov pop xor shrl addr16 fnsave inc cld ljmp iret mov jle (bad) jo inc lds inc dec sub out xchg sbb fwait mov xchg jae clc les fwait js mov adc mov fwait inc inc in mov dec lahf mov mov in popw xchg inc in pop arpl cmp inc imul xor popf pop (bad) adc out adc cmp rcl (bad) jne xchg push fdivrs mov push cltd dec jmp rcr mov clc int aas xchg movsl pop mov pop ret cmp aad std scas push rorb mov (bad) movsl jg mov stc or sbb dec dec inc push cmp pop jnp dec adc sub cmp lds xor and push (bad) mov lods scas movsl ror mov (bad) ljmp and fwait jb or aas mov arpl inc jl add or sub inc daa adc sbb cmc add fildll pop je cs test xchg (bad) cltd cwtl inc repnz inc out aas test (bad) cli test xor popa push gs lret push shll outsb inc loopne,pt add dec lahf sar enter clc and jecxz lret fidiv push add sbb pop aas push clc pop adc je dec (bad) push sbb or jne add int dec (bad) jge adc (bad) mov adc and pop pusha movsb mov mov and xor mov cmp les (bad) and xor push ror mov push ljmp adcl shlb mov adc adc mov pop adc sub aas mov push outsl push and and imul mov pop pop enter ficoml mov xor loopne nop jp inc xchg orb xchg ret popf push dec push loopne std pushf movsl movhps lods test push addr16 aam loop inc jl,pn or mov cmp cs xchg sahf jbe cmp test xchg add adc mov sub sbb cs or (bad) xor daa mov inc ss adcl mov pop cmp roll add adc nop jge or nop call inc out sarb inc je add cs push push adc sub into xor or insb add xchg xchg inc in mov out xor loope movsb cmp mov sar pop test xor out jg add sbb imul out mov sub data16 jae imul out cmp jl adc cmp cli ds or xchg jmp xchg ljmp imul into fnstenv adc test test outsb mov pushf inc jp add mov repnz sahf bound jo mov fidivrl xchg jle fisubl xchg xchg or mov es mov movsl adc je idivl pop push out mov enter ds inc bound sub ret jae jecxz sahf sarl les adc sbb add dec jge mov pop repnz or inc jecxz mov test inc xchg lret test jl out lretw dec (bad) cmpsl inc cs push hlt and cli das xor (bad) cmpsl sbb dec leave xor dec dec or (bad) hlt adc xchg jb jmp data16 sarb cmp push (bad) jp out jmp je push loope and inc fwait mov (bad) jno dec jb add sbb fidivr push daa pop xchg in adc std ret pop subl and inc push out sub jmp mov push ret aad addr16 xchg push xchg aaa sahf add stc data16 jb leave jo mov jl int3 jecxz push hlt cltd pop xor xor popa enter and icebp xchg inc std pop adc lret dec shll or xchg lahf push pop pop fbld enter add jg push (bad) es fimull mov popa loopne xor mov add lret pop mov sub mov and into pop pop cmpsb stc sbb add add clc add xchg movsl jp mov mov jl push push stc push mov aam andl fidiv (bad) stos nop lret ror (bad) cli ds mov mov mov imul ds imul mov xor sub xchg dec xchg (bad) aas xor mov jge adc jne popa or xchg cs inc mov bound mov jp mov mov dec xor and pop mov cmp mov or lds or (bad) jp push fsubl daa lcall hlt cltd add imul clc popf insl imulb mov mov pop jnp (bad) and test and add sub in movsb jp sub sbb mov adc jle jecxz lret ror addl aad ljmp outsl loope mov sbb out sub pop cs hlt sbb cmpl (bad) aaa cmp aad notl popa jo jae cmpsb aam adc (bad) jmp pop mov loope and xchg push inc mov jb fiaddl je cmpsb (bad) in jge flds mov aaa cld or out cli aaa lea dec movq adc jg add xchg mov out mov jmp aaa dec lret mov stc popa lock rcll mov adc ret stc mov js mov imulb mov mov fisubrl call (bad) pminub cmc jle (bad) jbe pop stc fimull inc cmp fldln2 je mov cmp out inc les lahf popf incl mov mov call add stos lahf aam inc ja pop rcr inc add cli (bad) pusha adc sbb das adc in inc cwtl (bad) cwtl sbb inc pusha pop leave push (bad) icebp js fldt adc or fisttpl dec push mov xor mov and mov adc push (bad) xchg data16 orl imul insl imul lcall mov cli xor aad stos (bad) outsb sbb popf sahf mov xchg mov jne sub cmpsl scas scas push pop (bad) sbb mov jmp push jmp mov ss adc aam mov push mov jg outsb or cli add lahf or or push push rcrb jae mov mov dec pop divl mov mov mov mov in movsb leave pushf or sbbb mov (bad) jmp test cmp and or mov frstor aaa xchg or lods cmp pop out test or pop sbb scas js xchg xchg mov (bad) jo mov mov rcrb aaa cmpsb xor mov sbb and sub inc jbe out mov ror inc inc test xchg and adc mov push push mov ja sub inc push mov add mov ds arpl scas out xor (bad) aad inc out in fsubp icebp pop pop mov inc and (bad) adc add es (bad) hlt jnp mov nop inc lahf push loop pop jg jecxz push scas test popf or fsts add add popa xor dec dec pop lahf int3 mov cmp adc pop add push add (bad) fnstcw mov jae pop dec (bad) test jns js inc jno jno out cmc sub lret sub jbe dec inc out push rol sub push lret or xor pop inc outsl insl lods fs adc pop mov nop jl jae pop cmp idivl fcompl fsubl push inc and and xor iret inc sarl mov sbb sub fidiv push mov (bad) nop pop cli or jecxz xor gs cmp repnz pop clc adc mov mov sbb shrl cmp push cmc jge inc das xorl icebp shll xor sub daa add lret scas fsubs cld cmc mov aad push or out div scas aaa mov adc sub dec xor lods movsb mov addr16 add imulb in lea fbstp and xor sbb lret rorb push push ret cmp inc jl cmp outsl aam or xlat and aas lcall lahf stos faddl cli cwtl mov or inc lds mov xchg xor insb movsl inc mov pop cmpl in jbe shrb iret and popa call (bad) pop xlat cmc into xchg clc jae push inc jle out adc ret lret cmpb inc sbb push fs and into mov ret lods ss stc jecxz or das add push repnz iret cli cli ret inc movsb jnp sbb dec outsl in pop out out aad or lret aam sbb sti pusha leave loope push les out out dec lock es int3 xor mov xlat push cmpsl (bad) sbb xor xor js push xchg or and inc mov pop addb adc rcl push mov mov adc or out scas iret lahf adcl (bad) paddsb cltd das movsl dec dec cli ficom mov int mov out push inc push cmp (bad) xlat (bad) push stos mov aad mov xor jp jp mov iret jno test fbstp adc (bad) ja in lcall xchg imull out int mov and aas pop pop outsl inc jo mov gs adc cmc mov loope nop dec inc sub lods jp inc clc fidivr pop test mov mov cld pop shrb (bad) cmp pop fucomp arpl adc test add pop or mov sbb cmp and add icebp mov aaa adcl cmpsl push gs pusha push mov xchg pop push lds jge (bad) cmc (bad) mov jo cld inc icebp ret or sub std js xchg test fwait add fcmovnb sub dec shlb dec pop sub ljmp sbb add jg jbe xor sbb lahf xor incl stc inc (bad) xor mov sub mov jg sub and mov dec rcll dec std inc fwait adc sbb adc cmp inc lahf dec bound sbb cmp cmp jl sub sbb sbb push outsb jbe imul lret sbb hlt dec retw cmp stos lret and adc push in ss pop aam jns sub inc (bad) dec test les int3 sbb xor in das xor out mov lcall mov mov insl sti fsubrs or xchg lods fcomps repnz pusha mov adc dec add jmp add lahf cmpsl pop mov jns lods fwait pushf test mov xchg mov dec sbb adc js dec mov in mov scas mov (bad) adc scas jbe std cmpsl xor pop xchg iret enter stc std mov loop test pop fs sbb pop movsl jne pusha sbb loop int3 mov inc data16 mov addl aad pop dec mov mov cmp rcll sub mov mov loopne push (bad) out ffreep xor xchg adc repnz pop loopne xchg stos aam les and in (bad) cmpsl sbb ret les inc gs push mov mov xor enter es xor test lretw xor xchg adc cmp push pop ss das inc push cmp lcall cmpsl faddl and add fs vpmaxub push out aaa sbb push rsqrtps arpl adc mov mov aad das cvttps2pi xor movsl loop (bad) mov mov pop lods lock fiadd imul xor xchg mov daa mov pop cmc sti pushf push push ret movsb mov int3 repz mov inc test push lahf rorb add sbb mov sbb or mov insb cmpsl adc inc lds fwait sarb and cld sub mov mov dec loope fnstenv jne mov jl lods (bad) mov dec cmp fcom (bad) (bad) imul and cmp xchg lock mov or inc fistpll subl mov cmp mov and addr16 (bad) mov add lods mov mov out daa rorl push (bad) je inc cmp gs xor adc rcl mov loope adc mov xchg lock cmc mov popa je scas out mov arpl sarl fsubs and mov into cld leave xchg (bad) scas outsl sub xor aad mov push lock lret dec rcrb int push mov push add xchg sbb lods jmp pushf clc xor cli sbb jno fidivr mov daa push xchg sub add std push pop idiv mov inc les xlat jne or sub fstl mov mov js push aaa push addl in pop fisubl out enter data16 dec mov aaa xlat jnp adc sbb es jb scas jg js mov sbbl sbb adc insl or sbb shlb mov mov stos rorl daa ret pop lahf push sbb or mov je mov shrb inc push int and shlb cld ficom bound outsb mov aaa int dec adcb fucomip jg ja jae negl int or enter xchg test aam mov cli pop xchg pop adc mov mov js adc sbb out cmp cli pop inc cmp lea aam sti or (bad) push pop pop add fwait jg lods lds jp add sahf add jmp jbe mov adc pusha xchg mov cmp xchg int3 mov sbb sub and and add rcr adc cmp loop sbb cltd lock sub add ljmp lss sub xor enter lcall jge push dec pop xor adc mov lds and push popa mov stos push cltd mov mov arpl lret (bad) repz cmp mov flds push std sbb addb mov ss and push rorl cwtl test arpl inc and fdivrs into loopne sbb xchg sar xor das data16 and addl cwtl dec je mov and push mov repnz mov mov or adc mov pop pushf add push loopne mov adc jb fnop xor pop push adc fst loopne in jmp mov insb leave insl jae add mov test aas rol pop into (bad) fs jg dec ja test xchg xor sub lock xor cmp (bad) outsl roll xor dec inc sub ljmp cmpps jns les xor pop repnz cmpl push jmp xchg dec jmp enter cld adc mov jb sbb dec (bad) (bad) or xlat adcb js adc sbb xor mov or outsb cmp (bad) xor adc push imul xor popa test mov out mov jl scas pop pop push daa (bad) pop stos ret js shrl jae (bad) insl cmp push int ds popa pop mov pop cmc stos outsl ja mov out movsl jo and lods loope outsb test dec pop or jno mov repz add dec push bound lret pop das sbb jge sti sahf lcall jl sbb jl je sub jne dec add add xchg xor pop pushf mov lods mov adc xchg adc cmpsl push out imul xchg mov lods mov in xchg inc mov (bad) shrb add ficoml mov shlw in or fs push in and imul sub bound and and and sbb sbb nop or aas dec or in fmul sbb jb pop adcl clc mov xchg pop push xchg add sbb repnz dec mov cli lods dec dec enter out rolb fbstp gs sarl popa cmp roll inc ret fdivrs lods popf jb push out adc add cmp mov in outsl test jmp aad jb jae ds push sub out ret out mov and inc div imul out sahf mov sbbl ljmp and fiaddl dec shr mov ffree hlt repnz jmp add aad cmp mov rcrl dec aaa jge sti clc in sub cmp ja mov mov popf lret mov and scas sbb mov outsb mov pop push pop jnp repnz mov outsl movsb sbb adc inc (bad) mov and scas in lret xchg xor or nop (bad) int dec lods clc ljmp cmp jmp rol xchg movsl pushf sbb and add lods lods cmc scas xchg sub jne push cs dec pop pop js inc inc dec push mov push pop adc dec lret or test sub push loope lret mov xor and dec daa out out int or fsub sbb sbb int3 fbld xorl fs add sub call stc pop push jge inc cmpl push gs jno daa arpl add clc mov leave mov dec xchg addr16 xchg cmp clc es (bad) aas paddw insb fdivs fstl lret push sti jns mov sub pop jne fildl imul sbb xor jp into aas gs lods lcall sub dec adc adc sbb test dec roll mov inc sbb mov call mov and inc cmp jg dec pop inc and ds mov pop mov mov mov in loopne sub inc mov cwtl ror movsl pusha jge lcall or in inc cltd pop (bad) jne push stos or inc pusha mov int inc pop scas jge lods and or leave bound inc test dec out iret arpl faddl or shr int3 les mov test ret jp jg stos mov ret mov clc test cmpsl aad stos xor xor xor dec scas cmpsl stc ret roll sbb add inc push fwait outsl ds xchg push mov cmpsl pusha sar jmp es and jle in or push jg leave sub mov and rorb add jo push inc popf ret ljmp addr16 sbb add mov add outsl loop adc leave dec dec popf pop es mov icebp xorl jg add jne popa (bad) inc adc leave mov jmp and lcall cwtl jb jg ljmp pop push push fcmovnb sbbl sub imul movsb stos push sub mov or cwtl xor fs sbbl (bad) hlt fs dec rorl test sub pop divb cmpsb lock lret lods das jae jno jo cmp jl cmp test arpl cmpsb stc jg loop xchg leave cmp xor call bnd adc sbb add repnz jae add fnstenv bound rorb sti das jnp cmp inc sub insb arpl dec mov mov div mov add push arpl cmp fs andl add in add stc (bad) (bad) sbb or in lahf hlt aaa xor push pop popa es inc imul imul sub fidivr cli push jmp mov jns fildll inc ds (bad) mov (bad) or repnz xor jnp adc loopne sti xlat pop lds mov and or jb mov lods imul repz test lret loopne das clc jo addps rcr dec stos mov outsb imul sub jge mov dec mov cmpsl sti and dec lds ljmp daa ss insb aaa fcom (bad) jecxz shrb inc (bad) mov insb shrl cli jge out mov xchg cmp popf lock (bad) and jl cwtl sub and and xchg pop pop iret ds xor mov and inc dec stos loopne movsb (bad) sub inc sub mov xchg (bad) ljmp fcomip lret pop cmc and nop (bad) stos fdivs cltd push das add or pop in (bad) inc add mov jecxz test int call inc je xchg sbb and rcrb jge nop daa xlat and ret clc scas dec xchg in and outsl fild adc xchg xor and xchg iret rcll add and fucom ficom and sbb jle roll cli loopne out icebp add sub jmp jae jne in cmc ss rcll imul inc in notl adc (bad) mov or jl orl std (bad) xchg test aad lcall dec push movsb cmp jo and insl das add sub dec (bad) fucomip cmc sub or in movsb pop cwtl inc adc cmp sbb push js hlt mov cltd orl les mov jle ljmp inc or leave rorl xlat pop cli mov cs mov adc adc orl inc std mov sub xor stos dec xlat adc push (bad) jo insb (bad) daa push mov rcrl cmp fidiv mov aam (bad) mov push mov (bad) mov jecxz push push add orl ja pop pop (bad) fnstcw pop jns aas and sub xchg dec pop inc dec stc push xchg xchg sub outsl or nop pop push jne push fwait jge ret test clc sub dec mov aam js (bad) mov js xor inc sub add ds std pop mov adc mov inc ret xchg mov inc pushf pop and outsl cwtl mov mov gs jp (bad) insb xchg mov jle aam pusha dec xchg and imul pop inc fcmovnb insb mov add das lods fucom mov add fcompl je out cmp or xlat jle dec test movsb pop rorl dec outsb mov pop std mov add add inc xchg pop test push dec pushf cmp and push mov ljmp adc sub in fistpll push (bad) idivl lcall xor jle push push fprem1 fwait nop data16 jbe cmp jle sahf push adc mov ficomp mov and bound imul push shr jnp xor add repnz push and mov movsb dec and mov jae jg test sti insl lret int3 (bad) sub bound sub loop das cmp xlat add addr16 cltd sarl adc das aas sbb repnz fs adc lods sub ret into lahf mov iret (bad) xchg mov daa scas pop pop push add sahf inc adcb sub mov and insb mov and jae jecxz mov push xor mov xor (bad) dec adc or (bad) arpl cmp mov lcall or sub sbb jno inc test int inc jno adc add insb mov dec cs aam push movsl ficoml fwait cmpsl incl pop andl cld pop daa aam call xchg xor mov dec jl jmp popa int3 ljmp pop inc mov incb pop shll xchg fsub data16 leave push adcb sbb sbb adcl and (bad) jne fdivs mov sbb sbb or addb sub icebp cmp dec outsl inc into mov mov jae add scas (bad) aaa mov or out or mov cmpsb pop jle addr16 cli sub xchg imul mov xor aaa mov mov icebp addl pop sahf insl xchg dec inc add (bad) rcr sahf (bad) mov sbb mov and or aam inc into test ja mov cmpsl mov mov sub xchg shrb xor testb push xchg adc out je cld (bad) sahf or inc add inc (bad) push fnstsw mov aas mov push mov sbb fwait push nop jp cmc (bad) dec movsl and int3 (bad) stos add dec or scas push xchg fnstcw sbb bound jae and push or cmp cmpsb jecxz or dec and out inc int3 sahf fstp adc add sub addr16 imull jae je lods loop mov fwait xor ss or pop loopne lods xor jo stc inc dec sbb cwtl push ja fisubl adc out fldt js dec fild aaa imul (bad) cs and (bad) cld sub aas clc mov xlat in adc cwtl push pop inc pusha lock jle jp dec ss cmp pop lods dec or lods cli pop mov mov pop sbb sbb mov and mov sarb fsubs (bad) idivl xchg int3 dec lock xor ret adc mov xchg adc cli sbb ficomp sbb push sbb cmpsb jle sbb jae add mov xchg pop mov push dec aam fcoml xchg cmc out in jp daa nop cmp and pshufw out mov into pop hlt jg or mov mov mulb mov sub sbb mov cld mov cmc test imul xor dec ss or push aaa push pop (bad) fcmovnb icebp repnz xor add mov addr16 roll dec inc lea js push cmpsb mov dec or lock xor shr adc adc movsb push jno and (bad) inc movsb push sub dec gs movd (bad) ljmp aaa stos push bound les jge xchg add int mov jecxz call (bad) std jno push mov mov or call sbb sti lea or add jmp pop pushf and lods fisubl cmp cmpsl arpl pushf mov (bad) push inc loope jo add sbb pop js pop jmp jbe mov fisub sarl mov fadds adc test lahf in adc cmpsb xor jns adc adcb fisttp aad push inc mov xor dec inc sub in sub xchg or xchg pop lock pop mov inc out insb jae pop sub std mov lcall ljmp xlat out mov jns mov loopne insb jg stos test mov push jmp mov rorl lods aas incl in sub mov mov nop insb arpl push mov mov mov stc and sbb or cmp fnsave jb mov pop imul (bad) (bad) add push cs mov xor (bad) rsqrtps adc xchg shll das fwait inc insb sub jle fisttpll fbld xor mov push and push jo cli jne inc xchg dec popf sbbb negl call push xor rclb pop adc push sahf pop lcall xchg and stos sti pop enter sahf subl andl pop popl sti pop hlt and pop mov mov call jns xchg xchg ret mov cmc lcall std cwtl mov adc inc sbb add adc pop jb sbb mov (bad) jbe sbb lds mov (bad) repnz dec pop dec negb iret (bad) mov and xorb js jmp fisub push sub fmull adc arpl inc fistp push loopne pop pop sub and jmp mov loope fwait inc and push jo aam pop add orb repnz (bad) notl loop rclb inc movsb std lahf gs xchg dec out mov dec outsl adc sahf (bad) mov hlt divl icebp popf xchg inc sub sub in mov sbb orl sub sahf jg ficom cmp mov cmp movsb xchg (bad) xchg adc and mov push push or aas sbb leave dec push pusha push (bad) int (bad) sti push (bad) rorl lds adc negl clc das jb pop pop or inc das adc add sbb outsl cs xor daa push (bad) enter mov xor pop repnz and adc xor addr16 imull fsubl and imul stos xchg pop test or insb mov jle fistl loope xor popa inc mov or cli push cmp es adc add pop mov outsb addr16 into popa orb inc jae rep inc out pusha sbb xor shr outsl pop mov jb sub movsb notb xor int3 ljmp or negb or ss mov lock fcoms in outsl and mov jge xchg lds mov push xor xchg lods out mov addr16 xchg out cmpsb test sub pop jecxz in lret popa pop sub dec mov push daa daa jmp lea pop pop and lahf mov mov adcl xchg popf inc mov add ret inc mov sbb cmpsb cmp mov (bad) fnop cmp ficomp sub sub ret jno mov imulb insl fstp mov enter inc jecxz insl mov in mov ret sub dec or pop add or lcall mov and dec jne add in jmp ss aaa outsl loope dec mov imul inc sbb fiadd imul loop test fdivr rdtsc adc jecxz fimul dec mov or adc push insb addr16 xchg lret inc mov fdivp sarb adc jg jo or lcall es lods pop cwtl jg icebp add xchg fiadd jge cs and and in aas mov xor lock clc mov jb lods pop sub sbb loopne es or lcall sub mov outsl jne dec in fnsave ljmp push add cmp jbe stos xor inc in inc mov add es xchg push fdivrs add cmp pop std out pop cmpsb sbbl lds mov lahf aaa imul inc inc adc add xchg fisubrl clc sbb mov xchg xorl pop cli push and mov push mov inc (bad) push cltd test mov (bad) loopne repnz repz cltd and lock rol fistl xchg push loop push cmp push mov dec mov adc pushf sar pusha mov mov (bad) negl pop repnz aam sti mov dec movsl lahf push shll insl pop (bad) sbb push lret mov cltd add dec xor adc movsl cwtl in push push fwait dec test nop es xor inc fwait or jnp and cltd mov inc xchg push int nop pop sub loop lret xchg jne push movsb in or orl or push or rol cmp std (bad) dec cltd cmpsb es pusha or fstps inc clc sahf xchg sbb xchg jle aam (bad) lret (bad) pusha xchg (bad) fstps jne mov outsb lods cmpsb or sub gs loopne test cmp hlt sub rorl xchg in ja out and pop cmp inc xchg or enter mov xchg add ret (bad) repz data16 mov test push (bad) cmc scas pop jb cmp out cmpsl dec adc stos pop mov xchg loope push insb inc in int imul pop outsb fiadd rolb adc mov fnsave cmp pusha jb fldt or enter movsl stc mov icebp mov lret push cmp outsl lds dec sub jge (bad) (bad) outsb mov in or xor mov xor or and popa movsb stos notb jne mov int3 in gs nop inc sbb xchg addr16 pop out fnstenv adc xchg sub pop or iret (bad) pop dec pop enter gs adc jns or lods pop imull sbb iret jae jecxz mov pushf dec into fs adc fsub fmuls dec xchg jge out outsb in adc mov adc fldt das mov mov shrb ss stos mov pop ficoml popf mov enter and (bad) ja xchg add icebp jp (bad) push dec sbb fstpt sbb sarl mov add push into inc bound pop sbb ds in or les cmp or jns mov xchg sub fmul (bad) out je jecxz sub call rorb rcrb inc cmc xor fldl sbb mov cmp or sbb xchg sbb sbb sbb loopne mov addl add addl xlat jecxz sbb pop sub push jecxz inc int outsb stc sarb je adc push data16 xchg add divb lods mov cmc or decb pop aas sarl fild pop rclb sub cmp mov inc out call mov sub jle pop dec dec push sbb push jae mov stos cmpsl sbb movsl hlt mov cwtl xchg pop sub cmp sti je js,pt add xchg cmpsb pop ljmp dec mov push jmp fsubs and out ja fnstsw push cmpsb iret lahf pop scas mov pop push pop (bad) mov adc jmp xchg mov mov cmp mul loope (bad) push cs nop cmp xorl push test jmp and andl xor enter leave cmpsl mov push or insl xchg pop and xor aam orl xor lea negl pusha xchg inc out push xchg je punpckhdq popa inc jnp mov xorl sbb jle js out and (bad) mov ret inc mov mov mov sub pop pop es pop insb mov ret sub ss int3 xchg int3 xor aam sbb and mov je (bad) roll mov inc (bad) insl mov xchg aas pop or mov negl (bad) int fmuls imul repz lahf outsb lahf subl pop cmpsb xchg subl cmp scas (bad) xchg inc lods imul mov pop add ljmp ja insl dec inc adc add enter mov mov inc adc and pop add or (bad) in or cmp push xor iret xchg mov sub mov sbb test dec inc cmp ret in fimul dec (bad) mov imul push jae lds inc fildll push mov pop icebp test sbb movsb out inc fdivrp lea or outsl xchg add (bad) fdivs iret (bad) mov cld jnp xor insl clc cmp dec imulb enter add idiv push sbb dec sbb jne test outsb push or mov cld fwait adc sbb push mov add xor stos test xor inc sub jle sbb pop mov repz lcall scas loopne arpl push and sub aad cmpsl xchg add jmp cli and stos mov xchg push jnp xchg arpl lock mov pop mov stos or aaa cmp sub cld or jmp out inc cmp cmp rolb leave scas or sbb popf popa out popa aam aas cltd mov mov enter in xlat int into mov stc aaa jecxz mov sub rclb ds (bad) mov lea iret mov inc mov in xchg inc dec jb sbb and ja insl inc aas outsb cmp sbb sbb xchg add fst xor iret rcrl cmc mov (bad) out mov push pusha jp fs scas xor in sahf jg cmp fistp xor cli in xchg (bad) enter push imul aaa mov mov ljmp mov dec cld mov stos lret imul mov cltd xchg in xchg sbb sbb xchg (bad) imull shrl inc jae (bad) movaps cmpsb cld cmpsl cs push iret int3 cmp mov inc cmp call stos xchg push hlt (bad) mov xchg sbb (bad) jno ss cld ret cs fdivl test movsl movsl fcmovne popa mov int3 push inc (bad) mov adc lds fdivr aas dec adc fdivrs ja jecxz stc out cltd insb pop adc fimull xchg stc jge fwait outsl in sub sbb fbstp sub cmpsb fidivl pop sub mov inc outsb mov outsl and cld and jecxz sarb mov stos into adc test aaa lods cltd popf frstor add test (bad) hlt xor pusha out add jecxz jo pop fldt in jp and cltd lock je mov int3 mov cld xchg divl add and jecxz lcall mov push out sahf lea xor jp jno aam dec mov lcall cmp mov (bad) cmp jmp xor jecxz and xchg sbb sbb adc lds (bad) pusha mov fstps xchg cmp mov jne jge icebp mov scas cmp (bad) movsb push idiv ficom mov pushf scas pop into jle aad or dec cld stc mov and das iret test jnp call cld scas es sbb fildll loope mov jle mov push dec add and pop test sbb jl sub loopne mov pop jns dec push out jb inc aas es outsb rcrl les popa shrl pop pop scas dec cli jl inc adc call sub aad fucomip jg cwtl jge fdivs js jae pop push pop into add lods pop inc les sub cmpsl and inc mov mov jae jo sarb int3 fwait iret lds mov and pop or fcomps stos inc in dec (bad) push or sbb insb ja icebp ret repnz rorl cli (bad) mov icebp frstor imul mov mov movsl outsb lock mov jmp dec cmp icebp xchg or fnstsw jbe mov shll push int3 rcrl sbb xchg xchg (bad) dec and loope pop and jnp test lea inc add add xorl hlt scas dec cmp dec imul stc dec pop subl fstpl add (bad) sti sub adc imul sti pop gs mov push add inc in push mov mov mov add xor jns rcll mulb jbe adc add out lret mov outsl or mov sub xor add ret push adc cmpsl popf jae xchg lret push enter out and fstps lds cs enter cwtl outsl cld or jb loop sbb mov inc cs mov inc add leave notl cltd mov inc out jp test xchg shlb (bad) loope xlat pop inc outsl jno in and jbe call std dec dec xchg std in add jle fwait xchg push jo inc xchg mov xor test nop (bad) jno sbb and loope enter xlat aaa into clc push jae shlb dec xchg mov xchg scas loopne dec fiadd lcall add cli dec and insl test dec mov and stc dec sbb sbb jne loop sub pop push sar jge scas push mov stc (bad) fstl fist (bad) dec mov cld jmp add add fisubr mov push xchg and iret lock cmp rolb loop call mov repz adc testb mull xlat arpl mov in sbb jmp cli pop and inc mov add ret pop insl (bad) in jl push fidivrl mov ss jno pop fmuls cmpsb daa fadds fcoms paddb loop sbb loopne cltd and (bad) icebp (bad) mov js shrl jo lcall lods jle outsl inc movsb (bad) and push and dec iret call (bad) es stos push inc cs jns dec sahf shll popl sbb ficoml mov xorb pop fsubl lock fisttpl jp lods ja mov inc rcr xchg ljmp jns iret iret mov xor inc cli dec adc add sbb cs xor push in push in sahf js out call fyl2x jecxz or jnp shlb (bad) loope js lret clc add push cmp loope cmp xor rorl cmpsb dec add pusha mov sub xor jb fwait pop inc and xchg imul sbb dec aaa adc aas inc jmp or mov sbb push and push or mov mov jle mov jmp sbb xor mov movsb mov sub popf dec dec pop in into dec push jmp das out fprem mov jp add lahf inc divl rcr cs out pusha cmp decb (bad) push bnd pop insb in adc cmp pop imul call lret into ret outsb popfw mov std dec lret ljmp jnp,pn iret xor sub xchg fidiv jmp outsb out rclb push sub test in sti jg sbb test cmp sbb les in cmpsb roll in mov aaa push xor gs rolb rcrb jnp rorb jecxz xor sub enter xlat lds jne push xchg jp (bad) cmpl dec sub aam pop subl ss sbb cmp pop jecxz iret or (bad) fsubrs (bad) outsl sbb xchg adc cltd pop push mov lret sbb or clc add addr16 mov nop sbb pusha push rcll pcmpgtd repnz mov mov out pop jle push and mov addr16 popa sbbb inc insb dec xchg jb push fs and ret sub insb out dec loope cli clc shlb xlat inc sbb pop adc sbb pop jae popa fidivl push cmpsl leave push mov (bad) or lods jae test ljmp xor clc push ljmp lods cmp jge das pop add aas pop adc and ret call jne add mov jecxz cs movsl ret not and inc xchg nop or sbb cmp or jo call push adc dec push or dec mov sbb enter push adc jbe daa imul imul xchg icebp test jp add cmp cld in jo sbb push leave mov and pushf sub lods loope and shrl pop sub jmp and xor jnp dec imul sub movsl dec pop adc imul sub mov loop icebp sbb push ficom sbb pop add jmp mov cmp sarl adc into mov xor cld pop testl sar icebp sub ljmp add add xchg mov add and dec add xchg mov rolb cli xchg insl outsl push pop push mov shl lret int nop sub ret test inc push sahf icebp loop add (bad) fbstp sete shr gs sbb adcl add jg ret insb lahf ss inc jno xor lret mov arpl fs jne lods iret inc sub push dec je lcall push push popf aas inc fnstcw jp mov xor sub sti xor sar push insl outsl rorl dec xchg mov add mov repnz sbb mov sbb push mov into adc divb xchg (bad) jno insl xchg cmp insb push or arpl lret insl scas popa les in adc pop or inc push pusha mov mov mov inc es les lods cmpsb add jge ja mov pop into adc dec loope icebp movsb stos test xorl jg dec or out add cld adc dec loope pop cmp aaa jl or xor lods xchg cmc push inc inc cmp adc sub jecxz fstpt mov xor adc push fnstcw sub (bad) enter push pop pop lcall cmp or mov pop pushf pushf gs sbb stos (bad) mov lods sar (bad) xchg xchg lods stc or sub inc dec and adc scas daa idiv pop in pushl imul hlt mov mov jecxz xchg enter mov rolb sbb test outsl mov ja lock push xor (bad) ja xchg ret inc xlat dec shll xchg push lahf mov dec and test push leave sub test xor xchg mov cmpsl popf stos fidivr sbb pop xchg arpl aas data16 int pop lods scas jecxz mov lcall push out xor inc jmp adc sti sahf sub xor stc addr16 imul sub mov hlt adc adc outsb lret fcomp std stos pop inc out leave cli or xchg addr16 xchg mov insl jecxz add xchg dec test push lds pop mov mov js outsl xchg (bad) cmp mov (bad) pushf cmp mov aaa jnp jns push ret xchg fwait outsb or popa das dec and das mov and xor xlat test xchg cmp stos cs dec enter dec lcall lds xchg xor mov in push jp mov std ffree iret adc inc xchg adc scas push fmulp fisttpll and mov add push aas mov cmp mov mov lret xchg inc jl dec sub mov (bad) not adc push orl insl jg xchg push stos or jmp xor sub add add mov inc mov pop cmp mov jecxz mov imul inc push imul loope jmp fldenv call push add or or je mov sub mov aad loop mov inc test jns or (bad) enter in jmp mov pop or pxor add repnz mov sub jg cmpsl push cmpsl shr xor sbb sub jo int cld jbe sbb notb xchg add cmpl insl jnp dec pop mov jne pop add hlt jmp pop pusha outsl (bad) repz mov cmp add mov roll cwtl js jae dec dec int fdivs xchg imul loope add enter xlat mov push sahf imul (bad) clc sub rclb adc jl lahf in jl imul jge insl (bad) sub (bad) int in (bad) push mov ror jns int jo jbe pop cmp scas add push mov dec mov mov sub pusha or shrb mov sbb dec test lds in lds pop std cmp cs xor sbb jne xor out xchg pop xlat bnd and xor loop inc das fadds mov int3 inc out xor inc jbe xor repz ds das cmp ss mov xor push cwtl add int insl inc add cmp das mov adc add iret pop xchg xchg inc imul push lcall rcr jp loop or (bad) mov jecxz fcmovnbe mov les cmp push test mov lret icebp xchg cld add out lcall maxps fistp lds push dec roll gs nop movsb cli loope jle mov les pop mov adc fstps fcompl les loope mov fadds insb add xchg lea xchg stc adc test dec fbld dec in pop xchg cmp punpckhdq add lds jg mov mov test rolb mov mov jg clc adcb mov ss push cmp xor mov mov and jns mov arpl mov jbe add push jno into sbb ljmp (bad) sbb cli xchg fimul mov (bad) pop ret push xor adc jnp repz xchg jecxz lock outsb cmp in sub adc mov and in xor dec sub rcrl fwait outsl push pop dec inc jo or enter adc sbbl sti shrl push jecxz sub scas sti adc adc pop lock mov dec stos cmp into cld sbb inc je icebp push call mov sarb cmp sbb adc xor clc pop inc add fistpll mov cltd inc xor jae fs loope outsl add sti je fwait mov adc dec xor ror cwtl xchg dec fsubr push leave imulb mov push sahf lods adc sub inc cmpsb test pop mov jb mov (bad) lds lcall xor adc adc mov dec stc push outsb inc inc aaa push jae mov cmc lcall xchg push pop sub pop jmp dec or dec negb sub mov hlt aaa test pushf (bad) aad in inc movsl test sub xchg scas fs sub sbb jae adc or inc xchg dec pop push xchg jno pushf sub pop cmp sub (bad) adc push sbb popf cmp inc stc and leave out mov and enter dec test repz add xor mov adc pop call mov xchg xchg inc popa sbb aas inc insl push xor arpl pop repnz xorl inc outsl (bad) loope shrl je or push pop int mov divb mov mov adc dec in push out inc xchg sbb mov dec (bad) mov jae sbb jp cmp fldenv jg or mov cmp dec es xor in push pop cld add rcrl xchg pop (bad) in push inc jge jae xchg jl (bad) mov stc add push fcmovne mov jecxz inc mov int3 mov in lcall pop jo cli xor loope sbb mov jmp push xchg xlat pop shr aad pop pop orl idiv or (bad) mov mov inc lods mov inc mov xor das mov stc iret stos repz pop in fstpl and or sti xchg pusha fbld or inc int sahf outsb and inc adc add pop cmpsb mov inc (bad) push mov das sarb mov sahf lahf sbb dec rcrb lds hlt das mov jae movsb lcall in stos sub into cmp js add lea xchg jl inc dec xchg mov push insl idivl jbe mov xchg dec push xlat mov push xor shlb mov int3 test inc inc or lret sbb inc mov loopne push fisubl lods dec inc sbb pop mov dec pop nop stos sbb daa xor dec cwtl outsl mov not push and loop sub dec (bad) (bad) cmpsl aaa mov stos rorb sbb out (bad) shll mov cmp xchg inc aas xchg or pop fldl (bad) sarb add leave dec mov cmovp les imul loopne cmc mov xchg add mov dec sub mov testl pusha mov dec xchg xchg aaa (bad) mov cld push adcl jp adc js jl dec inc jmp add lret (bad) cmp adc fstpl jge ret or lret in mov adc sbb icebp lock iret rcrl in hlt add cmc adc add pop testl push in add lret hlt ds mov push rcl jecxz sarl sti cli push sahf jno in mov jbe mov push loope scas xchg test les mov pop pop mov cld mov ds shl sarb and mov inc ficompl push xor outsb je icebp sub decb add sub clc sbb popf mov in add imul mov rclb in test in pop jbe aas enter ss js pop mov sbb (bad) mov xchg adc xchg insl dec scas jge mov clc adcl dec inc arpl std sbb imul test das pop sarl pop cmp mov mov or cmp out aam push mov adc mov lock xchg xchg out xchg (bad) frstor sbb xor xor rorb inc and pop pop test out ja,pn sbbb lods add sahf aas nop pop inc (bad) jl jg mov xchg notl mov fwait add sub repz fdivrl (bad) mov mov out xor popf lcall mov mov hlt or lea adc inc enter insb js xchg fisubr push hlt inc jecxz push cmpsl add dec cmp adc in xor out aam call inc add push or pop cmp xchg (bad) mov jmp jge cmp pop dec insl and int3 cli add arpl xchg mov subb adc push sahf adc jmp push cmpsl loop pop mov push mov and and dec sub sbb and and aad out xchg mov pop int mov sti je cld sub (bad) sub cmp jno and fldln2 dec add pop mov repz jno pusha (bad) push add in jl add rorb dec push fdivrl sti push and sub cmp mov jmp mov sub hlt mov (bad) xlat adc xchg int hlt or (bad) xchg adc sti inc ret cmp cmc cmpsb mov xchg add sub mov add xor mov repz jb orb jno mov add sbb pop jle xlat adc ss xlat add xchg inc call imul ss add sbb fwait sbb add lret pop adc enter add fs setle in pop je fsubs fcomps stos dec test mov xor cmp and roll mov sarl nop in pusha sti mov add (bad) jnp xchg mov loope jge sbb mull out jecxz or shrb cmpsb pop ret push and xlat jno mov mov fcom inc cmp int3 lret loop push and enter fldenv test inc int and sbb inc dec insl stos or mov leave adc sbb aas fbstp push aam push in lahf leave fldl shll arpl add addr16 push cs jecxz andb clc xor sub scas (bad) lret in cmc aas sub or lock mul loopne clc fstpl and xor adc mov xchg jg ret mov mov orb outsb sbb mov inc push test cs xchg jg xchg xchg insb push pop adc testl mov pop push jo xchg adc xor pop pop mov cmp inc outsb fs cmc sub cmp (bad) rorl aas aad and dec (bad) cs lods xchg inc jbe add jbe and popa mov loopne mov push sub mov mov mov xchg rcll inc cs popf stos push stos dec push mov cmp and pop shr add add cli adc push cmp jg gs (bad) mov jecxz xor fnstenv adc sub sbb scas shll das cmp fcompl or add scas ffreep xchg outsl mov adc inc jmp mov movsl (bad) fsubp pop sti rep icebp jl pop sbb adc sahf add xchg xor adc imul or mov push out xchg mov (bad) out loopne outsl lock or or sti test dec popa sub iret lock bound dec test les mov adc incb imul cwtl jmp imul inc jbe fcompl mov push fcom or mov daa sbb aad les outsb das pop adc push jmp fs ficompl and (bad) into cld jmp andl adc sub dec cmp decl xchg out bound jge es jb das mov mov repz or pop xor lods psrld movsb xchg jmp cmpsl add mov or shlb call mov xchg mov stos pop dec scas scas nop push sbb int3 cmp call pushf mov push push sub add stos mov fs repnz jbe jbe adc (bad) arpl repnz js mov frstor mov jg mov mov dec (bad) lods pushf out jmp dec test inc fnstenv jae jl cmpsl repz insl rol and fs test call stc es movsb dec andb adc test gs in out repz sbb ljmp aas lods scas lcall cli fs sub cmc sub add aad popa fistpll lret mov test mov add pop popa lahf (bad) mov or ja push (bad) adc idivl push rorb lea adc loopne bound or int adc lds mov cmp (bad) push jno fldt mov stos and push mov dec aad clc popa xor mov repz mov jecxz fld mov add push movsb mov mov roll jns cmp xchg sar mov sub mov mov push cwtl push push pop add inc ret daa push clc dec inc repz ret push mov jecxz xor (bad) sahf sti ss lea adc (bad) jbe data16 cwtl adc popf inc jnp adc hlt into fildll test mov outsb push push sbb xor out mov repnz lea sub mov jo call pop mov dec inc dec fildl xchg adc (bad) ds cld iret enter mov rep sub fisttp and (bad) mov lds lahf in jl scas adc test jmp add sub xor and jp (bad) xchg arpl mov pop paddsb xchg pop push (bad) mov sbb lock pop icebp and shr xor mov jbe test cmp add pop dec and repz js push hlt sbb aas cltd cmp pop dec xor add cmc mov xchg push mov xchg pop rclb push mov loopne std repnz xchg std sti aad ss fiadd sar mov das inc repnz mov cmp and (bad) cmp xor pop (bad) or add mov push xchg jns push sub (bad) hlt jae and sbb jns cli push jge loope test adc ds mov push lcall sub adc pusha lahf pushf data16 std repz outsl ret mov (bad) lods (bad) pushf mov rcrl cs push sbb cli daa jns mov dec lcall shll enter fistl xchg cmp jno pop lret jle push test pop popa xchg xor cld mov mov xor or pop mov push mov out mov iret mov push ret cwtl imul daa lods cmpsl lahf push jb arpl arpl (bad) push dec test test xchg mov push xor inc les cld pop lods lcall sbb dec cltd xor in jnp,pn shl jae mov stc fild jne int3 mov movb mov pop out jmp data16 addr16 dec ds rolb cmp mov (bad) or cli fsubl push lods push pop jnp lods push ds xor xor inc js lahf mov and push test rcll push pop adc mov or test or xchg scas mov xchg pop and fisubl (bad) cmp outsb fdivl pop inc stos jle outsl mov xchg fsts push rclb pushf sbb or cmpsl mov mov xchg push inc pop mov inc mov cs and test loopne cmc call and xor mov in inc adc imul inc mov or bnd mov mov stos popl cld adc sub ret inc (bad) lret dec push (bad) mov mov aaa iret cwtl mov mov ja (bad) jle mov fstl jb sub fildl push cld mov xor sbb pushf scas pushf (bad) jmp sahf neg gs jae xchg or ret push adc jge icebp cmp push push inc jbe sub lods and or mov lea and dec add add out cmpsl xchg lret fstl and mov jne fisttpll mov mov in (bad) imul push sub and loopne movsb jae repz clc daa jp add (bad) aaa ret dec inc pop repnz mov test inc mov cmp xor (bad) lock iret inc push add jge mov mov adc sub test sbb std xor add bound fiadd sub fcmovbe dec shrl ds adc dec mov aam push mov call (bad) mov mov push (bad) inc stos push out pop cwtl loope ds push (bad) mov push dec or adc cmp sbb xor cld adc fidivrl dec stos xor sbb cmp aam aaa cmpsb jb in sub jae lcall out shrl in (bad) ss sbb push loopne adc inc jp push pop dec into xchg sub aas cmp xor lods lahf mov inc adc data16 jb and jae loop in es outsl fdivs xchg mov cld push out popa shrb xlat jbe arpl or push xor (bad) mov addr16 sub sub sub mov fimull fwait xchg inc test in inc cmpsb (bad) and lahf in jmp xor push mov mov mov popa xchg shlb jbe mov int3 popl cmp test mov dec leave repnz mov adc jmp int3 and loopne subl pop dec sti cwtl fistpl outsl (bad) add push jb adc mov sub dec xor and test inc xor jae add inc cwtl add in xor xchg lahf fistpl jmp mov inc out dec es in mov (bad) in jne aad inc test pop pushf adc (bad) and lcall mov lds jecxz xchg cmc inc addl ficomp repz and rcr lret mov pop pop inc int3 fisttpl sti sbb aas mov nop cmpsl pop xchg adc pop inc cltd mov mov imul icebp (bad) cmc stc sahf loopne sbb mov push sub xor iret cmp test repz mov or jae push or push sbb lds xor popa jmp mov jp push cltd rol xor jp sub jge ror cwtl lahf sub dec jno xchg scas enter xchg mov dec sub aas add lock and popa and les sbb cltd inc adc mov daa in sub or fnstenv cmp push call cltd mov xor jmp out mov mov neg mov pop loopne lods push pusha xchg popf push fidivr and jle pop push cwtl dec pop adc test mov push push dec aas jp js pop mov dec rolb xchg fwait add jp js lcall inc mov xor sub jecxz les pushf stos xchg lds inc dec pop out push xchg or loope pop fstl shrl fs es fsubrp ljmp outsl xor pop pushf adc add nop rclb insl pop iret stos fsubrl popf or adc push push sub loope je idivl loop arpl jo push dec adc and push mov lock cwtl out decl scas cwtl cmpsl scas out jg mov cmp pop shlb push (bad) cmp push iret sbb inc pop das jl insl cld push pop pop outsb jp push push popa push test inc sbb mov adcb mov push popf (bad) cmp loop mov test jns addr16 or in fidivrl call mov pop xchg sub xchg rcll fwait push mov ss lahf out cwtl cwtl pop mov sar adc adc sti (bad) pop call ja in (bad) aaa push stos cmpsl pop jmp adc fisubr aaa scas or jb jl mov icebp rorb outsb jns sub insl xchg test lret adc addr16 mov repnz mov or mov or leave icebp xor scas lret mov jg movsl xor rcrl inc popf xlat mov sbb adc call push (bad) leave cmpsl stos inc xchg xchg pop clc mov cmp les xor mov mov lea xchg cld xchg push in or adc movb lods sbb fucomip fbld push (bad) iret lahf imul pushf icebp inc js hlt mov xor ja xchg inc pop push dec test out outsl pop inc popl incl inc cmp fistpll and push mov mov push loopne clc xchg push fcomps rcrb addr16 popf leave das ret mov fstpl push inc (bad) pop add push pop mov ret push ss add sbb dec xchg sub jl lods push js cmp enter pop cmp fisubl movsb sbb fisttpl lret aam inc xlat popf inc mov aad mov jmp sahf mov (bad) add pop xchg pop pop imul pop jns sub or xor add scas mov imul insb lods (bad) xlat jae aas mov fcompl out mov mov adc mov ror mov js cmp popf out push push fistl dec sub jnp fwait ja and cmp or cmp sub fistp push icebp push adc add mov or xchg dec daa add pop sahf gs adc (bad) or pop mov aad cmc aad adcl and xor sub push insl popa lods cmp (bad) notl ret push shlb mov pop xchg dec cmc mov notb fistp lcall rcrl fstpl mov fimul insb pop push pop sub call jnp lock fs add push add sub and add and pop xchg pop (bad) mov lret pop sub mov push push sbb jbe sti mov push jle pop in rolb shr fdivl pop popf clc add je mov (bad) pop mov pop push jbe xor xor nop and sahf xchg arpl cmpsl orl jle or es repz lret call push cmc mov outsl push clc mov movl dec ret imul jno imul pop test add aas mov jne jno (bad) pop inc clc adc ss movsb and iret add inc jno xor inc and fisubr jns and jae pop mov cmp stos inc in cmp (bad) out jmp push cwtl jo push and scas fimul adc pop mov mov push mov mov pop sbb (bad) pop (bad) (bad) jno pop fildll hlt call mov ret or push add mov add imul or add aaa inc mov xor mov (bad) xor jmp push stc xor out jae jge sahf mov or pop lods pop pop cmp mov lods cmp repnz mov (bad) xor imul lods fsubrs sbb cmp xor inc push gs dec (bad) insl das adc lret outsb add test xchg mov in scas fdivl rcrb push int xchg call clc iret (bad) fimull adc imul pop jbe adc xchg pop xchg lds adc sbb mov das insb xchg xchg xchg mov xor mov inc ds lea (bad) cmc xlat xor adc fimul push leave (bad) jle es jno cs xlat mov rep imul or sub out pop push stos or pop mov stc xor cmp mov ret fcoml (bad) incb sub les aas mov es fnsave rcll in pusha test inc xor enter mov test ja add imul insl ss mov add cli sub xchg jmp popa fstpt cmp mov push cmp pop push or lods cs arpl shrl pop jnp hlt pop cmp ret mov out clc push add mov fcomp int3 xor jecxz mov inc xchg mov cmp lret add loop pusha inc insl pop ja sbb shrb out sti es xchg or out (bad) cmp sub out mov arpl into inc inc lahf jb sti movsb jo in cwtl loope cmc cmp rcr outsb lret add into jp add add fiadd ficom outsb nop call sbb push jg xlat test sbb inc pop and call dec push movsl pop (bad) push lods and int dec into dec out inc imul loop mull or adcl enter xchg jo stos out nop dec cmpsb jns es or stc or jo xor (bad) mov push push cmp (bad) lods dec fsub inc xchg jecxz stos adc pop xchg xchg mov mov pop mov cmp push push in jl dec and stos lret push and cmp dec cmp pop xor xor loop jae insb push add sbb xlat fimul jmp aam lock test jnp pop push add pop push pusha add in mov push dec sahf dec rcrl sub dec bound xlat stos (bad) int rorb test pop xchg push sub xchg aas push test mov jnp loope (bad) outsb push lods dec push lret test inc inc sbb cmp arpl xchg sub inc push loopne stc sbb das inc (bad) hlt mov mov shlb mov jmp (bad) icebp xchg daa pushf jnp or or dec sub xchg mov push out jl add mul jg icebp pop add divb ds movsl pop fs pop addr16 push in mov xlat cmp ljmp pop insb hlt loopne (bad) adc imul sbb cmp rcrb pop cmp mov push pusha cld or dec mov movsb inc cmp lret xor and mov sub mov xlat (bad) test test imul or and lea xorw sbb int3 mulb movsb pop xchg push add (bad) xchg (bad) ret cmp xchg mov pop sbb pop inc aam push stc adc es push in mov push adc jp mov movsl movsl andl pop int mov clc adc jae cli iret sti and (bad) xor pop ret xor fcmovne stos lods inc scas std or mov ss ret add addr16 lods xchg addr16 ljmp cmp pop pop repnz mov fsubp ss xchg adc and pop or ret popa jmp mov orl cmpsl xchg fcom inc jo mov mov and adc adc xchg stc bound addl jle sbb jbe repnz rol jmp cwtl (bad) adc ja lods jmp daa mov je addr16 je mov cmp std dec addb mov xchg and cli loopw ja xchg add ja sub dec sub add adc rcr dec std insb mov adc inc xchg mov dec nop cmp push in jns adc sbb fisubrl inc cmpsb add leave cmpsb sbb pop imul rdmsr mov nop xchg inc adc adc sbb inc es ljmp (bad) std (bad) pop jo push insb (bad) mov mov mov sbb sti jl loop fstpt call lea mov dec pop and and sub cmp bound pop lods loopne ret sbb sbb jae jne movsl ja dec repnz jo imul xor mov pop jae call mov sbb addb imul ret (bad) lock jecxz pop cmpsl fnop mov jno jne pop (bad) nop pop data16 pop rolb repnz aas cmp icebp pop pop lds insb cmc mov cmpb xor ds mov nop movsl sbb fildll pop add push pushf lcall test in out mov loopne fnstsw adc and sbb dec cltd in pop xor test in cmp push xchg aas (bad) push loopne mov aam xchg fild sarl xor (bad) fwait inc addr16 dec inc in or outsb bound into sub into inc movsb jle lret pusha or in pop in rolb cld inc insl add jle push lret fs push aad test js and and add ds mov xor in testl mov mov iret inc lock rclb mov jl xor push mov mov ja fmull cmp imul jge mov push inc iret lahf mov popa and adcl (bad) stos and fbld iret imul loop jmp dec popf push inc data16 push pop and pop jo (bad) mov and xor jecxz outsb dec je repz xchg scas add lcall xchg inc in notl gs or add jb repz push sti (bad) es cld xor sub repnz lock pop sub mov cmpsb and cmp sbb xchg sbb je and dec out adc pop pop (bad) outsb xor cmp aam push leave mov aam mov (bad) adc mov cmp jecxz clc push add and nop imul jge,pt jno cs add jno mov mov jmp loope sbb pop push inc push pusha mov (bad) sbb push in sub andb pop sbb aas dec sbb (bad) iret pop aas in mov add or fbstp add jp sbb pop dec stc dec and or mov scas or xchg es movl sbb (bad) les repnz dec adc arpl xorl insb or xchg jg notb adc repnz pop cs sarl push out push push lods incb and rolb or dec and icebp fadds dec fs jle int adc fwait test (bad) cmp jnp jmp jp fdiv add pop push mov adc push mov leave sub pop jne (bad) (bad) mov adc mov daa mov jae inc xor dec sbbb push jle stc add int aaa (bad) push pusha dec mov mov cmc aad pop mov add dec ret rcl bound xor fdivp mov cwtl aam sbb popa (bad) cmpsl add stos (bad) repz jl sbb stos pop movsl pop cs xor sub mov (bad) sub mov test jmp pop aam sbb lods add pushf xor (bad) nop xchg sbb int3 xor repnz repz fdivrs dec add gs or notb xchg xor add mov mov out cmp (bad) mov cltd sbb or cmp mov mov push adc popa pushl add jns lea icebp mov and jmp imul add (bad) mov data16 lcall hlt inc das sub sub out dec sbb add xchg inc mov mov sbb pop xchg popa add xor push call pop pusha or test mov es and out nop cli cmpsl popa jg xor loope lea mov mov out xchg pop dec push fwait popf sub cmc js adc or movsb xlat sbb cmp pop jae or lock xor xor test sbb fwait insl cmpsb jp aad inc test jecxz das dec add xor xorb cmp (bad) jnp mulb cmp idivl test popf repnz lahf mov mov jo sub jnp cmp add je fdivs (bad) hlt mov test (bad) ja pop mov fist pusha mov bound jnp clc jnp mov mov push adc mov mov sub inc dec jbe stc leave test jecxz ret fwait cmc cli sub test mov cld outsl fdivrl stc rep lcall jb jl notb or adc inc enter loop mov les nop or cmp xchg add rcll ss inc add out pop cmc outsb les push lds fsts (bad) and dec nop pop jo pushf ds stc fucomp mov or mov movsl add sub or bsr mov sub sbb test fwait inc daa mov pop jp jnp movl outsb xor push daa sub loop add icebp lods jecxz xchg inc and dec add addr16 jno dec push ret push xchg mov xor mov cmc out ljmp aam and cld sbb test mov shll or in pop cwtl mov sub out hlt movsl mov mov mov movsb inc std test hlt mov jmp sub sbb mov sbb or inc mov cmc inc sbbl mov fwait sub pop pop push push scas out insl movsb jle (bad) sarb jne mov mov cmp pop lcall xor mov pusha jns jns mov inc xchg jno ret jl in (bad) mov in imul cmpsb js mov xchg out out push lahf adc cmp js cwtl fbstp cmpsl (bad) cwtl xchg mov cwtl and mov add movsl pop add ret cmpsb mov mov add shll mov nop ret and sbb stos lahf repz incl jmp and cmp pmuludq rorl mov jne in mov add pop dec stc sarb cwtl std sub mov sub aad arpl popf mov repnz iret dec rolb rclb inc mov mov je push add sahf adc push cli int3 inc fwait xor mov test jle aam (bad) hlt in aaa sar cmp mov mov out mull mov xchg jp mov mov testb scas nop in mov mov andb cmp insb pop cli mov cld mov mov pop xor es sbb cmp push loopne repnz aas mov daa sti pop and pop shrb and pusha cs jmp iret xchg shl movsl inc (bad) mov (bad) in mov popa pop insb out popa or ret sbb push push xchg or test dec test push stos and inc dec jge gs icebp mov in mov loope adc sub jnp jb test in mov mov repnz aam cmpsl daa js rcrb loope iret mov mov aam addr16 add mov adcb dec jle and mov roll in add adc jp popf imul lfs (bad) mov scas jbe roll sub cmp (bad) mov xchg call sub adc test mov sti xor jns mov jmp sbb pop lock test bound cwtl cltd (bad) stos movsl mov std and xchg nop jecxz lds xchg pushf mov scas mov sub call das jne push cld sub ja xchg and and pop addr16 cmpsl movsl inc leave dec pusha sbb pushf mov mov gs adcl jae ret dec jae popa xchg fnsave jbe dec pushf scas xor mov fimull dec push int aad fs shr lock insl jno das cltd incl in sub pop jno jb jmp icebp sbb out jp loopne repz fimul pop enter pushf adc mov fisttpll xchg jns std fcmovnbe addr16 (bad) fnstenv mov mulb inc adc mov mov mov cmp dec shrb mov push jge pop sub sbb mov lcall imul push cmc add mov jge and add push loopw adc rcll mov or push aas repnz mov add xchg stos or inc cmp movsb mov xchg xchg and mov ss or out lahf or sub xor rol ja repnz fistp cmp das lret loop xchg mov loope cld mov sbb jb push repnz mov push (bad) fist jmp fistpl pop stc and adc cmc cmpsl mov or pop add push in mov and jl pushf mov sti sbb call addr16 and scas orl lods imul add fistp lock sbb icebp jle sbb pop sbb mov ficom mov icebp testl pop in loop add popf jl stos daa inc inc and xor icebp popf push dec mov dec popf int3 add mov imul jbe lahf jp add sub sub rorb clc mov std mov cmp test xor or cli dec movb and pop xchg jbe sahf dec lret shrb fbld out jmp aam in frstor in dec pushf or orl stos orl xchg into (bad) stc in fldpi cmp adc adc sti xchg or sbb fldcw ss movb and ljmp daa call outsl mov dec sbb das ds ret xchg adc out mov xor push jecxz pop roll in xchg push aas loope and in pop sub jmp mov cmp pop jno dec lret sahf les add lret mov ficom shrd enter dec (bad) repz xchg popa dec sbb call je push jg jae outsb lret mov movsb popf or pusha adc inc sub ret (bad) ja pusha cltd push je sti popa (bad) xor dec sti or sbb movsb cmp xchg mov sbb mov jae and and notb rorl (bad) mov and mulb (bad) jmp notl int out lock sub test outsb test fcmovnu andl mov fs cwtl jbe push inc lahf dec call outsb dec mov pop jp in mov lods sub stos xor pop xor xrelease hlt or gs clc adc push sarl or scas addr16 inc adc dec mov scas (bad) push dec jne loope test ret fistpl jb jnp inc (bad) (bad) xchg imul sub gs jbe stos push fcom or add data16 mov in inc (bad) or addr16 inc cmc (bad) dec pop nop mov daa fcmovnbe mov xchg sarl push inc (bad) mov mull rcr lds cs lahf bound xor loope pop call arpl out cmc hlt into inc stc rorl movl mov jb test push jl test mov lods xor adc inc (bad) push jecxz mov cli pop jecxz xor jl mov push lods insl stc add movsl fistpll fdivl lret mov or push shl pop pop sbb stos outsb jp mov xor (bad) jb push sbb sti mov cmp insb mov (bad) jo repz jl shrb (bad) inc loope repz xchg movsb pop cmpsl xchg test scas pop inc scas cltd add mov dec ja jne cmpsb lahf push dec outsb pop and xor jne push ret test (bad) jno fbstp insl inc repz fstpl (bad) les adc push inc inc out jge out mov and push jnp mov jl stos mov pop orb and in popf cmp sub mov jp out pop in lahf pop icebp push popa xor adc lret icebp mov cs popf jae inc or cmp jns imull xchg std pushf and outsb pop dec enter ficomp popa jle bound or ljmp sub mov std lds sub out in pop mov and cli mov jge push (bad) jo hlt dec push pop in dec rorb shrb cwtl xchg addr16 dec mov out xor or mov inc jg mov xchg jg push nop xor push xchg xchg in shl pop out outsb out push sub add mov mov ss sub in scas mov mov cmpsl scas dec xor adc jmp scas mov sbb nop jbe gs xchg jmp stos push fcompl jle jns fldl mov or pop ficom mov lods xor test xor insl das (bad) jno or pop sub mov sbb sbb stc sub or pop mov repnz mov imul pop sub sub int3 andl sub in adc push pop stos mov cltd fbld scas (bad) int push test xchg and add xchg or mov cmp lcall jle add mov jo movsb mov pop faddl mov add pop out push mov dec jge out sub int3 mov xchg and pop ficomp repz xchg jo or lods icebp jmp in subl or ret mov (bad) push pusha or loop xchg mov aad lret and add stos push hlt rorl scas pop (bad) cmp sarb cli fcomps sbb lods jl les mov mov inc inc push jg jl push rolb cltd (bad) das or fidivl inc pop roll push sbb or fistpll xchg pop mov push sbb (bad) lret ds cmc rclb cltd movsl xacquire ss jle fildl sbb loope pop and popa sbb jns and pop push cmovne sub jbe push jae pop in stos test (bad) and frstor mov jne mov mov inc test adc add loope adc shl inc es pushf inc mov and cmc push fstpt repnz sbb sub leave or punpckhdq sbb inc push lods pusha xchg out popf pushf loope cmpsl out ss fildl sbb cmp add xchg stos xlat adc aam mov inc sub lret popf cltd roll or and lret jno ds rcrl (bad) sbb inc mov xchg xor in push jnp loop (bad) out mov dec (bad) stos cli (bad) mov jb dec fsubrp or (bad) fldcw imul inc sbb push orl push xor push pop repnz push icebp dec adc mov push int3 inc cmp mov xchg push cmp (bad) mov lahf mov jl test adc push cmp xchg (bad) pop jnp stos lds insl nop cmc mov incl cli aaa mov fwait popf mov xor in cmp sahf in aam jecxz dec stos nop shrb ljmp loope ja in jmp mov adc out and push push pop icebp xor les out inc repnz mov mov (bad) lcall lea sbb cmp popf mulb repnz shll lock xchg dec push pop mov add mov std sbb lods pop loop sti imul icebp xchg dec pop push les jecxz test ss jo push (bad) or add call mov push fild mov in jb cmc pop pop (bad) pop fs jne mov inc loop xchg leave xor test pop mov mov stc xor mov xchg mov bound (bad) es push loope mov xchg or dec faddl mov into adc jo mov stos lcall loope pop cmp push and push and ds pop xor lods scas xchg cmp dec popa clc mov push fdivrs inc mov cmpsl fidivr rcll adc (bad) les jp sub in scas roll and xorl sbb popa icebp lock lods or enter sbb (bad) js outsb jp loop jge push adc (bad) fcoms jecxz es leave adc cmpsl int3 sub push sub cs cmp lea and cmc push daa sub ja mov addr16 mov cmp stc add and and hlt cmpl mov mov arpl dec loope mov shlb cmp dec jne or sbb or ja pop and aas cld pop pop push ljmp sub or cmc jnp sub jmp negb mov mov leave (bad) push cltd pop fs out sub add add pop pop out sub sub into test add jo cs mov repz sbb pop jne dec push cld sub out add in (bad) aam or mov xchg pop jae lahf cmp jp addr16 adc lock and sti lock dec dec (bad) lcall popa int rorl sub ss jl lret xchg div lahf leave fbld push (bad) lods icebp adc dec movsb jnp pop dec dec inc js jmp jae (bad) fcoms sbb mov ss push jecxz pop divl je inc ret scas inc clc xchg repnz fimull pop adcl sti xor pop fisub pusha dec movsb jo fwait out inc (bad) stc pop dec cmp mov push jmp sarb add pop adc xor fsubrl into mov cwtl repz add inc sbb stos cltd rcll dec mov xor iret or popa daa push stos cltd (bad) fmull and mov mov stos loop lock int in ficoml push lock inc shrb mov add xchg xor jmp cwtl push sti cmp jo mov cwtl mov sbb lcall lock mov inc fistp and call in scas mov xlat and es mov icebp push in xchg and xchg ja sbb push loopne xor scas mov les xor int3 or mov push addr16 push jnp dec loope je jo mov and push pop push lock or inc fs or dec or xchg sub pop adc mov pusha xor push outsb (bad) push xlat add or rcl lret pop mov pop not ror (bad) adc clc mov sti inc stc pop fidiv ret mov fwait sbb arpl mov test lods scas in pushf push inc add jae mov push loop sub xchg out lea loop rorl bound iret mov xchg outsb repz xchg sbbl (bad) mov adc push daa (bad) stc jge jge push outsl xchg xchg xchg jno xor mov mov inc adc bound push xchg movsb (bad) lock jb xchg sbb xchg and inc jl dec jp mov in in and pushf sti adc (bad) sahf inc pop icebp push iret mov mov push out xchg stos stc outsb and push mov mov pusha fmulp dec adc cmp mov pushf mov rcr shlb lahf mov mov xor jnp pusha mov stos sbb out mov mov loope icebp mov mov cwtl (bad) mov add insb jno mov sub adc lea inc pop and xlat mov mov xlat popf loop cmpsl sti aas push jle cmp orl outsb arpl (bad) mov mov fnop xchg out sub push aaa cmpsl or cmp cli (bad) pop adc push mov mov jne mov jo outsb aas mov add lods ja (bad) jo adc lcall xchg (bad) outsl daa mov inc out pop ret add pop sbb jne mov aaa ret pushf mov stos out sub push cmpsl das and jl push aaa pop loopne xor jo or inc pop add jae in sub out fistl dec mov bound aas jge jge sub je cmp cmp adc (bad) rorb inc dec jnp movsl push xor pop and std pop inc cmp arpl out (bad) jae setle adc imul jne push mov sub scas fbstp arpl cwtl push movswl push push and das pop dec mov lcall push dec lahf xor mov test add mov (bad) adc and insl lea pusha pop call adc imul dec popf mov jg fcmovu popa dec lahf cwtl call imul xchg or pop mov mov int rorl inc cli adc fcoml push or push int push lods mov shll out inc lock adc or xor mov cli mov sbb outsl mov movsb ret or shll sub fldt sub and ret jge,pn mov push fwait jle cmp push fldenv mov bound je mov pop dec inc cwtl fnstcw mov leave outsl pusha mov mov mov jbe jecxz insl mov jg rorl sbb mov call pop xchg lret shll mov loop mov lods jbe adc and pop xchg xlat inc cmc xchg out cmpsl pop xor es sbb dec fnstsw fidivl sub repnz push and add inc outsb mov les lods pop xchg mov adc mov (bad) popa out loopne repz or mov movsl dec and adc repnz repnz aam icebp or xor xor pusha orb sbb lds fdiv repnz and and icebp test xchg xchg mov jle add addr16 outsl pop or xchg ss push cld jbe jge imul xor inc adc lret adc in pop out xchg lds mov repz adc inc mov loop lret inc lods leave and loopne das adc jb xchg push or mov sub popa popa mov xlat adc iret js in test iret push push xor push jl cmp pusha adc out in hlt outsb faddl enter ss sub dec xchg (bad) les and mov sahf (bad) lock test cld loope ret sbb and inc jne push or repz imul xchg std outsb movsb sbb clc mov ljmp aam xchg cmp mov xor popf push ret es psllw js sbb mov cmp adc mov orb cmpb es repnz jecxz jecxz cmp out cmp out or mov sbb lret cmpsb test arpl pop leave fcoms (bad) bound jne scas movsl pop pop lret push (bad) lahf mov add xor jl aam bnd es (bad) jb xchg decb xchg mov ret pop add inc add pop sub cmpsb mov out pop and ljmp mov in xlat adc push dec orb lods mov mov push (bad) mov mov mov push iret mov inc (bad) je sti pop cmp call and add inc pushf xchg insl cli ret pop (bad) jecxz scas jg fidivrl mov and daa enter jg sbb pushf inc xchg sbb popa mov ja inc xlat out imul (bad) rorl lds inc push jle push add xor mov lcall mov dec fcomps neg mov popa adc popa mov popf ret mov adc ss lret out push add inc (bad) flds addl hlt aaa jecxz lret xchg je insl mov dec loop xor add push xor jb or addr16 mov add int3 sbb inc and xchg dec (bad) xor pop dec cmpb ret jg int3 mov push jg (bad) cmp sub fidivrl pop cmpsb xchg iret repnz std jb dec dec sar rolb imul popa imul es repz (bad) push adc (bad) divb pop xchg stc cmc mov out ja outsb jne cmp or xchg mov inc stos fstpl sub mov hlt loop or psrld and repnz cmpsl xlat mov dec cmp jb pusha and push and adc and popa xor mov xor aas xor or into xor imul int3 (bad) push mov inc pusha les lock dec scas mov test mov lret mov and xor dec sbb or push (bad) clc mov jmp ret pushf jge lds mull int cmp rcrl in cli mov push xchg pop xchg mov xchg or fiadd sub jge jp xor xlat ja lds js sbb test das mov add dec xor (bad) cmpl mov test and inc jb mov pop int push pop bound mov jno mov mov mov es xor or push mov and pushf push xor (bad) jmp adc (bad) fstl mov lds gs aam shlb into repz cmpsb pop mov jb adc test (bad) mov lods (bad) mov cld or sbb outsb enter and jbe movsl decl or ds and stos insb stc sar ja lods mov jg stos je push stc push xchg lock test daa push in je,pt fisubr fistpll les xchg jmp sub arpl das imul sti sbb xor (bad) jle divb ret test (bad) jp or push jmp loope mov xor add mov jle repnz cmp iret or pop fs (bad) sahf and stos fwait sub aad popf jbe cmpxchg cltd or cmp push shrb mov mov js data16 adc ja pop lods dec lret pop (bad) out mov pusha cmp lcall into xchg rcrl shll mov movsl addr16 aaa xor or cs lret leave add aas cmp and lret (bad) cs pop pop lea dec pop mov (bad) jae xor cmpsb adc test jmp lock les jno fmull cmp jmp loope aaa outsl faddp sbb pop das movsb mov (bad) cmc pop mov lds pop scas xor jl (bad) stos scas jmp fcomps int sub xchg testb test mov dec repnz push inc sbb ror mov test or lods mov sbb cmovge ret call cmp je push leave popf inc or jge jecxz test lea (bad) js enter aad mov mov fbstp pop hlt sti cmp ds xchg mov inc repnz bound add or inc ficomp cs mov mov in enter xchg pop xchg enter icebp ret clc imul or pusha insl scas sahf call jae sub loopne faddl hlt push in cltd add mov lcall loope mov ret jb cmc loopne test imul mov adc mov fsts fcom or out jg push sbb cmp insl or ret or enter outsl sub stc js aaa mov shlb add push adc sub mov mov pop mov adc add pusha push int outsb fimul (bad) pop shll jb pusha shl popf jno mov ret pop cmpsb add sub pop sti jnp add mov sub fstl jno dec mov stc adc in hlt push call repz rorb push sbb sub jnp out mov jle ss (bad) mov push push adc jle xchg adc add adc dec repz popf (bad) pop cmpl xchg mov out lds xchg xor add dec or cmp repz pushf hlt and roll cltd jecxz ja mov bound test repz in inc pusha lea inc pop add jne dec and loopne adc fdivr (bad) jo dec sub mov hlt sub cmp dec (bad) stc add (bad) cmp cmp push mov cmpsl neg and pop jno out dec adc pop or aad std cwtl stos push sub ds or xchg sbb in idivb add xchg cs fstps add movsl adc (bad) dec das and dec dec int adc cmp out cltd pushf mov sub jge xor cmpsl imul ret iret je cmp dec inc mov pop enter xchg jno push outsb scas daa mov and into push sub lea dec xchg pop imul ds mov ljmp (bad) mov xchg sub insb jo jo repz out add fwait jnp (bad) clc js test or cmpsl arpl push lds lahf pop xor and push mov loop xor sbb test mov or push sti inc jmp and mov fs xchg dec push push lock int3 adc fadds inc jne sbb xor addps gs mov mov jmp xor cmpsl cmp and push push xadd les repz xor int3 push ss int3 mov and lahf pop ds lea pop mov mov std dec inc fstpl lods push inc popf (bad) (bad) mov jo out inc (bad) cmp fistpl ja pop dec into inc lea js sub adc loop cltd jmp xor insl pushf in dec repnz shr inc adc push xchg pop pusha and add cmpsb cmpsb repz fisttp je mov sti add add out adc ljmp (bad) dec je pop (bad) lods mov sbb (bad) lcall pop add xchg sbb clc daa fwait outsb iret jae jno int mov sub dec adc xchg push insb ret imul fdivl enter xlat xchg jbe mov pop dec dec or or (bad) (bad) leave lcall test repz insb int3 dec (bad) in into jns mov dec sbb mov fdivs sahf sbb es and addr16 in push cmp (bad) cmpsl loopne mov into adc mov mov push inc popl in jno xor jo inc mov cmp outsl outsb jg mov sbb adc sub mov inc mov and mov jae xchg idivl mov test out xchg mov mov sbb mov pop fbstp mov push loop jmp out fisubl mov sbb popa ss daa pop cltd pop cs and clc sub pop push sarb pushf lods mov mov sub pushf adcb rcrb and xchg in xor scas stos das dec std mov or sub aas lret cmc (bad) push lods push test mov js cmp fwait out sbb dec cmpsl gs add dec add lcall ljmp sub sub aas mov ja int stos test adc jns in scas and cmp push pop jl cmpsl add fildl xchg and xchg addr16 push scas jae (bad) (bad) je mov mov pop cmp fs out xchg push ljmp loope,pt lds enter sbb in sti sub adc xchg push pop hlt and add push (bad) push lods fidivl into jno push sbb xorl xchg jnp fstpl xor (bad) cmpsl pop jecxz iret mov jnp stos push sub imul mov push aas mov jmp out or mov sbb out pop sbb and xchg dec push push mov push push pop inc push and fistpll movsl xchg aaa and cmp xchg mov (bad) sub imull lahf dec pop cmc ljmp movsl inc ljmp and stos pop shll stos add inc mov into push dec dec inc outsb popf xchg or and (bad) cmp loope dec xor insb dec lds sti pop fs inc or (bad) js pusha addr16 mov jne xor ret std add test jnp cmc je push daa pop or xchg pop add sbb test and jne sub cmpsb mov sub add mov rcl xchg loopne push mov jae jo mov dec fbstp icebp jp ds xchg adc dec das xor jne xor stos pop popa (bad) test icebp fs xor and push rorb addr16 ljmp sub sbb dec jne pop into push push std hlt cmpsl mov or aam jge fistl sbbl sbb imul (bad) repnz adc lock pushf imul test movb jo das cltd rorl fstpl and cld pop mov (bad) mov jl dec and fstpt or out cmp aas imul add adc jmp or push or push inc dec dec cmp int3 inc and repnz mov push loop testl test add mov arpl mov push lock xchg cld and or add xchg pop cli cltd sahf mov dec ds push pop pop shr adc cmp lret sti movsb aas test decb in push xor int hlt fiadd hlt jo mov jl dec inc mov xchg mov mov stc dec xor adc ficomp lahf xor sub add int out imul rorb popf jno xlat inc and popf xchg mov (bad) aam mov pop (bad) popf sub pop mov dec sub cs aaa and inc clc push push (bad) mov addr16 lret insl inc or lods stos xchg push add out rol ss test or mov mov or lcall ficomp lods dec pushf and xchg loopne and push mov in add push lods aaa repz and jne add les adc in ja and ja mov adc gs subl xor jmp int inc in enter or fsubl icebp xchg pop mov je xor mov js cmpsl and stos adc mov pop cld dec and xor mull shr (bad) push insl adc jo (bad) pop popa aas inc (bad) andb sub xlat pop cmp mov push dec lcall out inc cwtl jl jne (bad) mov add popa adc mov push std dec dec mov dec decb mov pushf xchg enter and enter cmp out int3 or and jmp into cmp mov dec xchg cltd or sub sub add xor or ret push ljmp inc jecxz (bad) aaa mov in adc cmp xor sub xchg adc loopne xor dec ficomp jecxz mov fwait nop dec cmp ret shr cmpsl popa xchg sub push and xlat aad pusha jbe hlt lods out lahf dec push push mov dec cmp mov xchg test test or out pop cmpsb popf add pop (bad) jl jo fstl insl xchg push or loopne ljmp pop inc jl fsubl scas cs rcr (bad) pop in stos xor mov sahf adc fimul push push (bad) mov inc cmp lahf test popa jmp cmp mov nop push mov pop pop sbb sahf mov test (bad) dec test mov test jmp (bad) repnz jl call push dec es jmp inc repz inc out iret stos popf pop xchg sub dec call aad jno mov test and inc xor mov out icebp sub jmp pop out cmpsl xor clc push lock rclb pop cli push xlat mov mov pop fadd xor mov adc add mov test or inc outsl lods ja cmpl push mov loope je mov mov cmp popa loop imul mov out mov xchg xor in pop bound test jo jb dec sbb in sbb sar out jbe test inc add iret loopne mov inc ja sub imul movsl add mov push inc movsb xchg clc inc cwtl jne,pn pop sti and or add jp sub scas cmpl lret pop xchg dec xchg aaa mov (bad) add and push enter pop mov inc push (bad) fwait (bad) xchg inc cli jb shrb loopne cmp loopne and sub cmp in leave arpl test add lea push inc lahf lods push lods xor inc pop pop and xchg stc test sub adc loopne or aas mov test jmp iret enter out lahf jle xchg lret inc jo aaa loope dec in mov mov add (bad) aas mov mov jge add mov out or ja sbb inc lods push mov cmpsb cmpsb (bad) xor out (bad) adc jnp mov pop outsl les outsb jbe sbb mov jmp out int3 adc mov stc jl test sub pop shr pop lcall icebp cli rep scas incl insb lahf add in xor gs hlt out ja xchg insl cmp in sbb push out jnp xchg sbb int jle or and push push dec dec jb sub dec fbld int ja cli (bad) mov xchg jo jecxz jae sbb negl fwait pop lds or mov and mov sub out dec mov sbb xchg inc lret aas out jno or in cltd int3 inc sub (bad) repnz xor out (bad) pushf aad pop cmpl ss cmc dec es lock (bad) js cwtl jbe jnp cmpl jnp,pt sub sbb (bad) dec enter ficomp fisttpll and out mov or mov dec jae notl mov jb adc sub jl mov and cmpsb addl mov lcall push cld (bad) cld or pop cmc push jg into xor and jae lds jb add xor pushf dec xor and pop add pushf jp repnz cwtl mov lea xor pushf cs or xor ret xor stos mov enter mov fldt jae jns xorl mov ficom and cli push sahf clc xchg jb hlt movsl out push mov pop fstl push imul lods fsubrl hlt repz in aad cwtl push cmp jb jbe add imul and je add addr16 mov fsub in and lret inc xlat sub or dec dec dec xchg sub xchg adc ss push pop test mov mov push adcl je test xchg mov clc dec popa ljmp jo sbb gs push pop aaa mov lods jns data16 or into bound cmp adcl and aam stos jb adc mov lret mov mov xchg lahf sub ret sbb xchg mov pop cmc fwait iret lahf in es and adc mov andl int sahf jl fdivs mov xchg idivb xor mov jmp imul or lds push insl push jae push leave popf dec jnp pop cmp push sub jae xchg pusha je stc cmp push or pop sbb insl mov dec and jne test add jge hlt rorl loopne or lds xchg shrl in (bad) imul aam cli or clc jmp sub fidiv jle popa xor jp sbb mov out (bad) jle lods jns pop fnstcw xor fstpl pusha notb xchg dec jge fdiv push sbb and sbb xor push repz sub xor and mov icebp cmp pop stc mov mov in add jle out xor iret lods in aas mov mov jae cld jns fwait push mov test scas lods gs (bad) cs or fs movsl xchg mov push sub mov movsb ja fs repz mov addr16 dec fs movsl lcall pop jnp mov sbb in push in fsubs dec mov addr16 movsb and mov or incl je jbe je imull lahf xor push loopne adc (bad) daa test push mov outsl add mov push add cli popl dec je xchg and and int fstpl or adc (bad) jo push pop pop rcr jmp push jge mov inc inc movl loope inc jmp add out aaa cmc scas and cld xchg fdivl pop popf push mov mov test dec dec sub sbb mov test dec out je fwait js sub push jnp add mov mov mov das xchg out or mov shll lds insl out push mov enter cmp scas xchg sub and iret jae pop xchg push dec out sub aad in nop fistpl sbb scas adc pop inc add cli adc xchg fldenv addr16 and fist xor test imul hlt cli stc sub pop mov mov xchg outsb (bad) xor outsb (bad) pop std fcmovnb test movsb ret call mov fbstp ljmp popa or dec test inc push ret shll mov ja lcall ds stos lret fstpt dec int3 pusha xchg add cmpsl xchg sti movsb xchg test pusha and mov (bad) dec dec sti dec cwtl js stos es sbb jl inc xchg pop mov cltd sbb jo out (bad) mov fcmovnbe test mov push push leave (bad) adc mov or add (bad) mov int3 sbb or repz hlt cltd cmpsl mov outsl dec (bad) mov inc in out xchg roll and jns cmp adc addl pop mov out cmp xor mov rolb gs mov pop pop out pusha sub fidivrl into fnstenv inc sub scas mov dec sbb xchg mulb bound ret cltd mov leave data16 testb add outsb hlt push bound pop aad mov add sub mov inc testl enter in dec pop mov dec mov insl faddl pop aad iret mov enter pop cmp inc jmp jle xchg dec lods ljmp test and aad jmp mov add cld inc push les mov iret dec xor shrl push sub pop xor adc (bad) push ds xchg xor ja (bad) cli test pop (bad) in add add mov dec jbe cmovnp fsubr push ret xor int3 pusha aaa pushf pusha push icebp cmc mov lret cmp mov add pop and mov sbb mov lahf fidivr movsl cwtl inc or jbe,pt mov lea fwait aad xor pop pmaxsw mov ret push jl fs stos adc cmp lahf cmp popa dec inc fstpt das jbe out jg ds xlat imul mov cmp push pop int jp scas mov pop cmp push loopne lock inc scas mov arpl cli add jbe insb cli lods mov pop repnz ficom sbb std aad (bad) mov lds inc (bad) lock bound (bad) das dec xor dec cltd adc test adc roll popa in mov xor and xchg mov fmul sub adc mov or push fisttp aad add cmpl rclb pop sahf jns bound jg sbb adc xor adc insl sbb jge inc fisttp cmpsb push scas fs push in push inc mov test cmp cli pop mov mov lcall mov int3 gs mov leave repnz inc lret pop stos push dec repz xchg outsl mov outsb pop test loope xor dec pop jp (bad) sahf mov xchg jno les std mov adc data16 test loop std test push sub insl popf inc outsb dec cmpsl scas test call jbe cltd push pop jecxz mov sub aas push push (bad) pop inc dec adc and stos (bad) iret icebp in testl dec scas in or ja lods mov inc adc ficompl jmp hlt inc push loope popa sarl inc push pop icebp dec imul and mov pushf stc pop dec xor sbb pop pusha stos out push mov pusha les jecxz (bad) stos in xchg rcrl loope fcmovb sbb icebp test test jp movsb bnd cmp out mov test int3 cmp xchg enter or in pop jns gs movsb arpl and incb jg cmp lea lea inc mov icebp fidiv sbb mov pop (bad) sbb xor mov outsb push and jo ret cs sub sahf inc push insb inc dec sar fmulp add xor repz sbb lods pop repnz mov test mov jb inc out cmp insl cwtl sbb mov in and (bad) js mov rorl mov and leave aam sub movsb adcl push aaa stos inc and fcom out outsb add mov ja and mov fwait adc dec insb mov xchg cld add aaa cmp loope mov and cmp cmpsl mov mov dec mov cmpsl in outsb aas je push pop mov push xor add leave and test sbb fcomp xchg out push dec xchg outsb sub ret es stc cmpsb ds inc jno mov int3 mov mov fist scas or imul stc imul fildll aaa cmp in sbb sbb dec sub and imulb clc ds cmp inc cli xchg nopl jnp fisubrl adc pushf fs loope iret sahf stos enter mov in mov push loope mov enter jnp fnstsw movsl (bad) mov fbld lret jp in fucom lahf sbb xor cli or out lock mov dec sub jne push pushf fisubrl jle outsl adc or or jnp in adc inc pop (bad) loopne inc pop sbb add xor iret mov sub insb pop add adc jo or adc jp popa pop mov gs push push push or sub std cmp enter mov insb mov and enter fist push or shrl and sbb mov xchg addl mov add arpl cmp xchg lock aaa sub loope lret adc sti (bad) pop rcll cs mov mov icebp rcl inc mov fist push mov jp and dec add loopne aad fwait les lods in push pop pop (bad) bound pushf sti sub pop inc popf loopne xor les sbb dec frstor out jo das pop cmp ficompl int aas repnz rcr lcall mov fwait dec in pop jnp outsb ret dec mov lahf test fwait push rolb add (bad) add iret sub lret ljmp (bad) adc sbb movsb mov insl lods lahf xor sar lock jp inc popa push cmp mov cltd sub xchg (bad) loopne cltd push fs cmc or stos call sub incl cmpsl add sub dec xor xchg incb and out inc xor into xor cmpsl mov mov popa insb int3 jae jae jp cmp negb clc lret pushw dec sbb mov sbb or arpl leave fwait xchg stc sub leave lret sbb jb pop pop fidivrl pop xlat inc rorl (bad) jnp push pusha movsb mov cmp sbb mov xchg and daa stos adc repz call (bad) hlt push stc pop adc adc cmpsl test mov mov sub inc inc inc cltd (bad) mov mov sub xchg pop iret int push test shlb sarl cmp mov stos movsl sub xchg cmp nop pop mov ret popa imul outsl or out adc daa outsl mov movsl ds sbb ja stc jmp (bad) gs add mov std xor clc test pop xor and mov mov das sub mov xchg jge adc xor das xchg mov cmp xchg es mov add das sub (bad) stos fcmovbe sbb add pop mov xor push popa dec cli insb mov push fdivs xchg (bad) gs aas mov pop xchg jae push or jb mov mov sub adc aas iret pop test loop push insl test mov xlat xchg xor cmp dec dec mov jae lea pusha mov push out sub ret mov iret into push ja dec jmp adc cltd jns frstor lcall subl stos mov push mov pop or js ficoml inc fisubrl sbb xor dec out stos lock jb inc lret push hlt fldl stc dec inc mov push push mov or mov sbb in jp bnd cmp push mov sub jo add lret lret xchg cmp in or fs mov pop imul adc sub test ss xchg jb inc rorl push out lds enter pop rcrl flds (bad) mov sbb pop (bad) cwtl rcrl in mov mov xor clc and xchg out (bad) repz fldenv push xlat and in repz ret push xor rcrb sti mov faddl xchg push imul pop mov xor inc (bad) cmp outsb addr16 lods fwait movsb mov sbb cmp mov sbb outsl or push (bad) dec repnz push sub loopne scas dec pushl imull and and pop cmp xor pop inc adc and mov les inc icebp or int3 mov pop aam stos add mov fcmovnb push mov cmpsb mov cmpsb stos xchg adc adc mov pop rcll cs int3 movl rclb negb (bad) mov jbe push xchg xchg in lcall call jns sbb popl sub mov xchg adc jl and icebp in adc das stos jmp mov mov cwtl (bad) fldenv faddl mov or pop lds pop xchg push mov sub ss push test sahf jle sarl notb (bad) xor push inc cld add fstpl adc jmp hlt pop lock fs jecxz xor cltd jmp mov lods push cmp ss ljmp (bad) sbb ja push int3 xor in fidiv push cmpsl push lods sbb (bad) inc jle jns mov xchg (bad) cwtl sbb popf lds adc xchg ds repz pop fnstcw daa fnstsw xor jno cli fild loope js call out cmp jg inc mov mov mov divl repz mov outsb imulb pop test inc call pop inc out mov divl bound or outsb scas insb je push adc iret cmp inc sub mov cmp dec sbb mov loope movsl nop sub jbe mov cld cmpsb add jp inc cmp outsb push mov or das sbb outsb (bad) mov ss jae add scas mov gs add daa iret aam sarb xchg inc xchg mov sub lret push jmp test movl or jb mov lret adc jns jb outsl xchg mov rsm cmp stos sbb mov cs mov dec mov sti shll xchg push sbb lcall arpl scas je adc dec test dec inc shlb jnp xchg sbb pop dec mov or jbe clc cwtl mov insw sub cmp sbb repz jl xchg ret xor jne mov fidiv dec pop in iret mov bound xchg cs push push cmp stos inc dec add rclb jns dec js (bad) xchg jnp mov fild jmp and loop test fmull dec fisttpl jl mov shr sahf aaa (bad) push mov xor in pushf insb scas mov or je nop or (bad) push dec pushf (bad) aad shl xchg sub lret adc inc xchg sbb test or mov ds subl arpl fwait in int3 insb mov xchg push mov (bad) je (bad) push add adc mov test pop xchg add in (bad) jo inc rorl leave sti push (bad) push pop int fildl jns xlat lds in xor adc mov pop and out ror pop xor pop mov pushf out add loope,pn (bad) pop mov xchg insl sbb jmp xor mov sub mov and or jo sbb je addr16 mov dec enter xorl idivb mov jmp stos pushf mov cltd daa push (bad) nop xchg mov ljmp enter and cmpsl stos outsl mov push outsl push adc adc outsb or into cs insb xchg fist adc test inc jg pop mov xor aad stc adc movsl sbb dec fstps push out xchg mov mov jle pop push shl or push leave cmc cmp push movsl cmc sbb lds sub push jae ljmp in mov dec adc enter into xchg ficom ror or (bad) jae pop sbbl (bad) negb pop cmpsl cli fwait aas jmp sub mov daa dec push lret or dec push mov mov stos ret ds fwait aaa fdivrs inc pop push pop popa hlt outsl les dec cmp out pop les dec mov lds icebp iret divb sbb sbb mov ret mov clc ds out mov (bad) out xor xchg shll sahf mov or test pop in mov inc pop subl push inc xchg pop push mov xchg xchg xor mov faddl mov mov inc mov nop xchg xor mov loope lods scas add cmpsb pop movsb loopne sub or inc mov jge,pt add test ret jae imul aam gs pop cmp push xchg sub ss or jne mov inc popa push mov mov push lcall xchg cmpl ficoml (bad) sub or popa jmp aaa stc pop or inc (bad) rol xchg and mov bound popf pop sub fildll xlat iret pop std shrb test fdivp adc fmuls mov jg add cmp jmp xor jae xchg sub das call aam out fldl mov (bad) lods xchg push mov mov sub jae pop fcmovnu or call in adcb pusha test popf ret push (bad) (bad) (bad) pop jle or pop ret arpl cmp rcll mov or (bad) sub adc and lahf ss jmp xor (bad) cltd adcl adc pop xchg cltd cs lahf call ljmp stos fucomi sbb addr16 dec in push cld icebp iret notb std cmp mov mov das vmwrite imul movaps repnz and aad fimull insl add cs les and dec dec fxch xor outsl popf mov rorb dec push inc and adc pop iret addr16 cmp scas inc push mov xlat xchg xchg dec (bad) jno inc lods push xchg out or daa adc shll into adc clc loop fimull notb adc mov xor push push sahf mov inc pop repz icebp dec mov enter sub arpl enter push sbb sahf mov lret or jg adc sahf xor repz in into dec mov lods icebp lock in push vminss fmull cmc mov ss mov into in int3 mov sbbb inc enter cmp or call stc lds sbb pusha inc outsl sub out xor fisttpll xor mov push xorl mov inc xchg inc add inc (bad) (bad) push and cmc in stos repz out aad xchg clc adc (bad) push xor (bad) xchg inc inc pop ds cli shll outsb movsb add push mov (bad) test out mov rclb inc jno bound inc jecxz or add out repz pop popa adc das pusha outsb cmp lds fsts add xor in xlat add mov stos out inc sub ror jg pop cmp les clc mov fcmovb xlat dec adc test lcall sub iret nop add xchg cltd fs shll jl push das inc jae mov sbb std cmp or stc mov mov fistpll sub jl loopnew add bound pop jnp push push push and cwtl mov or popf push inc cmpsl shll push pop and adc gs mov call adc xchg xchg cltd sub cmp cmc nop (bad) dec int3 xor adc mov aam add mov scas mov sbb pop jnp xor mov or add dec push loopne arpl mov call mov lods int3 pop aam lcall ret xchg fildl (bad) jb and aaa pop sarl popf xor mov add pop ret out mov andl mov not sbb jl and dec test (bad) int3 xchg push pop jo push mov (bad) dec push jae jbe aaa test mov cmp hlt imul xor imul xlat cmpsb pop ds lahf xchg sahf js loopne leave adc inc cmpsb sbb dec (bad) pop and sub xchg aad ret and xchg popa rep test cmp or inc or aaa sbb cmp je mov bound hlt dec popf in insb pop jl or (bad) imul insb and (bad) mov (bad) dec jl fdivrs sbb dec test call cmpsb aas in sub lea std mov jb push and inc cmp in add pop adc (bad) pop xchg sbb jg mov mov pop mov sub inc sub repz lcall sub mov cmp fcmovne ja jg push call xor jg jge add push sahf and int aam xor adc add notl scas les pushf mov imul in popf dec pop lret ds lret push push aaa jecxz dec test jmp cmp dec mov pop jo rclb cmpsw loopne inc int3 lds pushf push cli sub popa cmpsl popa push ljmpw cmpsb sbb jns adc popf jno jae in dec dec js sbb pop xchg mov adc fdivrl sub mov dec ss push xchg leave or mov cmp dec push pop shll cmc call popa and movsb xchg jnp call and mov leave or dec shl imul pop dec fwait (bad) sti mov add ljmp bound xchg dec mov aad clc lahf xchg mov dec fs xor imul sub jmp clc repnz sub sbb xor rcl or sub pop mov xchg inc (bad) mov daa pop push ljmp ja jb je adc push dec dec out (bad) int cltd push andb mov loopne pop decl adc mov sbb push clc cmpsl pop lea mov pusha call xchg pusha cmp mov test mov pop jbe addr16 inc push cmp loope (bad) mov lret mov push and iret mov lret xchg mov sbb pop fldt sub xor xchg jle pop jno jae cld jg dec add popf or aam pop adc fnop incl iret ret adc aas ss (bad) mov or xchg hlt iret (bad) ljmp in outsb sbb (bad) lret sbb xor in outsb mov cwtl andl dec divb clc push popf inc pop and jne and cli (bad) movsb pop xor mov data16 mov gs rcll and mov adc mov es movsb out jne je out pop push rcll fldenv lods jns xorb sub insb ja cmpsl xchg inc imul push mov jo rclw xor lds pushf (bad) mov pop dec sbb xchg stos sub and out or sub (bad) mov fsqrt mov mov call xchg outsl ret imul mov cmp scas pop aam (bad) repnz (bad) lret add shrb rcll fdivrs xchg cmp inc adc adc jmp mov (bad) frstor add call mov mov in inc mov mov sub mov stc addr16 cmc bound sub stos test inc data16 mov mov imul (bad) ret xor sub sub (bad) cli dec sub fwait sbb xor add (bad) sbb repnz dec push cmc mov add nop push pop pusha sbb in outsb adc fcoms mov popa test mov sub inc mov aas ss inc fisttpl cmp inc jl lret (bad) jmp int jns xchg xor nop xor in ret xchg iret xchg jl push jle xchg loope inc test inc mov and and push mov mov fdivrl jo fcomps sarb push cmpsl push pop cmpsl xor out or cli cmp xor push pavgb jg and mov cmp das rorl xchg iret or fwait mov (bad) mov (bad) adc dec stos aam daa add jnp aas jg jecxz cmp push scas cmp or pop push xor outsl xor mov xor aaa push pop pop dec fidiv mov jno xor rorb or mov std pusha cmp fdivrs push shlb fildll call sub xor mov mov (bad) lds (bad) clc mov call lret pop lods enter and mov int3 bound fwait or je js repz pop nop cs bound and dec jnp xchg mov push push lret lret cmpsl int3 insb inc xchg dec dec outsl shrb fimul xchg psraw xchg xor pushf mov imul rcll addl inc inc jle aad ret and je ret out insl es mov dec arpl repnz mov pop pop adc enter mov js sbb orl std hlt loopne fdiv pop mov pop sahf fsubp movsl xchg and sbb icebp or jb xchg jbe lcall dec enter je pop inc lods dec and xor dec fsubrl out pop mov fild rorb sbb out stc and adc mov and movl and sahf xchg data16 mov cmp (bad) cli xor test inc mov mov loope cmp add outsb scas lods repnz xchg and lahf dec xor add mov mov jmp clc sub lret lahf add fnstcw sbb dec pop cmc pushw daa ficom aam aas mov negl loop bound ja sbb lret and int adc int push jmp push ret leave mov pushf adc xchg repz mov nop jp mov (bad) mov out xchg and inc bound ret ss add jb adc inc lret or jne adc (bad) xor pop negb mov mov xchg mov inc scas push sti stos jmp jnp idivb mov xchg xchg or inc and test cmp cmp gs int3 cmpsl scas jb add dec movb pop enter mov test cmp testb cmp add cmp into (bad) jmp test out das jle loope mov test (bad) cmp jge sbb jl out js adc in and inc imul arpl (bad) (bad) mov sbb scas mov jb sub lods push and sarl ss insb sbb mov and xchg add xor sub mov sub xchg adc mov clc xor rcrb and and mov idivb and add sub mov mov dec inc (bad) je dec add stc pop mov cltd aam mov xchg js adc cmp dec or dec add xor out nop push xchg fwait stc loopne dec dec hlt sbbl aad sbb jns push in inc ret add inc mov lods push mov gs cmpl loope sbb (bad) push sub pop sub cwtl or and pop (bad) leave mov pop jo cld and (bad) arpl xchg pop pushf lods pop popa ficomp jne mov or stos dec int3 push sbb and (bad) pop dec push or jle mov jmp iret mov in push outsb notb cmp pop cwtl icebp sbb insl ret jecxz jge rcr movsb sbb ds mov fadds stos adc push fs and sbb cli pop add icebp imul sub mov ljmp (bad) aaa ja icebp mov xorb mov xlat lret sub jle in sub test bound cli mov dec xor ret adc nop mov jp aaa jecxz mov imul lods outsl add jle ljmp lahf mov cltd sbb pop xchg ljmp lock lcall pop inc ss fildll and data16 push (bad) and jo jl fdivrp aam leave movsb popf rorl in lock pop mov mov and notl ljmp flds jge jecxz add out nop sbb mov jo sub test data16 inc fsts jg adcl push xchg addr16 and gs (bad) jecxz adc xchg cmp and clc pop test and pop or xchg ja jl ss sti push jecxz mov pop jg jno mov test fisubl jne aam scas push incb je cmp fwait push add pop int xor stc sahf cmp cmp test cltd test lea int jno adc xor lahf cmp (bad) lods xchg sub data16 mov pop xchg out outsb xor cld jo fisubl push mov add mov add sbb fdivr sbb cmc mov mov mov clc xchg cltd stc and ret aaa pop add inc sbb pop dec cltd imul pop rcr push lods jge mov aam mov cmp cli cmpsl cmc leave cmp sarl and cmp (bad) sub mov stos test push jp popa cmpsl jne fisttpl inc test (bad) jo adc mov sbb cmc mov in (bad) fwait clc scas push sub in loopne cmp xchg (bad) xor clc in lock mov push jp pop push gs mov mov pusha jmp jmp jg pushf adc mov push test mov xchg inc out mov push fisttp mov push adc pop pop sti fildl movsb pop dec iret in adc mov ret mov je jae incl (bad) and ret dec movsl adc leave fadds adc and xor xor inc mov sti xchg cs lods jecxz dec bound mov (bad) dec jae clc push sarl ret push nop mov lea test sbb cmp and loopne add mov adc out (bad) sbb insb and cmp cmpsb cmpsb pop (bad) fsubs inc nop mov fmul insb mov cmp cltd sbb push fisttpl (bad) jbe popa test lret sub fidiv and pop rclb insl dec ljmp jge adc sahf cmp or clc je mov pop pusha int3 insb imul lods std stos ret add lcall or popa mov movsl push push add out arpl fdivrl sbb push sub bound add outsl push (bad) adc rcll adc lea fildl mov jnp mov mov and xchg xchg jns (bad) fld fs pop out in jbe ficompl push loopne push xchg lods ffreep jno add movsb sub popa ljmp push imul ds push stos cltd or in pop in add fwait shll inc inc sahf push cmpsb add sbb mov mov pop (bad) rolb mov ss shlb in in ret jp pop lret sbb xlat jnp loop cmc insb fildll pushf dec or ss xchg subps stc push repnz outsl mov or cmp jge scas mov jnp aas xchg sub add mov jge pop into xchg stos int3 jmp mov subb fwait xor mov mov jmp inc sub dec xchg lds mov push sbbl add adc sub sahf icebp fsubs fbstp jno pop (bad) push add (bad) iret jno aam stc mov mov pop xor aad pop inc push mov pop out push iret mov rcll jg das jp lahf inc cltd cwtl adc (bad) sub pop ds dec pushf arpl fldl sub dec leave std xchg dec sub pop negb xchg inc mov in imul add xor movl pop and movsb mov (bad) jle fstps pop pushl sub orl dec push repz pusha aad mov out fcomps iret loop mov mov mov inc xchg push xchg pop inc mov pop mov ss pop pmulhuw (bad) jno mov leave js scas jb jbe ja mov pop pop mov std aaa or inc cmp (bad) push sbb es push addr16 mov out mov (bad) xor sub ret xchg jmp push pop or jne sub xor mov adc cmp ljmp add mov iret sbb add stos cltd or loope pop dec es popf movsl sub sub sbb pusha mov and movsb push push lahf adc lret in neg pop sbb cmp mov push jno stc fisttp jne sub push rcrb jae mov out cmp mov xchg cwtl addl xchg inc add cmpb jnp insl aam insb out sub jl in fdiv add push inc jg int3 (bad) out cmp pop das jecxz xor dec and gs push mov xor daa push xchg ret push xchg jmp sub adc in sub push inc mov xchg mov mov or mov sbb cs sbb out xor jns scas mov sub sahf repz xor push push (bad) sbb and mov stos jbe pop add aam cmpsl mov or into mov lret pop cmc add mull inc mov mov push addr16 jle push xor push xor xor cs call fmull cltd sbb xchg sti loop jo cmp jge and or daa ficomp add adc jp (bad) fcom sbb lcall adc je or dec dec xchg mov out out mov inc push mov insl pop mov jb cld clc repz sahf push cs lret push or pop aas sub insb and cltd mov stos fimul aam jo push xor mov in aam jbe or test cltd mov lods scas loope sbb and sbb mov mov rol jo mov dec jge adc mov cmp adc xor ficom adc xor sbb sub sarl bound lods mov adc fprem1 xchg mov (bad) mov icebp rol cmp iret cmp lret or shl push adc adc sbb mov push mov push add dec cmpsb pop daa inc in mov mov dec or faddl mov pop pop xchg fidivl ja test mov cwtl xor adc aas dec lock cmp test sti push dec lret or mov test lds mov xor add out aaa rcr and jno sar mov fldcw lahf xor orl cmp gs shlb inc (bad) pop loop dec adc lods xchg adc mov mov pushf cwtl fldln2 jno push xor xchg and ja icebp addb scas cmp mov (bad) cmp in mov mov nop test int mov lcall loop push and bound dec push jo mov jns adc push cmpsl mov and sub rcr cltd pop call (bad) gs push out pop xchg icebp imul jns es (bad) enter call mov popf (bad) push mov (bad) inc repnz pushf imul fbld (bad) (bad) repz jp lods xor xlat ret xchg aad jp dec enter lcall cmpsl jns sahf hlt fnstcw inc push adc xlat mov xchg mov addr16 or arpl scas mov and mov pop rcrb xchg (bad) push fmul mov adcb xchg or shlb in and pop jecxz call nop fldl repz fisttpll ja pusha loope sbb in jne mov dec test js xchg pop adc popf into mov sub or jecxz loope adc scas fwait inc xlat out ror or fnstenv pop or inc mov jge notl push or sub cli xchg dec jnp add jmp pop sti xor jmp mov shrl push mov movsl (bad) lahf lret and xchg in loopne lcall or pop mov out sub add xor fisubl jge jne outsl pop jmp jle (bad) icebp pop movsb cmpsl dec testb push add push dec dec in add jo js gs loop test pop in out sarl aaa add pop clc xchg shr mov sub cmp nop ljmp xchg push movsb add mov mov mov jno rorb data16 adc jmp in sbb sub inc aaa popa adc dec pop insb and sahf (bad) out jns scas imul lods (bad) sub push test std aam cmp repz inc mov leave (bad) cmp sbb lahf add push xchg xchg cmp sbb mov fxam adc jno cmp repnz xor out inc mov imulb popa (bad) aaa out pop aam pop xchg mov call push mov adc add and xor sti out out fwait std test adc movsb in repz imul out fistpll nop stos jle and inc call pop sub fmuls movb inc sbb ret pusha stos or pushf mov scas sbb popf pop rcl pop sub leave sub dec cld pusha andb inc jle jnp and (bad) mov mov fwait pop out adcl lods xchg ret clc into cwtl frstor lock sahf mov and aam mov or ljmp icebp mov sub rclb mov and sub mov rcrb xchg cmp lea pop divl ljmp push jl insl mov mov inc repnz sarb in jecxz jno les mov jno xchg js xor (bad) lock cld mov inc popa push hlt hlt lea (bad) iret mov push cmp cmp or hlt dec aas sbb lock je push push lods rol mov call and mov mov mov rolb cmp mov insl pushf jge mov popf cltd shll push jb jmp insl scas mov sbb and (bad) idivb icebp jmp fwait jge out sbb inc adc aas inc xlat icebp push ret mov mov sub push sbb inc mov bound pop (bad) mov cmpsl arpl jno push aaa lcall mov xlat repnz js stos cwtl mov xchg jecxz mov dec into sbb jno or or fistl fsubp test jo mov sbb xchg sbb mov mov push cmp movsb sbb into ss jge inc lods add int push mov aad sub ds pop jnp js jnp mov sub sub push ror fistpll sub sub pop and lods pop xchg lahf mov jb add xchg pusha xchg add mov push aas fistl push test dec push fstp fsts sbb mov stos mov add mov data16 mov aam or idivl mov jb faddp jg aad pop sub cmp pop rorl adc inc dec or aas fildll sbb inc jno adc aam dec aam loope inc inc out stos xor int movsl jecxz (bad) push ret loopne out (bad) cld call nop xchg sbb dec call jb push inc negl cmpsl mov inc fsubrl jns cld in sub push jecxz cld add ds cmp xor in loopne data16 daa add and sub mov ja or or stc sti lahf pusha adc iret xlat sub fistp pmaxub jnp and cmp stc in std clc or or or shlb jo (bad) jp ret into outsl cli movsl push and dec add out jmp or loop dec sbb enter sbb mov cs lds jo loope or pop in (bad) sarl lea mov jno add lods and dec adc and jmp mov push xchg inc inc jne clc jns das pop dec push jb push aas inc push cmp mov mov ljmp movsl sub fwait cmp adc pop add pusha je fwait adc ljmp add dec mov repz sti pop xor mov push xor cwtl cmpsb or adc push ret jbe mov popa dec cli les or jge imul jmp adc les out cmpsl xor xchg xlat repz in sti pop and adc js cmp lds mov bound pop int3 loopne aad cmp (bad) sbb or int xor (bad) out inc inc dec xor pop bound add das ret mov pusha clc aas lds cmovle xchg and (bad) sbb daa cmp inc fcmovnu loop stos icebp pusha das mov and mov sbb fdecstp ja stc dec (bad) mov pusha (bad) fcomp mov push rorl lock jnp push bound pusha stos pop xchg insl mov push or adc mov lcall mov scas push sub xor mov and mov lahf fistl cwtl test arpl dec cld rclb jae mov mov (bad) adc leave loop sti imul arpl mov fisubr cmpsl dec es pusha inc mov cmp adc std ret and test sub mov cmp nop fcomp xchg (bad) mov mov xchg cmp mov push fxch xchg jmp xor and test mov mov mov aad mov faddl je mov cltd push inc push jbe nop notb jae inc mov dec pushf rcll jg xor lcall dec sbbb fs inc or or jge sbb mov push loop ret (bad) pushf mov jo mov dec xor inc xchg push sbb loopne leave jecxz lcall lcall xor pop xchg or mov ss sbb pusha in icebp xchg adc and cmp mov mov and add jae cmp insl pop cmp je xor mov push jg into leave icebp sbb arpl insl (bad) sbb and push fcomp mov sbb (bad) push pop icebp ss (bad) (bad) xor rorb leave lcall aas inc leave jecxz xchg pop xor sbb pop loop pop pop sbb (bad) mov mov test movsl jb outsl mov push test mov sub xor das xchg pop ja xchg mov setns xchg inc ret shr xor push push adc loop pop cmc mov notl and in push dec aam sbb push jo xor push loopne icebp cs aam (bad) pop js in (bad) push shrl adc andl cmp push cltd inc cmpsl xchg sub xchg or adc add push dec xchg or mov and ds mov stos sub cmpsl test mov imul add imulb mov push repnz rolb push imul or mov mov cmpsb pop add add rep clc dec xlat adc cmp dec fs pop iret js mov mov or push je stos test jno mov stos rcl sbb (bad) (bad) mov mov sub aam icebp rol popa inc mov pop jo xor enter mov ret push andl aaa scas add push cmp jno leave push loopne mov dec lock sbb bound lods pop les xchg sbb outsl or mov pop lods in add pop inc cmpsl fistp lock clc out adc rorb push adc int push pop int (bad) sbb test jg popa adc xor add je (bad) adc sub test sbb ds and lret arpl add dec push jo mov push sub (bad) loop cwtl add dec sub ret mov test stos push movsl xchg hlt (bad) pop jb (bad) mov or pop jge outsb mov mov popa pop mov testb and aad sub cmpl mov dec xor jp add (bad) adc adc push pop mov hlt andl dec lcall xchg (bad) test add stos inc mov mov xor repnz xchg cmp mov mov or push inc xchg clc sub mov mov jl sub cmp dec stos outsl cmpsb decb lea push cmpsb lret cmp cwtl jo cmp push add and xchg fsts mov int3 sbb xlat or mov sbb xor aad xor mov jb push fsubs mov ja subl xor pop sbb scas cltd test add mov cmp or pop subl sbb test bound (bad) testb dec aad jno or out out sarl arpl (bad) jle scas ds pop (bad) lahf mov add or sar repnz mov mov insl jbe pop icebp inc add (bad) push push push lock rorl add push push iret popa cld outsl inc push inc push cld loope rolb mov xor rcr (bad) cmpsb adc push fnstenv lret push scas dec roll ret xchg sbb mov iret jmp adc cmpsb dec (bad) xor push arpl sub mov out daa out dec arpl add mov and scas cmp fstl scas sahf (bad) jbe imul movsl imul es je,pt cs cmp pusha dec negl xchg nop lret mov inc push jge push imull add jg icebp adc jl mov lock inc clc ret adc cmp dec addr16 sarl add cmp sub out adc sub lods in mov pop rcrb inc das add mov jae out fsin (bad) adc push mov lret data16 xchg mov aas es lods jne adc add mov clc mov (bad) fcmovne jo movsw (bad) jbe and or repz enter loope mov inc shr push cmpsl xor jno repz push pop pop (bad) xlat xchg je add mov mov mov adc push movsb jnp jp lods pop xchg inc inc dec jne xor push sbb mov mov mov mov dec lahf test je shr pop movsb push (bad) push loopne je or js push (bad) jl jecxz test pop sbb pop pop loop push sub rcll test stc and cmc jne cltd ss in nop push dec movsl or or fwait cmp and ret add mov sub sbb dec jns aas leave mov fstl sbb test leave and xor jp cmp xchg mov adcl or jns mov push lds xchg data16 cltd add daa nop scas lock out pop push dec subl push mov mov adc dec mov mov (bad) mov sti (bad) xchg jne inc xor or mov arpl jp adc rcrb xchg xor mov jbe enter or xchg inc movhps out ret lret xchg mov rolb int sarl add mov xor pop or pop sti test or jb leave ficoml mov into pop sbb mov aas lahf dec pop aaa jb scas out sub js xor stc nopl push stos inc cmc scas pop mov orl out gs mov pop scas imul inc sub (bad) imul dec add stos mov stos push sub hlt sub pop or fnstenv jo je add adc cld dec cmp lahf add xchg out mov lds das add jle shll mov mov or cmp pop dec add repnz inc sub inc add mov mov or jecxz inc addb rcll or mov stos mov cld cwtl dec negb pop jno push jge add adc shrl pushf jg int or adc in ss lods pop inc ljmp mov repnz pop push lret mul sahf adc lret lods ja add sti sub aam jb aam int3 cmp insb rorl mov loopne adc push pop hlt in push lret cs cmp xchg frstor sub jg push or aad cmp mov popa pop repnz adc jns sbb mov adc (bad) pop (bad) mov inc sub (bad) cmpsb hlt ss lret aam mov das xor pop sub jmp xor lcall dec xlat mov jle,pt pop jbe sti xchg sbbl (bad) fs lods call arpl and dec and adc sahf xchg jne lcall cmpsl add jo pop xchg mov (bad) sub sbb xchg inc cmp ljmp dec (bad) xor cmp iret lock push xchg mov sti push xchg xor inc pop inc cmp pop push addb jmp bound add mov out adc mov pop fstpl (bad) mov xchg sti roll sub mov or push xchg push inc mov xchg jnp testl inc mov cltd jae repz jecxz inc cmpl repz or and fsubs imul hlt mov mov push into in lcall adc fistl rorb rolb mov add mov or mov fstpl inc xor shlb icebp add jns pop repnz (bad) mov cmp adc dec (bad) js push in mov xchg sahf ljmp cs vmwrite or and sahf mov mov push jle pop pusha loope sbb imul adc add incl push bound movsl jnp ret daa inc add mov sub loop mov in and pop xlat (bad) pop (bad) je and mov iret ret repz sbb or ret push mov (bad) popa push adc and in inc push test es cltd mull and mov jl mov dec sbb xor jmp inc iret inc jge rcrb xor inc push add push adc dec and sbb mov test insb mov test lret ds sbb mov sbb add mov jnp fisubrl icebp dec or sarb outsl or clc mov jnp clc inc push cmpl fbld adc lahf xor inc adc repz xor xchg inc (bad) scas push in push out sub sbb (bad) lock jo inc ret add gs test call sbb ret les xor push leave cmp inc scas pop cwtl jge lahf dec jno and and ljmp cmp shrl cmp xstore-rng cmpsl ret cli ss jno popf push test outsl lods popf add cmp testl cmc dec aas ds adc pop sub test mov mov xchg add shrl cs imull dec fdivs pop cmp sbb mov dec imul dec push int3 push imul xor adc data16 aad jbe add sub inc lock insl sbb shll jecxz pop movsl jne stos arpl (bad) jl xor je sub jl in sub dec int3 int adc loop add inc popa cli dec test clc scas and repnz xchg movsl sbb iret mov xchg repz pop inc loope (bad) xor or push sahf (bad) jne xchg lock dec cmp dec icebp pop fcomip ret mov rcrl pop pop scas outsb dec movsb jp cmpsl mov add addl jnp (bad) cmp inc test scas test test and test sub mov add es test sarl push inc xchg (bad) cmpsb mov jae rol xor jmp jo (bad) es mov imul out popf cmpsl dec xchg stos jl xchg mov dec clc add daa adcb (bad) jl jne push sub jp mov test into mov jno dec daa clc sub or (bad) repz aas xchg dec cmp in gs jb jo nop add adc sub mov sbb test ss dec mov je cmp cmp pop sbb jnp sub mov (bad) sub sbb push mov hlt roll (bad) lcall jl rcrb les cltd jecxz fiaddl loope or jnp loop in (bad) je adc lods jge xchg scas xchg and xchg push jmp dec out aas sbb mov mov add loope cld flds lock push xor lds sbb (bad) pop sub cmp dec jmp mov inc (bad) mov pop bound lods lock pusha add sarb sub sti jmp shll xor mov xchg lcall fbstp or into adc cmp mov adc xchg (bad) movsl shrl stc mov fwait and lods aas (bad) icebp jl bound stc lea sbb dec jno xor out lds in dec xor jecxz pop nop leave es mov inc sbb dec xchg pop mov xchg add mov test arpl lcall sub fcomi push push mov int mov sbb ror mov in xchg aad or mov add mov xchg cmp lret rol adcb xor sub enter das into mov jp push lock add test nop mov xchg aaa lds and test pop push fsubl jb jg (bad) push add not xchg cmp jle out sbb lods fmull fsubs inc jnp divl mov cmpb adc stos lods (bad) lahf scas push push sbb xchg insb adc incb mov ja mov and jnp je dec mov inc pop shrl popa test or fsubl xchg fmuls inc js ret lcall mov sarb (bad) or lret push inc arpl and xchg xorl movb jo inc dec jp outsl aam out sbb xlat push mov out bound cmpsl and xchg mov push mov scas cli cmp mov (bad) in in xchg sbb cmp push inc std pusha adc out pop fild push dec pop jp add mov pusha xchg mov scas mov in aam loop mov sti mov enter inc or dec aad aad ja sbb sbb mov jp lds neg nop int3 sbb xchg outsb test mov cs stos lret imul popa lret hlt into sub enter (bad) jo bnd dec sti in dec add inc jne arpl pop and xchg lds push pop xlat fwait ljmp mov mov mov test xor inc pop jnp or cwtl jecxz lret mov faddl push sub popa or jmp xor fdivr cmp pop fist std inc mov add or ja mov inc in mov jl mov cmp jno pop shlb xlat pop ret fdivrl inc jl pop mov sub push loopne ss or (bad) cmp iret in lods lret mov in dec adc hlt arpl addr16 dec or mov xor pusha fstl jmp arpl cmc xchg and fwait push inc andl or loope gs cs lret xchg mov adc ss pusha (bad) outsl lahf cmp ret xor inc dec in inc mov mov sbb sbb imull rorl adc stc xor xchg cli or push or test adc dec shrl or xchg icebp stc mov jl mov cltd adc fdivrl addl pop sub mov icebp in into clc or push lea (bad) dec insl cltd mov repnz movsb lcall out iret daa pop popf sbb icebp xchg enter aam mov and inc or ret movsl jp imul es fistpll pop aas jmp fwait add jmp test sbb adc add add inc adc mov shrb inc adc (bad) adc nop cmc cli pop sub jne pop (bad) sbb lcall inc arpl ljmp adc fimull cmpsb mov cmp inc (bad) lea jg xor and mov iret add adc scas xor fs cmp inc mov out movsb pop jecxz mov lret pop stc ljmp je pop imul test inc stos inc push sub xchg imull sub sub jp ss sar outsl inc cmpsl nop loop mov mov mov jne test in hlt lods (bad) jge stos mov pop stc ljmp pop and icebp int mov mov add (bad) xchg xchg lret push bound jns (bad) in stos jns mov xor rcrb mov in xlat pushf adc mov ret jecxz call mov push bound xor or aas int3 lock sub imul and sbb mov mov cwtl mov test fwait push xchg les icebp imul stos dec push inc loopne mov xor cmpsb lods repnz je fs mov push cmp lret or xor roll pop test or jp jmp rcl push mov lret je clc fnstenv aas cltd imulb (bad) xor aad icebp inc lods addl jle cltd outsl cmp push (bad) xchg arpl mov stc adc lock ret or xor leave pop jge inc pop clc adc arpl stos push dec iret adc jno lcall pop outsl loope pushf inc mov popa test add cmc stc les lcall dec loopne dec or loopne jle inc jg jmp rcll loope sahf js mov bound dec xchg cmpsl insl sub xchg push lret ret fdivs (bad) or push stos mov sbb repnz call dec jg inc rcl imul xlat jo pusha ficompl or or add in mov ucomiss sbb push jmp dec xchg jne sub jmp stc mov loop pop sub pop stos add mov push loopne add or (bad) cli inc popl dec fs mov movsl lock fstps lock (bad) (bad) mov jmp pop jne fdivrs incl mov sbb pop adc hlt adcl fnstcw mov cs loope add movsb mov jno fmull push jp mov dec jmp ret xchg xchg push mov jl push (bad) xor cmpsb or aas lret cmpsl into (bad) mov jle in sub cmp es xchg xchg push mov dec lods mov das pop out and add sub mov movsl dec cmpsl dec (bad) out pop push stc imul lcall adc sbb inc pop mov outsl cmp sub rcrb xchg data16 push stos adc lcall movsb aas push cmp es dec movsl popa repz ja jns mov mov pop inc xlat stos gs jns cmp lods pop mov mov or cmp xor fld1 aad mov mov mov mov popf fbld sub out test out or jne dec inc out cli add or adc add rcrb loope (bad) ss nop push lods sub dec cs push xchg mov xchg scas pop pop mov cmp mov shl xchg enter rolb and int3 (bad) mov test dec mov jge repz adc xchg adc test movsb jns into adc mov imul int3 mov sub mull pop sbb (bad) jno lcall popa push cmp cs aam xor mov or push push mov xchg xchg mov or jg (bad) jo sub outsl push jl jl mov int xor stos mov (bad) jecxz jae mov divb faddl mov inc pop push dec pop jl mov push cmpsb xchg xor jecxz mov or andl stc mull pop lds in in pop fisub sub sbb mov and sub push fstl push jbe xlat hlt cmp inc mov std add push test jg sub cli js add ret popf or pop in push stc sbb mov and cmp sbb mov push add enter push lret jmp inc adc and aam lods xor xchg or inc inc add ss (bad) lods icebp xor jo fdivrs push mov mov jge fldt lret xchg inc pop shrl push repnz push add xchg add xchg sub repz in mov xor call fdivs repz or loope (bad) fadd pushf lods mov scas mov mov push movsl mov jmp scas and (bad) cmp inc mov ret in stos mov push cltd (bad) leave jns aad xchg pop lret stc in xchg dec jmp adcl rorl push gs dec dec mov popl xor call sbb mov mov xor pop ret xchg ds mov enter (bad) arpl cmp sub sbb (bad) push jg sti bound das sarl in mov xor (bad) je or repnz sbb cmp sbb push (bad) (bad) push jbe sub je pop std add scas xchg jae leave adc in ljmp mov sbb aad jnp cld mov loope xor push push pushf push hlt das mov xor xchg rorb js int3 inc popa sbb push jnp push push sub cwtl xchg cmp xchg lods in aaa mov mov stos mov imul movb cwtl lret cltd jne xchg push movsl cmc and mov bound xchg and inc pop ret repz cmp mov insb imul push jns jmp not xchg xchg push inc and lea inc add gs clc mov sahf cmc movsb popa test inc mov xchg test outsb sbb mov mov imul dec inc or adc loopne adc (bad) test push hlt out xlat das mov ss imul mov or xor push cmp sub out xchg inc ficoml pop pop xor sti js mov inc ds in xchg aas (bad) std and bound cmp xor in bound nop stc daa and xor add sbb mov push cli fnstcw std jo add add or js icebp inc jae cmpsl adc out test sbb xor add xchg cmc out in push xchg cmc fstl scas addr16 clc insl nop jae jns mov movsl out test push mov out std xchg lret cmpsb jp xor fdivl inc xor cmp xor adc inc add xor (bad) push imul xchg test inc sbb ret das mov mov mov pop clc fs lock cmp and cmc adcb in outsl cltd test call push stos test cwtl sbb fmul hlt pop jo fs mov adc push pop es xor adc std je in push adc and add cmpsb inc gs mov xor push or jmp insl mov js mov xchg daa inc xor repz mov jge lods cs jmp sub pop les hlt xchg hlt fucomi jae xchg add out aas daa stc jns adc mov xchg gs mov or lock imul ja out dec les aaa das outsl js int3 fcmovb xchg stos shrb icebp stos in call jae fisubr lods das sbb test imul pop movsb mov add sahf and dec int3 icebp or lea aad jne sti test hlt decb jle and push push incb dec hlt bound fwait sub dec nop xchg add insb jo xchg out scas cmc movsb repnz mov xchg lds ljmp stos sbb cmpsl xor xchg push je pop test or and sbb push sbb mov and add mov lock jg idiv ret subl loope mov xor xor imul hlt sbb pop jns inc idivb add (bad) xchg jp imul movsb cmp add incl ja mov add jnp pop daa (bad) hlt mov xchg dec mov pop out hlt aaa dec and (bad) and xlat jae movsl jns hlt stos pop les sbb fcomps dec push ffreep mov repnz addr16 sbb mov inc adc and jnp stc xor jbe and inc dec out ret rcll insb data16 sbb mov lock outsb clc arpl dec dec or mov enter fsubrl xchg or movsl test iret mov pop iret cmpl cmp mov arpl sub loopne pop sub cmc loopne push cli push sub arpl (bad) int3 test xchg push pop in fidivrl in rcrb sti jmp (bad) (bad) sub fldl2t xchg jge in stc int3 mov test and adc sbb dec aas loope inc push xor sbb xor call je mov xor imulb ret (bad) and fistp xchg data16 psubsb jo out das xchg popa xchg adc mov leave mov lea jno leave dec mov roll icebp push stos jae add pop sti mov push movsl decl test jl mov xor adc stc push xchg gs pop hlt or or jmp mov cltd daa cmp inc arpl pop rol int3 or mov inc lret push mov push sub inc das std aam mov add pushf add (bad) rcll repz clc lds xchg jl out or bswap or aas daa cmp xor xor adc adc and mov push js xor aas adc outsb mov add data16 sbb mov and fidiv sbb cmp inc aaa push push das xor adc sarb dec sub inc mov into inc js ljmp mov mov adc mov or mov mov inc mov aad mov or xchg ljmp lds pop popf push or sub cmp stos ds mov jg push push mov shlb dec ds cmp mov push mov fldcw or pop xor mov lds fldenv mov stos xchg mov into pop dec mov (bad) adc push mov stos je mov in or loopne repz cmc pop into mov jo enter movsl movsl mov pop fwait lea mov enter lret movsb lret cmpb fxch fstl int fwait and cs outsl pop lret pop push stc ror jno mov cmp dec mov pop mov imul or jnp in test dec aaa iret les in dec jne rcll add sbb push cmpsl sbb in sub hlt lock daa shrb pop mov mov hlt loope adc repz lods mov and test hlt pop lods or adc leave fisubrl push adc or lahf pusha icebp test (bad) pop sub add pop mov and mov rcrb loope pop and fmuls divb imul adc xor sub or inc xchg adc mov shrl inc xor out mov pop cmp inc arpl xor xor push sbb aaa sub (bad) (bad) lods ficomp jl cmp pop mov xor js xlat lret je inc cmp lea mov push pusha xlat pop xor ficomp mov push inc and inc loop mov pusha push dec push pop inc imul in fdivl inc iret sahf popa lahf mov ret jmp rorb sub cmc lods xchg aaa xchg inc adc daa inc bound pusha or dec cltd rcll jmp (bad) andb mov out cli and ljmp fwait negb and cmp add and xchg push pop and out sbb (bad) dec daa and push aad dec shrl adc ret sbb cmp xchg sub push in add imul mov stos fcoml daa pop stos mov jb or flds or fstpt xchg cli xchg fist or ja mov xor jns (bad) adc lret sub jbe outsb mov pop imul aam mov mov aam lods fs cmpsb roll sbb dec inc daa andb add inc roll mov push push sbb xchg xchg push (bad) add repz pop int into pushf and shl lds and xchg fisttpll stc inc cld dec inc test inc daa dec pusha xlat ljmp or scas adc adc pop lret cmp mov jae adc adc or xchg outsb fwait push mov and xchg rcrb adc nop iret es pusha and les in add mov call mov es ljmp loope cmpsb push das out jg xchg xchg or out stos push cmp mov adc push dec fistpl imul dec popf and das cli gs std xchg ljmp in and xchg xor mov jp push (bad) in mov ja cmp inc in sti outsl xchg (bad) push sub scas fadds repz xchg xchg and mov pop scas popf jno,pn push dec sbb mov cmp scas mov sbb pop enter push daa or pop ret jns pop lods ljmp clc insl (bad) test jg push xor xchg or push xchg test sub mov push enter mov xchg or jmp mull lahf cmp mov addb or dec aam jmp inc inc push pop add out aad je xor push pop lods or dec jge mov popf mov xchg sbb pop sub arpl (bad) iret (bad) mov ret xor ror push dec adc movsl push xor daa pusha nop movsl jne xor push bound loopne mov lods and lret jns mov pop imul sub cmp mov int3 or insb fild sbb xorb test pop mov divl xchg (bad) test push nop or stc mov push cmp push out jnp jns call imull pop add mov out dec lods sub mov mov push mov push scas aaa mov mov and sarl sbb mov in or hlt sahf je jno push popa jb xor push mov push pop xchg mov dec test into rorl ds push popl sub xor bswap dec sub test in ja inc repnz inc push pop fcoms mov cmp push pop movsb dec sub gs push repz sbb sbb and fsubl xchg les add jno out aaa ja insb xor or sbb ja out add jmp aas dec mov push cli lret push test jno das pop push fidivr pop cmp sbb in xchg push sub xchg rcl mov ret insl adc inc orl or sub add mov dec mov fsubrl lock jp aaa push into push ficoml lea xor xchg mov jecxz dec es cmc loop jle popl jecxz aam pop ret call mov rcrb xchg mov das divb mov repnz sub jl mov push mov and rorb sbb outsb jmp mov fdivs bound (bad) mov pop es ljmp sbb cmp lret sti ljmp cmp insb sti daa daa arpl gs jl out test mov dec lods clc js cmp jl paddusb dec mov hlt mulb inc shr insb add fwait popa dec aam sub sarb aam jmp push sub dec lret jmp pop or das clc imull sbb loop loope xor cmp push setae sbb pop test jne dec cmp xchg das xor jae std ja pop push pop dec lret aas shld pop in mov jl mov je scas movsb idiv inc adc bsr and or dec fistp dec jmp cmc jp lods clc sti add popa xchg (bad) lds inc cmp (bad) cmp push into mov push jne lret push push push int3 xor loope arpl test (bad) jno loope popa jno inc push mov aad sub cmpsl mov mov or cmpb out inc shrb out xor or data16 sbb and push lock or add orb insb in jo add adc and mov loope push jmp sbb ficomp dec lock mov sub bound adc jb nop inc mov subl add aas jcxz add addl sahf hlt inc xchg cmc or pop push mov and (bad) jns stos mov add fwait xchg xor clc sbb (bad) shlb iret sub ljmp outsb (bad) in fbld xor mov outsb jo (bad) int rcrl push cmp adcb fwait xlat pop aam cmpsl aad xchg or pushf xor ds xchg push dec cmpsb rcrb sub inc cs lahf out dec adc push mov pop pop jge sub and mov lret mov xchg push out (bad) mov sbb cld imul lock mov mov sarl adcb mov xchg popa ss mov inc fisubrl (bad) dec inc shrl inc adc sbb mov pop jge aas jne sahf lcall cli fdivs push inc push sub das cmp std xor xor push lock dec out jbe xchg mov in fwait int enter fcom dec fs and loop pop ljmp lret inc inc dec pop push inc xchg ja inc mov add mov idivb jle ret mov add push xchg lods popf jmp or (bad) mov mov repz std in push gs outsl divb mov or pop jl adc mov hlt xor push lcall sbb aaa xchg jp push sbb or test mov xchg lods loopne mov sbb dec pop xchg add xor icebp je dec cmpsl insb jmp (bad) in daa push jg push jle and jge scas lods sbb push mov pop push orl mov push iret aaa rcrl inc aas (bad) ja pop aad mov cmp inc ficoml adc insl add lock inc inc aam xchg cmpsl (bad) jp xor xor mov mov cmp ss outsb or xlat pop aaa pop jmp dec daa mov and rcr negb ja les std cmpb pusha leave fldcw mov xchg insb call mov data16 pop mov enter js loop sbb mov rcr outsb and and loope lock ret or or rcrb fstl repnz (bad) jno push mov pop adc mov mov add test mov jne cs sahf inc stos add or dec and lds icebp pop aaa dec lods add cmp add sti inc cld mov (bad) fs xchg pop mov xchg push inc or pop stos sub or call push xor and insl ljmp mov mov mov nop jle xchg sbb jge dec rolb dec (bad) xor or dec (bad) cltd dec jne xchg divb jle fistpll dec inc pop lret sbb fistp pushf sbb lret jmp fdecstp mov (bad) jle sbb push shl std testb stos je clc ret daa cmp xor js lds add inc xor xor fidivl lret pop enter push adc addl jne cmp push and sub dec fdecstp mov push sahf (bad) pop inc add sub mov fmull xor loope clc or stos inc adc xchg outsb std mov int dec ja lock enter shll ja sbb cmpsb mov idivb lock cmp fcoml idivb pop pusha mov mov cmp pop rcrl ret test rcrb repnz aas inc dec rolb stos mov aaa xchg mov insl stc lea xchg pusha sbb push repnz cmc into pop stc xor and lock (bad) hlt clc push js dec ret iret loop nop jmp mov ljmp out push add in loope adc dec movsb cmp push cmp dec cmpsb jbe lods ret ficoml cmp ljmp lods mov mov mov xchg xchg decb loop jnp mov ds inc cmpsb test aaa pop (bad) ja imul pop adc lcall sub outsb pop sub mov mov push (bad) mov movsb and and insb pop push adc (bad) aaa pop adc sarb ljmp rcrb pushl movsl rorb shrb and pop out outsb push (bad) cld dec add xchg mov xor inc lea xchg int3 xchg add or xor mov rolb lret push insl jnp std out jno sbb fwait inc pop shr test push xor leave dec cmp (bad) cmpsl fidivr sub test pop mov jp je inc inc lods jp scas into sbb cmpsl sub push (bad) inc jmp sarl insl xchg sub cwtl mov cmp jmp sbb arpl inc jns jge jge sbb pop inc lcall jge out push jg in inc inc mov lods push imul stos loopne loopne adc xchg repz (bad) call sub adc mov dec ljmp repnz mov daa and fcomip test inc cmp or cli bound daa inc add sbb add mov cmp lret xor sbb aad xchg adc gs stos hlt xor lds ret scas mov sub jge pop sbb lea loop pushf ret (bad) ja dec test jecxz push lret mov stos xchg out adc pop dec mov or push mov pop out sub xchg adc cwtl mov xor ret pop sub out imul or inc mov push pop adc mov mov aaa mov jns add push dec aad adc mov mov cmpb lods and (bad) mov sbb shrl inc icebp fcoml enter add aam je cli jge (bad) into or (bad) leave imul (bad) xchg mov add ret xchg xor pop repz sub std js fs andl movsb inc sahf mov xor pop jne ret cmc cltd ss sarb mov dec mov stos aaa int aas sbb jecxz (bad) mov das cmp int3 and out faddp fcoms mov xor subb add mov scas jns adcb js movsl and inc sarl pop mov jl dec pusha (bad) lock fsubl jle inc ficom mov push shrl mov adcl insl cs (bad) mov mov inc xchg into and push cli mov jmp cmp jo aas mov sbb inc loopne pop fcomps adc xor insb and jns arpl mov pop lahf xlat cmp mov stos mov inc sti nop stos (bad) scas push push fsubr neg (bad) mov scas lds outsb jns add (bad) pusha (bad) movsb ret jp loope xor mov xchg fsubs adc ljmp aad xchg sti ljmp mov jnp int int (bad) mov lds clc mov pop cmp arpl mov lret xchg sbbl mov mov and sahf pop add scas movsb ja push rorl push cmp sbb (bad) cmp mov (bad) jp mov (bad) or mov adc pop sub (bad) jne pushf fs lret sbb ret cld jb jne inc jg push pop (bad) insb pop fcomp into jle subb mov fstl jno sti xor or lret push and dec xchg add adc aas fmul ret subb movsl push decl jge jecxz in push push insb sbb shlb or lods xchg shl and xchg jg cltd dec push into das pop jg sahf jbe dec (bad) into jl cli and cmpsb int loope sub in inc loopne std mov cwtl out and addr16 loope outsb and jp pushf or xor or imul push popa jae ss fidivl movsb jb sbb insb mov (bad) xchg adc push lret mov adc sbb pop ss xor mov xor test movsb push ret xchg std ret std jb add cmp ret in xchg roll loopne add xchg add sahf pop add mov sbb xor leave stos (bad) repz xor xor pop push adc fadds test xor out dec lcall xchg rclb cmc ja inc mov and jle add shrl sti mov pop lea add dec jg sbb loopne cli ja clc test inc push (bad) icebp std inc inc loop jo ja cwtl stos lahf aas mov mov and pop daa mov pop and out xchg subl cmp dec xchg pop pop jb mov dec mov outsb stos add loopne push outsb cld lods lahf lods (bad) jae cmp push mov (bad) jl jb cmp (bad) push lret adc xchg xchg pop jno dec pop jmp mov imul inc icebp test ret inc mov int3 inc aad mov lcall pop jae xchg add stc fwait (bad) jb and pushf fisttpl lods dec jae mov inc das cltd jne cmp push mov das lret mov js arpl outsb daa mov je push dec addl cmp or or notl sub call mov (bad) movsl (bad) test stos lret pop scas inc add push fs mov bound push andl mov lods cld int fbld out add in stc arpl sub outsb sbb mov (bad) sub xorb in add xchg adc xchg jno icebp sub jecxz mov insl mov pop pop push into jns into pop cld test and (bad) es ret clc sti jecxz and push icebp clc xor cmp jnp jmp mov cmp cltd mov pop pop cmp xor xor cmp cwtl ds and mov test lahf iret push cld mov pop into and movsl inc jecxz arpl loop push movsb inc shrb loop cmp les adc inc insl call arpl scas and sarb cmp adc outsb xchg stc shrl clc jbe scas pop xchg or adc add outsl inc stc mov pop lock and xor add mov js (bad) stc cmp jb lods mov dec (bad) in ljmp mov cmpl loopne sbb adc repz imul leave shll lods popa icebp idivb sub fdivrs and jge push dec aas sub lcall cmp rolb adc mov pop push add (bad) cmp or dec fisubr lret aam outsb sbb xchg test pop nop adc cmpsl inc dec mov xchg mov ret shl inc sub adc xchg inc xchg push add sub cmp imul xchg push add lret data16 imul xlat pop cltd iret dec pop inc int3 xor sbbb pinsrw xchg lret repnz call das adc testb and add and pop cmp xor xor (bad) mov and push adc pop fildl jne repnz mov mov aad movsl and lret scas ljmp dec lds enter in popf jns sub pop shll add mov adc push mov ss push add mov in aam lahf es xor push je sbb xor bound lret mov xchg push and je loop fdivrs mov jp adc mov sub out mov cmp push aas xchg popa pop or ja and cmp lock fdivr xor fnsave imul repnz cmp xorb jecxz add xor out insb clc push adc push outsb add bound int3 ret add sqrtps cmp sbb sbb inc aad in es pop jl inc dec sbb cmp movsb in in push adc stos jecxz cmp jle rol xchg mov xchg (bad) hlt hlt mov std jge xchg popa es cmp leave cmpsb or addr16 stc cmpsl xlat sub int3 push jp cltd repnz mov jg je cmp add xchg ret add mov test fs inc jl mov rol xor std mov test adc into arpl inc lods repz mov push (bad) xchg aas jmp (bad) cs push add cmp xchg xor pop push add push adc ss jg out mov test mov das lods inc je add dec mov inc std jbe cmp mov sysexit sub popa test and (bad) fildll jo test shl cmpsl out sbb out jge xor mov fld1 lds js or sub jg mov push or xchg fstpl cmp jmp inc mov fcompl ss add pop loop mov lods (bad) xor std jnp inc addr16 push adc sbb jnp and mov fdivr mov dec mov sarl (bad) jae rcll add (bad) and xor dec and out cmpsb stc mov rcrb and (bad) mov mov sahf lret push addb out dec mov hlt add (bad) mov les fs sahf adc das lds negb and cwtl fdivl dec ja fwait int movl pop popf pop fstpt xor lret test aam jge mov bound inc pop lret xor out icebp aas pusha shrb addl mul fildl mov or ret aam in leave jb int data16 sbb (bad) add and iret jl lret dec je movsb repnz sahf sahf outsb sub jg popa and imul inc jbe cmp ret ss pop cmp xor mov dec popf cmp pop xchg jbe xchg or mov xchg mov cmpsl mov leave sub fstl mov xchg jl and adc inc ss xor inc xchg dec push loop popa lcall rorb movsl outsb mov and bound inc sbb ret jp add dec (bad) pop xchg es insb lcall loope stos inc fsubrl lock sbb stos push psrlw insb mov pop int add movsb mov in arpl mov xchg rcrb adc and pop add jno push insl mov xor rcll mov bswap sahf in gs push pop pop mov push mov mov lock ret movb sub cld les jle mov jno jmp mov sahf jb mov adc lods dec jbe add adc fstpl push cwtl jle into decl or gs and lods mov push mov pop sub push int3 fstps insb imul jmp push jbe ds sub test sub jle sub scas shrb iret stos push sbb inc in lods (bad) mov stos popf ds out xchg in sbb mov rorl adc cld xchg mov xchg pushf pop cmp push or lahf test imul loop insl nop adc xchg adc cmp xchg into push jmp and inc outsl xorb xorl adc jno cmp cmp ret push aas adc pop push fwait stos pusha xchg leave movsb push xchg jl movsb sar and sub mov or sub in xchg pop push stc xchg push and push je mov jp leave shl jmp fucomip mov mov jnp jp pop inc jb daa cli adc cmpsl mov dec pushf cmp xchg sti jl cmpsb imull rorl lock jb ret sub xchg stc cld cmpsl adc lods or sarl sbb stos daa sub jnp or pop dec push addr16 ret fmuls push mov and nop aad sbb sarb inc lahf pop mov es mov ja,pn mov (bad) lret movsb lods mov and out imull cmp xor (bad) sub test xor push nop pop sbb int outsb aad adc (bad) mov fdivrl aaa sbb dec pop pop mov inc pusha cmp lea mov dec xor ja jo cmp in xchg cmc cmpsl btc rolb int3 and jae cmp mov stos add xchg sbb (bad) cmpb or pop outsb shr mov push pop inc test imul es in and or cmp push cmp sbb stos mov roll mov inc xorl xor xor fwait aad mov ja push push jp jge add fs (bad) cli add sbb in push add daa jbe inc adc adc sti xchg pop xchg dec xor mov in mov jae add pop cmpsb popa sub iret insl movsb jne fildl xchg addb les rcl jnp lods add mov enter (bad) repnz push cmp pop js into pop movsl andl jbe xor (bad) (bad) hlt (bad) (bad) or inc icebp lds mov adc es in jmp pop xlat fildl nop jmp pushf outsl aas mov out push xchg aaa hlt adc jp pushf addr16 cmpsb pop scas mov or mov shl aad rolb lock push mov or out pop or mov dec mov cmp mov loope or dec fistpl push mov inc mov (bad) jo out test xchg (bad) push imull push enter daa xchg les jns add sub (bad) jmp ret (bad) push mov movsb jg in adc lret idivb xchg mov mov rcr xor mov (bad) pop pop outsb xor mov lret push sahf addr16 or jnp dec inc pop adc imul cmp (bad) fbld call ficom adc test sub xchg aas mov mov mov lcall dec imul lcall pop push cmp xor sub adc sub add (bad) jns loop lret pop adc jae cmpl pop pop cmc enter loop mov out or repz lahf xlat sbb rol mov xchg pop sbb repnz (bad) jns inc stc insl push repz xor inc iret jae loopne rolb test movsb sbb inc jge in movb imul stos int outsl std mov and mov ds mov bound lods fsubrl fdivrs adcl or pop into pop div insb lret xor pop sub pusha cmpsb int lods test lods aam movsb jecxz cmc sub cmpsl cli xchg cwtl pop inc xor jmp mov mov sub int mov fbld enter aam aad dec insl das add pop dec add imul flds cmp jns hlt add sbbb shll or mov jp inc repnz xor lret cltd ds sahf roll mov out (bad) bound xchg aaa in cltd push xor mov cs shlb add push movsb xchg cmpsb je or jle adc imulb (bad) lret add loop das jp out or or mov lahf js adc or push insl xor test jns incl outsl pop je in mov pop cs sub mov fwait sub sub push divl loop sbb mov ret pusha jge cmp aad mov test in pop adc sbb mov out (bad) mov or fistpl add jno lahf jmp dec inc aam or je or or pop xor dec fisubl inc xor in hlt bound dec pop jns jno sub xchg mov xchg adc dec imul and lds sub scas pop jno adc test sub cmp mov xchg mov sub popa push out xor jns and push js test gs jo js pop mov loop pop sbb xor adc push fdiv add in lret aaa add xchg inc loop sub sbb lock xchg jge (bad) mov jge sub cmp fcmovb clc fild xchg das rorl cmc outsl ljmp cmp sub (bad) (bad) sub cwtl imul mov sarl adc arpl mov pusha aas push pushf mov imul jb outsb sub push cmpsl mulb dec notl mov clc pop (bad) sti jecxz leave pop mov (bad) das int pop xor mov adc push adc xchg dec xor test push out mov mov rcl sbb add mov fcompl jp out fiadd sub jmp roll sbb xchg imul push mov out test fs test jbe and add scas sbb (bad) (bad) stc mov mov ja arpl pop mov jge xor loopne sbb icebp push and push sbb into hlt jo leave sbb repz add aad adc fimul outsb adc lcall es mov cmp add call push and in pop sbb scas shrl scas xor fs and jne mov jns arpl dec jmp mov call jno cmp pop ja inc pop xchg stc je mov jne dec add in lds movsl or push pop adc adc sub push mov ret pop or leave xor stc xor inc add mov mov inc je cmp xlat jle jmp lods push add out insb sarb outsl insl in sbb mov mov (bad) jne push lahf or aam ret out cmc jmp jecxz loope xchg push dec xchg add xchg cwtl push jns push ja cmp dec push xchg jp push imul mov cli js pop adc xor rol jle iret pop popf xchg stc adc fisubr (bad) or jnp cmp sahf shlb (bad) push mov rclb sbb jo dec or push and test xchg lods daa cli push ret aam or movl jg (bad) fcomps mov jp dec and aam pop cmp icebp in sub push dec adc daa sarl mov popf push xor sub cmp push fistl test add inc sbb cmp lret pop inc sarl and insl ljmp jae jno pop ret imul stc ret mov lcall stc pop pop out xchg loopne and popa jmp jmp int imul mov xchg xor dec fwait std (bad) enter arpl cld pop out mov push xlat arpl jp (bad) mov push scas add jo jp and sbb ret lds jmp xchg jle fiadd push lock jno in sbb fnsave pop jl mov sbb jle xor push ss rorl aad ljmp mov mov data16 xor cmp and push mov scas jae mov dec pop rcrb adc pusha repz mov inc pushf inc mov ss pop cwtl dec popf popf shr mov cmc (bad) jb push jge jmp in pop int3 out xchg sbb cmpsl mov fisubr int3 (bad) push repnz je (bad) scas xchg mov mov je lods lods jbe fldcw arpl daa jmp push aas sub sub bnd out outsl cmp divb (bad) in mov rcl adc dec fwait mov sbb sbb (bad) test fs or (bad) mov scas fcmovnb or stos or repz lret xchg xor in scas jp sbb pushl cld inc out mov sub (bad) push cmpsb repz cmc mov sub nop push xchg in addl xchg (bad) mov add int3 es mov ret out aam icebp sbb sub xchg add sbb scas mov push cli adc mov std xchg out ljmp dec pop xchg imul or xchg add or (bad) xor mov inc cli push imul test push bound adc sbb add cmp and add mov sub mov cmpsl sbb sahf imul jns pop pop std pop notl outsb fwait add lcall cmpsb mov lods fidiv jbe enter or mov pop mov xor push fistpll cs cmpsb fnop je (bad) fstl (bad) mov dec dec sarl out (bad) arpl push inc add inc inc jmp call (bad) sti or sete sahf in test repz inc dec and xchg lret mov dec clc jl insl mov mov fs out cmp aam mov aaa and out cwtl ja add cltd add jmp (bad) fimul add xor xor xor pop add fadds sbb xor mov pop xchg and fnop mov xchg sti push or mov test dec decb les lret fistl and rorb rcr and shrl test xor fcoms cli xchg out test push sbb (bad) mov outsb data16 and cmp sarb ss add push xchg xor xlat test loopne js loopne xchg adc lods pop in jl (bad) fs inc pop sti jp popf sbb adc push mov repnz into stc ljmp mov ljmp arpl xor mov testl add push data16 adc stos add arpl call ret push mov mov mov mov ret scas lea push fnop mov xor fs jge pop fwait xor int3 int pop jge in out mov lods lahf mov scas dec mov mov ret inc stc inc jbe sbb aam adc xchg mov xchg popf adc jae stos mov xorb dec fnsave jne jmp mov adc out test cmpsb sbb loop les rorl sub adc iret jg jns pop in in dec (bad) lods and dec addb nop mov jmp add fwait xlat cmpsb pop lea dec jb repnz push icebp jbe (bad) sti dec pushf (bad) fadds mov repz xlat sahf push jns into xchg and (bad) xor out stos clc pop inc fildll push adc out and pop pop (bad) out nop dec bt mov icebp mov add scas cmp dec jno fs in stos pop nop xchg xchg xor cs jle jbe push lods stos ret repz lds outsl mull dec xchg mov mov inc adc sbb outsb xchg repz (bad) cmp xchg addl dec inc cmp jg fnstenv mov mov cltd cmp cmpl push push (bad) mov loope imul es cmp stos das mov cmp add push fsubrs fdivrl mov xchg out jp fadds dec aad inc test stc iret (bad) aam test jne pop cmpsl push mov inc and fistl test pop out daa and inc inc sti dec popf xor cmc adc cmpsl cwtl stc and inc stos outsl xor adc xor push sarl ds movsl push jle js loopne in mov fimul jb adc add add mov sub xchg arpl xor jg dec jnp (bad) jmp and fist lahf cmpsb pop push decl lds and cmpsb ja cmpsb mov jmp lods test sbb lods fbld inc and outsb adc add ficoml jecxz int3 movsb mov push jge jge or in les mov pop adc and arpl in aad and add sbb inc lret xchg inc adc insl nop jo push std icebp rorb inc dec out push pop adc (bad) xor jle sarb mov cmp pop rcrb jl in popa push incb jns push jg or pop or xor jmp (bad) hlt loopne lock push push insl popf scas sbb outsl push mov xlat loopne loopne jecxz pop (bad) xor rclb rolb (bad) sbb out or dec sub push jge das lods pop aas xchg test and clc jge xchg fdivs jnp jno mov adc xchg and lods in and add sbb insb xchg pop mov movsb mov cld xchg add test xor lret and xchg cmp or jns test and pop popf daa pop cltd push jae,pn and bnd in jbe out (bad) int mov clc pop jae mov dec add imul mov clc or fs roll popf mov shr xchg in divb xchg push pop aaa xor mov scas or pop es or jae rclb sub imul cmp enter mov pop push push jl cwtl inc aaa pop jae mov add mov mov jb xchg or pop out push and mov gs leave cmp movsb adc stos loope cmp jecxz mov dec lea xor lret pop sub or sbb and and pop pop mov pop outsl sbb sbb jns mov mov cmpsl loope in inc mov imul mov jecxz mov das in push pushl adc adc mov xor sbb inc jo aam adc cmp cld icebp aaa adc cld call push test and ret cmp fistp enter xchg push or push xlat xor xchg add aas out ss ror and dec add add (bad) outsl lock cld mov idivb pop hlt ja sub aas shr movsl add mov inc pushf adc leave add xchg (bad) sub imul dec ret and mov pushf lcall push fcos cmc (bad) mov jno repz lcall rcrb popa xchg mov clc lret mov push test movsl sti cmp pop sub jg ficomp fiadd test imul add and test hlt pop out scas and bnd jge cmp test pop adc imul push push test xor jge aam push push cmp rclb xchg lret jae push hlt js incl aad or clc lods dec je push add inc js adc push lock dec xor jae adc or sarb jp xlat cmpsb cmp cmpsb mov in (bad) jb sbb jge xor add cmp or fld (bad) sahf shlb pop les test loopne (bad) adc sbb add cmpl and jecxz repz scas scas jecxz add pop sarl and enter mov jp jae push mov add add push ds lret mov xchg pop xchg push mov (bad) iret stos push xor rorl aaa hlt (bad) scas out xchg bound jge cwtl and sub mov fldenv dec sbb pop in adc (bad) xor pop (bad) jno lds sbb mov imul xor cmp addr16 icebp pop sbb int gs sub adc lods jl and mov xchg outsb jp jg jnp ljmp daa imul cmp cmp mov insl sti xlat cmpsb fst lods pop sarb loop push out cmp push or ficoml int cmc (bad) cmp push outsl xor xor and out xchg sub sbb cmc movsl xchg add pop iret xchg mov arpl xorl imul pop int3 insb pop sbb cmc mov jge inc jo jbe mov mov rep push jle mov movsb or (bad) ret pop out sub mov mov push mov and daa mov jb icebp xor bound sbb inc mov pushf sti mov ret xchg jbe or bound in xchg inc dec mov inc (bad) push cli pop jo pop dec jnp sub sbb sti andl testb cmp subl ds mov xor push mov loop mov stos ljmp ret inc data16 lods and pop scas push xor jp inc mov inc jo xor inc scas pop mov pop jle rcrl (bad) mov ds inc fcmovnb jb and cmp sbb mov jns daa (bad) jecxz and cmp loopw js rcll cld repz push xchg sub dec out mov ja jne sub scas lcall mov lret (bad) xchg insl into mov mov push icebp pop icebp push sahf outsb xchg arpl cmc jo movsb outsl ficomp (bad) loope call or jmp nop add jle lcall stos sbb pop cwtl push stc sbb xchg pop mov xchg daa (bad) xor lods test in lods jmp push ss adc aam jns pushf sbb daa jmp cmpl mov out xchg jns mov sbb (bad) pop repz lock clc xchg sbb into sub lods cmp pop rolb outsl cli xor mov stos mov cmp jg lea mov xchg mov fstpl mov stc dec jl (bad) xor fucomp mov cmp push setne (bad) mov fdivrs and bound int out inc popa cmp jle push sbb dec xor popf lods nop insb lcall movsb cmc out fdiv loope xchg inc mov mov mov xchg jl mov lahf mov jle pop fdivr stos inc lds pop xchg mov dec movsbl xchg jb push cmp adc dec cltd pop mov add mov jmp mov inc adc repnz andl mov sbb les xchg in xor xor adc lahf aaa leave icebp mov cld (bad) repnz mov out or pop sbb lcall jp pop lock inc pop or sub jg rol cwtl cmp mov pop movsl pop mov adc jmp add sbb pop dec or pop pop lahf adc out aas lret dec cli xorl push pusha inc cmp fidivl push dec sbb ficompl mov (bad) (bad) fbstp xchg jmp mov push roll (bad) cmp cmp (bad) jbe adc jecxz std or dec repnz pop sahf fsubs lcall (bad) xor mov xchg mov insb shrb sbb ret xchg dec add pop pop jl dec push (bad) out adc ja leave int lods xchg ja pop (bad) mov jmp pop int add cmpsl mov inc cmp dec mov mov push pop pop jne jae xchg sbb pop pusha cmp hlt ret cmpsl icebp cmc cmp pop aad int3 adc sahf (bad) mov xor lods cltd or das jl mov xchg cmpsb push (bad) aaa mov ret notl cmpsb xor jns ret sbb mov aaa je pushf in sbb cvtps2pd fwait jg (bad) call out push adc or sub mov das out mov iret popf xchg pop jnp mov lds leave sahf inc jecxz mov jae cmp sbb sbb push (bad) dec dec push (bad) cmp cmpl fiadd lods push sbb pop fistp test mov pusha out xor push jbe xor adc imulb or pop xchg (bad) fnstcw enter sub popa mov cltd cwtl aas mov adc mov cmp out xchg scas outsb pushaw jl sahf sub inc sbb or sub mov sub sub and mov add insl push add aaa mov bound int3 xlat mov into enter outsb inc push cmp jecxz xor jae or in inc xor mov repnz ss cmp stos repz cli sub add ds jns xchg and ror mov dec lods adc call pop (bad) mov sub sub popa jcxz call jge cld sub sti fcomps jnp xchg jg clc jg xchg push call movsl mov jne in test inc ja pop (bad) jecxz cmp pop ffreep sub mov (bad) xor push adc call xor push and cmp pop pop loope xor sbb into call cmp or cltd inc out call mov xchg fldl and inc or and arpl push pop pop fistpl in fisttpl sbbl sub je push mov shlb sub lods jne clc dec lahf xlat sub int3 mov xor and mov add mov push inc (bad) dec mov xor aam push sbb data16 cmp xchg inc mov fs into in fwait xchg das mov pusha aaa ret aas fs xor fwait sbb icebp fstps mov outsl push sahf push scas cmp cld test cmp insb ror into sbb test clc lcall jecxz mov cmc int daa push insl insb in add push jl pop pop je mov fisttp sub push lods xor cmp add dec mov add subl jno mov mov push repnz xchg stos bound jp data16 stos (bad) cli hlt and nop mov outsb in cmpsb xor mov push xor movl pop push (bad) fisttp mov jo pop pop cld lahf and rorb data16 out std aas pop pop push out aad aaa cmp fstpl test cmp xchg dec sahf (bad) ljmp mov sbb cmpl pop inc repnz or dec or jmp int3 and insl ficomp iret push sbb jl and sbb mov aam cld out loop repnz inc pop clc in sub pop xchg jb xor xchg arpl mov lock cmpb pop lods adc ss cld mov lret test push ss lcall xchg mov push (bad) fwait inc ljmp in xchg mov xor shll pop inc iret push outsl test xorl pushf (bad) cmpxchg or push xchg (bad) sub mov push pushf sub repnz (bad) sti decb jecxz (bad) xor ljmp xor mov fucomp dec or mov mov sub adc out fcmovu aaa call (bad) mov dec jp test adc movsl popa sbb fbstp ficomp mov hlt stos jl sub xor push loope in fisubrl sub fnstsw jo repnz xor add pop jns in call inc popf outsl add mov or push xor fildl int3 lret loopne or jnp movsl lret and mov push leave popa xchg adc jecxz jno push sub sub mov dec mov jg xchg pop arpl aad idivl pop bound test nop pop mov ljmp mov in aaa insb roll in (bad) pusha imull mov inc add xchg scas sub popf int3 sbb into cmpsb xor dec jno xchg pop pop lds cmp mov jno mov cwtl jne jmp push popf rcl mov cwtl pop mov jge enter jo imulb scas jo push xchg fimul push es sbb lret ljmp and into stos mov lock cmpsl test sbb push or aaa jp in cmpsl (bad) mov push xchg or je fsubrs test out xchg sub push inc xchg enter inc andl sbb lods clc push lret cwtl pcmpgtw cmp dec gs aas out sti stc data16 icebp sub test and loope xchg push mov xor lock in and cmpsb dec outsb hlt inc out pop test ja xchg repnz insb jae xchg stc jnp testl std mov stos dec (bad) xchg es leave stc in mov arpl movsb lret leave lea jmp push xchg jge imul daa ret or jnp adc push pmulhuw jae cmp adc stos push cmpsb push mov mov call and ffree icebp jb push sub xor cmp testl add stos call or cmpsb enter xchg cmp in xchg leave popa ljmp jle pop inc pushf scas repnz shrl cld cltd add sti leave inc dec and aad add xlat insl push mov imul test (bad) clc xchg lods iret and mov cs xor ja rorl pop movsb mov out jnp scas fs incl leave and sub pop xchg jae das mov test sbb roll movsl dec mov lods scas cmc scas clc push fisubrl inc xchg das xchg psubq inc xchg jl aad scas mov out jae cmp (bad) cmp dec jbe nop push and fwait dec xchg sub data16 (bad) xchg data16 pop fistl or pop pushf push sbb nop popa fsubrl jmp jge out mov outsb mov jp mulb es lods sub mov sub stos pop inc dec xchg jne xlat std nop ret adc cmpsb mov jle aas test (bad) push xor ds cmp xchg gs and mov push fisub outsb mov xchg mov ja dec mov lret or fisubl adc xchg scas jmp fldt cmpsb cmp cwtl xor jle je,pn pop and shrl imull ljmp je sar push push and mov mov loope imul pop in xor add lcall fisttp mov lea insb repnz and pop aas stc mov and ljmp (bad) sub pop jb pop sti fidivl mov int3 popa adc inc and in or rolb pop jbe sub in push lods mov add cmp pusha pusha test push js inc mov lahf sahf mov dec pop mov push or pop vmulpd sub sbb push inc mov adc jb int cmp jge repnz inc mov bnd add call sar dec (bad) jl add add adc cs js inc inc in xchg daa xor ret push pop mov and (bad) movsl mov and mov fcomip loopne dec and add popa xchg inc arpl inc pushf repnz loop outsl scas add sahf mov push xor mov test fsts pop ret mov pop inc dec mov rcrb sub rolb jb test cltd ffree xor pushf push es imul cmpsl cs ret pop mov xlat add (bad) les fcmovne (bad) icebp data16 imul xor mov or sbb dec cmpsb fstps mov pop jae jmp (bad) jo xchg ds fdivr dec mov in sub dec dec jmp push dec jnp cli sbb and xor daa out and mov sub or pop sti dec and mov jp enter push out out xor das cltd push cltd stos jg rorb inc clc and out xlat mov test ljmp jbe popfw xor add sbb jecxz mov out pop pusha lock cmc sbb cmp ss ljmp sub mov iret xor push xchg stos pop enter movsb out mov mov or mov mov shlb jmp stos test mov inc aam out xor add mov leave cld jmp push push add or pop je dec sub movsl aaa xchg bound pop leave imull adc push mov adc mov cmpsl ret ss push out outsl and xchg scas xlat hlt and cwtl dec push xchg fcompl data16 mov push inc in mov rcll inc or movsl (bad) adc jp dec aas adc sbb in or (bad) rcrb bound or cmpl leave in inc jg or mov ja fcmovnb pop xorl and arpl mov cmp aad mov shrl or aam jle,pt cmpsl push jle xchg scas cmp (bad) mov hlt cltd daa mov sbb gs stc lret loopne mov jge les aaa xchg mov or pop int (bad) jb int pop hlt leave push or bnd (bad) test xor movsb push mov fsubl in sub inc pusha sub mov fwait lock add dec mov outsb movsb hlt insb jmp lds or dec cmp les cmc daa aad inc inc inc cmp mov xor stc shr adc xor or mov jb jb ja cli mov push xor lret jg repnz xor incl fsubl push cmp sbb inc mov rorb test pop push repnz loope mov mov fbld mov (bad) cli sbb in cmp mov jae (bad) xchg cmp into (bad) adc sub loope das (bad) pop jbe mov in pop faddl ret jg pop cmpsb xor cmp add and cltd xor add dec (bad) (bad) jmp ds sbb hlt add xor clc ret cli fs mov jb inc jo imul pop les xor sub xchg pop sbb mov mov mov sub mov sub stc sbb xlat mov mov adc xchg clc insb (bad) jns testb lret lds or cltd mov xor dec sub mov pop inc inc and ret adc aad or cmp mov sub mov (bad) movsb cmpsl jle sti cmpl or cmpsb mov gs dec in lods out lahf jge xor jmp (bad) scas xchg (bad) outsl mov enter repnz push xor adc std xchg out das shl mov jnp (bad) cmp adc add xchg test (bad) add add add and (bad) (bad) pop xor mov idiv mov ss movsb inc repnz rolb sbb int3 addr16 xorb jge pop rcr or imul push jp lret mov aaa cs xchg pop dec adc pop jo cmpsl jmp jns jno sbb xlat jns testl arpl clc nop das scas push inc dec cmp sbb sbb mov inc xchg add out and cmpsl xchg call jne push into (bad) aas or cmp pusha inc adc hlt cmpsb adc push arpl sub sahf gs xor leave jb sarb into inc pushl popf int adc mov daa jnp ja popa stc cmp jp leave pop testb mov into sbb mov mov mov test enter or sbb or lea sar xor add sar movsl and cmp pop mov call inc insb mov and lahf sbb xchg mov test xor mov popf std lock test clc scas adc cmp pushl xlat fsts aam lock inc inc sub pop call mov mov jbe (bad) aaa jl inc adc add xchg lds mov test ljmp aam xchg xor inc add aas stos out sahf inc xor int jns xchg pushf push shrl gs cmpsb iret push stos fimul add xor push jo clc lahf (bad) ret sub cmp loop scas or or es jns daa jp cmp ds jae aaa push fisttp or cmp ret dec push arpl test xor and cmp sub push or loop call out push in xor lret in in add mov js pop in ja lods ret jge adc aas and xchg cmp jp loop neg mov ja icebp (bad) js (bad) out ret xorl mov pop cmp in sti and jbe lret xor adc shl dec ret and scas cmp arpl pop or pop push push cmp xlat jecxz arpl leave dec xchg test sub and xchg jns dec mov add add (bad) lahf inc push shr nop add pusha outsb dec stos sub dec sbb insb jmp push cmpsl sbb es ret aad jle xchg push out mov xor icebp dec sub xchg mov js mov add mov idivl icebp pop data16 pop mov cmpsl daa in rcrb es mov cmpsl xchg cmp fdivs pop and xor fs pop (bad) fnop call pushf or mov in ret (bad) adc ja out mov xchg lods out (bad) imul xor aaa push cmpsb mov in lret lods xchg popf xlat sbb loope mov cmp mov xor leave mov call add lcall inc pop scas adc push pushf fnstsw jp fs imul jb mov cmpsb or add mov out mov mov push mulb dec test jnp push and jg dec mov jne pop mov xor ffreep roll cmp out jmp add ficoml dec pop sbb and repnz fwait xor mov and lcall test fucomip xchg loop pushf (bad) jl jge mov add mov fs int3 sti mov mov mov mov loope outsb jmp dec push xchg pop mov (bad) lret mov scas in (bad) sbb cmpsl jnp sbb aaa aad xchg inc repz insb mov cmp les ret pop (bad) (bad) mov test out jnp cmp push pop or push inc lcall mov add loope icebp daa push rorb outsb or adc in stos test pop loop outsb mov daa push push sbb pop sub iret add mov sbb mov repnz scas mov xchg fmull call ljmp inc (bad) leave icebp (bad) mov sbb outsl push jmp sub lret into in cltd jne lods or push jbe inc jle mov jmp pop pop ss stc pshufw jno scas jnp aas clc iret add lahf frstor xchg mov sub repnz popf imul repnz dec repz cmp hlt add dec add cwtl in jp push fsubrl adc inc mov xlat mov out hlt scas mov xor pop icebp rorl int3 int3 js imul int push sbb lret (bad) loopne sub aad pop sub mov lods sub pop loope jp repnz mov ror test je push inc sub repnz sub enter jg imul inc clc sub lods ljmp in pop fnop fs sub mov mov movsb push xchg les or xchg xor daa pop out jns adc repnz pop imul repz insb repz or xchg les ljmp call push dec xchg (bad) ljmp pop js inc data16 out ss test fisttp jecxz inc inc push sub sub add rcll cmpsl rcl jle in jmp ret pop aas sbb hlt mov imul xchg xchg add pop mov jmp lea pop imul jge fidivrl stos pop cmp dec adc jnp mov push mov fstpl cmp xchg fwait insb test inc adc int xchg ljmp or mov cmp fwait dec push lods sti scas lret push int3 loope sbb cmp in out nop enter mov jo loop and dec ret sbb jecxz je rolb cltd fildl cmpsl ret mov fmulp in mov xchg fcoms xchg jle mov mov xor inc mov aam pushf fdiv xchg cmc in mov or push ret ds leave movsl push out add cs sub subl call push inc fcoml cld test mov or adc or pop negb pop lods push lret adc (bad) dec lock lods adc or cld inc and sub hlt sarb out xor pop pushf movsb push stc pop cs mov pop jmp and lahf js sbb sbb mov flds repz mov std jb in es pop pmaddwd mov cmc sbb and push test push xchg jmp aad add sub stos leave fidivl push adcl int xor in mov cltd jmp mov cmpsb scas (bad) xor mov mov rcl std xor xor add sbb aas scas lea cltd or lods lcall mov mov imul lods xchg dec adc mov ljmp rolb fwait bound mov in lahf loop fsubs jge stc fsubl popa repnz push dec xchg mov lds std addr16 add jae push cmpsl adc gs scas mov adc xor movsb mov adc outsb dec or loope nop xchg imul jle jbe mov cmp ret xor mov test adc popf outsl es lods enter pop sbb push pop pop mov adc xchg adc mov pop pop std push ficomp repnz aas dec dec lds in push sbb inc pop mov subl cmpsb pushf imul pop lcall lock sbb sub out subb ds pop sbb xchg test adc lods (bad) adc mov push jae iret inc mov insl jne dec xchg arpl push popa or ja mov pushf aad cs jo jae out shr pop mov xor popa jp fdivl sub popa sbb ljmp vpunpckhqdq inc mov sbb mov aas aam dec mov dec pop nop ja cs ret outsb js inc int es das jbe xor mov or sub pop out sahf cmpsl jecxz xor adc mov push mov or mov mov test stos jmp xchg mov xchg mov and fsubr mov loope addr16 mov or cmp sbb (bad) xor xchg fs imul xchg aad dec lahf pop fwait lds sub xor pop popf and jecxz sub xlat addr16 push jecxz dec cltd frstor rcr pop sbb pop push enter xchg add sub aaa sub out and ret imul (bad) mov push and push sbb out adc out xchg repz lock add xchg add xor sti gs lods imul cli ret ja out jp data16 inc dec adc jmp mov mov (bad) test adc aad pop ret notl sub xchg mov cwtl nop adc aaa cmpsb std mov dec sbb and inc insb lods push mov cmp mov sahf pop pop push mov lret xchg lods jbe cs pop adc cld dec mov sub mov sbb xchg lahf hlt pop mov xchg mov fmuls dec xor out (bad) mov (bad) mov jecxz adc fdivrl or ss repnz std rep mov std push mov dec fcmovb sub add pop jno movsb xor mov sbbl pusha add addr16 push (bad) inc mov je testb push push xchg fist sbb mov lods and sbb pusha add or roll jae add icebp into push lret mov pop sarl arpl jo popl into in mov push cltd pop in and inc and fcomi nop frstpm(287 push xchg sub pop rolb sbb xor mov negl ret sbb sbb cli inc pusha mov pop and test jb xchg js out rcrl adc mov jb add push inc outsb fnstsw gs (bad) add (bad) fstpl cmp idivb sub sahf outsb int3 dec das push aad scas xlat je pop mov std icebp mov dec sbb lret rcrb fdivrl xchg nop push xchg loopne clc pop push inc fimull dec fs xchg cmp add in in cmp add (bad) cmc mov cli repnz jns js mov sbb dec das jecxz mov scas inc xor jl pushf sub sbb movsb outsl mov stos imul jae inc dec repnz sbb push call mov mov popa push mov (bad) xor add sub ds les scas movq lret jmp into jns push jns pop mov cmp mov int3 bound arpl mov push repz jbe call sti sbb pop or or notb repz xchg cmp pop sub (bad) loope fcoms fyl2x lods in out ss int3 adc scas dec mov and and mov mov fisttpll lcall gs je cwtl inc sbb mov inc ret jbe pushf pushf mov (bad) cmp push daa jmp mov mov jp add lea dec inc pop jge push dec fsubrl jge int xor sbb fxch pop and cmp lcall push bound adc lea outsb and mov (bad) and mov fisubrl es icebp push adc aaa lds mov pop ja in sub xchg loope pop xchg and rorb lret scas sbb cld icebp std fwait mov scas loop ljmp insb (bad) dec popl mov xchg xchg notl adc ja and mov inc hlt mov jge aaa scas jbe mov sub fs enter (bad) movsl (bad) cwtl xchg data16 add cmp (bad) lret fwait pop mov std jbe popl cmp (bad) nop (bad) inc pop xor push sub jae fbld inc fsqrt pop pushf scas cmpsb mov pop and sub into mov pop sarb out cli jb and mov pop push fisubl push push imul xor inc aad xchg (bad) scas jge fs jo sbb jns scas sahf jge inc sbb cmp mov pop pop arpl mov pushf div testl mov pop pop pop lcall xorl mov movsl lret orl xor addl aam aaa mov push movsl dec aaa cli les in sub scas scas mov xor daa aas out iret (bad) dec (bad) fcmove mov pop ljmp jg outsl out aam sbb jo (bad) ror mov stc fwait mov adc mov ficompl xor gs and or pop fcomps mov mov sub in ret fistpll dec dec pop insl out jp push dec rol lock pop cmp imul dec testb sub sub xor lret stos xlat (bad) mov dec mov jbe and jmp dec (bad) lock stc insb xchg jnp enter pop jae adc cmp cli adc inc lods xchg sub fisubl leave cld lahf jae loopne sub cli dec insl xlat xlat ljmp or in mov dec push jge in lret mov inc leave lcall sbb xchg add (bad) jo imul icebp and out xlat movsl loope mov repnz test pop bound jmp js jo loope (bad) test xlat ret mov icebp pop js dec cmp mov cli stos inc xor call es mov jle hlt and dec jle iret lea push cmc ds insb dec pushf popf sbb adc jge push shr cs scas andl mov mov pop add or mull cmpsb bound push mov or movsl lea jae push in dec jb cmpsb mov (bad) cs sbbl int cmp imul pushf adc push lret xchg xchg cwtl sbb or dec mov psrad xchg pop pop fdivl add lcall cmp adc sub (bad) nop jmp xor xor (bad) ss in jns shrl xchg fs mov adc mov je pushf (bad) mov test or (bad) aaa jb adc or adc push lea call and lds push outsl dec loopne adc push push dec stc into mov insb cld mov pop cmpsl adc inc jo xchg mov gs dec lods mov mov int3 dec sbb and adc gs mov je jns in jecxz icebp outsl scas cltd pusha cmpsl sbb das gs pushf popa dec pushf and mov cs xor out iret repnz fldt cmp xchg imul lret movsl pop rclb mov jae cmp movsb pop push test orl xchg or das sbb and insl test pop xchg sbb ss adc das outsb dec test and cmp add fdivrl xor mov jle outsb jp jae sbb add pop divb fild movsl mov leave xchg ljmp mov inc inc data16 push rcrb stc test sub int3 repz inc orb mov push mov push (bad) adc sub cltd je mov sub movsl adc mov lcall das xchg aad xor loop mov sti inc cli leave mov mov pop leave push shlb mov sub inc cmp xor stc mov push xchg aas or mov mov jnp (bad) adc jp fildl cmp add das pushf loope pop xor jns mov mov cmpsb and jo fbstp clc jmp sahf lds stc mov jo mov idivb pushf and lcall add jnp cmp push ficoml pop pop stos pushf mov icebp xor lods (bad) rclb shlb jp jecxz iret pop (bad) int ret jo in sarl icebp std push inc sub mov jmp pop stc xor inc cwtl cwtl adc lret into rclb lret push repz iret add das test jmp push push and add (bad) dec ds sahf je xchg lahf idivl and enter call cmp and mov inc mov lret loop lret iret jp adc add (bad) sub mov xchg sbb pop sub jne cmpsl adc sub inc outsl mov mov dec sbb enter xchg cmp subl sbb mov jae mull mov cwtl pusha lods add scas xchg push xchg into and fist pushl dec pop mov mov out ret or (bad) sarb or outsb test icebp inc lods mov lods pushf add and cli pop pop cmc clc xchg or adc mov mov mov loopne into pop in pop sahf les out test mov push rolb xor mov shll ret inc inc or int aaa pop or lret ja icebp or inc in daa insl jp mov mov xchg pushl dec inc leave pop fyl2xp1 clc call in cltd adcl inc dec nop mov add mov movsb in xchg and cmc cmp arpl xor inc insl fcoms xchg or inc push mov cmp orb dec pop lcall and mov out lahf and fbld cld outsl cmp out shl das ret lret lret and dec in and popf inc test ss pop or orl and repz xor les jmp dec rcr rclb aam mov inc nop fisttp or push ret mov pop icebp mov mov mov push mov fstl adc insb add mov mov and arpl and loope jge xchg fidivr push xchg imul imul ss pop out (bad) or repnz icebp add xchg jae mov and push cmp (bad) out into mov test add test notb sbb fs rol mov mov scas xchg jne add jbe jmp int xchg std daa (bad) pop imul test xchg fdivrs xchg movsb shrl xor jns (bad) jb inc inc outsb mov mov loop ret jnp fnstenv sub jo or scas and mov scas add in push or loopne sbb pop aas imul sub mov push fbld pop lock push jb push cmpsl imul (bad) dec andl xor push sti or and movsl dec stc pop sbb jae dec and push add sbb aaa xchg pop int3 enter js (bad) or add data16 sbb xlat and das pop cltd and fwait imul pop mov dec test mov xchg push pop jb mov lods xchg sub xchg mov jg sahf mov jne nop cld insb inc outsb cmp adc les call lods addr16 andl sbb imul push cmp popa ret hlt aas and dec neg dec inc dec and mov outsl (bad) test push lret add roll inc data16 pop test sbb push jge mov or xchg push mov nopl in pop fistp xlat lock outsb jge ja jae test mov movsl (bad) pushf mov aad popl popa dec mov lahf subl jp inc rclb insl xor dec push dec out fsub jnp inc xor out pop pop jp push xchg push sub ret (bad) (bad) mov adc pop mov das push sbb jge jno ret (bad) sub jns shr xchg movsb aad sarb pop jle xchg rcrl pop sbbl insl out sub xorl add jbe roll mov sub cmp repnz cmp add mov icebp fldcw adc lahf push xchg or mov pop sbb fbstp int3 lds fnstsw push add xor test (bad) jecxz das cs mov or aad push movsl pop sbb ret (bad) aaa pop sub dec xchg fcom and pop cmpsl sbb push dec pop sti dec jno mov adc adc push stos jle xchg (bad) sub clc xor xor xchg xorb addr16 mov arpl dec mov jmp sub imul xchg xor mov les fnstenv xchg inc out dec bound sahf (bad) jo pop jns inc test movsb ret mov dec sub loope or jbe cmp loopne ret mov lcall sub mov nop ljmp fs mov xor cmc jnp sub rcrb cmc jbe inc and mov push jmp adc fistpl in xor in sub fisubrl iret mov out sbbl outsb pop out and and (bad) mov mov aad cmp mov mov mov cltd fninit lds push repz xchg (bad) test nop clc fnstenv adc pop lds daa out add js pop (bad) mov mov mov pop pop (bad) out fisubl cltd mov (bad) cs mov leave adc bnd pop aaa inc cltd outsl fidivr test int3 test cltd and adc je mov jbe jae hlt in cmp cwtl loope (bad) xor cmp jbe inc or jecxz aad xchg mov inc and addl adc (bad) xchg pop push jns adc ds pop sbb dec pop pusha mov push pusha sbb or inc decl sar inc push pop (bad) cmc cld fidivrl fdivl ret mov cltd in push inc xor mov xchg adc adc adc mov pop inc mov mov pop inc (bad) aad xor adc js dec mov dec into cmpsb mov loop jnp arpl repz aaa sub adc inc fwait icebp (bad) fnstenv mov inc push adc sbb fidivr and fwait test es mov or jne lock cmpsb and push or pop movsb ljmp sbb cmp push mov mov sub inc jno inc cli test pop pop xchg scas test xor mov cld ret mov or (bad) sub cmp pop pop lret jp (bad) and mov inc repz fsubrl pop imul push add cmc test (bad) ret (bad) mov (bad) lds and cli push cmc (bad) mov and stos ss (bad) stc pop add ja (bad) js or mov xchg dec leave mov lods clc mov mov inc pop or xor adc fdivl into sbb sub nop mov cwtl unpckhps ds and cwtl fcmovb jle adc dec pop call xlat jnp inc scas ret xchg mov pop jae mov or std or int jmp push sub fsubrl jbe sub sarb mov push lods cmpl scas mov pop call shlb fimull in rclb jb mov cli sbb enter sahf out push or in xchg lds inc and mov sbb dec xchg das ret gs (bad) push icebp scas inc sub neg jnp lret sub push mov in push inc mov push repz fwait iret jae dec xor popa lea popf call inc pusha mov fs jl jns cmp (bad) int3 xchg js jp and mov sub xchg mov scas sti jmp sbb stc mov lods jns cmp adcl fsubrl mov xchg adc cmp in cmpsl lds mov pop pop test fisubr aad fcom dec push test cwtl popf dec mov xorl call imul ret dec xor sahf add test xor popf dec divb icebp mov cli js lahf mov jae sti ret (bad) roll inc (bad) push cmp mov into xor call std (bad) mov mov xor cmp jo fdiv rol sub adc dec jnp repnz loop mov add pop fcomip icebp shlb mov jb dec mov testl jmp xor into icebp sub add mov cs incl mov ret sub adc mov mov dec and jmp sbb rcll aaa xor jne lea cmpsl or push aad mov dec sub mov push repz mov in sbb cmc xchg add mov sbb cmp test inc nop cmpsb mov in lret inc mov lods dec lret mov mov mov hlt ret imul int das sbb hlt lods sub div ficompl xor insb inc push cmp test je or mov dec js test dec sbb std cmp hlt jle dec dec dec fwait subl xchg xchg ds leave pop popf clc inc sub fldl push add adc mov stc mov nop and jle int int3 shl scas push and xchg and mov jp je icebp cwtl mov pop jecxz xchg push in push push sbb ss pop (bad) popf add ljmp lret mov cld repz adc test addr16 cwtl add (bad) lret dec dec iret fs xchg dec dec aam sahf and push adc ss xor jo add popf cmp inc pop mov lock mov imul pop xlat (bad) jge inc roll cmp ss out dec mov (bad) leave aas mov test mov pop lahf les push rcl or fmulp or adc or xchg dec cmp in pop mov pop lahf andl mov mov sbb mov lds jb es mov (bad) scas mov cmp cli (bad) bnd and imul out lods cmp fbld (bad) ljmp sbb xchg ret es stos or in jns mov jne add dec hlt cs push cmpsb add fwait jge jns or dec daa push mov ret and adc jno cmp pop lret fiadd add (bad) mov clc add add jo inc xchg cmp xchg push mov bound int pusha jns sahf xlat cltd test aad je sarl out inc mov pop cmpsb jo dec into fisubr in jb fsqrt mov lea out (bad) inc cs xor into inc das pop decl stc mov aaa mov repz mov inc adc add dec xor (bad) push xor mov xor (bad) int3 (bad) mov or jmp mov cmp (bad) (bad) fiaddl mov mov outsb xchg std std push xor into test in call ja add sub lcall jmp mov int3 jg xchg (bad) jl add (bad) jnp mov jle xor xlat loop mov lds movsl xchg mov sub sbb mov cwtl pop mov inc jnp push (bad) fisubrl cmpsb ljmp or fcoml lods or cli cli movsb add insl (bad) call pop push in jl daa xor jae repz mov mov cltd push movsb push cld imul xor jnp push inc mov mov or dec aas dec mov cmp lahf outsl xor aaa js repz add js out push add jb sub lock in and test out fldl xchg lret mov fwait in movsl test lahf push test arpl fistpll xor popa insb fnsave dec (bad) scas mov int lock cmc ja pushf xchg popa outsb arpl je sarb or xchg adc push jle or lds popa icebp pop pop rclb mov dec cmc subl stos mull lock pop push xor inc mov jb,pt mov hlt dec fnsave mov movsl jmp push mov adc roll adc add cmc xor ret int sub mov and in inc mov outsl xchg sub add xchg mov js push popa test imul jno into xchg orb outsb out daa mov jb pop mov icebp stc fwait loop or xchg and dec cs xor out movsl fucomi loop jo jne sbb pop in stos mov int3 ret cwtl or data16 push fdivs push and dec and fisubl mov inc fwait jle stos cmp jge in or xchg pop xor fdivl movsl dec movsb loope mov mov sub push add add dec adc xor xlat jns jnp sbb add pushf pop jle mov xor dec gs jae or iret lock sbb add sti add sbb mov mov or push jno je iret mov xor daa test sub out push dec dec push push jnp icebp rcr call sub aaa bound dec fdivrp lds or adcl testb sbbl add insb ficom and lahf mov and lret test adc loopne test xor cmpsl ds pop sbb xchg ss inc mov movsb cmp xchg fisubl jbe lret sbb clc fdivrl scas fistl ja pop mov or in mov jnp cld shlb pop pop loope cli repnz sub dec cwtl cs mov out js nop out and sbb int sbb jecxz xor fldl push lds pushf js mov jno xlat and sub add out cmp pop cmp and lds clc stc mov push fidivrl pusha lahf jne push je add adc cwtl sti push cli xor (bad) mov jmp adc (bad) sub call dec pushf mov dec push mov jge outsb int (bad) in and xchg dec push in mov mov lea daa and xor dec addr16 int or stc fcoml jge rorb je stos mov jg test insb aas (bad) sbb dec loopne out (bad) mov insl into fstl imul rcll add mov lret xchg push ss cmp clc add mov push dec adc and mov sti icebp insb rolb movsb and and aaa bound sub out lods repnz sub mov movsl or push insl jno mov movsl (bad) cli stos in adc cltd mov cltd repz into aas ficompl xchg lret (bad) mov imul leave loopne and cld rol arpl mov inc outsb jbe cmp push pop jmp int3 mov rorl xor dec shrb insb jecxz test mov clc jge dec push pop inc scas lods adc outsl adcb ljmp mov or inc mov and scas xchg call clc pop mov jmp mov inc scas scas xor dec adc fwait xchg aas sti xorb pusha add pushf or mov into inc jno jbe out or fcoms stc inc mov jp adc (bad) mov popf movsl xchg xchg or pop or iret (bad) jbe inc pop imul mov cmpsl cmpsl sahf cs out jge fmuls pop pusha out jne fisub iret daa pusha loop mov into sti sbb mov mov repz pop and dec mov pop ret fbld outsb jp inc lahf aad cmpsl pop mov addr16 bound insb movsb pop fmuls insb jb push cmpl jmp pop jae mov cs mov jg xlat or pop cmp inc mov aam out xlat (bad) sbb (bad) imul sbb or lret dec push mov popf xchg mov fldenv fnop pop and jl rorl cltd mov jg insl or inc add adc xor pop insl ss and sbb cmp mov lods and shlb sbb int3 xlat (bad) es xor cmc ret in stos dec movsl sbb push add xor insl sbb push call lret pop xor (bad) fstps or cs sbb xchg (bad) testl mov mov add dec adc das or mov xchg mov dec shll push pusha (bad) sbb scas xchg cmp ficom scas stc aad inc (bad) je bswap jl adc pop cmp int or xor out dec dec rclb int xchg es ret adc popa pop repnz ja mov push ret nop xchg sub or gs lahf cli and pusha sub push lahf and mov movsl into jmp imul pop push mov jnp pop arpl sbb add in (bad) xchg (bad) mov inc out movsl iret in mov clc imul sbb sbb pop rcl xchg push xlat and setl xchg push pop sbb jl out mov sub daa cltd push fsub pop enter mov in jmp adc fs cmpsb and mov cmpsb lret or mov fimul out pushf rcr cld test in daa lret es in je jmp pop pop mov sbb outsl rolb jno cmp or and movsl and rcrl mov inc pop repnz inc and fcom fstsw add popa jnp xchg add scas and add push ret mov inc push adc js arpl xor push or mov arpl mov das adc adc gs mov imul dec push clc fwait int push (bad) pusha xor je pop aad out jge xchg jp rcr mov ret shrl mov nop lea ror imulb (bad) push dec mov call negl xchg cmc (bad) es shlb dec inc in mov sbb rcrb xchg cltd incl loopne mov movsl stc les dec push movsb push pop sub sub inc or sbb stc rolb cmpsb xor adc pop and push dec (bad) dec fldcw pop loop adc mov push inc in outsl (bad) es ret call bound sub clc push test das jmp mov cwtl or scas lret add push in test push fisubrl iret nop lahf xorb push pushl outsb mov (bad) push mov xor mov inc movsl sbb daa mov incb (bad) pop jecxz dec bound rcrl sbb cwtl dec into jg pop jmp or repz imul leave arpl cs cmc scas out and (bad) jns or fsubrs movsb xchg iret int mov insl mov xchg loopne push dec js out jb cmp popf inc xor cltd and mov add lret int3 pop cmp loop xchg in inc fsub inc arpl loope shrb push dec leave mov rorb cmp mov xchg cmp mov push xor das pop shll loope or sbb jnp sub sbb int3 pop insb inc sbb lret mov cmp cmp aam stc mov (bad) std xchg xor mov sub and jae pop jmp roll sbb sub xchg pop ljmp insl in jmp cltd jmp test mov dec rcrb xchg push push jmp push test jecxz mov test ret in or jmp mov cmp pop mov mov cld mov inc ds dec imul pop insb dec fcoml and mov into mov (bad) hlt loopne add stos (bad) or insl clc mov mov pop cwtl test daa and fcomps jecxz (bad) mov mov imul inc stc add lret push inc cmp push push lret leave mov adc push aad cmp lret lea inc adc scas ss inc popa add negb push stos xchg insb aas jbe dec in in aas cli jle xor xchg (bad) mov subl jp test out sub mov scas push into lcall pop cld mov or xor fldl repz mov es pop aad (bad) xchg sub fstps es xchg xor test (bad) mov pushl ljmp sub in add mov push outsl mov je xchg cwtl pop (bad) pop xor aam jg jo (bad) cmp and xchg inc pusha add mov sub pop leave push sbb repnz and mov outsb xor jne push int push and cmpsl sbb stc mov pushl mov push dec inc push (bad) in clc xlat ja mov shrb mov mov int adc das mov sbb inc mov in or fistl lahf xchg jle jl sub das stos pusha dec sub inc jo sbb fdivrs pop gs pusha and mov jae mov (bad) sbb adc cmp hlt outsl pop (bad) cmp xchg addb popa inc dec cli cmc ret or int mov rolb insb xor pop lods (bad) fdiv cmpsb imul inc push xchg out mov (bad) testl fistpll pop add in add pushf test dec std in inc or sub push xor out dec or (bad) mov out add jo adc cmp mov out xchg insb sbb fnstenv scas push fs ljmp sbb cmpl ljmp stos sbb mov cmpsl (bad) mov arpl fidivrl aaa sub xor (bad) or add cli xor je adc mov loop push push or add fmul xor add xchg lret xor lock fsubs fildl pop push and inc push xchg jb or mov popa cmpsb mov push xchg flds xchg or das sub insb and in leave push cmpl jno aad push aaa clc sahf leave adc jnp pop mov pushf decl in loopne cmpsb dec xchg nop jnp aaa jnp sub push xlat push pop sbb dec cmp jbe sub fs int dec jle or push dec (bad) push cmp sub popa jecxz popa and jmp hlt icebp and sub pop pop and std xor test xor sub out cmp (bad) or mov frstor xlat insb stos mov shrb dec (bad) pop dec pop sahf loop mov mov test pop jnp repnz sbb mov cmp lcall aaa pop push stos push mov (bad) lret jg fadds sti movsb pop jbe xchg mov mov clc xchg bound das aaa aam inc adc mov push cmp cmp es sti icebp mov jecxz (bad) jmp dec int push call loopne jl and dec and xlat pop shrl (bad) icebp xor push inc add mov aad (bad) repnz les int3 inc repz and adc jo fisub xchg inc pusha repnz jo pop adc iret lcall jmp sti cltd idivl sbb mov push push and aas cmpsl in pop sub test cmp push push in pop mov adc mov rcll test mov sahf (bad) mov mov rcl ja push lods mov das mov pop adc iret mov xchg push fisub repnz pop xor sbb iret cmp lcall ljmp lcall dec push outsb xchg pop jp fstps (bad) je or repz xlat push scas mov mov sub push outsb sbb imul dec loop inc and fldlg2 in out jno push jns inc ljmp push addl cmp pop sbb cs cltd lods pop inc sub repz fdivrp les pop dec add stos xrelease push out stos xchg fldl push or jnp cwtl fstpl add in fidivr sbb out stos mov sahf xchg das in popw cmp xchg fs inc es adc mov sbb cmpsb inc push aas lods cmpsl sub adc mov pop gs gs bnd loop iret and (bad) ret cmp jo mov mov rorl dec cmp pop cmp pusha sub aad xor aad add ja out pusha clc dec icebp in pop mov (bad) testb add jbe mov fs cmp cmp je xor in cmp cmp ja or push mov sub mov adc sub push mov push ret (bad) sub ds inc sub add adc call xor jne xchg mov jp sbb lret dec outsl popa adc push mov inc sti push dec out dec jl or cmpsb hlt divb movsb sbb mov fistpl hlt idivl repz mov push test jle in mov fdivs adc cld add test cmp ja sti sbb xchg push jne loope inc bound loop call and sar cld add into push cmp lret insb hlt adc ret leave mov xor cmp or fsubrs fs das jne inc cmpsb nop pop je insb xor rcr mov (bad) pusha pop pushf icebp mov pop sub cmp jp inc jge add movsbl int jne fbstp push loopne stos jl loope es dec imul dec add xchg and cmp push mov movsl pop rcll fldt repz imul sbb leave inc dec rcrb and xor js push mov loopne jl mov movsb daa (bad) mov cmovl (bad) aad inc pop sbb loope push add mov jp lods aam test inc stos adc lret gs (bad) jnp (bad) repz (bad) fstpl lods out lahf lahf popa sbbb inc loopne or pusha mov adcl je xchg pop xchg mov dec pusha add dec daa ja inc jg jl adc aas pop cmp fwait pop sbb adcl mov fnstenv mov mov fcmove pop add int pushf lock xchg fs adc mov or stos push and cmc das mov sbbb sti pop ja fxch mov (bad) cli aaa fsts mov pop imul mov stos les mov ds mov pop imul and jecxz leave pop jno fldenv test sub repz test movsb test sbb pop mov mov std xchg pop jp adc outsl js inc popa xchg lahf sub and (bad) jne aaa mov cwtl cmp push sub aam jp dec cmp xchg cmp xor (bad) mov lea dec loop jge push dec ljmp push pop in push mov pop in inc ret out enter imul cmp out mov jmp pop and adc push cmpsl mov movb ss xchg stos scas jne sub mov lahf jbe push push adc hlt (bad) and lret cmp shlb movsl cmp mov cmpsl repnz push pusha mov rolb movsl push xor jbe mov inc in dec paddusw in aaa pop pushf out aam pop sbb sbbl xchg ds fbld dec mov call jg xlat and and mov test dec lea nop loope leave gs das mov or movsb mov hlt adc add cwtl out dec or (bad) scas ret push fildl insl push mov subl movhps jno sub jle jmp fisub xchg adc shrl out and xchg or test pushl mov pop xchg jnp mov push xchg (bad) mov lcall and xor xchg sub sahf (bad) mov mov xor test xor cli stos pop push ret mov mov and push imul jb shlb mov loop frstor out movsb fisubr pop shlb adc pop mov clc mov cld xchg int3 fistl scas xchg push inc adcl push pop (bad) xor adc xchg jnp ss inc leave mov sbb xor push mov push xlat mov sti negl (bad) test (bad) mov sub mov push pop or cmpsb aam sub xor (bad) stc pop imul and call test and mov out inc (bad) inc fisttp pop fcmovne cmpl loop add fdivrp in inc mov pop jmp dec push into popf cltd lods fistp aaa sub out out loop and jg ljmp sbb cmp repnz inc sub push sub (bad) pop cmp dec sahf and dec daa mov jecxz insl or fnstcw (bad) xchg cmp mov ljmp and ljmp lcall enter fmull xchg mov int3 mov jmp pop sbb lods jecxz mov inc (bad) jmp leave mov push mov pop loop cwtl andl push cwtl aaa jp add loop pushf popf mov push lcall jns jp cmp shrl mov mov sbb cld (bad) dec andb jmp mov cmp nop out cmpl and cmpsb cmp cs ss xlat insl push push repz rcrl xor pop clc push sbb mov add outsb mov mov jb shr dec sbb and mov jp cmp sbb insb xchg lret sub mov mov (bad) enter or xor aas out movsb inc idivb add in mov fldcw hlt subl dec mov adc jns pop xlat xchg popf repz daa mov sti jg (bad) push (bad) pop inc mov mov or ret (bad) add xchg arpl mov lds rcrb dec jmp xor out mov pop adc fsubl jmp push fadds jl add inc ljmp cld bound sbb enter add cmp or xor or mov mov and lahf (bad) sbb popf ljmp outsl mov popf push out lcall stos mov js mov xchg aam xchg xchg or (bad) out and mov jle mov out (bad) cli aam lret mov mov insb and sub add lea jecxz dec test and (bad) nop (bad) fistpl int movsb pop inc and xor rorl dec cmc cmp push xchg push rcrb stc xlat cmc rol pop ret jae hlt add pop dec pop mov stc mov jmp jmp or (bad) xor sbb mov insb dec rcll xor jno mov cmpsb int int and sti stos jae or hlt in inc and cmc mov adc mov daa lret iret push (bad) cmpsb jns scas out pop xor mov add pop movl call dec nop call xchg push inc in addl lea aaa sahf test cs and ret repnz cli cli mov notb push hlt adc xchg addr16 mov repz xchg mov es inc sbb sub outsb nop loop jno xchg xlat lods aas jg in or iret mov fdivrs xlat lea and test ljmp dec push sub ja cli in ja js rcrb arpl add fcmove pop lahf xchg jno pcmpgtd inc push adc cmp into xor aad lfs fmuls mov dec divb aas fsubs je xchg xchg bound ficompl xchg adc mov inc add mov mov add mov inc and xor mov test push popf xor pop push pop (bad) mov dec movsb jecxz jae bound push popf stos les mov adc add call es cmpsb fildll lahf xor push enter adc mov es fiaddl push xchg xor out mov movsl cmp mov jmp xor nop bound out rorb (bad) jo popa cltd pop arpl cmpsb inc push fmull push popl fs push lret out and (bad) sar hlt sbb andb icebp in or and pushf adc mov push push in add cltd xchg push xor push ljmp stc repnz jge add push test clc movsb xor scas mov add mov inc add inc inc pushf jb jo and inc mov enter jmp and or xchg push xor lahf push movsb ret xchg mov cmp jo xor pop mov das (bad) pop inc sbb loope lret cmp pop add inc add iret ret insb mov or add mov insb sbb lock push scas dec js mov out ljmp adc sbb inc popa ret ss aaa pusha not dec mov xchg std push nop outsb mov popf mov adc nop movsl dec repz into push cs xor in sub gs rdpmc mov cmp roll sub adc cmp mov inc pop and add clc repnz ljmp push sbb mov (bad) cmp cmpsl jns imul lds shrb pop addr16 xor pushf dec fmull xchg fwait and into push lret and cmovb mov je cwtl push movsb popa mov fdivrs sub jae das jne stc cs jb pop sub sub add pushf mov stos scas jmp jp stos jmp in adc jmp mov pop or mov mov sbb sbb pop repz outsb cwtl in fwait hlt lret and sub lahf mov (bad) aam notl inc insl (bad) (bad) adc cld mov out in cmpsl (bad) (bad) scas mov out lods fisttpl icebp mov ret jne xor jecxz in int3 cmc cmc dec pop sub subl push fstl cmc mov out repz fs div out fbstp push les mov add out adc xor adcl out (bad) push popf cmpsl mov lahf xchg cld mov jb mov or enter pop push lods sbb test (bad) cmp add push sub fistl dec inc inc sbb mov (bad) jb mov decb jae push int3 add aaa clc or xor cmpsl dec cmpsb pop inc inc in out push call (bad) repnz shlb fimull mov psubusw add and das adc xor cltd push dec insb mov addr16 sbb daa fwait ret cmpsl pop inc push xchg enter popf int3 jae int dec cmp push and sti test mov negl movsl and mov push out push lods sbb add and inc cwtl mov mulb popf dec arpl lcall add imul outsb shrb adc arpl or orb ss psubsb stos daa jns and xchg dec sbb dec cmpsb lock (bad) js sub repnz sbb add leave sarb xchg scas xor fwait xchg inc sub fcom mov inc scas std cmp add cmp popf pop cmp pop rcrl push sti loop int3 mov iret stos push and add mov adc lock pop ljmp mov (bad) mov int mov jmp decl sbb pop pop xchg out mov adc ret or subl inc (bad) out ficoml pop jp rcr cli pop sbb xchg sbb mov xchg sub cmp ret fnstcw (bad) je dec mov and fcoms stos jp add je les push bound sbb xchg xlat out sahf xor je gs mov lret jg fadds clc shrb sbb movsb sbb mov test inc les rol lods daa cmc or add dec push loope dec int3 cmp icebp ljmp push sbb sbb pushl and addr16 or and jge sbb cmp cmc loope push scas or ds imul out jnp dec loope (bad) cmpsb mov mov fcmove push lret adc sbb dec mov sbb xchg jge mov fiaddl (bad) divb js pop fimull aad decb pop adc push inc inc inc out call (bad) push adc lahf and mov das xor mov xchg fs sub add push movsl jnp nop inc and dec popf adc sub mov fucomi xchg stos aas pusha dec ss mov xchg inc int3 scas arpl sub and mov (bad) adc mov std test int int and loope xchg pop push or rcll sbb clc dec pop fstpt jg xchg pop orb push testl add add leave dec mov jecxz mov sbb jmp iret cmp jo dec out test pop adc mov movsb and outsb push out outsl ljmp mov sahf dec mov loop jp inc xchg test in cmpsl add rcll icebp push sahf sbb rolb (bad) cli test adc mov jg daa daa mov test repz dec nop jb inc imul and pop lock add popf push nop push aaa push (bad) ljmp xor pop inc outsb cmp mov out push lret scas pcmpeqw es inc movups xor lods out and pop (bad) dec jae roll fcmovnbe rolb jnp ljmp lods out mov inc insl gs mov xchg (bad) xor loope mov outsb dec mov mov mov pop sbb movsl loop cld (bad) dec jae mov addr16 jo push mov adc or xor es movsl mov sti aad sub into jge enter push je cmp frstor and fdivrl mov out std arpl stos ljmp inc (bad) int jle xchg pushf pop fdivrs adc mov and sub inc aad pushf leave xchg insl cld aam out pop das dec je ret or (bad) dec lock test mov mov mov mov or xor push aas mov arpl push xchg in fstpt ffree out sbb mov stc cwtl add cmp xor push jo fstl xchg push cmp mov inc inc enter add sbb test movsl divl int cs jno test testl inc loope xor jge (bad) push pop pushf dec js shlb push sahf xchg cmpsb xchg (bad) enter aam fadd (bad) cmp inc mov sub sti jae xchg and ret (bad) (bad) in aas in pop or das adc out insb xor jno mov adc jns (bad) cmp dec sub cmp pop jns enter jmp mov loopne nop in jg mov jmp push out and sub jno add sub test xchg fdivl stc ja imul imul cltd xchg xchg into fnop (bad) enter push test ret mov call std popf imul fistl xor xchg test cld test mov (bad) icebp stc lods jecxz outsb test dec fwait stos sbb mov sub call jmp imul and add mov addl push popf out (bad) jp insl push pop daa dec and in shr sub jmp xchg cwtl lcall inc add ja dec add push ljmp sbb xor and sahf in xchg or jns hlt mov sub std aaa adc lret je mov fnstsw cmp lods data16 pop daa mov add lret inc fstpt movsb or sub test movsb loopne or in rcll loop shr dec lret xor mov fsubp sbb xor inc addr16 movsb xchg fidivr pop nop shrl shlb dec xor cmp add xlat cli loop sti sarl ds inc mov mov int3 mov mov push jne jnp sub pushf cs or test mov out adc movsl iret in (bad) or bnd in dec jecxz data16 mov mov imul jo ljmp fadds pusha jnp (bad) adc in push jle nop gs int3 sarl mov je das cwtl imul bound jnp in jb xchg ficompl mov xor sbb cmpsl adc mov pop rolb sub mov shll cmp pop cmpsl push or out je and adc mov mov mov push pop aaa adc add xchg cmp jns roll or in fs scas xchg xor adc inc inc pop scas es mov push jns scas arpl mov sbb iret cmp out jecxz or xor dec call aas jae pushf lahf stos (bad) dec scas test fimul xor iret aas movsl out cld mov xor push adc (bad) xlat sub cmpsb adc ja mov mov pop mov (bad) ret fwait scas movsl pop das js pop push xchg mov lods call aam stos popf ror cmp lods xor ss into mov std push (bad) inc ljmp cmp cmpsb jns xor jle nop fldt and dec icebp repz pop mov xchg popa test and loope mov nop pop pop outsl int3 stos aad frstor jp mov pop jns pop ja cmp imul adc loop mov mov std ret stos addr16 data16 sbb ret cwtl mov idiv movsb push cmp jne (bad) jo adc ljmp insl push stos (bad) xor popf sub jne pop dec and mov lret xorl push cmpsl xlat and popf imul cwtl int3 add lahf notl sbb je cmp or pop rcrl sub mov fwait xchg jecxz inc jmp sti lods cli mov test pop add jmp insl (bad) stc lea bswap mov out xchg stos imul in lea dec loopne shr scas enter jge add push aaa leave rcrb mov (bad) outsb jecxz pop aaa cmp lods push dec into dec xor test inc ret sbb aaa in (bad) int3 (bad) into int out (bad) dec adc mov sub je and mov rcr cmp fsubrp (bad) add out adc dec dec lcall lahf mov push mov inc xor or xchg in xor stos mov pop enter out mov push icebp insb pop fwait mov cld add push das int3 or cwtl lods data16 xchg adc jmp jecxz movsb sub dec (bad) int3 mov inc lcall and loope adc iret (bad) in lret fcmovnbe ljmp mov sub jp push inc pop pop sbb leave xor pop (bad) mov insb (bad) push xor jmp or pop inc dec (bad) pop sub call shr cs gs mov mov pop stos insb lock lret (bad) lcall sbb and repz fdivp aad jecxz jge pop xchg lret out fnstenv or xor push push pop inc xor add jl gs (bad) fldcw icebp xor add jne adc sbb pop or xor int mov jp pop xor sub mov xor adcl shl dec sbb mov push pop aad push inc out gs (bad) popa add out aad addr16 js les push and fnstenv cltd mov xchg ret ljmp jo cwtl fisttp add push insb in xlat (bad) cld sbb in jp in ja lods adc jmp mov popf mov ret mov bound mov jmp mov aad es std jb (bad) mov jecxz mov mov ss jp (bad) mov jl mov pusha pop (bad) sbb (bad) xlat mov cmp mov mov icebp adc pop lock loope cmp cmp test fimul jae bound pause lret bound pop and flds push xor mov mov dec cmpsb inc cmp (bad) stc xchg inc nop repnz adc push pavgw mov iret push mov adc loopne mov imul repz inc pop stos add mov imul (bad) jne ret mov push hlt push sub movsl add or cmpsl outsl mov mov mov stos popa mov push or and fcomps aam dec mov out arpl cwtl mov shl test mov inc sti js mov push mov aam (bad) dec int scas orl test jle imul dec idivb popa sub repz cwtl stc dec mov inc cmc fcoml xor fs (bad) xor repnz jp (bad) mov ret imul pop in aas sub sar mov mov inc push push cmp pop (bad) fdivrs xchg int3 cli cmpsb cmp in scas lds aam xor stos int3 stc and mov hlt ss adc cmp sbb lea xchg mov add stc leave adc xchg in (bad) sbb aam stos jne mov inc rcll mov add movsb insb sub adc lods mov and fwait inc xor mov pop sub jge clc or sub or jg sub and push dec jp lret or ficom inc jle sbb fstl jne dec ror ja rol and xchg je or shl lcall jbe arpl adc leave or ss xor adc fadds js ljmp or mov or lret lods stos ret std mov jl subps lret and outsl push (bad) mov loope push lods add jo (bad) dec cmp jne stos jle or into imull scas jo push sub mul (bad) and xor jnp and mov (bad) popf cmp pusha iret jbe (bad) icebp add xchg icebp test inc pop icebp inc out mov jmp inc (bad) cmp xchg loop pop je add pop add fisttpl ja push lret sbb fadd insb aam ficoml fs pop inc or daa pandn xchg std repz mov into pop stc repnz into mov mov mov or or sbb sub or sub (bad) mov xchg inc xlat push or js mov sti add inc ds loopne fwait rorl neg mov add pusha into call aad cli cmpsl xchg mov fildll insb pushf xor lock bound outsl mov xchg xor ficompl ret lret and jnp sbbl lds je pop clc gs and mov push scas cmpsb and fs or mov pop clc mov add mov mov out dec xor es xor sti mov adc insl lods pushf cli (bad) (bad) adc push mov lret (bad) int test add pop call push pop push push cli dec jecxz push into in dec loop lods ds das lock scas jecxz or shlb and (bad) pop fucomip adc pop mov repz push pusha sbb dec (bad) and les fstpl or pop xor jl,pn lret int rcll daa xchg xor aad lcall inc test imul mov pop lret test test push stos jmp xchg add mov xor mov (bad) mov fild mov jge rorl cmp iret mov cmp push dec push sub mov pop ror roll mov dec cmpsb sbb xchg jg pusha arpl mov scas xchg sub lahf popf fdivs cmp shll addr16 in cmp fdivl mov jg das repz mov orl jl mov push lret out test cmp add jg adc inc ja add (bad) divl call xor movsl dec xor lret stos bound or aam adc cmp mov (bad) push jno jnp insb jmp xchg pop jno adc sbb rcrb add pop leave push inc daa mov fucomp shlb pop cmp (bad) jp jecxz and xchg jg cmc loope repz xchg mov btr icebp loop mov je int rorb push sbb or mov and vcvtpd2dqy dec mov jnp pushf fnstenv jae sarl js sbb adc sub test fwait jp repz dec jge add sbb cld xchg or bound inc mov in (bad) fcomi xor mov dec stc mov push adc rcrb lds lock addl xor repz xlat dec loope lcall inc xchg out lret add adc cs jbe push popf shll daa outsb jae xor (bad) es outsb out les or inc inc xor das adc nop mov mov (bad) cld icebp xchg fsubrp testl xchg cmpsl pop add repz stos inc dec push inc push out pop push imul mov out mull call xchg inc jg add push jbe jl cmp add icebp hlt and cmp dec sbb (bad) es dec add ss mov stos jg bound push mov or (bad) or dec insl pushf lods jecxz mov and call or aad push outsl jae mov and mov xor int mov mov sub jne cmp add icebp xchg sbb jne jbe,pn and shll addr16 jo or mov xchg or shll mov rcrl adc jecxz out andl je loope hlt and cmp xchg jecxz sbb mov push sahf jnp cmp fsubs jne add inc fistp cwtl fidivl jle roll sbb jecxz jl mov cmp sub lret arpl mov in stos call loop cmp mov je gs cmpsb inc sbb cwtl dec xchg testl xor (bad) mov inc repz or cli incl xchg insl mov outsb test pop or (bad) sar gs jne stos lcall mov or clc rcll sahf (bad) arpl xchg sub lea pop cmp rolb int3 testb ds leave insb insl and out mov test adc xchg popa in ss mov xor xchg (bad) or adc icebp cmp and out mov ljmp js pop xor add gs dec sub cmpsl pushl or mov cmp cltd lahf jns sub adc test adc ret or xor mov xchg xchg outsl mov xor ret pop push or push push xor xor into fisttpl mov mov add dec or (bad) cmpsl jl cmp push or sub icebp ja xchg and cmp xchg int rorl jb adc sub icebp xchg sti xchg pushf adc sub fidivr in dec jnp pop cltd movsl jbe pop fsub jns outsb retw mov xchg xor fiadd sbb adc pushf ss outsb pop and gs lret jmp jb push jns pop mov stos movsl insb jl hlt idivl rcl (bad) leave mov add iret movsl pop loope mov (bad) jb push xor popf in ja lock jns inc cmp popa jno (bad) mov popf xor mov mov push mov jns sub fwait dec setb mov loope scas xor loope (bad) js adc mov fdivrl sahf xor dec adc fwait jp stos aaa pop lcall or jae jl jae or push lds imul add mov mov push leave in imul cmp repnz scas ss loopne aad in mov (bad) push pop add dec inc push mov adc out mov lock addl and out imul repnz mov pop xchg sub roll daa dec bound (bad) clc and sub lret test inc sub into mov pop sub add int3 inc rcll inc out jnp add cltd push dec mov stc adc stos out jge ret push (bad) out push sub comiss outsb xchg inc out mov xchg jns out push shll xchg sar pop (bad) sbb mov aaa cld mov inc (bad) mov sub inc sahf pop scas loop test das add cmp cs sub lea xor mov push test ja mov icebp (bad) lock mov daa or cmc and ret aaa idivl xchg shll stos pop mov cmp es hlt (bad) leave ror jg and fbld pushf inc icebp std aam popa test push mov hlt cmc push cmp cmp subps jae xor adcl insl jecxz mov pop mov int (bad) ret push cli dec jmp xlat lret xlat xchg dec les mov and outsl sub push push cld out adc gs add inc push dec inc aad (bad) bound mov fildl dec dec pushf or call xchg add mov (bad) out xchg push or call or jg outsb lods add adc test mov sbb notl mov scas sbb outsl mov aam gs in gs aas cs das iret xor loope test fucomi jae arpl adc pop hlt imul sti leave inc xor aad icebp (bad) sbb ljmp rorl sti mov jmp xchg lret sysexit lock scas lcall dec adc out jmp pusha and push js test adc stos push adc scas jns fdivl or stos nop push jb push lds sbb and mov xchg jle loopne sub aas jbe ja icebp push lret cltd js xchg (bad) xor (bad) cmc jg nop mov nop add cmp repnz aaa pop mov shrb sub push repnz shlb jp cld je lret test aam jp imull pusha jno xor sbb shrb stos mov push inc lcall push inc dec fstps jp xor jg pop sti pop push xchg addb sti mov fimull jle jb or jb add vcvtps2dq xor rcl (bad) icebp push pop jg mov mov adc shll mov stc leave add mov loopne push pop (bad) sub imul or and test sub jno xchg and xorb cmp xlat stos iret or sti daa popf xchg push fwait out fldt jecxz shrl fwait cmc loope inc cmp mov jge mov dec ljmp movsl aad push pop adc insb stos xor loope cld cmp mov imul fisubrl push test push or (bad) iret xchg imul aaa out loop mov mov aam cli mov xchg and add xor cmp jae stos push mov scas ds push (bad) int3 outsl fbstp negl mov divl stos jecxz cmc mov mov lret aad adc out sbb push arpl imul in enter hlt add and and notl int3 clc adc or mov xor mov and in dec mov adc pop jp jge test cmp xchg push lods cmp lahf popa cmp adc cmp aam add sbb out (bad) movsb dec lret sti mov dec jle jl push mov mov or mov cmp std push lret sub or mov cmp js mov rcl mov leave cli sarb dec (bad) inc shrl test mov (bad) jecxz lcall pop ja sahf sbb sub mov int cwtl bound jl mov pop inc or cmp or mov (bad) push xchg or xchg andl xor add andl mov mov xchg fisubrl push mov jmp xchg and pop xor test xor fyl2x imul add fucomi pop js in shld jmp shrl mov ret stos mov in pop xor int3 sarl stos hlt mov mov cwtl lahf (bad) aas and arpl or jmp (bad) in ljmp cli inc mov pop jb bound add cs cwtl std stos and cmp cmp jmp add js cld pop cli xchg mov mov jno loop mov push xor fwait cmp scas pop jbe,pt mov testb inc je (bad) outsl pop stc insl in loope pop jae popf jecxz aaa aam mov inc pop in cmc les pop push ss lods addr16 lods mov negb mov pop imul push inc xor out xchg loopne adc imul mov pop js stos bound mov inc hlt xlat lahf test inc sbb outsb arpl sbb shrl pop mov cmpsb jae inc jmp xchg mov gs jp call add or test push xchg xlat xchg jmp or pop idivl mov pop push push inc mov negb cli shlb pushf xor xchg xchg into loopne mov cli sbb mov ret js fwait out sub pop and sahf clc mov push test add add ljmp repz ss inc mov mov orl cltd fnstsw orw xchg adc jp in cmp mov cli mov repz cwtl cmp movsb leave mov xlat cmc and cmp setge mov aas iret or pop xchg or out sub movsl push aaa aas les dec ret popa mov fdiv jb mov adc ret mov sbb or in add int js sti outsb (bad) incb fwait ds cltd jae mov sbb sahf psllw fldt rcrb dec mov fidiv popf test xor imul call push icebp dec cmpsl pop adc sbb rolb lret hlt and xchg jnp cld dec cs (bad) fidivl daa cmp sti lahf add pop (bad) scas lret fwait add insl pop lahf outsb gs gs fimul test popf sbb cld mov push aad cwtd and into and sahf roll adc push pop xchg mov insb adc iret lods lahf mov xchg jmp insl pop js movsl xor call cmc add xchg sti repnz xor add std repz cmpsb and out loop adc sub popf mov cmp xchg loopne (bad) xchg negb out inc mov das das push (bad) or std es hlt dec push mov ljmp in mov xchg jno mov adc jg pop es xor iret dec pop loop push cltd movsb xchg mov fdivrl movsb push (bad) icebp xchg mov adc push xor jle and jmp fnstcw int3 cltd dec mov mov jne (bad) mov loope int3 mov daa std bound adc movsb jns jae popf push fbld add pop push ss stc enter loope xor (bad) dec mov rcl out test adc (bad) or icebp mov push xchg aad jo negb data16 ret lret cmp inc (bad) and out inc and xor int mov icebp insb jo or lods insl rolb lret int jb xchg cmp mov pop push ja inc push push iret imul mov push scas jno inc out lea andl jns (bad) out sbb orl sub sbb pop jl scas mov cmp pushf xchg shrb adc push push jecxz popf or dec or mov mov clc jmp fnsave jp mov (bad) nop movsl mov test and push orl mov clc and xchg out push cmp repz out add popa out dec mov test push fist xlat out pusha sar dec pop push fxch jg pop cltd out test lcall std xlat or call sbb mov imul xor mov les or sub mov mov (bad) repz cmpl icebp mov sub and adc pushf dec dec mov inc inc mov les scas icebp push sbb inc mov bound xchg test and mov xor leave aam popf fsubs push sbb pop lret xchg pop cmp or mov inc insb sbb inc addb leave outsb cmp adc outsb jp cmp xor push movsl aaa jmp push xor pop or sbb les scas (bad) (bad) sub mov test mov dec rcll inc aas dec mov int (bad) cmpsb push sub inc cltd popa fsubs adc dec mov bound (bad) lret mov add popa adc xchg push cmp sub adc xchg and adc scas inc ja in mov stos and mov lret mov inc (bad) out ja cmp and xor mov in cmc enter fiadd jns test pop cmc and jae mov cmp cmp rorl or xchg cs movsb mov fcoms int fidivr add loope es pop sar ja sbb sub iret daa out jge or punpckhbw gs or sub push mov scas xor xor cli pop loopne mov jno in cmc js pop mov out pop pop and jmp dec pushf fldt out mov pop nop (bad) xchg popf jp xchg push dec pop ffreep xchg out jae test loope or mov loope jmp and lock popa ds push push push jae and push test inc aam or (bad) jge insb in jge out call jne dec int add leave ljmp aas jno xchg sbb cmpl aad inc sub stc mov out dec int3 fstpt fldl2e jmp outsb mov xor push test icebp rolb pushf stc outsl rcl (bad) or or push pop adc pop cmpsb insl stos jns mov xlat xchg in push sub mov into out xchg (bad) lock sbb stos mov fimull in insb xchg mov mov or sbb push cmp push mov iret call or das push cs leave sbb je ds imul pop add repz fwait (bad) mov dec dec mov pop mov cwtl nop adc mov movsl mov lret roll mov xor (bad) roll mov push leave mov dec sub out mov lods mov cwtl adc (bad) imulb jno ret repz dec ds inc (bad) shrb (bad) mov cmp in xchg push jmp lcall mov pop sbb ljmp call loopne sub mov push leave in mov cli call mov out and pop daa inc ret aaa js mov jnp pop adc or xchg rol add repz fnop adc lods inc xchg dec sahf cltd fwait jg xchg push insb mov xor jno mov push jae outsl jb xchg movsl mov out (bad) cmp fild (bad) stc jnp sbb out mov add daa jg add inc push jnp cmp adc push sbb cs lods or inc sbb mov das sbb scas adc (bad) push push pop loope jns add adc pop xchg and mov int add mov jmp aas push and jbe jg cmp in ret idivl (bad) rorl jmp mov mov cmp aad and xchg push mov mov es lahf mov outsb bound mov jno pop adc lds sub cmp jmp std movb pop lods daa les pop mov int add adc and lock outsl scas (bad) ja out (bad) gs mov pop mov or mov pushf sbb and mov cmp xchg inc xor in pop lcall and ljmp fstl or rcrb dec aad in bound mov (bad) ja inc imul dec mov xchg lret adc rcrl scas and in mov aad fdivrp xor lods lahf or xchg lods and enter je pop in pop cwtl inc subb arpl mov imul inc loop dec stos scas pop adc pop stc push mov mov roll lahf les and (bad) fsubrp movl aad mov es negl xlat dec cmp in inc push add jp cmp sub ljmp add mov popa jp mov gs and push sub sbb adc and (bad) mov xor inc in pop pop sbb push inc push cli cmpl lcall enter popa cmc bnd hlt and cmpsl or (bad) sbb pop inc dec rcll sbb aam sbb push cmpsb (bad) js cmpsb cli test hlt scas jo ret adc imulb repnz stc push out sahf andl mov lds inc shrl fs cmp in es setb jnp dec inc jge inc leave les jp adcl dec test std jnp xor cmp cmp jle jle pusha das test push gs stos int3 sbb jno,pn jecxz rorl cmp std pop xor pushf (bad) repnz xor das xchg push push aas ja push inc lods cltd and jnp loopne aaa ficomp dec or ds mov xor das adc cltd enter fs icebp and mov cmc out cmp lock push rcll and shrb jne jbe xor es es scas (bad) inc xchg mov shr jne insb sti and lods xor mov xlat popf pop testl insb fidiv mov jp lock mov mov mov cmpsb cltd xchg mov test mov ljmp inc test cld cwtl xchg cmp mov (bad) mov icebp ljmp sti (bad) scas push pop mov into xlat (bad) jno ljmp sub mov dec in mov inc repz xchg push or repnz test dec (bad) xor add (bad) mov insl xor into or jp add add notb aas subl fstpl push in in cmp testb xor test mov pusha inc push adc mov fmull out sti cmp sub stc sbb daa xchg int3 jbe out jle pop mov stos jbe sarb dec insb mov adc cmp inc dec ret pushf dec fwait xlat adc shlb mov xchg adc icebp xor or stc and lods rcrb xchg push push (bad) jle inc or jnp and mov sahf arpl mov cmp scas js sbb or push repz mov jne gs mov sbb ljmpw jmp or lret insl mull xchg sti adc xchg aas ss rcl add repz jbe push je or add pop icebp adc ja ja fild mov push inc mov and loop outsl adcb mov inc outsl jge sbbb in fs adc cli movsb test or loop jge dec je adc bound pop jnp pop int add loopne outsl (bad) jae push int sbbb and jno addb xor push mov movsl cmpsb mov roll in (bad) into fldt mov outsl dec or das in xchg xchg pusha mov fmull lcall xorl (bad) icebp call jnp out ret or mov sbb int push or fidivr cmpb add and nop or push sub mov psrlq xchg sub add inc out mov and das xchg negl inc lods sub shrb xor popl and in sub imul sub movsb or repnz push (bad) xchg pop pop xchg add shrl (bad) out pop push xor lock mov pop sub xchg rolb sub stc xor add ja (bad) xor cwtl pushf vmovq mov add ljmp hlt (bad) repnz das stc mov icebp add and data16 sub sbb and dec sub jge sbb push add sbb mov enter inc mov (bad) xor lea dec jge mov push imul enter shr or mov aad (bad) fisttpl sahf cmp insb andl fmulp cmp outsl or push adc inc push popf push adc mov xchg sbb adc (bad) adc aam test push pop bound addr16 mov push andl call jbe out jns jo mov outsb lods into rcl gs inc push xchg push pushf add inc cmp (bad) (bad) mov sbb ljmp and push dec ret mov sub sarb add adc adc aam cmc pop in aam mov pop lods inc mov pop (bad) loopne lss in jne pop or pop and adc mov or (bad) fs out jno movsb int rorb stos jae jl and bound lahf cmp add icebp dec popa lret idivl rcll xor ja mov pop cmp lahf test fildll aam incb (bad) adc ret popa je fs das and mov sbb inc icebp fs jmp and daa inc push in add lds mov sub lret inc cmp repnz insb insl xor lsl or add in shlb sbb adc rcl push scas ret lret das sbb insb inc lcall mov outsl mov and outsb rorb mov addr16 xchg rolb cmp xchg jge cmpsl cmp mov sbb mov add mov push mov imul out (bad) lahf jmp push in push sahf int loope daa fnsave cli daa add enter cmp pop cli xchg mov into xchg pop xchg lret push cmp and push andl hlt stc sahf sbb ljmp test sarb in add pusha lods stc push jo cmp pop lock pop mov fcoml mov xchg outsb rclb adc ljmp (bad) cli (bad) sbb dec pushf push enter fs or mov xchg loope mov je push pop das mov aam lcall (bad) mov hlt mov out sbb loope push cwtl mov and icebp inc (bad) cmc jg add mov push imul xabort sbb scas pusha test fs sub pop loop cli fimull add (bad) fistpll push das inc push mov sub pop xor mov xchg outsl mov test xor sbb fbld data16 and mov jle push add mov imul sub pmullw xchg jmp repz inc js mov stc and or xchg cmp sub inc leave mov and dec mov adc scas add daa jmp hlt xchg movsl xor mov push popa mov sbb lcall add jl pop cmp fmull or jo add addl mov ljmp xchg mov push lret stos dec das outsl cmp sahf mov add pushl inc sub xchg sbb pop jb in cli rcrb adc lods es lahf xor int out pop pop js add xlat cmp mov sbb pop add iret dec enter out aas xchg xchg xchg pop popf rcl mov cmp xor pop push push push idivb dec jl ds mov dec cld out adc jmp outsl and push mov cld ret adc dec inc scas test call sbb fcmovb lcall cs mov fcoml cs and and insl lcall xor pop jecxz cwtl mov pop sbb mov repnz inc jg incb xor lds push insb inc lret rclb adc cmp pop lret idivl imul pop pop inc (bad) dec sar mov in es fisubl int aam sub aad nop mov push push out cmc adc pop jne dec xchg repnz andw xchg in sbb push fnop mov mov movsb pop (bad) and mov ss adc call lcall cwtl dec push hlt add dec sbb xchg lods out lods int sub daa xor into (bad) push jns test ljmp xlat cmp cmpsl popf test sarb subb mov xchg jg nop in leave xlat (bad) (bad) mov sti fisubl xorb nop and adc mov jl add jecxz mov (bad) xor push bound stos cli mov jl scas xor push adc cmp pop jg lcall xor add push sbb fistpl dec loopne pop imul xor loop and lret add std fwait stos push jecxz sbb pop xchg pop sbb addl repz or mov or xlat repz enter fcompl mov nop sub adc arpl cld cmp fmull add push and mov cs aas aaa cmpb jle add mov mov jmp adc movsb dec fsubrs inc cs adc sub xor dec mov cmp cld in sbb (bad) loop pop sub les cmp jns insl and adc adc aas fmulp xlat mov cmp sub les xchg ljmp jae data16 xchg sub xchg jp scas jl xor mov insl pop add out std jnp pop mov scas (bad) jp add inc push jns divb repnz jae std push addr16 or push rolb ror mov xchg fs lret ja xchg xchg mov enter out int3 mov pop adc pop push push je push mov push push jb in sbb adc (bad) stc fidivrl add fs add cmpsb bnd pop xchg push sub hlt jg jle cwtl push js push cwtl mov cmp jmp lret push xchg dec sub roll push xor or aaa inc aaa sbb push fimull xchg adc sub xor dec dec test int jbe fs in sub jbe inc xchg jo sub push adc push mov insb xor and inc lea fwait stos sub inc and jb mov bound (bad) cmpsl push and idivb and lods insl inc lods arpl mov lods and jg cmpsb sub popa inc mov sti cmp jae sbb cmp fiaddl lock rcl mov push jle arpl jp jno andl scas mov in jne cmpl out outsb mov xchg push sbb dec fcom xor add lods scas cli (bad) in xor add dec sbb fildl scas xchg lret negl mov repnz mov jns out sub mov in lods cmp inc adc fs jl sbb adc push mov aaa roll shr or or sbb push in sbb int3 mov mov stos cmpsb sbb xchg mov cmp sub inc adc fistl in or out pop outsb imul pop or fadds dec imul jns inc ret mov addr16 fwait loop cmp dec and adc pop dec lcall adc lahf sbb aam push jge mov push or cs push xchg adc sbb call mov dec dec bound fs inc or sub lds add jle shl inc mov or pop shrb jae and sub or pop pop or xchg sahf xor xor rorl add xchg aaa xor rorl dec cld iret mov or sub ljmp fnstenv add jae mov stos imul ja repz into push xchg pop out dec or and repz pop push xchg or paddusb and iret xor jle xchg mov jl mov add daa mov xlat lods xor inc and cmp mov hlt jbe xchg lds push loopne int3 jnp mov rclb xor test push jmp mov ljmp dec or xchg cltd push mov inc (bad) jo test adc daa mov insb popf mov in rorl or push shlb mov loope movsb xor sti std lock mov cmp sarl mov cld mov decb lods add inc test lcall mov sub (bad) jbe das xor mov roll and sbb aas das stc push daa cld push cld xor cli imul repnz mov imul int jo sbb ret mov loope popa push clc mov xor add movsl mov jne std cmc sub dec xchg mov adc jo jno ja inc pop sarl pop sub fiaddl jge ljmp xlat aaa and cmp (bad) push ljmp dec test movsl jns sti xlat jne inc push fstps add xchg js pop inc adc add lea pop mov mov cmp adc sbb repnz dec iret loopne push stc push lods xor mov ljmp loop pusha or mov adc push es fstpl xchg loop fldt aas sub rol add loope jle inc in jae std psllq and fisttp or imul sbb inc dec rcrl cmp mov inc mov movsb mov pop mov lret cs cmp (bad) jno mov xor enter cwtl cmp mov adc cmp dec es push mov test cmp jg push sub cmpl int hlt push pop pop or bound stos call inc leave dec jp dec push hlt sbb mov cli jl add mov jle xchg pop dec and lds inc mov inc mov mov add and rolb adc lock lods decl movsb mov xchg fstl nop cmp andl in mov xor call lods popa cld scas loop movlhps das mov adc cmp nop stos dec xchg iret nop (bad) fmull mov xor mov test (bad) cmp mov dec jmp inc xor pop cmp (bad) pop dec fcoml cmp ljmp jg fs add movsl xchg aaa push push stos inc int dec in fcoml inc cmp dec mov pop sbb std and cwtl (bad) push and fs repnz call dec cmp imul scas mov add ds pop out jb js adc mov mov mov mov rcll mov lret (bad) push adc cmp outsb scas fnstcw fidiv add mov xlat or mov cmp sar push pop cmc jecxz inc stos lds adc pushf roll in xor push pop test cmpsl iret push push cmp add dec pop es cmpsb cs repz push negl push push cmp into (bad) test xlat mov jp js pop jns jnp movsl aad cwtl loopne std xchg dec mov movsl jbe rclb (bad) fcoms xchg cmc xor mov ljmp subb insb insb jecxz pop test mov (bad) push out pop in std (bad) cltd scas rcrl adc add shrl mov dec (bad) xchg inc push insl xor xor cli push lahf aas sbb (bad) xchg push in cmp cmp outsl sub outsb xlat push cmp sbb jmp xchg rcrl and out movsb cmp out xor aas inc and cmp sub cmpsb fs lahf pop xchg jno out cmp or xchg mov and and vpand in movsb sbb ficom inc jnp ret fsubp inc insb push loopne push in cwtl jmp cmp arpl add inc jb leave cmp jmp and dec leave int test loope mov sub mov cli mov iret mov adc decl inc mov cltd (bad) insl inc pop cmp test push mov mov push jne dec jo mov test pop stos out pop ret pushf mov push orl xor xor ss imulb fnsave jne pop (bad) mov jle dec xor cmp loop xchg xlat or jecxz xor jbe cltd cmp dec test mov cld in push mov repnz popa sub jl (bad) mov andb pusha jo fnsave mov xchg mov add xor pop xlat inc cmp sbb xchg or push mov xorb pop or sbb outsl in addr16 repz push into sbb mov xchg push pop mov cltd popf or lret insb insl xchg stos test cmp jo (bad) sbb mov mov ret jl xchg sub pop (bad) repz pop fldl2t lret xor sahf and jg mov xor sbb das lea pop cli dec lock (bad) xor sub js push push insb mov jecxz cmp xchg cmp jle mov (bad) or pushf lock jae scas inc or mov lret imul mov pop mov xchg sub adc jecxz cmp dec fcomps in movsl pop popf push push sub insb jp lock jl es in cli xchg imul cli rcrl jle movsb gs jl out push and jp outsl jg mov test inc adc popf imull (bad) (bad) popf fmuls adc xchg inc add xchg and sahf adc xlat push fidivr xchg push pop arpl sarb subl sahf dec cmp insl fwait mov in mov leave and push xchg pop sub mov mov ja call jge aam insl mov push (bad) rcrl arpl mov cmp cmc fimul adc loope mov gs call jno jl lods loopne mov push fucomip repz xor stos (bad) sahf in fimul int3 add divl fiadd leave loopne ds mov sub or adc cmp mov cmpsb jg mov sbb xor xor jns add jg push nopl push adc test stos cmpsl jge int3 pop mov fist lods cs xor xchg mov pusha fldcw push lods mov (bad) and xlat mov mov fild or pop pop pop sub into in pop (bad) or jg loope inc mov not pop loope dec mov test xchg rcrl jne std xor inc imul mov xor add mov fcomps inc dec adcb fcoms ds cmp out mov fs (bad) pop xor mov mov pop aam lods imull pop adc gs scas mov popf xor mov insb test mov jo clc pop leave dec in xchg jns sub lretw xchg push out mov xchg daa and sbbb or addr16 xor push xchg jl fwait hlt adc push loope mov jecxz aam or push scas mov xor sbb pop and push int mov dec cmc sahf mov loop sub jmp adc xchg sub pop add or push fcoms cli data16 fmulp js push xchg mov int3 sub sbb pop cwtl inc push lods dec xchg mov inc mov lock mov pop call cmc cmp popa test inc jmp xchg inc mov sahf mov mov adc xor call mov dec (bad) test push inc fsubrl xchg in or (bad) popa (bad) push rcl leave addl xchg xlat sbb sahf lret dec xor sub test add jnp test mov pop jl fstl icebp add pop adcl ret dec div cmp shrb (bad) mov imul (bad) or xor pmaddwd adc sbb xchg std pop jge addl lahf pop negb xchg mov jmp xor or pop (bad) mov std push pop clc mov xchg and dec pop inc (bad) repnz je add dec pushf in mov mov loop test mov sti or icebp ficoml jne imul mov or mov ds dec xor (bad) movsl lods (bad) jo std lret jns pop outsb push pop cmp int3 push mov int mov ja lods cmp mov fldcw dec js cmc and inc mov jmp test daa das fnop xor sahf bound shrb mov test in jge daa stc push stos adc pmullw out stos hlt push sbb mov dec sub push jno push lods outsb pop negb es aam inc mov (bad) jmp xchg gs fistl mov (bad) loopne inc or inc xchg cld push dec (bad) jg bound push jo mov sti int3 xchg cld aas xchg repnz stos inc xor js mov xchg sub arpl lret mov pop adc ljmp sbb in dec inc adc (bad) lods fcomps mov aad xchg dec jg xchg in mov cltd dec add pop in xchg jo adc loopne mov (bad) (bad) (bad) xor scas lods bound or mov cmp sbb in jb sub les push pop cmp sub push cmp out pop xchg fs loop push xlat les dec dec movsl inc cmp (bad) xor mov into loopne fsubrl lret sti dec (bad) ljmp mov inc sbb sub mov push push jl sbb xor jp ret cs fs cmp ss xchg pushf adc js loope out mov js fidivl lahf fucomi sub or inc mov push in lock loop dec call cmp arpl mov inc pop sbb test lock adc mov sbb out sub mov js fisubrl xchg jg inc mov sub loop mov std data16 (bad) sub iret mov mov clc inc xchg mov pop mov lcall adc inc test or sbb dec sub sbb out es in jge es enter leave out sub std icebp xor cli out mov jns push je cmp pop dec adc sbb leave scas mov dec push daa ljmp cltd dec jbe jg sbb rolb push imul lret xchg sahf mov xchg or or adc sub mov mov push sub aas jb xor fcoml aaa fnsave (bad) jne ffree scas mov mov xorl movsl test faddl enter xchg dec jg or adc xor adc daa sub imul enter loope inc xor inc jns (bad) or sarl enter cmc jo fdivs ja es adc dec mov imul loope xchg cmp push jb add mov xor sub jp sti sbb push and in out stos sbb out setne mov adc icebp mov push imul test js push aam cmp test cli xor mov lcall mov mov aam dec pop add call push push mov loope lret jle mov jbe mov mov mov mov test pop sub (bad) repnz lcall shll repnz clc leave jl incl xorl add roll add push fdivr fwait popf js out mov cmp jle cmp inc and xor mov outsb and xor dec sbbb sbb mov jmp mov popa add (bad) cmp clc sbb das leave push clc pop addr16 es flds jl mov es cmp push loopne pop ret jae repnz das fidivrl lcall clc sahf mov add call xor adc insl or cmp push (bad) jge negb and push fwait inc inc xchg lock cmpsl nop push jae jecxz inc andl dec ret sahf scas ja imul jno xor xchg mov out xor mov push rorb xchg cltd xor inc inc inc movzbl cmp jmp icebp test xor icebp (bad) idivl out push mov and enter daa cld lods cltd jge fstps mov xor cs mov sub push dec les xchg dec fistpl and and dec or xor stos in rcll data16 insb les or ret jnp dec add sub out lret jnp (bad) je,pt in mov sti insb dec imul xchg loope jmp add push add aaa sbb fldt sahf mov popa xor jne loop and or lahf rorb fisub pushf lods xchg pop push into adc cld mov mov pop in push lods stos mov mov sbb mov cmp sub test call adc cltd clc mov adc xlat icebp jns pop xchg icebp loop xlat ja sbb test pop push dec mov adc fistpl and add push fcmovbe cwtl das (bad) add movsl add mov clc xchg push cmpb pop movsb sbb fldenv xlat mov mov mov mov out jo stos sub in (bad) xor mov mov ror jnp pop lret fmull (bad) sahf jg clc xor outsb mov std ss outsl sub cmp cmp jbe xor pop je fidivl out in inc lahf test int3 lret jnp push int3 mov sub aaa cli frstpm(287 les pop fimull divb xor in aad (bad) or push jl xchg icebp mov add mov push in mov dec nop sbb push xor sub sbb in sub cmp xor (bad) push sbb into testb stos jecxz aaa xchg cli ficomp ljmp pop sub jo pop cmp pop out mov int insb mov fcmove fldcw add pop bound das rol data16 (bad) sar xor cli mov stos je std xchg idivb and jnp pusha (bad) mov gs jae dec xchg mov sbb bound ret add arpl sbb pop outsb pop fimull push lcall scas mov xor jns loop add jb xor inc imul sbb movsb jo add xlat pop addr16 cmc pop jl pop add orl push and ja mov in js repz xchg adc sahf (bad) xchg sub dec mov or jo push jmp lods addr16 insl sbb jecxz mov push add fistpll rclb fldcw cmp js xorl and pop inc negb stos mov or jb mov add cmp mov inc loope hlt movsl out sbb jno mov push dec mov inc jmp test fwait push movsb std aad lods pop out aas ss popf mov cld or add bound jl mov push (bad) dec inc push cmp pop fmulp call sub out xchg fdivs cmc pop push cmpsl arpl mov cwtl call (bad) mov lcall mov xor test cmc lods cmpsl sub sub xchg xlat dec out out xchg mov (bad) (bad) sub adc push cltd dec sbb lret scas call inc lock fadds inc pop (bad) sub fcmovnbe dec loopne test fcmovne sahf pop sbb (bad) mov jno mov bnd dec mov adc in mov pop clc fidivl std outsl (bad) or int3 aas leave mov and rol inc cmp in add mov cmpl and mov sarl pushf je lret scas sti sbb aam movsl jg push or aaa xchg (bad) (bad) div add inc daa inc xlat sahf jns jle add iret dec popf fistpll lock movsb and cmp xchg outsb mov fnstsw imulb push hlt in cmp jns mov dec in in insb xor pop or add cs arpl xlat push push pop pusha icebp mov test jae push xchg sbb push xor test pop mov mov lods dec push scas out or mov sti (bad) mov mov and stc ja shl xor dec push mov lods mov push and (bad) popa mov xor daa test int add jbe stos dec inc (bad) sub test sbb pop xchg rcl mov pop fidivr in sbb inc mov xchg push dec lcall xlat mov cli push stos inc and push jmp pop mov pop or into fnstsw leave (bad) sub mov js pop xlat leave leave inc (bad) mov int3 out push push adc dec xor or lock out inc jno jb add int or pop es enter scas (bad) out fadds iret jns sarb lcall in cmpsl cmp rcrl add and pop sbb lock mov outsl mov mov xor sub xor aaa inc lcall (bad) jecxz scas sub stos fisttp aas adc push popa jmp std jo adc and cmpsl sbb cmc push and sbb data16 dec sar jns sbb gs adc xchg dec scas inc (bad) out in dec and push mov xor inc jae jne jmp lock inc inc iret (bad) xor and test jo dec setnp xchg jl add mov imul adc icebp jmp imul clc mov shll fiadd addr16 addr16 lock test mov lock adc xorl mov sub shll cmpsl inc add in jge or or int daa loopne xchg or cmp sub mov lret fdivrl fisubrl daa loope shr icebp jo sub iret out test out mov les sub or mov rcrl insl rcrb movsl pop push icebp (bad) xchg and outsl into (bad) test xor push and jp insl pop out dec jecxz jne cltd fimul dec mov mov jbe and sub sub les mov fwait loope fnstcw pop dec jge add mov xchg mov pop mov cmpsl daa sub cmp pop pop mov in xchg dec hlt mov (bad) push cmc imul jne jns aas shlb and (bad) and cmp inc and or stos sub jmp out sbb push out jne adc pop jecxz stc dec jnp xlat sub arpl jne lret xchg inc mov movsl mov inc xchg ret inc (bad) pop add fldl insb lock lret call pop push (bad) or out xor shl sbb sub push jl into fsts (bad) sbb ljmp pop mov icebp xor stos arpl fcomip adc and push jne cmp jbe aad adc and or clc lock and cld stos pusha sarb std push push pushf lret dec mov fcomi jecxz lret pop mov insb (bad) mov pop adc gs or jp xchg gs dec push in mov cmpsl dec mov push sbbb icebp and gs sub je or and outsl pop adc out inc push mov mov js dec dec xor int3 sub gs inc sbb fidivl inc mov inc loopne dec jl js sahf int shrb int les lret jae std dec nopl sar out cwtl jne imul xchg popa call sbb ljmp loopne xor dec dec mov stc insl sahf fnstsw sub in inc ret add xchg inc es pop cmp mov push ret sub sub cmpxchg or clc mov aad (bad) jmp xor repz jne stos fnstenv push mov mov lret stos lds add jns test xor add add rorl cmpsb cmp sbb mov adcl outsl (bad) lret nop idivl inc hlt stc mov movsl popa xchg mov dec jcxz and (bad) in test xchg cmp aad repz aad js pop jne daa mov dec mov jae sbb test cwtl mov jmp mov ds arpl ss popf leave xor mov aad mov adc fidivl adc rcr ljmp mov fistp push lret mov and mov pop rcrl std loop rorl test pop jns popf ss scas aas pushf cwtl jb xor sbb sub mov xor jae inc adc add (bad) dec divl sub push enter int push xor (bad) jecxz sub xor mov mov dec cwtl pop xlat pop pop push mov test mov (bad) fucomp jp jmp rcll outsl lods lods rcll ficoml sbb je out repz in stc mov cmp imul and inc mov out les or sub fwait push add sub cmp fnstcw push xchg (bad) (bad) (bad) fcompl fsubs sub ror pop add pop sbb std ja xchg adc mov div mov mov imul (bad) inc arpl mov ss sub movb stos push sbb gs mov dec pop dec push enter xchg orl jl rorb or imul xchg cmp mov xor (bad) clc rep mov (bad) ljmp mov lds dec fwait incl mov int3 push scas xchg outsl shr xchg orl (bad) mov fwait jle ret cmpsl sbb mov test outsl add and loopne xchg jge lahf xor aas mov adc aas into arpl rol xchg sbb (bad) je mov fildll pop jmp sub push shrl cmp out lahf and sbb out inc and sbb outsl lcall clc stc push cmp mov sub xchg xor out inc enter sub push jo xor (bad) cvtss2si mov rorb push mov je xchg add jle fs push mov popa repz andb pop mov mov cwtl stos popf es inc cmp cltd stos mov pushf mov inc aaa fnop hlt out das fwait mov inc jo nop stos pop dec movsb mov adc das leave mov mov (bad) mov sbb mov adc xchg repz in mov gs neg adc leave and adc (bad) cmpsl nop dec dec mov and mov movb int3 mov jmp imul jp sub les xor push out xor and sub push data16 notb cmp int xchg cs jle sbbb sub mov repnz xor lret dec and repz test mov enter test stc lcall add ficompl sbb jae lret cmp clc (bad) or push pop iret out pusha gs push xor inc stos cmp jne ljmp jp dec fwait call addr16 imulb and sahf lock push cli xor jbe pusha insb xchg mov outsl insl popf push cltd cld lahf xchg (bad) lea lods mov shll mov push outsl addr16 push jg movsl dec scas mov mov push lahf pop mov daa xor adc (bad) out aad les stc cmp jb ficom popa mov test fwait call dec mov ja sub sti rol dec je pop mov xor add es in or jmp mov inc cmpsl mov pushf jo shrl stos dec iret push (bad) jae cmp test js fmull and or cmp nop sub jg jb pop pop stos add rorb (bad) test popa mov xchg push or push mov jg adc ret imul jb ja mov inc sbb rolb sbb lods xchg mov mov enter or jp and ret jge xchg sbb iret aas inc loop mov fsubr arpl das push std jae xor or les dec adc out and lcall cmp add shrb in fs outsl std cmpsl xchg in out bound xor lock pop dec (bad) aaa mov dec cld mov rolb cmp xchg sub add lock (bad) jg repnz aad add mov and dec es fsubl mov popf aas cmp (bad) out call fwait inc push cmpsl rorb jl cltd add jo jecxz test in cmp in cld cwtl out aaa mov data16 pop cwtl sbb jo sbb inc xchg clc bound or test leave cmpsl add or fisubrl out lret subb and je inc imul or es ja iret push cmp push outsb dec pop adc stos sbb mov mov mov daa je xchg push jmp std cmp enter icebp test in mov movsl mov in cmpsl clc mov add sub pop cmp cltd imul adc push cmpsl fucomi cs xlat or in adc out pusha shrl jb jns add fiaddl dec lods and mov and dec push xorl movsb cmp inc imul clc dec and xchg cmp cmp test sub (bad) loopne lods mov mov cmpsb jl scas hlt add cltd pusha ss and bound cmp xchg dec mov (bad) int arpl pop data16 loope and add mov pop adc in sub mov push clc jae xor int jbe cmp sbb add out repnz fs cmp hlt mov jo mov (bad) mov jo push cmp mov jno inc add in sub mov pop add jb mov fcmovnu mov inc sbb outsl push out mov lahf fmuls rol js push repz xor loope sbb repz cmpsb mov pop sahf aaa fbstp insb stc mov add outsl push jno add push or mov in add sub and dec and mov mov mov mov lret adc frstor mov jmp sbb pusha (bad) lret push push push sbb cmpsb mov sub subb mov iret ds xchg sahf mov push (bad) jne fmulp cmp je jmp push mov push aas sub mov mov inc pushf jg mov je jae adc clc pop in or decl repz mov pushf inc rolb sub pop data16 inc sub sahf inc add negb outsl adc ret cmp jp cmp inc and mov mov cli push (bad) add bound dec loop mov xchg cli stos clc or andl dec arpl xor mov imul addr16 mov mov jnp sbb sbb std jl and cld sbb bswap aaa add jge lock outsb push fwait mov add jl sub jge dec and inc pop adc fimul inc (bad) pusha arpl loopne sbb popa arpl xlat ja add mov adc iretw push imul mov adc es jb in dec lret insl inc and (bad) mov sub aas lea lods (bad) mov ss test ds sarb lds stos lods and adc addr16 in fs (bad) dec insb or cmpsb stos add aam adc dec movl pop add sub sarl movsl jbe out lods dec dec sbb rol xchg ss jo loopne add xchg jmp push jg inc mov cltd mov cmp fdivrs cmp inc loopne into mov jg (bad) lret add dec cmpsb daa mov push (bad) cld sbb adc jecxz dec fnstsw cltd adc xor rcrl jns sbb add jmp into fistpll pop out ret push (bad) mov das mov push pop aaa es pop dec sub scas mov fwait das das repnz push xor pop sub cmp daa sbb add mov cmc or sub (bad) (bad) xor int dec mov and dec push hlt aas xchg aad fsubr fwait cltd xchg cmpsl jle cmpsl insl aad adc pushf lock jb push sub out in inc xlat mov (bad) xchg int inc mov pop and jnp cmp cmp cmp mov out std pusha shll jg mov push nop jno jno ret or cmpsb pop cmp stos sub fcoms cmp sub xor add aas gs std addr16 cmpsb mov add mov adc fimul mov jle dec adc (bad) pop xor jbe push nop and cmpsl mov mov and ficom test push pop sub insb inc adc pop das mov aam xchg fdivrs mov jl mov fildl push pop pop inc push pop add rcl adc popf aas std xor inc fisubr adc scas out ja test jae xchg in addl lock sbb inc cmpsb inc and inc sbb xchg mov sub and sbb div insl ss cmpsb mov es pusha add cwtl and in sbb jb pop push mov push xor call dec in jecxz jb cmp cmpsb mov aas push xchg pusha int3 (bad) sub ret xor lret add ja xor (bad) mov cmpsb sub sbb stc or test test mov sbb and cmp (bad) push aam loope,pt mov sahf fmul mull dec loop add inc loopne js lea cmp inc push mov mov subl daa mov add push daa in pushf leave into loope out nop arpl cmp sub ljmp push (bad) in dec stos (bad) je inc in mov pop pop sub jl lds xchg pop mov pop jbe fst test pop call lahf repz mov (bad) (bad) jbe cltd inc loop fimull addl (bad) imul xor fimull out mov sbb dec adc cmp hlt xchg cmp add sub pop mov mov adc pop mov mov in and pop pushf cmp sub or (bad) sbb jp scas in inc (bad) jle jmp ret and xor jle or xor stos lods gs imul sub aaa or mov popf sbb mov adc lahf cmp adcl jne jae mov call cmp in cltd dec loop mov frstor mov sti dec jp jl xor cltd fadds or xor sahf mov insb fwait stos xchg pop dec cmpsb sub ficoml das aam push mov lock mov fs xor xor xor sub sub loope (bad) xor lret fdivrl add push adc dec jp fidivrl (bad) dec pusha dec add mov cmp add sub mov rorb scas inc inc rorb loop ret pop dec mov aam xchg pop daa sub out iret rorb sub push sub adc fsubrs jno sub xor sarb pop pop stos inc adc pop das popf aam mov pop fiadd or pop cmp pop rcrb ja repnz dec mov outsl mov dec popa daa pop mov stos stc xchg out (bad) out imul sbb inc out nop scas nop push mov inc adc xor popa es std adc pop push arpl push sbb dec cmp add int lret (bad) sbb rclb dec ds sub in pop cld mov outsb stos cli xlat and out gs push cltd xor mov adc xchg data16 cmc xchg sub xor pop sub repnz repz push adc test jle dec dec ja arpl jb int3 push jmp mov cmp sbb jo leave arpl push sbb lods sub test adc and cmc or cmp mov int pop lcall lock movsb imul add mov mov mov iret enter sbb out dec lret adc mov push adc mov dec dec push js inc add mov aaa push (bad) vpaddw dec xor gs (bad) lea adc fs jae sub popa jge inc cmp mov mov add and jns sbb fidivr (bad) outsb out or mov jnp mov inc fstl aas sbb dec xchg es test out sbb scas mov jno mov and mov push sbb insb and imul ret nop cmp jge icebp push lods cwtl cmp leave (bad) mov jle and mov or adc jl xor adc jmp inc xchg movsb jo sahf cmp (bad) fmuls pop mov fnop pop push inc cmpsb or sbb loop orl cs cmc pop faddl dec mov enter ljmp jg mov add jg or aaa subl push lcall gs outsb leave and mov fmuls mov (bad) push pop lods out in mov mov out stos mov xchg mov es shll icebp mov fiaddl add sub fisttpll mov jae push lds cmpsb jnp cmc movsl pusha sbb pop mov xor add mov dec and and jb cltd and ja cmp pop inc popa (bad) cmpl cmc sub and out adc mov aad in fldt gs movsb mov pop nop (bad) dec inc (bad) dec push sbb adc xchg repnz xchg popa mov aaa mov rcll ret popa les push popa aad loopne jb cltd cwtl js shlb mov sbbb inc xorl test jnp cs sahf and jae mov cmpb pop ljmp (bad) pusha stos stos ret xor jle push mov mov scas cld fistp dec or movsb in push xchg sbb jne xchg adc push mov pop push test mov adc hlt add jo push je inc jge (bad) push and jno rclb gs sbb xor fdiv sbb xchg xchg aas stc sub inc xchg xchg mov adc sbb hlt dec and adc mov cmpsb js test push xor jo insb out cmp (bad) shll cmc add pusha pop mov push sub sti lret add mov fsub xor cmpsb mov popf aas sbbb ret test push dec inc sti js notl mov loope (bad) pop dec sub pushf ret cwtl mov ljmp xor leave jge je push cmp psadbw mov stos dec and fdivp daa push bound adc push repnz jns jbe pop (bad) loope sbb das adc lret fdivp inc xor (bad) call movb jae jmp popf jno fisttpl call mov sbb je xor mov pop or or lods jmp dec mov fisubrl sbb fcmovnu mov fs adc repz xor aam jns inc sub inc inc xor mov or (bad) out insl sarl pop push dec or fucomp or loope and jecxz adc pop add out test and mov in pop sahf stos sub mov (bad) frstor ja test repz (bad) das popa push push push mov pop xchg lsl rcr (bad) or arpl (bad) jmp push xchg jnp int3 mov gs add jo (bad) outsb push xor js mov pop call insl outsb iret pop ret ja pusha jo xchg and out scas adc and lock ret and in mov imulb daa xchg arpl pop fnstenv stc add ljmp jno jo fsubrs xor adc clc leave cmc popa pop mov addl jae aad shr push inc mov cmp cmpsl out es push in jle cmp into imul adc sbb out in arpl rcrb xchg shll mov sbb or dec repz in sahf xor cli std sbb adc dec dec (bad) les mov adc std sbb mov lcall dec imul xor push pop and mov setne std outsl push inc sbb sarl push or jge cmpsb (bad) arpl in xchg cltd and pop loopne icebp pushf out adc inc rorb aad jge ja sub rcll fidiv cmp out sbb (bad) fldl adc outsb inc fimull sbb in std std popf jmp fwait in lret sub or aam pusha mov (bad) decl ret scas aad loope add fild dec mov (bad) fild lods icebp dec and aaa add inc lcall cli add pop lods mov (bad) cmp fcomps cmp iret shrl push fnstenv inc cs push fwait (bad) jbe mov mov insl sbb (bad) fstps pop mov icebp scas lods adcb mov jb add fcomip sub cmpb call pop jns cmp dec jecxz aad ss and adc ja sub lock mov outsb jne outsb pop inc popf aam push dec xchg in test sub lahf or sti push repz push pop loopne add lods clc mov push push cmp rcrl (bad) into inc or clc mov in repz jns sub cs xchg loopne sbb cmp adc shrb add (bad) push xchg sbbl test mov outsl pop pop mov jae stos pop leave or mov gs lret jb push dec fild test fildll ss mov mov jle mov xor (bad) mov (bad) sbb push inc (bad) je je xor (bad) and std lods xor push xchg jb mov call dec lea adc gs mov movsb shrl sti orl sbb lock inc cmpsl or orl mov jo stos cmc jle push scas push xchg loope or xor xor addr16 xchg scas dec cmp adc leave pop xchg aad ljmp push mov stc mull popf xchg fs into ja,pn stc scas or fistp push xor dec inc pop mov cmpb adc jp jge pop out xchg fwait add mov inc out jmp aaa popf xchg xor fildll mov add sub mov arpl xchg aam pop arpl or sbb lods add nop mov push js or hlt les dec jmp add fs ret into das mov lcall js pop jno lods jge in mov mov jne pop mov les and inc lahf in movsb inc pop fs decl in fildll test inc (bad) cmc mov inc popf aaa xchg lcall mov lret lds mov mov fbld sub push add out inc push mov mov dec pop daa out mov dec cmp sub les jle sti or jp (bad) int push or (bad) out mov inc push sub sbb push jae aad dec stos xchg fisubr in jae lock push cs mov mov mov in xchg jle or dec cmp and lcall lock dec push mov push ja (bad) mov xor adc sub mov mov push sahf ficoml cmp stc push (bad) mov and cmp inc xchg clc les mov xor mov aaa or lock test and in cli lcall fwait mov pop pop aaa add dec dec adc cwtl push (bad) jno outsl sbb cmp jl lahf outsb insl lcall mov pushf jg div lods dec inc inc sub xchg outsl sub cmp or jp nop hlt xchg aam mov stos jp scas mov jmp mov test dec in iret add sbb inc adc and mov add aad or jecxz addr16 in stc dec addl push push inc xchg sahf cwtl sub dec cmpsb outsb sub fstpl in mov stos imul out in add ja inc dec outsl gs ret mov add scas fnstenv mov mov insb mov cltd mov js push jno in or scas out (bad) or add cs and (bad) xor enter sbb lea xchg repnz or adc mov aam (bad) sbb mov dec mov dec pop pop bound dec rolb pop cld stos and xchg rol jp outsl pop add or in mov push xor adc cmovl inc out lods fwait popa arpl push jecxz adc adc in movsb js mov mov mov add jno add dec jo mov add dec lcall insb js and push sub jg test into cmp mov mov and add inc fisubr sarl mov ja xor stc jl scas pusha xchg ret hlt pushf sbb push mulb clc popa and test and push les mov insl jb pop inc adc cmpsb mov pop lret sub adc sbb (bad) and jae cmpsl jge pop out sbb sub jno pusha imul or fcmove xor sub mov test int3 xor nop mov bound adc insl (bad) jb loopne cld or imul or adc popa (bad) fistl or lds cmp lds or fcmovnbe popf lret stc xor outsl sbb rclb pop xor xlat enter loopne scas stos (bad) push push mov rcll pop push jns out dec push push sub out (bad) and xchg sbb je dec sub jne mov mov data16 push cli or pusha movsb or jns mov push aas adc xchg mov add mov aad jl outsb inc in rcl add cmp pushf cmp push dec cwtl xor lods int xor dec daa cmpl loopne stc jo aad (bad) enter xchg xor jno dec in and out bnd xor and dec inc xchg xchg push push shll aad or out sbb cmp sbb sbb adc push mov (bad) mov inc inc mov push outsb shll jnp inc lahf loopne or sbb jno adc add cltd imulb (bad) xlat je jae sbb sub lcall jge cmpsb insb sti pop sar gs cmpsb in or push push ljmp je mov ret push imul dec fistl loop arpl movsl clc lret add stc sarb add (bad) (bad) rorl adc je or adc xchg jecxz and pop mov sub test in dec out cmc dec push hlt ror mov insb pop jmp mov movsl addr16 popa mov hlt (bad) cmp outsb insl jbe stc mov mov mov xlat loopne push sub cmp push dec es jle int xchg (bad) (bad) mov out sbb and pop pop pop sbb cmp mov add sub xor mov mov outsl push test mov jb je and loop mov stc imul or mov lret mov inc les imul mov ljmp test (bad) push xchg pushl daa std scas cmp jle push cltd fidiv sbb jmp js out cmc cmp out mov das arpl dec push cld jge jne push aas mov mov push inc clc pop xlat idivb mov inc pop mov push sub lret push mov xchg (bad) (bad) loope lahf arpl mov sub cld pop shll push dec enter enter mov ja inc fwait jp mov loopne cltd mov scas movsb dec arpl pop mov out cs xchg push push sub pusha (bad) repz (bad) fcoms cmp jp xchg add test fnsave mov fisttpl xchg js hlt xor inc loop lods lods jae les stos sbb mov push divb les or and jg pop fldenv icebp aas add jl daa movsl mov sbb cltd pop inc aas push jge jmp sbb mov or shlb movsb loopne outsb (bad) pop fidivr push fwait mov and xor mov test or (bad) hlt adc inc lods mov in mov pop (bad) jmp inc cwtl stos stc push ja sub jmp stos jg sbb stos jle push data16 pop mov mull ja bound ror cwtl mov in dec xchg push aaa xor xchg clc in sbb ja pop mov je fildll pop jns fisttpl movsb addr16 mov je adc pop xor sub xor cmp stos bnd xor push mov pop cmpsl mov enter adc fdivrs adc rcrb cmp lds stos push adc test mov imul xor push dec pop xor and dec sti jae add ret xchg jl (bad) or xlat cmp bound hlt push jnp jae mov mov repnz cmp adc loopne movsl cmp inc sbb xchg (bad) and lahf pop lods (bad) xchg mov push mov dec add push pop jmp outsb sbb jl and lods and bound xor mov xchg pop out inc sub adc es (bad) jb mov or outsl fldt mov jecxz mov out mov fimul insl jae push or mov jg in sbb shl pushf mov push mov out out fisubl pop fnop xor cmp fwait jne xchg frstor xchg mov lods stc pushf push (bad) dec int ficompl lret ja jl out xchg shll and in push mov out fwait push scas addr16 jp outsl add mov cld sti jo mov nop popf and sub cmp xlat dec or push pop push xor inc loop daa push sarl cmp lahf aas (bad) shrb pop (bad) hlt aam dec icebp sub (bad) les insl fs sub (bad) aaa loop sbb mov sti xlat sahf jb and xchg sub ljmp fisttp sub jle inc jl stos mov mov lahf dec adcl inc pop (bad) mov mov and inc loope es movsb les dec dec mov and fcompl aaa bound inc sub inc arpl test sbb xor (bad) cltd mov mov xchg dec ljmp add jecxz int3 or jle aam or or imul mov or sbb clc push mov bnd mov pop imul inc ss mov cmpsl test xchg out fwait mov je push sbb enter lock mov xchg cld mov rcrl add out mov mov mov add notl dec rep pop adc out test xchg mov dec lea lret mov test mov shll dec lods mov sbb out mov scas mov flds push mov add jo push xor sub pop test push or fwait test into fist ljmp jg addr16 out imul outsb int push mov rorl pop cmp sbb and pop push fucomi pusha mov aas addr16 test fcoml movsb sbb cwtl cmp mov pop sti (bad) jno xchg sub (bad) jg sarl (bad) xlat (bad) or sbb in ret insb movsb sub fild jb xlat mov rcrb jo pusha xor mov fidiv std (bad) in je push add push test jmp sub ret cli hlt cmp pop dec lds rorb in adc sbbl jle negl mov mov push adc mov jmp sub cmp lcall inc pop and xchg mov or jns popl inc ljmp push mov xchg inc jmp orl xchg std xchg lahf cmp sbb into xchg cmpsl sub adc jge mov fisttp test xchg lahf lods (bad) ss popa je sbb loopne roll cmp pop adc dec outsb dec es in xchg jae cld addr16 fisttp popa aad js inc aam mov mov lods jle adc add add mov frstor mov jmp movsb jecxz sbb xchg jle (bad) hlt add mov iret lds dec ja aas xchg inc in cwtl or pop fistp lea out lods (bad) icebp loopne push pop or out add stos jg aad fidiv push sub push cmp leave jl addr16 sub ljmp movsl negl shr sbb sub aad fwait roll (bad) sbb int3 lock or adc sar stos outsb sbb sar jg mov fsts mov fstpt cmpsl ss imul test arpl mov jae or cmp cltd cmpsb in xchg pop jl jo popa and dec push dec jmp cmc mov xchg cmp movsl pop movsl out sub dec dec pop jp fistp das in movsl cmp cs mov test ret push add outsb lods (bad) insb mov cmp add fdivrp lret pusha outsl and sub int xchg inc nop nop xchg sbb adc pop adc dec and arpl xacquire cmp sbb (bad) pop lahf (bad) aam (bad) xchg push adc inc andb inc test outsl xor pusha mov cltd or dec mov inc push (bad) jmp lods lea push enter jne pop add jno push sub mov outsl je dec fs lret js stos and into fcmovnb add cmc mov insb in shll cmp sub or and adc mov cmc pop out (bad) jle xchg xchg mov fisubl mov orb sbb adc dec inc inc pop dec movsl push call test xor imul xor js lret (bad) gs and mov mov out cs cld je push fisubrl mov call loop sbb popa xchg pop (bad) jmp xchg leave sbb jbe pop mov lahf out push cltd sbb aaa xchg dec fcmovbe insl sbb mov adc out cmp lahf jbe sbb pop fcmovnb lock sar repnz push dec sbb aam js mov jle testb adc cmp mov (bad) sahf mov xchg cmp push pop aaa lret xchg cmpsb jp push fs xor push xor movsl not lcall xor lret pop jbe sbb (bad) pusha fidivl ljmp push sbb scas divb sub mov adc les jae imul fwait xor or mov push cmp cmpsl stos pop fadds mov dec mov inc ljmp pushf fs insb mov mov insl jne lret in hlt stc mov stos js loop mov (bad) dec test mov dec fidivrl cmp and cmpsl out leave mov inc cmc in loopne test in lcall rcl jg dec mov mov xchg push jo sahf mov mov ss inc scas hlt push sbb (bad) lahf jbe push enter (bad) jmp scas ja or es (bad) push js fldenv inc jno fcompl add or in mov iret mov imul mov fcoml daa pop or sbb fiaddl push cli (bad) pop scas cmpsl int3 call sbb pop and xor iret add xor inc fsubrl aaa adcl pop mov inc sbb adc xor add pop dec lret mov mov out jmp in in dec dec cmc mov cmp sarl in and stos (bad) lds pop dec dec enter push or ret scas xchg js mov test adc lcall leave push mov test mov loope cmp movsb mov rclb in cmp mov js sbb or xor mov inc xor and xchg adc cmp dec mov add addr16 mov fldl jo mov cld inc mov mov xchg ja es xchg out cld sbb xor fidiv iret adc pop adcb xchg test xor data16 dec aam pop dec inc inc xchg xor fcoms xchg inc int3 icebp clc sbb pusha pop imul in je jge roll cmp sub sbb jmp ret dec cmp in loopne jl lods cmpsl push cmpsb mov mov pop cmpsb test and dec cmp pop cwtl mov stc pushf xchg (bad) ss (bad) js jecxz jne outsb dec xor mov rorl mov imul or pusha mov mov pop lods call (bad) les and (bad) stc mov ds inc andl les jne sbb sbb fwait (bad) sbb fiaddl cltd mov je js sbb fcmovnu dec ret push add push sub fnstcw sub push pop inc cltd repz insl sbb or leave fisubr imul int3 shrl lret jmp das jecxz cltd or cmpsl xchg cwtl (bad) sub leave icebp cmp int popa mov (bad) sub push jl rcrl xor mov adc xor sub sub mov push stos sbb test arpl adc cmp mov push pusha not idivl ret pop sbb cmp pop pop push test (bad) lods inc (bad) push mov in es and ret add (bad) imul cld pop loop inc ljmp pop out add lret lcall arpl or dec dec push or xor and sub pop or push ljmp fiadd dec adc stc sbb xlat pop cmp adc sbb decb xchg lcall mov ds cltd add push hlt or push or call jo sub sahf jb adc insl hlt adc (bad) mov mov insb test sbb movsl fistpl or push fcmovnu sahf xchg xchg (bad) fnsave and or scas gs mov decb outsb or loop enter lea mov mov insb xchg sub dec and pop je je pop dec imul jne rcll fnstcw in pop jne lret cmpsl xchg andb ret aaa addb mov inc lds push lock arpl lahf pop or lods loope ret xor xchg sbb dec inc mov sbb jne xchg call or mov hlt sub mov dec add sub xchg mov mov push sbb or mov idiv adc test pop jg mov sub jmp mov pop (bad) sbb (bad) lods cmp sub bound dec std jo lea inc push and xchg popa jae cmp fstl and xor xchg cli add movsb adc fist out loope fistpll enter in xor sti xor sub xor in nop mov jbe leave pop clc aam std cltd jns cmc test test mov (bad) jmp call shlb loopne push outsl ret xchg orl cld xor xor push pushf pushf inc adc cmp imul loopne aas xchg jge in mov ljmp add or subl int3 sbb mov inc insl jb and lods popa mov lock ficomp ret pop pop push (bad) mov or xchg scas cmp sbb dec (bad) lahf pop cltd jo xchg sub (bad) repnz test pop (bad) (bad) push push (bad) jle mov movsl movsl sbb cld jge stc icebp imul out out and mov (bad) push dec xchg pop subl and jecxz push movl jmp imul aam std fs lods pop es fcompl pop fisubl mov sub daa pop or inc push jl jp int3 adc cmp pusha js xchg test push add push std cmp inc movsb rorb pop into push jo mov shrl dec pop sar ficompl iret ss adc and xchg hlt mov into pop gs pop fisttp mov int sbb adc repz scas adc jg xchg bound fwait xor and mov ficoml int (bad) push xlat xorl push int3 dec sar cmp ret mov xchg jo sub pop lret into daa xor mov mov pop in push popa fldl subl cmp sbb hlt mov add ds aam cmpl sub daa mov xchg mov icebp in jno push push pop cmp rcl iret arpl (bad) inc jecxz test jne fs mov dec push in xchg fwait jmp gs negl lcall and push inc (bad) (bad) pop in add out jne out cld push sarl sbb sahf outsb push stos into add push mov mov js inc lret jno imul mov es cmp in sbb icebp outsl push es cmp pop cmpsl cmp sbb lock mov jp pop loop add inc dec jge sbb add mov dec pusha mov and jae push lds roll (bad) lock rcll pop ja adc mov repnz fwait xchg adc sub sbbl jb sbb pusha jecxz mov sub fsubr xor dec stc mov add pushf popa and sarl dec aaa dec lcall (bad) loopne in (bad) cmp jmp into (bad) ret push sub cmp out (bad) sub cmp (bad) pop mov add push pop sbb pop dec shr mov push and out sub or test fldenv loope inc pop dec cld mov xchg ret push dec sti inc add das into xchg cmpsb test dec fcmovnu movsl push loop,pn jle nop fwait ss sub or pop pop repnz dec sti cmpsl test or and cs inc jecxz mov mov aaa xchg test iret dec jns jmp xchg mov jnp jo int test mov into mov lods int3 adc and gs sub in xchg cmp hlt xchg sub or xchg xor imul mov lods mov push adc scas xchg in jmp incb cmc pop push mov dec test test fildl mov push ds jl inc imul mov idiv push push pop push sbbb enter cs popa xchg sbb jno mov in imul or inc popl test add in push add ret addb cmpsl sub ficoml popa push pop fistpll mov push sbb push pop sub inc std std push mov add mov repz arpl push ds adc out dec push cld dec adc inc (bad) cwtl push xor jae rcl ret lahf loope inc outsb mov cmp movsb xchg pushl es test jbe inc cmpsb outsl pop cmp lea je aam inc and pop and cmp sub movsl adc (bad) cmp mov adcl lret int dec stos lods pusha push push lahf mov out xor out iret add pop rcrb sub mov adc test test xchg or adc das (bad) ficoml xor imul mov (bad) or mov fwait inc mov testb (bad) xor or xchg out mov xor inc std in dec jbe ja mov xchg jge push adc pusha rcl mov jo repnz push mov sahf outsl test ja popf fwait inc inc aam out cmp scas add xchg loop jle fcomps dec popf sbb insl sarl or xor jo popf xor jle imul xchg add rorb (bad) mov pop cltd and ficoml cmp cmp cwtl xlat enter cmpsb dec pop pop pop xchg pop js les clc add push rol and push inc das iret fild js lahf push inc jne and lcall mov bound inc pusha rcrl fsts add (bad) and (bad) push lret into (bad) adc jle,pt pop lods fs sbb cmp cmpb scas shr adc sbb stc xchg rcrb shrb push (bad) in out arpl cmp test inc and dec mov jb adc fwait arpl flds repz xchg cmp push or mov jno and mov sub decl dec les jg xchg fwait inc fidivr lds pop fsubrl jae lock std arpl xor sbb mov sbb fdivrp lea loopne les stos (bad) movsl lcall out adc add mov jo call pushf mov int inc xor (bad) xchg rol shlb or iret shll add sub movsl pushf add xchg cltd sbb out (bad) cmp cld fist or and xor inc jecxz pop in lahf insb xchg pop mov push in pop daa mov mov rolb jno push and add and repnz (bad) loope sbb mov ret pop ja lret dec and mov daa ss cmp ja ja push push out stc lock push sub xchg inc add adc lret je jns cwtl jp cli lcall inc xor mov xor add cmc fwait push int cmp loopne in sti push jle jb push and sub insb out and pushf fs cmp ss sbb js jnp jbe cltd ja shr push ffreep (bad) jl jle cmpsb push cmp jge add mov (bad) and hlt aaa cmc sbb mov xchg into rcl add int3 pop sbb xchg call xchg fisubl or inc pop cld mov call sarb push std xchg loopne (bad) cmp jl or mov jmp mov inc stos dec mulb mov mov add xchg arpl fwait sub lea (bad) out cwtl orb sub mov test jns test cmpl xchg lods and pop cltd pop sti add xchg adc ret out and lret xchg pop js add (bad) jp sbb dec sarb push add adc or sbbb fmull xor mov (bad) mov sbb es nop shl pop cld dec adc mov mov fcoml cmc xchg gs aad repz pop scas mov aas dec dec scas loope leave lea cs jbe outsb lret movsl xor push dec test and push lea push jae xor leave xor addr16 mov lret jae repz shrb and xor cmp scas dec sbb pop adc scas movsl and (bad) mov sub fidivr in je cmc bound (bad) jb add test cmp lock rcl movsl (bad) jle movsl jle loopne popf pop or (bad) mov loope stos mov xor daa pop inc xorl jno xchg mov mov movsl dec mov pop (bad) jno adc push and pop mov jmp pop outsb lods (bad) jns cmp mov jmp outsl mov stc out outsb das jg ds or sahf inc push popa adc mov adc fisttp sub xchg fwait xchg pop fucomi lahf daa cmp jno enter movsl jnp and inc sahf test jg xlat out in iret insl jo mov xor pusha enter mov sub jno pop stc shr xorb cmp add ret push xchg repz inc dec popa loopne loop dec repnz mov push xor adcb mov outsb xor cli inc je mov dec cmp or or dec add imul jae mov pop mov or (bad) scas out push cmp pop fcom popl jnp test xchg scas cltd dec inc inc add sub jle xor sub jle adc push lcall test inc data16 lret dec cmp add int3 aas ds adc fucom stos sbb dec stos in dec push out (bad) xchg and xchg sti daa adc notl mov mov add (bad) ficom push inc mov test push mov fs jb popa mov mov sbb fwait mov sbb sbb es bound (bad) sub or out sbb pop sbb adc jae mov pusha shl lods mov inc dec fstp cmc les sbb inc mov or rolb sub out daa enter and (bad) and dec bound out xchg stos dec mov jg adc pop rep mov cmpsl sbb inc mov cltd push mov adc push pop test mov (bad) imul movsb jecxz arpl push pop fptan mov xchg divl mov mov adc in out dec sahf inc repnz aam out sub push pop mov cmpsb mov in mov or push add es lret pop pop and mov loop cli xchg inc scas xchg jae lock ret test mov jnp mov scas jo je pop adc mov enter adc fldt or xor mov aaa and pop cmp pop cmp cmp inc test inc rcrl or movsl pop add rorb je mov and call dec ret sar enter mov sbb fadds xlat inc jbe shl dec sub and xchg cmpsl push dec sbb fdivrl mov ret sub ret clc (bad) mov pusha lods je pop arpl test fdivrp loope addr16 testl or movsl sti mov cmp xor (bad) lods aaa jae dec jbe jb mov in adc and leave aas dec ljmp mov xlat pop (bad) (bad) dec movsl sar mov xor sub mov mov inc push cmp jb repnz loopne lret mov cld sub add cmc add call cmpsl addl jmp lcall and fmuls rcll xchg add (bad) xchg sbb sahf adc pop xchg pop xchg mov jp lahf or add movsl dec mov addr16 adc das hlt (bad) pop pushf movsb mov mov xchg mov or scas test adc fnsave jg mov fxtract movsb xchg add jnp popf int gs and cmpsw (bad) lock in outsb mov sbb fld sbb or lea mov js out xchg push cmp sub mov das mov (bad) icebp movsb lock inc jns or loope xor loope rorl fsubs inc ja dec jl lea or push stos add or ljmp fsub lahf push adc add adc insl xsha256 cmpsb rcrb xchg and aam insl cmp loope jne es xchg mov push sbb mov mov pop and push cmp jns xchg sti (bad) incb inc ljmp pop in mov jp mov (bad) cld mov outsl jbe push inc sahf leave addl popa mov or iret loope mov jge inc jae lods sahf jle lret ret cmp mov les and cmp sbb sub (bad) rcll or outsb int in or push insl mov xchg jl mov out adc mov adc sbbb xor (bad) popa jbe movsl inc sub js inc and fildll dec jecxz xchg xchg pop pop lods addr16 mov and or pop cmp je out cmp xor je clc outsl sub iret inc out shrb xor test mov lret ds mov out cmp call mov enter cs xchg lcall jl sarb enter xor or aas loop sub jp cmp sub and lods adc jmp or icebp cmp in int aam mov mov (bad) xchg adc pop insl faddl fdivl jle inc mov fcmovnu pop cmp pop jae sub mov mov aad cmpsl adc stos add rolb xlat addr16 lds scas popf jae push and dec ret pop insb mov cmp mov movsb stos jo inc pushf xor pop stos test inc loop add imul and ret dec loope lds loopne xchg call push clc jg dec sub das jmp jmp push push pushf gs xor iret (bad) jo and notl sbb mov fwait popa push (bad) icebp jl xlat xorl fisttpl jns clc aaa inc addb shrb inc xor cmp adc or mov insb inc fmull or inc mov or adc leave pop imul imul mov js cmp imul or mov inc fisttpl lock jae or dec loope fcompl in inc in or jno or dec jae pop inc sub jge aam mov stos sub out xchg cwtl in addr16 in sahf inc movb iret push push sbb cmp out test xchg push (bad) imul or mov mov int3 mov xchg pmaddwd adc mov (bad) add dec test xchg dec or jbe pop and (bad) stos jge lahf xor int mov lock jmp fadds mov and inc (bad) ret iret xchg cmp imul (bad) lret mov popf stos or fld mov add sbb addl fdivs aad or std icebp xchg xlat xchg and pop fstl or or adc add out lods hlt or add insl int mov (bad) jne insl je jge mov addl pop mov dec dec ret mov incb cmpsb cltd pop dec enter sbb (bad) addr16 inc mov daa push test fildll call add xchg ds incl or push and sarl imul sbbb int repnz jns (bad) xchg dec pop or push or jge ljmp movsb or movsb xchg jo clc and data16 lods repz out aaa push daa xchg inc push ja sub jnp push repz outsb inc das xchg inc mov dec fwait pop loopne aad int mov test push xchg verw adc hlt cld repnz mov sar push into fwait call fidivrl out test push cmp loope xor jb,pt test bound xor mov adc or test push mov ja xchg mov and jnp lea loopne mov std xor cs jg mov dec sub cli jns pop push dec ja insl cld xor adc mov mov out mulb test out fisubrl adc aam jo orl xor push cmp (bad) (bad) push cld xchg mov test call test mov or enter testb cmp sub repz cmpsl stos sub pop fidivrl jl push aas popa mov ret rcl out dec adc xchg (bad) enter pop push xchg aad insb xchg movsb popf daa in (bad) push and xor mov es into popf sbb pop ror xor sub jnp or fldt jnp push dec xlat cmp outsb shlb lea jne add movsb jp or std aad inc cmc stc lcall cltd (bad) std jmp xor xchg jp pop shrb xorb and xchg lock and add out and in fdivrs jae jmp dec enter xchg clc or int pusha imul xorl lds cmp fcoms movl and jp xlat ds sub stos jge ss dec dec mov xchg jle jb lods add loop pop test jo cwtl xor mov push adcl mov push lea fldcw shl cmp hlt aad mov sub xlat push test loope cmc imul xchg sbbl stos add rcrl xor mov inc mov cmp or test jp test or sub xor fcoms pop xchg test orl rorl dec lea sbb sbb out lcall mov add and int jae movb test jnp mov mov cmpl push mov aas mov adc outsl (bad) pop fdivs xor dec popa add or insb movsl sahf jne gs and fild pop mov cmpsb xchg data16 movsb daa outsl out inc push push out fwait jo sub aas push xor mov inc shll call pop popf repz mov fs or test shrb (bad) (bad) sub push cmp or fidiv push cmp cmp sbb fs (bad) xor xor sbb addl fwait lods mov movsb ljmp sub or lea dec mov test hlt cmp imul and xchg loope imul lods mov scas repz out sub pop stc push lods movsl js jne (bad) mov sbb fwait mov dec out scas mov mov mov or sarl (bad) rcl mov sub adc imull cmp sub jnp (bad) out sub test lcall fcompl int3 push test test pop test pushf xchg jae lret adc push or aaa vrsqrtss inc xchg mov jb fistpll ffreep icebp lcall add pusha pop jns out mov pop test add adc pusha je in cwtl jmp dec mov sub inc mov inc mov clc adc lret jp ret gs out test daa jmp adc inc (bad) lret jecxz jl pusha cmpsb std xchg jecxz mov mulps sahf jl or cmpsb sbb mov dec (bad) je mov scas ret xchg addr16 movsb adc js sahf insl xor lea push dec int enter lahf xchg adc je (bad) fisttp or push es xor sub out inc std rcrl xchg movsl loope sub aaa ret push xlat xchg mov inc cmp (bad) les mov mov aas aas out (bad) inc scas ljmp add xchg dec mov sub lret out jp or (bad) testb iret mov mov adc adc outsl xchg stos mov or lcall adc fsts aaa lock adc bound sub fs inc outsl xchg hlt dec aaa mov iret sar mov dec xchg idiv lcall enter jb dec scas sub test xchg lret push or inc repz mov pop call jp jnp xchg rcl lods ds cmp repz push lock in int3 xor je xorb outsb pop mov cmp mov inc outsl xchg lods cmp ret xchg adc jmp adc icebp loopne xchg lock sti pop ds lcall jbe mov and jo test ss or mov (bad) test jecxz inc mov push mov jns and shrl inc pop cs sub pop (bad) mov push xchg mov pop push mov adc imul pop repz xor icebp adc xchg adc adc fcmovb and pop addr16 pushf pusha sbb ret mov push dec inc in icebp mov lahf mov mov test daa or ret outsl dec cmc push mov cmpsl js xor cmp icebp (bad) dec sub dec pop inc lods mov pop sub mov mov push push jae aad lea xchg loop gs cli sub mov sub lret scas xchg daa leave cmp pop or repz push fwait pop jl incl (bad) movb dec sbb mov or pop lcall rclb cs inc xor jmp fstpt sub mov jl sub sub cltd mov sbb roll (bad) cmp lcall shl es push lods fnop pop fldln2 add (bad) and push add ljmp add out sub pop or das ja call xchg stos lcall or or jmp aam xchg (bad) sub inc mov add stos into jnp jno dec aad jle call enter lock inc dec push outsb addr16 lea xchg cmp mov les sbb inc lret sub sub pop jno hlt add mov push loopne xor adc pop pushl adc jae mov test jns movsb mov mov daa fdiv test and lock aad icebp xchg dec jecxz lds stc mov xor sub sbb sti mov aas lock jge dec add lea inc jmp cmc sahf icebp into dec jmp std and js pop popf subb ss mov adc es pop fistpll fisttpll push int3 sti xor cmpsb bound push pop ja dec cs ljmp mov push jge xor adc test fld (bad) or jne icebp nop lods jne jge jmp or stos pop jo lret loope cmp cmp dec pop cmp dec add inc sbb cmc enter out inc mov mov sbb insb out push jg jl cmpsl js (bad) sub inc xlat push fsubrs (bad) (bad) stos add call xor sub ljmp cmpsl or pop mov inc lock fs mov jno icebp call daa (bad) fwait push popf mov aad insl out repz xlat xor mov push push cmp adc test (bad) mov repnz js push pop rorb pop mov aas cmpsb (bad) addr16 repnz insb loopne xchg outsb in sti inc jg mov in sti fs outsb addr16 push adc addl int and in push add sub fildll fwait and push testb pop clc loope test sti push dec add xchg adc inc xchg pop cmp sub lret mov cltd adc call jnp lcall cmp push sub (bad) lret (bad) dec in add sbb dec push mov int push scas idiv arpl pop add and nop cmpsb xchg dec jno add pop mov jbe sbb sbb int adc sbb jp std movb rorl or repz add and call dec jae lcall pop mov lahf push jno data16 jle je fsubl add pop je adc addr16 shrl add xchg jp mov sbb or fadds lahf xchg ja lcall mov pop and (bad) in daa (bad) pop or ds jae mov or adc dec cmp shrb dec xchg (bad) imull sub test or jp je mov inc por pop out add mov leave sub out int jp insb xchg mov lods inc ret and das jno imul pop xor insb out xor outsb jne movsl sbb cmpsl jns xor daa push cs push inc mov loop (bad) cmp test aad jo pop lret sbb fsubl mov cltd lret adc xchg js and cltd mov adc push in ds add xor addr16 sub jb jnp fisttpll aas cmc pop pop (bad) out jae lock dec dec or inc andl mov push inc loopne test sub and mov sub pushf or ljmp stc pop imul mov scas bound inc aad sub inc outsb xor xor nop pop dec sbb inc xchg cs push dec xchg dec dec push jo inc insl jl nop inc inc pop cld fs mov sub and cs in (bad) jae dec hlt mov popa push ss ja cmpsl or aaa mov jle repz jae cld xor mov test mov push add enter add and repz sbb lahf cli xchg dec loop sbb xchg dec in push add pop push add jl test push int3 jae (bad) cli icebp push jae je imul jle fbstp xchg push push jb mov mov xchg call jnp inc push add nop jbe idiv (bad) out insb inc mov push sub addr16 inc rolb mov xor xchg push stos cmpsb sahf jle and repz movsl mov pushf adc jmp jecxz sbb mov cmp std insb jmp nop ret push mov sub std subl add or xlat aam lcall jecxz xchg popf push jne fisubr fiaddl repz loopne cld cmp push out mov jnp cmpsb xor xor push das jo pop mov xor mov stos test iret jg rcr in adc xlat out lds outsl mov xor xor enter add jl out ss mov dec aas push into push mov pop pop jne cmp aam out push push movsb jle xorl mov lret pop mov jp fbld nop lcall jns pop lods xchg mov into push cmp outsl adc faddl mov pop pop sub sbb lea ljmp dec aad pop repz test cld inc decl call jmp scas in mov and dec in add into sahf sbb int3 icebp mov stos add inc ljmp add das pop lods push sarl xchg sub sahf das cs enter or and pop xor cld xchg jb,pt ret into inc sub outsl mov cmp xor or cmpsb outsl (bad) scas fdivs sbb sbb ret add push lods loopne mov sub popf mov add xchg sub ficompl shrb (bad) dec or mov jae mov push in jns inc fs loop inc jmp je add (bad) lods nop mov leave pop or (bad) push lods shr push mov es push movsb lcall adc or nop hlt sahf push sub icebp pop mov lret xchg imul sbb fildl mov xchg mov sbb inc pop scas insl movsb jmp cmc shr xor addl enter js lcall cmp push sbb fimull add lret pop mov jo dec js mov adc hlt or cmp pushf mov inc out test sbb sub out pushf sbb add jb loope stc popf mov pop jle aas dec mov adc mov mov rcll dec add sbb in jmp test movsl stc jbe adc ret pop push mov ss outsb fdivr and xchg lahf push cmp clc jne fstl sub mov imul xor mov jne frstor push mov cmpsb (bad) aaa test lret dec (bad) ja in mov les loopne cltd (bad) mov inc sbb or sub mov xchg inc mov in lock repnz cmp xlat idivl pusha fsts ds mov pusha dec iretw test out test mov jle dec mov fidivl inc shll push cld fs out cwtl lret and lret pop adc and sub das mov and mov inc jbe push mov aas dec in inc iret sub jmp or xchg sub shll test dec in (bad) cmc dec inc xchg dec imul int aas pop jno cwtl fcmovne xchg or ja jle bound movsb out int fwait adc cwtl pop movsb add sbb sub adc mov pop imul rolb mov pop loopne sbbl mov mov inc das lahf jg push mov fucom pop jb adc sbb out xchg mov int dec test je jae sbb mov push xchg mov pop sbb mov push xchg xchg rcr mov jge notb int jl into std je frstor add es jne and loope clc inc bnd addr16 jge orl jl stc sbb in adc push mov jns sbb push pop xor cmpb pop sub sub pop adc inc jge scas xor lock jle aas adc pop add lahf push stos xor sbb mov and popa pop out or testl les jne aam adc mov xor xorl pop out add rol out (bad) fcoml subb xchg popf dec jns clc mov ficomp nop (bad) fidivrl mov mov mov loopne stc ds fwait cmp lods (bad) cli adc in call fisttpl lods bound mov dec (bad) es mov ret sbb mov mov (bad) mov mov enter mov lahf int cmc testb fs and mov out popa lock sbb push dec sub mov inc xorl inc inc sub (bad) out mov jle (bad) dec add pop nop xchg push lock test mov loopne dec and or push aaa cli int mov lahf out fucomip pop mov in aam test mov pusha out jg inc adcb jg push roll cltd mov out decl test push loopne iret js cmp cwtl (bad) cwtl test out xchg in add mov ljmp movsl fdivrs clc in adc cmpsb cwtl lret dec mov and ja xchg in adc loope inc add stos testb les es xor ret hlt addr16 mov ret sahf ss cmp test int lock cmpb sahf mov push incl cmpsb pop rcr cmp lods push jle push xchg (bad) xor pop enter insl outsl mov (bad) jmp lret dec inc cmp cmp in mov and insb daa xor xchg xchg loope cmpsl push lods lret and xchg mov jne int3 dec or test (bad) fldl aas inc mov xchg push add mov fistpl stos (bad) cmp mov push fs lcall sbb lods outsl push movsb jg (bad) pop push dec jnp push test ja (bad) jno sub gs ret xchg sarb insb mov sub jmp or mov aam mov cmpsl aas push int3 xchg pop rcrb and mov stos in mov imul xchg roll (bad) push cmc (bad) (bad) outsb cmp mov test pop xor stc sti les sbb popf xchg add add jle sub (bad) lret jecxz jne fisub mov lret clc lcall ss xchg and aas ds mov std sub xchg cs test in push sub fmuls divl lret jge fcom pusha pop in mov sbb in loope aam push leave jo ret outsl movsb adc xchg imul pop and jecxz notb fdiv clc and aas sarl jle daa (bad) jne ret (bad) popa mov push add jle repz repz mov fisubl lret mov in xor pop mov mov jle fdivl outsb test stos xchg loop sbb fstps pop push sub cmc in xchg dec fcmovne mov push push jecxz sub or jns fdivr clc cmp push shlb ljmp xor mov pop paddusw std movl fildll xchg pop push call (bad) (bad) int3 inc pop in outsl sub and xor hlt pop pop add das xor sti lock js jno lret cli jmp and out cmp dec out lds and adc add fdiv jns in xchg dec add in pop jbe push sbb xchg int in fcompl test xchg push and jo ss cmpsl jp mov data16 daa sub xor leave ljmp clc inc mov ret sarl lods cmp fild lock ret movsl xor call in imul adc ret pop aam push push lds or mov mov xchg inc xchg pop stc ljmp jl cmp in mov mov and push mov mov mov aad sub and jbe cmp pop pusha fimull aam hlt push les es loopne add imulb pop jmp sbb sub mov popa mov or xchg sub mov or push mov xchg push lods aaa cmp jge adc lret call cmc out sbb movsl insb mov rcll fidivl mov stos jno (bad) repz mov and add insl pop out xchg sahf mov lret stos iret dec loope pop mov xchg outsb ds push cltd out daa ret and add cmp test sbb sbb bound int add ja push test je push (bad) (bad) dec mov and orb add cmp lods jmp lds and cwtl xchg push add add iret lods and scas inc (bad) sahf test dec or cmp push mov pop fwait cmp lds adc sbb and or jbe or stos sqrtps inc movsb push dec pop inc push sbb cmpsb (bad) or or cmovbe jo int3 mov andl es std xchg jge xchg cmp lea xchg mull stos popa fldl xor in xor lret ljmp xchg nop (bad) fsubrs jb in mov xor negl repz push add inc out mov jo dec xchg js mov push lcall pop addr16 ss orl fistp mov lock in es or ss xor adc addr16 fsubrp ss div mov xchg jo stos jl push cmc adc jmp sbb push xchg loopne rolb or fistl inc cmpsb push push sti aad xor loope push mov pusha rorb jae ds mov sub loope adcl pop les mov push dec ss sub hlt xchg jecxz sub pop ret or cltd stc jbe shll inc ja mov ret cmpsb outsb in iret xchg imul cmp and into mov out cmp jae out push adc jb or sbb fcompl adc rcll sbb test frstor stos mov or sub mov sub xchg in test pop mov repz bound scas (bad) call int3 jb jge mov jno xor or ds and jmp mull push pusha sbb in int cld inc outsb mov aad bnd mov insb jo and lcall cmpsb push outsb loopne in je pop ljmp pop pop mov sti out adc lock dec cmp and xor pop fnsave mov xlat out aad jp jp gs fcoml dec flds in xchg jge cmp xchg or xor mov mov xchg gs mov mov decb mov add into fdivr fisttpl lret mov imul test loope fldl bnd add adc repnz insl adc inc or mov push movsb outsl jnp fst lahf dec sbb call jp iret inc js cmp cmc les lret xor inc push js or jg outsb pushf xchg (bad) in push mov cmpl cmp xor mov mov dec test outsl ja,pn imul cmp mov scas jo sub mov add jp je jns loopne dec inc pop sahf in mov pop or sub mov (bad) enter jmp test jb jae es xchg or inc in ljmp adc jo push sbb repz mov pop fcmovbe loop sub aad test add xchg outsl mov into mov addl les inc jg pop movsl fucomip mov mov dec call stc sub jo push sbb or std xchg xor push iret pop jle jmp jle dec outsb inc pop jae pop sbb xor sub sub xchg adc xor roll xor and mov scas (bad) fisub sub and mov pop and aad (bad) imul sbb (bad) add jle daa aaa mov mov hlt (bad) fisttpl sahf cwtl pop dec (bad) xor (bad) lret or stos inc mov enter mov xchg movsb xchg xchg aad scas cwtl rorb hlt push lock ret les mov and mov jl jns or inc xor cmc (bad) fisttpll push mov sbb pop (bad) or add pop push ret sbb test fsubr and sbb bound (bad) sbb pusha mov mov (bad) lret add arpl in imul dec sub jnp mov jecxz sti into sub dec jg sub sti adc fldcw mov and jl addr16 or add (bad) mov inc cli mov out mov cmc jge mov loopne push sahf jl dec add pop mov punpckldq fcomip fistp fmull xchg push enter cltd les xchg xlat pop cmp lods cmpsl ljmp cmp xor and push mov lret stc push out cli push sahf aad push jbe daa cmc in mov add fiadd jb mov imul sahf call bound jo (bad) jae xchg (bad) js dec inc stos pop into and lret lods mov dec mov sar les pop xchg or test (bad) inc iret add pop shl out sbb fstpt mov push loopne sub cmp adcb jl jecxz mov lock popf fs adc xchg leave scas aas jmp es mov inc mov popa sar cmp imul imul xor push adc (bad) pop into (bad) in xchg enter adc cli (bad) xor mov and push mov clc mov test mov push negl mov lock mov mov adc lret add mov jg das (bad) pop cmp push pop lods adc ret popf stos cmc push repz daa lds and in xchg sbb (bad) fldenv (bad) lahf or cmp push es or inc fldl pushl lea scas mov fcoml and into or (bad) jb push xlat shrl pop popa je push or cld sub inc lock adc mov stos scas iret insb xchg inc inc ljmp es sti std sbb mov dec mov cli shl and divps and imul xchg sub and hlt std mov jp fwait xor xchg outsb int dec outsb push js xchg movsl or loop popf out cmpsl jle data16 not cmp jne test sbb adc mov lods cmpsl outsl fldl cmp pushf pop sbb sbb ja pop or in scas hlt inc sbb and mov in mov push or or cltd fisubl pushf data16 andb scas push pop imul nop jbe mov push mov leave loopne sti stos pushf (bad) pop cmp into daa pop pushf and push jbe dec aaa int jne jb pop push add ret movsb push cmp mov mov dec jae mov test pop leave cmpsl mov sbb mov sbb sti pop dec jle data16 inc mov or lock inc pop out mov into pop mov fwait mov fisttpll icebp jno dec mov mov mov in dec and (bad) int3 iret or divb pushf nop cltd push push (bad) iret insb pop add and movsl cmp xchg imul jnp and push repz es sahf jne cmp aas subl xor mov pop flds push sub stc jge aam sar pusha pop cli add mov mov mov lcall fcomps dec cltd jp sbb cmp ret test fcoml xlat loop add xchg and sub jo xchg fnstsw mov test inc or dec repz das lcall stos jp int in xchg stc push xchg xchg pop arpl inc ljmp pop mov into lret mov xor jmp push jbe cmc pop pop jbe gs jmp pop aaa push mov stos in cmp mov stos dec mov iret xchg lret dec xchg out fsubrl pusha push ja jle sbb jecxz cltd sub lods enter fdivrl pop imulb push sbb jge jne test cmc sbb icebp (bad) cmc sub lret inc add movsl outsb aad push insl jmp xchg sbb movsb push xlat insl jae jecxz sbbl pop dec and adc inc mov mov mov loop rcrl inc out xchg sub push hlt test gs inc idivl xor je or mov stos or shr (bad) rcll lea inc jl mov pop fistpl out lret sbb push adc sub out dec fcompl (bad) aaa std fldt lret push cwtl daa stos push faddl daa stc int dec xchg pop inc imul in int jp adc or xchg fcoms inc or (bad) and call out movl pop out lock mov add or lea pop nop dec push jne notl loop aaa adc enter xor push jg cltd lret enter xor mov jp movsb sahf xchg negb xor add ret xchg mov jle xchg ljmp ds xchg or mov pop fadd mov dec imul jmp push out push shr pop cmpsb xor mov (bad) ljmp push cmp mov sbb mov adc push add fimull dec adcb cmpsb cld xchg insl daa dec mov add ja jns cltd gs and xor jmp test pop dec shll dec jecxz ret scas rorb ljmp arpl leave pop jecxz jns inc fstp jne sbb sub mov (bad) stc xor std aas jns inc je mov fdivr dec and repz cltd lock xchg xchg (bad) imul inc push sbb cltd sub (bad) in and xchg and xor aas andl pop test sbb dec arpl stc cmp jbe rcrb hlt rorb jg les jne std sti popf test lds ret jg cmpsl mov daa inc jmp jle or add sub sub jmp outsl dec lock fcmovb mov roll or pop das addr16 xor call jmp (bad) clc jmp xor pop rcl cmc cmp push sbb xor mov stos inc sub subl (bad) jno test or bound jnp fisub mov and (bad) iret (bad) jl xlat jp jno mov add mov jb mov sub dec xchg push mov jl sbb push (bad) pop fs mov loop jmp (bad) adc xchg lds add adc mov dec into test test mov jno out push daa je outsb mov adc inc test sahf and push cmp hlt lret or insl daa or out push push xchg loopne jle cmp inc iret in xorl mov pop fimull outsl dec lcall arpl lock xor daa xor push dec fcoms xchg mov push jbe nop pop mov dec shrl xchg xor xor sub in sbb jmp daa adc sbb xor cmpsb pop test xor mov faddl loop out push xchg out in daa fldl xor sbb cmp cmp xchg adc out push pop repz pop rcl subl movsl les mov mov mov inc outsl imul jb fcompl adc xor mov xchg popa mov enter mov (bad) cld popf push jb mov clc mov xor mov bound mov aam mov aad and mov cltd jnp mov stos nop lods rolb lock arpl xchg pop leave sub xor add scas lods sarb and cmp push xchg imul mov sbb fisttp mov loopne sub xor adc xchg jecxz test mov js bound call ljmp pop push inc xor fldenv mov xchg sub sbb push ljmp xchg mov jmp mov mov adc lock rcrb dec sbb xlat fs addr16 add clc dec fsts rorl sub sub xor push cmp (bad) jno cmc jne iret in lret xchg xor sar in outsl push hlt stos push loope cmc jne sbb loop lds pop pop cmc int shll test ret inc jae roll push lea mov inc or aaa cmp clc jns cwtl mov sub push adc test and jns test mov pop (bad) and push cmpsl ss and dec sub clc lahf movsl in adc jnp ds push in ret xor in adc aam int3 repz inc sbbl xor idiv jo or (bad) cwtl decl jecxz movsb aam sbb mov mov push sub mov add and fcom jne fimul test lret cmc (bad) nop lret jno xor mov push pop inc dec jmp dec xor dec popa or addr16 pushf inc xor adc pop (bad) aad pop out lahf pop (bad) pop in add dec cld test mov sub cs stc cmc push subl (bad) std push mov lahf aaa inc rorb notl mov sti and imul cmc push ljmp jge aas and mov enter add cmpsb push lds fsub mov jbe cltd cmc in jecxz mov or or adc pop outsl faddl imul jg mov add scas (bad) mov aaa lcall lret jle or lret add int fs cmc push fsub or aam add mov shlb test ljmp jmp movl loopne cmpsl jp add faddp popa jo mov fcoms ret test ss adc jl ja jl mov call sbb add loopne fcompl jp int push fdivs sarl test rorl testb popf pop mov stos dec enter sbb xorl mov adc aad lahf iret adc sbb enter in in mov neg fwait mov rorb sahf dec decl pop fwait jae fdivrl mov push test push dec popa dec cmp push mov ss sub scas into icebp sub imul or inc jo mov in add add (bad) jle cmp cld ret xchg daa push mov dec (bad) jae push sbb or mov mulb adc cmp cmp and (bad) je outsl addb push sbb fsub mov (bad) test mov push ljmp cs mov mov mov sbb xor mov ret mov or fsub aam ljmp std adc mov aad sbb rcl jp iret movsl loopne jb cmp jns xchg push in pop lea jns add inc test nop pop fist movsl aam sbb lock loop into fsub insl lret mov inc inc loopne cmp push rcrl push jnp iret imul (bad) into fnstsw pushf add outsl inc and dec push pop sti add bound inc sbb data16 rcrl cmp (bad) sbb pop mov jae cld movb addr16 xchg and ss out mov sbb adc and sub (bad) std repz imul push lret sbb (bad) jl shrl and jo ljmp cmpl (bad) xor mov imul lods insb add out sbb lahf pop xchg dec mov mov pop cmc test and mov mov scas sbb push fst jno (bad) daa (bad) fistpll in mov adc js loop pusha imul repnz and addr16 rolb int test sbb enter dec sbb stc push pop xchg stos xchg sub xchg sbb push inc and push inc jp in sbb fdivrl (bad) cld jns push (bad) in xor test and imul inc push jp cli lods push cld or mov and roll cmp push rorl or sahf adc imul xchg pop sub xor sbb sti sbb jp in test push into dec push loopne jb pop pushf out adc dec inc test adc sbb push mov adc nop jg orl add ret adc dec and call mov (bad) mov mov clc xor jo clc add popa jge popf sbbl test pop outsl inc jmp mov or mov inc push popf or movsl sub in cmp (bad) cwtl adc pop inc mov lods push or iret push cmp mov (bad) mov fimull push imul js dec sahf (bad) xor xor xchg inc fsubs int in fdivs jno sub ja jge xchg mov popf in sahf loope inc mov inc xchg in int3 and adc int3 scas fisubrl mov add mov dec inc cmp lahf (bad) jmp push adc mov jno fbld pop in cmpsb dec cmp cs lods jns lds mov pop jae (bad) push fnstenv sarl lods jno cltd sub xchg pop hlt mov add ror xchg loope push scas xor dec sub push iret mov rolb mov push sub sti inc push pop xor pop js into (bad) es and fdivr mov mov pop (bad) push jb hlt stos mov push in lods ljmp aaa pop adc sbb mov aam pop rcll pop dec jl pusha add mov (bad) push std inc jge push add int3 mov test rclb in roll lods clc pop jp call dec ja int in adc enter sub into into mov dec and rcrb (bad) fadd movsb or sub xchg pop jg inc call push dec leave xchg mov popa fwait sarl xchg xchg addr16 stos idiv repz (bad) jae ret jb bsf outsb push add addr16 xchg push pop (bad) sub bound mov sbbl and hlt cmp ljmp sub sub jne sub sub dec sub or add out and fbstp dec dec repz xchg out ret sbb mov fcmovu les xchg xchg js imul mov sub icebp cmp les les xor iret xor (bad) push sbb mov outsl shll add loop int adc loopne pop test hlt xchg rolb pop jae xchg jae mov (bad) fimull cmp cmp and and inc mov stc cmpsb sbb jb movq mov iret fimul xchg daa push cltd hlt popf (bad) mov fimull lret test popa or push pop pop movsb or fldenv mov cmp fdivrl rcrl arpl add jbe outsb ja gs xchg out fdivrp repz imull adc mov adc out jg cmp push loopne inc test sbb or repz test pop push push stc icebp ljmp shll jecxz fxam loopne pop or cmp mov loop mov cli fistl std lret cli fmul mov sub xor inc je or pop test pop xchg and push dec daa loopne aad push test sub scas xor (bad) stos pop sbb rcr lods mov fidivl mov sahf mov test adc dec insb movsb stos cmp stos pop inc insb inc jo dec nop fs dec mov mov add xchg cmp mov dec add jno loopne push lock pusha jmp shrl dec lret xor push pop cmp pop out and andb adc xchg push cs and call pushf adc test mov insl pop pusha adc sbb rolb mov addr16 (bad) pop cmp scas stos push test scas mov mov lcall pushf clc in sbb mov mov sbb fdiv negb mov xor or mov movsl out push rorb xchg sbb shll cmpsl sbb aam xor inc call xchg dec movb leave push mov xchg add in cmp pop pop rcll cltd mov mov inc je push mov push jb sbbl inc dec iret push cs fcmovne inc js jmp jb imul sub mov jmp sbb or mov jae add and std dec xor push inc push push sti in fs mov cmp cmpsb (bad) xor jb lahf jbe lods add fsts (bad) ja inc shr fcomip and into fdivrl std test addl push subl xchg mov lahf jns int xorb ss jp rcrb mov lret ret sbb in mov mov adc push mov pushf pop call pop test lahf mov jns mov xorb out test lock mov cwtl push and lods dec mov addr16 mov mov loopne outsl mov sub dec dec call jmp inc sti ffreep jecxz ss leave (bad) or cmp test pusha cmp push cli mov daa hlt (bad) cmpsb xor mov fisubrl pusha mov aam (bad) pop outsl aad push movsl jp fdivr mov pop inc lds push (bad) mov jge cmc mov into xchg mov mov test xchg push idivb push pop lock jecxz int sub lods inc add adc mov sbb mov cmp adcl lock ss sub push fisubr int sub and and and jne add stc sub jecxz mov test stos je hlt es andl aad rcll imul inc inc lahf les mov xchg in push mov lahf in mov fcompl adc cmp aaa jbe packssdw add cmp cmp adc and jle lods (bad) (bad) xor lods xchg addr16 mov xor pop movl (bad) sbb fisub jb add nop in sbb hlt aad xchg add pop jl mov push hlt movsb fstpl inc sbb lods inc pushf add or jno push jb lahf daa cmp mov mov clc jns popa and scas fstps add inc mov xchg inc les jle gs test test adc loope mov rolb cmp sub or in jno mov and jnp push inc pop sbb in lock cmc mov jp das adc and in ret std aas and push xor subl insl pop pusha and xchg rcrl cli cmp daa aad push inc xchg mov add repnz mov ja mov xor fucom scas dec jno or loope or xor stos outsl jg in xlat addr16 aas cmp dec fimull mov dec push mov int dec out dec rorb push gs add pop rcrb sub shlb adc (bad) aad seto jle or jns xchg data16 mov pop outsb cmpsb cmpsb mov mov push mov jecxz push je dec roll or out pop inc call push pop aas add ljmp (bad) imul jne (bad) jo into cmp rcrl pop mov cld aad out sbb cs jmp pop pcmpeqb es sub dec loop bound pop fdivrl out out ss jle sbb push std loope call jno gs cmp xchg nop in inc in fcoms add pop fisttp jp std or call cmc loopne pop sbb icebp or pop xor rclb and in mov and pop je jecxz xlat mov imul jl lret popf popf in shl mov add lahf jae sbb jnp stos fwait push mov xchg xor inc jns lock push jns movsb (bad) enter inc pop loopne aam add sbb inc push inc xor and lods into (bad) xchg arpl mov cld push push (bad) out scas outsl sbb call mov cmpsb add jmp mov mov fdecstp int3 cltd jge jge inc mov and cli lods inc out sub inc mov jge loopne ret jmp imul in (bad) ror test movsb scas sbb outsl pop mov pop fdiv cmp sub sbb popa js les xchg adc rorl jge add outsb add jbe or (bad) and dec inc push cmp fldcw xchg sahf int3 mov mov push dec cmp push xchg ss (bad) lock jg inc cltd jbe jl lock sbb inc pusha mov mov dec pop and cmpsb (bad) jbe xchg or mov pop dec xor (bad) out rorb pop cld mov or lock adc icebp dec (bad) loop pop mov add loope outsl iret mov adc push lock mov jecxz arpl sti mov push dec inc push push fiaddl ss mov ret add daa pop mov loop jmp fwait inc inc and inc jnp ss dec xor iret (bad) cmp dec call stc gs scas cmpsl and imul xlat and pusha pusha dec xchg icebp sbb xlat (bad) inc lret ret sarb popa mov xchg shll in sub hlt mov jo cwtl sbb in jmp rclb or cmp dec ja lcall pusha push cmp mov lock mov mov into lods dec cli inc imul cmc fwait mov fs orps xor cli push js mov jb out cmpsl sbb in pop xchg mov and ds (bad) fwait sbb mov jge or insb add xchg mov outsl das add in das push je mov sub xchg ficoml scas test jo adc jmp pop shr (bad) mov cmc sbb mov mov jno jo movsl arpl sbb jge cmp pop (bad) insb cmp lahf in xchg test push cmp adc pop in popf insb push jmp dec inc pop cltd or (bad) movsb and mov roll xchg arpl out call or xchg aaa ret xchg mov push mov stos xchg sarb mov sbb push cwtl dec movsl xchg aad in add out mov (bad) stc fs stc push adc mov xchg add cs and jae and addl push out dec xchg xchg inc (bad) mov neg mov test das scas loope mov int3 inc jno mov ss xchg lods fldl mov cmc and inc cmc xchg sub sbb mov push cmpsl inc pop (bad) or sbb inc xchg data16 mov (bad) push inc mov pop sub out push jg sbb dec lds and in cmp dec mov and fsubrs out gs sbb scas fcmovnu fcomps pop (bad) (bad) jg movsb cld ret shrl mov push sub dec mov cmp and imul je imulb mov mov imul xchg xchg sbb jecxz add sbb dec push adc push hlt push imul pop ret icebp mov or icebp cltd mov xchg pop fdivrl leave sbb cmp xchg add ljmp loope cmp push imul leave in call les loope scas jg sub dec je push mov lods shrb rcrb imul leave adc jmp push sub hlt outsb sub push sbb xor sub shrb dec aad jge ja lods pop push or pusha test push inc xchg imul mov test leave test in jge mov xchg xor in int3 push stc jno mov inc addr16 adc cmc into push stos add cmp inc loopne add lcall insl mov loopne xor cmp cmpsb (bad) dec sbb xchg push shrl negb fisttp data16 cmp xchg ja xor je test xchg ret pusha (bad) sub add mov adc cmp xchg idivb jecxz cmp addl push gs mov push test aam cwtl ret ljmp cltd int3 and test mov xlat leave cltd cmp aas es jmp xchg ja sub xchg mov mov (bad) sbb jp adc fist popa sub (bad) jbe (bad) stos xchg jp mov movsl imul sbb jle (bad) push push movsl gs or (bad) (bad) das popa mov pop pop and insl jecxz mov outsl add in lods push test jb jmp in inc sub inc in insl dec loop xor mov xor ret xor inc cmp and aad sbb mov mov xor cmp mov fcmove addr16 inc add lahf jne in enter stos in inc sbb lret in or aam cmp xor mov repz sbb lret mov aam daa lea shlb push cltd test cld cmc or cmp mov add mov xlat mov in adc cmp imul pop mov nop fs leave daa inc push repz fbstp lret push xor pop sbb nop mov sahf pop incl xor (bad) popf xor popf pop (bad) dec adc sub jecxz cmpsl test aam ficompl sub test cmpsb repnz cmp mov jns mov into cmp adc rcrb adc lret xor test mov jne jl mov jo pop push das idivl outsl gs mov in adc jg pop fs mov add (bad) out pop sub repz xchg jge popf push mov adc inc cmp imul pop stos es cld adc lods leave dec mov sub es out push mov jb cmp into ja popf lds out rcrl push inc stc repnz negl adc dec inc push push lods mov mov inc gs notb fisubr lea pop cmp cmpsl or fidiv stos in push mov mov mov inc cmpsb pop pop hlt gs adc or inc cmp lahf sub mov jne xor adc inc push out imul jg fsqrt pop ret xor fwait cmc push sbb call jmp insb push sub out dec fistp push adc push or sub dec add sahf sti hlt mov or xor cwtl jmp cmc cmp (bad) hlt cmpb mov xchg xchg bound push dec pop scas fidivrl adcl adc test lahf (bad) mov mov call (bad) or scas jo std sbb dec outsl test loopne push insl fdivl js hlt aad icebp cmpsl jb fwait cwtl xchg or rcll sbb jmp cmc cmp paddsb adc int lret fmull or jecxz shlb and inc push mov (bad) mov loope add cmp jnp dec cmpsl outsb popa cmp hlt fisub daa enter bound lret lea xchg mov subl push lret aas test mov in inc push push das xor and and push pushf (bad) (bad) fisttpl (bad) scas data16 push repz dec loopne test into sub pop xchg fwait cmc or dec mov cmpsb cmp hlt pop fild pop jne in imul int pop inc lcall jae lock movsb inc xchg adc inc ja add in cmpsl xor mov dec pop mov cmp or inc lcall outsl aam xchg add loop (bad) and mov shr sahf push test rclb jnp dec sbb sub mov mov lcall jecxz fnstenv leave mov sahf jns push mov jmp jmp fisub pop dec in daa out jp xor test push cmp sarb loop push ja lods stos ficoml addr16 or pop cmp xchg xor ja cmpsb loope inc repnz adc sahf fmull cmc jge and js (bad) jbe and movsl mov icebp enter adc xchg xor or mov stos jae out pop dec or adc in fsubs add adc jle xchg dec xor push inc icebp or (bad) pop cmp scas (bad) scas outsl push in stos push xlat or (bad) push sub adc aam jo scas aam mov (bad) mov mov outsb lahf sahf movsl mov sub push imull cmp and std movsl icebp sbb cmp dec aaa xor icebp fidivr add mov out insb or mov addl mov sbb ja inc and sbbl popf dec mov inc nop xorl sti cmpsb in add (bad) pop nop sbb dec mov xchg push nop (bad) mov (bad) imul adc lds scas mov sub sub add popa adc (bad) or adc rcl insb cmpsb int in lock ret nop lods adc es (bad) or and dec xor (bad) push and test (bad) mov cmpb std mov repz add inc pop lahf xchg push jns icebp popa xchg sub jns popa enter pop fs inc lret std popf fs sarb clc lret push pushf test xlat outsl xchg sbb (bad) mov out jns roll inc nop or xor fsubr mov addr16 jle (bad) sti in mov xor mov and jle int3 sub (bad) jp jmp andl fidiv in int3 xlat subl mov push dec movsb or push lock dec imul cmp jp push mov add cmc (bad) pop mov sub mov mov or push push fildll add pop push ja ja call loopne xchg cli popa into lds es js call test sub popf data16 pop jp movsl cmp enter xchg and inc imul pusha xor addr16 or negl loop adc cmpsl adc outsl addr16 mov cmp in jp adc and mov lret aam xchg pop add cmpl cs fmul mov push cmc leave lods push jnp add mov sbb (bad) or aam or in (bad) pop lods push xchg mov add outsb aaa lock jno xor cmp addl fisubrl mov (bad) fcom jle mov mov addr16 sub (bad) cli add jne (bad) outsl sub adc mov lods outsb std mov int xchg repnz enter cld mov pop icebp pop call scas and mov mov dec adc rcll mov stos pusha ljmp cmpl loopne sub test pop pop inc gs addr16 repz xchg iret push mov negb repz push or sbb pop ds cmp xlat ret rcrb cmpsb fisttp push outsb inc mov data16 sub xchg jno enter or dec cmp std jns insl adc fldt push int ja icebp loope bound or test imul jp sbb push sbb and sub loopne and out add fistl adc jge pop clc and fwait lock jle pop and insl js shlb mov add xor inc pusha or popf (bad) mov add jbe ja test push jne dec inc dec jmp cs xchg adc ss mov imul dec mov pusha in sbb (bad) into addr16 sahf outsl aad or add jge in dec pop add adc cmpb pop add or jb dec aam aas sub jnp pop popf dec inc add push outsb xor in cmp cmp xor stos mov cmpsb xchg mov mov andl pop (bad) mov sub rclb lods dec push cmp xchg out mov les cmp xchg push arpl imul test push push cmpsl push sahf add out sahf addr16 in out pop push mov imul bound lcall out push test inc out jno fbstp adc repnz ss jns push cmpsb mov cmovl js fs inc jge lret xlat roll adc jo push mov imul push mov dec inc push addr16 mov aaa inc jo or sub sbb push inc lret sarl and lret sti mov xchg lock aam loop dec mov in pop in jns sahf adc (bad) int push sbb mov push add sbb aam jo sub imul in jecxz adc fstl icebp push loopne push add xor push adc sahf inc or lahf leave (bad) lret mov shld out ja mov and bound mov inc jb repz lds and xchg inc add or xlat arpl mov mov jg xchg ljmp ss loope addr16 push fistpl lds rcr mov sub sbb scas jmp push jle shrl popa add push mov ret aas es aaa jo pop movb cli ss sub dec orb push test leave in loopne loope inc sub sti nop dec outsb cwtl sbbl ret adc mov lcall jno and push sbb sub xchg pop dec lea adc mov aam pop pop fxch mov or xorb popf pop adc mov and push out and xor mov mov add out add jb popa push arpl pusha or sub stos pop cs test xchg andb loopne cmp hlt mov sub sub (bad) push pop roll lea sbb call xchg mov aad jns daa xor mov mov test mov ja mov std and mov mov lcall cwtl icebp (bad) push pop (bad) leave sbb rolb jecxz loope push xchg or (bad) jae mov xchg mov and jb (bad) in fwait ret nopl popa dec add and jmp cmp int cmpsb mov cmpsl daa cmpsl lods imul xor pop sbb xor or bound xorl test cmpsl (bad) jnp and jle lods (bad) ficom mov xchg test jbe test push insl je push mov gs jmp ja mov repnz or cwtl insb and mov rcrl pop or xor fldenv push xor xchg mov or dec test xor mov mov in or mov cmpsl data16 lock popa repnz pop cmp xchg add repz lock adc mov mov icebp xchg sub jnp push mov sbb mov xlat add les test pop jg ret js and jge xchg push xchg test push rclb mov shrl scas (bad) lret push fldenv adc mov fcompl sub jmp inc aaa push push cs fstpl push push cltd incb push es or popf xor fsubl add je ret dec mov xadd lds push or ret push cmp push in lds cmp pop inc gs into adc test lret loopne push or aaa xchg fwait imul jl mov bound pop xor movsl mov lret xchg cs (bad) mov fldt inc dec dec loope lahf lret pusha xor aas fadd mov sbb lods addb adc aaa and data16 pop inc xchg call ficompl push loop and fbstp mov xchg imul (bad) int sti mov add mov scas or sarb sub test or adc dec lock repz inc int3 sbb add aad iret mov imul xor (bad) movsb xor sbb push push pop mov mov cmc aam and push mov fsubrl in mov mov ss in lret lahf mov cmp lea out push cmpsl mov push push push jae lea jmp xor jo cld test xchg enter cmp xor fdivrs and mov dec pop add dec fidiv xchg into jb and pop mov pop push nop cmp (bad) jo sbb inc movsb mov push and dec xchg cs adc pop dec pop pusha jg push int3 fs popf dec inc push mov push fisubl in sbb cmp mov in mov mov stc pop das mov (bad) mov out (bad) lods jecxz mov or jb lahf lea ljmp cmpsb mov cmp and daa mov add mov (bad) mov insb pop mov scas mov xchg jle add sub cmp or mov sub fstps adc fsubrp push cmpsl sbb mov fwait (bad) xchg (bad) (bad) push (bad) mov jae movsl sbb push adc in xchg inc aas lcall sahf clc jbe dec mov divl cs add cwtl jmp sbb leave xchg (bad) aad popa jp push add mov repnz inc sahf fcomps jne pop popa ret scas or push mov push xchg fmul jecxz push pop test pop mov add jb ffree push loopne pop push adc scas stos (bad) cli dec adc fisubr adc (bad) mov aaa mov xlat sbb adc insl fs js dec mov jns mov out das add (bad) mov sbb popa ret adc pop sbb push daa sbb lret pop (bad) fwait nop dec mov in test jmp sbb sub mov icebp das sbb lret pop cmc dec mov sbb nop cmp xchg or lcall ja push aad dec sarb mov (bad) mov add jp jne and outsb and inc pushf fiaddl jbe pop inc in dec data16 clc sbb xchg and pop lret push es mov pop mov jg aaa sbb jno inc test dec insl xlat mov pop sbb mov sub xchg outsb sbb lahf push jbe mov je sub push cli jne add jge lahf cli or lcall mov lahf sub pop pop and insb cmp arpl pushf adc nop dec es cwtl out in push pop sub stos xor jne fimull jno mov add gs les dec adc (bad) in mov out lret mov xchg addr16 lds and adc imul std mov sarl xor adc (bad) mov (bad) repz pop mov push adc arpl aam aad (bad) jae push mov mov jnp mov cld cmpsb es mov cmpb xchg test cmp cli cld imull mov rcrb cmp xor cmp lea stos icebp dec scas mov push fsubs push xchg cli xchg xchg fsubrp jbe add mov addl fidivl loop loopne lcall outsl imul dec imulb mov into out es loope std jecxz push push out and jbe icebp leave outsl dec xor in lods or jecxz (bad) out mov cmpsl push in cmp push mov jecxz inc mov lcall adc sar push and lcall push jge lock cli fnop movsl scas leave mov sub mov lods movsl leave lods pusha aam ds push aaa xor adcl clc dec (bad) and inc jl xchg andb loopne jno mov dec lods repz cmp loop push arpl mov int mov xor or add cmc jbe xchg pop pop xor pushf imul push inc subl and add cmpsb jle imul and fwait mov mov mov sbb in jns lret inc dec imulb xchg clc inc jl dec sbbl daa sub fwait add je pop mov cmp lret scas and (bad) clc or adc push pop jb mov icebp repz lcall outsl inc push stos mov pop ret push mov push dec dec mov mov pushl icebp daa scas sub lds sahf add push xor adc jge jp out out repz notb and mov dec sahf cmc add sub int3 cmpsb repnz clc pop stos test xor and mov std ss ja cmp sahf dec pop sbbl sahf xchg cmpsl jge les inc pop inc (bad) ljmp jl sub (bad) dec fwait cmc (bad) ffree fwait push or fwait movsb xchg int and push inc inc jnp jbe sbb push (bad) or stos in jecxz add or nop pusha jp das inc or lret popf daa (bad) mov enter ja testw ja arpl sbb lcall push sbb lret pop sub cltd addb pushf out inc clc mov cld sub out sub subb in mov out in or movl cmpb (bad) out int icebp cwtl push aaa in mov fimull aaa add out push xchg aam mov fst mov pusha jbe mov jg jo sub aam (bad) in dec sbb jb xlat dec (bad) cli cmp mov adc ret sahf out mov xchg lea sbb (bad) js push push adc push adc es and and jae xchg gs mov lret mov inc xchg repnz and mov subps shrb (bad) or xchg lcall cmp mov add lods jle dec pminsw sarl add sbb mov fcmovnbe or ret pushf rcl sahf adc lret add inc jns mov test pop inc pop inc out lock outsl clc imulb ror inc inc sbb pop xchg mov leave sar outsb add mov (bad) jne dec or fnstcw mov imul lcall (bad) cs std inc cli xor stos or outsl sbb neg into lret int push mov mov cld adc jb xchg and repnz std dec inc shrw adc mov in dec bound xchg mov pop jnp lock or cmc and pop mov inc pop mov add mov insl fdivrl out pop dec in inc xor int outsb xchg xor push pop mov dec xchg int3 es int3 sahf jns dec and or adcb imul xchg xor and inc fistp lcall test xchg jecxz cwtl xor mov cmp scas cs test cmp scas je inc xor jl jmp inc jg stos xchg and mov (bad) mov into pop je int das clc in rol add mov dec xor pushf or enter int3 jl (bad) xor pop or cmpsb cmp mov jno gs addl jmp (bad) cli mov push ja jmp ja sbb arpl and pop ljmp xchg mov adc or sbb test icebp dec xor adc lea pop cmp jne cmc inc cli mov inc jb lods mov and xlat in sub add mov lret add cmpsb sub jno fsubrp cwtl lret dec fwait negl jb repnz orl xor loopne lret push push out pop jg cmc fisubrl sub gs or scas or mov lods or int3 js mov lds cmova aas xor shlb pushf mov imul mov jb call aas rcr nop mov add ljmp pop in sub arpl leave jae push out out (bad) pop das ficoml movsb out in in (bad) push cmp mov mov or sbbl pop pushf add ret sbb repnz sahf sbb adc rep aaa jp mov scas lods push push pop adc lds mov pop and dec xor or fmulp int3 dec inc xor push std and sahf (bad) xor movsl push pop sarb out push inc pop dec mov mov mov adc (bad) mov fsubrs lods adc lahf pop mov repnz lahf mov mov arpl push shrl aaa (bad) pusha sub xor frstor or cld mov lret push into jae or fdivs fisubr int popa jmp lahf sub pop adc ds inc aas sub (bad) arpl cmpsl pop mov jp gs out dec mov mov subb aad mov dec subl xchg fwait sub dec jne cmp sbb test setge sbb (bad) pop xchg nop lcall mov inc mulb test movsb or cmpsl repnz cwtl bound out inc push leave lahf ljmp shr gs imul (bad) out jge mov mov jl (bad) xor push cmp sub jno mov mov inc pusha dec or and je xchg jne mov pushf and and inc cmc adc sbb movsl ret push (bad) fsts and ret adc push or cmpsb or loop fist rcr push clc (bad) xchg cmp outsb gs sbb jl jmp sbb xchg sbb stos mov leave xchg jle add or inc mov enter or mov lock fiadd daa inc mov adc dec xchg xchg adc mov addl icebp ret mov imul inc pop aas insl sub mulb xchg push adc pop pop xchg and inc jecxz into mov xchg (bad) mov pop mov jo sti sub pop push test and sbb sarb stc pop xor (bad) aam xchg test mov mov into xchg push fucom push mov gs xchg inc mov push mov and aam adc in scas mov lock stos popa sbb xchg inc sub and int cmc mov mulb je daa cmp sub rolb inc mov mov rcrb mov ljmp stos push cmp lcall add fwait (bad) jge sub xchg mov lods mov adc mov sbb sbb inc lcall pop gs lods push dec mov mov test stos xor mov inc pushf stos or jg aaa xor pushf out push push push xor (bad) jle (bad) rorb fwait sbb (bad) out or shr add or push xchg mov bound inc mov pop push and push icebp xchg pop xor mov adc inc lret xchg les cmp (bad) lock cmpsl leave icebp (bad) sbb mov loope jae and popf mov or out push jo inc out dec sahf xchg and push mov lods sti push mov jo pop js imul adc push movsl stos pop cmp and jnp mov fldln2 fisub stc xchg and test lret mov mov (bad) xchg cmp jl popa or add xchg cmp sahf std jo aaa negl pop xor push xor pushf lock sbbl aam stos aas clc jns mov popa and pusha adc ret xchg dec push xor mov xchg mov nop enter femms pop mov shrb aaa push ficom cmc movb clc and dec out (bad) push pusha popfw mov mov jo arpl push mov std cmp xchg js repnz pop (bad) outsl xchg outsl jo repnz cli lret clc sarb add clc (bad) imul sarl sbb insl xor mov and add sub or dec pop jp outsb cmp icebp mov pop xchg js loop push fimul out pushf in inc lret sub inc mov mov out test daa mov std mov hlt (bad) (bad) cwtl (bad) aas in xlat inc stos arpl mov mov mov mov inc mov mov dec pop data16 dec dec arpl xchg int jb inc int mov out jnp in fisubrl (bad) mov fimul mov mov add jno dec ss inc pushf sarl loope jecxz shr pop cmp jb pushf or test in lahf adc cmp push jp scas (bad) mov mov loope xchg mov and or clc pop cmc sahf cwtl lret add adcl pusha and mov and push call pop push cmpl sub in ret xor test (bad) out icebp sub mov xchg push ljmp and shrl mov cmp (bad) jno sbb xlat jnp sbb cmp sti mov push (bad) shrl (bad) out and (bad) je xchg jle push xor lea std adc push in pop out mov xlat push fldcw cs ret fs movsl inc movups lock adc or inc inc sbb pop push pop adcb cmp pop jecxz in movsb cmp ss mov jne xchg iret rorb push notb xchg in push push xchg jl popa in mov test and dec call push test xchg pop dec and pop dec jmp loope mov (bad) jmp dec int push mov (bad) iret mov xchg or inc std mov cmp fdivl or jmp mov notl mov adc repnz push ret cmpl sub add aas repz xchg mov and sub push test fnop ds mov cwtl xchg mov lock inc lret inc push lds dec sahf mov adc jl xchg lock inc and int xchg rolb nop sbb push (bad) js sahf daa clc std adc pop ja idivl pop and nop mov sub (bad) loope adc outsb push xchg dec jno shrb xchg xchg add adc sarb add jge ss sub (bad) fildl xchg cld (bad) dec loopne mov ret push mov negb aas dec add xor cmp add cli gs xor jb mov sub pop mov mov rorb popa adc out sub xchg mov jp jl add pop jg push fimul pusha fisub stos ds (bad) push cli sbb inc cltd and (bad) in call xor mov mov mov gs mov mov fs jns mov xor pop xlat out iret std xchg and jo sbb ror cmc or mov fcoms and lods es dec xchg (bad) xchg ficomp dec pop out loop test jnp pop sub adc jne xchg movl sti es pop inc cmp and push adc xchg pop cmp (bad) fsubr mov das negb push sbb clc stos aaa lods inc fistl mov jp mov jmp or jno mov add push mov out inc int3 (bad) repz xor addr16 addr16 add mov adc shll cld aad sub mov dec mov pop int repnz pop lret in sbb sbb cmp fstps adc mov xor (bad) pop lahf inc push mov insb push es aaa movsb cli test (bad) push lahf repz mov cmc xchg jns add mov push out lret call pop sub rolb mov in and lret add adc lret hlt dec jp sub dec xchg pusha in mov bound mov sar repnz es pop pop jae sbb movsb inc jecxz dec push in jg cmp popf pusha jo cli xor xor mov xchg mov movsl sub hlt lahf aas sbb popf inc xchg cli shrb fstp and dec and mov cmp xchg push popf dec into inc or or and cli notl aas inc push or cmp mov sub jns xchg (bad) push xor bound mov adc dec lea ljmp pop inc sbb push add lea cltd leave movsl shlb cmc xchg hlt mov xorl ficomp inc out lods ljmp xlat adc test pop mov notb cs pop inc sbb sub stos mov mov ja xchg sbb js (bad) jne inc out mov std repnz push pushw (bad) sbb popf testl outsb xchg add sbb movsl aam mov icebp inc mov pop pop cmp (bad) sub scas cmp out icebp addr16 jnp or pop sti popf mov jnp mov gs hlt scas add inc jmp push sub call loope cmc mov cmp lret dec aas and adc sub mov cmpsb lea aaa pop push aam in add pusha daa xorb mov jo jb imul xchg shll cmp hlt pop in adc jne adc std dec jae rcrl xor dec aas xor or pop jbe sti mov jns cld or aad and xchg rclb in add test aam int3 push (bad) daa sbb dec in fcomp stos loop pop sbb push jae cmp push daa jnp ret mov mov (bad) movsbl ja xor dec aas cmp mov cwtl test lds and clc test aas push loope xchg ret mov jp iret daa sti dec cld cmp xchg es inc mov mov mov lock sbb cmp out xlat xorl inc mov or mov (bad) mov lahf xor push mov test fs imul clc pop mov mov and (bad) sar or stos adc and mov outsb dec or push mov sub (bad) sbb pop int3 nop push scas pop add cmp xchg lds (bad) leave mov loop pusha sub pop xor xchg jb jp pop stos sahf nop mov ljmp (bad) mov jo sbb out cmpb loop (bad) jae movsb les push andl ss sarb cmp clc pop push daa mov cld addr16 shlb and inc cmpl pop push sbb pop ljmp adc mov cmpsb mov cmp mov cmp insl mov inc or xor jns std pushf cmp push mov outsb dec es fildl mov mov push and ss xor ficoml add pop mov cltd push push add incb add pushf jb jnp adc xor or ss cmp lods lods xchg or push shll xchg cmp jl mov pop (bad) jne cmpsb aad dec push aaa loope popa or inc fist pop bound (bad) or sbb cwtl xor (bad) mov inc fnstenv lods xor scas cmp mov rcll popa je sbb jae sbb add xchg pop add ja aad js test and data16 inc mov cmp inc sahf adc mov cld (bad) pop sbb pop xchg lds ret (bad) mov subl or out pop rcll fsubrl cltd dec adc cmp stos fidivrl push push dec cs (bad) ror inc mov rcll pop sub enter push mov pop cld cld rclb or lods xchg sahf fist ss add sbb dec inc in nop (bad) adc hlt jb cmc cmpsb xchg inc inc mov add mov adc cmp lcall sub in adc cmp adc and push enter mov adc xor adc mov inc add enter adc (bad) jne xor sub sub movsb pop (bad) lea int cmpsl rcrl dec bound xchg in pop lcall xchg aaa push mov inc imul arpl adc or aam pop popa xchg mov call scas aas cmp push adc arpl bnd sbb stos push sahf pushf (bad) loopne sub cld repz xchg xchg pop stos xchg pop popa inc clc test (bad) jl in adcl lret mov jle xchg repnz and mov xor bswap and sub call subb rolb cltd cli es movsb (bad) sbb and rcrb adc cmp in std xor push mov clc fisttpll outsb sarl cwtl dec pusha icebp (bad) ljmp popf inc cmpl clc add in aam popa inc imul mov xor sti cs push gs add mov rcll mov imul insb fisubl rcll jno sub jge cmp out hlt nop daa jle xchg push add cmp bound (bad) jecxz fs outsb jns lods push loope (bad) std dec push cmpsb sub jle pop mov mov stos and lcall loop cmc js xor jge ljmp cld dec mov lods add pop mov xchg ss xor xor lahf push pop mov shlb data16 scas pop cwtl mov popf stc loop pop mov pusha sbb mulb repz mov xor lret mov push or mov fdivrs push (bad) fcmovb or rolb inc imul jle insb inc pop bound sbb inc jg repz fwait aaa sub push rcrb leave (bad) or mov cmp mov jbe sub es hlt push (bad) out sbb scas sbb or mov outsb clc inc out mov test pop ret inc adc adc insl out sub shrl dec sbb adc mov icebp jo sub fwait (bad) fistl les enter cwtl jp mov js nop bound or mov jg imul cltd inc loope inc cld mov outsb clc mov xor idivl outsl repnz and mov rcll (bad) jns int cwtl insb imul subl int loopne push xchg and or dec mov add dec mov (bad) cpuid iret mov leave inc movsl xchg sbb or (bad) addr16 rcrb push pop sub adc or mov xchg (bad) mov mov scas fdivrp pop mov fistl adc jecxz leave imul cmp jg je cmp or push push in push pop scas sar lret mov inc imul cmp pop in mov jo mov pop (bad) nop (bad) mov mov mov and mov mov cld mov sahf (bad) adc in pusha add jp cmpsl arpl mov stos inc fwait aaa movsl mov xlat lahf insb aam idivb inc (bad) movsb cld outsb xlat (bad) and es iret xorb insb cltd dec mov xor test fistpll mov sub pop mov sti sarb adcl inc cli aad scas je call mov mov sub mov icebp push sbb jl mov mov stc jl scas push xor xchg adc outsl add sub xor dec pop push hlt adc pop popf imul mov xchg addr16 pusha sbb sahf push jb insl aaa ret clc test div dec push outsl xor ljmp jbe mov push test (bad) jbe sub leave jno xchg push outsb imul or lcall adc call mov add xor cld jle out push ret call daa gs xchg popa mov adc out cmp (bad) ljmp mov cmpsb cmp or cmp and aaa cwtl test push xor jns and mov and int leave roll xor ljmp enter pop imul xchg cmp sub rcrl outsb cs out inc mov pop mov inc inc sbb cltd test aad shrb xor jge repnz es push dec and imul or pop lods push sub outsb sbb stos xchg mov cs test xchg push hlt iret adc add xor pop movb cmp push jle imul jo sbb movsb paddd cmp leave frstor je sub scas stc stos stc jle push into inc in sbb inc add adc xchg push adc xchg push cmp aaa xor pop dec frstor dec enter and std cmpsb orl push enter bound pop jl jae sub push in je pop and push int outsl pushf das fwait lock xor cmc pop jge ret repz dec xchg jle arpl jmp jae sub lcall rcll in mov xor movsb xor rorb dec incl fmuls popa xchg jnp inc or jge mov cmp xchg subb dec popf or or popa movsb fwait push dec sub mov xor mov jl pushf repz push imul pushf fisttpll lods mov mov pop popf push pause xor int3 popf scas cli cmp sub lods outsl sub setb popf dec cmp jno cmp pop data16 push test dec mov ret outsb push cmp push fnstcw jge scas mov ret jae imul mov push xchg adc mov cmp cmp cmp roll sti adc aaa loope sti mov and pop add ss xchg mov dec xor inc sbb fs cmp jp xchg sub mov arpl inc in imul mov adc arpl iretw pop mov icebp les js sbb shr aam popa dec add test adc sub out pop or ret cs dec push pop pop add ret lods inc pop jmp jno cld outsb lret dec push push adc gs jg bound xchg pop ljmp (bad) mov push xor push push cmp addr16 daa fdivs leave xchg int mov sbb dec jg cmp jns sub dec loope cmp add test xor out stc mulb movsb out jp es cmc js xchg es and repnz sub add addl add add icebp movsl mov xchg icebp dec sub lods insb cmp (bad) vmwrite sbb bound jo mov pop push addr16 cs rol les sub and (bad) je inc push pop sub pop out outsb mov mov pop mov call fstl lcall mov cld hlt (bad) and mov cwtl dec add sub cmc pop lahf (bad) fisttp les cs jae push int loop call stc xchg jmp (bad) fisttpll aam and jae iret insb adc jo adc jns call or arpl scas and push out scas sahf pushf mov adc les ret data16 outsl mov mov mov or lahf jl movsl sbb lods inc lods jne icebp push xor and sbb xchg xor dec xchg repnz and jp xchg pop test push fmuls adc jle push or or xchg cmp test movsb jmp aaa lea jp sub clc fcmovnu push movsb cwtl (bad) adc mov push inc inc push push jns xor orl push push adc js sbb xchg sbb test pop and mov lods and push inc dec sbb popf aad sarl in cmc bound cmpb sbb fild xchg je jnp jg sahf xchg leave ret fbstp mov inc cmp and jmp sbb cmp leave jmp jmp (bad) pop dec and mov (bad) stos mov jmp hlt pop sbb rorb add rorb jmp (bad) sub pop adcl xchg jb pop repz pusha lret mov loop or pmaxsw adc stos out xor cwtl push jge and mov addr16 or xchg sub pop (bad) mov inc negb sbb dec ror push out fwait scas pop mov call mov icebp out clc cmpsl dec dec cwtl (bad) mov push movsl pop pop dec push imul mov push loopne push je cmpsb stc mov rorl and sub mov (bad) xor sbb sahf dec xor or test mov fiaddl inc sahf mov xchg inc mov jecxz (bad) aaa cli shlb jmp push jno andl lret in xchg das xchg (bad) pushf mov lcall sbbl (bad) adc sbb arpl jmp inc jo adc cmp lret leave in sub xchg jmp dec or and popf scas xchg test mov mov nop lock inc sbb popa fild mov scas adc and int push dec jmpw dec aad or push xchg cltd fisttp sub dec test mov lods xchg loopne stos icebp and cmpsl icebp push insb mov mov in dec int xor add js (bad) and jl mov int3 pushf push aad ret or adc in (bad) ss push cmp in mov notl cmc mov mov loopne daa mov mov loope mov pop pop mov neg movl adc xor (bad) lock sub xchg cmc cmp std push repnz push lret (bad) dec inc xchg pop aas inc ret push pop test daa jnp inc adc or push jnp mov loope movsl loopne in mov and mov pop in fisubl and lea inc xchg sarl or test add (bad) jae sti shlb xchg xchg in pop test (bad) (bad) cmp in cmp jbe fistp or and int3 jno pop inc dec lret jnp adc fdiv sbb test ds push mov sbb inc mov mov adc add and mov jnp dec jge popa inc nop jae (bad) xor sbbb outsl inc fstps pop stos sbb stc push stc adc xor mov push xchg jp jno pop cmp movlps push lret cld adc jnp inc hlt pop lock xor cmpl mov movsb or movsl mov adc adc cmp jae mov dec jno jb xchg inc hlt cltd out mov push push cmp jnp insb shrl add ja add adc inc roll adc sub add lcall hlt dec dec hlt cli ss sahf push or rcl push repz rorb jecxz (bad) sbb cwtl das divl das pop fistl leave loopne jge adc mov adc sub mov push fisubr aaa jle push inc add ja test lret and stos frstpm(287 (bad) stos outsb and mov fsubrl push jg pop scas mov mov pop push addl cwtl loopne vmovupd sub mov call push (bad) dec dec lds fcoms lock (bad) xor mov in dec repz test mov (bad) ljmp nop mov int3 push jne sbb push xchg roll xlat mov mov mov popf daa jecxz cwtl mov movsb mov ja addr16 add stc hlt and add out dec test in xchg cmp push sbb fwait add je fnsave repz call add mov js (bad) iret add es adc or stos xchg and mov mov xor sbb lods jg pop dec pop fimull xor addb dec mov fisubr cld pop xor jae mov sarl cmpsl dec orps clc repz and ret je push pop outsb xchg (bad) jl movsb not xchg in lods pop (bad) sub pop push sahf jle mov lock (bad) out sub mov pop out and mov bound cmpsl adc xchg cmp dec or dec push loop adc (bad) daa push (bad) scas mov sti pop mov xchg ficom push cmp dec fidivr jbe scas (bad) notl call call jge add cltd or daa rclb insl out stos lods movsl jno push adc jbe cmp ret jg rclb xchg sub loop mov fistpl cmp insb xchg jnp,pt mov test push cmp movsb ret mov arpl scas fwait in push cmp dec xor out xlat cmc jmp cmp sar out sub (bad) jo and xchg repz sub pushf or shlb xor mov push jge test sbb (bad) pop jo test and cwtl cmp push pop cld aad outsl in (bad) sbb (bad) jbe adc lods xor jmp repnz or xchg mov cltd insb in cmp gs es mov pop in xchg inc add int mov and adc jae push adc (bad) sub loop cltd xchg in in imul sub dec imul adc call iret inc ljmp mov rcrl mov mov or adcl inc cltd jmp and lret cmpsl mov pop std movsl sbb cmp or imul sbb test int and pop sbb sahf inc imul sbb lds pop cmp fimul push mov jnp sbb and dec js call insl add jmp jmp jge fdivrl ret test jbe cmp scas mov rcrb pop jbe mov cwtl push shll mov loopne in bound adc daa addr16 push adc (bad) xor push jb push jp fist jle insl or cmc movsb leave loop ret push sti and add push cmpsb xchg dec dec sub mov xchg xlat dec add jbe sbb add cmp and inc nop in cld ljmp or iret imull mov mov xchg enter popf sahf mov push mov imull dec dec mov fcomps stc add sub push jae mov xor or repz (bad) push xchg push das pop pushf mov repnz idivl lds xchg adc fsubrl fldcw mov aaa sbb cs jne mov jmp mov xchg xor daa fistl (bad) punpcklbw lea pusha and inc subl aaa shlb xor fimul xchg clc pop mov mov sub xor cli mov jmp pop add outsb sbb jno dec fistl and push (bad) sbb dec and test dec inc outsl sbb out call imul inc pop mov jo rorl lcall jl push jl mov pop sub sbb aad cmpsl pop shlb xchg sbb inc push cmc xchg test fmull ret lahf out das mov dec jo sbb mov sbb inc cld sub cmp lret mov dec pop mov sahf mov rcrb pop cmpsl insb add outsl cmpl cmp jbe (bad) data16 nop inc es addr16 mov iret loop outsl ja outsb arpl mov ss nop in idivl push fimul (bad) cmp stos fsubr cltd daa pop sbb jbe popf inc jmp cmp bound mov pop lods mov outsb xchg std stos rclb loope aad push or or aam inc pop push std mov in iret loope dec ret iret in mov xchg mov test loop out dec sub inc repnz xlat or jge adcb fcmovne cmp test stos outsl test daa (bad) xchg cli cmc xlat xor mov xor lret enter jb jne add mov cmc shrl and fildll adc leave pop adc push int3 pop imul loope out cmp aam cld jb iret fisubr aas divb dec lcall dec jbe jns jnp push int3 and push cmp (bad) iret insl scas sbb sbb mov int add rcll jge dec dec cld cmp les dec lods ja push mov std repz cmp fwait or hlt or lods jno lret add daa jmp scas push mov je xor dec xlat jle xor dec add push or xchg mov iret pop leave mov xchg aas rol mov (bad) inc sarl push mov int mov jg inc mov dec sbbb pushl enter orb sbb sub xor iret iret mov or push lods bound out mov cmpsl sahf nop lods in pop scas inc xchg shl or imul sbb in inc cmp pop jb and push scas (bad) movsb test mov stos (bad) rorb insl push dec or mov sub je stos pop arpl sub cltd loop bound xorps or xor xchg cli (bad) cmc lds fiadd or pushf jbe aas adc and mov jp jecxz out movsb dec arpl repz les ja fs stos loop call leave and icebp adcl cmp sbb mov cmc dec (bad) inc push out sti add lds mov mov fidivl jl out mov and fst push or push into out adc out popa push mov loop stos dec adc orl push nop out das xor push stc inc sub and (bad) lret sub mov inc je lcall loop das shld sub ljmp adc dec cmp fcoms jmp inc and div icebp and fldcw mov in add in xchg ret dec sahf sbb (bad) repnz ljmp into sbb pop sbb cmp in xor cmpsb cmp (bad) cltd xor stos (bad) mov bound mov add arpl ljmp mov pushl push das dec (bad) dec and sub xor jne xor xchg imul cltd mov add test vfrczpd ret sub in mov or fs imul lcall sbb inc icebp ss enter clc rorb imul icebp mov movl adc (bad) sbb cmp add mov mov subb jge mov mov add outsb enter xor or add mov add mov mov arpl shlb das pop out sahf or sti xor pop std add mov enter setne pop dec in cmp int3 lret adc dec inc xlat pop int3 ret push and ret mov xchg inc jp arpl and push mov or jg push rcrl adc xor push stos add xor outsl adc and add in lods pop bound or pop iret js pop xchg (bad) cmpsb jge xchg int3 fstps cmp notl addr16 add fsubrs push cmp pop jmp pop or scas lea xor xor hlt sbb cmp pop mov xchg jno sub or dec push movsl adc daa jbe mov inc mov leave cld call add out mov mov out pop pop aam mov ds jg xchg push lods (bad) cmp inc mov mov push xchg or lahf flds sti cmpsl fucomip adc mov shl sub or clc ss jecxz sub sbb xor inc or xchg mov xor sub cmpb insb inc lea rorb shlb lock popf or rcll leave mov enter fadds (bad) outsl mov push mov repnz popa push sti lods or push or cwtl mov add iret xchg xor repz cmp and outsb sti repnz mov sub inc xlat jp stos dec mov mov cltd jecxz cbtw ljmp int sbb xor aas dec xchg loope dec push xchg pop mov xchg add sub lret mov pop inc jmp (bad) cmpsl dec pop mov (bad) pop enter enter xchg cmp roll into lds push fcmovnb fs mov clc pushf outsb outsl xlat clc pop inc mov rorb dec xor scas lock adc addl mov outsl fnstcw in test imul or xor les xor and jo sbb mov arpl jmp sub icebp mov (bad) cmc xchg jnp enter push loope inc mov push and scas mov jl pop int (bad) pop or popf jae mov mov rcrb inc lods addb add sub ja inc fistpll in pop in pushw fstpt push dec dec popa aad pop lds dec fistpl loope xor mov sbb and js mov (bad) orb xor aad dec mov sbb repz movsb rcl mov lock call sub jo dec sti sbb sub fild mov inc xor outsl xor decl sub or addr16 lods pushf and push or call push inc push mov sub (bad) mov xchg jecxz xchg (bad) vpmaddwd fldcw lea je hlt iret int3 ss sbb test cltd (bad) clc fcoms mov and xchg or mov insb mov stos dec sub stos mov mov push xchg fisttpll repz xchg out pop sub add (bad) (bad) imul mull cmp inc data16 sbb into cltd and mov ss fxrstor add mov cltd (bad) icebp add insl arpl inc inc enter mov add push adc fnsave in (bad) mov cmp loope rorb lods jno xchg lods aaa lcall or cmc lret push cmpsl inc jnp cmp push and stos insl sub rol imul fistpl (bad) jge mov mov and inc ficompl or std jecxz sub movsl jnp in dec repnz mov pop pop sbb repnz or push faddl xchg push pop insb addb out jmp sub sub inc icebp xor pop mov sbb outsb adc movsb std jo mov xchg loop call js sub xor loopne inc stos mov fcoml adc pop stc fmuls sub les sub mov loopne mov mov clc and cltd jl push xchg es and mull ja mov pop hlt mov ss or sbb fcmovu xchg repnz ds lods mov mov and mov jp jne mov cli mov jo add lcall cltd fdivs pop cmp sbb adc inc xor dec in out sbb in dec insl and add pop dec aad stos cs movsl sahf pop jne sbb add dec pushf sbb fbld (bad) insb dec das xchg mov xor jg or xor adc inc pop pop add cmp pop inc imul adc (bad) cwtl loope sub jge or push adc int3 sub mov pop sti test mov test jp adc loopne clc imul sarl inc adc test and data16 push mov repz mov hlt aad push add aaa jno mov xchg mov sbb imul mov mov add (bad) leave incl jno fcmovne pop das addr16 jecxz dec mov ss or pop pop ret js ja dec add das mov iret mov popa jnp xchg jb add mov adc adc loop lret bound sbb or loopne pusha mov adc sbb scas sti movsb popf ja std or add push fnstcw jp (bad) sub add scas dec daa pop sbb scas fiaddl movsb and xor push push pop std push stos xor and add cli es mov incb cmp insl repnz or sbb pop imull and fnstsw pushf shrl cs mov fisubr mov popf out ja add mov test mov (bad) and push inc mov cli xchg inc push push jg pop jge xchg repnz dec mov movsl sbbl scas or lds pop sub mov and push aad push and and icebp xor inc hlt popa frstor and popa hlt addr16 repnz int3 fldl sub xchg (bad) iret aam push jnp lods lock jb (bad) push or xchg cmp push or mov jb mov lods stc sub push mov mov jg cli inc mov mov nop adcl (bad) push push stc popa sbb movl (bad) jg dec jbe ljmp push sahf rolb xchg and pop aaa pushf or hlt out xor test sub inc test ss sbb dec pusha cmp repz ss sub sti stos clc cmpsl inc fbstp sahf (bad) mov inc mov jg or and mov pop jns (bad) rolb leave outsb icebp cwtl inc cmpsb mov or aad jmp pop movsb out pop mov push xchg sub jb daa sbb and test rolb inc rorl jle div jo jmp jge cmc mov test test mov or xlat add int3 pop cli or fidivr mov orl pop ds add (bad) das or mov mov cs sbb pop inc xor sub sbb (bad) jns mov aas xor inc mov mov push shlb mov pop mov sbb inc adcb repnz in inc jns cli (bad) ljmp xor popf rdtsc arpl (bad) loopne inc xchg les in dec jo sti (bad) rol ficomp clc add sbb aas jmp lods add pop jle dec xchg scas mov icebp stos add dec (bad) (bad) push cld jno repz das bound loope fistl xor int cmp jle lret sub daa push and into repnz push leave popf out int xchg xor inc in imul push pop sub mov lahf add les decl insb xchg adc out or test push xchg jb sbb subl jnp adc jge lcall push test int3 ret and push push lea nop je js fiadd add mov pop idivl pop enter cwtl mov jno sahf and jp jno sahf ds pusha xchg mov cli adc insb jg xor cmc movsb sbb fisubr insl fwait outsl mov (bad) jmp mov hlt (bad) lahf pusha sbb out dec mov inc sub sahf jmp arpl daa mov xor jmp and int3 popf das mov dec pop add outsb xchg (bad) adc adc sub fwait int add cmpsb les (bad) xor fwait xor or push sub pop jecxz (bad) mov pop sbb mov popf inc outsb mov sub cmp icebp inc clc ja test outsb mov (bad) je mov xchg cmpsb and dec jecxz fsts and movsb in les in push jge adc push pop jle dec jecxz outsl cli adc lret out push fimull mov dec scas movb jp xchg mov or fisttpll ss pop xchg xchg mov dec (bad) nop add mov jbe sub xor or imul mov sti cmpsb sbb push stc ja pop mov (bad) aam imul push pop dec sbbl mov adc rorb mov mov rorl icebp mov cmp add and mov mov jbe popl push dec cmp (bad) or and out aas loop xchg movsb fadds hlt fdivs push pusha mov loopne insl int gs inc (bad) outsb sbb stos sbb push push dec sbb stos push loop dec xor push mov add mov stos sbb mov push cwtl mov popa or in out push stos xor inc mov jns pushf in sbb mov add jmp stos adc jno pop lcall jge lret push data16 jp ss mov sbb adc sub imul or scas std push xchg jg pushf jnp jae cmc add xchg out cmp fimul adc dec push push call mov lret test sti fstl jp ret clc dec cmp add jmp jg mov insb cwtl (bad) je adc nop scas or and std sbb mov ret subl pop insl scas in fist jbe inc pop loope cli fucom mov add lock inc push jle xchg mov xor or xor (bad) sahf clc enter mov jecxz xor iret jb enter sub dec int in pushf outsl mov cmp mov or mov repnz popa mov mov repz bound hlt jno push pop fisubr xchg fidivrl pop (bad) (bad) jno jno and or pop sub jmp fsubs fstps cmc mov dec pop lahf testl into stos mov ss adc popf stc mov mov loope xchg or insb pop call xor lds fnstsw (bad) outsb mov push lret subb mov loop dec sbb inc mov ret idivl xor test add insb adc xchg dec pop sti pushf add cmp xchg in xchg loop pop stos or dec cmp rol mov (bad) imul dec cmpsb fcmovb out sti or cmp dec and int3 adc cmp fidivl je mov push loop mov das fstpt sbb adc lret push (bad) aas or test cli popa fnsave jge or (bad) pop jle call add add adc lods push repnz xchg cmpsl icebp stos out in repnz mov push cli add sti daa mov dec lock int add cmc xor in xchg pusha inc xor aas inc inc xchg cs inc push imul push movsb stos fcomps (bad) jne,pt (bad) xchg push fwait mov out push lcall mov out enter pop mov mov repz pushf and push or xor insb pusha sub jns push lahf add jge iret fsubrs int movb adc mov jo test adc mov dec jbe xchg sbb dec adc out adc push test adc (bad) pop mov loope cmpsl call test hlt xchg xchg dec cmp addr16 out ret ret (bad) (bad) or cmp les jmp sahf or insb jmp jns pusha pop leave or inc lods fimull jns jle sub add pusha repz xchg push xor sub mov (bad) adc ret xchg lds pushl push inc pop mov jmp jno and adc mov fmull nop aad insl in sbb lret addl addr16 (bad) enter add fistpll inc dec and xchg mov or mov rolb fistl popf sub test out sub mov imul mov or and inc and sbb xor jmp inc pop scas stc add adc cld int3 mov sti rcl ja out inc dec xchg pcmpgtd sbb aam stc xchg or repz mov xor xchg push xchg inc mov or xchg movsb sahf nop hlt idivb lods fldz add fsubrl jl ss cmp inc gs outsb jno jno stos lods cmp jge xor (bad) sti mov loop sub daa push mov push outsb ret shlb add and orl adc pop inc pop mov push dec mov test scas shrb mov pop dec mov cltd enter into data16 ss mov lahf inc lahf cmp cmpsl out jo pop jne push cmpsb lea ficom add inc mov scas inc sti lret loop loope ds mov fs cmpsb bound outsb cmp add cld out jmp push xchg shrl sti lock jge test (bad) xchg and push sar cmpsl insb mov sub insb mov stos cmp xchg leave ss pop sbb hlt mov daa int3 (bad) mov jp add mov and sbb das fs rolb sbb aas sbb mov popa aas pushf fisub jecxz leave lds sub aad cmp and mov mov fwait push outsl mov sub inc mov push shr push adc popf mov out fstps es fs adc xor popa frstor xchg or mov cmpsb (bad) adc mov xchg add jne test insl sti mov imul mov in leave xchg mov xor addr16 xor dec sahf fwait enter push test xor mov or mov in jmp cmp jae push push mov test fdivrp test jmp or push mov xor jle fistl pop mov adc popf adc jl lds (bad) hlt push cmp das or popa insl popa adc xchg clc fdivrs add cmpsb imul mov mov lock or jmp mov addr16 into aam mov and out mov movsb pop test cmp jns pop xor out mull push gs xchg idivl mov ss push add cmp cmp xchg rolb cmp add mov imul xchg repz pop adc inc in mov jns mov arpl push jle jbe jg pop adc les rorb jns fwait xchg jle cmpsl xor inc shrl jge push jle daa sahf mov or (bad) mov daa dec std out pop or fcmovu dec or movsl cmp xchg or xchg sub popf dec out jmp aad push clc xor pop xor adc std pop stc dec jo xlat (bad) sbb cs mov scas jo out imul jecxz add pop and addr16 (bad) notl ret mov dec sub pop out pop cs xor or add inc xor imul (bad) negb decb out add fs mov pop out push int icebp sar cmp push xchg in mov lods or aas or pop pushf inc adc pop notb bound jbe dec inc nop outsb sbb adc push and jp push and cmp shl rol pop gs insb in inc popf push and imul sbb sbb lods lea es inc movsb int inc decb subl cmpsb leave xchg daa shlb call aad addl stos pop subl and ror sbb jp insb shll jmp push and (bad) loopne outsl out rcrl insb lret cmpl das push mov pop mulb inc and lods sbb ror adc (bad) lcall mov adc in (bad) inc jp xchg pop outsb pop pop pop mov mov xchg fisttpl and adc adc es mov jp scas sub loopne mov imul (bad) push add jl lods (bad) pop imul cltd dec sub ja dec or mov push xchg cmp out sub std arpl adc roll (bad) movsb xchg and jnp (bad) mov test in fs shll mov mov xchg sbb data16 dec fnstenv test cli and sub cmp adcb ljmp or (bad) mov rolb aas cltd jne sbb lods sbb cld scas hlt mov enter push enter js cmp imul or (bad) sbb inc and pop insb int3 mov or dec inc xchg xchg ret (bad) jo out fisttp cltd or sub sub repz pop xchg test aas dec loop adc jno and iret int3 icebp jp mov ret jno or test mov mov outsb in rorb mov ffreep dec jb shl ffree test pop mov jecxz sbb or loopne cmp pop jbe (bad) xchg add sbb xor test aad fisubl (bad) stos push mov mov xchg jnp inc mov js sbb mov push push pushf mov push lret ror pop xor insl into hlt pop adc and add js push jns jecxz xchg jmp jb insb inc xchg cs pop mov push mov repnz jne fcoms loope rcll das xchg iret inc sbb mov test or sahf push dec aaa jl inc test xor adc push (bad) int3 xchg pusha sub adc push jmp pop aam lret adc ja hlt outsl adcl xchg mov movsl push mov stos xor cmc outsl insb xor repz fwait popl cmp int leave mov mov pop mov fnstsw insb inc adc leave fnstsw fisttp mov sub inc int3 mov outsl aad cmc sub cmp xchg mov jge and cli outsb rol jbe addr16 fisttpll sarl jb ficoml sub les adc in andl js mov mov lods into pusha gs add pushf mov push incl loop ret movsl imul push xchg adc hlt mov repnz pop push push adc or out mov push or push cmp sub lods rcll fisubr dec sub mov add das add arpl cmp jecxz mov aas jecxz xlat lds test push aam call mov xorl inc lock data16 lods test mov arpl jo,pt imul add cmp push xor sub cwtl jp into (bad) outsl sar test xor sbb sbb test pop jne and jno mov cld mov cmp js nop xchg push xlat add jnp cmpsb sub aad fcoms outsb das mov add sarb cltd jns mov lods push das jb dec std sahf out pop mov sub and ret scas mov sbb push xor mov sbb inc xlat sar popf rorb mov push push fwait mov imul sub repz pop mov repz in xchg sub mov push ljmp add cmp scas mov pop mov imul jne xchg cmp push mov add sahf es push mov and into sub mov (bad) adc and rclb sbb fisubl adc sub jge cmpsl sub sar popf xchg fimul leave mul dec cmc xor ret lea out popa xchg and movsl pusha push aaa pusha je cli pop mov repnz xchg je sbb iret lods mov jo pop dec sbb push test icebp inc in (bad) stos test mov mov fiaddl scas dec movsb les mov sub in in gs xchg inc shrb xchg push (bad) js xchg imul ret push mov mov adc pop cmp icebp adc mov mov es hlt xchg scas aas mov fwait scas aad mov xchg cmpsb jb (bad) (bad) xor es aam sbb sbb insb loopne xchg iret cli mov pusha xchg xlat lds stos arpl pop jb cmpsl dec cmp in lods ljmp int3 out dec bnd int3 jne xchg inc xor jmp adc fwait clc mov and or sub inc out lret sbb sub mov shrl icebp mov into mov adc xchg push dec mov mov inc cld mov cmpsb cmp faddp mov div adc push or enter das inc xchg xchg mov or cmp imul push xor push adc sbb push xchg outsb call lds ret mov mov aad js jmp add dec adc mov jle dec sti or xlat cmp fldenv xchg andl mov sbb mov adc test adc ds xor je fwait add test fsts fiadd push cmp xchg lret mov inc test adc cmpsb (bad) (bad) aad cmp sub loop mov push aad daa icebp add adc test sbb mov jmp ds pusha xchg xor or (bad) mov mov push scas cmp lods (bad) sub aaa add fabs andb push jp sbb cmp je dec movsb imul out iret adc sbb pushf pop (bad) jnp pop cli (bad) dec inc jb dec fmull int3 and mov dec (bad) mov or pop aad stos cmp insb or mov iret adc inc test test in repz popf and sub movsb inc das test pop sub int3 mov or inc ret dec test imul std dec aad jle test push test cmpb fidivr insl or and jo lret cmc jecxz inc imul mov jge out inc mov into fisubrl dec dec push dec mov push es sbb into sub insb sbb mov mov inc lds imul insb mov sbb mov cmp sub mov push es or inc mov fs fsubrl mov nop (bad) icebp lcall nopl aas push test insb sarl insl push jg sbb pop pop call test inc cld fldz xchg push mov idivb outsb adc rcrl fnstcw cs clc sub mov and push inc mov call dec cmp icebp in shrb (bad) jp lcall (bad) ss pop loope aam sbb (bad) adc int3 xor push mov mov push inc (bad) dec xor ret xlat inc repnz sbb sbb xchg je inc (bad) fs push mov push cmpl lock mov insb aaa aaa cltd (bad) rclb or push (bad) loope lret push fucom mov sbb fcomi jecxz test ret stc popf pop and adc subl mov jae sub std jp xlat stos cmp pop or fist jge test jae push push ja int and or shl sbb ret push ja jecxz pop push ret push inc aam roll scas push sub or movsl dec jbe test or push sarl cmp vminsd and or xlat mov pop popa outsb cmp add leave cwtl cmp and outsl push fstpl and jno or dec or les mov mov push xchg rol repz sahf sub push cmp add dec xchg sub ds lds dec in mov sarb cmp adc adc push stos pop dec mov pop xchg daa jg cmp (bad) xchg in loop or bound dec adc movb (bad) cmpl mov mov sub jnp and pop sub (bad) ds int3 (bad) lret mov cwtl aaa imul mov ret leave mov mov lea dec clc pop hlt movsb adc cmp jbe mov sti dec add add scas xorw pop xor push push js pop shrb sti adc mov mov xlat pop inc cltd outsl adc popf insl popl subb mov stos lcall jle test shll jle insb subl rol xor xchg cmpsb rep xchg out pop inc fildl add bound (bad) andl inc lea xchg jmp iret mov andl add sub add jl,pn insb add xchg in imul arpl or add pop imul call pushf rorl push sbb test out sub jo ljmp xor xor fisubrl fnstsw ljmp mov push xchg sbb xchg (bad) je lea scas sbb mov push je mov xor sbb lcall cmp xchg push or cmp sahf and jmp in scas aad cltd dec sub push cltd mov cmp iret xor aad hlt mov lcall enter adc push jg sub out dec test jle in jbe (bad) push std xor decl test inc daa imul sub ret mov lret js or sub push pop jmp movsb andl outsl out mov push pop sub lods lret and decb or into sbb ljmp popa icebp cli out aam push sbb jno xchg pushl adc or pop (bad) stc sti adc fwait imul ret push lret push dec ror out sbb leave iret addb or jns clc push and cwtl js pop dec push arpl icebp xchg dec and and mov sub sbb hlt dec out cld mov sarb in dec ss jb xor and dec inc test ret sar cltd adc mov push (bad) les std or mov pop pop adc es lahf lret mov inc (bad) xor fwait or rcll jp add outsl icebp gs loope pop adc push insl xchg fldl aam scas mov add out cmp sub mov push ret lods sbb stos iret push lahf mov dec and fsubrl xor add ret daa into leave or shlb xchg pop pop adc push ss inc in cmpsl in int test stos push mov into lods mov jno rorb out scas out and cwtl jmp cli cmp mov loop push fdivl cmp pop cmp fs fiaddl mov out push xchg (bad) mov jne shlb test lea jg xlat movsl (bad) pop outsb dec mov (bad) xchg and mov push lahf cmp fs (bad) test mov add xor mov mov xchg mov adc sub fwait pop mov mov mov dec xor clc (bad) and mov pop leave ss int3 movsl stos pop lahf andl gs mov lret and inc cwtl mov jns pop bound pop pushf and clc jecxz sub push arpl outsb xchg mov adc je cld jne clc adc dec fucomip dec push add mov or rcr sub bound lahf jp push mov push ret addr16 popf scas setge xchg mov add mov call addb out jp push or out mov mov cltd mov cmp fnstenv pop in cmp mov adc sahf data16 xchg daa lcall sbb int xor mov mov xor ret adc (bad) mov lea adc jnp das or dec inc iret sbb clc mov out or into adc js insb xchg and movsb movsb pusha mov mov movsb loop sti mov cmc mov rorl bound orl push pop outsl fdivrs mov shll add push mov push jae push pushf mov in jno das mov imul loopne inc pop fdivs lahf les push in les or dec aaa lods repz or mov adc adc sarl popf mov imul sbb sub mov mov in inc pop push movsb (bad) push daa dec cmpsl pop fcomp stc sti xchg add repnz mov mov dec lods popa test mov push cmp insl bound inc xlat outsb lock inc pop inc mov in sbb hlt mov dec mov mov pusha je cwtl fidiv arpl xchg test test test (bad) jne mov jge jbe (bad) movsl lods mov push dec scas mov lahf mov cmp jge dec jp rsm fs and or add mov nop ljmp std rorl push push inc mov sub std in int xchg lea cmp repnz in push popf xchg mov or arpl cmp lods addr16 jb xchg sub or fsubp pop das sub inc stc roll xchg add sub bnd xor jo sub pop dec pop fxch pop lds arpl pop in push dec and fistpl xor fisttpl loopne inc jns or sahf push lock push pusha jae sbb xor push in shlb mov ja or clc fnstcw cwtl iret pusha add mov lahf pushf imul xchg cltd jecxz jo loopne (bad) js add lods mov mov ds jl cld nop shrb dec test loop mov out jne daa (bad) mov jecxz xor in int lock xchg and lods sub adc lea fwait sub lea sbb xchg cmp and inc fmuls xchg loope cmp ret in test push adc int3 movsl hlt cltd out adc add jns cmp inc loope cmp sbb dec stos jbe cli pop pop fldcw loop xchg mov push test mov mov cmc call or jne mov mov outsb push out mov sub pop les push lcall mov cs scas outsl fdivrl sbb nop outsl push mov orb mov fildl lret sahf jp popf enter cmp mov shlb add rclb pop fadds sbb fcomps adcb sub adc dec mov mov sarb xchg mov push jle adc and call dec jecxz (bad) fstps jmp test movsl jns mov xor mov mov and leave or mov sub cmpsb aas xchg mov jle jne ljmp push jb adc insl fwait iret xor out out int push insl sahf sbb dec or (bad) (bad) mov sub pop bnd xor aaa stos fdivrs cmpsb insl (bad) hlt sub jbe das cli outsb jno,pn push inc push fs mov jl repz xchg fild sahf nop add ss fucom fimull mov test movsl mov jae pop adc ljmp or sbb adc adc aam nop pop pop push out cltd xchg dec stc test minps sub or test mov pop rclb movsl icebp mov data16 enter and sub cmp addl lea clc outsl stos or aaa adc cmp aas mov xor leave in imul sub xor sub js lods fs jg adc or cmpsb push xchg and je negb loop lahf jnp divl cld lcall push mov rcl rclb (bad) xchg mov inc mov xor jl jmp loopne mov or jle pop lock insb mov dec mov and dec notl sti mov lods enter into lcall out cmpsb xor xchg (bad) lds ret insb push inc (bad) out and stos dec lret (bad) dec add lock push xchg inc jge lds and aad mov sub fldenv movsl pop mov fiadd jge insl dec or rolb outsb dec popa cltd iret fisubrl cmp mov sbb sbb test add and inc outsl (bad) push cmp fcomp call dec out jnp inc inc and push call jg (bad) adc or lahf inc sahf lock (bad) jae cmp lcall xor lock xchg scas xchg add add push push cmp add adc lret ficoml jnp jle cltd adc pop pop add mov and (bad) je aam and ds jne stos xor popa mov xor jno js inc and or icebp xchg loop,pn out cwtl push cmc dec into fcom and dec in or xor scas push or pop mov stc outsl push in mov cmp cmp xchg xchg cld mov test nop leave push ja repnz jp lea jle ds lods mov sub adc or outsb dec push fdivrl cmp and jno add jle insb std ljmp xor fdivs dec outsb xchg push inc xor movsb pop loope or mov scas pop sbb mov icebp and pop es outsl pop pop repz jecxz,pt enter (bad) out mov aaa hlt jg push test fild lahf xchg jne cmp dec jge repnz sbb (bad) sti (bad) stc mov xor or push and clc and pop inc pop sti faddp push pop test not pop loope pushf hlt das mov leave xor mov or inc out mov mov sar push aam idivb push mov and jb out sbb mov dec pop adc pushf jp lds jp dec inc push xor (bad) adc ljmp inc rcrl loopne and fs aaa (bad) aas in sar insl sbb movsb sbbl int idiv sahf and xorb xor pop cmc push mov ss pop or mov lock aad sti mov xor (bad) jge fdivrl ficoml cmp xchg orl adc adc pushf mov fdivs jecxz into sub mov (bad) (bad) jg movsb (bad) push or push js fstpt mov insb dec or jo lods xor addr16 enter icebp std gs ds cmp adc inc cmc mov mov inc mov inc mov fdivp out dec mov in jb rol rcrl iret sbb into (bad) fiaddl in andps dec lock ljmp dec les or out (bad) lods repnz loop push jg or std hlt bound cmp mov xchg js cwtl mov jp jno daa fdivs push out adc pop sbb adc inc cmp xchg mov fldl or sub jle mov cld cmpsb mov xchg lret dec cmp push out cmpsb fldl and lcall (bad) in repnz xchg mov ud1 rcrl jne adc mov jle (bad) jbe push and sbb push inc jne cmpl fimull imul mov aaa push or xchg enter push in imul std ret test mov aaa repz dec hlt aam test out jmp pop mov pusha faddp scas mov lcall cltd in mov std push insb and loope in aam loop pop cld popa and xor add xor mov sahf pushf or xchg or mov and shlb push sub cmc scas adc fmuls jne sub adc jbe xchg sbb adc add mov xchg mov (bad) into fwait mov inc dec xchg dec addr16 xchg sbb xchg fs out cwtl pop movsl repnz cli mov imul sbb fnstcw leave lods sub add stos aas ss sub pop xor or pop movsb ljmp pop lret mov mov inc into xchg fisubl or fimull cmc adc sub xchg in adc mov imul dec pop ds jmp es mov or cmp roll stos sbb out pop inc cld mov out fstl ret popf test aad mov cmpsb fldt fwait ljmp xchg fstp mov xchg das (bad) fisubrl test nop out dec push adc sbb fstpt sbb jecxz add cmpsl cmp mov inc fidivr or sar push mov jae sbb (bad) xchg sbb mov daa lods loop daa in pop decl lods mov jno out aad insb pop sub pop stc add sbb xorb adc push pop jecxz mov jb test ja sbb in rclb cmp jno aas sbb outsb movsl dec sbb xchg in (bad) ds adc movsl scas or mov stc mov imul rcrl cmp jmp pop aaa pop (bad) xor (bad) ficomp rcrl fs inc idiv pop xlat or (bad) pop adc in movsb scas mov adc push outsb inc ret (bad) out inc (bad) xor mov jno xchg enter fdiv jns mov scas pop in sub mov cltd call cwtl int stc mov jle jbe shrl out dec add or bound lahf xchg xchg sub xchg mov out sub dec cmp jne pop ds dec and aam cmovl sbb mov lea dec and bnd sbb mov mov dec and int3 sub push adc mov pop mov mov or test inc call ja int3 mov test mov out jne clc or or clc lret xchg xor xchg das imul jae xchg fldcw lods mov fidivrl cmpsb jno sbb mov ret fiadd push xorl notl cmp jbe inc stos ljmp pop loopne dec lods jbe sub dec stc mov inc xchg addr16 sarl pop stc roll inc adc hlt mov fidiv sbb mov xchg mov insb add test cmpsb adc push test loope dec scas lock aad xor int or cmp dec push ret scas aam das mov sub sub fsubrl fwait rclb push push push xor xchg les repz mov lods test xchg fnstenv push dec arpl cs xchg cmpsb cltd fnstenv cmp aam sbb loop xchg aas popa xor add or push out sub in leave sub cmp test cmp sub xchg xchg mov sar xor push mov test mov xchg xor inc cmc jmp add lods mov sub pop fbld test dec js xor loope pop push lods sbb sahf daa lods lcall fucomp das fnstcw jge in pop xor gs mov xchg fisttpl push mov push sbb sbb insl push fs jnp sbb add loop jbe mov sahf and (bad) divb loop (bad) or mov mov sub sbb cmp fcoml ficompl push or out arpl inc and out fs insl cmp mov loope cmpsl xor sbb dec jb ljmp pushf mov mov cmp push les pop dec jl pop movsl lods (bad) mov pop inc in add jecxz xor add std add daa (bad) out sarl mov aam pushf incl xchg cmp adc ds jge test les andl sub jno mov call mov inc sahf push lsl or negb int test xor dec nop outsb ret xchg mov jo mov adc jbe fadds xor arpl int ret jmp out js sbb mov push jb in imul and or sbb int3 dec jp sbb jne jg (bad) je psllq pop xor cmp mov xor jbe mov push push sub iret idivl mov pusha push mov test pop or test daa sbb lods inc (bad) nop mov fwait dec js sub cmp cmp ja sbb push jl mov or aaa lods pop lret or inc jecxz or cmpb dec jmp add pop mov pop mov mov rclb fstl (bad) fldt (bad) lret lahf popa push (bad) aaa cmc adc push push adc pop mov cmpsb cmc mov cld adc cmp dec add call out pop cwtl cmc loope push dec icebp sti aad jmp inc ret test push into fldcw fidivl gs inc sub jl xchg pop stos loop dec repnz sbb xchg mull push pop aas jp dec xlat mov je aas xor jle sub nop mov pop sbb sarb out push iret mov call jb fsubr in jmp xor repz lcall insl sub dec and or incl pop (bad) in (bad) aaa and jg fs sbb push push cmp xlat dec mov shr jbe and test jle push daa loope dec fldenv iret cmp sti dec in xchg aam andl ss int3 loope incb sub sub sub adc xchg sbb pop or xchg lret adcb bound fcomip inc cmpsl loop and (bad) mov cltd (bad) inc imul cltd ljmp hlt lods mov je push ljmp sti ljmp pop jae fs sub cld call jb add bound and out push (bad) xchg xlat dec xchg rolb and imul and inc cmp loope adc inc je xchg xchg or push dec adc lea sar jo add inc stc fsubs jecxz mov hlt pop lahf jns addr16 rcrb pop cli in cmpsb lods jae aaa subb xor pop aad iret insl mov or mov rcr popf mov jnp dec mov popa mov lea cmp rolb jp lret xchg orl dec lods pop mov repnz or ret inc out sti pushf fstps test jle cmp je fsubr in imul jmp inc xchg pop jnp inc orb pop xchg out popa outsl adc mov pushf lods xor aas in sub int3 mov (bad) sub popf cmp ljmp push dec jno rsqrtps (bad) pop mov adc into mov repnz (bad) push pop scas sub push adc jne jns push movsb jns stos scas cwtl aas fdiv inc xor loopne dec and cmpsl clc mov rcrb jmp cmp mov cmp push out push xor test pop mov (bad) cmpsb lds stos xor (bad) mov push aaa push into gs xchg cmp rcll jb jnp push mov imul mov stc mulb xor ret nop jg int hlt int lea les icebp mov push or mov xchg popf adc addb lret push mov nopl adc dec into push push push into adc xchg test add mov into cltd lds add imul mov fisttp dec mov int xor stos das pop ljmp daa sub int xor mov fwait jl push inc mov cmp pop xchg pop pusha andl inc (bad) dec mov (bad) hlt cmpsb xchg dec inc pusha jne je (bad) and push loope inc aas imul mov idivl sbb das jb pop adc cwtl loop cmp inc sbb fs dec pop and lret cmp mov xchg mov aam iret jl adc sarl pop int3 mov loopne xchg in push sub jg xchg pop add mov (bad) (bad) testb cmp repnz test mov add push cmp stos jns inc cmpsb lahf mov jle scas fwait dec jae inc lahf int mov mov mul xchg faddl sbb cwtl xorb lahf fsubrl repnz icebp fnstenv mov stc rol jb insl clc hlt sbb xor xchg movsb fild sub std jl ds and and inc push jge mov mov (bad) cmc mov aad inc pop pop dec ljmp ret sub pop cmp pop out aam push jl sub aad sahf pop pop je jo cmp mov jnp lret movlps push cmpsb les push cmp stc add (bad) stc hlt arpl sbb aaa sub mov sbb xchg mov push pop out jge fsub cmpsl out cmpsl outsb pop adc push add lock inc xchg ljmp (bad) xor lods adc xchg mov lret xor push pop pop push aas outsl push imul push jge add fidivrl mov dec daa pop pop outsl movsl push fldenv jmp in pushf iret sub dec std decl xchg rcll loop mov lret cwtl fwait dec cli sub ss adc push sub mov addr16 daa fdivrs cmp mov mov pop xor cmp es paddq aam xchg scas ds aas dec or adc subl xchg cmp jmp popa lcall in push sub int3 fbstp adc mov mov int pop iret jle js shr mov add adc jle outsb lahf xor sub fidivrl daa jecxz mov loop xchg jns jb pop add mov cmpsl pushf mov sahf fist or sti mov adc pop cmpsb pushf cmp sub out dec ret push scas (bad) popa shll std add (bad) cld int sbb mov pop inc (bad) sub outsl dec sbb sub adc mov adcl popf dec (bad) pop mov sbb iret pop pop xor stos mov push jp movswl in fcomi sbb out lret out sub jae outsl adc xchg pop push iret in and rcll add and mov add and in (bad) sub out push shr mov (bad) lods xchg add push fdivs jnp imul mov adc sbb setne mov loop arpl lock cmpsb dec sbbl jge mov push mov pop dec mov mov inc mov imull pop ljmp (bad) lods fs pop cmp cld insb leave (bad) mov fsubrs sub std xor and jp popa jg cwtl xor pop mov lcall movb popf das xlat and arpl es mov aad (bad) hlt jp fsubrl fs or push push sub mov into pop xchg mov push sub call jne,pt add iret push pushl push or or push test adc inc sti jmp fidivr cmp faddp mov lret xrelease dec aam stos sbb js jb jecxz cli xchg cs sti xchg insb jp inc xchg inc lds mov negl ja jle (bad) pop or inc mov int lcall xor mov in mov jle mov add out sub push rcrl add lds repnz in push lds sub adc lods gs push out (bad) cmp fisttpll cli aam mov dec pop adcl mov cmp addr16 mov inc scas out mov or sub cmc push jnp pop int xchg and ja in in adc lret clc add outsb inc mov jae std or jbe fsts cmc jmp and testb xor icebp cli call xchg cwtl fwait dec inc mov aaa push lods xchg mov jg jle or pop jno popa movsb sarb ljmp nop scas rorb call jnp inc dec arpl in dec add and xchg xor into pop and mov and fnsetpm(287 repnz dec fiadd movsl inc stc call mov push out mov out ja cmp inc jno add sbb repnz adc inc mov ja xchg jmp orl out push jmp mov add dec stos jg push cmp jmp mov cmpb jg loope imul decb ljmp sub inc mov pop test es pop fistpll js es cld in out gs (bad) popa inc aaa xchg stos pushf cmpsb fwait pop in daa jne fistl and mov inc outsl test xlat and inc push mov lcall mov lahf iret jb cmpsb (bad) xor ljmp and and mov mov push std test xor nop mov adc jp imul loop jmp int lds (bad) jae push mov popf jge push jle add daa xchg (bad) imul out outsb cmp fcomps cmp clc xor and cli push ja xorl rcrb scas jmp in sar and clc dec shll mov fbld je inc pop imul add add mov pushf push mov pop lea out out rorl cld call jle jl ss sahf jmp fucomp aad pushl jae in xchg decb adc fmuls fisubrl sub push das int3 pushf sahf pop jno (bad) leave pushf repz jno xchg repz fwait add (bad) (bad) (bad) cli xor popa addr16 dec inc push jecxz js push push sarb inc (bad) (bad) icebp rolb xchg mov adc ss push dec lret rorl mov jp add (bad) in mov mov jecxz xor adc mov (bad) mov dec imulb shrb mov sbb jge inc cmp jno xchg jl int3 sbb ss fidivl (bad) push pop dec and inc mov sti pop cmpsb iret dec test add adc rcrb mov das add inc jle,pt mov dec sbb pop sbb popf sar xor aam call pop pop or cli and sti iret out xor and ret mov in popl into (bad) mov frstor ret mov cmpl (bad) fcmovne cmp sahf frstpm(287 rcl sub mov jo lahf jmp fsubs jns push pop arpl outsl adc movsl cmp adc mov clc pop mov jmp mov mov mov scas mov je xor push lds clc in cmc mov arpl jmp mov xchg lods mov les iret and pop lret push shlb add mov repz cwtl add (bad) leave fldcw dec in xchg cmc int ljmp gs aam or push add mov (bad) mov imul mov fs fisubr xchg ffree lret xchg sbb cmpsl insb pcmpgtw pop icebp cmp xchg cmpsl xor dec loop scas stos mov (bad) push jmp mov sub xor lret je sbb and lret jmp cmpsb or lea sub cmpsb inc or cmp rol xor popa cmp pop (bad) decl inc mov sub xchg stos nop leave ret bound cmc jmp pusha mov faddp call sbb xlat push mov rclb insl stos mov loopne lock shll dec xor xchg pushl xor (bad) repnz fwait mov imull pop push xchg out pop bswap nop fstpt jge ljmp pop xor pop mov in pop pop imul push adc lret mov cmp scas test push cmpl jbe inc sub iret and stc push imul push or dec fisttpl sub and (bad) int sub sub cmpsb stc push xor jne fisttpll xchg pop loop ljmp scas lea fisubrl xchg je fadds out (bad) scas (bad) mov xchg push into xor mov pop mov stos in fstl adc dec (bad) jl out ret dec adc pop cmc lahf into ret pushf mov add cmp mov cli mov adc push orl aad jp cmp cmp in stc inc fimul imul xlat add hlt rcll fwait es lods push sti rcrl ret (bad) notb mov lds (bad) xor movsl insl push rcrl ja inc and xchg gs push push shlb mov pop jnp rorb pop adc cmp xchg fldenv js fsubrs sub and push iret add push stos mov mov dec jg rcll inc sti and adc mov loop dec mov std arpl xor pop (bad) push int3 ljmp out and xlat ss ret sbb dec jne or ja cmpsb or stc pop and ret repnz cmpsl test mov xor cmp fwait inc iret push repnz jg cmp insl mov fistpll jns add sub inc cli xlat (bad) xchg addl cmp subl jecxz inc sbb inc movsl or cld xchg xor das mov sbb andb pop lock jae adc xchg push aad mov std push pop dec pop mov fwait cmpsl cmp inc loop pop mov xchg jle (bad) (bad) ret jne xor pop stos lods pop cmp fnstenv jmp mov insb cld out mov in std push outsb test adc clc mov std inc insb stc mov in iret cmp mov add addr16 and insl loope mov fcompl insl outsl test mov push mov add mov pushf nop cmp lods inc mov cmp push movsl mov das sub rorb je pusha in jae pop ja lcall xchg sbb xchg jb sbb inc (bad) lea adc or in je push sbb mov aaa loop ret dec inc mov arpl jns int3 scas cmc pushf mov inc subl mov pop (bad) cmp dec mov clc lods xchg or adc xchg inc adc add fninit cmpsl xor stos (bad) ja std xor lods sub frstor jg daa pop mov scas stos loope das dec and dec pop cmp cmp lret pop jb fs das mov cmpsb into icebp arpl xchg repz outsb ljmp adc pop divb rorb mov pop arpl mov jl movsb push sti (bad) and cmp repz jl pop xchg xchg shll fs mov push cmp mov cmp mov popa mov retw icebp push fldcw mov in les mov mov push dec cld or jbe dec ret subl iret mov lahf mov in push sub xchg adc (bad) jp stos hlt pop (bad) repnz mov add push mov fadds aam ja cmp mov lock push rcrb jp xchg cs xchg lcall dec imul fcoms mov mov loope jno (bad) xlat xor (bad) add inc inc cmpsl das xchg cld inc and adc mov sbb movsl inc add jb mov push sbb test aas jge mov adc dec lahf xchg push cmp (bad) sarl sub push stos jp and outsb jecxz cld maskmovq divl out shll idivl test and or mov xor lret out mov aaa loopne mov out xor (bad) hlt int3 push pop mov sbb fnstenv mov sub jbe hlt xor insb sbb add xchg mov test outsb pop mov mov cmp lahf bound cli add test and movsl jmp push mov jge xor xchg into mov cltd push cmp (bad) pop xor adc (bad) leave enter push pop inc ss (bad) cwtl push xor jge sub pop inc mov push movzwl cmp fbstp sub pop adc inc push dec mov mov pop dec adc pop sbb cmp add test leave mov movsl incb insl sbb adc in lock shrl adc dec fcomp sub test ja (bad) mov ret cmp adc pop pop sbb dec sbb mov cmpl cmp mov loope or pop sbb (bad) jno push and xchg jo dec xchg inc pop iret add mov cmpsb sub mov adc loop enter jo or flds es jnp pop pushf (bad) jle mov inc nop lea scas scas push ret aam rcrl iret pushf fs mov sub gs or popa int3 jne mov nop hlt push mov rcl pop (bad) pop xchg xor lret pop shrl jp push decl jns test push adc push pop dec mov cmp inc xor dec rcrb mov mov jnp xchg and fbstp test inc dec add pop mov push rcll nop pop sbb shlb icebp movsl outsb mov movsb cwtl jp xchg and push cmp scas pop in push sahf xchg dec fwait inc mov sbb jns inc sbb mov xchg sbb shrb int3 stc sub fwait cmpsb and cmp sub adc les inc pop cmp cmc mov xchg sti aad aam jg jg lcall xor pop mov test sahf dec outsb call ja xchg xchg lds jg into add sbb jne pop sub (bad) add cmpsb dec std lods rorl push ss jnp les fwait stos mov sub adcb das and add or jno jecxz insl xor xchg lock mov xchg sbb mov adc sbb add mov not rcrb mov cmp movsb sub jb jbe repnz loop,pn cmp inc sarb jns pop pushf sahf mov inc into inc aad shrb xor scas leave push add (bad) mov pop jle xchg cwtl xor sub enter xchg dec cmp pop push jmp outsb mov xchg lock ds ret jno sbb iret xor ret xor lea (bad) cwtl popl sbb in sbbb add jae dec xor notl hlt (bad) int3 and add or cld (bad) or das es pop or mov aad call cmp add mov and in (bad) dec imul cwtl fstpt ss pushf (bad) xlat aaa and fwait icebp jne and and (bad) lea mov xor stos fdivrs stc outsb mov pop inc xchg push mov loope pop fidivl fidivl pop std ret push (bad) bound gs mov js cmp xor sahf notb adc aas or mov mov imul sti mov cmp stos xor pop add mov daa dec (bad) inc mov lret loop (bad) insb xchg ss and loope mov das or sub pop jge loop jmp xlat data16 mov iret mov dec (bad) aas sub mov aas push push pop mov xor int das jnp clc das mov sbb in ss loope push sbb js in or inc xor cmp outsl mov std in insb nop xchg mov or or sub mov fs aaa cmp mov in xor jecxz push lock sbb mov xlat jb and cmova out enter inc scas test (bad) push shr test aad mov add jnp adcl ljmp jle pushf xchg jae inc jp leave js out ret cli mov xchg cmp jns push push sarl test aam and push jb and xchg xor nop sub mov sarb mov sbb push or out bnd xor push inc cmp insl jnp and les (bad) and ret loopne faddl das mov adc stc xor push hlt add dec fsubl shld or clc push sahf sbb daa mov ret lret bound int3 hlt add sbbl xchg cmc out mov sbb lret call xor hlt jmp ret aaa (bad) sub dec and cs fwait xor (bad) xchg sbb out leave ljmp aaa jns push xchg lahf ret mov push out mov mov mov pop mov xor push dec int3 inc lods lret ror xchg xor nop mov push pop adcl adc outsb add xchg cmp fistl mov dec scas push movsb mov (bad) jmp dec (bad) mov pop bound daa repnz mov pop sub mov jns xchg dec nop aam pushf pop lea aam jge sub shl (bad) or cmp lret stos sbb or gs int enter sbb loop hlt sbb mov aam xlat push jae push fst inc jmp pop dec pop scas in and cld das cmp mov mov xor mov sbb mov mov dec mov lcall cmp dec jecxz dec push setge lods les call gs cmpsl jp ja lods dec je inc mov xchg imul movsb sbb test sub mov add lds stos outsb enter add pop ss sahf dec hlt adc inc mov (bad) cmp dec cli std sbb xchg mov mov add stos hlt and add xchg mov mov lea xor stos adcb adc daa orl shlb addr16 outsl adc rcrl clc add in test lcall push mov add inc mov sub inc lahf (bad) ja adc or cmp push pop pusha sub or mov out adc dec int or pop mov push test adc cmp fistp mov pop scas test pop mov enter pop mov mov mov sbb ficomp cld sbb xchg cwtl inc push rcrl pop (bad) xor ret (bad) cs aas add mov add cmp sub lea test sub arpl aas fs or (bad) mov je int lcall lcall lahf lods and loop cmp mov and xchg jge ret std jge cmp or and dec jge int adc cmp mov jb xchg push (bad) lock mov pop enter js sbb sbb xchg jno les inc in and inc (bad) mov dec xor and dec ret adc push jle fimul push pop aad (bad) std int cli xchg or js fs cmp lcall dec pop (bad) (bad) mov pop (bad) mov daa outsb stos push pop and jo jno dec jae xor aad dec in adc dec std ret iret fisub popf sbb ja sub (bad) insb dec jnp adc js or push (bad) jo push cli pop (bad) cli gs (bad) jbe sbb adc sbbb adc pop pushf mov (bad) jb ja dec lret ret mov mov ret jle fstps add xor inc push or rcrl adc movsb xchg ds cmp int arpl imul sbb mov jae bound jno push out pop mov jnp xlat test addb scas push pop neg mov pop insb add sbb (bad) adc xchg dec fisub jg aad fcompl pop pop sub ja mov mov fistpll mov sub mov daa sub pop cmp mov cmpsb push fdivr push adc push or pop sub lcall mov push mov mov lods (bad) rolb xchg cmp add (bad) mov icebp push mov mov mov jns xchg dec mov dec les push dec mov inc xor loopne pop adc leave pop nop clc sbb mov fsts cmp les mov icebp cmp loopne adc pop mov leave mov pusha jle repnz push stc (bad) hlt insl (bad) and (bad) das push frstor stos test mov sub dec pop sub fs mov scas mov xlat push cmp sub in cmp repz lret sub in mov (bad) pusha repz fdivs mov scas adc xchg or ret xchg jo mov aas outsl notb sti cwtl mov gs mov (bad) mov inc data16 (bad) movsb cwtl push enter dec mov stc sbb inc mov aad adc dec mov push or xchg mov outsl xchg test repz int adc das add sbb test call mov mov test hlt or and ds (bad) scas (bad) sub imul sbb jne (bad) adc lods stos cmpsb push cli lcall inc sub adc jnp cld in fadds subl mov insl cs mov repnz out js test ficomp les xchg insb daa in out xchg lcall sahf dec add push stos inc dec repz jl lods js dec loope aas lret jnp stc in sbb lock xchg sub add mov inc int3 ljmp cmp in cmp push xlat xchg lods leave pop mov sub inc lea out xchg dec stos lods add dec (bad) push idivl int inc mov jbe stos mov in dec add xchg sub xor dec dec xor sub repz mov and adc pop movsb ja inc push movl fild in inc add addl inc mov xor or imul popa and insb fidiv pushf popa out xchg mov jnp push les cmp mov sub pushf inc xor dec lods pop and cmp outsl or mov lcall fildl push or add jecxz xor and (bad) (bad) idivb inc dec (bad) mov (bad) stc inc add clc fnstcw lea or nop add dec leave push sub add xor (bad) mov mov mov inc pushf into mov fcmove cs cmp sub (bad) mov lock int cld mov dec insb out inc inc xlat ret fmull imul rorb lret and test mov mov pop enter je or sarl inc stc mov scas jmp int xchg inc cld inc lods mov outsl mov imul push xor lods daa arpl xor or fwait repnz cmpsb inc arpl sbb push jmp dec or fwait cmp js std adc lret test adc test dec ret push int out pop nop sub jo aaa inc js xchg scas mov aas aam pop (bad) sbb jnp cmp and mov jl pop inc dec mov push or jp xchg pushf adc dec movsb ret (bad) jns (bad) idivb sbbb fs bound test fstps stc add imul mov mov aad test jnp cmp ffreep lods aas and cltd out int mov je xchg add add push jo loop popa jl push repnz sbb or test push (bad) mov jmp loopne mov int3 xchg pop (bad) fcompl jmp js jg and cmp in std aad lock add data16 sbb pop xchg or movsb jae lods divb fbld scas inc icebp or loopne out popf gs mov lcall pop fcmovbe rorb mov mov int movsb jne lock sbbl (bad) rcl lret (bad) xchg outsb test jo inc and push pushf push popa xor std sub cltd in mov mov xchg push dec (bad) sbb (bad) sub (bad) mov push aaa loop mov and rep pop rol inc xchg ret add aas dec sbb lods mov fcmovne mov pop js fldl xlat daa push jns fmull in lretw dec les shrb adc (bad) (bad) inc inc pop js push mov fildll inc mov in cld cmpsb jle xchg insl cli aam int mov rol repnz bound stos cld idiv scas adc dec xor out fadds or add rorl jl inc es mov sbb sarl pop push cld dec daa dec mov ret outsl pop xchg insb data16 jmp or std mov outsl loop fsubs push xchg pushf push or jmp dec loopne dec repz sub repnz lret sub or cli sahf mov cmp sbb lods add jae pushf nop cld or stos mov lret cmpsl jg insb mov cltd arpl adc ret mov test mov ret xor inc and mov shrl gs and and leave push into or sbb jle movsb pop sbb ds dec xlat mov xor bound notb rcr pop xlat dec test outsb test mov dec sbbl aam les cli hlt xchg and bound pop sub fnstsw inc out out pushf add scas mov mov xor fcomps inc and out dec loopne adc adc lcall mov push dec cmpsl jae lods sysexit xchg inc xor rcll xor ljmp shrb cli adc add xor pop loopne mov sub pop cmp in mov jo in shll cmpsl in and addr16 or push cmpsl pop sahf pushf and xchg (bad) (bad) cmc mov adc adcl test test (bad) out mov inc xchg dec or adc sbb xchg inc dec xor adc aad xchg jmp jge stos sub adc xchg mov jl popa imul and mov scas dec or dec cltd dec xor jp pop (bad) aam pop adc lods cs jae cld jns jp jb icebp icebp xor push cmp pop and jno sbb and mov divb xchg inc xor fcompl xchg popf jbe mov dec jge dec cs xor iret call ret jle jl in cmp cwtl sub jl adc das les xor pop iret stc push das out iret popa xor movsl cmc loopne roll push sbb int lea mov lahf outsl mov xor rcll stc add jp (bad) xor (bad) fsts adc mov push addl (bad) hlt cmpsl test sub mov sub xor frstor es add sub scas inc jp in add or cmpsb lcall divb sub mov testl dec repz rep add lods push cmc mov fsubs xchg cmp mov mov fild cli sub in push int3 call les arpl xchg inc xor aad out inc insl fistl test jae scas aad dec mov loopne cmp cli jno sbb mov (bad) mov and sub sti jmp call js mov xor or aas xchg sub mov cld sub dec push adc push jecxz out jg xchg popa sub pop jmp mov fist popa clc stos (bad) fdivrl (bad) sti adc int3 mov sbb add or or push sahf mov adc fcompl mov outsb pop out mov shll mov out jmp mov leave xlat dec sub outsb push mov mov inc cmp imul scas outsb jo bound into gs add jp movsb jbe lahf mov xchg sbb repnz xchg jg iret push xchg daa or leave jle sub cltd jge ret je scas jbe xchg xor lods (bad) repnz add pop stos fstpt test aad repnz adc aam push outsl cld inc sahf in xchg inc imul mov mov iret mov dec leave rclb cld jae movsl push cmp std mov js pop adc popa repnz addr16 dec leave adc rolb out das mov xor test sub lock cld insl mov xchg popw out dec cmc rcrl cwtl add push (bad) popa mov pop xchg into add negl cmp or movsl (bad) jmp sbb fwait adc mov sbb sub mov es pop cmp sbb dec faddl je sub sbb negb stos lcall data16 pop cmp es test (bad) pop insl stos dec sbb lock scas fisttpl push mov out in inc or fsubrl mov enter push outsl and lret ja sub mov bound stc mov xchg adc call iret cmp mov (bad) shrl frstor movsb sbb add add iret cmp inc cmp icebp aam outsl inc sbb dec out push pusha and lock push adcl xchg jl leave dec jae (bad) mov into jne sbb in sbb ja iret ret cli shrl lcall adc addl mov adc repnz dec stos xor mov mov mov xlat inc jle shl jg ljmp push lret xor dec pusha xor pop scas sbb mov test shl pop or mov stos adc nop je scas push (bad) sub pop test sub clc lds mov dec mov in add ss and pop outsl xchg je jb push mov xchg enter sti dec adc push mov jb sbb imul je mov xchg dec jmp in jae push faddl xor (bad) in xchg popf and cmpsl dec sub iret shrb and pop negb xchg sub lds and jnp jno mov fs insb cmp mov (bad) pop jmp dec jns fidivl fmull (bad) call inc jne inc mov sub es data16 out sahf rolb shl (bad) mov add fidiv inc repnz pop out test mov das fimull dec or test xlat (bad) inc test fsub dec adc outsb cmp dec add pop in push add lods imul jg movsbl in pop dec imul jae loope testl dec insb sti pop adc fs dec push sbbl cmp ficompl pop mov mov lahf loopne dec fiadd cmp dec out sahf nop ret dec bnd in sbb mov fs push loop (bad) jno mov pop mov (bad) leave ja ret xor es mov outsl jmp lret js jmp imul fisttp dec (bad) xchg sub les mov stos sub mov cmp push rorl dec insb ja jg or dec (bad) add jg aas enter xor dec or xchg sub es fmul sbb xor mov xor and push popf (bad) js daa mov xor imull mov mov ljmp ret mov mov popf dec test xchg xlat or (bad) cmp (bad) ret push out adc ss in xchg pop sbb dec (bad) out mov mov rol clc push inc push into test sub rol xor movsl sti push mov inc push inc and xor jb test sub dec sbb mov cltd cld int sub iret mov pop push adcb sbb sub jp pop sbb push mov lock out or add mov lret pop pop icebp or imul inc stos (bad) or iret lret mov subl pop mov adc loop dec inc pop and mov leave ds test imul cmp cs mov testb push mov mov inc in mov sub aaa les or divl shrl ja pusha xchg pop test xorl mov popf pop inc jns add sub jnp inc (bad) sub mov cmp inc push pop outsb test adc adc js mov mov push mov je ror push mov stc adc test xchg mov ljmp addr16 enter mov cmp inc or insl sub jns mov lock (bad) cmpsb mov xchg std lds fneni(8087 cli nop push sarl pop test mov mov dec lods dec fdivrs adc push ret pop jg mov in scas cmpsb pop sahf and das sub mov cltd add add jmp mov and sbb lret or sub je lcall mov jl sbb mov jle adc jg aas push (bad) int hlt das pop outsl dec aad dec add mov mov sub mov shrl repnz dec sbb lods sbb pop fs fs xor ficompl xor jnp movsl pushf fldpi data16 ja sub cmpb inc pop pop int3 scas jg ret outsl cmp inc sbb popa (bad) push inc xchg adc mov pop adc in addr16 idivl jbe lcall test fs je jecxz add sahf dec lea jle cwtl dec push mov movsl fmull pop arpl shll js roll lret aad and sahf imul cs subl jno loop dec daa add bound sbbb mov mov fistpl (bad) xchg testb mov stc add add xor mov icebp stos cmpsl rolb test and sbb insl hlt jecxz push pop movsl in sbb push mov pop leave adc xor das inc in push cmp cmp jno (bad) mov mov pop outsl loop mov sbb dec icebp out dec fidiv sbb das js dec fcomps adc test ret fcoms push sub aas mov ret mov pop fnop mov jb dec push dec movsl imul sbb sub sbb push jbe sbb ret into inc mov ja jecxz (bad) aas adc test enter or sbb sub jp clc jo or mov insb fcomps lahf nop rclb scas or and (bad) (bad) cwtl pop add mov scas mov fs push mov push loop movsb frstor movsl or and jno cld mov cltd (bad) xor add dec mov rorl add js or xor (bad) ljmp test dec fst jo scas sbb (bad) lock jne data16 mov lods imul jecxz xchg scas data16 jo xor lcall pop xor call dec (bad) sti inc insl insl pop mov cmc push push fs out inc xlat rcrl aaa stc mov xchg outsb repz push xor pusha (bad) and mov or adc out pop dec arpl pop mulb fmull loop mov pop sbb push fiadd ficomp fisubr cmp adc fdivs jb call xchg std cs stos mov in sar push xchg adc add into inc imul xchg test and xchg aaa pop pusha aaa pop and push mov pop cld fwait and mov ljmp dec and sbb sti dec stc cli and das push cmp in bound (bad) push lods jle jb cwtl sbb fs gs notl gs (bad) or and imul add aaa or dec icebp jge cmp or cmp imul imul xchg cld stos and test test jmp lahf sub dec sbb adc xchg dec pop arpl cs xor cmc sti cwtl fstpt dec pop sbb insb mov pop rcr rcll adc mov sub mov xor jnp pop adc jp push add lods cli pop movsl inc cmp mov sbb aad push (bad) add icebp or in jg les xlat lcall jns mov inc call jne lahf addr16 mov inc and es aad jmp and shrd icebp xchg inc repnz push test movsb adc mov pop jne repz ret jno mov and cmpsb pop divb in out pop sbb xchg lret hlt adc or into sub adc cmpsl (bad) sbb xchg (bad) in mov (bad) pop sar lods mov or xlat mov out test push aam test out cs sbb insl xchg (bad) mov jb cmp imull and mov out int jnp pop dec xchg cmpsl in add (bad) iret andl push out dec push popf lcall push mulb dec ss pop pop dec pop xchg not push out and xchg mov mov sarl add out fimul cld inc loopew repnz jg add test addl inc daa jne call cltd inc mov push or stos lahf loop (bad) mov push subl jl (bad) mov incb xchg adc push fs femms push out movsb push icebp xor mov fbld pop out icebp add sbb or icebp sti xchg jecxz stos movsl fmul int3 movsl es adc scas xor adc movsb arpl push nop rolb aaa loopne (bad) jecxz scas fistpll in xchg lods mov mov dec es xor or xchg stc add pop outsb lcall add ja movsb (bad) mov pop pop into imul out push jge push stc addr16 outsl (bad) (bad) iret mov jno xlat pop mov inc adc mov or outsb xchg push and push pop push dec push dec fldt loop pop test (bad) ja dec into push xchg jecxz mov xor mov and add jle dec pop adc sub ds iret inc mov add add push pop sahf xchg (bad) jl xchg add lods adc xor in and and movsl push sbb jg es jno and mov pop xor cmpsb add inc jle cs sar jge movsl stos pop dec or jmp lods daa mov mov jbe inc out mov mov push push push xchg js mov xchg xchg test push (bad) arpl adc or mov lea pmuludq jae fwait adc add movsl (bad) xor pushf push inc xchg lret flds mov push jl mov stc push out sbb clc addr16 cltd and dec test ret adc xor pop shll mov test mov adc cs mov out mov or out repz push scas push inc push or nop inc out mov clc mov imulb cwtl lahf cli mov aaa jne sahf js adc int ret dec dec aad sub (bad) std gs stos xor scas fucomp push dec insb mov mov sbb stc inc out faddl stos xor outsb aad mov rolb jmp sbb dec inc enter aaa xor pop add arpl movsb push rcll mov mov in pop es mov dec loopne loope (bad) insl mov in fcomip roll xor bound mov jmp cld or or (bad) outsl test fisubrl int sbbl out push test frstpm(287 rclb sbb jmp clc or push (bad) pop or test js popf fdivrl (bad) push fistl out mov add lcall arpl mov pop je stc pop add adc (bad) fimull pop xor mov xor jmp test mov cli repnz pop es int movsl out mov int3 add and pusha mov aas jne addr16 out add pop divb push cmp xchg aas aam and dec xchg jns mov es cmp jmp mov aas mov xchg fstpt in loope or andl jmp mov push subl clc lcall les mov rorl nop cmp rcll jmp xor nop (bad) adc dec es cmp pop push xchg xor push mov fisubr dec fnstsw sub sbb xor xchg xabort mov cmp mov cltd mov cmp out push dec (bad) dec adc ficom cmpsb rclb add int ret jne xchg shrl xchg stos fcoml mov or fisubl and sbb adc loope into sbb mov (bad) out (bad) jmp inc xorb jmp pop scas xor ss jno pop xchg xchg inc cs sbb scas cmp cmp ds add pusha dec jnp fwait (bad) mov imul dec es cmpsl mov cmp mov fsubl popf cmp xor inc pop out and dec dec iret pop aad sbb mov into gs mov inc cmpsb or mov push mov das xchg dec lock rol sub xor mov popf insl (bad) sbb and and add test das mov push ljmp loopne fsubrs jge ret mov sbb int3 xchg dec incl (bad) mov xor cmp mov pop lock xchg push hlt scas pop (bad) cpuid and xor sti adcl push fdivr ret test out cmpsb call or pop insl lea cltd xchg pushf inc (bad) mov insb mov enter insb mov and or jo push xor fisttp pushf gs and fs xchg in and adc test call mull fcmovnb dec push pop cltd int3 cld xchg adc sbb mov xchg fwait aas lahf gs mov and sub cwtl add sub rclb dec pushf xchg inc xor pop push hlt ret xor sub push jns xor jmp sarb mov xor push fisubl daa or mov bound test cmpb mov fyl2xp1 push cs popf das fwait pop lock es scas int mov mov sbb int3 jnp rolb sbb adc sub sbb xor mov int adc (bad) ja in (bad) out lret aam and nop sub scas cmpsl mov int and adc dec xchg nop dec mov xchg xchg sub movsb mov test fist inc imulb ljmp push mov repz imul jnp popa hlt stos in push rol push push (bad) pusha (bad) out cmp mov pop pop (bad) push cmpsl mov dec dec jmp cltd push in xchg ds addr16 cmp popf jge cmpxchg sub loop mov movsl sti xor mov out (bad) jae out pushf stos (bad) scas cs jo addr16 mov loop inc mov pop adc push add clc mov mov push loopne loopne sub mov inc xor leave lods mov rorb pushl inc pop aad (bad) (bad) mov cmp gs pop movsl lods mov fistl cli sti pop test and and xchg pushf xchg pop hlt xor jo in (bad) cmp test out call cli mov push ret (bad) out stc pop cmp push (bad) daa mov inc mov push pop mov cs jp push or in scas aad mov int3 or ret xor fsubrl sub js mov arpl xchg test outsl jae inc cmp hlt adc fisttpll imul mov or fucomip inc xchg push je aad loop frstor pusha mov into inc cmpsb inc pop outsb mov rorb fsubrs dec popf cs cwtl adc test insb inc mov les mov jmp mov in test push adc push stos notl lods jp sbb pop mov fcmovnb sbb pop pusha dec pusha xchg pop das sbb sahf inc aaa bound inc xchg adc mov push movsb (bad) out or std mov and jle inc imulb mov and inc scas ret push xor aaa jp in repz mov push push lret jmp jmp and mov mov mov test sub (bad) fmuls fisttp push dec jmp lcall jecxz mov icebp push shlb out cwtl xor and mov (bad) dec jae xor sub test jl cmp push lret jg inc lea jp dec into and xchg pop mov pushf (bad) mov loope adc jmp push iret pop xor std sub mov out call roll push mov inc popf test and jmp mov or mov shlb subl test lods jecxz pushf mov arpl push imul xorb xchg in push pushf dec adc cmc stos stc or mov in xchg adc outsl jno add cmpsl (bad) mov shlb pusha negl adc ja sbb push xchg cmp mov inc cld xor jno or pop xchg fsubrl ret loop fcoms leave sub or xlat insb bound xchg in dec loop mov les xor out addl shlb jns scas inc mov push (bad) and sub pop push inc mov icebp sbbl or fst es sub sbb sbb (bad) or add and xor xchg inc fistpll xorl lock pushaw inc mov adc ds mov (bad) xchg ret cmp xor jmp outsl pop in jecxz dec and or jno mov pop outsl xchg leave cmpsl imulb xchg fistpll xor push or (bad) les popl stos inc ret jg xor fdivr dec or push (bad) jmp pop pop js mov loopne jecxz ss (bad) xchg fisub test or rorb sub loopne rol pop out cmc jmp sub je mov xor adc data16 and push and inc xchg shrb insb dec insl xchg imul sbb rcrl inc pop pop xchg adc (bad) call inc sub xchg not push sbb mov stc les push pop (bad) out fs lahf js sbb jns jle pop inc insb aaa ret leave fdivs pop cmpsb out pop stos xchg cltd lahf bound lds data16 push push loope mov cmp sar sub in (bad) jmp push stos imul inc ljmp and dec (bad) mov (bad) cmp cmp pop icebp dec sub pop test outsb add sbbb sub les xor outsb push testb or cmc hlt test hlt roll jl in fs xlat stc out pop loope add xchg lock jl in sub ljmp push loopne cwtl mov add (bad) mov pop xor in imull mov mov pop push imul jbe in daa in push ljmp test dec inc incb faddp jae or inc dec ret mov ja mov mov fiaddl inc divl inc popf push mov jns test rorl cmpsl aaa popa testl pop xor xor mov test cmp clc sbb out adc and xchg ja xchg inc rclb leave sahf xchg mov cli int sbb inc inc int adc mov sub xlat inc popf sbb pop in mov not ss xorl ret adc (bad) jns dec rcrb addl sbb sub gs in cld (bad) xchg iret ret cmc or inc lea and enter mov adc (bad) cmp cmp lahf pop neg mov mov ret fildll loopne adc push mov inc movsl out arpl (bad) je sahf and lret jnp add xchg dec add aas inc cs and fidivr addr16 int3 loop mov or outsb mov push push loope icebp jmp jo js movsl cmp out and (bad) mov inc cmc xchg inc mov cmp jbe int3 dec jecxz out std adc xor testb adc int3 dec xor fimull add mov lret test cwtl data16 mov cmp shl pop push mov lods jne aaa repz sahf fldl mov sub shrb mov push (bad) outsb mov insl mov mov test jmp frstor jle popf jno xor fistl adc add (bad) out fwait std mov push jmp sar mov inc (bad) imul push push insl cmpsl pusha mov aas data16 mov sbb lret iret add in loop jne call ljmp and inc roll in mov sub mov (bad) loop mov or or xchg sbb aam stos stos jp arpl lea test inc sub pop sub aaa shlb xor xor fwait loope mov push inc pushf lock xchg jae ret ret add imull push cltd mov call push out inc cwtl xor sub ret jle xor xlat lret enter pop mov les jbe mov lret fwait lods fldcw lcall mov lods xor mov push jb xor push cwtl xor rcl xchg test (bad) (bad) data16 in mov es gs pop push aam inc sarl dec stc iret jno (bad) xor shlb cmpsb mull sti fist dec mov push mov dec inc jns cmp xchg scas lahf sti int3 xchg jp dec push cmp aaa lods or mov jne cmp pop ss testl adc add add fcompl aam adc mov pop les cmp cmp jne sub push xor inc xor outsl cmp out xlat (bad) bound fist add aam adc shr adc mov pop test push xchg dec push sub jmp dec jnp push shrl xchg roll lods rol out pop jno in add mov bound (bad) std xor mov rcrb js inc pop dec jae xchg xchg popf xorl loop jo shr pop fldcw mov ret movsb lret (bad) xchg sub mov mov xchg das cld inc sbb fs inc or rcll fldt push pushf (bad) lock push aas push (bad) cmp mov fstps call mov (bad) jne out jg dec mov cs call repz xor adc lods ljmp lcall jno in or in jo or push sbb cld pop (bad) dec rcl cmpsl cwtl mov jne or adcl fldt cld jns (bad) sub xchg aad jne jae mov lcall mov cmp (bad) (bad) cld sbb xlat jnp jne dec icebp in fscale fdivrp hlt mov pop dec or jne xchg pop stos leave adc ss fdivp cmp lods push jmp imul stos pop incl pop stc icebp mov (bad) mov data16 cmpb jbe inc add inc (bad) adc insb imul nop sub mov add xor pop cmc push inc out ret lret (bad) push add sti ss or sbb nop sbb push in lret clc and jbe jmp test sbb push pop mov and addr16 les jge add cmpsl rcrb fmul shrl xchg or sbbl popa dec ror test cmc stc sbb fstpl (bad) iret lea mov arpl mov xor lea jmp enter mov dec push fisubl sub das xchg test jne lahf in sahf xchg add and inc movsl out jno jnp lahf nop cli mov popf cmp shr fwait push mov addr16 aaa jno jecxz pop faddp xchg push andl (bad) mov xchg in inc mov xor movsb or lcall cmpsb aas sbb sbb inc pop fdivrl dec adc inc xchg xchg push in mov inc leave and push in and ljmp mov test pop ret popw dec lods cmpsl jge sub and aas mul dec push mov inc mov cli (bad) push mov fisttp mov je push jns icebp into fisubl and or adc cmpsl add out lock push nop add aad mov cmp mov lret sub or xor mov aad lods out js (bad) dec sbb cwtl fadd inc in pop (bad) mov push les std mov pop push fldcw sbb bnd fs cmp popa xor lods rcll jmp or cmpsb add lret pop (bad) jnp (bad) (bad) pop jge jge push repnz bound idivb fnsetpm(287 mov pop rcrl ljmp outsb in mov leave out imul or adc cmp stc fs inc jb cmpsb xchg adc (bad) leave jmp (bad) sbb test sbb push push aad in sub leave pop cmpsb cltd ss rorl mov mov icebp cld mov js mov jo mov sarl and stos insl add faddl mov push iret imul xor push ljmp dec ja cld fs cld gs inc pop mov insl imul mov mov jl push add hlt in jne repnz push mov mov sub jge (bad) sbb out jmp xchg mov cmp aaa dec mov cmp pop xchg cmpps sti sbb adc les enter inc imul idivb sbb fstpl pop inc xchg cmp push pop inc inc fnstsw bound inc sbb test in call push (bad) je lcall mov cmp pop xor jecxz mov insl sub xor sti ljmp lock jmp mov ret movsb push xchg xor gs mull loopne mov mov inc (bad) out fimul (bad) cmp add lock add int3 sbb sbb dec cmpsb xor in adc pop sub jl push stc mov fist add xor xor jnp push or fwait mov pop mov cmc bnd and jo vmovd pop aad fdivr adc cs and jg pop fiadd out sub es xor xor scas in push adc test xchg pusha test sub inc in mov hlt in inc xchg iret push xchg fistl aas into insb test outsl lods jnp icebp xchg push or or ja pop or jno and sub js pop mov imul or adc push adc add (bad) dec pop push mov stos mov adc fwait inc pop test mov aam cmpsl cmc stos mov fistpll imul push shrb movsl pushf mov lahf push addr16 pop mov (bad) mov xor xchg add decb jnp sub leave cmp or push xor inc mov loopne rdpmc dec pop repnz cltd xchg or mov lods mov xchg movsl dec dec mov pop or fwait xor cli lock sub in sub lcall push out jb sub into pop mov insb in mov lods mov (bad) push or movsb cmc cmpsb pop sarb pop adc push fistpl mov dec mov ja movsl (bad) jge pop xchg push mov sub outsb imul lret dec mov out das and mov bound pushf jae test ret xchg add mov jge mov (bad) pop psraw loope std repnz faddl xchg mov push adc mov lea and inc je mov fsubl (bad) sub pushf dec lea or popa mov int loop imul mov xchg lea pop mov stos add cwtl inc inc es cltd clc (bad) adc ja leave ror inc enter jl (bad) daa mov outsb jp inc ss cmp pusha nop hlt ret loop cmp xor cmp rolb jle nop cmpsb lea ds inc mov lock xchg pop ret daa cmp mov xchg jl adc repnz xchg mov push cmpsl int3 jg push adcl or xchg cmpsb shll fwait xchg cltd pop push stos vpminsd faddl (bad) pop mov imul xor pop movsb dec loopne loop push mov outsb les repnz dec adcb (bad) mov push or js mov paddsw into mov mov lods xor xchg test or aam push add dec inc js imul cmc inc loopne (bad) sbb daa inc into push jge pop in popa adc jno scas mov rcrl jle movsb cmp (bad) lcall aas daa xor add enter mov sbb (bad) rcrb testl dec cmc pop push fcom pop gs dec mov push clc dec and cli push je jnp cmp dec jge mov aam dec and mov repz mov ss cld pushf xor and inc push xor (bad) dec cs sub jnp std push mov jmp mov pop movsl jmp dec (bad) aam mov into lret icebp in push aaa aam imul mov mov inc incb into xchg aas xor cld fbstp adc sbbl pop adc js inc (bad) cmpsb or mov jge cmpsb push push (bad) mov out lods cmpsb mov push icebp xor jl fnop mov enter and dec mov cmp out pushf mov xchg test mov adc pusha notl repz sub out pop (bad) mov pop out ja mov icebp lret add jmp aam cs or fsubrs out (bad) dec (bad) aad jl aas repnz jnp in sub push mov and fwait push aaa inc pop or lret jne or dec test imul out movsl popa sub mov sahf pop xor out push mov sub and (bad) scas js int cltd in in mov ss into in mov sub xchg lea rclb rcll bound sarb and sbb push dec push or mov and arpl sub inc cmc andl inc inc or popa pop out xchg cmp xchg xchg (bad) jns cmp lret (bad) leave (bad) iret int3 es (bad) push sub scas cmpsl test jno mov ss xchg iret xor pop test mov cmpsb scas fnstenv lahf adc lods (bad) popf insb outsb stos leave (bad) int3 jno imul imul sub int3 sub and scas xor fsubp xchg inc and movsb adc in cs xchg pop lret mov jle mov pop ja pop mov mov dec ljmp (bad) mov sub push incl adc push and sarl inc xor xor inc insb jg push pop push sub adc addr16 mov and (bad) jmp mov sarl jg add cmp xchg cmp jne push int mov arpl loopne mov or mov rcrl xchg (bad) mov mov mov add (bad) pop inc loopne push lea xchg ret jns jbe sarl aad shll popa inc pop loopne xor xchg cmpsb imul dec adc xchg dec jae scas flds jle xchg (bad) push mov aad repnz inc push (bad) mov fucomip imul icebp aaa repz pop xchg xor jno sahf mov inc shll mov bound adc pop lods pop fisttpl or push ret xchg xor dec adc jno mov dec fnstcw je lahf leave mov stc inc loope lods cwtl in mov or or pop movl mov clc fsubl cmpsl mov (bad) in fwait jno jg fsubs adc fdivrs leave jg hlt sub xor rclb dec and int or xor add out fs ret jecxz sub aam xchg adc jp xchg cmc ss imul fld push jle lds mov mov mov mov inc insb dec mov imul (bad) jmp xor int scas push and imul adc cmp int3 and pop mov mov mov enter mov idivl sub pop rol inc sbb xor popa loop lret sbb scas sbb scas pop mov sti pop stos mov sbb test (bad) scas ds scas xor stc push fsubl into sub sub sub out dec icebp int3 icebp add sbb cmpsl daa sbb inc insl sub add xor arpl aad fld xchg adc (bad) stos xor xlat int3 adc movsb push xchg (bad) cmp cmp cmpsl mulw jb xchg push xchg cmp push mov jl dec mov cmp jbe dec mov rorl mov pop or and sbb sti addr16 sub test mov clc adc mov inc insb mov mov xor inc (bad) inc jne test jg pop bound or loope inc nop dec test rorb fidivl inc pushf push mov sub test jecxz mov pusha mov inc jmp cmp (bad) fcoms adc mov xchg cmp push aam movsb orl xchg xchg ss add cmp mov pusha jno cmp and or loopne inc sbb inc cld ret into jl (bad) pushf icebp arpl jne xchg ret push sbb scas cltd je and (bad) outsl mov outsb xchg xchg inc jle inc movsb scas mov cmp jg cmp xchg popf jg movsb in ret movsl add (bad) adc cmp rol cmp push mov add fiaddl mov lods add cmpsl mov and xchg outsl push mov loope pop and clc aas movsb add and sub outsb les mov stos clc jmp outsb cmpsb xlat xor or adc lods sub mov out bnd lret call scas out inc repnz fcmovu inc cmpsb xlat out mov xlat jge and push inc sub and push daa xchg sub test ja push lods data16 arpl sub dec push popl inc cli inc pop cld test jg jo and jecxz pop inc lcall and daa inc jl int3 mov outsl mov hlt sub add fnstcw rorb sub add jecxz push push lods (bad) (bad) ror sub lods (bad) xchg in das jmp push jno dec daa xchg xor mov in sahf jbe aas stos inc movsb ss lods sub hlt sub sub add push test dec repnz adc out icebp inc and lods add mov mov and arpl pop (bad) xchg mov loopne sub fistpl jne out out cs push mov fild inc xchg xchg xchg jl or lahf jns sbb jle lock cmpsb icebp lods out push rcrl (bad) jbe or and xor push scas fisttpll mov or push scas bound dec push mov js in sub add pop and test nop data16 mov data16 mov pop orl mov xor es add xchg movsl loop inc pop push scas and mov or push daa lcall cmp repnz xchg iret mov mov repnz test stos sti in sti fwait push (bad) mov jmp sahf arpl dec adc repz mov mov xor sbb sti pop push mov push xchg nop or stos xor mov (bad) xchg sbb pop imul (bad) (bad) cmc fs push test lahf and fidiv lock call pop mov mov out mov (bad) adc ret jne adc push fstpl fdivrl push sarl pop out inc (bad) cs dec jmp adc push fimull adc aad inc mov push mov xchg je cmp sub inc mov sbb leave add dec call fwait mov cltd fs dec xchg outsl sbb xchg cld aaa push cwtl and cli ret jo sbb dec inc ret sub or inc xchg popf pop inc jnp out aad es and add lods out mov dec or or dec cli sub cli xchg gs ds das cmp test pop pop xor push sbb inc pop jl pop inc jb insb pop push jl dec ret jns add sbb or xor (bad) psadbw xor jecxz dec mov xchg rcl xor rcr cwtl jmp sbb adc mov imul jg jmp sbb mov mov mov and imul int3 adc mov repz mov cmpl loopne adc movsb adc mov xor add aas rcl xlat dec jmp shrb mov jmp xor push sbb lods mov pop notl icebp mov mov ret push insl (bad) dec mov jecxz idiv push jns jl fmul popa xchg rcrb leave imul cli in int xor inc xlat mov adc jnp or pusha and cmp lds jg sbb fcompl cmp inc dec cld test (bad) iret cmp adc (bad) insb push cmp push (bad) mov hlt icebp cmpl xor push pushf mov pop xor hlt and je jp and cmpsl and lret gs xchg xchg push in ja ret nop push test (bad) ficomp out inc pop hlt in adc cmp add xchg push sbb (bad) je xor xchg mov out cmp dec mov ss and fstl test mov xor add insl test jp lahf sbb cli jo lea mov and or cld fs fwait sbb div leave (bad) fstpl mov xchg push sbb lods inc mov mov sbb int3 add mov pusha ret cli mov mov mov (bad) mov cwtl xchg mov imul movsl fsubl clc js es cli sub or ret add push stc mov jb mov dec push sbb loopne loop cmp and enter std and subl inc xor xor sub nop and or leave (bad) repz fwait mov and adc inc gs mov xor mov mov stos icebp sarb adc aad ja xchg mov sahf jno lret cs scas sub xchg pop cltd jae test fwait hlt mov sti es lret xor data16 icebp pop out dec imul add pop rolb insb xchg pop stos lahf mov inc mov cwtl pop data16 xchg adc and inc mov add sbb xchg xchg lret and push scas mov shll add fcmovbe cmp (bad) xor mov add jbe lcall in sbb lcall pushf push adc xor (bad) test add (bad) jp mov mov xor fisubl les je repz mov sahf jns xchg cmp mov addl rcr or shlb iret cmp mov popf cli dec and dec mov mov mov test cmpsl mov cmpl je popa data16 xchg test mov jle adc daa push fwait rclb clc insb add dec or xor insl loope xchg adc jg xor ds (bad) mov enter faddl mov stos adc loopne xchg lahf stos in mov cld fdivl jo push mov loop push shrw mov inc jmp xchg cmp addr16 sbb mov (bad) mov jp bound repz leave aaa stos dec cltd adc lds outsb adc cmp xchg incb scas cwtl mov cltd sti aad xchg aaa aad cs loopne sarb and cmpsb xor jmp xor aam iret lock inc (bad) and xchg push shlb lea mov cmp or and call scas stos or lcall std mov ja cmp das pushf inc pop xchg xchg fs cli sub (bad) or dec notb sub out mov in mov adc jle push fsubrs xchg imul sbb mov ficomp imul pushf icebp in scas in adc cmp insl inc (bad) sti out repnz or dec nop in aaa jl add push jmp push and sbb test dec sub nop xchg and add ret (bad) aad mov movsl cmovge cmp lods fiadd insl outsb repz mov push inc pop cmc call fcmovnu mov (bad) xor or adc neg inc jns adc cmc lret jl lahf int sbb xor les xlat stc xor (bad) (bad) ss outsb mov xchg (bad) push fisub dec mov int sar lahf sub adc mov (bad) pushf dec dec imul jae addl jle (bad) call inc (bad) icebp sub xchg das mov sbbl xchg pop lcall in inc or and mov sub mov aam sahf dec mov (bad) ja cmp xchg test cmp (bad) jecxz pop pop aaa movl mov sub js lods sub movsb outsb sub mov sub in inc fbstp jne movsl (bad) xor lcall and or gs adc mov jg nop or inc mov add xchg or in nop movsb jg or dec sbb sub outsb inc and je mov pop push sub sub fiaddl add movl je test hlt pop dec movsl cmp pop jmp sbb in and cli mov inc push dec (bad) cmp test pop push sub add (bad) repnz (bad) clc push and mov dec insb mov sbb jle popa shr aaa mov mov aad std sahf pusha sti jle xchg add pusha adc fist xchg jnp jmp imull clc out push sbb and xor mov repnz (bad) fsubs dec movsl (bad) (bad) std lahf aaa mov cmp add add mov mov ret mov icebp arpl pop dec stos stc jbe add cmc cmc aam push mov or fisubr push imul mov hlt enter scas pop xchg add icebp xor das loope and xchg jnp sbb (bad) xor mov jne sub insl mov inc or sbb push cmpsb jno xor xor aam sbb or (bad) xchg pop sbb enter jmp fs jno push pop mov not sbb popf icebp sbb (bad) movl push loop xchg stos (bad) xchg push stos addl inc push (bad) (bad) or push pop mov ja inc pop xor sub (bad) out xor mov insl mov push imul insb mov push lcall (bad) sub jb mov loopne pop fwait ds (bad) push stos dec (bad) icebp cmpb in mov (bad) sbb pop icebp adc adc (bad) test daa jge sbb jecxz faddp lock lods outsl ficoml and outsb in movsb adc and inc jne fidivr xchg jno mov icebp das xchg xchg das divb or fiaddl fsts sbb xor cmp cs fpatan sub outsl mov fucom mov xchg fcomp imul lea push mov pusha mov sub cmp (bad) jo cld xchg rorb loope in jnp or (bad) mov (bad) xchg es push sub mov (bad) fsubrs (bad) jns adc stc fs mov (bad) in pushf adc cld jp push adcb dec xor inc push adc sbb xchg sub rcrb mov push push shrl lret jae cmpb dec sbb jecxz sub lock pop jb xlat lods ss addr16 sbb jo cs cli ret inc push movsb pop sbb xor sub mov xchg push repz or outsb dec in lea mov push push and pop cmp in and inc add ds lds ss in sti (bad) pop pop pop mov sbb dec jnp push roll repnz pop mov and (bad) dec loop inc dec and lods cmp shrb outsl imul (bad) mov jmp xchg mov dec add mov sub scas movsb sub xchg lret (bad) adc xchg lods and sbb (bad) out jbe and xchg mov mov xor cmp (bad) inc loop cmp mov cmpsl inc insl orl lret xchg mov push dec int add stc lahf add pop jecxz inc xchg sarl daa add inc cmpsb pop fldt fcompl insb sub jne lods sbb ljmp pop bound or and cli cmpsb cltd cmpsl loopne roll inc mul sbb scas cs cli pop push xor fs xor mov aas ret mov sbb arpl push cmpsb jnp lret inc dec jg xlat sahf xchg fdiv in sarl test dec mov lret movups sub int3 mov (bad) and daa in andl scas hlt loop shlb xchg jno xchg xchg adc test pop fisttpl and push sti mov (bad) mov int inc push and mov hlt sahf jecxz or cs stos sbb fs jo push fmuls (bad) mov les dec jne sti arpl dec leave cmc mov pop cmp sti add push mov test sti or (bad) insb mov mov inc mov mov dec sub mov shlb or xor xchg (bad) xor pusha hlt mov sarl stos jle and xor mov mov imul xchg xor aas out in mov sub jp rorb cmpsl pop xchg lods and and pop xchg jp dec and jbe and dec movl stc (bad) push or jl sbb mov adc repz xchg jge rorb push pushf dec xchg xchg popa cltd add lods add data16 cmp xor jne jmp shr lods or (bad) aam push mov pop rcrl xor jns pop mov (bad) dec jl add movsb rcll (bad) js and mov xchg push xchg or fnstcw mov inc jmp xchg cmpsb not jmp mov fistp iret inc aas loop repnz scas add ja rcrl (bad) enter cmp cmp jle mov push push (bad) xchg in lret (bad) mov das sub pop dec jne inc xchg add je fldenv sub sbb jb fildl cwtl ret int3 pop (bad) adc jno jo in xchg mov mov inc sbb les mov int3 and pop movsl (bad) loopne sub repnz shrl test xor and cltd cli xchg data16 (bad) mov pusha imul mov sbb test pop bound sahf pop aas mov shlb test (bad) mov jl in out jo cmpb scas push in pop iret scas in jmp xor xchg sahf daa cmovb negb jp jae das push xor and dec cltd mov jp jp adc mov test leave or pushw adc stc call xchg js fs xor push jg pop test jge rcll mov fs mov enter sub nop inc inc bound (bad) outsl xchg sub test outsl sbb (bad) jae ja mov cmp jnp mov loopne sub lds mov pushf xchg mov and push ret inc jg out pop and (bad) mov sub cmp push mov jbe adc addr16 jbe ficomp dec or sub jns sbb xchg mov dec pop push push or cmp pop shr sbb ja mov data16 inc loope jge ffree aas mov imul jecxz lret es ret lahf and or push fldt sti mov les das inc mov ret mov push out xchg ret jbe test dec sti xchg in scas mov xchg dec push add mov inc mov sbb or cmpsb jmp xchg lret shll sahf roll lea lahf xor out lea rcrb fwait (bad) mov leave js sbb push test pop sbb inc sub inc dec sbb mov mov jo jbe imul sbb fcoml jne bound rorl sbb out jb cmp lods mov int3 sbb push lods stos jnp sbb push cmp js je jp cmc mov push inc xchg addl aam xor sub in mov insb mov jp repnz dec mov scas dec in mov cmp or jecxz mov cmp inc stos and mov (bad) sahf xlat cs js and scas add shrl lods cwtl pop mov fnstcw xchg mov mov test and inc inc xor sub jg loop jecxz add xchg mov repnz xor loop mov push mov cltd addr16 mov fstl lea push ja mov cmp sbb cmp aas sub inc ret pop mov test mov les mov sti addr16 ds or stos in mov jo out pop sub mov outsb mov push leave adc int3 xchg (bad) dec in (bad) (bad) clc mov jecxz sub pop xchg lcall or movb test mov cs movb inc (bad) mov lock hlt adc pushf mov fcompl or jb sbb bound dec movhlps fsts and subl jb shl (bad) (bad) push ljmp or ds sub jb mov stos jg pop scas pop fadds inc xor mov push inc sbb cmp test fucomip lret jge scas (bad) mov pop mov arpl jg (bad) and shll add and lcall iret cli std ror in repz and sub loopne (bad) setb adc dec icebp xchg dec push movsl sub test fisubrl stc rcrl nop push xor and shr scas out add (bad) jg les dec mov mov cld push push (bad) lahf ret mov jne sbb in jmp mov roll jp in addr16 rcll xchg int3 push dec dec data16 scas sti cmp inc incb sub sbbb ret xchg cmp pop mov loope sub xchg push imul mov add rclb loope sahf push mov mov in lods xchg and mov sarl enter sbb dec xor push and mov mov mov or mov pusha add cmp std mov ret loope mov imul lcall movl sbb leave loop sti mov adc jge jp aad jnp iret (bad) xchg mov jns cltd in mov jne or aas jecxz repnz add fdivs push mov lahf add xor in scas jns push ret jbe std ret sub pop test xchg xchg pop (bad) idiv xor mov sbb adcl cld adc push cmp pop rcr test rcll jge test pop outsb in cld es repnz outsb movsb sti gs mov push or je adc mov out pop sahf jo push test cmp and and loopne fldcw out and mov add (bad) fs (bad) clc mov out out push pop loope dec les lock rol jbe jbe adc xor (bad) push xchg mov jbe shlb fwait (bad) xorl or (bad) movsl subl mov popf or mov popf dec mov mov enter scas or jo push adc mov and outsb cmpsb mov mov push and lret xchg call fmull push mov dec int mov xlat fsubr test xchg jge cmpsl fcompl xorb and and mulb loopne mov loope mov mov xor mov cmp xchg sbb xchg xlat mov (bad) sarb dec lods mov mov (bad) xor aad data16 dec adc movsl mov daa ret (bad) cmp flds add fidivr mov test or jns sbb or and iret jb sbb fsubrs add es push daa in addl fcomps enter dec pusha int mov sub dec xchg cmp out push push popf lods lods pop insl (bad) sbb gs (bad) gs mov out or (bad) push cltd test jg pop stos fisub dec lahf xchg sub aad mov pusha in xchg insl dec inc scas push ret mov pop pop mov rcl adc test mov fildll in push popf dec stos dec jmp xor add push xchg decb stc and rol in mov loop or and fwait sub and xor out (bad) push (bad) and and in sbb repnz sbb lcall sti cmp jnp cwtl and sub cld push jne out mov push and rorb jp pop mov lret outsl or xchg lret repnz dec lds inc cmpsl pop out jmp aam mov out lcall mov test dec sbb xchg hlt fsubs lods lret xorl movsb fs cmpsl dec test ljmp mov out es dec push jecxz sbb sarl mov mov aas ds jle push pusha or or in jo push adc mov sub push inc xchg out inc cltd test xlat cwtl fs out imul insb cmc hlt inc xchg movsb xchg lcall cmp adc and pop inc mov mov xor jg inc int3 xchg inc pop rorl cmp jns xchg sarb bound rorl pop jae push divw (bad) ljmp jg (bad) mulb pushf push push pop add xchg add pop clc add pop stos mov arpl shrb xlat int imul clc loope push dec pop mov inc (bad) je jne out or xor cmpsb (bad) adc sbb ljmp sub gs popf cmpsb bound cmp testb lock adc xor push cmpsb inc lcall add cmp or pop out and ror leave mov sub rcl dec or mov push sub adc into or enter push enter js jne sbb lods mov loope add (bad) push jnp js into xchg in leave dec aam mov cmp dec push clc out xor jmp pop push clc imul add or jns es (bad) out sub inc mov mov loope bound pop std xchg ss xlat mov aad cmpsb mov and lods push mov push sbb xchg je mov fsubr sub scas data16 (bad) xor ja in sbb shrl mov mov test fimul pop jo and jns jmp std into into sub cmpsl lds scas xchg out test stc pushf and dec push jns sub sub fdivl mov dec repz or sbb stos ljmp mov inc lahf (bad) jmp arpl mov adc cmc repz mov jl add or test push fimull push insl int3 hlt jl jle popf rol inc fmuls sar add mov loope jno (bad) mov shrb jge and out mov inc or push loopne rcrb xor shrb sbb add inc leave mov cltd xchg ss les ss dec js popf (bad) xor (bad) jecxz add add fdivl jg xchg or jno mov mov xchg in adc dec push inc fbld dec idivl jp jge std jo in les (bad) js mov dec jg clc lahf les les stos adc xchg sub push imul cmpsl adc aam xor shll jns xlat jno sbb cs inc outsl into dec in mov pop sbb movsl ficom pop pop push andl sbb pop movsb jmp (bad) cwtl jecxz int cwtl jg (bad) scas xchg fadd rolb test mov (bad) popa xlat mov aad cs ds andb data16 int mov test cmpsl (bad) in out fdivrs shrb movsl das mov leave shll adc inc jecxz in andb xchg cs shrb insl lea test mov push lcall stc jno frstor scas xchg adc jp and adc adc ret sub clc and pop inc sbb int pop inc xor mov fldt rcrb lahf adc mov push insb dec (bad) out lock stos jns and popa data16 scas loopne mov das test (bad) mov xchg sub int3 cmpsb test (bad) xchg test push pop inc add aas ret or (bad) and cmp dec adc dec sti data16 mov lds inc mov test popf outsb fchs and sub mov adc into xor or (bad) adc dec out aad cmpsb test scas stos xor out movsl (bad) xor push fdivr push fistl push out bound xlat push lock push push cmp jle sahf jae mov clc clc inc aad dec in fmuls xor xchg push sahf fsubrs pop sbb or inc pop and out push or xchg aaa pop lods jecxz push aas out stc lcall dec jl fwait das dec (bad) in mov inc mov pop imulb jge in nop aas mov dec enter sbbl xor clc sbb fs in jae inc in js add fistpl mov add inc adcl jbe push xchg fcmovu int3 mov or pop cmpsb outsl inc sar leave loopne orl jnp jae adcl cmp test push arpl jl dec stos clc and inc add xchg push xor fucomi xchg ja or ret (bad) fldenv test hlt data16 scas bnd sbb jle (bad) or xor (bad) push jle push jmp (bad) out bound sbb pop pop add push xchg lahf lods dec mov icebp mov sti ja insb jbe adc mov dec jae mov sub sub mov xor mov ja pop push (bad) and jp xchg mov stc ret ja adc sbb mov stos popa jl cwtl pop out es rorl dec adc mov lret push mov (bad) lods mov or pusha call cmpsl push scas sub mov mov std xor (bad) lods mov call xor adc in rcll push sbb pop push sub sub sbb loopne mov xor mov test push mov pop js mov xor dec ret fwait (bad) pusha adc aad and mov rcrl jno push add ja std lea xchg cs inc mov gs pop outsb xchg xor jo push pop inc jne sub ljmp inc mov fwait and outsb out test push movsb xchg std pop bnd mov and cs movaps xor jg cwtl xlat adc lods lcall jge xor fsubrl mov inc rclb insl sahf cmp jp movsl loopne add stos sbb and lock push push pop and in aam leave inc (bad) sub subb rorb flds mov mov fsts mov xor pop add loope insb shrl cmp xchg (bad) (bad) pop dec or mov push xchg loope mov xchg xchg xchg jo out ds ss out xchg or and sub retw mov mov xlat mov inc mov aaa mov hlt mov xchg shll outsb mov cltd in jg fwait mov push mov cld mov cld mov ret cmp inc dec mov sbb push popa sbb inc fisubl add mov imul or aas xorb cmp xchg xchg inc inc or mov mov pop mov loope cmp jmp pop stos repz loopne xchg sbb in (bad) aaa sub sbb inc test rcrb cmpl and (bad) push add or and mov mov fwait pushf sbb inc pusha jno mov cmc call or rcrb pop or push (bad) mov das cli and fs roll xchg notb pinsrw jae and out lret aas adc (bad) stos (bad) push shrb add imul fiaddl mov clc or xchg dec stos dec jb fwait daa into (bad) scas mov repnz pop scas pop nop sbb (bad) into mov iret or cmc jbe sub xor sub mov cmp leave dec pop lahf daa gs and ja dec test jg cmp ret lret mov bts push les scas inc (bad) push mov and mov pop test cltd xor testl mov mov and shlb sub or pop outsb or mov daa (bad) xor rorb xor mov (bad) int3 mov adc outsb ljmp mov gs pop adc addr16 mov insl sbb cltd jl scas or dec aad jecxz nop pop cld xor sbb jmpw dec sbb mov cwtl jmp xor adc out cmp out fdivs fwait movsb mov mov pop cmpsl push push mov jbe data16 push loopne push test dec xchg out lock mov push fimul nop iret leave mov (bad) mov rclb inc aas inc inc xor stc outsb push or and xchg add dec fbld imulb mov dec and jnp fdiv dec sbb lock cmp sub ss icebp or daa add (bad) xlat cli sub das sbb pusha rolb repz inc (bad) ja mov icebp loopne sahf sahf pop out mov mov pop test icebp mull fwait leave sub mov jnp ja out scas test pop xchg inc and dec scas loopne cmpsb push in je push loopne pop xchg sbb and cmc hlt aam xchg outsl sbb mov repnz loopne into lds mov (bad) sub xlat cmp cmp test enter (bad) jno je jg pop inc je cmpsl rolb cltd out cmpl les dec lds or in push aas mov hlt jle ljmp pop xor ss fldcw mov mov inc mov inc adc orb es cltd dec dec mov dec jge imul add sub jbe jbe fwait xor es jmp xor and push cld das inc adc sar inc mov fstpt hlt adc (bad) das pop nop sbb je stos lahf and and pop sub mov maxps mov xchg call jne,pt mov xor hlt insl pop pop je sub imul negb fnclex fadds outsb rep les scas jne inc push pop pop aas adc imul xor in call mov pushf fbstp ja nop mov mov lods jne mov push clc bound in push jbe sbb sbb adc xor adc (bad) cltd scas stc aaa pop xchg dec pop inc std mov (bad) mov out xor shlb xchg cmp dec icebp xchg lods inc push movsl scas addl inc lahf cmp mov leave jnp adc cmp fs ret jo jmp aam (bad) movsb cli ret mov icebp or adc mov mov clc adc dec (bad) adc add mov push jmp sahf cmp mov adc fidivl and xchg xlat add and jae scas push mov sub iret insl popa mov gs aad dec mov lahf jnp sbb in test mov sbb in cs cmp add dec (bad) decb pusha (bad) pop rorb and arpl adc (bad) sbb hlt jb mov aas out lods sahf pop mov fs xor stos mov mov xor cmp xchg outsl ret xor lea sub adc pop loopne and inc xchg insb inc jo push adc bound (bad) jge mov inc or lock add popf jbe,pt mov fcomps jecxz pop (bad) aad sahf mov (bad) fcomi push push push ljmp pop push fs fdivl stos dec (bad) jecxz es and mov out sahf stc xchg fcoms xchg or xor insb mov in mov or xor leave mul push pushf xchg pop push lcall outsl xor daa mov mov dec loopne mov pusha lret sub cmp mov or ljmp in (bad) mov xchg and add mov pop mov cs lea push jno add shlb movsl andl imul lret call les push outsb dec dec cmp mov mov push int3 hlt leave inc fistpll push in clc dec add adc inc pop xchg and int and xor arpl call iret mov (bad) enter push scas xchg (bad) fcoml xchg add jne dec lret iret shll dec push inc push cs pop shl arpl sub pop andl mov or clc int3 test ret sub push jg dec test bound and ret ds in fcompl cs sbb push pop sub push xor rolb push pop mov lea aas sub fisttpl sarb lods push out aad cmp mov (bad) dec push cltd into jnp lcall mov hlt popa imul jns cmpsb push repnz (bad) mov outsb repnz out and sub (bad) mov or (bad) xchg pcmpgtd and (bad) cmc call test or std pop or lahf notb sahf fist repnz and shrl ja xchg out es adc enter nop mov icebp or test addr16 std xor xor cmp dec sbb jbe out xor push nop pop in cmp aas loope,pt loope leave inc push (bad) nop sti push add aas (bad) jle and pop xchg push inc int mov pushf mov inc out ss sub jecxz xchg hlt lcall mov or xchg andl xchg or fsubrs cmp icebp or mov addl fwait call pop (bad) xor outsl fmull (bad) sub xchg in adc pop pop mov pop jne popa rclb sbb testl xor mov in nop dec push cmp add inc jge (bad) push bound (bad) sub xchg imul fsubrl jnp loop pop clc fs lds push clc cli cmp (bad) dec int3 mov cmp (bad) cmp mov cmp leave jmp mov ljmpw jbe jo dec sub loope pop popa jecxz jo data16 sbb gs jae outsb sub cmc pop fild xor popl test shlb lds sbb jl data16 ja add nop aam sub xor je lret jbe outsl cmovbe xchg ja xor jno or sbb xchg mov xchg (bad) pop cmp adc push ljmp xor cmpsb clc pop cmp adc (bad) cwtl xchg sbb cmp pop lds data16 cmpsb sbbl dec fwait ds push scas sti pop sub dec sub subl fnsave push xlat mov or sbb and imul xchg lahf shlb add (bad) (bad) jns sbb adc dec stos lods dec loopne outsb sti out push or add jmp xchg loop dec loopne mov adc push imul push mov xchg aad fnstcw dec nop inc jp add push aam and jnp,pn and out mov (bad) repz pop and xchg xor sbb test ljmp std clc insl xor lea leave repnz add jl (bad) cli cmp movsl or mov repz pop cmp in jae push sub cwtl fist aad (bad) push xchg lret lock imul fdivl div lods scas fld adc ffreep int3 das and xchg ret pop stos push cmp cmpb lods inc testb adc cmpsb sti mov xlat push fildl push xor inc call je cmpsl mov pop insb js ds cli mov movsl or mov mov inc pop pushf sarb inc test mov dec jbe (bad) lock sub add xchg jg sbb hlt call in xlat notb push out add cmp or clts pop subb push xchg popa lcall mov mov xchg xchg add mov hlt add pop loopne sub movsl inc call sbb adc mov (bad) sbb jno leave (bad) negl mov (bad) dec pop nop aas out in fldcw (bad) fist or cltd loop dec stc ds movsb (bad) aas mov mov and repnz loope ss ljmp out add dec sbb lods xchg call js lds xchg mov imulb mov dec push mov cld dec dec jno pop xor out or (bad) mov and int and mov dec or sbb stos cwtl and jae xor xchg cwtl or (bad) pop stos adc aaa je cmp xor inc jp mov sub es mov (bad) mov ds jmp dec xchg mov sbb insl insb adc inc repz test jp xchg mov pop jno out lret and pop mov adc sub dec cmc lea nop mov push mov mov lret lods dec jne cmp add jne (bad) lea fs icebp rcrb pop xor and insl rcll addr16 pop sets push lahf and jle rcl cli dec lahf ljmp jg loope fcomps into lcall or push pusha mov sbb push push ljmp ss fnsave mov add jge sbb ret movsb mov xor xor or ljmp std or jl cmpps (bad) mov inc lret repnz or mov popa sbb aam adc dec pop add inc cmpsb (bad) mov pop pop icebp fsubs js bnd sarl inc movsb cmp call fdivrl das jns outsb ret push addb movsb xchg add aaa mov ljmp repz cli fcomi sbb cmp call mov push movsl add dec lret shr jne add icebp xchg data16 push (bad) adc mov inc jmp adc dec out shrl loope mov mov into dec inc add outsl sbb das mov push jge pushf jg inc mov out fwait mov rclb push dec pop xor fadds jnp mov sub xor lds arpl ja sbb adc push inc cwtl pushf dec sbb or stos pop mov and xor cmpsl and mov (bad) int in xor lcall pop stc out and xchg pop insl pop or insb orl lret adc jecxz js cmpsl outsb std arpl es sub mov push mov daa inc (bad) bound gs shlb daa sub pop fmuls jge out nop inc fwait out pop adc add push sahf movsl mov push mov adc dec lea inc push sub xchg fisubr outsb add push dec sbb pop jbe sbb jmp adc jo push xor jno mov repnz pop add mov dec xchg std lea add ja lock lcall sub sbb inc aad mov test sbb or imul lds stos cs jno daa sti pop push inc mov pop jle jno push fistpl jb add cmc xchg xchg push jnp repnz addr16 jp or mov mov inc xchg xchg pop sub push cmpsb loope loop xor dec or xor (bad) and inc cwtl test push push pop fs jne push aam mov xchg push and add fwait lea out je int3 je push enter add ja cld aas es (bad) sbbl xchg insl inc sti aas inc popa mov clc repz orb dec addl icebp dec xlat sbb xor out xchg xchg mov mov aaa push pop cld adc mov dec cmpsb push sarb jp fnsave addl lds sub daa dec sahf mov insl cs or outsb jp inc fcoml xor cmp xor push aam dec leave sahf lahf fnclex sbb pop scas pop and in inc jae dec arpl jl aas or int out sub mov and push mov mov dec aas cld cwtl lret jb mov loop aam mov mov pusha clc pop in jl je lahf xor stos pop jp add repz sub mov jl sub xlat mov shlb jg add in pop jle pushl mov jbe out inc xor notb and add enter pop mov bound mov enter jmp jbe push inc fidivl (bad) je jae or mov bound pop mov jae mov xchg fwait inc rcl fiadd jnp in sub pop fwait (bad) pop ds es jmp add jp mov loop (bad) into or es ja lds scas push push je inc movsl (bad) push sub (bad) jae,pt sahf push or out sub loope lret mov mov testl adc jmp enter dec popf push das push mov xchg ret pop push loopne popf cmp imul jl and xchg adc (bad) cmp divb dec repz ljmp (bad) pusha mov rcrl mov pushf xchg and call fisubr xor rcrl ljmp sbb je enter adc mov (bad) in and notb rcrb daa adc cmp imul add push ficom ds movsl cs outsl subb adc inc aam adc mov fdivs cmpsl das ret aam fnstsw xor dec jle push jmp fwait arpl jmp cld jns pop out or call pusha push or mov and mov sub cmc insb cmpsb lahf in inc mov addr16 xlat ror push mov xchg lret sarb and lods push dec aas fadds cld adc push cmc shrb scas sub in clc mov push cmpl xchg fcmovbe add sbb fdivp push dec cmp sbb cmp scas fmuls stc imul int3 inc in scas add inc lock add popa movsb mov push jae sub fdivrl cmp out push push repnz pop out pop or mov xor pop bound xchg mov jne,pt add jne dec mov pop and jns cmc mov xchg aam cmp or pop jbe xchg jno orb fs jp mov shrb rcl in push add cmp xor fstps cs pop lods mov cmp jne enter mov mov mov and enter lret push popf pop es fistp out push rclb into adc daa cli dec jo outsb cli sbb xorl mov pop push mov dec pop fidivl pop int3 ret mov adc mov fcompl ret and in std ds nop mov (bad) pop push add cmpsl xor lret ss cwtl movsl icebp fst fsubrl xor arpl cmp cmp mov (bad) stos out add aas mov inc shll fstl enter bound pop outsl mov jae add mov and int gs xor cmpsb insl int3 add data16 dec call inc cmpsb add mov fildll sbb insl je ds sub inc sbb add cmp dec jb (bad) push push outsl dec es popf sub insb adc jecxz push push enter gs cmp test rorl out imul fcomip aad add lds push xor push mov sbb mov dec pop test ljmp dec imull inc add fwait sbb and mov mov ss shrb lret jne add stc enter outsb adc popl insb fstpt sbb inc xor cmp pop data16 fxch sub mov sbb (bad) inc test sbb jle fistpll adc loop mov push xchg imul and xchg add inc mov gs fisttpl pusha mov mov test lods pop and jbe push sub (bad) mov xchg add mov in mov test scas rorb jnp xor lcall enter (bad) mov fwait das inc pop sbb ss add mov mov mov sbb pushf test xchg lock mov div mov or outsl push lahf jb mov xorl push cmpsl loopne inc das (bad) cli es mov dec dec sbb mov xchg ss repnz outsb stc mov outsl jns stc int mov loope int mov lods ja jns outsb mov addr16 add outsb lods jcxz mov or out popa push jg popa dec stc jle or jg adc mov lahf jb mov add testl aaa stos xchg mov repnz pusha jp jne aad dec push (bad) cmpsl aaa iret leave lret sbb std and mov xor or mov mov inc push mov bound xchg jl push getsec lea mov mov aas ret shrl dec and mov xchg cmpsb into js lahf cmp push aas cmp mov jl xchg mov xchg jb mov add ja in cli push adc sbb push push xor call mov add sub outsl jg adc (bad) mov push sub stos or and test bound pop int sbb and movsb add clc pop and xor repnz js imul adc nop sahf mov in push jb push dec inc sub mov out loope loop mov mov or rcll je (bad) js sahf xchg data16 sbbl hlt dec loop pop xchg mov dec movsb lds ficoml pop sbb push shr mov pop (bad) push lahf jle loop fidivl push fnstsw in ljmp jl sbb enter lods add mov dec iret sub addr16 xchg in int and push movsl and xor fwait (bad) out cli bnd roll pusha mov inc jmp dec xlat sti fcoml faddl dec mov jae in test enter cmp xor lret inc inc mov scas dec push shr dec xchg lahf push push mov cmpsl dec dec in into mov insl addl divb nop rclb xor inc (bad) push lret addb mov dec pop xchg sbb ljmp push (bad) out aam inc jmp inc lret lock dec cmpsb adc ss decb jno pop or stc insb pop pop insb mov out add xlat (bad) (bad) adc rcll dec xor and cmp or add jge adc in ja mov movb xchg sub jb push add add sub cmp fbstp jbe push arpl pop jp push outsl cmpsb push and loopne fild push mov dec lods iret jns sarl cld and xor xlat ja lcall add aas mov call test js pop imul lock sub jbe fwait adc ja call out aam add fild frstor sti call sti je add out push jbe test sarb js sub cmp sbb adc mov (bad) xor pop lds inc sub repnz sub mov push push aaa sbb adc test das rcrb stos cmp out inc es xor jp scas fcmove or ljmp sbb out cwtl in mov mov aad out xor xchg mov cmp pop lods ja xor loop lcall inc jne addb lret mov inc sub xchg test mov sbb push mov dec iret mov ret add jae cmpsl stc ret ljmp (bad) ret icebp or push jmp insb mov lret stc movb pop pop mov jno mov push mov mov adc lahf fistp cmpsb sub dec dec test add sahf rorl mov xchg sub sar imul fisubrl in fcoml (bad) mov xchg xor pop cld sub daa xchg ds fcoms lods nop gs fadd dec sbb or xchg lock xor xor jae jne fcmove scas xchg int3 inc movsb les jnp lds mov lods adc insb out add dec or addr16 dec mov stos dec dec cmp dec popa out cmp lcall jb sbb les rolb stc jmp fmul testb xchg and fimull xchg xor dec dec aad outsl jbe or pop repnz out dec dec pop int3 scas test mov mov out mov push sbb sbb test test add pop in lret out jl push sbb pop call push mov inc mov push inc into sbb sub or push out hlt dec popf outsl adc pop pop push in mov push pxor mov xor push (bad) rol xchg sti jg nop dec fwait gs adc mov lock or imul add insl cwtl lods ljmp bound mov push pop (bad) lret cmp not xchg inc inc (bad) insl and stos je loopne inc lock lock pop mov stc sub test fdivl adc into pop mov cmp pop es xchg outsb xor flds rorl sarl mov pop jbe push and jle cli popa push xor ds push outsb in lcall pop hlt inc mov bound adc inc mov bound test in inc push adc stc insl pop pop xchg mov pop jo add mov je or mov sbbl lods pop fimul mov sub ja inc jbe sbb adc leave in mov sbb sub clc xchg jne xor sarl int3 push mov push sub sub xchg fwait jo cmp repz fsubl pop sbb ret fmull xor popf shrl add mov fstpl xchg mov xchg push cmp loope rclb jle mov cld lahf adc xchg outsl add dec dec inc lret mov notb sub jns lods repnz cmpsl push mov cmp pop cmp scas mov (bad) lret fadd shlb xchg mov fnstsw shll xor pop cmp inc ljmp sbbl jl iret xchg pop out mov dec mov mov add adc lret scas es addr16 push inc inc sbbl in mov arpl jp test mov ja sub add xor and je cli jg lcall inc push mov fwait jge ss and mov loope mov xorl xor pop xchg and lods in lret imul testl dec cli sbb call jbe mov faddl aas adc mov repz mov adc fcom cmc sbb push fcom sahf cmp inc arpl sub iret popf insb inc inc jnp cmp aas mov fnstsw inc sub add inc movsb imul pop mov pop (bad) int or pushf shll xchg nop and inc cltd add xchg sbb and xor mov and scas fs repz test rol fwait sahf xor (bad) push js mov lcall imul push fisub cld push add jno movsl stc stos add sub dec xor dec scas (bad) jmp in jmp or ja mov (bad) lcall movsl dec add test sbb or loop mov xor sbb enter cmc mov stos inc les fcomps dec xor jns icebp push jo stos sbb out pop inc cmp cs xchg jecxz pusha push mov fstpl xchg sbbl jo cmp out ljmp or jge (bad) cmp push pop xchg mov fs out sub repnz and jb lock js out jg sarl test xor xchg lock push cmp push jg out mov lea cwtl inc add jnp dec out rorb adc xchg push mov mov jne pop pop outsb int inc leave cmpsb xlat out xchg fwait sete das mov aaa subl push into scas cld mov or fcmovb push stc nop (bad) clc insb lret mov (bad) cli jns dec or and leave mov push (bad) push inc rolb and rcll dec push add pop ja mov add push movsl ds arpl loope push xor test (bad) jle cwtl outsl jno dec shl stc aad push inc and andps dec arpl push xchg pop lods xor xor mov mov cmp lock or in and aaa mov cmp repnz fwait leave adc sbb xchg loope pop mov movsl and subl cli jb lcall shrl and aaa push inc (bad) jne testb popf mov pop pusha pop or bound leave loop xchg ffree jbe inc sub vmovd scas inc stc adc cmp mov icebp mov push out mov imul adc insl fiadd push sbb push leave nop mov nop xlat dec xchg stos xlat or mov scas imul out pop jle divb imul addr16 pop ds imul adc sub or and scas cmp cmp notb sbb jnp jp cmpl in repnz vrsqrtps sub fwait or xor mov popa rcrb mov insl cmpsb sub test mov push ror cmp xchg jmp dec fisttpl cltd lret pop jle rorb mov dec ret fnsave mov jg fcomi icebp out dec stc cmp ficomp add mov (bad) hlt pop faddl inc arpl push and (bad) clc mov mov mov hlt cltd mov std xchg jnp repnz test add add aas pop bnd (bad) in pushl stos mov dec pop into into add mov jge inc dec mov ret out insl sbb jl cmpsl xchg cmp dec movl jl sbb repnz pop daa mov sarl adc ficompl lahf je xor add xchg dec sub inc lods cmp fs dec lahf pusha ss test ljmp sub add mov sarb imul jp cmpb icebp inc sub xor ret sub inc int popl repnz frstor mov xor dec sarb ss enter jne (bad) and sahf inc dec leave gs jle dec xchg fsubl pop adc dec adc (bad) std dec cli test out mov xor jge jne lret mov cmp xchg inc ficoml cmp arpl addr16 mov xor enter stos out (bad) xor mov xorl icebp outsb outsb fisttpl or loope ficompl jp pop enter shll adc jbe (bad) leave cmp mov clc sti lahf and pop fildll push and add push stc (bad) mov lea jl cmp popf jae in xchg insl inc (bad) pushf pushf pop iret sbb mov nop andb imul add imul gs and push andb jg inc inc aaa xchg nop cwtl jae cwtl mov nop push or cmpsl loope (bad) dec rcll pop mov xchg scas lock out scas jp cmp rol jae fnstsw out loop fldl data16 cmp lret iret sbb pop or dec xchg addl xchg andb inc dec je shlb add shl fnstsw and xchg movsl cmp push jo call push mov out enter div xor adc sbb gs ret icebp xchg push (bad) jp pop fcomps sub mov mov adc in or in gs cmpsl jle in xor fcomps call cld adc ret cli adc fistpll lds sub ljmp mov push pushf xchg subb jl and fisttp dec stc mov cmpsb sbb adc popf dec std mov loope add addr16 lea push mov cmp lock out inc (bad) or inc and outsl sub scas dec daa (bad) repz lret pop cmp adc jbe,pn outsl fdivs jne push in pop push pop scas pop lea cli hlt (bad) pushf std je iret sbb inc (bad) bnd dec (bad) lret mov fadds push inc loop add add (bad) mov dec adc addr16 mov fild negb or addr16 push (bad) jbe lret add mov addr16 out gs fdivrs aad (bad) jae push (bad) xor adcb stc pop adc push and mov sbb stos gs out js sbb adc popa or enter clc sbb jbe fstl loop jecxz ja or imul jmp inc mov daa movsb pop loop aam pop fistp dec mov dec lret push dec int3 dec sti pusha adc xchg loope dec add xchg in (bad) mov cmc in jb sbb daa shl int loope add or shll addr16 pop mov xorb pop sub or inc sbb jecxz ljmp into addr16 iret test pushf fmull outsb push dec test sub fsub ds push xchg or lret stc cwtl jo sbb adc adc enter paddb js imul sub (bad) or sbb jae xor dec loope xchg mov ret push xor outsb adc (bad) mov push mov or (bad) push cmp push sbb xchg pusha repz rcrb push inc cs jae out or outsb iret pop in enter inc cmp mov pop cmc jnp sbb imul stos arpl sbb movsl fbstp jg mov add mov popa addr16 or and sbb aas add mov cltd dec inc lcall sbb cmc jge push sarb aad mov (bad) push add pop loop scas in sbb int sbb in popf inc scas pop repnz adc fxtract fiadd into mov test bound lods or jmp pop (bad) mov jmp xor cli pop xchg xchg xor mov je fsubrl mov or fs (bad) mov jb mov fsubl test in stc mov mov dec mov movsb push sub xchg adc push aas mov call cmp push int3 jle dec jbe sub push stos bound add daa xchg ret aas xchg cmp pop jno adc push sbb mov in pusha fsubrp mov mov movsl in (bad) hlt shrb arpl and test jbe adc or sbb pop mov xchg movsb lods leave add inc cmpsb fwait sub dec aam cmp outsl (bad) dec pushf adc jmp negb inc pop aas mov pop jg and inc sti xor gs sahf mov cmp std cs or enter mov sbb sti sti ret jge pop pop loop push cmc (bad) jo or data16 test loope pop mov fs dec mov cmp pop adc xlat imul out lcall mov out and inc mov enter mov fisubrl mov (bad) add cmp inc add pop (bad) adc jp jle jl std mov pop call repz mov inc stos mov and je data16 rcl out jbe inc orl xchg add imul out jge cmp loop jne movsb xchg and add andl jno imul dec out (bad) ja (bad) cmp lahf or cmpsb loopne (bad) mov mov xchg add test mov pop cmpsl push adcb and xor mov pop cli cmpl push xlat xor jle xchg leave mov insl mov addr16 not lods rolb aam fstl inc std mov outsl (bad) in jg (bad) in mov insl and sahf divb (bad) lcall jmp pop rcrb jbe jo sarb mov push rcrl push jbe mov loope cmpsl in and stos in divb divb scas mov (bad) add sbb jne repnz or aam sbb cld dec add pop out xchg xchg sahf pop xchg data16 dec fsubl test mov and les jecxz and fmul pop arpl lret mov xchg xchg adc push xchg jl (bad) push cld sub adc movsb lret test inc inc mov mov xchg je push aaa xlat fbstp cmp adc in jge pop sub dec arpl mov lods mov imul mov cwtl mov xlat sub jnp xor bound cmp int or loop push add cli out in pop pop fidivr and xchg cmp fstpl ret repz aam and jnp dec imul push mov pop mov fimull icebp xor cs es sbb sbb fcoml pop inc fcoml les daa cmpsl jo cmpsl fsubs push mov pop or dec clc pop lock xor clc ljmp in push mov leave push push out add jb push insb stos imul (bad) xchg rcll push push jl push (bad) sub or popf das loope (bad) nop mov inc and test pop xchg cmp push in or sti je (bad) into dec jns inc xchg cmp loop cwtl and cwtl idiv mov fwait add mov and xchg mov mov mov lahf mov es (bad) pop pop mov lret jmp add adc jno cmpsb pushf scas movsb insb cmp icebp and scas mov repnz or mov jo and inc push xor sub jp or jg loopne outsl ficompl out cmp cmp loopne xor (bad) ret jo inc and jno (bad) std pop mov push add cmp aam add inc push insl test xchg out dec push adc idivb add aaa mov pop (bad) mov leave or jb mov jns leave leave cltd mov dec or lret mov or pusha mov cmp insb int pop pop dec fstps int3 sti mov cmp and aaa mov in xchg add clc arpl push fidivrl lock (bad) sbb inc or xor mov (bad) inc je pop dec faddl (bad) lods pop jnp inc inc mov inc xchg cwtl (bad) bound xlat scas sbb cli or popf sbb pop sti lds das mov (bad) (bad) xor ss fadd loopne jne jnp or add or bnd cmp out movsb mov ror mov adc test daa je in mov ds inc push aaa in and mov pop jo sbbl test (bad) jg or mov mov adc sarl shr and xor cli test jge aas ss sub outsb into xor or mov mov int3 das mov loopne jl jne jno stc jmp loope (bad) mov dec dec aam jns push jge leave loopne sbb dec xor push mov daa jecxz jne fldenv pushf push cltd push add sub sub mov pop in pusha rolb (bad) (bad) insb mov jne les mov arpl mov loope cmp mov fwait and imul xchg pop xchg pop (bad) in loopne inc adc adc repz xor xor sub mov arpl outsl push sub mov lds bound in mov dec adc aas or cs ret sbb (bad) mov mov xchg push fsubs jne test leave sahf in dec ljmp fwait push rcr out mov mov bound sub stos jne cmp data16 pop test or test rclb xor fdivrl loope inc and daa and inc mov std (bad) notl cmpsl int3 dec inc inc push gs icebp (bad) cmpsb pushf cmp test xchg dec je and jo sbb push insl mov ds scas fisub imul fwait in add xchg sub rolb ljmp xchg xchg gs mov mov call in stc popf mov test mov cmc pop ljmp loope sarl mov mov adc inc sbb rorb pop jmp xlat sahf scas mov fbstp push or out stc popa fs clc lods cmpl pop loope adc adc out insl lock sti sub stos lcall mov mov sti pop fmul xchg arpl sti je call mov and pop xor inc mull movsb testb sub sbb push sub scas or or (bad) push adc cmp pop call sbb sbbb fldt jg insb inc inc xchg aad shr mov rol mov sbb dec in cmp popf es dec sub cmpsw mov (bad) pop jnp daa cmpsb lock push jbe ljmp jns aaa mov sar test mov mov pop pop in mov lahf fiaddl pop dec sbb dec stc mov sbb cmp test incl fistpll popf adc in jp add cmp stc stos sbb out js mov aaa adc dec rcrb add pop mov jno out cs rcll xor out push cmpsl xlat xchg mov push push dec xchg dec adc xchg mov test dec lret les (bad) xor pop aaa mov sub nop jo (bad) pop cltd and ss jbe pop sti aaa sub jp mov jecxz lods rcrl out xchg mov hlt inc jecxz (bad) jmp inc bnd imul jl test mov pop mov cmpsl dec (bad) in push int3 insb add out sti enter lea xor sub push daa divl in add push out stc pop cli scas and xchg sub aam cmc movsl bnd cmc loope xor inc lock push jp inc in adc inc cmp test out shrb jbe loope lahf paddusw pop mov test in in fildl cmp frstor pop leave inc rcll imul xor jmp ss mov cmp add push lock not aas mov cs push lea pop mov xchg cmp sti jb hlt jne jge stos adc out scas or or mov mov adc and or or or aas mov mov aad insb out pand pop sbb or sbb sbb jb shrl rcrb popf push and push add testl jae sbb (bad) jl cmpsl xchg jb lret cmp jae test add popf iret cmpsb subl cld and push pop daa lods jne inc jo xchg mov pop inc dec rep insb mov push ret xor ja (bad) mov pop (bad) in shrb jl test jg clc (bad) mov rorl and mov and aas sub fwait mov mov pop xchg ss fldenv shll test mov jbe jbe mov enter sbb int3 fistpl cld pop es jmp out (bad) mov pop imul lds (bad) js das sbb popf leave xor sbb lock adc mov mov aas xchg cmc icebp pop dec data16 bound mov aaa push test inc stos sbb push rcrb addl mov and adc (bad) fs or ret jno xor push std push push mov aas xor pop adc xor adc xor ljmp leave sbb adc sbb mov (bad) xchg mov mov inc popa mov dec cmp scas aas aad hlt mov scas pop cwtl bound sub popa and jae adc lret mov adc jmp (bad) mov pop fdivr mov movsl out test enter mov in jge pop mov fwait lret loope ss sub push jmp notb arpl mov inc insb add out aas pop aad mov fistpll inc roll mov jecxz andb in repz ds mov xor (bad) lret sub clc ret jmp mov xor and aam fisttp (bad) lret fidivr xchg sti test fbld mov fadds adc cmp aas jnp mov xlat mov lret jmp or pushf shrl jnp jo pop or cmp (bad) pop in jns pop pop lahf aas fild repnz test cmp mov andb arpl lret in (bad) push iret cmp daa mov ljmp js iret je shll xchg das shrb sub and pop repnz sub jmp ret rol push ds push and dec movsl jp fnsave and jns out jb sahf ficoml fcoms xor and mov xor jl mov in adc add mov xchg jge int3 sbb out sub mov lods add mov mov push adc mov cmc testb (bad) fidivl sub xchg mov add dec pop sub bound enter xor inc lret cmp or in outsb fisub or movsb pop arpl xor or and jp (bad) scas out jmp push fidivl lret xchg inc shll cmp dec outsb adc cmp jb je inc mov jns mov xchg jbe push fwait lret add adc fldt push fs clc lcall loope xchg pop sub scas or mov xor test insl ret inc sbb pop lea mov lea ret dec push inc add gs je adc (bad) cmc loop lret xor pusha mov mov mov outsb cmpsl aaa nop xor inc pop out push aas dec sbbb inc ja cmp jns jge sbb lahf xchg jne fdivp arpl xchg sub or sar lock adc mov xchg jo lcall int xor mov jno sahf mov (bad) aam or add adc cmp es repnz jb cmp lret cmp dec cld aam mov xchg dec stc jmp and leave fwait mov into push sbb fwait ja or push sbb test mov jns mov xchg outsl out or (bad) mov fcmovbe ss icebp xchg enter clc sbb xor pop sbb lea es pop decl xor les mov jbe dec roll fcmovne sbb lods iret jp js mov pop mov out mov lock or (bad) in test mov insl cmpsl sbb test mov xor stos sub jp add pop dec xorb nop mov jb sub push and cli (bad) sub (bad) mov add push int dec outsb jnp fsubl push sbb in jo je ja dec dec insb inc and mov out gs dec inc sub pop xchg mov dec mov cs stos nop jp push pop push aas mov iret sub outsb mov in out mov xchg out adc pusha pop scas mov push mov cs aas repz je and or jmp dec das rclb mov shll out push in outsb jne insl clc enter lods movsl in pop jp cmp mov and fisttpl jno add out sbbl mov inc adc mov jo push inc out mov mov out xchg fdivs cltd mov adc loop pop fadds pop inc inc push cmpsb mov aad pop out pop aad aaa loopne mov sub in inc add int mov call jnp lret push in and ja push mov pop pand jb jl add orb xchg pushl shlb jmp inc dec (bad) pop push call (bad) fwait pop add (bad) and mov xchg xor cmp loop push out outsl (bad) iret mov mov dec and mov pop mov popf mov int ja push (bad) jne or sbb and or xor dec inc lahf xchg pop enter pop sti jne push data16 mov inc imul outsl test das inc push fstp jae popa ljmp xor pop outsl fldenv xor lret adc xor popa mov pop shr or push dec aaa jne mov pop push push xchg pop sbb sub rcll xchg imul push loope push rorb clc mov mov sbbl inc gs rclb xor jmp add dec xchg inc loop jo and repz ljmp cmp xchg cmpsl push das push out cmp leave mov pop inc xor mov dec jmp pop add or aaa icebp lahf cmp jle in cmp inc rorl and push push xchg pop lods cmp or and inc adc pusha jp test jb nop inc xchg (bad) hlt mov jbe mov jle sub dec mov paddsw xchg mov cs xor dec jnp,pt push push hlt aad lods add jle mov sub inc mov jle mov pop lea fnsave mov (bad) into jg dec cmp adc insl pop push pop into sbb (bad) or mov push cmp sahf xchg (bad) int je add testb jnp cltd bound adc inc fimull mov repz and xor in mov test cvtdq2ps inc enter (bad) mov or (bad) test mov xchg sub and (bad) loop int jmp lods rep mov cmp lahf movsl rcll (bad) (bad) xchg enter adc or (bad) fisubl fisttp dec fldenv xor arpl mov test adc lcall jae popa sbb iret pop es inc in cmpsl push mov sub pop stos xor jae adc pop jge in repz adcl aaa repz (bad) lret scas or add rcrl pop mov cmpsb dec cltd bound or std int3 cmp repnz and into dec add fisttpll icebp cmp loop xor stos aam mov aam mov mov fistpl push xor (bad) dec and push jp mov inc push stos and ja mov jnp fdivrl (bad) jo or pop pop iret lds inc stos mov cltd rcr mov xchg (bad) aam jg outsl jns add sub adc xor jo aaa out xchg (bad) push sbb int3 insl mov xchg and scas cs mov lods ja mov mov mov add adc mov out out in jg sahf mov pop repnz imulb and or idiv (bad) int ret or je es aam test mov cmpsb cmp add xlat addl je push jge lock jne pop dec outsb ret xchg sub inc andnps notl ret adc ficomp xlat or pop cmp jae lret mov dec push (bad) mov inc (bad) xchg cmp sbb rorb jmp dec mov adc test pop push and mov lret jecxz jmp in jge push or stos lock mov jmp xlat and in jb (bad) cwtl jmp cmpsl arpl lcall out lods or jge fidivr mov add add scas mov sahf cmpsb add mov xor shr add lret xchg mov daa cltd mov aad loope (bad) pop inc daa inc ret scas ja out mov cmp sub scas fcoms inc push rorl mov pushf (bad) dec cmp mov and test cmpsb outsl (bad) sbb mov add mov pop in hlt lods lret mov jge call and aam dec xchg mull (bad) pop pusha mov mov jno es cmp jecxz cs lds lea cmp aam ret (bad) iret (bad) sbb pusha mov jb lret (bad) repnz fildll leave maskmovq inc (bad) fiadd mov test subl add fiadd push movsb dec lret lods push ret sbb mov cmp inc dec mov in nop adc cwtl jp mov sub shrl lock insb mov insb aam scas add in pop mov push lahf sbb pop call lods (bad) and out test fsubl jo cmp sbb xchg cmp sbb dec pusha jne fcomip jo test mov xor sub es dec mov aaa dec add stc dec and or jecxz movsl fidiv xlat loop clc xchg add lea adc jmp xor les push push je mov imul hlt dec mov push inc stos repnz pop cmpsl in sub and xchg sbb in mov int dec stos push nop cwtl das hlt mov dec imul in pop xor aam aam cmc in test pop mov cs xor sub inc mov xor subl lahf daa fs arpl xor fstps mov pop dec lahf gs mov or and inc arpl xor xchg sbb sbb inc dec inc adc push mov cwtl daa icebp pop rcr scas jecxz dec mov test inc test dec xor cmp aad xchg adc repz ret push pop push inc int pop scas out iret dec popa xchg xor jo lds aad rorb lds xor dec scas stos ljmp call cmpsl cmpsl cmp fiadd lods in cmp loop pop loop (bad) dec mov (bad) mov scas ficom dec ficompl bnd adc dec mov inc or add out xor test or inc dec mov mov ja cmp lods js std xor pop pop push cwtl cmp xchg push mov aaa repnz test in xorb pusha test mov lods aaa loope jge xchg lret add sahf dec lahf sbb jae inc cmp repz outsl cmpsb rclb cmp (bad) xor pushf push lock mov jnp fildl imul loope jbe mov mov dec xor and int3 outsb outsb lods (bad) ljmp test lahf ljmp loope repz repz icebp ret or mov imul imul sahf cmp mov sbb mov mov mov sub cmp stc jmp pop int cmp adc dec add or jg (bad) cmp mov xor in fsubl lret mov or cltd jns addr16 mov pusha jo js mov dec or test loopne js into clc pop push lock out mov icebp dec jne ficompl adc xchg mov add xlat push and jne fwait imul clc pop out sbb cmp and in xchg xlat push (bad) and xor and fsubr ja xor call or cmp or dec jg das xchg cmp xor es and and xor stos std adc mov dec push flds mov inc das aad pop cltd enter jmp add out testb xchg cmc icebp cmovnp inc lods cs fmull outsb je and rorl in aas rcrb dec pop clc cmp gs adc sub stos xchg jns fidivrl push sbb mov (bad) adc or sahf in repz xor xchg test mov mov mov mov fmull xor jnp mov cmc insb dec or mov scas dec mov adc fnstsw sbb pop sarb xchg leave clc in dec test loope xor ljmp (bad) rcll dec sarb jp lahf pop fstl sar sbb xor mov adc fsubp push adc mov movsl xorl xchg inc subb hlt mov inc fs push jmp (bad) hlt jbe xchg imul lret into nop add mov cmpsl mov call pop dec push clc fwait ja or mov ret ret int data16 sbb lret xchg cmp pop xchg xlat rorl clc in or or mov mov xor sub fwait mov push out rcll js mov loopne xor xchg pop mov mov and sbb sub aas pop add pop sub mov sbb iret mov mov sub add out add dec inc int3 and jae (bad) cmc arpl mov (bad) insb mov adc adc dec ss stos fs out pop frstor pop jmp inc jle and sbb inc jbe hlt in and pop add xor sbb push mov gs push sbb add push loope lret pushl idivb jmp mov test icebp mov mov and inc xor and js or (bad) push mov push jb jo dec loopne lods cli pushf jecxz cmpsb fstps mov movsl pop mov clc jle add sbb cmp sbb adcl jl test (bad) xor fs cld stc cltd xchg jno ljmp inc insl inc dec std loope jbe pop mov sbb sarl or mov mulb pushf fbstp push cmpsb fistp icebp push mov scas jle xor dec pop je add cltd pop jnp pop pushf inc sbb mov xchg fstps cmp inc in aas daa clc adc int3 push mov inc in loop xor cwtl js call jge in and mov scas insb fbstp leave dec cli add (bad) jno shrb push adc out int dec dec fdiv gs nop and xlat in mov sbb js jo test push jno jo mov push test xchg ret sarb (bad) ja adc rcr xchg out dec (bad) push or test push pop sub xlat mov jo js pop push icebp adc sbb xor test jno mov xchg sti add (bad) test scas leave dec test sar test (bad) (bad) out movsl sti sub ljmp int inc jg mov xor mov sub in loopne xchg xchg mov in xchg fs dec fld jb lods sbb shrb imul pop stos dec fidivr rcrb fadds push movl icebp stos sbb adc jne xor (bad) xor mov dec lds into cmp mov xchg insb das cmpsb rcrb lret jo je inc in push sbb xchg xor push mov pop notl add and xchg jns jno js mov jmp adc inc add ret (bad) mov adc inc (bad) pop inc xlat push cld fstps adc test fs sbb push sti xor and or mov sub inc xchg cmovle rep sbb inc lea lds pop and pop aad aam out mov add ret out sbb add xlat jb mov insl cld mov sbb mov dec hlt pushf dec into rorb enter fistpl int3 jns fwait xor xchg stc pusha sahf fstl mov movsl jl pop pop stos inc jo jb or pop std out test mov and ss ficomp or push inc xchg lock inc jnp imul mov sub clc stos cwtl jnp std test mov aas cmp cmp adc aam inc inc dec lock pop jge pop cmp lods (bad) fs iret and push cmp jne mov xchg cmp stc rcr cmp push (bad) int in jmp adc pop and sub inc jo in scas insl xchg jo mov out iret in mov pop jecxz jno push cmp jmp jmp mov ret inc addr16 out or xlat ja push mov stc std adc ret sbb les mov std outsl inc pushf js adc jge mov sbb xor and loope insb mov into inc inc jp jae es xlat sti test xchg xor or pop inc mov outsl lahf popf lahf cmpsl mov jle rep xchg mov xchg push sub ja icebp mov and cmp gs movsb mov test into (bad) jae mov popa jae cmp ds cld dec mull aaa xor jecxz lahf pop dec mov gs mov fidiv sarl pop mov imul dec push pop pop mov ss enter repz xchg cmp stos mov push cmp (bad) (bad) push loop or xchg out ret icebp mov dec mov in jae jno idivb lahf arpl movsl popa cmpsl scas or lods lcall cmpsb (bad) xchg push dec or cmp dec jnp dec mov addr16 xor inc cmp andl mov cs cmc sbb mov or out lock orl jle add pop mov and fisubl lods mov es adc cmpsb fwait add mov jb fisttpl mov shlb push pop aad mov mov xchg xor mov mov adc sub xchg push dec xchg inc fldcw out add cmp insb pop pop or mov fnstsw les mov jns sbb divb jne mov test cmp mov lahf sbb xchg movsb sbb jg adc loopne inc frstor sbb adc loope in popa pop shl (bad) sti (bad) dec iret push icebp xor sgdtl movsl (bad) jne mov cs dec jg (bad) in lods pusha out shlb push outsb push sub flds fcomps sub icebp inc add out aad pop ljmp ret fst mov lret push into lret repz jns jo aad out shrb jnp push cld mov hlt (bad) lock adc out xchg adc pop jp ret mov jle outsb imul mov add outsb jmp mov jecxz (bad) cmc inc sub rorl mov mov push xor popf xor sarl add jae push scas (bad) xchg cmp arpl dec dec fidiv lds mov arpl mov (bad) outsb adc mov inc add adc xlat repz mov xor iret into push les pop cmpsl mov xchg cmp cli jp aas fstpl rolb push jl mov fiadd sbb add ljmp inc and lock lock mov or add (bad) dec test enter mov mov pop adc mov gs push fsubrs lcall add push stos xor pop inc mov loop adc mov mov bound out jecxz push loopne les adc into (bad) mov daa orl (bad) mov xchg dec cld leave jecxz jnp imul push mov inc xor and push lret lods pushf arpl cmp repz pop cmp int or cmp cli pop jo inc insb loope cmpsb xchg mov (bad) sub and cmp decb insl mov sub loope outsl js (bad) push (bad) je gs mov fimul mov push lods (bad) add aam sub and pop dec movsb mov int dec stos test sbb out mov mov sub xor mov dec insl and cltd adc inc jo adc mov ljmp xor cmp imul or mov mov cmp mov push aam jp adc mov cs push cld jns mov dec icebp dec or pushf mov int3 lcall pop dec jl xchg pop mov pop fwait xor or or aas inc add xchg in push mov lahf cmp mov pusha dec insb out stos push cmc lret push out mov aad lcall inc mov mov or data16 test mov sbb orb scas test add and pop xchg pop sarl aad das lcall incl jns cs xchg xchg push insl add fisubl cmpsb sub sahf loop xchg lret mov out clc into pop mov inc xor fsubrs mov cmpsb cld mov pop sbb test neg ja insb mov out inc xchg aad jl push imul lret cwtl cmp test in or scas stc sbb test (bad) in cmpsb insb cmp lods jno clc in out mov and ss add movsl addb rcl rcrb mov std pop mov in mov xchg pusha inc cld out inc inc mov movsb insl xchg pop jp or sub ja mov pop aas std test xor leave movsl cmp insl push popf fldt mov fcoml cmp stc add gs aaa jae es cmp movsb or jmp mov movl std sub aaa mov or push jne out xchg cmp jb mov mov data16 (bad) xor fs icebp jbe dec xor or rorb addr16 lock movsb mov mov sub shll mov into push mov scas pop stc sti lret ljmp xchg mov mov pop and jl jo xchg ja push ret dec rcrb in sahf ss je and ret push cmp loopew mov or int inc add stos lods mul in jbe (bad) mov xchg shlb push popl adc pusha popa sub out push (bad) insl test das dec arpl push and gs and shrl insl inc iret or bound stos push loopne push cmp sub fldt cld mov ljmp adc sub add cmp lds add outsl mov (bad) jns mov cmp push insl jns hlt or es je lea loope add or add cmp (bad) aaa inc xchg in imul fwait stos popa mov add or sub test lea je jl ret sub insl mov adc insl call sbb or dec cs push xor inc inc repnz dec es and jmp in test scas aam cltd cld daa arpl mov xlat dec insl mov loope enter fisttpll dec out into test sub xchg lea inc or aaa mov popf insb dec fiadd dec push adc xchg inc fidivl data16 xor push or push mov cmp (bad) aad xor ljmp jns push push pop push or pop (bad) loop in push and mov aaa loop in and int dec sbb sub popa push cmpsl jl mov decl dec mov aaa add pop aaa (bad) gs pop cmp ficom add push cmpl scas outsl xchg sub sub xor mov push xchg cltd scas pop sbb (bad) je add in out jge xor adc push xchg imul stos and fisubr mov dec mov sbb stos jno sub lea lea lds pusha xor xlat cmp cltd sbb mov inc mov jne js ret lea and shrb lret jmp jmp outsb fadds adcb in out (bad) ja or shl cmp inc mov in jae pop push push stos or roll xchg movsb push out jns dec test mov xor add bsr cmpb push jmp jns nop dec jmp adc and insl ret xchg ds ficom adc stos iret mov ret repnz jmp cmp mov inc pop cmp cmp inc dec sub xor push pop push dec dec xchg sarl jnp ljmp movsb loope repz push pop xchg pop les jne fsubrl aas xchg xchg and in sbb hlt sbbl inc (bad) int adc orl lods mov xchg les mov push stos jg into xchg jb adc aas popa popa into movsb fisubl loope (bad) mov dec loopne mov xchg cmpsl les cs cld pusha sub add loopne or insb xor and fwait mov sbb and mov cmpsl or (bad) and xchg cld dec adc or jge push jg mov daa or gs push sbb int push fdivrl xchg push imul cmp (bad) int test pop sahf popf inc sbb cmp pop lcall xchg cmpsb call pop int adc mov mov sbb fnop nop pop loope jnp sbb mov and pushl and mov stos mov pop jge adc das cmp in aad es ret (bad) mov push mov insl iret (bad) popa pop outsb sti movsl pop lahf xorl cmp loope pop nop adc mov jl andb fimull sub and call inc sti fisubl mov fiadd or push cs into icebp lcall xor adc aas jg jnp add mov jle imul pop dec sub fsts xor add (bad) sarb cmp fadds xor mov xchg fdivrs sub in push out (bad) xor stos movsb loopne iret pop rcl inc or icebp xchg adc sub push xor lahf xchg adc cmp pusha and fdivl xchg adc push out cmp pop stos add xlat dec add cwtl aaa xchg jns cli cs mov daa add sbb pop rolb pop jne cmc xchg sub das shr mov and push sbb inc cmp mov sub mov push imulb sbb jle adc xchg (bad) loope jb xchg lea call (bad) and dec ret jge or ljmp add sub fisttpll andl push (bad) out pop mov mov pop jae sti pop pop or add test fwait jl cmpsl pop dec cwtl pop mov adc xor lods cld dec ljmp and jecxz mov xchg xchg aas orl imul les sbb lahf lock sbb xchg pop sub jb mov mov mov push push adc aas push cmpsb dec fsubp out dec sub mov insb jae ficompl loope cltd ret sbb lds push inc or and pop sub movsb std fisubl ror inc jecxz ds (bad) stos movsl aam add imul mov sbb fiaddl pop sub loopne leave mov jnp pushf add adc and xchg into inc dec insl imul jg mov out sti pop out sub imul movsl jge push jnp,pt push mov push ret jno (bad) mov and hlt shlb popf into jge icebp jo scas mov cmp montmul cmpsb andl xchg pop ds (bad) inc and into imul mov fstpl mov jb xchg sub stos or out int fadd xor pop clc in xor pop and jmp ret adc jns mov and inc mov add cli ds mov jecxz sub les fistpll stos out inc in mov sbb daa add xchg mov loope mov lds adc inc adc dec nop dec (bad) xor fsts add cmpsb data16 mov ret sahf push sarb outsb dec jb and xor test add das mov ja pop pusha lret cmp daa rorb add pop sbb inc popf jge clc in or les mov js rol inc jbe sahf lcall push jl sbb cmp jle (bad) data16 sbb cmp aaa fsubrs cmp out repz rorl mov and adcl pop fidivl mov fistl fs adc scas jo push nop jb sub imul dec stos xchg cmp pop lret es (bad) pushf (bad) cwtl dec lock aad iret sub cmp push aaa sahf inc testb popl sbb mov in aad mov and inc js movl bound mov loop adc lret aam rorl mov iret jp jge inc lcall int3 xchg dec xchg lods xor rclb pop mov movsb js inc add push mov and lret int pushf lcall (bad) (bad) popf movsl js (bad) cmpsb (bad) xor sti or adc fadd xor ret mov outsb xchg test dec mov sub cli sbb clc into es push push cmp lahf pop pop test pop mov pop push bound and mov jno add adc leave xor xchg push pop add xchg jnp (bad) sbb (bad) je add loope jns mov adc sbb ret fwait rcr std sbb les mov push loop jg adc jns (bad) in loope rep stc dec scas cmpl mov loop cmpl movsb insb adc pop sbb loop and or jmp inc pop cmpsb imul mov incl (bad) and out outsl (bad) fldt dec jp std mov inc test dec sub xor jmp mov mov dec insl mov jb dec fdivrs ja (bad) adc movsb pop cld jecxz mov pop sbb es repnz mov lcall push int xor or mov adc sbb movsb test mov mov out jmp mov or stos pop dec insl push jmp and jns movsl pop xchg (bad) fsts (bad) mov add inc andb sbb repz sti lods test fcmove sub rcl jo adc inc sti std inc dec mov bound out rcl push xchg ret sub rcrl pop in mov cwtl xchg inc xor jns mov jge imul inc (bad) scas dec sti call pop lods inc jne jmp and add or imul iret mov or mov jle pusha pop add xor dec mov addr16 (bad) out jl dec add (bad) sbb xchg std ds add jge bound or push mov pushf add daa mov jno jl or or xor out (bad) aaa sub mov rcrl sbb pushf arpl fidiv (bad) mov popa add repnz imul sub push xlat adc in pop mov mov ljmp add fidiv mov xchg rclb and pusha (bad) mov adc mov lcall adc cmp jae (bad) enter outsb mov or xchg fcmove pop insb push gs ss cmp xchg or lods les cmpsb in push sti and add arpl jnp ret outsl jae adc lods sti xchg (bad) dec adc scas into cmp (bad) fld gs jg jg adc xchg cmpsb jo xchg cmpsb daa fdivrs jmp outsb dec das pop fs out sbb pop pop test ret and mov adc jns xor push pusha inc xor adc mov in add shlb dec test in jmp push sbb cmpsl loope jbe clc (bad) lcall (bad) rcll mov in and std mov pop fxch leave jge fisub lret pop (bad) lret adc xor insb mov lcall add adc out mov lret or int3 push mov arpl push lock or dec (bad) clc mov sbb in in add pop xor je push pop jnp jle mov mov sahf ret insl push les shrb jo add mov in ds sbb lret mov repnz (bad) rcrb (bad) mov inc (bad) push mov xor mov mov and push je popa adc js shrb lea call (bad) xor sbb jp xchg or xor idivl cmp out adc lea push push sub hlt add push adc inc repnz mov fidiv cwtl mov cli jbe out popa jl enter lock in rorb rol in add repz (bad) sarb mov (bad) fdiv and cmc push dec add out frstor sti mov je lcall jecxz push lock xchg sbb lret jge cmp push xlat jo fdivrl (bad) daa jl add divl inc out mov repz cmp mov in (bad) jnp jne popa xchg xor lret xor in dec lcall mov mov xor bnd scas jmp shlb xchg aas jge test add repz add push mov mov push sbb pop xor std add and ss xchg dec sbb xor xor lods mov int3 ja cmc adc mov push ret je inc pop xor pop rcrb fiaddl testl mov cli jnp xor std in dec cmp fwait jne sbb mov lds pop cmp jns push loop adc jne sbb aad push out fnsave xlat push and aas fcmovbe out push dec jno out das adc aaa push inc sub inc lods xor clc sbb inc dec pusha cwtl test xchg mov xor dec mov jo iret adc pop fildl push pushf sub fwait and negb dec adc push mov inc jmp add test mov mov and repnz rep push aas jecxz mov jno sub lods (bad) pushaw jp ret mov pop (bad) mov add adc loop xor push out in jns jmp cmc (bad) sbb (bad) jge pop cltd sub mov (bad) lods lock cmp out ja decl movq stos stos jl pop cmp (bad) xchg mov jne xchg or ja lahf mov out jg (bad) aam cmp std jo cmp data16 fdivs js mov push in push cmp (bad) int3 add push cli shr pop mov ret fildll lcall jmp fs sub lock adc (bad) dec lods dec push jle mov xor jp lods xor push iret (bad) mov es lods dec jno shl xchg data16 pop push pusha fwait loope imul mov ljmp imul aad dec scas add xor int mov ret xchg cmpsl int3 or xchg and loop push push loop into inc push out mov pop mov cmc mov (bad) dec adc fidivl jmp (bad) lea fwait inc rcrl or mov sub add (bad) data16 arpl stos inc popf pop subl pop mov cmp jp mov pop imul mov or xchg or cld lret push xchg jp into in jns ror xlat nop cltd mov or (bad) and cs mov inc (bad) stos loopne inc popf pushw mov rorl out and sub out xorl adc sbb dec jge lods jb movsb adc pop jle adc xor xchg addr16 and cltd mov bound (bad) nop pushf loopne sbb mov jbe aam xchg fidivl xor mov adc orl insb sbb (bad) shlb push xchg incl les dec test or pop adc mov cmp add mov (bad) adc rcl mov mov mov jbe or jbe xchg cmp aam cmpsl mov xor dec neg sarb jae mul scas jl push mov dec (bad) pop and xor movsl dec hlt fdivrl add lret mov (bad) and inc jnp mov pop cld xlat std xor cmc out jl lods imul ss je and nop ror mov mov pop jae add sbb inc enter (bad) stos mov jg mov pop cli in (bad) and inc call fildll std aad test adcl les mov es stos pop fcos sbb jbe sbb or mov loopne jbe movl mov sbb call out repz dec mov out pop (bad) and lret jbe inc pop jmp push outsb add adc bound (bad) iret ljmp mov dec faddl mov jno or ja and fiaddl mov push dec jns mov mov loop mov out int3 mov mov enter ja mull pop cmp jp shrb cmp add stc jmp inc adc jge mov push jecxz lea cmp loope sahf lahf (bad) xchg sahf mov es add stc (bad) (bad) bound jb inc addr16 add xor out sbb test inc or add sbbb pusha jno add pop aaa mov inc leave dec (bad) mov xchg frstor sbb xor add inc mov or out into mov push jns jns sbb mov push fstpt fcoml add fadds fs hlt lcall sbb jo rcl dec int3 sar push les cmp lahf xor mov push das in outsb loopne dec pop dec dec data16 dec (bad) mov je mov xor push jl and cmp pushl mov (bad) (bad) pop jae xor cmpsl jmp je test std das lea sbb mov adc aaa cli test iret dec mov or gs jp sbb cmp mov cmc lods jnp scas ret mov aas sub push or out stc test nop jns je add pop or and push fldl js sahf call es aas sub mov push in sub sub fwait mov ja dec je (bad) sbb das dec std or jbe cli sbb pop push mov pop test and mov mov inc xchg mov mov dec mov ret dec adc sub sub xlat inc mov fmuls inc or sub xor jmp xchg dec adc lcall lods js sbb call lahf xor xchg lsl movsl xchg or loop pop and mov cld test jb mov mov leave pop mulb out rcrb (bad) mov (bad) leave call xchg pop int3 jne and and sub lret leave jmp xor ds xor lcall xchg push dec orl inc mov sub nop int3 add rolb aad jno int test add xchg xchg inc ljmp cmpsl rolb push fwait fwait cs sub push (bad) cmp out or js andl push jns mov nop rol sub call roll xchg mov sarb xor or out stos rcl add pop or pop movl es jmp inc adc and lahf pop fcoms mov adc mov push (bad) fldl2t ds jo jg sub icebp mov (bad) cmp stos scas mov test xchg test das stos out arpl (bad) aas scas xor mov or sub shlb jecxz xchg ret sub cwtl ret jge mov dec sbb jno js pop add xchg push imul lcall mov pop out mov pop (bad) in iret inc (bad) sub mov xor mov stc push in mov jo jno push jne jnp lcall sti adc mov mov (bad) cli dec mov sub jae sub daa fmuls mov sbb fbld scas push insb leave push adc sbb ret gs out inc ss xchg push cmc jp jmp daa pop (bad) pop and sub jb mov popa cmp pusha jg movsl and addr16 push and int3 xchg push jne cmp xor add popf inc lock push xchg inc movsl test lcall xor out inc mov pop pop repnz adc pushf inc div xchg lock loop (bad) mov jns mulps pop inc sbb data16 dec test push dec outsl dec test in cwtl push and cmp jecxz add jno lcall pop mov xchg mov daa or add push xchg cltd jp inc dec call pop xchg ret mov nop sub pusha push jmp dec adc js (bad) les add push xchg rcll and mov pushf mov and dec addl aaa and add pop mov jecxz lock jge sahf jb test mov inc cmp mov sbb loopne adc cmc pusha mov mov (bad) (bad) and jge lcall lea or jmp cs imulb cmp in jmp push inc in aam test ja push stos out dec int3 sub xor scas sbb inc pop popa pop pop push inc adcl mov mov jne scas sbb repz push dec pop hlt test (bad) adc add mov jecxz or sarb stos pop cli xchg lds int inc (bad) insb loop xor and lret push (bad) dec js or push jo fwait and ds lcall sub les (bad) xchg push ljmp mov sub clc xor mov mov stos mov cs add push cmp xchg ja sahf or and repz js sub enter mov lds cs fstl addr16 sub dec mov cmpsb jbe daa cmpsl mov pop mov mov sbb jmp xor cmp sbb enter sbb inc cltd pop or inc repz mov push xor xchg jmp xor mov sbb push rorb jmp mov pop daa popf test push dec das scas fwait (bad) mov cs adc push cli mov and cmpsb (bad) in call cltd mov (bad) icebp dec lods pop mov cs ret sub imull sub je mov int3 xor cmc jo dec cltd xor push dec int xor push sub into je jg and mov (bad) fwait lcall adc mov daa loop dec pop push das stos repnz push sub adcb push dec xor sbb loop insb jmp das stos push dec and inc cmp cmc jp xor and shrl bswap mov mov mov mov jb (bad) add sbb clc and data16 sarl gs pop outsl fwait add cmp pop ja adc aaa mov flds push push jne call loop push (bad) loopne leave call inc dec pop add sub (bad) add call or adc aad arpl out gs xchg lock inc jge pop (bad) ret cmpsb inc mov lods leave cmpsb lret dec xchg dec jb jo mov outsl adc pushf fstl rcrb adc ret fcmovnb data16 addl pop aas dec cmc mov mov inc sbb cwtl les pop mov pop nop mov and mov push ljmp popa sub pushf loope and pop add xor inc ja pop shlb addl rorl scas jge or out push add push out movsb xor inc pop xchg ret int xor out jno sbb add movsl loop pop ss inc push dec int cld sbb mov xchg jno mov add jb repz xchg jns pop pop lahf sbb arpl movsl rclb call and aad daa adc inc (bad) js roll jecxz ficoml xlat pop or scas test sbb or movl or lcall xchg jge hlt leave jmp daa pop outsl lret loopne cmp pop jmp xor jmp pop push or out or dec pop and sbb or adc or test cmp push cmp xchg add repnz jmp sub call popf jbe repnz cmpsb dec pushf cli insl js daa sbb jp pop lret outsb negb (bad) xchg xchg inc in fimull mov loope mov clc pop mov xor leave adc outsl and roll mov cwtl out xchg enter sti mov mov pushf jae stos jo sbb and enter cltd sbb and push add push cmp ud1 cmp xlat inc pop sub stos fild xor sub mov xorl nop outsl cmpsb mov push bound dec adc push xchg scas lcall in ds jmp jle arpl sar cmp pop push sbb push outsb loope stos fldcw imul adc push jmp fs pop push loopne or nop inc imul lea dec test adc (bad) cmp aad inc mov push and sub mov push lea push sub ret fs lods loope sbb sti in mov inc mov xchg stc or dec cmc mov enter test push xchg lods push inc add addr16 mov mov or pop cmpsl mov cwtl jmp dec out sub dec (bad) (bad) adc push mov and sbb push fcoms push int push bound mov hlt fmuls lds inc and mov sub sub (bad) mov mov xchg sub mull cmp loopne jle arpl addl lea add movsl xchg (bad) jb leave jle and lods mov mov dec pop mov hlt gs inc fwait mov pop sbb test test outsb xchg scas mov dec pop test and push cwtl dec dec add in fidivrl xchg inc das (bad) repz mov vpackuswb push inc or inc lcall je inc dec jge test fimull mov enter aam mov mov test (bad) push ja add push aas aad dec xor dec lods andb xchg mov dec push enter adc or xchg fisttpl mov je pop push dec or out fsts not rclb test or outsl push dec inc sub pop jns cmpsl mov adc or xchg push mov shrl push jecxz adc jmp mov aaa or in mov (bad) imul lahf into out outsb es out leave lret test out and lahf add aaa cli insl push adc das out daa xchg ja movsb (bad) cmp js leave mov mov pop lds bound pop or clc out cld lock inc (bad) pop jl jecxz cmc mov pusha into data16 pop loope pop lds push jg sbb flds cmp pop push jl jae push out pop out (bad) sub push add test cmp inc mov and in cmp jp insl push cltd jle jns and data16 outsl sbb add cs push xchg pop (bad) xor add push and insl call xchg loopne pop (bad) repz push loope,pt loopne xchg sub scas outsl xlat lahf stc ss and gs cmp mov fstl loope push loope sub pusha xor xchg das je pop mov push add fdivrl push stos (bad) push ss lcall popa pop stc mov (bad) mov idivl jae adc cmp test cmp mov sbb sub mov inc bound out mov ds pop fisubl or pushf test fmull push lods insb and test cli push pop push ret sar outsb pop or add fmul cmpsl sub push lds push jo or aad lea jmp stos stc push sub dec jmp mov in sub push mov into das clc inc inc sahf loop ds mov sbb push jns and sub push sbb loop out scas cmp mov or out jb cmp pop push popf jecxz push sub push push (bad) js pop fstpl jmp outsb cs sarl (bad) sub stos lea mov and adc lret cwtl ds adc leave fmuls mov dec or pop sbb inc inc scas aaa aam out fstpl out aad pop pop xchg cmp ret idivb xchg aad or push xor (bad) mov cmc lea loop pop push (bad) dec jg push pop ret aaa call dec nop push add add std lods pushw jne inc jo push sbb pop mov cmp cs ret mov xchg pop push imul cmp xchg xlat in push dec sbb and or scas pop mov mov adc scas ficomp daa push push inc scas push pop inc or or clc mov adc fsub in dec (bad) fstl mov fs sbbl into inc pop dec add (bad) and xchg out push dec outsl jle sbb pusha push fcoml dec sti movl shrb dec mov inc mov xor xorl lock scas inc sbb (bad) imul jle adc mov (bad) lock add repz ret dec (bad) mov aaa fldt pop jmp sar push jns das lcall scas lods popf or push adc adc test xchg cld xchg lods rol lahf stc mov dec sahf adc pop cld mov adc out mov js or inc arpl fnstsw ds push jne sub adc adc sub xchg shll inc push js inc pop lcall cmpsl cld ret subb pop xor addl dec or cmp and (bad) and fisttpll mov pop (bad) sub xor or push out repnz inc test xor mov mov push pusha mov add inc dec or cmp mov aaa and jnp cli mov mov fildl aad out fiaddl mov inc lahf es imul mov mov mov (bad) jl dec test jg cmpsb test sbb adc xlat add cmp bound mov sar push aas cli and dec mov push cld mov mov in loopne jmp dec mov out xlat mov mov push mov movsl xchg pop or push adcb jno or cld les or mov ljmp jae outsl (bad) movsb aas cmpsl ret cmpsl out paddw rorl mov mov dec cmp xor sbb ficom lock mov mov (bad) pop pop and sub cmp adc int3 (bad) xchg rclb ljmp pop inc sub add add push es inc cwtl psubw sub fwait xor les les adc test fsts cltd ret pop push mov add fimul inc mov test scas das data16 out mov aad sbb push inc mov movsb imul or pop jbe gs insb xchg sbb out xor mov cs mov xor cmp out mov dec popa mov fiadd add fsubrl lds mov mov dec div push or cmp pop outsb sti pop adc arpl or fbld push cmc int3 movsb push pop fcoms (bad) or xor out ds shrb mov push dec fdivs xor pop fmuls sbb cs out inc outsl (bad) cli jl cld and and jae xor dec dec (bad) icebp jge rcll mov pop mov push sbb pop ss cmpsb or pop dec mov in popa sub cmp daa dec out sbb mov dec mov dec push fwait lea push xlat stos jb int3 xor dec mov adc fistl cltd dec mov jmp mov pop jmp xchg cmc bound jecxz cli mov mov and shl dec sbb lds add dec fsubr jp push dec repnz dec push and test sti mov jge stos (bad) pop or mov or pushf jl lea inc push jl popa push aaa shrl (bad) mov stc cld outsb into sbb push roll mov push sub inc mov (bad) mov cli jae cwtl xchg dec dec jo pop pop pop lret and adc rcll cmovne out lea iret inc in cmp xchg loop xor and dec adc push fistpll movsb adc mov sub push inc test in test les ja shrl test bound outsl mov je int jmp mov sarl or dec jae cmp inc jl lret (bad) push jg lds pusha test cmp leave movsb jl mov fs (bad) sub xchg mov cmc fst out les fisttp push add pop pop (bad) negl or push ret mov pop inc add jl ret jmp hlt inc pextrw pop lock addr16 popa mov push pusha mov pop mov sub icebp leave push in xor inc loop and sbb xor push sbb mov adc in les jb lret or cmp sub lods add test or dec dec xchg or pop cmpsl and outsl (bad) jmp mov in or and ficompl add clc jae rolb (bad) xchg xchg fs dec push nop push bound sarl jle inc in push and push sub out mov stos lea push cmp js shlb popf mov int insb and xchg scas lock mov lret mov cmpsb jno cmc cli or lea or cmp and pop daa pop pop pop out lret inc cmp call scas rclb (bad) (bad) (bad) ret gs fist in sbbb cmp cmp incb mov mov xor adc cmp fs mov dec sbb sbb repz in lds adc loopne jecxz pop je in ss push xor shrl sub cmc sub lcall dec and jnp mov push or outsb test and push fiaddl js stos jno sub (bad) in mov pop (bad) outsb (bad) push inc or (bad) aam jle cmpsl in jmp cmp jmp in sbb mov mov mov pop aas ds ds repnz mov test sub add or sbb std xchg (bad) les in cli daa xchg stos fwait pusha cmp std mov movsl xchg xlat iret mov shlb push add divb faddl or mov inc sub dec out push mov loop mov pop sub loopne pop jns hlt movsb push dec fmull push cli negb or call jge leave pop hlt movsb leave sahf cld ficomp dec jnp jno xchg movsl out bound (bad) sti inc inc shl jp test add inc mov popf popa or (bad) (bad) mov mov je push aas or insb xchg add (bad) jmp out leave xlat je in cmc stc fstl dec out pop mov loop cld icebp and mov mov test fdivl loope in ret je ret dec push imul fdivr testb pop mov (bad) mov mov faddl cmp cmpsb call data16 cmp adc xlat lret jecxz dec sbb push decl fadd cmp out mov or mov lds lds cmp arpl daa push icebp xchg dec mov (bad) icebp sub mov stos (bad) jmp subl sbb sub lea movsl dec mov loopne or mov sub push fisttp cs insl push pusha mov aam sti mov xchg ss out mov test xchg xor xchg addr16 fwait mov mov mov aad xor sub lahf addr16 jb push push fsubs jecxz test or fisttpll mov push pop insb loopne ljmp inc mov lret pop scas mov inc push (bad) pop add inc mov lret lcall pop mov (bad) pminsw sbb fldt or jg and xchg push scas push inc xchg and sarl pop aaa mov jp clc jmp sbb pop pop lcall pop or frstor repz jae push mov fisub imul mov jb rep cmpsb aad jmp xor sarl (bad) jg sub (bad) adc nop mov frstor inc pop xor imul pop (bad) pop cmp pop out es xlat xor add leave jmp ret cmp mov iret in mov cmp push xor pushf in mov data16 out in adc add in sub aas fisttp aam push push in out jnp popa ret sub mov inc xor pop sbb mov pop jb pusha loope ret sub and adc sbb in divb adc xchg in jl ja js mov sbb dec imul push and adc sbb lds in dec pop aaa in les andl mov les xchg add sub sub jl shlb inc adc test xchg cli aas insl inc out mov adc pop jp dec pop mov sub xor fsubrl mov or test pop into idivl inc gs pop xchg shrb out stc xor out jle adc cmp aad outsb (bad) mov jnp test xor leave aaa jg cmp hlt jb mov in das xor or jo in lods call inc mov lds ss loopne xchg into and fptan sub test push aad gs or sahf jo sbb fcompl movsb push mov aas cmp out mov fildl imul test sub jbe pop dec test mov int sbb xor jp add jg adc jp or cmpl mov push pop jmp lea sub insl xchg es mov adc pop (bad) test lret ja push xchg aas mov add repz xchg push adc pop add std stos sti das push inc dec xchg mov mov enter lcall adc push test outsb ljmp fdivrs icebp in sbb mov loopne xchg sti fldl ss mov out test add icebp fcomip cmp inc xor hlt xorb js jne pop test repz adc movsb mov enter test test xor xchg and inc or pop lods cltd mov dec lock stos aam loopne fdivl mov into and shrl adc sub cmp jg mov ret insl pop jmp jl xor sbb icebp cmp or inc popa mov cmp xor jle inc pop aaa and xchg jns sbb dec mov lea test xlat pop je xor iret jl cmp jnp jle mov mov aam and cmp movsl mov or int3 (bad) negb je jmp hlt pop (bad) mov sub mov out stos stos or pop sbbl test mov sub add or and add pop mov popw lods clc mov fidivrl notl sti pop push je fsubrs aad mov jb jae mov lods rorb in push jbe xor mov (bad) xor cs iret popa stos sbb mov xchg xchg (bad) mov dec (bad) lods fs lods mov pushf xor je jb add or pop sub xchg jp fwait fwait ljmp and mov repnz psubsb cmp inc imul into sahf dec cmp mov mov mov mov xchg int hlt movb cld cmpsl iret adc mov adc inc ds shll out daa mov adc std inc mov (bad) sbb gs and ss pop lods nop sbb fstpl mov or fwait das subb mov int pop aam pop (bad) rorb out xchg sub cwtl scas repz mov cmp jnp dec adc dec aaa js push cld (bad) and add lcall (bad) (bad) lcall push dec ret add out mov xor adc pop cmp push das mov std int jecxz in clc xchg in add lds (bad) jns or sub shrb and ljmp imul adc mov jg ja cld call and notb js mov push and call int3 add cmp sbb mov jb or xchg dec jecxz fisubr or lods insl push stc out loopne xor or gs jae mul mov adc (bad) push fldenv fst in xor push fstpl mov or and rolb pusha mov mov lret ret adc aas adc cmc je or xchg mov rorb fcmovbe pop lret and imul nop (bad) dec popa xor stos outsl int3 lret dec dec xlat repz cmpsb add in push inc mov test data16 dec fldcw inc das loope adc in (bad) cmp aad sbb aam enter add aas push orb jae cld sbb sahf adc sub pusha test mov sarb loop cmp fwait jg loopne mov in jb add addl pop cmc out test jl cwtl aas (bad) aam sub lods and test push (bad) jmp sbb es pop xchg add cwtl les pop daa fldenv arpl or aad dec divb add cmpsb loopne das xorl mov ds mov or repz and jge rcr fs sbb xor shll xlat push pop aad push add das and in jg iret arpl out cmc or ret or pop nop pushf fcompl jnp add jle fisubrl pusha mov or mov insb and fidivrl mov xchg out mov rclb dec mov sti inc in int push loopne int3 jae jl dec out cltd mov jns add xchg pop mov jp jnp mov mov and sbb mov aas and pusha call lea inc ljmp fmul push xor cld push int jl in cmpsb movsb inc leave jno pop nop pop lods imul ja add adc pop pop fidiv data16 enter mov stc push lods pop mov mov cli push adc mov movsb add push pushf bound clc and daa (bad) mov sub out cmp andl mov jp xchg movsl mov push cld dec mov pushf je lahf push mov jecxz popf inc pop dec aam arpl fs or test pop arpl enter push mov call mov inc adc or imul out imul sbb jg sub in push movsb hlt or fs (bad) xchg fdivrs sub jns xchg and out mov ljmp xchg imul pop jb mov pop popf in sbb or cs daa loopne xor cwtl hlt mov into pop cmp push loope repnz dec pop and sbb xchg test (bad) sub jp,pn sbb inc dec push mov sbb out inc test inc addl push (bad) out insb push mov aaa ficom lods cmp mov push pop cmp outsl (bad) (bad) jne inc mov outsb xchg cwtl sub hlt lcall inc mov lds movsb cmpsb mov pop addr16 nop xor out xchg (bad) or sbb aam lods jne enter and popf leave movsb jp cmp fistpl xchg push dec adc (bad) mull dec fldl pop mov pop cmpsl ret cmp andb ds xorl pop mov inc push inc mov mov push cmp mov push push xor daa inc pop in (bad) ja call xchg pop inc icebp in add xchg mull xchg xchg out dec lea inc cmp jnp inc ljmp jge push mov mov mov imul add or (bad) enter jb xor jo cmp outsl imull and mov popa adc mov fwait or repz imull mov mov sub xchg in lock (bad) je iret fwait stc mov adc jae mov aad mov data16 xchg bound bound mov mov stc adc lea std mov mov cmp jb mov push stos insl mov data16 xchg add notl popa mov sub cmpsb fldcw mov or inc adc mov pop or pop ss sub add sub jns xor push imul fnstcw jge inc in or in mov cltd aas shr test pop adc notl mov ds data16 and in push jb fidiv stos mov sbb imul mov in sbb pop cmp test pop or sbb push cltd sub neg (bad) loope mov pusha es in push pop push hlt gs xchg dec pop sub imul pop push cld test pop and dec or adc insb mov and push mov push or sbb ret pusha enter ds ljmp repz mov and mov pop jns in test addr16 push jns push xor mov decb insl mov mov lds jg cli mov pop adc insb mov and (bad) mov imul call sub xchg in jmp fistpll pop adc push (bad) mov ret daa aad rorl mov xchg aas js mov mov fiadd dec mov sub cli jecxz cli inc adc sti idivl out mov lods add push cmp jb cmp sbb cmp jae movsl mov mov push sub mov (bad) xor xor arpl xor push mov mov inc mov cs sub mov xchg adc sahf dec pop stc cwtl sbb movsl ror out add mov xor jg daa movsl in fisubl fildll (bad) jns das add movsl or pop mov jl arpl outsb movsl test popf out fs push or dec jg dec adc (bad) out jp dec or lcall movsl adc shrb mov cld test ja into mov mov xor outsb fsubrs jae cmp rclb dec outsl inc add pop clc pop mov adc add push cltd or and pusha and xor sbb int3 loope jne push addb insl and pop jp mov (bad) xchg mov cltd adc out pop aad adc dec sahf sti ret inc xchg push xchg push xor enter mov stos call (bad) xor lret cmp rcl ss andb out sub push push in invd cmp mov mov jae fbld jmp js mov adc xchg lock pop xor je lods insb ret mov std mov mov cmp test dec stos pop in mov sbb dec push into lods cmp insl xchg inc imul out in lret shrb movsl repz clc mov stc mov push xchg xchg jae push shlb xor es push ja movsl cmp rcrl enter (bad) push int lea enter cmp (bad) jns mov leave cltd cld jo xchg adc xor xor cmpl out enter mov ret sbb aam in sbb rol cli lahf mov adc pushf out xchg aam scas clc enter arpl (bad) lock punpckhwd push pusha repnz dec insl arpl popf lret int (bad) mov test adc inc dec dec push ljmp inc pop cmp adc stos mov test cmp pop push xchg adc add sub cmp adcl or sub push inc mov aad imul mov mov xchg (bad) rcr mov and into cltd es dec jl jnp sti jl and adc push pop out pop clc and notl dec add pop mov xchg inc xchg jnp adc daa sbb (bad) xchg inc lods fildll or cmp push push lds sub dec call jle imul xchg pushf gs es stc ret mov mov cli cmp push or lods sbb fldl cmp rorb push dec int cmp adc inc pmaddwd jge and xchg jo jae or sbb xor push in lret aaa mov iret and adc leave pop pop in sbb fdivs jb fmull movsb dec mov jle cmp scas out sub icebp outsb in shrb iret add or push insb cmp inc jnp test cli pop ret or (bad) fs pop les xlat add aam add leave xor (bad) (bad) lret (bad) mov pop sub xchg out btc dec aam repz add xor add or fldcw push test das daa adc cltd xor inc jb fisubrl pop add aam mov mov xor inc xor popa movsl push mov dec mov xor aaa mov jnp push icebp cvtdq2ps cmp scas es xor aaa mov insl imul jecxz orb xor jecxz loop addr16 mov xchg adc mov and adc mov shl xchg iret scas test jle xchg repnz xor mov jmp rcr cmpsl inc sub lahf pop (bad) lret cmp add dec in xchg insl (bad) jns lret repz ret fmuls shrb fwait (bad) and jmp shrl mov cld scas pop out cwtl int3 xor xchg sti push jbe lret sub lahf (bad) rclb cs into mov xor push movsb pop sub add repnz inc je addr16 aam xchg sbb jg xchg inc sbbl test push mov jb and xchg das sub inc lea push sarl into push jbe sbb mov jge or mov pop fisttpll ljmp es roll cld adc pop movsb cmp xor aad push and bound ficom xchg jo and call ja movsb lret fs xor push data16 xchg lahf stos push inc (bad) mov lcall dec mov (bad) hlt bnd into mov loop in xchg mov shrl push es xchg sbb (bad) push movsl out inc xor xor mov mov mov xor lahf int3 xchg or loopne lret xchg daa inc inc test cmp out loop je push push hlt shrb movl lcall (bad) xor mov (bad) dec xor lea xor jge sti mov js dec jg xchg inc (bad) jo pop das and push dec and lret int leave mov pop sub test pop jle inc aam sub rorl dec mov sub ljmp daa pop (bad) push iret xor mov sub jg inc inc pop mov loope pop and sbb test daa push int shll test icebp sub leave mov fnstsw test adcl cmp push scas hlt add or daa pop in xor push inc out inc fnstcw cpuid lea adc (bad) repnz lods cwtl int3 mov stc cli mov (bad) popf stos test and aas push mov sbb popa push xor push sbb movsl jecxz sub sbbb pop cs js adc ss pop fwait ret xchg adc mov mov push (bad) add inc (bad) js outsl jmp pop add mov inc js mov adc cld cmp je push sbb sbb aaa addr16 push add mov hlt or xchg xlat push ja pshufw jae xor (bad) push dec cmp cltd push out aaa ret outsb inc or imulb sub ljmp and or js sarb mov in pop in aas cli inc and aam jl sbb sbb jb ret imul mov jnp rcrl sub sub loopne cmp (bad) xor les xor xor xchg fmuls ss mov outsb mov fucomi push or ds mov xchg sti mov insb jle into imul lods cmp sub add add sub push mov ret sub (bad) imul xchg dec rcrl sbb test dec xlat xor cmp mov test scas pop or loope push jl aas mov sbb lret cmp dec add (bad) dec repnz add mov push and pop push out popf fsubrl sub or js sbb pop stos test mov jmp ja pop hlt mov cltd dec call stc cltd sub aad inc les pop lahf add nop sbb test rcl cmpsl pusha outsb mov stos into das paddw addl lea ljmp inc mov lret mov jnp rolb jmp icebp adc lds aaa mov call inc and push xor sbb mov inc mov dec pop dec cmp insb lret or scas push int3 imul push mov andl lret ljmp mov mov cmp subl pop std fiaddl or orl pop mov imul clc addr16 sub sbb aad clc fnstsw mov xchg pusha insb mov fnop push je cmp fcmovbe pushl js lds add loop arpl sti cmpsb mov push movl and out dec add mov sbb mov lcall mov mov adc mov jecxz fildl and cli leave imul xchg ret frstor add jae negl or jge mov jmp data16 adc mov cmp nop and aam or loope aam mov mov (bad) fcom stos addr16 xor icebp outsb add dec jno loopne rorb mov leave push imul and icebp sub (bad) lret dec fwait movsl add or cmp out xchg movsl pusha jb (bad) or adc mov aas mov loop call mov dec and clc adc (bad) or pop iret into jmp gs out dec gs add and mov mov in mov and cli mov xor xchg or xchg vandps inc xor lahf xchg in popa mov fisubrl stos outsb mov and sbb mov rcrb fdivr mov jmp (bad) aas loopne arpl js adc aas imul es mov cs into inc je sarl inc icebp lahf inc xchg lahf sbb push imulb mov and sub inc sub repz jge fistpll hlt dec mov in adc push inc cwtl sbb (bad) int test cmpsl xor adc add movsb and xchg add jnp loope or xchg cmp sub arpl inc bound nop xlat test ja fldenv les outsl mov call mov test cltd in mov pop jae test test call dec mov dec dec mov test mov out inc pop outsl outsb sub inc mov sub pop imul push int retw pushf lea insl push mov (bad) push out cld pop mov sahf xor cmp je lahf inc and dec jp fstpl pop fs xor or mov or jnp mov mov aaa paddq dec popf push loop push and mov mov mov lods mov hlt ror movq ret pusha out inc imul push and rorl cmc push dec xor xor lea pop push fsub cmpb mov xor lea sarl push push xor call adc xorl adc pop and push fsubl aaa js mov cmp fwait dec sbb (bad) cmp shrb xchg ficomp insl mov mov push enter add out xchg xor cwtl mov lcall cmpsb inc cmp cmp dec stc add ljmp mov movsl xor movsb cmp les sub fsts xor sub push jae pop or adc inc mov fwait rcll sub xchg (bad) or fstpt xor int3 sarb sbb xor repnz add dec jno pop xchg mov pusha jg mov lock mov mov inc in xchg mov lea and jo repz subl inc xor ja dec xor push xorl fwait loope inc cwtl xchg addr16 fdiv jnp (bad) fmuls neg sub xlat add mov dec call mov adc rcll (bad) xchg leave inc pop in jbe pop push inc fstps les scas mov jnp sahf cmp mov sar jge lcall mov push pop add rcll xor mov into repnz movsl call lahf dec xor pop pop lods sbb or mov inc stos mov movsl mov stos sbb jne xor (bad) (bad) or pop int3 mov jns lds (bad) xchg int jecxz ret cmp push dec inc cs sub aaa inc jmp aam loope dec add jg pop or cmp fnstcw fstps sub mov sbb pop ja jb inc pop fsubr cmp mov js in jl and hlt test leave arpl sbb aaa out xchg ja add pop aaa out fldenv push aaa adc scas lahf sub nop cmp push nop fcoms mov push xchg ffreep bound aaa incb fcomip or fldl lds stc leave test push cmp mov jb pop ds push xchg jno pop sub (bad) (bad) push or xchg in mov hlt mov push mov cmp repnz dec jmp add mov xor pop inc dec subl sbb loop pusha aas out idiv pop pop ja rcrb icebp push push lret sub rorb xchg push push mov decl mov cmp pop inc stc mov adc pop lahf push inc dec pop jbe stos loopne and sub adc bndldx cmp inc out xor push iret push movl addr16 xchg scas inc pushw push gs add mov mov loop fmull mov and fdivrs inc fistpl (bad) cli gs cmp ror das jo jne in insb xor cmpsl enter outsl cmp in out jl mov int dec daa stc xor xchg jg sub inc adc or fistp outsb jmp dec jo xchg movsl add scas bound and enter lret push cmpsl xchg (bad) mov lahf or push and push scas xorl mov dec xor movsl and lds fst shll shlb push push (bad) cmp xor dec cltd mov or lods clc cld int xor popa arpl (bad) dec lods mov push sbb mov cmpsl flds stc sub pusha stos pop (bad) mov movsl cli out sub push sti pop inc or cmpb dec push ret sahf push jle pop pop lods lods jnp dec dec shr ja popa mov (bad) or jmp leave sbb aas arpl mov mov sbb cs adc aas insb inc dec nop push aaa cmp into pusha jle pop into cwtl push lret sbb add aam jp mov pop lahf bound push sub orl loopne shll (bad) call xor rcrb aas es mov push pop pop fs mov shlb fiadd dec pop pushl lods push iret adc xchg lea add in mov or jmp inc in cwtl mov mov lret jae inc or or dec pop out les push add add sub incb icebp and fdivrs push pop inc mov mov ds cwtl cwtl xchg pop ss (bad) sub stos cmp sub (bad) jbe or idiv lret pushf mov adcb jnp mov js sahf dec jbe es push jo mov adc mov add sub out loopne xchg push mov and xchg bound mov cmpsb add mov inc ljmp imul aaa cmpsw jge (bad) xchg pop push dec jg cmpsl dec pop cmc clc dec ljmp lret mov push rclb fnop adcb test sbb jg mov int3 insl adc mov cmp inc mov jl sub and push es pop inc frstor lcall dec pop cmp inc push adc lret mov add mov xor enter orb push (bad) and xchg pushl fistl cmpsl jnp xchg fdivrl imul add push adc pop cmpsl nop push sub inc or add insl or inc mov inc in and lret aad push outsb push sub arpl xchg push mov adc imul pusha dec push ficomp xor and push scas mov imul push fldcw jns (bad) add movsb sbb mov scas add jo daa pop shrb xor inc push xchg out (bad) pop in in outsb jo int notl arpl jp loope sbb pop inc mov lea orl mov in mov (bad) and and pop les nop jne or frstor stos push outsl sbb push and cmpsl bound cmpsb ss jns mov mov rcll out std add jnp inc jecxz push out or and mov in outsl mov or add or xor lods sub and xchg dec aaa imul (bad) mov pop sarl faddl mov ss mov dec stc xchg add (bad) in sbb push mov and inc test adc mov aas sti in fptan outsl call xchg xor test xor add or and xor std (bad) push test inc pop out shrl mov mov aas pop jns mov ret cld mov lcall sarb daa jae scas outsl inc js imul inc jo jg (bad) lods mov (bad) data16 pop fsubl ja and push mov jp pop cmc cmp mov xor (bad) sub and mov jo ficomp addr16 test jp xchg and cmp gs jno sbb jo add rcrb add cmpsl (bad) addr16 cmpsb xchg cmc (bad) mov pop mov mov lods fldcw or push xchg stc cld xor mov fistl mov or js out sbb aad or out (bad) mov aas jecxz clc push cmp jl pop pop dec sbb mov mov fildl stos div jae mov inc scas test cltd fs (bad) in sub std out sbb mov jne inc jge data16 test cld cs dec lock dec cmpsb inc into sarb out subl addl push sarl xor cmpsb mov mov (bad) jno popf pusha aad jecxz xlat pop sub cmc cmc call sbb pop jnp adc mov mov out mov sub jmp mov jo add mov cmp stc or jne mov ret out (bad) or pop out pop imul inc hlt inc (bad) xchg push dec mov pop (bad) push xor jg dec rcrl jae xchg push inc idivl lcall mov mov xchg jbe cld popf cmp sahf ja roll push imul out pop in fldcw test out clc jno adc pop (bad) rolb lret cmpsb nop (bad) fcoms xchg inc inc stc loope push (bad) std and scas enter push sti pop adc adc xor xchg (bad) popf loop,pn pop popf shr or sub jp lret ss mov xorl xchg pop cmp (bad) mov outsl inc outsl aad ss xlat (bad) xchg shll pop divl in push fstpt rolb or jno (bad) cmpsl dec inc sub in mov adcl fs and cmp jge mov mov enter adc (bad) leave jle inc lods mov lea mov (bad) int lcall push fist out fs cmp cmp fwait mov (bad) mov mov hlt jnp or popl fisttpll pop aaa imul ficompl adcl bound xor shrb mov mov shrl aam add adc push out outsb xchg (bad) imul xorb test lods test cld xchg into inc adc iret insb fnstsw mov jecxz pop in in les push dec xchg lods inc cmpb inc aaa cli in addr16 fcmovb mov aas pop sbbl pop ret jns mov rcr dec loope mov inc pushl push cmp inc aad pop jmp jnp push es jae sti xor mov push adcl cmp repnz into ret int notl sbb testb fdivl in ficom (bad) fcompl fs jno arpl out jge pop in mov dec arpl movsb mov mov out xchg cli movq lret aaa out push ljmp jbe mov inc or xchg inc jne cmpsl es inc inc dec inc dec jmp dec dec mov into pop xor sbb dec ss stos ret xchg std mov mov daa xor mov xor mov pop aaa push js test jge push mov bnd inc push or lods fcmovne xchg test xchg mov add sub (bad) xchg fisttpl cmpl shl lret mov femms adc pop (bad) mov decb pop adcl cmp ret ret cwtl inc pop push inc icebp sub xchg popa test mov mov cmpsb mov sbb mov ljmp lret gs lret and cmp (bad) sbb jge loope adc mov aaa jbe (bad) push out in (bad) aas sbb insl inc dec aad push (bad) mov into jecxz (bad) and xlat adc inc fild mov pop movl jmp (bad) xchg ljmp lds cltd xor ja lret lret outsl leave sahf push cltd fld1 aas push ds (bad) notb scas or adcl je jno out sbb out aam adc fisttp sub mov stc sub loope mov data16 (bad) mov mov test scas pop jp pusha test cmp xchg mov jecxz adc out mov add rorb adc push stc dec and call ljmp pop jnp (bad) push sbb mov mov das sbb into jmp mov jbe inc test and lods cmp mov cmpsb loop sub xor dec fistp add pushf fwait inc push jb or dec in paddb int push daa test scas test stc dec sbb or mov enter stc pop inc mov test sub and sub outsl cltd push dec inc rcrb jle push or fs (bad) push adc inc pop inc xor ret add popf adc pop clc sub add jg test jge sbb pop inc cmp mov movsb cwtl xchg test and and or pop cmp sub inc add pop repz in or addr16 scas mov push jp stos and jecxz lds jae xchg push das push cs divl lcall add cs (bad) mov push adc mov fnop mov pop in outsl movsl (bad) mov add adc cmp sub popa and and inc (bad) xlat (bad) jle xchg roll sahf lahf jb test sbb dec xchg cmp leave insb mov and movsl push scas insb mov std mov insb mov ss fwait pushf adc dec pop inc dec ss jnp push cmp xorl fs push sub es cmpsb scas mov inc sub ret push test inc je fist adcl mov fs ficompl scas adc sub mov lahf mov icebp int3 xchg loope cmp xchg xorl xor mov cmp and jmp or xor mov pushf fcompl adc mov sub jns xchg cmp cmc add rcl movsb add fsubrs push cmpb out add icebp fdivs add shr test push test adc mov jbe and stos push mov or xor call arpl or (bad) jmp pusha push add std imul mov je ret call in push loopne jne cmc cwtl push lock sbb jne jecxz (bad) arpl (bad) cmp add xor lock mov movsb aas ror sub fisttpll imull inc add cli sub mov inc mov jo push insb cmp mov dec into (bad) test push sarw cld sahf gs jb mov sahf inc cwtl movsb pop clc orl popf int3 mov mov cmpsb inc adc add mov divl dec popf xor aaa push pushf lds sub lds shr stos out jmp adc (bad) dec fwait in call mov pop mov xlat pusha lcall lods pop sub or inc outsl sti xlat in repz icebp sbb fdivs mov dec shrb mov in pop enter adc adcl mov jo mov in jb scas xor mov ficom arpl mov out jne imul cmpsl pop pop and in fsubl cwtl or data16 jae mov out je (bad) psrlw adc les pop pushf push add push js xor fmull jae sbb xor sti pop sub push xchg stos or leave ljmp xlat ret stc in pop xchg packsswb mov mov mov es outsb and push dec pop orb lret call cmp inc jge (bad) loopne popa push in cmpsb pusha lahf andl add das ffreep mov fcom jo pop and xor dec add call fidivr add insb sub loop mov loopne push dec cli movb mov jp mov xor sar jae fwait movsb xchg stos xor cmp mov je adc pop aam outsb aas xor into jle ja mov and or je push xor flds cltd daa aaa sub dec xchg scas stc and xor xchg xor ret je add clc or dec dec nop sahf das or cld push or jl cmp loope out pushl sbb ret imul push and and vmwrite push (bad) mov pusha aaa jne xorb daa push call sub mov and cmp (bad) lea aam repz fdivs imul cmp popa sbb mov mov push stc std mov sub cmp dec xrelease and repz addr16 dec push cmp gs dec test cltd sub mov cmpsb jle pushf test das sub push test out cld call test push popa dec in dec das repnz dec pop call xchg cmpsb xchg cmp lods jg sbb mov xchg mov es fdivrl rcrl cwtl inc inc (bad) ss or bound mov outsl bound xchg mov addl ds inc scas add outsl cmp pop xor pop fnstcw push pop fbstp mov shl jecxz es jns les cmpl ja imul lods stos sbb or loope push out or cmc rclb mov inc xchg push or pop sahf sbb lods pushf push and sahf (bad) mov lahf std das jg jmp cmp or inc or rorb repz mov (bad) cmc fimul bound lahf mov daa data16 rcrl lahf cmp repz iret mov and pop arpl lods mov pop jne mov xchg stos outsl ret cmp repz insb rcll (bad) sbb jle adc movsl ret call jmp into and sbb or hlt insb inc repz insb push jg sbb fucomip jns movsb int enter pop fucomip or add and dec mov inc push cmp cmp or cmp adc std xchg dec daa push mov inc jnp xchg lods xchg add cmp inc test mov sbb test iret mov lcall (bad) and jae and stos inc ja repnz push fiaddl lret add mov addr16 js hlt test imul dec ss dec cltd test je mov push mov (bad) cmp test leave mov mov push movsl xchg mov mov repnz add out jg sbb fdivs ret cs lret (bad) push cltd mov xor aas or shrb push (bad) jecxz adc repnz std insl fcomip in pop outsb jge les aad dec rcrb (bad) call movsb leave sbb popa mov je cmpl sbb add leave mov mov leave fcoms movsl push cs or cmc and inc rclb bound popf xor adc shl imull cmp aaa jno mull inc mov lahf adc insl push into sub clc sbb mov mov in divb xor and jl dec sbb jae aad mov mov pop lcall mov mov push push jne or jnp lahf jp push int push jg js stos les mov cli fwait or lcall and dec (bad) xor sub push xchg insb (bad) mov cltd jb mov pushf mov sbb push jp pop lret sub jnp xchg and rcl shr stc sarl mov shlb sbb int shlb xchg and shll mov mov arpl mov jg dec xorb lods fsubrp inc xor pop pop xor cmp insl adc xor xchg adc inc add int3 aam stos jg xchg int3 mov mov or adcl out inc mul aaa jg ret xchg push xor pop mov aam mov mov std add pop inc gs loope hlt (bad) push leave lea ja cld stos cmp pmaxsw ljmp and adc push or insb cmpsl out fscale into sbbb adc jne addl loop xchg lods (bad) inc jg das nop ss repnz daa lahf mov enter adc pusha int daa loop mov pop mov jns pop cltd shr jle out clc jle jmp push adc lret rcrl xchg push and insl out jmp xchg enter jbe pop repz cmp mov aas sbb out mov xor mov mov scas pop sbb jne jge imul and pushf movsl sub cmp push mov xchg cmpsl or leave mov cmpsb out or adc icebp or mov cmp mov sub incb lahf sbb xchg (bad) or sahf or or mov jg fstpl jge mov mov dec push in push jb fwait out cltd or pop push js out rorb test lock and xchg push movsb mov xchg iret jae mov jo lcall jl lea aas ret and lahf add (bad) lret jp mov adc add xchg roll es xor insb mov sbb jno cmp mov push xchg lret cmp jo jns xchg fstp xor fisttpl inc pushf and and cld cmp dec movb mov scas mov daa fnstsw mov push jbe xor flds sbb xchg subl loope sub insb ret cmp push (bad) jae ljmp sub mov clc (bad) mov pop mov xchg lea and adc jl mov dec cs jne add flds dec enter xchg jns stos push sar lods cmc loop imul xchg mov data16 popa lahf sbb pop cmp andl xchg mov orl mov push and in int3 sub cltd icebp jne inc xor add out mov inc pop sub pop push mov mov int xchg pop xchg pop fld mov mov stos sub or stos je adc into (bad) shr inc jno aaa and add mov push dec insb adcl movsb leave js xchg ja mov sbb push mov cs call xchg fnstsw in push fwait std lret les scas dec cmp adc mov leave (bad) into pop jne sub (bad) mov adc movsl gs pop out cmp sbb jl punpcklbw pop sub ljmp xor fs or testb jp test sub aaa jmp xchg push mov stc cmpsl sarl lea orl sbb test sti ret mov fsubrs scas (bad) or fistl mov outsb ds lods stos scas nop pop jmp pusha in pop mov xor push das or push xor pop add pusha jns jg dec cmpsl cmp mov inc jl pop cmova dec jl mov or jne mov or dec cmp mov outsl cmp cmp fnstcw out cli inc (bad) in cmp mov (bad) jp sub je or nop mov movsl xor insl push mov mov xchg xchg into sub sahf cmp mov pop jge jo pop popf mov adc mov push aam mov xchg dec dec test sbb data16 into and jge,pt lds call int pop sbb push and push hlt adc test pusha test mov popl call jnp outsl add pop test int inc sub (bad) cwtl out add xchg in lahf xchg dec into rclb (bad) outsl sub es dec loopne pop je or mov jns mov push stc lahf andl pop mov jno je nop fildll fistl adc in mov hlt sbb mov mov movsb fistpll pop dec dec test aaa (bad) (bad) mov popw in (bad) int dec clc dec cmp mov or lock leave in imul mov jnp sarl adc mov or arpl faddl add popf imul jle dec insb or (bad) out jl shrl pop test and xor and inc push cmp scas cmpsb ret adcb mov sbb jnp or sbb dec push mov jo add leave fldl xlat mov push jmp xor ds fldt mov pop cmpsl jne pushf add popa adc fs int mov test inc mov je lea xchg jmp push dec jmp mov pop int3 icebp loop bound repnz xor inc repz mov jg mov in je jb mov xor lea std add mov pop dec add pop and push mov add push enter insl cmp mov jmp xor jmp add stos lret test movsl pusha adc fisubl jmp push insb pop sbb lahf (bad) fldl (bad) push lret mov pop gs ret rcrb mov rcll dec addr16 dec cwtl sub and cmc cltd sbb icebp pop jp dec arpl push push or icebp lretw aaa ret xchg mov mov xlat mov pop hlt aas mov fstps sarb sbb cld mov cmpsb test je mov cmp (bad) ja xchg icebp add mov js pop lods lcall pusha lcall rol dec (bad) cltd arpl test pop out add pop mov push jno pop test or cmp push lret cmp add in insb xchg push adc cmc cli leave mov notb rorb jg mov and jo pop add fwait push pop (bad) lcall movmskps pop sti sub cld jmp inc mov mov int3 stc pop iret ret icebp aaa test dec fxch dec cld stos xchg pusha mov push xor sahf push popa ss cmp jl and push or jbe dec (bad) xlat xor insl and jge mov mov xor xor inc xchg cmp push fstps or push (bad) inc cmpsl xchg js mov ficompl mov fbstp popf jp jo sub push popf jns push add adc pushf sub iret out or jmp imul jge pushf cmpsb sub ljmp outsl cltd cmp in cmpsb fsubp xor subl outsl inc call mov push adcl outsl xor mov cld and popf and push stc push dec (bad) sahf mov rorl jle push cmp adc push iret jge sahf and inc dec mov loop cmp push cmp mov stos lea mov push pop dec add xchg fwait pop clc in push adc popa (bad) shrl mov mov out sbb sbb cmp (bad) test sbb mov cwtl das cmpsb push je inc outsb out pop lahf cwtl lods cmp xchg sub jno inc jg jae fidivl sub test inc mov mov in dec add ds dec out addr16 xor pop (bad) dec fwait sbb out (bad) jmp mov hlt icebp xor xor or (bad) xor sbb popa outsb dec ret movsl inc data16 cmp sbb and out out imul or movsb stc and or cmp pop aam or (bad) pop fsubl sub inc movsb loop cli push push xchg add mov rolb in cld sbb scas test push arpl adc shrl pop inc and aaa xchg sbb mov and ja adc aam je jae xor pop inc sbb insl sub cmp jle jg or in enter popf cmpsl push and and cmp nop inc movl dec popa or push mov aaa xor lds add test xor inc inc jno mov rorb pop lcall ror ss and testl mov mov mov sub push cmp jl adc cwtl mov je jae or or or jge inc adc pop lds out fwait mov xorb dec inc sub movsl nop pop leave enter sbb mov mov test lds (bad) mov xchg loopne repnz sub je loop cmp lock pushf xchg das inc mov lock pusha mov push cmpsl xchg sbb mov je or xor add test jecxz shlb sbb cmpsl enter push pop and add and inc adc int3 in lods xor xor dec xchg stc mov cmp sbb add cmp mov push cmp in xchg push loopne sub cmp cli sbb lea pop and (bad) daa popf out and or das dec lret push mov mov in xchg je adc pop clc iret loope or loop (bad) mov sbb fadd shlb sub mov mov repz mov jecxz call jmp test outsl dec mov loop inc push fmuls inc jl ret adc mov xchg dec nop lret (bad) jb jp (bad) jo mov (bad) imul push test hlt rclb sbb push sti (bad) jg std movsb pop jecxz ds arpl mov aas enter inc es cwtl aam mov mov add jg cltd pop xchg sbb in mov and inc xchg inc dec loop mov adc pop lret dec ret bound je cmp mov lock adc ja lds sub jbe sti sbb daa mov mov mov pop mov jae mov mov hlt or pusha xchg imul shll mov (bad) adc jmp add fistpll (bad) jle gs ljmp jge out test cmp push xorl jno xor scas ffreep shll mov mov out movsl cli mov sub mov mov enter int mov xlat repnz jmp sahf div xchg inc fdivrl mov stc mov pop adc int3 out and add and mov pop and dec or xchg addl or aad and push repnz in rorl repz popf pop xchg sbb adc push popf mov fwait mov jp jge lea dec or xchg test jb inc dec sub jmp xchg adcl outsb icebp dec cmp jg jo mov adc std jne inc ds xor insl mov arpl (bad) cvtdq2ps mov add negb cs int3 (bad) je rorl ja adc out fisub ret push inc push cmp jnp pop adc and out maxps sub enter std stc push jmp cmpps popf dec loop (bad) leave mov les iret push stc mov cltd (bad) movsl inc out iret cld pop lahf sub cli lds xchg mov cmp adcl sbb test mov cmp mov popa lret addr16 pop sub mov lds aam in jge shll mov ds push aad mov xor mov add cmc test dec (bad) stc rcrl add cmp xchg test leave dec sub cmp nop lret loopne mov les out or cmp ja push ret push clc xor or mov and pop or imul mov test iret out jmp fisttpll fisub mov stos fsubrp movntq xor xor int dec sahf sahf mov push inc adc incb mov dec les fstps (bad) lret inc add ret out pushf adc pop fs lahf (bad) or inc xchg push and add inc push (bad) jmp outsl daa cmpsb add fsubs aad cli inc dec push cmp nop sub inc pop mov cmp mov dec and and push ja add int3 sub and push pop je fcoms push mov cmova cmp sub adc leave jnp sbb jne mov scas stc mov xchg xchg test aaa mov cs aaa sub outsl xchg xor and xchg imul bound rcrl xor sbb xchg inc fsubl mov (bad) mov test jmp inc jp aaa push jge or cmpsl ds rcl cltd stos dec ret (bad) sbb jmp aam cmp jnp outsl add mov sbb repz add je ja icebp mov sahf pusha adc sti fisub mov outsl mov incl sahf outsl xchg pop fsubr es rorb cmc or sahf je aas leave ljmp mov lods lods (bad) jmp xor xchg scas pop dec es cmpb adc inc jle pushl lock and iret imul xchg sub dec cltd sbb xchg and lret push mov loop (bad) adc pop (bad) mov mov notl xor inc inc ret js mov iret out xor ficoml iret mov xor icebp or enter mov pop cmc rcll and movsl xchg jne fstps cli dec leave fnsave js xor mov add (bad) dec mov fildl xor jnp out pop loopne mull inc mov pushf mov or dec and add ud1 mov sbb lret adc iret or jne lods je push jne xor fadds sarb mov xlat into cs push fwait inc lret in ret insl add sbb dec fs xchg jg sub sbb dec imul out push sbb out in std leave mov add push fbstp mov pushf test clc xchg cmpsb mov push ret insl lea loop push push das sbb dec add xor dec sarb cwtl rcl mov mov daa push adc bound out ljmp or lds sar push lahf push push mov stc (bad) dec lcall pop mov sbb ja mov (bad) mov lock leave sub out xchg pop stc or daa and loop ss (bad) inc shrl in jo in clc stos lret icebp jbe call cld aad jl jns insb push adc adcl loop and xchg mov and test or push push imul (bad) xchg mov dec pop in mov xor and jne in out pop aaa cmp mov inc sub xor add pop inc dec add sar or dec xlat mov push repnz cmp in xor lcall add xchg in movsb rcrl mov xchg movsb js pop test pop sahf es aaa outsb cmp scas aaa leave sti adc pop and cmp mov aam inc cmp sub lahf shll push adcb mov cltd push clc test fwait mov (bad) je lods scas mov xchg divps gs xchg fldcw imul pop in and icebp dec cltd test jge or and imul jmp movsb mov push js into dec (bad) adc es adc pop pop test push mov inc les cmp jns mov add inc mov mov and xchg in in xchg bound ror sub push adc jae sub sarl outsb inc push sbb stos adc je add add insb push jp,pn jg mov adc jl,pn adc push add paddsw (bad) cmpsl sbb lahf add aam jle push ror mov add rcll imul das jge neg jne mov mov aad xor jge dec jo inc xchg (bad) repnz pop in (bad) jbe dec xlat jg sub push jnp aas (bad) int mov inc stos rol imul roll jp sbb mov (bad) jmp popa mov dec insb mov dec push sarl popl cld ja sbb mov lcall pop sub lea lods (bad) cmp (bad) jb and push lock adc stc jge rolb sub and xchg dec fild push xor cmp xchg inc pop and stos pushf arpl sbb add mov je add cmp jmp insb inc xlat inc into arpl mov push xlat jmp daa add stc in mov jl pop push in inc inc inc sbb cltd rcll xchg mov out adc repnz cltd pushf stos cmpl pop scas cmpsl insb es cltd in rolb sahf scas mov sahf pop cs stos cli xchg cmp lods das ret mov aaa and sub imulb sbb jle sbb jg jmp les cwtl xor mov ljmp dec add lret add pop xchg sub adc jbe xchg push das push cmpsl fwait pop test fildl inc les movsb xor mov stos adc cmp cs and imul push mov jg sbb xchg dec call mov sub adc push js push mov repz divb add lds xchg mov lods pop test repz loope xchg add lock or ret xchg cmp addr16 dec and lret xchg aam mov pop aam (bad) jmp jmp (bad) mov inc test nop iret mov mov js cmp mov (bad) push mov mov push or or shll or jl jl jmp mov out out adc cmp dec or pop hlt hlt stos test lret jne jno pop stos insl (bad) jb mov inc loopne icebp push sub stos push jo in mov mov daa jnp jg push jae push iret mov mov add jg and sub xchg cmpsl mov lea insl pop push mov fldln2 lods push jmp add or mov mov jns xchg shrb pop sbb test mov js lcall adc sarb dec fist sbb je inc (bad) xor cwtl movsl pop inc into and into cli mov sub push sbb xchg pop out push clc jl lret jmp dec clc ret inc mov mulb jns leave daa inc add or dec or imul stos out gs insl int xchg pusha rcrb bound in dec in inc xchg jge sbb xor sbb fwait or jae xchg sbb push imul xor jbe pop inc xor push dec sub inc and mov (bad) and dec popa pushf call inc adcl xchg mov push xlat add push int3 or cmc icebp adc out mov cld es dec cltd fidivrl push movsb pop nop sub jb ds push enter sbb add add dec cmpsb ljmp lea mov dec mov dec fbld insb push xchg out push iret std xchg cmp arpl dec lock fwait push insb ret inc inc cmc adc mov out loop add sbb push out gs push in jecxz jb,pn imul ror insb loopne ret mov dec sarl push lret xor fsubs sbbl or jl fist ds jne out popa les clc dec icebp (bad) push gs cwtl mov lea xor xor jp cmpsb dec dec rcrb loope add js pop xchg lret inc cli (bad) ss pop lock push jae cmp in lcall xchg les jnp loopne push xchg loope test pop fildll daa pop das faddl dec xor mov pop adc mov add (bad) sbb jg cmpsl mov faddp (bad) scas jae outsb (bad) xor in cmp setno insl jge pop call push pop xchg and jg outsb enter xchg mov xchg mov mov scas lock mov add loop aam pop loop icebp lock arpl daa dec cmc inc jne jae outsl (bad) sete insb dec int3 cmovns lcall dec and sti clc mov int3 jae int3 in out sbb sub imul je cmp imul in lret xor es loopne mov inc aam adc push lds push pusha push jg jg mov push cltd sbbb inc repz outsl sub jne xlat xor enter cltd test push stc sarl pusha out jns and insl xor insb or dec or hlt or imul xor mov jae daa insl push inc or sub outsb jo or and or das loop jbe dec ljmp pop jl andb stos sub ret cli xor movsb icebp cmpsl dec pop pop dec into lods cmp jle popf push scas sub mov in jno xchg mov adc das arpl sub mov jne pop loopne mov stc jge or jae stos cmp test push pop femms pop sub xor shlb xchg fadds and adc jge in enter jl dec notl inc and or xchg lock jnp ret pop cmp inc (bad) dec fld leave sub ret adc loope xor sbb push sub in mov sbb lret daa test or jae add scas fildl loope and xchg and jmp iret push call aam mov lahf test (bad) fxch push clc in (bad) pop xor dec lock jns jae stc data16 xor cltd or stos pop mov (bad) lcall aaa (bad) xor loope stos aaa in mov or mov test lock jmp mov daa das ja cmpsl mov in or fcomps mov dec lds into sbb push js cmp jae adc fstp sbb jge or push (bad) ja (bad) mov inc pop fs mov imul bound add cmpsb bnd adc test cmpsl jmp call push aam cltd jge mov inc dec inc jp sbb aad xchg push and movsb mov ljmp insl sub add ret mov lahf aad lds mov andl je mov cmp mov or cmp test neg lock mov mov nop jle or lock push daa jne mov stos pop dec test and rclb mov out jmp sarb addr16 adc adc (bad) js cmpsb or ficompl pop scas pop outsb inc sbb mov subl outsb cmc fimull push imul cmp movsb sub js gs bound loop jae dec pop mov sar xchg cmp mov jne mov test xchg ror pushf sbb cltd add cmp icebp (bad) jne xor es (bad) inc xlat or jp and hlt add mov fwait ds pop bound in and ret rolb pop dec (bad) cld orb shll les xchg xor scas adc notb jmp push sub mov rcrb imul lock or rorl pop int lea (bad) mov pop sub (bad) mov sub sub negl mov ss jne jae lock jg inc sbb jmp insb xchg dec test lods adc test push fbld daa adc sub je dec inc cmp jg sbb scas jbe dec lods sub es cmp jp imul popf inc std mov (bad) pop insl out cmpsb jb mov sbb cmp mov inc test js int3 adc dec pop mov or jns jle adc add sbb mov daa or jg add ja jae mov push mov imul dec fisttpll xchg popa adc mov cmp idivl out (bad) int3 hlt push mov gs mov outsb movsb test iret int3 es adc movsl jb mov pushf mov mov movsb mov xchg inc (bad) rorl jle ja bound addr16 mov pop les mov fldcw loop imull and int3 jmp inc mov xor in (bad) jno cmp xorl fdivl out lea push jo in mov adc cltd pop test sub test aas push ret sbb adc call jl mov shrl or lret std in sbb mov (bad) aaa jmp jecxz lods popa test sub outsl divl pop int cmpsl and dec add in or push aas push in shlb stos push xor jne adc cmpsl outsb sbb in orb aas incl push or mov jb inc pop lods push pop dec out (bad) clc dec xor xchg fnstenv mov mov inc jnp loope adc imul pop pop pushf das pop lds cmc pop idivb cwtl sbb push lea add jp and je sbb mov mov push mov nop mov fwait xchg movsb mov cmp sahf mov mov xor jl shrl adc scas adc mov pop xor mov arpl jl adc call roll cld add inc dec es inc mov lcall fistl das iret pop (bad) insl inc sbb bound mov mov aad dec faddp or inc cmp ja lea cmc repnz sbbb or in sarl mov outsl xor sti cwtl leave (bad) mov fsubrs and pop xor adc fstpl cs mov push jmp mov push lods arpl sbb push outsl (bad) mov aaa jne cwtl aad mov insl mov leave push pop pop and push in (bad) fs jo cmp dec dec repz push pushfw call lahf jae leave jmp add push and adc cltd iret sub (bad) rcl push out mov cmp pop pushf lods sbb repz outsb mov add fldcw sti test push pop aam pop (bad) rolb in stc movsb xchg idivb inc adc (bad) push stos out mov inc jae pop sti jp jb jne xor and call add inc push test (bad) pop pop add mov inc dec pop pop clc insl dec add js stos adc bound dec mov inc loop cmc enter mov pop dec iret aad bound arpl cmpsb cwtl dec repnz and jnp push shlb lods adc lret and mov mov mov add bound ret adc ss loope int3 lahf xchg mov mov lret lock scas pop (bad) rep xor sbb jecxz pop xor jmp das loope insb (bad) test cmp cmc fistl scas xor daa cmpsl mov pushf jl mov or insl stos loopne jbe mov jl dec scas into out lea mov repnz inc adc push js add (bad) jb mov mov mov inc hlt mov and adc mov jnp stos xor cmp push repz add pusha es pop mov loope cltd fisubr (bad) dec xchg or mov dec pushf hlt iret inc jle loopne cmpsb in push jnp lcall into imul scas lret lahf int3 adc clc insl xchg jecxz cmp sti mov dec and lahf es mov mov xor push xchg scas ljmp adc pop lods push add adc mov jge aam test mov std pop movsl cli test and decl call jb into xor or sbb or jle popa pop mov cmpsl sbb mov imul hlt jl subl xor insb and sbb pop dec adc inc cs xlat or das push leave sub fwait mov sub data16 fadd dec outsl loop jne nop adc pop mov cmp insl or xchg cmpsl mov and into mov pop adc sbb push jnp cmp sbb xchg pop fcoml aaa cmp or lds cmpxchg dec movsb mov push cmp aas pop scas sbb xor lahf pop push cmp aad mov rol jmp dec and fistp and sbb and aaa jle mov xor jne sahf movb mov mov mov imul mov jge jg inc push xchg sti inc stc xchg rol cltd xchg dec inc ret dec popa test sbbl mov aas idivb dec (bad) out lret into xchg xchg (bad) es lcall fildll mov out movsb (bad) xor pop addr16 xor ljmp lcall inc pop in sub sbb and jg lea xor inc clc xchg dec lret orb aas cmp dec out mov loop mov add pushf mov das cmp xchg (bad) push jbe hlt mov xor addr16 in xor int3 loopne cwtl sahf xor pop jle sbb xchg sub in xchg and sub push out mov sub xor lcall fldt mov repz ljmp and sbb ret mov imul mov bnd jmp fdivp inc fldl xor mov jne rorb lods xor mov mov sbb lea clc loop sbb sub inc in xor into (bad) jmp insl aas sbb or mov loop test sbb mov cmp add mov insb xor flds jmp daa add inc xchg jmp inc hlt push andl dec cld int3 out xchg fstpt push test imul bnd inc shrb icebp pop or das mov adc orb xor inc pop dec xor pop jl fidivrl cmpb das sahf and shll out aad lods (bad) push in scas add mov loop,pt adc inc adc repz mov pop jnp stos xor cmp or pop push rcr cmc (bad) mov cmpsl fidivr mov pushl push dec clc popf mov jmp or xchg mov cld lods out dec sub or les and lods pop mov ja scas adc aaa push fiadd aas jp insb jg call mov bound (bad) xor cld scas cmp sub in sbb xchg fidivl xchg mov pop sub and (bad) aam push (bad) in (bad) loope dec add in jne mov mov pop xor jno mov (bad) dec xchg in or loopne pop push mov cld loop xchg cs push mov mov jp sahf jmp in enter push pop adc lds push outsb fisubl fld in (bad) dec cmp inc das outsl mov repnz or jb pop sbb rcll ljmp lret data16 adc or movsb and es fidivrl ljmp mov mov add movsl or cs divb push ret out fs ss lock and xchg xor jo adc push repnz and mov sarl jno stc adc ljmp (bad) pop dec add dec jmp and mov mov push xchg fsubrs shll cli pop xchg cmpsl in std into enter sbb into cmp std sub add pop xchg scas lea jl mov mov pop xchg ficom mov fsubl sbb mov xchg int3 push fldenv cltd hlt hlt xchg test loope mov inc repz mov and mov out cwtl xchg negl and sbb jae and mov dec inc imull mov push scas xchg adc fnstsw jp shlb lret loope pusha aad out es ljmp fldenv int3 out mov xchg push out je adc (bad) pop sahf cmc pop mov scas popf test xchg sbb loop xchg adc jg sahf jne fisub dec mov mov dec aad repnz inc loopne sbb icebp xchg arpl xchg dec dec popf cmp (bad) push mov sbbl push cwtl mov or fisttp sahf adc xchg in jecxz pop repz js lock pop sbb mov cli lods (bad) cld xchg fcoms subb lahf inc push or xor or gs lret mov cmp je push inc pop dec push and mov push aam pop and mov dec jne int xchg push adc xchg stos cld mov xlat jae or mov test mov lahf rcll movsl cwtl icebp cld sar adc (bad) jne mov cmp clc insb mov pushf xchg xchg and jmp hlt jb and popl call aad fstl fildl aad sbb cwtl push inc in mov xchg add pop push lea push xchg or cmpsl cs mov pop mov mov sahf mov xchg aam cmp ret sub mov jp inc pushf ret jns cmp or and push push hlt ljmp dec mov mov pop mov or in fdivl pop and test sbb pop cmpl int3 sub out outsl scas in lods cmpsb xchg or test out dec rcrb inc sub push repz dec push sub (bad) jno rorb jnp or jge loopne xchg xchg ret lock sbb sahf loop and dec (bad) jmp std pop (bad) mov in xchg pushf sub inc je fidivl and loopne push and (bad) ret push cwtl aaa inc xor lret xchg cwtl jmp mov pushl xlat out cmp mov push adc cmc cmc adcl (bad) or fs cmp test cmp inc pop rcrl jns (bad) icebp ret aad and and das call push adc subl iret xchg cmpsl in adc (bad) and push mov jle cli fwait cmp pop inc push jnp xor push pushf mov sub jbe stos or and into ss inc hlt inc insl aas pusha aaa out add mov sbb jmp xor pop mov or ss dec ss in mov push push (bad) adc xchg rcrb mov scas xchg sbb mov aas aad mov stc and in loope out outsl adc or and (bad) (bad) addr16 (bad) rorb mov and sbb sbb xor push sbb sub mov fiaddl loop pushf mov sbb mov loop add divps and cld cmp scas inc and pop icebp lret jmp fstl jle and test mov push fisubl stos pop faddl lds mov mov into jle jb loop cmc fwait or std out repnz repnz out (bad) roll (bad) repnz out pop lods and not pop lods pop ret cmp (bad) push cmp dec xchg push pushf cmp cmp cmp cmp gs sbb sbb lods pop mov jb add ret (bad) aad jne cmp mov mov or xchg jecxz adc cmp cmp xor repz repnz bound dec push stos add std or mov mov jne jle mov (bad) mov and push cltd add cmpsl xor xlat push mov push (bad) lret mov or push mov xor adc or loopne mov repnz loopne push xchg fnstenv pop nop enter aas shrl or (bad) loope icebp cmp push nop pop call pop mov cld xor ss and jmp sbb inc sub xchg mov inc pop cld adc movsb sub out cli in xor subl das cltd adc mov imul scas xor fcoml insl or out les mov mov cmp imul xchg sbb xchg jecxz push sbb and imul in mov fsubrl cmpb and inc mov xchg mov pop stos dec cmpsb mov ljmp lahf test jno sub loope add dec fs aas (bad) ja mov imul xor in pop pop sti (bad) cmp fstl mov push and cmp ss nop or out outsl mov flds jle or sbb ds dec js jl and mov lods sti adc rcrb in or mov jmp xlat pop rcrb out add mov adc insb cmpsb push outsl jle cmp inc daa insb inc lds and xchg add lds mov ret call dec dec mov out fisttpll dec fist sub dec fwait dec shr out dec xor mov mov lock xor clc mov aas dec adc (bad) call in mov pushf insb xchg out mov outsl icebp mov adc add mov pop jp pushl fcmovu lods (bad) out xor and stos push jb fdivrp stos or int push mov cltd lret mov sahf js,pt mov and int sub mov mov lods insl mov ja aam lds bound fwait cwtl mull lea test mov les jae xchg inc and fidiv adc stos (bad) daa enter mov mov cmpsb hlt cmp cmp ljmp fldt orl aam jb xchg lret in ror (bad) repnz sub xor loopne push out pop div es cld fstps out mov push dec int pop cs xor pushf cltd jecxz xchg scas mov dec mov lods xor push fyl2xp1 inc push in push clc loopne adc fdivrl dec lahf mull cmp mov repz sti std push xor fbstp mov jnp mov js sbb push jp xor mov add pop mov fistp movsb cwtl jmp jge xor outsl loope push pop pop hlt inc xor addr16 mov add inc je inc inc dec add push insb fistl aas lds cmp stos ja test push fs out or add cmp xchg insl push (bad) xor (bad) or cmp (bad) xchg rcr cld imul movsl shrl mov add mov jo jbe pop pop xchg add push ja adc aas clc push dec fs mov jle inc mov sbb add and sbb cmp stos xor jmp call add mov xchg dec test mov mov lods inc sbb adc std popa push repz cwtl subb les sub in mov sbb lcall hlt push (bad) mov push bound aas adc add mov incb mov popa adc sub adc les dec rcl cli mov xchg cli and ficoml sub dec jno cmp stos mov add mov push lock xor pop mov xor lret or mov mov add lea inc icebp aas iret mov leave fldt xor fwait jecxz sub mov stc sahf jge dec outsl sub xor xchg loopne pop outsb mov add loope pop pop lcall and dec jmp (bad) maskmovq divl inc out mov mov fdivrs lods add jbe (bad) outsl xlat cmpl (bad) je push les les inc test (bad) mov sbb clc in je test adc jb cmpsb sub sbbl or mov xor inc pop inc lds mov push in in cld ds dec dec shl sub pop sti cmpsb push pop jb mov sbb push inc jle jnp shrl nop or cmp sarb data16 (bad) imul adc xor pop decl sbb and ret imul adc enter lcall unpcklps or addl mov sbb std ja in xlat test cmp call dec lret jbe jnp int mov jbe cltd jo cs push pop xor xchg mov xchg hlt and pop sub (bad) xchg xchg test dec add xchg jge fs paddq rorb push (bad) rclb mov push sarl dec jecxz xchg rolb inc xchg mov cmpsb loop mov pop data16 cmc or add mov fwait cwtl sbbl sub or dec cmp cmpsb dec inc jp adc and mov jmp cmpb inc mov adc push imul adc mov add outsl push int3 push push lds push add ds adc outsb mov cmp mov mov mov inc iret and stc xchg and iret out lahf orl xor pop out mov (bad) jmp push test jns jb int3 jae cmpsb xchg xor xlat jno (bad) sti xchg repnz pop add mov dec fidivrl jne xor daa scas lods rol inc fbld out sub insb inc cwtl enter clc jge repz xor and fdivrs or and mov ljmp jp jle mov mov imul mov sub repnz lds or sbb cmp sub push movb je jge or cmp daa pusha sbb and xchg jne arpl int mov outsl popa sbb (bad) dec adc arpl adc int push inc fnstsw ds inc cmpsl jb mov sahf dec mov xor mov cmpsb xor xchg xchg sub or lcall aam out mov cmp push shlb xchg or sub ror dec sub test lock xchg add roll adc loopne into and rcrb push test jb gs mov ret out jmp push dec pushl jbe sti cmp lock mov cwtl and jae shrl pop jns pop mov popf or jl loope (bad) outsl mov xchg mov lret mov adc mov jnp ret dec jne in cmp ret hlt cltd sbb mov cmc dec sub hlt jp pop loop xor rorb push mov mov push pop pop dec pushf sub push add sti mov jp fsubrs sbb xchg mov daa and bnd or pop gs movb lods shl pop lods das jnp mov adc or sub mov sub add inc pop cmc insl sbb out (bad) and mov ss mov jo push and pop cltd (bad) gs sbb xor lods pop fwait cmpsb mov lahf fisubl test jae movsl daa js cmp push xor mov leave popf jmp ret iret mov inc aas in jg (bad) pop roll xlat mov cmp push test in mov cmc (bad) fsts mov mov push or mov hlt and cmpsl call adc lret bswap mov idivl lret mov pop cld mov jb popa pop pop sub sub pop int adc shll popa cld cmc inc ss ja outsl stos jns subl nop push or popl sbb arpl (bad) and insl add les xor movl jecxz repz or adc aaa gs adc jno stc push push leave or sub in (bad) cmp sub cs cwtl fbld loop xchg jp fnstcw cld adcl mov sub push sti ss inc iret and and mov mov adc push sbb mov add pop out and std cld push jne lret inc mov in jns and xor add movsl mov mov jmp adc mov fneni(8087 pop xor hlt rcr cli and add (bad) leave fmuls cmc xchg scas inc divb arpl scas push adc outsb test das xor sahf fs jg stos push ljmp ja in jno lret nop cmp (bad) testb mov fcompl or mov mov into int clc imulb in xor (bad) sbb mov outsb loope iret imul scas mov jbe ss ret add xchg and hlt dec add rcl addb add cmpsl dec jg or push adc sub test xor dec add mov pushf xorl dec and cmp xchg jne cmp clc mov add mov (bad) std (bad) dec push lds fwait or sbb pop int sub dec fnstcw imul xchg in punpckhbw mov dec xchg es rorb outsb dec mov aas (bad) mov adc test std jecxz lahf mov or fadd xchg js pop and leave jb orl lea shrb adc fsubl or mov fimul ljmp mov xchg pop mov or mov gs sahf pusha xor ss leave iret xlat or push dec repnz cli mov loopne fs (bad) imul std test es mov out dec (bad) mov pop in sub rcrl aas jg fldcw cmp aaa pop ficom popa arpl push ljmp (bad) enter in mov push ss mov test mov dec stos fistp into cmp and push push cmp mov repnz jg in leave and ljmp sub fdivl mov movsb adc fs mov cmc or je or dec sarl mov je popf stos dec cmp daa xchg lret fs mov mov lods push test (bad) xchg sub dec lcall fcomi add iret in pop or neg mov test imul mov (bad) (bad) mov pop fcmovne insl ss (bad) cmpsl mov cmc in movsl int stos out aaa inc aam gs and pop mov ror cwtl and cmpsl sbb xor mov sub sub or fs repz pop and es lock or mov mov daa inc out sbb inc push xchg mov lret clc mov add push bound insb or je and loopne add call in (bad) xchg dec (bad) aad in cmp mov jnp ljmp push ret adc pop out imul aaa mov xlat or jne xchg add ret pop mov cld mov aas movb jmp loope es cld or dec cld (bad) push pop cmp idivb jo (bad) xor mul inc jg iret inc jmp rclb jae cmp adc pop add fldcw xchg adc jp cmp adc insl rcll loope jb ret stos js call xor add push leave jno ja in or rol pop adc cli pushf (bad) lock mov push (bad) cmp push daa mov dec call push cltd movsl adc ss inc mov jns js xchg push fcomi fdivrl xor mov in stos cmp push mov sbb mov ljmp lcall push movsl xchg inc sub gs test push adc je dec in addr16 loop push mov fdivrl fldt cs stos push ror hlt arpl add ljmp mov mov std jle sub xchg xor fadd mov and stc in xor inc out or out call ljmp mov inc jns inc or sahf imul jmp sub xchg (bad) xor inc push mov xchg cmp or test adc mov sbb les push mov jne mov jmp jnp sbb jl or aaa (bad) shr (bad) stc and into mov aam mov ja dec andl inc xor xorl mov clc inc daa insl sub sbb mov adc scas sbb scas mov adc push lahf (bad) dec fdiv pop sarb xchg fs inc mov push add mov shrb scas test iret lds cmpsl cmp dec push xchg jle dec cld sub imulb leave fldt push test pop lods push addr16 xchg lahf fisubl cmp into popf movsb test fs push cmpsb addr16 pushw jb jl rcr mov cmpsl (bad) cmp mov je movsl stc adc or add test add rcl shl pop arpl inc pusha les cld (bad) adc imul dec in cmp jbe pop inc sub stc mov out loope add jbe and repz int push insb pop lods mov test sahf ss daa test xchg inc and jecxz faddl jne inc lcall fdivrl add mov cmpl pop inc mov bound pop repz mov insb ret pop cmp sub pop dec xchg add out leave fwait push pushf aad mov test mov mov aaa (bad) adc mov xchg xor movl fwait test pop inc jecxz lds ret jecxz mov outsb cmp aad lds mov jmp mov stos cld and dec in cmp push mov fucom movb sub push ret push add xor and or mov and test mov mov dec scas rcr (bad) outsb push out sbb es mov stos mov ret sbb adc (bad) xor inc andps (bad) or xchg add pop cwtl pop imul int arpl adc ficomp inc add pop ret or fadds add ret and bound dec ror mov in sbb sbb orl push xor jo xor push jg lret out out inc lds or (bad) sub inc scas push pop lret or cmpsl imul mov inc xor mov ds xchg inc dec mov (bad) mov mov cmpsb mov jns test movb mov mov mov mov psubw inc bnd xchg fwait mov je add xchg cli aad bnd pop jo xchg mov stos jl (bad) (bad) inc std js mov lock mov dec into div sbb (bad) popf xchg les call in in jle or (bad) call daa leave fcompl fidivl pop xor out (bad) enter jl das inc xor es or movsl (bad) adc dec sbb mov push addl jge test mov xchg (bad) enter sbb inc rolb or jmp dec jo or shrb negl and in stos outsb mov inc push test and and mov jl jns xchg jne cld popa data16 xchg icebp xchg pop pop test iret mov clc push sub dec scas mov test jbe mov sub xor repnz and mov scas in or movsl pushf pusha mov mov inc aas cmp (bad) mov hlt loop and push es mov loop add and add fcomps adc sarb shrb mov and in repz adc out rcrl gs das push shrb jg stc xchg jecxz (bad) scas cmpsb push iret dec das xor mov adc pop dec pop in inc add (bad) mov cmp je stos clc mov xor and loopne xchg mov (bad) inc bound mov mov stos (bad) push ret push jmp icebp (bad) xchg push fdivs pop mov in mov jnp pop test lahf je (bad) mov stc cs es in cmp cmc test push sbb pushf mov int3 leave sub (bad) fsub mov push pushf ds xor adc jle mov inc addb in mov inc jnp xor mov ret arpl outsb push push lahf les mov and xlat (bad) into pop add mov rorl push pop lods jmp inc movsb outsb sub jmp xor adc mov inc popa cmovl in xor dec loope int das stc fsubl rcl pusha and iret add mov lss xchg or jne (bad) sti fnstsw int3 push adc mov inc imul les jg sbbb imul cmp mov cmp sbb int3 sbb push insb and cltd popa mov jbe add pop (bad) push pop xchg ss pop adc test cwtl mov movsl (bad) in ljmp xor insl dec lcall adc ret cmp mov push xlat aaa cwtl fisttpl scas jg pop ficoml sahf sar jo stc xchg mov scas push pushf xor or test jne mov repnz lods sbb xchg incl test jns jecxz inc xor push jg mov lods in cld ret mov push adc sub or mov mov pop nop pop xchg jge mov or aaa add dec shrb daa (bad) mov inc jl xchg mov jae sahf ret jns cwtl outsl jge enter aad arpl daa or ja mov popa ret xchg adc jo xlat xor mov sub test in mov testb or xchg imul fcoml mov lods imul or jp dec cmp jno out pushf or inc out sbb sub push lds dec pop pop or cmpl ret or xorl fsubl jo sbb stos (bad) lcall dec inc aad movsb xor idiv sub inc or outsb pop in push popa repz cld and mov aaa xchg (bad) xchg jge orb and sub adc add (bad) jns aas xchg fistp loop xor or repz ljmp js inc int3 test mov test addl movb dec sub ficompl sub xchg adc lods xchg push mov rorb stos aaa inc xor cmpl or mov push cmc test dec mov jae mov xchg jb pop push insb cmpsl test in iret xchg popf or loop inc rcll aam jns fidivrl xor pop stc jae fwait dec dec jnp adcb test pop ret dec sub sub int aam ja test xchg (bad) jecxz mov push push cltd xlat jb loop in xor and sub mov in push pop aad dec cmc orb (bad) (bad) xchg mov adc dec mov js hlt xchg push clc mov sub mov (bad) test test bnd dec scas inc and mov pop lods push (bad) jb (bad) sbb add cld add arpl cwtl scas out divb sahf shlb lods mov out jne xlat stos data16 pusha mov lods (bad) sbb mov rcll adc mov push jb adcl mov repz fldcw sbb insb outsb dec (bad) sub xchg xchg cmc popf dec (bad) insb xor sbb fldcw insb cmc in data16 xchg lahf push (bad) out mov or lock cwtl loope mov (bad) je sar imul dec arpl popa lahf cmp (bad) add cmpsb (bad) jnp mov xlat insb cld push dec mov sbb out cmpl imul fwait add lahf sbb jl jecxz popa pusha jle and mov cmp xor cld int3 mov aaa int3 mov loopne sbb outsb pop lret pop ficomp (bad) or pop dec push mov jp push xchg adc mov in fsubs shll fsub or jp pop sbb mov rcrb and push pop jne int lcall ds push daa add js clc loop sub xor and add jns jge lock lods pushf mov outsb fistp hlt stc push std jbe fldl dec inc fisubr sbb (bad) pop (bad) pop orb fistl mov xchg add lret mov decb pop aam sbb xchg test ds mov push jp ss jb in pop (bad) cmpsb xchg out stos enter push xor mov int3 adc inc pop dec lods mov fdiv enter pop add fldl test sarl add jne lds xor xchg and rol mulb xchg jmp pop adc jnp repz or add out iret insl mov dec ljmp leave or out ljmp mov and xor loope fsubrp ljmp xor ja cmp movsb jne (bad) xor test adc outsb xor dec dec je movsl (bad) int3 insb (bad) jo push divl outsl int3 sbb cmp mov call mov aaa jle cmp hlt nop cmpsl and mov sbb lret add mov sbb inc pop (bad) mov pop xor out xlat pop xchg je out dec js repnz clc icebp mov push sub dec mov insl xchg loop push mov mov fsubs scas cmpsb and push pop pop xchg dec xor pop xor push out mov push cmc in aaa lret cmp dec pushf jp cmp mov enter jp mov in mov fildll clc xor adc adc fwait popf jns or ss imul mov js mov icebp lea mov je aad lods nop mov test lret bound mov out in (bad) iret add out iret or je add imul fdivl dec cmpsb mov push lcall jb mov jle insb cld arpl loopne xchg movsl pcmpeqw sub mov mov xor lret sub mov aaa sub push pusha js icebp int3 int3 jns mov movswl adc sub je jb jb lcall shrb sbb frstor repz insl fcomi mov lea movsl add imul loopne and (bad) pushf shlb inc jg jno or icebp and cs inc inc xchg inc xchg stos repz and mov inc call fildll mov mov movsl pop mov dec or and dec jno jmp cli testl test mov std pop or int3 xorl jmp jp test push mov dec negb inc ret push xor sub fnstsw jnp adcb (bad) imul imul aaa dec sahf mov cmp lds adc lock add stc push hlt rcrl jg rolb movsl lea pop aad into sbb jp leave sub pop ret bound and xchg sub mov mov scas cld add ret mov leave iret or add jno mov push adc add decb sub mov pop cmc sub stos lret jne mov in fldt adc inc popa aaa jg jns iret std sub inc push lods dec and (bad) das lret inc pop add jp sub ss inc (bad) lea cmp daa mov push mov aad jle in std mov leave mov nop or xchg jo int3 jb std rcr enter xchg bound loope test call and leave mov out xor imul jp hlt movsl mov shlb mov jge jmp lods mov bound shrb cmp lods xor pop pop pop data16 and mov mov pop push mov cmp sahf inc cs adc jge out xor cmp add or cmovb dec mov pusha adcl (bad) cld cmp xorl pop addl aad dec insb mov push loop inc ljmp jns push ds mov das inc call pop mov mov cmp test push mov pushf mov cmp adc arpl mov js imul ljmp mov out mov and js jle fldt add sub mov into jb rorl sub cwtl into fwait jbe and xchg push add xchg mov dec jo lods push (bad) xchg movsl adc pop xor jns inc xchg fisubrl aam pop cmpsb mov adc xchg and inc dec rol incl pop rorl push jae nop inc stc inc leave and mov jl mov out sbb js pop push mov xchg jge lea push pop pop jmp mov scas int3 stos int cmp mov shrb mov sbb in dec cmp push mov test aas jns mov sub clc push mov dec nop mov das (bad) pop loop or fnstsw imul ds xchg xor mov mov incl xor inc or mov mov scas pop out inc xchg push (bad) mov addr16 xor cmp ja mov lret fnstcw or mov mov jbe sahf lcall jne dec arpl in js push test add push jg dec push inc sbb mov xor and xor rolb idivl fstpt adc mov pop les dec pop inc mov jbe adc movb mov jmp dec jl ljmp loop (bad) (bad) mov jmp push add das rcll lahf scas icebp mov insb mov stc xchg cmp outsl negb push xchg stos dec mov in pop sub ret push push in call out lret arpl pop cmpsl push sti sub jl or (bad) out fdivl outsb inc jle add imul push mov inc inc pop and imul ficomp or and inc scas out lods mov (bad) dec cmp lret cmp ljmp xlat mov lret xchg cmpsl scas ja in fisub mov cmp popa sbb xor sbb (bad) popa sub jl pop popa in mov repz add (bad) mov dec test scas pop enter div add pusha jmp dec push (bad) or pop sbb mov js jae daa (bad) loop lahf scas cs negb inc adc jne push fcomi aam push ffree pop or mov inc and mov lret js mov ljmp mov movsl adc xor stos ret loope fnop aad mov adc lods or push jg inc add mov pusha popa push sarb push aad or push xor ret out xor stos es insb xchg push fbld clc sbb fdivr dec xchg fld jns dec lcall out dec jmp push sbb xchg imul cmp daa sbb pop or dec sub add pop test inc cs das dec jb jns xchg popf mov stc push inc mov mov cmp mov mov push pop push je pop sbb jle fld mov out xor int mov mov add lock imul mov arpl fldl dec adcb call add shlb fisttp lods mov adc xchg push das add lret movsl xchg add add mov sub push sbb adc mov xchg adc fs sbb inc mov ret push mov movsb push jg mov arpl js test or jle xchg dec pop sti xor xchg sti gs mov (bad) pop push mov daa pop aad sbb lahf in jmp (bad) fildl jle out lods push repz pop sub jl adc nop jl pop fildl into cmp aam out sub inc pop popa (bad) cmpsb (bad) jns mov push cwtl push (bad) cmpsl xor (bad) loop int3 adc scas shll inc mov lret and pop pop mov mov sbb adc (bad) mov bound mov popf sbb out outsl push pop roll (bad) mov out cs repz sub imul sub xchg mov fidivr insb jo or or test pop or add sbb xchg jl or mov xlat dec fldcw fistl dec dec cmp cmp out xor push shlb daa xchg add out (bad) jnp adc jg adc mov jmp xchg cmp and mov dec xor or push and out xorl mov fdivs mov xlat cwtl out das fisubl leave push (bad) and jno mov iret push mov cmp dec push in xorl and inc in das sbb fcmovne push or (bad) clc enter xchg inc push lods mov aaa loopne inc ss je cmp divb lock leave std sub test mov test add fwait cmp test cmpsl stos cmpsl sahf cltd aad icebp add adc cmpsl dec mov jbe addl mov sub jmp cmpsl clc shrl lahf xchg ficomp cmp mov (bad) sbb mov (bad) sub insl jo rorl xchg movsl jle push jmp inc test fs fmul pop scas insb inc popf pop or mov mov in cld out inc cmp push mov vpmuludq enter (bad) inc daa pushf jbe xor mov pop xchg icebp sarl add shll inc and fsubrl hlt ljmp xchg addr16 or lret and pop xorl (bad) mov xor int sub (bad) lea (bad) rcrb rcll imul sub fstp xlat fistp push cmpsl lea mov dec stos enter pop cli xchg popf pop mov idivl inc jno dec insb insl es push or mov mov fbld cmp mov fnsave (bad) pusha test ret xor movsl lock or movsl outsl mov xor lret push dec daa (bad) fisubr push movl and mov test mov add pop int jbe cld sub jg bound ss xor imul xor in mov scas jecxz enter pop test aaa cmpsb mov inc mov ret popa lea inc test or imul (bad) mov inc mov add (bad) mov dec push xchg mov xchg add lock sti fisttp addr16 pushl lods pop or les push inc push loop data16 xor xlat outsb push movl mov fadd add (bad) add inc sbb out xor (bad) pop jne xlat jp jg or ds sbb jl and jl,pt cmp inc jmp mov inc lret lods shrl les (bad) or pop stc mov cmp push rol in (bad) test and sbbb jns (bad) mov aas lcall jae pop (bad) mov and pop test jmp dec outsb jb adc fs push adc and dec es jns mov (bad) ja (bad) in cmp mov sbb inc out repz mov fldcw cmpsb cli andl imul pop add push mov pop stc pop imul lahf stos jns dec pop sbb mov pop sar out in xchg xchg fstpt jne imul test or mov cmpsb sbb sbb mov adc loope (bad) dec enter cmp loope (bad) (bad) pop jle int3 (bad) jns cs fsubrs aam out add rolb rclb lret inc imul repnz sbb dec (bad) rcl lahf fnstenv or pop push add adc lds insb repnz in movsbl adc in inc faddl rcl sbb xor dec xor aaa insl jb xor shlb xor call addr16 jb cmp cld mov test lds popf (bad) lret and sbb ret jns and xor fildll nop mov decl or xchg cld sub test add lret jmp pop bsf and inc rdtsc adc out cmp mov or mov sbb mov sub imul sub lcall dec lods pusha mov push mov pusha pushl jl sub sub int fcmove call adcl inc dec fsubs inc add loope (bad) xor (bad) aaa fcomi repnz jmp adc push sub xchg lcall jb xchg pop add stc add sub fild ror pop jnp loop pop mov jne aas jnp mov daa or mov add adc push mov xor xor mov cmpsl push jecxz xor push fild dec (bad) roll in outsw jne ffreep mov cs mov addr16 mov jle in repz rol dec pop mov mov adc fs in enter sub fadd fsubr and jecxz outsl js pushf into mov gs cld (bad) mov dec mov leave add xchg out shll es sub mov outsl sbb dec xchg scas dec mov pop loope gs cmp jl lods enter sub callw stos mov nop sbb ficompl jmp mov scas loop fldl push or cltd subl xor sti sub dec adc push jl lods jne daa sub push dec sub and cmc sbb push loope mov mov ss xchg adc stos mov push jg mov xor pop clc (bad) pop and adc xchg in mov pop add jle and scas inc mov and jge fwait insl pusha jbe pop or es pop xchg sbb jae cmp cltd in out inc xor in xor sbb and repz adc cltd or faddl mov test lret inc rcrb std scas test call pop mov mov daa inc mov cmpsb jae lock addr16 cmp fidivrl sbb (bad) sub dec jg add (bad) xchg aaa sbb mull and xchg jg mov in pop hlt jb inc adc xor sbb mov push jo mov repnz or call lret nop clc and aaa sub leave cmp std popa xchg in dec int3 add mov xor sub add jae fsubrl sub fnsave (bad) rcl bound es jp pop fs jge mov rcll into divb bound test mov inc addl sbb scas dec rcrb ss lret push incb push cli and jnp jg lret ja push mov fisttpl (bad) dec stc jo lahf fcmovnb dec subl arpl or xchg in xlat insl popf aam ror insb xchg (bad) fbstp mov add and or setne arpl add xchg repnz cmpsl iret cmp fimull mov fsubrs xchg adc mov dec pop lods adc rorb imul push fiaddl rol jg aas xchg xchg pop fdivr movsb xchg pop dec les push ret pop icebp in mov das adcl rcr repz into mov jge cmp push popf fildll fildl sbb or dec pop pop (bad) mov int3 push inc and mulb insb arpl push (bad) std cmp pop loopne mov sbb movsb fnop mov nop outsb std add in movsl and shrl aam int3 aam fs and push leave arpl adc xor jge pop mov fwait mov cmpsb inc mul jb jle or sub xor loopne int jae jns incb data16 adc mov push jmp cmp ret mov and jp std pop cmp rcrb iret pop repz ljmp and jg ja or xlat fucomip montmul cmpsb lds mov push xor sub fisttpll std mov aam adc or (bad) jb sub add inc pop push int xchg stos mov addr16 dec iret loop fstps mov rorl inc jns ja xor ds rcl and js (bad) xor xchg add in jne mov mov mov loop sbb adc rol mov jns cmp or cs (bad) sti stos inc mov mov adc jecxz stc push push scas lahf repz shr dec int3 ds sbb inc fcmovnu push and ret sbb loope sbb (bad) mov jmp data16 popa into jp xor loope test ds movsb mov popa addb cld xchg gs (bad) mov xor sub lea fimul push stc ja stos sbb dec sbb add mov or push or dec adc sbb mov push mov xlat adc (bad) fldcw lods cmp loope test lahf mov and adc and cmp mov push or push jp dec (bad) lea arpl sub push das scas mov icebp jp dec (bad) jno xchg loop pop xor jmp outsl mov outsl repz xor sbb inc inc sub roll sahf adc mov das repz movsl fisubl sbb inc xchg lret mov (bad) inc mov push (bad) ss and ja push imul lods ja xchg subl leave mov mov pop cmp add insb imul outsl cltd pop enter cmpsb mov add or xchg fldenv sbb pop pop fisubl ret push push cmp mov inc movsl outsl and test mov push push rcl inc mov (bad) lds sbb xor xchg ret pop shr gs ljmp mov jns loop pop pusha out push jno addr16 or into scas mov cmp mov clc (bad) fcomps sub and pop xchg fiaddl dec ss jbe mov cmp (bad) or insl stc cmp mov mov lods fcoms (bad) enter stos xchg xor mov cmp (bad) sub mov jno add xchg jne movsl ss xchg sub add cwtl cmpsl or push add sahf rcrb mov je rcrl dec xor sbb pop sub adc xor out xchg mov and xchg cmp stc ja or sahf (bad) jl inc shr lods adc mov scas fcmovu xchg pop call dec mov and in scas sarb popf psubw jno and pop (bad) je sbb or cs push (bad) cli inc cmpsb inc jmp (bad) sub fiadd dec js cmpsb mov jg mov push into sbb outsl enter int3 jbe cmc shlb popa inc je fsubs sbb in sub pop cmp and int pop imul jbe (bad) pusha and inc cltd (bad) call lret gs mov pmaddwd insl mov xor add loopne mulb mov xchg sub (bad) aaa call roll dec arpl in push ret loope aam mov inc push daa out out inc mov andl lcall insl dec xchg fnsave enter aas xor cmpb push add sub loop add hlt nop adc or inc das fistpll out (bad) xchg pop imul mov or push je sub insl inc jae sbb xchg das lods mov add leave ficompl stos mov lret iret imulb sar sbb sbb mov loope aaa xor loop enter fwait mov pop sub data16 or jecxz and push lahf sbb jg imul dec nop xor xor push ss dec xchg in mov stos and addr16 mov cmpb push push dec cltd in std imul repz out cmc lods les and cmp test xchg rolb rcrl mov mov hlt inc test sysenter aas inc imul jecxz mov and pop leave mov in iret imul cmp pop jle fwait add lods shlb insl outsl pop int3 pop push inc mov cli call aaa das mov scas (bad) repnz (bad) mov ja cmp dec stos stc js jle loop push clc adc mov mov cld push xchg jns testb mov sahf xchg mov test iret aad mov jno dec jl cltd insb call (bad) jne jl inc test sub jl loop gs sbb sti xchg sbb xchg mov push inc (bad) and dec jecxz cmp bound or es inc xor or dec popf sti stc add sub lret sub cmp fs (bad) adc dec push push test mov pop scas arpl fsub notl call stc xchg dec call sahf push (bad) push les sub je add inc jne dec xor test insb (bad) xor xlat lock dec sub push jb pop inc and and sti (bad) out mov sbb inc enter ljmp icebp adc jbe icebp pop xchg cmp pop shr popf push int fcmovnb stos imul lea lahf mov sub cmpsb (bad) pushf scas testl add jbe mov shll sub lods xchg jno js or imul lods mov lea ja (bad) (bad) gs mov icebp xchg cmp dec js sbb int3 push mov jg dec stc push push lods push jbe cwtl or xor icebp aad or mov aas insl dec ror push imul lret sbb rorb dec jbe add lods lret pop xchg inc pop test dec mov pop es fwait adcl mov inc and popa jmp push push mov jge in pop in mov mov mov jge bound push stos mov xor dec outsl cwtl adc icebp inc jnp push xor out gs cld les pushf addr16 sub pop jb mov mov fidivr mov dec call sub mov adc scas sub xchg pushf (bad) xor inc pusha out sub orl insl ret mov adc mov test and es mov ljmp test mov mov mov pushl push push add hlt ret cmp cmp aas mov xlat adc icebp fld ret mov sbb sbb pop subl xor push cs or mov mov adc ds lods out notb data16 in scas jp lret pusha or je mov cmp mov lock dec mov jge icebp outsl sbb jne hlt mov in inc sbb out sub pushw sbb xorl xchg pop xchg loopne pop jno imul pusha test mov mov inc fidivl (bad) das lods imul stos xor mov ljmp xchg cs pop or mov pop fistl loopne dec inc mov jae arpl sub ljmp mov lds dec and shlb pusha xor out add push ret loope xor insl inc pop sub and mov dec sbb iret data16 mov adc sub cmp jmp sbb push mov xlat cmp cmpsb and pop add cmp cld stos add dec imul dec std adc addl cmp push (bad) fdivr push sahf mov fwait mov pop fcmovb mov jnp jge xchg icebp push ja sub mov jo fiaddl movsb and add aas dec jecxz lock mov les mov xchg (bad) cld lock loope imul sub and fmull fisttpll sti xchg jnp paddsw jl dec pushl cmpb jo jae xchg xor out inc lcall aaa sbb xor and xchg fldcw xchg adc sub mov pop or adc dec sbb mov iret pop and imul mov mov push push fnsave fildll es or pusha push mov in test push repz fmull fstps aas repz fldln2 xchg lretw aas test mov orl cwtl push rol pushf mov dec push stos xchg push inc fsts fnstenv out jne jecxz sbb sbb pop push (bad) sub push or ret (bad) lret mov addl sti stos leave sub cmp dec (bad) clc outsb add push popf jecxz movntps push dec sbb insl cmc add inc mov daa aas jge mov sbb mov lds xor mov movsb dec push dec dec xchg fstpl lret mov mov arpl mov lret mov xchg xlat mov inc and stos dec cmp jl and into fcoms xchg mov adc shl mov mov xchg and inc lret (bad) js cmc test sub sub (bad) xor insb sub gs repz popf pop push dec std lretw stos fcmovnu fprem adc xchg hlt add fst mov inc pop mov out jo add jp imul dec (bad) scas jnp sbb rcll push pop mov popf pushf pop xchg mov int jg das push mov insl (bad) pop lcall push lods notb or xchg jl sbb out sbb add add decl jg cltd push sar add subl mov int3 mov add (bad) sbb xchg ds repnz (bad) negb xor iret push fcomps push xchg lret mov cmpl mov mov daa scas inc in sub ficompl cmp and scas and aas jle jnp xchg cmp inc pop (bad) popf pop mov mov and shld clc pusha (bad) dec dec (bad) ret xchg pop xchg pop (bad) mov je out in push push or xor xor popa jns xor lea adc jge jb dec sub lock dec jno dec mov xchg xchg inc push xlat sub in cmp hlt sbb ss mov insl jo dec (bad) sti mov add popf pusha jns xchg inc mov pop xchg pop stos cmpsb dec xor dec lret (bad) jbe sub lahf loope cmp mov xor mov arpl dec jecxz cld into daa adc dec test mov xchg pop jp inc lock inc pusha shll mov cmp daa add insl jmp stos or push mov mov and lock cmp stc xlat mov addr16 xor pop jge add lret xchg jns andl hlt cmp lret xchg mov mov mov test push or xor sub call or mov add cltd in push fidivrl (bad) iret mov jns fptan mov ret mov cmp fistl test sbb jbe clc hlt mov mov dec sbb fs fnop ds ret inc stos ret inc add stos and aaa imul jge cmp inc hlt test jb sub pop cwtl push and mov cltd cmc push test xor pop add in inc movsb push es js mov cmp mov jne fiadd push sub lcall test push push cmpsb inc cmp mov clc lock push dec xor hlt (bad) mov jmp push jno push clc inc arpl mov sub push xchg push pop mov nop cwtl add cmpsl in lahf addb cmp adc (bad) jge jle sbb cld and leave xor cmc add lea repnz adc jle pop lods stc jp cmpsl pop sahf rcr dec fwait iret orb dec mov test adc int bound jle addr16 movsb ret dec ljmp mov fcompl inc fs enter lock movsb adc stc inc mov pop ljmp (bad) adc aad loop jecxz dec lahf pop (bad) xor movzwl out (bad) leave pop je popa add dec pop je mov add jle sahf xor pop mov sarl mov dec out jo mov sub cmp std aas push lahf inc inc dec pop xchg mov fimull cmpl lods dec mov mov icebp out aad cmp inc xchg sarb add insl (bad) (bad) jecxz cmp int3 mov icebp and int3 xor scas ret cwtl pop push ret mov data16 incl shll ret aam mov ss or cld sub jns scas xor mov fwait loopne flds mov ret inc push je fsubs push popa movsb jge fs (bad) std mov arpl mov sub lret insb addr16 arpl es inc dec adc fdivs dec and mov outsb jecxz pop xchg aad in jne in lcall (bad) (bad) jge push and popa cmp inc repz add cmp sti insl xchg push test pop jno add (bad) bound jno mov test add or inc jecxz mov adc mov cwtl sub repz xchg jno or push fcmovne cwtl jge rolb sbb data16 jle int loop inc ljmp ret cmc dec les xchg jnp call sbb mov jp cwtl sbb push imul push or pop call jno or fcoml sarb test push (bad) lock insb insl jle and xor movb sbb aaa push ret add jae cmp or aaa lds loope inc xchg imul pop fs stos stc negb mov ret rcrb pop inc call pop or clc aas xor scas mov cmp mov inc pop xchg mov cmpsl pop mov fs pop jmp mov enter sti push imul icebp dec push cmp testl ficom out aam push sbb xchg push addr16 outsb fidivl fmull (bad) insl cmp mov push jp inc cmpsl (bad) mov add scas xchg fmull adc adc and loope icebp std xchg outsl fs jecxz fistl aam mov xor push lret aad fimull in mov jo out ds das stc push int jmp xchg sahf movsl dec call jle jb jg push jmp mov aaa (bad) or mov fsubrl loop,pn pop cmp pop mov addr16 or or mov sub xchg and ficompl fs push mov push adc insw mov mov mov pop aad xchg stc out test mov test ja fdivrl jbe iret test lods dec int outsl push inc pop add orl sbb lock lret imul sub adc xor inc mov mov leave xchg mov mov es jns add lahf jns mov frstor iret (bad) (bad) cli ljmp pop adc mov jo lahf mov lock movsb insl pop iret mov mov cs xor loopne fbstp cmpsl mov loope sub or cmp mov mov into or xchg push mov push add push pop pop (bad) in ret fstps stos push push mov pop sbb jmp jb jbe ret jb sbb dec fstcw or push mov sub push push mov and inc fs lcall aaa shll mov cmp or in mov xor mov mov loop and outsl call aaa add jnp int3 dec mov mov and mov adc (bad) push sub out sub shrl ljmp inc jnp (bad) out adcl push int3 adc outsl push xchg cmc add or loopne push sub (bad) pop mov sar fsts jbe ds adc cmpsl inc adc ret stos rorl cwtl mov xchg sbb ret mov jp int3 ja pushf mov xchg stos data16 cwtl xor or mov cli mov call inc and push sti (bad) hlt test xchg leave sbb movsl cmpsb pop pop pop int3 push cmpsb and dec aad mov cmp sahf imul repnz aad add fs into push mov inc iret lea inc sbb push out mov leave insl mov add inc inc rorl dec adc sbb enter dec mov ror test loope insb sbb fadds in pushf mov or add scas stos into xchg mov aas adc jg loope movsl insb inc xchg fcoms sti rorb xchg and cld test orl faddl add sub cmp dec mov or mov lds jno push aas enter imul das negl inc and lcall int3 sahf ret insb test mov xchg setno fdivs mov imul gs xor xchg jl push jge cmpsl sub mov cmp sbb and stos imul mov into bound adc lds mov sbb repz pop xchg add adc rcrb jnp xchg pop nop enter bound fnsave sub pop out ret mov pop sub push adc mov js fsub rolb les or cmp movb cmp sahf jo fs (bad) mov cmp jae arpl aas inc jle and inc flds push mov ret dec (bad) repnz int (bad) mov xchg aas push call popf aad jne fimull nop imul into sub pop icebp hlt inc std popf std repz loop dec pop in cmp mov lods mov das faddl movsb push into lea lret fmull inc js stos jge and imul adc les cmpsb std or or mov xor xor hlt add imul xor addr16 popa and mov lods push inc pushf push (bad) leave push xchg add icebp lods lds mov jbe push incb (bad) lock dec or add add sub mov lea bound lds popw test adc push popf push lahf push inc movsb adc jbe lea xor mov jb or mov pop add cmp cwtl xcrypt-cbc cmpsl aam xor xchg mov cmc test sub loope ja and adc mov mov fcomip jnp xchg add ds inc inc ret xchg int fcoml jnp les push mov repz pop outsl push sub in (bad) jmp (bad) into jg int mov mov cmp outsl iret xor jb pop jo mov stos add push andl push mov xchg dec xlat pop cmp and xor cltd inc stos out cmpsl insb jl jno jmp xor jno mov test test lods xor fnstsw or fcmovnbe inc pop xchg hlt sub test xlat mov sahf jne iret lcall pop cmp pop sti loopne add iret cmp pop xor dec jb mov adc daa add dec iret insl lret xchg (bad) (bad) ret or lret mov xchg divl mov cld add lea nop (bad) lret and inc push loopne gs fs jecxz loop into enter add mov cwtl std lcall pop movl or cwtl pop sub (bad) in inc outsl and cmp out or jecxz pop mov and inc adc repnz cmp inc inc out in cmp mov out ja shr popf insb loop (bad) (bad) xchg ljmp mov test sub xor sub shl dec scas dec cmp jle int adc fistpll sti movsl add loop (bad) cli jmp jle outsb mov imul sub xor cmpsb (bad) xchg sbb and pop (bad) or push nop out mov stc lret cmp test out mov ret movsb jp mov sub adc jmp push ret pop pop jno mov cmp or sbb outsb jg adc cld or sub inc dec add out stc arpl jp xchg pop xchg rorl test jmp insl les mov mov lahf mov inc stos int insb rol repnz and sbb push cmp cmp std jecxz rolb (bad) sbb mov sub icebp fcmove sarb out repz fild adc mov fs pop push repz jmp sbb mov pop cmpsl nop aad cmc in and pop mov jp jmp outsl adc mov sub adc int ljmp xchg out cmc push xor ja inc rcpps stos cli mov ja push aad push stos (bad) jmp enter or xlat gs add and jmp pop in outsb jae (bad) cmc adc mov jb xchg add daa fs mov cli ss xlat mov and mov xchg fdivs lret adc mov push loope daa push lret in aas mov xor test push or mov jb int adc inc scas lea adc mov mov push lea in inc int3 clc psubq mov lret hlt mov (bad) jge inc nop int3 jnp xchg ss pushf or fistl cmp imul iret mov cmc (bad) negl leave jnp rorl in stos mov or push inc push xor std pop mov dec imul or sub dec push cs sub pop adc mov inc and inc and jae sub cltd fmuls sub inc inc or aaa jp or lock (bad) mov aad stos call rolb add sbb mov mov dec fwait xor (bad) lcall mov out and addr16 (bad) push mov rorb int3 (bad) mov push sub test lods push and and mov dec mov adc jecxz push mov cli jmp test fild dec xchg lods inc lods mov add addr16 roll mov lods jg ljmp mov mov (bad) (bad) fldl fistl mov inc test repnz repnz push inc cmp fwait iret mov (bad) sbb imul addr16 lds push faddl sub incb cmpsb inc pusha (bad) xchg pop or test cmp jg leave xchg fsubrs hlt cmp mov fsubl decl cld sbb adc ficompl fcomps sti add push and fnstcw mov in inc in cmpsl dec cmp push jp mov sets push test pushf mov idivb sub or int3 pop ret adc mov add sahf fidivl sbbl leave jne arpl test and fs cmp (bad) mov pusha mov ljmp mov mov js adc out in mov cs sbb sbb jne mov cltd mov mov in add cmpsb cld into sub xchg jmp call daa fstpl (bad) stc or es jle ss cmpsb fdivs dec lds std pop ss xlat incb fdivrs (bad) xchg lock stos insb mov aaa cwtl add in mov ja inc jle inc push in adc mov cmp adc nop push or (bad) cmp jns dec xor xchg jge,pt jmp mov jmp mov push adc lcall xchg outsl xor xor movsb push out or xchg sub mov xor scas jno,pn inc (bad) std stc jnp insl flds call dec loope adc cld sub jg mov (bad) xor pusha enter mov mov xchg xor addr16 out ss out push sub mov inc stos popa lods and popl imul (bad) mov push arpl adc xchg mov pop (bad) lea push jbe xor fwait adc notb jno and lahf inc out xchg fisttp push and (bad) mov cltd stc inc mov aad es xchg lea sub pop loop mov add (bad) test adc mov cld (bad) jbe pop mov popf into or out repnz add cltd and adc ds test test lcall icebp dec adc jecxz enter inc fiaddl mov mov mov sti and clc test loop stos stc mov pop imul cmc out (bad) dec jo add jne mov stos dec in adc frstor jbe xor (bad) adc orb push dec iret out push mov xchg (bad) or daa fsubr xchg test jecxz hlt push test and pop adc movsb js xor push out popf jp mov push sub outsb (bad) jb and nop mov mov (bad) movsl jmp pop lahf inc xchg cmpsl dec cld pop sbb mov inc call or sbb pop mov ljmp lds ds popa pop aaa ss dec sub and xlat aaa dec jmp call in lds stos sub in mov lods mov xchg maxps fcompl sub in enter jns xchg and adc pusha push imul aam mov (bad) aaa mov or pop les mov mov and or shll adc mov roll orb push push sbb fstl xchg or push lret fisubl mov jmp bound fs dec push xchg mov pushf push test dec xor es mov push enter sub sahf and add jb jmp jmp test rorl popa ja and mov push fs mov push cld (bad) fscale lods mov sub outsb inc hlt pop stos (bad) xor imul lock xor je xor jae xchg (bad) lret loope test int aas scas cmp enter (bad) and (bad) pop (bad) das movsb in or add xchg jp and mov mov and push or (bad) mov dec in int3 jle shll pop lods jnp xor xchg inc test out adc mov loopne dec add loop (bad) lock add add stos xchg add leave loopne mov pop lods xor and in mov jg add cmp xor outsl inc int3 ret sbb outsb mov lcall cltd inc add cmp sbb movl gs dec sbb xchg es push pop hlt fisttp test cmp inc in clc aad (bad) std mov cs xchg cli sbb and imul push and xchg fcompl mov adc div sub mov insl ja mov fnop jb data16 rcrb iret pop push jg xor les es lahf push cmp mov popa andl cwtl inc popa cmpsb xchg mov jecxz mov int xchg add add mov adc xor ds push aad xchg (bad) sbb jmp cmpsb ljmp les xchg cmp test and adc add mov sub es ret jno js push lock or into xor (bad) dec es sub jmp bound mov in jl popf jecxz cwtl fmul jnp fsubs lods inc cld ss jnp cli xor mov and leave cld and mov js mov popa add cltd push loop add subl setb push (bad) cmp jl pop les pop out pop out inc js xchg nop and mov fxch push stc xlat and insb cmp into jbe test push push jb mov out add dec adc lds call inc idivb pop adc push stc loope add stos dec cmp mov scas xchg sbb loopne jmp (bad) cli fldenv outsl push (bad) xchg ret xchg xor ss lcall imul jno fsts or mov push nop (bad) mov lock fcompl push lcall mov or push cmp push cli in jno xchg mov call mov insb (bad) jmp dec int3 sub or mov stc gs pop lea (bad) add cmp movb lods cld cld mov push or add xchg imul sbb andl popf std imul scas inc repz das mov aaa mov stc xchg cltd lea mov cmp adc dec xchg out loope lret fisttp out je lods mov mov pop in inc jp (bad) idivb mov aas push dec dec es daa dec ret daa xchg sbb mov add into sub cmpsb cmp lea cs (bad) xor pushf jp xchg es jne clc aas in rcll inc std insb sub xchg xor lcall ret lret aam rcr mov pop rclb xor pop lret adc (bad) mov dec pop lea mov (bad) mov int jns ja add mov add loopne (bad) mov jnp cs or xchg cmp fiadd mov inc shll mov iret fcoms mov stos insb fwait sysret cmc xor hlt push imull arpl and cltd imul mov leave sbb cwtl cmpsl or test push lock jae and inc cltd rcrl adc cltd push dec clc gs (bad) out push out test cld or in cmp bound mov andl call inc call mov jae movsl pop div aas jo xlat pusha sub (bad) push or (bad) cwtl sub push loope pop push mov lahf and rolb gs mov (bad) push or push pop ret cmp (bad) in inc fnstenv inc inc fdivs xchg in mov lahf mov mov pextrw inc mov outsl xor jecxz hlt and jnp imull mov sbb int pop into aad xlat cmc mov pop ljmp jmp adc repnz xchg mov (bad) mov xchg (bad) adc xor jl insl mov out lret mov and pop mov jecxz subl or or jecxz jecxz mov iret lock jb fwait scas pop inc dec insl (bad) push or imul or popa subl movsb je lret or popa inc pusha mov into xchg stc nop aaa push cwtl jg cmpsl clc jge test inc loope sbb xchg shrl rcrb icebp mov mov cwtl and pop fidivr push xor lock and add js mov xor jnp stc aad rcrl push in mov shlb daa jae outsl les jmp mov adc nop (bad) dec nop jecxz or (bad) out dec scas stc sub scas rcrl xchg and test xchg push mov hlt sub je in push icebp popf jo add pop dec fwait inc inc xchg push mov xlat adc in popa adc adc cmp mov imul jecxz insb inc pop in cmpsl dec sub xchg test rcr push cmp js divb mov adc arpl sbb sti call xor shrl xor and into pushf into dec (bad) push jne je test aaa xlat push outsl aam frstor or inc (bad) pop icebp jne das push xchg insb (bad) pop daa mov and rolb mov add cmp ret sbb dec xor sbb (bad) dec out pop insl pop pop cs mov ret xchg icebp lods (bad) and push iret bound or xchg sub mov push cmp xor fsubrs lret jno mov sqrtps popf data16 scas fdivrp pop sarl mov sarb icebp jp lret mov or bound mov outsl dec test pop and lods push bound es inc aam or icebp and or push xor cld fldcw lcall add jle jne pusha mov inc adc jno in test clc xchg push push in jmp jae das pusha or pusha cs fcomip dec test xor jbe sti cmpsb xorl mov ficoml dec mov ret hlt aad mov jbe test xchg imul push sbbl inc fildll xchg push jo xor cltd mov sahf adcl rcll xor cmpsl scas xor add je out in xor outsl jne lock (bad) mov adcb dec ret fldt outsl push rorl cli sbb repz call testl xor inc (bad) push fmull sub icebp in and mov insb inc mov add and sti push xor jge cmp mov jae frstor inc xor (bad) jmp or cmp push inc add adcl or add xchg fcmovne ljmp mov push inc inc sub lods xchg fwait scas hlt jno jnp sub cmovl jg pop adc pop pop and add scas and aaa inc xor das pop xor fdivs cs add add hlt and fsubr and dec xor cmp xor lock repz adc sti pop add ds xchg ret sub mov fidivr push pusha sarl sbb cltd and mov jns adc push xchg mov mov dec jg ret cmp mov xchg fs cwtl shrl or sub inc dec sbb push and inc mov sub and int3 js ret xchg repnz out enter jle adc arpl mov mov iret loop mov xchg pusha sbb cmpl out int aam out cmp (bad) out dec xchg push push and pop out sub loop sbb adc jae sbb sbb in dec lcall push jmp mov imul push (bad) mov dec out lods popf les repz iret (bad) jb cmp test pop orb adc lahf (bad) mov movsl aas adc inc in pop into frstor mov fistp mov mov dec rcr es ror je daa cmp pop dec pop les cwtl dec fs imull jns stc es fldcw scas insb mov and jmp mov cmp mov jne cli sbb mov push call int3 in in xor mov les test je movsl test test bound pop push hlt mov xor pop dec adc orb xchg and rorl cmp scas cltd fldl2e cmpb into bound mov dec test dec shlb sub fiadd and inc jmp leave int3 test (bad) sbb xor sbb iret inc punpcklwd xor ljmp mov inc fidivrl mov sub dec stos pop iret dec pop nop jae adc sbb jns and sahf adc in fldpi inc dec insb mov loop push scas rsm sbb jl lods int3 lcall and scas sub shrb cmp sbb (bad) cmp mov out outsb in dec add outsb push push das mov mov loop pop arpl inc or adc push mov outsb cmovle mov jle sarl outsl sub jo pop iret loopne xchg ficomp xchg and pop imul xchg cltd mov lcall leave inc mov jmp or mov ret push cmp xchg jno adc rcl std or je call or les jnp add and fxch sbb xor dec mov pop inc add rcr mov aas lcall jp cmp (bad) fs add repnz out dec dec xor cld adc adcl dec cmp arpl in mov pop jbe loopne data16 fnstsw dec and or inc or pushf cld xor sub push jecxz pop push int3 test dec aas cmp add pop xchg sbb dec (bad) sub into jl mov cmp push jno pop stc leave pop mov ds aad cltd lock nop in mov push insb sub jb sbb xor cmp cmp pop inc add mov imul (bad) cli rorl jle icebp add out aaa (bad) pop and mov inc adc mov out and in ss inc sqrtps sbb jbe (bad) scas repnz out ljmp loopne jmp pusha mov in adc std xchg in lret ljmp cwtl arpl outsl pop scas in (bad) and jle data16 mov fidivrl lock ret mov xor push and cmp mov das or push movsb sbb hlt fildll mov lock xor mov popa std jno sbbl fcmovbe cmp pop xchg xor sahf xchg dec jnp sub out sub xchg or arpl andl (bad) loop aas xchg and mov ret sub int les jo push xchg mov stc jne lods fcmovbe push xchg ja inc inc ja sub jle mov popf sub lea ss jne pop add adc sub fsubr xor lret push scas cmp subl sub popa punpckhdq sbb or lret xlat data16 lods mov inc push xlat hlt lock push adc or aad fsubrp cmpl xchg daa dec and dec cld in dec mov shl popa (bad) or xchg sahf pop inc scas or lcall push loopne push xchg mov popf sar rcll clc mov sbb xlat hlt pop sub int3 je pop mov push add xchg movsl pop jl aas mov lock mov sbb sub inc sbb js shll push imul andl xchg loop cmpsl xchg pop data16 xchg imul xchg pop imul xchg xlat push mov hlt jne js lret outsb or in pusha adc ret xchg into adc in pop jg jge or mov gs mov and aad leave pop pop jae inc lds in (bad) cmc cs pop adc imul push fnstcw movsl adc pop dec add pop std mov scas jb or sbb mov jno mov push mov pop push fistl xchg mov dec loop daa sarb push mov nop inc enter mov push sbb adc add and xor adc pop dec mov (bad) das xor iret dec insb xlat adc aam cmp add or and pop idivb insl mov ret lds subl sbb bound divb cwtl loopne in shlb sbb je leave mov jno sub in roll dec xor shll in cmpsl push mov dec and incb das inc mov pop cmpsb lret in sub lret lahf enter je cmp into mov mov in cmp dec mov cmpsb test jecxz push into jge add lahf mov addr16 popf stos inc or lods xsave lahf xor mov dec inc rcll rclb stos xor jle adc stos lcall mov fist push stc addr16 jb lahf fld jno sub leave addl aas hlt leave insl les jle stos ret imul leave inc lock jo imul jle push (bad) mov movsb rcr mov test iret jge cmpsb pop mov das cmp mov mov (bad) imul enter (bad) xor jp and lcall gs jecxz cli ds push iret cmp lret data16 add mov and mov es lods into inc mov push dec out inc cltd ja cmp out xor pop sar adc leave shll dec call cmp das xor xor add sub andl (bad) cmp jle adc xor pop pop (bad) mov icebp bound in sbb sti js dec push pusha push andl stc xor hlt push enter mov cmp and out jg cmp pushf test mov and and inc dec jo mov jmp call sub popf jnp in sbb imul outsl jbe push (bad) lea sbb clc sub dec jb inc das xchg loopne negb js jo jb in out cmp mov out aam add push pusha shlb call ja mov mov cwtl and fs mov inc push jne pop push clc aad and pop aad sbb sub sbb aad jl mov (bad) sub ja mov add cwtl into enter and add ret xchg fwait (bad) outsb jne inc cli inc mov inc cmp jg cmp insl sbb mov sub mov inc fsubrl je (bad) jbe cmp (bad) scas gs dec sbb stos sub mov fwait sti or les and push add pop jl inc mov push (bad) add jecxz add scas jo xchg sub sahf jmp xchg mov push push mov sub push scas (bad) or sub mov retw xchg and mov bound mov and cmp jp cld mov ljmp or xlat shr push push test jmp aad or mov adc stos cmc sbb int mov mov add xchg gs scas dec shlb inc bound mov outsl cwtl xchg mov or xchg fsts data16 dec cs test loop data16 test imul inc adc add sarb loopne in arpl std mov dec jp mov or fisttp fimul lret add mov bound dec ss xchg int insb sbb adc data16 lods fs dec mov hlt or out xchg push nop jae mov nop out add jbe dec shr mov sub jb lods push add fldcw stos mov xor stc mov (bad) and imul lret (bad) push mov fildl mov jl insl jns push mov cmpsb sbbl and push pop aad xchg dec ret leave add mov ficomp push stos lods pop jo mov mov (bad) mov test or sbb mov xor sbb jo pop std mov mov lods dec fidivrl fnstsw push cs cmp push adc fs mov out stc pop call stos (bad) xchg jge lods push fnop mov sub xor icebp repz nop dec wbinvd or call int3 mov mov or xchg int call jbe jge xor fndisi(8087 jns inc dec push test jmp aad mov ret arpl rol xchg out add jg jp mov lret push rclb dec xlat sbb dec pop pop lret stos lods mov adc push push sti cmp aaa mov subl mov pushf (bad) jmp mov adc in les out mov pushf adc adc mov les ret jbe pushf je adc cld outsl rcr cwtl (bad) mov lahf cltd pushf dec or xorl push ds or and test mov pop sahf jp sbb cmp jmp xchg shrl clc aad fbstp push and or loope iret mov push sbb pop mov cwtl add push sarb dec icebp aas cmpsl jns ss les push ljmp add mov cmp xchg hlt pop push sbb cld out mov xchg mov adc xor (bad) aaa (bad) call repz in mov scas push cmp mov cmpsl jl sahf (bad) or jae sbb in jae rcrl pop aam mov ljmp jnp push mov xchg je test (bad) into add xor fistl insl fildl pusha inc push (bad) xor sub fnop movsb (bad) sub ret sub mov (bad) sbbl lods pop (bad) mov and fidiv outsb push orb imul xchg in jns sarb inc nop xchg mov adc mov rcrl sub mov std subb rcrl addb sub adc or jnp bnd sbb cmp inc pop arpl push js inc push add out push sub sti stos div mov test sbbl cwtl add leave outsb xchg aad bound ljmp cmc sub movsb mov adc aam xchg arpl mov dec aad pop mov inc mov dec jb jns mov pushf or loopne and cs xchg xchg test sbb mov mov or xlat mov inc fs pop mov cld sub popa mov xor (bad) aad call xor and (bad) popf imul jb pop push fisubrl fidiv xor and ror std nop inc into es std push add xchg xor sbb dec adc cs xlat cmp jbe lret mov inc aas mov outsb pop data16 inc cmc lahf cwtl (bad) xor inc sbb jmp dec mov and ret push test add test sbb jp mov dec and push mov nop (bad) aaa (bad) and mov rolb lret xchg stos mov imul enter out stos fnstcw dec cmp mov lea cmc (bad) jno and add fmull in push pop pop or inc or xor (bad) add push and outsl or loope out pop dec into pop orl imul popf and mov cmp insb jg movl mov mov mov sahf add dec (bad) adc adc cmp inc jbe jl adc jmp inc push push test cmp sub pusha sbb xchg out add test sbb adc ret xchg push add dec mov inc and lret jbe xor mov mov stos mov ret int inc xchg fidivrl out push loopne jl push pop sub repz sarl daa pop dec sbb stos mov out mov stos dec pop sub mov js and push lea pop (bad) mov jmp sub mov (bad) lret xchg gs or mov fildl sarl and dec sub ror ja xchg gs ftst jb push call and inc add (bad) aad inc call mov pop push fstps sub mov lret pop xchg push sarl sub jmp jns shlb pop inc xor rcrl jbe mov mov or push in cmp add (bad) sahf and mov sarl mov xor ss fwait repnz jp lock jae std and mov dec loop std sbb xchg and std mov sti push adcb xchg push stos (bad) mov add fwait and or lahf xor jo fild loope int3 dec jge or mov ret push inc xchg sti mov add add push xchg push xchg fsubrp addr16 fadd fs pop int mov shll xchg and rol sti sub fbld fnstcw add add sbb cltd test mov cmp xor ss pop lret fs mov (bad) xlat jp movsb leave stos inc mov loopw rcrb push imul jae push jl push mov mov repz pop ja adc or pusha in sub hlt outsl sbb daa pop nop rcll nop pop inc sub lret mov mov pop popf enter mov pop pop data16 cld mov mov pop sbb cmp fadds mov in push mov or outsl lret pop in push cmp adc jmp pop xor jl and xchg imul (bad) xor dec scas push xchg stos add insl lds or mov mov out xchg (bad) mov popa stos ret scas es cld sbb pop add pushf shrb jo scas pop mov adc pop insl dec js bswap pop push ss jl imul pop adc sub sub pusha movsb jnp xlat mov daa cmc andl fldt and sti mov push mov lret scas mov int3 jecxz jo scas nop mov addr16 xlat mov insl movb xchg jle jge mov xchg (bad) or (bad) jecxz lods xor pop mov rcll xchg js add (bad) loopne sub sarb in js (bad) sub ret sbb mov and pop outsl mov fidivl mov xchg movsl xchg sti xor add inc arpl add das ds and push fldl adc sarb jg inc popf adc out ret fsubl sub mov pop idivb adc sbb xor js (bad) fsubs mov cmp stc mov and bound ljmp aad and int3 and push jle insb clc (bad) rolb je out inc sahf mov pop testb mov jge lods out clc sub mov fbstp cltd inc jae (bad) mov mov nop das dec mov push test mov add cmp cmpsl in test mov (bad) push and xor sahf mov sbb and add leave sub push lahf dec imul xor xor mov or add xor out test daa pop push mov and xchg (bad) cmp inc add mov adc fwait pop repnz pop add daa inc inc (bad) jne xchg data16 lods punpckhdq and xorb jo in jp rcrb aam sbb ljmp xchg popf sub stc jg cmp cwtl rcrl arpl jecxz push mov test push (bad) mov cld cmp std lret or cmpsl push pop hlt and add lret es adc add fwait movsb in (bad) lock xor sub push jg std sub (bad) cmpsl cvtdq2ps dec mov pop fistp (bad) sti cli shr ret hlt inc mov testb cld mov ja jo mov xor dec sub fcomp jge jb scas or cmpsl push dec out xorl mov dec popf mov inc lods rcrl mov test push inc mov and or repnz or scas jecxz jmp mov sti aaa sub out lock imul daa mov dec in stos das in cli jecxz xchg jge xor sarl inc enter stc movsb jbe lock push mov jbe inc and dec push jmp repnz lock cmp insb mov mov stos and movsl mov mov or add push cld ja les subl xor xchg pop push arpl mov in or nop (bad) sbb and mov call mov std dec outsb out jp jle sbb mov mov cld int call pusha jl popf fstpt adc or rcrl dec pop (bad) fnstcw cmpsb add rcr fidivr iret lret lods or mov xor cwtl jmp imul into fsubrl xor mov inc test movsl push test xor das cmp xlat jmp divb in dec adc inc sbb (bad) fdiv inc jg repz rcrb fsts je add cs and add scas mov or dec int mov stos xchg or pop push push adc fisttpl and mov xor sbb (bad) mov xchg dec xor cmp mov dec aam lea mov push daa (bad) insl negl cmp add iret clc push bound inc out xchg fcompl test js and pop lcall and insl sub mov pushf addr16 in jecxz dec popa mov ret in inc mov aaa test xchg leave mov adc icebp cltd lock inc push jno in pushf (bad) mov push loop movsl jg call arpl test push arpl lret jnp test dec sub push and imul outsb fisttp push fisubl mov call ficom adc jns mov and out adc data16 lea scas insl pop cwtl add sub mov lahf jo test mov push mov cmp xchg jnp movsl adc insb add mov mov or sbb cwtl outsb shll mov pop into adc sbb push mulb out sbb insb sbb jbe (bad) xor inc test pop mov loopne mov cltd lcall or cld jo pop xor inc mov push push and divps shl push mov or lea xor and push jae or es in dec add test push cs test pusha out mov jno or fiaddl (bad) jo mov sti into es xchg imul mov loopne in ja dec cs loop lret clc xor push xor jo je jnp rclb aaa cmpsb in neg pop cmpl loopne ljmp mov ds mov push jl push pop or fwait repnz push mov das sar test inc cwtl xchg sarb xor repnz jns mov mov pop (bad) addr16 adc inc jle cmpl mov push xor shlb jno data16 lock loope or imul mov lock (bad) aam xor out mov (bad) cld inc scas jo addr16 jnp add pop fldt and mov add or mov push mov aad cmp int3 add daa ret dec xchg in and mov hlt xchg inc outsl jmp cli je and jmp sbb aas and test ret cmpsb (bad) cmp xchg cmc or jb jo movsl call sbb or mov loope mov mov add inc sbb push inc in mov jge xchg pop ficom (bad) loope (bad) in mov ror pop pusha mov movsl (bad) enter gs pop xchg sbb mov push dec pop xlat sub (bad) add les or cmpsb dec inc mov dec repnz test xchg cmp ljmp movsb iret hlt inc mov shrb jg cwtl pop arpl pop fcmovne in xchg xor jae xorb cs sbb xchg xor cmp imulb adc cltd (bad) push hlt test xchg mov bound in outsb pusha cmp leave xchg jbe jecxz ja or lahf xchg mov (bad) rorb cmpsb adc and js sub pop int3 mov pop inc fdivs add jbe cmp fs mov add int3 pop push test sbb sbb add xchg sarl dec push jb mov xorl inc pushf stc sub hlt sub dec std cmp es aam dec mov cmpb inc in jns inc push add pop xchg aaa pop adc sbbl add jno inc cltd push pop leave loop pop mov xchg fldenv roll int3 mov mov jl shl xor ds mov sti mov adc push fldl or add mov sbb inc nop and inc and sub popf mov gs faddp outsb repnz aam add add imul dec lea and loop dec ljmp nop jb in fdivl sbb jmp fisttpl mov out pop pop xchg in and mov xor out pop pop pop sub sub xchg xor fimull cmp insb (bad) sbb test sarl pop pusha cmp mov stos mov xchg cwtl int3 cmp test mov mov jmp mov testl mov in std addr16 sar (bad) jns shll andl (bad) je popf cmp jne adc inc jmp inc push xlat push je inc add orb leave cmp xlat (bad) pop sub inc add dec fiadd lods pop lock adc push jbe mov (bad) inc inc cmpsb out jl push js push push mov sbb inc mov push cmpsb push xchg jbe xchg inc addr16 push adc mov xchg jmp sub adc mov test icebp or cwtl mov sbb bound daa sar jp andb xchg mov stc xchg mov insb mov sbb xrelease sahf and pop xchg (bad) (bad) cld adcb dec jmp mov fimul enter mov push arpl cmp int3 mov jmp add sbbl cmp xor ss xor (bad) xor lods fdivrs and arpl xor lret test shrl lock add adc push sbb xchg inc sub adc push inc pop xlat cld inc mov mov fisttpl mov dec inc dec lret push adc rol jle (bad) mov adc in outsb xchg addb push mov in inc icebp inc inc in sbb test imul pop (bad) scas adc mov test mov mov enter fimul lahf div gs adc dec insb mov rolb inc inc push sub test (bad) mov adc bound iret ja and push (bad) mov xchg jb bound repz sub fisttp lcall cmp pop sbb outsl pop mov dec hlt jo mov scas insb in sbb push cmc mov into ljmp adc in (bad) cs push iret adc pop and push sub fnstsw imul xor loope xchg sub jp iret push and lret adc xor inc loopne lods shlb mov inc add xchg call xchg lret aaa mov jge mov pop stos mov inc mov outsl sub (bad) xor push sub jg lret sbb shrb ja pop enter fs xadd inc cmp xchg movsl mov fildll ret test pop push sub mov mov push loop cld jecxz mov cmp lcall xor imul sbb sbb mov pushf sub rcll icebp mov inc test jbe push icebp or sub test stos data16 scas mov xchg xchg cmp out xchg leave adc out or jb int3 lahf insl in clc xor or fist lret mov add inc push cli sbb or mov pushf insl xor jg pushf mov mov lret stos roll push mov add dec dec mov sbb xchg pop xor ret sbb dec sbb jle sahf out jnp scas movsb xor aas lahf ret mul xchg inc adc mov punpckhdq mov cltd imul nop pop or movsb push insb xor xchg fwait outsb decb dec aaa mov push dec add adc mov lods sarl jnp call jns inc push inc add or repnz mov std das jno jp mov ja pop xor fcoml jge scas leave fmulp jo int3 add mov movsb int3 xor sub aad fnstsw idivl mov repnz adc jl pop or sahf dec push andl push adc push addr16 cmp dec fildll sbb out insl je loopne cwtl inc lahf lret adc xchg cmp mov adc lret sub jnp adc mov ljmp fs xchg mov mov and lcall push cmc dec xor lea and jo lahf shlb nop jno sahf push mov mov and push mov movsb adc cld (bad) inc mov xor (bad) in mov scas push jle outsb jns inc sbb xor data16 es jge enter mov fisubrl fdivl lahf and xchg mov cmp xor stos pop imul pushl in mov dec pop sub or loopne es rolb cli mov pop mov sub outsl fiaddl xchg and mov inc mov stc pop jle jmp sbb xor push popf out jb mov (bad) mov pop or pop xor das fist in xor push push repz push popa lahf sbb cmp sub data16 data16 mov addb jne lahf movsl jae ffree xor dec sub sbb push test test imul mov jge mov mov cvtps2pd lea hlt mov ja jo or pop jno adc mov or adc and test jnp (bad) mov stos jmp adc push clc mov sub dec outsb imul add dec (bad) idivb fwait xchg dec mov sahf sub sub push scas mov jbe cmp cmpsl out arpl xor fs sub adc mov insb (bad) mov dec sti inc or push rcrb inc int retw sti lods push mov mov scas lock icebp icebp pusha outsl mov jo pop dec ret dec mov out xchg xchg add neg inc test lods mov pop jbe std scas xor data16 fnstcw call mov cmp mov sahf movsb mov (bad) lock sub loopne fs in mov mov jge popf push mov push dec clc jnp repz push addl jne jb mov xor aam in gs into stos pushf fisubr out aaa cmpsb jge hlt stc clc push fiaddl and jo and sbb jmp cwtl fld1 pop cs (bad) sub lods inc mov aad pop in rcll ret lea int3 xchg or push push pushf pop cld aam xchg and dec mov (bad) ss xchg add mov or aam int3 lcall xchg (bad) dec into cwtl jne nop add xchg cli xor fadds std cli (bad) (bad) notl outsl repnz (bad) ss push out shrb outsl inc mov movsl jle arpl cmp mov cli ret aad inc add aam fs mov fidivrl jp pop jl and loopne or fisttp scas sbb add cmp imul loop addr16 in insl ss mov into bound cld dec xor jb sbb cmp adc stc mov outsb push mov lahf inc mov pop cmp (bad) mov fcmovbe (bad) or sbbl out jae and mov ja push jmp and or lahf das or test hlt test xchg inc je pop sbb jns inc mov xchg mov sub and vsqrtpd sti and mov addb and cmpsb ds sbb popa mov jnp call fiadd pop aas andl push pop aaa and pop sub loope popa fisubrl mov cs out sti xor inc daa xor fcompl clc add sarl jle dec push lret inc into (bad) jno inc sahf imul push jmp (bad) out outsl sub stos cs xchg add adc lcall mov movb cmc pop fs mov mov and xchg inc add adc and jbe sub add dec lods inc in sahf xchg and cld mov mov or sub cld hlt push in lea ja fwait ret stc mov pop dec dec add addr16 call jle mov xchg lods les add scas loopne adc mov test sahf cltd pop push sbb in movntps bound inc sub stos mov xchg lret adc xchg es jp jge std call inc es cld insb mov aad dec sub jmp roll mov es ja rorl sub lahf adc inc scas and mov aas or pop sbb imul lcall add mov pusha xchg mov xchg cli popf pop bswap xor xchg inc lahf dec (bad) in (bad) jb mov div cltd ret mov lock movb push mov pop out pop das add fstps mov push (bad) int std nop sub addr16 push inc xchg in add aaa aas mov fiadd iret imul dec gs and loope mov xor mov jns sub jge jecxz xor out vmovapd out push pop mov rorl bnd leave add mov cmpsb mov fnstsw call fdivl test lds mov xor xchg pop in js mov aad rorb xchg mov (bad) mov rcl repnz pop push xor fdivl jb iret lods or sub repnz adc ja dec sahf out rol hlt mov ds mov or cmp adc mov cs loopne daa das mov xor push mov xchg mov jg inc scas xor adc ljmp jecxz mov fdivrl mov xor and inc mov sub iret (bad) das les cmp movsb dec ret pop mov and pop or mov add pop adc dec mov cmc pop add jnp push inc jnp mov xchg enter mov lahf jle cltd icebp and movsb fsubrl stos add fnstenv (bad) dec xchg sahf cmp jnp addr16 adc mov clc fdivl in lahf fnstsw fwait jns sub clc add test push mov imulb and out jo jle mov sub mov dec xor das aam pop call fsubrl fnclex mov sub popa push and xchg sbb cmpsb jl stos push jecxz xor popf cmc add dec add insb adc fs fdivp mov cmpsb jbe adc lcall xchg push jmp xor push es mov test leave jg (bad) push adc (bad) clc pop test arpl jp mov ds mov mov inc fdivl cwtl ss lahf dec fimul or xchg (bad) xlat cmc mov mov mov adc sbb push (bad) cmc mov (bad) mov jne in repnz or jl push lea shrl or data16 in add dec cmp fwait aas jecxz add inc pop or xchg das loope enter das mov mov pop and cmpl repz fsubs das js mov pop add addr16 in enter jmp inc mov inc or fsubrs or push in push cli and jmp push mov lret pop jne xor inc orb adc jo leave push cs xor xchg push bound mov ja xchg dec mov (bad) adc mov mov and int mov sbb andl cmpsb jmp dec ds cmp jl hlt (bad) push jne test jmp lods jbe aaa xchg mov rorb or pop and popf mov mov sbb xchg addr16 add icebp in leave inc dec icebp aas das repnz push jo int3 in push cmp jns mov cli sbb xchg mov push fisttpl addr16 in pop (bad) (bad) cld in or daa mov jno mov cmc fs mov addl fiaddl scas jmp and daa sbb mov out popl out scas xchg ret outsb out xor cmp add loopne rcl mov decl test jne (bad) nop test inc adc jg test jns test addr16 jge mov into fs push jmp stos shl pop pop rcrb sub das test je mov test or push xlat int adc sarl pop push cmp scas ficompl outsb repnz cmp pop fisttpl pop jne push cltd xor cli inc mov inc sbb sub in mov (bad) loopne rorb roll rcrb sarb xchg push (bad) in inc and jne pop xchg outsb jge out sbb insb insb scas pop push out (bad) fdivl addr16 aas mov mov in sub mov inc and jl cwtl outsb xchg add inc inc pop stos imul sahf jl (bad) dec jmp adc dec insb movsl repz shll mov imul and in js js sub lods clc inc shrb enter ret fidivl push psubq imul fsubr dec data16 lods ret mov into mov xchg cmp incb and fsts pop mov mov (bad) xor push outsb out pop hlt sbb fdivl adc mov (bad) test and and aad push shlb mov and lret mov aaa cmp mulb cmp stos jo xchg push push add xchg loop outsl fnstsw jecxz pop pop xor jmp mov mov sub es lret daa dec test push inc push push or mov xchg out loop or jge gs push adc dec lret cmp jno jp push sbb push mov std dec stc movsb pusha mov dec push inc dec sti mov push loope mov pop cs or xor iret lret inc dec jge xor int pop sbb and orl add inc mov jbe sbb sub jb xchg fdivs lds cmp and mov and popa aam aam xor (bad) fiadd xor mov sub lods insb push sub pop push inc sbb sti mov clc jle xor jb xchg and jb mov jmp int mov jecxz loopne push or jp mov mov sbb jns jo mov (bad) cmp int xchg (bad) pcmpeqb pop sbb in in cmpsb mov mov push sbb and sub cmp insb shr pop add pushf push mov mov rcrb popf sbb cmpsl cmp mov je stos popa dec inc insl push nop add leave insb jae xor adc and dec roll xchg jnp inc fistpl jmp (bad) mov in and daa fist push mov (bad) in cltd lret pop push test adcl push jo xor mov repz fwait xor sbb pusha cmp test aas jb sub pop xchg js pop rol jmp outsb xor cltd push mov in adc cmp adc pop fnop aas push mov push outsl jp fsubrp rcll stos xchg inc xchg push jb cwtl add dec and pop add push push cmp clc xor cli pop or (bad) out divl lahf lcall lods push rcr and jbe xchg xlat cwtl loopne pop pop clc xchg or orl (bad) mov arpl lcall cmc mov inc push shrl mov inc xchg mov adc jge add push pop inc mov mov sub inc add addr16 sub cld adc lret (bad) or sti int lret sbb lret mov ljmp push mov or stc inc les inc enter mov jl dec add push insl xor and mov xor pop mov fidiv les jno pop mov test cmp mov popa test jmp cmc xor fs pop jp cmpsl ds cmc repz sbb testl fs hlt push dec mov inc mov mov inc xor data16 scas sar xchg add add mov sub push inc iret push (bad) mov int3 or sbb and cmp js or and out imul mov mov and aaa repz push std (bad) xor les ljmp (bad) pusha inc loopne repnz sbb pop sbb lret adc sahf dec cmp in xor imul sub movsl push lods xor (bad) pop popl and mov dec stos pop in push xor rcr jl (bad) in in out push add das call mov hlt test inc icebp xor or aad inc insl pop mov xor xchg mov mov nop aas pop cs inc cmp loope xchg scas negb loope cs pusha scas sbb jl or dec inc scas pop inc icebp adc orl jne popa fcomps mov jb inc mov push cmp test push repnz dec adc jmp sub notb adcl lock xor js or dec sub sar stc xchg jle xchg jge cmp sahf or popa bound stos pop cs mov and sbb fstpt cs outsb pop jge,pt adc sarl sbb cmp mov aam cld cmp cmp inc sti cmp mov ret daa xor mov in pop imul mov cmp xor mov enter je js push xor pop fwait pop dec jmp pop lret dec mov mov mov stos jmp jl dec in mov pop mov clc cmp aam icebp in out insl xchg mov aaa inc out popf mov aad test popf xor mov arpl jmp les jns mov pop jnp mov mov or jg and lock jb jl pop jbe pop out adc inc mov pop or stos (bad) stos or lcall repnz (bad) repnz ret subl adc les pop sub sti xlat lret and pop jbe and shlb ret mov outsb int3 xor std xlat xchg stos xchg inc push (bad) jg js test xor jbe test sub inc cmpsb call test push test xchg in add cmpsl xor sub add or mov or jmp adc (bad) dec inc ljmp adc ss add and fcmovbe iret inc jb add add dec lea mov test (bad) cmpsb mov jae push call sahf inc cmpsl lods (bad) movsl mov mov dec push pop or aaa wrmsr dec dec stos (bad) mov push sbb push into scas and adc cmp ja cmp mov xor pop fiadd fild loope push jmp mov sbb mov and cmp in xor mov dec les aam adc xor ret or sub cld andl sub mov sbbl or or or mov mov aas or adc cli mov sub je sbb call jecxz ds into jg into (bad) fildll xor mov cmpsb aaa push xchg int push dec jne rcll mov sub andl loope push xchg dec mov push inc cltd int3 out cwtl dec les mov mov ljmp (bad) lock das sarb cmp push cmp mov or fwait dec and and hlt sub les iret sub pop sub sbb or int fstpl mov inc or push push or mov mov or or inc cmpsl dec mov adc push call pop cmpsl xor and fs (bad) (bad) jne (bad) sub enter fwait fs data16 pavgb dec xorb icebp rcrl cli mov rcrb or test sub inc adc and nop popl pop lods inc test xchg outsl push add mov in clc xorl mov push fwait inc dec jp or pop mov inc mov sbb int3 cmp mov sbb jl xor sarb mov (bad) push add pop movb mov movsl mov iret aam and popa and pop adc xor and inc lahf stos shll pop adcb fsubp xchg push pop daa scas inc iret (bad) mov jne popa out jp inc xchg pusha pop jnp out in hlt cmpsb enter jae inc popa mov test sub xchg sbb adc test es add mov test or std push test dec arpl jl loope cmp (bad) dec (bad) jl jae sahf jno incb lods ljmp dec push imul lds cmpb xor sub scas lahf or mov (bad) test je inc movsb pop xchg push (bad) cli mov out int3 mov dec fs aaa and rclb xor enter pop dec pop test call mov xchg or or xor insl movsl std xor xor push scas (bad) fsub pop loopne fbld sahf in pop pushf into xor imul sbb xor das jns inc (bad) pop pop stos sti adc adc push sbb mov jge je in lahf arpl rdpmc mov mov and pop xor sarl in insb divl xor jge dec inc popa fwait xchg clc xchg ja into xchg imul push or ja pop inc (bad) mov pop divl sub push and int sub mov shr loope ret sub ficoml cmpsl jp add lret mov or dec push jmp (bad) enter and aad je and and outsb stc insl jg xor add add inc gs sbb mov xor loopne outsb andl lock (bad) cwtl mov or imulb fisubrl lods adc sbb jge mull pop mov lock test out fisubr dec xchg (bad) mov js pusha inc testl dec add in sub jmp stos mov and fnstcw popa shrl mov sbbl shlb daa push xchg dec xor dec das mov mov popa or inc xlat out and ljmp inc je fwait add pop cwtl (bad) mov lcall pop lcall xor or sub es and stc mov adc lahf scas aaa mov pop pop cmp pushf stc adc fisttp or sahf in mov jns push jns inc inc xor cmpsl imul leave mov gs aaa mov out xchg sbb mov fimull inc lock aaa in lcall fwait leave js sbb mov popf mov adc (bad) call leave xor fiaddl xchg push sbb dec imul out jp imul (bad) pop ja lret xor jmp (bad) mov mov xor jle sbb hlt fsubrs (bad) nop rcl insl cld (bad) jo jle jo jp sarl xchg xchg mov fsts adc test insl mov jle mov mov push sub adc push jmp push (bad) sahf jo out jecxz shr or stos and sub pop push push adc je jae and lods mov add das adc (bad) jecxz addr16 stos insb mov add adc clc cmp aaa das pop cmp mov and adc or jne int addr16 aad ja mov scas test mov (bad) inc jge push mov imul arpl mov (bad) jns pop inc adc imul mov test jns mov fwait dec into pop or add cmp sar fisttpl sub sub xchg lds cltd out nop mov loopne pop jle mov pop mov xor jmp cmc mov jno scas mov cltd icebp out lock das xor repnz push push (bad) popa out mull scas and in popa icebp add iret push mov fistpll mov xchg rcrl sub movsl push inc sub icebp int sbb sahf cmc (bad) call push mov popa (bad) rcrl and xor inc call gs adc popa inc and int3 lret jno mov push imul mov cwtl iret cmpsb sbb xor insl mov arpl repz push or out dec mov cmpl xlat lds jo addr16 gs xchg xchg (bad) mov popa bound xchg call xor jb and lret inc dec stos fcompl fprem1 pop das and and icebp mov add lds cltd rcl sbb inc cmp ret xchg cmp fsubr and popf gs (bad) rclb or push mov or inc popf add popf adc das or aas push jo sbb sti lods sbb movsb mov dec push pusha cwtl cmpsb jecxz mov in cld shll sub add fistp jns popf mov dec pop in hlt mov flds and lret cmp jae cmpsl jno push aaa jmp pushf or insl (bad) arpl sbb adc fimul sahf push testl lods xor dec fldt mov clc outsl insl or pop push repnz aas xor scas and inc pop sbb mov push enter xchg sub inc mov mov and cwtl (bad) sub sub test dec and dec or (bad) sbb sarl mov in int3 std jbe mov xchg mull fdivs xchg mov mov cs xor mov push jbe sub and mov cmp sti imul adc xchg inc lea sub jne loope jnp daa inc xchg adc push pop jmp lock ror mov dec call cmp jbe (bad) push in incl xchg jne add ja daa xchg in sbb xchg jae pop scas and push jge inc pop outsb in test aas or mov rolb test out push mov xor pop cmp push add jns pop gs in cmp lea es push das mov jbe (bad) gs iret pop or sub mov inc insl cltd mul push xor add adc and repnz jo mov shrl xchg jg pop fldcw leave std or mov andl mov mov mov std call daa psubw add fcmovu sbb xor push or mov test mov push fcoml pop daa inc iret popf nop jns fistpll pop call cmp mov (bad) mov (bad) ja inc scas add ret xchg test lds (bad) orl dec add adc mov sbb mov mov and jae and lock cmpsb inc inc cmpsl xchg add ja adc jbe rcll (bad) lock push dec out cltd push mov popf mov or inc sub dec and cmp push (bad) popf jmp cli (bad) clc sub loop fs inc mov mov sub fistp xor mov xchg jb les popf xchg xchg sahf test and lods xor push mov mov jecxz pop hlt int add push inc outsl mov dec jmp stos ret cwtl cmp adc ret (bad) sbb inc pop cltd push mov test lret inc repnz mov dec (bad) push (bad) pop dec mov add mov sub lahf out in gs mov dec in ds sub ret test sbb aad jb jne push or pop lea push sarl hlt mov mov imul iret roll push adc pusha mov in dec xchg jl stos mov fsubrs test mov lods cltd repz or je cmpl mov sub inc (bad) jmp sti cltd arpl cmp push pop sub sbb adc divl pop pop jl or add pop (bad) cmp icebp mov test cli stos insl mov mov mov mov (bad) cmp test lods insl bound pop jecxz jl pop dec cli add xchg call pop pop or pusha pusha or pushf jne (bad) sub sbb ds xchg pop insl sbb xlat test out mov mov das arpl dec push pop (bad) outsb jno rclb repz (bad) sub jl hlt xor pop and imul pop lahf inc pop shll inc cs sub jo dec cwtl and or inc inc and cmpsb outsb sub add in test add icebp push mov inc out shrb adc test add push imul movups add loop mov ret xchg pop aas cs popf inc push imul ljmp inc lret push jno add shrl xchg arpl or sub lds jmp clc jl movsl or and sarb fistp jge pop rcll mov sbb push inc mov add pushf cld and add xlat adc mov mov inc imulb dec jle call or dec pop adc sti lock dec mov inc jle adc cmp sbb sub and push pusha movsl fbld cmp cs sub jno adc mov xor mov and scas jg sbb cmp int3 mov add jge call in sbb ljmp push and sbb sbb push rcl jb (bad) cmp imul fstps lcall (bad) cli data16 push int3 dec sbb mov outsb (bad) pop dec imul clc insl data16 (bad) fdivrs leave or in andl cmp or outsl (bad) mov sub roll pop mov push pusha out push (bad) fcomps sbb stos sarb xor loop cmpsl fmull cmp dec dec incb in adc (bad) lock stos and (bad) jge mov scas rsm lds (bad) lods push dec pop mov stos and xchg jg mov out mov mov xor hlt addr16 mov cmpsb add inc pop outsb aaa or lods mov leave roll adc sbb rcr mov addr16 imul repnz push cmc lret mov mov push lret dec and adc call int adc mov rclb sahf and jl add push loop rcrb shr lods add in lret in inc xor scas int push (bad) enter lahf sub aaa daa lods jle ret xchg les mov in and js mov pop dec clc push shrl ret or mov mov out in data16 push lcall daa push and inc pop (bad) xor add and arpl lods and xchg ret loopne fwait popw scas xchg mov rcll push add jg push mov scas test and mov scas stos xchg sbb mov (bad) ss mov ja mov arpl xor aas jle xchg xor data16 mov (bad) int test mov mov ljmp adc xor jle subb mov (bad) mov loopne je push xor aaa outsb rorl ret imul jmp jo push sub mov lret fwait sti add loope and repz lock repz data16 and or adc xchg inc test sbb in loopne pop jl popf cmpsb jns ljmp cmp je cmp out jg sahf iret test outsl jle orl jl and fldt jne fucomi loopne daa mov xor cmp daa jno push xor mov xchg or xor (bad) fiadd sub addr16 push dec cmp xchg sarb (bad) cmpb les or fdivl dec sbb notb in out xor sub imul repz cli cld lahf dec divb and into sbb pop sti call sbb mov aam lahf push sub jg psllw pop repnz aad ror movsl mov enter sub ror inc gs cmpsb xor sbb add imul subl mov enter cmp or adc bound call inc pop outsb sbb pop push sub push inc movsl jno int3 mov ret and inc daa xchg arpl push xchg or fld iret cmp jge or cld push lcall jg jle cld mov pop mov push sbb mov ss je mov jp in inc test inc sbb in pop adc cmp mov out clc addr16 cmp push outsb jmp jnp add cmp mov xor mov in cmp add mov rorl pop cmpsl in aam cmpsb repz xchg xchg lock mov adc es bound popa push xchg ret (bad) (bad) pop or andl add pop sbb shrb push stos sbb cmp fcmovne repz xchg cld movsl lret test sbb in and sbb in out pop add cwtl fiadd sbb sbb jmp lret call pop icebp inc add push fsubrl xchg or insb in jmp xor jmp les and sub jg fisttp inc pop xchg and fucomip les xchg sbb movsl xor in inc in popf fcoml gs sub push mov dec mov xchg call pop inc add push and pop mov outsl insl mov adc mov and mov (bad) pushf imul dec sbb adc sarb sbb xchg lock add sub std bound repz add cmc fsubrs inc mov xchg inc stc cmp xchg scas mov push repnz inc and sti sbb jp pop cmp jl add dec mov push jge xor cs sbb push test xor call xor imul cwtl rcl adc out not adc or loop fnop outsb fstps pop xchg cmpps int jp fldl mov shll das es ss in mov mov cmc inc or cmp idiv iret xor out aaa jg sub movsb xor xor dec xchg xor jmp cmpl push leave rorb iret push push lret mov dec lahf inc stc mov mulb cmc cld imul shll cmp daa inc pop sbb mov cmc push push pop out push outsl and mov and iret mov cmp sbb in insb mov xchg cmpsb iret (bad) sub or cs sbb sub jg dec cli ret push fnstenv out lidtl jge jb xor cmpsb mov loop adc push cmp dec or jne (bad) fnstenv ds ljmp or fisttpl xchg gs decb enter lock out add aad pop out call mov mov xor xor stos xchg out ret cmp setno ret pusha jp pushf pop xor and adc ljmp cmpl and push sub les sub xchg pop push or out lret js data16 clc mov mov sbb adc xor lds repnz mov cmp pop dec dec cmp jge fsts pop dec sub add push pop and or inc fmuls inc scas push dec and sbb fucom mov fisttpll sub aad mov jo push or sbb sbb int3 push jmp push sub imull dec mov mov mov sbb je pop testb ficom dec fsubrl jne fildll mov mov jmp cmp mov pop push sbbl pop or mov leave xor mov aam clc mov pop fsts xor xlat (bad) es scas dec rcrb pop (bad) xchg mov sahf push mov mov push adc dec fs dec in mov sbb and enter mov andl arpl movsb add ljmp sbb shr imulb test ret movl mov push mov mov xchg dec addr16 adc sahf movsl xchg (bad) cmp stos jns cltd or dec jp (bad) fidiv dec mov mov mov pushf cmp push pop outsb in cld out call and mov popf fnsave ret jmp mov jg jmp dec jecxz dec mov fucomip aad inc cmpsb fidiv int3 or xlat cmpsl dec test xor insl mov push pop das push les lret lods mov arpl pop js sub push push cmp int ja bound cmp xor xchg fwait cmpsb inc lock push push xchg xchg scas shlb sbb faddl pop outsb rorb push cmp mov xchg nop nop dec lret cmp stc sahf push fbstp mov sub sub sub pop mov std lods mov sti movsl test mul enter xchg cmp inc aaa rorb fnstcw lret shr mov dec in in cmp ficom add (bad) mov push and push push xor out xchg add push pop in mov adc pushw inc or dec arpl hlt lods call jbe,pn jnp (bad) sub (bad) or xor mov xor xchg ljmp cmpsb or cmp fidivrl push mov xchg hlt xor jecxz cmc stc mov xor hlt or leave jmp fmull outsl pop es fildl rcrb out add hlt imul jne stos ret push sbb shll lret mov inc lcall outsl neg in adc in or imul dec or sbb and xchg ret xor jge lock int sbb inc add (bad) pavgb jmp mov hlt or jo jb dec sub inc mov jl push outsl mov xchg pop mov pop loop and fwait mov pop sub in sahf push cli dec in mov pop xlat mov int pop inc jl mov out inc outsl fldt or xchg scas inc movsl vpunpcklqdq (bad) aam pop xchg mov clc pop and mov push js push stc ljmp in mov shll dec in adc aam or mov data16 cld push scas out mov mov dec inc aaa repnz inc mov aam push adc mov add hlt outsb pop mov out inc adc mov pop mov aaa inc gs xor jge and mov stos sti dec mov sahf xlat outsl testb int cmpsl jp sbb adc ret cmp in jb call movsl cmpsl add pop xor (bad) jne in roll push jge cld adc ja fs shl pusha fbld loop pop add mov cmp aas xchg lcall cmp lods addr16 mov stos push cs (bad) dec jmp (bad) xor insl xor xchg or add icebp push in mov inc andl mov dec repnz ret das or jg movsl sbb add cmpsb xor gs andl shrl rcr and inc mov sbb mov xor and outsb fldl jl mov lock aas xor lods sbb xchg add pop xchg and mov fiadd js dec mov insl pop mov xor sub cmp aas xor inc (bad) lahf lea fcmovu jl jmp inc test ja sub pop sbb sbb xor call ja,pt stos stos dec cmc lret add or stos and pop subb xchg mov fmull popf stc ret movsb lahf push mov gs xchg cmp jecxz dec xchg pop mov cmp and lcall mov adc push rcrb mov outsb insl sub dec fwait cmc cmp sarb call fwait jne add bound pop out fnstsw jmp addr16 fcoml dec sbb int3 (bad) cld lock ror jb sub mov lods mov (bad) andl mov adcb es push or in sahf lods test mov loop out or add mov mov (bad) (bad) jo loope mov mov sub dec repz add xchg popa fucomip dec (bad) xor out dec call insb push lea jge in xor and mov cmpsb stc lods sbb cmp inc lahf fs mov (bad) jle in fisubl fwait jmp xchg fistl xor push pop push mov ret xor movsb popa jbe pop add inc push sub stos sbb xor lahf sarl inc jbe data16 into iret sbb push xchg movsb mov or mov bound jg xchg push push push loopne push add mov dec or (bad) cmc insl or pop fmull sbb cmc push dec (bad) xor cmp nop aaa test (bad) xchg loop adc fstpl adc clc push mov fcoms mov xchg push sub and sahf test or js test es inc sbb test repz cmp sarb ljmp loop pop cmpsl (bad) and subl push xlat push fstl mov or or push adc dec mov (bad) jns xchg fistpll mov cli inc mov dec adc test sub repnz push aad out (bad) (bad) shrd cmp xor pop iret dec fisttpll ja fcmovnb mov pushf andb (bad) and pop outsl push adc and notl inc dec lcall mov mov in add call sub adc jne xchg lds sub test popa imull add adc adc out mov lret add (bad) mov sbb xchg dec push bound clc or mov fdivrl rclb push enter or out and jnp add xor inc nop lods sbbl xchg (bad) mov (bad) repnz jnp add adc mov repnz mov stc into and push clc iret push lcall mov jb dec jno add into mov das cli adc (bad) cmc bnd dec in int jg enter sti mov ret mov push pushf pushf sahf add pop xchg int mov push pop mov dec xchg mov aad (bad) sbb sbb push js shll in ret stc dec add es mov je xchg and repnz mov push jnp xchg inc pop outsl mov inc imul or jecxz test mov mov jb sbb xchg in xchg and inc (bad) fcmove scas imul je pop insl add inc lret jo dec gs cmpsb decb lret push adc sub lahf shll cmp jns sub or xchg sarb pop sub fdivr bound aas incl repnz fnstenv cmp jne icebp ficomp pop fistp negl shl xor or push fwait out sahf lock ror add mov pop inc mov test ja,pn sub push sbb pop adc xchg xor clc push mov mov movsb sti inc inc dec adcb add xchg dec cmp ret daa pusha comiss inc push ja cmp cmp repnz xor popf jle sbb add cwtl push pop cli call repnz push cmpsl and add cmp cmp pop clc fdivrs sbb insl loope push mov jnp jbe sbb lods loop out lret fwait dec lahf movsl push int3 test xchg xchg repnz mov pusha ficompl out cs clc movsb dec es jge fs scas shrl (bad) xor shrb aaa movsl fisttpl cmp lret fist lcall xor or lods xor (bad) sub stos call repnz scas pop sbb pop sbb mov leave mov pop xor or jmp cld mov mov in xchg mov jnp or popa pop push lret fsubrl jbe push out fwait repnz sub sbb outsb cmp jg mov call mov in loopne mov inc mov add scas cmp into popf jmp cli inc mov push fninit mov loop fisubl adc (bad) aaa shrl fsts in cltd or xlat jge mov jg adcb dec cmp push mov (bad) movsb in cmp xor shl mov xchg out dec gs fmuls adc sti mov cmp jno fs push push push clc inc lahf push jnp xchg cltd lahf push insb insl (bad) aad hlt pop lret nop rorb mov movsb outsb in sub dec (bad) jae mov add (bad) mov sbb push sub ds jl sub xchg sub cwtl cmp jns cmp loop fisttpll outsl jns jmp scas movsb fadds (bad) ja pop fbld dec repnz and inc dec icebp cli icebp inc sahf in and loope mov sub (bad) and adc insl push test arpl repnz mov jge insl sbb jp stc int3 or add mov int3 adc push outsl jbe sub lret push dec imul jb inc lcall xchg daa sysenter adc pop bound xor add mov scas adc dec rep push cmp es imul clc pop push or out jae lea xor (bad) xchg push incb push loopne xchg mov fistl or shrb pop jecxz jns bound (bad) sahf js xor imul mov sbb xchg cmp popf and outsb stos loope sti rcrb mov cld addb and stos mov adc mov loope sti js lret pop dec cmpsb or movsb rcr sub (bad) xor pop xlat es mov popf shrb stc (bad) jnp scas in pop rcrb ja adc aas addr16 dec fsubl popa paddusw lretw mov sub cmpsl push jecxz (bad) or xchg setbe sar add xchg jne inc mov loop push dec js call sub jecxz and in ret jg ljmp dec in adc idiv mov xor test mov (bad) hlt rorb xchg into fcmovnbe (bad) jp mov mov jmp dec (bad) insb pop lahf fwait cmpsb std push sbb stos fild jmp xchg mov fwait into or adc ss add movsb and sub pushf xor jno fldl2t sahf sub sub lods je jge dec add mov outsb hlt push fucomi push pop scas clc imul dec xor adc js hlt (bad) loop inc cmpsb cld sbb sbb ljmp fstpt lock add mov dec jo xor out jno lock mov leave popf add out mov sbb cmp (bad) mov int3 mov loope and cmpsl push push push daa mov sub xor fcoms fild (bad) push popa fistpl pop icebp mov std bound pop sarb dec ds loope push les out adc inc push pop movsl lods in movsl rclb into push fistpll jl int3 jo pop int3 out jmp xor sub push sbb jle nop mov (bad) mov add in xor pop shrl xchg xchg xchg test insb sarl pop das dec push sahf stos stos dec jno sub xor or pusha lock mov jecxz add fwait push cli push adc repz sbb add imul int out sti std push in test popf mov push pop cs fs mov ret ja pusha mov add imul and stc fs cltd mov mov gs je hlt das pop call add sti push xor clc and enter jne jmp out out push je jbe scas pushf popf and xor sub and add fdivs xlat scas outsl push dec out test outsb insl shrb popa xor aam and ds xchg in push dec jecxz xor jg (bad) cmp rorb sub and cmpsl and push lret jnp outsb das ss test popa rsqrtps cmp cmc aad inc pop push xor push adc mov inc lea xchg mov (bad) rorl xchg cwtl pop jne adc call (bad) mov out cmp out out xor mov push push mov or sub mov mov adcb push aas sub add das mov insb mov cmp aam cs pop inc mov push js sarl add inc jbe push ja fldl jl pusha aaa lcall and push xorb xchg dec stc loop mov push sub aas xchg jae out push push ja adc (bad) xor sub cmpsl sahf xchg mov adc mov int3 sub lds push xor in push ret mov mov cwtl cmc cmp pop mov std (bad) xchg es repz lock icebp and test sbb in sub adc push movsl gs cmpsl xchg out inc nop inc idivb xor (bad) fiaddl pusha xchg pop stc call into loop jb mov dec and inc (bad) std adc fadds popf in pop push ja pushf out sbb es in orb lods dec leave int3 pop imul lcall xchg add arpl inc aad and mov movsb in cwtl jmp xchg cmp inc push test repnz or call push cltd aam pop repnz push nop pop sbb push push popa test mov add cmpb push repz je xor inc shrb and lods nop push mov out pop scas cmp mov rclb stos cmp jbe fnsave add push mov and or dec push test and pop sbb or loop,pn fcoms das ret fistl ja xchg mov mov cs pop jne lret jg push out fwait int3 jmp lcall sbb clc jecxz movb hlt mov adc sub xor sbb mov push fistp xor lock aam mov push flds sbb or test or mov rol xchg add mov mov sbb lret sahf loopne mull and adc std mov es jg enter dec xlat js and pop jo (bad) testl icebp (bad) scas add rolb repz flds cmp aaa loope cs ds mov jns fsubrp (bad) rolb arpl gs (bad) adc fiadd push in lahf pushf xchg fucomp push cmpsb mov nop mov insb daa imul movsl or pop test adc into arpl cli loope call into stos or rcrl addr16 dec cltd mov ret xchg add popf jbe mov cmp pop add fistpl icebp dec cmpb les add es push sub xor call push jbe fwait add fidivl dec jno sar imul call test push movsl sbb or ljmp sub adc mov aam xchg sub js pop sbb insl adc and and mov cmp pop jns imul test jle pop push addr16 xor push sub scas jmp sbb in imul fstp outsb jle inc push data16 in pop test fcmove inc mov outsl xlat jl push aam insl push iret sbb pop xor push outsl hlt xor aam jle fsubs mulb push sbb and jns cli out lods imul mov mov in jl push or lods mov xchg lods enter lea mov sub or cld adc lahf lods daa movsb dec subb mov pop std mov xor pop dec call xor fwait xchg fprem bound popa inc or (bad) ja dec jne and (bad) sub pop movsb jp sti mov inc call jbe pop mov ljmp popa call cld adc mov adc popl bound push loopne out sub inc push mov and int3 cs mov jmp xchg pop xor sbb inc xchg ss pop mov cmp mov js jne xchg mov out clc mov call je push (bad) sbb and nop loop sub add inc jb gs lret sub and and and ss dec jne mov mov adc test icebp shrl fadds fidivr (bad) mov insl push push mov adc mov (bad) aad add outsl jp mov (bad) cmp jbe clc jg jp push cltd sbb insl add int jbe xor sub sub adc or xlat les cmc xlat mov push sbb aaa scas fisttpll mov (bad) mov arpl out push cs (bad) cmc sbbl test inc mov ret sub pop adc xchg cmp ret pop hlt sti and xor bound mov mov lret mov nop into (bad) xor nop sub jmp mov mov rcll mov (bad) icebp repz push push jns shrb (bad) fst mov pop aad pop cmc jnp lods fdivrl fdivr (bad) fmull sub add subl lods aas pushf out sub sub adc popa sbb pop mov (bad) roll bound in pop cmp sub dec dec sub pop out add dec cmp mov mov aaa lcall cmpl push sarl dec leave orb or mov int3 cmpsb or mov out (bad) and xor push xor idivl rcrb movsb inc add test shlb jb inc aaa fwait mov jg repz xor pop dec (bad) cmpsl mov addr16 sti fmuls popa jne sbb clc xchg fs dec inc jmp inc jmp rclb push mov sbb aam pop xlat test and xchg and sbb jp mov (bad) (bad) into push lret mov (bad) loope or cmp adc das in push shrb (bad) stos lds inc mov lods add repz inc jae pusha push cmp sti shrl sbb (bad) cmp or stos mov mov mov mov test inc push (bad) sti enter jo add mov push sbb decl xchg inc inc out push xor ljmp xchg (bad) cmp xor fwait subl xchg mov mov mov leave mov arpl int3 or push out and dec pop cs out into mov std ljmp cltd mov imul sbb fs and inc int3 sub add push inc notl adc add add aas or jae mov add sbb addr16 in in mov and or pop sub iret mov in dec test add mov fwait ja lods shrb dec mov ret aam sbb dec gs scas xchg inc stos xor or fs popw call adc stos rolb icebp loopne push and mov orl push cwtl inc dec sahf dec lods fstpt ljmp cs push rcrl and loope into cwtl out mov xor ret pop push xor leave jb jg and cs xchg dec push stos stc jns lods bound insb add lds mov dec pop fsubrs (bad) mov inc sbb lock test ljmp lods std jno (bad) cmpsb jmp js pop xchg shrb fist xor sub and adc fisttp jmp fstl adc mov jns mov popa int shrb stos (bad) gs inc push jg jge cmpsl imul xor cmpsl aad leave cmp stos xor pop push or jle mov add rcrl outsl jl jb dec jb dec cltd rcll pop push lret cmpl mov mov arpl in fbld sbb sahf pusha mov add aad pop inc mov add fiadd mov mov mov addr16 ret shl ds jp out andl add (bad) cmp lret fistpl lock das movsb dec test daa (bad) std mov cmpsb (bad) adc cmp dec dec notl fsubrs pop clc mov pop (bad) int jg jnp in pop inc or push cli xor xchg mov mov js cmp cs adc lahf std aaa repnz test sbb xor mov dec xor movsl xchg (bad) jg lods jne push push out lds pushl xchg push jp and lods (bad) dec ret in sub test daa fcmovne lcall add mov icebp out jp movsb roll adc sub dec mov cld push cmp adc or outsb cmpsb lret pop mov pop gs or inc ljmp xor das mov mov mull incb sti pop add lock out int3 icebp lret fucomi jl mov and in push fwait les out clc cmp cs mov pop pop and popa out mov adc inc data16 cmpsl cmp dec test int movsl out or int3 gs out sbb sub push and push pop movsl (bad) int pop aad xor lea xlat cli or pop push xor or lea int3 in aam test out repnz clc cmp jp leave stos add adc out out pop movsl and sarb adc push mov and mov sbb dec daa int fnstsw fsts cmp xor loope or andl inc in faddl dec pop imul test daa push cs jb rcrl out sbb loope arpl nop daa out push push jb ret sarb std mov or aad sub xor std pop rorb rolb stos jmp jbe cmp push pop push push dec andl jle inc clc xchg push xor insl inc mov pop sub push pop imul mov test popa inc mov cmp xchg lods (bad) loop push cli add jecxz (bad) mov xchg add loope iret sub lret into cmp inc xor sub add test xchg (bad) je sar inc and adc mulb jmp aam fsin enter rorb add push iret cwtl cmp mov shlb dec je,pn fs in push mov xchg mov stos pop xchg inc adcl add mulb imul push ljmp test aam icebp loope into mov xor lods in repnz aaa ss push inc les and (bad) dec adc test dec test mov mov adc xor lods jmp mov fmul icebp push outsb aad xor test cpuid fidiv cmp fimul dec or pusha (bad) aas push xlat lds dec xchg mov push movl jns insb and push insb in movsb bound dec lcall insl in inc jae arpl aam adc cmp lcall rolb xchg add mov pop jle out stc jl xlat xchg int3 inc lea fnclex ret adc push rcll out jo cwtl mov push sbb in cmp add pcmpeqb sbb mov ret xchg push push pop push enter je ds movsl push stc cmp (bad) fwait push inc mov jmp dec lcall ds add mov rol adc xchg inc outsb movsl mov jne loopne jge cmp or testb push popf xlat inc jp fcoms imul aad popf fwait jmp cli push rorb xor jecxz ds ret mov (bad) psubb or cwtl pop imul jmp sub or imul sub or jl mov push out and cmpsl mov adc enter xor jg aas out lds test lret xchg xchg dec pop jo sub js cmp mov cmp dec cmp push int mov (bad) mov movsb cmc and decb into sarl inc pop jge add aam in out sbb cmp (bad) pushf push fsubl push xchg sti fstpt (bad) or inc les pop fldcw dec lods mov mov insb dec loop and xchg xchg mov jae rorb jg popa idivb mov movsl es pop daa and and xchg inc pop jecxz xor cs (bad) std cmp setae push add push das ja out xchg cmp sti xchg xchg inc pop lret fbld jo imul out repz stc addr16 icebp add mov ljmp (bad) jno mov mov (bad) cld aaa add add mov outsb ret lock in (bad) xchg pop mov jg stos sahf mov mov lods cmpsb mov cmp xchg adc dec push sub cmpsb xlat xor stos and jmp add insl nop (bad) add dec xchg rolb cltd mov mov dec hlt xor xor pushf push mov (bad) jl adc (bad) divl mov cmp aam enter fwait pop mov xor push pop jl dec jns addl and jge mov loopne xor pop cmp or jbe push jecxz imul fiadd adc movsb inc notb stc mov loope loopne lock sbb sbb sub jbe jl hlt cmp push sbb cltd lahf stos std fisubrl shrb jmp xor hlt test dec fisubrl jns push (bad) faddl cmp xor lcall mov imul jno outsl aas mov fidivr test cltd fcoms xor fsubp dec dec pxor lret lea pop aas sub dec leave enter test scas or mov lea mov aad cmp pop fisttpl sub add xchg mov enter fisubr (bad) push out push sub lock insb stos testb sbb push adc or sub getsec dec std test dec data16 mulb xorb fcoml ret jmp and push xchg sub mov repz and enter xchg mov mov aaa (bad) inc scas cltd xorl jne nop cmpsb test js scas outsb daa dec adc push (bad) mov inc arpl sbb xchg sub sbb push popf push movl jns xchg pop push fildl jnp adc lds pop insb add adc dec sbb (bad) ljmp in mov lock add icebp add cmp call das lret mov adc popa adc dec xchg cmpsl push xor jns adc sbb jns or add cmp mov and mov sub sar mov loop mov bound mov inc pop push adc (bad) (bad) outsl pop aaa cmp push xor (bad) cmp dec aad cmp movsl dec neg mov push push adc xchg inc lcall pop add out mov add mov jnp stc add jge stos fwait xor mov mov rcll mov xlat into xchg add jno sub movsb enter lcall jne and cltd sub inc cli or push sbb add push push int3 adc rcrb mov std mov fcmovnu jmp inc les add lea sahf jnp fs inc rclb out repnz and mov rorl and imul pop sbb xor add out mov or push test iret xor inc jg or cmpsb adcl stc out lods sti inc and popf ljmp xor push push hlt outsb add jle inc adc shr jg lods or push lea push dec stos xor out aaa jne test (bad) (bad) loopne int or xorb mov jmp pop in inc sti ret xchg daa iret jno xor lret sub sub push faddl or mov sbb int3 shrl jmp push (bad) cs aad inc pusha mov cmp xchg (bad) clc imul test insb mov or out cmp scas jecxz add xchg insb fcomps test leave adc cmp into pop or sbb repz fcompl sahf aaa inc dec xchg lods repz push ss dec or andb out cltd enter (bad) icebp sub (bad) shrb adc (bad) push or sahf push inc lcall jns mov push sbb push sbb adc jle adc ficompl ret mov mov sarb xchg mov lret daa test lcall or stc mov or cmp je pop pop jge repz lds pop adc xor ljmp inc mov dec popa addr16 sbb jle pop xor sbb outsb xchg jp mov and xor xor stc pushf and pop adc in sbb dec xorl mov pop and in mov insb adc (bad) repnz ja call pop jb rep mov push loopne std push hlt inc xchg lret cmpsl insb pop aas sub or jb ret and cmp mov inc and lcall or lds dec enter sahf lahf cmpsl test cwtl xor dec mov mov mov cmpsl xor icebp outsb xor (bad) xlat jno xchg add stc jnp ror sbb mov jae fisubr popf sbb lret push fs jge leave and cmp push mov jmp mov mov mov sbb bound test loope mov mov mov daa movsb xchg pop xor in adc shll or xor pop test sahf push push push cmp cld lods dec jmp cmpsl mov adc lcall nop imul mov mov cmpsl jns popa addr16 fdivl repnz out inc cmpsl andl scas dec lcall xchg jp jo popf xor push dec out mov mov cli xchg outsl fstl cs sub imul jge lcall inc xchg jns mov cmp and mov stos xor repnz xor mov inc mov aad clc addr16 mov inc mov sub jb std and xor adc (bad) fcompl dec jl cmp stc sub (bad) lods adc mov (bad) pop loop mov daa dec sub sarl movsb std xchg dec adc aaa popa scas movsl ficomp or cmp sti cmp add mov inc xor stos test and pop fucomip mov mov xor xchg into ds mov jmp sub xor add mov jns fidivrl push mov iret (bad) gs ds cmp inc fwait adc add das lea inc iret sbb or js xor pop das inc shlb pop dec or mov shll dec mov (bad) cwtl pop les das pop mov cmp adc aad sub push mov ds scas sbb lea sbb insl cmpsb sbb mov pop jl adc mov push xchg dec repz push pop (bad) fs adc inc push test call sub mov iret and mov mov in stos jp inc push push leave mov lcall xchg mov loope add jnp jecxz hlt in enter je outsb and jbe test mulb fwait repz repnz pushf xchg lahf or mov mov jmp daa cwtl pop arpl sahf shrl and into icebp dec add dec call inc fwait mov out bound gs pop bound mov mov fisubrl popf mov xor and cltd sub fs or cmpsb nop lcall lret xchg adc push and out ja cmp cmc and jmp fcomip mov cmp sub jp add dec outsl (bad) in sub mov xchg lods push aas test adc (bad) cld ret mov cli aad (bad) sbb jge xor and xchg pushf inc push jle ljmp dec dec mov shrl (bad) push pop dec mov jp push cli pop ljmp dec aam pop ss daa dec lock inc push leave test (bad) lds cmp iret dec mov fdivs (bad) (bad) fistl mov hlt or adc push cmp jmp add dec addl mov pop jl sbb ret cmp fist fwait les or fistpl jns pop ss or jge add aaa sub xchg xchg (bad) push (bad) mov lods int pop xchg sub dec mov jno mov pop test outsb push mov xchg (bad) movsl adc loope bound stc pop sbb cs push nop sub (bad) pop adc and lcall mov stos cmp popf lret pop ds mov jle aam cwtl out pop jb mov mov mov out aam (bad) jmp imul in pop xorl xchg jl ret jmp or cmp in hlt jb dec xchg xchg outsb push xchg lock mov pushf jnp lods xor and scas call xchg sahf or jmp test sub mov pop iret adc push dec inc repz mov arpl sbb hlt sbb lods inc sub push stc inc out cltd inc jl xor ret (bad) adc mov nop or sub in loopne push (bad) je jb mov dec stos push fdivrp popf aam jb out aaa iret stos les xchg mov mov sub mov (bad) xchg push aam xor xor mov adc add into les in add or adc or inc xor adc push into xor cmp adc in sar cmpsl sub popf in mov add lret xor in mov in cmp cmp sbb mov inc push jmp mov mov sbb test pop xchg mov stos gs adc or or jecxz imul dec pop data16 jge pop add mov xor fistpl dec (bad) mov lret (bad) gs mov adc adc sub jb push push sub stos cmpl pop (bad) ljmp (bad) dec bound jo std dec out loopne xchg loop sbb xor push cmpsb jns adc lods jae push imul hlt pusha imul inc jge push jmp sahf adc jmp rorl std jge jne scas push or jge push sbb sbb sbb mov cmpsb sbb xchg xor cmp daa (bad) (bad) sub add and push sbb mov xchg push push call mov mov cltd cmpsl xor fsubl sbb repnz mov jge in adc fistp or pop dec sbb pop push xor mov repz jb sub pop cmpsb inc int3 push repnz adc ret adc or lods pushf xorl lea sub xlat xchg add cmc ret mov test (bad) push fstps outsl aas sbb xchg orb adcb xlat cmp (bad) sbb repnz or mov mov mov fnsave pop mov loopne cwtl push inc push enter dec xchg xchg addr16 lea outsl push and pop inc mov call xchg fld1 loope mov fcompl push in fnop inc fwait scas push repnz fyl2xp1 push mov mov push fmuls cmpsl and adc arpl inc xchg jbe dec aad fidivl jle in pushf or sub mov sub in std mov out mov dec (bad) repz mov lret mov inc add les imul xchg mov cmp mov xor jg xchg and and pop lock sahf ss or mov daa and fsubrl jecxz adc or (bad) lock sbb xchg xor add fadd loope or add loop sbb pop outsb jns sarl dec movsb xor scas and dec aas adc mov xor imul jb cld xor adcl xor pop jmp icebp aam loop imull cmp fsubrl test jp jg jne push and imull call sbb xor lretw add sub jnp pop insl xlat add inc lcall mov lds int3 lahf les xchg test fimul int3 out sarb stos push push pop pop call lret test (bad) pop push loope mov fidivl aaa add pop fdivrs mov push jbe mov cli dec cltd dec add pop dec jae adc jae bsf mov movsb clc jo mul dec inc lahf ss sbb mov mov (bad) sbb jg leave and pop insl into xor setbe xor scas (bad) (bad) or rcrl data16 jno call in cmp mov ds or adc int3 test mov jbe add lahf xchg stos cmp cmp test (bad) xor cs std std movsb ret cmp cmp or outsb nop sbb lea ljmp fdivl mov rol imul sbb movsl in jno out ljmp cmp sbb mov mov sti negl and imul inc xlat mov mov pop push and into push xorb leave lcall shrb mov ret leave jae int inc insb repnz test scas mov into (bad) inc (bad) or xlat jge lcall push into push adc adc ljmp push mov imul decb pop jae stc pop shrb lahf mov pop inc das (bad) jmp je or mov stos xchg xor jns (bad) mov and daa mov mulb adc push adc cmc pop lds jmp arpl xchg (bad) jb jno cmp push push pop xchg xor inc sbb xchg jae mov mov sub push bound cmpsb mov cmp and or jecxz incb push bound or je xor mov loopne sub push sbb cmp xor cmp icebp or push dec bswap fdivl pop stc sbb jnp shll adc adc pop pop push or or cmp mov sbb lock scas fiadd inc loopne test jnp push hlt sbb or mov in cli jbe dec rorl adc mov negb dec jmp int3 pop cwtl ljmp adcl mov mov sbb ret mov mov mov insl sub and mov test test inc lahf sahf jns cmp xchg fwait out cmp and push lods aam mov mov or mov (bad) adc ja insb loop mov pop dec and and xchg sbb inc pop divb and arpl cmc jge and mov orl pop sqrtps loop dec stc iret emms dec push xchg and cmpsl call outsl inc call lds (bad) cmpsb aam xor adc cs es adc cmp inc add or cmp daa outsl pmaxsw jns jp pop fistpll cs or inc shrb pop inc jmp push add rolb add cmp push jno xor adc xchg and pop push inc fwait xchg pushf (bad) xchg cmpsl jae cmpsb out push add in (bad) repz divl gs dec dec fcompl or adc mov sub or mov imul aaa mov inc ljmp jge pop jge adc hlt (bad) ljmp sub call test inc push mov jno push icebp mov push cmpsb (bad) jbe mov iret add (bad) loope das fs out sub xchg ljmp jecxz cmp or (bad) mov mov xchg xor loope lcall jnp and jo call sub xchg mov test xchg lock and xor mov and ror cmc (bad) repz fild ss or jl push (bad) dec push mov jmp mov jno push lcall inc loopne and outsb xlat push push or orl and (bad) push xchg cltd jmp (bad) mov mov dec insl inc cmpl jb cmp adc jge jg push add sub outsl add loop dec or fstpt push das daa stos mov mov dec (bad) jnp pusha movsb xchg js dec pop sbb pop jle sbb mov aaa ljmp movsl jl sbb mov ljmp mov push mov sub (bad) mov pop and arpl ds cmp les int xor or lods fisttp jg xor into fldl inc aad mov sub pop cmpsl lret test jne jo outsl popf push out jmp inc (bad) imul inc outsl aaa push push adc pop cli ljmp adc and scas (bad) push cmpsl pop jmp push xchg fs pop ljmp mov and xchg mov mov or addl cmp sub xor addr16 notb icebp xor inc out xor sti cvtps2pi sbb xchg out mov jmp rclb pushf (bad) mov push add adc fstp xchg push push mov jb jnp or mov mov (bad) and fwait or dec shrl push addb xor adc pop nop int3 xchg in mov pusha pop sbb xor rep pusha mov inc aas sub mov push pop xchg dec push les pushf roll repz xor mov fiaddl dec (bad) inc fcompl pop dec adc pop (bad) scas fs cmpsl push push push dec sbb sbb fmuls pushf sbb (bad) mov sbb sbb fcmovnbe jge xchg jle jp inc pop je mov int3 sbb xchg pop sub mov je repnz add xchg push mov test imul (bad) sub push and adc mov mov xor xchg mov pop loopne push test jp jns mov (bad) jno adc inc and sti xchg scas (bad) rorl out xor mov dec dec push mov adc fisttpl out (bad) xlat in xchg scas xor mov push adc dec std popf (bad) and jecxz cld cmp rcr aaa push pop xchg andl sub mov nop adc xlat fdivl push out mov cwtl jmp lods test pop xchg stos es mov xor or mov xchg mov sub pop push sub and mov cmpsb (bad) adc push mov push adc jne push sbb rolb cmp mov ja mov dec rclb insb js xchg dec in mov cmp sub jecxz adc pop push stos cli sub stos cmp xor fs dec cmpsb and mov mov fcomi inc sti mov into jo jecxz adc mov mov out xchg xchg (bad) dec data16 rcrb or in jle out xlat cmp adc xchg push mov or inc lret pop push test das in imul lods push fcompl (bad) jns decl cmpb out sahf and scas test mov clc nop pop xchg dec imul mov push repz cmovnp mov loope aaa out and pop cmpsb xchg movsb fcompl jnp sub scas sub fmull mov pop js fs dec popa dec call (bad) sbb push (bad) fs push mov fisttp or add es sbb inc inc inc dec fsubs mov arpl mov and lret xor rol aam inc scas scas (bad) lret push call leave lret or dec imul pop push imul addl (bad) adc repz insb ss fnstsw sbb jl jp pop pop sahf pop jmp push popf mov pop inc enter cmp (bad) fiaddl ret jmp pushf rcl mov add fcomps (bad) into out jb fisub mov bound stos inc push lods fs add imul int3 mov mov int3 mov test mov sbb cmp push mov pop scas xor rcll stos stos jno jmp andl inc pop (bad) fstpl xor jmp jae xlat shll ljmp mov push push (bad) idiv add pop cltd mov cmp mov fstpt inc jns or or mov mov fiaddl xchg orl mov movsb aaa loope dec jns xor or pop in test add rclb mov fistpl (bad) or pop cmp divb jns ret jae pop (bad) aad and ret cwtl push xor dec xchg out outsb and adc arpl sub and cli repnz xchg jbe icebp sub sub jmp mov jmp cwtl int3 (bad) jno or pop stc mov sahf in xchg out sub int3 jnp mov pop aad pop adc in push lret (bad) aas aaa jnp in and les repz and jl add lcall xchg cwtl sub imul xchg inc ret mov adc inc cmp in inc adcl sahf int ret or popa fisttp out fsave jae jbe lock out sbb jl xchg int mov (bad) (bad) xlat xor call sbb mov (bad) (bad) add lret ret mov addr16 add sbb push push xlat jo jle or jo cmc (bad) xchg js imul cmp mov arpl test and or loop in addr16 cltd add in sub pop out and js mov cwtl mov ret popf data16 jg mov icebp sbb (bad) divl sbb icebp shlb jae cmp xchg pop add mov rorb repz repz jne mov iret jecxz xchg dec mov and xlat jae and mov into adc xor sti inc xor inc scas je insl (bad) push mov mov fisttpll sahf stc or mov decb add jns mov lds cmp fistpl sub (bad) dec sub jbe in mov mov adc adc aad scas (bad) sbb test ds stos clc (bad) mov insl insl push pusha pop push or dec das push in addr16 nop sub xchg fs adc hlt mov iret pop sbb jmp mov mov inc gs repnz dec (bad) push jp fwait in (bad) mov jg in test fnstcw push cltd (bad) jg mov aad sub mov xchg xchg sub lods ljmp xchg mov rcll lods dec jns or pop mov repz sbb sub pop cmp xchg in sbb lahf loopne es jno test mov test mov js mov fcoms test fmulp in mov mov lods mov ret adc push dec mov cwtl and insb pushf pop jbe xchg sub or sahf es dec xchg pop cmp push pop jnp out cwtl mov ss test sub pop inc xchg lea std in in jbe mov ljmp xchg sbb adc push movsl and test lcall mov (bad) stos rclb ds adc and or test mov cli lea inc dec sahf std test out pop mov push and bound incb je mov es orl pop jle (bad) pop jp test ljmp hlt pop add jp movsl mov (bad) or fiadd inc lcall inc mov (bad) in enter jo push loop test cmp jge xchg fildl pop cmp mov movsl mov jns sub dec jp jle push push cmc in fldl push adc mov daa cmp imul mov jns cwtl movsl lret add cwtl stos out jp push xor and mov adc (bad) mov adc cltd mov int cltd lret xchg pop int3 dec jp ret xchg mov in call shrl xor iret mov and push mov sbb mov adc add mov xor xor fidivl sbb sub jns ret pop arpl adc push dec xor (bad) mov pop bnd xchg mul test jmp add xlat add ds stc int3 (bad) mov pop sbb sbb enter nop pop xorl xor fcomi xor test (bad) es jle cmp fldenv and std pushl daa notb xchg mov xchg and scas inc enter and ret jecxz outsb dec loopne mov mov test (bad) jae nop or lret add fcmovnu add or add push mov pop ficomp negb sahf or push push and inc imul jp push mov test test sub inc push test andl repnz sbb cmp mov popf clc stos jg enter lret cs add clc mov adc ja sbb (bad) jg mulb cld rcl pusha loope aaa xchg pop lahf sub es test sub shl lds js jb mov or ret xchg mov mov adc xor jecxz ss mov movsb out adc sub icebp cmp repnz popf negb call daa out clc out xchg je xchg addl xchg aam jmp adc movsb imull or push jle inc push mov inc sahf mov insb dec xchg and std out stos adc aad mov repz jnp cmc mov jmp (bad) dec aam test push cli iret jp jb,pt mov out add push inc xlat mov aaa cmp fisub mov cli lret cli and mov mov sbb mov xchg mov inc xlat sahf xchg push xchg clc test scas in addr16 outsl xor mov jo fistp cmp push cmp and hlt int outsb mov das xchg hlt push push push pop nop fdivrs jb sub inc jno ret add in sbb cmp jns insb sbb out das mov mov into out in sbb inc mov (bad) and jle scas cs mov fistpll xchg les repnz bound pop add jge dec movsb mov mov repnz frstor in aas sub popf ds dec or push sub lods je mov stos jp and pop stos pop imul and pop push dec mov cwtl outsl fst push jl (bad) mov adc ljmp addl sub fwait cmp fcmovbe mov push xor add stos xchg push sti lods cmp mov mov inc fisub push or mov scas and mov ret dec mov mov pop mov cwtl mov mov sbbl insl dec into mov out lods out jge repz jno fwait inc or std dec fldcw pop adc mov xlat ja,pt lods cmp add aas rcrl rolb lret sbb repnz das and dec pop das or popa inc fildll or xchg cmp cmp arpl imulb xchg adc mov mov jl enter test and jae pop jg mov ljmp movsb insb jg fcoml cmpsb ds mov daa mull jge in xchg mov sub pop stos dec jbe loop cmp push adc bound (bad) add cmp or mov mov mov jae xor xor sahf push xchg lds (bad) popa mov jae pop push rorb (bad) xor xchg xchg jo aas xchg jp and test jo inc (bad) mov cmp lea adc hlt and inc stos aad nop xor and ja dec xchg mov ret loop jmp rcrb fisubrl sarb dec out cwtl dec inc pusha rcrl xchg dec mov (bad) pop imul (bad) sti cld inc dec cmpl sar lret arpl notb or scas aas xor mov in xchg push xchg ret aas arpl scas and sbb pop outsl repz sub xchg jge or incb push mov fsubr les xchg fldz sti or mov in es mov repz fnstenv cltd iret sbb xchg or mov stos ret push mov mov iret dec in popa jg call addr16 das into dec jecxz push insl sbb das (bad) mov push test inc sub sbb shlb jo loopne mov pop aaa and test pop and cmpsl cmp inc imul push loopne mov push in add sahf cmp xchg pop push lds das imul pop push cwtl mov sbb ljmp jb jnp cltd bound inc rcl mov push lods pushf ficompl mov lods lea nop mov push mov fsubs jne adc cmp loop movsl xchg notb fwait cmp arpl stos rcll stos fidivrl scas cmp sub flds add push packssdw das inc jmp sbb cmp fiadd shrl sub xchg fisubrl jns jae ss mov pusha cmp divb pop xchg sub data16 inc push jle fcmovu dec cmp or jo test mov loope jmp push push icebp adc sbb pop fsts aam xchg fnsave inc pop push inc mov push and std mov mov pop push sbb out add push dec pop push xchg ret jno es nop bnd push ss out movsb or sub leave push jmp cmp jmp sbb jbe sbb mov mov pop enter lret out pop aam fs jl cmp sub pop daa push sub pop ret xchg xor push loopne fdiv in fbstp dec cmpsl outsb das mov mov xor stos rclb icebp add push pop fsubl clc iret (bad) adc (bad) cmp mov out fcoms push inc pop mov xchg inc add fdivrp das ja xor shll jo fldenv ja mov push mov xchg ret loopne jbe cmpl adc out and call insl push fdivrs test jbe sbb cltd jnp add (bad) push sub je push hlt lret jae push and pop mov ljmp inc rol cs cmc (bad) fsts testl sbb test mov jge in cmpsl mov sahf out (bad) adc loope fucomip pop add add fsubrs add inc add pushf push (bad) mov loop mov (bad) mov mov in cmp popf cmp mov clc (bad) pop mov out sub xor or shl xchg push pop repnz int pushf lds rdmsr lret mov xor sbb popa sbb sub sub jge adc (bad) adc jne inc ss (bad) jmp adc outsb add lea jb rorl adc jecxz clc (bad) xor jns and sbb or fcompl mov or mov and xchg jl mov icebp xor nop or cmp jecxz push xchg nop mov mov out shlb sbb adc adc mov xlat jo jge xchg imul xchg iret mov adc mov dec repz fsubl jg inc inc sub loopne fisttpll jge xor cmp mov imul and mov xor cmp fisubrl andb das mov popf dec cld push push push mov negb inc cmpl push mov popa cld add mov (bad) out jp insb or or jg lock and fcompl je push fsub divb idiv jp cmp xchg pop inc ja push and xor ljmp jecxz push hlt imul sahf addl cmovno xchg sbb xchg and sub adc imul shr cltd or les push mov daa idivl adc ret stc xchg (bad) mov cmp sub (bad) ret aas es push pop (bad) dec mov or or (bad) into dec xor pop sub test xchg mov or out das mov push lds loope jae fucomi sbb scas jecxz mov addr16 inc (bad) daa or stos pop gs int3 fildll push push dec (bad) decl cmp adc jg icebp push mov cwtl cmpsl aad xchg jmp adc cmp cmpl or inc mov orl mov (bad) repnz mov or lret hlt xlat or test (bad) fimull out push out int3 jae sbb pop cmp xchg mov sbb mov insl (bad) lret movsl mov cld inc arpl adc shll xor dec pop inc xlat jbe fadd adc hlt cmp xchg lahf jns (bad) and xchg ret popa mov test into repz cmp dec pop push mov addl test fist cwtl loopne mov pop jae outsl clc cmp scas adc push xor (bad) in scas (bad) add dec leave (bad) mov movsb xor add negl pop (bad) stos xrelease mov mov cmp addr16 cltd mov dec push cmpsb sbb pop add mov push shlb lock sahf adc into enter add pop lods cs cmp sub xchg cmp clc insl inc mov xor xchg (bad) hlt sbb imul mov mov pop jne sti ds ss cmp mov fcoml movsb movl sbb cmp jae hlt push cmp mov cltd push sbb fdivrp inc sub cs fnstcw das xor or mov dec cmovno cmp or adc leave pop test pop sub push jge push nop sbb cs loopne push insb mov call (bad) ss fwait inc xchg dec jg and add push mov ljmp inc stos repz lret inc mov call dec je sub add dec adc nop or enter cs scas mov test cli cwtl push fs xor (bad) mov es outsb xor inc xor push mov jbe sbb mov out sbb data16 xchg mov jnp fcmovne and icebp push push pusha test je jnp cwtl and cld mov mov cmp mov jp bound negb sarb repz dec (bad) enter push aas ficoml fildl aas in mov cmc inc adc adc or sub cmp aas pop mov sbb cmp in jno subl rclb push enter loopne loope repz dec lcall mov outsb mov (bad) int3 mov lds and out repnz stos sahf in (bad) sbb into pop sub xor mov sbb pshufw popf inc inc push (bad) fs xor sarb push and push jae es (bad) or in enter xor xchg sti jecxz adc jnp out imul clc mov lret jecxz inc xchg sti popa jno out je add mov mov sahf popa popf fldenv xchg push sbb bound fs lods dec ss lret push jo jno in nop and fidivr insl push dec sbb sbb fisttp pop adc (bad) push pop sbb xchg and data16 daa mul push cmpsl push sar jne aas enter out or jne jns jle xor clc pop inc sahf ficoml imul dec mov mov mov cmp (bad) jg mov xchg add cltd mov aam dec jge loope lods (bad) data16 mov push push and cmp insl ja add xchg fs xchg inc jmp xor sub and inc xlat sbb or lcall arpl aas rorl lea push outsl aad xchg inc out gs and dec push test aas repnz loop dec push xchg test arpl mov lret xchg aam adc inc sbb iret movq mov and sub mov shll add lock icebp imul (bad) int lods cltd pusha stos jg aad xor pop das (bad) (bad) out sbb adc stos ret js xchg loop or repnz int xchg testl mov mov mov popf mov or popl push ret cmpsl cmp dec test idivb xlat mov dec or js cmpsb stc mov fstps mov lret push test jbe xchg fnstsw fwait aas ficompl dec push sti cwtl push sahf xor and stos jle sbb imul shr pusha mov sub (bad) and imul jp icebp adc sub xor push lcall repz adc pop arpl ljmp pop cltd imul mov les cli push ficom jns sub lcall or lcall in mov out push cwtl test stc dec mov mov rcll test es fs pop xchg fbld adc out sbb fisubr add pop and xor push adc mov movsl lods cli arpl inc inc call aam inc cwtl insl out adc dec xor sub adc imul mov and mov sbb lret mov jmp xor sbb pop inc or pop and jns push sbb lret lods out (bad) cli pop add mov jne xor clc inc pop mov ret daa aam mov fidivr adc nop cs cmc fist loope enter cwtl push inc xlat push dec stos fdivl cmpsb mov movsl pop inc stc fisub jo clc fwait jg arpl shll xchg call lret fcmovne and enter stos (bad) lds (bad) jmp jmp jns xor mov fwait and jo sub lret and cs jb xchg aaa adc mov addr16 xchg leave idivb mov mov inc push (bad) jbe push stos inc gs jns imul inc lcall and push add add dec fwait insb cmp js xor dec fnsave add sti imul dec imul pop push jmp xlat cmp mov or addr16 sahf mov leave cmpsl (bad) sub cmpsb mov (bad) (bad) sbb leave xchg aaa push push adc push pop push or mov pushf mov lods addr16 jbe sbb int sub and hlt icebp je adcb ljmp mov imul jb mov add ss (bad) daa lret pop pop mov sbb (bad) scas inc (bad) and pop cld fild fimull (bad) ja cmpsl imul cmp push pop cs sub push (bad) and jge xchg xchg or pushf xchg mov or add fdivrs movsl scas xchg enter mov add add push jnp sbb std jbe rclb xchg gs sbb push mov sub pop mov xchg cmpsl push jle out or cmp cmc dec iret mov rcr add inc dec lods sbb xor hlt xchg jp cmp or divl xlat push push sahf js imul xchg addr16 insl ret dec jnp adcl stc cmpsb sub gs mov dec mov xor popf xchg ja lret ds mov sbb leave (bad) shrb cmpl adc push mov (bad) cld push mov rcr stos adc das push dec in cmp ds lods (bad) and inc mov jno push push nop sbb fwait or sbb loope ss insl rcll fidivrl add ljmp bound push push push bswap xlat jns movsl add lret push fisubr push lcall aad (bad) test push push lea mov jb es or push (bad) jns fwait data16 test in std inc mov or lcall add loope fisubrl cmp (bad) xchg or icebp decb lock aad add enter sbb iret rcll and jne add sbb adc or repnz cmp popf sti jb es out or jge bound packuswb daa mov pop sub sub inc mov scas push xchg and jae add xchg arpl fucomi xchg push mov mov push add pop (bad) icebp xchg sbb sarl lcall sti xchg mov or test push dec cli (bad) or lods daa cmp fcomip adc das aas pop adc mov (bad) scas in scas sbb inc dec dec or movsb cwtl (bad) push sbb (bad) xchg outsb ljmp mov js aas out mov das mov cmp mov push mov (bad) out adc sahf pop xchg jg cmp fcomp sbb ljmp out and jmp inc movsl or mov (bad) sub add es lahf mov hlt pop sub xchg mov push cmp pop mov and ljmp aas sub mov jnp cmpsl fisttp js push cmp out lods add dec out jns sti fs and (bad) loope cmp ret or mov into push push add mov (bad) mov jp and or adc int iret jb inc adc push jmp nop ja lret outsb shrl inc jae fbstp icebp mov (bad) pop mov inc in or mov pop or mov add cmp pusha jge mov sbb imul xchg test les cmpsb or add sbb (bad) mov mov ss xor cwtl loopne js shr gs clc arpl mov mov jnp mov imul cmp add mov push jg mov pushf pushf jns mov push lahf push scas xchg sbb inc outsl sub pop popa incl inc xlat loopne sub imul mov (bad) cmp xor mov aam add pop out mul pop test push idivb clc push femms mov lods jmp xchg hlt jnp or mov inc lret leave out sub sbb mov in inc int3 loop aaa int pop (bad) sbb (bad) je (bad) and mov arpl jnp mov mov mov clc adc mov rol mov cmp mov push mov (bad) mov or pop stos aaa repz fldt xor mov inc xchg (bad) mov push mov jg int dec or imul rcr dec adc repnz push cmpsb cmpsl (bad) pop js inc lret test xchg xor jo adc mov aas jge pushf add cli imul jne add imul ret lea mov inc jae push fs arpl addr16 sti mov cli lods fdivl dec fsubrs push (bad) jg pop shlb gs mov jle loop adc mov pusha test add stos js cli mov cwtl pop jl xchg push xchg pop adc pop push jp ss pcmpeqw and and insl push call enter jg and ja inc scas sub dec lds mov xor fwait ret sub frndint out xchg sbb mov ret xchg lea fldcw lahf daa mov sub (bad) ficoml xor setg push cmpl (bad) push xor cmp adc mov lret sub or call fs sbb or push inc fimul sub xchg pop sbb loopne fwait push (bad) xor cwtl ret es jecxz arpl cmp adc in cmp rep leave mov inc aam push icebp pop push mov fs add fisttp jnp mov lds fwait out sub fsubs cmp movsl jns inc mov sbb shrb mov adc lods mov mov bound icebp dec and mov scas sbb outsl incb je dec stc ja std dec les mov clc cli pop pop sub add inc loop or hlt cs out loope lds insb in shll jl xor mov cmp push xor xchg inc lock pop cmp shrb test mov stos dec sbb std (bad) in aas pop cmpsb enter andl das popf (bad) test ja outsl arpl push jnp test (bad) mov cmp in (bad) pop adcl sub (bad) jne cmp fwait push orb ja push lret (bad) jb lods xor jno mov test sbb adc mov dec cmp xorl adc (bad) cmp push shll fnstsw mov pop push inc imul mov cmpsl mov dec in cld movsl iret lods push adc mov mov enter pop cmpsl addr16 mov loopne rol sub aas dec pop lods rcrb sub push xchg xor mov call fcoms jmp jmp imul push sbb cmp and ja test mov jecxz fisubrl cmp inc es adc jge neg jno jg xlat lock add inc cltd cld jle cmpsl inc scas scas (bad) push pop mov lods sub aaa fidivl dec stc push push push leave movsl dec push test lcall mov pop call add loop loopne pushf cmp add push adc mov addl jbe cwtl cmp lods jp lcall inc popf mov jp js adc insb fsubs mov push sbb fiadd out push and jl mov das mov add (bad) inc es sbb les add and push adc jle sub push dec adc cmp xchg pop pop and jecxz (bad) jae stc cmc adc ss insl cmp inc out cmp mov das sub lahf mov pop dec sbb pop loop mov cwtl mov lods dec (bad) lcall in ret mov add movsl fwait popa sbb fldcw enter mov icebp ss mov aam mov xchg pop push arpl adc aad mov into jle arpl mov lret sbb sti lahf sub call inc add dec push dec enter sub lock (bad) cmp rorl test insb pop sbb lock clc mov sub das lret sarb (bad) hlt inc cmc xchg outsb movsb cmp call call mov fwait test negl sbb je imul pop xchg add inc dec mov imul jne mov arpl push inc jae adc icebp add and outsb in add push popf mov aad sub push push je adc movsb mov push into add adc mov xchg out sbb stc mov rcrb cltd push jno cs add mulb popa adc add inc inc lods or int3 and aad rol pop xlat scas fcoms fldt mov push mov add lods inc sub cmp in subl dec je mov cld in dec add pop mov mov into or call pop inc xchg das outsl xchg aam (bad) inc call inc dec in dec imul xchg mov outsl xchg sub pusha lods lock notb push dec fldenv pop cmp scas adc arpl enter movsb sbb push lahf aas je into sbb pop sbb movsl clc xor inc push xchg loope mov leave jns mov inc sub popf dec mov in dec (bad) (bad) cld lret hlt mov jmp dec ja add out iret jno or inc imul cmp outsl mov jg insl imul push ret xor mov inc add mov cmp js jno jb sbb push push test lods pop or add add cmpsb movsb push decl sahf adc imul jno scas pop ja movsb push push mov repnz aas sub fistp cwtl cmc dec inc call pop and cmp movsb mov sbb pusha xor sarl idivl roll daa jg daa ja sbb mov nop and sbb cmp jns mov loop jnp test sub in sub sbb sub xchg pop cmpsb and and sahf dec gs and sub jle jge ljmp mov icebp mov pop insl push cmp fisubl nop popf imul lock adc movsb xor pushf cmp aad outsl cmc inc (bad) loopne dec or xchg and scas addr16 xor push pop int inc jp imul in cmc push xorl mov mov fstpt leave js (bad) test or jg cwtl loop inc out je pop xlat and repz jo test xor and cli lods sub cltd mov jg lds pop loop xor pop (bad) js rcrb cwtl fdiv push mov mov fcoml xchg sbb mov arpl addl aas fistp lret in outsb sub pop jns test jge push mov dec mov insl mov inc and mov mov mov leave adc adc add les jno dec mov xor sub xchg lds test sub incl jno dec adc mov push pop sbb repnz pop sbb jbe decl mov dec dec shl mov push stos stos dec out sub push (bad) cmp outsb xchg (bad) dec mov test push mov jmp negb lds jb mov sub movaps xchg jge lcall cwtl pop mov adc stc inc out cmp jg cmpsb push outsl out and fsubr inc and fwait in pushf xchg int (bad) in pop int3 popa aam bound mov shll sub cmp aam dec jae and cltd inc add aam mov sub stos add test cmp (bad) sbb and adc iret (bad) mov insb aad ret xor bound push inc mov dec sub stos inc cld inc adc pop mul (bad) add dec ds outsl or (bad) sti mov and sbb cmp add fbstp and imul addb je adc shll ljmp dec fwait sarb inc mov xchg aaa xor push hlt sbb sub sbb js dec imul xchg rcrl ficoml mov jl sub nop mov jge rcrl push or lcall or jle or sbb insl or inc lret imul dec xchg mov fcomip imul in sti in sub mov (bad) repz push mov dec mov mov xor setns call add adc cmp (bad) enter sbb push pop push dec arpl jns outsb push add mov sbb loopne push stos fcompl test mov imul fwait pop testb lcall inc push adc hlt sub dec inc sarb jno dec inc popf lock xchg mov pop cmpsl xor pop test movl xor mov lcall add inc push push movsb and cltd xor cs std xchg lahf adc scas mov cmpsb sub mov lahf arpl jge icebp jb and xchg sahf or stos jae stos in ret fnsave push xor push shr jl jmp shll addr16 popa (bad) jmp sub cmpsl out std insl ret mov cmp mov gs movsl mov jno adc jg xchg daa pusha dec stc mov in sub or xchg aam f2xm1 insl cmp mov adc jecxz pop fs (bad) xor mov push (bad) lods int3 bound inc or (bad) sti and mov push cmpsb stos mov xor jno imul ds cld cltd jae and inc mov ror int3 fildl add fs add pop (bad) mov daa rolb sbb jne leave idiv test and (bad) scas loopne (bad) arpl outsb pop add adc leave icebp push adc lret icebp lods lods push inc lret insb (bad) iret test xchg pop lret dec dec dec mov das add xor sub jae mov sub push pop mov add dec out adc cmp mov sete cmp jns push addl (bad) cmpsl imul mov sbb jo in push popf dec ljmp (bad) jg sbbl mov daa ljmp call imul mov jns mov cmp pop or adc xchg scas jnp push out and jge push xchg cmpsl sahf jbe jg (bad) out push stos in sbb pop bound xchg jbe sub inc xchg nop push test adc lret inc add jle and and aaa sbb xchg or sti shrl xchg mov sti dec inc xchg hlt mov or movsb mov lcall xor mov jmp xchg insl sarl xchg dec mov insl out push push or lret add fs (bad) repnz outsb pop repnz (bad) jo (bad) lret arpl nop lcall sti andl rcll pop jl loope stos cmp add sub or out cmc mov add mov pop les leave (bad) lret int stos lods sbb xor scas icebp mov gs push (bad) dec mov cmp jo loop inc pop mov cld cltd popa mov xor mov loopne gs jmp or push xchg mov sbb sbb outsb pop in and loopne jb (bad) out sbb pop rorb sahf sub mov pop in jecxz out nop xor (bad) xor lea in out inc cmpsl ret mov jb inc insl repnz dec mov cmc lcall inc lcall add cmp ljmp cmp push cmpsl pop and std les loope jbe mov test (bad) xor inc jnp,pt shlb mov sahf push mov mov sbb pop push cwtl cmp sahf ret mov insb fsubs ljmp enter js or pusha arpl in jns es jle inc sahf lds sbb repnz test nop pop push mov fidivr (bad) push (bad) cmp sbb jns pop jno dec (bad) ljmp movsl push aad je cltd jp lods loop into mov jecxz xchg inc nop xchg xchg repz mov pop repz lock sar push or pop pusha jne cmp ret or mov repz in dec adc or fidiv mov xor add nop inc jbe or test xchg push cmpsl test test xchg cmpsl fstp (bad) mov mov or scas addl stos push mov bound xor add jg mov sub fbld push jae arpl mov ficomp add inc cltd cmpsb stc sub fdivrs or jmp repz push add gs inc mov nop ds mov sbb stos xchg pop cli je cmp repz push xchg fucomi outsb xchg lds jbe dec push orb dec add or fdivr aaa cwtl push daa roll gs inc adc push loope and sub cmp inc push mov push xchg (bad) dec fimull add std or (bad) fnstenv xor push sub (bad) cli jnp popf add sub lock sub pop mov out add daa and mov iret xchg hlt adc ss inc mov dec (bad) shll das stc mov gs ljmp jge push inc aas cmp add loop (bad) aaa mov add mov push rclb sbb xchg and adc fcmovb or pop test jle stos div sub mov dec cmp repz sub jmpw push negl mov sub fcompl sbb popa scas out jl mov cltd cltd dec mov cmpsb inc fnstsw mov mull orl shrl (bad) loope mov aaa jbe nop mov jne mulb cmpl xchg mov and ss ja pop or ljmp dec daa (bad) (bad) jae and mov sbb sub pop dec mov inc jno addr16 gs mov mov call test ret dec (bad) jb or into and add push test push insl fidivr movsb ror mov sbb xor dec les icebp insl push push in aad pop leave jecxz fild mov in pop mov pusha in js (bad) fcomps dec fbstp (bad) push jmp nopl pushl xchg adc enter inc and lret js dec clc push push ror or inc fnstenv addb sti insb dec cli sarl xlat lcallw call aas (bad) jl xlat or stc jmp subl xchg xchg addl fbld ret les mov mov shrl lods gs mov stos pop cmp mov xchg insl mov sarb adc jp xchg mov stos pop sahf pop pop test mov push neg cwtl mov in push cmp add sbb pop add add fidivl test or inc daa fildll jl subl xchg dec lods cmc out pop fisttpl clc push xor rclb or sarl and ljmp (bad) ss daa jno test push sbb or mov insb mov pop stc lret pushf aad and mov mov or add loope scas je sub add or icebp out in (bad) js sbb or scas inc stos sub mov mov add xchg pop mov notb das mov xchg push aaa (bad) imul adc pushf or jl inc cmpl cmp jnp cmp cmpsb push sub pop sarl fiaddl sbb xor mov in outsb dec mov jp or loope pop int movsb mov push mov push nop scas cmp imul and mov sub lods jb int test clc stc xor xor inc mov or xchg notb mov stos bound lret mov xor push pop and mov test adc scas sub arpl pop (bad) sbb jnp inc into stos add ja fisubrl xchg mov sub pop in and pop xor mov mov inc and adc mov dec or mov out cmp sbb aaa nop addr16 adc lods and fdivrl dec sarb dec xor add in stos adc sub sub (bad) push aad mov mov cmp dec movsl sbbl movsl fbld sbb dec sub (bad) into xchg dec mov pop (bad) mov popf push (bad) pop jae pop dec lods mov or (bad) (bad) cmp dec imul mov push sbb ret rorl push in ja pop mov fcmovu in fcomps ja movsb ret aas les int mov pop mov stos in xchg test mov jb test lods xchg push lock hlt adc jg pop stc test mov imul in pop rolb mov popa popf dec and xlat fcoms mov sbb shr jne call xor xchg xchg mov pop out stc jg mulps inc mov sbb sub jne fs mov inc clc sbb mov mov pushf xchg mov sub jae mov daa std mov mulb lahf in imul out mov bnd scas cwtl adc ret pop ja and inc push decb mov pop js stos outsb in pop add rcll jg xchg imul push pop jg mov mov std mov (bad) adc pop jg adc loope clc mov pop xor add and mov adc cmpsl inc and ds sub or (bad) mov and pop popa out cltd arpl popf cmpsb lret and mov aad or outsl inc scas and scas sub or repz sub or mov adc mov push stos xchg popa xlat cmp push sbb push pushf jne mov xor (bad) lock shr cli ja ss pop iret andb addr16 jge nop fisub sahf iret lods popa ret adc loop imul leave pop cwtl or sub mov test jae cltd inc ret stos add (bad) daa sbb or lods call movsb popf sbb (bad) pop pushl ret mov mov lret inc lahf mov out imul mov inc pop movb sbb inc add mov in movsl mov (bad) inc iret xchg push cmp cmp ret cwtl or adc mov xor adc hlt dec js in aas loopne push sbb fwait out stos into add sarw mov cmovb pushf clc lea sub mov mov icebp dec xor sbb inc push add leave and xlat adc call mov jle inc mov aam lret inc jmp rorb fucom cwtl push in sahf and or jo cmp ret inc mov sub mov fs seta (bad) dec int3 or xchg pop sbb out cmp fdivrl pop rol xor adc decl xor xchg dec ficoml jecxz mov leave vsubpd arpl lea imul (bad) push xor repz push addl repnz shrb jb pop (bad) push mov frstor xor in mov jge mov das outsl jns (bad) sbb xor fldt leave aaa xor outsb xchg jno sti jns dec ds outsl cltd in (bad) add or fmull outsb mov lret nop xor push cmp xchg fs aas jecxz loope xchg int pusha lock test lret push sbb (bad) sbb pop push loop (bad) std xchg mov pop mov ss test inc push mov popa in mov dec mov (bad) dec mov push inc cwtl push cwtl mov insl xor push pop insb push cmp data16 mov outsl movsb mov inc xchg call (bad) in in or movsb push xchg insl mov das outsl push pop movl push (bad) outsl shrd inc pop mov push fwait push add jmp in jns xchg dec xchg xchg repz sub jecxz sbb ljmp jne jp pop scas daa andl repnz sbb jl jb jg lods iret in out cmpsb xchg fisub imul pop mov xchg lock push (bad) cmp adc jo jle xor fnstsw sub dec push fiaddl pusha data16 mov xor fwait push das rclb and out stc mov in popa hlt test leave popa lcall adc mov ret sub lock loopne (bad) cli shrl xchg leave imull pop arpl test push push stos mov cltd popf dec mov popa popa push lret push stos scas ljmp rclb lock repz mov fldl repnz mov xorl (bad) stc xlat add inc push adc pop xchg je insb leave mov mov movsl or (bad) lock mov js xchg adc jp mov daa push cld lret cld movsb mov loope pusha mov in in xor mov adc push test push push mov sub add ss int decl and out jae adc cmp xor lcall fcomi bnd fsts jnp sub jo in adc adc jg xor lock sub pop int3 jg cmpsb sub inc adcb jp mov inc fnop add xor lods jl pop mov inc cltd xor jno sub pusha mov inc in pop or add inc sbb xor xchg cld or inc sub xlat pop rcl jo pop pop fs push pop sbb add jne mov add fs sub test or stc (bad) xor cli cltd xchg push pop dec sub rcll es mov loop les jmp and push (bad) mov or gs push lock cmp add test stos xchg ljmp test fistl nop leave xlat ret mov add and or es jb loopne sub lock or mov pop test (bad) pushf cs mov insl xchg dec test das out data16 js xor aaa stos cmpsb rorl adc jne jecxz sarl push pop ss xchg int fs xor mov xlat rol mov add (bad) flds xchg xchg stos jbe (bad) sub test mov push and inc or or pop jle mov jb lcall rcl sbb jno ret rorl dec or fild inc sbb (bad) (bad) lods enter adc xor cmp jbe cmp cmp mov outsb comiss adc add ja push popa mov adc loopne arpl lret sub mov xchg lds out cwtl lea lea dec jg fildll inc popf popf ljmp jae stc shlb std cli adc cmp fldt dec inc das pop inc dec scas sbb (bad) mov xor push mov mov sahf call fmuls xchg and test add mov mov icebp or out dec xchg (bad) cs inc push inc sub repz add imull ja dec adc std sbb cwtl inc subl sbb enter (bad) aad dec sahf das int xlat and push xor cltd jns popa sbb jo clc pop jno pop aas add push lcall mov fdivr pop (bad) push popf clc xchg mov adc call hlt gs jnp (bad) add pop adc scas sti in (bad) rcrb push sub and xor push (bad) push dec insb lock and mov mov lahf push (bad) or aad xchg (bad) pop (bad) pop push dec sbb mov mov or insl es sbb xor or addr16 cltd add adc mov sbb shl out rcrb xchg xchg scas dec mov push ds in jge (bad) xor stc aaa push adc pop int scas mov ss inc rorl pop dec sar test stos mov loope (bad) pcmpeqb mov cmp push sbb inc mulb ret mov pop iret jg pop popf popa out loope in and fstps jmp push fwait jno aaa cmp pop pop jg (bad) aam xchg faddl inc xchg mov imul mov dec sub push inc adc sub pop jb lcall outsb jecxz sub pop std sub mov or stos push je mov popa mov dec sti jno add adc cmp in push testl mov lret add dec mov popa (bad) gs aaa sub fsubl mov int3 xlat and pushl jb lahf loop mov mov insl out jo std fstps cmp lea inc cmpsb inc iret (bad) push imul dec bound gs outsl dec inc xor jmp cwtl sub sub fmul mov sbb xor lahf add mov (bad) mov cwtl pop sub ret test cmp cld and sbb (bad) inc cs mov mov lret adc leave xchg inc aad insl add scas adc pop cmp sbb aas jl pop sbb aad imull add dec or mov iret fnstsw add dec cmpl (bad) in stc loop (bad) lret adc and stc jbe jle andb sbb add jo in add push mov mov mov in das xchg js add rcr lock push cld and lcall lock sti lret sbb inc cmp (bad) loope mov pop repnz call jb pop add push cld xlat call sbb mov fnstcw ret cwtl icebp and or je jp pop inc cmp les push sub and bound lods push cmp clc bound and inc (bad) lahf mov pop inc cmpsb fldcw jbe pop mov loop or loope push fstpl dec jnp (bad) xor orl xchg mov xchg pop stos sub jns addr16 push imul mov sub stc mov scas in test cld mov sub sbb js cmp (bad) mov (bad) xchg loopne mov repz xor pop add sbb popf push add inc addl push nop mov sahf repz clc jae popf popa push xor jge sbb inc sahf sbb lock jge add icebp lds xor cld jns test pop mov mov ja pop pop mov and inc inc or mov out pop cmpsl popf mov inc out dec add lret ja sbb loope,pn inc xchg out dec push fldcw dec test nop fstps inc fcmovbe adc mov dec int3 cmp or xchg lock pop add negb mov fwait cmp test cmp popf push or fbstp jns es lret push inc sub mov mov pop pop adc and sti inc push repnz jl arpl out rcrb les dec testb pop cmpl and mov movsb jge scas and (bad) jmp cmc out fucomip inc sbb dec adc jb cmp mov das pop popf adc fimull push mov mov nop jl cmpsb imul psubsb imul loop movsb mov popf nop (bad) push fistl pop daa pop sbb (bad) inc jns jl and sbb in loope fdivl (bad) roll inc ljmp jo dec push add push addr16 movsl sar lcall xor cli fdivrs nop sti mov mov (bad) xor push ljmp andb mov imul insl jno cmp push mov xor fistl outsl mov inc les add sti (bad) scas xchg jle clc clflush mov aam imull or call dec outsb bound (bad) lret pop out mov pop adc in orl test adc pop pop inc mov repnz pop sbb push xchg jle adc push jge add xchg mov in xchg jnp fstpl shrl push hlt popf cld dec lock add mov adc jo xchg push pop pop idivl and push cmp test out mov insl pop xor sbbb inc add out push arpl popa cmpsb pop lret clc lock fwait test or xor xor std adc jo sbb cltd out nop cmc scas cld mov pushw cmp add repz inc jmp outsl add adc sub push ljmp (bad) out mov pop lret loop or mov push std mov push dec jno pop pusha mov xchg ret xorb xor pop push icebp rclb mov xchg scas imul cmp lods xor mov mov pushf loopne (bad) int lods inc daa sub imul dec jbe loopne sbb inc lret pop cli pop int3 fisubrl or or jns call pop mov dec push lahf jmp push and ret inc sbb mov dec aas mov hlt cmp mov popfw sbb (bad) mov pop int out js test mov push xchg cmpsl scas (bad) notb lods adc sbb das mov push gs push lcall inc popf jg push fistp mov aas add sbb and pop dec adc or or mov cmp (bad) sbb pop test jg (bad) (bad) jle mov es mov sti call cmpsw in int3 or sub rorl cmp adc call pop in aam and bound dec mov test sbb jns and shll mov jge add or pop inc pop fsts aas and or jae cwtl push fmull stc popf rol sbb in fistl icebp insl cs mov jge adcl nop (bad) cli inc or or pop jp pushf jmp jecxz (bad) mov mov (bad) cmp add cmp loopne arpl (bad) jle mov add or sub mov xchg (bad) xor aaa inc outsb adc add nop push cmp jo jg (bad) iret arpl (bad) testb xor in ds sub pop jmp mov gs stos inc (bad) sahf mov adc adc scas imul and mov in js or gs cmp ljmp jo push int3 jns jne xor jle pop add test and into outsb hlt adc repnz cmp mov lods lds xchg jp dec test add (bad) int imul push push mov (bad) roll pusha xchg lods test ss mov inc add and dec shll ljmp pop add loop lret jns pop jae das lock fdivrs sbbl stos jmp push mov mov fs fisubl inc xor xchg xlat push adc push dec mov bound rorl cmp cmp mov jp imul adc in call add loope inc test (bad) pop ds or (bad) (bad) lcall pop out sar mov push sbb imulb in pusha cmpsb or int3 or xchg lea loop jecxz push movsl loopne rcrl adc ja or mov pop pop add adc push mov dec test ficom aaa movl dec (bad) out (bad) mov push mov lret out daa push nop push lea fistpl xor loop cmpsb dec add (bad) inc cmp addr16 jns ds xchg in insb shll mov (bad) lock lods sbb dec cmp xor or lods (bad) arpl aaa (bad) xor inc mov pop xor nop mov sahf add jne lods or mov sahf loope in pushf pusha test idivb sub movsb repz (bad) test subb (bad) mov pop notl mov lahf lahf mov call sub push jl movsb into aaa repnz stc loope cmp xchg adc pop add ja jns dec xchg leave repnz fsubl in pushf jg add push xor xchg mov cmp outsb bound dec shrl inc negb popf sbb jne inc adc push jb out aas and repz mov and sub mov lock icebp cmp lods sub xchg lods cmp mov es je sub jmp sbb push add inc add stc and cmp jae (bad) idiv dec mov xor (bad) sti pop sbb pop mov ficomp mov shrl cmp test and xchg bound data16 int3 test sbb sub or pop sub dec ficom mov stc cmovge stc scas sub jl add inc pop dec jo mov mov test data16 dec push xchg je stos inc sbb sbb push out dec rcr and punpckhdq (bad) imul daa mov insl sub fistpl fisttpl mov sub add (bad) pop push xchg loopne dec sbb clc mov nop sub fstps and aas dec (bad) xor cmpsb sub add sahf mov lret into adc add mov adc jae mov (bad) test inc xchg ja fcoms (bad) inc aad mov mov push fs mov xchg je jle and xchg pop and lods stos inc inc cmp adc movsb add sub xchg mov sbb out sub rolb dec mov pop in mov push lret rcrl fmull in xor loope repz and jb mov outsb jnp jns cmp mov jp aam test push dec and ret (bad) test sbb roll push movsl adc pusha inc fnsave (bad) mov cmpl gs (bad) shr pop sub arpl jns mov fldl imul bound and cmp dec jbe arpl cmp movsl mov push cmpsl nop or jg push jle outsl iret outsb fistl insb xor push inc gs enter sbb mov ret mov inc ss out shrl mov adc dec xor xorb pop aas roll js mov add mov sub mov outsl mov sbb pop jmp decb inc jl dec dec ror in and pop fldenv push sub xlat mov outsb xchg imul aas fsts and fcoml dec mov pop fwait jno sub scas lods fwait mov adc sub lods shrb (bad) push cmp mov and jmp dec movsb mov sbb cltd and mov popa mov out sbb movsl imul adc gs movsl mov imul cmp test (bad) and cli cmp fisubr outsl mov dec mov mov out jnp nop sub icebp das std aas sbb repz jmp fbld mov fldpi pop pusha xchg push lods mov fldenv cmp int jae jl mov pop xchg fldenv mov inc lahf xchg adc cmc scas mulb (bad) sub xchg cmp xor test sbb fnstenv mov not xchg push jl mov cmc or sarb xchg cltd add nop std (bad) dec movsl xchg into inc mov push aaa adc dec mov dec je popf sub cmp das sbb pop dec aam push xor add ficoml mov movl sub adc dec in xor add leave icebp in add pop cltd pop mov stc adcl test stos sub out mov imul add inc adc mov (bad) xor stc xchg mov hlt and stos pop xor sub icebp fs ret push lds sbb out stc or arpl jnp adcb ss pusha or arpl or cmp cld das lea xchg iret add popf movsl pop lcall sub arpl sbb dec mov jecxz xchg in int3 xchg dec arpl push test mov inc or push iret jo inc rcr inc inc jmp xchg fldcw cmpsb jo xchg jle in test add inc push jb add or (bad) dec ret sbb lea xor push (bad) call inc push xchg xchg add mov gs or loope jl (bad) fnstsw lds repnz push scas cmp cmpsl or xchg stos mov je jnp aas mov dec mov arpl push in cmp push fbld (bad) cmp xor inc stos js movsb mul mov xor shrb add sub or lea jo sub inc inc outsl cmpl jns aas add cmp dec mov ds stos mov dec pop mov inc in stos subb dec cmp add call stc cmp out adc jnp lods inc out mov jl mov stos das pop data16 dec jbe movl jbe mov data16 (bad) imul xchg aam stos lea clc xor aaa mov cltd pop lahf fwait or jb xchg adc xchg xor mov mov shll cwtl fist inc mov js push mov add enter xor aam mov cmp outsb sbb call cmpsl adc outsl bound push mov rcr leave mov in hlt cld insl mov mov xchg jae xchg aam fdivrs mov inc stc or imul rorl cld sti dec hlt and andb sbbb adc or mov jl lods aad sub or ljmp jae inc xchg aad arpl aam or lock pop (bad) push test lret sbb pop out xor push leave adc fcmovb jp and sbb dec xchg mov xchg cmc in sub fmuls add shrl xor in hlt lret ror repz adc xor jns sub adc int inc negb adc test mov in dec pop or push cld orl in cmpl mov xlat push nop xchg push xor dec xor lcall sub arpl inc lret xor ret fcmovne inc push leave loop mov (bad) movsb outsl mov push scas sahf push mov (bad) sub sbb dec stos xor push xchg jne ss into pushf pop imul push (bad) faddl jmp dec cld xor popl ret dec pop adc inc icebp lret icebp jmp js imul jno (bad) insb mov cmp mov cmp data16 adc sbb jmp ja xchg adc outsb xor rcrl inc mov shll mov sub popa mov sahf movsb fildll in xchg adc aad sub sub pop test xchg add xchg lret cmp jg and lds fnstenv push fildll jae in inc push out mov adc outsb cld out sbb sbb lds adc mov lret dec mov data16 js lds lods and inc lahf fnop pushf andl test imul and pop sub mov sub iret test mov adc sti ljmp push xor inc dec pop ja or sub mov movsl push jmp jae test mov cmp cs sub in xchg mov xlat leave xor int push sbb stc dec scas and sub mov sub adc xchg cwtl inc pop ds daa pop syscall cwtl cwtl ret jecxz test or push icebp scas inc ret shll jo daa adcl mov mov push (bad) jns cmp leave sti and xor jnp adc xchg ror idiv outsl sbb cmp cltd call xor (bad) or pop aad add dec ret xlat retw mov mov inc jno cwtl (bad) leave aad mov sbb lahf mov outsb mov cld add xchg les xchg stc out into outsb dec mov icebp out pop mov xor adc mov jmp xor popf mov inc fmuls enter inc and mov push arpl jle les insl popf inc mov (bad) clc gs xchg movsl (bad) or dec lret lret ss pop iret out jae arpl in fsub sub xlat inc xor cs xchg cmp add enter imul je pop adc push js lcall fadd cmp xor loop mov cli dec add mov mov mov stos jmp sti push fadds std cmp addr16 sbb in scas xchg int repz out and dec fs cltd xlat roll jg adc jle insl (bad) cmpsl pop adc jno fcomps pop push cmpsl movsl inc pop stos mov loope mov pop lret push fcoms jns jp xchg aaa mov sub cmpsb push xor repnz mov and cmp sarl sahf outsb mov jmp xchg cmp jp push aaa jmp ss mov sbb mov mov inc add sbb jmp jo pop pop jle dec das inc addb sbb repz int3 out xchg sub sub test mov and lret inc sbb inc aad dec aam out mov bound or sbb dec mov outsb imulb mov jo mov lea xor push inc mov fcomp inc add adc push mov adc mov jnp mov cmc inc and lcall or or lea mov scas push std (bad) test cmp lret dec aaa jno pop mov in stc ss xlat stos adc sub loopne mov jg mov xchg pushf ss movsl mov and repz in and adc xchg dec daa or jp or jmp mov sbb inc out in xadd insb mov lret ret enter adc das mov xchg xchg mov push arpl add in dec or add sahf aad mov mov or dec les loope test mov fwait xchg rolb sarb loopne or push std scas or lcall test (bad) sarb insb cli dec aas add push repz or lret mov xchg add xchg mov fisttpl movsl pushf test xchg mov xchg gs add inc and in lea (bad) pop jnp ficomp dec subl mov aam je jg push xor lahf cltd push test or nop lods inc test mov in movsl das fild adc dec xor mov push aas lcall fldenv in add stc push sti inc fmul dec lcall popl push cmp xchg dec mov push push mov psubb rorl mov dec in ljmp add pusha out push push push aam dec xchg movl xlat mov mov mov jb adc push xchg pop lcall mov lahf add mov repz lds subps lods (bad) je idivb imul push scas adc or pushl nop push cmp call push pop pop jp jb pusha test pop jns mov sub stc out mov jge jge push jge (bad) shrl inc cmpsb dec sti fidivl push das addl out push out cwtl loop daa inc adc push aas sbb and push xchg xchg int ret jp xchg psllq inc scas inc in (bad) mov shll lods inc or cmp rorl fwait lods cwtl and inc ja mov cmp call add inc test cmpsw jle push rcrb iret jo jno int3 out loop push mov inc jne,pn cmp ljmp aaa push push push cwtl hlt flds xor repnz jle pop data16 xchg xor daa or mov and mov in negl cltd pop insb movsb arpl adc xorl pop mov cld subb mov jbe into std div call push sbb gs rep add sahf (bad) cmp push sbb je mov add out adc loop and in sub jmp in jo xor or adc jno inc cli sahf inc push mov jne adc scas sbbl xor cmp je and sbb inc mov mov dec decb loopne fisttpll mov mov mov cmc mov and mov mov xchg inc icebp insb lods fistp xor and sub leave ja push jl sbb push stos (bad) daa add dec jle cmp jbe xchg sbb scas mov dec movsl push insl pop cli sub (bad) xchg (bad) ret movsb in into sahf xor loopne adc les popf ja in xchg test (bad) movl pcmpgtw mov and jbe fcompl dec (bad) adc sbb xor cwtl dec ds lret sub jg int3 and jp xchg clc push jne mov aam sbb jmp inc adc (bad) xor sub sub (bad) ss pop rorl repnz mov add je push pushl add sbb or imul dec fildll push pushf outsb sbb js jae jge sti inc mov pusha and jp mov aad mov mov pop jb loop mov sub jl aas push (bad) xchg fwait add (bad) cld inc arpl pop push scas test aad dec leave out add rorb xor cmpl jno sbb out and int lea ja push xchg in cmp pop stc imul inc sbb mov sti mov xchg add mov mov sbb out xchg pop and and fild icebp call mov cmp xchg stc fidiv or adc push mov addr16 push fist push and adc in lret in rcrb inc popa adc cmp xchg arpl inc imul mov enter sub movsl or std aas dec sbb xchg stc pop loop mov xchg ja popf int add pop mov add mov push jp mov push mov imul das lods push js inc aam fdivs insl movsb iret jae rclb fnsave loop or jle pushf pusha gs fnsave pop adc mov push sbb xor shl mov arpl mov lret in call call cmp cli mov movsl pop hlt les scas jbe mov mov leave sbb or dec jg fcoms clc push push mov inc jl and pop xchg scas inc movsb jno mov adc and mov bound jno add pop lcall insb out and lret sub or xor das into add test gs inc int3 push (bad) sub or inc fsubrl (bad) scas jbe jmp mov mov imul pop (bad) fmul xor adc mov push pop bound fmul hlt loop into mov or jmp addl push popf dec push cmp add sub mov in dec mov adc outsb sbb iret loope push (bad) ljmp push push mov les hlt fimull es jecxz push (bad) mov les out adc add (bad) adc loop popf rorl (bad) cwtl repz sbb jcxz mov mov pop pop mov mov icebp (bad) (bad) cld mov cwtl pop stos ds cli das ret nop jbe push adc (bad) xchg or sub adc pop sub dec sbb test mov jae inc add std cmp xor rolb das lods sbb sti xor push push mov add jge test inc iret imul popa clc mov adc sti push leave fbstp out xchg mov fisttpll adc xor movsl lock pop in sarb cwtl pop push push in in in jns sbb add jmp inc xchg pop pusha lcall fmul call out push mov jecxz (bad) xlat sbb push mov add lock stos sub dec fisubl in pop adc inc (bad) cs enter adc pop adc add mov push movsl inc mov dec out adc fcompl gs xchg (bad) cmp popa call mov data16 fstpl mov scas adc xchg test sbb pop adc push and test xor pop addr16 int3 mov mov push jmp imul push mov pop pop enter dec loope jae xchg int fisubrl mov mov popf clc ss pusha lahf aaa jns,pn xchg xchg mov mov test ss popf dec cwtl cmpsb cmp fdivs add inc inc in mov and imul les and mov scas fisttp mov imul mov jg jae repz pop pop jecxz fisttpll les mov das cmpsl lock jmp adc lea aas and test xchg or cli rcll adc adc in cmpsb pop std push push aad lea sbb sub add lahf mov ret leave and push out outsl and pop cmp outsl (bad) sarl sub popa mov mov rorb jo adc sub call pop cmp into in sub add cmp add cmp xchg sbb movsl push icebp aaa cwtl dec inc jae and sub and (bad) cmpsb movsl xchg into cwtl add fistl movsl data16 xchg into pop ror (bad) leave cmp (bad) mov and popa mov mov das jmp lret add rcll jle les mov in sbb insl sbb das dec fild or imul es and cmpsb xchg push sub mov (bad) pop mov roll fucomp pop mov test jmp das mov ja js xor xlat dec ljmp mov sbb sub int3 ljmp pop in add sub jle (bad) ds je and push pop xor xchg out lea (bad) push imul mov movmskps loop movsl lret xor add sarb xlat pop test adc sub xchg dec inc pop (bad) mov leave in sbb je pop loopne pop adc push je int3 imul nop adc xchg andb mov ss repz popf mov mov lahf sbb arpl mov test dec sbb (bad) dec sub jae out daa xor xor push inc push inc stos cmc dec push (bad) xchg cwtl ds out int adc push dec lods xchg (bad) pop push lds jl pushf cltd mov cmp fwait inc dec cmp scas clc test push aas push mov cmp add or sub push adcl jg push pop insl imul loope mov and test pop out mov jbe dec test clc sbb add je out sbb test out xor xor xor out jo adc sub addl fcoml (bad) cmpsb dec lcall (bad) jg fdivs pop mov cld and add inc pop ds pop jecxz adc xor (bad) scas (bad) xor bound outsl push sbbl xlat jg or insb cmp les xor movsl push push and adc inc and int insl repz sbb add sbb jae jb hlt (bad) fsubl jl imul sbb hlt hlt daa not in or and inc insb mov push sub jo mov dec pop xor daa imul ret push packuswb cltd push mov mov (bad) jns ret mov jb sbb popf js xchg jp xor leave xor sahf cmp hlt movsb xor cmpsl xchg cmp fdivrl mov rcrb imul mov and cli pop dec hlt out pop jne cli and pop sub or lods daa sbb sbb or jmp pushf int lahf in jnp pop and push cmp (bad) stos (bad) enter sbb or out pop mov dec jg and daa out jnp pop xchg mov and adc jge inc popa dec pop cli mov inc xchg sbb loopne int3 adc stos sub jg leave dec lret dec in xchg push cmp hlt repz (bad) lret mov (bad) and pop sub sub gs push cmp into ret data16 cmpsb sti (bad) add and push (bad) cld xor inc out adc test xchg jle jno popf jp xchg jle lret int3 icebp sbbl repz cli es sarb mov jp repnz xor out adc inc sub js push dec stos lea mov xor fs push (bad) repz int and popf sbb sbb pop sbb fistpl out stos sub xchg shr loopne (bad) mov scas in pop in mov cld lods xor xchg sub push xorb jbe stos mov jne cmp pop test jge leave and lcall hlt lods pop mov (bad) sub les sbb movsb jle les cmp mov mov xor ja dec repz in mov repnz ja pop scas int3 fiadd nop sbb pop jle movsb xchg dec dec mov sbb xchg das lea insb insl adc fwait imul jmp dec mov mov push dec (bad) or shll xor sub fsubs inc (bad) cmp xchg or jmp mov add cmp cs pop cmpsl lcall jae imul ljmp out pop movsl jge adc int3 pop jmp push sub jmp add xchg loopne jle push fnop sub hlt or idiv pop in adc xor movsb das (bad) (bad) push jae pop sub dec cmc or aam test add and and ljmp into aam sub popf and jae mulb aam adc mov fldt cmp push data16 std pusha repnz xchg call jbe insl aaa out cmpsb adc jecxz push je jmp inc std daa dec adc cwtl (bad) adc or dec mov std pop stos xchg dec add cmp loop dec rorl jns add and lahf (bad) cmp out repz (bad) mov mov (bad) adc hlt dec cmp sub pop les inc inc call out testb or add cmp push fimul and inc negb push cmp je mov mov mov fdivs or inc mov popf mov (bad) insl or push insl push insl (bad) ja lcall adc mov out (bad) in data16 inc pushf xchg (bad) adc stos outsl mov cmp mov cs cmp aam push (bad) mov lret mov add jne sbb jo sub stos lock nop cmp pop xchg push rol popf jge ss mov out dec fsubrs jp pop neg cmc rclb (bad) or ret movl fs icebp inc bound push mov pop mov in rcll es mov and (bad) jp cmc mov arpl pop mov lret push xchg push je inc jge sbb rorb dec movsb out cmp mov dec adc pop push jae mov mov sbb sub out aaa xchg (bad) xor js mov xchg sbb sub (bad) les jg cli roll (bad) out sahf cmc lret sub les or add mov xchg rcll into jb insb sub dec outsl pop lret mov (bad) lock mov arpl sub xchg ja mov enter vandps dec in or (bad) cld sbb addl faddl arpl cmp push xchg sahf xchg mov mov rcrb push gs daa sahf repnz push rclb iret imulb jb test jl and mov repnz adc jb call arpl mov mov into (bad) inc pop pop mov in sub mov icebp adc dec adc (bad) jo ss xchg xor (bad) sbbb sub or xchg sbb data16 sti mov or ret and and mov xchg inc lea sbb jp dec fs or lods xor js xor sub inc jecxz sahf dec cwtl sahf dec jne sbb (bad) loopne push ja and (bad) dec mov sub push stos push jno test lret mov aaa jae mov xchg out xor mov mov push adcl cmp xchg fistpl mov sub adc ss add xor cmc add cmp das sub push mov cmp push jnp shlb push inc or dec ret mov repnz mov adc ds fcompl inc mov or jno test or xlat sbb cmp and xchg jae ret std mov movl mov fisubl xor xchg movsb lcall or pusha jl ret nop sbb mov imul outsl sahf push mov int3 jnp je and pusha mov aam mov mov ds clc and add jecxz xchg (bad) sar orl ss cmp sarb inc je popa lret and int xor jge sti mov lods clc pop (bad) mov jl mov mov loope adc sub pop mov or sub loopne addr16 add inc insb pushf cmp xor mov jp idivl rorl xchg fmull in pusha jne out enter mov enter ljmp cmc out xor dec das mov fucom (bad) std add insl in and call jns xchg jo jne ss sub push cmp lcall dec clc mov ljmp mov pusha scas jecxz mov mov cmp mov mov pop (bad) aas jae pop ja jno loopne lcall cld sahf pop pop and inc jp into out decl ret popf icebp jmp bound jl mov mov sub out sbb mov pop dec xchg pushfw addb xor fsubl cmp cmpsl xchg jne jge fwait inc xorl jns lea (bad) fstpl adc test jo (bad) arpl cmpsb sahf mov pop (bad) outsl mov or out xlat xor jg lea fwait cmp addr16 inc imul xchg mov mov fcomps push pop push je sbb int3 cwtl ja sub mov pushf jmp enter xchg mov mov out stc sbb sbb bound sub js mov jmp aas dec outsl leave push pop insb mov adc inc pushf pop adc es in jg jmp loopne call adc (bad) dec xchg jae dec cld inc sbb or dec jns xor mov pop out call mov and in inc icebp pusha pop and jp cmc sub pop loopne ds aam insl int3 push push cmp mov add hlt in dec roll outsl mov (bad) push pusha jo in flds cmpsl push pop outsb or sub mov mov daa cltd insl sbb daa jmp mov and push mov int repnz scas push and inc ja cli pop sbb cs cmp (bad) and mov or mov ljmp out push jns cmp aam adc cmp lahf jnp testb push cwtl aaa adc push or jnp movsb jae cltd dec push and xchg std ja pop sbb add dec (bad) popa aad inc cmpsb rcr xor xchg imul jge sarl cmp xchg jmp sub (bad) push dec jl out ss pop loop imul lahf lea andl cltd mov dec sbb movsb scas pop dec (bad) sbb sti rclb or mov iret in lods test xlat (bad) jne inc jno jl jbe inc mov cmp fistpl push xchg sbb cmc jno lcall mov in xor mov test sub and jmp add fimull mov push lret sbb and aas adc push cltd ja and das xor adc fbstp (bad) jle data16 ficom aad mov cmp pop fsubs popf out sub mov cmc aas test std test mov jecxz lcall scas inc mov fpatan xlat or and fstpl jmp sbb jo cmp inc cltd mov xchg enter lock cld sub pop enter movsb aam jbe ffree ror jg (bad) mov mov push mov lock test int3 cmp dec sub rclb add out cltd and add sub (bad) dec and out jle xchg mov sub inc (bad) cmpsb aaa aas sarl dec stos mov lods fcmovnb and int sbb mov pop daa jecxz,pn insl adc xor xchg das lods inc mov sub mov mov shrb test jg jae mov enter push and dec cmpsb nop enter pushf je add out out push lcall xor insb (bad) sub xchg cmp add sbb fs sub mov rcr pushf fadd out xchg dec add fdivrl jp jbe (bad) ret out (bad) bound or dec ja or lahf in push clc xchg neg cmova mov add pop mov lds mov bound pop or cwtl cld sbb add mov enter inc push sub clc cmp (bad) pop fisttp ficompl add jmp shrl insl sbb enter es stos jl outsl call daa and aad rol mov mov aaa outsl xor not sbbl fidivl (bad) out xchg pusha test leave jno cmp ficoml fistl outsb popf lcall leave mov pop mov xchg sahf and sub js sbb movsl mov stc out cmpsl enter jae int es or jle mov dec aad shr and daa icebp cld icebp leave sub movl jns push pusha pop fs cld jns fmuls test out mov popl adc daa nop scas out pop pop fidivrl out cmpsb fisttpl cmpsb xchg push clc sbb xchg fsubr mov (bad) icebp into movsb cmp adc outsb mov push ljmp rcrb pop rorb (bad) lods xor dec cmp test xlat sub aaa es xchg ljmp ja add enter dec stos stc push clc or sbb iret push push nop imulb repz jmp je scas lret addr16 mov in adc insl pushf (bad) dec push loope test stc (bad) js mov mov inc mov rcr push addr16 and pop push enter test fnstcw out loop xor or sti xor inc sbb inc inc sbb adc scas mov gs (bad) incb pop daa or inc and lods push les scas aad pushf inc xchg add fs out rorb fsubl adc jbe xchg push mov hlt lcall loop lods cld clc sahf nop insb fbstp aam lahf xor stos xor inc out dec clc sub lret xor sub xor loope jne jns add (bad) loope lret and ljmp sub repz nop gs ds push xor fdivs xchg mov repnz out mov inc push sub jo fimul sub push mov sub mov das jle popa jp cmpsb jbe xchg je and fcoml ret sbb stos cmp push or shrl sbb rcr jo adc iret (bad) call push popl sbb jmp pop aad fs loop and sub push dec mov lea push jo sahf pop es int inc sbb (bad) js cmp (bad) jno (bad) xlat xchg fldl jo fcoms pop mov fcmovnb xor jmp inc ljmp gs (bad) add or add mov mov adc adc int inc mov (bad) or (bad) popa jecxz dec mov add fsubs add pop pop jbe inc sub or jmp xor add cmp push gs sbb add out rcrb leave (bad) (bad) xchg bound scas movsb nop add subl in cmp adc add or dec lock sub imul lds int out fimull jge inc dec enter js test aaa inc jecxz push (bad) mov iret in (bad) dec sub fistp in in adc hlt push imul (bad) cmp jge shlb neg push mov cltd es jmp sub clc out in clc outsb and popl lcall mov xor popf or cmpsb mov stos cmp push add push scas test cmp sbb inc xor imul test add insl pop (bad) test mov (bad) dec iret mov les mov (bad) jg loop (bad) jb mov mov sbbl jns shlb jns or pop xchg nop test and aam inc pop mov push sbb push cwtl inc lods mov jo fimul (bad) cli mov inc or sbb jg sub jle lcall add outsl lcall repz add outsl dec sbb and push bound sub sub sbb movsl int pusha sbb push adc cli dec sarb fwait mov fwait pusha lds adc pop or incb inc sti dec push fisubl in outsl mov pop aaa loope sbb stos jb dec push mov insb cwtl cwtl mov (bad) ljmp mov pushf or pop int3 call imul push (bad) lcall or inc jbe fucompp dec sbb inc cld nop aam or add push dec outsb mov mov mulb imul sbb pop ss jno,pn lds mov add movsl push or adc or pop out inc std popf fstps adcl addr16 shrl inc push cmp out mov in and pop rcrb bound pop pop rorl fmull lcall jbe sub jno repnz aam imul sbb incl popa subb fadds ja fldcw hlt fisubl lahf push mov adc mov push xchg and test jp adc rcrl mul push es dec xlat xlat mov mov mov adc ret or mov mov dec hlt cmp xchg jp xor mov jns xor lods dec rolb jle cmpsl dec cmp push xlat scas pop cmp mov sub lret scas test fildl out inc test in jb sub gs lock xchg or inc cwtl mov inc fnsave xchg out push push mov sub mov test add push mov fistpll pusha loop or mov pop add inc cli fldt sub lahf mov mov lret iret imul cmpsb push lds test jl pop mov jns pop cmp push loopne mov sbb mov jb mov dec insl mov inc imul add leave ss mov push test in add adc cld cmp dec cmp jns cwtl pop and sbb adc lret out sar insl xchg ljmp adc lahf pop add pop push push push (bad) cmp xchg pop fwait repnz mov pop pop mov dec lret mov push rorl cmc and daa cltd cmpl ret insb test movsb cwtl sbb jmp out cltd outsl pop (bad) dec mov stos outsb pushf decb dec inc dec mov lods sbb dec pop sarb cmc jb outsb in je and cmp int sub loope repnz mov leave mov rcl aam or and sub sbb mov loope cmp ret js (bad) leave pop das in push (bad) cltd xlat pop sbb insl push aam (bad) mov (bad) mov xor push mov push fwait scas inc cmp (bad) cmp test inc insl fcoml mov (bad) mov aas cmp adc ljmp xchg dec mov push add fs adc scas (bad) mov addr16 lock jge cmp (bad) mov push fucomp mov pushw pop jle sti and pop pusha daa stc mov shll loope inc mov test mov pop add mov xchg std scas sbb or in inc mov sub push sub mov mov add test fdivp xor lcall fs iret xchg cmp popa insb jb xor cwtl push or adc xlat mov (bad) jp loop leave cmp pop mov movsb aaa loop addr16 adc (bad) fsubrp sbb pop psubusw movsl or mov inc mov cmp mov gs xchg cmp int3 mov cltd jbe divl fcmovu or mov insl pop xor and mov ss lods sbb movsb and mov pop into popf movsb xlat (bad) push jne xchg or lret repz popf mov daa divl stos add cmp lcall jb (bad) push lret arpl out pop mov mov pop bound dec lods popf fstpl out lahf sbb jmp dec inc ljmp scas cli add mov sbbl xchg xor dec lret nop mov push lcall cwtl push jp sahf add mov pop mov push push sub jge and cli jno xchg inc jne out daa lret xlat out cld inc adc mov jns push push mov out je xchg test push adc and out lods lea mov out push push push ret mov insl es mov pop jl pop lods insl cmp push imul xchg adc jmp ss push ja cmp stc repnz add popa negl xchg push lret mov inc xchg fadds aam xor fdivs rcrb lock ds ss call or mov out or adc push add mov mov loop inc xchg test jp xchg mov lods and daa rol mov dec adcl int3 sbb loopne sbb dec push xchg mov push gs imul call cmpsl pop aaa mov int3 (bad) hlt sbb push pushf in xor inc mov out daa cmc or aam or aaa add fidiv or icebp ja inc dec fisub (bad) jb inc xchg test pop inc inc pop lcall sti jge (bad) mov xchg lea cmp out jge sbb dec pop sub mov push xchg data16 mov dec fisttpll pop jbe add inc cmp inc (bad) inc cli and pop mov or xchg scas (bad) subl fldcw dec jo mov pop xlat jg xor mov mov movb pop and pop jle scas sbb mov cmp negl test jnp add add les nop add add in insb sub xlat fwait xchg fsts addr16 movsb jnp cmpsl ss push test cmp jnp xchg jno xchg add pop pop adc (bad) lock push ret inc sub dec push push in fildl add mov je sub hlt push pusha sbb aaa leave and cmp sbb insl lea xor add (bad) (bad) roll jne insb lahf add pop and mov xchg mov out and out mov xchg (bad) cmp jno fldt xchg xor mov cmp pop push push aas cmpsb fisubl pop in xchg loopne mov pop inc cltd ret movsl adc cmpsb xchg imul sbb je push ror jne mov (bad) mov lea lds outsl dec inc outsl popf mov mov jg stos shrb mov mov fcmovnb test mov bound rcll adc enter call insb or fdivrs mov (bad) test nop cmp fnstcw test rolb lret iret ja sbb xchg push cmpsl aaa sbb sahf add jne jbe sub jno aas push dec aam add stos pushf fldenv icebp xlat push lahf mov inc jp jno unpckhps or movq sub out pop mov pop adc scas daa cmp mov add dec std sub (bad) lea ljmp and loop dec pop mov mov int3 mov es ret mov dec int3 cltd stos mov inc and lock dec js cmp xor jmp cmp jnp stos cmp cli or adc lock cmc pop outsb mov lahf in pop mov xorb fidivl lcall imul and (bad) cltd repz into cmpsl sub xchg fldcw test xor mov lret add and loop mov jecxz push sub sbb popa jb or cmp scas fdecstp jle movsb scas cmc cmp mov jne xor fidivrl daa insl sbb mov popa xchg (bad) push aas mov stc ja aam pop jl scas cmp in out mov and or repnz push icebp lock push sub pop pop cmp sub dec (bad) lret mov sbb xchg ljmp aas int xor movsl mov sbb or mov setp jp push les fwait lock shr je add jmp pop and out bnd popf pop sbb mov push mov pop (bad) mov fidiv push push push jno push js and mov jl cmc sub jle pop dec pop repz xchg in mov inc rcl cmp jo into push mov adc lret loopne or popf sbb cmp hlt sti jnp ss les ja (bad) xor mov push xor fdivp (bad) pushl (bad) dec into dec sub add adc ss add xor stos sub dec outsb xchg pop imul cli add (bad) negl dec lds lods sbb inc lods in jmp fisttpll xor test add sub test dec and inc sub frstor test dec jbe enter push sub xor arpl daa sub sbb fcoml jno leave adc jb pop popa stos cltd insl jb inc scas mov es mov pop mov ficomp inc rcrb xor (bad) (bad) out adc in (bad) sbb pop outsl lods fiaddl (bad) popf xor jne mov mov cmpsb pop inc out jns jns cmp inc pop mov sub out dec push inc loopne roll xchg lret cmpsl dec xchg or (bad) int jge rcr cmp pop fwait mov cmp daa cld test (bad) push imul jmp dec das mov ja sahf push dec jb xchg es mov (bad) ffreep ljmp cltd xchg enter jmp push mov clc popf push inc pusha fwait sub outsb adc popa (bad) mov or scas jl jne jg js bound insb fnstcw daa (bad) pop (bad) repz pop mov lock sahf push ss data16 sti test pop out dec stos (bad) xacquire jne push popa sbb (bad) movsb lret dec xchg cmp orb mov push ds incl repnz arpl rorl inc cmp pop test repnz in dec fxch mov (bad) sub stc jle je or or out lahf cmp (bad) jo les clc insl add fs mov movsl aaa push loopne sarb fsts addr16 xor popl mov std insl xlat outsl and into mov ja add addl (bad) sbb (bad) push aaa in movsl cmc add and repz xchg cwtl or push push rolb add call xchg test pop (bad) int jmp cmp jg into push add movsb jp jae stos sbb and mov (bad) mov (bad) enter jae jo test and outsb pop orb mov mov cmp inc ljmp lea ja mov sub jmp pop lds bound mov test or lahf or hlt (bad) outsl adc imul mov xorl imul imul ljmp pop lods arpl fs iret push xor jmp sbb stc (bad) mov fdivs xor mov movsl adcl or std jno add mov mov and call into add enter mov and gs inc xchg pop mov out cli xor xchg stos movsb dec movsl cmp fwait aad sbb adc cmpsb leave mov jns jmp adc mov pop test jl leave or in mov mov inc push add iret lcall call cmpsb call stos movsl xchg (bad) mov sub pop jecxz push add adc and gs add out mov add stc subl adc push adc inc test ljmp xor adc sar cmc adc push jp (bad) mov test add popf ja or cmp popf fnstenv adc loope sarl in stos jle js fwait mov fdivrp pushf xchg mov mov add addr16 mov and adc nop push aaa pop fwait pop arpl push sti xor dec popf jl lahf push mov dec sarl repnz push ret xchg push mov ljmp sub jns add shr andl adc test call mov jo jo and mov ds cmp dec mov test jns pop notl sub ljmp (bad) lret insl mov pop sbb data16 or test sbb and inc outsl mov into lcall mov push movsb movsb pop add lea sub push icebp loop mov dec mov add sti sbb in das in lods inc fimul aaa mov xchg dec call loope sarb add inc dec fiadd fdivr aas push pop mov mov sbb or mov mov pushf cmpsb mov lcall dec lods xchg pusha fsubl js xor fimul push sbb pop movsb jecxz loopne ss dec lret insb jmp jbe addr16 pop mov outsb subl and lock rorb roll xchg lods cwtl jg dec imull push rcrl (bad) xchg jle mov xor jmp lret cltd (bad) mov icebp mov popa or cs mov adc iret mov and int3 les push aad sti (bad) or pop mov dec mov mov jecxz ret js ds bound fistl sahf addr16 inc mov cmpsl mov mov lea repz lea iret outsb mov sbb (bad) mov cmpsl pop sbb bound js mov into mov xchg jae and jge xchg imul ds les mov add daa sub test test push sbb or jge cmpsl push nop pop test push jo jne mov mov adc and inc addr16 pop pop das rcl push lcall aad fcoms inc cli cmp addr16 lock xchg fwait inc mov mov in pushf arpl fidivrl loop leave mov in mov ds sti mov jno dec jns add jbe test cmp mov and cmp mov lock jg lds and fsubl jle fs lds xlat aad and jp (bad) cli lret jge lea dec add ja mov jne pop inc inc sbb inc loopne mov cs inc popf push jne jnp aad pop (bad) xchg pop aaa movl xor mov (bad) pop xor jns stos dec addr16 lcall aam aaa mov mov and lret into inc int3 in lahf mov rol arpl mov (bad) cmc jnp jg jg out out inc inc aaa movsb sbb xchg in test (bad) jns xchg mov sub in mov aad lcall shll test xchg shl in jae xor call scas bound in add mov sbb lods mov lock movsl adc xor push test mov out nop cli out push fcoms mov sahf mov or mov xchg in test mov cwtl fs shr jae subl int add lock loope out andl jecxz mov rolb (bad) mov adc test inc test mov aaa dec popf (bad) imulb jge mov test dec mov out popa ror mov (bad) repnz push add shr testb pop out push xchg xor push sub mov scas dec lods in (bad) imul shrb pop aaa shrb xor inc loopne (bad) in jecxz dec loopne add mov sbbl cmp and jp dec ja adc cmpsw xor push addr16 push dec pop jg or inc jge cltd fs pop sub mov push loop add das push jmp outsl mov inc (bad) lods or rorb inc and pop pop cli inc ror fsubs mov test mov call mov in into cld pop loope sahf (bad) pop in std rolb test inc dec pop xor inc imul add and ss fcomp sub or stos imul outsl cmp push mov jbe idivl push sahf jae sbb lods out cmp pop xchg pop and bound fsubl jp xchg adc loop movsl fildl jb xchg jo ja ret jge jno mov cmpsb out fs xor mov iret sbb (bad) out push pop sti pop repnz or mov or ja into inc jne jno sbb dec rcrb mov fxch ds pop mov cs mov dec loope aaa jo cmpsl adc or lret sti (bad) out loope push mov push icebp mov pop cmp jmp push out mov or push test pop pop or fmuls sbb and and jp scas cmp sti mov mov jl repnz daa or ret sbb push aas push je xor (bad) idivb test sbb jo fild or jne sub add mov das outsl mov imul sub (bad) (bad) lret mov push ss jns and int shr pop int3 stc popf (bad) mov sbb pop sub adc add mov sub mov xchg insl movsl xlat (bad) out jb movsb add aas fcompl mov sub add mov xor jecxz (bad) ja pop test and inc xlat mov adcb in sbb fidivr xor ret adc hlt pop add pop shlb push jbe jle out jo dec adc movsl negb cmp adc jae xor lods loope mov jae jl insl js lds and dec jle imul jmp xor mov xchg clc movsl push lea stos insl nop fisttpll rcrl add test jb rcll or cmpl pop mov (bad) mov mov sbb push or into mov scas mov mov lods mov xor jmp pop imul mov xchg adc pop int3 jmp and xor aam fmuls iret mov jne out adc test pop mov mov sbb jo loopne lea add xchg jae inc divb outsb mov inc mov dec dec rcrb out movsb das popa or cltd push cmp lock hlt add add mov test cmp sub test loopne mov gs cmpsb mov cmpsb ja repz jmp mov add je or in add jns or dec mov jle test sub jbe imul mov loope sbb dec xor out loope or ljmp mov jg loopne or add sub xor adc cmpsb imul inc push mov outsb adc dec inc aaa movsl stc test out out inc hlt mov lds loop arpl xchg gs ror jmp xor mov daa xor fdivs imul mov dec movsb cwtl xchg jge mov fldl sub test rcr mov add inc xorl sahf sbb movsl cmpsb ret into aaa cmp mov mov push push sub push (bad) push aas sub push imul lods mov imul in insb dec mov stc negl das mov loop inc (bad) jge xchg pop lods adc jecxz and and adc pop jge sbb dec nop jmp inc stos pop sahf ds lcall xlat add sbb test out fidivr push add sub adc aad xor push pmulhw mov push jo pop fimul mov or dec push dec mov mov fs push outsb and in outsb dec mov aad xor shrl clc ja stos loope xor lea mov push jne (bad) add sbb sbb clc cmp or push in mov insb (bad) mov push xchg arpl addr16 popa xchg pop fnstsw rorl adc arpl js and ret rcll popf inc push and adc pop jno arpl cmp push inc aaa jg data16 jae sarb add cmc inc push in leave aas outsb xor mov adc or frstor scas sub dec mov movsl push loop xchg mov xor mov sub outsb repz test mov mov mov push imul dec in in xor das push sbb out adc xchg sbb add sbb pop cmc inc divl dec outsb rcrb stos out test fimull call push outsb xor mov inc push in rcrl cltd mov jle bndldx jmp fs xor xchg jbe jno jo clc into insl imul xchg out cltd cli jb,pt fld sub call xchg push js jl mov ficompl cmp das ret xorl (bad) pop aam cli and je fcmovbe sbb stos loopne icebp sub rcrl aaa popa shl mov out daa sbb out xchg lock or xchg pop jl mov jbe sub aas mov push xchg sub stos mov sbb and lret push std xchg pop idivb (bad) fadd mov in addr16 adc dec movsb and jle out inc (bad) (bad) lds cld jno dec aad sbb adc popa insl adc sub out sar mov sahf loopne xor xchg mov cltd daa lea jns jmp icebp sbb mov or jp outsl (bad) out add aas jae sahf or xchg int3 gs lea lds xchg loopne jp outsb or dec cmp xchg loop dec rorl in push inc add dec fmul fldenv xchg or jbe mov lods xor sbb push xchg push dec outsl stos fimull mov daa push (bad) pop sbb ss rorl pop insb jmp (bad) mov test addb mov dec sub ds sahf push lods xchg pushf outsl or xchg push dec ficompl aas mov mov inc into (bad) xor push adc lds mov mov jp test stos repnz add cli out fstps pop mov jb adc mov sarb jmp outsb ljmp out outsl sub pop dec xlat sti ficompl stos (bad) xchg pop mov mov jle adcb mov mov lea stos in jg (bad) int3 add sti cli icebp pushf loope out lods and mov jbe in ret xchg inc out pusha mov mov xchg pop (bad) lcall sub or add mov xchg pop push cmpsl inc test repz and sub (bad) xor mov aad adc pop add xchg repz int ret sbb lahf (bad) stc pop push adc fildll and push (bad) int gs ss mov stos pushf push dec mov out mov mov in pop rcr mov xchg lahf mov out jp shlb pop lea imulb add addb test dec inc mov lahf pop cmc outsl mov adc inc int xchg in and pop mov inc add aam fildll or sti jno pop inc pop movl into aam fcomps jmp jns stos fistl pop pop imul imul out rolb fistpll mov mov cs mov out cmp cmp add or push inc push jns mov dec push mov adc fsts and push loopne popf cmpsb test or stos fstp pushf test in ja sti pop scas test divl jge jnp inc adc sub mov lcall test mov cmp pop lcall movsl insl rclb in lahf pusha mov pop sub xchg or sbb mov add cld mov mov xor (bad) mov xor test sti jmp and push cmp lds jge push leave cli inc data16 outsl mov inc pushf mov and adc ljmp stos sbb sbb adc out out mov and sub inc jge sahf pop enter pop and (bad) xchg sti dec push sub ljmp outsb mov aad repnz jae movsb inc push cld sbb mov insl push pop in mov mov sub sbb insb lcall add inc stos aad aaa fdivl addr16 ja pop push int3 cmp lods sub fdivrp adc andl mov pop sub scas fcmove mov out xor cmpsb arpl xchg daa into push cmpsl pop popf popa adcb push icebp sub mov pop js mov stos inc sbb adc mov mov aad fs inc movsb push repnz cmp das pop lods sub dec pop test mov push (bad) mov and xor loop jecxz inc xor xchg cmp (bad) mov dec mov test ja fstpt lret lahf jge mov popw jnp dec lods outsl push cwtl or loop sub jl cltd pop jle outsb and xor cmpsl inc push icebp jo leave sbb adc scas inc iret pop push or daa out sbb mov nop in inc ja mov push add mov or fcomps mov and and xlat fsubs add add jp movsb lea mov fwait jge sbb sti jns mov lahf sahf mov sub mov xor xor enter leave lds xor xchg push test sub sub push aas fdivl lahf sub in outsb (bad) es add mov xor push fmul pop xor xchg push mov jecxz or (bad) sbb popa mov adc cmpsb stos out (bad) mov arpl cmpsb mov push push mov negb sbb test mov repnz mov adc sub jp aaa into ljmp repz (bad) inc or (bad) jo xchg mov gs (bad) push push cs in mov mov ljmp outsb pushf cs mov mov imul mov arpl xlat mov aas neg dec adc std sub cltd mov jnp out imul rcrb lock pop and sbb bnd pop ret popa mov das hlt outsl shrb out int bound stos cmp cld lods lods insb sub not in xchg mov or pop mov jl inc daa rcr cmp mov mov xor div insb adc cmp xchg loopne mov repnz imul inc dec mov scas fs mov inc jl icebp xchg dec call cmpsb into les loopne in int3 lea sbb add mov imulb mov jg test mov xchg lret pop pop sti decl scas out add bound inc mov sub outsl jne lods imul mov js mov roll push js pop mov stos in ret pop jle js pop fistpl adc mov xor insl lret nop fbstp pop and push mov jmp mov add sahf cld xchg adc les imul mov out addl loopne xor push mov test jmp or pop sub mov mov cld mov cmp mov stos iret fmull sbb sbb mov sub pop xchg sbb aaa sarb ror fimull ret pop (bad) xor pop push pop mov aam push int3 mov adc mov and and inc repnz test lds imul mov sub inc in imul mov leave add cmpl and fidivr adc mov repz movsb aaa inc (bad) insb in roll pop lret cmp inc mov mov xchg sub jo movsb add cmp loope or adc and mov inc mov ret outsl mov call int3 mov leave xchg es mov lds ffreep test je js,pt dec dec lret daa loopne dec sbb repz cld xchg push inc cmp pop sbb cmc push push xor xchg mov int3 mov pushf movsb out and adc mov jp sub pushf out sub inc movsl outsl xchg pop movl test sub push stc mov xor xor add pusha mov call ret arpl pop (bad) mov and or psubq les out xor push mov loope or stc gs mov xchg in jb push xor in call dec and jmp test ja mov sahf cmp out jae sub xor popa mov rcpps cmp mov fnstcw out daa out or cmpsb adc sub mov scas cmp addr16 add cmp cmp lock clc jo pop aad mov push clc mov jge sarb dec sbb jb out push add cmp je sub movsb mov clc imul (bad) int3 mov pusha sub insl pop fimull jnp mov dec push push cmp xor fwait cs into in push mov nop pop je jno out add loopne out pop push or test mov or enter data16 leave (bad) mov inc mov test insl mov inc int popa les add mov inc or adc gs (bad) adc test xor mov push rorb cmpsl adc mov adc and jmp fbstp or xor sahf insb hlt mov imul fisub pop outsl es mov inc adc movsb dec (bad) stc sbb call add jg jb cmp stc divb ljmp mov out pusha and (bad) xor mov ret test out (bad) int3 fldl pop xchg xchg inc mov inc add xor stc aas push aam sub adc push lea and inc adc pushf rorl jmp push jge stos pushf hlt das dec jge jmp jmp notl mov jnp daa mov ror (bad) sub mov ja and lret gs mov rorl test rclb lret adc xlat and xlat xchg and mov lret mov xchg stc or pop aam pop mov sub xor inc je iret add aad sbbb mov cmp push jp cmpsl jle int ret test xlat push inc mov inc data16 das pminsw dec (bad) je das mov leave jo lods sbb push mov jns ljmp out sbb push hlt mov leave mov (bad) pop mov jg das out lods mov pop in add lahf fnstenv jl stos outsl mov mov adc je leave int3 adc jmp mov and mov mov lods mov jle fsubrl jp inc mov sbbl sbb fwait nop xchg movsl arpl test jle sbb daa repnz or test xchg test push std loop (bad) xchg xchg pop adc mov add js pop jbe in (bad) dec cmc and pushf push ror out xchg xchg in mov das jmp std jecxz mov pop add (bad) (bad) add ja hlt pushf aas mov mov cwtl adc out sub out test gs mov add out sub cs jmp insb pusha ficompl xor inc cwtl popf pop sahf push stc xlat push sub push inc jge popf mov das or xor lcall xchg jle jbe xchg add mov and (bad) mull loop lahf test sbb xor mov push pop add and dec popa add mov mov dec imul sbb pop cwtl push sbb into gs test lods xor add sub xchg aad loope stos xchg inc inc repnz jge push mov dec push pop sarb mov jp push call gs hlt or bound jnp test or or mov ss clc sbb jb jmp xor jne inc into push shrl add adc inc arpl push gs adcl or push test aam outsb jecxz mov xlat cmpsl (bad) xchg push (bad) ds jne dec repnz aam mov push (bad) inc int3 sti and ja roll xor lret loope icebp fcompl sub outsb add repnz clc stos jnp sbb out push cmp aad mov dec pop push cmp cli movsb push movsl adc xchg stos mov pop test inc and lcall or mov js inc ret (bad) ja loop xchg dec adc arpl stos cmp aam sub jmp scas xor jmp adc repnz imul jge out xor push into stc fldt in sbb je cltd xchg imul cmp loopne sbb sub ds bound call xchg fsubs lods push dec (bad) fsubrs fwait jmp pusha mov cmp add jmp popl sub sub adc pop dec test aad mov (bad) pop gs cld repnz (bad) jae subl mov lret or cmp adc xchg daa bound and xchg mov pop xor fisttpll sahf push or xchg xchg movsb fildl and mov sbb sbb jge cmp inc xlat xchg into ret shr adc cld sub jle cmp push sub xchg sbbb xchg aas dec push std jae cmp sub imul das in cmp int3 xor cmp test fistp push xlat mov scas inc dec inc jge cld sahf mov sbb lds xchg out jae cmc push in mov sub cwtl dec enter stc jmp mov outsl insb xor mov add aas nop gs or mov std mov popf mov mov inc inc lret iret dec fcmove ret sbb arpl gs inc arpl pop ret mov jb xchg js pushf cmc pop inc mov cli ja push sub int test ss pop mov out fs dec push arpl test jmp and push inc cli enter xchg jle inc xchg xor (bad) mov pop roll scas in mov cli jns lahf cmp cld out xor lahf shlb cs adc outsl cmp fcoml or lock cmp pop sbb inc cmp in das pop movsl fsubrs mov jnp sahf push cmp pop sub sbb cmp cmp or in xor cmp inc cmp mov rolb movsb pop mull or lock cmpsb xor jg pop mov iret or lods jl iret cmp jge out clc (bad) or add xchg nop sub les lcall movsl cmp adc int pusha xchg icebp push mov nop mov cmpsb dec and mov (bad) test lcall stos das adc fistp sub mov mov mov fwait adc nop push in jne or jno ficom rorl arpl test and loop push or push cs sbb addr16 pop add mov xor pop pushf mov xor ljmp and adc push xor sbb and jb mov ret mov cmp push sub jl push push inc pop push das loop inc cmp adc mov adc cmp mov mov test pop mov fisub sub std adc jae jg popf pop js cltd cltd les stc jno cmp cld sbb test outsl and mov fildl inc mov jmp mov rcrl lret sub mov aad call fnop mov pop repnz out popf mov jo jp dec fidiv pop ds inc dec pop sti js adc insl mov imul pop jge cmpsb adc push mov adc sub jecxz andl loop pop dec popa in pop and rcrb xchg inc mov or (bad) (bad) out cld cmp or and jg data16 dec cltd push xchg mov dec stos jno xchg das adc sahf idivb aam mov mov mov xchg imulb adc sub inc loop and sbb (bad) aaa popa adc stos adc lods insb inc xchg jge jbe sbb movsl xchg push inc push vmovups scas or pusha out lahf xor sub pop stos and cwtl or push or dec pop jge mov out sbb push enter adc test fcom pop ficompl test scas ficompl cmp ljmp adc movsl loop or sub sarb xchg fdivs scas jmp xchg lock xorl dec push jne pop popa std xchg xchg popf cli sbb int3 sbb dec xor movsb stc enter stos adc mov xor jne call pop jmp push mov ficompl jge adc pop mov iret (bad) xacquire scas bound cmpsl xchg mov inc inc lds clc sti and cmp push sbb pop adc int3 outsl fisttpl lret push (bad) pop push aaa insb push sti xor ljmp cmpsb aam in fsubl push sub add or or mov push cmc pop addr16 xchg (bad) dec and xchg sub scas scas fwait adc pop xchg js dec adc stc mov sub sbb mov (bad) sbb insb ret jb xor mov pop jl pop xchg shr cmp ret xchg inc lods loopne insb dec jge sbb or push mov xor fcmovne cmpsl xor in and popa push inc mov mov icebp aas inc add add loop es pop and add cld sbb int adc jge roll adc (bad) dec stos shll inc pop push lods ljmp add (bad) xor sub pushf pop in sti (bad) lcall xchg fldl movsl pop mov cmp fs mov push repnz jg jae cwtl jg pop sbb and cmpsb addr16 add test dec in outsl lods clc pushw cmc or xor and in mov je xchg add (bad) arpl push push dec xor lock fldt jb add sub mov frstor imul jae xchg mov push mov nop mov mov xchg fisttp push aam aas inc pop jp (bad) sub pusha (bad) pop lds rcrl cmp sbb jno test adc lahf (bad) jnp jnp rorl xchg xchg sbb stc iret mov or push daa cmp dec icebp mov add test xlat rolb je mov lret adc test inc cmp push movsb (bad) aam test in dec enter jmp stos inc adc mov or mov int outsb lods sub (bad) jge push pop enter loop imulb xor mov and pop rcrl les mov enter les cmp or sub (bad) (bad) pop rorl sti and adc cmp rcrl sbb and pop test xchg mov jae aas lods movsl outsb xchg mov out jg cmp jmp push repz sbb add fnstenv fsts xchg divb iret add xchg dec scas in out xchg stos adc pop sbb (bad) leave ljmp outsl into or xchg adc aaa mov outsb cmp (bad) cltd jnp and sub cltd jg test scas fnop mov push xchg inc hlt cmp scas pushf or movsl push fimull inc adc (bad) fidivrl dec jecxz aas xchg xchg andl cmp dec jge sub ss mov imul daa pop imul pop and inc mov cli mov sub int dec das in mov mov pop repnz test in out sahf fwait popl stc mov (bad) dec loop test dec addr16 and (bad) mov mov cs pop ficompl pusha test push jg add stos mov sarb sub inc cmp pop jae loope mov sub (bad) cld scas icebp mov mov fcoms jno or das push or pop ja pop hlt sub adc cld jle lahf xchg cltd sti or mov xor inc arpl lock xor inc out in add fxam ljmp adc and adc sbb ficoml and adc stos mov pop xchg fwait sub aad les cmp mov scas inc sbb popa jnp pop dec sub mov mov push test nop jge call ret data16 dec cmpl dec js leave jmp xchg iret sub ljmp ret ret jo cs inc sarb addr16 jno arpl adc cmp mov sarb enter or sbb lret in sub or mov pop ffree insb adc add or xor fildll fcoml fwait mov ret popa jge push adc bound adc lcall aam and lahf negb sub push notb lock lods or std adc test pop xor cs sti shrb add loopne cmp xchg mov lret repz push les arpl cmp xor xchg xchg cli or jnp fstl fwait int sbb or push rcrb das mov insb pop sahf inc aad rorl jmp pop cmp jecxz out push outsl xor xor sahf mov insl outsl cmp pop cmp inc (bad) rorb mov pop in dec scas cmp ja imul scas lret data16 jecxz pop push fdiv inc xor lret (bad) xor inc cmp cmp dec sbb or out ret scas je sahf jne nop jecxz insb aad cmp add pop (bad) dec icebp adc push mov sub adc push incb popa bound xchg ffreep fwait pop cld sbb cmpsb fs inc jmp int adc sbb cmp xor andl test repz pop mov or mov cmp sbb out mov je mov sub fsubrs or mov lret xor inc clc adc or mov ljmp jecxz enter scas repz jb xchg sub loope cs sbb shll mov pop inc xor push lock dec xor xor call pop add aam cmp add sti sub add lea in xor add jb inc pop in lcall adc push xor inc jne adc pop push js iret sub loope fwait xchg xchg jecxz rcrb add xchg lds lea or in xchg push dec dec add adc mov cmp lock rclb cmp mov int3 jle mov jge adc xchg push test add sbb push dec cmp add inc roll jmp mov adc jno (bad) mov cmc push sbb nop cmp jnp cs pop sarl cltd adcl lea sub sub xlat pop pop mov mov xlat lret add lahf lret cld pop add adc inc xchg sti lahf jae (bad) push cmp insb lds stos or cs in mov push cs mov fimull pop xchg push das inc in in out (bad) stos lret das jbe aad xor xchg mov jne pop fmul jp and les push sub sarl xchg mov loope sub jbe stos xor cli xchg and (bad) aam mov or outsl mov repnz add lea stos jge popa outsl adc add xchg (bad) push cmp xor dec pop (bad) sub hlt and and add cltd inc stos sbb outsb sahf stc movsl jbe sbb data16 cs push pop std ss dec lock cmp mov mov imul adc push inc sub xlat lahf loop scas xchg push bound sbb and mov and mov addl ret jns add mov out cmc loope sar sarb jl push add ret cmp and sub notb test aam push xchg dec mov cmp movsl mov push sbb xchg push push mov mov aaa jbe fidivl adc push add adc fidiv test jg pushf iret (bad) repnz mov pop rcrb jge push and and decb orl (bad) jo insl sbb xchg out pop mov push fistl push inc and pop bound std lods icebp push subl dec lea aas xchg mov mov or or cmp jb jne pop sub fs inc push adc icebp push and adc call popa or sti mov cltd or dec mov ja or push ds or out in or add mov and xor pop pop lahf mulb and call and jno es ja,pt mov or dec sub and hlt int dec sub or mov mov mov add (bad) stc and cmp (bad) pop add (bad) es or xchg cmpb push hlt scas dec fldcw push mov push cmpsl xlat pusha lea xchg jns loop mov stos ficompl push popf xor inc or push sbb mov (bad) das in sbb mov sub shrb push (bad) mov cmp sbbb push out fisubrl das add dec mov mov sbb imul aam jae bound iret push mov fdivs pop cs mov mov cmp iret ret imul subb pop lods adc pcmpgtb outsb lret dec adc dec (bad) bound stos adc (bad) push mov dec xor add (bad) (bad) aaa out fwait popa (bad) int3 (bad) cmp mov movsb jo jbe iret dec inc xor std fwait ljmp (bad) mov mov inc cmp dec xlat ss pop dec push lcall stc jle mov mov in adc push cmp pop push and clc cmc ficomp icebp mov mov xor sahf jle adc ja jne sarl aam push movl and pushf sbb scas out out ret flds test cmp add and push add icebp (bad) xchg (bad) jnp push sbb dec cmpsb call dec call cwtl mov mov loope stos cmp daa xor ja aad mov push pop fwait lret mov mov xchg out dec rcr ficomp in shll ret xor (bad) sub mov push mov push call dec mov sbb jle xchg bound jnp mov fstpl inc push sub ja inc jae jb or cmpsl popa pop mov mov cld and sbb loop fstps loop jnp inc mov dec nop loopne xchg into addr16 faddl and call ja mov fs test xchg and movsl xor cmp sbb pop push xor jno mov imul fdivrl or dec sub lods (bad) lret mov dec dec daa inc incb out mov mov pop pcmpgtb test mov lock cmp xchg and sahf scas mov rcrl int3 mov push mov cmp adc xchg movsl lahf std cltd mov gs sbb cmp int3 insb repz out mov dec add imul cli loop and (bad) mov popa xchg push inc insb pop sub fwait loop es jmp inc jg cmp js sbb js loope scas push iret stos notb push mov (bad) xchg js or xchg cmp aas fnsave pop jecxz aad outsb dec mov push lock mov push and dec loopne add stos or inc adc aaa ss lods xor mov jno add outsl push cltd (bad) adc pop cltd inc cwtl jae sbb fcoms xchg xchg js pop jge add jge insl cmp mov test push xlat xchg lods jecxz and ficompl xor cltd out shrb mov js rolb fisubrl sub jg mov outsb imul ret lahf pop mov push xchg adc mov push rol hlt xor inc out cmpb add sbb adc call sbb pop (bad) dec mov imulb (bad) nop sub mov repz pusha je (bad) (bad) outsl or and cltd in inc jo lock ss fcmovb ret dec lds jl jge fsts out lods cmp repnz and mov mov mov bnd scas or push dec les imulb xor jp ds inc add out mov aam mov xor jl lahf call leave xchg call repz lcall dec addr16 ss repz mov mov ret cmp unpcklps xchg iret jb mov xor xor cmc roll daa sbb ja or scas or sarb pop ret cmp pop adc or jl inc popl in fs push or mov (bad) out cld xor cmp fistpll cmp lods cmc xchg imul add in xchg add push mov jbe arpl and lods loope xor rcrl nop push cmp and push push (bad) xchg and in jp and cmp std mov sub in hlt lahf lods scas mov add (bad) arpl cwtl push dec inc aad hlt arpl add inc xchg cmp mov fidivr frstor xchg (bad) lret daa adc jge mov xor cmpsb outsl inc or or lock and mov clc pop mov test mov adc imul or arpl cmpl (bad) jmp sbb xor faddl int xor pop xchg out adc mov loopne adc pop ja aaa xor bound out push push pusha dec push mov xorl jl mov ret dec mov xchg hlt sub sbb adc push lds inc adc jmp xorl add mov mov mov mov xor pop in xor rcrb cltd ror cwtl push fucomi pop rorb inc pop lds test mov ss dec lret cmp out xchg mov andl aas (bad) (bad) fistl lret clc push (bad) xchg pop mov lock (bad) cld in sub mov sbb pop ljmp insb add mov mov mov scas jg mov lcall test mov cmp jno sub mov jb fisubrl shl je fmuls cmp mov mov in bound fnop mov fisttpl push inc pop adcl sub insl mov std mov movw sbb xchg repz and adc (bad) xor add jnp mov loopne sbb mov mov jle add test lods mov xor out dec mov mov push xchg and sbb (bad) repnz das (bad) mov fbstp cli add fiaddl sbb xchg int jecxz cmpsl rep (bad) cmc dec leave leave cmc std out inc push mov aad lret sub lds cmp xchg pop fisttpl (bad) add shr in add ss or bound add xorl sbb pop mov insl stos ret adc mov inc lret adc aad cmp cmp cmc cld scas push xchg add jbe sbb mov (bad) sbb imul lea cmp pop negl sub inc xchg ds dec out pop outsl cmpsb lods and add jnp pop xchg xor lret inc mov push jae push push and sbb jmp dec ja push inc and mov and stos and inc and jno pop push shll mov xor push jae testb inc lods int3 pop outsb jp cs (bad) mov addl mov push or push push fildl cmpsl dec (bad) insl (bad) mov ljmp imul push sbb dec inc jl push xor mov rorb leave cld jge mov insl xor inc pop adcl stos in mov scas sti lods (bad) xor stc ffree out aaa inc mov push (bad) je test adc std loopne fcoms out call pop push xchg js push xorb inc call lea xchg inc adc xchg jne sub data16 repz mov data16 js mov inc xchg add mov cmp adc lock std ds movsl lods mov pop mov cmp test sahf xor cmp mov cwtl (bad) stos ds mov add repz sub sbb push shrb dec push call jmp cmp and je mov pop ret adc mov mov cltd pop test js movsl test and jnp jg push adc inc and and pushf das (bad) jmp push lea scas into cmp push fisttpl xchg lds inc add pop xor (bad) insb xchg mov push test cmpsl movsb (bad) mov sub pop inc (bad) (bad) loopne in movsb sbb inc xchg mov fs ret sub dec lock and lcall (bad) repnz in pop jg push lcall mov mov inc jb ret or adc fbld nop scas addr16 inc push jb mull movsl in pop movsb fnstcw outsl jmp mov fildl push push or mov push add xor push cmp sbb push dec out movsl push out xchg das or cmp fwait mov mov outsl xor mov xchg add inc mov ja adc (bad) mov popa test xchg inc mov adc rorl cmp loop loopne adc push add add add in add xor mov test pop or ret push jg xchg lds ds sub mov out pop sub shll notl mov mov imul pop daa or mov in ss hlt int3 or xor mov out insb imul aad fstl stc xor jb push bound mov push lret lahf cmp xchg mov push test sub insb inc inc fcmovb clc in fdivr cmc lcall and mov xor dec cltd xor dec ficomp inc mov lcall lahf fwait jo lea daa fwait je xorb add mov (bad) cmp push pop add popa (bad) idivb or frstor cwtl inc inc fildll adc and mov mov mov sub inc arpl cwtl insl inc push cmp out sbb lods jo loopne sbb adc pushf popf iret xlat loop pop xchg push cltd cmp out cmp and mov hlt xchg push or mov cmp (bad) ret push and inc out add push sbb sbb sbb fnclex nop mov mov fidivr and ja sbb jg cld and inc daa cmpsl fisubr pop out maskmovq imull jle das adc and and or inc leave lock adc sti mov mov mov lret hlt into (bad) adc (bad) enter mov leave inc dec inc jecxz jnp adc push insl pop inc hlt cmp or imul pop or xchg pop jnp push adc pop cmpl fisub out sar push cmp (bad) mov icebp push inc mov push push sbb mov inc in scas push pop mov jnp cmp jle (bad) xor adc ret into mov jmp add cmp push and test xor mov in pop sahf cltd ljmp jbe inc shr mov fldt or adc stc push frstor in xor sarl jmp xchg test dec loopne rorl or xor xchg xor in sub xor fmull les inc mov jmp xor mov daa jo xor pop insb sbb (bad) aam jle loope cmp ljmp lods pusha js sub ficom xlat test cmp aas outsl mov jo and mov ja fucom dec add push mov mov call cltd out jg inc push bound xchg sub push push sbb movsl or cmpl add push xchg sbb cmpsl insl push add je arpl cmpsb push jno dec jecxz inc and mov or jno call pushf loope and inc cmpsb ds outsb mov mov iret push xchg sbb push pop pop inc ja jl mov lcall xchg cld adc add (bad) (bad) icebp (bad) and das sbb mov popa xchg sbb pusha stos mov sarl scas xor adc xchg cld jnp mov mov aam xor sahf (bad) push push jp rcrl adc dec xchg shlb add and mull int xchg cmp popa jae daa pop cmp mov and cmpsb ds pop xchg in jb ret sub aas xchg popa jbe cli add or pop mov adc mov mov pop icebp (bad) mov push inc test leave jl xor xchg mov cmp mov pop mov out and adc mov stos xchg sbb ja orb in adc fwait mov test hlt pushf pop add call add pop jbe (bad) test fstp insl test or (bad) rep dec stos sbb or aas iret cmp arpl in xchg mov imul xlat cmpsb loope push jae or mov mov cmc inc pop out pushf ja sahf xor rcll xchg add jns lea jbe pop or test out popa daa add jne and dec pop mov cmp test test mov push subl mov and inc rcl mov popf and movsl dec mov pusha and sub inc add cltd cmp mov repz adc xor pusha pop mov mov push mov decb ljmp jp daa jnp iret lret pop mov inc push mov sbb mov and cmc popf lret fdivrl js dec hlt pop (bad) (bad) cmc add stos xchg loopne sbb mov into loop pop mov jmp adc sbb lds mov mov ficompl push ret in mov addr16 sti mov xchg adc lods add push gs jo sub dec or and call adc cmp sub mov fstpt lahf push dec std inc push add out mov jb push sub sbb enter pop push pop je jp mov das rcrb dec adc inc bound sbb imul push pop mov xchg subl rcl shrl inc inc int3 inc jle pop push scas les sbb fldl clc push test xchg push mov es icebp xchg adc (bad) daa sbbl xchg push mov repz add pop clc paddusw or out fwait jp sbb and loop data16 push dec mov mov loope sbb push insb in push add mov sbb loope xor or add (bad) test push insb inc loopne cmpsb xchg lret push push rep icebp (bad) icebp ljmp inc ret in fs aad clc es test mov outsl aas cmc stc imul testb and out shlb push mov pop lret xor in push inc rcrl fbstp inc xchg insb dec (bad) jle leave fidiv rcr push pop push mov adc push push cmp test push fldl stc pop fisubrl out fs inc and sti push sti adc sub cli roll cmc xchg movsb add jno outsl mov jb insl ret popf mov or rorb stos cmp movsb cmp xor (bad) repz out mov jmp pop inc push in add icebp push insl fistp pop int fdivs insl out jl adc or das xlat jmp in ds xor mov adc inc arpl mov testb mov sub mov out push mov adc call mov or movsb cmp mov dec xchg test bound xlat ss cltd inc movsb sbb addr16 mov mov fs mov pop test adc arpl xchg aad xlat dec in pop jnp mov xor addr16 jns sar sub outsb jle cmp jl aam mov push pop sbb rcr sbbl jl adc mov out in dec mov aad clc rcr sbbb mov mov inc mov sub stc stos mov (bad) punpcklwd xchg and cmp popf jnp arpl pushf inc int3 pushf pop stos out cmp cli sub test sbb addr16 jb ret mov adc push testb dec mov dec mov in repz cmpsl dec cmpsb addl and cmc clc or andb ss addr16 pop inc icebp dec dec push pop and xlat mov sbb adc bnd dec or ja cld fs sbb pop in or sub sub and fsubr daa jno xchg je lret adc outsl fdivr out cmp lea pop xchg inc or mov cmp test xor mov mov pop push movsl ss fwait cltd adc out cltd cmp ror jo push ljmp dec cmpsb arpl xor aaa xlat push inc pop add add xchg cmp xchg dec mov fisubl jne lret lret xlat (bad) adc dec out xchg repnz cmp shlb xor jb call rclb lcall inc dec repnz sbb sub stos fs fs dec jo xor stc je or imul scas js mov imul in minps out or (bad) (bad) mov mov ja data16 xlat js push lods jecxz mov mov push adc xchg sbb inc fwait pop je imul clc out popf inc pop int aas call mov or in movsb mov and mov jle movsb xchg test push pop cltd insb push adc and (bad) pop fisubrl and mov cmp jg stos dec loopne mov pop mov inc xchg sbb popf and aas and lods sbb inc jmp lods push xor stos out in insb aad adc inc dec ds fs cmp push jno sbb aaa rolb mov icebp pop mov jns push rcl jns pop aad cmp fiadd adc inc insb enter cmp cmpsl clc cmp dec aaa fs xchg jns adc stos push push pushf push repnz inc or subl xor inc sti xchg mov loope sbb popf in cltd xorl movsl or into into pop sub dec out jb mov lds mov mov add push jno mov in pop and arpl daa cld and in or jp push (bad) dec dec push js sbbl add mov jnp sub shll pop sbb (bad) orl adc lods inc (bad) jp jmp xchg movsb pop jge insb mov push and dec insl out out (bad) repz or dec in (bad) ja jne xor pushf xchg out jmp lock out aaa fnsave mov adc ja jmp cmp push xchg dec or mov xchg repnz xchg jnp add lahf xchg mov dec xor fimull fwait or cwtl neg fisttp ffree cmp inc pop add xchg mov xchg push pop mov test dec push jbe sub inc add jne push jl outsl fldenv addr16 jo xchg sti pop dec mov add lret jb out cmpl shrl insb dec xchg pop cmpsb dec dec jo mov sub add jb hlt add icebp lahf mov test xchg scas adc xor push pop mov and scas pop jp (bad) or push in push mov pushf (bad) fidiv pop add repz jo jp,pn aaa sbb or jo cltd cmp ja (bad) dec mov add xchg test rcl mov or stos das scas lcall jne or ljmp sti push insb jns mov push jg add jmp outsl lock push mov mov push mov cmc pushf out sarb (bad) gs sbb mov ret jo mov lock xor mov cwtl and cmp adc xor fsub js call aaa or popa push inc pop xorb lret (bad) inc pop or mov lahf jle pminsw shrl mov in enter jo cmp adc adcl cmpsl hlt cmp daa sub sub push clc repz in push loope fldcw es bound fnstenv cwtl jecxz add std xchg pop aam sub inc push (bad) xchg fsubrs sbb aas je push dec jbe js fstpt sti xlat mov sti ljmp ja adc aas adc mov adc je fidiv pop adc jns cld sub push pop push adc pop rcrl sbb mov jecxz push pushf (bad) ja je push dec adc fs pop ds loope cmp inc int3 negl and push jne cmp xchg mov das mov push ja jp jp inc and lock dec pushf lods jae ja imul adcl xchg xlat inc inc in lret (bad) sahf data16 mov icebp insl dec movsb inc push cltd fidivr mov mov dec cli cltd mov rcl pop movsl int xchg (bad) mov mov stc aam cmp pop adc mov repnz xor lahf or int3 xor stc test mov cld fnstsw sahf (bad) arpl jo ror or punpcklwd mov mov jb aam mov add adc dec dec daa test jnp shrl testb cmp mov iret ss shrl clc vshufps cltd das dec dec jle pop pop ret sub jns jecxz cmp cmp add mov or cmp sub pop ret ljmp sub fiadd jecxz sub push add test dec in dec imul stc mov gs scas fistp (bad) negl adc pop inc xor rolb cmpsl push add jb pop pop jmp jmp in mov add xlat mov ffreep pushl inc orb xchg pushf in lea cli cmp js stos cmp cmp or sti outsl fxch or push mov sub test out cmp ret adc loope sbbl push and adc mov jnp jle (bad) cmpsl inc arpl cltd add rorb push negb das insb and lcall ljmp pop mov mov std out sub jnp repz ret add push ds adc cmp (bad) xor pusha mov pop fldl push lds sub push mov int3 pushf mov mov aas (bad) adc repnz int3 lods outsb (bad) sbb push xchg (bad) insl sbb or sub subl push xchg iret mov sahf (bad) pop pop lea (bad) pop sbb pop popa arpl inc jns lds aam std pop insb mov int sub xchg ja add hlt cmp sub scas lret out push xor and jno dec repnz sub fcmovnu and cmpsb and cmc mov out and or loope scas cltd inc repnz dec ss flds push popf arpl in push in xlat sub loope add test fcompl add push push push and fstl pop rcrl inc insb cld mov ss fldl in adc jecxz pop xchg or je lahf ja test mov aas fwait xchg lahf daa xchg insl arpl mov aad mov mov xchg mov test add sub add fs in ja ret enter (bad) cmp pop xchg out addr16 shrb jno (bad) push push iret ljmp sbb mov xchg jg push mov jl xchg outsb inc movsb mov loope push mov outsb pop mov scas ja lds or xchg mov or repz (bad) sub pop mov aam mov aaa mov in insl and lret inc pop mov inc push (bad) xor leave xchg fistpll pop mov mov test addl dec nop movsb lret push cltd xchg lahf jo push push arpl stos xchg fdivrl out xor jns xlat xor out sub out iret popa pushf movsb jle mov aam jge rorb mov in pop (bad) (bad) push jmp imul stos repnz test pusha ret mov (bad) mov jo fwait lcall imul jl xor adc int out inc insl pop push (bad) out cmp out xor or push sub mov xchg pushf mov sahf out outsl jo dec jge cld mov inc mov pop fs cld enter in push dec movsl push xchg sub pop ja lahf push add xchg daa stos popa push inc sub loope (bad) mov sbb ja out popf pushf adc movsb pop sub repz push or inc dec int into push cmpxchg xorl mov stc cmp add or sarl ljmp lods mov mov (bad) enter sub sahf insb xor jle cmc mov dec stos jmp insb push mov mov push jmp flds cltd rcll dec in or jge add sti jne loop xchg add mov mov stos jo dec inc in jns cmp pusha (bad) sbb mov sarb jmp in mov mov jae (bad) xor dec mov popf mov and pop mov and clc lret push pusha pop xor inc or sbb faddp add jl (bad) jnp add mov or jg fstpl rcr jp arpl jmp adc hlt inc jp (bad) pop cmp andl sbb das jae andl decl push jne mov pop scas fisubrl or mov sti jecxz dec mov mov int3 cld sub mov xchg repnz cltd adc int3 cmpsl imul lcall aaa das push aaa or rcll cmc aad ficom loopne pop in jl and inc into dec cmpl push sub fwait in fucomp jnp test or xchg pop xchg xorps lock inc jle add push dec jle dec outsb in sub aam sbb cmp sbb pop sbb jae insl int in add jmp jns dec lahf xchg ror sub jne leave sar xchg subl mov sahf push enter sbb bound scas clc xor sub lcall stos jmp inc push imul mov xchg inc mov push icebp enter push pop sub insb (bad) leave dec addl mov loope cmpsl stos aam push and sbb mov add arpl insl adc cmp mov fs lcall or or std or ljmp cmpsb mov enter jmp lds xorb xlat lcall cli out in jo pop jl pop adc ret imul ret jg daa enter (bad) jp (bad) sbb mov lock or jbe push arpl das cli clc and cwtl and mov ljmp dec dec xchg rcr add jmp xlat dec stos sbb fwait cmc xor gs icebp cmpsl cmpsl add inc aaa dec packssdw (bad) stos and mov (bad) adc int3 fs in arpl sbb jg and lret pop outsb xchg mov xchg insb fbstp jae lods and jae loop xchg lds push lds or (bad) pop ficoml call push adc sahf dec std adc mov mov jecxz push inc dec (bad) hlt fwait jecxz movsl mov pop fnstcw add inc stos or mov inc jnp out jno fisubl push scas (bad) lock pop push xor cltd inc xlat fcompl test or push and les cmpsl jp aaa jne xchg ret xor das jg inc mov addr16 pushf push inc outsl (bad) jg and push xor pop or xor push inc cld pop mov sti in outsl nop cmp xchg sbb js lret das mov int3 cmp inc imull outsb cmpsl iret jb lock mov (bad) xchg ret cmpl jp inc ds dec push xlat xchg jne sbb mov push push stos inc lods (bad) cmc xchg adc push not add iret adcb imul mov mov pop mov and jne pushf subl cmc pop pusha rorl es outsl cmp and mov hlt mov lea dec mov (bad) cmc pop (bad) and or sub cmp inc mov bound punpckhbw outsb adc out dec dec mov xchg ss cmpsl adc adc dec jg pop jae inc hlt stc repnz ja push loopne mov or sub cmp xchg add daa add jbe mov push pop dec xchg cmp outsl inc mov inc cs sbb xor cmp fbld fwait pop (bad) das cwtl (bad) in xor ret in mov and push mov lds ljmp jp mov sbb jns jb outsl (bad) push jecxz hlt sbb mov push add (bad) repnz xchg fnstsw out sub movsb add fsubr dec nopl (bad) xchg adcl flds adc add test stos mov test fldenv cmp jo aas ret (bad) inc mov lahf or dec inc lods test push pusha repnz fucomi daa popf xor sbb inc repnz out ljmp fnstenv mov and push or aad xchg mov push lds mov mov sahf or inc cs ret xchg es out sbb and sub xchg jmp shll mov ds mov in loopne lock adc loope popa or push arpl pop dec sbb pop icebp (bad) fldcw sub jo popf cmpsb (bad) in adc iret dec test inc mov pop inc push lahf daa and cs xor ret jmp add xor or addr16 addr16 mov xchg or cmpsb test push ljmp adc push inc sub iret leave jo aas jp (bad) leave pop es insb or xor xchg pop inc addps mov jo adcl vaddsubps hlt js lods loop mov and (bad) push add mov mov lock jnp stos pop cld add cld dec jno fs xchg rcrl pop outsl lahf in movl cmp add mov adc daa push test aam cmc dec in divb (bad) cmc xchg pop popa mov jmp mov cli pop mov fwait mov jae cmp adc es cmp imul ss jns sbb incl adc jl lods xchg sbb fnstcw mov (bad) js mov sub sub jno fildll jge xor and dec ret popa and and (bad) aaa pop (bad) aad jle mov movb cs cmpsl xor ds mov cmp sbb enter mov mov cmp enter pushf leave rol cmp sub js leave xchg dec jne mov ret mov mov sbb adc xchg hlt ljmp bnd in pop aam lret fisubrl adc mov (bad) imul dec lea fstps push mov test mov in cmp std or pop mov fidivr enter jmp adc rorl and lret cmp pusha cmpsl pop pop pop mov cmc sub insb rol xlat mov sbb es repnz pop das pop cmp mov aad (bad) outsl lret dec xor inc pop xor jne scas dec fwait addr16 push adc fnsave push add int3 jnp mov inc sub pusha xchg addr16 push jnp (bad) fistpll outsl pop add mov dec lret cmp cmp mov (bad) add sub cltd sbb mov popa fsubrs jne in arpl or sub ds cld cld jp push sbb mov (bad) cmc or das and adc push ss mov repz icebp xchg mov mov xchg mov mov xor (bad) push add pop aas sub push mov inc push push xor push inc pop out push add in push lcall cmpsl mov jae jo or xchg lret mov adc sbb pop push shll das (bad) jl call movsl ret push lcall or and iret int out mov sub je,pt daa pop fadds out jl push out mov mov jecxz lods mov fimul iret movl (bad) ja int insl insl cld ficom mov inc es ret sbb jnp mov cmp mov add or icebp loop cmc inc and sbb (bad) sbb addr16 xor test (bad) stc das mov shrb aas hlt in or fsubl rorl xlat popa pop call or mov movsl xchg pushf sub mov shrb dec out mov rolb (bad) cs andb dec jb call xchg dec (bad) in xchg pusha or adc push jno dec sbb (bad) out mov loopne xlat or in into jbe mov cli mov jnp dec cmpsb push inc xchg add cmp fbld test pop mov and pop ljmp sbb in mov mov (bad) xchg and fwait inc cld dec and jae fisttpll xchg jne mov mov jecxz fwait or in push xchg and cmp adc sbb rclb pop mov mov dec cmc mov inc daa lock cmp and pop rol ret stos insb mov pop shr (bad) sub inc fldenv rorb out lds jge xchg shlb fisttpl enter ja clc daa je insl movsl ja push std mov xlat movsb inc in (bad) std mov call ds (bad) mov lock dec push xchg cmpb cmp ljmp and mov nop test fmuls stc cmp lock ret and mov sbb jb mov sarb push sbb or adc mov pop pop add push dec adc clc iret loopne lret repnz xor adc jp or inc xor cmp mov xchg jl (bad) rcrb pushf sar mov xchg (bad) mov sub ret aaa and sahf or call xchg mov jb push (bad) (bad) mov and add popa cmc (bad) repz inc fwait dec int3 push mov jp xor into fistpll xchg nop mov dec scas cmp fidivrl sub dec sub jp imul push mov call (bad) mov or (bad) fsubrs or int cmp pop out cmp aam imul inc jge and xor insl insb mov les fimul jl clc call xchg mov and aaa js adc add jae cmpsl pushf xchg and iret scas loopne (bad) repnz jge mov out inc pop movsl leave pop pop popa out (bad) mov fcompl push or mov push sbb mov popf cmp or mov xchg and sbb cmp jp rclb iret or xchg rcrl sbb xor sbb mov loope xor pop pop sbb mov jmp push mov push mov dec inc dec in test pop or cmpsb inc imul stc pop mov push stos jnp xchg notl fucomi fldenv xor (bad) lahf idivb insl addr16 sbb jmp pop add out inc inc das aad sbbl in jne test ret (bad) scas jns cmp mov xchg cli enter mov mov movl test (bad) arpl mov xchg dec mov testl loope fisttpl mov repnz imul roll ret je lcall add and jae fdivrl xor cmpl or sub test mov stos push sbb add lds adc out dec repnz pop xchg mov into jmp icebp dec lahf imul jg adc jp icebp inc je mov cmpsb add dec sub xor ljmp mov mov mov inc jns push adc pop lea jl imul lods orl adc sbb pop in daa adc incl adc pop xchg fcomps in adc es dec mov arpl loope inc test pop xchg pusha pop lahf push (bad) mov cwtl jp dec or fiadd mov dec sub andl xchg stos ja mov arpl fbld xchg mov (bad) xor pop sub or dec xor js repz and add loop and loopne pop pop daa adc fnop lahf aaa cmc clc test sbb push pop xor decl fs adc hlt dec test xor xor adc (bad) adc mov sahf pop movd gs (bad) (bad) popa cmp stos enter rorl outsb xchg div mov mov adc sbb jno sub dec cwtl xchg popa mov jne cmc pop pushf sub cld lods inc cld test push aam push jb stc arpl rolw in or jge dec and cmp or mov push sti sarb mov int out arpl das mov dec xor in push sbb lds mov mov mov sub lahf ret les aas push xor xchg push cmc or push add fs or cmp xlat mov inc repnz (bad) mov adc sub (bad) mov test imul stos mov fs je inc xchg xor or ja xchg add repz lods (bad) je aad sbb in xchg ljmp into mov cmc sub (bad) jne pop ret adc jle jge test arpl pop pop inc fstps xor cwtl xlat nop and stc das loope jg jb push ss cmp addr16 lret shr or xchg ret sahf (bad) (bad) add ret sub ret (bad) push sub (bad) sahf aaa rcrb adc scas jle sbb pop lea dec xchg and movsb xchg adc (bad) hlt ljmp ss loop mov mov in orl loopne sub outsb xchg sub popf mov iret fistp push mov dec cmpsl call pop dec loopne push adc es add push cmp jne inc mov daa cwtl outsl ret mov and rclb mov into repz out jno fisubl pushf pop mov cmp fnstenv popa sub (bad) aaa mov pop call inc jns aad inc jge (bad) xor cmpsl dec jns cmpxchg inc dec cmc jmp xor sbb fidivrl cwtl xchg adc mov adc sbb shr repnz pusha cmp and (bad) mov cmp lods pop lret mov sub inc add and (bad) fstpl stos nop pop inc test jnp,pt or adc mov dec sub fucomi iret push push aam cli cmp stos adc cmp mov mov arpl mov fs (bad) sbb flds dec test mov data16 inc insb jae sbb clc (bad) rcr shrb or push rclb or xlat jge testl ret (bad) dec inc mov jecxz jne aad jnp,pt jle mov add fwait jne pop adc movsl stc push lahf insb inc movups out mov loopne xor fdivrs into (bad) add mov nop es out mov pop xchg pop mov es inc je,pn xor jae repz (bad) dec inc movsb cmp sbb xchg (bad) mov dec (bad) (bad) das mov mov jae pop ja cmp mov out (bad) loope (bad) cmp icebp and push fnstenv nop xor inc xchg xor mov ljmp repnz out ret mov xor ja mov mov xlat sub or adc mov mov movsl jl mov jns xlat repnz js pusha (bad) sti push sub mov data16 test mov cmpsl pop or mov add pop imul loope mov mov (bad) (bad) xor (bad) xor pop dec xor inc jle inc jg fs stc or sahf out fistl push repnz mov out stos fwait in imul addr16 xlat int3 or cs jnp lods lds pop out jge pop sub (bad) mov mov pushf xchg lods sbb cld jno mov mov cmpsb and jb xor pusha into cmpsb dec push mov stc and inc ficom aad in and sub mov insl loopne (bad) lods mov mov ljmp mov mov (bad) hlt jo or cs mov test fsubrp ret cmpsl test js adc xchg xor mov ljmp (bad) mov mov hlt inc ficompl nop (bad) mov xor xor cmp mov ret cmp iret inc fcmovb cs fcoml pop insl pop pop fldt icebp sub mov push movb mov outsl sar xchg lods scas fcomi inc out mov xlat je pop rorl arpl and lock fdivs push push repz movb cs arpl das movsb adc repnz mov and out or mov mov mov mov (bad) int jns stc scas (bad) dec dec dec adc jecxz test aam je dec sub out out mov test adc in movsb outsb insl push imul mov xor xchg mov lcall mov in adc and fwait and cmpsb ss int3 jo sahf addl cmp mov jl push adc push fs mov inc mov sbbl rorb out test inc lret fdivl sub or fnstcw cld jb jp adc mov aad push aas data16 or pop aas sbb jo add mov sub int ja inc mov mov add insb pop ja loop lods cmp mov (bad) rolb and push sbb test outsb and xlat insl mov xchg pop mov mov cvtps2pd push jp add sbb movsl sar lgs (bad) mov mov push mov cmpsl movsb mov xor popa fnstcw push xchg stos mov sbb dec jae or xor mov push push int3 aam (bad) adc cld lods ret dec jno add inc frstor jmp sbb jmp incl dec in or aam inc lcall mov mov imul dec sub in jge adc and aad sub jne ds cmc sbb sub pusha icebp mov mov inc mov and push sub adc mov testl push add into xor xlat hlt loopne mov dec sbbl cltd push in movsb mov sbb gs clc push aaa aaa cmp add cmpsb insb push imul or xor fstpl dec out sub imul data16 out cmp mov popf push popf mov jnp xchg lock daa test xchg fs repnz inc inc jo push imul push aaa xchg mov enter cwtl shr and inc pop gs push sbb pandn ja mov xor in mul (bad) pop mov adc jbe jg sub mov pusha jns mov std sbb mov xchg jnp mov sub or pop mov or mov stc mov test pminub or jns sbb repz cs mov mov mov pavgw dec xsha256 cmpsb adc test pop inc inc mov out incl xor rcll mov fidiv inc mov add xchg or mov jecxz into lds dec stos push xor lock ret shlb sbb mov cmp mov or roll aam xchg sbb push dec dec sti shrl pop jmp jbe test dec jle cli mov fildl in lcall mov dec jnp xchg inc stos xchg les lds ljmp nop pop xchg aaa jae punpckhwd in inc or out mov mov inc bound ret (bad) mov mov mov jg fiaddl mov mov xorl inc mov (bad) add jno rorl sbb mov mov push lret mov mov in push repnz gs aaa pop cltd mov shrb xor jp xchg andb ds int3 cmpsl loop cmc xchg fadds jne and pop fsubs test icebp mov cmp (bad) mov xchg cmp push pop pop (bad) repz xor xchg mov lods (bad) out dec pop jnp xchg fwait pop popf daa out mov pop xor (bad) xchg cmp mov lds sub mov mov sbb pop iret mov mov mov andb outsl or iret cltd cmpsb lcall mov movsb xchg test fidiv adc lret pusha jge xor std push loope push push cmpsl mov jecxz mov mov mov sbb movsb aad xchg sub test loope or xor sub std mov sbb and lahf sahf sbb jge lret sbb fwait das in and push ljmp scas cli (bad) fsubl and cmp or dec (bad) int dec lock stos gs fisubr xchg pop xor mov inc inc loope mov mov enter arpl add (bad) and dec jmp adc jg cmpsl out sbb js in mov out inc cmpsl lret xchg fwait dec mov push inc inc jg lods repnz ror (bad) jo push push sbb ljmp or call xchg insb dec data16 cmp int mov and and (bad) push idivl mov inc das push sbbl mov outsb loopne and ret cmp scas test pop nop daa mov jp cmc imul inc push dec jp out jmp cld jle sbb leave mov and inc inc pop and int xchg push es repz stos mov loop test xor push mov leave mov jo int shlb xchg sbb sbb cmp lret mov dec jmp push push call sbb push sahf ror imul movb rcrl push add dec cmc iret aaa ret sahf sub mov pop loop,pn notb in ss aam sbb add jo mov jl pop jp xchg pop lcall push jne ja adc loop mov repnz adc mov bound jmp mov jne sbb xchg add js mov cmp add enter xor mov int3 push in pop pop pop inc dec xor cs aaa push push (bad) sbb and or push add adc ds mov cmp out push idiv xchg sbb repz imul sarl (bad) xor addr16 lret aad jl mov scas jp movsb cmp and add lods je and out jbe mov jnp and and mov lods or pop pop jmp fst outsl jo adc mov imul jbe dec mov and das jp loop jl (bad) dec inc sbb adc sbb test cld adc fisubr xchg or xchg pushf sub (bad) sub and and pop ror sbb dec xlat ljmp add shll loopne fidiv push cmp cmp inc repnz test outsl pop sub in popf (bad) jae fmul sarl dec or mov (bad) mov push jg sbb pop cmp cltd je dec pop mov roll jae ds aas pop sbb lahf outsb mov dec insl mov mov hlt push sub mov sbb dec pop add dec mov and cwtl imul cs push inc in mov push cltd xchg cmpsl aam jecxz rcl or mov push push nop push xor in lods lea adc inc mov push jo push jmp cmpsb xchg rol dec (bad) repnz in adc add rcrl adc jmp mov insb (bad) dec or mov mov loopne loope clc inc mov cwtl lcall (bad) fstp push rorb lahf dec cs js sbb orl sub mov ljmp (bad) or xchg data16 fnstenv and hlt pop xchg mov xchg push in or pop jno pop ror mov xchg rol mov dec sub sbb sub pusha clc xchg push xor mov xor mov or dec test pop rolb jle mov stc test lahf stos push inc jmp dec call insl fsubr and mov xchg cld sbbl dec repz stos popa xor or in jnp mov jmp mov sbb jae cmp dec and xchg fwait or inc jns outsb fwait or lods (bad) jb rclb adc cld gs jp cltd insb inc mov and sbb movsl mov aad repz xor mov dec and gs out scas mov pop insl push mov cmc std ret stos lahf outsl fcmovnbe push mov cwtl loope lcall push pop std rcll imul repnz fcmovnbe sahf out dec push stos mov hlt enter mov out pop push cmp mov iret mov pop daa fistpll int3 mov addr16 sub daa xor xlat inc aas arpl gs fldt (bad) or aaa and (bad) sub notl jne dec or (bad) test lcall xchg imul in adc scas jl mov xchg cmc xor repz add mov inc sbb xor lods mov fcmovnbe mov dec or cmp lahf orl xor jmp and jmp cmp jb cmp iret pop adc decb sbb in or xchg sbb out sub int3 add ror jne bound dec adc adc leave xchg into cmp ret pop xchg loopne fist pushf adc push jecxz xchg scas lret push pop sbb push mov inc (bad) sti jne mov xchg cld loop push ret sbb pushf jle stos push leave push mov sbb fwait lret xor xor and xor fmul inc push stc mov sahf inc test mov (bad) cmp mov fcompl (bad) pushf adc or stc (bad) jb mov dec fidiv pop sub pop add cmp dec mov aad pushf push sbb cld loope jecxz sub fisttpl mov sub inc dec lret ficompl mov gs jae lds dec (bad) and push push cmp outsl ret pop test mov cmc sbb inc out or popf decb xor and es add cs mov push ja cmp jle mov add adc push push dec (bad) addl call cmp inc adc dec mov (bad) call in js cmp dec les test pop push pop lahf shl inc xor into and xchg mov lcall add push loop into out lahf lcall cli xchg ret in loop dec or fistp pop adc cmp or dec adc cs mov int3 cmp inc pop outsl nop mov cwtl mov pop pop fmul add (bad) std out pop cli stos lcall pusha imul addl push inc push ss int3 inc push push sub popl sbb inc daa push loop jns push divl and js or les pop je in sub dec stos pop in mov sbb scas in in cmp (bad) mov push ljmp push sti jle insb insl pop cmp aaa xor sub test arpl lret xchg add ret mov lahf inc loop hlt lods and xchg rcrl pop int leave imul ja pop (bad) adc jp mov pushf xchg repz xor lods ljmp insb mov sbb or std sbb lret ds test jg mov pop inc xor iret fdivrs sub scas sbb sub dec (bad) pop adc vmovntpd mov sbb push push mov sub scas je pop ja imulb fstpt pop out ss mov movsb sub add or pop insl popf nop imul loopne and jge cmpsb stos cmp mov adc inc xor decb add xor mov or loop xorl scas pop cmpsb xor mov lds les xor je ret push cmp mov jb ret frstor (bad) out push and push and mov gs xor lahf or inc (bad) loope loope and sub inc pop jnp popf mov dec adc mov xchg cmpsl movzwl aaa push loopne push popa sub push push jecxz adc into frstor push push (bad) fidivr aas xchg or stos cmpsb data16 gs shlb lods movsl pop add push and enter push mov push pusha mov out out es jmp cmp rcrb pop ss cmpsb dec scas iret jecxz mov cwtl xor popf cmp cli cmp aad (bad) lret loop lods arpl add js insl sub leave xor bound insb lods sub adc fisub (bad) aam movsl adc roll or in sbb ds inc xchg cmp out cltd shrb push jns je mov test lret mov lods lods jl clc sub lods setp test out arpl cld test sub ret test ja or leave cmpl adc xchg mov arpl repnz outsb iret (bad) and cs and sahf adc and data16 icebp pusha (bad) incb fbld lods out sbb popa jno sub (bad) push and pop es out ljmp sub fistpl cmp and pusha pop push and pop sbb pop jo sbb aad xor mov rcrb mov gs xor push inc (bad) cmpsl out xchg xchg arpl sarl dec pop imull (bad) stc mov and bound shrl xor push outsb dec fistpll xor test sub pop cmp stos ss scas xchg mov jae push xchg pop sbb mov cmp arpl push cmp jge push and call insl repnz outsb mov repnz icebp push das add cmp aaa and cmp rcll aaa sti mov push xchg inc or push inc lock repnz insl dec in xor jns push adc lret mov xchg sti mov sbb movsl pop (bad) popa push outsl mov pop add mov pop cmc cmp xor popa mov mov sub jp jge inc pusha mov sti xlat jns adc mov xchg mov jp jbe add lahf cmc mov fidiv test jmp pushf bound stos push sbb pushf xor and mov xor arpl ret fnstcw and pop cli mov repnz jecxz mov sub push sub scas pop adc js popf mov inc mov lahf add or lock in insl add sub sbb movsb pop in clc fs enter ds mov int fild movsl cmpsl adc cmc mov fs cmp jmp mov and dec hlt lcall xchg lahf data16 sbb mov subl leave lds aas pusha in popf int3 xor sbb sub push mov sbb jge push imulb pop (bad) fnstsw (bad) mov pop mov mov jge cmp xor adc inc lds mov mov pop and jnp daa popa inc adc js lods vunpcklps ss jno jge xchg nop aad and jae mov xor (bad) mov movsl jge int3 push and ja dec loope loopne fnsave xchg fsubs mulb xor jae mov mov popf push aaa add insl and mov sbb mov pop scas or cwtl pop (bad) das sar dec xchg mov add jno lock mov cmc inc into jge inc sti movsl jns adc dec lods popa aam or out out pop (bad) lock jae pushf repz add and lea or xor xchg shlb pop or xor dec mov ds dec lahf jno push int ret xchg lahf xor xchg cmpl imul xor icebp fdivrl loopne xor dec mov xchg cltd scas jns cmpsl and outsl lret repz int mov jno sti push pop (bad) insl or push cmp stos mov scas aas mov xchg popa scas mov pushf mov mov insb xchg inc iret fimul test xchg jns push scas sti and inc shrb mull xchg jne jge aad leave jl inc fcmove fdivrp fxch cwtl nop sbb out jb clc daa aad negl popa inc lods pop std (bad) jo iret mov dec cmc (bad) mov sti test call stos pushf addb push mov dec or bound lea push push iret mov sub xchg adc (bad) fcmove sub xchg imul std sbb incl ds stos aad push ljmp jb add sbb sti (bad) mov adc stos scas jae fisttpll xchg pop gs mov adc pop add dec adc icebp or stc xchg les (bad) sbb jge cmp (bad) ds fnstcw loopne push sbb lahf gs mov sbb clc fisubr push mov out jno mov sbb mov popa xlat mov mov in mov call pop push adc insl (bad) testb (bad) gs neg (bad) and cld ret push loopne and in push sbb dec pop ljmp loopne (bad) xor mov sti mov or nop xchg xchg icebp mov push add mov gs ds sbb adc add stos in aam adc pop insl inc (bad) xchg daa add dec syscall lahf je mov fmull pop aaa jne (bad) sahf mov and mov pop xor xchg push pop push rolb and cmp inc jo repnz inc shrb loopne sub or lock int3 xchg jnp jb xor mov lcall xchg xor ja cltd push aas xchg and cmpsb pop iretw push push outsb jnp dec gs (bad) push push xor xor mov aas sahf mov jns stos inc cli cwtl addr16 pop cmp pop dec jnp ret adc xlat jo fstps (bad) andb lret sbb jl outsb jno xchg aas fsubs data16 adc mov cmpsl sahf mov aaa mov mov xchg mov mov push add fcomps ret (bad) sub sub (bad) jge mov jp cmpsl add rolb ljmp lea mov push mov sub aaa add adc dec jmp imul xchg mov addr16 lret add mov outsl outsb int sub aaa mov jb out sbb xchg cmpsb mov lret mov add inc or dec cmpsl jb lock add lock (bad) sbb pop outsl in call lahf mov imul pop ficompl fsubs xchg rcrl inc std jle fisttpll lret stc jne xchg or ja adc dec loopne and jmp sbbl sub push js nop gs xor scas lods xor sub mov (bad) cmpsl cmp fisubr mov test pop push movsb dec dec in daa push mov fwait pop scas stos imul out sbb jo (bad) inc jo daa loope movsl push pop rolb sub sti cmp push pop sbb aam ret or sub sub inc jge cmp je cld pushf mov jae fadds paddd cmpsl (bad) pop (bad) repnz (bad) and adc ja sahf fwait out xor jbe mov dec inc mov xor xchg lea push fmull adc push or imul cmp out add xchg arpl mov mov mov (bad) or inc push lret lods sahf jae mov jbe sub fwait dec das xor add push movsl jmp push (bad) ss xor lods or and subb popf cmp iret faddp add dec mov sub fbld ja jns in (bad) clc out jmp cmp sahf lahf or inc pop adc add cmpsl (bad) mov fadds rorl (bad) and aad movsl lock hlt xchg fisttpll push fisubrl in mov cmpsl imul and mov mov (bad) push outsb stc pop test int jns jecxz pushf sbb jno dec bound insl jecxz jbe ret mov xchg test cmpsl hlt fmul or lea lds mov mov adc jnp ja lods mov mov (bad) hlt daa sti popa jno inc add bound push mov jmp bound loopne inc out ror movsl (bad) pop (bad) jns jge out aaa adcl lea mov lea ljmp in inc aad adc lea roll ss test test mov aaa addl adc (bad) into (bad) mov jmp and xchg pop out fwait jo xchg push jbe xor adc mov ss mov push in pop xchg pop fwait xor add dec in rclb jle sub call (bad) lds pop in add mov fwait jo out jmp mov pop cltd sub mov sarl lea ljmp fucomip les add aaa inc rcrb inc arpl clc rclb popf and (bad) sti cli mov test or bound insb mov mov movsb mov xchg mov inc mov inc sbb jb test int jmp icebp pop bound scas bound test leave jo xchg cmp xchg jne dec push inc push jo xor ss (bad) sbb lcall add aad ficompl xor push in mov push mov test or aad push push nop sbb loopne sbb int3 cmp ret sbbl testb pop nop inc out in (bad) jp push popf das adc test push inc in xchg mov add (bad) jb mov std cmp popl pusha lock into or jne sahf shl orl in leave sbb cmp imul xchg out scas pusha pop xchg mov pop inc cmp fmull in xorl dec jae (bad) inc pop push divb pop movb or dec and scas jl xchg fsubrl imul cmp or out add ret (bad) mov jae sbb mov prefetch jno sbb fs .byte inc out .byte .byte dec add add add add pop add add add push add push andb add sub add push sub add push and fist fsubrs add add xorb add out and add add add xorb add push add push sub add add sub add xor add add add add add add add sub sbb add or outsl sbb add or outsl sbb add push xor add or cmp add add or sub add sub or pop cmp dec loopne adc add pop dec adc pop dec adc push loopne pop push adc adc sbb push pop adc and test adc and or in (bad) or in ljmp adc roll add add or dec adc and dec pop adc adc and aaa cmp adc adc das add or pop dec sub adc sbb sbb dec loopne adc or sub adc sbb sbb dec sbb add outsl adc push incb adc add or pop dec sub adc sbb sbb dec loopne adc adc sbb sbb dec sbb push adc sub add or push and dec popa adc pop adc or adc adc adc or or adc pop adc adc adc incb sub push rcrl pop pop adc add adc pop adc adc adc adc cmp (bad) (bad) lcall adc adc pop adc adc push adc inc add push adc or sbb or adc pop sbb adc adc adc sbb adc pop sbb adc or or pop adc add sbb pop adc sbb adc add sbb adc sbb and push pop setne jmp adc adc push adc push xchg adc pop xchg popa data16 adc adc pop xchg pop adc adc pop setne bound and push sbb push sbb adc pop or push pop or insl pop sahf adc adc pop setne and and push sbb pop bound and push sbb push sbb adc pop setne bound and and push pop setne and and push pop xchg pop negb adc adc pop setne std pop adc push sbb push sbb cmc popa data16 adc adc sbb pop adc adc adc pop xchg pop bound and push pop or push pop or adc pop or adc pop xchg adc adc push sbb pop adc push sbb push sbb popa sahf adc adc pop or and and push sbb adc adc adc sbb pop cld pop pop adc adc push adc push xchg and mov gs data16 adc pop adc sahf adc adc pop or and push pop or adc adc push pop or and push pop or adc adc pop or xchg pop adc push sbb and adc pop or sahf adc pop movups sahf adc push adc push xchg adc push xchg popa sahf adc sbb xor and push sbb adc sbb cs adc adc sbb push sbb rcrl adc sbb push sbb int sahf adc sbb push sbb and cmp xor sahf adc pop or push pop or adc pop or push sbb push sbb xchg and call sahf adc pop or and adc push adc push xchg and lds int sahf adc and xor test adc adc sbb and push pop push adc pop push xchg and pop (bad) rcrl adc pop push adc pop push xchg adc and nop in pop pusha sahf adc and (bad) iret cmp and and push sbb and push sbb adc adc pop or push pop or xchg popa sahf adc push sbb adc push push adc push xchg adc and push sub adc sbb pop bound push sbb sahf adc push pop setne (bad) pop pop adc and push pop xchg sbb adc push sbb lcall and and push sbb adc adc adc sbb lcall adc adc sbb and push sbb adc sbb and push pop setne cs (bad) lcall adc adc adc pop setne push add add adc adc adc pop xchg pop pop pop pop adc adc sbb and sbb adc adc pop or push pop or popa data16 adc pop or dec pop adc adc adc pop xchg and (bad) lcall adc adc push adc push xchg and xlat xchg ds sahf adc sbb and push sbb xchg popa data16 adc push pop xchg sbb adc push sbb push sbb and lods push pop pop sahf adc adc pop setne sbbl and push sbb mov pop adc adc pop or xchg adc pop or push pop movups adc adc pop xchg pop xor pop adc adc pop or push pop or mov sahf adc pop adc sahf adc sbb push sbb cmp sahf adc and pop dec scas pop adc adc pop or repz adc adc sbb and sahf adc and adc adc pop or push pop or or sahf adc pop movups pop setne subl pop or push pop or xchg and pusha sahf adc pop push adc pop push xchg and pop or sahf adc sbb push sbb popa data16 adc pop push adc pop push xchg adc and call adc sbb adc push xchg and mov pop pusha sahf adc pop or push pop or and cmovl sahf adc sbb push sbb mov sahf adc pop push xchg sbb and push sbb push sbb fldl adc pop push adc pop push xchg pop sbb sahf adc push xchg adc adc and adc adc sbb push sbb popa sahf adc pop push adc pop push xchg adc sahf adc pop movups pop setne nopl xchg popa sahf adc adc pop xchg adc adc pop or push pop or adc pop or popa sahf adc push xchg pop sbb and and push pop xchg pop std pop pop adc and push sbb adc push push adc push xchg and sahf adc push sbb pop cli pop pop adc push pop push adc pop push xchg adc pop push xchg popa sahf adc push adc push xchg adc and pusha sahf adc adc sbb and push push xchg adc push push xchg pop sti pop adc adc adc sbb adc adc adc sbb sbb adc adc adc pop xchg pop bound and push push adc push xchg adc push xchg popa sahf adc adc sbb adc adc pop adc sahf adc pop adc pop xchg adc pop xchg popa sahf adc push adc adc sbb and push pop or push pop or xchg popa sahf adc adc sbb pop sti pop pop adc adc sbb push sbb push pop or push pop or or sahf adc pop or push pop or xchg popa sahf adc pop or push pop or popa data16 adc sbb push sbb popa sahf adc sbb push sbb popa sahf adc sbb and push sbb adc sbb popa sahf adc pop or push pop or adc pop push xchg pop sahf adc pop or aam pop adc adc sbb and pop sbb adc adc pop or xchg sahf adc sbb push sbb adc sbb push sbb push pop or and sub adc pop or push pop or pop popa data16 adc sbb push sbb adc pop or and push pop or add and push pop or lcall and and push pop or adc adc sbb push sbb pop sahf adc push pop or adc and push pop or pop xchg pop pop adc and push pop or and and push pop or sbb adc adc adc pop or and add pop pop adc adc adc pop or pop adc adc push sbb and and push sbb adc adc pop or add and and push sbb adc adc push sbb push pop or and pop or adc adc adc pop or pop xchg pop pop adc adc adc sbb and push pop movups pop setne inc stos dec add adc adc sbb push sbb and adc pop or and adc sahf add inc adc adc sub add or or bound adc adc or add adc pop inc incb adc adc sub sub adc push adc sub add pop and adc maxps adc pop maxps push adc pop maxps pop adc dec popa and sub adc pop adc add pop pop pop adc adc adc incb sub add dec pop add pop add inc adc inc dec pop add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or test add insb adc add jle add add pop add and jb outsb addr16 add add add adc add and dec inc add add pop add and outsl bound add add add adc add and dec inc add add add add add and jb outsb addr16 add add pop add add add and outsl bound add sbb add add add and push add add add inc add mov add cli and add add add add sbb add add add add add add pop add add add add add add add add add add add push add add add add add add add add add add add add add add add add add sldt add add add add add add add jno xchg add add add add add add jg add add add add push sbb push add sbb push add or or add inc xor add test or fwait xor adc cmp add add add xor xor add xor xor add xor dec xor xchg mov inc xor add sbb push add sbb or ss xor add add add ss add push aaa xchg aaa push add add aaa fdivs add aaa push cmp xor add cmp cmp xor add sbb or pop cmp push add (bad) or add sbb or jae inc xor add mov fdivs add add add cmp cmp push push add sbb push add cmp push add sbb push add jbe push add mov add cmp xor add cmp cmp push push add sbb push add sbb push add test push add test jg mov add push add cmp push push add fdivs add inc xor add add add add add cmp push push add cmp cmp add push cmp add add add cmp cmp add cmp xor cmp add sbb push add push cmp cmpsl cmp add push add add add add add add add or or pop add add add or add add add add push add or or pop add sbb add add add add and add add add add and and add add sub add add add add add add add xor add add add add add cmp add adc jmp add or sub add add add add add add add xor add add add add adc push xor add add dec add xor add add add add adc or aaa add adc add call add push add add or cmp push add add or cmp add add add add add add add add adc add int3 add add add add add add add add add add aaa add add add add add add add add add add add add add push sub or add add orl std or or add add cmp and loop cmp and pop adc add add adc add add cmp and rclb cmp and dec adc and lret add add imul cmp and ds add add add adc mov jbe add cs sub push sub pop jns add mov add sbb and je insl add add sbb add add movsl add add sbb pop push sub and and add add and add add and and mov add add push sub sub add (bad) sub sub cs xor add add xor add add xor add add hlt add add xor add add add xor add add add adc int add add jo add adc int jbe adc int popf add add mov xor or test xor mov or hlt add add popf add add xor add add add add push add add add add add add add out push add add add add add add add add push add add add add xchg add adc add inc cmc push add add add add add add add add add add add add add add add testb add addl pop xor add mov push add add add add testl add or add add push add add add add add add add add clc push add add add add push add add add add add add add add add add add add add add add add add add add add add push add add add add addl sbb sti push add add add add sti push add add add add addl sbb add add add add add add add add add pop add add add add add add add add add add add add add add sbbl or add add add add add add add add add add add add add add add add add add add add pop add add add add add add add jmp addl xor add insb add add add add add add add add add add add add add add add add add add add add jmp addl sub add add add addl sub add add add add add add push pop add add add add pop add add add add add add add push add add add add add add add add ljmp inc xor add add add add add add add add add addl xor add add add add add add push add add add add add add add add add add ljmp or xor add rolb pop add add add xor add add add add add add ljmp or xor add les pop add add add add add add add xor add add or add add add add ljmp sidtl add add add add xor add add adc sub add add add add add sub add insb adc add add add xor add push adc add add add inc add add pop add add add dec add add jmp add add add add add add add add jmp add add add add adc add add add xor add add pop add add add push add add les pop add add add or add rclb pop add add add arpl add mov add add xor add pushf sbb add add add ja add movsb sbb add add add add add add lea add cwtl sbb add add add xor jmp add add add push jmp add add add push add add and pop add add add test push add add add mov pop add add add or pop add add add roll add pop add add add add add add add add adc (bad) xor dec and add add add xor cmp adc iret xor sbb pop add add add xor push daa pop add add add xor xchg jmp add add add pushf jmp add add add subb add add add sub pop add add add stos jmp add add add mov add add enter add adc divb daa add jo pop add add add and pop add add add xor add lock add add add inc add lock pop add add add inc add ljmp sbb add add mov add add xor add cwtl xor add add add xor add je pop add add add xor add pop xor add add add jno add sbb add add add jl add in pop add add add xor xor adc lods xor add enter add adc push ss add add add push in push add add add add add lret xor add add xor add add xor add add add or add add or add add or flds or les loope or cld add add or add add or add add or add add or cmp sbb and push add add or sbb sub pusha add dec cmp popa add add add add add add cmp add loopne movl add add cmp add add cmp icebp add cmp add add cmp add add cmp add add cmp or add add add mov or add add add xor add add add or add add add or or or cmp add pop add and cmp add add cmp add add add cmp add hlt cmp stc add cmp icebp add cmp add push cmp mov cmp or add movb add int flds mov add cmp call or add in add lods add add cmp push xor ds add imul cmp push and jnp xor flds cmpl or sbb or xor sbb loope addb add cmp add add cmp push mov cli cmp add inc add push push add mov or add add or add or or cmp mov daa pop addl cmp leave cmp aad xor cmp cld cmp or push pop stc add sbb addr16 adc sub ja and inc jge,pt flds dec or sub push add add add add add add add add add adc add add add add add add add add add add add add push add add push add add add dec add add jg jg jg add add add add add push add add add add add add add int3 add sbb add jbe add sbb add mov add sbb aaa add add add add add add add add add add add add add add add add add add add add add add add add add add push add mov fiaddl adc es pop push arpl xchg cltd push stos push ret push cmp inc pop pop pop insl pop adc add adc add sbb xor add add sbb xor add add add add add add add add add add add or add dec add mov add add add add and add add shrl lret add jmp pop fdivp pushf push mov fwait cwtl push adc jp xor or icebp inc and add jecxz in aam in iret cmp jnp xchg dec lds xchg bound dec pop pop stos push dec fwait mov dec lahf dec rcll dec add xlat out movsl psubd pop mov fwait ds pop mov sarl std or sbb jge cmp int sbb adc sbb shl jb scas mov adc jae adc add add inc aaa (bad) jg add add add push push add add add add and inc xor add add add add sbb add add add add adc add add add add add add cmp add add add cmp add add add add add add add add add add add add add add add add add add add adc push add add add add add add add or test add add or add add add adc test add add popl and add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor int and add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add xor add add add add add add add add add add add add add add add add add add out add add stos add add in adc mov mov testb add adc dec push test dec push push add xchg add push movb push lret pop xchg add pop int3 add pop xchg add pop lods add pop cwtl add add add add add or jns or jns or or add add add add add add adc adc adc jge adc jns adc add pop add sbb sbb sbb or sbb jns sbb inc add or add add add add add add and sbb and mov and add add add add add insb gs outsb popa je cs add gs subl loop scas loop mov subb stos loop lods loop lods loop lods loop lods loop (bad) loop mov orb lods loop stos loop scas loop stos loop lods loop scas loop stos loop stos loop scas loop lods loop stos loop stos loop mov subl lods loop stos loop lods loop stos loop scas loop (bad) loop stos loop scas add subb lods loop stos loop (bad) loop lods loop stos loop scas loop (bad) loop lods loop mov orb lods loop lods loop (bad) loop mov subb stos loop lods loop lods loop stos loop lods loop lods loop (bad) loop scas loop scas loop stos loop (bad) loop mov subl (bad) loop scas loop mov subl scas add arpl outsl jb loop scas loop scas loop scas loop stos loop (bad) loop (bad) loop scas loop lods loop stos loop stos loop mov subb loop mov orb stos loop lods loop lods loop mov orb mov orb mov subb stos loop mov subl stos loop lods loop lods loop stos loop stos loop (bad) loop scas add orb mov subl loop lods loop scas loop stos loop stos loop scas loop stos loop lods loop (bad) loop mov orb stos loop stos loop stos loop mov subb stos loop (bad) loop stos loop scas loop stos loop lods loop lods loop scas loop lods loop (bad) loop scas loop lods loop lods loop lods loop scas add orb stos loop scas loop scas loop (bad) loop lods loop (bad) loop (bad) loop scas loop lods loop stos loop (bad) loop scas loop scas loop stos loop scas loop (bad) loop stos loop lods loop stos loop lods loop (bad) loop scas loop lods loop lods loop scas loop lods loop lods loop lods loop lods loop (bad) loop scas loop stos loop mov subl stos loop mov subb lods loop lods loop mov orb loop lods loop scas loop lods loop (bad) loop mov orb loop mov subb lods loop scas loop stos loop stos loop stos loop stos loop mov subl mov subb mov orb scas loop stos loop stos loop lods loop stos loop (bad) loop stos loop scas add subb lods loop mov subl scas loop stos loop stos loop stos loop stos loop stos loop stos loop mov subl mov subl (bad) loop (bad) loop scas loop lods loop stos loop stos loop (bad) loop lods loop mov orb mov subl scas loop lods loop lods loop scas add subl lods loop mov orb loop lods loop stos loop stos loop scas loop stos loop mov orb scas loop lods loop stos loop lods loop stos loop stos loop (bad) loop (bad) loop mov orb scas loop stos loop (bad) loop stos loop (bad) loop stos loop mov orb (bad) loop scas loop stos loop lods loop scas add subl loop mov subb stos loop (bad) loop lods loop lods loop mov subl stos loop scas loop lods loop scas loop stos loop lods loop mov orb stos loop mov orb stos loop mov subb lods loop stos loop lods loop stos loop stos loop mov subl orb mov subb loop (bad) loop stos loop lods loop mov subb lods loop mov orb lods loop scas loop scas loop mov subl stos loop lods loop scas loop stos loop stos loop lods loop scas loop scas loop lods loop mov subb loop mov subb scas loop scas add jb jne insb push jb je arpl gs gs xor cs insb add subb mov subl scas loop stos loop lods loop stos loop scas loop lods loop lods loop scas loop scas loop stos loop lods loop stos loop scas loop stos loop scas loop lods loop lods loop lods loop lods loop lods loop (bad) loop scas loop lods loop mov subb lods loop scas loop scas loop mov subl stos loop scas add subl lods loop scas loop lods loop scas loop mov subl loop scas loop scas loop stos loop (bad) loop (bad) loop scas loop (bad) loop (bad) loop lods loop mov subl stos loop stos loop lods loop scas loop (bad) loop lods loop (bad) loop stos loop scas loop stos loop stos loop lods loop lods loop stos loop (bad) loop scas add arpl insb imul gs jns add jae gs add orb scas loop mov subl stos loop stos loop scas loop stos loop stos loop mov subb scas loop scas loop scas loop stos loop stos loop stos loop scas loop scas loop lods loop mov subl stos loop scas loop mov subl loop lods loop scas loop lods loop stos loop stos loop scas add subb stos loop stos loop scas loop (bad) loop scas loop lods loop (bad) loop lods loop mov orb stos loop mov subl mov subl scas loop lods loop mov orb lods loop scas loop mov subl stos loop lods loop mov subl mov subb subb loop stos loop scas loop lods loop lods loop stos loop lods loop stos loop mov subb (bad) loop (bad) loop mov subb scas loop mov subl mov subb stos loop scas loop lods loop lods loop lods loop stos loop mov subl loop lods loop scas loop scas add orb loop mov orb loop lods loop (bad) loop lods loop stos loop stos loop (bad) loop lods loop scas loop mov subl (bad) loop mov orb lods loop scas loop lods loop scas loop mov orb lods loop (bad) loop lods loop scas loop lods loop mov subl lods loop scas add subb loop (bad) loop lods loop stos loop scas loop mov subb mov subl loop lods loop scas loop (bad) loop stos loop stos loop lods loop lods loop lods loop (bad) loop lods loop lods loop stos loop mov orb stos loop mov subb loop mov subl stos loop scas add orb (bad) loop stos loop lods loop scas loop scas loop (bad) loop stos loop scas loop lods loop lods loop mov orb scas loop stos loop lods loop stos loop scas loop lods loop scas loop stos loop lods loop (bad) loop lods loop stos loop scas loop scas loop scas loop stos loop lods loop scas loop scas loop (bad) loop lods loop lods loop lods loop stos loop mov subb jb loop lods loop scas loop lods loop (bad) loop scas loop stos loop lods loop (bad) loop mov subb (bad) loop stos loop stos loop stos loop stos loop lods loop (bad) loop lods loop scas loop lods loop scas loop lods loop lods loop scas loop scas loop mov orb mov subl stos loop stos loop (bad) loop lods loop lods loop lods loop lods loop scas add orb (bad) loop mov subb loop mov orb lods loop scas loop scas loop mov subb mov subb scas loop lods loop lods loop mov orb scas loop mov subl stos loop mov orb scas loop lods loop scas loop lods loop scas loop stos loop scas add orb stos loop lods loop stos loop lods loop stos loop mov orb scas loop scas loop scas loop lods loop (bad) loop lods loop scas loop lods loop lods loop stos loop (bad) loop scas loop scas loop mov orb (bad) loop (bad) loop lods loop lods loop (bad) loop lods loop stos loop stos loop lods loop lods loop scas loop lods loop stos loop mov subb orb loop lods loop lods loop scas loop lods loop mov subl (bad) loop (bad) loop lods loop stos loop mov subb lods loop lods loop scas loop lods loop stos loop (bad) loop scas loop lods loop lods loop mov orb (bad) loop lods loop lods loop mov orb stos loop mov subb orb loop lods loop mov subb lods loop scas loop scas loop lods loop stos loop (bad) loop (bad) loop lods loop mov orb (bad) loop stos loop stos loop lods loop mov orb mov subb loop mov subb loop (bad) loop lods loop stos loop mov subl add push arpl subb loop lods loop mov subb lods loop (bad) loop mov orb mov orb loop scas loop lods loop (bad) loop mov subl stos loop (bad) loop (bad) loop lods loop stos loop stos loop (bad) loop mov orb stos loop scas loop lods loop mov subl scas add orb lods loop stos loop stos loop lods loop lods loop (bad) loop stos loop lods loop stos loop lods loop stos loop mov orb lods loop stos loop stos loop mov subb (bad) loop mov orb loop lods loop (bad) loop stos loop mov subl lods loop stos loop stos loop (bad) loop scas add orb scas loop (bad) loop lods loop (bad) loop (bad) loop lods loop (bad) loop lods loop (bad) loop mov orb loop (bad) loop scas loop mov subb stos loop stos loop scas loop scas loop stos loop lods loop (bad) loop mov subb stos loop stos loop scas loop lods loop scas loop scas loop stos loop stos loop stos loop lods loop scas add jb popa insl add jae gs cs dec add orb lods loop lods loop (bad) loop lods loop stos loop lods loop mov subl mov subl stos loop stos loop lods loop mov subb loop mov subl (bad) loop lods loop mov subb loop scas loop mov orb stos loop scas loop scas loop scas add subl lods loop lods loop (bad) loop (bad) loop (bad) loop lods loop (bad) loop lods loop stos loop (bad) loop lods loop stos loop lods loop mov subb (bad) loop (bad) loop (bad) loop mov subb mov subl lods loop stos loop scas loop lods loop scas loop scas loop stos loop scas loop (bad) loop lods loop lods loop scas add orb loop stos loop stos loop (bad) loop lods loop lods loop mov subb mov subb stos loop scas loop mov orb lods loop stos loop lods loop scas loop lods loop lods loop (bad) loop stos loop scas loop lods loop scas loop scas loop stos loop stos loop (bad) loop stos loop stos loop mov subb scas add orb lods loop mov orb scas loop stos loop lods loop lods loop stos loop stos loop stos loop lods loop scas loop mov orb mov subl stos loop stos loop stos loop stos loop scas loop lods loop stos loop (bad) loop stos loop lods loop mov subl stos loop lods loop lods loop scas add subl scas loop stos loop stos loop scas loop mov subb mov subb scas loop mov orb stos loop stos loop scas loop scas loop stos loop mov orb stos loop stos loop lods loop scas loop lods loop stos loop (bad) loop scas loop lods loop stos loop scas loop scas loop scas loop lods loop lods loop scas add orb (bad) loop mov subl lods loop lods loop mov orb stos loop stos loop mov orb scas loop lods loop mov subl mov subb (bad) loop (bad) loop lods loop mov orb loop stos loop (bad) loop mov subb (bad) loop stos loop scas add subl (bad) loop stos loop lods loop mov subl loop stos loop (bad) loop scas loop lods loop mov subl lods loop mov subl stos loop stos loop lods loop stos loop lods loop scas loop lods loop scas loop lods loop stos loop (bad) loop lods loop (bad) loop stos loop stos loop mov subb orb mov subb mov subb mov subl mov orb (bad) loop (bad) loop mov subb scas loop stos loop scas loop stos loop lods loop scas loop stos loop stos loop stos loop scas loop mov subb lods loop lods loop stos loop lods loop mov orb orb (bad) loop stos loop stos loop scas loop mov subl (bad) loop (bad) loop scas loop scas loop mov orb lods loop lods loop stos loop stos loop mov subl loop scas loop lods loop stos loop lods loop mov subl loop lods loop (bad) loop (bad) loop scas loop lods loop scas add subl mov subl scas loop (bad) loop (bad) loop scas loop (bad) loop lods loop (bad) loop lods loop (bad) loop (bad) loop lods loop stos loop lods loop mov subb lods loop mov subl loop scas loop stos loop stos loop (bad) loop scas loop stos loop (bad) loop stos loop mov subb scas add subb loop scas loop lods loop (bad) loop (bad) loop scas loop mov subl stos loop stos loop lods loop (bad) loop mov subl lods loop lods loop (bad) loop lods loop mov orb mov subl loop scas loop stos loop lods loop stos loop lods loop stos loop lods loop lods loop scas add subl loop lods loop stos loop (bad) loop stos loop stos loop lods loop stos loop stos loop stos loop scas loop stos loop mov subb mov subl loop lods loop mov subl lods loop stos loop (bad) loop stos loop mov subl stos loop mov subl subb stos loop mov subl stos loop scas loop mov subl scas loop scas loop lods loop lods loop stos loop stos loop mov subl scas loop (bad) loop lods loop lods loop stos loop lods loop mov orb lods loop (bad) loop mov orb stos loop scas loop lods loop scas add subb mov orb lods loop stos loop stos loop mov subl loop stos loop (bad) loop scas loop scas loop scas loop scas loop lods loop stos loop lods loop lods loop scas loop stos loop stos loop scas loop lods loop lods loop scas loop lods loop scas loop scas loop (bad) loop mov orb mov subb scas add subb loop lods loop scas loop stos loop scas loop mov subb lods loop (bad) loop lods loop mov subl mov subb loop scas loop stos loop stos loop lods loop lods loop lods loop mov subb lods loop lods loop lods loop lods loop lods loop mov subb loop scas loop scas add orb stos loop lods loop lods loop lods loop lods loop (bad) loop lods loop stos loop stos loop scas loop lods loop scas loop scas loop lods loop stos loop scas loop mov subl lods loop stos loop lods loop mov subb mov subb stos loop stos loop stos loop (bad) loop mov subl stos loop scas add subl lods loop stos loop stos loop lods loop scas loop stos loop mov subl (bad) loop stos loop scas loop (bad) loop stos loop (bad) loop stos loop scas loop stos loop lods loop (bad) loop scas loop scas loop stos loop lods loop stos loop mov subl loop scas loop mov orb scas loop lods loop scas add subb lods loop mov subb loop stos loop lods loop lods loop lods loop scas loop mov subl scas loop lods loop stos loop mov subl lods loop mov subl lods loop scas loop scas loop lods loop (bad) loop mov subb stos loop lods loop (bad) loop (bad) loop scas add subl lods loop stos loop (bad) loop scas loop scas loop mov subl mov orb loop scas loop lods loop stos loop lods loop stos loop lods loop mov orb loop scas loop scas loop (bad) loop stos loop mov subb (bad) loop stos loop (bad) loop scas loop lods loop lods loop (bad) loop scas add orb stos loop lods loop lods loop stos loop stos loop stos loop scas loop lods loop scas loop scas loop lods loop lods loop lods loop lods loop lods loop lods loop mov subl lods loop lods loop lods loop scas loop lods loop (bad) loop (bad) loop scas loop mov subl mov subb loop stos loop (bad) loop scas add subl lods loop (bad) loop mov subb loop mov orb lods loop mov subl loop (bad) loop (bad) loop scas loop mov subl loop (bad) loop lods loop stos loop lods loop (bad) loop stos loop lods loop stos loop lods loop lods loop lods loop stos loop scas loop (bad) loop scas add subb loop mov orb stos loop stos loop stos loop scas loop stos loop stos loop lods loop scas loop mov subl lods loop (bad) loop scas loop stos loop mov subb mov orb scas loop mov subb mov orb scas loop lods loop (bad) loop mov orb mov orb loop lods loop mov orb loop lods loop (bad) loop stos loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop lods loop stos loop (bad) loop mov subl stos loop lods loop scas loop stos loop mov subb stos loop mov subl stos loop (bad) loop stos loop scas add subb stos loop scas loop mov subl scas loop lods loop mov subl loop mov orb scas loop mov subl stos loop scas loop scas loop (bad) loop (bad) loop stos loop scas loop mov orb lods loop lods loop mov subl add subb lods loop mov subb stos loop stos loop scas loop lods loop scas loop mov orb lods loop mov subl lods loop lods loop stos loop mov subb lods loop lods loop stos loop mov orb lods loop lods loop scas loop mov subb lods loop (bad) loop mov subb orb lods loop mov subl stos loop mov subl lods loop lods loop stos loop lods loop mov subb lods loop scas loop mov subb loop lods loop lods loop lods loop mov orb lods loop stos loop lods loop stos loop (bad) loop lods loop mov orb stos loop mov subb stos loop stos loop (bad) loop (bad) loop scas loop lods loop lods loop mov subl (bad) loop lods loop stos loop lods loop stos loop scas loop stos loop mov subb lods loop mov orb loop scas loop stos loop stos loop scas loop stos loop scas loop stos loop mov subb scas add subl stos loop lods loop mov subl lods loop scas loop stos loop stos loop lods loop mov orb scas loop (bad) loop (bad) loop lods loop stos loop mov subb (bad) loop lods loop stos loop scas loop lods loop mov orb lods loop mov orb mov orb scas add subl mov subb stos loop (bad) loop lods loop scas loop stos loop (bad) loop stos loop (bad) loop scas loop scas loop (bad) loop lods loop lods loop mov orb (bad) loop stos loop scas loop lods loop mov subl mov subl lods loop mov subb stos loop stos loop scas add subl (bad) loop stos loop lods loop lods loop (bad) loop stos loop scas loop (bad) loop (bad) loop mov subb loop lods loop mov subb stos loop lods loop lods loop scas loop lods loop stos loop mov subb lods loop lods loop lods loop mov subb (bad) loop lods loop (bad) loop mov subb orb scas loop lods loop mov subb (bad) loop scas loop scas loop (bad) loop stos loop lods loop stos loop lods loop (bad) loop mov orb lods loop mov subb mov subb stos loop scas loop lods loop stos loop lods loop stos loop mov orb scas loop stos loop mov subl scas loop lods loop stos loop stos loop stos loop mov subb stos loop lods loop stos loop lods loop lods loop stos loop mov orb lods loop mov subl (bad) loop (bad) loop scas loop (bad) loop mov subb mov subb mov subb loop scas loop (bad) loop lods loop scas add subl scas loop lods loop scas loop lods loop mov subb stos loop mov subl (bad) loop mov orb stos loop stos loop stos loop lods loop stos loop stos loop mov subl loop stos loop stos loop stos loop lods loop mov subb lods loop stos loop scas add subb loop stos loop mov orb loop mov subb scas loop stos loop scas loop (bad) loop (bad) loop stos loop scas loop mov orb scas loop stos loop mov subb lods loop scas loop scas loop stos loop (bad) loop scas loop (bad) loop lods loop mov subl stos loop stos loop scas add subl lods loop mov orb lods loop stos loop lods loop lods loop scas loop stos loop mov orb loop stos loop lods loop lods loop lods loop mov orb (bad) loop (bad) loop mov orb mov orb loop scas loop mov subl scas loop scas add subb loop stos loop stos loop scas loop mov subl (bad) loop scas loop scas loop (bad) loop (bad) loop stos loop scas loop (bad) loop scas loop scas loop scas loop mov subb loop mov subb stos loop lods loop lods loop lods loop lods loop mov orb lods loop lods loop (bad) loop lods loop scas add subb stos loop (bad) loop lods loop mov subb (bad) loop lods loop scas loop lods loop mov subb loop lods loop stos loop lods loop lods loop lods loop stos loop stos loop stos loop (bad) loop scas loop lods loop scas loop (bad) loop mov subl loop scas loop lods loop (bad) loop (bad) loop scas loop scas loop scas add subl scas loop stos loop lods loop lods loop scas loop mov subl scas loop stos loop stos loop lods loop mov subb lods loop (bad) loop mov subl lods loop lods loop lods loop lods loop stos loop mov subb lods loop stos loop (bad) loop mov orb lods loop scas add orb loop scas loop scas loop (bad) loop stos loop (bad) loop lods loop lods loop scas loop lods loop mov orb stos loop stos loop (bad) loop (bad) loop stos loop (bad) loop lods loop stos loop stos loop lods loop scas loop lods loop lods loop stos loop stos loop lods loop lods loop stos loop (bad) loop scas loop mov orb loop stos loop scas add orb stos loop mov subl loop (bad) loop (bad) loop lods loop stos loop scas loop stos loop lods loop lods loop mov subl lods loop stos loop (bad) loop stos loop stos loop scas loop (bad) loop stos loop lods loop lods loop scas loop scas loop scas loop lods loop lods loop scas loop lods loop stos loop lods loop mov subb subb loop lods loop stos loop scas loop stos loop lods loop scas loop stos loop lods loop scas loop lods loop lods loop lods loop stos loop lods loop mov subl lods loop scas loop mov orb loop lods loop stos loop stos loop (bad) loop stos loop (bad) loop scas loop stos loop lods loop scas loop (bad) loop lods loop scas add orb loop lods loop (bad) loop (bad) loop mov orb scas loop lods loop scas loop scas loop stos loop (bad) loop scas loop lods loop mov subl loop mov subb lods loop scas loop lods loop (bad) loop stos loop scas loop (bad) loop lods loop stos loop (bad) loop stos loop (bad) loop scas loop scas loop (bad) loop scas add orb scas loop stos loop stos loop stos loop lods loop scas loop lods loop lods loop lods loop (bad) loop scas loop scas loop stos loop stos loop mov orb mov orb stos loop lods loop lods loop lods loop lods loop stos loop lods loop mov orb loop lods loop lods loop lods loop lods loop (bad) loop (bad) loop lods loop scas add orb mov subb loop mov orb stos loop stos loop (bad) loop mov subl loop scas loop mov subb lods loop lods loop scas loop (bad) loop scas loop stos loop lods loop stos loop lods loop lods loop scas loop (bad) loop scas loop stos loop scas loop (bad) loop mov subl subl scas loop lods loop lods loop scas loop scas loop lods loop (bad) loop (bad) loop scas loop lods loop lods loop mov subb loop (bad) loop lods loop stos loop stos loop scas loop mov subl stos loop stos loop mov subl loop lods loop stos loop scas loop lods loop mov subl subb mov orb loop stos loop lods loop scas loop lods loop stos loop scas loop stos loop mov subb lods loop mov subl lods loop stos loop scas loop mov subl scas loop scas loop lods loop scas loop scas loop mov subb lods loop mov orb subb scas loop mov orb stos loop stos loop lods loop stos loop stos loop lods loop stos loop mov orb mov orb stos loop scas loop (bad) loop mov subb mov subl loop stos loop lods loop (bad) loop stos loop lods loop lods loop lods loop mov subl scas loop mov orb stos loop scas loop lods loop scas loop lods loop mov subl stos loop scas loop stos loop lods loop lods loop scas loop (bad) loop (bad) loop (bad) loop stos loop scas loop mov orb stos loop mov subb mov orb stos loop (bad) loop (bad) loop mov subb add subb (bad) loop stos loop scas loop scas loop scas loop stos loop stos loop stos loop scas loop lods loop stos loop stos loop stos loop (bad) loop scas loop lods loop stos loop lods loop (bad) loop lods loop mov subb scas loop stos loop scas loop scas loop (bad) loop stos loop mov subb stos loop mov subb loop scas loop scas add subb lods loop scas loop stos loop (bad) loop stos loop (bad) loop lods loop stos loop (bad) loop (bad) loop lods loop mov subb stos loop stos loop mov orb stos loop mov subb lods loop scas loop mov subl stos loop lods loop stos loop lods loop lods loop lods loop lods loop lods loop lods loop scas add subb lods loop (bad) loop (bad) loop scas loop stos loop lods loop stos loop (bad) loop lods loop stos loop stos loop mov orb lods loop (bad) loop lods loop mov subl lods loop stos loop scas loop (bad) loop (bad) loop mov subb lods loop mov subl (bad) loop mov orb scas add subb lods loop stos loop mov orb loop mov orb mov subb scas loop scas loop (bad) loop stos loop (bad) loop lods loop mov subl scas loop (bad) loop lods loop stos loop mov subl mov subl loop scas loop scas loop stos loop scas add subl loop lods loop scas loop lods loop scas loop stos loop stos loop stos loop scas loop stos loop scas loop (bad) loop mov subl stos loop stos loop scas loop scas loop mov subl stos loop lods loop lods loop stos loop lods loop lods loop stos loop scas loop (bad) loop stos loop scas loop (bad) loop stos loop scas add subl loop mov subl stos loop mov subl lods loop mov subb mov subl mov orb scas loop mov orb lods loop stos loop stos loop scas loop mov subl (bad) loop lods loop stos loop stos loop scas add subl stos loop lods loop scas loop lods loop stos loop lods loop (bad) loop stos loop stos loop (bad) loop stos loop stos loop stos loop stos loop stos loop stos loop (bad) loop stos loop stos loop lods loop mov subl lods loop scas loop scas loop (bad) loop lods loop stos loop stos loop stos loop lods loop lods loop scas loop stos loop stos loop scas add orb loop scas loop mov subb loop scas loop scas loop stos loop mov subb stos loop stos loop scas loop (bad) loop lods loop stos loop stos loop stos loop stos loop lods loop scas loop mov orb mov subl scas loop stos loop mov subb scas loop lods loop (bad) loop scas add orb loop stos loop lods loop scas loop (bad) loop (bad) loop stos loop scas loop lods loop scas loop stos loop stos loop stos loop mov subl mov subb lods loop scas loop lods loop lods loop mov subl lods loop (bad) loop mov subl lods loop stos loop mov orb lods loop lods loop (bad) loop stos loop (bad) loop (bad) loop scas loop lods loop stos loop stos loop lods loop lods loop scas loop stos loop lods loop lods loop (bad) loop mov subl mov subl stos loop scas loop stos loop stos loop mov subb loop stos loop scas loop stos loop lods loop stos loop scas loop (bad) loop scas add orb stos loop (bad) loop lods loop (bad) loop lods loop mov subb lods loop scas loop (bad) loop stos loop (bad) loop (bad) loop stos loop lods loop lods loop lods loop scas loop scas loop stos loop (bad) loop stos loop stos loop mov subb mov orb stos loop scas loop stos loop scas loop stos loop lods loop lods loop stos loop scas add subl lods loop scas loop mov subl stos loop mov subl mov orb lods loop lods loop mov subl lods loop stos loop scas loop stos loop lods loop lods loop stos loop mov subb scas loop lods loop lods loop lods loop stos loop stos loop lods loop scas add orb scas loop lods loop scas loop stos loop scas loop mov orb mov subl lods loop stos loop stos loop lods loop stos loop mov subb loop stos loop stos loop lods loop scas loop mov subb stos loop stos loop (bad) loop (bad) loop stos loop (bad) loop scas loop lods loop lods loop stos loop scas add orb mov orb loop scas loop mov orb stos loop mov subl stos loop scas loop lods loop stos loop stos loop mov orb (bad) loop stos loop lods loop (bad) loop stos loop scas loop lods loop mov subb mov subb loop stos loop lods loop scas loop scas add subl (bad) loop (bad) loop scas loop lods loop (bad) loop lods loop lods loop mov subb loop (bad) loop stos loop stos loop stos loop lods loop mov orb stos loop lods loop lods loop lods loop mov subb lods loop stos loop scas loop lods loop stos loop (bad) loop mov subb stos loop stos loop scas add orb mov orb mov orb mov orb stos loop stos loop scas loop stos loop scas loop scas loop mov subb loop (bad) loop lods loop lods loop (bad) loop stos loop scas loop mov subb loop stos loop stos loop stos loop scas loop scas loop scas loop scas loop mov subb lods loop lods loop lods loop lods loop stos loop lods loop mov subl stos loop lods loop lods loop mov subl stos loop scas loop stos loop stos loop mov subl mov subl lods loop mov subb stos loop stos loop scas loop lods loop scas loop lods loop mov subb subb loop stos loop scas loop mov subl stos loop lods loop stos loop lods loop mov subb lods loop stos loop stos loop scas loop lods loop stos loop stos loop lods loop mov subb mov subb scas loop mov subl scas loop lods loop lods loop mov subb subb stos loop mov subb scas loop lods loop (bad) loop lods loop lods loop (bad) loop stos loop stos loop (bad) loop mov subl scas loop mov subb stos loop scas loop lods loop stos loop scas loop (bad) loop lods loop stos loop lods loop lods loop scas loop mov subl loop scas add orb lods loop mov subb scas loop lods loop mov orb mov subb (bad) loop (bad) loop (bad) loop stos loop scas loop (bad) loop (bad) loop mov subb stos loop stos loop mov subl lods loop stos loop lods loop stos loop scas loop mov subl scas add orb scas loop (bad) loop lods loop lods loop stos loop lods loop stos loop stos loop mov subl loop lods loop mov subl lods loop stos loop scas loop lods loop scas loop lods loop scas loop scas loop (bad) loop (bad) loop (bad) loop stos loop (bad) loop lods loop stos loop scas loop stos loop scas loop mov orb subl scas loop mov subb mov subb loop lods loop stos loop stos loop (bad) loop stos loop lods loop lods loop lods loop stos loop stos loop (bad) loop lods loop mov subb scas loop lods loop scas loop mov subb stos loop lods loop stos loop mov subl (bad) loop scas add subl mov subl scas loop mov subl (bad) loop stos loop stos loop lods loop lods loop mov subl mov subl lods loop scas loop mov subl mov subl loop (bad) loop mov subl orb stos loop scas loop stos loop scas loop mov orb lods loop (bad) loop stos loop lods loop scas loop (bad) loop lods loop scas loop mov subb mov orb loop stos loop mov subl stos loop stos loop scas loop (bad) loop stos loop stos loop mov subl scas loop scas add orb (bad) loop stos loop stos loop stos loop mov orb scas loop (bad) loop scas loop (bad) loop scas loop stos loop mov orb stos loop mov orb loop lods loop lods loop scas loop scas loop stos loop lods loop lods loop (bad) loop scas loop stos loop mov orb mov subl orb stos loop mov subb scas loop stos loop stos loop (bad) loop stos loop mov orb stos loop lods loop stos loop mov subl loop stos loop scas loop stos loop (bad) loop lods loop scas loop (bad) loop lods loop stos loop stos loop stos loop lods loop scas loop lods loop scas loop mov orb scas add orb stos loop lods loop stos loop scas loop (bad) loop stos loop lods loop mov subl lods loop scas loop stos loop stos loop (bad) loop lods loop stos loop stos loop mov subl stos loop scas loop stos loop stos loop scas loop mov subl mov subl scas loop lods loop scas add orb scas loop (bad) loop mov subb stos loop stos loop mov subb lods loop (bad) loop scas loop scas loop scas loop (bad) loop lods loop stos loop mov subl loop mov subl mov subl lods loop stos loop stos loop (bad) loop lods loop lods loop stos loop scas add subl stos loop lods loop (bad) loop lods loop (bad) loop lods loop stos loop lods loop stos loop lods loop lods loop stos loop mov subl stos loop lods loop mov subb lods loop lods loop mov subl scas loop (bad) loop scas loop scas loop mov subb loop mov subl subb (bad) loop lods loop stos loop lods loop lods loop stos loop stos loop (bad) loop stos loop mov orb mov orb mov subb lods loop scas loop (bad) loop mov subb stos loop mov subb mov orb mov orb stos loop lods loop mov subb js push jbe dec arpl push arpl push push push push push inc inc imul dec insl inc dec dec dec pop dec push addr16 outsb insb dec dec pop jbe inc jb jno insb dec dec jo add je inc jns insl inc pop ja pop jo pop outsl gs push inc push dec bound jne ja arpl jae inc jns addr16 gs insl gs arpl push jns jns add jne dec jbe push je inc push jae outsb inc pop jp inc inc dec insb inc dec inc outsl jno add jae gs cs imul inc outsl jb jae inc outsl jb add push inc outsl imul dec inc inc inc inc push dec addr16 jno jo dec push insb pop add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add arpl gs outsl js push insb insl inc inc dec inc push dec imul jp dec fs inc jo insl inc dec inc add jo jae add jo jae outsb addr16 (bad) movsl add dec jns addr16 jp popa addr16 jno addr16 push insl push push dec dec outsb insl add dec pop pop push bound push inc arpl dec inc jbe push push pop pop js insb inc add gs jb loope mov add and add and add (bad) test push jns je insl cs jb ja outsb add imul add (bad) mov loope mov add outsl dec arpl insb bound jno push inc insl inc inc jb inc pop dec push inc insl inc add dec js dec popa push jae dec imul outsb imul jae dec pop fs add jb inc insb outsl jae outsb addr16 jbe outsb je jb jae inc jbe outsb je jb jae loope mov inc push insl dec push jb data16 inc arpl push outsb arpl dec dec jne push outsb outsl jno add jae insl bound push jns je insl cs gs arpl outsb add imul jns je insl cs arpl imul arpl bound push outsl push dec js push dec fs push dec push inc inc inc arpl inc pop dec add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add inc push inc pop inc insb pop inc insl inc arpl inc js jbe pop push push dec outsl dec jae inc jb popa jns push addr16 dec push push fs push je jns imul dec dec addr16 jbe add (bad) test (bad) test inc outsl arpl je insb gs (bad) test (bad) mov loope test (bad) movsb add (bad) test (bad) lods add (bad) test (bad) mov add (bad) test (bad) mov loope test (bad) movsl add inc je imul gs push inc bound jo arpl push gs insb dec jne add js pop inc push dec imul pop inc dec js gs inc inc push inc push dec add push jb jae addr16 insl dec push push jne jb dec dec push bound js dec push add jae insb jbe inc jbe outsb je jb jae loope mov inc outsl insl popa imul (bad) mov inc jne outsl push arpl gs outsl fs arpl dec push imul dec bound data16 fs pop jae push pop js inc push push imul push push dec dec fs push dec jae outsl inc jno jb add jp add arpl gs outsl js imul add jp inc add jno dec insl pop imul inc js dec fs dec insb imul push push push pop dec jp dec imul push dec dec outsb js jno push jns jb add dec popa imul imul dec push dec data16 inc jb dec jae add outsl popa jbe outsl arpl push jp outsb bound js dec arpl jb outsl dec add imul jne je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul jne add jae gs cs jne je insl gs outsb je jb jo gs imul jo jb jae dec insb fs jae inc je jb bound add jae insl bound imul imul outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound gs jb jo imul imul outsl insl push imul je jb bound add jae insl bound imul outsl outsb inc je jb bound add jb outsb add outsb je outsl insb add insl outsl jb push je gs insl add add outsb je imul je outsl insb add popa add je outsl fs popa jae add inc push push inc je jb bound add imul jae bound je jb bound add imul jae bound je je add xor arpl sub gs jne arpl jb,pn jae jne arpl add data16 gs gs jne arpl jb,pn jae jne arpl add je add popa add popa fs jns add je dec outsb addr16 add outsb je xor push jne je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add arpl imul je insl cs gs add je push push inc cmp inc gs je imul gs add data16 inc insb outsl arpl outsl jo add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl dec outsl fs add je dec outsl fs add je inc jne insb jns jne insb imul insl add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul je add js push jb je add imul insb add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 dec push jne jo jb dec outsb imul add imul jae je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add add je dec popa insl add je push gs add fs outsb imul gs popa jns jne add je bound arpl gs dec outsl arpl imul insl jo jb bound inc outsl outsb arpl add jb popa jns inc gs popa outsb imul jae jne arpl popa insl gs addr16 inc outsb je jns outsl imul push outsw add jb inc insb outsl jae outsb addr16 jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae outsb add outsb je popa outsb fs gs popa fs dec outsl popa add jo imul add outsb add insl bound dec outsb outsw add outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul outsb arpl popa arpl jns push jns je insl cs arpl imul inc jae gs bound jae je push popa bound outsl jo dec inc outsb jne gs bound push jns je insl cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl dec outsl popa add outsl jae add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je inc push push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add jb outsb addr16 jne insb fs inc jo outsb add je imul pop inc outsl arpl inc gs popa je add je push popa bound fs push gs popa je add jne je insl inc je jb bound gs jb jbe fs dec inc outsl outsb jbe jb imul jo inc outsl insl popa imul push push gs bound arpl imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je dec popa insl add outsb je imul inc gs js arpl imul insl bound jae je inc jne outsl push arpl gs outsl fs jae outsb fs popa jns jne add je dec insl popa add je push imul pop push imul add je inc jne outsl push arpl gs imul outsb jae dec outsb jbe imul outsb popa bound imul jns gs jmp lret scas les mov add push sbb sub add add add sbb adc add add or add sbb or or mov pop push sbb mov push or and add adc sbb or add or add sbb adc add adc adc or push adc add adc push adc push sbb adc add add push adc and add add or and add or add adc add add or push adc push and or adc add sbb add or adc or adc or add add and add or add or add add or and add push adc add add add push adc add sbb add push add add push or aad cmp adc add push add sbb add push add add add add add add or adc add add adc add add and add and and add and adc push add add adc add push add or or add adc or add sub add adc add push add add add add add add adc add adc push adc add add sbb add adc add add xor adc add or add push add cmp add push add add or adc add push add add add adc add push add or or add add add add add or add or sub add add add xor add xor sub inc or add sbb sub add adc or push add adc or adc add push add dec push add adc add push add or adc add push add add or adc add push add dec add or add push add push add or add push add push push or add add add add add adc add push add dec or push add add push add push jb jo outsl outsb inc js gs imul ja add add push sub add cmp fs sub sub sub bound cmp xor add add add add gs outsb popa jb add or add add add add add add xor xor xor xor add and add sbbb add add add add adc add addb add sbb and or and add add push pop adc sbb or sbb add add or add add add cmp subb add or sbb or cmp add push add mov and push sbb add push push or add adc or or add addb add addb adc and add add wbinvd or or or or or or add or or add or add add or or mov add add or add sbb cmpb sbb add pop add add add add pop add or or pop push or or add add add add pop add or or or or add or add or or pop add or pop or or add add pop sbb sub or or or add add add add add or or add add pop pop or or or add pop add add add add pop add add or add add add pop and add pop push or add add add add add pop add or pop add sbb and add addb add xor or adc or push adc or adc add or or adc add dec add flds jge pop add sbb push pop add or or or or push add add or or or or sbb adc sbb add push push push or or or or or pop pop or or sbb and sbb or cmp or sbb add add inc add loope or adc add add or sbb and add and and add sub add add adc icebp or or sbb add adc and add cmp pop pop or cmp or or adc or or or or sbb pop or adc or and adc adc or and adc sbb add push or adc add add test and add adc add add sbb or sbb adc or adc adc or or sbb adc pop or or or cmp sbb or add sbb pop or or or or add adc sbb sub adcl adc sbb cmp adc or addl sbb or or push push add inc pop adc push push push or sbb adc and add or add add or addb add add sub adc adc add add add sub push or sbbl sbb or or or add dec push and add orb or and add push or pop or or or or push push and sbb sbb ja inc in dec (bad) jne or stos flds add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc popa cmp pop xor ret mov ret mov ret add add add add add add add add add lcall add add xor popa add bound arpl bound cmp aaa add add add add add add add xor add data16 xor add add add sub add add xor add data16 xor add add add sub add add xor add data16 xor add add add sub add add inc add and add data16 xor add add add sub add add add xor add data16 xor add add add sub add jecxz add and add data16 xor add add add sub add add xor add data16 xor add add add sub add add enter push add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret (bad) icebp lret jne scas dec lret sub (bad) pop sub mov shrb (bad) jp out jecxz jge (bad) add add add add cmpsb sub mov movsb test inc pusha dec add and pusha lret dec dec aam mov lods xchg or inc mov roll lret xchg jl sub rep sbb sub popa sbb mov ret xor ljmp ja cmp push mov int3 roll loope add xor or sarl add add or cltd cmp pop dec jp pop jns (bad) sti test adc or scas out repz sbb imul mov lock ffreep ret mov das sbb push cmp loopne mov jge push jbe jp pop xor cmpsb rclb mov lds lcall das (bad) into mov push push stc ret loopne xor push lea nop sbb lock sub or xchg repz dec cmc inc ljmp data16 rorl mov jg adc or (bad) sub test cmpsb into stos mov jp ljmp inc xor fsubrl xor mov leave add bound cmc stc sub (bad) addl sub adc sub dec (bad) or stos into push mov cmpsb mov push test add dec setge imul je add sub fidivl inc repz jbe mov dec cmp push shr xlat lds cltd and fldcw iret inc push cwtl imul jno pushf pop sub push sbb fadd mov jbe mov sub sti inc lods mov std cmpsb jmp cmp lods (bad) sbb rolb iret inc outsl into in xchg out inc shl out (bad) dec mov out cs int3 pop jle adc cmp ficoml ja pop jp mov cmp pop inc ljmp pop push pushf jno je outsb pop enter jecxz and add cmp cmovs stos mov fsubl aad mov inc sarb mov and pop sub or xchg adc icebp sub cwtl lock xor rcll push stos pusha sbb rcrb dec push pop xchg or (bad) push sub sub lock sub popa add adc cmpsb mov dec faddl or cwtl les (bad) imul dec cwtl enter lcall fsubl dec stos (bad) mov pop lds sub cs mov xchg call push dec scas cmp stc es adc sar jmp (bad) cltd ret pop cmp addr16 lret rorb test call sub mov pop push xor scas xchg and into ret pop shrb test inc cmp leave not lcall test (bad) mov ds orb enter fstpt cmp pop ret jns ret sub xor rcrb sbb mov adc (bad) jbe aaa popf ljmp test jmp jp lds xchg adc xchg (bad) xchg mov sub in cli (bad) cmp add push inc push inc imul stos fidiv mov sub scas fs pop dec or loope repnz les sbbl xor (bad) in or call nop mov xchg pushf or sbb iret add jmp mov sub (bad) or add in xorl (bad) cmc pusha out aas mov adc pop cmp int in pop addr16 xlat ja mov and sub (bad) jmp ffreep adc add adc mov dec out cld lcall int3 in insl pop (bad) pop mov ja in test mov mov loop stos inc sahf fcom mov sub imul xchg jb iret cwtl nop scas mov movsl hlt xchg fs aas aam push add cmp je call imul xor jmp cwtl fst sahf outsb sub cwtl mov dec jecxz cmpsb aas xchg cmpsb fcomi jo (bad) (bad) and mov mov rcll push les inc mov cltd lret into sub stc and xchg shr xor mov mov or dec pusha jl (bad) popa mov and (bad) push fisttp fcmove mov into out cmp rol mov mov push sbb (bad) mov jo lock leave cmp add repnz dec cmp cmpsl push loopne mov dec ficom jbe mov jmp (bad) xor pop or cmpb add inc divl jecxz ffree fwait insl repz movsb das push cmc sub dec stos mov mov fimull sbb pusha mov mov or jmp push arpl rep dec pop inc pop dec scas xchg xchg xchg int3 sbb add push imulb test inc or jno mov mov add dec mov adc cmpsb cmpsb mov mov push jle test pop jo push lds push push in and pusha aad add aam fbstp sbb movsb scas (bad) add xor xor sub sarb sbb leave popa sub out jmp push and leave into or divb push mov call xchg lds je or cwtl sar fwait call sub inc outsb cmp lea jle push cmp cmp cmpsl push dec add and leave cmc lock (bad) adc fisttp popf inc inc mov jno push sub (bad) mov add add in pushf mov pop inc inc inc mov xlat pop mov inc xchg aad mov sarl push push mov mov cs outsb mov (bad) lds pop loope dec mov lds dec mov pop data16 in loope stc mov ret mov and imul es test gs fs pusha dec jnp shrb mov sub popa jne dec out scas repz inc popf addr16 push int3 mov les adc adcl (bad) imul xor jecxz lcall cmpsl loope das adc pop xor and fimul mov push xor stos dec test cmp icebp add ror es cmp sbb fabs js imul jmp gs sub outsl popf push ret pop les push movsb cmp adc pushf (bad) xor push mov pusha mov sbb stc jl cmp cmp aad xor pop push pop xchg inc jns sub pop cwtl push pop add xchg ret popa into cmp (bad) mov subb xlat mov addl inc jns test xor fs sub pop pop mov xor in imul pop or pop sub sti test sbb in sub js cmp push sub shll stc push loope dec (bad) fdivrs ss jns cli out cltd cmp jge cmp imul push adc movsb iret or pushf mov xchg (bad) cmp pop fsubrs popf lret add js pushf push out and loop call addl lds cmp sarb dec and popf les ficoml ja adc insb adc aas cwtl xor pop fistpl mov mov dec shl scas jmp dec cld xor cltd loope pop push (bad) test push push jge push mov inc jmp aad dec jnp push in cwtl mov insl js rol arpl decb pop lods js insl ljmp test push push ret jge cmp je cs fistp or adc sbb data16 and stos (bad) cld fs sbb jge mov inc or vpsllw fwait mov sbb add sbb ror aas jae jns sbb in je daa lock das sbb rcll sbb shll das xchg pop pop jg movsb sahf and add xor (bad) jbe push bnd data16 pop push jle xchg addr16 dec (bad) pop js inc push lock fimul clc push add das (bad) xchg pop jb mov sub xchg mov rcll adc mov jae jle xchg loope mov dec push shrl (bad) stc mov jae xor addr16 imul (bad) loop mov jp inc fstl inc jbe loop in in sbb pop push jae inc es pop jns fidivrl (bad) xor daa cmp xchg sti xchg test addb push int3 adc and jge out fstps movsb dec sahf adc xor inc push jle xor cltd jno arpl sub dec mov loopne stos (bad) cmp adc dec ret aas testl insl lahf data16 fisttp mov mov pop andps mul pop rcll inc cmp mov dec loop xor mov je pop cmc pop test xor xchg and mov mov adc idivl xor ret jl cmp ret xchg push mov or adc cmp inc insl cmp pop test inc popa out test xor imul (bad) test xor out insl inc gs out insl jl decl inc mov pop cmc inc stos in xlat xchg push mov test fistl jne cmp mov fisubrl jg inc sub xchg into mov pop inc adc jmp inc iret lods repz test pushf cmp push pop fimull and pop pop xchg ficomp or inc push mov into cmp imul cmpsl mov sahf popf push mov loope lcall sarb call sti gs pop test push shll repz mov add aad sub adc inc add or bound cmp ret mov push mov flds or and test dec fwait mov ja outsl aam push (bad) mov push sti xchg fwait mov jecxz cmpsl test jno dec jmp addr16 flds and in sbb fisttpl push je int cmp and jmp ds or cmp inc sbb mov fcoms xor (bad) fdivrs push inc xor xchg pushf jnp nop jnp sbbl inc and out push xchg pop xor pop cmp fldcw jle call mov insb push jmp ss int sub movnti out inc inc sahf sbb mov repnz adc push or add in faddl or (bad) popf cmpsl aas dec push es push xchg inc shlb roll push out and mov and jl cmc mov adc shrl std out sbb inc insb jge cmp sbb add stos inc frstor in dec cmp popf jne and int pop pop push cmp push sbb add ljmp iret dec mov dec test cmp pop pop mov jno jle shl scas push mov hlt shl inc or call xor das divl out jb push cli loope xorl jmp sub lahf mov cmc dec adc dec test lahf inc int fdivl pop call jle mov mov cmpb mov call cmp and add out cmp jne lds pop iret cmp jnp ljmp loope ffree das (bad) das insl lds jbe jo daa mov fcmove mov out inc push pop xchg adc sahf loope lret cmp add test in jns cltd or andl xor add (bad) jb std mov lret jg inc push (bad) gs sbb int jle sub in das jne out push sub mov push sub cmp xchg lahf jbe mov adc xchg inc inc aas rol or and dec outsl mov js inc loopne in cli je adc sbbl push dec mov push mov mov mov arpl xor (bad) popa push icebp xor pop call ja outsl mov daa lret sub mov sbb lds in je fwait gs add dec pop mov (bad) push rorl xchg jno dec loop es fnstenv cs and icebp cmp xor push dec cs int pop and xchg fcmovb fisubrl frstor push dec mov outsl sbb xchg mov dec (bad) aaa sub scas dec movl xor xchg addl fmulp push aaa adc dec aaa jb lahf add sbb aam mov adc xchg lret pop iret push mov pusha mov sbb inc call aad int3 mov mov cs pushf sub xor (bad) add stos fdivrs cmp movsb push (bad) mov sub test push or iret sbb aaa or xchg or mov adc aad mov xor jmp lret lcall hlt mov outsl xchg jo mov aas cs jge cld mov xor shlb mov (bad) mov addr16 loop pop movsb sbb and jle lea and cmp adc lcall xchg ret add mov pop les push push pop fs pop xor inc cmpsl les mov push cmpsl pop push sbb pop mov (bad) mov and scas imul pop cs aam push icebp sub ficomp xchg iret cmpsl inc into sbb inc xchg stc mov inc pop sarb outsl outsb rcll and push sub xor xchg cld jb cmp xchg xchg mov inc mov dec and movups aam hlt test fs aaa or mov xor clc fstpt pop aas xor addl adc mov shlb (bad) cmp sbb sub fmull xchg or lea xchg mov fadd sub lret sbb (bad) in mov mov pop dec mov cmp inc icebp sti pop jns mov pushf out sub inc hlt mov inc sbb (bad) jne mov inc mov sahf test lods inc lock in add inc ss outsl fildl push out push ds pop movsl push cltd sub loopne cs test xchg pop cmp movsl sbb loop mov (bad) mov mov lcall xchg loope jne inc idivl pop push mov dec xor xor pop cs xchg shlb movsl mov fs mov data16 movsb fadds xor je pushf nop xor (bad) mov xchg mov dec cs lock pop fmulp mov dec stos jbe dec sbb xchg pusha push outsl aaa orb into mov add ror sub xchg mov xchg dec dec mov fcmovb insl pop jo mov cmp sub jns fld in in pop jae pop sarl sti mov add test aad mov repnz add popf (bad) cmp add mov cmp adc jo bound movsb mov mov lret into inc rorl scas shll aam clc mov fidiv loope icebp lds loopne or or jmp pushf and mov pop mov lods imul fldlg2 mov mov shld stc sub xor add std mov int (bad) call sbb jp xchg dec mov xor and dec int cmp cmp push scas and jno push cmp inc pop mov mov sahf out icebp add push rcll std pusha shll inc mov pop aaa loopne pop (bad) js mov push add xchg test lds test pop insl inc test (bad) push or sub fmull dec dec add (bad) or js sbb or cltd ljmp daa sbb jae cld xchg lods add sbb rcrb out jmp les pushf idiv mov out in out fimull sub cwtl mov add in xchg aaa sub xchg mov popf lcall shl hlt pop stos jg add lahf jmp or push mov clc add outsl imul pop jnp mov imul jbe adc jnp mov in lds xchg push sub or mov push pop outsl jb add das xor fwait popf movsb loop jne lret out or lods je imul cmp and mov xor pop loopne cmp lret bound pop pop lods jae (bad) test xor in xor lock notb test sbb (bad) out xchg out mov cmc in push in xchg pop mov cld cli mov imul (bad) ljmp push jae rol ret arpl add scas into out or (bad) push and jmp mov lahf sbb sahf pop stos push lahf inc or insl adc cmp jle movups or hlt (bad) test xor (bad) aaa jmp inc fnsave mov arpl jmp lods xor and call sub loope std lock sahf sub repz xorb push addl test inc lods out roll mov mov pop xor ret pop mov js fisttpll xchg mov sub push out add mov mov ret outsb xchg mov fistpll jge lcall dec xor push fs sbb addl or lods push icebp ret (bad) jb outsb add jmp bound xchg xor fisttp or fnop xor pop pop inc pop cltd jmp popa lret mov lods adc mov cmp mov shr imul sub cs sub mov mov xor fbld mov icebp cmpsl mov sbb xor imul cmpsl cmpsl sbb icebp in fld in test fcmovb xor add out push (bad) testl inc mov jl mov aas mov lcall dec xchg mov fs adc imul mov out and pop adc jnp bound jl jno mov iret mov rorl (bad) hlt mov push movsb jnp movsl iret nop dec pop and loope fdivrs inc repz dec jbe xchg mov add inc pop jae push pop add mov mov jecxz xor xchg cmc in fimul cmpsb push in inc mov xchg add icebp jmp adc lahf jmp aam sbb outsl sub push jnp or jmp (bad) xchg scas xchg divl out push add rolb and cmp push inc sbb call fadds dec jae jp bound mov inc aad push mov lods idivb ss negb push pop fstpt xchg ja shlb roll pushf es test stc fidivrl insl mov fidivrl aas inc push xor jmp mov leave nop mov dec ficomp es dec (bad) stc mov fimull in call and add adc pop cmp xchg xor test (bad) dec pushf (bad) movsb stos add mov pop cmp add lock (bad) loope xor mov movsb mov jg (bad) mov in orb mov (bad) push jp pop std dec js jo sbb inc jns xchg mov dec sbb stos (bad) movb and cmpsb dec xchg pop stc push lock inc popf movsl jmp (bad) cs (bad) cmp dec cmp or aaa out (bad) iret fstps add push jge add mov add popf rcrl inc cmpsb mov xchg pop dec je shrl mov inc sub std mov sti in dec mov movsl cmp insb das xchg or int3 dec pusha sbb cmp insl pop scas mov mov pop xor and xchg int mov push scas inc sahf fnstcw lret jg push mov push lods or push and mov (bad) inc sbb add sub inc push lahf cmp jg cmp or cli fidiv jnp (bad) xlat dec test std fildl pop add add dec jbe stos pop jns sahf mov clc fmul clc sbb lcall scas (bad) in xchg dec mov popf lds add (bad) nop push imul jnp outsb (bad) in aam mov xchg cmp mov push movsb cmp pop ret xchg out push dec (bad) mov push sbb orl scas movsb lods call sub sbb pushf stos lods xchg push dec xor xor jl push gs scas xchg jp in fisub fild or in cs mov (bad) lods push push xor test push cmp incb outsb addr16 and movsb mov (bad) mov je sub (bad) mov mov lock add push sti stc es rorl inc orb xor iret dec gs mov push mov sbb xor mov inc xchg push dec shll cmp (bad) fstl jge pushf xchg jmp je clc test es mov rorb cmp mov call lret jnp adc pop dec repnz mov leave imul sbb jle xor cli cmp mov jle inc jp (bad) xchg add mov xchg mov and push mov mov pop push out faddp aam ror push jae jl push xor inc repnz leave popa repnz je andl and jge int inc stos mov stc inc sub shrl sbb xor xchg mov dec mov pop push mov cwtl pop fwait insl adc cmp dec (bad) push xchg test inc add scas jl inc jl (bad) scas outsb push repnz (bad) aas mov rclb inc push dec dec jb or push data16 mov push pop sahf sbb pusha sub xor js inc pusha mov (bad) lds mov aad jg inc mov pushf out popf pop cmp (bad) mov adc push dec inc jmp lods mov pop gs in sbb add and cli loope sub ret pop push (bad) cmc test inc dec and and jns out mov sub push popf cmc stc in daa repnz adc (bad) clc xchg and cmpsl sbb push ja push ret in push jp data16 imulb hlt addl add leave xor lret arpl lcall arpl adc push jns or pop loopne jae pushf ficomp lahf mov rcr repnz pop add mov cmc fistp popf lret hlt and lock call outsb pushf cltd jp andl and xor dec cmp dec mov sbb fwait mov iret add call sahf sbb movsb sbb cmc gs popa notl repnz dec inc lods inc repnz test fmuls clc jmp call dec roll xor pusha rcll and mov in cwtl insb (bad) jp gs jb lcall dec dec int3 mov imul xor int mov jmp das cmp je lods lcall enter outsl cmp out loop,pt ret pushf out (bad) dec pop pop sub jns out (bad) sub rorl popf pop fsubl or push lds jge adc pop (bad) sti idivb add or int (bad) in add mov loope lret cmpsb (bad) fsts inc sbb add clc jp in add femms or aad insl cmpl out lock stc cltd lea (bad) daa mov mov int push jbe add fadd mov fnop xchg sub fidivrl and or int3 cmc faddp mov mov inc or add daa fldenv pusha mov cld jg movsl inc jge mov and std push sti cmp ret fiadd pusha mov mov fidiv mov stos pop xor mov test in cwtl sarl rorl jnp and sbb sbb sti cwtl cltd loope,pn add push xchg adc xchg lock imul lret jp xchg jo out inc inc movsl xor pop cs push inc cmp popl movsl enter out (bad) mov adc push test inc lea neg pop sbb jns dec adc dec popf out jbe mov push pop aas push xor fist dec pop mov xchg andl scas std icebp loope fiadd cmp aad std ds add fistp sbb push addr16 je int adc inc inc mov adc out xchg lret (bad) aas mov insl cmp sti scas dec (bad) mov sarb pop xor mov pop and mov jecxz add jge dec sbb cmp aas subl cmp mov or add lock (bad) fist pop mov dec sub push out (bad) jle mov xchg fnstenv sub pop ja jl xor mov sbb jmp mov cltd sub lret pop ja jbe nop dec cmp adc lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov xorl mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg imul insl (bad) popf insb outsl fnstenv insb mov jg idivl add shrb add verr xchg cmp xor jo jbe push xchg push mov (bad) xor pop cmp pop dec cmp cmc test sahf push call addr16 outsl daa sahf mov sti std mov xchg cmp out pop and popa sub test jle (bad) mov xchg cld repnz cmp adc bound dec mov jle mov push add outsb fdivrl jge popf fisub test addr16 inc or loopne add jmp push jbe std outsb push and fs xchg sbb cmpsl sahf dec test scas into dec outsb jp mov jp or test mov sbb fcom cmp inc sbb arpl xchg and jl mov xchg dec leave pop cld add fnstsw clc jnp cwtl enter sub xchg lar shrl pusha test lea ret insl test repz lds addr16 test and dec cld shr push push mov aaa popa rcrl dec push mov xchg fimull das mov and mov pop pop cs xor outsl xor xchg outsb hlt cmp dec orb mov sub loope nop aaa xor (bad) stc xor fisubr fs daa sub mov pop int3 lret mov sbbb sub ret sub mov loopne ss cmpsb add inc adc (bad) adc lods inc jns (bad) pop add mov subl or adc inc jns xor enter jbe (bad) xor or cmc shrb sub (bad) js inc ja shrl enter imulb adc stos adc int mov mov pop mov xor clc mov out pop imul (bad) sbb fisubr mov stos pop inc jg xchg and call test sbb mov and inc iret jecxz stos (bad) mov pop test inc sbb mov arpl and lds dec outsl mov cltd cmpsb mov cmpl mov jnp xchg sub imul mov xor pusha xchg je outsl sbb incl (bad) jns fadds cmp sub icebp and rcl jb incl hlt ficom push sbb xor pop scas add pop xlat cltd (bad) inc and test jmp ljmp scas lahf stc and inc mov xor int jbe rcl fwait add sbb (bad) pop adc in test adc repnz cmp jecxz mov scas les jge sbb push add cs mov int3 add mov xchg push mov jg add sbb mov dec cmp jb (bad) (bad) pop fwait rep ds decb outsb flds pop inc bound out (bad) aas (bad) (bad) out in pop xchg xor lahf mov push rorl js (bad) ficomp push xor mov in cmp xchg mov lds sub jle into (bad) jmp mov mov add adc gs imul and pop outsl gs negl fsts mov aaa dec dec shl lds jno fwait mov daa mov xchg (bad) shll add dec xchg jbe mov push or scas and (bad) xchg mov test in mul inc iret js inc cli sub pusha mov std je rcll add sbb inc adc rol dec mov sahf mov stos mov xchg pushl jb xchg pop stos test add push enter mov push sub outsb dec in rcll je mov addb xchg lahf sub and cmpsl loopne mov icebp nop pop movb sbb mov lock aaa or jle cmpsl cmp mov lds inc imulb insl sahf fisubl into jg scas cmp push (bad) jmp sbb dec repz mov shlb lock fwait mov (bad) ss mov stos popf and jp pop popa pop mov movsb pop inc in hlt mov out add daa scas cwtl jnp,pt outsb testl mov mov add sysexit jnp stc test xor repnz mov adc fwait xor nop cmp orl fcmovnbe or lock aam xor inc clc (bad) lock push out (bad) lea add (bad) call jle (bad) push cltd out push rol mov xor in xchg or dec mov popf dec jae add or decb das arpl lea add inc xor sbb or dec xchg or loop mov (bad) sub xchg cmp xchg jo mov pushf inc into push xchg mov mov jecxz xchg cmp inc ror mov push lcall js mov dec pop jo lcall (bad) imul sbb xchg mov or rolb or inc in mov pop mov ljmp mov in jge or pop aad sub sub lret lds scas xor jmp movsl push push pop xchg movsl fcoms xchg add mov xchg repz into int3 stc or mov mov test test lret iret adc imul test (bad) xor add dec stos jmp cmpsl jmp (bad) xlat cmpsb je xchg ss sbb nop xchg and cmp mov jg scas sub ffree mov ficom out ret mov mov pop leave cld imul jecxz dec (bad) aaa movsl cmp loopne hlt ror pop add mov mov lods popa mov imul or xor repnz leave mov daa xchg lock jo pushf in cmp bound (bad) pop xor scas xor cmp nop push and push je mov sbb mov pop xabort push or scas fidivrl dec outsl add xor jge stos out pop mov jmp xchg daa (bad) and cwtl imul test xchg mov cmpsb add inc or (bad) dec mov xor xor push das dec mov lock insl xchg dec push push js rol ss mov mov popf jne or mov jb adc test adc insl lahf repnz adc test adc sar cmp jg dec adc (bad) jne loopne adc pop cwtl mov and lea mov or lods xchg pusha mov (bad) fnstsw push add lock xor popf enter repz repnz jae and add xchg cmp mov mov cmp inc and xor cmp cltd push (bad) mov or adc es (bad) cmp icebp daa and fwait stos xor jle and (bad) rorb jg and xor mov fistpll pop fidivrl sub loop and inc fbld loope push push or ds fisub mov lea lods xor and sub mov cmp ljmp cs mov xor int (bad) adc pop xor cltd loopne cltd mov and push push subl mul outsb mov out mov into xlat mov iret (bad) mov pop lods xlat cld xchg lea cmc pop stos and add outsb cwtl xlat ds xlat xor out int fwait repnz cmp dec hlt lds aas dec mov into les xor enter sbb lea jp pop jnp mov mov adc mov incl aad cli jmp (bad) aaa adc adc xor and adc (bad) and xor mov out and push lods rcr rorb fdivr dec les test mov push pop push pop jge push mov aaa test mov jmp addr16 hlt mov mov cmp lea mov sbb cmp xchg lea cmpsl es xchg ljmp fdivr mov and cli adcl loop inc loop jmp sub inc inc cmp cmp push cmp mov lods leave xor sub (bad) outsb arpl sbb test dec add fdivrs sets or pushf movsl add dec addr16 push out add fbstp repz aaa sbb adc mov test adc icebp sbb out jmp mov fstl mov xchg orl movsl int pushf mov loope jmp gs cld nop test lea xchg push imul mov adc lds fidivrl mov xor pop insb dec jno cli mov test pushf sub or rcll mov xor lahf jmp mov xor mov mov mov out nop jle dec dec jnp mov or cmp jp cmp (bad) pop leave dec add inc mov mov lcall test xchg addr16 add dec inc ret fidivl mov pop adc call jecxz add xchg push outsl and sub sar jb and out outsb push cmp (bad) mov aad and push sub sbb repz jno aaa das xor inc ja lods movsl (bad) mov pop pop mov out cmp test pop out inc or pop dec mov andb (bad) dec rcl mov push mov pop enter inc push fcmovnb or xchg fdivp push adc mov cmpl sub mov and inc es push pop pop mov xchg popf mov jmp mov (bad) dec iret mov inc in cmc clc cmpsb (bad) xor insl enter out or loope jo inc pop mov pop stos popa test pop push push fprem1 mov stos mov js outsl ss sbb push pushf xor xchg out movd out dec xor out dec dec jmp pop jne mov outsl xchg xor pusha push sbb and test in dec mov mov xchg shr icebp inc popa mov cmp psrld add push jmp cmp fistp stc fisttpll notb fiadd popf sbbb sbb enter or mov push mov cmp mov pop lods aas (bad) hlt test sub jne iret lcall ss xchg and mov in popf cwtl adc xchg and cltd jae xchg daa iret inc push fstps sub sbb add inc xor mov mov dec aam mov jl paddw cmp jg fs cmp mov xchg jbe push incl fdivs or popa and popa ret dec or mov cmp ret call out mov punpckhdq push push or xchg mov jg jge cmp pop or repnz fiadd xchg mov xchg fdivs dec loopne xlat popf (bad) loopne cmpsl insl into jle sbb or cmp xchg fwait out (bad) and clc adcl test dec (bad) mov lret and ficompl xor mov addr16 ja lods stos pop mov push aas popf sahf (bad) sbb cmp popa sub inc jno sub (bad) and xor add aas push jl inc gs out mov pop jl adc scas push and fwait test mov mov xor xor and push xor mov in sahf pop repnz add insb fild jbe shrl xchg arpl mov cmpsl and push addr16 popa adc ja sti push cmp dec repnz xchg push ss dec push xlat mov outsl (bad) and aas pop xlat dec mov (bad) repz negl (bad) adc bound or sub mov sub xchg (bad) jle or test arpl cmp jb out sbb int3 mov cmp or adc lahf push cmp imul jo (bad) inc outsb gs (bad) cmp and aaa xor inc and lcall push and or push push or arpl out out pop lcall scas xchg cli in push lds pop jns test out scas lret int fistp jae (bad) (bad) mov or sbb sbb dec repnz push stos push mov insl add xchg push mov iret jmp test movsb push jecxz rcll popf push aad dec xor mov add call out jp mov out fcmovb or call sbb sti aad out pop or ret inc inc pop outsl ret push mov xchg pop jb das lds mov iret jl xor sti mov lods repz add movsb mov test mov xchg adc pushf aaa ret jle mov nop push mov push inc cs adc fistpll mov cmp sbb pop pusha pop (bad) lret ss sbb ja dec jp dec lahf dec or add out fistp xchg and mov xchg jle and sarb xchg jge fs arpl int daa (bad) out xchg cs jnp adc adc lea daa or mov pop push inc adc mov xchg ss mov mov cmp cmpsb adcl jbe jne jnp mov imul outsb jle cmp fsubl shll repnz xchg dec int mov jg cmp jno jp iret xchg fsubrs cmc or aaa es ds push mov jl scas cli jae pop cmpsb jae mov cmpsl out shll add int (bad) pop outsb xchg push ret mov mov cltd xchg xor jae sub clc loope add ds fldt push (bad) hlt pop and cmp sub test mov or leave lcall xor das pop les add xor ds mov (bad) js ret sub lods aad loop inc mov mov jae push cmp inc push add push xchg cwtl pop or push inc addr16 inc xchg ja stc subb or inc mov lods sbb lret pop sub xchg fldl cltd cmp mov add mov sub sbbl adc ret inc inc sub fcmovnu sub daa add push mov test aaa mov loopne mov jl jbe ja xchg cmpsl stc sub lea cmpb lea cmp insl vmovups mov gs sub mov scas sti jo sbb in rclb in add mov movsl cli jmp mov or int3 adc aas push (bad) (bad) int3 lcall xchg xchg push (bad) imul mov stos ficompl cmp jecxz scas mov sub call add leave fs cmp or leave sbb jmp mul jns jno mov lds popf leave in mov subl or pop out pop cmp popf test jae or and (bad) stos sbb mov jmp xchg pop jecxz rcrl xchg clc xorl adc out lea mov sbb stos repz lds or jnp pop lret sbb aad and movsl inc mov repz cmp and dec inc std fisubl cmp xchg (bad) push (bad) xlat push divl sbb mov dec rcll xor and lods call cwtl mov mov pop mov pushf push mov rcll rolb iret mov jmp js sbb (bad) negb jg jbe sbb imul aam dec fwait or ds mov jg or enter cs rcll stos jne imul jnp leave jle jle push dec fisubr cmpsl xchg adc lea outsl sbb sbb push jae mov sbb out xchg sub mov movsl cmpsl loope dec popf dec xor in mov adc inc xchg stos pop push mov sub sub (bad) cli (bad) adc (bad) stc les (bad) or in in leave mov jb cmpsl (bad) jbe add adc cmp add xor inc xor push lods push jle das cmc cmp cs outsl sbb or adc push jne lcall test mov mov cmp dec ja,pt inc lods sub std imul cs dec push out inc or jmp dec insl test bound cmpsl movsb popf xchg insb hlt xlat (bad) fldt xchg dec or aas sub call stos imul sbb data16 lock repz sub or jg mov flds lret scas adc lds xor mov arpl jp roll and jmp call inc sub mov ret cs jae,pt xchg ja cmp pop sbb mov fwait or ret or sbb inc dec jp stos cmp pop mov inc shrl adc jnp mov insl jle (bad) jae je pushf xchg add repnz mov (bad) ret mov dec ret inc push jb pop repnz xor out mov cmp push xor push inc je add psrad int3 rdtsc lret cld jbe fdivs pmulhw outsb aaa negb xchg or sti insl sti jge dec lea mov daa lods push mov and flds or int3 loopne push push pop adc xchg add cli and int cmpsb jne (bad) lock fiadd je or jge jae cmpsb fwait ss add add dec push pusha or and dec inc cmpsb test pop jne (bad) cli out mov loopne ret or jo into sbb int cmpsb sbb scas adc fist sub mov mov xchg in sub inc mov mov mov add jp test mov pop or clc or out imul jle repz mov cs xor and aam sub sti arpl mov (bad) adc inc lret (bad) fnstcw jo cmpsl test jae jno cli (bad) pop addr16 daa cmp (bad) ljmp mov xchg ds (bad) or lock dec mov sbb sbb movsl fisubr je scas (bad) dec mov in mov or pop cmpsl in xor mov cli scas sti (bad) ja jle adc (bad) xlat ficomp sbb and sahf xor xchg lods aas into sti scas fisttpll jb pop or repnz mov out mov mov inc jb cld and mov iret in stos sbb les insb fnstenv stc popf mov das (bad) (bad) int3 fcom lahf xor outsl pop pop mov xlat scas ss rol clc aaa inc (bad) faddl sar dec jecxz jb ja lods sub outsb data16 xor pop xchg and ss lods neg mov lcall test jno aas enter pop arpl test cld dec mov out enter (bad) lock outsl xor sbb sub push (bad) addr16 call leave outsl mov in adc cs lret mov mov mov or push ja jle int in push xor aaa (bad) sub jp sti xor or fsts call or xor cmpsb mov roll sbb add or stos jecxz rcr xlat add push aaa mov adc fld orb dec inc daa or mov lea or lret aad sbb icebp ret (bad) icebp add dec fldl cmpsb outsl xchg mov push xor aas andl push dec repz sti xor and mov cmpl insb inc cld cmpsl mov jmp xchg bound mov faddl in dec push push test mov dec xor cmpsb cmc jmp push and mov fs stos xchg ret std gs in out insl sbb gs and jno test insl (bad) std (bad) xchg cmp jne orl jo cltd adc movsl js lahf dec xchg stos jecxz test mov jle test sub rcll leave (bad) push or movsb rcl (bad) (bad) dec int mov xchg mov xchg xchg (bad) std or fsubs adc xchg mov add lds (bad) pushf nop xor bound dec sub fdivrs out (bad) mov outsl sub push pop (bad) jb add mov cmovg stos push and lcall mull or fisubl rcrl mov inc movsl bound pop movsl sub cmp ljmp xor jae sub mov aas nop imul cmpsl fsubl loopne imulb aas adc clc push rclb data16 jecxz sbb sarl mov sti gs inc push ds ja lahf jg dec pop mov pushf sub test sti mov xchg das cmp test insl xchg mov cmpsl inc es dec mov xchg cli push cmpsb je scas cmpl test ljmp aad pop mov xchg sbb or xor test mov cmp pop mov pushl int ret cmpsl inc pushf mov xchg adc cld mov push lock shlb fcoms add adc cmp xchg pop movsl add aaa pusha mov xor jne lods cmc mov ds xchg adc cmp (bad) cmp jae lock pop mov pop or aad test fs fs xor mov and pop lret (bad) adc jp mov (bad) je add divb cwtl cmp loope xchg and mov mov mov xor inc xchg hlt cmp sub inc test xor xchg stc nop clc arpl push (bad) out repnz xchg inc and stc sbb push add xchg cmp and pop xchg jmp xor stos jge movsl int loop adc push sbb mov stos pop dec cmpsl nop push jg inc (bad) sub (bad) cmp (bad) (bad) cltd dec test cli inc sbb push imul mov nop dec dec sub cs push pop and into in out pushl cmp das push (bad) shrl lcall cmc mov add xchg loop mov mov sti xchg ret dec les cmp mov orb (bad) and aas into adc push inc inc fs fisubl cmpsl out mov mov mov adc (bad) or pop sti push mov rcr popa stc mov jb mov popa mov inc outsb out pop push dec lea cmp jne sbb or out sahf test pop xchg sbb scas push and pop inc lods jecxz adc mov (bad) xor sub pop pop (bad) or jo mov pop in fidivl pop sub imul mov mov push repz sub mov jae (bad) cmpsb xlat or pop stos leave sbb add in pop das shl out pushf out sub das lds cmc scas cli jns mov pop pushf adc adc adc cltd mov adc cmp addb popl es cltd lods out test (bad) dec repnz daa pop push (bad) loope in mov xchg xchg shll add iret push bound fisttpll (bad) mov out sti lock sub add add mov out jp jns cmp jmp or pop sti push or dec or inc fsub inc mov mov sbb xchg subl scas xchg push into mov movsb bound or jae insb pop xchg (bad) nop and jle ret pop jg int3 arpl pop or int stc lret in adc pop cli test jp xchg loopne (bad) stos dec mov add lret fildll (bad) xlat sub sahf imul add and inc adc pop sub sub mov in jb cmp jecxz mov cltd sub ret out push mov into xchg imul pop adc add pop or pop pop (bad) rol test nop sarb mov out mov ja mov (bad) ss aam js xchg pop jge push pop data16 mov addr16 xor pop dec jmp add mov mov push jnp stos imul jnp ja and adc aaa pop jmp lret ret lea jns (bad) xor jecxz and sti mov xchg xchg pcmpgtw or (bad) fdivs jmp ja mov icebp in js cmp xchg lods dec repnz movsb cmpsb cmpsl out loope mov xlat xchg mov cld stos test adc stos mov add mov inc mov pop sbb loop nop cmp (bad) sbb hlt or push jle lea int jne out or push enter iret ljmp ret (bad) jae mov push (bad) xor lock jnp (bad) insb (bad) pop cmp fsts jge cwtl sbb xor aam mov lret cld popf push lret sub dec xor pusha push (bad) daa add add (bad) gs data16 push or lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov mov cmp add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and mov insl pop xchg insl fldt outsl mov fcmovnb outsw sahf in dec fwait (bad) sti push idivl (bad) jo add add sbb flds pop cmp (bad) sub pop jl dec jnp inc popf mov in loop mov xlat js (bad) sti stos les mov fmul mov out sbb in popa mov cli cwtl cmp test fsubs jg mov push ret repz out arpl lcall xchg cwtl mov lods pop pop ja leave daa jno inc adc icebp scas dec clc inc add push jb movsl loop addr16 mov cmpsb push adc xchg cwtl lea sbb mov popa or push insl push fsts loope mov imul add dec adc in mov aaa (bad) leave jmp in dec out (bad) jb int mov test push stos sahf jnp (bad) int3 and out movsb (bad) pop sarb xchg scas adc mov mov imul mov scas js leave and and inc jecxz push imul cmp mov mov ret adcb mov pop push add xor mov add pop xchg insl xchg inc aam push cmp cmp xchg icebp daa (bad) jae (bad) lret jbe adc test aas adc mov add lahf stc dec add jns cmpsb add xchg mov cmpsb rorl or adc negb fistl lea (bad) push unpckhps fisttp inc out aam push mov lret or dec mov fdivrl aas mov je jne mov inc mov xchg push (bad) in jmp lea leave (bad) movsl add repnz outsl mov pop or rorb add adc adc in push push xchg mov mov aad aad inc repnz sbb xor mov mov daa add or mov fdivp sbb shr xchg sbb inc enter sar mov popf inc lahf mov fnstenv fwait xor cwtl wbinvd sbb repnz xchg pop xor es les jl pop sbb cmp dec loop hlt fiadd frstor repz push (bad) (bad) pop jbe int pop imul clc jmp adc iret push push lret dec fs mov push stos enter mov or xor pop add adc xor dec cmp lock in (bad) lods wrmsr push and sbb sub jne ffreep lea test jb sbb adc sbb ljmp and jp cmpsb lret imul hlt dec inc mov popf js mov rcll ret cld sub inc add and in pop or pop ja cwtl clc dec fimul jp mov nop jmp (bad) add (bad) mov and nop lahf inc in sub dec repz xor gs out push std add outsb or inc movsb fsubl ret ret (bad) lret ds (bad) cmp xchg repnz pop jns mov pusha dec pop sub push fstpl xchg add add xchg enter mov cli cltd cwtl test lods lds mov pop roll dec push lods mov inc addl mov call push lds jae dec aad xchg enter sub sub lds or ljmp mov stc xor push shrb pop jecxz lret jl mov mov aad in out out scas sbb cmc and inc ret int push lahf (bad) push mov push fmulp aas or js mov (bad) dec mov out stos add adc mov lret mov rcrl bnd push cmpsb inc push out test loop xlat cmpsb ss mov movsl sahf sub or ret das pop mov int mov sub dec imul push cmp (bad) or js sub (bad) loope rolb inc mov mov xchg cmpsl out test pop push aam cwtl inc scas in leave adc jno or mov nop (bad) cltd push push int3 xor mov jmp (bad) div jl mov leave ficomp (bad) lds (bad) (bad) xchg loopne nop add jbe pusha or inc adc sbb (bad) xor xchg loopne inc pop push outsl stc js jecxz movsl ret mov mov pop sahf enter imul scas out dec gs (bad) mov xor icebp adc les and mov sub cmpsb jb push sbb lds dec mov shrl xchg pushf jmp mov push out push aas in cld jae dec aaa outsb inc daa aad ss mov leave pop dec (bad) pop (bad) lock dec push scas ds dec pushf aad and jle mov cmpsl movsl pop lahf inc shr and nop jb sub lods loopne pushf adc sub or (bad) xor add cmpsb vhaddps pop outsl mov mov cmc pop dec (bad) mov mov pop cmpsb test mov outsl (bad) mov cld mov leave fmul movsl sbb addr16 jo stc inc data16 int3 insl mov rorl lahf out aad lods cmp lahf push jo mov (bad) enter imul mov adc aam loope jno into jge push pop cwtl clc lods out cmp mull push call lret jge in lods inc xchg adc push cmp daa xchg imul in pop subl adc ret roll and add cmp add mov xchg mov pop lret leave dec or mov mov cmpsb test popaw inc adc jg test sarb sti push cs sub mov jmp jmp cmc jge test or and pushl pop iret fwait aad mov jnp movsl mov jl or sti hlt and ret add sub fisubrl das and scas push adc jno lret jle stos xchg aaa cs (bad) loope mov or sub movb cltd enter fisubr (bad) into popa call ret push sbb mov add arpl add fisubr pop pop es xchg loope (bad) std sub mov xchg leave addl aaa enter scas mov inc xchg repz xor out dec inc gs push adc or adc dec in or cwtl test xlat xchg daa jnp out mov or js and sbb wbinvd fistpl ud1 xlat dec insl scas push cmp std xchg push mov (bad) call aad dec cmp jb xchg mov pop sbb pop xchg out xchg imul xchg pop push xor mov aam and lods movsl xchg add or cmp in movb loop aas (bad) lock jae push scas mov pusha xor cs push lahf scas lods das mov or pop xchg dec imul shll dec xor aad ret mov mov pop inc cmp pop cmpsb (bad) je cmp mov into fnsave mov call je jmp out inc pop lods push outsb leave ds push roll or or ret cmpsb lahf fsts mov out mov aam pop adc (bad) cmp in int roll adc leave mov scas sbb pop mov (bad) out add or sbb jo icebp cwtl testb inc mov es out daa inc push xor cmc jae and popf push pop jmp sar insb fs mov pop cwtl (bad) sti call scas leave data16 clc cmp lahf mov rcll dec mov mov addr16 iret test das mov data16 mov test fmull push lock insl mov cmp fsubs sbb xchg cmp push add es or lcall cmp xchg pop out shr pop imul cmpsb sub mov xor adc sub into jae nop mov aam xor adc aad mov pop lods mov rcl xor (bad) jp sbb (bad) mov ljmp test cmpsb cmp sub repnz xor bound sbbl inc adc push mov fcmovne jl mov jnp xor cmc add imul xor adc mov jp movsb or popa js cmp (bad) lea and and xchg mov lods sub (bad) cld movsb mov repnz mov test cmpsb lea or pop xchg sub xor out pop cmp (bad) divb leave loopne pop or sbb mov shlb pop cld dec inc repz push loop test pop sti mov (bad) lock out hlt cld fisttp cmp cmp stos xchg imul xchg cli xchg inc outsb xchg xchg hlt inc in pop mov pop adc arpl dec push je add scas xor jbe movsl pop das fimull pop orl cwtl mov jae mov cmp mov ljmp pop or adc in imul and cmp push push lret push sbb and lret stos sbb (bad) pop (bad) and je outsl out inc clc cmp jb pop push mov mov sarl lock aad sub adc imulb fmul inc pusha ss xchg mov pop insb mov sbb stos jle vpsrld adc pop dec jl out pop sbb mov sahf gs cmp pop inc movl and loope mov scas loopne push icebp imul icebp in mov sub lret (bad) dec cmp (bad) aas cmc mov sbb (bad) fwait xchg dec cmp dec js xchg (bad) ss pop dec (bad) ds jle push test inc cmp push inc pop jbe test or sbb and jge out or lods sub es adc push and lcall aas mov outsb dec push hlt repnz add add out sbb cmpsl ds lods push (bad) (bad) mov iret mov aad ds add les add and mov jno jmp (bad) mov push mov xor loope inc xor inc addr16 adc cmp cld je add mov xor push cmpsl outsb mov mov pusha pop pop ficoml cmp dec inc jns mov mov mov inc test int pushf sti xchg mov insb cmp add lds stos add jg test push ret lahf adc mov nop lea mov pusha cmp add jmp sbb pop popfw aam ret sarb sbb xor or ljmp jge adc xchg fsub pop and and or push imull push jmp leave pop pop es push jecxz sub dec add (bad) xor shrl dec stc mov das addr16 push and or lret jo xchg pop je hlt jle lods cmp sbbl pop mov pop rcrl xchg in add push or mov dec add arpl cmpsl mov dec das xchg insl push in pop xchg push lret ljmp out sbb push test cmc frstor and push xchg icebp pop scas pop adc xor jbe aas jb ss cs mov jle stos jbe jg int add fisub push inc ret mov leave or test xlat xchg jbe pop outsl fdivl and out ret and ret rclb jb xor stc pusha fstp fsubs cmp imul out pop inc mov int dec and cmp mov rorl pop xchg cmc push inc pop ja push and in pop pop loop sarl jnp ss adc fimul sti pop dec rcrl push rorb push test or aad pop test sub mov xor and jo push mov pop andl sbb or mov cmp ret add sbbl out aaa lret cmp popf sub fidiv and and and xchg cmp je add adc shlb mov pop sbb insl ja pop ja mov (bad) xor lret add (bad) xlat cmp jnp int jmp mov push imul leave mov stos call pop fcomip outsb xor pop ss xor sbb xchg movsb push dec out lret inc stc cmp iret stc std add fistp sub push sbb xchg jnp xor push scas mov push mov dec lock movsl push adc mov jno dec add xchg xchg cmp add and mov add popf xchg lods out lods sub ds cmpsl (bad) adc xlat fs push xchg cli loope sbb push je popf mov adc outsb in lahf adc aaa hlt lahf jo std mov aas aad xchg push outsl adc and cmp cmp lret std push or xchg testb or xchg lret in push clc push or sub dec js mov push mov or ret or xor (bad) fwait sbb xlat push or dec popf mov cmc pushf xchg and xchg xor sub cmp or clc (bad) mov enter mov in and push add adc test fist cli and popf cmpsl clc jns sub sbb cli test adc mov daa or int lds push imul sub mov (bad) in sbb pop jb push mov fildl bound pop push lods push scas xor enter dec jg insl pop sbb lds dec out mov adc add jae hlt xorl lds (bad) cmp clc pop pusha inc ret loope (bad) int3 mov push test xchg adc jmp sbb subb adc (bad) dec fwait popa pop das push out mov add dec (bad) lret jb inc adc fistpll xor mov xor inc aas ret (bad) pushf jp cmpl cmp inc add insb add jno push mov hlt xchg mov sub outsl inc fildll cmp ds fcomps vpsrad mov push or les repnz cwtl push fistl inc or scas xchg out shll bound shr dec pusha mov fidivrl adc insb and ror out pusha mov test add sbb xchg inc aaa in pop cltd into outsl cmpsb inc lods clc fsubl jmp jbe dec mov imul (bad) mov mov jg xchg pop xor push jle xor cmp int3 cmp inc pop cmp adc addb inc test adc incb push adc mov push sbb sub dec sub (bad) pop hlt fwait test xchg sti xlat or (bad) mov adc jne fucom adc pop repz pop xchg pusha xor or push adc mov test mov sub mov idivb xor xchg fadds pop add sub and imul dec outsb add adc inc dec test xor xor xchg outsb (bad) (bad) out scas fdivrl inc mov je lea jp sbb out push or and xchg fwait ret rcrb fwait lods push push insl add cmpsl mov cld (bad) push adc outsb jno push in sub popl mov cmp cmp fadds mov sar out xor mov insl xchg or and fldt adc pusha cmc mov (bad) ja push insb dec push jle fs push hlt xchg push repnz pop adc mov mov divl pop (bad) int3 lcall mov shl add xchg mov out negl mov punpcklbw (bad) xchg icebp call int mov pop pop push icebp sti sahf ja stc scas std arpl dec xlat scas aaa jb push inc dec push test and jo pushf cmpsl rcll xor out call push sbb xchg lds mov mov jecxz (bad) dec and adc cli (bad) fisttpl lret ror sti ror nop pop push rcrb (bad) mov xchg roll jae out test ret or cli dec dec xor stos pop scas adc pop mov sahf xchg (bad) dec mov xor lea (bad) shlb fwait sbb test sbb mov inc je inc es push std jecxz out or mov xlat ss test and cmpsb sbb popf inc mov xchg xchg pop jb loopne jge sti dec xlat div mov outsl jmp ret or lds mov popl xchg and in popf fbstp aad nop mov and cmpb stc call mov push or push adc inc add sub repnz sarb int3 (bad) jg lret mov (bad) sbb xchg (bad) (bad) xor or insb mov dec neg add lock jae dec pop icebp or and rolb daa mov ja stc mov bnd xor rclb push mov mov jno jge dec inc shl sub push test shll in adc loope jne inc push push pop sbb pcmpgtb cmp sbb mov jnp aas mov sbb cmp xchg push jl mov movsl or hlt add loope rolb add xchg cmp test daa incl xchg jb icebp (bad) cmpsb push jo mov pop addr16 outsl jle jp mov cmpsl insb js outsb in int3 shrl and in sub jge cld adc popf shll loope mov fistp iret jne mov (bad) ret sti mov (bad) cwtl add cmp fnop jle mov or dec sub adc jne pop sub test push in jle mov mov adc mov fs cmp xchg aam dec pusha lock lret out mov inc popf push mov cmp push push pop cmpsl sub repz fldenv push ret in les mov mov out cmc cwtl das dec push mov pop rorb xchg and mov mov out jl test add rcr push aas (bad) icebp xchg stos dec add mov or mov add out loopne setl push jno mov dec mov scas or cltd daa lret enter cmp dec out test lret inc cmp push (bad) jae xor inc mov mov cmp sbb pop cmp int mov lock xor sub mov push pop dec hlt addl dec je or jecxz mov cmpsl mov cmp jle jmp mov int lock test stos mov dec popf push mov mov orl sub std addr16 int3 xchg jo divl (bad) (bad) in pop dec icebp jge mov out pushf in cmp lret test add mov int3 and fcomps clc cmp in cld push push mov stos call dec lock sub push test imul or adc repz mov and cmp imul jl push lods push es xchg loopne mov xchg xchg test out popa sbbl dec jns xchg inc in cmp inc add (bad) mov adc out pop ret inc and in jb in sar and xchg mov cs inc xchg xlat adc xor sbb mov sti xchg inc dec jp int mov cld (bad) divl mov stos mov pop cmp inc gs mov cmp or mov movsb movsl or cmpb add jae fcomi icebp pop in cmp xor stos or inc jmp dec inc fmulp shl sub xchg jb sbb add inc outsl scas pop push (bad) pop repz (bad) in lds test imulb xchg jns (bad) xlat mov rorb and in adc pop xchg shrb icebp out jg in scas lret add push mov sub clc stos sub out lret adc fucomip scas mov dec out jle mov mov repz repnz mov xchg call dec sbb or jo repnz (bad) jecxz rorb aam test bound stc mov pop js leave in loop mov and mov or or lods lahf adc inc dec in ja data16 inc in jmp mov inc pop cmp (bad) imul dec and into lcall jp fistpll stc hlt mov dec jne (bad) adc in pop sub adc popa cmp out lcall sar fcmovb cmp rcll test dec popa inc (bad) sbb jb jno mov popa test cmpsb and mov or dec jge fs leave sahf jl mov jle stos dec push orb adc jo imul and mov mov push hlt fwait mov cmp sbb fistp adc xor arpl and sbb mov sub shrl cli jno dec xor repnz test mov adc jbe push xchg mov hlt (bad) pop pop nop or and (bad) lahf xchg jnp neg and pushf arpl sbb ds xchg shrb hlt inc out mov jno cmpsb ficomp dec rsqrtps push (bad) dec sub stos mov (bad) jb inc and insb cltd jecxz loop fildl push test lock mov add test popf fisub add xchg (bad) stos in sub test and mov popa mov ss loopne inc xchg xchg data16 jmp push sti or arpl cld cmc cmc xchg add cmp daa dec addr16 xchg lods adc lahf xor pop push loop adc sbb ljmp dec movb or mov adc add popf inc xchg dec cmp stos xchg dec push clc cmp push lods mov lea sbb lds aaa xchg sbbl popf shlb scas push jmp ficom out push negl jno adc repnz cmp mov cmp dec jnp lods movsl sbb loope sub popf nop cmp pop sarl adc fmuls icebp sbb sbb and cmp mov ljmp bound and mov decb lods ret pop dec fistpll cmp jle sub loope ret sahf adc incb add add jne cs sti (bad) xchg mov cmpsb xor mov int3 ret notb add adc lea mov (bad) fidiv pop xor pop aam notb pop addr16 out pop mov dec jae push inc xchg or jae jle ja out sbb popl mov (bad) cmp mov jmp and mov xchg adcl ret ja jne ss lods lods (bad) jne inc testl (bad) (bad) aam jnp je lds aad scas or cmp or adc xchg sbb push jmp hlt xchg lcall sbb and repz push lock sub push push sti iret mov negb movsl adc enter pop or ja jmp pop fs xor xchg pop clc inc pop and fwait popf mov fidivrl xorb iret es cmovns lods sbb xchg and jp xor (bad) push fbld add repz dec enter addr16 pop shlb (bad) jo fsubl and dec sub add xchg xchg cmp cmpsb and iret xchg cld test xor sbb adc addr16 mov adc jne test add jl xchg jnp rorl nop sahf test pop fcoms sarb insb inc push loopne jb (bad) cmp mov and loop xchg jno aaa loopne (bad) mov mov mov test xchg xchg bound sahf hlt (bad) sub xchg dec movb xchg ljmp cmp and movsl popf fidivr test gs dec sub enter mov and lock cmp cmpsl pop jge repnz loope aad adc pop push mov mov sbb ss lods jle add lahf add push xor rorb or in aad jecxz cmp mov enter insb sahf enter xchg and ficompl adc push push popa dec ret cmpsl out in fdivrs imul jb push add in cmp push mov xor cli mov cli movsb mov xor (bad) int jl push fsubrs mov (bad) pop jae sub pop pop and jne dec and dec push mov mov add sub mov push dec sbb bound es or push jns sub daa mov xchg stos in mov push cmovne jg inc mov or cmpsb inc popf jno fisubrl jns (bad) cmpsl dec inc inc test cmp rcrl lds cwtl insl std inc add data16 jge scas lret mov outsl push stos xor imul daa roll jp mov lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov insl and push xchg rolb dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb adc (bad) idivb fnstenv insl imul stos in xchg insl fstpt mov add or xlat push int pusha mov ret and pusha add dec nop and push push xor fs aas mov fdivl out xchg pop jg sub test sysret dec dec mov jecxz rcll mov les adc popf idiv mov fidiv pop pop int gs movsl sub dec call lds icebp adc sbb cmp shll and clc and hlt cltd pop dec xor fiadd aad xchg jno gs adc mov cli aaa pop (bad) int lds mov mov inc fstl sub mov neg inc sub xor fwait je pop mov xor push loopne push or into xchg adc enter (bad) (bad) dec and mov and push cmp lods shll in jne cmc int cmpsl enter mov cs xor jno inc mov mull lock sbb test xor incb hlt rcr mov loopne (bad) (bad) iret popf cli sub or insb je pop rcr sbb push enter fbld divb cli cli sub fwait out inc sarl aas xor sub scas and loop push imul xlat push inc cltd stos add lds out and mov jle jecxz ljmp sub and mov xchg cltd jbe clc mov gs pop push mov ret dec cmp pop (bad) jno jp (bad) xchg lds lcall (bad) mov dec sbb cmpsl lret iret push lcall dec nop sahf out cs mov repz scas sub mov or cld lods cmp or or jl jb cmp dec mov jle and fmull xchg adc scas lods adcl adc cwtl loop popa xchg cmpsl jnp adc pushf punpckhbw out ficoml outsl sti mov push mov add les insb movsl mov test sub pusha (bad) into xlat sbb xor mov mov leave xor mov dec xchg movsl jecxz mov cld push xchg sub mov pop in gs xchg inc addr16 cmp fwait add je sub mov inc (bad) dec lret aas sub outsl lds shll (bad) lret mov and sub mov push push push mov mov xor adcb jl movsl divps xchg pop add pop in aam stos mov pushf lds fs out sbb push push lcall and dec mov hlt outsl loopne xchg mov movsl (bad) out into mov jo dec vmovlhps xchg leave inc or push mov cmpl mov out push pop es dec in dec icebp mov hlt sbb sub loope dec jbe and inc xchg xchg pushf iret mov ja lods push cmpsl jno (bad) out sbb repnz or sbb mov inc std into in aaa ljmp cmp fnsave divl mov fistp jle std addr16 fwait or ret (bad) cld vpmacssdd call ret aam add cld dec mov fwait hlt xchg in cltd inc mov int3 shlb fcompl inc sub jmp jecxz dec sub add push fcoml enter iret xchg mov mov mov xchg repz xor int scas pop xchg jecxz in cmpsl imul fwait pop mov out test ret cli push test out rorl push aam xchg loopne inc (bad) decb rorl icebp es pusha inc jae lea adc jbe daa add dec pop mov mov jbe imul cltd and cld inc pop rolb cmp or pop fdivr jns es xchg dec mov mov add sbb das out mov push push ds repnz aas ficomp inc lea lods outsl cltd sbb push jg push jbe inc or sub mov cli push in sahf mov aad cmp cmpsl add jecxz dec mov push add add jge or xchg jmp pop push inc shll adc decb xchg ljmp std pop fsubs data16 notl mov out fdivrl cld mov add push mov hlt imull fisttpl push xchg add nop mov add aas cmp fs jo jge mulb pop mov mov imul jns push ret cmp jae js lahf jecxz jns fisubrl mov xlat scas (bad) movsb cmp mov adc popa outsb ret lods pop outsb into (bad) cmc iret dec aas mov push and mov test push cmp je cmp inc leave lods loope das cs fmul cmpsb popf nop mov mov cs ss shll mov adc adc popf data16 mov xor mov xchg (bad) and jae adc cmp movsl jns push sub inc sahf mov xchg sti and dec add xchg mov popa jge (bad) aad mov hlt ror xor clc sbb or or mov push or and jl popa sbb lds mov int (bad) stos xorl je pop into or xor cli jae (bad) jnp dec and mov lahf sbbl testb sbb in push std add stc mov mov xchg xlat mov fidivrl inc in cmc movsb mov (bad) jbe mov les mov mov jmp call roll xchg and test inc pop int jo or cltd xor gs pusha jns mov jb lcall loop repnz ja shrb cmpb enter (bad) or stos rcrl loop clc leave cltd mov mov cli lcall ss mov pusha fist pushf xchg push (bad) out sbb leave int3 xchg lret movsb and mov inc and pop je (bad) xor jge pusha cmp dec jns rorl cmc adc clc pop arpl das adc dec int shlb fiaddl pop cmpsl ficom cmp in mov mov sub lret xchg mov arpl stos movsb (bad) in (bad) cmp jne mov iret adc fstps clc aaa ljmp sub and fistpl (bad) adc mov mov dec pop orb (bad) push stos fsts out jb mov xchg pop (bad) stos sbb mov fstpt sub mov dec data16 xor daa repz daa jnp inc push dec scas scas inc and pop ds sub jecxz out dec sti aam push jo test mov (bad) rcrb add dec cli push push dec pop mov xor and sbb sub xor sbb out pop icebp sbb jecxz mov sbb mov jge in stos mov cli rolb fcompl imul es jae mov (bad) push dec in lahf inc mov sti cli cmp or inc rcrl jbe (bad) repnz inc pop xor cmp cmp xchg and shrl hlt push mov iret in lods adc xorb jg test mov repz dec call ds fild cmp rcrb loopne orb rol sbbb cmp hlt ds mov pop sub lahf adc popa jne xchg sub movsl xor mov inc lods outsl (bad) out aas xchg sub inc addb push movsb call sub js add push (bad) ss in stc jl popf enter xchg mov cmpsb gs (bad) (bad) loopne incl kmovb and inc xor sub ror xor test loopne mov jg cmp loopne adc icebp adc dec jnp fldenv (bad) xlat pusha lret dec rclb jl xchg aad mov int hlt dec rcrl movsb mov (bad) js sbb adc mov dec dec test adc pop (bad) clc jne adc movsb cmpsb mov adc jno pop inc mov xor inc push int3 aad dec outsb add fdivrs faddl inc mov mov cli mov insl lods aad pop inc and aas push inc adc movsl dec ljmp call add out and jnp push push or popf iret mov test jbe mulb in addr16 (bad) cmp mov fs loopne pop push xchg loope (bad) dec adc std clc ljmp push sbb ret sub sbb mov dec mov pushf cli pop xchg ret mov js or out jo mov roll (bad) push dec mov mov rcrb sub (bad) mov jge inc addr16 mov mov int3 aam sub inc repz push jmp add cld dec push fsts lret dec xor int jmp lds and mov push stos arpl push leave pop lret adcb mov cmc and outsb repnz mov ja hlt insl cmp push add jno xor jg std jecxz push push mov push or pop cmp divb in ja xchg (bad) and mov scas add out fnsave xchg sbb jle rol xchg ficom test into dec mov pusha adc jns xchg jae lcall or xchg orl sub (bad) (bad) push (bad) cmovs add (bad) aad dec jp push jae mov inc cmp sub sub xlat fdivrl add mov mov int popf test pop push xor pushf add in imul push scas sbb jb call mov fs fsubl mov test inc xchg dec push outsb pop cmp imul push fs repnz mov push dec inc ficomp call dec cmp xor xchg jmp bound push stos dec cmp subl jmp add mov inc fs and push add pop daa pushf leave jl push shlb insb leave mov lahf dec dec ficom subl push popf mov push push addr16 mov mov push jbe pop jae jge les psubsw sbb andl pop dec (bad) or jo pop dec out xor sub add push mov (bad) dec dec push incb fs movl repnz outsl (bad) (bad) iret xchg and leave je xchg (bad) aam jmp test mov cld and nop or mov test pop add mov mov jl sub daa jae xchg les or into ret int3 aas add imul push jbe js mov add mov or lock stc es inc rorb rcrl sub and sarb sub mov jne ficomp cmp test fwait sbb or jmp pop xchg popf fstps mov icebp mov pop mov dec push jne nop repnz jo inc add ret je (bad) lods fisubr mov sub sbb test ficoml sbb in xor xchg repz pusha mov lahf out das xchg jnp dec push xor adc push in adc ja lret repnz pop pop adc inc cld out fcoml addr16 inc dec subl push (bad) stos in sbb inc imul or je xlat cs mov ret xlat idivb jp xchg (bad) movb jp fwait mov sahf into and aam addr16 mov (bad) scas mov in push sub jo int3 lods xor mov jge not mov stos mov xchg (bad) xor mov adc sub fild ficompl (bad) sub pop pop fisttpl notl (bad) jge rolb loope cmp test mov sbb xor add pop daa push je mov adc rorb or mov xor sbb sub jecxz xchg leave into xchg rorb mov std roll bound gs sub sbb das mov (bad) push mov cmp iret out sub push cmp test mov push lret xor mov xor icebp fisttpll mov in jg and mov scas sub jmp mov (bad) sub loop scas xchg mov adc adc pop (bad) mov aaa add mov pop inc dec mov out jns int3 add arpl xor lods push loope ss push jl cmp dec arpl or (bad) int divb jge inc inc inc loope out lock lods fldl jg sti and shrl push mov (bad) ficomp movsl xchg sub dec add and sub or stos addl gs inc jns test insb dec fwait (bad) pop or fwait (bad) data16 movsl jnp in sahf mov repz mov cmp sbb or pop stos pop loop cmp sub inc mov scas jmp insb (bad) adc test bound fistp bound lret pop xchg dec fiaddl mov out mov jns bound imul xor cmp int das int lahf mov adc insb mov enter push (bad) mov pop sbb push insb mov mov cmc sahf jmp idivl sbb leave add mov daa push cmp loopne outsb adc xor push xchg stos inc mull inc dec sbb adc adc xorl push pop mov fisubl dec pop movsl in add aad fistp subb adc (bad) das mov dec mov sarb out (bad) inc loopne out add ret leave xchg lea repnz push jo rcrl data16 es cmp adc dec xchg mov cmc lret push repz arpl loop stos jecxz negb in lret and adc mov lea (bad) ror mov aad push cli daa int3 mov jae mov mov and inc push outsb xchg fcomps sbb cld sbb and mov xchg jmp dec (bad) sbb mov ret fcoml pop push (bad) das pop inc (bad) and cmp test fisubr and pinsrw pop cmpsl movups mov rolb imul pop stos hlt ss push test in insl cld sbb add loopne add rol xor aam jo pop into mov aad fucomi ss jmp adc ds mov fisubl cltd fwait mov (bad) cmc in imul aas imulb sub mov addr16 sbb xlat sbb dec pop push and sti js rorb jg or sarb dec fcmovnb (bad) movl in lock add sbb cmp loop bound pushf ss dec popf pushf pop mov test pop movb cmp enter jb loope mov jns pop test inc xchg pop mov arpl pop jge sub sti push xchg fsub std mov xor icebp test adc lods (bad) cli mov adcl pop jb adc mov iret mov push xor movsb jp xchg push push dec sbbl mov in clc mov mov sbb (bad) repz movsl or in xor ljmp mov out popa jno dec inc out cmp push xchg fmull sahf ja lret lret inc push into cli jle sbb inc cmp ja xor and es fild ret sbb dec in loope push pop mov sbb daa je (bad) jae icebp jle ret cmp hlt in fwait add push call push fnstsw dec pop mov jo iret jle mov cwtl out pop sbb xor cltd cmp data16 imul stc cmp pop int3 stos arpl imul pop xchg inc xchg dec mov fcompl and mov cltd sub xchg repnz (bad) xchg cmpsl out push pop jne add notl imul xor push xchg fs inc pop jno pop clc dec push cld or pop gs imul imul dec pop dec dec mov adc sub push inc je xchg inc test (bad) je pop push adc or iret (bad) int3 test mov arpl pop test push sbb rorb or mov mov jns lret mov jp adc mov sbb insl daa push fisubr daa fwait mov xor dec adc ret js lret sysret cwtl ljmp les std mov rorb or out inc dec and adc loopne cmc lret mov push pusha xchg neg faddl jg rdmsr test ljmp daa sbb insb test pop adc lahf std jbe xchg xchg and sub inc push sub mov (bad) jg jmp xchg aam stos fstpl push shll repz int3 fadd jnp idivl arpl lret icebp call fsubl lock xor ret je cli cmp jo push sbb mov stc pop sbbl repz pop fcomi cmp fsub idivl or dec (bad) mov pusha es fistl in fdivrp pusha and push test xlat cmp lods pop mov (bad) adc cmp insl jl (bad) lods dec cmp inc rcl ss loopne xlat xor jae xchg xlat mov aas xchg mov lahf ret jnp dec push push stc mov daa clc push sahf jae popa aam mov (bad) adc sbb pop xchg subl cld push mov cmpsb repz xchg orl lds jae dec in xchg dec pusha pushf pop fadd add bound sbb jb int sbb jno icebp iret hlt jmp mov fs gs insl jge lahf sti inc add jae cmc test ss mov mov mov dec dec or cmp push mov and lcall scas dec dec fisttpl push mov lcall and jns add fs fistl aas mov clc lea out test daa mov incb sbb mov sbb adc iret sub arpl data16 mov js js pusha cmpsl sub push sbb push dec add int3 sbb les dec adc and xchg jae or push push add pop jno fwait push xor mov enter pop jg jo adc jo ljmp ss (bad) stc cltd dec iret addr16 push outsb enter addr16 sbb and xchg lock imul cmpsl or (bad) fiaddl lret stos push insb in sti dec xor mul incb rolb pop dec mov das sbb subl shr add loopne add fdivl addr16 dec cmp (bad) cld cmp fcmovnbe sbb jecxz fimul cmp xor in pop mov mov gs notb (bad) ja ret sub mov aaa lods lds test imul mov ret dec mov out mov sbb mov imul mov pop cmp in and fwait cmp fisttp lahf test test (bad) cmp ret mov and xor push sbb sub pusha loopne js mov (bad) jle and inc sub lret xchg jecxz (bad) (bad) notb xchg mov sub dec aad ret scas popa out divb sbb jmp (bad) push add out sub xchg and sub (bad) std or xor dec popf or (bad) out add pop sub pop mov movsl mov (bad) adc or and push push cmp movsl lret fnstsw clc fs (bad) adc stc in ret dec inc inc sub inc arpl (bad) (bad) jl cs lahf mov mov ja add push add mov add test (bad) inc (bad) cld inc xlat nop sete enter pop cmpsb fstpl or in daa push fcom ret sub mov pop int3 ja mov cmp sub call mov inc (bad) cmp dec aas jecxz cmpsl pop cmc add dec mov imul jae leave les ret repz test icebp sbb aaa test clc xchg cmp cmc dec dec xor pushf out data16 mov push daa call gs adc xchg lods rcl inc dec xchg mov insl mov aaa or imul pop cli out dec cmp or cli push roll adc negl ss popf repz sbb inc hlt mov lcall sub (bad) sahf xchg dec pop jmp mov and push stos stos leave jb or push mov daa les cs xor add push hlt and xchg pop cmpsl shrl mov inc aaa dec mov mov jbe fsubs mov rcl xor aam dec daa lea arpl pusha into fdivrs or jge fisttpll pop jbe stos fisubl push sbb cld mov xor mov or adc mov mov shrb es fadd xchg loop inc std je inc mov lret (bad) fucomi cltd sbb sahf aam adc mov test repnz and imul stos add mov bound mov test rorl repnz add jg mov cmp push fmuls xor lea mov mov int pop stos xor mov ja pop mov fisub sbb fs dec add jge pop push pop lods es aad mov int3 sub rclb mov mov out enter xor stc aam enter arpl mov mov pop xor inc imul dec push enter jg jmp inc sbb psrld sbb cmp push or fs les sbb add fsubrp (bad) popf or jp sarb pop aad mov add rolb cmpsl cmp mov test and addr16 mov jmp rclb int3 int push insb adc aas imul mov daa outsl jnp (bad) mov rorl mov clc push mov jp rcrb dec jle mov bnd pop jnp and pop ficompl test stc cmp dec in ljmp jne mov xchg dec adc loopne (bad) xor fwait pop call sub or rorl out push xor (bad) sbb add jle push ret mov jge cmp push fisttpl mov push push cmp fsubrs pop aaa cmp pop lcall es in sarb mov inc lods cmp fwait sahf pop sbb test pop mov cmp test dec out es imull mov pop sbb cmc cmp mov jo adc test or mov orl pop inc sbb inc nop mov adc sub mov (bad) or (bad) fdivrs dec ss xchg sahf out aam cmc rolb addr16 sar add mov xchg hlt inc cmpsb dec add inc sub pop jp jge jns mov sub es shl xchg xor xchg mov repz jno and jl add ljmp inc fldenv dec (bad) hlt int3 pop scas lds daa sahf adc addl or loopne mov or cld test jno xor push add das push cmp push mov lea dec insb je jb cmpsl out push mov imul dec dec cmpsb inc xor mov jbe outsb jns (bad) std hlt loope and lret xchg insl std cmpsb arpl insl movsb das push (bad) adc inc lahf loopne ljmp mov mov add int3 aas ret out pop jecxz repnz lea mov lods jecxz cmp loop ret sahf loopne mov jbe xchg xlat repz push (bad) mov scas pop add inc and sbb jne jmp add dec (bad) cld adc mov iret in lret sbb mul fcmovu pop jbe xor xor jno mov adc int3 out cli pusha jg push icebp es loope mov adc sbb push sub cmpsb ja xchg jo push je xchg sub mov mov enter sub inc jle popl xor push mov in test mov mov add addl push faddp (bad) xchg (bad) scas mov push xor (bad) xor jns add lea pop divl shll outsb mov fmuls mov test (bad) imul add aad mov fnsave sbb and mov mov sub outsl (bad) rolb dec ljmp fsubrl push sub fs imul push pop mov lcall lock push sub (bad) sbb lahf pop mov jne aad insb and adc arpl negb adc adc cmpl lcall test dec in sub into notb xor fisubl sub push mov mov outsl mull fisttp (bad) cli pop repz (bad) repz stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne add hlt pop rolb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret scas aad pop pop mov (bad) (bad) mov mov lods dec lret sub cs (bad) std push out out stc push sldt add add pop movsb addr16 mov xor std lods js leave dec xchg pushf in cld pop or mov xor aam arpl (bad) adc and jmp clc mov mov cmp sub fistp ret lds mov (bad) in add xor shlb jmp dec push aam pusha xchg mov jg imul lea stos lret in std and jo dec dec jg scas lea sub sub or das inc ret das adc out loop daa push mov mov dec mov push xchg push adc in out push repz stos std sbb scas lret (bad) or jge push in sahf arpl mov mov jae repz sahf push mov adc mov stos imul push jno repz ret xlat or push cmp pop repz push stc sbb out mov push jo in lds in mul inc mov inc pop movsl xchg imul xchg mov dec push cmp or adc jb jo imul push ljmp cmc jnp jno adc outsl push adc inc jo push pop jne dec xchg dec inc xor xlat mov stc loopne jl pop push rcrl inc stos cmpsb loopne hlt jle jge,pt cs inc movsb bound adc jnp sbb ja cwtl inc stos inc nop je cmpsl pop pop nop adc adc cli data16 mov stos and les or and adc gs jno aam lcall pop xlat shr hlt popa pop push xchg mov mov push mov sbb decl scas aad and das int3 xor sbb xchg mov jle and insl repz add push das or (bad) push out mov jne in ret jp shlb mov stos sbb rolb lea test push dec loope xor pop push jge mov subb aad xchg sub dec decl jl icebp pop (bad) jo inc fldt fwait push movsl pop into fdivl (bad) daa arpl leave out mov into (bad) fdivrs popa jl lods adc lods pop fdivrl in sti inc stc jmp and es jns cmp rcrl mov xchg sub xor (bad) mov nop (bad) (bad) fildl inc out adc arpl scas je jmp loopne jmp mov jo test out lock inc in push in lret pushf outsb push xor (bad) add pushf jae mov dec repnz aaa lods xor nop rorl sti dec mov xchg std push mov cmp pop stos xchg call inc mov dec scas cltd and mov xor ja pop ret mov cmpsb mov bnd in jle (bad) mov adc mov lcall dec leave fstl lock ja lods test aas (bad) notb push sidtl dec call hlt mov xchg je push pop loop add (bad) imulb mov push cmp (bad) cmc cmpsl or hlt popa xor out xor movsl add shrb cmc mov add aaa ret (bad) push push test pop in (bad) sub addr16 gs pop push imul sub sti mov cmp scas mov cmp scas dec xchg mov mov (bad) loopne ljmp das rolb mov inc mov lods xchg inc inc pop (bad) lds dec inc mov push xor popf ret add int3 push out push add push xor xchg inc mov decb in mov sti or xchg jmp and push loopne movsl lea pop push mov test cs jb mov popa aad ret mov pop or adc frstor out lock xlat sahf (bad) aam ret xor nop pop fdivs jge xor in inc cli (bad) idivb cmp mov push std lea push xor stos or in int3 xor cmpsb enter push xor leave mov das inc hlt (bad) lods cmp jns xchg xchg push cmp xchg icebp jne sbbl sub shll cmpsl adc jge out sub pop lods sub add xor sar dec sub in rcrb jae mov (bad) dec ss ret clc pop insb stos and push in je (bad) (bad) inc fiaddl ret mov mov shr sub pop insl xchg push fdivl mov test cmp xor mov jno push fstps stos mov out xchg leave mov repz add bound clc xchg xchg sbb out aaa xor inc outsb xchg lcall or mov imul xchg sub stos adc in sbb in das adc xchg bound and gs add sbb jmp or jg aam les in jns neg nop mov sarb adc ss or ret movsb (bad) pusha cmpsl bound test test fs xor gs (bad) test pushf leave jge cwtl clc mov mov mov jmp xchg mov xor xchg push ja insl mov ljmp test or sti jb sbb mov dec lcall or ljmp sub sub nop (bad) sti cmp test xor jo int scas test aam cmpsb jmp inc leave inc sbb cmp insb clc test xor cmp xlat sub or mov and mov xchg pushf (bad) lret adc (bad) pop neg and jl mov or addb pop push push cld pop ljmp cmp insb xorl sub (bad) mov rcr xchg jne and mov sub push cmpsl sbbl push mov js sahf and mov sub xchg cmp pop nop fcoms cmp ror push repz shll sarb mov hlt and ffreep jmp cmp cmpsl pop loopne sub push mov mov ffree test mov sti pop faddl test mov xor flds aaa test aas bound inc pop xor icebp cmpsl pop int3 xchg adc int3 out in ljmp dec lds cmpl push xchg fnstsw (bad) mov (bad) mov sub add xor mov push decb pusha addl leave mov aad pusha ret xor movsl fs xlat adc roll jge mov pop (bad) mov in enter jo or scas out dec jno xchg js xchg mov xchg nop and insb cs scas (bad) cltd jle pop xchg fwait xchg dec loop inc jle adc ss aaa bnd dec pop adc les lods aas cmp rorb cwtl sub out icebp lods std inc je mov js outsl inc aad daa dec xchg push adc hlt or (bad) sbbl mov js test push cmpsb imul push test push pop and popa add stc imul pop and test fcmovne icebp sbb leave pop sbb sbb div adc aam push dec fnstsw or push sub or xchg sub insl pop xor xchg lahf jns sbb out (bad) lock loop adcb jp dec mov jle xchg sub jge shr xor pop mov stos xchg cmp jg movsb in daa (bad) cmp push xor sti test dec test popf stos test int jns inc das flds out xor out dec in in lods or push in arpl stos or popf or fdivl pop in jbe pop rorl jns (bad) loope jle into sub mov movsl negb dec in (bad) cmp je repz arpl aaa xchg jbe cwtl (bad) ja das dec (bad) (bad) arpl incb lods add push push addr16 ds cmpsb and frstor jp sbb sbb mov sub insb mov in xlat push ret aad orb jmp jne,pn pop jmp or stos data16 movsb pop jo lret fwait sub and (bad) out outsb pushf or popa jnp in mov jbe jp inc mov sbb mov or out add mov daa sbb and loopne in test addr16 dec sub jge bnd ret mov mov call pop add lock nop sbb popf push out insb and jge mov rorl xchg cmp je sti xor mov or xlat mov dec fsub lcall out jl xor movsl pop jno lcall inc ja cmc and push test jns cmp test sbb lret or cmpsl bound cwtl and adc sub adcl cmpsb addb mov andb mov das cld add mov pop add rcrl fisubl lret (bad) inc mov sub mov pop jnp mov push (bad) (bad) mov or scas shrl cmp sbb out inc clc push push pop adc das pop dec loope cli mov pop adc dec push add stos xor repz repnz scas pop inc in mov or pop enter nop mov loopne clc pop popa stos stc dec aad arpl sbb leave adc popf imul adc xchg xchg clc pop ret jnp adc stc roll inc in movsb int xchg jl mov mov inc and decb insl inc cmp jnp mov pop jbe sbbb jl cmp or popa lea test push push test and add or xchg frstor or enter push xchg ss add dec stc add (bad) mov fisubrl mov push test in push push push adc cltd push sub sub jmp clc insb mov jb test sbb dec mov insb rorb mov push scas stos scas pushf xchg cmp lret or mov mov divb or xchg sub aam popf gs pop andl insl insl push loope aam push cmp cmp data16 xor mov popa movsb out mov loop dec xor cmpsb or addr16 inc in ss jne mov data16 mov js jae (bad) pop loope xor loop (bad) push imul fnsave jmp xor movsb sbb jae xchg sbb xor ja jnp mov pop outsb jge xor in or mov add dec rol cmp xor mov mov ret inc jbe dec enter (bad) clc inc mov movsb mov icebp adc rorb or mov icebp bound add jo pop push cltd sti fsubs in sti (bad) cmp jg bound loope int pusha xor push mov call scas repz fwait adc add adc add pop dec add orl and or dec shl adc jmp imul arpl setne mov ds (bad) xchg rorl das xor das out into xchg stos jge mov mov cmpsl dec addr16 inc jge xchg aad stos jp sub dec sub jb jmp in mov jle mov enter cmpsl sti rcll cld hlt popf aad orl or jno (bad) fisubl mov mov jecxz test pusha into dec mov scas sbb les in pop dec cmp push pop sub push hlt or push sub or (bad) jbe or (bad) dec fidivl add adc test cmp jnp or stos mov inc sub lods out jl sub int (bad) jmp mov nop and imull mov adc fdivl mov (bad) imulb sbb sub lret or test add enter (bad) xchg scas insb and inc jle pop ret xlat out sahf push lods in mov and jp mov adc inc mov ret out add jns or dec aas mov arpl (bad) mov jmp in ret (bad) cld dec rorb sbb mov jns stos mov fiadd sbb mov sbb sub fwait incl ds arpl sbb mov and push mov inc das cmp (bad) dec pushf mov movaps pop lret cli push into jp aad push addr16 xor sbb pop xchg frstor dec imul aad jb popa adc cmp jecxz mov cmc pop mov or push pop pop mov (bad) pop iret or inc jbe scas add stos sbb test cld lcall ljmp imul movsl push push jno mov jo pop cmp mov ds aas push mov loopne or (bad) sub rclb jp das jnp push inc data16 push sbb mov xor ds loopne shrl stos mov xchg loopne inc sub sbb cmp repz (bad) loope stos int ljmp out fisttp xor jbe mov adc mov xchg mov pop jle lea adc pop mov std mov loopne mov mov sbb jo inc xchg daa dec add pop cmp outsl gs pop mov push out mov (bad) xchg leave push cmc mov xchg std pop push xor sbb scas repnz sbb and pop fimul loop,pn cmp cmpsl enter pop (bad) push xchg add xor mov sahf ret push insb xchg mov mov mov loope dec push jb push and insb xchg js fnsave fsubrl je jge jp (bad) sbb lcall mov lcall mov sub cmp scas dec xor jae adc dec add jbe mov dec (bad) icebp mov daa ss popa add mov dec jne repz rcll daa jge pop mov mov mov fs pop mov mov outsb sahf jge xor jge mov adc and call sub scas nop bound aas and cmp push or xchg call pop jl dec leave pushf subl repz inc in out add mov hlt lret jecxz (bad) mov dec cli jmp (bad) loopne inc shrb jle jnp dec ds rclb pop fistl ficomp dec cs xchg add aam push push mov mov adc xchg and adc int sbb scas jge scas cltd push xor lret push pop aad mov mov push xchg lahf push adc push xor (bad) mov mov pop ret mov push ss inc insl push adc pusha xchg ja aaa gs mov or add inc or mov in pop iret or lret cmp pop mov mov mov repnz dec fisubl or hlt arpl idiv inc push pusha inc push iret mov outsl lods or movsl pop pop inc cmc dec push xor enter cli sub aam jb mov int xor cmp fcoml jae or aad jmp cld jp (bad) repnz xchg in test mov cwtl xacquire lock jmp sub nop lret cmpsl das pop (bad) out push mov (bad) out addl xchg ret (bad) cmc movsl pop in aas cmp cs mov push and sub loop mov (bad) push mov jecxz lea mov outsb int in pop and sbb scas sub call mov mov jl notl je ljmp xchg xor les divb lea or jb jl sbb sub inc mov lcall xchg and cmp mov out inc into fwait les and mov int xor shrb cs arpl mov or pop cmc cmp and pop arpl jns mov xor gs test es fisttp (bad) ficompl data16 lret popf iret je mov (bad) pop lds loop xchg scas sub inc and enter gs add loopne sbb arpl and insb stos lret mov cmp fildll pusha out js dec push pop xchg cmp sahf push std inc pop std dec nop loope fdivl leave xchg rcll cmp sbb mov fiadd stos sahf push mov adc fild mov int push lret jb inc nop icebp and sbb aas add jae push (bad) aad jmp sub sti and dec dec adc jecxz insl push dec fisubr mov adc sbb pop loope inc jnp push sti pop mov ror dec (bad) out jmp je mov fldenv outsb mov or int3 cmc jno data16 mov cld cwtl mov or inc mov leave xchg sbb movsb (bad) nop push inc sbb popf fmuls paddq cwtl loopne nop jge adc lods ret and cltd push enter loopne xor fisubrl cmc repnz mov sbb rcrl aad and add rolb roll jl mov loopne mov test rolb movsb cmp or jo cmp mov stos push das insl cld neg aas mov aad cmpsl test in jp arpl lahf rorb shlb dec cmp test xchg push push call sbb outsl sub jp js in sub adc xor std push xchg sarb xchg inc int mov mov sbb mov push mov cmp pop imul xchg push xchg inc sbb mov cli mov dec inc data16 lds mov xlat jmp les mov sub push jb fwait mov dec mov daa and sub pop jno sahf es shll jp pop xchg aaa insl icebp xorb sub cmp sbbl mov inc (bad) add add pop push mov addr16 test lret fs jnp aad add jo or int3 mov rorl (bad) int je xor sti mov test mov fmuls or and push sbb inc fwait add and push movsl cs enter out add leave xchg fisttp loopne xchg jns cltd and leave cmp cmp cmp mov scas dec hlt into es ljmp adc sub repz lea xor mov fs jbe sub dec push orl cmp mov pop add pop pop fucomp mov aas mov jg add loop xor cmpsb gs (bad) or xor loope add iret push movsl mov div and add inc xor mov mov shll push iret inc push test and jno add sbb xchg jle jae mov enter lahf cmp pop lods sub imul gs (bad) add xor in daa add pop and xor mov aas inc inc pop mov nop pop mov jge dec mov gs lahf out or add popa or push test cmp add dec fwait pop mov sahf scas call sub cs add dec ret sub and pop mov popf movsb lret sti call ljmp mov packsswb pop adc sbb je inc mov xchg insb bound or fisttpll in inc and jl mov sbb and lcall cmp mov or call fmul aaa out cmp push pop leave add dec clc xor inc ss lds pop repz sub in int3 cmp cmpsb dec dec les xor mov sbb pop xor dec aaa adc mov les dec orb xchg je push out test aad mov mov push sbb sub addr16 ja add xor or daa mov mov jge mov or mov xchg xor in cwtl hlt sbb repnz popa sbb sub aad add cs xchg mov inc pop std (bad) stc imul mov icebp pop fildll ret push lea jmp xor pop ja repz pop test jl mov shrl fwait (bad) dec dec pop insb dec jecxz mov in add jns dec aam jp pop add mov jns dec pop (bad) mov xchg adc pop fistpl rcll pop imul xor jmp add mov in cmp lret sbb jae xchg fstps mov cmpsl das das push call (bad) xor in cwtl push mov sbb lcall mov mov inc rcl mov mov cmc imull in pop (bad) adc xchg xchg push hlt imul inc mull push int loop ret test ljmp mov inc mov scas jo je xchg adc mov add add stos shl movsb test xchg inc dec (bad) addb cmp dec loop mov mov outsb push jmp div sbb cltd imul mov cmp stos cld sbb lahf test mov dec mov fisttp insl sub arpl jecxz jle pusha push xchg jmp loope mov dec out ljmp mov pop ljmp jp jg dec into xchg mov cmpsb mov addb inc rclb (bad) push daa xchg jno popw cmp (bad) jp test in dec xchg jns xor mov movsb popa adc push aam sbb gs mov sarb mov push dec out cmp arpl rcl push insb nop cmp pop or rorl cmp jp jp movsl inc inc sbb cmp aam mov mov jecxz dec fsubs sbb sti aam cs test fnstsw test dec and rcr cli addl xbegin (bad) dec cmp (bad) mov lods scas aaa mov jecxz cmp inc adc shrb push jns imull sub mov jne loope sbb lahf sbb shlb sbb sbb (bad) pop cwtl and (bad) adc xchg data16 insb xor ret xchg loopne sbb mov ret adc xor inc js sbb inc xor int3 fistpl sbb ret pop cmc xchg in xchg testl jnp sti addr16 in fnop ljmp leave fucomp add xchg (bad) movsb fdivrl jecxz cwtl mov test jmp divl cs aam mov cmpl or jge jbe ss adc sbb loope in insl xchg ds add js ds icebp adc add push dec xchg aad lods sub pop or dec mov mov jne sub xchg daa fsincos loope repz test (bad) out jnp lea imul mov dec cmp sub pandn jecxz (bad) repnz fcoml sbb jb mov xchg or ljmp pop xchg mov js add sub (bad) xor (bad) mov cwtl mov gs movsl dec dec pop mov pop movsb dec sub jle aam add dec lahf fstpt ja dec and add subb mov outsb popa push int pop sarb jno cmpb inc addr16 fs cmp leave push fstl cmpsl lock movsb in test lret mov out adc push or jne cmp loopne mov lock (bad) test ss cmpsl xchg pop and pop inc pop jbe mov fmuls rcrb pop mov fwait xchg loopne pop mov cld (bad) mov pop cwtl addr16 and lcall jp das dec cwtl icebp mov and mov cld (bad) pop gs push fwait gs add fs outsb enter sub loope mov fadds loopne pop xor xchg push pop jnp (bad) pushf push xchg mov pop adc in cli cwtl lret push inc bound and pop pop or loope lahf mov stos pop arpl in xor push sahf lock dec repnz dec icebp xor aas or pop xchg jbe mov dec pop jl ret mov dec rcrl loop dec pop cmp jecxz mov xchg and test daa add inc mov or or push sub fadds enter add das int3 fldcw ret add (bad) pop sti sti jmp xor movsl imul outsl push mov sahf xchg (bad) rclb jbe repnz cwtl ret sbb mov fs lods and movsb jo jl mov ret rcrb lea in mov flds add jo sbb push imul mov cli popf mull dec popa push pop mov dec iret shr popa xchg xchg (bad) mov mov inc lea insb pop add pop cmp mov xor fnop leave (bad) mov insl dec add fistpll in lret jge dec sahf or rcrl pop push arpl ljmp mov dec mov aam jp cmpsb xchg dec icebp mov mov or cmp into dec scas std daa or mov in mov sti sub push scas sub cmp dec push push inc jnp inc and into into or cmpsb inc jne lret out mov and ror (bad) repz jnp ret mov into or xchg sub (bad) pop or iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add push out xchg call add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg insl fisttpl ja xchg insl fwait stos xchg mov xchg insl repz lret jne fnstenv (bad) fucomp inc (bad) or add push add gs iret pop jno mov (bad) mov mov cmc push jae mov (bad) dec ret xor xor leave iret lcall pop loop imul enter in mov and mov add loop movsl fwait pusha leave lds sub sub pop mov sub push push mov popf clc jge into enter push mov mov or adc scas sub incb push std mov xchg imulb and lea es pop inc shr lahf push (bad) mov sub pushf push xchg stos fiaddl mov xor in (bad) outsl push push scas jae rolb adc fdivr int3 xor (bad) fiaddl sub dec imul andl cld cmpsb and jmp mov fadds cmpsl jp mov idivl and into std clc inc jo int3 loopne lods aas js out mov pop inc cmp pop addb mov cmp mov mov or and sarl sbb mov inc fmull test cmove jmp arpl inc loopne dec cld mov je mov jmp iret ret inc push out cld std ret mov clc cmc mov and cmp cmp sahf dec shlb loop (bad) pop cli rcrb test sbb adc cmp push jo cmp xchg xchg jns daa inc inc sub or and jecxz inc mov dec mov jecxz enter jbe dec lcall adc push sbb and sbb sbb add out lds movsb inc movsl into cmc mov fsubr jg cmp dec arpl cmpl outsl in lods dec jo inc sub outsl shrb ret cmp xor xor cmp xlat dec jge outsb jecxz mov les pop lods sahf cltd aas add xor sub jmp pop rcrl adc pop repz inc scas xchg mov cs es stos clc sbb sbb inc pop leave xchg aam jnp rcll scas leave out mov dec jnp xchg sub test mov mov iret loopne shrl xchg arpl pop mov mov fs in xor xchg cmc xchg sahf cmc enter je mov fwait cwtl inc gs outsb sbb aas jne icebp adc aad cli aas test lret or (bad) jb movsb cmc adc mov aam ffreep push lret je clc xchg clc bound aaa inc movsl mov xor or insl test repnz cmpsb xor cmp sbb leave mov sbb cmp cli cmp mov ficompl idiv outsb and bound jl or and mov cmp dec iret or mov movl mov fsubrs jae mov ret pop sub ficomp push inc loop inc insl xor pop mov ret pusha adc adc sti test mov jmp ja push scas call and les mov sub leave push fistp pop shr add xchg inc out jge sub ret (bad) xlat cmp mov fidivr bndstx fs fisttp out test sti push mov sub add or aad and adc mov push test add cmp into mov mov iret call (bad) jp rcl mov bound je lret aam lcall sbb clc ret jmp addr16 cmp mov add loop loope dec mov test out test sbb sub (bad) pop mov mov lret stos in push movsb xchg mov push xlat loope mov add or mov add cmpsl punpckhwd (bad) std lock sub in test (bad) mov mov pop lcall (bad) loope mov andl xchg dec fcoml push loopne fadds pop mov lret mov (bad) gs faddl sub mov pop outsb mov cltd push push cli sarl jno xchg ror sub lcall daa aaa or add mov and jnp jmp enter out ja imul sub xor dec sarl repnz mov rcr loope les jl push enter cmp xor daa push dec lock cmp lods mov mov dec mov (bad) daa insb es outsb xlat jne pop mov fimul lea (bad) add mov (bad) cld pop or jge xchg out imul dec cmp inc (bad) cwtl or push jecxz or pop cmc test cmp fadds in pop pop jb aam push sbb mov shrl ret loop hlt cs jbe (bad) test cmp clc in and adc jmp adc sbb mov std call inc ljmp into aas sti dec pop inc out loop cmc imul inc pop adc insl dec lock scas xchg push xlat dec aam int3 cmp hlt sbb and xchg mov movsl lea sub mov aam daa sbb mov hlt push push cmc add insb push pop loop ljmp (bad) xchg mov daa sub out add inc inc cld inc arpl and (bad) push cs dec fcmovnbe je fist inc scas dec jge push or dec (bad) xor adc mov pushf push inc push arpl fistl rolb (bad) xchg sbb adc movsb and out mov fldenv out push push mov dec xor and lods stc repnz xchg (bad) sahf xor aaa popa nop sti push xlat mov enter mov sub lea std inc nop hlt out int3 punpckldq push cmpsb nop mov sahf xchg ja int3 addr16 in shr jp fwait into dec mov jge adc adc cmp test and pop mov mov testl outsb lods pop fisubr and scas xchg mov imulb cmp inc sbb push jb (bad) fcom mov dec pop pop repnz fs push xor add mov fistl aaa cld and scas push jno bound inc inc pop push call jl mov mov shrb pop inc mov orl call xchg (bad) mov mov in bound mov or or int inc mov mov aad push test stos out inc or aam sbb push push fstpt mov sahf jp loop hlt mov js int in loopne jb cmpsl dec pusha lret ss sbb inc dec and fistpl das arpl jl mov and out xchg mov mov in cmp or jecxz mov (bad) push cmp xchg mov mov or scas cmpl add (bad) cmp sub (bad) xorl les xchg icebp push in fnstenv fbld les or insl inc outsb ret bnd xchg aas lds add mov sbb inc mov mov mov jmp adc in cmc mov fldt ljmp adc in std adc push ret (bad) jne int3 add jno imul pushf inc daa sti sbb into insl lcall mov leave adc ret mov out imul sub in cmp movsb cmp jecxz jecxz enter (bad) fnsave call xlat inc xchg iret fstpl jle and xchg (bad) cmp xchg xchg adcl jae xor jmp sahf movsb stc in push int3 (bad) rol aas int je xor mov pop sarb add out xor pop daa repz in rclb pop and mov mov pop inc in fbstp outsl mov outsb mov cmp sub xor pop xchg pop stc imul dec cmp pusha dec jg xchg xchg xchg insb (bad) je arpl add out inc push mov les adc int3 jnp lcall xchg xchg sub call dec push jl es cmp jb imul test dec lret loop stos and hlt pop repz stc mov test sbb ss adc dec in out add lret mov inc movsl mov jge mov ret lods mov dec es std push out xor lods out imul les push sub push xchg cmpl (bad) or mov mov mov add xchg pop inc mov inc cmc leave mov cltd adc mov (bad) mov mov mov jmp movsl push cmp jg bound shrl mov aam out dec sahf fmull adc aad jns mov fnsave movsl movsb dec sbb xor (bad) fldt cmp add (bad) jno flds sbbl daa dec push (bad) xchg inc aad adc loopne les push mov mov xorl jecxz decb jno push arpl dec out insb inc ja sbb cmpsl inc cmc lret xchg sbb jns cltd sti insb (bad) xor cltd cli js aam cld jp leave aam push lds insb or inc push rorl mov scas rorl cmp mov dec out jmp sbb repnz pop out lret (bad) mov add ror rorl fcomps sub test inc cmp push out or dec xchg push mov fild test sub dec pop adc enter int inc insl out mov aas lea lea outsl rorl (bad) fisubr lods lock xchg mov add icebp lret inc lods stos jmp imul or pop add movsb mov out dec ds sub push lods dec and push and pop sbb lret aaa je sbb cmpsl test jle cmp call adc push (bad) pop loop pop mov add dec ss movsl (bad) push pop mov xor push into imul stos xchg cmpsb inc or xchg mov shrl out es lock popf cwtl lds or jge mov ds push cmp add hlt outsb cmp mov and mov jns js or mov fcompl test stos mov pusha or mov xchg std jmp cmp (bad) mov sub sub rorl stos xchg cmp test test mov imul jmp lds jp stos add and xchg and sub push pop dec call jnp lret pandn mov xchg das inc xchg or dec ljmp in mov push jnp rol push loope pop pop cli cwtl mov jno aaa fs stc gs push nop lods fbstp aas mov in cltd push push mov loop pop mov icebp cld inc pop add outsb xchg jb stos movsb push cld and popa sbb cmpsb sub xchg mov lds repnz notl pushf pop xchg scas mov dec cmp test inc and mov lcall push sub imul pop add es inc into jb lret dec aaa icebp push aaa call rorl cmc or adc inc mov sbb xchg xchg pop or ret mov mov jmp xor in repz mov xchg jle jle in (bad) out insb (bad) jl sub pusha js call jno fidivrl sbb icebp (bad) je test mov mov leave (bad) mov dec sbb jmp movsb lahf pop push jo sbb xchg gs pop sub sbb sbb lock out mov icebp stos mov scas cmp xor stos hlt in or mov push dec cmpsb call push scas and mov test popa lahf cmp add imul cmp mov adc aas in test test fs arpl push jg jnp and popf push dec fidivl xchg lret mov jge ficom add push je notb sbb add outsl out lea fimul or int sub ret popa push adc pop imul fwait (bad) enter ds jne ds fildll xor rcll sbb xchg mov pop push fistpll test or mov pop leave jp (bad) mov fwait test stos dec imul push xchg lret sub popa inc dec cli cwtl sub xor push mov xor inc loope dec and cmovns stc add push scas push cmpsl mov xor aam movsl xor or pop mov cmpsb out pop loop test repz mov insl sbb jb pop jne (bad) fistpl shl (bad) cs ret pop sbb dec pop dec test mov inc push int3 mov outsl cmp cld aas cmp inc sub fisttp lcall xchg jne jl xor xchg fisubl pushf ss dec addl mov mov mov (bad) pop cs into arpl test sub fimull lret lea adc cmovbe or test es fmul add xchg pop loope imulb mov dec aaa and outsl test push outsl mov and sub inc sar cmp in pop push dec jb mov mov outsb push cmp mov test or lods loope imul add rcl pop adc mov cmp pop mov inc mov inc lret lods dec je in mov fdiv add inc stos pop popf push iret mov dec sbb loopne mov out scas mov xlat xchg mov push cld jb xor xchg in out aaa push or jmp sub cld imul data16 sbb inc repnz lcall sbb lea xchg std ret and mov in jge xchg cmp mov cmpsl adc pop dec inc cwtl int stc mov data16 decl jns pop cltd movsb and out cmpsb sbb shrb jae call or insl int mov mov push adc sub xor out add fsts data16 inc and adc rorb cs dec cltd lods stos je or or mov pop fstpt into jle mov insl pop ljmp mov mov cmp mov ret inc xchg push ret or out dec mov cmp sub cmp and push sbb (bad) and fmuls cli xchg push xchg xchg push add js mov dec mov add daa lcall push pop aaa je xor jbe pop in push xchg popf mov xchg or ljmp cs push pushf outsl or repz push int mov rolb fsin or test add xchg sbb xchg bnd nop test and dec icebp je adcl jl adc pop mov test xchg loopne push adc into inc cmp mov xor test dec not push cmp add scas lods sahf outsb lahf mov pop push test rorl and mov insb popa outsl dec push cmp ds sbb sbb out push jnp jge sub rcrl rcll insb cli push pop shr sti pop cmpsb dec mov adc xor xor pop add fwait xor mov push push inc cmp dec xchg sub inc out sbb mov cmp push push adc cmp pop xlat mov or mov sbb jl push (bad) aaa test aaa and or push mov pop xor (bad) jb xor dec mov inc and lock jne sbb pop inc inc dec fbstp (bad) mov (bad) repz je adc cmp lea test jge mov jmp xlat popa in pop (bad) mov add aas cbtw xor mov lret call xlat inc in lds push jmp xor pushf scas lret stos add imull mov push dec push rorb fwait add adc dec jle es sbb outsl fs xchg mov insb scas sbb inc xchg pop push mov cmpsl jl xchg fisubrl xchg sub mov and dec cwtl push mov push mov cwtl inc dec sub cmp imul mov add adc pop sbb cmp add mulb je imul negl mov sahf mov (bad) sbb add pop push sti mov call sub sub dec out and cmp aas push mov pop jns pop loopne sarl scas sub and and inc mov mov (bad) adc (bad) leave and cmp add test jae popa call or dec hlt insb sub shrb lret movsl inc out cltd lock in xchg arpl std pop pop mov xlat push mov rclb cmpsb inc xchg and fstps stc and cmpsl insb adc sub mov fistpll pop bound push out and (bad) cmp data16 mov inc lods jns pop not fdivs shll mov stos ds xlat popa ljmp and or std sub pusha movsb sub xchg les (bad) pop xor cmp mov or mov lea xchg sbb cmp aad cmp out (bad) ljmp mov push iret out inc ret push mov test idivb jbe push nop cmpsb stos das aam mov sub inc ljmp jl sti adc push stos xchg sti lods addr16 jmp rcll int3 (bad) or xchg sbb ja shr movsl fs add cmp cmp rorb xor add std sbb lret sub mov mov dec push lods xor leave cmpsb lock fsubrs rep mov scas test and sarb jmp pushf daa and mov mov jnp lods mov loope dec sub mov mov xor ss cs fldt ret and push ds stc mov movsb mov fdivrl push xor add dec jmp hlt and adc iret sbb ja push sbb lcall sbb and xlat lods mov lcall mov dec je movsb sbb sbb test dec fistpll roll push cmpsb sbb pop les outsb push (bad) and shll mov aam or gs cmp xchg popf xchg frstor jae xchg paddw xchg hlt mov mov dec pop pop mov mov (bad) jp and fsubrs xchg xchg and push jns pop cmp ss sub xchg mov add ljmp rclb sbb xor scas or dec cmp jp out mov mov jecxz jne fcomip movsl data16 fnstenv add jle jo lock xchg dec xchg insb push je push lea mov mov add push add xchg jb jl mov push lahf xchg iret mov sub dec into std xlat push cmpsl out pop xor int (bad) push pop aas cmp mov and xchg popf jbe inc fld fistpll mov inc add (bad) jp cmp mov sbb in cmp dec jle sbb cs and adcb push jbe clc mov int3 add and shrb jb mov mov (bad) mov iret dec imulb jnp sbb xchg or sti adc popa xor adc push call add sbb cld aad jle and pusha sbb insb std mov mov repnz adc push ret nop cmc and lret js das fisttpll pop les inc fidivr and lcall jle out cmpsl adc mov xor leave jge sub mov outsb fist loopne arpl bound sub xchg jns jns arpl dec push add inc repnz mov cwtl pushf loope or and stos xor out mov mov adc cli cmp aaa xor dec mov inc repz and arpl jbe arpl sub inc gs (bad) push popf cli sbb enter adc (bad) ret pop fldcw sahf xchg inc cltd xorl jge jbe jg inc xchg fildl lock cmp bound and xchg hlt ds ljmp adc add test dec add lods pop push adc dec jnp sbb int3 cmc mov dec int mov sbb push imull sbb lahf lock cltd or mov or mov adc into sbb cmp out xchg jecxz das sbb cmp or in rcrb out pop std fldl jno cmpb jb jle sbb stos sar nop aaa int push push and test addl push dec xchg mov xchg cmp sbb je das or mov enter aas pushf stos jno pop pop mov cmc ja lahf pop (bad) testl nop or pushf lcall fwait in jmp cmp add shlb add jne mov loopne and mov xorb mov push dec imul push fucomi sbb test sub cmp clc fcomps adc out push in leave out jns sbb jecxz jns cmpsl ds mov sub sahf jp inc mov sub popa mov adc adc clc mov fsubrl aaa push mov inc xor sub outsl mov push imul addb mov (bad) ljmp and sub or sub and test cmc dec and cmpsb xacquire mov jmp les jmp in imul sbb decb arpl mov jl pop pop shrl and xlat jno icebp mov jbe cmp clc add cmp scas cmpsb xor dec int inc sbb mov clc inc decl mov jmp in aad sub popf test dec inc rcl jne pop mov add add sarb jecxz jp or repz inc add xor push pop push xor stos insb (bad) mov jne push mov or cmc sbb cmp mov push jbe ret fs stc negb xor mov fldl mov jp jmp mov or clc aaa mov outsb mov es idivl mov jmp inc jl jae inc insb push fiadd jne test push dec inc sub mov mov negl adc mov xor mov pop jo test cld sub add icebp adc push jnp jns decl dec mov pop inc jae pop test push adcb insl add inc std cwtl cltd (bad) dec cli adc ss xchg lahf mov (bad) xor mov push fimull jp lret pop jae adc aas jg push jno jae xchg pusha or repnz jnp lds sbb je test ret mov frstor add in jg dec das pop std (bad) adc xchg push dec cwtl ds mov lret xchg cmpsl dec out xchg scas and cs xchg and dec jmp mov cs sahf adc mov or aas mov sbb (bad) stc mov mov aas pop dec cld in inc pushf (bad) (bad) into iret in adc mov les cmp dec mov loope mov mov cmpsl push out popa push mov and call mov (bad) repz das mov scas insb cmp sahf inc mov ja pop ficom jnp or pop and mov xor ja aas mov in aaa mov inc ja (bad) pop aam or mov xorb or lcall lahf fwait pop adc push test es xchg andl inc jne roll mov pop jae rorl imul pop xor push cmp mov iret ret addr16 sbb push fistpll into mov cld popa mov and div test hlt mov inc ss mov test and popa jne cmp mov mov mov (bad) or ret out (bad) sub pusha mov jg push into jb arpl xor out rolb aad adc sbb jmp mov xchg divb xlat shlb jo int3 mov add push or pop and xchg imul mov sbbb jg cmc and xor out imul jns xchg lahf and sub pop adc push cltd data16 xchg rorl jnp in and aam shrl cwtl inc adc lock std inc mov sbb adc push dec dec lods push insl jg fldl in ret shrb stos mov test pop outsl mov cmp das or loop mov push add push mov dec scas out mov arpl mov aam xchg push mov adc push out pop stos pop sub lods mov loop or sbb mov repnz inc mov cli lods and or mov xchg popa nop jo rcrb leave nop mov ud1 cmp sbb sahf push xor aam jmp loope push or lds in cmp clc out jg stc out jg stc out jg stc out jg mov and pop sahf dec dec sahf mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add or push push and pop add das cmp pop xor xchg dec jbe pop fnstenv out mov mov sahf popf jno shlb xor mov test push call (bad) repz out repz add inc int3 xor xchg in pop jg outsb out (bad) int3 mov mov mov sub pop hlt sahf data16 mov outsl pop je mov rcrb (bad) mov xor xchg jg mov popa aas movsl cs out jp push mov out dec pop dec pusha pop mov imul out push fcmovnb pop pop aas cld popa push aaa pop (bad) mov sti jge jne push dec pop repnz jp xchg xchg mov addr16 andl jns xchg dec pop mov sbb inc mov add mov lea lock stc dec stos sub outsb out leave in and cmpsl fstl cmpsl repz shrb repz mov addr16 in inc and push imul lock push jl cmp mov loope test dec dec test dec repnz jg pop mov dec fbstp std stos arpl popf mov and mov push mov es stos test push (bad) cmp mov jg insl stos sub ret jnp mov lret arpl or aad fisubr test call (bad) fiadd scas pushfw mov mov sbb hlt xchg aas clc dec fldenv push (bad) imul adcl xor xchg or jne adc std inc arpl and mov mov mov xlat sbb or sbb sub cmp pop les hlt fucomi push jge pushf xchg pusha test in and out aas jecxz inc lds sub dec int movsl movsb in lea adc repz cmpsb lods pop sbb inc je mov jmp mov dec pop int3 push out movb cmpsl fs pop jne out jne xor jno in iret dec pop mov and add test insl pop xlat mulb stc imul stc daa sbb cltd subl mov mov call jl xor push (bad) add sub fistpll sub fsubrs rcr dec sbb divb pop sti sbb shrb xor hlt cmp push fs ds pcmpgtd jl jle fcmovu jns outsb sub xlat mov pop mov and faddp xor inc movsb adc ss sub or das fs sub in data16 xchg and insb pop pop icebp mov push xchg jp push ds adc or int xchg and lahf jbe in jle lds fwait jmp mov mov lahf push adc dec (bad) xor cmpsl pushw cmc pop cmpsb inc mov out jl (bad) mov or test js loopne mov inc sbb loop int3 aam push fsubl add pop xor ror lods out push jmp hlt mov adcl out sbb or cli in fisttpl arpl int3 xchg push cmpb lods (bad) jle cmp sar aam imul fwait cmc push inc push test pop pusha into sub xlat or push (bad) sub xchg cmovnp sti jmp push gs xchg lock mov imull mov (bad) rcrl pop cli mov mov (bad) outsb push in xor push xor push xor dec sti inc test out popa sub ret (bad) mov add dec hlt jp push enter dec in mov mov imul rcrl jg cmpsl lods mov cmp lods std outsb sub sahf fiaddl cmpl xchg mov int3 pop dec test movsl cmpsb xchg ja stos es push fcomps loop lds lods xchg sti loopne sub inc mov adc insb pop rclb xchg mov jle jle mov lds mov iret imul push imul aam xchg scas sbb sub mov jle mov jb and mov mov clc lods (bad) fsubrs sub adc or je pushf or add std xchg xchg lret test cwtl mov cmp pop cmpsl (bad) lods (bad) jbe mov mov adc push minps outsl fwait shll fistpl mov dec dec or das aad fsubrl idiv xchg pop jp hlt (bad) and sahf jo dec lcall test push jae cs cmc inc push inc test js testb mov std sub push aam pop pavgw push push das mov cwtl adcl loopne das in test (bad) push (bad) mov fnstcw aaa stos xor cmp les out sbb lock (bad) inc fmull or xchg sbb movsl xlat jmp push jb sub in adc or push xchg repz les popf adc adc pop ja hlt xchg in jmp fsubp lcall (bad) mov rcll int3 mov (bad) neg pop lock cmp ret mov mov ljmp ror fbstp in aaa mov or push or pusha inc out call pop adc adc scas setle push imul mov in mov jmp test mov out push (bad) stos shlb (bad) push mov movsb rolb into bswap jp adc add inc jecxz std rcrl sub es aaa jge mov popa leave jecxz aas sub add push ds frstor xor fbstp imul jge jo mov push and fldcw sub fs mov xor or push xchg lea cmpsl jae push repnz mov inc mov cmove cmp pop pop lods xor aad mov mov fs js xchg cs (bad) sbb add fsubrp push dec and xor cmpl fistpl lea sbb jecxz or jb subl sbb push fwait jo mov (bad) sbb fs pop fnstenv sbb ljmp cld xchg lahf out ljmp mov mov jno cmp fwait int dec and jne xchg rcr or popa imul out cmp fnsave and (bad) mov adc pushf std or xor mov jp xor xor pop jl xor sbb inc sub dec jns sub mov and mov mov gs into xchg xor je icebp rolb andl sub add add and cmp jp scas xchg mov inc xor and in mov (bad) xchg mov lods je mov add iret mov sub into (bad) mov test aaa aad adc test insl aaa ds nop cmc pop cmpsl and push xor push adcl add push push test adc es in cmpsl fstps data16 sbb shrl mov dec out mov jle pushf fistp in mov ret aas mov out ljmp iret cmpsl xchg dec xchg pop aad bound test pop lea cmpsb adc imul mov and mov dec inc idivb loope test push psubsb (bad) out mov xchg outsb and or sub sti ja jge into jecxz les outsl inc outsl push scas ds xchg mov ds xor rcll div lahf pushf int icebp mov or adc mov das loope fimull jmp mov mov pushl ficomp aas enter scas add xor mov rcl push jecxz loop xchg add js out lret jecxz jmp dec fnsave pusha xchg out andb jg xchg es sub scas lods incb aad ret loope inc in repnz push (bad) lret cmp lds gs dec in pop pop jmp mov pop lods mov (bad) fiadd lods arpl push fstpl sub xchg lds mov xor push sub and or push fstpl test ret fdivr test push xchg dec and jecxz ss sti sub or cmpsb movsl (bad) mov or xorb imul cs sub xor (bad) stc cmp adc jp (bad) jbe int3 hlt stc repnz jmp and mov paddsw rorb stos mov imul repnz gs sub jae fmul mov jle (bad) add popf (bad) loop aas ret xor mov mov push xchg lods pop mov xor gs push jecxz vaddps push icebp pop idivl and sbb cmp pushf and jecxz pop insl clc test push mov cs int jecxz or push call mov aas push imul aad fwait outsl mov jle cmp clc not into (bad) ds push mov jns dec mov movsb jno add jo cld xchg xchg jns lret mov pop scas lock pop push xor or scas addr16 xor sub loopne mov test paddd jmp scas jge das lds pop mov nop scas js loope jle cmp ret mov push xchg cld (bad) rolb (bad) scas rorb cmc lahf jb bound (bad) pop fldt adc dec jne imul mov imul mov movsw dec add mov stos jo roll dec dec sti mov push (bad) mov cld rorb sbb mov sbb pop sbbl lds inc faddp jl in test fsubl scas xor divl mov jecxz xchg pop cmpsb stc (bad) ja adc cmp js sbb add test addr16 jb clc adc scas bound push jecxz (bad) aam (bad) leave arpl clc out icebp jmp in pop insl iret push in daa nop and xor xor (bad) icebp dec and hlt popa adc mov rcl push jb loope push or fildll xor pop xor cwtl push pop xchg or inc mov pop or aas mov inc jns push or std ficomp or jmp (bad) loopne jbe mov dec lods js insb xchg xchg xorl (bad) or sub mov int3 mov mov aam in mov mov hlt mov pop out (bad) add jmp (bad) and bound and and and and and and and and and and and and and and and and and (bad) aas add pop inc mov fwait ljmp dec inc dec inc scas inc pusha (bad) or add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc loopne daa xor mov daa xor mov daa xor mov daa xor mov daa xor mov iret cmp cmc push ja cmc push ja cmc push ja cmc push ja cmc push ja cmc push ja cmc push ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja pop add push add cwtl or add add daa add add add add add add or add or add add jnp add movsb pop add int add testb add or add add mov add add jecxz add pop push add xor push add xchg add add add flds add repnz add add add add add dec add add add mov add add add add add add add add add add add add rolb add stc add add add add add add add add add add add cmp add lar add add add or add bound arpl xor xor add cmp sub add bound sub add add add add bound arpl xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add inc add and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add test add add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add ror add and add xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add add sub add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add add jo add bound arpl xor xor add cmp sub add bound sub add add bound arpl xor xor add cmp sub add bound sub add add add mov add add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add add cmc add and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add jmp add and add xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add jnp add add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add mov add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add bound arpl xor xor add cmp sub add bound sub add add add and add add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add cmc test add add xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add jmp add add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add cs and add xor xor add cmp sub add bound sub add add add add bound arpl xor xor add cmp sub add bound sub add lds add add xor xor add cmp sub add bound sub add xor aaa xchg add and add xor xor add cmp sub add bound sub add xor scas mov add add xor xor add cmp sub add bound sub add xor and add and add xor xor add cmp sub add bound sub add xor fwait testl add xor add cmp sub add bound sub add xor adc add arpl xor xor add cmp sub add bound sub add xor add add xor xor add cmp sub add bound sub add ss pop add arpl xor xor add cmp sub add bound sub add aaa add add arpl xor xor add cmp sub add bound sub add cmp in sahf add arpl xor xor add cmp sub add bound sub add cmp pop rolb add xor add cmp sub add bound sub add add add xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add and add add xor xor add cmp sub add bound sub add inc push add add xor xor add cmp sub add bound sub add addr16 add add xor xor add cmp sub add bound sub add mov add add xor xor add cmp sub add bound sub add stos push add add xor xor add cmp sub add bound sub add int3 push add bound arpl xor xor add cmp sub add bound sub add add push add bound arpl xor xor add cmp sub add bound sub add add testl arpl xor xor add cmp sub add bound sub add add pop add bound arpl xor xor add cmp sub add bound sub add add cmp add add add xor popa add add add sub add xor sub add pop add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc fisttpll pop pop fidivl jbe mov dec cmp pop mov mov xchg insl sbb (bad) sahf (bad) std jge xchg pop xlat add add (bad) repnz leave or mov fsubl dec addl pop sbb add in push mov gs sbb jmp mov aam and andl fcomps xchg push ret lahf jg or pop fdivs xchg mov xchg aas push mov cmpsl xchg xor clc jno jae pop add jne cmp js icebp sahf or mov cmpsl inc dec xor test jbe test push popf (bad) adc imul jmp jmp pop (bad) (bad) cld xlat rol or jge popa adc or inc int3 dec jecxz loop inc in js nop cld pop sti mov pop jecxz lds jle ds jmp (bad) popf pop push xchg xchg bound mov fcmovnb xchg xor scas pop lahf ret fistp lcall cmp lock or imul dec (bad) and cmp sub sub pop mov mov imul pop enter aaa ds loopne cli mov adc xchg sub mov xor adc cmp ds xchg add mov pusha lds stos cli loopne pop cs (bad) xor cwtl jge inc cmpsb sahf xchg fldt mov idivb jecxz sbb push add lret dec int3 aad icebp into out xor ret xchg mov push pop sbb mov (bad) (bad) outsl and cmp xor ret adc push cwtl pusha adc popa mov (bad) outsl fdivrs (bad) mov loope cmp es mov aaa in je mov popa test in cmp inc cmpsb mov mov cmp outsl test push xor pop mov pop mov inc movsb clc dec lds sahf sbb cmpsl adcl add test add jg sbb mov aaa mov cwtl mov mov dec add xor jmp (bad) negb out ror test clc sub es scas jg repz and dec loope adc pop mov jp jbe std xor mov js adc loop jns jmp ljmp cs or pop in inc mov push cwtl jns inc jl jns shll out dec mov mov sub push ficom out inc stos inc fldl (bad) out ljmp int3 sbb inc and ds int3 inc inc pop push mov and push and fldl cmc inc mov or jo mov testb aad pop movsb jb fadds mov jecxz pusha push int3 cli jns lret sti xchg sbb repnz xor mov imull (bad) mov xchg rolb add test cs push fcmove lret xchg jo add int out pop fimul sbb jge (bad) mull or push xchg loope mov cld jne mov sti push sub jle stos sub cs movsb sub into or lds arpl jne and out (bad) push call mov mov push pop adc hlt bnd ficom inc push repz dec into out daa stc ror testb (bad) test mov test pusha mov lock aaa adc mov movsb pop jg in std das (bad) mov add push adc jle mov adc gs ret adc push fsubrp pop out jns outsl in pushf cmpsl dec mov and adc mov popa mov mov cld jmp (bad) push int3 inc cmp sub movsb ret mov movsl das and sub je sahf sub jo inc (bad) lods test movsl cmp mov add insb (bad) mov push ja not imul ret mov or mov jne aaa or out leave inc adc sbb mov sbb inc push sub adc ljmp and (bad) pop (bad) xor rorb (bad) jns (bad) mov jne xchg fistpl and pop lcall (bad) pop lods insb call je ljmp and mov pop bound iret andb bound or add inc adc adc out movsb push lds mov nop xchg es notl popa fildll lahf fistl fcmovnb mov pop or pop fisttpl fcompl stc ljmp popa pop sub sahf adc icebp cmpsb push pop lcall pop jmp cmp cmpsl xchg test jl mov sub js sub lcall mov and push in sbb das adc sub cmp jns pop xchg jge cld xchg sbb push cmp setg xchg test sti jmp andl aas outsb loopne pop mov lods (bad) and out mov inc inc xchg or push or gs adc push or jae fwait dec cmp hlt jmp mov call push imul and loope insl test mov call jne mov xchg and cmpsl pop jne in mov adc push cmp cmp cmc jle cmp dec push sti (bad) imul mov gs std lds xor and mov nop xor cld xchg push push mov out leave pop or and (bad) cmp or in lea jno push add sbb mov lods idivb (bad) loope gs cld sub and stos sub das add jp out add pusha xchg ror stc mov dec add pop test ljmp pop outsl mov jb leave ret int3 iret repnz test popf xor mov sub jmp cmpsb mov push xchg in test push xchg fstp pop jecxz das sarl aad cmp scas (bad) je icebp adc clc loopne dec adc imul adc mov sar popf lcall sbb shll (bad) xchg mov push ljmp stos sub push jmp loope outsb sub dec cmpsb cmp cmp das cmp mov dec hlt cmp or mov adc (bad) mov adc setae push cs sub loopne sbb mov inc jo pop or and lea gs mov adc xor in mov xchg dec adc es scas sub pop (bad) cmp loope push sbb and inc fadd hlt rcrb cmp or outsb mov jb loop arpl dec xchg jmp cmp aaa sub inc jecxz out (bad) aad test jl inc cmp les sbb cmp jg mov in add xor add mov mov sbb adc out outsl es aad repz jle or add xlat adc dec cwtl xchg test push rcl mov mov sub mov mov es ja sbb mov pop insb (bad) sbb ja mov aaa mov push test scas ficoml stc jg cmpsb gs (bad) insb cmc fstp sahf cmp xor dec pop xlat adc mov push out and adc lcall movsb mov jl mov loop xchg leave push int mov cwtl jge stc fwait pop fs lods mov movsb mov test pushf pusha fs popf aaa faddp loop dec iret jmp mov xlat ret jns clc cmpsb inc into push (bad) nop lahf insl lds adc aas fs mov mov (bad) xor in xlat (bad) and xchg mov test inc repnz mov dec movsb jno xor add or push xor xchg jae rcl scas mov not ss mov out (bad) sti add pop ja fwait pop ss cltd cmp mov mov lret jle push or into pop push negb test inc std cmp jbe add cmpsb xor mov fsts pop jbe sbb xchg jb jo pop lods mov or add mov jge stos jg das daa and loope adc ja adc dec std dec shlb (bad) pop jp dec aam mov sbb data16 movsb sbb lds fisubr sbb enter (bad) adc in dec sbb sbb pop push sarb int3 ror push add push mov jmp adc (bad) push dec out or into sbb popf adc pop sub jg dec cmpsb dec dec jge int enter clc jle jp and movsb sti dec rolb ret std insl cmp xor (bad) (bad) (bad) mov stos in (bad) out add test mov stos ja push mov cmp or ds add int clc into insl ljmp jae (bad) notl aas (bad) nop test fist cmp sar js ret nop ret or pushf sub mov out xchg mov repnz cmp roll jae rorb (bad) (bad) xchg test dec aas ret mov mov aas int3 mov jle int popf lret or or popa push daa jne mov insl dec and mov xor xorl rcrl mov std mov pop pop pop xchg sti or add mov ret pop loope jecxz insl outsl push jo sub rorb es sbb sub and dec sbb add pop sub sti and jge add xchg adc xchg push xchg or pop sbb push shlb or and fidivl sub mov call push insb mov push dec in jb cmc (bad) xchg cltd outsb shrl sub in dec int inc pop sub fcom jg jns push mov or fwait inc xor in in shl clc or add dec in or mov pop pop adc fdivr jo leave cmp lcall cmp daa rcrl sarb push loope test xor adc icebp inc mov or jns dec pop mov subl xchg inc dec mov into ja popf mov out out cmpsb enter fs jecxz jg and outsb imul mov pop pop movsl pop push es arpl sahf sub fnsave addr16 sub push cmpsb ss add loopne mov fcoml cmp lahf cmpsl (bad) in mov fsubs (bad) xchg (bad) cmp lahf in test lods and fs push jp lods (bad) or ja fmuls rorb cmp mov mov ja cld movsb int sub mov sar (bad) bnd jb imul jmp add ja cwtl lret adc scas adc xorl js (bad) lock hlt jae mov int sbb sub add or in mov out cmpsl stc xchg pop lret dec bound jb xchg insb xchg cld imul pop jbe sbb arpl ret ljmp adc xor aad in aam sbb test (bad) jns repnz adc loope inc xor cmpsb mov hlt mov fwait mov mov dec pop loope inc shlb fnstsw outsl mov sbb clc in aaa repz daa clc dec dec jg add cmp xchg add jg aad pop dec fist add mov inc jo jne leave (bad) xor int3 ljmp cld (bad) adc lret stos inc dec lods xchg push and test imul lock insl sbb fisubl stc insb (bad) outsb int3 pop xlat adc xor enter inc xchg jno or or inc xchg xchg sub incl adc pushf sbb fild lods lret daa stos sti mov sbb hlt lods iret pop adc or fcoml popf sbb ret das and pop jmp xor jl (bad) das lods (bad) hlt xor mov adc cmpsb pop or xor out dec movsb arpl xor mov (bad) push cwtl sbb mov pushf arpl jecxz roll sub int lcall push lret lock push inc cs iret std xchg lret mov adcl outsb sbb pop sbb xchg sti mov push lods fsts ret mov and add loop fwait pop pop loope sahf adc out pop (bad) xchg add adc into lock pusha jbe and bound xchg cmp mov cmc push sbb test xor adc mov jp jnp jge mov mov das rolb (bad) popf sub jg (bad) out sbb lret inc push repnz loopne inc push cmp (bad) (bad) xor cmp adc leave iret inc jns mov mov cmp clc mov xchg jle mov (bad) repnz aam fwait rcrb insl lahf sub inc nop shrb mov push imul imul (bad) in mov icebp push mov xor mov inc stos cmpsb push adc mov icebp dec test rcl nop jae xchg cmp outsb and int test fs cmp lea call xchg test lcall or pop cmp and (bad) bound scas dec pop mov pop std adc outsb push jecxz out movsl pop xchg (bad) and sbb sbb sbb pop jmp cli inc mov mov outsb dec and xchg pop push mov or test es or push dec or adc push outsl arpl jae jge pop mov inc lret movsb fndisi(8087 and das nop lret push mov in sbb in inc insl xor jg mov inc add dec sub movsl adc push jp dec js sub lods stc dec xor in xor imul sub inc inc es fsubs movzwl pop lahf cmp pushf loopne pop outsb je cmp push cmpsb pop push (bad) lds insl lods mov inc pop mov call imul or mull mov lock fmuls (bad) lret fwait je fnstsw test cmc lock jg jge lret (bad) in mov cmp pop fs gs rcl inc push sub repnz sub and incl mov push stc in adc jo push sbb mov shlb sub mov inc mov jmp push idivl jno mov jnp mov jno dec add leave add inc out sub jo cli xlat push (bad) inc jg push or pop gs mov or pop movsl jge out sub data16 loopne fild mov mov fwait aas movsb loopne popa dec cmc pop sub call fldenv out movsb aaa add mov mov jbe adc mov dec test mov sub xchg jnp sub ss and cwtl add xchg sbb ficoml mov xchg lods xchg jmp lret out lret cmp adc jns cmp jle cmp fildl push roll pusha test jbe push (bad) pop push lret xchg scas js cmp or aaa mov mov pop push loop sub mov pushf cmp cmc push iret cmp xchg jns sub out xor add loope fcom mov mov (bad) clc test pop lea sub adc jb cwtl std outsl fistpl sbb pop and mov cmpsl cmp fistp push xchg into add adc add jg mov mov iret (bad) and mov xchg pop fild jne push inc sub loope lods aaa jb aas jo mov inc movsl out les xorb outsl inc and mov daa and jle bound add xlat push dec aas mov mov nop mov mov and pop sub std mov notb jp inc or adc cltd aaa jle js mov adc mov adc mov loope dec xchg cmp add imul inc adc cwtl (bad) test xor lods pop lds pop adc in lods icebp jnp and adc enter fdivr dec vcmpss stc sbb add imul decb iret mov jmp push (bad) adcl in loop andl xchg mov loop mov jmp and inc adc (bad) mov pop fimull and pop inc sbb test or test xchg push and jg js pusha ret cs dec sbb out shr cmp pop lds and es jbe pop int3 push cld sub dec rorl jns test adc loope pop lahf (bad) or lods mov dec into xchg test push mov mov xchg or dec push jecxz jnp jae lret jns test test mov aaa ffree push je mov pop inc jp jg xor cli jmp xchg dec sbb out int fcom xchg lea ret ds cmp pop scas cmpsb mov mov loop movsb adc mov push pop adc jbe jg dec mov xchg mov mov push or sub pushf jbe int3 adc test scas cmp push xchg sub out inc sub cs fwait cmp into (bad) decb mov loopne sbb iret xchg fistp sbb lds fsubs fsubr pop jl int3 fstpt iret jge cmp or aad int3 cs xor and movsb in repz xchg fcomps iret mov ljmp inc out cmp in xchg mov repz in in fdiv xchg das pushf loope icebp int aas std test push sub lret into cmpsl imul int or iret pop pop xor and loope mov lahf scas out mov dec jmp mov jnp andb aad xor imulb sub std xchg and jne mov and mov xchg or pop sub das mov sub dec js bound mov ret jb xchg imul dec or jmp xchg sbb cmpsb fwait mov sbb lret outsl lods lods scas or jl jle mov cmp dec lahf mov test inc ror ficomp xor jne mov mov xchg outsb loopne push es adc ret in cmp push cmpsb imul sub mov xor and xchg mov jle push dec ss stos loopne sahf cmp sbb mov jge push cmp fdivrl nop and push mov jl scas inc out ss test (bad) lds fist mov loope data16 inc (bad) push inc pop adc popa pop pop xchg push sarl repz adc cmpsl arpl mov fwait lds jg imul cltd sub jmp (bad) out and mov imul xchg (bad) hlt lcall scas rorb mov jnp fsubrs mov dec jno (bad) aad inc push aad adc fnop xchg add imul cmp cmp (bad) imul lcall rcll lds jno xchg jge cmp pushf jo mov push mov push imul popf mov sbb sbb push or mov mov imul in jne mov cs repz loope and (bad) cmc icebp (bad) bswap push call in or cmpsl ret (bad) aaa sahf cmp mov and cmpsb sbb jo push arpl add js sub into icebp mov xor clc add sub xor pop iret shrl mov jp insb xor xor int3 cmc pop inc mov stos in jle (bad) stos push mov and push aaa sub fimull cld aaa scas sub jmp mov sbb fidivl std xchg jb add inc push cli cmp jecxz xor jo push sti xchg xchg ret mov lret fldcw fnstsw push in sub int3 hlt mov ss ret jmp dec nop sbb lods cmp and mov dec mov into adc xor inc int ljmp hlt js fwait out xor push mov inc pop sbb (bad) test fs and iret dec (bad) sub mov cmc push mov push push (bad) in outsb imul loop jp sti xlat xor ss pushf sbb jmp inc push lahf cmp dec mov mov cmc outsb fwait jge fmuls xchg mov es jge pop push aas cwtl jmp and cli fadds mov aaa shl movsb sbb je sbb out mov push loopne rclb les fs push mov subb sbb movsb dec mov call sbbb decb sub push test add jno cmpsl sbb mov dec cmp das sbb aam ror xchg js pushf mov mov sbb mov sub mov test push push jge push xor pop xchg or js push and cmpsb hlt stos dec insl push push inc sub xchg fs scas hlt jnp pushf lods mov adc dec inc imul mov dec into shrl test out mov add cmp out enter or cmp cmp cmp lods add andb (bad) push outsb push test in popf lret jl jl hlt pop loopne mov pop mov orl ss int inc dec out xchg push xor jb mov xchg (bad) xchg sbb and mov lcall sbb leave out cmp daa mov and push mov rclb loope and jo dec dec cmp dec or xor mov gs ret pop outsb hlt mov mov or inc mov aad pop test ret pop mov lret out loope ss dec or fucomp jne or jl xor mov pop push dec sahf mov mov cli (bad) xor adc mov inc loop cmp (bad) jne jno xor les mov sti sub mov movsl sub rcrl and fcomps push jl cs (bad) push add or xchg dec dec or repnz push int xor jns ljmp add mov in in in xor adc fwait dec lret mov pop dec mov jne cs lret mov ljmp push lahf lods mov cmpb enter dec add popa xchg lds hlt (bad) pushf mov xchg iret sbb ficompl repz or jl pop les ret loope dec cmpsl xchg sbb orl mov call and out in push adc adc mov inc inc push dec aaa rcrb aaa mov cmpsl mov mov and out inc mov mov dec mov mov out or push ret mov cmp add sbbl mov xchg jns mov movl dec jmp (bad) cltd mov notl popl xchg in pop iret imul push adc mov rcll cmp fstpl jb jno stc out mov push adc (bad) lods dec pop or int push clc sub jno in pop or sbb xor mov das ss cmc mov (bad) jo into cmpsb xor insb int (bad) jo push lds push pop inc std and std scas mov push pop cwtl jae in pop out das mov adc xchg cmc mov jecxz cltd rorl push cmp jmp cltd ljmp mov jl mov cmp scas adc ret adc stc adc jp push xor push test and insb jbe sar pop mov dec xor jg pop cmp nop mov daa outsl mov in mov aas cmp lods leave movsl dec movsb pop dec iret sti test (bad) testl notb xchg shll out pop lcall mov inc scas or (bad) and xchg mov sbb lret or ror in testb cs cmp mov dec mov mov mov push orl dec and sbb xor pop push jne leave jecxz int stc enter adc mov push scas push jmp (bad) mov lcall ret xchg ja inc mov shr jnp ret add xor fiadd lahf mov popf inc and sbb pushf cmc (bad) mov stos (bad) je decl or pop repz stos or nop sub sub outsw pop and (bad) cld adc adc lock in push mov mov fwait pop sub adc mov jb jp aad sub test and inc insb outsb inc repnz dec fildll std aam push pop lds cs outsl mov and pop outsl pushf ffreep in outsl push push xor jge jle adc jg add jmp call mov mov mov mov inc sbb mov mov push sub xor jmp fdiv jecxz push adc arpl rcrb test mov sbb ds fstl jle bound mov pop or cmp push pop xor mov movsb mov dec and (bad) lods mov mov adc jb mov push (bad) in (bad) dec dec bnd aaa and stos js jb xor pusha xlat xchg jecxz gs rclb (bad) mov aas sub dec mov sbb cwtl popf fwait lahf inc fisubr bsf std loope push mov adc jl push xchg or sbb xor stos mov push dec repz bound xorl out inc cmp jae xor mov clc push jae in (bad) stc popa dec aas or mov adcb lret xchg mov sbb jmp (bad) cld loop loope jmp paddb aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp loopne add cwtl repnz clc or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait imul jnp aaa (bad) mov fwait pop lret (bad) ret mov add mov add dec scas in push mov cwtl sbb (bad) push push push aas hlt fisttpl repz push leave add cltd aad sbb test xor shll mov mov inc lret das mov call cmp imul leave arpl adc int push fildl xchg ljmp xchg test nop pop mov jae xor cmp mov xchg addr16 popf fs mov and and call data16 repnz cli std jbe inc cmpsb mul cwtl les or xlat fwait sbbl cltd xchg icebp add dec dec push mov adc out js and lcall cmp push mov cmpsl inc aas mov mov adc adcl xchg push dec out mov in fdivrl fildll mov das mov mov dec jge dec pushw std dec ss jecxz or test dec call nop test jns dec jl cmp mov pop cli and inc dec cmp mov js icebp xor (bad) sbb pop sub clc pop sbb subl jo lea xchg jnp (bad) xor loopne fmul dec sub stos mov jne xchg sub mov sti jle dec in popa inc (bad) stos mov inc jb adc movsl and das sub sbb cmp add push cmp enter push cwtl dec sub pop in (bad) adc push and or adc xor cmovne shlb daa lock cli das adc fldt or inc and loopne arpl pop leave xchg cmpl dec sub sbb cmpsl pop inc jnp mov ret jg shl nop out mov push xor inc (bad) dec outsl push dec andps shl sub pop flds inc xor aad mov arpl dec leave add xor mov out push pop add pop mov pop fwait dec mov xadd or xchg negb (bad) pop inc cmpsb pop (bad) jno cmp ds mov push mov mov push rcl and cmp enter imul sbb or test push outsl adc mov fsubs iret sub int3 data16 addr16 lds jmp dec xor lret mov add ret js cltd les (bad) lock inc stos mov add jmp (bad) jb inc in (bad) pop jns imul push sbb or xor negl pushl cmpsl lock cmp mov or cmp jno daa xchg inc outsb (bad) xor ss ja scas das test dec push loop dec dec enter xor inc fcoml lret popa push mov mov mov inc in xchg icebp lock andl or aad ss sarb mov int ret jg mov push mov loop negl ja adc sbb lds call outsb inc mov push mov adc int mov mov push cmp push add jle dec (bad) and or mov cmp push cli je jae,pn mov xchg (bad) icebp or popa (bad) mov out adc xor jns fwait arpl dec or test jb mov movsb xor and jne jae push xor push mov sub mov stos mov inc repnz and rol add pop nop lea icebp mov sub add pop sub pushaw mov sbb fstp loopne fidiv mov mov inc sub mov push mov push jne and cmp dec mov mov das mov mov bound jne insl jle (bad) jbe push leave dec xor cmp dec (bad) aaa std pop imul sub add xlat (bad) xor mov mov add (bad) in xor jle pop dec dec mov fs xor xlat mov movsb add stos fcoml loope and inc and xchg iret jb cmp jae addr16 cmp out sbb ss lcall call lret idiv aad push sbb fiaddl fld lods outsb push pop sarl add and cmp jp cmp mov (bad) push (bad) (bad) mov lcall mov dec in push adc ffreep mov loopne lods enter out inc sub inc adc test lahf sub fwait mov aas mov cltd (bad) push dec sbb arpl push and add stos imul pop aas mov push into xor xchg mov cmpsl dec push lods mov stos mov adc lahf insl xchg (bad) repz leave inc xchg adc negl int3 lods xor push mov mov sbb xor mov lret (bad) leave test (bad) fidivl mov sahf inc push inc mov iret jl lods push imul jge push lret in inc in fsubr mov daa push enter jnp outsb inc xchg lcall cmp clc xchg loop push sbb jno hlt lods (bad) cltd (bad) lea dec sub jb fmul sub out out inc jecxz xchg movsl sub rclb mov jg enter test pop iret subps incb (bad) pop adc xlat jg adc jle cmp add xor dec mov cmpsl and xor inc addr16 fcom xchg lahf nop sbb cmp cs enter clc inc pop or cmp or fimull xchg adc sbb sub xchg xor nop mov sub (bad) sbb cmpsl mov and pop test cltd aas sbb stos fmuls push stos std cmpsb and lds shl sub les cmc lret test xlat pushf ja sub aad push push orb ljmp jae jno sbb sbb adc or daa pusha adc jne cmp xchg or stos mov movsb sbb pop add cmp add push outsl push sub aas and jmp cwtl aad iret test out push call out mov fstpt and cmp dec sbb mov insb push test mov cs ret cld pop fwait mov inc std ja xor lock (bad) std jnp jb add and iret jge mov jnp gs ljmp clc (bad) imull pop adc stos pop sbb jl mov dec sub sahf call int3 test and (bad) bound mov (bad) mov (bad) adc mov pop add fnstsw ja mov ja aas inc addr16 push sbb jne lods in cmp cmp push daa je pushf ret lods mov or cmp adc sub push mov cmp enter jp bound and mov aas daa mov sbb mov inc insb in mov mov sub aas lret sahf ds mov in (bad) mov scas ficoml jg fsts in lret sub insb in cltd cmp mov fmull jbe (bad) sti fs les divl sub (bad) dec or stos pmaddwd (bad) push scas inc add push cmpsl je xlat lret dec ds pop or jns lret xchg jne xor and vpsubusw xor (bad) es adc cmp adc stc insb lahf stc lret (bad) icebp loope add (bad) and das lods inc jno jo js and pop hlt xchg data16 sub mov pop mov js mov rorl repnz sbb sbb pop xchg (bad) mov and sti out outsl xchg in mov aaa in jnp lods loop push cld push dec pop mov in inc xor imul (bad) jo dec movsl sub mov cld add (bad) xor mov sbb add or ljmp shll imul cwtl inc and cmp adc sub cmp mov cmc jmp repz add sub mov push jg fcmove ja mov pop mov or xchg jne icebp mov enter mov in jp lds jmp int add ret pop xor jo test or mov mov push les stc cmp cmp add ds push loopne mov lock notl lahf push lds add jae enter jmp out pop andb gs push call mov movsl jp lret xchg xchg lcall add pop out and lods push clc mov dec xchg push add scas mov inc bound or xchg gs push push or jmp xor aaa cmp cmp lret push (bad) mov cmp push or insb ret movsl pop loopne mov fcomip mov cmp pop sbb jae andps imul sbb dec sub mov xchg xlat pop mov (bad) lds push push push inc inc (bad) sbb popa es xor addr16 xor dec sub imul jno jmp push loope fwait mov xchg adc jno push dec imul ja inc mov add lret je je stc cwtl sub dec mov fist es aad and mov add push push pop adc (bad) jbe pop pop add insb xchg mov and mov and sbb inc insb and popf jecxz (bad) int3 add cli jno adc and add daa roll and fdivl push les cmpl push push aad sti push mov orl adc and inc rcrb (bad) push and xchg and xchg das fist jge inc mov push clc pop push sbb xlat sub pushf fildl inc jmp outsl push inc jge fild loope mov or dec sub or jmp mov icebp add push cmp mov fist lds xor or mov test jge mov lock add and inc data16 popf mov daa stos fs and repnz adc (bad) mov inc fistpl push lock fistl and (bad) mov xchg push in adc outsb lds decl pop add xchg sbb adc mov cmpl sbb cld xchg in aas inc scas cmp das mov std (bad) subb add cld xor mov push addl pop fwait push lds outsl and sarl rcll cmovns out dec mov or cmp int and sub push fbstp and or lret (bad) or fmull and mov and or (bad) and (bad) imul shll inc addb add fadds push push mov push inc repz rorl fs dec das xchg pusha adc leave add or inc out mov adcl mov inc sahf mov xor jne mov jae pop outsb inc cwtl lret mov xlat fldt xchg and xchg scas shrl pop imulb shll mov push imul loope push stos jae jbe push icebp cmp insl or cwtl mov push adc inc enter int3 xor inc aaa repz (bad) or push sub pop cs fstpt dec pop add mov outsl xchg (bad) bound cmp push add pop test cs icebp pop fwait daa sahf mov int lods lcall sub or or push and mov or ret loopne aaa add sbb xchg call ret repnz dec (bad) cwtl mov adc shll mov ror or sahf jecxz mov fwait mov sbb arpl sub jp inc adc icebp jo shr mov cmpxchg in inc outsl and push rorb test sbb (bad) sbb mov xor inc sbb dec mov dec data16 imul jp push sti xchg mov in shll vmptrst mov cld or fldt or add dec jge xlat bound ljmp das mov enter adcl push xchg adc jmp xchg dec dec or sub repnz sbb push pop jbe mov cmpsb cmp mov das hlt mov lahf push mov out push ds xchg (bad) mov iret push ja mov pop leave cld or and loop fisubl insl pop shll test inc xchg outsl dec xor and pop xchg inc fidivrl (bad) in add inc sbb (bad) xor sub call mov adc adc mov mov popa cmp pop ljmp icebp aam js inc jge,pt arpl xor adc inc rcll xchg cmp and adc lock sub pop push (bad) xchg push push js jbe outsl ficomp jle (bad) adc (bad) repz add pop cltd sahf lcall pop dec dec clc mov push outsl xchg aam xchg jb fwait sub jnp mov xchg xchg insb les je fstps mov push notb sarb test or adc xchg inc addb scas frstor test enter push xchg aad adcb insb add push mov jae push xor imul pop loope adc pop and adc popf mov popa std xchg bound ljmp pushf sbb mov adc xchg mov mov sub jle out jne dec and dec pop fmulp dec sub and and ffree dec aas sub fstps (bad) in (bad) mov pop jns fwait jb test movsl xchg adc sbb sub repz icebp or test adc cmp dec pop rcl pusha xchg arpl (bad) mov insl pop xchg popa cmc and add adc xchg push addl mov jne or inc rcrb xor popaw icebp dec dec aas xor ss ja js dec adc inc add fldcw scas cmpsb ds xchg mov xchg inc mov mov lret pusha xor (bad) mov inc adc ret mov cmp xor sub cltd fs adc dec mov fbstp xchg std inc mov sbb outsl push sbb fwait (bad) cmp or jmp hlt bound pop or push imull idivb xor mov aaa hlt mov sarb xchg enter mov push dec mov sbb adc mov jbe mov xchg jl or test sbb xor mov push jge xor push sub push xchg test pop lods mov sti add outsb sbb insb das jb mov xchg scas pop xlat int cmp jle or xor jmp cli mov test (bad) outsb ds (bad) sbb add js test sub mov and pop aas popf jl mov jle pop ss jb inc mov (bad) push jns or dec dec push xchg sub popa jne cli mov (bad) iret ret call in mov scas cmp and cmp push push lea cmc xor cmp sti mov and outsb (bad) pop and sbb mov test or cld inc stos out push mov mov movsb fisubr mov push push cli xor sar inc pop mov mov lods push cmpsl push test jbe mov in or pop (bad) xor outsl and lret popf sub sarl push adcb (bad) dec push push pushf sbb out sbb das cmp xchg mov hlt xor hlt mov test dec fildl outsl das pop cmpsl pop push xor in mov add mov sbb inc (bad) in cmp out inc lods pop mov mov mov frstor testl inc xchg outsl rolb loope xchg sbb sbb mov and cmp xor or movsb jg push sbb push aaa or lret int xor test pop jb leave jb in add mov sahf out loop fs pop and fistpl mov test jb or rorl mov or lods insl mov xchg lds pop enter aad mov cwtl mov lahf je clc pop sub rclb mov jg lcall mov gs inc pop out mov es sub sbb cmp clc fistpll cwtl sub jecxz lock xor scas sub mov andb out leave push iret insl (bad) and in adc lods xchg xor int mov mov mov dec loop jl xchg repz (bad) jnp (bad) (bad) or (bad) cmpsl push adc push sbb enter pop loopne push mov lret dec and adc dec xchg pop jae stos roll push mov imul jnp movl rcrl inc mov shrl cmp fimul sbb inc inc cmpsb push sub jecxz inc sahf mov add into mov sahf lcall dec adc aaa cmpsb rcll or test and push shlb fldt push ljmp adc sbb lret out mov fisub jne push or cmp fcmovnb or push std fbld sbb sub cmc inc scas in xchg clc test roll out mov divl scas dec mov (bad) mov mov or push mov shrl fstl sub pop mov ljmp xchg pop jns mov jns clc adc ja sub fs (bad) jl movsb pop push pop cli push sbb adc out add adc xor clc push push (bad) out fnop dec xchg aad and mov jb fistpl or lret adc and repz outsl mov lds cmp mov cmp es jno stos inc pushf cmpsb sbb and sarl int3 das ljmp cld sbb movsl mov push pushf mov stc icebp mov mov push jno js add push (bad) shr mov adc add mov pop enter xor pop mov (bad) cmpsb xor cwtl fdivs xor push sahf mov fnop inc popa rcll push loop jp add xchg fs dec add subl dec cmp cmp mov mov addr16 pusha js stos mov jae cmp dec dec mov inc xchg sub clc rclb add jle adc xchg pop xchg dec inc pop or int3 dec jnp mov popf jnp xchg xchg pusha iret or push cmp pop fidiv int sub outsb and jbe repnz jecxz mov inc mov stos imul (bad) in push orl outsl push cmpsb xchg movsl es xchg cmp out (bad) out pop jo ret mov test outsb cld lock dec repz stos xchg xchg sti pop jnp or adc les xor ds xchg (bad) insb xor and incb sbb outsb repnz inc test loopne adc xor dec ds xchg xchg dec test push mov jae cmp pop (bad) das shll inc fmul cmpsl cmp in repnz adc sub lcall in sub xor mov outsb inc adc repnz mov push shlb inc movsl aaa sub ffreep jne outsl xchg arpl leave les mov arpl mov ret mov (bad) bnd stos or rclb imul enter and rolb clc not sbb fldl xor cmp xor inc insl stos pop jmp inc push pop xor mov fistp xchg hlt (bad) or movsl or in loopne sbb bound dec mov test rorb test and sarl ds mov xchg out jecxz jecxz int rcrl or das (bad) mov push stc je out mov cmp sub arpl mov pop loope popa pop mov xor negl (bad) lods sub out ficoml ss int jns pop adc add lea adc add mov xor sub fist and in lret insl out dec or jbe mov ds or sbb mov fnstcw mov fs sub sbb cmp xchg inc adc dec mov in scas dec (bad) pusha mov push (bad) scas sbb (bad) outsl jbe push (bad) mov xor dec int3 lret inc in push push cmp loope push inc fdivrl or imul jns sahf push jge inc push call leave andl js sbb or popf add and adc arpl hlt or inc lret jmp xor orb mov cmp fldcw xchg cmp add fldcw sub pop push push push in dec bound lahf adc clc or aam movl pop mov push cs repnz sub fildl das aas dec xchg sub mov je sbb test fs clc mov popf pop das jmp and and movsb fildll cmc cltd ljmp fcoms push pop jg cmp mov dec jne ficom inc dec push or cmpl test fidivr fistpll ja sbb out jns int scas add call mov imull xor ds int mov jle loope pop pop adc lea xchg (bad) in in lret adc push push (bad) std ja (bad) xor sub xor mov ljmp in (bad) sbb shl icebp fcoms cltd inc mov fcompl push cmp mov jl bound jb mov jne mov cli push pushl outsl mulb gs or mov dec and andb movsl aas add sbb mov insl xor ja mov loopne mov notb push push adc xor dec in jae push dec enter fdivrl rcll inc or fimul push cmp gs adc pop xor pop addr16 push pusha fdivrs insb daa in call and and dec adc test loop mul push mov (bad) out jecxz out fs (bad) cli mov sub loope test mov outsb (bad) (bad) and int3 adc mov rol call sub sbb dec sub jne sub push push sarb inc icebp xchg and mov push add add ljmp jg pushf fadds push and xlat dec mov add test mov or sub test mov push inc gs xor out mov insl inc es cmc xchg loope inc stos mov dec mov adcb pop mov icebp xchg pop jne mov ljmp cmc lods (bad) mov enter shrb orl sbb add mov or je mov cmpsb jle mov pushf jmp (bad) jae push (bad) negl cli mov push or adcb divl fs pop stos mov out rorb loope and xchg int3 dec aas divb data16 jbe scas mov and lahf mov xchg mov cmpsb stc jb mov mov jl xor test stos lock push in xchg (bad) leave shl sbb mov iret push and adc in insl push (bad) xor adc mov dec shrb rcrb addr16 fisttpll pusha sbb stos adc lods in jge pusha je jg mov adc js inc push add pop call pop test pop lock and fisubrl add ror fsubr lods pop mov inc out in test loope pop mov out lods mov (bad) and dec lcall sbb push stc or cwtl xchg bound sbbl rorl out mov fcmovnu push and rorl js,pt (bad) loopne lock in mov lret push stos sbb or in sub mov fsubrs outsl sahf xchg hlt mov mov stos jge inc mov jmp xchg jp out pop repz dec pop (bad) mov add mov outsb inc int3 enter add adc sbb cltd in mov pop cmpl outsb adc fldenv addr16 mov lods dec stos mov mov and inc ss movsl ss ret or sub (bad) mov jmp mov mov shrl je rcrb sub xor bnd pop jo (bad) sbb loopne dec jl and fisttpl shr addl inc out (bad) mov js jecxz adc fisubl add push or adc lods dec fwait xchg adc add cmp or imul cmp mov js mov jno and in adc adc js mov and gs cmp std je aaa es jl lods sub and jo das stos in mov sbbb out cli ds lock add pusha push pop mov (bad) push mov hlt xor xor (bad) cld jp (bad) jge bound stos out jae sarb cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz add pop pop sbb pop push inc or dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add or mov mov pop mov sub mov ss in cs cmp push add in add push orl xor or push ret inc imul cmp lcall andb (bad) or push and xchg loope loope mov inc add out mov sbb xchg in mov dec xor xor (bad) rcrb fidivl xchg push scas fldt pop adc scas aad addl jo into insb lock outsl jnp adc add cwtl add leave imul push and add imul and daa (bad) std stc mov call cmp shll rcl and cmpl faddl fwait imul mov stc jmp xor inc sbb (bad) imul dec mov ja add popa lret stos outsl pop cmp cwtl dec xor cmc push jbe leave fwait into cmc das jo mov testl sub mov fsts fimull je add xor stc sbb sub loopne inc xchg std insl sbb (bad) addr16 jle jnp mov popa out mov mov lods movsb pop enter cmpsb pusha fstps in add mov outsl sbb xlat test test mov mov mov andl xor cmpsb cld add cmp out push cmpsb int3 cltd sbb fs mov jns test icebp and andl mov push pop int3 jmp sub inc lea call repz std fsubl dec int3 inc aam mov sub jne outsl out addr16 sub jne or cmp pop and (bad) xlat pushf or movsl cmp adc imul lods stc lock xor mov loope cld mov fildl xchg add xor fist fsubl mov ja lea ljmp cmc or bound pop aam mov ss lods sbb gs xor fsubrl push jl and rorl cmp mov ficomp imul add mov mov mov orl cmp into jns inc leave or inc xchg (bad) jo repz test cmp and pop loope mov inc adc out das testl push mov inc and fnstenv jle sbb fwait xchg out clc and js ds mov jge jne xchg pop imul add outsb lahf fisubl lock outsl inc popaw sbb stos mov mov into movsb lea mov arpl mov fimull out iret out out pop push ficoml lret out pop jae inc xor dec push xchg sub sub stc pop daa pusha js daa (bad) mov inc dec xchg leave gs loope jns cmp or add inc pop sbb lock jo stc ss xchg pop pop pop sbb mov push xor adc mov jb inc jge xchg pushf out mov xor adc ret and cmpsl sbb gs mov scas xchg cmpsl push push push arpl or jae xor sbb enter jb adc (bad) movsb cmp sarb in mov popa hlt fnsave repz sbb cmp (bad) pusha lock jle xor (bad) mov jmp imul dec xor leave fidivl std and movsl out push aad fwait out sub and loop pop xchg and lds sbb or inc les add rcll clc and punpckhwd lret push sub mov ret repz push mov jl mov dec nop rcl enter cmp sbb pop inc movsl mov fnstsw sub outsl test insl psrlw sahf aaa std loop inc mov leave or lea push nop in std loope and xchg ret xchg cmc dec xlat rcll mov xor repnz inc mov in dec xchg push and test in cs or call push mov cmc inc sub cmp outsb es ljmp mov ljmp sub movsl (bad) mov fisubl imulb sub cmp push adc and not jo sub fadds (bad) mov xchg sub mov stc sti rorl jge repnz or cmpsl or (bad) jg sbb aaa stos dec jecxz je aas or pop (bad) int scas cmp dec gs fist shr push ficomp push (bad) mov inc orl mov dec push pop mull (bad) mov std pop mov jno add push cltd test out bound mov xlat xor inc and arpl mov std lret das dec cvttps2pi outsb rcrl aam nop xchg jbe cmp repz pop xor dec scas xchg pop popa sbb cmp mov cmc xchg push shl jo inc (bad) out ljmp sub fs les push faddl (bad) mov in lds sbb repz daa and mov jo cmp imul mulb sbb imul rcll fsubl inc stos (bad) and xor bound jnp and or mov or jmp notl mov pop sti push pop stos std push mov inc pop mov aas jecxz xchg add jge jp cmp mov fucomi les movsl pusha fs pop mov add fs adc push dec (bad) insb xlat (bad) jo nop xchg js (bad) stos movsb cli cltd mov daa std (bad) mov sar nop push mov mov xchg mov stos ret ret hlt into lret adc fistl mov mov mov in jecxz xchg imul (bad) mov addr16 cs arpl sbb pop nop jg (bad) jmp push stc pusha jmp hlt adc test jne jnp cld sahf out xchg lret pop xlat imul cmc (bad) rorb mov adc lret push sub mov lcall test mov adc lea cmpsb lret fmuls cli scas call mov pop movsb jle out jnp jno sub sar lcall xor xlat sqrtps xchg dec mov stos test push jmp ficoml je inc not aas scas push jmp mov inc push cwtl sbb lahf lcall pusha mov fnstcw rcrb popf mov dec mov mov enter xchg mov inc jnp mov pusha (bad) push pop enter mov fmuls addr16 jbe xor xchg mov mov add push in xor cmp adcb push xchg dec mov pop out shrb stc or stc addl into pop jns insb fsubr fisub xor adc mov mov loope cmp ret into sbb pop inc mov roll xchg cs cltd pushf imul out push insb or ss loop movsl sbb ds loopne jae push sbbb dec sub mov fnsetpm(287 stos pop insl or in cs cmp (bad) call sbb rol fs or jnp push enter or mov cmp xchg jp inc sbb insb push imul rclb ret test aaa es push sbb mov mov xor inc sub (bad) movsb mulb or lds call repz scas fistl jmp mov (bad) aam imul mov roll rorb adc cmp pop sub lret sbb sti dec cmpl fidivrl sbb sbb test jle test jno xchg sub outsb fnsave cmp stos (bad) aaa rcl jle inc add out lods ljmp aas mov es das inc dec inc pop mov adc aad sbb pop fstpl sub add ss jle and pop hlt insl dec sar orl lcall cmp mov pop int mov xor arpl jl dec insl and repnz xchg jnp sbb loop pushf lret cmp mov jle mov (bad) xor test xor add scas xchg fdivl add cs jo mov (bad) mov push xchg inc scas das jle jno push push aaa js ret cwtl ds es dec mov and cltd aas xor add mov ss or in imulb test int inc mov out adc repz push cmp xor (bad) dec dec repnz dec test jg sarb call in jmp inc fildl pop and jecxz imul xlat pop hlt dec lret rclb pop xchg push js push dec sub jno sub add jmp (bad) repz outsb cmc cmp xchg es mov leave testb inc xchg add in aas cmp das cmpsb jo cmp (bad) lock lods lods loope add fs inc movsb xchg lods adc iret (bad) data16 cmp ret mov mov scas mov imulb dec imul shlb add iret pop xchg mov ficoml iret push sub fwait mov xor pop test imul jge repz lret popa daa outsl xor data16 jge hlt fstps or adc push fistpl mov xor adc stos pop sbb sbb out movsl cli mov jg sub into dec and mov std mov mov fistpl cld outsb dec data16 aaa mov fstl stos pop cmc fs jns dec out or fwait movsb pop test push enter aas sub push bound out (bad) xor imul pop fdivrs movsl xchg jle sbb fidivr inc hlt mov mov jp movsl adc jle clc xor inc xchg mov push push rclb in cmp jo mov lret adc mov sbb add jnp jns dec pop mov pusha cli aas out xchg xchg icebp mov mov push mov add fwait dec sti jne push jecxz push out pop adc xor test ret cmc out call (bad) cli push mov sbb (bad) daa push jg je (bad) sbb pop ja xchg insl push fcoms movb incl pushf xchg repnz rol mov aaa or xchg and mov fiaddl rorl out jbe dec (bad) aam pop (bad) rolb push or push xchg inc xchg sub test arpl cmp push fidivrl adc aas pushf lock add popa fs lods lods ret fistpl call iret int3 lret sub lret and add loop sub mov push int3 or cmpsb test xchg add js mov test sub cmpsl adc inc fisubrl stos lock cmpsb dec repz mov cmp mov ss pop inc insb push arpl cmp addl and or shlb push mov cmp mov aam xchg mov mov fcompl adc mov xor (bad) xchg je cs ljmp jecxz lock mov ja fwait jmp lods mov repz cmp scas ret pop imul pop repnz mov jns daa (bad) jle xchg and pop push sub sbb jmp pop sahf cwtd ljmp inc imul gs fnstcw pushl sbb pop fisttp cltd loopne adc ja aam dec imul pop jle js imul pop cmpsl and push adc xorl dec xchg daa hlt cltd push add xlat add sub icebp pop mov push xor pop insb sub cmp pop jle adc cmp vmwrite imul aad jo jecxz repnz test notb cmp cli outsb pop pavgb jge repz push mov mov std push push dec jg icebp pop hlt dec out fisubr aaa mul cmpl mov push daa lds lock loopne xchg pushf mov sarb mov sti in lods mov cmpsb nop add push sbb mov into adc sub push rorb pop rolb mov pop call add pop push and jmp cmp mov cmp dec ja imul inc (bad) movl arpl ror cwtl fldcw mov pop cmp mov push mov mov mov push adc outsl mov mov mov lock cli jecxz mov loopne stos sbb out pop loope aaa fnstcw stc test dec push mov lock cld and adc insb hlt cmp adc insl xor cmpl sub mov arpl mov (bad) ds fdivl out sbb in into out loope in bound dec roll repnz mov and add lds fsubr mov stc fsts or pop out pop addr16 adc push scas loope or stos inc xlat xchg mov repnz clc adc cmp inc mov add jbe jno sub inc jno dec movsl js push push push and lods cmpl ss jecxz sub push pop adc stos sub repz lods xchg cmpsl popf dec gs sbb pop xor pop cmp cmpl dec mov sub and jl lea (bad) dec (bad) mov in gs add fimull pop sub (bad) inc mov mov adc test mov adc pop test jne bound cltd xchg in sahf es mov (bad) xor push mov sarl sub mov mov jmp test sbb sbb mov mov or and (bad) (bad) mov test xor xlat jmp mov pop lds bound cltd mov (bad) daa cli pop push mov sbbb fsubrl aad inc ret nopl or imulb pop andb adc or pop int dec loop cmpsl mov adc cmpsb xchg loope and push or mulb (bad) fcoms enter scas sbb inc mov fild rclb lret lock xor cmp mov push pop test sahf lcall stos push stc pop xchg notl (bad) daa out jo int imul fdivs and adc orl adc nop xchg sbb mov add mov jae bound test and es or lock sub loopne cmpsl inc stos inc in mov push std scas mov lods inc scas or nop test lcall jno jno les inc cmc into loope (bad) dec (bad) mov outsl and pop sbb adc daa shl xchg cmp repnz xchg jp mov xchg xchg sbbl mov popf out cmp inc inc xchg aad dec dec (bad) dec in pop xor sti inc and cmp cmp bnd mov aad sarb aam fincstp notl mov cmc xlat and sub push cli popa insl ss loop popa dec mov loop xchg int3 add lcall and test fidivl sub out and mov mov fisubrl xor cmpsl cmpsb jae in sbb cmp popa push cmpsb imulb (bad) nop xchg cmp xchg adc ja or mov imul adc hlt cld into movsl xor scas es jge mov push push add test cmp mov scas movsb jo mov ja inc cmp ss out dec in mov (bad) (bad) les cli mov adc dec pop cmp adc out nop stos add (bad) popa scas add cmp xchg xor push loope fildll sti jecxz test (bad) mov rcll bound sub int3 mov rcrl inc (bad) into mov inc loope jbe (bad) out adc inc jmp addl jg int3 cmpb push subb out arpl push sbb loope mov andl scas hlt cld jns ja out stos and inc push cmp out mov mov fsubr aas cwtl icebp xchg std rcll sub lds dec int3 pop in lds adc mov xchg repz adc lea inc ret xor imul mov adc jg push andl push mov dec (bad) fisttpl push in loope jp inc jns cmp push or xor icebp lea (bad) out lock mov jo movsl pop and lods ret xchg dec pop test mov daa xor jl loop lea ja cmp and jb mov mov scas in jle sbb mov ret stos inc ds pop imul cmp divb push scas ljmp daa mov or push popa addr16 mov cmp mov pop jmp (bad) or jnp das outsl (bad) (bad) movsl rcll or jg aaa cmp pop xchg fldcw scas xor in call jbe je jae insb xor inc ret das in cmp fwait popa aad test ljmp adc fimul dec insb cmp jbe inc orl mov mov fldcw inc stc mov push mov inc lea test cltd lea sub into aas inc jp inc mov mov or inc push xchg sbb jbe jl ds hlt test aam add fwait pop roll add fwait dec mov pop jg jae int cmp and sahf sub mov cmp mov fistpl ja lcall insl sbb incl xchg sbb push arpl cmc sti lods push ja lock mov and out xor xor cmpsl or lea inc (bad) jae das xor mov push mov sahf sarl jge pop repz ds test mov insl fcmovnu dec sbb (bad) loop pop xchg (bad) mov cli ds add sbb or inc nop push mov bound jp cli call fdivr push addr16 sub inc sbb mov lods stc pop call pop jge and roll sub xchg dec mov scas aam xchg push fdivr and lods lahf (bad) jmp sbb in inc ljmp sahf sub xor sbb movsl sti imul int and loopne inc or sbb jae fs mov fnstsw mov dec lock daa adc xor xor xchg dec (bad) loopne insb repz mov or xor push lods int dec pop adc pop sbb push sbb jge (bad) mov lret jg dec loop mov pop inc cmp sbb rcrb lcall ja sarb pop test les fcmovnb mov inc aad fidiv xchg fs jno in call xlat inc inc mov (bad) mov or sub das mov or mov mov mov sbb jmp adc pop mov test incl adc fildl lcall arpl xchg daa jb ret push add gs jmp xchg dec mov jp and pop jno dec adc idivb adc (bad) int mov mov pushf ljmp call (bad) dec lods loopw into icebp cmpsl xor cltd jmp enter cmp sbb popf clc (bad) cmp mov dec pop push xchg rcll cmp into and dec repnz (bad) push test fcmovnb int3 cmpsl cld sbb jg arpl shrl fidivr push push lret mov dec out ds xchg mov fsubs aas fs cwtl lods int3 (bad) dec mov shlb test in inc push cmp adc addb ljmp movsb and sub int3 scas inc lret (bad) iret mov push pusha fsubrs into jecxz rcrl dec push stos and (bad) sub cli cld rep sub popa sti pop jo jns lds imul fldlg2 pop sub add sub scas sbb addl push xor fild jb xchg and test adc test mov cmp pop and test mov push jmp xchg gs cwtl pop ljmp pop ret pop sbb and xor call (bad) xor testl jge call call add inc gs fisttp pop xchg cmp inc and inc fildl pop inc ret std icebp push loopne out popf and daa xchg jo in dec testb sub mov mov cmc fstps shll xor sbb cmpsb sub mov fldl2t aad push and xor jge mov sub fistp pop pop imull sbb mov sbb fcomip (bad) mov ljmp sub cltd inc test stc dec inc adc or (bad) jp adc (bad) xchg pop and es lods movsb fwait inc repz xlat shrb mov xchg adc sbb mov aas (bad) dec xchg adc xor mov inc shrl pop mov fucomp cmp dec faddl or cwtl cli clc mov fldcw xchg add jmp mov cld ror inc jge mov hlt mov mov je mov sbb mov inc mov mov push push cmp pop push dec inc clc xor icebp in dec (bad) cmp mov (bad) mov fbstp jbe inc jle fstpl ror mov cmp adc mov lods pushf add dec imul pop xchg push cwtl in orl xor push int3 lds pop sbb popa test sub imul shll pop lcall loop mov movsl jno sub divl lock mov xor cld or lcall imul xchg adc mov sub adc pop lds rcr addb and pop daa je mull or sahf outsl fstps and cmp sub enter movb mov jnp mov adc add in daa (bad) mov (bad) fildll test cwtl push gs push es xor push and push jno cltd cmp push inc lods xchg cmp (bad) imul enter out add (bad) push and mov cwtl repz aas sar or shll out call mov pop and movl or pop mov xor ret (bad) ljmp dec jmp xor repnz cltd aaa mov jge mov xor add lea in or jbe cmp mov mov sbb xchg imul or sbb pop mov cmpl sbb and xchg insl dec (bad) adc movsb xchg inc sahf pop test aas ja sbb xor and sub and push std mov adc push outsl add jmp sarl out loope jmp sub bound rcr and std and sbb pushf lcall dec fildl dec push mov test ret adc (bad) push in stc xchg add mov adc sbb scas cmp aas enter movsl pop rorb pop jl (bad) addr16 (bad) loopne stc xchg imul in inc push lods xlat out pop gs inc mov cmp add repz dec push xlat ret movsb xor icebp cwtl fldcw inc mov shrl push mov or mov and dec mov sti sbb inc (bad) repnz lcall mov xor xor pop push in (bad) lcall stos push addb push or adc sbb rcr hlt imul pop jne stc mov add dec add push jle push pop xor mov push mov sbb std popa xchg pop push ds jp mov bound (bad) inc xchg clc pop test jge mov loop jmp stos add push fcomi adc pushf mov sahf jnp mov adc mov fwait sub aam andl cmp cmp jecxz fldln2 jg xor lcall in and mov scas push mov cmp aaa and in (bad) lret in daa cmp std (bad) push cli push mov jp fildll cmp mov inc mov add dec movsl in lods sbb fidivrl adc loopne lcall and cmp cli jne push repnz ds inc push jo notb mov ds test lahf xchg mov sub pop dec sti inc out scas jecxz dec roll cmp daa scas push sub pop (bad) or jg (bad) cmp loope movsl aam das push sub mov insb pushl test mov es inc jp adc lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov in mov mov in roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret xchg insl mov fistpl loop push mov sub stos lret mov xlat pop (bad) (bad) std push out out stc adc add add add add xchg mov call ss sub (bad) jo repz xor jnp fs jb cmp xor pop cmp in in lods xchg cmp cmp (bad) data16 dec jle adc inc cmp xchg insb sarb stos xor adc sarb jle cltd outsl aas outsl (bad) or ds fcomi jno sbbl or movsl and leave xchg sbb insb ljmp jbe imul push add mov dec (bad) push cmc arpl dec out add xchg xor gs mov push xor aad xchg jbe xor adc leave and adc inc popf in or bound xchg fs les mov das pop in imull dec loopne xchg pop push outsb pop jl jge push or fstps ret xorb fcomps (bad) dec pushf pop (bad) cmc sub xor imul mov es sbb push xchg mov xchg inc mov mov clc loopne pop and insl mov lahf jle (bad) lret xor mov jno fwait jmp inc jne test addl dec push jl leave mov inc adc xor loop adc cmpsb fs jb ficompl push ret int3 pop repz mov repz and pop fisttp test jnp sbb cmp lea leave outsl sarl add and das xchg push in pop jbe mov mov hlt neg cmp sub add dec mov sub pop xor push jno jb mov mov xor pop jl out (bad) jno call sub stos xor and fldcw cld adc lds xchg jmp in inc mov roll push mov pop add inc xchg cmp or pop fisubl jnp inc mov push or mov jno xor movsb pop mov cmpsb mov jmp adc lds or fwait (bad) cld ds adc into mov cmp into out pop lret mov rcrb test xor (bad) mov and arpl jb test cmp xor cmpsb pushf stc push in in jg enter fsubrp into in cmp cmpsl int jb (bad) lret jg dec js movl (bad) xor dec mov movb and lret leave jo outsb push sub jecxz or push push jo jl add int3 mov add ret add int3 jo mov add mov xchg dec push fwait (bad) or pop pushf cmp xchg jne sti mov sbb jle movsl mov sub jo push (bad) xchg sbb daa inc mov mov lods pushf es notb popl xchg fisubrl mov pushf xchg xor clc and ret dec bound vcvtps2dq sahf sbb pop xlat mov pop stos push dec leave mov dec mov shrb cmp imul (bad) aas loope je cmp fidiv movl jp lods xchg arpl fs arpl sub xlat push test negl cwtl lcall mov jnp repz fbld fisttp icebp call fs dec jb mov sbb pop and cld xchg pop ja or adc inc movsl mov pushf in stc dec test ja add and in ficoml inc lock xor mov lds out mov lods add mov xchg mov inc pusha push fsubrl faddl mov and mov es cli hlt jmp cmp (bad) cwtl rclb clc loopne xchg push pushf xchg mov pop cmp dec arpl inc sbb adc test addr16 mov fdivl jge pushf iret mov clc mov sbb or into fiaddl push pop sbb jmp rcll xlat faddl mov dec aaa mov xor xorl inc push xor add rolb or pop test adc movsb and jae pop push stos (bad) icebp mov popf imul add dec je das call xor nop push das mov pop mov scas mov xchg (bad) stos cwtl pop jmp leave (bad) xchg add jp cwtl xor (bad) mov cmp fisub loope insl test andb push and jnp xor cmp mov dec fxch add popf dec test adc out cmp mov fwait mov add sub stc mov mov dec mov cltd inc ja cltd mov je push or rcr pop adc fcos stc clc imulb add pop lret mov mov mov fist and aad pcmpgtd mov inc (bad) xlat pop sbb push rolb xor and ljmp adc mov ret roll pop dec test daa push mov jp jmp hlt or push scas add vmovntps add loope sub or lret dec ljmp cmp mov mov (bad) cmpsb xor pop idivl lods int3 xchg dec mov mov je and pop mov arpl pop outsb roll popf lods and sbb js mov add add addr16 popa leave xchg mov xchg test aad mov cmp pop in xor jle mov sbb lds es push pusha jl xchg push rorb popf imul sbb aaa and xor xchg es in pop loopne inc std gs pop insb lea push movsb call rolb leave mov rolb cwtl clc add jo jle and push lds aad or push adc cmp out mulps lcall sti pusha add mov out jae jae and jb pop pop stc divl test mov push xor xchg push aas lods hlt jne cmp lret pop xchg jmp pusha daa jno sub xchg iret jnp and mov xchg cmpl push popf jne sub xchg push lret lds mov adc adcb pop daa pop push sub adc out lret aam cmpsl cmp add sahf inc jp jae negb dec cmpsb xlat aad sahf enter loop mov adc mov in movsb push outsl bound xchg push mov iret adc test mov adc cmp (bad) xchg xchg adc pop call jp pusha stc xchg xchg imul shrl lds (bad) xor call inc lcall xchg leave cmp negb push inc dec outsl sbb out cmp insl push (bad) pop sub insb movb xor sbb xchg outsl sub pop (bad) jl push cs outsl insl decb in adc add pop adc xor stos sar aad dec sbb xchg mov insb cmpb lds mov mov inc inc mov outsl out addr16 sbb inc jp insl push pop in je and int adc (bad) mov push aas out pop xor outsl jge or cmp scas mov jo xchg jmp mov outsl sbbl in lock inc cli push cmp mov inc add mov mov adc and pop add push xor ds jg sub jecxz cmp jo inc cmp add mov pushf xchg lahf jecxz in mov sbb jb cmc adc xorl pop rclb sub mov xchg dec addr16 xchg lods clc inc sbb mov fwait push xchg xchg push push sbb notb iret mov xchg sbb adc sti dec xor jecxz mov pop jae in mov xchg cmpsb inc in add xchg ja pusha int in or push cli lcall call mov push mov mov arpl sbb xorl scas out fstl sub movsb cmp add lcall xchg repnz mov arpl dec repnz leave mov dec icebp pop xor test pop mov sbb xlat mov mov mov outsb hlt (bad) jo pop ja mov xlat out lret xor lods fdivr (bad) movsb pop and frstor jle cld xchg pop xchg stos aas xlat sub pop sti add repnz stc daa daa loope sbb and gs dec adc addr16 addr16 cltd cli mov fwait in (bad) hlt pop xlat lods (bad) ljmp (bad) xor dec xor mov sub fisub rcrl testl mov mov dec mov fsubrp pop std scas mov jb (bad) mov (bad) repnz clc xlat sub jle sbb pop out mov jecxz add push jle sbb sub add jbe,pn or lods into push scas aad or xchg pop js lahf dec jno fdivl inc push mov dec out repz cwtl int sub mov int3 (bad) jne push jp rol sub add stos push (bad) popf and fild push inc iret das or daa or push or lods pop or in testl roll fldt mov insl jns pop lahf cmp popa xor xchg (bad) and popf jno lea comiss mov xchg cmp add stos in pop fdivl mov pusha xchg ret adc imul sti jb dec call pop add inc aaa das inc mov loop jno adc mov pushf loopne cld lds pop insb jg xchg push cmp push jmp divl dec inc loop jbe stos or or jnp aaa scas mov mov int3 (bad) pop xlat pop dec cmp idiv fistp lcall add leave jae adc sbb sbbl ds jo dec lcall xorb adc and lock xchg or push pop cmp mov lahf adc or out adc lahf movsb sbb popf je mov jno dec sub cmp testl jns lret (bad) (bad) and xchg xchg mov jnp mov jmp cs cmc sahf pop or xchg cmpsb jns jle mov cmp test dec jbe sbb fimull sbb cli dec outsb je or xchg xchg or cmpsl je lods cld xchg icebp insb and mov push rcrb sarb or clc (bad) adc loope fadd fsubr sub scas pop adc cmp inc push stos loopne or xlat outsb scas pop jbe movsl mov insl and das stos test adc out sbb mov dec mov mov out xchg inc popa xor or xchg inc test sub push pop test cmp xchg or lret js adc dec (bad) stc jbe sub in inc aaa pop repnz (bad) bnd ret dec push cmp cmp sbb fucomp addr16 inc jno sub jmp push mov (bad) jl push ret lret pop dec stos dec inc es lock jno ret popf jbe ret int xchg push adcl mov les push maskmovq notl je je addl scas dec push dec imul insb xor push cmpsl jns or adc jbe jno sub and lahf fldcw sub (bad) dec sub push and and inc ret dec mov jno sub sbb mov adc (bad) mul jl jne fcom adcl dec js adc pop hlt inc outsl lcall push movsb mov sub xchg xor cmp xor cs aam lcall sti mov xlat mov pop mov cmp sbb jl lcall or pop mov jle pxor icebp or lock jb arpl jecxz jbe movsl jae inc gs mov inc xchg fxch pop mov movsb stos aaa enter xchg cmpb test xor dec xor in bound loope sbb jge jae xchg mov mov cld pusha sbb insl dec in js or inc in cltd imulb sub in mov xchg dec cmp in lret add aam push adc popa (bad) or out ret mov inc inc and push fdivrs jnp or into repz mov xchg popf outsl sub xor rol mov sub push xchg imul mov jp push (bad) xor sub push add push sbb push repz mull scas rcll adc out xchg into cmpl mov xchg js xchg lods clc xchg xchg push mov pop xchg in shrl mov jg xchg repnz mov pop aad lret int3 push mov hlt arpl cmp bound ret and clc movsl (bad) jg jnp dec cld push cmp pop imul push cmpsb xor dec and mov out sbb (bad) push xor addr16 mov out pop dec les mov ret (bad) lcall push pop mov mov dec insl mov repnz mov es in mov sbb mov adc mul insl adc xor jb push inc and xor outsb out push and mov push xchg iret mov aad lods dec jl push in dec push sbb lods dec test dec test jns,pt add aam adc pusha call sahf ja pop aad sbb or movsl jl,pt inc pop repnz jmp mov add ret nop rcll jmp push jmp lret dec push lds daa popa cli popa call leave add jl mov jae pop insl setge insl rcl and js rcrb adc inc dec mov dec sbb cmp call jns iret cs jp pusha sbb ljmp mov cmp (bad) lock xor jo push push xor stos clc lock dec aad dec pop sbb xchg test adc test push and (bad) pop mov sbb popa inc imul insb test cmp jne dec or inc cld in pusha jle pop sbb (bad) and pop cmp stos cld aad xchg jecxz into pushf scas sbbl add stos xor mov mov jle call iret mov mov (bad) or arpl (bad) daa mov and xor adc sbb sahf cmp popf xlat mov fnstenv outsl mov ffreep cmp mov cmpsb out mov int inc mov adc lahf sbb cli int outsl dec jecxz sub and inc mov pop ja gs (bad) cmpsl lock cmp mov sbb lds sub testl lock lahf enter data16 jb push cmpsl mov sub into xchg push aad ljmp fmull flds out loope lcall push mov lea (bad) cmp mov jmp xor loope mov or xchg rol mov insb iret fdiv stos jmp xor and mov fs lahf adc lcall jl dec add pop add jae push pop dec ror push lock push imul adc insb sbb xchg stos (bad) cmpsb dec jno popf push mov push mov (bad) notb xor mov xor lea sbb jle sub inc cld call and arpl jg rorl xchg pop lret cli out xor sarb (bad) mulb into fisttp sbb jge ficomp hlt pop or add or dec pop popf fwait sahf pop fdivrs pop imulb divb addr16 int scas dec mov inc scas bound flds addb xor inc mov and (bad) add pop imul and scas add pusha ror lods mov scas inc (bad) pop iret (bad) pop call pop lods rcrb mov inc jmp sahf rolb jmp adc mov pusha dec insb cmp pop lcall add (bad) inc mov or jb insl pop or fimul xorl add inc (bad) call jae xchg pop js cmp ja xchg sahf sub out ja pop cli jb fisttpl cmp mov jge test imulb or sub (bad) addr16 mov pop sbb xor xchg dec hlt bound gs andl or inc mov xchg jle in int3 xchg fcompl sub js insb lret mov repnz jp sub fsubrp mov add push push andl movsl mov out out inc mov or sub cmp xlat pushf dec das and pusha in leave lret aaa cmc fsubs stc dec or sbb dec je adcl pushf mov ret loopne rcll inc pop out insl (bad) cwtl jmp call mov (bad) push mov gs xchg mov cmpsl lret sarl clc movsl (bad) mov sbb cltd sahf mov pop cli fwait jle push cltd push leave les mov mov and xchg mov adc imul pop arpl cld scas imul push es cmp into cmp xchg push mov or adc outsl mov leave shl sbb outsb sahf pop jmp push or (bad) or (bad) (bad) ljmp das scas movsl and sbb in aad (bad) cmc in lods mov mov out or adc movsl movsl and pop mov xlat mov imul add jp xor xor push lahf insl inc xor dec jae ljmp (bad) hlt ja (bad) xor and mov dec xchg jns popa (bad) stc push outsl jnp movsl jge test mov into push popa lret imul shlb or pop mov jg and int3 int dec push (bad) or lea test jbe repz add stc out pushf cmp mov dec das push dec jbe push lret push ret xchg adc rcll push push int stc incl je pop cld lcall mov jge andb (bad) (bad) dec lock xor jg dec lock xchg aas iret pop pusha scas into out ss and lods rolb mov addr16 frstor push mov rolb dec sub inc out and xchg sbb std xor jo ror add (bad) push pop outsb lock cmpsb and xor dec and cmp in and hlt test stc rorb mov jmp les push cmpsl xchg shll pop or jp scas inc and jp adc ljmp xchg test mov fstl lret fsubrs jg inc lea jmp mov fimul dec adc jp and jmp outsb push (bad) roll subb xchg jmp cld add xor clc ss stos jb leave js data16 mov inc pop je cltd int3 or and and lods bound ficom jecxz hlt mov addr16 or push add adc (bad) sti clc icebp xchg cli popa inc movsl mov and lret jle inc lds push xor push (bad) into pop les cs adc imul pop out cmp dec fisubl imul (bad) push push sub jl add pop dec les push out sbb pop cmpsl mov in and inc fwait sbb and mov rcll (bad) fbstp mov push xchg iret cmpsb hlt test ret out lds icebp inc and mov in dec cmp sub inc xlat pop bound sub outsb jns jo imul sub rolb mov sbb rorl jnp je lds jp xchg pop sbb out dec sbb sub add push jl cmp sbb xor sarl mov mov in cld ret jbe jae js mov (bad) and sub mov std ret jmp or mov scas into ljmp jmp int in push lret mov mov arpl and xor and or and nop push mov mov es in mov stc sub sbb pop outsb js inc lahf sbb and mov mov cli push sub js in sahf xchg into js adc scas push or divb out scas aam lods cld xor lcall mov pop add or divl fsubs and sbb fist out jl mov popl mov scas and jge aas or enter in sub scas lret test adc dec insl inc fdivrl ret mov aam (bad) rcl movsb cmp mov ret insl fucom notb pop xor mov (bad) adc int3 pusha inc pop in and call jb test iret insb sbb mov in xlat add call clc jp rorl mov rorl and in lock outsb xchg cwtl ret inc lods cld lcall add lret lret es pop push divl pop movsl movsb pop lret les pop sub xor cld ret cmp sahf sub je fdiv in popf mov or popa adc sahf cmpsl pop jb sti aad jmp inc jns fdivl divb loop sub mov xor dec mov test push (bad) stos inc inc dec loope popf pop sub push and sbb xlat sub aad xor or js xor cmc repz imul shrl pop push lods adc xor sbbb and push mov cmp or xchg pop pop fcomps jge sbb nop mov ss add inc rorl es lret (bad) icebp rorl mov rorl int xchg es and and adcb mov (bad) rcrb aam loopne fisub int jle sub stos xchg lcall scas xchg ljmp (bad) out adc dec xchg adc pop or cmp or je jns in faddp fild bound sbb jge sbb cmp leave aam add (bad) dec bound jbe dec jmp mov adc cmp push sub add adc movsl jg repnz (bad) (bad) add fmull jge jae jge jno jno fstps cmc cwtl test inc fiadd push ljmp in cmpsb call mov stos adc and loope add or sahf lcall icebp mov aas mov pop mov test imull pop popf gs fsubs cwtl pop stos popa loope sar imul (bad) mov xchg sbb mov leave clc jle out subl lahf repnz loope xchg outsb movsb test sti cmc xchg lcall arpl mov mov in sbb aad sti lahf cmpsl xor adc fnstsw pop xchg (bad) push jmp out inc and mov push push jecxz push adc mov mov inc or inc ficoml cmp jp inc jle test mov cld cmp xchg stos dec subl pushf and scas rorl fimul mov in icebp lcall scas scas pop hlt ror pop popf jecxz leave cmc jns adcb ss fidiv push add jnp cmc dec xorl outsl pop add loope ja mov addl pop sahf or xor loop std in adc dec stos out mov divl pop ficoml ret inc (bad) sub add flds adc iret push mov aas jnp dec sub loop sub or mov js mov push pop cmp lahf les push mov jp lahf jo sub je jbe ret out fisubr cmc xchg xor jmp push mov xchg pusha lret outsl xchg test aas dec mov cmpsl into int3 repnz sub and xchg add jmp repnz adc sbb fmulp or outsl dec loope xor xchg and pusha ret hlt jecxz mov jae sub (bad) xchg in f2xm1 popf bound negb inc (bad) in loope pop cmp xchg inc mov sbb sbb cmp iret push clc xor loope (bad) push sbb adc repz or jns sbb in jle,pt popf ja popf rclb ficom mov nop inc xchg add cmp mov fcmovb rclb mull mov mov repnz mov cs outsb add fistl loop push cwtl scas aaa jl fs mov divl adc dec jo sub mov add into ret sti enter cwtl jg and dec push push loop (bad) scas mov into js pop cmp call mov daa sbb sbb cld imul lds jo (bad) hlt nop scas push sbb stos dec mov xor cwtl push cli jae push rcl inc dec movl test das inc cmp lods jmp add sti push cmpsb pop pop mov sar call pop daa aam out sbb out loopne jae push cltd fild repnz in cmp sbb mov xor les repnz scas pop adc ss and mov mov jbe mov push sbb adc cld dec adc into addr16 sbb push mov int3 jp fadds inc mov xchg jns adc or aam pop dec fdivs std mul adc mov mov push negb and pop cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp lret or jg adc add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push and ret add jecxz ja xor cmpsb mov cmp fisttpll je ja sti loope mov into dec fwait imul mov pop add add add adc dec arpl add fwait pop (bad) or xchg lahf ds lea loop or add xchg jl push push push mov sahf sbb aam inc inc adc sub lock mov (bad) aam scas cmpb test fnsave sarb cmc pop add (bad) sub inc rcrl out dec xor sbbl int3 imul das pop neg dec pop xlat mov mov push outsl loopne pop sbb fs cmp popl outsb jmp js add movsb sub mov mov imulb les aas shl mov dec add sbb std adc clc ss addr16 mov movsb mov mov jmp jg popa sbb out mul out int jmp cltd add insb mov mov mov call push rclb dec (bad) je sub mov pop (bad) or (bad) out sarb cmp shll or popa lods jp cmp pop and add cmp jg ljmp stos shr test fnstenv or ds mov fildl cmpsl pop sub shl mov sub sub movhps mov repnz fldl or cld xor sbb scas pop in mov mov bound mov push dec xchg lea cmp mov inc mov ja addr16 push or dec repz push push pusha jmp cmpsl std mov scas jp adc xor out mov movsl jo lret sbb and call inc lcall add pop cmp (bad) imul jl pop cmp jo sbb jge inc and dec jmp or add xchg jle sbb loop and xor adc cmpsl inc cmc cmpsb lret arpl insl push pushf ja or xor push and int3 int aam mov cmc loopne cs cmp divb cmp leave adc mov mov sub stos (bad) pop xchg lcall test and testb insl int3 mov movsl mov lock call popf (bad) xchg mov das aam jle mov lds cld xor lock stc xchg dec mov sbb jge popf cli xor adc mov or and adc ret xchg add cld lods fdivrp test xor stc fcoml xchg jmp jecxz adc lods fcmovnb xchg lea jbe movsl popa sbb pop clc xor lcall inc test scas dec call mov (bad) sub repnz mov mov movsl cwtd sub ds cli jmp jb fstps adc jns dec xchg and jmp (bad) in mov jmp adc in pop and mov sub rcl jecxz mov mov lea add arpl loop (bad) push nop jg pop fmul mov mov jo sarl frstor mov int3 sbb adc cmp sbb jns add lcall dec pop jmp xor xchg idivb das push dec and dec test (bad) xor dec repz or mov mov mov dec imul inc popa cli push hlt jmp lcall call mov imul cmp jbe pop xchg pop lcall (bad) xor and xor (bad) and add push (bad) (bad) es lret xor inc mov (bad) mov je push js repz mov pop pop xlat cltd adc or mov cld ficompl test mov sbb shlb cmpsl movsb dec jle aaa cmp sti fnstsw cli jecxz push pop movsb jno mov inc ja scas adc lds mov in out aam aaa adc in pop dec and insb xor xchg jg insl push cld sbb mov dec fnstcw ret mov mov out jmp pop push test add mov loopne shl hlt pop ret cmp scas aam push xchg or pop mov sti stos mov dec jecxz push insb leave mov and repnz es mull test into sub arpl fadd dec mov scas add fwait add jnp or ja cmpsl push into jl out fwait pop mov fildll dec fbld mov mov pop rorb mov pop clc xchg sbb push adc jg test xor sbb and shrl lods in pmulhw add fisubl xor test aad repnz pop test stos cmp xchg (bad) outsl scas insl dec in mov aaa adc inc (bad) pop rorl inc ss pop imul cmp aad xchg mov xchg xor and pop xor inc lods xchg inc ds sbb or sub cltd inc mov xchg fsubs test and aam xor mov daa dec call inc jp fisubrl jno aad jb outsb jmp cs inc sub out (bad) cmc popf rorb pop xor es pushl mov mov mov (bad) popf ret mov or sbb xchg ret push mov out stos xor jo std ret pop add adc push loop pop sub clc sub lahf and test arpl aam mov push mov cmpsb xchg jo adc leave push fwait sar mov mov sub fist mov mov fldl popa movl cmp arpl int (bad) adc xchg push dec pop pop das sub mov fwait mov aaa add imul xchg fcoml call push (bad) sub add dec mov fmull mov push mov jae add add pop fcomps je sbb cmp dec out insl jmp andb adc aad std (bad) xor add xchg cmp sbb mov and shrl cld js add sub out push (bad) arpl aam adc insb ret data16 or into dec fisttp dec pop stos fstl stos loopne adc adc repnz mov movsb pop and and push cmpsl xchg (bad) mov fcompl mov and jp in dec in (bad) cmp es aad popf adc jge cmpsl xchg repz mov mov jg mov je sbb mov cmp add insl popa into cli ja pop (bad) (bad) (bad) std sbb sub pop and pop sahf mov rcrb sbbl mov leave cwtl mov cmp push dec jmp sub cli cmp andl addr16 int3 cmp jle enter addr16 divb adc cmp es cmp pushf insl mov xchg push dec pop jae cmp sub xor test (bad) daa dec jge jo lahf jo cmp mov push sbb lods push dec mov cmpsl sub cwtl mov adc (bad) cmp mov in xor adc sbb jge sbb out aas sub and ss mov subl gs ret cwtl jp les push out popa mov pop ret mov in movsl mov jmp sub loope,pt sbbb shr test mov rolb test xor stos (bad) mov into sub jmp es mov push fist sbb add cmpb cmpsl jg sub stos movsb push adc cmc pop and (bad) mov jne mov popa dec lods in push fimull into ret inc jb stc pushf jno mov jb inc pusha shr repz cmp inc addr16 rolb sub jo lock test (bad) sti pop aaa jb ss sub cmp xchg jns mov sub fnstenv jbe xor sbb cwtl push cli xchg stos mov mov data16 jb repz insl mov das dec cwtl cmp pop loopne jne xchg push imul scas mov gs rcll aaa pushf mov inc mov jmp stos lods push inc mov mov mov je xor outsl hlt or pop jnp fwait cs cli xchg gs mov xchg dec pop mov nop call (bad) xor ss (bad) or jmp push out dec scas push jmp cmp cmp (bad) nop in sub pop lods les xchg dec fwait adc jo or pop sbbl pop adc dec jae (bad) je das mov mov test pop ljmp (bad) loopne test imulb sar xor call fstpt jmp repz xlat jp inc in ds (bad) into les mov sub shr xchg imull adc mov sahf cmp cs jnp inc jb add mov inc imul dec inc mov mov es fs sti mov data16 pop or push mov jne cmp adc jmp js loopne mov push adcl inc adc ret out lock fdivrl in mov cmp jnp lret sbb ret mov add (bad) gs shr mov or notb mull (bad) jae arpl mov cmp (bad) xor or sahf xchg jo cmpsb or adc mov and ds mov lahf cmp dec inc loopne xlat xor jb (bad) cmp add ljmp (bad) repz pusha jo push push dec push ds mov or adc jb lret iret push enter (bad) mov jo fisttpll leave or pushf jnp jns sbb mov push or fnstenv pop cmc addl out lea cwtl ljmp loope lret mov fucomp lea sub loop (bad) cwtl popa scas xchg outsb scas push sbb mov sbb adc cld pop sbb mov (bad) lea xlat mov scas adc xlat ret movsb icebp sbb (bad) inc push jmp mov cmp fisub mov idivl stos pop dec xlat sub test aad fs mov cwtl mov cli mov gs xor mov mov leave sub adc int3 addl sbb aam mov cmpsl clc fldt add lret stc pushf pop (bad) stos mov stos test push pop int3 test mov lea movsl push andnps mov jg outsl xchg sbb fs lret mov int3 pop into rcl xchg dec sub sub or sbb ret jb adc jb or add add jno in insl call add push sbb mov imul mov not in ret ror or sbb lahf testb sbb sub jae scas sub pushf hlt pop mov negb movsl das pop adc mov mov mov xchg lods mov les cmpsb dec lahf mov in lret sub aam jl fcoml aad mov je insb ficompl or push iret cmp pushf jbe cmp dec adc arpl fdivrs sub mov movsb jne out mov ss sub sub dec add inc adc add xchg mov (bad) mov push js ffree (bad) jnp lcall push outsl ja stc mov xor test mov int and jb xor pushf daa sbb push sbb inc or jg test add into fwait pop cwtl jno jns,pt (bad) imul out add mov adc push lock in jno pop fwait repz sub mov ret xlat imul jp cli sti xor cmp mov push je cmp lret fsubl lcall cli cmp (bad) push sbb clc push dec lods sub data16 inc dec adc (bad) adc push pusha xchg std lds repnz mov xchg cmp lcall jnp and inc dec or rcll jnp mov in mov fwait out mov sahf loope mov cltd jp cli movsl cmc adc (bad) test or jae loopne clc aam mov sub (bad) mov xlat sub test jns ret mov push test sbb mov push outsl cmc add mov mov mov adc fsubl ss icebp mov pop sub ss popa cmp rcrl xor mov iret jle cmp repnz inc push mov test push push outsl out mov outsl ds and roll (bad) and mov adc sbb xchg sbb decl jo aas push dec in push cmp lcall or add mov loopne rclb out imul xor adcb sbb push lret arpl mov pop js inc pop cmp sub xchg repz fwait pop adc gs pop xor push in lea ljmp mov stos dec in dec add sbb stc popa pop mov pop test mov mov jno (bad) push pop fcomi mov jle xor pop cmc dec lahf idiv aas and jecxz adc movsb iret lds outsl jle jle mov (bad) sub cmc bound insl shrl test mov xor pop loop or or xchg aas shr aam jecxz dec sbb loope in xlat adc mov adc push lret sub rep dec jne test rcrl jge xchg out dec insl jnp cwtl cmp pop ss imul addr16 jmp stos loope in and sbb mov xchg sbb pusha stos enter jl xchg ficom cmp enter sbb mov mov ss daa dec pop imul cmp dec loope sub add adc (bad) inc sbb orl ljmp dec loope push movsb jnp push stos push jb div out inc mov push stc idivl data16 leave cmp andb icebp add dec scas test ss add andl sub lret jg cltd test (bad) leave mov es sbb loopne cmp sbb mov dec fimul or mov sbb sub (bad) out cmpsb pop mov test loopne icebp cli jbe leave stos inc rolb cmp into out out lret xchg mov (bad) ja mul fwait mov adc cli dec stos adcl bound adc (bad) xchg push js pop mov fs xchg dec mov push or cmpsl les (bad) in sbb std fiaddl push jge lock xchg push or movsl or or xor ja aad idivb adc sbb test orl sub mov sbb pop jg push outsb cs das and (bad) sub lods test mov jnp xor scas mov push mov push cmp adc or jbe jo shrb stos aad mov call jns xor ror mov sahf shrb gs push dec loope decb sbb xchg add adc push adc sti or mov out mov mov popf mov insb jbe adc add js sub loop mov mov mov dec push pop dec jp js cmpsb cld mov test bound dec pop (bad) imul jno jnp or mov js add mov call (bad) add rcrb int3 test xlat pop cmp or inc pop out mov jge xchg cmp nop xchg popa outsb in lods adc (bad) sar sub mov (bad) xchg loopne iret int xchg adc aaa out insb cmc sub call xchg xlat sub push jmp stos add pop and fsubp dec mov jl cmpsl in sti (bad) cmp pop (bad) stc adc and push (bad) addr16 loope and out mov pop add insb sub add pop aam ret xchg sahf sbb mov push mov popf orb popf and rorl fiaddl out into pop jo (bad) mov (bad) and inc xor outsl call test popa sub cmp inc daa xchg xchg mov movsl imul daa mov inc cmpsb call add aam fistp xor pushf scas loope sub xchg repz mov push out into lock mov xchg mov push cmp push clc pop lods call fisttpll std mov mov clc negb jbe mov or je jno aaa xor insl adc iret pushf inc or or test or sub (bad) and repz sbb cmp insl and das push pop lcall data16 div pusha scas fdivr dec and jbe dec addr16 outsb out sbb pushf inc adc mov sub mov xchg or sub js movsl je fldt ret loop call mov test cmp pop push jg arpl mov scas cmp cmp sub cli jns jnp pop inc inc push xchg cld dec pushf std popf cmp inc xor add (bad) or cwtl xor out arpl (bad) sti (bad) insb (bad) enter pusha ljmp cltd push xor roll stos inc ret sbb cltd xchg adc test mov mov mov jp lock sbbl sahf mov push fs fistp inc pop outsb push (bad) mov sbb (bad) sbb outsl fs push push sahf sub xlat lods aaa mov in enter aaa aas out leavew pop inc movsb xor pop (bad) push sbb shll out mov pop mov lret daa lds jbe adc decl mov je div cmpsb mov test popa ret mov and out clc mov push sbb dec rcll pop mov (bad) push imul (bad) lahf mov inc insl xchg loope xor fmull xor jo xchg mov cmp cli ffreep aaa cmp incl (bad) jl adc and or addl int3 jl cltd pop xchg mov add insb repnz xchg (bad) mov stos incb jno add rcrl mov sub js or lea fistl inc shrb shr sahf ja aas out mov scas aad fldt pop dec (bad) gs jecxz sub sub mov sbb les pushf mov ret jle xchg lcall mov and jecxz fistl mov adc stos xchg or sbb in xor out jge and push popa sti (bad) pop mov mov insl add pop int3 push xchg inc xchg mov inc mov gs xchg xchg dec sub outsl ret jmp or subb ret mov sub xor lahf les mov and and inc push mov and inc iret call pop es fldt in mov push xlat aaa xchg and ror jl and out lcall ds pop insb jbe jle xor (bad) faddp lret jns test mov dec mov pop out mov mov scas shl pop aas jl xchg shr int3 sbb loopne jb mov rcr mov shlb mov cmp stc jb cmp xor xchg ss or pusha sub jmp cmpsl sahf dec inc test xchg clc xor stos int3 (bad) mov sbb mov sbb add push clc mov jmp dec aad pusha inc daa imul daa pusha mov loop call xor add or xchg lret fisubr push mov shrb sub sbb stos loope scas movsb loopne jg lea imul scas mov andl jns pop xchg ror imul nop enter inc outsb and dec push cmp jbe or mov in push fstpl shrb xor mov cmp (bad) mov inc sbb movsl inc out (bad) mov dec fnstenv int3 sub push call mov mov aam divb xor mov test and inc and mov test push aas xorl pop cmp (bad) fcmovne clc mov cmp out mov and icebp into push loope push pop (bad) mov add pop jg fisttp arpl push push pop add mov das sbb aas mov pop pop ljmp outsb mov rolb movl jnp add test lods pop rorl out addr16 les xchg xor rcll mov nop sbb dec fwait lods or push cmp jge mov xorl xor pop popf movsb fistl inc mov mov ret rol xor lock jb (bad) clc mov popa popf fucomi mov dec push ja push popf or test fcoml hlt mov scas xor fcompl (bad) icebp pop mul insl push lcall dec or lret lret adc test inc out outsb or jb bound ret push clc or pop pop mov ja mov mov xchg xor push xchg adcl mov mov jae in test sarb mov les or or (bad) jl ljmp push jle add mov rcr call cltd push mov jbe dec mov adc or in jae or lds xor pop and fcom mov ljmp mov ljmp add pop cli lret pop imul or out pushf xor adc pusha and insb push cltd mov lahf and mov ja (bad) mov fisub popa lods addr16 loop mov sub pop mov mov mov idivl sbb mov fcomps cmp enter rolb and fidivl xor inc sub cld ss (bad) lea sbb loop mov pop mov inc push out and mov (bad) (bad) cmpsl adc rcl (bad) repz cli out mov pop daa pop xor dec adc xchg cmp xchg iret fsubs mov inc in xor jnp fdecstp lea push jnp subl sub fwait mov mov icebp rcll mov fwait lret cltd xlat cmp enter sbb xchg xchg out mov fcmovu xchg add cmp xor rorb and aaa insb scas stc dec xchg jnp mov test xchg add or add mov sub pop dec xchg mov aam insb pop into decl lods xchg inc jp inc test fyl2x mov jp and dec xchg pop mov mov cwtl adc jl aas add mov xchg data16 push insb xchg dec pop icebp loop mov push pop dec pop cmp fimul jmp adc arpl pop dec push mov or rcll inc movsb shrl pop es mov pop and aaa popf lods cmc jl mov push or lea (bad) push pushf jmp scas jp insl aaa or loope cld mov clc adc es xchg xchg mov pop cmp jmp arpl cmp fmul pop (bad) jp add lret xchg pop pusha js lcall in lret lods dec push hlt pop mov int3 out pop scas rcrl pop jno dec push notl add test je sbb outsb lods sti dec mov in js jmp jno outsl sahf (bad) out mov inc cs push shrb or mov sbb and pop insb dec sar (bad) xor mov jo add add out ja mov aam fwait popa cmc push (bad) std and pop rolb das fisubrl dec add fdivrs dec call dec stos leave out xor das jne or push ret mov cmpsb int3 (bad) fild xchg test xor cmpsl sbb gs sub pop jl sbb sbb mov roll mov adc fwait shrb out cwtl ret push add fidivr cwtl cmp cs iret (bad) sti and stos nop push xor aam divb sbb in cmpsl cmp or pop xchg jmp js sub repz nopl push in dec pop mov test and xor add fildl or or roll push in repnz inc (bad) arpl aas mov dec jl mov jnp mov mov sub xor aaa mov cld adc cli mov pop fmull xchg insb in dec inc inc xchg imul push int3 push push dec in pop cmc xor xor scas and scas addr16 stc fnstsw xor cmp nop xlat sub into inc jnp rorb and push mov orl or mov and sahf outsl call sahf xor mov das xchg mov fcoms lock lock aaa mov mov jb (bad) imulb xchg faddl cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild add add fistp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret mov pop outsb jns mov pop lret std mov xchg lea (bad) gs lea mov out idivl jl pop add outsb add xchg pop inc pusha repnz leave cmpsl cmpsb fld fistpl sahf jae pop dec ds in call addl daa icebp test test mov addl test pop ret cwtl lahf sahf jno fdivl xchg sarl mov outsb fcmovne dec cmp xchg daa stc inc popa enter arpl cmp loopne (bad) iret pop or movsl jno push jle mov dec fdivs lahf fdivp ljmp add cmp lcall iret sarb test (bad) call inc adc mov push xchg cmp jb ja sub paddq mov jae and sub mov lods lret out cmpsb dec push stos and das cmpsb mov dec cld mov push fisubrl or add inc (bad) mov andl mov or dec fcompl and mov cmp insb jecxz pop mov jl roll xor lcall mov inc cmp jo pop fsubs jmp cmpsl scas lods int3 arpl push cmp insb andl lods enter int3 adc cmc sub fs and mov xor rorl mov mov in xor add cmpsl ficomp icebp repz mov push enter movb add enter out leave mov and (bad) iret insb insb mov sbb mov pop fcompl mov sbb dec sbb pop jp out mov divl aas cmp in loopne push call pop xor cmp rcr add pop ss mov pop popfw jae data16 mov (bad) and add push out sahf out mull popa pop cmpsl and mov and (bad) mov rclb sub push nop scas pushw clc jnp mov call add repz (bad) add fistpl dec ret xchg cli mov xchg cs xlat pushf aas (bad) lock fwait fwait jb cmpsl iret adc xor aad roll cmc dec push sahf gs cmp xor lods mov and or or dec mov xchg pop add or add mov xchg sub dec int (bad) or sub dec rorb sahf xor pop sub outsl mov sbb out cmp cld outsb pop or mov pop out adc and sti jae xor ss adc cmc pushf cmpsl clc inc test (bad) fistp sub (bad) adc sub cmp adcb fld1 sti lock pop pushf ror xorl lcall (bad) jbe repnz in push (bad) stc sub pop jae and (bad) scas or scas pop dec cmp cld pusha xchg fisub xor push mov lret mov push push js inc add leave cmp sahf enter fwait sbb pop test fcompl jns sti mov sbb or aas dec mov fsubr in xor push xor rcrb (bad) das gs inc jo push mov sbb daa js test pop pop push je inc je and pop loope and push pop (bad) cmpsl stos aad stos sti jmp fcom add pop out aaa int3 daa rcll cmp das rclb pop add les fsubp push out (bad) (bad) inc pop xchg lods push in adc fwait mov and xor fwait add mov jle dec cmp push inc adc pop shr fildll (bad) (bad) xchg dec sub xor mov mov lods (bad) jb and in xchg js pop clc movsb (bad) add pop mov out push mov and mov daa push mov or pop cmpsl jbe mov enter mov mov sti pushf (bad) fdivr adc imul dec cwtl rclb add push mov dec xor cmpsb xor mov loopne (bad) mov dec js push scas adc fldt les push pop jecxz (bad) (bad) push sahf dec or ja cli lea (bad) jns add fdivs adc xor jge push xor mov xchg mov sub or ljmp fcmovu mov aad cmpsb push mov jg mov loop fwait sbb mov mov xor dec and push shlb gs pop (bad) popa addl mov std pop lret inc outsb dec sbb add push or sti pop ret cmp push or jmp jmp inc ret pop (bad) rorb cmc ret fisttp ficomp pushf ss sarl sbb push xchg int3 sbb ret xchg mov lret sbb dec in nop (bad) mov jb adc into movsb fstps ja xchg sub and xchg push pop jle loopne cmpsl enter push aad cld rorl scas inc out movsb rcrb mov ret scas ja mov lea popw cmpsb lcall test add push popf dec out dec pop dec push jne int3 verr jge shr jb cmp outsb mov and arpl jecxz flds decl rol fstl inc cmpsl es xor outsb sbb loopne jno adc or leave xor xchg into cmp mov cmp adc icebp insl test fidivrl mov and (bad) jmp xor cmp mov xchg xchg sarl ret xchg push stos mov sarl imulb (bad) mov mov xor jg in cmc leave xchg sub pushf adcl inc movsl bound (bad) popa xchg lods and imul mov sub (bad) cmp mov mov das mov lea clc popa es mov xchg xor cmp sub push pusha cmp dec and mov cld cmp ljmp inc push and jbe jle inc aaa cmp bound jg (bad) iret sarb ficom movsl cmc movsb add jne sub fist (bad) xchg ss rcr leave cld cmp aad sbb mov cmp or pusha nop insb cli xor push lcall loop mov bound mov mov xchg test idivl jl (bad) lret ficompl add ljmp pop push push add fildll mov fldt repz sbb test fstps cwtl outsb data16 ss jbe js aad push fs outsb mov movsb push repnz cs mov loope mov insl jmp shll xor or dec ret and mov mov xlat fldcw inc outsb sbb xchg int3 addr16 mov out insb xor jecxz les dec scas jo jne bound aas arpl and pop push cwtl and (bad) fbstp fs inc icebp addl loop dec cwtl scas js arpl (bad) loop in fcomps xor int add hlt fstpl xchg scas jge imul jnp,pn fwait rclb jo loope push fwait jl js push (bad) in es mov cli xor push int dec mov cmpsl add jmp aam xchg add hlt test addr16 jnp push shrb and push sbb loopne fdivr push jns xor mov bound sbb xor push add (bad) je lds mov imul pop js xorb adc push out popa pop ljmp xacquire int3 ljmp push imul xor mov icebp into mov mov out scas cmpl cmp sub repz adc push movsb add dec iret fisubrl in push imul call test gs xchg lcall mov out test aaa bound pop movsb and xchg sub test push (bad) scas mov inc popa pop ret push jne stc inc and lret dec lds pop dec xor sub push ds sbb sti faddl jg jecxz fcoml push in je gs pop movsl inc es pop repz hlt ret and test mov add fsubrl test lret adc pop aaa out pop or add inc fist sbb add (bad) ja,pn push and arpl fmull fcoms jle or adc sti scas jle (bad) mov call and dec mov cltd xlat mov outsl push lret rorb mov cmp and flds inc or cmp fcmovnu mov (bad) adc and mov je bnd loop xor cmp sbb inc xchg push sub lret mov sub add add mov cmpsl iret mov and dec inc dec xor jnp lods inc icebp cmpsb mov shlb adc (bad) adc in stc fwait and pop (bad) fiadd pop push repz push inc ret call das xchg jns dec mov sub cmpsb mov sahf push (bad) int3 mov outsb aam repnz lahf or inc mov outsb aas sahf leave dec mov inc xchg inc dec cld jno jmp int3 popf ds mov xchg xor cmpsl or or cmp sbb pop mov es js aaa adc faddl popa addl cmc adc call dec xchg adc push inc fisttpl (bad) lahf xchg int3 (bad) loop xchg sbb pop negl neg imul (bad) xor inc dec xorl loope out (bad) ljmp adc xor add lea mov xor and and mov call xchg jns pop cltd inc or mov les out notb adc sub jecxz adc sbb pop cltd test daa mov fstpt gs xchg mov inc push cmp inc add js jo mov lahf movb pushf sub mov mov int ret fucomi clc jg jmp (bad) (bad) mov scas pop mov imul adc inc cmp mov mov mov fucomip push icebp aaa mov aas pop fstl xlat pushf or dec or mov dec lea test cli cltd pop test and outsb xor aam xor cmp test into pop inc rorl pop loopne mov ds arpl leave int ret icebp ret sub sub adc dec sbbl dec adc mov inc dec add jmp lods sbb inc lds test addr16 div fwait mov nop xor and je and jle dec xor jmp (bad) sub je repnz pusha add sub icebp cwtl dec sub or fnstcw pusha cmpsl sar outsl js add loop lret xor sbb sbb daa cmpsl fbstp pushf and add movsb inc test out jle pushf sub push (bad) or sub stc test or jno mov test cmp mov loope std sbbb call or sbb sarl push cli imul stc mov ret jnp cmc test pop sub push xchg push xor push xor pop repnz or sub push scas pop ljmp gs jmp lock mull push (bad) cmpsb xlat std ja ret test xchg add mov arpl std mov jne outsl in hlt fcom push pushf mov cld cmp and mov fidiv faddl popf (bad) movsl ret and dec ljmp mov sub cmpsb and jbe shll cmp push and inc scas shr and pushf cmpsl mov mov xchg pop sar int3 stos sbb dec pop bnd xor or lahf mov movsb adc sti xchg das fnsave add pop sub xchg in ss and mov push push mov push mov jns jmp ss loop cmp xor ds cmp jb or stos xchg fldcw adc cmp adc push pop arpl push mov jne mov rcl mov insb out push test loopne fnop cmp (bad) cmp popf lret jo enter movsb ret frndint push in or add rolb pop xchg sub (bad) mov aas mov mov ljmp dec sbb cmp (bad) xchg or adc and shl nop mov push and adc mov gs repz sbb xchg jo adc jge popf push out cs push (bad) loopne ja int3 fwait jno push popf add std (bad) out mov pop daa cli dec hlt xchg aas fisttp xchg cmp push xchg lock stos or aam in (bad) sbb push popa pop mov add shll dec (bad) jl mov mov call cli jae lahf or lcall inc out xor adc xchg mov cmp cmp mov jge and add and shl inc sbbl mov mov test nop aas loop pop out add test pop sbb mov mov mov inc sti lret les pop in mov cltd add std clc not fcoms and aaa xchg sub pushf jnp pop or inc cwtl pushf call lret xchg ss mov pop mov sbb xor movsb pop repnz pop bswap jl adc sub mov call xor push adc test data16 mov xchg enter jge add out loop cltd ljmp repz cltd repnz push shlb jnp mov outsl adc xor hlt insl arpl and pop pop sbb (bad) imul fwait push sarb xor pop add dec pop push mov xor jns adc cltd lods cmp jnp xchg push mov mov pop adc insl push iret or loop adc icebp nop xor pop jle jae or das inc xor ficompl aaa push pop pop gs repnz pop jg out in ret inc shrl sub (bad) out repnz aas or mov test incl or mov push cmc lods jns mov xor (bad) jle (bad) cli arpl add mov mov in fnstcw popa jbe mov jmp mov sub adc mov jp sbb test inc lret mov inc xor in xchg enter cltd loop and push mov lcall jae ljmp outsb lods sbb fisttp clc (bad) mov sub mov inc add lahf jnp scas fisubrl (bad) xchg (bad) jne stos neg xor jmp in xchg jne sub fisubr pop sbb adc mov pop sub adc sbb repz cmc mov jp pop mov push adc (bad) jmp jl jp shr popa xor xor and leave mov mov or inc (bad) leave dec dec mov mov mov rorl cmpb ret cld fisttp mov push outsl sub push jg xchg push aaa xor pushf jo bound jl cmp inc xor add inc imul aam mov xor xchg iret mulb pop jp imul xor dec repz mov fwait lods cmp sub (bad) pop les decl in mov mov ja scas or stos out add mov stos inc out clc mov testl push mov mov pusha cmp ficoml test int3 mov pop pop call aam mov xchg sub add inc jg ds test mov adc in arpl lock or mov inc pop es xor mov bound inc lret sub dec lds rcll shrb outsl xor fstl dec imull addr16 sub and sbb nop movsb add jl jmp mov in jne dec out and insl jb mov sti sub push jle cmp sub sbb repz jne loopne and les jb,pn adc mov mov sub pop or gs mov pop cmc sti dec (bad) aaa subl inc es mov in add push out jae popf fisttpl cmp movsb jecxz cmp std dec in push fidiv loope and ds hlt cltd fcoml xchg rclb std inc cmpsl dec push mov imul sti mov xchg aaa push mov pushf fwait mov push mov pop ds pop jmp jae iret pusha cmp int push fistpll or stc jl mov in adc mov daa inc push enter fcompp xor push pop (bad) jo daa sub das repnz ds (bad) mov ret mov iret pushf inc sub mov sub sbb cmp pop cmc mov pop and test xchg push lods ss imul jae les xor popf mov lahf mov movsb sbb xlat mov addr16 repz (bad) aam xchg loopne jo call mov lods xor mov (bad) mov in jb arpl test sbb stos lcall adc movsb pop in or xor repz in sarl and in sub xchg jp adc push mov push leave mov dec and iret pop or lods sarb and fnsave js hlt ret adc and cmp test cmpsb jg jnp xor sub loopne or push mov sti data16 shrl ja ret push icebp cmpsb and add pop and add mov mov mov cmpl and xor xor js cmp dec nop xor push stos stc adc or sbb mov xor push loop xchg jnp nop fdivrs push (bad) jmp xchg mov mov jno scas test jbe xchg gs aaa stos into dec mov ja lea repz ds mov add out dec xchg in das lcall dec adc dec sbb dec dec adc mov fisubl inc clc and pop rcrb mov lahf aad cltd push sbb dec add mov jbe inc sbb test inc cmpb lret pop cmpsl sbb jo xchg pushf ljmp push and mull jp inc lods or mov dec mov test scas int pop xor dec aas cmp sahf mov cmpsl stos fnstenv cmp jb xor out lods adc data16 sub cmpsb or xchg inc mov movsb insb push adc push movsb in or push cmp sbb mov cli and cwtl jge aas and in mull stc mov add inc lock js,pn jbe jmp inc fiaddl xchg pop ficoml mov jg sub pop scas cmpsb dec clc jle adc (bad) stos xchg icebp jmp inc mov adcb inc outsb jecxz push idivb data16 and in add nop dec insb daa inc aas fs adc sbb ds inc pop test inc pop jne mov push inc int3 push push out or adc mov loope xor cmp jno or and clc adc pop pop les or out mov call aaa jmp sub cmp imul lret cli dec push mov ret arpl xor inc mov mov push mov push push push adc cmp ss shll xor xchg cmp insb cs (bad) cmc in ss lock xchg into jbe xchg lock xchg pop insl es xchg sbb shrb or mov scas (bad) loopne push pop xchg fcoml sub xchg lea dec pushf jle dec mov mov pusha mov xchg or dec cmpsl test sub adc outsl sub leave or js out hlt repnz sbb mov adc popf xorl add push hlt sbb shrl sbb inc cmp dec xchg mov jae,pn sub mov arpl inc test sub inc sub into pop or jge aad daa mov fidivl inc ss movsb (bad) fisttpll inc std jge hlt gs fwait scas test push fmull xchg xor xchg lret push dec jo xor movsb jge or jge jg not dec in dec ficompl std rdmsr ljmp mov adc dec bound adc dec push movsl stc cltd and clc cmpb cmc push es mov lret gs loope mov pop xchg subb (bad) ja mov mov adc jbe ss dec aam test insl cwtl jp push ss in loopne out popa lahf out loope pop (bad) imul movsb sub jno fbstp aas or (bad) leave and sub jmp scas out dec xchg pop sub (bad) mov (bad) mov ljmp cmp es (bad) sbb decl int3 call push icebp call out stos pop aas pop cmpsb scas sarl add mov push xor xlat enter mov or mov pop or xchg mov jl loop repnz dec pop or ja into sub dec push inc adc and hlt imul addr16 inc imul push loopne nop mov inc xor cmpsb sti scas add mov in fdivr jb adc push jns sub and xchg (bad) push sbb addr16 inc pop add repz jle loop pop xlat sbb insl pop push aas lcall bound sarl adcl cmp jnp push dec in call add mov (bad) out mov scas fistl inc jp mov hlt xor jge jge adc mov popf fild push cmpsb ja imul lahf fnsave sarl addl fildl inc stos sub (bad) mov lds aam mov push xchg ror sbb mov aam in mov rep clc pop les nop mov xchg mov pop cmp xchg repz and jo pop and pop xor in mov dec pop mov pop mov iret inc in xlat sbb dec push or mov push int3 mov mov cs pop shrb test dec and lock fsub aad addr16 xchg cmp adc test mov fnstenv fldt int3 les mov mov rol je pop idivl add mov in mov in mov or sub xchg das sbb clc mov pop shrl aaa or cmpsb push arpl outsl adcl sbb mov clc outsb sub sbb jg xor fsub test mov scas push in adc fiaddl inc jg movsl add pusha pop mov sub dec sbb popa inc addr16 jne lahf xchg mov push mov stos add aas add popa jae pop iret sbb (bad) fdivrl lds xchg rorb mov or mov mov leave cwtl jns fxch xor sbb outsl lret ret xchg mov pop dec lret dec mov add dec pusha call pop scas cwtl (bad) dec stos enter adc fidivrl lret adc popf sbb cmp push mov mov sbb ljmp addr16 mov mov faddl rolb icebp add jge pusha jecxz pop sub mov fldenv cmp or rcrl mov xor ds add cs mov or scas mov xor les sub xlat sub jbe sbb in test add jno xchg arpl mov cmc mov cmp xor out sub pop je xor ljmp outsb mov lods out pop (bad) mov xor adc aad add out je mov fdivrl int sti (bad) mov ss mov jb mov inc and inc data16 scas cmp push out adcb push clc or lods aad (bad) pushl fidivl jb (bad) test adc stos imul mov xchg icebp inc inc jo push mov rolb outsb jge popf add add pop inc jo fs daa loope cmp loop push dec pushf ret xchg xor lahf cmp dec sub mov pop add add insb scas xchg mov stos or int leave or enter lods inc in je,pt and fs push test mov dec xchg sarl xlat xor (bad) sahf push aas fldl iret xlat insl test fstpl mov test je and rolb dec notl sbb (bad) cmc sub cmp sbb add movsl and out adc push cmp pop cs and stos pop and je rcrb (bad) or addl (bad) sbb int (bad) lret repz roll in jl add xchg stos daa in gs xchg lcall insb xor or call shrl mov sub (bad) divl push sub xor jl dec cltd test mov push pop jno dec and inc insl xor je bound sub cmp pushf mov mov pop (bad) xchg mov int movsb test stos mov stos lcall inc loop cmp sbb push aaa xlat lahf aaa sbb fisubrl mov push inc fisttpl iret repz movsb test (bad) add push add add imul sbb jg hlt mov cwtl lahf sub (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz pushl add incl pop in jne mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and mov fnstenv insl mov fstp insb (bad) (bad) sti out jnp out mov outsl add inc xor cmp pop pop xchg or adc repz lahf mov fwait sbb mov cmpsb mov push add dec mov inc cmp jle jle xchg push or movsl cli into xchg addr16 rol popf xor and cltd pop mov dec jge xor adcl jle inc adc cs jo inc sbb fiadd loop (bad) pop cltd (bad) xor xchg pop mov decb arpl test sub push and gs scas mov xor mov fild into jno cli sahf jle push lcall mov or std jp cmpb pop mov movsl imul cmp sub xchg push sub out xchg fucom lcall stos add xchg add lock xchg jno fs arpl pop mov mov (bad) mov jno push jle mov xchg lret sbb xchg repnz jg rcll adc popa push mov inc popa pop cwtl sbb dec cli ret cmp dec xchg (bad) sarb mov xor cmp push das cmp jnp sbb mov mov jecxz int out jo and int jae add pop out lahf mov pop mov xchg dec inc mov clc sub add repnz js cwtl out movsl cmp aaa mov add xlat mov cmp push insl push nop push fsubp movsb inc not mov or push dec jmp pop sbb xlat dec lea arpl pop pop movsb test setb sbb sbb fldt scas stos mov in out mov aam les mov xchg fdivl push inc cltd dec js mulb mov sub mov lahf dec jg mov fs push xor xlat (bad) and std push test fs addl sub gs mov sub pop loopne jmp lret mov mov jl ljmp sbb mov mov dec pusha xchg mov daa bound inc int3 lret inc stos xchg fnop dec ret (bad) aad (bad) mov cmp xchg fcmovb daa sbb inc sbb mov mov das data16 xchg pop sti out lock push and mov and stos sub aas out mov out jno sub lahf mov dec cltd repnz add jle (bad) jmp ds lock mov movlps imul and (bad) cwtl mov pop test adc movsb add leave or sub icebp dec arpl mov mull xchg leave or dec push mov or jns (bad) push cltd popf shrb scas test xchg xchg fildll fimul push jmp push pop fsubs pop mov adc dec mov (bad) bound xorl call xor pop xchg inc sub and (bad) pop enter inc dec lock push imul cmp add std (bad) lret sub cltd call push jmp jne push lret mov and add inc pop mov ret jp cmp mov sbb lret or repnz ja iret add in push pop cmp add xchg cmpsl jnp shrb mov test mov data16 dec xchg mov les aad inc xchg cmpsb push int push pop pop mov leave inc xor gs inc cli std xor jmp (bad) sub fwait adc iret push lahf and or fdivr fnstenv les out fimul jo pop jae pusha dec mov jnp (bad) dec jne jecxz xor sub movsb add jae fs push in hlt pop test pop adc dec in dec pop jae out test out mov movsl dec dec mov idivl outsl jns stc xchg outsl mov out mov cmpsl mov lea popf jns test es ja data16 cmpsl dec or lret pop push xchg decb (bad) mov ja inc cmc pop ret testl pop roll jb lock push xchg mov cltd imul mov inc xorl mov movsl scas aam insl and movsl insl mov pushf lods adc ficom or push sarl jne aam mov arpl js aad xor jnp sub outsb jb data16 data16 jbe sub mov lods mov out clc jle test int or mov dec add xchg xor iret mov pop push jmp adc popa lock cwtl sti cmp rclb lcall mov add cmp lods mov ljmp dec jle adc repz insl pop xchg cmpsl les cld cmp lcall jne test xlat ret out repz mov out jbe out icebp ja hlt xor scas xchg xchg in push xchg in test dec pop mov mov cltd shlb out push lcall xchg inc int pop xor cmp or push cmc cmp jg inc inc ja les dec test jg or lret mov outsb push or jb popf hlt mov fs je pop out xchg (bad) fcomps pop mov sbb mov jbe fisub and clc inc push jne jnp inc xchg test mov roll (bad) icebp ror pop cmp xchg and ds cs xor xor out ds pop cltd fwait adc push aad je sub adc jbe daa out inc mov xor nop sarb jmp cwtl or stos mov shlb mov (bad) test mov mov sub lret cld jmp es ret sahf frstor sti mov cld jmp inc js ret and stos repz sbb mov mov xor popf bound ret daa loope insb (bad) arpl int sbb sbb test mov out lret aas add cmp into and ja mov shlb (bad) push add mov jbe cmp inc je dec fiadd outsl push insb iret aaa fwait lds outsl mov sub cltd stos out xlat aam insl dec pop jg sarl push xchg jle sbb insl mov fcompp mov and loop addr16 jb aaa scas inc dec mov mov std pop sbb daa lods xchg xchg mov and ss repz inc jle and xor jbe and fimul data16 add pop leave inc cmp aaa icebp repz cld inc cmp push pushf lret stc ss (bad) push xchg aas jge cwtl dec adc mov xchg and xor lds lods cmp rcll adc pop push out mov push xor inc scas jns dec ljmp xchg mov loopne add xchg mov outsl dec pusha inc mov mov push mov pusha les jp lock pop idiv movsl les push pop mov dec or lds flds bound stos mov loopne mov je dec mov lds mov dec add jnp push push or pop push (bad) cmp push adc roll add das inc mov pop (bad) nop jne mov mov lea shll dec push jno pop dec jp pop push cmpsl push xchg xchg nop inc lea shll imul push bswap push jmp push sahf lret mov sbb dec adc push clc imul jns fdivrl call mov adcl jle xor std lcall mov fildll inc or cltd nop outsl (bad) inc sbb imul lods add xchg cwtl mov sbb cmpsl scas mov cmc or into xlat mov popf sub out cmpsl scas lahf dec mov aam in ja es stc shrl bound xchg mov jno subps jp adc pushf es push mov mov addr16 (bad) test mov out mov jbe xlat popf sti ljmp repnz mov scas mov adc fsubs bnd ret into stos in or mov mov xchg cmp push mov sub push movq repnz lock js and jg inc in xor imul cmp inc xor mov adc enter into cmp bound inc rclb pushf ja loopne leave jecxz inc (bad) mov dec mov pop mov (bad) ja pop cmc push mov insl xchg std push mov pop enter mov xchg xor inc adc and in mov and imul aam nop xlat mov fwait sti daa fisttpll ret push cli jmp mov sub jae xchg cmp sbb pop cmc les adc jo lcall ja dec dec daa pusha mov data16 or flds fnstcw jbe mov (bad) mov pop sbb pop xor orl dec rcll into xor mov add int3 addr16 inc sub cmpsl ljmp rcll test dec in maskmovq (bad) dec mov mov iret popa sub sbb xor je,pt and iret sbb jg push pop add loopne dec dec xor push das mov das and jb lods sub cmp sbb ja or lret xchg sbb or ja sub dec pop ret shlb stos cmp imul push fsubs fs insb add push push xor xor (bad) push and mov push js les mov cli daa jns int3 sub add or fstl sub ja lret cmpsl out inc jge (bad) dec cld std cmp xor sub mov and add dec mov movsl cmc jo icebp jge (bad) fimul mov sbb cmp xor dec mov cmpsb in add int3 out es movsb cwtl adc dec dec inc (bad) or jo mov and cmp fstpl bound dec mov loop fisttpll jnp sbb loope mov daa mov xchg xorl sbb add jecxz aas mov xchg xchg (bad) loop,pn imulb imul cwtl loope repnz hlt jb mov mov jl and xor or hlt aas imul adc lret das sub pop or or bound (bad) xor (bad) inc sub pop xor mov inc movsb and stc xchg (bad) xor mov int (bad) push cmpsl inc cs cmp std out adc cs sahf iret cmp int scas push inc mov pusha lcall cltd and mov dec iret xor and fwait cmp sub mov jecxz jbe js and fisub dec fcomi ret fimull arpl jae lahf sub inc rcpps and out cld clc cmc test ret mov lods je ja cmp aad mov imul sub mov adc cs jg lea ret js cmp adc pop test clc dec movsl jle enter test fnsave push xor fbld push inc mov jle jl sub rolb jae shr push cmp xorb xchg (bad) push add push addr16 jb or pushf jle cmp leave imul xchg and and lret push stos pop jp in sarb (bad) pop ja pop dec or mov lods mov cmp sarb mov ljmp cltd pop btr out in xchg lea and mov dec pop dec in mov je cmp jecxz xlat push insb (bad) movsb in pop pop gs sti mov call bound imul lock mov inc sub add sahf cmp push sub and shl mov ss out mov sub mov stc out pop push jne scas and push les cltd divb adc test pop sub lock xor in xchg (bad) adc cs je fnstcw js pop jne or lahf cmpsb orb lock idivb sti mov shll mov insl adc mov mov cmp les (bad) cld fsubs sbb jl addl pop sub hlt or pop lods and sub pop enter pushl (bad) das insl outsb xor xchg fwait mov xchg jae movsl fnsave xchg xchg stos fldenv and adc pop scas or scas cmp mov das xchg in bnd hlt sbb push pop push (bad) push push icebp jno ja stc test les mov (bad) dec pop xor loopne scas movsl inc xchg (bad) cmp cmp add in dec fs push enter xchg ljmp pop mov or or mov ds mov or xlat gs mov push pop sbb sub js inc mov mov mov pop fwait sbb orl loopne aas ljmp adc ds dec (bad) or sub aaa cmc into shll lods jns fbstp pushf ja push popl (bad) and add mov or jns enter jecxz push sbb daa incb divb add sub mov or cmc sub push dec mov sbb fidivl ljmp cmp add jp cltd dec dec mov push cmc lods movsl inc in loopne xchg enter or int3 sbb push gs test push jl repz lret sahf or popf (bad) lods roll sub pop mov xchg movsl aam cwtl inc popf or bound inc es mov ret or std sub push push add les js rorl hlt mov je arpl popf mov dec mov out and ja pop xor sbb mov dec mov mov (bad) jge stos and mov or pop mov xor leave cld inc adc out push sub inc (bad) push add dec push outsl mov mov lcall adc jae mov and mov or leave insb je add loope (bad) jno add jbe fimul and sbb mov add inc xchg or mov cmpsb rorb add dec data16 mov add inc ja dec arpl sahf pop xchg dec pop mov neg daa sbb in aam roll jmp sbb sbb pop enter nop outsb mov pop test cwtl idivl popf and xor loop ret fwait mov push xlat out mov pop sub push fwait test xchg lahf adc jnp imull call popf mov lods (bad) mov mov (bad) xchg int add cmp jg push mov cmp popf fsubrs add loopne loopne,pn outsb mov mov pop aad imul xchg pop nop aaa sub push jo jns aad repz push sub js lock cmpsl test jl daa ds lods and std mov jg stos or outsb fs (bad) insl or cmp jmp into mov mov mov lret subb lds js xchg push (bad) out xchg pusha mov mov nop mov or inc inc dec fidivl cmc pop or and cmpsb or out test outsb rcrb mov (bad) xchg loop push and mov mov inc cmp fidiv add mov ljmp xchg mov clc or cmpb (bad) in mov out adc lods or roll push mov jnp add hlt fidiv int3 out push (bad) xchg sbb stos in jmp inc mov (bad) aas dec pop push pop mov lahf leave call xchg push out sbb jno pop sub inc test test or jmp pop pop in xor je scas xchg mov sub ret add sbb popa lods repnz fmuls push mov mov mov inc int3 jp test (bad) sbb cmp xchg loopne insl sub push cmc out xchg or test mov aaa and mov push mov pop mov test pop sbb push mov mov fidivr xor or mov xor sbb lds mov cmp dec (bad) ja ret mov inc shlb neg outsl jbe xor shll out out push movsb pop mov mov iret xchg jg mov pop mov mov pop fwait dec adc mov jge mov push arpl push aam neg xchg lret sbb xor mov movsl mov cld int3 (bad) xchg ja stos imul xchg ss or jns fwait gs fsubs popf es pop (bad) mov (bad) repz test fninit push loop lods mov mov push pop or data16 push or aas cmp cmp sub add sbb negb loopne pop outsl xchg xchg mov in test inc fdivrl push (bad) or push js pop inc mov inc cmp shrb (bad) push call push mov jg xchg mov aaa stos aas xor add sbb out cmp sti int lock sarb out lods leave in mov pop push jnp dec jb lahf into (bad) pusha das lcall (bad) lret inc or push and jmp mov mov ret test add pop jns xor pop and stos test leave out fisttpll rcl mov dec enter xchg or jae push jle enter push push xchg cmp movsb add mov out add ret adc cwtl lods decw sub mov int3 mov leave stc hlt out test inc push xchg adc mull push test orl movsb subb hlt je aas dec pop jns and pop inc out je add or data16 pop push imul out jnp aad popa mov sub lcall movsb clc in mov cmp sbb xor (bad) testb pop inc mov pop cmc lods nop rorl dec leave mov mov int popf pop add push cmp orl push sarb ret or push adc sub divl test dec jns pop pop lods lcall xor rcrl js in fs jae cld inc sahf add lret sub jmp mov jno pop pop adc fidivr leave pop xchg int fs arpl rorb pop inc pop ror or fstl mov lds fs push nop mov rcrb xlat mov xor push lret sub pop jecxz mov or (bad) movsl fsub add pop cld data16 mov and fiadd fsubl mov pop xchg xchg inc aas cmc stos (bad) test inc sahf insl imul movsb data16 daa mov jns mov mov xchg mov or mov clc repnz xchg dec mov outsl imul sub test or ret pop cmp mov rolb or sub mov mov mov loope es inc jecxz xchg movsl (bad) mov sbb jb xchg cwtl inc pop and mov je mov jnp es push jne pop enter lret and xlat ja add fwait mov icebp cmp outsb inc and (bad) shr (bad) mov test sbb addr16 push pop push push jmp xor jb in insl sbb dec out fwait (bad) or adc out lods imul pusha cmp sub jle mov dec pop (bad) lahf mov or iret xor cwtl mov ljmp lods xor jbe pop aam rcrb mov add cld aad mov shl loope mov clc out imul push inc jnp,pt dec outsl cwtl fstps sar sbb icebp (bad) lret dec gs in xor clc inc popf xor sbb mov xor lock add call push mov pop add mov mov sub cmp addr16 dec daa cmp pop mov pop mov xlat xor or and mov add jl (bad) mov jnp pop xchg mov push shrb lahf nop add loope insl (bad) sahf stos xchg pop mov scas mov push incb movsl int3 sub mov xor shll rcrb lret data16 in test pop mov sbb scas inc mov mov mov dec cmp pop pop aaa mov aaa sub pop jb sbb jb dec pop pop add cmpsl and pusha clc adc das and cltd stos cs pop sub sub aaa xchg sbb xor xor sbb xlat pusha adc gs mov mov add stos and and pop stc adc nop mov fs or cmpl adc pop sahf insb jmp dec or addr16 push call jl cmp adcl pushf lock pop cmp insb push lds leave or ljmp xchg add fld and sahf push inc mov jne cmc stos dec jmp std and rolb cli and in scas or popa stos int3 ret dec movsb cmpsl loop insb into jo aaa or and push jbe je dec cmp sbb rep ja lea sub aas (bad) dec push adc movsl cmpsl sbb mov (bad) lret lds jle into xor inc sbb cld aam push push outsl (bad) js add call xchg push mov mov into leave jge and iretw mov (bad) mov (bad) inc lds inc lds push mov fadd xchg add hlt mov jo xchg fdivrl mov add pop cmpsb aad jne fildl lahf adc pop inc rcll and jecxz les call pushf clc adc dec outsl fnop (bad) (bad) (bad) jns sub mov (bad) out push int3 std test inc or negb dec sti loop pop mov fildl push (bad) out push faddp xchg mov jp mov stc (bad) mov jge xor clc mov insl sub add popa mov cmpb movsl ljmp lret dec adc aaa xor cli lahf sahf xchg jb sub int mov mov jno cld dec cmp dec clc pop dec xor mov out icebp or sbb add fsubrl mov inc inc adc loope inc jbe xchg es aam cmp or int imul test dec outsl or das or ja push add es or or and push (bad) fwait les cs push (bad) outsl jmp lds in out mov cltd imul xchg lret inc in mov sti adc hlt insl push adc sub repnz cmp (bad) (bad) (bad) repz cmp ss push (bad) jne push push nop jne cmp stos movsb into mov decb bound rclb pop xchg pop adc iret pop xlat clc movsb pop sbb bound gs test and lea mov bound ret add and jp je dec adc sbb mov mov and xchg inc (bad) dec shlb dec xor and rorl lds aaa sbb jl mov xchg rcrl clc push add xorl iret loopne push mov shrb (bad) or cmp pop xor rsqrtps (bad) mov aam pop sbb lret pop sbb test notb divl outsl scas sub inc adc pop (bad) push push jmp adc mov (bad) xor ret push cmp movb pop xor ret ficom pushf mov arpl pop jae enterw xor sahf sub lock or sbb push adc cmpsb add rorl insb mov sti push sub push js insb xchg mov (bad) aam rorb or or jo inc sbb add mov mov cltd push out pop or repnz sbb mov out xor push leave adc hlt movl testl push lret fstpl jmp repnz repnz jo or jbe scas imul push push cmp cmp lret mov add pop aad lahf lcall inc or cltd sbb mov mov jl insl imul shlb outsl data16 pop push ret adc jmp add lods pop sub jne push mov orb dec or pusha or mov dec mov jo sub jg movsb xchg mov pop or xor sbb enter rcl xchg bound aam imul cmp lods outsl (bad) jb push xchg incb in xchg cmp mov (bad) fsubl pop inc lret imul jne or aam sub mov cwtl or iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add push add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg pop imulb cmp jbe jnp (bad) (bad) insl das mov pop xlat or add push jno int xor imul push jmp jmp cmp adc xor lods rcrl call add lret lods lret add ret orl mov imul std (bad) adc jae pop push pop cld jo inc loopne or shll lea sarl jne fwait lcall nop jg pop mov mov cwtl insb rcrb and test sbb es inc jecxz es sahf mov and xlat mov rclb das adc xchg jb pop pop mov dec sub fcmovu add mov and andb or ret dec mov cmp xchg aam mov xor push and mov lret push leave pushf cli jne xor in out std pop aaa lret lods mov jo add inc mov daa stos movsl sbb int rcr fmul sar adc test (bad) push or inc push or pushf xchg push push push mov fs adc lcall dec xchg (bad) test je push mov jle jmp sahf test xor repz movb adc mov mov mov ret movsb ret out stc or mov gs cmp ja and ljmp scas mov and pop sbb cmp daa pop add jmp xchg (bad) imul aam (bad) stos out dec mov jg add dec push sbb mov push mov and pop lods xlat mov cmp jl jae inc xacquire xchg lock leave mov movsl fimul jns add mov pop xlat les lods mov or popa mov ret xor mov or gs lcall lret negb or dec loopne imul pop jno xorl jns imul cmpsl add push negl loop pop mov stc xchg push cmp cmp jmp nop mov stos dec cli nop loopne hlt mov lods lahf lcall dec or imul and push pop xchg adc clc pop and jbe test and or std (bad) movsb das mov (bad) out iret jbe vmovntdq test lcall sbb jns mov pushf pushf sbb push add dec shrb mov aad lahf mov adc leave arpl (bad) jae imul dec mov call cld pop mov and pop mov addr16 sahf mov and out ret cmp jg jl and aaa outsb cs push aaa mov ja jmp jle rcll mov dec xchg mov sub in or rcr faddl or (bad) xlat xchg mov fwait testl int3 or mov xor decl setns mov mov lock in inc lods adc add pusha dec mov sbb pop dec mov gs jl and aam lret xchg test push xchg xchg mov sub test cmp dec outsb dec aad jmp pushf inc stos add iret loop push scas repz inc rorl or mov stos pop (bad) jge cltd jl sub repnz mov mov outsb add (bad) push addb out mov into lret popl test addr16 mov mov rcrb xchg js iret xchg cli jne lret sbb jg mov sbb mov mov rolb add sub lds je cli adc stos pusha in sub leave aaa (bad) aad loopne lods xchg in ds insl push scas hlt mov fpatan dec xor cmp push or scas mov daa pop stc out mov add movsl adc fwait outsl add jl lahf xchg sbb leave lock pop jecxz inc mov inc mov and push (bad) decb rcr xchg sub rclb enter lea rolb ficomp cmp call jge test mov (bad) gs cld xchg shll xchg jmp roll sub mov xor pop pop loopne ds lock mov ss arpl stc mov push insb adc pushf ret aaa adc and push sti inc arpl gs cltd jbe mov gs data16 test xchg jns insb nop mov bound test shrl mov scas ffree jo inc enter (bad) cmp mov add push sarl xorl dec icebp adc dec bound adc (bad) imul ja and pop dec dec xchg inc pusha sbb sub jnp inc jmp pop cmc bound cmp pop jp jb test inc or xchg pushf (bad) pop push ds (bad) cmc cwtl popf fisub out lea and into (bad) cld hlt and dec sahf jl xor das pop mov sarb and lods inc sbb out or mov aaa dec loopne insl addb adc bound loopne adc jge or ds add and sbb add negl mov in pop dec mov mov fbstp push xor insl mov dec adc into mov or pop loope mov scas dec lret xor and ljmp inc nop xor in add xchg xor (bad) cmc iret xlat pop in adc inc test jmp outsl test mov xchg testl scas stc xchg cmc push (bad) int ret je shll mov leave jns insl xchg jns mov inc mov inc sub (bad) in call pop pop xor inc jne xchg mov (bad) mov out rclb xchg sub insb aam rolb mov ror mov out cmpsl or cmp ja scas sub sbb push loopne fwait and sar pop xchg mov aaa sbb pop push push push inc popf fistpl mov xor loope inc jle xor xchg into pushf jbe addl loopne imul loop inc (bad) int sbb mov cmp pop sbb dec pop ljmp sbb xchg xor fcoms or and jbe cld lds inc push xlat xor jne sbb and popf jnp ret cmp or stos addr16 push outsl pop test inc jnp and arpl sub cmpsb sahf call push aad pop ficompl pop das mov adc cmp das push xchg pop adc in push popf xchg mov push mov pop sbb (bad) lahf insl js sub dec jmp cmp stos cmp add fs and sub stc cmp push sbb imul outsl xor adc fisubrl jg divb fsubs adc mov fstpl into dec cmp jo dec inc mov add jo jecxz into cmp cmp dec daa xor dec daa pop arpl scas mov jle jns push adc pop cld rcrl jns cld pop cmpsb dec mov orl dec in dec dec xor ljmp ficom xchg add sahf or and enter (bad) cld sub fst bound in call (bad) xchg lock leave lea ljmp push cs mov jmp lds or mov sub jns mov inc lock and adc popa jb mov ds jle mov (bad) roll fstpl sub cmp jo shll push xchg push pop mov addb fidivl aaa test sub insb inc ss pop inc insl jle loop add fisubl jle pop jmp jle xor inc es dec xchg push add stos or mov pop pushf ljmp loop test mov movsb mov bound mov mov sti test mov call xor and jbe pop test xor popf jmp nop add inc xchg jg gs and sarb xor out gs iret push xor xchg shrb pop andb ret ret jbe lcall cmp push add loopne arpl pop pop jno imul pop fs fsubp notl mov fcmovb push push stos mov fisub or das push xchg push test adc adc aas jbe sub fsubl xchg or mov mov insb nop push adc pop lcall pop loopne xchg enter pop pop aas addr16 cmp fs hlt jecxz adc (bad) jns ja jle jecxz rcr xchg fbld xlat aam adc dec rol and (bad) int insl scas pop mov notb or xchg cmp pop dec lods mov lea sbb sub xor cwtl xor or mov xor dec iret pop (bad) mull sub in push (bad) adc rclb inc xchg inc xchg push cld fs cmp adcl inc jnp cs push cmpsb pushf leave outsb arpl enter adc xchg xchg (bad) xchg inc add movsb pop cltd xor push push dec jno and pop mov pop xchg outsl mov push iret icebp mov insb jmp sub rcrl mov cwtl jne pop dec out fs mov mov xor call cltd aaa cmp lcall jb adc repnz sti in xor cmpsl insl pusha shll mov rcll cmp or cmpsl out push adc divl movsl pushf xchg xchg push and les rolb rcrl or test jo cmp push int3 xchg inc mov (bad) jmp mov aaa inc shl negl mov aas (bad) dec loop aam pop adcl adc outsl pop sbb aas pusha test rep cmp ljmp xor fwait call ror xchg ret and cmp mul mov loop scas loope int adc ror and mov jmp nop pop xlat ret add stc mull mov mov int jl mov push inc inc test inc xchg pop insb mov mov and sub add inc dec repz jbe and jg ret mov int adc push sbb pop or adc imul rep repnz aam inc es dec out adc sarl push mov ret subb test xor fs sub imul int3 mov ss push sbb jg or jns mov repz loop inc cmp stos ds adc mov popf adc and mov inc mov (bad) mov jne std mov or dec adc push (bad) je adc mov dec repz lret xchg fcom mov xor iret add movsb inc divb call dec fisubrl in stos adc dec js jg cmp and sbb cmpsb clc dec jp push outsl cmp mov (bad) mov dec out lock js ret xchg mov sub sbb sarl jg inc xchg pushl sarb popa xchg add ljmp fiaddl je fwait lret cmp insl pop fisub loopne push out lahf mov pop sub sbb jl jns adc lods cmpsb rcr xchg icebp jne out mov mov lds cltd into ss xchg or pop out add pop (bad) das xor xchg sahf dec repnz add fnsave sbb xchg jle lcall pop repz in sbb jle push push mov ds jo push (bad) in sbb add xchg js,pt push push je mov (bad) lock pop xrelease sbb xchg jle call in sub (bad) js data16 pop sub mov adc jmp dec insl jne int sub hlt mov xchg push lods mov push sahf mov sbb add ret mov sub lret jae (bad) mov lods pusha mov lcall out inc fwait and ss es sahf add in sub xchg lds cmp xchg enter mov out dec imul (bad) pop inc dec push jle mov in int inc pop (bad) inc cmc mov iret and movsb mov repz imul ss aad es clc mov daa shr jnp jae add je jp mov daa out or lgdtl aad (bad) dec inc loopne cmp daa movsl sbb popf mov cmp mov dec adc out push mov stc push sahf add out sbb aas and subl out cld out dec mov je rcl jb data16 add fdivl ja or mov fimull push arpl popa or mov (bad) jl pop fdiv (bad) push lods or jl or aaa cmc rolb xchg sahf push push leave mov lds ljmp scas push ret push mov sbb scas and add cmp (bad) icebp pop cs std nop les push popa or in fldl sarl ds sub cmp add (bad) mov add inc andl les dec test int3 push push rcll into mov stos jae sbb adc data16 in stc outsl add mov addl ds mov xchg xchg mov mov xor cmp inc push jl test sbb xchg adc (bad) aaa cs out rcl cmp loope in aam cltd jge add dec mov sub jo adc ds lea sub iret (bad) xchg cmpsb (bad) jmp jo pop cmp dec fldt int test aad push mov inc xchg lods dec icebp sarb iret push pop (bad) out jl push lock cli sub std fsub mov sbb sbbb inc jle cld xchg jno sbb inc inc ds ljmp cmp lea jns mov and cwtl es adc nop push repnz mov fs adcl call mov and loope int xor data16 js jmp stc stos mov inc clc lds (bad) mov popa sbb shll cmp shrl add subl cld ljmp std pop into sbb cmpl std orl and mov gs sub imul and sahf xchg xor add mov in mov xor push mov jbe cmp cli dec sub fsubs and repz iret imul pop test fwait test insl hlt aas aaa xchg mov dec sahf stos mov movsl jp popa mov jl outsl icebp mul (bad) movsb out sbb nop sbb mov cld in mov fcom xchg or cmp inc mov push push dec imul dec adc xor les inc xchg adc mov scas cmp xor aas sahf mov jp or cwtl hlt jb ret in rep aad mov cld jmp adc cli es mov cmc jmp bound ljmp jmp push int and les es out iret dec add or (bad) stc dec mov mov xlat (bad) mov or mov repnz into cmp or in push xor sub bound ds movsb fcomps out mov pop adc jns xor jecxz fimull icebp mov push or or in in dec inc stc pop mov push in inc insb dec pop lds loope test leave inc stc cmp icebp clc cmp repz mov mov outsb ds pop mov leave mov mov scas fadds arpl call in fnstenv clc pop mov outsb (bad) xor or (bad) es xchg xor mov orl jo cmpsl rol sbb xchg std sbb xchg leave (bad) arpl mov sarl mov add xor xor xchg or sub lcall sti xchg mov mov dec pop hlt or lock fs pop add shll les inc inc jo daa (bad) fldl mov lods fstpl dec push stos movsb loope add xor jl cmc lret aam inc adc push pop push in rep and data16 mov movsl pop mov in or mov mov jno ficoml aaa (bad) mov in lea add into ljmp or push dec loope sub jp lds push xchg ficoml in cmp (bad) sbb orl fildl xorl incb cmpsb scas mov cmpb negl aaa clc js add outsl adc sbb dec mov mov mov shrb inc mov scas loope ret lret xor repz orl jg pop sar jl rcrb lret xchg sbb test mov aas xchg sub and and ds (bad) into mov (bad) or and fstps sahf mov jo push (bad) xor sbb fcomps sar inc lock ss push and add out test jne mov xchg jbe mov sub cmpsl insl and pop sti outsb in inc fdivrs repz enter les fmull into std lods pop pop dec sbb add pop ljmp adc add inc push mov outsl (bad) icebp nop mov fs sti ljmp movb pop mov add rcll cwtl imull fidivl mov inc fisubrl popa xor fstl in sub in cli push ljmp jo leave jb (bad) add jmp mov stos (bad) jne stc movsl sub (bad) ds jl and sbb daa and push insb fucomip dec sbb aaa decl clc aam xchg insb cmpsl mov adc loope jb inc mov pop fwait repz pusha mov into fild push (bad) (bad) fmulp adc push pop and movsb mov dec ret or lods push ret bound or lds xchg pop and mov mov xchg mov (bad) outsl jo mov ror enter (bad) stc repz loop push mov or sbb (bad) icebp lcall jg ret inc pop in js pop and add pop xor lea into push addr16 lret jecxz xchg push adc adc adc mov mov jb pop sub (bad) lds push lret out pop or outsl add cmpsl repz imul jb mov sub repnz sub popa mov push mov pop mov xchg aam scas (bad) jle inc insl aam jmp and daa (bad) mov mov adc xor ret lods push cwtl mov xchg inc in cmc ret dec je xchg test cld fdivrs pop mov sub sarl mov xchg aaa (bad) adc dec or xlat push and movsl movb jge sub cmp stc cmp push daa shlb imul and xor add or add enter test mov jb push xchg arpl mov push adc out cmpsb or (bad) dec insb sbb addr16 pop in push dec out imul test cmpsl mov int cld je mov cli xchg aad sub xorl mov js aas in xchg pop scas es xor mov shrb (bad) aaa imul test jmp jl je dec testb lahf loopne cmp mov je daa cmp push das cmp ret jle subb int3 mov outsl rcr aaa and cs and aaa dec jmp sub idivl (bad) jmp pop idivb add and dec xchg loope cli in ret inc jo or or into inc fsubrl mov jp sub xchg pusha cmp inc into lret xorl shll jo inc push mov mov or mov fist das in aaa movsl adc mov xchg cmpsb adc mov sahf movsl notb call loope (bad) xchg push jle lahf ds add rep and (bad) add bound ret and add xchg push sbb clc into sbb push loop dec in cltd lret xchg lret pop dec push adc xchg xchg ret mov xchg pop std or cmp xchg stos push xchg sarl ret nop mov ds std (bad) xlat xchg sub push fldcw jp movsb gs sub iret pop call push xorl jnp push loope movsb outsb mov mov inc mov sub mov xchg jae aaa out mov arpl adc pop mov shlb mov idivl add mov xor les dec aad adc out hlt sub mov mov fild sbb iret fidiv sbb jae scas push test lea insb jl (bad) call cmpsl ss jne add out nop dec out sbb xorb xchg leave sbb jne sahf push dec into movsl jb pop jns xchg es xor cmpsb xchg (bad) mov sbb das jl jmp push inc outsl mov incb sarl outsb loopew (bad) cmc clc repz dec ljmp xchg cmc inc sub bound stos jmp cmpsl push push insb push mov fimul subb push push inc mov mull int add sti xlat push incb jne mov mov es int3 push cmp mov mov push call lret (bad) lea mov lcall lods sub int cld ds arpl push mov and lret loope push cli cli jbe stos sub rcrl fstl and fidivr es rolb int3 bt lret out out iret sbb out ret mov repz add mov lcall ret mov mov cmp dec xchg ret mov sahf lret push arpl add sub out mov in push xor xchg cmpsl mov xchg jae xor into clc imul push mov or dec fcmovu xchg mov or push fnsave mov es cmp adc jg repz stc pop xor cltd (bad) jne mov pop imul cmc jbe daa and repz gs scas scas int pop lret mov xchg insb or dec adc repz jbe sbb jle lea cmp jb cltd inc (bad) mov inc cmp push imul stc dec push (bad) push add sub mov mov push int3 hlt mov jo mov cs mov mov es int xchg mov sbb inc shll cli sarl nop and cmp enter xchg in mov iret dec enter mov inc pop enter mov out popf or xor pop push aas dec outsb movsl mov pop mov (bad) loope cmc roll mov mov push mov push clc fisubr in ucomiss cwtl xor jl xchg push daa jae out rcrb sbb idiv (bad) stc stos mov fcmove out mov lods add xorb addr16 mov repz sub cmp pop clc insb xchg out push in test inc scas pop dec cmpsb es les movsl jbe lea fisubrl leave es cmp or movnti jns pop daa int3 push jmp std cwtl sti inc mov xchg int3 dec loope outsl pushf xor lret sub popa xchg insb jp add lret faddp in xchg or ret out popa dec aas pop scas (bad) push mov je in jmp xor cmc adc xor cmp hlt loop xor mov shlb cmc cmp xor sbb aam sbb mov test sub cmp (bad) xor pop mov xchg adcb js inc cltd dec jp daa les outsb inc or sbb or lret pushf mov sub testb pushf dec out mov jbe mov xor push cmp pop push pop pop aas pop xchg dec pop fwait sub js dec cwtl pop jmp inc (bad) xor ficompl call mov xchg aad and js ret adc (bad) or inc inc pop das pop jne or inc popl shlb jecxz loope mov xor (bad) (bad) push dec ss lret add mov divb cmpsb sbb sbb mov sub adc leave loop icebp jl sub xchg lods mov pop (bad) fistpll jecxz jnp push xchg xchg pop fxch jns imull dec or xorb cmp sqrtps in ret lahf mov push pusha cs add mov jae fsin jae jp pop fwait lret jl inc gs (bad) xor cmc (bad) iret mov xchg aad mov xchg imull dec cmp and int3 pusha je cmpsb cmp xchg adc loopne int3 aaa scas (bad) dec adc movsb lods mov movsb lock jmp xchg and lahf out mov mov inc adc xchg fucomi mov jmp jecxz jge xchg xchg ffreep xchg mov mov pop fsubrl sub inc jb mov mov in sbb jmp push mul (bad) ljmp sbb adc jg stc out jg stc out jg stc out jg stc out sbb loopne mov sbb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg insl fcmovnb stos xchg lea aad movsb xchg mov insl mov aad outsb fnstenv pop fbstp mov push add scas add shrb mov pop fstps out enter mov jle fwait xor ss jge sbb fsubrl lea and scas xchg or push mov sub mov adc out pop mov inc push icebp mov cmp (bad) dec pushf pusha stos lahf xlat mov mov imul xchg inc xchg add cmp das clc mov xchg movsb jp xor pop in rolb pop movsl int3 jle lds ljmp push cld sbb sahf dec add push and jl jae stc mov push iret pop pop or incl mov in loope mul pop test cwtl fwait repnz xchg aam loop repnz sub stc adc scas cmpl in jg (bad) mov and imul std flds sahf xchg ret mov dec scas test push fs mov cmpsb lods cmp decb add ljmp (bad) sub inc loope ret and insl mov ljmp aam dec in push nop test rcl scas call push mov dec in lods pop je cmp addr16 mov dec pop pusha jl push dec mov sub push and movsb cmp cmp or mov cmpsl in add lahf xchg xor push (bad) adc or xor fs lret cmp xchg lock pop jle jbe jge fnstenv cs in lret mov inc fwait jo nop jo push jb dec jns ds in dec fisubr mov int3 sub dec dec jmp mulb (bad) cmc scas mov rclb mov in push lret clc loop lahf jle cld jl lahf out data16 loopne hlt out int test popf cmp imul ljmp repz cmpsl je xchg fdivr data16 in sti loope cmpsb and pusha inc out cltd stos push add inc movsl jecxz (bad) into mov cwtl pop inc rorl fisub xlat lret decl xchg cmp aam and push dec cltd dec cmc push lea and loopne movsb cmpsb jbe add dec push mov iret sub das addr16 push repnz push push jmp imul enter rcr test pusha dec js sbb jmp xor insl mov add jb adc cmpsl imul decb lock cmpsl cmp test add jnp pop xchg (bad) push sbb stos movsl add jbe outsl les mov pop lods pop and bound imul add cs push mov mov jae out repz in mov mov outsb imul (bad) inc cwtl adc cmpsl mov inc cmp jns and mov mov out outsl out and out repnz lods lcall fistp sub dec imulb outsb cmp inc add or in xor push pop das pusha rcll lock cwtl sub popa lret and sub dec dec popf and (bad) call inc movsb mov lea and in pop loopne call aam adc xchg pop loopne out jle jbe sub aas push call cmc mov shlb fldenv mov lock xchg call test mov sbb (bad) xor lea adc jp jb xchg xorl mov movb dec mov into dec push xchg dec add ret push push lods dec xchg or cmp and cmpsl sahf xchg or jbe cs and push (bad) rcrl test xor or iret xchg negb push in push or mov mov rcrl inc xchg fidivl cmp inc cli sbb ss push or lea push mov mov pop std (bad) push sbb push iret jecxz fnsave test lcall js adc ds cwtl sub cmpsb inc xchg or cwtl push pop mov jle inc adc push sub mov pop push push jle sub add sub notb xchg cmp iret sarb daa mov enter in mov xchg and lods or sub dec mov push lods mov or out sub xor repz pop test inc mov pop cmc mov fisub in push inc stos mov mov push or mov je aad mov repnz leave mov pop jbe enter test sub daa xor out sbb pop (bad) fimul jno (bad) xor jo aad pop bound lock lds ja movsb add and fistl call ror rcll arpl pop add xchg cwtl sub mov int mov pop mov (bad) jae lcall je aad je out out push jle jp push lock loopne cmp add test (bad) jbe std ljmp push lahf xchg js dec push rcrb (bad) xchg push mov lods enter pop pop xchg push cmpsl lea xor or jg imul add sub test test lods push cmpsb je mov and out out add push fisubrl lret scas imul mov lds or repnz cmp fwait pop pop mov addr16 (bad) ja ss (bad) xor fwait call in je pop jp scas mov and in jmp fstp cmp adc int sbb fistpl push adc aam xchg aam addl aam sub stc lret in xlat je (bad) fidivr jnp out lods xor jnp mov int inc inc inc scas xor xchg jo (bad) mov add (bad) std adc ja dec push sti ja call mov clc and xlat mov out mov mov daa (bad) ljmp out (bad) int3 xchg cli pushf outsb cmp jl push add loop sub push mov push scas ret mov pop push iret inc (bad) int or outsl sbb sbb out push pop mov mov roll cmp mov dec or sti mov xchg xchg add sub imul rcl push aam mov ret xchg xchg jle (bad) loopne inc mov and xchg pop rorb jbe inc cmp adc adc xchg cmpsl (bad) xor punpcklwd add hlt test aam dec test int3 outsl test pusha loopne pushf loopne outsl enter xchg in movl dec das push add dec mov ret push je mov cld std mov and aaa (bad) je hlt mov aaa repz cltd repnz out add mov rcll mov adc imul vbroadcastf64x4 push mov sub fisubr fdivl and sbb jmp es sbb xor sbb mov inc xor inc dec clc lahf xchg js mov movsl lahf mov in daa and mov out pushf jmp and ficoml push mov sbb out mov sub jno pop jb mov push pop pushf push mov dec out push out loop dec aaa movsl frstpm(287 dec lock cmp xchg sahf cmp lock push aas in mov dec pop jbe lcall fs add push mov pop lea ret addl mov out idivb jne insl in mov ss mov sbb push insb push mov push sbb pop add cld or and repnz and das mov std dec or jne (bad) adc test mov idivb sub hlt sub or jns sub mov sti cmc jl fs negl xchg inc dec dec call or sbb push jle lock sbb sub push gs push cmp dec xchg movsl inc (bad) imul aaa int sub ljmp mov ja pop mov cmc mov (bad) aaa clc fisubrl jbe aad fnstenv rcll mov into pop adc sbb notb jns sbb test mov and arpl push jno fs fcomps loop rol pop pushf mov or lret mov jnp loope xchg std (bad) das pusha std in push sbb fdivr add aad aad pop lea mov (bad) lea (bad) pop lds scas dec (bad) hlt mov clc inc mov sub and push lea add push or fmul es sbb fs adc jo cmp shrb cli in adc stos lea stos dec adc rorl ret mov xor xor cmc pop lds pop fyl2x mov les lds xor pop lret and das pushf inc mov mov inc xor into (bad) movsl pop inc xor add imull push outsb outsb gs pop cmp dec das orl push sbb or xor cltd jo and lods insl test rcrl push push ljmp out mov jge stos in pop test cmpl lock data16 xor repnz jns in subl mov or xchg mov iret test notl bound jae outsb (bad) out cltd inc xor dec inc test int xor hlt imul push push mov in mov inc cmp lock clc ja test fsubrp sub adc lret xor or jl pop sbbl push outsb stos cmp mov push mov nop jecxz add or std icebp out xor jecxz scas ja mov xor in dec scas test fistpl push add or add (bad) and mov mov pop mov xchg fstpl cmpsl outsl push das fstps xchg ficom insb adc test inc push cmc test add and out mov jae das rclb lret xor daa popa test xchg push push rcr clc movsb fbld fwait inc icebp dec and movsb out rcrl xchg ret cmp test scas push pop mov mov mov scas mov popf cwtl test mov sti (bad) xor shlb (bad) sti mov push xor add inc jb push pcmpgtb xor int add push aas dec clc sbb sub cmp inc repz adc sub int pop mov scas ja loop sbb cs adc pop and in fisubrl outsb pushf inc addb xchg lret adc movsl (bad) hlt das je int3 xchg aaa jle (bad) cli pop jl idivb in (bad) cmc (bad) adc xchg sub mov jno dec jp dec adc cmpsl push iret cs xchg cmp cld xchg xor or cld pop or xor adc jle scas push addl jmp iret push mov push out adc xchg lret pop xchg fdivs push mov pop pop imul and mov add push clc dec std xor jmp xchg rclb mov ljmp clc push add xor out xchg ss scas lret rorb imul mov insl sti cmp and adc fbld inc shrl movsb ljmp enter and dec mulb mov scas mov xchg mov inc cltd stc cli cmp jo ja push cmp (bad) stc std add cs cmc pop fidivrl xchg or fsubrp sbb (bad) decl into adc (bad) popf stos push leave jae push jg and pop out faddl pushl mov and psllq sbb mov dec mov ja addr16 inc lds in pushf sub jp jbe mov xchg xor jne sub dec lret repnz mov aaa test insl sarb das adc hlt jp stos mov xchg mov aam adc push jb fbstp xor arpl pop idivb mov sbb js (bad) clc mov pop mov dec scas or pushf sarl xlat jno,pt mov ret negl dec xchg pop add push out call out clc mov je fsubrl and push push les add pop test mov ret mov sbb dec insl es out stos push jle jno mov mov cld inc mov in adc xor xchg and imul jo jae xlat imul cld push jmp addb sub cmp mov stos pop outsl pushf and inc js cmp arpl gs or mov jmp fimull jmp add out in out repz dec addb dec out or mov int3 call arpl xchg push test mov mov push mov sub inc xor sbb fnstenv pop lret jnp das mov add mov imul inc fwait pop adc and in dec and jle and pop xchg jp cmpl test jl (bad) push and sub xor or xchg and sbb mov popf dec faddl mov adc aas in adc or addr16 iret or mov enter mov cmp dec push cmp andl repnz inc xchg mov add sbb (bad) sub lret out fnsave mov inc movsb add test call fimul out push stos popa jg pminub jne push cs push das ss dec mov pusha inc xor mov jno es mov movsl lods jmp ret mov loope mov xor vpunpckhbw lock inc lea mov clc mov sbbl and fcoml fcompl shrl aad cmp mov jle adc fcompl pop mov cmp shrl adc in adc lods mov in das push dec xor stos or sbb mov mov test stc das inc mov ds adc in xor inc movsl add out sub lea mov or arpl fs push and rcrl subb sbb and xor mov ja and jmp push aam push adc push arpl sub mov inc mov or mov imul leave dec loope pop pop fimull sbb cld (bad) hlt lods jl ds cli mov les repz pop dec pop add in ret and (bad) dec ret sbb punpckhbw sbb negb push fidivr and arpl cmp ja rolb mov enter (bad) aas mov scas fmul xchg ja mov cmc fsubl cmp xchg cld sahf notb roll les xor adc mov cmp cltd adc jne stos pop sbb arpl mov and jecxz sahf test imul das arpl pop scas cld sub adc es and fdivrs adc inc mov decb mov sub mov dec cmpsb aaa (bad) xlat cli (bad) or (bad) pop je push mov ror popa call inc adc insl (bad) stos or mov push inc push mov push pusha mov repnz mov inc inc mov dec in xchg jmp add hlt stos inc or (bad) mov lret imul clc mov push jb inc xchg popf fstps push ret int sub cs or js mov adc fnstenv arpl mov scas xlat in mov cltd inc dec imul inc dec push fucomip in and fisttp push mov rcll jecxz jb inc push push lods iret adc xor hlt add out lcall ja and cmp sub or dec imul sahf or popf dec fistp sbb and push inc lock pusha cmp xor dec fcomip mov xor jae pushf push mov sub cmpb adc aaa jns mov cmpsb inc and jl jl or lock in adc cs jo and mov shlb lcall add and pushf add or jg fucomi dec in pop push push pop mov movsb les rcrb (bad) mov pop aam or lcall mov or jb xlat fdivrl xchg or dec xchg idiv push xor lock lods xchg xor dec cmc ret mov data16 stos mov cmp inc push mov pop shrb lods test xchg test sub sbbl mov int mov add mov andl xchg mull mov (bad) mov pop popa mov ret push loopne mov pop popa test xchg rclb nop add mov mov lea fldl out sbb jo pushf pop cmp fs inc sub shll out inc js rolb xchg lcall push xchg mov leave cli out xchg add movsb mov dec pop lds jg stos jb mov js jb add ds cltd scas pop sbb adc movsl out mov inc or repnz sub xchg into pop pop fcmovne int3 dec loope fadd int clc pusha jne out sbb push pop xchg fdivrl stos dec xchg and test ss fcomip div mov inc adc push xor leave mov fstpt inc lods mov lods aad sbb mov pop test push gs cmp or mov das pop es cmp dec sbb jmp leave adc imul sub dec lahf les push fist das pusha icebp bound fwait sahf gs stos pop fsubrs sbb dec mov mov mov ficomp pop imul sbb in fsubrp sbb mov mov push or (bad) cltd mov rcrl xchg jnp sahf push imul pop mov pop jo out lods data16 cmp decl push ret and int popf add das xor inc data16 and movsb push or out fsubl jp mov adc or addr16 fwait (bad) cmpsl rolb jae in std gs scas mov jbe (bad) pop fisubr rcrl jmp (bad) jb shr jnp les rclb test icebp xor insb (bad) int3 cmc (bad) xor jp jnp mov pop add cmp in lock pushf in rolb lcall int xor (bad) fdivrl mov xchg sub sarl std jg mov sbb inc scas or cmpsl out adc mov addb orl inc divl pop js scas inc xchg cltd jnp pusha fnstsw push mov mov test jecxz jle push dec mov divl sbb cmp adc sbb loop stc dec call ret xchg shl cmp and hlt or sub mov popa lret and add mov xchg (bad) out rcll shl mov sub out (bad) loopne jne sbb xor test stc push xlat cltd incb and dec push mov inc orb fcompl mov xchg jp stos add es gs pushf (bad) dec push add ds aam cmc test pop push in jbe test jbe push pop and mov jmp inc loope in aas adc pop mov or sbb es in jmp hlt outsl lcall sub pop cmp add push das push cmpsb pushf mov in (bad) cmp pop add adc and jmp icebp fldl cmp cmp mov lret (bad) adc pop xchg aad out jno adc dec push inc pop scas or mov fistpl test and and shlb jecxz bound sub movsb push cmc push jo daa jae fs jne jmp xlat insl sub jno sbb loopne pop mov and add lods test mov xchg outsb inc arpl les sub out ljmp adc xchg in arpl jo (bad) add xor imul push call repz sbb sbb test scas ljmp add and out negb movsb inc sbb xor ret mov stc push hlt push adc xchg aad (bad) iret mov fnstenv cwtl in pop adc dec cmpl adcb or pop cmpsl rcll ret movsl jns enter ror lea mov add in lahf scas in xor scas cmc (bad) (bad) dec xchg nop movsb stos xchg pushf test or sub mov xchg jp pop inc mov inc xor or bound inc (bad) mov inc or jge fistl out mov hlt dec mov aad icebp mov mov adc cmp jmp fucomp loope iret mov pop int3 add movsl outsb push ja or mov mov add mov jp cld leave mov inc test in push arpl and inc sahf and adc jp (bad) xor stos neg cli jbe int jecxz add xchg fisttpl mov aam stos jno adc mov lods mov aas xchg pop mov xor iret stos inc shlb xor jns fs pslld jle aad jg jb add add push jnp mov popa stc inc outsb into iret adc movzwl adc mov sbb lahf pop mov shrb mov movl sbb xor push mov es (bad) fsubrl scas cmpsb pop test mov test lcall lret cmp inc ja xchg loopne jp jecxz out aam xchg xor movsb fnstsw outsl and or imul inc and mov fwait jnp subl daa dec and adc adc sub iret movb jbe loop (bad) cmp (bad) push dec (bad) mov scas mov mov push iret test push test adc mov out insl jmp and push pop imul push enter loope ret mov or hlt ret out gs pusha in lret (bad) jne xlat mov cli push lcall dec test sub scas push dec mov (bad) (bad) cmp ret imul int jae into xor aad fidivrl out negl dec dec outsl add push sbb pop add test mov jo add and xor fcom aad out outsl sbb into dec jge jecxz and lea xchg mov jge mov cmp ss jo cmpsl xor sbb insb (bad) sahf push cmc sbb mov stos out jp cmp sbb daa jg pop sbb iret in add nop dec imul push xor pop mov push lock cli mov add (bad) jmp pop jp mov mov dec repz loope stc cmc lret mov and xor adc lcall fbstp arpl flds dec ret inc enter stos dec pop or (bad) stc and jmp fwait jp jne aas frstor jge mov jno sarl mov and jg out loopne clc stc cmp out push push or jno push lea sbb sub inc xor bound jne out mov adc xchg iret repz (bad) lcall fpatan jp pop out sub and rcrb in jo and inc outsl subl xchg dec push mov xlat cwtl mov ljmp scas add outsb xor idivb mov xchg xor jae or paddw sbb jl imul push jg mov lods popa cmp cmp mov inc and cld adc cmp and lret and xchg sbb mov clc pop mov (bad) push pop sahf divb (bad) cmp sbb bound adc movsb xchg inc xor dec clc fild jl mov (bad) fcomip clc out call aad jne mov rcl and test out push xchg push pop mov push xor lahf test test sub xchg icebp xorl popf lcall mov fcomps sti jle in pop sbb push cs xchg inc movsb or cwtl mov xchg lcall and (bad) add pop fwait add ds adc mov cmpsb sbb inc shrl fcmovu aas (bad) jo sbb add pusha xchg bound xor pop jno xchg or adcl lods dec dec pop and or push popa ret push xor testb lahf jb (bad) mov (bad) lods mov (bad) jg lea push in fsub mov or das mov add cmp xchg sbb or sbb ss gs xlat in mov inc (bad) je add in lcall mov cmp arpl jne aas movsl cld roll mov mov dec adc jo inc jg jecxz or incl mov push jnp cmp sarl inc mov mov or jns outsb pushf les jae loopne aaa lcall pusha stos outsb fildll bound fsubrs xor rcl in stc sub outsb mov lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov movsb xchg fucomi dec mov fwait add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and popf insl (bad) jbe mov (bad) lods leave sahf insb (bad) out sti (bad) ja inc sub sub add cld push add test mov inc push mov enter or roll xor sub fmul addr16 ret adc add aam das or fnstcw xchg (bad) jb and sub test cmpsb adc sbb mov mov out mov aam jns sahf mov inc lods ret push test fwait cld and adc dec xchg fwait mov pop and sub insw stos cmpsl xor loop mov mov mov inc int mov mov popf sbb mov jl jnp fwait adc cmpsl lret cmp mov cmp pop and (bad) and rorl insl fldt pop scas sub push or jl lret (bad) dec push jmp std int or fmul dec js xchg sbb xchg xchg loopne outsb push add out and jb lds cmpsb shlb and mov xchg jle iret push push cmp out nop add jb push fwait xchg mov dec roll out dec out jl roll pop jle pop out xchg inc mov cmc insb push mov lds cli pop cmpl icebp inc pop mov or mov push cmp fisub adc mov xor sub pop push mov inc stos inc mov fstps hlt loopne andl push lahf clc xlat mov mov ja fbstp ret xor (bad) mov loop lcall sbb add aam int3 jmp cli jge sub out push sahf (bad) sti addr16 popf sbb mov cmp dec xor (bad) hlt push mov and in xchg xchg sub sub outsl dec inc push rcll out jecxz adc adcl ja cli jae hlt mov test pop mov xor ret mov and cmpsb ja ret jle test negl addr16 jns adc les outsl call ret pop or mov or daa lret pushf sahf mov mov repnz lcall loopne xchg enter mov pop (bad) lret outsb addb pop push and xor mov add mov pop and push out fcoms mov nop inc jno mov inc int dec mov adc nop (bad) icebp mov cmp iret bound jmp ret lahf insb mov test in push jno mov roll leave mov dec mov movsb xchg push fsubrs (bad) dec incb pop cmpl (bad) pushf imul inc mov stc mov fisubl (bad) xchg and push fiaddl notb leave js test jle aaa mov or lret adc inc xlat enter xor das push jno js mov xor or xchg test test in cmpsl pop dec pop or sub mov loop mov ds mov idivl sbb mov xor (bad) mov or xor test mov imul (bad) push xor pop jp sub xchg dec (bad) cmp jb and inc or out or dec pop and add dec js pop frstor sub mov push lods sahf movl mov pop jns push jb pusha cmp (bad) dec mov add rcl add insb ret inc test inc and jae or outsb stos push cld sahf aad test sti arpl popf sub pop clc and sub pop iret push pop fiaddl jge lahf mov jbe jns fwait out add loopne mov lret add imul call call inc das sbb mov lock mov ja pop xchg xor negl pop mov or cmp push mov sar icebp subl jle xor inc cmp jnp enter inc aas jb lret inc jmp ret pop (bad) into jmp adc dec pop (bad) xlat mov dec pushf popf mov daa or mov hlt jle sbb iret mov movsb lcall dec sub jb push cmp clc out arpl sub pushf cmpsl popf hlt (bad) fistp mov aaa dec and push (bad) jmp cld bound (bad) into push push sbbl arpl xchg xchg aas insl mov or sbb loop les sub (bad) jle fisttp jno xchg (bad) stc or pushf xor stos cli push push cmp push cli hlt jnp sbb jp jecxz mov jl ffree or cmpsl jecxz sub (bad) adc or bound imul rcrl aaa jno stc jge cmpsb out add dec push sub push pop inc loope fsubrl pusha sti mov dec add movsb and mov pop add in lret inc sub insb sbb sub pop jo mov loope bound std inc je pop and (bad) hlt int fisubrl mov popa push movsl mov or pop xor gs adc and pop mov andl mov push lcall je fdivrs and xchg jle and stc jns inc test cmc cmp pop cltd mov cmpsl cs das jbe daa in push aas movsl add push pop xchg sub out cmpsl pop and jle mov stos mov (bad) fyl2xp1 cwtl dec cmp mov inc pop jecxz outsl dec jle sub push or enter scas notl xor sub pop sub loop push mov and sub fstl lods mov fsubl ja aam mov and jb add sub movsl push fnstenv mov and or push clc mov cwtl test mov fidivrl ficomp or in pop roll sub (bad) lret sbb push jg sub dec int3 roll clc pop cs mov lahf movsb jns or jno mov stos push cmp fisubr imul pop mov inc repz les test (bad) jg add push sti divl adc sub dec aad loopne fwait and bound in test jecxz in repz jle sarl das (bad) push mov sbb sub cmpsl sahf xchg ficompl push (bad) ljmp mov sub aad enter in bound cs ss push icebp repnz stos bound lock inc cs in mov fs sbb ret rol gs insb fstp fmull ljmp leave sarb jo add jg out pushf jne mov nop cltd imul push lahf lret pushf pusha push pop insl xlat xchg jecxz mov repz shrb add arpl jns dec iret dec push pop pop mov push push daa in into xchg arpl int inc xchg adcl in sti sub movsl mov out add cld mov int3 lcall lock hlt jle push insb or stos insl inc test stc iret push test pop push add jns inc call mov in jae pop jg into mov cmp mov sbb sub out test pop (bad) mov pop fiaddl pop jl incb mov add (bad) sbb mov fs push popl xchg inc mov in mov xor aad mov fwait pusha int3 loope inc xor bound into adc out insl mov inc mov popf sub int jmp hlt aad out nop push dec jns pop dec stos mov mov pop (bad) push mov xchg mov js dec cli cmp cmp stos push sbb sbb mov js fnstenv inc lods aam or adc dec push adc inc fdivr pusha fist jmp xchg pop push cld int3 mov and mov mov mov stos push mov cld jecxz imull fstps int3 stos sub nop (bad) in sarl gs and clc and out dec push notl pop (bad) ret fidivl xchg popa cld data16 xchg xchg sub (bad) push mov cli add mov jl (bad) jnp mov mov loop cltd mov cmpsl movsb jae xchg daa cwtl push (bad) jo arpl test and in (bad) lahf mov inc xor mov adc das (bad) mov add pop dec outsb cmp pop inc jne or jle sbb jns add mov fwait insl fistpl mov sub mov outsb pop push mov sar or data16 (bad) ljmp mov stos leave mov push xchg and rcrb mov test sbb mov pusha negl iret loop dec inc push flds mov sub inc mov mov sbb jmp popf and push fcmovne xor jle mov mov test in (bad) xchg aad lock imulb or test cld hlt sbb stos push stos lea in push sub inc or dec push arpl push push out pop cmp adc xor mov lock gs out sub ret dec negb out insb lahf insb pop (bad) or test or mov push pop loop stc fdiv jl imul push mov mov xchg mov cmp lods std ss adc loop xor nop sbb test xchg jae sub int lret xor (bad) dec call push out fist sub lret pop inc cwtl cmpsl mov daa stc lds (bad) rclb add negb cmp fstpl push test mov notb test in subl (bad) enter xchg jae int3 inc scas mov push add les in mov clc loope lock or xor addps insb scas pusha stos sub adc push (bad) and cmpsl cld leave jl and cmp mov jns pop out ja das add imul pushf dec push hlt sbbl xor fidivrl loope mov xor xor js jnp cld dec jl adc sub pushaw cmpsb pop rclb std mov xchg mov pop mov or stos inc in neg (bad) ss dec mov lcall adc xchg dec dec push dec inc loopne cmp adc and xchg ljmp enter outsl push cmp xchg sbb (bad) fs push nop fucomi das lods int3 popa popa jp gs xor mov ljmp es jecxz cli lea cltd cmp cmp adc lret sub in (bad) sti insl jnp iret cli or and cmp (bad) int cltd or ret push sub xchg ret lahf es and jmp insb data16 and std sub adc mov sbb or push lahf aam insl in xchg rclb mov bound xor dec pop popf sub sub and jnp imul xor mov and (bad) nop cwtl (bad) sub adc arpl and cmp push pushf sub cmpsb xchg mov pop push nop adc xlat cmp rorl dec cmp test pusha pusha inc inc ja fs in mov call jge xchg add xor mov xor stc sarl jle,pn cmpsb mov mov pop scas lock dec sti lods mov arpl bound mov rcll loopne scas jp inc (bad) fimul cmp (bad) movsl pop adc frstor inc cmp mov loop (bad) inc add sub fstps or lahf adc mov data16 jns xor fsubrl mov dec ret ja mov dec sub lcall stos mov xor outsb and dec clc xor cmpsb mov movsl je adc fld dec test cmp sub and mov out jns adc cmp sbb add popf push jb repnz scas iret adc jno icebp cltd repnz repnz fadds mov daa push pop in das add and pop jb idiv inc dec push xchg mov aam ret mov test mov fimul add jle lcall gs popa jp adc jne ja movl movsl sub dec pop ds les mov lock cmp out mov pushf icebp cmp adc push cmp ret addl or fnstenv push loopne fcmovne cmp ss pop pop std daa add dec jmp xchg adc push ss mov test dec pop popf loop das xchg js scas pop fdivrl lods inc mov push mov stos pop inc das into or mov and lret sub aam js and mov jo std (bad) mov out xor and pop push cli lock jno mov hlt outsl jg sub inc dec imul loop pop out sbb or imulb xor rcr js mov rcll inc popa add or ljmp mov mov push imul inc cmp scas sub fwait add aad ficom fisttpl nop or jmp arpl std das fadd test sub mov or dec push aaa mov dec test jns pusha jl incl mov mov arpl lods ds push enter dec jecxz adc dec mov mov popa adc (bad) dec xchg sti sub call pusha mov cld pop int3 inc dec std jecxz add and in push icebp (bad) into jge adc inc adc or fidiv je jae jp je in outsl push push add and sbb dec or aam aaa fs (bad) xchg nop sub pop sahf inc cmp rorl mov xchg (bad) fcomps fadds lahf and xchg sti outsb dec sbb mov add pop das mov cmpb add mov adc push jnp repz pop out pushf mov cmp lret xchg mov shrl test push mov xor out mov data16 (bad) icebp push mov mov push mov pop mov or and aas xchg or mov cmpsl mov mov lods inc mov aad icebp sub and in mov inc mov out leave pop aaa stos jl or pop cwtl or das stos aas cmc dec test out jo ficomp scas aad xchg roll add hlt pop ret cmp (bad) popf sahf andl dec ret std lahf sub jbe sbb rcl mov les (bad) mov dec push sub cmc jns test andl aad push push iret add stc jmp sub pop fisttpl insl inc inc mov insl cwtl jmp (bad) push es in arpl (bad) nop adc in mov subl jecxz mov jnp mov cli xchg inc ret xor imul call sarl cmp cmp jb pop xchg add mov and data16 rorb mov push ljmp jg pop ret lds mov inc gs dec lahf push push sub push hlt sub shrl paddusb ret seta sbb sti in cmpl pusha cmpl fist sub ds sbb fiadd bound jecxz and ja adc in cmp jecxz push xor xchg jbe mov cltd push fnsave ret hlt into lds mov stos fadds dec movsl or rcl imul cmpsb dec repnz xor or xchg push mov lcall pop inc lock movb ror mov call lret mov lahf pop es decb push and and jmp aas pop jno lds xchg cli data16 mov mov mov idivb jmp test into jno xor inc or out lock mov or (bad) enter into cmp xor lret xchg movsb mov into jle stos loope pop std adc sahf stc leave add outsb (bad) and inc lret pop lea cwtl (bad) in push inc arpl fisubl dec insb frstor cvtps2pi out mov aaa push ss nop or mov push pop push sahf out (bad) repz xor sbb xor sub adc addr16 push dec push add xor out cmp cmp out scas in in test push adc push and iret mov repz cmpsb out stos ds iret pop cmp mov ror pop (bad) ss push cmc mov je adc or add xchg (bad) popf lahf incb push or xor cmc insb or rcrl mov pusha dec and sbb sti int add mov div xchg inc adc (bad) into rclb pop dec or xchg sahf scas out (bad) xor mov mov dec sarl push int fstl mov and jbe mov mov ret pop sarl orl les sbb and sbb jecxz dec cmp mov aam jno adc pop iret mov pushf popa xor jo fmuls inc xchg xchg fadds xchg jno inc xchg push xor gs or pop (bad) jbe sbb mov lahf sbb repz cld and stos mov jno or mov mov nop cmp and jbe fpatan mov sub pop into ret stc or cmp jmp loope jle xlat cld (bad) mov mov ja bswap mov mov add sub pop ret inc mov pop cvtdq2ps out ss push xchg shll cmp outsl push xor popf shr cmc movsl std mov push mov sub cmpsl mov (bad) mov enter cmc lds xlat jg pop or xor cs push cltd popa add mov cmp pop xchg cld out test dec xchg cmpsb leave (bad) xor aam call jp insb mov js jns js daa jno data16 fwait sahf testb pop loop popa sub xor mov adc add push (bad) mov mov repnz popfw jbe or ret xor (bad) (bad) insl push stos imul inc adc scas xchg sbb pushf jnp jmp pop (bad) ja in ret mov stos mov pop or outsb mov in xchg icebp dec in adc mov mov adc dec loopne xchg cltd ja sbb mov pop mov icebp dec jbe loop cs fisubr sub sbb and sbb sarl (bad) leave gs xchg (bad) mov pushf and push ja add pop arpl dec pop loop xchg test ret jmp and (bad) adc pop dec mov (bad) mov mov and push mov cmpsl fs adc adc stos (bad) mov (bad) hlt leave mov daa imul bound aad loopne fsubs jl inc dec push jnp decl add shr xchg data16 dec mov cld adc enter xchg clc mov fnstsw sub call mov cltd pushf es (bad) sahf dec ss cmpsl enter iret movsb mov aas jo jle test dec call fadds int or pusha inc mov xchg divl sti or push lock fimull and imul jg cmpsl lock mov mov fldl xchg (bad) xor jnp sti repz das push adcb adcl jl dec aas push xor push xor xor inc xlat adc and push jo sub sub pop inc jnp lods and lds xor shll es sbb xchg mov sub pop insb je push fnstsw out sbb orl (bad) add dec (bad) mov xchg idivl rolb inc (bad) xor cmpsl test xchg adc ucomiss mov mov xchg sub sub insb lret in in pop xchg cmp int scas jne cmc lea add inc add mov mov push mov jmp mov and lods fcompl jecxz inc cmpsb mov outsl and sbb ret clc dec jno dec jns inc ljmp out push pusha add jns jno and or shr pop inc dec pop adc pop add mov mov jns inc movsb insl push adc fdiv push nop dec aad cli fisub cmp es fcompl push xor (bad) pop mov sub repz std iret (bad) xor mov (bad) jle add mov dec push addl (bad) in (bad) aad data16 (bad) jg sbb xchg push cmpsl (bad) shl inc (bad) inc xchg xor inc push sbb jb push xor nop jg ljmp imul xchg test imul fnstenv stc dec push mov inc outsb js movsb out inc mov je sbb push xlat inc fs or adc push loopne faddp out lahf imul sahf mov pop aad mov pop bnd lods or gs nop imul sahf pop xor add xchg ljmp in fistp test test and jmp (bad) mov mov out lock push icebp mov mov or xor pop jnp mov mov ja es lret test stos pusha sbb imul sub xchg dec adc jno faddl or sub inc movsl pop dec repz icebp les inc and fadds cmc and cmp (bad) aaa mov mov outsb and (bad) rcr test pop sbb ret repz fwait xchg loop or idivb fdivs push or mov mov jns cmp inc mov fcmovnb leave out lods scas and fmulp ret sbb adc cld int3 inc jbe fsubrs inc pop jb push sbb or stc rorb sbb imul mov lods jecxz jg ficomp (bad) roll and mov jbe fcompl cvtpi2ps jae jmp ljmp inc jp sbb sub push mov hlt fsubrl jmp outsl repz jmp insl sbb xor ljmp mov add mov scas call mov cmp push pop mov inc loope lcall out in (bad) fadd test cmc sbb adc imul mov add mov pop push jecxz ja jo jle push xor adc ljmp sub aam mov dec mov call xor dec xchg neg cmp inc scas jbe clc aaa hlt mov jns xor fs mov cmp jle ljmp cmp std cmp jne sub push ret jecxz wbinvd pop ror inc out mov dec mov push add jg fisubl mov loope pop mov push ljmp repnz dec orl aas jo xchg push mov sbb iret (bad) push (bad) xor loopne icebp push push xchg add test les and mov shl roll jb ss xor cwtl (bad) jb out pop xor xchg sub sbb mov lock idivb mov mov pushf mov add pushf sbb and (bad) mov rcrb les ljmp xor adc or fwait adc aad push xchg sbb scas xchg movsb mov adc ljmp shlb xlat jo pushf jne xchg and push and aam pop pusha mov mov xor and mov jp sarb in scas in and cs loopne aas jb les data16 (bad) shrl int jno mov push push lea xchg mov dec xchg ds and xchg mov mov pop cli clc sbb repnz xchg sbb add xor pop gs pop adc push mov ret insb lea es adc adc sbb scas orb add mov rcrl (bad) sub sub (bad) fidivl cmp mov inc fs cwtl adc jno sbb and dec lods repz pushf mov popa popl push (bad) or cmp xchg jbe xchg mov mov mov stos call bound add pop lods sbb mov mov test mov mov out or xor lods aaa xchg dec inc out xlat adc jne out in pop jo and loop mov xchg cmp add test fcompl jge bound adc mov jg sub or or push insb or xchg mov outsl imul test addr16 outsl push xor and ret sub pop scas push sub inc push fs adc push mov inc lret pushl or push adc (bad) (bad) cmc scas and movsl jb mov pop or in aaa fldenv mov popf and xchg xor repz and je cmpsl fmul mov add popf mov sub jmp dec xchg iret test dec (bad) mov cmp mov stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne mov in adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg cmp mov ss lret mov xchg pop stos xchg insl imul jb jae mov fucomi repz (bad) jne add xlat add loopne add in dec data16 scas out rorb into mov and adc and jno adc lods int3 mov outsb cmp cmp jge sahf jae add add mov add and pop push loope sub sub je adc lret rol xbegin lahf cmp sbb js orl sarb xchg sbb push adc bound std aam pop into sub mov xchg push mov mov out and rolb mov es outsb push sub xor lds sub add mov jmp fstpl addl push sub dec or pop movsb cmpsl inc xlat enter inc pop popl xor mov faddl bound dec and or jmp popf adc pop ret pop (bad) sub push push in jmp sub inc pop call adc in (bad) push mov add xor notl add test ret xchg lea outsb insl xchg (bad) push inc repnz mov mov hlt sub xchg push js sbb mov sbb outsl (bad) cmp fstpt push pushf inc pop jmp cli mov lods sub or (bad) repz jne orl loope adc dec jecxz cmpsl (bad) aad js xchg adc int (bad) fdiv fcmove js push jl testb xchg cmp or dec repnz mov inc mov aam inc add add inc cld pushf in aaa xchg scas xor inc stc loop inc inc inc mov rolb sbb adc xchg jns xor mov sarb imul and xchg leave mov ret sbb jmp idiv out xor sub sbb mov cld xabort and mulb adc xchg ret and insl and jmp dec jmp cld mov pop popf bound je dec push inc cwtl mov sarb test mov mov pop sahf xor leave rorb xchg cmp xchg cmp notb orl aaa cld cmp cs push mov sbb adc pusha (bad) jmp lods (bad) decb jns add popa sub adc in out addb add dec pop inc cltd inc js jnp and cmp pop int mov sbb mov sbbl (bad) roll sub dec mov shrl rclb call mov sbb insb jecxz lret adc add jecxz mov stc jns or and xchg cltd insb pop cwtl inc outsb das rolb pop les mov mov roll pop jo pop push aaa mov mov (bad) mov inc and adc cmp data16 sbb ficoml insb sbb int fs stos xchg popa pushf call adc into pop aas add (bad) mov jge push in or scas sub jns add les ror pop xchg int mov jno push push pop mov inc hlt aad and add mov xor mov jle and mov rcl jno es daa icebp fsubrl mov mov mov mov js aam mov mov xchg or int cmc inc mov pop out jbe mov add test push cmp int3 (bad) int pop mov popa ljmp and imul fcompl cli in js ret xchg sarb gs adc fildll daa sbb cmp add dec and mov push out inc jecxz sbb adc pop add sub xor lret inc push ret fldt int sub iret fsubl and out lock sti mov push mov add jecxz cmpsl data16 mov or icebp lret scas cmp pop cmp stos and popa (bad) cld jo xchg dec jmp and icebp sbb push je mov or fildl aas pop gs adc dec fcoms ss repnz leave sbb call and leave sub jl movsb bound notl dec es sbb ss xchg pop mov sbb and pop cmpsb xchg ja jo or cli or lar aas pusha cmp push gs mov pushf sub or cwtl or pop mov popa xchg push mov fcompl push insb (bad) xchg jl pop (bad) ja mov jecxz lret popa add mov mov xchg xor cli fsts daa and addr16 rolb pop jmp out xchg loope lods mov xchg bound cmp (bad) fnstsw jo mov mov cs add or cmpsb mov clc and push mov adc add je xchg cmp hlt mov xchg fwait repz stos push jmp push sub pop dec and or ret mov pop flds mov stc sub pop (bad) int3 mov inc inc out jecxz jbe mov mov mov and inc pop hlt xor leave push ljmp bound pop xchg ffree sbb test push insl out inc bound cmp fisttpl (bad) pop dec das inc push aaa mov jge lret push pop in lahf sbb cmp jno fmul scas push cwtl cmc sbb arpl pop movsb aad mov pop pop mov ljmp xor push sbb mov adc mov stc rorb lods sbb sti and push lds add mov xor lods stc fdivs std outsb dec mov lods adc aad fs adc imul push popf and shlb and add add mov dec out call jecxz inc fildl push ret aad xor cld inc push mov jne je aad js pop fdivrl ds (bad) xor (bad) mov xchg jle jb xor dec jle arpl cmp jle or lcall enter add icebp ja int3 lcall dec f2xm1 test cmp test (bad) mov scas call or in mov jge jecxz and mov inc jb scas aad (bad) mov lock scas std xor cmc (bad) mov pop mov repz dec mov lret andb xchg cmpsl sbb out aam or pusha sbb push inc push adc (bad) and mov xlat (bad) mov jns cmp inc mov adc in mov lret push and out lock push xchg and or and dec test push jmp pop cmp rcrb jb (bad) movsb fbld mov call add jp cmpsb test xchg and inc xchg cltd daa out pop xchg aam sbb test test add daa sbb idiv fidivrl xor movsb test je mov data16 sub sub pop sbb jne lods jb push loopne jg push xchg push jb (bad) stos mov pop push lock adc aam cwtl call les mov xor xorl pop mov insl dec xchg add pop in cltd int sub mov add push lods test adc incl inc das jb dec add sahf push popf clc pop mov mov inc addr16 jp cld push xchg adc mov fld stos js aad lods push leave dec inc pop fnsave cmp pop sub jmp iret scas aas add jns fstp adc enter cs out or (bad) pusha sub xlat dec or lret jecxz ret fsubrl incb divb scas jge or or jecxz lret sub mov pop rorb add fisubrl cmp in outsl pop dec cwtl sub scas (bad) or pop mov mov xchg in inc dec cmpsb push out pusha dec insl cmp scas sub or out int adc sbb bnd lods mov imul out in (bad) sub push data16 or adcl test push mov pop push loopne fimul adc mov xor divb sbb test mov fwait cmpsb jle and (bad) and jp lods insl nop scas xchg cmp sub inc and lea movsl push sti pop mov add pop js pop mov dec fiaddl jns xor sahf test xchg mov test jne fs repz add aas xchg mov push push xor add outsl ss lcall test jns xor cwtl pop out mov sub mov fwait adc stos (bad) int mov or (bad) mov (bad) jle leave test nop sar (bad) out aaa arpl lret xor inc xchg nop inc sbb popa dec xorb add loope int3 xchg icebp push push push jp lcall movl fwait inc fnstcw lods out adc mov ss in xor leave popf outsb push push mov jmp and inc (bad) repz shrb (bad) rcr and sti inc negb call dec decb lock in sub lock dec stc mov (bad) stc aad mov aam inc push add fidivr in pop fisubr or xchg mov cmpsl fsubrs out rorb data16 popf icebp jp and (bad) push sti cmp mov stos push cld push sarb arpl jmp xchg push push add sub aad mov mov adc jb pusha jns (bad) pop gs pop adc xor les inc mov daa jp sub mov dec pusha mov push jo dec mov ds xchg scas and ss addr16 rcl ja xorl clc xor sbb fsincos into jnp bswap mov push mov cmc cmpsb stc xchg dec sub divl pushl stos adc mov (bad) arpl cmpsb ficom into hlt sbb test mov cmp xchg fdivl mov insb ret pop inc or cmpsl pop pop sub jne inc xor jno aaa or mov insb ror ljmp enter cwtl fnop push push adc icebp cmp leave dec adc add movsl arpl cs stos or lods lods test and int mov jl mov stos pop xchg mov or repz into cmp hlt test mov xchg jecxz fcmovu enter addr16 jg adc fstl mov mov add jl int3 pop addb hlt dec inc xchg out sbb xchg int sub dec (bad) in inc jge sbb mulb mov data16 push jmp jmp movsl dec jle xchg addr16 mov rcl daa sbb jge add out arpl and sar sub imul movsb jbe inc lea mov pushf add xchg dec repnz jne insb inc adc or add mov ja (bad) out notl pop arpl inc or and pop and addl sbb xor cltd push arpl adc fbstp mov aam loope sub test aad pop imul xchg xor push inc cmc cs idivb loop xor dec in xchg jecxz data16 shlb ljmp (bad) sbb in mov out dec push or fcom cltd outsb in ljmp imull outsl xor and out or sub xchg sub jbe fadds loop insl adc sbb das add mov push xchg push dec add popa movsb jae outsb or fstl xchg addr16 adc mov out lods jbe dec (bad) sbb push lcall subl (bad) lcall inc xor jbe cmp mov jg hlt mov push (bad) insl aas adc pop xor cmp fwait sub xchg jo inc movsl pop mov push ja push inc lcall jno jl push popl (bad) xor shll scas mov sub jmp push hlt jecxz addr16 pop lret sahf mov int3 mov jo jp mov addr16 pop insl idivl sti mov inc loope leave daa push cmp aaa gs push mov pop adc test outsb jge or stos fld jecxz mov aas cmp xchg xor pop push mov xor mov test xor out in sbb rol lds dec or dec cmp inc mov dec jne push jb test jns push inc pop out fnop shl xchg (bad) cli loopne add ljmp fnop mov pop imul das rcll mov cmp mov incl outsb add in pusha sahf cwtl cmp cmp mov mov fisub leave fcomp ss addr16 push test fnstenv lret fidivl push pop adc sub in sub mov dec inc push jg shrb iret dec jno pop xchg mov out sbb fwait add daa mov clc shlb sbb push imul pop add outsb jge stc sbb scas cli pop mov lea and fiadd pusha xor or fldcw fwait mov jno fsubrl mov clc sub xlat or sub lock push stos arpl jl mov bnd inc imull mov lret push (bad) scas mov mov pusha mov or pop mov xlat arpl ds sbb enter mov xor out (bad) cmp pop mov (bad) jne addr16 lods sub fcmove in inc enter and adc mov mov inc xor (bad) jo outsb pop xchg cs adcb nop sub into and cmp mov adc scas add jno push jg push inc ja lods out push adc cmp int3 or mov dec xor mov rorb scas xchg out ffreep sub ja adcl sbb jp mov adc cmp shl dec das ds rcr (bad) xor jecxz movsl jbe mov lods mov mov adc push fidivl adc mov pop das push in and negb (bad) mov das jne dec or cmc xchg test mov push jnp push nop mov pxor xchg xor dec iret fnstenv sbb ss pop inc loope jmp aam jmp ss cmpsl jg sub rolb cmp loope mov inc test fidivl jg mov adc icebp (bad) cmpsb mov mov mov or insb in inc icebp out mov xlat sbb enter push sbb xchg loope jns test or lret pop add mov cld les fsubs push jns imul (bad) enter in mov jnp fucomip js test adcb mov popf mov push mov pop ds push fbstp push inc add mov repz js lea dec ss loop adc push pop fstpt das cmp ljmp outsb jg addr16 jecxz into mov push or or aam repz xchg stos ret jne xor pop in or xchg (bad) inc subb stc rcll mov dec (bad) aaa inc push loope and shll je imul sub ret mov pop push lock das insl repz push jbe inc mov push dec xchg jecxz cmp sbbl pusha cli jp push push or jns loop sarl out push jmp icebp adc jge add jno inc lahf or adc insb repz add and pop mov mov push mov pushf mov out movsb (bad) jbe push sti adc cwtl fist call push adc fsubrs sub mov outsb mov ds jb xchg push xchg or add push xchg stos xchg jb pop add ds sti loope xor sub cmp mov sbb push mov subl cmp sbbl sahf pop mov fnstsw pextrw jg dec dec xor lret ret dec sbb xchg fs mov dec inc cmpsb or pop fdivl insl dec mov jge jmp out sub lahf cld xchg ljmp cmpsl arpl (bad) sub push je cmc sarl jle ret scas or test jne fwait or cmp and push shrb fmuls mov add or fwait pop fdiv mov (bad) ss mov iret xchg daa loope lea mov loop sbb pop rorb cmc dec rcl mov jb jp test out sub mov mov aaa popa stc mov mov ret cli fidiv mov iret jecxz mov xchg adc out inc out jle dec cmp pusha pop mov aaa repnz (bad) pop and jle push out mov stos fidiv add (bad) or push je cmpsb sub xchg fmull jne mov lret xor out jle imul mov cmp adc sub push aam outsb or cld int adc mov mov mov shlb push repz (bad) pop mov jnp sbb stos jne adc ja (bad) movsl push add mov mov negl sbb jmp int3 popf pop inc adc push mov (bad) sbb mov xchg xlat mov dec lret cli test idivl dec mov bnd (bad) insb jns lea in (bad) daa jg lock mov mov cwtl pusha xchg lahf pushf push lea enter push mov ret daa pop loop pushl pop hlt jo orl and push ds arpl repnz sti or mov xchg icebp xchg and xlat mov fcoml xchg xchg roll das add in push and lret (bad) xchg add sub push loope mov dec call outsl mov mov push nop (bad) movsl jecxz bound mov sub in addr16 inc test cmp sub mov imul loop jne je jno ss popf sub sti mov leave and dec push test iret outsl in int3 in aad vpsubusw mull jne ss sbb adc sub dec and (bad) stc cwtl jbe lock sub repnz jge pop sti add sbb add xchg push xchg jb mov and mov push xchg sbb aad outsl cmp movsl out mov data16 inc cld aam fmuls mov popa insb stos sub lret lcall fisubr mov jmp ja daa into jae adc adc dec push dec fsubr sub push imul xor mov shrl mov push mov lock cmp mov loop fidiv adc dec xchg mov iret loopne inc popf inc aas loop fisub imul mov movsb jns idivb (bad) stos jle andl in sbb dec imul push jge aam inc add push (bad) xor fs xor into test dec lea xor mov mov pop es idiv cmp fisttpl xor out ss mov insb xchg mov fwait repz imul mov into hlt adc pop mov pop je icebp jge stc and mov stos add lods (bad) mov out testb mov dec or xchg xor jns sub out and call mov xor sub jo add mov mov mov add (bad) repz clc adc into enter jl icebp out (bad) enter dec mov dec lret push push cmc xchg add int3 dec inc (bad) cld enter lret dec dec jb sbb (bad) sub (bad) aas lahf mov adc (bad) jo dec (bad) jecxz and and outsb aas adc mov and into sub xchg pushf cwtl movsb dec pop fadds (bad) mov mov mov mov push cli in mov fldenv pop xor fwait iret adc pop adc cmp dec push inc ljmp sub out daa je (bad) pextrw adc push (bad) add push cmpsb leave iret in and sub int add (bad) das sub sbbl xor nop lret xchg fidiv mov in add les inc jmp lcall cmp imul push pushf addb test mov or or jmp ficompl sbb lock js or jbe sbb leave dec sbb fdivl sbb movsb imul jae out dec out inc das imul jno cmp imul dec inc mov xchg mov popf add push ljmp sub push repnz insb fadd jns or and xor int andl dec int cltd sarl jecxz pop push int sub push movsb mov int mov (bad) xor cmp xor daa xor inc jns subb or (bad) hlt fcmovnb adc push (bad) fnstcw inc (bad) inc mov and pusha cltd dec add pop pop xchg data16 (bad) fsubs dec scas cmc sbb adc and loop mov adc add pop insb sbb das ret sbb in sbb in (bad) mov into xchg shr call xchg sub lret sub mov stc bound out test scas movsl scas scas xchg (bad) stos inc lock dec jle (bad) jge shrl mov loopne das dec pop test (bad) neg sbb lret movsl dec leave imul out mov call fmuls les xchg push jne inc pop mov dec cmp js stos and pop mov dec sbb cmp sub mov mov pop or pop sub cld sbb sbb loope sub ss iret ret mov push mov inc ss dec (bad) jbe outsb inc sbb sub and inc mov out (bad) adc lret jp rcrb dec pop jae out inc and sti aad mov in mov hlt xchg ss es rcrl mov (bad) es inc test rcrb mov mov flds jg push sahf dec push das mov dec mov dec fmul pop test aaa sub and inc xchg xchg xchg arpl mov insl or and push or cmp xchg lock inc iret cli fs movsl lods lahf adc stos mov nop inc jb push sarl mov mov hlt pop test shrl pusha enter xor jp (bad) lahf sub push imul jnp or xor das int loop je jmp add ss ja sbb sbb mov cs adc mov lcall jae adc out outsb push cmp jo pusha mov daa pop icebp out and add bound sub cld xchg xchg roll aad cmp scas pushf int and js xor xor inc je push pop or out loop add fisubrl cmpsb aad dec push icebp adc xchg jecxz and pop clc adc xor push (bad) mov insb mov pop fwait mov in xor mov cs lret cmp jecxz xor int3 ljmp bound addr16 push scas sub xchg mov dec (bad) imul xchg ret test xchg imul mov pop stc (bad) mov test scas inc pop (bad) jae xlat mov mov ss outsb dec pop push mov out inc push push mov sbb fidivr or inc das gs xlat shll gs or pop movsb jp inc fwait cmp repnz xchg mov jl dec pop clc je cmpsb mov mov cmpsb and sub cli mov pavgb (bad) mov loop mov sub jge cltd repz test les xlat sbb and xor or adc push fdivrl sbb mov lds pop rclb mov pop popf insb mov aas or (bad) aaa dec xchg insb sub mov push push call je icebp (bad) xor xor mov mov call push mov loopne nop stos cld fstpt dec jnp aaa lret cmp xchg lds or fadds ljmp (bad) rolb sti dec and movsb mov pushf out or addr16 or mov sbb xchg pop into xchg push das into (bad) inc loope scas scas mov sbb inc xchg (bad) mov lods fisubr mov push xchg xchg adc clc clc fcom sarl push mov inc cwtl das int3 cli inc scas pop mov mov aam shrl xchg fnop in ds mov divb dec fildl (bad) mov in insb xor pop cmp pusha test popf xchg test jge sbb cli movb insb and jmp jp adc lods fsubr jae xchg cmp inc push push mov jmp push sahf mov and sub adc sbb sub shrb cmp (bad) jmp jle xchg idivl xlat push cmp lret gs int dec mov sbb push push icebp xlat (bad) std add test std call mov xchg sub push jno enter mov sbb (bad) das push push int add loope pop ljmp call cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov jo divb cmp outsb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg insl xlat mov sbb lret daa (bad) (bad) dec lret pop mov (bad) sti sti out jecxz lahf stos js add imul loopne add xchg mov dec int je cmc rorb mov sbb cld ret fadds and dec dec (bad) lods inc mov mov and fadds jne addr16 orl jecxz fisubr cmpsb mov (bad) jge jmp or in mov int3 dec push data16 outsb je dec sub xorl sub stc pop pushl mov dec cmp popa popa xchg lods (bad) out mov inc movsl jb ljmp sub cli arpl adc push and or and adc xchg cmpsl push cld fmuls std xchg mov in popf xchg idivb add xor mov cld out lahf aaa mov pop push sub adc mov xor mov mov push xchg push ret (bad) aaa jno shlb mov ss pop or xor jmp jg imul mov pop mov in jno adc bound and cltd orb sahf sahf push push sbb mov fcmovnb inc (bad) divb arpl int and jle xchg dec icebp add (bad) cmp jno jo mov (bad) sub adcl inc and push pop cmp push or jg mov call aam aam es mov xlat mov sub stos test jb mov notb push ret sbb mov aad jbe and adc sti adc (bad) shlb add jmp scas xor mov sub or xor mov mov vmovd cld pop jo pop mov mov xorl sub add adc in scas cmpsl mov repnz adc mov leave or clc les pop pushf add mov imul jp push shlb and psubq mov adc push cmp (bad) pop scas add dec arpl xor adcw shrl push out add decl int3 cmc push cwtl xchg jne adc sahf push mov cwtl mov ret fidivl dec (bad) xor xlat xchg mov pop or jnp adc fild adc jmp in ret outsb xchg add dec addr16 xor jmp push xor add (bad) cmp push mov xchg push adc pop sub lcall push out add cmp and ret sub rclb cld sub fistpll mov dec mov arpl sub dec lods sahf idivb sub pop icebp mov jno push inc jecxz sub xor movsb lods cmp cld decb js jnp jne shll fdivr movsb sbb daa out inc xor cmpsb mov xlat addr16 js cmp repz cmpsl push scas pop mov push ror lcall (bad) loopne pop add (bad) in sub inc push xchg lahf mov rorb stos mov cmc (bad) gs xchg sub xor cwtl in cmp in xchg and call out aaa pop fxch scas aad xchg mov mov sub roll cmp in aaa insl int pop (bad) cmp mov das mov cs fwait and (bad) xor sbb iret push out sub xchg scas cmpsl lahf mov cmp sbb and inc sbb pusha sbb test jns jb and cmpsb xchg push rolb rsm push mov andb inc scas cmpsl add cli daa mov cmpsb movsb push add and loop imul les ss dec cmp jl test movsl (bad) xchg push fmuls or mov push mov jecxz lods jnp mov push inc lret inc cmc and push popf mov sbbl lahf fs xor stc cwtl jl jg push in stos ret jecxz adc aaa mul scas adc push loopne adc cs (bad) aas lods add (bad) int fisub cmpsb xor inc int xchg add jb lea push stc imul decb test (bad) addr16 cltd mov adc xlat dec add inc icebp sahf push adc fidivr add sbb in jmp popf push incb sub out add fldenv bound xor outsb dec movsb xor pushw arpl push stos mov or adc or hlt pop int3 mov into sub mov roll popa and xchg pavgw adc decb mov imul xchg in je inc jmp sbb fcmovb mov jb xor enter jns xchg stos ja out sbb xchg (bad) jo dec adc jnp fs popf out rcr dec in ja (bad) cmc sub (bad) cli out lret jl push jne out es aam adc call ljmp sahf lea lahf pop les ja or dec add mov std xlat (bad) out xor jecxz mov clc sbb daa lahf cmp push push das inc or imul insb xchg test cwtl jae imul popa fnstcw sbb out and jns mov test mov daa decb push mov adc xor mov int3 ds cli ret cs xchg xchg test adc cmpsl outsl cmc outsb xchg cmp test pop dec sar inc sub push adc mov dec jmp jge movsb fiadd imul mov or aaa jb rol mov and sub enter pusha jle push or pop nop imul sahf popa imul or pop dec jb or ss dec pop jecxz lcall movsb imul cmc xchg rcrb xor xchg gs and dec push inc into mov and fisub insl test icebp test das sub daa imul and shll cli mov dec popa ljmp sahf jge mov std sub push pop iret pop pop loop push jns (bad) fstps stos bound cmp rolb mov pusha cltd inc inc lret xlat aad je fdivp add cmp rcll cmpsl push out fcmovne test or jno ret ds into cmpsb sahf lcall mov gs flds inc pop push repz adc clc or and das into xchg dec dec (bad) jle into jno push xor cltd mov aaa xchg out jmp inc mov es imul jl pop pop pusha jmp push movsb jno push cli pop mov repz cmc leave pop insb adc add out sbb int push fidiv or cmpsb mov mov lea mov xchg pop mov insb lds jle out inc jns pop cltd add or and mov loope mov and ss sahf jne push mov xchg cli xchg pop pop rcrl cmp dec inc pop cli fildl fucomi in fdivr (bad) pop mov push ret loop push leave in (bad) sbb rolb loopne xchg outsl (bad) scas cmc fisttpll and pop cwtl (bad) pop pop mov fdivl js cmp pushf std pop jnp pop sbb aas fstpl push sub je lods jle sti mov fcoml outsl jb lret emms aam lahf add stos xor dec call xchg add cwtl aaa and test das push or jge data16 pushf sub and hlt adc in or and outsb (bad) mov sbb hlt data16 movsb pop add mov jmp xchg and (bad) lret rcll jo add mov adc mov cmpl and pop add and mov inc lock call mov notl jle sti dec in int3 or sbb out fsubl push sbb xchg push adc int push pop les pop inc mov mov mov push in jl outsb in adc mov ret sub in pop idivb jb pusha ret fs (bad) ja cmc and mov mov in dec mov sub mov and add int xlat jo push inc shrb cli mov out test sub fldcw ret fld1 cltd loope adc std sete prefetcht2 cmpsl add sbb insl mov imul negl mov cmp movsl das jg dec mov adc cmpsb lds cltd ljmp (bad) cli iret (bad) and push mov mov lea add pop xor rorl sub in mov fcmovnu cli or lock pop xor mov jne cs jmp sub js stos cmpsb fsubs and and pop leave jp mov xchg jae xor lahf frstor mov pop jmp arpl add mov jp mov cli nop ljmp pop mov iret lods cs clc icebp lods (bad) outsl push popa call sub and pop repnz pushl cli cmpsl idivl test stc scas jge icebp jge std xchg mov test testb mov inc xor int push fsubp popf (bad) dec or push jbe repz (bad) aas mov js adc inc aad mov push mul jno psubusw and sub pop xchg sbb fcom inc test sub cmp mov pop cmpsb dec and outsl dec mov movsl push pop push mov cmp lcall outsl mov jg jp repz dec sub push sub stos icebp xlat add pusha xor pop lock ja in lods push outsb movsl jp popa and xchg ljmp pop or sub les mov cs les imul sbb push mov orb out lahf (bad) push int jnp clc jo mov pushf add mov popa insb (bad) push inc stos pop xor imul out icebp cmp into ficom insb xor mov test adc icebp dec cli fistpll out das jl jp or out in movsl popa in and pop pop mov jno cmp push test push sub inc push mov aaa clc and clc aam shr repnz lret push cs mov (bad) push enter mov push cmp (bad) cmp imul jo mov jg icebp lret jns or stos rorb sahf mov test jmp lock mov fdiv xchg ja xorl movl dec ljmp fs pop icebp sbb mov lods push jp lods (bad) ss dec add push fisubl (bad) iret daa bnd cmp xchg jns aas mov cmp int xor lret js es sub mov loope aam (bad) out and imul push add rcll (bad) pop jb mov mov outsb xor sub cmp test sahf enter (bad) lret mov inc jns lahf pusha mov push test xor mov cmovp hlt fcompl roll or jp cli or pusha bound int sbb (bad) mov xchg jno or cmp (bad) mov push push cmp add fmul stos inc sub sub xchg sub nop (bad) mov sahf sahf std pusha pop arpl aad inc popf arpl subl and addr16 rcrl cmp test fdivs lcall sbb sarb pop push push (bad) xchg jl sbb stos pop inc inc (bad) lret xlat cmp (bad) leave mov inc les push mov sbb push xchg mov inc mov lret aaa jno stc dec hlt je les xor fwait and sti cmp lret (bad) pop pop nop out test xchg sub aaa rorb mov mov pusha adc out and imul and (bad) bound bound data16 pop fimul leave xchg (bad) clc mov or mov adc mov pop movb (bad) cwtl inc or pusha adc xor aad sbb imul gs js adc pushf aad push jbe hlt xor mov notl sub mov jns std and cwtl push jnp or outsl sbb pop cmpsl cmp and cmpsb into jno dec dec (bad) xchg loop out jmp push mov mov sub lcall (bad) (bad) cmp mov mov jl pop stos and roll xchg fldl clc mov pop inc push (bad) ds fisub ss popf loope lret mov int ret adc int xchg push lea lods pop add cli xor fstpt sarl jo iret loop (bad) pop mov inc mov (bad) aaa imul add or jp leave sbb call xchg ret stos dec jp add ficoml or lahf cmc jo sbb xlat clc or push pop sub lods test cmp out test mov push add jb cmp xor inc sbb call and test xchg daa sbb cld js js jg cltd pop dec or mov ffreep or sti mov xor psubd loope dec mov sub imul sarl jle xor push sbb xor ds clc jp cmp sub jb lock mov fsubs sbb sti jle aas push dec pushf xor mov cmpsl mov ja jge push pop (bad) fucomi pop pop lcall inc mov or in (bad) or xchg mov lock add test aam add jl dec (bad) icebp dec or cmpsb mov xor mov into xchg mov (bad) ljmp imul jnp jne or popa pop lock out test into mov popf divb je mov iret or insb xchg adc inc or xor sbb daa or push inc bound xchg pop xor and cmp and push (bad) fcomi mov xor cmc jns nop xchg aaa lret sub jle ss popf repz outsl xchg or repz loopne fdivrs and pop jo hlt popa adc jg rorl rorl jno adc jmp hlt xchg cltd aas dec dec mov xor xlat jle mov or and add mov enter pop js pushf jg and fildll jnp add das out lock shlb mov push stos lods int3 xchg stos lds push dec xchg pop sub mov push lret gs lock (bad) sub cmp pushf fsubs push scas ss inc mov add call add xchg popf push jne sti std cmp push stc jmp cltd push xor ljmp jmp lret mov xchg adc cs cwtl movsl push addr16 dec ret stos call mov rcll cmp gs stos in sub stc imul sub sbb loop xor jg push xor aam js sub rcrb and pop add cmpsw push push ret sbb push mov iret xchg or dec push adc mov pop cmp inc dec cmpsl cli push jle outsb push jo add mov sbb mov sbb stos mov xor xor push loope mov in mov mov push jae nopl into scas xchg adc fwait mov cwtl lret mov sbb xor mov dec imul mov sub and inc inc loope popa jg sub mov cmpsb lret or aaa xchg or test dec es pop loop push sbb rolb lds push insb lods in push cmp jl adc ja sbb je jb pop bound cmp (bad) hlt xchg adc (bad) lcall (bad) rcrl lea rcrb jmp cltd rcrl dec jl xchg cli clc aas add mov repnz sbb pop inc cld pop jp call es sbb fsubl cmc pop jmp dec mov not pushf and fadds cmpsl test jae shlb xchg inc xchg sbb mov dec dec mov test faddl jnp add lds out lds (bad) out pop pop in fistl movsl pushf in mov jae add loopne fs sbb jmp xchg lret imul in cs or mov jb es jae adc lea clc cmpsl push jne repnz xor dec xchg test mov movsb push jg xor mov mov rcrb mov stos nop ret insb in lods cmpsb (bad) aam dec jnp jge xor dec mov mov icebp mov cwtl (bad) pusha mov or add in cmp jno ret jmp aam xchg mov cmpsb insl fs ljmp movl inc cmp stc xchg adc push lret or jmp inc pop mov mov inc jnp aas xchg in clc push out xchg and jae jae mov cmp cld leave sti arpl dec ret lods adc ds or add lock repz jle xor in orb xor je adc imul jnp mov jmp xor repz sub enter fisubl add sbb imul mov ss repnz stos or fwait (bad) mov xchg fsubp iret push enter mov fstps les sbb dec in add mov cli test ss movb mov movsl movsb shrb jmp cwtl jl movsb cwtl mov cmp push or sbb xchg dec lahf test ror push js add pop push out push int3 gs inc jp mov mov sbbb jecxz xchg scas push sbb sbb sbb mov mov cwtl cwtl inc in fimull push lock fsubs and je repz in outsb mov (bad) sbb inc stos test jbe repz dec cmp out xor mov ja mov push and jae fbstp sarl adc push (bad) mov adc dec pop ljmp fildl dec cmp push mov sub ss xlat adc and xchg insb ss mov xor add in or arpl mov imul lret les cmp push and test jb das sti movsb add popf mov sbb mov mov xchg dec dec sub loopne mov inc bound mov repnz jne push or lahf pop aaa ret inc sbb pop adc xchg dec lods pushl fstpt xor pop and pop xchg adcb add mov mov mov mov imul and push shlb or and dec inc add inc aam mov mov xlat xorl mov xchg int jne cmovno test dec andl icebp jecxz fwait push mov pop enter adcb loop xor repnz out daa adc adc in in clc scas lcall scas add subl xchg cltd into sbb sub jecxz outsb outsb jecxz enter scas sbb add push clc inc mov jb lock cwtl dec push fs ror mov sbb xchg shll or outsb lret scas jl mov sti mov mov inc jl sbb nop pop out sbb xor dec ret adc test aam lret stc insb je imul outsl out jb ss les fstl and call mov repz push dec xchg cmpsb popa fld fisubl mov mov push aad or mov adc iret inc sbb adc ret inc push lds mov sub les test outsb jge xor dec divl ja push mov xchg in fcmovbe dec jl aad jbe movsl fsubs movsb sub sub je pop outsl mov ja fs sbb mov fnop and adc sub mov mov mov push sub add lret lret xor push xlat fstl xchg mov cwtl (bad) or sahf mov mov (bad) mov cmp loop test (bad) ljmp cs int3 or pop xchg lods ret lcall gs lods aaa inc bound mov les mov or outsl sti insb int pop repnz pop (bad) mov (bad) jnp lods jmp aaa pop mov mov ret push and push add cmc mov mov adc xchg icebp (bad) cld leave jnp push gs out jb aam add jae sub adc subl push sti or fisttpl ds inc into pop stos rclb sub push imul sub gs das clc icebp in cltd push lcall test stc sahf and loop in les ds add jbe js push or into adc jbe stos sbb cmp dec adc xchg loopne lds arpl sub dec repnz ret jle adc pop int jecxz imull lods cltd jnp push mov ficompl lret mov sub sbb jbe or mov push lret mov pop cmp cld jbe jl scas xchg mov sbb and shl and pop mov inc jle mov lods pop mov push js add mov roll push dec aad aam dec fmull jne into mov adc in add shll sbb insb lcall or nop outsb iret lcall and mov adc pop inc mov shll and cmp mov leave data16 (bad) sub sbb shrl ficoml xchg mov pop stos addr16 in xor cld inc js sbb jmp stos std ljmp test dec pop rcrb es or (bad) sbb push sub popa cmp ret int jnp inc lahf xchg sahf iret pop idivb clc rcr imul rcrl in sbb xor mov les sub lret cli sub (bad) xor cmpsl insl lahf mov xchg mov mov push lea lahf test jle pop inc test int es sub or mov in and jp fcom das push and aad icebp push add lret das push dec dec movb in mov mov aad pop movsl or sbb scas js mov xchg sub test sbbb push push sbb pop pop push lds cmpsl leave (bad) adc stos outsl mov push in cmp and (bad) cli popf pop dec and mov dec jle sub jo into adc movsb mov leave jmp test jge inc jne das pop ds push and (bad) je outsb repnz stos mov hlt push or mov sub mov in mov addr16 push fdivrp and mov shll aam stos fsub cmpsl adc repz faddp fstl repnz fwait pushl mov aas jp retw imul sti sbb pop ret inc jnp clc push xor aaa in dec in dec (bad) push dec xlat aaa adc sub bound (bad) gs jp xchg arpl shr fmul pop loop push xchg xchg aam mov lods inc mov repz sbb mov out push mov mov jno jne insb cmp and jge cltd in gs push leave call ret (bad) clc gs mov push mov dec aad imul js jns sarl scas dec movsl pop push inc inc xchg call outsl sbb call movb xchg clc mov hlt push incb xchg in push sub fdivrs scas sub adc lock call dec cmp or pop mov mov and and cltd es pop and fcomip cmp int3 in sub cmpsb xchg rorb stos mov mov mov lock jle mov ja outsl repz inc xor aaa ss add test cs fwait push cltd fisub int3 xchg int3 lods dec dec cmp mov add dec pop mov or cmp repnz cmp pusha fadds (bad) (bad) repnz pop fwait or in inc mov add push pop cwtl fdivr lahf lahf fdivs imul out stos sub hlt (bad) js rcrb fcmovb iret loopne sbb and add mov mov cmp dec outsb jne jno aas fnstcw cmp push out dec pop (bad) imul xor xor push sub shl outsl xchg mov add sbb add fisubrl aaa add mov pushl jbe pop fwait movsl inc dec inc cmp or test insl inc in das ret popa cltd dec mov fcompl inc es sbb xor sub movsl jmp lahf or daa out lods jl inc pushf and push (bad) addr16 push aam and sbb fbstp nop add stos add push sbb jns insb fistl dec adc sub in mov xchg xor das and aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add psadbw cwtl sub push and add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fisubl add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb (bad) lret jbe xchg insl mov mov fdecstp int jbe insb sub addr16 neg pop out cmp add nop pop add subb pop (bad) repz mull jp or (bad) jne jo xchg add ja imul pop jl and add pop jbe push sub or mov repz loope (bad) (bad) jp call push adc lds mov dec push ret push insl mov dec test sbb sub sbb stos mov xchg push dec jnp daa pop mov mov test inc dec (bad) jo xlat xor cmp dec dec scas jmp mov sar inc and sbb clc enter sbb int orb mov push mulb (bad) xchg (bad) sti add out into cli inc ficomp pop nop sub mov cmp jbe (bad) rcll sub push jns imul mov mov imul pop jecxz and push push xor addr16 daa adc dec and insb cmp jp xchg fwait pusha dec movsb and xchg stc in cmp outsl mov pop inc ffreep out dec hlt cmp push and arpl mov xorl jnp fs sub hlt add addr16 jecxz cmp imul add sbb pushf fcoms in mov loop pop jle sbb jno scas nop stc dec xchg and inc test and adc dec cwtl loop pop lret adc repz imul fwait es in add mov cld sub aad add jge sahf jne insb or push mov push in imul cmpsb jne out ret into push push xor lahf xlat xor (bad) daa pop scas and ret push sub mov jmp cmp jmp pop dec cmovnp add mov jo rcrb mov jmp sub aaa pop adc daa push ret jbe jb (bad) sub stos mov jbe and pop ss popf fbld dec jae hlt sahf pop pop dec inc push mov stos jg hlt xchg pop insl ja fsubs sti imul dec aaa pop mov sub mov mull ja sbb (bad) cmp pushf stos push (bad) std gs int xor jo ret sub jl test adc ret cmp cli test loope outsb rcrb pop out push rol loopne repnz pop mov sub clc fsubrs lcall in ss sub int addl push sub iret jae adc mov jno adc sub rcrl sub lods popf cmc data16 (bad) call pop mov fiadd nopl js xor sbb test jns fdivrs xchg xor mov push xchg sub bound nop fisubrl test bound jnp mov pop iret push add dec pop jmp shrl jns in negl rcl pop pushf fwait pop dec loopne push sbb fiaddl daa fldl iret jo sub dec insb inc mull mov sub pop push test push negl inc ror cld jb cmpl test data16 cwtl sbb jp adc sbb mov fistl xchg rolb daa dec fwait sub xchg (bad) or dec es popa sbb or aaa (bad) xor test dec or pop je xor lret lret mov (bad) push mov dec xchg pop cmpsb pop (bad) adc (bad) and jmp in (bad) or dec je cmp repz push test popa das xchg lret fmull push daa dec ficom jge (bad) jb push add ficomp mov pop std movsb aam ficom sub shll push rcll fdivrp xchg sub inc xchg std stos call das aam in or xchg stos popf je dec xor pop cmpsl mov dec pusha mov cmp pop xchg mov mov and aam lcall sahf mov sub pop sbb add push push aam push mov dec test mov sbb dec inc int3 pop jmp xchg mov negb iret lcall sbb ss jo dec cmp das cmp in cltd xor cmpl adc jo pushf in push jmp pop bound cmp cmc popf dec fnstsw push and xor xchg iret sbbl fcoml lock outsl lahf pop jbe cmp or push cmp add lea aad inc ret mov mov mov fnsave mov dec addr16 pusha push fbld pushf jae push jns pop cmp insl hlt jns lock pusha push mov mov xchg shlb call inc ss adc lock ja xchg sbb push xchg mov xor mov jp and inc movsb mov loope test mov pop add mov scas ret dec push (bad) out adc sub mov dec mov bound jecxz pop ja xchg jmp nop add xchg push out ljmp pushl insb adc cld jne inc jmp fstps aad test ds nop aaa mov add mov xor sbb int3 mov dec bound stos mov (bad) jo vpackuswb repnz je insl sbb inc mov xor je mov xor cmp orb sbb mov inc xchg jl inc mov mov addr16 mov mov mov push fsubr int3 mov mov add xor and pop sub xchg movsl stos in icebp add push cs mov and cmpsb mov mov adcb cmp ret out pop mov loop (bad) into lahf or pushf and sbbb push and shll adc test pop jb lcall outsb mov add sub test push imul test mov jbe xor add outsb loopne pop add leave or imul dec xchg jl fsubrl testb push lods je push adc jge mov mov icebp fidivr lods push adc iret push push pop mov jle xor xlat dec push stos sbb sarl mov mov jg (bad) jnp cmp cmpl xor xchg xor stc fs xchg adc add fcmovnb aas stc mov xchg or hlt ds and shr add and xchg push cmp or add add dec in stos mov add test and test jbe js adc pop repnz ja push sub pop out xchg xchg mov mov xor push inc cmp rcrb fldt xchg or rorb mov push in je adc (bad) inc cwtl jg ja xor (bad) cmp push sub cmp cli adc (bad) test icebp adc and cmp sub ds inc push add mov xlat les adc sti call xchg add jge loop mov scas push jp push add pop inc mov mov push sbb pop daa sbb imulb pushl popf and adc adcl sbb mov mov push mov push mov push shll inc fcmovbe fstps aam adc mov mov in mov in pop adc or and (bad) fiaddl add sub stos or or fwait mov pop movb mov pop and (bad) call or jbe loopne dec in fildl movsl mov sub push in jecxz aas pusha stc xor out int3 xor les sbb mov inc das mov icebp or pushf in sub dec jl mov cmc xchg or das (bad) push aam test mov aas pushf cli push inc push arpl sub push cs xor lcall xor add fidivrl mov or adcl mov xor push pop clc push dec dec orl xchg dec ljmp fiaddl sub (bad) or pop xchg push mov cli push aad mov aam and sub in pushf in scas inc add sub popa jo les xor push stos mov in (bad) jg jbe push inc xchg mov ds lret jae mov push lahf mov stos pusha cmp subl cmpsl cmp fdivs cs mov loop cmpsb mov pop negb xchg in test lret or aam mov xor inc mov dec pop rcrl mov inc push adc dec push jne or addl sub xchg adc (bad) jle jo pop aam stos cltd fsubrs fisttp xchg dec adc lcall xor xchg enter int lock pushf add jl xchg or or adc adc data16 add mov pop dec pusha or xor mov dec imul pop aam imul jg clc lret dec je mov push xor jle adc negb cmp pushf xchg insb jmp (bad) jnp cmp or jmp mov iret aas fsub or in mov repnz jnp dec lahf inc int3 jg pop pop xchg pop stos inc pushf jae lret jae (bad) int std xor mov mov lahf out jp roll mov int xlat mov mov jnp cmp sbb ljmp push push add jb das mov mov out cmp mov stos dec fimul mov mov sub pop mov insb out stc push mov dec inc xor mov push repz push jmp ret clc mov mov pop adc pop in jecxz and lea mov xchg mov xor mov insb lret movsb scas rcrb dec ja mov xor xchg stos xchg inc mov jmp std xchg ret mov mov jne es sbb repnz inc loope jle mov iret orb test pop fs dec pop inc add push es cli xchg es mov lahf mov test out mov cli mov fist loopne sub data16 sub pop loope out cmp sub nop out jg mov jno mov daa sub aad sbb jne loopne add mov clc push sbb xor es insl dec or fistp stos in cwtl outsl aad sti or inc imulb adc out scas xchg sub ljmp movsl loope xchg push jo outsl test adc movsl push xor sbb loope mov mov cltd out (bad) adc hlt pop cmp or ja xchg jp in cld or das scas sub jp aaa cmpsb ljmp mov insb push jmp and mov jmp push adc nop mov cwtl adc leave mov rcl inc (bad) push adc mov enter insb fdiv pushf mov dec cmp pop stos push cmp push sub jecxz add stc movsb push nop ja mov xor jmp jne jmp xchg insl hlt sub xchg rol adc js ja gs call mov lock adc jo insb int imul outsb sbb les add and in rcrl or (bad) mov sub mov imul das cmp jecxz stos (bad) sarl scas sbb aas shrl inc lahf or sub ret jmp cmpsl adc lahf pushf dec pop fdivp jmp (bad) push sti (bad) lret cmp mov sub inc outsb pop ret dec iret and mov std stos jl mov scas cmc ljmp bnd lahf out push xor adc inc and add nop and dec xchg jae (bad) mov push (bad) repnz and sti fwait sub inc dec orb sbb push repz clc gs lret inc cmp aas add outsl jecxz fcmovb shl je pop inc inc std out rcl fbstp xlat inc sbb (bad) mov pop or mov pop pop icebp xchg mov mov dec push jns or aaa int push xlat (bad) fwait popf add xlat es xlat pop lcall lahf dec test cwtl add stos and cmp xor outsl pop rorl push mov aas jno xlat sub fwait mov mov mov lock jno ss mov sbb sti or movl bound lahf rcrl push push inc aaa and enter add outsb ss cmpsl push inc or (bad) (bad) cmpsl add arpl test mov jle lds stc jb sbb (bad) dec pop xchg jmp addr16 pop adc (bad) test stos jecxz mov push mov movsb cs mov and lods cmp rcll imul add out xchg jns test ret mov jp dec dec leave aad and movsb int3 mov repnz out aam jno dec iret mov sbb shld push jns call inc sub call leave fwait clc test mov fldt cmpsb add xlat notl inc jb xchg test adc das stc test cmp mov test mov and xor mov xchg adc jg sbb ret fildll mov xlat sbb outsb add clc jle test sub mov push jbe push add fwait lahf aas inc mov out (bad) xor aas cmpsb jne pop adc les sbb mov xor repz xor icebp je sti shlb fimul adc ret push or jns stc push mov lock or js dec add lahf sub sbb mov fildl sbb or xor jb jge xor pop iret jle mov xor and adc sbb rcl or hlt (bad) or cmpsb push scas xchg gs loopne mov mov jb push and ret mov jl out jecxz in and pop xchg in repnz dec imulb pop or mov fcoml push mov in pop out insl adc fnstsw push lock mov pusha dec popf (bad) sub cli jns out popa xlat cmp aaa push pop repz js fsubrl lret mov dec and sub je push pop enter inc sbb xor xor cmp ret popa adc jbe inc addr16 xor sbb hlt (bad) cld xor or xchg sarb add popa push fcomps jmp jno dec cli decb (bad) in push lods add add mov scas std xchg stc or push mov and test notb jno jo and imul test xor icebp xchg insl jge sub pop stos dec cmc xchg add test pop int3 xor jge pop sub xor fwait push fdivrp ss test mov lahf fs sti loope adc rcll fwait cli out inc mov popf sbb arpl fsubs mov xchg sub gs iret adc lret sbb outsl cltd mov enter cltd test jmp enter adc add jne jge fisttpl xor gs cs sub movsl xchg movsb cld (bad) (bad) (bad) in orl inc fstpl call aad insl mov (bad) mov pop repnz sarl arpl fwait mov jecxz or or clc push jmp icebp aas xchg and rcr xor leave addb cltd pop pop (bad) nop mov add ljmp cli (bad) or mov std mov int3 loop sub jnp lds mov or jbe lea inc nop and decl popa testb cmp xchg ds pop stos sbb movsl jbe out jae out cmp rol arpl and add add (bad) sti mov lahf sbb rcrl and add or mov arpl mov ds popa and lock pop (bad) imul js jae adc ss scas push add fcomip test xor fild decl lods aaa loopne popf ja pop and xchg cltd mov cwtl sbb ret pop daa jl dec cmp lret (bad) int3 mov lahf push xlat insl loop adc dec dec add sbb push lea in fucom shrl sbb add xchg iret or test or cwtl imul aam xor pop outsl cmp jmp std inc pop jmp and loop (bad) mov jo (bad) cs sub rcl xorb jg imul loope xchg pop loopne xchg hlt dec jo clc and mov jne jae and ja xor loop xlat adc mov push sahf popf push sbb dec test sbb xchg call jmp ljmp cmp sbb inc jecxz xlat scas in ss cmp mov aam xchg jle pop iret fsubs push out jae (bad) repz push daa mov and mov jmp pop jge aas inc jmp sub xchg lret les inc aad and and sbb jecxz cmp jp enter xor bound cltd add ret (bad) pushf inc pop inc (bad) xchg sbb out movsb sub lret out lahf sub adc xchg cmp add mov movsb clc mov push arpl fdivrp data16 xabort (bad) jge pop outsl jge inc mov ja push jmp sub dec and pop pop (bad) mov call xchg xchg prefetcht2 adc xchg outsl inc daa push inc lods fisttpll inc pop in cltd sbb push mov jg inc mov cmp scas fsts mov mov icebp les xchg inc mov fcoms into xor ret and xorl jb sub (bad) xor stos inc out xchg (bad) (bad) mov lock push leave int3 xchg stos aad hlt outsl xchg xlat push or shrb ret mov xlat xor icebp out lahf fimul ljmp sbb mov stos (bad) test insl lock pop xchg mov jno mov fisub aam outsb fbld popl mov cltd out sub mov stc ss mov add jecxz cmp jb mov or cmp testl (bad) or push cmpsb lds lea aas cmp mov cs pop push outsb ljmp push inc test mov aam and test or push xor pop rorl lret mov jnp scas pushf pop data16 push popl dec mov fdiv mov les and push jo fdivs and popf call adc xchg cmp sbb and adc pushf loop loope push xchg je jae sub mov mov push cmp lds sub out jl fs (bad) xchg mov (bad) mov les or dec repnz insl mov cmp fimul (bad) cltd ja push test xchg pusha xchg xor pop aas sbb loopne clc mov mov cmpsl cmc mov add mov mov xor lret (bad) jl in pusha inc test dec jno repnz out loope inc push sbbl or add xor mov out mov sub hlt push fwait dec (bad) test ret arpl stos insb dec jae sbb xchg loopne sbb dec imul xchg pushf add or mov add test scas fwait cwtl cmp sbb mov sub sahf aam aaa xchg shrl mov sarb jns bound daa sbb and popf and sbb arpl (bad) shrb stc fst xchg pop (bad) inc sbb nop jns lods scas iret mov and mov sbb lret (bad) pop into popa adc or (bad) jle test mov int3 or ljmp sbbl add js imul cmp popa aam mov pop in cmp pop cmp mov (bad) mov daa out sbb sbb dec popf inc rclb and mov xchg mov call leave inc call leave test jne out xchg ljmp das mov pushf and inc enter fdivp sub sbb pop std inc fwait cltd rolb xor mov and das mov test fisubr and xor call out add ss push mov into and pop ja fdivr js rol es fistpl js scas (bad) mov leave sbb ret pop test push sub push mov fldt inc cmp push pop xchg int3 xor dec js iret push iret pop inc mov mov test mov (bad) mov jae mov test sarl cmp out xchg mov fsubrs pop mov clc jp inc pop mov mov add repz mov sti out test cltd out std repnz (bad) jo pop sub clc or cmpsl mov sub imul fmulp push mov or dec data16 lock imull adcb idivl lahf ja test xor cmp inc adc jmp test pushf dec or sub adc rcl push mov dec cmp rolb jmp pop adcb xchg out dec ficompl cmp divb xchg cmp or ss mov cmpsb jecxz mov jnp push sarl in (bad) aas and cld push mov shlb sub xchg cli mov push fcomip out xorl in js (bad) jne call pop outsl cmp xor dec ds fisubrl stc sbb jae jb idivl or inc xorl pop scas mov sub jg or xchg pop (bad) fidivr xor mov stos fisubl lds and mov fsub mov and mov stc mov mov adc pop cli jmp andl jl cmp dec mov pop lds repnz les rcrb cmp dec rcl (bad) repnz rolb enter and mov add stc repz cmp ret inc inc in push or dec out cmp (bad) inc jae out int jne (bad) jne or stc push inc in sbb fs adc or iret inc test scas cmc aaa push insb sbb xchg das fwait mov insb fcmovne mov pop sub leave cmp mov pusha into jno mov (bad) xor xlat mulb test and mov push fwait arpl and dec std mov push dec sub adc ljmp (bad) add xchg bound sbb push xchg mov leave ljmp stos sbb popa push lahf (bad) gs je sub popf imul out loop repz int dec jo inc sub add nop pop stc ret in shlb cmp sub cwtl fwait inc inc and data16 faddl pop aaa leave push xchg mov (bad) or jns fcompl (bad) pop xor mov rcr push xchg mov icebp test fidivl test dec cltd xchg (bad) jae lea mov push popf ss fwait mov imul jmp repnz jp sub xor add push (bad) lods dec (bad) imul jmp gs in ds lock sbb fcompl mov mov seto mov mov hlt pop push sub pop and pop jbe cmp pop jmp adc sub into push (bad) sub hlt shll (bad) jb add xchg (bad) add insb ret imul sub sub push push cld mov push int into mov mov lods pop lcall adc mov xchg mov inc pusha lret mov adc mov sbb (bad) outsb jmp fnstcw sbb mov sbb fstps add mov inc hlt mov jae pop sub loop adc loop cwtl ret sbb pop std mov es rol lret (bad) xchg cmpsb je fcmovnb cmp xchg cmc cmp pop dec push lcall cli daa ret dec es leave imul psrld mov in lds (bad) jb xor mov sbb fildll jb xor ds popf loopne mov mov outsl add clc inc xchg or pushf repz push lods pop shrb xchg fs jb jmp fcoms iret xchg or xchg jns lret cli sbb dec sti cmpsb dec xchg inc lahf mov jl xor pop or push mov push pop iret xor fidivl repnz mov and jno movsb (bad) mov xor inc dec push daa mov fcoml les rsm xor mov push push mov mov push dec dec aam sub jl jb lock (bad) jo pushf pop movsb mov and arpl js repz (bad) clc push cmc cmp daa scas inc or ss test mov call sub mov outsb lds nop xchg imul cmpsb (bad) int3 sti lret dec rcll (bad) xor popa push or jnp cld test fwait out mov aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld mov dec push pop stos sbb rcll dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push bound push add insb rcr mov pop adc mov movb mov fistl adc daa pop jmp out add add aas add xlat mull jg mov movsb sti sbb cmp out and xor cmpsl pop clc inc scas dec pop pop sti movsl xlat negb iret mov mov jg in (bad) mov push stos (bad) iret cmp insl push xchg pop cmp (bad) out (bad) lods pop iret push out lret xchg fisttpll fsts jae flds xchg and mov xchg inc sbb icebp data16 fstpt rcrb popa movsb push xchg shll jb ljmp (bad) cltd xor mov add pop es in icebp mov lcall xchg and pop push and cltd or pop (bad) adc push (bad) into xor xlat mov aam (bad) fs cmp pop (bad) sbb insb fidiv pop (bad) cmp jae cli jae imul inc xlat xchg cs mov loop xor (bad) jae int push xor outsb lea jle lock ret push inc imul inc xchg sbb into (bad) (bad) (bad) dec mov and mov rcrb jns mov enter pop in (bad) adc mov inc loope pushf iret ret icebp leave cmpb ror int jmp push dec cmp xchg nop mov sbb sbb xchg push fneni(8087 arpl cwtl stos les (bad) jne daa pop fnstsw push xchg dec arpl xchg fist sub inc dec push lcall dec xor nop mov jg cmp aam leave aaa xor pop scas (bad) dec jb xchg mov add (bad) pop dec iret mov movb push or mov cmp pop mov stc or xchg sbb cli mov pop iret xor sbb xor scas arpl push jl repz gs inc add mov sbb mov inc mov loopne stos addr16 cmp hlt xor inc int3 je je rcl xor add mov mov testb push mov fsubrs pinsrw (bad) cwtl (bad) lock xorl fist mov cmp fs sbb pop xor loop add arpl stos sbb inc push outsl mov jg add nop cli stos push leavew add test outsl (bad) not sti push jns dec xchg sbb pop out xor or sbb inc mov sbb xor outsb sub subl and jmp emms test pop or insb test ret inc sahf push les sbb mov mov pop inc add cmpsl js fwait jae jmp inc pop push clc das es mov outsb ljmp imul pusha xor test fadds xchg cmp lods push sbb sbbl (bad) mov ss mov mov and cmp iret scas ds (bad) cld and je xchg push xchg mov or mov out gs call pop ljmp test cwtl cmpsb sbb dec mov decb lcall dec mov pusha jp cwtl rcrl adc loop ljmp in call mov nop cmp int add repz fidiv mov inc in pop xchg loope test cli pop cmp dec pop pop add mov rorl mov arpl jg sti xlat jo rcrb push arpl xor adc adc outsb xchg pop cmc dec push popa stos aaa mov hlt cmp xor push or dec test cli sbb call das xchg xchg rcr sub sub mov nop jns test (bad) outsb mov scas pop repnz xor pusha and repnz pop pop les mov jns icebp add xchg xchg pop jno repz xchg (bad) push push push mov fwait shrb or ror fsubl es xchg addr16 (bad) test fisttpll add test loop,pt xor jg sub xchg jb in xchg jl test lret (bad) mov add adc (bad) push fstpl xor add adc fnstsw jmp cs push scas sbb or add inc dec vpacksswb data16 repz pushf jl mov xchg sbb out adc popa mov (bad) negl sub cmpsb xchg mov lahf aad jo sbb cmp sbb mov xchg jl cmp mov xchg inc push xchg xchg xor jae cmpsb push jae test dec mov stos lret aas (bad) and (bad) sub inc (bad) (bad) adc sub or ss leave cltd out xchg cmp inc std orl mov aad sbb cmp aad cwtl test mov insb pop inc fadds insb push into and dec jp inc add adc inc mov stos jno push xlat mov push push inc scas pop pop (bad) inc outsl dec xchg adc pop loope add mov mov pop dec dec mov ror fwait loop leave scas cmp loop sub mov loope pop mov cld mov adc ss fs in xchg xor and cwtl das sbbl test mov fbstp push outsb and std ret repz fcompl mov or test lret jb test xor andb push lcall pop dec pushf out xor out notb in push add jecxz aas xchg cmp imul pop inc fs dec lret lret xlat movb je lods enter fstl ja inc adc sub xorl out imul inc mulb add push out pop pop jae call push mov push in or test insb rol sbb jnp nopl jae orb data16 ret negl sub mov and jmp mov adc leave das insb jg pusha (bad) (bad) lret mov loope xor loop add jg mov push mov js mov scas push sbb adc xchg subl lods (bad) lret add push and stos push push pop sbb fsubs inc idivb mov pop inc cwtl xchg pop mov fdivl (bad) xchg imul adc mov push fs xor jns popa or jg les xlat sbb dec cmp mov pop insb xor or mov mov push add xchg inc cmp mov sti push jg call mov inc sbb imul (bad) ja test mov popf faddl push push lret xchg (bad) push push test pop ficom in or in and dec lock pop bnd jecxz sbb lds mov ror les les int lds xchg add jg inc ja lock stos jbe or hlt ljmp xchg arpl jp (bad) outsb sub movsb fs cli and addr16 (bad) in cmpsb ds pusha out cmp jg aaa pusha pop (bad) imul and fist cld xchg dec push lret shrb jo lods (bad) jl sarb fwait js lods pop and sub in dec pop lock fwait shl hlt sub or inc cmp sub mov add outsb imul mov jl loope lods mov (bad) movsl fiadd insb inc or popl dec ds mov scas add subl fst adc dec out aas loopne adc mov mov xchg cltd pop test (bad) mov bound jbe ret mov aam ljmp psrad fldcw jp dec adc inc xchg aam fstl gs lock scas call scas iret int3 push imul push or les mov cmp into (bad) insl pop out sbb ds daa out mov hlt rolb pop cmp jnp int (bad) xchg (bad) sbb imul mov mov or mov insl inc daa xchg clc pop push push loop push or int test js test aam jle mov out pop jmp dec lea sbb mov nop lret pop fdivl int3 out cmc lods jle or fidivrl or adc orb (bad) in push add xor inc pop lcall lea mov push cmc lret push out mov jecxz jmp push inc mov pop push or pop or clc loop shrl push hlt imull jp imul sbb mov inc jo int3 movsl test sub es sub and and shlb xchg sub cmp ja mov sub xchg cwtl loope mov clc adcb xchg and int mov nop sub into cmp (bad) mov rolb ljmp jge aad inc subb lds mov fistl jl rorb aam push stos imul lods outsl test push insl imul fmull sbb or lock cmp dec cltd outsl push sahf jp jle mov fildl mov pop or sbb rolb rclb (bad) jl mov mov mov fnsave jg jo push lret sub in fnop fdivrl iret jle (bad) or (bad) or mov outsb inc cmp rol inc cmc jo xchg adc xchg out pop sbb fcmovnbe xor nop pop pop mov fdivs add lcall dec pop jg dec push call es adc popf sbb push xchg imul xchg xchg lea mov xor sbb jb push pusha icebp in lret loop mov mov aas or adc out test clc shrl testl dec or jle sahf cmpsl test dec stos jae mov enter xchg pusha mov mov fimul jp push popf movsb insl and jne xor and test mov dec jle out pop sahf or mov sti sub lock cld mov outsl ficom sbb (bad) add test or stos jecxz pusha nop int3 push mov dec cmp inc or lods out lods mov inc sbb pop mov adc push lgs notl cltd sbb mov mov popf jg sbb mov int push pop fwait ss mov xchg mov imul outsl xchg mov sbb iret in (bad) lahf or jg pop xor and ljmp mov jae or sbb cmp dec repnz cmp in inc icebp movsl xchg js insl sbb test sbb mov dec inc dec fistp sub out aas dec (bad) ficompl std shll sbb lock fist lods in pop xor sub xor sbb mov mov sbb mov push mov jge push mov or push and ficompl inc adc dec xchg fisubl (bad) pop sbb std test (bad) push xchg push loop mov ljmp aam lock xchg bound adc bound mov stc mov pop icebp cltd idivb mov loope add inc out cld xor fdivrl cmpsb sub (bad) popf mov mov inc (bad) das jmp cld loop push sub add sub adc jne xor inc ljmp mov (bad) ljmp sahf and mov out nop xchg cwtl imul xor stos loopne xchg mov push cmpsb shl pop out push imul roll shrl std pop push into mov dec cmp mov inc fs mov push sub xchg mov dec sub add lret cli stc aam into aas xor jbe jnp loope lea mov cmpsl xor push ficompl ja push arpl jmp pop push xchg mov pop xor and faddl stc fstl mov lock aas jl mov cmpsb subl mov ljmp jecxz or in push cltd sbb jae xor dec mov imul dec (bad) cli xlat in fs loop xor add (bad) cmp in pop ret pop test sub out lcall (bad) jecxz xchg fistpll xchg pushf mov push ror mov aaa inc or pop jb es push sub pop dec fs (bad) (bad) out rcll jg mov push mov andl push jecxz push fs mov adcl pop fimul (bad) ficoml movsb xor (bad) scas jl outsl dec fcompl sub repz icebp cmpsl scas jge sahf lret sub xchg cmp jne in push and adc jne mov leave xchg xorl push push inc mov or mov jne cmp pop dec dec and dec sbb inc sub pop sub mov cmpsb test jne mov or sbb push movsb jle fistpll sahf mov nop rolb loopne jnp stos push js pop icebp mov inc pop cli adc mov jb cwtl xchg xor dec fistp rolb cmpsl jno and push mov dec jl push cmp int push cmpsl ljmp jmp dec jecxz dec in scas mov int3 rolb mov lock sti pop aam insb xor sti mov push std xchg adc daa icebp push xlat aas out sbb test jns test jbe out lret mov or mov nop stos aaa mov and cmpl test dec insl jle jl ljmp fsts dec test pushf fdivrs mov mov lods push and dec push cmp dec dec (bad) jne hlt jmp fsubl dec mov rclb hlt pushf cmp test into pop hlt aam insl jae jo cmp stos mov mov imul cmp aad lds cmpb adc dec rcll les jle shrl jae ljmp sbb cmp xor stos inc xchg aad push aam xor (bad) sbb xchg cltd adcl pop xchg mov dec dec enter adcl addr16 pop fabs or jbe or mov loop inc pusha xchg ds cmp outsb idiv add fidivl xchg fs jbe mov push xchg push xor repnz cmp lahf ret lds dec jo push pop roll aas add out xchg cmp shrb (bad) enter je les pop sub cs inc cwtl or fdivrs mov in add xlat mov dec sbb push mov mov dec push and stc movsb push sub or je sbb cmc cmpb (bad) xor cmp inc int3 enter jmp add jae (bad) (bad) (bad) jge mov jae or push fcomp mov sub popa fldenv ss es mov movsb aaa add ret call loop es daa aas popa out das dec test xchg bound xchg jnp and loop dec sarb out dec cmp fdivl mov scas dec aas sar nop xchg jp mov xor xchg mov shlb xor and incl mov xlat mov add inc jo dec andl xchg (bad) xor pop mov das jecxz mov je and mov pop jo sub push xchg add or je adc scas xlat mov sbb mov ja add ret pop loope ret pop and scas (bad) xor loopne out out cmpb div ss xchg jmp pop dec ljmp adc (bad) loop mov shrl insb cmp cmp fbstp clc mov add scas outsb aad pop add stos sarl jo cmpsl arpl jns or jp add jno cmp jecxz sbb in sub mov imul mov in cmpb aad sbb lock mov mov push cmpl pop ljmp in mov lods stos rcr (bad) out stc cli into dec push outsb add fdecstp pop jp add repnz iret int3 stos je inc push or sub pop das es xchg fldl jb jnp fs lods or xchg add and sbb jno cmc rorb jae push lods into adc (bad) sarl mov pusha ret aad add pop sub std mov test dec mov out test fs ret dec in inc pop clc (bad) popf xor ret adc xchg pop dec inc (bad) adc rcrl scas mov add in lcall outsb inc fwait mov jecxz enter mov push sar cmpsb test pop pusha iret fwait outsb and xchg out and xlat add cltd movsb jge sub inc xor lret jb rclb cmc insl xor sub lea jno lds xchg lods and lods inc fstpl movsb sub in mov cs adcb jecxz mov mov pop sub and and fs imul bound jg xor popf loop pop lock lret scas lret mov aaa pop ja adc xor mov xchg sub cmp sbb (bad) idivb mov inc sub add and add icebp add or movsl sub fbstp or adc test or mov or cmp pop xchg (bad) mov out xchg mov xchg add fdivrl inc call jb enter xlat imul int3 test cmp mov loope ds pop and outsb (bad) std out push push jb jnp scas add outsl xchg lea lcall repnz sbb mov jg cmp js data16 mov addb sub add or out xor dec xor (bad) jnp mov lods into mov das mov daa and push jg dec fidivrl pop mov leave xor ljmp lret mov lahf nop mov aaa cmp push mov mov adc pop and outsl (bad) enter scas xor pop sub jno popa outsl notb iret std addl mov jcxz mov adcl stos sub mov int mov xor add jo inc scas lods or push xor jmp dec jle pop test cmp push pop xor (bad) jns sub fimul cmpsb leave sahf sub add mov in xchg dec add inc push mov dec bound fnsave aam fadds stos inc sub jnp insb push cmpsb sub movsl mov sbbb xchg dec push add into lret jecxz or nop cmpxchg add test push adcb dec repz lcall insb fwait cmc cmp sbb sbb sub inc dec test cld je lret mov repz ret sbbb jmp jl test push test inc dec or es xchg xchg daa sub in inc lret js aad add pop pop ret outsl jne adc lret xor push cmp nop cli pop jecxz stos and jae push xchg in sbb xlat inc jge adc mov mov data16 jbe dec dec les (bad) lods or cld call inc push out fwait lret in xor ja dec rcr subl loop xchg arpl test push sahf out outsl fstps or sub inc lcall pop test lea out mov seta es add cmp test xor pop pop lock xchg out scas (bad) dec adc jno gs lods mov aam notl adc add or in in out mov adc and cld fistpll fbld mov and cmc adc aam adc and pop cli cmp sbb stc push cmp cmp mov cmp inc sbb and push push out jp sbb rolb adc sub jbe cld mov std push out ret in stc cmpsl lcall (bad) addr16 fcoms dec cmp push shrb movsl mov (bad) pause mov dec mov movsb fidivl (bad) pusha daa push pop jbe add sbb pusha jo xchg mov xor cmc mov daa (bad) movsl sub call dec lret sub daa fldl mov mov daa arpl sub pusha (bad) cmpsb cmp es and iret mov stos mov mov fisubrl subb (bad) lret xlat lods aaa fstps scas dec inc insl mov cvtps2pd mov stos xchg jbe xor mov ret sbb fidivrl mov popf adc mov fmulp cmpl jmp (bad) mov test xor (bad) loopne icebp lahf arpl dec push sarb in lahf (bad) sub fcoms fsubl adc cltd push sub sahf stos in mov scas jmp mov jno icebp insl hlt std sub adc mov jg jl sub mov pop mov ret stc add dec leave sub fnstcw stos cmp mov lcall outsb lret inc sbb fistpl enter add pop cwtl adc inc mov mov mov cld and into leave jl adc imul or ja into inc xchg dec mov adc push insb decl jno and rorb (bad) lcall je mov or mov jle mov fcomi (bad) ljmp or mov lods out sbb jg repz push mov push mov sub icebp cld test sub xlat jns out pop arpl mov into cmc stc and ret mov sbb lret xchg jle aaa xlat inc jb pop sub push push sti sbb imul xor adcb mov call (bad) pop bnd rorl jb jecxz ret outsl cli stos mov sbb jl outsl add les mov sbb xchg xorl mov mov rolb aas mov xor and or dec shrl mov xchg faddl add cmpsl cmc std mov adc outsl adc aam adc mov sahf into mov sarl fcmovnu cli (bad) pusha (bad) dec mov popf cltd lds jl or jl mov xor es pop pop rcr add inc test andl sbb or loope ret push idiv adc hlt jnp in inc cmp xchg and or (bad) mov popa push movl sbb lret (bad) aam xor add inc mov add add sub outsb stos inc sub int mov xchg sbb imul pop xchg addr16 jmp in aad scas mov xor pop push jae icebp outsb pop mov ds adc sbb jne into jle mull outsl mov push pop mov jbe test jnp divl in and sbb sbb jo jo movsl das push inc in sub sub cmp loop roll push loopne into and loopne push pop std mov fwait scas enter cmpsl or cmp xor add add dec pop lahf ret daa pop les inc pop jae aad fucomp rcrb or push xchg aad adc cmp test mov mov out add loopne fs in bound rcrb fwait xchg inc xor into enter mov pop mov loop stos out aad pop (bad) rorb xor ja xchg adc lcall sbb scas mov inc cmp mov inc lods in mov bound xlat jne cld scas lods inc sub clc inc mov jb mov movsl ja inc xor xchg popf cmpsb jno mov or movl dec test imul dec shrb push jge jg stc daa push clc (bad) adc je adc sbb stc xchg cmp or (bad) mov xor xchg push scas movsb pushf jmp xchg and pop adc mov pop jne xor inc mov xor xor jae xchg clc jge xlat mov pop and mov pusha repnz mov pop cmp pushf je and push insl inc inc (bad) xchg mov sbb push fchs fwait dec imul dec jo cmp mov (bad) insl mov add xchg pop fidiv insb pop stos test mov push cli mov or test aaa xchg push (bad) daa xrelease and hlt xchg ljmp mov inc pop mov aaa mov jmp push cmp leave test pop lods mov stos stc dec add sbbl mov inc rorl xchg sbb jl mov lods int sub shr mov mov (bad) mov mov mov in into cmp cmp push dec outsl mov lahf lds test fisttpl lock push ss int3 ja jns mov xor gs push inc mov orl lret adc mov push jae std imul aas jle xor (bad) in (bad) fidivr aaa fisubrl (bad) jmp push sbb push adc iret mov (bad) jle xor aas idivl imul pop xlat sub push ret cld popf (bad) cmp loop lret mov xchg or inc adc lahf jg stc out jg stc out jg stc out jg stc jg add cmovne in jge mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and mov or (bad) fnstenv fcomi jg jnp xchg pop or and add arpl loopne mov leave clc lret dec sahf sbb mov mov ret lock pop or (bad) or decb call ja es insl (bad) jno push scas es das adc imul sbb fmuls sar mov cmp in incb mull xchg int xchg orl (bad) loop jg leave pop imul pushf dec imul push popf adc xchg sub jbe std sbb (bad) leave lds repnz imul repnz mov mov adc cmp orl mov pop inc out jno imul ja sbb push imul shll xor loop mov mov lods (bad) mov ret roll pusha cs gs mov inc fsub fidiv stc adc sbb (bad) test scas movsb insl dec (bad) loop add cmp orl dec lea stc outsb pop cmp cmp les xor sub sub pop les lret aas jmp pop pop roll outsb and jl xchg or cwtl scas add enter or jae xor xchg in clc pop mulb lahf (bad) in imul fcompl or add negb data16 icebp pop add aaa mov notl push std jne pop push xor dec or sbbl xor xchg jnp cmpsb (bad) adc push out aad (bad) cwtl aas ss xor sbb or jp jb lret je cli sbb xchg sub stos ss lea out pop mov push subl es out fsub stos rorl (bad) pusha xor push add scas or scas and das nop add fcmove jmp fdiv xor iret (bad) adc and loope xor jns jnp xorl das fcmovnu inc dec (bad) and xor roll ja cmc insb mov adc pop (bad) mull addr16 sar out pusha mov and inc (bad) xor daa cmp xchg push rorb lds andl push cltd or loopne enter sub sbb js cltd rclb push icebp icebp sub out push dec pop scas inc pop cmpsl jb leave pusha repz fs jl or sbb jmp insb push aad jle sbb lods ja mov mov jge xlat and es dec jnp sub test aad outsb push (bad) jne xchg mov xchg addr16 fist cmpsb insl pusha mov rcll fisubl push or jo jl mov in dec icebp or dec pop inc icebp pop in movsb jae mov das ret rorb ret repnz fdivrs mov xchg or push sbb ds mov cli dec jbe and bound xorl push cmp gs sbb (bad) mov lret push stc sbb out ja pop jnp lods mov call and push jp sti pop add mov mov dec loopne leave out mov sbb adc mov es and xor jl xchg incl repnz aam fistpl scas cli jo ja inc ret in xlat xor push and sub cmp ljmp jae pop out pop pop sbb sbb cmpsb mov mov dec int3 sbb es test clc push dec xor push or pop ljmp push es adc jecxz mov mov imul push ret jge sbb ss inc or enter call aas aam or jnp lret nop es out bound aaa sbb outsl lret mov jecxz sbb inc pop lret lahf mov inc push cwtl daa or mov movsb movsb jp fimul leave jae adc popf scas inc pop pushf cld jmp aas in mov adc push mov sbb xchg ljmp push mov ja xchg fiaddl icebp aad sub outsl dec out or pop mov enter cltd fidivr adc out stos pop cltd ret ljmp push orl push jbe add in lods out dec sbb int or jmp mov in jp xchg mov add inc stos fwait mov dec sub lods (bad) stos ja xchg test mov mov lods rsm jmp sub stos mov lcall push nop pop js negl fisubrl in cmp and rolb data16 push adc xor stc mov mov sti xor pop jecxz fdivl mov mov inc cmp je and fnstenv rcll mov imul aad test add or xor and rorb xlat jns cmc stos ret insl stos insl lahf dec mov daa or dec hlt pusha test xchg jns or jmp jb adc addr16 sbb jl or mov xor out fidivr shl (bad) lahf pop and leave lods jl shlb fwait pop icebp lea ljmp fildl pusha dec dec testb and in and inc sub imul mov xor jp mov and (bad) dec cmp or pop arpl add call inc loopne sub es push sti out fiaddl leave xorb pop dec in shlb insl and or pop jb inc enter inc out in xor xor sarb jmp sti jecxz sbbl mov jno cld mov push testl xor rol xchg pusha push (bad) sub fldt sar insl mov push stos jo stc (bad) fsubrl xchg cmp mov xchg test mov xchg or out sahf data16 mov add push daa mov pop ja pop cmp inc es xor adc mov (bad) sub aam std add mov sti rorl adc cmpb aas cmpsb in out push dec inc xor xor test fdivs cmpsl sbb jmp pusha mov (bad) sbb es pusha pushf out sub sarb clc (bad) sub into enter fmuls cmpsb jno test out cmp or in push xor pop shr (bad) loope orb icebp adc jp out xorl ficoml call pop sbbl cmp push push out cltd push ret or lret push cmpsl lods mov jb adc test pop push cmp cmp dec mov test add hlt sub (bad) nop movsb xor cmp test ret std fucom or lea lock ffree cltd mov (bad) ja mov mov call es mov lcall mov jl aas adc and xchg adc inc mov cs out je out std dec adc les cmp rcl inc cmpl lods insb add mov repz add cmpsb (bad) pushf das pop sbb lcall xlat mov test sbb cmp stos pop pushf ljmp jno jg dec cmp sbb mov or push fucom xor loope cli aam push or or sub jg in and xchg lret int3 mov mov inc dec push xchg lcall test dec les loope std push dec aaa inc pop pushf xchg sub or fildll cltd jmp pop push in jmp mov mov lret pushf adc xor icebp in xchg sub pop clc jl adc mov and push inc sub orl push mov ja out (bad) or out jg mov mov shrl push fldcw or sub mov lahf fcoml ja adc repz insb popa push into sar dec xchg stos dec lret fsubrl (bad) (bad) sbb bound test sub mov (bad) jo ds dec adc cmpsl xor sbb dec dec das lea mov jg subl dec int3 cs ret in stc jmp ljmp mov fdivl pop sub or xchg cmpsl call pusha mov pushf add pop cld jg ja jl fucomp dec jae scas mov and loopne jp pop pop scas ljmp shlb js mov xor pop mov rolb cmc or out pop push cwtl sub jne and sbb fsubl xor sbb xchg in loope jb lods and aaa and jge mov test imul bound das inc aam loopne jge fwait rcrb dec call sahf and sbb stos xor jb movsb mov mov lds dec lock stos dec jmp and and call and andb adc (bad) inc jo inc test enter cmpsb dec cmp sarb mov arpl fadd xchg movsl xchg (bad) mov fldz jl lea or fwait and sbb orl imul pop or pop add xor mov imul cmp or shll cmpsl cmc nop add outsb sub push nop mov mov xor out xchg cmp cmp add in imul xor push mov cmp stos test inc lcall mov stc mov aam jb aas addl adc std mov cmp jl mov jno inc or fwait jae das out inc (bad) aas std fcmovnbe fisubl icebp and (bad) aaa scas xchg add pop sub and or into fnstenv mov in pushf sub cs dec cwtl dec and data16 dec or lods adc and shlb xchg sbb loopne cmp mov add sti fstpl or stc mov mov inc add mull cltd movsl aas int3 xchg fincstp push or (bad) aam jle in xchg sub push test adc xchg aad mov mov dec mov jb clc pop xor sbb call mov xchg cmc cmovg or sbb shrb adc and hlt dec mov cwtl fldl sub loop lock mov leave add mov jbe pop (bad) inc dec cmc push sub dec aad andb addr16 popf jle int3 leave inc jnp xor mov inc dec mov pop lret dec repz add fild test dec mov inc stc xor fstpl inc popf inc xor mov ljmp sub das mov frstor ja ljmp lret enter movsb add in sbb cs ret mov loope add jg std push xchg mov push fwait (bad) stc popa dec mov jae inc cmpsb jecxz ljmp adc ss lods push dec inc jnp mov (bad) xor or mov loop mov je jno adc in out test jle (bad) sub lock adc jge les decl mov call pop aaa test (bad) fwait or and mov leave cmp and pop sub pop mov cs mov imul popf sbbl movsb or (bad) scas xor sub cmp cmpsb lods pop dec cmc pop (bad) fldcw inc mov ljmp inc or lods cmpsl cmpsb mov ljmp mov mov lcall insb (bad) cmp dec sub jle xchg dec lret mov dec mov jge pop ja jl cli and sub jns je mov pop add imul push data16 lods pop dec mov jns popa mov and and in rorb test pop mov in jge adc dec addr16 xor rorb int xchg in mov lret xchg scas pusha rorl stos (bad) leave add repz test lea loope pop inc adc pop adc incl cwtl inc lahf sbb int3 popf fcompl mov xor fcmovb movsl push jl and out adc sub cmpsl xchg stos ja or pop xorl rcrl mov roll sbb hlt int3 in pop mov inc mov dec or pavgw rorb fdivp leave sub scas mov imul ret mov xchg (bad) xor pusha or shrl mov mov fabs sub jbe (bad) fs push cmc sub cmp sbb or imul pop mov jg adc int3 xlat push add repz xchg fldt sbb cmp dec enter mov test adc es mov xorl pop cltd jne mov jmp scas sub repnz pusha push and pop adc jmp mov dec pop push sub es ljmp cwtl push sahf negb ret out pusha lcall mov add push push ret sub dec dec sar lds out repz pop loopne fisttpll pop test inc nop movsl and or cmp stos jg clc add nop add ficomp jge cmc pop das ja out sbb jnp push or enter jl add fildl or xor cmpsl arpl adcb andl sub inc xlat aaa enter cmp lret movsl pop jno lcall testl dec into fucomp mov cmp add or aad pusha pop ljmp xor fs rclb adc bound nop sti in popa mov xchg outsl jge std shlb test scas jecxz pop ret les mov push fimull inc xchg rcr dec mov mov sti cmp xchg and out (bad) gs xor enter adc and dec xorb push rcrl (bad) pop test pop lahf adc test arpl push loope hlt (bad) loopne dec inc insb pop clc inc dec cmp push fwait or pusha iret (bad) push idivb out sub in mov mov push xchg mov bound orl imul dec or call mov sub dec hlt jo cld (bad) das add inc (bad) (bad) (bad) pop sbb inc mov ljmp idivl call lea xor push or data16 jmp fildl scas inc in je pop sub test lds xchg sub push es mov lock cmp out out xor arpl loopne inc stos jns icebp mov fucomip cmp pop sub mov push sbb dec scas je mov push in add push inc repz (bad) jne mov (bad) packsswb movsl in repz mov or adc cmp mov stc pop addr16 xlat lock jecxz sub pop xor push repz imul or dec or push dec sub dec push (bad) mov pop ret jnp in mov mov aaa fldl push add jno add mov pop leave and ficomp test xchg push jmp xchg popf jno sbb cld mov xchg pop fnstcw add fbld insb addr16 enter dec fcmovb adc outsl fwait int sbb and das aad fdivr movsb in sub pcmpgtd imul push inc lock or xchg or (bad) cmp pop ljmp bound cmp sub pop les xchg or or neg and push mov mov jns subl inc inc dec sub mov dec iret rol mov fldcw popl sbb lret stos jo cmc scas cmpsb pop mov xchg jp add in dec jmp pop adc scas dec (bad) pop sarl xchg cmpsl rorl mov jle call scas (bad) sub bound pop fidivrl test push inc mov mov mov pop adc cmp add rorb outsl (bad) cmp sub fnstenv and cmp or adc divl mov packsswb cli sub mov add stc ja jecxz pop fucomp cmp jno in out cmc (bad) mov dec add (bad) es clc and subb (bad) sar rcll fidivrl loope loopne push iret fstpt lds pop cmp aas loopne or lea xchg lret jbe dec push popf out sahf (bad) jno mov ljmp xor fidivrl lcall (bad) dec pop sub jle stos js psubsw aam je add mov cwtl clc mov lds and outsb movsb push xchg and and sub test xchg mov inc push movsb push fimull rcll icebp add ss xor mov pusha add add adc dec dec test mov adc sahf fidivrl (bad) int3 scas mov mov sbb pop jo adc pop mov cmp (bad) sbb jo movsl mov xchg xor int3 (bad) loope and jne and jns dec jmp daa mov mov mov sti in xor and add cmp jge mov dec xchg xchg insl ds pop inc test out cmpsb sub imul mov sbb arpl mov push ret int3 shll ret adc mov lahf xor lret mov push push push push xchg aam ss pop out pop sub imul cltd imul rclb push sub scas mov ja mov cld mov outsb pusha xchg jae mov pop dec and push pop fwait repnz cmp out enter xchg ret (bad) leave push je int3 sarb mov dec sbb cmp clc lahf lret mov cli sub test mov inc xlat std notb out into xchg mov sbb imul (bad) cmc pop cmp sahf (bad) and pop ljmp daa xor clc push mov adc jmp fistpl ds jno jnp mov fstps popa jge or mov or lods lret push xor mov aad outsl adc out je mov ds js aam lock dec les jg and mov lods outsl pop in fdivr inc (bad) mov mov xor xor scas sahf (bad) jne push rolb xor imul push movsl xchg xchg outsb hlt loope sbb (bad) jns test fstp and cmpl xlat fimul cli movb fwait sub xchg jp ret or sbb and lcall fmul in add test ret divl sti mov jge push pushl pop jl sbb test jbe adc push cmp cwtl jns cltd sbb mov sbb rorb dec and fmull adc lock xchg mov or (bad) les iret jne jb pop xor or add mov sub lds std xchg add pop mov xor xor mov fsubrl mov in jne leave cmp pushf cwtl rcrb pop (bad) mov clc xchg mov lods adc dec and in push dec inc jae fbld push or (bad) (bad) lods stos cltd xlat or jno arpl pop mov andl sbb fisttpll adc mov mov mov (bad) clc lods aam (bad) lods mov popf mov testb cld lock movsb rcrl mov mov sub hlt pop bound loop pop pop add add fwait and insl fcmovbe cli jecxz push mov jge movsb jns andl adc xchg (bad) jno dec int ret nop adc popa xchg pushf and popf test jb rcrl adc sub lcall subb mov jno xor cs nop sti nop outsl int sub xchg mov loop mov push fcoms xchg lahf call ficoml lock insb mov shll ljmp sub dec pop je out loope lret out jo push sub out setno pusha dec aaa or call popa pop dec sbb pushf xchg push popfw adc xchg lods xchg inc push adc int3 in mov sub outsb popa dec push push adc in xor xchg (bad) jbe xchg test mull aad (bad) jo push dec push decl pop imulb adc rorb fwait cmp dec push jle xor dec lds loope add xchg (bad) fwait xchg test or inc adc fidivl out cmovl (bad) inc imul daa lahf push (bad) je fucomp cmp pop jge xor adc push push popf stos xor pop into dec test cmpsl lods inc mov and add cmp (bad) pop xchg out iret lcall pop pop sub pop mov pop cmpsl xor dec jg sahf pop add inc inc push loop cli aam jmp rorl jg jnp into out in gs lret sub lret test push scas jb hlt xor cmp ds jle jne mov nop lds pop in mov mov repnz mov xchg jmp cli mov hlt (bad) addr16 pop push xchg adc pop mov fisubrl jb mov mov sbb cli or fdivp or xor into test adc scas cmp das test inc or out les mov sbb adc pop aam and mov imull insl in xchg mov iret popf push push aaa or rclb or lcall in sbb mov fldl jnp or jmp dec pop clc mov cmp cmp pop inc (bad) fcoms or cmp xchg sbb jg std cmp cld out xchg or and pop mov sarl fdiv data16 pushf fsubs xchg xor fisubl ret adc addr16 push cmp shll aad mov rolb mov repz icebp sub inc in cmpsb aas cld int outsl lods sbb cs hlt test ds cld fmulp icebp out imul subl lret js xchg out push mov inc jle sbb xchg pusha std sub stos (bad) mov adc movsb fldenv sbbl or push data16 movl push (bad) xor stos test jp xor std push lods test fildll inc dec pop lret xor add enter dec pop inc daa xchg fistp notl stc repz xchg fdivrs dec in lcall sbb ja or cmp das enter xor stos in shlb xchg push popf ja aad fistpll dec js or sub mov and (bad) call rcr ret mov sbb rorl jbe iret jg cmpsl xchg (bad) (bad) ret lret fimull and pop pop pop add jno sub cmp lds adcl xchg sub xchg xor test in subl cmp add xor cs popa in jnp lret enter mov cmp fmull out cwtl pop push xchg adc ficom outsb fldt add jne (bad) xchg pop jmp pop mov adc fdivr sbb mov adc sbb mov sti imul das xchg aam lret clc mov aas popf fnstenv xchg daa dec cmc in call iret dec mov and inc sbb not jno bound mov mov out (bad) pushf sbb stc push (bad) cmpsb push pop adc das mov push xor leave dec xchg pop leave dec jg cmp jmp in rorl xor dec or or aaa or push pushf stos notl ss sarb xor in push das int mov sahf sub mov fs int3 rolb adc stc jno shrb hlt jno mov insl cwtl mov dec jecxz inc mov cltd adc (bad) adc rclb jo mov mov fdivrl inc xor pop (bad) mov pop lahf adc jne (bad) dec xchg adc into test adc jmp sbb out mov rolb fiaddl loopne jmp sbb clc scas mov inc adc sbb xor lds dec insl inc lcall cmpsb fisubl movb push inc inc nop fsubrs and adc sub out adc pushf (bad) movsl sub jo incb cld mov stos mov mov movsl xor mov sub aas incb jbe in push pop mov sub pop (bad) repz adc stos notb pop faddl fldln2 dec pop arpl xor (bad) icebp daa pusha bound mov and jle clc jle (bad) add inc push call (bad) aad fdivl xchg ljmp sbb xchg call lods mov dec dec add xorl fldcw jo cmpsl cld xchg dec push pop mov fwait push adc nop mov hlt push movsb mov popa xlat aas dec outsl mov idivl mov cmpsb mov fwait sbb ds xchg fstpt pop ja xor cltd iret inc sahf int3 mov inc ret jb mov dec cmpsb adc (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne add ds dec out movsl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg fnsave xchg mov mov jbe pushf insb pushf insb fcomi push fnstenv ffreep (bad) ds icebp add and add mov adcb dec je xchg call popf incl mov pop aaa push sbb mov lods mov pop jo ds push ret int3 inc add xor mov call and cmp jg into inc adc cld lods lahf in pop adc pop stc fs pop jb lock xor sbb in (bad) xchg push pop sbb in ret (bad) out in cmp movsl push inc xchg mov xchg rol push pop sub cmp dec fildl test (bad) insb dec adc jns lahf pop cmpsb mov sti int in mov mov (bad) hlt leave enter jge addr16 dec fimul out pusha (bad) lret push and xchg xor lcall adc das push stc jbe cmp popa cmc cltd mov jle pop pusha cli sbb inc sub sub mov pop jl aaa cmpsl daa int imul pop push popa fnstsw push imul pop sub lret int3 pop xchg dec stos mov hlt jb arpl mov adc test scas mov pop mov test jns cmp xchg stc xchg or (bad) jmp (bad) mov mov das mov add (bad) cmp (bad) mulb dec popa dec inc out xor mov lret insl (bad) jne (bad) pop add (bad) pushf pop dec sbb mov into mov cmp push bound repnz adc jnp cmpsb scas and mov adc dec (bad) (bad) (bad) fistl jmp inc adc bound lret ds lods mov lea dec ss push xchg movsb jl fwait mov push in ror push xor cmp pop jg xchg outsb and jo daa jmp mov (bad) pop (bad) aam inc sub stc in xchg fldl clc fnstenv test stos and int ret enter mov fsubr rcr jno dec sbb inc jmp mov ljmp xlat jo or sub push cmpsb push (bad) xor or mov xor add mov jle (bad) repz pushf mov sbb std sub pop popf addr16 pop clc jne add scas inc stos lea adc dec jnp pop mov inc js mov mov cmp mov cmp std out (bad) mov fsubl rorb ja push insl xor pop sbb fstl cmc popf test imul (bad) xor jp pop sub ret mov stos sub outsb sub adc mov jge and cmpsb fucomp (bad) scas call sarb add mov or xor inc dec xor mov clc movsb adc pop int sahf pushf jecxz and push in jg jae js xchg inc push outsl and push shll (bad) ds aaa dec xchg repnz cwtl push lret push or outsl sarl lock push mov push push psubd dec push (bad) imulb add scas pop outsl dec jne sahf les aam or in xor aas dec ret cmp rorl mov (bad) fsubp cs notb pop sbb push movsb orb aas add jo out imul dec popa sub add cwtl jmp mov mov imul sti addr16 movsb notl test rolb lahf cmpsb xor jne pop xor inc push push pop inc or inc repz addr16 sub adc mov jp push data16 ret sub or cmpsl outsl lods adc jo jge xchg lds add xchg xlat cmc or insb adc loop or inc dec jno loope mov arpl ljmp or lcall jne sbb roll jecxz imul jg sub loopne or xchg in dec sarb cmp and dec repnz cmpsb jne std xchg ret push inc and lahf sbb out insb repnz xchg add andb data16 (bad) sti add insb (bad) lock push (bad) stos sahf in jo sbb jmp mov jl stos adc loop push (bad) mov in mov in mov repz xchg faddl imul jns (bad) rep or cs loope mov sub mov sbb ljmp cltd xchg push mov jo adc hlt push or lock cmpsl xchg mov lods fs cmp (bad) push clc inc mov fcmovbe adc dec push es add int3 jns sub mov inc jb cmp bound cwtl push mov or dec adc dec cmp dec jns cmp dec adc fbstp xchg and pop ret cmpsl and jecxz mov (bad) mov pop jle add rol popf imull popf jae sbb scas sti xchg dec xlat xor outsl mov fcoms mov or inc mov fsubrl fucomp mov jg fdivrs clc mov lea addb and test ljmp mov inc insb xchg fisubrl dec cmp imul test cmc adc lcall xchg outsb cmp loop xor into or jg mov pop sarl push jle push test sbb dec push push imulb hlt pop stos sbb popa mov sbb fdivs (bad) out sbb pushf inc inc std insw movsb push data16 jns rcll xchg jl rcl push fstpl sub test stos sub dec unpcklps lods hlt je rcrb ljmp xor icebp or loop stos cmp clc cmp mov popa fsubs sti jl mov pusha imul pop enter mov mov mov xchg sub push out mov scas fs push pushw push ret xchg sub cmp insb test cld adc inc or ds mov jns pusha add lcall mov das and adc test repnz pop nop cmp mov jmp xchg sub leave and cmpsl ret scas cltd test xor dec pop xchg push ret ret js pop fist orl mov ret pop aad pop push ds or call outsl jnp ret mul mov fisubl daa rcrl add mov mov outsl xchg loopne dec jecxz xor aad repz nop lahf sarb call adc nop xor hlt mov sbbb mov enter cmpsb pop mov cmc fisttp pusha cmp out sub cmpsl movsl movsb add pop fwait movl daa (bad) xor dec jnp in cltd lret or lds mov lcall loop cmp test jno sbb ja stc hlt adc in xchg mov pop dec sbb stc pop outsl scas xor sub xchg mov nop cmc jns dec xchg into mov jmp pop dec movsb add mov (bad) js xchg cmp dec sarb xchg push push (bad) fild cmp add cli dec sar rcpps jmp push xchg fisubrl mov call mov (bad) pop mov ja xchg or hlt pusha shr push mov inc xor pop dec jno mov (bad) stc test sub (bad) out jne out scas pop sbb mov scas adc jne jb jmp xchg pop aam push ret jmp mov cmc int shrl add aaa jg xor insb pusha inc add nop nop mov icebp out movsl std shrb lods std jmp fnstsw rolb dec mov inc add xor xchg shrb lret add add sbb and lock pop mov mov cmp mov mov inc loopne dec xchg ljmp or rcrl dec outsb jae sbb inc sbb jecxz jle inc clc dec push inc les push push sub mov mov sarb dec pop ror rcr jl lret popa out out popa clc dec fmulp imul lock fs or call pushf (bad) call mov sarb out add dec aaa movsl mov jnp and adc leave inc stos push cli (bad) mov into gs mov sub push ljmp adc cmpsl cltd addl movsl or sub add les and cmpsb and or fwait lods (bad) (bad) push (bad) lahf (bad) movsb stos push and sar das outsl push xor test push sub das push inc fs mov daa loope mov jmp push push push push xchg mov xor ja das cmp mov xor int3 add test call and outsl data16 cmpsw xor mov int push xchg mov outsl push (bad) aam fsts mov inc popf adc aaa scas into aam dec leave loope and adc jb mov xor and sub fist xor mov subl (bad) pusha or mov sbb xchg jbe inc fdiv xchg jno push es pop xchg lret out mov fdivrs cmp cli xchg mov jge jmp or push cwtl and pusha push fsubrs and outsl adc (bad) ret xor pop aam mov imul cld add in cmp mov lcall xor lods clc lret adc xor adc xchg dec and and lock pop inc jmp sbb lds ds es nop sahf loop xlat jno fs dec les push call aad xchg mov (bad) movsl (bad) icebp ret ja lret mov adc push std test gs loopne mov jmp leave sub pop sbb ret movsl push sub push orl dec or std ds (bad) int sub cld out push jmp les ficoml mov data16 shrl mov or jb add lea mov cmp test mov mov pop lods xor pushf shll inc fmuls push pusha gs call ja jecxz sub lds mov push dec mov loope mov pop add push jno mov movsl insb lahf xchg cmp test loope mov and xor cmpsb outsb mov push xchg in cwtl dec (bad) pop sbb mov adc cmc data16 sbb add cltd jns add dec cmp ret xor fnsave (bad) arpl ret fmuls rcrb mov xor mov in adc dec in or push push push push pop inc popf stos push mov pop outsb hlt lea mov dec imul xchg sub popa gs adc nop stos icebp das scas ror jp addr16 adc ljmp sbb and sub jae sti mov push pop or or lods adc ljmp dec lea movsb mov jbe fdivs (bad) je add (bad) test cmp pop enter in sbb push jmp push and mov popf imul xor mov cli push in fimul ret jnp sub push (bad) sub rcll push arpl out add arpl and outsl jbe stos nop flds xor in xchg pop mov pushf cs xor daa mov cmpsl mov sbb cmp pop mov pop stc aad fs mov je (bad) xor sub packssdw ja xchg in fsubrl push insb pop cmp cmp jg push xchg push nop out cmpsl and inc movsl xorb push lahf stos jbe inc ja pop xor adc test and inc sti inc fwait in cli push dec mov cs mov dec imul movsb fs xor mov ss sub roll add push mov daa mov sahf jb cld inc sti cmp mov outsb inc into lds ret (bad) cmp pushf push std fadd fwait (bad) mov jl fwait xor mov lds stos jmp test mov or mov stc mov int3 lds push mov push xchg xorb jp and test cmpsl jnp xor push es or jb xorl jmp dec lods mov push cmp fimull dec aas mov stos adc add sub stc pop stos loop movsl int3 add mov xor cltd (bad) mov loope mov aas jl cmp loop cwtl xchg and das hlt pop fstps and nop xor and repnz ret mov fs in jp pushf cld jl imul dec mov int3 or pop lea lods dec pop out add stc cmp ljmp or jp cmc mov or pop mov adc mov inc (bad) popa outsb ljmp fldt lahf je jge adc cli xchg push xor pop int fwait dec push repnz scas adc rol mov pmaxsw mov pop sbb cmp frndint sub iret mov jl fs fsub insb dec push popa loope cmc cmpsl xchg xchg fisttp push imul dec sub mov adc insb cmp mov rclb push inc in inc fwait xor scas popa sub divb dec add push mov sub hlt fisubrl jbe mov xchg insb jne lea adc add lds sbb lret jnp jns add sahf mov cmp test jno ret sbb add aad in (bad) lcall ja mov popf test mov xchg and push sub sti lds popa addr16 mov lock pop jl xchg dec mov and lahf xchg push xchg lahf daa xor mov das out xor scas inc push xor pop inc and pop jge and nop mov sub pushf mov cld push xchg shll xchg clc cmp xlat inc adc sub ret sub xchg or cmp fmul out push outsb pop and dec xor cld sti lock and xchg iret cmp cmpsb mov lret xor dec femms inc rcl ljmp repnz push (bad) mov mov dec pop andnps stc addr16 pop xor rolb xor int aam popa inc test push jb test adc call mov xor test scas (bad) imul jb fdivr sbb lock stos sbb stos push ds daa mov mov sbb pop mov out mov je rol mulb lea sarl fs popa imul cmp or sub pop and sti add jbe je repnz loop jo mov es cmpsl jbe cmp stos into mov inc sub ss dec test insl pop mov loopne,pn sbbb dec sbb inc dec in mov cltd and push (bad) shlb out mov outsl jge jmp xor mov (bad) (bad) xor dec int xchg add stc into fnstcw in in roll aaa sbb jmp icebp sarb sbb xchg iret dec pop push loop xchg pop cld sarl jno mov cmp jb aaa mov rclb jecxz andb (bad) xor ljmp inc and sub mov cmp (bad) imul gs jns push (bad) dec adc and cmp mov mov inc push fwait or pop sbb pop fistl clc punpcklbw inc (bad) mov inc mov adc fsub mov pop cmc sbb jne mov sub xlat mov shlb push (bad) in cwtl adc inc jl xor mov test cld (bad) test frstor enter jne outsb (bad) out stos repnz push fisubrl jbe cmp pop push roll stos aas and adc (bad) cmp push dec sbb mov inc xchg data16 jns cwtl push fisttpl cmp fstps jne inc mov jle stc fcomp jb fcmovnu sub out lds inc ja aas pop dec mov hlt inc lods cmp xorps in dec xor jb jo std popf mov cmp imul lea cmp push cmpsb loop fisttpl jp hlt inc divl inc xor xchg or mov inc fs sub cmp test stc fs cmp sbb fwait mov (bad) std mov loope jecxz idiv or mov or inc cmp push dec js rorb adc lods adc jp fldl xchg movsl out cmp add ror into je sarl push cli or (bad) div loope loope push ja add sbb and (bad) mov (bad) push dec in push pop repnz lahf fnsave loopne add loop in cmpsl adc mov and pop icebp cmp call aad sbb movsb cmp sbbl jns mov xchg pop stos ljmp lret scas in mov lods mov jp mov push fucomp aam ljmp jg lods clc jb jno push (bad) mov subb fcmovne sahf nop jno mov imul adc bound sbb ja dec xchg sti xchg mov mov std int shrl lahf out pop add mov xchg aas inc mov push imul mov pop loop xor sub lret push outsl xchg (bad) daa clc addr16 stc cli outsb add and data16 enter mov add lret outsl xchg sahf pop sbb xchg dec sahf aaa jg ss outsl nop push mov adc js (bad) negb xor jp stc or adc mov pusha sbb sub adc in xor pusha lret cmpsb mov jg dec inc pop ss xchg js and testb scas fwait outsb mov hlt std pop ret insb sub into mov int3 cmp dec (bad) mov xchg cmc fldt (bad) cli sub xchg cld dec mov (bad) call add or and faddl dec inc mov (bad) lcall xor cmp test sarb sbb add enter out jle xlat (bad) inc inc cmp sub jo dec imul pop cmp pop fs inc cmp jbe cmp aam sahf out dec mov xchg cmpl leave dec daa (bad) test dec jg pop jo bnd aad (bad) jbe push (bad) push movsl js ljmp cmp aam dec enter rolb mov idivb into adc cmp aad ficoml and pop sbb pop adc aas dec cwtl fnsave add aad scas mov push shr jno lret es addr16 sub mov sub cwtl popf inc sub xchg mov (bad) int3 es jp xchg mov cmp popa adc mov push sbb subps scas or jns das popf out and popa lods (bad) cwtl sbb (bad) sub xchg lret insl ss inc sub or (bad) hlt popf xlat push testl and dec icebp cs mov cmp mov or repz gs std rcrb jno jecxz ret mov rcrb rclb nop xchg (bad) rcrb and xor push outsl test dec push mov push ds xlat daa test stos push sbb mov sti or xchg addl stc jle cmp negl test jge sti and pop lea jnp add xchg lahf inc lods fldl2t push mov and xorl int3 mov mov jecxz lea (bad) pop push inc jecxz push push mov push jbe push insb push shlb or cwtl daa push in cltd ja pop lcall jnp mov xchg jne call fidivrl or call xchg mov lret mov iret dec cmc push ljmp add insl into dec or (bad) cmp (bad) cmp sbb mov (bad) push add fwait (bad) test out insl data16 dec std cltd aaa roll pop pushf mov std adc push leave mov add xchg movq or jecxz lods int cwtl pop aam xor mov stos or dec test xchg inc arpl (bad) shrl in jae add and sbb pop sahf xlat jb test inc cmp fcomip out mov inc jo and xchg mov (bad) jbe orl inc enter daa mov loope je sbb jae loop cmp dec (bad) lock scas ja jl daa movsl ja and jbe (bad) stc cmp dec jbe cmp mov out in cltd lcall call adc xchg cmp fisubl jno dec ja in xchg ficoml jae or mov loopne mov out adcb sbb mov int3 jg pop mov jecxz jecxz adc mov rcr fcomi fild (bad) movsb gs sbb inc sub pop jl scas dec dec movsl cmp iret out test aas insb or pmulhuw inc pop xor jns push pusha pop (bad) xor fiaddl xchg fs cmp jl fnsave push js sbb jmp lods and xchg mov mov inc out jnp int3 shr pop jmp mov ljmp aad inc or insl jb adc pop mov jne into dec bound divl insl mov jg and pop jbe jecxz xor fist cmpl inc loope mov ror or ljmp movsl mov mov cltd pop enter or cltd xchg loope in mov jmp dec mov xchg mov dec js stos mov sub fstps icebp mov mov (bad) daa adcl (bad) gs xor dec cwtl xor (bad) loopne jnp xor je in lods and sti rolb dec cmpl lock push out int push stos je sarl sub (bad) fdivrl mov insb aad mulb push sub cmc out dec ljmp inc ficompl xchg int3 enter movsb push xchg push stos pop aad add adc sti sub or and and or lods stos inc js daa pop push (bad) push jge mov (bad) xor mov adc xor xchg xchg arpl xor xor adc mov jae push add fcompl in pushf cltd dec push xor mov sbb sbb inc xchg outsl jne pop popa in test mov test popa fdiv fsubl lods pop push adc cmp sahf decb xor inc fnstenv mov aaa xchg aaa pushf jne jecxz loopne add pop ret xor jbe js cmpsb in jae xchg fistp sbb (bad) (bad) fucomip mov scas adc es sub inc repz inc push punpcklwd in dec jl or sbb les push sub mov fsub inc gs mov push sahf add jae add and mov pop sahf rcll dec mov loope xchg cmp push xchg mov rclb add les iret dec xorb jge out sbb lahf insb ja pop sub test push test cmpsl mov jl push cmp scas jo into cmp cmp pop sbb movsl int3 (bad) mov pop xor add (bad) in mov jmp jb scas jns xor pop lods add data16 insl ljmp nop rcrl adc ljmp rol dec xchg outsb push mov mov mov or stc xor push ret push scas pusha popa mov adc pop leave mov jle stos pop adc push dec add (bad) lret push cmp xorl std into dec insb pushf data16 insl push cwtl mov std jmp shrl pop (bad) fdivs in xchg and js fwait in insb (bad) jp int3 cmp or pop addl jg int mov adc mov ljmp jns push mov lcall inc mov fmuls divb jnp mov mov sbb push jecxz sub cmp jmp int sti jg movl nop andl sub or mov add mov sbbb pop fnstenv imul adc movsb cltd out fdivrs les nop movsb or mov add cmp divb mov mov pop mov cmp xchg mov jns pushf mov pushf xchg jg cmp xor sbb lahf daa cmc pop js aam push pop ret add mov sub sub lret adcl out test clc popf push adc adc pop (bad) rcl imul in imul cltd dec iret add int3 shl sahf xlat cld scas push add pop xor and add sub jg xor mov xor ljmp pop or cli sbb jmp xor std test enter adc xchg out (bad) mov mov cli nop nop in pop pusha add jno dec std push xor out push cmp cmp xchg das add aad in push lret mov add (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl pushf mov add jge sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne mov insb (bad) mov fstpt sub lret (bad) testl mov add xor aad ds jno neg mov test xor adc loopne movsl insb cmp pop adc mov mov or faddl paddusb pushf push (bad) notb mov or in out test movsb les lods xchg dec push cmp std push addr16 repz and xlat fmuls push mov or push inc out sbb movsl in data16 insb fwait (bad) mov popa lock push push dec frstor call inc call jle jle insl out cmp or test movsl movsb mov mov pop cmp in test jb fdivrs popf cmpsl cmp aaa (bad) ja cltd jle ja sbb aaa mov mov cli popf sbb lock clc fcompl call insb aam decl ficoml mov cld popw sti inc (bad) lock sbb mov push adc adc into and mov xor add stos lock xor hlt push dec cld xchg pop in bound into (bad) idivl push loop or out push xor or (bad) (bad) hlt dec cmp mov movsb or aaa sub sbb js mov jmp scas dec dec rcll sub imul xchg mov rclb adc mov (bad) xchg cli jns add inc pop sahf test inc jno mov out adc adc cmpl xor dec xor or adc jp mov push scas scas cmp cld sti add push or jbe into mov es or ja std fucomi jecxz mov inc add xchg lret ficoml add pop xchg lods outsl sub jge sbb iret mov xchg in add and pop (bad) dec jg cmp add mov cmp xchg mov jge cld fisub lock push je aad imul push fisubl and mov jle push addr16 mov xorl bound test cmp cmpsb xchg xchg ja push jmp pop lock jge sub fstl mov popf pop stc jge popf push outsl out dec add enter inc jno and rol std loopne fistpll (bad) push mov jne scas cmpl xchg add sti mov loopne fs dec jmp inc mov xchg int sub dec (bad) cmp negl and sbb cmp rcrb cltd repnz loope cmc xor rol sbb out mov neg sbb mov jns jl adc imul cwtl push add add (bad) scas out jmp arpl sub cld insb loope xlat adc arpl cmc scas cwtl inc push insl orl pop jge sbb sub lsl into push or adc mov xor mov jmp cmpsl fdivrp jne add sbb insb and xchg adc and in xor or and xchg daa outsb mov nop (bad) cli aad cmp xchg ret push push test aad dec aam icebp inc and and test push pop mov cld cmpl int3 (bad) shlb sbb (bad) rcrl mov daa (bad) addr16 jne ret (bad) sbb ret sbb outsb shll push mov ss (bad) enter es sti pop divl aaa xor loop pop cmp js negl mov imul insb sub jo rorl aam shl jbe,pt jmp cmc shrb das pop mov inc adc rolb and sti sub test add cmpsl pop sbb in int3 icebp iret and repz jb sub sub and fisttpll into sub and scas or add mov mov idiv xchg xchg enter push sub jl es lds mov fcoms adc push sub das andl pop mov in test movsb sbb inc pop cmp maxps pop xchg sbb incb jle inc cmpsb pop inc xor ljmp rolb ficoml inc jae jbe arpl outsl cmp in (bad) cs divl sahf push dec mov cmp ja ja jae stc sbb movsl sbb xlat and sub cmpsb mov call push mov mov ljmp sub cmp fcoml dec sti aam mov jb ret xchg push mov sub add out xlat jge mov roll xor stc mov dec or jecxz pop in sub lcall insl pop stos out cmc popa lods cmpsl jns in call lret push loopne cmp dec call (bad) inc xlat dec dec bound fistpl or cltd mov outsl sbb aas push test or in adc cmp mov mov pop bound imul mov adc cmp push push xor int subl jle cs call xchg jecxz bound in call mov xor es inc cmpsl and cmp fild and insb cli sbbl mov adcb push pop push cmp add ljmp push shlb fistl push cmp es xor loope xor jp fidivrl cmpsl pop inc push sbb jmp xor push or jp fdivrl inc lret jmp cmp jae jns dec popf loop fdivrl bound mov push xchg or cmpsb adc mulb mov fldl xor nop xchg xor (bad) clc push inc mov fs pop adc je clc xchg in (bad) jge mov sub xchg je out mov hlt mov cmp rcrb mov add pop mov rcrb jo lahf test rcrl lds ss xchg cwtl arpl sbb incb stc mov pop cmp (bad) fisub aam push cmp ja push and cmpsl xor cli and xchg mov mov mov xlat cs mov pop ss popa bound lahf add or cmp add divl sti jo add (bad) inc cld sbb mov jmp arpl add pop xchg adc mov or sahf sub mov lods jb adc push mov aas lock xchg mov xor rol pop test (bad) cli pop imul push pop inc push popf cmpsl sub minps das and adc xlat cmp scas mov jno lea add push mov dec add outsl push pop cli pop jle test test sub int3 ja pop push mov push outsl adc add dec and in and (bad) pop test ret dec (bad) pushl ficom adc jo push repz gs jae add mov fldl or push and jecxz sahf pop test popa lods sub sbb cmp cmpsl sbb test add xor adc dec subl mov in jmp cmpsl sub and lret jae adc jne jmp cmc mov cltd mov push addb add (bad) push jmp jl nop and pop movsb insl sub call adc push and mov fnstsw scas push push cli (bad) into cli jbe out ds scas jo and jns mov jnp or xchg cmp mov test imul (bad) (bad) in inc ljmp sbb das lock mov adc mov mov inc lock cmp pop push cwtl das scas jl aaa cmp (bad) ljmp or les out mov cld push push push and add fsubrl push orb and scas addr16 fwait lret gs cmc ret jno (bad) rorl je xor cld fisubr cli or cmp inc xor aad mov pop in das outsl movsl push adc mov test push sub sbb sbb adc (bad) icebp stc sahf test insl or adc lret dec mov adc dec daa ljmp xor pop je and xchg inc sti jmp test pop insb std les xor mov lcall dec mov jp arpl adc enter dec stos stc adc cmp push mov cmp xchg lods pop mov popa les fld out popa mov cwtl mov pop xchg dec push xchg mov dec scas repz daa pop aam push movsb ss jmp or sahf push movsl in data16 xchg inc sbb clc add (bad) cli inc mov movsb stos lea mov cwtl bound scas int3 (bad) cmp jle xor jno mov mov loopne fldl sub pop inc mov add push insl push nop ss inc cld xor ficom lret push jp out mov repnz adc pushf fwait mov cs sbb push loop inc aam nop adc and or sbb cwtl stc jb cmp pop (bad) or add fidivrl fwait mov mov or cs aad iret mov add mov jl pushl mov invd or inc fidivl cli test aam pop sub in (bad) adc xchg sbb lock add fstpt popf out test (bad) pusha aad mov jo,pt push fsubl fnstcw inc inc iret repnz and in test xchg push or out scas outsb and mov iret adc fnstenv loope jno jecxz lahf inc pop stc pop adc sbb jns push mov aas cmpsb dec scas push std sub adcb jl scas rol pop mov repz loope sub mov ss dec loopne insb jb jae inc add mov xchg sarl enter js cmpsl scas ljmp dec loopne xor sbb jmp inc mov test divb pop sub cmpsl jb add test sbb inc xchg mov fndisi(8087 test dec ljmp sub xchg jo je cmp fidivrl cwtl test mov sbb (bad) or insb sub ss (bad) je mov ret movsl jp push pop jo in push inc mov pop add sub push lods sahf aam cmp jbe gs dec (bad) jnp sub or xchg outsb out xor not push xchg inc lock sti fnstsw ljmp adc add adc mov lret push inc push out ss sub mov outsb call loope aam into pop fldl push dec xchg cmp ret in xorl pop imul push add movsl push sub mov lret and dec into (bad) stos incb sahf mov cwtl gs jle mov jne stos test (bad) fmull hlt sub dec sub outsb cmpsb sub inc jecxz push adcl cwtl dec push pop mov fildll and jae and mov andb test (bad) fistpl (bad) andl pop sti sahf lock loop ret movb mov mov push lahf (bad) mov adc gs gs jecxz xor repz outsb sbb xor cmp xchg arpl leave mov test mov outsb inc out cmp inc lahf dec pop rclb mov dec sub lds js,pn cmpsl mov cmpb xor jae sahf pusha lods clc cld xchg fnstsw test sbb dec addr16 mov mov (bad) icebp pushf stos push or mov sub cmp dec sarb xor loop xchg lahf mov jle jle add out aad fs scas mov xor jmp lds xlat cltd mov fdivl add push push repz xor and inc movsb sbb fild mov push loope xchg aas or mov hlt outsb jmp sbb jb repz push mov (bad) cmp jno mov and orb dec jg cmp je aad mov addr16 lea dec push push sbb iret (bad) popf dec mov add cmpsl test push ret adc gs faddl xor ss jne mov dec lods jns cld subl adc lcall add xchg mov stc mov loope inc lods lahf repnz or pop xor xchg fdivr mov cmc nop ja sub mov mov ja push ficomp imul push sti mov dec mov mov sub jo ret adc jl (bad) lds clc sbbb out jmp enter (bad) mulb push inc sub mov jp cmp lock in push adc shlb pusha or aad push daa push ret xchg and push lret add and clc lcall (bad) mov mov mov xor gs adc out mov cwtl pushf movsl sbb mov pop fsub dec push test add sub in jae or cmp xlat mov (bad) mov inc push adc mov mov int3 es inc bound dec mov fstpl stos imul mov cmc hlt and lcall pop jo pop clc mov jae cmp xchg sbb push sub sbb jns push int3 adc hlt adc jo repz and jo add jmp mov fisub xor push push out or jp fnsave cmp inc inc cltd fnop out imul cmp add and outsb scas push sahf mov adc push sub decl fs xchg cld mov adc movsl sub jb loop sbbl push mov ds fwait or lret pop lret shrb (bad) loopne mov cmpsb inc mov and pop arpl and xchg jl lock xchg mov into xchg test and sbb mov mov outsl cli and xchg mov cli cmc notl (bad) xor cmpsl push xchg jns pop (bad) mov loopne loop dec (bad) ja jb cmpsl fcompl sub cmc push cld fwait lods scas xchg push movsl mov push in scas jmp cmp push push sub imul push and or iretw (bad) push test mov stos mov jle pop pop cli outsl fbstp outsb fnstsw sbb inc jl xchg and xor cmp mov orb ret inc fwait sub jbe dec loope cmp (bad) stc sbb fwait mov inc loopne ja cmc sub push add mov pushf inc lds dec repnz fldl out mov mov mov jnp inc dec aaa cmpsl jecxz cwtl test loope (bad) mov pop fucomip inc nop outsb sub xchg test or mov es xlat jae xchg (bad) or addl in outsb inc loop mov pop or fistp imul mov mov fsubrp jne in cld add and cmp jg jl inc lcall mov pusha jnp jecxz xchg and pop jno pop cmp mov xor and sub inc pop mov push cmp jb cld cmc inc (bad) mov out out loop nop outsb mov mov clc sbb call jl or push into adcb dec sbb xchg cmp shl sbb cmp jne xor adc inc lods and xchg lock out loopne icebp jb les xchg ljmp outsl and push xor pop mov ss inc mov push loopne mov dec fmuls test adc pop jmp inc pop stos (bad) into mov lret arpl add pop or cmc sbb int3 add dec dec clc mov pop data16 dec jns sbb mov dec frstor mov push outsb icebp or mov icebp xor (bad) inc aaa ret xor push mov ret add daa cmp pop pop (bad) xor lea inc movsl sarb mov pop adc mov arpl sub push sbb xchg adc mov pop div inc lods adc es ret push jb fucom jmp idiv cmp nop gs pop (bad) mov ret cmc and jae popf xchg (bad) jne out mov mov jge jmp hlt xchg mov je (bad) movsb jp movsl js orb xor lahf xor test inc nop stos mov lcall mov add push outsl daa mov mov inc mov adc mov or pop mov mov jo fisttpl jo rclb sub cmp sti pop sub hlt cmp cld fptan or lret mov into out push sub or adc int3 pop dec nop xor ja out pusha outsb pop mov js sub addr16 push mov mov sub push aad cmovae imul add ds jecxz push xor stos cltd cmp call adc xor push push and mov inc pushf sub mov dec xchg adc test repnz lret sub cmp and dec call test push mov mov fadds pop push jns popa out imulb je xor and push shll push sub xchg loopne inc cmc test xlat dec xor stos jnp sbb aad (bad) jmp repnz pop sub push mov inc movsb mov sub xchg and aaa xchg and imul mov (bad) pminsw xchg jmp (bad) fwait mov mov mov and gs lret pop test or and push adc pop adc lods add mov bound xchg outsb dec mov pop sbb movsl ja jp cmp pop in daa negl imul les lods outsl push fst pusha cmp (bad) jl mov adc inc andl fs pop (bad) std dec loop mulb int hlt sti add jge lods (bad) sti daa int adc dec xchg (bad) lds xor mov repnz aas mov sbb ljmp out jmp mov mov dec stos mov sbb (bad) xchg outsl fild data16 (bad) icebp fild addl cld stos int3 sub aad and jns push outsl dec fsubs xchg (bad) ret mov stos lods xor xor xchg add into aad fisubr out lret shrb push test inc outsb mov (bad) and fstl test cli sub icebp (bad) dec push lods add and popa mov adcl fnsave cmp jecxz add and cwtl sub mov cld fldl rcrb arpl push (bad) fimull decb testb mov dec inc xchg popf sub mov rep jns push xchg sbb mov inc sub cmp jecxz push pop dec push sub movsb pushf pop adc pop or jl ret aas jno jb cmc in jg jne mov add jb imul fimull and cmp sahf pop push fdiv and gs jg ss xchg popf xor icebp jg add (bad) xor sbb aaa xchg ret call sub pop pop out add sub bound lods lcall lcall hlt cmp jecxz or das mov xchg and mov imul mov lcall xorl pusha jnp pusha and fcomps cld dec sbb (bad) mov popf les out cmp add adc jg push (bad) mov jmp sbb inc cmpsl scas aas out scas mov aaa push jb mov mov sbb loopne mov mov adc mov mov outsb cmpsb mov ja ret and inc jb push pop add mov repz in scas scas mov out mov loop ffree dec leave add push std xchg ret loop mov dec mov xlat cs pop mov les clc push sub leave xor push mov test into cli fwait fwait iret loopne dec nop xchg adc mov add jno out (bad) jge sub ljmp jp inc decb push lea and jg gs (bad) adc aaa dec cmc xor aaa push pop push popa or fcompl adc dec fnsave flds out push push dec aam enter add push hlt sbb lea jl loopne jmp adc mov mov xchg or scas or pop (bad) and push and lcall (bad) pop add mov sub (bad) and sbb and and dec mov adc push xchg in (bad) in push loop add mov fstps mov addl pop xor mov push popa fnstsw jno inc xchg xchg push lret mov jno pop sub dec jecxz xor jecxz aad push sub aad cli mov daa cld in (bad) je mov notb xorb das jg jns cmp imul test dec fldt arpl or leave mov xchg and fldenv push push pop mov fwait in sbb jp cmpsl in sbb push roll cld or or fwait cmp lret iret lock lods fbld (bad) sbb inc add add and cld xorl adcl and rorb or arpl add out insb cli cmc or shrl int3 and je iret ud2 scas movsl test jecxz (bad) stos jle adc pop pushf outsl cmp pop sarl pop movsl push pop cs (bad) (bad) lds and lds or sub lds jno loop fildll or jbe jge stos mov or cmp push and pop push add lcall sub cmc aam outsb in dec lods sbb or add mov pushf jbe pop jle mov dec pop push cmp sbb (bad) (bad) repnz xor sub sub cmp and outsb addl lods lods ljmp mov clc sub gs fmuls push sarb aaa ret xchg and mov fiaddl push in lds xor mov xchg jmp aaa (bad) cmc dec xor outsb bound and fildl faddl addr16 sahf in out ret test daa lahf (bad) ljmp xchg xor insb jecxz mov xor adc stc frstor imul sar sti sub inc addl mov or fs aam xor mov xor aas jp loopne xchg fsubl incb cld adc push push mov out sahf mov mov movsl push lods mov rolb jbe cmp or inc or stos cmpsl outsl popf sbb (bad) ljmp sahf scas push pop mov imul fsqrt mov popf sub jae rclb sbb mov xchg mov daa divl mov or push jp faddl mov test mov adc movsl mov fisubrl pop jne cld mov dec mov pop jbe vpcomud out dec jg lds sbb dec xor divb in mov mov roll lahf idivl cmp sar mov jbe lea push enter push scas push xor (bad) ljmp xor xorl inc out or mov pushf gs mov or vhaddps add inc or in adc xor mov jle les mov loopne xchg mov push mov inc dec stos lahf fild cmpb pop push or addl push jmp insb and pop ljmp add adc push mov dec in jbe xchg or repz stos lahf add and jae fcmovbe sub movsb mov sbb inc mov cmp add xchg jmp and negb dec fidiv cmpsl sbb insb pop lock aas ds loopne mov leave jne mov (bad) inc in mov mov (bad) jnp out pop lcall and ljmp add mov out push dec xor in out mov lcall sub aas sbb adc and into mov arpl cld movsb (bad) mov aam daa iret dec dec pop jbe ss sub fcmovbe add sub lea pusha push js aas adc lea dec les inc mov or inc daa pop cwtl adc cltd push (bad) fs jg outsb aad mov inc scas add ja fnop inc sbb cld add gs xchg out fldenv dec mov push lds addb jbe out sbb in ret (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret lcall add jg fcomps movsl (bad) adc sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb ret (bad) icebp stos xchg in push or mov xlat lods xchg das arpl mov mov fcomi repz aas sahf out sti dec clc mov add add jae mov hlt stos imul push inc jno mov subb mov and cmc addr16 xchg push out nop shl mov pop inc mov (bad) xor fcmovnbe sbb xchg loope inc dec popa (bad) mov and test call mov sbb cmp add data16 int cld cmp gs mov dec xchg std cmp loope outsl and dec mov jbe (bad) mov dec outsl xor aas xchg pop push xlat sbb popa lret or xchg add outsl mov mov pop (bad) call test mov cwtl test (bad) scas lcall jp sub mov xor mov outsl in push mov fbld ds mov or das jno outsb mov mov adc sub pop sbb mov mov jae loope mov xchg ljmp mov pop sub cmc ja jle (bad) lcall imul mov xchg jmp push inc repz cmc test and in lock jl test mov fcomi push sbb sbb sahf lcall js xchg mov mull and jecxz xor (bad) cmp sub (bad) ss inc and fnsetpm(287 int3 inc loop mov cmp sbb ror add (bad) fisub push and jle jne mov lret jo xchg xchg (bad) mov inc (bad) movsb pop fnop sbbl jge bound push in pop pop xchg pop jns (bad) ss push xchg mov fs sub fstps pop lods pop and mov out inc (bad) pop addr16 stc ret mov jmp adc es fs in aaa cmp mov lahf loope mov rorl cmp aad mov outsl (bad) pop push sbb into add js xchg out pop xor push into xchg out sub or pop sub mov (bad) repz cltd mov push xchg dec lahf js (bad) repz pusha mov sbb ljmp xchg jno rol adc xchg add fisttp jo pop xor pop stos in ret scas and push sti out lcall pop push mov pushf cwtl jbe gs inc jecxz cmc jecxz mov sbb int3 dec xchg pop dec sub (bad) mov fs ficom aas fisubrl test loop ret fistl lret jmp mov lcall inc out mov jmp test push loope popf test or and imul fdivp in mov adc into mov pop int3 or sub or pushf loopne jg or adc nop ret out enter ja ficomp ljmp xor out lret and dec cmpsb out jb cmp xor and insl sarb sti push or leave mov arpl mul adc aam push sub aam pop push sbb fstpl xchg cmp sbb std jg aaa adc das lahf movsl test sub mov lock pop aaa and sti push jns divb pop arpl lods jg and xchg xor stc jge stc leave lock icebp dec mov les loop add sub pushf mov sub jl mov imul jle push sbb add out fistpll cs sbb sti jp leave mov ljmp in xor mov stc push mov push cld xchg mov push roll inc lea push aam jl seto or cwtl sbb pop fldenv add dec push nop test loope (bad) dec fildll ja xor icebp mov and pop sbb cld cwtl les stos jl std (bad) es js xchg cmp movsb push cli out or stos clc pop insb lds and xor leave sahf sbb (bad) test adc in add movsb daa or jne sub xchg fidivrl iret into jo inc xlat and pop mov imul jbe lret xchg sub xchg into mov lods adc fcoms cmp fwait jecxz iret lcall inc bound push lret inc push jbe sub mov fdivr jbe sbb mov cltd adc sub mov cmp adc mov mov rol je lret pop incl adc inc sti cmpsb insl jge mov scas stc test mov js lods xchg sub test mov loopne mov fnstenv xchg sar jp cmp push push enter xor int3 cmpsl cld movsl fnstcw insl mov push xor rcrl int xchg cmp (bad) repnz xor cmp xor ret mov lock sub pusha movsb push push pop jb inc out dec stc sbb mov xchg lret (bad) das mov int3 pop js xor jge pop or pushf in pushf jbe or je pop push or sarl adc and adc jne pop (bad) popa push into imul loopne push cmpsl fistpl push pop repz inc pop (bad) xor mov xor (bad) push ss cmpsl dec repz inc cmp dec pop les add and pop lods iret pop push insb iret mov jle aas xchg xchg push sbb (bad) xor or pop aad or fwait notl add test cli aas fxch scas add and lahf out aad (bad) fisubl mov cwtl sbb pop outsb loope stos hlt cmp adc repnz dec pop add pop roll shl sub or adc dec sti (bad) cltd jnp movsb mov (bad) leave pop cmp mov mov cmp notl pop mov test or in mov pop lret and xor mov pop sbb add push fidivl mov fsubs pusha fsts push cmp cmp ficoml (bad) mov adc add pop lds imul cwtl adc inc test sbb stos leave add mov xchg out push in or nop icebp jne cs push lahf dec lea stos xor jge (bad) jbe xchg xchg and fs adc lock in repz mov (bad) pop insl xor adc insb insb add popf fwait pop lds andl push in or cli (bad) shrb mov mov adc push jl pop stos xchg jbe xor incb mov sub add push add xchg repz (bad) out push jns in out pop xchg add sbb aad pusha mov ffreep shll cmp pushl cmp cmovp ss sti mov loopne pop xchg data16 inc lea addr16 pop jge adc jmp mov push pop ljmp sbb lds inc icebp sbb xchg mov aad mov jl mov cld fcoms scas jno dec (bad) shlb xchg jg mov aaa js ret pop orl aam add jecxz ret jmp jb int mov out loop sbb ljmp jne sbb mov xchg lods jle sbb rorl push and xor in xchg in and sbb fiadd mov in mov xchg icebp fsubrl xor hlt and imul out pop push jne pop in mov int3 inc loopne jecxz loopne movl mov push adc clc ds push xor iret inc imul cwtl mov xor xor pop lds iret dec push sahf outsb cwtl ja cmc or ss add iret sbb cwtl dec or int pusha js stc inc pushf (bad) or fisubr add dec insl gs jnp push sub push ja scas lcall jae inc cld mov aad sbb rorb sbb sbb jns xor cltd hlt adc dec mov and fdivrp adc divb xor pop xchg bound adc test pop mov jge sbb inc int mov adc out cmp test jnp adc popa cmp lock iret pop insb jle (bad) xchg lea jmp ja jg push mov cmp cmpsb sub jns cmpsl test jp inc jl (bad) stos add iret mov sub jno inc mov ror loope cmp jecxz lea std cltd cli jle fnstsw ja mov fdivrl lahf push xor cmp in call mov push invlpg notb std test mov push and aas fwait mov cld lret out out popa sub leave pop or mov add daa mov test adc adc std (bad) js aas xchg (bad) inc sub fisubr subl lret mov sub scas sub mov sarb push sbb insl dec mov inc dec add out mov rorl pop mov lret test mov iret std mov out push add mov inc outsl mov mov xor or mov enter ljmp int3 in stos cmp je ror (bad) jbe divl and adc jbe stos (bad) or adc call out and and (bad) cltd pop lahf int3 in and push inc pop aam fnop outsl mov dec aaa cld loop stc ds loope ljmp pop cmp fisttpl jo scas jb enter push (bad) (bad) scas lods add cmp bound adc lcall xor fist lock imul scas pop sub mov jb insb clc xchg dec push xchg (bad) mov inc mov test lcall jb pop jnp mov xor fldcw mov test pushf mull cmp rcrl fisub sbb fwait lret push lahf lods into mov ja add adc std test mov jmp imul (bad) enter fs call imul cmp std push fisttp lea les jae sbb mov nop mov ljmp push xchg nop cmp dec and repz out jb push jbe dec inc cmc fldenv dec adc jb ror inc jg mov into stc rcl scas pop inc push jle into gs (bad) repnz xor sub sti or mov psrld pop popf mov cmp sti jmp or test jge add and fwait stos gs and mov xor cmc jmp lahf adc test insl (bad) loope and movsb movsl test repz or xchg call push into inc jmp cmp js mov pop jmp mov cmc cmp in je mov push mov and mov aaa iret xchg (bad) sbb insb jl stc mov sbbl sub cmpsb mov sbb (bad) jns aad dec jp loope les movsb aaa sbb jae push movsl aad sbb sbb and data16 dec mov fstpt dec into (bad) cmc inc iret pushf jmp xchg xchg popa push out mov fldl pop xchg jecxz popf subb inc pop (bad) out mov push dec mov out jp (bad) str fwait in or test ja lret sub fldt xchg mov add les fs jns mov es test mov int cltd xchg mov shl pop arpl aad sub dec cmovne pushf inc mov inc scas jmp test inc jno sarb (bad) mull sub push inc inc nop sbb insl xchg mul pop dec ds inc inc sbb data16 cmp (bad) xor push mov (bad) icebp add jnp xchg aaa (bad) loop mov sbb in sub (bad) push dec and sbb jns cmpsl xchg pop or mov xlat add cmpsb push xor fisubr pop mov shll cli loop cli adc fsubrl rorb mov das lods jns insl mov jb jb xchg dec shrl mov lahf clc imul mov cmpsl insl xorl aam sub les inc lea daa inc hlt or rol mov out xor movsl movsl push or jmp in aam cmp test add faddp cmp xor imull sahf dec pop mov repnz xchg cltd data16 sbb popa (bad) xor push popa test subb cmp pusha xchg out sti stos cld aaa repnz divb mov arpl (bad) or inc (bad) mov ss ja or scas xlat push push loop xor jmp in push jmp xor call stos jle call insb (bad) mov pop iret stos cmp push fimull xchg sbb js xchg lock iret (bad) int pushf nop repnz dec cmp xlat mov clc dec imul jl cmpl mov adc mov sub push adc add popa xchg aam inc lret leave xor mov inc push jl cltd xchg int jns xchg mov or out pop dec int orl sub inc pop pushf push jle test pop lods pop ret outsb xchg sarb push add cmp in lcall gs cmp jmp loopne mov xchg adc stos cmpsb jp jmp xchg dec inc lock add in lock pop xchg jle cwtl scas je scas push scas jne pop bound xchg fbstp mov mov fdivrs cmpsb cmp jle mov dec sub pop push push mov jle mov fsubrl fisubr (bad) xor sbb jl inc push push jnp dec dec jbe cmpsl loope mov nop jmp loope popf repnz push shll scas jne jbe cmp push xor data16 jg jo push lea jmp fimul or lret inc xchg adc inc into pop jg mov cmp nop cltd jb loopne fisub jg lahf out push ret mov in and dec pop jl cmc (bad) xchg sbb ret das push loop push push push mov mov gs cmp and pop mov adc adcb daa ljmp outsb out inc imul scas cli cmp lea xorl rclb arpl (bad) pop rclb push imul mov inc and sti rol popf push pop inc out mov call jmp lcall jne xor mov out and pop push in (bad) jo adc lods mov jno jge cli (bad) pop popf pop repnz into aas insl std daa lods daa mov js or sub add iret inc ret arpl arpl push xchg rcll popa pop dec std jmp subl add bound mov addb push push add nop xor mov stos addb std ret adc pop daa scas ss pop sti icebp test lods add rclb jmp cmp adc mov movsb push add stos xchg aas fistpll mov mov std lods int3 sub xchg scas jle insb push int3 lret fwait sbb dec add lcall cli lods cmp push mov in out mov dec movsl add sbb mov repnz movsl cltd mov fisub dec std cmp or fsubs js cmc push pop dec sub xor in sbb pop xchg mov dec sub nop sbb jbe sub fst in dec in (bad) add or call mov repz fs adc aas or cltd ficomp (bad) add xchg in dec adc outsb or nop sbb aad jbe xchg scas inc sub loopne test cmpsb out aas adc mov sti daa mov lret data16 cmp decb stos jecxz xor ss xor fbstp nop lock inc rorb push (bad) lret test fldz int3 mov mov popa lods dec hlt ds or push ret or iret loope push xchg lret inc mov mov icebp fwait insl hlt fwait ljmp test (bad) pushf mov (bad) push arpl push adc jmp fwait push dec push cmp popa xchg push (bad) (bad) arpl aas clc pop out mov outsb pusha jle mov cmpsl stos test adc scas sarl sahf test lods shrb push mov push movl mov js sbb test test rolb push add lea sbb mov int3 sbb add (bad) add jl sbb inc daa imul xor inc loope scas lea inc xlat cs das fstl jae daa sub push das lock int3 imul repnz les inc pop outsb test ljmp lock jbe xor or jle dec ds stc mov arpl xor fdivrs mov das cs ljmp icebp cmp leave sub ds in repnz lret push stc (bad) mov dec xchg push cmpl inc mov mov mov mov out dec jo sub mov shr add ss pop sbb (bad) divb loope push roll fcoms daa aad es lods lock fs aam popa push and inc ficompl cmp outsl xchg push faddp in ret cmp mov cmp add lock test sub sbb mov mov inc xchg scas aas mov fdivr push gs pop jle stc mov into aaa ja hlt int in movsl outsb jnp addr16 test lcall push sub jae (bad) jbe inc inc mov aaa push mov inc ret push dec inc adc repz fiadd sbb xchg ja jne loop fdivrs rorb dec xchg adc pop pop or out or jp inc shl nop repz int3 dec cmpsb pushf jmp jnp not lret fcoml jne (bad) cli mov aam push das loopne cld mov int3 in push repnz lea cmp jo inc add cmpsb stc into repz dec call and mov test (bad) push repnz add pushf scas aam repz cli icebp xor fptan ror mov cmp mov stos (bad) mov and push stos push xchg jg pusha insb or or push jmp into lret push jg mov (bad) mov pop add sahf push lock mov mov cld in mov ja pop lods and ja adc lea mov aam enter popa icebp jecxz gs push mov imul pop adc stc push mov popf jbe sub pop inc inc outsb int adcl loope fcomp pop xchg imul int3 or xchg or add scas ljmp push repz mov insb cmc jle jns xor lods pop sub add lret xlat add mov mov and mov subl (bad) xchg lock pop movsl adc sbb inc xor imul push subb mov fisubl jbe add enter nop inc es adc les xchg enter add pop pop dec cmp (bad) fwait pop pop mov dec fmul out dec loop loopne push and lods pushf xor lcall xchg xchg xchg aas mov push dec rclb test xchg (bad) mov jno sbb test call insl insl sbb cmpl inc jno mov push insb insl and mov (bad) fmuls adc xchg dec sub fnstcw frstor imul dec dec fisttpl and gs jg pop lock xchg out dec insl add push shrl scas or aaa call out sbb enter ret push sahf sub lret lea mov sbb int test sub push dec lcall les lret idivl sub loop cltd xor jmp frstor push lahf sbb fimull scas outsl data16 mov cmpsl jge inc or jg add xor lret (bad) xor inc and and mov mov mov aas divb loopne test out sti adc cmp imul addr16 test mov mov add cmpsl (bad) inc dec adc mov inc movsb add sub jne push xchg scas clc and sbb popa scas add jecxz dec xchg dec in push daa push out or fisubr lods xor push lock jno push loop sub dec mov inc and sbb mov inc cltd cmp call mov dec jo adc cmp call out jae add dec mov lods mov adc std inc repnz (bad) jo arpl neg mov jl push sub dec ret push cmpsb xor cmp rolb dec or pop loopne fwait ljmp lahf out fidiv iret into adc repnz shlb popa and loop mov lds jg in fwait loopne shlb pop dec in icebp jp mov test ss xchg or cs lret in xor and fcomp and mov arpl jmp rclb into lock jne lahf stos fnsave stc fs into in data16 and mov and lret popf imul je mov dec or dec jnp and int3 sub insl pop fisubr sub mov xor addr16 inc clc movsl xorl dec pop sub push lds push add lock icebp cmovnp cli cmpsl jb inc xchg push ja sub pop lcall or push cmp pop es ss ja cmp aaa push sbb flds ja sbb cmpsl or jns in mov mov pusha mov lahf loope cmp sbb mov jge in cltd ljmp cmp cld or pusha (bad) lret js adc sahf repnz aam pop and (bad) mov es push out imulb mov adc popf mov sti push fimul leave mov push sbb mov fcmovnu sbb int push aad leave sub lcall jbe dec adc fnsave push xchg mov into ror push fadds pop js scas mov fxam rclb push inc lea or inc fstl arpl sub mov mov push xor jnp test pop imul (bad) lea inc lret add pop jne leave sub inc movsl dec int3 movsl or dec (bad) jb pop sub sub in call lock fidivrl fdivl cs xchg mov xchg into scas xchg sub mov and stc fidivrl in xchg nop negl outsl mov icebp (bad) push dec cmc out fiadd dec mov jne mov fs fidivrl dec adcl push mov stos scas nop mov (bad) sub xor ret xchg fsubrl fdivrs test (bad) mov out ret into out andl lock adc pop push ror mov cli mov les sbb lcall mov jg arpl and dec sub dec or call adc cmp push mov sub test jl xchg insb fidiv push (bad) mov fsubrs pop idivb push xchg fnstenv lret cli inc dec aaa div sbb insl ja push mov mov stc lods test add jnp jne cmp dec jbe dec xchg sbb cmp (bad) (bad) push jae in sub push daa inc push jae push xchg xchg cmp or lahf js mov inc cld mov popa jmp xor sar or fld dec iret xor lock decb cwtl dec stos sbb dec pop bound mov in xchg mov push push (bad) out out and cwtl mov outsb cmp imul dec sbb dec (bad) push mov jne mov leave push pusha xchg dec xchg addr16 push ret sub out mov fstpt nop inc adc jbe push cmp rorb push cmp test fsubrl icebp test sarl cs and sub or popl add ficompl lds aad dec jecxz (bad) leave jge nop fucomip jge fdivl cmpsb pop xor or in aam mov jbe inc mov pmuludq mov xchg aad call repz lea push mov inc mov or dec xor in push cmc adc jo popa icebp scas imul sub push mov dec pop daa cmp and mov xchg cltd sbb test (bad) and test sub loop ljmp enter clc add pop xor adc mov mov sbb lret jl or mov lcall add fidiv cltd jge or pushf int3 (bad) call in adc jl xor push shrb mov pop lret fs stc and mov imul jbe jns jl bound es add jmp jge pop in jp push in cmp xchg lcall add out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp movsl fcoml xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sahf or xchg push lret sub fstpt in pop mov sub fnstenv cld into (bad) cmp cmc sub add mov add xchg mov int3 jo fsub in cmp xchg jne scas pop hlt adc dec pop jmp rcll jb pop lods mov jb and or in inc inc daa push adcl std xchg sbb cld push jne repz int lahf pop push lods ret sbb test nop lcall pop test cmp in fidivr pop (bad) repnz pop fild jne shrd pusha outsb enter outsl out or movsl push out xchg (bad) or stc cbtw (bad) (bad) ja xor hlt mov jecxz rolb loop in pushf cmpsl add sub or ljmp mov sub or push aam into adc adc mov push es sahf cmc pop test clc xlat add inc cmp stos dec push jg mov lahf dec push mov pop lods outsb xchg dec daa xchg adc add mov or lock sub ds lret test lods subl sub out fdivl pusha xchg mov pop dec hlt in popf gs (bad) testl or mov push scas int3 cmp mov xchg dec insl int push cmp icebp dec adc ret mov cld mov lods add push xor add cmp mov adc jns fisttp pop mov sub (bad) aam pop ja mov fnop sub shr aas in mov lock call adc imul mov (bad) ss adc lds mov (bad) dec (bad) dec mov mov out call test sbb sbb ljmp add movsb insb cld push xchg (bad) sar inc inc ret xor (bad) fisub (bad) pop leave xlat dec aaa sbb fdivrs flds jp fs jb add mov lock cld gs arpl scas movb inc inc xlat sbb aaa addr16 mov cmpb dec outsb int3 push popa fdivrs mov test push (bad) dec cmp jnp and insb cmp xor adc (bad) xor dec (bad) push sahf test scas mov test mov rolb or dec and aaa stos ljmp daa sub (bad) xchg dec cmp mov test gs fldt xor mov fdivl dec js pop icebp push lds jb mov movsl test add inc xchg mov out scas or mov or cmc and xor sahf loopne cs jle mov (bad) je pop outsl adc sub stc push out jo sahf push rorb or ljmp addr16 mov (bad) fsubl push xor scas mov or das jmp pop or add sbb adc xchg ja dec scas mov stos stos push (bad) add inc out pop xchg out and mov sbb xchg jmp jae gs xor mov lahf push outsb aad or in dec jne jle dec sti pusha push cmp add mov in rcr stc pop xor jle push fnstcw loop js pushf xor xor push and (bad) loope divb sbb iret jge pop (bad) outsb add jecxz or pop in pushf (bad) ds mov add cmp mov or push and mov rcll int cmp shlb xchg push idivl data16 inc fcomi mov pop mov adc test push pop outsb enter push inc or xor jo pop imul or adc xchg mov inc xor aaa js mov push and push jb rcrl mov imulb mov or into (bad) fxch es inc and xchg mov imul inc imul pop iret adc push cmp je mov stos sub pop push pop dec push push sarl pop push jne mov sub push rorb mov adc xchg stos incl lock outsl dec lea dec ficom sub xor scas roll jl add bnd lahf fisttpl lods xor int3 (bad) xchg xchg jo and fimull gs seta daa lcall pop push pop mov pop add inc add inc inc push xlat cmp mov xor (bad) jp jg inc push mov (bad) jae cmc out pop cltd jg hlt inc mov insb jmp push out mov mov push std call xchg inc shl mov mov enter lret push sub ja sar sbbl or jae mov test dec jae,pt mov add dec mov int stc push jo data16 test xchg mov dec movb mov xchg and iret lahf sarl cmp ret std cmc outsl and push ja test xor ljmp test stc (bad) jne cmp and and outsl add push ret enter jnp sub outsl imul imul aaa inc lods and xor push push stc jmp std aam and jnp jns sbb mov mov sbb mov inc jmp jmp repnz adc xor add roll outsl mov mov cmp stos push inc or cvtdq2ps mov or insb movsb cmp push dec daa xor jge (bad) ds je fnop js dec sbb lcall fs pop adc sarl pop test int pop adc or mov inc push cmp cmp (bad) dec sub hlt and bound push and push ret mov xor jne xchg mov icebp jecxz out inc jno adc push data16 cmpsb scas icebp or dec and mov mov mov (bad) lret jg mov imul int (bad) fisttp sub pop lea push aas into dec popf mov mov mov rorb scas and lods popa ret lods pop dec push sbb fcmovnbe imul xchg jne mov or jl int3 bound jmp jns mov dec ja mov pop push xor inc rcrb cmp xor test lods and lods sbb cmp jl icebp xor mov cmpsb xchg mov and loop ficompl cmp imul mov xchg cmp pop and lods outsl pushf stos dec jnp out (bad) fcoml in jle mov mulb insl mov rcll fsubrs mov sahf lea add test sbb and pop leave test std (bad) adc icebp mov mov mov call scas loope jge cmp inc cmpsl aam dec inc sbb fldt lret jb lea push repnz cmpl jae jnp lock jge lret daa jmp pop loopne adc jmp lds and (bad) jecxz xchg or mov lock mov sub loope cmp push icebp jg out fisubr into push xor out pop inc subl adc imul pop (bad) xchg daa fldt test pop pop push fucomip sub inc dec insb adc icebp aaa test adc mov addr16 loope or jecxz (bad) mov jg cltd adc xchg repz mov lock dec xlat ss xchg mov dec pop mov mov mov test int jge xchg fisubrl sub mov ds ds pushf or int3 insl push lret cmp mov in outsb stos lds (bad) push roll push in adc mov dec stos and test mov xor imul mov xchg inc and in outsl sbb mov xor loopne xchg add xor or cmp mov mov inc cli les sbb mov jne lock int adc fbstp loop mov jb sub push inc arpl mov push push jnp sub in sbb leave and push mov enter or lcall sbb mov push and sub pop (bad) mov mov das lret int3 lret xor and aas inc dec jo pop notb fpatan cmp hlt inc jno mov xchg out or mov adc sar jne testl xor cmp (bad) test pop jnp jno aad aam inc push sub jge sbb pop xchg (bad) pushf adc roll lret out jne and mov add sub push or mov cmc (bad) popa xor mov inc mov clc movsl pop je (bad) add and push pop mov push mov push or dec cli lret cmp idivl (bad) ret inc std lock stos inc clc inc xor scas test hlt clc cmp hlt pop xchg jae rcl test fsubrp inc and iret push xor mov cmpsl pop fstpl pop cltd (bad) leave add in xor dec fbstp call mov pop fmull ret pop icebp sbb imul fsubrs jbe cmp push std mov in sti sbb cwtl outsl add loopne sub mov movsb jp push (bad) cmc pop call adc mov push mov lret mov jl vpcmpgtw (bad) cmp es int cmc icebp pushf jo data16 mov xchg int xlat stos popf shrl mov test jb push in fnstsw cmp xor aaa (bad) repz test jge repnz test mov lcall nopl movsb pop cwtl and ss nop inc fstps xor sbb mov and shlb push ret idivb lret sbb pushf xor xchg call push in in jge mov mov popa cmpsb lds insl ja add sbb leave loop xor popa or add inc in jo push and pop aad xor add lods sbb sub stc loope cs adc push push mov inc sbb or bnd xchg std lret push xlat (bad) fisubr xchg add pushf fdiv push sbb stos xchg stos pop adc jb decl scas dec cmp ja pop jns aaa imul inc int push mov adc lret insl add rcl shrl mov packuswb push adc or fadds push xchg fist lret inc insb outsl push rcrb sbb iret xchg pop fcoms sub stos xchg outsb orb mov lds pop les jg test js inc jge pop dec jg cwtd cmpsb test enter cld shll mov loopne cmpsb leave fiaddl out lahf pushf bound lods outsl pop xchg fs scas adcl or push add aas pop js mov or inc pop mov ret aam cmp repz xor clc push inc insl pop mov jg pop stos mov arpl ja dec and jle fsincos pop (bad) jmp aam mov cwtl xchg repnz cmpsb or mov xlat jno xchg lcall inc fcmovb mov push push popa int3 cltd and jno push sub sbb cmpsb pop sub sbb sahf outsl fnstenv loopne inc (bad) xor or push es test sbb xor int3 movsl stos xor pusha aad sti repnz fsubrp dec push jns mov sti push add cmpsl push addr16 ss testl js iret daa mov test lret xor jge sbb mov loop movsl (bad) hlt cld jl push lret jne ret lods mov and dec xchg cmpsl xor in fmulp les pop fwait push jp sub lock in and cmc push mov int3 and adc jae daa sbb jge jb test mov jne sub add or mov push cltd fisubr bound ljmp ds outsb cmc sub cld push mov out and pusha cmpl mov mov test lret rcrb mov pop in adc push xchg lcall jmp je inc in enter sarl cs cmpsb xchg dec das pop inc jne jns aad cmpsl icebp mov mulb out stc jg aaa outsb hlt push or cltd rorl loop inc xlat in fldenv cltd fcoml inc jno aam clc lods cmp js jnp nop sub pop gs insb imul (bad) pop mov inc aad and mov inc roll (bad) rcr insb imul inc pop fsts sub jae jb aas and jnp or out adc sbb mov mov push inc imul inc (bad) or jno push jg pop sbb cmp inc gs fldcw ds cmp mov jb adc int or divb xchg ret xchg (bad) inc outsb xchg ljmp mov (bad) mov out jo mov int (bad) in subl lcall mov jg add imul shr jno loop out pusha (bad) ficompl int3 pop mov outsl shrb ror cld jns and packuswb mov repnz jle xchg ljmp addw jae lock and jno,pn repnz xchg mov js clc push rcl test lods repnz inc popf lock push lods dec dec push loope pop loope mov xlat pop or in push ds xchg jl cltd shrl (bad) xor cmpsb mov jbe jmp push jnp loop cmp mov mov inc and repz mov mov cmp push fidivrl jo ret out adc (bad) mov mov in sbb ret lret mov iret add ljmp cmp mov out inc icebp push cmp es push cs div shll lea faddl jp sarb aas or pusha pop push out test mov enter add inc gs (bad) push ret sarl adc add mov ja aaa movsl cmpsb lret rol mov pushf cmpsb xchg fnstsw mov in xorl pop fsts push int das cmp (bad) jmp test (bad) mov dec rclb adc cld popa and adc pop jle out bound cli or into (bad) in imul arpl push sbb daa lcall (bad) cmc jnp inc leave mov cmpsl mov lock mov inc and test or xor bt sti stc xchg mov inc fidivrl jp pop push push idivb cmc dec inc fwait aad dec ss fwait aas sarb adc sbbb push dec xor xlat mov jle fdivl sbb cli ljmp add pop and leave (bad) adc insl push in mov xchg scas pop les or push jo ljmp das stc adc mov mov and jp mov prefetcht1 popf pusha sbbl ret rcll int push fild and pop cmp popa or push inc xchg stos push mov jmp mov hlt jp mov inc sbb xor xchg add aaa mov gs (bad) fwait dec jns push push scas jne cltd jecxz ljmp sub test xchg insl mov adc loopne mov mov (bad) rorl xlat (bad) invd add add and and fwait xchg dec xchg adc outsl add fnsave and out pop xchg nop lahf div fwait adc push test jne inc jl adc (bad) into xchg push ljmp sbb sbb xchg xchg je sub xchg fwait or inc ret xchg jp mov cmp in mov add jbe (bad) jae sbb (bad) mov (bad) test mov jg adc fnstcw adc inc out idivl sarl dec aas (bad) xchg push fs inc int3 test enter or mov sub popa push and lods or lods push mov sub fwait mulb or jge jae inc pop or mov movl cmp xor repnz push lock push xchg jae pop incb inc lods shrl dec lret add xor jae sbb into fsubrl ret in sbb fwait cmp mov out mov fisubr push pop cmovns fsub cmpsl or scas sbb mov lret stos scas sub or mov stos mov xor je jae and (bad) ds inc mov add ds inc push outsl loopne in mov (bad) pop cmpsl jnp adc mov lock ret mov mov sahf adc jae cmpsb push fisttp cmp mov popf push pushf (bad) adc cmp into mov es sub arpl jle sub mov mov inc pop dec loope das pop adc lock dec jne xchg mov lret inc sbb enter jg sub in fisubrl and mov mov jp repz sti sbb or push pop loope fucom int (bad) jp fucom push or out aam xchg leave in mov (bad) fwait sbb scas xchg sbb (bad) popa pop xchg inc popf aam jmp cmpsb and outsb scas iret aaa repnz jl test repnz ja mov int mov popf push inc sub insl ret adc xchg xchg rcrl mov lret dec cs popf fstpt add cmp repz inc adc (bad) and xchg cld repz movsl call mov push push in (bad) int inc fidivl inc mov clc sahf mov out xchg cmp push test mov loop int mov pop jbe aad inc mov pop fisttp mov cmp jne push inc leave iret nop cmovae fildll test mov js mov dec add dec lods cwtl sbb dec cmp jmp mov mov (bad) fildl push aas pop mov daa xor lret icebp addr16 decl ljmp pop outsl xor shrb dec enter sub mov adc cmpsb sbb jl out dec push sbb ficoml std lock mov mov pusha xchg insl js and in fwait add push inc into inc repnz mov xchg stos jae inc aas mov push sub sbb imul xor jg (bad) or data16 cmpsl cs dec jae add xchg sub fadd ret or xchg int3 jp sarl adc sbb imul xor in lret out popf add dec dec leave xor (bad) je xchg bound stos repnz jo ficomp cmp es sahf pop fildll ret out lods push jge pushf imul sub dec mov sub push jb sub mov das mov inc pop repnz and negl cwtl movsl sub jbe mov add pop push or in push cmp int sarl in mov inc and sti jns pusha les jbe mov pop pop adc push mov js inc lock sub daa and stos inc (bad) (bad) xlat js shrb jp mov inc dec inc (bad) stos outsl shll dec pop mov je comiss shrb cs int sbb icebp pop fwait mov cmp insb call or test sarb pop xchg (bad) xor xchg cwtl int rolb daa int3 subb mov jl or push and mov mov mov int3 inc testl jae add pop lods xchg in sub test cmp sub in fcoms push lock arpl push cltd mov add das sbb inc scas lods push pop out sbb push xchg xorb gs cli pop iret pop ret out enter fiadd or mov jmp mov mov push adc mov cmc lock imul bnd stc mov out pop jb sbb fbld adc xchg lret (bad) and inc inc pop sub cli fsubl cmp mul leave faddl fstpt xlat fisubrl lret fdivrs mov inc xor sbb fs das inc inc imul ss xchg imul mov push fnsave mov out cwtl push arpl insb pusha (bad) stc pop dec xor push cmc mov mov mov sbb cmp das loop ja and sub leave pop pop nop clc push mov test pop pop lret push in add movsl lret test dec les (bad) aas adc jnp imul mov sarb mov push add popa jg dec xorl or outsl push ss xorl stc testl aas pop xlat sbb aaa xchg push mov in mov push roll lret fstpt mov cmp fwait loopne sti mov nop jns loopne mov ljmp xchg movsl aam out add aam jecxz cmc clc dec inc inc ljmp movb sbb pop imul inc mov pop xchg in cld fstpt mov mov xchg lock cs andl mov fistpll addr16 out push call in test pop pop mov fisttpll leave xor push add add popf jge insb fs xor mov xchg iret mov pusha or push cmp loop add pusha movb (bad) push and out jo idivl mull imul jl lret sti mov sub addl push ja pop xor add lds scas lahf test enter aad inc rcr movsb and int3 cld sbb ss lcall sarb gs add pop push outsl fs imul jmp inc test es and in cmp scas stc nop ds leave push lods lret sbb lock scas maxps mov or push js dec add push fwait and or add push les inc cmp pop jbe leave mov fidivr (bad) aad sbb mov out push fs pop dec outsl and imul xor cmp push push pushf cmp pop stos add adc dec inc stc xor xchg (bad) xor jne je pop mov add out loopne outsb inc enter mov add mov ret push push pop add popf addr16 push pop cmp mov xor cmp jns (bad) repnz lcall test les pcmpgtb repnz mov inc mov (bad) add xor or les fcmove rol adc scas cmc popf xchg out popf nop out jne sbb pop cmp add iret cmpsl adc pushf ss ja and xlat lret lods adcl adc lret out (bad) stos jecxz jp mov mov (bad) adcl lds pop notb push sbb les ljmp in jle push negb or pusha cwtl idivb inc inc repz sbb mov push mov pop sub pop xchg adc cmp add inc cld mov xchg xor dec mov stos (bad) sub adc inc aas in out or test push orl fs aas fidivr frstor add sbb sub add rol hlt test outsl sbb xchg jbe in imul popa dec sbb inc or scas dec and mov xor mov pusha es std out (bad) mov jbe stc jecxz mov hlt in sbb pusha xor fist dec nop mov mov enter add test mov xchg es imul fmull mov test mov data16 jge fcmove mov xor lock stos (bad) xor jge pop pop aas and pushf sbb adc je pop test push lea jecxz daa ljmp sub add jb push lcall jmp insb xchg inc sahf dec sbb adc jbe daa rorb lds loopne out in xchg push cmpsb mov es movsl ljmp call sbb in subl xor cwtl inc xor xchg mov rcll stos push xor add mov xor aam push nop sub mov or and int3 sti gs sub (bad) outsl (bad) add enter fs (bad) int dec je or xchg aaa push repz jp stos daa es (bad) xor clc gs xchg fsubs xchg mov mov in dec mov rcr jns pop cmp and addr16 je or fwait pop xchg (bad) mov stos rcr xor sbb push inc pop repnz arpl fyl2xp1 xchg test mov dec cmp cmc enter rcrl cmp push sub pop sbb flds call sub add and scas das xor dec push jmp xchg imul jp ss lret loopne xchg pusha push lods pop dec ret dec loope stos add (bad) aaa xchg stos ret sub dec add adc mov hlt sahf sbb adc add mov stos je in xor dec inc mov jnp push into cmp jns add in mulb aad add xchg and or pushf add out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp loopne int3 xchg loope or int3 sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb adc test insb fnstenv (bad) insb (bad) stos idiv pop fucomip jmp add ret add jg mov and aas ljmp and test pop lds (bad) add push in push in cs mov push rclb into add bound or pop or or adcb ljmp sbb dec push cld inc or mov (bad) imul daa gs sub sub mov push pop dec cmp ja,pt inc cmp andb jle lcall cmp xlat pop jmp dec fwait test js les and jne adc adc xchg repnz push sahf test pop or icebp mov cli sti aad pop inc pushf stos xor shl mov ss xchg xor fdivrl sbb fwait pop out ljmp or dec popf cld arpl xchg jle rolb and xor cwtl sub dec jmp mov cwtl stc jp adc cli mov push dec dec sub aad pop stos dec dec pop icebp cmp arpl aaa daa (bad) popf std outsl push nop or stc imul jge jbe movsl mov jns dec andl (bad) mov cmpsl xchg cmpsl cmc and ficoml jae cmp inc int flds inc lock incb jle pop das push enter adc jns insb out pop mov les out (bad) or sbbl sarl sbb movsl fildll enter les js arpl adc or dec jno mov pop js,pn xor subl push lcall fdivl fs jne jb repz xor inc cmpb les movsb jae fstl jno mov daa fs lret push mov cmp aam pusha mov sbb fimull sub fcoml pop jbe sarb xorl xchg or cmp sbb jns subb icebp in leave inc stos movsl push push sbb add test gs lret mov mov xchg sbb out (bad) push std mov and jbe xchg clc mov sbb sub jecxz dec mov rclb push lea sub or mov daa xchg mov fnstsw pop (bad) incb dec xor adc sbb ljmp push adc dec in push adcb hlt jb enter and outsl jmp mov add test or mov dec dec sbb mov (bad) jns sbb lods ja (bad) fmuls stc loop push ss mov lret mov loopne into push (bad) popa arpl add cmpsl push ljmp loope cmp cmp stos (bad) icebp imul pop stos lock sub lahf mov flds mov sbb inc add nop add fwait push (bad) mov aam jg jge lret stos push test sbbl jb lret pop cmpsl lds lods sbb mov adc inc pop call (bad) in pop rorb movsl loope addr16 mov inc push cmpsb xchg pop lods push rcl lahf (bad) jg ds (bad) fcoms inc xlat out mov xorl pop cltd add mov (bad) in cmp shll gs xchg cmp push mov mov pop push xchg ljmp push xchg pop aaa movsl lods cmpsb sub fstps mov add pop (bad) lea adc sbb lahf loop mov in push mov mov adc cs jne pop and (bad) inc pop ror imul xor add push inc sbb xchg pop inc jo mov push subl dec popa cwtl add dec loop dec push imull sarb sub dec pop cltd addr16 fiaddl adc stos cmpsl inc cmc add mov popa xchg in leave adc inc out xor fwait jb ds rcrl test bnd sbb roll jle clc cwtl pop (bad) repnz push and cli mov out ja mov mov inc jp (bad) mov bound aad dec push mov cmp pop mov push rcrb dec dec sbb jnp (bad) in sub pop mov aas adc lods std pop (bad) push pop adc stos inc and jno sub sub test je mov ret push mov sbb or mov loop cld loop mov mov cmpsb mov in fwait add (bad) lods pop ret cmc std stos (bad) xor sbbl inc xchg ljmp sub adc lahf or cmp xor outsb push mov jnp mov sub mov mov inc jmp lea stos lahf jbe insl ret stc xchg cltd sarb jns pop xlat cmp bswap js add stos and fidiv cmp xlat xchg sub adc hlt aad mov pop jns xchg xchg outsl add dec stc je ss into pop repnz push mov sbb mov cmp dec pop das mov mov pop xchg call cmpsl (bad) icebp jbe js test repnz hlt mov ret insl sbb js pop insl inc in aad mov mov popa dec push ljmp sub push dec dec add lock adc adc adc mov mov sub popf mov data16 push push cltd jle lahf push dec test inc cmpsl push cmpsl sbb les mov xchg xchg aaa int insb dec push lods cmc (bad) mov xchg ret mov aad mov mov dec xor gs push xchg mov hlt push adc (bad) fisubr mov repz hlt out popa (bad) aam (bad) addr16 mov xchg sti mov and cmpsb ds cli (bad) sbb mov xor (bad) add int3 mov in sbb push rcrb ss outsl mov lahf mov mov xchg out mov inc outsb and div pop jnp scas xchg lret pop mov jno jecxz mov sub leave fsub adc cmovs nop fistl xchg and mov in sbb adc mov stos and jnp shlb or push dec shr pop sub ds cmp and fwait les cltd sbb mov dec or pop jl add fildll fwait jb dec pop and sarl xor ja (bad) mov mov xor jns push jge push lea fnsave pop aam xor mov xlat je aaa sub movsb push rcr inc xchg push fwait or xchg in mov std adc push mov xchg cmp aad sub mov mov aam sarl xchg dec fstpt add mov out jno adc push fs sahf xor cmp pop push xor mov cmpsl dec jge test jns fcomp mov mov std xchg jnp xchg test fdivs xchg sub push int jmp xor lret mov fmul pop int3 inc into adc xor (bad) xor stc sbb lea lock mov mov mov sub xchg mov dec xor or jo fnstsw and clc pop movsb stos push cmp (bad) imul out call lock vmovapd push addr16 rorl in and sub ret jns cs push test lahf stos add or scas xchg in call mov push loopne lcall xchg sahf dec pop inc mov idiv cmp cmpl inc repnz (bad) shl pop aaa ljmp push sti cmp cwtl aaa das and loope sarb inc or xchg mov fcmovnu insb sbb ds mov (bad) popf test or movl sub pop aaa sub ds sbb xchg test divl clc bound jbe int sahf leave ljmp dec xchg movsl mov fs sub mov and mov or sti movsl mov mov hlt es dec ss lahf push dec inc (bad) mov or js lahf cs add mov pop and lea fildl (bad) jbe sarl jmp sbb inc sub rolb jns stos popl js scas std sbb sbb test stos (bad) stos aam es fsubr sti mov dec sbb pop xchg ja imul xchg inc adc sub in and sbb jno dec xor lock mov xchg pushf cmp fidivr bnd dec mov aas mov test jg mov sub lea mov mov jmp mov sbb jp push adc hlt ret push nop sub mov (bad) dec push push rol cmc push push xchg mov pop ss push sti imul cmp xchg dec int3 pop out imul stc lock adc ftst int flds inc ret sbb push pop ror xchg fs jl pop push mov xchg (bad) aam pop stos mov cmp mov xor sub icebp lods pop cwtl mov pusha and pop insl cmpsb movsl and xor gs sti or aad addr16 imul adc (bad) call loopne int3 cmp insb sub aas mov mov testl (bad) sub sahf add fwait mov (bad) cmc stos popf push dec movb cmp jg sub push lods pop dec in add add repz stc adc lea add stos cmp nop xor jmp sbb loopne sbb call push xchg fs sbb cmp popf in cmp xlat xchg fdivs cmp add scas jl mov popf jecxz leave repnz add sub pop out insb adcl push pop pop mov hlt das mov mov adc pop (bad) dec test icebp sbb xor (bad) cmp es jbe inc pushf sbb mov and ret mov mov push (bad) cmpsl dec ficompl push fbstp or bound jp push lods (bad) xor test push lahf pop mov mov ficomp push add pop test push xchg imul xlat adc fs test inc aaa add sub mov inc dec push lods and rcrl test aam ss sbb pop insb jno std dec fsubs pop push mov jnp mov cmpsb mov pminub push mov push xor lahf mov negl mov dec aam jge call ret repnz lds lock daa and dec aaa (bad) jnp cltd mov ficomp insb sahf fwait jmp mov into (bad) (bad) (bad) jmp (bad) jno (bad) add js add mov dec jnp loope or sub dec into (bad) push mull xchg int add lcall add (bad) nop and jl jg loope cmp or lret add push ljmp cwtl xchg xor addr16 or insb jmp lcall xor xchg add (bad) sbb xchg ret push jno insl ds xor add mov pop mov cmpsl repz jno cmp mov push repz clc stos lret sub lds iret mov scas test loope fnstcw sub jp test shrb xlat mov inc loope mov or and daa mov je cltd xor sub aas pop jmp addr16 mov leave and and fdivrl (bad) mov xchg (bad) cld inc es loopne dec movsl les shlb push addl sub or out mov cld xchg cmp cltd mov push movsb ja inc push test cmc das in and notb jns pop mov lods or sar and nop das xor lcall ss iret cld pop xor dec xchg test int3 xchg divb leave repnz out xor shlb cmp adc pop xor mov mov dec test test cmp andps sbb xchg leave inc or (bad) mov mov adc jp pop inc and xor mov xchg in sub in xchg in cltd jae jle ret xchg jge scas cwtl jle (bad) lret jae,pn dec jle ffreep xor lret sbb or mov rclb xor mov arpl mulb ds push (bad) daa jecxz jmp push mov into cmp push das dec or xor fildl adc arpl push xchg mov jle movsb pop je cli cld push pop mov xchg stos xchg ja fisubr pop scas xor and popf stos add jne dec in clc dec pop cmpsb in push bound insl call mov xor inc push ss adc mov ret mov xor mov loopne adcl mov cmpsl aad nop mov jge call jne add and jl add mov push aad (bad) es jb cwtl sub cmp sub and mov repz add sub jmp faddl mov and xor mov fbstp mov mov lods rorl dec in lock or cmp mov stos inc xchg pop lahf dec fdiv loope lahf add popf fmuls hlt xchg mov std sbb xorb adc mov xor repz shrl ss and mov cld (bad) popa sbb jno out inc cmp sbbl push and push mov lock adc adc out mov aad and or dec and pop clc negb sbb ja loop cmp add adcl sub and jo scas pop mov mov mov ds pop xchg pop and adcb call mov test mov mov push pop mov out frstor xor inc cltd (bad) rcrl sarl std je or lret sub sub test popf xor xcrypt-ecb cmpsl int pushf jecxz sbb xlat and fldenv lahf jae pop pop inc (bad) jo adc cmp or dec inc mov rep xchg test ja pop fwait jge mov pop daa inc xchg std movsb orl sbb (bad) lret add jno pop icebp (bad) inc xchg dec popa cmp lea push test icebp pop lcall push add sbb xor ret js fnstsw or push jecxz dec push push (bad) (bad) repz pop stos xchg (bad) (bad) iret mov xor loopne xor fisttp (bad) sbb into add call inc sbb repnz mov cs movsl sbb xor mov sbb add gs jmp push fstl pop in aam cmp fxch inc push stos data16 lret mov ror xor or mov and sarb (bad) mov xor in ljmp stc add std mov push (bad) std push cmpsb (bad) xor outsl movsl (bad) sub add sti push push mov in (bad) (bad) mov cwtl adc scas add std mov xlat mov popf das push repz js ss insl loopne mov in cmc lahf jo pop arpl sbb cmpsb std jnp notl insl and iret into addr16 mov rclb jnp (bad) pop in add and or lock test sub mov add pop scas push pop test pop mov jae,pn push test mov sub outsb popf jle pop inc ja aas add aas mov add push sti aaa sub gs pop es ss mov mov xchg cmpsl mov test adc jp inc orb ljmp movl cltd dec or mov sub pop int pop inc jno lcall pop sub cmc int sub aas sarb adc movb mul mov shlb mov mov adc pop pusha mov xor loopne sbb cmc or test xchg rcl mov ljmp lea cmc inc and jnp or aas mov jecxz jne roll dec movsb dec jp pop jns sbb inc mov or cmpsb test hlt xlat or addr16 jge dec xor clc (bad) rorb ljmp inc popf push stos cld add addr16 and cmp test dec dec fcomip push outsl mov hlt fucomi jl mov sahf outsl jbe cmpsb fisttp jmp push imul enter lods stc test xchg sahf flds adc sbb mov and mov ret pushf arpl imul dec enter cli jne fdiv loopne pop xorl fs dec insb inc das out xchg sbbl lods and mov cltd adc scas in std or jecxz loop adc call mov ss sub test push or add push decb (bad) dec or es mov and mov pop inc out clc xor orl mov or (bad) pop aad pop jge mov adc dec lea out mov or cs test mov aad xor and shr jo lods xchg inc stos add aas adc push repz pop adc add les mov xchg xchg jno and jo (bad) xor push cmp lock fsubl sbb or jb jno pop lods shll xor mov or add (bad) jbe pushf mov add mov scas movsl fdivrl mov stos pop add inc pop mov sub inc clc adc clc or pop mov int3 sbb mov mov mov pop xchg movsl aaa push into inc aad movsb aas dec push mov in push and into sub sbb repz xor add movsl jle push push cmp or not and inc test repz xchg and dec cmp dec (bad) or leave and push fimul ficoml jp jp cwtl push push sub cs adc push xchg jb jl lret dec enter loopne ss cmc ds aas aas inc cmp cmp out mov rclb dec xchg bound cmp insl push in loopne xchg xlat imul mov push test cltd xor and push dec adc mov jl pop add pop in adc mov scas test int3 fidivl leave push sbb mov sbb jmp mov push (bad) jge out adc mov divb pop aaa fisttp push mov hlt (bad) ror cwtl outsb sbb inc dec outsl xchg push mov xor inc (bad) leave add sbb lock loope popa ljmp xlat cld loop xchg dec cltd sahf mov (bad) sti test int lods xchg outsb add jbe aam jns nop in jbe xchg imul popa mov and xchg in ja dec sti lock mov fsubl and cwtl in mov lea imul mov mov sub mov and adc ja push xchg cmp or cltd addr16 outsb sti add mov and (bad) fadds inc ljmp jne movsl stos xchg aaa jg call jnp jl test in sub (bad) sub rcr call xchg lods xchg dec pop pop adc arpl fisttpl jo test push popa dec pop add pop pop loopne push push cs adc or (bad) push push cmp inc xorl loop adc out lea mov stos mov dec movsl dec dec xchg add mov cmp (bad) sbb mov popf pop mov pminub adc jae repnz je in lds insl ret ret jmp repnz cmp xchg mov inc shlb hlt enter jne fcmovbe fwait addl fwait and or leave movsb sub lcall bts ss xorb int cmp mov je push in jl jge push xor dec decb and xor fldcw insl fisttpll or inc popf sbb pop lret hlt push adc shll notl jl or es push mov insl call jge (bad) mov pop sbb negb or add jb popf lea jbe push cmp adc ja jle xchg enter loopne add sub pop pop cmc daa aam sub aaa mov push adc (bad) mov call (bad) cwtl sub fstpl push mov (bad) jae mov repz sub adcb xchg dec dec xor push inc frstor cmpsb popf scas scas sti add rcr pop or (bad) ljmp int3 sub jbe push cld mov push movsb (bad) in test or sub inc std jae xor push aas or dec pop push or inc cmc xor sti loopne adcl int cli fidivrl fsubrs pop mov in test pop mov inc adc test lock pop xor sub cmpsl and into popa es faddp fmul lcall add lods (bad) and jg stos jl jle enter xor js stos (bad) and mov mov sbb cmp fdivrs xchg jnp sahf push je sbb pushl nop ljmp (bad) repz push stos inc pusha jno fs inc ja mov data16 mov mov iret (bad) scas push and test mov xlat dec mov (bad) and sub sti and cmp lds xchg orl sub pop or mov mov sbb popa pop adc (bad) sub popa stos out mov adc dec pop gs rorl and into ljmp and pushf mov jnp mov lahf mov movsb fwait out jl (bad) xor push cmp das cli cmp bound loopne sbb mov add and xchg inc dec dec mov sahf fcomp test cwtl aam stos insl mov int xor jbe mov ljmp pop cmp out out outsl dec cmp mov mov rcrb xchg fldt xchg cmp jle or roll lods pop inc mov sub adc cmp cmp (bad) mov push and (bad) jle fldt mov inc into sbb xchg les sarb hlt push inc pusha shl cmp dec imul push in jg jne fdivr fistpll scas out and and (bad) pushf aaa push into adc cmp push push rorb scas mov fisttpl imul fildl jmp rcrl or lcall cmp cmp in push ja ja or sti push in xchg insl inc jb js stos icebp outsb hlt jae aad loope mov retw stos out adc sbb cli cmp in pop lock add in idiv and mov das lods in popa add cmp cmpsl add jbe pop pop lahf mov dec test cmp jg cli cld sub push xor fnstsw xor mov fdivrl (bad) into idivb mov mov jmp adcb fsubrl pop cmp scas mov bnd xchg dec jmp lock jge call scas movsl mov fdivrl mov adc cmp scas mov je inc xchg push xor jp mov out sbb adc push xor mov lret jne ds dec mov jns jae xchg je stos push scas or out fdivl js pop div loope sub jle pop dec pop ret dec cmpsl mov lds dec mov into and mov test addb loop inc ja out out jl shld dec jmp leave idiv lds nop mov jecxz dec jo push cmc mov imul out lcall jl inc dec push decb leave js bound (bad) das and mov mov lcall cwtl repz mov adc aad mul stc add and fldcw push pop mov inc imul mulb push xchg pop jo mov sbb mov repz sub adc pop adc fnsave or (bad) and lcall fwait cmp push cs inc cmp lock xchg js pop ret jmp mov jbe inc (bad) (bad) xor mov mov sub fwait push mov or jge incb incb in inc stos fnstsw adc (bad) push pop xchg ja stos ret add xor and jle pop push lcall out or aaa repnz push adc mov cmp jg aad xor xchg je push lds mov xor das scas sbb mov int out mov jle movsb inc add jns adc popa decl and mov stos dec dec or cmpsb xor cwtl cmp cwtl bound push lcall sbb popa jle mov das xlat push adc adc aas aaa xchg cmp out addr16 jg sbb inc or or (bad) popa push mov jg fidiv bound imul mov push (bad) jbe cmpsl cmp xchg cmp aam pop jle in pop (bad) daa cmpsb mov mov test stos clc dec gs cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild add add xchg (bad) dec inc mov sahf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add mov das (bad) insb imul jmp gs ss out idivl iret xchg js add dec add mov das data16 cmp or mov addr16 pop add inc jb mov aam push mov int3 pushf or mov bound cli leave cmp pop inc jg or stc xor jns push add test push sar push jg pop push cmp out scas dec fildll cmp pop adc and int sbb in ds sub cmc add xlat jns popf lret push out out mov or jno sub bound mov (bad) nop scas dec cmp jmp cmp sarb les loopne dec xor adc popf out xor nop pop (bad) mov add lahf mov rorl mov je lahf outsb mov mov push jnp popf nop imul js test mov sti loope lods int into inc aad and pop xor out push push cltd push jo je cmp jl shrl leave cli mov and cmp dec adc cmp mov int es sub inc js addr16 inc cmp jmp cltd xchg dec adc mov cli imul fstpl xchg pushw in insb test or fimull cmpsb lret sbb cs adc pop jge jae mov test out stos mov xor test lods cmpsb adc jge (bad) mov call inc mov jo jg pop jg jns cmc adc pop cmp fidivl nop fwait and xchg dec (bad) xchg dec lock fdivrl sbb pop out mov mov fwait xor cmp push push (bad) mov pop xor mov repnz cmpsb div daa mov and sbb push inc xor outsb push mov jl mov rcrl or jno leave xchg mov push and daa push push mov push (bad) jb push xor or lock mov mov and idivb test sub js push cwtl loopne jnp jge (bad) (bad) mov jbe jmp dec nop add outsl pop out dec pop mov jmp popf test int3 mov inc jmp cmpsb xchg push ja or xchg imul or pop xor add aad push jbe daa sbb dec in and pop (bad) (bad) dec xor (bad) popa inc xor xor repz flds and add ret xchg ret inc repnz adc ja push dec pushf jne sub xchg xlat add mull mov stc repz clc pop icebp xchg test mov cwtl push mov sbb cmpsl inc sub dec and mov adc xor mov out xchg cmc cmpsl and mov cmp add loopne ss mov in imulb and ljmp mov pop dec xlat aaa cltd (bad) mov mov mov inc fisub xchg xchg aas pushf cli lcall lods (bad) pop or cmp mov (bad) stos adc pop sbb test clc ss or mov pop inc subb cli or mull mov shlb imul push aam faddl (bad) ss mov fnstenv sub jo mov inc addr16 test daa fwait icebp test icebp sar jne frstor adc mov adc cli int3 xchg aam es xor orl xchg lahf fs push xchg jno xor xor into scas jmp adc cltd pop (bad) mov test and xor sarl inc xor xor jb inc clc add sbb shrb push dec xor stos mov icebp mov lahf and and jns sbb mov shrb repz or leave mov ds lret iret jmp jae xlat mov rcll test pop arpl push jl dec inc xor push pop add stos inc jecxz mov mov adc addr16 dec iret repnz jbe and pop sbb jnp insl into fbld push mov mov sub cltd movsl lret test call jl mov push fisubr js xchg addr16 sbb add mov mov cmpsl sub int3 mov fnstenv sbb (bad) outsl loope jecxz movsb in inc or bound mov adc xchg and sub test ret mov rcrl stos and fildll insb push pop out into aaa shr out fnstsw aaa jp push popf cmp cmpsb out insb stos imul mov clc pushf out jnp add or mov out incl imul jno dec pop mov repnz mov mov enter mov daa test xor (bad) mov mov dec inc popf rcrb jne icebp mov dec sarb dec mul iret lret push and ja cmc repz dec xorb ja hlt sub cltd lret addr16 inc push nop sti pop cmp inc stos mov inc mov jb addr16 fwait mov push ljmp arpl xor (bad) popf adc adc mov sbb insb das arpl fdivl daa leave or addl fwait mov jne leave in dec mov mov enter test mov inc out pop pushf rcll mov insb stos mov scas or sbb movsb int3 nopl cld repz sti outsl adc lods mov push pop pop xchg in insb test cli inc sbb and mov pop cmp push add scas jg mov fmull mov jo jae mov insl xchg cltd mov lahf rorl imul add and in cld fdivl or mov jne or push loope push stc adc out mov inc dec and shll in xchg (bad) mov cmp mov leave outsl or pop test inc jnp (bad) scas cwtl cmc aaa xchg xor sbb scas addl call adc lahf push test push in (bad) icebp sub push int3 cld int mov push cld sti popf jge lret test cmp ds jl add fs pop xlat xor data16 add adc fidivr mov les xchg jmp stos nop jp in add jae dec fldenv cmp (bad) push dec jo das xor int sub add loopne adc mov add mov or mov stos adc jge jmp movsb lods push cld adc call dec jb arpl xchg mul sbb std or ljmp ffreep xchg (bad) roll mov jmp xlat dec hlt dec aaa add lea push out xchg mov das add rorb mov mov rorl xor push repz inc out in pushf loopne pop pop clc cld xor (bad) xor int3 out mov jb mov in dec enter inc aad daa inc fstl pop out mov push mov jg call xor or xchg lahf jl mov mov sbb (bad) fwait or lcall pmullw fs ljmp movsl jle xchg mov repz fwait aam and mov push mov xchg sub cld (bad) sbb neg pop jge std std ljmp fistl add inc inc (bad) sub inc xor (bad) daa jnp fwait xchg fbstp jmp mov xchg movsb xor xor fistl cmp xor mov outsl sar mov push xor scas adc (bad) xchg dec pop add push bound xor jg rclb lret or dec sub lods fldl (bad) xor or inc mov call fidiv or insl addb push mov jg test adc rorb inc mov inc stc cmp stc sub insb (bad) daa adc addr16 or lret cmp out mov xor cld in xchg shl sbb cmp jp mov mov popa addr16 int3 mov sbb shr mov out push test pop ficompl ret sar pop jb stos sbb sbb hlt rcr sbb mov iret lods insl insb sbb sbb je es inc lret fs push mov push xor ljmp int3 (bad) pop and or jno pop jmp js jl and rcrl mov int daa lret adc and sbb cmp mov loopne sbb popf adcb lret mov dec aad arpl pop adc cmp sbb add mov mov lcall sbbl or jne popa (bad) or lret or mov insl call jl mov fnstenv xchg ret add push test cmp sub das std arpl sbb insb pop dec jl gs out je cmp (bad) (bad) mov xchg push add cmpsb push and rclb and inc sti xchg dec loop cmp xlat shlb inc rol gs sub lret fwait loope loope and shrl pop inc push dec data16 divb or popa mov jo lcall dec iret fsubs xchg movb mov sbb js sti add int push imul jecxz cmpsb dec enter movsl xchg push int3 je sbb xchg fnsave das add (bad) imul jge xor enter push orb in inc cli in jp fnsave mov popf xor mov push divb adc inc inc mov push lods mov add stos pushl add lea xchg jbe fistl or xor mov insb push fidivr notb inc aas cmpsl pusha sub adc (bad) scas or mov in sbb aam pop imul pop aad pop push mull stos push movsb jno inc and test out xchg test test jmp mov adc out sub inc push pop and sbb (bad) cmp sub cmpxchg add fldl popa into cmpsl xchg nop pop (bad) scas call mov data16 into imul adc ret or test dec push inc call push mov add dec push pop pop adc or loop shr push bound xlat cwtl jmp xchg js and add pop (bad) bound addr16 shlb inc inc adc jns xchg dec ss popa lcall loope inc notl xor cmp repnz lds sbb dec lahf iret jl sbb adc movsl loopne mov cli je cli popa ss cmp movsb jge push dec into data16 outsb inc ljmp lahf int xor gs test in loope test shrl mov dec pop mov in adcl jecxz mov (bad) mov int3 fsts pop pop bound push push pop stos lock lret mov add fsubrs mov xchg ret push dec ljmp (bad) sbb in jo fs cmp jb lods xor pop jmp test mov cmpl outsb ret inc or icebp xchg dec iret lods fs and cltd and fwait dec (bad) nop ljmp xchg jnp test aad pop rorb push push dec lcall popl mov cmpsb in mov cmp scas cmp xor jg cmp divl call adc jmp lret mov push mov divb dec inc fisttp xchg test mov fwait mov or pop in add or push fisttpl mov cmp pop stos pop divl idiv xchg aam add test xchg mov andl dec or shr xor inc insb lods (bad) dec daa jp mov cmp jmp lcall inc push data16 out jmp adc mov push in mov cltd mov dec bound movsb popf mov outsb gs sub out (bad) fs js ja jmp in sbb sub mov and add xor dec dec rolb add daa pop imulb add sbb adc les inc divl enter mov in outsb or lock popa ret mov push dec decl outsb fldl lods out insb rcr mov int dec adc push lret lcall rcrl sbb cmp clc cmp jae loop in sub mov shl push ljmp addr16 xor mov aaa push rorl fsin ret (bad) mov stc mov and dec push ret pop add outsb into adc push inc xchg sub es fsubrl aam push loop clc mov fiaddl cwtl sbb sbb xlat sub sub pop getsec sbb push xor shr int3 pusha jl stc inc sub pop insl cltd push stc xchg pop mov push pop imul push mov push jno mov jno les ja add cmc scas mov into inc test push fnstcw outsl cmp (bad) cltd nop push push inc rcrl push lea int mov ja enter test push scas push inc es into cs std cmp lret rol mov push jae ljmp gs call aas add jb pusha rorb or push adc movsl mov inc out aam cmpl adc push sbb mov sbb adc add cmp mov xor cmp or add mov andb fsubs es xchg mov inc cmpsb xor add cmpsl (bad) and dec lret xchg inc hlt leave mov inc inc popa xchg xorl pushl mov add mov inc jne movsb jmp or push mov and repnz jae pop insl enter push jns add (bad) xchg aad lods sahf mov add and xchg mov hlt lods sub fwait mov (bad) jo aas jne mov aad arpl test jmp mov sbb daa xchg mov fisubrl add std call mov hlt mov aad sbb xor xchg neg pop adc or add mov stos nop fmuls pusha cmpsl icebp mov pop jbe subl int cld pop xlat std icebp mov out clc (bad) sahf add subb add (bad) cmp ja cmp in lret jo rclb loopne shlb test sbb adc push jnp sti adc pushf adcl dec xchg sbb idivb xor cmp repnz hlt jne inc push das xorl mov pop pop jmp mov int ljmp (bad) xor daa fistp sahf push orl test add pop dec lds add jle (bad) fsubrs dec in dec jbe (bad) icebp add clc negb inc sub cmp inc cmp pushf fxch mov stos das ret xlat (bad) jo fimul inc dec mov adc cmp std push loop int3 sahf jp in mov loope mov inc push test nop jb ja push test mov sar imul test cltd adc xchg inc repnz pushf mov cli inc call dec enter mov sbb mov fwait mov cmp aam and sub xchg or fwait out cmpsl in sbb aad sub mov xor dec orb pop (bad) (bad) push mov jo es test or hlt mov nop clc xchg push mov fcompl sbb rclb outsb adc bswap jbe jnp push push cmp cwtl push (bad) xor sub jge dec (bad) adc jb inc mov movb imul (bad) dec mov daa std xchg popf or xor loop arpl stos (bad) sub popa jae or (bad) xor push ljmp rclb incb or out jge decl dec and into ret notl cmp sub push dec push jp ucomiss cmp in xchg mov loop and out in add push aam jmp pop cmp or sbb fs fistp int jle push sbb imul lahf pop jae push in int3 mov sub mov cmp fwait mov imul jl pop divb mov dec les or lock jno rcrl push ds fisubr xor sbb scas popf sbb jne loop adc ja repnz adc pop mov in xor mov fdivs push mov mov xor cmpsl out fsub out lret shrl adc mov push fistpl insl mov xor jmp push fstpl push pop xchg jg sub sti repz push (bad) lods xchg dec xchg fsub bnd cmp mov insl out outsb sub xor imul push mov cmp mov pop cmp stc mov fnstenv bound jb jae dec inc pop or push ret sbb sub mov lahf mov (bad) dec repz iret fucomi cmp out cltd cmp inc sbb xor imull mov push add push out sbb inc in pop add push mov lahf pop pop lcall rolb pusha cwtl pop jb xor xor imul ss sbb incl inc sarl hlt in mov (bad) sbb cmp push or or sbb int cli sub dec loopne fsubr xchg shrl xor xchg xorps mov dec in in pop mov pop xchg or jge fsts cs in pop and pop jo push mov and xlat jno mov inc loopne loopne test adc sub jnp test cli sub mov mov or arpl sahf je and lds push (bad) daa or notb sub cmp lcall xchg xchg nop (bad) dec aad xor in cmpsb adc into xorl and mov (bad) out enter scas data16 pop mov sub cmp lret jmp jno imul out bound test and subl pushf adc push add jmp inc insb lahf daa aam scas scas insb and jl xchg (bad) lods sbb and sti andb xchg inc daa xlat lods mov (bad) incb pop fisttpl sbbl imul mov pushf fs push gs lcall fs lds pop stos and (bad) cs mov lret (bad) out inc mov enter into cmc jbe cmc add push test or push lods and sahf jb sub lock and sub inc dec js je xor lea push adc xchg out inc negl sub xchg sahf lret cmpsl push fmull popf nop jmp out jnp add les jle ror outsb push xchg aas xchg push iret dec sti addr16 sbb add insl jp fsts sti (bad) xor ja jg mov test jnp sub jnp lret repnz push jno mov je mov lock (bad) mov in xchg stc outsb hlt rorb cltd fs sahf loope stc data16 data16 dec dec shr lock sarl sub sub outsb cmp push in cmp dec xchg mov xchg das push xchg test push xor outsl popf mov pop jbe push jns adc add lea out or or jl (bad) icebp (bad) jp mov loop sub or ljmp addr16 push push aad hlt out xchg sub dec lret push (bad) imull dec rorl push cmp js xchg rcll sbb rorl pop jns call cmp pop push push pop push mull push xchg (bad) sub pop dec or fs sbb mov test (bad) dec dec pop imull add (bad) scas bound sbb mov dec sub push test shlb pop adc pop (bad) adc pop nop cs and hlt and out mov cmpsl cs mulb mov inc jl fstl inc pop add xor sar test and or push fidivl push xchg xchg addb imul mov add lret and xlat sub test jg ret sbb mov jo icebp cwtl and js (bad) xchg leave aad xor addr16 fdivrs xchg push mov sub jo or out mov stos je mov jmp add sahf mov cmp not xchg out xchg leave stos dec dec outsb and enter cmp push inc dec aam mov lret (bad) lods push js pop jae lret shr push xchg adc stos pop and std mov lcall sub into push or and ret xchg mov dec pop rorb cltd or (bad) push test fistpll cmp push aad shrb cwtl fadd cld inc jb lcall sbbb push sti and test push ficoml and xor bound jl jmp push popa mov sti add inc mov test push std adc (bad) dec es sbb iret jle jge out add pop jb cmc ss mov mov in int3 outsl sub outsb fs pop mov lahf scas or jl mov sbb mov dec mov jno or mov shll mov repz mov dec shr sbbl adc das jle or scas or push add out pop mov mov testb fcoml (bad) jno ret cmp jbe js cs and or inc movsb ja push and fdivrl sub dec aad cmpsl add in mov sub int3 pmaxsw xchg out push or cmp aam icebp je sub roll iret push aas push inc in lcall dec mulb repz movsb data16 (bad) es shr jge mov icebp dec sub jmp or sbb cwtl cmc xor xchg test jl xchg and mov xor jecxz popa test push movsl and and add (bad) fcom push dec push add out aam jl (bad) into es fdivrs xchg push (bad) sti in push popa mov out dec lds pop sbb inc scas dec aas adc inc mov lret pusha rclb cmp int cmp loope push dec add enter add je push add push insb lcall jle imul inc cmp hlt imul (bad) xor int mov add mov test push int ljmp sbb mov leave pop cmova adc pop sbb push loopne inc incl mov pushf jns push dec inc aaa inc mov cmpsl adc cmp in les sbb xchg dec inc dec stos bound inc cwtl cmp in cmp pop jecxz int repz mov mov movsl adc movsb stos xlat xor jle or xchg pop js mov xchg jl sub daa incb push sbb sub push call sbb insl and mov ss mov popa and ret jecxz push (bad) pop adc adc fstp je cmp outsb cmp mov int imul cmp imul add inc out sub cmp mov test sti sbbb fistpl test push mov lret cmc jo cmp push outsl movsb fdivs (bad) into sbbb mov xor mov push mov icebp ja jno mov faddp nop iret pushf cmpsb push (bad) cmc push xchg out xor movsl sub fsub pop iret and insb jl mov push cmpsl in xor (bad) out inc (bad) (bad) in cmp (bad) xor xchg pop add sbb popl ss ss (bad) (bad) fistl sbb es adc sub cltd lds outsb das sub repz or dec or bound cmc jbe xlat push cltd xor cmp dec ss inc sub call push (bad) fistl enter inc jmp inc flds repz gs arpl mov sti lret push mov push mov adc xor dec fisttpll shl in lahf xchg fwait lods leave mov jo or jge mov notb stos dec (bad) pop les clc lret pop lret mov test loop or sbb ret lds inc ficoml das add mov mov mov aam addr16 cmp push or or imul aas xor push lds movsl or out mov leave xor fdiv adc push mov ret lods je mov xchg mov and fnsave push cmp jbe jo pop fucomp sub mov loop push dec ljmp aaa fs (bad) xchg into into and xor fbstp mov data16 enter aas dec pushf xchg mov cmpsb aam imul xchg jg add jmp jb inc jo hlt adc mov jmp stos xor add xlat out adc add test xchg loope xor cmpb pop outsl dec lcall scas fxch jb ds fwait sarl push and sub aam and divb ss xchg minps jno movl jne (bad) jmp pop mov sub adc int push mov xchg sub mov popf (bad) outsb mov enter mov xchg mov push xor clc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and popf xor mov fwait xchg insl dec mov pop cmp insl (bad) (bad) jbe (bad) cmp sub add int3 add cmp or pop call pop inc add test xchg movsb rolb push (bad) lods xchg xor js popf loopne ss dec dec fcom cs or mov (bad) iret and scas or hlt testb push int3 ss mov push inc mov scas int3 mov inc ds dec sbb aad dec mov xor mov jecxz in cmp rcrl ficompl lret mov ret fs out test sbb lods cs ds sbb cwtl (bad) lcall push push pop cltd test jbe mov leave call mov ljmp stos mov popf sub pop mov xlat dec or cmpsl jne loopne pop flds stos aam jbe test mov xchg mov (bad) jb pop lret mov das xor adc xor adc fidivr sub jmp xor push sub fwait pop mov mov dec mov flds cmpsl rol pop xchg mov push jmp ss xor fildll dec cmpl es addb pushf repnz inc lock mov sbb sub cmp stos push add xor mov call ficompl int3 sbb jmp and and adc loope loope ret jge and popf and or lahf cmpsb loop loop,pt jo movsl jb adc xor test cmpsl pop push rolb jl js dec dec or inc push cmp int bound movsb xor outsl dec dec bound or sub lcall dec stos inc mov xor js es mov js stos js or inc cld in ja pop iret or or add lret push (bad) fnsave mov mov sbb fwait mov out push push notb pop mov dec or rcll mov ret pop call popf (bad) roll lret cltd xor hlt cmpsl lahf int3 pusha xchg pop out xchg mov pop dec lods xchg xor xchg movl cwtl cmp arpl dec popa test push imul test push test jmp das xchg adc (bad) dec cmp mov dec pop loop popf imul cmp (bad) dec popa call adcl pop fs scas mov dec rorl movb stos inc mov shrl sub mov mov in in scas inc test xlat add mov cmp jecxz lods mov mov lcall aad dec test or xchg sbbl or dec mov sub es sbb jg lcall jmp inc sub int frstor icebp lods cmpsb mov cmp inc arpl push jnp pushf insb jmp insl dec sub jg cmp hlt xchg or push test std sub data16 lock fiaddl sahf fstps cmp (bad) hlt lahf adc adc adc jae jmp xor js add ljmp xchg ss push clc dec sahf ljmp or add or mov cli push jle mov gs jb iret das incl cli add fldenv mov or sbb mov xchg sbb rcll dec insb push or cmp std add push fiadd js cmp bound lss sbb push pushf and insb jmp adc data16 pop mov adc je stos xchg pop cmpsl call (bad) jno xchg arpl adc movsb into mov cmp mov add sbb mov data16 rcl add push lods mov imul pop fstpl fnstsw sbb outsb adc fimull inc test jae,pt adc (bad) jmp (bad) adc out pop popa xor and adc jae mov add pop test push in dec jbe cmp lods add dec fs cmp std mov adc dec outsb jne xchg mov xchg push out adc mov mov cmp push mov adc es stc (bad) mov arpl pop xchg (bad) (bad) cwtl stos mov test nop cmpsl (bad) pop push int3 sub cwtl jecxz fsubs dec cs call or pop repnz bound inc shll loop (bad) lret js and cs push fmuls rorl sub es pop adc jecxz popa sbb cmovns push enter dec xor jp sahf hlt insl mov movsl mov fidivl pushf jg ljmp imul lret xchg shrl jae movsl ficoml mov mov scas xor imul push dec (bad) loopne pop inc clc and (bad) enter popa (bad) scas nop jle subl cltd sbb mov lret mov loop jg xlat sbb fs popf addl xchg lock enter xchg sbb and jno xlat int ljmp popa add jle jns cli adc cmp and mov mov into sbb xchg movsb (bad) mov sbb fdivs ret sbb aam cmc aaa insb mov add loopne dec iret inc cli test mov stc mov ja test xor rclb or and add push mov aad xlat sti pushl xchg sahf mov in and js ja js in add sub decb (bad) ret mov int3 rclb andl rolb idivl ds mov inc stos xor xchg cmp cmpsl ficomp out and xchg pop push add adc cmp stc nop pop addr16 pop lock repz xchg xchg test sub lret jecxz loop cmc ret popa cwtl add aam or mov mov jmp (bad) jb inc or mov pop sbb in pop (bad) rorb or or lahf inc fptan mov sbbb sub mov and cld fdivr sub pop jno jl adc or (bad) jae inc (bad) ljmp hlt repz push aam xchg inc xor xchg (bad) ljmp iret test scas inc ret mov test push aam xchg leave dec pop lods cld or pop xor dec cwtl (bad) mov call inc pop pop cmp xor inc repz adc ror cmp sub in leave dec xor mov pusha lahf mov clc ja cmpxchg jl outsb push jge scas mov mov push scas sub dec idivl add jp mov (bad) sub mov and xor and aad sbb push push repnz jb stos insl lods jg push jecxz data16 lahf add inc popl or pusha imul sbb sub add in push inc iret leave mov arpl pop mov popf lret aad cmp cmp fbld or jo dec dec call jp or sub and push sahf frstor icebp jg ljmp out push inc imulb jg mov aam aaa mov lea movl inc ficompl push xchg sahf ja push dec insl into (bad) (bad) push shlb jecxz clc fucom adc push dec je sbb pop or xchg mov sub imulb into dec stos lods fsubs pop xchg mov mov fistpl daa mov hlt shl iret adc loope mov cli or stc xchg xorl fstpt xchg iret sbb inc pop dec sub xor mov cmc sub or outsl ds add lcall cmp inc enter inc cmp adc push scas test add sbb adcl cltd fisubr rclb iret push xor dec in icebp mov adc inc lahf mov xor enter jle cmpb (bad) addr16 cltd cs jae mov fildll pop sti mov lods sti mov jg push pop mov pop cmp cs cld das test push es inc fisub sarb push imul dec cmp jbe pop sti push frstor and inc out test sbb or dec mov rcll ret les sub sub roll mov sbb rcrl xlat jbe sarb jno scas mov gs xor lahf push adcb push fistp jmp bnd scas jle lods push xor jecxz dec (bad) (bad) sub jnp std cmp negl cmp add (bad) dec add and loopne dec sbb es setns inc jo add es cmp sub lahf icebp mov fist out iret inc adc add imul mov (bad) popf sbb int incl ficompl call (bad) mov popf or lret out in insb jns jg jmp popf sbb into fwait or insl or test dec das cmp push fdivs jp in cmp mov outsl sbb pop cltd imul clc mov fidivl pop push ljmp mov (bad) shll sar xchg scas ficoml xlat jl mov inc sub into ss sahf cltd imul les xlat add sub ffreep or leave mov push xchg add outsb pop pop push lods mov dec stos std daa idivb scas dec cmpsb sahf inc (bad) add mov insb stc xchg das pop (bad) mov dec mov dec mov in pusha stc rolb sbb mov sub idiv in inc cs addb add mov (bad) (bad) call mov xchg iret pop test mov fnstsw (bad) enter aaa loope call and test dec enter mov xchg cmpsl stos outsl mov jo mov test pop or lods fxch test push jne sbb dec in inc hlt and dec sbb push dec jge xchg fwait cwtl (bad) pusha xchg jecxz shll test jp xchg pop mov pusha push out mov cltd dec in js (bad) insl cwtl notb push jge test fsubrl xlat in aam cmp push leave in add mov call add aas xchg pop xlat (bad) fimull mov mov rcrb mov mov (bad) cmpsl in cmpsb lods shrl stos lea (bad) cmpsb add adc mov stos insb in xchg (bad) pop adc dec cmpsb ds xchg fldenv mov fldl dec outsl fimul jo lods xchg cmp les in aam fidivrl popf fnstenv mov nop sub sbbl mov mov js cmp fmull (bad) repnz cld lods sbb xchg lcall pop out lret inc xor hlt clc inc stos xchg fcoml pop xor adc loop shrb in jl dec rep xchg pop inc xor mov icebp ret (bad) and out cmp in push je lcall idivl xchg into dec jno jo jne dec inc push ret fisubl and imul jbe lock repnz pop xchg pop xchg jmp mov sbb iret xor xor inc jns out movsb or test lahf (bad) adc addb inc test movsb pop fcomip std lret rorl sahf jecxz mov cmpsb xchg sti lods or jmp les es pusha and movsb insb push lds pop movsl dec xor es sbb jnp (bad) mov iret jle xchg lahf subb dec in jmp jb cmp pop ffreep cmp add cli mov sub jmp pop inc cmp xorb loopne bound int inc mov mov adc dec inc xor sub mov mov push pop cltd pop lahf ret repz stos (bad) idiv sti cs lods inc pop jbe sub jae mov adc jnp notb ljmp inc or pop mov aad pop xor add push jle push popf lahf pushf into mov test mov xor aad pushf cs add outsl ret lret sub pushf cwtl lea add out cs cmpsl (bad) imul mov adc test jbe in cmpsb or fucomi cld cmp stos in mov inc push leave jae repnz dec cmp fucomi push pop push jmp dec pop ds jo stos (bad) cltd rcrb xor scas out in addr16 xlat fsubrs stos and cmc cmp test xor dec roll popf shl cmp xor sbb lahf repz iret adc nop jp test sbb mov mov add cmp adc stos xlat ss scas add ja mov mov push mov cmp adc mov jbe mov fimull add sbb mov fmul or movsb xor sub push jecxz aam jbe ja imul int3 add outsb data16 fldl cmc lods inc pop mov cli cmpsb push loope inc push (bad) or in lock push lcall sbb mov stc mov es or mov cmp mov and mov arpl test jae gs aad jmp and lods dec mov jae mov inc xchg sti mov mov adc cltd inc xor xchg adc sbb lret push rcrl out sbb and cmpsl xchg mov add mov (bad) inc or and sub pop jo popa inc jg sub add cwtl pop fiadd mov fwait jae lods adc mov fstl fidivrl xor mov jo and je mov sbb cs icebp mov jo jne mov (bad) je push ret xor (bad) pop xor pop lret mov loopne mov stc cmp cmc in in fcomps add lds jbe sbb cwtl orb cwtl stc inc pop nop mov cmpl pushf mov jbe lret lahf gs cld sub fwait jns lods and adc adc mov pop sbb lods enter ljmp (bad) or addr16 pop mov neg xor pushf pop inc nop sub mov bnd ret xor icebp das adc cmp inc out lds adc in and mov mov push aas repnz sti sarb loop std add iret sti inc cmp add push and pop mov adc ljmp test jle sbb jo jg mov cmpb stos ja adc sub fnop mov jmp push mov mov mov stos (bad) rorb push jno adc mov mov pop mov ret pushf and inc cwtl push imul or push mov dec cmpsl mov lea jae stc dec xchg fcomps fsin cmp dec xchg cmpsl mov inc adc pop mov bound pusha ljmp xlat push (bad) testl cmpsb fldt decl aaa (bad) add in xchg jno shrl jl ja repnz jne fmul mov and sarb pop orb repz (bad) jmp scas or dec mov daa sbb sbb or nop push push sub cmpl pop js cmp mov dec or dec cmp notl js inc cmc xlat push aaa add jb insl fnstcw mov aaa or ror imul fnsave scas jecxz add sub xor ficomp fstl sbb mov push or xlat push ljmp xor dec (bad) sub jp lret jae fdivrs mov divb push rcl dec cmp jp repz imul push lods out stos push cltd jne mov sub mov loope sbb (bad) or xor dec cmp fxam push mov fldcw aam push and scas xchg or ljmp jno mov jno dec cmp out sahf iret js sbb jnp jle fsubrs (bad) mov and je int cmp sub inc sbb call lret fisubrl bound cli shlb adc mull and roll popf lea mov orl les mov fwait dec inc inc das mov sbb xchg arpl dec sub mov fisttpll pop in mov ja nop mov jnp cmc xchg test sub adc sub out es jbe ljmp sub cltd lods push lret fbld (bad) jae repz dec or pop popf fnsave or cmp add or sub cmp push cmpsb push or dec movsl lahf sbb jbe cs lahf fwait ret add pop ss sbb fadd movsb outsb jp pusha cmp add ljmp xchg pop add mov and pop xchg (bad) btr imul nop or add push repz sbb pop pop sbb inc pop lret mov mov (bad) in jo add (bad) pushf sub lahf fs and jno rcr (bad) adc or pop push (bad) leave jo sub mov or imul adc ljmp push jmp xor and xchg int3 bound inc dec jge fs imul xchg push stos mov push loop cmpsl cmp xor xchg sti aas inc mov mov (bad) out ds ret scas rcrb imul out daa into cmpsb mov sub insl pop mov out es xchg mov lret aaa sub mov inc dec int push jne mov es pop mov xor fcmovb xor mov mov xor int xor lock mov (bad) psubusb sbbl push inc jle lcall mov in popf mov adc (bad) popf xchg mov (bad) add mov iret or popa mov push and ljmp mov push push xchg xchg (bad) hlt flds sub adc repnz jae cmp (bad) stc int3 insl cmpsl sbb aas sub mov mov pop cmp daa lahf mull mov push (bad) iret lods mulb popf mov mov push loop (bad) aad movsl js sbb (bad) test addr16 mov arpl add xor inc in xchg in popa fidivr rorl mov insl mov inc cmp and cld repz mov inc xchg js sbb mov inc inc dec aam jnp add nopl inc cmovo lods dec push push add out push mov jecxz in inc inc ljmp sbb cli rcr orb int loope and mov pop imul mov andl mov aaa ret sub enter stos or jno add or inc sti fdivs sub je shlb dec adc jmp aam adc nop cmp nop gs push out and lock mov imul jne cmp fidivr loop loope mov das xchg orl lods cmp sub subb push ficompl add jno xor pop ss inc xor inc sub or xchg out scas xchg leave lods in add add popa push insl lock mov adc add cwtl js fimul xchg jl and sbb icebp bound mov pop mov pop int3 lea aaa push mov push dec jmp sahf pop scas and cmp stos cmp lahf lods scas xor ljmp mov push or in inc push cmpsl popf lea mov aaa adc mov fisubrl stos mov (bad) mov ljmp mov lret inc xchg push movsb out jp cmp jns ja movsl into cwtl push xchg jae and call sbb dec addb xor mov ret cmp xchg or and dec sarb std cmc mov ds ds movsb js xor add xchg jge and push inc pop movsl rorb push (bad) sbb lock in mov xchg idiv push hlt xchg mov jns bound sub pop in cmp xchg stc mov sbb push int test mov mov pushf jnp adc (bad) mov loopne add ret int3 incb ja fsub cltd loope sbb add lods sbb inc lods or ret call sbb in movsl xchg fidivl in lahf inc xor cmp and nop pushf lock clc inc inc sub inc imul sub nop scas ficomp or aam pop (bad) (bad) mov stos sbb sti add popa inc xchg pop or mov int3 ret dec inc les xchg or sub ja adc lds in ss pop add xor cmp das jb ss iret mov repnz std pop jnp fdivs fsubrl fldt stos scas int sbbb push and fwait mov test mov jno nop or popa pop add (bad) jns lcall fimul arpl outsl push mov clc daa add lods mov mov add test push xchg xchg movsb repz test cmpsl incb sub add mov aaa push jp es loope (bad) add outsl test cld xchg push inc je aad (bad) imul mull add orl loop cs into into outsl cmpsl dec mov xchg repz mov imul xchg sbb xchg (bad) out sub sub ja cmc xlat cmp fsubrp repnz cmp cmp sbb jo lea bswap lock add mov (bad) push fcmovne scas jo ret sub out inc pop sti arpl (bad) daa sub sub inc and adc or call cltd mov fisubr (bad) repz nop pop call mov sti push mov (bad) cmc dec dec push mul add nop nop xor jne push mov sub lea repz rclb jecxz popa add out cmp pop shll mov push in mov pop push clc push enter fidivr jge (bad) imul in fiadd sub aaa sahf icebp push add push xchg cmp mov mov push adc xchg in loop inc test inc imul mov out into sbb mov in add sub addr16 mov inc jmp mov xor xchg (bad) jle jle fidiv mov jo pushf imul inc aaa int3 icebp dec xchg xchg xlat pop cltd fcmovu cmpl ficompl dec repnz pop btsl jae dec les mov arpl inc pop mov mov add sub sahf dec les push push test in pop test nop out xor sub sbb in fmull fcomi test das ficomp cltd xor or rorl (bad) pop jge push popa pop cmp dec fmulp rcl out jg xlat pop aas xchg bound in mov stc rol sbb lahf lds jl fwait loopne outsb mov sub fnsave xchg call into jge lret or sbb jnp inc cmp sbb das xor mov mov loopne bound scas pop aad dec push jmp mov js mov (bad) xchg and jne xlat pop aas dec sub sub test lcall pop movsb pop dec pop std flds faddl xor add (bad) push mov das ljmp packssdw stc negb and mov xor adc jo cmp inc imul out lods sti cmp insl dec shrb (bad) xchg leave ja jae das pop xor sub mov mov les aas mov ja test dec out mov fisubr jae sbb daa sbb sarb sub loop dec sti icebp ja add or ja clc or mov loopne xchg cmp sahf mov push stos jle divl mov mov mov or xchg cld fcomps mov mov jns fisubr sarl negb push fiadd outsb push and mov ss inc dec or in das test sbb iret push mov push sar push cmc jge jbe adc sti repz adc ljmp and andl mov ficom jp enter in (bad) stc jo pop cmp lahf cwtl cmp pushfw push xchg mov cmp push xchg in push les pushf mov and mov mov dec dec stos or popa push xchg into cmp (bad) mov adc cmp mov push sbb and inc lock sbb fstpl cmp or xor push jb sub or or xchg mov cmc (bad) jge and and add mov cltd mov push movsl jle shl sub push mov or (bad) (bad) xchg sub mov leave arpl gs mov xchg mov jae inc add in leave dec push (bad) or hlt lods scas repz jle imul out jb popf lcall or cmpsb push jmp dec sub (bad) mov jb repz cli fisub iret lock mov aam mov nop jb lock ficom mov aas scas mov push pushf aad xor iret and lret dec push lret pop mov rcrl pusha stos push jge test cmpsl adc aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add pop add ja add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sahf lea add daa (bad) mov sub insl mov insl mov aad and cmp add add push cld or pop ss or pop and aam inc addr16 lods sub call xor (bad) lret mov in cld out repz mov push stc icebp (bad) adc or call lea xchg sbb sti adc xchg leave in mov pop inc cmp push push mov nop or stos loopne in cmp adc xchg pushf outsl int3 mov and dec bound orl lods std xchg add ljmp xor and jne mov cli mov test mov fcoms repz ds push popa enter xlat jo imul cmc or popf lock dec in push xchg mov ljmp jbe,pt clc cmp lcall dec std pushf and xlat iret ljmp cmp mov (bad) mov or cmp push test es lods fdivl pop push or or push imul xchg cmc fmull cwtl in retw sbb or insl inc mov imul jge fisubr jge pop xor pusha pop and xchg push jmp bound (bad) push mov push mov rorl in pusha mov jmp pop outsb cli mov rorb ffreep and imul push push jae js jg xor xchg sarl cld mov mov bound and loopne add in mov das es mov divl cmp ret int lret addl dec loope (bad) leave adc nop mov dec (bad) xchg mov push stc out out xchg adc scas (bad) xchg repnz mov cmp sub mov adc inc and mov cld fiaddl xor mov fdivs push jo (bad) or or pop repnz jg in sub push cmp scas mov add mov stos aas mov jmp mov push xchg and sti add push cmp mov sbbl outsb or sbb cmp fnsave push nop (bad) (bad) call out or or fucom push sub sbb mov dec repz ror cmp inc aas inc sbb loope aaa push (bad) outsb adc mov stos scas and cmp fcoms test mov imul and movsw adc lods aad jo pop js xchg repz sub sub mov out mov cli jbe adc mov jle xchg fwait cmp push pusha and xor mov lods imul stos xchg sub push lds fs imul push adcb push (bad) dec inc lcall xchg mov push scas neg add std es dec fldcw mov cmc sub push sub mov jge mov out cld pusha fidivr rolb aad fbstp loop push push out popl push mov cmp xchg loope (bad) adc rclb in dec (bad) and jle add add leave stc xchg js (bad) xchg xor jbe rorb ds dec mov jbe jb lock fwait mov arpl and inc adc mov popf pop pop adc fcompl xchg lock mov and sub xchg pop adc outsb pop xchg int mov repz and hlt enter js (bad) pop pop fcmove jmp movsb cld pusha mov ret test mov sbb pop push lea outsl jo xor jp mov fisubl mov sarb dec cmp lret xor add jl mov mov mov out inc inc lock inc add push loopne ja ret (bad) sub lods and call (bad) push pop enter lds and outsb idiv jae jp mov jbe in xor xorl stos pop sub push mov lcall mov lods push xchg ja dec je stos popf xchg pop xchg sar mov stos xlat push inc ja idivb xor mov lret fdivrs nop jcxz cltd rolb ret xor sbb daa mov mov pusha inc and mov xchg xchg mov adc and (bad) (bad) and fist lret xchg movsb bound sbb inc mov mov cmc cmpsb jle enter rolb xor imul stos (bad) pop int cmp (bad) xlat adc mov (bad) out (bad) stc pop shlb pop (bad) lock or adc movsb push jecxz movsl xlat add pop or out lods test and stos nop jp mov adc add jns enter daa push cli repnz mov dec pusha ret mov (bad) mov cmp mov xor and mov mov bound xchg lods nop pop mull shrb pop mov mov fs in cwtl bound fs lcall push jecxz xchg mov push mov jge movsb mov and jecxz data16 popa nop sub dec push (bad) repnz add cld and or insl sarb jo fistp xor mov pushf jne inc js inc sbb idivb in xchg cmp mov outsl xchg and inc mov scas js xchg repnz cmp sub dec xchg or pop mov fdivs jge dec jo lahf sub scas lret sbb rorb subl imul jl mov gs pusha cmp cmc stos and cmp pop add aam sbb jns inc (bad) in xchg push (bad) cwtl lea insl jecxz stos jl xor (bad) adc aaa jo les test jg insb inc dec js ja int cmp loop xchg sbb dec sub xor decl push mov setp scas (bad) imul mov jmp fistpll test sub scas movsb repnz out call jb ljmp cmp sbb add push dec mov xchg sbb cltd out aad ficom jecxz shl pop mov xchg gs int cmp mov cmp aam adc lret jns mov out test fs inc enter xor aaa fcomps mov pop mov mov jbe leave daa pop push pop (bad) mov push in jge idiv test mov icebp push es stos add mov inc push mov cmp mov adc in sub mov fucompp or mov movsl add lret call ds xchg loope mov mov adc xchg and dec mov mov in xor mov adc add test or dec cmc mov sub mov cmp mov jecxz inc (bad) lret pop sarl gs pop pushw jb jge in ror pop mov imul pop fadd (bad) mov mov cmpsb sub leave icebp hlt ret dec mov out test push adc jl hlt sarl and lahf jns jmp xchg adcl jmp inc cmp les cwtl xchg cmpsb lahf cmp scas loope dec sti les frstor ret jbe cld xchg cld test pop mov inc pop scas jbe popa iret jge cmp push jb int3 rcll push push jmp (bad) dec into mov out ret xor int3 jnp (bad) cmc and push push xchg jno fdivp mov push jmp movsb int3 xor pop daa pop pop aas subl fwait hlt nop mov out in cmp pop xor xchg mov int out adc pop pop mov cmp jle lahf fcmovnu pushf aam add mov jno xor (bad) mov (bad) xchg mov dec (bad) cmp mov lods add addr16 mov pop mov adc out divl cld das inc in out jns inc push fdiv xor add cmp and (bad) hlt xchg idivl fdiv lret mov sbb sub pop xchg int movsl icebp clc mov inc mov stc jno and imul push mov (bad) jnp fiadd sbb mov idiv out jnp scas xorl in cmp (bad) sbb lds pop xlat cmp push and (bad) outsl adc std adc jecxz bound jl out xor mov sub cmpsb mov out imul hlt xchg out subl add lret xchg adc out mov mov lret movsb scas jmp das loop fsubl jne cmpsb push sub mov jb out dec fsubl (bad) and in pop dec mov cmp pop push jmp and mov lahf xchg inc mov mov push popl ficomp leave jne lcall call jle ja into fwait scas data16 test mov add pop adc mov xchg jg sbb cmp test push in dec xchg xor inc add into (bad) mov es jnp mov mov mov std imul mov xlat movsl rol sbb sub fisttpll jp scas push cmpsl adc fidivr dec pop les lds daa cmp mov xchg inc nop xchg pop jmp mov push outsl mov addl bound jmp sbb cmc pop and adc lahf inc add pop ror les pop sarl jp dec imul ja cld arpl jno jns cmp mov adc ja mov data16 imull xchg movsb ljmp cmpsl arpl sub lock pop jb icebp ret scas mov pop clc (bad) (bad) xchg cmpw notl sbb jno push cmpsb xchg repz pop dec add loop (bad) icebp inc (bad) in mov dec mov inc sub mov jbe push push adcl repz sbb inc aad or mov repnz mov clc scas (bad) pop bound icebp pop mov aad shrl mulb scas addr16 lds in imull xchg add imul dec scas pop loop xchg outsb dec xor mov jae mov push cmp in cs inc pop cmp cli packuswb and sbb mov adc (bad) jmp (bad) ficompl mov cmp xchg cmc (bad) fisubr adc lods fdivs xchg pusha aam cmc mov out jecxz or cmp sbb orl inc mov sub pop dec aam mov aaa xchg xchg int3 push cli adc push sbb jno cld imul lcall push nop and mov ds xor fldl ss mov call push cmp popa cli out (bad) cwtl pop in iret jo hlt (bad) les aaa jg (bad) popf sub in aaa das add add xor and dec loope or mov add add inc add insb sub sub push ja insb push hlt stos mov xor pop inc pop pop xlat jo jns dec xchg in xchg aam jmp jne sti fist lret inc mov xchg push or (bad) in or jge jae or mov imul or inc and (bad) or dec ficomp push adc adc sub dec jbe mov pop lods mov lret stc (bad) cmp cmp adc lea pop loope int cmpsl xchg mov mov pop mov mov cmc sbb mov stos push movsb rol or mov or imul mov sbb push sarb (bad) insl (bad) xchg orl sbbl repnz int sub push fdivl cld insl stos sub cmpb dec jecxz xor mull movsb xlat xor pop xor test mov rcll outsl push sub jmp call pop (bad) movsb fcoms loopne add cmp jns xchg inc sub dec rolb (bad) popf lret pop imul out cmpsl loop int3 mov jne dec cmp cmp fs gs lret mov fidivr mov mov or fistpll jge sub in insb aam (bad) sti cmp test dec xor pop push jbe fistp cmpsb mov pop test cmp enter arpl or fidivr aam fldt sbb test mov test sub pusha movsb jp mov pop loope iret subb jecxz mov ficomp adc lock pusha inc push icebp outsl stos cs jb xchg dec scas in int cmpsb rcrl push out sub mov jle repz movl mov lock ret push scas or shlb outsb lock lahf test pop lods cmp int out mov dec push jle push std iret adc fnop cmpsl inc sar mov or sbb mov (bad) insb pop adc in and adc outsb jecxz int3 sar nop and orl and push mov es mov pop das pop fs out pop (bad) xor pop jbe cld les push test mov xchg out xor add pop mov icebp into add cli sub xchg push mov or dec in int jno xchg icebp leave mov into jno jb cwtl mov lcall cmp fcomi xor adc mov dec cmpl pop popa or int3 sub nop in dec sarl call ror jl ficom mov xchg fwait mov or daa imul pop int3 out cld pop xchg cmp loope in jmp jmp pop and (bad) negl mov mov push notl sub add imul inc xchg scas nop fild adc std in dec out and mov imul jbe dec push sti inc out dec clc test iret mov aaa jnp push mov aad insb gs scas and leave insb mov inc dec lods or fildl stc xor jg add fild adc jns cwtl or fiaddl ret pop jle and test and insl inc pusha add cmpsb add iret fiadd jmp or test jecxz jb add mov dec popf movsl cmc inc cmp pcmpeqw pop out imul and int3 negl ja dec scas divps and fiadd mov jp add test imul (bad) mov sbb dec std sbb push sub dec inc mov inc jl xlat push push fistl mov mov out xchg or and je js dec push push sahf mov and (bad) adc or lods mov mov je movsb jmp test xor mov add ret or test adc sub icebp and lahf jmp add test add xor testb das arpl mov call je push cmp divb jg inc xor movsb adc adcb ja xor jmp or mov dec mov clc fsubrl pop out popl fsubl out push mov sbb cmp aam out stc sub jns mov xchg (bad) iret movsl adc mov pop out lcall jns dec sub sbb rcr adc jmp fisubrl adc call sbb sbb fldcw push test mov repnz mov lret push mov bnd push push add add test jg jecxz and add push lea je cmc jg decl xchg push into mov enter sbb (bad) flds gs xor mov mov pop in mov stc mov pop or pop mov add lret ljmp jmp push mov mov jp sbb sub push popf push pusha cs mov mov mov fadds popa lods or mov push sub mov addr16 xchg leave fldz or addr16 jne add dec aas cmpsb clc mov or fsubr push rcll lcall cmp xor pusha cmp sub cmpsl mov fbstp sahf loop repz mov (bad) stos iret sub mov mov cmp xchg xor out (bad) and jmp ss mov sti incb xchg (bad) daa lds jg lock divl cmc js sub mov inc and cmp and xchg fimul mov pop popf mov dec (bad) push jmp lods les cmpl mov (bad) adc xor (bad) outsb xchg xchg and test mov sub pop jp int inc dec jno jbe fnsetpm(287 jbe sbb imul or mov lea in push add mov jb dec dec push inc push adcl pop das gs pop jae jne lahf jb addr16 and rclb sbb and xor mov out ficom add lds rcll and hlt sbb push push xchg sub jb and push fstpl xor repnz rorl ret add or js xchg jmp int3 movsl aam sahf fsts inc inc cmpsl (bad) fadds aad cmp and jns mov cmp insb div xchg or icebp dec enter cmp popf movl fimul or loop aam ja inc bound push dec (bad) dec je rolb sbb daa in fdivl fcmovne les pop movsb jbe inc sahf lods movsl sub mov dec das mov jmp inc sbb mov push adc shrb out push (bad) and test pop std and sub adc jne je dec sub cmpsb xor and subl loop stos mov fs xor repz sti hlt push add sbb (bad) jne inc fimul leave test mov popl iret xor and push aad fdivrs adc and test pop (bad) add mov or or sbb lds cmp sbb xchg mov lods push cmovl addr16 or or dec pop loop orl ficompl cmpsb xor mov test add out aam xchg jbe xchg data16 add or into add fwait or jo dec pop aad test cmpl mov sbb inc sbbl psubw jmp cmp mov push fcmovnbe jne mov mov pop cli pop mov imul das cld popf cmp or push stc xor lcall or mov call xchg dec pop out sbb jb fidiv jae aaa add inc xorb in mov inc aas sub pop xchg sub jmp push ret lods mov push repnz fiaddl pop push (bad) add jge js xlat pop dec mov inc imul pop jo cmp cmp mov dec mov mov shrb fisubr rcl dec mov jnp jae ljmp xor jecxz rorb push mov inc ret std xchg pop xor je inc sub int3 incb nop sbb fisttpll test es (bad) mov out jbe hlt out in and mov push fnstsw inc insb movsl and scas xchg lcall mov js mov out mov pop inc arpl mov imul pop xor mov inc popf push push dec dec pop out sti dec scas jle dec sahf scas xchg idivl mov mov cld in add cmp or (bad) mov mov sub movsb popa lods mov rcrb aaa lret (bad) jecxz adc add pop in jle popf cmpl push add mov mov mov fisubrl mov cmpsb push or popa sub sbb out subb movsb or sahf push movsb or es add xor jb and int3 mov cwtl movsl xchg in inc jmp xor int3 movsb pop call cli ficom and std das mov xchg sbb mov ja insl cmc inc mov fstpl lds fstl or sbb add dec cli pop call jb lret push cmp dec std jle int3 pshufw and sti xchg inc lods cwtl sbb push mov and push push loope adc jno (bad) jl (bad) mov pop sub fdivl or shl ficom dec inc adc pop (bad) cmpsb and (bad) xor mov aad aam pop xor xor lret pop cltd lret nop jno test cmp xchg andl shl test jno push nop fidivr ss std dec ret das or xlat fcomps dec cmp dec pop enter bound data16 fsub cmp push js in data16 dec add push ja scas pop jp (bad) ja jbe adc mov pop push aam test cltd cmpsb into outsl int pop mov adc outsl and xor ss outsb mov (bad) insl rcl shrl std lods movsl or sbb cmp pop jo stos and cmp mov cmpsb rclb shl int3 fs sbb mov inc push xchg mov and or or sub cmc lahf inc movsl stc mov sbb adc cmp cmpsb xchg cmp fmuls loop fimul sbb loop ds je lea das jp clc jbe sub pop lcall push sarl bound cs and xchg push xchg jbe out lret xor test mov sbb fcomps push stos pop int3 stos add es pop sbb push adc cmp insl dec pop scas pushf in jae lcall and mov cmp xor add out add pop nop call jge imul or repz adc inc les pop stos sub mov cmc incb or inc hlt mov sbb mov int xchg mov movsb rorb xor test pop xchg test (bad) sbb inc cmpsl xor loop adc repz jmp mov and roll mov pop stc or shlb outsl test mov jg clc pop push int3 xchg xchg push into lcall jne dec sub out iret push xchg mov andl in jg sbb inc or movsb inc sub out lock dec mov xchg push sahf mov mov push jmp lods jle fidivr lahf loopne cmp clc cs lea stos cmp push enter jecxz mov mov (bad) xchg dec push ljmp jb fsubrl out popf in jne cs mov mov mov lcall icebp ret arpl or cld mov push test sbb cmp pop xchg sbb add cmp xor dec pop xchg inc cmp push in xor mov cltd stos enter inc add xchg xchg push nop aaa sbb mov pusha push ret loopne pop xor rcrb pop push or or out enter cmp mov movsb stos xor cmc cmpsl (bad) aas adc mov outsl cmpsb jns (bad) lock dec sub mov cwtl enter and mov sub gs dec fmul scas cmp loop test loop inc or xor je or insl sbb ds fsts icebp xor incl es ljmp and loope cmp xchg ret push ja movsb jg dec inc xlat and lret jno inc add loopne sbb mov inc andl adc mov insb mov and pop adc sti loope mov dec adc push or ljmp xchg cmp repz mov movl lods sti gs (bad) xlat lds outsl jbe dec pop mov in outsb adc gs das gs push mov aas and popa xchg jge enter or fadds mov mov pop push cmp (bad) cmpsb sbb scas add adc inc xlat es push dec inc outsl ret inc mov decl jmp dec rolb dec sahf lsl mov adc mov lcall ds cs es push arpl aaa repz jge xchg fmull push les ret hlt inc push sub push cmpsb cmp test (bad) jb scas and nop sbb (bad) jbe pop adc inc xchg push xchg jns add cmp mov int insb lahf fstpl or xchg movsb push in dec imul jne xor addr16 mov and cwtl stc mov xchg addl mov mov dec jo mov std scas jecxz lods cmp je ss mov mov sbb pop pop dec pop stos loope mov and fcmovne js (bad) decb dec stc push outsl xor sbb jp ja jg pop jp adc adc push and xor in xlat pop inc mov xchg sbb stos push out mov aaa stos xchg dec int3 adc cmp mov xchg shrb rolb cltd fidivr shrl bound iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out ljmp loopne mov out xchg inc sub inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait mov fwait insl xlat mov fdivl insl mov loope sbb (bad) negl add add add sbb inc repnz (bad) dec xchg imull mov mov sub inc vhaddps fsts gs ds mov cmp pushf push dec aam xchg mov fldenv cmc sbb (bad) xor scas cli or aad and push fsubrl sbb in dec icebp sub and pop inc and sub pop pop xchg push push daa xor add mov or cmp lret sti daa je push sarb push add lahf dec movsb ret ja insl inc in ret mov xchg xor insb xlat movsl sub int dec lret sub cwtl subb inc cmp mov mov je scas test (bad) or and outsb cmp std jge add sub inc cmp mov inc cs dec fisubr notl pop push xchg jbe and adc stos in jmp shl push cmc cmp xchg out or cmp mov (bad) sub cld push xor or in xchg out pop pop (bad) (bad) cmp xchg outsb dec sub jb int3 dec dec mov pop and xor imul jnp jp add cmpsl ret mov sub or cmp icebp (bad) xor dec sahf sbb mov popf (bad) mov stos pop int mov jo iret mov mov call mov pop jo or imul das (bad) cwtl cltd mov or push in (bad) mov xor (bad) fbld jo xchg mov push mov mov pop cmp add js enter aam fist jo adc sti inc incb push mov ss and rclb test sub adc and cmp cmpsb xchg dec (bad) mov adc xor ret push mov adc pop adc dec insb jo sub stos or inc inc addr16 cli mov lahf jge pop inc sbb or roll loope push mov imul fbld jbe clc das fucomi sub pushf pop mov imul lds xchg mov icebp and movsl out mov inc mov xchg inc lock (bad) sbb vandps stos daa inc mov aas push xchg mov add (bad) jo ja nop stos xlat mov or mov push insl out pop (bad) repnz sahf popf and jno add mov mov xchg (bad) imull popf loop neg xchg or das xor adc push jne sub pop cli or pop lods mov xchg inc (bad) push jge jecxz push jg aaa out scas lods pop mov enter pop out mov pop sbb idivl mov pop inc out or out pusha push (bad) std insl popf orl fisubl sbbl out sbb push je pop mov pop inc push (bad) arpl xor mov lods les aaa sub xor dec out daa sub sbb jo lds cmp call call mov push jae cmp (bad) fs xor push and push mov mov mov add mov test and movsl cld or in mov in jecxz cld in dec push push sub outsl js adc shrb lcall push jb test hlt jg cmp mov cld dec test aaa lock in pop pop push roll hlt mov sbb pushf mov mov sub movb jg (bad) sub ret mov inc lods testb jno cli sbb pop rcr (bad) (bad) push cmpsl mov dec (bad) jbe out ljmp mov pop pop test decb jo test enter push cmp mov cld dec pop mov xor pop test mov test mov xchg lods les or cmp rcrl and sbb les enter mov xchg iret stos and daa and add daa nop xlat out sub jle adc loope xchg daa fnstcw add add pop add cmpsb add mov es hlt cli mov cld add push push (bad) sbb mov sarb push cwtl cmpsb les xchg xor inc push jl sahf jmp sub maxps scas dec push test mov jg inc stc lret lahf test jne out ret dec (bad) cld mov mov jecxz out xchg lock xor in cmp icebp test or mov jns (bad) ficompl mov push adc cli pop cmc and ljmp xor push pop imul inc iret popf lahf daa push and push mov adc lods rcrb fwait outsb push or das clc or ret sti dec push imul push inc or inc jae push popa stos and fsts (bad) cwtl stos dec in push fcmovu enter sahf in or inc daa mov and (bad) ds out hlt xchg ds mov popa xchg mov mov out (bad) xchg xchg (bad) sub mov inc cmp negb cmp jne cmpsb sub jno stos (bad) fildll push push pop adc mov xlat cmpsl cmc movsl and cmp push stc mov push ds les repnz gs adc pop lret jb insb sahf cmpsb (bad) repnz outsl mov inc cwtl (bad) hlt scas sub pop leave fsubp std or shl mov lcall adc inc or out aam dec and and (bad) imul rorl fcomps in jo popa add xlat outsl les push jae dec scas mov push add pop js xor push xor pop jno mov and (bad) and lods xchg jle bndstx jne mov push shl add popa dec leave and pop (bad) cmpsb mov std lahf push mov lds subb cli nop js inc mov movsb add mov dec into xchg lcall rcr inc and cwtl aas (bad) loop cwtl sbb pop dec jge subb xchg lods push xor inc xor mov dec cmp (bad) aam add mov ret test or pop bound rcll mov sbb xchg adc pop mov mov aas scas inc gs in (bad) mov sub mov jmp and jnp or jge test mov aaa fidivl cmp xchg icebp xor dec psraw loope jle cmp gs push xchg add mov push xchg xorl mov pop call test std xchg cmc mov pop outsl inc fildl arpl (bad) dec lret lret fcmovb mov (bad) xchg push jle add pop in test std mov pusha in ret imul xchg mov push fwait dec inc or (bad) ffreep adc xchg pop ljmp (bad) xchg mov jecxz movsb jb imul push push mov (bad) jl dec arpl mov xchg dec pop cmpsl pusha cmpsl sti push leave leave cwtl dec test inc jae (bad) int3 ds xchg lds gs jno popa add (bad) mov imul pusha insb fcompl mov popf fist cmp adc movsl lods loope (bad) pop xchg jne dec ret scas ret dec rolb pop fistpl movsl pop and sub test mov dec icebp push jge les loope jp jle test pop sbb lahf je push ss sbb insb cmp sub pop lds mov test sar sub cmp nop das icebp (bad) xor orb into xor mov inc inc add mov or or je clc movsb int out jp cwtl mov out or out xchg test clc dec js dec in fldl mov push nop aam aaa bound rol stos inc mov (bad) jge sar cmc add pop push fisttpl test loopne sbb xor es mov mov and pop push lret inc call test mov test jmp das shl int3 pushf inc cwtl dec and mov pushf sbb cmc aaa pop xlat fs out (bad) lock into test jns shlb fld sub fidivr dec loopne jo and out pop test pusha sti push ds inc lcall in mov das pushf mov pop repz dec pushf clc adc inc adc pop jge mov adc mov or dec and je xchg push fildll inc add xchg test mov movsl or mov jle out mov lods leave adc inc pop out lods (bad) mov jge cld adc cmpsl inc mov movsl mov lcall mov seta pop xor adc loopne sub int dec xor cld add jae (bad) mov sbb push mov pop mov pop mov mov jo xor lods push test mov or xchg push or inc and fnsave fcompl push jb jnp mov mov xchg scas sahf dec lock popa sbb rcl inc lods sahf jne pop shl pop mov sub in jmp out sbb (bad) dec mov idiv mov or loop lods add sbb sbb mov sbb push lahf aaa sub or std fld ret jb les add nop cli dec mov loop leave loop bnd bound xchg jne cmpsb mov nop mov xchg outsb sbb bound stos stos adc xor data16 adc str ja enter jae jg and pop (bad) jmp mov je adc mov and movsl scas and lea addr16 sarb mov nop fidivrl cmpsl sub enter into jg inc cli xor xchg jl cmp movsb push fnstcw jmp push repz pop ja lret jmp (bad) imul jo sbb cmp mov add mov fnstsw ret rolb add lret in mov mov sbb pop jae jle cmpsb roll cwtl pop fbld aad sub and nop sub sub dec movl pop sub pushf popf pop dec dec in mov push inc pusha mov mov test (bad) sbb jae mov dec or (bad) je sarl outsl movsl cmp int3 pop add dec movsl mov loop jg flds roll jne xor xor or enter lahf or jno inc push or or fsubrs fdivrl std add mov add (bad) fidivl jecxz enter pop or xor or movsl mov and jge lods icebp add in or jmp lcall push loop pop popf sbb push orl mov push ret or mov rcll std or mov out inc arpl push push cld dec or arpl lcall sbb lock jo cmp (bad) xor les imul popa (bad) pop jmp or addr16 adc inc mov dec dec outsl sub cmp lcall pop mov sbb add pop cmpsl out add jecxz mov call mov das mov mov adc test clc push mov jle repz inc xchg inc inc daa mov or inc push mov arpl add jb jo add add fsubrl push push cmp jnp add push or cmp pop lret or addr16 cs repnz push xchg mov ljmp jns dec pop push xor sub sub out mov movsl hlt sbb (bad) jb or mov xor inc stos inc sbb mov inc js mov (bad) fdivr (bad) xchg dec pop xchg adc js stos cli or jae xor fnstcw hlt lods dec cmp lfs or rolb sbbl mov frstor cwtl ret add int3 dec inc xchg (bad) jae sub pop pop leave and lret vpshuflw (bad) push lds xchg pop mov pusha test std cmp (bad) insb jecxz aas lahf clc divb addr16 mov jl lret (bad) es dec pop sbb fwait aas push inc adc in push xlat jb mov or das in cmp mov mov in add aas dec push incb or fbstp addl and inc les ror aas lahf jl and sbb (bad) gs cmc test cmp imul xchg ret sub jge inc fildl dec cmp and popa gs jb fs sbb fsubl out std pusha int3 mov mov insl jmp in jle stos mov mov sub push inc stos jno cltd enter negb sti stc mov test mov mov aaa xchg sbb inc jno and scas (bad) leave push ja loope loopne mov mov cs mov ds shrl lret cmp mov push add movsl add push push pop ds popa or icebp (bad) push (bad) je outsb ljmp adc iret popa or shl push mov jmp aad into sub dec jne cmp clc inc dec dec xor add mov lahf bound push push popa movsl outsb sti ja lcall add sahf jno clc jb mov xlat add adc push inc mov cmp cs outsl (bad) leave mov add sub (bad) cmp mov fldenv clc sbb jns push ljmp sub nop inc hlt aad leave stos push sbb pop push sbb mov and popf sub mov jne in adc out lods cs and xor js sbb xchg pop ljmp mov mov (bad) in popf and in xchg xchg ret push fmuls (bad) xor sbb (bad) mul sub jmp cmp add in inc cltd cmc in add dec adc add clc dec ror lahf xor stos daa push aad cld scas xchg or jp imul dec mov add test jmp adc lret mov or add loop xchg cmp jmp ret inc in inc sbb xchg mov sbb sub push inc inc hlt sub dec jnp and shrl movsl dec xor cwtl pop jp jns pop out xor daa push (bad) scas int3 jo fsubr ds or lret les pop lahf mov out mov lock aam stos lret aas sbb inc add out push pusha cmp mov push scas pop jns adc out sbb inc mov nop jmp jecxz or int (bad) rcrl out vmovntdq jo mov addr16 sub xor iret dec dec fisubl dec mov lret cmp mov mov enter lods or idivb (bad) dec sbb out imul cmpsb cmp call push orb lgs sub add cmp dec stos je or loope arpl outsb ret ret test rorl xor adc int xor pop fldt dec popa dec dec js out fild out mov repnz dec mov ja test sbb out nop and dec cmp in sbb fwait js dec xor rcll (bad) imul inc sub sbbl aaa mov mov cmp leave inc loop push jp mov aas std clc out addr16 add or lods push es lods fdivrl inc push jo fisttpl push popa inc iret insb mull rcrl or test adc lods inc cmp jb xchg shlb in inc push add xchg inc mov sbb push fs cwtd bound sbb pop xor push lahf dec jo (bad) cmp js xchg cmpsl lret add je (bad) sarb out add in les aaa xor lcall jo jbe outsb aaa ret or xor push pop test (bad) repz (bad) dec sbb lret int3 sub ja adc in xchg push les inc push je cmpsb dec and mov dec inc loop repnz cmp push fmull mov arpl sub ja mov or stos aad imul mov sub dec mull mov dec add xchg js hlt pop pop into push fxch int push mov mov push cltd lret dec mov fmuls sbbl dec mov outsl fstl fidivl xchg lock stos cmp pushf popa mov outsb test and clc cmpl cmp jnp dec push mov fistpll imul rorb repz sub push or mov mov clc push fistpl mov push jns sub shrb push test pusha adc cmp inc mov popf mov pop jle cwtl loop scas push xor sub loop test (bad) mov mov lds mov insl shrl out leave mov and or std sub xor inc add aas push push sub in dec xchg nop fidivr (bad) shlb iret adc sti addb iret xor xor and sbb add aaa out arpl in dec dec fmuls fsubrl bound sbb push loopne lea mov jp popa mov out inc jl stos xchg decl jmp loope adc xor mov and cltd or (bad) testb or adc lret into xor hlt lds fdiv (bad) imul dec rolb jge pusha mov adc cmp and out xchg push lock mov jb test xor cld xchg and das dec and sbb aam mov pop mov cltd dec loope mov repz (bad) and pop mov es inc mov mov aas add pushf fwait loope daa push lods jns mov sahf aam mov mov faddl jno adc test icebp mov jge push cmpsb inc sti sub sbb (bad) mov mov xor stos pop xlat aaa xorl jbe je popa (bad) mov sbb sub and xchg and push xor mov movsl push xor lret ror and je ljmp and sbb test outsl mov sub adc mov ss or insl bound cltd xchg fwait mov or jo jecxz jp (bad) test add or cmc aad xlat test sbb pop xlat push test push or cli in scas jbe push js push adc data16 fimull mov shrb lods sahf (bad) cmc dec inc bound push mov scas cmp push xchg stc pop mov popa inc js sbb xchg ret daa shrl cs movsb test mov fst adc push or pusha fnsave in sbb inc inc cli sbb push arpl sub stc xchg pop outsl or mov pop mov in cli and mov insl pop cld jne cmp pop in std or and pushf adc (bad) mov ja pop push popa movsb and xor cli inc mov inc xor pushf mov add ret mov xchg insl (bad) ja call stos inc sbb mov sti push dec iret cwtl push dec xor outsb ret push cltd (bad) or push push jo loope imul xor gs inc sti and test mov adc imul cmpsb sarb and stc pop and iret outsl sbb (bad) xchg fisubl ja pop push out out jmp sub adc icebp mov sbb aaa ret jecxz and out rcrb loopne cwtl xor cmp xchg adc cmpsl rorb dec in cmc fsubs or pop loope std and add xchg dec mov pop popf jns cs adc lock pop or pop mov es add testb (bad) jno je jmp enter les inc push repz mov sbb jns sbb sub push fsubrl sub jae jl test test out mov jb add das cmp inc out pop fcompl enter loope mov test jb pop dec mov xchg lds arpl jl inc call imul lods imul pop insb or adc enter hlt (bad) fidivl jae dec push push sbb fsubr cmc outsl testb sub (bad) (bad) test jbe icebp lods std add pop fistpl rcrb lahf mov and jge xor mov xor cmp xchg dec xor dec mov xlat int and ffreep aad mov or add mov cmp je cmpsb shrb pusha lcall push mov or stos (bad) mov jb (bad) xor into inc xchg int mov pop cmp pop cmp ljmp sub push (bad) pop inc pop jp adc fwait std adc jmp insl les (bad) sbb lods pop jle jno adc outsl adc fwait pop test xchg xchg jmp lods in xchg and data16 dec inc pop xor jecxz jge cwtl (bad) test lret push mov mov push movsb or out daa push fdivs jo inc sahf add movsl cmpsb daa and dec xchg (bad) lcall fadd mov jmp in hlt sahf aas icebp dec cltd sbb sbb sbb testl add fldl fimul or fldenv sub out push mov adc popf imul jbe mov enter mov pop mov psraw adc push addr16 sub inc test in adc mov out pop ret xor popf jp pop (bad) push cmp jae push sbb test adcl add scas cmp cltd mov in jae test inc sub inc add ret cmp int3 xor (bad) cli int out test daa je out jecxz and xor es fbld sbb inc xchg (bad) cltd fiadd (bad) pop out xchg jae pushw dec push incb push (bad) sub inc sbb xorl xor mov push pop adc jb xor mov (bad) stc push fistpll dec inc mov outsl cmp and xor and push incb ret jmp (bad) xor rorb (bad) mov (bad) (bad) mov dec inc stos mov test pushf (bad) jne inc jl daa xchg and jnp or xlat repz ja jbe push pushl test lcall xchg adc lds mov test cmp call pop addr16 pop not insl fucomp (bad) hlt je mov sbb jno push fsqrt pushf mov sub xchg xor fldcw inc lods lahf pop and and daa jge cmp dec loop xchg sub or mov jmp jb loope lock xchg push or popa dec rol call test fcmovnu fcomi mov cmpsl cmp in mov cmc push pushf push sahf lock jl cmp shrl gs dec and neg add xchg fdivl sub popa (bad) std mov mov mov test aaa cmp and mov lcall fimul sbb clc cmpsb arpl jg sub sarb adc (bad) fsubl xchg icebp jb les cmp mov mov popl (bad) jl inc push jge cld pop js (bad) jnp fisttpll rcrb pop in out cmp pop (bad) sbb push test and movsb test (bad) inc sub arpl std adc (bad) scas inc lret insb daa cmp push mov (bad) cwtl lods push jb mov mov sbb add dec adc popf (bad) sbb sub les dec cmp negl or iret popf or jne test pusha call adc jmp adc bound pop mov ds jne arpl lcall movsb mov cltd xchg adc inc mov ja xor loop aad add xor repnz xor ss (bad) sbbl mov jns repz add inc (bad) dec cmp cmc mov gs loopne dec jns lock movsl das popa test xor out push aas test xchg dec (bad) jo xchg fwait mov pop int adc aam push lock lcall lret out dec inc lret in lret xchg adc fist loope push push adc iret xor rclb cmp mov insb pop push pop outsl mov test fs ja jne add xor aam jge and popf add iret sbb mov adc in cmp push rolb fwait fwait dec es cmova das sbb add cmp mov push cmp xchg call and xor push shl mov lcall dec mov pop push push cltd popaw popf or pop push mov push cwtl mov fldenv lods and cmp test mov ja push xrstor dec sub dec inc (bad) mov es inc js push std pop push and out fwait lods inc sub loopne adc sbbl or jns xor mov out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl mov in idiv adc and add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc popf or fldt lret jbe outsb fldcw mov (bad) mov push popf aad (bad) sti std (bad) out mov xchg jg add stos xchg test cmp push in jbe and jae je int jecxz mov mov insb and mov and push int3 (bad) jmp imul dec shll lret shrl cli xor jb pop mov movsl dec lcall mov sahf orl cmpsb pop js inc sbb mov dec jl mov cmp jg ret addr16 data16 sti inc (bad) repnz sbb adc inc xchg mov nop fdivl into scas jmp mov push and ret mov faddl es and mov xchg fildll sbb lds sti fcom and mov cli mov (bad) fcom jb cmp pop sbb mov clc jb ret sbb inc sahf sbb imul mov mov sbb ja sub xchg pop pop mov rcrl in in in adc mov cmp stc shl loopne jae mov adc push pop jmp popa movq push shrb pushf addr16 test and pop pop int3 adc push mov out sbb outsb mov sub xchg hlt js mov inc sub mov push lods pop arpl mov inc bound incb fyl2x xchg and pop dec mov test or (bad) jmp ret leave or lret add push cld syscall insb or push push stc dec in js xor pushf out add fisttp sbb or mov pushf mov xor pop pop fs data16 out cmc or ds fstpl aam out sti sbb std mov xlat mov icebp rcrl lods add (bad) enter push push jb mov (bad) std (bad) cmpsb lods bound addr16 jecxz push jp push jg addr16 sbb sbb pop or jg cmp (bad) imull mov xchg push sub mov jno xor (bad) adc push iret add add out xchg mov xchg mov jp call pop sbb enter movsl sbb jecxz psubsw mov inc xchg dec mov outsb push leave (bad) mov fwait adc xlat lret mov fnsave ficompl es std popa mov xchg mov (bad) addr16 lret inc ljmp loope ret (bad) loop xor repz dec fdivrl enter push hlt or movsb add sub mov mov add movups mov sub xchg test (bad) hlt sbb push dec cmp cmpsl jns sbb sbb sbbb cmp add cli fsubr popa xlat xchg call aas cld xchg push adc call mov nop out push sbb dec jle int (bad) f2xm1 dec inc sbb outsl bound mov loope out roll and ljmp mov xchg jmp mov inc das or cmp js cmp in or cmp daa arpl inc add aaa (bad) add sub ret pop mov add stos add ficom bound popf xor (bad) out into arpl mov dec sub mov push cld into setnp or sbb repz cmp ret (bad) popa mov mov shr pop icebp xor lret in or push cli push popa test outsb pop mov shrb out add xor jnp sbb sub popa icebp lods cmp pop (bad) cltd sbb es mov insb adc (bad) repz popa adc pushf stc jmp data16 repnz xor cmc inc mov in pop pop mov add inc sbb iret (bad) sub cmpsl (bad) hlt dec add das sub stos lret pop xor std loope push cmp mov and push pop ljmp mov adc repnz cwtl cmp (bad) or cmp test fwait push fcompl dec fsts sub cmp mov and repnz cmp xchg lock test mov lahf inc mov enter and mov das xchg lods icebp enter sub pop in sub mov sbb cmp js pop add rcrb enter arpl mov ss inc adc mov cwtl sbb add push (bad) lret std out or mov sbb test mov mov loop les repz dec and push cs stc cmp dec lds and icebp cmp imul sub pop loop cmpsb pop cmp and inc or ret mov pop clc or inc fimull cmp pop dec stos loop ja mov push repnz adcb mov nop in push pushf inc push push pop lods fnsave mov sbb dec aaa fs pusha test nop fldl or enter sbb mov adc dec pop or cmp mov xchg or fidivrl push xchg addr16 and cwtl stos inc test lret dec loope pop fwait lods add in lcall cmp fcoml mov jecxz cli mov imul fdivrl add fcomi ds mov ljmp and jne mov inc icebp fcomps dec lea cmpsb int jg inc sti adc pop sbb mov stos cmp inc outsb stos arpl lcall outsl roll cmc (bad) call testb lahf or dec rcr xor jecxz jle cmpsb dec movsb (bad) lods sbb icebp add loopne nop repnz cwtl dec fidivrl call sahf (bad) js shl popa and dec xchg pushf sarb shr mov dec adc fidiv insb addr16 hlt inc sub mov aaa lock mov xchg mov push andl xchg inc mov dec rcrl stos loop inc push jno mov mov and out loop push pop mov sbb imul leave push mov icebp add mov ret in mov in fnstsw gs pop je lds inc xor jl xor mov pop fiaddl pop mov fisttpll test lret aam cmp imul sbb out xchg notb pop fistl mov cmc out pushf mov scas pop mov sub mov aas movsb jge sub or lea sbb in or xor sub outsl lods push fild enter jb iret ss inc roll cwtl fwait mov aaa jp (bad) pop add out sbb fistp xchg imul rcll insl push push push mov mov push daa mov fnstenv xor mov cld inc fwait pop xor outsb sti int repz pop jle in jb fwait lock aam sub cmc mov mulps movsl scas cmc mov lea cld mov sub push in inc xchg inc mov dec xorl or sub mov subl mov inc fisttp insb inc pop pop nop or jae imul cmc xor inc xchg and push adc fwait roll lcall push gs fdivrp cld or arpl or and lock jmp (bad) (bad) testb jg lcall or pop mov je cmp lds clc cmp outsb xchg ret mov jns lret pop xchg xor pop into fcoms add sub jmp dec icebp pusha dec and sbb push out aad add xorl and ret mov jp imul arpl ret xchg mul cmc mov rclb add and mov icebp xlat mov (bad) or cmp cltd leave out dec imul jle idiv movsl jae adc xchg push into add outsl ljmp fistpll pop xchg sbb mov push es (bad) mov mov mov mov cmp jne or test fsub mov push call icebp int3 rorl fcompl mov test test dec inc mov xchg imul lret ljmp jnp cli mov insb jns mov add icebp (bad) adc call loop jecxz inc push mov and sub push lret pop xchg push pusha jo adc (bad) mov rcrl push cmp and ficom fdivp ja push (bad) push lret xor data16 and int lret sti in adc test xor sahf jg imul leave adc inc leave insl xchg int3 ds mov jp cld or mov lea rorb pop pop fiaddl rcr pop popa and jb jno and cmc mov sbb (bad) mov js pusha mov cmp or push sub (bad) pop hlt fdivrs mov xor xchg inc or push sub sub (bad) jge pop jbe scas ret push add push and std xchg mov push pop jp xor cmp mov adc repnz pushl int mov dec orl jl fdivrl push push ds shll popf jo sarl (bad) push mov sti dec inc and pop mov stos sbb (bad) js lret mov inc sbb call stos mov inc inc rolb ucomiss aaa sahf pop dec add lret mov push insl mov dec aad mov xchg xor stos sbbb cld adc mov stos mov (bad) pusha sahf out std mov cmp cwtl adc xor outsl ret aaa adc jae adc je pop and inc jmp mov push fildll lock sbb aaa inc pop dec mov xor jmp adc inc sbb and sub es adc inc (bad) mov imul or mov mov pop test aas xor iret sti adc xchg cli push test adc xchg sub movb aad andl push stc je add mov fbld ror pop mov jmp sub adc sahf lds pop iret sub out dec jmp sub push addl stc hlt pop add push add push push inc mov inc cmp out fmul mov push pop mov rcll mov xchg jnp cld test lods test mov jae push leave ss sbb mov lods lock pop adc lcall push jecxz mov outsb xchg pop pop iret mov sub xor les ljmp (bad) xchg mov mov bound pop push (bad) jmp gs push cmp push fcoms jl fisub insb jg mov daa jp xchg ret (bad) mov pop popa cltd push pop stos leave mov je (bad) and xor rcll xor mov jbe cmp xchg pop push cmpsb lret lock mov mov and in dec push fcomps data16 sahf fstps notl xor fiadd sbb test adc xlat dec push lods jmp es dec and sub fcoml add mov js push pop push add imul stos pusha es fbld inc and push (bad) xchg mov rcrl das xlat movsl lds add hlt sub jg adc fwait xor sub xchg ljmp sbb (bad) sbb fcomps pushf push je fxch scas mov es pop cmp (bad) mov add jo test xlat neg push mov or or jne lret push inc mov cmp lcall stc lret imul ljmp pop lahf (bad) rcrl inc and (bad) dec cmpsl into sbb add cmp test jl fild ljmp sbb fcmove test jge xor xor pop cli pop bound repz imul and ret mov ljmp fcomps movsb sahf pop and cs in jge adc lea in xchg data16 sbb lahf or pop aad xor dec sub rolb or sbb cmp dec sbb jbe cmc mov lret push and sti push out pop and mov mov pusha push aas loopne lods add cmp fmuls arpl jge pop mov aad icebp jno jp popa mov outsl hlt mov sbb and (bad) sbb xchg jno ret mov xchg jne sub popf (bad) cmp mov inc jmp jecxz jnp adc cltd cmpsb inc and mov test loop dec push mov lods pop (bad) rcrb dec shll add mov pop (bad) lret in push jge mov mov pop inc sbb andl fwait iret scas ret inc jg sub outsb cmp lea fsubl add out sti or pop jmp jg,pt stos lret ret xor cwtl ficoml in push daa jg mov and mov xchg lds cmpsl ss push sarb xorps lahf lret rclb xor lods push cmpsb mov mov mov cmpsl jne xor mov or mov clc mov inc in cmpsl out mov fcmovu test adc and sub ss or arpl fildl test in lret mov scas (bad) xor push mov daa xor xchg aad test sub nop fcomp mov aam or lcall jmp push xchg xor fstps mov sbb divl lea inc cli or ljmp (bad) ljmp fs mov cmp mov push fdivs xchg out push mov in inc arpl in mov xchg xor lea (bad) sub mov mov sbb jmp les sbb (bad) in fdivrl lret dec xchg dec fidivl jno cmp pop and and or cmp stos or sarl bound cmpl or mov das jae scas cli sub shrb mov inc cmp xchg out sbb cmp xchg in push ja std mov lods (bad) cmp jle push jmp cmpsb push xchg stos mov mov aad inc dec mov xor dec push cmp xchg and jmp fadd icebp das mov loop imul jno push cmpsl jecxz sarl in fnop les fadds inc add xchg mov mov inc jb dec mov sbb test mov fcmove mov inc fcoml les clc (bad) push jl movsb mov jbe popf cmpsb mov fwait stos dec stos dec fcmovne test jne orl mov int out xor pop sbb jmp (bad) xor jl xor push cmpsl fcompl add (bad) xor push stc inc stc or push mov fisttp imul lret push sbb in out mov ds mov xchg lods pop hlt gs push xor aam roll fistpl lods repz pop (bad) (bad) hlt dec xchg popa fs mov jns mov mov push dec xor push (bad) sub es in xchg fwait pop lods pop sbb int arpl xor jge in into add xchg inc xchg repz sbb sarb lcall mov les sub or les (bad) mov int mov mov jl aam mov je negb sahf lds mov (bad) cmp in jb cmpsb mov sub test movsb or mov mov or in inc pop shll ss sbb dec mov push sub cmp nop scas inc jb (bad) js jge jnp jns ret loope imul push mov sbb push loopne or jb and aad dec fldt hlt cmp sbb aad xchg andl repz jo or cld out js into or jecxz push js sbb or aas out sub outsl cmp cmp inc xor decb lds mov in gs jge lods xchg ret and cmc fdivs ljmp push dec (bad) xor pop loope into push pop gs pop pop (bad) and push mov in scas (bad) mov (bad) je popa xchg bound jno push cwtl lret out loop cli leave adcb mov clc pop (bad) mov add leave cmp and inc jmp insl aaa dec jno imul fadds insb aaa jnp call std cmp lods or pop inc lods pop cmp test mov iret sbb mov mull test lea mov imul test sarl mov (bad) data16 inc (bad) mov pop int3 cld clc out cmpsb aas out adc sbb js mov xchg xchg pop jecxz incb fstl add stos mov pop imul cmp mov jmp into pop es rorl outsl xchg cmp cs stos cmpsl mov icebp pop sub in jmp (bad) jb push bound dec mov xor xor sub jge pop dec inc pmaxub pop add popl xchg or test xor fnstenv pop mov mov insl inc jge repnz xchg pop cld cs sbb mov int std insb cwtl loopne pop in mov and les jle jb shr ret nop int lods xchg and sub daa and out mov jecxz mov fwait sub inc test out pusha test sarl lcall aaa ja in hlt call sub push dec jl jmp and xchg add dec xchg sub addr16 (bad) es mov mov sbb mov pop jl sub jnp cmp inc jle jmp je lods dec (bad) jmp aaa int and mov dec pop and inc cs inc xlat cmp aaa nopl xlat clc pop fistpll bound (bad) xor sub pop mov push int adc out inc adc sbb pop stc xchg jg iret enter hlt aas xchg (bad) push mov pop rol push repnz xor pop lea out xchg sub xor repz push or dec pop mov call pop outsl and xlat lea ja cmp ja push jp dec and dec es jg in mov or in stc cmp jns loopne mov fwait aaa test sub sub mov ljmp xchg js xchg add sarb lret dec loope mov outsb xor jl push loope pusha pop cmpsl out mov xchg (bad) push xchg stos xor xor pop mov jno or bound jnp in xchg push lret (bad) sub cmp repnz jl notb mov pop jbe pop lret (bad) pusha popf fisttpll adc cmpsl pop aad add (bad) mov adc dec arpl push or out dec (bad) mov lock cmp push insb movsb mov push adcl xchg jg and sti test pop xor repz fimul xchg imul or cmp cmp pusha out inc mov inc ret or nop test add sarl add icebp sub rol nop lods push push jp int3 ret jl mov mov fwait out fst sbb mov mov (bad) aad scas arpl pop pop mov add mov lcall fnsave inc and ds sbb loop cmc jns sbb idivl imul adc pop leave inc (bad) sti mov leave push insb and inc ljmp or jmp or jo fnstenv mov lods std sbb adc and or test and mov cmp insl test ds aaa imul loopne mov iret xchg push inc mov inc lock adc fsubrs sub in cli ret in xor xchg cmp data16 mov adcl add scas pop mov pop jae stos lods scas or mov rcl pop push add popf cwtl mov fmull jge and pop lahf ficomp (bad) dec fwait int and es adcl pop jl push mov mov leave xchg mov inc jo (bad) cli mov inc icebp clc inc int3 in fnsave loop dec into ss lock inc mov stc push outsb fcoms xchg movsb xchg int ror mov inc lcall push pop inc sbb pop push out cmpsb pop push jg sbb (bad) jno xor jns ja hlt jbe in and sub pop test or hlt and adcl cmp divb fnstcw scas sub and in lcall xchg sub into out sbb xor mov test aas or or loope dec push lods sub sbb xchg inc xor jp dec stc (bad) shll cmpsl pop loope push test out push pop mov outsb xchg push call (bad) out jl mov pop je or cmp es push sub icebp jb js dec mov xchg or mul xchg sbb cwtl sbb or mov xor fisubl xchg mov cmp popa cmp xchg aas imul int pushf pop sub stos in add test push sbb pop or xchg fdivs sbb icebp out and mov enter adc add negl cmc mov mov stos xor aas insb iret sbb mull fldl xor inc pop xchg ret stc mov and lds stos or mov and dec stos mov mov push jae,pn test test ret adc loopne out popf jo in or int insl adc (bad) subb pop xchg push lahf ljmp clc jecxz aas dec jno dec cmpl lock inc jmp inc xor lcall inc in xchg ret sub (bad) gs xchg fnsave inc cmpsb pop and (bad) and mov loopne push add add fadd jns jne addr16 pop adc aaa outsb and fnstenv int3 push int aam test sbb imul movsl fnstenv dec shll mov std push jge push insb jp ja pop jns jne push xchg cmc pop ds clc (bad) das pop adc mov ljmp test push dec push mov pushf gs xchg fiadd dec sub dec adc cwtl mov xor test xor jb or sub aas rcrl cmpsb cmp push pop xor test outsl stc in (bad) sti repnz in mov les mov icebp out sub outsb xchg adc ss mov push mov and xor mov cld xor push jmp mov (bad) pop pusha xchg dec jbe shll cltd jae mov mov xchg mov in add (bad) jge cld out dec xcrypt-cfb cmpsl gs xchg pushf addr16 sbb push mov in xchg push jbe sti (bad) repz pop xor cmp mov outsb mov out push jmp sub jnp (bad) fs jle rorb (bad) or xchg mov adc or fisttpll add cmp xchg test mov push aam pusha push sub push jl adc sub ror pushf push mov aas test xor xchg in pop mov cmp sub cmp call cli lcall scas xchg cmp pop pop sub jb shl ret ja xor push mov int mov and outsl dec inc push mov loopne or push mov sbb sub xor dec outsb (bad) jecxz fldcw fimull add fwait idivl pop and cmpxchg mov int3 xchg lods push sub sahf arpl dec or movsl inc dec sub aas in mov xor (bad) cli dec test sbb sub push xchg adc mov jbe jb fucom push out test popa push mov sub xorl adc mov out rcrl jle cmpsb xor pop mov pop push ljmp fadds pop (bad) loop fdivr data16 inc xchg push loopne push pop ljmp jecxz sbb (bad) lds push in (bad) jns push cmp insl push mov sub mov pop (bad) loope (bad) sbb mov ljmp imul or inc xchg cwtl insb fwait lcall push rolb stos xchg mov xchg or pusha lret xchg (bad) testb pop shl push div mov mov or and movsb jns movsl outsl test lods scas (bad) repnz mov aad push jmp jo xor mov push mov pop cmpsl scas lods fxsave fdivs adc (bad) faddp (bad) test fwait lret add shrl mov cld jecxz add mov and cmp fnstsw dec xchg xchg cmp into ret cmp jnp (bad) and in (bad) fild data16 mov nop inc dec pop pop imul loop pop rcll dec sub rol in fs daa scas roll sub xor pop mov outsb sbb jg jecxz mov mov and mov stos add cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add aas adc mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait insl xlat int insb repz insl (bad) fistpl lret pop cmc jle sti into add mov add shrb loopne add pushf or xor jp push scas lds ret sub add mov mov push outsl mov push dec push lret repz or sarl (bad) (bad) add loopne out pop icebp call rcrl add dec pop pop inc adc iret sbb push popf fistpll loop neg or dec mov cmp cmp or sub mov adc jp es mov or scas dec cltd inc xor in in mov lcall or and add sbb pop adc unpcklps lods ror aas inc mov xlat xchg push sub xlat jnp jg aaa mov call rclb shrl and fucomi pop pop cwtl add jae test lea mov ja jns pop adc shrb cmp xchg adc push push jge push sbb adcl pop add push fsts xlat imul scas jnp add inc pop cmp bound icebp fs inc in inc lods or mov enter adc inc pushf insb mov xchg adc inc jg cmp orl ret pop xchg movsl jp popf imul lock jbe xchg push mov cmp push mov cli jmp mov jl pop push lret ficoml icebp scas mov loop test enter mov (bad) shl into (bad) in out test mov pop adc ds dec sbb sbb movsl xchg adc sbb leave aaa lcall mov fisttpll leave mov xor dec call jb popf mov add loop cmpb stos inc bound and scas adc (bad) and sti cmp add or or (bad) ljmp (bad) lds pop stc mov fimull dec cmp dec dec std sbb lea push cmc aaa repnz sbb pop (bad) cld stc cmc add aam jns ret dec mov rorb mov sbb ja mov mov les push ja sbb and lcall inc jne xchg pop in lret pop incb mov cmpl xchg pop xor sub mov push xchg adc repz push inc lcall jp cmp pop int3 cmp (bad) xor push or or lock outsl (bad) jbe sub out sbb sub (bad) imul inc aaa imul xchg test xorl sbb inc jne jg inc gs repnz daa jae jmp cmp jmp repz push shrb in jnp imul sbb aaa mov fimul fdivrs mov sbb loopne repnz push xlat xor jnp (bad) xor mov pop rcll popf pop add inc push cmp push mov pop sti jle fimull out orl addr16 cmp add adc or jmp out sub lahf xchg cli push shrb std movsl (bad) push or mov lea jp and repz ret je cmp jo stos xor (bad) sub shrb mov jb mov repz clc in test jae inc enter push (bad) out add mov mov push xlat mov cs pop push xlat test lcall sti pusha and or mov adc hlt inc and incb dec mov ret or and subl mov addr16 adc xor mov mov call sbb outsl subl cmpsl cmp fstl pop sbb in inc xchg lods adc dec fwait movsb out jg mov mov je mov insl mov push (bad) roll mov xchg pushf lods mov lret mov push in test ljmp inc pusha jp push push mov add inc cwtl out into fiaddl mov ret icebp fs rolb jl and and and sub dec pop (bad) cmp dec bound mov or rol dec insb mov xchg cmp push pop adc pop pop popf inc movsb sahf or jo aad cld xor add adc scas int lret insb enter std xor pop (bad) mov add push outsb fcoml in cmp or cmp repz ja sbb lcall cmp mov sub sti movsl push cmp in test aaa mov aad xor pushf mov pop repz push imul sarl mov das inc jae xor imul enter and pop add movsl mov js sti idivl loopne jbe pop pop mov cmpsl jno inc stos ljmp in mov mov jg dec sbb mov adc subl mov hlt dec xchg xchg push (bad) aam pop mov out xor or jb add add insb sbb xor jb jo jl mov fwait enter sbb ss hlt jle xchg pop add fucomi roll mov push (bad) in lea lea fdivs dec std aam or xor jecxz imul pop stos scas ret sub push sbb xchg dec cltd imul fs dec mov test fildll sarl jecxz aas jne int3 push adcl fstpl sbb (bad) sub dec xor xor es and loopne and jae xchg jge cmp xchg cmc adc inc test sbb imul dec in mov in lods ficoml popa push adc xor pop sbb jg adc int3 lret inc mov fisubr pusha fldt pusha movsl inc aam jmp imul je imul xor sub cmp pusha mov and add mov aam xor xor or adc or std cmpsb push mov mov cmpsl jmp push fdiv jae jge cmp fiadd daa xor xor insb add mov xchg pushf fldt xor lock add sarl repz les jg push je mov push cmp insb inc pop repnz cwtl mov fcoml jp arpl out mov dec add imul addr16 or test add xchg pop adc ljmp adc in mov jne cs push dec mov fimull fimull insb xchg xchg xchg dec cld dec cmp inc mov cmp cwtl repz and (bad) adc call cltd in and cs stos jae xor dec and cmp inc xor cmp inc outsb jle and sar inc mov aaa jo and cmpsl fcoms cmp adc jbe or pop sti scas add xor or je pop sub xchg push flds pop mov fldenv das testb and ds dec testb sahf inc lcall aas xchg mov add in xor in cmp je dec inc (bad) clc aad cmpsb int pop adc and addr16 or js push or insb adc imul loopne add sub inc and add call cmp ss in xchg call push jl stc or cmp (bad) jne add and aam lcall fcmovu jge xor and pop test icebp mov push stos jne push test stos jne mov xchg mov mov pop les mov push push mov lods jg jnp sub enter andb mov jg pop xchg les inc mov test pop bound ficom rcl out inc (bad) lds loope repz cmp faddl shl mov xor or call (bad) cmp sbb inc cwtl lret push mov mov sub int push in lock lds lret push jge sub xchg lods mov (bad) or enter jmp xor inc insl lock sub xchg movsb mov imul pushf fmulp popf push pop and (bad) xchg or xor ss mov adc add fbstp ja push mov adc adc xchg out inc mov adc pushf dec mov mov addr16 cmp (bad) mov pop leave cmpsl or jecxz lcall push mov push jb xor insb enter inc sub lret movsb cmc lcall mov (bad) jnp in lods dec sub lcall push enter inc or mov lret sarl arpl loopne test mov adc pop and or xchg inc sub jae pop std cmpsb mov pop adc xlat sbb clc fwait out pop scas fadds mov ds xlat jae lcall (bad) into push (bad) pop int movsl cmp stos adc test sub sub lods xor mov icebp movsb cmpsl dec sbb es push xor mov and pop iret mov into pop data16 cmp mov xchg jl fidivrl fcoms scas adc mov xor movsl jno roll mov xor cmc push push push pop dec or xor pop fldt pop and sub lea sub sbb shl pop bound outsb fidivrl ja ficompl push mov push add and ljmp addb js jb jmp lock sub mov cmpl and dec nop mov mov mov pop repnz lretw push and and fsubs jns pop add mov iret into out into ret mov fisub push push mov xor nop add fldt xchg inc jmp sahf loope inc lahf sbb icebp dec roll jle pop lcall test dec push scas fimull les in lea addr16 mov dec pop movb or into pavgb mov aam xor outsl jns imul loopne es xchg mov mov mov mov shr or (bad) fdivl aad cmp mov adc lea out (bad) jmp inc push ja fiadd mov xor in cmp sub push or cld aaa orl mov popf mov jae pop mov xchg push xorb (bad) outsb jne (bad) dec ret xchg pop jle push std sti ficoml mov jnp pop fisttp and imul stos shll (bad) rcrl rcrl inc (bad) das enter stos dec test cmp aam push jns cwtl mov jle icebp mov ja dec xor xchg loop popf cmp xchg jg or pop xchg rorl stos stc xor sbb shlb pop sahf lods std ds js adc dec ljmp pop imul ret sub push adc lret jns fistpl pop add stc leave and inc pop cmp adc shrb sub rclb fisubrl mov iret ljmp lds dec stos int xor jbe gs push aas cltd sarb ret and mov push mov ds rorb xor lods inc leave xor mov dec les leave pop paddd add pop cmp fstpl pop dec lods pop fs stos les push and roll cmp jbe mov lret xchg jecxz jne outsb jge mov push fwait movsl insb mov or punpcklwd add scas xor jne ljmp mov sub (bad) xor movsl ja cli aam nop jb mov fild out inc nop mov inc add fidivr andl push jp push xlat rcll shr fcmovne leave aam mov in mov lods mov je dec pop jg sbb shld xchg push inc cmp scas test push cwtl fadd (bad) pusha or (bad) jge sbb xchg ja mov inc cltd xor push lock je repz out aad jns ret inc xchg jae dec and ret insb daa add and adcl lods int and aaa xchg adc inc test push je movsl dec add js mov sti sti bound icebp sbb cmp iret cmpsb sbb enter imul pop fsubr lcall loope hlt jns imul sbb jp xor ds jmp iret mov sub push push fwait xchg mov dec sub ljmp and inc sti addr16 push aam aaa adc mov pop das adcl sub dec rol ja lods xlat add pushf hlt push (bad) mov pop and xor cmp and inc cmc pop pushf rolb rolb fucom fs xchg push pusha or jecxz jmp neg mov lcall xor inc lds lret adc outsb movsb dec xor xchg cmp ss rclb cwtl fwait sbb bound pop jl movsl xor (bad) sub out (bad) mov leave cmpl in jecxz pop inc stos pushf pushf fdivs repnz addr16 mov sbb test pop stos in jle insb fisttpl daa test dec imul arpl (bad) std lock push pop and or orl jb pop jecxz fsubl pop roll dec pop pusha aam aas nop (bad) aam jb (bad) jne dec cli ror call push fs das pop sub popf dec ljmp int3 imul inc ret loop bt jno movsl push daa jno push adc dec mov mov (bad) dec mov or pop add aam push mov adc in (bad) cmp fstp or icebp inc ficoml loop sbb adc mov cwtl lahf flds icebp mov mov sub mov cmp jno sub insl mov mov or xchg pop jno idiv in jnp xor mov push inc jnp and (bad) loopne sarl les mov xor lds shl imul rsqrtps subl mov fdivp shll push or and adc icebp mov sbb mov test pop pop xchg sahf xor lods or roll cmp rcrb jnp andl and push pop cmp fdivs xchg mov lea rclb (bad) ljmp addb sahf and (bad) push cli pop fdivrs pushf xchg sub mov pop loope dec xchg add push add fisubl mov jb mov add std nop cs xchg es mov cltd scas inc cmp mov or in ret in call bound movsb sbb cmp cmpsl sbb xor mov and call push push mov in xchg nop jg adc ret dec (bad) negb push sub dec xlat jnp and mov push mov xchg adc daa jo and inc xchg pop hlt jb push jmp sub jno push add mov mov dec mov outsl and nop popa pop pop jnp jno test mov xchg test std scas cmp xchg inc bound int3 test es es jmp and jnp and in and frstor or mov stos push insl cmp mov test and mov dec inc inc aaa push das addr16 repz (bad) les push outsb mov jne enter mov ja fstpt mov adc lret les out fisubl push in les jecxz add sahf xchg sbbl ret aaa sub pop push cmp dec into js and mov shrb iret mov pop sbb es mov mov (bad) iret and (bad) (bad) pop or cmp sbb inc and pop test pop inc push xchg dec fbld adc xor sub mov fildl fcoms inc push popf mov push jb dec jno fnstcw mov out adc pop je test dec je cmp daa mov fisttpl out push inc inc jle mov cmc inc add jbe rclb xchg or fstpt movsb push jl mov pop cwtl repnz (bad) mov test add fsubl shlb dec (bad) negb inc shl sbb mov dec addr16 ja push jns cmpsb out stos pop (bad) scas out inc or adc and pop popf int into fstpl test mov jnp cmp mov jl lcall mov std add ret mov enter mov (bad) cmp test cmpsl and push push out xchg pop jb sbb sbb mov mov jnp and pop pop push lret add add mov shrb movsb nop lahf pop cmp jle sbb notb jne in xlat xor scas mov cmp call mov divb sbb (bad) adc cwtl push and cmp jmp ds mov cmpb lea pop mov xchg xchg and jg jb or lock mov imul inc popa xor testb testl mov inc xchg fs pop ficompl lret sahf in daa mov jae push cli ret inc (bad) ljmp aam js lcall sarl jp arpl and adc jl add and push popf popf aam lret push (bad) test pop lcall scas popf push jae xchg or ret icebp inc mov adc sbb sub mov ret (bad) ja lea mov hlt cmp outsl rcr jb clc (bad) sub out dec jne pop loop pop mov fistl ffreep movsb aaa call mov insb adc xchg pop pop (bad) rclb mov jne mov mov push and mov dec cmc inc hlt int sti inc insl movsb out aad cmp jb mov cmp mov xor scas adc rolb cmp loop mov movntps xor xor sbb inc jecxz xchg cmc iret lea lds cmpsl sbb inc ffree jl xchg pusha into movd sbb adcl cmpsb aam dec mov inc scas cmp pop (bad) enter lcall xor arpl js xor gs outsl iret xchg sub (bad) in iret mov pop ret in ja pop iret mov xchg jne stc inc sub out sbb mov adc jne loope ljmp sub fnsave cmpsl scas or add mov loopne jns insl xor scas cmp mov or inc jb pop test sub cmp inc fidivl sarb xchg and inc lret add xorl adc orb pop outsl push inc iret in sub mov fldenv inc call leave das mov xor out mov and add and fbstp lret sub jl lret ficom mov test push sub or ffree fistp adc movl adc ret mov mov addr16 adc (bad) int3 inc mov jge iret xchg (bad) rclb jb mov sbb mov inc sub xchg fsubrs jbe pushf setb fnstcw nop fs fcoml (bad) mov lds lock push lret inc mov and lods add fmuls jnp movsb mov cmc jmp sbb (bad) mov out (bad) pop stos xor (bad) movsl inc hlt or pop ret sub loop sarl or rcrb jne xor cs jmp lcall add push jo ficomp or incb (bad) pop sbb dec or add (bad) dec xor push loop inc movsl mov xchg jno gs js push lcall cmp rolb mov sbb inc test xor or ss or cmc mov shll nop cmp pop cs js scas xorl lds jbe idiv stos aas pop mov dec jae stc fdivs rcll lcall imul into inc data16 loopne pop in fdivr push loope mov mov xor and cld xchg iret adc adc cmpsb in or push cwtl xchg mov xor jbe jl (bad) adc aaa fldl movsb pop and ljmp pop ret pop idiv das xchg (bad) lock xor stos out imul mov pushf mov push cs lcall inc sub out sub xor out sbb jo bound lahf mov pop xor sarb mov add lret repnz xchg dec jle test dec fistl fnstsw jae mov stos dec inc arpl push in cmp xorl jp out ljmp movsl sbb repnz rorb xor repnz aaa mov inc das out adc xchg mov lahf pop cmp push mov imul cmp inc push cmpsb jne popa jnp dec mov (bad) mov pop mov sbb adc and xchg outsb sbb or pusha sbb in mov jle (bad) lret sti mov pop xchg push hlt lcall rorl loope push jl test mov test pop xchg dec lcall dec enter push jae jns mov mov jb scas or in xchg push outsb xchg ja ret outsb xchg adc popf fsubrl or out mov loopne cmp hlt add xchg (bad) fdivr cmp and aad mov stc stos adc test pop int3 imul xor jmp rcll (bad) stc xchg lods inc add fwait outsb pop adc stc xchg mov xor nop fidivr leave pop mov (bad) aas adc inc xchg lahf xchg sbb push (bad) cmpsb or fs scas push push fwait dec mov mov mov adc das xor add or test in dec xchg inc push js adc cmp push mov mov inc and inc mov pop sarb aas jp stos sarb in fadds mov sub cmp cmp dec in push dec push jne in cwtl push sub add gs xor sbb jne pop popf rcr adc push and int insb cli pop out ja adc and sarl xchg test lret pop movsl mov scas pop flds leave push les mov sub aam jl pop sbb cld arpl mov adc js call inc pop pop or movl xor cmp insl imul inc push dec sbb loope and aas jne fldl2t sbbb (bad) or mov in dec aas add pop mov xor imul jl add jns jnp add adc mov xchg imul push int3 (bad) xor or cmp lods adc xchg jb push ss adc xchg xor push mov daa lcall jmp cvtps2pi mov push mov mov hlt lds xchg jnp sbb fwait (bad) fldcw mov mov jle daa movsb arpl push and lret jge sahf sub imul or mov dec call push add loop dec pop stos xor mov insl dec (bad) cli bound sbb negb pop (bad) mov jns mov mov das inc pop mov cmp enter outsb jecxz cmp ja sbb in add insw add xchg sub fcoml inc xchg insb push (bad) or pop mov negl mov mov pop (bad) lahf mov rcrl push and test mov mov pop sub fcompl fisubrl jno jns dec test adc dec dec xchg mov insb xrelease mov xchg lock and mov fisubr lar roll and into aaa lods dec mov imul push (bad) icebp orl add push scas inc int inc stc int3 mov outsl test inc push mov and imulb flds addb iret sub pop out or mov test inc xorl ss pop es lcall jle iret out rcr push outsb jg xchg cmp pop jmp enter int3 out cmp add das call cltd ds test mov daa ret arpl rcrl dec sarb jmp mov cmp ror das outsb or test mov jl inc jl or mov pop icebp sahf rorb leave lods dec dec int out add xor push sbb xchg push inc adcl ljmp xchg scas add mov xchg test test sub out xchg fchs jge out sub and pop stos outsl pop add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret lcall add jg vmulps jp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg int fcmovnbe xor pop outsb lret mov pop daa mov (bad) negl mov add loopne add leave pop and jnp xor int3 cmp mov stos not jbe stos pop test data16 loope sub inc into outsl sub cvtps2pd popf or sub inc aad jns in jo push pushf mov jl xor out mov movsl bound cwtl cli dec mov xchg out add add (bad) lret lahf fistpl inc data16 aam adc cmp mov loope (bad) fisubrl test lods loop stos push scas mov jecxz push (bad) cmpsb adc lcall mov inc insb xchg cli (bad) pusha (bad) hlt push test nop xchg cld push pusha lea mov lods aad adc test outsb mov xor bnd loope and xchg jp insb mov xor cmc dec daa jns mov (bad) ja sahf movsl dec mov test cmpsl xor pop adc stos (bad) lods xchg adc mov gs lds mov cmc push js dec fimull pop iret inc in jle lds lods insb lahf inc pop adc add fldenv std adc sti inc in std adc mov xchg cwtl div mov xor test cmp cmp adc in pop mov jae or add hlt and fisttpl and add fstpl push mov cmp dec push push push std jb cmc loope lock rorl insl cltd ret hlt nop loop lret xor mov iret jno mov popa xchg dec xor xchg jg jp hlt xor movsl (bad) jmp push add stc mov and es shlb dec fisttp xor fnop fimul adc (bad) cmp push lock fstpl mov mov idivl xor popl sbbl out das mov xchg pop adc pop inc adc adc out (bad) ljmp mov mov xchg pop or pop lea lock mov out xchg sbb or dec stos push sbb and shrb wbinvd arpl jo rcrl imul adc loop movsl fs cmp daa jns push adc sbb sti divl ss or xorl sub push scas inc mov mov and xrelease dec fwait sub data16 xlat out xor fsubrl pop push push jb xor (bad) mov xchg lret movsb jle inc pushf shll mov sbb insb jb insb push scas mov aas aad andl cli in imulb (bad) jge jae stc (bad) xor imul push negl jno out xor fcompl and xchg loope or mov or adc cmc xchg (bad) iret sbb push adc push insl mov inc ja mov outsb xchg pop jl pop pop mov add cmp out cmp pop mov jp pop orb pop xchg pop call or popf push mov movsl cmp mov xlat bound xor or stos cltd cmpsb aad cmc inc insb push cmpb test jge push xchg dec inc push add popa cli loope sbb sub into stos sub and add dec jb mov cmp dec jne mov mov addr16 popf push stos xchg jns mov imul into xchg aad cmpsl out ret adc test push push insl mov cmp (bad) jmp sub incb pop dec push addr16 cmp daa add out fnstenv imul cmp out pop out ss test mov es pop jg mov scas jle add stc adc inc out or sbb inc sub jp loope (bad) std push fldenv ljmp pop dec orl repz (bad) into mul or sbb bound scas push mov test xchg cltd cs mov xchg pop or push xor outsl int3 inc fist lods lahf adc mov xor fsubs xchg inc or pop jg idivb addr16 popa xchg pop and sbb cmp mov pop (bad) xchg insl or cwtl push dec sarb stos lods xchg (bad) data16 or mov scas into cmpsb nop cmp cli in cmp add fldt notb sub mov lea and or jge cmp cld jge or and or sub mov ja push sti flds cs mov pop les aas jns inc mov mov push neg out push stos testl jno pop pop bound add or inc arpl roll sub sbb mov in popf pop gs cwtl stos in dec jmp cmpsl mov hlt mov mul js lds cmp call mov fs (bad) jbe ds mov xchg inc mov mov sub or jmp aas cmp push jle xchg cltd clc or dec rorb or push lahf and es jecxz dec (bad) iret add push enter push icebp sub jo das sbb add test dec fs mov mov vzeroupper mov lea insl xor xor rorl dec aas xor jg pop cltd pop out int dec call mov xor mov fldt xchg imul fcoml rcrl movsb xor in add mov push loope nop sarl add (bad) int3 inc sbb xchg daa mov xlat pop dec push fistl sub mov mov mov lock push out stos add dec jmp popa sete add shrb icebp jbe pop mov mov out mov add je mov mov imul ja pop lock fucomip sub add push (bad) fdivs rcl mov sti fs cmp jo and adc xor rorb xor std xor push in cwtl scas loopnew inc bound data16 dec add jns and pushf mov lcall xchg inc in nop loopne popf in push dec dec shrb or sub push jb cmp data16 mov push push push iret cmpsb xor icebp roll imul pop pop fs sub lods add adc add lcall mov cmp gs add jb aam mov lret and stc out mov sahf sub shll jge cli pusha gs dec lret xor and pop add in (bad) xlat xor addr16 cli repnz test outsb xchg lods xlat jl out es sub jmp daa mov shr push mov stos insl push xchg ds fsub push cmp insl popf cmpsb push mov decb and lds jbe (bad) sete mov jb loop repz add ljmp mov push and repz pop fsubrs cli or cltd inc and imul mov cld mov (bad) and jns es adc shrl jge inc push jge insl in jp jnp mov adc pslld or adc pop sbb popf sub int3 mov xchg out rcll xchg imul jns xor jne lods insl data16 push inc daa in out mov sbb jne xchg js jo int3 inc dec lds (bad) sub xchg insb enter out push data16 adc sarb mov pusha mov jmp inc adc sbb push idiv rcl sbb fldcw xchg insl mov mov jae shrl pushf xchg lods fistl lea jo (bad) jmp int3 mov mov xchg ret test mov (bad) jecxz lods loop inc cs lods (bad) mov sub jns jmp mov sbb ljmp fucomi xor push jecxz out nop or xchg jge pushf pop pop mov or and test cld sub lds arpl cld cmc rol cld cmpsb fsubs mov push icebp mov adc push aaa mov enter cmp loopne jge sahf jns xlat movsb mov pop fdivrl xchg inc xor xchg pop mov stc mov add jnp sbb out sbb lock aam or pop test sbb xchg std imul cmp call jnp aad arpl ficom loopne xchg jecxz or cmp pusha and xchg lods pop dec add ffree lock jmp repnz mov into lds cmp lahf jne xchg cmp aam call mov movsb push mov pop jp loope dec movsl daa out in pop jo loop lds fnstsw aam xchg cmp jge cltd jbe push lret sub or inc inc sti and mov jno jb push push stos sahf iret xor pop das mov lret jle sub jno (bad) cmpsl mov cmpsb mov ror adc sbb test push mov lcall imul mov scas insb jae mov movsl jno sti daa xor xchg and or shl xchg in fwait sti mov iret mov clc out and mov pushf aaa push cmp jg je outsb xor out add cmp jae out insb ss int call (bad) push (bad) cmp stos mov out xchg push in lds fimull out (bad) cmp pop lods (bad) sbb in jge pusha pop movl aad std pushf sti xchg out sub jmp mov sbb stc les ljmp add push icebp sbb jge stos sbb xor mov icebp push xor imul (bad) negb xchg push lahf mov stos xchg cmpsl fldt sub outsl test (bad) mov int mov je outsb cli (bad) loop add and lods mov bound dec popf pusha jmp fisubr aaa xchg pop jg xor shll popa repnz mov stc imul inc pop (bad) std cmp repz push test dec stc (bad) notb mov fsub mov loop pop call adc fsubrs mov arpl into faddl sbb or mov adc mov cmp xchg dec pop stos (bad) pop adc mov inc nop lods xchg dec mov or (bad) add lahf cmp (bad) hlt xchg inc pop or das testl xchg into mov (bad) xor jmp xchg decl sahf lret xlat push std pop test sbb and lea xor scas into int (bad) fdivrl sarb mov cmp es mov sub dec test cmp cmp shlb jo cmp push mov jmp xchg jns mov jp enter lods rolb mov div sbb das jp mov and or inc test lods movsb call add pop dec mov xor test sbb adc mov or jae cmp js push data16 ror xor lods dec stc add sbb sahf ljmp xchg push ja xchg push (bad) adc jp cmpsl pop sub cmc and out rcrb psubsb or add icebp ljmp ja les mov fisub das (bad) xchg and sub decb ljmp adc cmp (bad) jo xchg cmp or ja ljmp push lcall sub sub mov lret push out cmpsl sahf cmpsb or add repnz adc call les jae sbb and scas test pop add mov in mov pop movl push in icebp xchg outsb ljmp jg sub out cmc mov pop and out inc add pop pop cmp inc push les (bad) scas jno push jmp mov test xchg or sbb mov jns and ljmp push push ret mov addr16 mov or test push mov aad cwtl or mov aad lahf jp orl cmp inc dec (bad) ja (bad) push ja lret int mov cmpsb xor mov pop leave pop out sbb cmpb mov outsb (bad) jmp stos mov jmp ret shlb stc inc inc xchg out inc mov fwait sahf (bad) ss pusha cmp push bound pop inc fs inc leave mov jae pop aas sbb mov and dec dec imul loop fdivs (bad) fdivrs cmp push dec add cs insl and mov movsb add sti pop nop ja cmpsb mov jns loope cmp je in call nop xchg ljmp fisubr popa es cli mov mov push lea pop push lahf shrb into repnz jbe mov cmp mov ss cmp and movsl adc cmp repz stos inc ljmp pop test aad jbe jle out daa inc inc int3 or ret clc cmpsl xchg es and add mov xchg mov int3 adc mov cld jnp and clc push pop dec lahf loopne call into aam sbb out and aad test sbb push loop inc test addr16 imul mulb xor in pop push movsb dec sub cmp push (bad) neg jp cmp rolb cli popf add enter lock cmp shrb xchg sub cmp int daa call call dec xorl lods mov cld repnz sbb loope mov test lret jp push push lahf and cmp repnz es mov mov xchg lods inc add ret nop cmp push std mov loopne sub and mov fimul les sbb cmp popf out int xor dec addr16 add push and std les pop cmc lods push dec test movsb sub decb scas or aaa sbb xor xchg mov fdecstp mov je mov mov and xor rclb inc jecxz push pop mov fdivp push pop mov dec pop imul xor mov mov inc arpl mov sub mov aad in or lock data16 pop or cmp mov rsqrtps push cltd cmp sbb mov mov inc mov in cmpl lock rolb mulb cmp pop pop pop or dec xor fcmovnu mov rcrb daa sti shrl cli clc xor popa scas push jle lods mov jb arpl sbb gs sub sbbb jle sub movsl mov ss mov pop dec xchg lods and js add xchg nop push lods pop ja mov out lcall mov popa stos (bad) mov movsl pop push dec movsb xchg mov sub mov cltd xorb dec jmp pop mov imul icebp cmp sbb push cmpsb icebp sub fwait lods xchg out pop inc mov lret xchg lods jb xchg mov lods mov sub notl or out and push stos add cwtl out in mov sub xchg mov xor (bad) cli cmp cli push xchg jns jle jae pop stos cwtl pusha cmp aas neg inc mov sbb mov lea fwait push mov jo or std fcmove lods mov (bad) jb decb xchg push cld and iret ja mov repnz sub push ret jbe or xor div mov lcall cmp or inc jbe or stos lods loopne dec xchg mov movsb mov test jno cld inc (bad) push jo xchg enter stos shrl add mov ret and and (bad) notl sbb mov rorl lods mov push (bad) jmp mov and sti call mov mov scas adc dec lret pop sbb outsb (bad) je xlat mov in call fldt test xor enter shr add out ss mov les mov mov insl das enter xor (bad) popl inc cmpsb xor ja mov fdivr push push mov cmovnp fs pop jp inc addr16 outsl inc jnp test imul addr16 xchg sahf sub jno clc scas xchg aaa sbb cwtl rcrb jl pop imul sub xchg into sub mov inc pop sbb movsb xor mov mov add xchg (bad) jb pop cmp imulb jl push inc jmp xchg mov adc idivb mov fcoms (bad) std test call js inc insb mov or in (bad) lret mov cmp or cmpsb pop shll pushf sbb jp and fs mov jmp and lret bound jbe ja (bad) scas insl push sbb imull mov lds add mov jb icebp mov push push iret (bad) inc decb jmp aas je push sbb out dec es sahf es daa push dec jnp das arpl in imul mov fisttpll xchg ret lcall jecxz sub xchg xchg sbb and xor jl sbb fiadd push jl pop das aad movsl xchg and roll mov sbb xchg lret mov cli add mov lds loope pop rolb mov mov pop push pop mov or clc js push bound jae pusha stc cmp pop popf push rclb jmp stos test (bad) subl jb clc (bad) aas dec (bad) stos daa pop in dec sbb test out inc jmp insb lcall bswap cmpsb out incb gs fucomip xchg out mov (bad) dec or int in pop mov mov jo and inc inc pop mov or inc arpl jno repnz repnz jo and pop loopne inc inc aad sub sbb je sbb mov dec loope xor pusha ja lret mov cmp subl not mov (bad) imull stos inc outsb std mov mov (bad) xlat cmpsl or add or and in add adc stos sub sub test aas mov enter sbb ja es fs movsb mov sbb add pop xchg cmp mov push mov test ret lret or (bad) repz mov inc cmp inc mov add imul sub rcrb or or fstpt mov or in dec mov insb push bound loope mov pushf out xchg mov (bad) cltd inc stos pop loop call fnsave xor sbb in test lahf dec leave jne shl lret xor bound or cld out test lods int3 pop shrl lods out push sti loope lock loope jp cmpsb pop dec add xchg jmp aaa mov loope and inc outsb push sub (bad) hlt ret xchg pusha test test lcall pop mov inc push mov xchg (bad) sub sub (bad) fsubrl inc fadds mov push lea cmp cmpsb sahf mov adc jo inc into xor fwait dec pop xor cli push cmpsl mov jmp out mov inc fist repnz add jo sub jns repz mov lock cmc and fildll push int3 adc jns add aas pusha call adc ja stos mov ja loope dec mulb (bad) sahf mov push add xchg sbb jno dec cmp or push jno jge adc imul stos dec inc mov call inc dec inc out js add fldt fmulp or mov push std fsubl mov loop jl xchg inc add mov push and mov cmp adc mov loopne mov in inc mov shufps aad adc jl adc adc cwtl ja cltd ss inc lods adc (bad) into shll or scas cmp jecxz orb sti jbe imul repz pusha ljmp jae js mov fwait adc movsb test dec add in faddl pop aas push int std adc sub leave imul jae test aam out jg in repz cld jbe mov aas mov fsubrl sub (bad) aaa or fsubrs push adc mov dec or adc and cld lret push or push loop mov xor std pop mov mov (bad) das test lret xor push loope popa lock push push std repz jmp test sbb nop aas dec cmp aaa mov test xchg iret push inc xchg adc test (bad) and (bad) in jbe xor xor and ret sti sub jmp (bad) push and push add outsb dec push pusha sbbl mov fsubs gs fisubl mov adc rcll loope (bad) pop add test les jp mov cmpsb aam push lods inc mov into jmp adc jnp push out aaa mov lahf out cmp sbb sub (bad) adc lods int jecxz or fnstcw cmpsb mov xchg mov movsb or (bad) sbb xchg mov into mov aaa jns xor int mov sub std mov sub fadd sbb arpl dec jmp pop add dec mov gs jg jb mov pop nop mov daa xor test stos sbb xor icebp outsb in xorb lea adc mov aad cmp and push mov out push (bad) aaa fnsave push and fidivr aad divb inc in inc mov push push push fxch push (bad) lods mov cmpsl (bad) lret pop popf repnz push mov push add aas outsl or and mov mov cmp lcall fcompl and testl pop inc mov or push add xor (bad) in push insl dec aad jo icebp jne int cld mov mov push inc and push add (bad) lock inc push mov xor sahf push pop pop scas test pop mov adc push xchg bound adc icebp sbb sub into leave clc rorb add into xchg sbb mov dec dec sub add jmp mov and shrb dec addr16 or icebp jmp mov jmp inc pop jns push cmpsl lods hlt es cmc and lret (bad) inc (bad) out lds lahf cmc inc scas jmp inc cmp pop pop outsl sub pop jns inc cmp mov push es xchg add mov adc fiadd add aad es div xor cmpsl enter scas xor lods pop push stc arpl xchg push mov and add adc (bad) sbb cmp into out sar sbb mov jb dec mov jl leave jmp mov mov int mov jmp jnp jnp lahf cmpsl push sub inc and es in in (bad) mov shrb (bad) pop rolb adc (bad) jbe xchg sarl push sarb and mov outsb stc jmp pop in in jge xor dec sbb (bad) sbb daa adc (bad) sub arpl sarb mov test aam cmp mov in pop dec lahf aam sbb outsb and inc loop enter push pop fsubp fs cmpsl bound fldcw std stos jmp js ds and and repnz sub stc mov jo push andl adc inc xor fldenv jbe jge adc lret mov cmp mov or push sbb stos jae mov bound aas pop xor push or mov cltd or (bad) mov or or or inc fidiv jb inc pop loope aaa adc dec lds insb inc adc enter fimull je pop popa and stos outsb and ret (bad) adc xlat leave addr16 std movsb ja (bad) mov push sbb imul lds aas loopne jnp scas adc and ja mov adc pop or test andl adc dec xor testl mov mov in push or fsts movsl cli sti push mov or pop js sub or es into fistpll jae jns add out mov xchg xor icebp iret add sahf sub and cmp mov mov add outsb mov cmc sub pop xor mov jb jg inc dec aam and pusha (bad) xor mov idivl js pop jg inc das cmp push in mov xchg movsl jnp lods jae push js sbb outsl repz mov mov sub mov push imul jg dec mov push pop lock gs cmp mov rcrb push adc out mov movups xchg push push add lcall pop or inc mov les jo cmpsb xchg push (bad) mov fisttpl jae in in fst jge rcrl fs push (bad) jns pop inc in movsl aas inc sbb scas popf or adc pop in push xchg imul dec dec pop fisubr add ss int incb and sarl and sbb ljmp (bad) mov dec or test mov insb (bad) hlt inc push sbb int3 mov fwait xchg jmp aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add pop bound cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne scas movsl sub mov mov mov movsl lret mov fldt std nop out jge add jo add fcompl stos rcll divl pop ret out or push bnd lret mov imul lods mov jo inc rorl mov push mov pushf push ret les dec xchg dec inc repz das jbe outsl gs adc mov xor xor dec add daa (bad) fildl cmpsl rolb jno xchg ss stos mov movsb xchg sbb mov icebp dec pop push jno pop (bad) data16 xchg test adc (bad) sti (bad) cmp stos mov adc (bad) push in dec mov cwtl jbe jp push jb jo add dec jecxz,pt jg leave orl xchg negl mov jo nop push in jb xchg xchg in jno xor outsb addr16 imul jle and mov das add sub and cmp dec mov pop jg mov sbb push push xor test mov in mov and pop jl,pn stos xlat (bad) mov and das xlat pop sbb mov push mov push flds jmp inc mov jnp and cmp sti push pop out addl and jge rorl aas or mov aad push repz sarl push sbb mov add stos jbe lret lcall mov ja roll mov enter xlat and (bad) pop xchg push pop adc rorb (bad) mov fsubrs pop js clc and sbb cmpsb addr16 mov and jmp (bad) (bad) adc mov cli aaa sbbb icebp outsb stc cmp sbb cmpsl negl mov cmp fs add mov mov add (bad) in add test add mov jmp mov jp mov inc loope out int xor cmp movsb xchg xchg int outsb arpl inc push jno gs push fcomps cmp add in data16 sub xor push (bad) pop cmp dec or or dec frstor xlat enter pop lock lahf dec dec addr16 xchg add (bad) mov shl cmp pop mov int repz sbb loope jecxz pusha mov pop pop in cmpsl pop enter aad push fadds push loop mov stos mov sti out cmp clc inc frstor inc mov pop pusha cld fildll mov add jno fiaddl cmp sahf mov fwait cmp stc adc lods sub fisubrl xchg pop adc add cmpsl add testb mov xor fldenv xor jo inc fsubl push cmp hlt mov inc mov (bad) (bad) or xchg fdivrl cmp mul je repz add jecxz or adc push insb jne sub es lds rcrb mov data16 in mov xor call lcall int3 push mov sub out outsb lret cmovnp or xor repz popf pop (bad) loop in push and cmpsl mov aas sub push adc push loop xchg js cmpsb sbb xchg cli shrl test pop adc aam push fwait push leave cmp jb jns lcall xchg int3 repz push stc out or sbb cmp cwtl and add (bad) xor push pop and sti mov jnp nop dec cwtl fidiv cmp mov cmp in pop jae pop jb test dec sub mov (bad) cltd dec mov xchg xor (bad) push add sub ret les add pop (bad) pop (bad) adc mov aas in mov sbbb aaa sbb and inc ror jle sbb ljmp movsl popf push scas push push loope scas popf adc dec dec les and mov adc test xchg loop jmp or cltd cmp fs rorl int aas push mov mov call sarl ret fisubrl pop aam cs stos cmc push ret movsl sub mov imul pop cmp lods or cmp popf jle jbe dec sub push mov add and aad cmp jle addr16 dec xor sub lds cmc pop fdivl xlat mov sti mulb hlt lea aaa xchg sbb inc fst jecxz push mov fcomps mov icebp cltd hlt arpl repnz mov push pop jp xchg jo inc cmc out sahf sbb sub mov pop mov popa mov loop cltd lock bound pop or pop loope pop in in int3 pop and sub jno adc dec and lret mov mov int cld popa jnp popa (bad) test int scas iret sbb push adc sti pop jg repz test shlb mov mov xchg jbe je in fisttp push mov loopne cwtl into scas inc adc push mov cs out and sub pop or jne (bad) (bad) iret das add je push in cmp cmpsb out loopne ljmp add push nop fidivl mov sub popf test push scas loopne and pop scas push xchg aaa and mov xchg xchg cltd ja scas hlt das inc cmp push fs dec mov xor scas pop push int3 hlt or nop in test pop dec jne pop mov mov mov daa adc std jno cs divl xlat sbb sbb push push jbe in add jle mov xor popl and pop stc aam test xor leave repz push dec inc stos (bad) lret lahf pop repz jo cmovle sub mov mov and pop push push in xlat sbb or (bad) xlat fiadd mov insb push clc lods mov jle cmp int3 jl cmp repz cld or cmpsl pop mul mov sub aad divl mov inc sub cmpsb adc push push stos or cmp cli dec mov cmp nop loopne or ror xor gs jns push addr16 mov and js scas ja mov adc jbe jne,pt nop dec mov adcb push popa add lret mov subb mov rorl mov js call insl push lahf or out xchg mov pop jne fwait cmp sahf jecxz insl dec into stos hlt movsl adc (bad) arpl das jg mov pop fsub shl subl push push nop sbb pop xchg jne add fsubp ret inc inc test push mov jp aam jbe lcall sub xchg in push push rcrb fimul lret mov cli cld mov hlt clc sub iret fbld jmp in (bad) sbb mov popa sbb mov icebp repnz out adc cmp fwait pop add jo (bad) mov or sbb push push iret jl,pn dec pop mov ljmp ret add pusha in mov cmp sti sub push mov das rcrb repz (bad) lret and test add sbb addr16 cmp or out pop add mov stc insb pop scas sbb jge cli (bad) aam stos pop push (bad) aam and mov inc push in movsb sub or push orl lahf xor loop mov ljmp hlt lcall cmc dec mov ror push cld and sbb push xor fcomip and sbb rcrl call test dec and popa pop (bad) idivl mov in test test dec popf repz jl ljmp scas aas les add xchg aam sahf fs fidiv dec icebp stos add in mov dec cwtl fisubl sub mov xor ror mov and (bad) out or mov inc in sub fldl2t or into dec ljmp ret push bound test int3 jecxz sub jle pop xchg stos jns or lods dec gs jmp lods mov insb jnp dec lock test pushf dec gs popa sub cmp jne sub jge jo xor inc aad push lcall dec cmpsl ss push xor js mov cli and outsb jp or jb inc sbb pop adc inc (bad) jmp sbb popa add je popf loope repz mov or push outsb test stos mov adc mov xchg add std lret or or add in mov shr inc mov enter xchg and or sti mov push aam push and or jg test jbe and imul pop cmp ja pop xorl push inc repz int3 cmc cmc out pop (bad) xlat lret push enter push int3 int dec sbb sbb (bad) push sbbl repz not mov and cli and call adc sub stos mov dec mov sub pop inc (bad) sbb lcall mov js pop (bad) ja mov ret idivb leave or ja cmpl js aad ret sbb mov push scas pop xchg lods ja xor das and popf sbb rclb lods pop mov mov lock in cmpsb iret adc fxch insl push rorl sti shr push popf jle lock and leave js jb sbb lret ret jge xchg dec add (bad) bound adc xrelease popfw push inc sub cmp mov mov jno cmp out push (bad) lock xor imul xor jbe in cmc sti add dec divl mov ss or rcrl and (bad) xor jge pop inc mov pop je sbb sbb xor cmp adc sarl pop cld jno out ss out lock (bad) scas add inc stc jns (bad) pop in push cs outsl or jo adc push js rorl fwait test (bad) mov cld cltd stc ds lods sbb xor iret lock iret gs cwtl lods fisttp dec rcrb push xor notl dec add rcr pop (bad) imul adc cli push cmpsl loopne adc dec cmpsl inc bound pop push jno adc push (bad) sahf pusha dec cmp mov cmp pushf add lcall adc scas int3 mov sub mov adc pop push int ret iret repnz mov sahf shlb jns xchg cmp aas dec (bad) fxch xchg adc enter adc or (bad) mov jl rorl pop (bad) mov sahf sub sbbl into cmp pop test sub mov aaa aas aaa sub jge stos mov inc dec and jmp dec jmp roll sbb cmpsl jecxz pop dec sub mov scas jecxz (bad) jl pop inc nop insl insl mov scas aaa (bad) pushf mov popf shll sahf push adc push in in fimul sub or xchg dec or (bad) jns aad cli sub testb push lret iret out add mov inc call push push add xor and jmp mov mov stc outsl adc cmp adc sub iret idivl in sub data16 mov pop mov dec stc int jb cmp add lcall loope inc cmpsb mov adcl std (bad) scas divl cwtl cmpsb xchg je lret jmp adc push int3 imul stos insl pushw fdivl daa dec jge sub mov aad (bad) cwtl jge xchg and out or stc jmp loopne pop cmp sahf sub jge mov xchg pop add or and fdivrl cld rcrl or fwait loope jbe sbb fcoml mov xchg jb shrb fnsave repz push or mov test pop fistp dec sub push movsl bound xor repz ficoml jecxz mov mov gs lret mov dec xlat loopne nop pop gs pop into xor repnz std sahf icebp pop push and dec clc js xchg lret jo arpl or and adc push pop pushf dec stos in imul mov cwtl jns ja xor adc cmpsl dec (bad) repz lock fidivrl inc dec xlat iret mov and push arpl popa dec (bad) and lahf and scas (bad) mov xchg insl incl pop jmp and mov xchg (bad) push dec in mov or lods movsb sub popa out inc mov cld in push push mov ficomp and sbb mov adc scas add mov or lcall loopne push inc sbb push pop outsl sub mov xor sahf inc jle mov sbb lahf inc clc (bad) rclb sbb cmp mov cltd insb xor jl gs cmp pop jnp xor outsl push dec shl adcl cmp push or adc push out cmpsl gs mov in mov stos mov push mov add or scas pop jnp jg dec ss outsl test cmp shrb adc xchg test add sub mov or cmp pop in or lods push enter pop jbe mov xchg pop into or push dec mov cmc or hlt cmpsl push (bad) mov bound (bad) jl iret hlt nop and lcall lea dec stos fimul push fldt push je lock mov jle popf dec and lret jbe stos cmc imul movsb popf or es jmp adc pop out cmp pushf or test mov pop (bad) out adc fcomi jmp lahf cmpsl mov loop (bad) notb cmp jp call (bad) jne test xor fnstcw test lret pop in sub test jo insl push jns pop aad (bad) hlt (bad) mov in in xorl mov (bad) xchg jne lock cwtl into mov sub ja xchg outsl jno xor pop mov (bad) mov js jecxz aad mov loopne xor inc adc mov sarl pop sbb arpl xlat sbb jecxz mov adc lods shrb clc daa mov or add stos cmp subl (bad) out gs inc and pop sbb imul in sub lods jecxz inc mov xchg fnstcw dec orb dec movsl add adc je pop jne sub lods xchg and and push sti aam inc mov scas call add inc pop repz (bad) adc mov out and cmp pusha rorb and xchg out cmp or sbb and or bound (bad) imul es inc idivl jmp add imul std data16 mov pop fidivr les sbb pop sub push test mov push xlat lods dec dec adc cmp outsl test stc cmp ret pop adc cmp ret jge movsl adc jge into mov push fidiv cli add call push cmp (bad) jg idivb lret xchg movsb mov ja mov int3 test or adc mov outsb dec ret pop jnp add pop call ljmp fstps cli icebp cmc xchg fcomps mov in imul fisubrl pop icebp repz mov sub mov imul lock cmp and lcall push adc mov mov adc fistpll cltd sub cpuid insb add mov (bad) mov sbb in jle aam and mov jo (bad) cmp lret rolb imul rcrl mov push xorl pop rcl orb push test inc iret int (bad) enter or mov mulb aam or mov inc add insb adc inc out push (bad) ffreep shrb push cmovns lret lcall jg (bad) sub push (bad) mov jbe sub pop leave cmp push stos dec pusha and push jecxz mov insb jbe outsl xlat leave pop mov iret jb jne add jb xchg cmpsb xor sbb movsl xor mov outsb int add jg pop outsl sub xor ror vdivss push cltd mov cli mov push mov (bad) (bad) lock mov addl mov les rorl pop (bad) xchg sub jno lock shll into (bad) rorl pop ds ret jle iret add in cmpsb ret sub jge div out jl repnz sub out jne jnp outsl mov fsubl inc cmpsb xchg andl mov xchg jbe aas inc push add adc sbb nop mov and mov add push xchg cmpsb (bad) popf xchg imul adc sub les leave push lcall add cltd lret mov lods push or loop fisttpll jns pop les fdivl add sub lahf xchg xor rcl sbb (bad) pop xorl (bad) and aaa cmp test sbb mov cld xor repnz lret jmp sbbl xchg ja sub dec ret jp rcrl (bad) sbb xchg shrl cld pop add xchg cmp dec and jo in test xchg xchg mov scas xor ret jns cmpsl mov test fwait mov or mov das sahf jmp js mov outsb movsl sub adc jle mov add imul mov cmp int jge xor (bad) mov add dec ljmp cmp loope mov xor jo loope jb les push mov add mov movsl mov rcll xchg and aaa xchg add (bad) mov into cld jp data16 push lds sub shrb xor (bad) or pop pusha mov push inc es or lds stos bound lahf movsl scas xchg test and movsb imul or (bad) aad leave and inc stos push mov stc mov push mov fdivr (bad) icebp jbe insb xchg shrl pusha sbb rcrl out les addr16 xor dec xchg pop xchg xchg adc lds jmp fdivrs aas or mov mov mov outsl sub jecxz jbe popf stc push lret push sbb shrl shll mov lock mov add xchg stos mov pop dec dec mov arpl js or nop xor mov aad jno loopne aaa orb pop (bad) push and add xchg inc sbb inc mov sub inc lds repz (bad) xchg mov mov mov mov xor or jl pop and dec ds out sbb add lds (bad) jns sub mov mov (bad) aas and jb call mov xor shll mov mov lret sarl ljmp jno jp mov fs pop mov cwtl loop int3 sti cmc das sub js shrl (bad) (bad) or into xor adc push out xchg jg and loopne mov jae pusha leave add mov adc cmp add adc rorl sbb push xor aas (bad) inc mov mov std xor sbb lods icebp push add jl rol jmp lds fcmove jp xor cvtpi2ps fsubrs and sbb push outsb out push stc jmp aaa jne push outsl dec xchg mov lds fnstsw push dec scas xor push repz aad dec jecxz mov les jmp push cmpsb neg jp mov les sub adc ljmp mov repnz fiaddl fiaddl std cmpsb dec xor push (bad) sti (bad) and ss loop mov fsubrs mov adc inc sub adc mov ja iret iret (bad) pop (bad) lds test xor mov icebp (bad) sti adc movsl in pop add movsl dec inc mov push jecxz mull out add shlb repz sub mov mov jge push dec test stc aas jb bound aad xorl repnz pop push push xchg fldt push iret (bad) mov ljmp dec in xchg adc (bad) movsl scas test sahf sub hlt push pushf lret mov cwtl sub icebp (bad) loopne mov xor xor loopne xlat xor mov mov mov stos inc cs and pushf push scas lods pop scas add daa cmp lret mov mov push mov gs test push cltd pop sti pop mov jmp stos mov vshufps outsl jge pushf mov ret jp gs fdivl mov (bad) xor mov jmp mov xchg or pushf mov sbb (bad) xor mov cmp stos or xor js stos dec out in sbb imul shll jnp dec add or mov cmpsl sbb lahf enter test stc jecxz inc pusha lods add jmp push subl insb ss les jle test in arpl cs jp mov jge cmp lcall je jp mov or jmp xchg cltd xorb int3 lahf ljmp lea fimull xor cmp jecxz or add sub data16 jle ljmp out push jns (bad) outsb aad dec fildll scas xacquire fidivl ja jae dec enter jp hlt push mov (bad) shrl sub mov movsb sar sbb add repnz shrl clc dec sahf xchg insl lcall push addr16 mov mov mov push push dec (bad) mov repz xchg pop xor pop movsl shl push pop stc mov and or cwtl and dec add sub cmp dec sbb lock mov fldt pop push xor cli into or push inc pop fnop hlt sti adc xchg repnz cltd pop lret (bad) pop or push and dec stc pop dec fdivl sub into xchg ds loop fstpl cld repz cltd pop sahf lds lcall pop scas sbb int3 lods xchg lcall mov addr16 rcll inc fldcw jl sbb test lods add nop jo (bad) int fisttpl mov inc inc jl (bad) nop jecxz pop daa add (bad) mov out xchg sbb mov cld movsl (bad) xor jg ss push adc loope lods push adc and mov jmp jno adcb pop jle mov mov or hlt sbb (bad) jge aaa dec sahf test cmp xor push inc jmp and pusha pop shrb push mov leave out xchg in mov mov jo mov dec jle jle inc add sub jmp pop inc mov pop push pusha (bad) ret lds cltd adc loop push cmpsb pusha dec adc lret sub cwtl int3 aaa xor sub push into fidivrl xchg movsl xor ja test int3 mov dec lret push roll outsl arpl andb fdivrs fist xor jns out adc loop mov inc scas sub iret in jge out insb or jae xlat or (bad) scas inc je lcall dec ss mov xchg sub data16 aam sarl adc sub xor subb ds lcall jmp out sbb stc push rorl add inc dec and aad (bad) outsb sub mov dec add or xchg xchg add mov or xor xchg test xor add dec push adc adc iret outsl inc inc and ror push cltd fldcw sub (bad) repnz mov popa lock jnp loop or mov push dec push and cld add imul lods sbb out pop jecxz icebp push ljmp sub sbb inc add out notl xchg xchg bound add mov xlat nop xor inc push sbb loope (bad) ja mov sbb jle stos adc out sub adc sbb cli dec ljmp jle lods iret hlt scas data16 in jno ja lea xor das mov out mov mov pop int flds cmp dec mov sbb cltd fstl cmp (bad) sub (bad) cld iret push dec movsb lock mov mov jp mov dec pop pop div or sub pop add push pop or js pop test popa ljmp xor fisubl add stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out or adc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push jbe or test mov mov xor insl mov insl (bad) cwtl fdivs fmuls sahf (bad) ds neg ret mov leave sub add ja fwait cs enter pop push sbb jl test push xchg and repz xchg repnz (bad) xor jecxz sub in lds in leave push mov adc fnop xor cmpsl sbb xlat adc mov mov int pushf pop frstor jmp push sub jns inc outsl pop sbb fwait popf mov and dec mov sahf cld sbb cltd push mov xlat cmpsl mov lds movsl jp movsb sarl jnp xor call lock add xor (bad) xor dec bnd mov cld arpl add xchg mov gs pop xchg dec out mov rcrb shlb push int int3 lret pop shl push fisubr ds pop mov (bad) in lea pop xor aas inc xor inc push xor lds sub push xor ss in fs aaa aas jns jle xchg mov mov repz cmp mov push jb mov in repz pop cmp dec icebp dec out sti inc decl fdivrl adc je push push adc dec push insb clc cwtl rclb int3 into add add sbb dec xlat into js cli shrl jae fdivl call xor scas pusha push mov pop push out mov xchg testl xchg (bad) in dec inc shr inc mov push cmc lret in push mov subb cmpsb xchg lahf dec mov mov mov mov ret xchg sbb fwait js sbb in jl xor outsb lock arpl or dec fcomp cmp and decl and dec sub outsb adc clc mov cwtl xchg adc mov jge or mov push inc mov dec arpl and cli fnstenv xchg lods ljmp aas jmp mov fs in pop pop sub (bad) and push xlat sbb icebp scas enter test jge inc and mov pop sbb jb loopne sbb loop jns jb push cmp repz mov dec pop xchg mov outsb rolb out xchg jns pop push lods push and pop pop lret cmp test pop ret js adc mov cltd loop xchg addr16 (bad) in ret mov cld cs loopne fmuls (bad) stc xchg inc jl sub add andb mov mov inc ja leave jecxz adc cltd dec inc std gs icebp xor clc fwait bound xor mov (bad) mov push push (bad) mov adc test pop and out sub mov jno sbb fisubrl stos std add mov jg push fiaddl nop lret and inc cmc sub icebp andl xchg mov lods inc xchg or lret call shll icebp sbb mov push (bad) sbb sahf (bad) dec test mov adc mov cmpsb aam push add fs pop and rolb out (bad) les imul cmp push mov adc jno mov jo arpl add mov ds mov xor push mov xchg lods or movsb (bad) jle or xchg or scas (bad) pop or sub stc out cmpl (bad) loop push mov jno les pop adc popf bound adc push adc fwait push cmc imul es sub sahf stos (bad) lret mov ljmp stc movl adc or jnp jno add xor jecxz mov addb jmp and mov mov out (bad) rolb dec or daa cmp pop adc xor addb add dec push and aam add mov or mov mov aam (bad) jl imulb mov jge mov jns push cmp sbb mov repz bound sub mov push fisub mov mov pushf movsl add cmp cli cwtl call mov mov dec or cmp dec sbb jae pop fstps jo popf add pop pop sarl sti adc data16 push (bad) test inc cld lds mov adc test je inc insl ret sbb cmp (bad) enter int mov xchg out jbe pop lods scas mov sub xchg stos fistp push cmc push pusha lret mov (bad) push push adc sbbl rorl stc mov mov pop and inc cli stc sahf repnz cmp adc rcrb jecxz cmpsl pop outsl xchg (bad) out mulb add lods (bad) int3 sbb push adc scas cmp out test out cmp push push xchg fcmovb js imul pop mov inc fbstp or adc mov jl loopw ffreep or mov arpl jne push jmp mov cmp pop cs mov pop stc fnstenv sub aaa fisub stos xor mov lods out imul sar ret fadd dec xor jge xlat stos iret js scas stos push or jp mov lret xlat shlb inc push push fimul jbe out push nop ljmp jmp sbb bound lcall test lret les adc les mov jp jl mov pushf inc inc inc cmp pop xor scas test jl add ja cli sub lret sub in stc out pop push in pop aaa clc cmp movsl sub pop mov cmp (bad) iret ds sbb xchg mov lods test mov add pop and pop sub mov int push mov pop dec mov push lds push mov mov mov loopne add test test in in lret or rorb lahf insl jecxz in dec jecxz hlt or imul test adc gs jnp insb xor rorb and xchg lea fwait cmp insl push lods xor in test adc pop jb inc std iret sbb or clc aas mov jo jmp arpl add adcl cmp rcl (bad) jbe pop cmp xchg mov icebp or dec or pop loop push cmpl arpl sbb dec cli (bad) (bad) sub push cmp jle sub mov sub call data16 clc push cmp (bad) popf mov stos jnp pop test mov lcall mov cmp cmpsl pop sbb mov pop adc cmp mov test subps and push popf adc dec push sbb or dec push sbb outsl ljmp jle,pn imul pop push test mov xchg rcrl je stos sub mov push sbb jge pop dec xor notl pop push push push int mov ljmp mov push (bad) push adc jmp pop (bad) jecxz jo xor mov pop popa (bad) je pop sbb and mov dec scas sub daa aaa xor (bad) sti jg add mov fidivrl add repz lret (bad) lods (bad) mov mov and out inc lods cmc int3 dec les cld add scas nop ss lock daa decb daa addr16 movsl adc (bad) xchg std mov xor in stc push in pop mov repz xor xor scas mov lahf out ljmp inc mov (bad) fidiv xchg adc or fcompl mov nop call mov pop outsl in mov pop inc mov lods je pop jae int3 in mov cmp sarb icebp xor rorl minps in arpl repz mov aaa hlt lcall (bad) stos push xlat mov ret arpl cmp jb jnp fcomps aaa cmp notb jl (bad) popf iret push test imul outsl lret scas xchg sbb inc cmpsl loop adc mov stc mov mov push stc rorb mov call adc push inc mov and (bad) mov adc push ret pop jb mov out mov sub int3 fstps push stc fwait jb sub cmp call and fadds adc (bad) repnz andl (bad) hlt or or fidivl push or repnz dec (bad) push sub out movlpd sbb push mov pop cmp mov fbld subl movsb aas (bad) mov pushw sahf mov pop rorl stos sbb add test xchg outsl out mov insl iret out (bad) lods adc mov insb push push dec aad iret cmp fdivrs fdivrl cmc push outsl add pop mov sub mov aas in inc xor popa jl xchg sub pop pusha add xchg inc jmp adc aas nop movsl or inc stos mov add xor sbb or int mov or jnp ror jno fadd pop fwait dec pusha ljmp or cltd into xor jnp and incl lret loopne sub mov fdivrs sti aad out out insb std sbb mov insb xchg mov daa add adc mov cwtl xchg lods jbe or dec add xchg adc xchg sub pushf and adc adc push or push dec aam shrb fnsave data16 add add int3 xor orl adcl repnz loope (bad) push daa test icebp add stos test adc fnstenv xor imul inc inc mov (bad) adc xor and jp inc mov aam and inc xor pop jmp in sub pop pushf xchg sbb jmp jecxz (bad) mov dec jbe call cwtl mov mov (bad) sbb mov cmpsb mov and or insl repnz inc hlt pop aam es cmpsl hlt or xlat insb dec and jge or mulb pop sub dec jb (bad) out fmul xchg addr16 loopne add icebp add add adc adc mov sbb or cmp or mov lea scas js cmpsb addl pop into imul lret (bad) cli jle out push lea fisttp pop lods dec leave lcall pushf or test (bad) dec jl fisubr repz sbb out (bad) cmpsl dec xor mov aam nop (bad) add test sbb adc sbb dec cmp lds and or push pop repnz push or arpl jecxz repnz test orl jae pop pusha push jns jnp pop pushl add push divl (bad) pop lods int3 arpl ja rcrl stc dec xchg xchg push jno cmp ds xor xchg pop adc push pusha adc adc sub add jp dec fmul mov loop xor and adc aam hlt cmpsb stos sarb fisub int3 pop std fistp sub sbb test push movsl rorb ret sub nop pop (bad) (bad) (bad) push mov jle or xchg fldcw cmpsb fidivrl mov icebp adcb scas gs out mov xor dec nop and xchg mov fldenv jmp shrb mov das add out stos fisubl fstpl sarb loop mov xchg divb pop jno adc push pop pop inc xchg sbb cmp sti dec jecxz ret sbb push nop sub or dec cmp shld and je mov in mov fldcw sbb sahf stc add in ret mov or jno lds clc mov (bad) clc adc ljmp cmpsb sbb inc fiaddl aaa clc xchg (bad) dec in mov jbe,pn sub sub adc out (bad) shrb int3 mov pop xchg jb shrb outsl sahf mull pop rcr push pop in movsb push cltd xlat mov inc fcmovnu or inc mov pop hlt sar je sub mov jecxz,pt jmp leave stc testb stos mov jo ficomp fs sarl rclb or xor inc out (bad) jno lds add jne (bad) fldl cmp xlat mov xchg cmpsb imul lock dec push cmpsb (bad) js fldenv pushf rclb inc push fs (bad) xor adc jno adc pop rorb mov mov dec outsb out cs call pop jnp pushf or push push jecxz xlat and std js and es adc jg dec addr16 xor xor push imul fsubrp mov add jmp xchg pop jns movsb ficom and (bad) daa jmp icebp push repz ss mov xchg imul (bad) pop stos cmp sbb loope scas (bad) fwait in jg jnp jg pop repnz fldt sti scas inc pop mov mov push (bad) push xor xchg cmp sub pushf and in mov iret jb inc mov jb mov jge jecxz jmp popf ja into (bad) sarl cld ficom dec jmp (bad) dec or in imul jnp mov out fildll pop arpl jbe mov push jg aam rcll ret jmp jge aad mov push adc mov daa mov jne push push mov stos jmp insl mov mov aad mov mov or sahf in xorb jmp test mov push lret xchg stc mov popa sub cld mov ja jae fdivs scas sahf cmp inc jg jle cld in clc or ret mov outsl lcall mov jmp sbb daa das jmp daa mov ret pop iret stc mov jge clc xor add add dec lods popw inc stc sub cmpsb mov adc je shlb xchg jp jl push std (bad) test jne sbb adc jecxz lods mov push cltd xor fcom dec into mov adc add hlt xor or (bad) pop fcmovu inc sub loop movsb cmp addr16 (bad) jne pusha inc mov pushf (bad) outsb leave push cltd jle out call xlat push pop in push xor iret fldcw and lods stc cmp jl sub pop jbe mov dec sahf sbb popf mov daa push (bad) daa jp out pusha je pop sti mov adc adc scas jle xor es adc call inc pop cmp scas enter fucomi mov fcomp jnp out popl movsl int3 aam sub sub mov jne sub maxss shrb inc ds pusha dec adc sub mov jp and xchg pusha pop aam sub xchg test adc repnz mov xchg (bad) mov dec mov or mov xor jge push in cmp mov insb cmp fildll ret and lret fucomip jno data16 sbb insb lock (bad) pop pop xchg add dec mov mov dec hlt mov jnp loop xor iret mov xor lods nopl ficoml mov arpl dec nop fild adc fs inc adc inc test and push jmp xchg and xor mov xor (bad) jmp adc xchg repz (bad) call adc lcall xchg lds mov fcomp mov mov outsl dec dec mov in sti test mov jo jmp outsl lods fisubrl xchg jle cli lea mov sub mov push mov mov (bad) scas sub fadds addr16 into cmpsl push nop inc pop jae movsb and pop scas insb in popf mov aas cli movsb notl in (bad) pop frstor xor mov (bad) lds mov xchg cld lcall inc xorl or xchg dec and mov out pop push push insb push adc daa pop mov lods push jns pop jg sub adc xchg sbb fadds push xor gs mov and inc popa inc mov cmp mov sub jo pop lcall fcompl sub mov xchg out adc fldcw sub mov std nop mov sahf sub jns mov or adc sub scas dec addr16 jns sub lods pop rorb in inc jecxz adc add hlt daa (bad) fnop sub nopl or clc sbbl fisttpll mov cmp push xor adc scas add xchg sahf add (bad) mov mov jge mov roll pop sahf cli adc xchg fdivrp push scas das adc xchg pusha aad call jg call test fnstcw mov out hlt and pop (bad) inc loop nop sub sti or dec aas xor outsb sub (bad) jno rorl ss ss popf dec test sub sub loope jmp pop mov insb or mov lods (bad) jg ljmp mov cli in popa daa mov xchg xchg inc imul cmp gs sbb jecxz pop mov pop fs dec lock outsl lret les push push mov mov xchg xor or stos mov push pop pop aam and loope xor jb add add mov icebp xor ljmp push xor dec and dec movsl inc repnz pushf cmp js daa add sahf (bad) fs xchg add test jle inc (bad) push rolb push (bad) mov (bad) bound fnstenv test cs andl loopne rolb icebp dec pop nop in iret rolb inc stos mov dec sbb adc insb jbe aam jb outsb movsb xchg scas lds lea repz xor arpl xchg lods add dec push and mov cmp stos fistl ljmp ret leave clc cmpsb out mov mov aam es push dec sbb or mov sahf outsb and or mov xor push (bad) leave and icebp adcl jmp insb std inc mov sbb or lock cmp pop adc aaa xor adc jg cmc fwait jae out pop mov (bad) mov xor stos or mov jns stos mov cli imul push cli loop pop leave lret add mov mov dec stc mov aam hlt pushf sarl shrb int sbb enter ficom mov or jmp dec mov in jmp jo pop dec dec subb idivb sbb shlb (bad) aam data16 inc imul push mov add popa cmp loop fwait push xchg ret cmp clc xlat lods cmpsb scas outsl scas fild std mov lods movsl enter cli ljmp loop out out xchg scas and cltd rorb dec inc aad (bad) mov scas dec (bad) jo xor movzwl pop (bad) xor inc dec xor lods pop mov mov mov and fnstcw inc jbe mov and aas pop push jne mov aad (bad) fwait loopne sti (bad) inc add imull mov insb mov (bad) jno (bad) or push test test loope jle sub test (bad) pop push ja push in jo in mov jp and push inc inc in mov mov mov in rorl push lods adc dec andb pop (bad) pop movsl dec adc lds sbb cs pop push push loope jae jp jp sbb mov ja stc test dec mov pusha das or jge mov cmp std call mov scas popa mov mov sub mov push fist rclb fstps shll je in rcr gs adc push push fist dec stc bound in push rorb sbb (bad) cmc out sti jbe push xlat or shrb ds push or adc (bad) dec loop pop mov dec mov es outsl ficompl adc movsb mov pop jns leave ljmp mov scas (bad) pop outsl mov sbb add inc out ret cld push movsl lods outsl sub or mov lcall daa repnz and pusha (bad) sbb xor mov pusha not sub dec jecxz int or in sbb xor adc cmp push fdivr gs les stc cmp call sbb pop mov std mov mov call ljmp pop or mov imul and mov js (bad) lds dec xor pop clc pop inc jb fwait inc jp int push push iretw sub gs dec jle mov adc push bswap ret xor mov dec (bad) enter ja xor lret imul mov cs or cwtl and xlat mov in out lock (bad) sub out mov mov jbe xor jge dec sbb mov cli sbb dec sub iret pop adc inc int3 fimul inc inc push push imul sahf push push loope mov lods mov loopne xor sub adc mov jl lds std sti addl inc mov cmpsb divb lock pop push or cmp scas cmp sti (bad) xor gs lods bound (bad) repnz cmp cltd stc push ss cli adcl adc cmp and sti ja leave int3 adc adc aad xchg in arpl mov lock push mov hlt ficompl xor out jnp sbb add add mov repnz sbb push and xchg das mov or (bad) or add lods inc xor movsb repz loopne jnp jg and andl jno mov cmp push (bad) (bad) cmp scas xchg out mov dec ja out inc rclb movsb pop pop mov mov inc aam or jno imul pop sbb adc loop jp jns xor dec adc jnp jno cmp dec cmp andl sub dec mov ss mov data16 dec xchg add inc sbb xorb xchg movsb jbe insb mov aaa mov and push test mov or lock imul mov outsl in push fbstp scas (bad) leave cld lock je (bad) negl jae jmp mov fsubp insb jge repnz xchg in ss jo andl stc mov or mov mov lds mov (bad) icebp loope xchg das sbb sahf adc and fld aas bound orl jge inc popa js mov cmpsl int3 cmc (bad) clc dec lcall mov (bad) imul cmp mov jb clc das int fdivp movsl leave jbe mov sbb mov fwait pop and xor push fmuls cmpsl sub push shr inc cmp pop mov lods into cmpsb pop pushf mov aas pop cli sub fs pop mov pop inc pop or leave or sbb adc push jo xchg dec (bad) mov js add inc pop sub insl cli test mov sub addr16 lods movsb push lea cld popf adc gs and mov inc je call mov scas xlat mov call add insl int3 fdivrp mov adc sarb int jp scas scas imul inc cmp or lret mov jecxz das mov xchg pop loope cs mov xchg repz xchg lea mov fisubr adc lds jo int xchg xor mov pop fidivr and pop xchg les jmp bound push rcrl mov xor mov ret loopne pop out xchg leave mov dec add xchg dec and clc mov (bad) je in fsubrs cmp cld xchg aad mov nop add stos xchg add mov jecxz xor dec sbb aam out ficompl es cltd flds adcl dec push pop scas and nop lahf jbe movsb push pusha cmp xor sar call bound mov dec sti mov popa dec popa sbb icebp fld insl out cs sbb xsha1 cmpsb int mov sub fdivrs cmp js arpl mul std push pop (bad) hlt mov push push faddl xor sbb sub or (bad) fistpl ficompl inc fwait push movsb mov stos xlat jmp cld xor jle jo daa lds sub aaa rclb out or jmp cmc add ljmp and hlt enter adc out dec test xchg or scas lods fldenv jge sub cmpl and test dec iret dec mov testb inc adc xor pop add dec or or mov pop in cltd ficoml add std addl insb jns add int addr16 insb ds js (bad) mov (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz aam inc aam out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait imul fnsave mov insl jnp lret pop jbe fisttp jns cmp add or add pop in sbb mov jns out outsl sbb mov push orb hlt push imul ret pop jbe inc popf cmpsb int (bad) mov mov mov fwait ja adc adc push mov add test mov push dec out pop pop add dec inc scas push push mov addr16 outsl adc dec push sbb lods jmp and push cld aam jecxz js mov mov inc cmpsl xchg and es jp and imul (bad) bnd mov jb out inc jne cwtl subl leave sti sub mov xchg test cmp pop and minps jg aam push mov xor imul cmpsb pop jbe lret (bad) mov ss jb push add push pop mov sub int std mov inc pop push push pop xchg add xchg push cmc pop adc or lahf arpl sbb xor xchg mov jecxz fbstp scas mov stos mov dec sbb mov stos fnsave enter aaa inc cmpsl mov outsl ret scas mov xor xor lods xchg or mov fistl inc cmp shrl add movsl add lahf sub jmp pop push jge xchg mov cmpsl aad mov jecxz jg daa and outsl jne (bad) lods ljmp add and cmpsb adc dec shlb xchg lret repz (bad) jno mov inc sbb adc lret push dec aam push scas sub jo fcmovb push lcall outsb pusha clc xchg dec mov jle sub icebp aas aad mov or je pop mov loope mov ljmp enter inc test shll fcmovnbe adc das pop fwait mov or fs jno push outsb daa sbb pop push test sub ret mov or movsb add jg or cs push xchg fiadd scas fisttp (bad) pop add ror xor arpl aaa pop loope xor xchg dec popf mov paddsw gs aaa dec mov xchg xchg out jge lret fsubs mov mov loope sub popf cs xchg bound inc sub lds sub jp push jb mov xchg jbe mov popa mov test or add or cmp jae add mov test mov int3 fs push rcr inc cmp cli dec enter inc xchg push jecxz test mov add inc push and or fidivr xchg pop shrl in cmp xchg mov sarb fistpl out iret lods in in and lret jae inc lock out mov insb lret clc xchg rorb es out xor imul add and push add les xor nop lods aas inc mov sub fwait pop mov xchg mov outsb mov sub push xor (bad) out pop inc inc data16 icebp jecxz (bad) ss inc dec and cmp arpl xchg adc movsb or sbb xchg hlt js imul push fisubl adcl movsb in (bad) push jecxz cli test es mov and mov cmp or bound popf out jp xlat les pop pop push add cs inc mov push xchg and push and cmp push lcall outsb movsb addr16 cmpsl pop and out ss or lods add sub popa cmp mov and pop push xchg pop icebp (bad) ds xor and add inc dec (bad) fistpl adc outsl mov lock inc xor push inc mov arpl hlt loope xchg xor pop mov les nop mov mov jae mov mov fimul and lahf pushf mov sbb push std aas or xchg imull fdivrp (bad) idivl cwtl mov mov das dec (bad) sarb push jl mov xchg mov push and jmp inc push hlt icebp fildll test mov jl dec jl pop and lods int test dec adc test xor sub add fstpt popf movsl cld sub (bad) cwtl clc and mov loope (bad) ds dec add scas addr16 adc and mov jge dec mov out add dec std xor sbb mov fdivrl out out mov fisubrl push pop xchg inc jl inc repnz loopne mov mov cmc fsub cmpsb sub in xchg mov xchg sub xor dec mov popf int inc mov adc int3 mov or dec jmp (bad) jbe rep (bad) roll fwait dec movsl call lock ret sbb add jae daa in lds icebp loope popa fnsave cwtl xor or pop xor gs movsl mov cmp lock lret lcall push sub dec jle mov rcrl out jae,pn fidivrl sbb sahf mov (bad) enter cltd (bad) xchg loopne dec mov stc iret push pop mov out rcrb xchg or xor movsb or js cmp sub xchg imul in xchg adc les sahf add sarb or inc xchg fnstenv mov ja push test jmp test int cld inc call cwtl aam sub aad fcoml es push (bad) loope lods add mov add hlt xor pop sub enter mov xchg jp mov loope jbe push adc ljmp mov xchg push aam jmp leave (bad) loop jmp xchg ljmp (bad) mov in mov xchg cmpsl (bad) mov (bad) mov adc rorb sahf mov dec nop jmp pop mov inc mov dec lock shrb mov push les adc gs push jge test add xchg in movsl mov iret jp adc test in or test add arpl sub rorb (bad) das (bad) pop dec adc outsl fstl mov repnz sbb test int aas and add mov jne and mov mov subl dec mov inc sahf ds mov xor adc dec loop sub stos dec addr16 repz lret pop rcrl jge mov gs mov dec lock lret jns ret out leave mov or inc and sub ja ljmp cmp (bad) loop mov lret ficoml xor mov dec mov or es inc inc cmp daa pop out add push add frstor fnsave sub into pop (bad) mov add les dec call push int sbb fiadd out (bad) jo pop iret mov cs inc rcrb popa fcmovbe cli xor ljmp sub and or aas xchg mov mov jg test dec or mov ss dec ds gs roll icebp (bad) int3 cli je repz xor inc and cmp dec mov pop insb pop in sbb mov sahf lcall adc push pop add inc scas lock or jge xor push pop insl (bad) pop loope xchg cmp adc push dec test testl sar test cmp sub inc pusha (bad) jb aaa test addr16 dec (bad) push inc call xchg cld pop add aas lds cmp bound hlt dec aam out stos add xchg mov mov and push mov out adc mov stos mov sub fisttpl pop bound xor jae (bad) pop jne lock xor adc cmpsb dec mov imul sub add (bad) jg cmpsl or add rorb loop loop mov xchg xchg and cwtl (bad) jae aad sub inc mov int3 data16 les cmp popa pushf js push data16 inc adc daa jecxz cmp (bad) pop or test jecxz insb cmp aaa stc stc mov lea or loope xchg xor jae push repz stos mov mov loopne loopne push jge sti bound je inc and les jo sbb sub cmp and pushf sub dec test jo push out insb mov cmp int aas sub mov (bad) dec in fucom jp hlt adc lock mov dec and int3 dec adc mov xchg jbe xlat add dec outsb fisttpl cmc mov idivb sbb mov dec push xorl not and mov stos jbe decl jae sub sbb (bad) mov lret xchg push inc fimull and mov mov mov mov outsl mov jecxz (bad) xor in pop repz xchg ret or and jne jle pop adc adc mov cmp fdivp mov stc lret jle mov pop xor add or out inc dec lods das pop jno push jb add mov sbb (bad) test sbb insl cmpsb outsb popf jbe xor stos les rolb mov xchg or xor mov inc cli cmp inc popf pop fsubrl ret mov (bad) test notb adc mov push bound adc outsb roll or cltd jmp loope push cli jge mulb adc movsl jbe ja dec addr16 or iret ret xchg lods xor mov dec test out bound popf inc scas hlt mov ret xchg lahf and ljmp lcall ljmp mov (bad) iret bound pushf mov repnz mov fsubrs jge or nop cmp cli jns or fisttp shrl lret cmp jno push fwait sub into les xchg mov jg mov daa xor lret pop add and jecxz loop adc jnp add jp mov sbb repz jns lcall sub insb adc out mov jl ja mov mov jne call pop lods (bad) dec mov addr16 and sbb inc fadds insb mov lahf inc inc mov adc ljmp xchg mov lods ficoml addl pop ret imul test xchg add xor clc js or mov lahf mov jb mov jge sbb loopne (bad) push mul ret cmp inc dec sub adc fs lea and pop or mov dec leave insb mov cmpsl ret sub pop es lcall sub outsl addr16 cs lret push sbb cmp sub mov dec leave mov and adc jnp rorb add lea mov test outsb mov aas (bad) fcompl xchg mov lahf pop and das std stc sub ljmp std (bad) cmc xor iret xchg sub call dec inc push gs enter jne repnz cltd push in das daa pushl fsubrs (bad) fdivl rcrb mov push leave adc iret mov aam mov test insb sbb sbb sahf pop movsb add bound cmc cmp adc cltd mov aaa je loope pop je pop adc sti ret cli mov jecxz xchg cmp fildll pusha cld mov xchg dec andl mov int jp (bad) mov lds gs ret in lds mov int3 mov push jno fadds xor xor outsb notl sbb outsb xor inc add hlt jmp mov pop mov jge rcrb rorb or leave and nop push mov addr16 (bad) xor std inc pop aaa cld lcall aad jmp push aad popf cltd jne ljmp imul jl inc inc and pop push adc fbstp inc adc bound mov xchg add push jae pushf cmp cmp dec cltd aas cltd mov xchg sub stos dec mov lcall and inc jae mov push imul das xchg cmpsl mov xor out cmp push insb xchg pop push and mov scas sbb cld push (bad) cmp scas cmpsb les js std jl daa decl (bad) repz or testb mov inc adc rcrl int3 inc sbb xor rclb imul jle mov push xor mov lods outsl push or js stos insl jne pop loope mov push mov stos test mov insb cmp push js scas jmp cmp mov cmc loope,pt stc mov inc mov mov or sbb fisubr pop xchg pop aaa inc inc int3 mov fisttp jge hlt in xchg das loop shlb xchg mov movsb jecxz pop xchg mov (bad) sti push jo mov call push enter bound addr16 fbstp (bad) stos aad pushf pop mov jmp or xor aaa loopne (bad) or rorl mov mov inc adc inc add aad push loope push xor addr16 lods fsubrl lret in or sub jnp mov or arpl xor (bad) mov or stc hlt outsb fsubs xchg movsb notl mov clc dec jmp pop aam iret lds inc cld call mov pop notb push xchg and je call adc (bad) lahf dec sub cli das push mov (bad) mov or and js repnz mov mov shll out imul enter push movb test shrl pop dec ja inc loop add push jns sub jb fcmovbe dec fstl adc sub cmc push adc mov jmp iret xchg out lahf lret jmp pop push dec test out bound in mov fisub icebp push lcall push mov lods push mov cmp mov push movsl fildl out sbb ret leave out dec mov (bad) pop inc fwait int3 rorb lea sub push int dec aas push in aam dec xchg xor pop lcall and push mov xor mov inc mov push dec inc jae test add xchg repz mov xchg sbb ss inc adc pop or in xor adc loope adc pop ret aad rolb popa xchg test movsb les ss adc pop cmp (bad) mov sub and pop jae pop movsl aam mov (bad) loopne icebp push test into notl sbb (bad) sub mov jbe cmp roll ds in enter outsb inc out fisttp sbb dec mov in lds (bad) out hlt lock mov ret aam mov pop add xchg or or sub lods mov in loopne,pn pop fadd cltd push mov test mov mov adc pop sub ja inc cs mov jnp sbb pop loop jmp mov lea fidivl inc faddl dec (bad) mov cs inc aaa jbe ljmp cmp ficomp dec pop pop int3 rorl xor scas jno aad notb xchg inc lret or aad int (bad) or enter in jp fcomps in mov and and cltd scas lds shlb hlt leave mov sub inc test lods xor dec or sarb adc xchg aaa (bad) push xchg dec imull mov mov test and xchg mov xchg in ret ds outsb in mov mov not push call xchg decb push xchg insl cmp ljmp jl xchg test cli push jg xchg cld dec fistpl into addl jns cmc mov lods in (bad) lods jg sarl call push lcall pop pop push sub dec je xlat cmp push clc cmp orl or sbb jbe fbld mov push or data16 dec xchg xchg sbb sbb fdivp fnstsw (bad) fcomps xor les lret sbb sahf aas popf icebp out (bad) and and stos dec fnstcw in jge jae cli lret sti sti xlat dec jno insl push cwtl leave cmp and dec pop lcall movsb jns inc mov mov or sbb dec mov outsb mov add ret xchg jne push aad mov stos dec imul movsl mov adc (bad) ret rcll mov loop insl add mov (bad) dec cmp mov jae enter xchg mov mov add repz push dec or mov aas jb sub call sub stos mov push lcall dec mov xor xchg scas mov xlat pop xor repnz (bad) je pop pop xchg cmp divl cmc push rcll push inc jae lcall mov fadds arpl in into jbe and and pop cs lods call push dec and and adc cwtl add xchg dec in sub ds jmp test xchg adc or jecxz jp mov repnz ja stc arpl std inc xor cltd stos nop (bad) arpl or and sub pop mov rorl mov jns ss pop (bad) cmp es sbb mov xor in jnp movsb cwtl cmp int cld or dec (bad) fildll cli pop sbb mov dec inc pushf mov mov xchg fistpl (bad) xor in test lret push sbb mov mov and loope fwait rcll incl xchg sub adc jbe ds add sbb mov pop push inc inc cmp mov cltd ret jbe aas hlt cmpsl mov or mov mov or loope mov push adc adc dec lret daa adc hlt or movsl xor or loop out mov sbb in sub stos add jb mov ret (bad) hlt sub test pop daa mov and pop sbb dec sbb outsl jnp,pt push fistpll int3 inc int3 xchg (bad) lahf xchg pop sti stos pusha ljmp sahf jge sub movsb cmp xchg adc je sbb push das adc inc mov xor (bad) sub ret xor mov je and (bad) fadd xchg xchg jbe push aas mull push pop cmpl (bad) (bad) iret (bad) mov std dec add mov lret lods dec cld js (bad) push jne push dec test out xchg dec xor jg adc xchg ffree cmc pop jp sub pop sbb stos in push push cmpsb ds lods mov das xor push xchg mov cli cwtl xor addr16 sarb outsb movsl pop out out imul cmp iret test in bound xor xchg or adc inc mov and cld and sbb (bad) repz add mov rcll xchg add adc xor iret and lods lret dec cmpsb rorl cmp popa mov pop scas lcall xchg fstl dec add xchg mov adc push fs inc ret sahf pop (bad) cli dec pop and loop jl fsubrl jne pop movsl shrl add pop push mov adc testb fdivr icebp mov xchg cmp push jp inc xor inc movsb pop jge ss pop rclb (bad) loope xchg mov ds repz mov cmpsl js jae dec cmp int mov mov mov mov mov fldenv sahf fsubrs xlat lahf daa adc test pop push (bad) stc popa push mov test mov in cmc dec cmpsl cmp out mov fs ja movsb adc pop pushf push ret adc cltd xor sub pop fnstcw popf scas movsb sarb inc or add mov sbb jns sahf popa push dec js jl and dec fistl lock orl sub scas xor sub inc dec sbb lods jp loopne push dec popf sbbl jge mov push cs mov outsl push fild test cs mov sti movsl rorl push aas or sub outsb and fnop in gs cmp sbb ret in loope pop push lret rcll insl sbb adc sbb das sbb movsl in sbb popf inc dec sbb xchg in sbb icebp cs mov xor push imul inc lea push push in aaa add dec push clc and stos adc jns call out cltd inc (bad) fstps and inc insb or push icebp adc in movl das loopne mov (bad) jne add mov stc xchg ds xchg stc pop sbb popf inc (bad) shrl in lds jbe (bad) jnp aad call aad in fs test sub mov mov iret shrl and or pop iret mov mov (bad) pop testb jns cmp inc add jp adc pop popf xor out ja (bad) jl popa sbb iret js out cmpsb mov mov (bad) aaa int (bad) sahf adc out adc inc cs or dec cmp xchg mov sub or (bad) lea push and xor jnp ljmp adc sbb sub out pop aad fwait sarb fcmovnb mov lret jns cld jmp popf xor frstor pop xlat cmc dec addr16 inc pushf call mov xor clc lcall cs mov push fwait cld add mov push and mov add movsl loopne fistpll xor out fmul add pusha scas sub sbb mov xchg (bad) push sti fcmovu add std lret xor xchg mov mov sbb imul ja dec in cld clc repnz push andl xchg mov mov pop xchg xchg loop mov xor and bound push push and add aad mov sub push push sub adc xchg add push sbb push sahf mov jno popf push mov mov call fcoml mov fsubr cwtl inc call dec cmp es sbb inc xchg loopne wrmsr mov dec add je sbb jb adc pop (bad) (bad) sahf and in movsb out xor jp mov test cld test mov out lea jg and bound enter stc xor cmpsb sub add dec outsl es xor out xor add pop hlt lret mov sahf scas stos movsb sub sarl shlb cltd nop cmp or and push add cmp xchg pop push out cmpsb mov aam and mov dec jns jbe push das push push mov mov in xor xchg aaa push mov pop dec push rcl das xlat (bad) push shrl call scas mov cmp mov scas jg fcmovb push mov insb cli adc sub bound pop das mov mov out icebp pop icebp repnz ret or jo xchg dec out mov adc into sti int mov mov out in mov ffreep test jo scas mov test add and jmp fstl or xor frndint out lret (bad) xchg cmp aad std int fbstp adc push (bad) or xchg int3 fildll mov mov or jmp adc int es ss sti inc mov pop pop popf js cld inc pop mov mov fldl pop or pop movsb jb xchg out sbb inc fidivr cmp mov mov and sbb pop push fmul mov test popa sbb and (bad) sbb stc add ret mov dec sahf andb orb icebp shll stos mov (bad) aaa out and mov mov int3 (bad) insl fnstcw mov (bad) mov push loopne mov cli data16 scas iret mov xor arpl sub adc jecxz fs in and in lods sahf lock push add sar mov xor mov (bad) repz jnp mov add (bad) push cltd and test cli jae int (bad) movsl adc sti out and pop push cmp pop mov jae and inc xlat and fldcw pop mov out ret push xchg insl jno lods loopne (bad) xor sti insl in scas lret movsb xchg js add mov sbb imul add or loope mov (bad) aas jno daa push mov imul stos int dec out cmpsb outsb test push pop jns pop cltd js jo and fiadd cmpsb inc dec gs outsl pop sbbl lods ror xchg mov ss push jbe repnz test add iret dec arpl add mov in mov jle or sbb inc mov stc mov lret mov lea outsl loopne xchg daa lds inc mov add ja movq cwtl fdivrs mov je mov insb dec insb stos xchg mulb xlat pop jp and xchg sbb fwait dec aas out push and lahf sti daa add (bad) int cmp rcrb mov pop (bad) (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out or (bad) out test scas add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop fisttpll lods xchg xchg lea popa fnstcw imul (bad) jbe jge jmp sub xchg (bad) out ds jge ret add cmp sarb mov stc add pop lahf popa pop aaa (bad) leave rcl fwait movsl pop pop pusha or mov sub or popf sub lret sbb and mov mov inc leave gs xlat lret adc xor aaa adc (bad) adc mov lcall sbb cwtl iret (bad) mov mov mov and cmp mov sbb adc leave sbb cld inc ds xchg or in pop and cwtl inc sbb (bad) (bad) lahf mov dec mov out int and mov push sbbb lret jno mov push push sub ret cmpl jp xchg mov xchg cmp sti cli adc out das test inc mov adc mov or adc pop dec jl add lods xorl adc test (bad) push test inc push aas mov (bad) out ss mov sub lods mov in repnz in inc lahf mov or stc push push roll and std lcall xor loope ret mov leave mov xchg jg lods lock ret lahf (bad) fdivrs aas mov fimull loope mov ret sub mov mov mov sbb into testb fisttpll je bound enter mov or (bad) or mov lahf ja mov pshufw jge sbb xor mov sar xchg sbb and jnp sbb scas adc (bad) (bad) scas insl scas dec les xchg notl jmp push insl int3 xchg arpl pop loope addr16 cmp cmp pop sub cmp sbb cs lret add and icebp iret sbb rcrb cltd arpl mov stc sub mov xor pop xor ja xorl pushf idiv fsubrs nop inc mov out shll pop stos (bad) fmul adc test mov std in or in loope mov (bad) rcrl aas mov es scas mov fnsave aas ficom (bad) xchg adc xchg popf and inc cmp and mov lahf inc adc pop imul stc and pusha and cmp add mov les mov aas sub add xor rorb pop inc icebp cmp cmp ret push lret cs rdpmc daa add xor (bad) aaa fucomp movsb sbb jae fwait sub xor cltd idivb xchg xor mov lds jno icebp mov fcmovbe cmpsl add dec ss outsl xor mov add or pop inc out out cmp hlt in or and (bad) icebp fs dec mov cmp pop push (bad) push lods pop pop pop xchg les push mov clc lds pushf sbb loopne cmp adc in jg ss push pmaxub or in pop xor mov sar stc and into cld jnp arpl inc xor stos in inc int xlat (bad) (bad) repz imul mov mov and cmp sub rol (bad) sub and sub push repz pop cwtl push xchg jae xor fs leave sub (bad) mov push sbb notl popf test cmc pop arpl mov mov fld aad push movsb mov cmp inc into xor jg rcll aas (bad) bound sbb (bad) (bad) out mov imul iret fidivrl mov aaa jo inc mov xor shlb xchg inc data16 cs push sub mov inc ret movsb sub jge jge std cmpsb leave lahf inc scas xor imul les cmc adc bound clc push sub cmp mov cmp lea mov (bad) and xchg loope add xchg dec cmp loope lock and icebp dec xor (bad) in xchg inc shll pop out loopne (bad) cltd push das adc loopne in push loop mov pop jp lahf sub pop push decl mov test xor mov xchg mov sbb jp cltd jbe ficompl or push mov out pop repz adc mov insb std mov cwtl or xor movsb sbb xor inc test and jbe mov pop dec dec push dec sbb cmpl lcall movsl jge push push sub adc inc mov jno xor rcl out fimul insb cmp out mov add popf inc cltd xchg fnop xlat (bad) cmc cmp in pop xor int and cmpsb aaa arpl repnz (bad) mov push xor push xlat (bad) jge and push inc arpl dec xchg xchg popa push fwait mov inc pop mov push mov imul xchg push rcll mov out fisubrl js out fcompl pop int3 lret pop xchg push jp int3 adc push and hlt jmp push or daa cs (bad) and shll inc jo pop inc mov mov jecxz shrl sti dec loopne hlt pop mov jl sub shrl cli inc (bad) mov insb and mov xor or out and test ds ret cwtl in test and xchg faddp call lds inc scas mov pusha std jl jne pop xor daa inc dec or loope adc scas dec enter fcomp (bad) into test mov pusha mov mov dec jae adc or mov fdiv rorb cld jnp xchg popa jnp fistpll sahf xor dec xchg inc jl imul lods aas inc fdivrs pop lods rorl add inc gs rcr cli mov test or push icebp into loop mov repnz or sbb arpl lahf xor xor jns xor scas add jne (bad) mov sub testl mov mov addl or into scas mov xchg cmp and sbb jne test sbb inc sub or mov pop pop sbb push repnz add ljmp jle mov jg lret cld movsl mov mov orl adc jne repz mov daa xor popf ljmp mov mov lock leave push jg and jmp mov aaa mov xchg jbe dec repz iret inc addr16 inc and push add or sub out fs push bound mov jns repz push pop inc repz sar jns,pt clc outsb mov jge pop xchg inc sti and test das or mov dec pop scas mov push and ds ret jno inc cltd dec in lea pop lcall mov arpl jl dec (bad) lcall mov hlt rolb leave mov movsb and jnp vmaxps fnstenv lea arpl and hlt pop imul stc in mov (bad) jns mov pop mov sub outsb imul cmc sub inc cmc rcl inc push jne daa push adc (bad) repz rol lret or into pop mov inc mov sub mov icebp imul pop insb xor xchg xor mov aas into gs mov cld fildll test push cmp data16 and lahf test mov xchg int fisttpll out inc jmp mov or add cli pop pop jmp divl pop jae imul aad (bad) fsubrp sbb mov xlat fcomps push inc push fmuls ljmp add cmp (bad) lret xor (bad) jmp push popa pop add pop ja fild xlat sub inc cmp push cld test (bad) xor jae mov cmpsb mov jmp mov or inc xor pop xchg sbb xchg fwait sub outsl ss rcll in (bad) out fisttpl roll cmpsb daa out shll push dec push dec out cs jo cmc jbe (bad) and movsl into fimul push or cmp push test mov clc fwait inc cld xchg xchg lds add sbb xchg cmp arpl dec inc ljmp sbb je outsb or int cli cmpb sbb unpcklps test inc jge mov cs xchg nop dec je adc sub outsl push call lret fnstenv arpl int mov xlat into cs aas imull add dec orl xor jo push inc mov loope inc inc adc mov cltd fistp inc daa jg inc xchg clc and stos jne scas mov push (bad) and test adcl daa pop movsb negb pop jae nop mov imul add sbb cmpsl jb stos xchg push sbb decl cwtl dec mov mov cmp adc sbb stos adc cwtl jnp push (bad) outsl enter into in mov lcall aam out mov inc das sbbb cbtw push xlat push hlt (bad) or xchg jb mov icebp rclb arpl push pusha pop or repz and aas idivl mov lods or sbb and dec xchg jge lock scas adc dec lret xchg aam (bad) rcll sbbl lea lods cmp and lock jecxz xchg stos cmp stc sub sarl adc cmp call and popa mov sahf stos pushf aam dec sub push or repnz fdiv jbe mov (bad) into xorl dec push pop add jb repnz xchg (bad) push out pop mov in pop jg add sbb pop cltd mov adc xor test push cmpsl es les outsl push fwait jl test pop pop pushf in sub mov fnsave sub in stos fwait pop mov divl dec push loopne,pt lahf dec mov fnstcw mull das cld in iret mov call rorb sbb push enter (bad) mov aas ficompl or shll lea jecxz scas repz mov or scas imul lods fdivp rcl dec pop mov mov stos dec xchg in xchg xor in inc rcll movsb xchg (bad) out leave je fsubrs out add xchg push cmp aas sub mov mov add maxps outsb adc into or and sahf gs (bad) mov mov or and xchg test jb cmp mov xchg outsl mov (bad) sbbl popf and sub popa fimul mov cmp adc ljmp add cltd adc fcmove adc adcl mov xchg dec icebp xor and mov push and sbb jno (bad) mov or mov add pop fs or incb jne fnstenv popf (bad) xor mov scas out sahf mov ror mov sub adc push dec push push sub ret es aas call fcomps bound sub mov mov cmc and int3 dec fimull mov (bad) xchg sub pop mov push sub pop inc enter mov ror repz cmpsl stos test loopne ror outsl inc lock xor inc xchg popl mov inc insb pop adc mov mov iret lods or xor std test xchg xor dec jle fimul mov mov push shrl or outsl mov negb push sub cmpl sub fdivrl popa out in mov stc add mov fmull jmp inc mov sti stos mull xchg and hlt xchg push (bad) lock inc mov sub (bad) xchg adc and mov clc push daa (bad) and and fwait nop mov aas loopne sbb fldcw inc lds sub adc (bad) iret outsl xchg mov mov pop jp fld ret insb or and sub and xor mov and aam cld repnz out mov sub dec insb in fadds inc lock and leave jno adc movsb arpl xor fwait pop xor adc arpl push fucomp dec sahf int or insl mull dec adc arpl and mov (bad) cmpsl fsub aaa jb mov inc test fst mov gs adc (bad) popf pextrw inc sub sub fsts leave arpl xor xor mov popa test insb imull dec jmp popa jecxz mov push loopne ret (bad) adc and ds and lea xchg int or or addr16 mov fldt mov loopne (bad) lcall sbb mov sub sahf and sbb cltd and fincstp cmpsb or repz subb imul test das addr16 mov or dec std fnsave adc xchg lods (bad) mov pushf test int3 lods repz mov js cltd or ret in into push ret orl fmuls push adc sarl cmp mov or fsubrs fldz cmp and inc das cmp mov push inc jp dec xor jne iret (bad) mov sbb inc mov aas jns ja lea mov out jmp movsb sbb rclb sub or push mov or and std mov out mov mov mov int3 mov stos std popf xchg adcl dec push sbb popl enter mov push aas or adc push (bad) lods or add test mov les mov test inc pop mov cmc mov rcll std (bad) mov mov nop dec aas mov push sbb fs cmpsb push mov cltd mov cmp in rol mov stos sbb push (bad) ljmp inc or aam adc inc cmp push out repnz adc mov cmpsb xlat test sub pop test sbb xchg cmp int3 mov inc fist cmpsb sub or mov cmp int adc mov push cmpsb cmpsl lods rorb cmc or sbb push dec sub pop pop outsb pusha sub ss or mov push ret pop cs movsb repz push sti dec out pushf jl enter ds and mov in mov ljmp ds pop jbe mov push out loope pop ret or in dec addr16 fcomps cmpsl cld xchg xor mov and (bad) sarl mov je sub mov jns arpl aad xchg sti test lret pop xor int dec out adc and clc push inc cmp cmpsl repnz mov dec bound push jle leave ficomp outsb rcrb inc xlat cmp xchg (bad) imul mov sar dec imul cmp jg lret mov xor lds call mov cmp out stos leave call mov test ljmp popa out push (bad) pop je lahf push (bad) mov mov addr16 sub les lock std add idiv aaa loopne adc mov (bad) addr16 or pusha cmp les xor (bad) aaa mov push jns in fcmovu cs or outsb cmp ss outsl dec push stos sub xchg sahf mov popa and xor arpl mov jmp jl push sub mov mov xchg mov aaa inc cmp clc pop pop mov mov movsb sub cltd ja loop jp jge mov fistl lods mov mov dec cmp xchg (bad) jle add bound mov js sbb jmp xchg mov fldt gs inc inc sub jmp xor jae mov xchg movsl aad stc fwait sbb inc rol pop jno jae in js jmp inc in sbb (bad) mov call and test push sbb gs sbb push inc testl jbe adc mov jnp and sbb mov lahf add or loope sahf add xchg pop dec leave or addr16 ret (bad) cmp (bad) in sub inc and jne mov stos ljmp fstl aaa ss push cwtl enter lea in out aad jmp jnp and ljmp sahf cs sbb sbb pop addr16 lret fdivr xchg or aaa push cmpb jl xchg imulb je in mov arpl jmp mov cmc movsl icebp sti jecxz sbb (bad) sbb adc pop mov push push pop call sub inc (bad) dec iret test sti imul rorb (bad) icebp pop lea fwait or out mov jno pop loop mov or cmp cltd mov sbb in add mov or mov adc enter add xchg testl dec loope insb cmp cwtl cld test mov push hlt popf mov aad pop and mov outsl inc mov rol cmpsb pop jl (bad) xchg aam int3 rorl and or pop cli xchg jnp sub sbb pop push cli fisttpl dec ja std inc lret sbb test out test push and xchg xchg add out fild mov jae cmp adc jmp pop pop popa lods jns xor ret add lea cld xor scas out ja out add insb dec cmp adc xchg shll or dec and mov cltd lahf mov mov jne inc (bad) stc cmc fldl xor xor and ja push cmp sbb rcrb gs popa inc and (bad) out sahf and fbstp sbb lahf mov ljmp icebp ljmp (bad) jmp fbld les nop iret mov ret pop test loopne dec loop andl andl push mov test pushf cs repz pop in iret stos loope (bad) add das test rcl (bad) mov cmpsl addr16 lds subl cmc repnz lea loopne,pn je adc (bad) jp lods jge cmp incb pop imul pop jo add mov cmp fcompl data16 imul (bad) ds cmp daa call xor aad jg stos sub cmp jl xor aam inc (bad) jge xor adc mov add mov push jmp pop mov sbb sbb mov lret js cld mov mov or add sbb sbb dec mov push jle push jne nop jmp and and push ljmp mov jle cmp inc imul es std cmp ret push inc cmpsl cmpsl aaa mov iret jne cli mov lods iret mov negl imul jnp fcomps shl or ret jne arpl mov scas pop jg test sarb lahf outsb into ficoml aas sbb push mov xchg push out shlb xchg std mov movd pop ficom and (bad) push mov jne mov aas pop sub mov mov shll sbb jns cltd add jnp lds mulps aaa sub xchg mov fdivrp cmpsb icebp sub xchg sbb test pop andl movsb lods mov mov jbe lcall loop mov jae out pusha cmp shrb lret mov iret mov pushf dec imul fdivrs xchg (bad) in movsl sbb add mov sbb sub idivl mov mov push cmp fcmove cli jp jge push mov (bad) ss les mov xorl test sbb cmp pop cld dec sub jo leave xor inc in adc idivl rcl xlat in cmpsl ja inc mov push or outsb cmp mov enter mov daa test scas in leave test movsl bound dec je movsb sbb fcoml leave xchg outsl aam or jmp (bad) cwtl xchg and call dec cmp ss ret int3 push sub jl xor int3 sti lret (bad) jl mov test jno mov push pop scas popf push test in mov mov sub aas push ds mov and cmp imul add loopne and scas pop push outsb push xor and lcall sub dec popa daa jge xchg cmp dec (bad) xor jp clc fdivrs dec stc incl xor mov inc cmpsb and or or pop push das xchg out mov mov mov inc push xor inc mov (bad) and mov rcrb bound sub jne scas cmp push pop and jmp loopne mov ja mov inc xchg orb or cwtl xor or mov leave popa sub lods (bad) push addr16 xchg pop pop mov xchg adc sub push xor cmp pushf xor out stos adc fistpl and adc (bad) fdivs call or mull je shlb or push bound pop (bad) push int in cmp dec fldt pop mov popa mov or dec pop mov negl push popf push cld xor imul and outsb fimul xchg inc insl popf rorb daa stc rcrl stos push aaa add sub add or cld pop push int pop lea push neg adc push loopne add fs movb jmp enter cwtl cwtl les push inc mov sub (bad) jne cmp dec in sbbl ja sahf mov mov cltd add fisubr dec sbb dec mov push divl sbb inc sub push std cs pandn and lahf mov sub daa dec pop dec (bad) mov in inc mov xchg fldt pop xchg inc jnp cmp clc push test test adc test pop pop in stc mov addr16 dec rol call imul hlt fldl xchg sub out dec sub or xchg cmp outsb xor and jbe push inc push shrl dec lret push or or pop outsb or mulb popf js ficoml xchg daa add mov xchg lahf xchg and mov cmp in mov mov mov and xchg mov aad rcll and mov xchg fldcw imul dec bound jecxz xor mov cltd jb cli add mov xchg mov cmp int js cmp push mov adc cwtl sti in je add xor cmc inc clc cmp es mov loop int test lret in fadd loopne mov (bad) inc mov stos sub movsb inc addr16 pop cwtl lds mov jecxz je rcrl out and mov push in les push shrb lock inc and rcrl pop jnp or rcll cmp sbb cltd sbb jp or add arpl push push sbb cmp aas inc pop inc lods lcall call or test cli idiv stc jbe cltd push mov fs inc pop das in cltd js xor or leave (bad) aad repnz nop jg xchg aas stc sbb inc shlb dec jbe (bad) rcl pushf mov fcmovu push dec and insl inc push xlat (bad) push rcll mov and (bad) sbb inc pop jne fistp daa ss or jns add pop iret movsb mov fstpl inc or jno inc mov cs gs sbb movsl mov sub mov dec sbb add fistpl leave sub cmp push or jg aam xchg stos mov jg push cmpsl test jmp test xor or inc fbstp push dec jae in dec jl sarb xchg push adc js rcl in arpl adcb adc inc pushf xchg test popf mov test jo xor sarb fidivl sti fwait push pop sub cmp nop add push mov call push jmp push lret add cmpsl cmpsl cmpsl inc mov vmread std iret (bad) mov repnz dec xor sbb mov xor pop fist mov and (bad) sub sbbb and mov sbb js cmp notl xchg int arpl sbb je out js icebp adc mov roll push mov jne mov ret jge arpl ljmp mov ja xor into dec in inc sbb push xlat in fnsave and clc out jg stc out jg stc out jg stc out jg mov jb pavgb mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret (bad) icebp lret xchg jns lret jbe mov mov das (bad) test xlat in xchg pop dec xchg mov test (bad) ds (bad) push jl add aad add addb jno es inc mov mov or aad fs jo jnp pop lret (bad) std sub push sub dec and mov dec or add mov stos pop mov sbb stos cli nop dec cbtw mov int jmp mov (bad) xorl push lods out or ds divb stos add jns xchg and add dec stos test mov mov pop push push subl in xor stos sub mov or dec xor jbe mov bound aam ljmp mov xlat add push jb sbb (bad) dec jns xchg sti rorl in out out add sub in cmp pop std adc mov add mov in in xorl imul shl stc (bad) aad out cwtl fist adc cmp dec fs jp loopne cmp lret repnz xchg dec sahf data16 into cmp ret sbb outsl loop and add pusha dec or rorl int cmpsb out fstpl inc cmp in test psubw hlt add js add jns add (bad) or xchg aaa jo mov cmp jne imul xchg mov xchg enter and outsb (bad) cld rcl mov in xchg sub mov inc push aam es mov mov and sbb lea sbb mov push sbb jns adc int3 std adc fs insl dec and jg,pn jp bound adc ljmp adc xor or bound jle ficom fs pop das in xor fs aas (bad) addr16 enter mov push stos sbb (bad) add mov outsb clc jbe xor xor out dec (bad) mov push stos mov test (bad) int3 gs push add idivl push int popa cmp (bad) fsubs int3 cmpsl inc dec sub imul lret hlt test jmp pop sbb push loope mov jmp leave fisttpl push call (bad) lea lret cmc adc popf add sbb test nop rclb jg inc xchg mov stos push clc push add adc mov mov mov push arpl cltd push loopnew je and fwait fwait incl or push (bad) pop (bad) fwait ds shrb sbbl icebp sbb flds lret out (bad) data16 shrl push and rcrl mov and stos inc cmp adc jecxz pop les mov cmp or test leave icebp dec mov insl jg xchg stc stos movsl fildll sbb inc lods mov dec mov (bad) sub xor jo das mov xchg dec add and sbb xor cmp fsub mov daa stos leave or aam nop add dec cmp push les jae scas pushf cltd push dec cmp jno rorb lcall lret inc sahf mov aas jne cmp push leave int3 fsubrs flds and mov cmc ret push fmulp xor adcl jnp cltd shlb in push sbb xor push add sub in pop sub pop push add aam jns adc aas repnz xor xchg pop (bad) mov mov jmp fistp data16 loope call je inc (bad) jne xor jmp sahf loope lahf in outsb pop jbe jns mov add cwtl mov (bad) loopne mov test call mov stos push jbe movsb dec sub sub movsb sub outsl dec mov out push (bad) xor cmpsb sbb imul (bad) xor push cmpsl mov fidiv repz cmpsl fldcw cwtl popf dec jne rorl xchg ret pop jle insb insl add (bad) ja mov daa cltd flds inc jne (bad) stc in icebp push pop lcall fadds jmp stos jbe loope aad jg sub test xchg notb mov cmpsl pop scas jmp inc mov lret int3 mov mov pop loope add imul xchg es xchg mov cltd movsb fimull and xor mov outsl cmc pop add and mov cmpl mov icebp shll and push push sub ret push outsl lret mov add cmpsl notl scas dec jle fbstp xor data16 dec clc leave cli cmp sarb js push mov sub push outsb scas popl mov sub xchg pop pop push sbb push jmp scas pop icebp and sarb (bad) ds mov xchg mov dec in and and xchg adc nop dec loop js dec ljmp insl (bad) cli push dec popf repnz into mov out mov push ja xor pop rolb xor mov stos ret sahf xchg pop pop cli in shlb push rclb aaa insb pop xchg in in fnsave in adc mov xchg pop lret repz sbb adc dec sbb (bad) shrb add jns adc inc popf imul mov sub pop fistp dec out ret push adc and push pop fsubr push mov test jl es sub add loope cmp lods push push movsl lret cs pop and bswap (bad) fist adc std pop pop xchg jne pop enter sub pusha cmp mov push rolb (bad) cli add (bad) outsl adc divps test add cmp fist mov rdpmc sub mov lds sub mov add push flds (bad) orl cltd fs mov sti fcmovnb lock fwait mov insb lret popf jno hlt push inc cmpsb and punpckhdq xchg ret repnz or pushf pop cmp xchg inc sub mov sti ss cmp les repz repz ja (bad) inc lds xchg ret pop inc in mov sub add cmp test sti mov inc scas add pop enter jg mov fwait mov jae xor cli call mov cmc dec mov mov push shll out in xor (bad) loopne mov lods ficompl adc inc loope insl shr sbb xchg jno or sub das jne xor and mov decb push mov aad ror dec fsubl sbb adc subl xchg push dec gs sbb xor mov out or ret lds ja pushf mov ret push test mov xchg xor repz (bad) adc ret xor dec in adc inc (bad) xchg cli jns mov cmp cmpsb sbb ret pushl push imul adc inc gs mov mov mov sbb xor cltd std adc ljmp mov cmp jns nopl mov push mov mov cs (bad) faddl movsl mov (bad) push mov mov dec or je mov pop repz (bad) mov jmp das sbb mov aas out cltd push (bad) sub inc icebp dec adc pop pop cmp dec mov out cld and sahf lret xchg push jmp test mov xor fmull dec call (bad) and or leave insb shrl in scas inc lret push sbb in push sub xchg dec push adc loop das in or xchg fildl adc sbb and aam sub mov push mov and add add mov and leave sub pop cmp mov ljmp cli cld or jo pop das xor xchg mov xchg dec lods and test js aaa in adc adc jl mov out iret enter insb mov in xchg push dec dec aad dec (bad) cmp subl aam das (bad) inc sub insb out popf mov push call pusha lea (bad) subl mov pop and imull neg loop adc clc inc push mov out mov les xbegin cwtl xchg and inc test adc repnz pop popa (bad) int sub push adc and std pop int3 (bad) ja test ja pop cmp jne insb pushf clc jge iret jb jg ret (bad) jo fucom adc cltd addr16 xor fdivs popf (bad) loopne jno dec stos sub adc mov xor ljmp and push mov mov cld daa mov int push out xor jg std xchg inc push and stos push mov ficompl nop or jge pushf (bad) cltd dec inc xchg mov add sub push out stos sarb hlt lret daa aad loopne popf inc jae clc in jmp mov and jns lds or sub jmp inc sbb gs fcompl fisttp (bad) in out stos repz (bad) cmc jmp sub mov xchg fcoms jo (bad) jecxz and rcrl jg lods pusha rol mov das (bad) push xchg loopne insl movsb jbe ret cmp (bad) dec and cmpsb dec lock push cltd (bad) repz jge push sub jo cmc ficomp mov out jo cmp repz cmc jmp ficom mov push lds sub adc loopne add out (bad) rcrb gs xchg jno add rorl adc aaa sub (bad) out cwtl into jns mov or shll scas enter xor aaa xorl jl outsb int xor in roll mov popf out scas mov std cmp ljmp cmpsl add adc sub not push stos (bad) and cmp dec aaa sar lods mov pop xor push icebp push mov stos sbb push add sub push enter clc xchg pop std imul (bad) mov enter cmp and inc push orb jg adc push call add mov jle xor xchg and out int int3 cmp sbb inc rcl bound mov xorl (bad) xor push jge dec rcr fadds movsb subl jge mov ror repnz mov sub and sub xchg cmp and push iret mov push stc mov xorb push xchg int pop fcoml xchg jae jmp add sbb mov mov lret pop adc (bad) xchg mov hlt mov cld clc xchg xor mov dec call (bad) ja,pt daa and jg clc test add sbb xor mov adcb hlt cltd lret scas xor into sub jmp cld cwtl das inc add rclb cmc pop cmp fstps movsb in pop mov push pushf lret dec decb jo cltd and int3 pop mov push je hlt (bad) faddl test push inc pop inc ja fcoml test adc orps lods cmpsb cmp push imul xor (bad) gs jl gs leave mov es imul out cwtl xchg mov dec push pop sahf popl dec pop push stos add cmp cmp sbb mov inc sub xchg adc mov ljmp and cmp in push xchg stos and jae xchg xchg mov jo pop or sub push out mov cmp sbb out lock sbb sbb pop and (bad) fldcw (bad) sub out sub mov pop decl dec shl fisttpl shlb sub lock adc push cld jecxz cs addr16 jne jns icebp popf mov xor push inc xor lds addr16 mov negl sbb shr cmp lods loopne movsbl and cmp or in cwtl sbb and ret push xchg push mov test lret loop scas (bad) pop addl cmpsl add dec mov cmp dec stos das imul adc adc outsb jne cmp stc or pop addr16 jecxz pop insl aam int3 pop cmp cmp sti xchg ss test call xchg xchg and (bad) jbe cli mov sahf stc and add enter insl push loop iret pop mov pop push and test add in cs rclb and mov sahf mov xor push or pop lret mov mov fistpll xchg lods mov and imul jecxz mov sub mov stos and gs mov mov jecxz inc xchg jo ds or sbb dec adc xor push mov jle or rcr cld into adc outsl mov sub pop or cwtl pushf pop ds imul jge,pt add and (bad) adc jo aas cmc icebp mov inc jb add cmp rcll jnp adc aam mov int mov ss and jne,pt push jg imul xor mov or aad lea adc fwait stos or loope mov dec and mov pushf mov lcall lcall sub mov mov and sub sub adc movsl xchg or pop popf jle add adc notl imul inc data16 pop xor aas mov push cmp outsb das test and push mov push ds sar jns pop push arpl fpatan inc push fildll dec mul rcll push das jne sahf push mov mov imul sub setbe add jg cld es mov in les mov jne movsb enter push shr mov lcall mov inc xor inc insl loopne (bad) sub pop aad and lods jecxz or imul out sti push dec (bad) sub lods jecxz pop or sbb (bad) ljmp xchg mov sbbl ret inc rcrb xchg pushl gs add jae push scas nop pop insb into cwtl pushf xchg mov fcoml cmpsl xchg sub repnz (bad) movsl add enter inc imul call (bad) (bad) (bad) mov bnd mov xchg data16 sar sub out push lret adcb test pop add push lretw ret daa ss negb and (bad) sub das movsl aaa jle pop sbb xor or aad mov pop fs les rcl call movsb nop dec loopne push insl mov xchg add mov add adc ljmp inc and fildl rcrl movsl pop fdivrl and (bad) sub inc imulb data16 cmp addr16 fistp xchg loop rcll cltd xlat test je shrb push mov mov cmp jbe push jp cmpsb movsb mov sbb movsb or sub jmp fsubrs inc jae into xor mov roll mov mov mov pop xor xchg jne add repnz cmp pop push jmp arpl (bad) sti mov push test lods sub dec add out push dec push dec mov jmp les dec lret sub mov pop xchg mov sub push mov push pop jge movsl popa (bad) jae cmp in mov xchg imull and dec xchg mov mov cwtd xchg jg addl mov jae mov ret hlt mov adc lock (bad) decl rol pushf jp in mov adc mov jl push add mov lods ret clc leave push (bad) out mov sti mov xchg mov gs (bad) xor shrl (bad) add add out fisttpll jnp les test incl sbb inc sbb push (bad) mov dec ficompl cmp inc (bad) cmp xor or pop xchg rolb dec inc sbb mov imul pop (bad) mov jecxz xor call xor cmpsl jmp fdivr mov out push mov jmp inc std repz adcl pop adc ljmp data16 xchg test mov xor out (bad) daa jbe les popa scas ud2 outsb jp pop imul adc aam mov cltd push dec sub xchg (bad) pushf dec out frstor mov in pop sbb lds pushf jle lret mov push (bad) mov mov pop fiaddl dec add mov lcall pop pop pop jbe icebp cmpsb sub jecxz shlb jns or mov jnp in push ret sub inc xor lods dec repnz jl pop pushl jg pop sub xchg inc fsts push inc add inc push pop int3 das adc repnz mov rcl lock sar mov xlat cs dec jge xchg testl aam mov or mov and adcl mov sub add inc jo jmp data16 sub mov lods jl cltd inc add jne cmp mov insl lret mov in and jns push mov mov std push lcall dec clc push into push pusha pusha add out cs ret in mov stc or push addr16 push sub hlt ds (bad) pop fs scas dec jp int3 es xor (bad) call enter cwtl fnstcw pop daa mov insb sub and xor int or daa mov lock mov mov mov and jg cmp sahf ret adc cwtl cs jb xchg aad dec fiaddl jg test (bad) mov cmp leave add test jmp test xchg mov insl lea mov pop add adc cmp test and jae add mov xchg xchg sbb add leave mov or push xchg cmp (bad) rcrl push es sub jae (bad) sub xchg cmc icebp repnz out jmp mov es les cmove aad mov cmp pop gs call adc xchg aaa (bad) fist lcall xchg leave xor mov xlat dec std (bad) jp mov dec xor mov icebp pop sbb loope or stos (bad) xor loop and xchg and insb inc outsb lahf mull add movsl jbe,pn (bad) mov inc ds out movsl push les scas push mov push jno or mov movb add cmp mov or mov xor dec fwait dec (bad) push lds lahf lret or cli mov cmp xchg loope aaa xchg scas sub dec movsl and clc out or fildl push sbb adc mov mov icebp mov xor add lods lock xor inc xchg and push fsubl popf xor lock adc cmp outsl imul push mull pusha insb mov pop cmp push loope lahf mov adc inc nop icebp mov jmp pushf sub cltd loope jae fwait xor jns shr mov dec scas xchg pop mov push call hlt into inc cmp jle push (bad) mov mov mov das jge xchg inc and (bad) sbb xor roll jp cmp lds cmp js pop push loop outsl and stos jae or dec mov cmpsl int3 pop jp or arpl add push pusha jns repz mov jns repnz cmp mov sbb hlt inc pop nop sbb mov cwtl mov fistp cs adc mov movsb adc jno pop fcompl xchg dec rcr repnz fwait int3 sub clc jmp mov sahf repnz lock lahf or adc popf push aaa push and fbstp rcrb push pop jl or jg addr16 jb pop dec dec popa pop mov mov xlat shll pop cmpb icebp jle mov into dec out fnop int (bad) mov mov test in test mov mov mov mov lret jecxz sub (bad) or adc sub add xchg fisttpll and adc stos xchg jecxz and lds jo cld ss adc stos sub gs xchg int mov (bad) mov test fsts flds jl lret aad cwtl xchg fisttp push sub fcoml outsl dec ljmp fsubl cmp jge xor dec movsb in inc call (bad) jg mov mov mov push repnz and mov test aaa mov jno and repz add aad jbe inc jb or pop cmp push repz push lods cmpsb or mov push push movsb cmpsb push icebp pop xchg insl sti push icebp in lds jecxz xor xchg push adc pushf sti (bad) mov adc sub mov jno or xchg (bad) popa push cmp sbb or (bad) sub andl pop or sbb ljmp popf fstpt pop cli fiadd (bad) lea pop push leave stos pusha pop test in pop icebp sbb xchg fdivrs jb movsl (bad) sbb lret jecxz fidivrl or add jge lods xor push jns ret sbb mov ror mulb dec dec (bad) stos leave fcoml inc sub ds sbb cmp sub gs js cli pushf jb xor fildl test fidiv ret out mov lret fdivrs dec mov in in aam mov repnz mov or mov xchg (bad) ja pop rcr je popa mov (bad) je push hlt cmp cmp mov or es (bad) mov jmp leave sbb popa pop int3 mov jl push aas sub mov and pop jp mov push mov xor je sbb (bad) std das rolb cld pop push cmp or call inc ret fisttpl pop jno xchg inc out ss sahf mov popa enter jno enter mov (bad) cld sbb xchg adc mov sahf pop adc mov lret pusha arpl dec shll hlt adc cli mov cltd decl pop mov or jnp daa xchg or sbb mov test inc into jge je sbb push (bad) mov add out cmp mov dec stc insb add dec xchg es jecxz xchg mov enter (bad) adc aad (bad) mov sbb test scas mov (bad) cmc push pop loop inc jp cmp xor out add push xchg cwtl jbe cmp adc loope mov cs mov xchg test mov arpl popf test mov (bad) ds std push xchg (bad) push cmp negb ffreep or (bad) xor shrb andl aas popf or imul mov pop add loop push xor add lahf dec cmpsl pop jnp (bad) xor subb movsb mov lcall jno dec dec (bad) outsb push sahf in enter in push dec gs testb cmpsb nop ds xchg push mov loope mull ja push lods pop loop add or and dec jecxz stos clc dec pushf xchg inc test nop adc push lret cltd enter mov xor out inc push inc pop mov jno sub mov stos (bad) dec xor ret pop sbb outsl aaa and push int jne inc dec addr16 test lods push (bad) pop jb (bad) cmc xor stos clc arpl pushf xor mov clc ss sbb rorb cmp pop and push mov ficompl hlt jns add xchg adc pop arpl lds imul fldl movsb fisubr popa icebp notl add push cmp ret sub mov idivl pushf les addr16 cwtl mov shrl lods fdiv mov xor dec inc mov mov imul push xchg or add pop pop scas sub xchg lret mov (bad) fidivrl out aam dec pop mov add daa inc mov add push and sub adc sub jmp add and cmpsl sub cmpsb dec cmpsl ja leave dec xor in mov les ds addr16 mov inc notl imul inc in aaa xchg (bad) or mov jne cmc int3 sbb or or jae mov or movsb loope (bad) popf dec fdiv push ret ds jo fistpll inc cli outsl or adc pop jns mov (bad) in or test and lcall fxch pmaxub out bound cmp xorl loope stos iret fidiv adc test pop push sarl add pop sub add pop paddusb cli bound (bad) ss mov test int3 (bad) aas popf mov aad loop test mov push adc dec mov push sbb ret jnp sti inc dec sbb js xchg in add mov or cmp mov cmp or add stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne add jle icebp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne jns mov mov insb arpl movsl in jbe fldt stos in mov fwait insl sbb psubw cmp add and add adc push sub mov sbb mov les iret cmp and test scas lock (bad) repz sti outsb cmp insb sbb xlat mov mov push pop leave fsubl mov loop cmpsl insl es in shll es insl mov xchg push aas xor pop lds into int xor push xchg sarb ds enter enter mov es jmp stc pusha jo sbb popa ljmp fs or pusha push adc xchg stos sub addr16 cld or scas and jmp fistl add or and or jge mov outsb jb arpl sub repnz jg cmpsl fs adc adc push xor xchg enter and cld xchg lods push dec hlt enter loope jp jb mov and stos mov mov adc outsl jmp push mov loopne lea in lcall imul push in (bad) aam lds dec idivl push xchg cs sub sti lea xlat stc mov neg inc sub mov fsubr jne sbb shll imul rorb mov test mov (bad) jp cltd jl cwtl stos ja cmp iret loopne mov lds inc mov push dec repz xor cmp daa lret movsb (bad) and sub xacquire (bad) cld jmp mov jno mov inc fisttpl call jp dec mov fwait pop inc repz xor sub movsl mov in dec lds mov mov movsl pusha sub and sub adc mov mov sbb in pop xor push jp jp push (bad) dec sbb int dec mov xchg mov (bad) idiv cli (bad) ljmp fsubrs cltd cltd jae mov popw stos inc mov (bad) cmp pop sub test fdivl fnstenv movsb mov pop cli in pop jle fidivl lods pop sbb add cmpsb xchg push xchg cmpsl inc in xor jecxz push lds jmp push movl (bad) cmp int3 push xchg pop xlat fidiv mov cwtl loop loope mov enter pop fist push adc cmp sub inc adc mov test imul mov or aaa mov jecxz js push push rcrl jg cs inc lock data16 loope jno jno xor pop pop xor sub scas push ljmp xchg repnz xor fldl cmp mov mov scas repnz sub or je pop or pusha inc pop repnz pop movsl ret icebp in mov arpl stc mov test dec mov in cmpsb sbb mov xchg or flds push js mov dec lret xchg cmpsb pop mov popa and push pop fdivr jbe sub push (bad) and (bad) ljmp hlt mov je add push xor adc stc jmp rolb call push xchg xchg xchg nop das out jae and iret (bad) aaa adc mov hlt lds and outsb xor inc pop scas out aam jge adc push sar out (bad) loope add das cltd cs in add sub dec in xchg repnz aam xor xchg movsb or cmpsb jg rolb dec push xchg adc iret fsubr mov sbb dec es mov mov add dec adc pusha mov cmp jne sub mov (bad) dec dec sub sub cmp mov mov enter inc fadds in mov mov out loope jb jp jecxz inc mov jg cmp scas leave clc push fimul jbe and sarl ljmp add sub mov dec sbb mov (bad) and jl push aad jnp shlb popf push inc imul and stc inc insl jo int3 cmpsb test pop push iret sub adc ret loope push or loop pushl mov loopne insl (bad) jmp pop mov fcom repnz xchg ds jl jb adc inc sub (bad) push (bad) xor addr16 cmp mov sahf push les into inc inc or pop pop (bad) sub xlat add sti cwtl fdivr in imul mov xchg xor mov cli pusha mov test in xchg xchg shlb inc dec aam adc stos dec push data16 pushf or aaa shrb mov fwait iret outsl sti pop or test pop sub iret adc lret pop mov push rorl stc fsubs adc xor push aad xchg cmp cmpsl mov or inc push mov aas ja imul mov lahf out add adc repnz pop dec push push (bad) in pushf mov daa xchg std mov adc fimull jg leave ret lock mov xor xchg inc and pop sahf pop ret imul push je sub inc xchg mov test xchg sub adc aaa sub in cmc mov mov mov ljmp sbb cltd and movsl rcrl addb fimul add andl cltd xchg (bad) out cli fidivrl jmp pusha jmp xor jecxz mov (bad) mov insb add pop dec jne adc mov jecxz cmpsl mov adc sbb push cwtl mov xor iret pop xor dec out rcr mov mov outsl sbb mov stc aaa mov jl adc add pop adc addr16 cmp jecxz pop mov pop mov mov pop jb stc xor out mov or push (bad) jno call rol mov sub push push rcll pop push (bad) pop mov sub out pop push xor inc (bad) lahf insb ret xor mov cmp (bad) outsl and push xor mov in and iret and xchg inc (bad) lods or pop in xchg je popf push outsb sar mov pushf push roll mov mov sbb pop mov pusha add out fucomi push out push sti pop mov arpl push cmp mov or imul jnp mov sub loop adc mov mov std js xchg daa (bad) pop xlat and add call lds jae scas int fdivrs add test insl jl fistpll je stos adc mov push jbe push out push dec movsl inc outsl fldt mov imul psadbw add inc pop (bad) push aad push stos out ljmp mov sub inc mov jl and xchg pusha test test pop or mov test push test sarb pop ds outsl out je outsl and cmp mov jb mov test adc lods imul jge push sbb dec jmp data16 ja sub mov out es jecxz sarl push lods inc adc push frstor cli out adc sbb out (bad) adc xlat cmp xor (bad) lret pop scas loop,pt xchg or jne xor sbb std mov scas sub mov repz mov jmp arpl inc icebp icebp sub lods jmp xchg addr16 and dec stos mov push mov rcr push inc pop ja sub imul loop mov mov sbb mov sub fisubl out and push pop out jmp test stc cmc in stc shlb push ss shrb xchg xchg arpl mov (bad) xor mov xchg jle (bad) fs xlat pop les pop nop cmp iret mov pusha lcall jp iret inc es mov nop xchg les cmp pop out push push add jns sbb (bad) pop xchg lret inc mov inc scas adc and cmp push jmp mov aad sub mov mov nop ret pop mov or push shl mov cld (bad) pushf cmpsl xchg lcall in repnz add lahf sbb pop jae test inc stc repz std push dec mov daa push shr scas add fcoml mov sarb jle lahf imul adc aaa adc or mov in pop ffree pop leave dec sbb mov or stc sti adc mov xor (bad) cmp lea gs (bad) fwait dec out and lahf mov jne add mov scas stc lods jle mov fstl and cmp adc inc daa sbb imul icebp cmp cmp add cmp cli adc xor push pop out in (bad) clc insb roll jb imul outsb fildl mov movsl or pop cmc subb and mov lcall leave lret mov das jno inc mov ja jnp lods rolb mov addr16 gs cmp addr16 lahf pop (bad) cmpsb jg xchg aaa inc push (bad) into xor push mov or mov push xchg pop cmp ss stc sbb (bad) (bad) aaa pop fbld mov sub or xor push xor (bad) shrl cltd (bad) pop cmp into fnop mov cmc sub dec push push mov aaa cmp jecxz push stos sub mov stos loope lock xchg shr iret xchg xor mov inc stos pop xchg push jp pop mov jo cmc arpl std sbb (bad) dec lods adcb adc or out (bad) fdivp (bad) sbb aaa lahf mov in jmp ret adc sbb (bad) aad cmpsl mov push test ret jecxz or mov aad push push xchg sub data16 push fs daa or mov in jbe jl (bad) std arpl sub (bad) stc (bad) loope fildll call xor and and mov inc outsl pop inc mov mov pop cmp inc stos sub rcll cmp fldenv jne loopne xchg mov mov or popa ret daa inc lcall dec sub pop jp dec gs addr16 nop jg mov cmp jmp jno push add imul pusha cltd ficompl pop popa dec loopne (bad) in arpl and lret inc (bad) ficomp ds xchg pushf ljmp aas dec insb out stc inc xor xor add stos adc js cmp xor ret mov pop sti in pop daa rolb cs mov inc jae nop xor outsb stc add mov fisttpl xor outsl (bad) mov sbb add aas xlat leave (bad) stos rorb xlat sub inc add pop rcrb pop adc and mov ret push pop (bad) cmp lcall sub call cltd mov sub sbb and popf sub mov loope jmp inc dec in jg sbb test je icebp push mov and xor lock daa popf push into inc mov pop cbtw adc mov sub sub mov cmpsl shrb push cmp arpl add psubusw es add lds sub mov les icebp sahf insl test xor pop (bad) and sahf push push mov push xor aad sbb fild adc jmp lret adc movsl test sub iret xchg mov pop xchg xchg and xor stc fwait pop pop sbb arpl cmp dec add (bad) std stos stos sbb jbe daa mov adc lds or push inc add insb in add fucomi nop insl adc addr16 cld cmpsl lock inc add movsl xor jg sbb shll mov dec addr16 lcall mov or mov mov out rdmsr repz fidivr sbb fucom popf test lret dec mov xchg and (bad) dec and lcall xchg cwtl mov rcrl or incb cmp bswap sbb aas scas scas imul mov pop sbb ja cmp ret jb pop add mov shrl xor rolb xchg or adc push ficomp cli stos sbb enter ss mov add mov das movsl in aam sub test inc dec dec xor adc mov stos mov leave cld mov lods (bad) cmc in pop std sub adc xor jo mov dec adc jo jb sub dec adc icebp pop inc fsubrs xorl cmpsb idiv mov mov and mov xlat dec sub push dec push sbb std mov lahf xchg icebp jle js aad adc jo mov push push clc ret cmp sbb xchg xchg lods mov jb jbe dec nop leave pop xorl mov (bad) xchg out fidivl icebp mov and and bound jmp jno xor mov mov dec fildll mov pusha lahf repnz call inc xchg stos jle or add call lock (bad) cmp and cmpsl sub fsubs mov pop dec (bad) stos sbb jns nop xor pop and xchg rorl xrelease xchg sub addr16 addr16 es aas jmp jo insl dec jbe fistpll cmc bound cmpsb mov and mov loopne push mov jo lds cmp add divb mov fwait fwait mov fisubrl in (bad) adc sub jge dec dec loope out xchg out outsl adc jg fwait dec xor mov call fnstsw jne fadds daa push push push daa jmp gs dec dec and aas add sub jl ljmp xchg inc push inc mov cmp or test test pop pop inc (bad) cmp jno (bad) stos or mov call cmp cltd out loop stos mul and fbld adc shlb add inc dec pop or xlat fdiv xchg aaa les mov mov fimul adc sbb dec and lret imull dec xchg pop xor mov es test xor jmp repz add js lods push shrl addl out sahf pop call sub mov shll (bad) or (bad) outsl sub shll shrl push push xor imul mov pop pop or xchg mov int3 jae in mov es jbe cltd (bad) pushf in mov push push mov outsb cli in inc addl enter mov popf mov fwait xor cld pop cmc test fistl (bad) xlat in sbb rorb mov sub push sarl fidiv add pushf sahf xlat dec cwtl (bad) pop adc pop and mov ljmp test inc pop pop sub ja xor xlat dec cltd jmp fs popf xchg mov mov mov nop repz jl emms mov dec sbb or push sarl push fnstsw aas mov cli mov daa insb xchg je std repz fdiv or ret mov jg and inc jo pop or inc jne sbb hlt div mov xchg cli or vmovd and fcomp or push shlb pop dec mov je and jns (bad) (bad) je jmp das repnz dec xor lds jb fxch dec ja sub xchg dec stos pop push xchg push pop sti pop sbb xor popf cld ljmp test xor mov push or lods push js inc adc es (bad) xchg sub xor inc divb mov push test in testl inc lcall inc aad inc in fild inc test mov (bad) push lods mov push dec jg push outsl ljmp ss jbe ja mov mov scas jne mov mov xor sub mov mov dec adc jecxz,pt sbb movl iret push jns and sbb and das test xor adc aaa popf adc mov jbe jne sti pop jl sub jne mov push pushf pop in cmpl push aad aam jle insl xor xor std dec jae jp lret icebp or sub jae push out imul jl inc insl sub add cmpsb mov push and inc add dec lret mov sbb mov sub bnd movsb (bad) xchg andl test shl cmp jnp mov scas push cmp or pop jl pop nop cmpl mov (bad) fimul pop insb jmp icebp cltd (bad) push callw pop mov inc shlb sbb mov div cmp pusha imul jae adc or add cld inc jecxz imul cmp stos mov xlat iret inc insb inc sub cmp adc and lret dec sahf adc movsl pop inc (bad) mov sbb or jne mov sahf add push inc dec cld ficom test push adc fwait mov (bad) movsb or pop hlt andl out jae sarb ja,pt pop es clc leave dec loope xchg push das cmp cmp pop add push mov pop je mov (bad) cmp pusha out pop jl stos or out mov aad aas out enter dec scas rcr add enter fxch adc jne xor (bad) xchg or sub dec or jb dec pop nop movsl pop mov and mov shl xchg aad out std (bad) adc clc (bad) adc cmp fdivrl cmc (bad) xor into sbb cmpsl imul adc mov or iret stos sub dec push iret das mov fs stos dec rcrb insl pop hlt loope fcmovbe sub mov ss mov jae pop sbb test les lret test movsb xchg inc jle dec push push cli or and movsb add sahf fdivrs fisubrl shrl out xchg fsts mov mov xchg les cmc pop sbb or lahf stc and loop lock rolb jae mov cmp leave leave mov ljmp add push cmp leave push in adc in pop ficom out xor mov mov cld lea xor loope (bad) sub push sbb mov test lahf mov (bad) xor outsl fdivs rcrl dec call (bad) jge (bad) (bad) fsubrl add aad stos sub fstpl stos xor rolb sbb aad jg cmp sti pushf iret dec add loope aas pop mov or mov push out (bad) stos sub test mov jns sbb ja xchg (bad) push inc adc out mov imul push outsl sti dec mov addl aas dec jg xchg shrl lea mov fs mov pop mov push mov pop ret xor out mov dec cmpsb call add mov insl js jle push imul out sahf push xchg leave cmp ret push push dec or ss sub mov xor jb or and and pop or cmpsl xlat movsb or add inc arpl ljmp and cmp notb stos (bad) dec sarl mov adc mov pusha cmp leave pop cmpsb push jbe xor sub or mull scas inc in sbb dec (bad) sbbl pop dec dec int enter test stos sbb xor iret out and clc lea and cmp movsl andl in adc pop push mov (bad) ss mul aad sub push jge cmpsb into mov xchg mov cld push mov adc movsl pop and fcos int push std mov xor jnp add sbb ja outsb jae mov push sarb dec mov (bad) imul es movsb es push jbe and cmp inc (bad) jg popf push push pop (bad) bound push mov jl pusha arpl xchg push daa mov sub mov out pop inc mov xchg pop and xchg fs push and mov imul fisttpl negl hlt push jns jb sub mov in movsl xchg lods cltd subl push jae adcl into popf das in xchg out clc inc lret sub shlb ficom mov sti mov mov lea mov rcr cmp les xor mov (bad) iret shrb inc lds pop cmpsb (bad) arpl xchg pop xchg jge xchg fdivs add lods xor cwtl push bound lret sarb pop xor jmp inc add push pusha fmuls push insb sbb mov xor inc push repz dec xor sub mov add jo mov lods sbb cmp test cmp xchg stc idiv repnz cmc es shll sbb mov push xchg pop ss add sbb les dec aad jo ja ficompl int cmp repz iret aam cmp gs xor and decb sahf xchg dec sub int push ds lcall ss dec nop cmpsl pop repnz jb jnp enter xchg shrl lock enter lar mov mov add push dec pop inc mov das and cltd xchg loope fildl aas fwait xchg and rorl outsl sub xchg sarl mov or mov xchg and mov pop mov adc loop mov pusha test ret cltd add mov or adc mov xchg cmp pushf icebp jecxz int cmp mov mov fiaddl fistl or inc mov xchg xchg es xchg sbb mov dec pop jmp fimull xor mov push cmp jns iret nop cmp pusha and aas mov xchg daa xchg fidivl daa and pop ljmp shrl clc daa and std cmp stc sub movsl lea aad lahf jb sarb pop sbb cmp mov add push movsl leave and mov mov pushf mov lcall iret jmp mov and xchg mov dec inc pop or data16 nop inc sub fwait sub and fmull (bad) push push xchg sub inc pop xor fwait inc addr16 jmp stos into iret and xchg lret (bad) fisttpll jp or inc out inc mov sarl and sbb fwait and daa fbld out jno adcl cmc mov push int cltd xor pop mov ds mov lcall cmc mov jl cwtl mul or pop addr16 jns pop mov lea aad bound xchg lods adc notl xchg xor pop cmp movsl jl mov push sub mov test and add push and jae aam push pop cmp icebp mov xchg add orl sub lea jne add add pop loopne fstps mov gs js outsl (bad) cld adc mov ljmp lds (bad) call fnop sub inc xor cmp aaa test or bound mov scas imul sbb lahf push gs sbbb mov bound aaa push mov mov shrl inc cmc pushf mov mov loope cmp dec mov arpl cmp ret imul xchg pushf or js pop in xchg test adc aas push mov (bad) sti and inc fnop cmp lea mov xlat jmp sub int3 ljmp sub roll inc cmp int int3 aaa mov xor sub lea mov bound pop imul xchg (bad) and movsl adc cs loope lcall aad xor mov jge pop or in lret and sti addr16 and mov push scas xchg outsb sub aam mov mov sahf pop mov jnp decb sarb lret popa je mov xor sub xchg int3 ficom dec add subb sarl push int3 cmc ja and push movsb mov bound add (bad) je mov sarb pop fs pop (bad) int xor pop xchg enter mov fldl xlat ljmp test iret lret pop fisub pusha mov (bad) movsb jb or mov sbb sbbb int3 or outsb sub aas cmp out cmp pop cmp jnp out pop cmpsl scas sti fsubr hlt push add inc fidivl add cmp cmpsl scas fyl2x mov incb (bad) (bad) adc dec cmpsb push and mov lret pop pop cmpsb rcl mov mov gs fs xchg outsb cmp pop enter sbb jnp jp cli adc fsubl and xor mov sbb xchg and mov mov jne mov inc scas pop ficom jmp cmp (bad) push sub push jne dec pop mov or push clc out jg stc out jg stc out jg stc out jg fild add add push pop push push add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb adc outsb fnstcw fdecstp xor test mov fldt idiv mov ret jge add stc sub add cmp xchg imul imul xchg push mov pop movsb dec push xor (bad) pop inc mov mov jo test sbb loope ja cmp lcall out push lret outsb adc pop lea jb,pt cmc xchg cmpl adc lcall jae adc popf aaa fdivrs jbe test dec sbb pushf mov mov pop add push push push ficom mov mov xchg mov push in ja or in fstps xchg stos lret das push loopne fidivl cltd pop dec xor stos sahf sbb jle fimul lret mov mov sbb lds mov mov inc jecxz lods test mov pop dec sbb popa lcall inc mov outsl je lds int3 cli out icebp sbb sar xor iret xchg ljmp and push repnz add aad rcll push pop aad fcomps and cli das std add xor nop nop subl popf jl and ds lods adc adc gs hlt mov lret nop xor sub jp jl mov cmp clc and (bad) xor or ja push hlt out xchg cwtl pop hlt lret enter iret clc jo into pop xchg jle stos and pop xorl mov push or cs fistpl fdivl mov add inc xchg jno add ss cld cmp (bad) mov iret dec pop sub aaa aas sbb (bad) outsb out outsl push fsubs mov cmp and insb ret push pop inc lds cmpsl jbe cmp xchg and sbb lcall das outsl gs inc mov repz mov imul test call dec aad add add xchg test das xchg mov mov lock add fimull loope sbb inc mov stc and stos sbb mov push sbb (bad) mov mov pop test adc or cmp cmc scas mov mov aad mov push jb sbb sub adc lret loopne aam imul and mov shlb stos add dec gs decb sbb jge sbb cli add ret (bad) fdivr xchg (bad) xchg push test data16 or insl jmp and mov stc test add mov pusha fdivrs mov aas cmp sbb xchg int lahf aam pop icebp inc dec hlt rcrl xchg inc cmp ret aaa push mov adc jo cmp int arpl daa mov inc xchg jbe ss (bad) mov sbb sub test lret xchg and and jp and dec cmp ljmp int3 gs mov xchg repz int jne sbb (bad) xor movsl push ljmp sub cmp enter cmc dec cli mov jmp mov mov outsl sbb jnp cmp nop/reserved inc xlat xchg xor dec jle fisubl or (bad) push inc mov das xor adc cmpsl gs (bad) ss cld scas arpl hlt push hlt xchg idivl fnstcw ret dec xorl push clc int3 test jbe in std in aaa cmp inc or outsl out lods lahf movsl mov mov inc cs bound leave push cltd mov lret sbb cmp add mov or shrl ljmp mov cmp adc sbb addr16 jle cmp aas inc les enter push xor mov adc pop pop add inc mov ret push dec repz or cli mov mov mov inc test add inc mov pop sbb test sbb fs pop push aad push sub imul sahf ds fucomip int3 jle or xchg and int3 xchg das xchg xlat xor or mov or xor mov (bad) mov (bad) enter and sub repnz scas call enter (bad) arpl xorb les into mov xchg and and add out pushl je jo leave jl loopne push add in shll cwtl (bad) mov sbb mov rcl and mov xor test mov gs pop jae lahf or jne push lcallw (bad) and andps add (bad) or mov repz cmpsb or rolb jl out lahf enter xor (bad) sub sub jmp mov lcall xor aas push sbb mov mov ret inc mov rorb mov mov xor dec cmp popl xchg push in icebp outsl mov in xor cltd inc mov inc loope and imull jle mov (bad) aam (bad) xchg mov sub lds xchg (bad) mov jbe cmp sbb scas xchg pop arpl push mov push and pop enter jmp outsb lcall test sti out sub mov sbb mov out jp or stc std js loop outsb cmp sub mov or (bad) (bad) mov rorb rcl and outsl inc mov cmp push loopne cmpsb push leave lods adc jg mov add imul ret sarl loop lods mov mov push notb sub lods pop stos xchg scas addr16 fdivr xor js out into std insb sub test inc push sbb push adc push xchg xchg pop divl hlt sar out jae xor dec gs cwtl xchg das jns shll and xor cmp shrl mov or sub frstor cmpsl push sbb jb jge dec aas scas movsb push scas imul mov cwtl mov mov sbb jo in pop dec sbb and je out pop sbb add mov nop mov dec call adcl inc inc nop push ljmp jl inc mov push daa and push mov or mov mov inc cmp mov lds out mov pop sarl out mulb (bad) cs lahf in cltd sbb shlb leave es mov aad pop sbb add mov daa mov sub hlt mov mov daa dec sub push adc sub jns push pushf ret test call push ds jae adc push loope les aas add or or add cwtl inc xchg stc scas (bad) into repz and jge xchg jge les mov sti imul fistl mov (bad) sub sahf add mov das mov cli sbb and data16 xlat mov cld push mov cmp add mov out lret jae bound mov fs test adc pusha cmpl cmp pop (bad) jle or ret (bad) je sbb push stos sahf jg iret das call shll xor mov std ja loope in xchg out loopne enter dec sbb (bad) adc outsl roll rclb adc adc sub mov cmp cld pop push sbb jno mov xor xor ficompl stc add (bad) adc imul pop cmpsb cmc adc or dec mov pop and fdiv or inc sbb hlt insl sti orb test in popf sub and daa push pop pop leave cld and stos lcall xchg and icebp ror icebp scas jl jecxz pop bound lahf aaa push xor jmp xchg push and test inc (bad) in sarb xor cmc scas test stos pop and jp cltd jae enter das mov scas push in movsl jbe inc pop cmpsl sbb inc sub mov add mov xlat mov ja and sub dec movsb insl jbe jp cwtl sub or lds int3 dec cmc cli mov dec sub xchg pop mov lods in cmp cmp push adc in roll mov adc dec add aas enter aaa sbb xor sbb cli ret mov call sarb jae lret stc xchg mov cld xchg add out insb inc pop xchg stos push push mov fldenv mov jo dec mov mov aad pop and lret nop iret add fwait mov in lods mov dec lds jnp int3 xor sbb sbb jne aam dec jg mov pop xchg push jae pop push and xchg scas sarb popf in push jae pop enter inc cmpps or test fwait jnp add (bad) xor mov sti icebp std xchg jg stos imul xchg xlat cli mov stos xchg pop pop pop xchg mov cmp push rol dec dec mov pushf jns or les mov pop mov jg add stc add mov addr16 leave mov pop inc xchg (bad) jo sub loope pop sti xor popf pop pop imul out nop xchg xchg divb stos enter aaa adcl icebp xchg pop xchg in pop xchg cmp fldcw push add pop inc sbb jb pop xor mov xor sbb in or xchg add out mov movsb push xchg mov pop sete into or sbb lea adc int ret sbb mov les inc in pop sbb jmp cmp cmpsl cmpsl mov movsl repnz (bad) pop aaa and inc cli jbe dec add ljmp mov shr pop test das aaa jl sar jecxz (bad) mov lods mov icebp dec mov shr dec pushf iret jne push mov sbb jne int mov mov cmpsb cmp repz (bad) movsb pusha jne or test push fwait lods mov mov rcr repz cmovae jp les test mov cmp cli and jae rol fnop sbbb movsl cmp andl cmpsl xor flds mov mov nop adc jbe push push pop pop lea hlt lea ljmp xor cmc cwtl jno cmp dec enter jae into jg icebp xor mov push cltd mov xchg or loopne dec repnz cmp jbe in push aam lret mov push pushf add pop outsb mov insl xor int and int scas stc cmc je cli loopne cmpsb mov hlt pop test es pop push popf mov outsb das dec mov mov lods into jp adc and adc data16 (bad) lock jl es add jo mov push stos sbb das iret jmp fldt mov push inc add pop mov jmp jb mov aaa pop add orl inc mov dec xor shll cld cmp xor aaa mov or (bad) mov test imul cmp test pop or flds inc cmp clc dec dec push push hlt lahf test mov arpl icebp fisubl lcall movsb rcrl imul inc mov test add pop jns clc or ret add (bad) cmp loop lret scas add sub or sub loope add push jmp (bad) cmp cs pop std xor xor cmp xchg lods add fs aas jge notl inc rorl xor push ret cmpsl xchg bound sub mov int3 pop icebp dec frstor and lods inc lods pop rcrb icebp ljmp mov push outsl mov (bad) cmp sub inc pop fildll cltd les inc lahf add imul dec xchg stos mov xchg jae cwtl lea lock sub inc outsb shll pushl test pop adc mov out add sbbl add mov and mov dec mov pop sbb push inc movsb jecxz call cmpsb or ljmp dec xor mov mov in js sub call mov mov xchg cmp cmpl repnz mov sub mov fdiv leave mov dec jp stc (bad) push and add fsubrs sbb loopne sub cld call sbb xchg cmpsb mov or leave aas es sub (bad) dec push lahf fsubrl aas imul fmuls arpl repnz clc jne sti fcoms or lret push nop dec movsl int jb inc dec dec (bad) mov fldenv sbb xor mov push push fs rorl ss xchg pop fldcw dec pop pop sbb cmp mov in mov mov dec mov das out test sbb out mov dec pushf mov (bad) test mov in fwait addr16 mov xor and ret loope jp or std cmp out and insl inc shrb sub mov hlt ds bound pop sub push add and cmpsl call loopne fsubp xchg mov or loop test (bad) lods inc inc (bad) mov adc xor mov mov pop push mov jp sub out jb dec jae mov fistp out and sbb movsb cmp (bad) mov jns sahf sbb rolb hlt cmp jmp divl mov cmp lret jg test seta mov cmp fldl into inc negl int jle pop (bad) xor jae push mov xor call xchg out jns xchg out dec xor mov mov xor mov cld mov pop mov in cmp push jns ret cs idivb jmp xor lcall stos add enter and mov adc xor in xor je cmp int in lret add jp cld (bad) dec and mov push mov xchg inc mov fmul outsb jp jae (bad) int mov test test and lret mov test dec dec daa fildl mov xorb lock out add stos mov mov je enter jae mov dec inc call sbb jb gs lods inc push jno fwait dec ficom add add mov mov (bad) shll (bad) sahf cltd push outsb nop dec mov ljmp bound xor push adc mov inc sbb cld std mov or cld popf pop add out js xorl inc jp imul inc dec jmp les push das pop xchg sahf into sub repz dec jb fildl int3 or mov xor or jne loopne int mov mov lds addl add cmp ffreep jne flds inc out adc mov pop mov lds mov lods popa jne push add or inc mov cmp imul rorb dec scas mulb push enter icebp adc sbb mov test inc (bad) xor inc ret insl stos std loopne mov adc imul mov (bad) fcoml push ljmp jl (bad) mov (bad) mov mov jbe std add (bad) daa rcll add xchg or (bad) fcmovbe pop mov push push push ret lds and jnp push cmp insb outsb (bad) mov fwait xchg push stos add sub xor xchg loop pop loopne adc in insl lods (bad) cmpsb insl add push jge imul xor jnp (bad) mul xchg lock xchg aaa lcall push sub (bad) jb or aas jmp pop fsub cvtps2pi rcrb dec dec cmpsl lds xchg mov lods or sub fwait aam adc insl xchg addr16 sbb (bad) cmc xor xchg out inc or adc fwait mov adc mov ret inc sti push movsl pusha sbb mov sub xchg aad adc mov rcl dec xorl and mov inc xlat pop push hlt inc xchg push push adc sahf in xor sti test out mov jg rcrb jnp aam xchg pusha lea add test imul sub out addl sbb cmpsb cmp pushf daa insl xlat sub and neg shrb incb rcr adc jae jecxz cmc sbb xchg stc inc add rcr aam cmp or sub adc xchg leave mov cs mov push jp jb add mov dec loop loope sub out mov sub pusha cmp lods dec xchg or pop push test or jno outsb xchg lods push inc sbb loope mov int3 cmp fsubl pop lea mov cmc mov rol jge (bad) xor cmpsl lea (bad) cmc push arpl lds enter in es dec xchg sahf test addr16 aaa fisubl jl negl sahf cmp icebp clc mov ds call lds out sbb sub cmc aaa loopne inc and pop mov inc ljmp sbb leave in jge sub or imul push mov in test cmp jae outsb jge loop loope ret movsl cmp out dec pop loope push pop fxch sub sti daa mov sub bound (bad) sarl cltd push jmp dec out mov es sti imull dec test repnz and (bad) adc push sbb dec jno out push lds push fdivs mov xchg fadds lret mov and mov cmpsb stos mov mov mov sub xchg inc fcoml mov aad rcrl jle add xchg nop rcll xchg ja adc xlat clc addb pusha mov xchg sahf lock sub dec push imul cmp dec sbb sbb mov pop es out lods andl ljmp ds out inc fs add aad (bad) xor pusha gs cmpsb adc (bad) mov (bad) into xchg lcall jo mov test insb sbb mov jnp lods or rorl fwait or pop jae les in loop xor (bad) addl xor adc adc jo,pn repnz repnz mov cltd callw imul or mov fst jo test mov out divl cwtl inc sub push sti test mov add xor popa adc xlat mov loop mov cmpsb ret mov cmp push jns aam (bad) mov jae inc mov scas dec dec push sub into mov std movsb push popf pushl mov stos adc mov pop in rorl pop pop push add (bad) adc imul sub xchg pop inc les ss mov pop cli sub ss rorl mov dec shll into mov add jo jmp (bad) mov (bad) rclb ret push inc test hlt sbb jg bound push push nop fwait mov lcall loopne push pop icebp cmp cmp xor (bad) fisttpl jno cwtl cmpsb or adc test adc in pop xchg iret mov xchg bound push stos add mov ret daa enter pop mov push dec in imul jae mov out dec std jo pop sbb adc jmp pushf divb cwtl stos adc push out pop aam sub fbld lods xor jecxz and mov rolb insl and or ss jne xor leave mov mov adc out fiadd (bad) lret sbb mov pop push clc sarl lods (bad) add in push test fildll mov sub pop jl dec clc pop add adc cmp andl add addr16 push test lock int3 lea pusha xchg sub aaa gs dec gs xchg es outsb mov cli nop not (bad) sbb into cmpsl mov in jecxz cmpsl cs dec (bad) mov aas pushf mov fcmove dec ds jge sub (bad) jmp dec jmp mov inc mov inc ret adc adc outsl (bad) push call nop jmp int3 or lahf dec ljmp call lret sub in popa jns ret and into in dec lods jge cmc mov ds imul or dec lods das dec mov sub jg sahf inc mov call cvtpi2ps ret push cmp int3 leave add ja xor int sbb (bad) rol inc lods stos stos mov cmp cwtl mov pop dec ja daa negb sti lret and paddusw rolb ljmp roll insb sbb push xchg jp and pop inc call adc xor sbb jb insl (bad) add jle (bad) into (bad) pop sbb xor faddl lahf jno insl movsb or imul pushf inc and jp adc sbb je (bad) fimul push cltd hlt incl sub clc insl jnp add cmc fcmove push or xchg sub xchg jnp arpl cmp sub or adc sub jnp pop in ret pop cmp sub add cmp stos mov loop cmp push scas (bad) (bad) push xorl insl cmp loop lock stos add push ret imull add loope adc std ljmp ret mov sub scas xchg mov push les xchg pop pop dec test test push dec shrb sbb cmp (bad) repnz aaa xor pop mov daa sub inc push ja xchg sub jle (bad) xor fnop lret push mov mov scas pusha nop adc leave lret loope fisubr xor fcoml mov xlat jge xchg mov push push add add (bad) pop inc xor add je dec pop (bad) jnp popl push sub push mov fdivs dec shr ret cmp push lcall test pop das dec cmc cs lret or dec and outsl or out cmp fldcw mov add ds inc lds add push push imul mov jmp sbb sbb mov enter xor inc popf lds jg cmc pop or test (bad) rorl insb mov lret jb cmpsl test push pop or pop adc xchg or mov movsl mov mov inc (bad) je mov or push bound rcll roll divb repz lea cmpl mov (bad) clc (bad) jge mov push js push stos rcrl mov and add pop ret xchg jnp dec add mov jo dec mov movsb test aas stos ljmp xchg push xchg test jle dec xchg or loopne inc in fwait adc out sahf fldenv cmp sahf push call repnz mov (bad) icebp xchg clc or push scas or fisub xor aas cltd arpl push je push inc sti int mov xchg sbb in out pop xchg adc inc jbe and daa dec push dec lcall call imul xchg aad add mov sub je pop sar and push scas xchg sbb xchg outsb cmp jmp pop mov mulb cmpsl inc repnz fldl mov cli mov out xchg push pop mov xor mov or sqrtps xor push mov sar outsl mov pop stos mov pushf bound inc jne push fcmovnbe fwait or fldcw ja xchg out mov or push mov jnp in sbb lods sub adc inc mov xlat aam iret mov inc add ljmp aam (bad) pop xchg cmpsb dec adc mov test out xchg mov or mov ss imul mov lock xchg in cli fwait out inc rolb xor add xor dec bound inc add cmpsb out sub (bad) fcoml fsubr mov int3 or lahf mov jp cmp iret adc inc xchg mov jo mov add xlat fs fcoml aas sbb lret xor in fisttp pop adc mov cld and xchg sbb (bad) (bad) movsb mov lahf ret push jl push jae or pop add aad jno adc movb pop (bad) xor and mov lcall pushf and add ret jmp adc lods cltd cmc xor loope sbb adc adc xor mov cld ss mov mov mov hlt add subl pop cmp insb jl cmp popa int xor mov sbb aas push jecxz inc jne xchg lcall add stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne add test mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait pop outsb (bad) xor xchg insl jnp data16 insl sti std nop negl add subb xchg dec test push (bad) ror xchg pop repz dec jge cmpsl sbb aaa fdivrs leave cs mov push imul or test mov (bad) out adc push xchg arpl aaa jle mov es dec or jg stos sub cmpsl inc mov pop fs sub push fdivrl pop je (bad) lods add shlb aas (bad) mov ds dec es aas mov aam jne mov inc ljmp outsl test xor (bad) lods mov fimull adc cmc pushf in scas jae mov mov lods outsb add cmpsl inc dec add add mov xchg pop xchg xchg mov leave sub xchg dec repz imul mov mov mov js mov mov std xchg inc pop lret repnz push sbb (bad) cwtl icebp stos call hlt pushf test add xchg mov ja jb addr16 insl inc push sub pop xchg in xchg xchg xchg insl dec jb lock sub pop sbb rcll dec push mov pop cmovg inc push fdivl popf test orl scas mov ret stos ljmp xchg sub sub pop pop insl inc movsl sbb sbb jne xchg mov popa push pop sbb xchg cmp scas mov (bad) scas aas lods push or dec inc loopne in or push push pop xor pop int3 cmpsb aaa int popf sub inc orl inc fisttpl fdivrl dec push aam inc and fimull in (bad) mov lret rcrb inc cmp push xchg xor sbb pushf mov and mov mov test leave push xchg jge jo pop sbb hlt scas pop sub out jbe pop push jb sub add clc mov js dec daa xor xchg jns jnp push mov iret nop das cmp add lods sub lds inc loope add push lahf adc iret push jecxz lods mov cmp enter lahf mov add clc les xabort jbe push fisttp adc clc pop lock xor dec rclb (bad) jbe push push mov in mov sbb mov ss push dec sbb movsl xor cld push push fsubrs jge,pt hlt lret jae or mov push mov mov (bad) lods shl dec xchg sbb xchg fmuls repnz cs loope das insl scas mov jmp add or data16 sbb xchg in outsl inc test cmpsl sbb rcll sbb stos int3 xchg pusha add movsl fistp popa xchg cmpsl divl cwtl pop jle aad aam mov nop repnz adc iret ret mov sti mov addr16 fisubr jecxz sbb arpl and cwtl jmp js bound mov adc imul jecxz addl in jbe ret cld lods pop stos inc test incl add xchg dec ds sub jo icebp mov stc inc mov in imul xor cmp push push loop (bad) je adc push setp loop push pop in out outsb add sub (bad) mov insb push int mov cwtl lahf js or clc pop jp pop fdivl xor in mov mov sub xchg rcrb mov ja push and fs loopne push lods xchg loope push dec jbe fwait mov adc cmp mov outsl jae inc in data16 pslld sub icebp mov mov cmp xchg sub mov fiaddl or mov mov std xchg fsubs push movsl and sub (bad) lock jecxz lahf popa xchg inc mov ljmp ljmp aad push cmpsl add cmc loop push mov pop rcrb mov xor call push push ficomp out mov aas mov and xlat sarb jle mov mov sub ret into lcall test push sub push adc adc pop aam inc jb jecxz js into push movsl mov dec adc xor mov repz or mov rcll cmp aam jl loopne icebp push adc enter decl stc inc cmp repnz xor repnz cmp lret dec xor (bad) jne fnstcw lret cmp xor jmp aad or mov iret push outsb and jns sbb adc xlat inc xor das pusha push nop js xchg xchg and sbb bound cs xor ret mov (bad) push push adc add adc dec iret outsb xchg fcompl dec mov loope jp addr16 sbb cmp inc pop xor into jne jmp jmp in mov mov repz dec adc ret mov and insb inc adc cmp lahf cmp jo push in jmp sub sub push sbb and mov jb enter push cmpsb cmp pop mov sbb xor pop sbb js test pop push addr16 dec fidivrl mov cltd lds cli fstl iret mov add outsb cmp push lret xor lods js out outsl jl fiadd ss jo cmc pop in push sub mov or jbe out sub jle jmp ret test fiadd rcll cltd (bad) cli subl into xor lods fdivs sbb cmp je push jmp sub fadd mov push dec jp xorl sbb jl cmp loopne xchg fsts into adc mov lds insb icebp fnstcw mov js jbe jnp out jne adc pop mov mov xor repnz pusha roll das cs ljmp add or mov out jno push jl xor or cmp mov movsb ja insl out cwtl imul mov or jmp push xchg (bad) insl outsl xchg ss pusha pop pusha (bad) xchg popa mov pop icebp mov jb leave addl adc adc repnz dec movsb or jl jmp adc push cld adc pop test push and repnz inc sbb cmpsl rolb mov dec ds mov fnstenv mov movsb jne mov dec lods sahf push shll loopne sahf aaa lret mov mov dec fcomps les or and and mov push cmp jb jg cmp fidiv sub outsl jg aam fisub adc stos pop pop sbb jg fsubr mov add flds sub mov xor mov dec pusha sub inc in mov (bad) cmp sti mov out jno or rolb or xor sti inc pop and and sub andnps mov mov test dec jnp add cld mov fidivrl xchg xor xlat push lods mov xchg cli out stc xchg xorl xchg sub mov push popa pop lea in je lcall dec xchg sbb push fisubr popf xor pop mov mov push lea sahf inc or sub fmuls mov jge popf mov stos stos fistpll fcomp stos sbb mov stos sarb ret inc or insb fldcw imul jo sub xchg leave mov or push loop sub (bad) xor inc std or xchg ljmp lcall mov (bad) jl add dec push sbb cmp imul aaa jmp mov lea push and or fbstp adc ss rol jmp punpckhwd or mov test push scas push fisttpll adc inc inc mov jmp mull xor fsubrl loope into les addr16 mov pop and cwtl outsl xchg xchg out test and dec xchg iret xchg js dec jge mov and pushf shl xor std cmp pop cld xor out cmp xor ljmp insl jmp jle ljmp addr16 sarb and jle jg dec fs fbstp dec outsl ja test aad sub jbe nop sub call test sub push ret dec xchg push xor popw xchg add imul stc (bad) arpl mov rorl and test push pop pop nop out pop or pop (bad) dec pop and loop xor incl pop arpl cwtl pop pop imul push (bad) mov or cltd cwtl loopne into adc call sub and mov push nop cmpsl pop in mov clc shlb push mov ret push (bad) mov inc (bad) mov cltd xchg xor push int3 push (bad) or (bad) popa cmpsb jne mov mov sbb cmp adc cmpsl push lret andl jnp fisttp stc or lret xor out daa ret xchg mov push test test inc and popf rcl xchg mov mov mov mov cmpxchg pop xchg xchg mov inc or xchg jg cmp sbb mov ja ss mov push testl (bad) faddl and xchg arpl adc cld jmp push das movsl jl es sub dec je mov sub (bad) data16 btr testl dec movsb cmp xchg mov inc xor in sbb jge xchg loopne mov add cmpsb xor xor mov cwtl add or push push out and sbb cltd mov push call fwait pop lret stos add cmp ret jecxz orl leave shlb call push cwtl mov inc dec scas fbstp (bad) mov mov cltd dec add mov stos lahf gs xchg pop mov mov jae inc les xchg pushf or out pop leave lock jge xlat imul imul jns hlt lea mov leave pshufw movsb fnstsw cs out xor push pop push clc out cmpsb movsb cwtl adc pusha fldenv ror lahf xchg ss push imul insb dec pop (bad) xor mov xchg xor lock (bad) (bad) cwtl inc call jecxz or lret cmp sbb shrl adc mov in out (bad) mov jae call inc scas scas sub jne rcr loop sub mov mov cli dec dec fdivs xchg fidivr icebp ror cmp mov adc mov sbb in or xchg mov aaa (bad) jl popf or jecxz dec ds addl inc stos jae and scas push dec mov (bad) icebp andl loop daa addr16 into xchg mov xchg (bad) sti fwait or cmp mov sbb fs xchg pop xchg lcall repnz sbb loop dec xchg cmp movsb push sub cmpb cmpsb mov xlat test push out jae xchg xchg scas adc imul dec out cmp cli ds cwtl push (bad) xor cmp add pop mov shrl in (bad) jae cmp mov mov scas cmp xchg (bad) mov xor (bad) loopne negb in lret lcall testb inc xor sub mov mov stos imul push xchg cwtl cmp data16 and (bad) adc jl jbe call dec or adc jge in aad dec add push xor mov aas pop push gs sub lods adc imul jns or dec and mov (bad) aad dec fstp test pop les fwait lret shlb sbb lods notl adc call std xchg clc push cwtl lret cmp in jno cmc mov push in pop ss jno sub in adc push lahf aad aam sub pushf cmp xor mov inc sub lret dec in pop lock cwtl sub dec gs das mov push add mov addr16 xor dec cmc inc adc pop jns ficompl movsb mov push pop inc out add lds xor mov jge adc push mov adc in cmp mov mov xchg mov push rol test inc stc stc testl sarl pop loopne (bad) mov cmp mov aad std cwtl add ret mov ds (bad) xchg push jne outsl sarb adc imul mov cmp sahf fwait dec inc shlb mov add ficoml into cmp sub pop in push inc std or sbb popf cli sbb out inc inc mov fsubl push (bad) mov and outsl sub pop jae push dec pop mov jp cltd (bad) xchg dec push mov and jecxz add xchg insb mov (bad) add subb lret pop and (bad) mov fnstsw lcall mov inc cmc cmc inc rclb cmp aad mov clc mov pop fmull int3 or mov mov sbb dec push mov mov xor and pop in cs and push dec push sub xchg xor ljmp loopne popa cld xlat add jl push dec imull sbb xchg adc stos sub sbb sbb sub push sti inc das jae imul stos (bad) mov lea in pop add or pop cli lods clc in or fdivs outsl mov adc mov mov test xchg add (bad) test add in cmc popa ret add popf lahf jbe xchg dec mov (bad) cmp mov sub xchg mov jb jl jno addl cli cmpsb xchg outsb xchg dec std xchg jo jno test inc ret inc or pop arpl dec push mov push xor cmpsl sub mov mov pop fiadd xchg pop (bad) mov inc les call ds nop dec aam lock jge mov lods xchg jg sub push cld insb mov mov jmp sbb call ss in sarb mov xchg je mov xchg (bad) dec lcall push mov sub pop ja xor xor rcrl lods fnstenv ret xor (bad) not and or pop cmp out cwtl or popf ret xchg scas jnp inc jg fistpll mov cmp or or outsb adc xchg test push test aaa xchg (bad) mov xchg fnstsw daa jbe rol sti push or es push add hlt sbb fsts in stos jl xchg pop mov add xlat dec mov fwait mov xlat xchg dec add std lcall cmp jp movsl fisttpl jb (bad) movsl push popa insb mov ret jnp aad roll push cld sub dec push sbb leave (bad) testb xchg (bad) lock adc imul enter call test iret push lret ds sahf dec (bad) mov sub xor adc in sbb js pop out aaa lret dec xchg das xor pop call mov mov add (bad) in push out es pop mov push out and add cmc (bad) lds cmp ret inc mov subb push dec sarl sahf test and cld rcll push mov (bad) jmp and je push pop rcll inc and sbb pop inc dec jge inc out cwtl mov pop or dec mov dec mov dec inc xchg push sub iret iret sbb push insb xchg jmp test mov int3 jmp fs pop das out in mov pop pop outsl add pop pushl or xchg (bad) sarl fisubl sub mov xchg pop xchg imul imul enter dec inc dec pop jle dec ror shlb push push outsb dec ljmp dec jno push push push out popf pop xor mov xchg test repnz sbb and fs mov out xor inc into mov daa or insl ret adc xchg add jecxz adc mov sub inc aad dec lret mull ret popa (bad) out daa arpl in jg mov cmc ds and idivb int mov mov or stos pop mov and sbb hlt sub mov imul jae dec pop pop (bad) sti fnstcw out pop cmp rclb inc lock xor cmpsl mov inc cmp shrl lods push cmp add addr16 jne,pt divb loopne xor cli cwtl enter sbb test add xlat enter and xchg aas push adc fwait mov pop adc test jge popl push mov add cli mov push js push adcl and ljmp (bad) cwtl jge (bad) mov stc push pop mov mov dec cmp mov mov imul loopne mov add cmc jo out arpl aas movsb rcrl imul jle (bad) aas cltd notb adc bound stos mov outsb adc es cld mov aad adc adc icebp pop push and mov (bad) ljmp (bad) lods adc or fldt lea (bad) ss (bad) rcll (bad) cmp sub in jno jg jmp hlt stos repz mov inc or int aaa rcll cmpsl lds xor (bad) mov lock sub imul add iret repz adc mov sub or push imulb inc sbb out push in xchg cmp test push pop cli in mov aas ljmp loopne ds and movntps adc jno (bad) jmp push cmpsl fwait (bad) ficomp orl aaa cld and sbb je fmull or jbe mov jbe (bad) stc icebp add xor and sub jne in cs and dec mov in push out mov hlt movsl inc mov mov jecxz or xchg push inc xorb imul je or test lcall insb jle sub insl pop and in cwtl push xchg ja lods lret stc push cld pushf insb fisubr or mov sub das jecxz sbb pop mov push sahf adc push lahf or push push mov stc jae dec lods movsl mov pop mov sub and xchg js cwtl (bad) clc push or dec jbe adc or test push jnp imul fisubrl cli call dec lret cli lea dec sub jbe out imul cmpsl aad stos mov mov push cmp mov and pusha dec jne,pn insb (bad) out push divb (bad) mov sbb push inc and jo xchg dec jmp cld mov data16 add add mov mov test dec inc and jnp in sbb mov xchg xor rorl popf mov fsubs mov mov jb adc dec add mov adc (bad) cs pop adc jmp cmpsb inc dec fsqrt clc imul adc or dec pop push ds cld mov data16 sti pop mov mov shlb inc enter repz adc pop pop push pusha ret leave call mov mov xlat sbb aaa dec into dec or pop in mov pusha outsl xchg jle daa subl sub xor sbb pop and mov pop jns add cmc fmull gs jmp or sahf xchg sub popf push js movsb rcl jg pop daa xchg xchg (bad) ret out into addr16 (bad) mov push push in test lahf scas js ss jbe loop in in icebp test sahf fisttp cltd xchg mov hlt inc or adc lock int je push push mov mov adc xchg ret jno aad inc xchg mov loop es xor xor addr16 test and sbb push dec jo scas mov mov xchg mov sbb mov sbb add jae mov shr jbe scas inc adc dec (bad) mov lret mull lcall fldenv popa in cld push adc xor inc jp or pop dec fucomip xor fidivr or adc aam jg push push mov or pop mov idivl sbb pop sbb push adc sbb jnp mov mov dec or jo cltd sub scas lds fidiv ds cmp lret or outsl daa mov mov hlt mov int adc mov mov mov aaa cmpsl addr16 insl enter jns pop adc ljmp cmp mov cmp jecxz lods xchg gs jp fwait and pop mov in jne test (bad) decl clc mov xchg sub iret mov gs movsl inc push pop cli pop xchg push pushf lock jb neg jb imul mov ss adc xchg sbb (bad) cmpsl cmp test pop sti xchg (bad) ja lods mov or sub jg push pop sbb js call adc lahf xchg (bad) jmp dec mov andl ss adc dec mov cwtl dec dec push lds and xchg mov pop pop loopne jae jb cs stos push pop jmp dec jnp orl pop in nop push (bad) stos and or in fdivs xor imul adc ret push sub in and (bad) shrl pop cmp push rorl fldl and jne (bad) lret (bad) push testb insl ss fsubs idivb pushf mov lods jno xchg mov sub shll xchg sbb and push fbld out cld (bad) stos fbstp (bad) shl (bad) xchg jae out dec xchg xchg pusha pop fsubs xor cs push fsubl pop popa je int in mov mov pop cmp mov adc dec movsl push test (bad) jp sub sbb or in push call int lds pop outsb dec lock stos mov push xor sub xor fdivr cmpsb movsl daa das inc mov call jmp pop push jbe pop adc lcall das jne fldcw nop lds gs push and stc cmc sbb jns loopne mov scas cwtl arpl adc bnd adc mov xchg les cmp ja fcomi jne add loope pop jl lret mov ficoml cmp out mov jne test cmp or stos jne (bad) decb sti fsts (bad) in ljmp push lods out or mov cld mov adc mov jmp (bad) in (bad) loopne repnz cli xchg xor pop mov dec xchg mov dec or xchg add push mov jp je pop sahf xor pop idivb pop push repnz mov or fwait adc xor shrl sub or mov leave loop hlt and cwtl dec push pop sub (bad) into leave pusha ljmp in and push pop pushl inc push ret jo sub xchg adc ja loop cmc (bad) test or hlt daa xchg pop out jl iret bound fdivrs inc pop std ja add pop xchg mov in jge dec jmp cmp mov daa call scas mov pop sbb push pop das dec cmpsl push imul stos add xor jno jp sbbb and iret (bad) neg (bad) mov shl popf xchg pop jg or xor push imul in push cmp or cltd in sbb test addr16 enter pop or jo pop add loop jae sub ljmp sub (bad) mov inc cmp test mov cmp mov xchg lods gs sub lret and rol in rcrl pop inc ds int3 mov and nop mov imul (bad) scas notl clc mov adc into movsb mov in or js loopne or mov notl loopne lret mov sarb arpl dec in fistl jmp iret mov dec es lahf sub outsb fwait loop fldl and cmp cmp repnz adc lret fs and cmc aam arpl jb movsb clc test es cmp adc and jnp mov int out std push lods pop sub ficomp lea aas pusha shlb pop lret ret dec push mov jno loopne movsb into push lret outsl jns dec push push int in xchg outsl insb loop xlat jnp jge mov cld fldenv aam (bad) mov test push add sub int3 sbb dec or movsb shll cmpsb pop xchg mov into and movsl jl fdivs mov mov pop dec pop outsl cmp ja and push outsl ficompl movsl add push (bad) int cmpsl bound push inc xor sub cmp insl lea xchg pushf mov mov movsb sub pop sbb icebp stc and (bad) in (bad) push sbb pop adc push cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl lds clc outsl xchg jge fiaddl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push jbe or test mov mov fdivs lea push arpl xchg inc lea ds negl neg add leave or add rol or mov pop xor cmp decl adc push and leave dec push mov hlt lahf cmp rcrb pop pop pop mov pop and dec or pushf sbb fcompl xchg mov movsl shll dec mov sbb sarb into xlat pop mov push in or xchg or scas pop add xor call jno test xor jmp mov lcall push popf and ficoml ds add adc lahf push mov imul jne sbb ficom sti cli out (bad) mov or and xchg mov loop mov push aad cld mov aad mov pop mov arpl dec (bad) cli adc push mov (bad) or pop enter xchg sub mov ret sbb sbb or outsb in push xor push xchg dec mov fsubs ficomp ss pop daa movsb lahf and sub hlt jbe lret sahf call dec in mov xchg ret adc mov mov mov (bad) push jge mov cmp (bad) loop ja pop andb loop jge jne xor (bad) (bad) jne push fsubl ret adc mov in xchg frstor ret leave rclb cmc lret faddl adc sub inc pop mov pop ljmp pop push les push add push adc lods dec mov mov mov scas test push jb in jae dec dec int pop aam sub aaa notb outsl dec cmp mov mov mov cs jp inc sbb lock loop pop xchg (bad) pop push sarl test scas add push in sub in in xor addb dec mov and mov jmp adc in cmpsl jl not push pop ja adcl lcall out out push mov cld fistp fistpl (bad) dec mov (bad) xor js shr sub jne fwait aam jbe mov out in push adc clc inc cmp cmc ja fs jmp shufps cmp stos mov add les mov dec ss cli bound dec loope mov push xchg js shlb incb inc xor jp arpl fucomi xor adc mov pop jbe test mov popf xchg pushf rol lahf mov xor sub pop pop mov mov xchg mov mov fwait lret push sbb or mov push inc ljmp ds (bad) lret dec mov add jno push insl lds pop lahf aas out sbb cmp xchg jle,pt add jns mov icebp sub xchg push push mov std lods call aas ja (bad) pushf inc je lds jo xor fs add xchg xchg mov out mov sar xchg jnp xchg lcall push jle push ret cmpsb ret xchg bound cmp pop xchg popa dec mov or ret (bad) pop lds dec js jl outsl stos insb loop aad mov jecxz outsl int jb pop (bad) clc and push arpl jp mov push xchg push xor mov scas hlt loope outsb mov adc jle mov mov sbb mov jg fcompl aad sahf iret push ret dec cld sub fs xchg call adc jmp (bad) sub sbb add sbb sbb adc jb push and imul jne or xor and div loop imul inc test in cmp add (bad) loopne lahf imul mov mov arpl std and popf jo jae jnp pop mov push mov mov test lret jmp cmp outsb sub xor call shrl (bad) mov pop add sub pop mov mov pop rcrb subb (bad) push rcrb clc or test lea jle movsb out inc adc push in fcoml movsb and pop rorl ret mov adc in xor push mov imul out lahf (bad) xor aad les stc loop fiadd cmp test fisttpll loope sub cmp and cmc shrl dec xchg or fidiv mov or (bad) sub push in faddl outsb mov icebp mov sub sahf lock mov dec cmc sbb loop mov and jbe mov (bad) loop and loopw cmp adc mov stos fsub cli ret mov or dec leave lret push sbb mov mov test xor xorl jmp imul push dec add (bad) int3 xchg sub mov inc out mov sbb pminsw js mov mov sarl adc popf push push pop aaa push and daa sub add shll sbb enter fwait mov inc adc sti inc pop pop in or mov iret cmp cmp test inc inc lods push ja xchg fcoms push aad aaa jno and pushf and xchg and xor mov mov pop ljmp mov lods xchg xor scas fldt jmp jne sub mov insl inc push (bad) adc insb nop imul xchg stc icebp mov nop shr into cmc call das ss call mov inc clc dec in pop ss jno movsl or (bad) push or dec jmp lahf or mov pop or in and xchg (bad) mov mov js flds (bad) push les es jnp rorl insb ret and cli pop sub outsb and sub lret sbb rep sub cmp lcall (bad) cld xchg repz inc xchg mov popf out popf push xsha256 cmpsb adc sbb rcr xchg xchg nop in iret xor mov cmp xchg fisttpl mov sbb xchg (bad) rcrl out jg pusha out das or mov gs out push ljmp push xchg or add cli loopne jno icebp sahf addr16 or das sbb mov pop mov (bad) lret and sti flds mov add dec xor lods in sub jle insl das push divl insb cmp add and mov pop orl jb sub int pop scas lret sbb lods inc sbb mov bound add lods push sub sub enter int3 and push xor mov cmp jle daa ret jne out gs icebp insl loopne adc mov sar cli push dec lret push dec push pop ja xchg lea adc and pusha inc andl jp push divl pop (bad) xor pusha xchg mov add adc iret pop movsl xchg rcll inc mov or mov pop push popa test repz mov cltd daa mov mov xor clc and mov mov scas mov mov cmp push test push adc cmp dec (bad) (bad) lret cwtl aas negb clc dec out mov insl in push mov lret mov mov and daa mov in data16 lcall sub jno ud1 popf rcr popa pop loope fbld pop je mov aam fbstp pop insl jge test or out xchg (bad) dec js lahf (bad) push (bad) scas xchg pop out push push pushf les fcomps mov bnd inc pop and xchg cmpl cld dec xor add pop push das popf enter and into popf dec mov pop add pop pop sub jge ret cs inc cmp fcmovbe scas push xor je sub mov add inc repnz ljmp insl frstor aas dec add test lret pop movl lret negb cmp add jne xor xchg xor and inc mov ljmp rorb and mov lahf test adc (bad) dec push mov stos scas push test divl mov inc xor rcll (bad) sahf dec (bad) adc dec push cld (bad) ficompl jmp mov and inc jno popf negb pushf pop mov call movl xchg loope es adc (bad) aaa imul dec push clc add xor inc rorb scas sbb inc dec inc mov jbe leave sti xor daa aam dec sbb dec jmp ljmp ja add lock mov xchg fisttp fldcw test stc mov lods jbe mov dec pop ljmp push scas adc jno mov inc mov repnz fild add sbbl mov loop sub roll imul fsubrs jne (bad) (bad) mov int3 outsb scas (bad) loop adc push push roll stos std mov xchg data16 sbb es out sbb mov inc mov inc loope cmp xchg into and imul jle dec cs adc cmp fmuls stos ljmp push int3 popa ret test xchg mov add fisttpll mov jno mov loop jp int movsb jl hlt dec cli cmpsl add out dec push fwait pop cld xchg mov pop shlb inc cltd pop dec add cmp orl mov pop sub mov test hlt pop test roll lods cmp cmp ret inc sbb xchg dec push sbb pop pusha and sbb pop lcall ds xor loopne idiv pop insl sbb popf imul adcl out hlt xchg pop jle dec ds js mov xor sar fdivrl jae push sbb jl andl ret mov pop dec ljmp jb add inc xchg sub insl aam lcall fisubr fdivs mov in mov mov add fs cltd (bad) ss (bad) adc adc jne,pn sti cmp mov cwtl int3 aas les frstor repnz cmp jbe mov xchg mov in decl mov into sahf insb jmp mov pusha pop dec push adc icebp enter popa ret dec imul and xor mov xor aas push jno shlb fildl push adc mov dec (bad) push arpl (bad) mov sbb adc cmp dec cmp sahf sub fwait leave cmp add test and inc (bad) adc js pusha sti xchg sub adc cmp and scas test jne adc sbb sub jne shrb (bad) cmc mov sahf test mov xor mov aad int3 lahf mov aas inc add clc hlt (bad) lock repnz and leave jns xorl std lods and icebp cmp sbb movsl (bad) and jp in frstor dec sahf or nop sbb dec mov scas pushf push or sbb inc push mov dec mov sbb jg aam imul fisubr bndldx jge and sbb idivb adc movsl or enter push std mov mov push xlat push jg test push inc fimul daa mov mov add das cmp inc xchg bound in loope in mov jae xchg test mov hlt pushf mov inc mov mov xchg adc jae int out dec insb movsl iret pop rcll jp cld scas jle mov popf and cltd out jo mov add inc movsl push movsl and fldl2e icebp jge inc mov adc dec stc rclb testl mov fsubr add or adc and shrb adc sbb adc push cmp mov dec lea dec shrl push mov repnz insb ret popa xchg xchg xlat outsl movsb sbb xor push ja mov and clc jne xchg mov inc jg inc sbb cwtl dec popf out pushf pop lahf cmc mov arpl mov jbe sub cmp jns push punpckldq lea std mov gs add mov rcrl adc iret es test push loop add lods inc xchg cwtl sub (bad) jb dec fdivr lods js xor pop cld out iret pop test adc mov (bad) lahf in lret imul jle sub xor and iret jbe dec mov lahf insb rorl repnz adc pop pop xor lock jecxz gs pop mov mov lea loopne and xchg cwtl inc subb jnp sub xchg pop or mov push mov sub adc in xor push in ja into mov lods add movsb lea arpl cmpsb loopne outsl xchg int jg (bad) add rolb push std pop inc lret sbb push mov xchg in lcall add dec into icebp and mov inc loopne fs or xor pop dec dec add xchg das lock imul out fldt mov into clc dec das int3 xor mov ljmp aaa out std daa aad gs dec je pop mov lods xor outsl mov hlt dec movsb mov shl (bad) fistpl mov pop push icebp xchg xor ss inc dec ret and lret push jg (bad) stos mov cmp scas mov imul xorb inc adc cmpsl and add insb call sub sub repnz lock ljmp cltd adc jmp adc jbe mov xchg cli lret mov mov pop sti adc nop push scas loope imul int jns (bad) or or test loopne call and or aaa aas je xchg (bad) dec movsb jecxz jo cli sub sbb hlt mov fidivl into mov mov (bad) sub lods jp and fiadd rcll sahf push ficomp sub dec cld dec int jae mov cmpsb test ja sahf fwait sub pop cli mov imul xor insl or mov jns ja mov icebp cld sbb andl lods sar cmpl sub sbb mov shrb imul aaa push notb pop popf or pop sarb sub add sahf movsl xchg xchg test sbb ja jecxz jecxz inc jb stos mov nop mov lcall insb popl rolb mov push stos nop pop jae lods loope lret rcr push dec enter sub mov pop es leave jbe dec divl (bad) jns sbb sti and movsl lcall lahf negb mov movsb roll push mov (bad) jnp or jecxz (bad) les mov dec fs aam aam push xchg idivl dec cwtl pushf mov cwtl sub cmc testb dec xor sub lcall push cmp dec out ret pusha mov out lea push xchg lret std cmp pop in mov cmp xchg dec notb test fild pop sarl and int int enter xlat jecxz repz cmpsb pop jg mov test mov test mov mov ds dec pop cld push mov sub fist mov sub sub lock lods jns mov xchg inc cmp mov fcoms push imul sub push or loop pop lcall into into scas outsl repnz stos ret or pop lcall adc sub xor sbb adc sub xchg lret dec das sbb or nop repnz fstpl fdivrs movsl scas xchg loope xor fcmovbe mov je pop dec cwtl push test cmp cltd mov out pop xor inc xchg and xor cmp push in stos lods or hlt roll inc ss mov sbb xor cmp icebp lods inc lret pop and pop les js xchg nop mov xchg loope adc in cs push fsts sub sub ror ds xchg push movsl mov and cmp xchg (bad) jo xchg or fs inc mov lcall pop jmp pusha test push adc mov mov mov add aad sbb es adc out sub hlt dec mov dec loopne,pn in stos test xor mov imulb inc test rorl (bad) rcrl out jp jne shr pop push pushf mov testl cmp inc jecxz and push mov cmp sahf sub clc mov lret mov insl inc stos (bad) cltd pop pop lds outsb (bad) (bad) out (bad) push int3 aas in stos inc sub jb mov dec arpl ret (bad) (bad) jg add hlt jl stos jae (bad) fsubrl movsb cmc mov pop shrb js jl pop arpl loope jl mov cwtl and adc outsl or out inc pop mov inc ret int addr16 js push in jbe stos enter push mov fs mov mov xor je (bad) push popf test or jo imul pusha or stos jmp mov jb enter insb dec call adc outsb out adc mov jl sbb mov lret jl push ret in jle leave jl xor jns movsl dec add inc test cmc cltd or xor frstor sbb test rcrb xchg jg aas cmc mov and mov dec mov loop adc jnp,pt imul xor and mov gs movmskps lcall jnp stc xor inc loope leave and push clc aaa sbb pushf sub insb in inc packsswb in notl dec mov leave push aas insb ret mov or js xor enter jb mov xor sbb mov sahf mov (bad) dec xchg sbb and cltd ret inc pop rolb lret (bad) cld rclb bswap fisttpll cmp push stos stc shrl out leave rcrb xchg int mov push in (bad) cmp imull mov jno imul leave push add pop pop ficom inc out dec jp call mov jle jmp shrb mov popa fmull sbb data16 cmp (bad) pop lret stos xchg pop dec sbb or inc enter sbb outsl or xor push lret add mov in mov sbbb mov xchg xchg mov insb mov mov gs or mov xor add dec sub icebp insl ja (bad) cmc and insb dec out push sbb xor lcall out sahf out daa outsl push hlt aas mov mov add xor (bad) cmpsl data16 cmpsb pop inc xorb mov decl and mov ss mov jmp test lds mov sbb adc cmp ret adc cmp movsl ja aad (bad) xor xor mov pusha ja ret jbe dec outsb loopne sbb xchg cmp imul (bad) sbb push mov jp mov inc rcr dec inc test pushf loop iret movsb int3 xchg mov pop ss add jecxz fidiv neg fucomp nop mov sahf repz cmp (bad) sti push jns push or repz andl cld lea test or add pop xor mov pop cmpsb movsb push dec testl xchg je pushf orl mov push inc aad jp lahf dec (bad) push push and and mov aaa mov or push gs xor mov jl mov push fwait xchg (bad) stos adc dec xchg xor (bad) push dec fwait mov add cmpb shrb enter rol mov inc out cmp cmpsl sbb mov imul popa das ss adc scas mov stc dec push mov jmp dec pushf mov lock imul adc (bad) ja imul xchg enter scas dec cli aas mov movsb inc add outsb std push adc (bad) jl ss push outsb lea aaa sbb lea sbb lods xchg sub fidivl popf dec pop or and add js pop and and pop out sti inc cmpsb or cltd jl mov pop out sbb add fnstenv ds cmpsl xor out nop sbb int3 mov pop aas nop adc and pushf add es stos mov adc outsl or in dec sub xor sub icebp mov inc imul aam pop fistl dec mov cmc fsubrs pop jp or inc or je repz xchg rdpmc inc (bad) iret aad cwtl and adc lock inc push test mov pop sbbl out push shrb stos xchg sbb out nop fimull sbb add into fsubr cmp adc movq jns out mov rol xchg sbb test pop jecxz pushf mov cmc push adc jl or pop jg cmc call int lods add repz in pop sbb lds sbb jnp or or mov dec cmp and xlat jne lds fdivs cmp popf mov outsl mov fistpll popf or call cmp dec xor jp (bad) mov xchg fsts adc adc mov adc (bad) or jle loope add addr16 xor mov or inc ret leave xchg data16 xchg movsb push xchg xor xor adc push fild insb mov adc outsb mov xchg dec scas loope out xor mov add imul lea cmp out lods daa dec rclb sbb in sldt (bad) jae jecxz in out pop dec or mov jmp jb pop hlt jno and enter mov push enter push fwait mov cltd imul inc (bad) cmpsb push fs cmp or dec cmp and dec lea sub adc arpl les aad lcall pop xor push fsts (bad) sub cmpsb loopne pushf xchg into aam lahf mov scas cmp imul (bad) into pop inc add imul mov data16 mov pop xor outsl imul pusha clc enter jecxz xor jmp adc sbb dec loop dec rcr adc dec xor dec addr16 xchg adc test mov jb das in je pusha sub push pop dec or mov int3 pop mov pop mov cmpsl ljmp push mov jne mov loop dec rcrb inc lahf gs outsb cwtl mov mov cmpsl stos push test aas std jns (bad) xor cmp (bad) shlb out mov repz loopne and sub sbb lock adc aam leave imul pop lcall movsb cli lods push and or (bad) push cmpsl pop mov lea push stc pop cmpsb out cmp mov in sarb jp (bad) and and dec jo loop mov movsb (bad) or jbe shrb fnstsw xchg cltd int3 in nop mov aam cmp in dec cld dec out std sbb dec fsubr mov hlt pusha into outsb jnp idivl dec clc fwait cmpxchg mov incl cs iret mov dec outsb imul or xor or pop stos ljmp int3 jge xchg push push repnz icebp lcall popl xor cli mov popf sub adc pop cmp popa mov arpl inc jne into in (bad) ds dec and jecxz loope push inc or leave adc cli mov jae lret pop test sub test sbb call or jb loop cwtl jmp mov xchg xor aas (bad) jne pop (bad) fidivl mov xor inc repnz jne (bad) in adc or push mov sbb push outsb mov mov jb jge rolb outsl test cmp rcr stc movb outsl lcall adc imul mov cld mov mov xor mov mov pop loopne out test inc imul or or sahf or lods inc inc push mov adcl sub cmp fstl pop mov sahf frstor jbe out jmp cli ds mov dec sti pop (bad) and jp (bad) jl mov adc ss rcr aaa xor jo push (bad) fist rol sti insb xchg sarl lods mov inc pop inc jl rolb pop sub push loopne addb or insb adc cli stos push mov fildll and inc sbb in lret xchg leave in mov push std ficoml mov scas mov dec jmp dec dec cli dec das cltd fcomi bound pop mov adc pop daa xchg mov loope imul clc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add pop sub add iret sub add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg insl jae mov fistpl mov mov xlat imul fcmovne ss mov (bad) sti clc (bad) sbb add sbb add test add jle movsl stos pop (bad) nop xor clc inc lret pop sbbl push xchg in sarb push push je mov xor inc stos adc or dec sbb insl cmpsl push hlt les xchg sahf iret iret jl jge in lahf repz push call mov mov int3 xor cmp and push movsl inc jg leave test rclb jmp outsl jae xchg mov arpl pop sub push push (bad) push and sub insb sbb lahf sub mov mov mov xor adc mov clc pop fiaddl sbb dec push or insl add mov out xchg mov mov stc push mov (bad) testl lahf subl adc cmp fadd inc jmp fstl icebp fsubp pop ja sbb push pop repnz sahf flds out cmp cmp pop mov cmp mov imul cmpsb in test jmp lods or cmp repz xor out outsl push pop mov enter jmp sbb js and nop sub das jp test adc inc hlt inc add fiadd mov mov pop fist lock mov cmovb pop adc dec jo mov in jmp sbb lods push mov int3 pop cmp int push int3 jmp in push or mov lret fiadd pop ret cmpsb into pop popa push xor xlat sub ret (bad) jb and xchg stos (bad) sbb add repnz jae inc push ds out sub lret cmp sbb or hlt test inc pop cwtl leave and jl cmp getsec push scas call repnz das dec pusha jb ret xlat cmc jp outsl inc mov jb sub mov or fwait adc fs ficom adc mov sbb addr16 mov pushf aad inc (bad) push leave loop cmp pop leave test pop push fincstp outsl je pop xor mov test scas and clc or mov popa inc xchg lcall jmp mov in daa mov push imul pop or jmp scas leave fwait mov fistl je insl xchg mov mov cwtl mov shrl mov rorl xchg mov or (bad) dec lock stos mov ja mov pusha sub imul sbb mov adc int3 push and cmp test cmp ffree in pop xchg cld jle rcr dec insl cmp (bad) xchg leave adc jecxz sbb push push test adc cmp fisttp insb cmp popf jns (bad) push inc mov aam testb arpl out (bad) insl es push push push cmc fwait lods lds sti cmc xor sub cli xor fwait add pop cltd jno test push mov imul mov cs out pop inc sbb adc mov cmp add popf or and inc (bad) jns aas lea add shl ucomiss loopne call inc xchg rcrb or cmp (bad) call mov aad fsub mov scas inc lock insb cmpsb sbb inc (bad) pop lahf sbb pop sbb (bad) xor push in mov addl dec or cmp ret scas out lock jae ffree dec nop pop cmp adc or sbb push mov mov xor xchg mov dec mov fs push or jae mov ljmp clc fidivrl and aas push notb mov aas aaa das int mov sti call add mov fcoms insb push add mov fdivs and xchg or gs outsb cli int3 xorl faddl aas sbb jae mov xchg lret push test imul les dec lcall lret jmp mov adc mov mov loopne es jae out cs inc ficoml cmp icebp xchg imul inc push mov in mov dec nop dec ret inc fsubr int inc adc xchg call bsr loopne je (bad) jo jmp adc rcl loope aam call mov or imul (bad) std jne mov cmp dec inc bound inc (bad) cmp jmp enter cmp fnstcw sahf outsb sti xchg sbb sbb lods and mov fnop add in scas aas das add sbb fsts fadd sbb and jae,pn js in repnz pop popf push aas push loop jno sub cmc test (bad) jb cmp cmp js retw sbb and inc push adc lret sub jge jmp pop frstor insl push js mov push jno jmp jns insb mov fildl mov lahf mov dec xor push ret cld test cmp pop pop jns or and fsubrs aam or pop push sbb int ja ret mov arpl push fidivrl cmpsb (bad) mov movsb popa mov sub dec cli mov pop cmpsb les es stos scas mov sbb add mov stos pusha pop fdiv mov xor pop xor loope icebp insl fwait mov inc push arpl repz ss movsb js,pt xor xchg je addr16 out mov sbb xchg pop rcrb addr16 adc leave mov push enter add js aas mov imul jno faddp popl push mov pop (bad) dec adc adc xchg imul lock push cld out (bad) sbb (bad) jecxz inc xor (bad) fnop test sub lret repz and sbb mov mov jnp and push jno adcl and jbe mov ljmp das outsl pop mov sub lea ja xchg sbb daa cmc mov int3 (bad) push push scas pop jne inc movb push and test xchg cmpsl outsb cmp sbb fdivp xchg sub shl and stos mov stos add dec int gs mov ds outsb dec inc mov pop jne mov scas cmp jecxz jae icebp adc fiaddl je movsb pop add sbb dec pop aaa add inc mov incl xchg outsl lds xchg test and adcl popf lea movsb cld dec push and ret nop jbe pop xor ret out and mov xchg push dec adc fucomip (bad) pusha stos inc inc pop add frstor adc dec add imul mov push dec jmp mov pop jle xchg pop outsb jb and push mov in daa ret jp sbb sub cld in repnz sub scas add pop bound ret (bad) jne testb mov into push mov aaa sub mov jae ret mov sbb lea lret popf lret mov mov cmp add mov in aaa add add sahf add mov dec inc lea inc fstpl in and shufps jns iret cmpsb movb add adc popa mov test out jge aas add inc fcomip dec negb fcmovu cmc int or jae outsb stos rcrl (bad) adc mov or out test in bnd repnz pop jg jp lcall cltd mov xor adc int nop push mov mov ds or lcall mov fisubr and aad inc test inc xchg aaa mov adc outsb lcall into sbb push mov inc test xlat dec push push cmpsl leave xchg push (bad) or ret adc sbb jp leave aaa mov outsb test out out xor push mov sbb jne negb ljmp xlat ljmp daa pop xchg xchg dec (bad) into ss mov sub push jl lahf mov xchg lods jo pop dec fs or movsb (bad) leave into call sub sbb leave (bad) pop jmp fmull ret lahf (bad) sbb add mov stc lds out adc out mov and shlb mov xor jns or les cwtl cmp test xor daa inc jl in out mov lret jne loopne dec xor mov stc sub aas ds pop pop shrl pop xor int pop cli scas add movsb les sub lea sub aas add fcmove shl jge (bad) jno (bad) fistpll shrl mov std loopne aas sbb ds xor xor mov fistpl lret lods pop clc movsl jb adc (bad) cmp cltd sbb rorl mov push cltd addr16 xchg in mov rorb out outsb lcall notb mov mulb shr jnp sub cmpsb mov sbb add pushf cmp inc jo das clc push pop mov pop gs (bad) or add cmp iret cs cmpsl cmp or mov imul xchg fldl mov in mov adc jg jno adc dec mov hlt cld (bad) (bad) sub xchg adc cltd lock jbe xchg cmp leave and add stos sbb loope push (bad) pop add scas jb loopne cmovne xchg push add (bad) xlat inc push mov out mov popa xchg rcl dec pop xor cmp cmp push mov jl sub mov pushf adc fldl cld mov or xor jle mov popf shrl arpl mov xchg in jg push sarb les fdivrl rolb fcompl mov mov stos pop pushf mov jmp lea (bad) fnsave inc loopne pop (bad) hlt inc in or pop scas fstpl and loope sub nop xchg lretw pop sub mov imul jns pusha fsts cld push push loope loope call ss (bad) inc pop jmp scas aam insb lock and push cli sbb and into aad and push xchg xchg outsb mov test fsubrl mov mov into pop xor (bad) xor add into mov mov cmp mov aaa pop mov mull dec std dec pop insl fidivrl ds lahf and mov adc (bad) fs cmp int3 icebp shlb add push inc mov popa cltd mov dec scas and scas mov inc (bad) xchg sub or sbb jmp cmpsl adc out sbb movw ljmp fimull divl hlt movnti scas add sub rol mov cmp (bad) jge mov fs repnz sub add mov push dec and scas sahf mov shr ja rclb sahf push add lods inc in mov nop lea xor aad sahf inc pusha into lret or mov push jl pop pusha bound mov mov nop out in sub xor imul jp fwait iret ficomp mov push cmp ret mov mov ljmp inc arpl insb sub mov mov add pop jb mov push inc stos lret sub pop push mov icebp arpl pop cmp pop or mov aad fs into cmp push sub pop pop je or or jns lahf jg inc fistpll xor pop push mov ret insb dec dec pop loope adc rcrb lahf mov cmp lock fisubrl repnz jb xchg mov ss int jle fdivl sub fdivr or (bad) mov popf pop (bad) ds or push and jge scas cltd jge les jmp push nop or inc sub lahf ret mov mov in rcrl sub ja adc mov popa sub ja mov mov push sbb mov and int3 dec jbe andb pop mov push xor sub cmc nop cmp fldln2 ljmp mov xor and fucomi arpl dec xor adc lock lds mov pop xchg or dec jl cmp (bad) ja fadds push aas mov call pop lea dec call mov mov xchg add push pop sub les movsb sbb jl jge adc push add (bad) push fucom mov sbb (bad) sti arpl fldcw shl rolb je pushl ret mov pop pop dec faddl cmpsb inc add cld adc std or or std push bound clc mov int push iret jb jns xor cmpsl repz mov push mov incb outsl lods push ja xor (bad) arpl jne popf loope and xchg sbb int movsb xchg push mov aas xchg xchg cltd cmp mov adc cli popa jb or mov xchg cs cwtl mov add xchg das xor xor scas outsl mov int bound jg sub adc lea sbb test inc jns cmp add ds nop in sub jbe xlat pop nop jle mov jae (bad) cmp adc add int movl cmc dec push lcall pop movsb inc (bad) cmp scas data16 mov mov popa jmp ss jl out push out add (bad) lahf and xchg (bad) fldenv (bad) jp sbb outsb cmp pop jle sarb pop sbb out sub int3 (bad) lret mov and scas jne ljmp push add xor add js pop gs xchg xchg mov sbb mov jle adc ret ljmp adc in push aas mov xorl rclb adc into pop push inc xor (bad) fbld bswap out js xor lahf insb decb inc repz add xor cmp cmpsl jmp push lret sub sbb push cltd jmp sub lahf dec or and lret outsl jl rcll pop xor ret jbe fiaddl loopne push sbb std cmp pop ret jp xor fs lret pop shrl sub sarl dec or xor scas xchg pop xchg sahf xor (bad) fcoms push dec into adc in pop xchg sti enter mul jne pop add insl popa in int3 scas mov aam js xor mov scas outsb cmp and xlat pop in inc push dec scas sbbl cmp aad jne mov mov mov imul imul jmp cmp ja add jle pop clc dec mov mov mov imul sub mov cwtl icebp and mov mov pop (bad) sub ret pop in mov iret inc fwait loopne ret mov mov ja clc ret mov lahf lods addr16 frstor ret movsl gs ljmp das mov xor xchg cwtl xchg push xchg int aam mov orl ficoml mov or sub cld mov sbb dec push adc push pusha cmc ror sbb (bad) bound movsb leave push and push ret movsb in pop add pop std loope adc imul faddl ss push pop jg in shrb cli add xchg jno lds mov mov test jae dec call clc or lcall xor mov hlt cmc sarb fistpll dec test jle mov in cmc jge (bad) sub jge enter or dec and inc mov and pop or mov sbb (bad) push jb js,pt (bad) notb push xchg jnp adc add cmp add mov adc inc add test and fimull test fs dec repnz xchg lcall add push inc aas jb jb je jnp in add mov scas std stos leave mov das lods (bad) mov push push and push mov les mov stos (bad) mov mov or pop xchg mov daa fcmovnbe xchg sbb lock mov mov loope and dec or jl inc lods push popa pop mov notl clc stc cltd mov dec jmp bound inc pop dec mov xor dec jns mov icebp dec rolb mov push (bad) jp (bad) mov fdiv lock imul push ja cmp inc pop jnp cwtl xchg xchg or cmp inc pop in dec sbb mov lock cmpsb aas sub adc xchg (bad) (bad) cwtl call jae mov pop xor in mov std loopne jmp fild xchg push les cmp mov sub mov adc jno or mov leave divb (bad) in fcoms mov notl mov and rorl dec xchg mov je mov insl push cmp mov jp daa xchg pop jno cld ret orl decb pop mov jo mov stc xlat loopne sahf lds arpl ret push adc sbb add add or js fbstp daa std xchg lods pop adc dec fs push lock insb lods in cmp mov jmp mov pop stc (bad) sub pop and sbb cmp or xlat out fucomi pop adc dec or cmp or std add cltd sbb iret jecxz testb loopne fnstcw mov xchg ja lret adc xchg inc inc hlt jnp xrelease pop and inc add icebp pusha cmc dec push inc clc insl jbe shl push mov cmp hlt push mov xchg push adc add xchg xor or cmpsl outsl pusha sbb arpl mov dec mov stc (bad) repz (bad) out call jmp lcall pop jne cmp iret rorl jmp xchg loope and js xor jge rcrb std cmp out movb les xor mov xchg dec xchg and add and xchg out or xor adc outsb add sti xor jmp test daa mov pusha sub nop mov into and pop mov mov enter je inc inc add xchg push xlat xlat outsb jecxz daa jb mov loope mov dec mov sahf push rclb sbb in xor adc mov das cmpsb andl fsubrl cmc jbe lds aad jle rorb adc mov (bad) fisttpll aad inc mov xchg sub addb mov mov pusha push sub adc pminub mov dec cmp bound test arpl push fstpt cli dec push adc mov ljmp cld cmp test (bad) addr16 push loope push fwait mov in cmp cmpsl into sbb and push xor sub push jns mov and scas sbb jnp sahf loope cli mov nop add lcall cli add outsl mov mov sbb imul roll sub pusha jno push add dec or inc push cmp push mov dec inc add dec sti addr16 dec xor out pop jg mov pop dec es cmp pop xor push fist rclb xchg pop mov cli (bad) sub decl int3 daa push push popf es sahf gs cmp mov dec jne (bad) jo mov and (bad) xor (bad) mov push jp lret or push ds mov out sub dec iret push inc sbb jg cltd (bad) addr16 mov pop ret xlat sbb jne int jle out add pop push popf adc adc js cmp lcall out imul dec jecxz sarb push outsl xor fsubs sahf dec leave lret aas lods mov je xor into addr16 mov lods icebp or outsb lcall pop sub jae (bad) shr dec jno mov jle imul in cmp stc ficompl rcrl inc pop aas popa jp jecxz rcrb add pop fistpll div rclb (bad) movsl loop loop jbe je mov cmp pop mov pop outsb gs cli (bad) pop pop inc pop test cmp outsb xchg jns ret pop pop jns lods jmp fiaddl (bad) jecxz mov mov push jmp (bad) (bad) fnstcw nop xchg dec jns jnp fsts subl sbb outsl scas push sub jno arpl pxor or inc sbb int (bad) iret and out sbbl out (bad) int lods in ljmp jmp add adc or ret clc dec ljmp pop fldcw test (bad) mov cli clc sub imul sub (bad) mov adc mov enter or push mov and jle and xor cwtl add push push or sub icebp pop fisubrl rorl mov movsl stos inc xchg pop pop xchg mov mov outsb push mov pop fwait dec mov int3 or pushf int dec adc aam mov fs mov inc out fnsave add cmpsb loope fdivs xchg jns mov xchg or push inc in xchg add (bad) pop inc bound and int3 add xchg cwtl aas sub lds xchg mov sti popa inc cld cmp xor push push push cs jge sbb stc fstps andl mov pop dec into jae xchg test cmp sar mov push add push mov dec push out or in sbb js stc xlat fsub xchg clc std mov and fisttpl sahf xchg push push lret inc (bad) lahf in adc jbe stos aad iret cs mov sti jnp cmp outsl add jne xor adc mov jl repnz ret es xchg push stc pop mov ljmp adc aas sub or fsts inc lret sub xchg or xor jo daa or pop cmp xchg push jecxz jno mov push mov ljmp pop idivb mov pop pop push and add sbb iret or aam or pushf scas roll movsb and xor mov rcrb adc inc pop ja bound push into or jl fsubrp fisttpll sbb dec jmp lret jl xchg notl cmp data16 test es adc sbbb xlat adc insb push sub or jb xchg jle mov jp repnz and lods cmp mov push xor jmp fild cli sbb ljmp popa mov in pop jp jae jb insl ja fs push add dec shll mov xlat adc inc std mov imul aad jbe stos out jmp fcomps push pop and jmp cs sbb cmp jl push enter xlat add loopne xchg xchg into cld js jo int clc cwtl rcrb mov jb in pop ret add pushf xchg iret cmpl and pop out mulb insl adc loope push cmp jnp test mov gs mov lea ret and (bad) sub bound data16 sbb or add push inc hlt xlat inc gs pextrw lahf adc xor cltd enter fildll shl mov cmc inc sbb shr add xor add sbb dec jns orl fisttp pop xchg push rcll inc sti (bad) fcomps dec repnz xor ret xlat dec pop mov stos in pop jg adc lret add adc inc jae mov clc scas xchg imul pushw mov adc lret leave stc into out sub fmull imul mov pop sbb push push sub add xchg jne fadds mov inc aad mov and stos rol cwtl adc test and imul mov ret jg scas mov sub and mov add or mov and das push jle mov imul ds cmp cwtl pop popa jae or (bad) xor sub pop jl inc mov or xchg pop mov inc mov cmp insb and jmp inc pusha xchg loopne cmp stc ret jmp bswap jo xor or inc scas xor xor mov test testb mov mov sub jns sbb push ret popa mov push cwtl outsb cwtl ja (bad) mov mov mov inc fwait test mov cmp inc sub push (bad) xor stos pcmpeqb test cmp into or push (bad) hlt loop dec lret sti mov jmp dec or fcmovnb pop jle lds inc lods cmpsl mov jmp and bound add stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne fnstcw loopne or popf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret pop sub mov (bad) xchg fstl mov lret jne idivl mov add or add bound movsl arpl (bad) stos adc js decb cmc je xchg push sti push cmp lret or cwtl lock arpl jne jp outsb pop idivb inc dec inc push jb sub pop add ljmp xchg test rorb popf insl jmp fistl insl aaa in add (bad) xor push jns sti stos out (bad) mov loope mov inc and cmp dec sahf in mov dec mov and or movsl lret scas dec xchg sub ljmp leave and dec jg push fincstp jmp and pusha xor (bad) (bad) jbe idivl (bad) hlt inc aaa mov (bad) aaa mov dec cmp mov xchg cmpsb lea dec pusha (bad) push out fnstenv mov mov jg xchg jmp ficom test push out jae inc (bad) adc fist cmp add xchg pop outsb test adc mov pushf ret add sti imul xchg jge iret call jb cmc sarl in outsl sub jp call adc repz (bad) mov push enter sahf arpl syscall ja cmc call adc sub mov out das mov xor sarb xchg inc cmp mov jmp cmp movb bound stos (bad) addr16 popa out mov and je cmpsb not addr16 sub jecxz mov cmc es sbb sbb sub cmpsb or adcl push xor imul sub mov add adc inc in mov mov add daa frstor push incl imul imul ret aad loope push fwait xor inc out sub adc shl mov lahf xlat dec jmp lahf pop popf (bad) ss loop test or (bad) push fist cmp mov incb fisubl mov add mov push int3 or mov (bad) sbb pop add xchg xor cmp popf or movsl popf xchg sbb mov lahf iret push dec lret xchg aaa cmp (bad) js iret aas test popw push cltd jmp or xchg jno aaa mov inc add call popf test mov (bad) adc xor mov adc test or arpl push add lods or and or (bad) (bad) xchg movsb mov aaa dec sbbb cmp sahf cmp ret dec adc xorb cmp add mov sbb push fwait cmp arpl std lock rcrb test inc mov xor pop mov int3 lret incl rcr (bad) (bad) aad jns cmp mov shl out cld mov loope cmp adc xor xchg jo stos icebp xor daa mov (bad) jbe mov subl sub dec and inc data16 daa rcrl mov dec dec xor inc pop hlt xchg mov movsl loop mov int3 scas pop adc sti movsl mov mov adc inc xchg push mov call popf in pop sbb jle jp loope call out cmpsb ror sub push hlt out loope jb repz outsl (bad) notl push adc fnstsw sbb mov movsl movsl xor dec aad sahf nop pop (bad) int fcmovu sub xchg cmpsb dec cwtl xchg daa jge out mov hlt jae test test nop fwait sbb xor xchg mov call imulb jg sahf lret lahf or out mov sti inc mov les push push sti sbb inc push fs push pop mov fcmovu inc je mov pushf cmp xor into clc ds pop loop adcb pusha pushf cmp jae mov and cmpsl xchg loope xchg ja stos adc xlat sahf mov loopne (bad) and pop sbb sub jle or or gs stos fdivrl bound cwtl lahf inc dec rol mov lahf fiadd add xorb add das mov adc or mov push cmp (bad) jle hlt xor (bad) sahf les lods fwait cli push arpl cld push and cli push lock fs shl repz addr16 xlat mov xor xchg pop or out cmp mov pop out dec js mov enter add rcrb push jne dec adc int mov icebp or test sbb push and insl mov jb xor pop dec jae xchg cmp mov pop (bad) dec push jbe ret divl dec cli std mov mov xchg cmc in daa dec cmp outsl sbb sub pop xor clc xchg iret test faddl stc sbb jg out enter pop fstps add inc sub lret jnp add jg sbb ret aas shlb inc mov call scas fs sbb xor inc xor loopne mov rolb sbb and mov cmp cmc cmpsb int3 aas sub nop mov cmp rclb (bad) mov andb xor mov stos xor sub fucomi mov cmc xor sbb fistpll xor jbe arpl movsl ljmp sub out fsts mov loope pushf pop int test fstl xor lods push cwtl test add pop ret add (bad) lock inc pop jno fst aas xchg or mov xor push test jne andl or adc mov sub outsb int sahf pop xor xchg pop (bad) and and lret loope repz nop and lock scas gs pop cli into inc and pop push rolb jo pop clc (bad) out std imul das sti daa mov ja push rol ljmp test out push nop push xchg sub enter mov dec pop pushf rol pop jne aas dec icebp test in jle mov int in in rsm xchg add iret jmp loopne cli sarb sbb movsb cwtl shrl or aad push jb jge lahf adc dec mov mov adc roll mull std sub mov mov cs out mov into mov pop add jge add mov fidivl outsl fistpll pop cli add xor cmp fcmovne add adc jecxz call push ja fwait inc addr16 or mov sub mov (bad) mov out xor xchg adc and pop or mov loope,pn ficomp xor insb xor cmp test icebp icebp movsb sti icebp lock ss popa addr16 lcall cs adc out movsl sarb adc jne add pop call (bad) icebp xchg les ljmp enter out xchg adc jae mov push mov or (bad) xor mov lods pop push and and incl lcall mov xchg pop je imul gs xchg fidivrl or cmp les das (bad) fild add imul test and cmpsl mov stc insl mov sbb cwtl out aad scas je es jns push dec and jmp scas mov sahf ret repz icebp mov jb arpl mov add jge jmp mov stos bound add dec and jo push in inc lds lods inc call dec insb xchg (bad) push imul dec mov movsl xor daa clc cmp mov fwait pop mov loop sbb into xchg and stc sub mov mov (bad) jl hlt mov xchg xchg rcr mov xchg adc out (bad) adc movsb scas fisttp fnop mov into mov sub push scas xchg mov jg push iret mov dec adc cmp sti insl push inc pop adc cs sarl rcll (bad) ja and push std sub mov mov add or pop sbb lea jnp scas push xchg push sub add cmpsb lods push xor jne leave pushf push test fdiv dec outsb or dec cltd sbb jne sbb and rorb pop inc outsl lret xchg adc jmp push jp cwtl lret lods mul mov insb ljmp jbe mov mov jecxz add (bad) pusha lahf cmp jo,pt popf xor sub xor inc jb loopne sahf mov jae push dec outsb fldl cmp outsl stos lea repnz add dec mov adc cli dec mov pop repnz mov xchg push movswl cmp cs cmp jge lcall and and loop sub movsl xchg (bad) dec rol push imulb xor dec mov mov push lock sbb xor jcxz ret pop inc xor adc test rep mov cld mov add adc fstpt cmp mov inc mov nop jo lods mov ret fwait mov push jecxz add repnz inc add mov push into push inc xchg dec and cmpsl test jno jno (bad) xor sbb push fdivrp add push mov mov mov in or push test add js mov cmp inc es sub (bad) fcmovne test ret (bad) out in jmp cld (bad) idivb movb stc (bad) faddl lock or xchg leave out nopl xchg dec jecxz lea hlt sbb fldl cmp push cltd sbb xchg mov mov divb dec xchg ja dec xchg ror mov fistpll and push jp and mov fistp fimull ror mov mov out in cld movsl pop sar sbb and fisubl inc mov jbe repz or jge pop movsl pop mov or mov jnp ret negb ret xor xor scas in imul push (bad) adc lods mov mov rcr and push fild test inc xor fdivrs and popa lret push mov sub add or mov mov stos leave das xchg icebp ljmp outsb inc adc dec ffreep fdivr sbb push jmp enter jns xrelease push insl imul pop jecxz out mov ds mov adc cmp loope jno repnz add mov ss jns cltd pushf inc imul leave test stos daa and jae xlat hlt popf sbb movl or std cltd and mov fsubs popf movsb mov xor cwtl int3 lods dec ds xor je imul inc inc sbb inc fadds sbb pusha xchg pop insb or dec adc adc rorb mov add insb mov test push cmp and inc pop sti in pushf and inc sub sbb sahf test stos (bad) mov repz jg test jae adc dec repz pop mov imul js repz addb (bad) fwait rol add (bad) repz cmp outsb push push movsb stos bound push sbb js popa push test xlat mov push cld pop das pop stos ja imul fisttpl cltd inc sub hlt movsl mov push movsl push test scas es cmpsb push lods inc jl xchg or js loope outsl (bad) lds popf dec loopne (bad) mov jecxz mov inc rolb out sahf mov pop (bad) xchg push adc aad jb pop jbe mov inc xor loop lahf ds dec cli xchg incl mov call out mov cltd or mov and mull sub inc repnz (bad) cmc leave mov nop add jl and fldt mov push push mov cmp pop les rorb ss cmp ret sti sub or das push fwait inc (bad) jmp mov in dec sub (bad) pop dec sbb pop add aas xor cmp out push out aad sub lcall adc pop mov xchg mov cltd test mov cmp dec add mov js in (bad) and xchg adc jle fisttp push add xor (bad) jg dec add xchg outsb jbe int adc mov lcall pop rcl test pmullw push xchg shlb cmp mov pusha pop inc dec gs push aad xchg dec mov in in cmp fstpt xchg mov mov aad mov push imul test cmp inc das dec dec sbb addr16 das into enter cli repnz sti push cmp push and fnstcw call xlat push out cmp movb out dec sbb clc cmp gs mov adc not cmpsb dec enter imul dec pop (bad) sub mov mov dec push jp lock sti movsb mov stos shrl cmc ljmp int3 inc fsub pop shrb pop jo ss outsl notl push mov push daa (bad) push cmp xor cmp cmp inc xlat dec rolb test sbb jo insl loop fwait sbb cld out movsl adc cwtl movsl fwait and pop ret xor cwtl iret gs mov fidiv lock leave xor pop iret nop jbe pop cli mov pusha xor loope stos das inc xchg fisubl out pop and mov dec clc inc push xor cmp xchg cmpsl add adc sbb (bad) dec pop cmpsl push pop cmp push sbb or push jg fidivrl mov leave loop cmp sbb or sbb imul push sub out or dec fsubl in or aaa cld fwait in push nop mov xchg rcrb aam sti imul and or cmp (bad) into ljmp mov shll imul xchg gs pop jge dec mov mov pop rolb add jnp inc dec (bad) cltd aam out es es mov mov push or mov leave out into (bad) mov add je xchg lds sub or pop jno rorb imul xchg cmc sbb xchg fmul sahf jbe imul push lret sbb lea aaa mov testl cmp stos (bad) out test movsl adc inc ja mov pop and out inc jecxz in rclb shrl loopne out (bad) dec gs ret jmp test dec (bad) sti sub mov add push jge add lds xorl out jns jb pop les bound imul sub push imul jle int sbb xchg sub dec xor sub loopne movsb stos jb out jbe jmp pop or jl jl,pn add add ljmp stos fidiv xor pusha mov imul (bad) fadds das fcmove sarl push cld cwtl je in or xchg cmp gs int3 popf and mov stc push pop (bad) mov push mov (bad) mov or fildll data16 jge jne lahf pop pop insl inc lcall mov shr xchg sbb (bad) push aad push cmp mov xorb sub inc cmp loop cli aad add jge xchg lret movsb jg sarl aas into pusha popf scas les lods (bad) fsincos sub xchg je mov sub cmpsl mov movsl int3 xor add or push int cmpsb jb loopne mov mov out lock fmuls dec std inc jo inc xchg addr16 fnstenv stc jo mov (bad) fcoml lea adc jle cmpsb pop mov inc scas push cmp lahf xor or jmp inc sbb xchg mov xlat cmp call cmpl cwtl and mov push je and rcrb nop ret ret insl data16 pop jl lea push adc dec pop ja (bad) pop jbe mov call fildll mov xchg mov popl sub lret insl pop testb outsb inc pop dec xor daa (bad) cwtl loopne jp mov sbb cmc stos nop pop add adc or fwait lods jbe jecxz repnz xchg ret adc lds sub stc call sahf pop (bad) data16 lahf cmc xchg xor ret push (bad) aas mov sbb jl data16 mov add shll xchg mov rorb fs push std mul xchg jne dec popf dec sbb or loop leave push and pushf bound push add inc fidivrl or jns popa test fs test push mov mov test mov out adc jmp cmp xchg rclb loop pop pop dec pop scas sbb cmp push xor pop fmuls jo ja dec mov nop insb aad movsl and xor popf mov jno jns movsl adc daa or aam dec push jae ficompl dec xor add jmp gs stc sahf mov inc sar pusha push or ljmp orl (bad) mov (bad) cs scas imul pushf pop (bad) je ss out mov outsl dec push inc xchg sub imull faddp pop je add pop test cwtl test push aas jnp mov lahf xor xor insl inc movsb inc aas adc outsl dec inc inc cld rcrb pop fistl cld lock xor movb rcpps cli int3 cmpl mov adc xor int3 xchg lcall and test popa aaa lret rcll loope pop and xor insl rorl fnstenv roll loop mov or mov stc cld stos dec aaa sarb (bad) in xchg cmp rorb sub stc das sub aas inc aam mov outsb cli mov push mov cltd fwait dec std mov insl jne inc into push cmp push call mov jae cmp mov lods ret sub xor (bad) popf rorl dec rorb (bad) dec inc cmpsb adc nop (bad) dec mov sbb mov inc xor jecxz adc (bad) icebp push cs and push pop mov inc ficom iret jnp stos pop lods cld dec call xchg add in push mov imul movsb in pop clc mov or mov sbb in data16 sbb mov jb adc mov fdivl sbb (bad) pop pushf pop sti cmp pop lods inc sbb mov ret (bad) fimull push jmp idivl mov or add sbb push and jge mov stc xchg cmovl mov pop cmc daa jae jp xor inc ljmp iret pop mov out add dec push push mov scas push and sub jo sub dec sub mov mov loop sub lret mov test push daa jne pop test mov fwait xor pop sahf mov adc push xor or adc arpl jp mov sar negl add mov lahf sub movsl xchg push push push iret cli or mov rcll mov je jecxz popf leave xchg adc adc or shl jl xchg mov imul and out sub cwtl sbb into sub jnp out dec mov mov ud2 pop test or pop mov je call outsl fucomp setle mov add dec addr16 test (bad) icebp xchg (bad) iret push add push sub xor inc xor and mov scas pusha xchg jbe dec mov shl mov cmp (bad) push jg push mov jae ficom mov mov (bad) push movsl mov aad test int3 mov and daa stos lods jmp inc rorl mov loopne int3 popf mov scas into or mov outsb lods xchg in add call xchg jg cltd jge cltd sub push hlt pop and adc xchg ja sarl add xor aas pop flds fwait pop rcrb lea aaa ja add mov lret inc mov inc mov pusha jl push adc shrb cmpsl lods xchg das sbb jge pop pop pop lods cmpsl rcrb xchg mov es jp push mov aas mov test lret mov (bad) cmp or push sti sub lret and mov std mov xchg xchg out fistp xbegin popa (bad) cwtl pusha es add popf aad push ds inc adc push imul mov imul jns (bad) and pop jmp lock test mov mov movsl or mov notl xor add mov mov scas daa je xor adcb lea push cmc (bad) push mov push jl mov lahf xor shlb and mov outsl popa ret xchg aas lods sbb mov fstpt dec int3 bound fisubrl push or xchg pop daa sub pop fistl rorb out mov lret dec pop lret out xchg mov (bad) loopne insb lock inc mov repz mov mov repz mov or xchg daa jle cmp mov frstor mov jge dec pop fiadd sarl mov in sbb movsb inc push movsl dec mov (bad) cli sti cmpl cmp mov imul sti jnp inc les popf leave pop jnp std cwtl lret sahf sbb inc add rcrl and pop test test lea and cwtl lods pop cld mov dec aam les pusha bound test stc ret cs imul jnp jae insl add lahf mov adc sub mov frstor loopne cli shr mov jo mov aas xchg loopne jmp movsb jge imul ljmp sub test pop pop scas cmc out inc (bad) arpl sbb arpl sub or rcll and mov icebp xor add pop push or pop (bad) (bad) jno xor jmp or dec ret mov std movsb mov repnz sub cld sahf ljmp scas scas mov pop notb jns repz xor or jae dec int xor (bad) adc stc out xor outsl in sahf xchg or adc pop jg cmp js movsl sub and repnz (bad) push xchg adc aam adc test inc scas stos add xchg push jge ja inc cs in (bad) jno jmp pop jmp dec and mov or jmp test lods sahf add push mov mov repnz jmp lcall pop jl push (bad) stos dec add jne cmp xor dec xor lret pusha xchg and dec bound mov sbb ret mov idivl pop into sub dec int3 inc sub xor sbb mov cmpsb ja lds outsb fistp dec cltd push inc stos popa es jb push jb mov xor push push jne (bad) in jo in and sub dec fisttpll and adc jb jbe repz inc jge or stos xchg inc stos das jg lods ja int mov or or fwait add mov sub enter daa xchg adc cmp daa fnstcw inc pop adc push dec pop adc inc je inc aas jae mov cmp mov scas or cmpsb push fnsave or or (bad) pop in or mov mov mov dec sarb sbb into addr16 dec ret sub adcb cmp sarb lahf xor pop imul xchg (bad) out sub lcall pop xor mov imul jns pop fwait sub pop push push in push (bad) mov cmp xorl sub (bad) out ds jecxz or add out imulb xor cmpl sub std xlat cli je add loopne jb cld enterw jg sar sbb negl xlat popf sub and push test andl inc aaa testb add pop ret jne inc adc aaa stos jg cmc rclb adc push les mov movsb push imul cmpsb dec ret clc sub jp sbb insl outsb bound lret fcomi outsl xchg mov mov lcall mov (bad) test push lods (bad) test int mov bound call sbb mov push xor ljmp in xchg test repz mov push repnz sar loop jge cmpsb xorl pop ret in lock cmp and lds leave and mov dec pop add bnd mov js sbb jb nop jl and adc xchg or mov (bad) cltd ret cmpl mov cs rorb into inc outsl or sub in mov dec jne pop (bad) stos xor (bad) in inc dec sub xchg xchg leave (bad) in xor popa int3 cwtl scas imul mov mov into imul test cmp inc inc and mov push in insb out int3 sbb pop cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp and test add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret mov insb fstpt ljmp das imul xchg push std fucomip icebp (bad) sahf psllw add add shrb nop test jnp mov mov aas in cwtl test in fdivs in verr and fild daa loope mov ficoml push add mov inc mov inc mov addr16 out cmc scas ret push daa (bad) pop and cmp pop imul push push adc enter fs ficoml jno add clc aam movsb flds popa pop ljmp inc xor nop ret adc sbb mov sub xrelease jle dec push adc addr16 inc out cmp cmovbe jo push std cmp xor cmp ret push cmp lret push (bad) fadd fbstp xor xchg pop xor inc andl orl sub mov and ss inc scas stos push push lock mov fiadd ja loopne cmpsb inc pop cld popf dec les outsl or arpl sbb cmp xchg popa mov cmc in mov arpl jo jns pop adc (bad) mov fistpl cs cmc kandw ss inc scas das dec xchg lret in test les mov adc aam lea andb ret jo xorl mov arpl std pop pop fstl faddl lds sub sahf (bad) lahf xchg mov in fistl fisubrl bnd mov jmp imul dec jno aaa push stos push or xchg cli jno in pop in fldt dec or sub dec daa dec fdivl fstl sub fwait int sbb stos mov mov jae jo push sub out arpl xchg pop int iret push scas mov pop adc sbb mov and push fnstenv iret xchg scas mov movsl (bad) jno cs popf inc push loope (bad) hlt ror or add pop loope loopne clc sbb dec xlat scas xchg ret jecxz mov xchg insl scas pusha cmp fbld cmc xor xor movsl sbb sbb int in xlat ja mov shrb mov out sub or mov fstps xorl clc test adc ret (bad) or cwtl imul add xchg mov lret cmp jl (bad) jne inc jmp (bad) dec (bad) mov xor dec clc in pop dec loopne (bad) jo nop jecxz stos lds adc shll push push lock jo sub add mov outsb push dec aam pop cmpsb popf data16 mov push in pop jp dec (bad) cli ljmp lret jmp lahf mov mov lcall outsb xchg xchg (bad) cmp or loope jle sub push xchg sbb push gs cs add loope nop call les nop js add ficompl in repnz loope mov nop clc jecxz into sub mov jno mov cli push cli lret bound and xor lcall js pop outsl mov sti insl inc sub or mov pop push xchg sahf inc adc xchg repnz cmp xchg xor (bad) nop leave incl sub adc xor imul push push xchg sub sub fdivs or inc and inc imul iret mov lcall dec xchg repz mov aam push xor (bad) loop imul cmp xchg mov call push xor es pop jle cli sub xchg xor mov sub test xor pop scas (bad) hlt mov popf xchg or aam pop push sub dec xchg jno mov mov jns dec inc orl test cmp mov mov arpl adc jecxz (bad) xor mov pushf movsl sub fmull mov xchg jg ljmp notl or aas sbb and clc insl jecxz xor (bad) xchg roll clc mov and lock mov mov pop mov xor mov xchg pop lock adc sub rcr cld fiadd int3 mov xor mov cmc movsl in orl dec mov cmp mov xor call dec fidivr inc aaa cs push adc out nop jbe rol loope fidiv aas fsubr mov int ja lcall jle or xchg mov fsubr jae sbb aas rcll fldenv lcall mov popa imul js and cmc imul in test xchg xchg cmp (bad) fadds push pop stc fiaddl mov mov sub and pusha sbb xor in movb in jp jae je mov sbb data16 sub add arpl push daa mov adc gs mov popf sbb dec cld leave add sbb push bswap pusha enter mov or insl adc lcall rcrb repz or xor pop (bad) push out (bad) cmp jno adc lret enter jge push pop or (bad) shlb movsb lea or (bad) stc insb sbb js jp push les lret mov popa (bad) sub out inc cmp movsb dec push inc and fisttp or pop xchg cmpsb cwtl jnp popa js leave into ja xchg mov xor scas ss jge repnz xor cmp lods mov add xchg jl negb sbb cltd nop lea push push cld jecxz sbb enter sub in mov loop xchg inc jmp push xor jecxz mov mov or insl jge or mov sahf in nop cmovae fwait cli lret jp (bad) jmp (bad) xchg jg mov inc cmp lret loope pop insb mov rol add (bad) into adc mov jbe mov out cmpsl test in adc aam gs mov test test sahf int3 sbb mov jb js inc lcall fildll icebp jns aaa and inc sbb sbb addr16 jno int fdivp popf ja cmp and in stos cs dec out stos add in pop lods jmp stc inc fiaddl int add mov push into test pop add dec lahf adc outsl (bad) adc push outsl (bad) dec insl or adc mov jns fmull mov rol neg fdivs dec dec pop fstl xor sti mov insb jmp jmp divl jno aam mov xchg inc xchg pop inc and test push add fistp mov dec and es test test mov pop inc lret bsf fs (bad) jo insl rolb pop bound cwtl push push pop mov jecxz jle jge pop add cmpl fucomi xchg mov cmpsb aaa fwait clc pop mov (bad) adc sbb jmp dec jae adc daa aaa or fdivr fiadd push add mov xchg movntps (bad) jg mov pop adc sbb outsl pop pop push adc push mov jno fs repnz movsb loope xor push mov mov mov stc xchg pop test std nop dec movsb jno aaa fldenv cld pop push mov mov xor out std push js in lea roll push dec jns aam mov ja insb fdivrl rcrb xchg jl dec testb fsubs notb stc lret insl dec call pusha fnstcw lret outsb cld shr mov sbb lock adc mov jle adc fnsave jmp call lcall cld fsubrp mov sub mov jecxz sti sbb inc dec (bad) mov lods dec mov lcall je fnstsw mov sub movaps dec mov jl jmp scas inc xchg lret and ret xor add push insl mov das cmpsl movsb (bad) fbstp insb sbb jmp push jge mov mov popa dec dec clc mov jne ret pushf cmp mov clc or jmp jae hlt loop cmp in fs dec xchg sbb lods or mov push call (bad) lods push and pop out int fs push repnz pop (bad) lea sub xor pop outsb mov xchg mov xor jl pop js pop insl xlat lds jecxz cwtl stc pusha pop jge mov mov lock mov sub mov mov loope mov jnp adc mov mov sub sbb push fidivr test lret adc outsl in clc dec popf adc lret and mov mov mov push stos push lret mov dec inc dec loopne dec push movsl prefetchnta mov icebp xor jp scas xor mov push outsb fucomp (bad) shll je aad inc mov or imul add adc xor pop jnp push push xchg xchg dec test aad add inc inc or and lock cmp ljmp lea cmp inc and cmc push and lods cmp or adc xor or mov mov into movsl shrb cmp dec push mov scas adc and push push mov jg ja ss pop (bad) rol fwait xchg out scas insl push cli mov mov pop mov repz mov pop jo sub jnp pop and fidivl cltd add popa scas lahf aam adc ret cmpsb ficom and sub (bad) (bad) jp jp sbb imul xchg rclb pusha ljmp jns cmovg sbb fsubrs ror lods push js int mov inc mov mov xchg mov repnz stc lea cwtl aad in clc sbb shlb add loopne jmp sbb (bad) pop loope cmc fbstp pop nop push inc mov (bad) xor imull stc xchg pop inc dec jo push mov dec iret movl xchg mov jo iret mov repnz insb cmp outsl mov outsb mov stc cltd cmp lock push push jp mov and or cmp pop push mov insb insb movsb gs insl cld inc sbb lcall push jmp jge out test ds jb mov cmp mov lcall rcr xor loopne xchg sti add movsl shld adc sub in ljmp sub aaa popa jp imul lods popa stos movsl mov cmpl jne mov or sarb pop and test push adc sub (bad) push add or push pop jae mov fsubrl addr16 adc es imulb int add push pop fistpl arpl mov xchg (bad) cld das dec insl jecxz test push daa lds mov adc leave pop out xchg lock dec (bad) loop or add rcll test xchg lret push jns jb pop sbb aaa imul fucom jg and lcall mov pop mov popa test scas leave outsl imul popf jb scas ret cmc gs icebp lret dec mov lret scas pusha dec pop cld out int3 lahf cltd add sarb ret std in cltd (bad) (bad) sbb es push or addl (bad) cmc inc mov cmpsl xor adc xchg mov pop pop imul cmpsb hlt sub nop in xchg scas notl sub pop mov (bad) (bad) repz sti stos fcom scas ret adc cmp gs xlat popf lods dec mov sbb lahf xor or outsl pop dec in add (bad) jne call dec mov xchg and lahf mov addr16 scas pop push fs loop mov adc jl lcall andb mov fldl aas mov test testl dec fstpl sub inc negb lds test shrl scas or cld pop jo or jns mov sub popfw stos mov xor sub test cmp std loope pop fdivl mov (bad) out adc ljmp and (bad) or int3 out mulb into mov mov std push out pop test loop (bad) (bad) xchg and addr16 (bad) cltd fiaddl into inc mov or add push jbe (bad) negb fisubl aam fwait test movsb rorl scas jbe loope xchg std loopne lahf push jl std mov jge push jg mov (bad) mov mov and mov dec pop sbbl leave test xor popa inc xchg or mov dec fldenv push sbb int3 je sbb ficompl mov iret jno dec pop (bad) push lcall sbb push xchg hlt sub fimull jae mov pop xchg xor arpl cmp repz bound jmp pop and mov pop inc and dec xchg rorb mov pop cwtl lret mov (bad) push test push jmp aas cli fildl mov mov cmp je sbb xchg mov push xorl (bad) test mov nop (bad) fndisi(8087 repz lret lds mov xlat or jae xchg enter (bad) adc inc push dec jnp inc xor mov mov aad pop movsb sbb mov daa adc in sahf mov fcomps jbe js sub out cmp (bad) jge insl xlat pop lahf mov pop inc cmpsb pop cmp mov loope adc inc jbe std push push inc pop push add insb notb decl repz daa mov in mov jne andb push ret xchg mov bound in sub setb movsb insb call push popl outsb xchg out mov and imul (bad) adc xor jmp mov xor test pop dec xor mov pop rorb testb pop mov xchg ffreep mov sbb fiaddl ficoml push xchg addr16 sti xchg jg sbb lds ja push (bad) repz int jmp push sti mov add (bad) ss sbb test pop stc or sbb cli or dec (bad) jb fdiv mov mov repz je sub hlt push lods rol pop mov inc dec int repnz adcl movsl div jp or fstpt in mov add add add or xchg add in insb repz inc fdivrl mov cld and sub xchg and outsb push jle pop jl push push popa fiaddl popf bound jmp cld jl add mov fnop add orl sub je push adc dec add (bad) je mov sahf ret stos mov pop mov mov imul xlat sahf add adc outsb cmpsl rcrb fbld (bad) pop inc sub push dec lods or lret cltd addr16 mov (bad) jb test xchg or ljmp sbb xlat je sbb (bad) mov push call subl jns mov pushf enter and jmp stos dec insb xor sub push xchg adc mov lret inc data16 push mov (bad) outsb cmp out pop (bad) int jb cmpsb insl lock popa das push jb test enter mov add icebp scas js movsl cmp (bad) xor cmpsl cmp adc inc movsb out mov insl xchg pop pop mulb jle dec aas dec jne sarl fmull jnp jo or icebp int or mov outsl (bad) or or das jge jg push (bad) adc pop int3 js scas js push adc xchg test cmp jae loop pop call pusha cmp enter jmp add lcall scas dec stc cmp call add mov in inc cmc loopne adc ret jnp mov sarb stos (bad) pop push les jl in popa jp fldenv xchg jne sub divl inc mov and in or loop ss pop mov push cmp (bad) mov or int sub pop pop jmp mov pop jg ja inc xchg inc lea ficom add adc scas or out sbb fstps scas lcall mov daa mov ja nop test sbb aam icebp fwait sub xchg lds dec or js or (bad) int3 add xor (bad) dec cmp pop add cmp repnz xchg outsb fwait cmpsb int (bad) mov and dec sbb pop f2xm1 xchg lock pop pop (bad) xchg adcl cmp jnp xor inc aam fucom push outsb or mov or pushf in jmp (bad) icebp mov stc fdivs clc in fcmovbe push push outsl mov inc (bad) sub ss mov stc scas add paddq cmpsb or movsb out arpl cmp rorb jle cmpsl cmp jne or test mov fstl adc out lea dec mov mov (bad) ljmp je mov mov hlt ret xchg ja out enter push lahf repz sbb loop movsb scas cmp leave jb sbb mov xor mov jne repnz clc ret outsb les leave (bad) in scas test and inc pop js cmp inc or xchg inc or dec out push or ja or (bad) or lret xchg jle mov push or cmp jae jns cmp in jne or jge lods xchg hlt pop js xor sti movsb inc mov add adc mov or popa cld ds and dec pop jnp xchg jbe rcll dec jnp pop rolb pop out sub mov insl enter fnop std jl push clc pop xchg cmp adc push push dec in push lea gs or aas inc stos pop faddl lods or stos sbb lods push cld popf cmp xchg fadd lods push pop pop pop mov add aam mov push in push or (bad) mov gs (bad) adc mov stc ljmp dec and cmp cli jmp xor or imul inc mov out mov leave pop cmp mov jae movsl ljmp test adc int push dec cli push in cmp add sbb cmp mov adc popa jmp (bad) cmp out cltd or inc mov sbb xchg scas imul sub pop add jae adc ss std and in adc inc mov fdivr (bad) inc ret (bad) ficompl pop push loopne xchg sbb (bad) lcall pop cmpsb aaa lea push mov push adc and adc xlat fdivrs add xor xchg or lock jnp jge aaa in addr16 dec (bad) pop mov ror (bad) movsb add enter stc lcall je call dec pop push gs jae mov sub or (bad) pop and test add cmp out adc pop jb xchg cltd pop (bad) call int pop adc lds mov movsb mov into add mov loop les pcmpeqb jp scas jmp inc cwtl sub pusha cmp jge jbe and ja push repnz xchg lahf fstps xor aas test rorb pop jne clc xlat and clc test rolb test jo data16 mov ret cmp push mov push add inc or push icebp testl and movsb lock divb cltd mov movsb xchg (bad) (bad) or jae ja js test in and add ret fistl mov xor ficomp insb rcrb das xchg js or xchg pop lret imul mov inc mov mov jle or fildl iret inc cmp inc sarl cmpl cmp dec outsl (bad) aad and xchg push shrb ret mov lcall jp rcrb loopne mov (bad) cli lret adc lret std push adc (bad) and hlt out imul dec aaa fidivl in jg test in and shlb in and xchg inc or mov mov jge push gs sar sub ret add mov aam pop jno scas movsl add jns cmp leave xor xor add cmp mov test pop mov push (bad) sub mov int das push jno aaa jmp je or push shll cmpsl (bad) fucomp cmc stc mov bswap xchg mov fnstsw xchg mov mov lea imul xchg fucomi into (bad) (bad) ss and inc inc dec data16 popf lds and repnz repnz ds or cwtl lds pop (bad) daa loop adc or dec loop pushf (bad) push xchg ss xor lea lds (bad) jbe (bad) in repnz jne popf mov cmp xchg (bad) sbb scas cmc jno inc sbb or pusha shrb scas out fldl jbe dec xchg and xchg fdivl add bound mov ffreep movsb rclb gs in clc mov adc andl les push or or sub pmaddwd xchg xchg cmp jnp dec add xor lock stos mov cmp add jp test mov dec xorl or test cld outsl add fidivl dec int3 out or fildll inc repz push sbb lea enter jg sub test jp mov mov push inc cmp add fildll xor add or scas es fcomip fiadd lea test les add (bad) adc ja push xor scas lcall test mov ja outsl jg mov push (bad) out push inc es maxps dec inc mov lock mov or push sbb je push scas imul popf dec js xor pop adc dec or jo xor adc push dec lret test mov jo cmc adc scas pushf or fstl and sbb fistl jle daa inc pop mov scas out aam pop cmp pusha mov cmp orl sub xchg jae ret xchg adc xor xlat mov (bad) jbe sbb mov push aam push ret cmpsb pop inc pop jo sub cs popf ds mov clc lea ja xor dec cmpsb arpl mov in sub mov xor aas imul cmp jmp cmp and cmp mov mov xchg fsubl jns pop repz cld inc fst add push popa test mov mov cwtl lock cli jecxz jmp xor in mov jo and (bad) push dec (bad) dec mov xor xor mov dec sub mov addr16 mov jle ljmp add jl lret int jnp repz mov and pop enter and mov (bad) jns push jl mov mov inc aaa and std (bad) jns inc fs jl mov xchg xor sub jne and mov ja push (bad) mov jae (bad) jge xchg mov dec mov inc xlat insb popa enter rol test scas int jne out jge push loopne lahf dec mov jmp push arpl (bad) mov cs div xor cmp cmc pop loop aam sbb xor adc mov sbb push xor (bad) push sbb mov cmp push jb (bad) mov lds lock std je,pn shll push mov rcrl xorl pop das pop outsb ja add lahf dec scas push fs or inc stos sbb pop js (bad) jl mov jg adc fsub insb xor cli loope into adc call shrb fnstenv icebp pusha mov daa (bad) jbe fisttpll cltd fnsave adc std (bad) cmpsb ficom popf push out push jns das xchg sbb (bad) out xlat pop pop into mov out ss mov mov mov and cmp jl jg cmp xlat pop call lret loopne push enter data16 in fstps and in lods or xchg pop loope sub mov lahf arpl (bad) hlt jns and lods push es xchg je int inc jge mov jmp hlt push scas push xorl mov add pop pop jg cmc out add sbb repz dec pushf xchg in pop cmp fstpl ljmp insl (bad) jb push jnp inc in fdivs imul jge push mov dec mov sbb jne lret (bad) ds jne mov loope wbinvd arpl mov mov jge xchg add and ss repz lods fimul and sahf or andl sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop dec lret (bad) push ret rolb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc and popf xor insb (bad) aam mov (bad) xor sti mov lods add add mov shrb ja imul pop or rcll jno sarl mov in and cmp push ja pop xchg faddl mov push dec sub into icebp push mov mov outsb test lret loope cmpsl sahf cs aaa ss fidivr pop dec mov lret xchg and loop pushf xor je jne xor out aad movsb mov or cld fidivrl xor movsl cmp cli ret test test fmuls cmp lods cli loope test xchg lret cs jnp mov (bad) testb add sub pop sarb mov fs pop cltd xor inc (bad) test xor mov inc push xlat sarb ja pop lcall dec xchg jge push imul data16 loop scas adc (bad) fnsave add inc xlat or andl lcall push pop lret lds mov aad lret popf push insb mov mov cmp jo mov rcr repnz mov scas cmp clc or iret inc ljmp movsl jg lods xchg inc sbb sbb rcl dec imul jle sbb push or in mov jl pop cmp loop xchg into sahf out ja sub fsubrs shlb xchg movsl pop pop jp xchg cwtl pop cmp push popf adc mov cmp imul dec out loop bts dec aas mov and jp insb fcomip outsl and cmpsl sahf inc mov sub aad jge adc xchg (bad) xor cmp jge and add add dec mov mov in push aam adc (bad) movsl imul inc cmp mov fs (bad) clc cs sub pop lds loope add inc cmp pop (bad) jl mov jbe bnd lret (bad) loope (bad) jbe sub lahf iret fwait mov ss or mov cmp jp dec lret mov lods cmc sti cmp fwait icebp cmp inc push or std lea cmc mov lock jb cli and sahf stos and sbb outsb mov ja xchg cmp cld inc pop mov ret loope (bad) adc dec xor insl mov in out xor jecxz jp and sahf jge sbb or ja outsb cmpsl clc mov andl cmp outsl and stos mov and idiv test push jecxz sti push lcall jge aad divl shrl loope xor and xchg lods and cli fsts test lods stc dec sbb ret dec sahf stos in mov dec lea xor adc pop test and or (bad) jo sub xor in mov mov pusha cwtl ja repz ds jp movsb pop je cli pop mov (bad) jns or sbb pushf or jp xchg sahf adc xchg orl push cmpl cmpsl std lds (bad) push cmp lret ss cmp js mov inc mov xlat outsl mov scas arpl fwait icebp mov fldenv imul push lahf outsb xor jl dec leave nop stos xchg lods hlt gs and lcall cmp in orl in xchg scas sarl frstor ljmp fstpt cli in cmp add es push sub or js add ljmp cmpsl mov jmp jne inc ret dec aaa mov rcll pop sahf push popf daa (bad) ficompl or dec pop xor xchg pushf sti and pusha sub xchg repnz lcall popa mov sbbl mov scas je jg addr16 inc sbb lret std sahf push inc push and test cmc and dec repnz stc hlt add imull xchg stc adc stos fnsave mov dec loopne xor addr16 bound xchg outsl push mov sbb and orl adc adc jo xchg pop outsb mov mov cld cmovge sbb mov xor loopne shrb daa sti dec mov jmp sub mov jp fldenv inc ljmp sub shll or inc aas jmp xlat lcall pop jbe sbb inc stos cmp inc aaa mov xor sub fisubr inc push push stc mov ds fdivl fbld pop xchg lret push div pop fwait sahf jg fild lret mov loopne pop mov repz popa movsb loope mull movsb cs jb mov aas lret pop xchg or pop fldcw je pop jl sub mov push sbb jl pop mov repnz pop jp loope test cmp int inc jle es jle jmp sub jl stc push stc das cmc mov test pushf insb jp fsts sbb cmpl je pop enter xlat add loope jl out out mov (bad) push mov xchg fcomip fcompl insb fstpt push mov (bad) fucomip (bad) insb fist out inc sbb jae cmpsl sahf xchg outsb mov jp adc jne repz jl and in cmp orl iret sub sti fstl (bad) repz fs or mov pop or fs push ljmp stc lret out xchg rolb xor imul addr16 mov mov jae (bad) pop stc cmp pop xchg jae iret leave mov aam xor sbb mov ret das sub xchg and jge inc mov cmpsl bound push out (bad) mov nop and outsl push int clc xlat add adc ss popa popf iret into int3 mov adc xchg mov ja mov mov mov in mov dec sbb mov push aad mov rolb sub in or xchg movsb scas dec into cmp pop test xor mov dec mov jmp adc mov fnstenv hlt lods or dec pop mov jbe fimul mov add nop gs cmp pop jecxz lret mov adc out push test arpl mov lock mov cmpsl jmp daa mov push xchg mov jp cmp pop repz xchg jno ss outsl pop push jae and sub or shlb sub sub mov sub rolb add mov scas push add xchg inc mov ja or (bad) test add cltd pop (bad) cmp cs add mov jmp xor push push (bad) or popl jnp jbe xor in (bad) add loopne scas (bad) call hlt movsb sahf xor jl add clc andl jns das aad pop push mov insl loope popf inc and and xor jo push cwtl test add sbbl inc adc inc add add sqrtps roll sarl int fdivs out push dec fisttpl sbb in push sbb add and push loope (bad) mov icebp in pop scas lcall cmc adc cld shr pop dec in lret sarl shr mov xchg sub bnd sub push orb jmp mov imul aam popa lds dec xchg call repz mov jl cs loopne cmp and (bad) xchg cli jecxz or xor fnop aam inc cmp ficoml and scas dec sub scas add lret stos push or xor push mov lods xor fdivrs popa repnz sub cmp out push add jle jae notl inc jl push cmc pushf cmpsl jnp and and std push push cmpsl decl std or test cmpsl mov mov or out aaa packssdw aad sub mov xchg aaa xchg mov ret cmp je jl stc fcomi cmpsb xchg ficompl dec mov repz or dec enter int xor cmp mov or fnsave add push outsb jmp mov adc mov mov ret bound add dec pop xchg test sbb mov inc pushf mov sub loope (bad) mov aad or aad mulb inc scas jl cmp jnp clc jbe shr lcall (bad) jnp stos and out jo out fldpi and cwtl and and out or or jne cmp sbb add add scas (bad) jae cmp push and mov cltd jne adcl clc jno sbb out in loop popf jns rcl scas xchg rcr in inc sbb nop scas icebp ds xchg pop in adc mov in out les ljmp adc mov lcall aas add pop sbb xor or in scas daa int (bad) insb repnz js dec add (bad) xor (bad) outsl (bad) out xchg or push aad sbb test loopne lods inc rcrl std mov jns lods jne es and imul sub in out icebp enter sub mov icebp add lods scas in inc outsl lcall sbb pushf (bad) xorl xlat mov inc jns jg jl daa out cmp out jbe xchg into lahf pushf push movsl add push push lock pop jne or adc aad fstps cmc rcl and xor push test int xchg sbb inc add (bad) icebp jbe rep xchg jl push and mov jge outsb popa das pop sbb test jmp adc dec test (bad) jo mov enter in das ja fsubs jnp xchg sbb les mov cmc hlt in jne imul jecxz push sbb ja pushf mov das adc mov mov cwtl mov xchg stos fcmovb outsb push ljmp decb shll pop and in (bad) fwait pop (bad) addr16 jl or pop out jmp pusha cmp test andl cltd into jo pop mov xchg inc hlt and add (bad) and out pushf test (bad) js sarl daa adc jne dec mov and ret repnz sbb pusha inc sbb dec clc lds mov inc jo fstpl pop adc jbe xchg mov fdivl popf ja jae add fcmove movsb xchg scas add xchg jb inc sarb mov fldcw dec data16 imull jg test push data16 mov jns push jnp inc pop inc int3 fdivr ds xchg dec cmp mov or or dec push xor in and add lds lods xchg mov lret (bad) jp arpl pop push mov popa orb das pop pop sahf cmc insb fildll das and lret mov test xorb sub pop xor and ret jo stos pop inc cwtl push adc je mov pusha sti (bad) iret mov cmpl push aaa data16 cltd (bad) xchg ljmp jbe mov push shrb movsl or fstpl mov out subb sub pop xchg mov xlat cmp and scas pop jbe aam cmp dec mov sub inc sti fs lds sub mov mov out cltd jae mov incb imul lahf cld adc xchg mov mov push insl mov les mov cmp jl push xlat imul ret or adc mov mov push test xchg sahf mov inc push in inc movsl pop push inc fsubr pop push nop push or outsl roll inc push add inc fs into fwait test mov mov sbb xor jae xchg js jg out in stos imul cmp push mov out (bad) sbb call add data16 sbb jle xchg inc outsb jae pusha xchg sti aam jle push cmp mov add or (bad) mov or (bad) outsl jo jno nop xor push jle jo jb fstl add out pop scas sbb xchg iret push mov jns adc and cmc cmp hlt xor scas daa into (bad) shlb xor and fsubr les scas mov mov jle mov jmp jmp rcll test lahf mov aas lea push cmp test movsb fs xchg je scas push (bad) mov ret dec mov test ja xor adcl in (bad) fldl xchg (bad) (bad) mov add movsb enter sub mov xlat cmp test mov inc fcoml cmp and ds mov aam nop in add movsb lods mov cmp ret (bad) mov out pop test pop out push out std xchg push pop ficomp clc cld cmp (bad) lret cli fidivrl push dec dec pop push cmp mov (bad) clc add pushaw (bad) sub movsl xor cmp jle int3 sub jge mov jmp lds add cmp stc and or push shlb enter imul repz scas lahf (bad) xor xchg mov sub push or cltd fistpl arpl lds or jne push dec jae cmp add iret std out add xrelease and movsb test movb xchg movsb shr jb pop pusha test js les or inc stos and stos inc jmp cltd (bad) addr16 aaa popa lock xchg orb icebp push xchg adc inc and adc lea mov xchg cwtl push pop ret mov cs mov add in pop pop push pusha int3 lcall insl xchg in mov sub mov popa sbb jnp inc dec (bad) out cmp arpl int fwait pop (bad) mov ss pop addr16 push pop sbb and inc fmull or cwtl mov pop in jg fcomi mov pop xchg (bad) loop stos cmp in les lcall (bad) (bad) and sbb mov cli jmp and into sbb js fcoml cwtl xor xor jnp (bad) jne in sbbl lret cmp add dec xchg push test or (bad) jge xor xchg inc push pop push xchg lods das leave add or (bad) push pushf (bad) dec jae std clc cmp jbe sub repnz (bad) cmp dec mov jg andl adc mov adc xchg rolb and sub mov lcall xchg xchg jecxz insl mov xchg mov xchg sub sub mov add pop (bad) clc adc inc in (bad) js movsb out fldcw jmp pop dec scas sbb cmp inc enter push sub sub or and push lods ret pop dec push sub aas lret lods cld or addl out fsubr jg adc pop fisttpl loop mov repz (bad) mov repnz sbb fwait mov sub sbb xlat xor dec dec in scas dec outsl mov cmp mov push lea jmp xor or test push in jg pop fisttp flds arpl mov out ss mov lret mov mov ret ficompl jno and into scas out cmp in sub mov cmp shlb cmp es (bad) les pop cltd dec imul push in inc adc jp imul inc xor pop xchg pop or stc mov jl sub sub fstpl mov and js or mov xchg push dec popa loopne mov into ljmp nop int repz cmp push push dec cmpsb push adc cmpsb jbe,pn dec sahf adc pushf stos mov jp lods lret jge mov xor push out dec pop (bad) xchg fldt hlt jo pop notb imul cmpsb sub xor sbb mov mov mov arpl aaa dec cs fsubrs xchg fistp mov out adc repz dec push insb cmp scas cld lahf push xor and shlb outsl (bad) imul (bad) incl lahf outsb sbb push adc and cmp loopne sub xchg cmp fnstsw or mov cmp inc out out pop inc push pop imul push sbb push iret mov and inc mulb add lret mov pop jae icebp jno inc iret jae aaa icebp mov lock xchg jbe jbe pop jp and sub (bad) xchg cmpsb pop push sub dec int mov pop out out add cmpsb push fmull out or les xchg outsb push stos add rcll mov mov cmp (bad) movsl dec sub sahf bound gs dec clc (bad) pop nop (bad) jnp jmp iret dec cmpsl or push and incb pop adc lods jae (bad) jmp pop jg and sub sub xchg fstpl out mov mov aas mov scas inc mov loopne sahf cmp xchg inc insl in sti (bad) push aas rcl lcall sti or loopne (bad) mov je imul dec sbb pop fist cmpsl cli lahf mov scas adc cwtl sbbl imul pop roll dec and test push mov cs les and sbb (bad) lock imul mov cmp in mov mov and adc (bad) pop push aaa and ja lcall ljmp mov int and jecxz lods sbb aas pop push mov sub not push lcall and mov pusha mov add std rcrb and pop iret out ret adc xor pop sub adc mov xor mov (bad) xor enter sbbb jmp pop (bad) jmp sub cmpsl xchg and ljmp mov hlt jns push imul shr xchg mov xor pop pop bound sahf mov int cmc push dec push test out sahf fs repz jb in push insl movsb gs dec ret das jne out dec xlat sti and jb and cmovae mov jge cmp or je add outsl mov jns adc out jbe mov jb pushf push adc inc adc imul leave push out cli mov lret scas (bad) push pop in xor iret cmp dec mov jp mov and xchg push xor sbb ljmp mov dec push pop in clc out push push cld inc mul push xchg xchg int3 enter test sbb mov inc dec das fmull add jno sbb dec add out aas int3 test jne or movsb and cmp cwtl pop fbld movsl (bad) std cltd out adc insl popf push xchg dec and cld cli (bad) rcll leave pop jmp jmp mov (bad) cli add mov or je cld aaa je cmc mov (bad) sti lret jbe (bad) push (bad) fxam int fs out mov mov jl js fldenv out loopne fnsave in cwtl lret lret xlat and arpl sbb test fbld lock pop mov call gs mov jp ret stos add fldl pop pusha lret jp mov cmp popf fs cmp or outsl inc cld dec jl aad rcr aas mov flds pop push out dec xlat ret mov cmp out sbb stc fs lea xchg dec lock sbb xchg stos xor and cmp notl mov fdivs mov roll lds jae push pop imul lret jae adc and aaa jns,pt rcrb add xor xchg into jl lds lods mov sub jns pop and add pop movsb shlb jb mov test jle push sarb or inc dec xchg in jp or mov sub push cs jecxz imul test das xchg jno (bad) mov add into insl sbb mov cmove movsb dec mov inc pop xlat js jae sbbb sbb lret test mov aaa adc loope inc mov js push (bad) jb xchg aad ret mov sub lahf daa inc mov dec cs dec aas stos (bad) pop mov je jmp xchg push scas cmp push mov clc xor enter daa xor imul mov fwait adc nop dec rcl enter rcll hlt imul and sub nop mov jmp test xchg dec ficomp fdiv or mov dec inc pop rclb in add iret xchg pop scas cmp jle mov pop xchg add dec push subb out pmullw and lods mov push aaa mov sbbl add adc scas pusha mov stos pop xor leave movsl add xchg (bad) in cmp jmp or pop fisttpll jns test cmp push shl fwait test fwait in les push sbb push in popa insl cmp ss pop pop jmp mov daa clc (bad) jle mov mov lcall cwtl stc sbb rorb lods mov enter ja pop out push aas test jno xchg or xchg scas rorl inc movsb shrb push imul xchg push (bad) int aam inc xchg adc xor test push cmc and stos lret and jmp paddd xor push add push lcall sbb jnp push or mov mov shrb pusha mov mov ss in mov aaa and dec xchg aam xchg stos (bad) push jmp scas shrb orl inc lods ja mov pop stc repnz das mov jns aad jle mov les pusha rcrb or inc scas add mov jg jo test stc sbb inc in shl test jmp adc rorl notb xor pop adc push mov fcompl mov mov pushl pop push mov lcall inc js sbb lcall mov xchg mov adcl (bad) pop cld sar add pop ret rolb leave (bad) add lret stc sbb push inc mov add adc imul fwait jnp repnz pusha inc lods or and xchg (bad) outsb fdivrs mov and insb icebp mov xor push lret pop add lds (bad) adc mov int3 mov jecxz mov cli fdivl sub leave jge dec pop sub call or and sahf cs in iret aaa jge sbb loopne jl scas hlt xor (bad) jle in mov push (bad) push mov pop insb clc pop shr sbb mov push pop clc push mov cmc in loopne dec in out mov mov xor movq loop jle adc xorl lret cmp repz xchg xor gs sub dec rol mov cld scas icebp daa mov ret arpl dec mov fnstsw outsl test inc sub aas push adc inc clc inc mov xlat mov pop fwait or push pop jmp pop in pop add std cltd lahf push test xchg in ss lods je daa fildll and aas sub test adc mov movsb das pop rcrb sub bound jge xchg push out test (bad) (bad) mov cmp inc mov jecxz mov sarb adc push jne (bad) fisub adc test in push sub movsb mov loop mov mov add leave test mov cli jnp xlat test fcmovnu mov xchg push jbe xor inc xchg aaa sub lods mov adc or mov (bad) lock xor jo cmpsl jecxz jnp and sbb stos push in push sbb daa pop pop loop hlt jmp jne leave flds aaa jmp mov jge sub inc xor (bad) mov cmp xlat in inc ret dec pop call push addr16 imul mov push sub enter or adc shl cmp push sub gs (bad) add clc int3 sub push rol pop int3 dec jae std aam pop (bad) iret pop add (bad) sahf mov cwtl add xchg mov pop mov mull aas add lcall adc add xor or insb jo xchg adc sub imul mov cmpsb sbb daa dec lods shrl mov dec sub (bad) xchg push sbb call jg andl cmpps out pop or fimul xchg push push dec jns mov pop out movsl scas jle jns jnp push call add pushf pop or dec cwtl push and sub test cld add daa mov xor xchg jge ret addl lds inc pop in mov (bad) sub sbb ret fwait pop or negl xchg mov or add mov in pushf out clc sub mov fs or (bad) mov leave (bad) scas pop rol sbb mov xchg sbb adc mov hlt icebp mov (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas aaa push fiaddl mov test add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc popf or (bad) mov lret mov mov pop jbe push xchg imul mov pop mov arpl sti std (bad) out mov adc add jl add (bad) xlat jp inc or lds inc jno sub cmpsb iret mov out loop (bad) leave inc sbb ret cld push movsl push out (bad) cmc or pop (bad) push nop mov add cmp push jg adc out rorl xor adc cmp mov outsl inc inc fimull xchg lods in push mov ret ss shl cmc cmpsl inc mov mov stos insb bound xchg dec lds lret or pop clc scas adc stos add int3 pop enter sbb jl mov in inc inc or sub mov idivb aam xchg sub sarb mov adc or push pushf js mov cmp fdivl sbb leave (bad) mov bound jb test sbb or jge inc mov sbb push fstps (bad) stos movsb push loopne lcall std imul clc jl inc mov adc mov jbe mov xor fcompl sbb out fwait popf into test dec adcl (bad) cmp cwtl push ds out jle scas dec or ds jg stos dec das cmpsb insl xlat dec (bad) aaa xchg and icebp aaa (bad) cmpsb pop into bound dec fbstp dec mov jp mov popf adc out (bad) idivl push jmp jge mov andl lcall out in mov sti sahf dec lret in mov aaa lcall cmp testl imul repz popf loope dec (bad) in sahf xor test add inc dec jp repnz sti (bad) (bad) mov call jne stos iret loop mov inc lock inc rcrb mov loopne cld pop or das mov push fidivrl ret jnp mov int3 mov cmp cli aam mov (bad) cmp stc inc adc sub pop sub (bad) xor arpl sbb jbe rcll lds or or push aaa sbb jl icebp in (bad) mov fs jle add sub sbb fldl sbb in sbb test xor jno sahf mov push cmp shrb mov (bad) arpl push push test xchg lods pop add negl sbb bound aam add mov and adc mov negw mulb ret jns dec jbe jge pop daa dec add sbb pop lock dec les pusha push push into cld jl sbb es cmp mov lds js jp xchg cmp sub mov xor cmp sub push or orb ret jb pop aas insl dec in jecxz mov imul subl push inc xorl cmpsb sti jl into xchg mov adc mov jo add fmul add int aad dec jp test arpl push pusha scas mov ds adc mov rolb cmc xchg cwtl (bad) loop aad push dec mov jne inc push test mov pusha jl hlt cmc lock push es xchg enter pop icebp (bad) sbb pop adc dec jne mov shlb jbe loopne dec test and mov call lret dec fistl pop mov insb fwait imul loop push jl lret cmp stc ficomp arpl push add push pop out push jne sub xlat cmp mov pop sar fucomi inc xor pushf adc lock lahf ja pop popa lret jmp ja xchg sbb in lret test fsincos mov dec sahf movsl cltd in push push mov push adc xlat fbstp lock out sbb xchg add sub jl orl ret inc mov cmp outsl mov lcall and test adc arpl mul dec fwait xchg or pop leave cmp sbb outsl test stc fild xlat addl push loopne jp fstl sub bswap or xchg inc mov cmpsl xchg sub dec test and scas push jmp je sub dec xchg cmpl and arpl adc test xchg clc stos sbb in jne push scas jnp lret in mov mov stos ss jns in adc mov (bad) push sub dec fs out adc mov mov in lret in pop fldt mov or (bad) xlat or inc pop pop aas mov jecxz jno mov in mov jne,pn pop loope lds jg insl fsubrl or xor xchg sub pop inc pop mov call mov sub outsb test aam or into loope cmp sub mov push lcall dec je pop in ficoml mov ja sub ss in jmp cld xor inc ret cmp test dec negl neg xchg faddl pop jns sbb jge fnstsw rorb scas fcmovu jecxz xchg mov mov popf push adc mov mov (bad) scas out or dec (bad) cmp stos xor xchg scas cmp pushf lock mov push sub rcll fnstsw fs push sbb icebp shll mov add or mov xchg in mov (bad) fwait mov mov jb mov xor int3 push sahf or nop cmp push xor push inc lahf cmp divb (bad) out loopne popf aad pop int pop cmp cmp mov push inc movsb ret sbb mov out xor or scas mov fmul inc lea mov ljmp push pushf sbb fnsave lea lds jl mov aas and jg inc and test in fist cmp or fstpt xlat jmp dec add add adc adc sbb out adc in add lock fbld aad push mov out xor movsl mov mov fnstcw or dec repnz mul inc jg add outsl jle bound dec cmp stos mov dec loop arpl jecxz movsb rcrl out xor xor cmp push push push mov mov add cld jp ret frstor mov test mov neg ss cmp stos into out popa jno mov lcall aam dec inc fildll cmp jp sub aaa jp lock push in in inc jo sbb push test (bad) jl movsl xchg fstpt mov mov or (bad) xchg inc jae mov add dec movsb cwtl test xlat (bad) lea sbb sub mov mov mov rcrl jmp outsl mov xchg dec adc sbb sahf xchg inc (bad) adc cmpl (bad) shr iret add pop out movsl setge jp pop push je mov add arpl popa fnop (bad) leave lock fs clc add je lret mov lods fidivr test repz and cwtl fsubp int3 imul and arpl outsl repz int pop stc movsl jp (bad) jbe jp imul xchg sub out movsl adc cltd out ret out xor mov nop pop insb pop cmp movb out jle cld cmp add or sbb fldl xchg (bad) gs std pop xor insl jbe and dec xor mov pop fimul pop jno insl or arpl push bound cmp ljmp pop clc inc sbb mov adc inc (bad) dec cmp and xor push js xchg pop scas or push sbbl dec int3 push add ds xor fsubr into lods inc fnstenv cmp in inc mov cmp data16 test cmp sbb ds pop dec sbbb dec mov sti imul test jp pop clc mov mov dec repnz ss jae xchg insb or es mov fstpl (bad) cli out out lock push out cltd in cmpsb pop dec pop inc outsb mov xlat pop je ret fsubp cmp out (bad) in mov or fsts add dec inc cltd mov daa (bad) cmc cmp test sti push paddw push loopne (bad) fcoms xchg or and insl adc (bad) in dec scas inc out sahf orb jne ror jns adc mov jecxz xchg inc sub mov or mov test lea jmp sub out dec outsl mov fs lret mov rorb stc daa mov lods sub lahf cmp mov jecxz dec mov clc mov inc sbb fcom bnd jae mov pop cmc test mov mov adc mov mov sbbl push fbld stos dec ret icebp xchg dec (bad) dec mov cltd inc dec push dec nop jle pop sbb (bad) gs rcrb xchg adc dec stos (bad) pop cmp (bad) jbe mov sub dec shrb and js in shrb nop ror aam sub push push adc je mov sbb jno xchg ja test js (bad) lock fstpt jne inc popfw data16 das push push mov mov mov dec rcrb jae cmp insl jae pop gs inc dec mov adc cli fwait sbb cld pop mov test ds push (bad) jmp push gs xor das and push adc cli gs sbb lret aas int in xor inc push outsb cli sbb fild mov sti cmp push push or in mov data16 jnp xor sbb out add ds pop in jle sub mov pop test mov bound adc in add mov xchg or testb pop mov ret test mov mov stos xchg xor cld adc cmp movsb outsb and fistl and cmp addr16 js out inc and push andl test (bad) (bad) pushl repz mov pop aaa test int loope out enter push cmp cld rsqrtps es sbb mov sbb mov and push (bad) imul add fsubr pop repnz pop in inc add and mov and jo aad (bad) or loopne jno push mov dec cld or xchg enter jb pop jle (bad) lock (bad) and dec movsb aaa lods cmpsb lret xchg mov push or push adc xor mov push shlb jnp pop (bad) (bad) enter pop aad je sub out cmc jnp and icebp mov lock sbbl push or mov (bad) jg int xor fwait xchg (bad) sbb sub dec test cmp sahf cmp popa cmp rorb xchg lods adc jne jmp ret cmp pop mov test add fisubr sti sub es sub jle shrb inc cmp ljmp adc xor push (bad) mov cli mov add and punpcklwd lods nop mov mov aam in mov das pminub mov xor rcll cmp (bad) cltd xchg test sti lods loopne (bad) jae fcompl fisttpl push test dec mov js jmp dec shld pop out push mov and cwtl xor pop addl sbb push adc icebp jb xchg pusha inc imul mov dec fidivr stos sbb pop inc mov and xchg cli es jb mov cmc loopne scas mov out push fistpll pusha out inc cmpsl nop xor push push add adc scas push dec push sub adc fistpl and les dec or test xchg cmp jns sub mov cli mov sarl pop ret xor xchg cs pop xchg mov xor out xchg and insb mov pop fistp rclb out mov wrmsr mov or scas cmp (bad) mov es jle lret jle into adc aad imul jo movsl jo and mov aaa sub pop mov ljmp repnz cmp call daa lret or js (bad) hlt loope mov pop cmp orb out mov ret (bad) xchg fidivrl mov (bad) sahf or jl cli pusha test dec ja sub loopne xor lahf cmpsl inc int3 lea stc xchg inc jle js mov sub loopne test sub mov sub test lods call popa lcall inc sub fnsave mov pop loopne ret stos mov dec loopne ret dec pop cmp call mov icebp dec sarl lret push sarl (bad) mov pop lds (bad) fnstsw shll xor jb scas and fisubr fstps dec mov int mov mov adc push inc in mov mov (bad) jb cmp lock mov jbe dec into ja mov and jp out xchg lods iret or jecxz push lods cmp hlt lds add push jmp cs mov cld je or jle dec outsl pop movsl pusha inc push out cmc push sar or pushf sbb decb mov push mov in push arpl repnz stos xchg adc inc fsub popl and mov sahf add jmp push xchg mov es pop test scas mov daa jg inc or xchg test (bad) (bad) jge push sbb mov bnd xchg mov push mov (bad) mov inc or sbb push subl mov push xchg test int push loop cmp orl jp mov jns add cmp adc dec lods sbb dec fidivrl adc daa je inc pop jbe movsb repnz dec cmp popl outsl push imull out ret test into mov inc adc push pop xor dec aam js (bad) ja lret push je dec adc pop (bad) cld into fmul xchg les (bad) pop mov or push clc scas faddl pop mov adc mov mov lds shrl neg movsb xchg push mov dec test adc in fwait mov movsl loopne fdivs cli adcl cli int dec and xchg cmc imul cmp and mov inc jmp enter jne movsb mov lock xchg adc xor aad inc lcall pop aas scas dec gs xor xchg loopne mov out mov ret jbe push xchg push hlt jbe fs insb out mov or nop sub insb (bad) repnz xchg and in dec dec mov loop mov xchg xchg (bad) (bad) mov xchg sub push xor jg inc movsl or xchg fmulp repz (bad) int cmp mov mov outsl mov int and mov jecxz rcr push (bad) fs test lea mov lock adc js lea (bad) sbb mov sub and std rcr repnz (bad) xchg mov push jge mov out jnp out sub jns fcom mov and stos inc jge roll faddl shrl lret (bad) lcall sti adc mov dec xor xor ljmp inc xchg adc pop js es sub push sub ljmp (bad) cmp jge jl cmpsb enter or lea jge aad push push mov dec dec push jae push adc inc mov cmp cmp add clc std or push sbb cmp sbb jae,pn (bad) inc add out repnz test push push cli jno jmp and ss ss and jnp stos es jno mov insb popf ja and out mov inc inc lahf dec cmp iret mov les sbb jge aam pop xchg jae push stos repz outsb mov (bad) mov hlt mov out cld jnp xor movsl sti pop ja rorl les push cld nop iret les inc cs fld scas fcomps pop sub js add pop enter push mov (bad) fs iret jnp outsl sbb imul sbb fnstcw jge and (bad) mov out xchg loop mov stc fsub insl push ja lahf rolb incb ss sti mov cmp iret add mov push add (bad) jbe (bad) xchg pusha push inc xlat outsl insb cli mov je sti aaa pop ret leave loop add mov inc lahf mov in fisubl pushf adc movsl or gs add aaa mov sahf ss xchg inc jns mov inc imul incb scas loope cmpsl cmpsb lcall fldenv sbb fwait cmp jbe add scas sbb pop and (bad) loope xor aas fsts xchg jbe xchg aam cli aaa push jmp mov imul out push mov into iret push iret sub adc or sub pop das test push jno mov mov (bad) cli or dec xor js mov int test sbb mov cmc sbb push lcall pop pop mov cltd xchg rcrl cld inc in mov jnp daa ret fwait (bad) repz jmp dec lret mov jg xchg adc mov sbb adc or dec repz xor and fimul push jg inc or sbb int popa mov fcomps xchg negb dec ja cmpsb cmp repz test mov icebp loop lahf jbe loope inc xlat jmp repz cmp push sahf cmp je fnstenv (bad) mov ret mov ljmp pop sbb (bad) and xor or dec mov ret rcrl or pop mov push negl jns push test mov push daa lock loop xchg pop jns sub clc mov sti adc test arpl fldt (bad) notl fldenv lret out sti pop sbb lahf cmove xchg aad push pop push and adc adc loopne repnz ficoml xchg (bad) mov push cwtl daa jno pop sub (bad) push hlt cmp sbb adc (bad) stos inc mov inc dec add jae ret gs push xor mov repz adc xchg xor pop les loopne ror mov and or jecxz or cwtl bound (bad) pop mov daa pop cld push loope hlt (bad) sub repz add sar sahf call pop xor aaa push push add xchg call loopne inc addl pandn dec jge das int push repz pop mov mov lods xlat and dec sbb xchg cwtl cli fwait int3 mov pop mov pop jns pop jbe or cmp data16 add subl fsubs stc dec test inc leave add sbb sub add push leave fnstcw sub cs insl xchg mov ret or pop cmc or dec pushf xchg inc fiadd xchg sahf aam jae stc movsb push jnp jl sbbb xchg push cmp daa mov loopne push test ret (bad) dec jnp enter (bad) sub or push jnp insl (bad) xor outsl fst outsb dec pop mov stos mov (bad) (bad) in sub and lcall sbb (bad) mov mov shr mov ljmp jnp aas xchg ljmp cld ds or xor push pop sbb repnz pop enter (bad) rorl (bad) dec (bad) jno rcrl aaa ret roll xchg xchg push pop ds (bad) repnz out xchg pop xchg gs mov dec push mov dec movsb data16 shl pop and adc or mov push insb mov mov lea mov dec scas rcr imul jmp push add test js insb dec cmp add xchg adc (bad) mov das divl (bad) xor xor mov js pop mov fcompl xchg add int sub loop pop incb adc cmpsb push adcl divl scas test mov orb pop lods je lcall mov aad jne mov insl or shrl (bad) jo xchg xor jo push rcrw mov or ja sbb shr les mov add icebp sbb ja sub pusha daa cmpsb cmp test xor lahf jmp xchg sti add jno pop cmp les xchg sub mov pop aam andl ret mov pop outsb lret mov cmpsl cmc scas (bad) mov es mov ror inc mov aas xor imul dec test mov mov movsl sub push xchg ret pop rcrl rcrl pusha es dec inc mov mov and mov add or xchg out nop stos (bad) icebp pop cmp stos dec ss aam mov xchg mov fsubrs mov repz jge dec mov in adc dec xor popa (bad) sub and mov pop pop orl std insb (bad) int in mov movsb hlt xchg xor pushf push adcl push inc sahf push and enter fidivr adc dec bound jmp jae shl es cmp and fcomps push inc hlt scas pop or lret cmpsl (bad) repz je mov pop flds (bad) cli insl and fs popf sbb fwait xchg push pop (bad) std gs dec es push les add cmp clc std mov and jnp mov and fidiv fs and mov enter xlat cmp iret dec sbb stc and mov lret xchg jae int pop rolb flds jne cmpsb iret pop cmp adc or aas pop outsb xor fldt cli roll cli aad ja inc or jns test popa xchg test mov adc pop call pushf (bad) jae jne jae adc mov add jb push xchg sbb pop inc push xchg fisttpl fdivrl xor pop rcrb cld es mov fimul mov push inc dec sahf (bad) je jl les mov out fstl dec add inc stos jno pop xchg pop jmp cmp dec mov test lock ret ret mov mov pop test dec mov scas cmp pop bound mov arpl jge rorb in pop jno (bad) adc and mov and sub adc lea mov xchg cli jge or pop jo xchg fstps lcall sti mov cs arpl loop inc imulb (bad) fs imul dec sub call lock enter mulb sub sti mov cmc jl xchg pop ds cltd loope pushf adc xchg mov xorl sub rorb mov mov sbb (bad) leave stc cld adc adc and adc lcall push cmpsb insl (bad) icebp push aad es pop daa stc (bad) jbe sub dec jns cmpsl mov fwait mov int ficoml mov call in cmp jns in into pop xor adc pushf mov stos pop and pop (bad) inc sbb xlat push nop popa dec leave pop jbe insl mov mov cltd push (bad) cmp jg pop cmc popf mov call fcmove pop lret inc dec incb jbe cmpl jge ror jge cmpsl in call sarl sub sub mulb iret add adc int3 xor xchg cmpsb fs cmp cmp stc popf or imul dec insl sub fs add leave lods or out mov out in pusha jae add xchg and (bad) lds dec cmc cmp sti add cltd mov subl xchg lods mov lea stos das and pusha lahf sub jae dec lahf clc out push sub mov lock mov mov cmp and enter pop rcll xchg stos (bad) lret sbb lock cmp pushf stc ret add cli outsb mov sbb fildll arpl sbb pop (bad) jbe,pt xor mov lea out in sbb xorl sbb jg pop xchg inc mov outsl jns push insl fisubrl shrb addr16 mov push pop xchg aad inc ss test out xchg push push mov js push push (bad) jg hlt jp std and mov push lods or rclb xchg test rolb (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add aas lods xor xlat xlat lcall dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and popf insl arpl aaa (bad) daa (bad) insl dec out out jecxz iret sub and sbbb out pop inc sar arpl rclb mov movsb xor sub jge cwtl mov mov inc pop pop pop pop repz rcr clc mov hlt mov pop mov addb scas into ss rcr pushf inc jae ret mov movsl mov sub into stos mov push and jnp mov popf fs gs inc cld outsl sbb repz push out pop shrb mov (bad) and push mul sub cwtl fldt pop sub nop xchg sbb fdivrs mov add test dec jb xor in insb add negb daa xchg inc fwait dec pop nop sbb out (bad) movsl cmp fisubrl adc jns mov test dec (bad) inc mov ljmp mov fimull xchg mov (bad) mov pop xchg lret aad mov pop cmp pop idivl push into int call mov ss lods mov out hlt cwtl push fldenv sbb stos mov xchg add mov pop or adc sbb pop mov dec les jl movsb jmp cltd xor insb sti mov imul out fwait xor sbb pop xchg lahf stc cld jg push add jecxz cmc xchg xchg push popf xlat shrb mov push shr sbb lea stc lahf aam addr16 add imulb mov or sarl push or and mov repnz shll outsb pop ret mov sub sub or jge pop mov mov das or mov (bad) xor xor mov leave lods sti aam adc mov push mov xor insl cwtl jl and leave test pop dec inc ret dec inc fisttpll test fstps fs and jmp adc xorl and cmpsl in push pop mov cmpsb pop sub push bnd aaa enter push adc or xchg pop and fstpl (bad) mov pop jns xchg cmp insl in sub lds loop push adc mov adc mov sbb dec (bad) pop mov cmpsb cmp mov lcall cmp loope jle gs inc jo mov es testl xchg xchg sar and clc and pop push movsl les pop mov mov and loop imul xchg in mov loopne inc test cltd and in or mov cwtl inc insl outsl push scas push or jns ja ret pop and push sahf enter inc mov test xchg inc inc jno jle inc aam rcrb xchg je push dec daa xor cmp cmp pusha mov sahf mov test cld push xor jg mov aad mov xchg shll out cmp push fxch adc sbb xchg push and rcrl inc fsubp lea add stos adc xchg xlat mov push lds fucom pop cmpl je push in pop push movsb (bad) and add in divb subl movsb inc mov sti imul sbb push or pop sub aam lret cltd out pop clc jecxz dec sahf cmp push out loopne jmp cmc push roll scas adc mov inc push lea lods dec mov push pop pop pop jnp fidivr outsb outsb mov fsubs sub mov dec mov push dec xchg or inc insl (bad) scas cmp xor sbb or jp push cs inc in cmpsl loopne push push sbb sti cwtl inc sbb inc jl jns sbbb cltd and insb fcoms mov cmp stos pop daa adc popf int clc mov movb daa jl cli ds repz adc and cwtl mov mov xchg push in jno lahf mov push out push sbb xor (bad) enter dec outsl cs xor sub xchg or mov dec jg add mov aaa cmc std sub xchg sbb add aaa pusha addr16 xchg lock jge sbb mov inc dec daa jg in xchg push cmp mov insl outsl (bad) jb and mov jl add out ret mov or and (bad) flds xchg adc adc hlt rorb dec scas mov decl lea mov loope xor mov jno xor and push push test mov push pop leave in out mov test sbb enter daa test dec std adc into mov ror add in push xor pop mov nop mov cmp sbb ffreep rcll (bad) imulb push add dec xchg jg push mov push inc outsb mov dec mov and (bad) pop lahf ret insl sbb cmpsl inc xor repnz or sub sbb or jmp fildl test mov inc adc xor fisttp mov stos mov es and int3 (bad) lret and inc mov pop push jle ss iret cmp adc push jle inc enter out orb dec pusha iret divb leave lret mov mov xor js hlt cs push orl daa pusha leave mov insl mov icebp std sahf notb enter cltd daa xchg push repnz das and inc roll mov mov (bad) push je leave in pop xor cmp mov push fnop push mov lods pop dec stos imul stc mov inc shll xchg or and call xor call lcall divb mov dec ret mov aam test lods sbb cmpsb das push sub in out push xor push mov dec int cmpsl sbb sub lret sbb lea test jmp mov add cltd out aas xor and (bad) cld loop inc stos rclb lods insb sbb movsl mov in das arpl ja fisubl outsb xchg data16 cli push das dec scas stos cmpsb mov loope loopne push fisttpl ljmp es movsl or push push pop push out add and sub pop mov xchg lea sub rcrw dec mov dec mov movsb fsubs iret jns or pusha adc mov xchg (bad) insb push aas sti inc pushf lahf pushf sbb mov movsb xor mov insl outsl xchg pop inc dec sarb (bad) in mov popa push dec adc push shrl scas pop push cld call jbe out std (bad) out adc pop std or jp addr16 sbbb mov mov (bad) jno (bad) (bad) adc lcall (bad) jl test inc and inc push (bad) jbe lods fldenv frstor mov icebp fdecstp int shll nop adc pop lahf push jg loop adc push movl mov rclb popf out ret adc inc push int xor outsl jecxz mov jno movsb xchg mov xchg and jmp arpl inc sbb add xchg jmp loopne (bad) mov lea mov stos movsl div in insb ret and rdpmc loopne (bad) iret add xchg pop es mov fcoms lock rcrb or dec mov jbe xor or in cmp and (bad) push xor popa adcl dec aas mov (bad) aas jns mov adc (bad) sbb fdiv jno xor xchg add into (bad) repnz mov ss in mov (bad) jno mov cli cmp js dec cmpsb mov roll cld pop push loope movaps jno inc xchg mov enter cmp insl xor push xchg jbe test adc mov ret and jno test data16 mov imul mov les adc xchg jb (bad) out out xchg (bad) (bad) out xor or test add jo popf arpl jmp cwtl cld or ds mov adc ss and loopne out cwtl lea adcl loope add ficomp std dec imul mov sbb xlat out (bad) js stc cmpsb into dec scas cmp in mov and popa mov pop shrl push aam insb mov into or fstpl lahf sbb stos lahf or out fisttpl pop pop inc jmp test mov mov xor or or sub out jnp add stc sbb sub and inc cmp jg mov mov mov mov mov test mov add ret add push add (bad) scas sbb mov xor xor cwtl loopne rdtsc std cmp bound (bad) loopne loop pop andl (bad) repz xchg out (bad) xor (bad) cwtl xor stc cvtdq2ps test enter (bad) adc pusha stc (bad) push push add (bad) pop js mov imul es sub dec addr16 std inc jo pop push push jecxz pop adc stos subl pusha jne rorl js es push fst je fadds (bad) in sub xor inc aad cmp cltd sti ficom cmpl cli adc test add jne pop rorl sub cwtl pop cmp lcall icebp in call add imul pop mov inc shl cltd stos pushf pop cmc adc nop dec cmp aas sbbl call inc dec mov ja lcall xchg (bad) repnz mov xor ficoml mov sbb jno out loope inc (bad) es push xor out jbe bnd push ds adc in (bad) lret push and sbb movsb mov sub dec movb out adc stos negb cmp xor shl inc sbb std loop pop fldenv cmp jle in ror movsl iret mov test inc out stos and fistp push push pop addr16 ds pop mov jnp and push mov dec fwait pop xchg sbb sub mov scas jg test notb mov pushf jecxz push add sbb xor mov xchg in loope push stos inc ljmp xlat add mov lock cmp or xor jl test cmp jo nop pusha loopne int3 loop hlt cmp ret xor push cmpsb outsl push lds mov jmp cwtl fildl shl mov mov jo insb imulb rcll repz xchg push test in push nop mov addr16 pop push push insl aas (bad) sbb sbb arpl lea dec xchg and cwtl fistp pop es inc pusha sti xchg pop iret mov cmp enter add insl xor push scas xchg sbb mov sti cmp jge out mov sub (bad) pop fildl adc mov loope dec mov xor xchg (bad) sbb daa movsb sub sbb jno aam loope mov jns rorl stc into inc out mov mov les dec nop int3 mov scas pop lret int cmpsl dec dec jae mov bound stos dec (bad) pop pop sbb mov lods adc (bad) mov mov sbb add and fmull adc jge imul inc pusha inc jne dec incl add out mov inc mov lret sub xchg jns mov aam push lds xchg sub mov push mov cmp or adc mov mov in shrl ficomp (bad) sub pop or jge into repz pop and dec mov or inc out inc dec pop outsb movl addl lahf cmp ficomp and push adc mov lods in lcall int pop mov idivl mov repz push adc fs fsubp (bad) neg das inc jns aaa jnp lock mov inc movb xlat mov inc push mov mov subl test dec dec mov inc jnp pop jecxz scas xchg in adc push jbe sub xchg nop scas jmp int3 adc pop pop pop aad test fcmovu (bad) jnp (bad) icebp inc mov or ja hlt cwtl pop lcall pop cmp jle hlt mulb sarb sub outsl adc sbb pushl adc inc sbb test out insl test repz mov loop in mov mov shrb jo,pt mov lds inc in jge pop jge push pop out das xchg mov js cmp dec inc stos pop and adc adc loop fs cmp jae imul adc mov out mov sbb test cld xchg push xor add lahf rcrl mov push push mov leave lcall int push inc je adc clc mov (bad) inc out sarl fsubs sub push lock cli dec xchg inc outsl xor inc ss ficoml push push adc mov push sbb scas dec (bad) pop add mov orl stc popf repz adc add push fcoms mov mov fiaddl jno dec cltd jl cmp adc pop popf add popf jae sbb je mov xchg pop cmp push xchg dec je cmp dec stc es sub sbb movsl jne (bad) jae adc movsl sbb (bad) jl and pop adc ftst mov jbe ficomp xchg mov mov mov mov mov nop scas (bad) jbe mov loope or or jecxz call (bad) cli or push jge mov aas cmp mov lods inc or subb add in pop int fldt pop icebp mov dec lods fbld test inc outsb sub inc addr16 (bad) fcomi enter jne aaa pop test ljmp jl xchg jp push dec adc inc mov sbb xor loopne rorb xchg cmp fnstsw nop fs mov adc jmp inc das pop int3 xor dec and in iret jmp jge movsl inc cmpsb and and add cmpsl test arpl push mov (bad) popf jbe fsts mov sub divl push out jb and push imul or je cmpsl mov mov jb inc je das (bad) jb jmp lcall dec std sub ja push (bad) pop mov xor test inc inc cbtw xchg es lcall nop mov in out and js cwtl cmp mov scas push push into fwait outsb push sub ds shrb icebp pushf mov lods jne inc loope and mov dec test mov fsubr add adc popa pop or out inc add xadd fildll or sub cmp and inc mov sbb aaa mov or dec inc repz std push jns fnop mov fisubrl adc inc lds loop mov mov sarl fs arpl movsb in insl movsb dec jp (bad) bound pushf repnz fisubr xor (bad) (bad) jnp and fwait pop aaa loop lret fdivr pushf (bad) and cwtl je cmp pop or add movsl push lods fild fcomps (bad) insl xlat insb or jne sti push mov mov jbe add xchg pop icebp xchg sbb sbb out loop cmp shrl lret sub sbb push add xchg sbb popf lods mov jecxz dec mov adc cs sbb test sbb add mov inc jmp mov push test orb in xor pop rcl xor mov lds mov test or jg loope sbb mov lods lcall mov les cmp mov fisubr inc loope inc fdivrs ss xchg test call xlat xchg dec adc cld adc lock sub mov cmpsl xor cld and lcall mov and in fwait (bad) xor dec mov into inc repnz mov pop mov mov mov push cmp (bad) mov fadd pcmpgtw nop addr16 dec call fildl inc pop jl push inc arpl sub stos mov mov push inc dec lahf loop leave popf fs int jbe fs mov stos push sbb je dec pop xor sub cmp adc aam or jns out xchg mov pop inc shll fwait test fcoms notl daa mov jo nop aam outsl in (bad) mov mov or jns sahf icebp push fwait aas (bad) ljmp add push mov push ret in stos sub imull test sub xchg pop or add out pop push mov mov mov push es iret and fs or mov add mov ljmp dec roll call icebp addl scas inc mov adc and das push aam cmp mov or mov mov mov adc fwait hlt pushf fildl cmp rcrb mov pop sbb mov out add lret sub aad add (bad) fistl rorl or dec fistpl cld and gs (bad) ss xlat sti and sti pop mov pop or sbb push mov lret jnp and mov jne (bad) fimul cwtl add jnp push dec fimull int3 rorb ljmp lea xor lahf adc outsb lea mov data16 pop adc ret sahf fimul inc add aad ds or cmp cltd add je cs jnp fwait stos out ficompl es in dec dec sbb stos dec lock data16 outsb dec lret push fdivrp add inc das jae adc ss pop mov sbb ljmp hlt pop mov mov (bad) out iret dec pop cli nop loop adc mov and (bad) jae or data16 push mov lock cmp in arpl and ret jbe xchg repnz imul fs popf ret jns fdivrl dec xlat and pop inc and cmpsl xor cmpsl fmull sbb dec ret fwait aam xor mov sub daa imul sahf nop gs mov rorb xchg rcrb addr16 cs ljmp scas stos mov dec scas inc cmp dec arpl and cmp call shrl call imul and icebp adc mov or push jnp xchg pop mov (bad) fbld data16 or push (bad) stc push rcll mov pop aaa loope rclb pop je rolb (bad) rcll push adc or mov pop mov div cmpsl ret xchg enter clc push xchg mov lods sub pop addl lea idivl jns xchg push or sub rcrb jecxz fistp adc fdivs inc lret sub fnstcw push add jl test inc push xchg or mov mov adc fdivr add pop movl lds stc in aam into fnstcw aad jne pop gs outsl hlt maxps data16 jecxz jle lret lods lret push pop ret mov stc push ret and mov fsubr mov jae mov push pusha push das stos inc lea or lods xor add sar in insb mov sbb or mov jp leave adc jno add xchg sub push imul mov mov mov lds clc adc dec outsb push in sbb xor or ret pop pop and ss push cld addl cltd xor cmp and sbb mov loope loop cmpl mov outsb inc jecxz bound sbb push jg xor movntps or push xchg push mov mov cld pop stc xchg push mov stos aaa aad mov adc sbb icebp mov cltd sbb ret test jmp adc addl popf sti adc jecxz or sbb loope inc add out fmull cmp fcmovu or pop repz pop mov insb cmp cmc and mov movsl jo cwtl cld daa pop int3 sbb and jbe push (bad) inc cltd rcrl inc scas nop xchg or sti jbe cli call or sub fst xchg jge outsb outsb mov xchg ds mov scas aas lcall inc mov sbb lds jo mov mov test cld mov push sbb xlat repnz sbb jbe pop testb fidivrl rcrb and sub enter outsb dec xor sbb inc or xor adc push mov dec sahf call sarl paddsb insl cmc dec (bad) xchg pop test pavgw mov mov xchg lods rol xchg (bad) cmp pop je mov mov fs je mov lods data16 faddl popa xor jecxz push shrl xor add push out pop xchg or fadd test adc dec mov test pop jecxz dec cmpl xlat pop (bad) or mov sti repnz lcall xor mov in add pop jne pop mov daa fdivp dec sbb sti inc mov pushf fs cmpl mov adc hlt popf push aaa lcall scas xorl sub lahf sub push xchg add sbb sub or xchg out fisttpl nop je arpl (bad) ljmp xchg and cltd (bad) jbe or fdivrs in cwtl aaa cmp and sub and inc cmp jns adc xchg lret pop mov cmpsl in fdivrs xlat aam roll stos jecxz out jg arpl lahf xor test daa jle scas push ret xchg mov fsubs push mov and push jb lods dec mov loopne les sbb movzwl fwait inc jg mov mov aam pop int3 mov mov movsl data16 jmp jo adc push dec xor adc inc bound pop push jne push test jnp push int3 inc mov jmp jmp inc cmp pop adcl adc lret xchg stc ret add cmp test adc mov jmp (bad) testb jb int3 pop push stos je jnp pop ret mov test clc dec and xor test jecxz cld test dec push dec aaa cs sub and mov sti daa (bad) xacquire js js je sahf fsubrp mov mov mov sbb in loope mov sub jns cmp mov loopne test add cmp xchg sub out inc fs push sub xorl (bad) lds lods xor outsb or fadd sarb div addl js jae popf mov scas int3 jo or repz or mov aaa cs push mov imul roll lea pusha stos scas sahf mov pusha mov push pop inc aam mov sbb xchg mov sbbl and (bad) push (bad) jnp daa lds mov dec loop add fldenv outsl xchg jp mov pusha jmp adc jle mov leave push gs push mov mov cmpl mov sub jmp pop push pop mov cmp fldenv add push and push push lahf sbb addr16 movsb xor leave call push std sti shr sahf (bad) or push push push add sub adcb mov push out pop cmpsl xchg outsb pop mov mov outsb jbe and (bad) or xchg into shr lcall jnp cmp mov ljmp add adc loopne or cmpsb xlat adc negb jl (bad) mov push imul sub push fwait loop pushf (bad) std dec push cltd sar add ja adc jo push push sbb mov sub mov in cltd mov mov xlat (bad) and leave or push or jl lahf cmp call popf in xchg imul mulb xchg xlat mov insb jl push push or mov stos mov mov test in inc mov inc dec jl push sub icebp push jl (bad) outsb pushf cmp sbb or add add in test xchg inc mov mov gs mov fmuls inc (bad) push push divl pop lods inc gs repz dec jne nop cs hlt loopne,pn dec mov xlat lret mov jns push push aaa xor insl push push into inc pop cmp fwait out jo stos int sub and das mov leave into xchg mov test rolb sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas push je dec wrmsr in add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait insl sub fldt mov scas gs aaa mov (bad) addr16 jae add imul mov rclb in jmp imul or test sub adc push popf fistpl cmp es xor (bad) rcrl fild sar sub outsb inc pop mov dec mov cmp cmp popa jle or push repnz arpl sub loop in adc (bad) mov push icebp sub jg repnz addr16 push or insl xor mov mov jbe mov add mov xchg int3 xchg movsl pop daa push js pop cmpsw sub push add lods sub mov inc ret mov ret cmp rorb scas mov (bad) jl lods out and or sub cmp aaa out int fs (bad) cs adc dec inc loop dec push and mov int3 add push mov mov and or jns mov loope pop pop mov repnz adc sub test cmp jne daa xchg fnsave cwtl outsl xchg into or mov pop addr16 add lcall popf clc cmpsb push mov mov and sbb fldcw lret leave push clc call lcall sbb movsb bound add mov mov loopne mov mov mov jb xchg dec dec adc push xchg bound xor pop lods out and outsb hlt fisttpl lret pop sahf jecxz xchg adc mov xor mov sbb jle adc inc lods out lret sbb xchg pop add pushf xor sub in loop or xchg gs fidiv jae mov fs jle daa xchg sub xchg xchg adc sahf cmp in sub clc cmp sbb pop push outsb dec xchg push into mov xchg mov sub rorl inc lret adc stos mov push mov pop dec push imul ja add sahf or lea cmp mov out dec inc jbe and mov push call fcomps push dec stc adc sti sbb shlb lret inc dec bound jecxz sbb jp ja xor ljmp test and xor frstor in inc das cmc sti das mov nop inc and adc fadds into neg jge xor cmp cmc incb (bad) rclb pusha (bad) icebp cwtl jae (bad) daa je fmull cmp popf push cmp mov mov adc in outsl stos mov push and pop inc mov imul cmpsl jne xor inc bts xchg adc rcr dec loop mov pop stc clc jae (bad) inc xor stc push je jmp cwtl imulb les jg dec xchg mov xchg cmp in lret mov stos pusha or pop test sbbl lret lret inc xchg mov lcall inc into add dec mov subl in cli pushf sub cmp fistpl (bad) cld mov gs cmc inc jl out fwait inc mov sub xchg or cmp arpl movb dec sahf inc jecxz aam sbb fidivrl sahf inc cmp sahf and pusha push jns dec shrb ss js addb xchg div icebp jnp movsb imulb push pop (bad) mov aas adc aaa rcl fcoml lret push jb inc ret mov cmp fmull (bad) lods popf (bad) cmp xchg inc jnp inc (bad) in cltd movsb jp inc repnz in pop js jns test fdivs aas sbb cwtl or jns mov inc scas sub mov jne leave rcr xchg orb adc cmp xchg push mov sahf cmp jb lea stc pop test popf jl and movsl push xchg fwait mov or dec mov lret icebp push jg imul push ljmp fs rcl enter ficoml and call pop dec jnp adc sahf js daa xlat mov adc sub dec sub cmpsb or insb mov xor inc inc bswap test cmp mov mov or ds subl inc sti adc je nop sbbl sub push gs jns out xchg push cli mov sub outsl cmp inc sub imul into xchg adc adc mov pop out jmp cmp push xor jge mov jns lahf adc jg popf mov sbb mov rcr test (bad) jnp shlb and scas mov bound nop mov jbe das enter inc jo jae push pop cld int3 jbe test adc decb scas fmulp aam xlat and (bad) insl arpl mov repnz aas pmaxub leave lock leave sarl mov fwait mov ds sbb dec das lock test sbb dec bound (bad) fnop jecxz push push jno add or adc pop test mov fdivr shll mov cmc call rcrl and mov push (bad) repz rcrb inc jp mov inc sub scas int repnz jp leave test adc xor iret pop dec and jbe imul das ror push rclb mov popa lods pop mov movsb cs test popf in mov sbb inc sbb push adc dec in sub xchg das (bad) mov xor add inc sub sbb ret cmc xchg sub nop xchg sbb lea adc sarl or mov out gs clc pop insb cwtl roll aas ljmp mov fdivrs out fs push push clc andl test mov or cmp jl jp sub aad xchg and aaa xchg iret lock pop inc and dec push pop (bad) xchg mov ficompl add lcall in outsl mov mov pslld push sub decl cltd int3 (bad) test xchg adc in (bad) pop rcll ljmp popa std push sub xor xor std push pop mov dec inc jle inc pop adc push cld movsb inc adc (bad) pop gs push stc das gs pusha scas scas je (bad) je bound inc add sub push mov xor add leave inc outsl push enter xchg in xchg inc add jne popa fadd xchg repnz divb xor inc ret cmpsb cmp add dec subb lods sbb or dec in xchg pop inc test xor jmp cmc adc dec sbb test dec aam dec sbb push dec leave cmp inc nop rorb cmp js xchg mov push (bad) enter mov push (bad) icebp cld and aaa in test dec cmp push push pop (bad) jge pop sub inc mov xor insl adc jns les inc jmp xor dec call out cmp (bad) enter fs sti sbb mov in fstps sub nop inc xchg (bad) mov pop leave xchg fmull (bad) imul orl ret jp mov sbb mov fsts imul insb push mov fwait loopne ds addr16 adc or xor jb push pop mov jmp mov inc pusha sub je sub lods jb leave test add cmp fisubrl cmp aas or test sbb adc sbb inc xorl popf cmpsb out mov leave push xchg sub ja shrb lcall roll sbb insb mov cld add push in pop and cmc mov cltd insb pop repnz icebp (bad) sbb jl js xchg sbb mov xor jae add push mov int mov shlb jnp aaa mov cmpsb lock pop bound mov adc jl push js pop pop xor jns mov lahf mov (bad) out pop in enter cmpsb mov push bound out cmp sbb insl mov pop faddl out lahf adc sbb add roll call dec (bad) fcomps ds ss xor cmp cmp xchg add xchg dec xchg aam xchg int imul gs sub rorl adc insb add jle shrl bound inc stos jne sbb pop cs jns pop aaa leave sub cmp imul mov mov mov lret or mov sbb data16 ret lahf adc push add dec mov mov (bad) out lret jae fwait dec addb xchg or jae (bad) adc lcall fcmove lret adc mov mov loop jne out push (bad) int3 loope stos std push jb fst xchg cmpsl test or mov ljmp stos adc xor push test fwait movsl bound insb (bad) sub push mov pop dec dec inc into test mov xor pop insb fimul and mov repz scas (bad) loop test enter sub xchg mov cmp (bad) xor push lds sub andl iret loope pop jnp (bad) stos pop or rcrb psrlw mov addb adc mov cmp and push (bad) jo fs test mov push cmp add das inc sbb outsl mov das mov jmp sub push cmp jo mov inc mov (bad) std repnz lret mov xchg out push ss adc jns imul (bad) repz sti out loopne dec add imul and xchg in scas popf push mov es sahf mov dec mov js popf arpl and pop add jmp mov or movsl scas in fmull jg mov outsl pop mov xchg mov daa mov mov and fisubr mov mov into xor adc jb hlt mov movsb test inc je sub cmp gs cli cmpsb cmpsb inc jmp add mov loopne mov ja fwait and movsb jmp jecxz sbb jle divb or das adc (bad) jmp mov sbb mov add es shrl jmp ror and jb or mov movsb jle add sub imul popa mov adc jmp rcrb mov ds scas test aaa and inc pop aaa pop js int3 daa jmp dec adc cmp add fildll daa cmp pushf mov hlt mov xchg arpl pushf outsl movsl leave dec push adc lea je or cli aaa mov (bad) lahf inc xor sbbl push mov gs adc push stos pop xchg loop xchg or jmp mov jno push negb sub movsl pop int3 or (bad) xchg in push popa cmpsl xchg mov in jl mov lods pop lds jmp fcmovbe outsb sahf mov scas pop mov and jl push mov (bad) int3 call lretw jp out mov out mov add pop sub pop shlb push rcll pop dec pop mov mov and test mov push ss aad jne cli fsubrs sbb add cmp cmp (bad) in and mov imul cmc fsubrs sub punpckhbw arpl outsl jecxz das push cld mov roll pop fcom popf fisttp xor bswap xor sub sbb outsl fimul jne cli pop daa pushf (bad) mov mov xor stos sub or les push dec imul cmp ljmp jp mov xor enter pushf mov mov adc rcrl fstpt daa fwait adc and mov inc mov imul rclb jmp insb in addr16 (bad) inc in mov jb cltd ja and mov cli sub dec cmp cmc int3 or xor pusha std sub jmp cltd push out or cwtl stos enter cld scas push jnp ret add imul xchg mov insb lods jl insl dec dec dec cmp inc mov dec lock aas xchg (bad) mov jge rcr inc insl cmp adc test jns into (bad) cmp std (bad) add stc lods pop mov pop pop ss xchg jns in push lds (bad) aas outsl icebp adc cmp and jbe stc inc aam push xor jmp dec aas mov ja xchg sbb test lods sub sbb xchg out dec add and jae pop loopne lret or rcrl ucomiss adc nop movsl fsubrp shll insl or mov xchg scas hlt jns mov out cmpsl int jae sbb hlt pop mov adc lock in scas aam mov les and mov push jbe faddp leave lds jnp popa je (bad) xor xchg xor pop rcr cmp and mov jne cmpsl adc and sbb in sub dec inc and int3 and dec (bad) hlt or or pop shrb xor and lahf push out mov push and xchg xchg dec les or xor mov or push outsb cmc xor sbb fistpl bound pop inc or orl adc (bad) cmpsb dec lock (bad) cwtl mov (bad) sbb data16 inc mov cmp push adcb xor mov or or sbb mov lret jp lods adc outsb sar mov out stc adc jge imul outsb jl dec mov or jae iret scas mov cmp pop bnd mov outsl cs insb inc data16 fistpl dec inc sub and les or das mulps mov push mov mul jg lds xchg fist pop pop add lahf hlt add mov jl push pusha xchg push push int3 mov mov ret sbb int3 mov adc add dec xchg loopne loope jmp jae or cmp gs cmp jno add imulb mov and bound pop dec sub das and in nop jmp fsts cmp repz sbb vcomiss repnz lds scas movsb inc ja fldt test icebp je pop test jle (bad) jle push cmpsb outsb adc fwait stc push mov test xchg scas jns xor pop and cmc mov pop sbb xor xchg out mov nop data16 fmuls adc bswap pop lock push (bad) (bad) popa mov loope ss in clc sbb dec xor js int3 jmp cld inc sahf subb subb insl add arpl mull inc in pop pop lea dec xchg stos jno pop xchg pop push lret stos push out adc loop mov mov mov mov cmp jp ja cld fmull jmp xchg std xchg aad pop (bad) xor (bad) jbe loopne mov add mov jno jae mov in cmp xor mov or or push and int fcoml sahf lret movsb jmp in inc adc in push test dec mov add aam fnstcw xchg push (bad) pushf jl aam mov mov pop adc cli in cmp (bad) lock scas push scas jne in notb aas loope pop int jns xor icebp dec stos into lds lret xchg subl clc dec test inc (bad) sub (bad) rcpps cmp sahf xchg cmp movsl cmc shrb clc cld fldcw add aaa or push mov fidivr pop jns enter pop push sub cltd addl pushf in fadd aas cmp sub jno push xchg lret aam mov sub xor aaa mov repnz (bad) std adc mov xor ljmp vmovsd ja mov popa pop inc leave mov and add movsb fstp roll sub insb dec cmpsb lock xor and push lret inc jl sub xchg outsb jg data16 arpl lods inc cmpsl cmp fadds sub mov mov mov push std xor imulb (bad) jbe jbe inc xor pop mov mov int inc add test adc iret nop aaa pop mov (bad) mov mov daa inc mov push iret or mov cmp xchg scas cmc aam daa (bad) repnz icebp flds js repz adcl out fistpll nop mov fimul cli and mov les scas arpl int3 divb push lret jae push mov sbb repnz inc aas sub ds jae or bound adc mov push sahf mov imul add ret js xor dec push mov and ljmp mov xor popa mov in ret mov in gs cmp add (bad) rolb add add mov ja pop rcrl mov push jo and mov or mov adc inc mov fimul add cmp fwait sbb pop cwtl popa ljmp (bad) stc ficom cmpsl or rcrl jmp mov and jbe sub out dec fisubl sbb in out leave test fistpl incl mov icebp icebp ja mov cltd je unpckhps jne (bad) (bad) push imul sarb mov or ret in xor dec cmp mov sub lea js sbb in cmpsl enter inc or bswap dec xchg add test test lcall xchg mov mov xor lahf sbb in dec xchg sbbl jecxz adc or aam sub scas out add sbb out pop mov inc insl mov dec mov push add insl fcomp test pop push call mov cmp das (bad) or clc push test pushf dec (bad) (bad) aaa lret fldpi push push mov hlt pop les xchg ds adc mov scas and mov or add inc pop (bad) icebp das mov inc mov cwtl jl add pop sbb pop aaa (bad) mov xor (bad) sbb mov int3 xchg ret ret icebp outsl xor in std mov das cli jne aas jecxz pop jne int3 cmp xor cmp xchg (bad) mov cld xchg mov adc and sti bound or cmp jb push jnp lods ret loopne (bad) sbb dec call mov sbb fsubr imul or out mov stos (bad) dec fwait dec ret pop add pop dec scas lahf in mov mov or in test movsb (bad) cmp add dec fmuls cmp sbb (bad) fdivr test or add or fidiv xor pop lahf mov mov mov data16 add loopne push repz xlat lock gs lock xchg xor xchg jg mov pushf pop mov push mov daa unpcklps pcmpeqd aas ds test adc pop jnp xchg clc jecxz push ljmp insb addr16 dec sub push jmp push les mov js or and jo adc mov sub jo out fdiv add jb jl lods aam xor call sbb (bad) inc sbb cld mov mov outsl mov mov mov das cmp add cmp (bad) in and dec lea ret stos and pop sub movsl mov adc mov data16 or bnd sub rcrl pop out push cmp mov dec fistpl jne lret repz (bad) mov shlb mov fmuls jno insl xchg adc xor rcrb fs movsl dec push stc out mov mov add sbb or xchg mov ja mov cmpsb fmull push lahf clc test mov push mov cmp xlat xor pop js inc insb mov imul clc (bad) inc aad cmp mov imul sub jno or mov mov xchg (bad) aaa push mov fadds xchg (bad) jmp mov shll in lods imul pop fldt mov cmp pop jae xchg es into (bad) data16 jno rol mov sbb and imul and and fstps push (bad) adc push add push adc out xchg and pop pop and ja test mov add aas mov mov mov pop movsl adc aaa mov xor (bad) push pop test add popa sahf mov imul call or sbb push std inc (bad) cmp ret sbb imul push xor sti aam add xchg jns cmp fbld std test adcb adc lock mov in and rolb adc and cltd xlat das jne cmp inc bound sub sub js imul cs mov sarb lods andl mov add aas icebp xchg icebp sbbb (bad) cmpsl xchg out inc jo ret dec xchg cmp sub sub xor pushw int3 addr16 cmpsb push cld push xor (bad) xor jmp xor xchg lods dec jecxz mov push mov ljmp mov mov loopne fsubrs test ror out xchg rclb dec into (bad) movsl cmp sub sub pop insl jl das pop fisubr xor fcmovnu je sahf push fisttpl pop je add jb das and sbb mov mov aas dec push jbe outsl inc push jb (bad) fisttpll mov (bad) dec fisubl pop add jns sbb xchg jmp pop sub cmp movb pop lcall add outsb lock inc lds jno push in (bad) dec cmp mov (bad) and pop jns mov inc mov adc adc xchg add (bad) fild pop pusha jmp sub mov adc inc add sub inc in mov mov cmpsl fistl lcall aad fxch xchg dec popa add cmpsb add mov (bad) imul shrl into xor jmp testl push int3 imul cld stos xchg dec push jae xor cmc mov ss dec ljmp pushf jp inc (bad) mulb aaa mov adc mov add movsl imul sub push into cmp (bad) imul fdivl xchg xor lahf mov lcall mov cltd int3 popf loopne,pn gs mov aam mov mov xchg (bad) jl cli outsb sub xchg loop and mov xchg out adc xchg mov std in jle pop mov les (bad) test ss lds xchg and stos stc add icebp aam sysret lock jp adc das jbe fsubr and bnd or bound push inc inc pop inc enter test and jl xchg je (bad) paddsb mov pusha std push lcall sub mov scas outsb ret leave xchg or les push lods mov inc sub pop xchg loope jl and lock outsl pop ss push xor push sbb not aas out push or dec loope push mov jmp mov mov add movb (bad) push lods mov pop xorl or mov jbe insb jle add push mov pop aad test mov cmp add cltd adc push sbb add fwait enter out (bad) ss fnstcw cltd adc sub jb bound xor or push push lea xor iret lcall cmpsb (bad) and adc push xchg bound cwtl in pop loope (bad) aas nop insb push stos sbb sbb xchg fnstcw sub jg xchg push pop and cmp dec and out (bad) nop pop fucomip fidivrl insl inc mov or add int mov in xor test (bad) cmc add cltd lock cmc dec dec adc dec mov xchg jbe lret mov push push add addr16 add mov andl ret hlt adc and loopne push push dec test movsl lcall mov loop sbb clc std fistp cmpsl inc (bad) jne mov faddl fdivs int3 popa mov xchg ret pop mov inc cld and xor cmp cmpsl fmulp and std add lret mov aaa imul add mov add pop mov pusha addr16 aad dec mov xchg in cmpsl mov xchg imul adc lods jp cmpsb pop sbbl data16 imul cmp mov enter adc bound and cmpsb xchg (bad) cmp (bad) stc out jg stc out jg stc out jg fild add add fs fwait xorl dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push jbe mov sbb mov (bad) fisttpl fstpt pop jae pop sbb and mov (bad) pop call and dec or cmp add inc fwait push fcoms mov jl ds push sbb pop pop idivl xchg test sub out mov mov push push stos insl in out nop adc in mov mov dec jo aaa add gs frstor scas cmp outsb mov lea adcl in jle lret rorl daa dec pop xor aas or dec add and add movsb mov rcrl sub mov movsb adc enter addr16 mov sub das cmp dec mov and dec cs stc xchg xchg aad push dec jl in jmp push loop sub stos (bad) mov fwait leave lret int3 jno adc sub pop cmp addr16 stc stos pushf sub stos bound cmp lods mov adc mov xor arpl fsubrp xorl clc cwtl lret outsb cmp mov dec lret cmp jne jno cmc dec cwtl incl jns inc pop xchg aas stos fistl inc add push jp roll loop outsl imul jb rclb cmp in insb fistpl xor mov dec arpl js cmp mov int mov fisttp dec or xchg movsb mov lret lock push lahf adc fisttpll call cmp stos movsl push inc push mov mov ds inc test notb lods cld and push cs mov dec jns sti jo leave lret fcomps (bad) inc dec add cmpl test ljmp negl sub hlt lret orb pop adc int inc push outsb (bad) stos push xchg add fisub out or in call lock dec (bad) iret adc cli jnp push bound out sarb in inc fnstenv ss lret or pusha push or data16 ficoml rcrb xor dec and xchg iret jns xchg shll cmp and fnstenv in xor subb or cmp mov xorb inc pop lods sub ret and aam xchg movsb add dec out inc pop dec aad addr16 pushf inc lret data16 adc cli adc or cld (bad) cs push or mov xor sub int3 imul outsb loopne fwait xchg aad insb dec in fcoms mov sub jmp rcrl (bad) hlt push fstpl sbb xor outsb mov (bad) mov jl jge rorl fisttp imul push xor or jg test jno bound ret mov nop xchg js out jmp popf sub push ret icebp addr16 or mov lahf stos in mov sti or rcrl and in ds loop sbb in into cld adc pop cwtl flds (bad) xor ss rcrb sahf mov dec push inc pushf jp sbb xchg jo or cmp xchg repz add repnz cmpsb add ret mov jmp mov jl andl or call fmuls and scas ljmp jp mov mov loopne cli ds mov shll dec adc iret or push or loop cld mov xchg xor xor pop hlt scas xchg cmp into or vmovd ds xchg cs jge or repnz inc pop sar lock mov mov call mov outsl sbbl int dec ficom jg cwtl mov pop pop lds or dec enter inc rcll xor and push bound jns andnps jle xchg mov pop mov jg rclb mov jp and xor cmpsl push sbb sub jmp add pop nop lods lock mov int3 dec shr movsb fwait or (bad) clc and push xchg mov xchg jle xchg (bad) mov loop sub mov test jg cmpsl insl add cmp dec ja enter lods mov lcall mov fwait mov das test adc inc mov push ffreep mov popa adc push sub (bad) iret mov lock cmp pop sub pop or cmc (bad) shr call fildl push sub mov cli leave mov inc dec jnp stos aas outsb jp je xor push (bad) testb sbb sahf mov adc es add dec xchg or (bad) rorb das pusha add (bad) loope cmp or inc fildl popa sbb in xor jo mov cltd insb lret push in and cmpsb lock ja std (bad) aas push sub xor mov and pop lahf mov sub xor sub cmp xchg enter loop jge push clc stc mov leave lcall and push xchg mov jl push xchg cltd stos pop mov ja pop daa scas fcomi popa inc lods inc andb aam mov mov lcall shrb jg addr16 mov jmp bound outsb add ret inc fnstsw fistpl in xorl and pop xlat fwait in push cmp cmc dec jb popf stc insl cmpsl mov ficoml (bad) and mov fld cmp inc in sbb outsl outsl lods (bad) aas pusha push mov xchg stos and xor sbb add mov fwait cmc int jae stos les jle inc jl into and and fiaddl lods mov int3 mov fldt jecxz inc in aaa mov cmc xchg sarb test and adc xor lods inc dec rclb or dec cmp ljmp mov jg in (bad) push pusha out jb add mov clc sub xchg push rcll xchg imul loope mov mov lods test loop cmp sub mov scas stos and xlat cli push cmpb aaa sbb and inc rcrb xchg adc jp pop sub add sub xchg and (bad) jb cmp xchg jge in mov push xlat add add and adc daa mov out shr xchg cmc imul aad ds push mov in rsqrtps or addl cmp push pop cmp mov mov je (bad) lods xchg and mov pop pop inc xchg mov cmp movsb push int3 movsl cmpsl inc movsb jbe mov inc lds mov jne mov out push pop in dec repz sub xor inc xchg movsl arpl sahf stos cmp jno or or out pop fnsave jmp jo xor jno int3 fstpt pop (bad) adc pop sub int3 cmp idivb mov clc cmp bound mov popl icebp pushf gs daa push out pop cmpsl and outsb ficoml adc aam into jl lret adc or mov mov xchg and mov mov jecxz or mov jbe test xlat mov imulb mov pavgb push inc cmp jecxz adc add mov mov loop ljmp cmpsl cld mov test je inc pop sub aas xchg cld xlat or cmpsb inc sub pusha test xchg or push xchg sbb mov mov inc pop scas mov mov movsl aad pop movb mov fs xor (bad) call push out lods xchg mov inc mov js aaa sbb rolb mov test (bad) imul lahf int rcr cmovne cmp push mov cmpsb cmpsl stos cwtl les pusha xor sbb stc push add mov sbb dec dec outsb sub popl ret out mov push sub (bad) test leave gs inc test push (bad) call arpl insb mov sar movsb dec jb ja dec mov rcrl xlat (bad) adc xchg xchg push popa cmpl divl lahf (bad) negb insb fiadd adc sbb jne (bad) sub rcl decl ret ljmp inc adc push inc sub mov xchg (bad) and fbstp push pop (bad) imulb outsb mov out test iret pop dec and sub mov mov les sbb mov icebp add mov jle stos hlt mov stc mov xchg mov xor rorb xor mov call out aaa repnz loope es leave or pop insb push jp sub add jp dec shrl (bad) (bad) mov adc cmp mov gs sbb lahf pop mov in dec pop lcall stos mov adc fcmovne xchg xchg pop push clc push (bad) adc dec dec mov cmp and test rorb mov ljmp push clc mov lret xor push cli sbb stos push push xchg sbb cld pop repz int3 outsb mov mov pop dec mov loop aam pop push sbb push sbb fist dec pop xchg mov dec pop rclb mov adc je int ret xchg cli arpl je or test nop push push clc and pop test jo mov jmp in lods xchg fs adc sbb lcall sbb jmp dec mov pop push add add aas pop and sub mov lds ffree frstor fwait addl imul test sub mov ljmp pop xor test push sub lret xor push jne repnz cld loop mov sahf clc loope les sbb mov push (bad) lods adc sbb pop rol jge loopne cmp ror mov pop adc shll mov mov stos rorl jno mov push lock mov ret mov inc pop push mov sub test (bad) stc xor mov push pop out std cmp pop push sub subl mov ja jp dec loope pushl jp mov mov push outsb mov push lea inc xchg test mov pusha sbb scas orl fbstp arpl call daa or jg sub iret into mov mov inc test repz loope rorl adc sbb in sbb int loopne test xor fldl scas push pop mov push loopne mov out pop scas push dec lock or jg mov jge pop cld mov adc lahf and cmp mov (bad) jbe push mov cli mov or int3 xchg jbe lcall mov aaa fs xor (bad) sub jl test fdivrs ja je (bad) mov (bad) push sbb loop cli lret ds push add jne,pt sti out push out sbb roll es cld mov in adc mov and icebp repnz arpl sub stos fcomi xor mov pop cmpsb sbb cmp mov dec dec loop sbb jne or or shlb push sbb sub dec (bad) lcall xlat adc fidiv mov ljmp std loopne sbb cmp cli cmc mov mov nop add dec inc add inc and push mov sbb pop xchg or and push das mov inc cmpsb cmp xor lea cmpsl enter nop popa adc pop mov inc mov dec sub in push test in or sub dec add imul mov xchg push dec jge mov pop mov adc aam dec adc js dec add lock pusha xor xor mov inc stos push mov pop jl adc sti loope lock iret ja xor mov sahf pop sub dec and xchg and lods scas into dec pushf pop sarl pop aad lods lret inc loop daa add jbe int (bad) popf xchg ret mov add (bad) cmp mov inc imul test push mov xlat sbb adc jmp jge add es xchg pop (bad) push loopne mov pop rcrb cmp xchg stos aam jg xchg (bad) and xchg jnp add mov mov scas je lds lret push xchg icebp sbb sahf mov shrl sub rcrb push cmp jnp out or and scas loope jae fdivrl push mov jo mov lds inc xor lock or mov ja sti inc jnp jg adc xor outsl mov sub sub lahf dec mov sbb mov out call push xor cmp hlt mov int3 mov push daa sbb xchg add xor mov inc lahf add insb shl push push (bad) les mov insb mov add cmp or jae loope push mov iret mov sub adc inc mov mov pusha fwait cmp (bad) dec ss cmp mov push xor orb pop icebp xchg lods pop cmp mov cmc call and or ljmp mov test cld cmp out jo jge push popa outsl call lea mov sbb adc pop jb xor push insl daa jbe inc xchg mov pop iret negl stos push daa cltd xor ret cmp mov stc sub andb (bad) mov sbb movsl rol mov jno js ret cmp repnz lods jb cmp in dec mov rorb iret pusha fcmovne gs cmc mov das pop (bad) jns stos pop in into xchg sbb bound ficompl sub mov mov lcall inc jle hlt cmp sub mov push sub or sbb and dec adc fwait aas js loop outsl sbb fisubl push pop and adc inc mov nop fstpl push mov push pushf mov adc movsl iret cmc dec xchg jp loope mov or cmp lock insl pop sub push mov jecxz out cli xchg push mov pop outsl mov mov push dec imul nop decl adc dec test in adc and out data16 jno fnstcw xor test outsl xchg or out cmp mov fnstenv jns outsb xchg mov dec push aad ret out lahf insb lods hlt xor xchg (bad) xchg sub lahf test not ret inc mov cli xchg gs dec pop stc clc rorl rcll inc mov out or jg mov mov inc data16 (bad) xor mov (bad) in jb repnz mov into and fwait repnz xchg and inc jo push insb push xchg adc mov sahf out and insl dec test push out inc call incb lods sahf dec sub ja (bad) xor (bad) icebp ds jne sbb inc adc pop repnz es fdivr push mov fbstp xchg data16 mov push popf popa sub lea mov jmp or sbb sub mov mov push sbb loopne push shl insl and xor mov test vxorps jle int3 stos add repz mov lcall mov cld in mov enter std sub stos (bad) jne roll lret imul jle mov sahf cli lock cltd loop cli add pop dec jecxz pop cmc dec mov jnp mov mov pop testb pop or dec or cmc inc call adc pop sub incl or stos xor pushf jmp sub mov call sbb add out ja sti pop mov push sub outsl inc xorb call push adc sub push aaa gs adc push movsl pop and jle lahf or pop rcr incl push jl ljmp xchg mov and out out cmpsl arpl push sub xchg andb aam ret dec xor lret mov bound (bad) mov rcrl mov jge mov cmp push dec lods movsl mov or scas xchg cmp outsl stos sbb icebp pusha mov mov pop dec les mov jo push std mov cwtl out sarb xchg lret ds dec mov sbbl repnz cmpsl les xor arpl setne push cmp outsb andb jae out ljmp cmpl mov into inc jge (bad) sbb cltd mov out pop xchg cli je cltd test cwtl pushf xor rclb lea push decb or in loope sbb or das ret out sbb adc int3 push pop test dec outsl ljmp lods mov int sahf lods sbb dec add xchg jle,pt add aad out aaa jns push push adc lcall cmp cmc jbe lds mov scas mov sbb sbb imul in adc jp rolb inc dec (bad) cmp add mov dec lds cwtl psubsw mov test ret mov fild xor lcall mov pop adc adc jns mov pop jnp ret popa lahf and popf inc mov pusha mov rcr mov incl (bad) or int3 sbb xchg adc or mov outsb mov mov in dec or fistpll sub mov mov ret fisttp test fcomps mov aad push adc fs or push cwtl or xchg pop add cltd inc cmp inc (bad) movsb ret call dec fisub rol push xchg std or pop adc or call bound add mov pop cli inc hlt test inc lahf push andb and dec mov int3 push add xor leave in add mov lret jne fimul or push pop adc (bad) mov les orl dec jmp jecxz xchg or mov fs je xchg xchg popf inc mov or aaa cmp xchg mov cltd and repnz sub js dec adc dec sbb pop and les nop pop lds icebp xchg ja or repnz cmp fsts jp test mov cmp cmp add cmp cmc fwait icebp out sarb cmp push icebp pop hlt sahf cmp push rcr add jne sahf loope aad xchg xchg lods mov sub cmp xchg test push sahf into fwait push ret inc out loop push into rorl inc mov pusha in add and push lock stos bound popf adcb ja inc fs mov paddd imul test mov or je hlt daa inc xchg data16 out sbb adc fprem jle or mov ljmp add sub loope,pt dec aam shlb or jecxz dec mov pop dec das push xor xchg lahf test mov push dec nop into ja mov std daa fild sbb jno or lds pop push add loope (bad) mov scas leave cmpsb push sbb xor mov call dec cli pop sbb lods aaa lcall aam stc xor pop or mov xchg sbb aaa dec cs pop pop popa enter shrb pop jp call add sahf mov or pop ds cmp xor adc loop mov rcrl mov int add sub fdivs mov and push int3 push iret inc inc mov mov or and xor jns cmp mov inc cmp scas lock xchg mov push test lret lahf xchg into sbb fildl or frstor shrb adc inc ds adc mov cwtl popf imul lret push jmp and inc adc xchg mov out jo pop les (bad) adc mov test inc es ret std xchg fwait pop push add loope mov cmp mov (bad) enter rorl ja xchg push int jne sbb xchg dec pop mov stos lcall push adc add adc xor insl pop xchg cmpsb out scas pushf fistp cld pop dec sub ret test ds imul daa repz clc lods into mov mov ficoml scas fnstcw xchg std popf or clc rol out adc jb inc and rclb lds add sub fcompl or outsl out leave or repnz mov sbbb sub pop out add mov dec mov jne int3 xchg test jp adc mov cmpsb in insl outsb sbb data16 jge dec imul push adc lods dec xor ss leave loopne mov loope dec dec iret pusha mov js inc insl mov ret pushf scas jle popf jge mov adc (bad) xor adc sub (bad) movsb push xor aas ljmp out in es xor je std (bad) jg clc lcall inc cmp xor int3 cmpsb or (bad) adc adc call pop dec jecxz lea push add mov mov iret ret push pop xor (bad) cmp mov (bad) adc pop or jge aam arpl mov out cmp add push adc lret xor xor lret in popa (bad) lods inc mov js sub pushf dec add or and mull sub jge (bad) into shrl cmp jo rorl inc inc xchg push into ds ret out mov hlt pop sbb pop dec imul loopne cmc cmp scas add lret in (bad) repnz lret and jno loope inc adcb and and (bad) lret sahf out push push out orb xor pop jmp loop xchg inc jp mov pop jge pop jecxz gs jl ss push xchg inc lds cmp mov lret (bad) aam dec cmp lcall dec imull push dec cli mov les xor adc leave cmpsb mov xchg out fstpl xor sti pop outsb mov cmpsb xor lret orl dec pop mov pushf pop cmp mov pop jecxz ficomp mov int3 adc bound nop lock xor add test sahf jecxz jle push xlat lock sub sbb ds pop out sbbl fmul out sub pop popf sub sahf incl into scas sub push out fdivrl or adc inc xchg aaa arpl imul lods inc adc push push xlat mov pushl fs and mov int test lea cltd fs sub sbb leave and add mov cmp out nop jg inc sbbl repz ret fisubr std mov clc rclb icebp and or inc xchg sub notl pop sahf pop arpl pcmpgtw clc jmp add mov mov jne jmp mov addr16 and sub int3 and mov lret cmp jp or (bad) mov pushl mov push ja sbb ret (bad) (bad) cmp repnz je xchg fistl mov lods fist popf cli jne pop outsl leave in cmp pop sarb rcl inc in mov xchg push cmpsl lret faddl lcall sub leave add xor int3 cld jne inc jg xchg popf add sub and cmpsb out dec xchg inc lock (bad) mov rolb movsb ja ret mov or imul stos or movsb add pop mov inc repz mov dec dec mov add cmp inc jns or xchg inc sub ret push xlat add stc dec xchg loop pop cmp lods pop sti (bad) out in sub xchg cmpsb jne loopne mov or mov pop es and push cmpsb and pop pushf push hlt iret dec mov test add movsb push loop pop mov push outsl popf leave and bound xchg subl inc sub mov adc add dec andl (bad) (bad) inc into (bad) push cs jo stos ror sbb mov aad adc jbe cli xchg push pop xchg xlat sbb out mov pop xchg sbb call bound sbbl loop jl fucomi iret icebp push jl lret xchg fstps jg aad mov push dec push call lock adc (bad) push cmpb push call insb or pop ss sbb and dec xor sbb add pusha jb jg pop je or and hlt or push vfrczps dec insb fbld dec ficoml pop mov mov sbb int3 jnp pop out pusha loop (bad) jecxz outsl loop into (bad) out shrb mov scas loopne out push repz mov inc fdivrs sbb sbb xor inc pop xchg jle inc cld pop ljmp (bad) jl les pop loopne (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add js adc xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb push lret mov fcmovne mov pop ss out aam pop mov divb mov repz out aas outsb add mov add imul sahf fstps mov xor neg jecxz repz shll inc add in mov mov and xchg divb xor aas mov rcrl stos push jo sub pushf or push mov pop push inc lcall pop lds and pop mov cmc mov aas mov push out cli jmp cmp xchg mov fisttpll sahf std insb mov subl gs add and outsb outsb and ljmp cs mov add negl cltd mov sub add loope rcl cwtl daa jmp pushf cmp xchg mov aas jg pop scas mov (bad) inc test mov cmpsb or jae test inc ficom shll js cmc fwait inc jle push inc rcrl nop and nop push js lret (bad) mov inc cmp scas mov and jg stos pop (bad) hlt jb sahf jg enter push int3 push jnp cmpsl imul cmc imul mov mov xor inc movsb imulb jo cmpl mov add stc iret das loope xor pop (bad) mov mov movsb addr16 sub out arpl movsl popa fimull push xchg insb pop dec mov jecxz push cltd (bad) fldt push orl ret add mov mov (bad) pusha cmpsl sbb fisubl mov inc pop lock repnz sbb cwtl adcl loopne movsl add cli push pop stc pop (bad) repnz rolb mov mov add cli mov mov sub push imul data16 pop aaa icebp (bad) bound adc push adc or mov mov and pop cmp in imul push dec xor jae (bad) sub or pop sub xchg cmp adc test fs test mov leave mov flds enter test std (bad) jae sahf pop xchg mov push jbe stos sbb push pop movb xor dec insb (bad) jp or stos cmp ja mov adc (bad) mov cli pop movsb hlt seto lret push xchg jne nop sub mov jno and inc dec mov fdivrp ja mov iret decb pop sbbl aaa pop loopne jno into xchg xchg arpl pop xchg jbe and hlt pop mov add rcr aaa push aas movsl out and adcl pushf lock adc imull sub dec mov push bound movsb mov or pop ljmp pop add xlat jno xchg jmp or or cmp cltd inc and scas pop in dec jae pop cmp (bad) sbb lahf fcmovb loope jbe or int3 (bad) sbb mov cwtl mov insl pop jo in (bad) popa loop,pn lret lahf jmp test mov dec mov add lret outsl push cmpsb decl inc inc adc add and pop out dec test add pop sub stc (bad) in mov subl and push or xor sahf sub (bad) imull pop xchg call (bad) repnz cs inc aaa or mov sbb sub pop mov int or loopne sbb fstpt cs sub lret sub cmp in add div (bad) ja and int mov test lcall repz add shrb sub push mov mov shr add push or mov std adc jbe loop popa arpl fsubrs xlat adc mov js jno in (bad) dec aam (bad) mov les fsubrl or pushf repnz push mov xchg and pusha popf (bad) sub je sub jecxz jg outsl lods cmpsb mov in adc out push and sahf mov iret in in dec and mov pop test call fidivrl push dec mov adc pop popa adc mov in or xchg lcall repz sti or in outsb dec stos jecxz mov add icebp repnz push inc outsl mov js jno sbb jo xchg test rol insb jmp orl xor jbe pop in mov ret cltd xor jne in adc test cmpsb xor inc mov outsl sahf roll mov pushf arpl dec ss add add jecxz mov inc mov cmp cmpl cmpsb ljmp xor orl insl outsb and cmpsl sbb cltd adc shlb mov push sbb es push xchg cwtl shrl rolb mov mov xor ljmp push add and inc negl push lahf popf mov pop dec icebp lds lahf ds imul out push out lods leave addr16 lret sarl ljmp mov stc inc pop pop call insl pusha xor mov divb pop or inc jle adc cmp mov sbb mov xchg arpl dec lock cltd sahf lea mov xchg sarb pop add push das stos mov push jbe arpl sub hlt bound push out ficoml lock jnp lcall push pop push std xor out je push (bad) jmp add and lods rcrl pushf (bad) cli add jge stos outsl repz pop divb (bad) aam mov add dec cmpsb push and jl in and jbe and cmp sub and lods and inc loop fmuls mov (bad) int jmp popf xchg cmpps mov dec cwtl mov js fnstcw sarl bound mov call dec ret lahf pop nop rol sar sbb std inc mov mov and mov xor mov jo inc dec push outsb daa xchg fstps jmp push xchg dec push bound mov lods cmc vpsrld fidivrl dec push sub rcl loopne push cmp or xchg ja jmp (bad) or (bad) int adc sub cmp dec pop icebp call outsl jne mov test sbb jno mov fdivrs or insb mov scas jnp push cmp aas hlt jns stc mov inc sbb xor (bad) mov mov cmp pusha out cwtl sbb mov adc hlt (bad) push push xchg out ss imul fisubr mov fnstcw or mov cwtl leave mov jns dec stos inc (bad) pop sbb pop mov pop je std insb cs jecxz xchg mov cwtl sahf popa push pop out push cmpsb adc push scas mov cmc cwtl outsb imul and push notb scas lock push leave jne cmpsl push lock and mov rcrl mov push or popf mov dec jl push xchg cmp fimul pop fidivrl push mov lahf adc shll (bad) cmp lahf pop sub and cmp inc inc add lds fdivrp pop push or in (bad) add out add aad fld mov sub mov test jmp sbb bnd push leave fisttpl rolb je pop xchg push leave aaa pinsrw xor movsb mov cmp lret mov rcll push add jg js pop jmp and xchg pushf bound jmp popf cmc pop nop mov lods jge sti xchg sti daa sahf inc jnp ficomp jns xchg fisubr in notb adc cld dec inc mov fsubrl test cltd gs sub out lods repz sti xchg mov fcmovb stos icebp repz jne cmp (bad) xor imulb jge ljmp movsl imul out sbb sahf aam (bad) mov fnstenv (bad) xchg mov xchg out into pop mov (bad) sbb fmuls (bad) sbb push mov ret lods lock inc addb test decb and sbb dec inc mov (bad) or inc scas int3 cmp lea out sbb jo jp out repz fsubrs cmp mov xchg xor push sbb (bad) std in jp or loope (bad) hlt cwtl xor push movsb cmp fadds pop xor in mov movsl adc in mov inc xlat ret dec call sti das js jge pusha imul pushf out mov cld xchg and (bad) jl push pop push ficompl jl lods cli mov dec jno (bad) faddl (bad) xchg dec jge nop jnp lea loope sbb sbb (bad) (bad) mov (bad) inc lock mov adcl je insl (bad) fdivrl jmp cmc ljmp lods or mov cmp cs mov scas orl dec lahf add jmp xchg jno inc cs scas (bad) cmp jecxz (bad) cli into popa adc inc insl sub add hlt adc addr16 addr16 dec rorl xchg std push xchg iret ret xchg shll sbb (bad) and sbb mov adc adc daa push mov inc lret loop cmp shlb push mov pop dec sub pop and into jge sbb xor cwtl call ret mov push jae in push loope bnd decb adc rcll sti (bad) jmp sar ds xor push sbb push jno (bad) jp call scas das push adc dec (bad) je (bad) cli rorl adc push push cmpsb push mov inc sbb inc in roll dec ror sbb (bad) cmp lods sbb inc xor rorb (bad) stc (bad) iret sahf or push fdivs nop fadds inc dec xlat and pop das sub cltd and pop mov mov dec push push dec inc mov dec jns lahf out iret xchg adc shll mov mov bound inc ja jl ds jl dec sub popa sti bound mov mov rclb jne xor jns cmp xchg sbb pop and jb stos inc lds and fs sbb sub rorl pop leave movsl pop xor lahf or icebp in jbe scas and shrl adc xlat lret mov aas xchg add fsub dec jb cmpsb inc iret jo mov fldz sbb and jge xchg push test js fwait in cmc movsl das cmp push sbb mov push xchg jnp dec cmp rcrb ret push mov iret test push out mov hlt pop xchg xor leave pop pop or sbb mov mov xor cmpsl idivl xlat mov sub in mov pop icebp sub in push movsl and fcompl jnp and dec mull pop push push sub cmp addr16 fbld jo inc ror mov lea wrmsr outsb idiv mov add xor aad sarl xlat pushl adc and in pop pop mov sarl xchg or xchg movsl inc mov mov xor int3 jge push add jae mov xchg cmpsb nop out data16 icebp inc fwait inc je into push dec movsl into sbb adc mov std mov dec js inc call push cmpsb in and or shlb pop adc jge imul pop and or push (bad) test jle aaa add mov lods pop cmpsb and pop jbe fidivrl test lahf sarl dec mov inc mov repnz sub xlat add xchg call rclb or mov jb imul out repz xchg jp scas cmp sub sbb cwtl inc scas mov xorb out xor enter fcmovnbe cmp push push adc mov jmp or fcoms outsb mov gs inc out add incl cmp jmp dec pop iret mov add cmc jecxz rcr scas test daa daa je mov add insb int3 dec mov clc cwtl (bad) loop cmp mov push lea xorl lcall (bad) lea aas shrl cmp push or loopne mov jmp fdivrl addr16 xor mov xor rcrl or sub mov push aam pop adc stos and out xorb pcmpgtw sarl aam popf xchg in sub subl xlat out imulb cmpsl jg lret fsubrl out or decl or out dec lods mov ljmp inc (bad) xchg negb jns aam mov pop xchg add dec inc lea cmp push sub jns add push fs adc inc sbb sti mov test xchg test pusha in add xlat cmp push mov jmp inc mov xor es imul push sbb out test cld lods stos push push jo fcomp mov xchg rcr (bad) push mov xchg pop jnp xor push jne mov push adc xchg popf popa mov data16 jg mov std mov fisubl in jb mov rclb jp ja sbb sbb add hlt cli enter mov push aad mov imul (bad) je aad ds or sub imulb ss nop fst pop jne mov dec sub mov test stos add dec push xchg loopne xchg test jno pop icebp ret inc imulb mov or leave and loopne cmc ja add iret ret cmc jg ds cs pop mov bound add pop repnz in cmc sbb mov or int call xchg jp test pop jbe or stos fwait pop das cmp adcb sub dec shrl int3 add rcl test or inc adc jnp mov icebp fwait xchg in cmp popf or sub sbb lret or dec add xchg jp inc mov (bad) (bad) jmp fwait add and iret cmpb loop fldenv mov mov out ret dec (bad) ljmp fwait in mov in mov fiaddl daa and or xchg lds test cli (bad) popf mov lret aaa std lcall sahf mov das mov scas xlat pop rcrb enter out cmp add or mov lods mov and mov mov stos pop stc rcrl int push lods mov pop test pop rcrl mov push mov cmpsl sti rclb testb (bad) pusha cmp ret inc mov (bad) jbe mov jnp mov sarb test mov and subb mov adc xorb sub dec stos sub mov cmp pop xchg cwtl fldcw sbb push (bad) push push mov jb xor movsl inc push sbb movsb mov dec lahf jae psubd pop sub cmp lods in adc inc repz nop into les pmullw adc mov sti aad and scas test jb outsl jb cmpsb pop in dec and push (bad) addr16 pop push stos roll mov mov test iret test mov push lds shl adc loop ljmp adc fwait add (bad) sar xchg popf or lahf scas lahf psraw inc push mov or cmc sub jmp das loop nop jmp cs push mov es mov data16 insb outsb fistpl jno test decb push ficoml das into dec add stos dec lds fwait addr16 sub mov (bad) imul int3 (bad) call loopne mov push dec (bad) popf in (bad) inc int icebp dec rcll in inc or dec int nop pop lods mov subb push pop mov and mov jle xlat dec dec inc mov in sub and push xor in out cmc lret adc inc sahf cmpsb pop lret arpl inc cmp xor xchg cmp cmp adc xchg sbb or sub lahf outsl lock and pop jl int in fmulp pop stc sarl adc aad divl (bad) xchg dec rcr mov aam enter sub and inc push out sbb or test mov xor mov in cmp push or sbbb mov mov sbb fisub les xor out (bad) iret mov jnp jg lods js xchg sub arpl es mov insl inc lahf out in int pop pop ss ficomp aas adc nop dec insl js xchg jp std imul xor pop xchg stos dec mov fisubrl cltd ljmp cmp fisttpl add imul clc inc jb xchg mov fstl loop push jno jae arpl (bad) iret pushw mov dec std jl cmpsb pop or lds cmc lret mov push adc cmpsb aam popa (bad) xor pop mov aad (bad) push sti pop sar xchg push leave cs adc dec fsubs aas cmp mov inc js xor dec mov mov ret stos (bad) addr16 aaa aad pop adc push movsb inc and mov xor sbb xchg or sbb std mov hlt pop xchg xlat pop stos (bad) jns insl dec pop fcmovu repz mov inc lcall and inc xchg push sbb das int xor xlat add (bad) imul pop pop notl push pop lods pop sub (bad) (bad) test sahf xchg test (bad) pushf add into jle sub inc ja cmp jne and sub lods push inc in jecxz mov pop pop repz add add mov popa (bad) mov jl mov shr out fistp lds xchg mov and mov outsb outsl sbb pop jle icebp mov jecxz xchg mov sub and inc stc (bad) stos fcoms lea fsubl sub ficom icebp (bad) push sbb jno jl cltd dec sub imul or in adc jno mov aaa mov pop (bad) icebp mov test hlt popf outsl cmp ss loop orl lea repz xchg (bad) pop test (bad) imul imul mov insl fimull mov push xchg or fwait leave sbb in push mov imul fstpt ss negl pop cli jp aam sahf mov imul fnsave mov push and mov sbb movsl xor pop adc sub jmp out jle mov lret and in aas dec mov xchg mov jne pop add out mov sbb mov ret push int rorb cmp xorl scas aas sub loop nop add dec push mov mov inc or fldenv mov jmp mov mov fidivr (bad) sbb xor xchg pop ret mov subl inc ret fistp or jns inc mov mov or dec loop testl das shr pop lea jb movsl and inc (bad) pmullw mov loopne idiv xchg int outsl mov add xor lcall xchg rcr (bad) add lock out ss enter mov movsl aam imulb fwait (bad) lea jl add pop sub pusha jmp xor iret scas push dec fs add leave jmp pop andb fnclex fisttpl loope ds xchg jnp inc pop add mov xor mov (bad) std in ret enter push stos xor inc lock jp sbb mov dec pop and notl pusha xchg mov pop (bad) mov add xor cmp fcomp mov sar idiv iret add addr16 lret lret fbld vmwrite cmp pop (bad) leave (bad) int inc nop dec data16 pop into mov sahf ljmp cmp sub (bad) dec add add (bad) mov sbbl popf mov (bad) xor dec cmp push into into testb cld pusha test mov push or in mov or bound push cmp repnz in cmovbe inc cld fmuls imulb cmpsl mov or jp adc add inc cmp xor leave mov daa loopne cmp hlt mov inc xchg sbb cmp mov std sti ja cmp inc mov mov push mov les push push ret mov adc out lods ss push int mov and adc jno or scas jecxz outsl xchg cli insl inc mov push ljmp and das xchg mov dec pop lods ja addl jae dec xor sti dec jnp lret jp mov push lret insl jne adc outsb cmp cmp pop mov and push jae pop push add push insl mov mov pop push mov in int3 aaa inc inc fstpt xchg repz orps mov (bad) (bad) scas test lods es jae push lahf mulb inc sbb xchg inc jb or cs inc loop aam adc push lret cmpb insb adc outsb shrb lods (bad) test jno fdivrs push add ds lea mov xor mov fst mov test dec cltd and mov ds pop mov mov sub int3 sbb adc ret adc fldcw mov cwtl pop mov clc inc sbb mov (bad) movsl jg insl popf jge mov push insb nop and dec sub jp in pop xchg fldl add adc shll ss lock sahf add xor imul jle xchg mov and imul xchg out dec lcall adc ret data16 rclb leave push fucomi mov out test and repnz in jae sub dec ja xor pushl fdivl cmpb push cmp fidivrl xchg stos out mov push sbb test push add jb (bad) dec pop dec jbe adc mov leave cli or pusha je or sbb insb push sbb aad mov push cmp cmp mov add xlat sub dec fistpll (bad) and xchg rcrl out cmp in push mov mov dec pop fsubrs test xchg out loopne cltd jb and jbe (bad) jae pusha repnz sbbb sub mov movsb (bad) (bad) mov in pop ss std mov fs dec mov xchg aas stos cs leave mov pusha repz notl mov or mov into and cwtl dec add or lds xchg cmp sbb ret sub sbb xchg push popf mov cmpsb mov fs sarb fsubl fldl addb adc pusha stos (bad) adc rclb mov push mov ret and pop and inc js add sub cmpsb and lock mov or in xor fimul in pop sbb mov mov dec mov movsb pop lea push movsl fsub sti inc jle and cmp or sub cli bound mov (bad) jae dec mov pop cmpsl push inc push (bad) push mov adc mov idivl sbb cmp mov jmp loope jo lock insl jge sbb jecxz sbb rorl in and mov xchg sub jae mov mov bound cmp xor aad mov repz pop rcll adc insl cmp in cltd sbb in dec stos xchg in dec mov sbb push lahf jmp fcompl pavgw push and xor dec (bad) fldl2t lods in (bad) rcrb stos jp pop cltd ret push stos add jmp mov loopne push add dec int3 repnz jb out xor cmp es pop jecxz insb sub xlat xor es in inc cmp inc jmp push mov push popa test xchg outsb (bad) cmc std or rcr or push dec int daa sti aad cmc clc mov mov out insb out cmp and pop sub ljmp and or dec out pop aaa stos and je sahf push loopne sbb push push andl dec mov cmp fwait push rorb add (bad) fldenv mov dec test jno stos dec loopne imulb and rcll clc fldl2e inc andl movsl ret push pop (bad) mov dec aas fistl pop ljmp adc cmp xchg xor jbe pop inc ret or cmpsb pop cmp xchg std and mov push xchg sub test push data16 repnz rolb cmp ret xchg cmpsb int3 cld adc lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov mov loopne inc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb mov sub dec fidivl cmp mov arpl sub insb lods xchg insl mov xlat xchg clc fnsave add or add add push les xorl stos sbb sub daa jg lds aad nop jns mov call push mov pop fdivl adc popf stos jl mov pop and jno in mov outsl cmp mov test adc (bad) repz mov cmpsb cltd xchg (bad) jbe xchg es sub imul xor mull pop rcll xchg js jo sahf mov or jnp into inc testl jp xchg fldcw add mul pusha mov jle xlat ja and rsqrtps mov stos adc insb add add cmc lods popf mov and dec pop adc data16 pop icebp aam call fist cmp xchg loopne xchg sub fwait mov jp imul cld or mov cs sbb xor add and out lds sahf hlt scas xlat mov rorb jae stos pop popa pushf mov push xchg aam and add sub push mov ljmp les xlat orps adc clc leave shr cwtl mov dec xor add call dec jmp out dec rol mov lods and mov cmp xchg lahf sub rcrb xor shlb ljmp arpl cs movsb xor cli arpl cmp and (bad) jb out lret ret jp mov fisttpl lods dec ss inc adc sub mov mov ficomp cltd (bad) js inc aas adc rcll dec insb sub mov or mov pop aad xchg lods (bad) sub push sbb iret dec jle add xchg jge mov daa push gs jecxz add cmp adc jp and mov add pop push fsts or pusha pop inc popa mov xchg adc or push jmp add (bad) mov xor iret push rcr mov in xchg sub xchg push cmc loopne or pop ds aam inc mov xchg cmp cli adc mov cmp push rcl pop je mov dec sub jno sahf or addr16 sub xchg sbb es mov clc xchg scas aas movsl xchg mov jge pop ss ljmp orl lea mov cs jae inc jp test jo incl in cmpsl xchg push rorb fisttpll out push test adc mov sub jmp push std adc mov jnp ret add mov cmpsb sti pop pop mov loop ljmp loope dec std xor out jmp mov leave mov ljmp pop pop icebp sarb mov xor cmpsb dec fisttpl or xor (bad) xchg xlat sahf outsb cmp xchg jae jno add cmp mov out test or add mov in std xchg mov inc imul scas xchg push mov jae pop fadds push neg (bad) xchg mov pop mov sub push mov adc sarb inc dec popf (bad) mov adc mov insl es addr16 push sub into insb jb sub fwait imul sbb xchg inc mov js inc mov jo sbb mov mov jmp or inc inc or stos outsb rcr mov rorb cmpl cmp les movsb pop dec (bad) cmpsb fnstenv std in fwait test sub mov push or adc push sub cmp lahf sbbl pop pop (bad) or lock xor cmp pop mov hlt mov jae adc mov out in lock push sub sub cmpsl inc scas movzbl fcomps (bad) fwait mov jle enter cmpsl arpl mov dec je fwait mov outsb fcom ss (bad) jae jge jbe xchg jb nop add sbb xchg lahf sbb loop lahf mov xchg or daa in ljmp mov lcall adc push add push sub in sub cmpsl mov inc popf mov (bad) sub or inc and inc les xchg or pop adc fnstenv xchg push dec xchg stos inc push aad inc cmp jecxz ds loop or out fnstenv mov dec mov dec and dec jns sub mov sbb sub out jmp inc cltd cltd cmpl push adcb enter pop dec out or daa xor ljmp jns cld out cmp int out lods cmp ds add pop popf adc lret movsl sahf jmp adc and lea lock verw mov inc es push xor xor fisub subb push add inc bound push nop/reserved lods jmp bound add mov das jb pop clc add sbb adc (bad) mov jmp pop xchg (bad) sahf in mov mov cmpsb or (bad) icebp sbb jl push into xor out test mov pusha lds jae xchg stc cmp inc (bad) out mov or push call call enter push dec mov daa loope movups add mov mov cmpsl mov xlat cltd rorb add pop jnp frstor and inc lods xor aam iret or popa fisub push int (bad) mov push outsl xlat pushf pusha outsb fidivr flds je pop (bad) jne xchg ffree cmpsb jne shrb ljmp lahf pop imul ret inc insl or movsl sahf or lock cmp movl jbe mov pop push xor xlat pop lods fildl adc (bad) mov add mov xchg (bad) dec outsl movsl inc mov sbb fist inc int xchg dec jne push pop aad lods push and hlt lods push sbb ret aas sbb stos stc adc xchg mov pop add out lcall sbb popa mov loop call mov pop lret mull into cld jmp dec mov or jb dec and leave inc xchg jp adc ja and and in cmp jne mov in fmuls pop sti xor aaa push xor sahf xchg adc and inc seto nop jb popa iret ss mov or in push xchg push push xor addr16 int hlt outsl fucomi js dec std ds push imul and or cmpsl cmp fidiv pushf sti jg dec mov inc in jle cmp (bad) in or xchg sub (bad) lahf popa std dec dec pop (bad) or sub jnp xchg xor cmp (bad) popa lahf fwait clc fiadd outsl pop pop pop lea stos push push fmull repz outsb (bad) jnp movsb popa inc xor and xlat dec std fwait push fnstenv arpl or (bad) mov sbb stc leave rcrb sbb data16 adcb dec stc stos push mov rolb loopne ljmp or js add mov aad out dec xchg xchg pop test push test pop cmp sbb iret mov pop mov mov rcll adc adc aas lret les inc mov bound xchg shr dec jp adc jecxz add xchg mov ss das hlt adc or mov in mov clc decb cmpsb ljmp std enter stos inc push and mov adc pop das cld pop les cmc ds (bad) xlat aas mov xor flds add adc stc pop lods adc pushw or adc sub push jo rolb and out sbb in jae lcall mov mov (bad) jae xchg pop in sbb mov adc ljmp hlt adc mov pop test popf das lea xor pop xchg cmp add pop mov hlt repnz or push mov add inc jl push movl mov lods push dec loope mov xor punpcklwd add rclb xchg es xor andb cld arpl adc dec adc mov xorb and pop nop sbb inc sbb test or xchg pop push shrl aas fimull scas cmp hlt jmp inc sub mov repz adc sbb mov cmp pusha popf loope and add cmc push mov ss lods lret clc dec repz outsb pop mov cs adc and and xor mov out pop xchg mov repnz out std test jno lahf cmc stos sbbl xchg les movsb mov iret adc and or push adc mov outsb mov inc aam cltd push sahf cmp jbe lods mov sti aam ret cwtl jp aas int3 or icebp lahf jns mov push (bad) dec sub jnp push imul add repz add sbb jo pusha inc mov dec inc xchg scas push divl xchg pusha lock mov sub ljmp test pop jb cs xlat push or xchg ror movsl in (bad) loopne jbe mov jo fbld cltd xchg jg pop sub stos push xor aas cmp (bad) jbe cmpb popf jg sub aas mov pop inc push fstl ljmp addr16 (bad) out xchg or xor dec and sbb loope xchg mov loope movsl les mov cli add add push cmc xchg push mov push sbb sub in sbb add inc push jg cmp xor jmp mov mov xor decb in push mov sbb test popa inc das push pop loope mov lahf xchg and test sub out or mov cmp es loop loop push pushl mov sub jb dec jmp sbb aaa ss or fisub icebp in popf sbb nop insl fmull aaa int3 icebp add lcall sti roll mul out ret outsb jns movb and inc in gs mov lret pop jl jmp xchg mov jne jge xor pop pop bnd add adc jge out fisttp push (bad) push call out dec lock lds lahf push insb jnp lock mov lea pop scas test sbb mov cmp (bad) imul mov adc inc pop fwait lahf int mov mov rcr idivb imul mov loop fidivrl sbb ja push push repz repnz je sub or jg lock sarb inc xor popa add cmp test xor xlat sub (bad) dec jne push xchg in repz movsl push push idivb push popa in in cwtd mov xor push scas mov push lea push sbb xor shlb ficompl inc lods (bad) mov imul add xchg xchg stc rclb inc out out xor scas je cmc cwtl in xchg test rcll sub mov inc int add jo scas mov cmp jo popf fnstenv (bad) iret ret out ror fnstcw cmpsl movsl mov iret leave or lret hlt and mov pop cmp xchg pop xor icebp imul into mov or and mov scas jbe pushf jp add movsb insb gs mov jp cmpl and mov jno or xor iret fidivrl adc push and dec lcall nop push jg in push into add cwtl sub leave mov icebp xchg push add fldl aas jge cmpsl movsl lock cld cmc mov ljmp out js cmp out jmp sub (bad) dec ss dec das sub ret xchg movsl arpl int3 ret cwtl dec aas jle xchg push xchg insl movsb sahf pop xchg pop mov cmp and mov sub cld nop and mov mov popf fwait and cmp shr sub push out cmp fdivrl lret sarb jns and movsl cld cmp sahf xchg lods add les push mov subb lret mov push jno test in or jne sub cmp pop push fadd cmpl adc cltd add mov push mov arpl std scas (bad) pop mov arpl cmovnp mov xchg and das loop psrlq xchg xchg mov mov lds sbbb push in je nop sahf lea dec in inc mov clc push cs fcmovnu ficomp jb stos (bad) fs mov mov or add jae cmc jge loope fs adc mov mov hlt xor sbb xchg xchg dec inc ficom sub stc scas bound jns popa pop jo cmp xor ss inc push jbe fsubr ds sub or mov lahf push (bad) push es popa mov mov fwait xor cmc xor xchg dec cmc xchg xorb add pop pop les pop inc dec repnz and sti cmp mov dec outsl pusha push and mov das lcall xor pop mov movsl mov jg mov sbb or push sti outsl adc (bad) jnp scas cmpsb adc cvtpi2ps adc int3 test cmp popf cmp mov add aad lcall adc (bad) dec lds ret aaa loop pop sbb imul mov xchg clc fwait cmp adc mov cmp int add adc lea insl rcr jbe xchg sub dec lods in repnz ret add sbb inc mov fucomp hlt inc lahf aaa pop mov inc les cltd daa out arpl mov iret pop testb test xlat addr16 addr16 lods js mov inc pop std sbb jo sbb mov clc jmp test push cmp xchg add (bad) mov xor jg mov mov cwtl pop dec scas call dec and push jl andl addr16 in pop xchg pop scas push das cmpsl rol rol add aam xor push mov mov sub pop jbe mov jb and mov sahf js (bad) (bad) bound lods daa xor (bad) mov fucomi dec mov insl and adc gs pop scas mov in sub jnp aaa adc (bad) pop imulb jmp mov fistpll mov in xor cltd (bad) lock insl popl add push mov dec pushf sub and pop dec inc xchg xchg mov mov adc loopne jecxz movsl test xchg in lret rorl mov mov incb add jl ss dec fwait std sbb imul xlat jp rorb mov imul popl icebp aas jne mov and mov hlt or jnp or lahf cmp mov and xchg lret out or mov or sub sbb xchg mov mov les cmpsb ja negl or xor mov jp ss pop sub or pop scas hlt dec aaa scas cmpsl sub xchg jge xchg dec cmp pop and int3 xchg cs int stos enter iret inc fdivrl and out cmp lock and rclb sbb add mov testb jbe add gs xor in (bad) or mov mov aad popa and cwtl sub cmovno mov aaa loope out fistl push cmpsb cmpsb sbb mov mov adc fildl fidivl outsl sahf shll ret or jp sub jnp cwtl push iret cwtl es (bad) and pop add inc inc fcomps cmc int hlt test sub cmp daa repnz inc or lret push (bad) or pop push dec fwait xchg pop (bad) sti jae push push inc mov sub mov js movb cld insb (bad) stos sahf xor push iret push push sub arpl lods or sbb push xor mov mov in inc shrl mov add popa jle sahf mov scas lods (bad) push sub aad push and fwait outsl int3 (bad) mov hlt aam mov mov js mov mov mov pop sbb xchg movsb jge iret imul sbb cmpsl sbb repnz adc outsl enter xchg out in jb sbb (bad) push rolb push call sbb fmul cmp mov or xlat pop xor mov test xchg cmp cmpsb daa sahf (bad) adc divb test fdiv idivb pushw cmp iret and jge and dec sub or mov fisubr xchg mov mov cmp cld mov mov out push es dec add mov mov and push xor sub cmp or test ror xchg adc daa das adc cmpsl dec xchg loope mov addr16 outsb xchg mov dec jbe fdivl xchg xchg or das jmp scas and mov lcall jle ret or or aas lods xchg aam repz pushf cmp xchg cmp push mov xchg cmc cwtl sbb std mov insb inc andl mov pop popa push (bad) in pop cld rcr pop cmp insl sub in sub cltd mov dec fsub fidivl loopne (bad) ds bound mov lret dec xchg addr16 inc mov inc inc test test inc icebp aam cli dec cmpsl cmc into push pop jecxz adc loope leave and sbb (bad) mov xchg loop icebp lea flds scas and ja jae lcall push fcmovnb sub fcoml mov cwtl pusha xchg sbb and in inc negb jmp cld ss cmp mov lods lcall mov imul (bad) and mov push sub js les inc xchg test jne stc and ret mov pop sti dec jge mov lds inc push mov sahf jp lds push jmp xor repnz sbb cwtl lea jecxz and icebp enter adc aad and mov je lret jge ss inc pop lret mov pop sub pop lret ret xchg sbb lods ja fnsave bound (bad) loopne and mov hlt pop fwait push push xchg adcl repnz jmp mov push cmpsl and insl es stc (bad) hlt pop scas jne divl inc in loope pop sahf jl dec pop in sub inc sarl imul and inc int je aad jge sahf jb in loope push mov mov scas mov das sbb mov mov xchg test pop inc lea aad sti pop push aam lock dec fisubrl xchg mov into and sbb cmpsl sarb cli mov enter or xor dec lods fnstsw cmpsb jge in jg jmp (bad) push ror pop push inc adc lds jg imul test lahf test jecxz jns (bad) mov push mov cmp jo sub push jnp (bad) sub push xlat int and add dec (bad) or in jae cld in popf jb nop out movsl loope mov and lock xor push sbb lods pminub (bad) stc insb jmp cltd (bad) xor jb movsl mov sbb add jns mov cmp inc add (bad) (bad) mov cmpsl in inc repz fistpll dec bound out push pop or pop (bad) (bad) sarl movsl push and lahf cmp cltd push roll pop pop cmp pop stc mov dec dec sbb lahf stos lcall xor shll fs cli push dec in mov or and cltd mov sarl fs (bad) cwtl cli dec xor in pusha faddl cld js push mov clc mov in sbb into lret fcoml adc adc lcall rcrl xor xor or pop loop repz mov int3 shrb inc mov lock pusha sbb mov sbb push jmp mov jb inc xor mov rorl inc mov jle xor jp mov and ficoml ljmp mov pushf cmpl lahf push add cmpsb and iret ljmp pop dec notl xchg mov xlat movsb test (bad) movsb pop add lds scas jno jle out cmpsb fisubrl jecxz adc imul mov pop out test sbb pop aaa jle sti jmp xlat cmp push mov les loop pushf inc jge je call pop ret shll (bad) jb (bad) cmovo mov inc push fdivrl push mov inc push and adc sub test (bad) fiadd push sub (bad) stos cmpsl pop pop push daa pushf inc xchg in push stc lahf add scas xchg pop in xor arpl stos or mov xor std call mov push in xchg test rol (bad) mov adc loopne orb pop inc lahf pop ret mov inc or ljmp and movsl or lret dec push inc jae mov movsl xor add cmp stos negl in push mov cmp xor mov (bad) test pop add jmp dec test push and orl mov jns push subb cwtl les movsb ret inc push adc fldl inc push lret in sti xlat jne fistp push scas mov shr add pop cwtl je daa dec adc rcrl rcrl aam jnp inc xchg insl out add out out mov js xchg push mov dec push mov mov inc sbb jmp imul dec jo loop ljmp fildl add repnz stos (bad) outsb mov sbb (bad) loop das sbb call pop imul jle dec xor and cld cwtl inc repz push dec cld data16 mov loop test cld mov addr16 lret add jp int aam repz aas (bad) xor sub sub test aas sub and inc xlat aaa xchg test leave popa dec icebp sahf xchg movsl test sbbl scas sub (bad) lds mov cld sub xlat out dec data16 out push and jb mov ret push popf dec fiaddl rol sbb or das add pop mov icebp inc cwtl adc hlt cmp jnp insb je ss sub idivb arpl dec xchg cmpsb xor add ja pushf xor cmp push sbb inc rol inc jmp mov push sub cld pause sti or inc gs insb shrb jmp popf arpl mov in testl test mov sti insl dec das jne out ss sub jge fcoml sbb ss das fldcw (bad) int3 sub aad inc push xor shrl test xchg jecxz pop adcb lods test and xchg inc loope dec push mov (bad) mov mov sti sub add pop rorl push test mov sbb dec (bad) push aas cwtl imul mov dec (bad) and cwtl ja add push out fs pop push pop mov pushf pop mov xchg loope and xor or aad adc mov inc inc scas mov addr16 xchg ljmp xchg imull mov movsl lock push mov loopne jnp inc dec adc xchg lcall hlt test or add jl jmp addb cmp mov stos push sbb cmc or psubw cmp push inc arpl dec (bad) dec sbb jb cmp in popf (bad) jne mov inc addr16 sub jg test dec int3 icebp xlat pop or jp jns mov roll or push xor lock mov adc sub nop out pop js (bad) mov push ljmp sub scas lods mov hlt dec aam mov scas test xchg out ja mov cmp das cmp mov xchg das push inc cli xchg in mov in push jmp scas xchg cmp mov test mov fcoms (bad) and fadds insl dec loop nop rcrb jle mov pop repnz fsts pop pop add pop jno xchg out test xchg mov push push mov sbb mov dec add std outsl rorl or pop lret std aas lcall jmp push fmuls js aas push mov int in (bad) jl sub fstpt dec mov sub cmpl mov mov cmp ror cld pop or or subl stos std stos (bad) push lods sbb int3 inc pushf lahf xor xchg es rcll mov lock push mov sub rorl testl lret dec scas dec les pop scas (bad) add mov movsl (bad) jne hlt gs in lea xor fbld psubb jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add pop fistp mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc lahf (bad) ret and gs mov (bad) das (bad) lods fldt fxch (bad) jnp div sbb adc add rolb add outsl fdivrs inc xchg add test push xchg sbb out jp dec arpl lret adc aas sbb sbb ja cmp (bad) pushf xor decb lcall xchg sub push test xor xchg cmp lret adc dec fnop enter mov hlt movl cmpsl sahf inc ret (bad) aas repnz test add jp loop sbb (bad) into sti lret mov mov mov push decb adc ds cld frstor out les pop push xor add setp (bad) jbe jb ret add dec inc gs dec subl std xchg loope imul inc mov or mov bound repz mov stos lcall rclb stc iret push jge aad pop xchg adc pop mov (bad) mull cmpl sbb pop adc fimull jmp push dec fmuls and imul (bad) in das cli int3 sbb aas xchg test push cli mov into cmpsl stc movsb dec cmc (bad) loopne mov jecxz xchg mov lahf mov sub movsb cs cmp es sahf loopne mov scas (bad) divb out scas jmp xchg lds std push into adc scas ret mov pop int3 xchg (bad) nop or fwait cmp mov push cwtl or jb push cli mov imul (bad) mov xor in lret jns cmp movsb sub mov (bad) mov pop adc loopne repnz sub or xor mov sub out xor jmp ljmp fisubl xlat jg test jge stos or hlt mov adc mulb decl test dec pop ja (bad) lahf cmc add lcall dec cmpsb cmc adc js sahf jae push stc mov inc fadd scas jae jle fldl lods movsb aaa pop in mov nop sbb sub popf cld and fwait jmp pop pop clc stos cmc int3 and fidivr arpl pop ja jb lret sbb fldt fsubs sahf dec (bad) and sbb mov std sahf push fwait pushf push test or push pushf sbb add and lea jmp icebp mov mov dec stos mov aam and dec jecxz iret test adc js pop inc add xchg les out ss notl and cs shll dec push fiaddl adc push mov mov and add fwait arpl jbe cld mov cmc fnstenv sbb adc mov push icebp aaa daa sahf dec movsl mov test (bad) add movsb and imul mov mov cmp cmovns pop popf mov sbb sahf push dec xchg pop sti inc inc cmpsb xchg dec adc enter and and movups xchg das (bad) stc ret xor rolb lods add ss push xchg pop jg mov outsl ret sub xchg movsl adc cmpsb fild mov in ja xlat jp outsb or (bad) and pop ds rcl data16 inc sbb cmpsb movsl stos ret lods adcl lock pushf je dec dec sahf adc jno inc std icebp in out mov push mov xchg in push shrb cld icebp pop xor cmc or rol cld lcall lds cwtl inc mov loop jbe sub or mov pop jne push cli imulb lds hlt and xchg jmp gs lret jg jb push insl mov popa inc and not (bad) push in pop adc mov mov fwait mull and add inc stc xor aaa pushf mov testl or adc dec mov les andl (bad) (bad) push add jle sbb push data16 dec push outsl lret sub mov lahf (bad) aam neg cmc (bad) xor push cmp mov leave push jp out sub test aam ja out fisub mov mov sub loop rol fstpl xchg es xchg add jo cli sbb cmp lock add push jp mov xchg daa subl in lock notl movl xor inc mov dec cmp std or popa fimul add cmp xchg dec negb xor rolb xor cld add data16 das mov lcall sub sahf dec (bad) xchg jmp (bad) shrl sub lods aam insb add jno fwait outsl push cltd lds pusha cwtl clc je loopne lock push add jns mov ljmp aad mov gs aam enter sbbl pop stos add jno pop emms (bad) pop fs or inc fidiv negb jbe xor lds lea shlb pushf adc pop orl xor push adc rol xchg jl jmp push inc and dec xor pop loop ss movsb adc lds insl fwait gs shl out push xlat xchg cmpsb lcall in repz xor dec rcl jmp adc mov pusha and inc push aad cs cltd fs push lahf xchg cmp loopne sub fldl2e jle,pt call ss xchg adc mov mov and shlb divl and cmc sub sahf push inc jecxz popa adc bnd ds mov xor loopne xlat clc js dec aad stos sbb xor lds iret lods pop xchg adc js ljmp dec push fbld push dec inc stos sbb lock xchg xor push cld sti mov bound pushf fistl push pop in sub jp iret aam out ja jle jns rcll inc inc pop jns icebp push push mov stc pop out sub jecxz adc cmp (bad) pop mov and inc mov sbb inc int pop jne fisttpll dec stc in mov mov xor xchg mov push inc cmp mov xchg cld insl dec ljmp pop xor fwait mov push std mov test sti push mov pop push dec push jb daa sub sahf mov enter pop ds sar stos icebp pop or mull sbb inc jp aas and outsl pop mov fwait ljmp mov stos (bad) xchg jg sahf popf rcrl push xchg stos sbb jmp mov xor imulb js sbb mov into in add popf test cs xor push jbe (bad) lock sub inc jle out jnp cmp lods jae pop sub movsb sti jle pop xchg js popa or (bad) mov iret sub or sub cmp mov out push xchg cmp les add or lea clc aas push incl into sub xlat xchg push jne ja iret and adc cld shrb mov shl push (bad) jmp pop jp pop bound add sub out out pop adc adc mov lea in mov fcomps and cmovge push fdivrs dec and cmp cwtl lock pop loope fisub imul xor addr16 push enter ret insb push or or pop sub push mov lods lahf sbb pop pushf imul mov inc push fwait popa mov jg sbb lods ret or sub testl popa sub xchg push lods xor mov ror mov pushf not push fs xor pop jae mov clc sahf cltd rclb xor std push shrl xchg mov sub (bad) gs push lea sub push mov ss mov out sbbl notb cmp mov pop jns loopne xchg and and xor pop cmp dec ss mov stos out jp repz push or sbb cmp cmpsl cmp push (bad) adc lcall mov or mov xor loopne inc pop insb dec ret mov add call jp test ret mov lods mov loopne (bad) pop mov sahf inc push imul cmp jb sbb jbe icebp sbb in movsl jg push and enter scas xchg rcrb mov cmp dec dec orl repnz (bad) sub sahf fiadd es add mov inc andl mov cwtl jle lcall lock sub mov in xchg (bad) leave or pop mov or aaa inc xlat inc dec (bad) (bad) push es or mov ror sub scas inc mov lret push stos jp mov (bad) aaa cmpsb data16 pop mov (bad) sbb push push aaa (bad) jae lea scas push ret clc bound pushf stc sbb mov sahf mov add or in nop fs sti pop push xor mov mov sub jge push inc shrb dec fwait xchg jl (bad) out sbb inc (bad) pusha cmp sub ljmp psubsw js aad mov pop int3 jmp rcrb push clc lret add lods cmp fidivrl adc cltd or out jo loop negl inc mov stc lods cmp scas jbe sbb and fimull idivl leave test inc cmp pop cmpsl or dec cmp xchg jno xchg add flds dec push gs lea rcll pop jb add mov fmuls sbb mov outsl insb inc cmp out sub inc call xchg jg iret mov or cmp nop int mov test sarb sbb mov loope add add mov (bad) into ja xor dec pop jno hlt data16 xlat lahf or (bad) in or in lock cld push pop gs adc mov sysret dec sbb cwtl rcrl test mov sti pop sub sbb cltd lcall mov icebp fnstenv in jne insl pop inc add jae jo cwtl xor jp dec xchg rsm inc idiv imul jnp rcll inc call cmovp fs int fwait pushf aaa xor mov and add mov dec jbe sahf shrb movsb out or xor mov fisubr enter push mov (bad) mov sub push jne cmp push adc cld sbb scas mov mov aam or insl out mov lea adc hlt mov push (bad) and lcall push ds subb mov sti xlat jmp or inc cmp and imul movb cli dec imul cmpsl sahf mov jnp subl in scas jmp (bad) jg xor mov lret inc lcall push mov (bad) cmpsb mov shlb sti cli cmp mov cli cmp in cli fsubp inc xchg scas mov pop arpl in ret leave out insb and (bad) (bad) xor scas ret aam test jnp add dec pop ficoml xor inc pop add shrb arpl fwait pop mov inc insl aad nop enter cmpsl mov out mov push lds out jae pop dec popf jge (bad) hlt mov sahf (bad) loope jmp out mov xor lods or xchg inc unpcklps stos repz jne or stos xchg push push test loope inc xor mov pop xor rclb popa xor inc shr dec pop les sbb push movsl popaw loope push loop dec lods push (bad) aad dec incb add addr16 mov cmp fimul addb repnz dec and jg mov jbe nop add outsb sti cmp sbb xor sbb ret lock aaa jecxz push lea out pop shrb jl out pop insl dec add xor scas fwait push and movsl aad outsl xchg xchg insb sub call fidivr cmpsb xor das scas out pop xor outsl xor fist or push scas mov xor (bad) divl clc test push mov rol jnp cwtl rorb movsl scas adc or lret push stos sub push sub jmp dec popf inc (bad) fcoml clc add pop push and mov lret shll popa inc (bad) jle xchg xor fisub pop cmp sub sub sbb sti iret and dec xor cmp sbb notl test lods xchg inc and jae lret notl push out aaa xor sbb push jp mov stos icebp mov cmp cmp sub or jmp sub stos mov ret pop xchg mov bound pop scas sbb in sub push in jno cmpl inc in xchg mov sbb pop adc jns jle mov adc cwtl or adc movsb push test test shlb jmp inc cwtl xchg das dec pop xchg cmpsb add lods push fs and cmp jmp lods mov jle sbb jle xor mov test icebp dec xchg jns in push call sti xchg cmpl inc mov push rcr sbb cs dec fwait data16 (bad) xchg or mov mov das cmp mov inc inc mov add faddl out cmp iret or repnz sbb sub cld jle and fistpll sub jne clc pop (bad) jle inc xor and cs dec xorl incl pusha ret sbb and repz and inc (bad) les jl out xor pop sbb pop mov xchg clc mov rcll pop jle xchg sti lock addps fsubs fs pop pop xchg stos fldenv cmc out mov xor popf sub xchg jmp inc cmp mov andl cmp pop lcall ret push mov or pop lea adc lock jo xor outsl sahf inc jbe sbbl pop (bad) lods push pop push xor and loop out jmp push cmp mov call in (bad) xor jns pop mov test push fucomp adc pop stos dec sub lahf fstl sub push aas sub (bad) gs adc cmpsb pop sub stos das cmp mov mov mov jo jle sub lret mov rcrl rol mov outsl movsb or push dec mov dec or and stos and add nop fadd adc lds adc divb push (bad) cmp outsb jecxz jns popl jne cmp dec movsl rcrb out out pushf lock stos lods ret sub ja inc mov sub pusha pop imul jbe daa jo jo mov push stos cmp lods cmp das lret jge mov xchg arpl mov enter pop rcll aaa mov adc mov in mov sahf (bad) add jle gs fistpll dec sahf enter sub jge imul dec lods insl sbb sub in outsl fs ret jbe adc sbb pop adc fimull mov lret push adc fisttpll cmp sti repnz jne je xor stc shll loopne xor pop std mov stos lods dec rorl add cmpsb sbbb push mov and pusha (bad) repnz inc lahf into sbbl inc adc loopne out pop xlat lds imul push mov xor sbb and ret push jne fcmovu pop mov sarb jl mov xchg mov repnz xchg push cmp arpl dec insl call mov sub mov jl paddw xlat mov stos js lock inc push mov xor mov hlt in push repnz (bad) lock and pushf xchg (bad) (bad) mov adc sub xchg stc ds ja xchg xchg adc lea movsb push aam jno aas or stos push les mov pop fbld xchg mov arpl push fbld iret xor insb xor push mov pop xchg dec dec pushf cpuid dec out xchg ficomp gs ss and mov fs rolb xchg pop cmp jo mov loope cmp adc xchg cmp (bad) mov sbb ds mov dec insl xor imul inc inc push xor hlt jmp arpl icebp outsl push (bad) test shr lds push cmp test xchg (bad) sub stos mov bound test mov xor lret lods adc rolb cltd dec sahf jge scas xlat cmp pop push sbb fcomip cs cmp inc mov jecxz cs mov popa dec outsb movsl and cld jmp fimul jnp add push pop mov les lods cltd xor je stos arpl dec cmp xor leave mov xchg or add iret pop lods xchg ret xchg add cmpsb mov pop cmp cmp add inc mov scas (bad) mov jo add mov push popa sbb pop jmp mov push mov cli add xlat incl dec jae dec mov fucomip mov ljmp xchg fadd lcall int3 hlt mov in sub push or xor xchg insb jnp in jmp lret fcoms mov mov imul ja les mov (bad) bound push jge cmp push inc dec imul dec xor inc xchg or pcmpgtw mov fcomp icebp cmpsl inc fcomps roll push (bad) into cmp jae (bad) das xor push mov out mov outsl out or jl mov ror pop mov sbb cltd jo adc ja add bswap mov mov and stc sbb idivb int (bad) xor je push push xchg fidivrl setnp dec xchg (bad) cmp aaa in (bad) mov jns rorl xchg add fwait or mov xor loop in aaa pop test stos daa in pop (bad) clc mov sbb mov pop xor in in test fidiv shlb test push mov adc mov and lock shl nop pushf add pop mov scas in xchg (bad) or orl adc insb pop jae inc cmc aas lea repnz cwtl fbstp mov fnstenvs jg push loopne nop or mov out das xor divb int3 test jmp int popa inc gs out pop lds and mov call mov xor xchg or pushf fprem popf mov sbb repnz insl pop mov (bad) pop sarb add outsb arpl test inc mov into adc mov xchg iret movsl xchg cmp int3 outsl inc stos xor pop nop pop dec in sahf cmp mov add add or push out pop les dec enter daa loopne sbb rcr jae push sbb stc clc leave pop (bad) jne pop insl sbb mov cmpsb out push lret mov add test pop pop test jg rcrb adc outsl xchg inc jl xchg add sub jle je sub mov std icebp movsl sahf and popa scas (bad) (bad) cmp out push dec adc cs ss cmc cmp push jo outsl lret movsl jge js jp sub mov arpl xlat pop popf aaa ds inc lcall int adc das in (bad) aam aas cwtl pop jg es xor lds jl adc repnz repz nop or and gs (bad) decb ja cmpsb (bad) cmc jae jle insb xchg adc xchg mov insl fucomp xor repz cmpsl bound es movsl sbb arpl inc mov adc add cmp jbe push fs cmp rolb jae add js dec cmovno mov hlt outsb lahf stc ljmp stos mov jmp mov cmp or push sbb cwtl push dec insb movsb pop popf cmp jo mov inc ja out and clc dec inc jno and add outsl scas push inc test iret lahf das mov cmp in sbb cmp pusha mov mov sub inc addr16 sahf sub (bad) xor push cltd lcall dec pop jg fldenv mov (bad) or pop or mov push or mov rclb pop mov sarl repz adc adc ret xchg rcll jp mov outsb int add sbb adc mov mov mov ds jne mov lret and outsb mov (bad) outsw ja pop sbb mov fwait push pop and pop loope lcall dec cld ds push pop dec out ret aam test mov movsl aas mov (bad) icebp cmpsl cwtl mov add sub mov push cmp jnp add dec int3 xor add push std pop fistp xlat in cltd push imul cmp jge (bad) hlt fcmovu dec xchg dec jo and adc fistpl pop hlt cwtl inc orl jecxz add and inc out push jge iret xchg scas mov ljmp push lret test outsl mov stos pop push pusha push pop (bad) icebp fsts or push push out insl jns dec cs lcall push imul xchg test xchg push (bad) in or sbb sahf jb test mov sub mov pop lahf bnd lret mov mov push mov lock aas int movl fmuls cltd xor inc popa aam pminub add lea enter jno int3 dec scas pop int3 pop and int push aas (bad) repz in sbbl sbb dec mov rorl iret mov daa test xchg push fldt insb test mov dec adc fcoms lock add jge xchg fdivs clc jbe xor pop pop sub dec adc addl push jb xchg xchg adc jl mov adc clc in fild in bound jg sub mov sub fcoms outsl jns and xchg stos adcl jmp and out ret push iret jg aaa dec dec add xlat cmp decb je push jbe push mov pop xor iret jle jecxz pop loop in and dec popf xchg sbb popa ficoml popa xor aas repz mov mov (bad) leave add (bad) push xor mov sbb decl pop sar mov sub xchg cmp jns jnp sub mov data16 or inc popf cltd push mov aam push jo cmp das xor testb fmul out push mov rcrb push mov adc jmp pop out inc mov mov add fimull inc out faddl in mov push mov push sub mov mov pop enter sbb inc int test push arpl mov jmp push xor std insb sub push dec sbb cmpsb pop adc mov std xchg sbb cmp cmpsb leave xor mov popf shrb pusha pop add mov loope lock mov arpl jno jle xor popf repz fwait mov ds add scas mov fs fdivrl cmp jae incl add fnsave daa push ljmp in in aaa pop mov mov cltd mov dec mov leave pop cmp adc jp adc mov sub adc mov roll (bad) jne mov mov ret sub nop xchg je gs jle or inc xor int3 lcall orb scas dec add or dec jo pop jge sub repz ja adc sti adc mov sub add sbb and pop scas rorl icebp out xlat test loope inc pop jnp aam mov or (bad) jno push dec (bad) cmp jmp add or cmp fisubl in andl lahf data16 sti dec jmp pushl mul (bad) mov mov scas inc or fldcw dec rorb mov or jno xchg mov dec xor sub sub mov jnp push mov (bad) sahf jmp in outsl pop stos pusha push pause es data16 xchg sahf nop movsl not (bad) push pop repnz sbb and out je jmp cs inc outsl xchg stc sbb inc cmp lret and pop add fidivrl fs jge push mov lods xor sahf fistp jmp add insl mov sbb jno loope pop mov cmp xchg or pop ret jns adc outsl int ret and inc or sub (bad) sti inc ds sbb push dec aaa (bad) xor dec clc daa loope pop out mov das outsb jns push popa or mov das out and push imul dec cld pushf xchg or sarb xchg push out sub pop enter enter data16 fstpl jae cs scas push jle ljmp outsl popf inc lods xorb popa test mov dec jnp cwtl fcomps mov lcall les mov sub xchg adc xor xor test sub adc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild sar out in or inc sub dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add stos xchg (bad) gs (bad) mov push mov (bad) mov fistl (bad) repz add pusha add mov ja pop nop clc push sbb imul mov adc sarl je inc xor cmp andb (bad) out dec jmp sahf sbb movsl inc cmp ja and icebp imul push inc fwait in dec dec cltd in scas add sub aad cmpsl mov repz aad mov negl pushf cmpsl mov rclb fsubl popa shrl ds mov xchg fxch repnz pop pushf jg in orl mov cmp enter xor cmp adc sub adc out cltd lidtl cld mov or xor mov push mov (bad) push mov lcall pop mov or andb out ds cmp pop mov mov and stos shlb inc inc call (bad) push xor std push push and lret subb shl sub jo imul in (bad) mov mov mov lods stos insl mov jno dec pop lcall sbb cmc fildl rol dec loopne fimull ja adc (bad) fistpll push cmp add scas js les mov push adc adc iret pop lea jns push lods adc mov dec mov mov lods lds pop push xlat (bad) das rorl shlb jle jg (bad) sbb jo movsb adc incb je mov and ljmp pusha add das fcompl (bad) inc pop jo iret test add outsb rclb movsl mov faddl cmp xchg pop pop repnz pop mov or mov out repz pop or sub repz jge rol pop and int adc movsl cmp jo adc cwtl data16 sbb aas lods jno or (bad) (bad) leave mov dec jne ljmp lods fcmovnb les push dec sbb jns out dec mov movb mov add adc jl scas mov jmp shr inc push sub dec addl mov mov cmp add xchg add rcr pop jns stos mov jae shufps xor int loopne add inc push das push daa inc scas pop or or adc xor fstpl cmp and movsb pop jmp icebp sub xor data16 mov jle sub or int xor push adc xchg aad (bad) or mov push or subl cmp dec jne dec icebp out out add jne lcall mov sahf mov (bad) loopne mov push xor cmc mov cmp xchg es test ja loopne scas call movsb sbb pushf jne pop mov (bad) cwtl cmpl mov imulb (bad) das jecxz jmp ja pop loopne popf jbe add fdivrs sub lahf mov js lods std mov dec aam jmp or mov jecxz daa inc cs fdivp inc ret inc rorl orb dec push repz xor cmp push (bad) dec stos adc ss popf out fstps jle jmp lods cltd stos jne ljmp cli (bad) sub mov sub xor add arpl cmp mulb xchg sub mov or pop sbb push jo and prefetcht0 push mov rol rorl lret add and std adc icebp inc xchg jno xor dec sub mov clc mov inc repz in daa es outsl mov or xchg mov ss lds aaa mov out ja mov (bad) cmp dec repz mov clc pop fstl mov int test mov inc in shlb fimul inc rcrb and aad mov inc (bad) lock xchg mov int das xchg mov loopne mov add pop repnz js or scas inc sbb mov mov mov cli pop fcoml add lods sub jge lret leave sub xor aaa add pop out add movsl ret mov push inc pop (bad) sbb mov adc je xchg sub xchg adc xchg (bad) loop mov mov pushf add popa mov push jnp test out mov scas jg sub pop (bad) add xor jmp push lods add in mov xrstor out scas icebp xorps sub (bad) dec fdivrl or cmpsl lds mov fsts stos fucomip jmp out push mov pop pop lods sub adc stos add int3 test fdivr lds repz cld pop pushf je add faddl mov pop jp adc dec stc fwait (bad) xor aam add fxch shrb cmpsb rorb push jo gs or mov (bad) xchg mov sbb leave push pop lret std icebp mov mov leave sarb rclb fwait enter mov xchg add lods pop imul addr16 scas dec (bad) push xor mov inc jl repz jg jp iret and in mov fistpll movsl dec xor leave mov fninit aam adc push int3 fcom pop xor fs dec or loopne aaa mov jge mov out jecxz add and dec dec xor pop aaa mov push or das sub pop push mov pop shld or adc dec outsl add daa dec push push or call mov shlb pop icebp or out xchg aaa rorb lods xchg sbb inc sbb add repnz push mov fisubr jp ret push out mov push clc in (bad) mov aad call (bad) loop pop mov lcall inc inc or in in cmp mov lock lock or mov (bad) out rcl inc dec divl sbb pop cmp dec daa dec pop addr16 stos lret ficomp cmp mov jno fmul lods out adc sub mov push dec aam (bad) aas (bad) or xchg gs xor imulb cli mov popf mov push in adc aam jg les pop int jp stos xchg mov mov add test cld pop jnp in mov outsl aaa pop cmp addr16 pop mov std stc mov aaa xor or sti sub mov test and pop loopne aad dec fisttpl loopne or mov cmc js push add xchg xor xchg push pop ss mov incl scas and out xor jne mov and into sbb mov leave xor cmp (bad) rolb cmp (bad) adc dec ds and add mov sub jns xor pop out mov mov or xchg jg clc xchg push pop add out jne mov xor sahf cmp sti pushf mov and mov sub xchg dec add add pusha xor out cmp lret mov xchg jge imul int3 jns pop sbb in fbstp mov push mov ss mov ds mov pop dec movsb add dec (bad) xor sub dec rcrb push addr16 mov dec pop pusha (bad) xor add cmp test mov gs lods cmp inc cld push mov mov loop dec movsb (bad) in dec jecxz adc jecxz sar mov leave enter push out loopnew cmp xor aad movsl sarl and lea sub jnp sbb jge mov lods pop (bad) faddl xchg or hlt mov fimul in ja je movsb (bad) into dec pop mov inc and stc and push (bad) cmc test into pop mov jne cmp dec js mov mov clc or sbb jg movsl (bad) adc ret je ds jnp mov pop lods or dec push and ror rcll lret xor data16 fidiv jo es lock in or push (bad) idiv jmp movsl shrb sti xchg cs add test imul add lea iret or push fs dec mov jnp fistl mov mov outsl fcoml cmpsb mov or stc add repz mov cwtl imulb jnp (bad) decl daa into adc pop insl fisttp lods inc mov mov cltd adc push pushl mov and pusha bound (bad) fcomp bts (bad) cmp inc jl test repz test push sub incb mov adc mov mov add (bad) mov cmpb or sbb mov jge mov xchg ss lret push cmp fbstp mov xchg fstps lea mov mov mov inc stos mov lods sbb lret out subb mov aas ret jae inc mov and xchg adc or test cmp in mov aad or pop mov out add xchg jge lcall lahf mov pop aaa xor es into (bad) out daa inc xor lea and aas pop sbb lret cltd dec pop stos iret jmp scas fs inc in mov add mov inc insl popf lret inc subl lret mov ja out repz xor cmp adc adc sahf push sub gs test rorb jo jne mov ljmp or push pop (bad) dec icebp push mov sarb adcb aad test add int das lcall subl pop mov icebp pop fwait ret pop das add out xchg sahf js xchg inc insb fildll inc and fsubrs mov call mov daa dec sub cmp adc fucom adc xor xchg mov or inc fnstsw xlat push aam popa xchg xor aaa and (bad) std pushf int in xchg add xchg mov outsl enter or mov lret mov subl adc lock jnp xchg add imul (bad) dec push (bad) adc and cmp popa inc fucomip pop inc pop mov int mov out loop mov add pop (bad) push push and test call loope inc loop xchg and popf sub into cmp inc lods aaa cmp add xchg (bad) xor jo rolb xchg push and push cmp outsb and jmp fcomps adc jp sbb aam pop jnp in dec repz pushf stc push jecxz add xchg jg xchg movsb iret shrb xchg stc cmp fiadd xor mov lea out test jnp jns jmp dec jnp inc and inc xchg mov ffreep jge out cwtl pop popa sub xlat outsl mov xchg mov movsl nop fcoml add out and adc sub jl mov jle loope mov dec sub fcoml xlat push add jb sub xchg lret cltd adc sbb lret iret xchg xchg movb mov mov pop lret and ret push xchg push into jmp sub lahf pop push ret jns stc lods lret inc xchg or jae daa clc test lret push ret xchg hlt inc push std push lahf sahf dec icebp stc pop or cli push jp or adcb ds in sub and add xor cmpl jnp pop outsb inc pop outsb in jae push dec shll dec inc enter mov shrl (bad) lret imul push ret mov inc inc mov lret mov stos imul xor daa or mov mov cld mov jns and cltd and aad xchg data16 jmp insb int3 ret int daa shrl jb mov dec mov rclb add adc ficoml out pop mov mov pushl sarl mov lret ret incl mov in ret (bad) inc sbb push es push std mov ds mov out imul xor lock mov lods jne call xor add jp movsb scas imul or stos inc lds fdivs xchg int3 xchg sbb push xchg cmp dec dec push inc int fidivrl inc pushf and inc (bad) int adc push aam xchg cwtl sub ss (bad) jl or fdiv add sarl pop xchg pop jo into adc push adc ret test test jecxz pop cmp dec jle pop popf rcrb outsb xor push cmp mov lahf loope jle cmpsb lock add pop imul aad imul (bad) push and xlat cmp inc cmp add mov into inc rorb jmp ret pushf mov push inc imul subb inc jae stos jp outsl in outsl xor add iret call jmp cld adc push (bad) mov inc push pushf insb fist or sub sbb mov xchg cmp dec data16 pop mov into xchg lret nop fsubr lcall cs outsl and call leave and push daa xchg out aaa les xor (bad) fs or add jle sbb icebp pop loope,pt or mov sub call scas push xchg mov stos mov adc cmc mov fimul insl sbb cltd jge enter push (bad) sbb (bad) mov xor cld sti fildll xchg ret add aam mov addr16 dec test cmp mov sub fisubrl movsb loop out push pusha mov ret lahf push sbb ljmp xchg (bad) dec jl rcrb outsb jno call stos daa mov lds xchg jecxz adc jb push push xchg imul push repz fcomps stos xchg jg mov dec outsl xchg push sti int adc aad mov scas jp dec add push adc cli in adc pop pop (bad) fdivl mov data16 inc inc mov lcall int pop sub pop xchg lods mov cld add and xchg sub sub in fmuls (bad) repz mov repnz imul das movl jne bound bound out sarb addl lods add pop mull cmp xor les out repnz pop sub dec in in jns xor jl (bad) and or in pop loopne ffreep or xor (bad) mov xchg lret jle lahf xor test pusha sahf add push ds insl (bad) adc cmp jns adc lahf and jbe std fcomp xor adc sub test sub xor cmpsb mov lock or mov call fwait leave fisubl cli sbb sbb add add push adc out jg inc int3 (bad) cmp sahf adc adcl and dec shr or test frstor (bad) outsl add in (bad) add and js popa pop sbb js ret pop popa lahf cli pop mov mov push leave sub add sbb jmp stos cmp mov loop and mov ja jecxz popa pop mov or xor aam sub sub xor out lds mov push xor sbb data16 or inc mov nop shr xor pop mov mov mov lahf xor add inc add cmp add pop cmpsb xchg aaa pop aas fbstp roll outsb dec xchg mov push scas call (bad) xchg push mov pop mov inc and loop (bad) fnop movsb data16 (bad) cmp aam sarb mov or test xchg imul mov imul fsubrs xorl xor xchg push xchg jb bound dec int jnp and pop or mov adc cmp sub jns scas sub arpl mov sub push mov push imul or sub test cmpsb aam xor ljmp (bad) ja out nop push pop outsl decl loop into das inc mov pushf insb fidivrl sarl inc jb inc into retw imul inc (bad) jb roll lahf xor jno mov mov pop rclb pop mov ss jp out jp es daa mov cs jge sub adc cmp ja pusha inc arpl mov movsb inc movsb mov jp bnd daa and das jmp inc sarl subl adc ficom push push lahf loop dec fsubl insl icebp sub mov push lret (bad) gs add stos inc jo push jae outsb iret add movsb add cmp push jo sub test lds pop or mov jecxz in (bad) call call sbb inc sub (bad) jg sahf outsb repnz jbe mov (bad) por es idivb lret sub xchg mov fildl jno test popa cmpsb sub adcl dec mov mov imull fnsave mov imul ret in jecxz test jnp jo xor push out inc stc mov push mov stos sbb xchg jp fucomi nop shll fwait mov inc into int3 fildll cmc jnp ss inc pop icebp jl leave js int3 pop cmpsb push dec outsl xchg push and js push leave pop fwait add pop (bad) mov jge push jmp fsubl mov mov lds rcrb aam pop or fildll mov pop lods scas shr iret sub leave (bad) mov (bad) out push (bad) mov in and repnz inc fmull pop xor pop xor scas add adcl (bad) rorb mov cltd ds in fcmovu adc loop push lahf mov cld jns mov loopne push std sbb pop push fbld leave push sub sub cwtl js xchg xchg pop xchg ret mov xchg repnz or loopne daa push nop push sti repz dec adc out dec dec repnz lahf cmp cmpsb inc jge and stc fnstsw cmpsb cmc mov cmpsl adc jae out es sub add ja das inc sbb pop js sub icebp enter inc lods imul xchg cmp and repnz mov stos mov out xchg aad les push and or shr lds dec movsl jbe mov xchg sub nop (bad) push pop aas idivl out add stos test mov jnp (bad) mov (bad) xor mov mov pop mov cwtl jb ret nop iret ds insl dec insl popa sub cmp out pop movsl pop movsl roll xchg xchg mov jne xchg dec inc mov out movl add xchg xlat sbb (bad) repnz jle sub movhps scas flds dec fisub cmpsl lock pushf out ficompl ret xchg (bad) jne (bad) lahf ret cmpsb cmp inc mov add sub dec jecxz sub or shld jge mov pop mov jne std ljmp mov add ss add lcall xor sahf out or loope and fist mov jbe mov enter arpl sub sub pop mov xor xor stos jnp jb mov inc dec call stos add out clc in cmpsb mov cli pop jb lock js inc adc ljmp fdivs inc adc inc pushl scas dec getsec jns ret lcall cmc js jno (bad) dec xor jge lret mov push roll or dec movsl arpl mov test push ja push popa divl mov xor imul lahf jecxz add push jo test pop push push pushf lea out sarb cmp cltd adc ss sbb cmp lcall inc jp and lret (bad) dec leave push dec mov jl movsb gs xorb push cmp ds out adc cmc xchg jo andl mov push dec push adc aad cld cs push mov popf outsl adc xchg pop lahf fwait in adc lds and mov mov stos subl xor inc mov xchg pop push push cld sbb push cwtl jle loope dec mov xchg inc mov jne (bad) xlat xchg mov loopne clc fiadd xlat jbe dec rcll cmpsb cmp outsb cli sub cwtl xor mov loopne jg add push dec jg (bad) xchg inc xor and dec jb pusha cmp mov or sub ljmp add sub or pop scas mov dec popa cmpsl sbb popf loope lcall pop dec mov sbb ja sub xchg pop xor pop cmpsl and mov cwtl shll add pop mov push sub pop cmpsl loopne mov jno out or out mov rolb add std inc or out add rcll clc ja dec mov adc dec and mov (bad) fimull cli (bad) nop enter cmp fildl pop xlat ret xor ljmp add sub mov out push ret jge push sbb clc fabs push jp or mov jbe ljmp les movsb dec dec fbld imul repz cmp cs and adc adc mov adc int3 inc adc sbb pusha ljmp push mov inc enter psubb push ja das out out popa mov jb adc or push test inc imulb mov imul sub cmc scas add mov mov inc dec les or out (bad) cmp push sbb fs sbb mov repz out dec dec jmp jp push xchg loop xchg cmp call cmp std leave sbb cmp xchg movsb std push inc andl mov movsl add push int3 push movsb cltd cltd cmp jle stos loopne mov pusha mov icebp sub in or add dec sahf dec pop mov dec sti jne xor xor addl lods sub and pop mov add daa xchg cmp xor jecxz pop test jno (bad) (bad) and adc (bad) cmc testb or sub xor insl dec mov js and call and pop xchg iret mov (bad) rcrl push and out jb (bad) les sub or lods sbb pop or fdivs mov scas es adc cli je divl mov aas repz or mov nop add call fcoml push mov pop arpl scas jle cmp mov sbb lret aaa or cli stos adc iret shlb dec iret xchg test or jle aaa xchg pushl fsubr mov sub (bad) clc cs in cmp sub jne gs xlat jge xor jb and cmpsl lret jg movsl movsl sbb je aaa arpl sti dec ret and lret push lret mov push div or xor and cli imul push xchg (bad) imul (bad) push gs into mov lret xor enter mov mov cmp inc adc pusha hlt xlat adc sbb add xchg push jo jbe sar jbe xor (bad) push mov cmp pop inc (bad) cld inc gs cmp xlat pop in sbb inc xchg mov sbb mov xchg dec pop aad push mov pop cmc lods sub mov arpl mov into sbb aaa mov push movsb nop push xor push andl pop sub jge or js pushf aaa push aaa lahf cmp movsl inc jno int addr16 js loope fstpl or jecxz fadds sbb pop inc mov out fstpt mov ret fcmove int3 jmp das popf (bad) lret push in pop addr16 push mov hlt jle jecxz outsb shrb mov cwtl jb (bad) fcmovu push push dec push test xchg adc repz xchg out xchg outsb lcall mov push stc out test out stos iret das mov xor pop xchg push leave xchg cwtl dec adcb aas pop mov xchg loopne or ret aam push push push int3 mov cmpsb outsl repz loope xor sbb jae fwait or cmp mov ja (bad) iret pushf leave popf mov add lahf ficompl int3 stos daa insl stos mov movsb mov inc xchg std shl (bad) aam xor cmp fmuls jmp lock push dec imul cmp (bad) (bad) xchg mov std push mov in call aas cltd jp,pn sbb ret ret cltd addl fldenv fldcw fsubrs icebp fidiv jmp outsb fscale push fiaddl clc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add popa les dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sahf or (bad) mov jno fprem1 movsb (bad) lds stc pop out jle add add in inc out jg adc nop and fild cmp lods jle aam loopne test out jmp push (bad) mov fwait popa jo cmpb jp cwtl sbb outsb jecxz jle negb mov rcll and mov xchg xchg arpl jge ficomp (bad) lock fucom inc stos dec push dec cmc mov cmp dec sbb xor mov xlat jns ss sbb pusha orb test pushf dec push pop xchg divl pop mov inc pop push mov push (bad) jg stc fcomps sbb pop (bad) cmp out mov fild insb hlt jnp jns jge push popf out lds pop pop and mov arpl add xchg push call push bound adc in enter jbe iret mov and mov sub push sub inc sub mov mov dec mov inc push xlat gs sarl scas das addr16 jo jo test xor adc mov mov std pop hlt inc fidivr lahf cltd push dec adc fdivrp dec in movsl push xor cmp lcall pop out lcall inc std pop and fnstsw rclb (bad) mov fsts inc jbe dec xchg mov jge mov mov data16 sbb mov and fbstp mov pop add and mov scas aam adc pop inc ret mov mov out in in in repnz adc arpl leave mov mov enter lods arpl dec cmp fdivrs outsl cmp jns push fbstp lods pop in lret out lea sbb xchg add cmp push lea push push int call mov lret stc push adcb or jmp pop jb jl sub inc add pop pop pop ret pushf sbb mov ret sub xchg call imul mov xor sahf insb pop sahf sbb popf sahf inc pop aad xor dec mov pop mov xchg jnp xchg xor outsl push (bad) adc cmp aam push enter adc or dec shl sbb movsb enter notl mov sbb ja stos outsl inc pop sub pop (bad) roll and cmp sub (bad) lds mov clc or or mov xchg pop xchg xor sub orb imul insb repnz adc iret insb push sub dec stos ficom sbb mov fdivl cs test out in and popf (bad) (bad) cmp insl hlt mov mov inc push lds loop and js popa pop outsb xchg out jns pop xchg nop shlb mov mov cmpsb in lods add gs test es lods adc push fsubrl xor inc cld mov aad iret mov cmp loope test mov cltd push ja lcall (bad) out pop pop sti xchg and or sub (bad) mov fldcw inc clc jne and mov (bad) (bad) stos (bad) mov imul lea les xchg cld into out cmp int daa (bad) cs and int3 jns aas sbb gs sub pop jns xchg shrl or loopne test or sub test mov test push stc mov or nop test addl (bad) or pop lret pop enter xor and or test xchg (bad) mov popf mov mov jo pop dec sub (bad) inc jl pop and fmul addr16 or adcb ljmp jl ja adc or xchg call sbb xor sbb jbe sub dec jge sub xchg dec pop cwtl into adc push jnp sbb jl mov or push cmpl in sub test movsl and xchg in mov push dec xor pop rcll test sbb xchg idivb movsb pop (bad) dec mov int pop cs and test repnz shrb arpl pop adc mov sub popl jnp js pop sub push mov imul pop mov rorl xchg cmpsl (bad) stc (bad) ss xchg test cwtl sti aam dec cli inc sbb fs jnp es mov xchg dec pop rorb ja (bad) dec adc lahf and mov daa les adc xchg aam aad sub lock xchg insb aas sbb loopne jmp fwait aas je sbb push fdivr dec cmpsl pop popa adc dec xchg push std je sarb mov push ret mov xchg das loopne fstl movsb xchg adc xor cmpsl into lret int3 outsl lock pop jns lcall int3 mov xchg inc fdivrl jnp loopne sti in test sbb mov icebp test rcrb push out lahf in mov mov sub js sbb mov jmp out jb jnp into shlb xchg stc inc imul push icebp enter inc adc bound fwait mov aaa aad enter ljmp scas xlat roll lea (bad) mov sbb mov insl es lahf je int3 mov jle mov inc jae out adc xor jnp andl mov movsl idivl aaa push (bad) cmpsl pop movsl mov inc push sbb pop mov ret roll push stos cmp xchg or inc cli mov xchg bound add push data16 sub push test (bad) or jmp sarl mov icebp add test push sarb pop sub xchg adc mov push les std push xor js mov pop sbb push push pop jge mov fdiv or jl loope and xchg mov fisttp mov mov and mov xchg inc enter (bad) mov dec orl js (bad) mov lods xor xchg adc or dec (bad) xor dec inc pop das or adc jbe mov out jp cmp aad in cmc mov add insb cltd push pop sbbl pop mov mov imul repnz mov dec sub rcl loop outsb jns stos push xor das cltd stos sbb jle cmp xor sbb inc cmp cmpsl dec fisttpll es das dec push or fisttpll mov mov lods sti cwtl or inc js leave lods icebp and out into xchg test out or nop xor add out in test xor jns push xlat or pop je mov scas cs sbbl jmp jl rorb push pop adc mov jne add pop xlat insb clc loope cmp sub ret mov pop lods enter xchg (bad) push in jb sahf lods pop lcall in lret pop jno inc or push fdivr (bad) fidivr aas sbb add sbb popf ljmp jp cmpsb (bad) sub mov push xchg mov adc adc in stos stos and xchg loop addr16 dec pop inc clc inc mov jp cld stos sub (bad) daa mov pushw in lahf je cmc aad outsb cli pop rorb xor mov insb and stos cmpsl stos add lods xor insb xchg push xchg sti call pop sub or repz int or enter out mov jne push (bad) int3 mov xor mov lock push movsl scas hlt sbb (bad) sti xchg lods jl sub test inc bound dec in std jmp pushl cmp sbb and push (bad) cmp pop loop or xor cwtl arpl or mov jno stos (bad) sbb icebp xchg mov in insb out in cmc cmp xorb testl or mov push insl pop add lea mov jge jae xor out data16 add xchg xor repz xor sahf mov push int imul addr16 scas dec insb adc rorl adc mov lret lea (bad) jb push shll mov js xor cld sbb jne dec cwtl or (bad) jae and and or sbb inc ret jecxz inc and mov sarb rcr stos xchg pop dec pop rcrb push pop scas popf xlat repz lret test mov push mov cmpsb dec pop mov cmpxchg jmp std or mov sbb xor and lds mov int repz add mov leave push add mov js xor cwtl je mov xlat sbb jo sub int3 pop pop pop fisub movsb mov repnz sahf or sti (bad) dec sbb frstor jns or nop push jbe out pop mov arpl xchg lds cmc popa nop add mov ja xchg xor stc xor stc cmpsl jno jo mov icebp dec dec cmp add lds push pop pop cmp (bad) xchg hlt inc in in mov lods pusha and pop xchg add (bad) std stos ja out add ficomp sbb int3 rclb adc (bad) std inc or add fild push loope jbe fiaddl test insb cmp in jb rol jmp pusha sub lret jmp lods loope push dec push div pop jl mov add and fwait ja in lret dec test (bad) mov lahf sbb xor clc lods mov shr roll popa mov sub adc lcall push push test pop jecxz ret fadds pop xor ret inc and cltd cmp mov push rcrl imul nop pop outsb arpl xorl aam outsb dec or and pop inc jne decb lock loop xchg xor xchg ror pop cli or sbb or xlat loope push imul out les pop sub jle pop test push and jne pusha inc rsm ds xor pop pushf mov push xchg ror adc inc add adc leave stos jmp lods xlat pop adc out div cli cmp (bad) mov jg repnz fsubl pop jg lds xor jge insb rcrl sti outsl aaa std ss into and cmp add ljmp (bad) (bad) aad add push fbstp mov in cmpsl imul dec jle rorl clc jg sub xchg dec mov cmc jmp mov push xchg aaa pop push lods scas shr push icebp push push int3 (bad) in or dec lds jns jae cltd test and push sub or mov mov std sbb test sub bound sbb push xchg cld mov and lods stos and mov add in repnz dec (bad) xor pop gs imul mov mov sub cltd jne push add (bad) fmuls out adc xchg add and lret or mov dec mov imul in icebp fldcw mov mov aad pop divl out jecxz mov iret cmp dec fcmove pop push popa mov lods mov stc rolb loop inc jnp popf aaa add mov (bad) das mov mov mov push push inc mov xchg stc push notl xchg push hlt ficoml sub int3 jbe and fildll or push xor sbbl cmp test adc sub inc jl push mov xchg xchg dec adc add shl (bad) pop and (bad) xlat pop addl lret and test movb mov push jge mov fstps shll in or jle xchg outsl xchg lods or subl sub (bad) xor (bad) fldt daa dec out lds or lcall stos imul push (bad) jns jmp imul sbb fsub jbe inc out mov loop data16 (bad) popf or lock jle lcall cmpsl cwtl (bad) sub jbe fwait jb das ret lods inc (bad) loope xor nop enter (bad) out pop jp mov rcl inc jno cmp mov pop jns aaa sti int out test pop pop xchg jle mov sub pushf insb jmp mov pop dec push scas mov cmpsb jnp cmp mov mov dec dec gs repnz cmp mov leave push enter outsl adc dec test enter addr16 pop movsl das add cld dec bound xor jne pop loop xchg (bad) push sub aaa sub mov jo aas imull mov fistl inc fiadd jae mov push call mov out pusha aaa test rcrb int inc xor movsb test mov mov add clc inc aaa int xorl enter das cltd sbb pop xchg cwtl popf push (bad) jge inc inc (bad) negb pop cli notl push push xor push arpl sahf xchg (bad) je mov aam in ja outsl xchg sti daa popf fistpll xor or insl push std jno outsb movsb in stc in jge nop ja cmc shr jae push mov sbb sbb mov (bad) sbb ret jne pop stc lret xor (bad) push lods arpl cli outsl dec jl inc daa xchg aam pop call xor push fdivrs pusha icebp loope icebp fwait cltd inc xchg or dec stc mov insl call lret loop cltd bound mov inc mov push cmpsl xchg pop test pop fwait ljmp scas cmp cwtl push ss xor (bad) pop addr16 push mov arpl push xchg (bad) int jnp mov add ljmp hlt adc ficoml daa mov lahf bswap aas xlat or push mov lods cmp stc push fisubl stc mov sub push inc xchg xchg fisubr rclb adc pop sub and les aam cltd nop (bad) sub (bad) and inc push inc add lret loopne xor outsl loopne (bad) sbb jns xchg in in cmp into aad dec push and jns inc icebp mov mov pop arpl insb arpl pop fcoms gs (bad) xor aam push mov push mov adc inc pop outsl sti jle mov lods sbb jmp pop cmp fstps shr inc dec repz pop loope cmp jmp movsb push out xchg push stos inc cltd mov jp xchg cmpsb add xchg (bad) push es pop and out or dec mov or adc test fistpl xor loope xchg in push sub pop mov rcrl lea shrb in outsl test daa mov inc cmp inc arpl add dec out xor lret pop mov jp pushf dec jno cwtl pop push rorl pop inc mov nop push add das lock dec mov jg xchg mov adc aam pop jmp pop push cmpsl and xor nop ficompl (bad) (bad) jbe daa nop mov mov into sub inc or rcl push dec xor fidivl cmp fs jl aam mov pop cmp jo je cld js or cmp mov aam sbb test (bad) xchg push stc or daa sub insb lods pop loopne jns call push aas ja sbb outsb mov cmp out pop das mov int bound out (bad) push (bad) pushf or cmp aam mov xor mov iret adc (bad) xor pusha mov dec shrl (bad) jmp mov ret arpl fidiv iret lods cltd cltd adc xchg movsl sbb scas or add mov dec xchg aad cmp movsb addr16 xor and loop loop jle jb ret test mov roll adc in jge test call cmp mov out movsb or iret push mov in ja dec enter mov jbe and lret (bad) or adc adc ds int3 inc dec mov lods inc (bad) repz data16 std out sbb xchg pushf outsl xchg and std cld push rcrl pushf inc mov mov dec push xchg fisubl cmp int3 icebp push or in xchg lea push jno cmp mov pop subl cmp xor mov test push sti sbb and aad mov fs inc dec pop mov iret mov arpl or in jbe dec int call sbb loopne xor pop mov std cmp mov cltd mov dec cmpl push sbb fcmovnb cmp js sbb pop fbstp scas sbb out jb sub xchg (bad) loopne enter cmp pop inc sub ficoml or pop xchg add push mov je es jge push push xchg add enter shll or xor mov adc or and xchg fstps adc and rorb dec into daa inc push push popl out scas mov push mov jp cmc add iret push xchg ret leave mov xchg ret dec lcall (bad) mov mov or dec or jne ljmp or icebp das arpl test shl int push ss cwtl mov movsb mov add cwtl cmpsl fldl2t sti insl cltd adc mov pop push mov ret cmp dec mov fistpl (bad) addr16 lahf pop or fstpt jle add push mov loopne aaa das dec xchg jbe lods adc mov jne inc push loope jecxz int3 or xchg dec outsl js lods daa insl push lea jl sbb mov aaa movsl gs cs lods pusha sbb loop mov mov push jle and js xor stos push fistpll inc pusha sti outsb or cltd scas and cmpsl lcall lret xchg cld test lret ss sbb mov pop jno xchg dec jge loope stos mov in pusha pmaxsw lods jnp shrl addr16 in cwtl and push cmc or out mov imul int3 aad inc stos fldenv mov loop dec add outsl outsl mov pop scas push mov jle adc negl pop adc addl aad outsb call sahf pop fwait and loopne xchg dec pop push cmpsb (bad) xor dec cs jl mov ret xor pusha xchg mov dec mov pop fild cmpsl gs test inc jge cld add push js iret aad push loope,pn jnp stc scas fimul jmp xchg mov cmpsl or mov es (bad) insb or in cmp inc fisttpl cmp push xchg jbe in pusha adc mov in adc inc lret lahf std test sbb pop (bad) je mov pushf (bad) pop add in add jbe jno inc divl inc mov enter lods push jnp jbe in fnstenv popa mov add je aas inc add or les repz gs (bad) mov int stc fsubs xor jo iret xchg pop sub adc lods push jno in pop (bad) in push push imul push sbb loope mov push cmp popa cwtl push in sub or and loop push scas xchg pop idivb dec sbb mov cbtw and mov dec jecxz adc shll push (bad) out push loope xor int add imul roll mov jnp or ljmp mov ja jne xor cwtl sbb leave inc add xchg dec mov insl xchg xor ljmp data16 pop mov in test popa test mov cmc mov jb sbb jmp jnp popf sub sbb and insl mov mov jecxz dec push mov leave flds xchg jno stos and jg cs jns shrl pop (bad) jne fldcw sti ret inc lcall mov sti adc data16 lods dec cwtl aad insb je or push mov (bad) aam popf cmpsb mov int3 jo or int and mov lahf jo int3 and jge push aam out adc or push fcomps adc and adc dec xchg negb data16 outsl call pop pop push push mov (bad) aaa and push xchg adc insb mov outsl pop test (bad) cwtl lods push cmc les loope cs (bad) ss mov jg sub push sbb into cmp mov cltd xor in sub or es jne fdivs sub sarb adc fldenv shrl incb shlb cs mov shlb xor inc mov call outsb jns es sub enter imul sti push call loop loopne movsb test and (bad) ljmp scas es or dec inc std and pop iret mov fisttpll insb (bad) aad and call push in out test dec adc in ja jle sub in insb insb pop nop pop jl push iret test cmpsb sbb jl fidiv push loop pop (bad) hlt pop pop int (bad) hlt cwtl push fidivl add add gs adc (bad) in xor inc sahf les adc fstps rcpps mov test outsl mov lret (bad) cli xchg sub cli fs mov xchg (bad) icebp or jl je aaa push adc outsl xchg (bad) out enter mov pusha imul cmp cmc dec clc int inc sbb jmp and je pop in mov lret or (bad) (bad) imul loopne clc adc lcall cwtl mov pop push outsb out inc ss stos enter jl imul sub sti adc (bad) ss mov fmuls jo inc cmp call pop lcall cltd imulb shrb lods adc leave pop adc inc in imulb jp insl adc mov (bad) ja das (bad) adc inc or and ss inc cmp pop cli dec es fwait mov dec andb loope ret sub add dec out pushf outsb jb mov jge cs sti lods sub xchg insb jbe daa (bad) lods es orl movsb mov stc and lret repz cld add dec or inc mov pop mov in jmp dec pop sahf push scas sub dec mov xor sub sarb mov pop aam rcrl inc aam stos je jbe loope jno inc adc pop ret xor mov mov fldcw je mov cmc mov out lods cwtl jle bound mov or test (bad) pop das add (bad) faddl nop xchg cmc mov pop dec mov mov lcall popf push lea mov fldenv or int3 sub js dec or repnz push test push (bad) cmpsb push mov xchg es neg push pop sbb adc lock fsubs dec movsl subl sub imul scas jb xchg xor pop inc mov push jne das and adc jmp mull repz inc sti test int3 jle pop jne pop sbb pop (bad) cmc insl out mov lea fwait dec adc mov bound rcrb int3 ja lods insb push adc lret fild pop lods jge mov aam imul fucom or add imul lock xlat scas orb sbb mov lahf xlat push push into mov les xor fwait add pop aaa pop aas test or sbb push pop in (bad) pusha inc shr sahf int call lret cmp lahf daa mov push push push mov mov inc mov add ja fsubp pusha mov pop frstor xchg and inc add push negl jae cltd jnp adc hlt mov lcall adc xchg adc rorb iret sahf mulb inc ljmpw push lcall cli mov cmp repnz shl fmuls push lea pop mov xor movsl push adc and pop out aaa lcall sbb pop inc xor nop inc dec mov lret mov mov sub in loope mov int inc pusha (bad) xchg adc outsb daa xor (bad) sti dec push daa dec insb mov ficoml sbb xor mov sub lea cmp xchg fdivr sbb scas dec dec repnz dec pop repz es push xchg out jmp mov xor push in jb mov ss sub pop addr16 (bad) dec mov sub xor mov adc scas movsl fist mov stos pushf mov int imul xor sub or and or inc inc scas stos or or ret or jp fstpt insb cmc cwtl jp and stc ret adc out movsl lahf adc jle mov and cmp rclb pop and sti rcll mov jbe jg pop stos bound test frstor jmp pop jecxz fdiv imul push aam (bad) aad clc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild sar cmp into jbe add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait in pop mov fisubr pop mov fsubrl insb sbb jbe jnp fdiv sti and cmp add mov add (bad) mov sbb out mov sub dec call (bad) data16 pushf xor ficom jb xor orl fisttpl cs mov adc lds pushf or lods cmpb arpl es fstpl ror les mov notb ds ss adc leave adc test popf xor inc xchg mov loop sub sti outsb fisubrl inc jmp (bad) mov push jb jnp (bad) push test gs xor outsb and pushf fldl and push and push shrb push rcl lcall test rolb cmpsb cmp iret and notl pop adc jno shll not addr16 popf pop jbe (bad) arpl sub inc (bad) ja cmp mov push mov jns stos lds jae mov scas mull pop mov jp push mov mov call loop dec fsubrs cltd inc in push lret mov mov shll pop mov pop les fstl sbb push pop in xchg jg pop gs xor cmpsl lock pop sub jmp cmp insl dec xor cvttps2pi jp adc cli cmpsb jo xchg xchg and fs xor popf data16 and cld push and cld aas test mov mov inc cmpl mov mov repnz loop out in mov adc pop outsb cmpsl ret dec ljmp rorl jnp jle xchg xor js mov or mov (bad) cmc fs sub sbb std jne (bad) mov mov adc cli mov iret fisubl jmp xorb or pop and icebp mov cmp xchg push xchg std xor jle dec mov repz (bad) leave mov pop mov sub pop jb sub inc inc notb stc mov jb pushf pop ds dec fidivl mov xor leave add sub xor jmp icebp xor pop push int3 xor cmp add jnp pushf bound dec or cmp js pop scas popf mov push scas popf mov sub addr16 ret pop jp (bad) xor or mov popf xor or (bad) pusha push mov cs stos lds pop test fstp add int3 aaa and jno jge (bad) and sbb ljmp add les push shl mov xchg xchg pusha inc or xor or (bad) insl mov push fidiv add xchg out (bad) das in and jl imul pop add jno pop call xchg jmp ficomp fldenv push hlt aas pop mov pusha ror adc mov cmc or into jb fbstp pushf iret sbb sub (bad) pop and out xchg lods jnp mov test sub mov bound bound pop aaa js add aam cmp lahf inc stos jae not push incb leave nop bound les jno push je je stos mov fnstsw fbstp mov lret cli xchg dec xchg (bad) jecxz fs mov mov xchg into xor mov sub (bad) ja push xor js cmp nop xchg dec lea adc mov lods sub fs jno aas aas fmuls or mov jae lods cmp ljmp fwait rorl mov inc sbbl sub loopne mov js mov mov aaa mov mov push xor pop js out xchg jge out mov pop sub data16 push push jbe xor shrb pop jge add jmp push ffree daa mov sub sti adc divb ljmp jno pusha inc mov jg sub and push xor and push jno pop mov cltd std incb jmp mov test movsb push pop rcrb mov in inc inc cs das dec cmp sbb or andb call fidivr push push aas fisubr adc jns dec lods ds jae test inc jmp cmpsb dec jle in mov mov push lret stos jge xchg js mov sbb or fsubrs mov les jae and scas not jno push mov push cmpsb lcall mov xchg rcll fnstcw out gs jnp jns ficoml daa hlt sbb test dec push fbld dec loop ss xchg cli lret push ss mov lcall dec ret pusha jmp les (bad) testl lahf neg (bad) fs ljmp xchg push loop or or jno test pop jns fisubr iret jle pop in movsl std inc sub cmp adc jnp jo lods stc dec (bad) cmp pop call mov pop xchg pop addr16 arpl pop gs addr16 add and in mov xchg aad or (bad) outsb pop mov xchg and xchg fildl pusha xor pop push pop test popa jns fucom jge mov jnp insb rorb (bad) popf sbb cmc addr16 aad adc gs int mov fdiv cmpsl or jmp imul rclb mov dec or popa jecxz aad aad rcr (bad) mov cmp scas adc add out inc jp inc movsl bswap mov js adc lock mov pop pop xchg cmpsb pop test pop loopne pop je mov dec es lods xchg or mov xchg push insl sahf into in popf hlt push ss jbe mov or stos sub test cltd xchg int add inc cwtl cmpsl jg mov mov mov inc sbb dec fwait or and push sbb push inc mov pop inc leave int3 scas icebp movsb mov inc xchg nopl ljmp or jne adcl or adc out (bad) cmp cltd pop and jb dec fldl aas pop xor test pop xor sub test enter arpl das test dec mov sbb sub (bad) dec inc add sub shlb mov lret mov mov mov mov xor inc mov and outsl pop stos test movsl xor and mov jecxz mov (bad) cmc mov cld jle arpl das enter add add fnsave adc subl push in inc pop mov or movsl xor test repz jge push push inc iret pop push cmp into fwait ret iret lahf das dec fsts test cli jl js xor jecxz pop (bad) stc into aam pop bound add and mov aaa xchg call dec rol js cli cmp cmp sub sub cwtl (bad) cmp (bad) or mov es adc dec adc adc mov cltd pusha pop jp scas sub fistpl mov call push mov inc or push adc dec inc pop sub movsb and mov int div sub jmp sbb push ds mov and icebp pop xchg mov or inc scas mov andb int3 (bad) or push or dec adc pop inc push lcall xor dec jns cld inc mov stc pop jge push cs rcrl rcll test dec pop jmp shll push or mov mov iret mov shr mov lret adc xorl jbe sub cltd pop in mov xchg adc xchg test inc ljmp cmc ljmp xor push pop jne scas (bad) and gs rcr cmp enter mov xchg or into or add fidivr inc mov jno inc mov pop xor outsl sbb aad cs pop push stc subb popf xchg jb mov (bad) pop inc inc add enter cmp fcoml rcrl lods dec push dec mov or (bad) aam pop or je (bad) outsb mov fcmovbe sub xor dec repnz jmp push push insb push pop mov sbb dec out (bad) and rolb loopne sbb ret pop rcr and fisttp int sbb xlat inc movsb jmp lret test add cltd pop pop icebp mov pop xlat ljmp inc icebp pop pop inc mov jns mov and ret int mov insl addr16 mov add xor pop or push push sti sti pusha icebp sub jns inc dec xchg mov push push lock or cwtl mov andb pushf sub test jecxz mov rcl cmp out pop dec std xor fwait pushf fstl hlt inc jmp (bad) xor test inc out int3 or (bad) jl (bad) mov xor jne xchg push test rorl mov sub pop in fs outsl pop cmc and cmpsb mov jb mov inc stos into or xchg lret icebp (bad) insb mov pop inc int3 inc add xchg adc jmp into sbb lds pop inc gs inc pop dec fwait and xchg xchg (bad) cmp ret mov jno dec loop out push push push incl in pop sbb pop insl repnz ja adcl mov cli int3 inc or sbb xor outsb mov fldcw test packuswb xchg push adc out mov loopne cmp jbe lea (bad) mov leave rclb scas xchg sbb lods xor inc mov icebp (bad) loop dec push mov loope pop mov fildl incb push and inc jne push stos inc and mov mov outsb cmc pop dec xchg pop and add es xchg ret lret stos add loop and xchg or mov pop xchg and jle mov and pop inc mov fidivl xlat sub mov jge ret mov cmp mov pop jmp roll jmp cmp cwtl xchg mov add mov test xor pop and add mov mov int3 push sub ret daa jnp dec jg dec jbe sub pop push (bad) sub pop aas jge jnp xor cltd pop add stc sbb clc adc jbe repz dec (bad) fsubs fwait punpckhdq fsubs mov divl or ret lods leave out or fldcw cmc add mov popf dec (bad) lods lret aad push sub (bad) out lret pop daa and pop (bad) dec cmp enter repnz jp or addl or sbb jne and and clc and pop movsb lods dec adc cwtl cwtl sub inc sub xchg loope out mov fdivs test (bad) (bad) pushf inc adc ja jge mov cmp pop or xor ja repnz pusha in and fiadd jl fadd mov xchg jnp xor jne test ja push add or divb lods cwtl sub addr16 repnz dec cli ret aaa cmp pop inc test mov pop push mov loope jbe test (bad) pop cmp test loope addr16 (bad) mov inc push mov or pop xchg jecxz lcall lds xchg mulb jg xchg ja pop imul arpl or jo jbe cmpsb pushf inc mov cmpsl inc arpl mov (bad) mov jo in mov add stos in scas push movsb mov pop lods std mov jcxz jl sbb sub int3 jge ficoml int mov pop dec dec and insl mov loop and nop scas or jg adcl iret (bad) pop cmp xorl clc fdivl outsl add mov xchg xchg push push fsubr xchg xor sahf pop pop mov push jp mov in js daa test xor add int3 dec leave rolb mov mov adc fidivr cli xlat ficompl shrb (bad) popf push mov mov cmp jo adc test ss push push mov les add push test and jl repnz mov or sbb lret adc cmp data16 lret cmp ja xlat lcall push inc leave cltd pop sub dec sbb jl jae adc mov push xchg and xchg xchg lock inc fs ljmp xor fwait inc xchg push nop test lahf (bad) lods (bad) sbb outsl sub sbb enter mov (bad) fnsave sbb repnz int dec mov in test neg xchg mov mov mov repnz lods xor mov push xchg sub cmp mov mov (bad) jmp fisubl adc out repnz ret mov xchg xor jae mov adc push cmp test fstpt cwtl sub or or mov addr16 aaa into sub imul pop scas or test sub and inc mov scas cmpsb jle mov shll shld mov fistp adcl xorl js dec lcall iret and test jne pop aas or mov pop mov repnz mov pop incb sbb mov xor dec xchg aas xchg sub rclb jnp push jbe,pt mov inc outsl leave dec pop dec cmp nop mov mov rcrl in (bad) cwtl arpl mov mov push xchg jle fyl2x sub rorl inc int lods xchg in mov ja lea idivl dec xor mov sahf mov push mov pop repnz mov jne cmc push push scas (bad) sbbl xor nop sub out inc xchg jmp xchg push mov mov mov hlt mov iret jle cltd cmp sti leave xor daa js test cmp inc ljmp dec in rclb xchg cmpsb in add test sub (bad) jno jp test adc data16 add jge enter push push push pushf scas aad stos cmp add in popf call adc pusha add jmp push and cmpsl iret fiaddl movsl adc imul loop in adc aam pop lea out stos push push push sahf pop stos repz pop out xor ss shrb and cmp sbb subl jecxz imul mov test pop sub fcomip lahf sysret sti add add mov jbe jns inc push xchg aaa (bad) fcompl lods push xor (bad) mov repz cltd loopne lods sbb jb xor dec jle lret lods (bad) in cmp xchg add rolb or mov loope push lock or xlat shlb cli mov pop push js,pn cli dec xchg sub js rcl and lods ret rorb repnz cmp cs out or fnstsw mov fstps sub icebp cld imul or into mov mov and sbb lods jbe mov jmp lret push in lahf add push cmp jbe push pop adc add outsl dec or je (bad) (bad) mov mov or sub js mov sbb cmpsb xor jg stos ss cmp repnz inc mov sub lret adcb inc mov movsb add xor dec data16 sbb push gs inc aaa cs call imul into sbbl aad jnp subl and fisubr inc rclb out fildl mov (bad) xor ds int3 cmp aad inc lahf mov inc les iret es jnp pusha xchg sarl imul cmpsb jno jbe or jg cmp pop mov scas pop inc rcll fwait inc sti xchg dec movlps or or mov cs jl mov and es jmp lods pop out dec push dec jae jns push mov adc push stc inc subl cltd add add ret adc out sbb mov xchg mov test fdivl call mov leave pop sbbl insl pushf and xor dec pop fistl enter dec lods adc pop cli and and test pop ja movsb push add jnp insb jp ss in and sub cli push inc inc mov jecxz gs push jle adc (bad) bound aad and and xchg hlt push push cmp mov ja jns aad cmpsl pusha sbbb lcall (bad) insb out or test outsb xor mov pop adc rcrb mov ljmp push or pushl lock je nop hlt mov sbb sahf aaa mov (bad) out mov add inc test lcall mov dec shrb (bad) jb mov inc lea (bad) xchg imul ja int3 rclb pop lds push lock outsl mov decw loopne call push out jno aad jnp pop or dec in orl cmpsb adc shr inc dec jns push xchg dec cmpsl add jb xchg leave std sub pop (bad) xor gs dec js pusha mov mov movsb mov pop xor lea dec dec dec outsl ljmp mov jns ret (bad) idivl outsb fs xor fstps xor aad cmp repnz mov (bad) mov mov pop and pop mov ljmp pop mov sbb cld daa add or push sub jecxz push pushf imul sbb cltd inc push mov or fldt test mov mov mov adc int mov mov push sahf jne test movsb dec xchg inc fimul mov push movsb mov insl add out push inc push pop xchg mov or and inc xor fild sbb jne sbb loope sbb out or test xchg add jge lret sbb gs mov dec insb xor cmpsb scas push push (bad) cmc aas ja mov xchg in mov add pop and push cmp push inc cmpsb out imul mov int3 push jnp (bad) or out ss add dec add push fmull fisub aam data16 popa lcall fimul and inc sub insl xchg stos das aaa ljmp lock sub jmp rcrb mov xor xor into xor loopne xchg in lcall insl add cmp inc (bad) mov adc into dec sarb out movsb sbb enter adc out mov dec mov movsl mov test push cli push test xor and outsb or frstor jb inc inc lahf adc dec push adc cmp add lcall roll dec mov push stc mov xor mov sti mov pop cmpsb (bad) dec jle insl xchg stc fistpll lahf in loopne hlt jae aam lods mov mov jne push sub mov ljmp ficomp xchg inc mov push add sbb fsubs adcb pop daa jl fcompl jo jmp mov inc sarb in jp sub je or mov mov cmpsb (bad) xchg in int3 (bad) outsb nop outsb pop mov push lods xchg ja sub pop aas sub std and ret nop test (bad) mulb (bad) mov loop test incl mov pop pop (bad) lock jnp stc fidivl push sub out aam rcrl data16 fsubrl pop int das mov ja push and addr16 testb jp dec cld cmp mov pop xchg lret inc and in dec jmp sbb mov leave subl lock mov mov rcrb subl pusha je roll push pop (bad) dec test xor or xor popa imul push sbb sub fist lods roll adc out fwait outsl jp or jbe in movsb sub push pusha mov test leave pop bound xor inc in int dec insb in mov ret jne sub int (bad) out loope mov xchg icebp inc xchg push (bad) inc jnp cs jo cmpsl daa es call push push jle clc std sti ret pop adc mov pop (bad) fimul (bad) lock push cmp jmp push rcll test cmpsb and pop push shll test or ljmp jp push addr16 pop add loope (bad) in ret pop aad cmp add inc xor push insl pusha gs adc fcoml inc jns jmp push into cmpsb mov adc lret ret imul enter iret xchg mov adc stos jb out sub adc push ss icebp rcl popa fs xor test mov sti mov cmpsl add das lds (bad) pop int3 xor cltd sbb test cltd icebp je aaa mov in mov pop ja jmp popf out xchg dec insb cmpl mov fld1 in inc inc cmp mov xor movsb gs cmp shrb pop out test mov sub rcr pop sub dec rolb (bad) lret pop or cmpsl cmpsb jae loopne inc sti or arpl dec mov sub sub cmp stos das (bad) fildll cmp push icebp dec cwtl xchg inc or loope imul cmp jle xchg mov xchg inc das adc sbb (bad) cmp std inc fistl lcall jmp cmp ret and xchg mov addr16 push repnz stc mov or adc mov fsubrl movsb ret xor push cmp jbe ret and leave icebp mov rcrl jmp mov jl shlb addr16 cli lea jnp adc out movsl aad pop jmp ss pushf pushf xchg xor cmp and aam insl cltd stos inc mov xor push daa jle and add adc push subl test mov cmp add sub mov test xchg and jp mov jno stos popf cmp add push loop lods cs imul sbb ja subb and je daa xlat xchg in cmp movsb pushf dec inc xchg add inc and sub adc inc call push out hlt xchg mov sub inc jb lret gs xorps in mov push push and push mov add ds jne jmp mov jnp popf add adc mov and dec cmovge gs mov mov xchg push add icebp xor adc xchg adc adc ss mov adc xlat aaa jns inc sti and icebp fistp (bad) xor xchg cli xchg movsl ja hlt sub movsb jns pop mov sub xlat lahf shr daa inc stos stos ss imul fwait out cmp dec les test xchg mov push sahf rcll jns jb jnp and add jne mov pop jns inc in mov pop xchg icebp adc sbb pop adc push sbb jl (bad) inc imul call sbb test jle add push cmp aas fs jg mov shl mov lods ss out push sahf aad repz pop cmp fist dec (bad) sbb (bad) or pop mov scas movsl in adc test cmp cmp push and xchg (bad) and push je rcl add pusha mov mov outsb or sub jg sub xchg xor xor cmp sub sbb mov pop mov mov jge and cld (bad) pop xor pop add stc mov sbb sub jae scas (bad) xor dec cmp push mov push dec push dec dec (bad) xchg stos sub fdivs pop flds mov push pop clc xor imul push in xchg gs nop imul sub push mov cmp mov iret inc test add cs or je test lcall xor add mov jae test jmp mov lret lods int3 iret or lcall add cmc addl cmp push aas pusha in xchg dec mov mov cmpsb int dec sub arpl in adc pusha insb mov jg push mov lret mov and in push pop cltd mov pop sahf xchg adc jg test fldcw mov lds sub rcrb add push fnop xchg mov aam scas or and inc ret loope scas gs fwait jmp sub pop jle jecxz jnp or add mov adcl loopne pop test data16 sub cmp fnop or int test pop dec inc lds mov stos sub jp loope sahf and in inc jle enter pop inc mov inc mov repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret lcall add jg jle xchg iret sub pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc and mov mov fistpl dec mov (bad) mov mulb idivl add inc mov add adc mov pushl fsubs adcl enter inc outsb mov ljmpw xchg divb (bad) xor xchg jne je std fwait inc inc data16 or test sbb (bad) mov inc mov dec js arpl aad scas xchg stos mov cmp stos adc xchg ss repz cmp mov and pop sub mov rcrl push xchg out lock fucom jo sbb je (bad) leavew aad push xor pop mov pop adc int int out popf add xor loope jmp loope sub pop jb sub mov add aam pop fldenv dec xchg push mov cmp jne and jmp inc clc inc jmp mov int3 popf hlt sbb jno mov pop je (bad) cmp xchg out adc in fldt dec jl jge inc xchg cmp lea shlb jg sbb adc inc jb lcall jns pushf xor mov ret hlt test imul repnz push mov cwtl test sti sbb dec jne fwait cmpsl scas mov add cmpsl xor test and mov add loopne fnop fwait aas pushf rorb scas mov inc lret pop (bad) sbb mov mov inc and repz xor out cmp ljmp cmp jp fisubrl mov xchg mov mov mov ds pop data16 addr16 cmp bnd mov (bad) aam dec sub and and iret test sub fidivl mov xor xchg cwtl lock daa sbb test adc and aam fiadd les push imulb adcb inc sbb mov fs inc into rorl mov js in sub sub (bad) ficom push fildll ret mov pop stos mov negl orl js cld imul scas xor sahf xchg scas (bad) ja sbb xchg mov cmp jns xchg aad cmp icebp dec stos out leave into xchg js je int3 mov lret xorl sub rclb rclb sbb ret add in inc mov pushf (bad) adc cmp js cs inc and sarb fildll ja mov or xlat cmp sti adc sbb js loop stos pop jp rcll cmp icebp mov or addr16 fidiv adc or jecxz and xor outsb cmp xor js rorb push les xchg mov lahf dec or test lret cmp cmp adc inc cmpsl push xlat out aam xor popa mov popa xor jecxz cltd pusha xchg (bad) pop cmpsl aaa xor jno stc sub mov jo jmp (bad) lock lcall dec add mov xchg dec inc (bad) shrb and push or cmp sbb sahf sbbl scas popf pusha pop mov loopne xlat sti sub jmp fnstsw xchg mov and addr16 rcrb outsb clc sahf dec fxch (bad) cs xlat mov jae adcl add lret mov xchg sub xchg jl xchg cmpl add orps lods adc mov inc jno int3 lcall lods mov inc shr jge or gs push pop xchg mov in in adc cs jae fstl sub inc lds mov enter daa lds movsb sub lcall sbb mov scas mov mov add call and pop jae (bad) std in jns aaa add sarb and call mov or inc mov aas (bad) mov mov cmpsb push test out ja (bad) push andl add mov push mov loope cmc sahf cwtl (bad) xlat lods adcb jo aas xor push adc into insl repz xchg daa ljmp xchg dec (bad) or notb test mov in push adc call dec add stc insl (bad) push call fidivl mov xor fnsave mov pop stos cwtl iret jecxz decb sub daa cli fidivrl divb lods mov xchg outsl (bad) jae je repz sbbl jns sbb sbb dec lods jp in inc ret (bad) out adc pop mov shrl mov dec xor iret cmp sub adc hlt jbe mov lods xchg addr16 and push pop test or dec push out and xor out arpl scas lods push (bad) cltd lcall mov and and icebp mov sub leave cltd (bad) aas fiaddl fsts fwait into cmpsb add and jecxz pop xor out pusha mov jmp adc sbb test inc (bad) inc pop xchg ja js add dec fidiv lods icebp push (bad) fildl xchg roll mov pop leave cli pop xchg mov adc push icebp es mov lahf mov push and jbe sbbl cmp scas addr16 and sti fdivl mov orl stos push cmp cwtl or xor mov out (bad) negb test jl and adc cltd fnstcw sbb cmpl cmpsl or sub icebp and mov int mov pusha fdivs imul je loope lods xor adcl js sbb lret das mov cmp jno jl push xchg ret jne mov and scas out cli mov pop mov gs lret cmp popf sbb test pop fnstsw iret (bad) xchg sbb lds dec sbb mov stos and cmp adc fisttpl mov fiadd dec push and jl push addb fbld (bad) aam inc mov ffreep mov (bad) into xor xchg add pop aam push mov mov jl mov fwait mov mov movaps xor (bad) adc pop push (bad) mov push les sbb movsb fidivr add stc or cld test sub jns push jnp sub negb or pop inc jle daa push test jnp push scas leave pop lahf (bad) in push js cld adc sbb xor mov pop aas sbb ficomp push stc sub mov cmp stos jbe sti and xchg and pop movsl xchg rclb pushl popl (bad) out out ret lds dec (bad) xlat push xchg and movsb jle je cli and jl das jmp mov (bad) and lods (bad) aam std testb and xor push jl jns das push daa repz xor notl mov arpl mov xlat sbb aaa (bad) arpl push inc mov in add std jmp pop repz jmp dec mov (bad) insb or scas out ret inc out aas push mov push (bad) sub ss jo fdivp jge subl pop faddl gs aad sahf xor dec lret dec and mov inc stos hlt xchg cli sub popf aad push dec sbb xchg jp xchg cmp mov cmp lahf cmpsl iret aas inc roll jno test rcrl mov mov push (bad) sub and outsl int add mov sbb cmp and jl pop jae shrb lret fbld push pop jnp mov xchg jbe int3 dec or mov js jg lds xchg and sbb stos add inc daa test fwait jl hlt push mov mov imul (bad) fist inc scas test insb add pop scas cld sbb (bad) aam cwtl dec mov scas imul inc sbb cli (bad) ljmp (bad) pop inc xchg mov mov mov xor lahf repz lahf ljmp jbe into dec mov inc notb imul adc fdivr aam loop das pop (bad) lds bound cmp xchg call sti pop sti dec inc mov fstpl adc or icebp and ljmp dec push push inc inc aas shlb (bad) outsl movsb sub xor aaa sarl cltd fild pop add outsb jmp (bad) inc fwait jecxz sub mov or sahf mov or add xchg shrb (bad) push push loop mov in cmp mov ds addb loope jp enter outsb jl and aam clc ss popf in mulb dec pop mov aaa je mov sub push dec dec jge or and mov int rcrl xor or pop test or cmpsl mov fnsave ret in mov (bad) dec shrl inc out adc ret push jo cmp (bad) seta sub (bad) mov sub nop sbb xchg ss out pop icebp aam xchg add or pop jb lea outsb cs out sbb push pop outsb mov jg cmp mov (bad) push jnp or fisttp push push pop mov mov test ljmp and sub dec push in dec cld and repz dec cmp bound mov nop cli cmp push pop jne (bad) idiv push (bad) sbb xor ret mov or outsb pop push sbb loop movlps out imul (bad) cmc sti (bad) cmp loop jmp in mov pop in outsl inc push ss or shr lcall and mov out insl cmp push mov mov pusha cmp fwait and fnstsw push mov push rolb pop xor sahf xor push (bad) stos jmp lahf cltd in xchg sub cli test int push adc fldcw mov push cwtl lret dec pusha hlt cmp sub xchg xor mov fisub cli mov stos add cmpsb push mov hlt ret fisttp int loop or outsb or bound xchg mov (bad) xor cmc fcom jns xor les dec aas mov mov cmp mov add cmp lods (bad) fdivl mov or (bad) insb cmpsl (bad) mov push dec sub sub call dec mov nop imul rclb scas out imul sahf pop stc xor push xor mov aas pop or mov fcoml cs add ret mov inc cmpl into (bad) mov nop sub pop cmpl test dec cmp and daa mov and dec mov pop sub outsl pusha add fisttpll rclb shlb sub jns or sub repnz adc ret jge test dec je push (bad) cmp jge sbb lret xchg lock es jno pop lock xchg sti xchg jecxz inc push sahf cli jo jb lods adc adc pop rol mov xchg ret xchg in jnp adc xor pop dec jb or lods inc mov xchg rclb lods xchg movsl mov rol fild nop jno jbe rorb inc movsl out push stc add dec movsl movsb mov lds out rcr nop (bad) push fs or cmpsb into out push and mov push pop aaa xor push in test inc or inc pop mov or popf xchg into cld adcl je fnstenv adc aad (bad) mov mov imulb fisubrl ret lods cmp ret nop loopne xchg in mov std jmp mov jb jo cmp mov sub mov out call inc cwtl fs movsb cmp lret into ret mov jg iret add fnstenv es sbb jmp sub bound cmp pop pusha mov add inc mov movsb pushf mov lcall xor (bad) fsubp pushf sbb imul fbld mov xor loopne lret sub xor jb xchg jle loope data16 push imul cli das iret cmp sub xor outsb lcall aas sub or xor mov xor or pop leave fistpll mov ja jns cwtl jg out mov inc push xchg fisubr dec icebp jp sub inc cs mov jecxz xor fildll sti subl dec push adc lods adc ficompl dec test in hlt adcb pop fidivrl jbe lea xchg addr16 mov add rorb push sub lock data16 push andl cli rorb out xor in ret sbb cltd lock inc cmp test cmp ret movsl jl sub aas or sub lcall jbe sbb (bad) and sub lret adc shlb mov sub xor data16 pop sub jmp dec out repnz aad or or xchg rclb flds inc inc scas js cmpsl call push dec mov repz mov mov xor gs adc mov int cld sbb std or std and pop fbld rorl sub mov repnz test mov fldt aad push xor cmp ret sbbl fnstcw jne out mov dec jae jnp pop fdivrp and xlat adc cmpsl mov add iret cmp daa push daa icebp js enter and pop mov xor pop (bad) fisubl jb mov sub fdivrl mov (bad) (bad) push (bad) xor adc out cld push add sub sub mov push test int3 test mov popa mov mov pop cli inc popa push inc lock push sub mov inc cmp add sbb push push ror dec lahf cmpsl int test repz rcrb or push hlt lds lcall push jmp in std fucomip shlb outsb inc inc pushf lds add add jp push mov push adc mov shr mov lcall ret or add xor pop int3 pop fwait mov and xor add lret mov push imul inc push sqrtps in mov add sub stc les and sub scas jns mov mov scas or adc rcll clc gs add js stos in daa dec lea add pop mov adc insb fsts push push icebp mov cmpsl cmp pop aas mov test mov pop imul mov (bad) mov push push adc addl jb cmc insl sbb inc (bad) outsl sub fldcw mov outsl inc (bad) sahf (bad) aam das add out shr jge add or jne inc sub inc pop out adc jl sub adc inc add aas or daa int3 (bad) hlt addr16 int sbb jg popf and and xor jne lcall jl mov fs iret cmpl dec mov mov outsb bswap jl imull cli adc cld cmp inc and mov xchg pop aas pop jo test mov add mov popa mov neg or or jecxz xor sarl push cs and or out lods or xchg mov xchg mov rorb sub dec scas mov xchg mov sbbb outsl (bad) mov and jge ds stos pop ja mov sbb aas mov sar hlt dec sbb cmp jne in mov add cs (bad) mov push in mov cld pmulhw push push jmp les pop dec sub loope push fisubr jns fcomps adc call aas in aad mov xchg or pop sbb bound cmp ljmp dec scas std sahf frstor add rcrl mov pusha mov out and lret loopne pop sub jo fidiv fiaddl aas add leave dec add jne lea cmpsl cmp inc mov dec or add push cltd sti popl sti xor cmp sbb cltd das stos push shl push push test cli movsb pop lret mov xchg in lock mov mov xchg xadd cmpsb mov jge mov xor jl out jmp fisttpl xchg jnp adc jo pop test aaa icebp data16 jbe (bad) mov out js jecxz stos mov add xor cmp mov sbb jmp rcrl mov jp das mov sbb dec or xchg push inc fcoml sub inc iret sbb mov cmpsl inc pop fiadd test mov and les jp dec lret adc mov push mov outsb lret adc out add and jmp adc and pop or rorl sbbb mov mov mov mov inc and out or sub mov das xor or mov jp fwait mov test sbb mov add push add inc loope sub xor pop pushf mov addr16 (bad) dec cmp push in or lds lret sbb add dec push push (bad) jl pop sarb pusha jae add adc push xchg test pop call jb push mov repnz pop loope pop cmovs in leave cwtl movsl pop sub pop jae aad inc xchg jne loop lcall xchg rolb outsb sub sub pop loopne test adc out and cs xlat fwait jmp cmpsb lods test movsl mov orl cmp adc sarb mov mov mov scas rorb xchg push mov xlat push jge stc mov scas cld imul shl and imul adc (bad) fstl pusha inc ret sbbl out lret outsl jnp int lahf loopne int insl add mov adc (bad) mov mov das mov orl test add xchg (bad) adc inc out cmc xor mov (bad) icebp mov stc or aam pop push loope push pmaxsw sub sub out pop lds inc (bad) push mov pop loopne sahf jmp andl push aaa les out pop das sbb js dec jno fnsave mov out or dec mov notl hlt push inc push fdiv divl cld loopne push enter pop push push fcom repz adc gs dec sub inc test push jg (bad) negb jno mov jge fsubp enter loop das sub xchg sbb dec push push cmpsl and pop icebp mov pushf daa and xor and iret mov pop (bad) jne (bad) imul enter (bad) sbb bound xchg sub push in ret and jnp jp sarb int movsl jg in (bad) xor adc add or inc xor adc out ljmp sub mov insl cmpsl jns daa lds loopne call mov pop out iret in mov lock and mov fldl in popa rolb aaa dec mov call mov mov jbe das int3 fsqrt scas cmp mov adc jl push xchg insb xor shrl mov sbb clc push mov jp aas into je jnp mov andb mov mov ja hlt mov push ss adc mov pop mov je popa xchg mull mov or jge aaa divb lcall dec das out xchg test sub arpl adc add outsl pop cli push pop loope das or test lret test cmp cmc cmpsb inc movsb sbb mov xchg movntps adc cli lock mov imul xchg call imul jb xor or imul or outsl fisttp movsl rclb fisttpl xchg stos xchg (bad) out fwait insl cwtl es pushf add push inc aas (bad) dec jbe mov js fistl lods mov mov sbb scas je std in jg das mov mov rcll shll mov imul mov xchg orb ljmp (bad) in loope inc pop mov shll repz das dec or cmovno pop (bad) mov scas ds out js dec add push fidivr xor into push out xor xchg shrl mov insl leave mov mov out and js add adc push dec sub stos repz cmp sub push hlt mov ljmp xor in or mov int3 sbb inc xlat cld and out cmpsb cmp push jp movsl out (bad) jae xorl push cmp lods addr16 test call mov pushf or jae sbb xchg adc xor push sub sbb cmpsb ja or sbb fxch dec inc push adc cwtl call xchg and jge mov cwtl popa and hlt sti imul lret (bad) mov add mov xlat mov int sbbb inc lret jb ja call into rorl and les inc mov loopne push push mov dec std xchg insl mov popa jge mov xchg inc sbb push fstl or pop xchg es mov insl jle loopne mov lcall sahf mov insl das (bad) xor mov mov and lds repnz add dec and repnz bnd lds mov out push adc push mov dec xor mov out or xor les imul loopne arpl popf xchg mov push cmc xchg test push mov in mov movsl and mov pop jle imul out (bad) (bad) sbb popf jne into loop mov jne adc mov jecxz dec mov ljmp sbb xor ficomp js sub add lcall lcall and mov inc sbb xchg mov xchg cmpsl mov mov aam test leave sub mov cmpsb push fs xlat xchg xchg cwtl xor push inc ficomp sub cltd adc movsb add in cmpsb adc in cvtdq2ps clc xorb inc xchg mov repz push repz cwtl inc jae icebp inc stos inc (bad) fdivl iret inc adcl dec faddl dec dec dec out hlt sbb pop rcrl push jle test xchg adc idivl test mov xchg test and nop cltd xor ret and loop sahf add pop sub aam inc mov hlt add inc insb lods out lret loope scas ljmp hlt stc cmpsl dec in xchg clc test jl arpl push shr adc jl test (bad) gs fwait inc imul pop sub push out xchg or lahf and ss pop in jp adc enterw pop lcall inc cmp into std jge mov add dec cmp addl outsb dec aaa push int3 ficom nop loopne ror sbb mov sub or repz xchg inc pop pop pop faddl adc fdivrl aaa clc sbb jecxz aaa jmp jne fs mov xchg rorb or or pushf mov std fwait aam mov jnp adc mov lea es sbb sti sub mov jl xlat in add ljmp (bad) ja jmp sub xor repz iret mov inc js push dec pop (bad) fcmovbe (bad) mov xchg pop lret into jl lock je outsl mov pop sbb mov repz or inc adc lods pop ret lods sbbl insb push cmp push pop mov cmp adc repz and movsb arpl ret stos pusha jle dec jno cmp loope sti mov or push inc fwait popf out (bad) cmp shrl fdivl push stos jg xchg sub jb test out fwait loopne cmp ficompl xor ja mov xchg inc (bad) je add fcomi push lcall pop dec lea int rcrl aas iret push es inc sub xchg lret in testl pop xor adc or idiv jae mov and jl pause add cmpsb jecxz xlat scas out stc sub (bad) cld inc sub fsubr movsl test stos daa cmp (bad) icebp cwtl adc mov and jecxz push movhlps icebp cmc aaa std mov lods in pop mov cmp int sbb mov scas jmp scas cwtl sbb inc test jo sub pop dec (bad) ljmp ret cld pop popf pop or mov add add nop add lahf popl mov enter mov mov mov and jae stos and dec nop (bad) (bad) and movb add and outsl pop negb jecxz test sbb popa xor inc das push push adc lcall in pushf scas test xchg cmp lods mov cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushf adc sbb test add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne pop jne imul out mov mov mov sbb mov in arpl out xchg add in add adcb pop stos insl mov loope add ja mov and test addr16 push mov ffree dec mov and dec xor cwtl fisubrl mov pop push pushf loop test inc (bad) rorb clc ja sbb push mov pushf and pusha mov inc add stc pop jne add cmp pop loop (bad) leave movsl dec dec dec (bad) ja sarl dec push mov (bad) jge jmp ss fdivp adc cmpsb rcl adc sti sub sub sahf add lea aad decl scas fldcw mov cmp pop (bad) inc ja push push dec xchg cmp adc int3 xchg push adc enter jns outsl (bad) xor popl into push push (bad) and cmpsb rcll das lods mov lea sub rorl loop test or jl cltd or out ljmp rcrl xor dec mov movsb test pop flds sub dec dec ja sbb mov arpl jl je dec maskmovq imull test mov or into inc mov cmp sub mov test adc cmpsl mov aad add or xlat cmpsl in lahf xchg mov pop out repz jne mov les cwtl jg inc iret into into pop fnop nop movsl pop (bad) iret sti push push std (bad) adc adc cmp leave out enter inc fiaddl or and imul push mov dec lcall ljmp fmull mov cltd out mov push jo or mov imul and add psubsb (bad) insb push (bad) js jns jge,pn push loopne dec adc dec mov sub xor dec sub pusha int3 add cmp and or adc mov mov leave cli mov out (bad) std mov rorb popl fbstp sti pop jecxz lahf sbb and xchg pop (bad) fadds idiv fyl2xp1 xor mov xlat jb testb (bad) cmp dec inc dec cmp sti fistl cs cmp dec test dec ds xchg mov cmp or pusha pop jno push adc pop sbb mov push inc jmp dec scas loopne aad (bad) aam mov and gs or in push add jecxz js arpl (bad) outsb repnz xchg inc subb dec (bad) jg push jae int3 aas adc imul fstps add mov push popa or mov cmp push push mov xchg dec ja xchg ja mov mov sbb push lcall dec adc incl pop je scas mov (bad) cmpsb inc mov call dec add adc pop roll roll jnp sahf int fnsave cmc aaa xchg js pusha inc leave sub rorb xor insl gs inc insb push popf jns or mov mov icebp inc or jge lahf mov test imul lret mov mov pmulhuw push jno jmp cmpb lods (bad) icebp je les or bt (bad) sub cmp push pop (bad) mov out mov lea sub cmpsb and adc daa loope jbe repnz mov (bad) adc cmp dec and jnp mov test lcall adc gs dec adc stos mov jno ja cwtl pop jnp xchg enter jo mov cmpsb aas adc add cmc rolb jns add cli add or inc jl mov jae cmp ret sub test push xchg jmp xchg adc xchg in mul xchg bnd dec sub js or pop jnp xor fildll sub stos out jb push fwait jnp mov jnp xor (bad) add mov sti cld iret add (bad) xchg push aam ja pop xlat rol jg imul ret push pop les loopne bound dec and xor lret jecxz int3 sub scas (bad) inc cltd int mov pushf sbb add jp stc or adc imul jno sbb xchg popf push cmp push test mov enter xlat cmp cli xlat fdivr and mov pusha loopne xor stos fidiv std test lcall jno test mov out shld in nop mov inc fsubs dec rclb loope lock xchg sahf ficompl xchg push (bad) jge insb mov adc pop xchg pushf andl add fidivr scas inc rcrb push test push aaa xchg push mov movsl pop inc pusha repnz lahf fildl (bad) ja adc int3 mov ss out jno or add ss or arpl loopne ds push repz pop xchg fstp add cmp fistl rcll jb mov test rolb mov je jns repz std movsb out mov and push push js ret leave cwtl inc lret mov popf jecxz add push lods sbb mov outsl xchg pop nop inc lods pop or push stos jle aad adc mov jo mov sub xchg mov notb bound rcrb nop repz inc mov fsubp pop push test lret xchg or je insb cltd inc pop outsb fwait in popl mov outsl (bad) cmpsb dec and xor ljmpw into call adc cli sbb mov (bad) (bad) jge cmp leave test push ljmp stc cmp and notl sbb xor lahf nop rolb jnp cli adc cmc mov shrb out stos mov int push fs dec add int mov js cmp fs jno sahf or pop inc jns (bad) adc jno fwait xor (bad) scas mov in lods mov fisub xchg xchg push mov int3 sbbb and push sahf (bad) dec rcrl div cli aam adc les add iret incl push lods pop or repnz ljmp xchg test sti stos dec stos lea aad mov rcrb lret cmp data16 adc and (bad) mov and hlt leave sub mov inc mov xor les push lcall nop call or sub ret sbb lret out inc mov addb cmp outsl push or sub arpl xor rol stos and pop es xchg dec inc fmulp cli add ja jl add mov sbb xchg xchg xor push push sarl inc mov jbe in bound jp std mov lcall cld arpl out mov push sub (bad) out out addl cmp cmp bound call movsb xor mov rcr add outsb movsb xchg push aaa jge and mov dec (bad) iret fist pop pop push push cli lret jp arpl push fild pop adc adc mov sub or cltd adc out sbb and lahf xor jecxz push (bad) ja fs nop int pop or lahf push cwtl dec or xchg and and jb xchg aaa jae (bad) hlt ja cli lods or ret xchg mov dec icebp inc cltd pop arpl pop and pop xchg stos pop jne xchg push sub cld les cmp push xchg xor ljmp call mov pushf insl mov push insb out loope js hlt sbb cmpsb lahf mov add mov jno fxch and test sti dec push xchg adc adc bound movsl loope pop mov mov or (bad) xlat jp mov rorb pushf adc ja lods loope stos mov push xchg into mov and scas pushf movsb sub pop js or adc lret adc and je cmp imul cmp jbe stc shlb xchg sbb in push and sti adc jno push sub sbb pop jg inc bound iret push cmp fwait pop scas int3 (bad) cmp mov mov hlt iret lods push mov pushf and cmpsb (bad) in jne xor fs daa mul sbb mov xchg int sbb and bnd negb adc cs into test push into adc mov xchg ss cmpsl sub jle bound movsl sbb xor pop loopne je xor mov mov jns dec cld cmc fwait cmpsb cmc cmp repz stc and inc xchg movsl outsl (bad) lret inc lds aam dec xchg stc xchg inc (bad) dec repz mov inc fadd ja outsb adc stos lret pop sub cli mov subb xchg mov jno sub push dec js xor mov daa xchg add mov and pop outsl adc xor mov repnz pop and pop dec inc lds xchg cltd test xchg addr16 rorl adc inc mov je mov dec aaa and mov (bad) mov adc jno sub in or and add fmuls mov push jnp lods lcall test add stos nop in sub in mov mov leave aas (bad) cld push imul pusha dec arpl mov push les dec add push mov inc enter mov js jmp jmp les mov or in push jo sbb (bad) mov ret scas add inc sbb bound mov push jae mov mov sbb jp nop std cwtl mov dec rolb add in dec fistp movsl test lods negl daa movsb test pop loop js out sub adc test mov add sbb (bad) (bad) inc xchg repz add push or or dec rorb icebp push popa fistp jns mov (bad) stos adc pop mov inc jle push jp fstl test sbb jmp dec dec mov out (bad) fs mov and outsb lods mov mov xor out cwtl xor (bad) imul jge mov out rcrb push arpl pop cmp insl mov jecxz sub (bad) out add imul push ja out mov loopne into and jb push iret loopne xchg fisttpl jbe test jns in fs inc mov scas inc pop andl sbb subb ja int3 loopne mov sub mov out mov push xchg aas cmp adc mov insb sub stos dec push cmc pop mov std mov out push test jns inc iret je orl (bad) jp,pn lret cmp mov mov lds aas loop inc pop xor mov lock aam fsub pop mov adc les mov loop push dec sub sti repnz dec jp or pop and xchg int3 int3 xchg cmc imul dec adc std add lods outsb mov xchg push stos adc nop cmp jge mov roll push mov scas inc or push lahf ret sub xchg les cmpsb stc cmp enter lea (bad) repz loop repz bound and ljmp sub mov sbb cmp mov mov push roll rolb xchg push mov (bad) icebp mov and add pop pop jge js dec jp or dec ljmp into sub mov clc test push leave rorl mov pushf (bad) in lahf fstl dec enter outsl mov loope cwtl pop add jp pop pop out add dec aad (bad) imul insl ficom icebp lahf push and lods fcmovne dec mov aaa lahf xchg imul insb les daa xchg insl gs cmpsb and insb (bad) sub cli push ljmp test dec push push sbb scas std jmp add out pop xchg dec inc cmc fmuls bound xlat std sub jle movsb addl jns inc sub test rolb je bound (bad) test je sbb imul arpl cmpsb inc pop (bad) out adc (bad) fwait loope pop mov lock fwait adc adc push jo adc std jp push fisub inc xchg lcall call mov call xchg sbb inc xorb ds mov pop stos cmpsl out pop idiv inc imul mov jbe sti jecxz rcrl push ljmp or or push divl inc out ja gs xor imulb adc push mov lret sarb cmpsl mov icebp mov xor mov fcomip das push addw je dec cltd adc arpl mov pop daa push (bad) fdivrs lods insb mov push xchg mov (bad) insl jg (bad) dec clc shll xchg (bad) jbe mov iret sub add fldt fsubrp cmp cmpl xchg pop pop inc jno (bad) cltd xchg push pop sbb test pop in inc jnp je dec cs and dec mov jg (bad) mov fxch xchg xor insl or dec add push add int adc stc hlt inc xchg push jne loope mov pop push pop adc push mul push stos imul sub adc test movsl popa mov inc cltd clc sbb fiadd adc push fidivr test cmp mov insb dec pop out scas mov xchg pop addr16 mov in sbb push iret das pushf orl and lea xchg xor pop negl push push jmp xchg cmp fs cmp add lods pop mov mov daa lret sbb sbb js fsubrl jg stc test adc test loopne mov xchg aaa cs arpl inc in jmp pop popf mov sub lret dec mov pop xchg mov fdivrp push sub nop or popa aad int lcall iret pop and bound outsb pop jno cmpsb out mov iret test movsl jb std (bad) pop (bad) jbe daa rcrl bound (bad) iret cld sbb mov out mov cltd cmp out gs xor pop cmpsl cmp sub ss cmpl cmp insl jb aad scas mov or cmp mov (bad) ret push cmp mov gs add mov jle mov adc aas movsl mov loopne jmp stos cwtl lcall icebp popf int rcll push and enter sub (bad) data16 xlat lcall inc or push sbb insb inc int3 repz scas out pop mov data16 mov pop sbb mov lock mov imul sub cmp lods pop mov cmpsb cmp adc lods adc xchg jno decb outsl outsl (bad) jbe pushl jl push xor and pop cvttps2pi pop sub xor fidivrl iret add sbb sub jle push add push xlat sub es push cmp sub iret in lahf push xchg push push sbb or test xor xor adc add (bad) or cwtl pop in inc push repnz jge mov push lods or repz jno jne aam inc lret mov inc push cltd xlat push inc or loop lret add inc or cli or xlat push clc pop inc (bad) mov ret es outsb ss lcall adc test lock enter push in dec sbb aas mov adc dec add (bad) cmp adc outsb aas test outsb cmp xor add cmp (bad) mov sub rcrl icebp stos adc int cmp cmpl es jg sub or pop xchg pop pop pop mov cli xchg jmp insb rol push cmc insb xor add fucomp cltd (bad) jb movsb sbb in ret xor aaa or roll xchg (bad) mov jbe test stos hlt mov mov in or pushf hlt adc lods lods int pop pop or cmp sahf sahf repnz and out loop mov push xchg sbb mov or lock (bad) bound lods xor add mov lds fnstenv out and daa pop das push out jg lcall bound add cmp push movsl lret cwtl les orps mov std (bad) xchg pop rcll add ficoml mov mov repz rolb or std (bad) mov or push jp mov pop rep scas add cli inc xor mov xchg inc cmpsb mov lahf inc mov fstl icebp roll or je fnop adc jg xor test cmpsl or lret pop daa test push jg add push test into dec popa in clc repnz mov fstps iret push mov std scas xor sbb mov lcall mov (bad) imul jo scas inc push mov push push inc jp mov pop cwtl sti inc test sub rclb fwait jb cmc jmp sub dec inc mov cmpl pushf push xor insl (bad) stc insb popa int3 mov in adc icebp outsb lods stos inc mov inc adc test xchg imul and pop repnz lret in push clc add cmpsb lret jecxz pop sbb ret inc iret (bad) sbb cs pop sbb or lds pop loopne mov lea aad insb jecxz pop mov into xchg cmc sub mov mov dec sub pop sbb add mov outsb and aam sub mov inc cmp and cmpsl mov iret test mov clc aam jge jmp fsubrs jecxz rorb adc lods lods xchg outsl add jb sbb ret ficompl pop adc lret push jns inc (bad) mov out push mov in dec std data16 shlb lcall push fdivrl add mov lea les lcall (bad) push inc jp leave lcall in repnz sahf xchg mov sarb int3 movsl je and mov pop call dec imul sub sbb and sub jnp aad or pusha das mov dec sub cwtl pushf fs adc fimull xor mov xorl fcomip cli jbe push out pop out or lahf xor xor xlat sbb test imul negl push xchg (bad) xor or pop cwtl and int and push (bad) imul push push pop fisubl dec (bad) add fprem1 sub adc (bad) rcl aam loopne das cs or mov adc inc push mov pushf daa sbb add test mov popl test (bad) jne adc jge dec imul ret or js sub jnp add jo jns mov lds mov rcll (bad) fsubrp mov stc xor push mov sbb pop (bad) jbe negl jo imulb dec mov fiadd arpl sbb (bad) fldt cli push cmp lret addr16 movsb cli leave fscale mov adc jae (bad) adc fmul test inc (bad) popa (bad) dec jnp pop (bad) ss jge dec into shrb sbb sti ljmp test xlat jp jle nop fildl or pop pop into dec (bad) adc test xor leave fcom adc hlt pop dec xor xchg cmc or xchg (bad) or jnp imul push data16 sbb sbb call mov (bad) nop ror sbb fistp fs mov mov xor and pop add cmp pop jl out or xchg orl dec jecxz popa push int3 xchg mov in sub sahf in or jne lcall repz mov int mov popf xchg sub pop xchg pushl loopne scas dec outsb loopne and mov pop adc add mov sbb jno loopne fcom lahf and icebp das cs pop pop cmp or sbb divb pop (bad) sbb mov movsl cmp lahf mov pushl fwait add or ss sub arpl stos cmp mov (bad) test stc push je idivb xchg mov rolb scas es mov lods jp movsb das ret adc xchg ja push mov push icebp jo xchg jmp xchg (bad) mov (bad) addr16 in jae mov lret add mov addr16 dec inc xchg popf push and pushl outsb das push mov faddl out (bad) decl aad xchg fadds popa jmp call dec push repz stos aad cli pcmpeqb push mov bndstx mov (bad) nop test push adc (bad) lock mov xor sub xchg mov imul shrb cmpsl mov xor pop pop pop mov mov mov shll cli mov ret lea jecxz sbb roll sub push ss pop cltd scas outsb insl mov (bad) xchg or add leave ljmp xlat adc cltd mov inc pop int3 pop stos fild mov cld cwtl push pop out or cltd scas mov add sbb push rol inc push sbb mov cld or push sti outsb xchg pop test mov jbe je out enter les and and (bad) (bad) in dec xchg in das mov pop and rorb inc pop mov test xor scas xchg xor pop mov ret in push push es jno (bad) jo mov or out addr16 (bad) pop loope movsl out pop mov es cmp stos daa pop test and or in cmpsl dec data16 cli lahf (bad) (bad) lock je data16 ljmp std shrb ss in xchg or repz cmp (bad) psllq dec and (bad) popf cmpsb push pop or lds movsb test test (bad) aad addl mov imul mull sbb cmp adc jb les mov mov mov add lahf sti sbb mov dec iret jecxz ja inc in int3 add cmp mov hlt scas inc dec sub mov inc and je mov push xor mov test jae (bad) push push test mov cmpsb dec roll xor inc fdivs jmp ljmp out lret mov jns or dec jg mov popf js xor jns cmpsb mov imull mov stc sbb sub ds pop (bad) jp mov pop pop lret push daa mov (bad) jp fistl subb sbb dec aas das shrl leave jno aas xchg test bound or ret lods ficomp inc sahf daa jg push repz jo (bad) and das cmp out in xor jae mov je ret jge lea out mov incl pop inc aam push mov pop addr16 pusha cmpsl outsb dec push loope cmpsb add cmp cltd sbb daa shrb dec mov jno mov xor icebp fcmovnb andl div mov mov imul cmp das adc daa jne dec in mov fcmovb jnp ja xchg or mov pop dec sub xchg or jne stos xchg or aad inc cmc insl mov mov and sbb pminsw jmp and xchg push fdivrl mov cwtl add rcrl jge std fsts (bad) push outsb jne je in lock cmp pop daa xor ficoml scas fmull outsl lahf lock imul and stos sti mov sbb mov xor dec arpl dec xchg stos pop adc gs push mov (bad) mov into add movsl or aam stos mov insb stos pusha mov clc fidivl cmpsl add mov and push aam cmpsb cmp dec push sbb (bad) lods stos mov jl std mov call data16 fcompl cmp in clc pop cs addr16 mov jae pop mov pop jne adc (bad) popa push dec inc test mov push pop shr push dec mov push inc mov sti adc out test lods clc adc loopne in mov jecxz dec dec ljmp pop es sti sub enter in xchg (bad) iret jae scas enter rcll je int lahf push cmp push jno dec movhps sub shll int jg out mov sahf (bad) mov (bad) clc test test in insl and mov jns outsl enter enter sahf mov mov or cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add pop sub in xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add les add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add or inc inc push push and mov add xor test mov pop enter leave popf mov push test scas sbb fwait mov pop cmp out movsl jb enter xchg jnp xlat mov cwtl jle jmp idiv cld adc or adc pop and scas (bad) mov stos popa hlt and repnz adc pop cs shr outsl imul cmp xchg fisttpll (bad) lret or adc js push pop incb push and lods aad test ret jbe cltd test mov jge les cli gs pushf loop arpl cmc push mov (bad) mov mov ljmp out cwtl mov lea or ror mov mov mov loopne lock leave cs dec jnp fcoml and js call sub cltd test dec push ljmp (bad) adc cmc insb rclb xor and test xchg (bad) lods divb xchg (bad) idiv jle lods cmc jo cs dec mov lods in ljmp dec add pop push push js xchg int3 jne adc lret and jno in push rclb or push out aaa sub hlt call mov and jae pop xchg push iret std or cmpsb stos inc mov jle (bad) jno mov push xor fucom mov pop jle cmp jnp mov cld push mov mov mov push push push lcall sub push (bad) icebp orl jecxz rorb jbe (bad) jb mov test jecxz loope mov sar inc cmp cmp bound loopne xchg adc insb fwait cwtl in addr16 mov xchg out pop mov insb ds fwait pop std jecxz sbb dec lret pop adc jecxz jge pushf ss mov sub fcmovbe push sbb data16 cli mov mov push sbb fwait jmp out xor jg mov lret sbb pushf xchg xchg pop sbb ret cmc cltd push lea inc jo pushf cwtl stos pop or imul out sahf mov jl push jne lds pop cld cmpsb jbe sub cmpsb push push addr16 xor lods push (bad) lods dec mov jmp jno dec inc loop ds addr16 adc andb push (bad) push pop (bad) pop jg sub xor cli mov popf decb lahf (bad) push jle and cmp bound cwtl push enter cmpl dec pop pop dec adc adc or in lds stos adc pop loope fidivr aad ss (bad) rol and jo add test fcmovne inc cmp aad pushf (bad) mov mov cmp jl notb arpl cmp push fdivrl mov cmpsb pop sbb mov aam mov jae add movsl push lock xchg push aas sbb enter jnp fadd hlt xlat out mov mov or push sub dec xrelease fwait bnd sbb mov in outsb add ret ljmp fstps movsl cli adc pop pop mov dec mov repnz cmp pop xchg push cmpsl not push arpl test mov jbe in fcoml dec daa sbb leave int3 jno mov adc mov dec test push cmp inc inc jmp mov dec push mov push cmc (bad) xchg addr16 mov (bad) clc fld test int lahf xor stc ret loop ja or sbb xchg dec mov cmp add stos or das cli or test dec cmp xchg and outsl mov outsl sbb adc bound or push lcall mov pop pop ja pusha arpl jns xor fldt sahf cli jl int3 scas daa into icebp mov ljmp (bad) push or cli jae icebp pop bound fdivr inc insb std mov mov ret js sar xchg out pop mov mov jmp mov cmpsb ret scas jmp idiv shl test inc ljmp (bad) add (bad) mov mov sbbb xchg xchg push add cld lea mov addr16 cs mov idiv cmpsl outsl (bad) mov sti mov mov push jmp (bad) sti out xchg and jo (bad) out pop lods outsb lods jp into movsb pop push or push jbe mull cmp xlat inc es xchg imul popa mov xlat jecxz fwait push das sbb js cmp fnstcw xchg jl adc push mov shll sub or cli pusha dec inc out sub (bad) xor ret cmc rclb loop jbe insl jo push pop push cmp lea pop push sti and es mov jge fdivrl push dec push jp adc mov shld out sbb cmp pop ja adc sub cmp adc add test push or and push dec mov popf pop cli (bad) out and cwtl subl sbb ja aad (bad) scas mov (bad) jne inc clc fidivr mov adc out ds out add and or mov sub stos enter and fcomps int3 gs int fiaddl dec fyl2xp1 push es push icebp mulb sbb adc leave cmpsl mov or sarl push shlb data16 popa inc daa pop test mov cmp pop sub in and pop mov bound xlat fwait (bad) jge movsb mov movsb mov mov ljmp lret inc sbb cmpsb adcl pusha jne out iret push repz fcmovbe add push lods imul adc in cld adc (bad) mov fidivrl out mov dec xor mov push lret outsl test jne test fdivrs or jmp mull push jp mov je lock ret lahf cli ret jecxz (bad) jb push loopne and (bad) jp jmp movsl mov pop out aas cmp push mov and sbb fstl imulb outsl xchg aas xchg jl sti sahf jg jno imul adc ds add mov cmpsb pop out imul into mov pop je mov mov ret pusha dec fs int3 scas popa cmpsb pop fildll or push and ljmp jge xchg mov cmp xor mov lret adc push loop jae cmp insl cmp sbb sbb dec out in jne es mov jg xchg jmp dec jae inc jmp incl ja and clc popf sbbl out add aad adc mov std arpl (bad) call aad ss incb or (bad) (bad) les add mov and push out mov mov leave arpl pop hlt mov into inc xchg stos enter inc cltd pop xchg loope add out out mov or pop fcmovnb push pop pop outsl ds or fcomps pop cld push mov stc sub push jbe xor and cmp adc xchg xchg sbbl add fwait outsb sub in mov bound out out outsb shrl jl (bad) jb cld sbb nop je es sub out addr16 and js,pt push mov pop jl clc incl add pop jnp outsl shll mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb add loopne xchg insl xlat mov mov fldt insl imul mov mov nop out jge add mov add sbbl add mov jo or (bad) cmc and lea mov aas aad seto repnz fcoml ds sbb pop xchg mov fcmovu lret lock or jns (bad) or push in sbb sbb add sbb movsb dec mov rcrb inc sti outsl sbb stos aad pop addr16 stos loopne push stc outsl push and outsb or jbe call pop sbb stos addr16 (bad) movsb and jp lea push repz mov out addr16 cmp or pop out dec stc xchg or push mov cmp repz stos addl jmp jb out fiadd pop clc arpl js nop pop cltd loope inc cmp push aaa iret je pop pop or push jbe repz ljmp es jecxz and testl test loope or popa enter out cmp ret and adcl lret add xor ds xor xchg mov lahf das dec into pop outsl mov xchg daa cmp cmp push (bad) jne loopne cmp shrb inc shrl hlt pop push imul xchg sbb dec jg std xor repnz or add lds out xchg mov lock xchg ja cmp imul outsb push push clc dec cmpsb sub sahf hlt pop inc sub ds mov mov push jae inc xlat popf scas lea cmp mov mov aam addb add inc adc fmul sub inc xchg add ja or cltd fs add ret pop jmp data16 add cmp mov repnz cld xchg movsl inc mov mov adc add hlt mov mov mov jns (bad) fsubrp add daa lds push ljmp (bad) fadds (bad) add xor jo frstor adc jp cmp (bad) lcall sub cmp in adc cli aaa je pop sti pop or xlat (bad) sbb sub and fisubl xor adc or in mov mov mov inc push scas (bad) outsb cli xchg pop stos cli out dec adc cmp sub inc mov pop push sbb mov lds jne cmp fstl mov addb pop loop inc js repz sbb addr16 in subl sub imul pop fcompl fimull mov xchg lret dec xor in in jge cmc mov pop stos mov or inc adc push cwtl push clc hlt mov ret icebp sub cld sahf leave sbb das fst pop inc pop aas xor cmp aaa ds xor dec adc js xchg mov sbb (bad) negl sub dec cmp in push sbb push sbb icebp dec inc lret insb cmpsb inc hlt mov movsb lock jge loop,pn test popf outsb daa jae fldenv pop xchg add imul add test sbb (bad) ror aad push adc jae (bad) scas pop (bad) lock (bad) xor xchg xchg cmpsl adc lea mov push fadd fwait jg (bad) xchg rcrl jge sahf push xor es xchg jmp pop inc adc ffreep (bad) in shr fwait arpl sub subb sub sub add lods shll jae fistpl stos int sub pop je loopne mov xchg mov pop jp pop mov pop or test pop mov cmc pop jmp test popa sub cmp repnz imul adc cmp mov pop inc and (bad) (bad) sbb jae push dec push dec cmp pop sbb int adc jle mov cmp sbb std jnp pop popa (bad) mov js arpl ret dec sahf inc push jne xchg xlat jne jecxz mov test push lock fbstp lret and mov fwait jnp mov add dec fs xchg jle xchg pcmpeqd fwait decl daa cwtl push sub jge pushf fwait int3 sub pushf mov inc adc cmpsl adc dec mov lds xchg and xchg jae lea lock hlt loopne,pt scas jae jb cmp cs into js inc mov pusha addr16 test cmpsb xor xchg sbb (bad) cltd mov and ret (bad) je mov pop pop inc clc sbb cmp testl (bad) mov in mov jg add push fwait mov out pusha dec mov xor or (bad) lret push mov pop lds jge lds ljmp and dec inc stos sahf scas in nop mov mov pop cmp jno mov nop mov push data16 fstl pop sbb inc mov (bad) jmp lret int3 loop in add cli xchg cli push pop (bad) push js sbb pop es ror xor hlt mov jnp xchg xor inc lods mov adc cmp or das adc adc fs cmpsl xlat or arpl mov and pop std jnp daa mov out push mov ljmp (bad) (bad) and (bad) fimul es insl decb inc xor and mov sahf (bad) xor je (bad) dec dec mov scas and mov ret pop insb inc lcall mov in adc nop gs jmp or incb outsl or fiaddl xchg mov (bad) clc sub pushf xlat xor aam adc fcmovnu sub mov fs add fs dec aas test fbld xchg notb sbb adc xchg jle push lret push data16 cs or cmp dec int ja cmpsl jns push mov cs xlat and fwait and cld add das loope jbe mov pop push aad ja sbb add outsb sbb pop pop nop lods push jnp xchg sub mov or out inc stos es jne in and xadd fldenv pop lret sub and xchg mov xchg or in lods cmp outsb sahf adc rcll or nop jne pusha dec jg movsb stc movsb ret inc cmp sub push xchg popa mov and enter pusha cmpsl and andl arpl repnz out loopne adc dec leave mov mov daa je mov cmp mov xor lcall mov jp (bad) pop aad mov xchg movsl insb xchg inc mov loopne data16 icebp push lds jno push movsl and adc js in push stc mov stos fmul jge inc push xor or inc pusha out adc out fwait js push into cld (bad) sub scas inc das dec rcrl cmp aam test pop sti das arpl or lds mov scas hlt push lds push and and jg scas lcall lea sar test sarl lods mov and inc out leave out cmpsb jp and int3 pop pop mov xchg icebp push dec lea es aad mov push cmp mov ljmp xor jae,pt daa lea dec jne loopne mov cmp pushf push pusha scas int3 xchg add push xchg mov cmp addr16 dec fdivrl jnp add inc mov jle mov stos ret (bad) lea cld jle sub sub pop adc xchg lods pop jecxz xchg shll fadds dec dec je push adc cli and push bound xchg js loopne scas jp es sbb test lds or cld (bad) jnp dec mov subl sbb fimull mov pop out sti repnz int sub movsb (bad) mov xchg push xor leave sarl jmp pop cs jle fst xor pusha jge enter movsb lcall (bad) movsb insb outsb xchg push outsl aaa and fsubrs inc fwait adc ds ja cmc incl inc mov mov pop fldenv shlb movsb pop xchg cmp add mov leave and sbb and inc add jb rorl mov movsb xor dec pop cmp lods add xorb pushf pop lret pop (bad) ficom (bad) cmp out mov jmp (bad) dec (bad) xchg sbb inc push es or nop das test sbb fimull dec dec in rcr push imul insb lret out cmp shrb mov xchg cmp xor xor loopne int dec xor lret mov jb push test das mov dec out dec roll cmpsl mov inc mov and inc push mov cmp xor pop pop andl push arpl xorb popf jecxz mov stos fist sbb xchg out les mov mov sbb inc pop int3 in cmp aaa pop sub mov sub (bad) cli insl mov (bad) jg mov cli pop rorb lods adc es add iret shll pop jbe dec fildl clc mov adcb gs out mov ss mov lea and push daa outsb and xor enter push (bad) sub mov pop xor mov push pusha inc ljmp sub cltd out xor lods shrl out inc ret sub add in sub xor xchg mov call add lahf outsb xchg ret sbb xor cmpsb add dec sub mov rcrb and clc loopne inc movsb repz mov dec mov push imul fisub ret pop push lds xor (bad) jp xor (bad) dec cmpsb push inc lcall flds push (bad) loop jnp xor enter dec lds (bad) adc jp (bad) adc fsubrl and mulb (bad) out dec inc stos pushf test clc or rcrb pop roll push add clc jp and mov mov xor adc cwtl orl icebp iret lods mov jae xchg and xor cltd (bad) mov pop pop dec sbb jnp pop pop cmp fistl call add clc js push or inc loop int mov add dec imul loop sbb sub dec (bad) push sub dec sub idivl (bad) mov icebp fisttp imul mov jne dec push ror push call call cmp mov mov mov xchg clc sti movsb mov adc push jp inc aad insl lods test xchg loop push pop stos or pop mov test push lods jg jle sub jecxz sub (bad) jge out add sbb ret push dec jbe mov in rorl (bad) idivb repz xorl mov das mov mov hlt clc xor movb adc shrb pop mov aam movsl mov xchg push push shll fmul xor inc mov in fidivrl or sti call dec in out mov movsb loope push mul lods xchg fisubrl xchg mov icebp or (bad) out hlt push fnstcw pusha insl arpl icebp rol add inc or scas sbb sbb adc cwtl sub enter or mov ret dec mov cs dec mov add xor rcll addb mov mov or pusha fldl mov mov insb pop and xchg jp lods jbe aas cmpsb dec mov stos out mov fsubs arpl sbb fiaddl loope scas sub add push sti cmc ret bound (bad) jb imul dec sub ret fnop call out cmp (bad) ljmp ljmp xor pop push mov fdivl sti div or push aas dec addl outsl (bad) data16 push pop movsb lock xor inc stos je bound sub add rorl jmp inc mov ss cltd mov mov sbb jo mov xor aaa enter push out testw add stos lahf cmp dec cmp lds int adc hlt (bad) std pop sub mov jg add mov xor (bad) push xchg into rorl or shr jg dec scas lret sbb int3 push sub test aaa push or mov pop aam mov sub adc sbb jecxz xlat arpl jge pop or fldcw jno popa rcrb push jnp lods sbb insl cmp push mov inc add pop (bad) hlt (bad) cltd pop mov shr jb inc in jmp outsb pop int3 les pop mov or push mov inc scas psadbw inc jbe les mov sbb lds lcall or jne fild inc test mov je scas std popa or aas cmpsl mov inc inc sbb outsb fwait mov cmpsb incl mov mov add insl nop in rcr or lods ds adc pop sbb sub outsb das push iret and sub test pop les insl xchg jg into inc lret pop pop cmp cmp pop test mov (bad) mov mov fxch sahf mov pop mov ss inc sub addr16 pop test push sub sbb inc xchg pop pop mov nop scas insl sbb sahf xor call out les jbe cmp dec pop (bad) jle add aam leave xchg mov gs dec jge pop scas loope jb pop pop ret inc lea lods and sti sahf mov mov lds fsubp out movsl pop loope dec mov inc dec mov jo,pn (bad) adc movsb icebp loop and xchg add movsl mov setae fimul inc mov inc mov mov push jge imul inc lock popf clc lcall pop stc or mov xor adc mov push fldcw mov popf lock (bad) testb lods adc or add cmp out dec push mov xchg shll test in cmp movsl fild xchg mov pop pop mov arpl movsb or pop dec xor arpl pop lcall (bad) add jg ja mov ret sbb mov inc mov mov orl jle dec jnp sti stc mov jmp cwtl inc in mov sbb cs push jmp lret call je scas add cmp popa call sub loopne dec sahf or xchg sarl cmp stos pop mov div pusha dec mov sbb jg pop bnd xor jl cmp jg xchg mov pushf divl adc pop loope call mov andb stc adc mov mov aaa (bad) shlb lahf jnp jecxz ret mov pop ljmp cmovae sbb pop push sub nop push mov sub sbb or aaa enter mov fldt rcrb and loopne aam mov into xchg push fidiv add cltd aaa (bad) jb (bad) fdivrs cmp cmpsl adc loop leave arpl pop imul rclb rolb bound cmp bound push leave mov adc shll gs xlat cld sub das or sbbl movsl mov jge (bad) scas ss ficoml (bad) xor add clc push ror (bad) and push xchg or mov jge scas sbb and add data16 xor xlat xchg sub sbb les mov cmp add or sub cmpl pop fildll movsl clc fdivl adc lods mov jmp jne cwtl (bad) jmp fisubrl ds pop sbb lods out outsl imul pop and stos hlt inc movsb xor and mov lea and pop jmp mov and pop stc mov add cmp cwtl fistpll add shrl into (bad) in and mov iret (bad) push pop fisubrl jg iret aad insb leave mov mov adc aas std jne jo mov pop sbb jbe in push je jno add in movsb cld mov and iret xor ljmp fisttp add inc inc cmpsl cs jb adc loope cs sbb stc (bad) lock (bad) fldl ret xlat cmp les mov aas (bad) aas add push jo loop adc xchg pop sbb mov jo enter lcall or dec mov mov push aad cwtl dec mov push daa roll imul sbb aam push and dec sbb mov push pusha sbbl add add mov push aaa jo aaa inc aas int mov (bad) mov add aad xchg sub xor leave jmp cmp mov cmpsl mov lahf sbb add int3 push fwait popf je push fsincos mov mov mov mov mov xchg pop ror dec stos and cmp push xchg fbld gs and test in subb mov mov loop and lcall icebp add sbb pop mov fnstenv sbb or int3 pop pusha inc adc aaa aaa mov dec test push jge repz cmp divb pop sbb mov movsb lock pushaw sub (bad) jbe xor sahf mov rcrl mov push je cmp sub pop andl sub insl adc xchg inc icebp outsb rclb sarb sbb out mov push inc pushf or mov push aad test inc mov xchg pop lahf inc inc sbb popf xor aad cmp pop icebp and mov inc inc or paddsb inc jg adc fcmovnb sbb test stc (bad) stos cmovnp push push sti cmc sub insl cmp cmp push fistpl lds jecxz repz popa mov mov dec xor imul pushf inc imul insb js push cmp mov inc xchg mov mov mov mov jmp jbe int3 xlat and cwtl jle inc imul push sub jmp mov sti ror test pmuludq cmp ja bound popa lcall loope daa push icebp outsl js mov aad sahf fmulp (bad) hlt lahf pop cmp cmp xlat fimul (bad) test js shrb sbb in shrd adc pop cmp inc data16 push or mov sahf mov push arpl adc mov loop or shll mov cmpsl fwait dec repz jbe jo (bad) and mov cmpsl fdivr cli sbb aad push roll mov jns dec and fs rclb (bad) imul xchg cmc pushf mov rolb outsb dec adc outsb test test (bad) jo mov jmp cmc cld loope in inc mov inc push in cmc ljmp and sbb mov aas std dec xor imul ljmp call inc inc xchg mov movswl xchg xchg and jl ljmp stos int3 xchg hlt inc aam insb mov popa pop je lret cmpsl js mov push stos int xchg inc jg xor xor jg dec insl and ret ret or out sub xor pop subb mov jmp daa sbbl out (bad) rcrb (bad) in jmp (bad) jmp cltd pop int lds jl scas insl cwtl mov cli cmc outsl int3 iret add and mov inc lret scas in pop adc jno les std (bad) cmp inc fdivl shlb loop mov je inc or fistpll mov ds push aaa mov (bad) jns roll inc adcl call pop push hlt arpl mov push jl daa add push (bad) and jl or pop iret mov inc xchg inc loop pop push xchg mov sbbl pop gs subl lods xor sbb xor outsb mov enter stos sub dec dec mov loopne ficom rorl xchg in repz xchg in lock jbe jle push and ss in into jle aas aaa push jnp add fs les sbb push pop jge andb mov (bad) enter (bad) in push pop cmp sub mov cld fsubr int3 enter xchg mov bound insl adc xlat or or mov andl jl sbb push or pop repz jo cld push xchg dec loop lret lahf cmpsl sbb xor mov xor xchg xchg mov jb flds (bad) je dec pop in gs insb mov jae mov paddusb into rcrl pop sbb mov jmp or out and das out cmp mov sub sahf jnp push lahf scas pop push ljmp test pop loope cmpsl imulb (bad) mull pusha push dec cmpb adc mov jle add xchg jp push sbb aad xchg mov orl cmp jbe fwait xchg pop push popf push popf jge fwait sub cwtl aam pop cmp or lcall sbb rcl mov mov mov or loopne (bad) popa arpl sub mov jo (bad) (bad) push inc fist add add stos jo dec mov icebp leave mov js fs in pop (bad) stos pop popa scas in xor fmuls inc (bad) mov mov sub push call sti mov pop cltd mov sbb mov jmp mov inc and or cmc xchg pusha push aas out inc push cli repz mov fwait das adc add addr16 xchg xor (bad) push dec push xchg iret dec (bad) notl or stos fcom leave sub push pop adc in imul in leave jle pop adc jg xchg jb cmp pop and xor and mov adc repnz mov aaa xor push inc push sarl arpl push je cmp xchg pop jmp inc cmp mov pushf js mov scas adc in sub out scas dec ljmp lds xor and fwait pushf dec mov (bad) adc (bad) pop cmp (bad) push in mov std inc sbb pop or pop jno xor lcall icebp das int push jle sub mov mov pop push dec fmul xor inc insb xchg sub adc call mov subl movsl pop (bad) (bad) xchg jno stc mov arpl lea mov sbb xchg shrl pop arpl pop fcomi push lock lret mov sbb mov cmc push je adc shrb push sti inc popf jmp movsl fidivl dec lahf sbb sub sbb cli mov bound pop rorl xchg adc mov mov mov add jne mov mov jl dec jno cmp in jl out ljmp clc cmp test shrl dec mov mov cmp iret or jle pop push xchg or sub inc gs mov jno xchg sub pusha in stos inc or adc fiadd mov ja jo cmp rorl mov or sbb mulb les mov divb (bad) popa cmp rcrl jle xchg push mov add inc push insb push push imul jecxz sbb in xchg leave ret ret dec daa arpl ret sbb adc fpatan aad or sbb out addr16 popa sub loope (bad) lahf insl xchg sbb int3 jle rolb adc sub jne xchg shr add pop neg (bad) (bad) flds scas clc dec je jbe fwait xorl fs or inc xorl out cmp add add mov test in dec es mov ja cwtl cmp adc or xchg in int3 aam xor rolb sub in aad mov outsb (bad) loopne or cmp imul mov pop stos mov ffreep fild (bad) fnstenv out int3 repz xchg scas inc xchg dec or xor jle fs sub xor aas mov lahf mov mov pop sub repnz mov gs call mov (bad) incb cmp cmp cmp rorb sub push mov and cmp mov mov push adc (bad) out out mov nop inc ret mov pop xor xor je cld xor lret adc mov aaa (bad) jne push out jnp dec or push mov jo adc shr leave sbb mov add lcall scas sti insl cli pop pop xor pop add sub lods add mov jmp sbb mov outsl mov xchg lods pop xor fwait push imul add decl push imul xchg sarl fsubrs cmp xor orl xchg pusha (bad) repz mov cmp lock hlt repnz or aad cmc lea adc cmp pop les xlat sti les flds cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret lcall add jg pop (bad) fisttpl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg insl sbb repz les pop mov mov pop mov gs out icebp (bad) jg loope scas sbb and add sbb xchg fwait imul mov rorb loop loop cmp sub (bad) ds push roll and or sti das pop sahf lods icebp xchg fwait inc mov adc dec mov adc in mov jmp adc sbb lock inc insb popa imul dec mov pop sub fnsave fwait mov bound (bad) mov scas pop out xor bound stc xchg in lret and negl sub pop test jbe fmuls out mov add dec pop les and xor test dec rcll mov pop rcll popa jne dec outsl cmp test lcall pop push cmpsl icebp xchg test mov ss sbb out std mov movsl (bad) mov aas mov sub je shr adc add adc sbb movsl mov sub cmp sub and push clc jle push jne fimul pusha push insb in in movb popf fisttp pop mov rcr sub jnp scas xchg dec pop mov rclb dec adc aad mov notb lret inc mov cmp outsl push rclb ljmp std in outsl push push aaa push adc mov jg xchg loop jp or inc jge adc je ret gs cmp xchg mov mov mov std add pop sbb push cmp fdivl enter repz imul fwait les push fadds dec lret push enter cmpsl xchg dec cmp mov test addr16 cmp std (bad) inc mov xor (bad) inc push add bt into les cmpsb movsl (bad) jbe lret in adc xor xor or flds push shrb jne sub sub jecxz jnp sbb mov rcll pop jg push pop pop pushf in fidiv popa push mov inc or pop sbb jo pop cmp mov jne divl jge in test xchg jg mov mov out mov adc push push xor sub xchg in dec adc test sbb inc push pop test (bad) mov stc leave outsb lods inc test sbb test int3 and leave (bad) add sub pop mov jmp add xchg xor es pop mov (bad) jb or or ja mov xchg cmp and dec xor shrl jbe popf aam jae xchg (bad) outsb decl mov and pop jnp and rcrb ret sbb mov xchg inc mov cmpl inc out call pop (bad) ror pop sub xchg cli in pop mov jg cmp cld cmpsl sub negb popf push cmpsb jge lea sub add je pop je sahf jmp out add dec dec mov lret mov cmp mov add in data16 sbb out add xchg jmp ret mov into sub mov and aam mov loop push inc fidivr jns stc inc inc fsubs cmp es ret cs test jmp cmp xor xor ja xor out and pop cltd (bad) fs inc in mov xor adc cmp add mov fwait mov fs jmp xor sbb enter push sahf xor jle pop xchg iret sahf lret clc insb rcl fadds test dec out aad out cmp jecxz and ror pop (bad) mov xchg and call imul adc mov test and mov mov das mov (bad) jne pop movsb lea cmp cmc int test call push (bad) sti inc fdiv fisub xor adc mov test lret mov sbb (bad) daa addr16 lret out adc lret jg cmpsl jae lahf gs xor push mov sub add mov sbb int3 mov hlt outsb cmp dec add dec hlt xchg fnstsw xchg xchg add inc and shlb fisubl jbe cmp sar jbe movsb out loopne xchg sub adc mov mov add sub xlat popa and mov cld outsl jb jg aad jne sahf stc push daa or mov mov jmp mov jge daa dec fwait decb xchg sbb jns aaa sub dec push out not or lods in push (bad) lret push adc pop loop add ds (bad) push outsl sbb dec push daa mov cmp nop mov inc sub sbb push dec lods in pushf and adc je cmp xor fildll call les xchg sbb sub cld dec test lods adc scas and dec mov aaa popf cmp pop jmp loop sbb push xchg or sub test lock or stos adcl jmp gs xchg repz pop gs pop dec insl (bad) ljmp test std sbb mov inc roll rolb sbb pop xor mov inc rorl outsb cmp std scas push int (bad) xchg sub lahf cmp push pop mov cs sbb pop loop div xor lcall mov in adc adc aad mov movsb cmc pop mov xor (bad) or push mov and out xor (bad) mov lods add sbb push outsb mov popl or adc and enter into (bad) cmp mov test stos jb dec pop mov push xor mov push pop jl (bad) cli xor jns mov push (bad) fistpl xchg xchg jbe mov dec lret mov popw mov jb xor fiadd mov add xchg mov ljmp jl mov int3 dec (bad) aam dec jg icebp push mov jo push cltd add imul sbb jbe jg mov sti dec std sub mov pop fisubrl jmp jns add pusha push inc jge sti xor pop mov es jbe xor mov add mov repz scas mov mov mov mov into loopne fstpl push movsb cmp enter xor mov imul and or sbb sti (bad) sbb add sahf sti fistpll aas jl insl mov mov aas inc cmp outsl dec xchg (bad) es mov jno adc adc mov sbb (bad) sarb inc rclb movsl dec cmpb repz push xchg je cmp jecxz loop shrb in (bad) aad sbb aas pop cmc lods adc icebp sbb pop sti or cs xor aad ror popf addr16 movsl dec jno or rorl into mov dec mov pushl test dec or aas data16 lfs iret jge in (bad) mov mov mov fs xchg xchg xchg (bad) mov mov dec mov testb mov les ja push mov cmp jns (bad) and and scas (bad) insb add test (bad) sub insb das movb lock mov push or (bad) adc pop push push dec push pop adc or mov dec (bad) sub sbb mov test rorb sbb js adc mov jne cmpsb or repnz bound enter lahf test test or movsl mov inc jbe sbb inc in and push xchg jg bound stc sub repz mov and in inc fldl jle and fstpl dec out sbb sarb ljmp xchg sbb nop xor vcvtpd2dq cmpb or jb shlb mov xchg outsl jp pop scas outsb loop push and test pusha xlat or imul push xchg (bad) adc jae add xor loope mov sbb xor test (bad) or add ljmp enter vsubpd leave or add negb in lahf push jb mov rol cmp lods mov lcall cmpsb pop outsb mov sarb sbb dec in jo bound jbe or xor sub add ret cmp inc stos mov les int shr test movl adc dec xchg test mov mov or clc inc negl mov mov jbe ficoml out outsb inc sub imull (bad) repnz push push pop xor pusha stc loop int3 add push pop push xchg push inc lahf jb mov mov hlt pop xchg sbbl pop loope (bad) mov aas dec pop sarb adc mov inc cs leave xor jecxz lea sbb js imul test scas es ds in push xchg xchg mov add cmp ds jne dec pop mov jecxz,pt jg inc fs push rorb xor add mov bswap or dec xchg insl mov fsubrl jnp push mov add mov stos nop (bad) mov or or icebp jns je add sbb fsubs icebp ds stc aad aad lods je vphaddbd jge xor xchg xor push xchg cli ret dec mov les aam push jo push jmp inc in jle push xchg push push pop cmp (bad) fucom es jno loopne or leave sub cltd mov mov leave or mov pop push dec popa popf iret pop mov aam lock test add ja mov in jle and gs or sub fisubrl push mov (bad) xchg adcl cmp (bad) pop cmpsb jge jmp lea stos daa outsb lcall xchg dec or test test jecxz add pop dec frstor cmp push (bad) rclb das ss loop push aaa jge in add cltd mov inc stc sbbl nop mull loop fs mov push out enter mov iret mov adc jmp cltd jb es call xor sub lea mov test cltd push mov sub mov add fmull mov jg and or mov lods (bad) jno pusha arpl jmp jg movsb mov inc call cmpl scas mov call inc xchg lret rclb mov adc lds arpl push notb push mov sti lods xchg mov repz jecxz lock jb into repz sub in dec (bad) dec fwait out hlt mov (bad) loope and gs aam mov mov es insl dec fistpll iret fmul cmpsb les aam icebp int sbb dec loopne push dec push pop jp cwtl fiadd jns out out xchg xlat (bad) sbb idivl or cmp xchg lods insl push cmp in jae push jecxz and (bad) ds push sbb inc adc pop lock out mov and mov ljmp ja pushf int mov bound and and xor add xchg fwait cs sar data16 and pop fldcw xchg (bad) aad and cmp fs xchg js add imul insb sti in repnz dec jge movsb xchg xlat or mov shr shrb add xchg das dec xor adc incl fistl push lret push push dec cmp cmp mov lds pop or fist sub xchg jbe in roll jo cmp out ret pop push inc rcl mov hlt jge jne loop je sbb xchg fwait adc popl out leave push enter (bad) aad lahf lahf call cmpsl (bad) pop pop sbb imul rcr pop or in and dec andl jge cmp adc ret mov or mov pop (bad) and incb pushf inc mov je,pn mov decl mov fdivrl fdivl xor leave cs or push lea jp pushf fs add in shrb inc and lret pop addr16 mov sub jl shr push pop adc lret popf jnp mov in (bad) sub sub scas inc fmull adc cmpsb push outsl fcmovb add shrb mov out sub daa rcrl repz loop gs fsubr cmpsb cld push sub add dec and lcall cmp mov call mov in popf stos fistpll push pusha ds xchg lea loope (bad) mov push cmp mov adc xor push pop push (bad) imul in sti mov xchg insl pop repnz cmp mov andl sbb cmp outsb mov adc sub mov mov les mov fwait mov sbb loop cmp (bad) sysret push dec mov adc mov push insl insb cmp mov cltd and mov shrb mov xchg fmull mov ss mov xchg hlt test mov cmp pop mov add cltd cmp cmp ja in jle in xor inc hlt jno jp clc push dec pop dec push out ret sbb push xchg mov push dec std jmp adc xchg call xor insb inc adc or xor add sub cmpl ja mov stc inc (bad) lret pop daa sbb lcall or add jg scas je mov jge std sti pusha cmp rep mulb sub fcomip orl leave and mov mov mov pop jb outsl push or pop push fcmovnu xchg xchg inc dec inc mov inc xchg push repnz push rcrl iret and add mov push int3 push std outsl push bound sub dec mov je xchg cld ljmp and fxch movsl int3 jle xlat cmp pop loop add xor rol xor ds cwtl inc dec or popa mov and and add mov xor movsl aad int cli fcomi and push cmp jp mov fisubl loopne jne xchg insl jno arpl inc in in cvtsd2si cmpl loop xchg sbb push jp mov (bad) mov stos lcall stos cltd and lret pop xor push repnz sub adc mov scas lret pop rolb sbb xchg lret mov lods xchg dec xchg ss adc mov push xor xchg xorb sbb jecxz,pn pop (bad) sti (bad) xor cmp sbb xchg outsl mov push (bad) xor movlps imulb jg mov pushf ljmp pop aad mov jecxz fdivrl mov mov mov lds int adc push dec out aam lcall mov (bad) into inc mov dec cmp (bad) sub sbb jb mov push ds in push jp in mov das sbb mov mov push scas nop mov adc (bad) idiv das das stos jns mov jp mov rorb add lea mov and cltd test adc jo jae lcall sbb stc mov dec js (bad) jl xchg dec jle (bad) mov mov out aaa (bad) daa cmp ja test cmpsl mov cmpsl (bad) mov jno nop adc mov mov orb lods lds xchg roll clc aam xlat mov (bad) fs pop fisubl mov lret js test xchg pop jge jb dec cltd stos mov repz mov popf push icebp xor add sarb xor push mov iret mov mov in mov adc es mov jl add push add jo inc fildll sub and mov push loope imul mov das jns ficompl lcall scas jp std jne adc adc (bad) cwtl les xchg push fwait out shr (bad) je scas dec and jns jg inc testl mov mov mov cmp push lret mov lds jp cld add out xchg pop mov lret inc fldl das es xor rol test js (bad) adc inc cmp jecxz push ds xchg (bad) out and js and in push push mov pop sbb inc fadds lock sbb dec in fdivrs in add mov adc jle mov je int xchg push test mov mov (bad) fistpll xchg add push outsb ret jbe fstp sbb sbb dec sti (bad) popl aam or sbb push jl xchg mov (bad) in dec sbb ja mov mov xchg add inc or mov fmulp push mov jg int3 (bad) dec es xor int3 cmc imul inc jae push loope out push or cltd out fmuls ss push or mov xor adc in leave add mov mov in jno xchg out cwtl int3 add push inc cmp daa fisttpl imull call mov mov dec ljmp or mov movsl cmp or mov xchg test test out rcrl aad dec pop dec popf out xchg cmpl out movsl xchg mov and aad mov popa xor rorl inc leave add mov pop daa scas cmpsb fwait aaa ds xor xor fwait cmp lds and je add aad aad and jae pop call inc push outsl inc pop cld test inc movsb jae arpl inc jle imul add xor cmp add cmp lea xchg (bad) iret xchg loope lock cld xchg addl int inc aam pushf cwtl dec stc les sahf (bad) test cmp stos repnz fdivl adc mov fnop inc aaa cltd popl sub add (bad) int3 mov cmp mov (bad) cmp add popa xor jl (bad) fdivl outsl andl int3 inc xlat inc adc jae sub or mov hlt lret ja insb notb stos push inc push (bad) insb mov jmp outsl mov xchg xor mov jae or inc dec loope das out jle cmpsb push test cwtl outsb or fist outsb xchg xchg cmp and je in push ret sbb cmc aad mov inc js inc leave sbb push stos cmpsb enter mov mov (bad) pop add mov mov mov (bad) (bad) pop out rcrb inc mov arpl sub jo push stos ds push mov repnz hlt pop mov lods int insl (bad) cmp in add inc sub fcoml sub sbb cli ja pop addl sbb push fadds (bad) jo mov (bad) xor pusha cmpsb inc addb scas xchg sub sbb jo ret fs add cs and imul xchg xchg in movsl repnz push push mov mov repz fwait ret mov xchg ljmp roll scas sbb xchg lock cmpsb pop push xchg add sub sbb cmp add cmpsb xor cwtl das pusha or sub and mov sbb push pop icebp mov fisttpl cmc inc jns add mov or pop lcall test push xlat aaa add fildll and pop movsl mov loope out xchg mov inc rcr push mov mov xchg hlt out ret cmp push mov jg bound fstl js jl mov lret xchg or movsl push ficom mov (bad) stos jl cmp jge mov push (bad) push sbbl stc xchg xchg es sahf fwait mov gs shld int3 inc stos adc jecxz roll outsb adc dec or mov inc add xchg fcompl dec (bad) adc lock aam jae aas imul xchg icebp sub ja ds inc loopne fwait adc (bad) je mov test enter xlat mov rcl clc and mov fdivl dec aam and pushf es xchg and mov xor adc dec push dec (bad) scas in mov jno js fistp insl pop inc sbb dec out not ljmp inc sub adc cwtd inc push jecxz cmpsl mulb pop mov incl jecxz ds inc or ret mov js push jo popf scas dec fnstsw sarl xchg pop pop sub adcl je or into xor lea das ds jmp int lahf das push int3 (bad) mov loop xor std sub adc fcmovne clc iret test mov push cmpsb mov imul aad xchg jp dec mov sahf and cmpsl mov mov xor inc shll cli jle stc mov je cmpl inc mov mov ret push inc jo mov xchg dec jmp or sub jle jo mov dec les cmc das inc (bad) sub sub dec push push add (bad) mov or or (bad) (bad) xchg xchg and dec sub cmp inc call adc repnz test stos push mov scas lods jle ret imul xchg mov clc cmpsl mov dec js pop adc fisttpl scas insl jb je out fwait xlat pop (bad) cmp popa push mov stos mov and dec cmp pop mov cmp pop stc pop mov adc or add or out aaa mov jge setp and addl inc das inc xchg cmp sub cmp out loopne sub inc dec popf mov je adc pushf adc xchg xchg mov add mov sbb scas enter jle ljmp dec xor arpl xor popa hlt into mov jnp stos leave or scas rcl das popf in mov ljmp xor cmpsb sub scas (bad) and addps and (bad) loope orl inc dec ja push int3 push test xchg cmp xchg or outsb cmpsb (bad) mul push insl (bad) (bad) movsl mov xor mov fstpt jge test movsl inc and pop xchg rcll mov das testl push cmpsb xchg out mov inc daa test sbb jge mov cmpsb xchg jmp mov or sbb and fwait hlt jge fisubr les mov and in icebp sub or mov (bad) push add cmpps jno nop or jmp jo adc dec sub add push push push hlt in cs outsl adc dec and insb lahf push mov into leave xchg iret or test jge pop ja aam xchg mov push je inc jb push or lcall insl xchg (bad) testb inc inc sbb sub pop cwtl aaa or mov aad pop xor aaa fsubrl push mov stos inc mov es out dec test lods lret inc (bad) fistl fmulp loope pop xor mov daa mov pushf out leave insl push mov or and or fsubs mov sub lcall jp sub mov (bad) or xchg push test push mov mov repz xlat and push pop push iret mov push dec dec adc int3 dec mov sbb lea lods (bad) jbe es mov xor mov push sub fisttpll movsl pop jb and inc or divl jmp notl aas mov outsb and adc int cmpsb fwait cmp out jl (bad) in push push mov sbb pop jge insl sub mov inc test or adcb dec xchg bound mov dec arpl nop gs (bad) add sub fildll push int3 lea cmp push test push adc mov sbb cs (bad) jne mov pop lret mov popa add and shll pop mov insl outsl ljmp cmp push adc xchg add dec mov jae dec aam fcmovbe mov lock ss or jb pop hlt fisubr int dec inc sti jmp jnp xchg (bad) mov xor sbb sub popf vpxor lds or jmp icebp dec inc repnz dec sub nop decb or push scas lds or mov or adc lds jle jne mov and scas or cmp mov aad sub nop jg loop mov stc std ret (bad) cli es mov cmp rcl adc mov aaa insb rclb sbb inc push ljmp cmpsl xor mov and push ds jp mov pushf cmp iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add pop sbb add jp pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add imul fistpl xchg mov lret ss insl pop jbe (bad) xlat stos dec push push jnp mov add sub add mov inc in cmp arpl push stos or scas or (bad) imul ret jecxz mov sub cltd xchg cld aaa sbb pop outsl dec int outsl cltd jp in cwtl mov repnz inc jbe jp ret data16 xchg gs out xchg ret imul (bad) xor mov jecxz jp cli leave push in mov subl mov subw sub cmp pop xchg and sbb sbb movsb ss add lret adcl cli mov lret sbb loop jns shrb mov xor jo (bad) and loope loop jns push stos popf xchg add pop hlt sub nop mov push movsb adc adc ljmp lea (bad) sub mov sub fist (bad) sbb stos outsb (bad) jae in add and ljmp jb or ror bound add dec jle shrl lock cli imul outsl dec les mov push dec subl jo mov cld je pusha addb mov push jns mov mov xor pop loopne mov out add cmpsb sbb cs ds xlat mov mov jne imul push pop jle ret push push (bad) mov ja pop lock (bad) cmp repnz mov out mov in adc mov sub sub inc mov imul aad dec jno outsl inc xlat lret fimul aaa pop jae movsl push sbb add arpl push fwait xor mov mov push inc fdivl and cmpsl mov inc aaa jbe jp lods sbb leave xchg scas int rcrb sahf jb and out dec in stos cmp xor mov or je mov push inc pop movsl sahf sub push jae push movsl or pop adc add xchg fildll inc (bad) mov adc cmp fsubr jae cld mov cmpsl inc xchg mov push pushf stos mov lret and test adc fwait mov dec cmp fwait mov movsl (bad) dec add and popf (bad) dec hlt sti cmp mov pop (bad) imul icebp cs in jo pop data16 test mov inc lcall (bad) push aas dec push cmp cmp mov jne xor mov stc jle xchg sbb xchg mov pop push xchg je sub dec sub inc pop add push and fisttp mov orb jge ja mov setne xor dec (bad) js pop inc out (bad) sbb scas xchg pop sbb cmp into jmp loopne stc (bad) fs adc aad enter lahf jo xor aad adcl fcmovnbe push or jg xchg (bad) cld jno dec xchg outsl fwait mov imul mov push dec js stos out loope out dec in bound loopne sbb sbb cmp add enter inc sub nopl fwait icebp clc subb into and push psllq jmp jg jmp (bad) mov cmp adc and movsl icebp jl ljmp test adc test mov sub push loop daa jnp pushfw daa (bad) lret xchg lret in xor jge inc jmp adc pop jbe nop dec mov add cmp or push imul inc add jmp mov ret pushf iret cmpsb lods (bad) pop mov ds (bad) pushf ret add ljmp add inc jg or push scas and inc les xchg ficom xor in inc jg inc ds std popa fisttpll xchg sahf cmp ror mov push fsub notb fdivs fs icebp hlt push jle out jbe lds pop inc icebp jbe in aad sbb sbb jge xchg out mov or inc jne daa pushf addr16 add push jmp popa fsubrs mov cmp outsl xchg cmpsl test mov and xchg and xchg cmpsb cwtl push pop pop jg jle scas mov mov add push les add (bad) push adc es lcall inc int dec roll js enter jecxz scas popf mov push add inc push aam sahf jmp popa and fisubr xchg popa dec xlat test loope cmp inc adc xchg in lods loop sub test mov mov add leave outsb and mov aas jmp sti aaa out cmp pop xor ljmp imul dec daa mov jmp mov mov mov (bad) fdivs push push add movsl sbb (bad) cmp sbb mov pop loop pop xchg aam jmp loop in xchg jle popf sbb outsb inc lods ja fs xor shrb cmpsb decb push jb ret cmc (bad) mov movsb mov mov add jg adc sub xchg stc inc repz cmp dec stc and fdivrs dec imul sub xor imul mov or mov jl cmpsb outsb and cli mov add (bad) imul repz pushf imul mov mov push mov movb sbb and std addr16 sub std xor push fildll stos (bad) int3 popa pusha fisttpl out xlat sbb repnz aam lcall repnz xorb scas push shlb push jno icebp pushf insl clc mov int push and stc mov and cmc insb jg add in push addr16 inc hlt mov lcall mov pop jp jnp mov mov jecxz push sub insb inc loope out push aas cs mov push mov cvtpi2ps ficom lret jb roll das xor cmpsb pop pop xchg aam lods loopew pop fistp mov in or dec cli add jns and cmp movsb jbe insb or daa mov aad test cld add mov inc or inc movsb pop pop iret jb jbe int fnstcw int data16 test dec movsb je (bad) hlt mov fistpll add xor fnstsw cmp mov sub sti fist inc mov (bad) adc xchg sub jae fiadd or ss cmpsl outsb shll add out mov xor mov int3 in jns out jns es mov stos cmp ds mov imul (bad) pop pop nop lea lahf ficomp sarb rolb push out cmp pop xchg xchg int3 jmp out je in mov cmp (bad) enter dec mov adc pop adc or sub cli xlat push adc push imul lds xchg scas add dec lahf test ja out cmp lret jp bound mov xor push scas pop ljmp xchg int xchg sub or dec jno pop lods pop test pop outsl fmuls add jecxz sbb rolb adc insb imul ret in and imul pushf push mov insl (bad) sbb fs lock mov testb out push cmp shrl popf sarb cli (bad) lds dec inc xchg mov sbb iret mov cld lret repz inc pop add and ljmp xchg imul packsswb jo xchg (bad) test sub adc into dec dec xor pop cmc jnp jns fldenv in test pop cmpsb mov add cmp scas xchg mov or jns cmp jp jnp movsl inc xor xchg (bad) mov mov cltd in insb or cmp cmpb dec mov std adc sub pop popa pop jmp sub ret pop xchg cmp fs push mov aas dec cld mov mov in mov fidivrl mov or ret out test and frstor je xchg inc cmp imul push cmpsb jo or jne test jbe dec pop in negl lret xchg (bad) repz jmp loopne int inc or test int loope or add scas into cmpsl xor in cwtl adc pop (bad) pop inc ret add dec lret test imul jnp and out xchg ja and subl fucom test ljmp pop loop insb cmp or push mov push xor or sub and stc cwtl fist push shr icebp adc lods int3 lock gs sub in adc inc jne jecxz mov cmp add mov inc xor sub push outsl clc bound ja nop pop add stos jle lds adc sar mov insb cmp adc pop cli xchg adc push jmp dec ljmp push enter xchg lock into es sbb shrb iret xchg orl cmpsb es (bad) in pop stos adc fcmovb cwtl inc and lods mov clc enter adc ds das inc fisubl xchg test idivl (bad) sbb mov cmc jp test mov pop xor pop jnp or xchg jb xor int3 inc fisttp mov (bad) fs jge (bad) xlat jnp sub mov or inc sub jge push stos stos arpl jle mov sub test dec push xlat (bad) out and scas xlat xchg push xlat sahf fcmovnbe push (bad) jle jmp (bad) jno mov inc cmp xchg leave pop mov or mov sub sub ret sub xor ja cmc (bad) mov (bad) scas sub (bad) pusha orb inc xor or pop cltd adc mov and loope jnp scas xchg xchg push repnz in and fistl (bad) push jbe push inc jns inc jno aad jb ja (bad) hlt sbb adc out dec arpl and je sub imull or shl arpl cmpsb cmpsl stc cmp sbb mov or dec popf lret sahf lret dec loopne (bad) popa mov or and jb jae inc xor xchg lds test je mov pop push imul fwait aas std jae (bad) ja mov (bad) lahf rclb pop cmpsb sub (bad) stc shll lahf adc mov or ss ss mov xchg call sbb scas (bad) leave push xor pop call jae jae dec or jo jg div mov mov sarb (bad) aad push rcl mov xor mov sub mov cmp sbb or lods stos lret mov mov jp jecxz push arpl cli nop push sub test stc mov (bad) cwtl mov cmp (bad) mov icebp or das add std aas lods sbb frstor jne ret mov rcrl pop pusha add add fcomip jns push cmp scas mov adc pop aam jo outsb inc fistpl inc mov pushf dec mov cmp dec fdivrl ljmp lret mov rcrb mov inc cmpl and xor dec ss cmp ret rdpmc mov je pop mov sarl cli cmc or (bad) and lds in dec fistl or mov jbe pop push pop dec pop cmp xlat rolb cmp cmp push sarb in cmp xchg mov xchg jge pop lods subl inc outsb mov push cli jo imul or insl dec dec pop jle inc call cmp or inc movsl and in call mulb pop pop pop ret data16 ret stc and or scas lret push lret mov xor xor mov add fwait stos les test jnp icebp mov std mov mov jl push addr16 mov fbstp mov push or push mov shrb and mov or dec out xchg mov in ja cmc lret jo nop xchg lret or je jbe in dec fs insl xchg mov les adc jmp add (bad) xchg jae fisub cmp (bad) jae mov mov or fldpi push shr aas add mov jno adc dec push pop or push pop test cmp inc cmp dec xchg and adc clc test xchg dec mov mov lret inc sbb xchg adc movb inc sti add ja and sub aas aas pop mov and add sub adc add movsb mov clc fwait pop lea xchg or jnp cltd pop ret push mov aas shlb mov out push lret pop mov cld js mov xor call inc jg adc lret dec int adc leave xlat (bad) adc stos rorl xchg mov sub sub mov aaa fwait pushf and xchg shr fs cmp in enter sbb jl jecxz ds fdivl into add fisub and lret movsl mov xchg adc cmpl jns or idiv data16 inc mov ret sbbl jge sbb pop mov pop nop sub scas loopne imull add (bad) jle loope loope out es add dec push fs pop cld push mov cmc and stos cmp out jo js xor dec or neg fnstenv cwtl mov inc (bad) mov adc adc (bad) rcrb ficoml or inc jp push or xlat lods mov add daa push xchg fdivrl ret aad ljmp scas add push shrb xor imul popa xchg leave and daa sub gs and mov subl (bad) stc add jae add mov insw inc ret subl gs out sbb jbe mov xor or jl mov sbb outsl jl adc cmp jns (bad) int jnp push mov cmp push fcomip and sar push aaa pushf mov cli scas repnz cmp insb adc jl clc pusha popa jbe dec push pop test repz sarb push pop (bad) stc (bad) gs push subl push xchg jno test out addr16 popf dec cld mov outsl int3 push aas cmp cltd and push mov jp push add popl inc aam push (bad) hlt pushf cmc and cltd ljmp xchg (bad) push xchg mov or adc repnz mov xchg jp rcll jns add inc push jae cld jae dec jae stc clc in cmpsl (bad) in ss out fnsave fdivrl cltd ds push ss xchg repnz aad mov xchg lods jle jns das cmp idivl ds stc cld jl mov jno xchg jae mov (bad) xor in lret or jge inc pop aad push lods test fs pop jb cmpsl std xlat sti sbb sub add mov mov shlb or loopne enter popf lock xchg adc add lock push repnz xlat jae jmp sbb out jl lods loope icebp mov xchg push sub dec cmp jl into cld fcmovu cmovge sbb (bad) addr16 aam jns cmp leave jl xlat enter sub mov pop pop sub pop cmp sub cmpsl (bad) push add mov adc mov loop dec cmpsb mov leave lcall stc xor cli sub in mov lret adc lock fidivl adc subl sub mov push jp outsb dec lahf push lds xor fisubrl cmp shll sbb or pop ret in inc and leave neg push mov cmpsb mov mov jle xchg mov lahf xchg mov sbb ljmp mov push movsl mov and push xchg shrl stc negb test mov xor fnop adc cli lea dec mov inc xor push xor sub ljmp sbb rcpps xor sahf xor cltd les pop js test jle insb stos jb pop std movsb (bad) jb xchg cmp mull scas mov clc xor push xor sbb cmp (bad) or mov sbb xor push mov jnp sub sub ret lret das xchg jns xor call sub mov std push jle or setg test dec scas dec sub mov loop xor out mov mov or xor mov cltd insl sub (bad) jmp cmp mov pop mov decl sub pop std sbb push pop lcall xchg xor pop jmp inc gs pop mov stc lock jbe outsl or inc cltd int3 cmp and adc cmp mov adc popl or cmpsb or mov outsl (bad) not int3 sub cmc roll fstpt mov insb in add inc aad fist xchg lds xchg xchg inc mov or addr16 iret fsubrs xor adc jae mov incb neg nop ljmp iret cmp cmc jno pop iret outsl dec adc mov sbb mov out jae pop divl out dec and jnp sbb inc test jne xchg pop leave jb sbb fbstp lods sbb sub push jb ret outsl or je fsubrs hlt inc ret (bad) xchg xor jp out xor adc and aas xor mov mov or ja mov ds cmp sbb jmp xchg push lods (bad) jmp inc mov jb (bad) cmp and flds push pushf xchg mov mov jmp out lock icebp dec inc sbb mov je sbb or test push fsubrl stos dec leave stos cmpsb pop idivb sti lret dec mov xlat or sbb lret int3 add int3 dec jno idiv fucom loop imul cmp lahf sbb xlat pop test push adc mov add xor and je xchg stc add xchg (bad) nop jo mov dec and lret decl xchg inc jg inc aad testl xor cmp stos jge and fwait test outsl lds push push or out and fimul jle or inc mov call mov dec xor pop outsl ja sbb xchg insb fdiv sub fs inc push mov movsb dec call xor xor mov xchg mov insb cltd add adc pop in and mov pushf into xor xor cmpsl mov fstpl jb cmp adcb fbstp or push enter cs inc sbb push hlt fcmovnbe adc mov add out cmp add dec jecxz cwtl xor loope movsl cmpsl dec xor out out loop stos jle and pop sar imul lea mov adc movl enter sbb push fnop jne aaa (bad) adc sbb jp ret outsl nop xchg mov pushf dec clc cmp pushf add fs test xor mov jg (bad) mov aam out push insl stc out mov and scas lea mov fstp out orb xchg mov fiaddl xor sbb stos (bad) xchg das mov negl outsl mov adc sti (bad) popa mov add jg push dec jge je rclb (bad) mov mov cmp mov pop push sbb ja cmp pop dec mov sub das or ljmp in cmp xlat xor push mov ret das and xor leave test dec jnp sub sub mov or pop sub jge pushf rorb inc jg jge insb icebp mov (bad) rorl mov ds lahf or (bad) repz push ljmp xor jg mov jno dec or pushf mov movsb insb test outsl (bad) jae fistpll sbb insb xchg xor lock xchg leave xchg in jle jge push ret fucom xchg sbb std data16 dec loopne andl cmp std in push dec fiadd sbb mov pop nop push fdivrs jne mov (bad) orl mov xor dec jle and jae test das mov fnsetpm(287 add cmp xor push rcrb aas add mov fcmovb int pop adc ja mov jg inc out sbb add mov jns xchg cld (bad) mov test pop push inc (bad) jl div mov ret outsb mov and jmp xor popa mov imull add pop mov jg xor lret lcall std jmp mov ja mov ljmp rcl or dec cs fldcw fsubl repz insl mov pushf push mov adc mov and outsl loopne inc sarb mov repz (bad) xchg add es mov push shlb sub sbb sbb std sub (bad) or adc xor inc je and adc mov arpl je stc out icebp das imul int3 mov adc push xchg ror cmp mov movsl mov out pop mov mov xchg gs and mov in gs mov into sub ja dec fldt push jle cmova add (bad) cld cmpl dec jmp pop mov cld bound xor fadds test pop mov mov mov in stos cwtl sbb inc jae repnz (bad) jns lea xchg mov inc int in pop push in mov dec sub imulb cltd pop cmpb and repz in mov lret adc (bad) aam push sub mov rol scas xchg pop mov and sbb dec dec jl loope int push sbb add mov sarb in scas and dec mov mov or xchg je das cmp loop mov fwait (bad) adc mov leave call and xchg dec lock mov xchg push movsl fsubrs ds cld pushf mov repnz rcr sub mov pusha cmc movsl ja xor movsb push push clc dec cmp sbb xchg jle pop push js out lods inc clc or dec ret sbb ds bound cmpsl popa jge clc and rclb push jbe or daa or jge mov cmc jmp mov stc jle sbb jle leave mov idivl adc lods imul xor shld pusha call scas push data16 or dec mov and cmp and ss ds ds mov push and in mov mov and jecxz or xor jmp push xlat cmp inc jmp push jnp add jle cmp lcall mov hlt pop dec es adc jecxz pushf data16 (bad) jle cltd sbb lcall xor das mov ljmp scas pop xor mov fimull jo inc cmp dec dec dec pop movb xor add fildll (bad) add pop pop cmc (bad) (bad) ljmp inc mov pushw adc (bad) orl or dec rolb adc push loope mov cwtl mov inc ss add int3 push mov mov fidiv mov cmp lock test cmp dec fcomps ja xor jbe out dec and cmp rorl fwait lods add push (bad) rcr dec arpl and incl and fstpl pushf ja out out loop cs aaa cs or clc cmp iret dec jns xchg or jle pop addb sbb lcall div in test jge inc or loop,pn std fwait and mov ds push popa xor xor jle lret iret mov xchg aas ret jge js lcallw jecxz mov gs (bad) enter sub and push fisubr rol mov mov loope sub out jmp mov outsl mov xor pop or (bad) sarl (bad) (bad) movsl sbb rcrl call aaa sbbl out xchg push insb scas lahf loopne dec pop clc ljmp sahf sbb addb aaa xor push mov ret sub outsb out mov mov dec push rcrb and inc mov into mov dec fiaddl mov fwait mov xchg jns cmp bound insl loopne mov cwtl mov xchg pop pop add add (bad) jg push jbe mov (bad) popf ljmp sub sbb dec mov test dec ja int out cli cwtl mov (bad) pushf mov add mov sbb dec popf or mov jmp faddl inc rcll and fist cmc adc cli push cmp sub sbb int xchg scas test xchg jno data16 inc push push movsl push push scas int test xor fmull mov rcrl lock jmp jb add pop pop cmp dec xor push loopne jae lret aaa push mov ret cmc push xchg sub rcrb sbb sti jns push xchg mov cltd aas add cmp jge lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov jmp seta add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne mov imul sub xchg in pop (bad) mov (bad) fldt clc jle idivl sldt add add test mov fs lock clc sub scas or xor jne mov sub lea (bad) jge out mov cmp push lods push test and jecxz pop xchg nop cld clc sbb lods in mov les sbb popf lcall cli lret sub repz lods push aaa movsb cmpsb ficompl jmp pop sti mov (bad) jae repnz (bad) lret add mov sbb push mov ficomp jo jae cmc out out add int3 and add idivl repz in cltd or pop jb and adc sbb (bad) push ja stos cltd stc fdivs cmc mov xor je jno jp mov clc mov pushf push jg inc in test cmp int xchg and mov cld jge in or div dec pop movsl push xchg ret leave cltd mov or pusha (bad) dec dec outsl mov pushf jbe enter cmp push in cs icebp cs xchg pop mov testb and cli ds lret and mov mov xchg (bad) sbb fistpll sbb lds push sub xchg push sbb aam adc lahf sahf out in roll inc mov xor mov mov push call fadds or or pop mov loope pop daa mov sub in cwtl rclb test aad inc or or pop sub addl out stos aaa js (bad) lahf sbb pop inc sub negl xchg push inc sub arpl (bad) mov not push cwtl sub and nop mov clc jbe dec je jnp mov mov (bad) pop imul push xor adc xor jecxz jmp mov cmp dec test sub mov mov cmp push lahf movsb mov lock and mov pop add or divb sbb ret pop stos xor fisttp popf lock (bad) (bad) repz mov (bad) sub jb out js outsb push mov inc int3 bound xor ret jp mov iret xchg pop dec popa jle rorb adc ja mov dec add sub cmp pop lods or lret popf fs mov pop in mov sub (bad) dec inc adc push pop xchg insl cs es xchg pop cltd lret outsl out movsl sbb add cld les out addr16 add lock sahf test test mov movsb subb sub push fdivrs sti in or and xchg mov inc xor mov mov shlb sub xor gs je sub mov lock and iret test mov imul dec cltd pop mov and stc in cmp lcall mov dec jns (bad) aam cld or out xchg fstl stos int3 outsb in xor mov hlt (bad) das adc mov mov mov cltd lock xchg push jmp fistpl mov daa pop xor int inc ss lods xchg mov cmp adc cmp mov lret mov xor cmpsb das sti pop bound cli inc clc imul call mov jecxz insb mov in aaa rclb into cli cmp mov das add daa adc jle aas sar ss test or sbb les add lret add pushl lods inc adc scas xchg push mov cmp sahf fadds mov lock addl jne out xchg imul sar inc js (bad) aam rolb sub inc mov cmpl mov hlt in sahf hlt cld or aad sbb mov lods xchg push (bad) lret pop mov insl sbb dec in and jp cs pop stc cld and out or sub (bad) jnp mov int3 insl stc ljmp lods mov je popf andl inc sub std mov or add stos call dec inc loopne and jl out roll mov cmp dec cmp testb mov call testb mov pusha dec xor xchg mov arpl mov mov push or mov aas push (bad) xor out loopne or pop mov aad xlat bound test xor push test inc insb lds imul movsl cmp add or jge inc cmpsb mov outsl (bad) sti (bad) dec sarl scas mov rcl lcall mul xchg cmp xchg pop mov jp add dec xchg into jo movsl push scas cld test mov dec and mov dec mov add insl lret out xor jge mov mov test push das fimul jne andb jle cmp pop cli jge js insb dec ret bound mov lea xchg dec pushl cmc js dec or test fsubr aad imul mov push je iret sbb (bad) stos hlt subb sti and fs in mov xchg lret insb cmp or mov add inc fstps mov xlat fcompl xchg xchg jb loop fcoms pop movsl pop xlat fdivl int das rcrl or push call popa xor sahf jbe mov sbb cmp inc mov out cmc ljmp cs ljmp arpl dec jmp or hlt jb in movsl push insl jns push inc mov fwait cmp jle inc xor sbb xchg mov mov adc jecxz in iret inc push (bad) and inc and or cmp mov xor adc jb ljmp add sbbb jns inc cs adc adcb mov in jmp cli push or jne add (bad) xor repz int3 add and hlt pusha pusha jecxz ret mov jle mov fnsave jne mov div and (bad) stos dec xlat sub jne hlt cltd jp jmp sub xchg (bad) mov xchg iret push xchg jmp pop and xchg xchg hlt je cmp sub xlat subb fdivr notb jg mov fnstsw mov mov int pop (bad) movsl mov inc (bad) cmc ret mov movsb ja push push xchg test pop mov movsb or jmp into scas cmp pop fstl xchg ret adc jns cltd xchg nop jge mov shrl and imul jg out push and (bad) cld inc mov lcall jg cwtl inc out cmpsb pop lcall cmp clc xlat mov add mov or outsl arpl cmpsb pop pop jbe cwtl push or lcall sbb cmp or mov jns lds aas push mov or inc and test in sbb popa jl mov loop ljmp push arpl in xchg adc aam or in enter mov dec push mov jns mov or add in push std cmp dec jl dec jmp cmp xor push imul dec sub and cwtl mov test mov push inc sti arpl jle cltd faddl mov inc adc jg xchg push rcrl (bad) jno lds xchg sbb imul inc xchg gs adc mov sbb fwait dec sub movsb jg mov lret js cmpsb dec add sub pop int mov xchg jl lfs into mov cmc sti notb shll fadds cld pop push sahf insl rclb cmp out stc xchg psubusb es pop sarb cwtl icebp mov xorps js dec or (bad) sbb xlat maskmovq negl mov fs sarl ljmp pushf add mov scas mov testl sbb pop adc test out lds icebp mov pushf ret lods xchg inc movsb pop (bad) daa xor bound loop mov sti cli mov shl mov mov cltd shlb and xchg out or mov call hlt popa lret mov xor mov jmp xlat cmp sahf xor jae inc cmp xor negl pushf and pop cmp pop cmc pop mov inc mov xor cmp or sub mov push loope inc dec push cmpl addr16 add stos inc insl mov stc xor aaa mov shlb sti jo test xor aad xor and sar pop mov jns adc repz sub fs or ret mov dec cs push jnp or xchg jge push leave and jp pop cmp cmp dec ljmp mov bound inc or repz xor adc add in leave mov icebp push cli adc push mov ret dec mov mov data16 dec mov es daa dec repnz xorl shrb xor les mov test sti mov out addr16 push dec dec mov cli nop (bad) xchg jmp leave mov and sub inc test lret jnp in and adc shll ficompl enter mov ror je int3 push (bad) out insl sbb pop (bad) outsb mov cmpsb push cs call jecxz loop out add sbbb je push in xor push xchg jno (bad) sbb inc xlat out mov cmp stc jbe out clc outsl out scas out test enter rcll mov ds movsb jae sahf or mov mov sbb ja xchg xor lds lcall loop repnz ds out lret lea andb bound sbb hlt pop mov js (bad) inc and orl ss pop (bad) outsb outsl fdivp mov scas mov sub (bad) je sub xor mov inc pushl fsubl aad jle xchg movsb sub add test xor psubusw int3 pusha push adc mov mov lods mov sbb fwait mov push xor inc or loop inc aaa (bad) gs stc or adc pop insl clc loop cmp add bound (bad) mov pop arpl outsb adc fist popa (bad) int3 js add ficoml cmp and xchg out adc push push in mov (bad) stos test test gs sbb mov mov cmp mov and loop ret or jb cli pop jg cmc xor jae (bad) and lcall sbb push and ret es sub jmp es push gs repnz aaa out dec inc es inc adc add add popa jo mov cli push or sahf loop dec xchg cld pop cmp dec imul fisttp or je icebp repnz ds loopne sbb aad push sub popa dec fsubr into lods dec inc push mov cltd lret jp push dec dec les sbb jnp xchg jno sbbl jecxz mov in (bad) in cs rcrb in and and push jno fnstsw sbb addr16 outsb lea xchg mov pop jle arpl repnz lahf fisub jp aas push xchg in cs xor rcrl mov stc outsl loope das mov (bad) jne mov mov aad inc mov pop leave add fst xchg cmpsb repz xor jae pushf out mov into enter pop test or inc mov adc js ss fwait pop mov inc std stos pop mov in jle push xchg arpl ljmp pusha cmpsb aad aad jno jmp or mov loopne (bad) lods push les insb pop loopne,pt out (bad) push jae les inc sub das stc lock push fidivrl mov mov test add addr16 in xchg scas push jo dec jge or ret dec mov mov xchg lds fsubrs es sbb sbb cli or int xor sbb push cwtl mov dec and cmp mov mov mov (bad) xor jg out xlat xchg jl mov jnp mov xchg repnz popf sbb imul and xchg sbb ljmp or mov push (bad) cmpsb xor add sub push sbb insb mov lea push fstpt and addr16 sahf into int3 inc into mov xchg pop add or pop sub ljmp scas lds jno adc or loopne into cmp inc test not pop mov xchg push leave jle cltd inc xchg add pop adc dec stc dec in mov or xor adc stos sub into sbb rcll shr inc mov out rclb or jnp (bad) sub mov adc and subl jns hlt sbb rcpps cs imul jl insl (bad) lock push push mov push xor inc cli mov xchg xchg sahf lea les xor push xor adc adc (bad) mov mov inc lods inc out xchg xor adc mov inc iret popf mov out pop les mov out loope data16 mov gs push adc sub mov mov mov aad outsb and call add cld adc jne ret add mov jp push dec icebp adc push push lret in push int3 mov mov xchg pop cmpl fiaddl scas fisttpll data16 pop out jmp (bad) insb (bad) cmp push jns mov push dec pop cmp scas mov icebp and push inc scas mov (bad) mov fidiv jae in cmp cs mov pop scas enter jle inc inc dec xchg push mov movsl xchg and adc jne push aad mov and dec mov pushf mov leave fwait xor sbb repnz (bad) add jecxz decb sub jbe sub adc inc cs dec enter ljmp jl fsubs mov jle push mov movsl jo inc gs fwait and hlt lahf flds daa outsb xor (bad) je repnz and mov shlb ds rorl mov cmpb lods pop (bad) pusha icebp cwtl mov dec popa addl pop scas jge sti add popa cmc in mov pusha push dec jb movsb add jecxz outsb xchg loope cmp std or bound jl int popf sahf dec dec adc gs push fs jmp pop jge mov xlat push or mov in imul test xor lcall push ja sahf push mov (bad) xor std daa test (bad) xor cmpsb into xchg adc hlt dec push sub inc orl dec js (bad) loopne dec scas or push fwait mov dec fsubs imul pop sub inc sarb stos inc mov xchg mov test mov hlt es loope aaa je js jno jno (bad) jae mov fsub push lods fimul adc jl test mov sub in enter pop movsl jecxz lret ret loop mov sbb push mov lret add repz popa roll sbb mov stos rorb (bad) pop dec pop pop jecxz mov imul pushf inc or shr add idivb cmp jp push mov pop mov push adc lds fisubr in roll dec testl lcall mov push mov hlt test pop lock arpl sbb mov jnp sub inc mov cltd call dec or sbb xor pop xor dec xor fcomp sbb dec cmpsl mov mov lret push add xchg cli and dec cli sub fsubrl mov xchg adc push dec sbb add jo outsl je mov sub mov sti pop xchg xor or imul push sub arpl fldenv jg sbb add inc push or fwait push sbb lret xchg mov daa gs jge in roll xorb jg xlat xchg or cmp bound (bad) scas shlb iret fwait mov pop or push out leave in dec (bad) pusha ret cld mov cmp addr16 mov or cltd adc int3 jp push mov add push adc negl daa cwtl xchg (bad) cld pop insb es cmpsl xor push cmpsb jge out add int3 imul jbe cmp mov inc das loop sbb pop mov push or stos enter sub inc push cli sbb mov rclb (bad) lock cltd sarb xor push test gs sbb scas shrb jns dec sahf shll stos ret push lods cli es mov xchg pop imul inc sub add mov jne xchg (bad) (bad) (bad) sbb push popa je repnz out xchg xor lret or or push dec add cmpsl mov mov and lds (bad) faddl cltd jge pop cmp push lahf adc inc lret popf movsl pop in jbe sbb xchg inc mov scas lcall imul mov pusha dec pop pop faddp fdivs in loop lahf stc xor scas test iret cmp sbb sbb mov xor test (bad) dec inc and cltd push jle inc adc lods fnstcw fistpll jg xlat insb iret out mull xor push dec pop sbb insl sbb or adc push pop xlat add mov rcl test and outsb adc notb out das cmp les mov cltd push es inc sub imul (bad) hlt int fstl cmp inc add movsb mov test sbb fs and outsl dec shlb fidiv mov xlat jl pop (bad) imul pop repz and push popf jge mov (bad) adc xor push (bad) xor ret and out je stos or inc pop ret xor (bad) jae jle imul mov iret jl imul cmp and aas and or test lock test mov lods loop dec gs push mov mov es push xchg imul xchg mov ret cmp outsl sub inc out fistp add fcoms lret mov movsb repnz outsb leave popf pop or inc clc je dec xchg rcl fmull xor inc cmp movsl mov mov scas jns and subb cmp stos xor bound out xchg inc sbb lea ficoml xor mov ficom aas jmp cltd xchg dec (bad) call (bad) (bad) fs fistpll xchg pop (bad) insl push pusha dec lock cmpsb cli jecxz lret inc loopne jno and xlat sbb sbb std pushf mov inc xor jmp insb das push scas jmp xchg js cmpsb cmpsb cli int pop js ja repz push or shlb mov dec loop or dec cmpl add lea push into or mov roll int3 dec addr16 rclb lock test aas lcall ja mov pop rcll sub jne pop pop xlat das jns inc xchg arpl cmpsl repz lret test mov int (bad) jns (bad) fiadd nop bound xor out out sbb dec sub cmp jnp push xor mov jp (bad) mov ss pop aad xorl jns testb addr16 sub add movsb or mov imul sti and inc or jle cld mov inc pop cmp les imul dec xchg and stos nop jle enter cs in stos sub mov pop jb scas mov and (bad) int3 (bad) dec shlb addr16 xchg pop pop mov das mov pusha call (bad) lds data16 rcrl mov jne pop outsl xlat push mov xor mulb mov stos push dec movsb lea jge mov jmp and fild fisttpl rcrb cs push rcl mov lds adc (bad) mov aas jle fisttpll cmp cmp mov lock out jge jl dec nop push cmp sbb scas push es cli in nop xchg xchg movsb test fisubr jne in adc or lahf sbb (bad) fnsave pop cs (bad) xchg sbb inc hlt mov dec ror add adcb pop and jno stc imul dec mov cmpxchg mov mov xor nop mov data16 xchg sti fldcw sub clc cmp sarl xor cs pop cmp lret into (bad) ficompl dec xchg mov pop mov mov or pop adc lret dec mov scas inc lods xchg rcll xlat dec in add adc out push push stos mov jae popf adc ret sbb dec mov inc test adc aas xchg mov xor (bad) mov jns flds ret orl loopne outsl xor (bad) xor dec int je in jns cltd mov jg mov sub dec inc bound pop cmp arpl adc xchg pop push cmp shlb sub sub dec mov lods jg ds ret sub or sbb dec in fldt jne jbe outsb push inc cli rcll xchg dec pop push adc mov in mov pop push cmc or repnz test jnp subb das scas call xchg dec in mov or mov jno dec icebp (bad) xor loope and (bad) sbb xchg mov pusha inc add test mov jne sbb loop ss test cmp fisubr xor imul and adc idivl add sahf mov (bad) mov lcall lret jbe repz mov or cmp pop sub das in xchg dec sub sahf xchg xor xchg and out clc out (bad) and pop inc pop inc jno sarl (bad) lea lahf pop cmc (bad) mov jns or cmp aaa fldl xlat cmp cltd fistpll cmp into inc stos xor lods adc and jae pop mov mov jae popa jnp mov popf cmp outsl in out lods mov mov (bad) mov push xlat ljmp mov xchg mov mov push jbe inc mov xchg inc jl mov scas imulb dec mov mov fmull (bad) mov push jne mov dec inc mov pusha add (bad) fsts inc lods inc xchg mov sbb out sbb push ljmp nop fstpl pop int3 mov xchg xor mov xchg sti cmp add xchg test adc mov mov cld pop outsb sahf movsl lods sub adc stc in push fwait sub scas arpl adc test leave loopne or lods jnp mov mov dec add movlps sbb pop inc test push loopne push test pop push sbb insb xchg clc sub push test jae mov cmp pushf add jb push push mov pop not and aaa std jo test xchg and popf lods lock mov cli outsb mov aam gs aam mov or imul jp xor inc mov push xchg outsb roll dec test lods out mov mov xchg shrl loope and in add pop out sbb iret (bad) mov adc mov or xlat mov sub icebp fcmovnu adc jo test test hlt insb movsb dec xor add add mov add loop aam pop jo dec lret lock int fadds inc shll inc sub jge jg sahf mov pop mov fimull jns mov pop mov sbb jb add dec outsl loopne adc sbb movups jg repnz ret push fsubs and xor and jg mov ja jns push in xlat adc aas cwtl lcall sbb or inc push pop or xor push mov fbld jnp stos hlt mov lcall mov andb and xor imul mov jnp pop popf std and or das mov cltd xchg cld sub es pop iret mov ret bound cmc push jb cmpsl xchg lret cmp sbb jnp add push outsl ss ljmp xor (bad) arpl mov xor add push imul xor fcoms insb and sub cld dec sbb test cmp (bad) (bad) mov inc fsts or les inc sub subl cli das sbb in inc (bad) gs adc sbb cmp fstl add add mov cmp push sub sbb rcr mov push (bad) xor (bad) movsb pushf mov test or pusha pop insl nop pcmpgtb cld call jb add outsl (bad) int3 fistl inc imul push mov test mov push mov adc das nop mov popa lret out lds cmp push push pop sbb mov in call mov gs mov test cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl jle stc xchg or test add add dec inc scas inc pusha (bad) or cmp add add inc dec pop add add add add and 