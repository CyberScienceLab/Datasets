call add mov jmp add or or or add add andl push push push lea push call jl or je push (bad) fldt std je adc aad incb add clc push add or fucomi jle (bad) pop ja sbb jmp mov aas call ds ds jnp push or in inc std ljmp sti and or ret pop ret push mov push cmpl mov pop push movl or sub mov cmpsb push test jne clc push mov pop leave ret imulb jmp adc mov xlat fsubrl pop push mov jmp xor pop pop adc mov mov mov push push dec inc fistpll sub test cld (bad) push mov arpl mov push jle mov divb jge insb pop xchg call xchg dec rorl or cmp mov xor mov mov popa fistpll jnp add (bad) pushl or push notb out or outsl ja (bad) movsb add push push cld sti sub inc (bad) div ljmp cmpl pop je cmpl jbe push enter jmp fstl call add xchg add and jl sub push add psubusb mov pop pop imul add push push imul sarb je cmp jbe jg jmp movzbl xor and or xor rorb cmp jb pop jmp pop push fldl arpl adc mov rcrb mov out inc int std fidiv lods mov das jae sub push (bad) mov push pop add or daa jl and ss ret push ret sahf jle jns lock or in das adc nop jle lea or test movlhps cmp test jno add andl loope dec xor jmp in ss lods jmp jbe and fdiv scas cmp cmpl push fistpll adc sub lea fnsave imul cmp test and add push fdivrp xorl mov adc dec push test lcall sbb mulb push (bad) ja adc adc mov loope (bad) add add mov cmp cmpl popf lods xor nop je mov imul mov add add mov push pop xlat into cwtl adc xchg mov mov lea push and xor dec xchg or fisttpl add adc mov (bad) fsubs add (bad) in jbe sub mov int3 jmp push imul or push push xor pcmpgtb mov fs push test loopne (bad) testl and mov pop xchg mov cmp sbb push or and and cmp cmp out jb fadds pushf xchg ljmp stos add shrl inc pop dec xorl xor xor idivb add es mov mov or cmp test xchg mov gs les or dec mov rolb sbb and lock xor jnp in in outsl or pop stc lret jne push std cld adc push mov test and add and bound imul push sbb test push enter mov sub dec test xor lret pop add hlt fs cwtl cwtl (bad) mov inc repz (bad) xlat inc enter pop inc mov xchg mov mov mov movb call jne cmp imul mov cld pop or sbb lea fidivr mov in xor mov dec mov std adc pop shrl (bad) cmp test rcr out pop push mov mov cmp repz pop mov xor adc add and push xor xor mov mov lods and push push fidivl xor cmp aam lock in test ret data16 push fbstp jne mov lock rorb mov cmc or sbb insb push xchg dec inc push push push mov mov mov sbb sub aaa xchg lods hlt jne cwtl mov cmp xor loopne jbe jne mov outsb mov xor add pop (bad) bound sub sub fcmovne divl inc pop mov dec adc xor xchg fcoml lock fcompl xor jmp dec sub add xor or or and jl sbb jmp mov lcall add fidiv enter daa add inc and jge cwtl jle jle adcl mov jne inc (bad) mov dec cmp in and and cmp mov (bad) js mov je and in inc outsl je jns xchg inc into lret dec or outsl and dec sbb jle add mov push adc jne and outsl sub or inc imul rol lcall mov or fstpt xor lea add sbb dec or or mov xchg pop (bad) faddl mov mov and xor and les syscall sub sbb pop movb add shlb shrb rorl push dec adc or movsb dec dec repnz and and and repnz iret je je mov je sub mov scas test dec adc loope sbb mov inc and or bound rolb insl push add or xor movl add sbb xor and push aam pcmpeqb cs xor xor sarb cmp rcrl cld xor repz neg add das xor lea test clc pop mov adc adc push or pop inc es push clc iret ret ja mov add sub jae lock sbb or movb stos rcll jno out insl lret xor pop push aam xchg sub (bad) jne nop and sub dec adc jne cmp clc add in push imul adc in push movsl or or inc outsb or sbb inc dec (bad) out xchg rolb leave ljmp push rolb push mov andl mov outsb dec inc (bad) jecxz mov xchg mov dec mov sbb rclb cmp mov aaa xlat xchg pop jbe push mov negl pop jmp or or and je,pn and aas icebp mov jne or fdiv lods push mov mov add mov int add stos aas cld rcrl mov sub orl sbb cwtl insl ret cmp enter push or jns mov lret sbb adc push mov popa dec inc dec lock xchg les add pop inc push pusha and imul aam jne outsl jmp prefetch movl inc sbb jecxz sti lea inc sbb mov enter or dec inc xchg mov cltd xchg or or inc insb fstps cltd pusha add decb mov xor and je gs ret pop push xor pop and mov mov aam fstpt push xchg lods add sub (bad) pop orl je pop mov xchg jne ret jmp or clc and jae add rol sub inc sub jg add xchg rolb push mov dec xor rcrb jl cld sub pop mov mov dec jns sbb mov mov mov adc mov inc push repz lea inc out xchg fldt int3 loope fistpll push adc std mov or jo clc daa cmp sti or sbb jae cmp add adc jbe sbb push outsl cmovnp jecxz xor add or push and mov cmpsb add pushf outsb cmp jo pop (bad) xchg loopne adc lea int3 nop add shlb in out push lock add leave dec leave es jnp outsb push adc mov jp jnp popf icebp push dec aas leave (bad) iret nop ret mov push push imul add les jo in lock lret sbb push push subl sub sub add fcomps clc test daa adc add sub test xor lcall inc in insl mov insb gs aad out (bad) fnstsw or hlt repnz push push pushf pop imul mov fistpll (bad) out pop sbb sub inc cmp jmp imul mov in mov mov xor push ret stc fstp pop push je mov xor inc inc cmp clc out jmp jo lea mov inc ja cmp fildl and jne mov and xor call adc (bad) adc pop mov push sbb pushf ds mov sbb and pop xor sub insb cmp adc cmp int sbb xchg call (bad) insl xlat sbb sbb add inc movsb mov fild sub sbb sbb jbe or adc sub mov fildll nop dec sub daa pop insb sub test and push mov mov test (bad) fstpl mov add in xor inc dec pusha jbe arpl jge push adc inc fcom xor pop xchg mov lcall push adc xor inc je movsb frstor mov bound jg xchg xchg bound push clc popa lods fcmovnu push and cmp cmpsb xchg add sub dec fs pop ja ret (bad) sbb cmp dec adc pop je or push into inc ret pop push int (bad) es adc lret push mov pop ret mov jge xor nop (bad) loopne fistp cmp lods sub je xchg pop mov xchg inc imul dec mov cmp or int dec (bad) xchg pop loopne jb push stos jae adc sbb cmp add xchg xchg xchg sbb sub clc mov insl fcomps fidiv inc lret mov inc clc cmp scas in mov cmp std (bad) and adc (bad) jae mov mov jmp or or rcll sub lods cs hlt std or pop sbb roll sbbl loope pop cld leave pop mov cmp or out and cmp dec ja iret pop lret sub adc call cmpsl xor popf sbb xchg add mov pop aas xchg cwtl setl jbe fcomps mov loopne std pushaw movzwl shl (bad) xor out and shrb sbb add notl ret aas pop ret leave mov lcall aad test bound pusha push jg insl sub add cmp push lret ret (bad) fisttpll pop sub bound and add repz imul packssdw jle add or mov (bad) lods sbb adc fisttp pop mov mov sbb fsubr pop dec call jl mov (bad) xor (bad) or fbstp lea pop cli es xor ljmp push test in popa mov ja hlt or xchg xchg jb je lea jne roll mov dec scas rcrl pusha jne jbe sbb mov mov mov hlt push imul inc xchg pop mov push inc or clc sub mov es test adc adc test add xchg hlt popa mov (bad) clc pop je adc aas in das cmc mov cmp sub jne push cld test jle pop fcoml lods (bad) jle movzbl inc cmp inc adc dec xor leave inc cmp es lgs je sbb nop jg lea add mov inc cmp jl mov adcl (bad) jge add cmp pop dec push mov aaa ficompl add movb mov ljmp mov cmp je inc add cmp jl jmp sbb cld jl mov pop pop js fs lds ljmp pop jo or jmp push xchg lea ret jo test push sbb lods adc sub (bad) or push in xor inc jne mov lods sbb xchg pop out aaa in mov mov out or lds jo add lea sbb data16 sbb mov cmp jl outsb adc test push push add decl mov push nop lret jle inc stc add cmp (bad) clc movsl jne fs pop idiv mov mov fisttp lea sbb insb xor andl xchg fnsave mov mov pop adc cmp pop cld fldl jl sbb inc cmc nop sahf jo das aad jl jg xchg pop mov popf sub imul adc sbb subl push cmpsb add test loope xor sub insl lret pop lds push jb xchg pop jecxz call (bad) pushl call pop mov loopne push nop inc lods xor cli mov mov xor mov (bad) mul mov or loopw (bad) sub sbb sub js mov sbb and sbb jecxz adc pop or mov mov inc dec ljmp pop push movsb and ljmp or (bad) pop ja pop and sub adc cmp jne sub hlt inc inc inc mov push mov mov xchg cmp add rcll cltd jb adc decl sbb cmp cmp lcall loop mov in test sahf (bad) jmp jg mov fsubp mov daa sbb pop pop ret test push jne pop dec sahf shll jae in jge cld or pop xor jmp dec mov dec inc add and in xor pop imul dec adc subl es leave mov xchg xchg mov pusha pushf out push lods and insb inc jg sbb addl cmp stos push jp pop xor mov sahf adc call das insb jge xchg xchg nop movsb add adc mov cmp mov lds nop jmp adc push fistp lahf add dec movsb jge jnp aam sahf test push sti mov and xchg add orl xchg inc sets pop popf fcmovnb adc push mov and (bad) adcb push movl cmp cmp sbb nop mov enter jbe jo xor ds fmuls push call cmp mov ret jne jmp adc cmpsb je cmp mov jmp push sbb scas sbb adc clc or or xor rclb jb sub mov imul pop jmp sub fdivl dec je add shrb out imulb lock or test dec or adc pop inc mov inc repnz push insl sub loopne lahf cmp pop lds nop mov lahf (bad) incl pushf sub mov rolb and pusha cwtl lea inc mov (bad) mov mov mov mov xchg les jne (bad) les call idiv cld push adc neg sbb and cmp or push faddl mov push mov pop push mov jnp leave pusha and lods aad sbb (bad) loop (bad) mov mov ja icebp cmpsb cmp stc andw push pusha push adc or lock (bad) fisubrl das insb sbb andl mov ja std in push or pop je cmp jae adc jl cmpl and in fs push dec pop push or and and or loope xor or (bad) and popa cmp dec or fldt inc call push adc cmp cmp (bad) dec pop in xchg or push inc sub adc add fwait ret hlt pop cmc lret or hlt popa fiaddl and xchg adcl pushf push sysret or lock add movsb push mov movsb add push or fbld js mov mov pop sbb adc movsb rorb (bad) push pop or ret movsb and and or push add test push add sbbl (bad) jle pop xor mov decl mov pushf or inc push dec dec jo or sahf addr16 inc xor adc cmpsb xor sbb and dec push or test mov or call repz (bad) mov push jne bound pop out push xchg mov xlat out test lds lret and lahf shrb add inc int3 push pop inc push xchg xor mov cmpsl pushf inc push or adc or popa push popf movsl sbb or in insl arpl lret orl jl fcoml fsubrs jmp xor mov cmpsl xchg push popf sti scas js and out push xor js adc (bad) stos inc jns push aas inc and jge push lea stc je sbb mov sti (bad) cli sbb jl movb and sbb dec sub mov mov mov outsl loope rcll jge cmp push dec aad cwtl sbb (bad) idivb insb sarl ljmp divb xor jbe jecxz and sub push rcr mov inc mov mov mov push (bad) fcmove or dec stos out mov jp test and push push or in decl icebp push (bad) enter pusha push cmpxchg cs jmp dec adc push pop sbb in jmp add sub push push pushw ret in push pop push pop add adc push adc add push or fisttpl pop add xor roll cli pop sub inc and clc ss mov mov roll mov sbb mov inc or les lock js,pn lods sbb push lret push fs add lea inc and add mov push xor lahf les shlb xchg in pop aam (bad) xlat fdivs mov (bad) add in mov push push mov cmpl xchg test push mov sbbb sahf and pop jl mov or je jbe inc addl out insb rcl xchg adc add push push ret sbb pop or les or mov add fimul add cmpsb mov adc mov adc sbb dec loopne push (bad) in xchg fwait out jmp in push sub push insb insb push loopne dec cld xlat cmp fcoms mov jbe lea outsl mov scas lds pop leave test push sub cmp and push sbb sti push sub xchg or mov or push mov dec push jne cmp adc outsb shrb xor mov insl lea inc ja jnp insl push adc sub xor pop inc and sbb mov mov rclb dec movl push cli (bad) out enter insb xor and loopne fdivs push cmp mov sbb or jae mov jno inc or int3 push sbb and lock add or je adc sub or sbb mov xchg leave dec cwtl or cmpl mov dec lock add pop jg inc jl and pushf jg flds jp xchg push or (bad) je xor mov scas cld inc hlt cmpsl popf out mov lock ljmp test adc mov cmp movsb jg ret insb mov clc sbb pop sbb push movsl mov mov (bad) or mov pop sarb ficompl push in push mov pop add outsb xchg mov ds (bad) in ja das ds lea push pop push test add fisubr lods xchg add cmp rorl (bad) fisttpl jo push and mov sbb into fsubrs fcoms pop sub jge je jl test sub mov ja inc push ja and inc add cmpl pop in inc cs fs lcall out insl outsl sub lock jmp sub fs cwtl mov rolb lods add iret fsubrs or xor ret mov jmp je jmp or test adc jp or scas push dec (bad) lock jp,pt push mov jno sub dec inc sub or mov mov in mov jmp sbb out dec or cmp push (bad) adc xchg mov lcall ret setns lret cld das jne sar inc shl sbb scas or enter push jne mov lea sarb add xor inc cmp les lock or fcoml mov add pop mov sahf cwtl or sbb or lcall ret pop pop pavgb cmp scas pop js mov and ret xchg push add leave jno jnp pop insl imul dec sub mov cwtl movsb sub mov mov adc les xor test mov adc bound fiadd outsb push inc sbb add arpl lcall cmp sarb mov add add mov sbb shrb mov repz and imul jge ja jb cmp jae dec out out xchg or or dec and divl mov sbb xor and int3 push push scas fcmovb ds add push hlt stos push arpl pop push adc scas sti inc setae pop cmp scas jp jbe ret out fidiv sub xor jne sbb jne ds xor mov inc out lahf out insl bound mov jne mov ret xchg sbb aam cmp jl push outsb mov roll mov xor popa ret cs js into mov pop sub movsl fsub mov lock mov and pop cmp incl xor or js inc inc add fwait mov pop cmp add bound jbe mov pop jbe (bad) mov nop lret or push mov cmpsl inc in adc jne xchg addb in push mov pop inc hlt cmp inc sahf test jmp mov sti mov push imul mov je dec xor mov mov push adc ret leave sbb mov fs in lret pop adc cmp and scas dec (bad) mov sub mov addb mov push hlt rcrb (bad) push or push jmp test enter jne xor jae mov adc out mov cpuid sbb and ret (bad) mov push cwtl sbb sbb in test inc add arpl sti xor xchg sub xchg in movsb sub sub cwtl test jmp bound cmpsb mov adcl adc mov or pop push mov xor (bad) sbb push xor push add sbbb pop push insl mov lret shrl je add mov jl je incl shlb pushf cmp enter insb and stos movsb or test cs and adc adcb push clc cmpsl (bad) call mov out inc mov jge mov cmp xchg add pusha adc sarl pop and fstpt ret lea inc cmp xchg or add pop repz mov mov adc hlt lods adc ljmp rolb jae in push sub jns (bad) push decl inc iret js and push jbe fwait adc push lock aaa sub mov in (bad) btc cmp sbb push test (bad) shll (bad) outsl imul pop adc sub cwtl aaa cmpsl add pop or xor inc ds or sbb jo cli sbb add mov or mov cld adc xor mov push sbb pop mov into push push pop pop pop std fsubrs js loopne enter and or sbb push pusha (bad) mov lock pop sbb jmp cmp mov cmp imul mov jnp cmpl or mov inc add pop or pop dec and push insl orb mov pop add fidivl rol sarb ljmp (bad) cmp xchg push cmpsb movsb pop sub mov leave adc loopne sbb push or clc mov fisubl mov clc or add lahf pop mov incb sbb jmp test pop fildl push ss or adc sub roll dec cmp fidiv jmp mov hlt lods int3 jo inc lods pop sub cmp inc sub call mov or (bad) mov fnstenv xlat pop inc mov jne inc sub sub fildl and nop mov push cmp mov test jne lea push pop mov fwait xchg fs mov mov bound test and mov sbbb sub dec clc jne and mov sbb insb mov sbb arpl mov inc test mov and push pop sbb sub mov test mov xor sbb (bad) ss pop cli push test repnz (bad) dec clc cmp out push push sbb lock or xchg jb add les inc jb clc sub add or mov rcll sbb cmp and sbb les mov das je mov pop pop aas int shl mov shrl jmp add jbe add adc rclb inc inc cmp push (bad) adc lret leave jge push lea enter daa xor test mov pop loopne jbe cmp pushf (bad) or lea or push adc mov lea aas cmp add mov data16 jo jg aaa push mov and cmpb sbb inc mov cmp pop dec sbb (bad) pushl mov add sbb ficomp notb out mov inc (bad) fucomp mov and inc push dec cs mov (bad) imul clc data16 jge inc sbb ss and leave sbb adc push or jl push sbb out call or push push add dec pop mov jmp (bad) or and rcll rcll inc dec sbb mov fstpt cmp pop mov (bad) pop inc bound sbb pop and jo (bad) cmp icebp push (bad) jno int test push testl test xor mov mov mov mov jge mov fld inc or cmp mov pop add jg pop mov dec adc (bad) outsl rcll neg sbb push not and sar adc incb push cmp jne add adc leave ss scas in bt push sbb (bad) xchg cli adc jo aas rolb and adc push push add push das rolb fwait loope xchg mov fcomp (bad) or cli dec cld inc add sub xchg ret dec mov repnz outsl sbb push stc or dec dec pop loope mov cmp sub or aaa jp fild sub xor pop pop clc and inc sbbb push pusha movl cs outsl sbb mov xchg jbe mov jmp jbe xor mov and test inc (bad) fsts add mov leave mov data16 mov or mov add push inc add jae idiv loopne add div test je movl (bad) daa dec pop pop xor shll int aam jge pop add js lods jle mov push push ljmp push cmp add inc ret outsb pop add sub add data16 xchg and dec inc add mov (bad) call adc mov pop dec or or or cwtl cmp or (bad) pop jae in loope fadd loope pop jo out mov or cmp cmp insl pop mov aaa loop lret or mov or or je xor xor xor mov mov xor loope inc push test inc fs (bad) mov inc mov or mov je push cmp push sbb insb movl test dec inc xor (bad) jo dec adc cmp enter add rolb mov lods nop adc (bad) outsl mov insl dec xor push js mov (bad) popa push adc or lcall ljmp add or sbb pop push data16 push mov data16 add add mov sbb mov adc rcr loopne dec inc pop mov lret fldcw shrb lods add movsl mov fiaddl rep push sub jbe mov jno repnz pop adc jle mov adc sub or jno pop sub pop mov adc clc jne clc pop sub pop das scas mov mov sti (bad) jae fmuls insb and inc insb lds push inc insb insb sbb outsb fsubr push adc add stos xor fs fistpl loopne or push lret cld jg lea je cmp jb sub nop fs adc mov test xor mov add pushf bound mov fs and or in mov mov pop mov dec mov sub sub (bad) arpl nop pop mov dec inc rol push push cmp mov push lea dec push dec xor lock mov fwait sti pop xchg dec std add xchg ret pusha push jg sub xor xchg rorb (bad) or and adc leave call jo int3 pop and cmp pop push inc popa or lock xchg and inc (bad) push xor dec insb push inc lods lods adc lods movsb xchg jno shr mov cltd inc orb pop mov push jg cmc mov cli or (bad) jb mov in (bad) jnp mov mov lea or jae es inc push sub sub mov inc mov dec cmp lds adc or sub mov cmp jb adc dec enter mov jne xor cmc pop push add aas dec outsb inc sub je stos push dec mov faddl dec inc cld adc ja stos popf enter or add pop fldt int mov mov jg jnp movsl adc xor adc ds mov (bad) mov inc add in mov rolb xchg jge inc (bad) or (bad) hlt fdivrs fsts fnstcw push add ret mov xchg lock mov in xchg cs push shr xor pop test push or pop mov jle push jno out cmp mov andl pop dec jb and pop dec push mov xor sbb or dec or and push push inc or jo jae es cmp ret lea or inc cmp mov or nop rcrl daa lock mull bound cmpb mov callw mov pop and ss notb pushf mov fnsave sub sub mov in cmpsl das shlb nop daa add xor and and cmp inc mov push cmp negl imul fmuls je insl addr16 adc call mov mov adc aaa xchg push lcall mov js lea out pop enter movsl dec test cmp rcl sbb lock ret inc aaa or add push shl ds pop xchg add dec inc dec inc (bad) ss (bad) jo inc push inc add lret mov out dec jne pop dec jmp ja lret inc jecxz inc jp cmp pop lods mov mov dec mov adc outsb test or push mov data16 pop inc dec (bad) add nop aad add adc sbb push and std lods mov bound jmp test dec mov sti adc mov jmp lcall pop gs xchg xchg je stos imul sbb aad adc fwait cmc loopne push ja push loope pop pop ret mov rcl das pop jecxz pop adc fwait pop sub in adc pop ret insb mov inc je push mov dec ret mov lods xlat test rcll sbb add sub add or std adc data16 push sub lea dec mov adc push nop xchg test jb jno roll xor jne cmpsl jbe add xor insl jge inc add cmp push movsl dec inc cmp popa sti cmp or lea cmp inc cmp dec incb inc nop ret fidiv add or inc push cmp xor pop outsl xor nop push or jg notl mov mov in rcr ret cmp jle mov mov imul jge xchg or aam fistpl or fcoms inc mov (bad) xor mov mov jnp xor movsb test push and call jne inc lret jnp mov mov or push xor or xchg scas in movsl sbb dec add mov ret movsl fsubrs pop add push jmp fstpl inc pop mov je js loop jae mov cmp popf cmc add scas cwtl or stos push add cmp lea jo test xor std out cmc ja mov mov xlat movsb mov std lcall push push push dec stc sbb xor sbbb insb mov sbb (bad) (bad) mov sub (bad) enter adc stos loopne or pop cwtl xor and test cwtl cmp outsb xlat test push jne nopl pusha pop test dec bound mov push sub ret stos jo push sbb cmp push cltd sbb inc push mov mov test mov add sub leave inc enter adc xor xchg xchg adc lahf (bad) jne adc push inc dec mov push pusha pop push inc dec out mov pop ret inc dec sbb data16 je dec shld adc sbb add cwtl popf sbb rorl and inc inc mov js jg or add sahf adc rolb sbb fwait pop and adc lcall sub mov adc add xor push adc fisttpl fdivs add sub (bad) sbb cmpl fidivrl fsubrs jg sub sub push and xchg xor sbb inc fwait adc push fmuls lcall add ljmp inc xor adcb xchg sub imull push arpl ss add mov sub jge or in add jmp nop stos sbb divb shrb inc sbb sub dec pop ja inc fildll push push push les xor xchg out int3 push mov ja sub cmp imul push inc mov and inc out cmp mov push imul mov out mov push mov push jo adc dec jmp int or sub push addl lods or inc rorb je sbb jae loopne pop out into std addl movd xchg aad loop lds out mov repnz xor into jmp jp inc jnp mov call rolb outsl sbb arpl in sti dec push add inc int pop shr shr sub add aas lret push scas (bad) mov push lea push or cld push outsb mov sbb pop and sahf cmp or push or dec push inc jns sub jl xchg das pop push outsb push nop add inc pop adc icebp jbe fdivp mov in and fdivp outsb pop (bad) cli inc fadds idivl mov dec jmp sahf lret repz daa popa jb mov mov mov push ljmp add cmp negl imul int3 dec sub data16 (bad) lock add fadds inc push test sub leave jge adc inc cmp jne or jae cmp mov mov mov push jg jbe push jno lock test pop push push push mov and mov (bad) mov fcomp mov lret ss cmp movsb jne push fs enter cmp repnz cs xchg or pop and pushf push and push cmp loope lods jnp mov add popf mov mov stos pop mov sbb push (bad) inc push loope ret loope sub dec xchg inc push sub add add sbb xchg push jae mov test lahf dec or xchg and out push aas pop insl insl sub mov xchg pop mov cmc jg fnsave loopne cmp dec mov push sbb and or outsb clc mov inc or pop out and push movl js xchg adc mov or outsb push jl cmpsl (bad) mov (bad) push lcall sahf mov arpl lret mov fbld push (bad) or mov fsubrl dec or sbb inc clc divl xlat add jo jb xor adc sub sub mov and or push lea inc adc xchg pop cs push movl add pushf or pushf pop fadds add xchg xor mov (bad) test inc enter cmp repnz pop jae divb lock sbb add mov mov sub incb sub mov cs mov test xlat ljmp int3 clc adc sub mov mov inc cmp and icebp fsub mov lea jo into jne pop ljmp rorb nop ret outsb (bad) jae sahf adc inc jb,pt (bad) idiv fnstsw or scas and add push adc mov inc loop pop in cmp pop dec and mov popa outsb xchg pop cmp and scas (bad) sti mov ret cs mov cld xchg mov sahf jmp ja adc sbb lcall and (bad) jne add fcoms push inc lea sub mov sbb mov push add test fstl inc or inc ja repnz sbb cmp add xchg sub dec xchg adc mov cmp aam mov loopne shll scas jnp mov mov mov xor sub mov dec lods mov roll sbb adc roll jae sub cmpsb push das scas les dec sbb jo sbb pop dec and aad cmp sbb or fsubrs push mov fldt iret mov mov lret hlt dec push push js dec loopne mov mov mov add ret fsubrl inc es iret inc pop mov push cmp sbb sbb (bad) std leave outsl sbb or adc dec dec sbb popa mov xchg cmp ljmp dec leave xor inc add decl ljmp outsl insl xchg inc test push inc sbb orl dec xchg ja dec or inc inc sbb dec and cmp shll dec sbb add push push enter iret fimul adc inc das mov dec jbe mov add mov adc dec push push push push adc jnp pop cmpl adc lods pop roll mov jg test ss mov push mov rcrl iret cwtl dec or sbb push xchg dec push lods in lock aam into imul cmc push push pop push or or ja inc cmp rolb or imul dec pop sbb stos inc mov and xor xchg shlb movl inc pop scas sbb dec and scas jl xchg ljmp push mov adc test inc in sbb enter dec mov xchg dec push sub sub xchg (bad) stos and adc or pop mov aas int3 pusha dec xor inc call push pushf (bad) je fcmovu xorl adc jg ljmp or out test or lds imul stos inc aaa lds (bad) mov xchg lods and dec scas test test push inc dec mov or mov dec inc lea les mov arpl sub mov add cmp lret lcall pop push pusha rolb or sbb mov ds sub mov test push push add or and shr or into out jle add fsubrs addl xchg push push cmp stos adc or fdivr fistpl xsave cli aad fcmovb loop push mov lea cmp aaa or add repnz nop inc hlt cmc mul nop inc push idiv stc nop inc push cmp sti cld jbe cmp std (bad) incl adc lret xchg insl scas jle adc dec ffreep out mov rorl cmp pop fdivl div icebp mov xchg or inc mov pop rcrb roll mov orb mov add ja mov push dec out inc mov ficoml or add jne push jp out xor adc pop or mov test in or mov dec jg test test fldl xchg jle lds repnz outsl aad out push or adc cwtl or jno mov or adc mov mov dec adc inc out pop clc fistpl mov sub pop shr (bad) xrelease pop pop popf nop inc jmp popa and push add jl (bad) into push push sbb cs loopne les jb lea sub xchg cmpsb out jg jl jle cmpb jne push daa ja neg adc add xchg aas push pcmpgtb ret mov in mov test mov sti or mov jmp pop jmp jecxz fisub rcl lea cli ja mov je loop push push push inc popa mov imul mov cs scas sbb aaa mov xor pop test lock xchg xor xchg gs sahf adc mov imul cmp pop xchg aaa mov sub push push cmp xor xor enter lahf xor xor adc loopne xchg clc out and jae add ret bound push enter shl cmp in out or or inc mov out or inc mov mov (bad) sahf inc dec mov lret ret sahf xchg pop and loop (bad) adc cld rorl pop inc push mov imul lea push push pop jo popa stos xchg popa sbb addr16 popa pushl or addl pop add adcb int cmp adc cmp test push adc insb mov xchg add jle mov sbb add cmp inc arpl cltd movb test mov loopne mov sarl lock or std add inc mov (bad) and mov jnp test push and adc push leave bound pop dec or fidivr in push lahf call sub mov sar cmp jl push cmp jbe int3 dec adc mov xchg push imul pop loop add xchg mov push sahf mov mov mov ret lods std pop in mov sahf or cld sub mov adc cmp div add push loop mov push cmp jb inc mov inc mov adc mov xchg fldz int aaa dec scas add add and sahf dec je lcall add lea add dec cmpsl mov and mov cmp sbb aas fmuls push push mov insb out sarl nop insl sbb pop sub mov mov rorb gs jns pop fadds popa mov add cmp jb clc or xchg out pushf sub ja inc cmpsl cmp and rclb sub jbe inc clc push jo lret mov mov mov sbb nop mov sbb mov dec dec out rcrb sbb loop add lock mov push push stos mov and pop xor loope mov mov das cmc adc stos mov sbb mov mov inc cmp push mov push clc mov push ret adc rolb push jb mov in in fcmovb or inc cmp push mov jle insl lds push jl push notl cmp jg xchg and jnp inc mov jl stc sub adc mov mov and push jbe (bad) mov xchg dec add jbe inc lea pop sub sub (bad) dec loope sub mov sub add add stos or cmp cmpsl inc shrb mov push pop jne dec fistpl push jmp (bad) mulb ss adc push std in sub inc jg test mov call mov mov adc xchg je sbb xchg dec orl ljmp repz cmp (bad) in push js fsubr sub or iret call fdivs (bad) or ds dec jne and push jae mov jge orb lea and mov add cmp pusha push mov pop das jno fildl clc shl mov outsl or jne popaw jl in jmp inc sub js rorl leave je pop imul push fwait adc sub bound jg orl notb sbb and scas (bad) or xchg js cltd or push scas jmp cmpsb and dec sub adc sub dec mov push jo out jle xchg jbe adc dec sub out add es inc adc roll fsubs mov add sub decl sti sti aad jbe add or and shll mov stos mov adc cld lock pop lea mov add inc sbb ljmp pop (bad) je cmp jge add push outsb sub push add je mov mov adc or testl cwtl movsb sti gs or jmp cmp clts ret cvttps2pi lds test mov pop pop pop add inc inc cld pop push mov fwait push jle add adc xchg adc fadd xchg or jle lea xchg cmp sbb mov mov xchg pop pop sbb add xchg add mov inc xorb mov adc outsl adc jle and call into scas nop sub add xor loope arpl jle insb sbb subl test pop sbb and xor xchg lds mov sbb dec nop insl mov fisubl adc sbb and push cmp arpl popa mov cmpb add pop adcl cmp insl jmp inc dec pop cmp ja sbb push clc jge cmp pusha in cmp xchg mov es fstpt cmp fimull ds xchg dec es adc mov lods and mov push pop repnz or mov iret fiaddl sub test or push jb push xchg mov (bad) mov out add mov jmp xchg fwait and mov insb add mov into test add push sbb popf or rol push jle ret and pusha rclb xchg repnz add pop xchg add loope call aad cli or add mov push mov mov xor add mov push mov adc or fistp pop jp add adc ja mov sarl xchg add jecxz sub lcall and and sbb jmp xchg mov pop ret cwtl outsl push sbb test imul and adc lret add fsubs mov mov inc int push mov xchg add mov sbb in inc leave je inc (bad) shl das nop shl sbb or mov loope lret test out cwtl cmp sub inc pop arpl xchg add fnstenv adc lcall add popf cld stos mov push sbb int jno push dec fadds popa lds test loopne pusha inc mov dec rclb mov inc aam and jae pop mov cmpsb cwtl loope and jge or mov scas lret jo arpl in jo imul loopne xor mov xor xchg or add mov adc cmp fidivl scas or hlt pusha dec cmp adc dec cmp fidiv fistp int or pop push cltd enter jp mov add pop sbb mov push popf (bad) fidivl inc mov mov sbb les rcrb je dec ja xor repnz mov loopne xor pop push fsubl mov push stos shr xchg stos mov es pop lret push xor adc js nop adc or mov shr inc (bad) out fsubrs inc pusha add jmp pop mov sub cmp sbb mov test pop lods inc pop movb mov dec jne push sbb mull std cmp pop pop jge mov sub (bad) mov add and out add xlat pop setbe mov pop pusha mov call roll inc push ljmp roll mov dec in lock pop ret mov mov jg jle cmp jo xor add mov jnp les push xchg sarl adc xor sub adc subb inc pop jl orl ret movl movsl mov push stos fild inc not aad out dec (bad) adc not push inc mov dec or dec mov dec cmp pop lea push dec mov cld in or dec mov pop ret cmc mov or adc sbb das dec sub push and je mov push mov fstl cltd (bad) movl xchg outsl dec sbb mov pop and mov push mov add es pop adc dec adc jns ret sbb cmp add adc jb inc mov add jle mov subl sub stos fstpl mov xchg mov in pop stos xor lds add xor xor xchg adc ss popa push lods inc mov out inc adc and cmp das inc loop cmp shlb inc arpl add in pusha shrl outsb dec sbb sub cmpsl add aaa cmp loopne jo cmp sub add cmpsb xchg lret mov xchg pop pusha pop push inc (bad) ret mov add rcrb aaa pop sub cmp or jg mov ficompl leave push mov and stos sbb adc shrl (bad) in pusha mov (bad) (bad) bound sbb loope movsb test flds xor inc jne cmp fstl lea dec pop insb test repz or dec push mov add inc pop push in sbb out adc nop inc fdivrs sbb add adc sub adc ds mov or add mov and mov sub sbb pop add add inc fsubs mov and push pop and mov cmp pop pop aad jnp jb cltd decl loop sbb test inc sub sbb and ss xor adc dec mov or outsl arpl mov add lods jl cmp nop xor mov inc mov or mov sbb adc sub pushf cmpsb xchg adc sub or in mov mov pop pop sbb pop arpl (bad) add push or add in andl dec or mov (bad) ffreep stos add ret inc xor push scas dec adc sbb aaa inc mov adc nop mov mov icebp adc inc dec int3 inc mov jo mov aas add push push dec push dec das push inc add in mov dec mov mov cmp sti pop jbe cmp mov negl loope dec fs mov jle xor int cmp add lahf or push enter sub scas mov add enter and call mov in lods inc rclb mov aad cs mov lea out pop nop or lock addr16 inc add push mov lock and les push push (bad) fimul cli enter pusha jle xchg loopne push fcomps jne jb and adc xchg push xor (bad) fiadd mov push and push inc pop push jnp adc adc cs pop xor mov jnp push mov cmp mov icebp fcmovne pop dec push sti je cmpl int3 add je or pop pop sub push mov jp mov add mov inc xor (bad) xor shrl push add pusha fs xor shrl jo js jnp inc jl and push test in mov inc (bad) test add mov jne cmp xlat frstor pop jge test out or mov push add js bound int3 lea pop mov mov cmp dec rcr subb jbe mov lods jmp push loopne xchg jno test jbe jne,pt dec sub add cmp mov jnp cmp jbe add pushf sub mov adc xor push in push (bad) test repnz movsl or movsb or dec add add jns mov mov sub aaa negl xchg fildl dec sbb dec in sbb loopne jle jne fstpl mov iret mov je adc aam sbb sbb mov xor jb (bad) adc sbb ja inc cmp jb sbb xchg or cltd dec inc mov outsb std mov mov sbb push aam test add (bad) cltd add add (bad) sbb call push add jmp call and inc lds or sub mov pusha inc sbb adc dec inc inc pop sbb das dec add inc add loopne imul dec cmp fs sub xchg xor adc sub popa push pop mov (bad) jle loope andl lds in fstpl pop sub adc mov push lea shrl ror push int sti add mov mov xchg and in (bad) lea xor (bad) mov je sbb testl cltd lret push xchg dec push and insl mov xor (bad) sti mov mov push mov cmp lock cmp jecxz je jmp cmpsb pop add adc lods mov sbb rorl mov xchg insl pop movb mov push shr mov scas fnstsw js icebp jae mov mov xor mov jbe and shl mov jae mov outsl push inc sub or xor and push enter and xchg mov lret mov jne push idivb and sbb aaa sub lea loope sub test cmp or clc shr pop jne cmp adc mov lea dec dec and (bad) je repnz sub sub orl jne jecxz test std rcll dec fsubl and ja or and add sbb mov mov add push adc adc fmuls cltd lods in cli or jb adc subb push jo sub inc sub cmp xchg sub call and je jne jbe,pt cmp fdivs sbb push sti xchg (bad) pushl pop lret sbb add andb mov adc add fisttp cmp mov mov adc fiadd sti add or push push dec jne daa idivl cmp pusha adc pop (bad) mov inc aad dec sub inc sbb and jb hlt push mov sti jne sti enter repz je push and mov add jge push pop push sub jnp into inc push sub sbb pusha adc sbb or dec jne mov mov xlat movl or inc sahf adc add mov push or and fucomi jo std in jbe jbe adc mov adc popa call (bad) xchg adc or movsl sub add mov inc cmp mov dec cmp in rorl ja mov aam call in hlt mov pop dec sub hlt pop jo std mov in push inc xor add push enter mov jne insl or out xchg xchg sub bound xor (bad) rorl mov sub or daa xchg mov cmp jb mov cmp inc adc xor pop mov nop/reserved jnp pop cs inc jge and xor jge lock push inc sbb (bad) xchg jae sub dec test jmp mov iret iret sbb sub inc sub mov push test push and sub mov push bound jbe or loop fdivrs mov xor lret loopne rcrb lea add in lahf (bad) imul xor shr sub out test jne add jle add dec jnp popf jle push in negb ss cmp pop mov jecxz add pop out dec add lods imul xchg movsl lret push dec jb and movsl or xor xor add mov es in arpl pushf std sti inc cmp jg fimull xorl add mov fmull cmc xor jns jae mov pushf sub add idiv (bad) fimul jb mov out cmp jbe sub mov mov inc inc dec jne dec mov addr16 jbe,pn cmovns push push lods adc (bad) mov adc dec cs sbb and mov push inc pop push cmp push jp cmp adc test mov lock mov pop sub mov jbe or mov mov fildl fadd fcmovnu jae push mov dec or jmp lea sub fwait inc or mov rorl pop dec add das push shll pop ret add fnsetpm(287 jb mov enter out cmc stc fcomp ss push inc mov dec mov push sub les data16 insb inc and push add mov push pop dec jae movsl xchg push (bad) mov sar pusha ja movsb xchg cmp cmp in add out out call pop pop xchg pop gs sbb add cmpsl pushl pusha and test sub and add lret test add or loopne enter mov aas adc outsl mov sahf sub add rorl decl mov add (bad) lret dec xor dec sub mov arpl or fisubrl and ja inc sti jae add fadd xor rcl enter cmpsb jmp inc (bad) in call lcall lea cld cld push ffreep jle lea push sbb ret xlat je sub inc inc leave xchg pusha mov mov cwtl and mov leave and jl cld test iret outsb jnp std jecxz ja mov cmp stc sub das repnz lahf sub mov fadds add test or add outsl push out cmp out mov lea (bad) loopne and (bad) or subb daa and insb mov mov push jmp pop push push pop add lcall (bad) in xor imul sbb sbb xor adc adc or or xor or fwait cmpsb jmp pop and add add fsubl mov fs inc add and (bad) mov dec mov mov imul dec fcomps push adc fdivs mov outsb inc inc jb mov cmc popl pop mov jl mov xchg ror out dec je rep pop or mov mov out ret je ficom call mov in pop jo sub sub (bad) xor (bad) insl fildll fimul jle push sbb cmpsl test cmp pop jae mov cli push leave jmp adc sbb iret cmp or sti mov sar cmp push add ja mov mov pop jmp xchg push neg outsb or and cmpsb repnz pusha inc das jne jg insb hlt push pop pop xor push pop les stos inc add xchg push rorl pusha xchg jbe push push mov std jle or sub inc (bad) xor pop jno jmp dec cmp andl pusha cmc cwtl push mov inc outsb and lcall push adc mov xor mov div cwtl sub adc xor lods inc aas mov sub inc or int3 or or (bad) mov aas movl movsb sub rcrl mov dec push clc inc push inc sbb jae add add pop or pop sbb ret jp inc scas add jno add fisttp mov arpl adc sub movb dec sbb sbb aaa stos dec insb mov add ret push cmp add jge stc cmpsb dec jo pop fnsave inc in daa mov add add mov pop or (bad) sti testb jne adcl mov pop push lds dec sbb bound arpl rorb imul inc fdivr cmp jae mov cmpl test add movsb mov loope adc mov push adc faddl dec movups sbb sub jge push std mov adc or mov push xor loope lea or outsb push fimull adc jecxz add inc incb lods adc lea sub cld imul push mov data16 push jge clc push dec dec cld push (bad) jo sbb mov les in push gs fwait jne sahf cmpl or clc or cmpsb dec xchg mov das lock mov adc sbb ret mov inc stc and lret pusha nop or xchg and jo loopne jb in clc movsl jne test js add pushf add roll pop (bad) cmpsb ss push and inc xor xlat or sarb test cwtl fistpll fiadd insb inc hlt cld andb add cmpsl out fbld test test cmpsl (bad) jne or mov and fild jns test xor xor xlat push cmp inc dec push pop mov mov ja fbld jne and mov inc fist sub push add pop cwtl shrl mov or or rcrl xor imul daa mov add or mov push add ret sub and adc adc push add xor test lcall xchg cmc (bad) sti sbb add dec gs sub push in jno pop pop mov loopne or in jg push dec aas mov inc xorl add stos mov sar pop adc push cmp jl decl js pop pop xchg mov jmp sub in mov xorl mov pop adc jl pop in mov setge dec dec mov jo push adc cmp insl mov add pop sbb adc add loopne sahf jge xchg push sbb cmp jno pop jne mov push push inc pusha jmp dec push and mov pop mov je push jbe int3 cmp icebp add add rol push sub nop mov les call rcll sbb rclb sbb adc jne push call pushf xchg mov push sbb fimull sub push dec fild or fmuls in ret mov add mov (bad) or daa jecxz roll push fdiv xor (bad) mov xchg add test dec inc out jl sbb sbb sbb push xchg mov add (bad) mov jbe mov pop aam outsb sbb push push sub dec sub mov divb fs rcrb insb aaa add jae notb push and into test lret test or mov pushf pop jle call jge sti xor incb jmp xor aam sbb push pop into jo mov push aam test ret add mov repz sub adc and xlat fnsave mov jmp leave and loopne nop mov cmp sbb pop not nop fisub repnz insl std push call dec xchg icebp inc aam add inc cmc (bad) aaa inc repz (bad) loopne imul jne mov lock out jbe ja lods adc aaa push (bad) and call mov mov inc cmp je xor push adcl repnz dec cmp mov fisubl ja push mov test mov notb xor pushf jecxz mov scas dec ds ret movl (bad) jp inc push push out test cmpsl add sbb sbb push cmp adc ljmp test rcrb scas cmp jne inc decb outsl in pop mov std inc or ret fidivl pop out aaa and mov sub push js sbb stos adc push jle popa dec mov aaa or mov outsb xchg sub push enter xor std subl outsl push add add frstor push and jg add jg mov (bad) outsl inc add push jbe outsl ss adc jg jg jo pop loope xorl sbb or pop xchg adc mov pop mov cltd mov sbb lret cmp push adc xor sub movsl push fistl in or or jne inc add pop jg xchg dec or cmp je sub push push push sbb add ja add (bad) mov shrl rorl sub cld fsubr cs inc jge and movsb sub push test push fsub jne outsl rcll in into insl mov add cmp push add mov das pop sbb sbb adc sub mov jge loop out out shrl cmp xchg mov fnstenv (bad) testb pop or out add movsb and ret repz nop push inc inc jge cmp ret inc push inc inc inc push fidivrl adc rorb push subl mov xor cmp jno mov hlt (bad) adc pushf mov bound adc dec adc movsl xchg lods jge add outsl dec hlt rep jmp neg and ret jmp lock mov push inc xor (bad) cld sub push push sbb je mov xorb pusha inc xchg or or jp inc and inc fisub or adc cmp cmp jg push cmovbe jl sbb push push andl sbb inc mov inc or jb pop imul je or push or (bad) mov adc pop push sbb mov sbb add jl lock sbb xor stos fs imul add add cld push sbb xor add sbbl inc jne adc mov and xchg xor push jl adc or pop push push fcoms or mov loopne mov enter enter inc and adc es inc inc lock and rorb xchg ret jae in movups jmp xchg mov sub inc push bound dec sbb inc insb jbe es mov insb push mov mov pop add mov fwait rolb push add ljmp mov push push roll insl adc insb mov data16 add mov mov aad pop sbb mov or cmp jb mov lock int3 and pop or in or mov push out and dec and push and or xor dec loope xchg pop cmp dec sbb je aam in mov push xor push jp adc fldt push movsl sbb jmp test add mov outsb psllw pop cmp stc pop or aas xor arpl in push adc or mov sub mov je sbb imul push cwtl pop mov and js jp and movsl ds jmp push adc cmpsl sbb sub push add mov dec mov mov push xchg and xor test cmp adc xorl inc bound mov xor jl shrb out gs or jno xchg jge and adc pusha cld jo cmpsl je les add add mov pop addr16 push pusha out lods testb daa cmp push and xchg jo adc adc jl leave jmp push insl daa add jno add lcall adc sub movsl enter push cmp (bad) pop (bad) inc dec inc or pop mov and xor test dec rcll dec push test (bad) out xchg aam mov mov outsb push ljmp push lcall mov mov js or les mov (bad) jo icebp inc je and ja int push inc xor rol inc push and pop test pop cmpsb shr add mov mov mov movb jb cmp out jbe or cli mov push dec jl jge pop rorl jmp add sbb push add push mov popa xchg stos fimull in mov cmp sbb jle je mov or test xchg cmp lock and rol mov pop inc pop add adc push cmp mov push lods cs pop xchg lcall testb jae push jb push hlt xor push inc roll inc cmp je lds inc add pop out sbb add roll sbb mov pusha pop hlt or pop xchg pop xor popa or mov mov in dec or xchg sbb ds and push int3 sub por cld ret mov inc xchg out pop push stos mov jb xchg sub pop or xchg rcll (bad) or jle sbb add add sarb and adc nop add push mov iret out pop (bad) ficompl add or lahf mov add outsl rolb int cmpsl xchg mov add das lds add mov add loopne frstor je and in xor gs (bad) xor add aaa ret push pop pop test ret int3 add mov pop or jae xor jo jne (bad) jecxz pextrw mov es (bad) cmp push add xor test add cmpb outsl mov inc add test add mov lea xchg adc and lea sbb into lea mov mov xlat inc in jbe (bad) mov inc jg jbe imul xchg jl je xchg (bad) add xchg xchg imul loopne mov cmpl dec fcomps pop and sub mov add pop arpl sbb cmpsb loopne add xchg cmpsb adc push push aad enter jae daa sub (bad) insb fs cmp dec or jmp dec lock xchg push lret mov mov jo push js inc jmp mov jge and inc xor rcl mov xor inc push xor fisttp push in add sbb (bad) sub inc inc cmp je dec jne mov adc cmp shrl lds lds ljmp (bad) das clc mov mov lahf lods in pop mov jne sbb ja clc rolb mov lock jne lock mov or and cmp outsb bound lahf push jmp or push or cmpsl inc (bad) jnp test or jae data16 je sbb aam mov repnz xchg fisubl test sub mov push inc pop ret and cmpsl das and xor pop sbb push mov mov pusha inc hlt insb jecxz test dec adc mov shll mov mov mov add clc add pushl ret add add icebp call test inc adc jmp push pop add int inc jmp insb jg sub ret or std inc sarl add push in je add or je ret mov or adc imul add or mov cmp mov lea stos clc ja stos add sub mov mov inc cltd mov mov inc sub dec adc adc adc push lea xlat mov sarl lock dec je ret jbe call notl ss out dec mov pop ss mov movb push mov mov add cmp ja out lea sbb push call mov fmuls fs or lock push es loopne mov push push imul and in inc rolb pop fcomp push and movzwl ljmp sti std push sbb push jmp adc je and xchg fmuls test jmp shr mov jae lahf xor sub mov lea mov cmp ja dec push pop roll addr16 push and and mov negl pop jmp int xor inc inc jp push mov ds mov sbb pop js loope ja jge add add and pop (bad) mov push adc imulb mov push subb push mov (bad) mov mov or mov int movsl pop loop sbbl int3 jne mov pop jo in pusha addl or mov or sarb adc lock call jl mov jmp cmp js mov clc ffree stos or lahf mov jno or movsl stc adc test mov pop cli fisubr aam mov mov je or push (bad) xor jb and clc shll (bad) jmp sar mov push mov pop repz insl call mov inc sbb mov ror cmp jnp and jbe push (bad) imulb mov test or nop in mov lds add mov je mov lea or cmpsl sub ja pop orb sbb inc cmp testb dec add jbe mov inc inc cmpb push imul mov and xchg add jb mov xchg movl mov push in stos out add inc pop cld inc mov inc inc inc dec push mov and lahf mov ret add imulb pop mov pushl lock mov loopne or jne inc add add clc insb mov jnp mov bound xor xlat aaa bound in orb sbb popa cld divb movsb dec loopne cli lret push rcrb insb mov mov push mov in cmp fadds and (bad) cmpsb mov cmp mov add movsl jp sbb jae xlat dec pop mov jne sbb adc jl sub push cmpsl adc pop mov testl call repz ss inc mov ffree jo pop call fisttp or in sbb add xchg (bad) out cs inc rclb inc jmp sbb idivb mov mov jmp jne sbb mul mov movsb jmp xchg aam and mov add jmp jmp xchg pusha pop jo and cmp xor (bad) loopne pop shrb in cmp push adc clc sub pop movsl xchg mov add (bad) cmp pop push or pop adc mov or sub or addl roll mov pop xlat mov sarb mov pop jae inc or mov adc or add in sub adc or or push pop adc inc mov sar out iret pushl jae arpl (bad) push pop cmpl pop jle jbe cmc adc add adc inc outsb dec jne ja inc mov push push sbb xlat xor mov mov or leave ja pop push pop cmpl cmp jg je lcall adc cmp add test test xchg je loopne mov sub aaa and inc sbb lods imul push (bad) mov incb sbb loope sbb mov cmp mov xor mov xchg fstps sub add ds leave lock bound dec and lods sbb jo inc push sub nop push pop add push pop push (bad) adc mov fs out add or dec jo icebp mov jne add push and mov jne fucomip push push cmpsl adc push ss shrb or lret jmp push stos xchg and mov mov lock cmp inc adc sbb pop cmc or leave or xchg outsl dec fstpt add mov adc test nop add or and jne or add push cmpsl rclb push aaa adc mov lea add lret mov and adc push out pop mov negl negl aaa lea mov ja stos lock mov cmp imul adc mov add or and mov lods in hlt and insb hlt push cmp mov add add bound add adc jbe xchg icebp mov fstl xlat testl mov sub lea dec or sahf dec pusha pop add cmp mov or or mov add les movl rcr insb les jo inc xchg mov lcall jbe (bad) mov add jmp mov push sti jecxz jle adc mov scas mov mov adc xor sbb aad adc lods and dec test pop sub fwait push in outsl jmp push stc and fistpl fwait adc dec mov hlt and inc push je aam hlt pop adc inc sti push sbb or xchg jle pop loopne cmp adc ffree pop adc and ljmp mov push mov or fcompl xchg or hlt jno xchg out lock fildl mov lock add add sub sbb adc call fisubrl dec je dec inc pop jb daa inc lock cmp (bad) (bad) adc pop mov jnp inc scas or push int3 mov or sub xchg js (bad) aas les rcll pop aad decl lds mov inc and stc sub in pop adc jns jne mov and pushf ret add pop cmp and inc add jae xor mov cld and mov xchg or mov or mov mov fs add sub mov adc mov and inc test mov andl dec call mov fild mov inc icebp pusha pop add jne sbb clc mov cli fcomps mov clc or mov push dec push adc jb bound js add pop push cmp xlat mov mov add test sub mov push mov or je mov mov adc sbb sub mov adc jbe sub adc loopne jecxz ljmp add lds nop fist loopne mov ret mov outsb aad mov cmp and pop mov adc inc add adc add loopne test jne mov shrb fsubr stos nop add loopne add inc sub je mov push add mov divl add or (bad) pop lds aad mov (bad) out inc js pop enter mov adc and or mov and xor fcomi mov sbb insb test xor js mov (bad) pop mov pushf and mov fdivs or (bad) pop mov shll or dec or scas (bad) jne inc je sbb jg pop test jae adc int jge push daa xchg ret inc mov mov out mov dec or cmp test mov mov insb add push pop sub inc fimul inc loope daa pop jne mov fldenv in lods shll xchg pop das aaa or push pop jnp cmp xchg fstpt lea add sbb clc dec mov idivb push push cmp mov add and jns fistl (bad) sbb incl test cs add add ret xchg loopne jmp mov mov pop sub je cltd push dec idivl (bad) adc and sar cmp pop loopne or or lods rclb and jmp fs pop pop insl mov and pop std sub adc mov dec jg iret out lea push js jge mov mov les xchg push pop jo inc insb orb mov pushf popl inc rcr adcl pop popa rcll fcoms mov dec add cld push pop cmpsl mov sub rorb sub (bad) or pop add mov push rcll push or mov add add mov mov or mov sbb leave or xchg inc pop pop (bad) jle lods add cmpl push in push test fistpl add inc incl dec xor call inc dec test mov and push mov out ret testb es je cmpl or jne jno jmp cltd cmp inc jne jmp inc inc cmp adc cmpl jne push sbb lds and pop outsl or push enter je lock cld ss add push mov out adc jg mov push sub sub fstps inc pop push jge or enter gs test les jge add pop and xor aas test je or movsb push jg adc iret lds inc aam sub flds loopne mov push sbb (bad) mov or mov mov or inc loopne hlt push fwait sbbl ret xorb mov loopne call dec push xorl dec add push mov cwtl ja fsubl sbb xchg add mov mov dec mov rorl sub fiadd je dec je sub push add jbe sbb or or gs add sbb or adc jnp pop mov addr16 cld (bad) sahf mov lea dec add or insl mov and enter jns add mov adc call ds or (bad) push call cmp je mov push adc lea popf stos add pop ds push push cmp or add adc mov or dec push jo jae mov jle xor adc add xorb push xor gs xchg mov push fs jg inc lcall jne dec rep incl outsl lods add in or xor aam int3 cmp rdmsr xor imul mov push xlat mov scas loope pop mov inc add insl subb push in ret jecxz mov xchg inc pusha loopne mov insb pop lock inc mov (bad) push gs push movsl fsubrp xor and or test adc add mov mov (bad) loopne scas negb and cmpsl xorps push xchg (bad) fistpl add jnp inc mov mov sbb ss jecxz flds mov lret xor inc inc call lret or aam sub aam rorl lret or xor or sbb cmpsl inc nop int3 or mov sub scas pushl lock in add xchg add je or jae add sbb sti jae push test dec fimul xor icebp es inc pop insb aaa inc movswl dec or insl pop adc jg das mov int3 (bad) mov jge mov jo scas jne push inc pop jp aam mov mov sub add jle adc mov xlat int3 sbb andb inc (bad) xor ss mov insb add es add stos fadds sub sub icebp or loope pop sub push movl loopne add dec or clc lret cmpsl test ret loopne enter addr16 mov mulb enter cmp jle pop cmpl leave sbb out add mov add add je sbb mov pop cmp or mov inc mov push xchg cmpsl ret cmp mov mov xor cli jecxz push push mov icebp sbb jne cmp fcompl fs pop test fsubrl fadds daa cmpb jne xor ret pop mov jmp ret xor insb push jae cmp inc test jg js scas lock add rol add mov adc fidiv ret aas dec adc mov ds add shrl xor add push jmp adc iret xchg add pop adc mov push divl shrb fldt jne fisttpl mov ret lret insl in idivl and in or jne and ret cs mov ficoml push call inc push sbb sbb cltd push push sbb add mov xor addb cmp dec jmp jne sub adc add je test jg mov cmpb addl add add inc jmp fidivrl mov psrld or or cmp stc inc inc lods mov repz sar dec mov or incl cwtl in jns inc rol push push aad dec sub (bad) test sub imul fisubl or mov xorl sub sub xor shlb ss dec (bad) loope inc (bad) mov mov fstl insl dec mov inc adc insl sbb push sub sbb mov lds dec xor mov in (bad) fsubl and push mov nop push pop mov sub pusha jne mov test cmp jmp pop fs (bad) mov in pop mov pop jnp jbe fnstenv mov fist mov insl sbb stc gs or dec cwtl lock and ret out les popa icebp mov dec in dec hlt mov xchg clc pop sub ss dec shrl mov xchg or pop push (bad) pop mov std and cmp jg adc and xchg sbb cmp inc cltd stos push add mov sub addb sbb test outsl mov inc push pop jb add xorl xchg pop adc add sub adc lcall test mov sti cld jns outsb pop fisubl sahf mov inc jns mov adcb (bad) imull mov aaa and movb xchg sub es jbe push pop insl xorl inc mov cmp jbe or out cmp (bad) stos mov les ljmp repnz mov add xlat in lahf push repnz and pushl adc int cwtl inc fcoms cmp mov cltd xor or call lret and andl pop adc push pushl jne add push or adc bound jp nop add push push jno or xor or and push pop mov daa xorb cmp or sbb fsubrs faddp or fisubrl out (bad) ret (bad) mov or sub inc loope push iret test movsb js mov cld cmp leave cmp jne inc stos push and adc pop je add jl adc or frstor mov ljmp add divl cmp or jle andl inc sbb testl jl inc add push inc sbbl sbbb cmp inc jle stc dec cmp xchg in nop lahf test cmp (bad) xor sarb xchg sysret fmuls jbe push rol push mov in mov imul insb push cltd leave xchg (bad) cmp cli dec xchg pop mov mov sbbb lock and je push adc and imul and and insb xor (bad) or push pop inc push jne lods mov sbb es xchg arpl sbb iret mov in cmp cmp mov js insl add dec ljmp xor lds jno test lret inc push mov (bad) lods xchg xchg cmp (bad) mov sub xor push push push cmpsb push outsl add or mov cmc cmp gs or sbb add mov pop mov and push in dec adc mov or mov (bad) xchg loop rorb inc adcl adc sahf xor and (bad) mov or cmp add lahf or mov pop mov ret push inc dec adc mov ret add inc test mov pop int les xor sub mov add dec add inc decl mov popa (bad) fmull add xchg sbb pop (bad) pop jecxz (bad) lahf je and add rcrl inc inc and test jnp je lods es pop data16 dec in rorb inc pop inc cmp into inc cld (bad) nop ret mov jl pop inc ror jne lret std push xchg outsb insb je mov inc sbb dec nop cmp adc mov in sub fdivrl fcomps inc daa ror sti mov add xor adc leave sub sub daa push (bad) or cmpl sbb jecxz cmp xor sub pop cmp lahf iret jne in dec scas push cld mov sub shrl pusha repz (bad) aas jae dec hlt hlt inc rorl add pusha (bad) ss pop or imul jl pop add push push inc dec mov xchg test fmuls jo push hlt jecxz inc xchg push cmp faddp notl aaa add sub pop add sub and int mov out lds je loopne xchg arpl cmp pop imul test push xchg mov add or jne push mov mov push sub push xorb and cmp jmp push mov push inc pop rcrb and xlat or shrb cli add bound outsb cwtl ret jmp or jne cmp xor or inc jge inc pop fstpt add js imul ja in jne inc adc mov mov push add push adc push mov sbb push push push mov mov iret mov jmp fisubl pop sub das mov enter mov stos (bad) rolb add sub add and add sub xor mov or lock roll (bad) call pop cmp pop mov aaa ret (bad) mov mov (bad) stos inc push mov xchg push inc mov inc mov fs add enter xchg sub insl fsubs xchg pshufb add push shrb lods icebp jl jmp or jle push test ljmp mov in dec test sbb adc ljmp loopne sar and shl add call inc add mov (bad) lock scas mov out leave bound jp subl jge adc xchg mov inc xor inc push hlt or cmp fdivr orb jmp (bad) dec subl lea fistl js cmc push push and das inc sbbl ds ljmp or add or jle xchg pop daa movl jl mov lods xor mov insl outsl inc and insl mov adc mov xchg out adc mov mov ds (bad) mov push dec mov test mov push inc dec sbb enter pop test cltd jb scas dec cmp cli add dec cmp add rcll insb lods push sub xor lcall mov jb push push mov mov push xchg ds push scas mov xchg popa sti xchg (bad) xchg mov out in out mov test aas not mov push insb cmpsl inc hlt mov jne dec inc push xchg dec lock in adc mov out movsl stos mov or push pop mov xchg jmp test lock adc pop pusha xor sub (bad) fnstcw (bad) out rcrb pop cmc cwtl or loopne xor les mov and ror test push cmp icebp mov mov add cmpl adc add and lea mov cmp sub or gs loope pop push sub out stos mov (bad) xor mov pop rcl popf jl inc cwtl in push adc nop pushf adc aad mov test jmp push inc add in movlps push push mov pop push sub movsb loopne sbb jne push loope xchg loop xor sbbl dec adc dec lock and jl jecxz inc popf fldenv or test into add pusha sbb pop je pop lahf cwtl pop pop cwtl adc shufps js or popf push pop push add mov cli stos add ret push movsb andl lods pop add add es (bad) adc enter adc sub cmp shlb jb rclb pop stos push shll clc or pop (bad) sub lret cld shr jbe xchg mov (bad) mov xchg int add dec add push in test test or outsb lea dec enter ret (bad) fistp sar dec cmp jbe push pop mov cmp inc mov movsl add xorb jmp dec add shll (bad) sub decb jmp lea sbb mov pop cli fcomp mov cmp pop or fstpl push mov cli add dec fsubrs jne xor jne hlt stos or sub adc sti add and dec pop cmp jl push into cmp cmp inc adc fnstenv hlt fidivl mov jno insl inc mov and sub je dec add fnop or mov sbb fldt jge add scas dec dec dec or pusha cmp xor ljmp test pop jmp out icebp rorl add xchg jne mov dec paddd mov mov jae cmpb fsubrs xor xor insl test cmpsl or jmp and xchg scas add (bad) mov in ljmp jbe je je xor test addl lret fistpll mov pop mov add push mov sub pop or xchg fldenv mov sbb movsb mov add in iret out adc dec adc pusha dec fildll movsb pushl push or pusha mov adc sbb sbb in pop mov in sub cmp pop lea imul inc rol inc sub mov sub insl or sar xchg aas and adc dec push ljmp lock xor inc shrb ds icebp loopne push out js rclb mov idivb mov push add or adc cmp dec adc (bad) insb lods andl and icebp cmp jbe push in jmp cmp inc mov call add nop fcoms mov push ret dec xor mov popa add xchg outsb icebp push xor jge dec imul into test std cltd pop mov sbb addb dec jne push sti test mov stc cmpsb sub popa push call jl xchg add cli adc (bad) pop out ja (bad) pop sub inc adc dec fildl inc movd pop sti out sbb push movl movl addr16 jne add stos add sti pop jmp xchg or xchg fs (bad) pop aad inc push sahf sub enter fdiv test test dec inc push js insl outsl mov and ret cwtl xor leave mov cmc add xlat sub nop sub int shr mov lock rorb dec cmp in out pusha fildl xor test jne pop sub (bad) xor (bad) mov stc add sub sub sub jbe dec pop pop shrl pop sahf pop inc adc cmpsl sbb test fcoml es add pushf nop fbld frstor dec or or jg inc mov sub add shrb xchg movsl test call add adc inc mov cld ljmp mov mov scas (bad) or imul push inc pop adc pop sbb adc mov mov jmp sbb nop mov lret test dec aas cmp insl mov cld xor or cmp inc cld mov cmp pop add loop jge js mov dec ss xor test lahf imul rcrb int loopne inc cld repz pop sbb push sbb dec dec push lret dec out dec mov outsl push dec dec push add dec and outsl ja inc fildl ja or mov xchg das rorb adc cwtl icebp mov jae cmovp aad or push push cwtl xchg inc clc cmp mov push bswap mov adc cmp push into setns jns dec or sbb add cld scas push test cli xor (bad) xlat scas mov add loope ss and jge jno movsl sbb mov subl jbe add imulb mov jo push inc movsb cmp adc incb or sbb outsb lds push jne push pop and leave add fnstenv jmp jnp add rol adc insb nop xor sbb lock rorb or lret fdivrl mov adc sub dec in add cmpl mov or in sbb cli jmp or je je mov mov push lock dec (bad) iret jne fdivs or insb loope pop cmp cmp xchg out jmp pop dec scas out (bad) dec inc pusha push out (bad) jge into jne pop push push pop xor inc mov ret call mov sub icebp pushf add and push (bad) fcmovnb push jo decl pop cmp stos loopne je out es sti fwait arpl jno in and mov decb dec outsl loop pop dec in repnz jmp cmp (bad) iret mov jae lods pop xor sub jae inc arpl pop and adc arpl and or or lea xchg push fisttpl and pop ret xor or or out or mov cld or sub or fistpll stos mov aaa mov mov adc add lock aad xor inc mov outsb push push lea jne,pt cmp ret outsb dec cmp add add lea push rclb test movaps test and inc inc add popf or adc inc nop test add adc inc insb and ljmp pushf pop mov pop jae inc lock popf pushf pop sub je push popf test sbb (bad) call pop ja adc clc pop idivl push add es add push je loopne in ss popa xchg out cld sub xchg mov imul mov add sub or adc push aad sbb xchg add jno sarl xchg add mov push and xchg adc or pop aam mov push xlat dec mov fmuls pop xchg insb dec dec cmp fildl cmp daa negl scas push mov lds push push mov lods add and dec push cwtl add adc out es rcll xor push push push inc test aaa dec and jne xor adc dec test out sar or inc jns (bad) notl jmp cmp inc and push fistl mov and xor repz stos pop lea push xor xor pushl and inc mov mov mov sub push mov dec pop inc cld push xor mov cmp enter or adc (bad) jno lds and enter adc add jno mov movsl mov push push test jne cltd cmp jb xlat aad pop jbe sti jb ret sub sbb push int3 add jno inc in push adc and cmp loop add clc arpl push or call push dec dec movsl sub jl mov ret inc and call mov add test ss cli add out mov mov rcrb and cltd loopne dec jb lods mov (bad) test fsts push mov push add inc xor (bad) ljmp cwtl fimul iret (bad) jae and mov lods inc and inc jg sbb add xchg sti or jmp (bad) pop sub je add jo aad fs (bad) clc sub add jnp sahf mov add pusha pushl fwait jmp mov cmpb sbbl aas call je clts xchg xor jmp mov sahf mov out mov icebp adcb fisub mov (bad) adc ret js or cmp adc mov pop (bad) and jo jbe sti or xchg stos rclb pop sti add sbb out mov mov inc pusha pop inc dec jbe rol inc inc stos out les adc out icebp jnp mov fmull icebp adc stos adc xchg add push pop add rclb mov fcomi mov push sbb inc inc pop push fidivl push movsl jmp clc (bad) mov je push push fcoms push or cwtl adc mov cmp (bad) flds arpl mov movsb sub xor jl xor lret ret inc bound (bad) (bad) (bad) dec xor enter lea cs mov test and inc mov andb add cmpsb or adc data16 sub rorb inc aad js or sbb lock jmp aam pushf bound out pop repnz lea repnz jo sub mov cld test dec pushf jne repz test (bad) outsl push mov mov pop push push push push push push or loopne sbb push add mov insl mov popa and sub xorl (bad) adc mov aam mov lea movsl mov insl mov xlat add test sbb imulb push dec dec push or add (bad) jmp popl jg pop mov inc add adc sub xor sbb popf rcll loope adc adc pop and mov mov adc dec adc pushl add sub or leave sub push mov pusha pop mov (bad) xor jecxz shrl jne rcll xlat out bound out test sub push sbb xchg sbb mov push push lret mov mov sub cs in mov ret sub push aam xor std push sub test arpl pop mov mov xchg add add lea call dec push hlt fstpl xchg xor push aam adc pop push stos add incl add adc mov fstpt push jb push imul push dec out push mov cmp fdivl out adc sbb leave rdtsc movsb call xor mov adc int3 in sbb shrl repz mov fiaddl adc inc das xor arpl dec gs and and scas in xlat fisttp push push or andl adc orl jbe pop or adc fmul and ss and enter and sub orl xor jbe xor inc or adc dec or enter pop xor and and orl js (bad) cs mov mov jno or mov cs pushf mov movsb test adc aad pop xchg xor pop add xchg mov cwtl mov mov add aas cs mov cs or adc adc fs sbb xchg or and mov scas inc aad or enter in dec das lock sarb sbb je (bad) clc out mov mov icebp lret sbb call pop mov aam add or or pop bts jmp ljmp pop outsb mov sbb jmp jae rol and unpckhps push or imul or inc inc scas aas jge iret outsl xchg push jmp movsl adc mov rorl rorl push cmpsb sti outsl sbb mov mov inc inc rcrl adc jno,pn push or decl out cmp in jne add in mov xor inc inc pop sub pop roll dec add (bad) mov clc or and and lea stc pop mov fsubrs push fidivl push aam xorb mov or jnp adc cmpsb lods pop xchg xor aaa sub inc adc push add push stos inc cmpsl inc je inc pop and dec int3 jge add inc insl test add push outsb adc clc orl add inc movsb test and insb adc mov pusha inc push sub or fmul pop sub lock pop cmp mov subl cmp sub adc add xor sbb (bad) mov or sbb loopne dec les les push aaa xor dec lods jg mov mov int3 repz fisubrl mov dec test pop fistl es dec aam adc and or push mov and and sahf mov sbb (bad) push jmp test rorl push mov mov push lea sub leave or mov inc adc add add cmpsl push loope das mov les cs fisubr or sbb mov mov push jae push add adc adcb mov insb shrl pop dec pop jg je js jnp (bad) push xor ss cld add jno adc mov in scas jb cltd clc mov jmp cmpb inc push test push sub dec jo fmuls inc imul xadd (bad) mov fstp mov mov mov xor test mov sub aas pop mov (bad) jae pop andl push cmp mov clc xchg sbb jl lcall and mov cvttps2pi enter inc fwait stc add push test sbb add into xor es xor mov iret xchg mov loop mov (bad) lret pusha mov sbb cwtl ss mov in mov sbb cmp dec pop orl adc adc mov pop mov cmp inc add pop add icebp sbbl mov test add add mov loope pushf xor add add mov daa jo lret xor jecxz push (bad) lock mov sbb (bad) stos lea in ljmp jl and out add mov add sar cmp pop push add pop (bad) mov loope lea (bad) test xor push sub pop addr16 inc ss add out rorb add push pop pop sub xor insb or pop test add add pushl mov mov inc mov lcall push mov cmc ret jl mov insb bound test movsb jbe mov sub test sti inc mov push mov ja adc mov mov or test inc pusha adc test pop rcrb push jmp movsbl in mov loope sbbl mov imul xchg test cmp mov bound (bad) cs add sbb pusha imulb lea fimul outsb add jne xor pop lds cmp pop andl aaa xchg adc nop mov sbb lods sbb outsl outsl xchg mov movsb fisub add sbb mov inc push inc (bad) or dec incl xor mov inc cwtl add add add les movzwl cmc mov inc roll test mov or pop cmp lock cs lock test add pop push cwtl pop sbb mov popa jp (bad) dec ss cmp adc sbb arpl xor cmp cmpsb inc loope cmp aas sbb fmuls cmp mov sub adc movsb andl sub movsl arpl jae (bad) movsb pop movsb mov inc cmp jne sti insl pop call jns adc mov inc inc jb mov xor fdivrs int3 push iret add fldl sub lret sub sbb jb mov ficompl mov lods jo cs xor outsl mov jae mov ja inc or (bad) mov lods inc stos enter stos ss pop or pop dec js jmp xor adc pop mov jbe in lods add mov adc pushf or ds push push push push test dec sub adc clc test sar bound neg sub insb test ret sub add clc mov clc testb xchg sub jmp fwait pop mov jmp inc xlat or mov xor xchg (bad) ret outsl inc push test or xor divb out sub mov adc add mov test adc xor ss mov cmc (bad) iret adc pushf adcb sbb fcomps ss adc push and push das and adc push test cmp cmp xor xor inc dec cmp jmp mov leave leave je or pop clc xchg mov push add add adc pop imull loopne push std incl faddp adc push sbb mov adc or jnp fildl sbb jmp or lea sbb add sub sbb add add mov or loope or inc adc add push mov add add inc adcl inc out inc aad mov mov fist mov mov jge mov push add or pop adc mov and sbb scas add into push and shrb leave shll fdivrs jne stc add (bad) pop and add adc jbe pop mov fwait mov pop mov dec adc inc cmp or jae add pop rcrb cmpb push add xor or outsb (bad) jbe jge lock imul sbb (bad) push lods mov mov and cmpl or or (bad) and jo mov cmp jge je daa inc outsl mov pop orl mov sub sbb push cmp ds push xchg dec lock mov adc xor sti in arpl adc jge cs push push inc enter in jbe sbb mov add adcb sbb outsl aam testb push lea rorl js jmp dec push add je adc and decb mov mov sbb push inc rcrb inc add inc and jg outsl xor dec fadds dec pop fbld cs pop jmp pop mov or jmp cwtl inc inc pop or rcrb jle or or and xor das sub (bad) or bound shll ret sub test inc hlt pop pop aam stos and andl gs jl adc or mov adc push add xor imull pop fwait or sbb (bad) js mov or or dec addl jmp bound nop and xor pop pop sahf cmp push mov enter adc pop loop and jmp xchg mov je dec mov inc test sbb cli cmp mov cmp jne and data16 mov push es add jmp outsb lret push aad jno mov mov call add mov jl loope lea ret pop mov stos push dec arpl mov mov and and xor add pop push jp mov fnop sti mov daa stc fcmovnb pusha pusha mov xor imul push es std (bad) xchg cmp mov and xlat or mov mov pop xchg jmp and fsubrl fmuls fs pop es pop push xchg sub das inc loopne and ljmp or jne div das and out fnsave sub ja jb cmp jbe dec sub cltd into push rcrb push mov or mov mov pop xchg stos sub xchg mov rcrb ret mov jge popl push dec push add jbe out shlb pushf mov js movsb fiaddl add movsb xchg leave (bad) pop mov xor sbb or and and pop mov jge add je xor jnp mov mov push xlat insb adc pop xor cmp mov subl pushf dec je push push mov je mov mov mov xor and cmp sahf lock or popaw jmp or test push ret cmp xor or mov repz sbb lods adc (bad) push inc add shll xor and and leave sbb or jl xchg jle test add mov mov cmp push mov dec ret xor push shrl cmp hlt mov test sbb inc adc xor adc xor adc stos push add scas mov pop roll pop (bad) cld or push hlt push and out jnp cmp add repz data16 mov sbb (bad) int sbb dec mov cmp or arpl add inc push mov js pushw mov jne push add mov les or fsubrs push outsl fdivs mov sub mov loopne popa pusha push (bad) hlt lods jno int3 sbb pop cmpl loope push or cli push xor sbb mov sbb ljmp inc shr push sbb push add cmp popf add stos pop outsb inc insl adc xor add add and inc movaps rolb flds or add packssdw mov sub jo stos push mov mov enter xchg jl or jge add inc mov or or sub mov or neg lea jns orl pop push or push or fisubl sbb jmp or pop jbe mov or push push pop pop pop pop rolb push add adc add int3 add sub shlb ffree and inc ljmp movsl pop xchg insl jp sub testb out add adc enter repz or lods and sbb sbb or add pop sbb dec std adc add ljmp cmp pop aaa inc insb pusha loop les dec orps fidiv fcomps pop fdivrp dec call push jmp add jmp mulb mov pop cmp lock xor negl sbb stos dec sub adc and test mov sub rcll dec call push add mov or push cmc mov sbb dec jle pop aam adc sbb push pop les push mov movsl adc pop lea sbb mov cmp ret mov leave call insb sub icebp in add sbb call loopne sti xor xchg mov sar test sub lock push jmp push adc or cmp sbb push nop frstpm(287 fisubl sub dec es push add jnp dec dec fldcw or adc lock push sub sub mov andl movl mov loopne cmp pop fnstsw cmp adc push js push (bad) jle sbb jnp push jle je push loopne fdivrs sub lahf add call sub data16 mov push cmp xor adc push hlt adc sbb inc jmp test inc adc mov push xchg daa mov data16 or cld cmp sbb push sub push stc pop push fstl add test jns sar or out lret ljmp cli std push push inc pushf jne inc push test (bad) add bound inc into add bound push imul jo adc push or mov dec push incb pop inc xchg pop jge adc adc lea cmp je inc push mov dec (bad) ja and popa cld aas mov test cs mov das cmp jns mov push jmp cmp adc (bad) mov pop nop ljmp cmovnp test push mov mov scas pop popa sti adc push je jp inc add adc (bad) mov add jae fs inc mov jbe adc jne test and sub pop jbe adc sbb inc mov add jle or pop or js dec es xchg or (bad) jns adcl jns or les cli scas mov sbb sbb arpl (bad) mov adc (bad) lea or mov or pop leave cli aad or sahf decl or (bad) sar jmp push lahf test (bad) mov jg sbb add push add xor ret addb jl outsb add sub ja ss punpckldq popa add or or push mov mov fisttp daa xor fsubs inc nop scas jmp pusha adc push mov loopne cmp lods xor and cmpsl or jge or dec pop or in pop pop or cmp cmovno inc add pop dec mov add jmp das jp dec pop mov pop dec xchg pop shlb mov stos pop push xlat mov adc push rcl xorl sbb cmpsb js or sbb adc rep clc ret jl hlt imul out fimul adc add jl add sbbb push inc jle mov iret sti orb pushf push xchg int add add mov mov inc mov pop mov pop xor scas mov mov add mov stos or rorl testb (bad) aaa imul pop movsb jne sub pop and or js cmp adc lds lret or jmp insb xlat mov jne and add add bound arpl pop jne mov scas or inc cld sub movsbl sub das mov pop inc in xor loopne jmp ja jmp pop leave cmp jae mov cmp and daa cs push add and sbb and mov cmpsb test or pop mov scas pop sub cmp (bad) (bad) jg mov sbb ds mov andl inc ja loop jl insl and jbe notb jp outsl or mov and testb add pop sub mov sub add popa mov loope sbb xor pop pop movsb mov fild inc jecxz mov leave nop cli inc mov test add fwait and dec adc je sbb mov mov pop mov aaa es data16 add xchg jo std jg out push cmp ja add cmp or (bad) cmp add hlt push pop jg pop or mov fldenv das pop test faddl add mov fs sbb mov andl (bad) stos ds sub outsw push arpl mov adc pop jae adcl sbb fwait les jmp (bad) xorl mov sbb outsb or add push sub inc or xor dec or or insb adc mov test adc xchg imul push jnp mov jle adc in das mov jne and jecxz pop adc in mov movsl enter add pushf sbb enter (bad) jmp sahf cmp enter push (bad) and outsl dec pop testb mov (bad) jno sub or or loope cmp push mov add or push adc xor push outsl icebp mov lods mov test pop incb call inc (bad) push sub or cmp mov mov or push ret push test addl shll add js ja enter push push pushf and push xor dec sub sbb cmpsl sbb sub sbb pop nop or andl cmp cmpsb add inc add push adc pop inc cmc cmc and fisubl fs jecxz add push and xchg push lds mov mov add in test push std push lahf push or or (bad) shl push add mov aaa jp adcb stc xor jp,pn mov outsl iret xor popf loope inc or rol pop pop js ljmp inc sbb cld pop dec add loop dec out jb sub mov test pop imul mov adc xchg sub cmp std cld jmp inc lahf add or in sbb loop movsb fistpl aaa pop nop or shr inc adcb subb and sbb pop or add and dec xor shlb rorb rclb sbb jb jp sub cmp loop jmp stos std inc push jo pop xchg or cmp or push or inc aad inc aad xchg sub xor or sahf inc add cmp pop mov pop and neg cld xor mov sbb loop and xor addr16 mov test xor imul xor frstor jbe mov cmp push xorl mov lcall add in fdivs fsubr pop adc js xchg ret fdivs das or dec daa loopne mov idivl in mov gs mov mov mov mov inc lea inc add enter fcoms mov inc inc sar sbb lea in mov (bad) push aam adc fcoms gs pop ret and call lret jmp mov sub inc xchg mov in or add adc movl mov cwtl inc adc arpl and adc jne or push cli or imul pop sti push scas xor cmp add push dec or sbb lock mov arpl and insl pushf mov and inc pusha ja push aad gs jmp jnp mov dec mov xorl and in cmp jle and in divl jge call inc dec mov cmp ja lds inc inc pop ret adc dec mov pushw or cmp mov or mov pop mov sbb add je xor inc icebp cld push and push add xor adc push mov inc cmp adc sub pop jmp cltd sub jns scas mov xor out sub sbb ficoml pop js out xlat dec push call add pop adcb add inc sbb push push sahf adc mov test or das aad es and push ret fistl icebp jge rep sbb pop jo mov sbb add (bad) mov rclb roll ljmp push pop cs cmpsl jnp xor push inc xor pop inc xor mov negb push je inc adc ret mov clc ljmp xlat xchg jae sub sub enter mov lea lea dec mov je push push lea and clc into fldl pop pop pop sbb push sahf sub cmp or or cmp mov pushf xor popf sbb xorl (bad) lahf sbb imul push cmp xor sbb cmpsb (bad) negb movsb mov out push sub or jmp xchg push push xor ss push add add sub sbb or js add or (bad) xchg arpl pop add inc pop mov cmp lea cmpb inc je loopne mov (bad) je add push push (bad) ret adc testb add jnp (bad) bnd test push add test inc and sub lea push mov dec dec inc arpl mov sahf adc mov adc jle or aam adc arpl mov push pushf jae mov lods inc mov jne xor or xchg fnsave movsb movsl and movsl test js popf cs or mov dec push aad jns adc mov push lods bound add ret sbb add add cld add add into xchg out gs and push test loop pop adc xlat cmp adc stc insl xchg addr16 fcoms pop and and dec push lds adc mov or jle and stos and add jmp cmp add loopne xor mov push imul sarb mov iret push scas in pusha adc add and push (bad) mov movsb or sub add lods mov (bad) das adc sbb sbb sub adcl inc fs loop add jo jle cmp mov push test inc sbb cmpsb adc or call mov jg jmp dec jbe clc cmp jl rorb dec mov add xor pop add or jo adc and cmp jo cmp cmp add cmp and mov and push sbb sbb sub xor dec fdivs adc mov inc push pusha jecxz jo out inc mov insb and mov mov sbb push pop inc jb outsl mov daa fildl push xchg out xchg adc xor cmpl je aam adc loopne insb js inc push pusha inc in enter dec sar testb mov lock loope and mov push adc adc int xchg jmp lds mov scas push lods or inc pop fcmovnbe jmp dec cmpl into cmp inc and push cmpsb push pop jne cli mov ficomp jo fldt and adc fwait jmp push add shrb fwait mov out mov test cmpsb pop lods cmp or call adc test outsl cmp faddl or loopne xchg sub add fiaddl loop mov pushl xor sbb push adc add (bad) pop jecxz pop bound rolb pop mov stos and mov test je ss inc cltd movsb test jnp ja push lcall mov (bad) arpl out jl push jmp add pop jmp cmp sbb je inc and sbb cmp sub sbb mov xchg lret popa pop add fild push and sub sub push xor mov jo fildl es je andb ss icebp pop adc adc daa pop lods clc int fs dec je dec jne add and sbb in lods adc sarb sbb xchg sbb jge xor pcmpeqb dec cmp jge movsl sbb push adc sub aaa mov adc popa inc mov inc pop int3 scas dec or add pusha inc and ds sbb sbb xor dec rol iret add xlat movsb mov pop (bad) enter lea cmp mov sub in and inc xchg inc add xchg and cmovb aad call mov in loopne add push inc cmpsb stos mov roll clc aaa sbb push cmp jl iret jg fs test inc push push jbe dec hlt out push cmpb sub inc mov mov inc push addl es andl push (bad) pop jb (bad) pop sub push loope push out movsl popf inc add xlat pop (bad) dec aam xlat outsl dec add jp movsl mov jl enter mov icebp cmp xor xchg idivl xorl cmp je std or adc daa int ret (bad) push add push mov pusha sbb (bad) lcall orl bound inc (bad) in add outsb jnp (bad) insb and or and sbb or pop or or addl and jo push fildl jle inc xchg sub push dec add out rclb cwtl sti rorb sub jecxz pop xchg xor sub test xor mov stos xor movl xchg cmpl mov or add jbe mov cmp divb rclb pop xor lock jae cmp clc pushf jg add fs push mov jle mov push xchg adc push jbe push adc push shr or add and pop cltd ficoml mov jg or jecxz jmp je hlt xorl fs jp fldl sbb lock sub lock je push hlt (bad) add arpl lcall (bad) mov lcall ret mov or dec mov addb sub mov and inc bound popa push movsl or xor jp je hlt mov jnp mov or and clc push aam mov lods test mov movsb pop addl cli dec bound push push dec loope popf mov (bad) mov fmuls adc cmp adc (bad) (bad) push add and cmp inc add jns or scas jne xchg bound push imul cli rorb pop push je decb fbstp cmp jbe ljmp inc (bad) je mov mov push lods push fs call in jmp cmp jbe sbb imul sbb mov cs ljmp repnz add jbe insl jmp inc mov or ss fstpl cs mov mov push add pop les leave and sbb dec add push ret lods mov mov lret push lods shrl dec dec lea ret or and lds notl bnd insb add icebp add rcll jb push push sub std xchg mov and out dec jo sub jmp out iret and cmp pop push or push push xchg (bad) rcrb add add int3 xor sub push xor ret cmp add inc sbb sbb arpl (bad) jb cmp jb mov jge cmp adc cmpsb sub mov std add loopne repz das add cli cmp add cmp push mov jb inc mov fcoms sarl popf out (bad) cli push (bad) lock jo mov jle pop loopne aas push cmp xchg pop add lock in in insl lea xlat push pop add bound stos testl and jge xchg js add add fdivr cs mov jl jo mov or push sub repnz insl sub stc adc mov mov mov outsl xlat mov sbb mov or push sbb adc pop inc mov sbb mov cli adc cmp jle adc into rcrb xor cmp inc ljmp push rclb ret sbb imul pop fildl je push loop dec jge outsl scas push pop or movl mov mov and mov jl adc jno cmp or jge (bad) ss test fcomi iret int3 popf adc push nop test mov mov ja mov and pusha push and add jl xchg cmp mov inc adc jl aam push xchg sub sbb add push call adc jg stos inc mov jle hlt ret xchg mov fistp mov mov sub mov push or sub shrl jne repz adc add push scas dec les mov sub adc inc push sub loopne or sub inc shlb sbb neg add adc add pop ret mov in insl sahf lods adc push mov mov mov fs push lret insl fldl pusha rolb mov xchg lea test add adc and jne adc int3 and jbe nop mov fs lea pop les inc int3 ret or adc test clc adc push add adc rclb fsts push or xchg cmp pusha pop adc insb rorl push enter sbb push jne push ret adc std mov adc push cltd dec jbe dec cltd add mulb or inc add mov addl or mov cmp push sbb scas adc fcomps lds add jb push (bad) sti out mov adc inc push xchg add (bad) add adc inc add xchg xor mov (bad) inc adc mov inc pop or outsb daa push and pushl and insb popa je and add inc outsl jo jb addr16 je cmp xor xor dec gs outsb sub and imul pusha inc jo addl add jp jmp (bad) and adc pop in bound or mov or add scas jnp or adc jae add outsb mov jg add or cmpsb imul imul add sbb sbb inc push xchg add inc ss push add and or or incb jnp adc fcmovnu lcall or or or imul cmpsb dec int3 sub insb lcall pop fdivrl lcall (bad) cmpsb imul imul cmpsb imul dec lret push cmpsb imul cmpsb imul inc (bad) cmpsb lcallw push xchg push (bad) imul imul imul cmpsb imul inc shll popa lcall push (bad) xor cmpsb imul dec leave sub lcall imul imul imul cmpsb imul dec int lods insl lcall pop fnstsw mov adc cmpsb imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul dec negl inc add pusha adc (bad) xor xor dec sub dec (bad) xor pop cmp (bad) xor roll adc dec xlat xor inc addl ret add xor mov div and add rorl sbb adc xor rorl sbb push push dec (bad) xor push add or imul adc lcall nop cmpsb sti sbb add xchg and or or or push shld push or add sbb sbb sub dec xchg sbb sbb (bad) std pop icebp frstor xor or enter adc inc xor xor sbb sbb and or mov pop or cmpsl or jnp adc sbb (bad) je dec sub xor (bad) xor mov pop add rol loopne jae roll push imul pop roll insb xor dec sarb add outsb sub popa jb and insb gs wbinvd adc push test sarl adc pop sbb and sti add inc push imul add iret and add jo punpcklbw jmp (bad) xor sbb and inc popa xorl add add add (bad) xor roll or fwait xchg add pop push push pop int3 (bad) ljmp jnp mov outsb imul outsb and arpl je outsl dec push je outsb mov jecxz cs incl fldt adc arpl gs outsl dec mov jb dec inc push dec inc dec xor cs dec dec mov gs fistpll pop inc insb jae jb gs push gs popa insb jne clc orb push insl (bad) in mov js je jb gs insl jae mov insb je cs insb adc lods stos movsb bsf pop sub (bad) (bad) lcall sbb and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec call and pop pop pop pop pop pop pop lock or bound adc push insb insl inc clc (bad) mov jae jne ja jns jnp jge jg cmp (bad) fsubrl dec loopne sub fwait jge or push push adc jmp pop add dec dec inc push pop dec dec inc adc test adc xor or jno jo insb imul jae mov popa mov je insl mov sub outsl and adc push xchg outsb ret jg bound jns pop jmp arpl or inc pusha mov (bad) sbb and je pop fwait imul daa pop jae push sbb insl mov or and insl fs push insl and pop ss xor jmp jne dec fmull data16 pop mov insl bound jae insl bound mov pusha fs dec and jbe and paddq imul mov xchg cmp bound mov outsl jae add stos and sub xchg imul lods std mov fcmovnb insb adc pop push insb insb popa outsb das mov lea jmp sub arpl jb sahf sub cmpsl xlat or mov xchg outsb push inc sbb pop in insb outsl jb inc dec ljmp (bad) mov stc divl add add and ret xor lods adcl leave xor gs push push outsl or cmp out mov or fwait xor jbe jnp lahf pusha fs xor or lea into insb gs addl daa aaa jecxz mov lock outsl mov ss or push fs xor jo std jbe xorb popa pop in mov sub xor into (bad) mov pop sub das sub (bad) and imul pop leave neg or jmp (bad) add sub movsb or gs and insl jbe push push (bad) mov sbb pop xor mov rolb hlt hlt icebp push fsubs jno jae sub xor (bad) in dec jge jecxz jo je out sbb nop ds mov popa repnz xor adc sub fildll sub fisubrl les js fs pop xchg inc fisubr add push push mov inc sub cmovl outsb outsl fnsave daa or jo addr16 subl lds add into mov ret xor and popf movsb xchg dec adc jb jg pop mov fs jo inc outsl lock xchg jae daa jne add push add add and cltd dec push dec add test sbbb addl adc (bad) add popa and adc add push add add flds xchg sub add fildll add sbb add fs mov add add (bad) decl jo lods addb xchg lea (bad) call xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov (bad) (bad) pushl mov mov mov ret (bad) enter int3 int iret sar (bad) (bad) call rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock lods (bad) push repnz cmc div clc stc cli sti cld std (bad) call shrb lock inc xchg and nop stos nop add mov pop jg pop mov dec dec cmp test mov sub add or add or or dec add pop xor sbb dec outsl jbe dec xchg push jns inc aam mov dec pop mov imul mov inc pop loop push out imul adc cmp sbb addr16 jmp jnp push push dec inc inc aaa jns or xor cwtl (bad) movsl cwtl fs inc inc pop or adc push pushf inc addr16 imul or jnp fdivs inc cmp insb mov and repz fstl add push add outsl rorb andb inc insb and mov imulb sarl mov push (bad) fisub jb jns pop mov daa adc xor nop mov jns gs pusha push sbb andb mov fs addr16 jbe inc dec jo fmuls or imul fsubs mov lret sub jns mov mov xchg shrb pusha fsubr push dec inc and ds adc sbb xchg and orb and fs stos adc push dec clc in xchg sbb dec add sub mov or add inc imul pusha ss push ret push jg jae testl xchg ja pop (bad) ud2 dec xchg mov dec and outsb mov push dec jnp dec add jns xchg shrb add fs sbb (bad) outsl xlat test gs popa and sbb dec clc imul and add mov mov xor arpl dec xchg rcll add popa mov or fadds jg (bad) fwait mov mov das dec sub mov pop fbld fsubs inc sbb bound das or adc pop in mov xchg mov add cmp add add or add es jle mov add xor ds cmp sbb dec xlat pop and sub es lods jmp sub sub add fiadd aas cmp scas and ds lret pop push das daa pop pop shl push imulb outsb or sti je jo bound pop fptan sub fisubrl xchg xchg jo mov ds nop cli loopne ja sub clc jne add imul (bad) insl lcall pop jo pop (bad) xor mov sbb xor pop jl js imul imul imul xor shrl and sbb dec (bad) xor adc or add lcall hlt lock imul imul imul imul jmp jb add rcrb mov sbb into insl lock add fwait cmpsb xor in jo mov insb add (bad) mov ret push add mov dec imul add add in push lahf add and push pop sub icebp das jle aaa xor push push pop dec and push pop ja sti pusha push jo add and fwait jmp lds push add add or pop mov pop push addb pop xchg adcb test pop popf mov push orb cmpb push scas (bad) test mov sbb push jo add and or (bad) push ss ja les pop push jnp insb xor sub dec addl dec rolb movsl push cmp mov adc inc dec xchg xorb jae outsl mov push mov jns pop cs mov jns ret addb xchg pop ljmp incl inc xchg or call orl hlt lea push and and ret fildl arpl popa mov repz icebp sub dec stos fwait add xor js pop and xor push and ds jmp test add outsl add adc or or xor sbb xlat jne jo and jbe sbb (bad) ja inc add push rcrl pop dec or push add jae aad add dec push bound in pop adc push lahf (bad) add mov add adc gs aaa (bad) jge push xchg popf imul insb lods jmp or cmp adc ja in outsb insb fs jae fs data16 lahf jmp out jmp arpl jne dec push adc jmp lods sbb xor stos ds pop mov insl add call sub add xor lea xchg and pop jne mov sbb gs xlat lea mov add add mov add mov (bad) jae jp add xchg sbb popa cmp popa xor popa pop jmp (bad) lret jg pop je or fwait jo popa mov lahf adc jae je xchg lahf jnp psubsw jg cmp fnstenv xor add add push or sub (bad) sbb pop and push fldenv jnp and adc sub inc xor push inc imul fstps mov or dec cmp outsb aas mov sub fs xchg cmp xchg out stos and ja xor and jmp insl xor xlat movsl xchg std dec mov popf cmp pop add add xlat mov jns leave sar shl cmpsl imul mov (bad) cltd adc xor fcoml (bad) sub fs xchg pop imul jbe ret and pop ja gs pop pop inc xchg mov pop fbstp pop xchg sub rcll pop gs pop push jmp mov mov sbb inc iret jmp bound movsb xchg sub xchg fldenv and inc mov iret popf xor pop jo popl or outsl (bad) pop pop pop popa mov and jae gs or (bad) adc ja or outsb add and outsl (bad) adc addr16 cmc inc dec push and jne jo in adc add pcmpeqd adc xchg pop add loope dec adc push std shll and lret pop cmp (bad) dec push mov mov data16 cmp cmp sub cmp xor jne arpl dec mov pusha lret push addr16 push mov daa push cmp sti jae jp cmpsl adc test and dec das cmp fmuls mov test push or sbb ret adc mov dec xchg pop and or xchg mov js add insl das outsl dec arpl mov in rcll cmpsl out sbb shrb fldt sub je imul movsb push mov leave outsb lret and cmc ret xchg push aas add jbe adc adc ret add arpl arpl inc jge dec xor push adc imull fdivs jne rclb mov mov mov inc mov xor arpl jmp loope jecxz jno stos lock insl pop dec and push mov jne and adc imul test sti xchg xor addr16 sub xchg push pop sub nop inc clc and jns je push popa push add jae xchg or xchg popa mov ss dec subl dec bound sub jne and movsb inc sbb and mov lret push pop idivb jno fstp je xchg jae loope arpl and push leave arpl arpl lods xor sbb sub fs cmp (bad) insb (bad) mov pop sub lea mov daa ja ja aaa ja (bad) sub adc mov loopne lahf imul mov roll adc add lahf pop pop js das inc je gs push mov mov jbe arpl inc shlb outsl es mov xorl mov movsb dec dec inc addr16 sub xchg mov push jne pop and jae sbb xchg addr16 inc and cmp lret inc popl mov xchg lods (bad) je pop mov int sub (bad) adcb je pop xchg dec ret dec imul inc out mov pop dec je jne jb push jns rolb insl sbb and pop bndstx pop cmpsl popa add or mov push data16 imul xor dec jge imul pop je daa subl xchg sub insb scas mov or dec cltd mov (bad) insb loope sbb sub fistp and ret xor gs xchg shr inc lcall pop inc mov arpl and add fistpl test jl sbb outsl xchg aaa insl mov add bound or pop ret add fmuls mov insl insl dec mov lret push mov push jl arpl dec sub push popa adc (bad) ja xchg add pop xchg mov xchg fs les je or es popa sbb and adc clc popa or pop ss mov ja sbb pop (bad) mov shlb xchg add mov inc mov insl pop (bad) push inc and lock add xchg arpl jne inc pop pop jnp arpl pop xchg pop sub jb je cs mov xchg popa das mov adc inc and cmp bound sub xchg stos add subb test popa inc mov fistpll xor pop gs inc loop and fsub adc inc pop and add mov imul xor fisttp mov and push and or xchg adc push xchg bound xchg adc arpl mov stos ja fldcw push popf inc lret arpl sub add aas cwtl mov cmp dec add push notb xor jne add xor add popl inc imul popa sbb addr16 inc inc push add pop sub inc push xchg adc and xor aad xor and or imul mov or in push or dec out sub mov inc sbb mov xchg scas stos cmp inc pop rcll xchg cmp dec fwait add test aaa flds inc mov dec xchg adc pop or mov popa fs repz xorl jecxz test add xor jne inc inc (bad) jns pop ja or add mov xor ret popa gs int or inc mov fs iret xor subb xor and mov dec shrb shrl loopne sbb ret pop jp inc add pop or dec call pop imul xchg lahf insb dec lea mov (bad) jo sub or mov stos out dec ret insb mov inc pop dec cmp or mov sbb mov dec rcll sbb adcl xor jbe and xchg ja pop xchg and and arpl je mov xor pusha gs test and xor jb lock dec xchg pop out add and scas ja add or push or jmp xchg jge iret and jbe dec cs push xor je mov add and test add xchg and sub mov icebp imul or negl pop and jno xchg ret adc int3 bound ss jno pop loope addl jae and ja mov nop insl movsl shll ficomp add add lret outsl sbb cmp sub lods mov jg push in inc or push adc add or ja inc lods test (bad) jb xchg and dec out inc xor jns cltd fcoms notb lahf and jecxz jecxz pop popa shrl sub push das out rorb adc mov stc test ja sub ret xchg inc mov sub popf xchg and test ja insb add push jb outsl add xchg nop and sub jns or xor es sbb insb xchg and jo push add cmpsl mov stos adc movb xchg (bad) pop and push lods pop adc popa push adc addl add outsb pop or push fmuls dec push rorl imul and in jo mov or popl adc imul enter jbe orl and iret dec pop pop aad in push ret (bad) add and outsl add and mov fwait inc pusha push mov dec push mov je xor popa add push sub pop xchg push ror xchg int pop add xor xor pop or addr16 push dec add jno (bad) jo pop sbb imul add cld adc mov imul add outsl add les and sbb inc fisttpl in nop rcrl lahf and out or xchg or lods nop call pop clc data16 insl pop dec je lds mov mov jb popa add gs dec push sub adc inc test iret jne popf aam fbld or push pop nop add xchg push mov vorps mov mov jb addb les push pusha test inc pusha or popa add jl arpl xchg dec dec es pop lahf inc prefetch mov push or sub cmp insb enter popl dec adc push fisttpl cmp dec inc push stos out test popa inc xor add push fdivs jecxz push mov pop test imul out lahf nop and sub aas lods pop add (bad) jo adc xchg inc pop leave imul popa sub or add xchg lods fs adc imul push popa adc ja popa inc and inc jb das dec xor and fwait xor data16 sbb xchg imul ljmp and dec inc iret pop inc mov jne jns and adc test aad in nop mov sbb push or push (bad) adc imul pop pop inc sbb flds call add outsl mov add scas push flds and shlb and arpl jo add add je sbb inc sub sub movsl adc inc js adc jns bound arpl push enter dec xor add lea mov dec sbb xchg pushf or mov addr16 or sti dec pusha popa xchg popf (bad) call or xlat andl test (bad) dec test fadds out inc sub adc test or and les pop and sub arpl arpl or movsb or outsb ret daa adc pusha andb mov and pop cwtl (bad) fcoml test mov je sti aaa lea pop inc ds jmp xor test jmp scas jmp sub pop inc sub fcoms subb and nop push push lret or or cs add and mov adc and xchg dec cwtl add sub add (bad) lods inc push hlt dec insl leave adc ret push jmp ret stos fs jno inc popf test or mov jge lret xchg in inc sub (bad) shll pop arpl scas inc and pop inc stos or and dec xor jne or sbb stos pop popf push xchg jbe je sbb mov addl cmp pop je inc aas sub adc pop addb pcmpeqb fs fwait mov cmp pop out push scas jmp jnp xor mov lds or movsb mov (bad) movsl sub outsb cmp arpl xor add adc sub test insl pop xor test add insl std add je and sub sbb (bad) push loope cmp cmp imul les outsl stos and sub inc dec addl loopne stos movsl in and dec jae push sbb push jo rorl jg inc sahf xor add dec xor test sub add dec or jnp inc mov add push mov btc and nop (bad) and or lea out add pop rolb popa mov dec add jmp jae add adc clc and push pop and pop lds add pop or (bad) sub or imul add add add and roll mov lds fstl dec or sub and push dec (bad) mov mov or or cmp add push or sub addb inc add xor add cmp inc adc inc xchg mov enter add sbb add (bad) scas dec push mov bound mov pop adc (bad) fimull rorb arpl push inc push xor mull jo dec lods repnz and sub cmp arpl outsl stos clc fisttp bound pop push movb push pop inc outsl je jo bound add xor adc test inc adc fnsave push add or call hlt sbb push cmpl scas sti add subps cmpb fsubrl xorb cmp in daa mov rcrb xor push ss aam inc cmpb xor jbe or jg movaps dec adc add adc (bad) or and pop pusha pop bnd sets fnstsw cmp or bound inc mov and scas jns fadd cmp mov or insb shlb sbb fs movsb mov sbb int3 mov lock aas add pop out into adc test sbb fnop sbb pop mov ret mov sbb out loop pop and mov pop mov negl stc pop and or aas inc sti pop inc ret cmp inc out jg testb inc lahf (bad) cmovno mov mov js aas add inc jg popa pop sarb jg pop inc addr16 es mov cmpsb sub sbb sbb push xor outsl sbb sub fldl sbb add pusha mov fmul je xor fs sbb add add push nop add std jb pop and mov popa aas sub leave add dec pop adc push xor pop imul ss add mov leave push adc mul or mov inc push subb sbb jns xchg cs mov cmp enter lret je ret xchg movsl mov shrb lret clc and and jecxz pusha arpl cmp pop enter ja xor xor xor mov and pop mov xor jns inc dec push int3 lret fmul sbb add and xor cmp inc xor lock or inc cmpsl iret sahf fisttpll sbb pop jge pop pushf int3 sarb xor push enter cmp cmp test sub (bad) push push stos stos add and push mov add or outsb gs mov imul cmp fistpl push mov arpl imul popa das push sub sbb mov ja cmp mov push add test xchg jg sbb adc insl gs outsl fs loopne xor (bad) imulb sbb es je je outsl inc ret outsb adc or mov inc imul fistp bound jae push outsl jb bound das jae add sbb movsl sub pushf ja (bad) xor fisttpl add das pop (bad) xor sbb mov pop jmp sub dec jbe mov push bound data16 cmc arpl test ja adc imul xor cltd stos dec inc mov xchg das sub outsb unpckhps orb add test mov in dec add mov push inc or add es imull mov sub pop add ss fsubrs sbb or add add mov pop adc push pop jae sbb jo xor rolb pop or pusha or and mov and loopne fsubs or sbb fsubs aaa nop push push pop cmp js pop xlat or push push pop adc pusha orl mov orl dec pop lock add push pop adc ss xlat push push pop jecxz sub je fsubs pop xor enter fsubs or test roll sub test inc pop or jg pop pop sbb add sbbl xchg cmp insb mov pop jl cmp fcomps insb mov lahf pop pop insb pop sub fs push mov mov push sbb jg pop inc push sbb adc mov and jb xor les insb mov decl pop bound and fs push movsb lar (bad) mov push sbb in pop pop roll insb pop pop sbb xchg incl sbb pop jp cmp aam insb mov call pop push sub jbe roll setg or add ss pop push push (bad) mov roll pushl pop jbe ss roll insb int3 decl pop popw xchg insb mov pop lods pandn pop inc pop in jg fsubs pop pop pop push pop pushf (bad) fsubs or ds pusha orl outsb pop orl femms pop mov pop cld decl xor push pop adc cmp pusha orl pushl fsubs popa pop and mov or pop fcoms pop sbb or (bad) jns cmp sar imul pusha pop mov pop mov imul outsl mov pop adc shlb pop jne xor fsubs gs and mov or pop inc pop sbb ljmp sbb pop cmp pop (bad) insl pop sbb pop mov shlb pop dec pop cli decl test addr16 ret call pop xor (bad) (bad) fsubs adc roll sub addl pop mov xchg pop insb mov imul sbb ljmp sub fsubs push mov lahf mov ss ss pop idiv push pop orl pop aaa pusha inc shlb into jmp push or fsubs pop scas pandn pop inc pop out decl insb mov pop pop pop sahf call pop aas pop fdivrp mov push sbb das pop mov pop lahf popl dec pop (bad) push xor rorl leave push xor inc icebp leave push xor inc leave cltd fnstcw stc lds in xor inc leave mov int xchg or lods in and fstl or std inc leave push xor mov and leave push mov xchg or inc lret stos inc leave push xor (bad) xchg or mov push (bad) cmpsl xchg or inc out inc leave push xor mov or inc and xor inc fistpll (bad) jg lahf push pop out adc pop movups add mov add pop adc int3 aas fistp jbe dec ljmp push add fistp arpl popf jge pusha aas add sbb jb sbb pop push mov xchg cmp in xor or or add add out js mov inc imul push pop jne push fcomps fs insb and jb inc add pop inc and or add and je fist rclb adc lret out jecxz or adc outsl push (bad) xor (bad) pop incl add cmpsb jmp add aas inc sbb loop add push sbb loop mov pusha adc aas inc push ret lcall stos nop (bad) incl int inc add sub adc and and xor pop xor test loope xchg xchg add adc orb push add movsb (bad) pusha (bad) jns aas jns mov pop cmpsb fild mov cld test aas inc jle test shll fldenv cmp fimul mov iret mov sti lods stos in call mov and push ficompl pop pop fisubrl xor sahf pop sbbb fsubp nop xor cmp add inc mov fadds test test inc movsbl add add push and cmpsb sub cmc mov inc adcb pop jmp jg or adc mov jecxz add xor xor pusha xchg add pop or or cmp (bad) dec inc add push adc fwait pusha orl pop and enter xor fsubs push pop push pop pop (bad) test pop fwait pop insb mov loopne add jb push das mov push sbb pop push pop sbb inc xchg add pusha orl movsb outsl orl lahf into pop xlat leave stos loopne sbb pop arpl mov (bad) and inc adc jg jae jnp pop mov inc daa lret cmpsb sti fmull sbb adc adc (bad) xor sbb lcall inc repz xchg pop inc pop pusha mov pop outsl push inc cmpb cmp pop imul cld dec add testl or or fmuls inc (bad) into add or nop xchg orb xchg xchg inc adc mov xorl lods inc add inc or pop inc popa and add add add sub inc add jmp call outsl cmp dec rcrl pop pop xor (bad) xor push dec inc cmp xor shrl sbb xlat stos ss add cld outsl ret add xor hlt lock call (bad) xor aam sarb mov test xchg mov jo pusha mov dec rorl add sub cmp call pop inc add cmp insb jg jae cs pop inc out add add add sti add adc mov inc cwtl pop mov adc pop add out sbb mov lock popa push push push addr16 inc aas mov das pop loopne inc inc or or or iret cmp xor add mov push mov pop adc xor (bad) insl add cmp jge xor ja stos shrl out aam repnz das add or inc inc orb jg (bad) lcall in push jg adc jg shrl fwait xor dec (bad) (bad) (bad) dec cwtl jae fcompl (bad) (bad) es test mov (bad) jne imul xlat movsb fimul call pop cmp (bad) sub pop cmp xor (bad) jg outsl push cmc push sbb sbb push inc fsqrt inc in stc pop adc ljmp rcll mov fdivp jge (bad) (bad) (bad) push fstp imull mov and subb and dec loopne mov sbb ret (bad) (bad) (bad) incl inc scas lcall xchg xchg dec outsb push loope sub gs (bad) (bad) pushl dec sub dec mov lock repz xchg fistpll pop clc push popf jno push cld jp push push pop mov jle fstps jecxz fild fwait incl dec xor (bad) (bad) (bad) (bad) cmp sbb push jno lret fwait notl (bad) pushf arpl pushf mov sbb je xchg je (bad) (bad) dec jo inc popf fdivrs adc inc popl mov clc add add (bad) pshufw push or sub (bad) fstl and inc (bad) (bad) (bad) decl out mov test mov cmp pop ja pop xor cmpsb jp mov (bad) in (bad) mov rcll std mov ret scas pop (bad) int3 mov cmp (bad) je (bad) (bad) (bad) incl cmp xor sahf (bad) mov mov push imul (bad) (bad) (bad) clc mov xchg cmc push push sahf jl outsb or or cmc and jne in mov cmp xchg pop popa adc pop jl mov dec push int3 mov (bad) (bad) (bad) pushl ljmp mov rorl (bad) and arpl sub mov call pop push dec aam fisubr mov inc mov or xchg dec (bad) (bad) (bad) pushl (bad) fldt mov mov adc mov stc sahf and scas fstpt sbb xor (bad) inc inc stos and arpl inc jle mov negl cltd stos (bad) (bad) incl out dec mov pop pusha jge xor sbb cmp std (bad) lcall add xchg jp in jmp in daa ss or mov sbb (bad) (bad) lcall stos in push imul dec (bad) out or adc add (bad) ret fimul (bad) (bad) (bad) (bad) in leave mov push into subl xchg jae leave movsb lret and xchg gs loope mov (bad) incl sbb (bad) (bad) and dec inc cli sbb sbb ficom jb and (bad) (bad) pushl int in sbb sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti (bad) (bad) (bad) (bad) jmp gs xorb mov aad add out in popf movsb push mov (bad) in (bad) decl out cmpsl mov sub push sub cmp clc adc xchg (bad) mov mov ret fild push and mov nop popa in mov pop lock or imul mov (bad) (bad) (bad) decl les adc cwtl mov sahf cs je rolb mov sub (bad) (bad) jmp adc hlt or adc fild and cmp arpl sub (bad) incl lods sbb or in add ror nop and roll into mov in xor xor cli mov (bad) (bad) (bad) imul mov xchg or sbb xchg (bad) inc ljmp mov js push je push pop rorl fiaddl int3 push and xchg push or outsl std jmp mov push cmp insb pop push push xor mov (bad) dec out mov test out push icebp mov pop arpl dec leave push mov pop clc lcall rcrb sub lret les lahf sbb (bad) (bad) (bad) call fsubs in add test aad cmp cmp jbe push jns cmc (bad) jg incl ror jne lret (bad) jecxz daa dec das xor dec pushl shll daa lds leave push (bad) fist out stc (bad) (bad) (bad) pushl cld cmp cmp xor decl lret test test fsubrs enter adc hlt adc push sub lahf or ret cmpps adc (bad) pushl adc sub arpl dec mov (bad) ja outsl call (bad) idivl mov cmp arpl (bad) jmp xor and and and idivb arpl and and (bad) mov push pop push and sbb test sub xor jb sti lods or cs and jbe cmp inc jae ds cmp test and jle xchg jne xor cs xor or dec loopne mov sub push imul jbe outsl je and push add or and push rcrl and jo das sbb outsl add ljmp unpcklps jo sbb bound pop push add ljmp das or dec mulb add cmp rorl insb pop push leave xchg jb jbe cmp mov adc scas ja ljmp xchg or mov sub and bound push add ja jns jmp (bad) and fs addr16 out xlat jge jne jp jbe outsb cmp sbb xchg mov fiaddl scas scas scas scas or push xchg outsl inc add push lock les push mov inc mov ljmp (bad) (bad) incl xor ja popa push out mov les (bad) hlt push xor adc sahf xor fdivrl jmp decl dec mov mov sub mov sbb dec jno ljmp lock jge sbb in insl push mov hlt movl insb adc or (bad) std test (bad) decl add insb push arpl psubd or outsb cmp imul addr16 call cmp aam dec std test cli test xor (bad) call mov lods jecxz fdivs jne fild or shrl (bad) decl xorb mov mov and mov cltd xchg mov iret shld sub mov (bad) and or adc stos sbb mov lods data16 inc fdivl jno add aad mov (bad) lcall mov push movsl in lahf xor mov js stc (bad) (bad) ljmp subl loope or insl or hlt ljmp cld jmp hlt push imul insb sbb xor dec cmpsl repnz xchg push insb jnp add (bad) hlt (bad) (bad) (bad) decl (bad) push les cmc (bad) fnstenv adc mov mov bound ficoml (bad) rorl mov into sub pop (bad) mov loop mov dec xlat xchg fsubs shll jmp (bad) (bad) (bad) ljmp inc mov sarb add in add pop dec or cmp add dec (bad) incl daa adc or and test or mov popa into push or (bad) stc ficomp leave fldcw and (bad) addr16 sub or mov shlb insl mov mov call xchg add inc aad scas ja popf adc push fdivl or test or xchg ds or or push in or mov or (bad) incl jge xchg (bad) shlb add inc push imul inc push cld incl out imul aam loopne (bad) lcall pop jp adc dec fnop fistpll mov mov aad mov call lock (bad) jle mov ret push repnz addr16 cmpsb fldl mov decl std aas dec ss fidivl dec sbb scas (bad) dec add pusha jp inc ret out pusha fistpll fbld out mov jns imul cmpl outsl and jmp push int3 add mov das es lds or sub (bad) (bad) ljmp pop cmpsl call ret (bad) mov sahf fldcw ret es pushf mov das scas insl add ss jmp addr16 jb push add decl xchg adc mov jnp sbb xchg or out fdivrl fisttpl aam (bad) (bad) call roll clc mov push int mov mul ja outsl ja mov out (bad) decl (bad) lret pop or adc sahf gs scas (bad) clc sar imul lcall les loop mov push addl mov cmp cmpsl notl pusha decl inc cld rorb imul scas fcompl fldenv pop and fild aaa push scas mov fidivr movsl (bad) dec mov jmp repnz lret push cmpsb (bad) (bad) lcall and sarb sub push mov jp mov dec popa les sbb cli (bad) lcall sub aaa mov or sbb add sub add sub mov imul aas jle pop adc mov cmpsl hlt pop sub outsl sbb pop sbb das push mov inc inc add xor mov mov pop sub push push leave test stos stos sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push push push and xchg inc ja adc add adc add sub push imul mov mov or adc mov and push (bad) push inc fstpt xor js push cmovae in mov outsl outsl insb push push outsb popa jo push imul inc imul insb gs sub jge jb ss inc or or insb (bad) (bad) and push jo add dec add daa pusha pop mov jb outsb je dec fs dec push jo in adc outsl fs dec popa outsb fs dec lods push gs sub orl mov popa push inc fwait xchg or mov sbb dec and inc lods push adc inc repnz push popf inc imul adc cmc test ds pop jne adc pop addb xchg movsb xor xor cmp lock gs or ss or mov sub mov cs movzwl jns push imul inc inc cld inc inc push add ret stos or push (bad) fidivl xchg add jo xor jmp outsb push loopne sbbb scas inc sub inc pop sub cmp xlat cmp ret add sbb aaa stos or jmp mov inc xor outsl jbe addr16 sbb mov and gs xor cwtl adc adc add mov mov loop frstor inc sub mov mov orb aaa outsl mov insb or adc push in popa je insb xchg dec lea add add push xor add cmp mov outsl insl sub adc outsb or sbb push jmp inc inc into jae (bad) adc iret (bad) bound inc push and test or lock dec pop xchg (bad) sbb loop aas inc insb push add inc pop loope nop xor test insb or into mov pop adc sbb sub dec push push mov dec outsb arpl mov aas jecxz xor jns aas jns mov sbb arpl inc popf fwait nop rcrb jnp outsb dec add shlb lods inc insb mov test popa fwait jo mov sub js and or jnp and leave inc sarb dec out add fsubrs or popf adc js add (bad) mov inc dec mov je sub into fs addr16 inc dec popa jo sarl cmp lret pop mov and sbb (bad) pop in push jb and or test sub inc je and movsb sub stc add daa sub add jns mov mov adc xor push inc inc xchg insb sbb sub sub adc sbb sub jbe mov pop aas and pop outsl jp or jbe sbb mov xor cld pusha cwtl sbb jne adc dec rcrb dec sbb push ja dec sbb int push rcrl add dec pop iret fdivrs pop imul je jmp inc nop negb cltd fmul xor and mov push (bad) pusha add loopne jbe or or mov bound loop andb stos mov ja and push jne out push mov mov add push dec enter jb imul xor pop pushl lock cmp inc sub push in outsl jb push mov mov xchg rcll pop push xor aas test or pop ja dec dec loopne add jmp sbb push add adc push vpavgw imul popf push pop addr16 push les pop cmp dec or inc or adc cltd shr fisttpl int3 dec mov nop sub jnp fisub loop fisttpl cs cmp jmp je sbb add sbb jb,pn adc mov ret mov or add or inc cs mov ret daa rorb gs pop daa add dec add aas aaa cltd or add add add adc add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp call add mov jmp or or or or add add andl push push push lea push call jl or je push (bad) fldt std je adc aad incb add clc push add or fucomi jle (bad) pop ja sbb jmp mov aas call ds ds jnp push or in inc std ljmp sti and or ret pop ret push mov push cmpl mov pop push movl or sub mov cmpsb push test jne clc push mov pop leave ret imulb jmp adc mov xlat fsubrl pop push mov jmp xor pop pop adc mov mov mov push push dec inc fistpll sub test cld (bad) push mov arpl mov push jle mov divb jge insb pop xchg call xchg dec rorl or cmp mov xor mov mov popa fistpll jnp add (bad) pushl or push notb out or outsl ja (bad) movsb add push push cld sti sub inc (bad) div ljmp cmpl pop je cmpl jbe push enter jmp fstl call add xchg add and jl sub push add psubusb mov pop pop imul add push push imul sarb je cmp jbe jg jmp movzbl xor and or xor rorb cmp jb pop jmp pop push fldl arpl adc mov rcrb mov out inc int std fidiv lods mov das jae sub push (bad) mov push pop add or daa jl and ss ret push ret sahf jle jns lock or in das adc nop jle lea or test movlhps cmp test jno add andl loope dec xor jmp in ss lods jmp jbe and fdiv scas cmp cmpl push fistpll adc sub lea fnsave imul cmp test and add push fdivrp xorl mov adc dec push test lcall sbb mulb push (bad) ja adc adc mov loope (bad) add add mov cmp cmpl popf lods xor nop je mov imul mov add add mov push pop xlat into cwtl adc xchg mov mov lea push and xor dec xchg or fisttpl add adc mov (bad) fsubs add (bad) in jbe sub mov int3 jmp push imul or push push xor pcmpgtb mov fs push test loopne (bad) testl and mov pop xchg mov cmp sbb push or and and cmp cmp out jb fadds pushf xchg ljmp stos add shrl inc pop dec xorl xor xor idivb add es mov mov or cmp test xchg mov gs les or dec mov rolb sbb and lock xor jnp in in outsl or pop stc lret jne push std cld adc push mov test and add and bound imul push sbb test push enter mov sub dec test xor lret pop add hlt fs cwtl cwtl (bad) mov inc repz (bad) xlat inc enter pop inc mov xchg mov mov mov movb call jne cmp imul mov cld pop or sbb lea fidivr mov in xor mov dec mov std adc pop shrl (bad) cmp test rcr out pop push mov mov cmp repz pop mov xor adc add and push xor xor mov mov lods and push push fidivl xor cmp aam lock in test ret data16 push fbstp jne mov lock rorb mov cmc or sbb insb push xchg dec inc push push push mov mov mov sbb sub aaa xchg lods hlt jne cwtl mov cmp xor loopne jbe jne mov outsb mov xor add pop (bad) bound sub sub fcmovne divl inc pop mov dec adc xor xchg fcoml lock fcompl xor jmp dec sub add xor or or and jl sbb jmp mov lcall add fidiv enter daa add inc and jge cwtl jle jle adcl mov jne inc (bad) mov dec cmp in and and cmp mov (bad) js mov je and in inc outsl je jns xchg inc into lret dec or outsl and dec sbb jle add mov push adc jne and outsl sub or inc imul rol lcall mov or fstpt xor lea add sbb dec or or mov xchg pop (bad) faddl mov mov and xor and les syscall sub sbb pop movb add shlb shrb rorl push dec adc or movsb dec dec repnz and and and repnz iret je je mov je sub mov scas test dec adc loope sbb mov inc and or bound rolb insl push add or xor movl add sbb xor and push aam pcmpeqb cs xor xor sarb cmp rcrl cld xor repz neg add das xor lea test clc pop mov adc adc push or pop inc es push clc iret ret ja mov add sub jae lock sbb or movb stos rcll jno out insl lret xor pop push aam xchg sub (bad) jne nop and sub dec adc jne cmp clc add in push imul adc in push movsl or or inc outsb or sbb inc dec (bad) out xchg rolb leave ljmp push rolb push mov andl mov outsb dec inc (bad) jecxz mov xchg mov dec mov sbb rclb cmp mov aaa xlat xchg pop jbe push mov negl pop jmp or or and je,pn and aas icebp mov jne or fdiv lods push mov mov add mov int add stos aas cld rcrl mov sub orl sbb cwtl insl ret cmp enter push or jns mov lret sbb adc push mov popa dec inc dec lock xchg les add pop inc push pusha and imul aam jne outsl jmp prefetch movl inc sbb jecxz sti lea inc sbb mov enter or dec inc xchg mov cltd xchg or or inc insb fstps cltd pusha add decb mov xor and je gs ret pop push xor pop and mov mov aam fstpt push xchg lods add sub (bad) pop orl je pop mov xchg jne ret jmp or clc and jae add rol sub inc sub jg add xchg rolb push mov dec xor rcrb jl cld sub pop mov mov dec jns sbb mov mov mov adc mov inc push repz lea inc out xchg fldt int3 loope fistpll push adc std mov or jo clc daa cmp sti or sbb jae cmp add adc jbe sbb push outsl cmovnp jecxz xor add or push and mov cmpsb add pushf outsb cmp jo pop (bad) xchg loopne adc lea int3 nop add shlb in out push lock add leave dec leave es jnp outsb push adc mov jp jnp popf icebp push dec aas leave (bad) iret nop ret mov push push imul add les jo in lock lret sbb push push subl sub sub add fcomps clc test daa adc add sub test xor lcall inc in insl mov insb gs aad out (bad) fnstsw or hlt repnz push push pushf pop imul mov fistpll (bad) out pop sbb sub inc cmp jmp imul mov in mov mov xor push ret stc fstp pop push je mov xor inc inc cmp clc out jmp jo lea mov inc ja cmp fildl and jne mov and xor call adc (bad) adc pop mov push sbb pushf ds mov sbb and pop xor sub insb cmp adc cmp int sbb xchg call (bad) insl xlat sbb sbb add inc movsb mov fild sub sbb sbb jbe or adc sub mov fildll nop dec sub daa pop insb sub test and push mov mov test (bad) fstpl mov add in xor inc dec pusha jbe arpl jge push adc inc fcom xor pop xchg mov lcall push adc xor inc je movsb frstor mov bound jg xchg xchg bound push clc popa lods fcmovnu push and cmp cmpsb xchg add sub dec fs pop ja ret (bad) sbb cmp dec adc pop je or push into inc ret pop push int (bad) es adc lret push mov pop ret mov jge xor nop (bad) loopne fistp cmp lods sub je xchg pop mov xchg inc imul dec mov cmp or int dec (bad) xchg pop loopne jb push stos jae adc sbb cmp add xchg xchg xchg sbb sub clc mov insl fcomps fidiv inc lret mov inc clc cmp scas in mov cmp std (bad) and adc (bad) jae mov mov jmp or or rcll sub lods cs hlt std or pop sbb roll sbbl loope pop cld leave pop mov cmp or out and cmp dec ja iret pop lret sub adc call cmpsl xor popf sbb xchg add mov pop aas xchg cwtl setl jbe fcomps mov loopne std pushaw movzwl shl (bad) xor out and shrb sbb add notl ret aas pop ret leave mov lcall aad test bound pusha push jg insl sub add cmp push lret ret (bad) fisttpll pop sub bound and add repz imul packssdw jle add or mov (bad) lods sbb adc fisttp pop mov mov sbb fsubr pop dec call jl mov (bad) xor (bad) or fbstp lea pop cli es xor ljmp push test in popa mov ja hlt or xchg xchg jb je lea jne roll mov dec scas rcrl pusha jne jbe sbb mov mov mov hlt push imul inc xchg pop mov push inc or clc sub mov es test adc adc test add xchg hlt popa mov (bad) clc pop je adc aas in das cmc mov cmp sub jne push cld test jle pop fcoml lods (bad) jle movzbl inc cmp inc adc dec xor leave inc cmp es lgs je sbb nop jg lea add mov inc cmp jl mov adcl (bad) jge add cmp pop dec push mov aaa ficompl add movb mov ljmp mov cmp je inc add cmp jl jmp sbb cld jl mov pop pop js fs lds ljmp pop jo or jmp push xchg lea ret jo test push sbb lods adc sub (bad) or push in xor inc jne mov lods sbb xchg pop out aaa in mov mov out or lds jo add lea sbb data16 sbb mov cmp jl outsb adc test push push add decl mov push nop lret jle inc stc add cmp (bad) clc movsl jne fs pop idiv mov mov fisttp lea sbb insb xor andl xchg fnsave mov mov pop adc cmp pop cld fldl jl sbb inc cmc nop sahf jo das aad jl jg xchg pop mov popf sub imul adc sbb subl push cmpsb add test loope xor sub insl lret pop lds push jb xchg pop jecxz call (bad) pushl call pop mov loopne push nop inc lods xor cli mov mov xor mov (bad) mul mov or loopw (bad) sub sbb sub js mov sbb and sbb jecxz adc pop or mov mov inc dec ljmp pop push movsb and ljmp or (bad) pop ja pop and sub adc cmp jne sub hlt inc inc inc mov push mov mov xchg cmp add rcll cltd jb adc decl sbb cmp cmp lcall loop mov in test sahf (bad) jmp jg mov fsubp mov daa sbb pop pop ret test push jne pop dec sahf shll jae in jge cld or pop xor jmp dec mov dec inc add and in xor pop imul dec adc subl es leave mov xchg xchg mov pusha pushf out push lods and insb inc jg sbb addl cmp stos push jp pop xor mov sahf adc call das insb jge xchg xchg nop movsb add adc mov cmp mov lds nop jmp adc push fistp lahf add dec movsb jge jnp aam sahf test push sti mov and xchg add orl xchg inc sets pop popf fcmovnb adc push mov and (bad) adcb push movl cmp cmp sbb nop mov enter jbe jo xor ds fmuls push call cmp mov ret jne jmp adc cmpsb je cmp mov jmp push sbb scas sbb adc clc or or xor rclb jb sub mov imul pop jmp sub fdivl dec je add shrb out imulb lock or test dec or adc pop inc mov inc repnz push insl sub loopne lahf cmp pop lds nop mov lahf (bad) incl pushf sub mov rolb and pusha cwtl lea inc mov (bad) mov mov mov mov xchg les jne (bad) les call idiv cld push adc neg sbb and cmp or push faddl mov push mov pop push mov jnp leave pusha and lods aad sbb (bad) loop (bad) mov mov ja icebp cmpsb cmp stc andw push pusha push adc or lock (bad) fisubrl das insb sbb andl mov ja std in push or pop je cmp jae adc jl cmpl and in fs push dec pop push or and and or loope xor or (bad) and popa cmp dec or fldt inc call push adc cmp cmp (bad) dec pop in xchg or push inc sub adc add fwait ret hlt pop cmc lret or hlt popa fiaddl and xchg adcl pushf push sysret or lock add movsb push mov movsb add push or fbld js mov mov pop sbb adc movsb rorb (bad) push pop or ret movsb and and or push add test push add sbbl (bad) jle pop xor mov decl mov pushf or inc push dec dec jo or sahf addr16 inc xor adc cmpsb xor sbb and dec push or test mov or call repz (bad) mov push jne bound pop out push xchg mov xlat out test lds lret and lahf shrb add inc int3 push pop inc push xchg xor mov cmpsl pushf inc push or adc or popa push popf movsl sbb or in insl arpl lret orl jl fcoml fsubrs jmp xor mov cmpsl xchg push popf sti scas js and out push xor js adc (bad) stos inc jns push aas inc and jge push lea stc je sbb mov sti (bad) cli sbb jl movb and sbb dec sub mov mov mov outsl loope rcll jge cmp push dec aad cwtl sbb (bad) idivb insb sarl ljmp divb xor jbe jecxz and sub push rcr mov inc mov mov mov push (bad) fcmove or dec stos out mov jp test and push push or in decl icebp push (bad) enter pusha push cmpxchg cs jmp dec adc push pop sbb in jmp add sub push push pushw ret in push pop push pop add adc push adc add push or fisttpl pop add xor roll cli pop sub inc and clc ss mov mov roll mov sbb mov inc or les lock js,pn lods sbb push lret push fs add lea inc and add mov push xor lahf les shlb xchg in pop aam (bad) xlat fdivs mov (bad) add in mov push push mov cmpl xchg test push mov sbbb sahf and pop jl mov or je jbe inc addl out insb rcl xchg adc add push push ret sbb pop or les or mov add fimul add cmpsb mov adc mov adc sbb dec loopne push (bad) in xchg fwait out jmp in push sub push insb insb push loopne dec cld xlat cmp fcoms mov jbe lea outsl mov scas lds pop leave test push sub cmp and push sbb sti push sub xchg or mov or push mov dec push jne cmp adc outsb shrb xor mov insl lea inc ja jnp insl push adc sub xor pop inc and sbb mov mov rclb dec movl push cli (bad) out enter insb xor and loopne fdivs push cmp mov sbb or jae mov jno inc or int3 push sbb and lock add or je adc sub or sbb mov xchg leave dec cwtl or cmpl mov dec lock add pop jg inc jl and pushf jg flds jp xchg push or (bad) je xor mov scas cld inc hlt cmpsl popf out mov lock ljmp test adc mov cmp movsb jg ret insb mov clc sbb pop sbb push movsl mov mov (bad) or mov pop sarb ficompl push in push mov pop add outsb xchg mov ds (bad) in ja das ds lea push pop push test add fisubr lods xchg add cmp rorl (bad) fisttpl jo push and mov sbb into fsubrs fcoms pop sub jge je jl test sub mov ja inc push ja and inc add cmpl pop in inc cs fs lcall out insl outsl sub lock jmp sub fs cwtl mov rolb lods add iret fsubrs or xor ret mov jmp je jmp or test adc jp or scas push dec (bad) lock jp,pt push mov jno sub dec inc sub or mov mov in mov jmp sbb out dec or cmp push (bad) adc xchg mov lcall ret setns lret cld das jne sar inc shl sbb scas or enter push jne mov lea sarb add xor inc cmp les lock or fcoml mov add pop mov sahf cwtl or sbb or lcall ret pop pop pavgb cmp scas pop js mov and ret xchg push add leave jno jnp pop insl imul dec sub mov cwtl movsb sub mov mov adc les xor test mov adc bound fiadd outsb push inc sbb add arpl lcall cmp sarb mov add add mov sbb shrb mov repz and imul jge ja jb cmp jae dec out out xchg or or dec and divl mov sbb xor and int3 push push scas fcmovb ds add push hlt stos push arpl pop push adc scas sti inc setae pop cmp scas jp jbe ret out fidiv sub xor jne sbb jne ds xor mov inc out lahf out insl bound mov jne mov ret xchg sbb aam cmp jl push outsb mov roll mov xor popa ret cs js into mov pop sub movsl fsub mov lock mov and pop cmp incl xor or js inc inc add fwait mov pop cmp add bound jbe mov pop jbe (bad) mov nop lret or push mov cmpsl inc in adc jne xchg addb in push mov pop inc hlt cmp inc sahf test jmp mov sti mov push imul mov je dec xor mov mov push adc ret leave sbb mov fs in lret pop adc cmp and scas dec (bad) mov sub mov addb mov push hlt rcrb (bad) push or push jmp test enter jne xor jae mov adc out mov cpuid sbb and ret (bad) mov push cwtl sbb sbb in test inc add arpl sti xor xchg sub xchg in movsb sub sub cwtl test jmp bound cmpsb mov adcl adc mov or pop push mov xor (bad) sbb push xor push add sbbb pop push insl mov lret shrl je add mov jl je incl shlb pushf cmp enter insb and stos movsb or test cs and adc adcb push clc cmpsl (bad) call mov out inc mov jge mov cmp xchg add pusha adc sarl pop and fstpt ret lea inc cmp xchg or add pop repz mov mov adc hlt lods adc ljmp rolb jae in push sub jns (bad) push decl inc iret js and push jbe fwait adc push lock aaa sub mov in (bad) btc cmp sbb push test (bad) shll (bad) outsl imul pop adc sub cwtl aaa cmpsl add pop or xor inc ds or sbb jo cli sbb add mov or mov cld adc xor mov push sbb pop mov into push push pop pop pop std fsubrs js loopne enter and or sbb push pusha (bad) mov lock pop sbb jmp cmp mov cmp imul mov jnp cmpl or mov inc add pop or pop dec and push insl orb mov pop add fidivl rol sarb ljmp (bad) cmp xchg push cmpsb movsb pop sub mov leave adc loopne sbb push or clc mov fisubl mov clc or add lahf pop mov incb sbb jmp test pop fildl push ss or adc sub roll dec cmp fidiv jmp mov hlt lods int3 jo inc lods pop sub cmp inc sub call mov or (bad) mov fnstenv xlat pop inc mov jne inc sub sub fildl and nop mov push cmp mov test jne lea push pop mov fwait xchg fs mov mov bound test and mov sbbb sub dec clc jne and mov sbb insb mov sbb arpl mov inc test mov and push pop sbb sub mov test mov xor sbb (bad) ss pop cli push test repnz (bad) dec clc cmp out push push sbb lock or xchg jb add les inc jb clc sub add or mov rcll sbb cmp and sbb les mov das je mov pop pop aas int shl mov shrl jmp add jbe add adc rclb inc inc cmp push (bad) adc lret leave jge push lea enter daa xor test mov pop loopne jbe cmp pushf (bad) or lea or push adc mov lea aas cmp add mov data16 jo jg aaa push mov and cmpb sbb inc mov cmp pop dec sbb (bad) pushl mov add sbb ficomp notb out mov inc (bad) fucomp mov and inc push dec cs mov (bad) imul clc data16 jge inc sbb ss and leave sbb adc push or jl push sbb out call or push push add dec pop mov jmp (bad) or and rcll rcll inc dec sbb mov fstpt cmp pop mov (bad) pop inc bound sbb pop and jo (bad) cmp icebp push (bad) jno int test push testl test xor mov mov mov mov jge mov fld inc or cmp mov pop add jg pop mov dec adc (bad) outsl rcll neg sbb push not and sar adc incb push cmp jne add adc leave ss scas in bt push sbb (bad) xchg cli adc jo aas rolb and adc push push add push das rolb fwait loope xchg mov fcomp (bad) or cli dec cld inc add sub xchg ret dec mov repnz outsl sbb push stc or dec dec pop loope mov cmp sub or aaa jp fild sub xor pop pop clc and inc sbbb push pusha movl cs outsl sbb mov xchg jbe mov jmp jbe xor mov and test inc (bad) fsts add mov leave mov data16 mov or mov add push inc add jae idiv loopne add div test je movl (bad) daa dec pop pop xor shll int aam jge pop add js lods jle mov push push ljmp push cmp add inc ret outsb pop add sub add data16 xchg and dec inc add mov (bad) call adc mov pop dec or or or cwtl cmp or (bad) pop jae in loope fadd loope pop jo out mov or cmp cmp insl pop mov aaa loop lret or mov or or je xor xor xor mov mov xor loope inc push test inc fs (bad) mov inc mov or mov je push cmp push sbb insb movl test dec inc xor (bad) jo dec adc cmp enter add rolb mov lods nop adc (bad) outsl mov insl dec xor push js mov (bad) popa push adc or lcall ljmp add or sbb pop push data16 push mov data16 add add mov sbb mov adc rcr loopne dec inc pop mov lret fldcw shrb lods add movsl mov fiaddl rep push sub jbe mov jno repnz pop adc jle mov adc sub or jno pop sub pop mov adc clc jne clc pop sub pop das scas mov mov sti (bad) jae fmuls insb and inc insb lds push inc insb insb sbb outsb fsubr push adc add stos xor fs fistpl loopne or push lret cld jg lea je cmp jb sub nop fs adc mov test xor mov add pushf bound mov fs and or in mov mov pop mov dec mov sub sub (bad) arpl nop pop mov dec inc rol push push cmp mov push lea dec push dec xor lock mov fwait sti pop xchg dec std add xchg ret pusha push jg sub xor xchg rorb (bad) or and adc leave call jo int3 pop and cmp pop push inc popa or lock xchg and inc (bad) push xor dec insb push inc lods lods adc lods movsb xchg jno shr mov cltd inc orb pop mov push jg cmc mov cli or (bad) jb mov in (bad) jnp mov mov lea or jae es inc push sub sub mov inc mov dec cmp lds adc or sub mov cmp jb adc dec enter mov jne xor cmc pop push add aas dec outsb inc sub je stos push dec mov faddl dec inc cld adc ja stos popf enter or add pop fldt int mov mov jg jnp movsl adc xor adc ds mov (bad) mov inc add in mov rolb xchg jge inc (bad) or (bad) hlt fdivrs fsts fnstcw push add ret mov xchg lock mov in xchg cs push shr xor pop test push or pop mov jle push jno out cmp mov andl pop dec jb and pop dec push mov xor sbb or dec or and push push inc or jo jae es cmp ret lea or inc cmp mov or nop rcrl daa lock mull bound cmpb mov callw mov pop and ss notb pushf mov fnsave sub sub mov in cmpsl das shlb nop daa add xor and and cmp inc mov push cmp negl imul fmuls je insl addr16 adc call mov mov adc aaa xchg push lcall mov js lea out pop enter movsl dec test cmp rcl sbb lock ret inc aaa or add push shl ds pop xchg add dec inc dec inc (bad) ss (bad) jo inc push inc add lret mov out dec jne pop dec jmp ja lret inc jecxz inc jp cmp pop lods mov mov dec mov adc outsb test or push mov data16 pop inc dec (bad) add nop aad add adc sbb push and std lods mov bound jmp test dec mov sti adc mov jmp lcall pop gs xchg xchg je stos imul sbb aad adc fwait cmc loopne push ja push loope pop pop ret mov rcl das pop jecxz pop adc fwait pop sub in adc pop ret insb mov inc je push mov dec ret mov lods xlat test rcll sbb add sub add or std adc data16 push sub lea dec mov adc push nop xchg test jb jno roll xor jne cmpsl jbe add xor insl jge inc add cmp push movsl dec inc cmp popa sti cmp or lea cmp inc cmp dec incb inc nop ret fidiv add or inc push cmp xor pop outsl xor nop push or jg notl mov mov in rcr ret cmp jle mov mov imul jge xchg or aam fistpl or fcoms inc mov (bad) xor mov mov jnp xor movsb test push and call jne inc lret jnp mov mov or push xor or xchg scas in movsl sbb dec add mov ret movsl fsubrs pop add push jmp fstpl inc pop mov je js loop jae mov cmp popf cmc add scas cwtl or stos push add cmp lea jo test xor std out cmc ja mov mov xlat movsb mov std lcall push push push dec stc sbb xor sbbb insb mov sbb (bad) (bad) mov sub (bad) enter adc stos loopne or pop cwtl xor and test cwtl cmp outsb xlat test push jne nopl pusha pop test dec bound mov push sub ret stos jo push sbb cmp push cltd sbb inc push mov mov test mov add sub leave inc enter adc xor xchg xchg adc lahf (bad) jne adc push inc dec mov push pusha pop push inc dec out mov pop ret inc dec sbb data16 je dec shld adc sbb add cwtl popf sbb rorl and inc inc mov js jg or add sahf adc rolb sbb fwait pop and adc lcall sub mov adc add xor push adc fisttpl fdivs add sub (bad) sbb cmpl fidivrl fsubrs jg sub sub push and xchg xor sbb inc fwait adc push fmuls lcall add ljmp inc xor adcb xchg sub imull push arpl ss add mov sub jge or in add jmp nop stos sbb divb shrb inc sbb sub dec pop ja inc fildll push push push les xor xchg out int3 push mov ja sub cmp imul push inc mov and inc out cmp mov push imul mov out mov push mov push jo adc dec jmp int or sub push addl lods or inc rorb je sbb jae loopne pop out into std addl movd xchg aad loop lds out mov repnz xor into jmp jp inc jnp mov call rolb outsl sbb arpl in sti dec push add inc int pop shr shr sub add aas lret push scas (bad) mov push lea push or cld push outsb mov sbb pop and sahf cmp or push or dec push inc jns sub jl xchg das pop push outsb push nop add inc pop adc icebp jbe fdivp mov in and fdivp outsb pop (bad) cli inc fadds idivl mov dec jmp sahf lret repz daa popa jb mov mov mov push ljmp add cmp negl imul int3 dec sub data16 (bad) lock add fadds inc push test sub leave jge adc inc cmp jne or jae cmp mov mov mov push jg jbe push jno lock test pop push push push mov and mov (bad) mov fcomp mov lret ss cmp movsb jne push fs enter cmp repnz cs xchg or pop and pushf push and push cmp loope lods jnp mov add popf mov mov stos pop mov sbb push (bad) inc push loope ret loope sub dec xchg inc push sub add add sbb xchg push jae mov test lahf dec or xchg and out push aas pop insl insl sub mov xchg pop mov cmc jg fnsave loopne cmp dec mov push sbb and or outsb clc mov inc or pop out and push movl js xchg adc mov or outsb push jl cmpsl (bad) mov (bad) push lcall sahf mov arpl lret mov fbld push (bad) or mov fsubrl dec or sbb inc clc divl xlat add jo jb xor adc sub sub mov and or push lea inc adc xchg pop cs push movl add pushf or pushf pop fadds add xchg xor mov (bad) test inc enter cmp repnz pop jae divb lock sbb add mov mov sub incb sub mov cs mov test xlat ljmp int3 clc adc sub mov mov inc cmp and icebp fsub mov lea jo into jne pop ljmp rorb nop ret outsb (bad) jae sahf adc inc jb,pt (bad) idiv fnstsw or scas and add push adc mov inc loop pop in cmp pop dec and mov popa outsb xchg pop cmp and scas (bad) sti mov ret cs mov cld xchg mov sahf jmp ja adc sbb lcall and (bad) jne add fcoms push inc lea sub mov sbb mov push add test fstl inc or inc ja repnz sbb cmp add xchg sub dec xchg adc mov cmp aam mov loopne shll scas jnp mov mov mov xor sub mov dec lods mov roll sbb adc roll jae sub cmpsb push das scas les dec sbb jo sbb pop dec and aad cmp sbb or fsubrs push mov fldt iret mov mov lret hlt dec push push js dec loopne mov mov mov add ret fsubrl inc es iret inc pop mov push cmp sbb sbb (bad) std leave outsl sbb or adc dec dec sbb popa mov xchg cmp ljmp dec leave xor inc add decl ljmp outsl insl xchg inc test push inc sbb orl dec xchg ja dec or inc inc sbb dec and cmp shll dec sbb add push push enter iret fimul adc inc das mov dec jbe mov add mov adc dec push push push push adc jnp pop cmpl adc lods pop roll mov jg test ss mov push mov rcrl iret cwtl dec or sbb push xchg dec push lods in lock aam into imul cmc push push pop push or or ja inc cmp rolb or imul dec pop sbb stos inc mov and xor xchg shlb movl inc pop scas sbb dec and scas jl xchg ljmp push mov adc test inc in sbb enter dec mov xchg dec push sub sub xchg (bad) stos and adc or pop mov aas int3 pusha dec xor inc call push pushf (bad) je fcmovu xorl adc jg ljmp or out test or lds imul stos inc aaa lds (bad) mov xchg lods and dec scas test test push inc dec mov or mov dec inc lea les mov arpl sub mov add cmp lret lcall pop push pusha rolb or sbb mov ds sub mov test push push add or and shr or into out jle add fsubrs addl xchg push push cmp stos adc or fdivr fistpl xsave cli aad fcmovb loop push mov lea cmp aaa or add repnz nop inc hlt cmc mul nop inc push idiv stc nop inc push cmp sti cld jbe cmp std (bad) incl adc lret xchg insl scas jle adc dec ffreep out mov rorl cmp pop fdivl div icebp mov xchg or inc mov pop rcrb roll mov orb mov add ja mov push dec out inc mov ficoml or add jne push jp out xor adc pop or mov test in or mov dec jg test test fldl xchg jle lds repnz outsl aad out push or adc cwtl or jno mov or adc mov mov dec adc inc out pop clc fistpl mov sub pop shr (bad) xrelease pop pop popf nop inc jmp popa and push add jl (bad) into push push sbb cs loopne les jb lea sub xchg cmpsb out jg jl jle cmpb jne push daa ja neg adc add xchg aas push pcmpgtb ret mov in mov test mov sti or mov jmp pop jmp jecxz fisub rcl lea cli ja mov je loop push push push inc popa mov imul mov cs scas sbb aaa mov xor pop test lock xchg xor xchg gs sahf adc mov imul cmp pop xchg aaa mov sub push push cmp xor xor enter lahf xor xor adc loopne xchg clc out and jae add ret bound push enter shl cmp in out or or inc mov out or inc mov mov (bad) sahf inc dec mov lret ret sahf xchg pop and loop (bad) adc cld rorl pop inc push mov imul lea push push pop jo popa stos xchg popa sbb addr16 popa pushl or addl pop add adcb int cmp adc cmp test push adc insb mov xchg add jle mov sbb add cmp inc arpl cltd movb test mov loopne mov sarl lock or std add inc mov (bad) and mov jnp test push and adc push leave bound pop dec or fidivr in push lahf call sub mov sar cmp jl push cmp jbe int3 dec adc mov xchg push imul pop loop add xchg mov push sahf mov mov mov ret lods std pop in mov sahf or cld sub mov adc cmp div add push loop mov push cmp jb inc mov inc mov adc mov xchg fldz int aaa dec scas add add and sahf dec je lcall add lea add dec cmpsl mov and mov cmp sbb aas fmuls push push mov insb out sarl nop insl sbb pop sub mov mov rorb gs jns pop fadds popa mov add cmp jb clc or xchg out pushf sub ja inc cmpsl cmp and rclb sub jbe inc clc push jo lret mov mov mov sbb nop mov sbb mov dec dec out rcrb sbb loop add lock mov push push stos mov and pop xor loope mov mov das cmc adc stos mov sbb mov mov inc cmp push mov push clc mov push ret adc rolb push jb mov in in fcmovb or inc cmp push mov jle insl lds push jl push notl cmp jg xchg and jnp inc mov jl stc sub adc mov mov and push jbe (bad) mov xchg dec add jbe inc lea pop sub sub (bad) dec loope sub mov sub add add stos or cmp cmpsl inc shrb mov push pop jne dec fistpl push jmp (bad) mulb ss adc push std in sub inc jg test mov call mov mov adc xchg je sbb xchg dec orl ljmp repz cmp (bad) in push js fsubr sub or iret call fdivs (bad) or ds dec jne and push jae mov jge orb lea and mov add cmp pusha push mov pop das jno fildl clc shl mov outsl or jne popaw jl in jmp inc sub js rorl leave je pop imul push fwait adc sub bound jg orl notb sbb and scas (bad) or xchg js cltd or push scas jmp cmpsb and dec sub adc sub dec mov push jo out jle xchg jbe adc dec sub out add es inc adc roll fsubs mov add sub decl sti sti aad jbe add or and shll mov stos mov adc cld lock pop lea mov add inc sbb ljmp pop (bad) je cmp jge add push outsb sub push add je mov mov adc or testl cwtl movsb sti gs or jmp cmp clts ret cvttps2pi lds test mov pop pop pop add inc inc cld pop push mov fwait push jle add adc xchg adc fadd xchg or jle lea xchg cmp sbb mov mov xchg pop pop sbb add xchg add mov inc xorb mov adc outsl adc jle and call into scas nop sub add xor loope arpl jle insb sbb subl test pop sbb and xor xchg lds mov sbb dec nop insl mov fisubl adc sbb and push cmp arpl popa mov cmpb add pop adcl cmp insl jmp inc dec pop cmp ja sbb push clc jge cmp pusha in cmp xchg mov es fstpt cmp fimull ds xchg dec es adc mov lods and mov push pop repnz or mov iret fiaddl sub test or push jb push xchg mov (bad) mov out add mov jmp xchg fwait and mov insb add mov into test add push sbb popf or rol push jle ret and pusha rclb xchg repnz add pop xchg add loope call aad cli or add mov push mov mov xor add mov push mov adc or fistp pop jp add adc ja mov sarl xchg add jecxz sub lcall and and sbb jmp xchg mov pop ret cwtl outsl push sbb test imul and adc lret add fsubs mov mov inc int push mov xchg add mov sbb in inc leave je inc (bad) shl das nop shl sbb or mov loope lret test out cwtl cmp sub inc pop arpl xchg add fnstenv adc lcall add popf cld stos mov push sbb int jno push dec fadds popa lds test loopne pusha inc mov dec rclb mov inc aam and jae pop mov cmpsb cwtl loope and jge or mov scas lret jo arpl in jo imul loopne xor mov xor xchg or add mov adc cmp fidivl scas or hlt pusha dec cmp adc dec cmp fidiv fistp int or pop push cltd enter jp mov add pop sbb mov push popf (bad) fidivl inc mov mov sbb les rcrb je dec ja xor repnz mov loopne xor pop push fsubl mov push stos shr xchg stos mov es pop lret push xor adc js nop adc or mov shr inc (bad) out fsubrs inc pusha add jmp pop mov sub cmp sbb mov test pop lods inc pop movb mov dec jne push sbb mull std cmp pop pop jge mov sub (bad) mov add and out add xlat pop setbe mov pop pusha mov call roll inc push ljmp roll mov dec in lock pop ret mov mov jg jle cmp jo xor add mov jnp les push xchg sarl adc xor sub adc subb inc pop jl orl ret movl movsl mov push stos fild inc not aad out dec (bad) adc not push inc mov dec or dec mov dec cmp pop lea push dec mov cld in or dec mov pop ret cmc mov or adc sbb das dec sub push and je mov push mov fstl cltd (bad) movl xchg outsl dec sbb mov pop and mov push mov add es pop adc dec adc jns ret sbb cmp add adc jb inc mov add jle mov subl sub stos fstpl mov xchg mov in pop stos xor lds add xor xor xchg adc ss popa push lods inc mov out inc adc and cmp das inc loop cmp shlb inc arpl add in pusha shrl outsb dec sbb sub cmpsl add aaa cmp loopne jo cmp sub add cmpsb xchg lret mov xchg pop pusha pop push inc (bad) ret mov add rcrb aaa pop sub cmp or jg mov ficompl leave push mov and stos sbb adc shrl (bad) in pusha mov (bad) (bad) bound sbb loope movsb test flds xor inc jne cmp fstl lea dec pop insb test repz or dec push mov add inc pop push in sbb out adc nop inc fdivrs sbb add adc sub adc ds mov or add mov and mov sub sbb pop add add inc fsubs mov and push pop and mov cmp pop pop aad jnp jb cltd decl loop sbb test inc sub sbb and ss xor adc dec mov or outsl arpl mov add lods jl cmp nop xor mov inc mov or mov sbb adc sub pushf cmpsb xchg adc sub or in mov mov pop pop sbb pop arpl (bad) add push or add in andl dec or mov (bad) ffreep stos add ret inc xor push scas dec adc sbb aaa inc mov adc nop mov mov icebp adc inc dec int3 inc mov jo mov aas add push push dec push dec das push inc add in mov dec mov mov cmp sti pop jbe cmp mov negl loope dec fs mov jle xor int cmp add lahf or push enter sub scas mov add enter and call mov in lods inc rclb mov aad cs mov lea out pop nop or lock addr16 inc add push mov lock and les push push (bad) fimul cli enter pusha jle xchg loopne push fcomps jne jb and adc xchg push xor (bad) fiadd mov push and push inc pop push jnp adc adc cs pop xor mov jnp push mov cmp mov icebp fcmovne pop dec push sti je cmpl int3 add je or pop pop sub push mov jp mov add mov inc xor (bad) xor shrl push add pusha fs xor shrl jo js jnp inc jl and push test in mov inc (bad) test add mov jne cmp xlat frstor pop jge test out or mov push add js bound int3 lea pop mov mov cmp dec rcr subb jbe mov lods jmp push loopne xchg jno test jbe jne,pt dec sub add cmp mov jnp cmp jbe add pushf sub mov adc xor push in push (bad) test repnz movsl or movsb or dec add add jns mov mov sub aaa negl xchg fildl dec sbb dec in sbb loopne jle jne fstpl mov iret mov je adc aam sbb sbb mov xor jb (bad) adc sbb ja inc cmp jb sbb xchg or cltd dec inc mov outsb std mov mov sbb push aam test add (bad) cltd add add (bad) sbb call push add jmp call and inc lds or sub mov pusha inc sbb adc dec inc inc pop sbb das dec add inc add loopne imul dec cmp fs sub xchg xor adc sub popa push pop mov (bad) jle loope andl lds in fstpl pop sub adc mov push lea shrl ror push int sti add mov mov xchg and in (bad) lea xor (bad) mov je sbb testl cltd lret push xchg dec push and insl mov xor (bad) sti mov mov push mov cmp lock cmp jecxz je jmp cmpsb pop add adc lods mov sbb rorl mov xchg insl pop movb mov push shr mov scas fnstsw js icebp jae mov mov xor mov jbe and shl mov jae mov outsl push inc sub or xor and push enter and xchg mov lret mov jne push idivb and sbb aaa sub lea loope sub test cmp or clc shr pop jne cmp adc mov lea dec dec and (bad) je repnz sub sub orl jne jecxz test std rcll dec fsubl and ja or and add sbb mov mov add push adc adc fmuls cltd lods in cli or jb adc subb push jo sub inc sub cmp xchg sub call and je jne jbe,pt cmp fdivs sbb push sti xchg (bad) pushl pop lret sbb add andb mov adc add fisttp cmp mov mov adc fiadd sti add or push push dec jne daa idivl cmp pusha adc pop (bad) mov inc aad dec sub inc sbb and jb hlt push mov sti jne sti enter repz je push and mov add jge push pop push sub jnp into inc push sub sbb pusha adc sbb or dec jne mov mov xlat movl or inc sahf adc add mov push or and fucomi jo std in jbe jbe adc mov adc popa call (bad) xchg adc or movsl sub add mov inc cmp mov dec cmp in rorl ja mov aam call in hlt mov pop dec sub hlt pop jo std mov in push inc xor add push enter mov jne insl or out xchg xchg sub bound xor (bad) rorl mov sub or daa xchg mov cmp jb mov cmp inc adc xor pop mov nop/reserved jnp pop cs inc jge and xor jge lock push inc sbb (bad) xchg jae sub dec test jmp mov iret iret sbb sub inc sub mov push test push and sub mov push bound jbe or loop fdivrs mov xor lret loopne rcrb lea add in lahf (bad) imul xor shr sub out test jne add jle add dec jnp popf jle push in negb ss cmp pop mov jecxz add pop out dec add lods imul xchg movsl lret push dec jb and movsl or xor xor add mov es in arpl pushf std sti inc cmp jg fimull xorl add mov fmull cmc xor jns jae mov pushf sub add idiv (bad) fimul jb mov out cmp jbe sub mov mov inc inc dec jne dec mov addr16 jbe,pn cmovns push push lods adc (bad) mov adc dec cs sbb and mov push inc pop push cmp push jp cmp adc test mov lock mov pop sub mov jbe or mov mov fildl fadd fcmovnu jae push mov dec or jmp lea sub fwait inc or mov rorl pop dec add das push shll pop ret add fnsetpm(287 jb mov enter out cmc stc fcomp ss push inc mov dec mov push sub les data16 insb inc and push add mov push pop dec jae movsl xchg push (bad) mov sar pusha ja movsb xchg cmp cmp in add out out call pop pop xchg pop gs sbb add cmpsl pushl pusha and test sub and add lret test add or loopne enter mov aas adc outsl mov sahf sub add rorl decl mov add (bad) lret dec xor dec sub mov arpl or fisubrl and ja inc sti jae add fadd xor rcl enter cmpsb jmp inc (bad) in call lcall lea cld cld push ffreep jle lea push sbb ret xlat je sub inc inc leave xchg pusha mov mov cwtl and mov leave and jl cld test iret outsb jnp std jecxz ja mov cmp stc sub das repnz lahf sub mov fadds add test or add outsl push out cmp out mov lea (bad) loopne and (bad) or subb daa and insb mov mov push jmp pop push push pop add lcall (bad) in xor imul sbb sbb xor adc adc or or xor or fwait cmpsb jmp pop and add add fsubl mov fs inc add and (bad) mov dec mov mov imul dec fcomps push adc fdivs mov outsb inc inc jb mov cmc popl pop mov jl mov xchg ror out dec je rep pop or mov mov out ret je ficom call mov in pop jo sub sub (bad) xor (bad) insl fildll fimul jle push sbb cmpsl test cmp pop jae mov cli push leave jmp adc sbb iret cmp or sti mov sar cmp push add ja mov mov pop jmp xchg push neg outsb or and cmpsb repnz pusha inc das jne jg insb hlt push pop pop xor push pop les stos inc add xchg push rorl pusha xchg jbe push push mov std jle or sub inc (bad) xor pop jno jmp dec cmp andl pusha cmc cwtl push mov inc outsb and lcall push adc mov xor mov div cwtl sub adc xor lods inc aas mov sub inc or int3 or or (bad) mov aas movl movsb sub rcrl mov dec push clc inc push inc sbb jae add add pop or pop sbb ret jp inc scas add jno add fisttp mov arpl adc sub movb dec sbb sbb aaa stos dec insb mov add ret push cmp add jge stc cmpsb dec jo pop fnsave inc in daa mov add add mov pop or (bad) sti testb jne adcl mov pop push lds dec sbb bound arpl rorb imul inc fdivr cmp jae mov cmpl test add movsb mov loope adc mov push adc faddl dec movups sbb sub jge push std mov adc or mov push xor loope lea or outsb push fimull adc jecxz add inc incb lods adc lea sub cld imul push mov data16 push jge clc push dec dec cld push (bad) jo sbb mov les in push gs fwait jne sahf cmpl or clc or cmpsb dec xchg mov das lock mov adc sbb ret mov inc stc and lret pusha nop or xchg and jo loopne jb in clc movsl jne test js add pushf add roll pop (bad) cmpsb ss push and inc xor xlat or sarb test cwtl fistpll fiadd insb inc hlt cld andb add cmpsl out fbld test test cmpsl (bad) jne or mov and fild jns test xor xor xlat push cmp inc dec push pop mov mov ja fbld jne and mov inc fist sub push add pop cwtl shrl mov or or rcrl xor imul daa mov add or mov push add ret sub and adc adc push add xor test lcall xchg cmc (bad) sti sbb add dec gs sub push in jno pop pop mov loopne or in jg push dec aas mov inc xorl add stos mov sar pop adc push cmp jl decl js pop pop xchg mov jmp sub in mov xorl mov pop adc jl pop in mov setge dec dec mov jo push adc cmp insl mov add pop sbb adc add loopne sahf jge xchg push sbb cmp jno pop jne mov push push inc pusha jmp dec push and mov pop mov je push jbe int3 cmp icebp add add rol push sub nop mov les call rcll sbb rclb sbb adc jne push call pushf xchg mov push sbb fimull sub push dec fild or fmuls in ret mov add mov (bad) or daa jecxz roll push fdiv xor (bad) mov xchg add test dec inc out jl sbb sbb sbb push xchg mov add (bad) mov jbe mov pop aam outsb sbb push push sub dec sub mov divb fs rcrb insb aaa add jae notb push and into test lret test or mov pushf pop jle call jge sti xor incb jmp xor aam sbb push pop into jo mov push aam test ret add mov repz sub adc and xlat fnsave mov jmp leave and loopne nop mov cmp sbb pop not nop fisub repnz insl std push call dec xchg icebp inc aam add inc cmc (bad) aaa inc repz (bad) loopne imul jne mov lock out jbe ja lods adc aaa push (bad) and call mov mov inc cmp je xor push adcl repnz dec cmp mov fisubl ja push mov test mov notb xor pushf jecxz mov scas dec ds ret movl (bad) jp inc push push out test cmpsl add sbb sbb push cmp adc ljmp test rcrb scas cmp jne inc decb outsl in pop mov std inc or ret fidivl pop out aaa and mov sub push js sbb stos adc push jle popa dec mov aaa or mov outsb xchg sub push enter xor std subl outsl push add add frstor push and jg add jg mov (bad) outsl inc add push jbe outsl ss adc jg jg jo pop loope xorl sbb or pop xchg adc mov pop mov cltd mov sbb lret cmp push adc xor sub movsl push fistl in or or jne inc add pop jg xchg dec or cmp je sub push push push sbb add ja add (bad) mov shrl rorl sub cld fsubr cs inc jge and movsb sub push test push fsub jne outsl rcll in into insl mov add cmp push add mov das pop sbb sbb adc sub mov jge loop out out shrl cmp xchg mov fnstenv (bad) testb pop or out add movsb and ret repz nop push inc inc jge cmp ret inc push inc inc inc push fidivrl adc rorb push subl mov xor cmp jno mov hlt (bad) adc pushf mov bound adc dec adc movsl xchg lods jge add outsl dec hlt rep jmp neg and ret jmp lock mov push inc xor (bad) cld sub push push sbb je mov xorb pusha inc xchg or or jp inc and inc fisub or adc cmp cmp jg push cmovbe jl sbb push push andl sbb inc mov inc or jb pop imul je or push or (bad) mov adc pop push sbb mov sbb add jl lock sbb xor stos fs imul add add cld push sbb xor add sbbl inc jne adc mov and xchg xor push jl adc or pop push push fcoms or mov loopne mov enter enter inc and adc es inc inc lock and rorb xchg ret jae in movups jmp xchg mov sub inc push bound dec sbb inc insb jbe es mov insb push mov mov pop add mov fwait rolb push add ljmp mov push push roll insl adc insb mov data16 add mov mov aad pop sbb mov or cmp jb mov lock int3 and pop or in or mov push out and dec and push and or xor dec loope xchg pop cmp dec sbb je aam in mov push xor push jp adc fldt push movsl sbb jmp test add mov outsb psllw pop cmp stc pop or aas xor arpl in push adc or mov sub mov je sbb imul push cwtl pop mov and js jp and movsl ds jmp push adc cmpsl sbb sub push add mov dec mov mov push xchg and xor test cmp adc xorl inc bound mov xor jl shrb out gs or jno xchg jge and adc pusha cld jo cmpsl je les add add mov pop addr16 push pusha out lods testb daa cmp push and xchg jo adc adc jl leave jmp push insl daa add jno add lcall adc sub movsl enter push cmp (bad) pop (bad) inc dec inc or pop mov and xor test dec rcll dec push test (bad) out xchg aam mov mov outsb push ljmp push lcall mov mov js or les mov (bad) jo icebp inc je and ja int push inc xor rol inc push and pop test pop cmpsb shr add mov mov mov movb jb cmp out jbe or cli mov push dec jl jge pop rorl jmp add sbb push add push mov popa xchg stos fimull in mov cmp sbb jle je mov or test xchg cmp lock and rol mov pop inc pop add adc push cmp mov push lods cs pop xchg lcall testb jae push jb push hlt xor push inc roll inc cmp je lds inc add pop out sbb add roll sbb mov pusha pop hlt or pop xchg pop xor popa or mov mov in dec or xchg sbb ds and push int3 sub por cld ret mov inc xchg out pop push stos mov jb xchg sub pop or xchg rcll (bad) or jle sbb add add sarb and adc nop add push mov iret out pop (bad) ficompl add or lahf mov add outsl rolb int cmpsl xchg mov add das lds add mov add loopne frstor je and in xor gs (bad) xor add aaa ret push pop pop test ret int3 add mov pop or jae xor jo jne (bad) jecxz pextrw mov es (bad) cmp push add xor test add cmpb outsl mov inc add test add mov lea xchg adc and lea sbb into lea mov mov xlat inc in jbe (bad) mov inc jg jbe imul xchg jl je xchg (bad) add xchg xchg imul loopne mov cmpl dec fcomps pop and sub mov add pop arpl sbb cmpsb loopne add xchg cmpsb adc push push aad enter jae daa sub (bad) insb fs cmp dec or jmp dec lock xchg push lret mov mov jo push js inc jmp mov jge and inc xor rcl mov xor inc push xor fisttp push in add sbb (bad) sub inc inc cmp je dec jne mov adc cmp shrl lds lds ljmp (bad) das clc mov mov lahf lods in pop mov jne sbb ja clc rolb mov lock jne lock mov or and cmp outsb bound lahf push jmp or push or cmpsl inc (bad) jnp test or jae data16 je sbb aam mov repnz xchg fisubl test sub mov push inc pop ret and cmpsl das and xor pop sbb push mov mov pusha inc hlt insb jecxz test dec adc mov shll mov mov mov add clc add pushl ret add add icebp call test inc adc jmp push pop add int inc jmp insb jg sub ret or std inc sarl add push in je add or je ret mov or adc imul add or mov cmp mov lea stos clc ja stos add sub mov mov inc cltd mov mov inc sub dec adc adc adc push lea xlat mov sarl lock dec je ret jbe call notl ss out dec mov pop ss mov movb push mov mov add cmp ja out lea sbb push call mov fmuls fs or lock push es loopne mov push push imul and in inc rolb pop fcomp push and movzwl ljmp sti std push sbb push jmp adc je and xchg fmuls test jmp shr mov jae lahf xor sub mov lea mov cmp ja dec push pop roll addr16 push and and mov negl pop jmp int xor inc inc jp push mov ds mov sbb pop js loope ja jge add add and pop (bad) mov push adc imulb mov push subb push mov (bad) mov mov or mov int movsl pop loop sbbl int3 jne mov pop jo in pusha addl or mov or sarb adc lock call jl mov jmp cmp js mov clc ffree stos or lahf mov jno or movsl stc adc test mov pop cli fisubr aam mov mov je or push (bad) xor jb and clc shll (bad) jmp sar mov push mov pop repz insl call mov inc sbb mov ror cmp jnp and jbe push (bad) imulb mov test or nop in mov lds add mov je mov lea or cmpsl sub ja pop orb sbb inc cmp testb dec add jbe mov inc inc cmpb push imul mov and xchg add jb mov xchg movl mov push in stos out add inc pop cld inc mov inc inc inc dec push mov and lahf mov ret add imulb pop mov pushl lock mov loopne or jne inc add add clc insb mov jnp mov bound xor xlat aaa bound in orb sbb popa cld divb movsb dec loopne cli lret push rcrb insb mov mov push mov in cmp fadds and (bad) cmpsb mov cmp mov add movsl jp sbb jae xlat dec pop mov jne sbb adc jl sub push cmpsl adc pop mov testl call repz ss inc mov ffree jo pop call fisttp or in sbb add xchg (bad) out cs inc rclb inc jmp sbb idivb mov mov jmp jne sbb mul mov movsb jmp xchg aam and mov add jmp jmp xchg pusha pop jo and cmp xor (bad) loopne pop shrb in cmp push adc clc sub pop movsl xchg mov add (bad) cmp pop push or pop adc mov or sub or addl roll mov pop xlat mov sarb mov pop jae inc or mov adc or add in sub adc or or push pop adc inc mov sar out iret pushl jae arpl (bad) push pop cmpl pop jle jbe cmc adc add adc inc outsb dec jne ja inc mov push push sbb xlat xor mov mov or leave ja pop push pop cmpl cmp jg je lcall adc cmp add test test xchg je loopne mov sub aaa and inc sbb lods imul push (bad) mov incb sbb loope sbb mov cmp mov xor mov xchg fstps sub add ds leave lock bound dec and lods sbb jo inc push sub nop push pop add push pop push (bad) adc mov fs out add or dec jo icebp mov jne add push and mov jne fucomip push push cmpsl adc push ss shrb or lret jmp push stos xchg and mov mov lock cmp inc adc sbb pop cmc or leave or xchg outsl dec fstpt add mov adc test nop add or and jne or add push cmpsl rclb push aaa adc mov lea add lret mov and adc push out pop mov negl negl aaa lea mov ja stos lock mov cmp imul adc mov add or and mov lods in hlt and insb hlt push cmp mov add add bound add adc jbe xchg icebp mov fstl xlat testl mov sub lea dec or sahf dec pusha pop add cmp mov or or mov add les movl rcr insb les jo inc xchg mov lcall jbe (bad) mov add jmp mov push sti jecxz jle adc mov scas mov mov adc xor sbb aad adc lods and dec test pop sub fwait push in outsl jmp push stc and fistpl fwait adc dec mov hlt and inc push je aam hlt pop adc inc sti push sbb or xchg jle pop loopne cmp adc ffree pop adc and ljmp mov push mov or fcompl xchg or hlt jno xchg out lock fildl mov lock add add sub sbb adc call fisubrl dec je dec inc pop jb daa inc lock cmp (bad) (bad) adc pop mov jnp inc scas or push int3 mov or sub xchg js (bad) aas les rcll pop aad decl lds mov inc and stc sub in pop adc jns jne mov and pushf ret add pop cmp and inc add jae xor mov cld and mov xchg or mov or mov mov fs add sub mov adc mov and inc test mov andl dec call mov fild mov inc icebp pusha pop add jne sbb clc mov cli fcomps mov clc or mov push dec push adc jb bound js add pop push cmp xlat mov mov add test sub mov push mov or je mov mov adc sbb sub mov adc jbe sub adc loopne jecxz ljmp add lds nop fist loopne mov ret mov outsb aad mov cmp and pop mov adc inc add adc add loopne test jne mov shrb fsubr stos nop add loopne add inc sub je mov push add mov divl add or (bad) pop lds aad mov (bad) out inc js pop enter mov adc and or mov and xor fcomi mov sbb insb test xor js mov (bad) pop mov pushf and mov fdivs or (bad) pop mov shll or dec or scas (bad) jne inc je sbb jg pop test jae adc int jge push daa xchg ret inc mov mov out mov dec or cmp test mov mov insb add push pop sub inc fimul inc loope daa pop jne mov fldenv in lods shll xchg pop das aaa or push pop jnp cmp xchg fstpt lea add sbb clc dec mov idivb push push cmp mov add and jns fistl (bad) sbb incl test cs add add ret xchg loopne jmp mov mov pop sub je cltd push dec idivl (bad) adc and sar cmp pop loopne or or lods rclb and jmp fs pop pop insl mov and pop std sub adc mov dec jg iret out lea push js jge mov mov les xchg push pop jo inc insb orb mov pushf popl inc rcr adcl pop popa rcll fcoms mov dec add cld push pop cmpsl mov sub rorb sub (bad) or pop add mov push rcll push or mov add add mov mov or mov sbb leave or xchg inc pop pop (bad) jle lods add cmpl push in push test fistpl add inc incl dec xor call inc dec test mov and push mov out ret testb es je cmpl or jne jno jmp cltd cmp inc jne jmp inc inc cmp adc cmpl jne push sbb lds and pop outsl or push enter je lock cld ss add push mov out adc jg mov push sub sub fstps inc pop push jge or enter gs test les jge add pop and xor aas test je or movsb push jg adc iret lds inc aam sub flds loopne mov push sbb (bad) mov or mov mov or inc loopne hlt push fwait sbbl ret xorb mov loopne call dec push xorl dec add push mov cwtl ja fsubl sbb xchg add mov mov dec mov rorl sub fiadd je dec je sub push add jbe sbb or or gs add sbb or adc jnp pop mov addr16 cld (bad) sahf mov lea dec add or insl mov and enter jns add mov adc call ds or (bad) push call cmp je mov push adc lea popf stos add pop ds push push cmp or add adc mov or dec push jo jae mov jle xor adc add xorb push xor gs xchg mov push fs jg inc lcall jne dec rep incl outsl lods add in or xor aam int3 cmp rdmsr xor imul mov push xlat mov scas loope pop mov inc add insl subb push in ret jecxz mov xchg inc pusha loopne mov insb pop lock inc mov (bad) push gs push movsl fsubrp xor and or test adc add mov mov (bad) loopne scas negb and cmpsl xorps push xchg (bad) fistpl add jnp inc mov mov sbb ss jecxz flds mov lret xor inc inc call lret or aam sub aam rorl lret or xor or sbb cmpsl inc nop int3 or mov sub scas pushl lock in add xchg add je or jae add sbb sti jae push test dec fimul xor icebp es inc pop insb aaa inc movswl dec or insl pop adc jg das mov int3 (bad) mov jge mov jo scas jne push inc pop jp aam mov mov sub add jle adc mov xlat int3 sbb andb inc (bad) xor ss mov insb add es add stos fadds sub sub icebp or loope pop sub push movl loopne add dec or clc lret cmpsl test ret loopne enter addr16 mov mulb enter cmp jle pop cmpl leave sbb out add mov add add je sbb mov pop cmp or mov inc mov push xchg cmpsl ret cmp mov mov xor cli jecxz push push mov icebp sbb jne cmp fcompl fs pop test fsubrl fadds daa cmpb jne xor ret pop mov jmp ret xor insb push jae cmp inc test jg js scas lock add rol add mov adc fidiv ret aas dec adc mov ds add shrl xor add push jmp adc iret xchg add pop adc mov push divl shrb fldt jne fisttpl mov ret lret insl in idivl and in or jne and ret cs mov ficoml push call inc push sbb sbb cltd push push sbb add mov xor addb cmp dec jmp jne sub adc add je test jg mov cmpb addl add add inc jmp fidivrl mov psrld or or cmp stc inc inc lods mov repz sar dec mov or incl cwtl in jns inc rol push push aad dec sub (bad) test sub imul fisubl or mov xorl sub sub xor shlb ss dec (bad) loope inc (bad) mov mov fstl insl dec mov inc adc insl sbb push sub sbb mov lds dec xor mov in (bad) fsubl and push mov nop push pop mov sub pusha jne mov test cmp jmp pop fs (bad) mov in pop mov pop jnp jbe fnstenv mov fist mov insl sbb stc gs or dec cwtl lock and ret out les popa icebp mov dec in dec hlt mov xchg clc pop sub ss dec shrl mov xchg or pop push (bad) pop mov std and cmp jg adc and xchg sbb cmp inc cltd stos push add mov sub addb sbb test outsl mov inc push pop jb add xorl xchg pop adc add sub adc lcall test mov sti cld jns outsb pop fisubl sahf mov inc jns mov adcb (bad) imull mov aaa and movb xchg sub es jbe push pop insl xorl inc mov cmp jbe or out cmp (bad) stos mov les ljmp repnz mov add xlat in lahf push repnz and pushl adc int cwtl inc fcoms cmp mov cltd xor or call lret and andl pop adc push pushl jne add push or adc bound jp nop add push push jno or xor or and push pop mov daa xorb cmp or sbb fsubrs faddp or fisubrl out (bad) ret (bad) mov or sub inc loope push iret test movsb js mov cld cmp leave cmp jne inc stos push and adc pop je add jl adc or frstor mov ljmp add divl cmp or jle andl inc sbb testl jl inc add push inc sbbl sbbb cmp inc jle stc dec cmp xchg in nop lahf test cmp (bad) xor sarb xchg sysret fmuls jbe push rol push mov in mov imul insb push cltd leave xchg (bad) cmp cli dec xchg pop mov mov sbbb lock and je push adc and imul and and insb xor (bad) or push pop inc push jne lods mov sbb es xchg arpl sbb iret mov in cmp cmp mov js insl add dec ljmp xor lds jno test lret inc push mov (bad) lods xchg xchg cmp (bad) mov sub xor push push push cmpsb push outsl add or mov cmc cmp gs or sbb add mov pop mov and push in dec adc mov or mov (bad) xchg loop rorb inc adcl adc sahf xor and (bad) mov or cmp add lahf or mov pop mov ret push inc dec adc mov ret add inc test mov pop int les xor sub mov add dec add inc decl mov popa (bad) fmull add xchg sbb pop (bad) pop jecxz (bad) lahf je and add rcrl inc inc and test jnp je lods es pop data16 dec in rorb inc pop inc cmp into inc cld (bad) nop ret mov jl pop inc ror jne lret std push xchg outsb insb je mov inc sbb dec nop cmp adc mov in sub fdivrl fcomps inc daa ror sti mov add xor adc leave sub sub daa push (bad) or cmpl sbb jecxz cmp xor sub pop cmp lahf iret jne in dec scas push cld mov sub shrl pusha repz (bad) aas jae dec hlt hlt inc rorl add pusha (bad) ss pop or imul jl pop add push push inc dec mov xchg test fmuls jo push hlt jecxz inc xchg push cmp faddp notl aaa add sub pop add sub and int mov out lds je loopne xchg arpl cmp pop imul test push xchg mov add or jne push mov mov push sub push xorb and cmp jmp push mov push inc pop rcrb and xlat or shrb cli add bound outsb cwtl ret jmp or jne cmp xor or inc jge inc pop fstpt add js imul ja in jne inc adc mov mov push add push adc push mov sbb push push push mov mov iret mov jmp fisubl pop sub das mov enter mov stos (bad) rolb add sub add and add sub xor mov or lock roll (bad) call pop cmp pop mov aaa ret (bad) mov mov (bad) stos inc push mov xchg push inc mov inc mov fs add enter xchg sub insl fsubs xchg pshufb add push shrb lods icebp jl jmp or jle push test ljmp mov in dec test sbb adc ljmp loopne sar and shl add call inc add mov (bad) lock scas mov out leave bound jp subl jge adc xchg mov inc xor inc push hlt or cmp fdivr orb jmp (bad) dec subl lea fistl js cmc push push and das inc sbbl ds ljmp or add or jle xchg pop daa movl jl mov lods xor mov insl outsl inc and insl mov adc mov xchg out adc mov mov ds (bad) mov push dec mov test mov push inc dec sbb enter pop test cltd jb scas dec cmp cli add dec cmp add rcll insb lods push sub xor lcall mov jb push push mov mov push xchg ds push scas mov xchg popa sti xchg (bad) xchg mov out in out mov test aas not mov push insb cmpsl inc hlt mov jne dec inc push xchg dec lock in adc mov out movsl stos mov or push pop mov xchg jmp test lock adc pop pusha xor sub (bad) fnstcw (bad) out rcrb pop cmc cwtl or loopne xor les mov and ror test push cmp icebp mov mov add cmpl adc add and lea mov cmp sub or gs loope pop push sub out stos mov (bad) xor mov pop rcl popf jl inc cwtl in push adc nop pushf adc aad mov test jmp push inc add in movlps push push mov pop push sub movsb loopne sbb jne push loope xchg loop xor sbbl dec adc dec lock and jl jecxz inc popf fldenv or test into add pusha sbb pop je pop lahf cwtl pop pop cwtl adc shufps js or popf push pop push add mov cli stos add ret push movsb andl lods pop add add es (bad) adc enter adc sub cmp shlb jb rclb pop stos push shll clc or pop (bad) sub lret cld shr jbe xchg mov (bad) mov xchg int add dec add push in test test or outsb lea dec enter ret (bad) fistp sar dec cmp jbe push pop mov cmp inc mov movsl add xorb jmp dec add shll (bad) sub decb jmp lea sbb mov pop cli fcomp mov cmp pop or fstpl push mov cli add dec fsubrs jne xor jne hlt stos or sub adc sti add and dec pop cmp jl push into cmp cmp inc adc fnstenv hlt fidivl mov jno insl inc mov and sub je dec add fnop or mov sbb fldt jge add scas dec dec dec or pusha cmp xor ljmp test pop jmp out icebp rorl add xchg jne mov dec paddd mov mov jae cmpb fsubrs xor xor insl test cmpsl or jmp and xchg scas add (bad) mov in ljmp jbe je je xor test addl lret fistpll mov pop mov add push mov sub pop or xchg fldenv mov sbb movsb mov add in iret out adc dec adc pusha dec fildll movsb pushl push or pusha mov adc sbb sbb in pop mov in sub cmp pop lea imul inc rol inc sub mov sub insl or sar xchg aas and adc dec push ljmp lock xor inc shrb ds icebp loopne push out js rclb mov idivb mov push add or adc cmp dec adc (bad) insb lods andl and icebp cmp jbe push in jmp cmp inc mov call add nop fcoms mov push ret dec xor mov popa add xchg outsb icebp push xor jge dec imul into test std cltd pop mov sbb addb dec jne push sti test mov stc cmpsb sub popa push call jl xchg add cli adc (bad) pop out ja (bad) pop sub inc adc dec fildl inc movd pop sti out sbb push movl movl addr16 jne add stos add sti pop jmp xchg or xchg fs (bad) pop aad inc push sahf sub enter fdiv test test dec inc push js insl outsl mov and ret cwtl xor leave mov cmc add xlat sub nop sub int shr mov lock rorb dec cmp in out pusha fildl xor test jne pop sub (bad) xor (bad) mov stc add sub sub sub jbe dec pop pop shrl pop sahf pop inc adc cmpsl sbb test fcoml es add pushf nop fbld frstor dec or or jg inc mov sub add shrb xchg movsl test call add adc inc mov cld ljmp mov mov scas (bad) or imul push inc pop adc pop sbb adc mov mov jmp sbb nop mov lret test dec aas cmp insl mov cld xor or cmp inc cld mov cmp pop add loop jge js mov dec ss xor test lahf imul rcrb int loopne inc cld repz pop sbb push sbb dec dec push lret dec out dec mov outsl push dec dec push add dec and outsl ja inc fildl ja or mov xchg das rorb adc cwtl icebp mov jae cmovp aad or push push cwtl xchg inc clc cmp mov push bswap mov adc cmp push into setns jns dec or sbb add cld scas push test cli xor (bad) xlat scas mov add loope ss and jge jno movsl sbb mov subl jbe add imulb mov jo push inc movsb cmp adc incb or sbb outsb lds push jne push pop and leave add fnstenv jmp jnp add rol adc insb nop xor sbb lock rorb or lret fdivrl mov adc sub dec in add cmpl mov or in sbb cli jmp or je je mov mov push lock dec (bad) iret jne fdivs or insb loope pop cmp cmp xchg out jmp pop dec scas out (bad) dec inc pusha push out (bad) jge into jne pop push push pop xor inc mov ret call mov sub icebp pushf add and push (bad) fcmovnb push jo decl pop cmp stos loopne je out es sti fwait arpl jno in and mov decb dec outsl loop pop dec in repnz jmp cmp (bad) iret mov jae lods pop xor sub jae inc arpl pop and adc arpl and or or lea xchg push fisttpl and pop ret xor or or out or mov cld or sub or fistpll stos mov aaa mov mov adc add lock aad xor inc mov outsb push push lea jne,pt cmp ret outsb dec cmp add add lea push rclb test movaps test and inc inc add popf or adc inc nop test add adc inc insb and ljmp pushf pop mov pop jae inc lock popf pushf pop sub je push popf test sbb (bad) call pop ja adc clc pop idivl push add es add push je loopne in ss popa xchg out cld sub xchg mov imul mov add sub or adc push aad sbb xchg add jno sarl xchg add mov push and xchg adc or pop aam mov push xlat dec mov fmuls pop xchg insb dec dec cmp fildl cmp daa negl scas push mov lds push push mov lods add and dec push cwtl add adc out es rcll xor push push push inc test aaa dec and jne xor adc dec test out sar or inc jns (bad) notl jmp cmp inc and push fistl mov and xor repz stos pop lea push xor xor pushl and inc mov mov mov sub push mov dec pop inc cld push xor mov cmp enter or adc (bad) jno lds and enter adc add jno mov movsl mov push push test jne cltd cmp jb xlat aad pop jbe sti jb ret sub sbb push int3 add jno inc in push adc and cmp loop add clc arpl push or call push dec dec movsl sub jl mov ret inc and call mov add test ss cli add out mov mov rcrb and cltd loopne dec jb lods mov (bad) test fsts push mov push add inc xor (bad) ljmp cwtl fimul iret (bad) jae and mov lods inc and inc jg sbb add xchg sti or jmp (bad) pop sub je add jo aad fs (bad) clc sub add jnp sahf mov add pusha pushl fwait jmp mov cmpb sbbl aas call je clts xchg xor jmp mov sahf mov out mov icebp adcb fisub mov (bad) adc ret js or cmp adc mov pop (bad) and jo jbe sti or xchg stos rclb pop sti add sbb out mov mov inc pusha pop inc dec jbe rol inc inc stos out les adc out icebp jnp mov fmull icebp adc stos adc xchg add push pop add rclb mov fcomi mov push sbb inc inc pop push fidivl push movsl jmp clc (bad) mov je push push fcoms push or cwtl adc mov cmp (bad) flds arpl mov movsb sub xor jl xor lret ret inc bound (bad) (bad) (bad) dec xor enter lea cs mov test and inc mov andb add cmpsb or adc data16 sub rorb inc aad js or sbb lock jmp aam pushf bound out pop repnz lea repnz jo sub mov cld test dec pushf jne repz test (bad) outsl push mov mov pop push push push push push push or loopne sbb push add mov insl mov popa and sub xorl (bad) adc mov aam mov lea movsl mov insl mov xlat add test sbb imulb push dec dec push or add (bad) jmp popl jg pop mov inc add adc sub xor sbb popf rcll loope adc adc pop and mov mov adc dec adc pushl add sub or leave sub push mov pusha pop mov (bad) xor jecxz shrl jne rcll xlat out bound out test sub push sbb xchg sbb mov push push lret mov mov sub cs in mov ret sub push aam xor std push sub test arpl pop mov mov xchg add add lea call dec push hlt fstpl xchg xor push aam adc pop push stos add incl add adc mov fstpt push jb push imul push dec out push mov cmp fdivl out adc sbb leave rdtsc movsb call xor mov adc int3 in sbb shrl repz mov fiaddl adc inc das xor arpl dec gs and and scas in xlat fisttp push push or andl adc orl jbe pop or adc fmul and ss and enter and sub orl xor jbe xor inc or adc dec or enter pop xor and and orl js (bad) cs mov mov jno or mov cs pushf mov movsb test adc aad pop xchg xor pop add xchg mov cwtl mov mov add aas cs mov cs or adc adc fs sbb xchg or and mov scas inc aad or enter in dec das lock sarb sbb je (bad) clc out mov mov icebp lret sbb call pop mov aam add or or pop bts jmp ljmp pop outsb mov sbb jmp jae rol and unpckhps push or imul or inc inc scas aas jge iret outsl xchg push jmp movsl adc mov rorl rorl push cmpsb sti outsl sbb mov mov inc inc rcrl adc jno,pn push or decl out cmp in jne add in mov xor inc inc pop sub pop roll dec add (bad) mov clc or and and lea stc pop mov fsubrs push fidivl push aam xorb mov or jnp adc cmpsb lods pop xchg xor aaa sub inc adc push add push stos inc cmpsl inc je inc pop and dec int3 jge add inc insl test add push outsb adc clc orl add inc movsb test and insb adc mov pusha inc push sub or fmul pop sub lock pop cmp mov subl cmp sub adc add xor sbb (bad) mov or sbb loopne dec les les push aaa xor dec lods jg mov mov int3 repz fisubrl mov dec test pop fistl es dec aam adc and or push mov and and sahf mov sbb (bad) push jmp test rorl push mov mov push lea sub leave or mov inc adc add add cmpsl push loope das mov les cs fisubr or sbb mov mov push jae push add adc adcb mov insb shrl pop dec pop jg je js jnp (bad) push xor ss cld add jno adc mov in scas jb cltd clc mov jmp cmpb inc push test push sub dec jo fmuls inc imul xadd (bad) mov fstp mov mov mov xor test mov sub aas pop mov (bad) jae pop andl push cmp mov clc xchg sbb jl lcall and mov cvttps2pi enter inc fwait stc add push test sbb add into xor es xor mov iret xchg mov loop mov (bad) lret pusha mov sbb cwtl ss mov in mov sbb cmp dec pop orl adc adc mov pop mov cmp inc add pop add icebp sbbl mov test add add mov loope pushf xor add add mov daa jo lret xor jecxz push (bad) lock mov sbb (bad) stos lea in ljmp jl and out add mov add sar cmp pop push add pop (bad) mov loope lea (bad) test xor push sub pop addr16 inc ss add out rorb add push pop pop sub xor insb or pop test add add pushl mov mov inc mov lcall push mov cmc ret jl mov insb bound test movsb jbe mov sub test sti inc mov push mov ja adc mov mov or test inc pusha adc test pop rcrb push jmp movsbl in mov loope sbbl mov imul xchg test cmp mov bound (bad) cs add sbb pusha imulb lea fimul outsb add jne xor pop lds cmp pop andl aaa xchg adc nop mov sbb lods sbb outsl outsl xchg mov movsb fisub add sbb mov inc push inc (bad) or dec incl xor mov inc cwtl add add add les movzwl cmc mov inc roll test mov or pop cmp lock cs lock test add pop push cwtl pop sbb mov popa jp (bad) dec ss cmp adc sbb arpl xor cmp cmpsb inc loope cmp aas sbb fmuls cmp mov sub adc movsb andl sub movsl arpl jae (bad) movsb pop movsb mov inc cmp jne sti insl pop call jns adc mov inc inc jb mov xor fdivrs int3 push iret add fldl sub lret sub sbb jb mov ficompl mov lods jo cs xor outsl mov jae mov ja inc or (bad) mov lods inc stos enter stos ss pop or pop dec js jmp xor adc pop mov jbe in lods add mov adc pushf or ds push push push push test dec sub adc clc test sar bound neg sub insb test ret sub add clc mov clc testb xchg sub jmp fwait pop mov jmp inc xlat or mov xor xchg (bad) ret outsl inc push test or xor divb out sub mov adc add mov test adc xor ss mov cmc (bad) iret adc pushf adcb sbb fcomps ss adc push and push das and adc push test cmp cmp xor xor inc dec cmp jmp mov leave leave je or pop clc xchg mov push add add adc pop imull loopne push std incl faddp adc push sbb mov adc or jnp fildl sbb jmp or lea sbb add sub sbb add add mov or loope or inc adc add push mov add add inc adcl inc out inc aad mov mov fist mov mov jge mov push add or pop adc mov and sbb scas add into push and shrb leave shll fdivrs jne stc add (bad) pop and add adc jbe pop mov fwait mov pop mov dec adc inc cmp or jae add pop rcrb cmpb push add xor or outsb (bad) jbe jge lock imul sbb (bad) push lods mov mov and cmpl or or (bad) and jo mov cmp jge je daa inc outsl mov pop orl mov sub sbb push cmp ds push xchg dec lock mov adc xor sti in arpl adc jge cs push push inc enter in jbe sbb mov add adcb sbb outsl aam testb push lea rorl js jmp dec push add je adc and decb mov mov sbb push inc rcrb inc add inc and jg outsl xor dec fadds dec pop fbld cs pop jmp pop mov or jmp cwtl inc inc pop or rcrb jle or or and xor das sub (bad) or bound shll ret sub test inc hlt pop pop aam stos and andl gs jl adc or mov adc push add xor imull pop fwait or sbb (bad) js mov or or dec addl jmp bound nop and xor pop pop sahf cmp push mov enter adc pop loop and jmp xchg mov je dec mov inc test sbb cli cmp mov cmp jne and data16 mov push es add jmp outsb lret push aad jno mov mov call add mov jl loope lea ret pop mov stos push dec arpl mov mov and and xor add pop push jp mov fnop sti mov daa stc fcmovnb pusha pusha mov xor imul push es std (bad) xchg cmp mov and xlat or mov mov pop xchg jmp and fsubrl fmuls fs pop es pop push xchg sub das inc loopne and ljmp or jne div das and out fnsave sub ja jb cmp jbe dec sub cltd into push rcrb push mov or mov mov pop xchg stos sub xchg mov rcrb ret mov jge popl push dec push add jbe out shlb pushf mov js movsb fiaddl add movsb xchg leave (bad) pop mov xor sbb or and and pop mov jge add je xor jnp mov mov push xlat insb adc pop xor cmp mov subl pushf dec je push push mov je mov mov mov xor and cmp sahf lock or popaw jmp or test push ret cmp xor or mov repz sbb lods adc (bad) push inc add shll xor and and leave sbb or jl xchg jle test add mov mov cmp push mov dec ret xor push shrl cmp hlt mov test sbb inc adc xor adc xor adc stos push add scas mov pop roll pop (bad) cld or push hlt push and out jnp cmp add repz data16 mov sbb (bad) int sbb dec mov cmp or arpl add inc push mov js pushw mov jne push add mov les or fsubrs push outsl fdivs mov sub mov loopne popa pusha push (bad) hlt lods jno int3 sbb pop cmpl loope push or cli push xor sbb mov sbb ljmp inc shr push sbb push add cmp popf add stos pop outsb inc insl adc xor add add and inc movaps rolb flds or add packssdw mov sub jo stos push mov mov enter xchg jl or jge add inc mov or or sub mov or neg lea jns orl pop push or push or fisubl sbb jmp or pop jbe mov or push push pop pop pop pop rolb push add adc add int3 add sub shlb ffree and inc ljmp movsl pop xchg insl jp sub testb out add adc enter repz or lods and sbb sbb or add pop sbb dec std adc add ljmp cmp pop aaa inc insb pusha loop les dec orps fidiv fcomps pop fdivrp dec call push jmp add jmp mulb mov pop cmp lock xor negl sbb stos dec sub adc and test mov sub rcll dec call push add mov or push cmc mov sbb dec jle pop aam adc sbb push pop les push mov movsl adc pop lea sbb mov cmp ret mov leave call insb sub icebp in add sbb call loopne sti xor xchg mov sar test sub lock push jmp push adc or cmp sbb push nop frstpm(287 fisubl sub dec es push add jnp dec dec fldcw or adc lock push sub sub mov andl movl mov loopne cmp pop fnstsw cmp adc push js push (bad) jle sbb jnp push jle je push loopne fdivrs sub lahf add call sub data16 mov push cmp xor adc push hlt adc sbb inc jmp test inc adc mov push xchg daa mov data16 or cld cmp sbb push sub push stc pop push fstl add test jns sar or out lret ljmp cli std push push inc pushf jne inc push test (bad) add bound inc into add bound push imul jo adc push or mov dec push incb pop inc xchg pop jge adc adc lea cmp je inc push mov dec (bad) ja and popa cld aas mov test cs mov das cmp jns mov push jmp cmp adc (bad) mov pop nop ljmp cmovnp test push mov mov scas pop popa sti adc push je jp inc add adc (bad) mov add jae fs inc mov jbe adc jne test and sub pop jbe adc sbb inc mov add jle or pop or js dec es xchg or (bad) jns adcl jns or les cli scas mov sbb sbb arpl (bad) mov adc (bad) lea or mov or pop leave cli aad or sahf decl or (bad) sar jmp push lahf test (bad) mov jg sbb add push add xor ret addb jl outsb add sub ja ss punpckldq popa add or or push mov mov fisttp daa xor fsubs inc nop scas jmp pusha adc push mov loopne cmp lods xor and cmpsl or jge or dec pop or in pop pop or cmp cmovno inc add pop dec mov add jmp das jp dec pop mov pop dec xchg pop shlb mov stos pop push xlat mov adc push rcl xorl sbb cmpsb js or sbb adc rep clc ret jl hlt imul out fimul adc add jl add sbbb push inc jle mov iret sti orb pushf push xchg int add add mov mov inc mov pop mov pop xor scas mov mov add mov stos or rorl testb (bad) aaa imul pop movsb jne sub pop and or js cmp adc lds lret or jmp insb xlat mov jne and add add bound arpl pop jne mov scas or inc cld sub movsbl sub das mov pop inc in xor loopne jmp ja jmp pop leave cmp jae mov cmp and daa cs push add and sbb and mov cmpsb test or pop mov scas pop sub cmp (bad) (bad) jg mov sbb ds mov andl inc ja loop jl insl and jbe notb jp outsl or mov and testb add pop sub mov sub add popa mov loope sbb xor pop pop movsb mov fild inc jecxz mov leave nop cli inc mov test add fwait and dec adc je sbb mov mov pop mov aaa es data16 add xchg jo std jg out push cmp ja add cmp or (bad) cmp add hlt push pop jg pop or mov fldenv das pop test faddl add mov fs sbb mov andl (bad) stos ds sub outsw push arpl mov adc pop jae adcl sbb fwait les jmp (bad) xorl mov sbb outsb or add push sub inc or xor dec or or insb adc mov test adc xchg imul push jnp mov jle adc in das mov jne and jecxz pop adc in mov movsl enter add pushf sbb enter (bad) jmp sahf cmp enter push (bad) and outsl dec pop testb mov (bad) jno sub or or loope cmp push mov add or push adc xor push outsl icebp mov lods mov test pop incb call inc (bad) push sub or cmp mov mov or push ret push test addl shll add js ja enter push push pushf and push xor dec sub sbb cmpsl sbb sub sbb pop nop or andl cmp cmpsb add inc add push adc pop inc cmc cmc and fisubl fs jecxz add push and xchg push lds mov mov add in test push std push lahf push or or (bad) shl push add mov aaa jp adcb stc xor jp,pn mov outsl iret xor popf loope inc or rol pop pop js ljmp inc sbb cld pop dec add loop dec out jb sub mov test pop imul mov adc xchg sub cmp std cld jmp inc lahf add or in sbb loop movsb fistpl aaa pop nop or shr inc adcb subb and sbb pop or add and dec xor shlb rorb rclb sbb jb jp sub cmp loop jmp stos std inc push jo pop xchg or cmp or push or inc aad inc aad xchg sub xor or sahf inc add cmp pop mov pop and neg cld xor mov sbb loop and xor addr16 mov test xor imul xor frstor jbe mov cmp push xorl mov lcall add in fdivs fsubr pop adc js xchg ret fdivs das or dec daa loopne mov idivl in mov gs mov mov mov mov inc lea inc add enter fcoms mov inc inc sar sbb lea in mov (bad) push aam adc fcoms gs pop ret and call lret jmp mov sub inc xchg mov in or add adc movl mov cwtl inc adc arpl and adc jne or push cli or imul pop sti push scas xor cmp add push dec or sbb lock mov arpl and insl pushf mov and inc pusha ja push aad gs jmp jnp mov dec mov xorl and in cmp jle and in divl jge call inc dec mov cmp ja lds inc inc pop ret adc dec mov pushw or cmp mov or mov pop mov sbb add je xor inc icebp cld push and push add xor adc push mov inc cmp adc sub pop jmp cltd sub jns scas mov xor out sub sbb ficoml pop js out xlat dec push call add pop adcb add inc sbb push push sahf adc mov test or das aad es and push ret fistl icebp jge rep sbb pop jo mov sbb add (bad) mov rclb roll ljmp push pop cs cmpsl jnp xor push inc xor pop inc xor mov negb push je inc adc ret mov clc ljmp xlat xchg jae sub sub enter mov lea lea dec mov je push push lea and clc into fldl pop pop pop sbb push sahf sub cmp or or cmp mov pushf xor popf sbb xorl (bad) lahf sbb imul push cmp xor sbb cmpsb (bad) negb movsb mov out push sub or jmp xchg push push xor ss push add add sub sbb or js add or (bad) xchg arpl pop add inc pop mov cmp lea cmpb inc je loopne mov (bad) je add push push (bad) ret adc testb add jnp (bad) bnd test push add test inc and sub lea push mov dec dec inc arpl mov sahf adc mov adc jle or aam adc arpl mov push pushf jae mov lods inc mov jne xor or xchg fnsave movsb movsl and movsl test js popf cs or mov dec push aad jns adc mov push lods bound add ret sbb add add cld add add into xchg out gs and push test loop pop adc xlat cmp adc stc insl xchg addr16 fcoms pop and and dec push lds adc mov or jle and stos and add jmp cmp add loopne xor mov push imul sarb mov iret push scas in pusha adc add and push (bad) mov movsb or sub add lods mov (bad) das adc sbb sbb sub adcl inc fs loop add jo jle cmp mov push test inc sbb cmpsb adc or call mov jg jmp dec jbe clc cmp jl rorb dec mov add xor pop add or jo adc and cmp jo cmp cmp add cmp and mov and push sbb sbb sub xor dec fdivs adc mov inc push pusha jecxz jo out inc mov insb and mov mov sbb push pop inc jb outsl mov daa fildl push xchg out xchg adc xor cmpl je aam adc loopne insb js inc push pusha inc in enter dec sar testb mov lock loope and mov push adc adc int xchg jmp lds mov scas push lods or inc pop fcmovnbe jmp dec cmpl into cmp inc and push cmpsb push pop jne cli mov ficomp jo fldt and adc fwait jmp push add shrb fwait mov out mov test cmpsb pop lods cmp or call adc test outsl cmp faddl or loopne xchg sub add fiaddl loop mov pushl xor sbb push adc add (bad) pop jecxz pop bound rolb pop mov stos and mov test je ss inc cltd movsb test jnp ja push lcall mov (bad) arpl out jl push jmp add pop jmp cmp sbb je inc and sbb cmp sub sbb mov xchg lret popa pop add fild push and sub sub push xor mov jo fildl es je andb ss icebp pop adc adc daa pop lods clc int fs dec je dec jne add and sbb in lods adc sarb sbb xchg sbb jge xor pcmpeqb dec cmp jge movsl sbb push adc sub aaa mov adc popa inc mov inc pop int3 scas dec or add pusha inc and ds sbb sbb xor dec rol iret add xlat movsb mov pop (bad) enter lea cmp mov sub in and inc xchg inc add xchg and cmovb aad call mov in loopne add push inc cmpsb stos mov roll clc aaa sbb push cmp jl iret jg fs test inc push push jbe dec hlt out push cmpb sub inc mov mov inc push addl es andl push (bad) pop jb (bad) pop sub push loope push out movsl popf inc add xlat pop (bad) dec aam xlat outsl dec add jp movsl mov jl enter mov icebp cmp xor xchg idivl xorl cmp je std or adc daa int ret (bad) push add push mov pusha sbb (bad) lcall orl bound inc (bad) in add outsb jnp (bad) insb and or and sbb or pop or or addl and jo push fildl jle inc xchg sub push dec add out rclb cwtl sti rorb sub jecxz pop xchg xor sub test xor mov stos xor movl xchg cmpl mov or add jbe mov cmp divb rclb pop xor lock jae cmp clc pushf jg add fs push mov jle mov push xchg adc push jbe push adc push shr or add and pop cltd ficoml mov jg or jecxz jmp je hlt xorl fs jp fldl sbb lock sub lock je push hlt (bad) add arpl lcall (bad) mov lcall ret mov or dec mov addb sub mov and inc bound popa push movsl or xor jp je hlt mov jnp mov or and clc push aam mov lods test mov movsb pop addl cli dec bound push push dec loope popf mov (bad) mov fmuls adc cmp adc (bad) (bad) push add and cmp inc add jns or scas jne xchg bound push imul cli rorb pop push je decb fbstp cmp jbe ljmp inc (bad) je mov mov push lods push fs call in jmp cmp jbe sbb imul sbb mov cs ljmp repnz add jbe insl jmp inc mov or ss fstpl cs mov mov push add pop les leave and sbb dec add push ret lods mov mov lret push lods shrl dec dec lea ret or and lds notl bnd insb add icebp add rcll jb push push sub std xchg mov and out dec jo sub jmp out iret and cmp pop push or push push xchg (bad) rcrb add add int3 xor sub push xor ret cmp add inc sbb sbb arpl (bad) jb cmp jb mov jge cmp adc cmpsb sub mov std add loopne repz das add cli cmp add cmp push mov jb inc mov fcoms sarl popf out (bad) cli push (bad) lock jo mov jle pop loopne aas push cmp xchg pop add lock in in insl lea xlat push pop add bound stos testl and jge xchg js add add fdivr cs mov jl jo mov or push sub repnz insl sub stc adc mov mov mov outsl xlat mov sbb mov or push sbb adc pop inc mov sbb mov cli adc cmp jle adc into rcrb xor cmp inc ljmp push rclb ret sbb imul pop fildl je push loop dec jge outsl scas push pop or movl mov mov and mov jl adc jno cmp or jge (bad) ss test fcomi iret int3 popf adc push nop test mov mov ja mov and pusha push and add jl xchg cmp mov inc adc jl aam push xchg sub sbb add push call adc jg stos inc mov jle hlt ret xchg mov fistp mov mov sub mov push or sub shrl jne repz adc add push scas dec les mov sub adc inc push sub loopne or sub inc shlb sbb neg add adc add pop ret mov in insl sahf lods adc push mov mov mov fs push lret insl fldl pusha rolb mov xchg lea test add adc and jne adc int3 and jbe nop mov fs lea pop les inc int3 ret or adc test clc adc push add adc rclb fsts push or xchg cmp pusha pop adc insb rorl push enter sbb push jne push ret adc std mov adc push cltd dec jbe dec cltd add mulb or inc add mov addl or mov cmp push sbb scas adc fcomps lds add jb push (bad) sti out mov adc inc push xchg add (bad) add adc inc add xchg xor mov (bad) inc adc mov inc pop or outsb daa push and pushl and insb popa je and add inc outsl jo jb addr16 je cmp xor xor dec gs outsb sub and imul pusha inc jo addl add jp jmp (bad) and adc pop in bound or mov or add scas jnp or adc jae add outsb mov jg add or cmpsb imul imul add sbb sbb inc push xchg add inc ss push add and or or incb jnp adc fcmovnu lcall or or or imul cmpsb dec int3 sub insb lcall pop fdivrl lcall (bad) cmpsb imul imul cmpsb imul dec lret push cmpsb imul cmpsb imul inc (bad) cmpsb lcallw push xchg push (bad) imul imul imul cmpsb imul inc shll popa lcall push (bad) xor cmpsb imul dec leave sub lcall imul imul imul cmpsb imul dec int lods insl lcall pop fnstsw mov adc cmpsb imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul imul imul cmpsb imul dec negl inc add pusha adc (bad) xor xor dec sub dec (bad) xor pop cmp (bad) xor roll adc dec xlat xor inc addl ret add xor mov div and add rorl sbb adc xor rorl sbb push push dec (bad) xor push add or imul adc lcall nop cmpsb sti sbb add xchg and or or or push shld push or add sbb sbb sub dec xchg sbb sbb (bad) std pop icebp frstor xor or enter adc inc xor xor sbb sbb and or mov pop or cmpsl or jnp adc sbb (bad) je dec sub xor (bad) xor mov pop add rol loopne jae roll push imul pop roll insb xor dec sarb add outsb sub popa jb and insb gs wbinvd adc push test sarl adc pop sbb and sti add inc push imul add iret and add jo punpcklbw jmp (bad) xor sbb and inc popa xorl add add add (bad) xor roll or fwait xchg add pop push push pop int3 (bad) ljmp jnp mov outsb imul outsb and arpl je outsl dec push je outsb mov jecxz cs incl fldt adc arpl gs outsl dec mov jb dec inc push dec inc dec xor cs dec dec mov gs fistpll pop inc insb jae jb gs push gs popa insb jne clc orb push insl (bad) in mov js je jb gs insl jae mov insb je cs insb adc lods stos movsb bsf pop sub (bad) (bad) lcall sbb and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec call and pop pop pop pop pop pop pop lock or bound adc push insb insl inc clc (bad) mov jae jne ja jns jnp jge jg cmp (bad) fsubrl dec loopne sub fwait jge or push push adc jmp pop add dec dec inc push pop dec dec inc adc test adc xor or jno jo insb imul jae mov popa mov je insl mov sub outsl and adc push xchg outsb ret jg bound jns pop jmp arpl or inc pusha mov (bad) sbb and je pop fwait imul daa pop jae push sbb insl mov or and insl fs push insl and pop ss xor jmp jne dec fmull data16 pop mov insl bound jae insl bound mov pusha fs dec and jbe and paddq imul mov xchg cmp bound mov outsl jae add stos and sub xchg imul lods std mov fcmovnb insb adc pop push insb insb popa outsb das mov lea jmp sub arpl jb sahf sub cmpsl xlat or mov xchg outsb push inc sbb pop in insb outsl jb inc dec ljmp (bad) mov stc divl add add and ret xor lods adcl leave xor gs push push outsl or cmp out mov or fwait xor jbe jnp lahf pusha fs xor or lea into insb gs addl daa aaa jecxz mov lock outsl mov ss or push fs xor jo std jbe xorb popa pop in mov sub xor into (bad) mov pop sub das sub (bad) and imul pop leave neg or jmp (bad) add sub movsb or gs and insl jbe push push (bad) mov sbb pop xor mov rolb hlt hlt icebp push fsubs jno jae sub xor (bad) in dec jge jecxz jo je out sbb nop ds mov popa repnz xor adc sub fildll sub fisubrl les js fs pop xchg inc fisubr add push push mov inc sub cmovl outsb outsl fnsave daa or jo addr16 subl lds add into mov ret xor and popf movsb xchg dec adc jb jg pop mov fs jo inc outsl lock xchg jae daa jne add push add add and cltd dec push dec add test sbbb addl adc (bad) add popa and adc add push add add flds xchg sub add fildll add sbb add fs mov add add (bad) decl jo lods addb xchg lea (bad) call xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov (bad) (bad) pushl mov mov mov ret (bad) enter int3 int iret sar (bad) (bad) call rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock lods (bad) push repnz cmc div clc stc cli sti cld std (bad) call shrb lock inc xchg and nop stos nop add mov pop jg pop mov dec dec cmp test mov sub add or add or or dec add pop xor sbb dec outsl jbe dec xchg push jns inc aam mov dec pop mov imul mov inc pop loop push out imul adc cmp sbb addr16 jmp jnp push push dec inc inc aaa jns or xor cwtl (bad) movsl cwtl fs inc inc pop or adc push pushf inc addr16 imul or jnp fdivs inc cmp insb mov and repz fstl add push add outsl rorb andb inc insb and mov imulb sarl mov push (bad) fisub jb jns pop mov daa adc xor nop mov jns gs pusha push sbb andb mov fs addr16 jbe inc dec jo fmuls or imul fsubs mov lret sub jns mov mov xchg shrb pusha fsubr push dec inc and ds adc sbb xchg and orb and fs stos adc push dec clc in xchg sbb dec add sub mov or add inc imul pusha ss push ret push jg jae testl xchg ja pop (bad) ud2 dec xchg mov dec and outsb mov push dec jnp dec add jns xchg shrb add fs sbb (bad) outsl xlat test gs popa and sbb dec clc imul and add mov mov xor arpl dec xchg rcll add popa mov or fadds jg (bad) fwait mov mov das dec sub mov pop fbld fsubs inc sbb bound das or adc pop in mov xchg mov add cmp add add or add es jle mov add xor ds cmp sbb dec xlat pop and sub es lods jmp sub sub add fiadd aas cmp scas and ds lret pop push das daa pop pop shl push imulb outsb or sti je jo bound pop fptan sub fisubrl xchg xchg jo mov ds nop cli loopne ja sub clc jne add imul (bad) insl lcall pop jo pop (bad) xor mov sbb xor pop jl js imul imul imul xor shrl and sbb dec (bad) xor adc or add lcall hlt lock imul imul imul imul jmp jb add rcrb mov sbb into insl lock add fwait cmpsb xor in jo mov insb add (bad) mov ret push add mov dec imul add add in push lahf add and push pop sub icebp das jle aaa xor push push pop dec and push pop ja sti pusha push jo add and fwait jmp lds push add add or pop mov pop push addb pop xchg adcb test pop popf mov push orb cmpb push scas (bad) test mov sbb push jo add and or (bad) push ss ja les pop push jnp insb xor sub dec addl dec rolb movsl push cmp mov adc inc dec xchg xorb jae outsl mov push mov jns pop cs mov jns ret addb xchg pop ljmp incl inc xchg or call orl hlt lea push and and ret fildl arpl popa mov repz icebp sub dec stos fwait add xor js pop and xor push and ds jmp test add outsl add adc or or xor sbb xlat jne jo and jbe sbb (bad) ja inc add push rcrl pop dec or push add jae aad add dec push bound in pop adc push lahf (bad) add mov add adc gs aaa (bad) jge push xchg popf imul insb lods jmp or cmp adc ja in outsb insb fs jae fs data16 lahf jmp out jmp arpl jne dec push adc jmp lods sbb xor stos ds pop mov insl add call sub add xor lea xchg and pop jne mov sbb gs xlat lea mov add add mov add mov (bad) jae jp add xchg sbb popa cmp popa xor popa pop jmp (bad) lret jg pop je or fwait jo popa mov lahf adc jae je xchg lahf jnp psubsw jg cmp fnstenv xor add add push or sub (bad) sbb pop and push fldenv jnp and adc sub inc xor push inc imul fstps mov or dec cmp outsb aas mov sub fs xchg cmp xchg out stos and ja xor and jmp insl xor xlat movsl xchg std dec mov popf cmp pop add add xlat mov jns leave sar shl cmpsl imul mov (bad) cltd adc xor fcoml (bad) sub fs xchg pop imul jbe ret and pop ja gs pop pop inc xchg mov pop fbstp pop xchg sub rcll pop gs pop push jmp mov mov sbb inc iret jmp bound movsb xchg sub xchg fldenv and inc mov iret popf xor pop jo popl or outsl (bad) pop pop pop popa mov and jae gs or (bad) adc ja or outsb add and outsl (bad) adc addr16 cmc inc dec push and jne jo in adc add pcmpeqd adc xchg pop add loope dec adc push std shll and lret pop cmp (bad) dec push mov mov data16 cmp cmp sub cmp xor jne arpl dec mov pusha lret push addr16 push mov daa push cmp sti jae jp cmpsl adc test and dec das cmp fmuls mov test push or sbb ret adc mov dec xchg pop and or xchg mov js add insl das outsl dec arpl mov in rcll cmpsl out sbb shrb fldt sub je imul movsb push mov leave outsb lret and cmc ret xchg push aas add jbe adc adc ret add arpl arpl inc jge dec xor push adc imull fdivs jne rclb mov mov mov inc mov xor arpl jmp loope jecxz jno stos lock insl pop dec and push mov jne and adc imul test sti xchg xor addr16 sub xchg push pop sub nop inc clc and jns je push popa push add jae xchg or xchg popa mov ss dec subl dec bound sub jne and movsb inc sbb and mov lret push pop idivb jno fstp je xchg jae loope arpl and push leave arpl arpl lods xor sbb sub fs cmp (bad) insb (bad) mov pop sub lea mov daa ja ja aaa ja (bad) sub adc mov loopne lahf imul mov roll adc add lahf pop pop js das inc je gs push mov mov jbe arpl inc shlb outsl es mov xorl mov movsb dec dec inc addr16 sub xchg mov push jne pop and jae sbb xchg addr16 inc and cmp lret inc popl mov xchg lods (bad) je pop mov int sub (bad) adcb je pop xchg dec ret dec imul inc out mov pop dec je jne jb push jns rolb insl sbb and pop bndstx pop cmpsl popa add or mov push data16 imul xor dec jge imul pop je daa subl xchg sub insb scas mov or dec cltd mov (bad) insb loope sbb sub fistp and ret xor gs xchg shr inc lcall pop inc mov arpl and add fistpl test jl sbb outsl xchg aaa insl mov add bound or pop ret add fmuls mov insl insl dec mov lret push mov push jl arpl dec sub push popa adc (bad) ja xchg add pop xchg mov xchg fs les je or es popa sbb and adc clc popa or pop ss mov ja sbb pop (bad) mov shlb xchg add mov inc mov insl pop (bad) push inc and lock add xchg arpl jne inc pop pop jnp arpl pop xchg pop sub jb je cs mov xchg popa das mov adc inc and cmp bound sub xchg stos add subb test popa inc mov fistpll xor pop gs inc loop and fsub adc inc pop and add mov imul xor fisttp mov and push and or xchg adc push xchg bound xchg adc arpl mov stos ja fldcw push popf inc lret arpl sub add aas cwtl mov cmp dec add push notb xor jne add xor add popl inc imul popa sbb addr16 inc inc push add pop sub inc push xchg adc and xor aad xor and or imul mov or in push or dec out sub mov inc sbb mov xchg scas stos cmp inc pop rcll xchg cmp dec fwait add test aaa flds inc mov dec xchg adc pop or mov popa fs repz xorl jecxz test add xor jne inc inc (bad) jns pop ja or add mov xor ret popa gs int or inc mov fs iret xor subb xor and mov dec shrb shrl loopne sbb ret pop jp inc add pop or dec call pop imul xchg lahf insb dec lea mov (bad) jo sub or mov stos out dec ret insb mov inc pop dec cmp or mov sbb mov dec rcll sbb adcl xor jbe and xchg ja pop xchg and and arpl je mov xor pusha gs test and xor jb lock dec xchg pop out add and scas ja add or push or jmp xchg jge iret and jbe dec cs push xor je mov add and test add xchg and sub mov icebp imul or negl pop and jno xchg ret adc int3 bound ss jno pop loope addl jae and ja mov nop insl movsl shll ficomp add add lret outsl sbb cmp sub lods mov jg push in inc or push adc add or ja inc lods test (bad) jb xchg and dec out inc xor jns cltd fcoms notb lahf and jecxz jecxz pop popa shrl sub push das out rorb adc mov stc test ja sub ret xchg inc mov sub popf xchg and test ja insb add push jb outsl add xchg nop and sub jns or xor es sbb insb xchg and jo push add cmpsl mov stos adc movb xchg (bad) pop and push lods pop adc popa push adc addl add outsb pop or push fmuls dec push rorl imul and in jo mov or popl adc imul enter jbe orl and iret dec pop pop aad in push ret (bad) add and outsl add and mov fwait inc pusha push mov dec push mov je xor popa add push sub pop xchg push ror xchg int pop add xor xor pop or addr16 push dec add jno (bad) jo pop sbb imul add cld adc mov imul add outsl add les and sbb inc fisttpl in nop rcrl lahf and out or xchg or lods nop call pop clc data16 insl pop dec je lds mov mov jb popa add gs dec push sub adc inc test iret jne popf aam fbld or push pop nop add xchg push mov vorps mov mov jb addb les push pusha test inc pusha or popa add jl arpl xchg dec dec es pop lahf inc prefetch mov push or sub cmp insb enter popl dec adc push fisttpl cmp dec inc push stos out test popa inc xor add push fdivs jecxz push mov pop test imul out lahf nop and sub aas lods pop add (bad) jo adc xchg inc pop leave imul popa sub or add xchg lods fs adc imul push popa adc ja popa inc and inc jb das dec xor and fwait xor data16 sbb xchg imul ljmp and dec inc iret pop inc mov jne jns and adc test aad in nop mov sbb push or push (bad) adc imul pop pop inc sbb flds call add outsl mov add scas push flds and shlb and arpl jo add add je sbb inc sub sub movsl adc inc js adc jns bound arpl push enter dec xor add lea mov dec sbb xchg pushf or mov addr16 or sti dec pusha popa xchg popf (bad) call or xlat andl test (bad) dec test fadds out inc sub adc test or and les pop and sub arpl arpl or movsb or outsb ret daa adc pusha andb mov and pop cwtl (bad) fcoml test mov je sti aaa lea pop inc ds jmp xor test jmp scas jmp sub pop inc sub fcoms subb and nop push push lret or or cs add and mov adc and xchg dec cwtl add sub add (bad) lods inc push hlt dec insl leave adc ret push jmp ret stos fs jno inc popf test or mov jge lret xchg in inc sub (bad) shll pop arpl scas inc and pop inc stos or and dec xor jne or sbb stos pop popf push xchg jbe je sbb mov addl cmp pop je inc aas sub adc pop addb pcmpeqb fs fwait mov cmp pop out push scas jmp jnp xor mov lds or movsb mov (bad) movsl sub outsb cmp arpl xor add adc sub test insl pop xor test add insl std add je and sub sbb (bad) push loope cmp cmp imul les outsl stos and sub inc dec addl loopne stos movsl in and dec jae push sbb push jo rorl jg inc sahf xor add dec xor test sub add dec or jnp inc mov add push mov btc and nop (bad) and or lea out add pop rolb popa mov dec add jmp jae add adc clc and push pop and pop lds add pop or (bad) sub or imul add add add and roll mov lds fstl dec or sub and push dec (bad) mov mov or or cmp add push or sub addb inc add xor add cmp inc adc inc xchg mov enter add sbb add (bad) scas dec push mov bound mov pop adc (bad) fimull rorb arpl push inc push xor mull jo dec lods repnz and sub cmp arpl outsl stos clc fisttp bound pop push movb push pop inc outsl je jo bound add xor adc test inc adc fnsave push add or call hlt sbb push cmpl scas sti add subps cmpb fsubrl xorb cmp in daa mov rcrb xor push ss aam inc cmpb xor jbe or jg movaps dec adc add adc (bad) or and pop pusha pop bnd sets fnstsw cmp or bound inc mov and scas jns fadd cmp mov or insb shlb sbb fs movsb mov sbb int3 mov lock aas add pop out into adc test sbb fnop sbb pop mov ret mov sbb out loop pop and mov pop mov negl stc pop and or aas inc sti pop inc ret cmp inc out jg testb inc lahf (bad) cmovno mov mov js aas add inc jg popa pop sarb jg pop inc addr16 es mov cmpsb sub sbb sbb push xor outsl sbb sub fldl sbb add pusha mov fmul je xor fs sbb add add push nop add std jb pop and mov popa aas sub leave add dec pop adc push xor pop imul ss add mov leave push adc mul or mov inc push subb sbb jns xchg cs mov cmp enter lret je ret xchg movsl mov shrb lret clc and and jecxz pusha arpl cmp pop enter ja xor xor xor mov and pop mov xor jns inc dec push int3 lret fmul sbb add and xor cmp inc xor lock or inc cmpsl iret sahf fisttpll sbb pop jge pop pushf int3 sarb xor push enter cmp cmp test sub (bad) push push stos stos add and push mov add or outsb gs mov imul cmp fistpl push mov arpl imul popa das push sub sbb mov ja cmp mov push add test xchg jg sbb adc insl gs outsl fs loopne xor (bad) imulb sbb es je je outsl inc ret outsb adc or mov inc imul fistp bound jae push outsl jb bound das jae add sbb movsl sub pushf ja (bad) xor fisttpl add das pop (bad) xor sbb mov pop jmp sub dec jbe mov push bound data16 cmc arpl test ja adc imul xor cltd stos dec inc mov xchg das sub outsb unpckhps orb add test mov in dec add mov push inc or add es imull mov sub pop add ss fsubrs sbb or add add mov pop adc push pop jae sbb jo xor rolb pop or pusha or and mov and loopne fsubs or sbb fsubs aaa nop push push pop cmp js pop xlat or push push pop adc pusha orl mov orl dec pop lock add push pop adc ss xlat push push pop jecxz sub je fsubs pop xor enter fsubs or test roll sub test inc pop or jg pop pop sbb add sbbl xchg cmp insb mov pop jl cmp fcomps insb mov lahf pop pop insb pop sub fs push mov mov push sbb jg pop inc push sbb adc mov and jb xor les insb mov decl pop bound and fs push movsb lar (bad) mov push sbb in pop pop roll insb pop pop sbb xchg incl sbb pop jp cmp aam insb mov call pop push sub jbe roll setg or add ss pop push push (bad) mov roll pushl pop jbe ss roll insb int3 decl pop popw xchg insb mov pop lods pandn pop inc pop in jg fsubs pop pop pop push pop pushf (bad) fsubs or ds pusha orl outsb pop orl femms pop mov pop cld decl xor push pop adc cmp pusha orl pushl fsubs popa pop and mov or pop fcoms pop sbb or (bad) jns cmp sar imul pusha pop mov pop mov imul outsl mov pop adc shlb pop jne xor fsubs gs and mov or pop inc pop sbb ljmp sbb pop cmp pop (bad) insl pop sbb pop mov shlb pop dec pop cli decl test addr16 ret call pop xor (bad) (bad) fsubs adc roll sub addl pop mov xchg pop insb mov imul sbb ljmp sub fsubs push mov lahf mov ss ss pop idiv push pop orl pop aaa pusha inc shlb into jmp push or fsubs pop scas pandn pop inc pop out decl insb mov pop pop pop sahf call pop aas pop fdivrp mov push sbb das pop mov pop lahf popl dec pop (bad) push xor rorl leave push xor inc icebp leave push xor inc leave cltd fnstcw stc lds in xor inc leave mov int xchg or lods in and fstl or std inc leave push xor mov and leave push mov xchg or inc lret stos inc leave push xor (bad) xchg or mov push (bad) cmpsl xchg or inc out inc leave push xor mov or inc and xor inc fistpll (bad) jg lahf push pop out adc pop movups add mov add pop adc int3 aas fistp jbe dec ljmp push add fistp arpl popf jge pusha aas add sbb jb sbb pop push mov xchg cmp in xor or or add add out js mov inc imul push pop jne push fcomps fs insb and jb inc add pop inc and or add and je fist rclb adc lret out jecxz or adc outsl push (bad) xor (bad) pop incl add cmpsb jmp add aas inc sbb loop add push sbb loop mov pusha adc aas inc push ret lcall stos nop (bad) incl int inc add sub adc and and xor pop xor test loope xchg xchg add adc orb push add movsb (bad) pusha (bad) jns aas jns mov pop cmpsb fild mov cld test aas inc jle test shll fldenv cmp fimul mov iret mov sti lods stos in call mov and push ficompl pop pop fisubrl xor sahf pop sbbb fsubp nop xor cmp add inc mov fadds test test inc movsbl add add push and cmpsb sub cmc mov inc adcb pop jmp jg or adc mov jecxz add xor xor pusha xchg add pop or or cmp (bad) dec inc add push adc fwait pusha orl pop and enter xor fsubs push pop push pop pop (bad) test pop fwait pop insb mov loopne add jb push das mov push sbb pop push pop sbb inc xchg add pusha orl movsb outsl orl lahf into pop xlat leave stos loopne sbb pop arpl mov (bad) and inc adc jg jae jnp pop mov inc daa lret cmpsb sti fmull sbb adc adc (bad) xor sbb lcall inc repz xchg pop inc pop pusha mov pop outsl push inc cmpb cmp pop imul cld dec add testl or or fmuls inc (bad) into add or nop xchg orb xchg xchg inc adc mov xorl lods inc add inc or pop inc popa and add add add sub inc add jmp call outsl cmp dec rcrl pop pop xor (bad) xor push dec inc cmp xor shrl sbb xlat stos ss add cld outsl ret add xor hlt lock call (bad) xor aam sarb mov test xchg mov jo pusha mov dec rorl add sub cmp call pop inc add cmp insb jg jae cs pop inc out add add add sti add adc mov inc cwtl pop mov adc pop add out sbb mov lock popa push push push addr16 inc aas mov das pop loopne inc inc or or or iret cmp xor add mov push mov pop adc xor (bad) insl add cmp jge xor ja stos shrl out aam repnz das add or inc inc orb jg (bad) lcall in push jg adc jg shrl fwait xor dec (bad) (bad) (bad) dec cwtl jae fcompl (bad) (bad) es test mov (bad) jne imul xlat movsb fimul call pop cmp (bad) sub pop cmp xor (bad) jg outsl push cmc push sbb sbb push inc fsqrt inc in stc pop adc ljmp rcll mov fdivp jge (bad) (bad) (bad) push fstp imull mov and subb and dec loopne mov sbb ret (bad) (bad) (bad) incl inc scas lcall xchg xchg dec outsb push loope sub gs (bad) (bad) pushl dec sub dec mov lock repz xchg fistpll pop clc push popf jno push cld jp push push pop mov jle fstps jecxz fild fwait incl dec xor (bad) (bad) (bad) (bad) cmp sbb push jno lret fwait notl (bad) pushf arpl pushf mov sbb je xchg je (bad) (bad) dec jo inc popf fdivrs adc inc popl mov clc add add (bad) pshufw push or sub (bad) fstl and inc (bad) (bad) (bad) decl out mov test mov cmp pop ja pop xor cmpsb jp mov (bad) in (bad) mov rcll std mov ret scas pop (bad) int3 mov cmp (bad) je (bad) (bad) (bad) incl cmp xor sahf (bad) mov mov push imul (bad) (bad) (bad) clc mov xchg cmc push push sahf jl outsb or or cmc and jne in mov cmp xchg pop popa adc pop jl mov dec push int3 mov (bad) (bad) (bad) pushl ljmp mov rorl (bad) and arpl sub mov call pop push dec aam fisubr mov inc mov or xchg dec (bad) (bad) (bad) pushl (bad) fldt mov mov adc mov stc sahf and scas fstpt sbb xor (bad) inc inc stos and arpl inc jle mov negl cltd stos (bad) (bad) incl out dec mov pop pusha jge xor sbb cmp std (bad) lcall add xchg jp in jmp in daa ss or mov sbb (bad) (bad) lcall stos in push imul dec (bad) out or adc add (bad) ret fimul (bad) (bad) (bad) (bad) in leave mov push into subl xchg jae leave movsb lret and xchg gs loope mov (bad) incl sbb (bad) (bad) and dec inc cli sbb sbb ficom jb and (bad) (bad) pushl int in sbb sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti (bad) (bad) (bad) (bad) jmp gs xorb mov aad add out in popf movsb push mov (bad) in (bad) decl out cmpsl mov sub push sub cmp clc adc xchg (bad) mov mov ret fild push and mov nop popa in mov pop lock or imul mov (bad) (bad) (bad) decl les adc cwtl mov sahf cs je rolb mov sub (bad) (bad) jmp adc hlt or adc fild and cmp arpl sub (bad) incl lods sbb or in add ror nop and roll into mov in xor xor cli mov (bad) (bad) (bad) imul mov xchg or sbb xchg (bad) inc ljmp mov js push je push pop rorl fiaddl int3 push and xchg push or outsl std jmp mov push cmp insb pop push push xor mov (bad) dec out mov test out push icebp mov pop arpl dec leave push mov pop clc lcall rcrb sub lret les lahf sbb (bad) (bad) (bad) call fsubs in add test aad cmp cmp jbe push jns cmc (bad) jg incl ror jne lret (bad) jecxz daa dec das xor dec pushl shll daa lds leave push (bad) fist out stc (bad) (bad) (bad) pushl cld cmp cmp xor decl lret test test fsubrs enter adc hlt adc push sub lahf or ret cmpps adc (bad) pushl adc sub arpl dec mov (bad) ja outsl call (bad) idivl mov cmp arpl (bad) jmp xor and and and idivb arpl and and (bad) mov push pop push and sbb test sub xor jb sti lods or cs and jbe cmp inc jae ds cmp test and jle xchg jne xor cs xor or dec loopne mov sub push imul jbe outsl je and push add or and push rcrl and jo das sbb outsl add ljmp unpcklps jo sbb bound pop push add ljmp das or dec mulb add cmp rorl insb pop push leave xchg jb jbe cmp mov adc scas ja ljmp xchg or mov sub and bound push add ja jns jmp (bad) and fs addr16 out xlat jge jne jp jbe outsb cmp sbb xchg mov fiaddl scas scas scas scas or push xchg outsl inc add push lock les push mov inc mov ljmp (bad) (bad) incl xor ja popa push out mov les (bad) hlt push xor adc sahf xor fdivrl jmp decl dec mov mov sub mov sbb dec jno ljmp lock jge sbb in insl push mov hlt movl insb adc or (bad) std test (bad) decl add insb push arpl psubd or outsb cmp imul addr16 call cmp aam dec std test cli test xor (bad) call mov lods jecxz fdivs jne fild or shrl (bad) decl xorb mov mov and mov cltd xchg mov iret shld sub mov (bad) and or adc stos sbb mov lods data16 inc fdivl jno add aad mov (bad) lcall mov push movsl in lahf xor mov js stc (bad) (bad) ljmp subl loope or insl or hlt ljmp cld jmp hlt push imul insb sbb xor dec cmpsl repnz xchg push insb jnp add (bad) hlt (bad) (bad) (bad) decl (bad) push les cmc (bad) fnstenv adc mov mov bound ficoml (bad) rorl mov into sub pop (bad) mov loop mov dec xlat xchg fsubs shll jmp (bad) (bad) (bad) ljmp inc mov sarb add in add pop dec or cmp add dec (bad) incl daa adc or and test or mov popa into push or (bad) stc ficomp leave fldcw and (bad) addr16 sub or mov shlb insl mov mov call xchg add inc aad scas ja popf adc push fdivl or test or xchg ds or or push in or mov or (bad) incl jge xchg (bad) shlb add inc push imul inc push cld incl out imul aam loopne (bad) lcall pop jp adc dec fnop fistpll mov mov aad mov call lock (bad) jle mov ret push repnz addr16 cmpsb fldl mov decl std aas dec ss fidivl dec sbb scas (bad) dec add pusha jp inc ret out pusha fistpll fbld out mov jns imul cmpl outsl and jmp push int3 add mov das es lds or sub (bad) (bad) ljmp pop cmpsl call ret (bad) mov sahf fldcw ret es pushf mov das scas insl add ss jmp addr16 jb push add decl xchg adc mov jnp sbb xchg or out fdivrl fisttpl aam (bad) (bad) call roll clc mov push int mov mul ja outsl ja mov out (bad) decl (bad) lret pop or adc sahf gs scas (bad) clc sar imul lcall les loop mov push addl mov cmp cmpsl notl pusha decl inc cld rorb imul scas fcompl fldenv pop and fild aaa push scas mov fidivr movsl (bad) dec mov jmp repnz lret push cmpsb (bad) (bad) lcall and sarb sub push mov jp mov dec popa les sbb cli (bad) lcall sub aaa mov or sbb add sub add sub mov imul aas jle pop adc mov cmpsl hlt pop sub outsl sbb pop sbb das push mov inc inc add xor mov mov pop sub push push leave test stos stos sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push push push and xchg inc ja adc add adc add sub push imul mov mov or adc mov and push (bad) push inc fstpt xor js push cmovae in mov outsl outsl insb push push outsb popa jo push imul inc imul insb gs sub jge jb ss inc or or insb (bad) (bad) and push jo add dec add daa pusha pop mov jb outsb je dec fs dec push jo in adc outsl fs dec popa outsb fs dec lods push gs sub orl mov popa push inc fwait xchg or mov sbb dec and inc lods push adc inc repnz push popf inc imul adc cmc test ds pop jne adc pop addb xchg movsb xor xor cmp lock gs or ss or mov sub mov cs movzwl jns push imul inc inc cld inc inc push add ret stos or push (bad) fidivl xchg add jo xor jmp outsb push loopne sbbb scas inc sub inc pop sub cmp xlat cmp ret add sbb aaa stos or jmp mov inc xor outsl jbe addr16 sbb mov and gs xor cwtl adc adc add mov mov loop frstor inc sub mov mov orb aaa outsl mov insb or adc push in popa je insb xchg dec lea add add push xor add cmp mov outsl insl sub adc outsb or sbb push jmp inc inc into jae (bad) adc iret (bad) bound inc push and test or lock dec pop xchg (bad) sbb loop aas inc insb push add inc pop loope nop xor test insb or into mov pop adc sbb sub dec push push mov dec outsb arpl mov aas jecxz xor jns aas jns mov sbb arpl inc popf fwait nop rcrb jnp outsb dec add shlb lods inc insb mov test popa fwait jo mov sub js and or jnp and leave inc sarb dec out add fsubrs or popf adc js add (bad) mov inc dec mov je sub into fs addr16 inc dec popa jo sarl cmp lret pop mov and sbb (bad) pop in push jb and or test sub inc je and movsb sub stc add daa sub add jns mov mov adc xor push inc inc xchg insb sbb sub sub adc sbb sub jbe mov pop aas and pop outsl jp or jbe sbb mov xor cld pusha cwtl sbb jne adc dec rcrb dec sbb push ja dec sbb int push rcrl add dec pop iret fdivrs pop imul je jmp inc nop negb cltd fmul xor and mov push (bad) pusha add loopne jbe or or mov bound loop andb stos mov ja and push jne out push mov mov add push dec enter jb imul xor pop pushl lock cmp inc sub push in outsl jb push mov mov xchg rcll pop push xor aas test or pop ja dec dec loopne add jmp sbb push add adc push vpavgw imul popf push pop addr16 push les pop cmp dec or inc or adc cltd shr fisttpl int3 dec mov nop sub jnp fisub loop fisttpl cs cmp jmp je sbb add sbb jb,pn adc mov ret mov or add or inc cs mov ret daa rorb gs pop daa add dec add aas aaa cltd or add add add adc add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 